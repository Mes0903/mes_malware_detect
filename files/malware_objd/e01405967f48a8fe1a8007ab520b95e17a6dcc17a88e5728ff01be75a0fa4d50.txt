
e01405967f48a8fe1a8007ab520b95e17a6dcc17a88e5728ff01be75a0fa4d50.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x3f7d87ea
  4047be:	outs   dx,DWORD PTR ds:[esi]
  4047bf:	mov    dh,0x7e
  4047c1:	jle    0x404841
  4047c3:	jle    0x40479f
  4047c5:	jg     0x404845
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	adc    BYTE PTR [eax],cl
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	and    DWORD PTR [ebx],eax
  404872:	push   eax
  404873:	cmp    DWORD PTR [edi+0x6d18dfdb],0x24b2ef31
  40487d:	pop    eax
  40487e:	cmp    al,BYTE PTR [edi-0x324e898e]
  404884:	sti    
  404885:	fucomp st(6)
  404887:	mov    eax,0x6af39035
  40488c:	or     eax,0x9f572f11
  404891:	test   ebx,esi
  404893:	mov    esp,0xf33f6930
  404898:	imul   ebp,esp,0xffffff85
  40489b:	adc    edx,edi
  40489d:	jo     0x404886
  40489f:	add    eax,edx
  4048a1:	xrelease mov DWORD PTR [esp+ebx*8],edi
  4048a5:	cmc    
  4048a6:	test   al,0xd6
  4048a8:	es mov ecx,0xceefdf5b
  4048ae:	cdq    
  4048af:	xchg   edi,eax
  4048b0:	(bad)  
  4048b1:	jmp    0x11287387
  4048b6:	(bad)  
  4048b9:	arpl   si,dx
  4048bb:	das    
  4048bc:	test   BYTE PTR [ecx+0x4a],bh
  4048bf:	jb     0x4048d1
  4048c1:	icebp  
  4048c2:	mov    esp,0xd7310ffb
  4048c7:	shr    DWORD PTR [esi+0x349d7479],0x6a
  4048ce:	push   ss
  4048cf:	mov    BYTE PTR [ebx+0x3b],cl
  4048d2:	pushf  
  4048d3:	jmp    0x4048b9
  4048d5:	cmc    
  4048d6:	cli    
  4048d7:	inc    esi
  4048d8:	jno    0x404910
  4048da:	mov    al,0xa9
  4048dc:	fcomp  QWORD PTR ds:[edx]
  4048df:	lock sbb DWORD PTR [ebp-0x48619a35],eax
  4048e6:	adc    BYTE PTR [ebx],ah
  4048e8:	fcomp  QWORD PTR es:[eax+edx*2-0x6]
  4048ed:	out    dx,eax
  4048ee:	repnz sub ebp,ebp
  4048f1:	adc    eax,0xeb68c15f
  4048f6:	(bad)  
  4048f7:	(bad)  
  4048f8:	xor    BYTE PTR [edx-0x11be691f],cl
  4048fe:	out    0x82,al
  404900:	or     esi,DWORD PTR [ecx+edi*4+0x6d]
  404904:	test   cl,0x64
  404907:	cld    
  404908:	pop    ebx
  404909:	sbb    al,0xb9
  40490b:	hlt    
  40490c:	push   es
  40490d:	mov    es,eax
  40490f:	retf   0xdcc0
  404912:	into   
  404913:	pop    ds
  404914:	lahf   
  404915:	fsubr  DWORD PTR [eax-0x4a2837eb]
  40491b:	mov    dh,0x8a
  40491d:	add    DWORD PTR [ecx-0x37dd3ed5],edx
  404923:	lods   al,BYTE PTR ds:[esi]
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 dec ebx
  404956:	lea    esp,[esi+0x7e7fda57]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404992
  404962:	stos   BYTE PTR es:[edi],al
  404963:	mov    dh,0xae
  404965:	cmp    eax,0xef66279
  40496a:	stos   BYTE PTR es:[edi],al
  40496b:	popa   
  40496c:	mov    ecx,0x505ed893
  404971:	jl     0x404948
  404973:	xchg   edx,eax
  404974:	pop    esi
  404975:	mov    edi,0xe6fd2d60
  40497a:	inc    edi
  40497b:	cli    
  40497c:	jp     0x40495a
  40497e:	dec    BYTE PTR [esi+0x61]
  404981:	jle    0x404920
  404983:	push   0xa1968245
  404988:	es mov cl,0x35
  40498b:	ja     0x404959
  40498d:	mov    esi,0x690a2d30
  404992:	mov    ebp,0xf60baa0a
  404997:	add    eax,0xf11489fb
  40499c:	push   0x28
  40499e:	ret    0xfb34
  4049a1:	adc    ecx,0xf1938ba7
  4049a7:	das    
  4049a8:	je     0x40496f
  4049aa:	jne    0x4049ba
  4049ac:	cmp    al,0xb3
  4049ae:	mov    ds:0x27fca761,al
  4049b3:	push   cs
  4049b4:	aam    0x7e
  4049b6:	dec    esp
  4049b7:	sbb    al,0x7c
  4049b9:	loop   0x4049ea
  4049bb:	mov    ecx,DWORD PTR [eax+0x4b]
  4049be:	out    0xa3,eax
  4049c0:	lea    edx,[ecx-0x314d451d]
  4049c6:	lea    edx,[edi]
  4049c8:	stc    
  4049c9:	and    ch,ch
  4049cb:	mov    ecx,0xd8af394e
  4049d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d1:	sti    
  4049d2:	push   esi
  4049d3:	inc    ebx
  4049d4:	inc    edi
  4049d5:	outs   dx,DWORD PTR ds:[esi]
  4049d6:	adc    BYTE PTR [esi+0x5d],dh
  4049d9:	or     al,0x5d
  4049db:	mov    edi,0xc9191184
  4049e0:	sub    ah,BYTE PTR [eax-0x6aa5d10e]
  4049e6:	clc    
  4049e7:	inc    esi
  4049e8:	inc    edx
  4049e9:	mov    esp,0x92726fc0
  4049ee:	test   eax,0x37bcbb7a
  4049f3:	and    BYTE PTR [ecx],cl
  4049f5:	js     0x404a2e
  4049f7:	std    
  4049f8:	fnsave [edi-0x18c907b4]
  4049fe:	lods   eax,DWORD PTR ds:[esi]
  4049ff:	out    0xba,eax
  404a01:	stos   BYTE PTR es:[edi],al
  404a02:	add    BYTE PTR [esi+0x3f],ch
  404a05:	dec    ebx
  404a06:	or     al,0x68
  404a08:	daa    
  404a09:	repz pop es
  404a0b:	sub    bl,BYTE PTR [ecx-0x4afe22d6]
  404a11:	sbb    dh,ch
  404a13:	jmp    0xbcae0b58
  404a18:	xchg   esp,eax
  404a19:	mov    bl,0x0
  404a1b:	push   cs
  404a1c:	outs   dx,DWORD PTR ds:[esi]
  404a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1e:	icebp  
  404a1f:	outs   dx,DWORD PTR ds:[esi]
  404a20:	cs out 0x2,eax
  404a23:	sbb    eax,0xaad5e85
  404a28:	xchg   cl,ah
  404a2a:	add    eax,0x34bf194e
  404a2f:	in     al,0x13
  404a31:	push   eax
  404a32:	adc    ebp,esi
  404a34:	xor    esi,DWORD PTR [eax-0x76b3d389]
  404a3a:	dec    edx
  404a3b:	sbb    DWORD PTR [edi+0x4],esi
  404a3e:	or     DWORD PTR [ebx+0x38],ebp
  404a41:	sar    esi,cl
  404a43:	inc    esp
  404a44:	sti    
  404a45:	add    eax,0xbb8d7b66
  404a4a:	xchg   esp,eax
  404a4b:	mov    ecx,0xefd109b8
  404a50:	(bad)  
  404a51:	lea    ecx,[esi]
  404a53:	xor    al,0x19
  404a55:	sbb    BYTE PTR [ebx-0x232666b6],0x82
  404a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5d:	imul   ebp,esp,0x7a
  404a60:	sub    ah,BYTE PTR [ebx]
  404a62:	mov    al,ds:0xc4a9f1e8
  404a67:	push   es
  404a68:	dec    esp
  404a69:	push   ss
  404a6a:	jnp    0x404abf
  404a6c:	push   0x54d495ec
  404a71:	and    esi,edx
  404a73:	inc    ebx
  404a74:	retf   
  404a75:	ss (bad) 
  404a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a78:	push   ss
  404a79:	push   edx
  404a7a:	mov    al,ds:0x618abf14
  404a7f:	sar    DWORD PTR [ebp+0x7b],0x13
  404a83:	dec    eax
  404a84:	xchg   edi,eax
  404a85:	ds pop edx
  404a87:	mov    dl,0x1d
  404a89:	pop    ss
  404a8a:	mov    eax,0x61351f2d
  404a8f:	add    eax,DWORD PTR [esi+eax*8-0x3705228d]
  404a96:	xor    DWORD PTR [ebx-0x3e],ebp
  404a99:	retf   0xf83
  404a9c:	jmp    0x404a9f
  404a9e:	xchg   esp,eax
  404a9f:	dec    eax
  404aa0:	adc    dh,BYTE PTR [edi+0x74]
  404aa3:	pop    ebp
  404aa4:	pop    ss
  404aa5:	mov    ds:0x9bbac879,eax
  404aaa:	jns    0x404a3f
  404aac:	cmp    BYTE PTR [ebx+0x641c0d2],al
  404ab2:	scas   al,BYTE PTR es:[edi]
  404ab3:	pop    es
  404ab4:	ror    al,0x3
  404ab7:	pop    esi
  404ab8:	sub    BYTE PTR [eax+esi*1],bh
  404abb:	repz sub DWORD PTR [ebx],eax
  404abe:	(bad)  
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	out    0xae,al
  404ba6:	test   BYTE PTR [esi+0x7e7e7ca6],dh
  404bac:	fidivr DWORD PTR [edi+0x7e]
  404baf:	jle    0x404b83
  404bb1:	int    0xa6
  404bb3:	mov    ch,0x88
  404bb5:	sbb    cl,BYTE PTR [ecx+0x23c862f4]
  404bbb:	push   ebp
  404bbc:	cli    
  404bbd:	mov    DWORD PTR [ebx-0xb],ebx
  404bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc1:	dec    esi
  404bc2:	out    dx,al
  404bc3:	clc    
  404bc4:	push   cs
  404bc5:	fnstenv [ebx-0x77]
  404bc8:	or     al,0x78
  404bca:	loope  0x404b78
  404bcc:	loopne 0x404ba9
  404bce:	pop    esp
  404bcf:	add    eax,0xd79483ae
  404bd4:	push   edx
  404bd5:	adc    esp,esp
  404bd7:	jb     0x404be4
  404bd9:	sbb    BYTE PTR [edi-0xa],ah
  404bdc:	mov    edi,0xa0aa9601
  404be1:	nop
  404be2:	sahf   
  404be3:	mov    DWORD PTR [ebx-0x1c],ecx
  404be6:	pop    ds
  404be7:	dec    esi
  404be8:	sbb    DWORD PTR [edi+edi*1],0xffffffdf
  404bec:	pop    edx
  404bed:	popf   
  404bee:	cs mov al,0x94
  404bf1:	dec    ecx
  404bf2:	push   0x63
  404bf4:	pop    es
  404bf5:	out    dx,al
  404bf6:	mov    dh,0xe9
  404bf8:	mov    ecx,0x912ec77a
  404bfd:	int    0xca
  404bff:	test   al,0x6f
  404c01:	or     ebx,edx
  404c03:	sbb    al,0x9a
  404c05:	cmp    ah,BYTE PTR fs:[ebx-0x47599a4]
  404c0c:	push   eax
  404c0d:	outs   dx,BYTE PTR cs:[esi]
  404c0f:	ret    0x2f3d
  404c12:	push   0xa210f353
  404c17:	std    
  404c18:	inc    esp
  404c19:	push   0x54
  404c1b:	push   esi
  404c1c:	xchg   ecx,eax
  404c1d:	hlt    
  404c1e:	shl    DWORD PTR [edi+0x41f4fc43],cl
  404c24:	xor    al,0x34
  404c26:	(bad)  
  404c27:	aam    0x44
  404c29:	out    dx,al
  404c2a:	dec    ebx
  404c2b:	xchg   ebx,eax
  404c2c:	sbb    DWORD PTR [edi+0x6a47b720],0x8e1e866f
  404c36:	fadd   DWORD PTR [ebx+0x2a]
  404c39:	dec    eax
  404c3a:	add    al,0xcf
  404c3c:	jo     0x404cb5
  404c3e:	int3   
  404c3f:	dec    ebp
  404c40:	in     al,dx
  404c41:	xor    al,0xb9
  404c43:	cmp    BYTE PTR [eax+eax*2-0x6205634a],dl
  404c4a:	cmp    ebp,DWORD PTR [eax]
  404c4c:	pop    ebx
  404c4d:	add    al,0xb8
  404c4f:	dec    ecx
  404c50:	rol    esp,1
  404c52:	mov    ch,0x20
  404c54:	rol    BYTE PTR [ebp+0x4a],1
  404c57:	sbb    al,0xa
  404c59:	loopne 0x404c46
  404c5b:	xchg   esp,eax
  404c5c:	jmp    0x404c30
  404c5e:	jae    0x404cde
  404c60:	push   edx
  404c61:	push   ecx
  404c62:	arpl   WORD PTR [ebx+edi*2],di
  404c65:	jbe    0x404ca2
  404c67:	out    dx,eax
  404c68:	mov    bl,0x1d
  404c6a:	and    eax,0x37e7239c
  404c6f:	jns    0x404c75
  404c71:	test   al,0x83
  404c73:	(bad)  
  404c74:	imul   edi,DWORD PTR [esi+0x28],0xd5b13089
  404c7b:	adc    al,0x61
  404c7d:	xchg   ebp,eax
  404c7e:	push   esi
  404c7f:	aas    
  404c80:	repz fsub QWORD PTR [eax-0x5f]
  404c84:	fldcw  WORD PTR [eax+eiz*4-0x4c445abd]
  404c8b:	and    DWORD PTR [esi-0x23],0xe518c5aa
  404c92:	pop    eax
  404c93:	(bad)  
  404c94:	jle    0x404c1d
  404c96:	jle    0x404cbd
  404c98:	shl    BYTE PTR [ebx+0x5e860882],cl
  404c9e:	jp     0x404c58
  404ca0:	or     eax,0x8cff190a
  404ca5:	aad    0xe2
  404ca7:	aam    0xea
  404ca9:	cdq    
  404caa:	push   ss
  404cab:	in     eax,dx
  404cac:	out    0x67,al
  404cae:	jns    0x404c5a
  404cb0:	xchg   BYTE PTR [edx-0x38],cl
  404cb3:	div    eax
  404cb5:	(bad)  
  404cb6:	mov    DWORD PTR [ebx-0x7d],ecx
  404cb9:	rcl    bh,1
  404cbb:	(bad)  
  404cbc:	clc    
  404cbd:	or     al,bl
  404cbf:	std    
  404cc0:	cwde   
  404cc1:	add    BYTE PTR [edi-0x168cba7f],0x2a
  404cc8:	xchg   ebp,eax
  404cc9:	aaa    
  404cca:	mov    es,WORD PTR [esp+edi*8+0x60bcf04b]
  404cd1:	psllw  mm0,QWORD PTR [esi+0x6c1afdfb]
  404cd8:	xor    ch,BYTE PTR [ecx]
  404cda:	je     0x404c8e
  404cdc:	push   eax
  404cdd:	jge    0x404ca8
  404cdf:	inc    eax
  404ce0:	pop    esi
  404ce1:	xor    BYTE PTR [edi],bh
  404ce3:	shl    BYTE PTR [ebp+0x1cd09345],0xb0
  404cea:	sub    eax,0x87281af8
  404cef:	jle    0x404d52
  404cf1:	ss push edi
  404cf3:	fdivr  st,st(4)
  404cf5:	jmp    0xfd12644c
  404cfa:	iret   
  404cfb:	xchg   esi,eax
  404cfc:	pop    ebp
  404cfd:	mov    ecx,0x3b862033
  404d02:	fcomp  DWORD PTR [ebx]
  404d04:	pop    esi
  404d05:	mov    edi,0x22dc97c7
  404d0a:	inc    esi
  404d0b:	lock xor eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e26
  404e15:	cli    
  404e16:	adc    al,0x11
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404de1
  404e21:	je     0x404e45
  404e23:	jo     0x404e5e
  404e25:	in     eax,0x76
  404e27:	adc    DWORD PTR [ebp+edi*1-0x1fd67530],edi
  404e2e:	push   edi
  404e2f:	push   ebp
  404e30:	out    0x7c,eax
  404e32:	mov    edx,0xb38ccc79
  404e37:	xor    DWORD PTR [esi-0x2f],edx
  404e3a:	mov    eax,ds:0x5e49eb3d
  404e3f:	mov    dh,0xe1
  404e41:	push   es
  404e42:	sub    eax,0x70f08708
  404e47:	outs   dx,BYTE PTR ds:[esi]
  404e48:	scas   eax,DWORD PTR es:[edi]
  404e49:	repnz mov es,WORD PTR [ecx+edx*2]
  404e4d:	retf   
  404e4e:	sub    al,0x64
  404e50:	mov    bh,0x65
  404e52:	mov    esp,0x86a45c58
  404e57:	jno    0x404e27
  404e59:	iret   
  404e5a:	push   esp
  404e5b:	dec    edi
  404e5c:	push   cs
  404e5d:	(bad)  
  404e5e:	mov    BYTE PTR [ebp-0x50],bh
  404e61:	cs ror cl,cl
  404e64:	aad    0xcd
  404e66:	adc    al,0xdc
  404e68:	dec    edi
  404e69:	add    DWORD PTR [eax+esi*4+0x3a],0xa424b19d
  404e71:	daa    
  404e72:	jecxz  0x404e15
  404e74:	jmp    0x492ca5e6
  404e79:	sbb    eax,0x323afe4a
  404e7e:	sub    eax,0x63e7f741
  404e83:	sahf   
  404e84:	aad    0xdc
  404e86:	out    0xd2,al
  404e88:	clc    
  404e89:	das    
  404e8a:	sti    
  404e8b:	or     dl,BYTE PTR [ebx+edx*4]
  404e8e:	ret    0x5b57
  404e91:	sbb    BYTE PTR [eax+ecx*1+0x4],bl
  404e95:	mov    esi,esp
  404e97:	loope  0x404f03
  404e99:	scas   al,BYTE PTR es:[edi]
  404e9a:	and    DWORD PTR [esi+0x103fa67e],edx
  404ea0:	nop
  404ea1:	mov    al,0x4e
  404ea3:	test   DWORD PTR [esi],eax
  404ea5:	ins    BYTE PTR es:[edi],dx
  404ea6:	arpl   WORD PTR [edx],di
  404ea8:	(bad)  
  404ea9:	dec    esp
  404eaa:	dec    esp
  404eab:	cs sahf 
  404ead:	or     al,0xa5
  404eaf:	and    eax,0x983af2d4
  404eb4:	enter  0x881e,0xc9
  404eb8:	push   ebp
  404eb9:	xchg   esi,edx
  404ebb:	jbe    0x404e95
  404ebd:	sbb    dh,BYTE PTR [edx]
  404ebf:	adc    al,0x6d
  404ec1:	pusha  
  404ec2:	mov    cl,0xe6
  404ec4:	mov    bh,0x10
  404ec6:	mov    al,0xcb
  404ec8:	or     al,0x44
  404eca:	sub    al,0x69
  404ecc:	ins    BYTE PTR es:[edi],dx
  404ecd:	xor    ch,BYTE PTR [eax]
  404ecf:	iret   
  404ed0:	cwde   
  404ed1:	and    eax,0xf98631ce
  404ed6:	fidiv  WORD PTR [ecx+0x15f95290]
  404edc:	and    BYTE PTR [eax],0x72
  404edf:	js     0x404eba
  404ee1:	imul   ebp,DWORD PTR [ecx+0x35],0xffffffc1
  404ee5:	mov    bl,0xf1
  404ee7:	xchg   ecx,eax
  404ee8:	push   es
  404ee9:	leave  
  404eea:	jmp    0xcb2a:0x99c161f5
  404ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef2:	into   
  404ef3:	dec    ebp
  404ef4:	arpl   WORD PTR [edi+0xb4f5791],cx
  404efa:	add    BYTE PTR [ecx-0x43],bl
  404efd:	dec    edx
  404efe:	jbe    0x404ef8
  404f00:	jge    0x404f65
  404f02:	aaa    
  404f03:	or     edi,DWORD PTR [ebx]
  404f05:	sti    
  404f06:	pop    esi
  404f07:	loop   0x404ee7
  404f09:	inc    ecx
  404f0a:	aam    0x8d
  404f0c:	test   BYTE PTR [edi+0x3616ed51],bh
  404f12:	fnsave [esi]
  404f14:	div    BYTE PTR [ebp-0x7]
  404f17:	not    DWORD PTR [eax-0x2d]
  404f1a:	iret   
  404f1b:	and    eax,0x229b0df3
  404f20:	ins    BYTE PTR es:[edi],dx
  404f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f22:	(bad)  
  404f23:	lods   eax,DWORD PTR ds:[esi]
  404f24:	add    DWORD PTR [ecx-0x7a],eax
  404f27:	pop    esp
  404f28:	and    al,0xb7
  404f2a:	xchg   BYTE PTR [esi-0xb6a5497],ah
  404f30:	retf   0x5004
  404f33:	enter  0xc4c2,0x72
  404f37:	xor    DWORD PTR [esi-0x6e],edx
  404f3a:	rcr    BYTE PTR [ebx-0x46],1
  404f3d:	call   0x2baa:0x774098f5
  404f44:	stos   BYTE PTR es:[edi],al
  404f45:	shl    BYTE PTR [ecx],1
  404f47:	mov    dh,0x9
  404f49:	pusha  
  404f4a:	push   esp
  404f4b:	out    dx,al
  404f4c:	add    al,0xc2
  404f4e:	sbb    eax,0x1894fcaf
  404f53:	cmp    ah,BYTE PTR [ecx]
  404f55:	pop    ax
  404f57:	xchg   BYTE PTR [ecx-0x34b2e8f8],cl
  404f5d:	pushf  
  404f5e:	jle    0x404f64
  404f60:	popa   
  404f61:	sub    BYTE PTR [esi+eiz*1],cl
  404f64:	jge    0x404fb9
  404f66:	popa   
  404f67:	push   0xe1e28964
  404f6c:	dec    esp
  404f6d:	outs   dx,DWORD PTR ds:[esi]
  404f6e:	push   esp
  404f6f:	fcmovu st,st(1)
  404f71:	xchg   edi,eax
  404f72:	mov    ebx,0x3f2b6968
  404f77:	je     0x404f5b
  404f79:	pop    edx
  404f7a:	pushf  
  404f7b:	ja     0x404fcd
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x6ff4fcde],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x40503c
  404ff9:	ss jbe 0x405074
  404ffc:	or     al,0xb9
  404ffe:	inc    edx
  404fff:	and    eax,0x22b25ddf
  405004:	cdq    
  405005:	bound  edi,QWORD PTR [eax+0x67ce6974]
  40500b:	les    ebp,FWORD PTR [ebx-0x9eac53c]
  405011:	in     al,0xc3
  405013:	jmp    0x404fd3
  405015:	jno    0x404fa3
  405017:	daa    
  405018:	pop    esp
  405019:	adc    cl,BYTE PTR ss:[edi+0x39]
  40501d:	cmc    
  40501e:	jnp    0x405025
  405020:	ins    DWORD PTR es:[edi],dx
  405021:	fcmove st,st(0)
  405023:	mov    ds:0x784998b8,al
  405028:	xchg   esp,eax
  405029:	outs   dx,BYTE PTR ds:[esi]
  40502a:	xlat   BYTE PTR ds:[ebx]
  40502b:	dec    ebp
  40502c:	mov    WORD PTR [esi+0x4c],ss
  40502f:	push   ds
  405030:	cmp    ch,bl
  405032:	adc    al,0x10
  405034:	pop    es
  405035:	and    al,0x5
  405037:	mov    bh,0xf6
  405039:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40503b:	fst    DWORD PTR [ebx-0x1e7b5048]
  405041:	dec    edx
  405042:	cwde   
  405043:	pushf  
  405044:	pop    es
  405045:	pop    es
  405046:	jl     0x40503d
  405048:	push   ecx
  405049:	std    
  40504a:	cwde   
  40504b:	push   eax
  40504c:	fs inc esi
  40504e:	daa    
  40504f:	call   0xb72ad7cb
  405054:	push   cs
  405055:	cld    
  405056:	enter  0x8c1f,0x9b
  40505a:	ret    
  40505b:	mov    dl,BYTE PTR [ebx-0x215e6250]
  405061:	add    DWORD PTR [ebx+esi*8+0x55],eax
  405065:	retf   
  405066:	mov    ds:0xb7adf10d,al
  40506b:	pop    edx
  40506c:	test   al,0x93
  40506e:	mov    esi,0x80bbb955
  405073:	sub    DWORD PTR [esi-0x1f18951c],ebx
  405079:	stos   DWORD PTR es:[edi],eax
  40507a:	das    
  40507b:	cwde   
  40507c:	icebp  
  40507d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40507e:	popf   
  40507f:	mov    ebp,0x95b6bbfe
  405084:	ret    0x647f
  405087:	data16 outs dx,BYTE PTR ds:[esi]
  405089:	in     eax,dx
  40508a:	add    eax,0x941d8ffd
  40508f:	xchg   esp,eax
  405090:	adc    eax,0x3dbdc305
  405095:	mov    esp,0xa7f975ab
  40509a:	mov    edi,0x2b69bad
  40509f:	ret    
  4050a0:	nop
  4050a1:	test   al,0xff
  4050a3:	test   eax,0xbd361be8
  4050a8:	cmc    
  4050a9:	pop    eax
  4050aa:	mov    gs,WORD PTR [edx+0x7e62b531]
  4050b0:	xor    eax,0x7e6845b2
  4050b5:	mov    esp,0xbb430618
  4050ba:	cmp    eax,0x69bfa7c8
  4050bf:	and    BYTE PTR [edi+0x44],bh
  4050c2:	popa   
  4050c3:	test   eax,0xd52185dd
  4050c8:	mov    ch,0xa9
  4050ca:	fs cdq 
  4050cc:	push   es
  4050cd:	jmp    0x4050d2
  4050cf:	xchg   ecx,eax
  4050d0:	cmp    DWORD PTR [ebx],0xffffffb8
  4050d3:	dec    esp
  4050d4:	cmp    al,0x23
  4050d6:	popw   ss
  4050d8:	in     eax,dx
  4050d9:	push   esi
  4050da:	and    esi,DWORD PTR [eax+0x5d]
  4050dd:	movsx  edi,ax
  4050e0:	dec    ebx
  4050e1:	dec    esp
  4050e2:	xor    DWORD PTR [ebp-0x69],eax
  4050e5:	jne    0x40510e
  4050e7:	aam    0xc6
  4050e9:	cmp    eax,0xcedcb6de
  4050ee:	jnp    0x405156
  4050f0:	mov    bl,0x77
  4050f3:	(bad)  
  4050f4:	xchg   edx,eax
  4050f5:	mov    bl,ah
  4050f7:	ret    
  4050f8:	in     eax,dx
  4050f9:	in     al,dx
  4050fa:	xchg   ebp,eax
  4050fb:	sbb    bl,bl
  4050fd:	dec    ecx
  4050fe:	jbe    0x4050ef
  405100:	fs push ds
  405102:	fst    QWORD PTR ds:[ebx-0x3f4f68ab]
  405109:	cmp    ecx,DWORD PTR [eax-0x67]
  40510c:	loopne 0x405133
  40510e:	sbb    esi,DWORD PTR [edi]
  405110:	sub    ch,BYTE PTR [ebp+eax*8+0x75]
  405114:	fs js  0x405142
  405117:	sub    dl,ah
  405119:	or     edx,DWORD PTR [esi+0x16]
  40511c:	pop    edi
  40511d:	int    0xbf
  40511f:	pop    ebp
  405120:	mov    bh,0x9f
  405122:	jns    0x405141
  405124:	js     0x405142
  405126:	mov    ch,0xdd
  405128:	jg     0x4050dc
  40512a:	pop    ds
  40512b:	mov    esp,0x1f7d2708
  405130:	mov    edx,0x2b4bb6b7
  405135:	pop    es
  405136:	idiv   BYTE PTR [eax]
  405138:	jmp    0x1236a262
  40513d:	pop    edx
  40513e:	jb     0x4050f0
  405140:	hlt    
  405141:	xor    eax,0x91a835d0
  405146:	sar    DWORD PTR [esi-0x46],0xcb
  40514a:	sbb    BYTE PTR [edx],cl
  40514c:	loope  0x4050dc
  40514e:	jecxz  0x405172
  405150:	push   0x50cca0cb
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x4df0698e]
  4051c5:	mov    bl,0xd3
  4051c7:	pop    edx
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x4051ee
  4051d1:	pusha  
  4051d2:	cmp    bl,ah
  4051d4:	arpl   WORD PTR [ebx-0x7573a281],sp
  4051da:	js     0x4051b5
  4051dc:	in     al,0xb1
  4051de:	jae    0x405170
  4051e0:	inc    esi
  4051e1:	xor    bl,BYTE PTR [ecx-0x7b29cb3f]
  4051e7:	push   esi
  4051e8:	push   0xfffffff2
  4051ea:	and    dh,bl
  4051ec:	hlt    
  4051ed:	sub    edx,0xffffffe0
  4051f0:	xchg   ecx,eax
  4051f1:	fld    TBYTE PTR [eax-0x33a62c6d]
  4051f7:	enter  0xded8,0x7c
  4051fb:	dec    edx
  4051fc:	dec    ebp
  4051fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051fe:	adc    BYTE PTR [eax-0x33],ah
  405201:	ins    BYTE PTR es:[edi],dx
  405202:	fdiv   DWORD PTR [ebx]
  405204:	mov    BYTE PTR [ebp+0x3d],ah
  405207:	push   edx
  405208:	call   0xb9127228
  40520d:	adc    ch,cl
  40520f:	outs   dx,BYTE PTR ds:[esi]
  405210:	fldenv [eax*8+0x7e9b32b4]
  405217:	jecxz  0x405291
  405219:	sbb    DWORD PTR ds:0xb6714573,0xb30c19aa
  405223:	(bad)  [ebx-0x62c40e0d]
  405229:	std    
  40522a:	or     edi,DWORD PTR [ebp-0x16]
  40522d:	cmp    BYTE PTR [ebx+0x57],bl
  405230:	fs sub bh,0xbb
  405234:	xchg   esp,eax
  405235:	inc    esi
  405236:	(bad)
  405239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523a:	std    
  40523b:	and    ebx,0xa383e0c5
  405241:	mov    bh,0xd0
  405243:	add    ebx,ecx
  405245:	mov    ebx,DWORD PTR [eax]
  405247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405248:	pushf  
  405249:	and    al,0x9b
  40524b:	mov    esp,0x7e15a642
  405250:	pusha  
  405251:	pop    es
  405252:	ins    DWORD PTR es:[edi],dx
  405253:	pushf  
  405254:	shl    esp,0xce
  405257:	call   0x578c7d3f
  40525c:	adc    eax,0x3aec3268
  405261:	pop    es
  405262:	fldenv [eax]
  405264:	push   esp
  405265:	loope  0x4052c6
  405267:	rol    bl,cl
  405269:	out    dx,al
  40526a:	arpl   WORD PTR [edi+0x50],dx
  40526d:	ja     0x4052d8
  40526f:	inc    edi
  405270:	ret    
  405271:	leave  
  405272:	sbb    al,ah
  405274:	xchg   ebx,eax
  405275:	xchg   ebx,eax
  405276:	ds fadd st,st(6)
  405279:	call   0x8e9a:0x9297fe38
  405280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405281:	call   0xbee1:0x27a92bdc
  405288:	mov    ds:0x1fa1eaa3,al
  40528d:	push   0x1b
  40528f:	xor    BYTE PTR [eax],al
  405291:	lods   eax,DWORD PTR ds:[esi]
  405292:	call   0xc580:0xbb9f5858
  405299:	inc    eax
  40529a:	lock jge 0x40531c
  40529d:	and    cl,BYTE PTR [edi-0x44f82d55]
  4052a3:	mov    bl,0x53
  4052a5:	in     eax,0x3
  4052a7:	push   cs
  4052a8:	into   
  4052a9:	pop    esi
  4052aa:	inc    eax
  4052ab:	mov    ds:0xb91ee92d,al
  4052b0:	loope  0x405293
  4052b2:	add    eax,ecx
  4052b4:	add    BYTE PTR [ecx],0xf5
  4052b7:	lea    esp,[eax]
  4052b9:	jge    0x4052da
  4052bb:	das    
  4052bc:	(bad)  
  4052bd:	leave  
  4052be:	mov    ebx,0xec451ba3
  4052c3:	inc    ecx
  4052c4:	imul   ebx,DWORD PTR [edx+0x490487fa],0x9
  4052cb:	cld    
  4052cc:	leave  
  4052cd:	sub    al,0xf6
  4052cf:	fadd   DWORD PTR [edi-0x52dc36bf]
  4052d5:	adc    ebx,edx
  4052d7:	call   0x80d4:0xbcb383d9
  4052de:	dec    eax
  4052df:	rol    DWORD PTR [ebx-0x11],0xe2
  4052e3:	push   ss
  4052e4:	fldl2e 
  4052e6:	xor    BYTE PTR [esi-0x217623bc],cl
  4052ec:	pop    ebx
  4052ed:	fld    QWORD PTR [eax]
  4052ef:	inc    edi
  4052f0:	cs push ecx
  4052f2:	push   ebx
  4052f3:	ins    DWORD PTR es:[edi],dx
  4052f4:	fcomp  QWORD PTR [edi]
  4052f6:	mov    eax,ds:0x2b3a1ffa
  4052fb:	push   ebx
  4052fc:	je     0x4052d7
  4052fe:	jl     0x4052fb
  405300:	push   ss
  405301:	sub    DWORD PTR [edx+eax*1+0x544447a0],0x1
  405309:	push   esi
  40530a:	xchg   edi,eax
  40530b:	in     al,dx
  40530c:	fld    DWORD PTR [ebx-0x4aa997e5]
  405312:	outs   dx,DWORD PTR ds:[esi]
  405313:	jl     0x4052f8
  405315:	cdq    
  405316:	sbb    eax,0xa80853bb
  40531b:	jp     0x405360
  40531d:	int3   
  40531e:	mov    dh,BYTE PTR [eax-0x7b]
  405321:	mov    esp,0xac11fbc
  405326:	daa    
  405327:	pop    esp
  405328:	cs mov eax,0xff50d113
  40532e:	jne    0x405328
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	push   esp
  40534c:	adc    eax,0x76168c88
  405351:	jle    0x4053d1
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x405328
  405358:	mov    esp,0x453cca86
  40535d:	not    DWORD PTR [ecx]
  40535f:	idiv   BYTE PTR [esi]
  405361:	les    esp,FWORD PTR [esi]
  405363:	xor    edx,edi
  405365:	add    bh,BYTE PTR [eax]
  405367:	and    DWORD PTR [edi-0x39],ebp
  40536a:	pop    esp
  40536b:	in     al,dx
  40536c:	and    BYTE PTR [edx],bh
  40536e:	pop    edi
  40536f:	dec    ebp
  405370:	mov    ds:0xcbcae682,eax
  405375:	in     al,0xfd
  405377:	mov    BYTE PTR [ebx+ebp*4-0x13ea14c7],dl
  40537e:	add    edi,edi
  405380:	adc    eax,0x68ef1e67
  405385:	push   esi
  405386:	mov    esp,0x633c563b
  40538b:	iret   
  40538c:	mov    eax,0x82b32c86
  405391:	jge    0x4053f6
  405393:	jns    0x4053e4
  405395:	ins    BYTE PTR es:[edi],dx
  405396:	mov    bl,0xa9
  405398:	push   ebx
  405399:	push   edx
  40539a:	ss dec ebx
  40539c:	jp     0x405350
  40539e:	xchg   BYTE PTR [edi+0x6],bh
  4053a1:	rcr    BYTE PTR [ecx-0x80],cl
  4053a4:	pop    ebx
  4053a5:	xchg   esp,eax
  4053a6:	xchg   esp,ebx
  4053a8:	cwde   
  4053a9:	xor    ebx,DWORD PTR [ecx-0x342f7cdd]
  4053af:	xchg   edi,eax
  4053b0:	mov    bh,BYTE PTR [edi-0x75]
  4053b3:	lods   eax,DWORD PTR ds:[esi]
  4053b4:	bound  edx,QWORD PTR [edi-0x30]
  4053b7:	jnp    0x405350
  4053b9:	fistp  QWORD PTR [edi+0x31]
  4053bc:	test   DWORD PTR [esp+edi*2-0x5ef38df6],eax
  4053c3:	pusha  
  4053c4:	sbb    BYTE PTR [ebx-0x1c],dh
  4053c7:	and    bl,BYTE PTR ds:0x1a3a1c2b
  4053cd:	xor    al,0xb4
  4053cf:	test   dh,0x60
  4053d2:	mov    esi,gs
  4053d4:	and    DWORD PTR [edx],ebx
  4053d6:	cmovl  edi,DWORD PTR [eax+0x6a]
  4053da:	fwait
  4053db:	mov    eax,ds:0x3e023be0
  4053e0:	test   ah,bh
  4053e2:	pop    edi
  4053e3:	pop    esi
  4053e4:	mov    ?,WORD PTR [edx]
  4053e6:	adc    BYTE PTR [edx-0x6],0x58
  4053ea:	and    eax,0xa201b06d
  4053ef:	aad    0x36
  4053f1:	(bad)  
  4053f2:	sbb    ch,BYTE PTR ds:0x3f2bc0cb
  4053f8:	repz pop ss
  4053fa:	sbb    ch,cl
  4053fc:	mov    esp,0xb54c9ba2
  405401:	xsave  [ebx+0x76e6de63]
  405408:	mov    edi,0xd3f70fd1
  40540d:	aaa    
  40540e:	add    eax,0xfbfd1836
  405413:	cmp    dh,BYTE PTR [eax-0x2bf9e6cf]
  405419:	ret    0x25ff
  40541c:	dec    edi
  40541d:	sbb    eax,0x97f423b1
  405422:	fisub  DWORD PTR [edi]
  405424:	das    
  405425:	and    al,0x3f
  405427:	in     al,0x4e
  405429:	das    
  40542a:	or     edx,edi
  40542c:	enter  0x838e,0x28
  405430:	les    edi,FWORD PTR [ebx+0x3c]
  405433:	pushf  
  405434:	xor    cl,BYTE PTR [edx-0x3]
  405437:	in     eax,dx
  405438:	out    0x96,eax
  40543a:	test   DWORD PTR [esi+0x12487dba],eax
  405440:	lock test al,0xb6
  405443:	and    eax,0xd7c10ef9
  405448:	sbb    bh,BYTE PTR [edi+eiz*4-0x5e]
  40544c:	pop    eax
  40544d:	sub    BYTE PTR [ebx+0x6c5136f0],bl
  405453:	loope  0x405458
  405455:	xchg   BYTE PTR [ecx],cl
  405457:	push   es
  405458:	fucomp st(0)
  40545a:	cwde   
  40545b:	push   ds
  40545c:	test   ecx,0x62e1756b
  405462:	push   ecx
  405463:	sahf   
  405464:	rcr    BYTE PTR [ebx+0x7da0b822],cl
  40546a:	mov    bh,0x32
  40546c:	mov    edi,DWORD PTR [ecx+0x65]
  40546f:	mov    bh,0xad
  405471:	pop    esp
  405472:	pop    ds
  405473:	push   ss
  405474:	cs jge 0x405454
  405477:	jg     0x4054d2
  405479:	(bad)  [edx]
  40547b:	cmc    
  40547c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40547d:	jp     0x4054c8
  40547f:	rcl    BYTE PTR [ecx+0x41],1
  405482:	jb     0x4054d3
  405484:	in     al,dx
  405485:	pshufw mm7,QWORD PTR [esi+0x28e835e5],0x75
  40548d:	push   eax
  40548e:	push   edi
  40548f:	stos   DWORD PTR es:[edi],eax
  405490:	xchg   ebp,eax
  405491:	iret   
  405492:	push   0xfffffff7
  405494:	js     0x405464
  405496:	jmp    0x4054d5
  405498:	mov    BYTE PTR [ebp+0x2],bh
  40549b:	sti    
  40549c:	push   ds
  40549d:	adc    BYTE PTR [edi-0xa],0x84
  4054a1:	sub    ah,dh
  4054a3:	pop    edx
  4054a4:	aad    0xe5
  4054a6:	jae    0x40542e
  4054a8:	xchg   edi,eax
  4054a9:	iret   
  4054aa:	daa    
  4054ab:	push   0xc41e0455
  4054b0:	ret    
  4054b1:	xor    BYTE PTR [edx-0x18],dh
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x4a],0xffffffea
  40550f:	push   ebp
  405510:	ins    BYTE PTR es:[edi],dx
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x405537
  40551a:	jb     0x4054b4
  40551c:	push   edx
  40551d:	lahf   
  40551e:	adc    al,0x54
  405520:	(bad)  
  405521:	jmp    0xffd54923
  405526:	jns    0x4054e3
  405528:	adc    BYTE PTR [eax-0x10703a28],bh
  40552e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40552f:	xor    al,0xbf
  405531:	ins    BYTE PTR es:[edi],dx
  405532:	inc    ebp
  405533:	and    DWORD PTR [edx+0x17],ebx
  405536:	hlt    
  405537:	pop    ebp
  405538:	pop    es
  405539:	(bad)  
  40553a:	outs   dx,DWORD PTR ds:[esi]
  40553b:	retf   0x2b64
  40553e:	inc    edx
  40553f:	ja     0x40552a
  405541:	iret   
  405542:	inc    esp
  405543:	mov    esp,0xabdff662
  405548:	sahf   
  405549:	sub    eax,0x54a1b7df
  40554e:	cli    
  40554f:	stc    
  405550:	mov    eax,ds:0xe4c71216
  405555:	dec    edx
  405556:	retf   
  405557:	push   ebx
  405558:	cmc    
  405559:	jmp    0x4055d4
  40555b:	mov    esp,0xbb6a6218
  405560:	push   0xf13a1c3e
  405565:	mov    ds:0x917a822f,eax
  40556a:	call   0xf1b04e40
  40556f:	das    
  405570:	lods   al,BYTE PTR ds:[esi]
  405571:	sbb    eax,0x63dd3d7c
  405576:	xchg   ebp,eax
  405577:	rcr    BYTE PTR [edi],cl
  405579:	cwde   
  40557a:	inc    ebp
  40557b:	data16 test al,0xfd
  40557e:	pop    es
  40557f:	and    al,0xd6
  405581:	jmp    0x405526
  405583:	addr16 pop esp
  405585:	xor    al,0x60
  405587:	ret    
  405588:	inc    edi
  405589:	xchg   ebx,eax
  40558a:	pusha  
  40558b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40558c:	(bad)  
  40558d:	cmp    al,BYTE PTR [esi]
  40558f:	dec    esp
  405590:	lods   eax,DWORD PTR ds:[esi]
  405591:	cli    
  405592:	out    0x6c,al
  405594:	mov    dh,0x27
  405596:	xor    BYTE PTR [eax-0x7ef2d906],0xb3
  40559d:	mul    DWORD PTR [ebp-0x1e542b7a]
  4055a3:	frstor [eax-0x23]
  4055a6:	pop    ebx
  4055a7:	ja     0x405583
  4055a9:	sbb    al,0xda
  4055ab:	(bad)  
  4055ac:	mov    dh,0xed
  4055ae:	dec    eax
  4055af:	ds (bad) 
  4055b1:	mov    gs:0x9763b217,al
  4055b7:	pop    esp
  4055b8:	scas   eax,DWORD PTR es:[edi]
  4055b9:	and    esp,DWORD PTR [ebx+0x63]
  4055bc:	mov    dl,BYTE PTR [esi+ebx*4+0x5a]
  4055c0:	add    DWORD PTR [edi+eiz*1-0x21],edi
  4055c4:	sub    al,0x4d
  4055c6:	xchg   ecx,eax
  4055c7:	data16 mov cl,0x89
  4055ca:	fwait
  4055cb:	adc    DWORD PTR [esp+esi*2],esi
  4055ce:	cwde   
  4055cf:	aaa    
  4055d0:	mov    cl,0x4b
  4055d2:	into   
  4055d3:	ins    BYTE PTR es:[edi],dx
  4055d4:	mov    ebp,0x100c8257
  4055d9:	adc    BYTE PTR [ecx-0xd],ah
  4055dc:	inc    edi
  4055dd:	dec    esp
  4055de:	inc    ebx
  4055df:	stc    
  4055e0:	out    0xb9,eax
  4055e2:	gs cwde 
  4055e4:	and    BYTE PTR [eax-0x700f1641],0xe1
  4055eb:	push   ds
  4055ec:	and    eax,0xddfb835f
  4055f1:	inc    ecx
  4055f2:	addr16 xchg edx,eax
  4055f4:	push   esp
  4055f5:	add    bl,BYTE PTR [ecx+0x69655fc2]
  4055fb:	(bad)  
  4055fc:	sbb    al,BYTE PTR [eax+0x43]
  4055ff:	inc    edi
  405600:	icebp  
  405601:	into   
  405602:	aas    
  405603:	out    0xba,al
  405605:	dec    edi
  405606:	adc    DWORD PTR [ebp*8-0x44318cb0],eax
  40560d:	mov    edi,0x9f449b7e
  405612:	pop    edx
  405613:	std    
  405614:	aas    
  405615:	ds hlt 
  405617:	clc    
  405618:	call   0x1612:0xb886decd
  40561f:	inc    eax
  405620:	fsub   st(1),st
  405622:	jge    0x40567e
  405624:	dec    esp
  405625:	fs test eax,0x98aa2ec4
  40562b:	loopne 0x4055ad
  40562d:	jge    0x40565b
  40562f:	mov    WORD PTR [ebx+ebp*8+0x5fa52816],cs
  405636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405637:	fwait
  405638:	scas   al,BYTE PTR es:[edi]
  405639:	or     al,0x60
  40563b:	addr16 cld 
  40563d:	jae    0x405698
  40563f:	jp     0x4055d8
  405641:	sbb    eax,DWORD PTR [edx+0x76a7fc4f]
  405647:	mov    eax,ds:0x167e7892
  40564c:	xor    eax,DWORD PTR [ecx+0x66]
  40564f:	xor    al,0xed
  405651:	inc    eax
  405652:	pop    ebx
  405653:	inc    esi
  405654:	dec    ecx
  405655:	jp     0x405635
  405657:	xor    cl,al
  405659:	push   ds
  40565a:	bound  ebp,QWORD PTR [edx-0x2ad9ac5b]
  405660:	cmp    BYTE PTR [esi],0x11
  405663:	adc    ebx,DWORD PTR [ebx]
  405665:	xchg   edx,eax
  405666:	xchg   edi,ebx
  405668:	cmp    edx,esi
  40566a:	mov    dh,0xab
  40566c:	cmp    ebx,ebx
  40566e:	or     ah,BYTE PTR [edx+eax*1-0x4]
  405672:	ret    0xee3
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	inc    ecx
  4056a1:	stos   BYTE PTR es:[edi],al
  4056a2:	push   edx
  4056a3:	fistp  WORD PTR [esi+0x74]
  4056a6:	jle    0x405726
  4056a8:	fidivr DWORD PTR [edi+0x7e]
  4056ab:	jle    0x405707
  4056ad:	push   esi
  4056ae:	fnstcw WORD PTR ds:0xe4f6fa65
  4056b4:	aas    
  4056b5:	xor    bh,BYTE PTR [esi+0x4e]
  4056b8:	test   BYTE PTR [edi+0x79],dh
  4056bb:	mov    BYTE PTR [edx-0x7befe625],dh
  4056c1:	mov    ds:0x230df855,al
  4056c6:	cmp    BYTE PTR [eax+0x14],bl
  4056c9:	sub    eax,0xa9b4c925
  4056ce:	imul   ecx,DWORD PTR [edx+0x7fae3421],0xfffffff9
  4056d5:	push   0x62
  4056d7:	addr16 mov esi,0xa14c6334
  4056dd:	jmp    0x465ed198
  4056e2:	out    dx,al
  4056e3:	push   esp
  4056e4:	cmp    BYTE PTR [eax],al
  4056e6:	mov    ebx,0x52b5180c
  4056eb:	dec    edi
  4056ec:	not    dl
  4056ee:	mov    ah,0xbb
  4056f0:	pop    ecx
  4056f1:	jmp    0x4056a9
  4056f3:	(bad)  
  4056f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f5:	test   al,0x52
  4056f7:	hlt    
  4056f8:	mov    ah,BYTE PTR [ebp+0x5]
  4056fb:	sub    DWORD PTR [edx+0x5541e2a3],ecx
  405701:	add    eax,0x91324d14
  405706:	add    BYTE PTR [eax-0x2bd6c5d5],al
  40570c:	out    0x93,eax
  40570e:	jns    0x40574d
  405710:	(bad)  
  405711:	mov    edi,0x3f7fc9a5
  405716:	mov    cs,WORD PTR [edi-0xc]
  405719:	bound  edx,QWORD PTR [edi-0x2645981d]
  40571f:	dec    ebp
  405720:	ret    0x5a2e
  405723:	adc    eax,0xb86581e6
  405728:	retf   
  405729:	jle    0x40573c
  40572b:	int    0x2d
  40572d:	outs   dx,DWORD PTR ds:[esi]
  40572e:	pushf  
  40572f:	ret    
  405730:	add    eax,0x783ddcad
  405735:	out    dx,al
  405736:	xor    eax,0x5e192013
  40573b:	pop    ebp
  40573c:	inc    esp
  40573d:	out    dx,eax
  40573e:	sub    BYTE PTR [ebx+0xd411061],bl
  405744:	cmp    BYTE PTR [esp+ecx*8+0x3c8075a6],ch
  40574b:	sbb    ah,BYTE PTR [edi-0x370a8464]
  405751:	inc    esp
  405752:	std    
  405753:	cdq    
  405754:	shl    BYTE PTR [eax-0x21],1
  405757:	(bad)  
  405758:	jmp    DWORD PTR [edx]
  40575a:	popf   
  40575b:	and    eax,0xba695a30
  405760:	ror    ecx,1
  405762:	cli    
  405763:	test   DWORD PTR [eax-0x262b59df],eax
  405769:	bnd je 0x40576d
  40576c:	xchg   esp,eax
  40576d:	ja     0x405789
  40576f:	pop    eax
  405770:	sub    ah,BYTE PTR [ebx+ebp*2-0x4ea39d42]
  405777:	out    dx,eax
  405778:	pop    es
  405779:	mov    edx,0xdec48b06
  40577e:	or     al,0xa9
  405780:	sub    edx,eax
  405782:	clc    
  405783:	les    esi,FWORD PTR [ebp+edx*8-0x75]
  405787:	jecxz  0x4057c2
  405789:	(bad)  
  40578a:	pop    ds
  40578b:	fisub  DWORD PTR ds:0x3d665155
  405791:	xor    DWORD PTR gs:[edx-0x3d],esp
  405795:	push   es
  405796:	mov    ah,0xef
  405798:	lahf   
  405799:	push   esp
  40579a:	std    
  40579b:	imul   ebp,DWORD PTR [edi-0x26],0xe55cdf7b
  4057a2:	push   es
  4057a3:	jg     0x405803
  4057a5:	mov    ebx,0xe093e7a3
  4057aa:	push   ds
  4057ab:	arpl   dx,dx
  4057ad:	loope  0x405772
  4057af:	mov    ah,0x88
  4057b1:	dec    esp
  4057b2:	in     eax,0xc5
  4057b4:	ins    DWORD PTR es:[edi],dx
  4057b5:	clc    
  4057b6:	xor    ah,bh
  4057b8:	inc    esi
  4057b9:	push   es
  4057ba:	and    edx,DWORD PTR [edx+eiz*8-0x7b6c7d30]
  4057c1:	fs cdq 
  4057c3:	stos   BYTE PTR es:[edi],al
  4057c4:	xchg   esi,eax
  4057c5:	cmp    DWORD PTR [ecx+0x6],ebp
  4057c8:	in     al,0x73
  4057ca:	cld    
  4057cb:	lds    esi,FWORD PTR [ecx+ecx*4-0x37b1e486]
  4057d2:	pop    ecx
  4057d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d4:	fwait
  4057d5:	lds    edi,FWORD PTR [ebp+ebx*1-0x3393dfdc]
  4057dc:	sub    eax,0x717dcaa9
  4057e1:	mov    cl,0x35
  4057e3:	popf   
  4057e4:	shl    BYTE PTR [esi+0x40],cl
  4057e7:	inc    eax
  4057e8:	icebp  
  4057e9:	retf   
  4057ea:	mov    ds:0x612b4459,eax
  4057ef:	ins    BYTE PTR es:[edi],dx
  4057f0:	push   esi
  4057f1:	jns    0x4057d4
  4057f3:	cmp    bh,BYTE PTR [eax+0x2c]
  4057f6:	int    0xa2
  4057f8:	push   esi
  4057f9:	cmc    
  4057fa:	aam    0x62
  4057fc:	sub    dh,cl
  4057fe:	xchg   ecx,eax
  4057ff:	cmp    al,0xaa
  405801:	ret    
  405802:	or     BYTE PTR [eax+0x68],ah
  405805:	jo     0x405863
  405807:	(bad)  
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	sbb    BYTE PTR [ebp+0xa3a444a],al
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x40583a
  405863:	jae    0x405856
  405865:	sbb    al,0x99
  405868:	inc    edx
  405869:	add    esp,edx
  40586b:	push   ds
  40586c:	fild   DWORD PTR [ebx*8+0x4d05b3a8]
  405873:	sar    bl,cl
  405875:	fsub   DWORD PTR [edx-0x72]
  405878:	lods   eax,DWORD PTR ds:[esi]
  405879:	in     al,dx
  40587a:	jne    0x405889
  40587c:	add    eax,0x4a46a9e6
  405881:	push   edi
  405882:	aas    
  405883:	out    dx,al
  405884:	xchg   ebp,eax
  405885:	jle    0x4058b4
  405887:	cmp    DWORD PTR [edi+ebx*4+0x5ad17fe4],esp
  40588e:	cmp    BYTE PTR ds:0x12c24298,0x3
  405895:	rcl    esp,cl
  405897:	jnp    0x405893
  405899:	xlat   BYTE PTR ds:[ebx]
  40589a:	loopne 0x405849
  40589c:	fnstcw WORD PTR [ebx-0x17258d4]
  4058a2:	and    DWORD PTR ss:[ecx-0x11b9e96d],edx
  4058a9:	inc    eax
  4058aa:	xchg   esi,eax
  4058ab:	ss (bad) 
  4058ad:	xchg   ebx,eax
  4058ae:	xchg   ecx,eax
  4058af:	add    ebx,DWORD PTR [esi]
  4058b1:	cmp    BYTE PTR [edx+0x3806e8c5],0x53
  4058b8:	inc    esi
  4058b9:	xchg   ebx,eax
  4058ba:	mov    edi,0xce914af4
  4058bf:	dec    ebx
  4058c0:	in     eax,0x1b
  4058c2:	dec    ebx
  4058c3:	retf   0x2c51
  4058c6:	arpl   WORD PTR [ecx-0x26ce8091],bp
  4058cc:	add    al,0x5
  4058ce:	jb     0x405946
  4058d0:	test   eax,0xf0f420cb
  4058d5:	cmp    al,0x50
  4058d7:	mov    edx,DWORD PTR [edi-0x172f79cf]
  4058dd:	cwde   
  4058de:	sbb    DWORD PTR [esi+0x7e848554],esp
  4058e4:	cmp    dh,ah
  4058e6:	cwde   
  4058e7:	sbb    eax,0xb813d843
  4058ec:	in     al,dx
  4058ed:	mov    dh,0xf1
  4058ef:	shl    ebp,1
  4058f1:	imul   ecx,DWORD PTR [ecx],0xffffffdf
  4058f4:	out    0x0,al
  4058f6:	je     0x405959
  4058f8:	fiadd  DWORD PTR [ebx+0x4]
  4058fb:	jp     0x40596b
  4058fd:	pushf  
  4058fe:	sub    edi,edi
  405900:	fiadd  WORD PTR [ebx+0x7d5d025]
  405906:	test   BYTE PTR [ebp+eax*1+0x71b41578],bl
  40590d:	cdq    
  40590e:	test   BYTE PTR [edx-0x3ecff0d7],bl
  405914:	pop    edi
  405915:	push   esi
  405916:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405918:	dec    eax
  405919:	mov    dl,0x31
  40591b:	adc    BYTE PTR [edi-0x75],al
  40591e:	mov    DWORD PTR [ebp-0x32],edi
  405921:	test   eax,0x5ee8fa67
  405926:	or     eax,0xb056dabd
  40592b:	jb     0x40598c
  40592d:	lahf   
  40592e:	xchg   ecx,eax
  40592f:	and    edi,DWORD PTR [ebp-0x2a]
  405932:	dec    eax
  405933:	sbb    DWORD PTR [ecx+0x75],esi
  405936:	popa   
  405937:	xchg   ecx,eax
  405938:	ja     0x4058ca
  40593a:	sbb    DWORD PTR [edx+0x663874fa],ecx
  405940:	repnz test BYTE PTR [esi],dl
  405943:	fwait
  405944:	xor    bh,ch
  405946:	dec    ebp
  405947:	add    al,0xcc
  405949:	bound  eax,QWORD PTR [ecx+0x60]
  40594c:	mov    ds:0x18871470,eax
  405951:	pop    esi
  405952:	and    BYTE PTR [ecx+0x1c48e97e],bl
  405958:	xchg   edi,eax
  405959:	jle    0x405902
  40595b:	add    dh,cl
  40595d:	inc    esp
  40595e:	mov    al,ds:0x712d9fd1
  405963:	jae    0x4059cc
  405965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405966:	xor    BYTE PTR [ebp+eax*2-0x6f65d165],al
  40596d:	dec    edi
  40596e:	sub    ebx,0xe10acc34
  405974:	cmp    BYTE PTR [eax-0x40],0x10
  405978:	push   0xffffff8e
  40597a:	mov    ebx,0xe3f36ac6
  40597f:	pop    ecx
  405980:	adc    ecx,0xffffffc5
  405983:	jae    0x4059ab
  405985:	fisub  DWORD PTR [ebx+esi*4+0x5ecdfb07]
  40598c:	lods   al,BYTE PTR ds:[esi]
  40598d:	enter  0xafb5,0x58
  405991:	jno    0x405950
  405993:	enter  0xbe35,0x34
  405997:	sbb    al,BYTE PTR [ebx+0x7acfb0eb]
  40599d:	hlt    
  40599e:	xchg   edx,eax
  40599f:	push   ebp
  4059a0:	push   ss
  4059a1:	mov    dl,0x28
  4059a3:	mov    bl,0x59
  4059a5:	out    0xc7,al
  4059a7:	xchg   DWORD PTR [edx+0x25],esp
  4059aa:	jmp    0x4059b0
  4059ac:	mov    ds:0x22dac72c,eax
  4059b1:	xchg   edx,eax
  4059b2:	mov    dh,0x26
  4059b4:	cwde   
  4059b5:	or     esi,DWORD PTR [ebx+0x7b0e4aef]
  4059bb:	inc    bh
  4059bd:	loopne 0x40594a
  4059bf:	or     eax,0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	lds    ebp,FWORD PTR [edi+ebx*2+0x7e0b86f1]
  405aca:	jle    0x405aef
  405acc:	jg     0x405b4c
  405ace:	jle    0x405abe
  405ad0:	add    ch,BYTE PTR [ecx-0x2290f2ae]
  405ad6:	stc    
  405ad7:	dec    ecx
  405ad8:	imul   ebx,ebp,0xff394ed1
  405ade:	cs inc ebx
  405ae0:	inc    ecx
  405ae1:	mov    ecx,0xa7ff3e17
  405ae6:	xor    ch,0xc9
  405ae9:	and    esp,DWORD PTR ss:0xf27742bd
  405af0:	push   0x5e
  405af2:	cmp    al,0xcf
  405af4:	sub    bl,BYTE PTR [eax+0x4a]
  405af7:	xchg   BYTE PTR [eax-0x6d37c005],dh
  405afd:	call   0x21d0:0x511e132a
  405b04:	sub    al,0x57
  405b06:	xchg   edi,eax
  405b07:	xchg   edx,eax
  405b08:	xchg   ebp,eax
  405b09:	mov    eax,ds:0x13641919
  405b0e:	pop    esi
  405b0f:	pop    ecx
  405b10:	mov    ebx,0x20916244
  405b15:	jno    0x405ab5
  405b17:	inc    eax
  405b18:	test   al,0x10
  405b1a:	rcr    ch,1
  405b1c:	sahf   
  405b1d:	cs mov ebp,0xe3cdb75d
  405b23:	test   DWORD PTR [ebx+0x3a0b6ddb],0xa763feff
  405b2d:	lea    ebx,[ebp+ebx*8-0x3f]
  405b31:	push   ecx
  405b32:	pop    es
  405b33:	aam    0x61
  405b35:	and    eax,0x8c14d2dd
  405b3a:	outs   dx,DWORD PTR ds:[esi]
  405b3b:	mov    ds:0x8a348cd7,eax
  405b40:	xchg   edx,eax
  405b41:	xchg   ebx,eax
  405b42:	xor    al,0xe9
  405b44:	sub    ebp,0xffffffca
  405b47:	push   0x6255c844
  405b4c:	cli    
  405b4d:	sbb    ch,al
  405b4f:	cmc    
  405b50:	fsubr  st(3),st
  405b52:	inc    edi
  405b53:	ficom  DWORD PTR [edi-0x325cb674]
  405b59:	cmp    dh,dl
  405b5b:	mov    esi,DWORD PTR [ebx]
  405b5d:	arpl   WORD PTR [ecx-0x37],sp
  405b60:	pop    es
  405b61:	mov    ah,0x6
  405b63:	ins    DWORD PTR es:[edi],dx
  405b64:	inc    edi
  405b65:	inc    esi
  405b66:	int3   
  405b67:	int3   
  405b68:	aam    0x5a
  405b6a:	mov    DWORD PTR [edi-0x96390c0],edi
  405b70:	mov    dh,0x17
  405b72:	mov    dl,0xa2
  405b74:	daa    
  405b75:	inc    esi
  405b76:	cwde   
  405b77:	cmp    BYTE PTR [eax-0xbd7dab5],0xcf
  405b7e:	ins    BYTE PTR es:[edi],dx
  405b7f:	test   DWORD PTR [ecx],ecx
  405b81:	mov    ebx,esp
  405b83:	bound  esi,QWORD PTR ds:0xc6e41ce6
  405b89:	mov    edi,0x42f25b37
  405b8e:	and    dl,BYTE PTR [edx]
  405b90:	lock int 0xf7
  405b93:	mov    cl,0x81
  405b95:	aad    0x21
  405b97:	pop    ebx
  405b98:	mov    dh,0x71
  405b9a:	mov    ebp,0x70cad756
  405b9f:	fadd   DWORD PTR [edi]
  405ba1:	dec    esi
  405ba2:	add    edi,edi
  405ba4:	inc    eax
  405ba5:	push   es
  405ba6:	lods   al,BYTE PTR ss:[esi]
  405ba8:	mov    al,0xc1
  405baa:	pop    ds
  405bab:	sbb    ebp,DWORD PTR [ebp-0x61e0768d]
  405bb1:	retf   
  405bb2:	test   al,0xc5
  405bb4:	inc    ebp
  405bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb6:	inc    esp
  405bb7:	or     DWORD PTR [esi+0x48acaf6d],ebx
  405bbd:	mov    eax,0xe41d4d34
  405bc2:	outs   dx,BYTE PTR ds:[esi]
  405bc3:	mov    eax,0xd225e2b1
  405bc8:	std    
  405bc9:	jp     0x405c19
  405bcb:	pop    ebp
  405bcc:	popf   
  405bcd:	rol    DWORD PTR [eax-0xdeb42ef],0x86
  405bd4:	lahf   
  405bd5:	push   ecx
  405bd6:	lods   al,BYTE PTR ds:[esi]
  405bd7:	ret    0x789
  405bda:	inc    esi
  405bdb:	or     DWORD PTR [edx],ebx
  405bdd:	retf   0x162a
  405be0:	je     0x405b8e
  405be2:	lods   al,BYTE PTR gs:[esi]
  405be4:	shl    bl,cl
  405be6:	mov    DWORD PTR [ebp-0x59],edx
  405be9:	sbb    DWORD PTR [edx+0x39aee098],0x8
  405bf0:	jne    0x405c04
  405bf2:	adc    al,0xd3
  405bf4:	leave  
  405bf5:	mov    ds:0xa6b06ed8,eax
  405bfa:	push   ss
  405bfb:	fldcw  WORD PTR [edi]
  405bfd:	mov    bh,0x8c
  405bff:	out    dx,al
  405c00:	sbb    ch,BYTE PTR [edx+edx*1+0x23]
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	dec    esp
  405c69:	data16 fwait
  405c6b:	push   esp
  405c6c:	dec    ebx
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c1d
  405c75:	(bad)  [edi+0x9]
  405c78:	test   DWORD PTR [edi+ebx*2-0x2d7b7a43],eax
  405c7f:	adc    DWORD PTR [ebp+0x35bdfd80],0xef7d3ac
  405c89:	data16 jno 0x405c2a
  405c8c:	inc    esp
  405c8d:	pop    es
  405c8e:	lods   eax,DWORD PTR ds:[esi]
  405c8f:	repz push ss
  405c91:	in     al,dx
  405c92:	and    esi,0xfffffffb
  405c95:	pop    ss
  405c96:	pop    ebx
  405c97:	cmp    al,0xfd
  405c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c9a:	inc    ecx
  405c9b:	dec    ecx
  405c9c:	in     al,0x64
  405c9e:	dec    BYTE PTR [ecx]
  405ca0:	cli    
  405ca1:	push   esi
  405ca2:	mov    cl,0xa6
  405ca4:	ins    DWORD PTR es:[edi],dx
  405ca5:	mov    bl,0x4e
  405ca7:	fmul   QWORD PTR [eax+ecx*1-0x26]
  405cab:	in     al,dx
  405cac:	sahf   
  405cad:	retf   
  405cae:	fimul  WORD PTR [esi+0x2d]
  405cb1:	(bad)  
  405cb2:	sti    
  405cb3:	pusha  
  405cb4:	rcl    eax,cl
  405cb6:	out    0xaf,al
  405cb8:	xchg   esp,eax
  405cb9:	test   eax,0x594e76ba
  405cbe:	xchg   DWORD PTR [ecx+0x3e548250],ecx
  405cc4:	(bad)  
  405cc5:	sub    ch,ah
  405cc7:	push   esp
  405cc8:	xor    eax,0xc306b7bf
  405ccd:	and    eax,0x780b79e5
  405cd2:	int    0xb3
  405cd4:	ror    BYTE PTR [esi-0x8],0x1a
  405cd8:	cmp    eax,0xfc5dd4c8
  405cdd:	cli    
  405cde:	mov    ds:0x7139c864,al
  405ce3:	or     ebp,0xcd9527ab
  405ce9:	jb     0x405d55
  405ceb:	push   edx
  405cec:	test   al,0xce
  405cee:	aam    0x5c
  405cf0:	adc    DWORD PTR [edi-0x37549995],ecx
  405cf6:	mov    eax,ds:0x7dd040c6
  405cfb:	cld    
  405cfc:	and    BYTE PTR [eax],bh
  405cfe:	pop    ds
  405cff:	arpl   WORD PTR [esi],cx
  405d01:	(bad)  
  405d02:	ret    
  405d03:	dec    ebp
  405d04:	sbb    eax,0x966b0ed4
  405d09:	test   DWORD PTR [edx+edx*4+0x1d],0x20467296
  405d11:	pop    ss
  405d12:	pop    eax
  405d13:	xchg   ebx,eax
  405d14:	push   cs
  405d15:	es dec edi
  405d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d18:	jbe    0x405d8b
  405d1a:	dec    eax
  405d1b:	repz aaa 
  405d1d:	dec    ecx
  405d1e:	push   0x2c
  405d20:	mov    ch,0x23
  405d22:	or     BYTE PTR [edi-0x22c4baf3],ch
  405d28:	in     al,dx
  405d29:	dec    esp
  405d2a:	sbb    ebx,ebx
  405d2c:	addr16 jnp 0x405d25
  405d2f:	les    esp,FWORD PTR ds:0x4383c3f6
  405d35:	sub    cl,dh
  405d37:	sub    dl,dl
  405d39:	xor    BYTE PTR [ecx+0x28],ah
  405d3c:	lea    esp,[esi+0x4ffdc400]
  405d42:	push   ds
  405d43:	outs   dx,DWORD PTR ds:[esi]
  405d44:	retf   0x3f20
  405d47:	outs   dx,BYTE PTR ds:[esi]
  405d48:	push   0x19a1c256
  405d4d:	addr16 sti 
  405d4f:	lahf   
  405d50:	fxtract 
  405d52:	test   DWORD PTR [ecx],esi
  405d54:	pop    eax
  405d55:	sbb    eax,0x8706b477
  405d5a:	into   
  405d5b:	sahf   
  405d5c:	ja     0x405cf8
  405d5e:	xor    dl,bh
  405d60:	mov    al,BYTE PTR [ecx]
  405d62:	pop    ebp
  405d63:	scas   eax,DWORD PTR es:[edi]
  405d64:	sbb    BYTE PTR [esi+0x42e142d],0x8e
  405d6b:	test   eax,0x19994caf
  405d70:	jp     0x405da9
  405d72:	add    dl,BYTE PTR [edi-0x54]
  405d75:	ror    BYTE PTR [edi+esi*1],cl
  405d78:	arpl   WORD PTR [edi],ax
  405d7a:	cmc    
  405d7b:	(bad)  
  405d7c:	lea    edi,[esi]
  405d7e:	sbb    eax,0xffb3ccad
  405d83:	and    ch,dh
  405d85:	aam    0xab
  405d87:	sub    DWORD PTR [ecx],ebx
  405d89:	push   esp
  405d8a:	sub    eax,0xeb2f11e6
  405d8f:	mov    ds:0x77297d51,al
  405d94:	call   FWORD PTR [edi]
  405d96:	push   0x91de150
  405d9b:	or     eax,0x1c8265ad
  405da0:	lock xor dh,BYTE PTR [esp+edi*1+0x63aa11b9]
  405da8:	push   eax
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	or     al,BYTE PTR [ecx]
  405dc0:	out    0x13,al
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405d72
  405dcb:	inc    edx
  405dcc:	sbb    dl,0x7c
  405dcf:	sahf   
  405dd0:	cmp    ebx,edx
  405dd2:	in     eax,0x50
  405dd4:	mov    ch,0xad
  405dd6:	mov    bh,bl
  405dd8:	clc    
  405dd9:	gs sahf 
  405ddb:	fwait
  405ddc:	cmp    bh,bl
  405dde:	xor    ch,BYTE PTR [ecx+0x44b25be0]
  405de4:	je     0x405e39
  405de6:	call   DWORD PTR [ebp-0x3f8bab62]
  405dec:	popa   
  405ded:	push   eax
  405dee:	std    
  405def:	and    ch,BYTE PTR [ebx+0x66]
  405df2:	jb     0x405d9d
  405df4:	hlt    
  405df5:	pop    es
  405df6:	imul   edi,DWORD PTR [edi+edx*1-0x33],0xffffffe1
  405dfb:	(bad)  
  405dfc:	hlt    
  405dfd:	pop    ss
  405dfe:	outs   dx,DWORD PTR ds:[esi]
  405dff:	mov    dl,0xc1
  405e01:	mov    ebp,es
  405e03:	pop    ds
  405e04:	push   eax
  405e05:	jo     0x405d94
  405e07:	jnp    0x405e56
  405e09:	icebp  
  405e0a:	lods   al,BYTE PTR ds:[esi]
  405e0b:	push   ecx
  405e0c:	loopne 0x405e80
  405e0e:	imul   ebp,edx,0x779ba232
  405e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e15:	mov    ds,WORD PTR es:[edi-0x24]
  405e19:	ret    0x2e2e
  405e1c:	(bad)
  405e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e22:	fwait
  405e23:	repz call 0x9ffdebfd
  405e29:	jge    0x405e60
  405e2b:	(bad)  
  405e2d:	lock mov ah,0xa0
  405e30:	cmp    cl,0x31
  405e33:	mov    dh,0xe7
  405e35:	mov    ?,WORD PTR [ecx]
  405e37:	and    DWORD PTR [ecx+0x5cf7eca8],esp
  405e3d:	cld    
  405e3e:	fiadd  WORD PTR ds:0xe9a333c7
  405e44:	test   BYTE PTR [ebx],dl
  405e46:	arpl   WORD PTR [esi],ax
  405e48:	jp     0x405dda
  405e4a:	add    eax,0x6038cb02
  405e4f:	or     DWORD PTR [ebx],esp
  405e51:	adc    DWORD PTR [edi],ebp
  405e53:	xor    cl,BYTE PTR [edx+0x6f]
  405e56:	sbb    dl,BYTE PTR [esi-0x4594e86c]
  405e5c:	and    eax,0xf002aa7c
  405e61:	int3   
  405e62:	lods   eax,DWORD PTR ds:[esi]
  405e63:	push   ss
  405e64:	int    0xca
  405e66:	in     eax,dx
  405e67:	mov    DWORD PTR fs:[edi],0xb3c60156
  405e6e:	test   ebp,ebx
  405e70:	retf   
  405e71:	push   eax
  405e72:	(bad)  [ebx]
  405e74:	jp     0x405edd
  405e76:	and    BYTE PTR fs:[ecx+0x32],cl
  405e7a:	gs inc edx
  405e7c:	dec    ebp
  405e7d:	(bad)  
  405e7e:	fsubr  QWORD PTR [ebp+0x53]
  405e81:	aas    
  405e82:	push   0xffffffbd
  405e84:	lea    ecx,[ecx+0x703b9127]
  405e8a:	dec    ebp
  405e8b:	mov    bh,BYTE PTR [edx]
  405e8d:	xor    BYTE PTR ds:0x93644b16,ah
  405e93:	shr    DWORD PTR [edi-0x6fba945f],0xa3
  405e9a:	xchg   ebx,eax
  405e9b:	mov    dh,0x64
  405e9d:	mov    ch,0x68
  405e9f:	test   BYTE PTR [edi+eax*1-0x3c43345e],bl
  405ea6:	retf   0x7ad
  405ea9:	pop    esi
  405eaa:	fucom  st(7)
  405eac:	dec    edi
  405ead:	fstp   TBYTE PTR [eax-0x5119fc4b]
  405eb3:	sbb    DWORD PTR [esi+0x53aae6b0],ebp
  405eb9:	(bad)  
  405ebb:	or     ebx,ecx
  405ebd:	test   BYTE PTR [ecx],al
  405ebf:	or     bh,BYTE PTR [edx]
  405ec1:	je     0x405f0b
  405ec3:	cmc    
  405ec4:	nop
  405ec5:	sbb    DWORD PTR [ecx-0xa],esp
  405ec8:	(bad)  
  405ec9:	ja     0x405f47
  405ecb:	xor    ecx,DWORD PTR [ebx+0x53e5c808]
  405ed1:	ja     0x405f43
  405ed3:	or     al,0x6b
  405ed5:	sub    al,0xff
  405ed7:	pop    ecx
  405ed8:	call   0x62a0c468
  405edd:	test   al,0x60
  405edf:	ja     0x405e9a
  405ee1:	or     eax,0x59ea412f
  405ee6:	bound  esp,QWORD PTR [ecx]
  405ee8:	mov    eax,0x434f44bc
  405eed:	jecxz  0x405e7b
  405eef:	mov    DWORD PTR [eax-0x4da97ac],esp
  405ef5:	xor    DWORD PTR [edx-0x33],ebx
  405ef8:	rcl    BYTE PTR [eax-0x26],1
  405efb:	ds scas eax,DWORD PTR es:[edi]
  405efd:	call   0xfc8626f2
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xdddb13c5
  406054:	scas   al,BYTE PTR es:[edi]
  406055:	ss ret 
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x406084
  406060:	pop    ebx
  406061:	iret   
  406062:	mov    cl,0x25
  406064:	sbb    al,0x13
  406066:	cwde   
  406067:	pop    edi
  406068:	or     eax,0xceea2846
  40606d:	into   
  40606e:	popf   
  40606f:	xor    BYTE PTR [eax+0x7b180ecb],al
  406075:	mov    ebx,0xe7b80941
  40607a:	nop
  40607b:	mov    ebx,0x68be01ce
  406080:	xor    BYTE PTR [ecx+0x44],dh
  406083:	in     eax,dx
  406084:	inc    edx
  406085:	ins    BYTE PTR es:[edi],dx
  406086:	jecxz  0x4060eb
  406088:	pop    ds
  406089:	fmul   QWORD PTR [ebx+0xbe24a23]
  40608f:	popf   
  406090:	push   esi
  406091:	mov    esp,ebx
  406093:	das    
  406094:	add    DWORD PTR [eax],esp
  406096:	sub    al,0x30
  406098:	or     esi,DWORD PTR [edx]
  40609a:	add    ebp,esp
  40609c:	in     al,dx
  40609d:	push   edi
  40609e:	pop    ebx
  40609f:	xor    eax,0x24a73093
  4060a4:	mov    ds:0xc41c8a22,al
  4060a9:	xchg   esi,eax
  4060aa:	ret    
  4060ab:	mov    ebx,0x64f1b134
  4060b0:	ret    
  4060b1:	loopne 0x40603a
  4060b3:	adc    al,0x46
  4060b5:	mov    dh,0xf1
  4060b7:	pop    esp
  4060b8:	inc    edx
  4060b9:	mov    ds:0xe159524f,eax
  4060be:	xchg   edx,eax
  4060bf:	int3   
  4060c0:	mov    ds:0xed8c4e03,al
  4060c5:	cld    
  4060c6:	jmp    0x3a9a:0x929f53b5
  4060cd:	jns    0x40605d
  4060cf:	jnp    0x406114
  4060d1:	jo     0x4060fd
  4060d3:	pop    ecx
  4060d4:	mov    bh,0x77
  4060d6:	js     0x40605c
  4060d8:	ror    DWORD PTR [ecx-0x77cfcf82],1
  4060de:	jbe    0x40612b
  4060e0:	out    0x5e,eax
  4060e2:	ret    
  4060e3:	jae    0x406073
  4060e5:	add    dh,cl
  4060e7:	xchg   esp,eax
  4060e8:	arpl   WORD PTR [ecx-0x524d062e],bp
  4060ee:	jb     0x40610a
  4060f0:	jns    0x4060ce
  4060f2:	loope  0x406124
  4060f4:	loop   0x406155
  4060f6:	push   0x282cd2f9
  4060fb:	test   al,0x40
  4060fd:	stc    
  4060fe:	mov    ebp,0xf65c6ffc
  406103:	pop    eax
  406104:	rcl    DWORD PTR [eax+edx*1-0x42],cl
  406108:	out    dx,al
  406109:	test   al,0x95
  40610b:	add    al,0xe6
  40610d:	inc    ebx
  40610e:	adc    eax,0xce430890
  406113:	enter  0x5e32,0xb4
  406117:	mov    ds:0x7226d065,al
  40611c:	(bad)  
  40611d:	mov    DWORD PTR [esi+0x32],edi
  406120:	mov    edi,0x627a161a
  406125:	push   cs
  406126:	(bad)  
  406127:	fwait
  406128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40612a:	push   ebx
  40612b:	dec    edx
  40612c:	outs   dx,DWORD PTR ds:[esi]
  40612d:	inc    ebx
  40612e:	out    dx,al
  40612f:	je     0x406103
  406131:	jecxz  0x406151
  406133:	mov    bh,BYTE PTR [esi-0xee00775]
  406139:	push   ds
  40613a:	sbb    edx,DWORD PTR [ebx]
  40613c:	add    DWORD PTR [edx+0x4c95ef59],ebx
  406142:	cli    
  406143:	dec    edi
  406144:	sbb    al,0xd9
  406146:	cs cmp bl,bh
  406149:	pop    ebx
  40614a:	dec    ecx
  40614b:	fiadd  DWORD PTR [ebp+0x1d]
  40614e:	sbb    DWORD PTR ds:0xeabe71db,ebx
  406154:	push   0x24a22640
  406159:	push   esp
  40615a:	fimul  DWORD PTR [esi]
  40615c:	mov    ds:0x462b9481,eax
  406161:	rcr    BYTE PTR [edx-0x25],1
  406164:	mov    ds:0x3b75dfd9,al
  406169:	cmp    esi,DWORD PTR [edi+0x3413003]
  40616f:	dec    ecx
  406170:	pop    ecx
  406171:	hlt    
  406172:	cmp    BYTE PTR gs:[edx-0x78d0c2ae],ah
  406179:	sbb    ebx,eax
  40617b:	aaa    
  40617c:	push   ds
  40617d:	fadd   QWORD PTR ss:[eax]
  406180:	jmp    0x8c0fefc7
  406185:	fisttp DWORD PTR [eax-0x1859a7a1]
  40618b:	pop    ebp
  40618c:	out    dx,al
  40618d:	mov    ds:0x2444e7ee,eax
  406192:	add    al,0xd6
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x1ebb81e8],0xffffff95
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406436
  4063d4:	ds enter 0x48e7,0x41
  4063d9:	xchg   ebp,eax
  4063da:	popf   
  4063db:	cld    
  4063dc:	adc    ch,dh
  4063de:	sar    edx,1
  4063e0:	mov    ebx,0xe3540f91
  4063e5:	xor    DWORD PTR ss:[ebp+0x4fe3d678],eax
  4063ec:	dec    edx
  4063ed:	inc    esi
  4063ee:	xor    edi,DWORD PTR [edx+edi*2-0x17996b0]
  4063f5:	es (bad) 
  4063f7:	out    dx,eax
  4063f8:	call   0x552a9943
  4063fd:	fdivrp st(5),st
  4063ff:	sbb    bl,BYTE PTR [ecx+0x2f72521f]
  406405:	std    
  406406:	cmc    
  406407:	shr    DWORD PTR [esi+ecx*1-0x15],0x55
  40640c:	push   esi
  40640d:	pop    ss
  40640e:	inc    edi
  40640f:	xor    al,0x31
  406411:	fdiv   QWORD PTR [eax+0x3]
  406414:	xor    al,0x1a
  406416:	mov    bh,ch
  406418:	add    al,BYTE PTR [ebp-0x46]
  40641b:	inc    ebp
  40641c:	push   edx
  40641d:	outs   dx,DWORD PTR es:[esi]
  40641f:	and    DWORD PTR [ecx+0x64ad725],ecx
  406425:	pop    edi
  406426:	cmc    
  406427:	into   
  406428:	inc    esi
  406429:	test   eax,0x77010adc
  40642e:	mov    edx,0xd664d092
  406433:	jg     0x4063ce
  406435:	pushf  
  406436:	xchg   ecx,eax
  406437:	push   edx
  406438:	or     BYTE PTR [ebp+0x76],cl
  40643b:	aad    0x2f
  40643d:	in     eax,dx
  40643e:	js     0x40642b
  406440:	sub    al,0x2a
  406442:	sbb    DWORD PTR [ebx],edx
  406444:	sbb    eax,0xbda418fc
  406449:	fadd   DWORD PTR [edx+0x25058668]
  40644f:	sar    esp,cl
  406451:	push   ecx
  406452:	xor    eax,0x59c94aab
  406457:	pop    ebx
  406458:	call   0xd2c4:0x908ff623
  40645f:	jmp    0x5b733e27
  406464:	aas    
  406465:	sub    eax,0x3ca44997
  40646a:	sub    eax,0x11ac6570
  40646f:	jg     0x4064ed
  406471:	adc    al,0x67
  406473:	sub    bl,bh
  406475:	ss repnz scas eax,DWORD PTR es:[edi]
  406478:	push   esi
  406479:	hlt    
  40647a:	mov    bl,dl
  40647c:	jnp    0x406489
  40647e:	dec    ecx
  40647f:	sub    eax,0x49bce7a6
  406484:	push   ebx
  406485:	in     al,dx
  406486:	and    DWORD PTR [edx],ebp
  406488:	inc    eax
  406489:	add    eax,0xdf6f37e5
  40648e:	addr16 mov dh,0x5d
  406491:	daa    
  406492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406493:	out    dx,eax
  406494:	rol    DWORD PTR [eax],cl
  406496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406497:	aas    
  406498:	adc    DWORD PTR [ebx+ecx*8+0x30a6ac7d],edi
  40649f:	mov    edx,0xd86aecf8
  4064a4:	adc    ebx,DWORD PTR [edx]
  4064a6:	and    BYTE PTR [ebp-0x1],dh
  4064a9:	aam    0x76
  4064ab:	add    eax,0x6b7348e6
  4064b0:	mov    ch,0xbe
  4064b2:	repz push 0x19724bfb
  4064b8:	nop
  4064b9:	out    dx,eax
  4064ba:	pop    ss
  4064bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bd:	push   ss
  4064be:	add    eax,0x2a5175a8
  4064c3:	pushf  
  4064c4:	pop    ebx
  4064c5:	inc    eax
  4064c6:	les    esp,FWORD PTR [edx+0x571e70e4]
  4064cc:	sbb    ebx,eax
  4064ce:	aam    0x5
  4064d0:	mov    al,0xb7
  4064d2:	clc    
  4064d3:	push   esi
  4064d4:	jecxz  0x40654d
  4064d6:	mov    dl,0xc0
  4064d8:	lods   al,BYTE PTR ds:[esi]
  4064d9:	(bad)  
  4064da:	jmp    FWORD PTR ss:[ebp+0x25dd0723]
  4064e1:	mov    ah,0xd2
  4064e3:	inc    esp
  4064e4:	cmp    BYTE PTR [esi+0x32c65fd6],bh
  4064ea:	outs   dx,DWORD PTR ds:[esi]
  4064eb:	(bad)  
  4064ec:	add    edx,DWORD PTR [ebp+0x9]
  4064ef:	pop    ecx
  4064f0:	inc    edx
  4064f1:	add    eax,0x4039e66c
  4064f6:	push   esp
  4064f7:	rcr    DWORD PTR [ebx],1
  4064f9:	mov    WORD PTR [ebp-0x7fcaac2d],cs
  4064ff:	dec    edi
  406500:	mov    cl,0x3
  406502:	int    0xa9
  406504:	loop   0x406495
  406506:	repnz hlt 
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x3a974057,edi
  406527:	mov    eax,ds:0x7e0d9f6c
  40652c:	jle    0x406551
  40652e:	jg     0x4065ae
  406530:	jle    0x4065ac
  406532:	retf   0x77c5
  406535:	pusha  
  406536:	stos   DWORD PTR es:[edi],eax
  406537:	into   
  406538:	into   
  406539:	add    BYTE PTR [edi-0x45],cl
  40653c:	stos   BYTE PTR es:[edi],al
  40653d:	inc    esi
  40653e:	pop    ecx
  40653f:	push   ss
  406540:	mov    ebx,0x6cd929cc
  406545:	(bad)  
  406547:	jle    0x406545
  406549:	je     0x406550
  40654b:	mov    ebp,0x7b689f98
  406550:	retf   0x890
  406553:	push   ebp
  406554:	(bad)
  406559:	or     BYTE PTR [eax-0x47],dh
  40655c:	push   esi
  40655d:	imul   esi,DWORD PTR [ebp+0x58],0xc3e80a83
  406564:	xchg   ebp,eax
  406565:	mov    ebx,0x65c8ac02
  40656a:	fs scas al,BYTE PTR es:[edi]
  40656c:	push   ds
  40656d:	xor    ebx,eax
  40656f:	xchg   edx,eax
  406570:	xchg   BYTE PTR ds:0xc2b76ecb,dh
  406576:	lods   al,BYTE PTR ds:[esi]
  406577:	(bad)  
  406578:	rcl    BYTE PTR [edi],0xe7
  40657b:	mov    ?,WORD PTR [esi-0x42470b06]
  406581:	mov    bh,0x2b
  406583:	mov    BYTE PTR [eax-0xfbbd69f],ah
  406589:	stc    
  40658a:	xchg   edi,eax
  40658b:	push   edx
  40658c:	loope  0x40659f
  40658e:	shl    DWORD PTR [ebp+0x4a771d7c],0xa1
  406595:	add    al,0xfb
  406597:	test   al,0xb0
  406599:	inc    BYTE PTR [ecx+ebp*8-0x3cadf125]
  4065a0:	sub    BYTE PTR [ecx+0x542a00d0],ah
  4065a6:	dec    esp
  4065a7:	nop
  4065a8:	out    0x42,al
  4065aa:	push   ss
  4065ab:	push   DWORD PTR fs:[ebp-0x58fc9e86]
  4065b2:	jle    0x406614
  4065b4:	jp     0x406560
  4065b6:	and    al,0x87
  4065b8:	imul   eax,DWORD PTR [eax],0xffffff99
  4065bb:	leave  
  4065bc:	test   eax,0x3323fc1a
  4065c1:	mov    cl,0x97
  4065c3:	loope  0x406629
  4065c5:	inc    ecx
  4065c6:	cld    
  4065c7:	xchg   ecx,eax
  4065c8:	ret    
  4065c9:	sbb    bl,BYTE PTR [ebx-0x75563a28]
  4065cf:	push   ebx
  4065d0:	aaa    
  4065d1:	cmp    eax,0x80d20d2c
  4065d6:	dec    ebx
  4065d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d8:	icebp  
  4065d9:	pop    esi
  4065da:	push   esi
  4065db:	adc    eax,0xe64247c5
  4065e0:	xor    ebp,eax
  4065e2:	push   ss
  4065e3:	sbb    bh,dh
  4065e5:	xor    DWORD PTR [eax-0x2a19c49e],ebx
  4065eb:	sbb    DWORD PTR [ecx],ebp
  4065ed:	pusha  
  4065ee:	inc    ebp
  4065ef:	bound  esp,QWORD PTR [esi+eiz*1+0x6f]
  4065f3:	lods   eax,DWORD PTR ds:[esi]
  4065f4:	jno    0x4065e0
  4065f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f7:	push   edi
  4065f8:	jne    0x4065b9
  4065fa:	push   ss
  4065fb:	jp     0x406648
  4065fd:	and    al,0x9
  4065ff:	loope  0x406626
  406601:	fsubr  QWORD PTR [esi]
  406603:	sub    ah,BYTE PTR [ebp-0x53aa00d0]
  406609:	test   al,0xe5
  40660b:	jge    0x4065c3
  40660d:	push   ss
  40660e:	mov    edx,0x5edcc89b
  406613:	rol    DWORD PTR [esp+ecx*8+0x52],cl
  406617:	call   0xb7:0x6ac95097
  40661e:	mov    dl,0xf6
  406620:	mov    al,0x35
  406622:	(bad)  
  406623:	fidiv  WORD PTR [ecx-0x16]
  406626:	adc    DWORD PTR [ebx+0xf],0x7d
  40662a:	mov    ecx,0x310e6b9f
  40662f:	xchg   esp,eax
  406630:	call   0x9b801af8
  406635:	and    edi,DWORD PTR [ecx]
  406637:	lods   eax,DWORD PTR ds:[esi]
  406638:	addr16 cdq 
  40663a:	jnp    0x406681
  40663c:	or     al,0x95
  40663e:	mov    dh,0xce
  406640:	enter  0x1221,0xe4
  406644:	cmp    al,0x37
  406646:	imul   BYTE PTR [ebx+0x6c727c1c]
  40664c:	cmc    
  40664d:	mov    ds:0x46f26a89,al
  406652:	pop    edi
  406653:	pop    eax
  406654:	inc    ebx
  406655:	xor    bl,BYTE PTR [ecx]
  406657:	dec    ebx
  406658:	lods   eax,DWORD PTR ds:[esi]
  406659:	add    DWORD PTR [ecx],edi
  40665b:	mov    eax,ds:0xdbc3f9b9
  406660:	mov    ah,0x6b
  406662:	mov    fs,edi
  406664:	xchg   DWORD PTR [edi-0x75],edx
  406667:	pop    ebp
  406668:	lock sub ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	fwait
  406749:	jg     0x4067b4
  40674b:	aad    0x40
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4067d2
  406755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406756:	sub    al,0x97
  406758:	xor    eax,DWORD PTR [eax+0x3f]
  40675b:	nop
  40675c:	jne    0x40675d
  40675e:	adc    bh,dl
  406760:	jns    0x406766
  406762:	in     al,0x5c
  406764:	inc    eax
  406765:	cmp    BYTE PTR [edi],cl
  406767:	mov    dl,0x7e
  406769:	(bad)  [esi+0x19]
  40676c:	sbb    edi,DWORD PTR [edx+eiz*1-0x4d3dca65]
  406773:	neg    DWORD PTR [ebx]
  406775:	imul   edx,DWORD PTR [ebx+0x5be266dc],0x9b32b468
  40677f:	xor    al,0xe5
  406781:	push   0x6ceab221
  406786:	in     al,dx
  406787:	sti    
  406788:	leave  
  406789:	jb     0x406747
  40678b:	cmc    
  40678c:	mov    edx,0xa1986718
  406791:	mov    BYTE PTR [edx-0x49532ac2],al
  406797:	test   BYTE PTR [esi-0x2fb10178],bh
  40679d:	xchg   DWORD PTR [ebp+0x2a],edi
  4067a0:	inc    ecx
  4067a1:	jmp    0xb4cb:0xd1f81fb3
  4067a8:	adc    ch,BYTE PTR [eax-0x484aeaa2]
  4067ae:	xchg   DWORD PTR [esi],eax
  4067b0:	pop    edx
  4067b1:	outs   dx,BYTE PTR ds:[esi]
  4067b2:	fs sub edi,esp
  4067b5:	dec    edx
  4067b6:	dec    ecx
  4067b7:	pusha  
  4067b8:	jmp    0xf197216a
  4067bd:	shr    DWORD PTR [ebx],cl
  4067bf:	int3   
  4067c0:	mov    dl,0x44
  4067c2:	pop    edx
  4067c3:	les    ebx,FWORD PTR [esi]
  4067c5:	js     0x406842
  4067c7:	idiv   BYTE PTR [edi]
  4067c9:	xor    cl,dl
  4067cb:	jmp    0x56cc:0x18f8c408
  4067d2:	aad    0x3c
  4067d4:	push   ecx
  4067d5:	not    BYTE PTR ss:[ebx-0x116194de]
  4067dc:	inc    ebx
  4067dd:	das    
  4067de:	sub    BYTE PTR [esi],dh
  4067e0:	es jbe 0x406828
  4067e3:	popf   
  4067e4:	jne    0x406821
  4067e6:	mov    bl,0xee
  4067e8:	push   es
  4067e9:	jne    0x4067ab
  4067eb:	jo     0x406862
  4067ed:	lds    edx,FWORD PTR [ecx]
  4067ef:	pop    ecx
  4067f0:	(bad)  
  4067f2:	aad    0xf2
  4067f4:	dec    ecx
  4067f5:	sbb    edi,DWORD PTR [edi-0x5fd63631]
  4067fb:	(bad)  
  4067fc:	fcomp  DWORD PTR [ebx+0x48dd677f]
  406802:	ror    cl,cl
  406804:	loopne 0x40685a
  406806:	and    esp,DWORD PTR [edx]
  406808:	jge    0x40684d
  40680a:	pop    ecx
  40680b:	(bad)  
  40680c:	addr16 xchg esp,eax
  40680e:	adc    eax,0x689d7a10
  406813:	or     eax,0xc7a623e9
  406818:	out    dx,eax
  406819:	xchg   ebx,eax
  40681a:	or     ebx,DWORD PTR [ebx-0x9]
  40681d:	cmp    edx,edx
  40681f:	pop    ebx
  406820:	sub    eax,0xe28dfa4b
  406825:	jae    0x4067bf
  406827:	scas   al,BYTE PTR es:[edi]
  406828:	(bad)  
  406829:	xchg   ebp,eax
  40682a:	out    0x49,eax
  40682c:	jne    0x4067d3
  40682e:	push   edi
  40682f:	pusha  
  406830:	or     DWORD PTR [eax-0x64],eax
  406833:	in     eax,dx
  406834:	push   edi
  406835:	sbb    DWORD PTR ds:0xb76bf7da,0x36
  40683c:	adc    eax,0x9a533b48
  406841:	fwait
  406842:	mov    cl,0xd3
  406844:	pop    ebx
  406845:	jecxz  0x4068b3
  406847:	inc    edx
  406848:	add    edx,DWORD PTR [esi+0xec966b3]
  40684e:	sub    edx,DWORD PTR [ebx-0x7f28773e]
  406854:	cmp    al,0x6f
  406856:	and    ch,BYTE PTR [edx]
  406858:	mov    ah,BYTE PTR [esi-0x36590358]
  40685e:	dec    edx
  40685f:	and    ebp,DWORD PTR [edi+0x46]
  406862:	fidivr WORD PTR [ebx-0x533164da]
  406868:	hlt    
  406869:	fstp   st(6)
  40686b:	ret    0xb397
  40686e:	lea    esi,[ebx+eiz*2-0x6d58c565]
  406875:	mov    WORD PTR [edx-0xe4eacf8],cs
  40687b:	xor    DWORD PTR fs:[ebx],esp
  40687e:	stos   DWORD PTR es:[edi],eax
  40687f:	nop
  406880:	push   ebx
  406881:	out    dx,eax
  406882:	push   ebp
  406883:	stc    
  406884:	jg     0x406850
  406886:	inc    edx
  406887:	push   esp
  406888:	fild   WORD PTR [ebx]
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xf2
  4068b9:	ret    
  4068ba:	out    0x84,al
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068fe
  4068c5:	sub    bh,al
  4068c7:	aaa    
  4068c8:	cmp    DWORD PTR [edi-0x43],esi
  4068cb:	dec    ecx
  4068cc:	(bad)  
  4068cd:	fistp  DWORD PTR [ecx+eax*2+0x7ad96567]
  4068d4:	jg     0x4068bd
  4068d6:	sahf   
  4068d7:	xchg   edx,eax
  4068d8:	pop    ebx
  4068d9:	(bad)  
  4068da:	ins    DWORD PTR es:[edi],dx
  4068db:	iret   
  4068dc:	repnz push es
  4068de:	ds jae 0x4068e8
  4068e1:	mov    dh,BYTE PTR [edx]
  4068e3:	sahf   
  4068e4:	shl    BYTE PTR [ebx],0x88
  4068e7:	mov    ds:0x40f97b8e,eax
  4068ec:	xor    DWORD PTR [edx-0x5d],ecx
  4068ef:	idiv   DWORD PTR [eax-0x70]
  4068f2:	repz add eax,0xd33b56a
  4068f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f9:	leave  
  4068fa:	add    DWORD PTR [ecx+0x1b],ebx
  4068fd:	adc    BYTE PTR [edi],dh
  4068ff:	dec    esp
  406900:	repnz dec edi
  406902:	mov    al,0x60
  406904:	dec    ecx
  406905:	shl    edi,cl
  406907:	xchg   ecx,eax
  406908:	mov    edi,DWORD PTR [edx+0x55]
  40690b:	int3   
  40690c:	dec    esi
  40690d:	loopne 0x40694e
  40690f:	mov    cl,0xbb
  406911:	loopne 0x4068e9
  406913:	jne    0x40692a
  406915:	jecxz  0x406932
  406917:	mov    gs,WORD PTR [ebx+0x64]
  40691a:	adc    ebp,eax
  40691c:	fcom   DWORD PTR [eax]
  40691e:	add    DWORD PTR [ebx+0xcd7eb0e],esp
  406924:	std    
  406925:	add    cl,BYTE PTR [ebx-0x525f365c]
  40692b:	fnstsw WORD PTR [ecx+edi*2+0x1f1a3431]
  406932:	jnp    0x406901
  406934:	sbb    BYTE PTR [eax+0x1bebe59e],cl
  40693a:	push   0x7c7971a5
  40693f:	dec    ecx
  406940:	sbb    BYTE PTR [eax],al
  406942:	jae    0x4069bc
  406944:	inc    eax
  406945:	jp     0x406942
  406947:	jl     0x406916
  406949:	dec    ebx
  40694a:	sti    
  40694b:	outs   dx,DWORD PTR ds:[esi]
  40694c:	xor    WORD PTR [eax],ax
  40694f:	xor    ebp,DWORD PTR ds:0x9d30ca75
  406955:	pop    edx
  406956:	dec    esi
  406957:	in     eax,dx
  406958:	test   al,0x1d
  40695a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40695b:	mov    BYTE PTR [esi+0x2192cf17],ah
  406961:	or     dl,ch
  406963:	push   0x26
  406965:	jbe    0x4069a3
  406967:	ss dec esp
  406969:	push   ds
  40696a:	imul   BYTE PTR [edi-0x40d818a0]
  406970:	fs push es
  406972:	sbb    DWORD PTR [ebp+0x100ee779],ebp
  406978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406979:	cmp    al,0x47
  40697b:	cmp    dl,BYTE PTR [esi]
  40697d:	sahf   
  40697e:	add    edi,esi
  406980:	pop    eax
  406981:	cmp    DWORD PTR [edi-0x3213d1cb],ebx
  406987:	mov    ecx,0x8ce7afd4
  40698c:	xlat   BYTE PTR ds:[ebx]
  40698d:	popf   
  40698e:	mov    WORD PTR [ebp+ebx*2+0x4bf5cf53],gs
  406995:	jns    0x406966
  406997:	or     al,0xd6
  406999:	retf   
  40699a:	outs   dx,DWORD PTR ds:[esi]
  40699b:	sub    BYTE PTR [eax],dl
  40699d:	push   esp
  40699e:	jecxz  0x4069d4
  4069a0:	enter  0xff1b,0x1e
  4069a4:	ret    0x3d05
  4069a7:	cmp    eax,0xabae867e
  4069ac:	pop    ebx
  4069ad:	jbe    0x40698f
  4069af:	lock lea eax,[esi-0x4b]
  4069b3:	add    eax,0x3176f11d
  4069b8:	(bad)  
  4069ba:	iret   
  4069bb:	sub    DWORD PTR ds:0xd66dbd98,0xc5232e69
  4069c5:	pop    ss
  4069c6:	mov    ecx,0x330f0553
  4069cb:	adc    eax,0x2a7e9b86
  4069d0:	inc    ebp
  4069d1:	cdq    
  4069d2:	mov    ds:0x36f6cb72,eax
  4069d7:	js     0x4069b3
  4069d9:	push   0x67
  4069db:	or     BYTE PTR [esp+edx*8+0x195de874],0x90
  4069e3:	shl    DWORD PTR [ecx-0x6a7bd7eb],1
  4069e9:	xchg   BYTE PTR [edi+edx*1+0x3],bh
  4069ed:	jl     0x4069bc
  4069ef:	pusha  
  4069f0:	mov    ebx,esp
  4069f2:	xor    ecx,esi
  4069f4:	int    0xa1
  4069f6:	xor    esi,DWORD PTR [ebp-0x162fcc0a]
  4069fc:	dec    ebp
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x29647a93
  406a0e:	adc    DWORD PTR [esi+0x3e],ebp
  406a11:	add    DWORD PTR [esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a0d
  406a19:	repz push edi
  406a1b:	xlat   BYTE PTR ds:[ebx]
  406a1c:	jl     0x406a61
  406a1e:	add    eax,0x47e4aad9
  406a23:	lods   al,BYTE PTR ds:[esi]
  406a24:	mov    bl,BYTE PTR [ebx]
  406a26:	clc    
  406a27:	scas   al,BYTE PTR es:[edi]
  406a28:	or     eax,0xb6367d88
  406a2d:	nop
  406a2e:	gs cdq 
  406a30:	push   eax
  406a31:	adc    edx,DWORD PTR [ebp+0x40]
  406a34:	jle    0x406a72
  406a36:	bound  ecx,QWORD PTR [edx-0x15]
  406a39:	sub    BYTE PTR [ebx],ch
  406a3b:	add    ah,BYTE PTR [ebp+0x19]
  406a3e:	shl    BYTE PTR ds:0x6166d8b9,1
  406a44:	jp     0x406a79
  406a46:	sub    bl,BYTE PTR [ebp+0x23ef16a7]
  406a4c:	mov    edx,0x6c0847e7
  406a51:	dec    ebx
  406a52:	mov    edi,0x8a4213e8
  406a57:	sub    dl,al
  406a59:	jno    0x4069e6
  406a5b:	inc    esi
  406a5c:	cmc    
  406a5d:	xlat   BYTE PTR ds:[ebx]
  406a5e:	(bad)
  406a61:	sbb    esp,ebp
  406a63:	ds push cs
  406a65:	mov    es,WORD PTR [ebx+0x21]
  406a68:	jp     0x406ace
  406a6a:	scas   al,BYTE PTR es:[edi]
  406a6b:	je     0x406ac4
  406a6d:	xor    esp,DWORD PTR [ebx]
  406a6f:	adc    eax,DWORD PTR [edi+0x6f922ca8]
  406a75:	imul   edi,edi,0x24a4dda8
  406a7b:	cmp    dh,BYTE PTR [edi-0xf9e2c92]
  406a81:	mov    dl,0xfd
  406a83:	in     al,0xc3
  406a85:	push   edi
  406a86:	ss jge 0x406ae3
  406a89:	shr    BYTE PTR [edi+0x5463189d],cl
  406a8f:	int    0x3a
  406a91:	sbb    DWORD PTR [edi+0x25ce1661],ebp
  406a97:	mov    ds:0xc3e64ac5,eax
  406a9c:	push   edi
  406a9d:	xchg   ebp,eax
  406a9e:	in     eax,dx
  406a9f:	out    0x50,al
  406aa1:	out    dx,al
  406aa2:	cmp    ah,al
  406aa4:	inc    esp
  406aa5:	or     cl,BYTE PTR [esp+ecx*8]
  406aa8:	and    DWORD PTR [ebp-0xc94eb25],eax
  406aae:	add    eax,ecx
  406ab0:	mov    WORD PTR [esi+edi*2],ss
  406ab3:	xchg   ebp,eax
  406ab4:	dec    ebp
  406ab5:	dec    ebp
  406ab6:	popw   es
  406ab8:	test   DWORD PTR [ebp+ecx*4+0x33],ecx
  406abc:	(bad)  [edx]
  406abe:	enter  0xd76d,0x77
  406ac2:	ffreep st(0)
  406ac4:	int3   
  406ac5:	ja     0x406ad0
  406ac7:	jle    0x406a4b
  406ac9:	mov    bh,0xe4
  406acb:	push   ecx
  406acc:	inc    ebx
  406acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ace:	sar    BYTE PTR [ebx+0x50],cl
  406ad1:	int3   
  406ad2:	adc    eax,0x2cd78702
  406ad7:	rcl    al,cl
  406ad9:	aas    
  406ada:	inc    esi
  406adb:	jae    0x406aeb
  406add:	jl     0x406b4e
  406adf:	in     al,dx
  406ae0:	mov    ds:0x7733ac53,eax
  406ae5:	add    al,BYTE PTR [ebx-0x13d5a8f4]
  406aeb:	dec    edx
  406aec:	iret   
  406aed:	je     0x406b35
  406aef:	ins    BYTE PTR es:[edi],dx
  406af0:	pop    ebx
  406af1:	scas   al,BYTE PTR es:[edi]
  406af2:	mov    dl,0xd
  406af4:	out    dx,eax
  406af5:	rol    BYTE PTR [ecx-0x17],cl
  406af8:	cs stos DWORD PTR es:[edi],eax
  406afa:	ja     0x406b24
  406afc:	test   BYTE PTR [edx-0x7f4f6b27],ah
  406b02:	enter  0x1307,0xd9
  406b06:	arpl   WORD PTR [edx+0x7e],di
  406b09:	test   eax,0x27f34969
  406b0e:	sbb    ebp,eax
  406b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b11:	inc    eax
  406b12:	push   0x174baab3
  406b17:	cmp    al,BYTE PTR [edi+edi*2+0x2d5d63d2]
  406b1e:	bnd ret 0x96a2
  406b22:	retf   0xc697
  406b25:	ret    0x630a
  406b28:	call   0x1a49:0xeb115bbb
  406b2f:	fimul  DWORD PTR [esi+esi*8]
  406b32:	into   
  406b33:	mov    edi,0x42b7b164
  406b38:	mov    ch,0x1a
  406b3a:	adc    eax,0x2273c8bc
  406b3f:	mov    dh,0xcf
  406b41:	mov    ch,ah
  406b43:	mov    dh,0x4e
  406b45:	pop    eax
  406b46:	in     eax,0x3e
  406b48:	mov    BYTE PTR [esi],ch
  406b4a:	cmp    bl,BYTE PTR [edx-0x65]
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x7ae722d8],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406be3
  406b8f:	xchg   edi,eax
  406b90:	rcr    DWORD PTR [esi-0x27ba272e],1
  406b96:	test   eax,0x76364d0b
  406b9b:	xchg   ebp,eax
  406b9c:	pop    ecx
  406b9d:	add    al,0x55
  406b9f:	pop    ss
  406ba0:	fwait
  406ba1:	jns    0x406b9e
  406ba3:	ror    BYTE PTR [edi],1
  406ba5:	sbb    DWORD PTR [edi],esp
  406ba7:	jmp    0xe141aeb
  406bac:	jmp    0xae28:0x84bf9e57
  406bb3:	(bad)  
  406bb4:	mov    eax,0x41bb1c7e
  406bb9:	inc    ebx
  406bba:	pop    edi
  406bbb:	gs sub ch,al
  406bbe:	pusha  
  406bbf:	dec    ecx
  406bc0:	cmc    
  406bc1:	mov    ds:0x7f20c2ae,eax
  406bc6:	push   ds
  406bc7:	std    
  406bc8:	mov    esp,0x1f6a5a6d
  406bcd:	jne    0x406c3d
  406bcf:	outs   dx,DWORD PTR ds:[esi]
  406bd0:	in     al,0x31
  406bd2:	fcmovnu st,st(3)
  406bd4:	lods   al,BYTE PTR ds:[esi]
  406bd5:	(bad)  
  406bd6:	loope  0x406c2f
  406bd8:	outs   dx,BYTE PTR ds:[esi]
  406bd9:	inc    esi
  406bda:	dec    ebp
  406bdb:	dec    edi
  406bdc:	xor    ebx,DWORD PTR [ebx]
  406bde:	adc    bl,cl
  406be0:	jg     0x406c42
  406be2:	ss clc 
  406be4:	or     edx,DWORD PTR [edx-0x5c]
  406be7:	adc    al,0xdb
  406be9:	aaa    
  406bea:	sti    
  406beb:	xchg   ebp,eax
  406bec:	mov    bh,0x61
  406bee:	ins    DWORD PTR es:[edi],dx
  406bef:	shl    DWORD PTR [edi-0x5],1
  406bf2:	mov    ecx,0xb4db6f16
  406bf7:	test   al,0xdd
  406bf9:	fcos   
  406bfb:	mov    al,0xf0
  406bfd:	and    dh,ch
  406bff:	test   DWORD PTR [edi+eax*2],edi
  406c02:	mov    dl,dh
  406c04:	lods   eax,DWORD PTR ds:[esi]
  406c05:	mov    ds:0x63b2276,eax
  406c0a:	pop    ss
  406c0b:	inc    esp
  406c0c:	jns    0x406c6d
  406c0e:	add    eax,0x8170680d
  406c13:	xor    ecx,edi
  406c15:	imul   eax,ebx,0xe9acca64
  406c1b:	adc    BYTE PTR [edi-0x184395b7],dh
  406c21:	popa   
  406c22:	mov    bl,0xe0
  406c24:	mov    eax,ds:0xd135ba4a
  406c29:	pop    edi
  406c2a:	dec    edx
  406c2b:	add    eax,0x5ecddffa
  406c30:	imul   ebp,DWORD PTR [ecx+eiz*8],0xffffff8c
  406c34:	test   DWORD PTR [esi+0x4d],edi
  406c37:	mov    WORD PTR [eax],gs
  406c39:	ss pushf 
  406c3b:	ds cmp ah,dh
  406c3e:	in     al,0x26
  406c40:	jae    0x406c26
  406c42:	pop    edx
  406c43:	mov    al,ds:0xc98ce6ee
  406c48:	loope  0x406c3b
  406c4a:	sbb    eax,0xc2a9b7cf
  406c4f:	inc    edi
  406c50:	sar    bh,0x5f
  406c53:	inc    ebx
  406c54:	pop    esp
  406c55:	call   0x93fd:0xe41489d3
  406c5c:	dec    ecx
  406c5d:	jmp    0x72c2:0xcd822599
  406c64:	call   0xfd5454bc
  406c69:	inc    ebx
  406c6a:	aaa    
  406c6b:	addr16 loope 0x406cb5
  406c6e:	popa   
  406c6f:	jb     0x406c3e
  406c71:	and    edx,esp
  406c73:	ja     0x406c92
  406c75:	fisub  DWORD PTR ds:[eax+edi*1]
  406c79:	push   0x65
  406c7b:	push   ebp
  406c7c:	daa    
  406c7d:	mov    ds:0x924428f2,eax
  406c82:	sub    bl,0xb0
  406c85:	push   ecx
  406c86:	sub    al,0x23
  406c88:	mov    esp,0xbcb970f6
  406c8d:	add    al,0xe7
  406c8f:	or     eax,DWORD PTR [ecx-0x521a5b31]
  406c95:	leave  
  406c96:	(bad)  
  406c97:	ins    DWORD PTR es:[edi],dx
  406c98:	(bad)  
  406c99:	shl    ah,1
  406c9b:	cmp    BYTE PTR es:[edx-0x34],bl
  406c9f:	(bad)  
  406ca0:	inc    edi
  406ca1:	xor    dl,BYTE PTR [ecx]
  406ca3:	mov    bh,0xbc
  406ca5:	scas   eax,DWORD PTR es:[edi]
  406ca6:	add    cl,BYTE PTR cs:[edi]
  406ca9:	mov    ch,0xe1
  406cab:	pop    ebp
  406cac:	out    dx,eax
  406cad:	addr16 icebp 
  406caf:	xor    BYTE PTR [edi+0x29b6cb56],cl
  406cb5:	dec    eax
  406cb6:	push   ecx
  406cb7:	or     dh,dl
  406cb9:	mov    bh,0x7e
  406cbb:	jle    0x406cd9
  406cbd:	sbb    DWORD PTR [ebp-0x39],0x8b2c7d6b
  406cc4:	jge    0x406caa
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss push 0xffffffd6
  406cf1:	sub    DWORD PTR [edx-0x6c],edi
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d03
  406cfc:	jmp    DWORD PTR [eax+0x43]
  406cff:	call   0x7dfe:0x24175f8e
  406d06:	aas    
  406d07:	nop
  406d08:	sub    al,0xcd
  406d0a:	enter  0x95a,0x80
  406d0e:	sbb    BYTE PTR [ebx-0xd83ed01],dh
  406d14:	cmpps  xmm4,XMMWORD PTR [ecx+0x2f7fcfcf],0x9d
  406d1c:	jo     0x406d0c
  406d1e:	jbe    0x406cc9
  406d20:	out    dx,al
  406d21:	ja     0x406ccb
  406d23:	mov    edx,edx
  406d25:	gs mov al,0x47
  406d28:	mov    ebx,0xb962e530
  406d2d:	popa   
  406d2e:	sbb    eax,0x9f9ee1ad
  406d33:	pop    eax
  406d34:	pop    edi
  406d35:	fmul   st(5),st
  406d37:	lea    esi,[ebx]
  406d39:	push   es
  406d3a:	dec    esi
  406d3b:	jo     0x406d35
  406d3d:	and    BYTE PTR [edi-0x5e4126fa],cl
  406d43:	jl     0x406d58
  406d45:	aaa    
  406d46:	mov    edi,0x6e17975d
  406d4b:	mov    WORD PTR [edi+ebp*8],?
  406d4e:	cs cmp eax,0xffed180c
  406d54:	push   ds
  406d55:	pop    ss
  406d56:	stc    
  406d57:	retf   
  406d58:	in     al,0x55
  406d5a:	loope  0x406daf
  406d5c:	retf   
  406d5d:	shl    BYTE PTR [ebx-0x52a475c6],cl
  406d63:	xor    ch,bh
  406d65:	aam    0xcb
  406d67:	(bad)  
  406d68:	mov    esi,0x807bc09c
  406d6d:	cmp    DWORD PTR [esi+ebp*2],eax
  406d70:	inc    ecx
  406d71:	jno    0x406d88
  406d73:	lds    ecx,FWORD PTR [ecx+eiz*1-0x2]
  406d77:	test   BYTE PTR [ecx-0x21],cl
  406d7a:	cmp    al,0x3b
  406d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d7d:	ins    BYTE PTR es:[edi],dx
  406d7e:	inc    edx
  406d7f:	and    al,0x24
  406d81:	jge    0x406d2c
  406d83:	lea    ebp,[edi]
  406d85:	lds    edi,FWORD PTR [ebp+0x2]
  406d88:	repnz and al,0x6a
  406d8b:	jg     0x406dbb
  406d8d:	jb     0x406d92
  406d8f:	xchg   BYTE PTR [eax],al
  406d91:	bound  edx,QWORD PTR [ebx+0x2ecd1e8a]
  406d97:	into   
  406d98:	fwait
  406d99:	xor    bl,BYTE PTR [edi-0x8dbc78a]
  406d9f:	adc    ecx,ecx
  406da1:	cli    
  406da2:	fdiv   QWORD PTR [ebx]
  406da4:	mov    bl,0x65
  406da6:	ret    0x5479
  406da9:	mov    al,0x5a
  406dab:	out    0x6b,eax
  406dad:	xor    dh,BYTE PTR [esi]
  406daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db0:	jle    0x406d49
  406db2:	jl     0x406de5
  406db4:	das    
  406db5:	add    esp,ecx
  406db7:	ins    DWORD PTR es:[edi],dx
  406db8:	push   ecx
  406db9:	xchg   BYTE PTR [esi+0xda6f7d0],bl
  406dbf:	mov    eax,ds:0x110a62f8
  406dc4:	pop    edi
  406dc5:	mov    ch,0xe7
  406dc7:	popf   
  406dc8:	das    
  406dc9:	ret    0x3859
  406dcc:	in     eax,dx
  406dcd:	outs   dx,BYTE PTR ds:[esi]
  406dce:	call   0xc8ba:0x606a96f
  406dd5:	ja     0x406e25
  406dd7:	dec    edx
  406dd8:	cmp    eax,0x5deb1d4d
  406ddd:	fs data16 mov dl,0xb9
  406de1:	data16 std 
  406de3:	mov    ebx,0x8264ce3b
  406de8:	(bad)  
  406de9:	pop    ecx
  406dea:	rcl    BYTE PTR [edx-0x1f],1
  406ded:	adc    esp,esp
  406def:	fidivr DWORD PTR [ebp-0x48b37cc0]
  406df5:	mov    cl,0x81
  406df7:	ss adc al,0x1
  406dfa:	cmp    ah,BYTE PTR [edi]
  406dfc:	jae    0x406d93
  406dfe:	test   al,0x3b
  406e00:	xor    ah,bh
  406e02:	jecxz  0x406e6e
  406e04:	repz push edi
  406e06:	mov    al,ds:0xd2fca3c4
  406e0b:	idiv   ah
  406e0d:	les    esp,FWORD PTR [ebp+0x1e]
  406e10:	into   
  406e11:	sar    BYTE PTR [edx],cl
  406e13:	cmc    
  406e14:	rcl    DWORD PTR [edi-0x61],cl
  406e17:	adc    eax,0x78dbf89
  406e1c:	mov    ebp,0xb2ea88ad
  406e21:	test   DWORD PTR [edx],0x45fce594
  406e27:	icebp  
  406e28:	cmc    
  406e29:	cwde   
  406e2a:	cld    
  406e2b:	(bad)  
  406e2c:	fild   QWORD PTR [edx-0x7]
  406e2f:	xchg   ecx,eax
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	int    0x82
  406e4a:	pop    esi
  406e4b:	pop    cx
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406df0
  406e55:	mov    edx,0xee764fe3
  406e5a:	ror    ah,cl
  406e5c:	sahf   
  406e5d:	outs   dx,BYTE PTR ds:[esi]
  406e5e:	inc    ebx
  406e5f:	inc    eax
  406e60:	shr    BYTE PTR [esi+0x33],0x85
  406e64:	add    edx,DWORD PTR [edi+eax*8-0x6e]
  406e68:	ficom  DWORD PTR [ebp+0x69]
  406e6b:	adc    DWORD PTR [ebp+esi*4-0x76],esp
  406e6f:	int    0xcb
  406e71:	(bad)  
  406e73:	jg     0x406e66
  406e75:	scas   eax,DWORD PTR es:[edi]
  406e76:	push   esp
  406e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e78:	or     BYTE PTR [ebx],ch
  406e7a:	jp     0x406e4c
  406e7c:	loop   0x406eb1
  406e7e:	push   ebx
  406e7f:	mov    ds:0xaa1d30df,eax
  406e84:	jae    0xfb0b4017
  406e8a:	xchg   esi,eax
  406e8b:	xor    bl,BYTE PTR ss:[ebp+0x3c]
  406e8f:	xor    BYTE PTR [edi],dh
  406e91:	test   esp,ebp
  406e93:	ret    0x310e
  406e96:	or     eax,0xfb676196
  406e9b:	inc    ebp
  406e9c:	xchg   esi,eax
  406e9d:	mov    bl,0x1e
  406e9f:	sbb    eax,edi
  406ea1:	mov    esp,0xf66c2215
  406ea6:	fistp  QWORD PTR [eax-0x49]
  406ea9:	and    eax,0xf4942f70
  406eae:	jecxz  0x406f23
  406eb0:	retf   0xbc8e
  406eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb4:	mov    ds:0xa082aa74,al
  406eb9:	adc    ebp,DWORD PTR [edi+edx*8+0x5498a2ba]
  406ec0:	je     0x406f01
  406ec2:	adc    dl,bl
  406ec4:	adc    ebx,0xffffffcd
  406ec7:	je     0x406e68
  406ec9:	in     eax,dx
  406eca:	mov    ds:0xaa5510a2,eax
  406ecf:	cmp    DWORD PTR [eax-0x52b8f055],0x41471764
  406ed9:	jne    0x406e78
  406edb:	pop    ebp
  406edc:	push   ecx
  406edd:	fidivr WORD PTR [ecx+0x72]
  406ee0:	xor    edx,DWORD PTR [edi+0x29]
  406ee3:	add    ecx,DWORD PTR [ebp-0x22]
  406ee6:	xlat   BYTE PTR ds:[ebx]
  406ee7:	shl    DWORD PTR [ebx+0x45],1
  406eea:	adc    DWORD PTR [eax+0x4b67ef26],ebx
  406ef0:	and    esi,DWORD PTR [ebx-0x3e2e7804]
  406ef6:	rcl    dh,1
  406ef8:	ror    dl,cl
  406efa:	mov    ds:0x8ef1977e,eax
  406eff:	cwde   
  406f00:	dec    edi
  406f01:	jecxz  0x406f41
  406f03:	cmp    DWORD PTR [esi-0x7c],ebp
  406f06:	sbb    eax,0xdba919ee
  406f0b:	xor    al,0xc5
  406f0d:	mov    ds:0x74e40c3a,al
  406f12:	and    eax,0x40960f5d
  406f17:	leave  
  406f18:	mov    esi,edi
  406f1a:	lds    edi,FWORD PTR [edx+ecx*8]
  406f1d:	pop    edi
  406f1e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406f20:	xlat   BYTE PTR ds:[ebx]
  406f21:	fdiv   DWORD PTR [esi+0x7a]
  406f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f25:	add    BYTE PTR [edi-0x4f59d041],0x3d
  406f2c:	adc    eax,DWORD PTR [ebp-0xc87b52c]
  406f32:	xchg   edx,eax
  406f33:	aad    0xc3
  406f35:	ficomp WORD PTR [ecx-0x5c]
  406f38:	cmp    al,0x1f
  406f3a:	fwait
  406f3b:	es int3 
  406f3d:	cmp    al,0x1
  406f3f:	stos   DWORD PTR es:[edi],eax
  406f40:	push   esp
  406f41:	test   eax,0xb21ca2d6
  406f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f47:	sub    edi,edx
  406f49:	dec    edi
  406f4a:	fistp  QWORD PTR [eax-0x61]
  406f4d:	jecxz  0x406f12
  406f4f:	xor    DWORD PTR [edx+0x11],ebx
  406f52:	inc    ebx
  406f53:	dec    edx
  406f54:	xor    ah,BYTE PTR [ebx]
  406f56:	pop    edx
  406f57:	mov    al,ds:0x5eea38fc
  406f5c:	inc    eax
  406f5d:	adc    BYTE PTR [edi],ch
  406f5f:	xchg   ebp,eax
  406f60:	scas   eax,DWORD PTR es:[edi]
  406f61:	or     al,0xa9
  406f63:	pop    esi
  406f64:	jle    0x406f50
  406f66:	retf   
  406f67:	dec    ebx
  406f68:	add    bh,BYTE PTR [ebx]
  406f6a:	ret    
  406f6b:	cmp    al,0x8e
  406f6d:	jo     0x406f47
  406f6f:	(bad)  
  406f70:	out    dx,eax
  406f71:	push   edx
  406f72:	loope  0x406f99
  406f74:	cld    
  406f75:	push   ss
  406f76:	push   ds
  406f77:	dec    edi
  406f78:	fsub   QWORD PTR [edi-0x12442b53]
  406f7e:	push   0xffffffb6
  406f80:	in     eax,0x91
  406f82:	das    
  406f83:	leave  
  406f84:	ret    0xd3f4
  406f87:	mov    esp,0xb558a98
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	retf   
  407010:	push   ebp
  407011:	jae    0x406fc7
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x407043
  40701c:	or     ch,al
  40701e:	adc    ebp,esi
  407020:	and    esp,edx
  407022:	or     al,0x30
  407024:	scas   eax,DWORD PTR es:[di]
  407026:	dec    edi
  407027:	lods   eax,DWORD PTR ds:[esi]
  407028:	push   ebp
  407029:	retf   0x84b3
  40702c:	loopne 0x407042
  40702e:	and    al,0x63
  407030:	cmp    eax,0xf49ee206
  407035:	jmp    0x407089
  407037:	jo     0x407046
  407039:	(bad)  
  40703c:	cli    
  40703d:	ins    BYTE PTR es:[edi],dx
  40703e:	inc    ebp
  40703f:	fcomp  QWORD PTR [ecx]
  407041:	xor    ah,bl
  407043:	adc    eax,0x13abbe3a
  407048:	dec    eax
  407049:	in     eax,dx
  40704a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40704b:	jo     0x407071
  40704d:	icebp  
  40704e:	fcmovb st,st(5)
  407050:	pop    ebx
  407051:	or     ebp,DWORD PTR [ecx+0x50]
  407054:	xchg   edx,eax
  407055:	mov    esi,0xeb16e17e
  40705a:	dec    esp
  40705b:	call   0x7994c06f
  407060:	cmp    edx,0xffffffd7
  407063:	scas   al,BYTE PTR es:[edi]
  407064:	add    BYTE PTR [edx-0x29],cl
  407067:	push   ecx
  407068:	jle    0x4070b3
  40706a:	sbb    dl,BYTE PTR [edx-0x4551b807]
  407070:	mov    al,0x91
  407072:	popf   
  407073:	sub    eax,0xd06bba33
  407078:	stc    
  407079:	popf   
  40707a:	in     al,dx
  40707b:	xor    DWORD PTR [ebx+0x2fc2b0f2],esi
  407081:	clc    
  407082:	jl     0x407085
  407084:	fwait
  407085:	pop    ecx
  407086:	rol    BYTE PTR [edi+0x2b],1
  407089:	out    0x8b,eax
  40708b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708c:	xor    dh,BYTE PTR [edx]
  40708e:	jne    0x40710f
  407090:	inc    eax
  407091:	call   0x1b0d496
  407096:	cmp    ecx,DWORD PTR [ebp+ebx*4-0x40]
  40709a:	and    edi,DWORD PTR [ecx]
  40709c:	leave  
  40709d:	stos   DWORD PTR es:[edi],eax
  40709e:	mov    ds:0xc989bd8d,eax
  4070a3:	xchg   ecx,eax
  4070a4:	stos   DWORD PTR es:[edi],eax
  4070a5:	inc    eax
  4070a6:	ret    0x6d40
  4070a9:	loopne 0x4070ad
  4070ab:	inc    ecx
  4070ac:	push   0x3b94eba5
  4070b1:	xchg   esi,eax
  4070b2:	cld    
  4070b3:	fsubr  st(4),st
  4070b5:	push   edi
  4070b6:	ficomp DWORD PTR [eax]
  4070b8:	dec    edx
  4070b9:	mov    al,0x8c
  4070bb:	stos   DWORD PTR es:[edi],eax
  4070bc:	aas    
  4070bd:	xchg   ch,cl
  4070bf:	push   edx
  4070c0:	or     ah,bh
  4070c2:	pop    edx
  4070c3:	lahf   
  4070c4:	fisttp DWORD PTR [ebp+ebx*8-0x6cde2e08]
  4070cb:	jae    0x4070c7
  4070cd:	das    
  4070ce:	xchg   edx,eax
  4070cf:	test   bh,bl
  4070d1:	adc    eax,DWORD PTR [edi+0x71]
  4070d4:	and    esi,edi
  4070d6:	jle    0x40709b
  4070d8:	sbb    eax,0xc3f5b34c
  4070dd:	std    
  4070de:	sbb    DWORD PTR [esi+edx*4+0x7039b79e],ebx
  4070e5:	jne    0x4070a6
  4070e7:	mov    BYTE PTR [esi+0x3ad13244],ch
  4070ed:	mov    gs,WORD PTR [edx-0x5c]
  4070f0:	daa    
  4070f1:	data16 cmp BYTE PTR [ebx-0x14],0x3e
  4070f6:	jmp    0x40710b
  4070f8:	(bad)  
  4070fa:	mov    al,ds:0x6d935878
  4070ff:	push   0x3827163a
  407104:	cdq    
  407105:	fs jle 0x4070b6
  407108:	cmp    ch,al
  40710a:	dec    ebp
  40710b:	xchg   DWORD PTR [esi],ebx
  40710d:	pop    eax
  40710e:	push   0xffffffb5
  407110:	retf   0xce60
  407113:	out    dx,al
  407114:	bound  ebp,QWORD PTR [edi+0x7a28b79]
  40711a:	pop    ebp
  40711b:	adc    esp,DWORD PTR [ebx-0x70]
  40711e:	sti    
  40711f:	inc    ecx
  407120:	push   edx
  407121:	jb     0x407187
  407123:	lds    edi,FWORD PTR [ecx]
  407125:	add    DWORD PTR [edi-0x17d3cc0f],eax
  40712b:	xchg   esp,eax
  40712c:	mov    bl,0xf
  40712e:	xor    ebp,DWORD PTR [ecx-0x7c1d915a]
  407134:	sub    al,0xb
  407136:	popa   
  407137:	bound  edi,QWORD PTR [esi+eiz*8]
  40713a:	cdq    
  40713b:	mov    al,dh
  40713d:	aas    
  40713e:	into   
  40713f:	xor    DWORD PTR [esi-0x41057907],ebp
  407145:	icebp  
  407146:	xchg   dl,ah
  407148:	sbb    ecx,DWORD PTR [ecx+0x33f4b5e7]
  40714e:	ss icebp 
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xa6
  407180:	out    dx,al
  407181:	call   0x237e:0x7e1b37ac
  407188:	jg     0x407208
  40718a:	jle    0x407182
  40718c:	inc    edi
  40718d:	popf   
  40718e:	sbb    eax,0xad09a7d0
  407193:	xor    DWORD PTR ds:0x26444013,esi
  407199:	fdivr  QWORD PTR [esi+0x5e]
  40719c:	stos   BYTE PTR es:[edi],al
  40719d:	xchg   esp,eax
  40719e:	pop    esi
  40719f:	fcomi  st,st(0)
  4071a1:	xchg   ebp,eax
  4071a2:	mov    eax,0x22572fcc
  4071a7:	(bad)  
  4071a8:	pop    esp
  4071a9:	iret   
  4071aa:	sub    ebp,DWORD PTR [esi]
  4071ac:	inc    ebp
  4071ad:	or     al,ah
  4071af:	js     0x407216
  4071b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b2:	sbb    BYTE PTR [esi+0x7ecbb236],bl
  4071b8:	sbb    al,bh
  4071ba:	ror    eax,1
  4071bc:	jl     0x407191
  4071be:	aaa    
  4071bf:	nop
  4071c0:	je     0x4071cf
  4071c2:	lods   eax,DWORD PTR ds:[esi]
  4071c3:	sbb    dl,0x66
  4071c6:	outs   dx,BYTE PTR ds:[esi]
  4071c7:	cmp    al,0x6b
  4071c9:	lods   eax,DWORD PTR ds:[esi]
  4071ca:	enter  0x592b,0x15
  4071ce:	push   ebp
  4071cf:	push   cs
  4071d0:	adc    DWORD PTR [edx],edi
  4071d2:	add    edx,DWORD PTR [ebx+0x4]
  4071d5:	popf   
  4071d6:	repz lahf 
  4071d8:	loopne 0x407205
  4071da:	pushf  
  4071db:	adc    DWORD PTR [esi-0x4e0bf935],ebp
  4071e1:	push   ds
  4071e2:	cmp    eax,0x75ab798e
  4071e7:	pop    edx
  4071e8:	inc    ebp
  4071e9:	je     0x407254
  4071eb:	mov    edx,0x9858d8e3
  4071f0:	inc    eax
  4071f1:	das    
  4071f2:	popf   
  4071f3:	jecxz  0x4071ea
  4071f5:	sub    eax,0x79e02cce
  4071fa:	jg     0x40726a
  4071fc:	loopne 0x407217
  4071fe:	pop    eax
  4071ff:	mov    eax,ds:0xf6d1bce7
  407204:	cmp    BYTE PTR fs:[ebp-0x3c20291b],dh
  40720b:	and    DWORD PTR [edx],esi
  40720d:	ds sub al,0x25
  407210:	xor    BYTE PTR [esi+0x78383247],al
  407216:	cmp    dh,BYTE PTR [ebx+eiz*8]
  407219:	or     BYTE PTR [ebp-0x5f1bdb26],ch
  40721f:	jo     0x4071b6
  407221:	jbe    0x40722c
  407223:	jnp    0x407270
  407225:	mov    ah,0xa0
  407227:	daa    
  407228:	and    esi,DWORD PTR [esp+eiz*2+0x3f3c9a70]
  40722f:	adc    DWORD PTR [eax],ecx
  407231:	and    BYTE PTR [edi+0x25e0bf4d],al
  407237:	jl     0x407254
  407239:	sub    DWORD PTR [edx],ebp
  40723b:	cld    
  40723c:	cwde   
  40723d:	daa    
  40723e:	push   cs
  40723f:	cmc    
  407240:	sub    BYTE PTR [edi+0x5bf49734],cl
  407246:	adc    al,BYTE PTR [eax-0xeaaf1b3]
  40724c:	add    BYTE PTR [esi],ch
  40724e:	mul    BYTE PTR [ebp+0x3000d1ee]
  407254:	out    dx,al
  407255:	imul   edx,DWORD PTR [edi-0x6da3bad7],0x4c5c47d0
  40725f:	sbb    al,0xd2
  407261:	dec    esi
  407262:	cs pop ss
  407264:	inc    ecx
  407265:	pop    ss
  407266:	mov    edi,0xeede6928
  40726b:	fwait
  40726c:	cmc    
  40726d:	dec    esp
  40726e:	sbb    esi,esi
  407270:	sbb    dh,BYTE PTR [edi+0x2]
  407273:	repz fidivr WORD PTR [ebx-0x51]
  407277:	mov    esi,0xa6da0812
  40727c:	dec    ebx
  40727d:	js     0x407272
  40727f:	ins    BYTE PTR es:[edi],dx
  407280:	or     al,bl
  407282:	fnstenv [ebx-0xb3c3502]
  407288:	push   0x2d201fec
  40728d:	popa   
  40728e:	outs   dx,DWORD PTR ds:[esi]
  40728f:	aam    0xa0
  407291:	mov    WORD PTR [esi],fs
  407293:	fstp   DWORD PTR [ebp+ebx*8-0x2747a2a7]
  40729a:	push   ss
  40729b:	push   0xffffffc2
  40729d:	(bad)  
  40729e:	arpl   WORD PTR [edx+0x7d],ax
  4072a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a2:	pop    eax
  4072a3:	ret    0xa042
  4072a6:	mov    ds:0x5e15e241,eax
  4072ab:	cld    
  4072ac:	ret    
  4072ad:	mov    ebx,0xfea592a1
  4072b2:	arpl   WORD PTR [esp+edi*4],bp
  4072b5:	or     DWORD PTR [esi],esi
  4072b7:	sbb    DWORD PTR ds:0xd4156b44,edi
  4072bd:	push   edi
  4072be:	in     al,0xe7
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x79ca0f0c
  4072e9:	call   0x7e596bba
  4072ee:	jle    0x407313
  4072f0:	jg     0x407370
  4072f2:	jle    0x407369
  4072f4:	mov    ecx,0xed19c56e
  4072f9:	xchg   ebp,eax
  4072fa:	js     0x407375
  4072fc:	jne    0x407355
  4072fe:	sub    BYTE PTR [ebx-0x6c],0x98
  407302:	push   es
  407303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407304:	test   al,0x33
  407306:	stc    
  407307:	xchg   edx,eax
  407308:	imul   esi,DWORD PTR [esi+0x26d1489],0xb8380b55
  407312:	pop    eax
  407313:	xchg   ebx,eax
  407314:	adc    BYTE PTR [eax+0x10b4b2bc],bl
  40731a:	adc    bh,bl
  40731c:	daa    
  40731d:	(bad)  ds:0xb3a7f891
  407323:	pop    edx
  407324:	sub    BYTE PTR ds:0x2ade1ee5,bh
  40732a:	pop    ebx
  40732b:	aam    0x8
  40732d:	xlat   BYTE PTR ds:[ebx]
  40732e:	jmp    0xb561:0x73f851bd
  407335:	mov    al,0x7
  407337:	sub    al,0xb6
  407339:	rol    DWORD PTR [ebp+0x572102f0],1
  40733f:	add    ah,BYTE PTR [esi-0x5ffd0133]
  407345:	out    0x83,eax
  407347:	stos   DWORD PTR es:[edi],eax
  407348:	sahf   
  407349:	or     BYTE PTR [ebx-0x58],al
  40734c:	sbb    al,0xf5
  40734e:	leave  
  40734f:	test   BYTE PTR [esp+ebx*8-0x2d5168a9],dl
  407356:	push   esi
  407357:	shl    BYTE PTR gs:[ebx+0x6892fdc3],0x7e
  40735f:	cmp    BYTE PTR ds:0x3bcff459,0xd4
  407366:	cmp    al,0x66
  407368:	std    
  407369:	adc    eax,0x75008a07
  40736e:	ret    0x22c0
  407371:	retf   0x4bc1
  407374:	xor    DWORD PTR [edx+0x1a],0x7880d4c9
  40737b:	fidiv  WORD PTR [edi+0x45]
  40737e:	es call 0xdaf79d5e
  407384:	mov    edi,fs
  407386:	mov    al,0xb6
  407388:	popf   
  407389:	stos   BYTE PTR es:[edi],al
  40738a:	mov    edx,0xaf672374
  40738f:	(bad)  [ebx+edi*1+0x3ceff554]
  407396:	or     bl,BYTE PTR [ecx-0x19]
  407399:	mov    eax,0x5bbcb7ad
  40739f:	scas   al,BYTE PTR es:[edi]
  4073a0:	xchg   ebp,eax
  4073a1:	adc    al,0xf7
  4073a3:	sbb    eax,0x8cd3dca1
  4073a8:	jb     0x4073da
  4073aa:	(bad)  
  4073ab:	call   0xa0b2:0x397e40f9
  4073b2:	ins    BYTE PTR es:[edi],dx
  4073b3:	sbb    dh,BYTE PTR [esi]
  4073b5:	in     al,0xf1
  4073b7:	stos   BYTE PTR es:[edi],al
  4073b8:	shr    DWORD PTR [eax-0x65],1
  4073bb:	pushf  
  4073bc:	inc    ebx
  4073bd:	stc    
  4073be:	xchg   edi,eax
  4073bf:	stos   DWORD PTR es:[edi],eax
  4073c0:	or     edx,DWORD PTR [ecx-0xb]
  4073c3:	(bad)  
  4073c5:	xchg   edx,eax
  4073c6:	push   es
  4073c7:	in     eax,dx
  4073c8:	retf   
  4073c9:	retf   
  4073ca:	loop   0x4073d3
  4073cc:	retf   
  4073cd:	adc    eax,0xaa3747af
  4073d2:	sbb    eax,0x9d740cae
  4073d7:	in     eax,dx
  4073d8:	push   cs
  4073d9:	bound  edi,QWORD PTR [ebp+0x2bbd5d10]
  4073df:	jmp    0x2cd4:0x350b309f
  4073e6:	dec    ebx
  4073e7:	enter  0x768b,0x58
  4073eb:	xchg   ebx,eax
  4073ec:	aad    0xbb
  4073ee:	jecxz  0x4073e4
  4073f0:	dec    eax
  4073f1:	dec    esp
  4073f2:	or     BYTE PTR [eax+0x34],dl
  4073f5:	pop    ds
  4073f6:	loopne 0x407464
  4073f8:	(bad)  
  4073f9:	pop    ss
  4073fa:	xchg   edi,eax
  4073fb:	pop    edi
  4073fc:	inc    ecx
  4073fd:	mov    al,0xfa
  4073ff:	pop    eax
  407400:	fs push 0xffffffc8
  407403:	mov    dl,0x1b
  407405:	inc    esp
  407406:	jmp    0xc5c40284
  40740b:	push   ebx
  40740c:	mov    eax,0x2b1cac16
  407411:	je     0x407413
  407413:	popf   
  407414:	rol    BYTE PTR [eax-0x53],1
  407417:	sub    edx,DWORD PTR [edi]
  407419:	dec    eax
  40741a:	nop
  40741b:	enter  0xc6dc,0xab
  40741f:	jl     0x40747b
  407421:	ins    BYTE PTR es:[edi],dx
  407422:	xchg   esi,eax
  407423:	or     ah,BYTE PTR [edx+0x3e]
  407426:	add    BYTE PTR [edi+ebx*2],0xc9
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x68d5d801],edi
  407443:	xchg   esi,eax
  407444:	sub    al,0xad
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x64bef2cd
  40744e:	aaa    
  40744f:	jae    0x4073f9
  407451:	adc    ebp,DWORD PTR [ecx+0x64777182]
  407457:	jecxz  0x407430
  407459:	enter  0xa969,0xc3
  40745d:	mov    dh,0xe1
  40745f:	xor    esp,esi
  407461:	shr    ah,cl
  407463:	push   ecx
  407464:	or     BYTE PTR [eax+0x25],ch
  407467:	jno    0x4073f7
  407469:	mov    edx,eax
  40746b:	push   cs
  40746c:	pushf  
  40746d:	push   edx
  40746e:	scas   al,BYTE PTR es:[edi]
  40746f:	daa    
  407470:	fsub   st(6),st
  407472:	(bad)  
  407473:	dec    esi
  407474:	xor    DWORD PTR [ebx+0x15],ebp
  407477:	xchg   ebp,eax
  407478:	fnsave [esi]
  40747a:	mov    cl,0x91
  40747c:	push   0x42
  40747e:	loopne 0x40744d
  407480:	ret    0xd97c
  407483:	daa    
  407484:	xor    edx,DWORD PTR [esi+0x7b]
  407487:	cli    
  407488:	pop    es
  407489:	or     ebx,DWORD PTR [edx+eiz*8+0x3]
  40748d:	sub    al,0xc9
  40748f:	int3   
  407490:	int    0x11
  407492:	aas    
  407493:	push   ebp
  407494:	hlt    
  407495:	mov    dl,0x9a
  407497:	adc    BYTE PTR [eax+eax*4-0x335d6fc4],ch
  40749e:	xor    eax,0xa7da93c9
  4074a3:	(bad)  
  4074a5:	scas   al,BYTE PTR es:[edi]
  4074a6:	sahf   
  4074a7:	jmp    0x4074fd
  4074a9:	jle    0x4074db
  4074ab:	es outs dx,BYTE PTR cs:[esi]
  4074ae:	xchg   edx,eax
  4074af:	lahf   
  4074b0:	int3   
  4074b1:	adc    DWORD PTR [ecx],0xb5e3b30f
  4074b7:	jo     0x407458
  4074b9:	inc    edx
  4074ba:	ds push ecx
  4074bc:	or     esi,eax
  4074be:	adc    edi,DWORD PTR ds:0x6024e82e
  4074c4:	addr16 mov ds:0x1e0,eax
  4074c8:	sbb    eax,eax
  4074ca:	xor    esi,DWORD PTR [edx+0xd]
  4074cd:	and    dh,dl
  4074cf:	repz jl 0x407473
  4074d2:	mov    esi,0x581f2aff
  4074d7:	leave  
  4074d8:	jmp    0xcd5cd82
  4074dd:	aam    0x10
  4074df:	cmp    DWORD PTR [ebx+0x12],0xffffffdf
  4074e3:	sbb    al,ch
  4074e5:	sbb    eax,0x31d2dadb
  4074ea:	inc    esp
  4074eb:	in     eax,0xbb
  4074ed:	pusha  
  4074ee:	xlat   BYTE PTR ds:[ebx]
  4074ef:	fst    QWORD PTR [edx+0x7d]
  4074f2:	sub    eax,0xdc538d17
  4074f7:	jmp    0x407551
  4074f9:	adc    ah,BYTE PTR [edx+0xa8894e3]
  4074ff:	dec    edi
  407500:	lahf   
  407501:	mov    ebx,DWORD PTR [ebp-0x5261963f]
  407507:	add    DWORD PTR [ebp-0x39e59acc],ecx
  40750d:	mov    dl,0x4a
  40750f:	stos   DWORD PTR es:[edi],eax
  407510:	cwde   
  407511:	inc    eax
  407512:	mov    dh,0xfa
  407514:	sbb    DWORD PTR [edx+0x44f81ecf],edi
  40751a:	hlt    
  40751b:	sub    eax,0xca94629d
  407520:	add    DWORD PTR es:[edx],0xab7d47c3
  407527:	add    eax,0x86e07e38
  40752c:	dec    edx
  40752d:	dec    esp
  40752e:	push   eax
  40752f:	cmp    DWORD PTR [edx+0x6d],eax
  407532:	add    al,0xca
  407534:	pop    ds
  407535:	call   0xddc0955c
  40753a:	popa   
  40753b:	outs   dx,BYTE PTR ds:[esi]
  40753c:	lods   al,BYTE PTR ds:[esi]
  40753d:	cli    
  40753e:	adc    al,0xb4
  407540:	nop
  407541:	outs   dx,DWORD PTR ds:[esi]
  407542:	call   0x2031:0x50f6e6e0
  407549:	or     BYTE PTR ds:0x5d2936ee,0xd2
  407550:	cwde   
  407551:	dec    esp
  407552:	add    ah,dh
  407554:	xor    DWORD PTR [edi-0xa42489],ecx
  40755a:	inc    edi
  40755b:	inc    ebx
  40755c:	test   eax,0x8b081760
  407561:	(bad)  
  407562:	int    0x42
  407564:	(bad)  
  407565:	sbb    DWORD PTR [eax],esp
  407567:	mov    ds:0xc579868c,al
  40756c:	outs   dx,DWORD PTR ds:[esi]
  40756d:	test   al,0xcc
  40756f:	jmp    0x407565
  407571:	fmul   st,st(0)
  407573:	add    ebp,DWORD PTR [esi+0x517a45eb]
  407579:	sub    al,0x88
  40757b:	lods   eax,DWORD PTR ds:[esi]
  40757c:	jne    0x4075f5
  40757e:	(bad)  
  40757f:	or     eax,0xdc59d5ab
  407584:	popf   
  407585:	bound  esi,QWORD PTR [eax+edi*4-0xe9fcf2a]
  40758c:	inc    esp
  40758d:	out    0x2e,al
  40758f:	call   0x8660:0x78d6198a
  407596:	sub    ebp,ebx
  407598:	stos   DWORD PTR es:[edi],eax
  407599:	aad    0x9b
  40759b:	mov    al,ds:0x25903bdc
  4075a0:	push   esp
  4075a1:	into   
  4075a2:	inc    ecx
  4075a3:	add    bh,BYTE PTR [edx-0x1cc59489]
  4075a9:	enter  0xa1df,0x0
  4075ad:	xchg   esi,eax
  4075ae:	cmc    
  4075af:	xor    DWORD PTR gs:[edx],ebp
  4075b2:	inc    esi
  4075b3:	dec    eax
  4075b4:	mov    ds:0xb6538cfd,eax
  4075b9:	adc    ch,bl
  4075bb:	mov    DWORD PTR [ecx+0x51],edx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi-0x60]
  4076f9:	cld    
  4076fa:	dec    ecx
  4076fb:	mov    DWORD PTR [edi+ebx*1],ebx
  4076fe:	jle    0x40777e
  407700:	jmp    0xbdbef584
  407705:	scas   al,BYTE PTR es:[edi]
  407706:	mov    al,ds:0x2998eb52
  40770b:	iret   
  40770c:	mov    BYTE PTR [esi],0xa8
  40770f:	in     al,dx
  407710:	call   0xb1cc07a2
  407715:	ret    
  407716:	push   es
  407717:	dec    eax
  407718:	fnstcw WORD PTR [esi-0x67d14de8]
  40771e:	jl     0x4076e6
  407720:	std    
  407721:	pop    es
  407722:	addr16 xchg ebp,eax
  407724:	fldenv [esp+eax*2]
  407727:	xchg   esp,eax
  407728:	(bad)  
  407729:	aas    
  40772a:	bound  esp,QWORD PTR [edi+0x519746a8]
  407730:	jbe    0x40778d
  407732:	fmul   st(7),st
  407734:	fcmovu st,st(1)
  407736:	add    eax,0xdea7b902
  40773b:	mov    ds:0xe27bac20,al
  407740:	(bad)  
  407742:	test   DWORD PTR [esi],ebp
  407744:	add    bl,bl
  407746:	sub    cl,cl
  407748:	(bad)  
  407749:	add    edi,DWORD PTR [esi-0x7e6cf658]
  40774f:	(bad)  
  407751:	xchg   BYTE PTR [edx-0x48],dh
  407754:	lds    esp,FWORD PTR [eax-0x4e9ad63e]
  40775a:	push   eax
  40775b:	ja     0x407751
  40775d:	dec    ebp
  40775e:	add    ecx,DWORD PTR [ecx+0x28d260cf]
  407764:	arpl   WORD PTR [edi+0x241953b6],sp
  40776a:	mov    ch,0xf
  40776c:	in     al,0x1f
  40776e:	mov    al,0x4a
  407770:	(bad)  
  407771:	jp     0x407767
  407773:	repnz mov edx,0x3d19fe8f
  407779:	int    0x3f
  40777b:	push   edx
  40777c:	dec    esi
  40777d:	es inc edi
  40777f:	sbb    ch,BYTE PTR [esi]
  407781:	xor    eax,edi
  407783:	add    ebp,ebp
  407785:	sahf   
  407786:	cmp    al,0xdb
  407788:	xchg   ebx,eax
  407789:	out    dx,al
  40778a:	ret    
  40778b:	popf   
  40778c:	(bad)  
  40778d:	pop    eax
  40778e:	jae    0x4077a1
  407790:	lds    ebp,FWORD PTR [esi]
  407792:	nop
  407793:	jbe    0x4077f4
  407795:	mov    BYTE PTR [edx-0x2a],bh
  407798:	jno    0x407812
  40779a:	iret   
  40779b:	push   ebx
  40779c:	adc    al,0x2
  40779e:	scas   al,BYTE PTR es:[edi]
  40779f:	adc    eax,DWORD PTR [esi+0x6559d2a9]
  4077a5:	push   esi
  4077a6:	(bad)  
  4077a7:	sahf   
  4077a8:	mov    dl,0xd1
  4077aa:	test   DWORD PTR ds:[edi+0x41420a34],esi
  4077b1:	xchg   ebx,eax
  4077b2:	in     eax,0x6
  4077b4:	push   es
  4077b5:	out    0x3e,al
  4077b7:	fucom  st(6)
  4077b9:	push   0xffffffe2
  4077bb:	add    al,0x2
  4077bd:	ds push ebp
  4077bf:	mov    dh,0xed
  4077c1:	jle    0x40777c
  4077c3:	add    cl,cl
  4077c5:	push   edi
  4077c6:	(bad)  
  4077c7:	sti    
  4077c8:	mov    dl,0x46
  4077ca:	cmp    BYTE PTR [edx-0x615504de],cl
  4077d0:	sbb    al,0x11
  4077d2:	and    ebx,DWORD PTR [ebp+0x423b77bc]
  4077d8:	mov    dl,0xa4
  4077da:	iret   
  4077db:	das    
  4077dc:	aas    
  4077dd:	mov    ah,0xb5
  4077df:	pushf  
  4077e0:	ja     0x4077e1
  4077e2:	xor    BYTE PTR [esi],bh
  4077e4:	not    DWORD PTR [ebp+eiz*2+0x38b11e21]
  4077eb:	cmp    al,0xc5
  4077ed:	inc    ebx
  4077ee:	pop    ecx
  4077ef:	jmp    0xd6a3:0x2a7b567a
  4077f6:	xor    DWORD PTR [edx+0x3c5db8b7],eax
  4077fc:	xchg   edi,eax
  4077fd:	push   ecx
  4077fe:	stc    
  4077ff:	sti    
  407800:	xlat   BYTE PTR ds:[ebx]
  407801:	sub    DWORD PTR [edx+0x5d8186f3],ecx
  407807:	gs mov cl,0x65
  40780a:	sub    eax,0xa3e58b89
  40780f:	xchg   DWORD PTR [edi-0x5905c007],edx
  407815:	inc    esp
  407816:	int    0x4d
  407818:	jo     0x407871
  40781a:	std    
  40781b:	jle    0x40783b
  40781d:	je     0x4077df
  40781f:	shl    BYTE PTR [ecx+0x1cb46da8],1
  407825:	jmp    0x7801b98c
  40782a:	mov    ebx,0x1fefbbd4
  40782f:	adc    ah,0xa6
  407832:	xor    BYTE PTR ds:0x50fb907d,0x64
  407839:	pushf  
  40783a:	imul   ebx,DWORD PTR ds:0xa865f090,0x22
  407841:	or     BYTE PTR [ebx],0xff
  407844:	cmp    dl,al
  407846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407847:	(bad)  
  407848:	fimul  WORD PTR [eax]
  40784a:	fcomp  QWORD PTR [esi]
  40784c:	push   edx
  40784d:	mov    ds:0x2fc186f8,eax
  407852:	(bad)  
  407853:	mov    esp,0x900f1402
  407858:	cmp    DWORD PTR [edx+0x65e4418f],ebp
  40785e:	inc    edi
  407860:	or     eax,0xa891fc5f
  407865:	int    0xcc
  407867:	or     bl,dh
  407869:	retf   
  40786a:	cmp    esi,0x1d
  40786d:	iret   
  40786e:	and    edx,DWORD PTR [ebx+0xf32c7a1]
  407874:	test   BYTE PTR [ebx-0x16fffffd],cl
  40787a:	xchg   DWORD PTR [ecx],eax
  40787c:	add    BYTE PTR [eax],al
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x47ec458c],0xffffffca
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078ca
  407897:	push   es
  407898:	outs   dx,BYTE PTR ds:[esi]
  407899:	outs   dx,BYTE PTR ds:[esi]
  40789a:	push   esi
  40789b:	jns    0x40786f
  40789d:	cwde   
  40789e:	adc    BYTE PTR [ebp-0x695a2ed7],al
  4078a4:	cmp    dl,al
  4078a6:	in     al,0xb4
  4078a8:	ins    DWORD PTR es:[edi],dx
  4078a9:	xchg   edi,eax
  4078aa:	push   ebp
  4078ab:	xchg   ebp,eax
  4078ac:	fucomi st,st(4)
  4078ae:	push   eax
  4078af:	in     al,dx
  4078b0:	ins    DWORD PTR es:[edi],dx
  4078b1:	adc    eax,0xd236e7a2
  4078b6:	add    edi,DWORD PTR [ebp+0x7fe8eab0]
  4078bc:	aad    0xfe
  4078be:	pop    ebp
  4078bf:	and    eax,0x48d0f143
  4078c4:	push   cs
  4078c5:	pop    edx
  4078c6:	dec    edi
  4078c7:	mov    ch,0xfb
  4078c9:	push   0x993df72c
  4078ce:	aad    0xb9
  4078d0:	in     al,dx
  4078d1:	and    eax,0x871c3b9e
  4078d6:	rcl    DWORD PTR [edx+0x58],0xe6
  4078da:	int    0xae
  4078dc:	mov    ch,0x54
  4078de:	pusha  
  4078df:	cmp    eax,0xd6d7e4d2
  4078e4:	cs test al,0xaa
  4078e7:	retf   0x51e8
  4078ea:	jns    0x4078d7
  4078ec:	jle    0x4078dd
  4078ee:	xchg   BYTE PTR [ebx+0x4175269f],ah
  4078f4:	or     al,0xdf
  4078f6:	sti    
  4078f7:	or     ebx,DWORD PTR [esi]
  4078f9:	and    DWORD PTR [edx+0x29],edx
  4078fc:	cmp    ebx,edi
  4078fe:	push   cs
  4078ff:	add    BYTE PTR [ebp-0x80],al
  407902:	inc    esp
  407903:	cli    
  407904:	pop    ebx
  407905:	xchg   edi,eax
  407906:	fwait
  407907:	and    al,0x58
  407909:	cmp    cl,BYTE PTR [ebx-0x35]
  40790c:	mov    edx,DWORD PTR [esi+0x15]
  40790f:	mov    ebx,0x4458e611
  407914:	pop    ss
  407915:	cmc    
  407916:	test   DWORD PTR [edx+ebx*4+0xe624d6a],edi
  40791d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791e:	sbb    esi,DWORD PTR [edi+edi*4+0x55]
  407922:	sbb    al,0xc9
  407924:	(bad)  
  407925:	rol    DWORD PTR [ebp+0x1c],cl
  407928:	dec    ebp
  407929:	or     cl,BYTE PTR [edx-0x5d]
  40792c:	lods   al,BYTE PTR ds:[esi]
  40792d:	pop    ds
  40792e:	popa   
  40792f:	iret   
  407930:	iret   
  407931:	inc    ebx
  407932:	mov    ah,0x60
  407934:	add    al,0x7d
  407936:	out    0x21,al
  407938:	push   ebp
  407939:	mov    bh,0xcc
  40793b:	out    dx,al
  40793c:	stc    
  40793d:	or     BYTE PTR [ebp+0xc],al
  407940:	mov    eax,0xc526ee4c
  407945:	and    al,0xb7
  407947:	mov    cl,0x4f
  407949:	sbb    ah,BYTE PTR [edi+edi*8]
  40794c:	push   ebx
  40794d:	adc    dl,BYTE PTR [ebx+0x3]
  407950:	mov    ebp,0xd4344a56
  407955:	stc    
  407956:	push   ss
  407957:	sub    BYTE PTR cs:[ecx+0x26],dl
  40795b:	sub    bh,ah
  40795d:	xchg   BYTE PTR [ebp-0x70],bh
  407960:	sahf   
  407961:	dec    esi
  407962:	add    esi,eax
  407964:	jmp    0x23:0x97abda6c
  40796b:	mov    WORD PTR [ebx-0x62],?
  40796e:	std    
  40796f:	jae    0x407955
  407971:	sub    eax,0x2cfe031c
  407976:	aas    
  407977:	jne    0x4079a8
  407979:	pop    ecx
  40797a:	push   ebx
  40797b:	xor    eax,0x3d9c80cb
  407980:	enter  0x2674,0x41
  407984:	in     eax,dx
  407985:	lea    ebx,[esi]
  407987:	test   BYTE PTR [ecx+ebp*2+0x6aeec3c3],0xf2
  40798f:	sub    al,0xe0
  407991:	push   edx
  407992:	rol    DWORD PTR [edx-0x38],1
  407995:	test   DWORD PTR [eax-0x6ea86bca],ecx
  40799b:	lea    edi,[edi]
  40799d:	xlat   BYTE PTR ds:[ebx]
  40799e:	xlat   BYTE PTR ds:[ebx]
  40799f:	push   ecx
  4079a0:	sbb    eax,0x9011cd57
  4079a5:	and    DWORD PTR [edi-0x2d603fc8],ebp
  4079ab:	sub    bh,BYTE PTR [ecx]
  4079ad:	dec    esp
  4079ae:	in     eax,0x72
  4079b0:	into   
  4079b1:	xchg   ebp,eax
  4079b2:	xchg   esp,eax
  4079b3:	retf   
  4079b4:	aam    0xbb
  4079b6:	sub    edx,DWORD PTR [eax]
  4079b8:	and    BYTE PTR es:[ebp+0x4e],dh
  4079bc:	jno    0x407953
  4079be:	and    DWORD PTR [eax-0x704155ff],0xffffffda
  4079c5:	pop    edx
  4079c6:	out    0xd7,eax
  4079c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c9:	dec    ebx
  4079ca:	mov    WORD PTR [ebx-0x63],gs
  4079cd:	sub    ecx,DWORD PTR [ebx-0x41]
  4079d0:	xchg   DWORD PTR [edx-0x155f8d7c],eax
  4079d6:	ret    
  4079d7:	test   eax,0x463b1c17
  4079dc:	repnz das 
  4079de:	or     BYTE PTR [ebx+ebp*8-0x1d42644c],ch
  4079e5:	jmp    0xf941:0xf1bb02f4
  4079ec:	mov    eax,0xe8a7929e
  4079f1:	push   edx
  4079f2:	call   0x4c9e:0x93d97418
  4079f9:	inc    esi
  4079fa:	mov    ds:0xa54132f,eax
  4079ff:	enterw 0xfa,0xda
  407a04:	js     0x407991
  407a06:	push   ebp
  407a07:	clc    
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x13],0x74
  407a27:	js     0x407a02
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0xc0bef8b1
  407a32:	push   esp
  407a33:	fnstcw WORD PTR [esi+0x6599dbfe]
  407a39:	cld    
  407a3a:	sub    DWORD PTR [ebp-0x1201d568],eax
  407a40:	(bad)  
  407a41:	stos   DWORD PTR es:[edi],eax
  407a42:	adc    al,0x5
  407a44:	rcr    BYTE PTR [edi],0x46
  407a47:	cmp    DWORD PTR [ecx+0x41],ebp
  407a4a:	outs   dx,DWORD PTR ds:[esi]
  407a4b:	mov    bl,0x66
  407a4d:	inc    edx
  407a4e:	mov    WORD PTR [edi-0x2b],?
  407a51:	aam    0x1b
  407a53:	jg     0x407aac
  407a55:	inc    ebp
  407a56:	sbb    DWORD PTR [ebp-0x75],0x4471cae3
  407a5d:	shr    DWORD PTR [edx-0x74],0x81
  407a61:	leave  
  407a62:	cmp    bl,BYTE PTR [edx]
  407a64:	call   0xb159:0x9765d05b
  407a6b:	sbb    dh,0x70
  407a6e:	bound  ebp,QWORD PTR [esi-0x73411c05]
  407a74:	pop    esi
  407a75:	addr16 retw 0xd619
  407a7a:	dec    esi
  407a7b:	push   edi
  407a7c:	out    dx,eax
  407a7d:	popf   
  407a7e:	adc    cl,ch
  407a80:	lahf   
  407a81:	cwde   
  407a82:	in     eax,0x22
  407a84:	mov    ah,0x5f
  407a86:	lock push ecx
  407a88:	sar    DWORD PTR [edx],0xd3
  407a8b:	and    DWORD PTR [esi-0x410dede0],eax
  407a91:	or     al,0x2f
  407a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a94:	scas   eax,DWORD PTR es:[edi]
  407a95:	or     BYTE PTR [ebx+0x6e],dh
  407a98:	push   esi
  407a99:	dec    ebx
  407a9a:	mov    edx,0x167fc52d
  407a9f:	sbb    edx,edi
  407aa1:	mov    DWORD PTR [edi-0x30],ebx
  407aa4:	rol    DWORD PTR [esi+edi*1],cl
  407aa7:	bound  edx,QWORD PTR [ecx+ebp*2-0x2fb5cef7]
  407aae:	dec    eax
  407aaf:	pop    eax
  407ab0:	sar    DWORD PTR [ecx+0x7c],cl
  407ab3:	or     bh,BYTE PTR [ebp+ebx*2+0x3]
  407ab7:	(bad)  [edi+0x38fbdb86]
  407abd:	adc    bh,BYTE PTR [edx]
  407abf:	test   al,0x31
  407ac1:	shl    DWORD PTR [ebx-0x37],1
  407ac4:	les    esi,FWORD PTR [edi]
  407ac6:	ds mov edx,ebp
  407ac9:	inc    edx
  407aca:	dec    esi
  407acb:	xchg   DWORD PTR [ecx+0x13],edx
  407ace:	nop
  407acf:	and    DWORD PTR [edi],ebx
  407ad1:	sbb    eax,0xfc3e1e3
  407ad6:	loope  0x407adc
  407ad8:	adc    al,BYTE PTR [bx+di-0xab3]
  407add:	jg     0x407a9b
  407adf:	or     ebx,edi
  407ae1:	mov    esi,0xbf4c12e0
  407ae6:	packssdw mm7,mm4
  407ae9:	popa   
  407aea:	add    DWORD PTR [esp+ebx*8-0x4c],edx
  407aee:	mov    edi,0xdf30ffa4
  407af3:	push   edi
  407af4:	sbb    DWORD PTR [edi],esp
  407af6:	ds mov edi,0x264d65a
  407afc:	outs   dx,BYTE PTR ds:[esi]
  407afd:	mov    cl,0x74
  407aff:	mov    edx,0xa79ed7a7
  407b04:	cs es rcr dh,0xe1
  407b09:	out    dx,al
  407b0a:	push   ds
  407b0b:	bound  ebx,QWORD PTR [ecx-0x11d8268f]
  407b11:	mov    ebp,0x9427c7f0
  407b16:	cli    
  407b17:	inc    esp
  407b18:	dec    ecx
  407b19:	pop    es
  407b1a:	push   0x64b0fec0
  407b1f:	mov    edi,0xcfc3ece9
  407b24:	xor    eax,0xb9cf7bf3
  407b29:	mov    bl,BYTE PTR [esi]
  407b2b:	lea    esp,[eax-0x3e]
  407b2e:	xchg   esp,eax
  407b2f:	sub    ah,al
  407b31:	jge    0x407ad6
  407b33:	std    
  407b34:	cmp    al,0xf3
  407b36:	adc    bh,BYTE PTR [ecx]
  407b38:	and    bh,BYTE PTR [edi-0x7f4ad840]
  407b3e:	or     esi,esp
  407b40:	mov    BYTE PTR [eax+esi*2-0x63],dh
  407b44:	daa    
  407b45:	(bad)  
  407b47:	stos   BYTE PTR es:[edi],al
  407b48:	or     BYTE PTR [ecx+0x66fdd2ae],ch
  407b4e:	ror    DWORD PTR [ebx],0x2d
  407b51:	cmp    ah,bh
  407b53:	shl    DWORD PTR [eax-0x78ceafbb],1
  407b59:	(bad)  
  407b5a:	fiadd  WORD PTR [ebp+0x39]
  407b5d:	cwde   
  407b5e:	scas   eax,DWORD PTR es:[edi]
  407b5f:	add    BYTE PTR [edi-0x5cb264d8],0x44
  407b66:	inc    eax
  407b67:	mov    BYTE PTR [edx-0x16],al
  407b6a:	push   esp
  407b6b:	cmp    eax,esp
  407b6d:	mov    bl,0x6b
  407b6f:	aam    0xc6
  407b71:	ret    0xc4e5
  407b74:	jae    0x407b4c
  407b76:	cmp    DWORD PTR [edx-0x6f],0x99426656
  407b7d:	div    BYTE PTR [edx]
  407b7f:	xor    esi,DWORD PTR [ecx-0x1967da10]
  407b85:	push   esp
  407b86:	(bad)  
  407b87:	and    DWORD PTR [eax],ebx
  407b89:	iret   
  407b8a:	pop    es
  407b8b:	mov    edx,0xdd552d4c
  407b90:	fs loope 0x407b4b
  407b93:	repz jge 0x407bca
  407b96:	cmc    
  407b97:	sub    al,0xd0
  407b99:	daa    
  407b9a:	sahf   
  407b9b:	jg     0x407b25
  407b9d:	dec    eax
  407b9e:	jns    0x407bf7
  407ba0:	add    edi,DWORD PTR [ebp+0x10]
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x8e1d:0xc2fdba79
  407cce:	pop    ecx
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407d20
  407cd8:	pop    ds
  407cd9:	mul    DWORD PTR [ebx+0x6b180e5f]
  407cdf:	js     0x407d0d
  407ce1:	mov    al,0x62
  407ce3:	stos   DWORD PTR es:[edi],eax
  407ce4:	fs out dx,al
  407ce6:	mov    WORD PTR [ebx+0x1b],fs
  407ce9:	pop    ebx
  407cea:	repz stc 
  407cec:	ja     0x407d4b
  407cee:	jns    0x407c70
  407cf0:	ds push es
  407cf2:	pop    ds
  407cf3:	and    ax,0xb43b
  407cf7:	sbb    esi,ecx
  407cf9:	fldenv fs:[esp+ebp*8]
  407cfd:	xor    al,0x9d
  407cff:	inc    BYTE PTR [edi+0x1af95418]
  407d05:	or     bh,BYTE PTR [edi+edx*4-0x36]
  407d09:	ss stos DWORD PTR es:[edi],eax
  407d0b:	or     esp,DWORD PTR [eax]
  407d0d:	mov    fs,WORD PTR [ebx]
  407d0f:	(bad)  
  407d10:	mov    WORD PTR [edi+0x57],gs
  407d13:	add    edi,DWORD PTR [edx+0x24]
  407d16:	jbe    0x407d34
  407d18:	pop    edi
  407d19:	jae    0x407cb2
  407d1b:	clc    
  407d1c:	mov    ds:0x1f46217a,al
  407d21:	popa   
  407d22:	pop    eax
  407d23:	lahf   
  407d24:	fwait
  407d25:	cdq    
  407d26:	(bad)  
  407d27:	ja     0x407d6d
  407d29:	call   DWORD PTR [esi]
  407d2b:	sub    al,0x6a
  407d2d:	pop    eax
  407d2e:	sub    DWORD PTR [ebx+0x26],ebp
  407d31:	gs pop ecx
  407d33:	jno    0x407d4c
  407d35:	daa    
  407d36:	leave  
  407d37:	jecxz  0x407d3e
  407d39:	imul   eax,DWORD PTR ds:0x54d1ba31,0x44d3e817
  407d43:	scas   al,BYTE PTR es:[edi]
  407d44:	inc    esp
  407d45:	cmc    
  407d46:	and    bh,BYTE PTR [edx+0xe7fe657]
  407d4c:	into   
  407d4d:	push   ecx
  407d4e:	xor    BYTE PTR [esi-0x48],dh
  407d51:	adc    eax,0xcf3ba1d
  407d56:	xor    DWORD PTR [esi],0x41
  407d59:	jg     0x407d2a
  407d5b:	std    
  407d5c:	test   BYTE PTR [eax+0x78],bh
  407d5f:	push   ds
  407d60:	and    ch,BYTE PTR [ebx-0x19]
  407d63:	xchg   ecx,eax
  407d64:	jmp    0x157a45b0
  407d69:	(bad)  
  407d6a:	call   0x9ba70593
  407d6f:	cli    
  407d70:	lsl    eax,cx
  407d73:	xchg   ebx,eax
  407d74:	add    al,0x28
  407d76:	dec    esp
  407d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d78:	fst    DWORD PTR [esi+0x69]
  407d7b:	cmp    ebx,DWORD PTR [ebx]
  407d7d:	nop
  407d7e:	js     0x407d28
  407d80:	jecxz  0x407d54
  407d82:	and    BYTE PTR [esi+esi*1-0xc],bh
  407d86:	cmp    BYTE PTR [ecx],dl
  407d88:	push   edx
  407d89:	jo     0x407d21
  407d8b:	and    ecx,edi
  407d8d:	push   eax
  407d8e:	xor    DWORD PTR [edx+0x7d],0x97c922ff
  407d95:	mov    al,ds:0x311a5ff7
  407d9a:	inc    esp
  407d9b:	xor    DWORD PTR [eax],edx
  407d9d:	les    ecx,FWORD PTR es:[ecx-0x23]
  407da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da2:	adc    esi,esi
  407da4:	mov    ecx,0xd3382f7d
  407da9:	jns    0x407e22
  407dab:	dec    esp
  407dac:	xchg   ebp,eax
  407dad:	pop    ecx
  407dae:	test   al,0xef
  407db0:	ror    DWORD PTR [esi-0x1f],cl
  407db3:	xchg   BYTE PTR [ecx+0x868ecdf],ah
  407db9:	push   eax
  407dba:	cmp    ah,BYTE PTR [esi]
  407dbc:	sub    DWORD PTR [ecx+0x3d],esp
  407dbf:	xlat   BYTE PTR ds:[ebx]
  407dc0:	adc    DWORD PTR [ebx+0x53e4a916],ebp
  407dc6:	sub    al,0x64
  407dc8:	sub    al,0xed
  407dca:	sub    eax,0xa449d403
  407dcf:	les    ebp,FWORD PTR [ebx]
  407dd1:	mov    al,ds:0x66f232b
  407dd6:	je     0x407dd4
  407dd8:	xor    eax,0xc57f5c10
  407ddd:	jmp    0x276f117c
  407de2:	xchg   BYTE PTR [edx],dh
  407de4:	jp     0x407d6f
  407de6:	pop    edi
  407de7:	repnz test BYTE PTR [ebx*2+0x18733e2b],cl
  407def:	js     0x407dec
  407df1:	inc    edi
  407df2:	and    ebp,0xffffffe2
  407df5:	jp     0x407d86
  407df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df8:	cmp    BYTE PTR [esi+0x3a],dl
  407dfb:	(bad)  
  407dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfe:	in     eax,dx
  407dff:	shl    bl,0x5f
  407e02:	dec    edi
  407e03:	enter  0x9e89,0x94
  407e07:	call   FWORD PTR [ecx+0x7c]
  407e0a:	xchg   ecx,eax
  407e0b:	sti    
  407e0c:	mov    esp,0x7429cd86
  407e11:	xchg   esi,eax
  407e12:	mov    edx,0x5cab2b7b
  407e17:	or     ah,BYTE PTR [esi]
  407e19:	stos   DWORD PTR es:[edi],eax
  407e1a:	push   cs
  407e1b:	inc    edi
  407e1c:	int3   
  407e1d:	sub    ebp,DWORD PTR [edx+0x5c9e4864]
  407e23:	ror    BYTE PTR [ecx+0x56a62548],cl
  407e29:	add    edi,DWORD PTR [ebp+edx*4+0x6c]
  407e2d:	aaa    
  407e2e:	scas   al,BYTE PTR es:[edi]
  407e2f:	xor    bh,BYTE PTR [eax-0x2b]
  407e32:	fwait
  407e33:	retf   
  407e34:	xor    cl,bl
  407e36:	lock scas al,BYTE PTR es:[edi]
  407e38:	mov    edi,0x5c7c63b
  407e3d:	loop   0x407dea
  407e3f:	inc    ecx
  407e40:	add    ch,dl
  407e42:	inc    ebp
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [esi+0x4f809886],eax
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e8a
  407e90:	add    ecx,edx
  407e92:	test   BYTE PTR [esi],al
  407e94:	jae    0x407e95
  407e96:	xlat   BYTE PTR ds:[ebx]
  407e97:	pop    edi
  407e98:	shl    BYTE PTR [eax],1
  407e9a:	ret    0x1853
  407e9d:	sbb    edx,DWORD PTR [edx]
  407e9f:	out    0x5d,al
  407ea1:	cwde   
  407ea2:	xor    DWORD PTR [ecx-0x1f],0x7ad27c8d
  407ea9:	inc    ebx
  407eaa:	mov    ah,0x54
  407eac:	add    bl,0x9f
  407eaf:	inc    edi
  407eb0:	xchg   edx,eax
  407eb1:	inc    edx
  407eb2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407eb4:	cld    
  407eb5:	adc    BYTE PTR [esi-0x2f],ah
  407eb8:	push   ecx
  407eb9:	scas   al,BYTE PTR es:[edi]
  407eba:	icebp  
  407ebb:	imul   ch
  407ebd:	fadd   st,st(4)
  407ebf:	push   ebp
  407ec0:	in     al,0xe5
  407ec2:	sub    BYTE PTR [eax+0x3131053f],0x7
  407ec9:	mov    esi,0x8294ea93
  407ece:	and    BYTE PTR [edi+0x21],bl
  407ed1:	xchg   DWORD PTR [ecx+0x37],ecx
  407ed4:	push   es
  407ed5:	(bad)  
  407ed6:	and    eax,0x274f099a
  407edb:	aaa    
  407edc:	or     al,0xf0
  407ede:	int    0x6
  407ee0:	push   esi
  407ee1:	imul   ebx,DWORD PTR [edx+0x50],0x7b
  407ee5:	jnp    0x407ec9
  407ee7:	leave  
  407ee8:	(bad)  
  407ee9:	pop    edx
  407eea:	outs   dx,BYTE PTR ds:[esi]
  407eeb:	popa   
  407eec:	cmp    DWORD PTR [eax-0x61e9534f],ecx
  407ef2:	into   
  407ef3:	std    
  407ef4:	inc    edx
  407ef5:	ja     0x407ef5
  407ef7:	loope  0x407f76
  407ef9:	inc    esi
  407efa:	call   0xfc55:0x4b9a13f3
  407f01:	stos   BYTE PTR es:[edi],al
  407f02:	inc    edx
  407f03:	ins    DWORD PTR es:[edi],dx
  407f04:	sub    ebx,edi
  407f06:	(bad)  
  407f07:	imul   edi,DWORD PTR [esi],0xffffffae
  407f0a:	repz mov al,0xcc
  407f0d:	jp     0x407f05
  407f0f:	mov    bh,0xbf
  407f11:	ja     0x407eae
  407f13:	adc    al,0xb1
  407f15:	outs   dx,BYTE PTR ds:[esi]
  407f16:	or     ecx,DWORD PTR [edx]
  407f18:	je     0x407f19
  407f1a:	mov    ?,WORD PTR [edx*1-0x5b9f8f91]
  407f21:	(bad)  
  407f22:	jnp    0x407f5a
  407f24:	mov    esi,0x9fba745a
  407f29:	mov    dh,0xbd
  407f2b:	imul   ecx,esi,0x3c9a380f
  407f31:	mov    WORD PTR ds:0xd2257674,es
  407f37:	and    DWORD PTR [ebp+edi*4-0x6f],ebx
  407f3b:	test   BYTE PTR [ecx-0x56b371a4],0xa
  407f42:	sar    BYTE PTR [eax-0x45],0xe6
  407f46:	pop    eax
  407f47:	mov    ds:0xba685f54,al
  407f4c:	loopne 0x407f0e
  407f4e:	xor    eax,0x5d20fc9e
  407f53:	cmp    DWORD PTR [esp+edx*4+0x43a4e409],edi
  407f5a:	jle    0x407f49
  407f5c:	and    esi,DWORD PTR [esi+eiz*8-0x28]
  407f60:	or     edi,DWORD PTR [ebx]
  407f62:	pop    ebp
  407f63:	mov    ecx,DWORD PTR [eax-0x25f4ee66]
  407f69:	sub    al,0xde
  407f6b:	out    dx,al
  407f6c:	jo     0x407f65
  407f6e:	imul   eax,DWORD PTR [eax-0x397c53a7],0x6d
  407f75:	bound  edi,QWORD PTR [eax+0x4da9139a]
  407f7b:	(bad)
  407f7f:	js     0x407f1d
  407f81:	pxor   mm0,QWORD PTR [ebp-0x66]
  407f85:	mov    ebx,0xb25bd8d4
  407f8a:	fdivr  DWORD PTR ds:0x62795b6b
  407f90:	clc    
  407f91:	or     bl,BYTE PTR [edx]
  407f93:	jmp    0x407ff3
  407f95:	(bad)  
  407f96:	call   0x93a6e21d
  407f9b:	inc    eax
  407f9c:	push   ebp
  407f9d:	icebp  
  407f9e:	mov    esi,0xadb69ef5
  407fa3:	call   0xea54:0xb8e278bc
  407faa:	ins    BYTE PTR es:[edi],dx
  407fab:	pop    esp
  407fac:	sub    BYTE PTR [edi-0x3],dl
  407faf:	rcl    DWORD PTR [esi+0x62421a17],0xad
  407fb6:	mov    al,ds:0xdd70599a
  407fbb:	cld    
  407fbc:	in     eax,0xe7
  407fbe:	fimul  WORD PTR [edi]
  407fc0:	sbb    al,dl
  407fc2:	inc    edi
  407fc3:	xchg   esi,eax
  407fc4:	into   
  407fc5:	sub    BYTE PTR [edx],bl
  407fc7:	aad    0xc9
  407fc9:	mov    edx,DWORD PTR [ebx+0x58]
  407fcc:	shr    BYTE PTR [ecx-0x79134b91],1
  407fd2:	pop    edx
  407fd3:	inc    ebp
  407fd4:	push   edx
  407fd5:	xchg   ebp,eax
  407fd6:	hlt    
  407fd7:	enter  0x2f2d,0xd5
  407fdb:	sub    edx,DWORD PTR [ebp-0x5f]
  407fde:	loope  0x407fed
  407fe0:	push   0xcdd6330f
  407fe5:	xor    eax,0x8e148b40
  407fea:	push   cs
  407feb:	rol    esp,0xa7
  407fee:	enter  0xf66,0x33
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	(bad)  
  40800f:	cli    
  408010:	add    al,0x23
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x407fe9
  40801b:	or     al,0x77
  40801d:	cmp    BYTE PTR [ebx-0x2d6d8e4],dh
  408023:	icebp  
  408024:	(bad)  
  408025:	mov    al,0x5d
  408027:	xor    BYTE PTR [edi-0x78],ah
  40802a:	xor    DWORD PTR [edi-0x36],esp
  40802d:	jnp    0x40802b
  40802f:	xchg   ebx,eax
  408030:	xor    al,0xd
  408032:	aam    0xcc
  408034:	mov    ebx,0xa984bc34
  408039:	nop
  40803a:	fisttp DWORD PTR [eax+0x2396ef68]
  408040:	data16 test al,0x95
  408043:	mov    edi,0xc524414a
  408048:	push   0xfcae36be
  40804d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40804f:	ret    
  408050:	ret    0xa8f7
  408053:	das    
  408054:	(bad)  
  408055:	cdq    
  408056:	ret    
  408057:	cmp    eax,0xa2e91eb4
  40805c:	pcmpgtb mm5,QWORD PTR [esi-0x21]
  408060:	cmp    ch,ch
  408062:	aaa    
  408063:	xor    bl,BYTE PTR [edi]
  408065:	ins    BYTE PTR es:[edi],dx
  408066:	mov    bh,0x83
  408068:	rcl    ebx,1
  40806a:	inc    esp
  40806b:	push   ds
  40806c:	sbb    al,0x70
  40806e:	sbb    cl,BYTE PTR [ebx-0x2f066df5]
  408074:	rcr    BYTE PTR [ebx-0x6d339a74],1
  40807a:	sbb    bh,ah
  40807c:	sub    ebx,edx
  40807e:	stos   DWORD PTR es:[edi],eax
  40807f:	test   eax,0xdc21a0d7
  408084:	(bad)  [edx+0x24230120]
  40808a:	jbe    0x408076
  40808c:	fdiv   QWORD PTR ds:[edi]
  40808f:	xchg   ecx,eax
  408090:	stos   DWORD PTR es:[edi],eax
  408091:	sbb    dh,BYTE PTR [ebp+0x2b]
  408094:	arpl   WORD PTR [ecx+0x5a],cx
  408097:	aaa    
  408098:	cmp    al,0xc5
  40809a:	(bad)
  40809e:	ja     0x408050
  4080a0:	nop
  4080a1:	aaa    
  4080a2:	repz inc ebp
  4080a4:	dec    ebx
  4080a5:	jae    0x408080
  4080a7:	cwde   
  4080a8:	push   ss
  4080a9:	mov    ?,eax
  4080ab:	jnp    0x408043
  4080ad:	pop    eax
  4080ae:	sbb    BYTE PTR [esi],bh
  4080b0:	dec    ebx
  4080b1:	add    dl,ch
  4080b3:	pushf  
  4080b4:	xchg   esp,eax
  4080b5:	int3   
  4080b6:	lods   al,BYTE PTR ds:[esi]
  4080b7:	xchg   ebx,eax
  4080b8:	mov    esp,0x7e3057a7
  4080bd:	mov    ah,0x1
  4080bf:	lods   eax,DWORD PTR ds:[esi]
  4080c0:	dec    edi
  4080c1:	sub    eax,0x50824c8c
  4080c6:	aam    0x55
  4080c8:	sti    
  4080c9:	add    ch,BYTE PTR [ebx+0x34555cc5]
  4080cf:	in     eax,0x0
  4080d1:	icebp  
  4080d2:	jb     0x408127
  4080d4:	jns    0x4080b0
  4080d6:	ss cmp eax,0xe71ff895
  4080dc:	sub    DWORD PTR [esi],0x72
  4080df:	mov    ds:0x6b3a3f9,eax
  4080e4:	mov    bh,0x55
  4080e6:	adc    eax,0x7161da62
  4080eb:	jb     0x408145
  4080ed:	inc    edx
  4080ee:	popf   
  4080ef:	sub    al,BYTE PTR [esp+ecx*4]
  4080f2:	rol    BYTE PTR [ebx-0x304cf670],0xc8
  4080f9:	out    dx,al
  4080fa:	enter  0x7ae5,0x3f
  4080fe:	mov    BYTE PTR [edx],ah
  408100:	shr    BYTE PTR [ecx-0x69b1d0d8],1
  408106:	cmp    eax,0xbe65e165
  40810b:	or     BYTE PTR [ecx-0x6b],bh
  40810e:	and    ch,BYTE PTR [ebp-0x61]
  408111:	xchg   ebx,eax
  408112:	xor    BYTE PTR [eax+esi*2+0x41ed102e],bl
  408119:	fisttp DWORD PTR [esi]
  40811b:	adc    eax,0xdf16ed0
  408120:	add    eax,0xfc7230fb
  408125:	mov    dh,BYTE PTR [ecx-0x2a61bff1]
  40812b:	xor    eax,0x835eeded
  408130:	cdq    
  408131:	mov    ecx,0x454cd1f1
  408136:	sub    dh,cl
  408138:	ror    DWORD PTR [ebx+0x32fff99f],0xb9
  40813f:	fcomp  DWORD PTR [edi-0x6f]
  408142:	push   ds
  408143:	aas    
  408144:	dec    edx
  408145:	inc    ebx
  408146:	xchg   esi,eax
  408147:	mov    eax,ds:0xb46c51f9
  40814c:	push   ebp
  40814d:	ror    BYTE PTR [edx-0x34],1
  408150:	dec    eax
  408151:	icebp  
  408152:	add    eax,0xccf8f0ac
  408157:	mov    al,ds:0x8c4f5f29
  40815c:	fisttp WORD PTR [edx+0x2fda1ff3]
  408162:	mov    DWORD PTR [eax-0x56995de],0x7ec76ea3
  40816c:	in     al,0xd6
  40816e:	xlat   BYTE PTR ds:[ebx]
  40816f:	cmc    
  408170:	int3   
  408171:	xor    esi,DWORD PTR [edx+eiz*4-0x69]
  408175:	stos   BYTE PTR es:[edi],al
  408176:	mov    edx,0xbd412a0
  40817b:	mov    esi,0xc203c133
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es hlt 
  4081a1:	xlat   BYTE PTR ss:[ebx]
  4081a3:	mov    dl,0x83
  4081a5:	pop    ss
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x4081ce
  4081ad:	push   edi
  4081ae:	dec    edi
  4081af:	and    eax,eax
  4081b1:	cmp    edi,eax
  4081b3:	mov    ebx,0xf107e041
  4081b8:	scas   eax,DWORD PTR es:[edi]
  4081b9:	(bad)  
  4081ba:	xchg   esi,eax
  4081bb:	inc    ebp
  4081bc:	jge    0x40821c
  4081be:	cmp    DWORD PTR [edx],esi
  4081c0:	sbb    dh,al
  4081c2:	in     al,dx
  4081c3:	adc    al,0xb
  4081c5:	dec    ebp
  4081c6:	xchg   esi,eax
  4081c7:	xchg   DWORD PTR [esi+eiz*2+0x3a51739d],ecx
  4081ce:	icebp  
  4081cf:	fs sub dl,ch
  4081d2:	xchg   edx,eax
  4081d3:	(bad)  
  4081d4:	sti    
  4081d5:	ja     0x4081a5
  4081d7:	popa   
  4081d8:	aaa    
  4081d9:	test   al,0x1d
  4081db:	pop    ds
  4081dc:	dec    esp
  4081dd:	aad    0xb1
  4081df:	add    DWORD PTR [edx-0x79add2aa],edx
  4081e5:	sar    BYTE PTR [ebx+0x53],0x18
  4081e9:	adc    al,0xe0
  4081eb:	ret    
  4081ec:	fdivp  st(6),st
  4081ee:	jae    0x40820a
  4081f0:	sub    DWORD PTR [ebx],eax
  4081f2:	dec    eax
  4081f3:	pop    eax
  4081f4:	and    dl,BYTE PTR [edi-0x77]
  4081f7:	lods   eax,DWORD PTR ds:[esi]
  4081f8:	int3   
  4081f9:	cmp    al,0xf5
  4081fb:	and    eax,0x93a7acdc
  408200:	push   cs
  408201:	inc    esp
  408202:	pusha  
  408203:	mov    dl,BYTE PTR [edi-0x54]
  408206:	sbb    al,0x79
  408208:	cmp    eax,0x4cdea0f8
  40820d:	push   esi
  40820e:	test   BYTE PTR [ecx],ah
  408210:	xor    ah,BYTE PTR [ebp+0x32af4be7]
  408216:	sub    BYTE PTR [eax-0x7b],dh
  408219:	mov    edx,0x35480a0d
  40821e:	sbb    dl,BYTE PTR [eax-0x48]
  408221:	inc    ebp
  408222:	xchg   ecx,eax
  408223:	retf   0xcc79
  408226:	and    esi,DWORD PTR [edx-0x35]
  408229:	int    0x5f
  40822b:	lock jne 0x40827d
  40822e:	in     eax,dx
  40822f:	out    0x7,eax
  408231:	(bad)
  408234:	mov    ebp,DWORD PTR [ebp+0x6cb48035]
  40823a:	push   es
  40823b:	jmp    DWORD PTR [ebx]
  40823d:	enter  0x3fe2,0x6c
  408241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408242:	xlat   BYTE PTR ds:[ebx]
  408243:	daa    
  408244:	cmp    al,0x1e
  408246:	or     DWORD PTR [edi-0x2d],esi
  408249:	fidiv  DWORD PTR [ebx-0x2b]
  40824c:	fstp   DWORD PTR [ecx-0x4c]
  40824f:	shl    DWORD PTR [edx],0xe4
  408252:	lock mov ss,WORD PTR [esi+0x9]
  408256:	xchg   esp,eax
  408257:	push   0xffffff99
  408259:	inc    edx
  40825a:	loopne 0x4082ad
  40825c:	int3   
  40825d:	inc    ebx
  40825e:	lea    esp,ds:0x3452294f
  408264:	mov    ecx,0x67289612
  408269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826a:	fs cld 
  40826c:	(bad)  
  40826f:	iret   
  408270:	retf   
  408271:	cmp    dl,BYTE PTR [ebp-0x11de7939]
  408277:	mov    eax,0xb3a3f1da
  40827c:	outs   dx,BYTE PTR ds:[esi]
  40827d:	pop    edi
  40827e:	in     al,0x8a
  408280:	pop    esp
  408281:	cmpps  xmm0,XMMWORD PTR [ecx-0x16],0xd5
  408286:	in     al,dx
  408287:	pop    eax
  408288:	add    ch,dl
  40828a:	test   DWORD PTR [edi],ebx
  40828c:	lods   al,BYTE PTR ds:[esi]
  40828d:	or     al,0x2d
  40828f:	mov    BYTE PTR [eax],bl
  408291:	lods   eax,DWORD PTR ds:[esi]
  408292:	ret    0x257
  408295:	outs   dx,BYTE PTR ds:[esi]
  408296:	pop    ss
  408297:	les    ecx,FWORD PTR [esp+edi*8-0x49b54c6]
  40829e:	mov    dh,0xe4
  4082a0:	jle    0x408288
  4082a2:	mov    ebp,DWORD PTR ds:0xf62d9b1f
  4082a8:	out    dx,eax
  4082a9:	std    
  4082aa:	fcomp  st(1)
  4082ac:	(bad)  
  4082ae:	push   eax
  4082af:	and    al,0xaf
  4082b1:	mov    dh,0xb0
  4082b3:	imul   edx,DWORD PTR [esi],0xffffffb8
  4082b6:	mov    WORD PTR ds:[eax-0x53],?
  4082ba:	fmul   DWORD PTR [ebp-0x497a779]
  4082c0:	dec    ebx
  4082c1:	test   BYTE PTR [ecx],bh
  4082c3:	cwde   
  4082c4:	push   edx
  4082c5:	jb     0x408340
  4082c7:	fbld   TBYTE PTR [ebx]
  4082c9:	mov    esp,ebx
  4082cb:	mov    ecx,0xdf7a8fae
  4082d0:	add    cl,bh
  4082d2:	xchg   esp,eax
  4082d3:	or     BYTE PTR [esi],ah
  4082d5:	mov    cl,0x87
  4082d7:	xor    BYTE PTR [edi],bl
  4082d9:	bound  ebx,QWORD PTR ds:0x93bed36e
  4082df:	sbb    esp,DWORD PTR ds:0x4efb4b20
  4082e5:	jl     0x408347
  4082e7:	into   
  4082e8:	cs test al,0xec
  4082eb:	push   DWORD PTR [edx+edi*4]
  4082ee:	pop    edi
  4082ef:	or     edi,ecx
  4082f1:	and    esi,ecx
  4082f3:	mov    dh,0xd5
  4082f5:	mov    bh,0x3c
  4082f7:	sbb    ecx,DWORD PTR [esi-0xd1b2140]
  4082fd:	ret    0xb245
  408300:	mov    ah,0x4d
  408302:	fisttp DWORD PTR [ebx+eiz*1-0xf]
  408306:	jmp    0x40836b
  408308:	(bad)  
  408309:	jl     0x4082a1
  40830b:	xor    al,0x85
  40830d:	shl    BYTE PTR [ebx+0x40d64c],cl
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [eax+ebx*1+0x617f0d1f],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x4083ef
  40840c:	jb     0x408465
  40840e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840f:	aam    0xfb
  408411:	std    
  408412:	adc    al,bl
  408414:	mov    edx,DWORD PTR [ecx-0x4d]
  408417:	out    0xab,al
  408419:	fdivr  DWORD PTR [edi]
  40841b:	mov    DWORD PTR [edx-0x71],edi
  40841e:	mov    ds:0x970a3c05,al
  408423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408424:	mov    ecx,0x874aee27
  408429:	inc    edi
  40842a:	cs jle 0x408490
  40842d:	jb     0x4083b3
  40842f:	jbe    0x408482
  408431:	pop    esp
  408432:	mov    ebx,0xdc90acf9
  408437:	(bad)  
  408438:	out    0x13,eax
  40843a:	ficomp DWORD PTR [eax-0x36]
  40843d:	fstp   TBYTE PTR [esi+0x6c97eb04]
  408443:	dec    esi
  408444:	icebp  
  408445:	icebp  
  408446:	xchg   ebp,eax
  408447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408448:	mov    BYTE PTR [eax],cl
  40844a:	cs mov edi,0xf31a020c
  408450:	cmp    al,0x39
  408452:	push   0x5d
  408454:	mov    al,ds:0x422d292f
  408459:	pop    ss
  40845a:	imul   esi,DWORD PTR [edi-0x33],0x73
  40845e:	xor    BYTE PTR [ebp-0x20a52c4c],0xdd
  408465:	inc    edx
  408466:	call   0xe07b:0x7a277d40
  40846d:	inc    ebp
  40846e:	xlat   BYTE PTR ds:[ebx]
  40846f:	sub    ecx,eax
  408471:	lock stc 
  408473:	data16 aas 
  408475:	cmc    
  408476:	mov    WORD PTR [esi-0x3d],cs
  408479:	imul   DWORD PTR [esi-0x3d]
  40847c:	fist   DWORD PTR [ebp-0x7f]
  40847f:	sub    BYTE PTR [ecx-0x1a13bf21],dl
  408485:	loope  0x40849f
  408487:	fild   WORD PTR [ecx+0x21553db5]
  40848d:	cmp    DWORD PTR [edx+eax*4-0x6b],0x1e
  408492:	sub    al,0x3a
  408494:	arpl   WORD PTR [esi],cx
  408496:	imul   eax,DWORD PTR [edi],0xffffffe5
  408499:	push   ecx
  40849b:	cmp    dh,BYTE PTR [ebx]
  40849d:	cdq    
  40849e:	in     al,0xbc
  4084a0:	mov    dh,0xa7
  4084a2:	fwait
  4084a3:	stos   BYTE PTR es:[edi],al
  4084a4:	retf   
  4084a5:	mov    cl,BYTE PTR [esi+0x5d]
  4084a8:	icebp  
  4084a9:	mov    BYTE PTR [ebp+0x1dde66d6],bh
  4084af:	jecxz  0x408489
  4084b1:	mov    ds:0x9e55c184,al
  4084b6:	aam    0x1d
  4084b8:	jmp    0x2873:0x7a6b3cf3
  4084bf:	shr    BYTE PTR [edi+0x2],1
  4084c2:	mov    bh,0xc4
  4084c4:	out    dx,eax
  4084c5:	call   0x5df41670
  4084ca:	out    0x7d,eax
  4084cc:	stos   DWORD PTR es:[edi],eax
  4084cd:	nop
  4084ce:	outs   dx,DWORD PTR ds:[esi]
  4084cf:	std    
  4084d0:	and    eax,0xd5464d7e
  4084d5:	dec    esi
  4084d6:	call   0x7446:0x4f444845
  4084dd:	out    dx,al
  4084de:	daa    
  4084df:	inc    ecx
  4084e0:	push   ss
  4084e1:	pop    edx
  4084e2:	xchg   DWORD PTR [ecx+edx*8-0x229898f6],ebp
  4084e9:	jo     0x40846c
  4084eb:	pop    eax
  4084ec:	addr16 into 
  4084ee:	shr    DWORD PTR [edi+0x2b8b9120],cl
  4084f4:	icebp  
  4084f5:	test   BYTE PTR [edx],ah
  4084f7:	imul   ecx,DWORD PTR [esi+0x53],0x6b8db815
  4084fe:	lea    esi,ds:0x1083b9c8
  408504:	addr16 pop esi
  408506:	xchg   edi,eax
  408507:	and    dh,ch
  408509:	fwait
  40850a:	mov    ebp,0x94d4523c
  40850f:	inc    edx
  408510:	mov    ecx,0x24297cca
  408515:	psllq  mm4,QWORD PTR [esi+0x33]
  408519:	inc    ecx
  40851a:	and    BYTE PTR [ecx+0x3b0a],bh
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xab26a896
  40854d:	or     al,0xa5
  40854f:	cmp    BYTE PTR [ebp+0x2a],0x7e
  408553:	jle    0x40855f
  408555:	jg     0x4085d5
  408557:	jle    0x40851d
  408559:	icebp  
  40855a:	sbb    ebp,DWORD PTR [edi+edx*4-0x7402c253]
  408561:	push   ebp
  408562:	pop    ebp
  408563:	xor    al,0x46
  408565:	mov    ch,0x13
  408567:	pop    es
  408568:	fild   QWORD PTR [edi+0x52]
  40856b:	dec    esi
  40856c:	and    ch,0x3f
  40856f:	(bad)  
  408570:	and    al,0xfa
  408572:	cmp    edi,DWORD PTR [edi+0x27]
  408575:	inc    ecx
  408576:	out    0xae,al
  408578:	popa   
  408579:	shl    BYTE PTR [edi+eax*4+0xb801141],1
  408580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408581:	ja     0x408596
  408583:	sbb    eax,0xa3406634
  408588:	popa   
  408589:	mov    fs,WORD PTR [esi-0x9]
  40858c:	int    0x8b
  40858e:	and    eax,DWORD PTR [ebx-0x35]
  408591:	inc    edx
  408592:	jl     0x408576
  408594:	jp     0x4085bc
  408596:	mov    edi,0x87273768
  40859b:	ss call 0x2c08:0x67f08a6
  4085a3:	ror    BYTE PTR [edx+0x5c],cl
  4085a6:	jbe    0x408550
  4085a8:	push   edx
  4085a9:	inc    eax
  4085aa:	xchg   ebx,eax
  4085ab:	adc    al,0x10
  4085ad:	lods   al,BYTE PTR ds:[esi]
  4085ae:	nop
  4085af:	fadd   DWORD PTR [ebx-0xb]
  4085b2:	push   edx
  4085b3:	test   ch,dl
  4085b5:	aaa    
  4085b6:	aas    
  4085b7:	pop    edx
  4085b8:	scas   eax,DWORD PTR es:[edi]
  4085b9:	jmp    0xdff2:0xbff8d13e
  4085c0:	retf   
  4085c1:	cmp    eax,0x6b95a395
  4085c6:	stos   DWORD PTR es:[edi],eax
  4085c7:	std    
  4085c8:	test   DWORD PTR [edi],edx
  4085ca:	push   ebx
  4085cb:	sub    al,0x38
  4085cd:	(bad)  
  4085ce:	push   0xa5b21e64
  4085d3:	xor    DWORD PTR [esi+0x53f398f],0x3eaa9033
  4085dd:	(bad)  
  4085de:	mov    eax,ds:0xb73e8299
  4085e3:	test   eax,0x594fa8b8
  4085e8:	add    ah,BYTE PTR [ebx]
  4085ea:	pop    esp
  4085eb:	inc    edx
  4085ec:	lods   eax,DWORD PTR ds:[esi]
  4085ed:	mov    dl,0x58
  4085ef:	jb     0x4085fd
  4085f1:	sar    ebx,1
  4085f3:	mov    bh,0xa6
  4085f5:	add    al,0x4c
  4085f7:	dec    ecx
  4085f8:	ret    
  4085f9:	mov    edi,ebx
  4085fb:	jbe    0x40858d
  4085fd:	pop    ss
  4085fe:	int3   
  4085ff:	xor    eax,0x6705701
  408604:	cmp    BYTE PTR [ebx-0x3e],cl
  408607:	xor    eax,eax
  408609:	js     0x40864b
  40860b:	int    0x17
  40860d:	inc    ebp
  40860e:	mov    dh,0xa7
  408610:	mov    dh,0x2c
  408612:	imul   ebp,DWORD PTR [ebx-0x7e],0x1f1d8317
  408619:	push   cs
  40861a:	pop    ecx
  40861b:	sub    esp,DWORD PTR [edi]
  40861d:	adc    ah,BYTE PTR [edi+esi*8-0x37]
  408621:	ins    BYTE PTR es:[edi],dx
  408622:	cmp    al,0x1
  408624:	and    bh,bl
  408626:	dec    edi
  408627:	out    0x4,al
  408629:	xor    al,0x49
  40862b:	popa   
  40862c:	pop    ecx
  40862d:	stos   BYTE PTR es:[edi],al
  40862e:	bound  ebx,QWORD PTR ds:0xfc8ccc2f
  408634:	les    eax,FWORD PTR [edi]
  408636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408637:	inc    ecx
  408638:	cmc    
  408639:	(bad)  
  40863a:	fiadd  WORD PTR [edx]
  40863c:	mov    edi,0x6f032e5b
  408641:	inc    eax
  408642:	sbb    BYTE PTR [ebp+0x65],bh
  408645:	dec    esi
  408646:	fimul  WORD PTR [eiz*8+0x2a21c140]
  40864d:	mov    ds:0xe5c7cb34,eax
  408652:	into   
  408653:	add    BYTE PTR [ecx],al
  408655:	push   ebx
  408656:	into   
  408657:	add    bl,BYTE PTR [edx]
  408659:	ins    BYTE PTR es:[edi],dx
  40865a:	aad    0xeb
  40865c:	aaa    
  40865d:	std    
  40865e:	ja     0x40860e
  408660:	and    BYTE PTR [esi],0xc5
  408663:	pop    edi
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fiadd  DWORD PTR [esi-0x19]
  408742:	push   eax
  408743:	fisttp WORD PTR [ecx]
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408734
  40874d:	scas   al,BYTE PTR es:[edi]
  40874e:	mov    eax,ds:0x5f4445e6
  408753:	sub    DWORD PTR [ebp+0x5b8f7f31],esp
  408759:	pop    eax
  40875a:	add    al,0xf
  40875c:	mov    edi,0xb1783671
  408761:	jle    0x40878c
  408763:	enter  0x71b2,0x16
  408767:	mov    BYTE PTR [ecx-0x4f9d299],dh
  40876d:	cmp    al,0x7f
  40876f:	test   BYTE PTR [ebp+0x5d4780ac],ah
  408775:	or     dl,0x72
  408778:	rcr    DWORD PTR [edx-0x28],1
  40877b:	test   BYTE PTR [eax+0x42be3c5e],dh
  408781:	out    0x80,al
  408783:	pop    ecx
  408784:	xchg   ecx,eax
  408785:	in     al,0xde
  408787:	test   ebp,eax
  408789:	dec    ecx
  40878a:	push   cs
  40878b:	dec    eax
  40878c:	push   ds
  40878d:	sub    esi,DWORD PTR [esi+0x360b2043]
  408793:	(bad)  
  408794:	jmp    0x408722
  408796:	jmp    0xd6a9:0x41939aef
  40879d:	pop    ecx
  40879e:	fdiv   QWORD PTR [ebp-0x51e9cb67]
  4087a5:	inc    ebx
  4087a6:	js     0x4087a4
  4087a8:	pop    esi
  4087a9:	pop    ebx
  4087aa:	pusha  
  4087ab:	jo     0x4087fd
  4087ad:	stos   DWORD PTR es:[edi],eax
  4087ae:	jl     0x408752
  4087b0:	lods   al,BYTE PTR ds:[esi]
  4087b1:	lea    esp,[ebx+0x78]
  4087b4:	(bad)  
  4087b5:	sbb    DWORD PTR [ebx-0x3664fe76],ebp
  4087bb:	jge    0x408808
  4087bd:	in     al,dx
  4087be:	xchg   ebx,eax
  4087bf:	mov    BYTE PTR [ebp-0x30],ch
  4087c2:	sbb    DWORD PTR ds:0x671f2,0xb000ddb9
  4087cc:	rol    ecx,cl
  4087ce:	popf   
  4087cf:	cli    
  4087d0:	imul   eax,DWORD PTR [edx],0x23339df0
  4087d6:	mov    eax,0xe92c1b83
  4087db:	loope  0x4087be
  4087dd:	stos   BYTE PTR es:[edi],al
  4087de:	arpl   dx,sp
  4087e0:	aad    0x7
  4087e2:	jnp    0x4087d9
  4087e4:	cmp    al,BYTE PTR [edx]
  4087e6:	fisttp QWORD PTR ds:0xb27743de
  4087ec:	cmp    DWORD PTR [edx],ebx
  4087ee:	mov    edi,0xe49740a7
  4087f3:	mov    ch,0x40
  4087f5:	push   cs
  4087f6:	pop    esi
  4087f7:	inc    ecx
  4087f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f9:	xor    edx,DWORD PTR [eax+0x6d]
  4087fc:	cmp    al,0x52
  4087fe:	mov    cl,0xeb
  408800:	rcpps  xmm4,xmm4
  408803:	ret    0x8194
  408806:	sahf   
  408807:	cld    
  408808:	fdivr  QWORD PTR [edi-0x58a207e7]
  40880e:	mov    edi,0x537489b5
  408813:	jne    0x4087e0
  408815:	(bad)  
  408816:	mov    al,0xbd
  408818:	push   ebp
  408819:	xlat   BYTE PTR ds:[ebx]
  40881a:	ret    
  40881b:	hlt    
  40881c:	pop    DWORD PTR [ebx+0x56]
  40881f:	cmp    ah,BYTE PTR [ecx+0x62]
  408822:	xlat   BYTE PTR ds:[ebx]
  408823:	in     al,dx
  408824:	mov    ds:0xa7636256,eax
  408829:	inc    edi
  40882a:	jb     0x408864
  40882c:	jge    0x4087d9
  40882e:	es mov dl,0x79
  408831:	retf   
  408832:	mov    ds,WORD PTR [eax+ecx*1]
  408835:	push   cs
  408836:	mov    DWORD PTR [eax+0x6034102c],ebp
  40883c:	cmp    al,0xed
  40883e:	mov    cl,0x57
  408840:	xchg   ebx,eax
  408841:	outs   dx,BYTE PTR gs:[esi]
  408843:	clc    
  408844:	mov    bl,0xc4
  408846:	out    0xaa,eax
  408848:	mov    al,ds:0x3a28ae6e
  40884d:	push   ds
  40884e:	jns    0x4088a4
  408850:	adc    al,BYTE PTR [ebp+0x77]
  408853:	mov    ds:0x26da37a1,eax
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1-0x7f28be99],edx
  408951:	aas    
  408952:	jge    0x408998
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x4089b2
  40895d:	and    ch,bh
  40895f:	nop
  408960:	mov    esp,0x379330a4
  408965:	jmp    0xd7f:0xf6491de0
  40896c:	dec    ecx
  40896d:	mov    DWORD PTR [eax-0x2bd843fb],esp
  408973:	ins    BYTE PTR es:[edi],dx
  408974:	in     eax,dx
  408975:	mov    ebp,0x4015d056
  40897a:	ror    edi,0x80
  40897d:	dec    edx
  40897e:	mov    ds:0xfea4b2c,eax
  408983:	xchg   esi,eax
  408984:	imul   ebp,DWORD PTR [edx+eiz*1-0x58],0x708205ce
  40898c:	iret   
  40898d:	fdiv   DWORD PTR [ecx-0x4143f9cc]
  408993:	retf   0x9c2c
  408996:	push   esi
  408997:	dec    ebx
  408998:	fcmovb st,st(4)
  40899a:	div    BYTE PTR [edi]
  40899c:	fcomp  DWORD PTR [esi+0x2a5a6c3b]
  4089a2:	sbb    BYTE PTR [esi],al
  4089a4:	pop    ds
  4089a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a6:	(bad)  
  4089a7:	jmp    0xcd1a8a3e
  4089ac:	pop    eax
  4089ad:	inc    edx
  4089ae:	xchg   edx,eax
  4089af:	dec    ebx
  4089b0:	loopne 0x40894e
  4089b2:	(bad)  
  4089b3:	cli    
  4089b4:	jmp    eax
  4089b6:	loopne 0x408998
  4089b8:	mov    edx,0x624c8837
  4089bd:	lods   eax,DWORD PTR fs:[esi]
  4089bf:	hlt    
  4089c0:	imul   ecx,DWORD PTR [ebp-0x40],0xfed05907
  4089c7:	mov    WORD PTR [eax-0x6f],ss
  4089ca:	ins    BYTE PTR es:[edi],dx
  4089cb:	pop    edx
  4089cc:	adc    DWORD PTR [ebp+0x761a7ae0],esi
  4089d2:	add    esp,DWORD PTR [ecx]
  4089d4:	popa   
  4089d5:	jae    0x408996
  4089d7:	dec    esp
  4089d8:	dec    ebp
  4089d9:	mov    gs,WORD PTR [ecx+0x57]
  4089dc:	mov    ds:0xd3a44abf,al
  4089e1:	push   ebp
  4089e2:	inc    edx
  4089e3:	push   es
  4089e4:	push   ds
  4089e5:	stc    
  4089e6:	stos   BYTE PTR es:[edi],al
  4089e7:	adc    al,0x91
  4089e9:	or     al,0xae
  4089eb:	mov    eax,ds:0x2535e3dd
  4089f0:	push   cs
  4089f1:	inc    edi
  4089f2:	xlat   BYTE PTR ds:[ebx]
  4089f3:	addr16 (bad) 
  4089f5:	(bad)  
  4089f6:	and    eax,0x8ef3d67c
  4089fb:	xchg   BYTE PTR [edi+0x1e],cl
  4089fe:	(bad)  
  4089ff:	fmul   DWORD PTR [ecx]
  408a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a02:	ss mov ah,0xf4
  408a05:	and    DWORD PTR [edx+0x274aab9c],ecx
  408a0b:	inc    eax
  408a0c:	les    edx,FWORD PTR [esi+0x50cd79d2]
  408a12:	dec    eax
  408a13:	enter  0x589,0x1c
  408a17:	xor    ebx,edx
  408a19:	adc    BYTE PTR [edi],dh
  408a1b:	push   0x58
  408a1d:	add    esi,DWORD PTR [ecx-0x2a180dc7]
  408a23:	or     eax,ecx
  408a25:	int    0xec
  408a27:	ror    BYTE PTR [ebx],cl
  408a29:	dec    edi
  408a2a:	outs   dx,BYTE PTR ds:[esi]
  408a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a2c:	loop   0x408a97
  408a2e:	sar    DWORD PTR [eax+0x59],0xff
  408a32:	loop   0x4089f0
  408a34:	push   ebp
  408a35:	jle    0x4089ce
  408a37:	loope  0x408a76
  408a39:	sbb    DWORD PTR [edi-0x1f],0x3c801b48
  408a40:	inc    esi
  408a41:	adc    dl,BYTE PTR [ebp-0x7f]
  408a44:	call   0xa900e7c8
  408a49:	cli    
  408a4a:	pop    esp
  408a4b:	jmp    0xf90e:0x6f98a517
  408a52:	jns    0x408aa4
  408a54:	xchg   esp,eax
  408a55:	sar    BYTE PTR ds:0xc4d33dd8,0x8e
  408a5c:	js     0x408a64
  408a5e:	mov    al,cl
  408a60:	or     cl,dh
  408a62:	sub    eax,0xeca0d286
  408a67:	imul   esi,DWORD PTR [ebx],0xffffffd1
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	sbb    al,0x89
  408a87:	pop    ss
  408a88:	int    0x11
  408a8a:	sub    DWORD PTR [esi+0x7e],edi
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a83
  408a92:	sbb    eax,0x219b961
  408a97:	fmul   st(7),st
  408a99:	lds    eax,FWORD PTR [ebp*2-0x655cde4]
  408aa0:	(bad)  
  408aa1:	pop    ecx
  408aa2:	adc    ebx,DWORD PTR [ebx]
  408aa4:	cmp    DWORD PTR [esi+0x14],esp
  408aa7:	sub    BYTE PTR ds:0xfed4ae4e,ah
  408aad:	(bad)  
  408aaf:	cmc    
  408ab0:	das    
  408ab1:	push   ecx
  408ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab3:	pusha  
  408ab4:	mov    BYTE PTR [ebx+0x79fd9b1c],ch
  408aba:	sub    BYTE PTR [esp+edi*8+0x243ea74],cl
  408ac1:	mov    eax,ds:0xaca7e7ca
  408ac6:	inc    ecx
  408ac7:	cmp    BYTE PTR [ebp-0x4b],bh
  408aca:	sub    al,0x2f
  408acc:	mov    al,0xb0
  408ace:	dec    esp
  408acf:	mov    ebp,0x9353a046
  408ad4:	jne    0x408a86
  408ad6:	rol    DWORD PTR [esi-0x15f27415],cl
  408adc:	mov    edx,0x52f89e09
  408ae1:	imul   edx,DWORD PTR [esi+edx*2+0x2],0xffffffe3
  408ae6:	and    edx,edi
  408ae8:	xchg   DWORD PTR [edx-0x8],ebp
  408aeb:	call   0x592d:0xfd06de82
  408af2:	xor    DWORD PTR [esi-0xdf8f029],edi
  408af8:	and    bl,al
  408afa:	retf   
  408afb:	cmp    BYTE PTR [edx+0x58],ch
  408afe:	add    al,0x6a
  408b00:	cdq    
  408b01:	xor    al,0x83
  408b03:	jns    0x408aa6
  408b05:	or     ebp,DWORD PTR [edi+0x64]
  408b08:	sbb    al,0x78
  408b0a:	push   es
  408b0b:	test   DWORD PTR [edi-0x79],0xef156209
  408b12:	lahf   
  408b13:	xchg   edx,eax
  408b14:	in     al,dx
  408b15:	arpl   WORD PTR [ebx+0x55e59c0c],si
  408b1b:	mov    ds:0xb82ee2f1,al
  408b20:	sbb    esi,edx
  408b22:	enter  0x7576,0x4b
  408b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b27:	mov    ds:0x1ad5f385,al
  408b2c:	shl    BYTE PTR [ecx+0x3c80022],1
  408b32:	cwde   
  408b33:	in     eax,0x51
  408b35:	inc    esp
  408b36:	sti    
  408b37:	push   esp
  408b38:	jns    0x408b37
  408b3a:	or     al,BYTE PTR [ebp+eax*1-0x74c4ba88]
  408b41:	add    ecx,DWORD PTR [eax-0x31c89719]
  408b47:	fucom  st(2)
  408b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4a:	scas   al,BYTE PTR es:[edi]
  408b4b:	push   edx
  408b4c:	adc    DWORD PTR fs:[esi+esi*4-0x32],edi
  408b51:	lods   al,BYTE PTR ds:[esi]
  408b52:	and    al,0x6a
  408b54:	out    dx,al
  408b55:	popf   
  408b56:	cmp    al,0x89
  408b58:	or     DWORD PTR [ebp-0x18],eax
  408b5b:	mov    ds:0x2ce505bd,eax
  408b60:	rol    DWORD PTR [ebx-0x43],1
  408b63:	out    dx,eax
  408b64:	cli    
  408b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b66:	mov    edx,0x5c260ee9
  408b6b:	aad    0x8c
  408b6d:	cwde   
  408b6e:	xor    eax,0xaddc2bf9
  408b73:	cli    
  408b74:	mov    esi,0x2c5906f2
  408b79:	ja     0x408bc0
  408b7b:	addr16 sbb edi,ebp
  408b7e:	and    eax,0x17f76aba
  408b83:	jae    0x408bea
  408b85:	inc    ecx
  408b86:	inc    ebx
  408b87:	in     al,dx
  408b88:	in     al,dx
  408b89:	repz mov cl,0xde
  408b8c:	pusha  
  408b8d:	xor    al,0x87
  408b8f:	cmp    edx,esp
  408b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b92:	sbb    bl,BYTE PTR [esp+eax*1-0x43]
  408b96:	mov    dl,0xda
  408b98:	inc    ebx
  408b99:	and    DWORD PTR [ebp-0x33],ebx
  408b9c:	loop   0x408bf1
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0xc1369bd]
  408bcf:	adc    DWORD PTR [ecx+0x7e2e2dd2],ebx
  408bd5:	jle    0x408be1
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408b6b
  408bdb:	outs   dx,DWORD PTR ds:[esi]
  408bdc:	xor    DWORD PTR [edx],ebp
  408bde:	mov    al,0xd3
  408be0:	retf   
  408be1:	push   es
  408be2:	inc    eax
  408be3:	jmp    0x408b9a
  408be5:	and    al,BYTE PTR [ebx+edx*8-0x6bc6e2d6]
  408bec:	jb     0x408c27
  408bee:	int    0x8c
  408bf0:	adc    ecx,DWORD PTR [ebp+0xd1b1569]
  408bf6:	sub    al,0xa0
  408bf8:	test   al,0x9c
  408bfa:	cmp    esp,ebx
  408bfc:	int3   
  408bfd:	jmp    0xe2867f2c
  408c02:	retf   
  408c03:	xor    al,dh
  408c05:	push   esi
  408c06:	cmp    al,0x16
  408c08:	push   cs
  408c09:	adc    cl,BYTE PTR [esp+edi*1]
  408c0c:	push   esp
  408c0d:	sbb    dl,dl
  408c0f:	in     al,0x4f
  408c11:	je     0x408bcb
  408c13:	xor    eax,0xcf8154bf
  408c18:	mov    cl,0xf8
  408c1a:	fstp   TBYTE PTR [ebp+eiz*2+0x3a]
  408c1e:	out    dx,al
  408c1f:	inc    ebp
  408c20:	jns    0x408c70
  408c22:	push   ds
  408c23:	pextrw edi,mm6,0xf5
  408c27:	jne    0x408c1a
  408c29:	sar    DWORD PTR [esi],1
  408c2b:	nop
  408c2c:	mov    cl,0x2e
  408c2e:	cwde   
  408c2f:	cwde   
  408c30:	das    
  408c31:	fsub   QWORD PTR [edi-0x3603d783]
  408c37:	sub    DWORD PTR [edx+0xda830a0],ecx
  408c3d:	dec    ebp
  408c3e:	cmp    esp,DWORD PTR [edx*1+0x7db2fa63]
  408c45:	or     bl,BYTE PTR [eax-0x31]
  408c48:	and    dl,BYTE PTR [esi]
  408c4a:	fsubr  QWORD PTR [ebp+0x40]
  408c4d:	fistp  WORD PTR [esi+0x33]
  408c50:	mov    dl,0x7
  408c52:	inc    esp
  408c53:	and    eax,0xe7f73ab5
  408c58:	xchg   edx,eax
  408c59:	mov    bh,0xdc
  408c5b:	add    cl,0x69
  408c5e:	int    0xc6
  408c60:	cmp    ah,bh
  408c62:	pop    ebp
  408c63:	push   ds
  408c64:	fwait
  408c65:	cli    
  408c66:	ss xchg ecx,eax
  408c68:	fs pusha 
  408c6a:	hlt    
  408c6b:	or     eax,DWORD PTR [esi-0xbe1f6bf]
  408c71:	cmp    al,0xd7
  408c73:	test   al,0x26
  408c75:	les    ecx,FWORD PTR [ecx-0x592ad98]
  408c7b:	(bad)  
  408c7c:	jp     0x408cb7
  408c7e:	push   ds
  408c7f:	push   ecx
  408c80:	call   0xd07ad32c
  408c85:	test   eax,0xc6e9d21b
  408c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8b:	in     al,dx
  408c8c:	cdq    
  408c8d:	cmp    ch,BYTE PTR [edi]
  408c8f:	mov    ecx,DWORD PTR [esi-0x2f]
  408c92:	or     eax,0xe2aa2762
  408c97:	test   eax,0xf8b51aa1
  408c9c:	call   0x383317ff
  408ca1:	jmp    0xe4a:0xfe3b0a12
  408ca8:	sub    BYTE PTR [ebx],0x33
  408cab:	je     0x408c83
  408cad:	and    esp,DWORD PTR [esi+ebx*1]
  408cb0:	xchg   ebx,eax
  408cb1:	mov    esp,0xa6c5df8
  408cb6:	call   FWORD PTR gs:[ebx+0x7d]
  408cba:	adc    al,BYTE PTR [eax]
  408cbc:	out    dx,eax
  408cbd:	adc    eax,0xfc060ced
  408cc2:	(bad)  
  408cc3:	sti    
  408cc4:	inc    esi
  408cc5:	mov    ebp,0x6373791d
  408cca:	aam    0x6
  408ccc:	mov    ebp,0xe47cb338
  408cd1:	push   edx
  408cd2:	test   BYTE PTR [ebx+eax*2-0x4f04a49d],bh
  408cd9:	icebp  
  408cda:	cmp    ebx,edx
  408cdc:	jo     0x408d19
  408cde:	mov    eax,ds:0xcc3124bf
  408ce3:	mov    eax,ds:0xb70f9d24
  408ce8:	add    al,0x90
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x29a3
  408d20:	cli    
  408d21:	mov    BYTE PTR [ebx],bh
  408d23:	cmp    DWORD PTR [edi],ebp
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cad
  408d2c:	mov    al,0x81
  408d2e:	push   edi
  408d2f:	sahf   
  408d30:	xchg   esp,eax
  408d31:	shl    DWORD PTR [edi-0x50],0x2e
  408d35:	jl     0x408d88
  408d37:	sar    esi,0xd6
  408d3a:	fs ret 
  408d3c:	jecxz  0x408db2
  408d3e:	push   cs
  408d3f:	push   ebp
  408d40:	rol    DWORD PTR [edi-0x5b],1
  408d43:	and    al,0x83
  408d45:	and    ecx,esi
  408d47:	jmp    0xdb6b2acc
  408d4c:	dec    ecx
  408d4d:	mov    dh,0xa9
  408d4f:	fmul   QWORD PTR [esi]
  408d51:	cld    
  408d52:	cmp    DWORD PTR [eax+0x677c02e4],ebp
  408d58:	nop
  408d59:	adc    eax,0xa56ddcd3
  408d5e:	jnp    0x408d80
  408d60:	in     eax,dx
  408d61:	push   ds
  408d62:	sub    eax,0xe89ebfda
  408d67:	xchg   esp,eax
  408d68:	adc    eax,0xb0e68820
  408d6d:	sub    ebp,DWORD PTR [ebx-0x1abbc2f9]
  408d73:	lock test edi,edx
  408d76:	and    eax,0xe9fb54cb
  408d7b:	or     dh,BYTE PTR [edi+0x6b]
  408d7e:	pop    eax
  408d7f:	lock retf 
  408d81:	or     edx,DWORD PTR [edx-0x467a1ec8]
  408d87:	mov    bh,0xeb
  408d89:	mov    al,ds:0x684099a1
  408d8e:	pop    ds
  408d8f:	btr    DWORD PTR [ebx+0xf351326],ebp
  408d96:	and    ch,BYTE PTR [esi-0x5d]
  408d99:	jg     0x408e10
  408d9b:	je     0x408d8f
  408d9d:	xchg   esp,eax
  408d9e:	cmp    al,0xfc
  408da0:	inc    edx
  408da1:	inc    ebx
  408da2:	push   0xcb6a8482
  408da7:	pusha  
  408da8:	and    ecx,esp
  408daa:	int    0x89
  408dac:	fsubr  QWORD PTR [eax]
  408dae:	sbb    DWORD PTR ds:0x8a0a6976,ebx
  408db4:	stos   BYTE PTR es:[edi],al
  408db5:	mov    bh,0xa5
  408db7:	ss loope 0x408dc3
  408dba:	jge    0x408dbf
  408dbc:	xor    BYTE PTR [ecx+edx*2-0x1f],0x12
  408dc1:	jo     0x408dca
  408dc3:	scas   eax,DWORD PTR es:[edi]
  408dc4:	lock jge 0x408d8a
  408dc7:	dec    edx
  408dc8:	fld    QWORD PTR [esi+0x1376a8af]
  408dce:	(bad)  
  408dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd0:	cmp    al,0xf7
  408dd2:	jmp    0x93b8:0xa9b14e07
  408dd9:	pop    ebp
  408dda:	rol    DWORD PTR [esi+0xd],cl
  408ddd:	lahf   
  408dde:	cs xor esi,0x5c
  408de2:	xchg   esi,eax
  408de3:	cmp    al,0x7b
  408de5:	es pop ebp
  408de7:	mov    ecx,0x323ced5
  408dec:	mov    dl,0x67
  408dee:	loopne 0x408db7
  408df0:	push   ecx
  408df1:	pop    ebp
  408df2:	cmp    BYTE PTR [eax-0x24],ah
  408df5:	arpl   WORD PTR [edi],dx
  408df7:	cmp    eax,DWORD PTR [ebp-0x583b0e46]
  408dfd:	push   esi
  408dfe:	pop    es
  408dff:	and    BYTE PTR [ebp+eax*2+0x16],bh
  408e03:	jecxz  0x408d8c
  408e05:	push   0x25
  408e07:	popf   
  408e08:	adc    al,0xcb
  408e0a:	jp     0x408e36
  408e0c:	neg    DWORD PTR [ebp+0x70]
  408e0f:	adc    ah,bh
  408e11:	cdq    
  408e12:	adc    eax,0xeef6e769
  408e17:	js     0x408e6b
  408e19:	sub    BYTE PTR [eax],0x11
  408e1c:	retf   
  408e1d:	sub    al,0x1b
  408e1f:	fidiv  DWORD PTR [edx]
  408e21:	fisttp QWORD PTR [edi]
  408e23:	imul   ebp,DWORD PTR [ecx-0x8d2321],0x67
  408e2a:	ins    DWORD PTR es:[edi],dx
  408e2b:	jb     0x408e0d
  408e2d:	push   eax
  408e2e:	dec    edx
  408e2f:	cmp    edi,ecx
  408e31:	data16 and BYTE PTR ds:0x34e05b0,dl
  408e38:	(bad)  
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x73aade2b
  408e4e:	retf   
  408e4f:	test   BYTE PTR ds:0xa7e7e2c,dh
  408e55:	jg     0x408ed5
  408e57:	jle    0x408df9
  408e59:	mov    ds:0x682e5ba4,al
  408e5e:	jle    0x408e05
  408e60:	cmp    eax,0xdfab286c
  408e65:	mov    al,0x33
  408e67:	neg    DWORD PTR [edi+0x72]
  408e6a:	fwait
  408e6b:	rol    DWORD PTR [esp+eax*1+0x55],1
  408e6f:	(bad)  
  408e70:	out    dx,al
  408e71:	adc    eax,eax
  408e73:	adc    al,0xbe
  408e75:	jg     0x408ead
  408e77:	jg     0x408dfd
  408e79:	sub    eax,0xbd8d0d50
  408e7e:	mov    cl,0x9e
  408e80:	mov    ds:0xc409fdee,al
  408e85:	scas   al,BYTE PTR es:[edi]
  408e86:	ds cmp al,0xbe
  408e89:	outs   dx,BYTE PTR ds:[esi]
  408e8a:	stos   DWORD PTR es:[edi],eax
  408e8b:	add    eax,ebx
  408e8d:	push   ax
  408e8f:	leave  
  408e90:	ror    edi,1
  408e92:	push   cs
  408e93:	rol    DWORD PTR [edx+0x3b],0x37
  408e97:	dec    esp
  408e98:	pmuludq mm1,mm2
  408e9b:	cmc    
  408e9c:	loop   0x408e2e
  408e9e:	jbe    0x408e3a
  408ea0:	jle    0x408e40
  408ea2:	and    BYTE PTR fs:[ebx],al
  408ea5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408ea7:	push   es
  408ea8:	mov    cl,0x13
  408eaa:	mov    edx,0xe17b0dc0
  408eaf:	cli    
  408eb0:	jno    0x408f20
  408eb2:	mov    bl,0xbe
  408eb4:	into   
  408eb5:	test   DWORD PTR [ebx-0xc],edi
  408eb8:	mov    al,0x6f
  408eba:	(bad)  
  408ebb:	pop    esi
  408ebc:	add    al,0x99
  408ebe:	std    
  408ebf:	sbb    eax,DWORD PTR ds:0xa03aaa12
  408ec5:	aaa    
  408ec6:	les    esi,FWORD PTR [eax+0xa7f60d0]
  408ecc:	cmp    BYTE PTR [edx+0x5e1cc28e],dl
  408ed2:	xchg   ebx,eax
  408ed3:	int3   
  408ed4:	fst    QWORD PTR [edi-0x3ac3f3ce]
  408eda:	cmp    eax,0xa6e7bfe2
  408edf:	xchg   esp,eax
  408ee0:	or     ah,BYTE PTR [esi+eax*8]
  408ee3:	iret   
  408ee4:	(bad)  
  408ee5:	jmp    0x2ccf:0x59f6db8d
  408eec:	inc    ebp
  408eed:	lea    ebx,ds:0x8c4d84ca
  408ef3:	adc    ebx,esp
  408ef5:	adc    eax,0x2cdb4b9c
  408efa:	ss mov ebp,0x209a7993
  408f00:	jae    0x408f5b
  408f02:	(bad)
  408f06:	mul    BYTE PTR [eax-0x15]
  408f09:	dec    DWORD PTR [esi-0x330b88eb]
  408f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f10:	ror    BYTE PTR [edx],cl
  408f12:	je     0x408f74
  408f14:	xor    BYTE PTR [ecx+0x6d691180],al
  408f1a:	cmp    BYTE PTR [eax-0xd],0xce
  408f1e:	ins    BYTE PTR es:[edi],dx
  408f1f:	add    al,0xab
  408f21:	jmp    0xb951:0x6a6f909c
  408f28:	pop    ecx
  408f29:	and    al,0x18
  408f2b:	stos   DWORD PTR es:[edi],eax
  408f2c:	pop    es
  408f2d:	aaa    
  408f2e:	jo     0x408f7f
  408f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f31:	push   ds
  408f32:	adc    eax,DWORD PTR [edx]
  408f34:	mov    DWORD PTR [eax-0x2dcb2aea],esp
  408f3a:	pop    ds
  408f3b:	ds push ebp
  408f3d:	fidiv  DWORD PTR [ebx+0x42e6e661]
  408f43:	mov    ebp,0x3a392858
  408f48:	pop    esi
  408f49:	push   esp
  408f4a:	in     eax,dx
  408f4b:	pop    ss
  408f4c:	cmp    ebp,ecx
  408f4e:	adc    eax,0x3fe22f0
  408f53:	sbb    eax,0xd1ca8c1d
  408f58:	pop    ebx
  408f59:	mov    cl,0x2a
  408f5b:	or     BYTE PTR [esi-0x3933ff6f],bl
  408f61:	adc    eax,0x458bd7ec
  408f66:	clc    
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xe697b935
  408fab:	dec    ebx
  408fac:	adc    eax,ecx
  408fae:	sub    eax,0x7f0a7e7e
  408fb3:	jle    0x409033
  408fb5:	and    DWORD PTR [edi-0x1857b6ce],ecx
  408fbb:	sub    al,0x4
  408fbd:	jb     0x408ff2
  408fbf:	mov    eax,0xb2de74dc
  408fc4:	jl     0x409020
  408fc6:	int3   
  408fc7:	sbb    BYTE PTR [esi+eiz*8],bl
  408fca:	jl     0x409026
  408fcc:	mov    eax,0x2ef19162
  408fd1:	jl     0x408fa2
  408fd3:	pop    edi
  408fd4:	sahf   
  408fd5:	jnp    0x408f5c
  408fd7:	sbb    al,0x18
  408fd9:	push   ebp
  408fda:	mov    dh,0xfc
  408fdc:	mov    edi,0xe60f51de
  408fe1:	out    0xaa,al
  408fe3:	xor    al,0x65
  408fe5:	push   ecx
  408fe6:	or     DWORD PTR [eax-0x72],0xffffff8f
  408fea:	adc    BYTE PTR [ecx],al
  408fec:	jb     0x408f81
  408fee:	xlat   BYTE PTR ds:[ebx]
  408fef:	cmc    
  408ff0:	lahf   
  408ff1:	jecxz  0x408fcd
  408ff3:	sub    ebp,esi
  408ff5:	gs iret 
  408ff7:	je     0x408fc9
  408ff9:	or     DWORD PTR [ebx-0x219cb479],ebp
  408fff:	jmp    0xa3ab:0xcb5a79af
  409006:	mov    ds:0x39258519,eax
  40900b:	lds    edi,FWORD PTR [eax+0x4f]
  40900e:	into   
  40900f:	test   BYTE PTR [edx],ch
  409011:	add    al,0x20
  409013:	(bad)  [eax+0x12e5eecd]
  409019:	jmp    0x6c20:0x6d45eba3
  409020:	xchg   ebp,eax
  409021:	mov    ecx,0xd4482f75
  409026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409027:	push   cs
  409028:	jecxz  0x40909a
  40902a:	shr    BYTE PTR [ebx+esi*4],1
  40902d:	add    dh,BYTE PTR [edx]
  40902f:	ret    0x2d94
  409032:	xchg   edx,eax
  409033:	inc    edx
  409034:	pushf  
  409035:	adc    DWORD PTR [eax+0x5d5d0abb],0xffffffac
  40903c:	ret    
  40903d:	pusha  
  40903e:	loopne 0x408fc6
  409040:	scas   al,BYTE PTR es:[edi]
  409041:	jle    0x40908a
  409043:	or     al,0xb4
  409045:	scas   al,BYTE PTR es:[edi]
  409046:	sub    ebp,esp
  409048:	lds    ebx,FWORD PTR [eax+0xb3aa3a9]
  40904e:	sti    
  40904f:	sub    DWORD PTR [edi-0x53],0x72eab3b4
  409056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409057:	jl     0x409080
  409059:	inc    ecx
  40905a:	xor    dh,al
  40905c:	stc    
  40905d:	out    dx,al
  40905e:	jmp    0x409015
  409060:	frstor [eax-0x7e0035e6]
  409066:	pop    ss
  409067:	lea    esi,[ecx]
  409069:	push   es
  40906a:	sbb    BYTE PTR [ebp+0x7eb4fbc9],0xf5
  409071:	(bad)  
  409072:	cmc    
  409073:	test   bl,bl
  409075:	les    edx,FWORD PTR [esi-0x23661566]
  40907b:	push   0x65
  40907d:	xor    al,0x25
  40907f:	(bad)  
  409080:	(bad)  
  409081:	pop    ds
  409082:	push   0xffffffb6
  409084:	leave  
  409085:	adc    bl,BYTE PTR [ecx-0x41a11ade]
  40908b:	pop    edx
  40908c:	aam    0xff
  40908e:	mov    ah,0x55
  409090:	gs push edx
  409092:	rcl    BYTE PTR [edi-0x365e0be3],1
  409098:	push   es
  409099:	aad    0x6e
  40909b:	sar    ecx,0x68
  40909e:	sbb    DWORD PTR [ebx-0x4c9b25eb],edi
  4090a4:	test   eax,0x3153c413
  4090a9:	cld    
  4090aa:	adc    ch,bl
  4090ac:	(bad)  
  4090ad:	mov    eax,0x35946761
  4090b2:	push   eax
  4090b3:	mov    al,0xc7
  4090b5:	mov    ah,0xcb
  4090b7:	test   eax,0x60fe64
  4090bc:	icebp  
  4090bd:	mov    ch,0x72
  4090bf:	push   ecx
  4090c0:	pusha  
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	mov    al,0x9e
  4090fc:	or     DWORD PTR [ebx-0x23],eax
  4090ff:	and    bh,BYTE PTR [esi+0x7e]
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409110
  409107:	js     0x40911e
  409109:	in     al,0x78
  40910b:	in     al,dx
  40910c:	cld    
  40910d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910e:	mov    bl,BYTE PTR [edx-0x35]
  409111:	jno    0x409146
  409113:	(bad)  [edi-0xb]
  409116:	push   0xffffffbc
  409118:	mov    esp,?
  40911a:	stc    
  40911b:	push   ss
  40911c:	xor    dl,ah
  40911e:	pop    es
  40911f:	add    al,0xe5
  409121:	out    0x42,eax
  409123:	push   esp
  409124:	inc    edi
  409125:	sbb    dh,BYTE PTR [esi]
  409127:	mov    al,ds:0x3d1142ed
  40912c:	gs jnp 0x40910d
  40912f:	(bad)  
  409130:	jne    0x4090fc
  409132:	(bad)  
  409134:	stc    
  409135:	jl     0x40919b
  409137:	mov    ecx,DWORD PTR [esi]
  409139:	test   dl,bh
  40913b:	mov    ebp,0x23fbe714
  409140:	ror    DWORD PTR ds:0xfaebb899,0x22
  409147:	ret    
  409148:	jg     0x4090fe
  40914a:	aaa    
  40914b:	jmp    0x40915b
  40914d:	stc    
  40914e:	mov    ds,WORD PTR [edx]
  409150:	(bad)  
  409151:	hlt    
  409152:	(bad)  [edx+edi*2+0x79]
  409156:	enter  0x468a,0xbc
  40915a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915b:	xor    al,0x48
  40915d:	jp     0x409172
  40915f:	cld    
  409160:	xor    DWORD PTR [edx+0x95f8259],0xb3c12d61
  40916a:	pop    esp
  40916b:	add    al,BYTE PTR [eax+0x76e6c4ba]
  409171:	(bad)  
  409172:	stos   BYTE PTR es:[edi],al
  409173:	push   0xd394fca1
  409178:	and    bl,al
  40917a:	in     eax,dx
  40917b:	mov    cl,0x35
  40917d:	das    
  40917e:	cld    
  40917f:	dec    ecx
  409180:	xchg   ebp,eax
  409181:	mov    bh,0x3f
  409183:	mov    al,0x35
  409185:	push   ebx
  409186:	pusha  
  409187:	mov    al,0x49
  409189:	dec    edx
  40918a:	sub    ch,BYTE PTR [ebp-0x3]
  40918d:	cli    
  40918e:	push   esi
  40918f:	jp     0x409130
  409191:	ret    0xe999
  409194:	mov    ch,0x10
  409196:	idiv   BYTE PTR [esp+ebp*4+0x16]
  40919a:	ja     0x4091ad
  40919c:	mov    esi,0x49fef137
  4091a1:	lahf   
  4091a2:	or     eax,ecx
  4091a4:	sbb    BYTE PTR [edx],0xac
  4091a7:	pop    ebx
  4091a8:	int    0xb8
  4091aa:	sub    BYTE PTR [ebx-0x7fe10ff3],bh
  4091b0:	xchg   esp,eax
  4091b1:	popf   
  4091b2:	jge    0x409185
  4091b4:	leave  
  4091b5:	mov    esp,0x2036cb14
  4091ba:	jl     0x4091b7
  4091bc:	mov    esi,0xf9213fbd
  4091c1:	(bad)  
  4091c2:	sti    
  4091c3:	das    
  4091c4:	mov    ecx,0x5b0c5145
  4091c9:	(bad)  
  4091ca:	pop    ss
  4091cb:	sbb    DWORD PTR [edi+ebp*1+0x23],ecx
  4091cf:	mov    ds:0xec94fba9,al
  4091d4:	mov    dh,0xe9
  4091d6:	ficom  DWORD PTR [ebx+0x68]
  4091d9:	dec    ecx
  4091da:	add    DWORD PTR [bp+si-0x18],eax
  4091de:	ins    DWORD PTR es:[edi],dx
  4091df:	or     eax,ebp
  4091e1:	jp     0x409228
  4091e3:	jecxz  0x4091a3
  4091e5:	jge    0x409217
  4091e7:	(bad)  
  4091e8:	cmp    al,0xad
  4091ea:	retf   0xb122
  4091ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ee:	loope  0x4091cb
  4091f0:	stos   DWORD PTR es:[edi],eax
  4091f1:	xchg   esp,eax
  4091f2:	ins    BYTE PTR es:[edi],dx
  4091f3:	cmc    
  4091f4:	in     al,dx
  4091f5:	inc    ebp
  4091f6:	(bad)  
  4091f7:	das    
  4091f8:	rol    BYTE PTR [edi+0x1667b073],1
  4091fe:	cli    
  4091ff:	in     al,0x75
  409201:	(bad)  [esi-0x6f5b5f7b]
  409207:	imul   esp,DWORD PTR [ebx+0x14bb152c],0x3d
  40920e:	dec    esp
  40920f:	or     eax,0x558b7dd1
  409214:	or     BYTE PTR [ebx],dh
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx+0x5c87a7c7]
  409240:	rol    BYTE PTR [esi-0x22],cl
  409243:	jmp    0xabf106b
  409248:	jg     0x4092c8
  40924a:	jle    0x40924e
  40924c:	(bad)  
  40924d:	jmp    0x8721:0xc1a88319
  409254:	cli    
  409255:	data16 int3 
  409257:	retf   
  409258:	pop    esp
  409259:	inc    edx
  40925a:	retf   
  40925b:	loop   0x409250
  40925d:	out    0x76,eax
  40925f:	aad    0xdf
  409261:	jp     0x409264
  409263:	add    al,BYTE PTR [edx+0x4e2a86ef]
  409269:	cdq    
  40926a:	js     0x4092a5
  40926c:	xchg   esi,eax
  40926d:	mov    ebx,0x6a75f129
  409272:	cmp    edx,DWORD PTR [esp+ecx*4]
  409275:	clc    
  409276:	fsub   QWORD PTR [esi-0x3]
  409279:	jge    0x4092c2
  40927b:	fcmovu st,st(4)
  40927d:	stc    
  40927e:	or     ebx,DWORD PTR [edx-0xf05cd7f]
  409284:	add    dh,ch
  409286:	mov    gs,WORD PTR ds:0xff8afb28
  40928c:	xchg   ecx,eax
  40928d:	rep ins DWORD PTR es:[edi],dx
  40928f:	cmp    eax,0xf4749c7a
  409294:	and    ebp,DWORD PTR [ecx+esi*4+0x3b]
  409298:	or     ecx,DWORD PTR [eax+esi*2-0x1f03cbca]
  40929f:	sbb    eax,0x9f74ce85
  4092a4:	fst    st(3)
  4092a6:	call   0xa119:0xb74b60b0
  4092ad:	inc    ecx
  4092ae:	sbb    ch,ch
  4092b0:	out    0x66,al
  4092b2:	sti    
  4092b3:	pop    ecx
  4092b4:	dec    eax
  4092b5:	jmp    0x20d61049
  4092ba:	inc    ebx
  4092bb:	dec    ebp
  4092bc:	sti    
  4092bd:	test   BYTE PTR [esi+0x3a6bb9a0],cl
  4092c3:	xchg   esp,eax
  4092c4:	xchg   ebx,eax
  4092c5:	pushf  
  4092c6:	xchg   ecx,eax
  4092c7:	ds cld 
  4092c9:	xor    al,0xd9
  4092cb:	xchg   DWORD PTR [esi],edx
  4092cd:	imul   eax,DWORD PTR [ebx+eax*4-0x7e],0xeed92a20
  4092d5:	cmp    eax,0x9cbd352f
  4092da:	cmp    ch,BYTE PTR [ebp-0x5c889011]
  4092e0:	(bad)  
  4092e1:	jb     0x4092f7
  4092e3:	les    eax,FWORD PTR [ebp-0x3af504c7]
  4092e9:	or     DWORD PTR [esi],eax
  4092eb:	cmp    eax,0xc5a8956d
  4092f0:	mov    dl,BYTE PTR [ebp-0x6e]
  4092f3:	retf   0x30ac
  4092f6:	ss cld 
  4092f8:	mov    ds:0x145efb08,eax
  4092fd:	jnp    0x409285
  4092ff:	dec    BYTE PTR [eax-0x44ce9dad]
  409305:	mov    dh,0x98
  409307:	push   ebx
  409308:	pusha  
  409309:	mov    ebx,0xf6cca56c
  40930e:	scas   al,BYTE PTR es:[edi]
  40930f:	xor    al,0xa2
  409311:	scas   al,BYTE PTR es:[edi]
  409312:	js     0x4092f0
  409314:	add    eax,0x45a7bc87
  409319:	fwait
  40931a:	pop    es
  40931b:	imul   esi,DWORD PTR [ebx],0xf5ea486b
  409321:	cld    
  409322:	lahf   
  409323:	adc    BYTE PTR [ecx+0x38],bh
  409326:	xor    cl,BYTE PTR [edi-0x75]
  409329:	into   
  40932a:	movhps xmm1,QWORD PTR [eax+0x2]
  40932e:	jb     0x4092b9
  409330:	in     eax,dx
  409331:	mov    dl,0x64
  409333:	push   0x48
  409335:	sub    ch,dl
  409337:	inc    esp
  409338:	call   0xc2ae:0x572a26a8
  40933f:	jns    0x4093af
  409341:	xor    edx,ebp
  409343:	cmp    edi,DWORD PTR ds:0x29024619
  409349:	call   0xb7b5:0xb1e3
  40934f:	cmp    dl,BYTE PTR [edi+0x2f]
  409352:	sbb    al,dl
  409354:	sbb    BYTE PTR [ecx],0xb7
  409357:	mov    ecx,DWORD PTR [ebp+0x10]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x7f254436
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	push   esp
  40948f:	jb     0x409457
  409491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409492:	adc    ecx,esp
  409494:	push   esp
  409495:	aas    
  409496:	inc    esi
  409497:	mov    ds:0xc4f4bd9d,al
  40949c:	adc    eax,0x61a0ccd3
  4094a1:	cmc    
  4094a2:	mov    esp,0x11ed8647
  4094a7:	(bad)  
  4094a9:	jbe    0x4094ac
  4094ab:	(bad)  
  4094ac:	out    0xbd,al
  4094ae:	pop    ds
  4094af:	jo     0x40943c
  4094b1:	xchg   al,bl
  4094b3:	push   0xffffffc7
  4094b5:	enter  0x88d0,0xa0
  4094b9:	push   ecx
  4094ba:	jb     0x40950a
  4094bc:	repnz xchg ebp,eax
  4094be:	and    DWORD PTR [esi*2+0x1be2f96c],ebx
  4094c5:	fnstsw WORD PTR [eax-0x8]
  4094c8:	outs   dx,DWORD PTR ds:[esi]
  4094c9:	outs   dx,BYTE PTR ds:[esi]
  4094ca:	jp     0x409549
  4094cc:	and    BYTE PTR [eax-0x79],bl
  4094cf:	dec    ebx
  4094d0:	shr    DWORD PTR [ebx-0x56d7ff59],1
  4094d6:	xchg   edi,eax
  4094d7:	repz mov ebp,0x7743651e
  4094dd:	push   ss
  4094de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094df:	mov    bl,0x13
  4094e1:	imul   ebp,DWORD PTR [edx],0xc412ad11
  4094e7:	int3   
  4094e8:	pop    esi
  4094e9:	adc    DWORD PTR [esi+0x2e3d7e],edx
  4094ef:	mov    ss:0xf2c06a5a,eax
  4094f5:	outs   dx,DWORD PTR ds:[esi]
  4094f6:	into   
  4094f7:	adc    al,0x9a
  4094f9:	dec    eax
  4094fa:	das    
  4094fb:	inc    esi
  4094fc:	jne    0x409545
  4094fe:	push   0x4ad2cb23
  409503:	test   al,0xdb
  409505:	pop    ecx
  409506:	pop    ecx
  409507:	imul   eax,esi,0x6b
  40950a:	int3   
  40950b:	lds    edi,FWORD PTR [esi+0x1e]
  40950e:	idiv   ebx
  409510:	fidivr DWORD PTR [ebx+0x2cfa264e]
  409516:	push   ebx
  409517:	jle    0x4094f3
  409519:	and    al,0x18
  40951b:	mov    ch,0x8c
  40951d:	sub    bl,dh
  40951f:	inc    edx
  409520:	inc    esi
  409521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    dh,BYTE PTR [esp+edx*8]
  409540:	jecxz  0x409579
  409542:	or     DWORD PTR [ecx],esp
  409544:	jle    0x4095c4
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	and    eax,0x3bbe2494
  40954f:	mov    ds:0x89c2cd72,al
  409554:	mov    ch,0x55
  409556:	arpl   dx,di
  409558:	xor    al,0xe3
  40955a:	data16 cmp al,bl
  40955d:	xor    esp,DWORD PTR [ebp-0x13]
  409560:	(bad)  
  409561:	jmp    0x799b:0xe4c99a
  409568:	mov    esi,0x51ab34b3
  40956d:	jl     0x4095b7
  40956f:	mov    al,0x5f
  409571:	pushf  
  409572:	ror    BYTE PTR [eax],cl
  409574:	mov    ebp,0x10e8410a
  409579:	stc    
  40957a:	add    DWORD PTR [esi],esi
  40957c:	mov    ds:0xcf2a7cb0,al
  409581:	pop    ds
  409582:	dec    esp
  409583:	ror    BYTE PTR [ecx],cl
  409585:	jns    0x40955b
  409587:	push   esp
  409588:	xchg   edi,eax
  409589:	pusha  
  40958a:	out    0x92,eax
  40958c:	fs stos BYTE PTR es:[edi],al
  40958e:	mov    cl,BYTE PTR [edi+0x53]
  409591:	mov    ebx,DWORD PTR cs:[edi]
  409594:	int3   
  409595:	jno    0x4095e6
  409597:	jmp    0x79ba1be7
  40959c:	sahf   
  40959d:	sti    
  40959e:	adc    al,0xdb
  4095a0:	dec    ebx
  4095a1:	push   DWORD PTR [esi-0x12d30c9d]
  4095a7:	data16 stc 
  4095a9:	jns    0x4095de
  4095ab:	add    bl,bh
  4095ad:	inc    eax
  4095ae:	push   ecx
  4095af:	ins    BYTE PTR es:[edi],dx
  4095b0:	mov    bl,0x16
  4095b2:	jb     0x40959f
  4095b4:	stc    
  4095b5:	sbb    al,0xab
  4095b7:	jl     0x4095a2
  4095b9:	or     bh,BYTE PTR [ecx+0x3627be46]
  4095bf:	ins    DWORD PTR es:[edi],dx
  4095c0:	test   eax,0x2a788887
  4095c5:	cmp    DWORD PTR [eax],edx
  4095c7:	xchg   DWORD PTR [esi-0x16],esp
  4095ca:	pop    eax
  4095cb:	adc    eax,esp
  4095cd:	out    0x8a,al
  4095cf:	out    dx,al
  4095d0:	aam    0xd
  4095d2:	adc    DWORD PTR [edi-0x74],ecx
  4095d5:	test   dl,cl
  4095d7:	jp     0x4095e9
  4095d9:	dec    edx
  4095da:	or     bh,dh
  4095dc:	ds mov ch,0x33
  4095df:	rol    DWORD PTR [ebx],0xc2
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    esi,DWORD PTR [esp+esi*2-0x2a]
  40961e:	rcr    DWORD PTR [ebp+0x167e7e21],1
  409624:	jg     0x4096a4
  409626:	jle    0x4095d4
  409628:	dec    eax
  409629:	call   0xc9f5:0x8b93b138
  409630:	je     0x40967f
  409632:	or     eax,0xaf5e844e
  409637:	scas   al,BYTE PTR es:[edi]
  409638:	pop    ecx
  409639:	cwde   
  40963a:	jns    0x409668
  40963c:	frstor [edi+eiz*4+0x617e2b46]
  409643:	dec    edx
  409644:	push   eax
  409645:	jno    0x409690
  409647:	ret    0x67ce
  40964a:	pushf  
  40964b:	add    ecx,esi
  40964d:	fdivr  st(1),st
  40964f:	mov    edx,0x4e9fa1ba
  409654:	iret   
  409655:	dec    ebx
  409656:	adc    al,BYTE PTR ds:[esi]
  409659:	push   edi
  40965a:	les    esp,FWORD PTR [edi]
  40965c:	dec    edx
  40965d:	gs xchg ebx,eax
  40965f:	xchg   esi,eax
  409660:	shl    BYTE PTR [ebp+0x1fea16d5],cl
  409666:	retf   0x40e6
  409669:	jl     0x40960a
  40966b:	ficomp WORD PTR [ecx]
  40966d:	mov    dh,0xe3
  40966f:	(bad)  
  409670:	retf   
  409671:	(bad)
  409676:	xor    eax,0x29c9b072
  40967b:	mov    es,WORD PTR [esi-0x70aa8093]
  409681:	int    0xb8
  409683:	dec    edi
  409684:	dec    edi
  409685:	inc    eax
  409686:	jp     0x40960c
  409688:	es sahf 
  40968a:	mov    ebx,0x69a7faec
  40968f:	out    dx,eax
  409690:	sub    eax,0x973f6009
  409695:	out    dx,al
  409696:	lods   al,BYTE PTR ds:[esi]
  409697:	neg    cl
  409699:	idiv   BYTE PTR [edi+0xdc5a63a]
  40969f:	pop    edx
  4096a0:	mov    ebx,0xb46541a5
  4096a5:	pop    edx
  4096a6:	add    BYTE PTR [ecx+0x1c],0x17
  4096aa:	sub    ebx,esi
  4096ac:	xchg   edx,eax
  4096ad:	or     DWORD PTR [ecx],eax
  4096af:	data16 cmp al,0x37
  4096b2:	clc    
  4096b3:	rol    edx,0xc
  4096b6:	sub    eax,0x98520444
  4096bb:	jl     0x4096d1
  4096bd:	add    al,BYTE PTR [esi-0x5f]
  4096c0:	jg     0x4096b6
  4096c2:	or     esi,DWORD PTR [ebx]
  4096c4:	push   esp
  4096c5:	inc    di
  4096c7:	js     0x4096ff
  4096c9:	sbb    ch,BYTE PTR [eax+0x705ce599]
  4096cf:	std    
  4096d0:	mov    esi,0x351fa23a
  4096d5:	jo     0x409683
  4096d7:	jns    0x409706
  4096d9:	mov    al,ds:0x40d85c43
  4096de:	mov    edx,0x19402655
  4096e3:	push   ecx
  4096e4:	punpckldq mm7,DWORD PTR [edx+edi*4]
  4096e8:	(bad)  
  4096e9:	sub    DWORD PTR [ebp+esi*8+0x4e1ea2d],esp
  4096f0:	cmp    dh,ch
  4096f2:	popa   
  4096f3:	and    dh,BYTE PTR [eax]
  4096f5:	aaa    
  4096f6:	push   ds
  4096f7:	xor    DWORD PTR [edi-0x32],ebx
  4096fa:	fadd   DWORD PTR ds:0x81ce18b6
  409700:	xchg   esp,eax
  409701:	jmp    0x3b1e0b4f
  409706:	repz add edi,esp
  409709:	outs   dx,BYTE PTR ds:[esi]
  40970a:	jle    0x409697
  40970c:	ja     0x409746
  40970e:	(bad)  
  40970f:	out    0x17,al
  409711:	out    dx,eax
  409712:	gs mov ?,eax
  409715:	mov    ds:0x4243422a,al
  40971a:	cld    
  40971b:	lods   eax,DWORD PTR ds:[esi]
  40971c:	inc    esi
  40971d:	scas   al,BYTE PTR es:[edi]
  40971e:	adc    ecx,DWORD PTR [edx-0x7158983c]
  409724:	sbb    BYTE PTR [ebx],0xc9
  409727:	in     eax,dx
  409728:	fdivr  QWORD PTR [edx+0x69882cc7]
  40972e:	mov    bh,0x78
  409730:	pop    ebp
  409731:	mov    WORD PTR es:[ebx+0x20],?
  409735:	sub    DWORD PTR [edx],eax
  409737:	dec    edx
  409738:	mov    ds:0xea77db85,eax
  40973d:	shl    DWORD PTR [ecx+0x4],1
  409740:	loop   0x4096d7
  409742:	dec    eax
  409743:	in     eax,0xf0
  409745:	fwait
  409746:	mul    BYTE PTR [edi+0x17]
  409749:	mov    eax,ds:0xd8886282
  40974e:	mov    esi,0xc7d01b51
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	adc    eax,DWORD PTR [ebp+0x76]
  4097c2:	repnz mov ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097f4
  4097cc:	pop    es
  4097cd:	mov    al,ds:0xa34f9d2c
  4097d2:	pop    ds
  4097d3:	retf   0x67b0
  4097d6:	mov    ecx,0xe6bf3d83
  4097db:	(bad)  
  4097dc:	into   
  4097dd:	cld    
  4097de:	stos   DWORD PTR es:[edi],eax
  4097df:	xor    BYTE PTR [ecx],dl
  4097e1:	adc    al,0x81
  4097e3:	dec    edx
  4097e4:	or     DWORD PTR [ecx-0x7],ebp
  4097e7:	jmp    0xdd2a:0x5cc9aa38
  4097ee:	lock (bad) 
  4097f0:	imul   eax,edi,0xfffffffb
  4097f3:	stos   BYTE PTR es:[edi],al
  4097f4:	cmovnp ecx,DWORD PTR [edx+0xca343d3]
  4097fb:	mov    WORD PTR [ebx-0x3531422a],es
  409801:	les    ecx,FWORD PTR [edx+0x3689ff77]
  409807:	in     al,dx
  409808:	sbb    ch,dl
  40980a:	add    eax,0x812703fe
  40980f:	je     0x4097e8
  409811:	cdq    
  409812:	jns    0x409849
  409814:	and    al,BYTE PTR [ebp-0x5]
  409817:	lods   al,BYTE PTR ds:[esi]
  409818:	ds xchg esi,eax
  40981a:	push   eax
  40981b:	bnd ja 0x409868
  40981e:	es in  al,0xe2
  409821:	add    cl,BYTE PTR [eax+ebp*8]
  409824:	xchg   ch,al
  409826:	cdq    
  409827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409828:	xor    BYTE PTR [ebp+0x50c58cd7],ch
  40982e:	jne    0x409827
  409830:	(bad)  
  409831:	lods   eax,DWORD PTR ds:[esi]
  409832:	mov    WORD PTR [edx+0x45dc2d6b],cs
  409838:	test   al,0xae
  40983a:	jae    0x409871
  40983c:	mov    eax,ds:0xbd11d760
  409841:	sbb    al,cl
  409843:	mov    esp,0x40fda39e
  409848:	sub    al,0x35
  40984a:	cmp    DWORD PTR [edi-0x215639d9],edi
  409850:	scas   al,BYTE PTR es:[edi]
  409851:	inc    ebx
  409852:	mul    DWORD PTR [ecx]
  409854:	xor    DWORD PTR [ecx-0x6a513f62],edx
  40985a:	pop    es
  40985b:	or     eax,0x28368c93
  409860:	pop    es
  409861:	(bad)  
  409862:	jo     0x409814
  409864:	mov    DWORD PTR [edx],ecx
  409866:	or     dl,bh
  409868:	imul   edx,edi,0x74
  40986b:	jno    0x4098b0
  40986d:	in     eax,dx
  40986e:	xchg   esp,eax
  40986f:	xchg   ecx,eax
  409870:	in     al,0x2c
  409872:	(bad)  
  409874:	cdq    
  409875:	push   es
  409876:	mov    edx,0xdadf13cb
  40987b:	cmp    esi,ecx
  40987d:	mov    esi,0x2d19493f
  409882:	pusha  
  409883:	sub    BYTE PTR [ecx-0xe],0x40
  409887:	pop    edx
  409888:	pop    esi
  409889:	test   BYTE PTR ds:0xbed03357,bl
  40988f:	mov    eax,0xbabe428c
  409894:	jp     0x409835
  409896:	cmp    eax,0xeac88a76
  40989b:	sbb    BYTE PTR [esp+eiz*2-0x4c1e35eb],dl
  4098a2:	int    0xaa
  4098a4:	aaa    
  4098a5:	sub    al,0x14
  4098a7:	ret    
  4098a8:	std    
  4098a9:	ss aaa 
  4098ab:	mov    dh,0x32
  4098ad:	retf   
  4098ae:	aad    0xe
  4098b0:	push   0xa00f356d
  4098b5:	cmp    bl,cl
  4098b7:	loop   0x4098f0
  4098b9:	mov    esi,0xbfacc0ec
  4098be:	das    
  4098bf:	ins    DWORD PTR es:[edi],dx
  4098c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c1:	or     edi,esi
  4098c3:	push   eax
  4098c4:	test   eax,0x2ad19902
  4098c9:	popf   
  4098ca:	xchg   edi,eax
  4098cb:	push   0x2a
  4098cd:	inc    eax
  4098ce:	cmp    eax,0xa57f5363
  4098d3:	cmp    eax,0x30ace712
  4098d8:	pop    esp
  4098d9:	xor    esi,DWORD PTR [ecx-0x7e]
  4098dc:	sub    al,0x48
  4098de:	fadd   st,st(2)
  4098e0:	cmp    eax,0x382a172
  4098e5:	sbb    al,0xb0
  4098e7:	adc    DWORD PTR [ebx-0x64],edi
  4098ea:	iret   
  4098eb:	add    dh,BYTE PTR ds:0xb514b8d
  4098f1:	repz (bad) 
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x47b634c
  409977:	or     ebp,DWORD PTR [ebp+0x27]
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409921
  409981:	inc    esp
  409982:	mov    ds:0xb55d13d2,eax
  409987:	or     ecx,DWORD PTR [bp+si+0x1c]
  40998b:	ins    DWORD PTR es:[di],dx
  40998d:	push   esp
  40998e:	jmp    0x41605f4f
  409993:	call   FWORD PTR [ebx+0x580f8d45]
  409999:	pop    es
  40999a:	rep ins BYTE PTR es:[edi],dx
  40999c:	add    bl,BYTE PTR [ecx+ebx*1-0x6]
  4099a0:	dec    ecx
  4099a1:	cmp    BYTE PTR [edx+eiz*2+0x109208cb],dl
  4099a8:	mov    DWORD PTR [ebp-0x63f6038],ebx
  4099ae:	and    BYTE PTR [ebp+0xecddf1d],0x91
  4099b5:	cwde   
  4099b6:	mov    dh,0xfb
  4099b8:	mov    esi,0x747db726
  4099bd:	lds    ebx,FWORD PTR [ebp-0x700313ed]
  4099c3:	cmp    eax,0x7bf99129
  4099c8:	mov    cl,BYTE PTR ds:0xc4257f95
  4099ce:	loopne 0x4099e6
  4099d0:	jmp    0x541ce9b9
  4099d5:	test   DWORD PTR [edx-0x21dd20dd],0x16a9d7f8
  4099df:	pop    ds
  4099e0:	div    BYTE PTR [ecx+esi*4]
  4099e3:	dec    esi
  4099e4:	mov    ds:0x7acee3bf,eax
  4099e9:	adc    ch,BYTE PTR [edi-0x462906be]
  4099ef:	or     eax,0x1904c09
  4099f4:	and    ah,ah
  4099f6:	(bad)  
  4099f8:	sub    al,0x60
  4099fa:	inc    esi
  4099fb:	mov    esi,0x8423ab51
  409a00:	in     eax,dx
  409a01:	out    0x4d,al
  409a03:	push   ecx
  409a04:	mov    ds,esi
  409a06:	fs sub al,0x2b
  409a09:	inc    esp
  409a0a:	mov    ds,edi
  409a0c:	icebp  
  409a0d:	jnp    0x409a39
  409a0f:	out    0x71,al
  409a11:	cwde   
  409a12:	mov    WORD PTR [eax+0x50],ss
  409a15:	enter  0x4cf3,0xfb
  409a19:	call   0x90e9:0x5659f13c
  409a20:	jp     0x409a86
  409a22:	mov    cl,0xba
  409a24:	lock es sahf 
  409a27:	out    0xbc,eax
  409a29:	and    edx,DWORD PTR [edx+0x44]
  409a2c:	test   DWORD PTR [edx-0x60c74ed8],esi
  409a32:	data16 xlat BYTE PTR ds:[ebx]
  409a34:	outs   dx,DWORD PTR ds:[esi]
  409a35:	dec    ebp
  409a36:	in     al,dx
  409a37:	cmp    ah,bl
  409a39:	pop    ss
  409a3a:	xor    DWORD PTR [edi+eiz*4],0xdc5d90b1
  409a41:	repz fcmovnb st,st(7)
  409a44:	aam    0x27
  409a46:	arpl   WORD PTR [esi+0x241efc38],di
  409a4c:	cmp    ebp,ebx
  409a4e:	inc    edx
  409a4f:	outs   dx,BYTE PTR ds:[esi]
  409a50:	pop    ebx
  409a51:	sbb    al,0x5b
  409a53:	int    0xec
  409a55:	push   0x7773e65c
  409a5a:	xchg   DWORD PTR [ecx+eiz*8+0x21],ebx
  409a5e:	push   esp
  409a5f:	mov    ah,0xe3
  409a61:	pop    edi
  409a62:	sbb    BYTE PTR [esi-0x466ce61b],cl
  409a68:	call   0xe3f1ebbc
  409a6d:	adc    eax,0x407e17ca
  409a72:	mov    ecx,0xf2421edd
  409a77:	aam    0x87
  409a79:	jle    0x409a58
  409a7b:	and    dl,ch
  409a7d:	pop    esp
  409a7e:	test   BYTE PTR [ecx],bl
  409a80:	mov    esi,0x36acfa57
  409a85:	push   es
  409a86:	out    0x84,al
  409a88:	xor    edi,ebp
  409a8a:	xchg   ecx,eax
  409a8b:	jno    0x409a93
  409a8d:	mov    ds:0x5b416112,al
  409a92:	jbe    0x409b08
  409a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a95:	xor    esp,ecx
  409a97:	pop    edi
  409a98:	adc    BYTE PTR [eax+0x2f],0x8f
  409a9c:	psllw  mm6,QWORD PTR [edi+eax*1]
  409aa0:	or     edx,edx
  409aa2:	cmp    bh,BYTE PTR [edi]
  409aa4:	fdiv   st(5),st
  409aa6:	xor    bl,BYTE PTR [ebx]
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	mov    BYTE PTR [eax],ch
  40a7b6:	jbe    0x40a75c
  40a7b8:	add    eax,0xc57e7e25
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a789
  40a7c1:	fiadd  DWORD PTR [edi]
  40a7c3:	and    eax,0x57c16ccc
  40a7c8:	or     dl,BYTE PTR [edi+0x75a76d05]
  40a7ce:	jbe    0x40a7db
  40a7d0:	ret    
  40a7d1:	push   edi
  40a7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d3:	arpl   WORD PTR [ebp-0x4573e599],ax
  40a7d9:	pushf  
  40a7da:	mov    DWORD PTR [esi],eax
  40a7dc:	call   FWORD PTR [eax]
  40a7de:	inc    DWORD PTR [esi]
  40a7e0:	pop    es
  40a7e1:	daa    
  40a7e2:	add    DWORD PTR [ecx+0x64],0xffffffcd
  40a7e6:	loope  0x40a7ab
  40a7e8:	pop    ebp
  40a7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ea:	push   esi
  40a7eb:	push   ebx
  40a7ec:	inc    ebp
  40a7ed:	ret    0x1212
  40a7f0:	push   ds
  40a7f1:	int3   
  40a7f2:	mov    edx,0x64276bc5
  40a7f7:	outs   dx,DWORD PTR ds:[esi]
  40a7f8:	js     0x40a7dd
  40a7fa:	and    eax,0xc8edee6
  40a7ff:	and    eax,0xed17d299
  40a804:	in     eax,dx
  40a805:	dec    esp
  40a806:	iret   
  40a807:	jns    0x40a803
  40a809:	scas   eax,DWORD PTR es:[edi]
  40a80a:	pop    ebp
  40a80b:	cmp    bl,BYTE PTR [eax+0x36]
  40a80e:	add    ebp,ebp
  40a810:	out    dx,eax
  40a811:	push   0x50
  40a813:	scas   al,BYTE PTR es:[edi]
  40a814:	jns    0x40a861
  40a816:	mov    ds:0xfe1719d2,eax
  40a81b:	xor    al,0xaa
  40a81d:	adc    BYTE PTR ds:0xf03b9d61,cl
  40a823:	fistp  QWORD PTR [esi+0x3c]
  40a826:	xchg   ebx,eax
  40a827:	push   eax
  40a828:	gs xchg ebp,eax
  40a82a:	xor    al,0x7d
  40a82c:	jbe    0x40a7be
  40a82e:	or     DWORD PTR [ecx-0x53],0xfffffff0
  40a832:	call   0xaf112e91
  40a837:	sub    al,0x4d
  40a839:	and    al,0x4d
  40a83b:	repnz or DWORD PTR [esi],edi
  40a83e:	mov    eax,0x98fde6a5
  40a843:	mov    esp,0x8b34c78
  40a848:	int3   
  40a849:	(bad)  
  40a84a:	jmp    0x40a8c7
  40a84c:	dec    edi
  40a84d:	out    dx,eax
  40a84e:	outs   dx,BYTE PTR ds:[esi]
  40a84f:	xor    eax,0xed6dc82
  40a854:	fsubr  st,st(5)
  40a856:	inc    ecx
  40a857:	or     bh,dl
  40a859:	sbb    al,0xd8
  40a85b:	mov    eax,0x13e4cfcf
  40a860:	int3   
  40a861:	lods   al,BYTE PTR ds:[esi]
  40a862:	and    bl,dh
  40a864:	sbb    bl,BYTE PTR [edi+0x61]
  40a867:	out    0xde,al
  40a869:	imul   ecx,eax,0xcb62297e
  40a86f:	pop    esp
  40a870:	ss stos BYTE PTR es:[edi],al
  40a872:	test   BYTE PTR [edi-0x58],0xda
  40a876:	jno    0x40a8bb
  40a878:	ror    BYTE PTR [ebp+0x28fa22ac],cl
  40a87e:	sub    cl,dh
  40a880:	add    edi,DWORD PTR [ebx-0x1e767d16]
  40a886:	js     0x40a826
  40a888:	out    dx,al
  40a889:	mov    ebp,0xced24f8f
  40a88e:	div    BYTE PTR [edi+ebx*2-0x5e]
  40a892:	test   ebx,esp
  40a894:	or     ch,ah
  40a896:	and    DWORD PTR ds:0xfe4402f,0x33
  40a89d:	and    ebp,ecx
  40a89f:	dec    edx
  40a8a0:	cli    
  40a8a1:	mov    WORD PTR [eax-0x6a],ds
  40a8a4:	xchg   BYTE PTR [ecx+edx*1+0x18],cl
  40a8a8:	out    0x60,al
  40a8aa:	push   esi
  40a8ab:	test   al,0x3d
  40a8ad:	add    edi,eax
  40a8af:	rcl    BYTE PTR [esi-0x72],0x1b
  40a8b3:	mov    ebx,0x257c1e9d
  40a8b8:	pop    ebp
  40a8b9:	or     esp,DWORD PTR [edi-0x2885cdde]
  40a8bf:	call   0x657921ad
  40a8c4:	sbb    eax,0x36bb18ab
  40a8c9:	dec    eax
  40a8ca:	jns    0x40a8e0
  40a8cc:	mov    cl,0x42
  40a8ce:	enter  0x2a14,0xd6
  40a8d2:	dec    edx
  40a8d3:	int3   
  40a8d4:	sub    al,0x66
  40a8d6:	or     eax,0xd57b39d0
  40a8db:	sbb    DWORD PTR [ecx-0x20],esi
  40a8de:	mov    edx,DWORD PTR [edx-0x46180e68]
  40a8e4:	mov    eax,ds:0xc50297e3
  40a8e9:	mov    DWORD PTR [edx],edi
  40a8eb:	lds    ecx,FWORD PTR [eax-0x4a28e3d3]
  40a8f1:	pusha  
  40a8f2:	lods   eax,DWORD PTR ds:[esi]
  40a8f3:	std    
  40a8f4:	xchg   ecx,eax
  40a8f5:	enter  0x6a87,0xd6
  40a8f9:	out    dx,eax
  40a8fa:	jl     0x40a933
  40a8fc:	adc    al,BYTE PTR ds:0xe04be3c1
  40a902:	imul   edx
  40a904:	push   cs
  40a905:	and    DWORD PTR [esi],eax
  40a907:	dec    eax
  40a908:	adc    al,0x72
  40a90a:	adc    bl,ch
  40a90c:	sub    BYTE PTR [edi],cl
  40a90e:	jns    0x40a958
  40a910:	jne    0x40a978
  40a912:	adc    BYTE PTR [esi],dl
  40a914:	mov    ah,0x2a
  40a916:	inc    ebx
  40a917:	mov    ah,0x63
  40a919:	jp     0x40a8a1
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	in     eax,0x51
  40a9a8:	xchg   ebp,eax
  40a9a9:	test   al,0xe0
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a94f
  40a9b3:	fdiv   DWORD PTR [eax-0xd8a2d55]
  40a9b9:	push   0xf0107f62
  40a9be:	je     0x40a9e5
  40a9c0:	sub    al,ch
  40a9c2:	push   edx
  40a9c3:	sbb    al,0x81
  40a9c5:	xchg   edi,eax
  40a9c6:	repnz or dl,BYTE PTR [ebp+0x127ea064]
  40a9cd:	xor    ah,BYTE PTR [edx-0x536edad]
  40a9d3:	mov    ebx,0xdc0d6174
  40a9d8:	inc    ebx
  40a9d9:	sub    BYTE PTR [ebx-0x26835564],ch
  40a9df:	stos   BYTE PTR es:[edi],al
  40a9e0:	sti    
  40a9e1:	jmp    0xa9e2208d
  40a9e6:	sub    ebx,esi
  40a9e8:	inc    ebp
  40a9e9:	xor    dl,BYTE PTR [eax]
  40a9eb:	ins    BYTE PTR es:[edi],dx
  40a9ec:	mov    dh,BYTE PTR [edx]
  40a9ee:	out    0x1b,eax
  40a9f0:	jne    0x40aa18
  40a9f2:	mov    bl,0x3
  40a9f4:	and    BYTE PTR [edi-0x34],bl
  40a9f7:	iret   
  40a9f8:	leave  
  40a9f9:	pop    edi
  40a9fa:	mov    ch,0x43
  40a9fc:	or     BYTE PTR [ebp+0x16b402f3],cl
  40aa02:	pop    ds
  40aa03:	sar    DWORD PTR [esi-0x12fd0743],cl
  40aa09:	cmp    BYTE PTR [ebx+0x7a77bc7c],ah
  40aa0f:	fdivr  st,st(2)
  40aa11:	mov    cl,0xb1
  40aa13:	inc    eax
  40aa14:	xor    ebp,eax
  40aa16:	repz stc 
  40aa18:	out    dx,al
  40aa19:	in     al,dx
  40aa1a:	inc    ecx
  40aa1b:	je     0x40a9b6
  40aa1d:	shl    bh,0xd4
  40aa20:	xlat   BYTE PTR ds:[ebx]
  40aa21:	je     0x40aa64
  40aa23:	inc    ebx
  40aa24:	aaa    
  40aa25:	push   edx
  40aa26:	out    dx,eax
  40aa27:	dec    ecx
  40aa28:	scas   eax,DWORD PTR es:[edi]
  40aa29:	fcomp  DWORD PTR [eax+ebp*2]
  40aa2c:	add    eax,0x2665c080
  40aa31:	inc    esi
  40aa32:	ins    DWORD PTR es:[edi],dx
  40aa33:	les    ecx,FWORD PTR [eax]
  40aa35:	dec    ebp
  40aa36:	loope  0x40aa80
  40aa38:	jmp    0x2e1c:0xc2eb27a6
  40aa3f:	inc    ebx
  40aa40:	push   edx
  40aa41:	cmp    bl,BYTE PTR [esi-0x55cc0c3f]
  40aa47:	fbstp  TBYTE PTR [edx-0x73549c22]
  40aa4d:	jge    0x40aa74
  40aa4f:	stos   DWORD PTR es:[edi],eax
  40aa50:	mov    ebx,DWORD PTR [eax+0x7b]
  40aa53:	sbb    dl,BYTE PTR [ecx]
  40aa55:	push   ecx
  40aa56:	push   0x93075923
  40aa5b:	sbb    bh,BYTE PTR ss:[ebp+0x7ae38071]
  40aa62:	(bad)  
  40aa63:	aas    
  40aa64:	inc    edi
  40aa65:	pop    edi
  40aa66:	stos   DWORD PTR es:[edi],eax
  40aa67:	cld    
  40aa68:	out    0x19,eax
  40aa6a:	jecxz  0x40aa58
  40aa6c:	push   esp
  40aa6d:	into   
  40aa6e:	call   0x271d:0xd63e431a
  40aa75:	sbb    DWORD PTR [ebp+0x7d],esi
  40aa78:	in     eax,dx
  40aa79:	add    al,0xeb
  40aa7b:	ins    DWORD PTR es:[edi],dx
  40aa7c:	lods   eax,DWORD PTR ds:[esi]
  40aa7d:	cs es sti 
  40aa80:	addr16 call 0x4a57628d
  40aa86:	(bad)  
  40aa87:	call   0x6ed0:0xf4c377f3
  40aa8e:	cmp    ebx,DWORD PTR [esi]
  40aa90:	push   edi
  40aa91:	and    al,0xaf
  40aa93:	test   eax,0x52bef262
  40aa98:	sub    al,BYTE PTR [ebx+edi*4+0x24e2a15f]
  40aa9f:	mul    DWORD PTR [edx]
  40aaa1:	xchg   ecx,eax
  40aaa2:	mov    edx,0x904aff1b
  40aaa7:	ficomp WORD PTR [esp+ebp*2-0x5]
  40aaab:	or     ah,bh
  40aaad:	fxch   st(3)
  40aaaf:	xor    ah,bh
  40aab1:	(bad)  
  40aab2:	out    dx,al
  40aab3:	mov    eax,0xfd085f99
  40aab8:	adc    ebp,0x3e
  40aabb:	pop    edi
  40aabc:	mov    edi,cs
  40aabe:	call   FWORD PTR [ebx+0x721c572c]
  40aac4:	mov    WORD PTR [edi],ss
  40aac6:	pop    es
  40aac7:	and    eax,0x5fb44bf2
  40aacc:	pop    esp
  40aacd:	push   ebp
  40aace:	push   ebx
  40aacf:	xor    esi,DWORD PTR ds:0xeaa551ca
  40aad5:	inc    edi
  40aad6:	sti    
  40aad7:	stos   DWORD PTR es:[edi],eax
  40aad8:	push   ebx
  40aad9:	inc    ebp
  40aada:	mov    al,0x10
  40aadc:	(bad)  
  40aadd:	push   ds
  40aade:	fstp   QWORD PTR [edi-0x68]
  40aae1:	outs   dx,DWORD PTR ds:[esi]
  40aae2:	dec    esp
  40aae3:	pop    eax
  40aae4:	cli    
  40aae5:	in     al,dx
  40aae6:	jmp    0x1f6d:0x307f5894
  40aaed:	(bad)  
  40aaee:	enter  0x7fd,0x5b
  40aaf2:	and    eax,0x900276cc
  40aaf7:	mov    bl,0xa1
  40aaf9:	xchg   edx,eax
  40aafa:	cmp    DWORD PTR ds:0xc34d51a9,0xffffffe0
  40ab01:	js     0x40aad9
  40ab03:	scas   al,BYTE PTR es:[edi]
  40ab04:	cld    
  40ab05:	out    dx,eax
  40ab06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab07:	sub    al,BYTE PTR [eax-0x4d]
  40ab0a:	adc    eax,esp
  40ab0c:	pop    eax
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x45dcac8b
  40ab26:	cmp    al,0x7a
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab6e
  40ab31:	repz cmp cl,ah
  40ab34:	pop    edx
  40ab35:	aas    
  40ab36:	loop   0x40ab5d
  40ab38:	xor    edx,DWORD PTR [esi]
  40ab3a:	and    BYTE PTR [esi+0x49],0x57
  40ab3e:	add    ebp,DWORD PTR [ebx-0x4]
  40ab41:	lahf   
  40ab42:	mov    ebp,0x47448dd5
  40ab47:	hlt    
  40ab48:	(bad)  
  40ab49:	pop    ebp
  40ab4a:	scas   al,BYTE PTR es:[edi]
  40ab4b:	test   BYTE PTR [eax-0x4744fba9],bh
  40ab51:	rol    DWORD PTR [ebx],1
  40ab53:	fs mov eax,0xab39b519
  40ab59:	stos   BYTE PTR es:[edi],al
  40ab5a:	pop    ebp
  40ab5b:	xchg   ebx,eax
  40ab5c:	shr    BYTE PTR [ebx-0x76],0x4c
  40ab60:	ss adc ebp,esp
  40ab63:	mov    ebp,cs
  40ab65:	int3   
  40ab66:	sbb    DWORD PTR [eax+ebx*4],ebp
  40ab69:	mov    ah,BYTE PTR [eax+0x4f9aaba5]
  40ab6f:	outs   dx,DWORD PTR ds:[esi]
  40ab70:	(bad)  
  40ab71:	mov    dl,0x54
  40ab73:	inc    esp
  40ab74:	or     edx,DWORD PTR [ebx-0x70]
  40ab77:	dec    esp
  40ab78:	aaa    
  40ab79:	cmp    DWORD PTR [edi],edi
  40ab7b:	aam    0x74
  40ab7d:	imul   ecx,ebx,0x54
  40ab80:	mov    bl,0x12
  40ab82:	push   esi
  40ab83:	rcl    dl,0x50
  40ab86:	cmp    esi,DWORD PTR [ebp+0x1]
  40ab89:	push   ss
  40ab8a:	sar    dl,1
  40ab8c:	jmp    0x6aedec0d
  40ab91:	(bad)  
  40ab92:	cli    
  40ab93:	dec    esp
  40ab94:	sbb    edx,DWORD PTR [ebx+eax*8-0x28]
  40ab98:	xor    eax,0xed481ccf
  40ab9d:	dec    eax
  40ab9e:	hlt    
  40ab9f:	jle    0x40ab37
  40aba1:	inc    edi
  40aba2:	sub    BYTE PTR [ecx-0x50],bh
  40aba5:	pop    ss
  40aba6:	repz adc bl,BYTE PTR es:[eax+0x1004a190]
  40abae:	aad    0xdd
  40abb0:	sbb    cl,BYTE PTR [edx+0x48]
  40abb3:	mov    eax,ds:0xade1c872
  40abb8:	add    al,0x32
  40abba:	icebp  
  40abbb:	mov    ds:0x384c6607,al
  40abc0:	test   al,0x59
  40abc2:	mov    ah,0x39
  40abc4:	hlt    
  40abc5:	in     eax,0xaa
  40abc7:	in     eax,0x4b
  40abc9:	xlat   BYTE PTR ds:[ebx]
  40abca:	pop    ds
  40abcb:	add    DWORD PTR [esi],edx
  40abcd:	fadd   QWORD PTR [ecx]
  40abcf:	inc    ebx
  40abd0:	je     0x40ab8d
  40abd2:	lods   eax,DWORD PTR ds:[esi]
  40abd3:	scas   eax,DWORD PTR es:[edi]
  40abd4:	lahf   
  40abd5:	out    0xa8,al
  40abd7:	adc    al,0xd9
  40abd9:	add    esi,DWORD PTR [esi-0x320c3622]
  40abdf:	aaa    
  40abe0:	test   eax,0x527755a7
  40abe5:	aam    0x9b
  40abe7:	mov    dh,0x5e
  40abe9:	push   ss
  40abea:	cmp    ebp,DWORD PTR [ebx]
  40abec:	sbb    BYTE PTR [edi],cl
  40abee:	fwait
  40abef:	jl     0x40abb8
  40abf1:	(bad)  
  40abf2:	push   ds
  40abf3:	lock imul ebp,DWORD PTR [ebx-0x26],0xedb1ec86
  40abfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abfc:	dec    ecx
  40abfd:	inc    eax
  40abfe:	pop    es
  40abff:	loope  0x40ac1c
  40ac01:	mov    ss:0x2f999942,eax
  40ac07:	sbb    edi,DWORD PTR [ebx+0x2e]
  40ac0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0b:	into   
  40ac0c:	(bad)  
  40ac0d:	mov    bl,BYTE PTR [edi+0x5015a680]
  40ac13:	xor    ebp,edx
  40ac15:	aad    0xc2
  40ac17:	or     DWORD PTR [esi-0x3d42fbc0],edx
  40ac1d:	imul   esi,eax,0xc4d9537c
  40ac23:	es push esp
  40ac25:	inc    ebx
  40ac26:	adc    eax,0xcafab7be
  40ac2b:	xor    DWORD PTR [edx+0x1a7239e9],0xf16c5091
  40ac35:	xchg   edx,eax
  40ac36:	idiv   BYTE PTR [edx-0x3]
  40ac39:	mov    dl,0x73
  40ac3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3c:	pop    edi
  40ac3d:	lods   eax,DWORD PTR ds:[esi]
  40ac3e:	jmp    0x40abe3
  40ac40:	jp     0x40ac3d
  40ac42:	ret    
  40ac43:	mov    eax,ds:0x9bf22e84
  40ac48:	pop    ss
  40ac49:	mov    ebp,0x1f2db008
  40ac4e:	pop    edi
  40ac4f:	xor    dl,dl
  40ac51:	sbb    DWORD PTR [eax],eax
  40ac53:	jbe    0x40abf2
  40ac55:	in     eax,0xe9
  40ac57:	push   esp
  40ac58:	push   es
  40ac59:	stos   BYTE PTR es:[edi],al
  40ac5a:	ds repz mov bh,0x3e
  40ac5e:	xchg   ebx,eax
  40ac5f:	mov    dh,ch
  40ac61:	enter  0x3d6c,0xa9
  40ac65:	mov    cl,0xb9
  40ac67:	push   eax
  40ac68:	push   ebx
  40ac69:	xchg   esp,eax
  40ac6a:	jnp    0x40accb
  40ac6c:	inc    ecx
  40ac6d:	lea    ecx,[edi]
  40ac6f:	ds inc edx
  40ac71:	test   al,0x97
  40ac73:	imul   edi,DWORD PTR [ecx-0xcd342bb],0xf7c6c45c
  40ac7d:	into   
  40ac7e:	sub    al,0x1a
  40ac80:	sub    DWORD PTR [ecx+0x57],edx
  40ac83:	mov    ecx,0x367c6c86
  40ac88:	pop    es
  40ac89:	xchg   ecx,eax
  40ac8a:	add    BYTE PTR [ebx],0xf1
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    eax,DWORD PTR [eax+0x2aa4fe68]
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40accf
  40acc8:	mov    gs,WORD PTR [ebx-0xdefc10b]
  40acce:	inc    ebx
  40accf:	add    ebx,DWORD PTR [ecx]
  40acd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd2:	enter  0x519f,0x8d
  40acd6:	jle    0x40ac9a
  40acd8:	aad    0xe8
  40acda:	rcr    BYTE PTR [edi],0x21
  40acdd:	mov    al,0x75
  40acdf:	sub    DWORD PTR [ebx],0xf
  40ace2:	pop    ecx
  40ace3:	xlat   BYTE PTR ds:[ebx]
  40ace4:	adc    cl,dl
  40ace6:	push   0x7faae655
  40aceb:	std    
  40acec:	cmc    
  40aced:	add    al,0xbc
  40acef:	test   eax,0x8fc4d977
  40acf4:	inc    ebx
  40acf5:	aad    0x20
  40acf7:	mov    edx,?
  40acf9:	add    al,0x49
  40acfb:	ds imul eax,eax,0xffffffcb
  40acff:	lods   eax,DWORD PTR ds:[esi]
  40ad00:	(bad)  
  40ad01:	jae    0x40ad1a
  40ad03:	ins    DWORD PTR es:[edi],dx
  40ad04:	sti    
  40ad05:	ss icebp 
  40ad07:	jns    0x40ad2f
  40ad09:	xchg   DWORD PTR [edi+0x3f],ebx
  40ad0c:	mov    ch,0x4d
  40ad0e:	jno    0x40acf2
  40ad10:	div    DWORD PTR [ebp-0x25fe3463]
  40ad16:	ss inc esi
  40ad18:	jp     0x40acb1
  40ad1a:	xor    al,0x79
  40ad1c:	mov    ch,cl
  40ad1e:	xchg   ecx,eax
  40ad1f:	jecxz  0x40aced
  40ad21:	call   0x2b65:0x1030d8d6
  40ad28:	je     0x40ad34
  40ad2a:	out    dx,eax
  40ad2b:	sub    ch,BYTE PTR [ecx-0x77]
  40ad2e:	leave  
  40ad2f:	jecxz  0x40acb9
  40ad31:	and    al,0x4d
  40ad33:	cmp    BYTE PTR [edi+0x1e],bh
  40ad36:	sbb    ecx,edi
  40ad38:	rcr    ch,1
  40ad3a:	xor    al,ch
  40ad3c:	cmp    al,0xd5
  40ad3e:	inc    ebp
  40ad3f:	push   ebx
  40ad40:	xor    eax,esi
  40ad42:	in     al,dx
  40ad43:	push   esp
  40ad44:	and    dh,BYTE PTR [edx-0x494b3e61]
  40ad4a:	sub    DWORD PTR ds:0x140677ee,edi
  40ad50:	push   es
  40ad51:	xor    DWORD PTR [ecx],0x5c34dc7a
  40ad57:	mov    esp,0x5a4b7304
  40ad5c:	jmp    0xfb02abd0
  40ad61:	cmp    dh,cl
  40ad63:	js     0x40ad68
  40ad65:	push   ebp
  40ad66:	enter  0x9d3b,0x2f
  40ad6a:	(bad)  
  40ad6b:	(bad)  
  40ad6c:	xlat   BYTE PTR ds:[ebx]
  40ad6d:	dec    ecx
  40ad6e:	aad    0x98
  40ad70:	pop    edi
  40ad71:	jae    0x40ad89
  40ad73:	sub    al,0x6c
  40ad75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad76:	(bad)  
  40ad77:	imul   BYTE PTR [edx]
  40ad79:	je     0x40ade0
  40ad7b:	iret   
  40ad7c:	cmp    BYTE PTR [esi+0x3e],al
  40ad7f:	mov    al,0x5c
  40ad81:	and    BYTE PTR [eax+ebx*2],ah
  40ad84:	inc    esi
  40ad85:	(bad)  
  40ad86:	lea    edi,[edi+0x539ac9ca]
  40ad8c:	nop
  40ad8d:	iret   
  40ad8e:	lahf   
  40ad8f:	dec    esp
  40ad90:	dec    edx
  40ad91:	call   FWORD PTR [edx+0x332d5b]
  40ad97:	imul   esp,ebx,0xff42910b
  40ad9d:	cmc    
  40ad9e:	(bad)  
  40ad9f:	in     al,dx
  40ada0:	inc    ecx
  40ada1:	pop    ebp
  40ada2:	lahf   
  40ada3:	dec    esp
  40ada4:	push   edx
  40ada5:	test   al,0x53
  40ada7:	lods   eax,DWORD PTR ds:[esi]
  40ada8:	add    dh,BYTE PTR [esi-0x4a24f99a]
  40adae:	pop    ebp
  40adaf:	nop
  40adb0:	pop    ebp
  40adb1:	cs inc ecx
  40adb3:	adc    ch,BYTE PTR [eax+0x33]
  40adb6:	xchg   esi,eax
  40adb7:	xchg   DWORD PTR [esi+0x1e],ebp
  40adba:	cld    
  40adbb:	cli    
  40adbc:	or     DWORD PTR [edi+0x50f3393a],0x1f
  40adc3:	ds cld 
  40adc5:	sahf   
  40adc6:	mov    ebp,0xfac04f5f
  40adcb:	repnz xor eax,DWORD PTR fs:[eax+edx*2]
  40add0:	gs pop edi
  40add2:	mov    edi,0xb7543d65
  40add7:	addr16 push esp
  40add9:	nop
  40adda:	outs   dx,BYTE PTR ds:[esi]
  40addb:	aam    0x81
  40addd:	mov    dh,0xda
  40addf:	loope  0x40ae3b
  40ade1:	jae    0x40ae4f
  40ade3:	data16 and al,0x3a
  40ade6:	aas    
  40ade7:	xor    dl,al
  40ade9:	jmp    0xe882:0x8bbcc301
  40adf0:	push   ss
  40adf1:	xchg   ecx,eax
  40adf2:	ss push edx
  40adf4:	iret   
  40adf5:	ret    
  40adf6:	push   esp
  40adf7:	loop   0x40ae27
  40adf9:	outs   dx,BYTE PTR ds:[esi]
  40adfa:	mov    DWORD PTR [edx],ecx
  40adfc:	adc    BYTE PTR [ebp-0x3166c211],dl
  40ae02:	sub    al,0x2c
  40ae04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae05:	dec    eax
  40ae06:	sti    
  40ae07:	sub    BYTE PTR fs:[ecx+ebp*2-0x18eb877f],bl
  40ae0f:	mov    DWORD PTR [ebx-0x14cc1df4],ecx
  40ae15:	or     cl,ch
  40ae17:	mov    ecx,DWORD PTR [eax+eax*8-0x75]
  40ae1b:	addr16 addr16 cli 
  40ae1e:	ins    DWORD PTR es:[edi],dx
  40ae1f:	les    eax,FWORD PTR [edx]
  40ae21:	xchg   ebx,eax
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x36268d5d
  40ae94:	inc    eax
  40ae95:	jnp    0x40aefe
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	xor    cl,BYTE PTR [esi]
  40aea1:	fcomp  DWORD PTR [edi-0x7f869941]
  40aea7:	ror    eax,0x5f
  40aeaa:	mov    eax,0x40fef6be
  40aeaf:	cwde   
  40aeb0:	into   
  40aeb1:	call   FWORD PTR [ebx]
  40aeb3:	arpl   WORD PTR [ecx-0x9c7eb70],bp
  40aeb9:	dec    edi
  40aeba:	pop    ebp
  40aebb:	(bad)  [ebx-0x67ccbb1b]
  40aec1:	repnz or edx,DWORD PTR [esi+esi*8-0x29]
  40aec6:	lock xchg esp,eax
  40aec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec9:	(bad)  
  40aeca:	mov    ah,0x42
  40aecc:	outs   dx,BYTE PTR ds:[esi]
  40aecd:	ffreep st(5)
  40aecf:	dec    ecx
  40aed0:	push   ecx
  40aed1:	arpl   WORD PTR [ebx-0x46],sp
  40aed4:	jb     0x40af17
  40aed6:	and    eax,0xedb2b4b5
  40aedb:	retf   
  40aedc:	(bad)  
  40aedd:	mov    ds:0xd04fddd3,al
  40aee2:	aam    0xbc
  40aee4:	nop
  40aee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee6:	inc    ebp
  40aee7:	xchg   DWORD PTR [ecx-0x6540ee53],edi
  40aeed:	mov    ch,BYTE PTR [ecx+edx*8-0x3b988001]
  40aef4:	leave  
  40aef5:	repz mov al,BYTE PTR [ebp+0x54f99a2f]
  40aefc:	push   eax
  40aefd:	cmp    esi,esi
  40aeff:	jmp    0xfafb:0x17ce7352
  40af06:	xor    al,0xb7
  40af08:	sbb    al,al
  40af0a:	mov    cl,0x84
  40af0c:	pop    eax
  40af0d:	aad    0x9c
  40af0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af10:	dec    ebp
  40af11:	mov    DWORD PTR [edi-0x286f357d],ebp
  40af17:	clc    
  40af18:	aaa    
  40af19:	scas   al,BYTE PTR es:[edi]
  40af1a:	or     esp,0x34
  40af1d:	fisubr WORD PTR [ebp-0x6e0cd45]
  40af23:	cmc    
  40af24:	fnstenv [edi]
  40af26:	loope  0x40aeb8
  40af28:	arpl   WORD PTR ds:0x92cf9a4b,bp
  40af2e:	cmp    BYTE PTR [eax-0x4aba36ba],0x53
  40af35:	mov    bh,0xcc
  40af37:	dec    ecx
  40af38:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40af3a:	outs   dx,BYTE PTR ds:[esi]
  40af3b:	js     0x40af58
  40af3d:	or     DWORD PTR [ebx],0xffffffac
  40af40:	jmp    0x1696:0xc505d46
  40af47:	adc    ch,BYTE PTR [eax-0x24]
  40af4a:	lea    ebp,[ebx-0x8]
  40af4d:	sub    BYTE PTR [edx+0x27],ah
  40af50:	retf   
  40af51:	dec    edi
  40af52:	pop    edi
  40af53:	mov    edx,0xebc14367
  40af58:	and    ebx,DWORD PTR [esi-0x6f9e2213]
  40af5e:	xor    al,0xfb
  40af60:	jae    0x40af73
  40af62:	arpl   WORD PTR [ecx-0x32],dx
  40af65:	test   BYTE PTR ds:0x32729fbb,bh
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x6b]
  40b0b6:	pop    ebx
  40b0b7:	cmc    
  40b0b8:	aad    0xc9
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	ja     0x40b060
  40b0c3:	je     0x40b095
  40b0c5:	xchg   BYTE PTR [ebp+0x23],ah
  40b0c8:	out    0xae,eax
  40b0ca:	out    dx,al
  40b0cb:	xchg   ecx,eax
  40b0cc:	pop    ds
  40b0cd:	std    
  40b0ce:	push   edi
  40b0cf:	(bad)  [ecx-0xc]
  40b0d2:	aas    
  40b0d3:	inc    eax
  40b0d4:	mov    ah,0x8b
  40b0d6:	retf   0x595b
  40b0d9:	adc    bl,BYTE PTR [esp+eiz*4+0x32f4094e]
  40b0e0:	add    eax,0x8e327624
  40b0e5:	pop    edx
  40b0e6:	push   ebx
  40b0e7:	lock add BYTE PTR ds:0xa932c910,0x36
  40b0ef:	jge    0x40b09a
  40b0f1:	cld    
  40b0f2:	sub    ah,BYTE PTR [ecx+0x1bea5ad8]
  40b0f8:	daa    
  40b0f9:	add    BYTE PTR [eax],bl
  40b0fb:	inc    edi
  40b0fc:	pop    esi
  40b0fd:	(bad)  
  40b0fe:	cmp    al,0xf8
  40b100:	arpl   WORD PTR [edx-0x2b],cx
  40b103:	add    ch,bl
  40b105:	lea    ebx,[esi]
  40b107:	xor    DWORD PTR [edi-0x54],0x50
  40b10b:	mov    ecx,fs
  40b10d:	sbb    al,0x8
  40b10f:	dec    edi
  40b110:	loope  0x40b0cd
  40b112:	stos   DWORD PTR es:[edi],eax
  40b113:	fistp  QWORD PTR [ecx]
  40b115:	mov    bh,0xbe
  40b117:	add    al,0x1c
  40b119:	adc    DWORD PTR [edx+0x3c],esp
  40b11c:	dec    eax
  40b11d:	fsubr  QWORD PTR [esi-0x6afd4ec9]
  40b123:	ret    0xc482
  40b126:	mov    WORD PTR [ecx-0x66025332],gs
  40b12c:	jle    0x40b0c6
  40b12e:	xor    bl,BYTE PTR [ebx]
  40b130:	call   0x3e99:0xacf8ba2
  40b137:	es scas al,BYTE PTR es:[edi]
  40b139:	idiv   BYTE PTR [edx]
  40b13b:	ins    BYTE PTR es:[edi],dx
  40b13c:	xor    edi,ebp
  40b13e:	out    0x7,eax
  40b140:	inc    ecx
  40b141:	mov    ah,0x29
  40b143:	mov    BYTE PTR [edi-0x37],al
  40b146:	repz fucomi st,st(5)
  40b149:	sahf   
  40b14a:	std    
  40b14b:	out    dx,eax
  40b14c:	fcomp  DWORD PTR [edx-0x11]
  40b14f:	scas   eax,DWORD PTR es:[edi]
  40b150:	fdivr  QWORD PTR [edx-0x71]
  40b153:	jle    0x40b122
  40b155:	mov    ebp,0x49062a6d
  40b15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b15b:	ins    DWORD PTR es:[edi],dx
  40b15c:	jb     0x40b10e
  40b15e:	popa   
  40b15f:	jns    0x40b0f7
  40b161:	cwde   
  40b162:	mov    DWORD PTR [ebx-0xd],edx
  40b165:	dec    esp
  40b166:	jl     0x40b1dc
  40b168:	adc    BYTE PTR [eax],dh
  40b16a:	push   esp
  40b16b:	mov    esi,0x4ce975d2
  40b170:	mov    ah,0xe
  40b172:	add    al,0x3b
  40b174:	inc    edx
  40b175:	loop   0x40b106
  40b177:	fdiv   st(0),st
  40b179:	sub    dl,bh
  40b17b:	(bad)
  40b17e:	adc    al,0xc4
  40b180:	jbe    0x40b167
  40b182:	ret    
  40b183:	jbe    0x40b163
  40b185:	pop    ebp
  40b186:	push   ebx
  40b187:	jmp    0xb60f:0xf8758919
  40b18e:	or     eax,0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x58
  40b1ab:	inc    eax
  40b1ac:	cmp    DWORD PTR [ecx+eax*1-0x498181c4],ebp
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b16d
  40b1b7:	mov    bl,cl
  40b1b9:	iret   
  40b1ba:	sbb    esp,DWORD PTR [ecx-0x6bbbcaa9]
  40b1c0:	mov    DWORD PTR [eax+0x1df503fc],esi
  40b1c6:	shr    edi,0xef
  40b1c9:	jmp    0xb309e98b
  40b1ce:	or     eax,0x1e8c2845
  40b1d3:	push   eax
  40b1d4:	jns    0x40b22d
  40b1d6:	bound  esi,QWORD PTR ds:0xf3601b61
  40b1dc:	test   DWORD PTR [esi+0x7e585ee3],eax
  40b1e2:	in     al,dx
  40b1e3:	sbb    DWORD PTR [edi],ebx
  40b1e5:	ror    BYTE PTR [ebx+0x449040ab],0x91
  40b1ec:	xor    cl,BYTE PTR [esi+eiz*2-0x26]
  40b1f0:	imul   esi,DWORD PTR [ebp-0xc],0x2eb1a534
  40b1f7:	jne    0x40b271
  40b1f9:	add    edx,edi
  40b1fb:	stos   BYTE PTR es:[edi],al
  40b1fc:	jb     0x40b246
  40b1fe:	jae    0x40b200
  40b200:	call   0x42f9:0x12a477c8
  40b207:	push   ecx
  40b208:	xor    BYTE PTR [ebx+eiz*4],0xa7
  40b20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b20d:	icebp  
  40b20e:	test   eax,0x139b0913
  40b213:	and    eax,0x56c92d39
  40b218:	push   eax
  40b219:	push   edx
  40b21a:	mov    bh,BYTE PTR [edx-0x25a59475]
  40b220:	lds    eax,FWORD PTR [ebx+ebp*2-0x3bf908be]
  40b227:	(bad)  
  40b228:	clc    
  40b229:	enter  0xd773,0x5c
  40b22d:	cmc    
  40b22e:	and    BYTE PTR [edi],al
  40b230:	int3   
  40b231:	mov    eax,ds:0xbdc081a6
  40b236:	int3   
  40b237:	and    esi,DWORD PTR [ecx-0x7f2538cd]
  40b23d:	imul   edx,DWORD PTR [ebp+0xd],0x30
  40b241:	adc    eax,0x682a792d
  40b246:	loopne 0x40b2b1
  40b248:	mov    ds:0xb5c83154,al
  40b24d:	addr16 repnz mov al,ds:0xeac8
  40b252:	out    0x79,al
  40b254:	jno    0x40b288
  40b256:	lahf   
  40b257:	sbb    BYTE PTR [ebx+edx*2+0x6c255043],dl
  40b25e:	cmp    al,0x3d
  40b260:	xlat   BYTE PTR ds:[ebx]
  40b261:	rcl    DWORD PTR [edi+0x7d],cl
  40b264:	and    eax,DWORD PTR [edi]
  40b266:	or     eax,0x801cf90e
  40b26b:	mov    al,ds:0xa0e8b211
  40b270:	daa    
  40b271:	adc    edx,DWORD PTR [eax]
  40b273:	xor    DWORD PTR [ebx+ebp*1+0x6a],0x27
  40b278:	mov    ebp,0x771e0ed0
  40b27d:	aaa    
  40b27e:	mov    ecx,DWORD PTR [ebp-0x18]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x5fe65a33],edx
  40b2e2:	inc    eax
  40b2e3:	inc    eax
  40b2e4:	jno    0x40b33f
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b32c
  40b2ee:	call   0x7e40:0x8f48795c
  40b2f5:	in     al,dx
  40b2f6:	addr16 aam 0x7e
  40b2f9:	repnz push DWORD PTR [esi-0x6c]
  40b2fd:	fstp   st(2)
  40b2ff:	push   0x6e815a31
  40b304:	or     dl,0x99
  40b307:	into   
  40b308:	es jb  0x40b327
  40b30b:	and    al,BYTE PTR cs:[eax-0x4218c05f]
  40b312:	mov    ds:0x664265dc,al
  40b317:	and    DWORD PTR [esi],esi
  40b319:	dec    ebx
  40b31a:	jmp    0x40b308
  40b31c:	aad    0xd3
  40b31e:	scas   al,BYTE PTR es:[edi]
  40b31f:	add    al,0x85
  40b321:	push   edx
  40b322:	or     eax,0xc860947c
  40b327:	fimul  WORD PTR [edx-0x2854236]
  40b32d:	out    0xad,eax
  40b32f:	das    
  40b330:	shl    ecx,0x39
  40b333:	scas   al,BYTE PTR es:[edi]
  40b334:	mov    ds:0x7fd5077,eax
  40b339:	jb     0x40b38c
  40b33b:	inc    esp
  40b33c:	cmp    edi,DWORD PTR [ecx+0x6f67a114]
  40b342:	cmp    DWORD PTR [eax],esp
  40b344:	mov    gs,ebp
  40b346:	jge    0x40b33c
  40b348:	jg     0x40b353
  40b34a:	jge    0x40b30b
  40b34c:	sbb    al,0xd0
  40b34e:	ret    0x627c
  40b351:	in     eax,0x41
  40b353:	cmovbe edx,DWORD PTR [edx]
  40b356:	sbb    BYTE PTR [esi-0x34],ah
  40b359:	retf   0xd992
  40b35c:	jmp    0x40b345
  40b35e:	pop    esi
  40b35f:	aas    
  40b360:	in     al,dx
  40b361:	xchg   ecx,eax
  40b362:	and    BYTE PTR [esi-0x7b712fae],ah
  40b368:	add    al,0xbb
  40b36a:	jmp    0x40b2f1
  40b36c:	xchg   DWORD PTR [edi-0x71],esp
  40b36f:	into   
  40b370:	dec    ecx
  40b371:	sti    
  40b372:	popf   
  40b373:	xchg   esi,eax
  40b374:	mov    ebx,0xaad576ad
  40b379:	push   esp
  40b37a:	stos   BYTE PTR es:[edi],al
  40b37b:	mov    WORD PTR [ebx-0x25],es
  40b37e:	sbb    ebp,ecx
  40b380:	sbb    ecx,DWORD PTR [ebx-0x71]
  40b383:	mov    ebp,DWORD PTR [ecx-0x6dacfb14]
  40b389:	mov    ds:0xc9bfa84e,eax
  40b38e:	fninit 
  40b390:	imul   ecx,DWORD PTR cs:[ecx+0x6b],0xfffffffa
  40b395:	fidiv  DWORD PTR [ebx]
  40b397:	sbb    bh,BYTE PTR [edx-0x709ce460]
  40b39d:	scas   eax,DWORD PTR es:[edi]
  40b39e:	mov    al,ds:0xea7f2fa8
  40b3a4:	add    al,0x46
  40b3a6:	cwde   
  40b3a7:	sbb    BYTE PTR [ecx],ah
  40b3a9:	jne    0x40b396
  40b3ab:	cmp    edi,DWORD PTR [ebx]
  40b3ad:	or     BYTE PTR [edx+0x30],bl
  40b3b0:	pop    edi
  40b3b1:	je     0x40b360
  40b3b3:	sub    edx,ebx
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	or     eax,0x91172c5d
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	call   0x2f228fd1
  40b54a:	sbb    al,0x39
  40b54c:	retf   
  40b54d:	jmp    0xd79:0x892fad99
  40b554:	jg     0x40b558
  40b556:	inc    BYTE PTR ds:[ecx]
  40b559:	pusha  
  40b55a:	push   0xaccf9ff7
  40b55f:	adc    DWORD PTR [eax-0x36],ebx
  40b562:	mov    cs,WORD PTR [eax+0x7a3e7b5c]
  40b568:	push   0xf1e601ca
  40b56d:	or     bh,BYTE PTR [ecx-0x43c87d60]
  40b573:	inc    edi
  40b574:	leave  
  40b575:	mov    al,ds:0xc823fedb
  40b57a:	neg    BYTE PTR [edi+edx*8]
  40b57d:	adc    al,0x7f
  40b57f:	popa   
  40b580:	aam    0x7
  40b582:	mov    ds:0x3e391cc5,eax
  40b587:	sahf   
  40b588:	arpl   ax,di
  40b58a:	in     al,dx
  40b58b:	mov    ebp,0x622e6480
  40b590:	sbb    eax,0x6b5cede9
  40b595:	(bad)  
  40b596:	loope  0x40b559
  40b598:	bound  edi,QWORD PTR [ebx+0x66]
  40b59b:	ret    
  40b59c:	es sub eax,0x28d566cd
  40b5a2:	inc    esi
  40b5a3:	clc    
  40b5a4:	jle    0x40b5d5
  40b5a6:	dec    ecx
  40b5a7:	pop    es
  40b5a8:	out    0x39,eax
  40b5aa:	inc    edx
  40b5ab:	ins    BYTE PTR es:[edi],dx
  40b5ac:	js     0x40b53a
  40b5ae:	jmp    0x717a5296
  40b5b3:	sub    BYTE PTR [edx],ch
  40b5b5:	mov    cl,0xc1
  40b5b7:	inc    ebp
  40b5b8:	add    ah,cl
  40b5ba:	shr    BYTE PTR [edi],0xe1
  40b5bd:	retf   0x77b5
  40b5c0:	inc    ebx
  40b5c1:	xchg   ebp,eax
  40b5c2:	cmp    bl,bh
  40b5c4:	jno    0x40b631
  40b5c6:	(bad)
  40b5ca:	sbb    DWORD PTR [edi-0x3f],ecx
  40b5cd:	add    BYTE PTR [ecx-0x7af2bfa8],cl
  40b5d3:	pusha  
  40b5d4:	pushf  
  40b5d5:	mov    cl,0xd5
  40b5d7:	xchg   ecx,eax
  40b5d8:	and    eax,0x6fd95993
  40b5dd:	dec    eax
  40b5de:	jg     0x40b5a7
  40b5e0:	mov    ah,0x1b
  40b5e2:	dec    eax
  40b5e3:	imul   esp,DWORD PTR [ebx+eiz*2+0x5cd7d2eb],0xffffff9d
  40b5eb:	in     al,0x4
  40b5ed:	aad    0xaf
  40b5ef:	test   al,0xc1
  40b5f1:	xor    bh,BYTE PTR [ecx-0x45]
  40b5f4:	stos   DWORD PTR es:[edi],eax
  40b5f5:	jl     0x40b5fe
  40b5f7:	int3   
  40b5f8:	or     DWORD PTR [esp+eax*4-0x50],ecx
  40b5fc:	and    eax,0x7626b17
  40b601:	fist   DWORD PTR [edx]
  40b603:	sbb    eax,0xf9cac356
  40b608:	adc    dl,BYTE PTR [edi+0xf272f6c]
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xae,al
  40b632:	out    dx,al
  40b633:	jne    0x40b63c
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b6a8
  40b63e:	idiv   BYTE PTR [ebp-0x61]
  40b641:	dec    edi
  40b642:	(bad)  
  40b644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b645:	nop
  40b646:	add    ch,0x9e
  40b649:	dec    edx
  40b64a:	(bad)  
  40b64c:	add    ebp,DWORD PTR [ebx+0x293c242d]
  40b652:	and    BYTE PTR [ecx-0x67ee6cbf],bl
  40b658:	inc    DWORD PTR ds:0xd4b49c34
  40b65e:	scas   eax,DWORD PTR es:[edi]
  40b65f:	setl   cl
  40b662:	dec    edi
  40b663:	scas   eax,DWORD PTR es:[edi]
  40b664:	ds inc esp
  40b666:	or     DWORD PTR [ecx],0x41
  40b669:	outs   dx,BYTE PTR ds:[esi]
  40b66a:	jne    0x40b65d
  40b66c:	rcr    DWORD PTR [esi],1
  40b66e:	int3   
  40b66f:	jle    0x40b6ca
  40b671:	adc    eax,0x4e379719
  40b676:	dec    ecx
  40b677:	add    eax,0x6460aadd
  40b67c:	jp     0x40b68c
  40b67e:	xor    BYTE PTR [eax],ch
  40b680:	jne    0x40b614
  40b682:	test   BYTE PTR [edx-0x1e],bl
  40b685:	xchg   ebp,eax
  40b686:	dec    ecx
  40b687:	jne    0x40b677
  40b689:	sbb    BYTE PTR [ecx+0x4fa5dbbe],0x15
  40b690:	jb     0x40b6cf
  40b692:	inc    edi
  40b693:	sub    BYTE PTR [edi-0x13],cl
  40b696:	adc    DWORD PTR [esi+0x5e],ebp
  40b699:	xor    DWORD PTR [edx+0x6d7715bd],0x3e
  40b6a0:	jno    0x40b6e1
  40b6a2:	and    al,0xc4
  40b6a4:	xchg   DWORD PTR [ebp-0x22],esp
  40b6a7:	adc    eax,0xd20f83de
  40b6ac:	test   BYTE PTR [ecx*2-0x12ef3b07],al
  40b6b3:	int    0xff
  40b6b5:	and    eax,ecx
  40b6b7:	fstp   TBYTE PTR [ecx-0x2a]
  40b6ba:	clc    
  40b6bb:	popf   
  40b6bc:	jle    0x40b720
  40b6be:	cmp    eax,0x4a62453f
  40b6c4:	mov    gs,WORD PTR [edi]
  40b6c6:	mov    ecx,0x1e753f4a
  40b6cb:	sbb    eax,edx
  40b6cd:	enter  0xd4cf,0xdf
  40b6d1:	or     bh,BYTE PTR ds:[ebx+0x111cd4a]
  40b6d8:	dec    eax
  40b6d9:	mov    dh,0x5e
  40b6db:	jmp    FWORD PTR [esi]
  40b6dd:	retf   0x16be
  40b6e0:	int3   
  40b6e1:	xor    al,0x5e
  40b6e3:	lock dec ecx
  40b6e5:	inc    esp
  40b6e6:	push   edi
  40b6e7:	cmc    
  40b6e8:	out    0xd6,eax
  40b6ea:	in     eax,0xe1
  40b6ec:	dec    ebp
  40b6ed:	and    eax,0x6856fed
  40b6f2:	and    esi,DWORD PTR [edx]
  40b6f4:	test   edi,0x416a579d
  40b6fa:	pop    ds
  40b6fb:	iret   
  40b6fc:	scas   eax,DWORD PTR es:[edi]
  40b6fd:	dec    eax
  40b6fe:	shl    BYTE PTR [edx+ebx*4-0xd],1
  40b702:	test   DWORD PTR [eax+0x875ff82],0xffefbde8
  40b70c:	dec    DWORD PTR [ecx]
  40b70e:	cmp    eax,0x41abde
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xe43223e6
  40b867:	mov    eax,0x7e3321c0
  40b86c:	jle    0x40b824
  40b86e:	jle    0x40b8ee
  40b870:	jle    0x40b829
  40b872:	or     esp,DWORD PTR [ecx]
  40b874:	sub    al,0x9
  40b876:	push   esi
  40b877:	out    0xba,al
  40b879:	popa   
  40b87a:	push   ecx
  40b87b:	lods   eax,DWORD PTR ds:[esi]
  40b87c:	and    esi,DWORD PTR [esi]
  40b87e:	xchg   BYTE PTR [ecx],dh
  40b880:	push   0x48
  40b882:	adc    ebp,eax
  40b884:	scas   eax,DWORD PTR es:[edi]
  40b885:	test   bl,0xfe
  40b888:	inc    edx
  40b889:	fs ins WORD PTR es:[edi],dx
  40b88c:	mov    BYTE PTR [edx],cl
  40b88e:	idiv   ebp
  40b890:	push   esp
  40b891:	adc    eax,0xf099d98e
  40b896:	ret    0xe0e1
  40b899:	call   0x37684ac0
  40b89e:	push   edx
  40b89f:	xor    eax,DWORD PTR ds:0x1a40ec68
  40b8a5:	xchg   esi,eax
  40b8a6:	mov    ch,0x63
  40b8a8:	(bad)  [ebx]
  40b8aa:	sahf   
  40b8ab:	aad    0x9a
  40b8ad:	data16 cmp bl,BYTE PTR [edi]
  40b8b0:	test   al,0x16
  40b8b2:	inc    ebp
  40b8b3:	fwait
  40b8b4:	push   es
  40b8b5:	lea    di,[edi-0x6c766338]
  40b8bc:	adc    ah,BYTE PTR [edx]
  40b8be:	(bad)  
  40b8bf:	jg     0x40b8a9
  40b8c1:	mov    edx,0x49f5fb8e
  40b8c6:	inc    edx
  40b8c7:	fidivr WORD PTR [edi]
  40b8c9:	xchg   DWORD PTR es:[esi],ebx
  40b8cc:	bound  eax,QWORD PTR [ebx+0x72]
  40b8cf:	jbe    0x40b86c
  40b8d1:	stos   DWORD PTR es:[edi],eax
  40b8d2:	nop
  40b8d3:	popf   
  40b8d4:	cld    
  40b8d5:	and    bl,BYTE PTR [ecx+0x44]
  40b8d8:	pop    esp
  40b8d9:	dec    ebx
  40b8da:	inc    edx
  40b8db:	scas   al,BYTE PTR es:[edi]
  40b8dc:	repz mov ebp,0x52ac1982
  40b8e2:	sbb    DWORD PTR [ebp+0xcfa98c0],esp
  40b8e8:	sub    BYTE PTR [ecx],ch
  40b8ea:	adc    edi,DWORD PTR [esi-0x61600565]
  40b8f0:	push   edx
  40b8f1:	dec    ebx
  40b8f2:	or     BYTE PTR [ebp-0x2bc5ca32],bl
  40b8f8:	in     eax,dx
  40b8f9:	lods   eax,DWORD PTR ds:[esi]
  40b8fa:	jp     0x40b941
  40b8fc:	fscale 
  40b8fe:	sbb    ah,bh
  40b900:	clc    
  40b901:	push   0x8352f293
  40b906:	mov    bl,0xab
  40b908:	sub    eax,0x57a93526
  40b90d:	retf   
  40b90e:	aam    0x5
  40b910:	scas   eax,DWORD PTR es:[edi]
  40b911:	ret    0xc77c
  40b914:	ja     0x40b8cb
  40b916:	pop    ss
  40b917:	push   ebx
  40b918:	adc    dl,ch
  40b91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b91b:	inc    ebx
  40b91c:	loopne 0x40b8ae
  40b91e:	call   0x1e9e7f34
  40b923:	jno    0x40b942
  40b925:	jnp    0x40b8fe
  40b927:	sti    
  40b928:	das    
  40b929:	ret    
  40b92a:	mov    eax,ds:0x7e81af11
  40b92f:	inc    edi
  40b930:	and    edi,DWORD PTR [ebx]
  40b932:	xchg   esp,eax
  40b933:	arpl   WORD PTR [esi],ax
  40b935:	sbb    BYTE PTR [esi+0x4d896dab],dh
  40b93b:	aam    0x8b
  40b93d:	inc    ebp
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	push   cs
  40b965:	loopne 0x40b9a0
  40b967:	es jns 0x40b99d
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	jb     0x40b9f0
  40b972:	xor    bh,al
  40b974:	and    BYTE PTR [ebx-0x72],cl
  40b977:	popa   
  40b978:	sub    al,0xde
  40b97a:	cmp    cl,cl
  40b97c:	cmp    BYTE PTR [ebx],dl
  40b97e:	lock ret 0x189a
  40b982:	push   eax
  40b983:	jecxz  0x40b949
  40b985:	mov    al,0x80
  40b987:	mov    BYTE PTR [esi+0x2480c4cd],0xc6
  40b98e:	mov    edx,DWORD PTR [ebx]
  40b990:	push   ss
  40b991:	pop    esi
  40b992:	loop   0x40b9a9
  40b994:	data16 (bad) 
  40b996:	js     0x40b945
  40b998:	add    bl,BYTE PTR [ecx-0x54]
  40b99b:	das    
  40b99c:	xlat   BYTE PTR ds:[ebx]
  40b99d:	sub    esp,DWORD PTR [ebx]
  40b99f:	push   edx
  40b9a0:	ret    
  40b9a1:	mov    dh,0x22
  40b9a3:	nop
  40b9a4:	lock jbe 0x40b97e
  40b9a7:	dec    edi
  40b9a8:	jno    0x40b9df
  40b9aa:	push   esi
  40b9ab:	jne    0x40b932
  40b9ad:	icebp  
  40b9ae:	mov    dl,al
  40b9b0:	inc    ecx
  40b9b1:	cld    
  40b9b2:	aad    0x7a
  40b9b4:	sti    
  40b9b5:	xchg   edi,eax
  40b9b6:	pop    es
  40b9b7:	xchg   edi,eax
  40b9b8:	add    ebx,DWORD PTR [edx-0x24]
  40b9bb:	mov    bh,0x8f
  40b9bd:	shl    DWORD PTR [edx+0x7f8113dd],cl
  40b9c3:	pop    ebp
  40b9c4:	repnz clc 
  40b9c6:	sar    BYTE PTR [esi+0x8bf124a],0xf0
  40b9cd:	into   
  40b9ce:	dec    ebx
  40b9cf:	jmp    0xc2f06d05
  40b9d4:	retf   
  40b9d5:	in     al,0x2c
  40b9d7:	ss inc ebx
  40b9d9:	xor    al,0x68
  40b9db:	adc    eax,0x734b48d8
  40b9e0:	jnp    0x40ba30
  40b9e2:	pop    DWORD PTR [ebx-0x6b7f0136]
  40b9e8:	add    al,BYTE PTR [eax]
  40b9ea:	push   ebp
  40b9eb:	stos   BYTE PTR es:[edi],al
  40b9ec:	xor    BYTE PTR [ebx+eiz*1],cl
  40b9ef:	jns    0x40b9b1
  40b9f1:	neg    DWORD PTR [edi+0x5745998a]
  40b9f7:	dec    edi
  40b9f8:	mov    DWORD PTR [edx],ebp
  40b9fa:	lea    edx,[eax+eax*4-0x20]
  40b9fe:	and    DWORD PTR [edx],esp
  40ba00:	and    BYTE PTR ds:0x7586be7e,dh
  40ba06:	cmp    DWORD PTR [edi-0x51176ace],ebx
  40ba0c:	das    
  40ba0d:	fisttp QWORD PTR [ecx-0x14cd02ed]
  40ba13:	(bad)  
  40ba14:	out    0xaa,eax
  40ba16:	or     eax,esp
  40ba18:	fsubr  QWORD PTR [edx+0x3c]
  40ba1b:	sbb    bh,BYTE PTR [esi-0xa4b5370]
  40ba21:	out    dx,al
  40ba22:	dec    ebx
  40ba23:	push   0x1d
  40ba25:	xchg   edx,eax
  40ba26:	mov    WORD PTR [edi+ecx*8+0x54883437],gs
  40ba2d:	test   DWORD PTR [eax],edx
  40ba2f:	leave  
  40ba30:	test   eax,0xd99ffb0d
  40ba35:	jae    0x40ba37
  40ba37:	sahf   
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock ds (bad) 
  40ba75:	mov    dl,0x5e
  40ba77:	mov    cl,0x30
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	int3   
  40ba80:	inc    esi
  40ba81:	lods   eax,DWORD PTR ds:[esi]
  40ba82:	push   esi
  40ba83:	jmp    0x800a:0x8bef0e6b
  40ba8a:	or     al,0x3
  40ba8c:	mov    ds:0x241e55f1,eax
  40ba91:	mov    dl,0x5e
  40ba93:	mov    edi,0xa5d7779b
  40ba98:	jmp    0x41fd:0xfcd1afd2
  40ba9f:	stc    
  40baa0:	mov    ds:0xb2433bb9,al
  40baa5:	dec    ebx
  40baa6:	xchg   BYTE PTR es:[eax*2-0x2c7b2708],dh
  40baae:	cmp    DWORD PTR [ebx+eax*2],edx
  40bab1:	adc    al,0x6c
  40bab3:	retf   
  40bab4:	aas    
  40bab5:	jg     0x40ba59
  40bab7:	jne    0x40ba80
  40bab9:	xor    DWORD PTR [ebp+0x41],edx
  40babc:	mov    dh,0xe6
  40babe:	cmc    
  40babf:	push   WORD PTR [edi]
  40bac2:	adc    dh,al
  40bac4:	(bad)  
  40bac5:	std    
  40bac6:	mov    ebx,0x6a6ef5a5
  40bacb:	mov    eax,es
  40bacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bace:	sub    al,0x9a
  40bad0:	add    edi,esi
  40bad2:	sti    
  40bad3:	addr16 mov dl,0x75
  40bad6:	sbb    ebx,DWORD PTR [ecx+0x75ae8ea9]
  40badc:	adc    eax,0x8ac46713
  40bae1:	and    ebx,DWORD PTR [edi]
  40bae3:	xor    al,0x78
  40bae5:	inc    edx
  40bae6:	xor    eax,0xc4697539
  40baeb:	inc    ebp
  40baec:	fdivr  QWORD PTR [esi-0x5fb42805]
  40baf2:	popf   
  40baf3:	mov    esp,0x5323551d
  40baf8:	mov    eax,ds:0x9cc85ffc
  40bafd:	mov    edx,0x29a7d8c9
  40bb02:	xor    cl,BYTE PTR [ecx]
  40bb04:	and    eax,0x7f4328e3
  40bb09:	into   
  40bb0a:	jns    0x40bb40
  40bb0c:	fistp  DWORD PTR [esi+0x7cab71f0]
  40bb12:	push   ebx
  40bb13:	mov    ds,WORD PTR [edx-0x6019e345]
  40bb19:	cmp    bl,BYTE PTR [ecx+edx*8]
  40bb1c:	cs jecxz 0x40bb31
  40bb1f:	mov    esp,DWORD PTR [ebp-0x2a]
  40bb22:	outs   dx,DWORD PTR ds:[esi]
  40bb23:	adc    esp,edi
  40bb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb26:	cdq    
  40bb27:	jbe    0x40bb64
  40bb29:	and    al,0x25
  40bb2b:	or     DWORD PTR [edx+ebp*2+0x43],0x6ca60fa7
  40bb33:	aam    0xba
  40bb35:	imul   eax,DWORD PTR [edi],0x58
  40bb38:	aaa    
  40bb39:	xor    ah,BYTE PTR [eax-0xd2a129a]
  40bb3f:	into   
  40bb40:	loopne 0x40bb63
  40bb42:	fsubr  QWORD PTR [edi+0x47b84f07]
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	addr16 pop esi
  40bbc3:	push   0x7e3189ce
  40bbc8:	jle    0x40bb80
  40bbca:	jle    0x40bc4a
  40bbcc:	jle    0x40bb9b
  40bbce:	aam    0x77
  40bbd0:	(bad)  
  40bbd1:	ret    
  40bbd2:	mov    BYTE PTR [ecx],bl
  40bbd4:	sub    eax,0xb90a22d8
  40bbd9:	or     eax,0xf314a407
  40bbde:	sbb    BYTE PTR [ecx+0x6540d888],bh
  40bbe4:	inc    edi
  40bbe5:	mov    esi,DWORD PTR [ecx-0x44]
  40bbe8:	jne    0x40bbe9
  40bbea:	loop   0x40bba9
  40bbec:	(bad)  
  40bbed:	mov    ah,0x98
  40bbef:	and    al,0xea
  40bbf1:	loopne 0x40bc36
  40bbf3:	lea    edx,[ecx+0x4f93868d]
  40bbf9:	(bad)  
  40bbfa:	jl     0x40bc76
  40bbfc:	push   0xffffff82
  40bbfe:	cwde   
  40bbff:	xchg   ebp,eax
  40bc00:	nop
  40bc01:	push   edi
  40bc02:	test   BYTE PTR [eax-0x592408c],0xba
  40bc09:	add    cl,bh
  40bc0b:	iret   
  40bc0c:	fsubp  st(0),st
  40bc0e:	xor    ebp,DWORD PTR [eax+0x28]
  40bc11:	add    eax,0x78b6be50
  40bc16:	je     0x40bb98
  40bc18:	xchg   esp,eax
  40bc19:	pop    ecx
  40bc1a:	icebp  
  40bc1b:	push   esp
  40bc1c:	mov    esp,0x13e52ba4
  40bc21:	std    
  40bc22:	adc    ecx,ebp
  40bc24:	es repnz xchg edx,eax
  40bc27:	inc    eax
  40bc28:	into   
  40bc29:	popf   
  40bc2a:	mov    edi,0x3fab5209
  40bc2f:	(bad)  
  40bc30:	push   ebp
  40bc31:	mov    ds:0x2faf17a9,al
  40bc36:	mov    al,BYTE PTR [eax]
  40bc38:	fbld   TBYTE PTR [edx-0x56fcc8e5]
  40bc3e:	adc    edi,ebp
  40bc40:	jno    0x40bc80
  40bc42:	fadd   QWORD PTR [ecx-0x10638ed7]
  40bc48:	mov    edx,0xa90b5365
  40bc4d:	sar    BYTE PTR [edx+edx*8],cl
  40bc50:	pop    edi
  40bc51:	aad    0x21
  40bc53:	loop   0x40bcc7
  40bc55:	scas   eax,DWORD PTR es:[edi]
  40bc56:	les    edi,FWORD PTR [esi]
  40bc58:	ins    BYTE PTR es:[edi],dx
  40bc59:	scas   eax,DWORD PTR es:[edi]
  40bc5a:	scas   eax,DWORD PTR es:[edi]
  40bc5b:	out    0xf3,eax
  40bc5d:	push   esi
  40bc5e:	jl     0x40bc77
  40bc60:	jecxz  0x40bc7f
  40bc62:	jbe    0x40bc65
  40bc64:	push   es
  40bc65:	or     eax,0x2bc2d366
  40bc6a:	frstor ds:0x921c004a
  40bc70:	mov    dh,al
  40bc72:	outs   dx,BYTE PTR ds:[esi]
  40bc73:	cmc    
  40bc74:	sub    al,0xf8
  40bc76:	pusha  
  40bc77:	ficomp DWORD PTR [edx-0x6c]
  40bc7a:	push   esp
  40bc7b:	pop    ecx
  40bc7c:	into   
  40bc7d:	ds sbb bh,bh
  40bc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc81:	pop    eax
  40bc82:	mov    ch,0x6
  40bc84:	pop    esi
  40bc85:	daa    
  40bc86:	jnp    0x40bc9b
  40bc88:	mov    ecx,0x3a8dc33
  40bc8d:	inc    DWORD PTR [edi-0x48]
  40bc90:	and    BYTE PTR [eax+0x5bd59bd0],cl
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	mov    al,0x4a
  40bcc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc4:	scas   eax,DWORD PTR es:[edi]
  40bcc5:	shl    DWORD PTR [esi],0x7e
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bc85
  40bcce:	adc    ebx,DWORD PTR [eax+ecx*8]
  40bcd1:	jo     0x40bcde
  40bcd3:	out    dx,al
  40bcd4:	ret    0xf64
  40bcd7:	inc    eax
  40bcd8:	into   
  40bcd9:	mov    ah,0x78
  40bcdb:	jne    0x40bc6f
  40bcdd:	das    
  40bcde:	mov    ebx,0xd160ac6b
  40bce3:	dec    ebp
  40bce4:	(bad)  
  40bce5:	lods   al,BYTE PTR ds:[esi]
  40bce6:	shl    DWORD PTR [edx-0x734c37f],1
  40bcec:	push   ecx
  40bced:	mov    al,0x35
  40bcef:	cld    
  40bcf0:	inc    esp
  40bcf1:	xchg   dl,ah
  40bcf3:	sub    ebp,eax
  40bcf5:	dec    ebx
  40bcf6:	dec    esp
  40bcf7:	ret    
  40bcf8:	xchg   esi,eax
  40bcfa:	call   0x64a9fd57
  40bcff:	xor    DWORD PTR [esi-0x38],ebp
  40bd02:	int    0x21
  40bd04:	jno    0xc07883b2
  40bd0a:	mov    ds:0xf4d851f8,al
  40bd0f:	or     edx,DWORD PTR [esi+ecx*2-0xe57bff1]
  40bd16:	in     eax,dx
  40bd17:	dec    eax
  40bd18:	inc    ecx
  40bd19:	sub    bl,dh
  40bd1b:	xlat   BYTE PTR ds:[ebx]
  40bd1c:	scas   al,BYTE PTR es:[di]
  40bd1e:	jl     0x40bd34
  40bd20:	inc    ecx
  40bd21:	rcl    BYTE PTR [ebp+0x7f6fbdd4],0xb6
  40bd28:	jge    0x40bd44
  40bd2a:	or     ebp,ecx
  40bd2c:	sub    BYTE PTR [ebp+0x26fc7624],ch
  40bd32:	sub    edi,ebp
  40bd34:	jmp    0x40bd7d
  40bd36:	out    dx,al
  40bd37:	repz add eax,0x3a2fad9c
  40bd3d:	pop    esp
  40bd3e:	mov    eax,0x9b68d69a
  40bd43:	pop    ebp
  40bd44:	neg    DWORD PTR [ecx+0x20901228]
  40bd4a:	in     eax,dx
  40bd4b:	xor    ebp,DWORD PTR [edx]
  40bd4d:	fstp   TBYTE PTR [eax-0x13]
  40bd50:	fsubr  st(3),st
  40bd52:	inc    ecx
  40bd53:	xchg   esi,eax
  40bd54:	out    dx,eax
  40bd55:	sub    BYTE PTR [edx-0x3ed15835],bh
  40bd5b:	sub    al,0xa1
  40bd5d:	(bad)  
  40bd5e:	mov    bl,0x6a
  40bd60:	jo     0x40bdbc
  40bd62:	pop    ds
  40bd63:	inc    ebx
  40bd64:	fidivr DWORD PTR [ecx+0x33]
  40bd67:	jae    0x40bd29
  40bd69:	(bad)  
  40bd6b:	or     DWORD PTR [eax+0x32],0xffffffc8
  40bd6f:	jmp    0x40bcf4
  40bd71:	pop    es
  40bd72:	jae    0x40bdbb
  40bd74:	loop   0x40bd19
  40bd76:	retf   
  40bd77:	pop    esi
  40bd78:	test   ch,ch
  40bd7a:	call   0x2ef8cca2
  40bd7f:	and    al,0xee
  40bd81:	pusha  
  40bd82:	lods   eax,DWORD PTR ds:[esi]
  40bd83:	and    dl,BYTE PTR [edx+0x409688fc]
  40bd89:	xchg   BYTE PTR [ebx],bl
  40bd8b:	xchg   DWORD PTR [eax+0x65],ebp
  40bd8e:	lea    ebp,[esi-0x15e01e4d]
  40bd94:	push   DWORD PTR [ebx]
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	int    0x74
  40bdbe:	adc    DWORD PTR [eax+0x7e7e3719],esp
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	mov    esp,0xc122a8a7
  40bdcd:	test   ebx,ebx
  40bdcf:	push   ds
  40bdd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd1:	cmp    eax,0x7297c1e9
  40bdd6:	out    dx,al
  40bdd7:	stos   DWORD PTR es:[edi],eax
  40bdd8:	jl     0x40be0e
  40bdda:	cmp    ch,bh
  40bddc:	cmc    
  40bddd:	push   ss
  40bdde:	(bad)  
  40bde0:	mov    ah,bl
  40bde2:	push   esp
  40bde3:	dec    edx
  40bde4:	ja     0x40be11
  40bde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde7:	out    dx,al
  40bde8:	push   0xffffffe6
  40bdea:	pop    ds
  40bdeb:	mov    fs:0x484f08e8,al
  40bdf1:	jo     0x40bd73
  40bdf3:	mov    edi,0x613024b
  40bdf8:	rol    DWORD PTR [ebx-0x5ef63781],1
  40bdfe:	les    esi,FWORD PTR ds:0xcdbb845f
  40be04:	jns    0x40bdc4
  40be06:	or     al,0xcb
  40be08:	mov    bl,0x58
  40be0a:	ja     0x40be6e
  40be0c:	mov    DWORD PTR [edx],0xc265af5
  40be12:	in     eax,0x3a
  40be14:	xor    dl,ch
  40be16:	dec    ebx
  40be17:	pop    ecx
  40be18:	int    0x72
  40be1a:	lods   eax,DWORD PTR ds:[esi]
  40be1b:	lea    edi,[ecx]
  40be1d:	in     al,0x87
  40be1f:	mov    esi,0x9497d587
  40be24:	dec    esi
  40be25:	icebp  
  40be26:	cmc    
  40be27:	imul   edx,DWORD PTR [esi],0xfa3daaee
  40be2d:	test   ch,bh
  40be2f:	out    dx,eax
  40be30:	pop    ss
  40be31:	mov    edx,DWORD PTR [ebp-0x34]
  40be34:	int    0x16
  40be36:	in     eax,dx
  40be37:	xchg   esi,eax
  40be38:	mov    ch,0x13
  40be3a:	sbb    al,0xda
  40be3c:	xlat   BYTE PTR ds:[ebx]
  40be3d:	jmp    0x40bea3
  40be3f:	fsubr  QWORD PTR [esi+0x5a]
  40be42:	cmp    bh,BYTE PTR [eax-0x6b]
  40be45:	or     al,0x15
  40be47:	mov    al,ds:0x69832f7
  40be4c:	mov    bl,0x5e
  40be4e:	dec    esi
  40be4f:	pop    ds
  40be50:	cmp    edi,DWORD PTR [ebp+0xb3c3357]
  40be56:	cwde   
  40be57:	and    al,0x59
  40be59:	lods   al,BYTE PTR ds:[esi]
  40be5a:	fdivr  QWORD PTR [esi]
  40be5c:	xchg   ah,dh
  40be5e:	loopne 0x40be4e
  40be60:	adc    al,0xa
  40be62:	sahf   
  40be63:	fisub  DWORD PTR [ecx]
  40be65:	xchg   edx,eax
  40be66:	or     dl,dh
  40be68:	add    al,0x5f
  40be6a:	xor    eax,0x58f8c802
  40be6f:	jle    0x40be1f
  40be71:	adc    al,0x64
  40be73:	xor    BYTE PTR [esi+0x6ae5097d],bh
  40be79:	sbb    al,0x8e
  40be7b:	mov    al,0xf
  40be7d:	ds dec esi
  40be7f:	jnp    0x40be96
  40be81:	lahf   
  40be82:	push   edi
  40be83:	ret    
  40be84:	popf   
  40be85:	enter  0xacce,0x38
  40be89:	fdiv   QWORD PTR [ecx]
  40be8b:	(bad)  
  40be8c:	cmp    eax,0xf622efa
  40be91:	scas   eax,DWORD PTR es:[edi]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xafb87640
  40bea6:	sub    edi,DWORD PTR [edx+0x51]
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	shl    BYTE PTR ds:0xdd02a31f,cl
  40beb7:	mov    es,WORD PTR [esi+0x7c77f1bf]
  40bebd:	aam    0x22
  40bebf:	and    DWORD PTR [edi-0x61],esp
  40bec2:	aam    0x6a
  40bec4:	fcomp  DWORD PTR [esi+0x27edb848]
  40beca:	mov    ds,WORD PTR [edx-0x5]
  40becd:	sub    eax,0x49be2381
  40bed2:	lods   al,BYTE PTR ds:[esi]
  40bed3:	pop    ds
  40bed4:	outs   dx,BYTE PTR ds:[esi]
  40bed5:	adc    eax,0xd5e5e350
  40beda:	pop    ds
  40bedb:	xor    eax,0x69a1319e
  40bee0:	bound  esi,QWORD PTR [edi]
  40bee2:	jne    0x40bf26
  40bee4:	popa   
  40bee5:	adc    ch,ah
  40bee7:	sbb    ebx,edx
  40bee9:	iret   
  40beea:	xchg   esp,eax
  40beeb:	jne    0x40beb7
  40beed:	dec    esp
  40beee:	fidiv  DWORD PTR [ebx+0x576ac8a9]
  40bef4:	fisubr WORD PTR ds:0xe8e54e09
  40befa:	outs   dx,DWORD PTR ds:[esi]
  40befb:	sti    
  40befc:	jle    0x40bee5
  40befe:	adc    BYTE PTR [esi],0x4f
  40bf01:	retf   0x6180
  40bf04:	jo     0x40beb3
  40bf06:	xchg   edx,eax
  40bf07:	jmp    0xc7471d2e
  40bf0c:	sub    eax,0xa42a5b5
  40bf11:	sub    edi,0x4a
  40bf14:	add    al,0x73
  40bf16:	inc    esp
  40bf17:	std    
  40bf18:	push   0x4b11db5
  40bf1d:	in     eax,0x5c
  40bf1f:	cmp    eax,0x18bb9632
  40bf24:	xor    cl,BYTE PTR [edx-0x65]
  40bf27:	(bad)  
  40bf28:	ds or  al,0xe8
  40bf2b:	pop    ebx
  40bf2c:	mov    esp,0x662d4c32
  40bf31:	test   BYTE PTR [esi-0x57a3a0bb],cl
  40bf37:	das    
  40bf38:	(bad)  
  40bf39:	leave  
  40bf3a:	gs pop edx
  40bf3c:	in     al,dx
  40bf3d:	out    0xd5,eax
  40bf3f:	inc    esp
  40bf40:	enter  0xb4d9,0x24
  40bf44:	icebp  
  40bf45:	xchg   BYTE PTR [ebx-0x3e95c907],dh
  40bf4b:	mov    eax,0xbc954251
  40bf50:	call   0x80ee:0xc57fb43
  40bf57:	aam    0x82
  40bf59:	(bad)  
  40bf5a:	xor    DWORD PTR [edx+0x5b997b48],esp
  40bf60:	and    BYTE PTR [esi],0x25
  40bf63:	call   0x48223f06
  40bf68:	push   ds
  40bf69:	xchg   esi,eax
  40bf6a:	sub    al,0x59
  40bf6c:	ror    DWORD PTR [esi-0x73697f5a],0xae
  40bf73:	imul   edi,DWORD PTR [ecx],0x8ba4d770
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	pop    eax
  40bfae:	jge    0x40c02f
  40bfb0:	xor    DWORD PTR [ecx-0x498181cc],ebp
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bfc2
  40bfba:	(bad)  
  40bfbb:	xor    al,0x41
  40bfbd:	sub    al,0xd1
  40bfbf:	rcr    DWORD PTR [esi-0x2c1f5af6],cl
  40bfc5:	loop   0x40c029
  40bfc7:	ds jecxz 0x40c03c
  40bfca:	mov    ah,0x40
  40bfcc:	jnp    0x40c03f
  40bfce:	pushf  
  40bfcf:	shl    BYTE PTR [eax+edi*1],0x87
  40bfd3:	fs sbb eax,0x4320778f
  40bfd9:	jae    0x40bfa6
  40bfdb:	mov    ebp,0x93938338
  40bfe0:	mov    esp,0x69f676fc
  40bfe5:	aam    0xf7
  40bfe7:	inc    ebx
  40bfe8:	bound  esp,QWORD PTR [ecx+edi*2-0x41836234]
  40bfef:	out    0x31,eax
  40bff1:	mov    ds:0x9ee6d211,al
  40bff6:	psubsw mm5,QWORD PTR [ecx]
  40bff9:	xor    BYTE PTR [edx+0x25],dl
  40bffc:	push   DWORD PTR [eax+0x32]
  40bfff:	in     al,0xb8
  40c001:	add    DWORD PTR [ebp-0x273b3db4],esp
  40c007:	mov    al,ds:0x81ec88b1
  40c00c:	fcom   QWORD PTR [eax+0x78c420f6]
  40c012:	mov    ds,WORD PTR [ebx]
  40c014:	xchg   al,bh
  40c016:	enter  0xaacc,0x5e
  40c01a:	mov    esp,edx
  40c01c:	mov    WORD PTR [eax+0x3],?
  40c01f:	dec    ebp
  40c020:	mov    ds,WORD PTR [esi]
  40c022:	aad    0xc1
  40c024:	fiadd  WORD PTR ds:0x11240caa
  40c02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02b:	mov    esp,0xe9d25949
  40c030:	sbb    al,cl
  40c032:	scas   eax,DWORD PTR es:[edi]
  40c033:	and    al,0xb9
  40c035:	arpl   WORD PTR [ebx-0x15],si
  40c038:	aaa    
  40c039:	fimul  DWORD PTR [ebx]
  40c03b:	jge    0x40c086
  40c03d:	int3   
  40c03e:	pop    ebx
  40c03f:	mov    ds:0x4f768a84,eax
  40c044:	idiv   ah
  40c046:	mov    ch,BYTE PTR [ecx-0x37]
  40c049:	and    esp,DWORD PTR [esi+edx*1+0x7bd4e891]
  40c050:	xchg   esi,eax
  40c051:	outs   dx,DWORD PTR ds:[esi]
  40c052:	sbb    al,0x7f
  40c054:	jnp    0x40c0bc
  40c056:	push   ss
  40c057:	addr16 nop
  40c059:	popa   
  40c05a:	ret    0x5603
  40c05d:	jno    0x40c023
  40c05f:	idiv   DWORD PTR [ecx+0x4d]
  40c062:	jg     0x40c0d5
  40c064:	pop    es
  40c065:	ins    BYTE PTR es:[edi],dx
  40c066:	mov    eax,0x7780f01d
  40c06b:	jns    0x40c019
  40c06d:	mov    edi,DWORD PTR [edi+0x170d2c29]
  40c073:	fcomp  QWORD PTR [edi]
  40c075:	sahf   
  40c076:	int3   
  40c077:	pop    eax
  40c078:	dec    ecx
  40c079:	hlt    
  40c07a:	mov    esp,0x7d589d7a
  40c07f:	or     al,BYTE PTR [ebx]
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	loopne 0x40c104
  40c0e2:	pop    edx
  40c0e3:	adc    eax,0x7e7e35e1
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	and    ecx,DWORD PTR [eax]
  40c0ee:	daa    
  40c0ef:	or     cl,BYTE PTR [esi-0x5c]
  40c0f2:	ror    BYTE PTR [eax+ecx*8-0x89a8899],0x14
  40c0fa:	jg     0x40c08b
  40c0fc:	lahf   
  40c0fd:	jnp    0x40c0dc
  40c0ff:	ins    BYTE PTR es:[edi],dx
  40c100:	sub    dh,BYTE PTR [ecx-0x17]
  40c103:	stc    
  40c104:	sbb    BYTE PTR [esi+edi*2+0x2285be4d],cl
  40c10b:	xchg   edi,eax
  40c10c:	sbb    BYTE PTR es:[edi],cl
  40c10f:	dec    esi
  40c110:	fcmovne st,st(5)
  40c112:	js     0x40c0a5
  40c114:	pop    ebp
  40c115:	jge    0x40c0ee
  40c117:	mov    ecx,0x957d1e92
  40c11c:	pop    ss
  40c11d:	into   
  40c11e:	leave  
  40c11f:	jno    0x40c146
  40c121:	pop    ebp
  40c122:	inc    ebp
  40c123:	and    eax,0x4af86eca
  40c128:	or     eax,0xe37709a9
  40c12d:	push   es
  40c12e:	adc    eax,0xc5c43b0b
  40c133:	xor    ah,bh
  40c135:	inc    esi
  40c136:	icebp  
  40c137:	je     0x40c0e6
  40c139:	or     DWORD PTR [edi-0x6191b92d],ebx
  40c13f:	iret   
  40c140:	pop    esp
  40c141:	inc    ebx
  40c142:	ror    BYTE PTR [ebp-0x53],0xcf
  40c146:	jns    0x40c156
  40c148:	xor    al,0xf4
  40c14a:	adc    DWORD PTR [ecx+ebx*4],ebp
  40c14d:	test   DWORD PTR [ebp-0x54ab70d9],ecx
  40c153:	push   es
  40c154:	icebp  
  40c155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c156:	scas   eax,DWORD PTR es:[edi]
  40c157:	inc    ebp
  40c158:	mov    ds:0xe33bcad2,eax
  40c15d:	sub    al,0xdf
  40c15f:	popa   
  40c160:	cmp    DWORD PTR [edi-0x1],eax
  40c163:	in     al,0xb8
  40c165:	in     al,dx
  40c166:	loope  0x40c174
  40c168:	and    BYTE PTR [ebp+esi*4+0x57],bh
  40c16c:	adc    al,0xb5
  40c16e:	lock popaw 
  40c171:	xor    esi,ebx
  40c173:	popa   
  40c174:	in     al,dx
  40c175:	pusha  
  40c176:	imul   esi,DWORD PTR [edx+ebx*1],0xf3795f93
  40c17d:	cmp    al,0xda
  40c17f:	stc    
  40c180:	or     edx,ebx
  40c182:	dec    edx
  40c183:	fdivr  DWORD PTR [ebx+0x20]
  40c186:	dec    edi
  40c187:	es push 0x5c
  40c18a:	push   ecx
  40c18b:	ds mov bh,0xea
  40c18e:	cmp    al,0x26
  40c190:	ins    DWORD PTR es:[edi],dx
  40c191:	jmp    0x1efc:0xf2cc7cd1
  40c198:	fs ret 
  40c19a:	dec    esp
  40c19b:	int3   
  40c19c:	dec    DWORD PTR [eax-0x2a134add]
  40c1a2:	imul   ecx,DWORD PTR [esi+0x5b6ef2e2],0xf9b6957f
  40c1ac:	push   edx
  40c1ad:	sbb    cl,BYTE PTR [ebx-0x53]
  40c1b0:	dec    esp
  40c1b1:	adc    ecx,DWORD PTR [ebx+ebx*2-0x73]
  40c1b5:	mov    WORD PTR [edx],cs
  40c1b7:	lahf   
  40c1b8:	jb     0x40c1ec
  40c1ba:	add    BYTE PTR [ebx],bh
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x1538684b]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	(bad)
  40c1ef:	dec    ebx
  40c1f0:	jmp    0xa7eee3f3
  40c1f5:	or     dh,ah
  40c1f7:	inc    esp
  40c1f8:	fnstsw WORD PTR [esi-0x59]
  40c1fb:	mov    esi,0x71ab90d3
  40c200:	(bad)  
  40c202:	jne    0x40c19d
  40c204:	add    al,BYTE PTR [ebx]
  40c206:	mov    ds:0x57fc42b6,eax
  40c20b:	dec    edx
  40c20c:	xchg   ebx,eax
  40c20d:	iret   
  40c20e:	pop    ebx
  40c20f:	cmp    DWORD PTR [ebp+0x4b],0xd13580a
  40c216:	mov    ch,BYTE PTR [ebx]
  40c218:	cmp    esp,esp
  40c21a:	adc    bl,BYTE PTR [ebx]
  40c21c:	es out dx,eax
  40c21e:	loope  0x40c1c2
  40c220:	iret   
  40c221:	jmp    DWORD PTR [ebx-0x25]
  40c224:	cwde   
  40c225:	and    ecx,0x6d
  40c228:	popa   
  40c229:	add    BYTE PTR [edx-0x37],0x58
  40c22d:	out    0x2d,al
  40c22f:	outs   dx,BYTE PTR ds:[esi]
  40c230:	and    al,0x1
  40c232:	in     al,dx
  40c233:	dec    edi
  40c234:	daa    
  40c235:	or     dh,BYTE PTR [edi-0x34586f26]
  40c23b:	pop    eax
  40c23c:	rcr    edi,cl
  40c23e:	and    al,BYTE PTR [ebp+0x2f]
  40c241:	sub    al,0x6b
  40c243:	jmp    0xfe51:0x7c11fc0e
  40c24a:	sub    ebx,DWORD PTR [edx+0x4d]
  40c24d:	shr    BYTE PTR [ecx],1
  40c24f:	and    dl,BYTE PTR [edx-0x7cfa85e1]
  40c255:	repnz out 0x45,eax
  40c258:	xor    esp,DWORD PTR [esi]
  40c25a:	clc    
  40c25b:	adc    esp,DWORD PTR [edx-0x4d]
  40c25e:	jle    0x40c25c
  40c260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c261:	mov    ah,0xdf
  40c263:	push   ebx
  40c264:	fnsave [esi+0x56da6111]
  40c26a:	test   DWORD PTR [esi-0x70],edx
  40c26d:	inc    ecx
  40c26e:	stc    
  40c26f:	sbb    eax,0x16cff2e
  40c274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c275:	nop
  40c276:	sbb    BYTE PTR [ecx],ch
  40c278:	push   ebp
  40c279:	shr    DWORD PTR [ebx*2+0x50f3e45b],cl
  40c280:	retf   
  40c281:	loope  0x40c292
  40c283:	clc    
  40c284:	inc    eax
  40c285:	mov    bh,0x61
  40c287:	adc    al,0x7f
  40c289:	scas   eax,DWORD PTR es:[edi]
  40c28a:	cmp    ah,ch
  40c28c:	out    0xb,al
  40c28e:	cmp    eax,0xcbc00e31
  40c293:	pop    es
  40c294:	add    dh,BYTE PTR [edx]
  40c296:	lods   eax,DWORD PTR ds:[esi]
  40c297:	add    bl,BYTE PTR [edx]
  40c299:	clc    
  40c29a:	mov    ch,0x57
  40c29c:	jge    0x40c254
  40c29e:	sub    al,0x22
  40c2a0:	ret    
  40c2a1:	sub    esi,DWORD PTR [ecx-0x40]
  40c2a4:	jnp    0x40c277
  40c2a6:	idiv   BYTE PTR [edi+0x47d95bb2]
  40c2ac:	(bad)  
  40c2ad:	pusha  
  40c2ae:	pop    edi
  40c2af:	push   eax
  40c2b0:	sub    edx,DWORD PTR [eax]
  40c2b2:	mov    BYTE PTR [esi-0x75],bl
  40c2b5:	inc    ebp
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	daa    
  40c2da:	into   
  40c2db:	scas   al,BYTE PTR es:[edi]
  40c2dc:	inc    ebx
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	(bad)  
  40c2e6:	mov    al,0xf1
  40c2e8:	lahf   
  40c2e9:	mov    ebx,0x846953f
  40c2ee:	iret   
  40c2ef:	sub    esp,DWORD PTR [eax]
  40c2f1:	mov    bh,BYTE PTR [esi+eiz*1+0x1e]
  40c2f5:	sbb    bl,cl
  40c2f7:	into   
  40c2f8:	test   ah,bl
  40c2fa:	xor    bh,dl
  40c2fc:	cmp    eax,0xae2f6aec
  40c301:	outs   dx,BYTE PTR ds:[esi]
  40c302:	in     eax,dx
  40c303:	daa    
  40c304:	fxch   st(0)
  40c306:	fisub  WORD PTR [ecx+0x557a34ab]
  40c30c:	loope  0x40c307
  40c30e:	jb     0x40c379
  40c310:	jg     0x40c2c4
  40c312:	add    dh,BYTE PTR [edi+0x7842501d]
  40c318:	xor    al,0xd3
  40c31a:	pop    ss
  40c31b:	ror    edx,cl
  40c31d:	push   ebx
  40c31e:	xor    eax,0xdb86b531
  40c323:	aaa    
  40c324:	test   al,0x9e
  40c326:	data16 cld 
  40c328:	(bad)  
  40c329:	ins    DWORD PTR es:[edi],dx
  40c32a:	add    BYTE PTR [esp+edx*8+0x28f009af],dh
  40c331:	ins    BYTE PTR es:[edi],dx
  40c332:	adc    eax,0xa57675c9
  40c337:	xchg   DWORD PTR [eax-0x21],esi
  40c33a:	pop    esi
  40c33b:	(bad)  
  40c33c:	jns    0x40c34d
  40c33e:	(bad)  
  40c33f:	cmp    esi,DWORD PTR [edi+0x31]
  40c342:	push   eax
  40c343:	or     ecx,edi
  40c345:	mov    ds:0xc6db54d3,eax
  40c34a:	mov    ebp,0x7082a2a
  40c34f:	sub    edx,DWORD PTR [eax-0x67]
  40c352:	dec    eax
  40c353:	push   ss
  40c354:	push   ss
  40c355:	mov    edx,0x1f2fadff
  40c35a:	and    esp,ebp
  40c35c:	sahf   
  40c35d:	dec    esi
  40c35e:	fs xor al,0x85
  40c361:	pop    ebx
  40c362:	repnz loopne 0x40c3ae
  40c365:	rol    DWORD PTR [edx+0x77],cl
  40c368:	and    DWORD PTR [eax+edx*1-0x56f23a29],esi
  40c36f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c370:	pop    esi
  40c371:	popa   
  40c372:	(bad)  
  40c373:	xchg   esp,eax
  40c374:	cmp    DWORD PTR [ebx],edi
  40c376:	aad    0xd0
  40c378:	mov    ecx,0xb43d7259
  40c37d:	sbb    ah,BYTE PTR [ebx]
  40c37f:	cmp    ebp,DWORD PTR [eax+0x54496ac6]
  40c385:	jp     0x40c35a
  40c387:	xor    eax,DWORD PTR [ebx+0x1c]
  40c38a:	popa   
  40c38b:	addr16 dec ebp
  40c38d:	rol    edx,cl
  40c38f:	pop    ecx
  40c390:	mov    ds:0x29457791,eax
  40c395:	mov    ds:0x4ace20eb,eax
  40c39a:	gs mov esp,0x9eea8fd0
  40c3a0:	std    
  40c3a1:	mov    ds,WORD PTR [edi+0x44]
  40c3a4:	sub    ebx,edx
  40c3a6:	ror    BYTE PTR [ebx+0x8],1
  40c3a9:	loope  0x40c348
  40c3ab:	xchg   ebx,eax
  40c3ac:	hlt    
  40c3ad:	call   ebx
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x6d2e5fee,ecx
  40c3c3:	fsub   st(2),st
  40c3c5:	gs dec ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	shl    DWORD PTR [eax],1
  40c3d0:	jl     0x40c3de
  40c3d2:	jle    0x40c3f7
  40c3d4:	push   ebx
  40c3d5:	push   esi
  40c3d6:	push   esi
  40c3d7:	jecxz  0x40c373
  40c3d9:	dec    ebp
  40c3da:	retf   
  40c3db:	sbb    eax,0x1ac8ae6e
  40c3e0:	pop    es
  40c3e1:	mov    eax,0x39c9f62a
  40c3e6:	inc    ebx
  40c3e7:	sbb    DWORD PTR [edi+0x54],esp
  40c3ea:	inc    esp
  40c3eb:	adc    edx,DWORD PTR [esp+esi*8+0xcf488a3]
  40c3f2:	xor    eax,0xf785c142
  40c3f7:	dec    ecx
  40c3f8:	stos   DWORD PTR es:[edi],eax
  40c3f9:	test   eax,0x76a03bb2
  40c3fe:	mov    al,gs:0xe93225ee
  40c404:	jns    0x40c456
  40c406:	loope  0x40c3f2
  40c408:	int    0xa5
  40c40a:	mov    bh,0x6b
  40c40c:	sbb    BYTE PTR ss:[ecx+0x58953e22],0xae
  40c414:	dec    ecx
  40c415:	neg    BYTE PTR [ebx+edx*1-0x52d31761]
  40c41c:	and    BYTE PTR [edx+0x73fafb35],0x10
  40c423:	es dec esp
  40c425:	sub    al,0x20
  40c427:	inc    esp
  40c428:	test   BYTE PTR [eax],ah
  40c42a:	outs   dx,BYTE PTR ds:[esi]
  40c42b:	push   ss
  40c42c:	or     BYTE PTR [edx],ch
  40c42e:	xchg   edi,eax
  40c42f:	mov    dl,0x7c
  40c431:	push   cs
  40c432:	out    0x86,al
  40c434:	adc    al,0x6b
  40c436:	jmp    0x40c482
  40c438:	iret   
  40c439:	loop   0x40c414
  40c43b:	inc    ecx
  40c43c:	inc    eax
  40c43d:	cmp    BYTE PTR [ebx],al
  40c43f:	adc    BYTE PTR [ebx-0x69],0x2c
  40c443:	lods   eax,DWORD PTR ds:[esi]
  40c444:	imul   ecx,esi,0xffffffc1
  40c447:	xor    BYTE PTR [ebx-0x5d70d81a],ah
  40c44d:	sbb    eax,0x58028ad1
  40c452:	push   cs
  40c453:	jl     0x40c48b
  40c455:	retf   
  40c456:	xchg   ah,dh
  40c458:	sti    
  40c459:	mov    ds:0xe77d9a2d,al
  40c45e:	and    dl,dh
  40c460:	leave  
  40c461:	mov    ebx,esi
  40c463:	pop    ecx
  40c464:	jb     0x40c46d
  40c466:	(bad)  
  40c467:	in     al,0xa0
  40c469:	jnp    0x40c440
  40c46b:	(bad)  
  40c46d:	dec    ebx
  40c46e:	cmp    eax,0xac577f99
  40c473:	popf   
  40c474:	leave  
  40c475:	test   al,0x2a
  40c477:	rcr    DWORD PTR [esi+0x6fcc5812],0x71
  40c47e:	and    dh,BYTE PTR [ecx-0x53]
  40c481:	pop    esi
  40c482:	jnp    0x40c43b
  40c484:	pop    ebp
  40c485:	mov    ebx,0xa0bd855c
  40c48a:	fucomp st(2)
  40c48c:	cli    
  40c48d:	mov    edi,0x468c6669
  40c492:	imul   ecx,DWORD PTR [eax],0xffffffbf
  40c495:	xor    eax,0x105d3943
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs jns 0x40c471
  40c4ad:	pop    eax
  40c4ae:	in     eax,0x81
  40c4b0:	enter  0x7e7e,0xb6
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c4e3
  40c4b8:	xor    bh,BYTE PTR [ecx]
  40c4ba:	js     0x40c500
  40c4bc:	imul   esp,DWORD PTR [ebx+0x60bc4010],0xffffffbe
  40c4c3:	dec    esp
  40c4c4:	aad    0xdd
  40c4c6:	push   es
  40c4c7:	xor    ebx,DWORD PTR [ebx+0x5b71195]
  40c4cd:	loope  0x40c495
  40c4cf:	sbb    ebp,DWORD PTR [esi+ecx*8-0x4ca1f7a4]
  40c4d6:	or     bl,BYTE PTR [ecx-0x26a136a6]
  40c4dc:	je     0x40c493
  40c4de:	sub    DWORD PTR [ecx],esp
  40c4e0:	jno    0x40c4a1
  40c4e2:	mov    DWORD PTR [edi+eax*4],esp
  40c4e5:	out    0x36,al
  40c4e7:	inc    esi
  40c4e8:	div    DWORD PTR [edx+0x7ed2551c]
  40c4ee:	xor    al,0x41
  40c4f0:	or     bh,BYTE PTR [eax-0x38]
  40c4f3:	div    eax
  40c4f5:	sub    eax,0x4e5651ba
  40c4fa:	xchg   BYTE PTR [ecx-0x3b2143d8],al
  40c500:	jp     0x40c4b0
  40c502:	mov    eax,0x7049cf40
  40c507:	hlt    
  40c508:	xor    eax,0x8e9775ae
  40c50d:	call   0x1ce5:0x67d4f060
  40c514:	fidivr DWORD PTR [esi+edx*8-0x63]
  40c518:	mov    edx,0xb2efa0ca
  40c51d:	pusha  
  40c51e:	jg     0x40c53e
  40c520:	stos   DWORD PTR es:[edi],eax
  40c521:	xor    BYTE PTR [eax],bh
  40c523:	and    BYTE PTR [ebx+eiz*1+0x66],cl
  40c527:	dec    eax
  40c528:	arpl   WORD PTR ds:0xfebb2a5a,cx
  40c52e:	outs   dx,DWORD PTR ds:[esi]
  40c52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c530:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c532:	test   BYTE PTR [esp+eax*4+0x70],0xf9
  40c537:	pop    es
  40c538:	mov    edx,0xd22a9ce
  40c53d:	shr    BYTE PTR [edx],1
  40c53f:	addr16 adc eax,0x6a6beaa3
  40c545:	(bad)  
  40c546:	shl    BYTE PTR [edi+0x6a19d967],cl
  40c54c:	jle    0x40c56d
  40c54e:	jg     0x40c534
  40c550:	idiv   BYTE PTR ds:0x66aafa93
  40c556:	pop    esp
  40c557:	dec    edi
  40c558:	sahf   
  40c559:	enter  0x2fb,0x3e
  40c55d:	popf   
  40c55e:	mov    edi,DWORD PTR [edi]
  40c560:	xor    ch,BYTE PTR [edx-0x6ab3407a]
  40c566:	js     0x40c5cd
  40c568:	cmp    eax,0xa1490ad2
  40c56d:	dec    ebx
  40c56e:	xor    BYTE PTR [ecx+0x31d73f6e],0xb2
  40c575:	(bad)  
  40c576:	mov    al,0x1e
  40c578:	repz les esp,FWORD PTR [ebx]
  40c57b:	jns    0x40c5a1
  40c57d:	or     DWORD PTR [edx+0xf],edx
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xec5caa60
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	arpl   di,ax
  40c5b2:	ret    
  40c5b3:	adc    DWORD PTR [ebp+0x68],eax
  40c5b6:	mov    dl,0xc
  40c5b8:	into   
  40c5b9:	out    dx,eax
  40c5ba:	add    al,0x84
  40c5bc:	jo     0x40c5a6
  40c5be:	push   es
  40c5bf:	cmc    
  40c5c0:	push   ebp
  40c5c1:	push   ss
  40c5c2:	sahf   
  40c5c3:	push   0xa3a3aebd
  40c5c8:	in     al,0x20
  40c5ca:	std    
  40c5cb:	mov    ebp,DWORD PTR [eax]
  40c5cd:	mov    cl,0xe3
  40c5cf:	retf   
  40c5d0:	pop    ecx
  40c5d1:	mov    eax,ds:0xe5912bca
  40c5d6:	xchg   edx,eax
  40c5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d8:	in     al,0x72
  40c5da:	mov    gs,WORD PTR [esi-0x7f2e9b20]
  40c5e0:	dec    esi
  40c5e1:	ret    
  40c5e2:	arpl   WORD PTR [ecx],si
  40c5e4:	mov    esp,ds
  40c5e6:	mov    esi,DWORD PTR [eax+eiz*8]
  40c5e9:	or     eax,0xf80d11f4
  40c5ee:	sbb    edi,ecx
  40c5f0:	cli    
  40c5f1:	(bad)  
  40c5f2:	fnstsw WORD PTR [ebx]
  40c5f4:	jmp    0x40c5db
  40c5f6:	aas    
  40c5f7:	mov    esp,0x1effd78
  40c5fc:	ret    
  40c5fd:	add    DWORD PTR [ebp+0x62],0xffffffa0
  40c601:	mov    ch,0x4f
  40c603:	fs nop
  40c605:	sub    al,0xcb
  40c607:	mov    es,WORD PTR [ecx+0x7c4078c8]
  40c60d:	pop    ebx
  40c60e:	pop    ss
  40c60f:	mov    ch,0x2a
  40c611:	and    BYTE PTR [ebx+ebx*1+0x712085b5],cl
  40c618:	rcr    edx,cl
  40c61a:	add    DWORD PTR [ebp-0x5b40462f],esp
  40c620:	jnp    0x40c5e0
  40c622:	loope  0x40c69a
  40c624:	mov    ds:0x1d9bfb82,al
  40c629:	dec    ebx
  40c62a:	shl    BYTE PTR [ecx+0x1e5bd578],0x58
  40c631:	(bad)  
  40c632:	fcom   st(1)
  40c634:	add    bl,BYTE PTR [edx-0x6d]
  40c637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c638:	aad    0xf7
  40c63a:	cs cmp cl,dl
  40c63d:	or     bl,BYTE PTR [edx-0x6]
  40c640:	push   ss
  40c641:	mov    al,ds:0x6c9bc7de
  40c646:	imul   eax,DWORD PTR [edi+eiz*8+0x373dc325],0xbb93e48b
  40c651:	lods   al,BYTE PTR ds:[esi]
  40c652:	mov    dl,0xf4
  40c654:	int3   
  40c655:	mov    bh,BYTE PTR [ecx+0x39a1560d]
  40c65b:	test   eax,0xab2e5ae7
  40c660:	imul   eax,edi,0xffffff91
  40c663:	mov    ch,0x22
  40c665:	xor    eax,0xd2ad3f69
  40c66a:	les    ecx,FWORD PTR [edx]
  40c66c:	sbb    BYTE PTR [edi],dl
  40c66e:	dec    ecx
  40c66f:	clc    
  40c670:	iret   
  40c671:	xchg   ebx,eax
  40c672:	sbb    ebp,DWORD PTR [edx-0xae1a7a4]
  40c678:	dec    ecx
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
