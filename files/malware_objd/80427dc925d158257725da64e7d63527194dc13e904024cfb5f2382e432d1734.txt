
80427dc925d158257725da64e7d63527194dc13e904024cfb5f2382e432d1734.exe:     file format pei-i386


Disassembly of section .text:

00011000 <.text>:
   11000:	push   ebp
   11001:	mov    ebp,esp
   11003:	sub    esp,0x80c
   11009:	mov    eax,DWORD PTR [ebp+0x8]
   1100c:	xor    edx,edx
   1100e:	push   ebx
   1100f:	push   esi
   11010:	xor    ecx,ecx
   11012:	inc    ecx
   11013:	push   edi
   11014:	mov    edi,0x1000
   11019:	mov    DWORD PTR [ebp-0xc],eax
   1101c:	mov    eax,0x800
   11021:	mov    DWORD PTR [ebp-0x8],edx
   11024:	mov    DWORD PTR [ebp-0x40c],eax
   1102a:	mov    DWORD PTR [ebp-0x408],eax
   11030:	mov    DWORD PTR [ebp-0x404],eax
   11036:	mov    DWORD PTR [ebp-0x400],eax
   1103c:	mov    DWORD PTR [ebp-0x3fc],edi
   11042:	mov    DWORD PTR [ebp-0x3f8],edi
   11048:	mov    DWORD PTR [ebp-0x3f4],edx
   1104e:	mov    DWORD PTR [ebp-0x3f0],edx
   11054:	mov    DWORD PTR [ebp-0x3ec],eax
   1105a:	mov    DWORD PTR [ebp-0x3e8],eax
   11060:	mov    DWORD PTR [ebp-0x3e4],eax
   11066:	mov    DWORD PTR [ebp-0x3e0],eax
   1106c:	mov    DWORD PTR [ebp-0x3dc],edi
   11072:	mov    DWORD PTR [ebp-0x3d8],edi
   11078:	mov    DWORD PTR [ebp-0x3d4],edx
   1107e:	mov    DWORD PTR [ebp-0x3d0],0x4000
   11088:	mov    DWORD PTR [ebp-0x3cc],eax
   1108e:	mov    DWORD PTR [ebp-0x3c8],eax
   11094:	mov    DWORD PTR [ebp-0x3c4],eax
   1109a:	mov    DWORD PTR [ebp-0x3c0],eax
   110a0:	mov    DWORD PTR [ebp-0x3bc],edi
   110a6:	mov    DWORD PTR [ebp-0x3b8],edi
   110ac:	mov    DWORD PTR [ebp-0x3b4],edx
   110b2:	mov    DWORD PTR [ebp-0x3b0],edx
   110b8:	mov    DWORD PTR [ebp-0x3ac],eax
   110be:	mov    DWORD PTR [ebp-0x3a8],eax
   110c4:	mov    DWORD PTR [ebp-0x3a4],eax
   110ca:	mov    DWORD PTR [ebp-0x3a0],eax
   110d0:	mov    DWORD PTR [ebp-0x39c],edi
   110d6:	mov    DWORD PTR [ebp-0x398],edi
   110dc:	mov    DWORD PTR [ebp-0x394],edx
   110e2:	mov    DWORD PTR [ebp-0x390],edx
   110e8:	mov    DWORD PTR [ebp-0x38c],eax
   110ee:	mov    DWORD PTR [ebp-0x388],eax
   110f4:	mov    DWORD PTR [ebp-0x384],eax
   110fa:	mov    DWORD PTR [ebp-0x380],eax
   11100:	mov    DWORD PTR [ebp-0x37c],edi
   11106:	mov    DWORD PTR [ebp-0x378],edi
   1110c:	mov    DWORD PTR [ebp-0x374],ecx
   11112:	mov    DWORD PTR [ebp-0x370],edx
   11118:	mov    DWORD PTR [ebp-0x36c],eax
   1111e:	mov    DWORD PTR [ebp-0x368],eax
   11124:	mov    DWORD PTR [ebp-0x364],eax
   1112a:	mov    DWORD PTR [ebp-0x360],eax
   11130:	mov    DWORD PTR [ebp-0x35c],edi
   11136:	mov    DWORD PTR [ebp-0x358],edi
   1113c:	mov    DWORD PTR [ebp-0x354],ecx
   11142:	mov    DWORD PTR [ebp-0x350],edx
   11148:	mov    DWORD PTR [ebp-0x34c],eax
   1114e:	mov    DWORD PTR [ebp-0x348],eax
   11154:	mov    DWORD PTR [ebp-0x344],eax
   1115a:	mov    DWORD PTR [ebp-0x340],eax
   11160:	mov    DWORD PTR [ebp-0x33c],edi
   11166:	mov    DWORD PTR [ebp-0x338],edi
   1116c:	mov    DWORD PTR [ebp-0x334],ecx
   11172:	mov    DWORD PTR [ebp-0x330],edx
   11178:	mov    DWORD PTR [ebp-0x32c],eax
   1117e:	mov    DWORD PTR [ebp-0x328],eax
   11184:	mov    DWORD PTR [ebp-0x324],eax
   1118a:	mov    DWORD PTR [ebp-0x320],eax
   11190:	mov    DWORD PTR [ebp-0x31c],edi
   11196:	mov    DWORD PTR [ebp-0x318],edi
   1119c:	mov    DWORD PTR [ebp-0x314],ecx
   111a2:	mov    DWORD PTR [ebp-0x310],edx
   111a8:	mov    DWORD PTR [ebp-0x30c],edx
   111ae:	mov    DWORD PTR [ebp-0x308],edx
   111b4:	mov    DWORD PTR [ebp-0x304],edx
   111ba:	mov    DWORD PTR [ebp-0x300],edx
   111c0:	mov    DWORD PTR [ebp-0x2fc],edx
   111c6:	mov    DWORD PTR [ebp-0x2f8],edx
   111cc:	push   0x8
   111ce:	pop    esi
   111cf:	mov    ebx,0x810
   111d4:	push   0x10
   111d6:	mov    DWORD PTR [ebp-0x27c],ecx
   111dc:	mov    DWORD PTR [ebp-0x278],ecx
   111e2:	pop    ecx
   111e3:	mov    DWORD PTR [ebp-0x2f4],edx
   111e9:	mov    DWORD PTR [ebp-0x2f0],edx
   111ef:	mov    DWORD PTR [ebp-0x2ec],edx
   111f5:	mov    DWORD PTR [ebp-0x2e8],edx
   111fb:	mov    DWORD PTR [ebp-0x2e4],edx
   11201:	mov    DWORD PTR [ebp-0x2e0],edx
   11207:	mov    DWORD PTR [ebp-0x2dc],edx
   1120d:	mov    DWORD PTR [ebp-0x2d8],edx
   11213:	mov    DWORD PTR [ebp-0x2d4],edx
   11219:	mov    DWORD PTR [ebp-0x2d0],edx
   1121f:	mov    DWORD PTR [ebp-0x2cc],edx
   11225:	mov    DWORD PTR [ebp-0x2c8],edx
   1122b:	mov    DWORD PTR [ebp-0x2c4],edx
   11231:	mov    DWORD PTR [ebp-0x2c0],edx
   11237:	mov    DWORD PTR [ebp-0x2bc],edx
   1123d:	mov    DWORD PTR [ebp-0x2b8],edx
   11243:	mov    DWORD PTR [ebp-0x2b4],edx
   11249:	mov    DWORD PTR [ebp-0x2b0],edx
   1124f:	mov    DWORD PTR [ebp-0x2ac],edx
   11255:	mov    DWORD PTR [ebp-0x2a8],edx
   1125b:	mov    DWORD PTR [ebp-0x2a4],edx
   11261:	mov    DWORD PTR [ebp-0x2a0],edx
   11267:	mov    DWORD PTR [ebp-0x29c],edx
   1126d:	mov    DWORD PTR [ebp-0x298],edx
   11273:	mov    DWORD PTR [ebp-0x294],edx
   11279:	mov    DWORD PTR [ebp-0x290],edx
   1127f:	mov    DWORD PTR [ebp-0x28c],edx
   11285:	mov    DWORD PTR [ebp-0x288],edx
   1128b:	mov    DWORD PTR [ebp-0x284],eax
   11291:	mov    DWORD PTR [ebp-0x280],eax
   11297:	mov    DWORD PTR [ebp-0x274],0x3
   112a1:	mov    DWORD PTR [ebp-0x270],0x5
   112ab:	mov    DWORD PTR [ebp-0x26c],esi
   112b1:	mov    DWORD PTR [ebp-0x268],0x808
   112bb:	mov    DWORD PTR [ebp-0x264],ecx
   112c1:	mov    DWORD PTR [ebp-0x260],ebx
   112c7:	mov    DWORD PTR [ebp-0x25c],edx
   112cd:	mov    DWORD PTR [ebp-0x258],edx
   112d3:	mov    DWORD PTR [ebp-0x254],edx
   112d9:	mov    DWORD PTR [ebp-0x250],edx
   112df:	mov    DWORD PTR [ebp-0x24c],ecx
   112e5:	mov    DWORD PTR [ebp-0x248],ecx
   112eb:	mov    DWORD PTR [ebp-0x244],ecx
   112f1:	mov    DWORD PTR [ebp-0x240],ecx
   112f7:	mov    DWORD PTR [ebp-0x23c],ecx
   112fd:	mov    DWORD PTR [ebp-0x238],ecx
   11303:	mov    DWORD PTR [ebp-0x234],ecx
   11309:	mov    DWORD PTR [ebp-0x230],ecx
   1130f:	mov    DWORD PTR [ebp-0x22c],ecx
   11315:	mov    DWORD PTR [ebp-0x228],ecx
   1131b:	mov    DWORD PTR [ebp-0x224],ecx
   11321:	mov    DWORD PTR [ebp-0x220],ecx
   11327:	mov    DWORD PTR [ebp-0x21c],ecx
   1132d:	mov    DWORD PTR [ebp-0x218],ecx
   11333:	mov    DWORD PTR [ebp-0x214],ecx
   11339:	mov    DWORD PTR [ebp-0x210],ecx
   1133f:	mov    DWORD PTR [ebp-0x20c],ebx
   11345:	mov    DWORD PTR [ebp-0x208],0x808
   1134f:	mov    DWORD PTR [ebp-0x204],ebx
   11355:	mov    DWORD PTR [ebp-0x200],ebx
   1135b:	mov    DWORD PTR [ebp-0x1fc],eax
   11361:	mov    DWORD PTR [ebp-0x1f8],eax
   11367:	mov    DWORD PTR [ebp-0x1f4],eax
   1136d:	mov    DWORD PTR [ebp-0x1f0],eax
   11373:	mov    DWORD PTR [ebp-0x1ec],eax
   11379:	mov    DWORD PTR [ebp-0x1e8],eax
   1137f:	mov    DWORD PTR [ebp-0x1e4],eax
   11385:	mov    DWORD PTR [ebp-0x1e0],eax
   1138b:	mov    DWORD PTR [ebp-0x1dc],eax
   11391:	mov    DWORD PTR [ebp-0x1d8],eax
   11397:	mov    DWORD PTR [ebp-0x1d4],eax
   1139d:	mov    DWORD PTR [ebp-0x1d0],eax
   113a3:	mov    DWORD PTR [ebp-0x1cc],edx
   113a9:	mov    DWORD PTR [ebp-0x1c8],edx
   113af:	mov    DWORD PTR [ebp-0x1c4],edx
   113b5:	mov    DWORD PTR [ebp-0x1c0],edx
   113bb:	mov    DWORD PTR [ebp-0x1bc],edx
   113c1:	mov    DWORD PTR [ebp-0x1b8],edx
   113c7:	mov    DWORD PTR [ebp-0x1b4],edx
   113cd:	mov    DWORD PTR [ebp-0x1b0],edx
   113d3:	mov    DWORD PTR [ebp-0x1ac],edx
   113d9:	mov    DWORD PTR [ebp-0x1a8],edx
   113df:	mov    DWORD PTR [ebp-0x1a4],0x208
   113e9:	mov    DWORD PTR [ebp-0x1a0],edx
   113ef:	mov    DWORD PTR [ebp-0x19c],edx
   113f5:	mov    DWORD PTR [ebp-0x198],edx
   113fb:	mov    DWORD PTR [ebp-0x194],edx
   11401:	mov    DWORD PTR [ebp-0x190],edx
   11407:	mov    DWORD PTR [ebp-0x18c],0x80
   11411:	mov    DWORD PTR [ebp-0x188],0x80
   1141b:	mov    DWORD PTR [ebp-0x184],0x80
   11425:	mov    DWORD PTR [ebp-0x180],0x80
   1142f:	mov    DWORD PTR [ebp-0x17c],edx
   11435:	mov    DWORD PTR [ebp-0x178],edx
   1143b:	mov    DWORD PTR [ebp-0x174],edx
   11441:	mov    DWORD PTR [ebp-0x170],edx
   11447:	mov    DWORD PTR [ebp-0x16c],ecx
   1144d:	mov    DWORD PTR [ebp-0x168],esi
   11453:	mov    DWORD PTR [ebp-0x164],edx
   11459:	mov    DWORD PTR [ebp-0x160],edx
   1145f:	mov    DWORD PTR [ebp-0x15c],edx
   11465:	mov    DWORD PTR [ebp-0x158],edx
   1146b:	mov    DWORD PTR [ebp-0x154],edx
   11471:	mov    DWORD PTR [ebp-0x150],edx
   11477:	mov    DWORD PTR [ebp-0x14c],ecx
   1147d:	mov    DWORD PTR [ebp-0x148],ecx
   11483:	mov    DWORD PTR [ebp-0x144],ecx
   11489:	mov    DWORD PTR [ebp-0x140],ecx
   1148f:	mov    DWORD PTR [ebp-0x13c],ecx
   11495:	mov    DWORD PTR [ebp-0x138],ecx
   1149b:	mov    DWORD PTR [ebp-0x134],ecx
   114a1:	mov    DWORD PTR [ebp-0x130],ecx
   114a7:	mov    DWORD PTR [ebp-0x12c],esi
   114ad:	mov    DWORD PTR [ebp-0x128],esi
   114b3:	mov    DWORD PTR [ebp-0x124],esi
   114b9:	mov    DWORD PTR [ebp-0x120],esi
   114bf:	mov    DWORD PTR [ebp-0x11c],esi
   114c5:	mov    DWORD PTR [ebp-0x118],esi
   114cb:	mov    DWORD PTR [ebp-0x114],esi
   114d1:	mov    DWORD PTR [ebp-0x110],esi
   114d7:	mov    DWORD PTR [ebp-0x10c],ebx
   114dd:	mov    DWORD PTR [ebp-0x108],ebx
   114e3:	mov    DWORD PTR [ebp-0x104],0x20
   114ed:	mov    DWORD PTR [ebp-0x100],edx
   114f3:	mov    DWORD PTR [ebp-0xfc],eax
   114f9:	mov    DWORD PTR [ebp-0xf8],eax
   114ff:	mov    DWORD PTR [ebp-0xf4],0x808
   11509:	mov    DWORD PTR [ebp-0xf0],0x808
   11513:	mov    DWORD PTR [ebp-0xec],0x30
   1151d:	mov    DWORD PTR [ebp-0xe8],edx
   11523:	mov    DWORD PTR [ebp-0xe4],0x20
   1152d:	mov    DWORD PTR [ebp-0xe0],edx
   11533:	mov    DWORD PTR [ebp-0xdc],edx
   11539:	mov    DWORD PTR [ebp-0xd8],0x50
   11543:	mov    DWORD PTR [ebp-0xd4],edx
   11549:	mov    DWORD PTR [ebp-0xd0],edx
   1154f:	mov    DWORD PTR [ebp-0xcc],eax
   11555:	mov    DWORD PTR [ebp-0xc8],eax
   1155b:	mov    DWORD PTR [ebp-0xc4],eax
   11561:	mov    DWORD PTR [ebp-0xc0],eax
   11567:	mov    DWORD PTR [ebp-0xbc],edx
   1156d:	mov    DWORD PTR [ebp-0xb8],edx
   11573:	mov    DWORD PTR [ebp-0xb4],edx
   11579:	mov    DWORD PTR [ebp-0xb0],edx
   1157f:	mov    DWORD PTR [ebp-0xac],eax
   11585:	mov    DWORD PTR [ebp-0xa8],eax
   1158b:	mov    DWORD PTR [ebp-0xa4],eax
   11591:	mov    DWORD PTR [ebp-0xa0],eax
   11597:	mov    DWORD PTR [ebp-0x9c],eax
   1159d:	mov    DWORD PTR [ebp-0x98],eax
   115a3:	mov    DWORD PTR [ebp-0x94],eax
   115a9:	mov    DWORD PTR [ebp-0x90],eax
   115af:	mov    DWORD PTR [ebp-0x8c],ecx
   115b5:	mov    DWORD PTR [ebp-0x88],ecx
   115bb:	mov    DWORD PTR [ebp-0x84],ecx
   115c1:	mov    DWORD PTR [ebp-0x80],ecx
   115c4:	mov    DWORD PTR [ebp-0x7c],ecx
   115c7:	mov    DWORD PTR [ebp-0x78],ecx
   115ca:	mov    DWORD PTR [ebp-0x74],ecx
   115cd:	mov    DWORD PTR [ebp-0x70],ecx
   115d0:	mov    DWORD PTR [ebp-0x60],ecx
   115d3:	xor    ecx,ecx
   115d5:	inc    ecx
   115d6:	mov    DWORD PTR [ebp-0x4c],ecx
   115d9:	mov    DWORD PTR [ebp-0x44],ecx
   115dc:	mov    DWORD PTR [ebp-0x40],ecx
   115df:	mov    ecx,0x2000
   115e4:	mov    DWORD PTR [ebp-0x34],ecx
   115e7:	mov    DWORD PTR [ebp-0x30],ecx
   115ea:	or     ecx,0xffffffff
   115ed:	mov    DWORD PTR [ebp-0x6c],esi
   115f0:	mov    DWORD PTR [ebp-0x68],esi
   115f3:	mov    DWORD PTR [ebp-0x64],0x208
   115fa:	mov    DWORD PTR [ebp-0x5c],edx
   115fd:	mov    DWORD PTR [ebp-0x58],edx
   11600:	mov    DWORD PTR [ebp-0x54],edx
   11603:	mov    DWORD PTR [ebp-0x50],edx
   11606:	mov    DWORD PTR [ebp-0x48],edx
   11609:	mov    DWORD PTR [ebp-0x3c],edx
   1160c:	mov    DWORD PTR [ebp-0x38],edx
   1160f:	mov    DWORD PTR [ebp-0x2c],edx
   11612:	mov    DWORD PTR [ebp-0x28],edx
   11615:	mov    DWORD PTR [ebp-0x24],edx
   11618:	mov    DWORD PTR [ebp-0x20],edx
   1161b:	mov    DWORD PTR [ebp-0x1c],edx
   1161e:	mov    DWORD PTR [ebp-0x18],edx
   11621:	mov    DWORD PTR [ebp-0x14],eax
   11624:	mov    DWORD PTR [ebp-0x10],eax
   11627:	mov    DWORD PTR [ebp-0x80c],eax
   1162d:	mov    DWORD PTR [ebp-0x808],eax
   11633:	mov    DWORD PTR [ebp-0x804],eax
   11639:	mov    DWORD PTR [ebp-0x800],eax
   1163f:	mov    DWORD PTR [ebp-0x7fc],ecx
   11645:	mov    DWORD PTR [ebp-0x7f8],ecx
   1164b:	mov    DWORD PTR [ebp-0x7f4],edx
   11651:	mov    DWORD PTR [ebp-0x7f0],ecx
   11657:	mov    DWORD PTR [ebp-0x7ec],edx
   1165d:	mov    DWORD PTR [ebp-0x7e8],edx
   11663:	mov    DWORD PTR [ebp-0x7e4],edx
   11669:	mov    DWORD PTR [ebp-0x7e0],edx
   1166f:	mov    DWORD PTR [ebp-0x7dc],ecx
   11675:	mov    DWORD PTR [ebp-0x7d8],ecx
   1167b:	mov    DWORD PTR [ebp-0x7d4],ecx
   11681:	mov    DWORD PTR [ebp-0x7d0],ecx
   11687:	mov    DWORD PTR [ebp-0x7cc],ecx
   1168d:	mov    DWORD PTR [ebp-0x7c8],ecx
   11693:	mov    DWORD PTR [ebp-0x7c4],ecx
   11699:	mov    DWORD PTR [ebp-0x7c0],ecx
   1169f:	mov    DWORD PTR [ebp-0x7bc],ecx
   116a5:	mov    DWORD PTR [ebp-0x7b8],ecx
   116ab:	mov    DWORD PTR [ebp-0x7b4],ecx
   116b1:	mov    DWORD PTR [ebp-0x7b0],ecx
   116b7:	mov    DWORD PTR [ebp-0x7ac],ecx
   116bd:	mov    DWORD PTR [ebp-0x7a8],ecx
   116c3:	mov    DWORD PTR [ebp-0x7a4],ecx
   116c9:	mov    DWORD PTR [ebp-0x7a0],ecx
   116cf:	mov    DWORD PTR [ebp-0x79c],ecx
   116d5:	mov    DWORD PTR [ebp-0x798],ecx
   116db:	mov    DWORD PTR [ebp-0x794],ecx
   116e1:	mov    DWORD PTR [ebp-0x790],ecx
   116e7:	mov    DWORD PTR [ebp-0x78c],ecx
   116ed:	mov    DWORD PTR [ebp-0x788],ecx
   116f3:	mov    DWORD PTR [ebp-0x784],ecx
   116f9:	mov    DWORD PTR [ebp-0x780],ecx
   116ff:	mov    DWORD PTR [ebp-0x77c],ecx
   11705:	mov    DWORD PTR [ebp-0x778],ecx
   1170b:	mov    DWORD PTR [ebp-0x774],ecx
   11711:	mov    DWORD PTR [ebp-0x770],ecx
   11717:	mov    DWORD PTR [ebp-0x76c],ecx
   1171d:	mov    DWORD PTR [ebp-0x768],ecx
   11723:	mov    DWORD PTR [ebp-0x764],ecx
   11729:	mov    DWORD PTR [ebp-0x760],ecx
   1172f:	mov    DWORD PTR [ebp-0x75c],ecx
   11735:	mov    DWORD PTR [ebp-0x758],ecx
   1173b:	mov    DWORD PTR [ebp-0x754],ecx
   11741:	mov    DWORD PTR [ebp-0x750],ecx
   11747:	mov    DWORD PTR [ebp-0x74c],ecx
   1174d:	mov    DWORD PTR [ebp-0x748],ecx
   11753:	mov    DWORD PTR [ebp-0x744],ecx
   11759:	mov    DWORD PTR [ebp-0x740],ecx
   1175f:	mov    DWORD PTR [ebp-0x73c],ecx
   11765:	mov    DWORD PTR [ebp-0x738],ecx
   1176b:	mov    DWORD PTR [ebp-0x734],ecx
   11771:	mov    DWORD PTR [ebp-0x730],ecx
   11777:	mov    DWORD PTR [ebp-0x72c],ecx
   1177d:	mov    DWORD PTR [ebp-0x728],ecx
   11783:	mov    DWORD PTR [ebp-0x724],ecx
   11789:	mov    DWORD PTR [ebp-0x720],ecx
   1178f:	mov    DWORD PTR [ebp-0x71c],ecx
   11795:	mov    DWORD PTR [ebp-0x718],ecx
   1179b:	mov    DWORD PTR [ebp-0x714],ecx
   117a1:	mov    DWORD PTR [ebp-0x710],ecx
   117a7:	mov    DWORD PTR [ebp-0x70c],ecx
   117ad:	mov    DWORD PTR [ebp-0x708],ecx
   117b3:	mov    DWORD PTR [ebp-0x704],ecx
   117b9:	mov    DWORD PTR [ebp-0x700],ecx
   117bf:	mov    DWORD PTR [ebp-0x6fc],ecx
   117c5:	mov    DWORD PTR [ebp-0x6f8],ecx
   117cb:	mov    DWORD PTR [ebp-0x6f4],ecx
   117d1:	mov    DWORD PTR [ebp-0x6f0],ecx
   117d7:	mov    DWORD PTR [ebp-0x6ec],ecx
   117dd:	mov    DWORD PTR [ebp-0x6e8],ecx
   117e3:	mov    DWORD PTR [ebp-0x6e4],ecx
   117e9:	mov    DWORD PTR [ebp-0x6e0],ecx
   117ef:	mov    DWORD PTR [ebp-0x6dc],ecx
   117f5:	mov    DWORD PTR [ebp-0x6d8],ecx
   117fb:	mov    DWORD PTR [ebp-0x6d4],ecx
   11801:	mov    DWORD PTR [ebp-0x6d0],ecx
   11807:	mov    DWORD PTR [ebp-0x6cc],ecx
   1180d:	mov    DWORD PTR [ebp-0x6c8],ecx
   11813:	mov    DWORD PTR [ebp-0x6c4],ecx
   11819:	mov    DWORD PTR [ebp-0x6c0],ecx
   1181f:	mov    DWORD PTR [ebp-0x6bc],ecx
   11825:	mov    DWORD PTR [ebp-0x6b8],ecx
   1182b:	mov    DWORD PTR [ebp-0x6b4],ecx
   11831:	mov    DWORD PTR [ebp-0x6b0],ecx
   11837:	mov    DWORD PTR [ebp-0x6ac],ecx
   1183d:	mov    DWORD PTR [ebp-0x6a8],ecx
   11843:	mov    DWORD PTR [ebp-0x6a4],ecx
   11849:	mov    DWORD PTR [ebp-0x6a0],ecx
   1184f:	mov    DWORD PTR [ebp-0x69c],ecx
   11855:	mov    DWORD PTR [ebp-0x698],ecx
   1185b:	mov    DWORD PTR [ebp-0x694],ecx
   11861:	mov    DWORD PTR [ebp-0x690],ecx
   11867:	mov    DWORD PTR [ebp-0x68c],ecx
   1186d:	mov    DWORD PTR [ebp-0x688],ecx
   11873:	mov    DWORD PTR [ebp-0x684],ecx
   11879:	mov    DWORD PTR [ebp-0x680],ecx
   1187f:	mov    DWORD PTR [ebp-0x67c],ecx
   11885:	mov    DWORD PTR [ebp-0x678],ecx
   1188b:	mov    DWORD PTR [ebp-0x674],ecx
   11891:	mov    DWORD PTR [ebp-0x670],ecx
   11897:	mov    DWORD PTR [ebp-0x66c],ecx
   1189d:	mov    DWORD PTR [ebp-0x668],ecx
   118a3:	mov    DWORD PTR [ebp-0x664],ecx
   118a9:	mov    DWORD PTR [ebp-0x660],ecx
   118af:	mov    DWORD PTR [ebp-0x65c],ecx
   118b5:	mov    DWORD PTR [ebp-0x658],ecx
   118bb:	mov    DWORD PTR [ebp-0x654],ecx
   118c1:	mov    DWORD PTR [ebp-0x650],ecx
   118c7:	mov    DWORD PTR [ebp-0x64c],ecx
   118cd:	mov    DWORD PTR [ebp-0x648],ecx
   118d3:	mov    DWORD PTR [ebp-0x644],ecx
   118d9:	mov    DWORD PTR [ebp-0x640],ecx
   118df:	mov    DWORD PTR [ebp-0x63c],ecx
   118e5:	mov    DWORD PTR [ebp-0x638],ecx
   118eb:	mov    DWORD PTR [ebp-0x634],ecx
   118f1:	mov    DWORD PTR [ebp-0x630],ecx
   118f7:	mov    DWORD PTR [ebp-0x62c],ecx
   118fd:	mov    DWORD PTR [ebp-0x628],ecx
   11903:	mov    DWORD PTR [ebp-0x624],ecx
   11909:	mov    DWORD PTR [ebp-0x620],ecx
   1190f:	mov    DWORD PTR [ebp-0x61c],ecx
   11915:	mov    DWORD PTR [ebp-0x618],ecx
   1191b:	mov    DWORD PTR [ebp-0x614],ecx
   11921:	mov    DWORD PTR [ebp-0x610],ecx
   11927:	mov    DWORD PTR [ebp-0x60c],esi
   1192d:	mov    DWORD PTR [ebp-0x608],esi
   11933:	mov    DWORD PTR [ebp-0x604],esi
   11939:	mov    DWORD PTR [ebp-0x600],esi
   1193f:	mov    DWORD PTR [ebp-0x5fc],esi
   11945:	mov    DWORD PTR [ebp-0x5f8],esi
   1194b:	mov    DWORD PTR [ebp-0x5f4],esi
   11951:	mov    DWORD PTR [ebp-0x5f0],esi
   11957:	mov    DWORD PTR [ebp-0x5ec],esi
   1195d:	mov    DWORD PTR [ebp-0x5e8],esi
   11963:	mov    DWORD PTR [ebp-0x5e4],esi
   11969:	mov    DWORD PTR [ebp-0x5e0],esi
   1196f:	mov    DWORD PTR [ebp-0x5dc],esi
   11975:	mov    DWORD PTR [ebp-0x5d8],esi
   1197b:	mov    DWORD PTR [ebp-0x5d4],esi
   11981:	mov    DWORD PTR [ebp-0x5d0],esi
   11987:	mov    DWORD PTR [ebp-0x5cc],eax
   1198d:	mov    DWORD PTR [ebp-0x5c8],eax
   11993:	mov    DWORD PTR [ebp-0x5c4],eax
   11999:	mov    DWORD PTR [ebp-0x5c0],eax
   1199f:	mov    DWORD PTR [ebp-0x5bc],eax
   119a5:	mov    DWORD PTR [ebp-0x5b8],eax
   119ab:	mov    DWORD PTR [ebp-0x5b4],eax
   119b1:	mov    DWORD PTR [ebp-0x5b0],eax
   119b7:	mov    DWORD PTR [ebp-0x5ac],eax
   119bd:	mov    DWORD PTR [ebp-0x5a8],eax
   119c3:	mov    DWORD PTR [ebp-0x5a4],eax
   119c9:	mov    DWORD PTR [ebp-0x5a0],eax
   119cf:	mov    DWORD PTR [ebp-0x59c],eax
   119d5:	mov    DWORD PTR [ebp-0x598],eax
   119db:	mov    DWORD PTR [ebp-0x594],eax
   119e1:	mov    DWORD PTR [ebp-0x590],eax
   119e7:	mov    DWORD PTR [ebp-0x58c],edx
   119ed:	mov    DWORD PTR [ebp-0x588],edx
   119f3:	mov    DWORD PTR [ebp-0x584],edx
   119f9:	mov    DWORD PTR [ebp-0x580],eax
   119ff:	mov    DWORD PTR [ebp-0x57c],ebx
   11a05:	mov    DWORD PTR [ebp-0x578],eax
   11a0b:	mov    DWORD PTR [ebp-0x574],ecx
   11a11:	mov    DWORD PTR [ebp-0x570],ecx
   11a17:	mov    DWORD PTR [ebp-0x56c],edx
   11a1d:	mov    DWORD PTR [ebp-0x568],edx
   11a23:	mov    DWORD PTR [ebp-0x564],edx
   11a29:	mov    DWORD PTR [ebp-0x560],eax
   11a2f:	mov    DWORD PTR [ebp-0x55c],ebx
   11a35:	mov    DWORD PTR [ebp-0x558],eax
   11a3b:	mov    DWORD PTR [ebp-0x554],ecx
   11a41:	mov    DWORD PTR [ebp-0x550],eax
   11a47:	mov    DWORD PTR [ebp-0x54c],eax
   11a4d:	mov    DWORD PTR [ebp-0x548],eax
   11a53:	mov    DWORD PTR [ebp-0x544],eax
   11a59:	mov    DWORD PTR [ebp-0x540],eax
   11a5f:	mov    DWORD PTR [ebp-0x53c],eax
   11a65:	mov    DWORD PTR [ebp-0x538],eax
   11a6b:	mov    DWORD PTR [ebp-0x534],eax
   11a71:	mov    DWORD PTR [ebp-0x530],eax
   11a77:	mov    DWORD PTR [ebp-0x52c],ecx
   11a7d:	mov    DWORD PTR [ebp-0x528],ecx
   11a83:	mov    DWORD PTR [ebp-0x524],ebx
   11a89:	mov    DWORD PTR [ebp-0x520],eax
   11a8f:	mov    DWORD PTR [ebp-0x51c],eax
   11a95:	mov    DWORD PTR [ebp-0x518],eax
   11a9b:	mov    DWORD PTR [ebp-0x514],eax
   11aa1:	mov    DWORD PTR [ebp-0x510],eax
   11aa7:	mov    DWORD PTR [ebp-0x50c],eax
   11aad:	mov    DWORD PTR [ebp-0x508],eax
   11ab3:	mov    DWORD PTR [ebp-0x504],ecx
   11ab9:	mov    DWORD PTR [ebp-0x500],ecx
   11abf:	mov    DWORD PTR [ebp-0x4fc],ecx
   11ac5:	mov    DWORD PTR [ebp-0x4f8],ecx
   11acb:	mov    DWORD PTR [ebp-0x4f4],ecx
   11ad1:	mov    DWORD PTR [ebp-0x4f0],ecx
   11ad7:	mov    DWORD PTR [ebp-0x4ec],edx
   11add:	mov    DWORD PTR [ebp-0x4e8],edx
   11ae3:	mov    DWORD PTR [ebp-0x4e4],edx
   11ae9:	mov    DWORD PTR [ebp-0x4e0],edx
   11aef:	mov    DWORD PTR [ebp-0x4dc],edx
   11af5:	mov    DWORD PTR [ebp-0x4d8],edx
   11afb:	mov    DWORD PTR [ebp-0x4d4],edx
   11b01:	mov    DWORD PTR [ebp-0x4d0],edx
   11b07:	mov    DWORD PTR [ebp-0x4cc],ecx
   11b0d:	mov    DWORD PTR [ebp-0x4c8],ecx
   11b13:	mov    DWORD PTR [ebp-0x4c4],ecx
   11b19:	mov    DWORD PTR [ebp-0x4c0],ecx
   11b1f:	mov    DWORD PTR [ebp-0x4bc],ecx
   11b25:	mov    DWORD PTR [ebp-0x4b8],ecx
   11b2b:	mov    DWORD PTR [ebp-0x4b4],ecx
   11b31:	mov    DWORD PTR [ebp-0x4b0],ecx
   11b37:	mov    DWORD PTR [ebp-0x4ac],ecx
   11b3d:	mov    DWORD PTR [ebp-0x4a8],ecx
   11b43:	mov    DWORD PTR [ebp-0x4a4],ecx
   11b49:	mov    DWORD PTR [ebp-0x4a0],ecx
   11b4f:	mov    DWORD PTR [ebp-0x49c],ecx
   11b55:	mov    DWORD PTR [ebp-0x498],ecx
   11b5b:	mov    DWORD PTR [ebp-0x494],ecx
   11b61:	mov    DWORD PTR [ebp-0x490],ecx
   11b67:	mov    DWORD PTR [ebp-0x48c],ecx
   11b6d:	mov    DWORD PTR [ebp-0x488],ecx
   11b73:	mov    DWORD PTR [ebp-0x484],ecx
   11b79:	mov    DWORD PTR [ebp-0x480],ecx
   11b7f:	mov    DWORD PTR [ebp-0x47c],ecx
   11b85:	mov    DWORD PTR [ebp-0x478],ecx
   11b8b:	mov    DWORD PTR [ebp-0x474],ecx
   11b91:	mov    DWORD PTR [ebp-0x470],ecx
   11b97:	mov    DWORD PTR [ebp-0x46c],ecx
   11b9d:	mov    DWORD PTR [ebp-0x468],ecx
   11ba3:	mov    DWORD PTR [ebp-0x464],ecx
   11ba9:	mov    DWORD PTR [ebp-0x460],ecx
   11baf:	mov    DWORD PTR [ebp-0x45c],ecx
   11bb5:	mov    DWORD PTR [ebp-0x458],ecx
   11bbb:	mov    DWORD PTR [ebp-0x454],ecx
   11bc1:	mov    DWORD PTR [ebp-0x450],ecx
   11bc7:	mov    DWORD PTR [ebp-0x44c],ecx
   11bcd:	mov    DWORD PTR [ebp-0x448],ecx
   11bd3:	mov    DWORD PTR [ebp-0x444],ecx
   11bd9:	mov    DWORD PTR [ebp-0x440],ecx
   11bdf:	mov    DWORD PTR [ebp-0x43c],ecx
   11be5:	mov    DWORD PTR [ebp-0x438],ecx
   11beb:	mov    DWORD PTR [ebp-0x434],ecx
   11bf1:	mov    DWORD PTR [ebp-0x430],ecx
   11bf7:	mov    DWORD PTR [ebp-0x42c],ecx
   11bfd:	mov    DWORD PTR [ebp-0x428],ecx
   11c03:	mov    DWORD PTR [ebp-0x424],ecx
   11c09:	mov    DWORD PTR [ebp-0x420],ecx
   11c0f:	mov    DWORD PTR [ebp-0x41c],ecx
   11c15:	mov    DWORD PTR [ebp-0x418],ecx
   11c1b:	mov    DWORD PTR [ebp-0x414],ecx
   11c21:	mov    DWORD PTR [ebp-0x410],ecx
   11c27:	mov    esi,DWORD PTR [ebp-0xc]
   11c2a:	mov    bl,BYTE PTR [esi]
   11c2c:	mov    esi,DWORD PTR [ebp-0x8]
   11c2f:	inc    DWORD PTR [ebp-0xc]
   11c32:	mov    BYTE PTR [ebp-0x1],bl
   11c35:	movzx  ebx,bl
   11c38:	or     esi,DWORD PTR [ebp+ebx*4-0x40c]
   11c3f:	mov    DWORD PTR [ebp-0x8],esi
   11c42:	test   esi,0x2000
   11c48:	mov    esi,DWORD PTR [ebp-0xc]
   11c4b:	je     0x11c67
   11c4d:	mov    bl,BYTE PTR [esi]
   11c4f:	and    bl,0x38
   11c52:	neg    bl
   11c54:	sbb    ebx,ebx
   11c56:	and    ebx,0xfffff000
   11c5c:	add    ebx,0x1800
   11c62:	mov    DWORD PTR [ebp-0x8],ebx
   11c65:	jmp    0x11c6a
   11c67:	mov    ebx,DWORD PTR [ebp-0x8]
   11c6a:	test   bh,0x40
   11c6d:	je     0x11c85
   11c6f:	mov    bl,BYTE PTR [esi]
   11c71:	mov    BYTE PTR [ebp-0x1],bl
   11c74:	movzx  ebx,bl
   11c77:	mov    ebx,DWORD PTR [ebp+ebx*4-0x80c]
   11c7e:	inc    esi
   11c7f:	mov    DWORD PTR [ebp-0xc],esi
   11c82:	mov    DWORD PTR [ebp-0x8],ebx
   11c85:	cmp    DWORD PTR [ebp-0x8],ecx
   11c88:	je     0x11c9a
   11c8a:	mov    ebx,DWORD PTR [ebp-0x8]
   11c8d:	test   bl,0x1
   11c90:	je     0x11ca4
   11c92:	and    ebx,0xfffffffe
   11c95:	mov    DWORD PTR [ebp-0x8],ebx
   11c98:	jmp    0x11c27
   11c9a:	mov    eax,DWORD PTR [ebp+0xc]
   11c9d:	mov    DWORD PTR [eax],ecx
   11c9f:	jmp    0x11d74
   11ca4:	test   edi,ebx
   11ca6:	je     0x11cb6
   11ca8:	test   BYTE PTR [ebp-0x1],0x1
   11cac:	je     0x11cb3
   11cae:	or     ebx,0x8
   11cb1:	jmp    0x11cb6
   11cb3:	or     ebx,0x10
   11cb6:	test   eax,ebx
   11cb8:	mov    edi,0x200
   11cbd:	je     0x11d1e
   11cbf:	mov    al,BYTE PTR [esi]
   11cc1:	mov    cl,al
   11cc3:	and    cl,0xc0
   11cc6:	inc    esi
   11cc7:	and    al,0x7
   11cc9:	cmp    cl,0xc0
   11ccc:	je     0x11d1e
   11cce:	test   bl,0x4
   11cd1:	je     0x11cf1
   11cd3:	cmp    cl,dl
   11cd5:	jne    0x11cdd
   11cd7:	cmp    al,0x6
   11cd9:	jne    0x11d1e
   11cdb:	or     ebx,edi
   11cdd:	cmp    cl,0x40
   11ce0:	jne    0x11ce8
   11ce2:	or     ebx,0x100
   11ce8:	cmp    cl,0x80
   11ceb:	jne    0x11d1e
   11ced:	or     ebx,edi
   11cef:	jmp    0x11d1e
   11cf1:	cmp    cl,0x40
   11cf4:	jne    0x11cfc
   11cf6:	or     ebx,0x100
   11cfc:	cmp    cl,0x80
   11cff:	jne    0x11d07
   11d01:	or     ebx,0x400
   11d07:	cmp    al,0x4
   11d09:	jne    0x11d10
   11d0b:	mov    al,BYTE PTR [esi]
   11d0d:	and    al,0x7
   11d0f:	inc    esi
   11d10:	cmp    al,0x5
   11d12:	jne    0x11d1e
   11d14:	cmp    cl,dl
   11d16:	jne    0x11d1e
   11d18:	or     ebx,0x400
   11d1e:	test   bl,bl
   11d20:	jns    0x11d31
   11d22:	test   bl,0x4
   11d25:	je     0x11d2b
   11d27:	or     ebx,edi
   11d29:	jmp    0x11d31
   11d2b:	or     ebx,0x400
   11d31:	test   bl,0x8
   11d34:	je     0x11d43
   11d36:	test   bl,0x2
   11d39:	je     0x11d40
   11d3b:	or     ebx,0x20
   11d3e:	jmp    0x11d43
   11d40:	or     ebx,0x40
   11d43:	test   bh,0x1
   11d46:	je     0x11d49
   11d48:	inc    esi
   11d49:	test   edi,ebx
   11d4b:	je     0x11d4f
   11d4d:	inc    esi
   11d4e:	inc    esi
   11d4f:	test   bh,0x4
   11d52:	je     0x11d57
   11d54:	add    esi,0x4
   11d57:	test   bl,0x10
   11d5a:	je     0x11d5d
   11d5c:	inc    esi
   11d5d:	test   bl,0x20
   11d60:	je     0x11d64
   11d62:	inc    esi
   11d63:	inc    esi
   11d64:	test   bl,0x40
   11d67:	je     0x11d6c
   11d69:	add    esi,0x4
   11d6c:	sub    esi,DWORD PTR [ebp+0x8]
   11d6f:	mov    eax,DWORD PTR [ebp+0xc]
   11d72:	mov    DWORD PTR [eax],esi
   11d74:	pop    edi
   11d75:	pop    esi
   11d76:	pop    ebx
   11d77:	leave  
   11d78:	ret    0x8
   11d7b:	int3   
   11d7c:	push   0x8
   11d7e:	push   0x1b120
   11d83:	call   0x1a338
   11d88:	and    DWORD PTR [ebp-0x4],0x0
   11d8c:	mov    eax,DWORD PTR [ebp+0x10]
   11d8f:	shr    eax,1
   11d91:	push   eax
   11d92:	push   DWORD PTR [ebp+0xc]
   11d95:	push   DWORD PTR [ebp+0x8]
   11d98:	call   DWORD PTR ds:0x1b118
   11d9e:	add    esp,0xc
   11da1:	neg    eax
   11da3:	sbb    al,al
   11da5:	inc    al
   11da7:	or     DWORD PTR [ebp-0x4],0xffffffff
   11dab:	jmp    0x11dba
   11dad:	xor    eax,eax
   11daf:	inc    eax
   11db0:	ret    
   11db1:	mov    esp,DWORD PTR [ebp-0x18]
   11db4:	or     DWORD PTR [ebp-0x4],0xffffffff
   11db8:	xor    al,al
   11dba:	call   0x1a373
   11dbf:	ret    0xc
   11dc2:	dec    edi
   11dc3:	bound  ecx,QWORD PTR [edi+0x70]
   11dc6:	outs   dx,BYTE PTR gs:[esi]
   11dc8:	dec    edi
   11dc9:	bound  ebp,QWORD PTR [edx+0x65]
   11dcc:	arpl   WORD PTR [edx+eax*2+0x79],si
   11dd0:	dec    esi
   11dd1:	popa   
   11dd2:	ins    DWORD PTR es:[edi],dx
   11dd3:	and    BYTE PTR gs:[ebp+0x52],al
   11dd7:	push   edx
   11dd8:	dec    edi
   11dd9:	push   edx
   11dda:	and    BYTE PTR [edx],bh
   11ddc:	and    BYTE PTR [eax],dh
   11dde:	js     0x11e05
   11de0:	cmp    BYTE PTR cs:[eax+0xa],bh
   11de4:	add    BYTE PTR [eax],al
   11de6:	dec    edi
   11de7:	bound  edx,QWORD PTR [edx+0x65]
   11dea:	data16 gs jb 0x11e53
   11dee:	outs   dx,BYTE PTR ds:[esi]
   11def:	arpl   WORD PTR [ebp+0x4f],sp
   11df2:	bound  ebp,QWORD PTR [edx+0x65]
   11df5:	arpl   WORD PTR [edx+eax*2+0x79],si
   11df9:	dec    eax
   11dfa:	popa   
   11dfb:	outs   dx,BYTE PTR ds:[esi]
   11dfc:	fs ins BYTE PTR es:[edi],dx
   11dfe:	and    BYTE PTR gs:[ebp+0x52],al
   11e02:	push   edx
   11e03:	dec    edi
   11e04:	push   edx
   11e05:	and    BYTE PTR [edx],bh
   11e07:	and    BYTE PTR [eax],dh
   11e09:	js     0x11e30
   11e0b:	cmp    BYTE PTR cs:[eax+0xa],bh
   11e0f:	add    BYTE PTR [eax],al
   11e11:	add    BYTE PTR [eax+0x69],cl
   11e14:	fs gs dec edi
   11e17:	bound  ebp,QWORD PTR [edx+0x65]
   11e1a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   11e1e:	and    BYTE PTR [edx],bh
   11e20:	and    BYTE PTR [edi+0x62],cl
   11e23:	push   0x65
   11e25:	arpl   WORD PTR [eax+eiz*1+0x64],si
   11e29:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   11e30:	jns    0x11e52
   11e32:	outs   dx,BYTE PTR gs:[esi]
   11e34:	je     0x11ea8
   11e36:	jns    0x11e58
   11e38:	jne    0x11ea8
   11e3a:	ins    BYTE PTR es:[edi],dx
   11e3b:	imul   ebp,DWORD PTR [esi+0x6b],0xa6465
   11e42:	dec    eax
   11e43:	imul   esp,DWORD PTR [ebp+eiz*2+0x4f],0x63656a62
   11e4b:	je     0x11e75
   11e4d:	sub    DWORD PTR [eax],esp
   11e4f:	cmp    ah,BYTE PTR [eax]
   11e51:	dec    edi
   11e52:	bound  ebp,QWORD PTR [edx+0x65]
   11e55:	arpl   WORD PTR [eax+eiz*1+0x64],si
   11e59:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   11e60:	jns    0x11e82
   11e62:	outs   dx,BYTE PTR gs:[esi]
   11e64:	je     0x11ed8
   11e66:	jns    0x11e88
   11e68:	jne    0x11ed8
   11e6a:	ins    BYTE PTR es:[edi],dx
   11e6b:	imul   ebp,DWORD PTR [esi+0x6b],0xa6465
   11e72:	push   ebp
   11e73:	mov    ebp,esp
   11e75:	sub    esp,0x30
   11e78:	push   ebx
   11e79:	push   DWORD PTR [ebp+0x8]
   11e7c:	xor    ebx,ebx
   11e7e:	lea    eax,[ebp-0x18]
   11e81:	push   eax
   11e82:	mov    DWORD PTR [ebp-0x10],ebx
   11e85:	mov    DWORD PTR [ebp-0xc],ebx
   11e88:	mov    BYTE PTR [ebp-0x1],bl
   11e8b:	call   DWORD PTR ds:0x1b01c
   11e91:	lea    eax,[ebp-0x18]
   11e94:	mov    DWORD PTR [ebp-0x28],eax
   11e97:	lea    eax,[ebp-0x10]
   11e9a:	push   eax
   11e9b:	push   ebx
   11e9c:	push   0x80000000
   11ea1:	push   ebx
   11ea2:	push   ebx
   11ea3:	push   ebx
   11ea4:	lea    eax,[ebp-0x30]
   11ea7:	push   eax
   11ea8:	mov    DWORD PTR [ebp-0x30],0x18
   11eaf:	mov    DWORD PTR [ebp-0x2c],ebx
   11eb2:	mov    DWORD PTR [ebp-0x24],0x40
   11eb9:	mov    DWORD PTR [ebp-0x20],ebx
   11ebc:	mov    DWORD PTR [ebp-0x1c],ebx
   11ebf:	call   DWORD PTR ds:0x1b018
   11ec5:	cmp    eax,ebx
   11ec7:	jge    0x11ed1
   11ec9:	push   eax
   11eca:	push   0x11dc2
   11ecf:	jmp    0x11eec
   11ed1:	push   ebx
   11ed2:	lea    eax,[ebp-0xc]
   11ed5:	push   eax
   11ed6:	push   ebx
   11ed7:	push   ebx
   11ed8:	push   ebx
   11ed9:	push   DWORD PTR [ebp-0x10]
   11edc:	call   DWORD PTR ds:0x1b014
   11ee2:	cmp    eax,ebx
   11ee4:	jge    0x11ef8
   11ee6:	push   eax
   11ee7:	push   0x11de6
   11eec:	call   0x1a38a
   11ef1:	pop    ecx
   11ef2:	pop    ecx
   11ef3:	jmp    0x11fea
   11ef8:	mov    cl,0x1
   11efa:	call   DWORD PTR ds:0x1b000
   11f00:	push   esi
   11f01:	mov    BYTE PTR [ebp+0xb],al
   11f04:	mov    DWORD PTR [ebp-0x8],ebx
   11f07:	push   edi
   11f08:	cmp    BYTE PTR [ebp-0x1],bl
   11f0b:	jne    0x11fdf
   11f11:	mov    eax,DWORD PTR [ebp-0xc]
   11f14:	mov    ecx,DWORD PTR [ebp-0x8]
   11f17:	mov    esi,DWORD PTR [eax+ecx*4]
   11f1a:	cmp    esi,ebx
   11f1c:	je     0x11faf
   11f22:	mov    eax,DWORD PTR [esi+0x4]
   11f25:	mov    cl,BYTE PTR [eax-0xc]
   11f28:	sub    eax,0x18
   11f2b:	cmp    cl,bl
   11f2d:	je     0x11f94
   11f2f:	movzx  ecx,cl
   11f32:	sub    eax,ecx
   11f34:	je     0x11f94
   11f36:	mov    ecx,DWORD PTR [eax+0x4]
   11f39:	mov    eax,DWORD PTR [eax+0x8]
   11f3c:	movzx  ecx,cx
   11f3f:	push   ecx
   11f40:	push   DWORD PTR [ebp+0xc]
   11f43:	push   eax
   11f44:	call   0x11d7c
   11f49:	test   al,al
   11f4b:	je     0x11f94
   11f4d:	mov    ecx,DWORD PTR [ebp-0x8]
   11f50:	mov    eax,DWORD PTR [ebp-0xc]
   11f53:	shl    ecx,0x2
   11f56:	lea    edx,[ecx+eax*1]
   11f59:	mov    eax,DWORD PTR [edx]
   11f5b:	mov    eax,DWORD PTR [eax]
   11f5d:	mov    DWORD PTR [edx],eax
   11f5f:	mov    edx,DWORD PTR [ebp-0xc]
   11f62:	mov    ecx,DWORD PTR [ecx+edx*1]
   11f65:	jmp    0x11fc6
   11f67:	mov    eax,DWORD PTR [edi+0x4]
   11f6a:	mov    cl,BYTE PTR [eax-0xc]
   11f6d:	sub    eax,0x18
   11f70:	cmp    cl,bl
   11f72:	je     0x11f92
   11f74:	movzx  ecx,cl
   11f77:	sub    eax,ecx
   11f79:	je     0x11f92
   11f7b:	mov    ecx,DWORD PTR [eax+0x4]
   11f7e:	mov    eax,DWORD PTR [eax+0x8]
   11f81:	movzx  ecx,cx
   11f84:	push   ecx
   11f85:	push   DWORD PTR [ebp+0xc]
   11f88:	push   eax
   11f89:	call   0x11d7c
   11f8e:	test   al,al
   11f90:	jne    0x11f9c
   11f92:	mov    esi,DWORD PTR [esi]
   11f94:	mov    edi,DWORD PTR [esi]
   11f96:	cmp    edi,ebx
   11f98:	jne    0x11f67
   11f9a:	jmp    0x11faf
   11f9c:	mov    eax,DWORD PTR [edi]
   11f9e:	push   0x11e12
   11fa3:	mov    DWORD PTR [esi],eax
   11fa5:	call   0x1a38a
   11faa:	pop    ecx
   11fab:	mov    BYTE PTR [ebp-0x1],0x1
   11faf:	inc    DWORD PTR [ebp-0x8]
   11fb2:	cmp    DWORD PTR [ebp-0x8],0x25
   11fb6:	jb     0x11f08
   11fbc:	jmp    0x11fdf
   11fbe:	mov    edx,DWORD PTR [eax]
   11fc0:	mov    DWORD PTR [ecx],edx
   11fc2:	mov    eax,DWORD PTR [eax]
   11fc4:	mov    ecx,edx
   11fc6:	cmp    eax,ebx
   11fc8:	jne    0x11fbe
   11fca:	cmp    ecx,ebx
   11fcc:	je     0x11fd0
   11fce:	mov    DWORD PTR [ecx],ebx
   11fd0:	push   0x11e42
   11fd5:	call   0x1a38a
   11fda:	pop    ecx
   11fdb:	mov    BYTE PTR [ebp-0x1],0x1
   11fdf:	mov    cl,BYTE PTR [ebp+0xb]
   11fe2:	call   DWORD PTR ds:0x1b004
   11fe8:	pop    edi
   11fe9:	pop    esi
   11fea:	mov    ecx,DWORD PTR [ebp-0xc]
   11fed:	cmp    ecx,ebx
   11fef:	je     0x11ff7
   11ff1:	call   DWORD PTR ds:0x1b084
   11ff7:	cmp    DWORD PTR [ebp-0x10],ebx
   11ffa:	pop    ebx
   11ffb:	je     0x12006
   11ffd:	push   DWORD PTR [ebp-0x10]
   12000:	call   DWORD PTR ds:0x1b10c
   12006:	mov    al,BYTE PTR [ebp-0x1]
   12009:	leave  
   1200a:	ret    0x8
   1200d:	int3   
   1200e:	push   edx
   1200f:	inc    ecx
   12010:	dec    ebp
   12011:	inc    esp
   12012:	dec    ecx
   12013:	push   ebx
   12014:	dec    ebx
   12015:	cmp    ah,BYTE PTR [eax]
   12017:	add    BYTE PTR [eax],al
   12019:	add    BYTE PTR [ecx+0x4f],cl
   1201c:	inc    ebx
   1201d:	je     0x1208b
   1201f:	sub    eax,0x204e4920
   12024:	or     al,BYTE PTR [eax]
   12026:	arpl   WORD PTR [edx],di
   12028:	pop    esp
   12029:	jne    0x1209e
   1202b:	gs jb  0x120a1
   1202e:	pop    esp
   1202f:	jbe    0x12092
   12031:	ins    BYTE PTR es:[edi],dx
   12032:	jne    0x12099
   12034:	je     0x120a8
   12036:	popa   
   12037:	data16 imul sp,WORD PTR [ebx+0x5c],0x6f77
   1203e:	jb     0x120ab
   12040:	pop    esp
   12041:	fs gs jbe 0x120a1
   12045:	jo     0x120b9
   12047:	outs   dx,DWORD PTR ds:[esi]
   12048:	push   0x65
   1204a:	arpl   WORD PTR [esp+ebx*2+0x76],si
   1204e:	je     0x120ac
   12050:	push   0x72657667
   12055:	jae    0x120c0
   12057:	outs   dx,DWORD PTR ds:[esi]
   12058:	outs   dx,BYTE PTR ds:[esi]
   12059:	pop    esp
   1205a:	arpl   WORD PTR [ecx+ebp*2+0x65],bp
   1205e:	outs   dx,BYTE PTR ds:[esi]
   1205f:	je     0x120bd
   12061:	jae    0x120d5
   12063:	arpl   WORD PTR [esp+eiz*2+0x72],bx
   12067:	imul   esi,DWORD PTR [esi+0x65],0x61725c72
   1206e:	ins    DWORD PTR es:[edi],dx
   1206f:	imul   esi,DWORD PTR fs:[ebx+0x6b],0x5200632e
   12077:	inc    ecx
   12078:	dec    ebp
   12079:	inc    esp
   1207a:	dec    ecx
   1207b:	push   ebx
   1207c:	dec    ebx
   1207d:	cmp    ah,BYTE PTR [eax]
   1207f:	add    BYTE PTR [eax],al
   12081:	add    BYTE PTR [ecx+0x63],al
   12084:	jno    0x120fb
   12086:	imul   esi,DWORD PTR [edx+0x65],0x6d655220
   1208d:	outs   dx,DWORD PTR ds:[esi]
   1208e:	jbe    0x120f5
   12090:	dec    esp
   12091:	outs   dx,DWORD PTR ds:[esi]
   12092:	arpl   WORD PTR [ebx+0x20],bp
   12095:	popaw  
   12097:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x5200000a
   1209f:	inc    ecx
   120a0:	dec    ebp
   120a1:	inc    esp
   120a2:	dec    ecx
   120a3:	push   ebx
   120a4:	dec    ebx
   120a5:	cmp    ah,BYTE PTR [eax]
   120a7:	add    BYTE PTR [eax],al
   120a9:	add    BYTE PTR [ebp+0x6e],dl
   120ac:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   120b0:	outs   dx,BYTE PTR ds:[esi]
   120b1:	and    BYTE PTR [ecx+0x4f],cl
   120b4:	inc    ebx
   120b5:	push   esp
   120b6:	dec    esp
   120b7:	and    BYTE PTR [ebx+0x6f],ah
   120ba:	ins    DWORD PTR es:[edi],dx
   120bb:	ins    DWORD PTR es:[edi],dx
   120bc:	popa   
   120bd:	outs   dx,BYTE PTR ds:[esi]
   120be:	and    BYTE PTR fs:0xa58,ah
   120c5:	add    BYTE PTR [edx+0x41],dl
   120c8:	dec    ebp
   120c9:	inc    esp
   120ca:	dec    ecx
   120cb:	push   ebx
   120cc:	dec    ebx
   120cd:	cmp    ah,BYTE PTR [eax]
   120cf:	add    BYTE PTR [eax],al
   120d1:	add    BYTE PTR [ecx+0x4f],cl
   120d4:	inc    ebx
   120d5:	push   esp
   120d6:	dec    esp
   120d7:	pop    edi
   120d8:	inc    esp
   120d9:	dec    ecx
   120da:	push   ebx
   120db:	dec    ebx
   120dc:	pop    edi
   120dd:	inc    ebx
   120de:	dec    eax
   120df:	inc    ebp
   120e0:	inc    ebx
   120e1:	dec    ebx
   120e2:	pop    edi
   120e3:	push   esi
   120e4:	inc    ebp
   120e5:	push   edx
   120e6:	dec    ecx
   120e7:	inc    esi
   120e8:	pop    ecx
   120e9:	and    BYTE PTR [edx],cl
   120eb:	add    BYTE PTR [eax],al
   120ed:	add    BYTE PTR [edx+0x41],dl
   120f0:	dec    ebp
   120f1:	inc    esp
   120f2:	dec    ecx
   120f3:	push   ebx
   120f4:	dec    ebx
   120f5:	cmp    ah,BYTE PTR [eax]
   120f7:	add    BYTE PTR [eax],al
   120f9:	add    BYTE PTR [ecx+0x4f],cl
   120fc:	inc    ebx
   120fd:	push   esp
   120fe:	dec    esp
   120ff:	pop    edi
   12100:	inc    esp
   12101:	dec    ecx
   12102:	push   ebx
   12103:	dec    ebx
   12104:	pop    edi
   12105:	inc    edi
   12106:	inc    ebp
   12107:	push   esp
   12108:	pop    edi
   12109:	push   eax
   1210a:	inc    ecx
   1210b:	push   edx
   1210c:	push   esp
   1210d:	dec    ecx
   1210e:	push   esp
   1210f:	dec    ecx
   12110:	dec    edi
   12111:	dec    esi
   12112:	pop    edi
   12113:	dec    ecx
   12114:	dec    esi
   12115:	inc    esi
   12116:	dec    edi
   12117:	and    BYTE PTR [edx],cl
   12119:	add    BYTE PTR [edx+0x41],dl
   1211c:	dec    ebp
   1211d:	inc    esp
   1211e:	dec    ecx
   1211f:	push   ebx
   12120:	dec    ebx
   12121:	cmp    ah,BYTE PTR [eax]
   12123:	add    BYTE PTR [eax],al
   12125:	add    BYTE PTR [edi+0x75],cl
   12128:	je     0x1219a
   1212a:	jne    0x121a0
   1212c:	and    BYTE PTR [edx+0x75],ah
   1212f:	data16 data16 gs jb 0x12154
   12134:	je     0x121a5
   12136:	outs   dx,DWORD PTR ds:[esi]
   12137:	and    BYTE PTR [ebx+0x6d],dh
   1213a:	popa   
   1213b:	ins    BYTE PTR es:[edi],dx
   1213c:	ins    BYTE PTR es:[edi],dx
   1213d:	cs cs and BYTE PTR cs:[edx],cl
   12142:	add    BYTE PTR [eax],al
   12144:	add    BYTE PTR [eax],al
   12146:	push   edx
   12147:	inc    ecx
   12148:	dec    ebp
   12149:	inc    esp
   1214a:	dec    ecx
   1214b:	push   ebx
   1214c:	dec    ebx
   1214d:	cmp    ah,BYTE PTR [eax]
   1214f:	add    BYTE PTR [eax],al
   12151:	add    BYTE PTR [ecx+0x4f],cl
   12154:	inc    ebx
   12155:	push   esp
   12156:	dec    esp
   12157:	pop    edi
   12158:	inc    esp
   12159:	dec    ecx
   1215a:	push   ebx
   1215b:	dec    ebx
   1215c:	pop    edi
   1215d:	dec    ecx
   1215e:	push   ebx
   1215f:	pop    edi
   12160:	push   edi
   12161:	push   edx
   12162:	dec    ecx
   12163:	push   esp
   12164:	inc    ecx
   12165:	inc    edx
   12166:	dec    esp
   12167:	inc    ebp
   12168:	and    BYTE PTR [edx],cl
   1216a:	add    BYTE PTR [eax],al
   1216c:	add    BYTE PTR [eax],al
   1216e:	push   edx
   1216f:	inc    ecx
   12170:	dec    ebp
   12171:	inc    esp
   12172:	dec    ecx
   12173:	push   ebx
   12174:	dec    ebx
   12175:	cmp    ah,BYTE PTR [eax]
   12177:	add    BYTE PTR [eax],al
   12179:	add    BYTE PTR [ecx+0x4f],cl
   1217c:	inc    ebx
   1217d:	push   esp
   1217e:	dec    esp
   1217f:	pop    edi
   12180:	inc    esp
   12181:	dec    ecx
   12182:	push   ebx
   12183:	dec    ebx
   12184:	pop    edi
   12185:	inc    edi
   12186:	inc    ebp
   12187:	push   esp
   12188:	pop    edi
   12189:	inc    esp
   1218a:	push   edx
   1218b:	dec    ecx
   1218c:	push   esi
   1218d:	inc    ebp
   1218e:	pop    edi
   1218f:	inc    edi
   12190:	inc    ebp
   12191:	dec    edi
   12192:	dec    ebp
   12193:	inc    ebp
   12194:	push   esp
   12195:	push   edx
   12196:	pop    ecx
   12197:	and    BYTE PTR [edx],cl
   12199:	add    BYTE PTR [edx+0x41],dl
   1219c:	dec    ebp
   1219d:	inc    esp
   1219e:	dec    ecx
   1219f:	push   ebx
   121a0:	dec    ebx
   121a1:	cmp    ah,BYTE PTR [eax]
   121a3:	add    BYTE PTR [eax],al
   121a5:	add    BYTE PTR [ecx+0x4f],cl
   121a8:	inc    ebx
   121a9:	je     0x12217
   121ab:	sub    eax,0x54554f20
   121b0:	and    BYTE PTR [edx],cl
   121b2:	add    ah,cl
   121b4:	push   ebp
   121b5:	mov    ebp,esp
   121b7:	push   ecx
   121b8:	push   ecx
   121b9:	mov    eax,DWORD PTR [ebp+0x8]
   121bc:	and    DWORD PTR [ebp-0x4],0x0
   121c0:	push   ebx
   121c1:	push   esi
   121c2:	mov    esi,DWORD PTR [eax+0x28]
   121c5:	push   edi
   121c6:	push   0x1200e
   121cb:	call   0x1a38a
   121d0:	mov    DWORD PTR [esp],0x1201a
   121d7:	call   0x1a38a
   121dc:	mov    ebx,DWORD PTR [ebp+0xc]
   121df:	pop    ecx
   121e0:	push   0x18
   121e2:	push   0x129
   121e7:	push   0x12026
   121ec:	lea    eax,[esi+0x8]
   121ef:	push   ebx
   121f0:	push   eax
   121f1:	mov    DWORD PTR [ebp-0x8],eax
   121f4:	call   DWORD PTR ds:0x1b02c
   121fa:	mov    edi,eax
   121fc:	test   edi,edi
   121fe:	jge    0x1222f
   12200:	push   0x12076
   12205:	call   0x1a38a
   1220a:	mov    DWORD PTR [esp],0x12082
   12211:	call   0x1a38a
   12216:	and    DWORD PTR [ebx+0x1c],0x0
   1221a:	pop    ecx
   1221b:	xor    dl,dl
   1221d:	mov    ecx,ebx
   1221f:	mov    DWORD PTR [ebx+0x18],edi
   12222:	call   DWORD PTR ds:0x1b020
   12228:	mov    eax,edi
   1222a:	jmp    0x123a4
   1222f:	mov    edi,DWORD PTR [ebx+0x60]
   12232:	mov    eax,DWORD PTR [edi+0xc]
   12235:	mov    DWORD PTR [ebp+0x8],eax
   12238:	sub    eax,0x70000
   1223d:	je     0x12337
   12243:	sub    eax,0x24
   12246:	je     0x1231e
   1224c:	sub    eax,0x3fe0
   12251:	je     0x12294
   12253:	sub    eax,0x7fc
   12258:	je     0x1227e
   1225a:	push   0x1209e
   1225f:	call   0x1a38a
   12264:	push   DWORD PTR [ebp+0x8]
   12267:	push   0x120aa
   1226c:	call   0x1a38a
   12271:	add    esp,0xc
   12274:	mov    esi,0xc0000010
   12279:	jmp    0x1236c
   1227e:	push   0x120c6
   12283:	call   0x1a38a
   12288:	mov    DWORD PTR [esp],0x120d2
   1228f:	jmp    0x1232f
   12294:	push   0x120ee
   12299:	call   0x1a38a
   1229e:	mov    DWORD PTR [esp],0x120fa
   122a5:	call   0x1a38a
   122aa:	pop    ecx
   122ab:	push   0x20
   122ad:	pop    edx
   122ae:	cmp    DWORD PTR [edi+0x4],edx
   122b1:	jae    0x122db
   122b3:	push   0x1211a
   122b8:	call   0x1a38a
   122bd:	mov    DWORD PTR [esp],0x12126
   122c4:	call   0x1a38a
   122c9:	pop    ecx
   122ca:	mov    esi,0xc0000023
   122cf:	mov    DWORD PTR [ebp-0x4],0x20
   122d6:	jmp    0x1236c
   122db:	mov    ecx,DWORD PTR [esi+0x24]
   122de:	cmp    BYTE PTR [ecx+0x3a],0x36
   122e2:	mov    eax,DWORD PTR [ebx+0xc]
   122e5:	setne  cl
   122e8:	dec    cl
   122ea:	and    cl,0x3
   122ed:	inc    cl
   122ef:	mov    BYTE PTR [eax+0x18],cl
   122f2:	xor    ecx,ecx
   122f4:	mov    BYTE PTR [eax+0x19],0x0
   122f8:	mov    BYTE PTR [eax+0x1a],0x1
   122fc:	mov    BYTE PTR [eax+0x1b],0x0
   12300:	mov    DWORD PTR [eax],ecx
   12302:	mov    DWORD PTR [eax+0x4],ecx
   12305:	mov    esi,DWORD PTR [esi+0x40]
   12308:	or     DWORD PTR [eax+0x14],0xffffffff
   1230c:	mov    DWORD PTR [eax+0x8],esi
   1230f:	mov    DWORD PTR [eax+0xc],ecx
   12312:	mov    DWORD PTR [eax+0x10],0x1
   12319:	mov    DWORD PTR [ebp-0x4],edx
   1231c:	jmp    0x1236a
   1231e:	push   0x12146
   12323:	call   0x1a38a
   12328:	mov    DWORD PTR [esp],0x12152
   1232f:	call   0x1a38a
   12334:	pop    ecx
   12335:	jmp    0x1236a
   12337:	push   0x1216e
   1233c:	call   0x1a38a
   12341:	mov    DWORD PTR [esp],0x1217a
   12348:	call   0x1a38a
   1234d:	cmp    DWORD PTR [edi+0x4],0x18
   12351:	pop    ecx
   12352:	jb     0x122ca
   12358:	mov    edi,DWORD PTR [ebx+0xc]
   1235b:	push   0x6
   1235d:	add    esi,0x28
   12360:	pop    ecx
   12361:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12363:	mov    DWORD PTR [ebp-0x4],0x18
   1236a:	xor    esi,esi
   1236c:	mov    eax,DWORD PTR [ebp-0x4]
   1236f:	xor    dl,dl
   12371:	mov    ecx,ebx
   12373:	mov    DWORD PTR [ebx+0x18],esi
   12376:	mov    DWORD PTR [ebx+0x1c],eax
   12379:	call   DWORD PTR ds:0x1b020
   1237f:	push   0x18
   12381:	push   ebx
   12382:	push   DWORD PTR [ebp-0x8]
   12385:	call   DWORD PTR ds:0x1b028
   1238b:	push   0x1219a
   12390:	call   0x1a38a
   12395:	mov    DWORD PTR [esp],0x121a6
   1239c:	call   0x1a38a
   123a1:	pop    ecx
   123a2:	mov    eax,esi
   123a4:	pop    edi
   123a5:	pop    esi
   123a6:	pop    ebx
   123a7:	leave  
   123a8:	ret    0x8
   123ab:	int3   
   123ac:	push   edx
   123ad:	inc    ecx
   123ae:	dec    ebp
   123af:	inc    esp
   123b0:	dec    ecx
   123b1:	push   ebx
   123b2:	dec    ebx
   123b3:	cmp    ah,BYTE PTR [eax]
   123b5:	add    BYTE PTR [eax],al
   123b7:	add    BYTE PTR [edx+0x65],dl
   123ba:	popa   
   123bb:	fs push edi
   123bd:	jb     0x12428
   123bf:	je     0x12426
   123c1:	and    BYTE PTR ds:0x204e4920,ch
   123c7:	or     al,BYTE PTR [eax]
   123c9:	add    BYTE PTR [eax],al
   123cb:	add    BYTE PTR [edx+0x41],dl
   123ce:	dec    ebp
   123cf:	inc    esp
   123d0:	dec    ecx
   123d1:	push   ebx
   123d2:	dec    ebx
   123d3:	cmp    ah,BYTE PTR [eax]
   123d5:	add    BYTE PTR [eax],al
   123d7:	add    BYTE PTR [ebp+eiz*2+0x76],al
   123db:	imul   esp,DWORD PTR [ebx+0x65],0x746f6e20
   123e2:	and    BYTE PTR [edx+0x65],dh
   123e5:	popa   
   123e6:	fs jns 0x123f3
   123e9:	add    BYTE PTR [eax],al
   123eb:	add    BYTE PTR [ebx+0x3a],ah
   123ee:	pop    esp
   123ef:	jne    0x12464
   123f1:	gs jb  0x12467
   123f4:	pop    esp
   123f5:	jbe    0x12458
   123f7:	ins    BYTE PTR es:[edi],dx
   123f8:	jne    0x1245f
   123fa:	je     0x1246e
   123fc:	popa   
   123fd:	data16 imul sp,WORD PTR [ebx+0x5c],0x6f77
   12404:	jb     0x12471
   12406:	pop    esp
   12407:	fs gs jbe 0x12467
   1240b:	jo     0x1247f
   1240d:	outs   dx,DWORD PTR ds:[esi]
   1240e:	push   0x65
   12410:	arpl   WORD PTR [esp+ebx*2+0x76],si
   12414:	je     0x12472
   12416:	push   0x72657667
   1241b:	jae    0x12486
   1241d:	outs   dx,DWORD PTR ds:[esi]
   1241e:	outs   dx,BYTE PTR ds:[esi]
   1241f:	pop    esp
   12420:	arpl   WORD PTR [ecx+ebp*2+0x65],bp
   12424:	outs   dx,BYTE PTR ds:[esi]
   12425:	je     0x12483
   12427:	jae    0x1249b
   12429:	arpl   WORD PTR [esp+eiz*2+0x72],bx
   1242d:	imul   esi,DWORD PTR [esi+0x65],0x61725c72
   12434:	ins    DWORD PTR es:[edi],dx
   12435:	imul   esi,DWORD PTR fs:[ebx+0x6b],0x5200632e
   1243d:	inc    ecx
   1243e:	dec    ebp
   1243f:	inc    esp
   12440:	dec    ecx
   12441:	push   ebx
   12442:	dec    ebx
   12443:	cmp    ah,BYTE PTR [eax]
   12445:	add    BYTE PTR [eax],al
   12447:	add    BYTE PTR [ecx+0x63],al
   1244a:	jno    0x124c1
   1244c:	imul   esi,DWORD PTR [edx+0x65],0x6d655220
   12453:	outs   dx,DWORD PTR ds:[esi]
   12454:	jbe    0x124bb
   12456:	dec    esp
   12457:	outs   dx,DWORD PTR ds:[esi]
   12458:	arpl   WORD PTR [ebx+0x20],bp
   1245b:	popaw  
   1245d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x5200000a
   12465:	inc    ecx
   12466:	dec    ebp
   12467:	inc    esp
   12468:	dec    ecx
   12469:	push   ebx
   1246a:	dec    ebx
   1246b:	cmp    ah,BYTE PTR [eax]
   1246d:	add    BYTE PTR [eax],al
   1246f:	add    BYTE PTR [ebp+0x6e],dl
   12472:	popa   
   12473:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
   12477:	je     0x124e8
   12479:	and    BYTE PTR [edi+0x65],ah
   1247c:	je     0x1249e
   1247e:	je     0x124e8
   12480:	and    BYTE PTR gs:[ebx+0x79],dh
   12484:	jae    0x124fa
   12486:	gs ins DWORD PTR es:[edi],dx
   12488:	sub    eax,0x63617073
   1248d:	and    BYTE PTR gs:[esi+0x69],dh
   12491:	jb     0x12507
   12493:	jne    0x124f6
   12495:	ins    BYTE PTR es:[edi],dx
   12496:	and    BYTE PTR [ecx+0x64],ah
   12499:	fs jb  0x12501
   1249c:	jae    0x12511
   1249e:	or     al,BYTE PTR [eax]
   124a0:	push   edx
   124a1:	inc    ecx
   124a2:	dec    ebp
   124a3:	inc    esp
   124a4:	dec    ecx
   124a5:	push   ebx
   124a6:	dec    ebx
   124a7:	cmp    ah,BYTE PTR [eax]
   124a9:	add    BYTE PTR [eax],al
   124ab:	add    BYTE PTR [ecx+0x72],cl
   124ae:	jo     0x124d0
   124b0:	outs   dx,DWORD PTR ds:[esi]
   124b1:	data16 and BYTE PTR [edx+0x65],dl
   124b5:	jno    0x1252c
   124b7:	gs jae 0x1252e
   124ba:	cmp    ah,BYTE PTR [eax]
   124bc:	and    eax,0x6d560a78
   124c1:	gs ins DWORD PTR es:[edi],dx
   124c3:	and    BYTE PTR [ecx+0x64],al
   124c6:	fs jb  0x1252e
   124c9:	jae    0x1253e
   124cb:	and    BYTE PTR [edi+0x66],ch
   124ce:	and    BYTE PTR [edx+esi*2+0x61],dl
   124d2:	outs   dx,BYTE PTR ds:[esi]
   124d3:	jae    0x1253b
   124d5:	gs jb  0x12512
   124d8:	and    BYTE PTR ds:0x202d2078,ah
   124de:	and    eax,0x654c0a78
   124e3:	outs   dx,BYTE PTR ds:[esi]
   124e4:	addr16 je 0x1254f
   124e7:	and    BYTE PTR [edi+0x66],ch
   124ea:	and    BYTE PTR [edx+esi*2+0x61],dl
   124ee:	outs   dx,BYTE PTR ds:[esi]
   124ef:	jae    0x12557
   124f1:	gs jb  0x1252e
   124f4:	and    BYTE PTR ds:0x704f0a64,ah
   124fa:	gs jb  0x1255e
   124fd:	je     0x12568
   124ff:	outs   dx,DWORD PTR ds:[esi]
   12500:	outs   dx,BYTE PTR ds:[esi]
   12501:	cmp    ah,BYTE PTR [eax]
   12503:	and    eax,0x74530a78
   12508:	popa   
   12509:	jb     0x1257f
   1250b:	imul   ebp,DWORD PTR [esi+0x67],0x74794220
   12512:	gs dec edi
   12514:	data16 data16 jae 0x1257d
   12518:	je     0x12554
   1251a:	and    BYTE PTR ds:0xa78,ah
   12520:	push   edx
   12521:	inc    ecx
   12522:	dec    ebp
   12523:	inc    esp
   12524:	dec    ecx
   12525:	push   ebx
   12526:	dec    ebx
   12527:	cmp    ah,BYTE PTR [eax]
   12529:	add    BYTE PTR [eax],al
   1252b:	add    BYTE PTR [edx+0x65],dl
   1252e:	popa   
   1252f:	fs push edi
   12531:	jb     0x1259c
   12533:	je     0x1259a
   12535:	and    BYTE PTR ds:0x54554f20,ch
   1253b:	and    BYTE PTR [edx],cl
   1253d:	add    BYTE PTR [eax],al
   1253f:	add    BYTE PTR [edx+0x41],dl
   12542:	dec    ebp
   12543:	inc    esp
   12544:	dec    ecx
   12545:	push   ebx
   12546:	dec    ebx
   12547:	cmp    ah,BYTE PTR [eax]
   12549:	add    BYTE PTR [eax],al
   1254b:	add    BYTE PTR [ebp+0x72],al
   1254e:	jb     0x125bf
   12550:	jb     0x12572
   12552:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   12559:	and    BYTE PTR [eax+0x61],dh
   1255c:	jb     0x125bf
   1255e:	ins    DWORD PTR es:[edi],dx
   1255f:	gs je  0x125c7
   12562:	jb     0x1256e
   12564:	inc    edx
   12565:	jns    0x125db
   12567:	gs dec edi
   12569:	data16 data16 jae 0x125d2
   1256d:	je     0x125a9
   1256f:	and    BYTE PTR ds:0x654c0a78,ah
   12575:	outs   dx,BYTE PTR ds:[esi]
   12576:	addr16 je 0x125e1
   12579:	cmp    ah,BYTE PTR [eax]
   1257b:	and    eax,0x704f0a64
   12580:	gs jb  0x125e4
   12583:	je     0x125ee
   12585:	outs   dx,DWORD PTR ds:[esi]
   12586:	outs   dx,BYTE PTR ds:[esi]
   12587:	cmp    ah,BYTE PTR [eax]
   12589:	and    eax,0xcc000a78
   1258e:	push   ebp
   1258f:	mov    ebp,esp
   12591:	sub    esp,0x14
   12594:	mov    eax,DWORD PTR [ebp+0x8]
   12597:	push   ebx
   12598:	mov    ebx,DWORD PTR [eax+0x28]
   1259b:	push   esi
   1259c:	push   edi
   1259d:	push   0x123ac
   125a2:	mov    DWORD PTR [ebp+0x8],ebx
   125a5:	call   0x1a38a
   125aa:	mov    DWORD PTR [esp],0x123b8
   125b1:	call   0x1a38a
   125b6:	cmp    DWORD PTR [ebx+0x4],0x1
   125ba:	mov    edi,DWORD PTR [ebp+0xc]
   125bd:	pop    ecx
   125be:	je     0x125ec
   125c0:	push   0x123cc
   125c5:	call   0x1a38a
   125ca:	mov    DWORD PTR [esp],0x123d8
   125d1:	call   0x1a38a
   125d6:	and    DWORD PTR [edi+0x1c],0x0
   125da:	pop    ecx
   125db:	xor    dl,dl
   125dd:	mov    ecx,edi
   125df:	mov    DWORD PTR [edi+0x18],0xc0000184
   125e6:	call   DWORD PTR ds:0x1b020
   125ec:	push   0x18
   125ee:	push   0x1c8
   125f3:	push   0x123ec
   125f8:	lea    eax,[ebx+0x8]
   125fb:	push   edi
   125fc:	push   eax
   125fd:	mov    DWORD PTR [ebp-0x4],eax
   12600:	call   DWORD PTR ds:0x1b02c
   12606:	mov    esi,eax
   12608:	test   esi,esi
   1260a:	jge    0x12639
   1260c:	push   0x1243c
   12611:	call   0x1a38a
   12616:	mov    DWORD PTR [esp],0x12448
   1261d:	call   0x1a38a
   12622:	and    DWORD PTR [edi+0x1c],0x0
   12626:	pop    ecx
   12627:	xor    dl,dl
   12629:	mov    ecx,edi
   1262b:	mov    DWORD PTR [edi+0x18],esi
   1262e:	call   DWORD PTR ds:0x1b020
   12634:	jmp    0x127de
   12639:	mov    esi,DWORD PTR [edi+0x60]
   1263c:	mov    eax,DWORD PTR [esi+0x4]
   1263f:	add    eax,DWORD PTR [esi+0xc]
   12642:	mov    ebx,DWORD PTR [ebx+0x40]
   12645:	push   0x0
   12647:	pop    ecx
   12648:	adc    ecx,DWORD PTR [esi+0x10]
   1264b:	xor    edx,edx
   1264d:	cmp    ecx,edx
   1264f:	mov    DWORD PTR [ebp-0xc],eax
   12652:	mov    DWORD PTR [ebp-0x8],ecx
   12655:	mov    DWORD PTR [ebp-0x14],ebx
   12658:	jne    0x12674
   1265a:	mov    edx,DWORD PTR [ebp+0x8]
   1265d:	mov    edx,DWORD PTR [edx+0x40]
   12660:	mov    DWORD PTR [ebp-0xc],edx
   12663:	xor    edx,edx
   12665:	cmp    eax,DWORD PTR [ebp-0xc]
   12668:	mov    DWORD PTR [ebp-0x10],ecx
   1266b:	mov    DWORD PTR [ebp-0x8],edx
   1266e:	ja     0x12798
   12674:	mov    edx,DWORD PTR [ebp+0x8]
   12677:	mov    DWORD PTR [ebp-0x14],eax
   1267a:	mov    eax,DWORD PTR [edx+0x40]
   1267d:	mov    DWORD PTR [ebp-0x14],eax
   12680:	xor    eax,eax
   12682:	cmp    ecx,eax
   12684:	jg     0x12798
   1268a:	mov    ecx,DWORD PTR [edx+0x3c]
   1268d:	mov    eax,DWORD PTR [esi+0x4]
   12690:	dec    ecx
   12691:	test   eax,ecx
   12693:	jne    0x12798
   12699:	mov    eax,DWORD PTR [edi+0x4]
   1269c:	test   BYTE PTR [eax+0x6],0x5
   126a0:	je     0x126aa
   126a2:	mov    ebx,DWORD PTR [eax+0xc]
   126a5:	mov    DWORD PTR [ebp+0xc],ebx
   126a8:	jmp    0x126bf
   126aa:	push   0x10
   126ac:	xor    ecx,ecx
   126ae:	push   ecx
   126af:	push   ecx
   126b0:	push   0x1
   126b2:	push   ecx
   126b3:	push   eax
   126b4:	call   DWORD PTR ds:0x1b034
   126ba:	mov    DWORD PTR [ebp+0xc],eax
   126bd:	mov    ebx,eax
   126bf:	test   ebx,ebx
   126c1:	jne    0x12700
   126c3:	and    DWORD PTR [edi+0x1c],ebx
   126c6:	mov    esi,0xc000009a
   126cb:	xor    dl,dl
   126cd:	mov    ecx,edi
   126cf:	mov    DWORD PTR [edi+0x18],esi
   126d2:	call   DWORD PTR ds:0x1b020
   126d8:	push   0x18
   126da:	push   edi
   126db:	push   DWORD PTR [ebp-0x4]
   126de:	call   DWORD PTR ds:0x1b028
   126e4:	push   0x12464
   126e9:	call   0x1a38a
   126ee:	mov    DWORD PTR [esp],0x12470
   126f5:	call   0x1a38a
   126fa:	pop    ecx
   126fb:	jmp    0x127de
   12700:	push   0x124a0
   12705:	call   0x1a38a
   1270a:	push   DWORD PTR [esi+0xc]
   1270d:	movzx  ecx,BYTE PTR [esi]
   12710:	mov    eax,DWORD PTR [esi+0x4]
   12713:	push   ecx
   12714:	push   eax
   12715:	add    eax,ebx
   12717:	push   eax
   12718:	push   ebx
   12719:	push   edi
   1271a:	push   0x124ac
   1271f:	call   0x1a38a
   12724:	movzx  eax,BYTE PTR [esi]
   12727:	mov    ebx,DWORD PTR [esi+0x4]
   1272a:	add    esp,0x20
   1272d:	sub    eax,0x3
   12730:	je     0x12749
   12732:	dec    eax
   12733:	je     0x12739
   12735:	xor    ebx,ebx
   12737:	jmp    0x12760
   12739:	mov    eax,DWORD PTR [ebp+0x8]
   1273c:	mov    eax,DWORD PTR [eax+0x24]
   1273f:	add    eax,DWORD PTR [esi+0xc]
   12742:	push   ebx
   12743:	push   DWORD PTR [ebp+0xc]
   12746:	push   eax
   12747:	jmp    0x12757
   12749:	mov    eax,DWORD PTR [ebp+0x8]
   1274c:	mov    eax,DWORD PTR [eax+0x24]
   1274f:	add    eax,DWORD PTR [esi+0xc]
   12752:	push   ebx
   12753:	push   eax
   12754:	push   DWORD PTR [ebp+0xc]
   12757:	call   DWORD PTR ds:0x1b030
   1275d:	add    esp,0xc
   12760:	and    DWORD PTR [edi+0x18],0x0
   12764:	xor    dl,dl
   12766:	mov    ecx,edi
   12768:	mov    DWORD PTR [edi+0x1c],ebx
   1276b:	call   DWORD PTR ds:0x1b020
   12771:	push   0x18
   12773:	push   edi
   12774:	push   DWORD PTR [ebp-0x4]
   12777:	call   DWORD PTR ds:0x1b028
   1277d:	push   0x12520
   12782:	call   0x1a38a
   12787:	mov    DWORD PTR [esp],0x1252c
   1278e:	call   0x1a38a
   12793:	pop    ecx
   12794:	xor    eax,eax
   12796:	jmp    0x127e0
   12798:	push   0x12540
   1279d:	call   0x1a38a
   127a2:	movzx  eax,BYTE PTR [esi]
   127a5:	push   eax
   127a6:	push   DWORD PTR [esi+0x4]
   127a9:	push   DWORD PTR [esi+0x10]
   127ac:	push   DWORD PTR [esi+0xc]
   127af:	push   0x1254c
   127b4:	call   0x1a38a
   127b9:	and    DWORD PTR [edi+0x1c],0x0
   127bd:	mov    esi,0xc000000d
   127c2:	add    esp,0x18
   127c5:	xor    dl,dl
   127c7:	mov    ecx,edi
   127c9:	mov    DWORD PTR [edi+0x18],esi
   127cc:	call   DWORD PTR ds:0x1b020
   127d2:	push   0x18
   127d4:	push   edi
   127d5:	push   DWORD PTR [ebp-0x4]
   127d8:	call   DWORD PTR ds:0x1b028
   127de:	mov    eax,esi
   127e0:	pop    edi
   127e1:	pop    esi
   127e2:	pop    ebx
   127e3:	leave  
   127e4:	ret    0x8
   127e7:	int3   
   127e8:	push   esi
   127e9:	push   edi
   127ea:	mov    edi,0x1b204
   127ef:	push   edi
   127f0:	mov    esi,ecx
   127f2:	call   0x19b20
   127f7:	push   edi
   127f8:	lea    ecx,[esi+0x4]
   127fb:	call   0x19b20
   12800:	push   edi
   12801:	lea    ecx,[esi+0x8]
   12804:	call   0x19b20
   12809:	push   edi
   1280a:	lea    ecx,[esi+0xc]
   1280d:	call   0x19b20
   12812:	xor    eax,eax
   12814:	mov    DWORD PTR [esi+0x10],eax
   12817:	mov    DWORD PTR [esi+0x20],eax
   1281a:	mov    DWORD PTR [esi+0x24],eax
   1281d:	pop    edi
   1281e:	mov    eax,esi
   12820:	pop    esi
   12821:	ret    
   12822:	push   esi
   12823:	push   0x20
   12825:	push   0x61737973
   1282a:	push   DWORD PTR [esp+0x10]
   1282e:	push   0x1
   12830:	call   DWORD PTR ds:0x1b04c
   12836:	mov    esi,eax
   12838:	test   esi,esi
   1283a:	jne    0x12847
   1283c:	push   0xc000009a
   12841:	call   DWORD PTR ds:0x1b048
   12847:	mov    eax,esi
   12849:	pop    esi
   1284a:	ret    
   1284b:	int3   
   1284c:	cmp    DWORD PTR [esp+0x4],0x0
   12851:	je     0x1285f
   12853:	push   0x0
   12855:	push   DWORD PTR [esp+0x8]
   12859:	call   DWORD PTR ds:0x1b024
   1285f:	ret    
   12860:	push   esi
   12861:	mov    esi,ecx
   12863:	dec    DWORD PTR [esi+0x4]
   12866:	jne    0x12877
   12868:	push   DWORD PTR [esi]
   1286a:	call   0x1284c
   1286f:	push   esi
   12870:	call   0x1284c
   12875:	pop    ecx
   12876:	pop    ecx
   12877:	pop    esi
   12878:	ret    
   12879:	int3   
   1287a:	inc    edi
   1287b:	gs je  0x128ce
   1287e:	jb     0x128ef
   12880:	arpl   WORD PTR [ebp+0x73],sp
   12883:	jae    0x128ce
   12885:	ins    DWORD PTR es:[edi],dx
   12886:	popa   
   12887:	addr16 gs dec esi
   1288a:	popa   
   1288b:	ins    DWORD PTR es:[edi],dx
   1288c:	and    BYTE PTR gs:[ebx+0x74],dh
   12890:	popa   
   12891:	je     0x12908
   12893:	jae    0x128b5
   12895:	xor    BYTE PTR [eax+0x25],bh
   12898:	js     0x128ba
   1289a:	or     al,BYTE PTR [eax]
   1289c:	add    BYTE PTR [eax],al
   1289e:	inc    edi
   1289f:	gs je  0x128f2
   128a2:	jb     0x12913
   128a4:	arpl   WORD PTR [ebp+0x73],sp
   128a7:	jae    0x128f2
   128a9:	ins    DWORD PTR es:[edi],dx
   128aa:	popa   
   128ab:	addr16 gs dec esi
   128ae:	popa   
   128af:	ins    DWORD PTR es:[edi],dx
   128b0:	and    BYTE PTR gs:[ebp+0x72],ah
   128b4:	jb     0x12925
   128b6:	jb     0x128d8
   128b8:	xor    BYTE PTR [eax+0x25],bh
   128bb:	js     0x128dd
   128bd:	or     al,BYTE PTR [eax]
   128bf:	int3   
   128c0:	push   ebp
   128c1:	mov    ebp,esp
   128c3:	push   ecx
   128c4:	push   ecx
   128c5:	mov    eax,ds:0x83118
   128ca:	push   esi
   128cb:	mov    esi,DWORD PTR ds:0x1b050
   128d1:	push   edi
   128d2:	mov    DWORD PTR [ebp-0x4],eax
   128d5:	lea    eax,[ebp-0x8]
   128d8:	push   eax
   128d9:	push   0x0
   128db:	push   0x0
   128dd:	push   0x1b
   128df:	push   DWORD PTR [ebp+0x8]
   128e2:	call   esi
   128e4:	mov    edi,eax
   128e6:	push   edi
   128e7:	push   0x1287a
   128ec:	call   0x1a38a
   128f1:	cmp    edi,0xc0000004
   128f7:	pop    ecx
   128f8:	pop    ecx
   128f9:	je     0x1290c
   128fb:	push   edi
   128fc:	push   0x1289e
   12901:	call   0x1a38a
   12906:	pop    ecx
   12907:	pop    ecx
   12908:	mov    eax,edi
   1290a:	jmp    0x1296c
   1290c:	mov    edx,DWORD PTR [ebp+0xc]
   1290f:	mov    ecx,DWORD PTR [ebp-0x8]
   12912:	movzx  edi,WORD PTR [edx+0x2]
   12916:	lea    eax,[ecx-0x8]
   12919:	cmp    edi,eax
   1291b:	jae    0x12927
   1291d:	mov    WORD PTR [edx],ax
   12920:	mov    eax,0x80000005
   12925:	jmp    0x1296c
   12927:	push   0x20736649
   1292c:	push   ecx
   1292d:	push   0x0
   1292f:	call   DWORD PTR ds:0x1b03c
   12935:	mov    edi,eax
   12937:	test   edi,edi
   12939:	jne    0x12942
   1293b:	mov    eax,0xc000009a
   12940:	jmp    0x1296c
   12942:	lea    eax,[ebp-0x8]
   12945:	push   eax
   12946:	push   DWORD PTR [ebp-0x8]
   12949:	push   edi
   1294a:	push   0x1b
   1294c:	push   DWORD PTR [ebp+0x8]
   1294f:	call   esi
   12951:	mov    esi,eax
   12953:	test   esi,esi
   12955:	jl     0x12961
   12957:	push   edi
   12958:	push   DWORD PTR [ebp+0xc]
   1295b:	call   DWORD PTR ds:0x1b038
   12961:	push   0x0
   12963:	push   edi
   12964:	call   DWORD PTR ds:0x1b024
   1296a:	mov    eax,esi
   1296c:	mov    ecx,DWORD PTR [ebp-0x4]
   1296f:	pop    edi
   12970:	pop    esi
   12971:	call   0x1a327
   12976:	leave  
   12977:	ret    0x8
   1297a:	push   ebp
   1297b:	mov    ebp,esp
   1297d:	sub    esp,0x18
   12980:	push   0x0
   12982:	push   0x18
   12984:	lea    eax,[ebp-0x18]
   12987:	push   eax
   12988:	push   0x0
   1298a:	push   DWORD PTR [ebp+0x8]
   1298d:	call   DWORD PTR ds:0x1b050
   12993:	test   eax,eax
   12995:	jl     0x1299c
   12997:	mov    eax,DWORD PTR [ebp-0x8]
   1299a:	jmp    0x1299e
   1299c:	xor    eax,eax
   1299e:	leave  
   1299f:	ret    0x4
   129a2:	push   esi
   129a3:	mov    esi,DWORD PTR [esp+0x8]
   129a7:	push   esi
   129a8:	call   DWORD PTR ds:0x1b054
   129ae:	cmp    eax,0xc
   129b1:	pop    ecx
   129b2:	jb     0x12a7c
   129b8:	lea    eax,[esi+eax*2-0x18]
   129bc:	mov    cx,WORD PTR [eax]
   129bf:	cmp    cx,0x69
   129c3:	je     0x129cf
   129c5:	cmp    cx,0x49
   129c9:	jne    0x12a7c
   129cf:	mov    cx,WORD PTR [eax+0x2]
   129d3:	push   0x45
   129d5:	pop    esi
   129d6:	push   0x65
   129d8:	pop    edx
   129d9:	cmp    cx,dx
   129dc:	je     0x129e7
   129de:	cmp    cx,si
   129e1:	jne    0x12a7c
   129e7:	mov    cx,WORD PTR [eax+0x4]
   129eb:	cmp    cx,0x78
   129ef:	je     0x129fb
   129f1:	cmp    cx,0x58
   129f5:	jne    0x12a7c
   129fb:	mov    cx,WORD PTR [eax+0x6]
   129ff:	cmp    cx,0x70
   12a03:	je     0x12a0b
   12a05:	cmp    cx,0x50
   12a09:	jne    0x12a7c
   12a0b:	mov    cx,WORD PTR [eax+0x8]
   12a0f:	cmp    cx,0x6c
   12a13:	je     0x12a1b
   12a15:	cmp    cx,0x4c
   12a19:	jne    0x12a7c
   12a1b:	mov    cx,WORD PTR [eax+0xa]
   12a1f:	cmp    cx,0x6f
   12a23:	je     0x12a2b
   12a25:	cmp    cx,0x4f
   12a29:	jne    0x12a7c
   12a2b:	mov    cx,WORD PTR [eax+0xc]
   12a2f:	cmp    cx,0x72
   12a33:	je     0x12a3b
   12a35:	cmp    cx,0x52
   12a39:	jne    0x12a7c
   12a3b:	mov    cx,WORD PTR [eax+0xe]
   12a3f:	cmp    cx,dx
   12a42:	je     0x12a49
   12a44:	cmp    cx,si
   12a47:	jne    0x12a7c
   12a49:	cmp    WORD PTR [eax+0x10],0x2e
   12a4e:	jne    0x12a7c
   12a50:	mov    cx,WORD PTR [eax+0x12]
   12a54:	cmp    cx,dx
   12a57:	je     0x12a5e
   12a59:	cmp    cx,si
   12a5c:	jne    0x12a7c
   12a5e:	mov    cx,WORD PTR [eax+0x14]
   12a62:	cmp    cx,0x78
   12a66:	je     0x12a6e
   12a68:	cmp    cx,0x58
   12a6c:	jne    0x12a7c
   12a6e:	mov    ax,WORD PTR [eax+0x16]
   12a72:	cmp    ax,dx
   12a75:	je     0x12a80
   12a77:	cmp    ax,si
   12a7a:	je     0x12a80
   12a7c:	xor    al,al
   12a7e:	jmp    0x12a82
   12a80:	mov    al,0x1
   12a82:	pop    esi
   12a83:	ret    0x4
   12a86:	push   esi
   12a87:	mov    esi,DWORD PTR [esp+0x8]
   12a8b:	push   esi
   12a8c:	call   DWORD PTR ds:0x1b054
   12a92:	cmp    eax,0xb
   12a95:	pop    ecx
   12a96:	jb     0x12b4e
   12a9c:	lea    eax,[esi+eax*2-0x16]
   12aa0:	mov    cx,WORD PTR [eax]
   12aa3:	cmp    cx,0x66
   12aa7:	je     0x12ab3
   12aa9:	cmp    cx,0x46
   12aad:	jne    0x12b4e
   12ab3:	mov    cx,WORD PTR [eax+0x2]
   12ab7:	cmp    cx,0x69
   12abb:	je     0x12ac7
   12abd:	cmp    cx,0x49
   12ac1:	jne    0x12b4e
   12ac7:	mov    cx,WORD PTR [eax+0x4]
   12acb:	cmp    cx,0x72
   12acf:	je     0x12ad7
   12ad1:	cmp    cx,0x52
   12ad5:	jne    0x12b4e
   12ad7:	mov    cx,WORD PTR [eax+0x6]
   12adb:	cmp    cx,0x65
   12adf:	je     0x12ae7
   12ae1:	cmp    cx,0x45
   12ae5:	jne    0x12b4e
   12ae7:	mov    cx,WORD PTR [eax+0x8]
   12aeb:	cmp    cx,0x66
   12aef:	je     0x12af7
   12af1:	cmp    cx,0x46
   12af5:	jne    0x12b4e
   12af7:	mov    cx,WORD PTR [eax+0xa]
   12afb:	cmp    cx,0x6f
   12aff:	je     0x12b07
   12b01:	cmp    cx,0x4f
   12b05:	jne    0x12b4e
   12b07:	mov    cx,WORD PTR [eax+0xc]
   12b0b:	cmp    cx,0x78
   12b0f:	je     0x12b17
   12b11:	cmp    cx,0x58
   12b15:	jne    0x12b4e
   12b17:	cmp    WORD PTR [eax+0xe],0x2e
   12b1c:	jne    0x12b4e
   12b1e:	mov    cx,WORD PTR [eax+0x10]
   12b22:	cmp    cx,0x65
   12b26:	je     0x12b2e
   12b28:	cmp    cx,0x45
   12b2c:	jne    0x12b4e
   12b2e:	mov    cx,WORD PTR [eax+0x12]
   12b32:	cmp    cx,0x78
   12b36:	je     0x12b3e
   12b38:	cmp    cx,0x58
   12b3c:	jne    0x12b4e
   12b3e:	mov    ax,WORD PTR [eax+0x14]
   12b42:	cmp    ax,0x65
   12b46:	je     0x12b52
   12b48:	cmp    ax,0x45
   12b4c:	je     0x12b52
   12b4e:	xor    al,al
   12b50:	jmp    0x12b54
   12b52:	mov    al,0x1
   12b54:	pop    esi
   12b55:	ret    0x4
   12b58:	push   esi
   12b59:	mov    esi,DWORD PTR [esp+0x8]
   12b5d:	push   esi
   12b5e:	call   DWORD PTR ds:0x1b054
   12b64:	cmp    eax,0xa
   12b67:	pop    ecx
   12b68:	jb     0x12c0c
   12b6e:	lea    eax,[esi+eax*2-0x14]
   12b72:	mov    cx,WORD PTR [eax]
   12b75:	cmp    cx,0x63
   12b79:	je     0x12b85
   12b7b:	cmp    cx,0x43
   12b7f:	jne    0x12c0c
   12b85:	mov    cx,WORD PTR [eax+0x2]
   12b89:	cmp    cx,0x68
   12b8d:	je     0x12b95
   12b8f:	cmp    cx,0x48
   12b93:	jne    0x12c0c
   12b95:	mov    cx,WORD PTR [eax+0x4]
   12b99:	cmp    cx,0x72
   12b9d:	je     0x12ba5
   12b9f:	cmp    cx,0x52
   12ba3:	jne    0x12c0c
   12ba5:	mov    cx,WORD PTR [eax+0x6]
   12ba9:	cmp    cx,0x6f
   12bad:	je     0x12bb5
   12baf:	cmp    cx,0x4f
   12bb3:	jne    0x12c0c
   12bb5:	mov    cx,WORD PTR [eax+0x8]
   12bb9:	cmp    cx,0x6d
   12bbd:	je     0x12bc5
   12bbf:	cmp    cx,0x4d
   12bc3:	jne    0x12c0c
   12bc5:	mov    cx,WORD PTR [eax+0xa]
   12bc9:	cmp    cx,0x65
   12bcd:	je     0x12bd5
   12bcf:	cmp    cx,0x45
   12bd3:	jne    0x12c0c
   12bd5:	cmp    WORD PTR [eax+0xc],0x2e
   12bda:	jne    0x12c0c
   12bdc:	mov    cx,WORD PTR [eax+0xe]
   12be0:	cmp    cx,0x65
   12be4:	je     0x12bec
   12be6:	cmp    cx,0x45
   12bea:	jne    0x12c0c
   12bec:	mov    cx,WORD PTR [eax+0x10]
   12bf0:	cmp    cx,0x78
   12bf4:	je     0x12bfc
   12bf6:	cmp    cx,0x58
   12bfa:	jne    0x12c0c
   12bfc:	mov    ax,WORD PTR [eax+0x12]
   12c00:	cmp    ax,0x65
   12c04:	je     0x12c10
   12c06:	cmp    ax,0x45
   12c0a:	je     0x12c10
   12c0c:	xor    al,al
   12c0e:	jmp    0x12c12
   12c10:	mov    al,0x1
   12c12:	pop    esi
   12c13:	ret    0x4
   12c16:	push   esi
   12c17:	mov    esi,DWORD PTR [esp+0x8]
   12c1b:	push   esi
   12c1c:	call   DWORD PTR ds:0x1b054
   12c22:	cmp    eax,0x9
   12c25:	pop    ecx
   12c26:	jb     0x12cb6
   12c2c:	lea    eax,[esi+eax*2-0x12]
   12c30:	mov    cx,WORD PTR [eax]
   12c33:	cmp    cx,0x6d
   12c37:	je     0x12c3f
   12c39:	cmp    cx,0x4d
   12c3d:	jne    0x12cb6
   12c3f:	mov    cx,WORD PTR [eax+0x2]
   12c43:	cmp    cx,0x73
   12c47:	je     0x12c4f
   12c49:	cmp    cx,0x53
   12c4d:	jne    0x12cb6
   12c4f:	mov    cx,WORD PTR [eax+0x4]
   12c53:	cmp    cx,0x68
   12c57:	je     0x12c5f
   12c59:	cmp    cx,0x48
   12c5d:	jne    0x12cb6
   12c5f:	mov    cx,WORD PTR [eax+0x6]
   12c63:	cmp    cx,0x74
   12c67:	je     0x12c6f
   12c69:	cmp    cx,0x54
   12c6d:	jne    0x12cb6
   12c6f:	mov    cx,WORD PTR [eax+0x8]
   12c73:	cmp    cx,0x61
   12c77:	je     0x12c7f
   12c79:	cmp    cx,0x41
   12c7d:	jne    0x12cb6
   12c7f:	cmp    WORD PTR [eax+0xa],0x2e
   12c84:	jne    0x12cb6
   12c86:	mov    cx,WORD PTR [eax+0xc]
   12c8a:	cmp    cx,0x65
   12c8e:	je     0x12c96
   12c90:	cmp    cx,0x45
   12c94:	jne    0x12cb6
   12c96:	mov    cx,WORD PTR [eax+0xe]
   12c9a:	cmp    cx,0x78
   12c9e:	je     0x12ca6
   12ca0:	cmp    cx,0x58
   12ca4:	jne    0x12cb6
   12ca6:	mov    ax,WORD PTR [eax+0x10]
   12caa:	cmp    ax,0x65
   12cae:	je     0x12cba
   12cb0:	cmp    ax,0x45
   12cb4:	je     0x12cba
   12cb6:	xor    al,al
   12cb8:	jmp    0x12cbc
   12cba:	mov    al,0x1
   12cbc:	pop    esi
   12cbd:	ret    0x4
   12cc0:	push   esi
   12cc1:	mov    esi,DWORD PTR [esp+0x8]
   12cc5:	push   esi
   12cc6:	call   0x129a2
   12ccb:	test   al,al
   12ccd:	je     0x12cd4
   12ccf:	xor    eax,eax
   12cd1:	inc    eax
   12cd2:	jmp    0x12cfe
   12cd4:	push   esi
   12cd5:	call   0x12a86
   12cda:	test   al,al
   12cdc:	je     0x12ce3
   12cde:	push   0x2
   12ce0:	pop    eax
   12ce1:	jmp    0x12cfe
   12ce3:	push   esi
   12ce4:	call   0x12b58
   12ce9:	test   al,al
   12ceb:	je     0x12cf1
   12ced:	push   0x3
   12cef:	jmp    0x12ce0
   12cf1:	push   esi
   12cf2:	call   0x12c16
   12cf7:	neg    al
   12cf9:	sbb    eax,eax
   12cfb:	and    eax,0x4
   12cfe:	pop    esi
   12cff:	ret    0x4
   12d02:	push   ebp
   12d03:	mov    ebp,esp
   12d05:	sub    esp,0x10
   12d08:	and    WORD PTR [ebp-0x8],0x0
   12d0d:	push   esi
   12d0e:	push   edi
   12d0f:	xor    eax,eax
   12d11:	lea    edi,[ebp-0x6]
   12d14:	stos   DWORD PTR es:[edi],eax
   12d15:	stos   WORD PTR es:[edi],ax
   12d17:	mov    eax,DWORD PTR [ebp+0xc]
   12d1a:	push   eax
   12d1b:	mov    DWORD PTR [ebp-0x4],eax
   12d1e:	call   DWORD PTR ds:0x1b054
   12d24:	mov    esi,DWORD PTR [ebp+0x8]
   12d27:	mov    dx,WORD PTR [esi]
   12d2a:	pop    ecx
   12d2b:	mov    ecx,eax
   12d2d:	shl    ecx,1
   12d2f:	cmp    dx,cx
   12d32:	mov    WORD PTR [ebp-0x8],cx
   12d36:	mov    WORD PTR [ebp-0x6],cx
   12d3a:	jb     0x12d79
   12d3c:	xor    eax,eax
   12d3e:	lea    edi,[ebp-0xe]
   12d41:	stos   DWORD PTR es:[edi],eax
   12d42:	stos   WORD PTR es:[edi],ax
   12d44:	mov    WORD PTR [ebp-0x10],cx
   12d48:	mov    WORD PTR [ebp-0xe],cx
   12d4c:	movzx  eax,dx
   12d4f:	movzx  ecx,cx
   12d52:	sub    eax,ecx
   12d54:	mov    ecx,DWORD PTR [esi+0x4]
   12d57:	cdq    
   12d58:	sub    eax,edx
   12d5a:	sar    eax,1
   12d5c:	lea    eax,[ecx+eax*2]
   12d5f:	mov    DWORD PTR [ebp-0xc],eax
   12d62:	push   0x1
   12d64:	lea    eax,[ebp-0x8]
   12d67:	push   eax
   12d68:	lea    eax,[ebp-0x10]
   12d6b:	push   eax
   12d6c:	call   DWORD PTR ds:0x1b058
   12d72:	neg    eax
   12d74:	sbb    eax,eax
   12d76:	inc    eax
   12d77:	jmp    0x12d7b
   12d79:	xor    al,al
   12d7b:	pop    edi
   12d7c:	pop    esi
   12d7d:	leave  
   12d7e:	ret    0x8
   12d81:	int3   
   12d82:	dec    ebx
   12d83:	gs push edi
   12d85:	popa   
   12d86:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   12d8e:	gs js  0x12de0
   12d91:	bound  ebp,QWORD PTR [edx+0x65]
   12d94:	arpl   WORD PTR [eax+ebp*1+0x29],si
   12d98:	and    BYTE PTR [ebp+0x52],al
   12d9b:	push   edx
   12d9c:	dec    edi
   12d9d:	push   edx
   12d9e:	and    BYTE PTR [edx],bh
   12da0:	and    BYTE PTR [eax],dh
   12da2:	js     0x12dc9
   12da4:	cmp    BYTE PTR cs:[eax+0xa],bh
   12da8:	add    ah,cl
   12daa:	push   ebx
   12dab:	push   esi
   12dac:	xor    esi,esi
   12dae:	push   esi
   12daf:	push   esi
   12db0:	push   esi
   12db1:	push   esi
   12db2:	mov    ebx,0x83170
   12db7:	push   ebx
   12db8:	call   DWORD PTR ds:0x1b060
   12dbe:	cmp    eax,esi
   12dc0:	jge    0x12dd3
   12dc2:	push   eax
   12dc3:	push   0x12d82
   12dc8:	call   0x1a38a
   12dcd:	pop    ecx
   12dce:	pop    ecx
   12dcf:	xor    al,al
   12dd1:	jmp    0x12df7
   12dd3:	mov    eax,DWORD PTR [esp+0xc]
   12dd7:	push   edi
   12dd8:	mov    edi,DWORD PTR [esp+0x14]
   12ddc:	push   0x5
   12dde:	pop    ecx
   12ddf:	lea    esi,[eax+eax*4]
   12de2:	push   0x0
   12de4:	lea    esi,[esi*4+0x833b0]
   12deb:	push   ebx
   12dec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12dee:	call   DWORD PTR ds:0x1b05c
   12df4:	mov    al,0x1
   12df6:	pop    edi
   12df7:	pop    esi
   12df8:	pop    ebx
   12df9:	ret    0x8
   12dfc:	dec    ebx
   12dfd:	gs push edi
   12dff:	popa   
   12e00:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   12e08:	gs js  0x12e5a
   12e0b:	bound  ebp,QWORD PTR [edx+0x65]
   12e0e:	arpl   WORD PTR [eax+ebp*1+0x29],si
   12e12:	and    BYTE PTR [ebp+0x52],al
   12e15:	push   edx
   12e16:	dec    edi
   12e17:	push   edx
   12e18:	and    BYTE PTR [edx],bh
   12e1a:	and    BYTE PTR [eax],dh
   12e1c:	js     0x12e43
   12e1e:	cmp    BYTE PTR cs:[eax+0xa],bh
   12e22:	add    ah,cl
   12e24:	push   ebx
   12e25:	push   esi
   12e26:	xor    esi,esi
   12e28:	push   esi
   12e29:	push   esi
   12e2a:	push   esi
   12e2b:	push   esi
   12e2c:	mov    ebx,0x83170
   12e31:	push   ebx
   12e32:	call   DWORD PTR ds:0x1b060
   12e38:	cmp    eax,esi
   12e3a:	jge    0x12e4b
   12e3c:	push   eax
   12e3d:	push   0x12dfc
   12e42:	call   0x1a38a
   12e47:	pop    ecx
   12e48:	pop    ecx
   12e49:	jmp    0x12e6d
   12e4b:	mov    eax,DWORD PTR [esp+0xc]
   12e4f:	mov    esi,DWORD PTR [esp+0x10]
   12e53:	push   edi
   12e54:	push   0x5
   12e56:	pop    ecx
   12e57:	lea    edi,[eax+eax*4]
   12e5a:	push   0x0
   12e5c:	lea    edi,[edi*4+0x833b0]
   12e63:	push   ebx
   12e64:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12e66:	call   DWORD PTR ds:0x1b05c
   12e6c:	pop    edi
   12e6d:	pop    esi
   12e6e:	pop    ebx
   12e6f:	ret    0x8
   12e72:	push   ebp
   12e73:	mov    ebp,esp
   12e75:	sub    esp,0x14
   12e78:	and    DWORD PTR [ebp-0x14],0x0
   12e7c:	push   edi
   12e7d:	xor    eax,eax
   12e7f:	lea    edi,[ebp-0x10]
   12e82:	stos   DWORD PTR es:[edi],eax
   12e83:	stos   DWORD PTR es:[edi],eax
   12e84:	stos   DWORD PTR es:[edi],eax
   12e85:	stos   DWORD PTR es:[edi],eax
   12e86:	lea    eax,[ebp-0x14]
   12e89:	push   eax
   12e8a:	push   DWORD PTR [ebp+0x8]
   12e8d:	call   0x12e24
   12e92:	pop    edi
   12e93:	leave  
   12e94:	ret    0x4
   12e97:	int3   
   12e98:	pop    edx
   12e99:	ja     0x12eea
   12e9b:	jo     0x12f02
   12e9d:	outs   dx,BYTE PTR ds:[esi]
   12e9e:	push   eax
   12e9f:	jb     0x12f10
   12ea1:	arpl   WORD PTR [ebp+0x73],sp
   12ea4:	jae    0x12ec6
   12ea6:	sub    BYTE PTR [ebx+0x59],dl
   12ea9:	push   ebx
   12eaa:	push   esp
   12eab:	inc    ebp
   12eac:	dec    ebp
   12ead:	sub    DWORD PTR [eax],esp
   12eaf:	jae    0x12f26
   12eb1:	arpl   WORD PTR [ebx+0x65],sp
   12eb4:	gs fs gs or al,BYTE PTR fs:[eax]
   12eba:	add    BYTE PTR [eax],al
   12ebc:	pop    edx
   12ebd:	ja     0x12f0e
   12ebf:	jo     0x12f26
   12ec1:	outs   dx,BYTE PTR ds:[esi]
   12ec2:	push   eax
   12ec3:	jb     0x12f34
   12ec5:	arpl   WORD PTR [ebp+0x73],sp
   12ec8:	jae    0x12f1e
   12eca:	outs   dx,DWORD PTR ds:[esi]
   12ecb:	imul   esp,DWORD PTR [ebp+0x6e],0x20
   12ecf:	jae    0x12f46
   12ed1:	arpl   WORD PTR [ebx+0x65],sp
   12ed4:	gs fs gs fs sub al,0x20
   12eda:	push   0x6c646e61
   12edf:	and    BYTE PTR gs:[edx],bh
   12ee2:	and    BYTE PTR ds:0xa783830,ah
   12ee8:	add    BYTE PTR [eax],al
   12eea:	add    BYTE PTR [eax],al
   12eec:	pop    edx
   12eed:	ja     0x12f33
   12eef:	jne    0x12f61
   12ef1:	ins    BYTE PTR es:[edi],dx
   12ef2:	imul   esp,DWORD PTR [ebx+0x61],0x6f546574
   12ef9:	imul   esp,DWORD PTR [ebp+0x6e],0x20
   12efd:	jae    0x12f74
   12eff:	arpl   WORD PTR [ebx+0x65],sp
   12f02:	gs fs gs or al,BYTE PTR fs:[eax]
   12f08:	pop    edx
   12f09:	ja     0x12f5a
   12f0b:	jo     0x12f72
   12f0d:	outs   dx,BYTE PTR ds:[esi]
   12f0e:	push   eax
   12f0f:	jb     0x12f80
   12f11:	arpl   WORD PTR [ebp+0x73],sp
   12f14:	jae    0x12f36
   12f16:	sub    BYTE PTR [ebx+0x50],dl
   12f19:	inc    ebp
   12f1a:	inc    ebx
   12f1b:	dec    ecx
   12f1c:	inc    esi
   12f1d:	dec    ecx
   12f1e:	inc    ebp
   12f1f:	inc    esp
   12f20:	sub    DWORD PTR [eax],esp
   12f22:	jae    0x12f99
   12f24:	arpl   WORD PTR [ebx+0x65],sp
   12f27:	gs fs gs or al,BYTE PTR fs:[eax]
   12f2d:	add    BYTE PTR [eax],al
   12f2f:	add    BYTE PTR [edx+0x77],bl
   12f32:	push   ebx
   12f33:	gs je  0x12f7f
   12f36:	outs   dx,BYTE PTR ds:[esi]
   12f37:	outs   dx,WORD PTR ds:[esi]
   12f39:	jb     0x12fa8
   12f3b:	popa   
   12f3c:	je     0x12fa7
   12f3e:	outs   dx,DWORD PTR ds:[esi]
   12f3f:	outs   dx,BYTE PTR ds:[esi]
   12f40:	push   eax
   12f41:	jb     0x12fb2
   12f43:	arpl   WORD PTR [ebp+0x73],sp
   12f46:	jae    0x12f68
   12f48:	jb     0x12faf
   12f4a:	je     0x12fc1
   12f4c:	jb     0x12fbc
   12f4e:	gs and BYTE PTR fs:[edi+0x69],dh
   12f53:	je     0x12fbd
   12f55:	and    BYTE PTR [ebx+0x74],dh
   12f58:	popa   
   12f59:	je     0x12fd0
   12f5b:	jae    0x12f7d
   12f5d:	and    eax,0xa783830
   12f62:	add    BYTE PTR [eax],al
   12f64:	pop    edx
   12f65:	ja     0x12fb6
   12f67:	jo     0x12fce
   12f69:	outs   dx,BYTE PTR ds:[esi]
   12f6a:	push   eax
   12f6b:	jb     0x12fdc
   12f6d:	arpl   WORD PTR [ebp+0x73],sp
   12f70:	jae    0x12f92
   12f72:	sub    BYTE PTR [ebx+0x50],dl
   12f75:	inc    ebp
   12f76:	inc    ebx
   12f77:	dec    ecx
   12f78:	inc    esi
   12f79:	dec    ecx
   12f7a:	inc    ebp
   12f7b:	inc    esp
   12f7c:	sub    DWORD PTR [eax],esp
   12f7e:	popaw  
   12f80:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
   12f88:	push   0x61747320
   12f8d:	je     0x13004
   12f8f:	jae    0x12fb1
   12f91:	and    eax,0xa783830
   12f96:	add    BYTE PTR [eax],al
   12f98:	pop    edx
   12f99:	ja     0x12fdf
   12f9b:	jne    0x1300d
   12f9d:	ins    BYTE PTR es:[edi],dx
   12f9e:	imul   esp,DWORD PTR [ebx+0x61],0x6f546574
   12fa5:	imul   esp,DWORD PTR [ebp+0x6e],0x20
   12fa9:	popaw  
   12fab:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
   12fb3:	push   0x61747320
   12fb8:	je     0x1302f
   12fba:	jae    0x12fdc
   12fbc:	and    eax,0xa783830
   12fc1:	add    BYTE PTR [eax],al
   12fc3:	add    BYTE PTR [edx+0x77],bl
   12fc6:	dec    edi
   12fc7:	jo     0x1302e
   12fc9:	outs   dx,BYTE PTR ds:[esi]
   12fca:	push   eax
   12fcb:	jb     0x1303c
   12fcd:	arpl   WORD PTR [ebp+0x73],sp
   12fd0:	jae    0x13026
   12fd2:	outs   dx,DWORD PTR ds:[esi]
   12fd3:	imul   esp,DWORD PTR [ebp+0x6e],0x20
   12fd7:	popaw  
   12fd9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
   12fe1:	push   0x61747320
   12fe6:	je     0x1305d
   12fe8:	jae    0x1300a
   12fea:	and    eax,0xa783830
   12fef:	add    BYTE PTR [edx+0x77],bl
   12ff2:	dec    edi
   12ff3:	jo     0x1305a
   12ff5:	outs   dx,BYTE PTR ds:[esi]
   12ff6:	push   eax
   12ff7:	jb     0x13068
   12ff9:	arpl   WORD PTR [ebp+0x73],sp
   12ffc:	jae    0x1301e
   12ffe:	sub    BYTE PTR [ebx+0x59],dl
   13001:	push   ebx
   13002:	push   esp
   13003:	inc    ebp
   13004:	dec    ebp
   13005:	sub    DWORD PTR [eax],esp
   13007:	popaw  
   13009:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
   13011:	push   0x61747320
   13016:	je     0x1308d
   13018:	jae    0x1303a
   1301a:	and    eax,0xa783830
   1301f:	add    BYTE PTR [ebp-0x75],dl
   13022:	in     al,dx
   13023:	sub    esp,0x38
   13026:	mov    eax,ds:0x833d8
   1302b:	push   edi
   1302c:	xor    edi,edi
   1302e:	cmp    eax,edi
   13030:	jne    0x1303a
   13032:	or     eax,0xffffffff
   13035:	jmp    0x1318d
   1303a:	push   ebx
   1303b:	mov    ebx,DWORD PTR ds:0x1b070
   13041:	push   esi
   13042:	mov    DWORD PTR [ebp-0x18],eax
   13045:	lea    eax,[ebp-0x18]
   13048:	push   eax
   13049:	lea    eax,[ebp-0x38]
   1304c:	push   eax
   1304d:	push   0x400
   13052:	lea    eax,[ebp-0x10]
   13055:	push   eax
   13056:	mov    DWORD PTR [ebp-0x38],0x18
   1305d:	mov    DWORD PTR [ebp-0x34],edi
   13060:	mov    DWORD PTR [ebp-0x2c],edi
   13063:	mov    DWORD PTR [ebp-0x30],edi
   13066:	mov    DWORD PTR [ebp-0x28],edi
   13069:	mov    DWORD PTR [ebp-0x24],edi
   1306c:	mov    DWORD PTR [ebp-0x14],edi
   1306f:	call   ebx
   13071:	mov    esi,eax
   13073:	cmp    esi,edi
   13075:	jl     0x1317c
   1307b:	push   0x12e98
   13080:	call   0x1a38a
   13085:	pop    ecx
   13086:	lea    eax,[ebp-0x4]
   13089:	push   eax
   1308a:	push   0x8
   1308c:	push   DWORD PTR [ebp-0x10]
   1308f:	call   DWORD PTR ds:0x1b06c
   13095:	mov    esi,eax
   13097:	cmp    esi,edi
   13099:	jl     0x13164
   1309f:	push   DWORD PTR [ebp-0x4]
   130a2:	push   0x12ebc
   130a7:	call   0x1a38a
   130ac:	pop    ecx
   130ad:	pop    ecx
   130ae:	lea    eax,[ebp-0xc]
   130b1:	push   eax
   130b2:	push   0x1
   130b4:	push   edi
   130b5:	push   edi
   130b6:	push   0x1
   130b8:	push   DWORD PTR [ebp-0x4]
   130bb:	call   DWORD PTR ds:0x1b068
   130c1:	mov    esi,eax
   130c3:	cmp    esi,edi
   130c5:	jl     0x1314c
   130cb:	push   0x12eec
   130d0:	call   0x1a38a
   130d5:	mov    eax,DWORD PTR [ebp+0x8]
   130d8:	pop    ecx
   130d9:	mov    DWORD PTR [ebp-0x18],eax
   130dc:	lea    eax,[ebp-0x18]
   130df:	push   eax
   130e0:	lea    eax,[ebp-0x38]
   130e3:	push   eax
   130e4:	push   0x200
   130e9:	lea    eax,[ebp-0x8]
   130ec:	push   eax
   130ed:	call   ebx
   130ef:	mov    esi,eax
   130f1:	cmp    esi,edi
   130f3:	jl     0x13134
   130f5:	push   0x12f08
   130fa:	call   0x1a38a
   130ff:	mov    eax,DWORD PTR [ebp-0xc]
   13102:	pop    ecx
   13103:	push   0x8
   13105:	mov    DWORD PTR [ebp-0x20],eax
   13108:	lea    eax,[ebp-0x20]
   1310b:	push   eax
   1310c:	push   0x9
   1310e:	push   DWORD PTR [ebp-0x8]
   13111:	mov    DWORD PTR [ebp-0x1c],edi
   13114:	call   DWORD PTR ds:0x1b064
   1311a:	mov    esi,eax
   1311c:	push   esi
   1311d:	push   0x12f30
   13122:	call   0x1a38a
   13127:	pop    ecx
   13128:	pop    ecx
   13129:	push   DWORD PTR [ebp-0x8]
   1312c:	call   DWORD PTR ds:0x1b10c
   13132:	jmp    0x13141
   13134:	push   esi
   13135:	push   0x12f64
   1313a:	call   0x1a38a
   1313f:	pop    ecx
   13140:	pop    ecx
   13141:	push   DWORD PTR [ebp-0xc]
   13144:	call   DWORD PTR ds:0x1b10c
   1314a:	jmp    0x13159
   1314c:	push   esi
   1314d:	push   0x12f98
   13152:	call   0x1a38a
   13157:	pop    ecx
   13158:	pop    ecx
   13159:	push   DWORD PTR [ebp-0x4]
   1315c:	call   DWORD PTR ds:0x1b10c
   13162:	jmp    0x13171
   13164:	push   esi
   13165:	push   0x12fc4
   1316a:	call   0x1a38a
   1316f:	pop    ecx
   13170:	pop    ecx
   13171:	push   DWORD PTR [ebp-0x10]
   13174:	call   DWORD PTR ds:0x1b10c
   1317a:	jmp    0x13189
   1317c:	push   esi
   1317d:	push   0x12ff0
   13182:	call   0x1a38a
   13187:	pop    ecx
   13188:	pop    ecx
   13189:	mov    eax,esi
   1318b:	pop    esi
   1318c:	pop    ebx
   1318d:	pop    edi
   1318e:	leave  
   1318f:	ret    0x4
   13192:	dec    ebx
   13193:	gs push edi
   13195:	popa   
   13196:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   1319e:	gs js  0x131f0
   131a1:	bound  ebp,QWORD PTR [edx+0x65]
   131a4:	arpl   WORD PTR [eax+ebp*1+0x29],si
   131a8:	and    BYTE PTR [ebp+0x52],al
   131ab:	push   edx
   131ac:	dec    edi
   131ad:	push   edx
   131ae:	and    BYTE PTR [edx],bh
   131b0:	and    BYTE PTR [eax],dh
   131b2:	js     0x131d9
   131b4:	cmp    BYTE PTR cs:[eax+0xa],bh
   131b8:	add    ah,cl
   131ba:	push   ebx
   131bb:	push   ebp
   131bc:	xor    ebp,ebp
   131be:	push   ebp
   131bf:	push   ebp
   131c0:	push   ebp
   131c1:	push   ebp
   131c2:	mov    ebx,0x832fc
   131c7:	push   ebx
   131c8:	call   DWORD PTR ds:0x1b060
   131ce:	cmp    eax,ebp
   131d0:	jge    0x131e1
   131d2:	push   eax
   131d3:	push   0x13192
   131d8:	call   0x1a38a
   131dd:	pop    ecx
   131de:	pop    ecx
   131df:	jmp    0x131fb
   131e1:	push   esi
   131e2:	mov    esi,DWORD PTR [esp+0x10]
   131e6:	push   edi
   131e7:	push   0x40
   131e9:	pop    ecx
   131ea:	push   ebp
   131eb:	mov    edi,0x833e0
   131f0:	push   ebx
   131f1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   131f3:	call   DWORD PTR ds:0x1b05c
   131f9:	pop    edi
   131fa:	pop    esi
   131fb:	pop    ebp
   131fc:	pop    ebx
   131fd:	ret    0x4
   13200:	dec    ebx
   13201:	gs push edi
   13203:	popa   
   13204:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   1320c:	gs js  0x1325e
   1320f:	bound  ebp,QWORD PTR [edx+0x65]
   13212:	arpl   WORD PTR [eax+ebp*1+0x29],si
   13216:	and    BYTE PTR [ebp+0x52],al
   13219:	push   edx
   1321a:	dec    edi
   1321b:	push   edx
   1321c:	and    BYTE PTR [edx],bh
   1321e:	and    BYTE PTR [eax],dh
   13220:	js     0x13247
   13222:	cmp    BYTE PTR cs:[eax+0xa],bh
   13226:	add    ah,cl
   13228:	push   ebx
   13229:	push   ebp
   1322a:	xor    ebp,ebp
   1322c:	push   ebp
   1322d:	push   ebp
   1322e:	push   ebp
   1322f:	push   ebp
   13230:	mov    ebx,0x832fc
   13235:	push   ebx
   13236:	call   DWORD PTR ds:0x1b060
   1323c:	cmp    eax,ebp
   1323e:	jge    0x13251
   13240:	push   eax
   13241:	push   0x13200
   13246:	call   0x1a38a
   1324b:	pop    ecx
   1324c:	pop    ecx
   1324d:	xor    al,al
   1324f:	jmp    0x13277
   13251:	push   esi
   13252:	push   edi
   13253:	mov    edi,DWORD PTR [esp+0x14]
   13257:	push   0x40
   13259:	pop    ecx
   1325a:	push   ebp
   1325b:	mov    esi,0x833e0
   13260:	push   ebx
   13261:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   13263:	call   DWORD PTR ds:0x1b05c
   13269:	xor    eax,eax
   1326b:	cmp    WORD PTR ds:0x833e0,bp
   13272:	pop    edi
   13273:	setne  al
   13276:	pop    esi
   13277:	pop    ebp
   13278:	pop    ebx
   13279:	ret    0x4
   1327c:	pop    esp
   1327d:	add    BYTE PTR [eax],al
   1327f:	add    BYTE PTR [edx+0x77],bl
   13282:	inc    ebp
   13283:	outs   dx,BYTE PTR ds:[esi]
   13284:	jne    0x132f3
   13286:	gs jb  0x132ea
   13289:	je     0x132f0
   1328b:	dec    ebx
   1328c:	gs jns 0x132b7
   1328f:	sub    DWORD PTR [eax],esp
   13291:	inc    ebp
   13292:	push   edx
   13293:	push   edx
   13294:	dec    edi
   13295:	push   edx
   13296:	and    BYTE PTR [edx],bh
   13298:	and    BYTE PTR [eax],dh
   1329a:	js     0x132c1
   1329c:	cmp    BYTE PTR cs:[eax+0xa],bh
   132a0:	add    BYTE PTR [eax],al
   132a2:	add    BYTE PTR [eax],al
   132a4:	pop    edx
   132a5:	ja     0x132f6
   132a7:	jo     0x1330e
   132a9:	outs   dx,BYTE PTR ds:[esi]
   132aa:	dec    ebx
   132ab:	gs jns 0x132d6
   132ae:	sub    DWORD PTR [eax],esp
   132b0:	inc    ebp
   132b1:	push   edx
   132b2:	push   edx
   132b3:	dec    edi
   132b4:	push   edx
   132b5:	and    BYTE PTR [edx],bh
   132b7:	and    BYTE PTR [eax],dh
   132b9:	js     0x132e0
   132bb:	cmp    BYTE PTR cs:[eax+0xa],bh
   132bf:	add    BYTE PTR [edx+0x77],bl
   132c2:	inc    esp
   132c3:	gs ins BYTE PTR es:[edi],dx
   132c5:	gs je  0x1332d
   132c8:	dec    ebx
   132c9:	gs jns 0x132f4
   132cc:	sub    DWORD PTR [eax],esp
   132ce:	inc    ebp
   132cf:	push   edx
   132d0:	push   edx
   132d1:	dec    edi
   132d2:	push   edx
   132d3:	and    BYTE PTR [edx],bh
   132d5:	and    BYTE PTR [eax],dh
   132d7:	js     0x132fe
   132d9:	cmp    BYTE PTR cs:[eax+0xa],bh
   132dd:	add    BYTE PTR [ebp-0x73],dl
   132e0:	lods   al,BYTE PTR ds:[esi]
   132e1:	and    al,0x50
   132e3:	cld    
   132e4:	(bad)  
   132e5:	inc    DWORD PTR [ecx+0x430ec]
   132eb:	add    BYTE PTR [ecx+0x83118],ah
   132f1:	push   ebx
   132f2:	push   esi
   132f3:	mov    DWORD PTR [ebp+0x3ac],eax
   132f9:	push   edi
   132fa:	xor    ebx,ebx
   132fc:	jmp    0x133d7
   13301:	cmp    eax,ebx
   13303:	jl     0x13416
   13309:	push   DWORD PTR [ebp+0x3bc]
   1330f:	call   DWORD PTR ds:0x1b054
   13315:	mov    ecx,DWORD PTR [ebp-0x48]
   13318:	shr    ecx,1
   1331a:	lea    eax,[eax+ecx*1+0x2]
   1331e:	lea    edi,[eax+eax*1]
   13321:	push   edi
   13322:	call   0x12822
   13327:	push   DWORD PTR [ebp+0x3bc]
   1332d:	mov    ecx,edi
   1332f:	mov    edx,ecx
   13331:	mov    esi,eax
   13333:	shr    ecx,0x2
   13336:	xor    eax,eax
   13338:	mov    edi,esi
   1333a:	rep stos DWORD PTR es:[edi],eax
   1333c:	mov    ecx,edx
   1333e:	and    ecx,0x3
   13341:	rep stos BYTE PTR es:[edi],al
   13343:	mov    edi,DWORD PTR ds:0x1b114
   13349:	push   esi
   1334a:	call   edi
   1334c:	push   0x1327c
   13351:	push   esi
   13352:	call   edi
   13354:	mov    eax,DWORD PTR [ebp-0x48]
   13357:	shr    eax,1
   13359:	push   eax
   1335a:	lea    eax,[ebp-0x44]
   1335d:	push   eax
   1335e:	push   esi
   1335f:	call   DWORD PTR ds:0x1b080
   13365:	push   esi
   13366:	mov    DWORD PTR [ebp-0x64],esi
   13369:	call   DWORD PTR ds:0x1b054
   1336f:	shl    eax,1
   13371:	mov    WORD PTR [ebp-0x66],ax
   13375:	mov    WORD PTR [ebp-0x68],ax
   13379:	lea    eax,[ebp-0x68]
   1337c:	add    esp,0x28
   1337f:	mov    DWORD PTR [ebp-0x78],eax
   13382:	lea    eax,[ebp-0x80]
   13385:	push   eax
   13386:	push   0xf003f
   1338b:	lea    eax,[ebp-0x60]
   1338e:	push   eax
   1338f:	mov    DWORD PTR [ebp-0x80],0x18
   13396:	mov    DWORD PTR [ebp-0x7c],ebx
   13399:	mov    DWORD PTR [ebp-0x74],0x40
   133a0:	mov    DWORD PTR [ebp-0x70],ebx
   133a3:	mov    DWORD PTR [ebp-0x6c],ebx
   133a6:	call   DWORD PTR ds:0x1b07c
   133ac:	mov    edi,eax
   133ae:	cmp    edi,ebx
   133b0:	push   esi
   133b1:	jl     0x1341e
   133b3:	push   DWORD PTR [ebp-0x60]
   133b6:	call   0x132de
   133bb:	push   esi
   133bc:	mov    BYTE PTR [ebp-0x55],al
   133bf:	call   0x1284c
   133c4:	pop    ecx
   133c5:	push   DWORD PTR [ebp-0x60]
   133c8:	call   DWORD PTR ds:0x1b078
   133ce:	cmp    eax,ebx
   133d0:	jl     0x13433
   133d2:	cmp    BYTE PTR [ebp-0x55],bl
   133d5:	je     0x13440
   133d7:	xor    eax,eax
   133d9:	mov    BYTE PTR [ebp-0x54],bl
   133dc:	lea    edi,[ebp-0x53]
   133df:	mov    ecx,0xff
   133e4:	rep stos DWORD PTR es:[edi],eax
   133e6:	stos   WORD PTR es:[edi],ax
   133e8:	stos   BYTE PTR es:[edi],al
   133e9:	lea    eax,[ebp-0x5c]
   133ec:	push   eax
   133ed:	push   0x400
   133f2:	lea    eax,[ebp-0x54]
   133f5:	push   eax
   133f6:	push   ebx
   133f7:	push   ebx
   133f8:	push   DWORD PTR [ebp+0x3b8]
   133fe:	mov    DWORD PTR [ebp-0x5c],ebx
   13401:	call   DWORD PTR ds:0x1b074
   13407:	cmp    eax,0x8000001a
   1340c:	jne    0x13301
   13412:	mov    al,0x1
   13414:	jmp    0x13442
   13416:	push   eax
   13417:	push   0x13280
   1341c:	jmp    0x13439
   1341e:	call   0x1284c
   13423:	push   edi
   13424:	push   0x132a4
   13429:	call   0x1a38a
   1342e:	add    esp,0xc
   13431:	jmp    0x13440
   13433:	push   eax
   13434:	push   0x132c0
   13439:	call   0x1a38a
   1343e:	pop    ecx
   1343f:	pop    ecx
   13440:	xor    al,al
   13442:	mov    ecx,DWORD PTR [ebp+0x3ac]
   13448:	pop    edi
   13449:	pop    esi
   1344a:	pop    ebx
   1344b:	call   0x1a327
   13450:	add    ebp,0x3b0
   13456:	leave  
   13457:	ret    0x8
   1345a:	add    BYTE PTR [eax],al
   1345c:	add    BYTE PTR [eax],al
   1345e:	pop    edx
   1345f:	ja     0x134a4
   13461:	jb     0x134c8
   13463:	popa   
   13464:	je     0x134cb
   13466:	dec    ebx
   13467:	gs jns 0x13492
   1346a:	sub    DWORD PTR [eax],esp
   1346c:	inc    ebp
   1346d:	push   edx
   1346e:	push   edx
   1346f:	dec    edi
   13470:	push   edx
   13471:	and    BYTE PTR [edx],bh
   13473:	and    BYTE PTR [eax],dh
   13475:	js     0x1349c
   13477:	cmp    BYTE PTR cs:[eax+0xa],bh
   1347b:	add    BYTE PTR [eax],al
   1347d:	add    BYTE PTR [ecx+0x0],cl
   13480:	ins    DWORD PTR es:[edi],dx
   13481:	add    BYTE PTR [ecx+0x0],ah
   13484:	add    BYTE PTR [di+0x0],ah
   13488:	push   eax
   13489:	add    BYTE PTR [ecx+0x0],ah
   1348c:	je     0x1348e
   1348e:	push   0x5a000000
   13493:	ja     0x134e8
   13495:	gs je  0x134ee
   13498:	popa   
   13499:	ins    BYTE PTR es:[edi],dx
   1349a:	jne    0x13501
   1349c:	dec    ebx
   1349d:	gs jns 0x134c8
   134a0:	sub    DWORD PTR [eax],esp
   134a2:	inc    ebp
   134a3:	push   edx
   134a4:	push   edx
   134a5:	dec    edi
   134a6:	push   edx
   134a7:	and    BYTE PTR [edx],bh
   134a9:	and    BYTE PTR [eax],dh
   134ab:	js     0x134d2
   134ad:	cmp    BYTE PTR cs:[eax+0xa],bh
   134b1:	add    BYTE PTR [ebx+0x0],dl
   134b4:	je     0x134b6
   134b6:	popa   
   134b7:	add    BYTE PTR [edx+0x0],dh
   134ba:	je     0x134bc
   134bc:	add    BYTE PTR [eax],al
   134be:	pop    edx
   134bf:	ja     0x13514
   134c1:	gs je  0x1351a
   134c4:	popa   
   134c5:	ins    BYTE PTR es:[edi],dx
   134c6:	jne    0x1352d
   134c8:	dec    ebx
   134c9:	gs jns 0x134f4
   134cc:	sub    DWORD PTR [eax],esp
   134ce:	inc    ebp
   134cf:	push   edx
   134d0:	push   edx
   134d1:	dec    edi
   134d2:	push   edx
   134d3:	and    BYTE PTR [edx],bh
   134d5:	and    BYTE PTR [eax],dh
   134d7:	js     0x134fe
   134d9:	cmp    BYTE PTR cs:[eax+0xa],bh
   134dd:	add    BYTE PTR [eax+eax*1+0x79],dl
   134e1:	add    BYTE PTR [eax+0x0],dh
   134e4:	add    BYTE PTR gs:[eax],al
   134e7:	add    BYTE PTR [eax],al
   134e9:	add    BYTE PTR [edx+0x77],bl
   134ec:	push   ebx
   134ed:	gs je  0x13546
   134f0:	popa   
   134f1:	ins    BYTE PTR es:[edi],dx
   134f2:	jne    0x13559
   134f4:	dec    ebx
   134f5:	gs jns 0x13520
   134f8:	sub    DWORD PTR [eax],esp
   134fa:	inc    ebp
   134fb:	push   edx
   134fc:	push   edx
   134fd:	dec    edi
   134fe:	push   edx
   134ff:	and    BYTE PTR [edx],bh
   13501:	and    BYTE PTR [eax],dh
   13503:	js     0x1352a
   13505:	cmp    BYTE PTR cs:[eax+0xa],bh
   13509:	add    BYTE PTR [edx+0x77],bl
   1350c:	dec    esp
   1350d:	outs   dx,DWORD PTR ds:[esi]
   1350e:	popa   
   1350f:	fs inc esp
   13511:	jb     0x1357c
   13513:	jbe    0x1357a
   13515:	jb     0x1353f
   13517:	sub    DWORD PTR [eax],esp
   13519:	inc    ebp
   1351a:	push   edx
   1351b:	push   edx
   1351c:	dec    edi
   1351d:	push   edx
   1351e:	and    BYTE PTR [edx],bh
   13520:	and    BYTE PTR [eax],dh
   13522:	js     0x13549
   13524:	cmp    BYTE PTR cs:[eax+0xa],bh
   13528:	add    BYTE PTR [eax],al
   1352a:	pop    edx
   1352b:	ja     0x13571
   1352d:	gs ins BYTE PTR es:[edi],dx
   1352f:	gs je  0x13597
   13532:	dec    ebx
   13533:	gs jns 0x1355e
   13536:	sub    DWORD PTR [eax],esp
   13538:	inc    ebp
   13539:	push   edx
   1353a:	push   edx
   1353b:	dec    edi
   1353c:	push   edx
   1353d:	and    BYTE PTR [edx],bh
   1353f:	and    BYTE PTR [eax],dh
   13541:	js     0x13568
   13543:	cmp    BYTE PTR cs:[eax+0xa],bh
   13547:	add    BYTE PTR [eax],al
   13549:	add    BYTE PTR [edx+0x77],bl
   1354c:	inc    ebx
   1354d:	ins    BYTE PTR es:[edi],dx
   1354e:	outs   dx,DWORD PTR ds:[esi]
   1354f:	jae    0x135b6
   13551:	sub    BYTE PTR [ecx],ch
   13553:	and    BYTE PTR [ebp+0x52],al
   13556:	push   edx
   13557:	dec    edi
   13558:	push   edx
   13559:	and    BYTE PTR [edx],bh
   1355b:	and    BYTE PTR [eax],dh
   1355d:	js     0x13584
   1355f:	cmp    BYTE PTR cs:[eax+0xa],bh
   13563:	add    BYTE PTR [ebp-0x73],dl
   13566:	lods   al,BYTE PTR ds:[esi]
   13567:	and    al,0x4c
   13569:	clc    
   1356a:	(bad)  
   1356b:	inc    DWORD PTR [ecx+0x834ec]
   13571:	add    BYTE PTR [ecx+0x83118],ah
   13577:	mov    DWORD PTR [ebp+0x7b0],eax
   1357d:	mov    ax,ds:0x1345a
   13583:	push   ebx
   13584:	push   esi
   13585:	mov    esi,DWORD PTR ds:0x1b114
   1358b:	push   edi
   1358c:	push   DWORD PTR ds:0x1d0e8
   13592:	mov    WORD PTR [ebp-0x50],ax
   13596:	xor    eax,eax
   13598:	mov    ecx,0x1ff
   1359d:	lea    edi,[ebp-0x4e]
   135a0:	rep stos DWORD PTR es:[edi],eax
   135a2:	stos   WORD PTR es:[edi],ax
   135a4:	lea    eax,[ebp-0x50]
   135a7:	push   eax
   135a8:	call   esi
   135aa:	mov    edi,DWORD PTR [ebp+0x7bc]
   135b0:	lea    eax,[edi+0x400]
   135b6:	push   eax
   135b7:	lea    eax,[ebp-0x50]
   135ba:	push   eax
   135bb:	call   esi
   135bd:	mov    esi,DWORD PTR ds:0x1b054
   135c3:	lea    eax,[ebp-0x50]
   135c6:	push   eax
   135c7:	mov    DWORD PTR [ebp-0x60],eax
   135ca:	call   esi
   135cc:	shl    eax,1
   135ce:	mov    WORD PTR [ebp-0x62],ax
   135d2:	mov    WORD PTR [ebp-0x64],ax
   135d6:	add    esp,0x14
   135d9:	lea    eax,[ebp-0x64]
   135dc:	mov    DWORD PTR [ebp-0x74],eax
   135df:	lea    eax,[ebp-0x80]
   135e2:	push   eax
   135e3:	push   0x1
   135e5:	xor    ebx,ebx
   135e7:	push   ebx
   135e8:	push   ebx
   135e9:	lea    eax,[ebp-0x7c]
   135ec:	push   eax
   135ed:	push   0xf003f
   135f2:	lea    eax,[ebp-0x54]
   135f5:	push   eax
   135f6:	mov    DWORD PTR [ebp-0x7c],0x18
   135fd:	mov    DWORD PTR [ebp-0x78],ebx
   13600:	mov    DWORD PTR [ebp-0x70],0x40
   13607:	mov    DWORD PTR [ebp-0x6c],ebx
   1360a:	mov    DWORD PTR [ebp-0x68],ebx
   1360d:	call   DWORD PTR ds:0x1b090
   13613:	cmp    eax,ebx
   13615:	jge    0x13622
   13617:	push   eax
   13618:	push   0x1345e
   1361d:	jmp    0x13738
   13622:	mov    eax,0x1347e
   13627:	push   eax
   13628:	mov    DWORD PTR [ebp-0x58],eax
   1362b:	call   esi
   1362d:	shl    eax,1
   1362f:	push   edi
   13630:	mov    WORD PTR [ebp-0x5a],ax
   13634:	mov    WORD PTR [ebp-0x5c],ax
   13638:	call   esi
   1363a:	pop    ecx
   1363b:	inc    eax
   1363c:	pop    ecx
   1363d:	movzx  eax,ax
   13640:	shl    eax,1
   13642:	push   eax
   13643:	push   edi
   13644:	mov    edi,DWORD PTR ds:0x1b08c
   1364a:	push   0x1
   1364c:	push   ebx
   1364d:	lea    eax,[ebp-0x5c]
   13650:	push   eax
   13651:	push   DWORD PTR [ebp-0x54]
   13654:	call   edi
   13656:	cmp    eax,ebx
   13658:	jge    0x13665
   1365a:	push   eax
   1365b:	push   0x13492
   13660:	jmp    0x13738
   13665:	mov    eax,0x134b2
   1366a:	push   eax
   1366b:	mov    DWORD PTR [ebp+0x7bc],0x3
   13675:	mov    DWORD PTR [ebp-0x58],eax
   13678:	call   esi
   1367a:	pop    ecx
   1367b:	shl    eax,1
   1367d:	push   0x4
   1367f:	mov    WORD PTR [ebp-0x5a],ax
   13683:	mov    WORD PTR [ebp-0x5c],ax
   13687:	lea    eax,[ebp+0x7bc]
   1368d:	push   eax
   1368e:	push   0x4
   13690:	push   ebx
   13691:	lea    eax,[ebp-0x5c]
   13694:	push   eax
   13695:	push   DWORD PTR [ebp-0x54]
   13698:	call   edi
   1369a:	cmp    eax,ebx
   1369c:	jge    0x136a9
   1369e:	push   eax
   1369f:	push   0x134be
   136a4:	jmp    0x13738
   136a9:	mov    eax,0x134de
   136ae:	push   eax
   136af:	mov    DWORD PTR [ebp+0x7bc],0x1
   136b9:	mov    DWORD PTR [ebp-0x58],eax
   136bc:	call   esi
   136be:	pop    ecx
   136bf:	shl    eax,1
   136c1:	push   0x4
   136c3:	mov    WORD PTR [ebp-0x5a],ax
   136c7:	mov    WORD PTR [ebp-0x5c],ax
   136cb:	lea    eax,[ebp+0x7bc]
   136d1:	push   eax
   136d2:	push   0x4
   136d4:	push   ebx
   136d5:	lea    eax,[ebp-0x5c]
   136d8:	push   eax
   136d9:	push   DWORD PTR [ebp-0x54]
   136dc:	call   edi
   136de:	cmp    eax,ebx
   136e0:	jge    0x136ea
   136e2:	push   eax
   136e3:	push   0x134ea
   136e8:	jmp    0x13738
   136ea:	lea    eax,[ebp-0x64]
   136ed:	push   eax
   136ee:	call   DWORD PTR ds:0x1b088
   136f4:	cmp    eax,ebx
   136f6:	jge    0x13700
   136f8:	push   eax
   136f9:	push   0x1350a
   136fe:	jmp    0x13738
   13700:	lea    eax,[ebp-0x50]
   13703:	push   eax
   13704:	push   DWORD PTR [ebp-0x54]
   13707:	call   0x132de
   1370c:	test   al,al
   1370e:	je     0x13725
   13710:	push   DWORD PTR [ebp-0x54]
   13713:	call   DWORD PTR ds:0x1b078
   13719:	cmp    eax,ebx
   1371b:	jge    0x13725
   1371d:	push   eax
   1371e:	push   0x1352a
   13723:	jmp    0x13738
   13725:	push   DWORD PTR [ebp-0x54]
   13728:	call   DWORD PTR ds:0x1b10c
   1372e:	cmp    eax,ebx
   13730:	jge    0x1373f
   13732:	push   eax
   13733:	push   0x1354a
   13738:	call   0x1a38a
   1373d:	pop    ecx
   1373e:	pop    ecx
   1373f:	mov    ecx,DWORD PTR [ebp+0x7b0]
   13745:	pop    edi
   13746:	pop    esi
   13747:	pop    ebx
   13748:	call   0x1a327
   1374d:	add    ebp,0x7b4
   13753:	leave  
   13754:	ret    0x4
   13757:	int3   
   13758:	mov    eax,ds:0x83364
   1375d:	test   eax,eax
   1375f:	je     0x1376f
   13761:	push   eax
   13762:	call   DWORD PTR ds:0x1b040
   13768:	and    DWORD PTR ds:0x83364,0x0
   1376f:	ret    
   13770:	dec    ebx
   13771:	gs jb  0x137e2
   13774:	gs ins BYTE PTR es:[edi],dx
   13776:	inc    edi
   13777:	gs je  0x137ca
   1377a:	jb     0x137eb
   1377c:	arpl   WORD PTR [ecx+0x64],ax
   1377f:	fs jb  0x137e7
   13782:	jae    0x137f7
   13784:	sub    BYTE PTR [ecx],ch
   13786:	and    BYTE PTR [ebp+0x6f],cl
   13789:	fs jne 0x137f8
   1378c:	gs inc edx
   1378e:	popa   
   1378f:	jae    0x137f6
   13791:	and    BYTE PTR [edx],bh
   13793:	and    BYTE PTR [eax],dh
   13795:	js     0x137bc
   13797:	cmp    BYTE PTR cs:[eax+0xa],bh
   1379b:	add    BYTE PTR [ebx+0x65],cl
   1379e:	jb     0x1380e
   137a0:	gs ins BYTE PTR es:[edi],dx
   137a2:	inc    edi
   137a3:	gs je  0x137f6
   137a6:	jb     0x13817
   137a8:	arpl   WORD PTR [ecx+0x64],ax
   137ab:	fs jb  0x13813
   137ae:	jae    0x13823
   137b0:	sub    BYTE PTR [ecx],ch
   137b2:	and    BYTE PTR [ebp+0x58],al
   137b5:	inc    ebp
   137b6:	push   eax
   137b7:	push   esp
   137b8:	dec    ecx
   137b9:	dec    edi
   137ba:	dec    esi
   137bb:	or     al,BYTE PTR [eax]
   137bd:	int3   
   137be:	push   0x3c
   137c0:	push   0x1b208
   137c5:	call   0x1a338
   137ca:	xor    esi,esi
   137cc:	mov    DWORD PTR [ebp-0x2c],esi
   137cf:	mov    DWORD PTR [ebp-0x30],esi
   137d2:	mov    ebx,DWORD PTR [ebp+0x8]
   137d5:	push   ebx
   137d6:	push   0x13770
   137db:	call   0x1a38a
   137e0:	pop    ecx
   137e1:	pop    ecx
   137e2:	cmp    ebx,esi
   137e4:	je     0x138b7
   137ea:	mov    DWORD PTR [ebp-0x4],esi
   137ed:	lea    eax,[ebp-0x30]
   137f0:	push   eax
   137f1:	push   esi
   137f2:	push   0x1
   137f4:	push   ebx
   137f5:	call   0x1a390
   137fa:	mov    DWORD PTR [ebp-0x3c],eax
   137fd:	mov    edx,eax
   137ff:	sub    edx,ebx
   13801:	mov    DWORD PTR [ebp-0x38],edx
   13804:	mov    edi,DWORD PTR [eax+0x1c]
   13807:	add    edi,ebx
   13809:	mov    DWORD PTR [ebp-0x40],edi
   1380c:	mov    ecx,DWORD PTR [eax+0x24]
   1380f:	add    ecx,ebx
   13811:	mov    DWORD PTR [ebp-0x44],ecx
   13814:	mov    esi,DWORD PTR [eax+0x20]
   13817:	add    esi,ebx
   13819:	mov    DWORD PTR [ebp-0x48],esi
   1381c:	and    DWORD PTR [ebp-0x20],0x0
   13820:	mov    ebx,DWORD PTR [ebp-0x20]
   13823:	cmp    ebx,DWORD PTR [eax+0x18]
   13826:	jae    0x138d1
   1382c:	movsx  ebx,WORD PTR [ecx+ebx*2]
   13830:	mov    DWORD PTR [ebp-0x4c],ebx
   13833:	cmp    ebx,DWORD PTR [eax+0x14]
   13836:	jae    0x138b3
   13838:	mov    ebx,DWORD PTR [edi+ebx*4]
   1383b:	mov    DWORD PTR [ebp-0x34],ebx
   1383e:	cmp    ebx,edx
   13840:	jb     0x1384c
   13842:	mov    ebx,DWORD PTR [ebp-0x30]
   13845:	add    edx,ebx
   13847:	cmp    DWORD PTR [ebp-0x34],edx
   1384a:	jb     0x138a8
   1384c:	mov    edx,DWORD PTR [ebp+0xc]
   1384f:	mov    DWORD PTR [ebp-0x24],edx
   13852:	mov    edx,DWORD PTR [ebp-0x20]
   13855:	mov    edx,DWORD PTR [esi+edx*4]
   13858:	add    edx,DWORD PTR [ebp+0x8]
   1385b:	mov    DWORD PTR [ebp-0x28],edx
   1385e:	mov    dl,BYTE PTR [edx]
   13860:	mov    BYTE PTR [ebp-0x19],dl
   13863:	mov    ebx,DWORD PTR [ebp-0x24]
   13866:	cmp    dl,BYTE PTR [ebx]
   13868:	jne    0x13892
   1386a:	test   dl,dl
   1386c:	je     0x1388e
   1386e:	mov    edx,DWORD PTR [ebp-0x28]
   13871:	mov    dl,BYTE PTR [edx+0x1]
   13874:	mov    BYTE PTR [ebp-0x1a],dl
   13877:	cmp    dl,BYTE PTR [ebx+0x1]
   1387a:	jne    0x13892
   1387c:	mov    edx,DWORD PTR [ebp-0x28]
   1387f:	inc    edx
   13880:	inc    edx
   13881:	mov    DWORD PTR [ebp-0x28],edx
   13884:	add    DWORD PTR [ebp-0x24],0x2
   13888:	cmp    BYTE PTR [ebp-0x1a],0x0
   1388c:	jne    0x1385e
   1388e:	xor    edx,edx
   13890:	jmp    0x13897
   13892:	sbb    edx,edx
   13894:	sbb    edx,0xffffffff
   13897:	test   edx,edx
   13899:	jne    0x138a8
   1389b:	mov    eax,DWORD PTR [ebp-0x34]
   1389e:	mov    ecx,DWORD PTR [ebp+0x8]
   138a1:	add    eax,ecx
   138a3:	mov    DWORD PTR [ebp-0x2c],eax
   138a6:	jmp    0x138d1
   138a8:	inc    DWORD PTR [ebp-0x20]
   138ab:	mov    edx,DWORD PTR [ebp-0x38]
   138ae:	jmp    0x13820
   138b3:	or     DWORD PTR [ebp-0x4],0xffffffff
   138b7:	xor    eax,eax
   138b9:	jmp    0x138d8
   138bb:	xor    eax,eax
   138bd:	inc    eax
   138be:	ret    
   138bf:	mov    esp,DWORD PTR [ebp-0x18]
   138c2:	push   0x1379c
   138c7:	call   0x1a38a
   138cc:	pop    ecx
   138cd:	and    DWORD PTR [ebp-0x2c],0x0
   138d1:	or     DWORD PTR [ebp-0x4],0xffffffff
   138d5:	mov    eax,DWORD PTR [ebp-0x2c]
   138d8:	call   0x1a373
   138dd:	ret    0x8
   138e0:	and    eax,0x25002073
   138e5:	xor    bh,BYTE PTR cs:[eax+0x20]
   138e9:	add    BYTE PTR [eax],al
   138eb:	add    BYTE PTR [edx],cl
   138ed:	add    BYTE PTR [esi-0x1],dl
   138f0:	je     0x13916
   138f2:	or     BYTE PTR [eax-0x20],ch
   138f5:	cmp    BYTE PTR [ecx],al
   138f7:	add    al,ch
   138f9:	lea    ebp,[edx+0x0]
   138fc:	add    BYTE PTR [ebx],dh
   138fe:	idiv   BYTE PTR [ecx]
   13900:	je     0x13926
   13902:	sbb    bl,ch
   13904:	sbb    BYTE PTR [ebx+0xf0c2444],cl
   1390a:	mov    dh,0x4
   1390c:	push   es
   1390d:	push   eax
   1390e:	push   0x138e4
   13913:	call   0x1a38a
   13918:	inc    esi
   13919:	cmp    esi,DWORD PTR [esp+0x18]
   1391d:	pop    ecx
   1391e:	pop    ecx
   1391f:	jne    0x13905
   13921:	push   0x138ec
   13926:	call   0x1a38a
   1392b:	pop    ecx
   1392c:	pop    esi
   1392d:	ret    0xc
   13930:	pop    edx
   13931:	ja     0x13982
   13933:	jo     0x1399a
   13935:	outs   dx,BYTE PTR ds:[esi]
   13936:	push   eax
   13937:	jb     0x139a8
   13939:	arpl   WORD PTR [ebp+0x73],sp
   1393c:	jae    0x13966
   1393e:	sub    DWORD PTR [eax],esp
   13940:	inc    ebp
   13941:	push   edx
   13942:	push   edx
   13943:	dec    edi
   13944:	push   edx
   13945:	and    BYTE PTR [edx],bh
   13947:	and    BYTE PTR [eax],dh
   13949:	js     0x13970
   1394b:	cmp    BYTE PTR cs:[eax+0xa],bh
   1394f:	add    BYTE PTR [edx+0x77],bl
   13952:	inc    ecx
   13953:	ins    BYTE PTR es:[edi],dx
   13954:	ins    BYTE PTR es:[edi],dx
   13955:	outs   dx,DWORD PTR ds:[esi]
   13956:	arpl   WORD PTR [ecx+0x74],sp
   13959:	gs push esi
   1395b:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   13962:	gs ins DWORD PTR es:[edi],dx
   13964:	outs   dx,DWORD PTR ds:[esi]
   13965:	jb     0x139e0
   13967:	sub    BYTE PTR [ecx],ch
   13969:	and    BYTE PTR [ebp+0x52],al
   1396c:	push   edx
   1396d:	dec    edi
   1396e:	push   edx
   1396f:	and    BYTE PTR [edx],bh
   13971:	and    BYTE PTR [eax],dh
   13973:	js     0x1399a
   13975:	cmp    BYTE PTR cs:[eax+0xa],bh
   13979:	add    BYTE PTR [eax],al
   1397b:	add    BYTE PTR [edx+0x77],bl
   1397e:	inc    ecx
   1397f:	ins    BYTE PTR es:[edi],dx
   13980:	ins    BYTE PTR es:[edi],dx
   13981:	outs   dx,DWORD PTR ds:[esi]
   13982:	arpl   WORD PTR [ecx+0x74],sp
   13985:	gs push esi
   13987:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   1398e:	gs ins DWORD PTR es:[edi],dx
   13990:	outs   dx,DWORD PTR ds:[esi]
   13991:	jb     0x13a0c
   13993:	sub    BYTE PTR [ecx],ch
   13995:	and    BYTE PTR [ebp+0x52],al
   13998:	push   edx
   13999:	dec    edi
   1399a:	push   edx
   1399b:	and    BYTE PTR [edx],bh
   1399d:	and    BYTE PTR [eax],dh
   1399f:	js     0x139c6
   139a1:	cmp    BYTE PTR cs:[eax+0xa],bh
   139a5:	add    BYTE PTR [eax],al
   139a7:	add    BYTE PTR [ebx+0x74],dl
   139aa:	popa   
   139ab:	jb     0x13a21
   139ad:	and    BYTE PTR [ecx+0x64],ah
   139b0:	fs jb  0x139d3
   139b3:	cmp    ah,BYTE PTR [eax]
   139b5:	xor    BYTE PTR [eax+0x25],bh
   139b8:	cmp    BYTE PTR cs:[eax+0xa],bh
   139bc:	add    BYTE PTR [eax],al
   139be:	add    BYTE PTR [eax],al
   139c0:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   139c5:	add    BYTE PTR [eax+eax*1+0x0],ch
   139c9:	add    BYTE PTR [eax],al
   139cb:	add    BYTE PTR [ebp+0x50],al
   139ce:	and    BYTE PTR [ebx+0x74],dh
   139d1:	popa   
   139d2:	jb     0x13a48
   139d4:	cmp    al,BYTE PTR [eax]
   139d6:	add    BYTE PTR [eax],al
   139d8:	dec    esi
   139d9:	gs ja  0x139fc
   139dc:	inc    ebp
   139dd:	push   eax
   139de:	and    BYTE PTR [ecx+0x64],ah
   139e1:	fs jb  0x13a04
   139e4:	cmp    ah,BYTE PTR [eax]
   139e6:	xor    BYTE PTR [eax+0x25],bh
   139e9:	cmp    BYTE PTR cs:[eax+0xa],bh
   139ed:	add    BYTE PTR [eax],al
   139ef:	add    BYTE PTR [esi+0x74],cl
   139f2:	push   edi
   139f3:	jb     0x13a5e
   139f5:	je     0x13a5c
   139f7:	push   esi
   139f8:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   139ff:	gs ins DWORD PTR es:[edi],dx
   13a01:	outs   dx,DWORD PTR ds:[esi]
   13a02:	jb     0x13a7d
   13a04:	and    BYTE PTR [ebp+0x72],ah
   13a07:	jb     0x13a78
   13a09:	jb     0x13a2b
   13a0b:	cmp    ah,BYTE PTR [eax]
   13a0d:	xor    BYTE PTR [eax+0x25],bh
   13a10:	cmp    BYTE PTR cs:[eax+0xa],bh
   13a14:	add    BYTE PTR [eax],al
   13a16:	add    BYTE PTR [eax],al
   13a18:	dec    esi
   13a19:	je     0x13a6b
   13a1b:	jb     0x13a8c
   13a1d:	je     0x13a84
   13a1f:	arpl   WORD PTR [esi+edx*2+0x69],si
   13a23:	jb     0x13a99
   13a25:	jne    0x13a88
   13a27:	ins    BYTE PTR es:[edi],dx
   13a28:	dec    ebp
   13a29:	gs ins DWORD PTR es:[edi],dx
   13a2b:	outs   dx,DWORD PTR ds:[esi]
   13a2c:	jb     0x13aa7
   13a2e:	and    BYTE PTR [ebp+0x72],ah
   13a31:	jb     0x13aa2
   13a33:	jb     0x13a55
   13a35:	cmp    ah,BYTE PTR [eax]
   13a37:	xor    BYTE PTR [eax+0x25],bh
   13a3a:	cmp    BYTE PTR cs:[eax+0xa],bh
   13a3e:	add    ah,cl
   13a40:	push   ebp
   13a41:	mov    ebp,esp
   13a43:	sub    esp,0x40
   13a46:	mov    eax,DWORD PTR [ebp+0xc]
   13a49:	mov    eax,DWORD PTR [eax]
   13a4b:	push   ebx
   13a4c:	mov    DWORD PTR [ebp-0x28],eax
   13a4f:	lea    eax,[ebp-0x28]
   13a52:	push   eax
   13a53:	lea    eax,[ebp-0x40]
   13a56:	push   eax
   13a57:	xor    ebx,ebx
   13a59:	push   0x1f0fff
   13a5e:	lea    eax,[ebp-0x8]
   13a61:	push   eax
   13a62:	mov    DWORD PTR [ebp-0x40],0x18
   13a69:	mov    DWORD PTR [ebp-0x3c],ebx
   13a6c:	mov    DWORD PTR [ebp-0x34],0x200
   13a73:	mov    DWORD PTR [ebp-0x38],ebx
   13a76:	mov    DWORD PTR [ebp-0x30],ebx
   13a79:	mov    DWORD PTR [ebp-0x2c],ebx
   13a7c:	mov    DWORD PTR [ebp-0x24],ebx
   13a7f:	mov    DWORD PTR [ebp-0x8],ebx
   13a82:	call   DWORD PTR ds:0x1b070
   13a88:	cmp    eax,ebx
   13a8a:	jge    0x13a9e
   13a8c:	push   eax
   13a8d:	push   0x13930
   13a92:	call   0x1a38a
   13a97:	pop    ecx
   13a98:	pop    ecx
   13a99:	jmp    0x13ce3
   13a9e:	push   esi
   13a9f:	mov    esi,DWORD PTR ds:0x1b0a4
   13aa5:	push   edi
   13aa6:	push   0x40
   13aa8:	mov    edi,0x1000
   13aad:	push   edi
   13aae:	lea    eax,[ebp-0xc]
   13ab1:	push   eax
   13ab2:	push   ebx
   13ab3:	lea    eax,[ebp-0x4]
   13ab6:	push   eax
   13ab7:	push   DWORD PTR [ebp-0x8]
   13aba:	mov    DWORD PTR [ebp-0x4],ebx
   13abd:	mov    DWORD PTR [ebp-0xc],0x400
   13ac4:	call   esi
   13ac6:	cmp    eax,ebx
   13ac8:	jl     0x13ad5
   13aca:	mov    eax,DWORD PTR [ebp-0x4]
   13acd:	mov    ecx,DWORD PTR [ebp+0xc]
   13ad0:	mov    DWORD PTR [ecx+0x8],eax
   13ad3:	jmp    0x13ae2
   13ad5:	push   eax
   13ad6:	push   0x13950
   13adb:	call   0x1a38a
   13ae0:	pop    ecx
   13ae1:	pop    ecx
   13ae2:	push   0x4
   13ae4:	push   edi
   13ae5:	lea    eax,[ebp-0xc]
   13ae8:	push   eax
   13ae9:	push   ebx
   13aea:	lea    eax,[ebp-0x10]
   13aed:	push   eax
   13aee:	push   DWORD PTR [ebp-0x8]
   13af1:	mov    DWORD PTR [ebp-0x10],ebx
   13af4:	mov    DWORD PTR [ebp-0xc],0x400
   13afb:	call   esi
   13afd:	cmp    eax,ebx
   13aff:	jl     0x13b0c
   13b01:	mov    eax,DWORD PTR [ebp-0x10]
   13b04:	mov    ecx,DWORD PTR [ebp+0xc]
   13b07:	mov    DWORD PTR [ecx+0xc],eax
   13b0a:	jmp    0x13b19
   13b0c:	push   eax
   13b0d:	push   0x1397c
   13b12:	call   0x1a38a
   13b17:	pop    ecx
   13b18:	pop    ecx
   13b19:	lea    eax,[ebp-0x18]
   13b1c:	push   eax
   13b1d:	push   DWORD PTR [ebp-0x28]
   13b20:	call   DWORD PTR ds:0x1b0a0
   13b26:	test   eax,eax
   13b28:	jl     0x13ce1
   13b2e:	push   DWORD PTR [ebp-0x18]
   13b31:	call   DWORD PTR ds:0x1b09c
   13b37:	mov    edi,DWORD PTR [ebp+0x8]
   13b3a:	push   edi
   13b3b:	push   0x139a8
   13b40:	call   0x1a38a
   13b45:	mov    esi,DWORD PTR [ebp-0x4]
   13b48:	cmp    esi,ebx
   13b4a:	pop    ecx
   13b4b:	pop    ecx
   13b4c:	je     0x13cc9
   13b52:	mov    ebx,DWORD PTR [ebp-0x10]
   13b55:	push   0x40
   13b57:	push   0x1d028
   13b5c:	push   ebx
   13b5d:	call   0x19b7e
   13b62:	push   0x139c0
   13b67:	push   ebx
   13b68:	call   DWORD PTR ds:0x1b114
   13b6e:	pop    ecx
   13b6f:	pop    ecx
   13b70:	push   0x60
   13b72:	push   esi
   13b73:	mov    DWORD PTR [ebp-0x14],esi
   13b76:	call   0x19b4e
   13b7b:	push   0x68
   13b7d:	push   eax
   13b7e:	call   0x19b4e
   13b83:	push   ebx
   13b84:	push   eax
   13b85:	call   0x19b5c
   13b8a:	push   0xb8
   13b8f:	push   eax
   13b90:	call   0x19b4e
   13b95:	push   DWORD PTR ds:0x833a0
   13b9b:	push   eax
   13b9c:	call   0x19b5c
   13ba1:	push   0xc00b
   13ba6:	push   eax
   13ba7:	call   0x19b6c
   13bac:	push   0x74
   13bae:	push   eax
   13baf:	call   0x19b4e
   13bb4:	push   0x2
   13bb6:	push   eax
   13bb7:	call   0x19b4e
   13bbc:	push   0xd0ff
   13bc1:	push   eax
   13bc2:	call   0x19b6c
   13bc7:	push   0x61
   13bc9:	push   eax
   13bca:	call   0x19b4e
   13bcf:	mov    DWORD PTR [ebp+0x8],eax
   13bd2:	mov    ebx,edi
   13bd4:	xor    esi,esi
   13bd6:	push   0x0
   13bd8:	push   ebx
   13bd9:	push   DWORD PTR [ebp+0x8]
   13bdc:	call   0x1a2e0
   13be1:	mov    ecx,eax
   13be3:	sub    ecx,ebx
   13be5:	add    DWORD PTR [ebp+0x8],ecx
   13be8:	add    esi,ecx
   13bea:	cmp    esi,0x5
   13bed:	mov    ebx,eax
   13bef:	jb     0x13bd6
   13bf1:	push   esi
   13bf2:	push   edi
   13bf3:	push   0x139cc
   13bf8:	call   0x138ee
   13bfd:	push   DWORD PTR [ebp+0x8]
   13c00:	add    esi,edi
   13c02:	push   esi
   13c03:	call   0x19ba0
   13c08:	push   DWORD PTR [ebp-0x14]
   13c0b:	push   0x139d8
   13c10:	call   0x1a38a
   13c15:	mov    eax,DWORD PTR [ebp-0x4]
   13c18:	test   eax,eax
   13c1a:	pop    ecx
   13c1b:	pop    ecx
   13c1c:	je     0x13cc9
   13c22:	add    eax,0x400
   13c27:	lea    esi,[eax-0xc]
   13c2a:	push   esi
   13c2b:	lea    ecx,[eax-0x8]
   13c2e:	push   0x40
   13c30:	lea    ebx,[eax-0x4]
   13c33:	push   ecx
   13c34:	lea    edx,[eax-0x10]
   13c37:	mov    DWORD PTR [ebx],edi
   13c39:	push   ebx
   13c3a:	add    eax,0xffffffe8
   13c3d:	mov    DWORD PTR [ecx],0x5
   13c43:	and    DWORD PTR [esi],0x0
   13c46:	push   0xffffffff
   13c48:	mov    DWORD PTR [ebp-0x20],ecx
   13c4b:	mov    DWORD PTR [ebp-0x1c],edx
   13c4e:	mov    DWORD PTR [ebp+0x8],eax
   13c51:	call   DWORD PTR ds:0x83328
   13c57:	test   eax,eax
   13c59:	jl     0x13cbc
   13c5b:	mov    eax,DWORD PTR [ebp-0x14]
   13c5e:	sub    eax,edi
   13c60:	sub    eax,0x5
   13c63:	push   eax
   13c64:	mov    eax,DWORD PTR [ebp+0x8]
   13c67:	inc    eax
   13c68:	push   eax
   13c69:	call   0x19b5c
   13c6e:	push   0xe9
   13c73:	push   DWORD PTR [ebp+0x8]
   13c76:	call   0x19b4e
   13c7b:	mov    eax,DWORD PTR [ebp-0x1c]
   13c7e:	and    DWORD PTR [eax],0x0
   13c81:	push   eax
   13c82:	push   0x5
   13c84:	push   DWORD PTR [ebp+0x8]
   13c87:	push   edi
   13c88:	push   0xffffffff
   13c8a:	call   DWORD PTR ds:0x8331c
   13c90:	test   eax,eax
   13c92:	jge    0x13ca1
   13c94:	push   eax
   13c95:	push   0x139f0
   13c9a:	call   0x1a38a
   13c9f:	pop    ecx
   13ca0:	pop    ecx
   13ca1:	mov    eax,DWORD PTR [ebp+0xc]
   13ca4:	mov    BYTE PTR [eax+0x10],0x1
   13ca8:	lea    eax,[ebp-0x14]
   13cab:	push   eax
   13cac:	push   DWORD PTR [esi]
   13cae:	push   DWORD PTR [ebp-0x20]
   13cb1:	push   ebx
   13cb2:	push   0xffffffff
   13cb4:	call   DWORD PTR ds:0x83328
   13cba:	jmp    0x13cc9
   13cbc:	push   eax
   13cbd:	push   0x13a18
   13cc2:	call   0x1a38a
   13cc7:	pop    ecx
   13cc8:	pop    ecx
   13cc9:	call   DWORD PTR ds:0x1b098
   13ccf:	mov    ecx,DWORD PTR [ebp-0x18]
   13cd2:	call   DWORD PTR ds:0x1b084
   13cd8:	push   DWORD PTR [ebp-0x8]
   13cdb:	call   DWORD PTR ds:0x1b10c
   13ce1:	pop    edi
   13ce2:	pop    esi
   13ce3:	pop    ebx
   13ce4:	leave  
   13ce5:	ret    0x8
   13ce8:	pop    edx
   13ce9:	ja     0x13d3a
   13ceb:	jo     0x13d52
   13ced:	outs   dx,BYTE PTR ds:[esi]
   13cee:	push   eax
   13cef:	jb     0x13d60
   13cf1:	arpl   WORD PTR [ebp+0x73],sp
   13cf4:	jae    0x13d1e
   13cf6:	sub    DWORD PTR [eax],esp
   13cf8:	inc    ebp
   13cf9:	push   edx
   13cfa:	push   edx
   13cfb:	dec    edi
   13cfc:	push   edx
   13cfd:	and    BYTE PTR [edx],bh
   13cff:	and    BYTE PTR [eax],dh
   13d01:	js     0x13d28
   13d03:	cmp    BYTE PTR cs:[eax+0xa],bh
   13d07:	add    BYTE PTR [edx+0x77],bl
   13d0a:	inc    ecx
   13d0b:	ins    BYTE PTR es:[edi],dx
   13d0c:	ins    BYTE PTR es:[edi],dx
   13d0d:	outs   dx,DWORD PTR ds:[esi]
   13d0e:	arpl   WORD PTR [ecx+0x74],sp
   13d11:	gs push esi
   13d13:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   13d1a:	gs ins DWORD PTR es:[edi],dx
   13d1c:	outs   dx,DWORD PTR ds:[esi]
   13d1d:	jb     0x13d98
   13d1f:	sub    BYTE PTR [ecx],ch
   13d21:	and    BYTE PTR [ebp+0x52],al
   13d24:	push   edx
   13d25:	dec    edi
   13d26:	push   edx
   13d27:	and    BYTE PTR [edx],bh
   13d29:	and    BYTE PTR [eax],dh
   13d2b:	js     0x13d52
   13d2d:	cmp    BYTE PTR cs:[eax+0xa],bh
   13d31:	add    BYTE PTR [eax],al
   13d33:	add    BYTE PTR [edx+0x77],bl
   13d36:	inc    ecx
   13d37:	ins    BYTE PTR es:[edi],dx
   13d38:	ins    BYTE PTR es:[edi],dx
   13d39:	outs   dx,DWORD PTR ds:[esi]
   13d3a:	arpl   WORD PTR [ecx+0x74],sp
   13d3d:	gs push esi
   13d3f:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   13d46:	gs ins DWORD PTR es:[edi],dx
   13d48:	outs   dx,DWORD PTR ds:[esi]
   13d49:	jb     0x13dc4
   13d4b:	sub    BYTE PTR [ecx],ch
   13d4d:	and    BYTE PTR [ebp+0x52],al
   13d50:	push   edx
   13d51:	dec    edi
   13d52:	push   edx
   13d53:	and    BYTE PTR [edx],bh
   13d55:	and    BYTE PTR [eax],dh
   13d57:	js     0x13d7e
   13d59:	cmp    BYTE PTR cs:[eax+0xa],bh
   13d5d:	add    BYTE PTR [eax],al
   13d5f:	add    BYTE PTR [ebx+0x74],dl
   13d62:	popa   
   13d63:	jb     0x13dd9
   13d65:	and    BYTE PTR [ecx+0x64],ah
   13d68:	fs jb  0x13d8b
   13d6b:	cmp    ah,BYTE PTR [eax]
   13d6d:	xor    BYTE PTR [eax+0x25],bh
   13d70:	cmp    BYTE PTR cs:[eax+0xa],bh
   13d74:	add    BYTE PTR [eax],al
   13d76:	add    BYTE PTR [eax],al
   13d78:	inc    ebp
   13d79:	push   eax
   13d7a:	and    BYTE PTR [ebx+0x74],dh
   13d7d:	popa   
   13d7e:	jb     0x13df4
   13d80:	cmp    al,BYTE PTR [eax]
   13d82:	add    BYTE PTR [eax],al
   13d84:	dec    esi
   13d85:	gs ja  0x13da8
   13d88:	inc    ebp
   13d89:	push   eax
   13d8a:	and    BYTE PTR [ecx+0x64],ah
   13d8d:	fs jb  0x13db0
   13d90:	cmp    ah,BYTE PTR [eax]
   13d92:	xor    BYTE PTR [eax+0x25],bh
   13d95:	cmp    BYTE PTR cs:[eax+0xa],bh
   13d99:	add    BYTE PTR [eax],al
   13d9b:	add    BYTE PTR [esi+0x74],cl
   13d9e:	push   edi
   13d9f:	jb     0x13e0a
   13da1:	je     0x13e08
   13da3:	push   esi
   13da4:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   13dab:	gs ins DWORD PTR es:[edi],dx
   13dad:	outs   dx,DWORD PTR ds:[esi]
   13dae:	jb     0x13e29
   13db0:	and    BYTE PTR [ebp+0x72],ah
   13db3:	jb     0x13e24
   13db5:	jb     0x13dd7
   13db7:	cmp    ah,BYTE PTR [eax]
   13db9:	xor    BYTE PTR [eax+0x25],bh
   13dbc:	cmp    BYTE PTR cs:[eax+0xa],bh
   13dc0:	add    BYTE PTR [eax],al
   13dc2:	add    BYTE PTR [eax],al
   13dc4:	dec    esi
   13dc5:	je     0x13e17
   13dc7:	jb     0x13e38
   13dc9:	je     0x13e30
   13dcb:	arpl   WORD PTR [esi+edx*2+0x69],si
   13dcf:	jb     0x13e45
   13dd1:	jne    0x13e34
   13dd3:	ins    BYTE PTR es:[edi],dx
   13dd4:	dec    ebp
   13dd5:	gs ins DWORD PTR es:[edi],dx
   13dd7:	outs   dx,DWORD PTR ds:[esi]
   13dd8:	jb     0x13e53
   13dda:	and    BYTE PTR [ebp+0x72],ah
   13ddd:	jb     0x13e4e
   13ddf:	jb     0x13e01
   13de1:	cmp    ah,BYTE PTR [eax]
   13de3:	xor    BYTE PTR [eax+0x25],bh
   13de6:	cmp    BYTE PTR cs:[eax+0xa],bh
   13dea:	add    ah,cl
   13dec:	push   ebp
   13ded:	mov    ebp,esp
   13def:	sub    esp,0x48
   13df2:	mov    eax,DWORD PTR [ebp+0xc]
   13df5:	mov    eax,DWORD PTR [eax]
   13df7:	push   ebx
   13df8:	mov    DWORD PTR [ebp-0x30],eax
   13dfb:	lea    eax,[ebp-0x30]
   13dfe:	push   eax
   13dff:	lea    eax,[ebp-0x48]
   13e02:	push   eax
   13e03:	xor    ebx,ebx
   13e05:	push   0x1f0fff
   13e0a:	lea    eax,[ebp-0x10]
   13e0d:	push   eax
   13e0e:	mov    DWORD PTR [ebp-0x48],0x18
   13e15:	mov    DWORD PTR [ebp-0x44],ebx
   13e18:	mov    DWORD PTR [ebp-0x3c],0x200
   13e1f:	mov    DWORD PTR [ebp-0x40],ebx
   13e22:	mov    DWORD PTR [ebp-0x38],ebx
   13e25:	mov    DWORD PTR [ebp-0x34],ebx
   13e28:	mov    DWORD PTR [ebp-0x2c],ebx
   13e2b:	mov    DWORD PTR [ebp-0x10],ebx
   13e2e:	call   DWORD PTR ds:0x1b070
   13e34:	cmp    eax,ebx
   13e36:	jge    0x13e4a
   13e38:	push   eax
   13e39:	push   0x13ce8
   13e3e:	call   0x1a38a
   13e43:	pop    ecx
   13e44:	pop    ecx
   13e45:	jmp    0x141f8
   13e4a:	push   esi
   13e4b:	mov    esi,DWORD PTR ds:0x1b0a4
   13e51:	push   edi
   13e52:	push   0x40
   13e54:	mov    edi,0x1000
   13e59:	push   edi
   13e5a:	lea    eax,[ebp-0x14]
   13e5d:	push   eax
   13e5e:	push   ebx
   13e5f:	lea    eax,[ebp-0xc]
   13e62:	push   eax
   13e63:	push   DWORD PTR [ebp-0x10]
   13e66:	mov    DWORD PTR [ebp-0xc],ebx
   13e69:	mov    DWORD PTR [ebp-0x14],0x400
   13e70:	call   esi
   13e72:	cmp    eax,ebx
   13e74:	jl     0x13e81
   13e76:	mov    eax,DWORD PTR [ebp-0xc]
   13e79:	mov    ecx,DWORD PTR [ebp+0xc]
   13e7c:	mov    DWORD PTR [ecx+0x8],eax
   13e7f:	jmp    0x13e8e
   13e81:	push   eax
   13e82:	push   0x13d08
   13e87:	call   0x1a38a
   13e8c:	pop    ecx
   13e8d:	pop    ecx
   13e8e:	push   0x4
   13e90:	push   edi
   13e91:	lea    eax,[ebp-0x14]
   13e94:	push   eax
   13e95:	push   ebx
   13e96:	lea    eax,[ebp-0x18]
   13e99:	push   eax
   13e9a:	push   DWORD PTR [ebp-0x10]
   13e9d:	mov    DWORD PTR [ebp-0x18],ebx
   13ea0:	mov    DWORD PTR [ebp-0x14],0x400
   13ea7:	call   esi
   13ea9:	cmp    eax,ebx
   13eab:	jl     0x13eb8
   13ead:	mov    eax,DWORD PTR [ebp-0x18]
   13eb0:	mov    ecx,DWORD PTR [ebp+0xc]
   13eb3:	mov    DWORD PTR [ecx+0xc],eax
   13eb6:	jmp    0x13ec5
   13eb8:	push   eax
   13eb9:	push   0x13d34
   13ebe:	call   0x1a38a
   13ec3:	pop    ecx
   13ec4:	pop    ecx
   13ec5:	lea    eax,[ebp-0x24]
   13ec8:	push   eax
   13ec9:	push   DWORD PTR [ebp-0x30]
   13ecc:	call   DWORD PTR ds:0x1b0a0
   13ed2:	test   eax,eax
   13ed4:	jl     0x141f6
   13eda:	push   DWORD PTR [ebp-0x24]
   13edd:	call   DWORD PTR ds:0x1b09c
   13ee3:	push   DWORD PTR [ebp+0x8]
   13ee6:	push   0x13d60
   13eeb:	call   0x1a38a
   13ef0:	mov    edx,DWORD PTR [ebp-0xc]
   13ef3:	cmp    edx,ebx
   13ef5:	pop    ecx
   13ef6:	pop    ecx
   13ef7:	mov    DWORD PTR [ebp-0x20],ebx
   13efa:	je     0x141de
   13f00:	mov    esi,DWORD PTR [ebp-0x18]
   13f03:	cmp    esi,ebx
   13f05:	je     0x14128
   13f0b:	xor    eax,eax
   13f0d:	mov    ecx,0x85
   13f12:	mov    edi,esi
   13f14:	rep stos DWORD PTR es:[edi],eax
   13f16:	push   0x60
   13f18:	lea    edi,[esi+0xc]
   13f1b:	push   edx
   13f1c:	mov    DWORD PTR [edi],ebx
   13f1e:	mov    DWORD PTR [esi],ebx
   13f20:	mov    DWORD PTR [ebp-0x20],edx
   13f23:	call   0x19b4e
   13f28:	push   0x68
   13f2a:	push   eax
   13f2b:	call   0x19b4e
   13f30:	push   edi
   13f31:	push   eax
   13f32:	call   0x19b5c
   13f37:	push   0x6a
   13f39:	pop    edi
   13f3a:	push   edi
   13f3b:	push   eax
   13f3c:	call   0x19b4e
   13f41:	push   ebx
   13f42:	push   eax
   13f43:	call   0x19b4e
   13f48:	push   edi
   13f49:	push   eax
   13f4a:	call   0x19b4e
   13f4f:	push   ebx
   13f50:	push   eax
   13f51:	call   0x19b4e
   13f56:	push   0x68
   13f58:	push   eax
   13f59:	call   0x19b4e
   13f5e:	push   ebx
   13f5f:	push   eax
   13f60:	mov    DWORD PTR [ebp-0x28],eax
   13f63:	call   0x19b5c
   13f68:	push   edi
   13f69:	push   eax
   13f6a:	call   0x19b4e
   13f6f:	push   ebx
   13f70:	push   eax
   13f71:	call   0x19b4e
   13f76:	push   edi
   13f77:	push   eax
   13f78:	call   0x19b4e
   13f7d:	push   ebx
   13f7e:	push   eax
   13f7f:	call   0x19b4e
   13f84:	push   0xb8
   13f89:	push   eax
   13f8a:	call   0x19b4e
   13f8f:	push   DWORD PTR ds:0x833a4
   13f95:	push   eax
   13f96:	call   0x19b5c
   13f9b:	mov    ebx,0xc00b
   13fa0:	push   ebx
   13fa1:	push   eax
   13fa2:	call   0x19b6c
   13fa7:	push   0x74
   13fa9:	push   eax
   13faa:	call   0x19b4e
   13faf:	push   0x9
   13fb1:	push   eax
   13fb2:	call   0x19b4e
   13fb7:	mov    edi,0xd0ff
   13fbc:	push   edi
   13fbd:	push   eax
   13fbe:	call   0x19b6c
   13fc3:	push   0xb9
   13fc8:	push   eax
   13fc9:	call   0x19b4e
   13fce:	lea    ecx,[esi+0x10]
   13fd1:	push   ecx
   13fd2:	push   eax
   13fd3:	call   0x19b5c
   13fd8:	push   0x189
   13fdd:	push   eax
   13fde:	call   0x19b6c
   13fe3:	push   0x61
   13fe5:	push   eax
   13fe6:	call   0x19b4e
   13feb:	and    DWORD PTR [ebp-0x8],0x0
   13fef:	mov    DWORD PTR [ebp-0x4],eax
   13ff2:	mov    eax,DWORD PTR [ebp+0x8]
   13ff5:	mov    DWORD PTR [ebp-0x1c],eax
   13ff8:	push   0x0
   13ffa:	push   DWORD PTR [ebp-0x1c]
   13ffd:	push   DWORD PTR [ebp-0x4]
   14000:	call   0x1a2e0
   14005:	mov    ecx,eax
   14007:	sub    ecx,DWORD PTR [ebp-0x1c]
   1400a:	mov    DWORD PTR [ebp-0x1c],eax
   1400d:	add    DWORD PTR [ebp-0x8],ecx
   14010:	add    DWORD PTR [ebp-0x4],ecx
   14013:	cmp    DWORD PTR [ebp-0x8],0x5
   14017:	jb     0x13ff8
   14019:	push   DWORD PTR [ebp-0x8]
   1401c:	push   DWORD PTR [ebp+0x8]
   1401f:	push   0x13d78
   14024:	call   0x138ee
   14029:	mov    ecx,DWORD PTR [ebp+0x8]
   1402c:	push   DWORD PTR [ebp-0x4]
   1402f:	mov    eax,DWORD PTR [ebp-0x8]
   14032:	add    eax,ecx
   14034:	push   eax
   14035:	call   0x19ba0
   1403a:	push   DWORD PTR [ebp-0x20]
   1403d:	mov    DWORD PTR [ebp-0x4],eax
   14040:	push   0x13d84
   14045:	call   0x1a38a
   1404a:	pop    ecx
   1404b:	pop    ecx
   1404c:	push   DWORD PTR [ebp-0x4]
   1404f:	push   DWORD PTR [ebp-0x28]
   14052:	call   0x19b5c
   14057:	mov    eax,DWORD PTR [ebp-0x4]
   1405a:	push   0xeb
   1405f:	push   eax
   14060:	mov    DWORD PTR [esi],eax
   14062:	call   0x19b4e
   14067:	push   0x0
   14069:	push   eax
   1406a:	mov    DWORD PTR [esi+0x4],eax
   1406d:	call   0x19b4e
   14072:	push   0x68
   14074:	push   eax
   14075:	call   0x19b4e
   1407a:	push   0x3e8
   1407f:	push   eax
   14080:	call   0x19b5c
   14085:	push   0xb8
   1408a:	push   eax
   1408b:	call   0x19b4e
   14090:	push   DWORD PTR ds:0x833a8
   14096:	push   eax
   14097:	call   0x19b5c
   1409c:	push   ebx
   1409d:	push   eax
   1409e:	call   0x19b6c
   140a3:	push   0x74
   140a5:	push   eax
   140a6:	call   0x19b4e
   140ab:	push   0x2
   140ad:	push   eax
   140ae:	call   0x19b4e
   140b3:	push   edi
   140b4:	push   eax
   140b5:	call   0x19b6c
   140ba:	push   eax
   140bb:	push   DWORD PTR [esi]
   140bd:	call   0x19ba0
   140c2:	mov    cl,al
   140c4:	sub    cl,BYTE PTR [esi+0x4]
   140c7:	push   0x68
   140c9:	dec    cl
   140cb:	push   eax
   140cc:	mov    BYTE PTR [esi+0x8],cl
   140cf:	call   0x19b4e
   140d4:	add    esi,0x14
   140d7:	push   esi
   140d8:	push   eax
   140d9:	call   0x19b5c
   140de:	push   0xb8
   140e3:	push   eax
   140e4:	call   0x19b4e
   140e9:	push   DWORD PTR ds:0x833a0
   140ef:	push   eax
   140f0:	call   0x19b5c
   140f5:	push   ebx
   140f6:	push   eax
   140f7:	call   0x19b6c
   140fc:	push   0x74
   140fe:	push   eax
   140ff:	call   0x19b4e
   14104:	push   0x2
   14106:	push   eax
   14107:	call   0x19b4e
   1410c:	push   edi
   1410d:	push   eax
   1410e:	call   0x19b6c
   14113:	push   0xc2
   14118:	push   eax
   14119:	call   0x19b4e
   1411e:	push   0x4
   14120:	push   eax
   14121:	call   0x19b6c
   14126:	xor    ebx,ebx
   14128:	mov    eax,DWORD PTR [ebp-0xc]
   1412b:	cmp    eax,ebx
   1412d:	je     0x141de
   14133:	add    eax,0x400
   14138:	lea    esi,[eax-0xc]
   1413b:	lea    ecx,[eax-0x8]
   1413e:	push   esi
   1413f:	lea    edi,[eax-0x4]
   14142:	lea    edx,[eax-0x10]
   14145:	push   0x40
   14147:	add    eax,0xffffffe8
   1414a:	push   ecx
   1414b:	mov    DWORD PTR [ebp-0x1c],eax
   1414e:	mov    eax,DWORD PTR [ebp+0x8]
   14151:	mov    DWORD PTR [edi],eax
   14153:	push   edi
   14154:	mov    DWORD PTR [ecx],0x5
   1415a:	push   0xffffffff
   1415c:	mov    DWORD PTR [ebp-0x8],ecx
   1415f:	mov    DWORD PTR [ebp-0x28],edx
   14162:	mov    DWORD PTR [esi],ebx
   14164:	call   DWORD PTR ds:0x83328
   1416a:	cmp    eax,ebx
   1416c:	jl     0x141d1
   1416e:	mov    eax,DWORD PTR [ebp-0x20]
   14171:	sub    eax,DWORD PTR [ebp+0x8]
   14174:	sub    eax,0x5
   14177:	push   eax
   14178:	mov    eax,DWORD PTR [ebp-0x1c]
   1417b:	inc    eax
   1417c:	push   eax
   1417d:	call   0x19b5c
   14182:	push   0xe9
   14187:	push   DWORD PTR [ebp-0x1c]
   1418a:	call   0x19b4e
   1418f:	mov    eax,DWORD PTR [ebp-0x28]
   14192:	push   eax
   14193:	push   0x5
   14195:	push   DWORD PTR [ebp-0x1c]
   14198:	mov    DWORD PTR [eax],ebx
   1419a:	push   DWORD PTR [ebp+0x8]
   1419d:	push   0xffffffff
   1419f:	call   DWORD PTR ds:0x8331c
   141a5:	cmp    eax,ebx
   141a7:	jge    0x141b6
   141a9:	push   eax
   141aa:	push   0x13d9c
   141af:	call   0x1a38a
   141b4:	pop    ecx
   141b5:	pop    ecx
   141b6:	mov    eax,DWORD PTR [ebp+0xc]
   141b9:	mov    BYTE PTR [eax+0x10],0x1
   141bd:	lea    eax,[ebp-0x20]
   141c0:	push   eax
   141c1:	push   DWORD PTR [esi]
   141c3:	push   DWORD PTR [ebp-0x8]
   141c6:	push   edi
   141c7:	push   0xffffffff
   141c9:	call   DWORD PTR ds:0x83328
   141cf:	jmp    0x141de
   141d1:	push   eax
   141d2:	push   0x13dc4
   141d7:	call   0x1a38a
   141dc:	pop    ecx
   141dd:	pop    ecx
   141de:	call   DWORD PTR ds:0x1b098
   141e4:	mov    ecx,DWORD PTR [ebp-0x24]
   141e7:	call   DWORD PTR ds:0x1b084
   141ed:	push   DWORD PTR [ebp-0x10]
   141f0:	call   DWORD PTR ds:0x1b10c
   141f6:	pop    edi
   141f7:	pop    esi
   141f8:	pop    ebx
   141f9:	leave  
   141fa:	ret    0x8
   141fd:	int3   
   141fe:	push   ebp
   141ff:	mov    ebp,esp
   14201:	sub    esp,0x18
   14204:	and    DWORD PTR [ebp-0x18],0x0
   14208:	push   edi
   14209:	xor    eax,eax
   1420b:	lea    edi,[ebp-0x14]
   1420e:	stos   DWORD PTR es:[edi],eax
   1420f:	stos   DWORD PTR es:[edi],eax
   14210:	stos   DWORD PTR es:[edi],eax
   14211:	stos   DWORD PTR es:[edi],eax
   14212:	lea    eax,[ebp-0x18]
   14215:	push   eax
   14216:	push   0x1
   14218:	call   0x12daa
   1421d:	test   al,al
   1421f:	pop    edi
   14220:	je     0x1426d
   14222:	cmp    DWORD PTR [ebp-0x18],0x0
   14226:	je     0x1426d
   14228:	lea    eax,[ebp-0x4]
   1422b:	push   eax
   1422c:	push   DWORD PTR [ebp-0x18]
   1422f:	call   DWORD PTR ds:0x1b0a0
   14235:	test   eax,eax
   14237:	jl     0x1426d
   14239:	push   esi
   1423a:	push   DWORD PTR [ebp-0x4]
   1423d:	call   DWORD PTR ds:0x1b09c
   14243:	mov    esi,DWORD PTR [ebp-0xc]
   14246:	push   DWORD PTR [ebp+0x8]
   14249:	lea    eax,[esi+0x14]
   1424c:	push   eax
   1424d:	call   DWORD PTR ds:0x1b0ac
   14253:	mov    eax,DWORD PTR [esi+0x4]
   14256:	pop    ecx
   14257:	pop    ecx
   14258:	mov    cl,BYTE PTR [esi+0x8]
   1425b:	mov    BYTE PTR [eax],cl
   1425d:	call   DWORD PTR ds:0x1b098
   14263:	mov    ecx,DWORD PTR [ebp-0x4]
   14266:	call   DWORD PTR ds:0x1b084
   1426c:	pop    esi
   1426d:	leave  
   1426e:	ret    0x4
   14271:	int3   
   14272:	imul   eax,DWORD PTR [eax],0x65
   14275:	add    BYTE PTR [edx+0x0],dh
   14278:	outs   dx,BYTE PTR ds:[esi]
   14279:	add    BYTE PTR [ebp+0x0],ah
   1427c:	ins    BYTE PTR es:[edi],dx
   1427d:	add    BYTE PTR [ebx],dh
   1427f:	add    BYTE PTR [edx],dh
   14281:	add    BYTE PTR [esi],ch
   14283:	add    BYTE PTR [eax+eax*1+0x6c],ah
   14287:	add    BYTE PTR [eax+eax*1+0x0],ch
   1428b:	add    BYTE PTR [eax],al
   1428d:	add    BYTE PTR [edi+ebp*2+0x61],cl
   14291:	fs dec esp
   14293:	imul   esp,DWORD PTR [edx+0x72],0x57797261
   1429a:	add    BYTE PTR [eax],al
   1429c:	add    BYTE PTR [eax],al
   1429e:	dec    esp
   1429f:	outs   dx,DWORD PTR ds:[esi]
   142a0:	popa   
   142a1:	fs dec esp
   142a3:	imul   esp,DWORD PTR [edx+0x72],0x20797261
   142aa:	popa   
   142ab:	fs fs jb 0x142cf
   142af:	cmp    ah,BYTE PTR [eax]
   142b1:	xor    BYTE PTR [eax+0x25],bh
   142b4:	cmp    BYTE PTR cs:[eax+0xa],bh
   142b8:	add    BYTE PTR [eax],al
   142ba:	inc    ebx
   142bb:	jb     0x14322
   142bd:	popa   
   142be:	je     0x14325
   142c0:	push   esp
   142c1:	push   0x64616572
   142c6:	add    BYTE PTR [eax],al
   142c8:	add    BYTE PTR [eax],al
   142ca:	inc    ebx
   142cb:	jb     0x14332
   142cd:	popa   
   142ce:	je     0x14335
   142d0:	push   esp
   142d1:	push   0x64616572
   142d6:	and    BYTE PTR [ecx+0x64],ah
   142d9:	fs jb  0x142fc
   142dc:	cmp    ah,BYTE PTR [eax]
   142de:	xor    BYTE PTR [eax+0x25],bh
   142e1:	cmp    BYTE PTR cs:[eax+0xa],bh
   142e5:	add    BYTE PTR [ebx+0x6c],dl
   142e8:	gs gs jo 0x142ec
   142ec:	add    BYTE PTR [eax],al
   142ee:	push   ebx
   142ef:	ins    BYTE PTR es:[edi],dx
   142f0:	gs gs jo 0x14314
   142f4:	popa   
   142f5:	fs fs jb 0x14319
   142f9:	cmp    ah,BYTE PTR [eax]
   142fb:	xor    BYTE PTR [eax+0x25],bh
   142fe:	cmp    BYTE PTR cs:[eax+0xa],bh
   14302:	add    BYTE PTR [eax],al
   14304:	add    BYTE PTR [eax],al
   14306:	inc    edx
   14307:	gs gs jo 0x1430b
   1430b:	add    BYTE PTR [eax],al
   1430d:	add    BYTE PTR [edx+0x65],al
   14310:	gs jo  0x14333
   14313:	popa   
   14314:	fs fs jb 0x14338
   14318:	cmp    ah,BYTE PTR [eax]
   1431a:	xor    BYTE PTR [eax+0x25],bh
   1431d:	cmp    BYTE PTR cs:[eax+0xa],bh
   14321:	add    BYTE PTR [ebx+0x833a03d],al
   14327:	add    BYTE PTR [eax],al
   14329:	jne    0x143cc
   1432f:	push   0x14272
   14334:	push   DWORD PTR [esp+0x8]
   14338:	call   0x12d02
   1433d:	test   al,al
   1433f:	je     0x143cc
   14345:	push   esi
   14346:	mov    esi,DWORD PTR [esp+0x10]
   1434a:	push   0x1428e
   1434f:	push   DWORD PTR [esi+0x4]
   14352:	call   0x137be
   14357:	push   eax
   14358:	push   0x1429e
   1435d:	mov    ds:0x833a0,eax
   14362:	call   0x1a38a
   14367:	pop    ecx
   14368:	pop    ecx
   14369:	push   0x142ba
   1436e:	push   DWORD PTR [esi+0x4]
   14371:	call   0x137be
   14376:	push   eax
   14377:	push   0x142ca
   1437c:	mov    ds:0x833a4,eax
   14381:	call   0x1a38a
   14386:	pop    ecx
   14387:	pop    ecx
   14388:	push   0x142e6
   1438d:	push   DWORD PTR [esi+0x4]
   14390:	call   0x137be
   14395:	push   eax
   14396:	push   0x142ee
   1439b:	mov    ds:0x833a8,eax
   143a0:	call   0x1a38a
   143a5:	pop    ecx
   143a6:	pop    ecx
   143a7:	push   0x14306
   143ac:	push   DWORD PTR [esi+0x4]
   143af:	call   0x137be
   143b4:	push   DWORD PTR ds:0x833a8
   143ba:	mov    ds:0x833ac,eax
   143bf:	push   0x1430e
   143c4:	call   0x1a38a
   143c9:	pop    ecx
   143ca:	pop    ecx
   143cb:	pop    esi
   143cc:	ret    0xc
   143cf:	int3   
   143d0:	pop    edx
   143d1:	ja     0x14424
   143d3:	jne    0x1443a
   143d5:	jb     0x14450
   143d7:	dec    ecx
   143d8:	outs   dx,BYTE PTR ds:[esi]
   143d9:	outs   dx,WORD PTR ds:[esi]
   143db:	jb     0x1444a
   143dd:	popa   
   143de:	je     0x14449
   143e0:	outs   dx,DWORD PTR ds:[esi]
   143e1:	outs   dx,BYTE PTR ds:[esi]
   143e2:	push   esp
   143e3:	push   0x64616572
   143e8:	sub    BYTE PTR [ecx],ch
   143ea:	and    BYTE PTR [ebp+0x52],al
   143ed:	push   edx
   143ee:	dec    edi
   143ef:	push   edx
   143f0:	and    BYTE PTR [edx],bh
   143f2:	and    BYTE PTR [eax],dh
   143f4:	js     0x1441b
   143f6:	cmp    BYTE PTR cs:[eax+0xa],bh
   143fa:	add    BYTE PTR [eax],al
   143fc:	pop    edx
   143fd:	ja     0x14450
   143ff:	jne    0x14466
   14401:	jb     0x1447c
   14403:	dec    ecx
   14404:	outs   dx,BYTE PTR ds:[esi]
   14405:	outs   dx,WORD PTR ds:[esi]
   14407:	jb     0x14476
   14409:	popa   
   1440a:	je     0x14475
   1440c:	outs   dx,DWORD PTR ds:[esi]
   1440d:	outs   dx,BYTE PTR ds:[esi]
   1440e:	push   esp
   1440f:	push   0x64616572
   14414:	sub    BYTE PTR [ecx],ch
   14416:	and    BYTE PTR [ebp+0x52],al
   14419:	push   edx
   1441a:	dec    edi
   1441b:	push   edx
   1441c:	and    BYTE PTR [edx],bh
   1441e:	and    BYTE PTR [eax],dh
   14420:	js     0x14447
   14422:	cmp    BYTE PTR cs:[eax+0xa],bh
   14426:	add    BYTE PTR [eax],al
   14428:	pop    edx
   14429:	ja     0x1447c
   1442b:	jne    0x14492
   1442d:	jb     0x144a8
   1442f:	dec    ecx
   14430:	outs   dx,BYTE PTR ds:[esi]
   14431:	outs   dx,WORD PTR ds:[esi]
   14433:	jb     0x144a2
   14435:	popa   
   14436:	je     0x144a1
   14438:	outs   dx,DWORD PTR ds:[esi]
   14439:	outs   dx,BYTE PTR ds:[esi]
   1443a:	push   esp
   1443b:	push   0x64616572
   14440:	sub    BYTE PTR [ecx],ch
   14442:	and    BYTE PTR [ebp+0x52],al
   14445:	push   edx
   14446:	dec    edi
   14447:	push   edx
   14448:	and    BYTE PTR [edx],bh
   1444a:	and    BYTE PTR [eax],dh
   1444c:	js     0x14473
   1444e:	cmp    BYTE PTR cs:[eax+0xa],bh
   14452:	add    BYTE PTR [eax],al
   14454:	pop    edx
   14455:	ja     0x144a8
   14457:	jne    0x144be
   14459:	jb     0x144d4
   1445b:	dec    ecx
   1445c:	outs   dx,BYTE PTR ds:[esi]
   1445d:	outs   dx,WORD PTR ds:[esi]
   1445f:	jb     0x144ce
   14461:	popa   
   14462:	je     0x144cd
   14464:	outs   dx,DWORD PTR ds:[esi]
   14465:	outs   dx,BYTE PTR ds:[esi]
   14466:	push   esp
   14467:	push   0x64616572
   1446c:	sub    BYTE PTR [ecx],ch
   1446e:	and    BYTE PTR [ebp+0x52],al
   14471:	push   edx
   14472:	dec    edi
   14473:	push   edx
   14474:	and    BYTE PTR [edx],bh
   14476:	and    BYTE PTR [eax],dh
   14478:	js     0x1449f
   1447a:	cmp    BYTE PTR cs:[eax+0xa],bh
   1447e:	add    ah,cl
   14480:	push   ebp
   14481:	mov    ebp,esp
   14483:	sub    esp,0x4c
   14486:	push   ebx
   14487:	push   esi
   14488:	push   edi
   14489:	push   DWORD PTR [ebp+0xc]
   1448c:	push   DWORD PTR [ebp+0x8]
   1448f:	call   DWORD PTR ds:0x83330
   14495:	mov    DWORD PTR [ebp-0x8],eax
   14498:	xor    eax,eax
   1449a:	xor    ebx,ebx
   1449c:	mov    DWORD PTR [ebp-0x30],ebx
   1449f:	lea    edi,[ebp-0x2c]
   144a2:	stos   DWORD PTR es:[edi],eax
   144a3:	stos   DWORD PTR es:[edi],eax
   144a4:	stos   DWORD PTR es:[edi],eax
   144a5:	stos   DWORD PTR es:[edi],eax
   144a6:	xor    eax,eax
   144a8:	mov    DWORD PTR [ebp-0x1c],ebx
   144ab:	lea    edi,[ebp-0x18]
   144ae:	stos   DWORD PTR es:[edi],eax
   144af:	stos   DWORD PTR es:[edi],eax
   144b0:	stos   DWORD PTR es:[edi],eax
   144b1:	stos   DWORD PTR es:[edi],eax
   144b2:	lea    eax,[ebp-0x30]
   144b5:	push   eax
   144b6:	push   ebx
   144b7:	call   0x12daa
   144bc:	mov    BYTE PTR [ebp+0xf],al
   144bf:	lea    eax,[ebp-0x1c]
   144c2:	push   eax
   144c3:	push   0x1
   144c5:	call   0x12daa
   144ca:	cmp    BYTE PTR [ebp+0xf],bl
   144cd:	mov    esi,DWORD PTR ds:0x1b0b0
   144d3:	mov    BYTE PTR [ebp-0x1],al
   144d6:	je     0x1454c
   144d8:	cmp    DWORD PTR [ebp-0x30],ebx
   144db:	je     0x1454c
   144dd:	push   0x6
   144df:	pop    ecx
   144e0:	push   ebx
   144e1:	xor    eax,eax
   144e3:	mov    DWORD PTR [ebp-0x4c],ebx
   144e6:	lea    edi,[ebp-0x48]
   144e9:	push   0x1c
   144eb:	rep stos DWORD PTR es:[edi],eax
   144ed:	lea    eax,[ebp-0x4c]
   144f0:	push   eax
   144f1:	push   ebx
   144f2:	push   DWORD PTR [ebp+0x8]
   144f5:	call   esi
   144f7:	cmp    eax,ebx
   144f9:	jge    0x14508
   144fb:	push   eax
   144fc:	push   0x143d0
   14501:	call   0x1a38a
   14506:	pop    ecx
   14507:	pop    ecx
   14508:	mov    eax,DWORD PTR [ebp-0x30]
   1450b:	cmp    DWORD PTR [ebp-0x44],eax
   1450e:	jne    0x1454c
   14510:	push   ebx
   14511:	push   0x4
   14513:	lea    eax,[ebp+0xc]
   14516:	push   eax
   14517:	push   0x9
   14519:	push   DWORD PTR [ebp+0x8]
   1451c:	mov    DWORD PTR [ebp+0xc],ebx
   1451f:	call   esi
   14521:	cmp    eax,ebx
   14523:	jge    0x14535
   14525:	push   eax
   14526:	push   0x143fc
   1452b:	call   0x1a38a
   14530:	pop    ecx
   14531:	pop    ecx
   14532:	mov    DWORD PTR [ebp+0xc],ebx
   14535:	cmp    DWORD PTR [ebp+0xc],ebx
   14538:	je     0x1454c
   1453a:	lea    eax,[ebp-0x30]
   1453d:	push   eax
   1453e:	push   DWORD PTR [ebp+0xc]
   14541:	call   0x13a40
   14546:	push   ebx
   14547:	call   0x12e72
   1454c:	cmp    BYTE PTR [ebp-0x1],bl
   1454f:	je     0x145cf
   14551:	cmp    DWORD PTR [ebp-0x1c],ebx
   14554:	je     0x145cf
   14556:	cmp    BYTE PTR [ebp-0xc],bl
   14559:	jne    0x145cf
   1455b:	push   0x6
   1455d:	pop    ecx
   1455e:	push   ebx
   1455f:	xor    eax,eax
   14561:	mov    DWORD PTR [ebp-0x4c],ebx
   14564:	lea    edi,[ebp-0x48]
   14567:	push   0x1c
   14569:	rep stos DWORD PTR es:[edi],eax
   1456b:	lea    eax,[ebp-0x4c]
   1456e:	push   eax
   1456f:	push   ebx
   14570:	push   DWORD PTR [ebp+0x8]
   14573:	call   esi
   14575:	cmp    eax,ebx
   14577:	jge    0x14586
   14579:	push   eax
   1457a:	push   0x14428
   1457f:	call   0x1a38a
   14584:	pop    ecx
   14585:	pop    ecx
   14586:	mov    eax,DWORD PTR [ebp-0x1c]
   14589:	cmp    DWORD PTR [ebp-0x44],eax
   1458c:	jne    0x145cf
   1458e:	push   ebx
   1458f:	push   0x4
   14591:	lea    eax,[ebp+0xc]
   14594:	push   eax
   14595:	push   0x9
   14597:	push   DWORD PTR [ebp+0x8]
   1459a:	mov    DWORD PTR [ebp+0xc],ebx
   1459d:	call   esi
   1459f:	cmp    eax,ebx
   145a1:	jge    0x145b3
   145a3:	push   eax
   145a4:	push   0x14454
   145a9:	call   0x1a38a
   145ae:	pop    ecx
   145af:	pop    ecx
   145b0:	mov    DWORD PTR [ebp+0xc],ebx
   145b3:	cmp    DWORD PTR [ebp+0xc],ebx
   145b6:	je     0x145cf
   145b8:	lea    eax,[ebp-0x1c]
   145bb:	push   eax
   145bc:	push   DWORD PTR [ebp+0xc]
   145bf:	call   0x13dec
   145c4:	lea    eax,[ebp-0x1c]
   145c7:	push   eax
   145c8:	push   0x1
   145ca:	call   0x12e24
   145cf:	mov    eax,DWORD PTR [ebp-0x8]
   145d2:	pop    edi
   145d3:	pop    esi
   145d4:	pop    ebx
   145d5:	leave  
   145d6:	ret    0x8
   145d9:	int3   
   145da:	push   ebp
   145db:	mov    ebp,esp
   145dd:	push   ecx
   145de:	and    DWORD PTR [ebp-0x4],0x0
   145e2:	push   ebx
   145e3:	push   esi
   145e4:	push   edi
   145e5:	mov    esi,0x1000
   145ea:	push   0x20736649
   145ef:	push   esi
   145f0:	push   0x0
   145f2:	call   DWORD PTR ds:0x1b03c
   145f8:	mov    edi,eax
   145fa:	test   edi,edi
   145fc:	je     0x1462f
   145fe:	lea    eax,[ebp-0x4]
   14601:	push   eax
   14602:	push   esi
   14603:	push   edi
   14604:	push   DWORD PTR [ebp+0x8]
   14607:	call   DWORD PTR ds:0x1b0b4
   1460d:	mov    ebx,eax
   1460f:	cmp    ebx,0xc0000004
   14615:	jne    0x14622
   14617:	push   0x0
   14619:	push   edi
   1461a:	call   DWORD PTR ds:0x1b024
   14620:	add    esi,esi
   14622:	test   ebx,ebx
   14624:	jne    0x145ea
   14626:	mov    eax,edi
   14628:	pop    edi
   14629:	pop    esi
   1462a:	pop    ebx
   1462b:	leave  
   1462c:	ret    0x4
   1462f:	xor    eax,eax
   14631:	jmp    0x14628
   14633:	int3   
   14634:	push   esi
   14635:	mov    esi,ecx
   14637:	lea    ecx,[esi+0xc]
   1463a:	call   0x199be
   1463f:	lea    ecx,[esi+0x8]
   14642:	call   0x199be
   14647:	lea    ecx,[esi+0x4]
   1464a:	call   0x199be
   1464f:	mov    ecx,esi
   14651:	pop    esi
   14652:	jmp    0x199be
   14657:	int3   
   14658:	push   ebp
   14659:	mov    ebp,esp
   1465b:	push   esi
   1465c:	xor    esi,esi
   1465e:	xor    edx,edx
   14660:	cmp    DWORD PTR [ebp+0xc],esi
   14663:	je     0x14680
   14665:	mov    eax,DWORD PTR [ebp+0x8]
   14668:	mov    ecx,DWORD PTR [ebp+0x10]
   1466b:	mov    cl,BYTE PTR [edx+ecx*1]
   1466e:	add    eax,esi
   14670:	xor    BYTE PTR [eax],cl
   14672:	lea    eax,[edx+0x1]
   14675:	xor    edx,edx
   14677:	div    DWORD PTR [ebp+0x14]
   1467a:	inc    esi
   1467b:	cmp    esi,DWORD PTR [ebp+0xc]
   1467e:	jne    0x14665
   14680:	pop    esi
   14681:	pop    ebp
   14682:	ret    0x10
   14685:	int3   
   14686:	push   edi
   14687:	push   0x0
   14689:	push   0x83334
   1468e:	call   DWORD PTR ds:0x1b0c0
   14694:	push   0x40
   14696:	pop    ecx
   14697:	xor    eax,eax
   14699:	mov    edi,0x831f8
   1469e:	rep stos DWORD PTR es:[edi],eax
   146a0:	pop    edi
   146a1:	ret    
   146a2:	dec    ebx
   146a3:	gs push edi
   146a5:	popa   
   146a6:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   146ae:	gs js  0x14700
   146b1:	bound  ebp,QWORD PTR [edx+0x65]
   146b4:	arpl   WORD PTR [eax+ebp*1+0x29],si
   146b8:	and    BYTE PTR [ebp+0x52],al
   146bb:	push   edx
   146bc:	dec    edi
   146bd:	push   edx
   146be:	and    BYTE PTR [edx],bh
   146c0:	and    BYTE PTR [eax],dh
   146c2:	js     0x146e9
   146c4:	cmp    BYTE PTR cs:[eax+0xa],bh
   146c8:	add    ah,cl
   146ca:	push   edi
   146cb:	mov    edi,DWORD PTR [esp+0x8]
   146cf:	cmp    edi,0x40
   146d2:	jg     0x14712
   146d4:	push   ebx
   146d5:	xor    ebx,ebx
   146d7:	cmp    edi,ebx
   146d9:	jl     0x14711
   146db:	push   esi
   146dc:	push   ebx
   146dd:	push   ebx
   146de:	push   ebx
   146df:	push   ebx
   146e0:	mov    esi,0x83334
   146e5:	push   esi
   146e6:	call   DWORD PTR ds:0x1b060
   146ec:	cmp    eax,ebx
   146ee:	jge    0x146ff
   146f0:	push   eax
   146f1:	push   0x146a2
   146f6:	call   0x1a38a
   146fb:	pop    ecx
   146fc:	pop    ecx
   146fd:	jmp    0x14710
   146ff:	push   ebx
   14700:	lea    eax,[edi*4+0x831f8]
   14707:	inc    DWORD PTR [eax]
   14709:	push   esi
   1470a:	call   DWORD PTR ds:0x1b05c
   14710:	pop    esi
   14711:	pop    ebx
   14712:	pop    edi
   14713:	ret    0x4
   14716:	dec    ebx
   14717:	gs push edi
   14719:	popa   
   1471a:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   14722:	gs js  0x14774
   14725:	bound  ebp,QWORD PTR [edx+0x65]
   14728:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1472c:	and    BYTE PTR [ebp+0x52],al
   1472f:	push   edx
   14730:	dec    edi
   14731:	push   edx
   14732:	and    BYTE PTR [edx],bh
   14734:	and    BYTE PTR [eax],dh
   14736:	js     0x1475d
   14738:	cmp    BYTE PTR cs:[eax+0xa],bh
   1473c:	add    ah,cl
   1473e:	push   ebx
   1473f:	push   esi
   14740:	push   edi
   14741:	mov    edi,DWORD PTR [esp+0x10]
   14745:	cmp    edi,0x40
   14748:	jg     0x14771
   1474a:	xor    ebx,ebx
   1474c:	cmp    edi,ebx
   1474e:	jl     0x14771
   14750:	push   ebx
   14751:	push   ebx
   14752:	push   ebx
   14753:	push   ebx
   14754:	mov    esi,0x83334
   14759:	push   esi
   1475a:	call   DWORD PTR ds:0x1b060
   14760:	cmp    eax,ebx
   14762:	jge    0x14779
   14764:	push   eax
   14765:	push   0x14716
   1476a:	call   0x1a38a
   1476f:	pop    ecx
   14770:	pop    ecx
   14771:	xor    eax,eax
   14773:	pop    edi
   14774:	pop    esi
   14775:	pop    ebx
   14776:	ret    0x4
   14779:	mov    edi,DWORD PTR [edi*4+0x831f8]
   14780:	push   ebx
   14781:	push   esi
   14782:	call   DWORD PTR ds:0x1b05c
   14788:	mov    eax,edi
   1478a:	jmp    0x14773
   1478c:	pop    esp
   1478d:	add    BYTE PTR [ebx+0x0],dl
   14790:	jns    0x14792
   14792:	jae    0x14794
   14794:	je     0x14796
   14796:	add    BYTE PTR gs:[ebp+0x0],ch
   1479a:	push   edx
   1479b:	add    BYTE PTR [edi+0x0],ch
   1479e:	outs   dx,DWORD PTR ds:[esi]
   1479f:	add    BYTE PTR [eax+eax*1+0x5c],dh
   147a3:	add    BYTE PTR [ebx+0x0],dh
   147a6:	jns    0x147a8
   147a8:	jae    0x147aa
   147aa:	je     0x147ac
   147ac:	add    BYTE PTR gs:[ebp+0x0],ch
   147b0:	xor    eax,DWORD PTR [eax]
   147b2:	xor    al,BYTE PTR [eax]
   147b4:	pop    esp
   147b5:	add    BYTE PTR [eax],al
   147b7:	add    BYTE PTR [esi],ch
   147b9:	add    BYTE PTR [eax+eax*1+0x6c],ah
   147bd:	add    BYTE PTR [eax+eax*1+0x0],ch
   147c1:	add    BYTE PTR [eax],al
   147c3:	add    BYTE PTR [edx+0x77],bl
   147c6:	inc    ebx
   147c7:	jb     0x1482e
   147c9:	popa   
   147ca:	je     0x14831
   147cc:	inc    esi
   147cd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   147d5:	push   edx
   147d6:	dec    edi
   147d7:	push   edx
   147d8:	and    BYTE PTR [edx],bh
   147da:	and    BYTE PTR [eax],dh
   147dc:	js     0x14803
   147de:	cmp    BYTE PTR cs:[eax+0xa],bh
   147e2:	add    BYTE PTR [eax],al
   147e4:	pop    edx
   147e5:	ja     0x14839
   147e7:	gs popa 
   147e9:	fs inc esi
   147eb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x20322029
   147f3:	inc    ebp
   147f4:	push   edx
   147f5:	push   edx
   147f6:	dec    edi
   147f7:	push   edx
   147f8:	and    BYTE PTR [edx],bh
   147fa:	and    BYTE PTR [eax],dh
   147fc:	js     0x14823
   147fe:	cmp    BYTE PTR cs:[eax+0xa],bh
   14802:	add    ah,cl
   14804:	push   0x854
   14809:	push   0x1b218
   1480e:	call   0x1a338
   14813:	mov    eax,ds:0x83118
   14818:	mov    DWORD PTR [ebp-0x1c],eax
   1481b:	xor    ebx,ebx
   1481d:	mov    BYTE PTR [ebp-0x81d],bl
   14823:	mov    WORD PTR [ebp-0x81c],bx
   1482a:	mov    ecx,0x1ff
   1482f:	xor    eax,eax
   14831:	lea    edi,[ebp-0x81a]
   14837:	rep stos DWORD PTR es:[edi],eax
   14839:	stos   WORD PTR es:[edi],ax
   1483b:	push   0x1478c
   14840:	lea    eax,[ebp-0x81c]
   14846:	push   eax
   14847:	mov    esi,DWORD PTR ds:0x1b114
   1484d:	call   esi
   1484f:	push   0x1d028
   14854:	lea    eax,[ebp-0x81c]
   1485a:	push   eax
   1485b:	call   esi
   1485d:	push   0x147b8
   14862:	lea    eax,[ebp-0x81c]
   14868:	push   eax
   14869:	call   esi
   1486b:	add    esp,0x18
   1486e:	lea    eax,[ebp-0x81c]
   14874:	push   eax
   14875:	lea    eax,[ebp-0x860]
   1487b:	push   eax
   1487c:	call   DWORD PTR ds:0x1b01c
   14882:	mov    DWORD PTR [ebp-0x828],ebx
   14888:	xor    eax,eax
   1488a:	lea    edi,[ebp-0x84c]
   14890:	stos   DWORD PTR es:[edi],eax
   14891:	stos   DWORD PTR es:[edi],eax
   14892:	stos   DWORD PTR es:[edi],eax
   14893:	stos   DWORD PTR es:[edi],eax
   14894:	stos   DWORD PTR es:[edi],eax
   14895:	mov    DWORD PTR [ebp-0x830],ebx
   1489b:	xor    eax,eax
   1489d:	lea    edi,[ebp-0x82c]
   148a3:	stos   DWORD PTR es:[edi],eax
   148a4:	mov    DWORD PTR [ebp-0x850],0x18
   148ae:	mov    DWORD PTR [ebp-0x84c],ebx
   148b4:	mov    DWORD PTR [ebp-0x844],0x240
   148be:	lea    eax,[ebp-0x860]
   148c4:	mov    DWORD PTR [ebp-0x848],eax
   148ca:	mov    DWORD PTR [ebp-0x840],ebx
   148d0:	mov    DWORD PTR [ebp-0x83c],ebx
   148d6:	push   ebx
   148d7:	push   ebx
   148d8:	push   0x60
   148da:	push   0x1
   148dc:	push   ebx
   148dd:	push   0x80
   148e2:	push   ebx
   148e3:	lea    eax,[ebp-0x830]
   148e9:	push   eax
   148ea:	lea    eax,[ebp-0x850]
   148f0:	push   eax
   148f1:	push   0x100001
   148f6:	lea    eax,[ebp-0x828]
   148fc:	push   eax
   148fd:	call   DWORD PTR ds:0x1b0c8
   14903:	cmp    eax,ebx
   14905:	jge    0x1491b
   14907:	push   eax
   14908:	push   0x147c4
   1490d:	call   0x1a38a
   14912:	pop    ecx
   14913:	pop    ecx
   14914:	xor    al,al
   14916:	jmp    0x149d8
   1491b:	mov    DWORD PTR [ebp-0x4],ebx
   1491e:	mov    ecx,DWORD PTR [ebp+0xc]
   14921:	mov    DWORD PTR [ebp-0x824],ecx
   14927:	mov    eax,0x10000
   1492c:	cmp    ecx,eax
   1492e:	jbe    0x14936
   14930:	mov    DWORD PTR [ebp-0x824],eax
   14936:	push   DWORD PTR [ebp-0x824]
   1493c:	call   0x12822
   14941:	pop    ecx
   14942:	mov    esi,eax
   14944:	mov    DWORD PTR [ebp-0x864],esi
   1494a:	mov    DWORD PTR [ebp-0x858],esi
   14950:	mov    DWORD PTR [ebp-0x838],ebx
   14956:	xor    eax,eax
   14958:	lea    edi,[ebp-0x834]
   1495e:	stos   DWORD PTR es:[edi],eax
   1495f:	push   ebx
   14960:	lea    eax,[ebp-0x838]
   14966:	push   eax
   14967:	push   DWORD PTR [ebp-0x824]
   1496d:	push   esi
   1496e:	lea    eax,[ebp-0x830]
   14974:	push   eax
   14975:	push   ebx
   14976:	push   ebx
   14977:	push   ebx
   14978:	push   DWORD PTR [ebp-0x828]
   1497e:	call   DWORD PTR ds:0x1b0c4
   14984:	mov    DWORD PTR [ebp-0x854],eax
   1498a:	cmp    eax,ebx
   1498c:	jge    0x1499d
   1498e:	push   eax
   1498f:	push   0x147e4
   14994:	call   0x1a38a
   14999:	pop    ecx
   1499a:	pop    ecx
   1499b:	jmp    0x149c2
   1499d:	mov    ecx,DWORD PTR [ebp-0x82c]
   149a3:	mov    DWORD PTR [ebp-0x824],ecx
   149a9:	mov    edi,DWORD PTR [ebp+0x8]
   149ac:	xor    eax,eax
   149ae:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   149b0:	sete   al
   149b3:	mov    BYTE PTR [ebp-0x81d],al
   149b9:	jmp    0x149c2
   149bb:	xor    eax,eax
   149bd:	inc    eax
   149be:	ret    
   149bf:	mov    esp,DWORD PTR [ebp-0x18]
   149c2:	or     DWORD PTR [ebp-0x4],0xffffffff
   149c6:	push   DWORD PTR [ebp-0x828]
   149cc:	call   DWORD PTR ds:0x1b10c
   149d2:	mov    al,BYTE PTR [ebp-0x81d]
   149d8:	mov    ecx,DWORD PTR [ebp-0x1c]
   149db:	call   0x1a327
   149e0:	call   0x1a373
   149e5:	ret    0x8
   149e8:	pop    esp
   149e9:	add    BYTE PTR [ebx+0x0],dl
   149ec:	jns    0x149ee
   149ee:	jae    0x149f0
   149f0:	je     0x149f2
   149f2:	add    BYTE PTR gs:[ebp+0x0],ch
   149f6:	push   edx
   149f7:	add    BYTE PTR [edi+0x0],ch
   149fa:	outs   dx,DWORD PTR ds:[esi]
   149fb:	add    BYTE PTR [eax+eax*1+0x5c],dh
   149ff:	add    BYTE PTR [ebx+0x0],dh
   14a02:	jns    0x14a04
   14a04:	jae    0x14a06
   14a06:	je     0x14a08
   14a08:	add    BYTE PTR gs:[ebp+0x0],ch
   14a0c:	xor    eax,DWORD PTR [eax]
   14a0e:	xor    al,BYTE PTR [eax]
   14a10:	pop    esp
   14a11:	add    BYTE PTR [eax],al
   14a13:	add    BYTE PTR [esi],ch
   14a15:	add    BYTE PTR [eax+eax*1+0x6c],ah
   14a19:	add    BYTE PTR [eax+eax*1+0x0],ch
   14a1d:	add    BYTE PTR [eax],al
   14a1f:	add    BYTE PTR [edx+0x77],bl
   14a22:	inc    ebx
   14a23:	jb     0x14a8a
   14a25:	popa   
   14a26:	je     0x14a8d
   14a28:	inc    esi
   14a29:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   14a31:	push   edx
   14a32:	dec    edi
   14a33:	push   edx
   14a34:	and    BYTE PTR [edx],bh
   14a36:	and    BYTE PTR [eax],dh
   14a38:	js     0x14a5f
   14a3a:	cmp    BYTE PTR cs:[eax+0xa],bh
   14a3e:	add    BYTE PTR [eax],al
   14a40:	pop    edx
   14a41:	ja     0x14a9a
   14a43:	jb     0x14aae
   14a45:	je     0x14aac
   14a47:	inc    esi
   14a48:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   14a50:	push   edx
   14a51:	dec    edi
   14a52:	push   edx
   14a53:	and    BYTE PTR [edx],bh
   14a55:	and    BYTE PTR [eax],dh
   14a57:	js     0x14a7e
   14a59:	cmp    BYTE PTR cs:[eax+0xa],bh
   14a5d:	add    BYTE PTR [eax],al
   14a5f:	add    BYTE PTR [edx+0x77],bl
   14a62:	push   ebx
   14a63:	gs je  0x14aaf
   14a66:	outs   dx,BYTE PTR ds:[esi]
   14a67:	outs   dx,WORD PTR ds:[esi]
   14a69:	jb     0x14ad8
   14a6b:	popa   
   14a6c:	je     0x14ad7
   14a6e:	outs   dx,DWORD PTR ds:[esi]
   14a6f:	outs   dx,BYTE PTR ds:[esi]
   14a70:	inc    esi
   14a71:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   14a79:	push   edx
   14a7a:	dec    edi
   14a7b:	push   edx
   14a7c:	and    BYTE PTR [edx],bh
   14a7e:	and    BYTE PTR [eax],dh
   14a80:	js     0x14aa7
   14a82:	cmp    BYTE PTR cs:[eax+0xa],bh
   14a86:	add    ah,cl
   14a88:	push   0x878
   14a8d:	push   0x1b228
   14a92:	call   0x1a338
   14a97:	mov    eax,ds:0x83118
   14a9c:	mov    DWORD PTR [ebp-0x1c],eax
   14a9f:	xor    ebx,ebx
   14aa1:	mov    BYTE PTR [ebp-0x81d],bl
   14aa7:	mov    WORD PTR [ebp-0x81c],bx
   14aae:	mov    ecx,0x1ff
   14ab3:	xor    eax,eax
   14ab5:	lea    edi,[ebp-0x81a]
   14abb:	rep stos DWORD PTR es:[edi],eax
   14abd:	stos   WORD PTR es:[edi],ax
   14abf:	push   0x149e8
   14ac4:	lea    eax,[ebp-0x81c]
   14aca:	push   eax
   14acb:	mov    esi,DWORD PTR ds:0x1b114
   14ad1:	call   esi
   14ad3:	push   0x1d028
   14ad8:	lea    eax,[ebp-0x81c]
   14ade:	push   eax
   14adf:	call   esi
   14ae1:	push   0x14a14
   14ae6:	lea    eax,[ebp-0x81c]
   14aec:	push   eax
   14aed:	call   esi
   14aef:	add    esp,0x18
   14af2:	lea    eax,[ebp-0x81c]
   14af8:	push   eax
   14af9:	lea    eax,[ebp-0x884]
   14aff:	push   eax
   14b00:	call   DWORD PTR ds:0x1b01c
   14b06:	mov    DWORD PTR [ebp-0x824],ebx
   14b0c:	xor    eax,eax
   14b0e:	lea    edi,[ebp-0x850]
   14b14:	stos   DWORD PTR es:[edi],eax
   14b15:	stos   DWORD PTR es:[edi],eax
   14b16:	stos   DWORD PTR es:[edi],eax
   14b17:	stos   DWORD PTR es:[edi],eax
   14b18:	stos   DWORD PTR es:[edi],eax
   14b19:	mov    DWORD PTR [ebp-0x82c],ebx
   14b1f:	xor    eax,eax
   14b21:	lea    edi,[ebp-0x828]
   14b27:	stos   DWORD PTR es:[edi],eax
   14b28:	mov    DWORD PTR [ebp-0x854],0x18
   14b32:	mov    DWORD PTR [ebp-0x850],ebx
   14b38:	mov    DWORD PTR [ebp-0x848],0x240
   14b42:	lea    eax,[ebp-0x884]
   14b48:	mov    DWORD PTR [ebp-0x84c],eax
   14b4e:	mov    DWORD PTR [ebp-0x844],ebx
   14b54:	mov    DWORD PTR [ebp-0x840],ebx
   14b5a:	push   ebx
   14b5b:	push   ebx
   14b5c:	push   0x60
   14b5e:	push   ebx
   14b5f:	push   ebx
   14b60:	push   0x80
   14b65:	push   ebx
   14b66:	lea    eax,[ebp-0x82c]
   14b6c:	push   eax
   14b6d:	lea    eax,[ebp-0x854]
   14b73:	push   eax
   14b74:	push   0x100002
   14b79:	lea    eax,[ebp-0x824]
   14b7f:	push   eax
   14b80:	call   DWORD PTR ds:0x1b0c8
   14b86:	cmp    eax,ebx
   14b88:	jge    0x14b9e
   14b8a:	push   eax
   14b8b:	push   0x14a20
   14b90:	call   0x1a38a
   14b95:	pop    ecx
   14b96:	pop    ecx
   14b97:	xor    al,al
   14b99:	jmp    0x14cc5
   14b9e:	mov    DWORD PTR [ebp-0x4],ebx
   14ba1:	xor    eax,eax
   14ba3:	lea    edi,[ebp-0x82c]
   14ba9:	stos   DWORD PTR es:[edi],eax
   14baa:	stos   DWORD PTR es:[edi],eax
   14bab:	mov    esi,0x10000
   14bb0:	mov    DWORD PTR [ebp-0x888],esi
   14bb6:	xor    edi,edi
   14bb8:	mov    DWORD PTR [ebp-0x834],edi
   14bbe:	mov    eax,DWORD PTR [ebp+0xc]
   14bc1:	cmp    edi,eax
   14bc3:	jae    0x14c17
   14bc5:	mov    DWORD PTR [ebp-0x83c],ebx
   14bcb:	mov    DWORD PTR [ebp-0x83c],edi
   14bd1:	mov    DWORD PTR [ebp-0x838],ebx
   14bd7:	sub    eax,edi
   14bd9:	cmp    eax,esi
   14bdb:	jb     0x14bdf
   14bdd:	mov    eax,esi
   14bdf:	push   ebx
   14be0:	push   ebx
   14be1:	push   eax
   14be2:	mov    eax,DWORD PTR [ebp+0x8]
   14be5:	add    eax,edi
   14be7:	push   eax
   14be8:	lea    eax,[ebp-0x82c]
   14bee:	push   eax
   14bef:	push   ebx
   14bf0:	push   ebx
   14bf1:	push   ebx
   14bf2:	push   DWORD PTR [ebp-0x824]
   14bf8:	call   DWORD PTR ds:0x1b0d0
   14bfe:	mov    DWORD PTR [ebp-0x830],eax
   14c04:	cmp    eax,ebx
   14c06:	jge    0x14c13
   14c08:	push   eax
   14c09:	push   0x14a40
   14c0e:	jmp    0x14c9f
   14c13:	add    edi,esi
   14c15:	jmp    0x14bb8
   14c17:	mov    BYTE PTR [ebp-0x81d],0x1
   14c1e:	mov    DWORD PTR [ebp-0x87c],ebx
   14c24:	push   0x9
   14c26:	pop    ecx
   14c27:	xor    eax,eax
   14c29:	lea    edi,[ebp-0x878]
   14c2f:	rep stos DWORD PTR es:[edi],eax
   14c31:	mov    eax,DWORD PTR [ebp+0x10]
   14c34:	mov    DWORD PTR [ebp-0x86c],eax
   14c3a:	mov    ecx,DWORD PTR [ebp+0x14]
   14c3d:	mov    DWORD PTR [ebp-0x868],ecx
   14c43:	mov    DWORD PTR [ebp-0x874],eax
   14c49:	mov    DWORD PTR [ebp-0x870],ecx
   14c4f:	mov    DWORD PTR [ebp-0x864],eax
   14c55:	mov    DWORD PTR [ebp-0x860],ecx
   14c5b:	mov    DWORD PTR [ebp-0x87c],eax
   14c61:	mov    DWORD PTR [ebp-0x878],ecx
   14c67:	mov    DWORD PTR [ebp-0x85c],0x80
   14c71:	push   0x4
   14c73:	push   0x28
   14c75:	lea    eax,[ebp-0x87c]
   14c7b:	push   eax
   14c7c:	lea    eax,[ebp-0x82c]
   14c82:	push   eax
   14c83:	push   DWORD PTR [ebp-0x824]
   14c89:	call   DWORD PTR ds:0x1b0cc
   14c8f:	mov    DWORD PTR [ebp-0x830],eax
   14c95:	cmp    eax,ebx
   14c97:	jge    0x14caf
   14c99:	push   eax
   14c9a:	push   0x14a60
   14c9f:	call   0x1a38a
   14ca4:	pop    ecx
   14ca5:	pop    ecx
   14ca6:	jmp    0x14caf
   14ca8:	xor    eax,eax
   14caa:	inc    eax
   14cab:	ret    
   14cac:	mov    esp,DWORD PTR [ebp-0x18]
   14caf:	or     DWORD PTR [ebp-0x4],0xffffffff
   14cb3:	push   DWORD PTR [ebp-0x824]
   14cb9:	call   DWORD PTR ds:0x1b10c
   14cbf:	mov    al,BYTE PTR [ebp-0x81d]
   14cc5:	mov    ecx,DWORD PTR [ebp-0x1c]
   14cc8:	call   0x1a327
   14ccd:	call   0x1a373
   14cd2:	ret    0x10
   14cd5:	int3   
   14cd6:	pop    esp
   14cd7:	add    BYTE PTR [ebx+0x0],dl
   14cda:	jns    0x14cdc
   14cdc:	jae    0x14cde
   14cde:	je     0x14ce0
   14ce0:	add    BYTE PTR gs:[ebp+0x0],ch
   14ce4:	push   edx
   14ce5:	add    BYTE PTR [edi+0x0],ch
   14ce8:	outs   dx,DWORD PTR ds:[esi]
   14ce9:	add    BYTE PTR [eax+eax*1+0x5c],dh
   14ced:	add    BYTE PTR [ebx+0x0],dh
   14cf0:	jns    0x14cf2
   14cf2:	jae    0x14cf4
   14cf4:	je     0x14cf6
   14cf6:	add    BYTE PTR gs:[ebp+0x0],ch
   14cfa:	xor    eax,DWORD PTR [eax]
   14cfc:	xor    al,BYTE PTR [eax]
   14cfe:	pop    esp
   14cff:	add    BYTE PTR [eax+eax*1+0x72],ah
   14d03:	add    BYTE PTR [ecx+0x0],ch
   14d06:	jbe    0x14d08
   14d08:	add    BYTE PTR gs:[edx+0x0],dh
   14d0c:	jae    0x14d0e
   14d0e:	pop    esp
   14d0f:	add    BYTE PTR [eax],al
   14d11:	add    BYTE PTR [esi],ch
   14d13:	add    BYTE PTR [ebx+0x0],dh
   14d16:	jns    0x14d18
   14d18:	jae    0x14d1a
   14d1a:	add    BYTE PTR [eax],al
   14d1c:	add    BYTE PTR [eax],al
   14d1e:	pop    edx
   14d1f:	ja     0x14d64
   14d21:	jb     0x14d88
   14d23:	popa   
   14d24:	je     0x14d8b
   14d26:	inc    esi
   14d27:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   14d2f:	push   edx
   14d30:	dec    edi
   14d31:	push   edx
   14d32:	and    BYTE PTR [edx],bh
   14d34:	and    BYTE PTR [eax],dh
   14d36:	js     0x14d5d
   14d38:	cmp    BYTE PTR cs:[eax+0xa],bh
   14d3c:	add    BYTE PTR [eax],al
   14d3e:	pop    edx
   14d3f:	ja     0x14d92
   14d41:	jne    0x14da8
   14d43:	jb     0x14dbe
   14d45:	dec    ecx
   14d46:	outs   dx,BYTE PTR ds:[esi]
   14d47:	outs   dx,WORD PTR ds:[esi]
   14d49:	jb     0x14db8
   14d4b:	popa   
   14d4c:	je     0x14db7
   14d4e:	outs   dx,DWORD PTR ds:[esi]
   14d4f:	outs   dx,BYTE PTR ds:[esi]
   14d50:	inc    esi
   14d51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x28],0x52452029
   14d59:	push   edx
   14d5a:	dec    edi
   14d5b:	push   edx
   14d5c:	and    BYTE PTR [edx],bh
   14d5e:	and    BYTE PTR [eax],dh
   14d60:	js     0x14d87
   14d62:	cmp    BYTE PTR cs:[eax+0xa],bh
   14d66:	add    ah,cl
   14d68:	push   0x874
   14d6d:	push   0x1b238
   14d72:	call   0x1a338
   14d77:	mov    eax,ds:0x83118
   14d7c:	mov    DWORD PTR [ebp-0x1c],eax
   14d7f:	xor    ebx,ebx
   14d81:	mov    BYTE PTR [ebp-0x81d],bl
   14d87:	mov    BYTE PTR [ebp-0x81e],bl
   14d8d:	mov    DWORD PTR [ebp-0x82c],ebx
   14d93:	mov    DWORD PTR [ebp-0x824],ebx
   14d99:	mov    WORD PTR [ebp-0x81c],bx
   14da0:	mov    ecx,0x1ff
   14da5:	xor    eax,eax
   14da7:	lea    edi,[ebp-0x81a]
   14dad:	rep stos DWORD PTR es:[edi],eax
   14daf:	stos   WORD PTR es:[edi],ax
   14db1:	push   0x14cd6
   14db6:	lea    eax,[ebp-0x81c]
   14dbc:	push   eax
   14dbd:	mov    esi,DWORD PTR ds:0x1b114
   14dc3:	call   esi
   14dc5:	push   0x1d068
   14dca:	lea    eax,[ebp-0x81c]
   14dd0:	push   eax
   14dd1:	call   esi
   14dd3:	push   0x14d12
   14dd8:	lea    eax,[ebp-0x81c]
   14dde:	push   eax
   14ddf:	call   esi
   14de1:	add    esp,0x18
   14de4:	lea    eax,[ebp-0x81c]
   14dea:	push   eax
   14deb:	lea    eax,[ebp-0x85c]
   14df1:	push   eax
   14df2:	call   DWORD PTR ds:0x1b01c
   14df8:	xor    eax,eax
   14dfa:	lea    edi,[ebp-0x84c]
   14e00:	stos   DWORD PTR es:[edi],eax
   14e01:	stos   DWORD PTR es:[edi],eax
   14e02:	stos   DWORD PTR es:[edi],eax
   14e03:	stos   DWORD PTR es:[edi],eax
   14e04:	stos   DWORD PTR es:[edi],eax
   14e05:	mov    DWORD PTR [ebp-0x838],ebx
   14e0b:	xor    eax,eax
   14e0d:	lea    edi,[ebp-0x834]
   14e13:	stos   DWORD PTR es:[edi],eax
   14e14:	mov    DWORD PTR [ebp-0x828],ebx
   14e1a:	mov    DWORD PTR [ebp-0x850],0x18
   14e24:	mov    DWORD PTR [ebp-0x84c],ebx
   14e2a:	mov    DWORD PTR [ebp-0x844],0x240
   14e34:	lea    eax,[ebp-0x85c]
   14e3a:	mov    DWORD PTR [ebp-0x848],eax
   14e40:	mov    DWORD PTR [ebp-0x840],ebx
   14e46:	mov    DWORD PTR [ebp-0x83c],ebx
   14e4c:	push   ebx
   14e4d:	push   ebx
   14e4e:	push   ebx
   14e4f:	push   0x1
   14e51:	push   0x7
   14e53:	push   ebx
   14e54:	push   ebx
   14e55:	lea    eax,[ebp-0x838]
   14e5b:	push   eax
   14e5c:	lea    eax,[ebp-0x850]
   14e62:	push   eax
   14e63:	push   0x89
   14e68:	lea    eax,[ebp-0x828]
   14e6e:	push   eax
   14e6f:	call   DWORD PTR ds:0x1b0c8
   14e75:	cmp    eax,ebx
   14e77:	jge    0x14e8d
   14e79:	push   eax
   14e7a:	push   0x14d1e
   14e7f:	call   0x1a38a
   14e84:	pop    ecx
   14e85:	pop    ecx
   14e86:	xor    al,al
   14e88:	jmp    0x14f9b
   14e8d:	mov    DWORD PTR [ebp-0x884],ebx
   14e93:	push   0x9
   14e95:	pop    ecx
   14e96:	xor    eax,eax
   14e98:	lea    edi,[ebp-0x880]
   14e9e:	rep stos DWORD PTR es:[edi],eax
   14ea0:	mov    DWORD PTR [ebp-0x4],ebx
   14ea3:	push   0x4
   14ea5:	push   0x28
   14ea7:	lea    eax,[ebp-0x884]
   14ead:	push   eax
   14eae:	lea    eax,[ebp-0x838]
   14eb4:	push   eax
   14eb5:	push   DWORD PTR [ebp-0x828]
   14ebb:	call   DWORD PTR ds:0x1b0d4
   14ec1:	mov    DWORD PTR [ebp-0x854],eax
   14ec7:	cmp    eax,ebx
   14ec9:	jge    0x14eda
   14ecb:	push   eax
   14ecc:	push   0x14d3e
   14ed1:	call   0x1a38a
   14ed6:	pop    ecx
   14ed7:	pop    ecx
   14ed8:	jmp    0x14f37
   14eda:	mov    eax,0x66000
   14edf:	mov    DWORD PTR [ebp-0x82c],eax
   14ee5:	push   eax
   14ee6:	call   0x12822
   14eeb:	pop    ecx
   14eec:	mov    DWORD PTR [ebp-0x830],eax
   14ef2:	mov    DWORD PTR [ebp-0x824],eax
   14ef8:	mov    ecx,0x19800
   14efd:	mov    esi,0x1d0f0
   14f02:	mov    edi,eax
   14f04:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   14f06:	push   0x25
   14f08:	push   0x830f0
   14f0d:	mov    esi,0x66000
   14f12:	push   esi
   14f13:	push   eax
   14f14:	call   0x14658
   14f19:	push   esi
   14f1a:	push   DWORD PTR [ebp-0x830]
   14f20:	call   0x14804
   14f25:	mov    BYTE PTR [ebp-0x81d],0x1
   14f2c:	test   al,al
   14f2e:	jne    0x14f37
   14f30:	mov    BYTE PTR [ebp-0x81e],0x1
   14f37:	or     DWORD PTR [ebp-0x4],0xffffffff
   14f3b:	jmp    0x14f4a
   14f3d:	xor    eax,eax
   14f3f:	inc    eax
   14f40:	ret    
   14f41:	mov    esp,DWORD PTR [ebp-0x18]
   14f44:	or     DWORD PTR [ebp-0x4],0xffffffff
   14f48:	xor    ebx,ebx
   14f4a:	push   DWORD PTR [ebp-0x828]
   14f50:	call   DWORD PTR ds:0x1b10c
   14f56:	cmp    BYTE PTR [ebp-0x81e],bl
   14f5c:	je     0x14f81
   14f5e:	push   DWORD PTR [ebp-0x880]
   14f64:	push   DWORD PTR [ebp-0x884]
   14f6a:	push   DWORD PTR [ebp-0x82c]
   14f70:	push   DWORD PTR [ebp-0x824]
   14f76:	call   0x14a88
   14f7b:	mov    BYTE PTR [ebp-0x81d],al
   14f81:	cmp    DWORD PTR [ebp-0x824],ebx
   14f87:	je     0x14f95
   14f89:	push   DWORD PTR [ebp-0x824]
   14f8f:	call   0x1284c
   14f94:	pop    ecx
   14f95:	mov    al,BYTE PTR [ebp-0x81d]
   14f9b:	mov    ecx,DWORD PTR [ebp-0x1c]
   14f9e:	call   0x1a327
   14fa3:	call   0x1a373
   14fa8:	ret    
   14fa9:	int3   
   14faa:	push   esi
   14fab:	push   0x20736649
   14fb0:	push   0x20
   14fb2:	push   0x0
   14fb4:	mov    esi,ecx
   14fb6:	call   DWORD PTR ds:0x1b03c
   14fbc:	test   eax,eax
   14fbe:	mov    DWORD PTR [esi],eax
   14fc0:	jne    0x14fcd
   14fc2:	push   0xc000009a
   14fc7:	call   DWORD PTR ds:0x1b048
   14fcd:	mov    eax,esi
   14fcf:	pop    esi
   14fd0:	ret    
   14fd1:	int3   
   14fd2:	push   esi
   14fd3:	push   edi
   14fd4:	mov    edi,DWORD PTR [esp+0xc]
   14fd8:	push   edi
   14fd9:	mov    esi,ecx
   14fdb:	call   0x199c8
   14fe0:	lea    eax,[edi+0x4]
   14fe3:	push   eax
   14fe4:	lea    ecx,[esi+0x4]
   14fe7:	call   0x199c8
   14fec:	lea    eax,[edi+0x8]
   14fef:	push   eax
   14ff0:	lea    ecx,[esi+0x8]
   14ff3:	call   0x199c8
   14ff8:	lea    eax,[edi+0xc]
   14ffb:	push   eax
   14ffc:	lea    ecx,[esi+0xc]
   14fff:	call   0x199c8
   15004:	mov    eax,DWORD PTR [edi+0x10]
   15007:	mov    DWORD PTR [esi+0x10],eax
   1500a:	mov    eax,DWORD PTR [edi+0x18]
   1500d:	mov    DWORD PTR [esi+0x18],eax
   15010:	mov    eax,DWORD PTR [edi+0x1c]
   15013:	mov    DWORD PTR [esi+0x1c],eax
   15016:	mov    eax,DWORD PTR [edi+0x20]
   15019:	mov    DWORD PTR [esi+0x20],eax
   1501c:	mov    eax,DWORD PTR [edi+0x24]
   1501f:	mov    DWORD PTR [esi+0x24],eax
   15022:	pop    edi
   15023:	mov    eax,esi
   15025:	pop    esi
   15026:	ret    0x4
   15029:	int3   
   1502a:	push   esi
   1502b:	mov    esi,ecx
   1502d:	lea    ecx,[esi+0x8]
   15030:	call   0x14634
   15035:	mov    ecx,esi
   15037:	pop    esi
   15038:	jmp    0x199be
   1503d:	int3   
   1503e:	push   esi
   1503f:	push   edi
   15040:	mov    edi,DWORD PTR [esp+0xc]
   15044:	push   edi
   15045:	mov    esi,ecx
   15047:	call   0x19b36
   1504c:	lea    eax,[edi+0x4]
   1504f:	push   eax
   15050:	lea    ecx,[esi+0x4]
   15053:	call   0x19b36
   15058:	lea    eax,[edi+0x8]
   1505b:	push   eax
   1505c:	lea    ecx,[esi+0x8]
   1505f:	call   0x19b36
   15064:	lea    eax,[edi+0xc]
   15067:	push   eax
   15068:	lea    ecx,[esi+0xc]
   1506b:	call   0x19b36
   15070:	mov    eax,DWORD PTR [edi+0x10]
   15073:	mov    DWORD PTR [esi+0x10],eax
   15076:	mov    eax,DWORD PTR [edi+0x18]
   15079:	mov    DWORD PTR [esi+0x18],eax
   1507c:	mov    eax,DWORD PTR [edi+0x1c]
   1507f:	mov    DWORD PTR [esi+0x1c],eax
   15082:	mov    eax,DWORD PTR [edi+0x20]
   15085:	mov    DWORD PTR [esi+0x20],eax
   15088:	mov    eax,DWORD PTR [edi+0x24]
   1508b:	mov    DWORD PTR [esi+0x24],eax
   1508e:	pop    edi
   1508f:	mov    eax,esi
   15091:	pop    esi
   15092:	ret    0x4
   15095:	int3   
   15096:	mov    eax,DWORD PTR [esp+0x4]
   1509a:	mov    edx,DWORD PTR ds:0x834e8
   150a0:	jmp    0x150a4
   150a2:	mov    eax,ecx
   150a4:	mov    ecx,DWORD PTR [eax+0x8]
   150a7:	cmp    ecx,edx
   150a9:	jne    0x150a2
   150ab:	ret    0x4
   150ae:	mov    eax,DWORD PTR [esp+0x4]
   150b2:	mov    edx,DWORD PTR ds:0x834e8
   150b8:	jmp    0x150bc
   150ba:	mov    eax,ecx
   150bc:	mov    ecx,DWORD PTR [eax]
   150be:	cmp    ecx,edx
   150c0:	jne    0x150ba
   150c2:	ret    0x4
   150c5:	int3   
   150c6:	mov    eax,DWORD PTR [esp+0x4]
   150ca:	mov    edx,DWORD PTR ds:0x834ec
   150d0:	jmp    0x150d4
   150d2:	mov    eax,ecx
   150d4:	mov    ecx,DWORD PTR [eax+0x8]
   150d7:	cmp    ecx,edx
   150d9:	jne    0x150d2
   150db:	ret    0x4
   150de:	mov    eax,DWORD PTR [esp+0x4]
   150e2:	mov    edx,DWORD PTR ds:0x834ec
   150e8:	jmp    0x150ec
   150ea:	mov    eax,ecx
   150ec:	mov    ecx,DWORD PTR [eax]
   150ee:	cmp    ecx,edx
   150f0:	jne    0x150ea
   150f2:	ret    0x4
   150f5:	int3   
   150f6:	push   esi
   150f7:	mov    esi,ecx
   150f9:	mov    ecx,DWORD PTR [esi]
   150fb:	cmp    DWORD PTR [ecx+0x14],0x0
   150ff:	jne    0x1510e
   15101:	mov    eax,DWORD PTR [ecx+0x4]
   15104:	cmp    DWORD PTR [eax+0x4],ecx
   15107:	jne    0x1510e
   15109:	mov    eax,DWORD PTR [ecx+0x8]
   1510c:	jmp    0x1512b
   1510e:	mov    eax,DWORD PTR [ecx]
   15110:	cmp    eax,DWORD PTR ds:0x834e8
   15116:	je     0x15124
   15118:	push   eax
   15119:	call   0x15096
   1511e:	jmp    0x1512b
   15120:	mov    DWORD PTR [esi],eax
   15122:	mov    ecx,eax
   15124:	mov    eax,DWORD PTR [ecx+0x4]
   15127:	cmp    ecx,DWORD PTR [eax]
   15129:	je     0x15120
   1512b:	mov    DWORD PTR [esi],eax
   1512d:	pop    esi
   1512e:	ret    
   1512f:	int3   
   15130:	push   esi
   15131:	mov    esi,ecx
   15133:	mov    ecx,DWORD PTR [esi]
   15135:	mov    eax,DWORD PTR [ecx+0x8]
   15138:	cmp    eax,DWORD PTR ds:0x834e8
   1513e:	je     0x1514c
   15140:	push   eax
   15141:	call   0x150ae
   15146:	jmp    0x1515b
   15148:	mov    DWORD PTR [esi],eax
   1514a:	mov    ecx,eax
   1514c:	mov    eax,DWORD PTR [ecx+0x4]
   1514f:	cmp    ecx,DWORD PTR [eax+0x8]
   15152:	je     0x15148
   15154:	mov    ecx,DWORD PTR [esi]
   15156:	cmp    DWORD PTR [ecx+0x8],eax
   15159:	je     0x1515d
   1515b:	mov    DWORD PTR [esi],eax
   1515d:	pop    esi
   1515e:	ret    
   1515f:	int3   
   15160:	mov    eax,DWORD PTR [esp+0x4]
   15164:	mov    edx,DWORD PTR ds:0x834f0
   1516a:	jmp    0x1516e
   1516c:	mov    eax,ecx
   1516e:	mov    ecx,DWORD PTR [eax+0x8]
   15171:	cmp    ecx,edx
   15173:	jne    0x1516c
   15175:	ret    0x4
   15178:	mov    eax,DWORD PTR [esp+0x4]
   1517c:	mov    edx,DWORD PTR ds:0x834f0
   15182:	jmp    0x15186
   15184:	mov    eax,ecx
   15186:	mov    ecx,DWORD PTR [eax]
   15188:	cmp    ecx,edx
   1518a:	jne    0x15184
   1518c:	ret    0x4
   1518f:	int3   
   15190:	mov    edx,DWORD PTR [esp+0x4]
   15194:	mov    eax,DWORD PTR [edx+0x8]
   15197:	push   esi
   15198:	mov    esi,DWORD PTR [eax]
   1519a:	mov    DWORD PTR [edx+0x8],esi
   1519d:	mov    esi,DWORD PTR [eax]
   1519f:	cmp    esi,DWORD PTR ds:0x834f4
   151a5:	je     0x151aa
   151a7:	mov    DWORD PTR [esi+0x4],edx
   151aa:	mov    esi,DWORD PTR [edx+0x4]
   151ad:	mov    DWORD PTR [eax+0x4],esi
   151b0:	mov    ecx,DWORD PTR [ecx+0x4]
   151b3:	cmp    edx,DWORD PTR [ecx+0x4]
   151b6:	pop    esi
   151b7:	jne    0x151be
   151b9:	mov    DWORD PTR [ecx+0x4],eax
   151bc:	jmp    0x151cc
   151be:	mov    ecx,DWORD PTR [edx+0x4]
   151c1:	cmp    edx,DWORD PTR [ecx]
   151c3:	jne    0x151c9
   151c5:	mov    DWORD PTR [ecx],eax
   151c7:	jmp    0x151cc
   151c9:	mov    DWORD PTR [ecx+0x8],eax
   151cc:	mov    DWORD PTR [eax],edx
   151ce:	mov    DWORD PTR [edx+0x4],eax
   151d1:	ret    0x4
   151d4:	mov    eax,DWORD PTR [esp+0x4]
   151d8:	mov    edx,DWORD PTR ds:0x834f4
   151de:	jmp    0x151e2
   151e0:	mov    eax,ecx
   151e2:	mov    ecx,DWORD PTR [eax+0x8]
   151e5:	cmp    ecx,edx
   151e7:	jne    0x151e0
   151e9:	ret    0x4
   151ec:	mov    edx,DWORD PTR [esp+0x4]
   151f0:	mov    eax,DWORD PTR [edx]
   151f2:	push   esi
   151f3:	mov    esi,DWORD PTR [eax+0x8]
   151f6:	mov    DWORD PTR [edx],esi
   151f8:	mov    esi,DWORD PTR [eax+0x8]
   151fb:	cmp    esi,DWORD PTR ds:0x834f4
   15201:	je     0x15206
   15203:	mov    DWORD PTR [esi+0x4],edx
   15206:	mov    esi,DWORD PTR [edx+0x4]
   15209:	mov    DWORD PTR [eax+0x4],esi
   1520c:	mov    ecx,DWORD PTR [ecx+0x4]
   1520f:	cmp    edx,DWORD PTR [ecx+0x4]
   15212:	pop    esi
   15213:	jne    0x1521a
   15215:	mov    DWORD PTR [ecx+0x4],eax
   15218:	jmp    0x15229
   1521a:	mov    ecx,DWORD PTR [edx+0x4]
   1521d:	cmp    edx,DWORD PTR [ecx+0x8]
   15220:	jne    0x15227
   15222:	mov    DWORD PTR [ecx+0x8],eax
   15225:	jmp    0x15229
   15227:	mov    DWORD PTR [ecx],eax
   15229:	mov    DWORD PTR [eax+0x8],edx
   1522c:	mov    DWORD PTR [edx+0x4],eax
   1522f:	ret    0x4
   15232:	push   esi
   15233:	mov    esi,ecx
   15235:	mov    ecx,DWORD PTR [esi]
   15237:	cmp    DWORD PTR [ecx+0x40],0x0
   1523b:	jne    0x1524a
   1523d:	mov    eax,DWORD PTR [ecx+0x4]
   15240:	cmp    DWORD PTR [eax+0x4],ecx
   15243:	jne    0x1524a
   15245:	mov    eax,DWORD PTR [ecx+0x8]
   15248:	jmp    0x15267
   1524a:	mov    eax,DWORD PTR [ecx]
   1524c:	cmp    eax,DWORD PTR ds:0x834f4
   15252:	je     0x15260
   15254:	push   eax
   15255:	call   0x151d4
   1525a:	jmp    0x15267
   1525c:	mov    DWORD PTR [esi],eax
   1525e:	mov    ecx,eax
   15260:	mov    eax,DWORD PTR [ecx+0x4]
   15263:	cmp    ecx,DWORD PTR [eax]
   15265:	je     0x1525c
   15267:	mov    DWORD PTR [esi],eax
   15269:	pop    esi
   1526a:	ret    
   1526b:	int3   
   1526c:	mov    eax,DWORD PTR [esp+0x4]
   15270:	mov    edx,DWORD PTR ds:0x834f8
   15276:	jmp    0x1527a
   15278:	mov    eax,ecx
   1527a:	mov    ecx,DWORD PTR [eax+0x8]
   1527d:	cmp    ecx,edx
   1527f:	jne    0x15278
   15281:	ret    0x4
   15284:	mov    eax,DWORD PTR [esp+0x4]
   15288:	mov    edx,DWORD PTR ds:0x834f8
   1528e:	jmp    0x15292
   15290:	mov    eax,ecx
   15292:	mov    ecx,DWORD PTR [eax]
   15294:	cmp    ecx,edx
   15296:	jne    0x15290
   15298:	ret    0x4
   1529b:	int3   
   1529c:	push   esi
   1529d:	mov    esi,ecx
   1529f:	mov    ecx,DWORD PTR [esi]
   152a1:	cmp    DWORD PTR [ecx+0x14],0x0
   152a5:	jne    0x152b4
   152a7:	mov    eax,DWORD PTR [ecx+0x4]
   152aa:	cmp    DWORD PTR [eax+0x4],ecx
   152ad:	jne    0x152b4
   152af:	mov    eax,DWORD PTR [ecx+0x8]
   152b2:	jmp    0x152d1
   152b4:	mov    eax,DWORD PTR [ecx]
   152b6:	cmp    eax,DWORD PTR ds:0x834f8
   152bc:	je     0x152ca
   152be:	push   eax
   152bf:	call   0x1526c
   152c4:	jmp    0x152d1
   152c6:	mov    DWORD PTR [esi],eax
   152c8:	mov    ecx,eax
   152ca:	mov    eax,DWORD PTR [ecx+0x4]
   152cd:	cmp    ecx,DWORD PTR [eax]
   152cf:	je     0x152c6
   152d1:	mov    DWORD PTR [esi],eax
   152d3:	pop    esi
   152d4:	ret    
   152d5:	int3   
   152d6:	push   esi
   152d7:	mov    esi,ecx
   152d9:	mov    ecx,DWORD PTR [esi]
   152db:	cmp    DWORD PTR [ecx+0x48],0x0
   152df:	jne    0x152ee
   152e1:	mov    eax,DWORD PTR [ecx+0x4]
   152e4:	cmp    DWORD PTR [eax+0x4],ecx
   152e7:	jne    0x152ee
   152e9:	mov    eax,DWORD PTR [ecx+0x8]
   152ec:	jmp    0x1530b
   152ee:	mov    eax,DWORD PTR [ecx]
   152f0:	cmp    eax,DWORD PTR ds:0x834f0
   152f6:	je     0x15304
   152f8:	push   eax
   152f9:	call   0x15160
   152fe:	jmp    0x1530b
   15300:	mov    DWORD PTR [esi],eax
   15302:	mov    ecx,eax
   15304:	mov    eax,DWORD PTR [ecx+0x4]
   15307:	cmp    ecx,DWORD PTR [eax]
   15309:	je     0x15300
   1530b:	mov    DWORD PTR [esi],eax
   1530d:	pop    esi
   1530e:	ret    
   1530f:	int3   
   15310:	push   esi
   15311:	mov    esi,ecx
   15313:	mov    ecx,DWORD PTR [esi]
   15315:	mov    eax,DWORD PTR [ecx+0x8]
   15318:	cmp    eax,DWORD PTR ds:0x834f8
   1531e:	je     0x1532c
   15320:	push   eax
   15321:	call   0x15284
   15326:	jmp    0x1533b
   15328:	mov    DWORD PTR [esi],eax
   1532a:	mov    ecx,eax
   1532c:	mov    eax,DWORD PTR [ecx+0x4]
   1532f:	cmp    ecx,DWORD PTR [eax+0x8]
   15332:	je     0x15328
   15334:	mov    ecx,DWORD PTR [esi]
   15336:	cmp    DWORD PTR [ecx+0x8],eax
   15339:	je     0x1533d
   1533b:	mov    DWORD PTR [esi],eax
   1533d:	pop    esi
   1533e:	ret    
   1533f:	int3   
   15340:	mov    eax,DWORD PTR [esp+0x4]
   15344:	test   eax,eax
   15346:	je     0x15356
   15348:	mov    ecx,DWORD PTR [esp+0x8]
   1534c:	mov    edx,DWORD PTR [ecx]
   1534e:	mov    DWORD PTR [eax],edx
   15350:	mov    ecx,DWORD PTR [ecx+0x4]
   15353:	mov    DWORD PTR [eax+0x4],ecx
   15356:	ret    0x8
   15359:	int3   
   1535a:	push   esi
   1535b:	push   edi
   1535c:	mov    edi,DWORD PTR [esp+0xc]
   15360:	push   edi
   15361:	mov    esi,ecx
   15363:	call   0x1503e
   15368:	mov    eax,DWORD PTR [edi+0x28]
   1536b:	mov    DWORD PTR [esi+0x28],eax
   1536e:	pop    edi
   1536f:	mov    eax,esi
   15371:	pop    esi
   15372:	ret    0x4
   15375:	int3   
   15376:	push   esi
   15377:	push   edi
   15378:	mov    edi,DWORD PTR [esp+0xc]
   1537c:	push   edi
   1537d:	mov    esi,ecx
   1537f:	call   0x19b36
   15384:	add    edi,0x8
   15387:	push   edi
   15388:	lea    ecx,[esi+0x8]
   1538b:	call   0x1503e
   15390:	pop    edi
   15391:	mov    eax,esi
   15393:	pop    esi
   15394:	ret    0x4
   15397:	int3   
   15398:	push   esi
   15399:	push   DWORD PTR [esp+0x8]
   1539d:	mov    esi,ecx
   1539f:	call   0x19b36
   153a4:	push   DWORD PTR [esp+0xc]
   153a8:	lea    ecx,[esi+0x8]
   153ab:	call   0x1535a
   153b0:	mov    eax,esi
   153b2:	pop    esi
   153b3:	ret    0x8
   153b6:	mov    eax,ecx
   153b8:	mov    ecx,DWORD PTR [esp+0x4]
   153bc:	mov    edx,DWORD PTR [ecx]
   153be:	test   edx,edx
   153c0:	je     0x153c9
   153c2:	mov    DWORD PTR [eax],edx
   153c4:	inc    DWORD PTR [edx+0x4]
   153c7:	jmp    0x153cc
   153c9:	and    DWORD PTR [eax],0x0
   153cc:	ret    0x4
   153cf:	int3   
   153d0:	push   esi
   153d1:	mov    esi,ecx
   153d3:	mov    ecx,DWORD PTR [esi]
   153d5:	test   ecx,ecx
   153d7:	je     0x153de
   153d9:	call   0x12860
   153de:	mov    eax,DWORD PTR [esp+0x8]
   153e2:	mov    eax,DWORD PTR [eax]
   153e4:	mov    DWORD PTR [esi],eax
   153e6:	inc    DWORD PTR [eax+0x4]
   153e9:	mov    eax,esi
   153eb:	pop    esi
   153ec:	ret    0x4
   153ef:	int3   
   153f0:	push   ebx
   153f1:	push   esi
   153f2:	mov    esi,DWORD PTR [esp+0x10]
   153f6:	mov    ebx,ecx
   153f8:	and    DWORD PTR [ebx+0x4],0x0
   153fc:	lea    eax,[esi+0x1]
   153ff:	push   edi
   15400:	push   eax
   15401:	mov    DWORD PTR [ebx+0x8],esi
   15404:	call   0x12822
   15409:	pop    ecx
   1540a:	mov    ecx,esi
   1540c:	mov    esi,DWORD PTR [esp+0x10]
   15410:	mov    edx,ecx
   15412:	shr    ecx,0x2
   15415:	mov    edi,eax
   15417:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15419:	mov    ecx,edx
   1541b:	and    ecx,0x3
   1541e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15420:	inc    DWORD PTR [ebx+0x4]
   15423:	pop    edi
   15424:	mov    DWORD PTR [ebx],eax
   15426:	pop    esi
   15427:	mov    eax,ebx
   15429:	pop    ebx
   1542a:	ret    0x8
   1542d:	int3   
   1542e:	push   ebp
   1542f:	mov    ebp,esp
   15431:	sub    esp,0x18
   15434:	lea    eax,[ebp-0x18]
   15437:	push   eax
   15438:	push   DWORD PTR [ebp+0x8]
   1543b:	call   0x12daa
   15440:	test   al,al
   15442:	je     0x154af
   15444:	lea    eax,[ebp-0x4]
   15447:	push   eax
   15448:	push   DWORD PTR [ebp+0xc]
   1544b:	call   DWORD PTR ds:0x1b0a0
   15451:	test   eax,eax
   15453:	jl     0x154af
   15455:	push   esi
   15456:	push   0x5
   15458:	call   0x145da
   1545d:	mov    esi,eax
   1545f:	test   esi,esi
   15461:	je     0x154ae
   15463:	mov    edx,DWORD PTR [ebp+0x10]
   15466:	cmp    DWORD PTR [esi+0x44],edx
   15469:	je     0x15478
   1546b:	mov    ecx,DWORD PTR [eax]
   1546d:	test   ecx,ecx
   1546f:	je     0x1549c
   15471:	add    eax,ecx
   15473:	cmp    DWORD PTR [eax+0x44],edx
   15476:	jne    0x1546b
   15478:	cmp    DWORD PTR [eax+0x4],0x0
   1547c:	je     0x1549c
   1547e:	mov    ecx,DWORD PTR [eax+0xd8]
   15484:	mov    eax,DWORD PTR [eax+0xdc]
   1548a:	mov    DWORD PTR [ebp-0x14],eax
   1548d:	lea    eax,[ebp-0x18]
   15490:	push   eax
   15491:	push   DWORD PTR [ebp+0x8]
   15494:	mov    DWORD PTR [ebp-0x18],ecx
   15497:	call   0x12e24
   1549c:	mov    ecx,DWORD PTR [ebp-0x4]
   1549f:	call   DWORD PTR ds:0x1b084
   154a5:	push   0x0
   154a7:	push   esi
   154a8:	call   DWORD PTR ds:0x1b024
   154ae:	pop    esi
   154af:	leave  
   154b0:	ret    0x10
   154b3:	int3   
   154b4:	push   esi
   154b5:	mov    esi,DWORD PTR [esp+0x8]
   154b9:	push   edi
   154ba:	mov    edi,ecx
   154bc:	cmp    edi,esi
   154be:	je     0x154eb
   154c0:	mov    eax,DWORD PTR [edi+0x4]
   154c3:	cmp    eax,DWORD PTR [esi+0x4]
   154c6:	je     0x154da
   154c8:	cmp    BYTE PTR [edi],0x0
   154cb:	je     0x154d4
   154cd:	push   eax
   154ce:	call   0x1284c
   154d3:	pop    ecx
   154d4:	mov    al,BYTE PTR [esi]
   154d6:	mov    BYTE PTR [edi],al
   154d8:	jmp    0x154e2
   154da:	cmp    BYTE PTR [esi],0x0
   154dd:	je     0x154e2
   154df:	mov    BYTE PTR [edi],0x1
   154e2:	mov    eax,DWORD PTR [esi+0x4]
   154e5:	mov    BYTE PTR [esi],0x0
   154e8:	mov    DWORD PTR [edi+0x4],eax
   154eb:	mov    eax,edi
   154ed:	pop    edi
   154ee:	pop    esi
   154ef:	ret    0x4
   154f2:	push   esi
   154f3:	push   DWORD PTR [esp+0x8]
   154f7:	mov    esi,ecx
   154f9:	call   0x19b36
   154fe:	push   DWORD PTR [esp+0xc]
   15502:	lea    ecx,[esi+0x8]
   15505:	call   0x1503e
   1550a:	mov    eax,esi
   1550c:	pop    esi
   1550d:	ret    0x8
   15510:	mov    eax,DWORD PTR [esp+0x4]
   15514:	mov    eax,DWORD PTR [eax]
   15516:	push   esi
   15517:	push   DWORD PTR [esp+0xc]
   1551b:	mov    esi,ecx
   1551d:	lea    ecx,[esi+0x4]
   15520:	mov    DWORD PTR [esi],eax
   15522:	call   0x153b6
   15527:	mov    eax,esi
   15529:	pop    esi
   1552a:	ret    0x8
   1552d:	int3   
   1552e:	mov    eax,DWORD PTR [esp+0x4]
   15532:	mov    edx,DWORD PTR ds:0x834f4
   15538:	jmp    0x1553c
   1553a:	mov    eax,ecx
   1553c:	mov    ecx,DWORD PTR [eax]
   1553e:	cmp    ecx,edx
   15540:	jne    0x1553a
   15542:	ret    0x4
   15545:	int3   
   15546:	mov    eax,DWORD PTR [ecx+0x4]
   15549:	mov    ecx,DWORD PTR [eax+0x4]
   1554c:	mov    edx,DWORD PTR ds:0x834e8
   15552:	cmp    ecx,edx
   15554:	je     0x15570
   15556:	push   esi
   15557:	mov    esi,DWORD PTR [esp+0x8]
   1555b:	mov    esi,DWORD PTR [esi]
   1555d:	cmp    DWORD PTR [ecx+0xc],esi
   15560:	jae    0x15567
   15562:	mov    ecx,DWORD PTR [ecx+0x8]
   15565:	jmp    0x1556b
   15567:	mov    eax,ecx
   15569:	mov    ecx,DWORD PTR [ecx]
   1556b:	cmp    ecx,edx
   1556d:	jne    0x1555d
   1556f:	pop    esi
   15570:	ret    0x4
   15573:	int3   
   15574:	mov    edx,DWORD PTR [esp+0x4]
   15578:	mov    eax,DWORD PTR [edx+0x8]
   1557b:	push   esi
   1557c:	mov    esi,DWORD PTR [eax]
   1557e:	mov    DWORD PTR [edx+0x8],esi
   15581:	mov    esi,DWORD PTR [eax]
   15583:	cmp    esi,DWORD PTR ds:0x834e8
   15589:	je     0x1558e
   1558b:	mov    DWORD PTR [esi+0x4],edx
   1558e:	mov    esi,DWORD PTR [edx+0x4]
   15591:	mov    DWORD PTR [eax+0x4],esi
   15594:	mov    ecx,DWORD PTR [ecx+0x4]
   15597:	cmp    edx,DWORD PTR [ecx+0x4]
   1559a:	pop    esi
   1559b:	jne    0x155a2
   1559d:	mov    DWORD PTR [ecx+0x4],eax
   155a0:	jmp    0x155b0
   155a2:	mov    ecx,DWORD PTR [edx+0x4]
   155a5:	cmp    edx,DWORD PTR [ecx]
   155a7:	jne    0x155ad
   155a9:	mov    DWORD PTR [ecx],eax
   155ab:	jmp    0x155b0
   155ad:	mov    DWORD PTR [ecx+0x8],eax
   155b0:	mov    DWORD PTR [eax],edx
   155b2:	mov    DWORD PTR [edx+0x4],eax
   155b5:	ret    0x4
   155b8:	mov    edx,DWORD PTR [esp+0x4]
   155bc:	mov    eax,DWORD PTR [edx]
   155be:	push   esi
   155bf:	mov    esi,DWORD PTR [eax+0x8]
   155c2:	mov    DWORD PTR [edx],esi
   155c4:	mov    esi,DWORD PTR [eax+0x8]
   155c7:	cmp    esi,DWORD PTR ds:0x834e8
   155cd:	je     0x155d2
   155cf:	mov    DWORD PTR [esi+0x4],edx
   155d2:	mov    esi,DWORD PTR [edx+0x4]
   155d5:	mov    DWORD PTR [eax+0x4],esi
   155d8:	mov    ecx,DWORD PTR [ecx+0x4]
   155db:	cmp    edx,DWORD PTR [ecx+0x4]
   155de:	pop    esi
   155df:	jne    0x155e6
   155e1:	mov    DWORD PTR [ecx+0x4],eax
   155e4:	jmp    0x155f5
   155e6:	mov    ecx,DWORD PTR [edx+0x4]
   155e9:	cmp    edx,DWORD PTR [ecx+0x8]
   155ec:	jne    0x155f3
   155ee:	mov    DWORD PTR [ecx+0x8],eax
   155f1:	jmp    0x155f5
   155f3:	mov    DWORD PTR [ecx],eax
   155f5:	mov    DWORD PTR [eax+0x8],edx
   155f8:	mov    DWORD PTR [edx+0x4],eax
   155fb:	ret    0x4
   155fe:	mov    eax,DWORD PTR [ecx+0x4]
   15601:	push   esi
   15602:	mov    esi,DWORD PTR [eax+0x4]
   15605:	push   edi
   15606:	mov    edi,eax
   15608:	jmp    0x15624
   1560a:	push   DWORD PTR [esp+0xc]
   1560e:	lea    eax,[esi+0x10]
   15611:	push   eax
   15612:	call   0x19a5a
   15617:	test   al,al
   15619:	je     0x15620
   1561b:	mov    esi,DWORD PTR [esi+0x8]
   1561e:	jmp    0x15624
   15620:	mov    edi,esi
   15622:	mov    esi,DWORD PTR [esi]
   15624:	cmp    esi,DWORD PTR ds:0x834f4
   1562a:	jne    0x1560a
   1562c:	mov    eax,edi
   1562e:	pop    edi
   1562f:	pop    esi
   15630:	ret    0x4
   15633:	int3   
   15634:	mov    eax,DWORD PTR [ecx+0x4]
   15637:	mov    ecx,DWORD PTR [eax+0x4]
   1563a:	mov    edx,DWORD PTR ds:0x834f8
   15640:	cmp    ecx,edx
   15642:	je     0x1565e
   15644:	push   esi
   15645:	mov    esi,DWORD PTR [esp+0x8]
   15649:	mov    esi,DWORD PTR [esi]
   1564b:	cmp    DWORD PTR [ecx+0xc],esi
   1564e:	jge    0x15655
   15650:	mov    ecx,DWORD PTR [ecx+0x8]
   15653:	jmp    0x15659
   15655:	mov    eax,ecx
   15657:	mov    ecx,DWORD PTR [ecx]
   15659:	cmp    ecx,edx
   1565b:	jne    0x1564b
   1565d:	pop    esi
   1565e:	ret    0x4
   15661:	int3   
   15662:	push   esi
   15663:	mov    esi,ecx
   15665:	mov    ecx,DWORD PTR [esi]
   15667:	mov    eax,DWORD PTR [ecx+0x8]
   1566a:	cmp    eax,DWORD PTR ds:0x834f0
   15670:	je     0x1567e
   15672:	push   eax
   15673:	call   0x15178
   15678:	jmp    0x1568d
   1567a:	mov    DWORD PTR [esi],eax
   1567c:	mov    ecx,eax
   1567e:	mov    eax,DWORD PTR [ecx+0x4]
   15681:	cmp    ecx,DWORD PTR [eax+0x8]
   15684:	je     0x1567a
   15686:	mov    ecx,DWORD PTR [esi]
   15688:	cmp    DWORD PTR [ecx+0x8],eax
   1568b:	je     0x1568f
   1568d:	mov    DWORD PTR [esi],eax
   1568f:	pop    esi
   15690:	ret    
   15691:	int3   
   15692:	push   esi
   15693:	mov    esi,ecx
   15695:	mov    ecx,DWORD PTR [esi]
   15697:	cmp    DWORD PTR [ecx+0x10],0x0
   1569b:	jne    0x156aa
   1569d:	mov    eax,DWORD PTR [ecx+0x4]
   156a0:	cmp    DWORD PTR [eax+0x4],ecx
   156a3:	jne    0x156aa
   156a5:	mov    eax,DWORD PTR [ecx+0x8]
   156a8:	jmp    0x156c7
   156aa:	mov    eax,DWORD PTR [ecx]
   156ac:	cmp    eax,DWORD PTR ds:0x834ec
   156b2:	je     0x156c0
   156b4:	push   eax
   156b5:	call   0x150c6
   156ba:	jmp    0x156c7
   156bc:	mov    DWORD PTR [esi],eax
   156be:	mov    ecx,eax
   156c0:	mov    eax,DWORD PTR [ecx+0x4]
   156c3:	cmp    ecx,DWORD PTR [eax]
   156c5:	je     0x156bc
   156c7:	mov    DWORD PTR [esi],eax
   156c9:	pop    esi
   156ca:	ret    
   156cb:	int3   
   156cc:	push   esi
   156cd:	mov    esi,ecx
   156cf:	mov    ecx,DWORD PTR [esi]
   156d1:	mov    eax,DWORD PTR [ecx+0x8]
   156d4:	cmp    eax,DWORD PTR ds:0x834ec
   156da:	je     0x156e8
   156dc:	push   eax
   156dd:	call   0x150de
   156e2:	jmp    0x156f7
   156e4:	mov    DWORD PTR [esi],eax
   156e6:	mov    ecx,eax
   156e8:	mov    eax,DWORD PTR [ecx+0x4]
   156eb:	cmp    ecx,DWORD PTR [eax+0x8]
   156ee:	je     0x156e4
   156f0:	mov    ecx,DWORD PTR [esi]
   156f2:	cmp    DWORD PTR [ecx+0x8],eax
   156f5:	je     0x156f9
   156f7:	mov    DWORD PTR [esi],eax
   156f9:	pop    esi
   156fa:	ret    
   156fb:	int3   
   156fc:	mov    edx,DWORD PTR [esp+0x4]
   15700:	mov    eax,DWORD PTR [edx+0x8]
   15703:	push   esi
   15704:	mov    esi,DWORD PTR [eax]
   15706:	mov    DWORD PTR [edx+0x8],esi
   15709:	mov    esi,DWORD PTR [eax]
   1570b:	cmp    esi,DWORD PTR ds:0x834ec
   15711:	je     0x15716
   15713:	mov    DWORD PTR [esi+0x4],edx
   15716:	mov    esi,DWORD PTR [edx+0x4]
   15719:	mov    DWORD PTR [eax+0x4],esi
   1571c:	mov    ecx,DWORD PTR [ecx+0x4]
   1571f:	cmp    edx,DWORD PTR [ecx+0x4]
   15722:	pop    esi
   15723:	jne    0x1572a
   15725:	mov    DWORD PTR [ecx+0x4],eax
   15728:	jmp    0x15738
   1572a:	mov    ecx,DWORD PTR [edx+0x4]
   1572d:	cmp    edx,DWORD PTR [ecx]
   1572f:	jne    0x15735
   15731:	mov    DWORD PTR [ecx],eax
   15733:	jmp    0x15738
   15735:	mov    DWORD PTR [ecx+0x8],eax
   15738:	mov    DWORD PTR [eax],edx
   1573a:	mov    DWORD PTR [edx+0x4],eax
   1573d:	ret    0x4
   15740:	mov    edx,DWORD PTR [esp+0x4]
   15744:	mov    eax,DWORD PTR [edx]
   15746:	push   esi
   15747:	mov    esi,DWORD PTR [eax+0x8]
   1574a:	mov    DWORD PTR [edx],esi
   1574c:	mov    esi,DWORD PTR [eax+0x8]
   1574f:	cmp    esi,DWORD PTR ds:0x834ec
   15755:	je     0x1575a
   15757:	mov    DWORD PTR [esi+0x4],edx
   1575a:	mov    esi,DWORD PTR [edx+0x4]
   1575d:	mov    DWORD PTR [eax+0x4],esi
   15760:	mov    ecx,DWORD PTR [ecx+0x4]
   15763:	cmp    edx,DWORD PTR [ecx+0x4]
   15766:	pop    esi
   15767:	jne    0x1576e
   15769:	mov    DWORD PTR [ecx+0x4],eax
   1576c:	jmp    0x1577d
   1576e:	mov    ecx,DWORD PTR [edx+0x4]
   15771:	cmp    edx,DWORD PTR [ecx+0x8]
   15774:	jne    0x1577b
   15776:	mov    DWORD PTR [ecx+0x8],eax
   15779:	jmp    0x1577d
   1577b:	mov    DWORD PTR [ecx],eax
   1577d:	mov    DWORD PTR [eax+0x8],edx
   15780:	mov    DWORD PTR [edx+0x4],eax
   15783:	ret    0x4
   15786:	mov    eax,DWORD PTR [ecx+0x4]
   15789:	mov    ecx,DWORD PTR [eax+0x4]
   1578c:	mov    edx,DWORD PTR ds:0x834e8
   15792:	cmp    ecx,edx
   15794:	je     0x157b0
   15796:	push   esi
   15797:	mov    esi,DWORD PTR [esp+0x8]
   1579b:	mov    esi,DWORD PTR [esi]
   1579d:	cmp    esi,DWORD PTR [ecx+0xc]
   157a0:	jae    0x157a8
   157a2:	mov    eax,ecx
   157a4:	mov    ecx,DWORD PTR [ecx]
   157a6:	jmp    0x157ab
   157a8:	mov    ecx,DWORD PTR [ecx+0x8]
   157ab:	cmp    ecx,edx
   157ad:	jne    0x1579d
   157af:	pop    esi
   157b0:	ret    0x4
   157b3:	int3   
   157b4:	mov    eax,DWORD PTR [ecx+0x4]
   157b7:	push   esi
   157b8:	mov    esi,DWORD PTR [eax+0x4]
   157bb:	push   edi
   157bc:	mov    edi,eax
   157be:	jmp    0x157da
   157c0:	push   DWORD PTR [esp+0xc]
   157c4:	lea    eax,[esi+0x10]
   157c7:	push   eax
   157c8:	call   0x19a5a
   157cd:	test   al,al
   157cf:	je     0x157d6
   157d1:	mov    esi,DWORD PTR [esi+0x8]
   157d4:	jmp    0x157da
   157d6:	mov    edi,esi
   157d8:	mov    esi,DWORD PTR [esi]
   157da:	cmp    esi,DWORD PTR ds:0x834f0
   157e0:	jne    0x157c0
   157e2:	mov    eax,edi
   157e4:	pop    edi
   157e5:	pop    esi
   157e6:	ret    0x4
   157e9:	int3   
   157ea:	mov    edx,DWORD PTR [esp+0x4]
   157ee:	mov    eax,DWORD PTR [edx+0x8]
   157f1:	push   esi
   157f2:	mov    esi,DWORD PTR [eax]
   157f4:	mov    DWORD PTR [edx+0x8],esi
   157f7:	mov    esi,DWORD PTR [eax]
   157f9:	cmp    esi,DWORD PTR ds:0x834f0
   157ff:	je     0x15804
   15801:	mov    DWORD PTR [esi+0x4],edx
   15804:	mov    esi,DWORD PTR [edx+0x4]
   15807:	mov    DWORD PTR [eax+0x4],esi
   1580a:	mov    ecx,DWORD PTR [ecx+0x4]
   1580d:	cmp    edx,DWORD PTR [ecx+0x4]
   15810:	pop    esi
   15811:	jne    0x15818
   15813:	mov    DWORD PTR [ecx+0x4],eax
   15816:	jmp    0x15826
   15818:	mov    ecx,DWORD PTR [edx+0x4]
   1581b:	cmp    edx,DWORD PTR [ecx]
   1581d:	jne    0x15823
   1581f:	mov    DWORD PTR [ecx],eax
   15821:	jmp    0x15826
   15823:	mov    DWORD PTR [ecx+0x8],eax
   15826:	mov    DWORD PTR [eax],edx
   15828:	mov    DWORD PTR [edx+0x4],eax
   1582b:	ret    0x4
   1582e:	mov    edx,DWORD PTR [esp+0x4]
   15832:	mov    eax,DWORD PTR [edx]
   15834:	push   esi
   15835:	mov    esi,DWORD PTR [eax+0x8]
   15838:	mov    DWORD PTR [edx],esi
   1583a:	mov    esi,DWORD PTR [eax+0x8]
   1583d:	cmp    esi,DWORD PTR ds:0x834f0
   15843:	je     0x15848
   15845:	mov    DWORD PTR [esi+0x4],edx
   15848:	mov    esi,DWORD PTR [edx+0x4]
   1584b:	mov    DWORD PTR [eax+0x4],esi
   1584e:	mov    ecx,DWORD PTR [ecx+0x4]
   15851:	cmp    edx,DWORD PTR [ecx+0x4]
   15854:	pop    esi
   15855:	jne    0x1585c
   15857:	mov    DWORD PTR [ecx+0x4],eax
   1585a:	jmp    0x1586b
   1585c:	mov    ecx,DWORD PTR [edx+0x4]
   1585f:	cmp    edx,DWORD PTR [ecx+0x8]
   15862:	jne    0x15869
   15864:	mov    DWORD PTR [ecx+0x8],eax
   15867:	jmp    0x1586b
   15869:	mov    DWORD PTR [ecx],eax
   1586b:	mov    DWORD PTR [eax+0x8],edx
   1586e:	mov    DWORD PTR [edx+0x4],eax
   15871:	ret    0x4
   15874:	mov    eax,DWORD PTR [ecx+0x4]
   15877:	push   esi
   15878:	mov    esi,DWORD PTR [eax+0x4]
   1587b:	push   edi
   1587c:	mov    edi,eax
   1587e:	jmp    0x1589a
   15880:	lea    eax,[esi+0x10]
   15883:	push   eax
   15884:	push   DWORD PTR [esp+0x10]
   15888:	call   0x19a5a
   1588d:	test   al,al
   1588f:	je     0x15897
   15891:	mov    edi,esi
   15893:	mov    esi,DWORD PTR [esi]
   15895:	jmp    0x1589a
   15897:	mov    esi,DWORD PTR [esi+0x8]
   1589a:	cmp    esi,DWORD PTR ds:0x834f4
   158a0:	jne    0x15880
   158a2:	mov    eax,edi
   158a4:	pop    edi
   158a5:	pop    esi
   158a6:	ret    0x4
   158a9:	int3   
   158aa:	mov    edx,DWORD PTR [esp+0x4]
   158ae:	mov    eax,DWORD PTR [edx+0x8]
   158b1:	push   esi
   158b2:	mov    esi,DWORD PTR [eax]
   158b4:	mov    DWORD PTR [edx+0x8],esi
   158b7:	mov    esi,DWORD PTR [eax]
   158b9:	cmp    esi,DWORD PTR ds:0x834f8
   158bf:	je     0x158c4
   158c1:	mov    DWORD PTR [esi+0x4],edx
   158c4:	mov    esi,DWORD PTR [edx+0x4]
   158c7:	mov    DWORD PTR [eax+0x4],esi
   158ca:	mov    ecx,DWORD PTR [ecx+0x4]
   158cd:	cmp    edx,DWORD PTR [ecx+0x4]
   158d0:	pop    esi
   158d1:	jne    0x158d8
   158d3:	mov    DWORD PTR [ecx+0x4],eax
   158d6:	jmp    0x158e6
   158d8:	mov    ecx,DWORD PTR [edx+0x4]
   158db:	cmp    edx,DWORD PTR [ecx]
   158dd:	jne    0x158e3
   158df:	mov    DWORD PTR [ecx],eax
   158e1:	jmp    0x158e6
   158e3:	mov    DWORD PTR [ecx+0x8],eax
   158e6:	mov    DWORD PTR [eax],edx
   158e8:	mov    DWORD PTR [edx+0x4],eax
   158eb:	ret    0x4
   158ee:	mov    edx,DWORD PTR [esp+0x4]
   158f2:	mov    eax,DWORD PTR [edx]
   158f4:	push   esi
   158f5:	mov    esi,DWORD PTR [eax+0x8]
   158f8:	mov    DWORD PTR [edx],esi
   158fa:	mov    esi,DWORD PTR [eax+0x8]
   158fd:	cmp    esi,DWORD PTR ds:0x834f8
   15903:	je     0x15908
   15905:	mov    DWORD PTR [esi+0x4],edx
   15908:	mov    esi,DWORD PTR [edx+0x4]
   1590b:	mov    DWORD PTR [eax+0x4],esi
   1590e:	mov    ecx,DWORD PTR [ecx+0x4]
   15911:	cmp    edx,DWORD PTR [ecx+0x4]
   15914:	pop    esi
   15915:	jne    0x1591c
   15917:	mov    DWORD PTR [ecx+0x4],eax
   1591a:	jmp    0x1592b
   1591c:	mov    ecx,DWORD PTR [edx+0x4]
   1591f:	cmp    edx,DWORD PTR [ecx+0x8]
   15922:	jne    0x15929
   15924:	mov    DWORD PTR [ecx+0x8],eax
   15927:	jmp    0x1592b
   15929:	mov    DWORD PTR [ecx],eax
   1592b:	mov    DWORD PTR [eax+0x8],edx
   1592e:	mov    DWORD PTR [edx+0x4],eax
   15931:	ret    0x4
   15934:	mov    eax,DWORD PTR [ecx+0x4]
   15937:	mov    ecx,DWORD PTR [eax+0x4]
   1593a:	mov    edx,DWORD PTR ds:0x834f8
   15940:	cmp    ecx,edx
   15942:	je     0x1595e
   15944:	push   esi
   15945:	mov    esi,DWORD PTR [esp+0x8]
   15949:	mov    esi,DWORD PTR [esi]
   1594b:	cmp    esi,DWORD PTR [ecx+0xc]
   1594e:	jge    0x15956
   15950:	mov    eax,ecx
   15952:	mov    ecx,DWORD PTR [ecx]
   15954:	jmp    0x15959
   15956:	mov    ecx,DWORD PTR [ecx+0x8]
   15959:	cmp    ecx,edx
   1595b:	jne    0x1594b
   1595d:	pop    esi
   1595e:	ret    0x4
   15961:	int3   
   15962:	mov    eax,DWORD PTR [ecx+0x4]
   15965:	mov    ecx,DWORD PTR [eax+0x4]
   15968:	mov    edx,DWORD PTR ds:0x834ec
   1596e:	cmp    ecx,edx
   15970:	je     0x1598c
   15972:	push   esi
   15973:	mov    esi,DWORD PTR [esp+0x8]
   15977:	mov    esi,DWORD PTR [esi]
   15979:	cmp    DWORD PTR [ecx+0xc],esi
   1597c:	jae    0x15983
   1597e:	mov    ecx,DWORD PTR [ecx+0x8]
   15981:	jmp    0x15987
   15983:	mov    eax,ecx
   15985:	mov    ecx,DWORD PTR [ecx]
   15987:	cmp    ecx,edx
   15989:	jne    0x15979
   1598b:	pop    esi
   1598c:	ret    0x4
   1598f:	int3   
   15990:	mov    eax,DWORD PTR [ecx+0x4]
   15993:	mov    ecx,DWORD PTR [eax+0x4]
   15996:	mov    edx,DWORD PTR ds:0x834ec
   1599c:	cmp    ecx,edx
   1599e:	je     0x159ba
   159a0:	push   esi
   159a1:	mov    esi,DWORD PTR [esp+0x8]
   159a5:	mov    esi,DWORD PTR [esi]
   159a7:	cmp    esi,DWORD PTR [ecx+0xc]
   159aa:	jae    0x159b2
   159ac:	mov    eax,ecx
   159ae:	mov    ecx,DWORD PTR [ecx]
   159b0:	jmp    0x159b5
   159b2:	mov    ecx,DWORD PTR [ecx+0x8]
   159b5:	cmp    ecx,edx
   159b7:	jne    0x159a7
   159b9:	pop    esi
   159ba:	ret    0x4
   159bd:	int3   
   159be:	push   esi
   159bf:	push   edi
   159c0:	mov    edi,DWORD PTR [esp+0xc]
   159c4:	push   edi
   159c5:	mov    esi,ecx
   159c7:	call   0x19b36
   159cc:	add    edi,0x8
   159cf:	push   edi
   159d0:	lea    ecx,[esi+0x8]
   159d3:	call   0x1535a
   159d8:	pop    edi
   159d9:	mov    eax,esi
   159db:	pop    esi
   159dc:	ret    0x4
   159df:	int3   
   159e0:	mov    eax,DWORD PTR [esp+0x4]
   159e4:	push   esi
   159e5:	mov    esi,ecx
   159e7:	mov    ecx,DWORD PTR [eax]
   159e9:	add    eax,0x4
   159ec:	mov    DWORD PTR [esi],ecx
   159ee:	push   eax
   159ef:	lea    ecx,[esi+0x4]
   159f2:	call   0x153b6
   159f7:	mov    eax,esi
   159f9:	pop    esi
   159fa:	ret    0x4
   159fd:	int3   
   159fe:	push   esi
   159ff:	mov    esi,ecx
   15a01:	mov    ecx,DWORD PTR [esi+0x4]
   15a04:	test   ecx,ecx
   15a06:	je     0x15a0d
   15a08:	call   0x12860
   15a0d:	test   BYTE PTR [esp+0x8],0x1
   15a12:	je     0x15a1b
   15a14:	push   esi
   15a15:	call   0x1284c
   15a1a:	pop    ecx
   15a1b:	mov    eax,esi
   15a1d:	pop    esi
   15a1e:	ret    0x4
   15a21:	int3   
   15a22:	push   ebp
   15a23:	mov    ebp,esp
   15a25:	push   edi
   15a26:	mov    edi,DWORD PTR [ebp+0xc]
   15a29:	cmp    DWORD PTR [ebp+0x8],edi
   15a2c:	je     0x15a42
   15a2e:	push   esi
   15a2f:	mov    esi,DWORD PTR [ebp+0x10]
   15a32:	inc    DWORD PTR [esi]
   15a34:	lea    ecx,[ebp+0x8]
   15a37:	call   0x15130
   15a3c:	cmp    DWORD PTR [ebp+0x8],edi
   15a3f:	jne    0x15a32
   15a41:	pop    esi
   15a42:	pop    edi
   15a43:	pop    ebp
   15a44:	ret    
   15a45:	int3   
   15a46:	push   ebp
   15a47:	mov    ebp,esp
   15a49:	push   edi
   15a4a:	mov    edi,DWORD PTR [ebp+0xc]
   15a4d:	cmp    DWORD PTR [ebp+0x8],edi
   15a50:	je     0x15a66
   15a52:	push   esi
   15a53:	mov    esi,DWORD PTR [ebp+0x10]
   15a56:	inc    DWORD PTR [esi]
   15a58:	lea    ecx,[ebp+0x8]
   15a5b:	call   0x15310
   15a60:	cmp    DWORD PTR [ebp+0x8],edi
   15a63:	jne    0x15a56
   15a65:	pop    esi
   15a66:	pop    edi
   15a67:	pop    ebp
   15a68:	ret    
   15a69:	int3   
   15a6a:	push   ebp
   15a6b:	mov    ebp,esp
   15a6d:	push   edi
   15a6e:	mov    edi,DWORD PTR [ebp+0xc]
   15a71:	cmp    DWORD PTR [ebp+0x8],edi
   15a74:	je     0x15a8a
   15a76:	push   esi
   15a77:	mov    esi,DWORD PTR [ebp+0x10]
   15a7a:	inc    DWORD PTR [esi]
   15a7c:	lea    ecx,[ebp+0x8]
   15a7f:	call   0x156cc
   15a84:	cmp    DWORD PTR [ebp+0x8],edi
   15a87:	jne    0x15a7a
   15a89:	pop    esi
   15a8a:	pop    edi
   15a8b:	pop    ebp
   15a8c:	ret    
   15a8d:	int3   
   15a8e:	push   esi
   15a8f:	push   0xc
   15a91:	mov    esi,ecx
   15a93:	call   0x12822
   15a98:	test   eax,eax
   15a9a:	pop    ecx
   15a9b:	je     0x15aae
   15a9d:	push   DWORD PTR [esp+0xc]
   15aa1:	mov    ecx,eax
   15aa3:	push   DWORD PTR [esp+0xc]
   15aa7:	call   0x153f0
   15aac:	jmp    0x15ab0
   15aae:	xor    eax,eax
   15ab0:	mov    DWORD PTR [esi],eax
   15ab2:	mov    eax,esi
   15ab4:	pop    esi
   15ab5:	ret    0x8
   15ab8:	push   esi
   15ab9:	mov    esi,ecx
   15abb:	mov    ecx,DWORD PTR [esi]
   15abd:	mov    eax,DWORD PTR [ecx+0x8]
   15ac0:	cmp    eax,DWORD PTR ds:0x834f4
   15ac6:	je     0x15ad4
   15ac8:	push   eax
   15ac9:	call   0x1552e
   15ace:	jmp    0x15ae3
   15ad0:	mov    DWORD PTR [esi],eax
   15ad2:	mov    ecx,eax
   15ad4:	mov    eax,DWORD PTR [ecx+0x4]
   15ad7:	cmp    ecx,DWORD PTR [eax+0x8]
   15ada:	je     0x15ad0
   15adc:	mov    ecx,DWORD PTR [esi]
   15ade:	cmp    DWORD PTR [ecx+0x8],eax
   15ae1:	je     0x15ae5
   15ae3:	mov    DWORD PTR [esi],eax
   15ae5:	pop    esi
   15ae6:	ret    
   15ae7:	int3   
   15ae8:	push   ebx
   15ae9:	push   esi
   15aea:	push   edi
   15aeb:	mov    edi,DWORD PTR [esp+0x10]
   15aef:	cmp    edi,DWORD PTR ds:0x834e8
   15af5:	mov    ebx,ecx
   15af7:	mov    esi,edi
   15af9:	je     0x15b18
   15afb:	push   DWORD PTR [esi+0x8]
   15afe:	mov    ecx,ebx
   15b00:	call   0x15ae8
   15b05:	mov    esi,DWORD PTR [esi]
   15b07:	push   edi
   15b08:	call   0x1284c
   15b0d:	cmp    esi,DWORD PTR ds:0x834e8
   15b13:	pop    ecx
   15b14:	mov    edi,esi
   15b16:	jne    0x15afb
   15b18:	pop    edi
   15b19:	pop    esi
   15b1a:	pop    ebx
   15b1b:	ret    0x4
   15b1e:	push   ebx
   15b1f:	push   esi
   15b20:	push   edi
   15b21:	mov    edi,DWORD PTR [esp+0x10]
   15b25:	cmp    edi,DWORD PTR ds:0x834ec
   15b2b:	mov    ebx,ecx
   15b2d:	mov    esi,edi
   15b2f:	je     0x15b4e
   15b31:	push   DWORD PTR [esi+0x8]
   15b34:	mov    ecx,ebx
   15b36:	call   0x15b1e
   15b3b:	mov    esi,DWORD PTR [esi]
   15b3d:	push   edi
   15b3e:	call   0x1284c
   15b43:	cmp    esi,DWORD PTR ds:0x834ec
   15b49:	pop    ecx
   15b4a:	mov    edi,esi
   15b4c:	jne    0x15b31
   15b4e:	pop    edi
   15b4f:	pop    esi
   15b50:	pop    ebx
   15b51:	ret    0x4
   15b54:	push   0x14
   15b56:	call   0x12822
   15b5b:	pop    ecx
   15b5c:	mov    ecx,DWORD PTR [esp+0x4]
   15b60:	mov    DWORD PTR [eax+0x4],ecx
   15b63:	mov    ecx,DWORD PTR [esp+0x8]
   15b67:	mov    DWORD PTR [eax+0x10],ecx
   15b6a:	ret    0x8
   15b6d:	int3   
   15b6e:	push   ebp
   15b6f:	mov    ebp,esp
   15b71:	push   ecx
   15b72:	push   DWORD PTR [ebp-0x4]
   15b75:	push   DWORD PTR [ebp+0x10]
   15b78:	push   DWORD PTR [ebp+0xc]
   15b7b:	push   DWORD PTR [ebp+0x8]
   15b7e:	call   0x15a22
   15b83:	add    esp,0x10
   15b86:	leave  
   15b87:	ret    
   15b88:	push   ebp
   15b89:	mov    ebp,esp
   15b8b:	push   ecx
   15b8c:	push   DWORD PTR [ebp-0x4]
   15b8f:	push   DWORD PTR [ebp+0x10]
   15b92:	push   DWORD PTR [ebp+0xc]
   15b95:	push   DWORD PTR [ebp+0x8]
   15b98:	call   0x15a46
   15b9d:	add    esp,0x10
   15ba0:	leave  
   15ba1:	ret    
   15ba2:	push   ebp
   15ba3:	mov    ebp,esp
   15ba5:	push   ecx
   15ba6:	push   DWORD PTR [ebp-0x4]
   15ba9:	push   DWORD PTR [ebp+0x10]
   15bac:	push   DWORD PTR [ebp+0xc]
   15baf:	push   DWORD PTR [ebp+0x8]
   15bb2:	call   0x15a6a
   15bb7:	add    esp,0x10
   15bba:	leave  
   15bbb:	ret    
   15bbc:	push   ebp
   15bbd:	mov    ebp,esp
   15bbf:	push   ecx
   15bc0:	push   esi
   15bc1:	push   edi
   15bc2:	mov    edi,DWORD PTR [ebp+0xc]
   15bc5:	push   edi
   15bc6:	mov    esi,ecx
   15bc8:	call   0x15546
   15bcd:	mov    esi,DWORD PTR [esi+0x4]
   15bd0:	cmp    eax,esi
   15bd2:	mov    DWORD PTR [ebp+0xc],eax
   15bd5:	je     0x15be3
   15bd7:	mov    ecx,DWORD PTR [edi]
   15bd9:	cmp    ecx,DWORD PTR [eax+0xc]
   15bdc:	jb     0x15be3
   15bde:	lea    eax,[ebp+0xc]
   15be1:	jmp    0x15be9
   15be3:	mov    DWORD PTR [ebp-0x4],esi
   15be6:	lea    eax,[ebp-0x4]
   15be9:	mov    ecx,DWORD PTR [eax]
   15beb:	mov    eax,DWORD PTR [ebp+0x8]
   15bee:	pop    edi
   15bef:	mov    DWORD PTR [eax],ecx
   15bf1:	pop    esi
   15bf2:	leave  
   15bf3:	ret    0x8
   15bf6:	push   ebp
   15bf7:	mov    ebp,esp
   15bf9:	push   ecx
   15bfa:	push   esi
   15bfb:	push   DWORD PTR [ebp+0xc]
   15bfe:	mov    esi,ecx
   15c00:	call   0x155fe
   15c05:	cmp    eax,DWORD PTR [esi+0x4]
   15c08:	mov    DWORD PTR [ebp-0x4],eax
   15c0b:	je     0x15c22
   15c0d:	add    eax,0x10
   15c10:	push   eax
   15c11:	push   DWORD PTR [ebp+0xc]
   15c14:	call   0x19a5a
   15c19:	test   al,al
   15c1b:	jne    0x15c22
   15c1d:	lea    eax,[ebp-0x4]
   15c20:	jmp    0x15c2b
   15c22:	mov    eax,DWORD PTR [esi+0x4]
   15c25:	mov    DWORD PTR [ebp+0xc],eax
   15c28:	lea    eax,[ebp+0xc]
   15c2b:	mov    ecx,DWORD PTR [eax]
   15c2d:	mov    eax,DWORD PTR [ebp+0x8]
   15c30:	mov    DWORD PTR [eax],ecx
   15c32:	pop    esi
   15c33:	leave  
   15c34:	ret    0x8
   15c37:	int3   
   15c38:	push   ebp
   15c39:	mov    ebp,esp
   15c3b:	push   ecx
   15c3c:	push   esi
   15c3d:	push   edi
   15c3e:	mov    edi,DWORD PTR [ebp+0xc]
   15c41:	push   edi
   15c42:	mov    esi,ecx
   15c44:	call   0x15634
   15c49:	mov    esi,DWORD PTR [esi+0x4]
   15c4c:	cmp    eax,esi
   15c4e:	mov    DWORD PTR [ebp+0xc],eax
   15c51:	je     0x15c5f
   15c53:	mov    ecx,DWORD PTR [edi]
   15c55:	cmp    ecx,DWORD PTR [eax+0xc]
   15c58:	jl     0x15c5f
   15c5a:	lea    eax,[ebp+0xc]
   15c5d:	jmp    0x15c65
   15c5f:	mov    DWORD PTR [ebp-0x4],esi
   15c62:	lea    eax,[ebp-0x4]
   15c65:	mov    ecx,DWORD PTR [eax]
   15c67:	mov    eax,DWORD PTR [ebp+0x8]
   15c6a:	pop    edi
   15c6b:	mov    DWORD PTR [eax],ecx
   15c6d:	pop    esi
   15c6e:	leave  
   15c6f:	ret    0x8
   15c72:	push   ebp
   15c73:	mov    ebp,esp
   15c75:	push   ecx
   15c76:	mov    eax,DWORD PTR [ecx]
   15c78:	lea    ecx,[ebp-0x4]
   15c7b:	mov    DWORD PTR [ebp-0x4],eax
   15c7e:	call   0x15692
   15c83:	mov    eax,DWORD PTR [ebp-0x4]
   15c86:	add    eax,0xc
   15c89:	leave  
   15c8a:	ret    
   15c8b:	int3   
   15c8c:	push   ebp
   15c8d:	mov    ebp,esp
   15c8f:	push   ecx
   15c90:	push   ecx
   15c91:	push   ebx
   15c92:	push   esi
   15c93:	mov    DWORD PTR [ebp-0x4],ecx
   15c96:	push   edi
   15c97:	mov    edi,DWORD PTR [ebp+0xc]
   15c9a:	lea    ecx,[ebp+0xc]
   15c9d:	call   0x15130
   15ca2:	mov    esi,DWORD PTR [edi]
   15ca4:	mov    eax,ds:0x834e8
   15ca9:	cmp    esi,eax
   15cab:	mov    ebx,edi
   15cad:	mov    DWORD PTR [ebp-0x8],esi
   15cb0:	jne    0x15cce
   15cb2:	mov    esi,DWORD PTR [edi+0x8]
   15cb5:	mov    eax,DWORD PTR [ebx+0x4]
   15cb8:	mov    ecx,DWORD PTR [ebp-0x4]
   15cbb:	mov    DWORD PTR [esi+0x4],eax
   15cbe:	mov    eax,DWORD PTR [ecx+0x4]
   15cc1:	cmp    DWORD PTR [eax+0x4],edi
   15cc4:	jne    0x15d43
   15cc6:	mov    DWORD PTR [eax+0x4],esi
   15cc9:	jmp    0x15d51
   15cce:	mov    ecx,DWORD PTR [edi+0x8]
   15cd1:	cmp    ecx,eax
   15cd3:	je     0x15cb5
   15cd5:	push   ecx
   15cd6:	call   0x150ae
   15cdb:	mov    ebx,eax
   15cdd:	cmp    ebx,edi
   15cdf:	mov    esi,DWORD PTR [ebx+0x8]
   15ce2:	je     0x15cb5
   15ce4:	mov    eax,DWORD PTR [ebp-0x8]
   15ce7:	mov    DWORD PTR [eax+0x4],ebx
   15cea:	mov    eax,DWORD PTR [edi]
   15cec:	mov    DWORD PTR [ebx],eax
   15cee:	cmp    ebx,DWORD PTR [edi+0x8]
   15cf1:	jne    0x15cf8
   15cf3:	mov    DWORD PTR [esi+0x4],ebx
   15cf6:	jmp    0x15d0f
   15cf8:	mov    eax,DWORD PTR [ebx+0x4]
   15cfb:	mov    DWORD PTR [esi+0x4],eax
   15cfe:	mov    eax,DWORD PTR [ebx+0x4]
   15d01:	mov    DWORD PTR [eax],esi
   15d03:	mov    eax,DWORD PTR [edi+0x8]
   15d06:	mov    DWORD PTR [ebx+0x8],eax
   15d09:	mov    eax,DWORD PTR [edi+0x8]
   15d0c:	mov    DWORD PTR [eax+0x4],ebx
   15d0f:	mov    eax,DWORD PTR [ebp-0x4]
   15d12:	mov    eax,DWORD PTR [eax+0x4]
   15d15:	cmp    DWORD PTR [eax+0x4],edi
   15d18:	jne    0x15d1f
   15d1a:	mov    DWORD PTR [eax+0x4],ebx
   15d1d:	jmp    0x15d2d
   15d1f:	mov    eax,DWORD PTR [edi+0x4]
   15d22:	cmp    DWORD PTR [eax],edi
   15d24:	jne    0x15d2a
   15d26:	mov    DWORD PTR [eax],ebx
   15d28:	jmp    0x15d2d
   15d2a:	mov    DWORD PTR [eax+0x8],ebx
   15d2d:	mov    eax,DWORD PTR [edi+0x4]
   15d30:	mov    DWORD PTR [ebx+0x4],eax
   15d33:	mov    eax,DWORD PTR [ebx+0x14]
   15d36:	mov    ecx,DWORD PTR [edi+0x14]
   15d39:	mov    DWORD PTR [ebx+0x14],ecx
   15d3c:	mov    DWORD PTR [edi+0x14],eax
   15d3f:	mov    ebx,edi
   15d41:	jmp    0x15da4
   15d43:	mov    eax,DWORD PTR [edi+0x4]
   15d46:	cmp    DWORD PTR [eax],edi
   15d48:	jne    0x15d4e
   15d4a:	mov    DWORD PTR [eax],esi
   15d4c:	jmp    0x15d51
   15d4e:	mov    DWORD PTR [eax+0x8],esi
   15d51:	mov    eax,DWORD PTR [ecx+0x4]
   15d54:	cmp    DWORD PTR [eax],edi
   15d56:	mov    DWORD PTR [ebp-0x8],eax
   15d59:	jne    0x15d7b
   15d5b:	mov    edx,DWORD PTR [edi+0x8]
   15d5e:	cmp    edx,DWORD PTR ds:0x834e8
   15d64:	jne    0x15d6d
   15d66:	mov    edx,DWORD PTR [edi+0x4]
   15d69:	mov    DWORD PTR [eax],edx
   15d6b:	jmp    0x15d7b
   15d6d:	push   esi
   15d6e:	call   0x150ae
   15d73:	mov    ecx,DWORD PTR [ebp-0x8]
   15d76:	mov    DWORD PTR [ecx],eax
   15d78:	mov    ecx,DWORD PTR [ebp-0x4]
   15d7b:	mov    eax,DWORD PTR [ecx+0x4]
   15d7e:	cmp    DWORD PTR [eax+0x8],edi
   15d81:	mov    DWORD PTR [ebp-0x8],eax
   15d84:	jne    0x15da4
   15d86:	mov    ecx,DWORD PTR [edi]
   15d88:	cmp    ecx,DWORD PTR ds:0x834e8
   15d8e:	jne    0x15d98
   15d90:	mov    ecx,DWORD PTR [edi+0x4]
   15d93:	mov    DWORD PTR [eax+0x8],ecx
   15d96:	jmp    0x15da4
   15d98:	push   esi
   15d99:	call   0x15096
   15d9e:	mov    ecx,DWORD PTR [ebp-0x8]
   15da1:	mov    DWORD PTR [ecx+0x8],eax
   15da4:	xor    edi,edi
   15da6:	inc    edi
   15da7:	cmp    DWORD PTR [ebx+0x14],edi
   15daa:	jne    0x15ec5
   15db0:	jmp    0x15e73
   15db5:	cmp    DWORD PTR [esi+0x14],edi
   15db8:	jne    0x15ec2
   15dbe:	mov    ecx,DWORD PTR [esi+0x4]
   15dc1:	mov    eax,DWORD PTR [ecx]
   15dc3:	cmp    esi,eax
   15dc5:	jne    0x15e3e
   15dc7:	mov    eax,DWORD PTR [ecx+0x8]
   15dca:	cmp    DWORD PTR [eax+0x14],0x0
   15dce:	jne    0x15dea
   15dd0:	mov    DWORD PTR [eax+0x14],edi
   15dd3:	mov    eax,DWORD PTR [esi+0x4]
   15dd6:	and    DWORD PTR [eax+0x14],0x0
   15dda:	push   DWORD PTR [esi+0x4]
   15ddd:	mov    ecx,edx
   15ddf:	call   0x15574
   15de4:	mov    eax,DWORD PTR [esi+0x4]
   15de7:	mov    eax,DWORD PTR [eax+0x8]
   15dea:	mov    ecx,DWORD PTR [eax]
   15dec:	cmp    DWORD PTR [ecx+0x14],edi
   15def:	jne    0x15df9
   15df1:	mov    ecx,DWORD PTR [eax+0x8]
   15df4:	cmp    DWORD PTR [ecx+0x14],edi
   15df7:	je     0x15e6c
   15df9:	mov    ecx,DWORD PTR [eax+0x8]
   15dfc:	cmp    DWORD PTR [ecx+0x14],edi
   15dff:	jne    0x15e19
   15e01:	mov    ecx,DWORD PTR [eax]
   15e03:	mov    DWORD PTR [ecx+0x14],edi
   15e06:	mov    ecx,DWORD PTR [ebp-0x4]
   15e09:	and    DWORD PTR [eax+0x14],0x0
   15e0d:	push   eax
   15e0e:	call   0x155b8
   15e13:	mov    eax,DWORD PTR [esi+0x4]
   15e16:	mov    eax,DWORD PTR [eax+0x8]
   15e19:	mov    ecx,DWORD PTR [esi+0x4]
   15e1c:	mov    ecx,DWORD PTR [ecx+0x14]
   15e1f:	mov    DWORD PTR [eax+0x14],ecx
   15e22:	mov    ecx,DWORD PTR [esi+0x4]
   15e25:	mov    DWORD PTR [ecx+0x14],edi
   15e28:	mov    eax,DWORD PTR [eax+0x8]
   15e2b:	mov    ecx,DWORD PTR [ebp-0x4]
   15e2e:	mov    DWORD PTR [eax+0x14],edi
   15e31:	push   DWORD PTR [esi+0x4]
   15e34:	call   0x15574
   15e39:	jmp    0x15ec2
   15e3e:	cmp    DWORD PTR [eax+0x14],0x0
   15e42:	jne    0x15e5d
   15e44:	mov    DWORD PTR [eax+0x14],edi
   15e47:	mov    eax,DWORD PTR [esi+0x4]
   15e4a:	and    DWORD PTR [eax+0x14],0x0
   15e4e:	push   DWORD PTR [esi+0x4]
   15e51:	mov    ecx,edx
   15e53:	call   0x155b8
   15e58:	mov    eax,DWORD PTR [esi+0x4]
   15e5b:	mov    eax,DWORD PTR [eax]
   15e5d:	mov    ecx,DWORD PTR [eax+0x8]
   15e60:	cmp    DWORD PTR [ecx+0x14],edi
   15e63:	jne    0x15e84
   15e65:	mov    ecx,DWORD PTR [eax]
   15e67:	cmp    DWORD PTR [ecx+0x14],edi
   15e6a:	jne    0x15e84
   15e6c:	and    DWORD PTR [eax+0x14],0x0
   15e70:	mov    esi,DWORD PTR [esi+0x4]
   15e73:	mov    edx,DWORD PTR [ebp-0x4]
   15e76:	mov    eax,DWORD PTR [edx+0x4]
   15e79:	cmp    esi,DWORD PTR [eax+0x4]
   15e7c:	jne    0x15db5
   15e82:	jmp    0x15ec2
   15e84:	mov    ecx,DWORD PTR [eax]
   15e86:	cmp    DWORD PTR [ecx+0x14],edi
   15e89:	jne    0x15ea3
   15e8b:	mov    ecx,DWORD PTR [eax+0x8]
   15e8e:	mov    DWORD PTR [ecx+0x14],edi
   15e91:	mov    ecx,DWORD PTR [ebp-0x4]
   15e94:	and    DWORD PTR [eax+0x14],0x0
   15e98:	push   eax
   15e99:	call   0x15574
   15e9e:	mov    eax,DWORD PTR [esi+0x4]
   15ea1:	mov    eax,DWORD PTR [eax]
   15ea3:	mov    ecx,DWORD PTR [esi+0x4]
   15ea6:	mov    ecx,DWORD PTR [ecx+0x14]
   15ea9:	mov    DWORD PTR [eax+0x14],ecx
   15eac:	mov    ecx,DWORD PTR [esi+0x4]
   15eaf:	mov    DWORD PTR [ecx+0x14],edi
   15eb2:	mov    eax,DWORD PTR [eax]
   15eb4:	mov    ecx,DWORD PTR [ebp-0x4]
   15eb7:	mov    DWORD PTR [eax+0x14],edi
   15eba:	push   DWORD PTR [esi+0x4]
   15ebd:	call   0x155b8
   15ec2:	mov    DWORD PTR [esi+0x14],edi
   15ec5:	push   ebx
   15ec6:	call   0x1284c
   15ecb:	mov    eax,DWORD PTR [ebp-0x4]
   15ece:	dec    DWORD PTR [eax+0xc]
   15ed1:	mov    eax,DWORD PTR [ebp+0x8]
   15ed4:	pop    ecx
   15ed5:	mov    ecx,DWORD PTR [ebp+0xc]
   15ed8:	pop    edi
   15ed9:	pop    esi
   15eda:	mov    DWORD PTR [eax],ecx
   15edc:	pop    ebx
   15edd:	leave  
   15ede:	ret    0x8
   15ee1:	int3   
   15ee2:	push   esi
   15ee3:	push   edi
   15ee4:	push   DWORD PTR [esp+0x10]
   15ee8:	mov    edi,ecx
   15eea:	call   0x15786
   15eef:	push   DWORD PTR [esp+0x10]
   15ef3:	mov    ecx,edi
   15ef5:	mov    esi,eax
   15ef7:	call   0x15546
   15efc:	mov    ecx,DWORD PTR [esp+0xc]
   15f00:	pop    edi
   15f01:	mov    DWORD PTR [ecx],eax
   15f03:	mov    DWORD PTR [ecx+0x4],esi
   15f06:	mov    eax,ecx
   15f08:	pop    esi
   15f09:	ret    0x8
   15f0c:	push   ebx
   15f0d:	push   esi
   15f0e:	push   edi
   15f0f:	push   0x18
   15f11:	mov    esi,ecx
   15f13:	call   0x12822
   15f18:	xor    ebx,ebx
   15f1a:	mov    DWORD PTR [eax+0x4],ebx
   15f1d:	mov    DWORD PTR [eax+0x14],0x1
   15f24:	cmp    DWORD PTR ds:0x834e8,ebx
   15f2a:	pop    ecx
   15f2b:	mov    ecx,eax
   15f2d:	jne    0x15f40
   15f2f:	mov    ds:0x834e8,eax
   15f34:	mov    DWORD PTR [eax],ebx
   15f36:	mov    eax,ds:0x834e8
   15f3b:	xor    ecx,ecx
   15f3d:	mov    DWORD PTR [eax+0x8],ebx
   15f40:	inc    DWORD PTR ds:0x834fc
   15f46:	cmp    ecx,ebx
   15f48:	je     0x15f51
   15f4a:	push   ecx
   15f4b:	call   0x1284c
   15f50:	pop    ecx
   15f51:	mov    edi,DWORD PTR ds:0x834e8
   15f57:	push   0x18
   15f59:	call   0x12822
   15f5e:	mov    DWORD PTR [eax+0x4],edi
   15f61:	mov    DWORD PTR [eax+0x14],ebx
   15f64:	mov    DWORD PTR [esi+0xc],ebx
   15f67:	mov    DWORD PTR [esi+0x4],eax
   15f6a:	pop    ecx
   15f6b:	mov    DWORD PTR [eax],eax
   15f6d:	mov    esi,DWORD PTR [esi+0x4]
   15f70:	pop    edi
   15f71:	mov    DWORD PTR [esi+0x8],esi
   15f74:	pop    esi
   15f75:	pop    ebx
   15f76:	ret    
   15f77:	int3   
   15f78:	push   ebp
   15f79:	mov    ebp,esp
   15f7b:	push   ecx
   15f7c:	push   esi
   15f7d:	push   DWORD PTR [ebp+0xc]
   15f80:	mov    esi,ecx
   15f82:	call   0x157b4
   15f87:	cmp    eax,DWORD PTR [esi+0x4]
   15f8a:	mov    DWORD PTR [ebp-0x4],eax
   15f8d:	je     0x15fa4
   15f8f:	add    eax,0x10
   15f92:	push   eax
   15f93:	push   DWORD PTR [ebp+0xc]
   15f96:	call   0x19a5a
   15f9b:	test   al,al
   15f9d:	jne    0x15fa4
   15f9f:	lea    eax,[ebp-0x4]
   15fa2:	jmp    0x15fad
   15fa4:	mov    eax,DWORD PTR [esi+0x4]
   15fa7:	mov    DWORD PTR [ebp+0xc],eax
   15faa:	lea    eax,[ebp+0xc]
   15fad:	mov    ecx,DWORD PTR [eax]
   15faf:	mov    eax,DWORD PTR [ebp+0x8]
   15fb2:	mov    DWORD PTR [eax],ecx
   15fb4:	pop    esi
   15fb5:	leave  
   15fb6:	ret    0x8
   15fb9:	int3   
   15fba:	push   esi
   15fbb:	push   edi
   15fbc:	push   DWORD PTR [esp+0x10]
   15fc0:	mov    edi,ecx
   15fc2:	call   0x15874
   15fc7:	push   DWORD PTR [esp+0x10]
   15fcb:	mov    ecx,edi
   15fcd:	mov    esi,eax
   15fcf:	call   0x155fe
   15fd4:	mov    ecx,DWORD PTR [esp+0xc]
   15fd8:	pop    edi
   15fd9:	mov    DWORD PTR [ecx],eax
   15fdb:	mov    DWORD PTR [ecx+0x4],esi
   15fde:	mov    eax,ecx
   15fe0:	pop    esi
   15fe1:	ret    0x8
   15fe4:	push   ebx
   15fe5:	push   esi
   15fe6:	push   edi
   15fe7:	push   0x48
   15fe9:	mov    esi,ecx
   15feb:	call   0x12822
   15ff0:	xor    ebx,ebx
   15ff2:	mov    DWORD PTR [eax+0x4],ebx
   15ff5:	mov    DWORD PTR [eax+0x40],0x1
   15ffc:	cmp    DWORD PTR ds:0x834f4,ebx
   16002:	pop    ecx
   16003:	mov    ecx,eax
   16005:	jne    0x16018
   16007:	mov    ds:0x834f4,eax
   1600c:	mov    DWORD PTR [eax],ebx
   1600e:	mov    eax,ds:0x834f4
   16013:	xor    ecx,ecx
   16015:	mov    DWORD PTR [eax+0x8],ebx
   16018:	inc    DWORD PTR ds:0x83500
   1601e:	cmp    ecx,ebx
   16020:	je     0x16029
   16022:	push   ecx
   16023:	call   0x1284c
   16028:	pop    ecx
   16029:	mov    edi,DWORD PTR ds:0x834f4
   1602f:	push   0x48
   16031:	call   0x12822
   16036:	mov    DWORD PTR [eax+0x4],edi
   16039:	mov    DWORD PTR [eax+0x40],ebx
   1603c:	mov    DWORD PTR [esi+0xc],ebx
   1603f:	mov    DWORD PTR [esi+0x4],eax
   16042:	pop    ecx
   16043:	mov    DWORD PTR [eax],eax
   16045:	mov    esi,DWORD PTR [esi+0x4]
   16048:	pop    edi
   16049:	mov    DWORD PTR [esi+0x8],esi
   1604c:	pop    esi
   1604d:	pop    ebx
   1604e:	ret    
   1604f:	int3   
   16050:	push   esi
   16051:	push   edi
   16052:	push   DWORD PTR [esp+0x10]
   16056:	mov    edi,ecx
   16058:	call   0x15934
   1605d:	push   DWORD PTR [esp+0x10]
   16061:	mov    ecx,edi
   16063:	mov    esi,eax
   16065:	call   0x15634
   1606a:	mov    ecx,DWORD PTR [esp+0xc]
   1606e:	pop    edi
   1606f:	mov    DWORD PTR [ecx],eax
   16071:	mov    DWORD PTR [ecx+0x4],esi
   16074:	mov    eax,ecx
   16076:	pop    esi
   16077:	ret    0x8
   1607a:	push   ebx
   1607b:	push   esi
   1607c:	push   edi
   1607d:	push   0x18
   1607f:	mov    esi,ecx
   16081:	call   0x12822
   16086:	xor    ebx,ebx
   16088:	mov    DWORD PTR [eax+0x4],ebx
   1608b:	mov    DWORD PTR [eax+0x14],0x1
   16092:	cmp    DWORD PTR ds:0x834f8,ebx
   16098:	pop    ecx
   16099:	mov    ecx,eax
   1609b:	jne    0x160ae
   1609d:	mov    ds:0x834f8,eax
   160a2:	mov    DWORD PTR [eax],ebx
   160a4:	mov    eax,ds:0x834f8
   160a9:	xor    ecx,ecx
   160ab:	mov    DWORD PTR [eax+0x8],ebx
   160ae:	inc    DWORD PTR ds:0x83504
   160b4:	cmp    ecx,ebx
   160b6:	je     0x160bf
   160b8:	push   ecx
   160b9:	call   0x1284c
   160be:	pop    ecx
   160bf:	mov    edi,DWORD PTR ds:0x834f8
   160c5:	push   0x18
   160c7:	call   0x12822
   160cc:	mov    DWORD PTR [eax+0x4],edi
   160cf:	mov    DWORD PTR [eax+0x14],ebx
   160d2:	mov    DWORD PTR [esi+0xc],ebx
   160d5:	mov    DWORD PTR [esi+0x4],eax
   160d8:	pop    ecx
   160d9:	mov    DWORD PTR [eax],eax
   160db:	mov    esi,DWORD PTR [esi+0x4]
   160de:	pop    edi
   160df:	mov    DWORD PTR [esi+0x8],esi
   160e2:	pop    esi
   160e3:	pop    ebx
   160e4:	ret    
   160e5:	int3   
   160e6:	push   ebp
   160e7:	mov    ebp,esp
   160e9:	push   ecx
   160ea:	push   ecx
   160eb:	push   ebx
   160ec:	push   esi
   160ed:	mov    DWORD PTR [ebp-0x4],ecx
   160f0:	push   edi
   160f1:	mov    edi,DWORD PTR [ebp+0xc]
   160f4:	lea    ecx,[ebp+0xc]
   160f7:	call   0x156cc
   160fc:	mov    esi,DWORD PTR [edi]
   160fe:	mov    eax,ds:0x834ec
   16103:	cmp    esi,eax
   16105:	mov    ebx,edi
   16107:	mov    DWORD PTR [ebp-0x8],esi
   1610a:	jne    0x16128
   1610c:	mov    esi,DWORD PTR [edi+0x8]
   1610f:	mov    eax,DWORD PTR [ebx+0x4]
   16112:	mov    ecx,DWORD PTR [ebp-0x4]
   16115:	mov    DWORD PTR [esi+0x4],eax
   16118:	mov    eax,DWORD PTR [ecx+0x4]
   1611b:	cmp    DWORD PTR [eax+0x4],edi
   1611e:	jne    0x1619d
   16120:	mov    DWORD PTR [eax+0x4],esi
   16123:	jmp    0x161ab
   16128:	mov    ecx,DWORD PTR [edi+0x8]
   1612b:	cmp    ecx,eax
   1612d:	je     0x1610f
   1612f:	push   ecx
   16130:	call   0x150de
   16135:	mov    ebx,eax
   16137:	cmp    ebx,edi
   16139:	mov    esi,DWORD PTR [ebx+0x8]
   1613c:	je     0x1610f
   1613e:	mov    eax,DWORD PTR [ebp-0x8]
   16141:	mov    DWORD PTR [eax+0x4],ebx
   16144:	mov    eax,DWORD PTR [edi]
   16146:	mov    DWORD PTR [ebx],eax
   16148:	cmp    ebx,DWORD PTR [edi+0x8]
   1614b:	jne    0x16152
   1614d:	mov    DWORD PTR [esi+0x4],ebx
   16150:	jmp    0x16169
   16152:	mov    eax,DWORD PTR [ebx+0x4]
   16155:	mov    DWORD PTR [esi+0x4],eax
   16158:	mov    eax,DWORD PTR [ebx+0x4]
   1615b:	mov    DWORD PTR [eax],esi
   1615d:	mov    eax,DWORD PTR [edi+0x8]
   16160:	mov    DWORD PTR [ebx+0x8],eax
   16163:	mov    eax,DWORD PTR [edi+0x8]
   16166:	mov    DWORD PTR [eax+0x4],ebx
   16169:	mov    eax,DWORD PTR [ebp-0x4]
   1616c:	mov    eax,DWORD PTR [eax+0x4]
   1616f:	cmp    DWORD PTR [eax+0x4],edi
   16172:	jne    0x16179
   16174:	mov    DWORD PTR [eax+0x4],ebx
   16177:	jmp    0x16187
   16179:	mov    eax,DWORD PTR [edi+0x4]
   1617c:	cmp    DWORD PTR [eax],edi
   1617e:	jne    0x16184
   16180:	mov    DWORD PTR [eax],ebx
   16182:	jmp    0x16187
   16184:	mov    DWORD PTR [eax+0x8],ebx
   16187:	mov    eax,DWORD PTR [edi+0x4]
   1618a:	mov    DWORD PTR [ebx+0x4],eax
   1618d:	mov    eax,DWORD PTR [ebx+0x10]
   16190:	mov    ecx,DWORD PTR [edi+0x10]
   16193:	mov    DWORD PTR [ebx+0x10],ecx
   16196:	mov    DWORD PTR [edi+0x10],eax
   16199:	mov    ebx,edi
   1619b:	jmp    0x161fe
   1619d:	mov    eax,DWORD PTR [edi+0x4]
   161a0:	cmp    DWORD PTR [eax],edi
   161a2:	jne    0x161a8
   161a4:	mov    DWORD PTR [eax],esi
   161a6:	jmp    0x161ab
   161a8:	mov    DWORD PTR [eax+0x8],esi
   161ab:	mov    eax,DWORD PTR [ecx+0x4]
   161ae:	cmp    DWORD PTR [eax],edi
   161b0:	mov    DWORD PTR [ebp-0x8],eax
   161b3:	jne    0x161d5
   161b5:	mov    edx,DWORD PTR [edi+0x8]
   161b8:	cmp    edx,DWORD PTR ds:0x834ec
   161be:	jne    0x161c7
   161c0:	mov    edx,DWORD PTR [edi+0x4]
   161c3:	mov    DWORD PTR [eax],edx
   161c5:	jmp    0x161d5
   161c7:	push   esi
   161c8:	call   0x150de
   161cd:	mov    ecx,DWORD PTR [ebp-0x8]
   161d0:	mov    DWORD PTR [ecx],eax
   161d2:	mov    ecx,DWORD PTR [ebp-0x4]
   161d5:	mov    eax,DWORD PTR [ecx+0x4]
   161d8:	cmp    DWORD PTR [eax+0x8],edi
   161db:	mov    DWORD PTR [ebp-0x8],eax
   161de:	jne    0x161fe
   161e0:	mov    ecx,DWORD PTR [edi]
   161e2:	cmp    ecx,DWORD PTR ds:0x834ec
   161e8:	jne    0x161f2
   161ea:	mov    ecx,DWORD PTR [edi+0x4]
   161ed:	mov    DWORD PTR [eax+0x8],ecx
   161f0:	jmp    0x161fe
   161f2:	push   esi
   161f3:	call   0x150c6
   161f8:	mov    ecx,DWORD PTR [ebp-0x8]
   161fb:	mov    DWORD PTR [ecx+0x8],eax
   161fe:	xor    edi,edi
   16200:	inc    edi
   16201:	cmp    DWORD PTR [ebx+0x10],edi
   16204:	jne    0x1631f
   1620a:	jmp    0x162cd
   1620f:	cmp    DWORD PTR [esi+0x10],edi
   16212:	jne    0x1631c
   16218:	mov    ecx,DWORD PTR [esi+0x4]
   1621b:	mov    eax,DWORD PTR [ecx]
   1621d:	cmp    esi,eax
   1621f:	jne    0x16298
   16221:	mov    eax,DWORD PTR [ecx+0x8]
   16224:	cmp    DWORD PTR [eax+0x10],0x0
   16228:	jne    0x16244
   1622a:	mov    DWORD PTR [eax+0x10],edi
   1622d:	mov    eax,DWORD PTR [esi+0x4]
   16230:	and    DWORD PTR [eax+0x10],0x0
   16234:	push   DWORD PTR [esi+0x4]
   16237:	mov    ecx,edx
   16239:	call   0x156fc
   1623e:	mov    eax,DWORD PTR [esi+0x4]
   16241:	mov    eax,DWORD PTR [eax+0x8]
   16244:	mov    ecx,DWORD PTR [eax]
   16246:	cmp    DWORD PTR [ecx+0x10],edi
   16249:	jne    0x16253
   1624b:	mov    ecx,DWORD PTR [eax+0x8]
   1624e:	cmp    DWORD PTR [ecx+0x10],edi
   16251:	je     0x162c6
   16253:	mov    ecx,DWORD PTR [eax+0x8]
   16256:	cmp    DWORD PTR [ecx+0x10],edi
   16259:	jne    0x16273
   1625b:	mov    ecx,DWORD PTR [eax]
   1625d:	mov    DWORD PTR [ecx+0x10],edi
   16260:	mov    ecx,DWORD PTR [ebp-0x4]
   16263:	and    DWORD PTR [eax+0x10],0x0
   16267:	push   eax
   16268:	call   0x15740
   1626d:	mov    eax,DWORD PTR [esi+0x4]
   16270:	mov    eax,DWORD PTR [eax+0x8]
   16273:	mov    ecx,DWORD PTR [esi+0x4]
   16276:	mov    ecx,DWORD PTR [ecx+0x10]
   16279:	mov    DWORD PTR [eax+0x10],ecx
   1627c:	mov    ecx,DWORD PTR [esi+0x4]
   1627f:	mov    DWORD PTR [ecx+0x10],edi
   16282:	mov    eax,DWORD PTR [eax+0x8]
   16285:	mov    ecx,DWORD PTR [ebp-0x4]
   16288:	mov    DWORD PTR [eax+0x10],edi
   1628b:	push   DWORD PTR [esi+0x4]
   1628e:	call   0x156fc
   16293:	jmp    0x1631c
   16298:	cmp    DWORD PTR [eax+0x10],0x0
   1629c:	jne    0x162b7
   1629e:	mov    DWORD PTR [eax+0x10],edi
   162a1:	mov    eax,DWORD PTR [esi+0x4]
   162a4:	and    DWORD PTR [eax+0x10],0x0
   162a8:	push   DWORD PTR [esi+0x4]
   162ab:	mov    ecx,edx
   162ad:	call   0x15740
   162b2:	mov    eax,DWORD PTR [esi+0x4]
   162b5:	mov    eax,DWORD PTR [eax]
   162b7:	mov    ecx,DWORD PTR [eax+0x8]
   162ba:	cmp    DWORD PTR [ecx+0x10],edi
   162bd:	jne    0x162de
   162bf:	mov    ecx,DWORD PTR [eax]
   162c1:	cmp    DWORD PTR [ecx+0x10],edi
   162c4:	jne    0x162de
   162c6:	and    DWORD PTR [eax+0x10],0x0
   162ca:	mov    esi,DWORD PTR [esi+0x4]
   162cd:	mov    edx,DWORD PTR [ebp-0x4]
   162d0:	mov    eax,DWORD PTR [edx+0x4]
   162d3:	cmp    esi,DWORD PTR [eax+0x4]
   162d6:	jne    0x1620f
   162dc:	jmp    0x1631c
   162de:	mov    ecx,DWORD PTR [eax]
   162e0:	cmp    DWORD PTR [ecx+0x10],edi
   162e3:	jne    0x162fd
   162e5:	mov    ecx,DWORD PTR [eax+0x8]
   162e8:	mov    DWORD PTR [ecx+0x10],edi
   162eb:	mov    ecx,DWORD PTR [ebp-0x4]
   162ee:	and    DWORD PTR [eax+0x10],0x0
   162f2:	push   eax
   162f3:	call   0x156fc
   162f8:	mov    eax,DWORD PTR [esi+0x4]
   162fb:	mov    eax,DWORD PTR [eax]
   162fd:	mov    ecx,DWORD PTR [esi+0x4]
   16300:	mov    ecx,DWORD PTR [ecx+0x10]
   16303:	mov    DWORD PTR [eax+0x10],ecx
   16306:	mov    ecx,DWORD PTR [esi+0x4]
   16309:	mov    DWORD PTR [ecx+0x10],edi
   1630c:	mov    eax,DWORD PTR [eax]
   1630e:	mov    ecx,DWORD PTR [ebp-0x4]
   16311:	mov    DWORD PTR [eax+0x10],edi
   16314:	push   DWORD PTR [esi+0x4]
   16317:	call   0x15740
   1631c:	mov    DWORD PTR [esi+0x10],edi
   1631f:	push   ebx
   16320:	call   0x1284c
   16325:	mov    eax,DWORD PTR [ebp-0x4]
   16328:	dec    DWORD PTR [eax+0xc]
   1632b:	mov    eax,DWORD PTR [ebp+0x8]
   1632e:	pop    ecx
   1632f:	mov    ecx,DWORD PTR [ebp+0xc]
   16332:	pop    edi
   16333:	pop    esi
   16334:	mov    DWORD PTR [eax],ecx
   16336:	pop    ebx
   16337:	leave  
   16338:	ret    0x8
   1633b:	int3   
   1633c:	push   esi
   1633d:	push   edi
   1633e:	push   DWORD PTR [esp+0x10]
   16342:	mov    edi,ecx
   16344:	call   0x15990
   16349:	push   DWORD PTR [esp+0x10]
   1634d:	mov    ecx,edi
   1634f:	mov    esi,eax
   16351:	call   0x15962
   16356:	mov    ecx,DWORD PTR [esp+0xc]
   1635a:	pop    edi
   1635b:	mov    DWORD PTR [ecx],eax
   1635d:	mov    DWORD PTR [ecx+0x4],esi
   16360:	mov    eax,ecx
   16362:	pop    esi
   16363:	ret    0x8
   16366:	push   ebx
   16367:	push   esi
   16368:	push   edi
   16369:	push   0x14
   1636b:	mov    esi,ecx
   1636d:	call   0x12822
   16372:	xor    ebx,ebx
   16374:	mov    DWORD PTR [eax+0x4],ebx
   16377:	mov    DWORD PTR [eax+0x10],0x1
   1637e:	cmp    DWORD PTR ds:0x834ec,ebx
   16384:	pop    ecx
   16385:	mov    ecx,eax
   16387:	jne    0x1639a
   16389:	mov    ds:0x834ec,eax
   1638e:	mov    DWORD PTR [eax],ebx
   16390:	mov    eax,ds:0x834ec
   16395:	xor    ecx,ecx
   16397:	mov    DWORD PTR [eax+0x8],ebx
   1639a:	inc    DWORD PTR ds:0x83508
   163a0:	cmp    ecx,ebx
   163a2:	je     0x163ab
   163a4:	push   ecx
   163a5:	call   0x1284c
   163aa:	pop    ecx
   163ab:	mov    edi,DWORD PTR ds:0x834ec
   163b1:	push   0x14
   163b3:	call   0x12822
   163b8:	mov    DWORD PTR [eax+0x4],edi
   163bb:	mov    DWORD PTR [eax+0x10],ebx
   163be:	mov    DWORD PTR [esi+0xc],ebx
   163c1:	mov    DWORD PTR [esi+0x4],eax
   163c4:	pop    ecx
   163c5:	mov    DWORD PTR [eax],eax
   163c7:	mov    esi,DWORD PTR [esi+0x4]
   163ca:	pop    edi
   163cb:	mov    DWORD PTR [esi+0x8],esi
   163ce:	pop    esi
   163cf:	pop    ebx
   163d0:	ret    
   163d1:	int3   
   163d2:	push   ebx
   163d3:	push   esi
   163d4:	push   edi
   163d5:	push   0x14
   163d7:	mov    ebx,ecx
   163d9:	call   0x12822
   163de:	mov    edx,DWORD PTR [esp+0x20]
   163e2:	mov    edi,eax
   163e4:	mov    eax,DWORD PTR [esp+0x1c]
   163e8:	and    DWORD PTR [edi+0x10],0x0
   163ec:	mov    DWORD PTR [edi+0x4],eax
   163ef:	pop    ecx
   163f0:	mov    ecx,DWORD PTR ds:0x834ec
   163f6:	mov    DWORD PTR [edi],ecx
   163f8:	mov    ecx,DWORD PTR ds:0x834ec
   163fe:	mov    DWORD PTR [edi+0x8],ecx
   16401:	lea    ecx,[edi+0xc]
   16404:	test   ecx,ecx
   16406:	je     0x1640c
   16408:	mov    esi,DWORD PTR [edx]
   1640a:	mov    DWORD PTR [ecx],esi
   1640c:	inc    DWORD PTR [ebx+0xc]
   1640f:	cmp    eax,DWORD PTR [ebx+0x4]
   16412:	je     0x16437
   16414:	mov    ecx,DWORD PTR [esp+0x14]
   16418:	cmp    ecx,DWORD PTR ds:0x834ec
   1641e:	jne    0x16437
   16420:	mov    ecx,DWORD PTR [edx]
   16422:	cmp    ecx,DWORD PTR [eax+0xc]
   16425:	jb     0x16437
   16427:	mov    DWORD PTR [eax+0x8],edi
   1642a:	mov    ecx,DWORD PTR [ebx+0x4]
   1642d:	cmp    eax,DWORD PTR [ecx+0x8]
   16430:	jne    0x16451
   16432:	mov    DWORD PTR [ecx+0x8],edi
   16435:	jmp    0x16451
   16437:	mov    DWORD PTR [eax],edi
   16439:	mov    ecx,DWORD PTR [ebx+0x4]
   1643c:	cmp    eax,ecx
   1643e:	jne    0x1644b
   16440:	mov    DWORD PTR [ecx+0x4],edi
   16443:	mov    eax,DWORD PTR [ebx+0x4]
   16446:	mov    DWORD PTR [eax+0x8],edi
   16449:	jmp    0x16451
   1644b:	cmp    eax,DWORD PTR [ecx]
   1644d:	jne    0x16451
   1644f:	mov    DWORD PTR [ecx],edi
   16451:	mov    eax,DWORD PTR [ebx+0x4]
   16454:	cmp    edi,DWORD PTR [eax+0x4]
   16457:	mov    esi,edi
   16459:	je     0x1650f
   1645f:	mov    eax,DWORD PTR [esi+0x4]
   16462:	cmp    DWORD PTR [eax+0x10],0x0
   16466:	jne    0x1650f
   1646c:	mov    edx,DWORD PTR [eax+0x4]
   1646f:	mov    ecx,DWORD PTR [edx]
   16471:	cmp    eax,ecx
   16473:	jne    0x164ce
   16475:	mov    ecx,DWORD PTR [edx+0x8]
   16478:	cmp    DWORD PTR [ecx+0x10],0x0
   1647c:	jne    0x1649c
   1647e:	mov    edx,DWORD PTR [esi+0x4]
   16481:	xor    eax,eax
   16483:	inc    eax
   16484:	mov    DWORD PTR [edx+0x10],eax
   16487:	mov    DWORD PTR [ecx+0x10],eax
   1648a:	mov    eax,DWORD PTR [esi+0x4]
   1648d:	mov    eax,DWORD PTR [eax+0x4]
   16490:	and    DWORD PTR [eax+0x10],0x0
   16494:	mov    eax,DWORD PTR [esi+0x4]
   16497:	mov    esi,DWORD PTR [eax+0x4]
   1649a:	jmp    0x16503
   1649c:	cmp    esi,DWORD PTR [eax+0x8]
   1649f:	jne    0x164ab
   164a1:	mov    esi,eax
   164a3:	push   esi
   164a4:	mov    ecx,ebx
   164a6:	call   0x156fc
   164ab:	mov    eax,DWORD PTR [esi+0x4]
   164ae:	mov    DWORD PTR [eax+0x10],0x1
   164b5:	mov    eax,DWORD PTR [esi+0x4]
   164b8:	mov    eax,DWORD PTR [eax+0x4]
   164bb:	and    DWORD PTR [eax+0x10],0x0
   164bf:	mov    eax,DWORD PTR [esi+0x4]
   164c2:	push   DWORD PTR [eax+0x4]
   164c5:	mov    ecx,ebx
   164c7:	call   0x15740
   164cc:	jmp    0x16503
   164ce:	cmp    DWORD PTR [ecx+0x10],0x0
   164d2:	je     0x1647e
   164d4:	cmp    esi,DWORD PTR [eax]
   164d6:	jne    0x164e2
   164d8:	mov    esi,eax
   164da:	push   esi
   164db:	mov    ecx,ebx
   164dd:	call   0x15740
   164e2:	mov    eax,DWORD PTR [esi+0x4]
   164e5:	mov    DWORD PTR [eax+0x10],0x1
   164ec:	mov    eax,DWORD PTR [esi+0x4]
   164ef:	mov    eax,DWORD PTR [eax+0x4]
   164f2:	and    DWORD PTR [eax+0x10],0x0
   164f6:	mov    eax,DWORD PTR [esi+0x4]
   164f9:	push   DWORD PTR [eax+0x4]
   164fc:	mov    ecx,ebx
   164fe:	call   0x156fc
   16503:	mov    eax,DWORD PTR [ebx+0x4]
   16506:	cmp    esi,DWORD PTR [eax+0x4]
   16509:	jne    0x1645f
   1650f:	mov    eax,DWORD PTR [ebx+0x4]
   16512:	mov    eax,DWORD PTR [eax+0x4]
   16515:	mov    DWORD PTR [eax+0x10],0x1
   1651c:	mov    eax,DWORD PTR [esp+0x10]
   16520:	mov    DWORD PTR [eax],edi
   16522:	pop    edi
   16523:	pop    esi
   16524:	pop    ebx
   16525:	ret    0x10
   16528:	push   ebp
   16529:	mov    ebp,esp
   1652b:	push   ebx
   1652c:	push   esi
   1652d:	push   edi
   1652e:	push   0x18
   16530:	mov    ebx,ecx
   16532:	call   0x12822
   16537:	mov    esi,DWORD PTR [ebp+0x10]
   1653a:	mov    edi,eax
   1653c:	and    DWORD PTR [edi+0x14],0x0
   16540:	mov    DWORD PTR [edi+0x4],esi
   16543:	mov    eax,ds:0x834e8
   16548:	mov    DWORD PTR [edi],eax
   1654a:	mov    eax,ds:0x834e8
   1654f:	pop    ecx
   16550:	push   DWORD PTR [ebp+0x14]
   16553:	mov    DWORD PTR [edi+0x8],eax
   16556:	lea    eax,[edi+0xc]
   16559:	push   eax
   1655a:	call   0x15340
   1655f:	inc    DWORD PTR [ebx+0xc]
   16562:	cmp    esi,DWORD PTR [ebx+0x4]
   16565:	je     0x1658c
   16567:	mov    eax,DWORD PTR [ebp+0xc]
   1656a:	cmp    eax,DWORD PTR ds:0x834e8
   16570:	jne    0x1658c
   16572:	mov    eax,DWORD PTR [ebp+0x14]
   16575:	mov    eax,DWORD PTR [eax]
   16577:	cmp    eax,DWORD PTR [esi+0xc]
   1657a:	jb     0x1658c
   1657c:	mov    DWORD PTR [esi+0x8],edi
   1657f:	mov    eax,DWORD PTR [ebx+0x4]
   16582:	cmp    esi,DWORD PTR [eax+0x8]
   16585:	jne    0x165a3
   16587:	mov    DWORD PTR [eax+0x8],edi
   1658a:	jmp    0x165a3
   1658c:	mov    DWORD PTR [esi],edi
   1658e:	mov    eax,DWORD PTR [ebx+0x4]
   16591:	cmp    esi,eax
   16593:	jne    0x1659d
   16595:	mov    DWORD PTR [eax+0x4],edi
   16598:	mov    eax,DWORD PTR [ebx+0x4]
   1659b:	jmp    0x16587
   1659d:	cmp    esi,DWORD PTR [eax]
   1659f:	jne    0x165a3
   165a1:	mov    DWORD PTR [eax],edi
   165a3:	mov    eax,DWORD PTR [ebx+0x4]
   165a6:	cmp    edi,DWORD PTR [eax+0x4]
   165a9:	mov    esi,edi
   165ab:	je     0x16661
   165b1:	mov    eax,DWORD PTR [esi+0x4]
   165b4:	cmp    DWORD PTR [eax+0x14],0x0
   165b8:	jne    0x16661
   165be:	mov    edx,DWORD PTR [eax+0x4]
   165c1:	mov    ecx,DWORD PTR [edx]
   165c3:	cmp    eax,ecx
   165c5:	jne    0x16620
   165c7:	mov    ecx,DWORD PTR [edx+0x8]
   165ca:	cmp    DWORD PTR [ecx+0x14],0x0
   165ce:	jne    0x165ee
   165d0:	mov    edx,DWORD PTR [esi+0x4]
   165d3:	xor    eax,eax
   165d5:	inc    eax
   165d6:	mov    DWORD PTR [edx+0x14],eax
   165d9:	mov    DWORD PTR [ecx+0x14],eax
   165dc:	mov    eax,DWORD PTR [esi+0x4]
   165df:	mov    eax,DWORD PTR [eax+0x4]
   165e2:	and    DWORD PTR [eax+0x14],0x0
   165e6:	mov    eax,DWORD PTR [esi+0x4]
   165e9:	mov    esi,DWORD PTR [eax+0x4]
   165ec:	jmp    0x16655
   165ee:	cmp    esi,DWORD PTR [eax+0x8]
   165f1:	jne    0x165fd
   165f3:	mov    esi,eax
   165f5:	push   esi
   165f6:	mov    ecx,ebx
   165f8:	call   0x15574
   165fd:	mov    eax,DWORD PTR [esi+0x4]
   16600:	mov    DWORD PTR [eax+0x14],0x1
   16607:	mov    eax,DWORD PTR [esi+0x4]
   1660a:	mov    eax,DWORD PTR [eax+0x4]
   1660d:	and    DWORD PTR [eax+0x14],0x0
   16611:	mov    eax,DWORD PTR [esi+0x4]
   16614:	push   DWORD PTR [eax+0x4]
   16617:	mov    ecx,ebx
   16619:	call   0x155b8
   1661e:	jmp    0x16655
   16620:	cmp    DWORD PTR [ecx+0x14],0x0
   16624:	je     0x165d0
   16626:	cmp    esi,DWORD PTR [eax]
   16628:	jne    0x16634
   1662a:	mov    esi,eax
   1662c:	push   esi
   1662d:	mov    ecx,ebx
   1662f:	call   0x155b8
   16634:	mov    eax,DWORD PTR [esi+0x4]
   16637:	mov    DWORD PTR [eax+0x14],0x1
   1663e:	mov    eax,DWORD PTR [esi+0x4]
   16641:	mov    eax,DWORD PTR [eax+0x4]
   16644:	and    DWORD PTR [eax+0x14],0x0
   16648:	mov    eax,DWORD PTR [esi+0x4]
   1664b:	push   DWORD PTR [eax+0x4]
   1664e:	mov    ecx,ebx
   16650:	call   0x15574
   16655:	mov    eax,DWORD PTR [ebx+0x4]
   16658:	cmp    esi,DWORD PTR [eax+0x4]
   1665b:	jne    0x165b1
   16661:	mov    eax,DWORD PTR [ebx+0x4]
   16664:	mov    eax,DWORD PTR [eax+0x4]
   16667:	mov    DWORD PTR [eax+0x14],0x1
   1666e:	mov    eax,DWORD PTR [ebp+0x8]
   16671:	mov    DWORD PTR [eax],edi
   16673:	pop    edi
   16674:	pop    esi
   16675:	pop    ebx
   16676:	pop    ebp
   16677:	ret    0x10
   1667a:	push   ebp
   1667b:	mov    ebp,esp
   1667d:	push   ecx
   1667e:	push   ecx
   1667f:	push   ebx
   16680:	push   esi
   16681:	mov    DWORD PTR [ebp-0x4],ecx
   16684:	push   edi
   16685:	mov    edi,DWORD PTR [ebp+0xc]
   16688:	lea    ecx,[ebp+0xc]
   1668b:	call   0x15662
   16690:	mov    esi,DWORD PTR [edi]
   16692:	mov    eax,ds:0x834f0
   16697:	cmp    esi,eax
   16699:	mov    ebx,edi
   1669b:	mov    DWORD PTR [ebp-0x8],esi
   1669e:	jne    0x166bc
   166a0:	mov    esi,DWORD PTR [edi+0x8]
   166a3:	mov    eax,DWORD PTR [ebx+0x4]
   166a6:	mov    ecx,DWORD PTR [ebp-0x4]
   166a9:	mov    DWORD PTR [esi+0x4],eax
   166ac:	mov    eax,DWORD PTR [ecx+0x4]
   166af:	cmp    DWORD PTR [eax+0x4],edi
   166b2:	jne    0x16731
   166b4:	mov    DWORD PTR [eax+0x4],esi
   166b7:	jmp    0x1673f
   166bc:	mov    ecx,DWORD PTR [edi+0x8]
   166bf:	cmp    ecx,eax
   166c1:	je     0x166a3
   166c3:	push   ecx
   166c4:	call   0x15178
   166c9:	mov    ebx,eax
   166cb:	cmp    ebx,edi
   166cd:	mov    esi,DWORD PTR [ebx+0x8]
   166d0:	je     0x166a3
   166d2:	mov    eax,DWORD PTR [ebp-0x8]
   166d5:	mov    DWORD PTR [eax+0x4],ebx
   166d8:	mov    eax,DWORD PTR [edi]
   166da:	mov    DWORD PTR [ebx],eax
   166dc:	cmp    ebx,DWORD PTR [edi+0x8]
   166df:	jne    0x166e6
   166e1:	mov    DWORD PTR [esi+0x4],ebx
   166e4:	jmp    0x166fd
   166e6:	mov    eax,DWORD PTR [ebx+0x4]
   166e9:	mov    DWORD PTR [esi+0x4],eax
   166ec:	mov    eax,DWORD PTR [ebx+0x4]
   166ef:	mov    DWORD PTR [eax],esi
   166f1:	mov    eax,DWORD PTR [edi+0x8]
   166f4:	mov    DWORD PTR [ebx+0x8],eax
   166f7:	mov    eax,DWORD PTR [edi+0x8]
   166fa:	mov    DWORD PTR [eax+0x4],ebx
   166fd:	mov    eax,DWORD PTR [ebp-0x4]
   16700:	mov    eax,DWORD PTR [eax+0x4]
   16703:	cmp    DWORD PTR [eax+0x4],edi
   16706:	jne    0x1670d
   16708:	mov    DWORD PTR [eax+0x4],ebx
   1670b:	jmp    0x1671b
   1670d:	mov    eax,DWORD PTR [edi+0x4]
   16710:	cmp    DWORD PTR [eax],edi
   16712:	jne    0x16718
   16714:	mov    DWORD PTR [eax],ebx
   16716:	jmp    0x1671b
   16718:	mov    DWORD PTR [eax+0x8],ebx
   1671b:	mov    eax,DWORD PTR [edi+0x4]
   1671e:	mov    DWORD PTR [ebx+0x4],eax
   16721:	mov    eax,DWORD PTR [ebx+0x48]
   16724:	mov    ecx,DWORD PTR [edi+0x48]
   16727:	mov    DWORD PTR [ebx+0x48],ecx
   1672a:	mov    DWORD PTR [edi+0x48],eax
   1672d:	mov    ebx,edi
   1672f:	jmp    0x16792
   16731:	mov    eax,DWORD PTR [edi+0x4]
   16734:	cmp    DWORD PTR [eax],edi
   16736:	jne    0x1673c
   16738:	mov    DWORD PTR [eax],esi
   1673a:	jmp    0x1673f
   1673c:	mov    DWORD PTR [eax+0x8],esi
   1673f:	mov    eax,DWORD PTR [ecx+0x4]
   16742:	cmp    DWORD PTR [eax],edi
   16744:	mov    DWORD PTR [ebp-0x8],eax
   16747:	jne    0x16769
   16749:	mov    edx,DWORD PTR [edi+0x8]
   1674c:	cmp    edx,DWORD PTR ds:0x834f0
   16752:	jne    0x1675b
   16754:	mov    edx,DWORD PTR [edi+0x4]
   16757:	mov    DWORD PTR [eax],edx
   16759:	jmp    0x16769
   1675b:	push   esi
   1675c:	call   0x15178
   16761:	mov    ecx,DWORD PTR [ebp-0x8]
   16764:	mov    DWORD PTR [ecx],eax
   16766:	mov    ecx,DWORD PTR [ebp-0x4]
   16769:	mov    eax,DWORD PTR [ecx+0x4]
   1676c:	cmp    DWORD PTR [eax+0x8],edi
   1676f:	mov    DWORD PTR [ebp-0x8],eax
   16772:	jne    0x16792
   16774:	mov    ecx,DWORD PTR [edi]
   16776:	cmp    ecx,DWORD PTR ds:0x834f0
   1677c:	jne    0x16786
   1677e:	mov    ecx,DWORD PTR [edi+0x4]
   16781:	mov    DWORD PTR [eax+0x8],ecx
   16784:	jmp    0x16792
   16786:	push   esi
   16787:	call   0x15160
   1678c:	mov    ecx,DWORD PTR [ebp-0x8]
   1678f:	mov    DWORD PTR [ecx+0x8],eax
   16792:	xor    edi,edi
   16794:	inc    edi
   16795:	cmp    DWORD PTR [ebx+0x48],edi
   16798:	jne    0x168b3
   1679e:	jmp    0x16861
   167a3:	cmp    DWORD PTR [esi+0x48],edi
   167a6:	jne    0x168b0
   167ac:	mov    ecx,DWORD PTR [esi+0x4]
   167af:	mov    eax,DWORD PTR [ecx]
   167b1:	cmp    esi,eax
   167b3:	jne    0x1682c
   167b5:	mov    eax,DWORD PTR [ecx+0x8]
   167b8:	cmp    DWORD PTR [eax+0x48],0x0
   167bc:	jne    0x167d8
   167be:	mov    DWORD PTR [eax+0x48],edi
   167c1:	mov    eax,DWORD PTR [esi+0x4]
   167c4:	and    DWORD PTR [eax+0x48],0x0
   167c8:	push   DWORD PTR [esi+0x4]
   167cb:	mov    ecx,edx
   167cd:	call   0x157ea
   167d2:	mov    eax,DWORD PTR [esi+0x4]
   167d5:	mov    eax,DWORD PTR [eax+0x8]
   167d8:	mov    ecx,DWORD PTR [eax]
   167da:	cmp    DWORD PTR [ecx+0x48],edi
   167dd:	jne    0x167e7
   167df:	mov    ecx,DWORD PTR [eax+0x8]
   167e2:	cmp    DWORD PTR [ecx+0x48],edi
   167e5:	je     0x1685a
   167e7:	mov    ecx,DWORD PTR [eax+0x8]
   167ea:	cmp    DWORD PTR [ecx+0x48],edi
   167ed:	jne    0x16807
   167ef:	mov    ecx,DWORD PTR [eax]
   167f1:	mov    DWORD PTR [ecx+0x48],edi
   167f4:	mov    ecx,DWORD PTR [ebp-0x4]
   167f7:	and    DWORD PTR [eax+0x48],0x0
   167fb:	push   eax
   167fc:	call   0x1582e
   16801:	mov    eax,DWORD PTR [esi+0x4]
   16804:	mov    eax,DWORD PTR [eax+0x8]
   16807:	mov    ecx,DWORD PTR [esi+0x4]
   1680a:	mov    ecx,DWORD PTR [ecx+0x48]
   1680d:	mov    DWORD PTR [eax+0x48],ecx
   16810:	mov    ecx,DWORD PTR [esi+0x4]
   16813:	mov    DWORD PTR [ecx+0x48],edi
   16816:	mov    eax,DWORD PTR [eax+0x8]
   16819:	mov    ecx,DWORD PTR [ebp-0x4]
   1681c:	mov    DWORD PTR [eax+0x48],edi
   1681f:	push   DWORD PTR [esi+0x4]
   16822:	call   0x157ea
   16827:	jmp    0x168b0
   1682c:	cmp    DWORD PTR [eax+0x48],0x0
   16830:	jne    0x1684b
   16832:	mov    DWORD PTR [eax+0x48],edi
   16835:	mov    eax,DWORD PTR [esi+0x4]
   16838:	and    DWORD PTR [eax+0x48],0x0
   1683c:	push   DWORD PTR [esi+0x4]
   1683f:	mov    ecx,edx
   16841:	call   0x1582e
   16846:	mov    eax,DWORD PTR [esi+0x4]
   16849:	mov    eax,DWORD PTR [eax]
   1684b:	mov    ecx,DWORD PTR [eax+0x8]
   1684e:	cmp    DWORD PTR [ecx+0x48],edi
   16851:	jne    0x16872
   16853:	mov    ecx,DWORD PTR [eax]
   16855:	cmp    DWORD PTR [ecx+0x48],edi
   16858:	jne    0x16872
   1685a:	and    DWORD PTR [eax+0x48],0x0
   1685e:	mov    esi,DWORD PTR [esi+0x4]
   16861:	mov    edx,DWORD PTR [ebp-0x4]
   16864:	mov    eax,DWORD PTR [edx+0x4]
   16867:	cmp    esi,DWORD PTR [eax+0x4]
   1686a:	jne    0x167a3
   16870:	jmp    0x168b0
   16872:	mov    ecx,DWORD PTR [eax]
   16874:	cmp    DWORD PTR [ecx+0x48],edi
   16877:	jne    0x16891
   16879:	mov    ecx,DWORD PTR [eax+0x8]
   1687c:	mov    DWORD PTR [ecx+0x48],edi
   1687f:	mov    ecx,DWORD PTR [ebp-0x4]
   16882:	and    DWORD PTR [eax+0x48],0x0
   16886:	push   eax
   16887:	call   0x157ea
   1688c:	mov    eax,DWORD PTR [esi+0x4]
   1688f:	mov    eax,DWORD PTR [eax]
   16891:	mov    ecx,DWORD PTR [esi+0x4]
   16894:	mov    ecx,DWORD PTR [ecx+0x48]
   16897:	mov    DWORD PTR [eax+0x48],ecx
   1689a:	mov    ecx,DWORD PTR [esi+0x4]
   1689d:	mov    DWORD PTR [ecx+0x48],edi
   168a0:	mov    eax,DWORD PTR [eax]
   168a2:	mov    ecx,DWORD PTR [ebp-0x4]
   168a5:	mov    DWORD PTR [eax+0x48],edi
   168a8:	push   DWORD PTR [esi+0x4]
   168ab:	call   0x1582e
   168b0:	mov    DWORD PTR [esi+0x48],edi
   168b3:	lea    ecx,[ebx+0x10]
   168b6:	call   0x1502a
   168bb:	push   ebx
   168bc:	call   0x1284c
   168c1:	mov    eax,DWORD PTR [ebp-0x4]
   168c4:	dec    DWORD PTR [eax+0xc]
   168c7:	mov    eax,DWORD PTR [ebp+0x8]
   168ca:	pop    ecx
   168cb:	mov    ecx,DWORD PTR [ebp+0xc]
   168ce:	pop    edi
   168cf:	pop    esi
   168d0:	mov    DWORD PTR [eax],ecx
   168d2:	pop    ebx
   168d3:	leave  
   168d4:	ret    0x8
   168d7:	int3   
   168d8:	push   ebx
   168d9:	push   esi
   168da:	push   edi
   168db:	push   0x50
   168dd:	mov    esi,ecx
   168df:	call   0x12822
   168e4:	xor    ebx,ebx
   168e6:	mov    DWORD PTR [eax+0x4],ebx
   168e9:	mov    DWORD PTR [eax+0x48],0x1
   168f0:	cmp    DWORD PTR ds:0x834f0,ebx
   168f6:	pop    ecx
   168f7:	mov    ecx,eax
   168f9:	jne    0x1690c
   168fb:	mov    ds:0x834f0,eax
   16900:	mov    DWORD PTR [eax],ebx
   16902:	mov    eax,ds:0x834f0
   16907:	xor    ecx,ecx
   16909:	mov    DWORD PTR [eax+0x8],ebx
   1690c:	inc    DWORD PTR ds:0x8350c
   16912:	cmp    ecx,ebx
   16914:	je     0x1691d
   16916:	push   ecx
   16917:	call   0x1284c
   1691c:	pop    ecx
   1691d:	mov    edi,DWORD PTR ds:0x834f0
   16923:	push   0x50
   16925:	call   0x12822
   1692a:	mov    DWORD PTR [eax+0x4],edi
   1692d:	mov    DWORD PTR [eax+0x48],ebx
   16930:	mov    DWORD PTR [esi+0xc],ebx
   16933:	mov    DWORD PTR [esi+0x4],eax
   16936:	pop    ecx
   16937:	mov    DWORD PTR [eax],eax
   16939:	mov    esi,DWORD PTR [esi+0x4]
   1693c:	pop    edi
   1693d:	mov    DWORD PTR [esi+0x8],esi
   16940:	pop    esi
   16941:	pop    ebx
   16942:	ret    
   16943:	int3   
   16944:	push   ebp
   16945:	mov    ebp,esp
   16947:	push   ebx
   16948:	push   esi
   16949:	push   edi
   1694a:	push   0x50
   1694c:	mov    ebx,ecx
   1694e:	call   0x12822
   16953:	mov    esi,DWORD PTR [ebp+0x10]
   16956:	mov    edi,eax
   16958:	and    DWORD PTR [edi+0x48],0x0
   1695c:	mov    DWORD PTR [edi+0x4],esi
   1695f:	mov    eax,ds:0x834f0
   16964:	pop    ecx
   16965:	mov    DWORD PTR [edi],eax
   16967:	mov    eax,ds:0x834f0
   1696c:	lea    ecx,[edi+0x10]
   1696f:	test   ecx,ecx
   16971:	mov    DWORD PTR [edi+0x8],eax
   16974:	je     0x1697e
   16976:	push   DWORD PTR [ebp+0x14]
   16979:	call   0x159be
   1697e:	inc    DWORD PTR [ebx+0xc]
   16981:	cmp    esi,DWORD PTR [ebx+0x4]
   16984:	je     0x169b1
   16986:	mov    eax,DWORD PTR [ebp+0xc]
   16989:	cmp    eax,DWORD PTR ds:0x834f0
   1698f:	jne    0x169b1
   16991:	lea    eax,[esi+0x10]
   16994:	push   eax
   16995:	push   DWORD PTR [ebp+0x14]
   16998:	call   0x19a5a
   1699d:	test   al,al
   1699f:	jne    0x169b1
   169a1:	mov    DWORD PTR [esi+0x8],edi
   169a4:	mov    eax,DWORD PTR [ebx+0x4]
   169a7:	cmp    esi,DWORD PTR [eax+0x8]
   169aa:	jne    0x169c8
   169ac:	mov    DWORD PTR [eax+0x8],edi
   169af:	jmp    0x169c8
   169b1:	mov    DWORD PTR [esi],edi
   169b3:	mov    eax,DWORD PTR [ebx+0x4]
   169b6:	cmp    esi,eax
   169b8:	jne    0x169c2
   169ba:	mov    DWORD PTR [eax+0x4],edi
   169bd:	mov    eax,DWORD PTR [ebx+0x4]
   169c0:	jmp    0x169ac
   169c2:	cmp    esi,DWORD PTR [eax]
   169c4:	jne    0x169c8
   169c6:	mov    DWORD PTR [eax],edi
   169c8:	mov    eax,DWORD PTR [ebx+0x4]
   169cb:	cmp    edi,DWORD PTR [eax+0x4]
   169ce:	mov    esi,edi
   169d0:	je     0x16a86
   169d6:	mov    eax,DWORD PTR [esi+0x4]
   169d9:	cmp    DWORD PTR [eax+0x48],0x0
   169dd:	jne    0x16a86
   169e3:	mov    edx,DWORD PTR [eax+0x4]
   169e6:	mov    ecx,DWORD PTR [edx]
   169e8:	cmp    eax,ecx
   169ea:	jne    0x16a45
   169ec:	mov    ecx,DWORD PTR [edx+0x8]
   169ef:	cmp    DWORD PTR [ecx+0x48],0x0
   169f3:	jne    0x16a13
   169f5:	mov    edx,DWORD PTR [esi+0x4]
   169f8:	xor    eax,eax
   169fa:	inc    eax
   169fb:	mov    DWORD PTR [edx+0x48],eax
   169fe:	mov    DWORD PTR [ecx+0x48],eax
   16a01:	mov    eax,DWORD PTR [esi+0x4]
   16a04:	mov    eax,DWORD PTR [eax+0x4]
   16a07:	and    DWORD PTR [eax+0x48],0x0
   16a0b:	mov    eax,DWORD PTR [esi+0x4]
   16a0e:	mov    esi,DWORD PTR [eax+0x4]
   16a11:	jmp    0x16a7a
   16a13:	cmp    esi,DWORD PTR [eax+0x8]
   16a16:	jne    0x16a22
   16a18:	mov    esi,eax
   16a1a:	push   esi
   16a1b:	mov    ecx,ebx
   16a1d:	call   0x157ea
   16a22:	mov    eax,DWORD PTR [esi+0x4]
   16a25:	mov    DWORD PTR [eax+0x48],0x1
   16a2c:	mov    eax,DWORD PTR [esi+0x4]
   16a2f:	mov    eax,DWORD PTR [eax+0x4]
   16a32:	and    DWORD PTR [eax+0x48],0x0
   16a36:	mov    eax,DWORD PTR [esi+0x4]
   16a39:	push   DWORD PTR [eax+0x4]
   16a3c:	mov    ecx,ebx
   16a3e:	call   0x1582e
   16a43:	jmp    0x16a7a
   16a45:	cmp    DWORD PTR [ecx+0x48],0x0
   16a49:	je     0x169f5
   16a4b:	cmp    esi,DWORD PTR [eax]
   16a4d:	jne    0x16a59
   16a4f:	mov    esi,eax
   16a51:	push   esi
   16a52:	mov    ecx,ebx
   16a54:	call   0x1582e
   16a59:	mov    eax,DWORD PTR [esi+0x4]
   16a5c:	mov    DWORD PTR [eax+0x48],0x1
   16a63:	mov    eax,DWORD PTR [esi+0x4]
   16a66:	mov    eax,DWORD PTR [eax+0x4]
   16a69:	and    DWORD PTR [eax+0x48],0x0
   16a6d:	mov    eax,DWORD PTR [esi+0x4]
   16a70:	push   DWORD PTR [eax+0x4]
   16a73:	mov    ecx,ebx
   16a75:	call   0x157ea
   16a7a:	mov    eax,DWORD PTR [ebx+0x4]
   16a7d:	cmp    esi,DWORD PTR [eax+0x4]
   16a80:	jne    0x169d6
   16a86:	mov    eax,DWORD PTR [ebx+0x4]
   16a89:	mov    eax,DWORD PTR [eax+0x4]
   16a8c:	mov    DWORD PTR [eax+0x48],0x1
   16a93:	mov    eax,DWORD PTR [ebp+0x8]
   16a96:	mov    DWORD PTR [eax],edi
   16a98:	pop    edi
   16a99:	pop    esi
   16a9a:	pop    ebx
   16a9b:	pop    ebp
   16a9c:	ret    0x10
   16a9f:	int3   
   16aa0:	push   ebx
   16aa1:	push   esi
   16aa2:	push   edi
   16aa3:	mov    edi,DWORD PTR [esp+0x10]
   16aa7:	cmp    edi,DWORD PTR ds:0x834f4
   16aad:	mov    ebx,ecx
   16aaf:	mov    esi,edi
   16ab1:	je     0x16ad8
   16ab3:	push   DWORD PTR [esi+0x8]
   16ab6:	mov    ecx,ebx
   16ab8:	call   0x16aa0
   16abd:	mov    esi,DWORD PTR [esi]
   16abf:	lea    ecx,[edi+0x10]
   16ac2:	call   0x1502a
   16ac7:	push   edi
   16ac8:	call   0x1284c
   16acd:	cmp    esi,DWORD PTR ds:0x834f4
   16ad3:	pop    ecx
   16ad4:	mov    edi,esi
   16ad6:	jne    0x16ab3
   16ad8:	pop    edi
   16ad9:	pop    esi
   16ada:	pop    ebx
   16adb:	ret    0x4
   16ade:	push   ebp
   16adf:	mov    ebp,esp
   16ae1:	push   ebx
   16ae2:	push   esi
   16ae3:	push   edi
   16ae4:	push   0x48
   16ae6:	mov    ebx,ecx
   16ae8:	call   0x12822
   16aed:	mov    esi,DWORD PTR [ebp+0x10]
   16af0:	mov    edi,eax
   16af2:	and    DWORD PTR [edi+0x40],0x0
   16af6:	mov    DWORD PTR [edi+0x4],esi
   16af9:	mov    eax,ds:0x834f4
   16afe:	pop    ecx
   16aff:	mov    DWORD PTR [edi],eax
   16b01:	mov    eax,ds:0x834f4
   16b06:	lea    ecx,[edi+0x10]
   16b09:	test   ecx,ecx
   16b0b:	mov    DWORD PTR [edi+0x8],eax
   16b0e:	je     0x16b18
   16b10:	push   DWORD PTR [ebp+0x14]
   16b13:	call   0x15376
   16b18:	inc    DWORD PTR [ebx+0xc]
   16b1b:	cmp    esi,DWORD PTR [ebx+0x4]
   16b1e:	je     0x16b4b
   16b20:	mov    eax,DWORD PTR [ebp+0xc]
   16b23:	cmp    eax,DWORD PTR ds:0x834f4
   16b29:	jne    0x16b4b
   16b2b:	lea    eax,[esi+0x10]
   16b2e:	push   eax
   16b2f:	push   DWORD PTR [ebp+0x14]
   16b32:	call   0x19a5a
   16b37:	test   al,al
   16b39:	jne    0x16b4b
   16b3b:	mov    DWORD PTR [esi+0x8],edi
   16b3e:	mov    eax,DWORD PTR [ebx+0x4]
   16b41:	cmp    esi,DWORD PTR [eax+0x8]
   16b44:	jne    0x16b62
   16b46:	mov    DWORD PTR [eax+0x8],edi
   16b49:	jmp    0x16b62
   16b4b:	mov    DWORD PTR [esi],edi
   16b4d:	mov    eax,DWORD PTR [ebx+0x4]
   16b50:	cmp    esi,eax
   16b52:	jne    0x16b5c
   16b54:	mov    DWORD PTR [eax+0x4],edi
   16b57:	mov    eax,DWORD PTR [ebx+0x4]
   16b5a:	jmp    0x16b46
   16b5c:	cmp    esi,DWORD PTR [eax]
   16b5e:	jne    0x16b62
   16b60:	mov    DWORD PTR [eax],edi
   16b62:	mov    eax,DWORD PTR [ebx+0x4]
   16b65:	cmp    edi,DWORD PTR [eax+0x4]
   16b68:	mov    esi,edi
   16b6a:	je     0x16c20
   16b70:	mov    eax,DWORD PTR [esi+0x4]
   16b73:	cmp    DWORD PTR [eax+0x40],0x0
   16b77:	jne    0x16c20
   16b7d:	mov    edx,DWORD PTR [eax+0x4]
   16b80:	mov    ecx,DWORD PTR [edx]
   16b82:	cmp    eax,ecx
   16b84:	jne    0x16bdf
   16b86:	mov    ecx,DWORD PTR [edx+0x8]
   16b89:	cmp    DWORD PTR [ecx+0x40],0x0
   16b8d:	jne    0x16bad
   16b8f:	mov    edx,DWORD PTR [esi+0x4]
   16b92:	xor    eax,eax
   16b94:	inc    eax
   16b95:	mov    DWORD PTR [edx+0x40],eax
   16b98:	mov    DWORD PTR [ecx+0x40],eax
   16b9b:	mov    eax,DWORD PTR [esi+0x4]
   16b9e:	mov    eax,DWORD PTR [eax+0x4]
   16ba1:	and    DWORD PTR [eax+0x40],0x0
   16ba5:	mov    eax,DWORD PTR [esi+0x4]
   16ba8:	mov    esi,DWORD PTR [eax+0x4]
   16bab:	jmp    0x16c14
   16bad:	cmp    esi,DWORD PTR [eax+0x8]
   16bb0:	jne    0x16bbc
   16bb2:	mov    esi,eax
   16bb4:	push   esi
   16bb5:	mov    ecx,ebx
   16bb7:	call   0x15190
   16bbc:	mov    eax,DWORD PTR [esi+0x4]
   16bbf:	mov    DWORD PTR [eax+0x40],0x1
   16bc6:	mov    eax,DWORD PTR [esi+0x4]
   16bc9:	mov    eax,DWORD PTR [eax+0x4]
   16bcc:	and    DWORD PTR [eax+0x40],0x0
   16bd0:	mov    eax,DWORD PTR [esi+0x4]
   16bd3:	push   DWORD PTR [eax+0x4]
   16bd6:	mov    ecx,ebx
   16bd8:	call   0x151ec
   16bdd:	jmp    0x16c14
   16bdf:	cmp    DWORD PTR [ecx+0x40],0x0
   16be3:	je     0x16b8f
   16be5:	cmp    esi,DWORD PTR [eax]
   16be7:	jne    0x16bf3
   16be9:	mov    esi,eax
   16beb:	push   esi
   16bec:	mov    ecx,ebx
   16bee:	call   0x151ec
   16bf3:	mov    eax,DWORD PTR [esi+0x4]
   16bf6:	mov    DWORD PTR [eax+0x40],0x1
   16bfd:	mov    eax,DWORD PTR [esi+0x4]
   16c00:	mov    eax,DWORD PTR [eax+0x4]
   16c03:	and    DWORD PTR [eax+0x40],0x0
   16c07:	mov    eax,DWORD PTR [esi+0x4]
   16c0a:	push   DWORD PTR [eax+0x4]
   16c0d:	mov    ecx,ebx
   16c0f:	call   0x15190
   16c14:	mov    eax,DWORD PTR [ebx+0x4]
   16c17:	cmp    esi,DWORD PTR [eax+0x4]
   16c1a:	jne    0x16b70
   16c20:	mov    eax,DWORD PTR [ebx+0x4]
   16c23:	mov    eax,DWORD PTR [eax+0x4]
   16c26:	mov    DWORD PTR [eax+0x40],0x1
   16c2d:	mov    eax,DWORD PTR [ebp+0x8]
   16c30:	mov    DWORD PTR [eax],edi
   16c32:	pop    edi
   16c33:	pop    esi
   16c34:	pop    ebx
   16c35:	pop    ebp
   16c36:	ret    0x10
   16c39:	int3   
   16c3a:	push   ebp
   16c3b:	mov    ebp,esp
   16c3d:	push   ecx
   16c3e:	mov    eax,ds:0x834ec
   16c43:	push   ebx
   16c44:	mov    ebx,DWORD PTR [ebp+0xc]
   16c47:	push   esi
   16c48:	mov    esi,DWORD PTR [ebp+0x8]
   16c4b:	cmp    esi,eax
   16c4d:	mov    DWORD PTR [ebp-0x4],ecx
   16c50:	mov    DWORD PTR [ebp+0x8],esi
   16c53:	je     0x16c97
   16c55:	push   edi
   16c56:	push   DWORD PTR [esi+0x10]
   16c59:	mov    ecx,DWORD PTR [ebp-0x4]
   16c5c:	push   ebx
   16c5d:	call   0x15b54
   16c62:	cmp    DWORD PTR [ebp+0x8],esi
   16c65:	mov    edi,eax
   16c67:	jne    0x16c6c
   16c69:	mov    DWORD PTR [ebp+0x8],edi
   16c6c:	mov    ecx,DWORD PTR [ebp-0x4]
   16c6f:	push   edi
   16c70:	push   DWORD PTR [esi+0x8]
   16c73:	call   0x16c3a
   16c78:	mov    DWORD PTR [edi+0x8],eax
   16c7b:	lea    eax,[edi+0xc]
   16c7e:	test   eax,eax
   16c80:	je     0x16c87
   16c82:	mov    ecx,DWORD PTR [esi+0xc]
   16c85:	mov    DWORD PTR [eax],ecx
   16c87:	mov    DWORD PTR [ebx],edi
   16c89:	mov    esi,DWORD PTR [esi]
   16c8b:	mov    eax,ds:0x834ec
   16c90:	cmp    esi,eax
   16c92:	mov    ebx,edi
   16c94:	jne    0x16c56
   16c96:	pop    edi
   16c97:	mov    DWORD PTR [ebx],eax
   16c99:	mov    eax,DWORD PTR [ebp+0x8]
   16c9c:	pop    esi
   16c9d:	pop    ebx
   16c9e:	leave  
   16c9f:	ret    0x8
   16ca2:	push   ebp
   16ca3:	mov    ebp,esp
   16ca5:	push   edi
   16ca6:	mov    edi,DWORD PTR [ebp+0xc]
   16ca9:	cmp    DWORD PTR [ebp+0x8],edi
   16cac:	je     0x16cc2
   16cae:	push   esi
   16caf:	mov    esi,DWORD PTR [ebp+0x10]
   16cb2:	inc    DWORD PTR [esi]
   16cb4:	lea    ecx,[ebp+0x8]
   16cb7:	call   0x15ab8
   16cbc:	cmp    DWORD PTR [ebp+0x8],edi
   16cbf:	jne    0x16cb2
   16cc1:	pop    esi
   16cc2:	pop    edi
   16cc3:	pop    ebp
   16cc4:	ret    
   16cc5:	int3   
   16cc6:	push   ebp
   16cc7:	mov    ebp,esp
   16cc9:	push   ecx
   16cca:	push   esi
   16ccb:	mov    esi,ecx
   16ccd:	cmp    DWORD PTR [esi+0xc],0x0
   16cd1:	mov    ecx,DWORD PTR [ebp+0xc]
   16cd4:	je     0x16d0e
   16cd6:	mov    eax,DWORD PTR [esi+0x4]
   16cd9:	cmp    ecx,DWORD PTR [eax]
   16cdb:	jne    0x16d0e
   16cdd:	cmp    DWORD PTR [ebp+0x10],eax
   16ce0:	jne    0x16d0e
   16ce2:	push   DWORD PTR [eax+0x4]
   16ce5:	mov    ecx,esi
   16ce7:	call   0x15ae8
   16cec:	mov    ecx,DWORD PTR ds:0x834e8
   16cf2:	mov    eax,DWORD PTR [esi+0x4]
   16cf5:	mov    DWORD PTR [eax+0x4],ecx
   16cf8:	mov    eax,DWORD PTR [esi+0x4]
   16cfb:	and    DWORD PTR [esi+0xc],0x0
   16cff:	mov    DWORD PTR [eax],eax
   16d01:	mov    eax,DWORD PTR [esi+0x4]
   16d04:	mov    DWORD PTR [eax+0x8],eax
   16d07:	mov    eax,DWORD PTR [esi+0x4]
   16d0a:	mov    ecx,DWORD PTR [eax]
   16d0c:	jmp    0x16d33
   16d0e:	cmp    ecx,DWORD PTR [ebp+0x10]
   16d11:	je     0x16d33
   16d13:	push   edi
   16d14:	mov    edi,ecx
   16d16:	lea    ecx,[ebp+0xc]
   16d19:	call   0x15130
   16d1e:	push   edi
   16d1f:	lea    eax,[ebp-0x4]
   16d22:	push   eax
   16d23:	mov    ecx,esi
   16d25:	call   0x15c8c
   16d2a:	mov    ecx,DWORD PTR [ebp+0xc]
   16d2d:	cmp    ecx,DWORD PTR [ebp+0x10]
   16d30:	jne    0x16d14
   16d32:	pop    edi
   16d33:	mov    eax,DWORD PTR [ebp+0x8]
   16d36:	mov    DWORD PTR [eax],ecx
   16d38:	pop    esi
   16d39:	leave  
   16d3a:	ret    0xc
   16d3d:	int3   
   16d3e:	push   ebp
   16d3f:	mov    ebp,esp
   16d41:	push   ecx
   16d42:	push   ecx
   16d43:	push   esi
   16d44:	push   DWORD PTR [ebp+0x8]
   16d47:	lea    eax,[ebp-0x8]
   16d4a:	push   eax
   16d4b:	mov    esi,ecx
   16d4d:	call   0x15ee2
   16d52:	and    DWORD PTR [ebp+0x8],0x0
   16d56:	lea    eax,[ebp+0x8]
   16d59:	push   eax
   16d5a:	push   DWORD PTR [ebp-0x4]
   16d5d:	push   DWORD PTR [ebp-0x8]
   16d60:	call   0x15b6e
   16d65:	add    esp,0xc
   16d68:	push   DWORD PTR [ebp-0x4]
   16d6b:	lea    eax,[ebp-0x4]
   16d6e:	push   DWORD PTR [ebp-0x8]
   16d71:	mov    ecx,esi
   16d73:	push   eax
   16d74:	call   0x16cc6
   16d79:	mov    eax,DWORD PTR [ebp+0x8]
   16d7c:	pop    esi
   16d7d:	leave  
   16d7e:	ret    0x4
   16d81:	int3   
   16d82:	push   ebp
   16d83:	mov    ebp,esp
   16d85:	push   ecx
   16d86:	push   ebx
   16d87:	push   esi
   16d88:	push   edi
   16d89:	mov    edi,ecx
   16d8b:	mov    eax,DWORD PTR [edi+0x4]
   16d8e:	mov    esi,DWORD PTR [eax+0x4]
   16d91:	mov    ebx,eax
   16d93:	mov    eax,ds:0x834ec
   16d98:	cmp    esi,eax
   16d9a:	mov    dl,0x1
   16d9c:	je     0x16dba
   16d9e:	mov    ecx,DWORD PTR [ebp+0xc]
   16da1:	mov    ecx,DWORD PTR [ecx]
   16da3:	cmp    ecx,DWORD PTR [esi+0xc]
   16da6:	mov    ebx,esi
   16da8:	setb   dl
   16dab:	test   dl,dl
   16dad:	je     0x16db3
   16daf:	mov    esi,DWORD PTR [esi]
   16db1:	jmp    0x16db6
   16db3:	mov    esi,DWORD PTR [esi+0x8]
   16db6:	cmp    esi,eax
   16db8:	jne    0x16da3
   16dba:	cmp    BYTE PTR [edi+0x8],0x0
   16dbe:	je     0x16dc5
   16dc0:	push   DWORD PTR [ebp+0xc]
   16dc3:	jmp    0x16deb
   16dc5:	test   dl,dl
   16dc7:	mov    ecx,ebx
   16dc9:	mov    DWORD PTR [ebp-0x4],ecx
   16dcc:	je     0x16de0
   16dce:	mov    eax,DWORD PTR [edi+0x4]
   16dd1:	cmp    ebx,DWORD PTR [eax]
   16dd3:	je     0x16dc0
   16dd5:	lea    ecx,[ebp-0x4]
   16dd8:	call   0x15692
   16ddd:	mov    ecx,DWORD PTR [ebp-0x4]
   16de0:	mov    edx,DWORD PTR [ecx+0xc]
   16de3:	mov    eax,DWORD PTR [ebp+0xc]
   16de6:	cmp    edx,DWORD PTR [eax]
   16de8:	jae    0x16e03
   16dea:	push   eax
   16deb:	push   ebx
   16dec:	push   esi
   16ded:	lea    eax,[ebp+0xc]
   16df0:	push   eax
   16df1:	mov    ecx,edi
   16df3:	call   0x163d2
   16df8:	mov    ecx,DWORD PTR [eax]
   16dfa:	mov    eax,DWORD PTR [ebp+0x8]
   16dfd:	mov    BYTE PTR [eax+0x4],0x1
   16e01:	jmp    0x16e0a
   16e03:	mov    eax,DWORD PTR [ebp+0x8]
   16e06:	mov    BYTE PTR [eax+0x4],0x0
   16e0a:	pop    edi
   16e0b:	pop    esi
   16e0c:	mov    DWORD PTR [eax],ecx
   16e0e:	pop    ebx
   16e0f:	leave  
   16e10:	ret    0x8
   16e13:	int3   
   16e14:	push   ebp
   16e15:	mov    ebp,esp
   16e17:	push   ecx
   16e18:	push   esi
   16e19:	mov    esi,ecx
   16e1b:	cmp    DWORD PTR [esi+0xc],0x0
   16e1f:	mov    ecx,DWORD PTR [ebp+0xc]
   16e22:	je     0x16e5c
   16e24:	mov    eax,DWORD PTR [esi+0x4]
   16e27:	cmp    ecx,DWORD PTR [eax]
   16e29:	jne    0x16e5c
   16e2b:	cmp    DWORD PTR [ebp+0x10],eax
   16e2e:	jne    0x16e5c
   16e30:	push   DWORD PTR [eax+0x4]
   16e33:	mov    ecx,esi
   16e35:	call   0x15b1e
   16e3a:	mov    ecx,DWORD PTR ds:0x834ec
   16e40:	mov    eax,DWORD PTR [esi+0x4]
   16e43:	mov    DWORD PTR [eax+0x4],ecx
   16e46:	mov    eax,DWORD PTR [esi+0x4]
   16e49:	and    DWORD PTR [esi+0xc],0x0
   16e4d:	mov    DWORD PTR [eax],eax
   16e4f:	mov    eax,DWORD PTR [esi+0x4]
   16e52:	mov    DWORD PTR [eax+0x8],eax
   16e55:	mov    eax,DWORD PTR [esi+0x4]
   16e58:	mov    ecx,DWORD PTR [eax]
   16e5a:	jmp    0x16e81
   16e5c:	cmp    ecx,DWORD PTR [ebp+0x10]
   16e5f:	je     0x16e81
   16e61:	push   edi
   16e62:	mov    edi,ecx
   16e64:	lea    ecx,[ebp+0xc]
   16e67:	call   0x156cc
   16e6c:	push   edi
   16e6d:	lea    eax,[ebp-0x4]
   16e70:	push   eax
   16e71:	mov    ecx,esi
   16e73:	call   0x160e6
   16e78:	mov    ecx,DWORD PTR [ebp+0xc]
   16e7b:	cmp    ecx,DWORD PTR [ebp+0x10]
   16e7e:	jne    0x16e62
   16e80:	pop    edi
   16e81:	mov    eax,DWORD PTR [ebp+0x8]
   16e84:	mov    DWORD PTR [eax],ecx
   16e86:	pop    esi
   16e87:	leave  
   16e88:	ret    0xc
   16e8b:	int3   
   16e8c:	push   ebp
   16e8d:	mov    ebp,esp
   16e8f:	push   ecx
   16e90:	push   ecx
   16e91:	push   esi
   16e92:	push   DWORD PTR [ebp+0x8]
   16e95:	lea    eax,[ebp-0x8]
   16e98:	push   eax
   16e99:	mov    esi,ecx
   16e9b:	call   0x1633c
   16ea0:	and    DWORD PTR [ebp+0x8],0x0
   16ea4:	lea    eax,[ebp+0x8]
   16ea7:	push   eax
   16ea8:	push   DWORD PTR [ebp-0x4]
   16eab:	push   DWORD PTR [ebp-0x8]
   16eae:	call   0x15ba2
   16eb3:	add    esp,0xc
   16eb6:	push   DWORD PTR [ebp-0x4]
   16eb9:	lea    eax,[ebp-0x4]
   16ebc:	push   DWORD PTR [ebp-0x8]
   16ebf:	mov    ecx,esi
   16ec1:	push   eax
   16ec2:	call   0x16e14
   16ec7:	mov    eax,DWORD PTR [ebp+0x8]
   16eca:	pop    esi
   16ecb:	leave  
   16ecc:	ret    0x4
   16ecf:	int3   
   16ed0:	push   ebp
   16ed1:	mov    ebp,esp
   16ed3:	push   ecx
   16ed4:	push   ebx
   16ed5:	push   esi
   16ed6:	push   edi
   16ed7:	mov    edi,ecx
   16ed9:	mov    eax,DWORD PTR [edi+0x4]
   16edc:	mov    esi,DWORD PTR [eax+0x4]
   16edf:	mov    ebx,eax
   16ee1:	mov    eax,ds:0x834e8
   16ee6:	cmp    esi,eax
   16ee8:	mov    dl,0x1
   16eea:	je     0x16f08
   16eec:	mov    ecx,DWORD PTR [ebp+0xc]
   16eef:	mov    ecx,DWORD PTR [ecx]
   16ef1:	cmp    ecx,DWORD PTR [esi+0xc]
   16ef4:	mov    ebx,esi
   16ef6:	setb   dl
   16ef9:	test   dl,dl
   16efb:	je     0x16f01
   16efd:	mov    esi,DWORD PTR [esi]
   16eff:	jmp    0x16f04
   16f01:	mov    esi,DWORD PTR [esi+0x8]
   16f04:	cmp    esi,eax
   16f06:	jne    0x16ef1
   16f08:	cmp    BYTE PTR [edi+0x8],0x0
   16f0c:	je     0x16f13
   16f0e:	push   DWORD PTR [ebp+0xc]
   16f11:	jmp    0x16f39
   16f13:	test   dl,dl
   16f15:	mov    ecx,ebx
   16f17:	mov    DWORD PTR [ebp-0x4],ecx
   16f1a:	je     0x16f2e
   16f1c:	mov    eax,DWORD PTR [edi+0x4]
   16f1f:	cmp    ebx,DWORD PTR [eax]
   16f21:	je     0x16f0e
   16f23:	lea    ecx,[ebp-0x4]
   16f26:	call   0x150f6
   16f2b:	mov    ecx,DWORD PTR [ebp-0x4]
   16f2e:	mov    edx,DWORD PTR [ecx+0xc]
   16f31:	mov    eax,DWORD PTR [ebp+0xc]
   16f34:	cmp    edx,DWORD PTR [eax]
   16f36:	jae    0x16f51
   16f38:	push   eax
   16f39:	push   ebx
   16f3a:	push   esi
   16f3b:	lea    eax,[ebp+0xc]
   16f3e:	push   eax
   16f3f:	mov    ecx,edi
   16f41:	call   0x16528
   16f46:	mov    ecx,DWORD PTR [eax]
   16f48:	mov    eax,DWORD PTR [ebp+0x8]
   16f4b:	mov    BYTE PTR [eax+0x4],0x1
   16f4f:	jmp    0x16f58
   16f51:	mov    eax,DWORD PTR [ebp+0x8]
   16f54:	mov    BYTE PTR [eax+0x4],0x0
   16f58:	pop    edi
   16f59:	pop    esi
   16f5a:	mov    DWORD PTR [eax],ecx
   16f5c:	pop    ebx
   16f5d:	leave  
   16f5e:	ret    0x8
   16f61:	int3   
   16f62:	push   ebp
   16f63:	mov    ebp,esp
   16f65:	push   ecx
   16f66:	push   ebx
   16f67:	push   esi
   16f68:	push   edi
   16f69:	mov    edi,ecx
   16f6b:	mov    eax,DWORD PTR [edi+0x4]
   16f6e:	mov    esi,DWORD PTR [eax+0x4]
   16f71:	mov    ebx,eax
   16f73:	mov    al,0x1
   16f75:	jmp    0x16f90
   16f77:	lea    eax,[esi+0x10]
   16f7a:	push   eax
   16f7b:	push   DWORD PTR [ebp+0xc]
   16f7e:	mov    ebx,esi
   16f80:	call   0x19a5a
   16f85:	test   al,al
   16f87:	je     0x16f8d
   16f89:	mov    esi,DWORD PTR [esi]
   16f8b:	jmp    0x16f90
   16f8d:	mov    esi,DWORD PTR [esi+0x8]
   16f90:	cmp    esi,DWORD PTR ds:0x834f0
   16f96:	jne    0x16f77
   16f98:	cmp    BYTE PTR [edi+0x8],0x0
   16f9c:	jne    0x16fc7
   16f9e:	test   al,al
   16fa0:	mov    DWORD PTR [ebp-0x4],ebx
   16fa3:	je     0x16fb4
   16fa5:	mov    eax,DWORD PTR [edi+0x4]
   16fa8:	cmp    ebx,DWORD PTR [eax]
   16faa:	je     0x16fc7
   16fac:	lea    ecx,[ebp-0x4]
   16faf:	call   0x152d6
   16fb4:	push   DWORD PTR [ebp+0xc]
   16fb7:	mov    eax,DWORD PTR [ebp-0x4]
   16fba:	add    eax,0x10
   16fbd:	push   eax
   16fbe:	call   0x19a5a
   16fc3:	test   al,al
   16fc5:	je     0x16fe2
   16fc7:	push   DWORD PTR [ebp+0xc]
   16fca:	lea    eax,[ebp+0xc]
   16fcd:	push   ebx
   16fce:	push   esi
   16fcf:	push   eax
   16fd0:	mov    ecx,edi
   16fd2:	call   0x16944
   16fd7:	mov    ecx,DWORD PTR [eax]
   16fd9:	mov    eax,DWORD PTR [ebp+0x8]
   16fdc:	mov    BYTE PTR [eax+0x4],0x1
   16fe0:	jmp    0x16fec
   16fe2:	mov    eax,DWORD PTR [ebp+0x8]
   16fe5:	mov    ecx,DWORD PTR [ebp-0x4]
   16fe8:	mov    BYTE PTR [eax+0x4],0x0
   16fec:	pop    edi
   16fed:	pop    esi
   16fee:	mov    DWORD PTR [eax],ecx
   16ff0:	pop    ebx
   16ff1:	leave  
   16ff2:	ret    0x8
   16ff5:	int3   
   16ff6:	push   ebp
   16ff7:	mov    ebp,esp
   16ff9:	push   ecx
   16ffa:	push   ebx
   16ffb:	push   esi
   16ffc:	push   edi
   16ffd:	mov    edi,ecx
   16fff:	mov    eax,DWORD PTR [edi+0x4]
   17002:	mov    esi,DWORD PTR [eax+0x4]
   17005:	mov    ebx,eax
   17007:	mov    al,0x1
   17009:	jmp    0x17024
   1700b:	lea    eax,[esi+0x10]
   1700e:	push   eax
   1700f:	push   DWORD PTR [ebp+0xc]
   17012:	mov    ebx,esi
   17014:	call   0x19a5a
   17019:	test   al,al
   1701b:	je     0x17021
   1701d:	mov    esi,DWORD PTR [esi]
   1701f:	jmp    0x17024
   17021:	mov    esi,DWORD PTR [esi+0x8]
   17024:	cmp    esi,DWORD PTR ds:0x834f4
   1702a:	jne    0x1700b
   1702c:	cmp    BYTE PTR [edi+0x8],0x0
   17030:	jne    0x1705b
   17032:	test   al,al
   17034:	mov    DWORD PTR [ebp-0x4],ebx
   17037:	je     0x17048
   17039:	mov    eax,DWORD PTR [edi+0x4]
   1703c:	cmp    ebx,DWORD PTR [eax]
   1703e:	je     0x1705b
   17040:	lea    ecx,[ebp-0x4]
   17043:	call   0x15232
   17048:	push   DWORD PTR [ebp+0xc]
   1704b:	mov    eax,DWORD PTR [ebp-0x4]
   1704e:	add    eax,0x10
   17051:	push   eax
   17052:	call   0x19a5a
   17057:	test   al,al
   17059:	je     0x17076
   1705b:	push   DWORD PTR [ebp+0xc]
   1705e:	lea    eax,[ebp+0xc]
   17061:	push   ebx
   17062:	push   esi
   17063:	push   eax
   17064:	mov    ecx,edi
   17066:	call   0x16ade
   1706b:	mov    ecx,DWORD PTR [eax]
   1706d:	mov    eax,DWORD PTR [ebp+0x8]
   17070:	mov    BYTE PTR [eax+0x4],0x1
   17074:	jmp    0x17080
   17076:	mov    eax,DWORD PTR [ebp+0x8]
   17079:	mov    ecx,DWORD PTR [ebp-0x4]
   1707c:	mov    BYTE PTR [eax+0x4],0x0
   17080:	pop    edi
   17081:	pop    esi
   17082:	mov    DWORD PTR [eax],ecx
   17084:	pop    ebx
   17085:	leave  
   17086:	ret    0x8
   17089:	int3   
   1708a:	push   ebx
   1708b:	mov    ebx,DWORD PTR [esp+0x8]
   1708f:	mov    eax,DWORD PTR [ebx+0x4]
   17092:	push   esi
   17093:	push   edi
   17094:	mov    esi,ecx
   17096:	mov    edi,DWORD PTR [esi+0x4]
   17099:	push   edi
   1709a:	push   DWORD PTR [eax+0x4]
   1709d:	call   0x16c3a
   170a2:	mov    DWORD PTR [edi+0x4],eax
   170a5:	mov    eax,DWORD PTR [ebx+0xc]
   170a8:	mov    edi,DWORD PTR [esi+0x4]
   170ab:	mov    DWORD PTR [esi+0xc],eax
   170ae:	mov    eax,DWORD PTR [edi+0x4]
   170b1:	cmp    eax,DWORD PTR ds:0x834ec
   170b7:	je     0x170d1
   170b9:	push   eax
   170ba:	call   0x150de
   170bf:	mov    DWORD PTR [edi],eax
   170c1:	mov    esi,DWORD PTR [esi+0x4]
   170c4:	push   DWORD PTR [esi+0x4]
   170c7:	call   0x150c6
   170cc:	mov    DWORD PTR [esi+0x8],eax
   170cf:	jmp    0x170d9
   170d1:	mov    DWORD PTR [edi],edi
   170d3:	mov    esi,DWORD PTR [esi+0x4]
   170d6:	mov    DWORD PTR [esi+0x8],esi
   170d9:	pop    edi
   170da:	pop    esi
   170db:	pop    ebx
   170dc:	ret    0x4
   170df:	int3   
   170e0:	push   ebp
   170e1:	mov    ebp,esp
   170e3:	push   ecx
   170e4:	push   ecx
   170e5:	push   ebx
   170e6:	push   esi
   170e7:	mov    DWORD PTR [ebp-0x4],ecx
   170ea:	push   edi
   170eb:	mov    edi,DWORD PTR [ebp+0xc]
   170ee:	lea    ecx,[ebp+0xc]
   170f1:	call   0x15ab8
   170f6:	mov    esi,DWORD PTR [edi]
   170f8:	mov    eax,ds:0x834f4
   170fd:	cmp    esi,eax
   170ff:	mov    ebx,edi
   17101:	mov    DWORD PTR [ebp-0x8],esi
   17104:	jne    0x17122
   17106:	mov    esi,DWORD PTR [edi+0x8]
   17109:	mov    eax,DWORD PTR [ebx+0x4]
   1710c:	mov    ecx,DWORD PTR [ebp-0x4]
   1710f:	mov    DWORD PTR [esi+0x4],eax
   17112:	mov    eax,DWORD PTR [ecx+0x4]
   17115:	cmp    DWORD PTR [eax+0x4],edi
   17118:	jne    0x17197
   1711a:	mov    DWORD PTR [eax+0x4],esi
   1711d:	jmp    0x171a5
   17122:	mov    ecx,DWORD PTR [edi+0x8]
   17125:	cmp    ecx,eax
   17127:	je     0x17109
   17129:	push   ecx
   1712a:	call   0x1552e
   1712f:	mov    ebx,eax
   17131:	cmp    ebx,edi
   17133:	mov    esi,DWORD PTR [ebx+0x8]
   17136:	je     0x17109
   17138:	mov    eax,DWORD PTR [ebp-0x8]
   1713b:	mov    DWORD PTR [eax+0x4],ebx
   1713e:	mov    eax,DWORD PTR [edi]
   17140:	mov    DWORD PTR [ebx],eax
   17142:	cmp    ebx,DWORD PTR [edi+0x8]
   17145:	jne    0x1714c
   17147:	mov    DWORD PTR [esi+0x4],ebx
   1714a:	jmp    0x17163
   1714c:	mov    eax,DWORD PTR [ebx+0x4]
   1714f:	mov    DWORD PTR [esi+0x4],eax
   17152:	mov    eax,DWORD PTR [ebx+0x4]
   17155:	mov    DWORD PTR [eax],esi
   17157:	mov    eax,DWORD PTR [edi+0x8]
   1715a:	mov    DWORD PTR [ebx+0x8],eax
   1715d:	mov    eax,DWORD PTR [edi+0x8]
   17160:	mov    DWORD PTR [eax+0x4],ebx
   17163:	mov    eax,DWORD PTR [ebp-0x4]
   17166:	mov    eax,DWORD PTR [eax+0x4]
   17169:	cmp    DWORD PTR [eax+0x4],edi
   1716c:	jne    0x17173
   1716e:	mov    DWORD PTR [eax+0x4],ebx
   17171:	jmp    0x17181
   17173:	mov    eax,DWORD PTR [edi+0x4]
   17176:	cmp    DWORD PTR [eax],edi
   17178:	jne    0x1717e
   1717a:	mov    DWORD PTR [eax],ebx
   1717c:	jmp    0x17181
   1717e:	mov    DWORD PTR [eax+0x8],ebx
   17181:	mov    eax,DWORD PTR [edi+0x4]
   17184:	mov    DWORD PTR [ebx+0x4],eax
   17187:	mov    eax,DWORD PTR [ebx+0x40]
   1718a:	mov    ecx,DWORD PTR [edi+0x40]
   1718d:	mov    DWORD PTR [ebx+0x40],ecx
   17190:	mov    DWORD PTR [edi+0x40],eax
   17193:	mov    ebx,edi
   17195:	jmp    0x171f8
   17197:	mov    eax,DWORD PTR [edi+0x4]
   1719a:	cmp    DWORD PTR [eax],edi
   1719c:	jne    0x171a2
   1719e:	mov    DWORD PTR [eax],esi
   171a0:	jmp    0x171a5
   171a2:	mov    DWORD PTR [eax+0x8],esi
   171a5:	mov    eax,DWORD PTR [ecx+0x4]
   171a8:	cmp    DWORD PTR [eax],edi
   171aa:	mov    DWORD PTR [ebp-0x8],eax
   171ad:	jne    0x171cf
   171af:	mov    edx,DWORD PTR [edi+0x8]
   171b2:	cmp    edx,DWORD PTR ds:0x834f4
   171b8:	jne    0x171c1
   171ba:	mov    edx,DWORD PTR [edi+0x4]
   171bd:	mov    DWORD PTR [eax],edx
   171bf:	jmp    0x171cf
   171c1:	push   esi
   171c2:	call   0x1552e
   171c7:	mov    ecx,DWORD PTR [ebp-0x8]
   171ca:	mov    DWORD PTR [ecx],eax
   171cc:	mov    ecx,DWORD PTR [ebp-0x4]
   171cf:	mov    eax,DWORD PTR [ecx+0x4]
   171d2:	cmp    DWORD PTR [eax+0x8],edi
   171d5:	mov    DWORD PTR [ebp-0x8],eax
   171d8:	jne    0x171f8
   171da:	mov    ecx,DWORD PTR [edi]
   171dc:	cmp    ecx,DWORD PTR ds:0x834f4
   171e2:	jne    0x171ec
   171e4:	mov    ecx,DWORD PTR [edi+0x4]
   171e7:	mov    DWORD PTR [eax+0x8],ecx
   171ea:	jmp    0x171f8
   171ec:	push   esi
   171ed:	call   0x151d4
   171f2:	mov    ecx,DWORD PTR [ebp-0x8]
   171f5:	mov    DWORD PTR [ecx+0x8],eax
   171f8:	xor    edi,edi
   171fa:	inc    edi
   171fb:	cmp    DWORD PTR [ebx+0x40],edi
   171fe:	jne    0x17319
   17204:	jmp    0x172c7
   17209:	cmp    DWORD PTR [esi+0x40],edi
   1720c:	jne    0x17316
   17212:	mov    ecx,DWORD PTR [esi+0x4]
   17215:	mov    eax,DWORD PTR [ecx]
   17217:	cmp    esi,eax
   17219:	jne    0x17292
   1721b:	mov    eax,DWORD PTR [ecx+0x8]
   1721e:	cmp    DWORD PTR [eax+0x40],0x0
   17222:	jne    0x1723e
   17224:	mov    DWORD PTR [eax+0x40],edi
   17227:	mov    eax,DWORD PTR [esi+0x4]
   1722a:	and    DWORD PTR [eax+0x40],0x0
   1722e:	push   DWORD PTR [esi+0x4]
   17231:	mov    ecx,edx
   17233:	call   0x15190
   17238:	mov    eax,DWORD PTR [esi+0x4]
   1723b:	mov    eax,DWORD PTR [eax+0x8]
   1723e:	mov    ecx,DWORD PTR [eax]
   17240:	cmp    DWORD PTR [ecx+0x40],edi
   17243:	jne    0x1724d
   17245:	mov    ecx,DWORD PTR [eax+0x8]
   17248:	cmp    DWORD PTR [ecx+0x40],edi
   1724b:	je     0x172c0
   1724d:	mov    ecx,DWORD PTR [eax+0x8]
   17250:	cmp    DWORD PTR [ecx+0x40],edi
   17253:	jne    0x1726d
   17255:	mov    ecx,DWORD PTR [eax]
   17257:	mov    DWORD PTR [ecx+0x40],edi
   1725a:	mov    ecx,DWORD PTR [ebp-0x4]
   1725d:	and    DWORD PTR [eax+0x40],0x0
   17261:	push   eax
   17262:	call   0x151ec
   17267:	mov    eax,DWORD PTR [esi+0x4]
   1726a:	mov    eax,DWORD PTR [eax+0x8]
   1726d:	mov    ecx,DWORD PTR [esi+0x4]
   17270:	mov    ecx,DWORD PTR [ecx+0x40]
   17273:	mov    DWORD PTR [eax+0x40],ecx
   17276:	mov    ecx,DWORD PTR [esi+0x4]
   17279:	mov    DWORD PTR [ecx+0x40],edi
   1727c:	mov    eax,DWORD PTR [eax+0x8]
   1727f:	mov    ecx,DWORD PTR [ebp-0x4]
   17282:	mov    DWORD PTR [eax+0x40],edi
   17285:	push   DWORD PTR [esi+0x4]
   17288:	call   0x15190
   1728d:	jmp    0x17316
   17292:	cmp    DWORD PTR [eax+0x40],0x0
   17296:	jne    0x172b1
   17298:	mov    DWORD PTR [eax+0x40],edi
   1729b:	mov    eax,DWORD PTR [esi+0x4]
   1729e:	and    DWORD PTR [eax+0x40],0x0
   172a2:	push   DWORD PTR [esi+0x4]
   172a5:	mov    ecx,edx
   172a7:	call   0x151ec
   172ac:	mov    eax,DWORD PTR [esi+0x4]
   172af:	mov    eax,DWORD PTR [eax]
   172b1:	mov    ecx,DWORD PTR [eax+0x8]
   172b4:	cmp    DWORD PTR [ecx+0x40],edi
   172b7:	jne    0x172d8
   172b9:	mov    ecx,DWORD PTR [eax]
   172bb:	cmp    DWORD PTR [ecx+0x40],edi
   172be:	jne    0x172d8
   172c0:	and    DWORD PTR [eax+0x40],0x0
   172c4:	mov    esi,DWORD PTR [esi+0x4]
   172c7:	mov    edx,DWORD PTR [ebp-0x4]
   172ca:	mov    eax,DWORD PTR [edx+0x4]
   172cd:	cmp    esi,DWORD PTR [eax+0x4]
   172d0:	jne    0x17209
   172d6:	jmp    0x17316
   172d8:	mov    ecx,DWORD PTR [eax]
   172da:	cmp    DWORD PTR [ecx+0x40],edi
   172dd:	jne    0x172f7
   172df:	mov    ecx,DWORD PTR [eax+0x8]
   172e2:	mov    DWORD PTR [ecx+0x40],edi
   172e5:	mov    ecx,DWORD PTR [ebp-0x4]
   172e8:	and    DWORD PTR [eax+0x40],0x0
   172ec:	push   eax
   172ed:	call   0x15190
   172f2:	mov    eax,DWORD PTR [esi+0x4]
   172f5:	mov    eax,DWORD PTR [eax]
   172f7:	mov    ecx,DWORD PTR [esi+0x4]
   172fa:	mov    ecx,DWORD PTR [ecx+0x40]
   172fd:	mov    DWORD PTR [eax+0x40],ecx
   17300:	mov    ecx,DWORD PTR [esi+0x4]
   17303:	mov    DWORD PTR [ecx+0x40],edi
   17306:	mov    eax,DWORD PTR [eax]
   17308:	mov    ecx,DWORD PTR [ebp-0x4]
   1730b:	mov    DWORD PTR [eax+0x40],edi
   1730e:	push   DWORD PTR [esi+0x4]
   17311:	call   0x151ec
   17316:	mov    DWORD PTR [esi+0x40],edi
   17319:	lea    ecx,[ebx+0x10]
   1731c:	call   0x1502a
   17321:	push   ebx
   17322:	call   0x1284c
   17327:	mov    eax,DWORD PTR [ebp-0x4]
   1732a:	dec    DWORD PTR [eax+0xc]
   1732d:	mov    eax,DWORD PTR [ebp+0x8]
   17330:	pop    ecx
   17331:	mov    ecx,DWORD PTR [ebp+0xc]
   17334:	pop    edi
   17335:	pop    esi
   17336:	mov    DWORD PTR [eax],ecx
   17338:	pop    ebx
   17339:	leave  
   1733a:	ret    0x8
   1733d:	int3   
   1733e:	push   ebp
   1733f:	mov    ebp,esp
   17341:	push   ecx
   17342:	push   ecx
   17343:	push   ebx
   17344:	push   esi
   17345:	mov    DWORD PTR [ebp-0x4],ecx
   17348:	push   edi
   17349:	mov    edi,DWORD PTR [ebp+0xc]
   1734c:	lea    ecx,[ebp+0xc]
   1734f:	call   0x15310
   17354:	mov    esi,DWORD PTR [edi]
   17356:	mov    eax,ds:0x834f8
   1735b:	cmp    esi,eax
   1735d:	mov    ebx,edi
   1735f:	mov    DWORD PTR [ebp-0x8],esi
   17362:	jne    0x17380
   17364:	mov    esi,DWORD PTR [edi+0x8]
   17367:	mov    eax,DWORD PTR [ebx+0x4]
   1736a:	mov    ecx,DWORD PTR [ebp-0x4]
   1736d:	mov    DWORD PTR [esi+0x4],eax
   17370:	mov    eax,DWORD PTR [ecx+0x4]
   17373:	cmp    DWORD PTR [eax+0x4],edi
   17376:	jne    0x173f5
   17378:	mov    DWORD PTR [eax+0x4],esi
   1737b:	jmp    0x17403
   17380:	mov    ecx,DWORD PTR [edi+0x8]
   17383:	cmp    ecx,eax
   17385:	je     0x17367
   17387:	push   ecx
   17388:	call   0x15284
   1738d:	mov    ebx,eax
   1738f:	cmp    ebx,edi
   17391:	mov    esi,DWORD PTR [ebx+0x8]
   17394:	je     0x17367
   17396:	mov    eax,DWORD PTR [ebp-0x8]
   17399:	mov    DWORD PTR [eax+0x4],ebx
   1739c:	mov    eax,DWORD PTR [edi]
   1739e:	mov    DWORD PTR [ebx],eax
   173a0:	cmp    ebx,DWORD PTR [edi+0x8]
   173a3:	jne    0x173aa
   173a5:	mov    DWORD PTR [esi+0x4],ebx
   173a8:	jmp    0x173c1
   173aa:	mov    eax,DWORD PTR [ebx+0x4]
   173ad:	mov    DWORD PTR [esi+0x4],eax
   173b0:	mov    eax,DWORD PTR [ebx+0x4]
   173b3:	mov    DWORD PTR [eax],esi
   173b5:	mov    eax,DWORD PTR [edi+0x8]
   173b8:	mov    DWORD PTR [ebx+0x8],eax
   173bb:	mov    eax,DWORD PTR [edi+0x8]
   173be:	mov    DWORD PTR [eax+0x4],ebx
   173c1:	mov    eax,DWORD PTR [ebp-0x4]
   173c4:	mov    eax,DWORD PTR [eax+0x4]
   173c7:	cmp    DWORD PTR [eax+0x4],edi
   173ca:	jne    0x173d1
   173cc:	mov    DWORD PTR [eax+0x4],ebx
   173cf:	jmp    0x173df
   173d1:	mov    eax,DWORD PTR [edi+0x4]
   173d4:	cmp    DWORD PTR [eax],edi
   173d6:	jne    0x173dc
   173d8:	mov    DWORD PTR [eax],ebx
   173da:	jmp    0x173df
   173dc:	mov    DWORD PTR [eax+0x8],ebx
   173df:	mov    eax,DWORD PTR [edi+0x4]
   173e2:	mov    DWORD PTR [ebx+0x4],eax
   173e5:	mov    eax,DWORD PTR [ebx+0x14]
   173e8:	mov    ecx,DWORD PTR [edi+0x14]
   173eb:	mov    DWORD PTR [ebx+0x14],ecx
   173ee:	mov    DWORD PTR [edi+0x14],eax
   173f1:	mov    ebx,edi
   173f3:	jmp    0x17456
   173f5:	mov    eax,DWORD PTR [edi+0x4]
   173f8:	cmp    DWORD PTR [eax],edi
   173fa:	jne    0x17400
   173fc:	mov    DWORD PTR [eax],esi
   173fe:	jmp    0x17403
   17400:	mov    DWORD PTR [eax+0x8],esi
   17403:	mov    eax,DWORD PTR [ecx+0x4]
   17406:	cmp    DWORD PTR [eax],edi
   17408:	mov    DWORD PTR [ebp-0x8],eax
   1740b:	jne    0x1742d
   1740d:	mov    edx,DWORD PTR [edi+0x8]
   17410:	cmp    edx,DWORD PTR ds:0x834f8
   17416:	jne    0x1741f
   17418:	mov    edx,DWORD PTR [edi+0x4]
   1741b:	mov    DWORD PTR [eax],edx
   1741d:	jmp    0x1742d
   1741f:	push   esi
   17420:	call   0x15284
   17425:	mov    ecx,DWORD PTR [ebp-0x8]
   17428:	mov    DWORD PTR [ecx],eax
   1742a:	mov    ecx,DWORD PTR [ebp-0x4]
   1742d:	mov    eax,DWORD PTR [ecx+0x4]
   17430:	cmp    DWORD PTR [eax+0x8],edi
   17433:	mov    DWORD PTR [ebp-0x8],eax
   17436:	jne    0x17456
   17438:	mov    ecx,DWORD PTR [edi]
   1743a:	cmp    ecx,DWORD PTR ds:0x834f8
   17440:	jne    0x1744a
   17442:	mov    ecx,DWORD PTR [edi+0x4]
   17445:	mov    DWORD PTR [eax+0x8],ecx
   17448:	jmp    0x17456
   1744a:	push   esi
   1744b:	call   0x1526c
   17450:	mov    ecx,DWORD PTR [ebp-0x8]
   17453:	mov    DWORD PTR [ecx+0x8],eax
   17456:	xor    edi,edi
   17458:	inc    edi
   17459:	cmp    DWORD PTR [ebx+0x14],edi
   1745c:	jne    0x17577
   17462:	jmp    0x17525
   17467:	cmp    DWORD PTR [esi+0x14],edi
   1746a:	jne    0x17574
   17470:	mov    ecx,DWORD PTR [esi+0x4]
   17473:	mov    eax,DWORD PTR [ecx]
   17475:	cmp    esi,eax
   17477:	jne    0x174f0
   17479:	mov    eax,DWORD PTR [ecx+0x8]
   1747c:	cmp    DWORD PTR [eax+0x14],0x0
   17480:	jne    0x1749c
   17482:	mov    DWORD PTR [eax+0x14],edi
   17485:	mov    eax,DWORD PTR [esi+0x4]
   17488:	and    DWORD PTR [eax+0x14],0x0
   1748c:	push   DWORD PTR [esi+0x4]
   1748f:	mov    ecx,edx
   17491:	call   0x158aa
   17496:	mov    eax,DWORD PTR [esi+0x4]
   17499:	mov    eax,DWORD PTR [eax+0x8]
   1749c:	mov    ecx,DWORD PTR [eax]
   1749e:	cmp    DWORD PTR [ecx+0x14],edi
   174a1:	jne    0x174ab
   174a3:	mov    ecx,DWORD PTR [eax+0x8]
   174a6:	cmp    DWORD PTR [ecx+0x14],edi
   174a9:	je     0x1751e
   174ab:	mov    ecx,DWORD PTR [eax+0x8]
   174ae:	cmp    DWORD PTR [ecx+0x14],edi
   174b1:	jne    0x174cb
   174b3:	mov    ecx,DWORD PTR [eax]
   174b5:	mov    DWORD PTR [ecx+0x14],edi
   174b8:	mov    ecx,DWORD PTR [ebp-0x4]
   174bb:	and    DWORD PTR [eax+0x14],0x0
   174bf:	push   eax
   174c0:	call   0x158ee
   174c5:	mov    eax,DWORD PTR [esi+0x4]
   174c8:	mov    eax,DWORD PTR [eax+0x8]
   174cb:	mov    ecx,DWORD PTR [esi+0x4]
   174ce:	mov    ecx,DWORD PTR [ecx+0x14]
   174d1:	mov    DWORD PTR [eax+0x14],ecx
   174d4:	mov    ecx,DWORD PTR [esi+0x4]
   174d7:	mov    DWORD PTR [ecx+0x14],edi
   174da:	mov    eax,DWORD PTR [eax+0x8]
   174dd:	mov    ecx,DWORD PTR [ebp-0x4]
   174e0:	mov    DWORD PTR [eax+0x14],edi
   174e3:	push   DWORD PTR [esi+0x4]
   174e6:	call   0x158aa
   174eb:	jmp    0x17574
   174f0:	cmp    DWORD PTR [eax+0x14],0x0
   174f4:	jne    0x1750f
   174f6:	mov    DWORD PTR [eax+0x14],edi
   174f9:	mov    eax,DWORD PTR [esi+0x4]
   174fc:	and    DWORD PTR [eax+0x14],0x0
   17500:	push   DWORD PTR [esi+0x4]
   17503:	mov    ecx,edx
   17505:	call   0x158ee
   1750a:	mov    eax,DWORD PTR [esi+0x4]
   1750d:	mov    eax,DWORD PTR [eax]
   1750f:	mov    ecx,DWORD PTR [eax+0x8]
   17512:	cmp    DWORD PTR [ecx+0x14],edi
   17515:	jne    0x17536
   17517:	mov    ecx,DWORD PTR [eax]
   17519:	cmp    DWORD PTR [ecx+0x14],edi
   1751c:	jne    0x17536
   1751e:	and    DWORD PTR [eax+0x14],0x0
   17522:	mov    esi,DWORD PTR [esi+0x4]
   17525:	mov    edx,DWORD PTR [ebp-0x4]
   17528:	mov    eax,DWORD PTR [edx+0x4]
   1752b:	cmp    esi,DWORD PTR [eax+0x4]
   1752e:	jne    0x17467
   17534:	jmp    0x17574
   17536:	mov    ecx,DWORD PTR [eax]
   17538:	cmp    DWORD PTR [ecx+0x14],edi
   1753b:	jne    0x17555
   1753d:	mov    ecx,DWORD PTR [eax+0x8]
   17540:	mov    DWORD PTR [ecx+0x14],edi
   17543:	mov    ecx,DWORD PTR [ebp-0x4]
   17546:	and    DWORD PTR [eax+0x14],0x0
   1754a:	push   eax
   1754b:	call   0x158aa
   17550:	mov    eax,DWORD PTR [esi+0x4]
   17553:	mov    eax,DWORD PTR [eax]
   17555:	mov    ecx,DWORD PTR [esi+0x4]
   17558:	mov    ecx,DWORD PTR [ecx+0x14]
   1755b:	mov    DWORD PTR [eax+0x14],ecx
   1755e:	mov    ecx,DWORD PTR [esi+0x4]
   17561:	mov    DWORD PTR [ecx+0x14],edi
   17564:	mov    eax,DWORD PTR [eax]
   17566:	mov    ecx,DWORD PTR [ebp-0x4]
   17569:	mov    DWORD PTR [eax+0x14],edi
   1756c:	push   DWORD PTR [esi+0x4]
   1756f:	call   0x158ee
   17574:	mov    DWORD PTR [esi+0x14],edi
   17577:	push   0x0
   17579:	lea    ecx,[ebx+0xc]
   1757c:	call   0x159fe
   17581:	push   ebx
   17582:	call   0x1284c
   17587:	mov    eax,DWORD PTR [ebp-0x4]
   1758a:	dec    DWORD PTR [eax+0xc]
   1758d:	mov    eax,DWORD PTR [ebp+0x8]
   17590:	pop    ecx
   17591:	mov    ecx,DWORD PTR [ebp+0xc]
   17594:	pop    edi
   17595:	pop    esi
   17596:	mov    DWORD PTR [eax],ecx
   17598:	pop    ebx
   17599:	leave  
   1759a:	ret    0x8
   1759d:	int3   
   1759e:	push   ebx
   1759f:	push   esi
   175a0:	push   edi
   175a1:	mov    edi,DWORD PTR [esp+0x10]
   175a5:	cmp    edi,DWORD PTR ds:0x834f8
   175ab:	mov    ebx,ecx
   175ad:	mov    esi,edi
   175af:	je     0x175d8
   175b1:	push   DWORD PTR [esi+0x8]
   175b4:	mov    ecx,ebx
   175b6:	call   0x1759e
   175bb:	mov    esi,DWORD PTR [esi]
   175bd:	push   0x0
   175bf:	lea    ecx,[edi+0xc]
   175c2:	call   0x159fe
   175c7:	push   edi
   175c8:	call   0x1284c
   175cd:	cmp    esi,DWORD PTR ds:0x834f8
   175d3:	pop    ecx
   175d4:	mov    edi,esi
   175d6:	jne    0x175b1
   175d8:	pop    edi
   175d9:	pop    esi
   175da:	pop    ebx
   175db:	ret    0x4
   175de:	push   ebp
   175df:	mov    ebp,esp
   175e1:	push   ebx
   175e2:	push   esi
   175e3:	push   edi
   175e4:	push   0x18
   175e6:	mov    ebx,ecx
   175e8:	call   0x12822
   175ed:	mov    esi,DWORD PTR [ebp+0x10]
   175f0:	mov    edi,eax
   175f2:	and    DWORD PTR [edi+0x14],0x0
   175f6:	mov    DWORD PTR [edi+0x4],esi
   175f9:	mov    eax,ds:0x834f8
   175fe:	pop    ecx
   175ff:	mov    DWORD PTR [edi],eax
   17601:	mov    eax,ds:0x834f8
   17606:	lea    ecx,[edi+0xc]
   17609:	test   ecx,ecx
   1760b:	mov    DWORD PTR [edi+0x8],eax
   1760e:	je     0x17618
   17610:	push   DWORD PTR [ebp+0x14]
   17613:	call   0x159e0
   17618:	inc    DWORD PTR [ebx+0xc]
   1761b:	cmp    esi,DWORD PTR [ebx+0x4]
   1761e:	je     0x17645
   17620:	mov    eax,DWORD PTR [ebp+0xc]
   17623:	cmp    eax,DWORD PTR ds:0x834f8
   17629:	jne    0x17645
   1762b:	mov    eax,DWORD PTR [ebp+0x14]
   1762e:	mov    eax,DWORD PTR [eax]
   17630:	cmp    eax,DWORD PTR [esi+0xc]
   17633:	jl     0x17645
   17635:	mov    DWORD PTR [esi+0x8],edi
   17638:	mov    eax,DWORD PTR [ebx+0x4]
   1763b:	cmp    esi,DWORD PTR [eax+0x8]
   1763e:	jne    0x1765c
   17640:	mov    DWORD PTR [eax+0x8],edi
   17643:	jmp    0x1765c
   17645:	mov    DWORD PTR [esi],edi
   17647:	mov    eax,DWORD PTR [ebx+0x4]
   1764a:	cmp    esi,eax
   1764c:	jne    0x17656
   1764e:	mov    DWORD PTR [eax+0x4],edi
   17651:	mov    eax,DWORD PTR [ebx+0x4]
   17654:	jmp    0x17640
   17656:	cmp    esi,DWORD PTR [eax]
   17658:	jne    0x1765c
   1765a:	mov    DWORD PTR [eax],edi
   1765c:	mov    eax,DWORD PTR [ebx+0x4]
   1765f:	cmp    edi,DWORD PTR [eax+0x4]
   17662:	mov    esi,edi
   17664:	je     0x1771a
   1766a:	mov    eax,DWORD PTR [esi+0x4]
   1766d:	cmp    DWORD PTR [eax+0x14],0x0
   17671:	jne    0x1771a
   17677:	mov    edx,DWORD PTR [eax+0x4]
   1767a:	mov    ecx,DWORD PTR [edx]
   1767c:	cmp    eax,ecx
   1767e:	jne    0x176d9
   17680:	mov    ecx,DWORD PTR [edx+0x8]
   17683:	cmp    DWORD PTR [ecx+0x14],0x0
   17687:	jne    0x176a7
   17689:	mov    edx,DWORD PTR [esi+0x4]
   1768c:	xor    eax,eax
   1768e:	inc    eax
   1768f:	mov    DWORD PTR [edx+0x14],eax
   17692:	mov    DWORD PTR [ecx+0x14],eax
   17695:	mov    eax,DWORD PTR [esi+0x4]
   17698:	mov    eax,DWORD PTR [eax+0x4]
   1769b:	and    DWORD PTR [eax+0x14],0x0
   1769f:	mov    eax,DWORD PTR [esi+0x4]
   176a2:	mov    esi,DWORD PTR [eax+0x4]
   176a5:	jmp    0x1770e
   176a7:	cmp    esi,DWORD PTR [eax+0x8]
   176aa:	jne    0x176b6
   176ac:	mov    esi,eax
   176ae:	push   esi
   176af:	mov    ecx,ebx
   176b1:	call   0x158aa
   176b6:	mov    eax,DWORD PTR [esi+0x4]
   176b9:	mov    DWORD PTR [eax+0x14],0x1
   176c0:	mov    eax,DWORD PTR [esi+0x4]
   176c3:	mov    eax,DWORD PTR [eax+0x4]
   176c6:	and    DWORD PTR [eax+0x14],0x0
   176ca:	mov    eax,DWORD PTR [esi+0x4]
   176cd:	push   DWORD PTR [eax+0x4]
   176d0:	mov    ecx,ebx
   176d2:	call   0x158ee
   176d7:	jmp    0x1770e
   176d9:	cmp    DWORD PTR [ecx+0x14],0x0
   176dd:	je     0x17689
   176df:	cmp    esi,DWORD PTR [eax]
   176e1:	jne    0x176ed
   176e3:	mov    esi,eax
   176e5:	push   esi
   176e6:	mov    ecx,ebx
   176e8:	call   0x158ee
   176ed:	mov    eax,DWORD PTR [esi+0x4]
   176f0:	mov    DWORD PTR [eax+0x14],0x1
   176f7:	mov    eax,DWORD PTR [esi+0x4]
   176fa:	mov    eax,DWORD PTR [eax+0x4]
   176fd:	and    DWORD PTR [eax+0x14],0x0
   17701:	mov    eax,DWORD PTR [esi+0x4]
   17704:	push   DWORD PTR [eax+0x4]
   17707:	mov    ecx,ebx
   17709:	call   0x158aa
   1770e:	mov    eax,DWORD PTR [ebx+0x4]
   17711:	cmp    esi,DWORD PTR [eax+0x4]
   17714:	jne    0x1766a
   1771a:	mov    eax,DWORD PTR [ebx+0x4]
   1771d:	mov    eax,DWORD PTR [eax+0x4]
   17720:	mov    DWORD PTR [eax+0x14],0x1
   17727:	mov    eax,DWORD PTR [ebp+0x8]
   1772a:	mov    DWORD PTR [eax],edi
   1772c:	pop    edi
   1772d:	pop    esi
   1772e:	pop    ebx
   1772f:	pop    ebp
   17730:	ret    0x10
   17733:	int3   
   17734:	push   ebp
   17735:	mov    ebp,esp
   17737:	push   ecx
   17738:	push   DWORD PTR [ebp-0x4]
   1773b:	push   DWORD PTR [ebp+0x10]
   1773e:	push   DWORD PTR [ebp+0xc]
   17741:	push   DWORD PTR [ebp+0x8]
   17744:	call   0x16ca2
   17749:	add    esp,0x10
   1774c:	leave  
   1774d:	ret    
   1774e:	push   ebp
   1774f:	mov    ebp,esp
   17751:	push   ecx
   17752:	push   ebx
   17753:	push   esi
   17754:	push   edi
   17755:	xor    edi,edi
   17757:	push   edi
   17758:	push   edi
   17759:	push   edi
   1775a:	mov    esi,ecx
   1775c:	mov    eax,DWORD PTR [esi+0x10]
   1775f:	push   edi
   17760:	push   eax
   17761:	xor    ebx,ebx
   17763:	call   DWORD PTR ds:0x1b060
   17769:	cmp    eax,edi
   1776b:	jge    0x1777e
   1776d:	push   eax
   1776e:	push   0x1b244
   17773:	call   0x1a38a
   17778:	pop    ecx
   17779:	pop    ecx
   1777a:	xor    eax,eax
   1777c:	jmp    0x177a4
   1777e:	lea    eax,[ebp+0x8]
   17781:	push   eax
   17782:	lea    eax,[ebp-0x4]
   17785:	push   eax
   17786:	mov    ecx,esi
   17788:	call   0x15bbc
   1778d:	mov    eax,DWORD PTR [ebp-0x4]
   17790:	cmp    eax,DWORD PTR [esi+0x4]
   17793:	je     0x17798
   17795:	mov    ebx,DWORD PTR [eax+0x10]
   17798:	push   edi
   17799:	push   DWORD PTR [esi+0x10]
   1779c:	call   DWORD PTR ds:0x1b05c
   177a2:	mov    eax,ebx
   177a4:	pop    edi
   177a5:	pop    esi
   177a6:	pop    ebx
   177a7:	leave  
   177a8:	ret    0x4
   177ab:	int3   
   177ac:	push   ebp
   177ad:	mov    ebp,esp
   177af:	mov    ecx,DWORD PTR ds:0x83324
   177b5:	push   esi
   177b6:	push   DWORD PTR [ebp+0x8]
   177b9:	lea    eax,[ebp+0x8]
   177bc:	push   eax
   177bd:	call   0x15bf6
   177c2:	mov    esi,DWORD PTR [ebp+0x8]
   177c5:	mov    eax,ds:0x83324
   177ca:	cmp    esi,DWORD PTR [eax+0x4]
   177cd:	jne    0x177d3
   177cf:	xor    al,al
   177d1:	jmp    0x1781d
   177d3:	mov    ecx,DWORD PTR [ebp+0xc]
   177d6:	lea    eax,[esi+0x1c]
   177d9:	push   eax
   177da:	call   0x199c8
   177df:	mov    ecx,DWORD PTR [ebp+0x10]
   177e2:	lea    eax,[esi+0x20]
   177e5:	push   eax
   177e6:	call   0x199c8
   177eb:	mov    ecx,DWORD PTR [ebp+0x14]
   177ee:	lea    eax,[esi+0x24]
   177f1:	push   eax
   177f2:	call   0x199c8
   177f7:	mov    eax,DWORD PTR [esi+0x28]
   177fa:	mov    ecx,DWORD PTR [ebp+0x18]
   177fd:	mov    DWORD PTR [ecx],eax
   177ff:	mov    ecx,DWORD PTR [esi+0x30]
   17802:	mov    eax,DWORD PTR [ebp+0x1c]
   17805:	mov    DWORD PTR [eax],ecx
   17807:	mov    ecx,DWORD PTR [esi+0x34]
   1780a:	mov    DWORD PTR [eax+0x4],ecx
   1780d:	mov    ecx,DWORD PTR [esi+0x38]
   17810:	mov    eax,DWORD PTR [ebp+0x20]
   17813:	mov    DWORD PTR [eax],ecx
   17815:	mov    ecx,DWORD PTR [esi+0x3c]
   17818:	mov    DWORD PTR [eax+0x4],ecx
   1781b:	mov    al,0x1
   1781d:	pop    esi
   1781e:	pop    ebp
   1781f:	ret    0x1c
   17822:	dec    ebx
   17823:	gs push edi
   17825:	popa   
   17826:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   1782e:	gs js  0x17880
   17831:	bound  ebp,QWORD PTR [edx+0x65]
   17834:	arpl   WORD PTR [eax+ebp*1+0x29],si
   17838:	and    BYTE PTR [ebp+0x52],al
   1783b:	push   edx
   1783c:	dec    edi
   1783d:	push   edx
   1783e:	and    BYTE PTR [edx],bh
   17840:	and    BYTE PTR [eax],dh
   17842:	js     0x17869
   17844:	cmp    BYTE PTR cs:[eax+0xa],bh
   17848:	add    ah,cl
   1784a:	push   0x30
   1784c:	push   0x1b270
   17851:	call   0x1a338
   17856:	xor    ebx,ebx
   17858:	push   ebx
   17859:	push   ebx
   1785a:	push   ebx
   1785b:	push   ebx
   1785c:	push   0x8319c
   17861:	call   DWORD PTR ds:0x1b060
   17867:	cmp    eax,ebx
   17869:	jge    0x1787d
   1786b:	push   eax
   1786c:	push   0x17822
   17871:	call   0x1a38a
   17876:	pop    ecx
   17877:	pop    ecx
   17878:	jmp    0x17946
   1787d:	mov    DWORD PTR [ebp-0x4],ebx
   17880:	mov    esi,DWORD PTR ds:0x832f8
   17886:	mov    DWORD PTR [ebp-0x2c],esi
   17889:	lea    eax,[ebp+0x8]
   1788c:	push   eax
   1788d:	lea    eax,[ebp-0x20]
   17890:	push   eax
   17891:	mov    ecx,esi
   17893:	call   0x15c38
   17898:	mov    esi,DWORD PTR [esi+0x4]
   1789b:	mov    DWORD PTR [ebp-0x30],esi
   1789e:	mov    DWORD PTR [ebp-0x34],esi
   178a1:	mov    eax,DWORD PTR [ebp-0x20]
   178a4:	cmp    eax,esi
   178a6:	jne    0x178b4
   178a8:	mov    eax,DWORD PTR [ebp+0xc]
   178ab:	mov    DWORD PTR [eax+0x8],0x1
   178b2:	jmp    0x1791d
   178b4:	lea    edx,[eax+0x10]
   178b7:	mov    eax,edx
   178b9:	mov    DWORD PTR [ebp-0x38],eax
   178bc:	mov    eax,DWORD PTR [eax]
   178be:	cmp    eax,ebx
   178c0:	jne    0x178c6
   178c2:	xor    ecx,ecx
   178c4:	jmp    0x178c9
   178c6:	mov    ecx,DWORD PTR [eax+0x8]
   178c9:	mov    DWORD PTR [ebp-0x24],ecx
   178cc:	mov    eax,DWORD PTR [ebp+0xc]
   178cf:	cmp    ecx,DWORD PTR [eax]
   178d1:	jbe    0x178de
   178d3:	mov    DWORD PTR [eax],ecx
   178d5:	mov    DWORD PTR [eax+0x8],0x2
   178dc:	jmp    0x1791d
   178de:	mov    DWORD PTR [eax+0x8],ebx
   178e1:	mov    ecx,edx
   178e3:	mov    DWORD PTR [ebp-0x3c],ecx
   178e6:	mov    ecx,DWORD PTR [ecx]
   178e8:	cmp    ecx,ebx
   178ea:	jne    0x178f1
   178ec:	mov    DWORD PTR [ebp-0x1c],ebx
   178ef:	jmp    0x178f7
   178f1:	mov    ecx,DWORD PTR [ecx+0x8]
   178f4:	mov    DWORD PTR [ebp-0x1c],ecx
   178f7:	mov    DWORD PTR [ebp-0x40],edx
   178fa:	mov    ecx,DWORD PTR [edx]
   178fc:	cmp    ecx,ebx
   178fe:	jne    0x17904
   17900:	xor    esi,esi
   17902:	jmp    0x17906
   17904:	mov    esi,DWORD PTR [ecx]
   17906:	mov    DWORD PTR [ebp-0x28],esi
   17909:	mov    ecx,DWORD PTR [ebp-0x1c]
   1790c:	lea    edi,[eax+0xc]
   1790f:	mov    eax,ecx
   17911:	shr    ecx,0x2
   17914:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17916:	mov    ecx,eax
   17918:	and    ecx,0x3
   1791b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1791d:	or     DWORD PTR [ebp-0x4],0xffffffff
   17921:	jmp    0x1793a
   17923:	xor    eax,eax
   17925:	inc    eax
   17926:	ret    
   17927:	mov    esp,DWORD PTR [ebp-0x18]
   1792a:	mov    eax,DWORD PTR [ebp+0xc]
   1792d:	mov    DWORD PTR [eax+0x8],0x4
   17934:	or     DWORD PTR [ebp-0x4],0xffffffff
   17938:	xor    ebx,ebx
   1793a:	push   ebx
   1793b:	push   0x8319c
   17940:	call   DWORD PTR ds:0x1b05c
   17946:	call   0x1a373
   1794b:	ret    0x8
   1794e:	push   ebp
   1794f:	mov    ebp,esp
   17951:	push   esi
   17952:	push   DWORD PTR [ebp+0x8]
   17955:	lea    eax,[ebp+0x8]
   17958:	push   eax
   17959:	mov    esi,ecx
   1795b:	call   0x15f78
   17960:	mov    eax,DWORD PTR [ebp+0x8]
   17963:	cmp    eax,DWORD PTR [esi+0x4]
   17966:	pop    esi
   17967:	je     0x17979
   17969:	mov    ecx,DWORD PTR [ebp+0xc]
   1796c:	add    eax,0x18
   1796f:	push   eax
   17970:	call   0x14fd2
   17975:	mov    al,0x1
   17977:	jmp    0x1797b
   17979:	xor    al,al
   1797b:	pop    ebp
   1797c:	ret    0x8
   1797f:	int3   
   17980:	push   ebp
   17981:	mov    ebp,esp
   17983:	push   ecx
   17984:	push   ecx
   17985:	push   DWORD PTR [ebp+0xc]
   17988:	lea    eax,[ebp-0x8]
   1798b:	push   eax
   1798c:	call   0x16d82
   17991:	mov    eax,DWORD PTR [ebp+0x8]
   17994:	mov    ecx,DWORD PTR [ebp-0x8]
   17997:	mov    DWORD PTR [eax],ecx
   17999:	mov    cl,BYTE PTR [ebp-0x4]
   1799c:	mov    BYTE PTR [eax+0x4],cl
   1799f:	leave  
   179a0:	ret    0x8
   179a3:	int3   
   179a4:	push   ecx
   179a5:	push   esi
   179a6:	mov    esi,ecx
   179a8:	mov    eax,DWORD PTR [esi+0x4]
   179ab:	mov    ecx,DWORD PTR [eax]
   179ad:	push   eax
   179ae:	push   ecx
   179af:	lea    eax,[esp+0xc]
   179b3:	push   eax
   179b4:	mov    ecx,esi
   179b6:	call   0x16e14
   179bb:	push   DWORD PTR [esi+0x4]
   179be:	call   0x1284c
   179c3:	pop    ecx
   179c4:	xor    ecx,ecx
   179c6:	mov    DWORD PTR [esi+0x4],ecx
   179c9:	mov    DWORD PTR [esi+0xc],ecx
   179cc:	dec    DWORD PTR ds:0x83508
   179d2:	pop    esi
   179d3:	jne    0x179eb
   179d5:	mov    eax,ds:0x834ec
   179da:	cmp    eax,ecx
   179dc:	mov    DWORD PTR ds:0x834ec,ecx
   179e2:	je     0x179eb
   179e4:	push   eax
   179e5:	call   0x1284c
   179ea:	pop    ecx
   179eb:	pop    ecx
   179ec:	ret    
   179ed:	int3   
   179ee:	push   ebp
   179ef:	mov    ebp,esp
   179f1:	push   ecx
   179f2:	push   ecx
   179f3:	push   DWORD PTR [ebp+0xc]
   179f6:	lea    eax,[ebp-0x8]
   179f9:	push   eax
   179fa:	call   0x16ed0
   179ff:	mov    eax,DWORD PTR [ebp+0x8]
   17a02:	mov    ecx,DWORD PTR [ebp-0x8]
   17a05:	mov    DWORD PTR [eax],ecx
   17a07:	mov    cl,BYTE PTR [ebp-0x4]
   17a0a:	mov    BYTE PTR [eax+0x4],cl
   17a0d:	leave  
   17a0e:	ret    0x8
   17a11:	int3   
   17a12:	push   ebp
   17a13:	mov    ebp,esp
   17a15:	push   ecx
   17a16:	push   ecx
   17a17:	push   DWORD PTR [ebp+0xc]
   17a1a:	lea    eax,[ebp-0x8]
   17a1d:	push   eax
   17a1e:	call   0x16f62
   17a23:	mov    eax,DWORD PTR [ebp+0x8]
   17a26:	mov    ecx,DWORD PTR [ebp-0x8]
   17a29:	mov    DWORD PTR [eax],ecx
   17a2b:	mov    cl,BYTE PTR [ebp-0x4]
   17a2e:	mov    BYTE PTR [eax+0x4],cl
   17a31:	leave  
   17a32:	ret    0x8
   17a35:	int3   
   17a36:	push   ebp
   17a37:	mov    ebp,esp
   17a39:	push   ecx
   17a3a:	push   ecx
   17a3b:	push   DWORD PTR [ebp+0xc]
   17a3e:	lea    eax,[ebp-0x8]
   17a41:	push   eax
   17a42:	call   0x16ff6
   17a47:	mov    eax,DWORD PTR [ebp+0x8]
   17a4a:	mov    ecx,DWORD PTR [ebp-0x8]
   17a4d:	mov    DWORD PTR [eax],ecx
   17a4f:	mov    cl,BYTE PTR [ebp-0x4]
   17a52:	mov    BYTE PTR [eax+0x4],cl
   17a55:	leave  
   17a56:	ret    0x8
   17a59:	int3   
   17a5a:	push   ebp
   17a5b:	mov    ebp,esp
   17a5d:	push   ecx
   17a5e:	push   ecx
   17a5f:	push   DWORD PTR [ebp+0x8]
   17a62:	lea    eax,[ebp-0x8]
   17a65:	push   eax
   17a66:	call   0x15fba
   17a6b:	and    DWORD PTR [ebp+0x8],0x0
   17a6f:	lea    eax,[ebp+0x8]
   17a72:	push   eax
   17a73:	push   DWORD PTR [ebp-0x4]
   17a76:	push   DWORD PTR [ebp-0x8]
   17a79:	call   0x17734
   17a7e:	mov    eax,DWORD PTR [ebp+0x8]
   17a81:	add    esp,0xc
   17a84:	leave  
   17a85:	ret    0x4
   17a88:	push   esi
   17a89:	push   edi
   17a8a:	mov    edi,DWORD PTR [esp+0xc]
   17a8e:	mov    al,BYTE PTR [edi+0x8]
   17a91:	mov    esi,ecx
   17a93:	mov    BYTE PTR [esi+0x8],al
   17a96:	call   0x16366
   17a9b:	push   edi
   17a9c:	mov    ecx,esi
   17a9e:	call   0x1708a
   17aa3:	pop    edi
   17aa4:	mov    eax,esi
   17aa6:	pop    esi
   17aa7:	ret    0x4
   17aaa:	push   ebp
   17aab:	mov    ebp,esp
   17aad:	push   ecx
   17aae:	push   esi
   17aaf:	mov    esi,ecx
   17ab1:	cmp    esi,DWORD PTR [ebp+0x8]
   17ab4:	je     0x17ad2
   17ab6:	mov    eax,DWORD PTR [esi+0x4]
   17ab9:	mov    ecx,DWORD PTR [eax]
   17abb:	push   eax
   17abc:	push   ecx
   17abd:	lea    eax,[ebp-0x4]
   17ac0:	push   eax
   17ac1:	mov    ecx,esi
   17ac3:	call   0x16e14
   17ac8:	push   DWORD PTR [ebp+0x8]
   17acb:	mov    ecx,esi
   17acd:	call   0x1708a
   17ad2:	mov    eax,esi
   17ad4:	pop    esi
   17ad5:	leave  
   17ad6:	ret    0x4
   17ad9:	int3   
   17ada:	push   ebp
   17adb:	mov    ebp,esp
   17add:	push   ecx
   17ade:	push   esi
   17adf:	mov    esi,ecx
   17ae1:	cmp    DWORD PTR [esi+0xc],0x0
   17ae5:	mov    ecx,DWORD PTR [ebp+0xc]
   17ae8:	je     0x17b22
   17aea:	mov    eax,DWORD PTR [esi+0x4]
   17aed:	cmp    ecx,DWORD PTR [eax]
   17aef:	jne    0x17b22
   17af1:	cmp    DWORD PTR [ebp+0x10],eax
   17af4:	jne    0x17b22
   17af6:	push   DWORD PTR [eax+0x4]
   17af9:	mov    ecx,esi
   17afb:	call   0x16aa0
   17b00:	mov    ecx,DWORD PTR ds:0x834f4
   17b06:	mov    eax,DWORD PTR [esi+0x4]
   17b09:	mov    DWORD PTR [eax+0x4],ecx
   17b0c:	mov    eax,DWORD PTR [esi+0x4]
   17b0f:	and    DWORD PTR [esi+0xc],0x0
   17b13:	mov    DWORD PTR [eax],eax
   17b15:	mov    eax,DWORD PTR [esi+0x4]
   17b18:	mov    DWORD PTR [eax+0x8],eax
   17b1b:	mov    eax,DWORD PTR [esi+0x4]
   17b1e:	mov    ecx,DWORD PTR [eax]
   17b20:	jmp    0x17b47
   17b22:	cmp    ecx,DWORD PTR [ebp+0x10]
   17b25:	je     0x17b47
   17b27:	push   edi
   17b28:	mov    edi,ecx
   17b2a:	lea    ecx,[ebp+0xc]
   17b2d:	call   0x15ab8
   17b32:	push   edi
   17b33:	lea    eax,[ebp-0x4]
   17b36:	push   eax
   17b37:	mov    ecx,esi
   17b39:	call   0x170e0
   17b3e:	mov    ecx,DWORD PTR [ebp+0xc]
   17b41:	cmp    ecx,DWORD PTR [ebp+0x10]
   17b44:	jne    0x17b28
   17b46:	pop    edi
   17b47:	mov    eax,DWORD PTR [ebp+0x8]
   17b4a:	mov    DWORD PTR [eax],ecx
   17b4c:	pop    esi
   17b4d:	leave  
   17b4e:	ret    0xc
   17b51:	int3   
   17b52:	push   ebp
   17b53:	mov    ebp,esp
   17b55:	push   ecx
   17b56:	push   ebx
   17b57:	push   esi
   17b58:	push   edi
   17b59:	mov    edi,ecx
   17b5b:	mov    eax,DWORD PTR [edi+0x4]
   17b5e:	mov    esi,DWORD PTR [eax+0x4]
   17b61:	mov    ebx,eax
   17b63:	mov    eax,ds:0x834f8
   17b68:	cmp    esi,eax
   17b6a:	mov    dl,0x1
   17b6c:	je     0x17b8a
   17b6e:	mov    ecx,DWORD PTR [ebp+0xc]
   17b71:	mov    ecx,DWORD PTR [ecx]
   17b73:	cmp    ecx,DWORD PTR [esi+0xc]
   17b76:	mov    ebx,esi
   17b78:	setl   dl
   17b7b:	test   dl,dl
   17b7d:	je     0x17b83
   17b7f:	mov    esi,DWORD PTR [esi]
   17b81:	jmp    0x17b86
   17b83:	mov    esi,DWORD PTR [esi+0x8]
   17b86:	cmp    esi,eax
   17b88:	jne    0x17b73
   17b8a:	cmp    BYTE PTR [edi+0x8],0x0
   17b8e:	je     0x17b95
   17b90:	push   DWORD PTR [ebp+0xc]
   17b93:	jmp    0x17bbb
   17b95:	test   dl,dl
   17b97:	mov    ecx,ebx
   17b99:	mov    DWORD PTR [ebp-0x4],ecx
   17b9c:	je     0x17bb0
   17b9e:	mov    eax,DWORD PTR [edi+0x4]
   17ba1:	cmp    ebx,DWORD PTR [eax]
   17ba3:	je     0x17b90
   17ba5:	lea    ecx,[ebp-0x4]
   17ba8:	call   0x1529c
   17bad:	mov    ecx,DWORD PTR [ebp-0x4]
   17bb0:	mov    edx,DWORD PTR [ecx+0xc]
   17bb3:	mov    eax,DWORD PTR [ebp+0xc]
   17bb6:	cmp    edx,DWORD PTR [eax]
   17bb8:	jge    0x17bd3
   17bba:	push   eax
   17bbb:	push   ebx
   17bbc:	push   esi
   17bbd:	lea    eax,[ebp+0xc]
   17bc0:	push   eax
   17bc1:	mov    ecx,edi
   17bc3:	call   0x175de
   17bc8:	mov    ecx,DWORD PTR [eax]
   17bca:	mov    eax,DWORD PTR [ebp+0x8]
   17bcd:	mov    BYTE PTR [eax+0x4],0x1
   17bd1:	jmp    0x17bda
   17bd3:	mov    eax,DWORD PTR [ebp+0x8]
   17bd6:	mov    BYTE PTR [eax+0x4],0x0
   17bda:	pop    edi
   17bdb:	pop    esi
   17bdc:	mov    DWORD PTR [eax],ecx
   17bde:	pop    ebx
   17bdf:	leave  
   17be0:	ret    0x8
   17be3:	int3   
   17be4:	push   ebp
   17be5:	mov    ebp,esp
   17be7:	push   ecx
   17be8:	push   esi
   17be9:	mov    esi,ecx
   17beb:	cmp    DWORD PTR [esi+0xc],0x0
   17bef:	mov    ecx,DWORD PTR [ebp+0xc]
   17bf2:	je     0x17c2c
   17bf4:	mov    eax,DWORD PTR [esi+0x4]
   17bf7:	cmp    ecx,DWORD PTR [eax]
   17bf9:	jne    0x17c2c
   17bfb:	cmp    DWORD PTR [ebp+0x10],eax
   17bfe:	jne    0x17c2c
   17c00:	push   DWORD PTR [eax+0x4]
   17c03:	mov    ecx,esi
   17c05:	call   0x1759e
   17c0a:	mov    ecx,DWORD PTR ds:0x834f8
   17c10:	mov    eax,DWORD PTR [esi+0x4]
   17c13:	mov    DWORD PTR [eax+0x4],ecx
   17c16:	mov    eax,DWORD PTR [esi+0x4]
   17c19:	and    DWORD PTR [esi+0xc],0x0
   17c1d:	mov    DWORD PTR [eax],eax
   17c1f:	mov    eax,DWORD PTR [esi+0x4]
   17c22:	mov    DWORD PTR [eax+0x8],eax
   17c25:	mov    eax,DWORD PTR [esi+0x4]
   17c28:	mov    ecx,DWORD PTR [eax]
   17c2a:	jmp    0x17c51
   17c2c:	cmp    ecx,DWORD PTR [ebp+0x10]
   17c2f:	je     0x17c51
   17c31:	push   edi
   17c32:	mov    edi,ecx
   17c34:	lea    ecx,[ebp+0xc]
   17c37:	call   0x15310
   17c3c:	push   edi
   17c3d:	lea    eax,[ebp-0x4]
   17c40:	push   eax
   17c41:	mov    ecx,esi
   17c43:	call   0x1733e
   17c48:	mov    ecx,DWORD PTR [ebp+0xc]
   17c4b:	cmp    ecx,DWORD PTR [ebp+0x10]
   17c4e:	jne    0x17c32
   17c50:	pop    edi
   17c51:	mov    eax,DWORD PTR [ebp+0x8]
   17c54:	mov    DWORD PTR [eax],ecx
   17c56:	pop    esi
   17c57:	leave  
   17c58:	ret    0xc
   17c5b:	int3   
   17c5c:	push   ebp
   17c5d:	mov    ebp,esp
   17c5f:	sub    esp,0x10
   17c62:	push   DWORD PTR [ebp+0x8]
   17c65:	lea    ecx,[ebp-0x10]
   17c68:	call   0x17a88
   17c6d:	push   DWORD PTR [ebp+0xc]
   17c70:	mov    ecx,DWORD PTR [ebp+0x8]
   17c73:	call   0x17aaa
   17c78:	mov    ecx,DWORD PTR [ebp+0xc]
   17c7b:	lea    eax,[ebp-0x10]
   17c7e:	push   eax
   17c7f:	call   0x17aaa
   17c84:	lea    ecx,[ebp-0x10]
   17c87:	call   0x179a4
   17c8c:	leave  
   17c8d:	ret    0x8
   17c90:	push   esi
   17c91:	push   edi
   17c92:	xor    edi,edi
   17c94:	push   edi
   17c95:	push   edi
   17c96:	push   edi
   17c97:	mov    esi,ecx
   17c99:	mov    eax,DWORD PTR [esi+0x10]
   17c9c:	push   edi
   17c9d:	push   eax
   17c9e:	call   DWORD PTR ds:0x1b060
   17ca4:	cmp    eax,edi
   17ca6:	jge    0x17cb7
   17ca8:	push   eax
   17ca9:	push   0x1b244
   17cae:	call   0x1a38a
   17cb3:	pop    ecx
   17cb4:	pop    ecx
   17cb5:	jmp    0x17ccd
   17cb7:	lea    eax,[esp+0xc]
   17cbb:	push   eax
   17cbc:	mov    ecx,esi
   17cbe:	call   0x16d3e
   17cc3:	push   edi
   17cc4:	push   DWORD PTR [esi+0x10]
   17cc7:	call   DWORD PTR ds:0x1b05c
   17ccd:	pop    edi
   17cce:	pop    esi
   17ccf:	ret    0x4
   17cd2:	push   ebp
   17cd3:	mov    ebp,esp
   17cd5:	sub    esp,0x28
   17cd8:	push   ebx
   17cd9:	lea    ecx,[ebp-0x28]
   17cdc:	call   0x127e8
   17ce1:	mov    ecx,DWORD PTR ds:0x83198
   17ce7:	lea    eax,[ebp-0x28]
   17cea:	push   eax
   17ceb:	push   DWORD PTR [ebp+0x8]
   17cee:	call   0x1794e
   17cf3:	test   al,al
   17cf5:	jne    0x17cfb
   17cf7:	xor    bl,bl
   17cf9:	jmp    0x17d39
   17cfb:	mov    ecx,DWORD PTR [ebp+0xc]
   17cfe:	lea    eax,[ebp-0x20]
   17d01:	push   eax
   17d02:	call   0x199c8
   17d07:	mov    ecx,DWORD PTR [ebp+0x10]
   17d0a:	lea    eax,[ebp-0x1c]
   17d0d:	push   eax
   17d0e:	call   0x199c8
   17d13:	mov    eax,DWORD PTR [ebp+0x14]
   17d16:	mov    ecx,DWORD PTR [ebp-0x18]
   17d19:	mov    DWORD PTR [eax],ecx
   17d1b:	mov    eax,DWORD PTR [ebp+0x18]
   17d1e:	mov    ecx,DWORD PTR [ebp-0x10]
   17d21:	mov    DWORD PTR [eax],ecx
   17d23:	mov    ecx,DWORD PTR [ebp-0xc]
   17d26:	mov    DWORD PTR [eax+0x4],ecx
   17d29:	mov    ecx,DWORD PTR [ebp-0x8]
   17d2c:	mov    eax,DWORD PTR [ebp+0x1c]
   17d2f:	mov    DWORD PTR [eax],ecx
   17d31:	mov    ecx,DWORD PTR [ebp-0x4]
   17d34:	mov    DWORD PTR [eax+0x4],ecx
   17d37:	mov    bl,0x1
   17d39:	lea    ecx,[ebp-0x28]
   17d3c:	call   0x14634
   17d41:	mov    al,bl
   17d43:	pop    ebx
   17d44:	leave  
   17d45:	ret    0x18
   17d48:	dec    ebx
   17d49:	gs push edi
   17d4b:	popa   
   17d4c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   17d54:	gs js  0x17da6
   17d57:	bound  ebp,QWORD PTR [edx+0x65]
   17d5a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   17d5e:	and    BYTE PTR [ebp+0x52],al
   17d61:	push   edx
   17d62:	dec    edi
   17d63:	push   edx
   17d64:	and    BYTE PTR [edx],bh
   17d66:	and    BYTE PTR [eax],dh
   17d68:	js     0x17d8f
   17d6a:	cmp    BYTE PTR cs:[eax+0xa],bh
   17d6e:	add    BYTE PTR [eax],al
   17d70:	add    BYTE PTR [eax],al
   17d72:	push   0x3c
   17d74:	push   0x1b280
   17d79:	call   0x1a338
   17d7e:	xor    esi,esi
   17d80:	push   esi
   17d81:	push   esi
   17d82:	push   esi
   17d83:	push   esi
   17d84:	push   0x8319c
   17d89:	call   DWORD PTR ds:0x1b060
   17d8f:	cmp    eax,esi
   17d91:	jge    0x17da5
   17d93:	push   eax
   17d94:	push   0x17d48
   17d99:	call   0x1a38a
   17d9e:	pop    ecx
   17d9f:	pop    ecx
   17da0:	jmp    0x17f1e
   17da5:	mov    DWORD PTR [ebp-0x4],esi
   17da8:	mov    BYTE PTR [ebp-0x19],0x0
   17dac:	push   0x17d6f
   17db1:	lea    ecx,[ebp-0x28]
   17db4:	call   0x19b20
   17db9:	push   0x17d70
   17dbe:	lea    ecx,[ebp-0x24]
   17dc1:	call   0x19b20
   17dc6:	push   0x17d71
   17dcb:	lea    ecx,[ebp-0x20]
   17dce:	call   0x19b20
   17dd3:	mov    esi,DWORD PTR [ebp+0xc]
   17dd6:	lea    eax,[ebp-0x4c]
   17dd9:	push   eax
   17dda:	lea    eax,[ebp-0x44]
   17ddd:	push   eax
   17dde:	lea    eax,[ebp-0x2c]
   17de1:	push   eax
   17de2:	lea    eax,[ebp-0x20]
   17de5:	push   eax
   17de6:	lea    eax,[ebp-0x24]
   17de9:	push   eax
   17dea:	test   BYTE PTR [esi+0x4],0x8
   17dee:	je     0x17dfa
   17df0:	push   DWORD PTR [ebp+0x8]
   17df3:	call   0x17cd2
   17df8:	jmp    0x17e06
   17dfa:	lea    eax,[ebp-0x28]
   17dfd:	push   eax
   17dfe:	push   DWORD PTR [ebp+0x8]
   17e01:	call   0x177ac
   17e06:	mov    BYTE PTR [ebp-0x19],al
   17e09:	test   al,al
   17e0b:	jne    0x17e19
   17e0d:	mov    DWORD PTR [esi+0x8],0x1
   17e14:	jmp    0x17ee2
   17e19:	mov    ecx,DWORD PTR [ebp+0x8]
   17e1c:	call   0x19a0a
   17e21:	mov    edi,eax
   17e23:	inc    edi
   17e24:	mov    DWORD PTR [ebp-0x34],edi
   17e27:	lea    ecx,[ebp-0x28]
   17e2a:	call   0x19a0a
   17e2f:	lea    ebx,[eax+edi*1+0x1]
   17e33:	mov    DWORD PTR [ebp-0x38],ebx
   17e36:	lea    ecx,[ebp-0x24]
   17e39:	call   0x19a0a
   17e3e:	lea    eax,[eax+ebx*1+0x1]
   17e42:	mov    DWORD PTR [ebp-0x30],eax
   17e45:	lea    ecx,[ebp-0x20]
   17e48:	call   0x19a0a
   17e4d:	mov    ecx,DWORD PTR [ebp-0x30]
   17e50:	lea    eax,[eax+ecx*1+0x1]
   17e54:	mov    DWORD PTR [ebp-0x3c],eax
   17e57:	cmp    eax,DWORD PTR [esi]
   17e59:	jbe    0x17e66
   17e5b:	mov    DWORD PTR [esi],eax
   17e5d:	mov    DWORD PTR [esi+0x8],0x2
   17e64:	jmp    0x17ee2
   17e66:	and    DWORD PTR [esi+0x8],0x0
   17e6a:	mov    eax,DWORD PTR [ebp-0x2c]
   17e6d:	mov    DWORD PTR [esi+0xc],eax
   17e70:	mov    eax,DWORD PTR [ebp-0x44]
   17e73:	mov    DWORD PTR [esi+0x10],eax
   17e76:	mov    eax,DWORD PTR [ebp-0x40]
   17e79:	mov    DWORD PTR [esi+0x14],eax
   17e7c:	mov    eax,DWORD PTR [ebp-0x4c]
   17e7f:	mov    DWORD PTR [esi+0x18],eax
   17e82:	mov    eax,DWORD PTR [ebp-0x48]
   17e85:	mov    DWORD PTR [esi+0x1c],eax
   17e88:	mov    ecx,DWORD PTR [ebp+0x8]
   17e8b:	call   0x19a06
   17e90:	lea    ecx,[esi+0x20]
   17e93:	mov    dl,BYTE PTR [eax]
   17e95:	mov    BYTE PTR [ecx],dl
   17e97:	inc    eax
   17e98:	inc    ecx
   17e99:	test   dl,dl
   17e9b:	jne    0x17e93
   17e9d:	lea    ecx,[ebp-0x28]
   17ea0:	call   0x19a06
   17ea5:	lea    edx,[edi+esi*1+0x20]
   17ea9:	mov    cl,BYTE PTR [eax]
   17eab:	mov    BYTE PTR [edx],cl
   17ead:	inc    eax
   17eae:	inc    edx
   17eaf:	test   cl,cl
   17eb1:	jne    0x17ea9
   17eb3:	lea    ecx,[ebp-0x24]
   17eb6:	call   0x19a06
   17ebb:	lea    edx,[ebx+esi*1+0x20]
   17ebf:	mov    cl,BYTE PTR [eax]
   17ec1:	mov    BYTE PTR [edx],cl
   17ec3:	inc    eax
   17ec4:	inc    edx
   17ec5:	test   cl,cl
   17ec7:	jne    0x17ebf
   17ec9:	lea    ecx,[ebp-0x20]
   17ecc:	call   0x19a06
   17ed1:	mov    ecx,DWORD PTR [ebp-0x30]
   17ed4:	lea    edx,[ecx+esi*1+0x20]
   17ed8:	mov    cl,BYTE PTR [eax]
   17eda:	mov    BYTE PTR [edx],cl
   17edc:	inc    eax
   17edd:	inc    edx
   17ede:	test   cl,cl
   17ee0:	jne    0x17ed8
   17ee2:	lea    ecx,[ebp-0x20]
   17ee5:	call   0x199be
   17eea:	lea    ecx,[ebp-0x24]
   17eed:	call   0x199be
   17ef2:	lea    ecx,[ebp-0x28]
   17ef5:	call   0x199be
   17efa:	jmp    0x17f0d
   17efc:	xor    eax,eax
   17efe:	inc    eax
   17eff:	ret    
   17f00:	mov    esp,DWORD PTR [ebp-0x18]
   17f03:	mov    eax,DWORD PTR [ebp+0xc]
   17f06:	mov    DWORD PTR [eax+0x8],0x4
   17f0d:	or     DWORD PTR [ebp-0x4],0xffffffff
   17f11:	push   0x0
   17f13:	push   0x8319c
   17f18:	call   DWORD PTR ds:0x1b05c
   17f1e:	call   0x1a373
   17f23:	ret    0x8
   17f26:	push   ebp
   17f27:	mov    ebp,esp
   17f29:	sub    esp,0x10
   17f2c:	mov    eax,DWORD PTR [ebp+0x8]
   17f2f:	mov    eax,DWORD PTR [eax]
   17f31:	and    DWORD PTR [ebp-0x4],0x0
   17f35:	mov    DWORD PTR [ebp-0x8],eax
   17f38:	lea    eax,[ebp-0x8]
   17f3b:	push   eax
   17f3c:	lea    eax,[ebp-0x10]
   17f3f:	push   eax
   17f40:	call   0x179ee
   17f45:	mov    eax,DWORD PTR [eax]
   17f47:	add    eax,0x10
   17f4a:	leave  
   17f4b:	ret    0x4
   17f4e:	push   ebp
   17f4f:	mov    ebp,esp
   17f51:	sub    esp,0x60
   17f54:	push   esi
   17f55:	mov    esi,ecx
   17f57:	lea    ecx,[ebp-0x30]
   17f5a:	call   0x127e8
   17f5f:	push   eax
   17f60:	push   DWORD PTR [ebp+0x8]
   17f63:	lea    ecx,[ebp-0x60]
   17f66:	call   0x154f2
   17f6b:	push   eax
   17f6c:	lea    eax,[ebp-0x8]
   17f6f:	push   eax
   17f70:	mov    ecx,esi
   17f72:	call   0x17a36
   17f77:	mov    esi,DWORD PTR [eax]
   17f79:	lea    ecx,[ebp-0x58]
   17f7c:	call   0x14634
   17f81:	lea    ecx,[ebp-0x60]
   17f84:	call   0x199be
   17f89:	lea    ecx,[ebp-0x30]
   17f8c:	call   0x14634
   17f91:	lea    eax,[esi+0x18]
   17f94:	pop    esi
   17f95:	leave  
   17f96:	ret    0x4
   17f99:	int3   
   17f9a:	push   ebp
   17f9b:	mov    ebp,esp
   17f9d:	sub    esp,0x20
   17fa0:	push   esi
   17fa1:	mov    esi,ecx
   17fa3:	mov    eax,DWORD PTR [esi+0x20]
   17fa6:	mov    ecx,DWORD PTR [esi+0x24]
   17fa9:	add    ecx,eax
   17fab:	cmp    DWORD PTR [esi+0xc],ecx
   17fae:	jbe    0x18040
   17fb4:	test   eax,eax
   17fb6:	mov    ecx,DWORD PTR [esi+0x14]
   17fb9:	mov    ecx,DWORD PTR [ecx]
   17fbb:	push   edi
   17fbc:	mov    DWORD PTR [ebp-0x4],ecx
   17fbf:	je     0x17fce
   17fc1:	mov    edi,eax
   17fc3:	lea    ecx,[ebp-0x4]
   17fc6:	call   0x156cc
   17fcb:	dec    edi
   17fcc:	jne    0x17fc3
   17fce:	mov    eax,DWORD PTR [ebp-0x4]
   17fd1:	mov    edi,DWORD PTR [eax+0xc]
   17fd4:	lea    ecx,[ebp-0x20]
   17fd7:	mov    BYTE PTR [ebp-0x18],0x0
   17fdb:	call   0x16366
   17fe0:	mov    eax,DWORD PTR [esi+0x4]
   17fe3:	mov    ecx,DWORD PTR [eax]
   17fe5:	cmp    ecx,eax
   17fe7:	mov    DWORD PTR [ebp-0x4],ecx
   17fea:	je     0x1802a
   17fec:	lea    edx,[ecx+0x40]
   17fef:	mov    eax,DWORD PTR [edx]
   17ff1:	cmp    eax,edi
   17ff3:	jae    0x18009
   17ff5:	push   ecx
   17ff6:	lea    eax,[ebp-0x8]
   17ff9:	push   eax
   17ffa:	mov    ecx,esi
   17ffc:	call   0x1667a
   18001:	mov    ecx,DWORD PTR [ebp-0x8]
   18004:	mov    DWORD PTR [ebp-0x4],ecx
   18007:	jmp    0x18025
   18009:	sub    eax,edi
   1800b:	mov    DWORD PTR [edx],eax
   1800d:	push   edx
   1800e:	lea    eax,[ebp-0x10]
   18011:	push   eax
   18012:	lea    ecx,[ebp-0x20]
   18015:	call   0x17980
   1801a:	lea    ecx,[ebp-0x4]
   1801d:	call   0x15662
   18022:	mov    ecx,DWORD PTR [ebp-0x4]
   18025:	cmp    ecx,DWORD PTR [esi+0x4]
   18028:	jne    0x17fec
   1802a:	lea    eax,[ebp-0x20]
   1802d:	push   eax
   1802e:	add    esi,0x10
   18031:	push   esi
   18032:	call   0x17c5c
   18037:	lea    ecx,[ebp-0x20]
   1803a:	call   0x179a4
   1803f:	pop    edi
   18040:	pop    esi
   18041:	leave  
   18042:	ret    
   18043:	int3   
   18044:	push   ecx
   18045:	mov    eax,DWORD PTR [ecx+0x4]
   18048:	mov    edx,DWORD PTR [eax]
   1804a:	push   eax
   1804b:	push   edx
   1804c:	lea    eax,[esp+0x8]
   18050:	push   eax
   18051:	call   0x17ada
   18056:	pop    ecx
   18057:	ret    
   18058:	push   ebp
   18059:	mov    ebp,esp
   1805b:	push   ecx
   1805c:	push   ecx
   1805d:	push   DWORD PTR [ebp+0xc]
   18060:	lea    eax,[ebp-0x8]
   18063:	push   eax
   18064:	call   0x17b52
   18069:	mov    eax,DWORD PTR [ebp+0x8]
   1806c:	mov    ecx,DWORD PTR [ebp-0x8]
   1806f:	mov    DWORD PTR [eax],ecx
   18071:	mov    cl,BYTE PTR [ebp-0x4]
   18074:	mov    BYTE PTR [eax+0x4],cl
   18077:	leave  
   18078:	ret    0x8
   1807b:	int3   
   1807c:	push   ebp
   1807d:	mov    ebp,esp
   1807f:	push   ecx
   18080:	push   ecx
   18081:	push   esi
   18082:	push   DWORD PTR [ebp+0x8]
   18085:	lea    eax,[ebp-0x8]
   18088:	push   eax
   18089:	mov    esi,ecx
   1808b:	call   0x16050
   18090:	and    DWORD PTR [ebp+0x8],0x0
   18094:	lea    eax,[ebp+0x8]
   18097:	push   eax
   18098:	push   DWORD PTR [ebp-0x4]
   1809b:	push   DWORD PTR [ebp-0x8]
   1809e:	call   0x15b88
   180a3:	add    esp,0xc
   180a6:	push   DWORD PTR [ebp-0x4]
   180a9:	lea    eax,[ebp-0x4]
   180ac:	push   DWORD PTR [ebp-0x8]
   180af:	mov    ecx,esi
   180b1:	push   eax
   180b2:	call   0x17be4
   180b7:	mov    eax,DWORD PTR [ebp+0x8]
   180ba:	pop    esi
   180bb:	leave  
   180bc:	ret    0x4
   180bf:	int3   
   180c0:	push   ecx
   180c1:	mov    eax,DWORD PTR [ecx+0x4]
   180c4:	mov    edx,DWORD PTR [eax]
   180c6:	push   eax
   180c7:	push   edx
   180c8:	lea    eax,[esp+0x8]
   180cc:	push   eax
   180cd:	call   0x17be4
   180d2:	pop    ecx
   180d3:	ret    
   180d4:	push   esi
   180d5:	mov    esi,ecx
   180d7:	push   edi
   180d8:	mov    BYTE PTR [esi+0x8],0x0
   180dc:	call   0x15f0c
   180e1:	lea    edi,[esi+0x10]
   180e4:	mov    ecx,edi
   180e6:	call   0x14faa
   180eb:	push   0x0
   180ed:	push   DWORD PTR [edi]
   180ef:	call   DWORD PTR ds:0x1b0c0
   180f5:	pop    edi
   180f6:	mov    eax,esi
   180f8:	pop    esi
   180f9:	ret    
   180fa:	push   esi
   180fb:	push   edi
   180fc:	xor    edi,edi
   180fe:	push   edi
   180ff:	push   edi
   18100:	push   edi
   18101:	mov    esi,ecx
   18103:	mov    eax,DWORD PTR [esi+0x10]
   18106:	push   edi
   18107:	push   eax
   18108:	call   DWORD PTR ds:0x1b060
   1810e:	cmp    eax,edi
   18110:	jge    0x18121
   18112:	push   eax
   18113:	push   0x1b244
   18118:	call   0x1a38a
   1811d:	pop    ecx
   1811e:	pop    ecx
   1811f:	jmp    0x1813d
   18121:	lea    eax,[esp+0xc]
   18125:	push   eax
   18126:	mov    ecx,esi
   18128:	call   0x17f26
   1812d:	mov    ecx,DWORD PTR [esp+0x10]
   18131:	push   edi
   18132:	mov    DWORD PTR [eax],ecx
   18134:	push   DWORD PTR [esi+0x10]
   18137:	call   DWORD PTR ds:0x1b05c
   1813d:	pop    edi
   1813e:	pop    esi
   1813f:	ret    0x8
   18142:	dec    edi
   18143:	outs   dx,BYTE PTR ds:[esi]
   18144:	inc    ebx
   18145:	jb     0x181ac
   18147:	popa   
   18148:	je     0x181af
   1814a:	push   eax
   1814b:	jb     0x181bc
   1814d:	arpl   WORD PTR [ebp+0x73],sp
   18150:	jae    0x181a0
   18152:	outs   dx,DWORD PTR ds:[esi]
   18153:	je     0x181be
   18155:	data16 jns 0x18178
   18158:	dec    ecx
   18159:	push   edx
   1815a:	push   ecx
   1815b:	dec    esp
   1815c:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   18160:	and    BYTE PTR [eax+0x69],ch
   18163:	addr16 push 0x30203a20
   18169:	js     0x18190
   1816b:	cmp    BYTE PTR cs:[eax+0xa],bh
   1816f:	add    BYTE PTR [eax],al
   18171:	add    BYTE PTR [edx+0x77],bl
   18174:	dec    edi
   18175:	jo     0x181dc
   18177:	outs   dx,BYTE PTR ds:[esi]
   18178:	push   eax
   18179:	jb     0x181ea
   1817b:	arpl   WORD PTR [ebp+0x73],sp
   1817e:	jae    0x181a8
   18180:	sub    DWORD PTR [eax],esp
   18182:	inc    ebp
   18183:	push   edx
   18184:	push   edx
   18185:	dec    edi
   18186:	push   edx
   18187:	and    BYTE PTR [edx],bh
   18189:	and    BYTE PTR [eax],dh
   1818b:	js     0x181b2
   1818d:	cmp    BYTE PTR cs:[eax+0xa],bh
   18191:	add    BYTE PTR [edi+0x65],al
   18194:	je     0x181e6
   18196:	jb     0x18207
   18198:	arpl   WORD PTR [ebp+0x73],sp
   1819b:	jae    0x181e6
   1819d:	ins    DWORD PTR es:[edi],dx
   1819e:	popa   
   1819f:	addr16 gs dec esi
   181a2:	popa   
   181a3:	ins    DWORD PTR es:[edi],dx
   181a4:	sub    BYTE PTR gs:[ecx],ch
   181a7:	and    BYTE PTR [ebp+0x52],al
   181aa:	push   edx
   181ab:	dec    edi
   181ac:	push   edx
   181ad:	and    BYTE PTR [edx],bh
   181af:	and    BYTE PTR [eax],dh
   181b1:	js     0x181d8
   181b3:	cmp    BYTE PTR cs:[eax+0xa],bh
   181b7:	add    BYTE PTR [eax],al
   181b9:	add    BYTE PTR [edi+0x6e],cl
   181bc:	inc    ebx
   181bd:	jb     0x18224
   181bf:	popa   
   181c0:	je     0x18227
   181c2:	push   eax
   181c3:	jb     0x18234
   181c5:	arpl   WORD PTR [ebp+0x73],sp
   181c8:	jae    0x18218
   181ca:	outs   dx,DWORD PTR ds:[esi]
   181cb:	je     0x18236
   181cd:	data16 jns 0x1820a
   181d0:	and    BYTE PTR [eax],dh
   181d2:	js     0x181f9
   181d4:	cmp    BYTE PTR cs:[eax+0x2c],bh
   181d8:	and    BYTE PTR ds:0xa2053,ah
   181de:	ins    BYTE PTR es:[edi],dx
   181df:	add    BYTE PTR [ebx+0x0],dh
   181e2:	popa   
   181e3:	add    BYTE PTR [ebx+0x0],dh
   181e6:	jae    0x181e8
   181e8:	add    BYTE PTR cs:[ebp+0x0],ah
   181ec:	js     0x181ee
   181ee:	add    BYTE PTR gs:[eax],al
   181f1:	add    BYTE PTR [eax+0x38],ch
   181f4:	add    eax,DWORD PTR [eax]
   181f6:	add    BYTE PTR [eax-0x70],ch
   181f9:	mov    dl,0x1
   181fb:	add    al,ch
   181fd:	aaa    
   181fe:	and    DWORD PTR [eax],eax
   18200:	add    BYTE PTR [ecx+0x83118],ah
   18206:	mov    DWORD PTR [ebp-0x1c],eax
   18209:	call   DWORD PTR ds:0x1b008
   1820f:	xor    ebx,ebx
   18211:	cmp    al,bl
   18213:	jbe    0x18225
   18215:	movzx  eax,al
   18218:	push   eax
   18219:	push   0x18142
   1821e:	call   0x1a38a
   18223:	pop    ecx
   18224:	pop    ecx
   18225:	cmp    BYTE PTR [ebp+0x10],bl
   18228:	jne    0x1826a
   1822a:	push   DWORD PTR [ebp+0xc]
   1822d:	mov    ecx,DWORD PTR ds:0x83194
   18233:	call   0x1774e
   18238:	mov    esi,eax
   1823a:	push   DWORD PTR [ebp+0xc]
   1823d:	mov    ecx,DWORD PTR ds:0x83194
   18243:	call   0x17c90
   18248:	mov    eax,esi
   1824a:	dec    eax
   1824b:	je     0x18267
   1824d:	dec    eax
   1824e:	je     0x18263
   18250:	dec    eax
   18251:	jne    0x18453
   18257:	push   0xa
   18259:	call   0x146ca
   1825e:	jmp    0x18453
   18263:	push   0x2
   18265:	jmp    0x18259
   18267:	push   ebx
   18268:	jmp    0x18259
   1826a:	mov    DWORD PTR [ebp-0x320],ebx
   18270:	xor    eax,eax
   18272:	lea    edi,[ebp-0x326]
   18278:	stos   DWORD PTR es:[edi],eax
   18279:	stos   WORD PTR es:[edi],ax
   1827b:	mov    WORD PTR [ebp-0x21c],bx
   18282:	push   0x7f
   18284:	pop    ecx
   18285:	xor    eax,eax
   18287:	lea    edi,[ebp-0x21a]
   1828d:	rep stos DWORD PTR es:[edi],eax
   1828f:	lea    eax,[ebp-0x21c]
   18295:	mov    DWORD PTR [ebp-0x324],eax
   1829b:	mov    WORD PTR [ebp-0x328],bx
   182a2:	mov    WORD PTR [ebp-0x326],0x1fe
   182ab:	mov    DWORD PTR [ebp-0x348],0x18
   182b5:	mov    DWORD PTR [ebp-0x344],ebx
   182bb:	mov    DWORD PTR [ebp-0x33c],0x200
   182c5:	mov    DWORD PTR [ebp-0x340],ebx
   182cb:	mov    DWORD PTR [ebp-0x338],ebx
   182d1:	mov    DWORD PTR [ebp-0x334],ebx
   182d7:	mov    esi,DWORD PTR [ebp+0xc]
   182da:	mov    DWORD PTR [ebp-0x330],esi
   182e0:	mov    DWORD PTR [ebp-0x32c],ebx
   182e6:	lea    eax,[ebp-0x330]
   182ec:	push   eax
   182ed:	lea    eax,[ebp-0x348]
   182f3:	push   eax
   182f4:	push   0x1f0fff
   182f9:	lea    eax,[ebp-0x320]
   182ff:	push   eax
   18300:	call   DWORD PTR ds:0x1b070
   18306:	cmp    eax,ebx
   18308:	jge    0x1831c
   1830a:	push   eax
   1830b:	push   0x18172
   18310:	call   0x1a38a
   18315:	pop    ecx
   18316:	pop    ecx
   18317:	jmp    0x18453
   1831c:	lea    eax,[ebp-0x328]
   18322:	push   eax
   18323:	push   DWORD PTR [ebp-0x320]
   18329:	call   0x128c0
   1832e:	cmp    eax,ebx
   18330:	jge    0x18344
   18332:	push   eax
   18333:	push   0x18192
   18338:	call   0x1a38a
   1833d:	pop    ecx
   1833e:	pop    ecx
   1833f:	jmp    0x18447
   18344:	movzx  eax,WORD PTR [ebp-0x328]
   1834b:	shr    eax,1
   1834d:	mov    WORD PTR [ebp+eax*2-0x21c],bx
   18355:	lea    eax,[ebp-0x21c]
   1835b:	push   eax
   1835c:	push   DWORD PTR [ebp-0x320]
   18362:	call   0x1297a
   18367:	push   eax
   18368:	push   0x181ba
   1836d:	call   0x1a38a
   18372:	add    esp,0xc
   18375:	lea    eax,[ebp-0x21c]
   1837b:	push   eax
   1837c:	call   0x12cc0
   18381:	cmp    eax,ebx
   18383:	je     0x183b0
   18385:	push   eax
   18386:	push   esi
   18387:	mov    ecx,DWORD PTR ds:0x83194
   1838d:	call   0x180fa
   18392:	push   DWORD PTR [ebp-0x320]
   18398:	push   DWORD PTR [ebp-0x320]
   1839e:	call   0x1297a
   183a3:	push   eax
   183a4:	push   esi
   183a5:	push   ebx
   183a6:	call   0x1542e
   183ab:	jmp    0x18447
   183b0:	push   0x181de
   183b5:	lea    eax,[ebp-0x328]
   183bb:	push   eax
   183bc:	call   0x12d02
   183c1:	test   al,al
   183c3:	je     0x1841a
   183c5:	cmp    DWORD PTR ds:0x83510,ebx
   183cb:	jne    0x183f5
   183cd:	mov    DWORD PTR ds:0x83510,0x1
   183d7:	mov    DWORD PTR [ebp-0x4],ebx
   183da:	call   0x14d68
   183df:	or     DWORD PTR [ebp-0x4],0xffffffff
   183e3:	jmp    0x183f5
   183e5:	xor    eax,eax
   183e7:	inc    eax
   183e8:	ret    
   183e9:	mov    esp,DWORD PTR [ebp-0x18]
   183ec:	or     DWORD PTR [ebp-0x4],0xffffffff
   183f0:	xor    ebx,ebx
   183f2:	mov    esi,DWORD PTR [ebp+0xc]
   183f5:	cmp    DWORD PTR ds:0x833d8,ebx
   183fb:	jne    0x18403
   183fd:	mov    DWORD PTR ds:0x833d8,esi
   18403:	push   DWORD PTR [ebp-0x320]
   18409:	push   DWORD PTR [ebp-0x320]
   1840f:	call   0x1297a
   18414:	push   eax
   18415:	push   esi
   18416:	push   0x1
   18418:	jmp    0x183a6
   1841a:	lea    eax,[ebp-0x31c]
   18420:	push   eax
   18421:	call   0x13228
   18426:	test   al,al
   18428:	je     0x18447
   1842a:	lea    eax,[ebp-0x31c]
   18430:	push   eax
   18431:	lea    eax,[ebp-0x328]
   18437:	push   eax
   18438:	call   0x12d02
   1843d:	test   al,al
   1843f:	je     0x18447
   18441:	push   esi
   18442:	call   0x13020
   18447:	push   DWORD PTR [ebp-0x320]
   1844d:	call   DWORD PTR ds:0x1b10c
   18453:	mov    ecx,DWORD PTR [ebp-0x1c]
   18456:	call   0x1a327
   1845b:	call   0x1a373
   18460:	ret    0xc
   18463:	int3   
   18464:	push   ecx
   18465:	cli    
   18466:	mov    eax,cr0
   18469:	mov    DWORD PTR [esp],eax
   1846c:	and    eax,0xfffeffff
   18471:	mov    cr0,eax
   18474:	push   0x14480
   18479:	push   DWORD PTR ds:0x8332c
   1847f:	call   0x19c0c
   18484:	push   0x0
   18486:	push   0x181f2
   1848b:	mov    ds:0x83330,eax
   18490:	call   0x1a3a2
   18495:	push   0x14322
   1849a:	call   0x1a39c
   1849f:	mov    eax,DWORD PTR [esp]
   184a2:	mov    cr0,eax
   184a5:	sti    
   184a6:	pop    ecx
   184a7:	ret    
   184a8:	push   ebp
   184a9:	mov    ebp,esp
   184ab:	push   DWORD PTR [ebp+0xc]
   184ae:	mov    ecx,DWORD PTR ds:0x83324
   184b4:	call   0x17a5a
   184b9:	test   eax,eax
   184bb:	jne    0x184ca
   184bd:	test   BYTE PTR [ebp+0x8],0x1
   184c1:	jne    0x184ca
   184c3:	xor    al,al
   184c5:	jmp    0x185f4
   184ca:	mov    ecx,DWORD PTR ds:0x83324
   184d0:	push   ebx
   184d1:	push   esi
   184d2:	push   DWORD PTR [ebp+0xc]
   184d5:	call   0x17f4e
   184da:	test   BYTE PTR [ebp+0x8],0x1
   184de:	mov    esi,eax
   184e0:	je     0x18513
   184e2:	mov    eax,DWORD PTR [ebp+0x1c]
   184e5:	push   DWORD PTR [ebp+0xc]
   184e8:	mov    ecx,esi
   184ea:	mov    DWORD PTR [esi+0x10],eax
   184ed:	call   0x199c8
   184f2:	push   DWORD PTR [ebp+0x10]
   184f5:	lea    ecx,[esi+0x4]
   184f8:	call   0x199c8
   184fd:	push   DWORD PTR [ebp+0x14]
   18500:	lea    ecx,[esi+0x8]
   18503:	call   0x199c8
   18508:	push   DWORD PTR [ebp+0x18]
   1850b:	lea    ecx,[esi+0xc]
   1850e:	call   0x199c8
   18513:	mov    eax,DWORD PTR [ebp+0x8]
   18516:	mov    ebx,DWORD PTR [ebp+0x20]
   18519:	and    eax,0x2
   1851c:	mov    DWORD PTR [ebp+0x10],eax
   1851f:	je     0x1852c
   18521:	mov    eax,DWORD PTR [ebx]
   18523:	mov    DWORD PTR [esi+0x18],eax
   18526:	mov    eax,DWORD PTR [ebx+0x4]
   18529:	mov    DWORD PTR [esi+0x1c],eax
   1852c:	mov    eax,DWORD PTR [ebp+0x8]
   1852f:	and    eax,0x4
   18532:	mov    DWORD PTR [ebp+0x14],eax
   18535:	je     0x18545
   18537:	mov    eax,DWORD PTR [ebp+0x24]
   1853a:	mov    ecx,DWORD PTR [eax]
   1853c:	mov    DWORD PTR [esi+0x20],ecx
   1853f:	mov    eax,DWORD PTR [eax+0x4]
   18542:	mov    DWORD PTR [esi+0x24],eax
   18545:	test   BYTE PTR [ebp+0x8],0x10
   18549:	je     0x185f0
   1854f:	lea    ecx,[esi+0x4]
   18552:	mov    DWORD PTR [ebp+0x1c],ecx
   18555:	call   0x19a0a
   1855a:	test   eax,eax
   1855c:	jbe    0x185f0
   18562:	mov    eax,ds:0x83324
   18567:	mov    eax,DWORD PTR [eax+0x4]
   1856a:	mov    esi,DWORD PTR [eax]
   1856c:	cmp    esi,eax
   1856e:	mov    DWORD PTR [ebp+0x8],esi
   18571:	je     0x185f0
   18573:	push   edi
   18574:	push   DWORD PTR [ebp+0xc]
   18577:	lea    edi,[esi+0x10]
   1857a:	push   edi
   1857b:	call   0x19ade
   18580:	test   al,al
   18582:	je     0x185da
   18584:	push   DWORD PTR [ebp+0x1c]
   18587:	add    esi,0x1c
   1858a:	push   esi
   1858b:	call   0x19a9c
   18590:	test   al,al
   18592:	je     0x185da
   18594:	cmp    DWORD PTR [ebp+0x10],0x0
   18598:	je     0x185b4
   1859a:	mov    esi,DWORD PTR [ebx]
   1859c:	mov    ecx,DWORD PTR ds:0x83324
   185a2:	mov    ebx,DWORD PTR [ebx+0x4]
   185a5:	push   edi
   185a6:	call   0x17f4e
   185ab:	mov    DWORD PTR [eax+0x18],esi
   185ae:	mov    DWORD PTR [eax+0x1c],ebx
   185b1:	mov    ebx,DWORD PTR [ebp+0x20]
   185b4:	cmp    DWORD PTR [ebp+0x14],0x0
   185b8:	je     0x185da
   185ba:	mov    eax,DWORD PTR [ebp+0x24]
   185bd:	mov    esi,DWORD PTR [eax]
   185bf:	mov    eax,DWORD PTR [eax+0x4]
   185c2:	mov    ecx,DWORD PTR ds:0x83324
   185c8:	push   edi
   185c9:	mov    DWORD PTR [ebp+0x18],eax
   185cc:	call   0x17f4e
   185d1:	mov    DWORD PTR [eax+0x20],esi
   185d4:	mov    esi,DWORD PTR [ebp+0x18]
   185d7:	mov    DWORD PTR [eax+0x24],esi
   185da:	lea    ecx,[ebp+0x8]
   185dd:	call   0x15ab8
   185e2:	mov    esi,DWORD PTR [ebp+0x8]
   185e5:	mov    eax,ds:0x83324
   185ea:	cmp    esi,DWORD PTR [eax+0x4]
   185ed:	jne    0x18574
   185ef:	pop    edi
   185f0:	pop    esi
   185f1:	mov    al,0x1
   185f3:	pop    ebx
   185f4:	pop    ebp
   185f5:	ret    0x20
   185f8:	push   esi
   185f9:	mov    esi,ecx
   185fb:	mov    BYTE PTR [esi+0x8],0x0
   185ff:	call   0x168d8
   18604:	lea    ecx,[esi+0x10]
   18607:	mov    BYTE PTR [ecx+0x8],0x0
   1860b:	call   0x16366
   18610:	mov    eax,DWORD PTR [esp+0x8]
   18614:	mov    DWORD PTR [esi+0x20],eax
   18617:	mov    eax,DWORD PTR [esp+0xc]
   1861b:	mov    DWORD PTR [esi+0x24],eax
   1861e:	mov    eax,esi
   18620:	pop    esi
   18621:	ret    0x8
   18624:	push   ebp
   18625:	lea    ebp,[esp-0x70]
   18629:	sub    esp,0xac
   1862f:	push   ebx
   18630:	push   esi
   18631:	mov    esi,ecx
   18633:	call   0x17f9a
   18638:	push   DWORD PTR [ebp+0x78]
   1863b:	lea    eax,[ebp+0x6c]
   1863e:	push   eax
   1863f:	mov    ecx,esi
   18641:	call   0x15f78
   18646:	mov    ebx,DWORD PTR [ebp+0x6c]
   18649:	cmp    ebx,DWORD PTR [esi+0x4]
   1864c:	je     0x18699
   1864e:	mov    eax,DWORD PTR [esi+0x14]
   18651:	push   edi
   18652:	lea    ecx,[ebp+0x78]
   18655:	mov    DWORD PTR [ebp+0x78],eax
   18658:	call   0x15c72
   1865d:	mov    edi,DWORD PTR [eax]
   1865f:	lea    eax,[ebx+0x40]
   18662:	add    esi,0x10
   18665:	inc    edi
   18666:	push   eax
   18667:	mov    ecx,esi
   18669:	mov    DWORD PTR [ebp+0x78],edi
   1866c:	mov    DWORD PTR [ebp+0x6c],eax
   1866f:	call   0x16e8c
   18674:	lea    eax,[ebp+0x78]
   18677:	push   eax
   18678:	lea    eax,[ebp+0x64]
   1867b:	push   eax
   1867c:	mov    ecx,esi
   1867e:	call   0x17980
   18683:	push   DWORD PTR [ebp+0x7c]
   18686:	lea    ecx,[ebx+0x18]
   18689:	call   0x14fd2
   1868e:	mov    eax,DWORD PTR [ebp+0x6c]
   18691:	mov    DWORD PTR [eax],edi
   18693:	pop    edi
   18694:	jmp    0x1872c
   18699:	lea    ecx,[ebp+0x34]
   1869c:	call   0x127e8
   186a1:	xor    eax,eax
   186a3:	cmp    DWORD PTR [esi+0x1c],eax
   186a6:	je     0x186b9
   186a8:	mov    eax,DWORD PTR [esi+0x14]
   186ab:	lea    ecx,[ebp+0x6c]
   186ae:	mov    DWORD PTR [ebp+0x6c],eax
   186b1:	call   0x15c72
   186b6:	mov    eax,DWORD PTR [eax]
   186b8:	inc    eax
   186b9:	push   DWORD PTR [ebp+0x7c]
   186bc:	lea    ecx,[ebp+0x34]
   186bf:	mov    DWORD PTR [ebp+0x6c],eax
   186c2:	mov    DWORD PTR [ebp+0x5c],eax
   186c5:	call   0x14fd2
   186ca:	lea    eax,[ebp+0x34]
   186cd:	push   eax
   186ce:	push   DWORD PTR [ebp+0x78]
   186d1:	lea    ecx,[ebp-0x3c]
   186d4:	call   0x15398
   186d9:	lea    eax,[ebp-0x3c]
   186dc:	push   eax
   186dd:	lea    ecx,[ebp-0x4]
   186e0:	call   0x159be
   186e5:	lea    eax,[ebp-0x4]
   186e8:	push   eax
   186e9:	lea    eax,[ebp+0x64]
   186ec:	push   eax
   186ed:	mov    ecx,esi
   186ef:	call   0x17a12
   186f4:	lea    ecx,[ebp+0x4]
   186f7:	call   0x14634
   186fc:	lea    ecx,[ebp-0x4]
   186ff:	call   0x199be
   18704:	lea    ecx,[ebp-0x34]
   18707:	call   0x14634
   1870c:	lea    ecx,[ebp-0x3c]
   1870f:	call   0x199be
   18714:	lea    eax,[ebp+0x6c]
   18717:	push   eax
   18718:	lea    eax,[ebp+0x64]
   1871b:	push   eax
   1871c:	lea    ecx,[esi+0x10]
   1871f:	call   0x17980
   18724:	lea    ecx,[ebp+0x34]
   18727:	call   0x14634
   1872c:	pop    esi
   1872d:	pop    ebx
   1872e:	add    ebp,0x70
   18731:	leave  
   18732:	ret    0x8
   18735:	int3   
   18736:	push   ebp
   18737:	mov    ebp,esp
   18739:	sub    esp,0x14
   1873c:	and    DWORD PTR [ebp-0x4],0x0
   18740:	push   esi
   18741:	lea    eax,[ebp-0x4]
   18744:	push   eax
   18745:	push   DWORD PTR [ebp+0x8]
   18748:	mov    esi,ecx
   1874a:	lea    ecx,[ebp-0xc]
   1874d:	call   0x15510
   18752:	push   eax
   18753:	lea    eax,[ebp-0x14]
   18756:	push   eax
   18757:	mov    ecx,esi
   18759:	call   0x18058
   1875e:	mov    ecx,DWORD PTR [ebp-0x8]
   18761:	test   ecx,ecx
   18763:	mov    esi,DWORD PTR [eax]
   18765:	je     0x1876c
   18767:	call   0x12860
   1876c:	lea    eax,[esi+0x10]
   1876f:	pop    esi
   18770:	leave  
   18771:	ret    0x4
   18774:	add    BYTE PTR [eax],al
   18776:	push   ebp
   18777:	mov    ebp,esp
   18779:	sub    esp,0x28
   1877c:	push   ebx
   1877d:	push   esi
   1877e:	lea    ecx,[ebp-0x28]
   18781:	call   0x127e8
   18786:	mov    esi,DWORD PTR [ebp+0xc]
   18789:	mov    ecx,DWORD PTR ds:0x83198
   1878f:	lea    eax,[ebp-0x28]
   18792:	push   eax
   18793:	push   esi
   18794:	call   0x1794e
   18799:	test   al,al
   1879b:	mov    bl,0x1
   1879d:	jne    0x187f6
   1879f:	test   BYTE PTR [ebp+0x8],bl
   187a2:	jne    0x187ab
   187a4:	xor    bl,bl
   187a6:	jmp    0x18873
   187ab:	push   esi
   187ac:	lea    ecx,[ebp-0x28]
   187af:	call   0x199c8
   187b4:	push   0x18774
   187b9:	lea    ecx,[ebp+0xc]
   187bc:	call   0x19b20
   187c1:	lea    eax,[ebp+0xc]
   187c4:	push   eax
   187c5:	lea    ecx,[ebp-0x24]
   187c8:	call   0x199c8
   187cd:	lea    ecx,[ebp+0xc]
   187d0:	call   0x199be
   187d5:	push   DWORD PTR [ebp+0x10]
   187d8:	lea    ecx,[ebp-0x20]
   187db:	call   0x199c8
   187e0:	push   DWORD PTR [ebp+0x14]
   187e3:	lea    ecx,[ebp-0x1c]
   187e6:	call   0x199c8
   187eb:	xor    eax,eax
   187ed:	mov    DWORD PTR [ebp-0x18],eax
   187f0:	mov    DWORD PTR [ebp-0x10],eax
   187f3:	mov    DWORD PTR [ebp-0xc],eax
   187f6:	test   BYTE PTR [ebp+0x8],bl
   187f9:	je     0x1884f
   187fb:	mov    eax,DWORD PTR [ebp+0x18]
   187fe:	push   esi
   187ff:	lea    ecx,[ebp-0x28]
   18802:	mov    DWORD PTR [ebp-0x18],eax
   18805:	call   0x199c8
   1880a:	push   0x18775
   1880f:	lea    ecx,[ebp+0xc]
   18812:	call   0x19b20
   18817:	lea    eax,[ebp+0xc]
   1881a:	push   eax
   1881b:	lea    ecx,[ebp-0x24]
   1881e:	call   0x199c8
   18823:	lea    ecx,[ebp+0xc]
   18826:	call   0x199be
   1882b:	push   DWORD PTR [ebp+0x10]
   1882e:	lea    ecx,[ebp-0x20]
   18831:	call   0x199c8
   18836:	push   DWORD PTR [ebp+0x14]
   18839:	lea    ecx,[ebp-0x1c]
   1883c:	call   0x199c8
   18841:	mov    eax,DWORD PTR [ebp+0x1c]
   18844:	mov    ecx,DWORD PTR [eax]
   18846:	mov    eax,DWORD PTR [eax+0x4]
   18849:	mov    DWORD PTR [ebp-0x10],ecx
   1884c:	mov    DWORD PTR [ebp-0xc],eax
   1884f:	test   BYTE PTR [ebp+0x8],0x4
   18853:	je     0x18863
   18855:	mov    eax,DWORD PTR [ebp+0x20]
   18858:	mov    ecx,DWORD PTR [eax]
   1885a:	mov    eax,DWORD PTR [eax+0x4]
   1885d:	mov    DWORD PTR [ebp-0x8],ecx
   18860:	mov    DWORD PTR [ebp-0x4],eax
   18863:	mov    ecx,DWORD PTR ds:0x83198
   18869:	lea    eax,[ebp-0x28]
   1886c:	push   eax
   1886d:	push   esi
   1886e:	call   0x18624
   18873:	lea    ecx,[ebp-0x28]
   18876:	call   0x14634
   1887b:	pop    esi
   1887c:	mov    al,bl
   1887e:	pop    ebx
   1887f:	leave  
   18880:	ret    0x1c
   18883:	int3   
   18884:	dec    ebx
   18885:	gs push edi
   18887:	popa   
   18888:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   18890:	gs js  0x188e2
   18893:	bound  ebp,QWORD PTR [edx+0x65]
   18896:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1889a:	and    BYTE PTR [ebp+0x52],al
   1889d:	push   edx
   1889e:	dec    edi
   1889f:	push   edx
   188a0:	and    BYTE PTR [edx],bh
   188a2:	and    BYTE PTR [eax],dh
   188a4:	js     0x188cb
   188a6:	cmp    BYTE PTR cs:[eax+0xa],bh
   188aa:	add    ah,cl
   188ac:	push   0x34
   188ae:	push   0x1b2a0
   188b3:	call   0x1a338
   188b8:	xor    ebx,ebx
   188ba:	push   ebx
   188bb:	push   ebx
   188bc:	push   ebx
   188bd:	push   ebx
   188be:	push   0x8319c
   188c3:	call   DWORD PTR ds:0x1b060
   188c9:	cmp    eax,ebx
   188cb:	jge    0x188e9
   188cd:	push   eax
   188ce:	push   0x18884
   188d3:	call   0x1a38a
   188d8:	pop    ecx
   188d9:	pop    ecx
   188da:	mov    eax,DWORD PTR [ebp+0x8]
   188dd:	mov    DWORD PTR [eax+0x8],0x4
   188e4:	jmp    0x189fb
   188e9:	mov    DWORD PTR [ebp-0x4],ebx
   188ec:	mov    esi,DWORD PTR [ebp+0x8]
   188ef:	lea    eax,[esi+0x20]
   188f2:	push   eax
   188f3:	lea    ecx,[ebp-0x24]
   188f6:	call   0x19b20
   188fb:	mov    DWORD PTR [ebp-0x28],ebx
   188fe:	lea    ecx,[ebp-0x24]
   18901:	call   0x19a0a
   18906:	mov    edi,eax
   18908:	inc    edi
   18909:	mov    DWORD PTR [ebp-0x28],edi
   1890c:	lea    eax,[edi+esi*1+0x20]
   18910:	push   eax
   18911:	lea    ecx,[ebp-0x30]
   18914:	call   0x19b20
   18919:	lea    ecx,[ebp-0x30]
   1891c:	call   0x19a0a
   18921:	lea    edi,[edi+eax*1+0x1]
   18925:	mov    DWORD PTR [ebp-0x28],edi
   18928:	lea    eax,[edi+esi*1+0x20]
   1892c:	push   eax
   1892d:	lea    ecx,[ebp-0x20]
   18930:	call   0x19b20
   18935:	lea    ecx,[ebp-0x20]
   18938:	call   0x19a0a
   1893d:	lea    eax,[edi+eax*1+0x1]
   18941:	mov    DWORD PTR [ebp-0x28],eax
   18944:	lea    eax,[eax+esi*1+0x20]
   18948:	push   eax
   18949:	lea    ecx,[ebp-0x2c]
   1894c:	call   0x19b20
   18951:	mov    ecx,DWORD PTR [esi+0xc]
   18954:	mov    DWORD PTR [ebp-0x34],ecx
   18957:	mov    eax,DWORD PTR [esi+0x10]
   1895a:	mov    DWORD PTR [ebp-0x44],eax
   1895d:	mov    eax,DWORD PTR [esi+0x14]
   18960:	mov    DWORD PTR [ebp-0x40],eax
   18963:	mov    eax,DWORD PTR [esi+0x18]
   18966:	mov    DWORD PTR [ebp-0x3c],eax
   18969:	mov    eax,DWORD PTR [esi+0x1c]
   1896c:	mov    DWORD PTR [ebp-0x38],eax
   1896f:	mov    BYTE PTR [ebp-0x19],bl
   18972:	mov    eax,DWORD PTR [esi+0x4]
   18975:	lea    edx,[ebp-0x3c]
   18978:	push   edx
   18979:	lea    edx,[ebp-0x44]
   1897c:	push   edx
   1897d:	push   ecx
   1897e:	lea    ecx,[ebp-0x2c]
   18981:	push   ecx
   18982:	lea    ecx,[ebp-0x20]
   18985:	push   ecx
   18986:	test   al,0x8
   18988:	je     0x18996
   1898a:	lea    ecx,[ebp-0x24]
   1898d:	push   ecx
   1898e:	push   eax
   1898f:	call   0x18776
   18994:	jmp    0x189a4
   18996:	lea    ecx,[ebp-0x30]
   18999:	push   ecx
   1899a:	lea    ecx,[ebp-0x24]
   1899d:	push   ecx
   1899e:	push   eax
   1899f:	call   0x184a8
   189a4:	mov    BYTE PTR [ebp-0x19],al
   189a7:	xor    eax,eax
   189a9:	cmp    BYTE PTR [ebp-0x19],bl
   189ac:	sete   al
   189af:	mov    DWORD PTR [esi+0x8],eax
   189b2:	lea    ecx,[ebp-0x2c]
   189b5:	call   0x199be
   189ba:	lea    ecx,[ebp-0x20]
   189bd:	call   0x199be
   189c2:	lea    ecx,[ebp-0x30]
   189c5:	call   0x199be
   189ca:	lea    ecx,[ebp-0x24]
   189cd:	call   0x199be
   189d2:	or     DWORD PTR [ebp-0x4],0xffffffff
   189d6:	jmp    0x189ef
   189d8:	xor    eax,eax
   189da:	inc    eax
   189db:	ret    
   189dc:	mov    esp,DWORD PTR [ebp-0x18]
   189df:	mov    eax,DWORD PTR [ebp+0x8]
   189e2:	mov    DWORD PTR [eax+0x8],0x4
   189e9:	or     DWORD PTR [ebp-0x4],0xffffffff
   189ed:	xor    ebx,ebx
   189ef:	push   ebx
   189f0:	push   0x8319c
   189f5:	call   DWORD PTR ds:0x1b05c
   189fb:	call   0x1a373
   18a00:	ret    0x4
   18a03:	int3   
   18a04:	dec    ebx
   18a05:	gs push edi
   18a07:	popa   
   18a08:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   18a10:	gs js  0x18a62
   18a13:	bound  ebp,QWORD PTR [edx+0x65]
   18a16:	arpl   WORD PTR [eax+ebp*1+0x29],si
   18a1a:	and    BYTE PTR [ebp+0x52],al
   18a1d:	push   edx
   18a1e:	dec    edi
   18a1f:	push   edx
   18a20:	and    BYTE PTR [edx],bh
   18a22:	and    BYTE PTR [eax],dh
   18a24:	js     0x18a4b
   18a26:	cmp    BYTE PTR cs:[eax+0xa],bh
   18a2a:	add    ah,cl
   18a2c:	push   0x14
   18a2e:	push   0x1b2b0
   18a33:	call   0x1a338
   18a38:	xor    edi,edi
   18a3a:	push   edi
   18a3b:	push   edi
   18a3c:	push   edi
   18a3d:	push   edi
   18a3e:	push   0x8319c
   18a43:	call   DWORD PTR ds:0x1b060
   18a49:	cmp    eax,edi
   18a4b:	jge    0x18a66
   18a4d:	push   eax
   18a4e:	push   0x18a04
   18a53:	call   0x1a38a
   18a58:	pop    ecx
   18a59:	pop    ecx
   18a5a:	mov    eax,DWORD PTR [ebp+0x8]
   18a5d:	mov    DWORD PTR [eax+0x8],0x4
   18a64:	jmp    0x18adb
   18a66:	mov    DWORD PTR [ebp-0x4],edi
   18a69:	mov    esi,DWORD PTR [ebp+0x8]
   18a6c:	mov    ecx,DWORD PTR ds:0x832f8
   18a72:	lea    eax,[esi+0x4]
   18a75:	push   eax
   18a76:	cmp    DWORD PTR [esi],edi
   18a78:	jbe    0x18aa7
   18a7a:	call   0x18736
   18a7f:	mov    DWORD PTR [ebp-0x1c],eax
   18a82:	push   DWORD PTR [esi]
   18a84:	lea    eax,[esi+0xc]
   18a87:	push   eax
   18a88:	lea    ecx,[ebp-0x20]
   18a8b:	call   0x15a8e
   18a90:	push   eax
   18a91:	mov    ecx,DWORD PTR [ebp-0x1c]
   18a94:	call   0x153d0
   18a99:	mov    ecx,DWORD PTR [ebp-0x20]
   18a9c:	cmp    ecx,edi
   18a9e:	je     0x18aaf
   18aa0:	call   0x12860
   18aa5:	jmp    0x18aaf
   18aa7:	mov    DWORD PTR [ebp-0x24],ecx
   18aaa:	call   0x1807c
   18aaf:	mov    DWORD PTR [esi+0x8],edi
   18ab2:	or     DWORD PTR [ebp-0x4],0xffffffff
   18ab6:	jmp    0x18acf
   18ab8:	xor    eax,eax
   18aba:	inc    eax
   18abb:	ret    
   18abc:	mov    esp,DWORD PTR [ebp-0x18]
   18abf:	mov    eax,DWORD PTR [ebp+0x8]
   18ac2:	mov    DWORD PTR [eax+0x8],0x4
   18ac9:	or     DWORD PTR [ebp-0x4],0xffffffff
   18acd:	xor    edi,edi
   18acf:	push   edi
   18ad0:	push   0x8319c
   18ad5:	call   DWORD PTR ds:0x1b05c
   18adb:	call   0x1a373
   18ae0:	ret    0x4
   18ae3:	int3   
   18ae4:	push   ebp
   18ae5:	mov    ebp,esp
   18ae7:	sub    esp,0x10
   18aea:	and    DWORD PTR [ebp-0xc],0x0
   18aee:	xor    ecx,ecx
   18af0:	mov    DWORD PTR [ebp-0x10],0x1
   18af7:	xor    eax,eax
   18af9:	mov    dl,BYTE PTR [eax+0x1b1f4]
   18aff:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   18b03:	inc    ecx
   18b04:	inc    eax
   18b05:	and    eax,0xf
   18b08:	cmp    ecx,0x8
   18b0b:	jne    0x18af9
   18b0d:	push   ecx
   18b0e:	lea    eax,[ebp-0x10]
   18b11:	push   eax
   18b12:	lea    ecx,[ebp-0x8]
   18b15:	mov    DWORD PTR [ebp-0x4],0x2
   18b1c:	call   0x15a8e
   18b21:	mov    ecx,DWORD PTR ds:0x832f8
   18b27:	push   eax
   18b28:	lea    eax,[ebp-0x4]
   18b2b:	push   eax
   18b2c:	call   0x18736
   18b31:	mov    ecx,eax
   18b33:	call   0x153d0
   18b38:	mov    ecx,DWORD PTR [ebp-0x8]
   18b3b:	test   ecx,ecx
   18b3d:	je     0x18b44
   18b3f:	call   0x12860
   18b44:	leave  
   18b45:	ret    
   18b46:	add    BYTE PTR [eax],al
   18b48:	add    BYTE PTR [eax],al
   18b4a:	add    BYTE PTR [eax],al
   18b4c:	push   0x8a8
   18b51:	push   0x1b2c0
   18b56:	call   0x1a338
   18b5b:	mov    eax,ds:0x83118
   18b60:	mov    DWORD PTR [ebp-0x1c],eax
   18b63:	xor    ebx,ebx
   18b65:	mov    DWORD PTR [ebp-0x838],ebx
   18b6b:	mov    DWORD PTR [ebp-0x4],ebx
   18b6e:	mov    DWORD PTR [ebp-0x884],ebx
   18b74:	xor    eax,eax
   18b76:	lea    edi,[ebp-0x880]
   18b7c:	stos   DWORD PTR es:[edi],eax
   18b7d:	stos   DWORD PTR es:[edi],eax
   18b7e:	stos   DWORD PTR es:[edi],eax
   18b7f:	stos   DWORD PTR es:[edi],eax
   18b80:	stos   DWORD PTR es:[edi],eax
   18b81:	mov    DWORD PTR [ebp-0x8b0],ebx
   18b87:	mov    BYTE PTR [ebp-0x844],bl
   18b8d:	xor    esi,esi
   18b8f:	mov    DWORD PTR [ebp-0x840],esi
   18b95:	mov    ax,ds:0x18b46
   18b9b:	mov    WORD PTR [ebp-0x834],ax
   18ba2:	mov    ecx,0x1ff
   18ba7:	xor    eax,eax
   18ba9:	lea    edi,[ebp-0x832]
   18baf:	rep stos DWORD PTR es:[edi],eax
   18bb1:	stos   WORD PTR es:[edi],ax
   18bb3:	push   DWORD PTR ds:0x1d0e8
   18bb9:	lea    eax,[ebp-0x834]
   18bbf:	push   eax
   18bc0:	mov    edi,DWORD PTR ds:0x1b114
   18bc6:	call   edi
   18bc8:	push   0x1d068
   18bcd:	lea    eax,[ebp-0x834]
   18bd3:	push   eax
   18bd4:	call   edi
   18bd6:	lea    eax,[ebp-0x834]
   18bdc:	mov    DWORD PTR [ebp-0x85c],eax
   18be2:	push   eax
   18be3:	mov    edi,DWORD PTR ds:0x1b054
   18be9:	call   edi
   18beb:	add    esp,0x14
   18bee:	shl    eax,1
   18bf0:	mov    WORD PTR [ebp-0x85e],ax
   18bf7:	mov    WORD PTR [ebp-0x860],ax
   18bfe:	mov    DWORD PTR [ebp-0x884],0x18
   18c08:	mov    DWORD PTR [ebp-0x880],ebx
   18c0e:	mov    DWORD PTR [ebp-0x878],0x40
   18c18:	lea    eax,[ebp-0x860]
   18c1e:	mov    DWORD PTR [ebp-0x87c],eax
   18c24:	mov    DWORD PTR [ebp-0x874],ebx
   18c2a:	mov    DWORD PTR [ebp-0x870],ebx
   18c30:	lea    eax,[ebp-0x884]
   18c36:	push   eax
   18c37:	push   0x1
   18c39:	lea    eax,[ebp-0x838]
   18c3f:	push   eax
   18c40:	call   DWORD PTR ds:0x1b07c
   18c46:	mov    DWORD PTR [ebp-0x848],eax
   18c4c:	cmp    eax,ebx
   18c4e:	je     0x18c5a
   18c50:	call   0x18ae4
   18c55:	jmp    0x18e1f
   18c5a:	mov    eax,0x18b4a
   18c5f:	mov    DWORD PTR [ebp-0x854],eax
   18c65:	push   eax
   18c66:	call   edi
   18c68:	pop    ecx
   18c69:	mov    WORD PTR [ebp-0x856],ax
   18c70:	mov    WORD PTR [ebp-0x858],ax
   18c77:	mov    DWORD PTR [ebp-0x83c],ebx
   18c7d:	lea    eax,[ebp-0x83c]
   18c83:	push   eax
   18c84:	push   0x18
   18c86:	lea    eax,[ebp-0x34]
   18c89:	push   eax
   18c8a:	push   0x1
   18c8c:	lea    eax,[ebp-0x858]
   18c92:	push   eax
   18c93:	push   DWORD PTR [ebp-0x838]
   18c99:	mov    edi,DWORD PTR ds:0x1b0e0
   18c9f:	call   edi
   18ca1:	mov    DWORD PTR [ebp-0x848],eax
   18ca7:	cmp    eax,0x80000005
   18cac:	je     0x18cb9
   18cae:	cmp    eax,0xc0000023
   18cb3:	jne    0x18d3c
   18cb9:	push   DWORD PTR [ebp-0x83c]
   18cbf:	call   0x12822
   18cc4:	pop    ecx
   18cc5:	mov    DWORD PTR [ebp-0x88c],eax
   18ccb:	xor    ecx,ecx
   18ccd:	cmp    eax,ebx
   18ccf:	setne  cl
   18cd2:	mov    BYTE PTR [ebp-0x850],cl
   18cd8:	mov    DWORD PTR [ebp-0x84c],eax
   18cde:	lea    eax,[ebp-0x850]
   18ce4:	push   eax
   18ce5:	lea    ecx,[ebp-0x844]
   18ceb:	call   0x154b4
   18cf0:	cmp    BYTE PTR [ebp-0x850],bl
   18cf6:	je     0x18d0b
   18cf8:	mov    eax,DWORD PTR [ebp-0x84c]
   18cfe:	mov    DWORD PTR [ebp-0x890],eax
   18d04:	push   eax
   18d05:	call   0x1284c
   18d0a:	pop    ecx
   18d0b:	mov    esi,DWORD PTR [ebp-0x840]
   18d11:	mov    DWORD PTR [ebp-0x898],esi
   18d17:	lea    eax,[ebp-0x83c]
   18d1d:	push   eax
   18d1e:	push   DWORD PTR [ebp-0x83c]
   18d24:	push   esi
   18d25:	push   0x1
   18d27:	lea    eax,[ebp-0x858]
   18d2d:	push   eax
   18d2e:	push   DWORD PTR [ebp-0x838]
   18d34:	call   edi
   18d36:	mov    DWORD PTR [ebp-0x848],eax
   18d3c:	cmp    eax,ebx
   18d3e:	je     0x18d5c
   18d40:	call   0x18ae4
   18d45:	cmp    BYTE PTR [ebp-0x844],bl
   18d4b:	je     0x18e1f
   18d51:	mov    DWORD PTR [ebp-0x8a0],esi
   18d57:	jmp    0x18e18
   18d5c:	mov    DWORD PTR [ebp-0x8a8],esi
   18d62:	cmp    DWORD PTR [esi+0x4],0x3
   18d66:	je     0x18d84
   18d68:	call   0x18ae4
   18d6d:	cmp    BYTE PTR [ebp-0x844],bl
   18d73:	je     0x18e1f
   18d79:	mov    DWORD PTR [ebp-0x888],esi
   18d7f:	jmp    0x18e18
   18d84:	mov    DWORD PTR [ebp-0x8b8],esi
   18d8a:	mov    edi,DWORD PTR [esi+0xc]
   18d8d:	mov    DWORD PTR [ebp-0x8a4],edi
   18d93:	cmp    edi,ebx
   18d95:	je     0x18e0a
   18d97:	cmp    edi,0xf4240
   18d9d:	ja     0x18e0a
   18d9f:	mov    DWORD PTR [ebp-0x86c],0x2
   18da9:	lea    eax,[ebp-0x86c]
   18daf:	push   eax
   18db0:	mov    ecx,DWORD PTR ds:0x832f8
   18db6:	call   0x18736
   18dbb:	mov    DWORD PTR [ebp-0x868],eax
   18dc1:	mov    DWORD PTR [ebp-0x894],esi
   18dc7:	mov    DWORD PTR [ebp-0x8b4],esi
   18dcd:	push   edi
   18dce:	mov    eax,DWORD PTR [esi+0x8]
   18dd1:	add    eax,esi
   18dd3:	push   eax
   18dd4:	lea    ecx,[ebp-0x864]
   18dda:	call   0x15a8e
   18ddf:	push   eax
   18de0:	mov    ecx,DWORD PTR [ebp-0x868]
   18de6:	call   0x153d0
   18deb:	mov    ecx,DWORD PTR [ebp-0x864]
   18df1:	cmp    ecx,ebx
   18df3:	je     0x18dfa
   18df5:	call   0x12860
   18dfa:	cmp    BYTE PTR [ebp-0x844],bl
   18e00:	je     0x18e1f
   18e02:	mov    DWORD PTR [ebp-0x89c],esi
   18e08:	jmp    0x18e18
   18e0a:	cmp    BYTE PTR [ebp-0x844],bl
   18e10:	je     0x18e1f
   18e12:	mov    DWORD PTR [ebp-0x8ac],esi
   18e18:	push   esi
   18e19:	call   0x1284c
   18e1e:	pop    ecx
   18e1f:	or     DWORD PTR [ebp-0x4],0xffffffff
   18e23:	call   0x18e38
   18e28:	mov    ecx,DWORD PTR [ebp-0x1c]
   18e2b:	call   0x1a327
   18e30:	call   0x1a373
   18e35:	ret    
   18e36:	xor    ebx,ebx
   18e38:	cmp    DWORD PTR [ebp-0x838],ebx
   18e3e:	je     0x18e4c
   18e40:	push   DWORD PTR [ebp-0x838]
   18e46:	call   DWORD PTR ds:0x1b10c
   18e4c:	ret    
   18e4d:	int3   
   18e4e:	add    BYTE PTR [eax],al
   18e50:	add    BYTE PTR [eax],al
   18e52:	add    BYTE PTR [eax],al
   18e54:	push   0x858
   18e59:	push   0x1b2d0
   18e5e:	call   0x1a338
   18e63:	mov    eax,ds:0x83118
   18e68:	mov    DWORD PTR [ebp-0x1c],eax
   18e6b:	xor    ebx,ebx
   18e6d:	mov    DWORD PTR [ebp-0x820],ebx
   18e73:	mov    DWORD PTR [ebp-0x4],ebx
   18e76:	mov    DWORD PTR [ebp-0x858],ebx
   18e7c:	xor    eax,eax
   18e7e:	lea    edi,[ebp-0x854]
   18e84:	stos   DWORD PTR es:[edi],eax
   18e85:	stos   DWORD PTR es:[edi],eax
   18e86:	stos   DWORD PTR es:[edi],eax
   18e87:	stos   DWORD PTR es:[edi],eax
   18e88:	stos   DWORD PTR es:[edi],eax
   18e89:	mov    DWORD PTR [ebp-0x85c],ebx
   18e8f:	mov    BYTE PTR [ebp-0x868],bl
   18e95:	mov    DWORD PTR [ebp-0x864],ebx
   18e9b:	mov    ax,ds:0x18e4e
   18ea1:	mov    WORD PTR [ebp-0x81c],ax
   18ea8:	mov    ecx,0x1ff
   18ead:	xor    eax,eax
   18eaf:	lea    edi,[ebp-0x81a]
   18eb5:	rep stos DWORD PTR es:[edi],eax
   18eb7:	stos   WORD PTR es:[edi],ax
   18eb9:	push   DWORD PTR ds:0x1d0e8
   18ebf:	lea    eax,[ebp-0x81c]
   18ec5:	push   eax
   18ec6:	mov    esi,DWORD PTR ds:0x1b114
   18ecc:	call   esi
   18ece:	push   0x1d068
   18ed3:	lea    eax,[ebp-0x81c]
   18ed9:	push   eax
   18eda:	call   esi
   18edc:	lea    eax,[ebp-0x81c]
   18ee2:	mov    DWORD PTR [ebp-0x82c],eax
   18ee8:	push   eax
   18ee9:	mov    esi,DWORD PTR ds:0x1b054
   18eef:	call   esi
   18ef1:	add    esp,0x14
   18ef4:	shl    eax,1
   18ef6:	mov    WORD PTR [ebp-0x82e],ax
   18efd:	mov    WORD PTR [ebp-0x830],ax
   18f04:	mov    DWORD PTR [ebp-0x858],0x18
   18f0e:	mov    DWORD PTR [ebp-0x854],ebx
   18f14:	mov    DWORD PTR [ebp-0x84c],0x40
   18f1e:	lea    eax,[ebp-0x830]
   18f24:	mov    DWORD PTR [ebp-0x850],eax
   18f2a:	mov    DWORD PTR [ebp-0x848],ebx
   18f30:	mov    DWORD PTR [ebp-0x844],ebx
   18f36:	lea    eax,[ebp-0x858]
   18f3c:	push   eax
   18f3d:	push   0x3
   18f3f:	lea    eax,[ebp-0x820]
   18f45:	push   eax
   18f46:	call   DWORD PTR ds:0x1b07c
   18f4c:	mov    DWORD PTR [ebp-0x828],eax
   18f52:	cmp    eax,ebx
   18f54:	je     0x18f71
   18f56:	push   0xffffffff
   18f58:	lea    eax,[ebp-0x10]
   18f5b:	push   eax
   18f5c:	call   0x1a396
   18f61:	pop    ecx
   18f62:	pop    ecx
   18f63:	mov    ecx,DWORD PTR [ebp-0x1c]
   18f66:	call   0x1a327
   18f6b:	call   0x1a373
   18f70:	ret    
   18f71:	mov    eax,0x18e52
   18f76:	mov    DWORD PTR [ebp-0x838],eax
   18f7c:	push   eax
   18f7d:	call   esi
   18f7f:	pop    ecx
   18f80:	mov    WORD PTR [ebp-0x83a],ax
   18f87:	mov    WORD PTR [ebp-0x83c],ax
   18f8e:	mov    DWORD PTR [ebp-0x834],0x2
   18f98:	lea    eax,[ebp-0x834]
   18f9e:	push   eax
   18f9f:	mov    ecx,DWORD PTR ds:0x832f8
   18fa5:	call   0x18736
   18faa:	mov    DWORD PTR [ebp-0x860],eax
   18fb0:	mov    eax,DWORD PTR [eax]
   18fb2:	cmp    eax,ebx
   18fb4:	jne    0x18fbe
   18fb6:	mov    DWORD PTR [ebp-0x824],ebx
   18fbc:	jmp    0x18fc7
   18fbe:	mov    ecx,DWORD PTR [eax+0x8]
   18fc1:	mov    DWORD PTR [ebp-0x824],ecx
   18fc7:	cmp    eax,ebx
   18fc9:	jne    0x18fcf
   18fcb:	xor    eax,eax
   18fcd:	jmp    0x18fd1
   18fcf:	mov    eax,DWORD PTR [eax]
   18fd1:	mov    DWORD PTR [ebp-0x840],eax
   18fd7:	push   DWORD PTR [ebp-0x824]
   18fdd:	push   eax
   18fde:	push   0x3
   18fe0:	push   ebx
   18fe1:	lea    eax,[ebp-0x83c]
   18fe7:	push   eax
   18fe8:	push   DWORD PTR [ebp-0x820]
   18fee:	call   DWORD PTR ds:0x1b08c
   18ff4:	mov    DWORD PTR [ebp-0x828],eax
   18ffa:	or     DWORD PTR [ebp-0x4],0xffffffff
   18ffe:	call   0x1900a
   19003:	jmp    0x18f63
   19008:	xor    ebx,ebx
   1900a:	cmp    DWORD PTR [ebp-0x820],ebx
   19010:	je     0x1901e
   19012:	push   DWORD PTR [ebp-0x820]
   19018:	call   DWORD PTR ds:0x1b10c
   1901e:	ret    
   1901f:	int3   
   19020:	dec    ecx
   19021:	push   edx
   19022:	push   eax
   19023:	pop    edi
   19024:	dec    ebp
   19025:	dec    edx
   19026:	pop    edi
   19027:	inc    esp
   19028:	inc    ebp
   19029:	push   esi
   1902a:	dec    ecx
   1902b:	inc    ebx
   1902c:	inc    ebp
   1902d:	pop    edi
   1902e:	inc    ebx
   1902f:	dec    edi
   19030:	dec    esi
   19031:	push   esp
   19032:	push   edx
   19033:	dec    edi
   19034:	dec    esp
   19035:	and    BYTE PTR [edx],bh
   19037:	and    BYTE PTR [eax],dh
   19039:	js     0x19060
   1903b:	cmp    BYTE PTR cs:[eax+0xa],bh
   1903f:	add    BYTE PTR [eax+eax*1+0x44],bl
   19043:	add    BYTE PTR [edx+0x0],dh
   19046:	imul   eax,DWORD PTR [eax],0x650076
   1904c:	jb     0x1904e
   1904e:	add    BYTE PTR [eax],al
   19050:	add    BYTE PTR [eax],al
   19052:	add    BYTE PTR [eax],al
   19054:	dec    ebx
   19055:	gs push edi
   19057:	popa   
   19058:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   19060:	gs js  0x190b2
   19063:	bound  ebp,QWORD PTR [edx+0x65]
   19066:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1906a:	and    BYTE PTR [ebp+0x52],al
   1906d:	push   edx
   1906e:	dec    edi
   1906f:	push   edx
   19070:	and    BYTE PTR [edx],bh
   19072:	and    BYTE PTR [eax],dh
   19074:	js     0x1909b
   19076:	cmp    BYTE PTR cs:[eax+0xa],bh
   1907a:	add    ah,cl
   1907c:	push   0x3c
   1907e:	push   0x1b2e0
   19083:	call   0x1a338
   19088:	xor    eax,eax
   1908a:	mov    DWORD PTR [ebp-0x30],eax
   1908d:	mov    ebx,DWORD PTR [ebp+0xc]
   19090:	mov    DWORD PTR [ebx+0x18],eax
   19093:	mov    DWORD PTR [ebx+0x1c],eax
   19096:	mov    eax,DWORD PTR [ebx+0x60]
   19099:	cmp    BYTE PTR [eax],0xe
   1909c:	jne    0x19480
   190a2:	mov    esi,DWORD PTR [eax+0xc]
   190a5:	mov    edi,DWORD PTR [ebx+0xc]
   190a8:	push   esi
   190a9:	push   0x19020
   190ae:	call   0x1a38a
   190b3:	pop    ecx
   190b4:	pop    ecx
   190b5:	mov    DWORD PTR [ebx+0x1c],0x84c
   190bc:	mov    eax,0x22c050
   190c1:	cmp    esi,eax
   190c3:	ja     0x19398
   190c9:	je     0x1928f
   190cf:	add    eax,0xffffffe0
   190d2:	cmp    esi,eax
   190d4:	ja     0x191dc
   190da:	je     0x191b3
   190e0:	sub    esi,0x22c018
   190e6:	je     0x19198
   190ec:	sub    esi,0x8
   190ef:	je     0x19162
   190f1:	sub    esi,0x4
   190f4:	je     0x1912c
   190f6:	sub    esi,0x4
   190f9:	je     0x19111
   190fb:	sub    esi,0x4
   190fe:	jne    0x19433
   19104:	push   DWORD PTR [ebx+0xc]
   19107:	call   0x188ac
   1910c:	jmp    0x1947c
   19111:	mov    ecx,DWORD PTR ds:0x83324
   19117:	call   0x18044
   1911c:	mov    ecx,DWORD PTR ds:0x832f8
   19122:	call   0x180c0
   19127:	jmp    0x19480
   1912c:	mov    eax,DWORD PTR [ebx+0xc]
   1912f:	mov    DWORD PTR [ebx+0x1c],0x10
   19136:	mov    ecx,DWORD PTR [eax]
   19138:	test   ecx,ecx
   1913a:	jl     0x19480
   19140:	cmp    ecx,0x6
   19143:	jge    0x19480
   19149:	mov    edx,DWORD PTR [eax+0x8]
   1914c:	mov    DWORD PTR [ecx*8+0x83370],edx
   19153:	mov    eax,DWORD PTR [eax+0xc]
   19156:	mov    DWORD PTR [ecx*8+0x83374],eax
   1915d:	jmp    0x19480
   19162:	mov    eax,DWORD PTR [ebx+0xc]
   19165:	mov    DWORD PTR [ebx+0x1c],0x10
   1916c:	mov    ecx,DWORD PTR [eax]
   1916e:	test   ecx,ecx
   19170:	jl     0x19480
   19176:	cmp    ecx,0x6
   19179:	jge    0x19480
   1917f:	mov    edx,DWORD PTR [ecx*8+0x83370]
   19186:	mov    DWORD PTR [eax+0x8],edx
   19189:	mov    ecx,DWORD PTR [ecx*8+0x83374]
   19190:	mov    DWORD PTR [eax+0xc],ecx
   19193:	jmp    0x19480
   19198:	lea    eax,[edi+0x64c]
   1919e:	push   eax
   1919f:	push   0x19040
   191a4:	call   0x11e72
   191a9:	movzx  eax,al
   191ac:	mov    DWORD PTR [edi],eax
   191ae:	jmp    0x19480
   191b3:	mov    esi,DWORD PTR [ebx+0xc]
   191b6:	mov    eax,DWORD PTR [esi]
   191b8:	add    eax,0x20
   191bb:	mov    DWORD PTR [ebx+0x1c],eax
   191be:	lea    eax,[esi+0x20]
   191c1:	push   eax
   191c2:	lea    ecx,[ebp-0x28]
   191c5:	call   0x19b20
   191ca:	push   esi
   191cb:	lea    eax,[ebp-0x28]
   191ce:	push   eax
   191cf:	call   0x17d72
   191d4:	lea    ecx,[ebp-0x28]
   191d7:	jmp    0x19352
   191dc:	sub    esi,0x22c034
   191e2:	je     0x19272
   191e8:	sub    esi,0x4
   191eb:	je     0x19259
   191ed:	sub    esi,0x4
   191f0:	je     0x19205
   191f2:	sub    esi,0x10
   191f5:	jne    0x19433
   191fb:	call   0x13758
   19200:	jmp    0x19480
   19205:	mov    esi,DWORD PTR [ebx+0xc]
   19208:	push   DWORD PTR ds:0x1d020
   1920e:	push   esi
   1920f:	mov    edi,DWORD PTR ds:0x1b0ac
   19215:	call   edi
   19217:	push   0x1d068
   1921c:	lea    eax,[esi+0x50]
   1921f:	push   eax
   19220:	call   edi
   19222:	push   0x1d028
   19227:	lea    eax,[esi+0x90]
   1922d:	push   eax
   1922e:	call   edi
   19230:	push   0x1d0a8
   19235:	lea    eax,[esi+0xd0]
   1923b:	push   eax
   1923c:	call   edi
   1923e:	add    esp,0x20
   19241:	lea    edi,[esi+0x40]
   19244:	mov    esi,0x1b1f4
   19249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1924a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1924b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1924c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1924d:	mov    DWORD PTR [ebx+0x1c],0x110
   19254:	jmp    0x19480
   19259:	mov    eax,DWORD PTR [ebx+0xc]
   1925c:	mov    ecx,DWORD PTR [eax]
   1925e:	add    ecx,0xc
   19261:	mov    DWORD PTR [ebx+0x1c],ecx
   19264:	push   eax
   19265:	push   DWORD PTR [eax+0x4]
   19268:	call   0x1784a
   1926d:	jmp    0x19480
   19272:	mov    esi,DWORD PTR [ebx+0xc]
   19275:	push   esi
   19276:	call   0x18a2c
   1927b:	cmp    DWORD PTR [esi+0x4],0x2
   1927f:	jne    0x1947c
   19285:	call   0x18e54
   1928a:	jmp    0x1947c
   1928f:	xor    edi,edi
   19291:	mov    DWORD PTR [ebx+0x1c],edi
   19294:	mov    esi,DWORD PTR [ebx+0xc]
   19297:	mov    DWORD PTR [ebp-0x2c],esi
   1929a:	push   0x19050
   1929f:	lea    ecx,[ebp-0x1c]
   192a2:	call   0x19b20
   192a7:	push   edi
   192a8:	push   edi
   192a9:	push   edi
   192aa:	push   edi
   192ab:	push   0x8319c
   192b0:	call   DWORD PTR ds:0x1b060
   192b6:	cmp    eax,edi
   192b8:	jge    0x192cc
   192ba:	push   eax
   192bb:	push   0x19054
   192c0:	call   0x1a38a
   192c5:	pop    ecx
   192c6:	pop    ecx
   192c7:	jmp    0x1934f
   192cc:	mov    DWORD PTR [ebp-0x4],edi
   192cf:	mov    DWORD PTR [ebp-0x4],0x1
   192d6:	mov    eax,DWORD PTR [esi]
   192d8:	add    eax,0x20
   192db:	mov    DWORD PTR [ebx+0x1c],eax
   192de:	mov    eax,ds:0x83324
   192e3:	mov    ebx,DWORD PTR [eax+0x4]
   192e6:	mov    eax,ebx
   192e8:	mov    DWORD PTR [ebp-0x34],eax
   192eb:	mov    eax,DWORD PTR [eax]
   192ed:	mov    DWORD PTR [ebp-0x38],eax
   192f0:	mov    DWORD PTR [ebp-0x24],eax
   192f3:	mov    DWORD PTR [ebp-0x20],edi
   192f6:	mov    edi,DWORD PTR [esi+0x20]
   192f9:	mov    DWORD PTR [ebp-0x3c],edi
   192fc:	cmp    DWORD PTR [ebp-0x20],edi
   192ff:	jge    0x1931b
   19301:	mov    eax,ebx
   19303:	mov    DWORD PTR [ebp-0x40],eax
   19306:	mov    DWORD PTR [ebp-0x44],eax
   19309:	cmp    DWORD PTR [ebp-0x24],eax
   1930c:	je     0x1931b
   1930e:	lea    ecx,[ebp-0x24]
   19311:	call   0x15ab8
   19316:	inc    DWORD PTR [ebp-0x20]
   19319:	jmp    0x192fc
   1931b:	mov    DWORD PTR [ebp-0x48],ebx
   1931e:	mov    DWORD PTR [ebp-0x4c],ebx
   19321:	mov    eax,DWORD PTR [ebp-0x24]
   19324:	cmp    eax,ebx
   19326:	je     0x19334
   19328:	add    eax,0x10
   1932b:	push   eax
   1932c:	lea    ecx,[ebp-0x1c]
   1932f:	call   0x199c8
   19334:	and    DWORD PTR [esi+0x4],0x0
   19338:	and    DWORD PTR [ebp-0x4],0x0
   1933c:	or     DWORD PTR [ebp-0x4],0xffffffff
   19340:	call   0x1938a
   19345:	push   esi
   19346:	lea    eax,[ebp-0x1c]
   19349:	push   eax
   1934a:	call   0x17d72
   1934f:	lea    ecx,[ebp-0x1c]
   19352:	call   0x199be
   19357:	jmp    0x19480
   1935c:	xor    eax,eax
   1935e:	inc    eax
   1935f:	ret    
   19360:	mov    esp,DWORD PTR [ebp-0x18]
   19363:	mov    eax,DWORD PTR [ebp-0x2c]
   19366:	mov    DWORD PTR [eax+0x8],0x4
   1936d:	lea    ecx,[ebp-0x1c]
   19370:	call   0x199be
   19375:	push   0xffffffff
   19377:	lea    eax,[ebp-0x10]
   1937a:	push   eax
   1937b:	call   0x1a396
   19380:	pop    ecx
   19381:	pop    ecx
   19382:	jmp    0x19480
   19387:	mov    esi,DWORD PTR [ebp-0x2c]
   1938a:	push   0x0
   1938c:	push   0x8319c
   19391:	call   DWORD PTR ds:0x1b05c
   19397:	ret    
   19398:	mov    eax,0x22c06c
   1939d:	cmp    esi,eax
   1939f:	ja     0x1941a
   193a1:	je     0x19405
   193a3:	sub    esi,0x22c05c
   193a9:	je     0x193f0
   193ab:	sub    esi,0x4
   193ae:	je     0x193d6
   193b0:	sub    esi,0x4
   193b3:	je     0x193c9
   193b5:	sub    esi,0x4
   193b8:	jne    0x19433
   193ba:	mov    eax,DWORD PTR [ebx+0xc]
   193bd:	push   DWORD PTR [eax]
   193bf:	call   0x146ca
   193c4:	jmp    0x1947c
   193c9:	push   DWORD PTR [ebx+0xc]
   193cc:	call   0x141fe
   193d1:	jmp    0x1947c
   193d6:	mov    DWORD PTR [ebx+0x1c],0x8
   193dd:	mov    eax,DWORD PTR [ebx+0xc]
   193e0:	mov    ecx,DWORD PTR ds:0x83354
   193e6:	mov    DWORD PTR [eax],ecx
   193e8:	mov    ecx,DWORD PTR ds:0x83358
   193ee:	jmp    0x19450
   193f0:	mov    eax,DWORD PTR [ebx+0xc]
   193f3:	mov    ecx,DWORD PTR [eax]
   193f5:	mov    DWORD PTR ds:0x83354,ecx
   193fb:	mov    eax,DWORD PTR [eax+0x4]
   193fe:	mov    ds:0x83358,eax
   19403:	jmp    0x1947c
   19405:	mov    esi,DWORD PTR [ebx+0xc]
   19408:	push   DWORD PTR [esi]
   1940a:	call   0x1473e
   1940f:	mov    DWORD PTR [esi],eax
   19411:	mov    DWORD PTR [ebx+0x1c],0x4
   19418:	jmp    0x19480
   1941a:	sub    esi,0x22c070
   19420:	je     0x19474
   19422:	push   0x8
   19424:	pop    eax
   19425:	sub    esi,eax
   19427:	je     0x1946a
   19429:	sub    esi,0x4
   1942c:	je     0x19455
   1942e:	sub    esi,0x4
   19431:	je     0x1943c
   19433:	mov    DWORD PTR [ebp-0x30],0xc0000010
   1943a:	jmp    0x1947c
   1943c:	mov    DWORD PTR [ebx+0x1c],eax
   1943f:	mov    eax,DWORD PTR [ebx+0xc]
   19442:	mov    ecx,DWORD PTR ds:0x8335c
   19448:	mov    DWORD PTR [eax],ecx
   1944a:	mov    ecx,DWORD PTR ds:0x83360
   19450:	mov    DWORD PTR [eax+0x4],ecx
   19453:	jmp    0x19480
   19455:	mov    eax,DWORD PTR [ebx+0xc]
   19458:	mov    ecx,DWORD PTR [eax]
   1945a:	mov    DWORD PTR ds:0x8335c,ecx
   19460:	mov    eax,DWORD PTR [eax+0x4]
   19463:	mov    ds:0x83360,eax
   19468:	jmp    0x1947c
   1946a:	push   DWORD PTR [ebx+0xc]
   1946d:	call   0x13564
   19472:	jmp    0x1947c
   19474:	push   DWORD PTR [ebx+0xc]
   19477:	call   0x131ba
   1947c:	and    DWORD PTR [ebx+0x1c],0x0
   19480:	mov    eax,DWORD PTR [ebp-0x30]
   19483:	call   0x1a373
   19488:	ret    0x8
   1948b:	int3   
   1948c:	push   0xc
   1948e:	push   0x1b2f8
   19493:	call   0x1a338
   19498:	mov    esi,DWORD PTR [ebp+0xc]
   1949b:	mov    eax,DWORD PTR [esi+0x60]
   1949e:	mov    ecx,DWORD PTR [ebp+0x8]
   194a1:	cmp    ecx,DWORD PTR ds:0x83320
   194a7:	jne    0x194df
   194a9:	mov    al,BYTE PTR [eax]
   194ab:	test   al,al
   194ad:	je     0x194d6
   194af:	cmp    al,0x2
   194b1:	je     0x194d6
   194b3:	jbe    0x194cf
   194b5:	cmp    al,0x4
   194b7:	jbe    0x194c6
   194b9:	cmp    al,0xe
   194bb:	jne    0x194cf
   194bd:	push   esi
   194be:	push   ecx
   194bf:	call   0x121b4
   194c4:	jmp    0x19526
   194c6:	push   esi
   194c7:	push   ecx
   194c8:	call   0x1258e
   194cd:	jmp    0x19526
   194cf:	mov    eax,0xc0000001
   194d4:	jmp    0x19526
   194d6:	push   esi
   194d7:	push   ecx
   194d8:	call   0x84080
   194dd:	jmp    0x19526
   194df:	and    DWORD PTR [ebp-0x4],0x0
   194e3:	push   esi
   194e4:	push   ecx
   194e5:	call   0x1907c
   194ea:	mov    edi,eax
   194ec:	mov    DWORD PTR [ebp-0x1c],edi
   194ef:	or     DWORD PTR [ebp-0x4],0xffffffff
   194f3:	jmp    0x1950f
   194f5:	xor    eax,eax
   194f7:	inc    eax
   194f8:	ret    
   194f9:	mov    esp,DWORD PTR [ebp-0x18]
   194fc:	push   0xd
   194fe:	call   0x146ca
   19503:	mov    edi,0xc0000001
   19508:	or     DWORD PTR [ebp-0x4],0xffffffff
   1950c:	mov    esi,DWORD PTR [ebp+0xc]
   1950f:	cmp    edi,0x103
   19515:	je     0x19524
   19517:	mov    DWORD PTR [esi+0x18],edi
   1951a:	xor    dl,dl
   1951c:	mov    ecx,esi
   1951e:	call   DWORD PTR ds:0x1b020
   19524:	mov    eax,edi
   19526:	call   0x1a373
   1952b:	ret    0x8
   1952e:	push   ebx
   1952f:	gs inc ebx
   19531:	jb     0x19598
   19533:	popa   
   19534:	je     0x1959b
   19536:	inc    ebx
   19537:	ins    BYTE PTR es:[edi],dx
   19538:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   1953f:	jne    0x195b3
   19541:	imul   esi,DWORD PTR [ecx+edi*2+0x28],0x52452029
   19549:	push   edx
   1954a:	dec    edi
   1954b:	push   edx
   1954c:	and    BYTE PTR [edx],bh
   1954e:	and    BYTE PTR [eax],dh
   19550:	js     0x19577
   19552:	cmp    BYTE PTR cs:[eax+0xa],bh
   19556:	add    BYTE PTR [eax],al
   19558:	add    BYTE PTR [eax],al
   1955a:	inc    esp
   1955b:	jb     0x195c6
   1955d:	jbe    0x195c4
   1955f:	jb     0x195a6
   19561:	outs   dx,BYTE PTR ds:[esi]
   19562:	je     0x195d6
   19564:	jns    0x1958e
   19566:	sub    DWORD PTR [eax],esp
   19568:	cmp    ah,BYTE PTR [eax]
   1956a:	and    eax,0x53000a53
   1956f:	add    BYTE PTR [ecx+0x0],bh
   19572:	jae    0x19574
   19574:	inc    ebp
   19575:	add    BYTE PTR [esi+0x0],dh
   19578:	je     0x1957a
   1957a:	inc    ebx
   1957b:	add    BYTE PTR [eax],al
   1957d:	add    BYTE PTR [eax+eax*1+0x44],bl
   19581:	add    BYTE PTR [ebp+0x0],ah
   19584:	jbe    0x19586
   19586:	imul   eax,DWORD PTR [eax],0x650063
   1958c:	pop    esp
   1958d:	add    BYTE PTR ds:0x7300,ah
   19593:	add    BYTE PTR [eax],al
   19595:	add    BYTE PTR [ebx+0x0],dl
   19598:	jns    0x1959a
   1959a:	jae    0x1959c
   1959c:	inc    ebp
   1959d:	add    BYTE PTR [esi+0x0],dh
   195a0:	je     0x195a2
   195a2:	inc    ebx
   195a3:	add    BYTE PTR [eax],al
   195a5:	add    BYTE PTR [eax+eax*1+0x44],bl
   195a9:	add    BYTE PTR [edi+0x0],ch
   195ac:	jae    0x195ae
   195ae:	inc    esp
   195af:	add    BYTE PTR [ebp+0x0],ah
   195b2:	jbe    0x195b4
   195b4:	imul   eax,DWORD PTR [eax],0x650063
   195ba:	jae    0x195bc
   195bc:	pop    esp
   195bd:	add    BYTE PTR ds:0x7300,ah
   195c3:	add    BYTE PTR [eax],al
   195c5:	add    BYTE PTR [ecx+0x6f],cl
   195c8:	inc    ebx
   195c9:	jb     0x19630
   195cb:	popa   
   195cc:	je     0x19633
   195ce:	push   ebx
   195cf:	jns    0x1963e
   195d1:	bound  ebp,QWORD PTR [edi+0x6c]
   195d4:	imul   esp,DWORD PTR [ebx+0x4c],0x286b6e69
   195db:	sub    DWORD PTR [eax],esp
   195dd:	popaw  
   195df:	imul   ebp,DWORD PTR [ebx+esi*2+0x20],0x7830203a
   195e7:	and    eax,0xa78382e
   195ec:	add    BYTE PTR [eax],al
   195ee:	outs   dx,BYTE PTR ds:[esi]
   195ef:	je     0x19655
   195f1:	ins    BYTE PTR es:[edi],dx
   195f2:	ins    BYTE PTR es:[edi],dx
   195f3:	cs fs ins BYTE PTR es:[edi],dx
   195f6:	ins    BYTE PTR es:[edi],dx
   195f7:	add    BYTE PTR [eax],al
   195f9:	add    BYTE PTR [edx+0x77],bl
   195fc:	push   eax
   195fd:	jb     0x1966e
   195ff:	je     0x19666
   19601:	arpl   WORD PTR [esi+edx*2+0x69],si
   19605:	jb     0x1967b
   19607:	jne    0x1966a
   19609:	ins    BYTE PTR es:[edi],dx
   1960a:	dec    ebp
   1960b:	gs ins DWORD PTR es:[edi],dx
   1960d:	outs   dx,DWORD PTR ds:[esi]
   1960e:	jb     0x19689
   19610:	add    BYTE PTR [eax],al
   19612:	dec    esi
   19613:	je     0x1966c
   19615:	jb     0x19680
   19617:	je     0x1967e
   19619:	push   esi
   1961a:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   19621:	gs ins DWORD PTR es:[edi],dx
   19623:	outs   dx,DWORD PTR ds:[esi]
   19624:	jb     0x1969f
   19626:	add    BYTE PTR [eax],al
   19628:	add    BYTE PTR [eax],al
   1962a:	pop    edx
   1962b:	ja     0x1967f
   1962d:	gs jae 0x196a5
   19630:	ins    DWORD PTR es:[edi],dx
   19631:	gs push esp
   19633:	push   0x64616572
   19638:	add    BYTE PTR [eax],al
   1963a:	dec    esi
   1963b:	je     0x1968d
   1963d:	jb     0x196ae
   1963f:	je     0x196a6
   19641:	arpl   WORD PTR [esi+edx*2+0x69],si
   19645:	jb     0x196bb
   19647:	jne    0x196aa
   19649:	ins    BYTE PTR es:[edi],dx
   1964a:	dec    ebp
   1964b:	gs ins DWORD PTR es:[edi],dx
   1964d:	outs   dx,DWORD PTR ds:[esi]
   1964e:	jb     0x196c9
   19650:	and    BYTE PTR [eax],ah
   19652:	and    eax,0x4e000a78
   19657:	je     0x196b0
   19659:	jb     0x196c4
   1965b:	je     0x196c2
   1965d:	push   esi
   1965e:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   19665:	gs ins DWORD PTR es:[edi],dx
   19667:	outs   dx,DWORD PTR ds:[esi]
   19668:	jb     0x196e3
   1966a:	and    BYTE PTR [eax],ah
   1966c:	and    eax,0xa78
   19671:	add    BYTE PTR [edx+0x77],bl
   19674:	push   edx
   19675:	gs jae 0x196ed
   19678:	ins    DWORD PTR es:[edi],dx
   19679:	gs push esp
   1967b:	push   0x64616572
   19680:	and    BYTE PTR [eax],ah
   19682:	and    eax,0x49000a78
   19687:	outs   dx,DWORD PTR ds:[esi]
   19688:	inc    ebx
   19689:	jb     0x196f0
   1968b:	popa   
   1968c:	je     0x196f3
   1968e:	inc    esp
   1968f:	gs jbe 0x196fb
   19692:	arpl   WORD PTR [ebp+0x28],sp
   19695:	sub    DWORD PTR [eax],esp
   19697:	popaw  
   19699:	imul   ebp,DWORD PTR [ebx+esi*2+0x20],0x7830203a
   196a1:	and    eax,0xa78382e
   196a6:	add    ah,cl
   196a8:	push   ebp
   196a9:	lea    ebp,[esp-0x7a4]
   196b0:	sub    esp,0x824
   196b6:	mov    eax,ds:0x83118
   196bb:	push   ebx
   196bc:	push   esi
   196bd:	push   edi
   196be:	mov    DWORD PTR [ebp+0x7a0],eax
   196c4:	xor    eax,eax
   196c6:	lea    edi,[ebp-0x6c]
   196c9:	stos   DWORD PTR es:[edi],eax
   196ca:	stos   DWORD PTR es:[edi],eax
   196cb:	xor    ebx,ebx
   196cd:	push   0x831bc
   196d2:	push   ebx
   196d3:	lea    eax,[ebp-0x70]
   196d6:	push   eax
   196d7:	mov    DWORD PTR [ebp-0x70],0xc
   196de:	mov    DWORD PTR [ebp-0x6c],0x2
   196e5:	mov    BYTE PTR [ebp-0x68],bl
   196e8:	mov    BYTE PTR [ebp-0x67],bl
   196eb:	call   0x1a3a8
   196f0:	push   eax
   196f1:	call   DWORD PTR ds:0x1b0f0
   196f7:	cmp    eax,ebx
   196f9:	jge    0x19708
   196fb:	push   eax
   196fc:	push   0x1952e
   19701:	call   0x1a38a
   19706:	pop    ecx
   19707:	pop    ecx
   19708:	push   0x10
   1970a:	call   0x12822
   1970f:	mov    esi,eax
   19711:	cmp    esi,ebx
   19713:	pop    ecx
   19714:	je     0x19728
   19716:	mov    ecx,esi
   19718:	mov    BYTE PTR [esi+0x8],bl
   1971b:	call   0x15fe4
   19720:	mov    DWORD PTR ds:0x83324,esi
   19726:	jmp    0x1972e
   19728:	mov    DWORD PTR ds:0x83324,ebx
   1972e:	push   0x10
   19730:	call   0x12822
   19735:	mov    esi,eax
   19737:	cmp    esi,ebx
   19739:	pop    ecx
   1973a:	je     0x1974e
   1973c:	mov    ecx,esi
   1973e:	mov    BYTE PTR [esi+0x8],bl
   19741:	call   0x1607a
   19746:	mov    DWORD PTR ds:0x832f8,esi
   1974c:	jmp    0x19754
   1974e:	mov    DWORD PTR ds:0x832f8,ebx
   19754:	push   0x28
   19756:	call   0x12822
   1975b:	cmp    eax,ebx
   1975d:	pop    ecx
   1975e:	je     0x19772
   19760:	push   0x64
   19762:	push   0x14
   19764:	mov    ecx,eax
   19766:	call   0x185f8
   1976b:	mov    ds:0x83198,eax
   19770:	jmp    0x19778
   19772:	mov    DWORD PTR ds:0x83198,ebx
   19778:	push   0x14
   1977a:	call   0x12822
   1977f:	cmp    eax,ebx
   19781:	pop    ecx
   19782:	je     0x19792
   19784:	mov    ecx,eax
   19786:	call   0x180d4
   1978b:	mov    ds:0x83194,eax
   19790:	jmp    0x19798
   19792:	mov    DWORD PTR ds:0x83194,ebx
   19798:	call   0x14686
   1979d:	call   0x18b4c
   197a2:	mov    eax,DWORD PTR [ebp+0x7b0]
   197a8:	push   DWORD PTR [eax+0x4]
   197ab:	push   0x1955a
   197b0:	call   0x1a38a
   197b5:	mov    esi,DWORD PTR ds:0x1b0ec
   197bb:	push   0x1956e
   197c0:	lea    eax,[ebp+0x3a0]
   197c6:	push   0x1957e
   197cb:	push   eax
   197cc:	call   esi
   197ce:	mov    edi,DWORD PTR ds:0x1b01c
   197d4:	add    esp,0x14
   197d7:	lea    eax,[ebp+0x3a0]
   197dd:	push   eax
   197de:	lea    eax,[ebp-0x78]
   197e1:	push   eax
   197e2:	call   edi
   197e4:	push   0x19596
   197e9:	lea    eax,[ebp-0x60]
   197ec:	push   0x195a6
   197f1:	push   eax
   197f2:	call   esi
   197f4:	add    esp,0xc
   197f7:	lea    eax,[ebp-0x60]
   197fa:	push   eax
   197fb:	lea    eax,[ebp-0x80]
   197fe:	push   eax
   197ff:	call   edi
   19801:	mov    esi,DWORD PTR [ebp+0x7ac]
   19807:	push   0x83364
   1980c:	push   ebx
   1980d:	push   0x100
   19812:	push   0x22
   19814:	lea    eax,[ebp-0x78]
   19817:	push   eax
   19818:	push   ebx
   19819:	push   esi
   1981a:	call   DWORD PTR ds:0x1b044
   19820:	mov    edi,eax
   19822:	cmp    edi,ebx
   19824:	jl     0x19997
   1982a:	mov    eax,0x1948c
   1982f:	mov    DWORD PTR [esi+0x94],eax
   19835:	mov    DWORD PTR [esi+0x90],eax
   1983b:	mov    DWORD PTR [esi+0xa4],eax
   19841:	mov    DWORD PTR [esi+0x70],eax
   19844:	mov    DWORD PTR [esi+0x48],eax
   19847:	mov    DWORD PTR [esi+0x44],eax
   1984a:	mov    DWORD PTR [esi+0x40],eax
   1984d:	mov    DWORD PTR [esi+0x38],eax
   19850:	mov    eax,ds:0x83364
   19855:	or     DWORD PTR [eax+0x1c],0x4
   19859:	lea    eax,[ebp-0x78]
   1985c:	push   eax
   1985d:	lea    eax,[ebp-0x80]
   19860:	push   eax
   19861:	call   DWORD PTR ds:0x1b0e8
   19867:	mov    edi,eax
   19869:	cmp    edi,ebx
   1986b:	jge    0x19888
   1986d:	push   edi
   1986e:	push   0x195c6
   19873:	call   0x1a38a
   19878:	pop    ecx
   19879:	pop    ecx
   1987a:	push   DWORD PTR [esi+0x4]
   1987d:	call   DWORD PTR ds:0x1b040
   19883:	jmp    0x199a4
   19888:	mov    esi,DWORD PTR ds:0x1b0c0
   1988e:	push   ebx
   1988f:	push   0x832fc
   19894:	call   esi
   19896:	push   ebx
   19897:	push   0x8319c
   1989c:	call   esi
   1989e:	push   ebx
   1989f:	push   0x83170
   198a4:	call   esi
   198a6:	push   0x8000000
   198ab:	push   0x195ee
   198b0:	lea    eax,[ebp-0x64]
   198b3:	push   eax
   198b4:	call   0x19ebe
   198b9:	push   DWORD PTR [ebp-0x64]
   198bc:	call   DWORD PTR ds:0x1b0e4
   198c2:	push   ebx
   198c3:	push   0x195fa
   198c8:	push   DWORD PTR [ebp-0x64]
   198cb:	mov    esi,eax
   198cd:	call   0x19d78
   198d2:	push   eax
   198d3:	push   esi
   198d4:	call   0x19d2a
   198d9:	add    eax,DWORD PTR [ebp-0x64]
   198dc:	push   eax
   198dd:	call   0x19ce4
   198e2:	mov    ecx,DWORD PTR ds:0x1b0bc
   198e8:	mov    ecx,DWORD PTR [ecx]
   198ea:	mov    eax,DWORD PTR [ecx+eax*4]
   198ed:	push   ebx
   198ee:	push   0x19612
   198f3:	push   DWORD PTR [ebp-0x64]
   198f6:	mov    ds:0x83328,eax
   198fb:	call   0x19d78
   19900:	push   eax
   19901:	push   esi
   19902:	call   0x19d2a
   19907:	add    eax,DWORD PTR [ebp-0x64]
   1990a:	push   eax
   1990b:	call   0x19ce4
   19910:	mov    ecx,DWORD PTR ds:0x1b0bc
   19916:	mov    ecx,DWORD PTR [ecx]
   19918:	mov    eax,DWORD PTR [ecx+eax*4]
   1991b:	push   ebx
   1991c:	push   0x1962a
   19921:	push   DWORD PTR [ebp-0x64]
   19924:	mov    ds:0x8331c,eax
   19929:	call   0x19d78
   1992e:	push   eax
   1992f:	push   esi
   19930:	call   0x19d2a
   19935:	add    eax,DWORD PTR [ebp-0x64]
   19938:	push   eax
   19939:	call   0x19ce4
   1993e:	mov    ecx,DWORD PTR ds:0x1b0bc
   19944:	mov    ecx,DWORD PTR [ecx]
   19946:	push   DWORD PTR ds:0x83328
   1994c:	mov    eax,DWORD PTR [ecx+eax*4]
   1994f:	push   0x1963a
   19954:	mov    ds:0x8332c,eax
   19959:	call   0x1a38a
   1995e:	push   DWORD PTR ds:0x8331c
   19964:	push   0x19656
   19969:	call   0x1a38a
   1996e:	push   DWORD PTR ds:0x8332c
   19974:	push   0x19672
   19979:	call   0x1a38a
   1997e:	add    esp,0x18
   19981:	push   DWORD PTR [ebp-0x64]
   19984:	call   0x19fc0
   19989:	call   0x18464
   1998e:	mov    BYTE PTR ds:0x83368,0x1
   19995:	jmp    0x199a4
   19997:	push   edi
   19998:	push   0x19686
   1999d:	call   0x1a38a
   199a2:	pop    ecx
   199a3:	pop    ecx
   199a4:	mov    ecx,DWORD PTR [ebp+0x7a0]
   199aa:	mov    eax,edi
   199ac:	pop    edi
   199ad:	pop    esi
   199ae:	pop    ebx
   199af:	call   0x1a327
   199b4:	add    ebp,0x7a4
   199ba:	leave  
   199bb:	ret    0x8
   199be:	push   DWORD PTR [ecx]
   199c0:	call   0x1284c
   199c5:	pop    ecx
   199c6:	ret    
   199c7:	int3   
   199c8:	push   ebx
   199c9:	push   esi
   199ca:	push   edi
   199cb:	mov    edi,DWORD PTR [esp+0x10]
   199cf:	mov    eax,DWORD PTR [edi]
   199d1:	mov    esi,ecx
   199d3:	mov    ebx,DWORD PTR [esi]
   199d5:	lea    ecx,[eax+0x1]
   199d8:	mov    dl,BYTE PTR [eax]
   199da:	inc    eax
   199db:	test   dl,dl
   199dd:	jne    0x199d8
   199df:	sub    eax,ecx
   199e1:	inc    eax
   199e2:	push   eax
   199e3:	call   0x12822
   199e8:	pop    ecx
   199e9:	mov    DWORD PTR [esi],eax
   199eb:	mov    ecx,DWORD PTR [edi]
   199ed:	mov    dl,BYTE PTR [ecx]
   199ef:	inc    ecx
   199f0:	mov    BYTE PTR [eax],dl
   199f2:	inc    eax
   199f3:	test   dl,dl
   199f5:	jne    0x199ed
   199f7:	push   ebx
   199f8:	call   0x1284c
   199fd:	pop    ecx
   199fe:	pop    edi
   199ff:	mov    eax,esi
   19a01:	pop    esi
   19a02:	pop    ebx
   19a03:	ret    0x4
   19a06:	mov    eax,DWORD PTR [ecx]
   19a08:	ret    
   19a09:	int3   
   19a0a:	mov    eax,DWORD PTR [ecx]
   19a0c:	lea    ecx,[eax+0x1]
   19a0f:	mov    dl,BYTE PTR [eax]
   19a11:	inc    eax
   19a12:	test   dl,dl
   19a14:	jne    0x19a0f
   19a16:	sub    eax,ecx
   19a18:	ret    
   19a19:	int3   
   19a1a:	mov    eax,DWORD PTR [esp+0x4]
   19a1e:	push   esi
   19a1f:	mov    esi,ecx
   19a21:	lea    ecx,[eax+0x1]
   19a24:	mov    dl,BYTE PTR [eax]
   19a26:	inc    eax
   19a27:	test   dl,dl
   19a29:	jne    0x19a24
   19a2b:	sub    eax,ecx
   19a2d:	inc    eax
   19a2e:	push   eax
   19a2f:	call   0x12822
   19a34:	test   eax,eax
   19a36:	pop    ecx
   19a37:	mov    DWORD PTR [esi],eax
   19a39:	jne    0x19a46
   19a3b:	push   0xc000009a
   19a40:	call   DWORD PTR ds:0x1b048
   19a46:	mov    ecx,DWORD PTR [esp+0x8]
   19a4a:	mov    esi,DWORD PTR [esi]
   19a4c:	mov    al,BYTE PTR [ecx]
   19a4e:	inc    ecx
   19a4f:	mov    BYTE PTR [esi],al
   19a51:	inc    esi
   19a52:	test   al,al
   19a54:	jne    0x19a4c
   19a56:	pop    esi
   19a57:	ret    0x4
   19a5a:	mov    eax,DWORD PTR [esp+0x8]
   19a5e:	push   esi
   19a5f:	mov    esi,DWORD PTR [eax]
   19a61:	mov    eax,DWORD PTR [esp+0x8]
   19a65:	mov    eax,DWORD PTR [eax]
   19a67:	mov    dl,BYTE PTR [eax]
   19a69:	mov    cl,dl
   19a6b:	cmp    dl,BYTE PTR [esi]
   19a6d:	jne    0x19a89
   19a6f:	test   cl,cl
   19a71:	je     0x19a85
   19a73:	mov    dl,BYTE PTR [eax+0x1]
   19a76:	mov    cl,dl
   19a78:	cmp    dl,BYTE PTR [esi+0x1]
   19a7b:	jne    0x19a89
   19a7d:	inc    eax
   19a7e:	inc    eax
   19a7f:	inc    esi
   19a80:	inc    esi
   19a81:	test   cl,cl
   19a83:	jne    0x19a67
   19a85:	xor    eax,eax
   19a87:	jmp    0x19a8e
   19a89:	sbb    eax,eax
   19a8b:	sbb    eax,0xffffffff
   19a8e:	xor    ecx,ecx
   19a90:	test   eax,eax
   19a92:	setl   cl
   19a95:	mov    al,cl
   19a97:	pop    esi
   19a98:	ret    0x8
   19a9b:	int3   
   19a9c:	mov    eax,DWORD PTR [esp+0x8]
   19aa0:	push   esi
   19aa1:	mov    esi,DWORD PTR [eax]
   19aa3:	mov    eax,DWORD PTR [esp+0x8]
   19aa7:	mov    eax,DWORD PTR [eax]
   19aa9:	mov    dl,BYTE PTR [eax]
   19aab:	mov    cl,dl
   19aad:	cmp    dl,BYTE PTR [esi]
   19aaf:	jne    0x19acb
   19ab1:	test   cl,cl
   19ab3:	je     0x19ac7
   19ab5:	mov    dl,BYTE PTR [eax+0x1]
   19ab8:	mov    cl,dl
   19aba:	cmp    dl,BYTE PTR [esi+0x1]
   19abd:	jne    0x19acb
   19abf:	inc    eax
   19ac0:	inc    eax
   19ac1:	inc    esi
   19ac2:	inc    esi
   19ac3:	test   cl,cl
   19ac5:	jne    0x19aa9
   19ac7:	xor    eax,eax
   19ac9:	jmp    0x19ad0
   19acb:	sbb    eax,eax
   19acd:	sbb    eax,0xffffffff
   19ad0:	xor    ecx,ecx
   19ad2:	test   eax,eax
   19ad4:	sete   cl
   19ad7:	mov    al,cl
   19ad9:	pop    esi
   19ada:	ret    0x8
   19add:	int3   
   19ade:	mov    eax,DWORD PTR [esp+0x8]
   19ae2:	push   esi
   19ae3:	mov    esi,DWORD PTR [eax]
   19ae5:	mov    eax,DWORD PTR [esp+0x8]
   19ae9:	mov    eax,DWORD PTR [eax]
   19aeb:	mov    dl,BYTE PTR [eax]
   19aed:	mov    cl,dl
   19aef:	cmp    dl,BYTE PTR [esi]
   19af1:	jne    0x19b0d
   19af3:	test   cl,cl
   19af5:	je     0x19b09
   19af7:	mov    dl,BYTE PTR [eax+0x1]
   19afa:	mov    cl,dl
   19afc:	cmp    dl,BYTE PTR [esi+0x1]
   19aff:	jne    0x19b0d
   19b01:	inc    eax
   19b02:	inc    eax
   19b03:	inc    esi
   19b04:	inc    esi
   19b05:	test   cl,cl
   19b07:	jne    0x19aeb
   19b09:	xor    eax,eax
   19b0b:	jmp    0x19b12
   19b0d:	sbb    eax,eax
   19b0f:	sbb    eax,0xffffffff
   19b12:	xor    ecx,ecx
   19b14:	test   eax,eax
   19b16:	setne  cl
   19b19:	mov    al,cl
   19b1b:	pop    esi
   19b1c:	ret    0x8
   19b1f:	int3   
   19b20:	push   esi
   19b21:	push   DWORD PTR [esp+0x8]
   19b25:	mov    esi,ecx
   19b27:	and    DWORD PTR [esi],0x0
   19b2a:	call   0x19a1a
   19b2f:	mov    eax,esi
   19b31:	pop    esi
   19b32:	ret    0x4
   19b35:	int3   
   19b36:	mov    eax,DWORD PTR [esp+0x4]
   19b3a:	push   esi
   19b3b:	mov    esi,ecx
   19b3d:	and    DWORD PTR [esi],0x0
   19b40:	push   DWORD PTR [eax]
   19b42:	call   0x19a1a
   19b47:	mov    eax,esi
   19b49:	pop    esi
   19b4a:	ret    0x4
   19b4d:	int3   
   19b4e:	mov    eax,DWORD PTR [esp+0x4]
   19b52:	mov    cl,BYTE PTR [esp+0x8]
   19b56:	mov    BYTE PTR [eax],cl
   19b58:	inc    eax
   19b59:	ret    0x8
   19b5c:	mov    eax,DWORD PTR [esp+0x4]
   19b60:	mov    ecx,DWORD PTR [esp+0x8]
   19b64:	mov    DWORD PTR [eax],ecx
   19b66:	add    eax,0x4
   19b69:	ret    0x8
   19b6c:	mov    eax,DWORD PTR [esp+0x4]
   19b70:	mov    cx,WORD PTR [esp+0x8]
   19b75:	mov    WORD PTR [eax],cx
   19b78:	add    eax,0x2
   19b7b:	ret    0x8
   19b7e:	push   esi
   19b7f:	mov    esi,DWORD PTR [esp+0x10]
   19b83:	push   edi
   19b84:	mov    edi,DWORD PTR [esp+0xc]
   19b88:	push   esi
   19b89:	push   DWORD PTR [esp+0x14]
   19b8d:	push   edi
   19b8e:	call   DWORD PTR ds:0x1b030
   19b94:	add    esp,0xc
   19b97:	lea    eax,[edi+esi*1]
   19b9a:	pop    edi
   19b9b:	pop    esi
   19b9c:	ret    0xc
   19b9f:	int3   
   19ba0:	mov    eax,DWORD PTR [esp+0x8]
   19ba4:	mov    ecx,DWORD PTR [esp+0x4]
   19ba8:	sub    ecx,eax
   19baa:	sub    ecx,0x5
   19bad:	mov    DWORD PTR [eax+0x1],ecx
   19bb0:	mov    BYTE PTR [eax],0xe9
   19bb3:	add    eax,0x5
   19bb6:	ret    0x8
   19bb9:	int3   
   19bba:	inc    esi
   19bbb:	jne    0x19c2b
   19bbd:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   19bc1:	outs   dx,BYTE PTR ds:[esi]
   19bc2:	and    BYTE PTR [ecx+0x64],ah
   19bc5:	fs jb  0x19be8
   19bc8:	cmp    ah,BYTE PTR [eax]
   19bca:	xor    BYTE PTR [eax+0x25],bh
   19bcd:	cmp    BYTE PTR cs:[eax+0xa],bh
   19bd1:	add    BYTE PTR [eax+0x61],cl
   19bd4:	outs   dx,BYTE PTR ds:[esi]
   19bd5:	fs ins BYTE PTR es:[edi],dx
   19bd7:	gs jb  0x19bfa
   19bda:	popa   
   19bdb:	fs fs jb 0x19bff
   19bdf:	cmp    ah,BYTE PTR [eax]
   19be1:	xor    BYTE PTR [eax+0x25],bh
   19be4:	cmp    BYTE PTR cs:[eax+0xa],bh
   19be8:	add    BYTE PTR [eax],al
   19bea:	inc    ebx
   19beb:	popa   
   19bec:	ins    BYTE PTR es:[edi],dx
   19bed:	ins    BYTE PTR es:[edi],dx
   19bee:	inc    edi
   19bef:	popa   
   19bf0:	je     0x19c57
   19bf2:	and    BYTE PTR [ecx+0x74],ah
   19bf5:	and    BYTE PTR [edx],bh
   19bf7:	and    BYTE PTR [eax],dh
   19bf9:	js     0x19c20
   19bfb:	cmp    BYTE PTR cs:[eax+0x3b],bh
   19bff:	and    BYTE PTR [ebx+0x69],dh
   19c02:	jp     0x19c69
   19c04:	and    BYTE PTR [edx],bh
   19c06:	and    BYTE PTR ds:0xcc000a64,ah
   19c0c:	push   ebp
   19c0d:	mov    ebp,esp
   19c0f:	push   ecx
   19c10:	push   ecx
   19c11:	push   ebx
   19c12:	push   esi
   19c13:	mov    esi,DWORD PTR [ebp+0x8]
   19c16:	xor    ebx,ebx
   19c18:	cmp    esi,ebx
   19c1a:	mov    DWORD PTR [ebp-0x8],ebx
   19c1d:	jne    0x19c26
   19c1f:	xor    eax,eax
   19c21:	jmp    0x19cde
   19c26:	lea    eax,[ebp-0x8]
   19c29:	push   eax
   19c2a:	push   esi
   19c2b:	call   0x11000
   19c30:	add    ebx,DWORD PTR [ebp-0x8]
   19c33:	add    esi,DWORD PTR [ebp-0x8]
   19c36:	cmp    ebx,0x5
   19c39:	jb     0x19c26
   19c3b:	push   edi
   19c3c:	push   0x206b6444
   19c41:	lea    edi,[ebx+0x5]
   19c44:	push   edi
   19c45:	push   0x0
   19c47:	call   DWORD PTR ds:0x1b03c
   19c4d:	push   DWORD PTR [ebp+0x8]
   19c50:	mov    DWORD PTR [ebp-0x4],eax
   19c53:	push   0x19bba
   19c58:	call   0x1a38a
   19c5d:	push   DWORD PTR [ebp+0xc]
   19c60:	push   0x19bd2
   19c65:	call   0x1a38a
   19c6a:	push   edi
   19c6b:	push   DWORD PTR [ebp-0x4]
   19c6e:	push   0x19bea
   19c73:	call   0x1a38a
   19c78:	mov    ecx,edi
   19c7a:	mov    edi,DWORD PTR [ebp-0x4]
   19c7d:	mov    esi,ecx
   19c7f:	shr    ecx,0x2
   19c82:	mov    edx,0x90909090
   19c87:	mov    eax,edx
   19c89:	rep stos DWORD PTR es:[edi],eax
   19c8b:	mov    ecx,esi
   19c8d:	mov    esi,DWORD PTR [ebp+0x8]
   19c90:	and    ecx,0x3
   19c93:	rep stos BYTE PTR es:[edi],al
   19c95:	mov    edi,DWORD PTR [ebp-0x4]
   19c98:	mov    ecx,ebx
   19c9a:	mov    eax,ecx
   19c9c:	shr    ecx,0x2
   19c9f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   19ca1:	mov    ecx,eax
   19ca3:	and    ecx,0x3
   19ca6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   19ca8:	mov    ecx,ebx
   19caa:	mov    esi,ecx
   19cac:	mov    eax,edx
   19cae:	mov    edx,DWORD PTR [ebp+0x8]
   19cb1:	shr    ecx,0x2
   19cb4:	mov    edi,edx
   19cb6:	rep stos DWORD PTR es:[edi],eax
   19cb8:	mov    ecx,esi
   19cba:	mov    esi,DWORD PTR [ebp-0x4]
   19cbd:	and    ecx,0x3
   19cc0:	rep stos BYTE PTR es:[edi],al
   19cc2:	add    esp,0x1c
   19cc5:	lea    eax,[esi+ebx*1]
   19cc8:	push   eax
   19cc9:	lea    eax,[edx+0x5]
   19ccc:	push   eax
   19ccd:	call   0x19ba0
   19cd2:	push   edx
   19cd3:	push   DWORD PTR [ebp+0xc]
   19cd6:	call   0x19ba0
   19cdb:	mov    eax,esi
   19cdd:	pop    edi
   19cde:	pop    esi
   19cdf:	pop    ebx
   19ce0:	leave  
   19ce1:	ret    0x8
   19ce4:	mov    eax,DWORD PTR [esp+0x4]
   19ce8:	mov    eax,DWORD PTR [eax+0x1]
   19ceb:	ret    0x4
   19cee:	mov    ecx,DWORD PTR [esp+0x4]
   19cf2:	movzx  eax,WORD PTR [ecx+0x14]
   19cf6:	lea    eax,[eax+ecx*1+0x18]
   19cfa:	movzx  ecx,WORD PTR [ecx+0x6]
   19cfe:	push   esi
   19cff:	xor    esi,esi
   19d01:	test   ecx,ecx
   19d03:	push   edi
   19d04:	jbe    0x19d22
   19d06:	mov    edx,DWORD PTR [eax+0xc]
   19d09:	cmp    DWORD PTR [esp+0x10],edx
   19d0d:	jb     0x19d1a
   19d0f:	mov    edi,DWORD PTR [eax+0x8]
   19d12:	add    edi,edx
   19d14:	cmp    DWORD PTR [esp+0x10],edi
   19d18:	jb     0x19d24
   19d1a:	add    eax,0x28
   19d1d:	inc    esi
   19d1e:	cmp    esi,ecx
   19d20:	jb     0x19d06
   19d22:	xor    eax,eax
   19d24:	pop    edi
   19d25:	pop    esi
   19d26:	ret    0x8
   19d29:	int3   
   19d2a:	push   esi
   19d2b:	push   DWORD PTR [esp+0xc]
   19d2f:	mov    esi,DWORD PTR [esp+0xc]
   19d33:	push   esi
   19d34:	call   0x19cee
   19d39:	mov    ecx,eax
   19d3b:	test   ecx,ecx
   19d3d:	je     0x19d51
   19d3f:	mov    eax,DWORD PTR [esi+0x3c]
   19d42:	dec    eax
   19d43:	not    eax
   19d45:	and    eax,DWORD PTR [ecx+0x14]
   19d48:	sub    eax,DWORD PTR [ecx+0xc]
   19d4b:	add    eax,DWORD PTR [esp+0xc]
   19d4f:	jmp    0x19d55
   19d51:	mov    eax,DWORD PTR [esp+0xc]
   19d55:	pop    esi
   19d56:	ret    0x8
   19d59:	int3   
   19d5a:	cmp    DWORD PTR [esp+0xc],0x0
   19d5f:	je     0x19d67
   19d61:	mov    eax,DWORD PTR [esp+0x8]
   19d65:	jmp    0x19d74
   19d67:	push   DWORD PTR [esp+0x8]
   19d6b:	push   DWORD PTR [esp+0x8]
   19d6f:	call   0x19d2a
   19d74:	ret    0xc
   19d77:	int3   
   19d78:	push   ebp
   19d79:	mov    ebp,esp
   19d7b:	sub    esp,0x20
   19d7e:	push   ebx
   19d7f:	push   esi
   19d80:	mov    esi,DWORD PTR [ebp+0x8]
   19d83:	push   edi
   19d84:	push   esi
   19d85:	call   DWORD PTR ds:0x1b0e4
   19d8b:	mov    ebx,eax
   19d8d:	lea    eax,[ebp-0x18]
   19d90:	push   eax
   19d91:	push   0x0
   19d93:	push   0x0
   19d95:	push   esi
   19d96:	mov    DWORD PTR [ebp-0xc],ebx
   19d99:	call   0x1a390
   19d9e:	mov    edi,eax
   19da0:	mov    eax,DWORD PTR [ebx+0x50]
   19da3:	mov    ecx,edi
   19da5:	sub    ecx,esi
   19da7:	cmp    eax,ecx
   19da9:	jb     0x19dfa
   19dab:	mov    ecx,DWORD PTR [ebp-0x18]
   19dae:	sub    ecx,esi
   19db0:	add    ecx,edi
   19db2:	cmp    eax,ecx
   19db4:	jb     0x19dfa
   19db6:	push   DWORD PTR [ebp+0x10]
   19db9:	push   DWORD PTR [edi+0x20]
   19dbc:	push   ebx
   19dbd:	call   0x19d5a
   19dc2:	push   DWORD PTR [ebp+0x10]
   19dc5:	mov    ebx,eax
   19dc7:	push   DWORD PTR [edi+0x1c]
   19dca:	add    ebx,esi
   19dcc:	push   DWORD PTR [ebp-0xc]
   19dcf:	call   0x19d5a
   19dd4:	push   DWORD PTR [ebp+0x10]
   19dd7:	add    eax,esi
   19dd9:	push   DWORD PTR [edi+0x24]
   19ddc:	mov    DWORD PTR [ebp-0x20],eax
   19ddf:	push   DWORD PTR [ebp-0xc]
   19de2:	call   0x19d5a
   19de7:	and    DWORD PTR [ebp-0x14],0x0
   19deb:	add    eax,esi
   19ded:	mov    esi,DWORD PTR [edi+0x18]
   19df0:	test   esi,esi
   19df2:	mov    DWORD PTR [ebp-0x1c],eax
   19df5:	mov    DWORD PTR [ebp-0x10],esi
   19df8:	jg     0x19e06
   19dfa:	xor    eax,eax
   19dfc:	pop    edi
   19dfd:	pop    esi
   19dfe:	pop    ebx
   19dff:	leave  
   19e00:	ret    0xc
   19e03:	mov    esi,DWORD PTR [ebp-0x10]
   19e06:	mov    eax,DWORD PTR [ebp-0x14]
   19e09:	push   DWORD PTR [ebp+0x10]
   19e0c:	add    esi,eax
   19e0e:	mov    eax,DWORD PTR [ebp+0xc]
   19e11:	sar    esi,1
   19e13:	push   DWORD PTR [ebx+esi*4]
   19e16:	mov    DWORD PTR [ebp-0x8],eax
   19e19:	push   DWORD PTR [ebp-0xc]
   19e1c:	call   0x19d5a
   19e21:	add    eax,DWORD PTR [ebp+0x8]
   19e24:	mov    cl,BYTE PTR [eax]
   19e26:	mov    edx,DWORD PTR [ebp-0x8]
   19e29:	mov    BYTE PTR [ebp-0x1],cl
   19e2c:	cmp    cl,BYTE PTR [edx]
   19e2e:	jne    0x19e4d
   19e30:	test   cl,cl
   19e32:	je     0x19e49
   19e34:	mov    cl,BYTE PTR [eax+0x1]
   19e37:	mov    BYTE PTR [ebp-0x1],cl
   19e3a:	cmp    cl,BYTE PTR [edx+0x1]
   19e3d:	jne    0x19e4d
   19e3f:	add    DWORD PTR [ebp-0x8],0x2
   19e43:	inc    eax
   19e44:	inc    eax
   19e45:	test   cl,cl
   19e47:	jne    0x19e24
   19e49:	xor    eax,eax
   19e4b:	jmp    0x19e52
   19e4d:	sbb    eax,eax
   19e4f:	sbb    eax,0xffffffff
   19e52:	test   eax,eax
   19e54:	je     0x19e6b
   19e56:	jge    0x19e5e
   19e58:	inc    esi
   19e59:	mov    DWORD PTR [ebp-0x14],esi
   19e5c:	jmp    0x19e61
   19e5e:	mov    DWORD PTR [ebp-0x10],esi
   19e61:	mov    eax,DWORD PTR [ebp-0x10]
   19e64:	cmp    DWORD PTR [ebp-0x14],eax
   19e67:	jl     0x19e03
   19e69:	jmp    0x19dfa
   19e6b:	mov    eax,DWORD PTR [ebp-0x1c]
   19e6e:	movzx  eax,WORD PTR [eax+esi*2]
   19e72:	mov    ecx,DWORD PTR [ebp-0x20]
   19e75:	mov    ecx,DWORD PTR [ecx+eax*4]
   19e78:	mov    eax,ecx
   19e7a:	sub    eax,edi
   19e7c:	add    eax,DWORD PTR [ebp+0x8]
   19e7f:	cmp    eax,DWORD PTR [ebp-0x18]
   19e82:	sbb    eax,eax
   19e84:	not    eax
   19e86:	and    eax,ecx
   19e88:	jmp    0x19dfc
   19e8d:	int3   
   19e8e:	pop    esp
   19e8f:	add    BYTE PTR [ebx+0x0],dh
   19e92:	jns    0x19e94
   19e94:	jae    0x19e96
   19e96:	je     0x19e98
   19e98:	add    BYTE PTR gs:[ebp+0x0],ch
   19e9c:	jb     0x19e9e
   19e9e:	outs   dx,DWORD PTR ds:[esi]
   19e9f:	add    BYTE PTR [edi+0x0],ch
   19ea2:	je     0x19ea4
   19ea4:	pop    esp
   19ea5:	add    BYTE PTR [ebx+0x0],dh
   19ea8:	jns    0x19eaa
   19eaa:	jae    0x19eac
   19eac:	je     0x19eae
   19eae:	add    BYTE PTR gs:[ebp+0x0],ch
   19eb2:	xor    eax,DWORD PTR [eax]
   19eb4:	xor    al,BYTE PTR [eax]
   19eb6:	pop    esp
   19eb7:	add    BYTE PTR ds:0x5300,ah
   19ebd:	add    BYTE PTR [ebp-0x75],dl
   19ec0:	in     al,dx
   19ec1:	sub    esp,0x40
   19ec4:	push   ebx
   19ec5:	push   esi
   19ec6:	xor    ebx,ebx
   19ec8:	push   edi
   19ec9:	xor    eax,eax
   19ecb:	lea    edi,[ebp-0x14]
   19ece:	mov    DWORD PTR [ebp-0x18],ebx
   19ed1:	stos   DWORD PTR es:[edi],eax
   19ed2:	mov    eax,DWORD PTR [ebp+0xc]
   19ed5:	mov    DWORD PTR [ebp-0xc],ebx
   19ed8:	mov    DWORD PTR [ebp-0x10],ebx
   19edb:	lea    esi,[eax+0x1]
   19ede:	mov    cl,BYTE PTR [eax]
   19ee0:	inc    eax
   19ee1:	cmp    cl,bl
   19ee3:	jne    0x19ede
   19ee5:	sub    eax,esi
   19ee7:	push   0x20736649
   19eec:	lea    eax,[eax+eax*1+0x40]
   19ef0:	push   eax
   19ef1:	push   0x1
   19ef3:	call   DWORD PTR ds:0x1b03c
   19ef9:	push   DWORD PTR [ebp+0xc]
   19efc:	mov    esi,eax
   19efe:	push   0x19e8e
   19f03:	push   esi
   19f04:	call   DWORD PTR ds:0x1b0ec
   19f0a:	add    esp,0xc
   19f0d:	push   esi
   19f0e:	lea    eax,[ebp-0x20]
   19f11:	push   eax
   19f12:	call   DWORD PTR ds:0x1b01c
   19f18:	push   0x10
   19f1a:	lea    eax,[ebp-0x20]
   19f1d:	mov    DWORD PTR [ebp-0x38],eax
   19f20:	push   0x1
   19f22:	lea    eax,[ebp-0x28]
   19f25:	push   eax
   19f26:	lea    eax,[ebp-0x40]
   19f29:	push   eax
   19f2a:	push   0x80100000
   19f2f:	lea    eax,[ebp-0x4]
   19f32:	push   eax
   19f33:	mov    DWORD PTR [ebp-0x40],0x18
   19f3a:	mov    DWORD PTR [ebp-0x3c],ebx
   19f3d:	mov    DWORD PTR [ebp-0x34],ebx
   19f40:	mov    DWORD PTR [ebp-0x30],ebx
   19f43:	mov    DWORD PTR [ebp-0x2c],ebx
   19f46:	call   DWORD PTR ds:0x1b0a8
   19f4c:	push   ebx
   19f4d:	push   esi
   19f4e:	mov    edi,eax
   19f50:	call   DWORD PTR ds:0x1b024
   19f56:	cmp    edi,ebx
   19f58:	jl     0x19faa
   19f5a:	push   DWORD PTR [ebp-0x4]
   19f5d:	lea    eax,[ebp-0x18]
   19f60:	push   DWORD PTR [ebp+0x10]
   19f63:	push   0x2
   19f65:	push   eax
   19f66:	push   ebx
   19f67:	push   0x4
   19f69:	lea    eax,[ebp-0x8]
   19f6c:	push   eax
   19f6d:	call   DWORD PTR ds:0x1b0fc
   19f73:	push   DWORD PTR [ebp-0x4]
   19f76:	mov    esi,DWORD PTR ds:0x1b10c
   19f7c:	mov    edi,eax
   19f7e:	call   esi
   19f80:	cmp    edi,ebx
   19f82:	jl     0x19faa
   19f84:	push   0x2
   19f86:	push   ebx
   19f87:	push   0x2
   19f89:	lea    eax,[ebp-0x10]
   19f8c:	push   eax
   19f8d:	push   ebx
   19f8e:	push   ebx
   19f8f:	push   ebx
   19f90:	lea    eax,[ebp-0xc]
   19f93:	push   eax
   19f94:	push   0xffffffff
   19f96:	push   DWORD PTR [ebp-0x8]
   19f99:	call   DWORD PTR ds:0x1b0f8
   19f9f:	push   DWORD PTR [ebp-0x8]
   19fa2:	mov    edi,eax
   19fa4:	call   esi
   19fa6:	cmp    edi,ebx
   19fa8:	jge    0x19fae
   19faa:	mov    eax,edi
   19fac:	jmp    0x19fb8
   19fae:	mov    eax,DWORD PTR [ebp+0x8]
   19fb1:	mov    ecx,DWORD PTR [ebp-0xc]
   19fb4:	mov    DWORD PTR [eax],ecx
   19fb6:	xor    eax,eax
   19fb8:	pop    edi
   19fb9:	pop    esi
   19fba:	pop    ebx
   19fbb:	leave  
   19fbc:	ret    0xc
   19fbf:	int3   
   19fc0:	push   DWORD PTR [esp+0x4]
   19fc4:	push   0xffffffff
   19fc6:	call   DWORD PTR ds:0x1b100
   19fcc:	ret    0x4
   19fcf:	int3   
   19fd0:	push   esi
   19fd1:	mov    esi,DWORD PTR [esp+0x8]
   19fd5:	test   esi,esi
   19fd7:	jne    0x19fdc
   19fd9:	lea    esi,[ecx+0x18]
   19fdc:	mov    edx,DWORD PTR [esp+0xc]
   19fe0:	test   edx,edx
   19fe2:	jne    0x19fe8
   19fe4:	xor    eax,eax
   19fe6:	jmp    0x19ff8
   19fe8:	movzx  eax,BYTE PTR [edx]
   19feb:	push   edx
   19fec:	lea    eax,[eax*8+0x1b408]
   19ff3:	push   esi
   19ff4:	push   eax
   19ff5:	call   DWORD PTR [eax+0x4]
   19ff8:	pop    esi
   19ff9:	ret    0x8
   19ffc:	push   ebp
   19ffd:	mov    ebp,esp
   19fff:	mov    eax,DWORD PTR [ebp+0x14]
   1a002:	push   ebx
   1a003:	mov    ebx,DWORD PTR [ebp+0x8]
   1a006:	push   esi
   1a007:	mov    esi,DWORD PTR [ebp+0x10]
   1a00a:	sub    esi,eax
   1a00c:	push   edi
   1a00d:	lea    edi,[ebx+eax*1]
   1a010:	mov    eax,esi
   1a012:	xor    edx,edx
   1a014:	dec    eax
   1a015:	je     0x1a036
   1a017:	dec    eax
   1a018:	je     0x1a028
   1a01a:	dec    eax
   1a01b:	dec    eax
   1a01c:	jne    0x1a042
   1a01e:	mov    eax,DWORD PTR [ecx+0xc]
   1a021:	mov    edx,DWORD PTR [edi]
   1a023:	and    DWORD PTR [eax],0x0
   1a026:	jmp    0x1a042
   1a028:	mov    eax,DWORD PTR [ecx+0xc]
   1a02b:	movsx  edx,WORD PTR [edi]
   1a02e:	mov    DWORD PTR [eax],0x2
   1a034:	jmp    0x1a042
   1a036:	mov    eax,DWORD PTR [ecx+0xc]
   1a039:	movsx  edx,BYTE PTR [edi]
   1a03c:	mov    DWORD PTR [eax],0x3
   1a042:	mov    ecx,DWORD PTR [ebp+0xc]
   1a045:	lea    eax,[edx+ecx*1]
   1a048:	add    eax,DWORD PTR [ebp+0x10]
   1a04b:	sub    edx,ebx
   1a04d:	add    edx,ecx
   1a04f:	dec    esi
   1a050:	je     0x1a062
   1a052:	dec    esi
   1a053:	je     0x1a05d
   1a055:	dec    esi
   1a056:	dec    esi
   1a057:	jne    0x1a064
   1a059:	mov    DWORD PTR [edi],edx
   1a05b:	jmp    0x1a064
   1a05d:	mov    WORD PTR [edi],dx
   1a060:	jmp    0x1a064
   1a062:	mov    BYTE PTR [edi],dl
   1a064:	pop    edi
   1a065:	pop    esi
   1a066:	pop    ebx
   1a067:	pop    ebp
   1a068:	ret    0x10
   1a06b:	int3   
   1a06c:	mov    eax,DWORD PTR [esp+0xc]
   1a070:	inc    eax
   1a071:	ret    0xc
   1a074:	mov    eax,ecx
   1a076:	mov    ecx,DWORD PTR [esp+0x4]
   1a07a:	and    DWORD PTR [eax],0x0
   1a07d:	and    DWORD PTR [eax+0x4],0x0
   1a081:	test   ecx,ecx
   1a083:	jne    0x1a088
   1a085:	lea    ecx,[eax+0x14]
   1a088:	mov    edx,DWORD PTR [esp+0x8]
   1a08c:	test   edx,edx
   1a08e:	mov    DWORD PTR [eax+0x8],ecx
   1a091:	jne    0x1a096
   1a093:	lea    edx,[eax+0x10]
   1a096:	mov    DWORD PTR [eax+0xc],edx
   1a099:	and    DWORD PTR [ecx],0x0
   1a09c:	mov    ecx,DWORD PTR [eax+0xc]
   1a09f:	and    DWORD PTR [ecx],0x0
   1a0a2:	ret    0x8
   1a0a5:	int3   
   1a0a6:	push   ebp
   1a0a7:	mov    ebp,esp
   1a0a9:	push   ecx
   1a0aa:	push   ecx
   1a0ab:	mov    eax,ecx
   1a0ad:	mov    ecx,DWORD PTR [ebp+0x8]
   1a0b0:	mov    ecx,DWORD PTR [ecx]
   1a0b2:	test   ecx,0x200000
   1a0b8:	mov    DWORD PTR [ebp-0x8],eax
   1a0bb:	je     0x1a0c3
   1a0bd:	cmp    DWORD PTR [eax+0x4],0x0
   1a0c1:	jmp    0x1a0c6
   1a0c3:	cmp    DWORD PTR [eax],0x0
   1a0c6:	mov    eax,ecx
   1a0c8:	je     0x1a0cf
   1a0ca:	shr    eax,0xb
   1a0cd:	jmp    0x1a0d2
   1a0cf:	shr    eax,0x8
   1a0d2:	and    eax,0x7
   1a0d5:	shr    ecx,0xe
   1a0d8:	and    ecx,0x7
   1a0db:	mov    DWORD PTR [ebp-0x4],eax
   1a0de:	jbe    0x1a122
   1a0e0:	mov    edx,DWORD PTR [ebp+0x10]
   1a0e3:	add    ecx,edx
   1a0e5:	push   ebx
   1a0e6:	mov    bl,BYTE PTR [ecx]
   1a0e8:	movzx  edx,bl
   1a0eb:	mov    dl,BYTE PTR [edx+0x1b308]
   1a0f1:	test   dl,0x10
   1a0f4:	je     0x1a11b
   1a0f6:	mov    cl,BYTE PTR [ecx+0x1]
   1a0f9:	and    cl,0x7
   1a0fc:	cmp    cl,0x5
   1a0ff:	jne    0x1a11b
   1a101:	and    bl,0xc0
   1a104:	je     0x1a115
   1a106:	cmp    bl,0x40
   1a109:	jne    0x1a110
   1a10b:	lea    ecx,[eax+0x1]
   1a10e:	jmp    0x1a118
   1a110:	cmp    bl,0x80
   1a113:	jne    0x1a11b
   1a115:	lea    ecx,[eax+0x4]
   1a118:	mov    DWORD PTR [ebp-0x4],ecx
   1a11b:	and    edx,0xf
   1a11e:	add    DWORD PTR [ebp-0x4],edx
   1a121:	pop    ebx
   1a122:	mov    ecx,DWORD PTR [ebp-0x4]
   1a125:	mov    edx,ecx
   1a127:	push   esi
   1a128:	mov    esi,DWORD PTR [ebp+0x10]
   1a12b:	shr    ecx,0x2
   1a12e:	push   edi
   1a12f:	mov    edi,DWORD PTR [ebp+0xc]
   1a132:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a134:	mov    ecx,edx
   1a136:	and    ecx,0x3
   1a139:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1a13b:	mov    edi,DWORD PTR [ebp+0x8]
   1a13e:	mov    ecx,DWORD PTR [edi]
   1a140:	mov    esi,DWORD PTR [ebp-0x8]
   1a143:	shl    ecx,0xc
   1a146:	sar    ecx,0x1d
   1a149:	je     0x1a15f
   1a14b:	push   ecx
   1a14c:	push   eax
   1a14d:	push   DWORD PTR [ebp+0x10]
   1a150:	mov    ecx,esi
   1a152:	push   DWORD PTR [ebp+0xc]
   1a155:	call   0x19ffc
   1a15a:	mov    ecx,DWORD PTR [esi+0x8]
   1a15d:	mov    DWORD PTR [ecx],eax
   1a15f:	test   BYTE PTR [edi+0x2],0x40
   1a163:	je     0x1a16a
   1a165:	mov    eax,DWORD PTR [esi+0xc]
   1a168:	neg    DWORD PTR [eax]
   1a16a:	test   BYTE PTR [edi+0x2],0x10
   1a16e:	je     0x1a176
   1a170:	mov    eax,DWORD PTR [esi+0x8]
   1a173:	or     DWORD PTR [eax],0xffffffff
   1a176:	mov    eax,DWORD PTR [ebp-0x4]
   1a179:	mov    ecx,DWORD PTR [ebp+0x10]
   1a17c:	pop    edi
   1a17d:	add    eax,ecx
   1a17f:	pop    esi
   1a180:	leave  
   1a181:	ret    0xc
   1a184:	push   ebx
   1a185:	push   esi
   1a186:	mov    esi,DWORD PTR [esp+0x14]
   1a18a:	push   edi
   1a18b:	mov    edi,DWORD PTR [esp+0x14]
   1a18f:	push   esi
   1a190:	push   edi
   1a191:	push   DWORD PTR [esp+0x18]
   1a195:	mov    ebx,ecx
   1a197:	call   0x1a0a6
   1a19c:	lea    eax,[esi+0x1]
   1a19f:	movzx  edx,BYTE PTR [eax]
   1a1a2:	push   eax
   1a1a3:	inc    edi
   1a1a4:	lea    edx,[edx*8+0x1b408]
   1a1ab:	push   edi
   1a1ac:	push   edx
   1a1ad:	mov    ecx,ebx
   1a1af:	call   DWORD PTR [edx+0x4]
   1a1b2:	pop    edi
   1a1b3:	pop    esi
   1a1b4:	pop    ebx
   1a1b5:	ret    0xc
   1a1b8:	push   ebx
   1a1b9:	push   esi
   1a1ba:	mov    esi,DWORD PTR [esp+0x14]
   1a1be:	push   edi
   1a1bf:	mov    edi,DWORD PTR [esp+0x14]
   1a1c3:	push   esi
   1a1c4:	push   edi
   1a1c5:	push   DWORD PTR [esp+0x18]
   1a1c9:	mov    ebx,ecx
   1a1cb:	call   0x1a0a6
   1a1d0:	lea    eax,[esi+0x1]
   1a1d3:	movzx  edx,BYTE PTR [eax]
   1a1d6:	push   eax
   1a1d7:	inc    edi
   1a1d8:	lea    edx,[edx*8+0x1bc10]
   1a1df:	push   edi
   1a1e0:	push   edx
   1a1e1:	mov    ecx,ebx
   1a1e3:	call   DWORD PTR [edx+0x4]
   1a1e6:	pop    edi
   1a1e7:	pop    esi
   1a1e8:	pop    ebx
   1a1e9:	ret    0xc
   1a1ec:	mov    DWORD PTR [ecx],0x1
   1a1f2:	jmp    0x1a184
   1a1f7:	int3   
   1a1f8:	mov    DWORD PTR [ecx+0x4],0x1
   1a1ff:	jmp    0x1a184
   1a204:	push   ebp
   1a205:	mov    ebp,esp
   1a207:	sub    esp,0x10
   1a20a:	mov    eax,DWORD PTR [ebp+0x10]
   1a20d:	test   BYTE PTR [eax+0x1],0x38
   1a211:	push   eax
   1a212:	push   DWORD PTR [ebp+0xc]
   1a215:	jne    0x1a22a
   1a217:	mov    DWORD PTR [ebp-0x8],0x5bf6
   1a21e:	mov    DWORD PTR [ebp-0x4],0x1a0a6
   1a225:	lea    eax,[ebp-0x8]
   1a228:	jmp    0x1a23b
   1a22a:	mov    DWORD PTR [ebp-0x10],0x52f6
   1a231:	mov    DWORD PTR [ebp-0xc],0x1a0a6
   1a238:	lea    eax,[ebp-0x10]
   1a23b:	push   eax
   1a23c:	call   0x1a0a6
   1a241:	leave  
   1a242:	ret    0xc
   1a245:	int3   
   1a246:	push   ebp
   1a247:	mov    ebp,esp
   1a249:	sub    esp,0x10
   1a24c:	mov    eax,DWORD PTR [ebp+0x10]
   1a24f:	test   BYTE PTR [eax+0x1],0x38
   1a253:	push   eax
   1a254:	push   DWORD PTR [ebp+0xc]
   1a257:	jne    0x1a26c
   1a259:	mov    DWORD PTR [ebp-0x8],0x66f7
   1a260:	mov    DWORD PTR [ebp-0x4],0x1a0a6
   1a267:	lea    eax,[ebp-0x8]
   1a26a:	jmp    0x1a27d
   1a26c:	mov    DWORD PTR [ebp-0x10],0x52f7
   1a273:	mov    DWORD PTR [ebp-0xc],0x1a0a6
   1a27a:	lea    eax,[ebp-0x10]
   1a27d:	push   eax
   1a27e:	call   0x1a0a6
   1a283:	leave  
   1a284:	ret    0xc
   1a287:	int3   
   1a288:	push   ebp
   1a289:	mov    ebp,esp
   1a28b:	push   ecx
   1a28c:	push   ecx
   1a28d:	mov    edx,DWORD PTR [ebp+0x10]
   1a290:	mov    al,BYTE PTR [edx+0x1]
   1a293:	cmp    al,0x15
   1a295:	je     0x1a2b5
   1a297:	cmp    al,0x25
   1a299:	je     0x1a2b5
   1a29b:	and    al,0x38
   1a29d:	cmp    al,0x10
   1a29f:	je     0x1a2ad
   1a2a1:	cmp    al,0x18
   1a2a3:	je     0x1a2ad
   1a2a5:	cmp    al,0x20
   1a2a7:	je     0x1a2ad
   1a2a9:	cmp    al,0x28
   1a2ab:	jne    0x1a2c1
   1a2ad:	mov    eax,DWORD PTR [ecx+0x8]
   1a2b0:	or     DWORD PTR [eax],0xffffffff
   1a2b3:	jmp    0x1a2c1
   1a2b5:	mov    eax,DWORD PTR [edx+0x2]
   1a2b8:	mov    eax,DWORD PTR [eax]
   1a2ba:	push   esi
   1a2bb:	mov    esi,DWORD PTR [ecx+0x8]
   1a2be:	mov    DWORD PTR [esi],eax
   1a2c0:	pop    esi
   1a2c1:	push   edx
   1a2c2:	push   DWORD PTR [ebp+0xc]
   1a2c5:	lea    eax,[ebp-0x8]
   1a2c8:	push   eax
   1a2c9:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a2d0:	mov    DWORD PTR [ebp-0x4],0x1a0a6
   1a2d7:	call   0x1a0a6
   1a2dc:	leave  
   1a2dd:	ret    0xc
   1a2e0:	push   ebp
   1a2e1:	mov    ebp,esp
   1a2e3:	sub    esp,0x5c
   1a2e6:	mov    eax,ds:0x83118
   1a2eb:	push   0x0
   1a2ed:	push   DWORD PTR [ebp+0x10]
   1a2f0:	mov    DWORD PTR [ebp-0x4],eax
   1a2f3:	lea    ecx,[ebp-0x5c]
   1a2f6:	call   0x1a074
   1a2fb:	push   DWORD PTR [ebp+0xc]
   1a2fe:	lea    ecx,[ebp-0x5c]
   1a301:	push   DWORD PTR [ebp+0x8]
   1a304:	call   0x19fd0
   1a309:	mov    ecx,DWORD PTR [ebp-0x4]
   1a30c:	call   0x1a327
   1a311:	leave  
   1a312:	ret    0xc
   1a315:	xor    eax,eax
   1a317:	push   eax
   1a318:	push   eax
   1a319:	push   eax
   1a31a:	push   eax
   1a31b:	push   0xf7
   1a320:	call   DWORD PTR ds:0x1b108
   1a326:	int3   
   1a327:	cmp    ecx,DWORD PTR ds:0x83118
   1a32d:	jne    0x1a330
   1a32f:	ret    
   1a330:	jmp    0x1a315
   1a335:	int3   
   1a336:	int3   
   1a337:	int3   
   1a338:	push   0x1a384
   1a33d:	mov    eax,fs:0x0
   1a343:	push   eax
   1a344:	mov    eax,DWORD PTR [esp+0x10]
   1a348:	mov    DWORD PTR [esp+0x10],ebp
   1a34c:	lea    ebp,[esp+0x10]
   1a350:	sub    esp,eax
   1a352:	push   ebx
   1a353:	push   esi
   1a354:	push   edi
   1a355:	mov    eax,DWORD PTR [ebp-0x8]
   1a358:	mov    DWORD PTR [ebp-0x18],esp
   1a35b:	push   eax
   1a35c:	mov    eax,DWORD PTR [ebp-0x4]
   1a35f:	mov    DWORD PTR [ebp-0x4],0xffffffff
   1a366:	mov    DWORD PTR [ebp-0x8],eax
   1a369:	lea    eax,[ebp-0x10]
   1a36c:	mov    fs:0x0,eax
   1a372:	ret    
   1a373:	mov    ecx,DWORD PTR [ebp-0x10]
   1a376:	mov    DWORD PTR fs:0x0,ecx
   1a37d:	pop    ecx
   1a37e:	pop    edi
   1a37f:	pop    esi
   1a380:	pop    ebx
   1a381:	leave  
   1a382:	push   ecx
   1a383:	ret    
   1a384:	jmp    DWORD PTR ds:0x1b110
   1a38a:	jmp    DWORD PTR ds:0x1b010
   1a390:	jmp    DWORD PTR ds:0x1b094
   1a396:	jmp    DWORD PTR ds:0x1b0b8
   1a39c:	jmp    DWORD PTR ds:0x1b0d8
   1a3a2:	jmp    DWORD PTR ds:0x1b0dc
   1a3a8:	jmp    DWORD PTR ds:0x1b0f4

Disassembly of section PAGE:

00084000 <PAGE>:
   84000:	push   edx
   84001:	inc    ecx
   84002:	dec    ebp
   84003:	inc    esp
   84004:	dec    ecx
   84005:	push   ebx
   84006:	dec    ebx
   84007:	cmp    ah,BYTE PTR [eax]
   84009:	add    BYTE PTR [eax],al
   8400b:	add    BYTE PTR [ebx+0x72],al
   8400e:	gs popa 
   84010:	je     0x84077
   84012:	inc    ebx
   84013:	ins    BYTE PTR es:[edi],dx
   84014:	outs   dx,DWORD PTR ds:[esi]
   84015:	jae    0x8407c
   84017:	and    BYTE PTR ds:0xa4e4920,ch
   8401d:	add    BYTE PTR [eax],al
   8401f:	add    BYTE PTR [edx+0x41],dl
   84022:	dec    ebp
   84023:	inc    esp
   84024:	dec    ecx
   84025:	push   ebx
   84026:	dec    ebx
   84027:	cmp    ah,BYTE PTR [eax]
   84029:	add    BYTE PTR [eax],al
   8402b:	add    BYTE PTR [ecx+0x52],cl
   8402e:	push   eax
   8402f:	pop    edi
   84030:	dec    ebp
   84031:	dec    edx
   84032:	pop    edi
   84033:	inc    ebx
   84034:	dec    esp
   84035:	dec    edi
   84036:	push   ebx
   84037:	inc    ebp
   84038:	and    BYTE PTR [eax],ch
   8403a:	and    eax,0xa2970
   8403f:	add    BYTE PTR [edx+0x41],dl
   84042:	dec    ebp
   84043:	inc    esp
   84044:	dec    ecx
   84045:	push   ebx
   84046:	dec    ebx
   84047:	cmp    ah,BYTE PTR [eax]
   84049:	add    BYTE PTR [eax],al
   8404b:	add    BYTE PTR [ecx+0x52],cl
   8404e:	push   eax
   8404f:	pop    edi
   84050:	dec    ebp
   84051:	dec    edx
   84052:	pop    edi
   84053:	inc    ebx
   84054:	push   edx
   84055:	inc    ebp
   84056:	inc    ecx
   84057:	push   esp
   84058:	inc    ebp
   84059:	and    BYTE PTR [eax],ch
   8405b:	and    eax,0xa2970
   84060:	push   edx
   84061:	inc    ecx
   84062:	dec    ebp
   84063:	inc    esp
   84064:	dec    ecx
   84065:	push   ebx
   84066:	dec    ebx
   84067:	cmp    ah,BYTE PTR [eax]
   84069:	add    BYTE PTR [eax],al
   8406b:	add    BYTE PTR [ebx+0x72],al
   8406e:	gs popa 
   84070:	je     0x840d7
   84072:	inc    ebx
   84073:	ins    BYTE PTR es:[edi],dx
   84074:	outs   dx,DWORD PTR ds:[esi]
   84075:	jae    0x840dc
   84077:	and    BYTE PTR ds:0x54554f20,ch
   8407d:	or     al,BYTE PTR [eax]
   8407f:	int3   
   84080:	push   ebx
   84081:	push   esi
   84082:	push   edi
   84083:	push   0x84000
   84088:	xor    edi,edi
   8408a:	xor    ebx,ebx
   8408c:	call   0x1a38a
   84091:	mov    DWORD PTR [esp],0x8400c
   84098:	call   0x1a38a
   8409d:	mov    esi,DWORD PTR [esp+0x18]
   840a1:	mov    eax,DWORD PTR [esi+0x60]
   840a4:	movzx  eax,BYTE PTR [eax]
   840a7:	sub    eax,edi
   840a9:	pop    ecx
   840aa:	je     0x840ce
   840ac:	dec    eax
   840ad:	dec    eax
   840ae:	je     0x840bc
   840b0:	mov    eax,0xc0000002
   840b5:	mov    ebx,eax
   840b7:	mov    DWORD PTR [esi+0x18],eax
   840ba:	jmp    0x840e9
   840bc:	push   0x84020
   840c1:	call   0x1a38a
   840c6:	push   esi
   840c7:	push   0x8402c
   840cc:	jmp    0x840de
   840ce:	push   0x84040
   840d3:	call   0x1a38a
   840d8:	push   esi
   840d9:	push   0x8404c
   840de:	call   0x1a38a
   840e3:	add    esp,0xc
   840e6:	mov    DWORD PTR [esi+0x18],edi
   840e9:	mov    ecx,esi
   840eb:	xor    dl,dl
   840ed:	mov    DWORD PTR [esi+0x1c],edi
   840f0:	call   DWORD PTR ds:0x1b020
   840f6:	push   0x84060
   840fb:	call   0x1a38a
   84100:	mov    DWORD PTR [esp],0x8406c
   84107:	call   0x1a38a
   8410c:	pop    ecx
   8410d:	pop    edi
   8410e:	pop    esi
   8410f:	mov    eax,ebx
   84111:	pop    ebx
   84112:	ret    0x8

Disassembly of section INIT:

00085000 <INIT>:
   85000:	mov    eax,ds:0x83118
   85005:	test   eax,eax
   85007:	mov    ecx,0xbb40e64e
   8500c:	je     0x85012
   8500e:	cmp    eax,ecx
   85010:	jne    0x8502b
   85012:	mov    eax,ds:0x1b104
   85017:	mov    eax,DWORD PTR [eax]
   85019:	xor    eax,0x83118
   8501e:	mov    ds:0x83118,eax
   85023:	jne    0x8502b
   85025:	mov    DWORD PTR ds:0x83118,ecx
   8502b:	jmp    0x196a8
   85030:	jl     0x85082
   85032:	pop    es
	...
   8503b:	add    dl,bl
   8503d:	push   esi
   8503e:	pop    es
   8503f:	add    BYTE PTR [eax],dl
   85041:	mov    al,0x0
   85043:	add    BYTE PTR [eax+edx*2+0x7],ch
	...
   8504f:	add    BYTE PTR [eax],bl
   85051:	push   edi
   85052:	pop    es
   85053:	add    BYTE PTR [eax],al
   85055:	mov    al,0x0
	...
   8506b:	add    dh,dh
   8506d:	push   esi
   8506e:	pop    es
   8506f:	add    al,ch
   85071:	push   esi
   85072:	pop    es
   85073:	add    BYTE PTR [edi+edx*2],al
   85076:	pop    es
   85077:	add    BYTE PTR [eax],al
   85079:	add    BYTE PTR [eax],al
   8507b:	add    ah,cl
   8507d:	push   ecx
   8507e:	pop    es
   8507f:	add    al,bl
   85081:	push   ecx
   85082:	pop    es
   85083:	add    ah,dh
   85085:	push   ecx
   85086:	pop    es
   85087:	add    BYTE PTR [edx],cl
   85089:	push   edx
   8508a:	pop    es
   8508b:	add    BYTE PTR [edx],ah
   8508d:	push   edx
   8508e:	pop    es
   8508f:	add    BYTE PTR [eax],bh
   85091:	push   edx
   85092:	pop    es
   85093:	add    BYTE PTR [edx+edx*2+0x7],cl
   85097:	add    BYTE PTR [edx+edx*2+0x7],ah
   8509b:	add    BYTE PTR [edx+edx*2+0x7],bh
   8509f:	add    BYTE PTR [esi-0x59fff8ae],al
   850a5:	push   edx
   850a6:	pop    es
   850a7:	add    BYTE PTR [esi-0x29fff8ae],bh
   850ad:	push   edx
   850ae:	pop    es
   850af:	add    al,ch
   850b1:	push   edx
   850b2:	pop    es
   850b3:	add    dl,bh
   850b5:	push   edx
   850b6:	pop    es
   850b7:	add    BYTE PTR [edx],cl
   850b9:	push   ebx
   850ba:	pop    es
   850bb:	add    BYTE PTR [edx],ch
   850bd:	push   ebx
   850be:	pop    es
   850bf:	add    BYTE PTR [esi+0x53],al
   850c2:	pop    es
   850c3:	add    BYTE PTR [eax+0x53],dl
   850c6:	pop    es
   850c7:	add    BYTE PTR [edx+0x53],ch
   850ca:	pop    es
   850cb:	add    BYTE PTR [ebx+edx*2+0x7],bh
   850cf:	add    BYTE PTR [ebx+edx*2+0x53ae0007],dl
   850d6:	pop    es
   850d7:	add    dl,al
   850d9:	push   ebx
   850da:	pop    es
   850db:	add    al,bl
   850dd:	push   ebx
   850de:	pop    es
   850df:	add    al,ch
   850e1:	push   ebx
   850e2:	pop    es
   850e3:	add    dl,bh
   850e5:	push   ebx
   850e6:	pop    es
   850e7:	add    BYTE PTR [eax],cl
   850e9:	push   esp
   850ea:	pop    es
   850eb:	add    BYTE PTR [esp+edx*2],dl
   850ee:	pop    es
   850ef:	add    BYTE PTR [ecx+edx*2+0x54280007],dh
   850f6:	pop    es
   850f7:	add    BYTE PTR [eax],bh
   850f9:	push   esp
   850fa:	pop    es
   850fb:	add    BYTE PTR [eax+0x54],cl
   850fe:	pop    es
   850ff:	add    BYTE PTR [esi+0x54],dl
   85102:	pop    es
   85103:	add    BYTE PTR [esi+0x54],dh
   85106:	pop    es
   85107:	add    BYTE PTR [eax-0x65fff8ac],cl
   8510d:	push   esp
   8510e:	pop    es
   8510f:	add    BYTE PTR [eax-0x2dfff8ac],bh
   85115:	push   esp
   85116:	pop    es
   85117:	add    al,ah
   85119:	push   esp
   8511a:	pop    es
   8511b:	add    dl,ch
   8511d:	push   esp
   8511e:	pop    es
   8511f:	add    BYTE PTR [esi],al
   85121:	push   ebp
   85122:	pop    es
   85123:	add    BYTE PTR [edx],ah
   85125:	push   ebp
   85126:	pop    es
   85127:	add    BYTE PTR [edx*2+0x55500007],dh
   8512e:	pop    es
   8512f:	add    BYTE PTR [ebp+edx*2+0x7],ah
   85133:	add    BYTE PTR [edx+0x55],dh
   85136:	pop    es
   85137:	add    BYTE PTR [edx-0x65fff8ab],al
   8513d:	push   ebp
   8513e:	pop    es
   8513f:	add    BYTE PTR [eax-0x3dfff8ab],ch
   85145:	push   ebp
   85146:	pop    es
   85147:	add    al,ah
   85149:	push   ebp
   8514a:	pop    es
   8514b:	add    BYTE PTR [edx],al
   8514d:	push   esi
   8514e:	pop    es
   8514f:	add    BYTE PTR [esi+edx*2],dl
   85152:	pop    es
   85153:	add    BYTE PTR [eax],ch
   85155:	push   esi
   85156:	pop    es
   85157:	add    BYTE PTR [eax+0x56],al
   8515a:	pop    es
   8515b:	add    BYTE PTR [esi+edx*2+0x7],cl
   8515f:	add    BYTE PTR [esi+0x56],ah
   85162:	pop    es
   85163:	add    BYTE PTR [esi+edx*2+0x7],bh
   85167:	add    BYTE PTR [edx-0x5bfff8aa],dl
   8516d:	push   esi
   8516e:	pop    es
   8516f:	add    BYTE PTR [esi+edx*2+0x56ca0007],bh
   85176:	pop    es
   85177:	add    BYTE PTR [edx-0x69fff8af],ch
   8517d:	push   ecx
   8517e:	pop    es
   8517f:	add    BYTE PTR [esi],bl
   85181:	push   esp
   85182:	pop    es
   85183:	add    BYTE PTR [ecx+edx*2+0x7],cl
   8518a:	add    BYTE PTR [eax],al
   8518c:	out    dx,al
   8518d:	add    eax,0x6e736377
   85192:	arpl   WORD PTR [ebp+0x70],bp
   85195:	add    BYTE PTR [ebx+0x78655f05],ch
   8519b:	arpl   WORD PTR [ebp+0x70],sp
   8519e:	je     0x851ff
   851a0:	push   0x6c646e61
   851a5:	gs jb  0x851db
   851a8:	add    BYTE PTR [eax],al
   851aa:	sub    eax,DWORD PTR ds:0x6c43775a
   851b0:	outs   dx,DWORD PTR ds:[esi]
   851b1:	jae    0x85218
   851b3:	add    BYTE PTR [ebx+eax*1+0x4f],cl
   851b7:	bound  esp,QWORD PTR [esi+0x44]
   851ba:	gs jb  0x85222
   851bd:	data16 gs jb 0x85226
   851c1:	outs   dx,BYTE PTR ds:[esi]
   851c2:	arpl   WORD PTR [ebp+0x4f],sp
   851c5:	bound  ebp,QWORD PTR [edx+0x65]
   851c8:	arpl   WORD PTR [eax+eax*1+0x0],si
   851cc:	xor    DWORD PTR [eax],eax
   851ce:	inc    esp
   851cf:	bound  esp,QWORD PTR [edi+0x50]
   851d2:	jb     0x8523d
   851d4:	outs   dx,BYTE PTR ds:[esi]
   851d5:	je     0x851d7
   851d7:	add    BYTE PTR [ebx+eax*1+0x4f],al
   851db:	bound  edx,QWORD PTR [edx+0x65]
   851de:	data16 gs jb 0x85247
   851e2:	outs   dx,BYTE PTR ds:[esi]
   851e3:	arpl   WORD PTR [ebp+0x4f],sp
   851e6:	bound  ebp,QWORD PTR [edx+0x65]
   851e9:	arpl   WORD PTR [edx+eax*2+0x79],si
   851ed:	dec    eax
   851ee:	popa   
   851ef:	outs   dx,BYTE PTR ds:[esi]
   851f0:	fs ins BYTE PTR es:[edi],dx
   851f2:	add    BYTE PTR gs:[eax+0x3],al
   851f6:	dec    edi
   851f7:	bound  ecx,QWORD PTR [edi+0x70]
   851fa:	outs   dx,BYTE PTR gs:[esi]
   851fc:	dec    edi
   851fd:	bound  ebp,QWORD PTR [edx+0x65]
   85200:	arpl   WORD PTR [edx+eax*2+0x79],si
   85204:	dec    esi
   85205:	popa   
   85206:	ins    DWORD PTR es:[edi],dx
   85207:	add    BYTE PTR gs:[eax],al
   8520a:	cmp    eax,DWORD PTR [edx+edx*2]
   8520d:	je     0x8527b
   8520f:	dec    ecx
   85210:	outs   dx,BYTE PTR ds:[esi]
   85211:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   85219:	gs push ebx
   8521b:	je     0x8528f
   8521d:	imul   ebp,DWORD PTR [esi+0x67],0x1f10000
   85224:	dec    ecx
   85225:	outs   dx,DWORD PTR ds:[esi]
   85226:	inc    bx
   85228:	outs   dx,DWORD PTR ds:[esi]
   85229:	ins    DWORD PTR es:[edi],dx
   8522a:	jo     0x85298
   8522c:	gs je  0x85294
   8522f:	push   edx
   85230:	gs jno 0x852a8
   85233:	gs jae 0x852aa
   85236:	add    BYTE PTR [eax],al
   85238:	dec    edi
   85239:	add    BYTE PTR [ebp+0x78],al
   8523c:	inc    esi
   8523d:	jb     0x852a4
   8523f:	gs push eax
   85241:	outs   dx,DWORD PTR ds:[esi]
   85242:	outs   dx,DWORD PTR ds:[esi]
   85243:	ins    BYTE PTR es:[edi],dx
   85244:	push   edi
   85245:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xb1006761
   8524d:	add    DWORD PTR [ecx+0x6f],ecx
   85250:	push   edx
   85251:	gs ins BYTE PTR es:[edi],dx
   85253:	gs popa 
   85255:	jae    0x852bc
   85257:	push   edx
   85258:	gs ins DWORD PTR es:[edi],dx
   8525a:	outs   dx,DWORD PTR ds:[esi]
   8525b:	jbe    0x852c2
   8525d:	dec    esp
   8525e:	outs   dx,DWORD PTR ds:[esi]
   8525f:	arpl   WORD PTR [ebx+0x45],bp
   85262:	js     0x85264
   85264:	sub    al,BYTE PTR [ecx]
   85266:	dec    ecx
   85267:	outs   dx,DWORD PTR ds:[esi]
   85268:	inc    ecx
   85269:	arpl   WORD PTR [ecx+0x75],si
   8526c:	imul   esi,DWORD PTR [edx+0x65],0x6f6d6552
   85273:	jbe    0x852da
   85275:	dec    esp
   85276:	outs   dx,DWORD PTR ds:[esi]
   85277:	arpl   WORD PTR [ebx+0x45],bp
   8527a:	js     0x8527c
   8527c:	into   
   8527d:	add    eax,0x6d6d656d
   85282:	outs   dx,DWORD PTR ds:[esi]
   85283:	jbe    0x852ea
   85285:	add    ah,cl
   85287:	add    cl,BYTE PTR [ebp+0x6d]
   8528a:	dec    ebp
   8528b:	popa   
   8528c:	jo     0x852da
   8528e:	outs   dx,DWORD PTR ds:[esi]
   8528f:	arpl   WORD PTR [ebx+0x65],bp
   85292:	fs push eax
   85294:	popa   
   85295:	addr16 gs jae 0x852ec
   85299:	jo     0x85300
   8529b:	arpl   WORD PTR [ecx+0x66],bp
   8529e:	jns    0x852e3
   852a0:	popa   
   852a1:	arpl   WORD PTR [eax+0x65],bp
   852a4:	add    BYTE PTR [eax],al
   852a6:	in     al,0x3
   852a8:	push   edx
   852a9:	je     0x85317
   852ab:	inc    ebx
   852ac:	outs   dx,DWORD PTR ds:[esi]
   852ad:	jo     0x85328
   852af:	push   ebp
   852b0:	outs   dx,BYTE PTR ds:[esi]
   852b1:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   852b8:	jb     0x85323
   852ba:	outs   dx,BYTE PTR ds:[esi]
   852bb:	add    BYTE PTR [bx+si],al
   852be:	inc    edx
   852bf:	add    BYTE PTR [ebp+0x78],al
   852c2:	inc    ecx
   852c3:	ins    BYTE PTR es:[edi],dx
   852c4:	ins    BYTE PTR es:[edi],dx
   852c5:	outs   dx,DWORD PTR ds:[esi]
   852c6:	arpl   WORD PTR [ecx+0x74],sp
   852c9:	gs push eax
   852cb:	outs   dx,DWORD PTR ds:[esi]
   852cc:	outs   dx,DWORD PTR ds:[esi]
   852cd:	ins    BYTE PTR es:[edi],dx
   852ce:	push   edi
   852cf:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x5e006761
   852d7:	add    DWORD PTR [ecx+0x6f],ecx
   852da:	inc    esp
   852db:	gs ins BYTE PTR es:[edi],dx
   852dd:	gs je  0x85345
   852e0:	inc    esp
   852e1:	gs jbe 0x8534d
   852e4:	arpl   WORD PTR [ebp+0x0],sp
   852e7:	add    BYTE PTR [ebx+0x1],cl
   852ea:	dec    ecx
   852eb:	outs   dx,DWORD PTR ds:[esi]
   852ec:	inc    ebx
   852ed:	jb     0x85354
   852ef:	popa   
   852f0:	je     0x85357
   852f2:	inc    esp
   852f3:	gs jbe 0x8535f
   852f6:	arpl   WORD PTR [ebp+0x0],sp
   852f9:	add    BYTE PTR [esi+0x0],dh
   852fc:	inc    ebp
   852fd:	js     0x85351
   852ff:	popa   
   85300:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   85307:	jne    0x8537c
   85309:	add    BYTE PTR [ebx+0x0],al
   8530c:	inc    ebp
   8530d:	js     0x85350
   8530f:	ins    BYTE PTR es:[edi],dx
   85310:	ins    BYTE PTR es:[edi],dx
   85311:	outs   dx,DWORD PTR ds:[esi]
   85312:	arpl   WORD PTR [ecx+0x74],sp
   85315:	gs push eax
   85317:	outs   dx,DWORD PTR ds:[esi]
   85318:	outs   dx,DWORD PTR ds:[esi]
   85319:	ins    BYTE PTR es:[edi],dx
   8531a:	push   edi
   8531b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   85323:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   8532a:	ins    BYTE PTR es:[edi],dx
   8532b:	add    eax,0x7551775a
   85330:	gs jb  0x853ac
   85333:	dec    ecx
   85334:	outs   dx,BYTE PTR ds:[esi]
   85335:	outs   dx,WORD PTR ds:[esi]
   85337:	jb     0x853a6
   85339:	popa   
   8533a:	je     0x853a5
   8533c:	outs   dx,DWORD PTR ds:[esi]
   8533d:	outs   dx,BYTE PTR ds:[esi]
   8533e:	push   eax
   8533f:	jb     0x853b0
   85341:	arpl   WORD PTR [ebp+0x73],sp
   85344:	jae    0x85346
   85346:	in     al,dx
   85347:	add    eax,0x6c736377
   8534c:	outs   dx,BYTE PTR gs:[esi]
   8534e:	add    BYTE PTR [eax],al
   85350:	fiadd  DWORD PTR [ebx]
   85352:	push   edx
   85353:	je     0x853c1
   85355:	inc    ebx
   85356:	outs   dx,DWORD PTR ds:[esi]
   85357:	ins    DWORD PTR es:[edi],dx
   85358:	jo     0x853bb
   8535a:	jb     0x853c1
   8535c:	push   ebp
   8535d:	outs   dx,BYTE PTR ds:[esi]
   8535e:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   85365:	jb     0x853d0
   85367:	outs   dx,BYTE PTR ds:[esi]
   85368:	add    BYTE PTR [bx+si+0x2],bl
   8536c:	dec    ebx
   8536d:	gs push edx
   8536f:	gs ins BYTE PTR es:[edi],dx
   85371:	gs popa 
   85373:	jae    0x853da
   85375:	dec    ebp
   85376:	jne    0x853ec
   85378:	gs js  0x8537b
   8537b:	add    BYTE PTR [esi+0x57654b02],al
   85381:	popa   
   85382:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   8538a:	ins    BYTE PTR es:[di],dx
   8538c:	gs dec edi
   8538e:	bound  ebp,QWORD PTR [edx+0x65]
   85391:	arpl   WORD PTR [eax+eax*1-0x77],si
   85395:	add    eax,0x6553775a
   8539a:	je     0x853e5
   8539c:	outs   dx,BYTE PTR ds:[esi]
   8539d:	outs   dx,WORD PTR ds:[esi]
   8539f:	jb     0x8540e
   853a1:	popa   
   853a2:	je     0x8540d
   853a4:	outs   dx,DWORD PTR ds:[esi]
   853a5:	outs   dx,BYTE PTR ds:[esi]
   853a6:	push   eax
   853a7:	jb     0x85418
   853a9:	arpl   WORD PTR [ebp+0x73],sp
   853ac:	jae    0x853ae
   853ae:	ds add eax,0x7544775a
   853b4:	jo     0x85422
   853b6:	imul   esp,DWORD PTR [ebx+0x61],0x6f546574
   853bd:	imul   esp,DWORD PTR [ebp+0x6e],0x0
   853c1:	add    BYTE PTR [edi+0x5],dl
   853c4:	pop    edx
   853c5:	ja     0x85416
   853c7:	jo     0x8542e
   853c9:	outs   dx,BYTE PTR ds:[esi]
   853ca:	push   eax
   853cb:	jb     0x8543c
   853cd:	arpl   WORD PTR [ebp+0x73],sp
   853d0:	jae    0x85426
   853d2:	outs   dx,DWORD PTR ds:[esi]
   853d3:	imul   esp,DWORD PTR [ebp+0x6e],0x0
   853d7:	add    BYTE PTR [esi+0x5],dl
   853da:	pop    edx
   853db:	ja     0x8542c
   853dd:	jo     0x85444
   853df:	outs   dx,BYTE PTR ds:[esi]
   853e0:	push   eax
   853e1:	jb     0x85452
   853e3:	arpl   WORD PTR [ebp+0x73],sp
   853e6:	jae    0x853e8
   853e8:	inc    ecx
   853e9:	add    eax,0x6e45775a
   853ee:	jne    0x8545d
   853f0:	gs jb  0x85454
   853f3:	je     0x8545a
   853f5:	dec    ebx
   853f6:	gs jns 0x853f9
   853f9:	add    BYTE PTR [ecx],bh
   853fb:	add    eax,0x6544775a
   85400:	ins    BYTE PTR es:[edi],dx
   85401:	gs je  0x85469
   85404:	dec    ebx
   85405:	gs jns 0x85408
   85408:	push   ebp
   85409:	add    eax,0x704f775a
   8540e:	outs   dx,BYTE PTR gs:[esi]
   85410:	dec    ebx
   85411:	gs jns 0x85414
   85414:	in     eax,dx
   85415:	add    eax,0x6e736377
   8541a:	arpl   WORD PTR [ecx+0x74],sp
   8541d:	add    bh,ah
   8541f:	add    eax,0x63736377
   85424:	popa   
   85425:	je     0x85427
   85427:	add    BYTE PTR [edx+0x5],cl
   8542a:	pop    edx
   8542b:	ja     0x85479
   8542d:	outs   dx,DWORD PTR ds:[esi]
   8542e:	popa   
   8542f:	fs inc esp
   85431:	jb     0x8549c
   85433:	jbe    0x8549a
   85435:	jb     0x85437
   85437:	add    BYTE PTR [edi+0x53775a05],cl
   8543d:	gs je  0x85496
   85440:	popa   
   85441:	ins    BYTE PTR es:[edi],dx
   85442:	jne    0x854a9
   85444:	dec    ebx
   85445:	gs jns 0x85448
   85448:	xor    al,BYTE PTR ds:0x7243775a
   8544e:	gs popa 
   85450:	je     0x854b7
   85452:	dec    ebx
   85453:	gs jns 0x85456
   85456:	xor    eax,0x6c745204
   8545b:	dec    ecx
   8545c:	ins    DWORD PTR es:[edi],dx
   8545d:	popa   
   8545e:	addr16 gs inc esp
   85461:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   85468:	jns    0x854af
   8546a:	outs   dx,BYTE PTR ds:[esi]
   8546b:	je     0x854df
   8546d:	jns    0x854c3
   8546f:	outs   dx,DWORD PTR ds:[esi]
   85470:	inc    esp
   85471:	popa   
   85472:	je     0x854d5
   85474:	add    BYTE PTR [eax],al
   85476:	adc    BYTE PTR [edx],al
   85478:	dec    ebx
   85479:	gs inc esp
   8547b:	gs je  0x854df
   8547e:	arpl   WORD PTR [eax+0x50],bp
   85481:	jb     0x854f2
   85483:	arpl   WORD PTR [ebp+0x73],sp
   85486:	jae    0x85488
   85488:	add    eax,0x41654b02
   8548d:	je     0x85503
   8548f:	popa   
   85490:	arpl   WORD PTR [eax+0x50],bp
   85493:	jb     0x85504
   85495:	arpl   WORD PTR [ebp+0x73],sp
   85498:	jae    0x8549a
   8549a:	call   0x6f6f:0x4c735003
   854a1:	imul   esi,DWORD PTR [ebp+0x70],0x50
   854a5:	jb     0x85516
   854a7:	arpl   WORD PTR [ebp+0x73],sp
   854aa:	jae    0x854ee
   854ac:	jns    0x854fe
   854ae:	jb     0x8551f
   854b0:	arpl   WORD PTR [ebp+0x73],sp
   854b3:	jae    0x854fe
   854b5:	add    BYTE PTR fs:[eax],al
   854b8:	es add eax,0x6c41775a
   854be:	ins    BYTE PTR es:[edi],dx
   854bf:	outs   dx,DWORD PTR ds:[esi]
   854c0:	arpl   WORD PTR [ecx+0x74],sp
   854c3:	gs push esi
   854c5:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   854cc:	gs ins DWORD PTR es:[edi],dx
   854ce:	outs   dx,DWORD PTR ds:[esi]
   854cf:	jb     0x8554a
   854d1:	add    BYTE PTR [ebx+0x5],dl
   854d4:	pop    edx
   854d5:	ja     0x85526
   854d7:	jo     0x8553e
   854d9:	outs   dx,BYTE PTR ds:[esi]
   854da:	inc    esi
   854db:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x7705ea00
   854e3:	arpl   WORD PTR [ebx+0x63],si
   854e6:	jo     0x85561
   854e8:	add    BYTE PTR [eax],al
   854ea:	ins    DWORD PTR es:[edi],dx
   854eb:	add    eax,0x7551775a
   854f0:	gs jb  0x8556c
   854f3:	dec    ecx
   854f4:	outs   dx,BYTE PTR ds:[esi]
   854f5:	outs   dx,WORD PTR ds:[esi]
   854f7:	jb     0x85566
   854f9:	popa   
   854fa:	je     0x85565
   854fc:	outs   dx,DWORD PTR ds:[esi]
   854fd:	outs   dx,BYTE PTR ds:[esi]
   854fe:	push   esp
   854ff:	push   0x64616572
   85504:	add    BYTE PTR [eax],al
   85506:	jne    0x8550d
   85508:	pop    edx
   85509:	ja     0x8555c
   8550b:	jne    0x85572
   8550d:	jb     0x85588
   8550f:	push   ebx
   85510:	jns    0x85585
   85512:	je     0x85579
   85514:	ins    DWORD PTR es:[edi],dx
   85515:	dec    ecx
   85516:	outs   dx,BYTE PTR ds:[esi]
   85517:	outs   dx,WORD PTR ds:[esi]
   85519:	jb     0x85588
   8551b:	popa   
   8551c:	je     0x85587
   8551e:	outs   dx,DWORD PTR ds:[esi]
   8551f:	outs   dx,BYTE PTR ds:[esi]
   85520:	add    BYTE PTR [eax],al
   85522:	scas   eax,DWORD PTR es:[edi]
   85523:	add    eax,0x636f6c5f
   85528:	popa   
   85529:	ins    BYTE PTR es:[edi],dx
   8552a:	pop    edi
   8552b:	jne    0x8559b
   8552d:	ja     0x85598
   8552f:	outs   dx,BYTE PTR ds:[esi]
   85530:	xor    al,BYTE PTR fs:[eax]
   85533:	add    BYTE PTR [ecx+0x2],ch
   85536:	dec    ebx
   85537:	gs push ebx
   85539:	gs jb  0x855b2
   8553c:	imul   esp,DWORD PTR [ebx+0x65],0x63736544
   85543:	jb     0x855ae
   85545:	jo     0x855bb
   85547:	outs   dx,DWORD PTR ds:[esi]
   85548:	jb     0x8559e
   8554a:	popa   
   8554b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
   8554f:	add    BYTE PTR [edx+eax*1],ch
   85552:	dec    ebx
   85553:	gs dec ecx
   85555:	outs   dx,BYTE PTR ds:[esi]
   85556:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   8555e:	dec    ebp
   8555f:	jne    0x855d5
   85561:	gs js  0x85564
   85564:	js     0x8556b
   85566:	pop    edx
   85567:	ja     0x855bb
   85569:	gs popa 
   8556b:	fs inc esi
   8556d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a053000
   85575:	ja     0x855ba
   85577:	jb     0x855de
   85579:	popa   
   8557a:	je     0x855e1
   8557c:	inc    esi
   8557d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a058600
   85585:	ja     0x855da
   85587:	gs je  0x855d3
   8558a:	outs   dx,BYTE PTR ds:[esi]
   8558b:	outs   dx,WORD PTR ds:[esi]
   8558d:	jb     0x855fc
   8558f:	popa   
   85590:	je     0x855fb
   85592:	outs   dx,DWORD PTR ds:[esi]
   85593:	outs   dx,BYTE PTR ds:[esi]
   85594:	inc    esi
   85595:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a059900
   8559d:	ja     0x855f6
   8559f:	jb     0x8560a
   855a1:	je     0x85608
   855a3:	inc    esi
   855a4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x775a056a
   855ac:	push   ecx
   855ad:	jne    0x85614
   855af:	jb     0x8562a
   855b1:	dec    ecx
   855b2:	outs   dx,BYTE PTR ds:[esi]
   855b3:	outs   dx,WORD PTR ds:[esi]
   855b5:	jb     0x85624
   855b7:	popa   
   855b8:	je     0x85623
   855ba:	outs   dx,DWORD PTR ds:[esi]
   855bb:	outs   dx,BYTE PTR ds:[esi]
   855bc:	inc    esi
   855bd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5003ad00
   855c5:	jae    0x8561a
   855c7:	gs je  0x85616
   855ca:	outs   dx,DWORD PTR ds:[esi]
   855cb:	popa   
   855cc:	fs dec ecx
   855ce:	ins    DWORD PTR es:[edi],dx
   855cf:	popa   
   855d0:	addr16 gs dec esi
   855d3:	outs   dx,DWORD PTR ds:[esi]
   855d4:	je     0x8563f
   855d6:	data16 jns 0x8562b
   855d9:	outs   dx,DWORD PTR ds:[esi]
   855da:	jne    0x85650
   855dc:	imul   ebp,DWORD PTR [esi+0x65],0x5003a900
   855e3:	jae    0x85638
   855e5:	gs je  0x8562b
   855e8:	jb     0x8564f
   855ea:	popa   
   855eb:	je     0x85652
   855ed:	push   eax
   855ee:	jb     0x8565f
   855f0:	arpl   WORD PTR [ebp+0x73],sp
   855f3:	jae    0x85643
   855f5:	outs   dx,DWORD PTR ds:[esi]
   855f6:	je     0x85661
   855f8:	data16 jns 0x8564d
   855fb:	outs   dx,DWORD PTR ds:[esi]
   855fc:	jne    0x85672
   855fe:	imul   ebp,DWORD PTR [esi+0x65],0x5a057600
   85605:	ja     0x85658
   85607:	jne    0x8566e
   85609:	jb     0x85684
   8560b:	push   esi
   8560c:	popa   
   8560d:	ins    BYTE PTR es:[edi],dx
   8560e:	jne    0x85675
   85610:	dec    ebx
   85611:	gs jns 0x85614
   85614:	ss add al,0x52
   85617:	je     0x85685
   85619:	dec    ecx
   8561a:	ins    DWORD PTR es:[edi],dx
   8561b:	popa   
   8561c:	addr16 gs dec esi
   8561f:	je     0x85669
   85621:	gs popa 
   85623:	fs gs jb 0x85627
   85627:	add    BYTE PTR [ecx+eax*1+0x49],dl
   8562b:	outs   dx,DWORD PTR ds:[esi]
   8562c:	inc    ebx
   8562d:	jb     0x85694
   8562f:	popa   
   85630:	je     0x85697
   85632:	push   ebx
   85633:	jns    0x856a2
   85635:	bound  ebp,QWORD PTR [edi+0x6c]
   85638:	imul   esp,DWORD PTR [ebx+0x4c],0x6b6e69
   8563f:	add    bh,bl
   85641:	add    eax,0x72707773
   85646:	imul   ebp,DWORD PTR [esi+0x74],0xe6000066
   8564d:	add    al,0x53
   8564f:	gs inc ebx
   85651:	jb     0x856b8
   85653:	popa   
   85654:	je     0x856bb
   85656:	inc    ebx
   85657:	ins    BYTE PTR es:[edi],dx
   85658:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   8565f:	jne    0x856d3
   85661:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x4b021900
   85669:	gs inc edi
   8566b:	gs je  0x856b1
   8566e:	jne    0x856e2
   85670:	jb     0x856d7
   85672:	outs   dx,BYTE PTR ds:[esi]
   85673:	je     0x856c9
   85675:	push   0x64616572
   8567a:	add    BYTE PTR [eax],al
   8567c:	dec    ebp
   8567d:	add    eax,0x614d775a
   85682:	jo     0x856da
   85684:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   8568b:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   8568f:	outs   dx,BYTE PTR ds:[esi]
   85690:	add    BYTE PTR [eax],al
   85692:	xor    eax,DWORD PTR ds:0x7243775a
   85698:	gs popa 
   8569a:	je     0x85701
   8569c:	push   ebx
   8569d:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   856a2:	outs   dx,BYTE PTR ds:[esi]
   856a3:	add    BYTE PTR [esi+0x55775a05],dl
   856a9:	outs   dx,BYTE PTR ds:[esi]
   856aa:	ins    DWORD PTR es:[edi],dx
   856ab:	popa   
   856ac:	jo     0x85704
   856ae:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   856b5:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   856b9:	outs   dx,BYTE PTR ds:[esi]
   856ba:	add    BYTE PTR [eax],al
   856bc:	jg     0x856c0
   856be:	dec    ebx
   856bf:	gs push esp
   856c1:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   856c8:	je     0x856ca
   856ca:	pop    es
   856cb:	add    cl,BYTE PTR [ebx+0x65]
   856ce:	inc    edx
   856cf:	jne    0x85738
   856d1:	inc    ebx
   856d2:	push   0x456b6365
   856d7:	js     0x856d9
   856d9:	add    BYTE PTR [esi+0x74],ch
   856dc:	outs   dx,DWORD PTR ds:[esi]
   856dd:	jae    0x8574a
   856df:	jb     0x8574f
   856e1:	ins    BYTE PTR es:[edi],dx
   856e2:	cs gs js 0x8574b
   856e6:	add    BYTE PTR [eax],al
   856e8:	dec    ebp
   856e9:	add    BYTE PTR [ebx+0x66],cl
   856ec:	dec    esp
   856ed:	outs   dx,DWORD PTR ds:[esi]
   856ee:	ja     0x85755
   856f0:	jb     0x8573b
   856f2:	jb     0x85765
   856f4:	ins    BYTE PTR es:[edi],dx
   856f5:	add    BYTE PTR [esi+0x0],cl
   856f8:	dec    ebx
   856f9:	push   dx
   856fb:	popa   
   856fc:	imul   esi,DWORD PTR [ebx+0x65],0x6c717249
   85703:	add    BYTE PTR [eax+0x0],al
   85706:	dec    ebx
   85707:	gs inc edi
   85709:	gs je  0x8574f
   8570c:	jne    0x85780
   8570e:	jb     0x85775
   85710:	outs   dx,BYTE PTR ds:[esi]
   85711:	je     0x8575c
   85713:	jb     0x85786
   85715:	ins    BYTE PTR es:[edi],dx
   85716:	add    BYTE PTR [eax],al
   85718:	dec    eax
   85719:	inc    ecx
   8571a:	dec    esp
   8571b:	cs fs ins BYTE PTR es:[edi],dx
   8571e:	ins    BYTE PTR es:[edi],dx
	...
