
d973ce2f1261b81483b3cf6ccf561e64d4d1a1281da5b3610aba4df2deeddb66.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1e576
   10800:	mov    DWORD PTR [ebp-0x10],0x1e56c
   10807:	mov    DWORD PTR [ebp-0xc],0x1e564
   1080e:	mov    DWORD PTR [ebp-0x8],0x1e55a
   10815:	mov    DWORD PTR [ebp-0x4],0x1e550
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x77abc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1e54e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	push   esi
   10996:	xor    esi,esi
   10998:	xor    edx,edx
   1099a:	cmp    DWORD PTR [ebp+0xc],esi
   1099d:	je     0x109ba
   1099f:	mov    eax,DWORD PTR [ebp+0x8]
   109a2:	mov    ecx,DWORD PTR [ebp+0x10]
   109a5:	mov    cl,BYTE PTR [edx+ecx*1]
   109a8:	add    eax,esi
   109aa:	xor    BYTE PTR [eax],cl
   109ac:	lea    eax,[edx+0x1]
   109af:	xor    edx,edx
   109b1:	div    DWORD PTR [ebp+0x14]
   109b4:	inc    esi
   109b5:	cmp    esi,DWORD PTR [ebp+0xc]
   109b8:	jne    0x1099f
   109ba:	pop    esi
   109bb:	pop    ebp
   109bc:	ret    0x10
   109bf:	int3   
   109c0:	int3   
   109c1:	int3   
   109c2:	int3   
   109c3:	int3   
   109c4:	mov    edi,edi
   109c6:	push   ebp
   109c7:	mov    ebp,esp
   109c9:	mov    ecx,DWORD PTR [ebp+0x8]
   109cc:	mov    eax,ecx
   109ce:	lea    edx,[eax+0x2]
   109d1:	push   esi
   109d2:	mov    si,WORD PTR [eax]
   109d5:	inc    eax
   109d6:	inc    eax
   109d7:	test   si,si
   109da:	jne    0x109d2
   109dc:	sub    eax,edx
   109de:	sar    eax,1
   109e0:	cmp    eax,0xc
   109e3:	jae    0x109ec
   109e5:	xor    al,al
   109e7:	jmp    0x10aba
   109ec:	lea    eax,[ecx+eax*2-0x18]
   109f0:	movzx  ecx,WORD PTR [eax]
   109f3:	cmp    cx,0x69
   109f7:	je     0x109ff
   109f9:	cmp    cx,0x49
   109fd:	jne    0x109e5
   109ff:	movzx  ecx,WORD PTR [eax+0x2]
   10a03:	push   0x45
   10a05:	pop    esi
   10a06:	push   0x65
   10a08:	pop    edx
   10a09:	cmp    cx,dx
   10a0c:	je     0x10a13
   10a0e:	cmp    cx,si
   10a11:	jne    0x109e5
   10a13:	movzx  ecx,WORD PTR [eax+0x4]
   10a17:	cmp    cx,0x78
   10a1b:	je     0x10a23
   10a1d:	cmp    cx,0x58
   10a21:	jne    0x109e5
   10a23:	movzx  ecx,WORD PTR [eax+0x6]
   10a27:	cmp    cx,0x70
   10a2b:	je     0x10a33
   10a2d:	cmp    cx,0x50
   10a31:	jne    0x109e5
   10a33:	movzx  ecx,WORD PTR [eax+0x8]
   10a37:	cmp    cx,0x6c
   10a3b:	je     0x10a43
   10a3d:	cmp    cx,0x4c
   10a41:	jne    0x109e5
   10a43:	movzx  ecx,WORD PTR [eax+0xa]
   10a47:	cmp    cx,0x6f
   10a4b:	je     0x10a53
   10a4d:	cmp    cx,0x4f
   10a51:	jne    0x109e5
   10a53:	movzx  ecx,WORD PTR [eax+0xc]
   10a57:	cmp    cx,0x72
   10a5b:	je     0x10a63
   10a5d:	cmp    cx,0x52
   10a61:	jne    0x109e5
   10a63:	movzx  ecx,WORD PTR [eax+0xe]
   10a67:	cmp    cx,dx
   10a6a:	je     0x10a75
   10a6c:	cmp    cx,si
   10a6f:	jne    0x109e5
   10a75:	cmp    WORD PTR [eax+0x10],0x2e
   10a7a:	jne    0x109e5
   10a80:	movzx  ecx,WORD PTR [eax+0x12]
   10a84:	cmp    cx,dx
   10a87:	je     0x10a92
   10a89:	cmp    cx,si
   10a8c:	jne    0x109e5
   10a92:	movzx  ecx,WORD PTR [eax+0x14]
   10a96:	cmp    cx,0x78
   10a9a:	je     0x10aa6
   10a9c:	cmp    cx,0x58
   10aa0:	jne    0x109e5
   10aa6:	movzx  eax,WORD PTR [eax+0x16]
   10aaa:	cmp    ax,dx
   10aad:	je     0x10ab8
   10aaf:	cmp    ax,si
   10ab2:	jne    0x109e5
   10ab8:	mov    al,0x1
   10aba:	pop    esi
   10abb:	pop    ebp
   10abc:	ret    0x4
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	int3   
   10ac3:	int3   
   10ac4:	mov    edi,edi
   10ac6:	push   ebp
   10ac7:	mov    ebp,esp
   10ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   10acc:	mov    eax,ecx
   10ace:	lea    edx,[eax+0x2]
   10ad1:	push   esi
   10ad2:	mov    si,WORD PTR [eax]
   10ad5:	inc    eax
   10ad6:	inc    eax
   10ad7:	test   si,si
   10ada:	jne    0x10ad2
   10adc:	sub    eax,edx
   10ade:	sar    eax,1
   10ae0:	pop    esi
   10ae1:	cmp    eax,0xb
   10ae4:	jae    0x10aed
   10ae6:	xor    al,al
   10ae8:	jmp    0x10ba9
   10aed:	lea    eax,[ecx+eax*2-0x16]
   10af1:	movzx  ecx,WORD PTR [eax]
   10af4:	cmp    cx,0x66
   10af8:	je     0x10b00
   10afa:	cmp    cx,0x46
   10afe:	jne    0x10ae6
   10b00:	movzx  ecx,WORD PTR [eax+0x2]
   10b04:	cmp    cx,0x69
   10b08:	je     0x10b10
   10b0a:	cmp    cx,0x49
   10b0e:	jne    0x10ae6
   10b10:	movzx  ecx,WORD PTR [eax+0x4]
   10b14:	cmp    cx,0x72
   10b18:	je     0x10b20
   10b1a:	cmp    cx,0x52
   10b1e:	jne    0x10ae6
   10b20:	movzx  ecx,WORD PTR [eax+0x6]
   10b24:	cmp    cx,0x65
   10b28:	je     0x10b30
   10b2a:	cmp    cx,0x45
   10b2e:	jne    0x10ae6
   10b30:	movzx  ecx,WORD PTR [eax+0x8]
   10b34:	cmp    cx,0x66
   10b38:	je     0x10b40
   10b3a:	cmp    cx,0x46
   10b3e:	jne    0x10ae6
   10b40:	movzx  ecx,WORD PTR [eax+0xa]
   10b44:	cmp    cx,0x6f
   10b48:	je     0x10b50
   10b4a:	cmp    cx,0x4f
   10b4e:	jne    0x10ae6
   10b50:	movzx  ecx,WORD PTR [eax+0xc]
   10b54:	cmp    cx,0x78
   10b58:	je     0x10b60
   10b5a:	cmp    cx,0x58
   10b5e:	jne    0x10ae6
   10b60:	cmp    WORD PTR [eax+0xe],0x2e
   10b65:	jne    0x10ae6
   10b6b:	movzx  ecx,WORD PTR [eax+0x10]
   10b6f:	cmp    cx,0x65
   10b73:	je     0x10b7f
   10b75:	cmp    cx,0x45
   10b79:	jne    0x10ae6
   10b7f:	movzx  ecx,WORD PTR [eax+0x12]
   10b83:	cmp    cx,0x78
   10b87:	je     0x10b93
   10b89:	cmp    cx,0x58
   10b8d:	jne    0x10ae6
   10b93:	movzx  eax,WORD PTR [eax+0x14]
   10b97:	cmp    ax,0x65
   10b9b:	je     0x10ba7
   10b9d:	cmp    ax,0x45
   10ba1:	jne    0x10ae6
   10ba7:	mov    al,0x1
   10ba9:	pop    ebp
   10baa:	ret    0x4
   10bad:	int3   
   10bae:	int3   
   10baf:	int3   
   10bb0:	int3   
   10bb1:	int3   
   10bb2:	mov    edi,edi
   10bb4:	push   ebp
   10bb5:	mov    ebp,esp
   10bb7:	mov    ecx,DWORD PTR [ebp+0x8]
   10bba:	mov    eax,ecx
   10bbc:	lea    edx,[eax+0x2]
   10bbf:	push   esi
   10bc0:	mov    si,WORD PTR [eax]
   10bc3:	inc    eax
   10bc4:	inc    eax
   10bc5:	test   si,si
   10bc8:	jne    0x10bc0
   10bca:	sub    eax,edx
   10bcc:	sar    eax,1
   10bce:	pop    esi
   10bcf:	cmp    eax,0xa
   10bd2:	jae    0x10bdb
   10bd4:	xor    al,al
   10bd6:	jmp    0x10c83
   10bdb:	lea    eax,[ecx+eax*2-0x14]
   10bdf:	movzx  ecx,WORD PTR [eax]
   10be2:	cmp    cx,0x63
   10be6:	je     0x10bee
   10be8:	cmp    cx,0x43
   10bec:	jne    0x10bd4
   10bee:	movzx  ecx,WORD PTR [eax+0x2]
   10bf2:	cmp    cx,0x68
   10bf6:	je     0x10bfe
   10bf8:	cmp    cx,0x48
   10bfc:	jne    0x10bd4
   10bfe:	movzx  ecx,WORD PTR [eax+0x4]
   10c02:	cmp    cx,0x72
   10c06:	je     0x10c0e
   10c08:	cmp    cx,0x52
   10c0c:	jne    0x10bd4
   10c0e:	movzx  ecx,WORD PTR [eax+0x6]
   10c12:	cmp    cx,0x6f
   10c16:	je     0x10c1e
   10c18:	cmp    cx,0x4f
   10c1c:	jne    0x10bd4
   10c1e:	movzx  ecx,WORD PTR [eax+0x8]
   10c22:	cmp    cx,0x6d
   10c26:	je     0x10c2e
   10c28:	cmp    cx,0x4d
   10c2c:	jne    0x10bd4
   10c2e:	movzx  ecx,WORD PTR [eax+0xa]
   10c32:	cmp    cx,0x65
   10c36:	je     0x10c3e
   10c38:	cmp    cx,0x45
   10c3c:	jne    0x10bd4
   10c3e:	cmp    WORD PTR [eax+0xc],0x2e
   10c43:	jne    0x10bd4
   10c45:	movzx  ecx,WORD PTR [eax+0xe]
   10c49:	cmp    cx,0x65
   10c4d:	je     0x10c59
   10c4f:	cmp    cx,0x45
   10c53:	jne    0x10bd4
   10c59:	movzx  ecx,WORD PTR [eax+0x10]
   10c5d:	cmp    cx,0x78
   10c61:	je     0x10c6d
   10c63:	cmp    cx,0x58
   10c67:	jne    0x10bd4
   10c6d:	movzx  eax,WORD PTR [eax+0x12]
   10c71:	cmp    ax,0x65
   10c75:	je     0x10c81
   10c77:	cmp    ax,0x45
   10c7b:	jne    0x10bd4
   10c81:	mov    al,0x1
   10c83:	pop    ebp
   10c84:	ret    0x4
   10c87:	int3   
   10c88:	int3   
   10c89:	int3   
   10c8a:	int3   
   10c8b:	int3   
   10c8c:	mov    edi,edi
   10c8e:	push   ebp
   10c8f:	mov    ebp,esp
   10c91:	mov    ecx,DWORD PTR [ebp+0x8]
   10c94:	mov    eax,ecx
   10c96:	lea    edx,[eax+0x2]
   10c99:	push   esi
   10c9a:	mov    si,WORD PTR [eax]
   10c9d:	inc    eax
   10c9e:	inc    eax
   10c9f:	test   si,si
   10ca2:	jne    0x10c9a
   10ca4:	sub    eax,edx
   10ca6:	sar    eax,1
   10ca8:	pop    esi
   10ca9:	cmp    eax,0x9
   10cac:	jae    0x10cb5
   10cae:	xor    al,al
   10cb0:	jmp    0x10d49
   10cb5:	lea    eax,[ecx+eax*2-0x12]
   10cb9:	movzx  ecx,WORD PTR [eax]
   10cbc:	cmp    cx,0x6d
   10cc0:	je     0x10cc8
   10cc2:	cmp    cx,0x4d
   10cc6:	jne    0x10cae
   10cc8:	movzx  ecx,WORD PTR [eax+0x2]
   10ccc:	cmp    cx,0x73
   10cd0:	je     0x10cd8
   10cd2:	cmp    cx,0x53
   10cd6:	jne    0x10cae
   10cd8:	movzx  ecx,WORD PTR [eax+0x4]
   10cdc:	cmp    cx,0x68
   10ce0:	je     0x10ce8
   10ce2:	cmp    cx,0x48
   10ce6:	jne    0x10cae
   10ce8:	movzx  ecx,WORD PTR [eax+0x6]
   10cec:	cmp    cx,0x74
   10cf0:	je     0x10cf8
   10cf2:	cmp    cx,0x54
   10cf6:	jne    0x10cae
   10cf8:	movzx  ecx,WORD PTR [eax+0x8]
   10cfc:	cmp    cx,0x61
   10d00:	je     0x10d08
   10d02:	cmp    cx,0x41
   10d06:	jne    0x10cae
   10d08:	cmp    WORD PTR [eax+0xa],0x2e
   10d0d:	jne    0x10cae
   10d0f:	movzx  ecx,WORD PTR [eax+0xc]
   10d13:	cmp    cx,0x65
   10d17:	je     0x10d1f
   10d19:	cmp    cx,0x45
   10d1d:	jne    0x10cae
   10d1f:	movzx  ecx,WORD PTR [eax+0xe]
   10d23:	cmp    cx,0x78
   10d27:	je     0x10d33
   10d29:	cmp    cx,0x58
   10d2d:	jne    0x10cae
   10d33:	movzx  eax,WORD PTR [eax+0x10]
   10d37:	cmp    ax,0x65
   10d3b:	je     0x10d47
   10d3d:	cmp    ax,0x45
   10d41:	jne    0x10cae
   10d47:	mov    al,0x1
   10d49:	pop    ebp
   10d4a:	ret    0x4
   10d4d:	int3   
   10d4e:	int3   
   10d4f:	int3   
   10d50:	int3   
   10d51:	int3   
   10d52:	mov    edi,edi
   10d54:	push   ebp
   10d55:	mov    ebp,esp
   10d57:	push   esi
   10d58:	mov    esi,DWORD PTR [ebp+0x8]
   10d5b:	push   esi
   10d5c:	call   0x109c4
   10d61:	test   al,al
   10d63:	je     0x10d6a
   10d65:	xor    eax,eax
   10d67:	inc    eax
   10d68:	jmp    0x10d97
   10d6a:	push   esi
   10d6b:	call   0x10ac4
   10d70:	test   al,al
   10d72:	je     0x10d79
   10d74:	push   0x2
   10d76:	pop    eax
   10d77:	jmp    0x10d97
   10d79:	push   esi
   10d7a:	call   0x10bb2
   10d7f:	test   al,al
   10d81:	je     0x10d87
   10d83:	push   0x3
   10d85:	jmp    0x10d76
   10d87:	push   esi
   10d88:	call   0x10c8c
   10d8d:	movzx  eax,al
   10d90:	neg    eax
   10d92:	sbb    eax,eax
   10d94:	and    eax,0x4
   10d97:	pop    esi
   10d98:	pop    ebp
   10d99:	ret    0x4
   10d9c:	int3   
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	mov    eax,DWORD PTR [ebp+0x8]
   10daa:	mov    edx,DWORD PTR [ebp+0xc]
   10dad:	push   esi
   10dae:	xor    esi,esi
   10db0:	jmp    0x10dd5
   10db2:	mov    ecx,eax
   10db4:	and    ecx,0x1
   10db7:	or     ecx,esi
   10db9:	push   esi
   10dba:	jne    0x10dc7
   10dbc:	push   0x2
   10dbe:	push   edx
   10dbf:	push   eax
   10dc0:	call   0x1e192
   10dc5:	jmp    0x10dd5
   10dc7:	push   0x3
   10dc9:	push   edx
   10dca:	push   eax
   10dcb:	call   0x1e186
   10dd0:	add    eax,0x1
   10dd3:	adc    edx,esi
   10dd5:	cmp    eax,0x4
   10dd8:	jne    0x10db2
   10dda:	cmp    edx,esi
   10ddc:	jne    0x10db2
   10dde:	pop    esi
   10ddf:	pop    ebp
   10de0:	ret    0x8
   10de3:	int3   
   10de4:	int3   
   10de5:	int3   
   10de6:	int3   
   10de7:	int3   
   10de8:	mov    edi,edi
   10dea:	push   ebp
   10deb:	mov    ebp,esp
   10ded:	mov    eax,DWORD PTR [ebp+0x8]
   10df0:	mov    edx,DWORD PTR ds:0x786b0
   10df6:	jmp    0x10dfa
   10df8:	mov    eax,ecx
   10dfa:	mov    ecx,DWORD PTR [eax+0x8]
   10dfd:	cmp    ecx,edx
   10dff:	jne    0x10df8
   10e01:	pop    ebp
   10e02:	ret    0x4
   10e05:	int3   
   10e06:	int3   
   10e07:	int3   
   10e08:	int3   
   10e09:	int3   
   10e0a:	mov    edi,edi
   10e0c:	push   ebp
   10e0d:	mov    ebp,esp
   10e0f:	mov    eax,DWORD PTR [ebp+0x8]
   10e12:	mov    edx,DWORD PTR ds:0x786b0
   10e18:	jmp    0x10e1c
   10e1a:	mov    eax,ecx
   10e1c:	mov    ecx,DWORD PTR [eax]
   10e1e:	cmp    ecx,edx
   10e20:	jne    0x10e1a
   10e22:	pop    ebp
   10e23:	ret    0x4
   10e26:	int3   
   10e27:	int3   
   10e28:	int3   
   10e29:	int3   
   10e2a:	int3   
   10e2b:	int3   
   10e2c:	mov    edi,edi
   10e2e:	push   ebp
   10e2f:	mov    ebp,esp
   10e31:	mov    eax,DWORD PTR [ebp+0x8]
   10e34:	mov    edx,DWORD PTR ds:0x786b4
   10e3a:	jmp    0x10e3e
   10e3c:	mov    eax,ecx
   10e3e:	mov    ecx,DWORD PTR [eax+0x8]
   10e41:	cmp    ecx,edx
   10e43:	jne    0x10e3c
   10e45:	pop    ebp
   10e46:	ret    0x4
   10e49:	int3   
   10e4a:	int3   
   10e4b:	int3   
   10e4c:	int3   
   10e4d:	int3   
   10e4e:	mov    edi,edi
   10e50:	push   ebp
   10e51:	mov    ebp,esp
   10e53:	mov    eax,DWORD PTR [ebp+0x8]
   10e56:	mov    edx,DWORD PTR ds:0x786b4
   10e5c:	jmp    0x10e60
   10e5e:	mov    eax,ecx
   10e60:	mov    ecx,DWORD PTR [eax]
   10e62:	cmp    ecx,edx
   10e64:	jne    0x10e5e
   10e66:	pop    ebp
   10e67:	ret    0x4
   10e6a:	int3   
   10e6b:	int3   
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	mov    edi,edi
   10e72:	push   ebp
   10e73:	mov    ebp,esp
   10e75:	mov    eax,DWORD PTR [ebp+0x8]
   10e78:	mov    edx,DWORD PTR ds:0x786b8
   10e7e:	jmp    0x10e82
   10e80:	mov    eax,ecx
   10e82:	mov    ecx,DWORD PTR [eax+0x8]
   10e85:	cmp    ecx,edx
   10e87:	jne    0x10e80
   10e89:	pop    ebp
   10e8a:	ret    0x4
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	mov    edi,edi
   10e94:	push   ebp
   10e95:	mov    ebp,esp
   10e97:	mov    eax,DWORD PTR [ebp+0x8]
   10e9a:	mov    edx,DWORD PTR ds:0x786b8
   10ea0:	jmp    0x10ea4
   10ea2:	mov    eax,ecx
   10ea4:	mov    ecx,DWORD PTR [eax]
   10ea6:	cmp    ecx,edx
   10ea8:	jne    0x10ea2
   10eaa:	pop    ebp
   10eab:	ret    0x4
   10eae:	int3   
   10eaf:	int3   
   10eb0:	int3   
   10eb1:	int3   
   10eb2:	int3   
   10eb3:	int3   
   10eb4:	mov    edi,edi
   10eb6:	push   esi
   10eb7:	mov    esi,ecx
   10eb9:	mov    ecx,DWORD PTR [esi]
   10ebb:	cmp    DWORD PTR [ecx+0x14],0x0
   10ebf:	jne    0x10ece
   10ec1:	mov    eax,DWORD PTR [ecx+0x4]
   10ec4:	cmp    DWORD PTR [eax+0x4],ecx
   10ec7:	jne    0x10ece
   10ec9:	mov    eax,DWORD PTR [ecx+0x8]
   10ecc:	jmp    0x10eeb
   10ece:	mov    eax,DWORD PTR [ecx]
   10ed0:	cmp    eax,DWORD PTR ds:0x786b0
   10ed6:	je     0x10ee4
   10ed8:	push   eax
   10ed9:	call   0x10de8
   10ede:	jmp    0x10eeb
   10ee0:	mov    DWORD PTR [esi],eax
   10ee2:	mov    ecx,eax
   10ee4:	mov    eax,DWORD PTR [ecx+0x4]
   10ee7:	cmp    ecx,DWORD PTR [eax]
   10ee9:	je     0x10ee0
   10eeb:	mov    DWORD PTR [esi],eax
   10eed:	pop    esi
   10eee:	ret    
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	int3   
   10ef3:	int3   
   10ef4:	mov    edi,edi
   10ef6:	push   esi
   10ef7:	mov    esi,ecx
   10ef9:	mov    ecx,DWORD PTR [esi]
   10efb:	mov    eax,DWORD PTR [ecx+0x8]
   10efe:	cmp    eax,DWORD PTR ds:0x786b0
   10f04:	je     0x10f12
   10f06:	push   eax
   10f07:	call   0x10e0a
   10f0c:	jmp    0x10f21
   10f0e:	mov    DWORD PTR [esi],eax
   10f10:	mov    ecx,eax
   10f12:	mov    eax,DWORD PTR [ecx+0x4]
   10f15:	cmp    ecx,DWORD PTR [eax+0x8]
   10f18:	je     0x10f0e
   10f1a:	mov    ecx,DWORD PTR [esi]
   10f1c:	cmp    DWORD PTR [ecx+0x8],eax
   10f1f:	je     0x10f23
   10f21:	mov    DWORD PTR [esi],eax
   10f23:	pop    esi
   10f24:	ret    
   10f25:	int3   
   10f26:	int3   
   10f27:	int3   
   10f28:	int3   
   10f29:	int3   
   10f2a:	mov    edi,edi
   10f2c:	push   ebp
   10f2d:	mov    ebp,esp
   10f2f:	mov    edx,DWORD PTR [ebp+0x8]
   10f32:	mov    eax,DWORD PTR [edx+0x8]
   10f35:	push   esi
   10f36:	mov    esi,DWORD PTR [eax]
   10f38:	mov    DWORD PTR [edx+0x8],esi
   10f3b:	mov    esi,DWORD PTR [eax]
   10f3d:	cmp    esi,DWORD PTR ds:0x786bc
   10f43:	je     0x10f48
   10f45:	mov    DWORD PTR [esi+0x4],edx
   10f48:	mov    esi,DWORD PTR [edx+0x4]
   10f4b:	mov    DWORD PTR [eax+0x4],esi
   10f4e:	mov    ecx,DWORD PTR [ecx+0x4]
   10f51:	pop    esi
   10f52:	cmp    edx,DWORD PTR [ecx+0x4]
   10f55:	jne    0x10f5c
   10f57:	mov    DWORD PTR [ecx+0x4],eax
   10f5a:	jmp    0x10f6a
   10f5c:	mov    ecx,DWORD PTR [edx+0x4]
   10f5f:	cmp    edx,DWORD PTR [ecx]
   10f61:	jne    0x10f67
   10f63:	mov    DWORD PTR [ecx],eax
   10f65:	jmp    0x10f6a
   10f67:	mov    DWORD PTR [ecx+0x8],eax
   10f6a:	mov    DWORD PTR [eax],edx
   10f6c:	mov    DWORD PTR [edx+0x4],eax
   10f6f:	pop    ebp
   10f70:	ret    0x4
   10f73:	int3   
   10f74:	int3   
   10f75:	int3   
   10f76:	int3   
   10f77:	int3   
   10f78:	mov    edi,edi
   10f7a:	push   ebp
   10f7b:	mov    ebp,esp
   10f7d:	mov    eax,DWORD PTR [ebp+0x8]
   10f80:	mov    edx,DWORD PTR ds:0x786bc
   10f86:	jmp    0x10f8a
   10f88:	mov    eax,ecx
   10f8a:	mov    ecx,DWORD PTR [eax+0x8]
   10f8d:	cmp    ecx,edx
   10f8f:	jne    0x10f88
   10f91:	pop    ebp
   10f92:	ret    0x4
   10f95:	int3   
   10f96:	int3   
   10f97:	int3   
   10f98:	int3   
   10f99:	int3   
   10f9a:	mov    edi,edi
   10f9c:	push   ebp
   10f9d:	mov    ebp,esp
   10f9f:	mov    edx,DWORD PTR [ebp+0x8]
   10fa2:	mov    eax,DWORD PTR [edx]
   10fa4:	push   esi
   10fa5:	mov    esi,DWORD PTR [eax+0x8]
   10fa8:	mov    DWORD PTR [edx],esi
   10faa:	mov    esi,DWORD PTR [eax+0x8]
   10fad:	cmp    esi,DWORD PTR ds:0x786bc
   10fb3:	je     0x10fb8
   10fb5:	mov    DWORD PTR [esi+0x4],edx
   10fb8:	mov    esi,DWORD PTR [edx+0x4]
   10fbb:	mov    DWORD PTR [eax+0x4],esi
   10fbe:	mov    ecx,DWORD PTR [ecx+0x4]
   10fc1:	pop    esi
   10fc2:	cmp    edx,DWORD PTR [ecx+0x4]
   10fc5:	jne    0x10fcc
   10fc7:	mov    DWORD PTR [ecx+0x4],eax
   10fca:	jmp    0x10fdb
   10fcc:	mov    ecx,DWORD PTR [edx+0x4]
   10fcf:	cmp    edx,DWORD PTR [ecx+0x8]
   10fd2:	jne    0x10fd9
   10fd4:	mov    DWORD PTR [ecx+0x8],eax
   10fd7:	jmp    0x10fdb
   10fd9:	mov    DWORD PTR [ecx],eax
   10fdb:	mov    DWORD PTR [eax+0x8],edx
   10fde:	mov    DWORD PTR [edx+0x4],eax
   10fe1:	pop    ebp
   10fe2:	ret    0x4
   10fe5:	int3   
   10fe6:	int3   
   10fe7:	int3   
   10fe8:	int3   
   10fe9:	int3   
   10fea:	mov    edi,edi
   10fec:	push   esi
   10fed:	mov    esi,ecx
   10fef:	mov    ecx,DWORD PTR [esi]
   10ff1:	cmp    DWORD PTR [ecx+0x58],0x0
   10ff5:	jne    0x11004
   10ff7:	mov    eax,DWORD PTR [ecx+0x4]
   10ffa:	cmp    DWORD PTR [eax+0x4],ecx
   10ffd:	jne    0x11004
   10fff:	mov    eax,DWORD PTR [ecx+0x8]
   11002:	jmp    0x11021
   11004:	mov    eax,DWORD PTR [ecx]
   11006:	cmp    eax,DWORD PTR ds:0x786bc
   1100c:	je     0x1101a
   1100e:	push   eax
   1100f:	call   0x10f78
   11014:	jmp    0x11021
   11016:	mov    DWORD PTR [esi],eax
   11018:	mov    ecx,eax
   1101a:	mov    eax,DWORD PTR [ecx+0x4]
   1101d:	cmp    ecx,DWORD PTR [eax]
   1101f:	je     0x11016
   11021:	mov    DWORD PTR [esi],eax
   11023:	pop    esi
   11024:	ret    
   11025:	int3   
   11026:	int3   
   11027:	int3   
   11028:	int3   
   11029:	int3   
   1102a:	mov    edi,edi
   1102c:	push   ebp
   1102d:	mov    ebp,esp
   1102f:	mov    eax,DWORD PTR [ebp+0x8]
   11032:	mov    edx,DWORD PTR ds:0x786c0
   11038:	jmp    0x1103c
   1103a:	mov    eax,ecx
   1103c:	mov    ecx,DWORD PTR [eax+0x8]
   1103f:	cmp    ecx,edx
   11041:	jne    0x1103a
   11043:	pop    ebp
   11044:	ret    0x4
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	mov    eax,DWORD PTR [ebp+0x8]
   11054:	mov    edx,DWORD PTR ds:0x786c0
   1105a:	jmp    0x1105e
   1105c:	mov    eax,ecx
   1105e:	mov    ecx,DWORD PTR [eax]
   11060:	cmp    ecx,edx
   11062:	jne    0x1105c
   11064:	pop    ebp
   11065:	ret    0x4
   11068:	int3   
   11069:	int3   
   1106a:	int3   
   1106b:	int3   
   1106c:	int3   
   1106d:	int3   
   1106e:	mov    edi,edi
   11070:	push   esi
   11071:	mov    esi,ecx
   11073:	mov    ecx,DWORD PTR [esi]
   11075:	cmp    DWORD PTR [ecx+0x1c],0x0
   11079:	jne    0x11088
   1107b:	mov    eax,DWORD PTR [ecx+0x4]
   1107e:	cmp    DWORD PTR [eax+0x4],ecx
   11081:	jne    0x11088
   11083:	mov    eax,DWORD PTR [ecx+0x8]
   11086:	jmp    0x110a5
   11088:	mov    eax,DWORD PTR [ecx]
   1108a:	cmp    eax,DWORD PTR ds:0x786c0
   11090:	je     0x1109e
   11092:	push   eax
   11093:	call   0x1102a
   11098:	jmp    0x110a5
   1109a:	mov    DWORD PTR [esi],eax
   1109c:	mov    ecx,eax
   1109e:	mov    eax,DWORD PTR [ecx+0x4]
   110a1:	cmp    ecx,DWORD PTR [eax]
   110a3:	je     0x1109a
   110a5:	mov    DWORD PTR [esi],eax
   110a7:	pop    esi
   110a8:	ret    
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	mov    eax,DWORD PTR [ebp+0x8]
   110b6:	mov    edx,DWORD PTR ds:0x786c4
   110bc:	jmp    0x110c0
   110be:	mov    eax,ecx
   110c0:	mov    ecx,DWORD PTR [eax+0x8]
   110c3:	cmp    ecx,edx
   110c5:	jne    0x110be
   110c7:	pop    ebp
   110c8:	ret    0x4
   110cb:	int3   
   110cc:	int3   
   110cd:	int3   
   110ce:	int3   
   110cf:	int3   
   110d0:	mov    edi,edi
   110d2:	push   ebp
   110d3:	mov    ebp,esp
   110d5:	mov    eax,DWORD PTR [ebp+0x8]
   110d8:	mov    edx,DWORD PTR ds:0x786c4
   110de:	jmp    0x110e2
   110e0:	mov    eax,ecx
   110e2:	mov    ecx,DWORD PTR [eax]
   110e4:	cmp    ecx,edx
   110e6:	jne    0x110e0
   110e8:	pop    ebp
   110e9:	ret    0x4
   110ec:	int3   
   110ed:	int3   
   110ee:	int3   
   110ef:	int3   
   110f0:	int3   
   110f1:	int3   
   110f2:	mov    edi,edi
   110f4:	push   esi
   110f5:	mov    esi,ecx
   110f7:	mov    ecx,DWORD PTR [esi]
   110f9:	cmp    DWORD PTR [ecx+0x14],0x0
   110fd:	jne    0x1110c
   110ff:	mov    eax,DWORD PTR [ecx+0x4]
   11102:	cmp    DWORD PTR [eax+0x4],ecx
   11105:	jne    0x1110c
   11107:	mov    eax,DWORD PTR [ecx+0x8]
   1110a:	jmp    0x11129
   1110c:	mov    eax,DWORD PTR [ecx]
   1110e:	cmp    eax,DWORD PTR ds:0x786c4
   11114:	je     0x11122
   11116:	push   eax
   11117:	call   0x110ae
   1111c:	jmp    0x11129
   1111e:	mov    DWORD PTR [esi],eax
   11120:	mov    ecx,eax
   11122:	mov    eax,DWORD PTR [ecx+0x4]
   11125:	cmp    ecx,DWORD PTR [eax]
   11127:	je     0x1111e
   11129:	mov    DWORD PTR [esi],eax
   1112b:	pop    esi
   1112c:	ret    
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   esi
   11135:	mov    esi,ecx
   11137:	mov    ecx,DWORD PTR [esi]
   11139:	cmp    DWORD PTR [ecx+0x60],0x0
   1113d:	jne    0x1114c
   1113f:	mov    eax,DWORD PTR [ecx+0x4]
   11142:	cmp    DWORD PTR [eax+0x4],ecx
   11145:	jne    0x1114c
   11147:	mov    eax,DWORD PTR [ecx+0x8]
   1114a:	jmp    0x11169
   1114c:	mov    eax,DWORD PTR [ecx]
   1114e:	cmp    eax,DWORD PTR ds:0x786b8
   11154:	je     0x11162
   11156:	push   eax
   11157:	call   0x10e70
   1115c:	jmp    0x11169
   1115e:	mov    DWORD PTR [esi],eax
   11160:	mov    ecx,eax
   11162:	mov    eax,DWORD PTR [ecx+0x4]
   11165:	cmp    ecx,DWORD PTR [eax]
   11167:	je     0x1115e
   11169:	mov    DWORD PTR [esi],eax
   1116b:	pop    esi
   1116c:	ret    
   1116d:	int3   
   1116e:	int3   
   1116f:	int3   
   11170:	int3   
   11171:	int3   
   11172:	mov    edi,edi
   11174:	push   esi
   11175:	mov    esi,ecx
   11177:	mov    ecx,DWORD PTR [esi]
   11179:	mov    eax,DWORD PTR [ecx+0x8]
   1117c:	cmp    eax,DWORD PTR ds:0x786c0
   11182:	je     0x11190
   11184:	push   eax
   11185:	call   0x1104c
   1118a:	jmp    0x1119f
   1118c:	mov    DWORD PTR [esi],eax
   1118e:	mov    ecx,eax
   11190:	mov    eax,DWORD PTR [ecx+0x4]
   11193:	cmp    ecx,DWORD PTR [eax+0x8]
   11196:	je     0x1118c
   11198:	mov    ecx,DWORD PTR [esi]
   1119a:	cmp    DWORD PTR [ecx+0x8],eax
   1119d:	je     0x111a1
   1119f:	mov    DWORD PTR [esi],eax
   111a1:	pop    esi
   111a2:	ret    
   111a3:	int3   
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	mov    edi,edi
   111aa:	push   esi
   111ab:	mov    esi,ecx
   111ad:	mov    ecx,DWORD PTR [esi]
   111af:	mov    eax,DWORD PTR [ecx+0x8]
   111b2:	cmp    eax,DWORD PTR ds:0x786c4
   111b8:	je     0x111c6
   111ba:	push   eax
   111bb:	call   0x110d0
   111c0:	jmp    0x111d5
   111c2:	mov    DWORD PTR [esi],eax
   111c4:	mov    ecx,eax
   111c6:	mov    eax,DWORD PTR [ecx+0x4]
   111c9:	cmp    ecx,DWORD PTR [eax+0x8]
   111cc:	je     0x111c2
   111ce:	mov    ecx,DWORD PTR [esi]
   111d0:	cmp    DWORD PTR [ecx+0x8],eax
   111d3:	je     0x111d7
   111d5:	mov    DWORD PTR [esi],eax
   111d7:	pop    esi
   111d8:	ret    
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	mov    edi,edi
   111e0:	push   ebp
   111e1:	mov    ebp,esp
   111e3:	mov    eax,DWORD PTR [ebp+0x8]
   111e6:	mov    edx,DWORD PTR ds:0x786cc
   111ec:	jmp    0x111f0
   111ee:	mov    eax,ecx
   111f0:	mov    ecx,DWORD PTR [eax+0x8]
   111f3:	cmp    ecx,edx
   111f5:	jne    0x111ee
   111f7:	pop    ebp
   111f8:	ret    0x4
   111fb:	int3   
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	mov    edi,edi
   11202:	push   ebp
   11203:	mov    ebp,esp
   11205:	push   ecx
   11206:	push   ecx
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    DWORD PTR [ebp-0x4],eax
   1120d:	lea    ecx,[eax+0x2]
   11210:	mov    dx,WORD PTR [eax]
   11213:	inc    eax
   11214:	inc    eax
   11215:	test   dx,dx
   11218:	jne    0x11210
   1121a:	sub    eax,ecx
   1121c:	sar    eax,1
   1121e:	add    eax,eax
   11220:	mov    WORD PTR [ebp-0x8],ax
   11224:	mov    WORD PTR [ebp-0x6],ax
   11228:	lea    eax,[ebp-0x8]
   1122b:	push   eax
   1122c:	call   DWORD PTR ds:0x1f814
   11232:	leave  
   11233:	ret    0x4
   11236:	int3   
   11237:	int3   
   11238:	int3   
   11239:	int3   
   1123a:	int3   
   1123b:	int3   
   1123c:	mov    edi,edi
   1123e:	push   ebp
   1123f:	mov    ebp,esp
   11241:	mov    eax,DWORD PTR [ebp+0x8]
   11244:	test   eax,eax
   11246:	je     0x11255
   11248:	mov    ecx,DWORD PTR [ebp+0xc]
   1124b:	mov    edx,DWORD PTR [ecx]
   1124d:	mov    DWORD PTR [eax],edx
   1124f:	mov    ecx,DWORD PTR [ecx+0x4]
   11252:	mov    DWORD PTR [eax+0x4],ecx
   11255:	pop    ebp
   11256:	ret    0x8
   11259:	int3   
   1125a:	int3   
   1125b:	int3   
   1125c:	int3   
   1125d:	int3   
   1125e:	test   BYTE PTR ds:0x786d4,0x1
   11265:	jne    0x1127d
   11267:	or     DWORD PTR ds:0x786d4,0x1
   1126e:	push   0x1e61c
   11273:	call   0x11200
   11278:	mov    ds:0x786d0,eax
   1127d:	mov    eax,ds:0x786d0
   11282:	ret    
   11283:	int3   
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	test   BYTE PTR ds:0x786dc,0x1
   1128f:	jne    0x112a7
   11291:	or     DWORD PTR ds:0x786dc,0x1
   11298:	push   0x1e638
   1129d:	call   0x11200
   112a2:	mov    ds:0x786d8,eax
   112a7:	mov    eax,ds:0x786d8
   112ac:	ret    
   112ad:	int3   
   112ae:	int3   
   112af:	int3   
   112b0:	int3   
   112b1:	int3   
   112b2:	test   BYTE PTR ds:0x786e4,0x1
   112b9:	jne    0x112d1
   112bb:	or     DWORD PTR ds:0x786e4,0x1
   112c2:	push   0x1e668
   112c7:	call   0x11200
   112cc:	mov    ds:0x786e0,eax
   112d1:	mov    eax,ds:0x786e0
   112d6:	ret    
   112d7:	int3   
   112d8:	int3   
   112d9:	int3   
   112da:	int3   
   112db:	int3   
   112dc:	test   BYTE PTR ds:0x786ec,0x1
   112e3:	jne    0x112fb
   112e5:	or     DWORD PTR ds:0x786ec,0x1
   112ec:	push   0x1e6a0
   112f1:	call   0x11200
   112f6:	mov    ds:0x786e8,eax
   112fb:	mov    eax,ds:0x786e8
   11300:	ret    
   11301:	int3   
   11302:	int3   
   11303:	int3   
   11304:	int3   
   11305:	int3   
   11306:	test   BYTE PTR ds:0x786f4,0x1
   1130d:	jne    0x11325
   1130f:	or     DWORD PTR ds:0x786f4,0x1
   11316:	push   0x1e6c2
   1131b:	call   0x11200
   11320:	mov    ds:0x786f0,eax
   11325:	mov    eax,ds:0x786f0
   1132a:	ret    
   1132b:	int3   
   1132c:	int3   
   1132d:	int3   
   1132e:	int3   
   1132f:	int3   
   11330:	test   BYTE PTR ds:0x786fc,0x1
   11337:	jne    0x1134f
   11339:	or     DWORD PTR ds:0x786fc,0x1
   11340:	push   0x1e702
   11345:	call   0x11200
   1134a:	mov    ds:0x786f8,eax
   1134f:	mov    eax,ds:0x786f8
   11354:	ret    
   11355:	int3   
   11356:	int3   
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	test   BYTE PTR ds:0x78704,0x1
   11361:	jne    0x11379
   11363:	or     DWORD PTR ds:0x78704,0x1
   1136a:	push   0x1e718
   1136f:	call   0x11200
   11374:	mov    ds:0x78700,eax
   11379:	mov    eax,ds:0x78700
   1137e:	ret    
   1137f:	int3   
   11380:	int3   
   11381:	int3   
   11382:	int3   
   11383:	int3   
   11384:	test   BYTE PTR ds:0x7870c,0x1
   1138b:	jne    0x113a3
   1138d:	or     DWORD PTR ds:0x7870c,0x1
   11394:	push   0x1e74c
   11399:	call   0x11200
   1139e:	mov    ds:0x78708,eax
   113a3:	mov    eax,ds:0x78708
   113a8:	ret    
   113a9:	int3   
   113aa:	int3   
   113ab:	int3   
   113ac:	int3   
   113ad:	int3   
   113ae:	test   BYTE PTR ds:0x78714,0x1
   113b5:	jne    0x113cd
   113b7:	or     DWORD PTR ds:0x78714,0x1
   113be:	push   0x1e77e
   113c3:	call   0x11200
   113c8:	mov    ds:0x78710,eax
   113cd:	mov    eax,ds:0x78710
   113d2:	ret    
   113d3:	int3   
   113d4:	int3   
   113d5:	int3   
   113d6:	int3   
   113d7:	int3   
   113d8:	test   BYTE PTR ds:0x7871c,0x1
   113df:	jne    0x113f7
   113e1:	or     DWORD PTR ds:0x7871c,0x1
   113e8:	push   0x1e792
   113ed:	call   0x11200
   113f2:	mov    ds:0x78718,eax
   113f7:	mov    eax,ds:0x78718
   113fc:	ret    
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	int3   
   11401:	int3   
   11402:	test   BYTE PTR ds:0x78724,0x1
   11409:	jne    0x11421
   1140b:	or     DWORD PTR ds:0x78724,0x1
   11412:	push   0x1e7aa
   11417:	call   0x11200
   1141c:	mov    ds:0x78720,eax
   11421:	mov    eax,ds:0x78720
   11426:	ret    
   11427:	int3   
   11428:	int3   
   11429:	int3   
   1142a:	int3   
   1142b:	int3   
   1142c:	test   BYTE PTR ds:0x7872c,0x1
   11433:	jne    0x1144b
   11435:	or     DWORD PTR ds:0x7872c,0x1
   1143c:	push   0x1e7c6
   11441:	call   0x11200
   11446:	mov    ds:0x78728,eax
   1144b:	mov    eax,ds:0x78728
   11450:	ret    
   11451:	int3   
   11452:	int3   
   11453:	int3   
   11454:	int3   
   11455:	int3   
   11456:	test   BYTE PTR ds:0x78734,0x1
   1145d:	jne    0x11475
   1145f:	or     DWORD PTR ds:0x78734,0x1
   11466:	push   0x1e800
   1146b:	call   0x11200
   11470:	mov    ds:0x78730,eax
   11475:	mov    eax,ds:0x78730
   1147a:	ret    
   1147b:	int3   
   1147c:	int3   
   1147d:	int3   
   1147e:	int3   
   1147f:	int3   
   11480:	test   BYTE PTR ds:0x7873c,0x1
   11487:	jne    0x1149f
   11489:	or     DWORD PTR ds:0x7873c,0x1
   11490:	push   0x1e81a
   11495:	call   0x11200
   1149a:	mov    ds:0x78738,eax
   1149f:	mov    eax,ds:0x78738
   114a4:	ret    
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	test   BYTE PTR ds:0x78744,0x1
   114b1:	jne    0x114c9
   114b3:	or     DWORD PTR ds:0x78744,0x1
   114ba:	push   0x1e83c
   114bf:	call   0x11200
   114c4:	mov    ds:0x78740,eax
   114c9:	mov    eax,ds:0x78740
   114ce:	ret    
   114cf:	int3   
   114d0:	int3   
   114d1:	int3   
   114d2:	int3   
   114d3:	int3   
   114d4:	test   BYTE PTR ds:0x7874c,0x1
   114db:	jne    0x114f3
   114dd:	or     DWORD PTR ds:0x7874c,0x1
   114e4:	push   0x1e876
   114e9:	call   0x11200
   114ee:	mov    ds:0x78748,eax
   114f3:	mov    eax,ds:0x78748
   114f8:	ret    
   114f9:	int3   
   114fa:	int3   
   114fb:	int3   
   114fc:	int3   
   114fd:	int3   
   114fe:	test   BYTE PTR ds:0x78754,0x1
   11505:	jne    0x1151d
   11507:	or     DWORD PTR ds:0x78754,0x1
   1150e:	push   0x1e89c
   11513:	call   0x11200
   11518:	mov    ds:0x78750,eax
   1151d:	mov    eax,ds:0x78750
   11522:	ret    
   11523:	int3   
   11524:	int3   
   11525:	int3   
   11526:	int3   
   11527:	int3   
   11528:	test   BYTE PTR ds:0x7875c,0x1
   1152f:	jne    0x11547
   11531:	or     DWORD PTR ds:0x7875c,0x1
   11538:	push   0x1e8cc
   1153d:	call   0x11200
   11542:	mov    ds:0x78758,eax
   11547:	mov    eax,ds:0x78758
   1154c:	ret    
   1154d:	int3   
   1154e:	int3   
   1154f:	int3   
   11550:	int3   
   11551:	int3   
   11552:	test   BYTE PTR ds:0x78764,0x1
   11559:	jne    0x11571
   1155b:	or     DWORD PTR ds:0x78764,0x1
   11562:	push   0x1e8fe
   11567:	call   0x11200
   1156c:	mov    ds:0x78760,eax
   11571:	mov    eax,ds:0x78760
   11576:	ret    
   11577:	int3   
   11578:	int3   
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	test   BYTE PTR ds:0x7876c,0x1
   11583:	jne    0x1159b
   11585:	or     DWORD PTR ds:0x7876c,0x1
   1158c:	push   0x1e90e
   11591:	call   0x11200
   11596:	mov    ds:0x78768,eax
   1159b:	mov    eax,ds:0x78768
   115a0:	ret    
   115a1:	int3   
   115a2:	int3   
   115a3:	int3   
   115a4:	int3   
   115a5:	int3   
   115a6:	test   BYTE PTR ds:0x78774,0x1
   115ad:	jne    0x115c5
   115af:	or     DWORD PTR ds:0x78774,0x1
   115b6:	push   0x1e938
   115bb:	call   0x11200
   115c0:	mov    ds:0x78770,eax
   115c5:	mov    eax,ds:0x78770
   115ca:	ret    
   115cb:	int3   
   115cc:	int3   
   115cd:	int3   
   115ce:	int3   
   115cf:	int3   
   115d0:	test   BYTE PTR ds:0x7877c,0x1
   115d7:	jne    0x115ef
   115d9:	or     DWORD PTR ds:0x7877c,0x1
   115e0:	push   0x1e954
   115e5:	call   0x11200
   115ea:	mov    ds:0x78778,eax
   115ef:	mov    eax,ds:0x78778
   115f4:	ret    
   115f5:	int3   
   115f6:	int3   
   115f7:	int3   
   115f8:	int3   
   115f9:	int3   
   115fa:	test   BYTE PTR ds:0x78784,0x1
   11601:	jne    0x11619
   11603:	or     DWORD PTR ds:0x78784,0x1
   1160a:	push   0x1e990
   1160f:	call   0x11200
   11614:	mov    ds:0x78780,eax
   11619:	mov    eax,ds:0x78780
   1161e:	ret    
   1161f:	int3   
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	test   BYTE PTR ds:0x7878c,0x1
   1162b:	jne    0x11643
   1162d:	or     DWORD PTR ds:0x7878c,0x1
   11634:	push   0x1e9b4
   11639:	call   0x11200
   1163e:	mov    ds:0x78788,eax
   11643:	mov    eax,ds:0x78788
   11648:	ret    
   11649:	int3   
   1164a:	int3   
   1164b:	int3   
   1164c:	int3   
   1164d:	int3   
   1164e:	test   BYTE PTR ds:0x78794,0x1
   11655:	jne    0x1166d
   11657:	or     DWORD PTR ds:0x78794,0x1
   1165e:	push   0x1e9de
   11663:	call   0x11200
   11668:	mov    ds:0x78790,eax
   1166d:	mov    eax,ds:0x78790
   11672:	ret    
   11673:	int3   
   11674:	int3   
   11675:	int3   
   11676:	int3   
   11677:	int3   
   11678:	test   BYTE PTR ds:0x7879c,0x1
   1167f:	jne    0x11697
   11681:	or     DWORD PTR ds:0x7879c,0x1
   11688:	push   0x1ea0a
   1168d:	call   0x11200
   11692:	mov    ds:0x78798,eax
   11697:	mov    eax,ds:0x78798
   1169c:	ret    
   1169d:	int3   
   1169e:	int3   
   1169f:	int3   
   116a0:	int3   
   116a1:	int3   
   116a2:	test   BYTE PTR ds:0x787a4,0x1
   116a9:	jne    0x116c1
   116ab:	or     DWORD PTR ds:0x787a4,0x1
   116b2:	push   0x1ea1e
   116b7:	call   0x11200
   116bc:	mov    ds:0x787a0,eax
   116c1:	mov    eax,ds:0x787a0
   116c6:	ret    
   116c7:	int3   
   116c8:	int3   
   116c9:	int3   
   116ca:	int3   
   116cb:	int3   
   116cc:	test   BYTE PTR ds:0x787ac,0x1
   116d3:	jne    0x116eb
   116d5:	or     DWORD PTR ds:0x787ac,0x1
   116dc:	push   0x1ea4e
   116e1:	call   0x11200
   116e6:	mov    ds:0x787a8,eax
   116eb:	mov    eax,ds:0x787a8
   116f0:	ret    
   116f1:	int3   
   116f2:	int3   
   116f3:	int3   
   116f4:	int3   
   116f5:	int3   
   116f6:	test   BYTE PTR ds:0x787b4,0x1
   116fd:	jne    0x11715
   116ff:	or     DWORD PTR ds:0x787b4,0x1
   11706:	push   0x1ea6c
   1170b:	call   0x11200
   11710:	mov    ds:0x787b0,eax
   11715:	mov    eax,ds:0x787b0
   1171a:	ret    
   1171b:	int3   
   1171c:	int3   
   1171d:	int3   
   1171e:	int3   
   1171f:	int3   
   11720:	test   BYTE PTR ds:0x787bc,0x1
   11727:	jne    0x1173f
   11729:	or     DWORD PTR ds:0x787bc,0x1
   11730:	push   0x1ea86
   11735:	call   0x11200
   1173a:	mov    ds:0x787b8,eax
   1173f:	mov    eax,ds:0x787b8
   11744:	ret    
   11745:	int3   
   11746:	int3   
   11747:	int3   
   11748:	int3   
   11749:	int3   
   1174a:	test   BYTE PTR ds:0x787c4,0x1
   11751:	jne    0x11769
   11753:	or     DWORD PTR ds:0x787c4,0x1
   1175a:	push   0x1ea9e
   1175f:	call   0x11200
   11764:	mov    ds:0x787c0,eax
   11769:	mov    eax,ds:0x787c0
   1176e:	ret    
   1176f:	int3   
   11770:	int3   
   11771:	int3   
   11772:	int3   
   11773:	int3   
   11774:	test   BYTE PTR ds:0x787cc,0x1
   1177b:	jne    0x11793
   1177d:	or     DWORD PTR ds:0x787cc,0x1
   11784:	push   0x1eabc
   11789:	call   0x11200
   1178e:	mov    ds:0x787c8,eax
   11793:	mov    eax,ds:0x787c8
   11798:	ret    
   11799:	int3   
   1179a:	int3   
   1179b:	int3   
   1179c:	int3   
   1179d:	int3   
   1179e:	test   BYTE PTR ds:0x787d4,0x1
   117a5:	jne    0x117bd
   117a7:	or     DWORD PTR ds:0x787d4,0x1
   117ae:	push   0x1eadc
   117b3:	call   0x11200
   117b8:	mov    ds:0x787d0,eax
   117bd:	mov    eax,ds:0x787d0
   117c2:	ret    
   117c3:	int3   
   117c4:	int3   
   117c5:	int3   
   117c6:	int3   
   117c7:	int3   
   117c8:	test   BYTE PTR ds:0x787dc,0x1
   117cf:	jne    0x117e7
   117d1:	or     DWORD PTR ds:0x787dc,0x1
   117d8:	push   0x1eafc
   117dd:	call   0x11200
   117e2:	mov    ds:0x787d8,eax
   117e7:	mov    eax,ds:0x787d8
   117ec:	ret    
   117ed:	int3   
   117ee:	int3   
   117ef:	int3   
   117f0:	int3   
   117f1:	int3   
   117f2:	test   BYTE PTR ds:0x787e4,0x1
   117f9:	jne    0x11811
   117fb:	or     DWORD PTR ds:0x787e4,0x1
   11802:	push   0x1eb1c
   11807:	call   0x11200
   1180c:	mov    ds:0x787e0,eax
   11811:	mov    eax,ds:0x787e0
   11816:	ret    
   11817:	int3   
   11818:	int3   
   11819:	int3   
   1181a:	int3   
   1181b:	int3   
   1181c:	test   BYTE PTR ds:0x787ec,0x1
   11823:	jne    0x1183b
   11825:	or     DWORD PTR ds:0x787ec,0x1
   1182c:	push   0x1eb32
   11831:	call   0x11200
   11836:	mov    ds:0x787e8,eax
   1183b:	mov    eax,ds:0x787e8
   11840:	ret    
   11841:	int3   
   11842:	int3   
   11843:	int3   
   11844:	int3   
   11845:	int3   
   11846:	test   BYTE PTR ds:0x787f4,0x1
   1184d:	jne    0x11865
   1184f:	or     DWORD PTR ds:0x787f4,0x1
   11856:	push   0x1eb5c
   1185b:	call   0x11200
   11860:	mov    ds:0x787f0,eax
   11865:	mov    eax,ds:0x787f0
   1186a:	ret    
   1186b:	int3   
   1186c:	int3   
   1186d:	int3   
   1186e:	int3   
   1186f:	int3   
   11870:	test   BYTE PTR ds:0x787fc,0x1
   11877:	jne    0x1188f
   11879:	or     DWORD PTR ds:0x787fc,0x1
   11880:	push   0x1eb74
   11885:	call   0x11200
   1188a:	mov    ds:0x787f8,eax
   1188f:	mov    eax,ds:0x787f8
   11894:	ret    
   11895:	int3   
   11896:	int3   
   11897:	int3   
   11898:	int3   
   11899:	int3   
   1189a:	test   BYTE PTR ds:0x78804,0x1
   118a1:	jne    0x118b9
   118a3:	or     DWORD PTR ds:0x78804,0x1
   118aa:	push   0x1eba2
   118af:	call   0x11200
   118b4:	mov    ds:0x78800,eax
   118b9:	mov    eax,ds:0x78800
   118be:	ret    
   118bf:	int3   
   118c0:	int3   
   118c1:	int3   
   118c2:	int3   
   118c3:	int3   
   118c4:	test   BYTE PTR ds:0x7880c,0x1
   118cb:	jne    0x118e3
   118cd:	or     DWORD PTR ds:0x7880c,0x1
   118d4:	push   0x1ebcc
   118d9:	call   0x11200
   118de:	mov    ds:0x78808,eax
   118e3:	mov    eax,ds:0x78808
   118e8:	ret    
   118e9:	int3   
   118ea:	int3   
   118eb:	int3   
   118ec:	int3   
   118ed:	int3   
   118ee:	test   BYTE PTR ds:0x78814,0x1
   118f5:	jne    0x1190d
   118f7:	or     DWORD PTR ds:0x78814,0x1
   118fe:	push   0x1ebea
   11903:	call   0x11200
   11908:	mov    ds:0x78810,eax
   1190d:	mov    eax,ds:0x78810
   11912:	ret    
   11913:	int3   
   11914:	int3   
   11915:	int3   
   11916:	int3   
   11917:	int3   
   11918:	test   BYTE PTR ds:0x7881c,0x1
   1191f:	jne    0x11937
   11921:	or     DWORD PTR ds:0x7881c,0x1
   11928:	push   0x1ec18
   1192d:	call   0x11200
   11932:	mov    ds:0x78818,eax
   11937:	mov    eax,ds:0x78818
   1193c:	ret    
   1193d:	int3   
   1193e:	int3   
   1193f:	int3   
   11940:	int3   
   11941:	int3   
   11942:	test   BYTE PTR ds:0x78824,0x1
   11949:	jne    0x11961
   1194b:	or     DWORD PTR ds:0x78824,0x1
   11952:	push   0x1ec3c
   11957:	call   0x11200
   1195c:	mov    ds:0x78820,eax
   11961:	mov    eax,ds:0x78820
   11966:	ret    
   11967:	int3   
   11968:	int3   
   11969:	int3   
   1196a:	int3   
   1196b:	int3   
   1196c:	test   BYTE PTR ds:0x7882c,0x1
   11973:	jne    0x1198b
   11975:	or     DWORD PTR ds:0x7882c,0x1
   1197c:	push   0x1ec62
   11981:	call   0x11200
   11986:	mov    ds:0x78828,eax
   1198b:	mov    eax,ds:0x78828
   11990:	ret    
   11991:	int3   
   11992:	int3   
   11993:	int3   
   11994:	int3   
   11995:	int3   
   11996:	test   BYTE PTR ds:0x78834,0x1
   1199d:	jne    0x119b5
   1199f:	or     DWORD PTR ds:0x78834,0x1
   119a6:	push   0x1ec82
   119ab:	call   0x11200
   119b0:	mov    ds:0x78830,eax
   119b5:	mov    eax,ds:0x78830
   119ba:	ret    
   119bb:	int3   
   119bc:	int3   
   119bd:	int3   
   119be:	int3   
   119bf:	int3   
   119c0:	test   BYTE PTR ds:0x7883c,0x1
   119c7:	jne    0x119df
   119c9:	or     DWORD PTR ds:0x7883c,0x1
   119d0:	push   0x1ecac
   119d5:	call   0x11200
   119da:	mov    ds:0x78838,eax
   119df:	mov    eax,ds:0x78838
   119e4:	ret    
   119e5:	int3   
   119e6:	int3   
   119e7:	int3   
   119e8:	int3   
   119e9:	int3   
   119ea:	test   BYTE PTR ds:0x78844,0x1
   119f1:	jne    0x11a09
   119f3:	or     DWORD PTR ds:0x78844,0x1
   119fa:	push   0x1ecd0
   119ff:	call   0x11200
   11a04:	mov    ds:0x78840,eax
   11a09:	mov    eax,ds:0x78840
   11a0e:	ret    
   11a0f:	int3   
   11a10:	int3   
   11a11:	int3   
   11a12:	int3   
   11a13:	int3   
   11a14:	test   BYTE PTR ds:0x7884c,0x1
   11a1b:	jne    0x11a33
   11a1d:	or     DWORD PTR ds:0x7884c,0x1
   11a24:	push   0x1ecfc
   11a29:	call   0x11200
   11a2e:	mov    ds:0x78848,eax
   11a33:	mov    eax,ds:0x78848
   11a38:	ret    
   11a39:	int3   
   11a3a:	int3   
   11a3b:	int3   
   11a3c:	int3   
   11a3d:	int3   
   11a3e:	test   BYTE PTR ds:0x78854,0x1
   11a45:	jne    0x11a5d
   11a47:	or     DWORD PTR ds:0x78854,0x1
   11a4e:	push   0x1ed1a
   11a53:	call   0x11200
   11a58:	mov    ds:0x78850,eax
   11a5d:	mov    eax,ds:0x78850
   11a62:	ret    
   11a63:	int3   
   11a64:	int3   
   11a65:	int3   
   11a66:	int3   
   11a67:	int3   
   11a68:	test   BYTE PTR ds:0x7885c,0x1
   11a6f:	jne    0x11a87
   11a71:	or     DWORD PTR ds:0x7885c,0x1
   11a78:	push   0x1ed50
   11a7d:	call   0x11200
   11a82:	mov    ds:0x78858,eax
   11a87:	mov    eax,ds:0x78858
   11a8c:	ret    
   11a8d:	int3   
   11a8e:	int3   
   11a8f:	int3   
   11a90:	int3   
   11a91:	int3   
   11a92:	call   0x1125e
   11a97:	test   eax,eax
   11a99:	jne    0x11a9e
   11a9b:	xor    eax,eax
   11a9d:	ret    
   11a9e:	call   0x11288
   11aa3:	test   eax,eax
   11aa5:	je     0x11a9b
   11aa7:	call   0x112b2
   11aac:	test   eax,eax
   11aae:	je     0x11a9b
   11ab0:	call   0x112dc
   11ab5:	test   eax,eax
   11ab7:	je     0x11a9b
   11ab9:	call   0x11306
   11abe:	test   eax,eax
   11ac0:	je     0x11a9b
   11ac2:	call   0x11330
   11ac7:	test   eax,eax
   11ac9:	je     0x11a9b
   11acb:	call   0x1135a
   11ad0:	test   eax,eax
   11ad2:	je     0x11a9b
   11ad4:	call   0x11384
   11ad9:	test   eax,eax
   11adb:	je     0x11a9b
   11add:	call   0x113ae
   11ae2:	test   eax,eax
   11ae4:	je     0x11a9b
   11ae6:	call   0x113d8
   11aeb:	test   eax,eax
   11aed:	je     0x11a9b
   11aef:	call   0x11402
   11af4:	test   eax,eax
   11af6:	je     0x11a9b
   11af8:	call   0x1142c
   11afd:	test   eax,eax
   11aff:	je     0x11a9b
   11b01:	call   0x11456
   11b06:	test   eax,eax
   11b08:	je     0x11a9b
   11b0a:	call   0x11480
   11b0f:	test   eax,eax
   11b11:	je     0x11a9b
   11b13:	call   0x114aa
   11b18:	test   eax,eax
   11b1a:	je     0x11a9b
   11b20:	call   0x114d4
   11b25:	test   eax,eax
   11b27:	je     0x11a9b
   11b2d:	call   0x114fe
   11b32:	test   eax,eax
   11b34:	je     0x11a9b
   11b3a:	call   0x11528
   11b3f:	test   eax,eax
   11b41:	je     0x11a9b
   11b47:	call   0x11552
   11b4c:	test   eax,eax
   11b4e:	je     0x11a9b
   11b54:	call   0x1157c
   11b59:	test   eax,eax
   11b5b:	je     0x11a9b
   11b61:	call   0x115a6
   11b66:	test   eax,eax
   11b68:	je     0x11a9b
   11b6e:	call   0x115d0
   11b73:	test   eax,eax
   11b75:	je     0x11a9b
   11b7b:	call   0x115fa
   11b80:	test   eax,eax
   11b82:	je     0x11a9b
   11b88:	call   0x11624
   11b8d:	test   eax,eax
   11b8f:	je     0x11a9b
   11b95:	call   0x1164e
   11b9a:	test   eax,eax
   11b9c:	je     0x11a9b
   11ba2:	call   0x11678
   11ba7:	test   eax,eax
   11ba9:	je     0x11a9b
   11baf:	call   0x116a2
   11bb4:	test   eax,eax
   11bb6:	je     0x11a9b
   11bbc:	call   0x116cc
   11bc1:	test   eax,eax
   11bc3:	je     0x11a9b
   11bc9:	call   0x116f6
   11bce:	test   eax,eax
   11bd0:	je     0x11a9b
   11bd6:	call   0x11720
   11bdb:	test   eax,eax
   11bdd:	je     0x11a9b
   11be3:	call   0x1174a
   11be8:	test   eax,eax
   11bea:	je     0x11a9b
   11bf0:	call   0x11774
   11bf5:	test   eax,eax
   11bf7:	je     0x11a9b
   11bfd:	call   0x1179e
   11c02:	test   eax,eax
   11c04:	je     0x11a9b
   11c0a:	call   0x117c8
   11c0f:	test   eax,eax
   11c11:	je     0x11a9b
   11c17:	call   0x117f2
   11c1c:	test   eax,eax
   11c1e:	je     0x11a9b
   11c24:	call   0x1181c
   11c29:	test   eax,eax
   11c2b:	je     0x11a9b
   11c31:	call   0x11846
   11c36:	test   eax,eax
   11c38:	je     0x11a9b
   11c3e:	call   0x11870
   11c43:	test   eax,eax
   11c45:	je     0x11a9b
   11c4b:	call   0x1189a
   11c50:	test   eax,eax
   11c52:	je     0x11a9b
   11c58:	call   0x118c4
   11c5d:	test   eax,eax
   11c5f:	je     0x11a9b
   11c65:	call   0x118ee
   11c6a:	test   eax,eax
   11c6c:	je     0x11a9b
   11c72:	call   0x11918
   11c77:	test   eax,eax
   11c79:	je     0x11a9b
   11c7f:	call   0x11942
   11c84:	test   eax,eax
   11c86:	je     0x11a9b
   11c8c:	call   0x1196c
   11c91:	test   eax,eax
   11c93:	je     0x11a9b
   11c99:	call   0x11996
   11c9e:	test   eax,eax
   11ca0:	je     0x11a9b
   11ca6:	call   0x119c0
   11cab:	test   eax,eax
   11cad:	je     0x11a9b
   11cb3:	call   0x119ea
   11cb8:	test   eax,eax
   11cba:	je     0x11a9b
   11cc0:	call   0x11a14
   11cc5:	test   eax,eax
   11cc7:	je     0x11a9b
   11ccd:	call   0x11a3e
   11cd2:	test   eax,eax
   11cd4:	je     0x11a9b
   11cda:	call   0x11a68
   11cdf:	neg    eax
   11ce1:	sbb    eax,eax
   11ce3:	neg    eax
   11ce5:	ret    
   11ce6:	int3   
   11ce7:	int3   
   11ce8:	int3   
   11ce9:	int3   
   11cea:	int3   
   11ceb:	int3   
   11cec:	mov    edi,edi
   11cee:	push   ebp
   11cef:	mov    ebp,esp
   11cf1:	push   esi
   11cf2:	push   0x20
   11cf4:	push   0x61737973
   11cf9:	push   DWORD PTR [ebp+0x8]
   11cfc:	push   0x1
   11cfe:	call   0x115d0
   11d03:	call   eax
   11d05:	mov    esi,eax
   11d07:	test   esi,esi
   11d09:	jne    0x11d17
   11d0b:	push   0xc000009a
   11d10:	call   0x115a6
   11d15:	call   eax
   11d17:	mov    eax,esi
   11d19:	pop    esi
   11d1a:	pop    ebp
   11d1b:	ret    
   11d1c:	int3   
   11d1d:	int3   
   11d1e:	int3   
   11d1f:	int3   
   11d20:	int3   
   11d21:	int3   
   11d22:	mov    edi,edi
   11d24:	push   ebp
   11d25:	mov    ebp,esp
   11d27:	cmp    DWORD PTR [ebp+0x8],0x0
   11d2b:	je     0x11d39
   11d2d:	push   0x0
   11d2f:	push   DWORD PTR [ebp+0x8]
   11d32:	call   0x115fa
   11d37:	call   eax
   11d39:	pop    ebp
   11d3a:	ret    
   11d3b:	int3   
   11d3c:	int3   
   11d3d:	int3   
   11d3e:	int3   
   11d3f:	int3   
   11d40:	mov    edi,edi
   11d42:	push   ebp
   11d43:	mov    ebp,esp
   11d45:	mov    eax,ecx
   11d47:	mov    ecx,DWORD PTR [ebp+0x8]
   11d4a:	mov    edx,DWORD PTR [ecx]
   11d4c:	test   edx,edx
   11d4e:	je     0x11d57
   11d50:	mov    DWORD PTR [eax],edx
   11d52:	inc    DWORD PTR [edx+0x4]
   11d55:	jmp    0x11d5a
   11d57:	and    DWORD PTR [eax],0x0
   11d5a:	pop    ebp
   11d5b:	ret    0x4
   11d5e:	int3   
   11d5f:	int3   
   11d60:	int3   
   11d61:	int3   
   11d62:	int3   
   11d63:	int3   
   11d64:	mov    edi,edi
   11d66:	push   esi
   11d67:	mov    esi,ecx
   11d69:	dec    DWORD PTR [esi+0x4]
   11d6c:	jne    0x11d7d
   11d6e:	push   DWORD PTR [esi]
   11d70:	call   0x11d22
   11d75:	push   esi
   11d76:	call   0x11d22
   11d7b:	pop    ecx
   11d7c:	pop    ecx
   11d7d:	pop    esi
   11d7e:	ret    
   11d7f:	int3   
   11d80:	int3   
   11d81:	int3   
   11d82:	int3   
   11d83:	int3   
   11d84:	mov    edi,edi
   11d86:	push   ebp
   11d87:	mov    ebp,esp
   11d89:	push   ecx
   11d8a:	push   edi
   11d8b:	lea    eax,[ebp-0x4]
   11d8e:	push   eax
   11d8f:	xor    edi,edi
   11d91:	push   edi
   11d92:	push   edi
   11d93:	push   0x1b
   11d95:	push   DWORD PTR [ebp+0x8]
   11d98:	call   0x1135a
   11d9d:	call   eax
   11d9f:	cmp    eax,0xc0000004
   11da4:	jne    0x11e0f
   11da6:	mov    ecx,DWORD PTR [ebp-0x4]
   11da9:	push   ebx
   11daa:	mov    ebx,DWORD PTR [ebp+0xc]
   11dad:	movzx  edx,WORD PTR [ebx+0x2]
   11db1:	lea    eax,[ecx-0x8]
   11db4:	cmp    edx,eax
   11db6:	jae    0x11dc2
   11db8:	mov    WORD PTR [ebx],ax
   11dbb:	mov    eax,0x80000005
   11dc0:	jmp    0x11e0e
   11dc2:	push   esi
   11dc3:	push   0x20736649
   11dc8:	push   ecx
   11dc9:	push   edi
   11dca:	call   0x1164e
   11dcf:	call   eax
   11dd1:	mov    esi,eax
   11dd3:	cmp    esi,edi
   11dd5:	jne    0x11dde
   11dd7:	mov    eax,0xc000009a
   11ddc:	jmp    0x11e0d
   11dde:	lea    eax,[ebp-0x4]
   11de1:	push   eax
   11de2:	push   DWORD PTR [ebp-0x4]
   11de5:	push   esi
   11de6:	push   0x1b
   11de8:	push   DWORD PTR [ebp+0x8]
   11deb:	call   0x1135a
   11df0:	call   eax
   11df2:	mov    edi,eax
   11df4:	test   edi,edi
   11df6:	jl     0x11e01
   11df8:	push   esi
   11df9:	push   ebx
   11dfa:	call   0x11624
   11dff:	call   eax
   11e01:	push   0x0
   11e03:	push   esi
   11e04:	call   0x115fa
   11e09:	call   eax
   11e0b:	mov    eax,edi
   11e0d:	pop    esi
   11e0e:	pop    ebx
   11e0f:	pop    edi
   11e10:	leave  
   11e11:	ret    0x8
   11e14:	int3   
   11e15:	int3   
   11e16:	int3   
   11e17:	int3   
   11e18:	int3   
   11e19:	int3   
   11e1a:	mov    edi,edi
   11e1c:	push   ebp
   11e1d:	mov    ebp,esp
   11e1f:	sub    esp,0x18
   11e22:	push   0x0
   11e24:	push   0x18
   11e26:	lea    eax,[ebp-0x18]
   11e29:	push   eax
   11e2a:	push   0x0
   11e2c:	push   DWORD PTR [ebp+0x8]
   11e2f:	call   0x1135a
   11e34:	call   eax
   11e36:	test   eax,eax
   11e38:	jl     0x11e3f
   11e3a:	mov    eax,DWORD PTR [ebp-0x8]
   11e3d:	jmp    0x11e41
   11e3f:	xor    eax,eax
   11e41:	leave  
   11e42:	ret    0x4
   11e45:	int3   
   11e46:	int3   
   11e47:	int3   
   11e48:	int3   
   11e49:	int3   
   11e4a:	mov    edi,edi
   11e4c:	push   ebp
   11e4d:	mov    ebp,esp
   11e4f:	sub    esp,0x10
   11e52:	push   esi
   11e53:	push   edi
   11e54:	xor    eax,eax
   11e56:	mov    WORD PTR [ebp-0x8],ax
   11e5a:	lea    edi,[ebp-0x6]
   11e5d:	stos   DWORD PTR es:[edi],eax
   11e5e:	stos   WORD PTR es:[edi],ax
   11e60:	mov    eax,DWORD PTR [ebp+0xc]
   11e63:	mov    DWORD PTR [ebp-0x4],eax
   11e66:	lea    ecx,[eax+0x2]
   11e69:	mov    dx,WORD PTR [eax]
   11e6c:	inc    eax
   11e6d:	inc    eax
   11e6e:	test   dx,dx
   11e71:	jne    0x11e69
   11e73:	mov    esi,DWORD PTR [ebp+0x8]
   11e76:	movzx  edx,WORD PTR [esi]
   11e79:	sub    eax,ecx
   11e7b:	sar    eax,1
   11e7d:	lea    ecx,[eax+eax*1]
   11e80:	mov    WORD PTR [ebp-0x8],cx
   11e84:	mov    WORD PTR [ebp-0x6],cx
   11e88:	cmp    dx,cx
   11e8b:	jb     0x11ecb
   11e8d:	xor    eax,eax
   11e8f:	lea    edi,[ebp-0xe]
   11e92:	stos   DWORD PTR es:[edi],eax
   11e93:	stos   WORD PTR es:[edi],ax
   11e95:	mov    WORD PTR [ebp-0x10],cx
   11e99:	mov    WORD PTR [ebp-0xe],cx
   11e9d:	movzx  eax,dx
   11ea0:	movzx  ecx,cx
   11ea3:	sub    eax,ecx
   11ea5:	mov    ecx,DWORD PTR [esi+0x4]
   11ea8:	cdq    
   11ea9:	sub    eax,edx
   11eab:	sar    eax,1
   11ead:	lea    eax,[ecx+eax*2]
   11eb0:	mov    DWORD PTR [ebp-0xc],eax
   11eb3:	push   0x1
   11eb5:	lea    eax,[ebp-0x8]
   11eb8:	push   eax
   11eb9:	lea    eax,[ebp-0x10]
   11ebc:	push   eax
   11ebd:	call   0x116a2
   11ec2:	call   eax
   11ec4:	neg    eax
   11ec6:	sbb    eax,eax
   11ec8:	inc    eax
   11ec9:	jmp    0x11ecd
   11ecb:	xor    al,al
   11ecd:	pop    edi
   11ece:	pop    esi
   11ecf:	leave  
   11ed0:	ret    0x8
   11ed3:	int3   
   11ed4:	int3   
   11ed5:	int3   
   11ed6:	int3   
   11ed7:	int3   
   11ed8:	mov    edi,edi
   11eda:	push   ebp
   11edb:	mov    ebp,esp
   11edd:	push   ebx
   11ede:	xor    eax,eax
   11ee0:	push   eax
   11ee1:	push   eax
   11ee2:	push   eax
   11ee3:	push   eax
   11ee4:	mov    ebx,0x77b2c
   11ee9:	push   ebx
   11eea:	call   0x119ea
   11eef:	call   eax
   11ef1:	test   eax,eax
   11ef3:	jge    0x11ef9
   11ef5:	xor    al,al
   11ef7:	jmp    0x11f1d
   11ef9:	push   esi
   11efa:	mov    esi,DWORD PTR [ebp+0x8]
   11efd:	push   edi
   11efe:	imul   esi,esi,0x14
   11f01:	mov    edi,DWORD PTR [ebp+0xc]
   11f04:	push   0x5
   11f06:	pop    ecx
   11f07:	push   0x0
   11f09:	add    esi,0x7857c
   11f0f:	push   ebx
   11f10:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f12:	call   0x11a14
   11f17:	call   eax
   11f19:	pop    edi
   11f1a:	mov    al,0x1
   11f1c:	pop    esi
   11f1d:	pop    ebx
   11f1e:	pop    ebp
   11f1f:	ret    0x8
   11f22:	int3   
   11f23:	int3   
   11f24:	int3   
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	mov    edi,edi
   11f2a:	push   ebp
   11f2b:	mov    ebp,esp
   11f2d:	push   ebx
   11f2e:	xor    eax,eax
   11f30:	push   eax
   11f31:	push   eax
   11f32:	push   eax
   11f33:	push   eax
   11f34:	mov    ebx,0x77b2c
   11f39:	push   ebx
   11f3a:	call   0x119ea
   11f3f:	call   eax
   11f41:	test   eax,eax
   11f43:	jl     0x11f67
   11f45:	push   esi
   11f46:	mov    esi,DWORD PTR [ebp+0xc]
   11f49:	push   edi
   11f4a:	mov    edi,DWORD PTR [ebp+0x8]
   11f4d:	imul   edi,edi,0x14
   11f50:	push   0x5
   11f52:	pop    ecx
   11f53:	push   0x0
   11f55:	add    edi,0x7857c
   11f5b:	push   ebx
   11f5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f5e:	call   0x11a14
   11f63:	call   eax
   11f65:	pop    edi
   11f66:	pop    esi
   11f67:	pop    ebx
   11f68:	pop    ebp
   11f69:	ret    0x8
   11f6c:	int3   
   11f6d:	int3   
   11f6e:	int3   
   11f6f:	int3   
   11f70:	int3   
   11f71:	int3   
   11f72:	mov    edi,edi
   11f74:	push   ebp
   11f75:	mov    ebp,esp
   11f77:	sub    esp,0x14
   11f7a:	and    DWORD PTR [ebp-0x14],0x0
   11f7e:	push   edi
   11f7f:	xor    eax,eax
   11f81:	lea    edi,[ebp-0x10]
   11f84:	stos   DWORD PTR es:[edi],eax
   11f85:	stos   DWORD PTR es:[edi],eax
   11f86:	stos   DWORD PTR es:[edi],eax
   11f87:	stos   DWORD PTR es:[edi],eax
   11f88:	lea    eax,[ebp-0x14]
   11f8b:	push   eax
   11f8c:	push   DWORD PTR [ebp+0x8]
   11f8f:	call   0x11f28
   11f94:	pop    edi
   11f95:	leave  
   11f96:	ret    0x4
   11f99:	int3   
   11f9a:	int3   
   11f9b:	int3   
   11f9c:	int3   
   11f9d:	int3   
   11f9e:	mov    edi,edi
   11fa0:	push   ebp
   11fa1:	mov    ebp,esp
   11fa3:	mov    ecx,DWORD PTR ds:0x785a4
   11fa9:	sub    esp,0x38
   11fac:	push   esi
   11fad:	xor    esi,esi
   11faf:	cmp    ecx,esi
   11fb1:	jne    0x11fbb
   11fb3:	or     eax,0xffffffff
   11fb6:	jmp    0x120a2
   11fbb:	push   edi
   11fbc:	xor    eax,eax
   11fbe:	mov    DWORD PTR [ebp-0x20],esi
   11fc1:	lea    edi,[ebp-0x1c]
   11fc4:	stos   DWORD PTR es:[edi],eax
   11fc5:	lea    eax,[ebp-0x18]
   11fc8:	push   eax
   11fc9:	lea    eax,[ebp-0x38]
   11fcc:	push   eax
   11fcd:	push   0x400
   11fd2:	lea    eax,[ebp-0x10]
   11fd5:	push   eax
   11fd6:	mov    DWORD PTR [ebp-0x4],esi
   11fd9:	mov    DWORD PTR [ebp-0x38],0x18
   11fe0:	mov    DWORD PTR [ebp-0x34],esi
   11fe3:	mov    DWORD PTR [ebp-0x2c],esi
   11fe6:	mov    DWORD PTR [ebp-0x30],esi
   11fe9:	mov    DWORD PTR [ebp-0x28],esi
   11fec:	mov    DWORD PTR [ebp-0x24],esi
   11fef:	mov    DWORD PTR [ebp-0x18],ecx
   11ff2:	mov    DWORD PTR [ebp-0x14],esi
   11ff5:	call   0x1125e
   11ffa:	call   eax
   11ffc:	mov    edi,eax
   11ffe:	cmp    edi,esi
   12000:	jl     0x1209f
   12006:	lea    eax,[ebp-0xc]
   12009:	push   eax
   1200a:	push   0x8
   1200c:	push   DWORD PTR [ebp-0x10]
   1200f:	call   0x114d4
   12014:	call   eax
   12016:	mov    edi,eax
   12018:	cmp    edi,esi
   1201a:	jl     0x12095
   1201c:	lea    eax,[ebp-0x4]
   1201f:	push   eax
   12020:	push   0x1
   12022:	push   esi
   12023:	push   esi
   12024:	push   0x1
   12026:	push   DWORD PTR [ebp-0xc]
   12029:	call   0x112dc
   1202e:	call   eax
   12030:	mov    edi,eax
   12032:	cmp    edi,esi
   12034:	jl     0x1208b
   12036:	mov    eax,DWORD PTR [ebp+0x8]
   12039:	mov    DWORD PTR [ebp-0x18],eax
   1203c:	lea    eax,[ebp-0x18]
   1203f:	push   eax
   12040:	lea    eax,[ebp-0x38]
   12043:	push   eax
   12044:	push   0x200
   12049:	lea    eax,[ebp-0x8]
   1204c:	push   eax
   1204d:	call   0x1125e
   12052:	call   eax
   12054:	mov    edi,eax
   12056:	cmp    edi,esi
   12058:	jl     0x12081
   1205a:	mov    eax,DWORD PTR [ebp-0x4]
   1205d:	push   0x8
   1205f:	mov    DWORD PTR [ebp-0x20],eax
   12062:	lea    eax,[ebp-0x20]
   12065:	push   eax
   12066:	push   0x9
   12068:	push   DWORD PTR [ebp-0x8]
   1206b:	mov    DWORD PTR [ebp-0x1c],esi
   1206e:	call   0x114fe
   12073:	call   eax
   12075:	push   DWORD PTR [ebp-0x8]
   12078:	mov    edi,eax
   1207a:	call   0x11552
   1207f:	call   eax
   12081:	push   DWORD PTR [ebp-0x4]
   12084:	call   0x11552
   12089:	call   eax
   1208b:	push   DWORD PTR [ebp-0xc]
   1208e:	call   0x11552
   12093:	call   eax
   12095:	push   DWORD PTR [ebp-0x10]
   12098:	call   0x11552
   1209d:	call   eax
   1209f:	mov    eax,edi
   120a1:	pop    edi
   120a2:	pop    esi
   120a3:	leave  
   120a4:	ret    0x4
   120a7:	int3   
   120a8:	int3   
   120a9:	int3   
   120aa:	int3   
   120ab:	int3   
   120ac:	mov    edi,edi
   120ae:	push   ebp
   120af:	mov    ebp,esp
   120b1:	push   ebx
   120b2:	xor    eax,eax
   120b4:	push   eax
   120b5:	push   eax
   120b6:	push   eax
   120b7:	push   eax
   120b8:	mov    ebx,0x784b8
   120bd:	push   ebx
   120be:	call   0x119ea
   120c3:	call   eax
   120c5:	test   eax,eax
   120c7:	jl     0x120e4
   120c9:	push   esi
   120ca:	mov    esi,DWORD PTR [ebp+0x8]
   120cd:	push   edi
   120ce:	push   0x40
   120d0:	pop    ecx
   120d1:	push   0x0
   120d3:	mov    edi,0x785a8
   120d8:	push   ebx
   120d9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   120db:	call   0x11a14
   120e0:	call   eax
   120e2:	pop    edi
   120e3:	pop    esi
   120e4:	pop    ebx
   120e5:	pop    ebp
   120e6:	ret    0x4
   120e9:	int3   
   120ea:	int3   
   120eb:	int3   
   120ec:	int3   
   120ed:	int3   
   120ee:	mov    edi,edi
   120f0:	push   ebp
   120f1:	mov    ebp,esp
   120f3:	push   ebx
   120f4:	xor    eax,eax
   120f6:	push   eax
   120f7:	push   eax
   120f8:	push   eax
   120f9:	push   eax
   120fa:	mov    ebx,0x784b8
   120ff:	push   ebx
   12100:	call   0x119ea
   12105:	call   eax
   12107:	test   eax,eax
   12109:	jge    0x1210f
   1210b:	xor    al,al
   1210d:	jmp    0x12136
   1210f:	push   esi
   12110:	push   edi
   12111:	mov    edi,DWORD PTR [ebp+0x8]
   12114:	push   0x40
   12116:	pop    ecx
   12117:	push   0x0
   12119:	mov    esi,0x785a8
   1211e:	push   ebx
   1211f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12121:	call   0x11a14
   12126:	call   eax
   12128:	xor    eax,eax
   1212a:	cmp    WORD PTR ds:0x785a8,ax
   12131:	pop    edi
   12132:	setne  al
   12135:	pop    esi
   12136:	pop    ebx
   12137:	pop    ebp
   12138:	ret    0x4
   1213b:	int3   
   1213c:	int3   
   1213d:	int3   
   1213e:	int3   
   1213f:	int3   
   12140:	mov    edi,edi
   12142:	push   ebp
   12143:	mov    ebp,esp
   12145:	sub    esp,0x43c
   1214b:	mov    eax,ds:0x77b1c
   12150:	xor    eax,ebp
   12152:	mov    DWORD PTR [ebp-0x4],eax
   12155:	mov    eax,DWORD PTR [ebp+0xc]
   12158:	push   ebx
   12159:	push   esi
   1215a:	mov    esi,DWORD PTR [ebp+0x8]
   1215d:	push   edi
   1215e:	xor    ebx,ebx
   12160:	push   0x3ff
   12165:	mov    DWORD PTR [ebp-0x418],eax
   1216b:	lea    eax,[ebp-0x403]
   12171:	push   ebx
   12172:	push   eax
   12173:	mov    DWORD PTR [ebp-0x424],esi
   12179:	mov    BYTE PTR [ebp-0x404],bl
   1217f:	call   0x1e19e
   12184:	add    esp,0xc
   12187:	lea    eax,[ebp-0x410]
   1218d:	push   eax
   1218e:	push   0x400
   12193:	lea    eax,[ebp-0x404]
   12199:	push   eax
   1219a:	push   ebx
   1219b:	push   ebx
   1219c:	push   esi
   1219d:	jmp    0x1234c
   121a2:	cmp    eax,ebx
   121a4:	jl     0x1236e
   121aa:	mov    eax,DWORD PTR [ebp-0x418]
   121b0:	lea    edx,[eax+0x2]
   121b3:	mov    cx,WORD PTR [eax]
   121b6:	inc    eax
   121b7:	inc    eax
   121b8:	cmp    cx,bx
   121bb:	jne    0x121b3
   121bd:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121c3:	sub    eax,edx
   121c5:	shr    ecx,1
   121c7:	sar    eax,1
   121c9:	lea    esi,[ecx+eax*1+0x2]
   121cd:	xor    ecx,ecx
   121cf:	push   0x2
   121d1:	pop    edx
   121d2:	mov    eax,esi
   121d4:	mul    edx
   121d6:	seto   cl
   121d9:	neg    ecx
   121db:	or     ecx,eax
   121dd:	push   ecx
   121de:	call   0x11cec
   121e3:	mov    edi,eax
   121e5:	lea    eax,[esi+esi*1]
   121e8:	push   eax
   121e9:	push   ebx
   121ea:	push   edi
   121eb:	mov    DWORD PTR [ebp-0x40c],edi
   121f1:	call   0x1e19e
   121f6:	mov    eax,DWORD PTR [ebp-0x418]
   121fc:	add    esp,0x10
   121ff:	mov    ecx,eax
   12201:	mov    dx,WORD PTR [eax]
   12204:	inc    eax
   12205:	inc    eax
   12206:	cmp    dx,bx
   12209:	jne    0x12201
   1220b:	sub    eax,ecx
   1220d:	dec    edi
   1220e:	mov    esi,ecx
   12210:	dec    edi
   12211:	mov    cx,WORD PTR [edi+0x2]
   12215:	inc    edi
   12216:	inc    edi
   12217:	cmp    cx,bx
   1221a:	jne    0x12211
   1221c:	mov    ecx,eax
   1221e:	shr    ecx,0x2
   12221:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12223:	mov    ecx,eax
   12225:	and    ecx,0x3
   12228:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1222a:	mov    edi,DWORD PTR [ebp-0x40c]
   12230:	dec    edi
   12231:	dec    edi
   12232:	mov    ax,WORD PTR [edi+0x2]
   12236:	inc    edi
   12237:	inc    edi
   12238:	cmp    ax,bx
   1223b:	jne    0x12232
   1223d:	mov    esi,0x1e54a
   12242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12243:	mov    eax,DWORD PTR [ebp-0x3f8]
   12249:	shr    eax,1
   1224b:	push   eax
   1224c:	lea    eax,[ebp-0x3f4]
   12252:	push   eax
   12253:	push   DWORD PTR [ebp-0x40c]
   12259:	call   0x1e1aa
   1225e:	mov    esi,DWORD PTR [ebp-0x40c]
   12264:	mov    eax,esi
   12266:	add    esp,0xc
   12269:	mov    DWORD PTR [ebp-0x41c],esi
   1226f:	lea    edx,[eax+0x2]
   12272:	mov    cx,WORD PTR [eax]
   12275:	inc    eax
   12276:	inc    eax
   12277:	cmp    cx,bx
   1227a:	jne    0x12272
   1227c:	sub    eax,edx
   1227e:	sar    eax,1
   12280:	add    eax,eax
   12282:	mov    WORD PTR [ebp-0x41e],ax
   12289:	mov    WORD PTR [ebp-0x420],ax
   12290:	lea    eax,[ebp-0x420]
   12296:	mov    DWORD PTR [ebp-0x434],eax
   1229c:	lea    eax,[ebp-0x43c]
   122a2:	push   eax
   122a3:	push   0xf003f
   122a8:	lea    eax,[ebp-0x414]
   122ae:	push   eax
   122af:	mov    DWORD PTR [ebp-0x43c],0x18
   122b9:	mov    DWORD PTR [ebp-0x438],ebx
   122bf:	mov    DWORD PTR [ebp-0x430],0x40
   122c9:	mov    DWORD PTR [ebp-0x42c],ebx
   122cf:	mov    DWORD PTR [ebp-0x428],ebx
   122d5:	call   0x113ae
   122da:	call   eax
   122dc:	push   esi
   122dd:	test   eax,eax
   122df:	jl     0x12368
   122e5:	push   DWORD PTR [ebp-0x414]
   122eb:	call   0x12140
   122f0:	push   esi
   122f1:	mov    BYTE PTR [ebp-0x405],al
   122f7:	call   0x11d22
   122fc:	pop    ecx
   122fd:	push   DWORD PTR [ebp-0x414]
   12303:	call   0x113d8
   12308:	call   eax
   1230a:	test   eax,eax
   1230c:	jl     0x1236e
   1230e:	cmp    BYTE PTR [ebp-0x405],bl
   12314:	je     0x1236e
   12316:	push   0x3ff
   1231b:	lea    eax,[ebp-0x403]
   12321:	push   ebx
   12322:	push   eax
   12323:	mov    BYTE PTR [ebp-0x404],bl
   12329:	call   0x1e19e
   1232e:	add    esp,0xc
   12331:	lea    eax,[ebp-0x410]
   12337:	push   eax
   12338:	push   0x400
   1233d:	lea    eax,[ebp-0x404]
   12343:	push   eax
   12344:	push   ebx
   12345:	push   ebx
   12346:	push   DWORD PTR [ebp-0x424]
   1234c:	mov    DWORD PTR [ebp-0x410],ebx
   12352:	call   0x116cc
   12357:	call   eax
   12359:	cmp    eax,0x8000001a
   1235e:	jne    0x121a2
   12364:	mov    al,0x1
   12366:	jmp    0x12370
   12368:	call   0x11d22
   1236d:	pop    ecx
   1236e:	xor    al,al
   12370:	mov    ecx,DWORD PTR [ebp-0x4]
   12373:	pop    edi
   12374:	pop    esi
   12375:	xor    ecx,ebp
   12377:	pop    ebx
   12378:	call   0x1e145
   1237d:	leave  
   1237e:	ret    0x8
   12381:	int3   
   12382:	int3   
   12383:	int3   
   12384:	int3   
   12385:	int3   
   12386:	mov    eax,ds:0x78524
   1238b:	test   eax,eax
   1238d:	je     0x1239e
   1238f:	push   eax
   12390:	call   0x1174a
   12395:	call   eax
   12397:	and    DWORD PTR ds:0x78524,0x0
   1239e:	ret    
   1239f:	int3   
   123a0:	int3   
   123a1:	int3   
   123a2:	int3   
   123a3:	int3   
   123a4:	push   0x28
   123a6:	push   0x77748
   123ab:	call   0x1e1dc
   123b0:	xor    eax,eax
   123b2:	mov    DWORD PTR [ebp-0x28],eax
   123b5:	mov    DWORD PTR [ebp-0x2c],eax
   123b8:	mov    ebx,DWORD PTR [ebp+0x8]
   123bb:	cmp    ebx,eax
   123bd:	jne    0x123c6
   123bf:	xor    eax,eax
   123c1:	jmp    0x124a3
   123c6:	mov    DWORD PTR [ebp-0x4],eax
   123c9:	lea    ecx,[ebp-0x2c]
   123cc:	push   ecx
   123cd:	push   eax
   123ce:	push   0x1
   123d0:	push   ebx
   123d1:	call   0x114aa
   123d6:	call   eax
   123d8:	mov    edx,eax
   123da:	sub    edx,ebx
   123dc:	mov    DWORD PTR [ebp-0x38],edx
   123df:	mov    esi,DWORD PTR [eax+0x1c]
   123e2:	add    esi,ebx
   123e4:	mov    edi,DWORD PTR [eax+0x24]
   123e7:	add    edi,ebx
   123e9:	mov    ecx,DWORD PTR [eax+0x20]
   123ec:	add    ecx,ebx
   123ee:	and    DWORD PTR [ebp-0x20],0x0
   123f2:	mov    ebx,DWORD PTR [ebp-0x20]
   123f5:	cmp    ebx,DWORD PTR [eax+0x18]
   123f8:	jae    0x1248b
   123fe:	movsx  ebx,WORD PTR [edi+ebx*2]
   12402:	cmp    ebx,DWORD PTR [eax+0x14]
   12405:	jae    0x1247f
   12407:	lea    ebx,[esi+ebx*4]
   1240a:	mov    DWORD PTR [ebp-0x34],ebx
   1240d:	cmp    DWORD PTR [ebx],edx
   1240f:	jb     0x1241d
   12411:	mov    ebx,DWORD PTR [ebp-0x2c]
   12414:	add    edx,ebx
   12416:	mov    ebx,DWORD PTR [ebp-0x34]
   12419:	cmp    DWORD PTR [ebx],edx
   1241b:	jb     0x12474
   1241d:	mov    edx,DWORD PTR [ebp+0xc]
   12420:	mov    DWORD PTR [ebp-0x30],edx
   12423:	mov    edx,DWORD PTR [ebp-0x20]
   12426:	mov    edx,DWORD PTR [ecx+edx*4]
   12429:	add    edx,DWORD PTR [ebp+0x8]
   1242c:	mov    DWORD PTR [ebp-0x24],edx
   1242f:	mov    dl,BYTE PTR [edx]
   12431:	mov    ebx,DWORD PTR [ebp-0x30]
   12434:	cmp    dl,BYTE PTR [ebx]
   12436:	jne    0x12461
   12438:	test   dl,dl
   1243a:	je     0x1245d
   1243c:	mov    edx,DWORD PTR [ebp-0x24]
   1243f:	mov    dl,BYTE PTR [edx+0x1]
   12442:	mov    BYTE PTR [ebp-0x19],dl
   12445:	cmp    dl,BYTE PTR [ebx+0x1]
   12448:	jne    0x12461
   1244a:	mov    edx,DWORD PTR [ebp-0x24]
   1244d:	inc    edx
   1244e:	inc    edx
   1244f:	mov    DWORD PTR [ebp-0x24],edx
   12452:	inc    ebx
   12453:	inc    ebx
   12454:	mov    DWORD PTR [ebp-0x30],ebx
   12457:	cmp    BYTE PTR [ebp-0x19],0x0
   1245b:	jne    0x1242f
   1245d:	xor    edx,edx
   1245f:	jmp    0x12466
   12461:	sbb    edx,edx
   12463:	sbb    edx,0xffffffff
   12466:	test   edx,edx
   12468:	jne    0x12474
   1246a:	mov    eax,DWORD PTR [ebp-0x34]
   1246d:	mov    eax,DWORD PTR [eax]
   1246f:	add    eax,DWORD PTR [ebp+0x8]
   12472:	jmp    0x12499
   12474:	inc    DWORD PTR [ebp-0x20]
   12477:	mov    edx,DWORD PTR [ebp-0x38]
   1247a:	jmp    0x123f2
   1247f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12486:	jmp    0x123bf
   1248b:	mov    eax,DWORD PTR [ebp-0x28]
   1248e:	jmp    0x1249c
   12490:	xor    eax,eax
   12492:	inc    eax
   12493:	ret    
   12494:	mov    esp,DWORD PTR [ebp-0x18]
   12497:	xor    eax,eax
   12499:	mov    DWORD PTR [ebp-0x28],eax
   1249c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a3:	call   0x1e221
   124a8:	ret    0x8
   124ab:	int3   
   124ac:	int3   
   124ad:	int3   
   124ae:	int3   
   124af:	int3   
   124b0:	mov    edi,edi
   124b2:	push   ebp
   124b3:	mov    ebp,esp
   124b5:	sub    esp,0x48
   124b8:	mov    eax,DWORD PTR [ebp+0xc]
   124bb:	mov    eax,DWORD PTR [eax]
   124bd:	push   edi
   124be:	mov    DWORD PTR [ebp-0x30],eax
   124c1:	lea    eax,[ebp-0x30]
   124c4:	push   eax
   124c5:	lea    eax,[ebp-0x48]
   124c8:	push   eax
   124c9:	xor    edi,edi
   124cb:	push   0x1f0fff
   124d0:	lea    eax,[ebp-0x10]
   124d3:	push   eax
   124d4:	mov    DWORD PTR [ebp-0x48],0x18
   124db:	mov    DWORD PTR [ebp-0x44],edi
   124de:	mov    DWORD PTR [ebp-0x3c],0x200
   124e5:	mov    DWORD PTR [ebp-0x40],edi
   124e8:	mov    DWORD PTR [ebp-0x38],edi
   124eb:	mov    DWORD PTR [ebp-0x34],edi
   124ee:	mov    DWORD PTR [ebp-0x2c],edi
   124f1:	mov    DWORD PTR [ebp-0x10],edi
   124f4:	call   0x1125e
   124f9:	call   eax
   124fb:	test   eax,eax
   124fd:	jl     0x12852
   12503:	push   ebx
   12504:	push   esi
   12505:	push   0x40
   12507:	mov    esi,0x1000
   1250c:	push   esi
   1250d:	lea    eax,[ebp-0x14]
   12510:	push   eax
   12511:	push   edi
   12512:	lea    eax,[ebp-0xc]
   12515:	push   eax
   12516:	push   DWORD PTR [ebp-0x10]
   12519:	mov    ebx,0x400
   1251e:	mov    DWORD PTR [ebp-0xc],edi
   12521:	mov    DWORD PTR [ebp-0x14],ebx
   12524:	call   0x11288
   12529:	call   eax
   1252b:	test   eax,eax
   1252d:	jl     0x12538
   1252f:	mov    eax,DWORD PTR [ebp-0xc]
   12532:	mov    ecx,DWORD PTR [ebp+0xc]
   12535:	mov    DWORD PTR [ecx+0x8],eax
   12538:	push   0x4
   1253a:	push   esi
   1253b:	lea    eax,[ebp-0x14]
   1253e:	push   eax
   1253f:	push   edi
   12540:	lea    eax,[ebp-0x18]
   12543:	push   eax
   12544:	push   DWORD PTR [ebp-0x10]
   12547:	mov    DWORD PTR [ebp-0x18],edi
   1254a:	mov    DWORD PTR [ebp-0x14],ebx
   1254d:	call   0x11288
   12552:	call   eax
   12554:	test   eax,eax
   12556:	jl     0x12561
   12558:	mov    eax,DWORD PTR [ebp-0x18]
   1255b:	mov    ecx,DWORD PTR [ebp+0xc]
   1255e:	mov    DWORD PTR [ecx+0xc],eax
   12561:	lea    eax,[ebp-0x24]
   12564:	push   eax
   12565:	push   DWORD PTR [ebp-0x30]
   12568:	call   0x11a3e
   1256d:	call   eax
   1256f:	test   eax,eax
   12571:	jl     0x12850
   12577:	push   DWORD PTR [ebp-0x24]
   1257a:	call   0x1179e
   1257f:	call   eax
   12581:	mov    eax,DWORD PTR [ebp-0xc]
   12584:	mov    DWORD PTR [ebp-0x20],edi
   12587:	cmp    eax,edi
   12589:	je     0x12836
   1258f:	mov    esi,DWORD PTR [ebp-0x18]
   12592:	cmp    esi,edi
   12594:	je     0x127a3
   1259a:	push   0x214
   1259f:	push   edi
   125a0:	push   esi
   125a1:	mov    DWORD PTR [ebp-0x4],eax
   125a4:	call   0x1e19e
   125a9:	mov    eax,DWORD PTR [ebp-0x4]
   125ac:	add    esp,0xc
   125af:	push   0x60
   125b1:	lea    ebx,[esi+0xc]
   125b4:	push   eax
   125b5:	mov    DWORD PTR [ebx],edi
   125b7:	mov    DWORD PTR [esi],edi
   125b9:	mov    DWORD PTR [ebp-0x20],eax
   125bc:	call   0x19f2c
   125c1:	push   0x68
   125c3:	push   eax
   125c4:	call   0x19f2c
   125c9:	push   ebx
   125ca:	push   eax
   125cb:	call   0x19f44
   125d0:	push   0x6a
   125d2:	pop    ebx
   125d3:	push   ebx
   125d4:	push   eax
   125d5:	call   0x19f2c
   125da:	push   edi
   125db:	push   eax
   125dc:	call   0x19f2c
   125e1:	push   ebx
   125e2:	push   eax
   125e3:	call   0x19f2c
   125e8:	push   edi
   125e9:	push   eax
   125ea:	call   0x19f2c
   125ef:	push   0x68
   125f1:	push   eax
   125f2:	call   0x19f2c
   125f7:	push   edi
   125f8:	push   eax
   125f9:	mov    DWORD PTR [ebp-0x28],eax
   125fc:	call   0x19f44
   12601:	push   ebx
   12602:	push   eax
   12603:	call   0x19f2c
   12608:	push   edi
   12609:	push   eax
   1260a:	call   0x19f2c
   1260f:	push   ebx
   12610:	push   eax
   12611:	call   0x19f2c
   12616:	push   edi
   12617:	push   eax
   12618:	call   0x19f2c
   1261d:	push   0xb8
   12622:	push   eax
   12623:	call   0x19f2c
   12628:	push   DWORD PTR ds:0x78570
   1262e:	push   eax
   1262f:	call   0x19f44
   12634:	mov    ebx,0xc00b
   12639:	push   ebx
   1263a:	push   eax
   1263b:	call   0x19f5e
   12640:	push   0x74
   12642:	push   eax
   12643:	call   0x19f2c
   12648:	push   0x9
   1264a:	push   eax
   1264b:	call   0x19f2c
   12650:	mov    edi,0xd0ff
   12655:	push   edi
   12656:	push   eax
   12657:	call   0x19f5e
   1265c:	push   0xb9
   12661:	push   eax
   12662:	call   0x19f2c
   12667:	lea    ecx,[esi+0x10]
   1266a:	push   ecx
   1266b:	push   eax
   1266c:	call   0x19f44
   12671:	push   0x189
   12676:	push   eax
   12677:	call   0x19f5e
   1267c:	push   0x61
   1267e:	push   eax
   1267f:	call   0x19f2c
   12684:	and    DWORD PTR [ebp-0x8],0x0
   12688:	mov    DWORD PTR [ebp-0x4],eax
   1268b:	mov    eax,DWORD PTR [ebp+0x8]
   1268e:	mov    DWORD PTR [ebp-0x1c],eax
   12691:	push   0x0
   12693:	push   DWORD PTR [ebp-0x1c]
   12696:	push   DWORD PTR [ebp-0x4]
   12699:	call   0x1a6e0
   1269e:	mov    ecx,eax
   126a0:	sub    ecx,DWORD PTR [ebp-0x1c]
   126a3:	mov    DWORD PTR [ebp-0x1c],eax
   126a6:	add    DWORD PTR [ebp-0x8],ecx
   126a9:	add    DWORD PTR [ebp-0x4],ecx
   126ac:	cmp    DWORD PTR [ebp-0x8],0x5
   126b0:	jb     0x12691
   126b2:	mov    ecx,DWORD PTR [ebp+0x8]
   126b5:	push   DWORD PTR [ebp-0x4]
   126b8:	mov    eax,DWORD PTR [ebp-0x8]
   126bb:	add    eax,ecx
   126bd:	push   eax
   126be:	call   0x19fa2
   126c3:	push   eax
   126c4:	push   DWORD PTR [ebp-0x28]
   126c7:	mov    DWORD PTR [ebp-0x4],eax
   126ca:	call   0x19f44
   126cf:	mov    eax,DWORD PTR [ebp-0x4]
   126d2:	push   0xeb
   126d7:	push   eax
   126d8:	mov    DWORD PTR [esi],eax
   126da:	call   0x19f2c
   126df:	push   0x0
   126e1:	push   eax
   126e2:	mov    DWORD PTR [esi+0x4],eax
   126e5:	call   0x19f2c
   126ea:	push   0x68
   126ec:	push   eax
   126ed:	call   0x19f2c
   126f2:	push   0x3e8
   126f7:	push   eax
   126f8:	call   0x19f44
   126fd:	push   0xb8
   12702:	push   eax
   12703:	call   0x19f2c
   12708:	push   DWORD PTR ds:0x78574
   1270e:	push   eax
   1270f:	call   0x19f44
   12714:	push   ebx
   12715:	push   eax
   12716:	call   0x19f5e
   1271b:	push   0x74
   1271d:	push   eax
   1271e:	call   0x19f2c
   12723:	push   0x2
   12725:	push   eax
   12726:	call   0x19f2c
   1272b:	push   edi
   1272c:	push   eax
   1272d:	call   0x19f5e
   12732:	push   eax
   12733:	push   DWORD PTR [esi]
   12735:	call   0x19fa2
   1273a:	mov    cl,al
   1273c:	sub    cl,BYTE PTR [esi+0x4]
   1273f:	push   0x68
   12741:	dec    cl
   12743:	push   eax
   12744:	mov    BYTE PTR [esi+0x8],cl
   12747:	call   0x19f2c
   1274c:	add    esi,0x14
   1274f:	push   esi
   12750:	push   eax
   12751:	call   0x19f44
   12756:	push   0xb8
   1275b:	push   eax
   1275c:	call   0x19f2c
   12761:	push   DWORD PTR ds:0x78568
   12767:	push   eax
   12768:	call   0x19f44
   1276d:	push   ebx
   1276e:	push   eax
   1276f:	call   0x19f5e
   12774:	push   0x74
   12776:	push   eax
   12777:	call   0x19f2c
   1277c:	push   0x2
   1277e:	push   eax
   1277f:	call   0x19f2c
   12784:	push   edi
   12785:	push   eax
   12786:	call   0x19f5e
   1278b:	push   0xc2
   12790:	push   eax
   12791:	call   0x19f2c
   12796:	push   0x4
   12798:	push   eax
   12799:	call   0x19f5e
   1279e:	mov    eax,DWORD PTR [ebp-0xc]
   127a1:	xor    edi,edi
   127a3:	cmp    eax,edi
   127a5:	je     0x12836
   127ab:	add    eax,0x400
   127b0:	lea    esi,[eax-0xc]
   127b3:	lea    ecx,[eax-0x8]
   127b6:	push   esi
   127b7:	lea    ebx,[eax-0x4]
   127ba:	lea    edx,[eax-0x10]
   127bd:	push   0x40
   127bf:	add    eax,0xffffffe8
   127c2:	push   ecx
   127c3:	mov    DWORD PTR [ebp-0x1c],eax
   127c6:	mov    eax,DWORD PTR [ebp+0x8]
   127c9:	mov    DWORD PTR [ebx],eax
   127cb:	push   ebx
   127cc:	mov    DWORD PTR [ecx],0x5
   127d2:	push   0xffffffff
   127d4:	mov    DWORD PTR [ebp-0x8],ecx
   127d7:	mov    DWORD PTR [ebp-0x28],edx
   127da:	mov    DWORD PTR [esi],edi
   127dc:	call   DWORD PTR ds:0x784e4
   127e2:	test   eax,eax
   127e4:	jl     0x12836
   127e6:	mov    eax,DWORD PTR [ebp-0x20]
   127e9:	sub    eax,DWORD PTR [ebp+0x8]
   127ec:	sub    eax,0x5
   127ef:	push   eax
   127f0:	mov    eax,DWORD PTR [ebp-0x1c]
   127f3:	inc    eax
   127f4:	push   eax
   127f5:	call   0x19f44
   127fa:	push   0xe9
   127ff:	push   DWORD PTR [ebp-0x1c]
   12802:	call   0x19f2c
   12807:	mov    eax,DWORD PTR [ebp-0x28]
   1280a:	push   eax
   1280b:	push   0x5
   1280d:	push   DWORD PTR [ebp-0x1c]
   12810:	mov    DWORD PTR [eax],edi
   12812:	push   DWORD PTR [ebp+0x8]
   12815:	push   0xffffffff
   12817:	call   DWORD PTR ds:0x784d8
   1281d:	mov    eax,DWORD PTR [ebp+0xc]
   12820:	mov    BYTE PTR [eax+0x10],0x1
   12824:	lea    eax,[ebp-0x20]
   12827:	push   eax
   12828:	push   DWORD PTR [esi]
   1282a:	push   DWORD PTR [ebp-0x8]
   1282d:	push   ebx
   1282e:	push   0xffffffff
   12830:	call   DWORD PTR ds:0x784e4
   12836:	call   0x11774
   1283b:	call   eax
   1283d:	mov    ecx,DWORD PTR [ebp-0x24]
   12840:	call   DWORD PTR ds:0x1f850
   12846:	push   DWORD PTR [ebp-0x10]
   12849:	call   0x11552
   1284e:	call   eax
   12850:	pop    esi
   12851:	pop    ebx
   12852:	pop    edi
   12853:	leave  
   12854:	ret    0x8
   12857:	int3   
   12858:	int3   
   12859:	int3   
   1285a:	int3   
   1285b:	int3   
   1285c:	mov    edi,edi
   1285e:	push   ebp
   1285f:	mov    ebp,esp
   12861:	sub    esp,0x18
   12864:	and    DWORD PTR [ebp-0x18],0x0
   12868:	push   edi
   12869:	xor    eax,eax
   1286b:	lea    edi,[ebp-0x14]
   1286e:	stos   DWORD PTR es:[edi],eax
   1286f:	stos   DWORD PTR es:[edi],eax
   12870:	stos   DWORD PTR es:[edi],eax
   12871:	stos   DWORD PTR es:[edi],eax
   12872:	lea    eax,[ebp-0x18]
   12875:	push   eax
   12876:	push   0x1
   12878:	call   0x11ed8
   1287d:	pop    edi
   1287e:	test   al,al
   12880:	je     0x128d7
   12882:	cmp    DWORD PTR [ebp-0x18],0x0
   12886:	je     0x128d7
   12888:	lea    eax,[ebp-0x4]
   1288b:	push   eax
   1288c:	push   DWORD PTR [ebp-0x18]
   1288f:	call   0x11a3e
   12894:	call   eax
   12896:	test   eax,eax
   12898:	jl     0x128d7
   1289a:	push   esi
   1289b:	push   DWORD PTR [ebp-0x4]
   1289e:	call   0x1179e
   128a3:	call   eax
   128a5:	mov    esi,DWORD PTR [ebp-0xc]
   128a8:	mov    eax,DWORD PTR [ebp+0x8]
   128ab:	lea    edx,[esi+0x14]
   128ae:	sub    edx,eax
   128b0:	movzx  ecx,WORD PTR [eax]
   128b3:	mov    WORD PTR [edx+eax*1],cx
   128b7:	inc    eax
   128b8:	inc    eax
   128b9:	test   cx,cx
   128bc:	jne    0x128b0
   128be:	mov    eax,DWORD PTR [esi+0x4]
   128c1:	mov    cl,BYTE PTR [esi+0x8]
   128c4:	mov    BYTE PTR [eax],cl
   128c6:	call   0x11774
   128cb:	call   eax
   128cd:	mov    ecx,DWORD PTR [ebp-0x4]
   128d0:	call   DWORD PTR ds:0x1f850
   128d6:	pop    esi
   128d7:	leave  
   128d8:	ret    0x4
   128db:	int3   
   128dc:	int3   
   128dd:	int3   
   128de:	int3   
   128df:	int3   
   128e0:	mov    edi,edi
   128e2:	push   ebp
   128e3:	mov    ebp,esp
   128e5:	push   ecx
   128e6:	and    DWORD PTR [ebp-0x4],0x0
   128ea:	push   ebx
   128eb:	push   esi
   128ec:	push   edi
   128ed:	mov    esi,0x1000
   128f2:	push   0x20736649
   128f7:	push   esi
   128f8:	push   0x0
   128fa:	call   0x1164e
   128ff:	call   eax
   12901:	mov    edi,eax
   12903:	test   edi,edi
   12905:	je     0x1293a
   12907:	lea    eax,[ebp-0x4]
   1290a:	push   eax
   1290b:	push   esi
   1290c:	push   edi
   1290d:	push   DWORD PTR [ebp+0x8]
   12910:	call   0x11384
   12915:	call   eax
   12917:	mov    ebx,eax
   12919:	cmp    ebx,0xc0000004
   1291f:	jne    0x1292d
   12921:	push   0x0
   12923:	push   edi
   12924:	call   0x115fa
   12929:	call   eax
   1292b:	add    esi,esi
   1292d:	test   ebx,ebx
   1292f:	jne    0x128f2
   12931:	mov    eax,edi
   12933:	pop    edi
   12934:	pop    esi
   12935:	pop    ebx
   12936:	leave  
   12937:	ret    0x4
   1293a:	xor    eax,eax
   1293c:	jmp    0x12933
   1293e:	int3   
   1293f:	int3   
   12940:	int3   
   12941:	int3   
   12942:	int3   
   12943:	int3   
   12944:	push   0x0
   12946:	push   0x784f4
   1294b:	call   0x119c0
   12950:	call   eax
   12952:	push   0x100
   12957:	push   0x0
   12959:	push   0x77bb8
   1295e:	call   0x1e19e
   12963:	add    esp,0xc
   12966:	ret    
   12967:	int3   
   12968:	int3   
   12969:	int3   
   1296a:	int3   
   1296b:	int3   
   1296c:	mov    edi,edi
   1296e:	push   ebp
   1296f:	mov    ebp,esp
   12971:	push   ebx
   12972:	mov    ebx,DWORD PTR [ebp+0x8]
   12975:	cmp    ebx,0x40
   12978:	ja     0x129a7
   1297a:	push   esi
   1297b:	push   edi
   1297c:	xor    edi,edi
   1297e:	push   edi
   1297f:	push   edi
   12980:	push   edi
   12981:	push   edi
   12982:	mov    esi,0x784f4
   12987:	push   esi
   12988:	call   0x119ea
   1298d:	call   eax
   1298f:	test   eax,eax
   12991:	jl     0x129a5
   12993:	push   edi
   12994:	lea    eax,[ebx*4+0x77bb8]
   1299b:	inc    DWORD PTR [eax]
   1299d:	push   esi
   1299e:	call   0x11a14
   129a3:	call   eax
   129a5:	pop    edi
   129a6:	pop    esi
   129a7:	pop    ebx
   129a8:	pop    ebp
   129a9:	ret    0x4
   129ac:	int3   
   129ad:	int3   
   129ae:	int3   
   129af:	int3   
   129b0:	int3   
   129b1:	int3   
   129b2:	mov    edi,edi
   129b4:	push   ebp
   129b5:	mov    ebp,esp
   129b7:	push   ebx
   129b8:	push   esi
   129b9:	push   edi
   129ba:	mov    edi,DWORD PTR [ebp+0x8]
   129bd:	cmp    edi,0x40
   129c0:	ja     0x129ed
   129c2:	xor    ebx,ebx
   129c4:	push   ebx
   129c5:	push   ebx
   129c6:	push   ebx
   129c7:	push   ebx
   129c8:	mov    esi,0x784f4
   129cd:	push   esi
   129ce:	call   0x119ea
   129d3:	call   eax
   129d5:	test   eax,eax
   129d7:	jl     0x129ed
   129d9:	mov    edi,DWORD PTR [edi*4+0x77bb8]
   129e0:	push   ebx
   129e1:	push   esi
   129e2:	call   0x11a14
   129e7:	call   eax
   129e9:	mov    eax,edi
   129eb:	jmp    0x129ef
   129ed:	xor    eax,eax
   129ef:	pop    edi
   129f0:	pop    esi
   129f1:	pop    ebx
   129f2:	pop    ebp
   129f3:	ret    0x4
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	mov    edi,edi
   129fe:	push   ebp
   129ff:	mov    ebp,esp
   12a01:	push   esi
   12a02:	mov    esi,DWORD PTR [ebp+0x8]
   12a05:	push   edi
   12a06:	push   DWORD PTR [esi]
   12a08:	call   0x11cec
   12a0d:	push   DWORD PTR [esi]
   12a0f:	mov    edi,eax
   12a11:	push   esi
   12a12:	push   edi
   12a13:	call   0x1e1b6
   12a18:	add    esp,0x10
   12a1b:	mov    eax,edi
   12a1d:	pop    edi
   12a1e:	pop    esi
   12a1f:	pop    ebp
   12a20:	ret    0x4
   12a23:	int3   
   12a24:	int3   
   12a25:	int3   
   12a26:	int3   
   12a27:	int3   
   12a28:	mov    edi,edi
   12a2a:	push   ebp
   12a2b:	mov    ebp,esp
   12a2d:	push   ebx
   12a2e:	push   esi
   12a2f:	push   edi
   12a30:	mov    edi,DWORD PTR [ebp+0x8]
   12a33:	mov    eax,DWORD PTR [edi+0x4]
   12a36:	mov    esi,ecx
   12a38:	mov    ebx,DWORD PTR [esi]
   12a3a:	mov    DWORD PTR [esi+0x4],eax
   12a3d:	inc    eax
   12a3e:	push   eax
   12a3f:	call   0x11cec
   12a44:	push   DWORD PTR [esi+0x4]
   12a47:	mov    DWORD PTR [esi],eax
   12a49:	push   DWORD PTR [edi]
   12a4b:	push   eax
   12a4c:	call   0x1e1b6
   12a51:	mov    eax,DWORD PTR [esi+0x4]
   12a54:	mov    ecx,DWORD PTR [esi]
   12a56:	push   ebx
   12a57:	mov    BYTE PTR [eax+ecx*1],0x0
   12a5b:	call   0x11d22
   12a60:	add    esp,0x14
   12a63:	pop    edi
   12a64:	mov    eax,esi
   12a66:	pop    esi
   12a67:	pop    ebx
   12a68:	pop    ebp
   12a69:	ret    0x4
   12a6c:	int3   
   12a6d:	int3   
   12a6e:	int3   
   12a6f:	int3   
   12a70:	int3   
   12a71:	int3   
   12a72:	mov    edi,edi
   12a74:	push   ebp
   12a75:	mov    ebp,esp
   12a77:	push   esi
   12a78:	mov    esi,DWORD PTR [ebp+0x8]
   12a7b:	push   edi
   12a7c:	mov    edi,ecx
   12a7e:	cmp    edi,esi
   12a80:	je     0x12aad
   12a82:	mov    eax,DWORD PTR [edi+0x4]
   12a85:	cmp    eax,DWORD PTR [esi+0x4]
   12a88:	je     0x12a9c
   12a8a:	cmp    BYTE PTR [edi],0x0
   12a8d:	je     0x12a96
   12a8f:	push   eax
   12a90:	call   0x11d22
   12a95:	pop    ecx
   12a96:	mov    al,BYTE PTR [esi]
   12a98:	mov    BYTE PTR [edi],al
   12a9a:	jmp    0x12aa4
   12a9c:	cmp    BYTE PTR [esi],0x0
   12a9f:	je     0x12aa4
   12aa1:	mov    BYTE PTR [edi],0x1
   12aa4:	mov    eax,DWORD PTR [esi+0x4]
   12aa7:	mov    BYTE PTR [esi],0x0
   12aaa:	mov    DWORD PTR [edi+0x4],eax
   12aad:	mov    eax,edi
   12aaf:	pop    edi
   12ab0:	pop    esi
   12ab1:	pop    ebp
   12ab2:	ret    0x4
   12ab5:	int3   
   12ab6:	int3   
   12ab7:	int3   
   12ab8:	int3   
   12ab9:	int3   
   12aba:	mov    edi,edi
   12abc:	push   esi
   12abd:	push   edi
   12abe:	push   0x20736649
   12ac3:	push   0x20
   12ac5:	push   0x0
   12ac7:	mov    esi,ecx
   12ac9:	call   0x1164e
   12ace:	call   eax
   12ad0:	push   0x0
   12ad2:	mov    edi,eax
   12ad4:	push   0x1
   12ad6:	mov    ecx,esi
   12ad8:	mov    DWORD PTR [esi],edi
   12ada:	call   0x10da2
   12adf:	mov    DWORD PTR [esi+0x8],eax
   12ae2:	mov    DWORD PTR [esi+0xc],edx
   12ae5:	test   edi,edi
   12ae7:	jne    0x12af5
   12ae9:	push   0xc000009a
   12aee:	call   0x115a6
   12af3:	call   eax
   12af5:	pop    edi
   12af6:	mov    eax,esi
   12af8:	pop    esi
   12af9:	ret    
   12afa:	int3   
   12afb:	int3   
   12afc:	int3   
   12afd:	int3   
   12afe:	int3   
   12aff:	int3   
   12b00:	mov    edi,edi
   12b02:	push   ebp
   12b03:	mov    ebp,esp
   12b05:	push   esi
   12b06:	push   edi
   12b07:	mov    edi,DWORD PTR [ebp+0x8]
   12b0a:	push   edi
   12b0b:	mov    esi,ecx
   12b0d:	call   0x12a28
   12b12:	lea    eax,[edi+0x8]
   12b15:	push   eax
   12b16:	lea    ecx,[esi+0x8]
   12b19:	call   0x12a28
   12b1e:	lea    eax,[edi+0x10]
   12b21:	push   eax
   12b22:	lea    ecx,[esi+0x10]
   12b25:	call   0x12a28
   12b2a:	lea    eax,[edi+0x18]
   12b2d:	push   eax
   12b2e:	lea    ecx,[esi+0x18]
   12b31:	call   0x12a28
   12b36:	mov    eax,DWORD PTR [edi+0x20]
   12b39:	mov    DWORD PTR [esi+0x20],eax
   12b3c:	mov    eax,DWORD PTR [edi+0x28]
   12b3f:	mov    DWORD PTR [esi+0x28],eax
   12b42:	mov    eax,DWORD PTR [edi+0x2c]
   12b45:	mov    DWORD PTR [esi+0x2c],eax
   12b48:	mov    eax,DWORD PTR [edi+0x30]
   12b4b:	mov    DWORD PTR [esi+0x30],eax
   12b4e:	mov    eax,DWORD PTR [edi+0x34]
   12b51:	add    edi,0x38
   12b54:	push   edi
   12b55:	lea    ecx,[esi+0x38]
   12b58:	mov    DWORD PTR [esi+0x34],eax
   12b5b:	call   0x12a28
   12b60:	pop    edi
   12b61:	mov    eax,esi
   12b63:	pop    esi
   12b64:	pop    ebp
   12b65:	ret    0x4
   12b68:	int3   
   12b69:	int3   
   12b6a:	int3   
   12b6b:	int3   
   12b6c:	int3   
   12b6d:	int3   
   12b6e:	mov    edi,edi
   12b70:	push   ebp
   12b71:	mov    ebp,esp
   12b73:	push   esi
   12b74:	mov    esi,DWORD PTR [ebp+0xc]
   12b77:	push   edi
   12b78:	mov    edi,ecx
   12b7a:	cmp    esi,0xffffffff
   12b7d:	jne    0x12b8e
   12b7f:	mov    esi,DWORD PTR [ebp+0x8]
   12b82:	lea    ecx,[esi+0x1]
   12b85:	mov    al,BYTE PTR [esi]
   12b87:	inc    esi
   12b88:	test   al,al
   12b8a:	jne    0x12b85
   12b8c:	sub    esi,ecx
   12b8e:	lea    eax,[esi+0x1]
   12b91:	push   eax
   12b92:	call   0x11cec
   12b97:	pop    ecx
   12b98:	mov    DWORD PTR [edi],eax
   12b9a:	test   eax,eax
   12b9c:	jne    0x12ba9
   12b9e:	push   0xc000009a
   12ba3:	call   DWORD PTR ds:0x1f820
   12ba9:	mov    eax,DWORD PTR [edi]
   12bab:	push   esi
   12bac:	push   DWORD PTR [ebp+0x8]
   12baf:	mov    BYTE PTR [esi+eax*1],0x0
   12bb3:	push   DWORD PTR [edi]
   12bb5:	call   0x1e1b6
   12bba:	add    esp,0xc
   12bbd:	mov    DWORD PTR [edi+0x4],esi
   12bc0:	pop    edi
   12bc1:	pop    esi
   12bc2:	pop    ebp
   12bc3:	ret    0x8
   12bc6:	int3   
   12bc7:	int3   
   12bc8:	int3   
   12bc9:	int3   
   12bca:	int3   
   12bcb:	int3   
   12bcc:	mov    edi,edi
   12bce:	push   ebp
   12bcf:	mov    ebp,esp
   12bd1:	push   ebx
   12bd2:	push   esi
   12bd3:	push   edi
   12bd4:	mov    edi,DWORD PTR [ebp+0x8]
   12bd7:	mov    eax,DWORD PTR [edi+0x4]
   12bda:	mov    esi,ecx
   12bdc:	mov    ebx,DWORD PTR [esi]
   12bde:	mov    DWORD PTR [esi+0x4],eax
   12be1:	xor    ecx,ecx
   12be3:	push   0x2
   12be5:	inc    eax
   12be6:	pop    edx
   12be7:	mul    edx
   12be9:	seto   cl
   12bec:	neg    ecx
   12bee:	or     ecx,eax
   12bf0:	push   ecx
   12bf1:	call   0x11cec
   12bf6:	mov    ecx,DWORD PTR [esi+0x4]
   12bf9:	add    ecx,ecx
   12bfb:	push   ecx
   12bfc:	mov    DWORD PTR [esi],eax
   12bfe:	push   DWORD PTR [edi]
   12c00:	push   eax
   12c01:	call   0x1e1b6
   12c06:	mov    eax,DWORD PTR [esi+0x4]
   12c09:	mov    ecx,DWORD PTR [esi]
   12c0b:	xor    edx,edx
   12c0d:	push   ebx
   12c0e:	mov    WORD PTR [ecx+eax*2],dx
   12c12:	call   0x11d22
   12c17:	add    esp,0x14
   12c1a:	pop    edi
   12c1b:	mov    eax,esi
   12c1d:	pop    esi
   12c1e:	pop    ebx
   12c1f:	pop    ebp
   12c20:	ret    0x4
   12c23:	int3   
   12c24:	int3   
   12c25:	int3   
   12c26:	int3   
   12c27:	int3   
   12c28:	mov    edi,edi
   12c2a:	push   esi
   12c2b:	mov    esi,ecx
   12c2d:	push   DWORD PTR [esi+0x8]
   12c30:	call   0x11d22
   12c35:	push   DWORD PTR [esi]
   12c37:	call   0x11d22
   12c3c:	pop    ecx
   12c3d:	pop    ecx
   12c3e:	pop    esi
   12c3f:	ret    
   12c40:	int3   
   12c41:	int3   
   12c42:	int3   
   12c43:	int3   
   12c44:	int3   
   12c45:	int3   
   12c46:	mov    edi,edi
   12c48:	push   ebp
   12c49:	mov    ebp,esp
   12c4b:	push   esi
   12c4c:	push   edi
   12c4d:	mov    edi,DWORD PTR [ebp+0xc]
   12c50:	mov    esi,ecx
   12c52:	cmp    edi,0xffffffff
   12c55:	jne    0x12c61
   12c57:	push   DWORD PTR [ebp+0x8]
   12c5a:	call   0x10960
   12c5f:	mov    edi,eax
   12c61:	xor    ecx,ecx
   12c63:	push   0x2
   12c65:	pop    edx
   12c66:	lea    eax,[edi+0x1]
   12c69:	mul    edx
   12c6b:	seto   cl
   12c6e:	neg    ecx
   12c70:	or     ecx,eax
   12c72:	push   ecx
   12c73:	call   0x11cec
   12c78:	pop    ecx
   12c79:	mov    DWORD PTR [esi],eax
   12c7b:	test   eax,eax
   12c7d:	jne    0x12c8a
   12c7f:	push   0xc000009a
   12c84:	call   DWORD PTR ds:0x1f820
   12c8a:	mov    ecx,DWORD PTR [esi]
   12c8c:	lea    eax,[edi+edi*1]
   12c8f:	push   eax
   12c90:	push   DWORD PTR [ebp+0x8]
   12c93:	xor    edx,edx
   12c95:	mov    WORD PTR [eax+ecx*1],dx
   12c99:	push   DWORD PTR [esi]
   12c9b:	call   0x1e1b6
   12ca0:	add    esp,0xc
   12ca3:	mov    DWORD PTR [esi+0x4],edi
   12ca6:	pop    edi
   12ca7:	pop    esi
   12ca8:	pop    ebp
   12ca9:	ret    0x8
   12cac:	int3   
   12cad:	int3   
   12cae:	int3   
   12caf:	int3   
   12cb0:	int3   
   12cb1:	int3   
   12cb2:	mov    edi,edi
   12cb4:	push   ebp
   12cb5:	mov    ebp,esp
   12cb7:	mov    eax,DWORD PTR [ebp+0x8]
   12cba:	mov    edx,DWORD PTR ds:0x786bc
   12cc0:	jmp    0x12cc4
   12cc2:	mov    eax,ecx
   12cc4:	mov    ecx,DWORD PTR [eax]
   12cc6:	cmp    ecx,edx
   12cc8:	jne    0x12cc2
   12cca:	pop    ebp
   12ccb:	ret    0x4
   12cce:	int3   
   12ccf:	int3   
   12cd0:	int3   
   12cd1:	int3   
   12cd2:	int3   
   12cd3:	int3   
   12cd4:	mov    edi,edi
   12cd6:	push   ebp
   12cd7:	mov    ebp,esp
   12cd9:	mov    eax,DWORD PTR [ecx+0x4]
   12cdc:	mov    ecx,DWORD PTR [eax+0x4]
   12cdf:	mov    edx,DWORD PTR ds:0x786b0
   12ce5:	cmp    ecx,edx
   12ce7:	je     0x12d02
   12ce9:	push   esi
   12cea:	mov    esi,DWORD PTR [ebp+0x8]
   12ced:	mov    esi,DWORD PTR [esi]
   12cef:	cmp    DWORD PTR [ecx+0xc],esi
   12cf2:	jae    0x12cf9
   12cf4:	mov    ecx,DWORD PTR [ecx+0x8]
   12cf7:	jmp    0x12cfd
   12cf9:	mov    eax,ecx
   12cfb:	mov    ecx,DWORD PTR [ecx]
   12cfd:	cmp    ecx,edx
   12cff:	jne    0x12cef
   12d01:	pop    esi
   12d02:	pop    ebp
   12d03:	ret    0x4
   12d06:	int3   
   12d07:	int3   
   12d08:	int3   
   12d09:	int3   
   12d0a:	int3   
   12d0b:	int3   
   12d0c:	mov    edi,edi
   12d0e:	push   ebp
   12d0f:	mov    ebp,esp
   12d11:	mov    edx,DWORD PTR [ebp+0x8]
   12d14:	mov    eax,DWORD PTR [edx+0x8]
   12d17:	push   esi
   12d18:	mov    esi,DWORD PTR [eax]
   12d1a:	mov    DWORD PTR [edx+0x8],esi
   12d1d:	mov    esi,DWORD PTR [eax]
   12d1f:	cmp    esi,DWORD PTR ds:0x786b0
   12d25:	je     0x12d2a
   12d27:	mov    DWORD PTR [esi+0x4],edx
   12d2a:	mov    esi,DWORD PTR [edx+0x4]
   12d2d:	mov    DWORD PTR [eax+0x4],esi
   12d30:	mov    ecx,DWORD PTR [ecx+0x4]
   12d33:	pop    esi
   12d34:	cmp    edx,DWORD PTR [ecx+0x4]
   12d37:	jne    0x12d3e
   12d39:	mov    DWORD PTR [ecx+0x4],eax
   12d3c:	jmp    0x12d4c
   12d3e:	mov    ecx,DWORD PTR [edx+0x4]
   12d41:	cmp    edx,DWORD PTR [ecx]
   12d43:	jne    0x12d49
   12d45:	mov    DWORD PTR [ecx],eax
   12d47:	jmp    0x12d4c
   12d49:	mov    DWORD PTR [ecx+0x8],eax
   12d4c:	mov    DWORD PTR [eax],edx
   12d4e:	mov    DWORD PTR [edx+0x4],eax
   12d51:	pop    ebp
   12d52:	ret    0x4
   12d55:	int3   
   12d56:	int3   
   12d57:	int3   
   12d58:	int3   
   12d59:	int3   
   12d5a:	mov    edi,edi
   12d5c:	push   ebp
   12d5d:	mov    ebp,esp
   12d5f:	mov    edx,DWORD PTR [ebp+0x8]
   12d62:	mov    eax,DWORD PTR [edx]
   12d64:	push   esi
   12d65:	mov    esi,DWORD PTR [eax+0x8]
   12d68:	mov    DWORD PTR [edx],esi
   12d6a:	mov    esi,DWORD PTR [eax+0x8]
   12d6d:	cmp    esi,DWORD PTR ds:0x786b0
   12d73:	je     0x12d78
   12d75:	mov    DWORD PTR [esi+0x4],edx
   12d78:	mov    esi,DWORD PTR [edx+0x4]
   12d7b:	mov    DWORD PTR [eax+0x4],esi
   12d7e:	mov    ecx,DWORD PTR [ecx+0x4]
   12d81:	pop    esi
   12d82:	cmp    edx,DWORD PTR [ecx+0x4]
   12d85:	jne    0x12d8c
   12d87:	mov    DWORD PTR [ecx+0x4],eax
   12d8a:	jmp    0x12d9b
   12d8c:	mov    ecx,DWORD PTR [edx+0x4]
   12d8f:	cmp    edx,DWORD PTR [ecx+0x8]
   12d92:	jne    0x12d99
   12d94:	mov    DWORD PTR [ecx+0x8],eax
   12d97:	jmp    0x12d9b
   12d99:	mov    DWORD PTR [ecx],eax
   12d9b:	mov    DWORD PTR [eax+0x8],edx
   12d9e:	mov    DWORD PTR [edx+0x4],eax
   12da1:	pop    ebp
   12da2:	ret    0x4
   12da5:	int3   
   12da6:	int3   
   12da7:	int3   
   12da8:	int3   
   12da9:	int3   
   12daa:	mov    edi,edi
   12dac:	push   ebp
   12dad:	mov    ebp,esp
   12daf:	mov    eax,DWORD PTR [ecx+0x4]
   12db2:	push   esi
   12db3:	mov    esi,DWORD PTR [eax+0x4]
   12db6:	push   edi
   12db7:	mov    edi,eax
   12db9:	jmp    0x12dd4
   12dbb:	push   DWORD PTR [ebp+0x8]
   12dbe:	lea    eax,[esi+0x10]
   12dc1:	push   eax
   12dc2:	call   0x19eec
   12dc7:	test   al,al
   12dc9:	je     0x12dd0
   12dcb:	mov    esi,DWORD PTR [esi+0x8]
   12dce:	jmp    0x12dd4
   12dd0:	mov    edi,esi
   12dd2:	mov    esi,DWORD PTR [esi]
   12dd4:	cmp    esi,DWORD PTR ds:0x786bc
   12dda:	jne    0x12dbb
   12ddc:	mov    eax,edi
   12dde:	pop    edi
   12ddf:	pop    esi
   12de0:	pop    ebp
   12de1:	ret    0x4
   12de4:	int3   
   12de5:	int3   
   12de6:	int3   
   12de7:	int3   
   12de8:	int3   
   12de9:	int3   
   12dea:	mov    edi,edi
   12dec:	push   ebp
   12ded:	mov    ebp,esp
   12def:	mov    eax,DWORD PTR [ecx+0x4]
   12df2:	push   esi
   12df3:	mov    esi,DWORD PTR [eax+0x4]
   12df6:	push   edi
   12df7:	mov    edi,eax
   12df9:	jmp    0x12e14
   12dfb:	push   DWORD PTR [ebp+0x8]
   12dfe:	lea    eax,[esi+0xc]
   12e01:	push   eax
   12e02:	call   0x19eec
   12e07:	test   al,al
   12e09:	je     0x12e10
   12e0b:	mov    esi,DWORD PTR [esi+0x8]
   12e0e:	jmp    0x12e14
   12e10:	mov    edi,esi
   12e12:	mov    esi,DWORD PTR [esi]
   12e14:	cmp    esi,DWORD PTR ds:0x786c0
   12e1a:	jne    0x12dfb
   12e1c:	mov    eax,edi
   12e1e:	pop    edi
   12e1f:	pop    esi
   12e20:	pop    ebp
   12e21:	ret    0x4
   12e24:	int3   
   12e25:	int3   
   12e26:	int3   
   12e27:	int3   
   12e28:	int3   
   12e29:	int3   
   12e2a:	mov    edi,edi
   12e2c:	push   ebp
   12e2d:	mov    ebp,esp
   12e2f:	mov    eax,DWORD PTR [ecx+0x4]
   12e32:	mov    ecx,DWORD PTR [eax+0x4]
   12e35:	mov    edx,DWORD PTR ds:0x786c4
   12e3b:	cmp    ecx,edx
   12e3d:	je     0x12e58
   12e3f:	push   esi
   12e40:	mov    esi,DWORD PTR [ebp+0x8]
   12e43:	mov    esi,DWORD PTR [esi]
   12e45:	cmp    DWORD PTR [ecx+0xc],esi
   12e48:	jge    0x12e4f
   12e4a:	mov    ecx,DWORD PTR [ecx+0x8]
   12e4d:	jmp    0x12e53
   12e4f:	mov    eax,ecx
   12e51:	mov    ecx,DWORD PTR [ecx]
   12e53:	cmp    ecx,edx
   12e55:	jne    0x12e45
   12e57:	pop    esi
   12e58:	pop    ebp
   12e59:	ret    0x4
   12e5c:	int3   
   12e5d:	int3   
   12e5e:	int3   
   12e5f:	int3   
   12e60:	int3   
   12e61:	int3   
   12e62:	mov    edi,edi
   12e64:	push   esi
   12e65:	mov    esi,ecx
   12e67:	mov    ecx,DWORD PTR [esi]
   12e69:	mov    eax,DWORD PTR [ecx+0x8]
   12e6c:	cmp    eax,DWORD PTR ds:0x786b8
   12e72:	je     0x12e80
   12e74:	push   eax
   12e75:	call   0x10e92
   12e7a:	jmp    0x12e8f
   12e7c:	mov    DWORD PTR [esi],eax
   12e7e:	mov    ecx,eax
   12e80:	mov    eax,DWORD PTR [ecx+0x4]
   12e83:	cmp    ecx,DWORD PTR [eax+0x8]
   12e86:	je     0x12e7c
   12e88:	mov    ecx,DWORD PTR [esi]
   12e8a:	cmp    DWORD PTR [ecx+0x8],eax
   12e8d:	je     0x12e91
   12e8f:	mov    DWORD PTR [esi],eax
   12e91:	pop    esi
   12e92:	ret    
   12e93:	int3   
   12e94:	int3   
   12e95:	int3   
   12e96:	int3   
   12e97:	int3   
   12e98:	mov    edi,edi
   12e9a:	push   esi
   12e9b:	mov    esi,ecx
   12e9d:	mov    ecx,DWORD PTR [esi]
   12e9f:	cmp    DWORD PTR [ecx+0x10],0x0
   12ea3:	jne    0x12eb2
   12ea5:	mov    eax,DWORD PTR [ecx+0x4]
   12ea8:	cmp    DWORD PTR [eax+0x4],ecx
   12eab:	jne    0x12eb2
   12ead:	mov    eax,DWORD PTR [ecx+0x8]
   12eb0:	jmp    0x12ecf
   12eb2:	mov    eax,DWORD PTR [ecx]
   12eb4:	cmp    eax,DWORD PTR ds:0x786b4
   12eba:	je     0x12ec8
   12ebc:	push   eax
   12ebd:	call   0x10e2c
   12ec2:	jmp    0x12ecf
   12ec4:	mov    DWORD PTR [esi],eax
   12ec6:	mov    ecx,eax
   12ec8:	mov    eax,DWORD PTR [ecx+0x4]
   12ecb:	cmp    ecx,DWORD PTR [eax]
   12ecd:	je     0x12ec4
   12ecf:	mov    DWORD PTR [esi],eax
   12ed1:	pop    esi
   12ed2:	ret    
   12ed3:	int3   
   12ed4:	int3   
   12ed5:	int3   
   12ed6:	int3   
   12ed7:	int3   
   12ed8:	mov    edi,edi
   12eda:	push   esi
   12edb:	mov    esi,ecx
   12edd:	mov    ecx,DWORD PTR [esi]
   12edf:	mov    eax,DWORD PTR [ecx+0x8]
   12ee2:	cmp    eax,DWORD PTR ds:0x786b4
   12ee8:	je     0x12ef6
   12eea:	push   eax
   12eeb:	call   0x10e4e
   12ef0:	jmp    0x12f05
   12ef2:	mov    DWORD PTR [esi],eax
   12ef4:	mov    ecx,eax
   12ef6:	mov    eax,DWORD PTR [ecx+0x4]
   12ef9:	cmp    ecx,DWORD PTR [eax+0x8]
   12efc:	je     0x12ef2
   12efe:	mov    ecx,DWORD PTR [esi]
   12f00:	cmp    DWORD PTR [ecx+0x8],eax
   12f03:	je     0x12f07
   12f05:	mov    DWORD PTR [esi],eax
   12f07:	pop    esi
   12f08:	ret    
   12f09:	int3   
   12f0a:	int3   
   12f0b:	int3   
   12f0c:	int3   
   12f0d:	int3   
   12f0e:	mov    edi,edi
   12f10:	push   ebp
   12f11:	mov    ebp,esp
   12f13:	mov    edx,DWORD PTR [ebp+0x8]
   12f16:	mov    eax,DWORD PTR [edx+0x8]
   12f19:	push   esi
   12f1a:	mov    esi,DWORD PTR [eax]
   12f1c:	mov    DWORD PTR [edx+0x8],esi
   12f1f:	mov    esi,DWORD PTR [eax]
   12f21:	cmp    esi,DWORD PTR ds:0x786b4
   12f27:	je     0x12f2c
   12f29:	mov    DWORD PTR [esi+0x4],edx
   12f2c:	mov    esi,DWORD PTR [edx+0x4]
   12f2f:	mov    DWORD PTR [eax+0x4],esi
   12f32:	mov    ecx,DWORD PTR [ecx+0x4]
   12f35:	pop    esi
   12f36:	cmp    edx,DWORD PTR [ecx+0x4]
   12f39:	jne    0x12f40
   12f3b:	mov    DWORD PTR [ecx+0x4],eax
   12f3e:	jmp    0x12f4e
   12f40:	mov    ecx,DWORD PTR [edx+0x4]
   12f43:	cmp    edx,DWORD PTR [ecx]
   12f45:	jne    0x12f4b
   12f47:	mov    DWORD PTR [ecx],eax
   12f49:	jmp    0x12f4e
   12f4b:	mov    DWORD PTR [ecx+0x8],eax
   12f4e:	mov    DWORD PTR [eax],edx
   12f50:	mov    DWORD PTR [edx+0x4],eax
   12f53:	pop    ebp
   12f54:	ret    0x4
   12f57:	int3   
   12f58:	int3   
   12f59:	int3   
   12f5a:	int3   
   12f5b:	int3   
   12f5c:	mov    edi,edi
   12f5e:	push   ebp
   12f5f:	mov    ebp,esp
   12f61:	mov    edx,DWORD PTR [ebp+0x8]
   12f64:	mov    eax,DWORD PTR [edx]
   12f66:	push   esi
   12f67:	mov    esi,DWORD PTR [eax+0x8]
   12f6a:	mov    DWORD PTR [edx],esi
   12f6c:	mov    esi,DWORD PTR [eax+0x8]
   12f6f:	cmp    esi,DWORD PTR ds:0x786b4
   12f75:	je     0x12f7a
   12f77:	mov    DWORD PTR [esi+0x4],edx
   12f7a:	mov    esi,DWORD PTR [edx+0x4]
   12f7d:	mov    DWORD PTR [eax+0x4],esi
   12f80:	mov    ecx,DWORD PTR [ecx+0x4]
   12f83:	pop    esi
   12f84:	cmp    edx,DWORD PTR [ecx+0x4]
   12f87:	jne    0x12f8e
   12f89:	mov    DWORD PTR [ecx+0x4],eax
   12f8c:	jmp    0x12f9d
   12f8e:	mov    ecx,DWORD PTR [edx+0x4]
   12f91:	cmp    edx,DWORD PTR [ecx+0x8]
   12f94:	jne    0x12f9b
   12f96:	mov    DWORD PTR [ecx+0x8],eax
   12f99:	jmp    0x12f9d
   12f9b:	mov    DWORD PTR [ecx],eax
   12f9d:	mov    DWORD PTR [eax+0x8],edx
   12fa0:	mov    DWORD PTR [edx+0x4],eax
   12fa3:	pop    ebp
   12fa4:	ret    0x4
   12fa7:	int3   
   12fa8:	int3   
   12fa9:	int3   
   12faa:	int3   
   12fab:	int3   
   12fac:	mov    edi,edi
   12fae:	push   ebp
   12faf:	mov    ebp,esp
   12fb1:	mov    eax,DWORD PTR [ecx+0x4]
   12fb4:	push   esi
   12fb5:	mov    esi,DWORD PTR [eax+0x4]
   12fb8:	push   edi
   12fb9:	mov    edi,eax
   12fbb:	jmp    0x12fd6
   12fbd:	push   DWORD PTR [ebp+0x8]
   12fc0:	lea    eax,[esi+0x10]
   12fc3:	push   eax
   12fc4:	call   0x19eec
   12fc9:	test   al,al
   12fcb:	je     0x12fd2
   12fcd:	mov    esi,DWORD PTR [esi+0x8]
   12fd0:	jmp    0x12fd6
   12fd2:	mov    edi,esi
   12fd4:	mov    esi,DWORD PTR [esi]
   12fd6:	cmp    esi,DWORD PTR ds:0x786b8
   12fdc:	jne    0x12fbd
   12fde:	mov    eax,edi
   12fe0:	pop    edi
   12fe1:	pop    esi
   12fe2:	pop    ebp
   12fe3:	ret    0x4
   12fe6:	int3   
   12fe7:	int3   
   12fe8:	int3   
   12fe9:	int3   
   12fea:	int3   
   12feb:	int3   
   12fec:	mov    edi,edi
   12fee:	push   ebp
   12fef:	mov    ebp,esp
   12ff1:	mov    edx,DWORD PTR [ebp+0x8]
   12ff4:	mov    eax,DWORD PTR [edx+0x8]
   12ff7:	push   esi
   12ff8:	mov    esi,DWORD PTR [eax]
   12ffa:	mov    DWORD PTR [edx+0x8],esi
   12ffd:	mov    esi,DWORD PTR [eax]
   12fff:	cmp    esi,DWORD PTR ds:0x786b8
   13005:	je     0x1300a
   13007:	mov    DWORD PTR [esi+0x4],edx
   1300a:	mov    esi,DWORD PTR [edx+0x4]
   1300d:	mov    DWORD PTR [eax+0x4],esi
   13010:	mov    ecx,DWORD PTR [ecx+0x4]
   13013:	pop    esi
   13014:	cmp    edx,DWORD PTR [ecx+0x4]
   13017:	jne    0x1301e
   13019:	mov    DWORD PTR [ecx+0x4],eax
   1301c:	jmp    0x1302c
   1301e:	mov    ecx,DWORD PTR [edx+0x4]
   13021:	cmp    edx,DWORD PTR [ecx]
   13023:	jne    0x13029
   13025:	mov    DWORD PTR [ecx],eax
   13027:	jmp    0x1302c
   13029:	mov    DWORD PTR [ecx+0x8],eax
   1302c:	mov    DWORD PTR [eax],edx
   1302e:	mov    DWORD PTR [edx+0x4],eax
   13031:	pop    ebp
   13032:	ret    0x4
   13035:	int3   
   13036:	int3   
   13037:	int3   
   13038:	int3   
   13039:	int3   
   1303a:	mov    edi,edi
   1303c:	push   ebp
   1303d:	mov    ebp,esp
   1303f:	mov    edx,DWORD PTR [ebp+0x8]
   13042:	mov    eax,DWORD PTR [edx]
   13044:	push   esi
   13045:	mov    esi,DWORD PTR [eax+0x8]
   13048:	mov    DWORD PTR [edx],esi
   1304a:	mov    esi,DWORD PTR [eax+0x8]
   1304d:	cmp    esi,DWORD PTR ds:0x786b8
   13053:	je     0x13058
   13055:	mov    DWORD PTR [esi+0x4],edx
   13058:	mov    esi,DWORD PTR [edx+0x4]
   1305b:	mov    DWORD PTR [eax+0x4],esi
   1305e:	mov    ecx,DWORD PTR [ecx+0x4]
   13061:	pop    esi
   13062:	cmp    edx,DWORD PTR [ecx+0x4]
   13065:	jne    0x1306c
   13067:	mov    DWORD PTR [ecx+0x4],eax
   1306a:	jmp    0x1307b
   1306c:	mov    ecx,DWORD PTR [edx+0x4]
   1306f:	cmp    edx,DWORD PTR [ecx+0x8]
   13072:	jne    0x13079
   13074:	mov    DWORD PTR [ecx+0x8],eax
   13077:	jmp    0x1307b
   13079:	mov    DWORD PTR [ecx],eax
   1307b:	mov    DWORD PTR [eax+0x8],edx
   1307e:	mov    DWORD PTR [edx+0x4],eax
   13081:	pop    ebp
   13082:	ret    0x4
   13085:	int3   
   13086:	int3   
   13087:	int3   
   13088:	int3   
   13089:	int3   
   1308a:	mov    edi,edi
   1308c:	push   ebp
   1308d:	mov    ebp,esp
   1308f:	mov    eax,DWORD PTR [ecx+0x4]
   13092:	mov    ecx,DWORD PTR [eax+0x4]
   13095:	mov    edx,DWORD PTR ds:0x786b0
   1309b:	cmp    ecx,edx
   1309d:	je     0x130b8
   1309f:	push   esi
   130a0:	mov    esi,DWORD PTR [ebp+0x8]
   130a3:	mov    esi,DWORD PTR [esi]
   130a5:	cmp    esi,DWORD PTR [ecx+0xc]
   130a8:	jae    0x130b0
   130aa:	mov    eax,ecx
   130ac:	mov    ecx,DWORD PTR [ecx]
   130ae:	jmp    0x130b3
   130b0:	mov    ecx,DWORD PTR [ecx+0x8]
   130b3:	cmp    ecx,edx
   130b5:	jne    0x130a5
   130b7:	pop    esi
   130b8:	pop    ebp
   130b9:	ret    0x4
   130bc:	int3   
   130bd:	int3   
   130be:	int3   
   130bf:	int3   
   130c0:	int3   
   130c1:	int3   
   130c2:	mov    edi,edi
   130c4:	push   ebp
   130c5:	mov    ebp,esp
   130c7:	mov    eax,DWORD PTR [ecx+0x4]
   130ca:	push   esi
   130cb:	mov    esi,DWORD PTR [eax+0x4]
   130ce:	push   edi
   130cf:	mov    edi,eax
   130d1:	jmp    0x130ec
   130d3:	lea    eax,[esi+0x10]
   130d6:	push   eax
   130d7:	push   DWORD PTR [ebp+0x8]
   130da:	call   0x19eec
   130df:	test   al,al
   130e1:	je     0x130e9
   130e3:	mov    edi,esi
   130e5:	mov    esi,DWORD PTR [esi]
   130e7:	jmp    0x130ec
   130e9:	mov    esi,DWORD PTR [esi+0x8]
   130ec:	cmp    esi,DWORD PTR ds:0x786bc
   130f2:	jne    0x130d3
   130f4:	mov    eax,edi
   130f6:	pop    edi
   130f7:	pop    esi
   130f8:	pop    ebp
   130f9:	ret    0x4
   130fc:	int3   
   130fd:	int3   
   130fe:	int3   
   130ff:	int3   
   13100:	int3   
   13101:	int3   
   13102:	mov    edi,edi
   13104:	push   ebp
   13105:	mov    ebp,esp
   13107:	mov    edx,DWORD PTR [ebp+0x8]
   1310a:	mov    eax,DWORD PTR [edx+0x8]
   1310d:	push   esi
   1310e:	mov    esi,DWORD PTR [eax]
   13110:	mov    DWORD PTR [edx+0x8],esi
   13113:	mov    esi,DWORD PTR [eax]
   13115:	cmp    esi,DWORD PTR ds:0x786c0
   1311b:	je     0x13120
   1311d:	mov    DWORD PTR [esi+0x4],edx
   13120:	mov    esi,DWORD PTR [edx+0x4]
   13123:	mov    DWORD PTR [eax+0x4],esi
   13126:	mov    ecx,DWORD PTR [ecx+0x4]
   13129:	pop    esi
   1312a:	cmp    edx,DWORD PTR [ecx+0x4]
   1312d:	jne    0x13134
   1312f:	mov    DWORD PTR [ecx+0x4],eax
   13132:	jmp    0x13142
   13134:	mov    ecx,DWORD PTR [edx+0x4]
   13137:	cmp    edx,DWORD PTR [ecx]
   13139:	jne    0x1313f
   1313b:	mov    DWORD PTR [ecx],eax
   1313d:	jmp    0x13142
   1313f:	mov    DWORD PTR [ecx+0x8],eax
   13142:	mov    DWORD PTR [eax],edx
   13144:	mov    DWORD PTR [edx+0x4],eax
   13147:	pop    ebp
   13148:	ret    0x4
   1314b:	int3   
   1314c:	int3   
   1314d:	int3   
   1314e:	int3   
   1314f:	int3   
   13150:	mov    edi,edi
   13152:	push   ebp
   13153:	mov    ebp,esp
   13155:	mov    edx,DWORD PTR [ebp+0x8]
   13158:	mov    eax,DWORD PTR [edx]
   1315a:	push   esi
   1315b:	mov    esi,DWORD PTR [eax+0x8]
   1315e:	mov    DWORD PTR [edx],esi
   13160:	mov    esi,DWORD PTR [eax+0x8]
   13163:	cmp    esi,DWORD PTR ds:0x786c0
   13169:	je     0x1316e
   1316b:	mov    DWORD PTR [esi+0x4],edx
   1316e:	mov    esi,DWORD PTR [edx+0x4]
   13171:	mov    DWORD PTR [eax+0x4],esi
   13174:	mov    ecx,DWORD PTR [ecx+0x4]
   13177:	pop    esi
   13178:	cmp    edx,DWORD PTR [ecx+0x4]
   1317b:	jne    0x13182
   1317d:	mov    DWORD PTR [ecx+0x4],eax
   13180:	jmp    0x13191
   13182:	mov    ecx,DWORD PTR [edx+0x4]
   13185:	cmp    edx,DWORD PTR [ecx+0x8]
   13188:	jne    0x1318f
   1318a:	mov    DWORD PTR [ecx+0x8],eax
   1318d:	jmp    0x13191
   1318f:	mov    DWORD PTR [ecx],eax
   13191:	mov    DWORD PTR [eax+0x8],edx
   13194:	mov    DWORD PTR [edx+0x4],eax
   13197:	pop    ebp
   13198:	ret    0x4
   1319b:	int3   
   1319c:	int3   
   1319d:	int3   
   1319e:	int3   
   1319f:	int3   
   131a0:	mov    edi,edi
   131a2:	push   ebp
   131a3:	mov    ebp,esp
   131a5:	mov    eax,DWORD PTR [ecx+0x4]
   131a8:	push   esi
   131a9:	mov    esi,DWORD PTR [eax+0x4]
   131ac:	push   edi
   131ad:	mov    edi,eax
   131af:	jmp    0x131ca
   131b1:	lea    eax,[esi+0xc]
   131b4:	push   eax
   131b5:	push   DWORD PTR [ebp+0x8]
   131b8:	call   0x19eec
   131bd:	test   al,al
   131bf:	je     0x131c7
   131c1:	mov    edi,esi
   131c3:	mov    esi,DWORD PTR [esi]
   131c5:	jmp    0x131ca
   131c7:	mov    esi,DWORD PTR [esi+0x8]
   131ca:	cmp    esi,DWORD PTR ds:0x786c0
   131d0:	jne    0x131b1
   131d2:	mov    eax,edi
   131d4:	pop    edi
   131d5:	pop    esi
   131d6:	pop    ebp
   131d7:	ret    0x4
   131da:	int3   
   131db:	int3   
   131dc:	int3   
   131dd:	int3   
   131de:	int3   
   131df:	int3   
   131e0:	mov    edi,edi
   131e2:	push   ebp
   131e3:	mov    ebp,esp
   131e5:	mov    edx,DWORD PTR [ebp+0x8]
   131e8:	mov    eax,DWORD PTR [edx+0x8]
   131eb:	push   esi
   131ec:	mov    esi,DWORD PTR [eax]
   131ee:	mov    DWORD PTR [edx+0x8],esi
   131f1:	mov    esi,DWORD PTR [eax]
   131f3:	cmp    esi,DWORD PTR ds:0x786c4
   131f9:	je     0x131fe
   131fb:	mov    DWORD PTR [esi+0x4],edx
   131fe:	mov    esi,DWORD PTR [edx+0x4]
   13201:	mov    DWORD PTR [eax+0x4],esi
   13204:	mov    ecx,DWORD PTR [ecx+0x4]
   13207:	pop    esi
   13208:	cmp    edx,DWORD PTR [ecx+0x4]
   1320b:	jne    0x13212
   1320d:	mov    DWORD PTR [ecx+0x4],eax
   13210:	jmp    0x13220
   13212:	mov    ecx,DWORD PTR [edx+0x4]
   13215:	cmp    edx,DWORD PTR [ecx]
   13217:	jne    0x1321d
   13219:	mov    DWORD PTR [ecx],eax
   1321b:	jmp    0x13220
   1321d:	mov    DWORD PTR [ecx+0x8],eax
   13220:	mov    DWORD PTR [eax],edx
   13222:	mov    DWORD PTR [edx+0x4],eax
   13225:	pop    ebp
   13226:	ret    0x4
   13229:	int3   
   1322a:	int3   
   1322b:	int3   
   1322c:	int3   
   1322d:	int3   
   1322e:	mov    edi,edi
   13230:	push   ebp
   13231:	mov    ebp,esp
   13233:	mov    edx,DWORD PTR [ebp+0x8]
   13236:	mov    eax,DWORD PTR [edx]
   13238:	push   esi
   13239:	mov    esi,DWORD PTR [eax+0x8]
   1323c:	mov    DWORD PTR [edx],esi
   1323e:	mov    esi,DWORD PTR [eax+0x8]
   13241:	cmp    esi,DWORD PTR ds:0x786c4
   13247:	je     0x1324c
   13249:	mov    DWORD PTR [esi+0x4],edx
   1324c:	mov    esi,DWORD PTR [edx+0x4]
   1324f:	mov    DWORD PTR [eax+0x4],esi
   13252:	mov    ecx,DWORD PTR [ecx+0x4]
   13255:	pop    esi
   13256:	cmp    edx,DWORD PTR [ecx+0x4]
   13259:	jne    0x13260
   1325b:	mov    DWORD PTR [ecx+0x4],eax
   1325e:	jmp    0x1326f
   13260:	mov    ecx,DWORD PTR [edx+0x4]
   13263:	cmp    edx,DWORD PTR [ecx+0x8]
   13266:	jne    0x1326d
   13268:	mov    DWORD PTR [ecx+0x8],eax
   1326b:	jmp    0x1326f
   1326d:	mov    DWORD PTR [ecx],eax
   1326f:	mov    DWORD PTR [eax+0x8],edx
   13272:	mov    DWORD PTR [edx+0x4],eax
   13275:	pop    ebp
   13276:	ret    0x4
   13279:	int3   
   1327a:	int3   
   1327b:	int3   
   1327c:	int3   
   1327d:	int3   
   1327e:	mov    edi,edi
   13280:	push   ebp
   13281:	mov    ebp,esp
   13283:	mov    eax,DWORD PTR [ecx+0x4]
   13286:	mov    ecx,DWORD PTR [eax+0x4]
   13289:	mov    edx,DWORD PTR ds:0x786c4
   1328f:	cmp    ecx,edx
   13291:	je     0x132ac
   13293:	push   esi
   13294:	mov    esi,DWORD PTR [ebp+0x8]
   13297:	mov    esi,DWORD PTR [esi]
   13299:	cmp    esi,DWORD PTR [ecx+0xc]
   1329c:	jge    0x132a4
   1329e:	mov    eax,ecx
   132a0:	mov    ecx,DWORD PTR [ecx]
   132a2:	jmp    0x132a7
   132a4:	mov    ecx,DWORD PTR [ecx+0x8]
   132a7:	cmp    ecx,edx
   132a9:	jne    0x13299
   132ab:	pop    esi
   132ac:	pop    ebp
   132ad:	ret    0x4
   132b0:	int3   
   132b1:	int3   
   132b2:	int3   
   132b3:	int3   
   132b4:	int3   
   132b5:	int3   
   132b6:	mov    edi,edi
   132b8:	push   ebp
   132b9:	mov    ebp,esp
   132bb:	mov    eax,DWORD PTR [ecx+0x4]
   132be:	push   esi
   132bf:	mov    esi,DWORD PTR [eax+0x4]
   132c2:	push   edi
   132c3:	mov    edi,eax
   132c5:	jmp    0x132e0
   132c7:	push   DWORD PTR [ebp+0x8]
   132ca:	lea    eax,[esi+0xc]
   132cd:	push   eax
   132ce:	call   0x19f1c
   132d3:	test   al,al
   132d5:	je     0x132dc
   132d7:	mov    esi,DWORD PTR [esi+0x8]
   132da:	jmp    0x132e0
   132dc:	mov    edi,esi
   132de:	mov    esi,DWORD PTR [esi]
   132e0:	cmp    esi,DWORD PTR ds:0x786cc
   132e6:	jne    0x132c7
   132e8:	mov    eax,edi
   132ea:	pop    edi
   132eb:	pop    esi
   132ec:	pop    ebp
   132ed:	ret    0x4
   132f0:	int3   
   132f1:	int3   
   132f2:	int3   
   132f3:	int3   
   132f4:	int3   
   132f5:	int3   
   132f6:	mov    edi,edi
   132f8:	push   ebp
   132f9:	mov    ebp,esp
   132fb:	mov    eax,DWORD PTR [ecx+0x4]
   132fe:	mov    ecx,DWORD PTR [eax+0x4]
   13301:	mov    edx,DWORD PTR ds:0x786b4
   13307:	cmp    ecx,edx
   13309:	je     0x13324
   1330b:	push   esi
   1330c:	mov    esi,DWORD PTR [ebp+0x8]
   1330f:	mov    esi,DWORD PTR [esi]
   13311:	cmp    DWORD PTR [ecx+0xc],esi
   13314:	jae    0x1331b
   13316:	mov    ecx,DWORD PTR [ecx+0x8]
   13319:	jmp    0x1331f
   1331b:	mov    eax,ecx
   1331d:	mov    ecx,DWORD PTR [ecx]
   1331f:	cmp    ecx,edx
   13321:	jne    0x13311
   13323:	pop    esi
   13324:	pop    ebp
   13325:	ret    0x4
   13328:	int3   
   13329:	int3   
   1332a:	int3   
   1332b:	int3   
   1332c:	int3   
   1332d:	int3   
   1332e:	mov    edi,edi
   13330:	push   ebp
   13331:	mov    ebp,esp
   13333:	mov    eax,DWORD PTR [ecx+0x4]
   13336:	mov    ecx,DWORD PTR [eax+0x4]
   13339:	mov    edx,DWORD PTR ds:0x786b4
   1333f:	cmp    ecx,edx
   13341:	je     0x1335c
   13343:	push   esi
   13344:	mov    esi,DWORD PTR [ebp+0x8]
   13347:	mov    esi,DWORD PTR [esi]
   13349:	cmp    esi,DWORD PTR [ecx+0xc]
   1334c:	jae    0x13354
   1334e:	mov    eax,ecx
   13350:	mov    ecx,DWORD PTR [ecx]
   13352:	jmp    0x13357
   13354:	mov    ecx,DWORD PTR [ecx+0x8]
   13357:	cmp    ecx,edx
   13359:	jne    0x13349
   1335b:	pop    esi
   1335c:	pop    ebp
   1335d:	ret    0x4
   13360:	int3   
   13361:	int3   
   13362:	int3   
   13363:	int3   
   13364:	int3   
   13365:	int3   
   13366:	mov    edi,edi
   13368:	push   ebp
   13369:	mov    ebp,esp
   1336b:	mov    edx,DWORD PTR [ebp+0x8]
   1336e:	mov    eax,DWORD PTR [edx+0x8]
   13371:	push   esi
   13372:	mov    esi,DWORD PTR [eax]
   13374:	mov    DWORD PTR [edx+0x8],esi
   13377:	mov    esi,DWORD PTR [eax]
   13379:	cmp    esi,DWORD PTR ds:0x786cc
   1337f:	je     0x13384
   13381:	mov    DWORD PTR [esi+0x4],edx
   13384:	mov    esi,DWORD PTR [edx+0x4]
   13387:	mov    DWORD PTR [eax+0x4],esi
   1338a:	mov    ecx,DWORD PTR [ecx+0x4]
   1338d:	pop    esi
   1338e:	cmp    edx,DWORD PTR [ecx+0x4]
   13391:	jne    0x13398
   13393:	mov    DWORD PTR [ecx+0x4],eax
   13396:	jmp    0x133a6
   13398:	mov    ecx,DWORD PTR [edx+0x4]
   1339b:	cmp    edx,DWORD PTR [ecx]
   1339d:	jne    0x133a3
   1339f:	mov    DWORD PTR [ecx],eax
   133a1:	jmp    0x133a6
   133a3:	mov    DWORD PTR [ecx+0x8],eax
   133a6:	mov    DWORD PTR [eax],edx
   133a8:	mov    DWORD PTR [edx+0x4],eax
   133ab:	pop    ebp
   133ac:	ret    0x4
   133af:	int3   
   133b0:	int3   
   133b1:	int3   
   133b2:	int3   
   133b3:	int3   
   133b4:	mov    edi,edi
   133b6:	push   ebp
   133b7:	mov    ebp,esp
   133b9:	mov    edx,DWORD PTR [ebp+0x8]
   133bc:	mov    eax,DWORD PTR [edx]
   133be:	push   esi
   133bf:	mov    esi,DWORD PTR [eax+0x8]
   133c2:	mov    DWORD PTR [edx],esi
   133c4:	mov    esi,DWORD PTR [eax+0x8]
   133c7:	cmp    esi,DWORD PTR ds:0x786cc
   133cd:	je     0x133d2
   133cf:	mov    DWORD PTR [esi+0x4],edx
   133d2:	mov    esi,DWORD PTR [edx+0x4]
   133d5:	mov    DWORD PTR [eax+0x4],esi
   133d8:	mov    ecx,DWORD PTR [ecx+0x4]
   133db:	pop    esi
   133dc:	cmp    edx,DWORD PTR [ecx+0x4]
   133df:	jne    0x133e6
   133e1:	mov    DWORD PTR [ecx+0x4],eax
   133e4:	jmp    0x133f5
   133e6:	mov    ecx,DWORD PTR [edx+0x4]
   133e9:	cmp    edx,DWORD PTR [ecx+0x8]
   133ec:	jne    0x133f3
   133ee:	mov    DWORD PTR [ecx+0x8],eax
   133f1:	jmp    0x133f5
   133f3:	mov    DWORD PTR [ecx],eax
   133f5:	mov    DWORD PTR [eax+0x8],edx
   133f8:	mov    DWORD PTR [edx+0x4],eax
   133fb:	pop    ebp
   133fc:	ret    0x4
   133ff:	int3   
   13400:	int3   
   13401:	int3   
   13402:	int3   
   13403:	int3   
   13404:	mov    edi,edi
   13406:	push   esi
   13407:	mov    esi,ecx
   13409:	mov    ecx,DWORD PTR [esi]
   1340b:	cmp    DWORD PTR [ecx+0x1c],0x0
   1340f:	jne    0x1341e
   13411:	mov    eax,DWORD PTR [ecx+0x4]
   13414:	cmp    DWORD PTR [eax+0x4],ecx
   13417:	jne    0x1341e
   13419:	mov    eax,DWORD PTR [ecx+0x8]
   1341c:	jmp    0x1343b
   1341e:	mov    eax,DWORD PTR [ecx]
   13420:	cmp    eax,DWORD PTR ds:0x786cc
   13426:	je     0x13434
   13428:	push   eax
   13429:	call   0x111de
   1342e:	jmp    0x1343b
   13430:	mov    DWORD PTR [esi],eax
   13432:	mov    ecx,eax
   13434:	mov    eax,DWORD PTR [ecx+0x4]
   13437:	cmp    ecx,DWORD PTR [eax]
   13439:	je     0x13430
   1343b:	mov    DWORD PTR [esi],eax
   1343d:	pop    esi
   1343e:	ret    
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	int3   
   13443:	int3   
   13444:	mov    edi,edi
   13446:	push   ebp
   13447:	mov    ebp,esp
   13449:	cmp    DWORD PTR [ebp+0x8],0x0
   1344d:	jge    0x13453
   1344f:	and    DWORD PTR [ebp+0x8],0x0
   13453:	push   DWORD PTR [ebp+0x8]
   13456:	call   0x11cec
   1345b:	pop    ecx
   1345c:	pop    ebp
   1345d:	ret    0x8
   13460:	int3   
   13461:	int3   
   13462:	int3   
   13463:	int3   
   13464:	int3   
   13465:	int3   
   13466:	mov    edi,edi
   13468:	push   ebp
   13469:	mov    ebp,esp
   1346b:	push   esi
   1346c:	mov    esi,ecx
   1346e:	call   0x12c28
   13473:	test   BYTE PTR [ebp+0x8],0x1
   13477:	je     0x13480
   13479:	push   esi
   1347a:	call   0x11d22
   1347f:	pop    ecx
   13480:	mov    eax,esi
   13482:	pop    esi
   13483:	pop    ebp
   13484:	ret    0x4
   13487:	int3   
   13488:	int3   
   13489:	int3   
   1348a:	int3   
   1348b:	int3   
   1348c:	mov    edi,edi
   1348e:	push   ebp
   1348f:	mov    ebp,esp
   13491:	push   edi
   13492:	mov    edi,DWORD PTR [ebp+0xc]
   13495:	cmp    DWORD PTR [ebp+0x8],edi
   13498:	je     0x134ae
   1349a:	push   esi
   1349b:	mov    esi,DWORD PTR [ebp+0x10]
   1349e:	inc    DWORD PTR [esi]
   134a0:	lea    ecx,[ebp+0x8]
   134a3:	call   0x10ef4
   134a8:	cmp    DWORD PTR [ebp+0x8],edi
   134ab:	jne    0x1349e
   134ad:	pop    esi
   134ae:	pop    edi
   134af:	pop    ebp
   134b0:	ret    
   134b1:	int3   
   134b2:	int3   
   134b3:	int3   
   134b4:	int3   
   134b5:	int3   
   134b6:	mov    edi,edi
   134b8:	push   ebp
   134b9:	mov    ebp,esp
   134bb:	push   edi
   134bc:	mov    edi,DWORD PTR [ebp+0xc]
   134bf:	cmp    DWORD PTR [ebp+0x8],edi
   134c2:	je     0x134d8
   134c4:	push   esi
   134c5:	mov    esi,DWORD PTR [ebp+0x10]
   134c8:	inc    DWORD PTR [esi]
   134ca:	lea    ecx,[ebp+0x8]
   134cd:	call   0x11172
   134d2:	cmp    DWORD PTR [ebp+0x8],edi
   134d5:	jne    0x134c8
   134d7:	pop    esi
   134d8:	pop    edi
   134d9:	pop    ebp
   134da:	ret    
   134db:	int3   
   134dc:	int3   
   134dd:	int3   
   134de:	int3   
   134df:	int3   
   134e0:	mov    edi,edi
   134e2:	push   ebp
   134e3:	mov    ebp,esp
   134e5:	push   edi
   134e6:	mov    edi,DWORD PTR [ebp+0xc]
   134e9:	cmp    DWORD PTR [ebp+0x8],edi
   134ec:	je     0x13502
   134ee:	push   esi
   134ef:	mov    esi,DWORD PTR [ebp+0x10]
   134f2:	inc    DWORD PTR [esi]
   134f4:	lea    ecx,[ebp+0x8]
   134f7:	call   0x111a8
   134fc:	cmp    DWORD PTR [ebp+0x8],edi
   134ff:	jne    0x134f2
   13501:	pop    esi
   13502:	pop    edi
   13503:	pop    ebp
   13504:	ret    
   13505:	int3   
   13506:	int3   
   13507:	int3   
   13508:	int3   
   13509:	int3   
   1350a:	mov    edi,edi
   1350c:	push   ebp
   1350d:	mov    ebp,esp
   1350f:	push   edi
   13510:	mov    edi,DWORD PTR [ebp+0xc]
   13513:	cmp    DWORD PTR [ebp+0x8],edi
   13516:	je     0x1352c
   13518:	push   esi
   13519:	mov    esi,DWORD PTR [ebp+0x10]
   1351c:	inc    DWORD PTR [esi]
   1351e:	lea    ecx,[ebp+0x8]
   13521:	call   0x12ed8
   13526:	cmp    DWORD PTR [ebp+0x8],edi
   13529:	jne    0x1351c
   1352b:	pop    esi
   1352c:	pop    edi
   1352d:	pop    ebp
   1352e:	ret    
   1352f:	int3   
   13530:	int3   
   13531:	int3   
   13532:	int3   
   13533:	int3   
   13534:	mov    edi,edi
   13536:	push   esi
   13537:	mov    esi,ecx
   13539:	push   DWORD PTR [esi+0x38]
   1353c:	call   0x11d22
   13541:	push   DWORD PTR [esi+0x18]
   13544:	call   0x11d22
   13549:	push   DWORD PTR [esi+0x10]
   1354c:	call   0x11d22
   13551:	push   DWORD PTR [esi+0x8]
   13554:	call   0x11d22
   13559:	push   DWORD PTR [esi]
   1355b:	call   0x11d22
   13560:	add    esp,0x14
   13563:	pop    esi
   13564:	ret    
   13565:	int3   
   13566:	int3   
   13567:	int3   
   13568:	int3   
   13569:	int3   
   1356a:	mov    edi,edi
   1356c:	push   ebp
   1356d:	mov    ebp,esp
   1356f:	push   esi
   13570:	mov    esi,ecx
   13572:	mov    ecx,DWORD PTR [esi]
   13574:	test   ecx,ecx
   13576:	je     0x1357d
   13578:	call   0x11d64
   1357d:	mov    eax,DWORD PTR [ebp+0x8]
   13580:	mov    eax,DWORD PTR [eax]
   13582:	mov    DWORD PTR [esi],eax
   13584:	inc    DWORD PTR [eax+0x4]
   13587:	mov    eax,esi
   13589:	pop    esi
   1358a:	pop    ebp
   1358b:	ret    0x4
   1358e:	int3   
   1358f:	int3   
   13590:	int3   
   13591:	int3   
   13592:	int3   
   13593:	int3   
   13594:	mov    edi,edi
   13596:	push   ebp
   13597:	mov    ebp,esp
   13599:	push   ebx
   1359a:	push   esi
   1359b:	push   edi
   1359c:	mov    edi,DWORD PTR [ebp+0xc]
   1359f:	mov    esi,ecx
   135a1:	and    DWORD PTR [esi+0x4],0x0
   135a5:	lea    eax,[edi+0x1]
   135a8:	push   eax
   135a9:	mov    DWORD PTR [esi+0x8],edi
   135ac:	call   0x11cec
   135b1:	push   edi
   135b2:	push   DWORD PTR [ebp+0x8]
   135b5:	mov    ebx,eax
   135b7:	push   ebx
   135b8:	call   0x1e1b6
   135bd:	add    esp,0x10
   135c0:	inc    DWORD PTR [esi+0x4]
   135c3:	pop    edi
   135c4:	mov    DWORD PTR [esi],ebx
   135c6:	mov    eax,esi
   135c8:	pop    esi
   135c9:	pop    ebx
   135ca:	pop    ebp
   135cb:	ret    0x8
   135ce:	int3   
   135cf:	int3   
   135d0:	int3   
   135d1:	int3   
   135d2:	int3   
   135d3:	int3   
   135d4:	mov    edi,edi
   135d6:	push   ebp
   135d7:	mov    ebp,esp
   135d9:	sub    esp,0x18
   135dc:	lea    eax,[ebp-0x18]
   135df:	push   eax
   135e0:	push   DWORD PTR [ebp+0x8]
   135e3:	call   0x11ed8
   135e8:	test   al,al
   135ea:	je     0x13659
   135ec:	lea    eax,[ebp-0x4]
   135ef:	push   eax
   135f0:	push   DWORD PTR [ebp+0xc]
   135f3:	call   0x11a3e
   135f8:	call   eax
   135fa:	test   eax,eax
   135fc:	jl     0x13659
   135fe:	push   esi
   135ff:	push   0x5
   13601:	call   0x128e0
   13606:	mov    esi,eax
   13608:	test   esi,esi
   1360a:	je     0x13658
   1360c:	mov    edx,DWORD PTR [ebp+0x10]
   1360f:	cmp    DWORD PTR [esi+0x44],edx
   13612:	je     0x13621
   13614:	mov    ecx,DWORD PTR [eax]
   13616:	test   ecx,ecx
   13618:	je     0x13645
   1361a:	add    eax,ecx
   1361c:	cmp    DWORD PTR [eax+0x44],edx
   1361f:	jne    0x13614
   13621:	cmp    DWORD PTR [eax+0x4],0x0
   13625:	je     0x13645
   13627:	mov    ecx,DWORD PTR [eax+0xd8]
   1362d:	mov    eax,DWORD PTR [eax+0xdc]
   13633:	mov    DWORD PTR [ebp-0x14],eax
   13636:	lea    eax,[ebp-0x18]
   13639:	push   eax
   1363a:	push   DWORD PTR [ebp+0x8]
   1363d:	mov    DWORD PTR [ebp-0x18],ecx
   13640:	call   0x11f28
   13645:	mov    ecx,DWORD PTR [ebp-0x4]
   13648:	call   DWORD PTR ds:0x1f850
   1364e:	push   0x0
   13650:	push   esi
   13651:	call   0x115fa
   13656:	call   eax
   13658:	pop    esi
   13659:	leave  
   1365a:	ret    0x10
   1365d:	int3   
   1365e:	int3   
   1365f:	int3   
   13660:	int3   
   13661:	int3   
   13662:	mov    edi,edi
   13664:	push   ebp
   13665:	mov    ebp,esp
   13667:	push   esi
   13668:	push   DWORD PTR [ebp+0xc]
   1366b:	mov    esi,ecx
   1366d:	push   DWORD PTR [ebp+0x8]
   13670:	call   0x12b6e
   13675:	mov    eax,esi
   13677:	pop    esi
   13678:	pop    ebp
   13679:	ret    0x8
   1367c:	int3   
   1367d:	int3   
   1367e:	int3   
   1367f:	int3   
   13680:	int3   
   13681:	int3   
   13682:	mov    edi,edi
   13684:	push   ebp
   13685:	mov    ebp,esp
   13687:	mov    eax,DWORD PTR [ebp+0x8]
   1368a:	push   esi
   1368b:	push   DWORD PTR [eax+0x4]
   1368e:	mov    esi,ecx
   13690:	push   DWORD PTR [eax]
   13692:	call   0x12b6e
   13697:	mov    eax,esi
   13699:	pop    esi
   1369a:	pop    ebp
   1369b:	ret    0x4
   1369e:	int3   
   1369f:	int3   
   136a0:	int3   
   136a1:	int3   
   136a2:	int3   
   136a3:	int3   
   136a4:	mov    edi,edi
   136a6:	push   esi
   136a7:	mov    esi,ecx
   136a9:	lea    ecx,[esi+0x8]
   136ac:	call   0x13534
   136b1:	push   DWORD PTR [esi]
   136b3:	call   0x11d22
   136b8:	pop    ecx
   136b9:	pop    esi
   136ba:	ret    
   136bb:	int3   
   136bc:	int3   
   136bd:	int3   
   136be:	int3   
   136bf:	int3   
   136c0:	mov    edi,edi
   136c2:	push   ebp
   136c3:	mov    ebp,esp
   136c5:	push   esi
   136c6:	push   DWORD PTR [ebp+0xc]
   136c9:	mov    esi,ecx
   136cb:	push   DWORD PTR [ebp+0x8]
   136ce:	call   0x12c46
   136d3:	mov    eax,esi
   136d5:	pop    esi
   136d6:	pop    ebp
   136d7:	ret    0x8
   136da:	int3   
   136db:	int3   
   136dc:	int3   
   136dd:	int3   
   136de:	int3   
   136df:	int3   
   136e0:	mov    edi,edi
   136e2:	push   ebp
   136e3:	mov    ebp,esp
   136e5:	mov    eax,DWORD PTR [ebp+0x8]
   136e8:	push   esi
   136e9:	push   DWORD PTR [eax+0x4]
   136ec:	mov    esi,ecx
   136ee:	push   DWORD PTR [eax]
   136f0:	call   0x12c46
   136f5:	mov    eax,esi
   136f7:	pop    esi
   136f8:	pop    ebp
   136f9:	ret    0x4
   136fc:	int3   
   136fd:	int3   
   136fe:	int3   
   136ff:	int3   
   13700:	int3   
   13701:	int3   
   13702:	mov    edi,edi
   13704:	push   ebp
   13705:	mov    ebp,esp
   13707:	push   esi
   13708:	mov    esi,DWORD PTR [ebp+0x8]
   1370b:	lea    eax,[ebp+0xc]
   1370e:	push   eax
   1370f:	mov    ecx,esi
   13711:	call   0x136e0
   13716:	xor    ecx,ecx
   13718:	inc    ecx
   13719:	cmp    DWORD PTR [esi+0x4],ecx
   1371c:	jbe    0x13730
   1371e:	mov    eax,DWORD PTR [esi]
   13720:	lea    eax,[eax+ecx*2]
   13723:	mov    dx,WORD PTR [eax-0x2]
   13727:	xor    WORD PTR [eax],dx
   1372a:	inc    ecx
   1372b:	cmp    ecx,DWORD PTR [esi+0x4]
   1372e:	jb     0x1371e
   13730:	push   DWORD PTR [ebp+0xc]
   13733:	call   0x11d22
   13738:	pop    ecx
   13739:	mov    eax,esi
   1373b:	pop    esi
   1373c:	pop    ebp
   1373d:	ret    0xc
   13740:	int3   
   13741:	int3   
   13742:	int3   
   13743:	int3   
   13744:	int3   
   13745:	int3   
   13746:	mov    edi,edi
   13748:	push   ebp
   13749:	mov    ebp,esp
   1374b:	push   esi
   1374c:	mov    esi,DWORD PTR [ebp+0x8]
   1374f:	lea    eax,[ebp+0xc]
   13752:	push   eax
   13753:	mov    ecx,esi
   13755:	call   0x13682
   1375a:	xor    ecx,ecx
   1375c:	inc    ecx
   1375d:	cmp    DWORD PTR [esi+0x4],ecx
   13760:	jbe    0x13771
   13762:	mov    eax,DWORD PTR [esi]
   13764:	add    eax,ecx
   13766:	mov    dl,BYTE PTR [eax-0x1]
   13769:	xor    BYTE PTR [eax],dl
   1376b:	inc    ecx
   1376c:	cmp    ecx,DWORD PTR [esi+0x4]
   1376f:	jb     0x13762
   13771:	push   DWORD PTR [ebp+0xc]
   13774:	call   0x11d22
   13779:	pop    ecx
   1377a:	mov    eax,esi
   1377c:	pop    esi
   1377d:	pop    ebp
   1377e:	ret    0xc
   13781:	int3   
   13782:	int3   
   13783:	int3   
   13784:	int3   
   13785:	int3   
   13786:	mov    edi,edi
   13788:	push   esi
   13789:	mov    esi,ecx
   1378b:	mov    ecx,DWORD PTR [esi]
   1378d:	mov    eax,DWORD PTR [ecx+0x8]
   13790:	cmp    eax,DWORD PTR ds:0x786bc
   13796:	je     0x137a4
   13798:	push   eax
   13799:	call   0x12cb2
   1379e:	jmp    0x137b3
   137a0:	mov    DWORD PTR [esi],eax
   137a2:	mov    ecx,eax
   137a4:	mov    eax,DWORD PTR [ecx+0x4]
   137a7:	cmp    ecx,DWORD PTR [eax+0x8]
   137aa:	je     0x137a0
   137ac:	mov    ecx,DWORD PTR [esi]
   137ae:	cmp    DWORD PTR [ecx+0x8],eax
   137b1:	je     0x137b5
   137b3:	mov    DWORD PTR [esi],eax
   137b5:	pop    esi
   137b6:	ret    
   137b7:	int3   
   137b8:	int3   
   137b9:	int3   
   137ba:	int3   
   137bb:	int3   
   137bc:	mov    edi,edi
   137be:	push   ebp
   137bf:	mov    ebp,esp
   137c1:	push   esi
   137c2:	push   DWORD PTR [ebp+0x8]
   137c5:	mov    esi,ecx
   137c7:	call   0x13682
   137cc:	push   DWORD PTR [ebp+0xc]
   137cf:	lea    ecx,[esi+0x8]
   137d2:	call   0x13682
   137d7:	mov    eax,esi
   137d9:	pop    esi
   137da:	pop    ebp
   137db:	ret    0x8
   137de:	int3   
   137df:	int3   
   137e0:	int3   
   137e1:	int3   
   137e2:	int3   
   137e3:	int3   
   137e4:	mov    edi,edi
   137e6:	push   ebp
   137e7:	mov    ebp,esp
   137e9:	mov    eax,DWORD PTR [ebp+0x8]
   137ec:	mov    eax,DWORD PTR [eax]
   137ee:	push   esi
   137ef:	push   DWORD PTR [ebp+0xc]
   137f2:	mov    esi,ecx
   137f4:	lea    ecx,[esi+0x4]
   137f7:	mov    DWORD PTR [esi],eax
   137f9:	call   0x11d40
   137fe:	mov    eax,esi
   13800:	pop    esi
   13801:	pop    ebp
   13802:	ret    0x8
   13805:	int3   
   13806:	int3   
   13807:	int3   
   13808:	int3   
   13809:	int3   
   1380a:	mov    edi,edi
   1380c:	push   ebp
   1380d:	mov    ebp,esp
   1380f:	push   esi
   13810:	push   edi
   13811:	mov    edi,DWORD PTR [ebp+0x8]
   13814:	push   edi
   13815:	mov    esi,ecx
   13817:	call   0x13682
   1381c:	lea    eax,[edi+0x8]
   1381f:	push   eax
   13820:	lea    ecx,[esi+0x8]
   13823:	call   0x13682
   13828:	lea    eax,[edi+0x10]
   1382b:	push   eax
   1382c:	lea    ecx,[esi+0x10]
   1382f:	call   0x13682
   13834:	lea    eax,[edi+0x18]
   13837:	push   eax
   13838:	lea    ecx,[esi+0x18]
   1383b:	call   0x13682
   13840:	mov    eax,DWORD PTR [edi+0x20]
   13843:	mov    DWORD PTR [esi+0x20],eax
   13846:	mov    eax,DWORD PTR [edi+0x28]
   13849:	mov    DWORD PTR [esi+0x28],eax
   1384c:	mov    eax,DWORD PTR [edi+0x2c]
   1384f:	mov    DWORD PTR [esi+0x2c],eax
   13852:	mov    eax,DWORD PTR [edi+0x30]
   13855:	mov    DWORD PTR [esi+0x30],eax
   13858:	mov    eax,DWORD PTR [edi+0x34]
   1385b:	add    edi,0x38
   1385e:	push   edi
   1385f:	lea    ecx,[esi+0x38]
   13862:	mov    DWORD PTR [esi+0x34],eax
   13865:	call   0x13682
   1386a:	pop    edi
   1386b:	mov    eax,esi
   1386d:	pop    esi
   1386e:	pop    ebp
   1386f:	ret    0x4
   13872:	int3   
   13873:	int3   
   13874:	int3   
   13875:	int3   
   13876:	int3   
   13877:	int3   
   13878:	mov    edi,edi
   1387a:	push   ebp
   1387b:	mov    ebp,esp
   1387d:	push   ebx
   1387e:	push   esi
   1387f:	push   edi
   13880:	mov    edi,DWORD PTR [ebp+0x8]
   13883:	mov    ebx,ecx
   13885:	mov    esi,edi
   13887:	cmp    edi,DWORD PTR ds:0x786b0
   1388d:	je     0x138ac
   1388f:	push   DWORD PTR [esi+0x8]
   13892:	mov    ecx,ebx
   13894:	call   0x13878
   13899:	mov    esi,DWORD PTR [esi]
   1389b:	push   edi
   1389c:	call   0x11d22
   138a1:	pop    ecx
   138a2:	mov    edi,esi
   138a4:	cmp    esi,DWORD PTR ds:0x786b0
   138aa:	jne    0x1388f
   138ac:	pop    edi
   138ad:	pop    esi
   138ae:	pop    ebx
   138af:	pop    ebp
   138b0:	ret    0x4
   138b3:	int3   
   138b4:	int3   
   138b5:	int3   
   138b6:	int3   
   138b7:	int3   
   138b8:	mov    edi,edi
   138ba:	push   ebp
   138bb:	mov    ebp,esp
   138bd:	push   esi
   138be:	push   DWORD PTR [ebp+0x8]
   138c1:	mov    esi,ecx
   138c3:	call   0x136e0
   138c8:	push   DWORD PTR [ebp+0xc]
   138cb:	lea    ecx,[esi+0x8]
   138ce:	call   0x136e0
   138d3:	mov    eax,esi
   138d5:	pop    esi
   138d6:	pop    ebp
   138d7:	ret    0x8
   138da:	int3   
   138db:	int3   
   138dc:	int3   
   138dd:	int3   
   138de:	int3   
   138df:	int3   
   138e0:	mov    edi,edi
   138e2:	push   ebp
   138e3:	mov    ebp,esp
   138e5:	push   ebx
   138e6:	push   esi
   138e7:	push   edi
   138e8:	mov    edi,DWORD PTR [ebp+0x8]
   138eb:	mov    ebx,ecx
   138ed:	mov    esi,edi
   138ef:	cmp    edi,DWORD PTR ds:0x786b4
   138f5:	je     0x13914
   138f7:	push   DWORD PTR [esi+0x8]
   138fa:	mov    ecx,ebx
   138fc:	call   0x138e0
   13901:	mov    esi,DWORD PTR [esi]
   13903:	push   edi
   13904:	call   0x11d22
   13909:	pop    ecx
   1390a:	mov    edi,esi
   1390c:	cmp    esi,DWORD PTR ds:0x786b4
   13912:	jne    0x138f7
   13914:	pop    edi
   13915:	pop    esi
   13916:	pop    ebx
   13917:	pop    ebp
   13918:	ret    0x4
   1391b:	int3   
   1391c:	int3   
   1391d:	int3   
   1391e:	int3   
   1391f:	int3   
   13920:	mov    edi,edi
   13922:	push   ebp
   13923:	mov    ebp,esp
   13925:	push   ecx
   13926:	push   DWORD PTR [ebp-0x4]
   13929:	push   DWORD PTR [ebp+0x10]
   1392c:	push   DWORD PTR [ebp+0xc]
   1392f:	push   DWORD PTR [ebp+0x8]
   13932:	call   0x1348c
   13937:	add    esp,0x10
   1393a:	leave  
   1393b:	ret    
   1393c:	int3   
   1393d:	int3   
   1393e:	int3   
   1393f:	int3   
   13940:	int3   
   13941:	int3   
   13942:	mov    edi,edi
   13944:	push   ebp
   13945:	mov    ebp,esp
   13947:	push   ecx
   13948:	push   DWORD PTR [ebp-0x4]
   1394b:	push   DWORD PTR [ebp+0x10]
   1394e:	push   DWORD PTR [ebp+0xc]
   13951:	push   DWORD PTR [ebp+0x8]
   13954:	call   0x134b6
   13959:	add    esp,0x10
   1395c:	leave  
   1395d:	ret    
   1395e:	int3   
   1395f:	int3   
   13960:	int3   
   13961:	int3   
   13962:	int3   
   13963:	int3   
   13964:	mov    edi,edi
   13966:	push   ebp
   13967:	mov    ebp,esp
   13969:	push   ecx
   1396a:	push   DWORD PTR [ebp-0x4]
   1396d:	push   DWORD PTR [ebp+0x10]
   13970:	push   DWORD PTR [ebp+0xc]
   13973:	push   DWORD PTR [ebp+0x8]
   13976:	call   0x134e0
   1397b:	add    esp,0x10
   1397e:	leave  
   1397f:	ret    
   13980:	int3   
   13981:	int3   
   13982:	int3   
   13983:	int3   
   13984:	int3   
   13985:	int3   
   13986:	mov    edi,edi
   13988:	push   ebp
   13989:	mov    ebp,esp
   1398b:	push   ecx
   1398c:	push   DWORD PTR [ebp-0x4]
   1398f:	push   DWORD PTR [ebp+0x10]
   13992:	push   DWORD PTR [ebp+0xc]
   13995:	push   DWORD PTR [ebp+0x8]
   13998:	call   0x1350a
   1399d:	add    esp,0x10
   139a0:	leave  
   139a1:	ret    
   139a2:	int3   
   139a3:	int3   
   139a4:	int3   
   139a5:	int3   
   139a6:	int3   
   139a7:	int3   
   139a8:	mov    edi,edi
   139aa:	push   ebp
   139ab:	mov    ebp,esp
   139ad:	mov    ecx,DWORD PTR [ebp+0x8]
   139b0:	push   0x0
   139b2:	call   0x13466
   139b7:	pop    ebp
   139b8:	ret    0x4
   139bb:	int3   
   139bc:	int3   
   139bd:	int3   
   139be:	int3   
   139bf:	int3   
   139c0:	mov    edi,edi
   139c2:	push   ebp
   139c3:	mov    ebp,esp
   139c5:	push   esi
   139c6:	push   edi
   139c7:	mov    edi,DWORD PTR [ebp+0x8]
   139ca:	push   edi
   139cb:	mov    esi,ecx
   139cd:	call   0x1380a
   139d2:	mov    eax,DWORD PTR [edi+0x40]
   139d5:	mov    DWORD PTR [esi+0x40],eax
   139d8:	pop    edi
   139d9:	mov    eax,esi
   139db:	pop    esi
   139dc:	pop    ebp
   139dd:	ret    0x4
   139e0:	int3   
   139e1:	int3   
   139e2:	int3   
   139e3:	int3   
   139e4:	int3   
   139e5:	int3   
   139e6:	mov    edi,edi
   139e8:	push   ebp
   139e9:	mov    ebp,esp
   139eb:	push   esi
   139ec:	push   edi
   139ed:	mov    edi,DWORD PTR [ebp+0x8]
   139f0:	push   edi
   139f1:	mov    esi,ecx
   139f3:	call   0x13682
   139f8:	add    edi,0x8
   139fb:	push   edi
   139fc:	lea    ecx,[esi+0x8]
   139ff:	call   0x1380a
   13a04:	pop    edi
   13a05:	mov    eax,esi
   13a07:	pop    esi
   13a08:	pop    ebp
   13a09:	ret    0x4
   13a0c:	int3   
   13a0d:	int3   
   13a0e:	int3   
   13a0f:	int3   
   13a10:	int3   
   13a11:	int3   
   13a12:	mov    edi,edi
   13a14:	push   ebp
   13a15:	mov    ebp,esp
   13a17:	push   esi
   13a18:	mov    esi,ecx
   13a1a:	call   0x136a4
   13a1f:	test   BYTE PTR [ebp+0x8],0x1
   13a23:	je     0x13a2c
   13a25:	push   esi
   13a26:	call   0x11d22
   13a2b:	pop    ecx
   13a2c:	mov    eax,esi
   13a2e:	pop    esi
   13a2f:	pop    ebp
   13a30:	ret    0x4
   13a33:	int3   
   13a34:	int3   
   13a35:	int3   
   13a36:	int3   
   13a37:	int3   
   13a38:	mov    edi,edi
   13a3a:	push   ebp
   13a3b:	mov    ebp,esp
   13a3d:	push   esi
   13a3e:	push   edi
   13a3f:	mov    edi,DWORD PTR [ebp+0x8]
   13a42:	push   edi
   13a43:	mov    esi,ecx
   13a45:	call   0x13682
   13a4a:	add    edi,0x8
   13a4d:	push   edi
   13a4e:	lea    ecx,[esi+0x8]
   13a51:	call   0x13682
   13a56:	pop    edi
   13a57:	mov    eax,esi
   13a59:	pop    esi
   13a5a:	pop    ebp
   13a5b:	ret    0x4
   13a5e:	int3   
   13a5f:	int3   
   13a60:	int3   
   13a61:	int3   
   13a62:	int3   
   13a63:	int3   
   13a64:	mov    edi,edi
   13a66:	push   ebp
   13a67:	mov    ebp,esp
   13a69:	mov    eax,DWORD PTR [ebp+0x8]
   13a6c:	push   esi
   13a6d:	mov    esi,ecx
   13a6f:	mov    ecx,DWORD PTR [eax]
   13a71:	add    eax,0x4
   13a74:	mov    DWORD PTR [esi],ecx
   13a76:	push   eax
   13a77:	lea    ecx,[esi+0x4]
   13a7a:	call   0x11d40
   13a7f:	mov    eax,esi
   13a81:	pop    esi
   13a82:	pop    ebp
   13a83:	ret    0x4
   13a86:	int3   
   13a87:	int3   
   13a88:	int3   
   13a89:	int3   
   13a8a:	int3   
   13a8b:	int3   
   13a8c:	mov    edi,edi
   13a8e:	push   ebp
   13a8f:	mov    ebp,esp
   13a91:	push   esi
   13a92:	mov    esi,ecx
   13a94:	mov    ecx,DWORD PTR [esi+0x4]
   13a97:	test   ecx,ecx
   13a99:	je     0x13aa0
   13a9b:	call   0x11d64
   13aa0:	test   BYTE PTR [ebp+0x8],0x1
   13aa4:	je     0x13aad
   13aa6:	push   esi
   13aa7:	call   0x11d22
   13aac:	pop    ecx
   13aad:	mov    eax,esi
   13aaf:	pop    esi
   13ab0:	pop    ebp
   13ab1:	ret    0x4
   13ab4:	int3   
   13ab5:	int3   
   13ab6:	int3   
   13ab7:	int3   
   13ab8:	int3   
   13ab9:	int3   
   13aba:	mov    edi,edi
   13abc:	push   ebp
   13abd:	mov    ebp,esp
   13abf:	push   esi
   13ac0:	push   edi
   13ac1:	mov    edi,DWORD PTR [ebp+0x8]
   13ac4:	push   edi
   13ac5:	mov    esi,ecx
   13ac7:	call   0x136e0
   13acc:	add    edi,0x8
   13acf:	push   edi
   13ad0:	lea    ecx,[esi+0x8]
   13ad3:	call   0x136e0
   13ad8:	pop    edi
   13ad9:	mov    eax,esi
   13adb:	pop    esi
   13adc:	pop    ebp
   13add:	ret    0x4
   13ae0:	int3   
   13ae1:	int3   
   13ae2:	int3   
   13ae3:	int3   
   13ae4:	int3   
   13ae5:	int3   
   13ae6:	mov    edi,edi
   13ae8:	push   ebp
   13ae9:	mov    ebp,esp
   13aeb:	push   esi
   13aec:	push   DWORD PTR [ebp+0x8]
   13aef:	mov    esi,ecx
   13af1:	call   0x13682
   13af6:	push   DWORD PTR [ebp+0xc]
   13af9:	lea    ecx,[esi+0x8]
   13afc:	call   0x139c0
   13b01:	mov    eax,esi
   13b03:	pop    esi
   13b04:	pop    ebp
   13b05:	ret    0x8
   13b08:	int3   
   13b09:	int3   
   13b0a:	int3   
   13b0b:	int3   
   13b0c:	int3   
   13b0d:	int3   
   13b0e:	mov    edi,edi
   13b10:	push   esi
   13b11:	push   edi
   13b12:	push   0xffffffff
   13b14:	mov    edi,0x1e5e8
   13b19:	push   edi
   13b1a:	mov    esi,ecx
   13b1c:	call   0x12b6e
   13b21:	push   0xffffffff
   13b23:	push   edi
   13b24:	lea    ecx,[esi+0x8]
   13b27:	call   0x12b6e
   13b2c:	push   0xffffffff
   13b2e:	push   edi
   13b2f:	lea    ecx,[esi+0x10]
   13b32:	call   0x12b6e
   13b37:	push   0xffffffff
   13b39:	push   edi
   13b3a:	lea    ecx,[esi+0x18]
   13b3d:	call   0x12b6e
   13b42:	push   0xffffffff
   13b44:	push   edi
   13b45:	lea    ecx,[esi+0x38]
   13b48:	call   0x12b6e
   13b4d:	xor    eax,eax
   13b4f:	mov    DWORD PTR [esi+0x20],eax
   13b52:	mov    DWORD PTR [esi+0x30],eax
   13b55:	mov    DWORD PTR [esi+0x34],eax
   13b58:	pop    edi
   13b59:	mov    eax,esi
   13b5b:	pop    esi
   13b5c:	ret    
   13b5d:	int3   
   13b5e:	int3   
   13b5f:	int3   
   13b60:	int3   
   13b61:	int3   
   13b62:	mov    edi,edi
   13b64:	push   ebp
   13b65:	mov    ebp,esp
   13b67:	push   esi
   13b68:	push   DWORD PTR [ebp+0x8]
   13b6b:	mov    esi,ecx
   13b6d:	call   0x13682
   13b72:	push   0xffffffff
   13b74:	push   0x1e5e8
   13b79:	lea    ecx,[esi+0x8]
   13b7c:	call   0x12b6e
   13b81:	push   DWORD PTR [ebp+0xc]
   13b84:	lea    ecx,[esi+0x10]
   13b87:	call   0x13682
   13b8c:	push   DWORD PTR [ebp+0x10]
   13b8f:	lea    ecx,[esi+0x18]
   13b92:	call   0x13682
   13b97:	mov    eax,DWORD PTR [ebp+0x18]
   13b9a:	push   DWORD PTR [ebp+0x14]
   13b9d:	lea    ecx,[esi+0x38]
   13ba0:	mov    DWORD PTR [esi+0x20],eax
   13ba3:	call   0x13682
   13ba8:	and    DWORD PTR [esi+0x30],0x0
   13bac:	and    DWORD PTR [esi+0x34],0x0
   13bb0:	mov    eax,DWORD PTR [ebp+0x1c]
   13bb3:	mov    ecx,DWORD PTR [eax]
   13bb5:	mov    DWORD PTR [esi+0x28],ecx
   13bb8:	mov    eax,DWORD PTR [eax+0x4]
   13bbb:	mov    DWORD PTR [esi+0x2c],eax
   13bbe:	mov    eax,esi
   13bc0:	pop    esi
   13bc1:	pop    ebp
   13bc2:	ret    0x18
   13bc5:	int3   
   13bc6:	int3   
   13bc7:	int3   
   13bc8:	int3   
   13bc9:	int3   
   13bca:	mov    edi,edi
   13bcc:	push   ebp
   13bcd:	mov    ebp,esp
   13bcf:	push   esi
   13bd0:	push   0xc
   13bd2:	mov    esi,ecx
   13bd4:	call   0x11cec
   13bd9:	pop    ecx
   13bda:	test   eax,eax
   13bdc:	je     0x13bed
   13bde:	push   DWORD PTR [ebp+0xc]
   13be1:	mov    ecx,eax
   13be3:	push   DWORD PTR [ebp+0x8]
   13be6:	call   0x13594
   13beb:	jmp    0x13bef
   13bed:	xor    eax,eax
   13bef:	mov    DWORD PTR [esi],eax
   13bf1:	mov    eax,esi
   13bf3:	pop    esi
   13bf4:	pop    ebp
   13bf5:	ret    0x8
   13bf8:	int3   
   13bf9:	int3   
   13bfa:	int3   
   13bfb:	int3   
   13bfc:	int3   
   13bfd:	int3   
   13bfe:	mov    edi,edi
   13c00:	push   ebp
   13c01:	mov    ebp,esp
   13c03:	push   ecx
   13c04:	push   esi
   13c05:	push   edi
   13c06:	mov    edi,DWORD PTR [ebp+0xc]
   13c09:	push   edi
   13c0a:	mov    esi,ecx
   13c0c:	call   0x12cd4
   13c11:	mov    esi,DWORD PTR [esi+0x4]
   13c14:	mov    DWORD PTR [ebp+0xc],eax
   13c17:	cmp    eax,esi
   13c19:	je     0x13c27
   13c1b:	mov    ecx,DWORD PTR [edi]
   13c1d:	cmp    ecx,DWORD PTR [eax+0xc]
   13c20:	jb     0x13c27
   13c22:	lea    eax,[ebp+0xc]
   13c25:	jmp    0x13c2d
   13c27:	mov    DWORD PTR [ebp-0x4],esi
   13c2a:	lea    eax,[ebp-0x4]
   13c2d:	mov    ecx,DWORD PTR [eax]
   13c2f:	mov    eax,DWORD PTR [ebp+0x8]
   13c32:	pop    edi
   13c33:	mov    DWORD PTR [eax],ecx
   13c35:	pop    esi
   13c36:	leave  
   13c37:	ret    0x8
   13c3a:	int3   
   13c3b:	int3   
   13c3c:	int3   
   13c3d:	int3   
   13c3e:	int3   
   13c3f:	int3   
   13c40:	mov    edi,edi
   13c42:	push   ebp
   13c43:	mov    ebp,esp
   13c45:	push   ecx
   13c46:	push   esi
   13c47:	push   DWORD PTR [ebp+0xc]
   13c4a:	mov    esi,ecx
   13c4c:	call   0x12daa
   13c51:	mov    DWORD PTR [ebp-0x4],eax
   13c54:	cmp    eax,DWORD PTR [esi+0x4]
   13c57:	je     0x13c6e
   13c59:	add    eax,0x10
   13c5c:	push   eax
   13c5d:	push   DWORD PTR [ebp+0xc]
   13c60:	call   0x19eec
   13c65:	test   al,al
   13c67:	jne    0x13c6e
   13c69:	lea    eax,[ebp-0x4]
   13c6c:	jmp    0x13c77
   13c6e:	mov    eax,DWORD PTR [esi+0x4]
   13c71:	mov    DWORD PTR [ebp+0xc],eax
   13c74:	lea    eax,[ebp+0xc]
   13c77:	mov    ecx,DWORD PTR [eax]
   13c79:	mov    eax,DWORD PTR [ebp+0x8]
   13c7c:	mov    DWORD PTR [eax],ecx
   13c7e:	pop    esi
   13c7f:	leave  
   13c80:	ret    0x8
   13c83:	int3   
   13c84:	int3   
   13c85:	int3   
   13c86:	int3   
   13c87:	int3   
   13c88:	mov    edi,edi
   13c8a:	push   ebp
   13c8b:	mov    ebp,esp
   13c8d:	push   esi
   13c8e:	push   DWORD PTR [ebp+0x8]
   13c91:	mov    esi,ecx
   13c93:	call   0x13682
   13c98:	push   DWORD PTR [ebp+0xc]
   13c9b:	lea    ecx,[esi+0x8]
   13c9e:	call   0x1380a
   13ca3:	mov    eax,esi
   13ca5:	pop    esi
   13ca6:	pop    ebp
   13ca7:	ret    0x8
   13caa:	int3   
   13cab:	int3   
   13cac:	int3   
   13cad:	int3   
   13cae:	int3   
   13caf:	int3   
   13cb0:	mov    edi,edi
   13cb2:	push   ebp
   13cb3:	mov    ebp,esp
   13cb5:	push   ecx
   13cb6:	push   esi
   13cb7:	push   DWORD PTR [ebp+0xc]
   13cba:	mov    esi,ecx
   13cbc:	call   0x12dea
   13cc1:	mov    DWORD PTR [ebp-0x4],eax
   13cc4:	cmp    eax,DWORD PTR [esi+0x4]
   13cc7:	je     0x13cde
   13cc9:	add    eax,0xc
   13ccc:	push   eax
   13ccd:	push   DWORD PTR [ebp+0xc]
   13cd0:	call   0x19eec
   13cd5:	test   al,al
   13cd7:	jne    0x13cde
   13cd9:	lea    eax,[ebp-0x4]
   13cdc:	jmp    0x13ce7
   13cde:	mov    eax,DWORD PTR [esi+0x4]
   13ce1:	mov    DWORD PTR [ebp+0xc],eax
   13ce4:	lea    eax,[ebp+0xc]
   13ce7:	mov    ecx,DWORD PTR [eax]
   13ce9:	mov    eax,DWORD PTR [ebp+0x8]
   13cec:	mov    DWORD PTR [eax],ecx
   13cee:	pop    esi
   13cef:	leave  
   13cf0:	ret    0x8
   13cf3:	int3   
   13cf4:	int3   
   13cf5:	int3   
   13cf6:	int3   
   13cf7:	int3   
   13cf8:	mov    edi,edi
   13cfa:	push   ebp
   13cfb:	mov    ebp,esp
   13cfd:	push   ecx
   13cfe:	push   esi
   13cff:	push   edi
   13d00:	mov    edi,DWORD PTR [ebp+0xc]
   13d03:	push   edi
   13d04:	mov    esi,ecx
   13d06:	call   0x12e2a
   13d0b:	mov    esi,DWORD PTR [esi+0x4]
   13d0e:	mov    DWORD PTR [ebp+0xc],eax
   13d11:	cmp    eax,esi
   13d13:	je     0x13d21
   13d15:	mov    ecx,DWORD PTR [edi]
   13d17:	cmp    ecx,DWORD PTR [eax+0xc]
   13d1a:	jl     0x13d21
   13d1c:	lea    eax,[ebp+0xc]
   13d1f:	jmp    0x13d27
   13d21:	mov    DWORD PTR [ebp-0x4],esi
   13d24:	lea    eax,[ebp-0x4]
   13d27:	mov    ecx,DWORD PTR [eax]
   13d29:	mov    eax,DWORD PTR [ebp+0x8]
   13d2c:	pop    edi
   13d2d:	mov    DWORD PTR [eax],ecx
   13d2f:	pop    esi
   13d30:	leave  
   13d31:	ret    0x8
   13d34:	int3   
   13d35:	int3   
   13d36:	int3   
   13d37:	int3   
   13d38:	int3   
   13d39:	int3   
   13d3a:	mov    edi,edi
   13d3c:	push   ebp
   13d3d:	mov    ebp,esp
   13d3f:	push   ecx
   13d40:	mov    eax,DWORD PTR [ecx]
   13d42:	lea    ecx,[ebp-0x4]
   13d45:	mov    DWORD PTR [ebp-0x4],eax
   13d48:	call   0x12e98
   13d4d:	mov    eax,DWORD PTR [ebp-0x4]
   13d50:	add    eax,0xc
   13d53:	leave  
   13d54:	ret    
   13d55:	int3   
   13d56:	int3   
   13d57:	int3   
   13d58:	int3   
   13d59:	int3   
   13d5a:	mov    edi,edi
   13d5c:	push   ebp
   13d5d:	mov    ebp,esp
   13d5f:	push   ecx
   13d60:	push   esi
   13d61:	push   DWORD PTR [ebp+0xc]
   13d64:	mov    esi,ecx
   13d66:	call   0x12fac
   13d6b:	mov    DWORD PTR [ebp-0x4],eax
   13d6e:	cmp    eax,DWORD PTR [esi+0x4]
   13d71:	je     0x13d88
   13d73:	add    eax,0x10
   13d76:	push   eax
   13d77:	push   DWORD PTR [ebp+0xc]
   13d7a:	call   0x19eec
   13d7f:	test   al,al
   13d81:	jne    0x13d88
   13d83:	lea    eax,[ebp-0x4]
   13d86:	jmp    0x13d91
   13d88:	mov    eax,DWORD PTR [esi+0x4]
   13d8b:	mov    DWORD PTR [ebp+0xc],eax
   13d8e:	lea    eax,[ebp+0xc]
   13d91:	mov    ecx,DWORD PTR [eax]
   13d93:	mov    eax,DWORD PTR [ebp+0x8]
   13d96:	mov    DWORD PTR [eax],ecx
   13d98:	pop    esi
   13d99:	leave  
   13d9a:	ret    0x8
   13d9d:	int3   
   13d9e:	int3   
   13d9f:	int3   
   13da0:	int3   
   13da1:	int3   
   13da2:	mov    edi,edi
   13da4:	push   ebp
   13da5:	mov    ebp,esp
   13da7:	push   ecx
   13da8:	push   ecx
   13da9:	push   ebx
   13daa:	push   esi
   13dab:	mov    DWORD PTR [ebp-0x4],ecx
   13dae:	push   edi
   13daf:	mov    edi,DWORD PTR [ebp+0xc]
   13db2:	lea    ecx,[ebp+0xc]
   13db5:	call   0x10ef4
   13dba:	mov    esi,DWORD PTR [edi]
   13dbc:	mov    eax,ds:0x786b0
   13dc1:	mov    ebx,edi
   13dc3:	mov    DWORD PTR [ebp-0x8],esi
   13dc6:	cmp    esi,eax
   13dc8:	jne    0x13de6
   13dca:	mov    esi,DWORD PTR [edi+0x8]
   13dcd:	mov    eax,DWORD PTR [ebx+0x4]
   13dd0:	mov    ecx,DWORD PTR [ebp-0x4]
   13dd3:	mov    DWORD PTR [esi+0x4],eax
   13dd6:	mov    eax,DWORD PTR [ecx+0x4]
   13dd9:	cmp    DWORD PTR [eax+0x4],edi
   13ddc:	jne    0x13e5b
   13dde:	mov    DWORD PTR [eax+0x4],esi
   13de1:	jmp    0x13e69
   13de6:	mov    ecx,DWORD PTR [edi+0x8]
   13de9:	cmp    ecx,eax
   13deb:	je     0x13dcd
   13ded:	push   ecx
   13dee:	call   0x10e0a
   13df3:	mov    ebx,eax
   13df5:	mov    esi,DWORD PTR [ebx+0x8]
   13df8:	cmp    ebx,edi
   13dfa:	je     0x13dcd
   13dfc:	mov    eax,DWORD PTR [ebp-0x8]
   13dff:	mov    DWORD PTR [eax+0x4],ebx
   13e02:	mov    eax,DWORD PTR [edi]
   13e04:	mov    DWORD PTR [ebx],eax
   13e06:	cmp    ebx,DWORD PTR [edi+0x8]
   13e09:	jne    0x13e10
   13e0b:	mov    DWORD PTR [esi+0x4],ebx
   13e0e:	jmp    0x13e27
   13e10:	mov    eax,DWORD PTR [ebx+0x4]
   13e13:	mov    DWORD PTR [esi+0x4],eax
   13e16:	mov    eax,DWORD PTR [ebx+0x4]
   13e19:	mov    DWORD PTR [eax],esi
   13e1b:	mov    eax,DWORD PTR [edi+0x8]
   13e1e:	mov    DWORD PTR [ebx+0x8],eax
   13e21:	mov    eax,DWORD PTR [edi+0x8]
   13e24:	mov    DWORD PTR [eax+0x4],ebx
   13e27:	mov    eax,DWORD PTR [ebp-0x4]
   13e2a:	mov    eax,DWORD PTR [eax+0x4]
   13e2d:	cmp    DWORD PTR [eax+0x4],edi
   13e30:	jne    0x13e37
   13e32:	mov    DWORD PTR [eax+0x4],ebx
   13e35:	jmp    0x13e45
   13e37:	mov    eax,DWORD PTR [edi+0x4]
   13e3a:	cmp    DWORD PTR [eax],edi
   13e3c:	jne    0x13e42
   13e3e:	mov    DWORD PTR [eax],ebx
   13e40:	jmp    0x13e45
   13e42:	mov    DWORD PTR [eax+0x8],ebx
   13e45:	mov    eax,DWORD PTR [edi+0x4]
   13e48:	mov    DWORD PTR [ebx+0x4],eax
   13e4b:	mov    eax,DWORD PTR [ebx+0x14]
   13e4e:	mov    ecx,DWORD PTR [edi+0x14]
   13e51:	mov    DWORD PTR [ebx+0x14],ecx
   13e54:	mov    DWORD PTR [edi+0x14],eax
   13e57:	mov    ebx,edi
   13e59:	jmp    0x13ebc
   13e5b:	mov    eax,DWORD PTR [edi+0x4]
   13e5e:	cmp    DWORD PTR [eax],edi
   13e60:	jne    0x13e66
   13e62:	mov    DWORD PTR [eax],esi
   13e64:	jmp    0x13e69
   13e66:	mov    DWORD PTR [eax+0x8],esi
   13e69:	mov    eax,DWORD PTR [ecx+0x4]
   13e6c:	mov    DWORD PTR [ebp-0x8],eax
   13e6f:	cmp    DWORD PTR [eax],edi
   13e71:	jne    0x13e93
   13e73:	mov    edx,DWORD PTR [edi+0x8]
   13e76:	cmp    edx,DWORD PTR ds:0x786b0
   13e7c:	jne    0x13e85
   13e7e:	mov    edx,DWORD PTR [edi+0x4]
   13e81:	mov    DWORD PTR [eax],edx
   13e83:	jmp    0x13e93
   13e85:	push   esi
   13e86:	call   0x10e0a
   13e8b:	mov    ecx,DWORD PTR [ebp-0x8]
   13e8e:	mov    DWORD PTR [ecx],eax
   13e90:	mov    ecx,DWORD PTR [ebp-0x4]
   13e93:	mov    eax,DWORD PTR [ecx+0x4]
   13e96:	mov    DWORD PTR [ebp-0x8],eax
   13e99:	cmp    DWORD PTR [eax+0x8],edi
   13e9c:	jne    0x13ebc
   13e9e:	mov    ecx,DWORD PTR [edi]
   13ea0:	cmp    ecx,DWORD PTR ds:0x786b0
   13ea6:	jne    0x13eb0
   13ea8:	mov    ecx,DWORD PTR [edi+0x4]
   13eab:	mov    DWORD PTR [eax+0x8],ecx
   13eae:	jmp    0x13ebc
   13eb0:	push   esi
   13eb1:	call   0x10de8
   13eb6:	mov    ecx,DWORD PTR [ebp-0x8]
   13eb9:	mov    DWORD PTR [ecx+0x8],eax
   13ebc:	xor    edi,edi
   13ebe:	inc    edi
   13ebf:	cmp    DWORD PTR [ebx+0x14],edi
   13ec2:	jne    0x13fd9
   13ec8:	jmp    0x13f87
   13ecd:	cmp    DWORD PTR [esi+0x14],edi
   13ed0:	jne    0x13fd6
   13ed6:	mov    eax,DWORD PTR [esi+0x4]
   13ed9:	cmp    esi,DWORD PTR [eax]
   13edb:	jne    0x13f52
   13edd:	mov    eax,DWORD PTR [eax+0x8]
   13ee0:	cmp    DWORD PTR [eax+0x14],0x0
   13ee4:	jne    0x13efe
   13ee6:	mov    DWORD PTR [eax+0x14],edi
   13ee9:	mov    eax,DWORD PTR [esi+0x4]
   13eec:	and    DWORD PTR [eax+0x14],0x0
   13ef0:	push   DWORD PTR [esi+0x4]
   13ef3:	call   0x12d0c
   13ef8:	mov    eax,DWORD PTR [esi+0x4]
   13efb:	mov    eax,DWORD PTR [eax+0x8]
   13efe:	mov    ecx,DWORD PTR [eax]
   13f00:	cmp    DWORD PTR [ecx+0x14],edi
   13f03:	jne    0x13f0d
   13f05:	mov    ecx,DWORD PTR [eax+0x8]
   13f08:	cmp    DWORD PTR [ecx+0x14],edi
   13f0b:	je     0x13f80
   13f0d:	mov    ecx,DWORD PTR [eax+0x8]
   13f10:	cmp    DWORD PTR [ecx+0x14],edi
   13f13:	jne    0x13f2d
   13f15:	mov    ecx,DWORD PTR [eax]
   13f17:	mov    DWORD PTR [ecx+0x14],edi
   13f1a:	mov    ecx,DWORD PTR [ebp-0x4]
   13f1d:	and    DWORD PTR [eax+0x14],0x0
   13f21:	push   eax
   13f22:	call   0x12d5a
   13f27:	mov    eax,DWORD PTR [esi+0x4]
   13f2a:	mov    eax,DWORD PTR [eax+0x8]
   13f2d:	mov    ecx,DWORD PTR [esi+0x4]
   13f30:	mov    ecx,DWORD PTR [ecx+0x14]
   13f33:	mov    DWORD PTR [eax+0x14],ecx
   13f36:	mov    ecx,DWORD PTR [esi+0x4]
   13f39:	mov    DWORD PTR [ecx+0x14],edi
   13f3c:	mov    eax,DWORD PTR [eax+0x8]
   13f3f:	mov    ecx,DWORD PTR [ebp-0x4]
   13f42:	mov    DWORD PTR [eax+0x14],edi
   13f45:	push   DWORD PTR [esi+0x4]
   13f48:	call   0x12d0c
   13f4d:	jmp    0x13fd6
   13f52:	mov    eax,DWORD PTR [eax]
   13f54:	cmp    DWORD PTR [eax+0x14],0x0
   13f58:	jne    0x13f71
   13f5a:	mov    DWORD PTR [eax+0x14],edi
   13f5d:	mov    eax,DWORD PTR [esi+0x4]
   13f60:	and    DWORD PTR [eax+0x14],0x0
   13f64:	push   DWORD PTR [esi+0x4]
   13f67:	call   0x12d5a
   13f6c:	mov    eax,DWORD PTR [esi+0x4]
   13f6f:	mov    eax,DWORD PTR [eax]
   13f71:	mov    ecx,DWORD PTR [eax+0x8]
   13f74:	cmp    DWORD PTR [ecx+0x14],edi
   13f77:	jne    0x13f98
   13f79:	mov    ecx,DWORD PTR [eax]
   13f7b:	cmp    DWORD PTR [ecx+0x14],edi
   13f7e:	jne    0x13f98
   13f80:	and    DWORD PTR [eax+0x14],0x0
   13f84:	mov    esi,DWORD PTR [esi+0x4]
   13f87:	mov    ecx,DWORD PTR [ebp-0x4]
   13f8a:	mov    eax,DWORD PTR [ecx+0x4]
   13f8d:	cmp    esi,DWORD PTR [eax+0x4]
   13f90:	jne    0x13ecd
   13f96:	jmp    0x13fd6
   13f98:	mov    ecx,DWORD PTR [eax]
   13f9a:	cmp    DWORD PTR [ecx+0x14],edi
   13f9d:	jne    0x13fb7
   13f9f:	mov    ecx,DWORD PTR [eax+0x8]
   13fa2:	mov    DWORD PTR [ecx+0x14],edi
   13fa5:	mov    ecx,DWORD PTR [ebp-0x4]
   13fa8:	and    DWORD PTR [eax+0x14],0x0
   13fac:	push   eax
   13fad:	call   0x12d0c
   13fb2:	mov    eax,DWORD PTR [esi+0x4]
   13fb5:	mov    eax,DWORD PTR [eax]
   13fb7:	mov    ecx,DWORD PTR [esi+0x4]
   13fba:	mov    ecx,DWORD PTR [ecx+0x14]
   13fbd:	mov    DWORD PTR [eax+0x14],ecx
   13fc0:	mov    ecx,DWORD PTR [esi+0x4]
   13fc3:	mov    DWORD PTR [ecx+0x14],edi
   13fc6:	mov    eax,DWORD PTR [eax]
   13fc8:	mov    ecx,DWORD PTR [ebp-0x4]
   13fcb:	mov    DWORD PTR [eax+0x14],edi
   13fce:	push   DWORD PTR [esi+0x4]
   13fd1:	call   0x12d5a
   13fd6:	mov    DWORD PTR [esi+0x14],edi
   13fd9:	push   ebx
   13fda:	call   0x11d22
   13fdf:	mov    eax,DWORD PTR [ebp-0x4]
   13fe2:	dec    DWORD PTR [eax+0xc]
   13fe5:	mov    eax,DWORD PTR [ebp+0x8]
   13fe8:	pop    ecx
   13fe9:	mov    ecx,DWORD PTR [ebp+0xc]
   13fec:	pop    edi
   13fed:	pop    esi
   13fee:	mov    DWORD PTR [eax],ecx
   13ff0:	pop    ebx
   13ff1:	leave  
   13ff2:	ret    0x8
   13ff5:	int3   
   13ff6:	int3   
   13ff7:	int3   
   13ff8:	int3   
   13ff9:	int3   
   13ffa:	mov    edi,edi
   13ffc:	push   ebp
   13ffd:	mov    ebp,esp
   13fff:	push   esi
   14000:	push   edi
   14001:	push   DWORD PTR [ebp+0xc]
   14004:	mov    edi,ecx
   14006:	call   0x1308a
   1400b:	push   DWORD PTR [ebp+0xc]
   1400e:	mov    ecx,edi
   14010:	mov    esi,eax
   14012:	call   0x12cd4
   14017:	mov    ecx,DWORD PTR [ebp+0x8]
   1401a:	pop    edi
   1401b:	mov    DWORD PTR [ecx],eax
   1401d:	mov    DWORD PTR [ecx+0x4],esi
   14020:	mov    eax,ecx
   14022:	pop    esi
   14023:	pop    ebp
   14024:	ret    0x8
   14027:	int3   
   14028:	int3   
   14029:	int3   
   1402a:	int3   
   1402b:	int3   
   1402c:	mov    edi,edi
   1402e:	push   ebp
   1402f:	mov    ebp,esp
   14031:	push   esi
   14032:	push   edi
   14033:	push   DWORD PTR [ebp+0xc]
   14036:	mov    edi,ecx
   14038:	call   0x130c2
   1403d:	push   DWORD PTR [ebp+0xc]
   14040:	mov    ecx,edi
   14042:	mov    esi,eax
   14044:	call   0x12daa
   14049:	mov    ecx,DWORD PTR [ebp+0x8]
   1404c:	pop    edi
   1404d:	mov    DWORD PTR [ecx],eax
   1404f:	mov    DWORD PTR [ecx+0x4],esi
   14052:	mov    eax,ecx
   14054:	pop    esi
   14055:	pop    ebp
   14056:	ret    0x8
   14059:	int3   
   1405a:	int3   
   1405b:	int3   
   1405c:	int3   
   1405d:	int3   
   1405e:	mov    edi,edi
   14060:	push   ebp
   14061:	mov    ebp,esp
   14063:	push   esi
   14064:	push   edi
   14065:	push   DWORD PTR [ebp+0xc]
   14068:	mov    edi,ecx
   1406a:	call   0x131a0
   1406f:	push   DWORD PTR [ebp+0xc]
   14072:	mov    ecx,edi
   14074:	mov    esi,eax
   14076:	call   0x12dea
   1407b:	mov    ecx,DWORD PTR [ebp+0x8]
   1407e:	pop    edi
   1407f:	mov    DWORD PTR [ecx],eax
   14081:	mov    DWORD PTR [ecx+0x4],esi
   14084:	mov    eax,ecx
   14086:	pop    esi
   14087:	pop    ebp
   14088:	ret    0x8
   1408b:	int3   
   1408c:	int3   
   1408d:	int3   
   1408e:	int3   
   1408f:	int3   
   14090:	mov    edi,edi
   14092:	push   ebp
   14093:	mov    ebp,esp
   14095:	push   esi
   14096:	push   edi
   14097:	push   DWORD PTR [ebp+0xc]
   1409a:	mov    edi,ecx
   1409c:	call   0x1327e
   140a1:	push   DWORD PTR [ebp+0xc]
   140a4:	mov    ecx,edi
   140a6:	mov    esi,eax
   140a8:	call   0x12e2a
   140ad:	mov    ecx,DWORD PTR [ebp+0x8]
   140b0:	pop    edi
   140b1:	mov    DWORD PTR [ecx],eax
   140b3:	mov    DWORD PTR [ecx+0x4],esi
   140b6:	mov    eax,ecx
   140b8:	pop    esi
   140b9:	pop    ebp
   140ba:	ret    0x8
   140bd:	int3   
   140be:	int3   
   140bf:	int3   
   140c0:	int3   
   140c1:	int3   
   140c2:	mov    edi,edi
   140c4:	push   ebp
   140c5:	mov    ebp,esp
   140c7:	push   ecx
   140c8:	push   esi
   140c9:	push   DWORD PTR [ebp+0xc]
   140cc:	mov    esi,ecx
   140ce:	call   0x132b6
   140d3:	mov    DWORD PTR [ebp-0x4],eax
   140d6:	cmp    eax,DWORD PTR [esi+0x4]
   140d9:	je     0x140f0
   140db:	add    eax,0xc
   140de:	push   eax
   140df:	push   DWORD PTR [ebp+0xc]
   140e2:	call   0x19f1c
   140e7:	test   al,al
   140e9:	jne    0x140f0
   140eb:	lea    eax,[ebp-0x4]
   140ee:	jmp    0x140f9
   140f0:	mov    eax,DWORD PTR [esi+0x4]
   140f3:	mov    DWORD PTR [ebp+0xc],eax
   140f6:	lea    eax,[ebp+0xc]
   140f9:	mov    ecx,DWORD PTR [eax]
   140fb:	mov    eax,DWORD PTR [ebp+0x8]
   140fe:	mov    DWORD PTR [eax],ecx
   14100:	pop    esi
   14101:	leave  
   14102:	ret    0x8
   14105:	int3   
   14106:	int3   
   14107:	int3   
   14108:	int3   
   14109:	int3   
   1410a:	mov    edi,edi
   1410c:	push   ebp
   1410d:	mov    ebp,esp
   1410f:	push   ecx
   14110:	push   ecx
   14111:	push   ebx
   14112:	push   esi
   14113:	mov    DWORD PTR [ebp-0x4],ecx
   14116:	push   edi
   14117:	mov    edi,DWORD PTR [ebp+0xc]
   1411a:	lea    ecx,[ebp+0xc]
   1411d:	call   0x12ed8
   14122:	mov    esi,DWORD PTR [edi]
   14124:	mov    eax,ds:0x786b4
   14129:	mov    ebx,edi
   1412b:	mov    DWORD PTR [ebp-0x8],esi
   1412e:	cmp    esi,eax
   14130:	jne    0x1414e
   14132:	mov    esi,DWORD PTR [edi+0x8]
   14135:	mov    eax,DWORD PTR [ebx+0x4]
   14138:	mov    ecx,DWORD PTR [ebp-0x4]
   1413b:	mov    DWORD PTR [esi+0x4],eax
   1413e:	mov    eax,DWORD PTR [ecx+0x4]
   14141:	cmp    DWORD PTR [eax+0x4],edi
   14144:	jne    0x141c3
   14146:	mov    DWORD PTR [eax+0x4],esi
   14149:	jmp    0x141d1
   1414e:	mov    ecx,DWORD PTR [edi+0x8]
   14151:	cmp    ecx,eax
   14153:	je     0x14135
   14155:	push   ecx
   14156:	call   0x10e4e
   1415b:	mov    ebx,eax
   1415d:	mov    esi,DWORD PTR [ebx+0x8]
   14160:	cmp    ebx,edi
   14162:	je     0x14135
   14164:	mov    eax,DWORD PTR [ebp-0x8]
   14167:	mov    DWORD PTR [eax+0x4],ebx
   1416a:	mov    eax,DWORD PTR [edi]
   1416c:	mov    DWORD PTR [ebx],eax
   1416e:	cmp    ebx,DWORD PTR [edi+0x8]
   14171:	jne    0x14178
   14173:	mov    DWORD PTR [esi+0x4],ebx
   14176:	jmp    0x1418f
   14178:	mov    eax,DWORD PTR [ebx+0x4]
   1417b:	mov    DWORD PTR [esi+0x4],eax
   1417e:	mov    eax,DWORD PTR [ebx+0x4]
   14181:	mov    DWORD PTR [eax],esi
   14183:	mov    eax,DWORD PTR [edi+0x8]
   14186:	mov    DWORD PTR [ebx+0x8],eax
   14189:	mov    eax,DWORD PTR [edi+0x8]
   1418c:	mov    DWORD PTR [eax+0x4],ebx
   1418f:	mov    eax,DWORD PTR [ebp-0x4]
   14192:	mov    eax,DWORD PTR [eax+0x4]
   14195:	cmp    DWORD PTR [eax+0x4],edi
   14198:	jne    0x1419f
   1419a:	mov    DWORD PTR [eax+0x4],ebx
   1419d:	jmp    0x141ad
   1419f:	mov    eax,DWORD PTR [edi+0x4]
   141a2:	cmp    DWORD PTR [eax],edi
   141a4:	jne    0x141aa
   141a6:	mov    DWORD PTR [eax],ebx
   141a8:	jmp    0x141ad
   141aa:	mov    DWORD PTR [eax+0x8],ebx
   141ad:	mov    eax,DWORD PTR [edi+0x4]
   141b0:	mov    DWORD PTR [ebx+0x4],eax
   141b3:	mov    eax,DWORD PTR [ebx+0x10]
   141b6:	mov    ecx,DWORD PTR [edi+0x10]
   141b9:	mov    DWORD PTR [ebx+0x10],ecx
   141bc:	mov    DWORD PTR [edi+0x10],eax
   141bf:	mov    ebx,edi
   141c1:	jmp    0x14224
   141c3:	mov    eax,DWORD PTR [edi+0x4]
   141c6:	cmp    DWORD PTR [eax],edi
   141c8:	jne    0x141ce
   141ca:	mov    DWORD PTR [eax],esi
   141cc:	jmp    0x141d1
   141ce:	mov    DWORD PTR [eax+0x8],esi
   141d1:	mov    eax,DWORD PTR [ecx+0x4]
   141d4:	mov    DWORD PTR [ebp-0x8],eax
   141d7:	cmp    DWORD PTR [eax],edi
   141d9:	jne    0x141fb
   141db:	mov    edx,DWORD PTR [edi+0x8]
   141de:	cmp    edx,DWORD PTR ds:0x786b4
   141e4:	jne    0x141ed
   141e6:	mov    edx,DWORD PTR [edi+0x4]
   141e9:	mov    DWORD PTR [eax],edx
   141eb:	jmp    0x141fb
   141ed:	push   esi
   141ee:	call   0x10e4e
   141f3:	mov    ecx,DWORD PTR [ebp-0x8]
   141f6:	mov    DWORD PTR [ecx],eax
   141f8:	mov    ecx,DWORD PTR [ebp-0x4]
   141fb:	mov    eax,DWORD PTR [ecx+0x4]
   141fe:	mov    DWORD PTR [ebp-0x8],eax
   14201:	cmp    DWORD PTR [eax+0x8],edi
   14204:	jne    0x14224
   14206:	mov    ecx,DWORD PTR [edi]
   14208:	cmp    ecx,DWORD PTR ds:0x786b4
   1420e:	jne    0x14218
   14210:	mov    ecx,DWORD PTR [edi+0x4]
   14213:	mov    DWORD PTR [eax+0x8],ecx
   14216:	jmp    0x14224
   14218:	push   esi
   14219:	call   0x10e2c
   1421e:	mov    ecx,DWORD PTR [ebp-0x8]
   14221:	mov    DWORD PTR [ecx+0x8],eax
   14224:	xor    edi,edi
   14226:	inc    edi
   14227:	cmp    DWORD PTR [ebx+0x10],edi
   1422a:	jne    0x14341
   14230:	jmp    0x142ef
   14235:	cmp    DWORD PTR [esi+0x10],edi
   14238:	jne    0x1433e
   1423e:	mov    eax,DWORD PTR [esi+0x4]
   14241:	cmp    esi,DWORD PTR [eax]
   14243:	jne    0x142ba
   14245:	mov    eax,DWORD PTR [eax+0x8]
   14248:	cmp    DWORD PTR [eax+0x10],0x0
   1424c:	jne    0x14266
   1424e:	mov    DWORD PTR [eax+0x10],edi
   14251:	mov    eax,DWORD PTR [esi+0x4]
   14254:	and    DWORD PTR [eax+0x10],0x0
   14258:	push   DWORD PTR [esi+0x4]
   1425b:	call   0x12f0e
   14260:	mov    eax,DWORD PTR [esi+0x4]
   14263:	mov    eax,DWORD PTR [eax+0x8]
   14266:	mov    ecx,DWORD PTR [eax]
   14268:	cmp    DWORD PTR [ecx+0x10],edi
   1426b:	jne    0x14275
   1426d:	mov    ecx,DWORD PTR [eax+0x8]
   14270:	cmp    DWORD PTR [ecx+0x10],edi
   14273:	je     0x142e8
   14275:	mov    ecx,DWORD PTR [eax+0x8]
   14278:	cmp    DWORD PTR [ecx+0x10],edi
   1427b:	jne    0x14295
   1427d:	mov    ecx,DWORD PTR [eax]
   1427f:	mov    DWORD PTR [ecx+0x10],edi
   14282:	mov    ecx,DWORD PTR [ebp-0x4]
   14285:	and    DWORD PTR [eax+0x10],0x0
   14289:	push   eax
   1428a:	call   0x12f5c
   1428f:	mov    eax,DWORD PTR [esi+0x4]
   14292:	mov    eax,DWORD PTR [eax+0x8]
   14295:	mov    ecx,DWORD PTR [esi+0x4]
   14298:	mov    ecx,DWORD PTR [ecx+0x10]
   1429b:	mov    DWORD PTR [eax+0x10],ecx
   1429e:	mov    ecx,DWORD PTR [esi+0x4]
   142a1:	mov    DWORD PTR [ecx+0x10],edi
   142a4:	mov    eax,DWORD PTR [eax+0x8]
   142a7:	mov    ecx,DWORD PTR [ebp-0x4]
   142aa:	mov    DWORD PTR [eax+0x10],edi
   142ad:	push   DWORD PTR [esi+0x4]
   142b0:	call   0x12f0e
   142b5:	jmp    0x1433e
   142ba:	mov    eax,DWORD PTR [eax]
   142bc:	cmp    DWORD PTR [eax+0x10],0x0
   142c0:	jne    0x142d9
   142c2:	mov    DWORD PTR [eax+0x10],edi
   142c5:	mov    eax,DWORD PTR [esi+0x4]
   142c8:	and    DWORD PTR [eax+0x10],0x0
   142cc:	push   DWORD PTR [esi+0x4]
   142cf:	call   0x12f5c
   142d4:	mov    eax,DWORD PTR [esi+0x4]
   142d7:	mov    eax,DWORD PTR [eax]
   142d9:	mov    ecx,DWORD PTR [eax+0x8]
   142dc:	cmp    DWORD PTR [ecx+0x10],edi
   142df:	jne    0x14300
   142e1:	mov    ecx,DWORD PTR [eax]
   142e3:	cmp    DWORD PTR [ecx+0x10],edi
   142e6:	jne    0x14300
   142e8:	and    DWORD PTR [eax+0x10],0x0
   142ec:	mov    esi,DWORD PTR [esi+0x4]
   142ef:	mov    ecx,DWORD PTR [ebp-0x4]
   142f2:	mov    eax,DWORD PTR [ecx+0x4]
   142f5:	cmp    esi,DWORD PTR [eax+0x4]
   142f8:	jne    0x14235
   142fe:	jmp    0x1433e
   14300:	mov    ecx,DWORD PTR [eax]
   14302:	cmp    DWORD PTR [ecx+0x10],edi
   14305:	jne    0x1431f
   14307:	mov    ecx,DWORD PTR [eax+0x8]
   1430a:	mov    DWORD PTR [ecx+0x10],edi
   1430d:	mov    ecx,DWORD PTR [ebp-0x4]
   14310:	and    DWORD PTR [eax+0x10],0x0
   14314:	push   eax
   14315:	call   0x12f0e
   1431a:	mov    eax,DWORD PTR [esi+0x4]
   1431d:	mov    eax,DWORD PTR [eax]
   1431f:	mov    ecx,DWORD PTR [esi+0x4]
   14322:	mov    ecx,DWORD PTR [ecx+0x10]
   14325:	mov    DWORD PTR [eax+0x10],ecx
   14328:	mov    ecx,DWORD PTR [esi+0x4]
   1432b:	mov    DWORD PTR [ecx+0x10],edi
   1432e:	mov    eax,DWORD PTR [eax]
   14330:	mov    ecx,DWORD PTR [ebp-0x4]
   14333:	mov    DWORD PTR [eax+0x10],edi
   14336:	push   DWORD PTR [esi+0x4]
   14339:	call   0x12f5c
   1433e:	mov    DWORD PTR [esi+0x10],edi
   14341:	push   ebx
   14342:	call   0x11d22
   14347:	mov    eax,DWORD PTR [ebp-0x4]
   1434a:	dec    DWORD PTR [eax+0xc]
   1434d:	mov    eax,DWORD PTR [ebp+0x8]
   14350:	pop    ecx
   14351:	mov    ecx,DWORD PTR [ebp+0xc]
   14354:	pop    edi
   14355:	pop    esi
   14356:	mov    DWORD PTR [eax],ecx
   14358:	pop    ebx
   14359:	leave  
   1435a:	ret    0x8
   1435d:	int3   
   1435e:	int3   
   1435f:	int3   
   14360:	int3   
   14361:	int3   
   14362:	mov    edi,edi
   14364:	push   ebp
   14365:	mov    ebp,esp
   14367:	push   esi
   14368:	push   edi
   14369:	push   DWORD PTR [ebp+0xc]
   1436c:	mov    edi,ecx
   1436e:	call   0x1332e
   14373:	push   DWORD PTR [ebp+0xc]
   14376:	mov    ecx,edi
   14378:	mov    esi,eax
   1437a:	call   0x132f6
   1437f:	mov    ecx,DWORD PTR [ebp+0x8]
   14382:	pop    edi
   14383:	mov    DWORD PTR [ecx],eax
   14385:	mov    DWORD PTR [ecx+0x4],esi
   14388:	mov    eax,ecx
   1438a:	pop    esi
   1438b:	pop    ebp
   1438c:	ret    0x8
   1438f:	int3   
   14390:	int3   
   14391:	int3   
   14392:	int3   
   14393:	int3   
   14394:	mov    edi,edi
   14396:	push   ebp
   14397:	mov    ebp,esp
   14399:	push   0x0
   1439b:	push   0x60
   1439d:	call   0x13444
   143a2:	mov    ecx,DWORD PTR [ebp+0x8]
   143a5:	mov    DWORD PTR [eax+0x4],ecx
   143a8:	mov    ecx,DWORD PTR [ebp+0xc]
   143ab:	mov    DWORD PTR [eax+0x58],ecx
   143ae:	pop    ebp
   143af:	ret    0x8
   143b2:	int3   
   143b3:	int3   
   143b4:	int3   
   143b5:	int3   
   143b6:	int3   
   143b7:	int3   
   143b8:	mov    edi,edi
   143ba:	push   ebp
   143bb:	mov    ebp,esp
   143bd:	push   0x0
   143bf:	push   0x14
   143c1:	call   0x13444
   143c6:	mov    ecx,DWORD PTR [ebp+0x8]
   143c9:	mov    DWORD PTR [eax+0x4],ecx
   143cc:	mov    ecx,DWORD PTR [ebp+0xc]
   143cf:	mov    DWORD PTR [eax+0x10],ecx
   143d2:	pop    ebp
   143d3:	ret    0x8
   143d6:	int3   
   143d7:	int3   
   143d8:	int3   
   143d9:	int3   
   143da:	int3   
   143db:	int3   
   143dc:	mov    edi,edi
   143de:	push   ebp
   143df:	mov    ebp,esp
   143e1:	push   0x0
   143e3:	push   0x68
   143e5:	call   0x13444
   143ea:	mov    ecx,DWORD PTR [ebp+0x8]
   143ed:	mov    DWORD PTR [eax+0x4],ecx
   143f0:	mov    ecx,DWORD PTR [ebp+0xc]
   143f3:	mov    DWORD PTR [eax+0x60],ecx
   143f6:	pop    ebp
   143f7:	ret    0x8
   143fa:	int3   
   143fb:	int3   
   143fc:	int3   
   143fd:	int3   
   143fe:	int3   
   143ff:	int3   
   14400:	mov    edi,edi
   14402:	push   ebp
   14403:	mov    ebp,esp
   14405:	push   0x0
   14407:	push   0x20
   14409:	call   0x13444
   1440e:	mov    ecx,DWORD PTR [ebp+0x8]
   14411:	mov    DWORD PTR [eax+0x4],ecx
   14414:	mov    ecx,DWORD PTR [ebp+0xc]
   14417:	mov    DWORD PTR [eax+0x1c],ecx
   1441a:	pop    ebp
   1441b:	ret    0x8
   1441e:	int3   
   1441f:	int3   
   14420:	int3   
   14421:	int3   
   14422:	int3   
   14423:	int3   
   14424:	mov    edi,edi
   14426:	push   ebp
   14427:	mov    ebp,esp
   14429:	push   esi
   1442a:	push   edi
   1442b:	mov    edi,DWORD PTR [ebp+0x8]
   1442e:	push   edi
   1442f:	mov    esi,ecx
   14431:	call   0x13682
   14436:	add    edi,0x8
   14439:	push   edi
   1443a:	lea    ecx,[esi+0x8]
   1443d:	call   0x139c0
   14442:	pop    edi
   14443:	mov    eax,esi
   14445:	pop    esi
   14446:	pop    ebp
   14447:	ret    0x4
   1444a:	int3   
   1444b:	int3   
   1444c:	int3   
   1444d:	int3   
   1444e:	int3   
   1444f:	int3   
   14450:	mov    edi,edi
   14452:	push   ebp
   14453:	mov    ebp,esp
   14455:	mov    ecx,DWORD PTR [ebp+0x8]
   14458:	test   ecx,ecx
   1445a:	je     0x14464
   1445c:	push   DWORD PTR [ebp+0xc]
   1445f:	call   0x14424
   14464:	pop    ebp
   14465:	ret    0x8
   14468:	int3   
   14469:	int3   
   1446a:	int3   
   1446b:	int3   
   1446c:	int3   
   1446d:	int3   
   1446e:	mov    edi,edi
   14470:	push   ebp
   14471:	mov    ebp,esp
   14473:	mov    ecx,DWORD PTR [ebp+0x8]
   14476:	test   ecx,ecx
   14478:	je     0x14482
   1447a:	push   DWORD PTR [ebp+0xc]
   1447d:	call   0x139e6
   14482:	pop    ebp
   14483:	ret    0x8
   14486:	int3   
   14487:	int3   
   14488:	int3   
   14489:	int3   
   1448a:	int3   
   1448b:	int3   
   1448c:	mov    edi,edi
   1448e:	push   ebp
   1448f:	mov    ebp,esp
   14491:	mov    ecx,DWORD PTR [ebp+0x8]
   14494:	push   0x0
   14496:	call   0x13a12
   1449b:	pop    ebp
   1449c:	ret    0x4
   1449f:	int3   
   144a0:	int3   
   144a1:	int3   
   144a2:	int3   
   144a3:	int3   
   144a4:	mov    edi,edi
   144a6:	push   ebp
   144a7:	mov    ebp,esp
   144a9:	mov    ecx,DWORD PTR [ebp+0x8]
   144ac:	test   ecx,ecx
   144ae:	je     0x144b8
   144b0:	push   DWORD PTR [ebp+0xc]
   144b3:	call   0x13a38
   144b8:	pop    ebp
   144b9:	ret    0x8
   144bc:	int3   
   144bd:	int3   
   144be:	int3   
   144bf:	int3   
   144c0:	int3   
   144c1:	int3   
   144c2:	mov    edi,edi
   144c4:	push   ebp
   144c5:	mov    ebp,esp
   144c7:	mov    ecx,DWORD PTR [ebp+0x8]
   144ca:	test   ecx,ecx
   144cc:	je     0x144d6
   144ce:	push   DWORD PTR [ebp+0xc]
   144d1:	call   0x13a64
   144d6:	pop    ebp
   144d7:	ret    0x8
   144da:	int3   
   144db:	int3   
   144dc:	int3   
   144dd:	int3   
   144de:	int3   
   144df:	int3   
   144e0:	mov    edi,edi
   144e2:	push   ebp
   144e3:	mov    ebp,esp
   144e5:	mov    ecx,DWORD PTR [ebp+0x8]
   144e8:	push   0x0
   144ea:	call   0x13a8c
   144ef:	pop    ebp
   144f0:	ret    0x4
   144f3:	int3   
   144f4:	int3   
   144f5:	int3   
   144f6:	int3   
   144f7:	int3   
   144f8:	mov    edi,edi
   144fa:	push   ebp
   144fb:	mov    ebp,esp
   144fd:	mov    ecx,DWORD PTR [ebp+0x8]
   14500:	test   ecx,ecx
   14502:	je     0x1450c
   14504:	push   DWORD PTR [ebp+0xc]
   14507:	call   0x13aba
   1450c:	pop    ebp
   1450d:	ret    0x8
   14510:	int3   
   14511:	int3   
   14512:	int3   
   14513:	int3   
   14514:	int3   
   14515:	int3   
   14516:	mov    edi,edi
   14518:	push   ebp
   14519:	mov    ebp,esp
   1451b:	push   ecx
   1451c:	mov    eax,ds:0x786b4
   14521:	push   ebx
   14522:	mov    ebx,DWORD PTR [ebp+0xc]
   14525:	push   esi
   14526:	mov    esi,DWORD PTR [ebp+0x8]
   14529:	mov    DWORD PTR [ebp-0x4],ecx
   1452c:	mov    DWORD PTR [ebp+0x8],esi
   1452f:	cmp    esi,eax
   14531:	je     0x14576
   14533:	push   edi
   14534:	push   DWORD PTR [esi+0x10]
   14537:	mov    ecx,DWORD PTR [ebp-0x4]
   1453a:	push   ebx
   1453b:	call   0x143b8
   14540:	mov    edi,eax
   14542:	cmp    DWORD PTR [ebp+0x8],esi
   14545:	jne    0x1454a
   14547:	mov    DWORD PTR [ebp+0x8],edi
   1454a:	mov    ecx,DWORD PTR [ebp-0x4]
   1454d:	push   edi
   1454e:	push   DWORD PTR [esi+0x8]
   14551:	call   0x14516
   14556:	mov    DWORD PTR [edi+0x8],eax
   14559:	lea    eax,[esi+0xc]
   1455c:	push   eax
   1455d:	lea    eax,[edi+0xc]
   14560:	push   eax
   14561:	call   0x1aa7e
   14566:	mov    DWORD PTR [ebx],edi
   14568:	mov    esi,DWORD PTR [esi]
   1456a:	mov    eax,ds:0x786b4
   1456f:	mov    ebx,edi
   14571:	cmp    esi,eax
   14573:	jne    0x14534
   14575:	pop    edi
   14576:	mov    DWORD PTR [ebx],eax
   14578:	mov    eax,DWORD PTR [ebp+0x8]
   1457b:	pop    esi
   1457c:	pop    ebx
   1457d:	leave  
   1457e:	ret    0x8
   14581:	int3   
   14582:	int3   
   14583:	int3   
   14584:	int3   
   14585:	int3   
   14586:	mov    edi,edi
   14588:	push   ebp
   14589:	mov    ebp,esp
   1458b:	push   edi
   1458c:	mov    edi,DWORD PTR [ebp+0xc]
   1458f:	cmp    DWORD PTR [ebp+0x8],edi
   14592:	je     0x145a8
   14594:	push   esi
   14595:	mov    esi,DWORD PTR [ebp+0x10]
   14598:	inc    DWORD PTR [esi]
   1459a:	lea    ecx,[ebp+0x8]
   1459d:	call   0x13786
   145a2:	cmp    DWORD PTR [ebp+0x8],edi
   145a5:	jne    0x14598
   145a7:	pop    esi
   145a8:	pop    edi
   145a9:	pop    ebp
   145aa:	ret    
   145ab:	int3   
   145ac:	int3   
   145ad:	int3   
   145ae:	int3   
   145af:	int3   
   145b0:	mov    edi,edi
   145b2:	push   ebp
   145b3:	mov    ebp,esp
   145b5:	push   DWORD PTR [ebp+0xc]
   145b8:	push   DWORD PTR [ebp+0x8]
   145bb:	call   0x13cb0
   145c0:	mov    eax,DWORD PTR [ebp+0x8]
   145c3:	pop    ebp
   145c4:	ret    0x8
   145c7:	int3   
   145c8:	int3   
   145c9:	int3   
   145ca:	int3   
   145cb:	int3   
   145cc:	mov    edi,edi
   145ce:	push   ebp
   145cf:	mov    ebp,esp
   145d1:	push   ecx
   145d2:	push   esi
   145d3:	mov    esi,ecx
   145d5:	cmp    DWORD PTR [esi+0xc],0x0
   145d9:	mov    ecx,DWORD PTR [ebp+0xc]
   145dc:	je     0x14616
   145de:	mov    eax,DWORD PTR [esi+0x4]
   145e1:	cmp    ecx,DWORD PTR [eax]
   145e3:	jne    0x14616
   145e5:	cmp    DWORD PTR [ebp+0x10],eax
   145e8:	jne    0x14616
   145ea:	push   DWORD PTR [eax+0x4]
   145ed:	mov    ecx,esi
   145ef:	call   0x13878
   145f4:	mov    ecx,DWORD PTR ds:0x786b0
   145fa:	mov    eax,DWORD PTR [esi+0x4]
   145fd:	mov    DWORD PTR [eax+0x4],ecx
   14600:	mov    eax,DWORD PTR [esi+0x4]
   14603:	and    DWORD PTR [esi+0xc],0x0
   14607:	mov    DWORD PTR [eax],eax
   14609:	mov    eax,DWORD PTR [esi+0x4]
   1460c:	mov    DWORD PTR [eax+0x8],eax
   1460f:	mov    eax,DWORD PTR [esi+0x4]
   14612:	mov    ecx,DWORD PTR [eax]
   14614:	jmp    0x1463b
   14616:	cmp    ecx,DWORD PTR [ebp+0x10]
   14619:	je     0x1463b
   1461b:	push   edi
   1461c:	mov    edi,ecx
   1461e:	lea    ecx,[ebp+0xc]
   14621:	call   0x10ef4
   14626:	push   edi
   14627:	lea    eax,[ebp-0x4]
   1462a:	push   eax
   1462b:	mov    ecx,esi
   1462d:	call   0x13da2
   14632:	mov    ecx,DWORD PTR [ebp+0xc]
   14635:	cmp    ecx,DWORD PTR [ebp+0x10]
   14638:	jne    0x1461c
   1463a:	pop    edi
   1463b:	mov    eax,DWORD PTR [ebp+0x8]
   1463e:	mov    DWORD PTR [eax],ecx
   14640:	pop    esi
   14641:	leave  
   14642:	ret    0xc
   14645:	int3   
   14646:	int3   
   14647:	int3   
   14648:	int3   
   14649:	int3   
   1464a:	mov    edi,edi
   1464c:	push   ebp
   1464d:	mov    ebp,esp
   1464f:	push   ecx
   14650:	push   ecx
   14651:	push   esi
   14652:	push   DWORD PTR [ebp+0x8]
   14655:	lea    eax,[ebp-0x8]
   14658:	push   eax
   14659:	mov    esi,ecx
   1465b:	call   0x13ffa
   14660:	and    DWORD PTR [ebp+0x8],0x0
   14664:	lea    eax,[ebp+0x8]
   14667:	push   eax
   14668:	push   DWORD PTR [ebp-0x4]
   1466b:	push   DWORD PTR [ebp-0x8]
   1466e:	call   0x13920
   14673:	add    esp,0xc
   14676:	push   DWORD PTR [ebp-0x4]
   14679:	lea    eax,[ebp-0x4]
   1467c:	push   DWORD PTR [ebp-0x8]
   1467f:	mov    ecx,esi
   14681:	push   eax
   14682:	call   0x145cc
   14687:	mov    eax,DWORD PTR [ebp+0x8]
   1468a:	pop    esi
   1468b:	leave  
   1468c:	ret    0x4
   1468f:	int3   
   14690:	int3   
   14691:	int3   
   14692:	int3   
   14693:	int3   
   14694:	mov    edi,edi
   14696:	push   ebp
   14697:	mov    ebp,esp
   14699:	push   ecx
   1469a:	push   esi
   1469b:	mov    esi,ecx
   1469d:	cmp    DWORD PTR [esi+0xc],0x0
   146a1:	mov    ecx,DWORD PTR [ebp+0xc]
   146a4:	je     0x146de
   146a6:	mov    eax,DWORD PTR [esi+0x4]
   146a9:	cmp    ecx,DWORD PTR [eax]
   146ab:	jne    0x146de
   146ad:	cmp    DWORD PTR [ebp+0x10],eax
   146b0:	jne    0x146de
   146b2:	push   DWORD PTR [eax+0x4]
   146b5:	mov    ecx,esi
   146b7:	call   0x138e0
   146bc:	mov    ecx,DWORD PTR ds:0x786b4
   146c2:	mov    eax,DWORD PTR [esi+0x4]
   146c5:	mov    DWORD PTR [eax+0x4],ecx
   146c8:	mov    eax,DWORD PTR [esi+0x4]
   146cb:	and    DWORD PTR [esi+0xc],0x0
   146cf:	mov    DWORD PTR [eax],eax
   146d1:	mov    eax,DWORD PTR [esi+0x4]
   146d4:	mov    DWORD PTR [eax+0x8],eax
   146d7:	mov    eax,DWORD PTR [esi+0x4]
   146da:	mov    ecx,DWORD PTR [eax]
   146dc:	jmp    0x14703
   146de:	cmp    ecx,DWORD PTR [ebp+0x10]
   146e1:	je     0x14703
   146e3:	push   edi
   146e4:	mov    edi,ecx
   146e6:	lea    ecx,[ebp+0xc]
   146e9:	call   0x12ed8
   146ee:	push   edi
   146ef:	lea    eax,[ebp-0x4]
   146f2:	push   eax
   146f3:	mov    ecx,esi
   146f5:	call   0x1410a
   146fa:	mov    ecx,DWORD PTR [ebp+0xc]
   146fd:	cmp    ecx,DWORD PTR [ebp+0x10]
   14700:	jne    0x146e4
   14702:	pop    edi
   14703:	mov    eax,DWORD PTR [ebp+0x8]
   14706:	mov    DWORD PTR [eax],ecx
   14708:	pop    esi
   14709:	leave  
   1470a:	ret    0xc
   1470d:	int3   
   1470e:	int3   
   1470f:	int3   
   14710:	int3   
   14711:	int3   
   14712:	mov    edi,edi
   14714:	push   ebp
   14715:	mov    ebp,esp
   14717:	push   ecx
   14718:	push   ecx
   14719:	push   esi
   1471a:	push   DWORD PTR [ebp+0x8]
   1471d:	lea    eax,[ebp-0x8]
   14720:	push   eax
   14721:	mov    esi,ecx
   14723:	call   0x14362
   14728:	and    DWORD PTR [ebp+0x8],0x0
   1472c:	lea    eax,[ebp+0x8]
   1472f:	push   eax
   14730:	push   DWORD PTR [ebp-0x4]
   14733:	push   DWORD PTR [ebp-0x8]
   14736:	call   0x13986
   1473b:	add    esp,0xc
   1473e:	push   DWORD PTR [ebp-0x4]
   14741:	lea    eax,[ebp-0x4]
   14744:	push   DWORD PTR [ebp-0x8]
   14747:	mov    ecx,esi
   14749:	push   eax
   1474a:	call   0x14694
   1474f:	mov    eax,DWORD PTR [ebp+0x8]
   14752:	pop    esi
   14753:	leave  
   14754:	ret    0x4
   14757:	int3   
   14758:	int3   
   14759:	int3   
   1475a:	int3   
   1475b:	int3   
   1475c:	mov    edi,edi
   1475e:	push   esi
   1475f:	push   edi
   14760:	push   0x1
   14762:	xor    edi,edi
   14764:	push   edi
   14765:	mov    esi,ecx
   14767:	call   0x1b140
   1476c:	cmp    DWORD PTR ds:0x786b0,edi
   14772:	jne    0x14789
   14774:	mov    ecx,eax
   14776:	mov    DWORD PTR ds:0x786b0,ecx
   1477c:	mov    DWORD PTR [ecx],edi
   1477e:	mov    ecx,DWORD PTR ds:0x786b0
   14784:	xor    eax,eax
   14786:	mov    DWORD PTR [ecx+0x8],edi
   14789:	inc    DWORD PTR ds:0x78860
   1478f:	cmp    eax,edi
   14791:	je     0x1479a
   14793:	push   eax
   14794:	call   0x11d22
   14799:	pop    ecx
   1479a:	push   edi
   1479b:	push   DWORD PTR ds:0x786b0
   147a1:	mov    ecx,esi
   147a3:	call   0x1b140
   147a8:	mov    DWORD PTR [esi+0xc],edi
   147ab:	mov    DWORD PTR [esi+0x4],eax
   147ae:	mov    DWORD PTR [eax],eax
   147b0:	mov    esi,DWORD PTR [esi+0x4]
   147b3:	pop    edi
   147b4:	mov    DWORD PTR [esi+0x8],esi
   147b7:	pop    esi
   147b8:	ret    
   147b9:	int3   
   147ba:	int3   
   147bb:	int3   
   147bc:	int3   
   147bd:	int3   
   147be:	mov    edi,edi
   147c0:	push   esi
   147c1:	push   edi
   147c2:	push   0x1
   147c4:	xor    edi,edi
   147c6:	push   edi
   147c7:	mov    esi,ecx
   147c9:	call   0x14394
   147ce:	cmp    DWORD PTR ds:0x786bc,edi
   147d4:	jne    0x147eb
   147d6:	mov    ecx,eax
   147d8:	mov    DWORD PTR ds:0x786bc,ecx
   147de:	mov    DWORD PTR [ecx],edi
   147e0:	mov    ecx,DWORD PTR ds:0x786bc
   147e6:	xor    eax,eax
   147e8:	mov    DWORD PTR [ecx+0x8],edi
   147eb:	inc    DWORD PTR ds:0x78864
   147f1:	cmp    eax,edi
   147f3:	je     0x147fc
   147f5:	push   eax
   147f6:	call   0x11d22
   147fb:	pop    ecx
   147fc:	push   edi
   147fd:	push   DWORD PTR ds:0x786bc
   14803:	mov    ecx,esi
   14805:	call   0x14394
   1480a:	mov    DWORD PTR [esi+0xc],edi
   1480d:	mov    DWORD PTR [esi+0x4],eax
   14810:	mov    DWORD PTR [eax],eax
   14812:	mov    esi,DWORD PTR [esi+0x4]
   14815:	pop    edi
   14816:	mov    DWORD PTR [esi+0x8],esi
   14819:	pop    esi
   1481a:	ret    
   1481b:	int3   
   1481c:	int3   
   1481d:	int3   
   1481e:	int3   
   1481f:	int3   
   14820:	mov    edi,edi
   14822:	push   esi
   14823:	push   edi
   14824:	push   0x1
   14826:	xor    edi,edi
   14828:	push   edi
   14829:	mov    esi,ecx
   1482b:	call   0x14400
   14830:	cmp    DWORD PTR ds:0x786c0,edi
   14836:	jne    0x1484d
   14838:	mov    ecx,eax
   1483a:	mov    DWORD PTR ds:0x786c0,ecx
   14840:	mov    DWORD PTR [ecx],edi
   14842:	mov    ecx,DWORD PTR ds:0x786c0
   14848:	xor    eax,eax
   1484a:	mov    DWORD PTR [ecx+0x8],edi
   1484d:	inc    DWORD PTR ds:0x78868
   14853:	cmp    eax,edi
   14855:	je     0x1485e
   14857:	push   eax
   14858:	call   0x11d22
   1485d:	pop    ecx
   1485e:	push   edi
   1485f:	push   DWORD PTR ds:0x786c0
   14865:	mov    ecx,esi
   14867:	call   0x14400
   1486c:	mov    DWORD PTR [esi+0xc],edi
   1486f:	mov    DWORD PTR [esi+0x4],eax
   14872:	mov    DWORD PTR [eax],eax
   14874:	mov    esi,DWORD PTR [esi+0x4]
   14877:	pop    edi
   14878:	mov    DWORD PTR [esi+0x8],esi
   1487b:	pop    esi
   1487c:	ret    
   1487d:	int3   
   1487e:	int3   
   1487f:	int3   
   14880:	int3   
   14881:	int3   
   14882:	mov    edi,edi
   14884:	push   esi
   14885:	push   edi
   14886:	push   0x1
   14888:	xor    edi,edi
   1488a:	push   edi
   1488b:	mov    esi,ecx
   1488d:	call   0x1b140
   14892:	cmp    DWORD PTR ds:0x786c4,edi
   14898:	jne    0x148af
   1489a:	mov    ecx,eax
   1489c:	mov    DWORD PTR ds:0x786c4,ecx
   148a2:	mov    DWORD PTR [ecx],edi
   148a4:	mov    ecx,DWORD PTR ds:0x786c4
   148aa:	xor    eax,eax
   148ac:	mov    DWORD PTR [ecx+0x8],edi
   148af:	inc    DWORD PTR ds:0x7886c
   148b5:	cmp    eax,edi
   148b7:	je     0x148c0
   148b9:	push   eax
   148ba:	call   0x11d22
   148bf:	pop    ecx
   148c0:	push   edi
   148c1:	push   DWORD PTR ds:0x786c4
   148c7:	mov    ecx,esi
   148c9:	call   0x1b140
   148ce:	mov    DWORD PTR [esi+0xc],edi
   148d1:	mov    DWORD PTR [esi+0x4],eax
   148d4:	mov    DWORD PTR [eax],eax
   148d6:	mov    esi,DWORD PTR [esi+0x4]
   148d9:	pop    edi
   148da:	mov    DWORD PTR [esi+0x8],esi
   148dd:	pop    esi
   148de:	ret    
   148df:	int3   
   148e0:	int3   
   148e1:	int3   
   148e2:	int3   
   148e3:	int3   
   148e4:	mov    edi,edi
   148e6:	push   esi
   148e7:	push   edi
   148e8:	push   0x1
   148ea:	xor    edi,edi
   148ec:	push   edi
   148ed:	mov    esi,ecx
   148ef:	call   0x143b8
   148f4:	cmp    DWORD PTR ds:0x786b4,edi
   148fa:	jne    0x14911
   148fc:	mov    ecx,eax
   148fe:	mov    DWORD PTR ds:0x786b4,ecx
   14904:	mov    DWORD PTR [ecx],edi
   14906:	mov    ecx,DWORD PTR ds:0x786b4
   1490c:	xor    eax,eax
   1490e:	mov    DWORD PTR [ecx+0x8],edi
   14911:	inc    DWORD PTR ds:0x78870
   14917:	cmp    eax,edi
   14919:	je     0x14922
   1491b:	push   eax
   1491c:	call   0x11d22
   14921:	pop    ecx
   14922:	push   edi
   14923:	push   DWORD PTR ds:0x786b4
   14929:	mov    ecx,esi
   1492b:	call   0x143b8
   14930:	mov    DWORD PTR [esi+0xc],edi
   14933:	mov    DWORD PTR [esi+0x4],eax
   14936:	mov    DWORD PTR [eax],eax
   14938:	mov    esi,DWORD PTR [esi+0x4]
   1493b:	pop    edi
   1493c:	mov    DWORD PTR [esi+0x8],esi
   1493f:	pop    esi
   14940:	ret    
   14941:	int3   
   14942:	int3   
   14943:	int3   
   14944:	int3   
   14945:	int3   
   14946:	mov    edi,edi
   14948:	push   ebp
   14949:	mov    ebp,esp
   1494b:	push   ebx
   1494c:	push   esi
   1494d:	mov    esi,DWORD PTR [ebp+0x10]
   14950:	push   edi
   14951:	push   0x0
   14953:	push   esi
   14954:	mov    edi,ecx
   14956:	call   0x143b8
   1495b:	push   DWORD PTR [ebp+0x14]
   1495e:	mov    ebx,eax
   14960:	mov    eax,ds:0x786b4
   14965:	mov    DWORD PTR [ebx],eax
   14967:	mov    eax,ds:0x786b4
   1496c:	mov    DWORD PTR [ebx+0x8],eax
   1496f:	lea    eax,[ebx+0xc]
   14972:	push   eax
   14973:	call   0x1aa7e
   14978:	inc    DWORD PTR [edi+0xc]
   1497b:	cmp    esi,DWORD PTR [edi+0x4]
   1497e:	je     0x149a2
   14980:	mov    eax,DWORD PTR [ebp+0xc]
   14983:	cmp    eax,DWORD PTR ds:0x786b4
   14989:	jne    0x149a2
   1498b:	mov    eax,DWORD PTR [ebp+0x14]
   1498e:	mov    eax,DWORD PTR [eax]
   14990:	cmp    eax,DWORD PTR [esi+0xc]
   14993:	jb     0x149a2
   14995:	mov    DWORD PTR [esi+0x8],ebx
   14998:	mov    eax,DWORD PTR [edi+0x4]
   1499b:	cmp    esi,DWORD PTR [eax+0x8]
   1499e:	jne    0x149bc
   149a0:	jmp    0x149b1
   149a2:	mov    DWORD PTR [esi],ebx
   149a4:	mov    eax,DWORD PTR [edi+0x4]
   149a7:	cmp    esi,eax
   149a9:	jne    0x149b6
   149ab:	mov    DWORD PTR [eax+0x4],ebx
   149ae:	mov    eax,DWORD PTR [edi+0x4]
   149b1:	mov    DWORD PTR [eax+0x8],ebx
   149b4:	jmp    0x149bc
   149b6:	cmp    esi,DWORD PTR [eax]
   149b8:	jne    0x149bc
   149ba:	mov    DWORD PTR [eax],ebx
   149bc:	mov    eax,DWORD PTR [edi+0x4]
   149bf:	mov    esi,ebx
   149c1:	cmp    ebx,DWORD PTR [eax+0x4]
   149c4:	je     0x14a78
   149ca:	mov    eax,DWORD PTR [esi+0x4]
   149cd:	xor    edx,edx
   149cf:	cmp    DWORD PTR [eax+0x10],edx
   149d2:	jne    0x14a78
   149d8:	mov    ecx,DWORD PTR [eax+0x4]
   149db:	cmp    eax,DWORD PTR [ecx]
   149dd:	jne    0x14a19
   149df:	mov    ecx,DWORD PTR [ecx+0x8]
   149e2:	cmp    DWORD PTR [ecx+0x10],edx
   149e5:	je     0x14a20
   149e7:	cmp    esi,DWORD PTR [eax+0x8]
   149ea:	jne    0x149f6
   149ec:	mov    esi,eax
   149ee:	push   esi
   149ef:	mov    ecx,edi
   149f1:	call   0x12f0e
   149f6:	mov    eax,DWORD PTR [esi+0x4]
   149f9:	mov    DWORD PTR [eax+0x10],0x1
   14a00:	mov    eax,DWORD PTR [esi+0x4]
   14a03:	mov    eax,DWORD PTR [eax+0x4]
   14a06:	and    DWORD PTR [eax+0x10],0x0
   14a0a:	mov    eax,DWORD PTR [esi+0x4]
   14a0d:	push   DWORD PTR [eax+0x4]
   14a10:	mov    ecx,edi
   14a12:	call   0x12f5c
   14a17:	jmp    0x14a6c
   14a19:	mov    ecx,DWORD PTR [ecx]
   14a1b:	cmp    DWORD PTR [ecx+0x10],edx
   14a1e:	jne    0x14a3d
   14a20:	mov    edx,eax
   14a22:	xor    eax,eax
   14a24:	inc    eax
   14a25:	mov    DWORD PTR [edx+0x10],eax
   14a28:	mov    DWORD PTR [ecx+0x10],eax
   14a2b:	mov    eax,DWORD PTR [esi+0x4]
   14a2e:	mov    eax,DWORD PTR [eax+0x4]
   14a31:	and    DWORD PTR [eax+0x10],0x0
   14a35:	mov    eax,DWORD PTR [esi+0x4]
   14a38:	mov    esi,DWORD PTR [eax+0x4]
   14a3b:	jmp    0x14a6c
   14a3d:	cmp    esi,DWORD PTR [eax]
   14a3f:	jne    0x14a4b
   14a41:	mov    esi,eax
   14a43:	push   esi
   14a44:	mov    ecx,edi
   14a46:	call   0x12f5c
   14a4b:	mov    eax,DWORD PTR [esi+0x4]
   14a4e:	mov    DWORD PTR [eax+0x10],0x1
   14a55:	mov    eax,DWORD PTR [esi+0x4]
   14a58:	mov    eax,DWORD PTR [eax+0x4]
   14a5b:	and    DWORD PTR [eax+0x10],0x0
   14a5f:	mov    eax,DWORD PTR [esi+0x4]
   14a62:	push   DWORD PTR [eax+0x4]
   14a65:	mov    ecx,edi
   14a67:	call   0x12f0e
   14a6c:	mov    eax,DWORD PTR [edi+0x4]
   14a6f:	cmp    esi,DWORD PTR [eax+0x4]
   14a72:	jne    0x149ca
   14a78:	mov    eax,DWORD PTR [edi+0x4]
   14a7b:	mov    eax,DWORD PTR [eax+0x4]
   14a7e:	pop    edi
   14a7f:	mov    DWORD PTR [eax+0x10],0x1
   14a86:	mov    eax,DWORD PTR [ebp+0x8]
   14a89:	pop    esi
   14a8a:	mov    DWORD PTR [eax],ebx
   14a8c:	pop    ebx
   14a8d:	pop    ebp
   14a8e:	ret    0x10
   14a91:	int3   
   14a92:	int3   
   14a93:	int3   
   14a94:	int3   
   14a95:	int3   
   14a96:	mov    edi,edi
   14a98:	push   esi
   14a99:	push   edi
   14a9a:	push   0x1
   14a9c:	xor    edi,edi
   14a9e:	push   edi
   14a9f:	mov    esi,ecx
   14aa1:	call   0x143dc
   14aa6:	cmp    DWORD PTR ds:0x786b8,edi
   14aac:	jne    0x14ac3
   14aae:	mov    ecx,eax
   14ab0:	mov    DWORD PTR ds:0x786b8,ecx
   14ab6:	mov    DWORD PTR [ecx],edi
   14ab8:	mov    ecx,DWORD PTR ds:0x786b8
   14abe:	xor    eax,eax
   14ac0:	mov    DWORD PTR [ecx+0x8],edi
   14ac3:	inc    DWORD PTR ds:0x78874
   14ac9:	cmp    eax,edi
   14acb:	je     0x14ad4
   14acd:	push   eax
   14ace:	call   0x11d22
   14ad3:	pop    ecx
   14ad4:	push   edi
   14ad5:	push   DWORD PTR ds:0x786b8
   14adb:	mov    ecx,esi
   14add:	call   0x143dc
   14ae2:	mov    DWORD PTR [esi+0xc],edi
   14ae5:	mov    DWORD PTR [esi+0x4],eax
   14ae8:	mov    DWORD PTR [eax],eax
   14aea:	mov    esi,DWORD PTR [esi+0x4]
   14aed:	pop    edi
   14aee:	mov    DWORD PTR [esi+0x8],esi
   14af1:	pop    esi
   14af2:	ret    
   14af3:	int3   
   14af4:	int3   
   14af5:	int3   
   14af6:	int3   
   14af7:	int3   
   14af8:	mov    edi,edi
   14afa:	push   ebp
   14afb:	mov    ebp,esp
   14afd:	push   ebx
   14afe:	push   esi
   14aff:	mov    esi,DWORD PTR [ebp+0x10]
   14b02:	push   edi
   14b03:	push   0x0
   14b05:	push   esi
   14b06:	mov    edi,ecx
   14b08:	call   0x1b140
   14b0d:	push   DWORD PTR [ebp+0x14]
   14b10:	mov    ebx,eax
   14b12:	mov    eax,ds:0x786b0
   14b17:	mov    DWORD PTR [ebx],eax
   14b19:	mov    eax,ds:0x786b0
   14b1e:	mov    DWORD PTR [ebx+0x8],eax
   14b21:	lea    eax,[ebx+0xc]
   14b24:	push   eax
   14b25:	call   0x1123c
   14b2a:	inc    DWORD PTR [edi+0xc]
   14b2d:	cmp    esi,DWORD PTR [edi+0x4]
   14b30:	je     0x14b54
   14b32:	mov    eax,DWORD PTR [ebp+0xc]
   14b35:	cmp    eax,DWORD PTR ds:0x786b0
   14b3b:	jne    0x14b54
   14b3d:	mov    eax,DWORD PTR [ebp+0x14]
   14b40:	mov    eax,DWORD PTR [eax]
   14b42:	cmp    eax,DWORD PTR [esi+0xc]
   14b45:	jb     0x14b54
   14b47:	mov    DWORD PTR [esi+0x8],ebx
   14b4a:	mov    eax,DWORD PTR [edi+0x4]
   14b4d:	cmp    esi,DWORD PTR [eax+0x8]
   14b50:	jne    0x14b6e
   14b52:	jmp    0x14b63
   14b54:	mov    DWORD PTR [esi],ebx
   14b56:	mov    eax,DWORD PTR [edi+0x4]
   14b59:	cmp    esi,eax
   14b5b:	jne    0x14b68
   14b5d:	mov    DWORD PTR [eax+0x4],ebx
   14b60:	mov    eax,DWORD PTR [edi+0x4]
   14b63:	mov    DWORD PTR [eax+0x8],ebx
   14b66:	jmp    0x14b6e
   14b68:	cmp    esi,DWORD PTR [eax]
   14b6a:	jne    0x14b6e
   14b6c:	mov    DWORD PTR [eax],ebx
   14b6e:	mov    eax,DWORD PTR [edi+0x4]
   14b71:	mov    esi,ebx
   14b73:	cmp    ebx,DWORD PTR [eax+0x4]
   14b76:	je     0x14c2a
   14b7c:	mov    eax,DWORD PTR [esi+0x4]
   14b7f:	xor    edx,edx
   14b81:	cmp    DWORD PTR [eax+0x14],edx
   14b84:	jne    0x14c2a
   14b8a:	mov    ecx,DWORD PTR [eax+0x4]
   14b8d:	cmp    eax,DWORD PTR [ecx]
   14b8f:	jne    0x14bcb
   14b91:	mov    ecx,DWORD PTR [ecx+0x8]
   14b94:	cmp    DWORD PTR [ecx+0x14],edx
   14b97:	je     0x14bd2
   14b99:	cmp    esi,DWORD PTR [eax+0x8]
   14b9c:	jne    0x14ba8
   14b9e:	mov    esi,eax
   14ba0:	push   esi
   14ba1:	mov    ecx,edi
   14ba3:	call   0x12d0c
   14ba8:	mov    eax,DWORD PTR [esi+0x4]
   14bab:	mov    DWORD PTR [eax+0x14],0x1
   14bb2:	mov    eax,DWORD PTR [esi+0x4]
   14bb5:	mov    eax,DWORD PTR [eax+0x4]
   14bb8:	and    DWORD PTR [eax+0x14],0x0
   14bbc:	mov    eax,DWORD PTR [esi+0x4]
   14bbf:	push   DWORD PTR [eax+0x4]
   14bc2:	mov    ecx,edi
   14bc4:	call   0x12d5a
   14bc9:	jmp    0x14c1e
   14bcb:	mov    ecx,DWORD PTR [ecx]
   14bcd:	cmp    DWORD PTR [ecx+0x14],edx
   14bd0:	jne    0x14bef
   14bd2:	mov    edx,eax
   14bd4:	xor    eax,eax
   14bd6:	inc    eax
   14bd7:	mov    DWORD PTR [edx+0x14],eax
   14bda:	mov    DWORD PTR [ecx+0x14],eax
   14bdd:	mov    eax,DWORD PTR [esi+0x4]
   14be0:	mov    eax,DWORD PTR [eax+0x4]
   14be3:	and    DWORD PTR [eax+0x14],0x0
   14be7:	mov    eax,DWORD PTR [esi+0x4]
   14bea:	mov    esi,DWORD PTR [eax+0x4]
   14bed:	jmp    0x14c1e
   14bef:	cmp    esi,DWORD PTR [eax]
   14bf1:	jne    0x14bfd
   14bf3:	mov    esi,eax
   14bf5:	push   esi
   14bf6:	mov    ecx,edi
   14bf8:	call   0x12d5a
   14bfd:	mov    eax,DWORD PTR [esi+0x4]
   14c00:	mov    DWORD PTR [eax+0x14],0x1
   14c07:	mov    eax,DWORD PTR [esi+0x4]
   14c0a:	mov    eax,DWORD PTR [eax+0x4]
   14c0d:	and    DWORD PTR [eax+0x14],0x0
   14c11:	mov    eax,DWORD PTR [esi+0x4]
   14c14:	push   DWORD PTR [eax+0x4]
   14c17:	mov    ecx,edi
   14c19:	call   0x12d0c
   14c1e:	mov    eax,DWORD PTR [edi+0x4]
   14c21:	cmp    esi,DWORD PTR [eax+0x4]
   14c24:	jne    0x14b7c
   14c2a:	mov    eax,DWORD PTR [edi+0x4]
   14c2d:	mov    eax,DWORD PTR [eax+0x4]
   14c30:	pop    edi
   14c31:	mov    DWORD PTR [eax+0x14],0x1
   14c38:	mov    eax,DWORD PTR [ebp+0x8]
   14c3b:	pop    esi
   14c3c:	mov    DWORD PTR [eax],ebx
   14c3e:	pop    ebx
   14c3f:	pop    ebp
   14c40:	ret    0x10
   14c43:	int3   
   14c44:	int3   
   14c45:	int3   
   14c46:	int3   
   14c47:	int3   
   14c48:	mov    edi,edi
   14c4a:	push   ebp
   14c4b:	mov    ebp,esp
   14c4d:	push   ecx
   14c4e:	push   ecx
   14c4f:	push   ebx
   14c50:	push   esi
   14c51:	mov    DWORD PTR [ebp-0x4],ecx
   14c54:	push   edi
   14c55:	mov    edi,DWORD PTR [ebp+0xc]
   14c58:	lea    ecx,[ebp+0xc]
   14c5b:	call   0x11172
   14c60:	mov    esi,DWORD PTR [edi]
   14c62:	mov    eax,ds:0x786c0
   14c67:	mov    ebx,edi
   14c69:	mov    DWORD PTR [ebp-0x8],esi
   14c6c:	cmp    esi,eax
   14c6e:	jne    0x14c8c
   14c70:	mov    esi,DWORD PTR [edi+0x8]
   14c73:	mov    eax,DWORD PTR [ebx+0x4]
   14c76:	mov    ecx,DWORD PTR [ebp-0x4]
   14c79:	mov    DWORD PTR [esi+0x4],eax
   14c7c:	mov    eax,DWORD PTR [ecx+0x4]
   14c7f:	cmp    DWORD PTR [eax+0x4],edi
   14c82:	jne    0x14d01
   14c84:	mov    DWORD PTR [eax+0x4],esi
   14c87:	jmp    0x14d0f
   14c8c:	mov    ecx,DWORD PTR [edi+0x8]
   14c8f:	cmp    ecx,eax
   14c91:	je     0x14c73
   14c93:	push   ecx
   14c94:	call   0x1104c
   14c99:	mov    ebx,eax
   14c9b:	mov    esi,DWORD PTR [ebx+0x8]
   14c9e:	cmp    ebx,edi
   14ca0:	je     0x14c73
   14ca2:	mov    eax,DWORD PTR [ebp-0x8]
   14ca5:	mov    DWORD PTR [eax+0x4],ebx
   14ca8:	mov    eax,DWORD PTR [edi]
   14caa:	mov    DWORD PTR [ebx],eax
   14cac:	cmp    ebx,DWORD PTR [edi+0x8]
   14caf:	jne    0x14cb6
   14cb1:	mov    DWORD PTR [esi+0x4],ebx
   14cb4:	jmp    0x14ccd
   14cb6:	mov    eax,DWORD PTR [ebx+0x4]
   14cb9:	mov    DWORD PTR [esi+0x4],eax
   14cbc:	mov    eax,DWORD PTR [ebx+0x4]
   14cbf:	mov    DWORD PTR [eax],esi
   14cc1:	mov    eax,DWORD PTR [edi+0x8]
   14cc4:	mov    DWORD PTR [ebx+0x8],eax
   14cc7:	mov    eax,DWORD PTR [edi+0x8]
   14cca:	mov    DWORD PTR [eax+0x4],ebx
   14ccd:	mov    eax,DWORD PTR [ebp-0x4]
   14cd0:	mov    eax,DWORD PTR [eax+0x4]
   14cd3:	cmp    DWORD PTR [eax+0x4],edi
   14cd6:	jne    0x14cdd
   14cd8:	mov    DWORD PTR [eax+0x4],ebx
   14cdb:	jmp    0x14ceb
   14cdd:	mov    eax,DWORD PTR [edi+0x4]
   14ce0:	cmp    DWORD PTR [eax],edi
   14ce2:	jne    0x14ce8
   14ce4:	mov    DWORD PTR [eax],ebx
   14ce6:	jmp    0x14ceb
   14ce8:	mov    DWORD PTR [eax+0x8],ebx
   14ceb:	mov    eax,DWORD PTR [edi+0x4]
   14cee:	mov    DWORD PTR [ebx+0x4],eax
   14cf1:	mov    eax,DWORD PTR [ebx+0x1c]
   14cf4:	mov    ecx,DWORD PTR [edi+0x1c]
   14cf7:	mov    DWORD PTR [ebx+0x1c],ecx
   14cfa:	mov    DWORD PTR [edi+0x1c],eax
   14cfd:	mov    ebx,edi
   14cff:	jmp    0x14d62
   14d01:	mov    eax,DWORD PTR [edi+0x4]
   14d04:	cmp    DWORD PTR [eax],edi
   14d06:	jne    0x14d0c
   14d08:	mov    DWORD PTR [eax],esi
   14d0a:	jmp    0x14d0f
   14d0c:	mov    DWORD PTR [eax+0x8],esi
   14d0f:	mov    eax,DWORD PTR [ecx+0x4]
   14d12:	mov    DWORD PTR [ebp-0x8],eax
   14d15:	cmp    DWORD PTR [eax],edi
   14d17:	jne    0x14d39
   14d19:	mov    edx,DWORD PTR [edi+0x8]
   14d1c:	cmp    edx,DWORD PTR ds:0x786c0
   14d22:	jne    0x14d2b
   14d24:	mov    edx,DWORD PTR [edi+0x4]
   14d27:	mov    DWORD PTR [eax],edx
   14d29:	jmp    0x14d39
   14d2b:	push   esi
   14d2c:	call   0x1104c
   14d31:	mov    ecx,DWORD PTR [ebp-0x8]
   14d34:	mov    DWORD PTR [ecx],eax
   14d36:	mov    ecx,DWORD PTR [ebp-0x4]
   14d39:	mov    eax,DWORD PTR [ecx+0x4]
   14d3c:	mov    DWORD PTR [ebp-0x8],eax
   14d3f:	cmp    DWORD PTR [eax+0x8],edi
   14d42:	jne    0x14d62
   14d44:	mov    ecx,DWORD PTR [edi]
   14d46:	cmp    ecx,DWORD PTR ds:0x786c0
   14d4c:	jne    0x14d56
   14d4e:	mov    ecx,DWORD PTR [edi+0x4]
   14d51:	mov    DWORD PTR [eax+0x8],ecx
   14d54:	jmp    0x14d62
   14d56:	push   esi
   14d57:	call   0x1102a
   14d5c:	mov    ecx,DWORD PTR [ebp-0x8]
   14d5f:	mov    DWORD PTR [ecx+0x8],eax
   14d62:	xor    edi,edi
   14d64:	inc    edi
   14d65:	cmp    DWORD PTR [ebx+0x1c],edi
   14d68:	jne    0x14e7f
   14d6e:	jmp    0x14e2d
   14d73:	cmp    DWORD PTR [esi+0x1c],edi
   14d76:	jne    0x14e7c
   14d7c:	mov    eax,DWORD PTR [esi+0x4]
   14d7f:	cmp    esi,DWORD PTR [eax]
   14d81:	jne    0x14df8
   14d83:	mov    eax,DWORD PTR [eax+0x8]
   14d86:	cmp    DWORD PTR [eax+0x1c],0x0
   14d8a:	jne    0x14da4
   14d8c:	mov    DWORD PTR [eax+0x1c],edi
   14d8f:	mov    eax,DWORD PTR [esi+0x4]
   14d92:	and    DWORD PTR [eax+0x1c],0x0
   14d96:	push   DWORD PTR [esi+0x4]
   14d99:	call   0x13102
   14d9e:	mov    eax,DWORD PTR [esi+0x4]
   14da1:	mov    eax,DWORD PTR [eax+0x8]
   14da4:	mov    ecx,DWORD PTR [eax]
   14da6:	cmp    DWORD PTR [ecx+0x1c],edi
   14da9:	jne    0x14db3
   14dab:	mov    ecx,DWORD PTR [eax+0x8]
   14dae:	cmp    DWORD PTR [ecx+0x1c],edi
   14db1:	je     0x14e26
   14db3:	mov    ecx,DWORD PTR [eax+0x8]
   14db6:	cmp    DWORD PTR [ecx+0x1c],edi
   14db9:	jne    0x14dd3
   14dbb:	mov    ecx,DWORD PTR [eax]
   14dbd:	mov    DWORD PTR [ecx+0x1c],edi
   14dc0:	mov    ecx,DWORD PTR [ebp-0x4]
   14dc3:	and    DWORD PTR [eax+0x1c],0x0
   14dc7:	push   eax
   14dc8:	call   0x13150
   14dcd:	mov    eax,DWORD PTR [esi+0x4]
   14dd0:	mov    eax,DWORD PTR [eax+0x8]
   14dd3:	mov    ecx,DWORD PTR [esi+0x4]
   14dd6:	mov    ecx,DWORD PTR [ecx+0x1c]
   14dd9:	mov    DWORD PTR [eax+0x1c],ecx
   14ddc:	mov    ecx,DWORD PTR [esi+0x4]
   14ddf:	mov    DWORD PTR [ecx+0x1c],edi
   14de2:	mov    eax,DWORD PTR [eax+0x8]
   14de5:	mov    ecx,DWORD PTR [ebp-0x4]
   14de8:	mov    DWORD PTR [eax+0x1c],edi
   14deb:	push   DWORD PTR [esi+0x4]
   14dee:	call   0x13102
   14df3:	jmp    0x14e7c
   14df8:	mov    eax,DWORD PTR [eax]
   14dfa:	cmp    DWORD PTR [eax+0x1c],0x0
   14dfe:	jne    0x14e17
   14e00:	mov    DWORD PTR [eax+0x1c],edi
   14e03:	mov    eax,DWORD PTR [esi+0x4]
   14e06:	and    DWORD PTR [eax+0x1c],0x0
   14e0a:	push   DWORD PTR [esi+0x4]
   14e0d:	call   0x13150
   14e12:	mov    eax,DWORD PTR [esi+0x4]
   14e15:	mov    eax,DWORD PTR [eax]
   14e17:	mov    ecx,DWORD PTR [eax+0x8]
   14e1a:	cmp    DWORD PTR [ecx+0x1c],edi
   14e1d:	jne    0x14e3e
   14e1f:	mov    ecx,DWORD PTR [eax]
   14e21:	cmp    DWORD PTR [ecx+0x1c],edi
   14e24:	jne    0x14e3e
   14e26:	and    DWORD PTR [eax+0x1c],0x0
   14e2a:	mov    esi,DWORD PTR [esi+0x4]
   14e2d:	mov    ecx,DWORD PTR [ebp-0x4]
   14e30:	mov    eax,DWORD PTR [ecx+0x4]
   14e33:	cmp    esi,DWORD PTR [eax+0x4]
   14e36:	jne    0x14d73
   14e3c:	jmp    0x14e7c
   14e3e:	mov    ecx,DWORD PTR [eax]
   14e40:	cmp    DWORD PTR [ecx+0x1c],edi
   14e43:	jne    0x14e5d
   14e45:	mov    ecx,DWORD PTR [eax+0x8]
   14e48:	mov    DWORD PTR [ecx+0x1c],edi
   14e4b:	mov    ecx,DWORD PTR [ebp-0x4]
   14e4e:	and    DWORD PTR [eax+0x1c],0x0
   14e52:	push   eax
   14e53:	call   0x13102
   14e58:	mov    eax,DWORD PTR [esi+0x4]
   14e5b:	mov    eax,DWORD PTR [eax]
   14e5d:	mov    ecx,DWORD PTR [esi+0x4]
   14e60:	mov    ecx,DWORD PTR [ecx+0x1c]
   14e63:	mov    DWORD PTR [eax+0x1c],ecx
   14e66:	mov    ecx,DWORD PTR [esi+0x4]
   14e69:	mov    DWORD PTR [ecx+0x1c],edi
   14e6c:	mov    eax,DWORD PTR [eax]
   14e6e:	mov    ecx,DWORD PTR [ebp-0x4]
   14e71:	mov    DWORD PTR [eax+0x1c],edi
   14e74:	push   DWORD PTR [esi+0x4]
   14e77:	call   0x13150
   14e7c:	mov    DWORD PTR [esi+0x1c],edi
   14e7f:	lea    eax,[ebx+0xc]
   14e82:	push   eax
   14e83:	call   0x139a8
   14e88:	push   ebx
   14e89:	call   0x11d22
   14e8e:	mov    eax,DWORD PTR [ebp-0x4]
   14e91:	dec    DWORD PTR [eax+0xc]
   14e94:	mov    eax,DWORD PTR [ebp+0x8]
   14e97:	pop    ecx
   14e98:	mov    ecx,DWORD PTR [ebp+0xc]
   14e9b:	pop    edi
   14e9c:	pop    esi
   14e9d:	mov    DWORD PTR [eax],ecx
   14e9f:	pop    ebx
   14ea0:	leave  
   14ea1:	ret    0x8
   14ea4:	int3   
   14ea5:	int3   
   14ea6:	int3   
   14ea7:	int3   
   14ea8:	int3   
   14ea9:	int3   
   14eaa:	mov    edi,edi
   14eac:	push   ebp
   14ead:	mov    ebp,esp
   14eaf:	push   ebx
   14eb0:	push   esi
   14eb1:	push   edi
   14eb2:	mov    edi,DWORD PTR [ebp+0x8]
   14eb5:	mov    ebx,ecx
   14eb7:	mov    esi,edi
   14eb9:	cmp    edi,DWORD PTR ds:0x786c0
   14ebf:	je     0x14ee7
   14ec1:	push   DWORD PTR [esi+0x8]
   14ec4:	mov    ecx,ebx
   14ec6:	call   0x14eaa
   14ecb:	mov    esi,DWORD PTR [esi]
   14ecd:	lea    eax,[edi+0xc]
   14ed0:	push   eax
   14ed1:	call   0x139a8
   14ed6:	push   edi
   14ed7:	call   0x11d22
   14edc:	pop    ecx
   14edd:	mov    edi,esi
   14edf:	cmp    esi,DWORD PTR ds:0x786c0
   14ee5:	jne    0x14ec1
   14ee7:	pop    edi
   14ee8:	pop    esi
   14ee9:	pop    ebx
   14eea:	pop    ebp
   14eeb:	ret    0x4
   14eee:	int3   
   14eef:	int3   
   14ef0:	int3   
   14ef1:	int3   
   14ef2:	int3   
   14ef3:	int3   
   14ef4:	mov    edi,edi
   14ef6:	push   esi
   14ef7:	push   edi
   14ef8:	push   0x1
   14efa:	xor    edi,edi
   14efc:	push   edi
   14efd:	mov    esi,ecx
   14eff:	call   0x143dc
   14f04:	cmp    DWORD PTR ds:0x786c8,edi
   14f0a:	jne    0x14f21
   14f0c:	mov    ecx,eax
   14f0e:	mov    DWORD PTR ds:0x786c8,ecx
   14f14:	mov    DWORD PTR [ecx],edi
   14f16:	mov    ecx,DWORD PTR ds:0x786c8
   14f1c:	xor    eax,eax
   14f1e:	mov    DWORD PTR [ecx+0x8],edi
   14f21:	inc    DWORD PTR ds:0x78878
   14f27:	cmp    eax,edi
   14f29:	je     0x14f32
   14f2b:	push   eax
   14f2c:	call   0x11d22
   14f31:	pop    ecx
   14f32:	push   edi
   14f33:	push   DWORD PTR ds:0x786c8
   14f39:	mov    ecx,esi
   14f3b:	call   0x143dc
   14f40:	mov    DWORD PTR [esi+0xc],edi
   14f43:	mov    DWORD PTR [esi+0x4],eax
   14f46:	mov    DWORD PTR [eax],eax
   14f48:	mov    esi,DWORD PTR [esi+0x4]
   14f4b:	pop    edi
   14f4c:	mov    DWORD PTR [esi+0x8],esi
   14f4f:	pop    esi
   14f50:	ret    
   14f51:	int3   
   14f52:	int3   
   14f53:	int3   
   14f54:	int3   
   14f55:	int3   
   14f56:	mov    edi,edi
   14f58:	push   ebp
   14f59:	mov    ebp,esp
   14f5b:	push   ecx
   14f5c:	push   DWORD PTR [ebp-0x4]
   14f5f:	push   DWORD PTR [ebp+0x10]
   14f62:	push   DWORD PTR [ebp+0xc]
   14f65:	push   DWORD PTR [ebp+0x8]
   14f68:	call   0x14586
   14f6d:	add    esp,0x10
   14f70:	leave  
   14f71:	ret    
   14f72:	int3   
   14f73:	int3   
   14f74:	int3   
   14f75:	int3   
   14f76:	int3   
   14f77:	int3   
   14f78:	mov    edi,edi
   14f7a:	push   ebp
   14f7b:	mov    ebp,esp
   14f7d:	push   ebx
   14f7e:	mov    ebx,DWORD PTR [ebp+0x8]
   14f81:	mov    eax,DWORD PTR [ebx+0x4]
   14f84:	push   esi
   14f85:	push   edi
   14f86:	mov    esi,ecx
   14f88:	mov    edi,DWORD PTR [esi+0x4]
   14f8b:	add    eax,0x4
   14f8e:	push   edi
   14f8f:	push   DWORD PTR [eax]
   14f91:	call   0x14516
   14f96:	mov    DWORD PTR [edi+0x4],eax
   14f99:	mov    eax,DWORD PTR [ebx+0xc]
   14f9c:	mov    edi,DWORD PTR [esi+0x4]
   14f9f:	mov    DWORD PTR [esi+0xc],eax
   14fa2:	mov    eax,DWORD PTR [edi+0x4]
   14fa5:	cmp    eax,DWORD PTR ds:0x786b4
   14fab:	je     0x14fc5
   14fad:	push   eax
   14fae:	call   0x10e4e
   14fb3:	mov    DWORD PTR [edi],eax
   14fb5:	mov    esi,DWORD PTR [esi+0x4]
   14fb8:	push   DWORD PTR [esi+0x4]
   14fbb:	call   0x10e2c
   14fc0:	mov    DWORD PTR [esi+0x8],eax
   14fc3:	jmp    0x14fcd
   14fc5:	mov    DWORD PTR [edi],edi
   14fc7:	mov    esi,DWORD PTR [esi+0x4]
   14fca:	mov    DWORD PTR [esi+0x8],esi
   14fcd:	pop    edi
   14fce:	pop    esi
   14fcf:	pop    ebx
   14fd0:	pop    ebp
   14fd1:	ret    0x4
   14fd4:	int3   
   14fd5:	int3   
   14fd6:	int3   
   14fd7:	int3   
   14fd8:	int3   
   14fd9:	int3   
   14fda:	mov    edi,edi
   14fdc:	push   ebp
   14fdd:	mov    ebp,esp
   14fdf:	push   ecx
   14fe0:	push   ebx
   14fe1:	push   esi
   14fe2:	push   edi
   14fe3:	xor    edi,edi
   14fe5:	push   edi
   14fe6:	push   edi
   14fe7:	push   edi
   14fe8:	mov    esi,ecx
   14fea:	mov    eax,DWORD PTR [esi+0x10]
   14fed:	push   edi
   14fee:	push   eax
   14fef:	xor    ebx,ebx
   14ff1:	call   0x119ea
   14ff6:	call   eax
   14ff8:	test   eax,eax
   14ffa:	jge    0x15000
   14ffc:	xor    eax,eax
   14ffe:	jmp    0x15028
   15000:	lea    eax,[ebp+0x8]
   15003:	push   eax
   15004:	lea    eax,[ebp-0x4]
   15007:	push   eax
   15008:	mov    ecx,esi
   1500a:	call   0x13bfe
   1500f:	mov    eax,DWORD PTR [ebp-0x4]
   15012:	cmp    eax,DWORD PTR [esi+0x4]
   15015:	je     0x1501a
   15017:	mov    ebx,DWORD PTR [eax+0x10]
   1501a:	mov    esi,DWORD PTR [esi+0x10]
   1501d:	push   edi
   1501e:	push   esi
   1501f:	call   0x11a14
   15024:	call   eax
   15026:	mov    eax,ebx
   15028:	pop    edi
   15029:	pop    esi
   1502a:	pop    ebx
   1502b:	leave  
   1502c:	ret    0x4
   1502f:	int3   
   15030:	int3   
   15031:	int3   
   15032:	int3   
   15033:	int3   
   15034:	push   0x10
   15036:	push   0x77768
   1503b:	call   0x1e1dc
   15040:	xor    ebx,ebx
   15042:	push   ebx
   15043:	push   ebx
   15044:	push   ebx
   15045:	push   ebx
   15046:	push   0x77b58
   1504b:	call   0x119ea
   15050:	call   eax
   15052:	cmp    eax,ebx
   15054:	jl     0x15112
   1505a:	mov    DWORD PTR [ebp-0x4],ebx
   1505d:	push   0xffffffff
   1505f:	push   0x1e5e8
   15064:	lea    ecx,[ebp-0x20]
   15067:	call   0x12b6e
   1506c:	mov    esi,DWORD PTR [ebp+0x8]
   1506f:	push   esi
   15070:	lea    eax,[ebp+0x8]
   15073:	push   eax
   15074:	mov    ecx,DWORD PTR ds:0x77b28
   1507a:	call   0x145b0
   1507f:	mov    eax,ds:0x77b28
   15084:	mov    eax,DWORD PTR [eax+0x4]
   15087:	mov    ecx,DWORD PTR [ebp+0x8]
   1508a:	cmp    ecx,eax
   1508c:	je     0x1509a
   1508e:	add    ecx,0x14
   15091:	push   ecx
   15092:	lea    ecx,[ebp-0x20]
   15095:	call   0x12a28
   1509a:	mov    edx,DWORD PTR [esi+0x4]
   1509d:	mov    eax,DWORD PTR [ebp-0x1c]
   150a0:	lea    ecx,[eax+edx*1+0x2]
   150a4:	mov    eax,DWORD PTR [ebp+0xc]
   150a7:	cmp    ecx,DWORD PTR [eax]
   150a9:	jbe    0x150b6
   150ab:	mov    DWORD PTR [eax],ecx
   150ad:	mov    DWORD PTR [eax+0x8],0x2
   150b4:	jmp    0x150d9
   150b6:	mov    DWORD PTR [eax+0x8],ebx
   150b9:	mov    esi,DWORD PTR [esi]
   150bb:	lea    edi,[eax+0xc]
   150be:	mov    cl,BYTE PTR [esi]
   150c0:	mov    BYTE PTR [edi],cl
   150c2:	inc    esi
   150c3:	inc    edi
   150c4:	cmp    cl,bl
   150c6:	jne    0x150be
   150c8:	mov    esi,DWORD PTR [ebp-0x20]
   150cb:	lea    eax,[edx+eax*1+0xd]
   150cf:	mov    cl,BYTE PTR [esi]
   150d1:	mov    BYTE PTR [eax],cl
   150d3:	inc    esi
   150d4:	inc    eax
   150d5:	cmp    cl,bl
   150d7:	jne    0x150cf
   150d9:	push   DWORD PTR [ebp-0x20]
   150dc:	call   0x11d22
   150e1:	pop    ecx
   150e2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150e9:	jmp    0x15105
   150eb:	xor    eax,eax
   150ed:	inc    eax
   150ee:	ret    
   150ef:	mov    esp,DWORD PTR [ebp-0x18]
   150f2:	mov    eax,DWORD PTR [ebp+0xc]
   150f5:	mov    DWORD PTR [eax+0x8],0x4
   150fc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15103:	xor    ebx,ebx
   15105:	push   ebx
   15106:	push   0x77b58
   1510b:	call   0x11a14
   15110:	call   eax
   15112:	call   0x1e221
   15117:	ret    0x8
   1511a:	int3   
   1511b:	int3   
   1511c:	int3   
   1511d:	int3   
   1511e:	int3   
   1511f:	int3   
   15120:	push   0xc
   15122:	push   0x77788
   15127:	call   0x1e1dc
   1512c:	xor    edi,edi
   1512e:	push   edi
   1512f:	push   edi
   15130:	push   edi
   15131:	push   edi
   15132:	push   0x77b58
   15137:	call   0x119ea
   1513c:	call   eax
   1513e:	cmp    eax,edi
   15140:	jl     0x151f0
   15146:	mov    DWORD PTR [ebp-0x4],edi
   15149:	lea    eax,[ebp+0x8]
   1514c:	push   eax
   1514d:	lea    eax,[ebp-0x1c]
   15150:	push   eax
   15151:	mov    esi,DWORD PTR ds:0x77bb4
   15157:	mov    ecx,esi
   15159:	call   0x13cf8
   1515e:	mov    esi,DWORD PTR [esi+0x4]
   15161:	mov    ecx,DWORD PTR [ebp-0x1c]
   15164:	cmp    ecx,esi
   15166:	jne    0x15174
   15168:	mov    eax,DWORD PTR [ebp+0xc]
   1516b:	mov    DWORD PTR [eax+0x8],0x1
   15172:	jmp    0x151c0
   15174:	mov    eax,DWORD PTR [ecx+0x10]
   15177:	cmp    eax,edi
   15179:	jne    0x1517f
   1517b:	xor    edx,edx
   1517d:	jmp    0x15182
   1517f:	mov    edx,DWORD PTR [eax+0x8]
   15182:	mov    eax,DWORD PTR [ebp+0xc]
   15185:	cmp    edx,DWORD PTR [eax]
   15187:	jbe    0x15194
   15189:	mov    DWORD PTR [eax],edx
   1518b:	mov    DWORD PTR [eax+0x8],0x2
   15192:	jmp    0x151c0
   15194:	mov    DWORD PTR [eax+0x8],edi
   15197:	mov    edx,DWORD PTR [ecx+0x10]
   1519a:	cmp    edx,edi
   1519c:	jne    0x151a2
   1519e:	xor    edx,edx
   151a0:	jmp    0x151a5
   151a2:	mov    edx,DWORD PTR [edx+0x8]
   151a5:	mov    ecx,DWORD PTR [ecx+0x10]
   151a8:	cmp    ecx,edi
   151aa:	jne    0x151b0
   151ac:	xor    ecx,ecx
   151ae:	jmp    0x151b2
   151b0:	mov    ecx,DWORD PTR [ecx]
   151b2:	push   edx
   151b3:	push   ecx
   151b4:	add    eax,0xc
   151b7:	push   eax
   151b8:	call   0x1e1b6
   151bd:	add    esp,0xc
   151c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151c7:	jmp    0x151e3
   151c9:	xor    eax,eax
   151cb:	inc    eax
   151cc:	ret    
   151cd:	mov    esp,DWORD PTR [ebp-0x18]
   151d0:	mov    eax,DWORD PTR [ebp+0xc]
   151d3:	mov    DWORD PTR [eax+0x8],0x4
   151da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151e1:	xor    edi,edi
   151e3:	push   edi
   151e4:	push   0x77b58
   151e9:	call   0x11a14
   151ee:	call   eax
   151f0:	call   0x1e221
   151f5:	ret    0x8
   151f8:	int3   
   151f9:	int3   
   151fa:	int3   
   151fb:	int3   
   151fc:	int3   
   151fd:	int3   
   151fe:	mov    edi,edi
   15200:	push   ebp
   15201:	mov    ebp,esp
   15203:	push   ebx
   15204:	push   esi
   15205:	push   DWORD PTR [ebp+0x8]
   15208:	mov    esi,ecx
   1520a:	lea    eax,[ebp+0x8]
   1520d:	push   eax
   1520e:	lea    ecx,[esi+0x4]
   15211:	xor    bl,bl
   15213:	call   0x13d5a
   15218:	mov    eax,DWORD PTR [ebp+0x8]
   1521b:	cmp    eax,DWORD PTR [esi+0x8]
   1521e:	je     0x1522e
   15220:	mov    ecx,DWORD PTR [ebp+0xc]
   15223:	add    eax,0x18
   15226:	push   eax
   15227:	call   0x12b00
   1522c:	inc    bl
   1522e:	pop    esi
   1522f:	mov    al,bl
   15231:	pop    ebx
   15232:	pop    ebp
   15233:	ret    0x8
   15236:	int3   
   15237:	int3   
   15238:	int3   
   15239:	int3   
   1523a:	int3   
   1523b:	int3   
   1523c:	mov    edi,edi
   1523e:	push   ebp
   1523f:	mov    ebp,esp
   15241:	push   ecx
   15242:	push   esi
   15243:	mov    esi,ecx
   15245:	mov    eax,DWORD PTR [esi+0x4]
   15248:	mov    ecx,DWORD PTR [eax]
   1524a:	push   eax
   1524b:	push   ecx
   1524c:	lea    eax,[ebp-0x4]
   1524f:	push   eax
   15250:	mov    ecx,esi
   15252:	call   0x14694
   15257:	push   DWORD PTR [esi+0x4]
   1525a:	call   0x11d22
   1525f:	xor    eax,eax
   15261:	mov    DWORD PTR [esi+0x4],eax
   15264:	mov    DWORD PTR [esi+0xc],eax
   15267:	dec    DWORD PTR ds:0x78870
   1526d:	pop    ecx
   1526e:	pop    esi
   1526f:	jne    0x15287
   15271:	mov    ecx,DWORD PTR ds:0x786b4
   15277:	mov    ds:0x786b4,eax
   1527c:	cmp    ecx,eax
   1527e:	je     0x15287
   15280:	push   ecx
   15281:	call   0x11d22
   15286:	pop    ecx
   15287:	leave  
   15288:	ret    
   15289:	int3   
   1528a:	int3   
   1528b:	int3   
   1528c:	int3   
   1528d:	int3   
   1528e:	mov    edi,edi
   15290:	push   ebp
   15291:	mov    ebp,esp
   15293:	push   ecx
   15294:	push   ecx
   15295:	push   DWORD PTR [ebp+0x8]
   15298:	lea    eax,[ebp-0x8]
   1529b:	push   eax
   1529c:	call   0x1402c
   152a1:	and    DWORD PTR [ebp+0x8],0x0
   152a5:	lea    eax,[ebp+0x8]
   152a8:	push   eax
   152a9:	push   DWORD PTR [ebp-0x4]
   152ac:	push   DWORD PTR [ebp-0x8]
   152af:	call   0x14f56
   152b4:	mov    eax,DWORD PTR [ebp+0x8]
   152b7:	add    esp,0xc
   152ba:	leave  
   152bb:	ret    0x4
   152be:	int3   
   152bf:	int3   
   152c0:	int3   
   152c1:	int3   
   152c2:	int3   
   152c3:	int3   
   152c4:	mov    edi,edi
   152c6:	push   ebp
   152c7:	mov    ebp,esp
   152c9:	push   ecx
   152ca:	push   ebx
   152cb:	push   esi
   152cc:	push   edi
   152cd:	mov    edi,ecx
   152cf:	mov    eax,DWORD PTR [edi+0x4]
   152d2:	mov    esi,DWORD PTR [eax+0x4]
   152d5:	mov    ebx,eax
   152d7:	mov    eax,ds:0x786b4
   152dc:	mov    dl,0x1
   152de:	cmp    esi,eax
   152e0:	je     0x152fe
   152e2:	mov    ecx,DWORD PTR [ebp+0xc]
   152e5:	mov    ecx,DWORD PTR [ecx]
   152e7:	cmp    ecx,DWORD PTR [esi+0xc]
   152ea:	mov    ebx,esi
   152ec:	setb   dl
   152ef:	test   dl,dl
   152f1:	je     0x152f7
   152f3:	mov    esi,DWORD PTR [esi]
   152f5:	jmp    0x152fa
   152f7:	mov    esi,DWORD PTR [esi+0x8]
   152fa:	cmp    esi,eax
   152fc:	jne    0x152e7
   152fe:	cmp    BYTE PTR [edi+0x8],0x0
   15302:	je     0x1531f
   15304:	push   DWORD PTR [ebp+0xc]
   15307:	push   ebx
   15308:	push   esi
   15309:	lea    eax,[ebp+0xc]
   1530c:	push   eax
   1530d:	mov    ecx,edi
   1530f:	call   0x14946
   15314:	mov    ecx,DWORD PTR [eax]
   15316:	mov    eax,DWORD PTR [ebp+0x8]
   15319:	mov    BYTE PTR [eax+0x4],0x1
   1531d:	jmp    0x1534e
   1531f:	mov    ecx,ebx
   15321:	mov    DWORD PTR [ebp-0x4],ecx
   15324:	test   dl,dl
   15326:	je     0x1533a
   15328:	mov    eax,DWORD PTR [edi+0x4]
   1532b:	cmp    ebx,DWORD PTR [eax]
   1532d:	je     0x15304
   1532f:	lea    ecx,[ebp-0x4]
   15332:	call   0x12e98
   15337:	mov    ecx,DWORD PTR [ebp-0x4]
   1533a:	mov    edx,DWORD PTR [ecx+0xc]
   1533d:	mov    eax,DWORD PTR [ebp+0xc]
   15340:	cmp    edx,DWORD PTR [eax]
   15342:	jae    0x15347
   15344:	push   eax
   15345:	jmp    0x15307
   15347:	mov    eax,DWORD PTR [ebp+0x8]
   1534a:	mov    BYTE PTR [eax+0x4],0x0
   1534e:	pop    edi
   1534f:	pop    esi
   15350:	mov    DWORD PTR [eax],ecx
   15352:	pop    ebx
   15353:	leave  
   15354:	ret    0x8
   15357:	int3   
   15358:	int3   
   15359:	int3   
   1535a:	int3   
   1535b:	int3   
   1535c:	mov    edi,edi
   1535e:	push   ebp
   1535f:	mov    ebp,esp
   15361:	push   ecx
   15362:	push   ebx
   15363:	push   esi
   15364:	push   edi
   15365:	mov    edi,ecx
   15367:	mov    eax,DWORD PTR [edi+0x4]
   1536a:	mov    esi,DWORD PTR [eax+0x4]
   1536d:	mov    ebx,eax
   1536f:	mov    eax,ds:0x786b0
   15374:	mov    dl,0x1
   15376:	cmp    esi,eax
   15378:	je     0x15396
   1537a:	mov    ecx,DWORD PTR [ebp+0xc]
   1537d:	mov    ecx,DWORD PTR [ecx]
   1537f:	cmp    ecx,DWORD PTR [esi+0xc]
   15382:	mov    ebx,esi
   15384:	setb   dl
   15387:	test   dl,dl
   15389:	je     0x1538f
   1538b:	mov    esi,DWORD PTR [esi]
   1538d:	jmp    0x15392
   1538f:	mov    esi,DWORD PTR [esi+0x8]
   15392:	cmp    esi,eax
   15394:	jne    0x1537f
   15396:	cmp    BYTE PTR [edi+0x8],0x0
   1539a:	je     0x153b7
   1539c:	push   DWORD PTR [ebp+0xc]
   1539f:	push   ebx
   153a0:	push   esi
   153a1:	lea    eax,[ebp+0xc]
   153a4:	push   eax
   153a5:	mov    ecx,edi
   153a7:	call   0x14af8
   153ac:	mov    ecx,DWORD PTR [eax]
   153ae:	mov    eax,DWORD PTR [ebp+0x8]
   153b1:	mov    BYTE PTR [eax+0x4],0x1
   153b5:	jmp    0x153e6
   153b7:	mov    ecx,ebx
   153b9:	mov    DWORD PTR [ebp-0x4],ecx
   153bc:	test   dl,dl
   153be:	je     0x153d2
   153c0:	mov    eax,DWORD PTR [edi+0x4]
   153c3:	cmp    ebx,DWORD PTR [eax]
   153c5:	je     0x1539c
   153c7:	lea    ecx,[ebp-0x4]
   153ca:	call   0x10eb4
   153cf:	mov    ecx,DWORD PTR [ebp-0x4]
   153d2:	mov    edx,DWORD PTR [ecx+0xc]
   153d5:	mov    eax,DWORD PTR [ebp+0xc]
   153d8:	cmp    edx,DWORD PTR [eax]
   153da:	jae    0x153df
   153dc:	push   eax
   153dd:	jmp    0x1539f
   153df:	mov    eax,DWORD PTR [ebp+0x8]
   153e2:	mov    BYTE PTR [eax+0x4],0x0
   153e6:	pop    edi
   153e7:	pop    esi
   153e8:	mov    DWORD PTR [eax],ecx
   153ea:	pop    ebx
   153eb:	leave  
   153ec:	ret    0x8
   153ef:	int3   
   153f0:	int3   
   153f1:	int3   
   153f2:	int3   
   153f3:	int3   
   153f4:	mov    edi,edi
   153f6:	push   ebp
   153f7:	mov    ebp,esp
   153f9:	push   ecx
   153fa:	push   esi
   153fb:	mov    esi,ecx
   153fd:	cmp    DWORD PTR [esi+0xc],0x0
   15401:	mov    ecx,DWORD PTR [ebp+0xc]
   15404:	je     0x1543e
   15406:	mov    eax,DWORD PTR [esi+0x4]
   15409:	cmp    ecx,DWORD PTR [eax]
   1540b:	jne    0x1543e
   1540d:	cmp    DWORD PTR [ebp+0x10],eax
   15410:	jne    0x1543e
   15412:	push   DWORD PTR [eax+0x4]
   15415:	mov    ecx,esi
   15417:	call   0x14eaa
   1541c:	mov    ecx,DWORD PTR ds:0x786c0
   15422:	mov    eax,DWORD PTR [esi+0x4]
   15425:	mov    DWORD PTR [eax+0x4],ecx
   15428:	mov    eax,DWORD PTR [esi+0x4]
   1542b:	and    DWORD PTR [esi+0xc],0x0
   1542f:	mov    DWORD PTR [eax],eax
   15431:	mov    eax,DWORD PTR [esi+0x4]
   15434:	mov    DWORD PTR [eax+0x8],eax
   15437:	mov    eax,DWORD PTR [esi+0x4]
   1543a:	mov    ecx,DWORD PTR [eax]
   1543c:	jmp    0x15463
   1543e:	cmp    ecx,DWORD PTR [ebp+0x10]
   15441:	je     0x15463
   15443:	push   edi
   15444:	mov    edi,ecx
   15446:	lea    ecx,[ebp+0xc]
   15449:	call   0x11172
   1544e:	push   edi
   1544f:	lea    eax,[ebp-0x4]
   15452:	push   eax
   15453:	mov    ecx,esi
   15455:	call   0x14c48
   1545a:	mov    ecx,DWORD PTR [ebp+0xc]
   1545d:	cmp    ecx,DWORD PTR [ebp+0x10]
   15460:	jne    0x15444
   15462:	pop    edi
   15463:	mov    eax,DWORD PTR [ebp+0x8]
   15466:	mov    DWORD PTR [eax],ecx
   15468:	pop    esi
   15469:	leave  
   1546a:	ret    0xc
   1546d:	int3   
   1546e:	int3   
   1546f:	int3   
   15470:	int3   
   15471:	int3   
   15472:	mov    edi,edi
   15474:	push   ebp
   15475:	mov    ebp,esp
   15477:	push   ecx
   15478:	push   ecx
   15479:	push   ebx
   1547a:	push   esi
   1547b:	mov    DWORD PTR [ebp-0x4],ecx
   1547e:	push   edi
   1547f:	mov    edi,DWORD PTR [ebp+0xc]
   15482:	lea    ecx,[ebp+0xc]
   15485:	call   0x12e62
   1548a:	mov    esi,DWORD PTR [edi]
   1548c:	mov    eax,ds:0x786b8
   15491:	mov    ebx,edi
   15493:	mov    DWORD PTR [ebp-0x8],esi
   15496:	cmp    esi,eax
   15498:	jne    0x154b6
   1549a:	mov    esi,DWORD PTR [edi+0x8]
   1549d:	mov    eax,DWORD PTR [ebx+0x4]
   154a0:	mov    ecx,DWORD PTR [ebp-0x4]
   154a3:	mov    DWORD PTR [esi+0x4],eax
   154a6:	mov    eax,DWORD PTR [ecx+0x4]
   154a9:	cmp    DWORD PTR [eax+0x4],edi
   154ac:	jne    0x1552b
   154ae:	mov    DWORD PTR [eax+0x4],esi
   154b1:	jmp    0x15539
   154b6:	mov    ecx,DWORD PTR [edi+0x8]
   154b9:	cmp    ecx,eax
   154bb:	je     0x1549d
   154bd:	push   ecx
   154be:	call   0x10e92
   154c3:	mov    ebx,eax
   154c5:	mov    esi,DWORD PTR [ebx+0x8]
   154c8:	cmp    ebx,edi
   154ca:	je     0x1549d
   154cc:	mov    eax,DWORD PTR [ebp-0x8]
   154cf:	mov    DWORD PTR [eax+0x4],ebx
   154d2:	mov    eax,DWORD PTR [edi]
   154d4:	mov    DWORD PTR [ebx],eax
   154d6:	cmp    ebx,DWORD PTR [edi+0x8]
   154d9:	jne    0x154e0
   154db:	mov    DWORD PTR [esi+0x4],ebx
   154de:	jmp    0x154f7
   154e0:	mov    eax,DWORD PTR [ebx+0x4]
   154e3:	mov    DWORD PTR [esi+0x4],eax
   154e6:	mov    eax,DWORD PTR [ebx+0x4]
   154e9:	mov    DWORD PTR [eax],esi
   154eb:	mov    eax,DWORD PTR [edi+0x8]
   154ee:	mov    DWORD PTR [ebx+0x8],eax
   154f1:	mov    eax,DWORD PTR [edi+0x8]
   154f4:	mov    DWORD PTR [eax+0x4],ebx
   154f7:	mov    eax,DWORD PTR [ebp-0x4]
   154fa:	mov    eax,DWORD PTR [eax+0x4]
   154fd:	cmp    DWORD PTR [eax+0x4],edi
   15500:	jne    0x15507
   15502:	mov    DWORD PTR [eax+0x4],ebx
   15505:	jmp    0x15515
   15507:	mov    eax,DWORD PTR [edi+0x4]
   1550a:	cmp    DWORD PTR [eax],edi
   1550c:	jne    0x15512
   1550e:	mov    DWORD PTR [eax],ebx
   15510:	jmp    0x15515
   15512:	mov    DWORD PTR [eax+0x8],ebx
   15515:	mov    eax,DWORD PTR [edi+0x4]
   15518:	mov    DWORD PTR [ebx+0x4],eax
   1551b:	mov    eax,DWORD PTR [ebx+0x60]
   1551e:	mov    ecx,DWORD PTR [edi+0x60]
   15521:	mov    DWORD PTR [ebx+0x60],ecx
   15524:	mov    DWORD PTR [edi+0x60],eax
   15527:	mov    ebx,edi
   15529:	jmp    0x1558c
   1552b:	mov    eax,DWORD PTR [edi+0x4]
   1552e:	cmp    DWORD PTR [eax],edi
   15530:	jne    0x15536
   15532:	mov    DWORD PTR [eax],esi
   15534:	jmp    0x15539
   15536:	mov    DWORD PTR [eax+0x8],esi
   15539:	mov    eax,DWORD PTR [ecx+0x4]
   1553c:	mov    DWORD PTR [ebp-0x8],eax
   1553f:	cmp    DWORD PTR [eax],edi
   15541:	jne    0x15563
   15543:	mov    edx,DWORD PTR [edi+0x8]
   15546:	cmp    edx,DWORD PTR ds:0x786b8
   1554c:	jne    0x15555
   1554e:	mov    edx,DWORD PTR [edi+0x4]
   15551:	mov    DWORD PTR [eax],edx
   15553:	jmp    0x15563
   15555:	push   esi
   15556:	call   0x10e92
   1555b:	mov    ecx,DWORD PTR [ebp-0x8]
   1555e:	mov    DWORD PTR [ecx],eax
   15560:	mov    ecx,DWORD PTR [ebp-0x4]
   15563:	mov    eax,DWORD PTR [ecx+0x4]
   15566:	mov    DWORD PTR [ebp-0x8],eax
   15569:	cmp    DWORD PTR [eax+0x8],edi
   1556c:	jne    0x1558c
   1556e:	mov    ecx,DWORD PTR [edi]
   15570:	cmp    ecx,DWORD PTR ds:0x786b8
   15576:	jne    0x15580
   15578:	mov    ecx,DWORD PTR [edi+0x4]
   1557b:	mov    DWORD PTR [eax+0x8],ecx
   1557e:	jmp    0x1558c
   15580:	push   esi
   15581:	call   0x10e70
   15586:	mov    ecx,DWORD PTR [ebp-0x8]
   15589:	mov    DWORD PTR [ecx+0x8],eax
   1558c:	xor    edi,edi
   1558e:	inc    edi
   1558f:	cmp    DWORD PTR [ebx+0x60],edi
   15592:	jne    0x156a9
   15598:	jmp    0x15657
   1559d:	cmp    DWORD PTR [esi+0x60],edi
   155a0:	jne    0x156a6
   155a6:	mov    eax,DWORD PTR [esi+0x4]
   155a9:	cmp    esi,DWORD PTR [eax]
   155ab:	jne    0x15622
   155ad:	mov    eax,DWORD PTR [eax+0x8]
   155b0:	cmp    DWORD PTR [eax+0x60],0x0
   155b4:	jne    0x155ce
   155b6:	mov    DWORD PTR [eax+0x60],edi
   155b9:	mov    eax,DWORD PTR [esi+0x4]
   155bc:	and    DWORD PTR [eax+0x60],0x0
   155c0:	push   DWORD PTR [esi+0x4]
   155c3:	call   0x12fec
   155c8:	mov    eax,DWORD PTR [esi+0x4]
   155cb:	mov    eax,DWORD PTR [eax+0x8]
   155ce:	mov    ecx,DWORD PTR [eax]
   155d0:	cmp    DWORD PTR [ecx+0x60],edi
   155d3:	jne    0x155dd
   155d5:	mov    ecx,DWORD PTR [eax+0x8]
   155d8:	cmp    DWORD PTR [ecx+0x60],edi
   155db:	je     0x15650
   155dd:	mov    ecx,DWORD PTR [eax+0x8]
   155e0:	cmp    DWORD PTR [ecx+0x60],edi
   155e3:	jne    0x155fd
   155e5:	mov    ecx,DWORD PTR [eax]
   155e7:	mov    DWORD PTR [ecx+0x60],edi
   155ea:	mov    ecx,DWORD PTR [ebp-0x4]
   155ed:	and    DWORD PTR [eax+0x60],0x0
   155f1:	push   eax
   155f2:	call   0x1303a
   155f7:	mov    eax,DWORD PTR [esi+0x4]
   155fa:	mov    eax,DWORD PTR [eax+0x8]
   155fd:	mov    ecx,DWORD PTR [esi+0x4]
   15600:	mov    ecx,DWORD PTR [ecx+0x60]
   15603:	mov    DWORD PTR [eax+0x60],ecx
   15606:	mov    ecx,DWORD PTR [esi+0x4]
   15609:	mov    DWORD PTR [ecx+0x60],edi
   1560c:	mov    eax,DWORD PTR [eax+0x8]
   1560f:	mov    ecx,DWORD PTR [ebp-0x4]
   15612:	mov    DWORD PTR [eax+0x60],edi
   15615:	push   DWORD PTR [esi+0x4]
   15618:	call   0x12fec
   1561d:	jmp    0x156a6
   15622:	mov    eax,DWORD PTR [eax]
   15624:	cmp    DWORD PTR [eax+0x60],0x0
   15628:	jne    0x15641
   1562a:	mov    DWORD PTR [eax+0x60],edi
   1562d:	mov    eax,DWORD PTR [esi+0x4]
   15630:	and    DWORD PTR [eax+0x60],0x0
   15634:	push   DWORD PTR [esi+0x4]
   15637:	call   0x1303a
   1563c:	mov    eax,DWORD PTR [esi+0x4]
   1563f:	mov    eax,DWORD PTR [eax]
   15641:	mov    ecx,DWORD PTR [eax+0x8]
   15644:	cmp    DWORD PTR [ecx+0x60],edi
   15647:	jne    0x15668
   15649:	mov    ecx,DWORD PTR [eax]
   1564b:	cmp    DWORD PTR [ecx+0x60],edi
   1564e:	jne    0x15668
   15650:	and    DWORD PTR [eax+0x60],0x0
   15654:	mov    esi,DWORD PTR [esi+0x4]
   15657:	mov    ecx,DWORD PTR [ebp-0x4]
   1565a:	mov    eax,DWORD PTR [ecx+0x4]
   1565d:	cmp    esi,DWORD PTR [eax+0x4]
   15660:	jne    0x1559d
   15666:	jmp    0x156a6
   15668:	mov    ecx,DWORD PTR [eax]
   1566a:	cmp    DWORD PTR [ecx+0x60],edi
   1566d:	jne    0x15687
   1566f:	mov    ecx,DWORD PTR [eax+0x8]
   15672:	mov    DWORD PTR [ecx+0x60],edi
   15675:	mov    ecx,DWORD PTR [ebp-0x4]
   15678:	and    DWORD PTR [eax+0x60],0x0
   1567c:	push   eax
   1567d:	call   0x12fec
   15682:	mov    eax,DWORD PTR [esi+0x4]
   15685:	mov    eax,DWORD PTR [eax]
   15687:	mov    ecx,DWORD PTR [esi+0x4]
   1568a:	mov    ecx,DWORD PTR [ecx+0x60]
   1568d:	mov    DWORD PTR [eax+0x60],ecx
   15690:	mov    ecx,DWORD PTR [esi+0x4]
   15693:	mov    DWORD PTR [ecx+0x60],edi
   15696:	mov    eax,DWORD PTR [eax]
   15698:	mov    ecx,DWORD PTR [ebp-0x4]
   1569b:	mov    DWORD PTR [eax+0x60],edi
   1569e:	push   DWORD PTR [esi+0x4]
   156a1:	call   0x1303a
   156a6:	mov    DWORD PTR [esi+0x60],edi
   156a9:	lea    eax,[ebx+0x10]
   156ac:	push   eax
   156ad:	call   0x1448c
   156b2:	push   ebx
   156b3:	call   0x11d22
   156b8:	mov    eax,DWORD PTR [ebp-0x4]
   156bb:	dec    DWORD PTR [eax+0xc]
   156be:	mov    eax,DWORD PTR [ebp+0x8]
   156c1:	pop    ecx
   156c2:	mov    ecx,DWORD PTR [ebp+0xc]
   156c5:	pop    edi
   156c6:	pop    esi
   156c7:	mov    DWORD PTR [eax],ecx
   156c9:	pop    ebx
   156ca:	leave  
   156cb:	ret    0x8
   156ce:	int3   
   156cf:	int3   
   156d0:	int3   
   156d1:	int3   
   156d2:	int3   
   156d3:	int3   
   156d4:	mov    edi,edi
   156d6:	push   ebp
   156d7:	mov    ebp,esp
   156d9:	push   ebx
   156da:	push   esi
   156db:	push   edi
   156dc:	mov    edi,DWORD PTR [ebp+0x8]
   156df:	mov    ebx,ecx
   156e1:	mov    esi,edi
   156e3:	cmp    edi,DWORD PTR ds:0x786b8
   156e9:	je     0x15711
   156eb:	push   DWORD PTR [esi+0x8]
   156ee:	mov    ecx,ebx
   156f0:	call   0x156d4
   156f5:	mov    esi,DWORD PTR [esi]
   156f7:	lea    eax,[edi+0x10]
   156fa:	push   eax
   156fb:	call   0x1448c
   15700:	push   edi
   15701:	call   0x11d22
   15706:	pop    ecx
   15707:	mov    edi,esi
   15709:	cmp    esi,DWORD PTR ds:0x786b8
   1570f:	jne    0x156eb
   15711:	pop    edi
   15712:	pop    esi
   15713:	pop    ebx
   15714:	pop    ebp
   15715:	ret    0x4
   15718:	int3   
   15719:	int3   
   1571a:	int3   
   1571b:	int3   
   1571c:	int3   
   1571d:	int3   
   1571e:	mov    edi,edi
   15720:	push   ebp
   15721:	mov    ebp,esp
   15723:	push   ebx
   15724:	push   esi
   15725:	mov    esi,DWORD PTR [ebp+0x10]
   15728:	push   edi
   15729:	push   0x0
   1572b:	push   esi
   1572c:	mov    edi,ecx
   1572e:	call   0x143dc
   15733:	push   DWORD PTR [ebp+0x14]
   15736:	mov    ebx,eax
   15738:	mov    eax,ds:0x786b8
   1573d:	mov    DWORD PTR [ebx],eax
   1573f:	mov    eax,ds:0x786b8
   15744:	mov    DWORD PTR [ebx+0x8],eax
   15747:	lea    eax,[ebx+0x10]
   1574a:	push   eax
   1574b:	call   0x14450
   15750:	inc    DWORD PTR [edi+0xc]
   15753:	cmp    esi,DWORD PTR [edi+0x4]
   15756:	je     0x15780
   15758:	mov    eax,DWORD PTR [ebp+0xc]
   1575b:	cmp    eax,DWORD PTR ds:0x786b8
   15761:	jne    0x15780
   15763:	lea    eax,[esi+0x10]
   15766:	push   eax
   15767:	push   DWORD PTR [ebp+0x14]
   1576a:	call   0x19eec
   1576f:	test   al,al
   15771:	jne    0x15780
   15773:	mov    DWORD PTR [esi+0x8],ebx
   15776:	mov    eax,DWORD PTR [edi+0x4]
   15779:	cmp    esi,DWORD PTR [eax+0x8]
   1577c:	jne    0x1579a
   1577e:	jmp    0x1578f
   15780:	mov    DWORD PTR [esi],ebx
   15782:	mov    eax,DWORD PTR [edi+0x4]
   15785:	cmp    esi,eax
   15787:	jne    0x15794
   15789:	mov    DWORD PTR [eax+0x4],ebx
   1578c:	mov    eax,DWORD PTR [edi+0x4]
   1578f:	mov    DWORD PTR [eax+0x8],ebx
   15792:	jmp    0x1579a
   15794:	cmp    esi,DWORD PTR [eax]
   15796:	jne    0x1579a
   15798:	mov    DWORD PTR [eax],ebx
   1579a:	mov    eax,DWORD PTR [edi+0x4]
   1579d:	mov    esi,ebx
   1579f:	cmp    ebx,DWORD PTR [eax+0x4]
   157a2:	je     0x15856
   157a8:	mov    eax,DWORD PTR [esi+0x4]
   157ab:	xor    edx,edx
   157ad:	cmp    DWORD PTR [eax+0x60],edx
   157b0:	jne    0x15856
   157b6:	mov    ecx,DWORD PTR [eax+0x4]
   157b9:	cmp    eax,DWORD PTR [ecx]
   157bb:	jne    0x157f7
   157bd:	mov    ecx,DWORD PTR [ecx+0x8]
   157c0:	cmp    DWORD PTR [ecx+0x60],edx
   157c3:	je     0x157fe
   157c5:	cmp    esi,DWORD PTR [eax+0x8]
   157c8:	jne    0x157d4
   157ca:	mov    esi,eax
   157cc:	push   esi
   157cd:	mov    ecx,edi
   157cf:	call   0x12fec
   157d4:	mov    eax,DWORD PTR [esi+0x4]
   157d7:	mov    DWORD PTR [eax+0x60],0x1
   157de:	mov    eax,DWORD PTR [esi+0x4]
   157e1:	mov    eax,DWORD PTR [eax+0x4]
   157e4:	and    DWORD PTR [eax+0x60],0x0
   157e8:	mov    eax,DWORD PTR [esi+0x4]
   157eb:	push   DWORD PTR [eax+0x4]
   157ee:	mov    ecx,edi
   157f0:	call   0x1303a
   157f5:	jmp    0x1584a
   157f7:	mov    ecx,DWORD PTR [ecx]
   157f9:	cmp    DWORD PTR [ecx+0x60],edx
   157fc:	jne    0x1581b
   157fe:	mov    edx,eax
   15800:	xor    eax,eax
   15802:	inc    eax
   15803:	mov    DWORD PTR [edx+0x60],eax
   15806:	mov    DWORD PTR [ecx+0x60],eax
   15809:	mov    eax,DWORD PTR [esi+0x4]
   1580c:	mov    eax,DWORD PTR [eax+0x4]
   1580f:	and    DWORD PTR [eax+0x60],0x0
   15813:	mov    eax,DWORD PTR [esi+0x4]
   15816:	mov    esi,DWORD PTR [eax+0x4]
   15819:	jmp    0x1584a
   1581b:	cmp    esi,DWORD PTR [eax]
   1581d:	jne    0x15829
   1581f:	mov    esi,eax
   15821:	push   esi
   15822:	mov    ecx,edi
   15824:	call   0x1303a
   15829:	mov    eax,DWORD PTR [esi+0x4]
   1582c:	mov    DWORD PTR [eax+0x60],0x1
   15833:	mov    eax,DWORD PTR [esi+0x4]
   15836:	mov    eax,DWORD PTR [eax+0x4]
   15839:	and    DWORD PTR [eax+0x60],0x0
   1583d:	mov    eax,DWORD PTR [esi+0x4]
   15840:	push   DWORD PTR [eax+0x4]
   15843:	mov    ecx,edi
   15845:	call   0x12fec
   1584a:	mov    eax,DWORD PTR [edi+0x4]
   1584d:	cmp    esi,DWORD PTR [eax+0x4]
   15850:	jne    0x157a8
   15856:	mov    eax,DWORD PTR [edi+0x4]
   15859:	mov    eax,DWORD PTR [eax+0x4]
   1585c:	pop    edi
   1585d:	mov    DWORD PTR [eax+0x60],0x1
   15864:	mov    eax,DWORD PTR [ebp+0x8]
   15867:	pop    esi
   15868:	mov    DWORD PTR [eax],ebx
   1586a:	pop    ebx
   1586b:	pop    ebp
   1586c:	ret    0x10
   1586f:	int3   
   15870:	int3   
   15871:	int3   
   15872:	int3   
   15873:	int3   
   15874:	mov    edi,edi
   15876:	push   ebp
   15877:	mov    ebp,esp
   15879:	push   ecx
   1587a:	push   ecx
   1587b:	push   ebx
   1587c:	push   esi
   1587d:	mov    DWORD PTR [ebp-0x4],ecx
   15880:	push   edi
   15881:	mov    edi,DWORD PTR [ebp+0xc]
   15884:	lea    ecx,[ebp+0xc]
   15887:	call   0x13786
   1588c:	mov    esi,DWORD PTR [edi]
   1588e:	mov    eax,ds:0x786bc
   15893:	mov    ebx,edi
   15895:	mov    DWORD PTR [ebp-0x8],esi
   15898:	cmp    esi,eax
   1589a:	jne    0x158b8
   1589c:	mov    esi,DWORD PTR [edi+0x8]
   1589f:	mov    eax,DWORD PTR [ebx+0x4]
   158a2:	mov    ecx,DWORD PTR [ebp-0x4]
   158a5:	mov    DWORD PTR [esi+0x4],eax
   158a8:	mov    eax,DWORD PTR [ecx+0x4]
   158ab:	cmp    DWORD PTR [eax+0x4],edi
   158ae:	jne    0x1592d
   158b0:	mov    DWORD PTR [eax+0x4],esi
   158b3:	jmp    0x1593b
   158b8:	mov    ecx,DWORD PTR [edi+0x8]
   158bb:	cmp    ecx,eax
   158bd:	je     0x1589f
   158bf:	push   ecx
   158c0:	call   0x12cb2
   158c5:	mov    ebx,eax
   158c7:	mov    esi,DWORD PTR [ebx+0x8]
   158ca:	cmp    ebx,edi
   158cc:	je     0x1589f
   158ce:	mov    eax,DWORD PTR [ebp-0x8]
   158d1:	mov    DWORD PTR [eax+0x4],ebx
   158d4:	mov    eax,DWORD PTR [edi]
   158d6:	mov    DWORD PTR [ebx],eax
   158d8:	cmp    ebx,DWORD PTR [edi+0x8]
   158db:	jne    0x158e2
   158dd:	mov    DWORD PTR [esi+0x4],ebx
   158e0:	jmp    0x158f9
   158e2:	mov    eax,DWORD PTR [ebx+0x4]
   158e5:	mov    DWORD PTR [esi+0x4],eax
   158e8:	mov    eax,DWORD PTR [ebx+0x4]
   158eb:	mov    DWORD PTR [eax],esi
   158ed:	mov    eax,DWORD PTR [edi+0x8]
   158f0:	mov    DWORD PTR [ebx+0x8],eax
   158f3:	mov    eax,DWORD PTR [edi+0x8]
   158f6:	mov    DWORD PTR [eax+0x4],ebx
   158f9:	mov    eax,DWORD PTR [ebp-0x4]
   158fc:	mov    eax,DWORD PTR [eax+0x4]
   158ff:	cmp    DWORD PTR [eax+0x4],edi
   15902:	jne    0x15909
   15904:	mov    DWORD PTR [eax+0x4],ebx
   15907:	jmp    0x15917
   15909:	mov    eax,DWORD PTR [edi+0x4]
   1590c:	cmp    DWORD PTR [eax],edi
   1590e:	jne    0x15914
   15910:	mov    DWORD PTR [eax],ebx
   15912:	jmp    0x15917
   15914:	mov    DWORD PTR [eax+0x8],ebx
   15917:	mov    eax,DWORD PTR [edi+0x4]
   1591a:	mov    DWORD PTR [ebx+0x4],eax
   1591d:	mov    eax,DWORD PTR [ebx+0x58]
   15920:	mov    ecx,DWORD PTR [edi+0x58]
   15923:	mov    DWORD PTR [ebx+0x58],ecx
   15926:	mov    DWORD PTR [edi+0x58],eax
   15929:	mov    ebx,edi
   1592b:	jmp    0x1598e
   1592d:	mov    eax,DWORD PTR [edi+0x4]
   15930:	cmp    DWORD PTR [eax],edi
   15932:	jne    0x15938
   15934:	mov    DWORD PTR [eax],esi
   15936:	jmp    0x1593b
   15938:	mov    DWORD PTR [eax+0x8],esi
   1593b:	mov    eax,DWORD PTR [ecx+0x4]
   1593e:	mov    DWORD PTR [ebp-0x8],eax
   15941:	cmp    DWORD PTR [eax],edi
   15943:	jne    0x15965
   15945:	mov    edx,DWORD PTR [edi+0x8]
   15948:	cmp    edx,DWORD PTR ds:0x786bc
   1594e:	jne    0x15957
   15950:	mov    edx,DWORD PTR [edi+0x4]
   15953:	mov    DWORD PTR [eax],edx
   15955:	jmp    0x15965
   15957:	push   esi
   15958:	call   0x12cb2
   1595d:	mov    ecx,DWORD PTR [ebp-0x8]
   15960:	mov    DWORD PTR [ecx],eax
   15962:	mov    ecx,DWORD PTR [ebp-0x4]
   15965:	mov    eax,DWORD PTR [ecx+0x4]
   15968:	mov    DWORD PTR [ebp-0x8],eax
   1596b:	cmp    DWORD PTR [eax+0x8],edi
   1596e:	jne    0x1598e
   15970:	mov    ecx,DWORD PTR [edi]
   15972:	cmp    ecx,DWORD PTR ds:0x786bc
   15978:	jne    0x15982
   1597a:	mov    ecx,DWORD PTR [edi+0x4]
   1597d:	mov    DWORD PTR [eax+0x8],ecx
   15980:	jmp    0x1598e
   15982:	push   esi
   15983:	call   0x10f78
   15988:	mov    ecx,DWORD PTR [ebp-0x8]
   1598b:	mov    DWORD PTR [ecx+0x8],eax
   1598e:	xor    edi,edi
   15990:	inc    edi
   15991:	cmp    DWORD PTR [ebx+0x58],edi
   15994:	jne    0x15aab
   1599a:	jmp    0x15a59
   1599f:	cmp    DWORD PTR [esi+0x58],edi
   159a2:	jne    0x15aa8
   159a8:	mov    eax,DWORD PTR [esi+0x4]
   159ab:	cmp    esi,DWORD PTR [eax]
   159ad:	jne    0x15a24
   159af:	mov    eax,DWORD PTR [eax+0x8]
   159b2:	cmp    DWORD PTR [eax+0x58],0x0
   159b6:	jne    0x159d0
   159b8:	mov    DWORD PTR [eax+0x58],edi
   159bb:	mov    eax,DWORD PTR [esi+0x4]
   159be:	and    DWORD PTR [eax+0x58],0x0
   159c2:	push   DWORD PTR [esi+0x4]
   159c5:	call   0x10f2a
   159ca:	mov    eax,DWORD PTR [esi+0x4]
   159cd:	mov    eax,DWORD PTR [eax+0x8]
   159d0:	mov    ecx,DWORD PTR [eax]
   159d2:	cmp    DWORD PTR [ecx+0x58],edi
   159d5:	jne    0x159df
   159d7:	mov    ecx,DWORD PTR [eax+0x8]
   159da:	cmp    DWORD PTR [ecx+0x58],edi
   159dd:	je     0x15a52
   159df:	mov    ecx,DWORD PTR [eax+0x8]
   159e2:	cmp    DWORD PTR [ecx+0x58],edi
   159e5:	jne    0x159ff
   159e7:	mov    ecx,DWORD PTR [eax]
   159e9:	mov    DWORD PTR [ecx+0x58],edi
   159ec:	mov    ecx,DWORD PTR [ebp-0x4]
   159ef:	and    DWORD PTR [eax+0x58],0x0
   159f3:	push   eax
   159f4:	call   0x10f9a
   159f9:	mov    eax,DWORD PTR [esi+0x4]
   159fc:	mov    eax,DWORD PTR [eax+0x8]
   159ff:	mov    ecx,DWORD PTR [esi+0x4]
   15a02:	mov    ecx,DWORD PTR [ecx+0x58]
   15a05:	mov    DWORD PTR [eax+0x58],ecx
   15a08:	mov    ecx,DWORD PTR [esi+0x4]
   15a0b:	mov    DWORD PTR [ecx+0x58],edi
   15a0e:	mov    eax,DWORD PTR [eax+0x8]
   15a11:	mov    ecx,DWORD PTR [ebp-0x4]
   15a14:	mov    DWORD PTR [eax+0x58],edi
   15a17:	push   DWORD PTR [esi+0x4]
   15a1a:	call   0x10f2a
   15a1f:	jmp    0x15aa8
   15a24:	mov    eax,DWORD PTR [eax]
   15a26:	cmp    DWORD PTR [eax+0x58],0x0
   15a2a:	jne    0x15a43
   15a2c:	mov    DWORD PTR [eax+0x58],edi
   15a2f:	mov    eax,DWORD PTR [esi+0x4]
   15a32:	and    DWORD PTR [eax+0x58],0x0
   15a36:	push   DWORD PTR [esi+0x4]
   15a39:	call   0x10f9a
   15a3e:	mov    eax,DWORD PTR [esi+0x4]
   15a41:	mov    eax,DWORD PTR [eax]
   15a43:	mov    ecx,DWORD PTR [eax+0x8]
   15a46:	cmp    DWORD PTR [ecx+0x58],edi
   15a49:	jne    0x15a6a
   15a4b:	mov    ecx,DWORD PTR [eax]
   15a4d:	cmp    DWORD PTR [ecx+0x58],edi
   15a50:	jne    0x15a6a
   15a52:	and    DWORD PTR [eax+0x58],0x0
   15a56:	mov    esi,DWORD PTR [esi+0x4]
   15a59:	mov    ecx,DWORD PTR [ebp-0x4]
   15a5c:	mov    eax,DWORD PTR [ecx+0x4]
   15a5f:	cmp    esi,DWORD PTR [eax+0x4]
   15a62:	jne    0x1599f
   15a68:	jmp    0x15aa8
   15a6a:	mov    ecx,DWORD PTR [eax]
   15a6c:	cmp    DWORD PTR [ecx+0x58],edi
   15a6f:	jne    0x15a89
   15a71:	mov    ecx,DWORD PTR [eax+0x8]
   15a74:	mov    DWORD PTR [ecx+0x58],edi
   15a77:	mov    ecx,DWORD PTR [ebp-0x4]
   15a7a:	and    DWORD PTR [eax+0x58],0x0
   15a7e:	push   eax
   15a7f:	call   0x10f2a
   15a84:	mov    eax,DWORD PTR [esi+0x4]
   15a87:	mov    eax,DWORD PTR [eax]
   15a89:	mov    ecx,DWORD PTR [esi+0x4]
   15a8c:	mov    ecx,DWORD PTR [ecx+0x58]
   15a8f:	mov    DWORD PTR [eax+0x58],ecx
   15a92:	mov    ecx,DWORD PTR [esi+0x4]
   15a95:	mov    DWORD PTR [ecx+0x58],edi
   15a98:	mov    eax,DWORD PTR [eax]
   15a9a:	mov    ecx,DWORD PTR [ebp-0x4]
   15a9d:	mov    DWORD PTR [eax+0x58],edi
   15aa0:	push   DWORD PTR [esi+0x4]
   15aa3:	call   0x10f9a
   15aa8:	mov    DWORD PTR [esi+0x58],edi
   15aab:	lea    eax,[ebx+0x10]
   15aae:	push   eax
   15aaf:	call   0x1448c
   15ab4:	push   ebx
   15ab5:	call   0x11d22
   15aba:	mov    eax,DWORD PTR [ebp-0x4]
   15abd:	dec    DWORD PTR [eax+0xc]
   15ac0:	mov    eax,DWORD PTR [ebp+0x8]
   15ac3:	pop    ecx
   15ac4:	mov    ecx,DWORD PTR [ebp+0xc]
   15ac7:	pop    edi
   15ac8:	pop    esi
   15ac9:	mov    DWORD PTR [eax],ecx
   15acb:	pop    ebx
   15acc:	leave  
   15acd:	ret    0x8
   15ad0:	int3   
   15ad1:	int3   
   15ad2:	int3   
   15ad3:	int3   
   15ad4:	int3   
   15ad5:	int3   
   15ad6:	mov    edi,edi
   15ad8:	push   ebp
   15ad9:	mov    ebp,esp
   15adb:	push   ebx
   15adc:	push   esi
   15add:	push   edi
   15ade:	mov    edi,DWORD PTR [ebp+0x8]
   15ae1:	mov    ebx,ecx
   15ae3:	mov    esi,edi
   15ae5:	cmp    edi,DWORD PTR ds:0x786bc
   15aeb:	je     0x15b13
   15aed:	push   DWORD PTR [esi+0x8]
   15af0:	mov    ecx,ebx
   15af2:	call   0x15ad6
   15af7:	mov    esi,DWORD PTR [esi]
   15af9:	lea    eax,[edi+0x10]
   15afc:	push   eax
   15afd:	call   0x1448c
   15b02:	push   edi
   15b03:	call   0x11d22
   15b08:	pop    ecx
   15b09:	mov    edi,esi
   15b0b:	cmp    esi,DWORD PTR ds:0x786bc
   15b11:	jne    0x15aed
   15b13:	pop    edi
   15b14:	pop    esi
   15b15:	pop    ebx
   15b16:	pop    ebp
   15b17:	ret    0x4
   15b1a:	int3   
   15b1b:	int3   
   15b1c:	int3   
   15b1d:	int3   
   15b1e:	int3   
   15b1f:	int3   
   15b20:	mov    edi,edi
   15b22:	push   ebp
   15b23:	mov    ebp,esp
   15b25:	push   ebx
   15b26:	push   esi
   15b27:	mov    esi,DWORD PTR [ebp+0x10]
   15b2a:	push   edi
   15b2b:	push   0x0
   15b2d:	push   esi
   15b2e:	mov    edi,ecx
   15b30:	call   0x14394
   15b35:	push   DWORD PTR [ebp+0x14]
   15b38:	mov    ebx,eax
   15b3a:	mov    eax,ds:0x786bc
   15b3f:	mov    DWORD PTR [ebx],eax
   15b41:	mov    eax,ds:0x786bc
   15b46:	mov    DWORD PTR [ebx+0x8],eax
   15b49:	lea    eax,[ebx+0x10]
   15b4c:	push   eax
   15b4d:	call   0x1446e
   15b52:	inc    DWORD PTR [edi+0xc]
   15b55:	cmp    esi,DWORD PTR [edi+0x4]
   15b58:	je     0x15b82
   15b5a:	mov    eax,DWORD PTR [ebp+0xc]
   15b5d:	cmp    eax,DWORD PTR ds:0x786bc
   15b63:	jne    0x15b82
   15b65:	lea    eax,[esi+0x10]
   15b68:	push   eax
   15b69:	push   DWORD PTR [ebp+0x14]
   15b6c:	call   0x19eec
   15b71:	test   al,al
   15b73:	jne    0x15b82
   15b75:	mov    DWORD PTR [esi+0x8],ebx
   15b78:	mov    eax,DWORD PTR [edi+0x4]
   15b7b:	cmp    esi,DWORD PTR [eax+0x8]
   15b7e:	jne    0x15b9c
   15b80:	jmp    0x15b91
   15b82:	mov    DWORD PTR [esi],ebx
   15b84:	mov    eax,DWORD PTR [edi+0x4]
   15b87:	cmp    esi,eax
   15b89:	jne    0x15b96
   15b8b:	mov    DWORD PTR [eax+0x4],ebx
   15b8e:	mov    eax,DWORD PTR [edi+0x4]
   15b91:	mov    DWORD PTR [eax+0x8],ebx
   15b94:	jmp    0x15b9c
   15b96:	cmp    esi,DWORD PTR [eax]
   15b98:	jne    0x15b9c
   15b9a:	mov    DWORD PTR [eax],ebx
   15b9c:	mov    eax,DWORD PTR [edi+0x4]
   15b9f:	mov    esi,ebx
   15ba1:	cmp    ebx,DWORD PTR [eax+0x4]
   15ba4:	je     0x15c58
   15baa:	mov    eax,DWORD PTR [esi+0x4]
   15bad:	xor    edx,edx
   15baf:	cmp    DWORD PTR [eax+0x58],edx
   15bb2:	jne    0x15c58
   15bb8:	mov    ecx,DWORD PTR [eax+0x4]
   15bbb:	cmp    eax,DWORD PTR [ecx]
   15bbd:	jne    0x15bf9
   15bbf:	mov    ecx,DWORD PTR [ecx+0x8]
   15bc2:	cmp    DWORD PTR [ecx+0x58],edx
   15bc5:	je     0x15c00
   15bc7:	cmp    esi,DWORD PTR [eax+0x8]
   15bca:	jne    0x15bd6
   15bcc:	mov    esi,eax
   15bce:	push   esi
   15bcf:	mov    ecx,edi
   15bd1:	call   0x10f2a
   15bd6:	mov    eax,DWORD PTR [esi+0x4]
   15bd9:	mov    DWORD PTR [eax+0x58],0x1
   15be0:	mov    eax,DWORD PTR [esi+0x4]
   15be3:	mov    eax,DWORD PTR [eax+0x4]
   15be6:	and    DWORD PTR [eax+0x58],0x0
   15bea:	mov    eax,DWORD PTR [esi+0x4]
   15bed:	push   DWORD PTR [eax+0x4]
   15bf0:	mov    ecx,edi
   15bf2:	call   0x10f9a
   15bf7:	jmp    0x15c4c
   15bf9:	mov    ecx,DWORD PTR [ecx]
   15bfb:	cmp    DWORD PTR [ecx+0x58],edx
   15bfe:	jne    0x15c1d
   15c00:	mov    edx,eax
   15c02:	xor    eax,eax
   15c04:	inc    eax
   15c05:	mov    DWORD PTR [edx+0x58],eax
   15c08:	mov    DWORD PTR [ecx+0x58],eax
   15c0b:	mov    eax,DWORD PTR [esi+0x4]
   15c0e:	mov    eax,DWORD PTR [eax+0x4]
   15c11:	and    DWORD PTR [eax+0x58],0x0
   15c15:	mov    eax,DWORD PTR [esi+0x4]
   15c18:	mov    esi,DWORD PTR [eax+0x4]
   15c1b:	jmp    0x15c4c
   15c1d:	cmp    esi,DWORD PTR [eax]
   15c1f:	jne    0x15c2b
   15c21:	mov    esi,eax
   15c23:	push   esi
   15c24:	mov    ecx,edi
   15c26:	call   0x10f9a
   15c2b:	mov    eax,DWORD PTR [esi+0x4]
   15c2e:	mov    DWORD PTR [eax+0x58],0x1
   15c35:	mov    eax,DWORD PTR [esi+0x4]
   15c38:	mov    eax,DWORD PTR [eax+0x4]
   15c3b:	and    DWORD PTR [eax+0x58],0x0
   15c3f:	mov    eax,DWORD PTR [esi+0x4]
   15c42:	push   DWORD PTR [eax+0x4]
   15c45:	mov    ecx,edi
   15c47:	call   0x10f2a
   15c4c:	mov    eax,DWORD PTR [edi+0x4]
   15c4f:	cmp    esi,DWORD PTR [eax+0x4]
   15c52:	jne    0x15baa
   15c58:	mov    eax,DWORD PTR [edi+0x4]
   15c5b:	mov    eax,DWORD PTR [eax+0x4]
   15c5e:	pop    edi
   15c5f:	mov    DWORD PTR [eax+0x58],0x1
   15c66:	mov    eax,DWORD PTR [ebp+0x8]
   15c69:	pop    esi
   15c6a:	mov    DWORD PTR [eax],ebx
   15c6c:	pop    ebx
   15c6d:	pop    ebp
   15c6e:	ret    0x10
   15c71:	int3   
   15c72:	int3   
   15c73:	int3   
   15c74:	int3   
   15c75:	int3   
   15c76:	mov    edi,edi
   15c78:	push   ebp
   15c79:	mov    ebp,esp
   15c7b:	push   ebx
   15c7c:	push   esi
   15c7d:	mov    esi,DWORD PTR [ebp+0x10]
   15c80:	push   edi
   15c81:	push   0x0
   15c83:	push   esi
   15c84:	mov    edi,ecx
   15c86:	call   0x14400
   15c8b:	push   DWORD PTR [ebp+0x14]
   15c8e:	mov    ebx,eax
   15c90:	mov    eax,ds:0x786c0
   15c95:	mov    DWORD PTR [ebx],eax
   15c97:	mov    eax,ds:0x786c0
   15c9c:	mov    DWORD PTR [ebx+0x8],eax
   15c9f:	lea    eax,[ebx+0xc]
   15ca2:	push   eax
   15ca3:	call   0x144a4
   15ca8:	inc    DWORD PTR [edi+0xc]
   15cab:	cmp    esi,DWORD PTR [edi+0x4]
   15cae:	je     0x15cd8
   15cb0:	mov    eax,DWORD PTR [ebp+0xc]
   15cb3:	cmp    eax,DWORD PTR ds:0x786c0
   15cb9:	jne    0x15cd8
   15cbb:	lea    eax,[esi+0xc]
   15cbe:	push   eax
   15cbf:	push   DWORD PTR [ebp+0x14]
   15cc2:	call   0x19eec
   15cc7:	test   al,al
   15cc9:	jne    0x15cd8
   15ccb:	mov    DWORD PTR [esi+0x8],ebx
   15cce:	mov    eax,DWORD PTR [edi+0x4]
   15cd1:	cmp    esi,DWORD PTR [eax+0x8]
   15cd4:	jne    0x15cf2
   15cd6:	jmp    0x15ce7
   15cd8:	mov    DWORD PTR [esi],ebx
   15cda:	mov    eax,DWORD PTR [edi+0x4]
   15cdd:	cmp    esi,eax
   15cdf:	jne    0x15cec
   15ce1:	mov    DWORD PTR [eax+0x4],ebx
   15ce4:	mov    eax,DWORD PTR [edi+0x4]
   15ce7:	mov    DWORD PTR [eax+0x8],ebx
   15cea:	jmp    0x15cf2
   15cec:	cmp    esi,DWORD PTR [eax]
   15cee:	jne    0x15cf2
   15cf0:	mov    DWORD PTR [eax],ebx
   15cf2:	mov    eax,DWORD PTR [edi+0x4]
   15cf5:	mov    esi,ebx
   15cf7:	cmp    ebx,DWORD PTR [eax+0x4]
   15cfa:	je     0x15dae
   15d00:	mov    eax,DWORD PTR [esi+0x4]
   15d03:	xor    edx,edx
   15d05:	cmp    DWORD PTR [eax+0x1c],edx
   15d08:	jne    0x15dae
   15d0e:	mov    ecx,DWORD PTR [eax+0x4]
   15d11:	cmp    eax,DWORD PTR [ecx]
   15d13:	jne    0x15d4f
   15d15:	mov    ecx,DWORD PTR [ecx+0x8]
   15d18:	cmp    DWORD PTR [ecx+0x1c],edx
   15d1b:	je     0x15d56
   15d1d:	cmp    esi,DWORD PTR [eax+0x8]
   15d20:	jne    0x15d2c
   15d22:	mov    esi,eax
   15d24:	push   esi
   15d25:	mov    ecx,edi
   15d27:	call   0x13102
   15d2c:	mov    eax,DWORD PTR [esi+0x4]
   15d2f:	mov    DWORD PTR [eax+0x1c],0x1
   15d36:	mov    eax,DWORD PTR [esi+0x4]
   15d39:	mov    eax,DWORD PTR [eax+0x4]
   15d3c:	and    DWORD PTR [eax+0x1c],0x0
   15d40:	mov    eax,DWORD PTR [esi+0x4]
   15d43:	push   DWORD PTR [eax+0x4]
   15d46:	mov    ecx,edi
   15d48:	call   0x13150
   15d4d:	jmp    0x15da2
   15d4f:	mov    ecx,DWORD PTR [ecx]
   15d51:	cmp    DWORD PTR [ecx+0x1c],edx
   15d54:	jne    0x15d73
   15d56:	mov    edx,eax
   15d58:	xor    eax,eax
   15d5a:	inc    eax
   15d5b:	mov    DWORD PTR [edx+0x1c],eax
   15d5e:	mov    DWORD PTR [ecx+0x1c],eax
   15d61:	mov    eax,DWORD PTR [esi+0x4]
   15d64:	mov    eax,DWORD PTR [eax+0x4]
   15d67:	and    DWORD PTR [eax+0x1c],0x0
   15d6b:	mov    eax,DWORD PTR [esi+0x4]
   15d6e:	mov    esi,DWORD PTR [eax+0x4]
   15d71:	jmp    0x15da2
   15d73:	cmp    esi,DWORD PTR [eax]
   15d75:	jne    0x15d81
   15d77:	mov    esi,eax
   15d79:	push   esi
   15d7a:	mov    ecx,edi
   15d7c:	call   0x13150
   15d81:	mov    eax,DWORD PTR [esi+0x4]
   15d84:	mov    DWORD PTR [eax+0x1c],0x1
   15d8b:	mov    eax,DWORD PTR [esi+0x4]
   15d8e:	mov    eax,DWORD PTR [eax+0x4]
   15d91:	and    DWORD PTR [eax+0x1c],0x0
   15d95:	mov    eax,DWORD PTR [esi+0x4]
   15d98:	push   DWORD PTR [eax+0x4]
   15d9b:	mov    ecx,edi
   15d9d:	call   0x13102
   15da2:	mov    eax,DWORD PTR [edi+0x4]
   15da5:	cmp    esi,DWORD PTR [eax+0x4]
   15da8:	jne    0x15d00
   15dae:	mov    eax,DWORD PTR [edi+0x4]
   15db1:	mov    eax,DWORD PTR [eax+0x4]
   15db4:	pop    edi
   15db5:	mov    DWORD PTR [eax+0x1c],0x1
   15dbc:	mov    eax,DWORD PTR [ebp+0x8]
   15dbf:	pop    esi
   15dc0:	mov    DWORD PTR [eax],ebx
   15dc2:	pop    ebx
   15dc3:	pop    ebp
   15dc4:	ret    0x10
   15dc7:	int3   
   15dc8:	int3   
   15dc9:	int3   
   15dca:	int3   
   15dcb:	int3   
   15dcc:	mov    edi,edi
   15dce:	push   ebp
   15dcf:	mov    ebp,esp
   15dd1:	push   ecx
   15dd2:	push   ecx
   15dd3:	push   ebx
   15dd4:	push   esi
   15dd5:	mov    DWORD PTR [ebp-0x4],ecx
   15dd8:	push   edi
   15dd9:	mov    edi,DWORD PTR [ebp+0xc]
   15ddc:	lea    ecx,[ebp+0xc]
   15ddf:	call   0x111a8
   15de4:	mov    esi,DWORD PTR [edi]
   15de6:	mov    eax,ds:0x786c4
   15deb:	mov    ebx,edi
   15ded:	mov    DWORD PTR [ebp-0x8],esi
   15df0:	cmp    esi,eax
   15df2:	jne    0x15e10
   15df4:	mov    esi,DWORD PTR [edi+0x8]
   15df7:	mov    eax,DWORD PTR [ebx+0x4]
   15dfa:	mov    ecx,DWORD PTR [ebp-0x4]
   15dfd:	mov    DWORD PTR [esi+0x4],eax
   15e00:	mov    eax,DWORD PTR [ecx+0x4]
   15e03:	cmp    DWORD PTR [eax+0x4],edi
   15e06:	jne    0x15e85
   15e08:	mov    DWORD PTR [eax+0x4],esi
   15e0b:	jmp    0x15e93
   15e10:	mov    ecx,DWORD PTR [edi+0x8]
   15e13:	cmp    ecx,eax
   15e15:	je     0x15df7
   15e17:	push   ecx
   15e18:	call   0x110d0
   15e1d:	mov    ebx,eax
   15e1f:	mov    esi,DWORD PTR [ebx+0x8]
   15e22:	cmp    ebx,edi
   15e24:	je     0x15df7
   15e26:	mov    eax,DWORD PTR [ebp-0x8]
   15e29:	mov    DWORD PTR [eax+0x4],ebx
   15e2c:	mov    eax,DWORD PTR [edi]
   15e2e:	mov    DWORD PTR [ebx],eax
   15e30:	cmp    ebx,DWORD PTR [edi+0x8]
   15e33:	jne    0x15e3a
   15e35:	mov    DWORD PTR [esi+0x4],ebx
   15e38:	jmp    0x15e51
   15e3a:	mov    eax,DWORD PTR [ebx+0x4]
   15e3d:	mov    DWORD PTR [esi+0x4],eax
   15e40:	mov    eax,DWORD PTR [ebx+0x4]
   15e43:	mov    DWORD PTR [eax],esi
   15e45:	mov    eax,DWORD PTR [edi+0x8]
   15e48:	mov    DWORD PTR [ebx+0x8],eax
   15e4b:	mov    eax,DWORD PTR [edi+0x8]
   15e4e:	mov    DWORD PTR [eax+0x4],ebx
   15e51:	mov    eax,DWORD PTR [ebp-0x4]
   15e54:	mov    eax,DWORD PTR [eax+0x4]
   15e57:	cmp    DWORD PTR [eax+0x4],edi
   15e5a:	jne    0x15e61
   15e5c:	mov    DWORD PTR [eax+0x4],ebx
   15e5f:	jmp    0x15e6f
   15e61:	mov    eax,DWORD PTR [edi+0x4]
   15e64:	cmp    DWORD PTR [eax],edi
   15e66:	jne    0x15e6c
   15e68:	mov    DWORD PTR [eax],ebx
   15e6a:	jmp    0x15e6f
   15e6c:	mov    DWORD PTR [eax+0x8],ebx
   15e6f:	mov    eax,DWORD PTR [edi+0x4]
   15e72:	mov    DWORD PTR [ebx+0x4],eax
   15e75:	mov    eax,DWORD PTR [ebx+0x14]
   15e78:	mov    ecx,DWORD PTR [edi+0x14]
   15e7b:	mov    DWORD PTR [ebx+0x14],ecx
   15e7e:	mov    DWORD PTR [edi+0x14],eax
   15e81:	mov    ebx,edi
   15e83:	jmp    0x15ee6
   15e85:	mov    eax,DWORD PTR [edi+0x4]
   15e88:	cmp    DWORD PTR [eax],edi
   15e8a:	jne    0x15e90
   15e8c:	mov    DWORD PTR [eax],esi
   15e8e:	jmp    0x15e93
   15e90:	mov    DWORD PTR [eax+0x8],esi
   15e93:	mov    eax,DWORD PTR [ecx+0x4]
   15e96:	mov    DWORD PTR [ebp-0x8],eax
   15e99:	cmp    DWORD PTR [eax],edi
   15e9b:	jne    0x15ebd
   15e9d:	mov    edx,DWORD PTR [edi+0x8]
   15ea0:	cmp    edx,DWORD PTR ds:0x786c4
   15ea6:	jne    0x15eaf
   15ea8:	mov    edx,DWORD PTR [edi+0x4]
   15eab:	mov    DWORD PTR [eax],edx
   15ead:	jmp    0x15ebd
   15eaf:	push   esi
   15eb0:	call   0x110d0
   15eb5:	mov    ecx,DWORD PTR [ebp-0x8]
   15eb8:	mov    DWORD PTR [ecx],eax
   15eba:	mov    ecx,DWORD PTR [ebp-0x4]
   15ebd:	mov    eax,DWORD PTR [ecx+0x4]
   15ec0:	mov    DWORD PTR [ebp-0x8],eax
   15ec3:	cmp    DWORD PTR [eax+0x8],edi
   15ec6:	jne    0x15ee6
   15ec8:	mov    ecx,DWORD PTR [edi]
   15eca:	cmp    ecx,DWORD PTR ds:0x786c4
   15ed0:	jne    0x15eda
   15ed2:	mov    ecx,DWORD PTR [edi+0x4]
   15ed5:	mov    DWORD PTR [eax+0x8],ecx
   15ed8:	jmp    0x15ee6
   15eda:	push   esi
   15edb:	call   0x110ae
   15ee0:	mov    ecx,DWORD PTR [ebp-0x8]
   15ee3:	mov    DWORD PTR [ecx+0x8],eax
   15ee6:	xor    edi,edi
   15ee8:	inc    edi
   15ee9:	cmp    DWORD PTR [ebx+0x14],edi
   15eec:	jne    0x16003
   15ef2:	jmp    0x15fb1
   15ef7:	cmp    DWORD PTR [esi+0x14],edi
   15efa:	jne    0x16000
   15f00:	mov    eax,DWORD PTR [esi+0x4]
   15f03:	cmp    esi,DWORD PTR [eax]
   15f05:	jne    0x15f7c
   15f07:	mov    eax,DWORD PTR [eax+0x8]
   15f0a:	cmp    DWORD PTR [eax+0x14],0x0
   15f0e:	jne    0x15f28
   15f10:	mov    DWORD PTR [eax+0x14],edi
   15f13:	mov    eax,DWORD PTR [esi+0x4]
   15f16:	and    DWORD PTR [eax+0x14],0x0
   15f1a:	push   DWORD PTR [esi+0x4]
   15f1d:	call   0x131e0
   15f22:	mov    eax,DWORD PTR [esi+0x4]
   15f25:	mov    eax,DWORD PTR [eax+0x8]
   15f28:	mov    ecx,DWORD PTR [eax]
   15f2a:	cmp    DWORD PTR [ecx+0x14],edi
   15f2d:	jne    0x15f37
   15f2f:	mov    ecx,DWORD PTR [eax+0x8]
   15f32:	cmp    DWORD PTR [ecx+0x14],edi
   15f35:	je     0x15faa
   15f37:	mov    ecx,DWORD PTR [eax+0x8]
   15f3a:	cmp    DWORD PTR [ecx+0x14],edi
   15f3d:	jne    0x15f57
   15f3f:	mov    ecx,DWORD PTR [eax]
   15f41:	mov    DWORD PTR [ecx+0x14],edi
   15f44:	mov    ecx,DWORD PTR [ebp-0x4]
   15f47:	and    DWORD PTR [eax+0x14],0x0
   15f4b:	push   eax
   15f4c:	call   0x1322e
   15f51:	mov    eax,DWORD PTR [esi+0x4]
   15f54:	mov    eax,DWORD PTR [eax+0x8]
   15f57:	mov    ecx,DWORD PTR [esi+0x4]
   15f5a:	mov    ecx,DWORD PTR [ecx+0x14]
   15f5d:	mov    DWORD PTR [eax+0x14],ecx
   15f60:	mov    ecx,DWORD PTR [esi+0x4]
   15f63:	mov    DWORD PTR [ecx+0x14],edi
   15f66:	mov    eax,DWORD PTR [eax+0x8]
   15f69:	mov    ecx,DWORD PTR [ebp-0x4]
   15f6c:	mov    DWORD PTR [eax+0x14],edi
   15f6f:	push   DWORD PTR [esi+0x4]
   15f72:	call   0x131e0
   15f77:	jmp    0x16000
   15f7c:	mov    eax,DWORD PTR [eax]
   15f7e:	cmp    DWORD PTR [eax+0x14],0x0
   15f82:	jne    0x15f9b
   15f84:	mov    DWORD PTR [eax+0x14],edi
   15f87:	mov    eax,DWORD PTR [esi+0x4]
   15f8a:	and    DWORD PTR [eax+0x14],0x0
   15f8e:	push   DWORD PTR [esi+0x4]
   15f91:	call   0x1322e
   15f96:	mov    eax,DWORD PTR [esi+0x4]
   15f99:	mov    eax,DWORD PTR [eax]
   15f9b:	mov    ecx,DWORD PTR [eax+0x8]
   15f9e:	cmp    DWORD PTR [ecx+0x14],edi
   15fa1:	jne    0x15fc2
   15fa3:	mov    ecx,DWORD PTR [eax]
   15fa5:	cmp    DWORD PTR [ecx+0x14],edi
   15fa8:	jne    0x15fc2
   15faa:	and    DWORD PTR [eax+0x14],0x0
   15fae:	mov    esi,DWORD PTR [esi+0x4]
   15fb1:	mov    ecx,DWORD PTR [ebp-0x4]
   15fb4:	mov    eax,DWORD PTR [ecx+0x4]
   15fb7:	cmp    esi,DWORD PTR [eax+0x4]
   15fba:	jne    0x15ef7
   15fc0:	jmp    0x16000
   15fc2:	mov    ecx,DWORD PTR [eax]
   15fc4:	cmp    DWORD PTR [ecx+0x14],edi
   15fc7:	jne    0x15fe1
   15fc9:	mov    ecx,DWORD PTR [eax+0x8]
   15fcc:	mov    DWORD PTR [ecx+0x14],edi
   15fcf:	mov    ecx,DWORD PTR [ebp-0x4]
   15fd2:	and    DWORD PTR [eax+0x14],0x0
   15fd6:	push   eax
   15fd7:	call   0x131e0
   15fdc:	mov    eax,DWORD PTR [esi+0x4]
   15fdf:	mov    eax,DWORD PTR [eax]
   15fe1:	mov    ecx,DWORD PTR [esi+0x4]
   15fe4:	mov    ecx,DWORD PTR [ecx+0x14]
   15fe7:	mov    DWORD PTR [eax+0x14],ecx
   15fea:	mov    ecx,DWORD PTR [esi+0x4]
   15fed:	mov    DWORD PTR [ecx+0x14],edi
   15ff0:	mov    eax,DWORD PTR [eax]
   15ff2:	mov    ecx,DWORD PTR [ebp-0x4]
   15ff5:	mov    DWORD PTR [eax+0x14],edi
   15ff8:	push   DWORD PTR [esi+0x4]
   15ffb:	call   0x1322e
   16000:	mov    DWORD PTR [esi+0x14],edi
   16003:	lea    eax,[ebx+0xc]
   16006:	push   eax
   16007:	call   0x144e0
   1600c:	push   ebx
   1600d:	call   0x11d22
   16012:	mov    eax,DWORD PTR [ebp-0x4]
   16015:	dec    DWORD PTR [eax+0xc]
   16018:	mov    eax,DWORD PTR [ebp+0x8]
   1601b:	pop    ecx
   1601c:	mov    ecx,DWORD PTR [ebp+0xc]
   1601f:	pop    edi
   16020:	pop    esi
   16021:	mov    DWORD PTR [eax],ecx
   16023:	pop    ebx
   16024:	leave  
   16025:	ret    0x8
   16028:	int3   
   16029:	int3   
   1602a:	int3   
   1602b:	int3   
   1602c:	int3   
   1602d:	int3   
   1602e:	mov    edi,edi
   16030:	push   ebp
   16031:	mov    ebp,esp
   16033:	push   ebx
   16034:	push   esi
   16035:	push   edi
   16036:	mov    edi,DWORD PTR [ebp+0x8]
   16039:	mov    ebx,ecx
   1603b:	mov    esi,edi
   1603d:	cmp    edi,DWORD PTR ds:0x786c4
   16043:	je     0x1606b
   16045:	push   DWORD PTR [esi+0x8]
   16048:	mov    ecx,ebx
   1604a:	call   0x1602e
   1604f:	mov    esi,DWORD PTR [esi]
   16051:	lea    eax,[edi+0xc]
   16054:	push   eax
   16055:	call   0x144e0
   1605a:	push   edi
   1605b:	call   0x11d22
   16060:	pop    ecx
   16061:	mov    edi,esi
   16063:	cmp    esi,DWORD PTR ds:0x786c4
   16069:	jne    0x16045
   1606b:	pop    edi
   1606c:	pop    esi
   1606d:	pop    ebx
   1606e:	pop    ebp
   1606f:	ret    0x4
   16072:	int3   
   16073:	int3   
   16074:	int3   
   16075:	int3   
   16076:	int3   
   16077:	int3   
   16078:	mov    edi,edi
   1607a:	push   ebp
   1607b:	mov    ebp,esp
   1607d:	push   ebx
   1607e:	push   esi
   1607f:	mov    esi,DWORD PTR [ebp+0x10]
   16082:	push   edi
   16083:	push   0x0
   16085:	push   esi
   16086:	mov    edi,ecx
   16088:	call   0x1b140
   1608d:	push   DWORD PTR [ebp+0x14]
   16090:	mov    ebx,eax
   16092:	mov    eax,ds:0x786c4
   16097:	mov    DWORD PTR [ebx],eax
   16099:	mov    eax,ds:0x786c4
   1609e:	mov    DWORD PTR [ebx+0x8],eax
   160a1:	lea    eax,[ebx+0xc]
   160a4:	push   eax
   160a5:	call   0x144c2
   160aa:	inc    DWORD PTR [edi+0xc]
   160ad:	cmp    esi,DWORD PTR [edi+0x4]
   160b0:	je     0x160d4
   160b2:	mov    eax,DWORD PTR [ebp+0xc]
   160b5:	cmp    eax,DWORD PTR ds:0x786c4
   160bb:	jne    0x160d4
   160bd:	mov    eax,DWORD PTR [ebp+0x14]
   160c0:	mov    eax,DWORD PTR [eax]
   160c2:	cmp    eax,DWORD PTR [esi+0xc]
   160c5:	jl     0x160d4
   160c7:	mov    DWORD PTR [esi+0x8],ebx
   160ca:	mov    eax,DWORD PTR [edi+0x4]
   160cd:	cmp    esi,DWORD PTR [eax+0x8]
   160d0:	jne    0x160ee
   160d2:	jmp    0x160e3
   160d4:	mov    DWORD PTR [esi],ebx
   160d6:	mov    eax,DWORD PTR [edi+0x4]
   160d9:	cmp    esi,eax
   160db:	jne    0x160e8
   160dd:	mov    DWORD PTR [eax+0x4],ebx
   160e0:	mov    eax,DWORD PTR [edi+0x4]
   160e3:	mov    DWORD PTR [eax+0x8],ebx
   160e6:	jmp    0x160ee
   160e8:	cmp    esi,DWORD PTR [eax]
   160ea:	jne    0x160ee
   160ec:	mov    DWORD PTR [eax],ebx
   160ee:	mov    eax,DWORD PTR [edi+0x4]
   160f1:	mov    esi,ebx
   160f3:	cmp    ebx,DWORD PTR [eax+0x4]
   160f6:	je     0x161aa
   160fc:	mov    eax,DWORD PTR [esi+0x4]
   160ff:	xor    edx,edx
   16101:	cmp    DWORD PTR [eax+0x14],edx
   16104:	jne    0x161aa
   1610a:	mov    ecx,DWORD PTR [eax+0x4]
   1610d:	cmp    eax,DWORD PTR [ecx]
   1610f:	jne    0x1614b
   16111:	mov    ecx,DWORD PTR [ecx+0x8]
   16114:	cmp    DWORD PTR [ecx+0x14],edx
   16117:	je     0x16152
   16119:	cmp    esi,DWORD PTR [eax+0x8]
   1611c:	jne    0x16128
   1611e:	mov    esi,eax
   16120:	push   esi
   16121:	mov    ecx,edi
   16123:	call   0x131e0
   16128:	mov    eax,DWORD PTR [esi+0x4]
   1612b:	mov    DWORD PTR [eax+0x14],0x1
   16132:	mov    eax,DWORD PTR [esi+0x4]
   16135:	mov    eax,DWORD PTR [eax+0x4]
   16138:	and    DWORD PTR [eax+0x14],0x0
   1613c:	mov    eax,DWORD PTR [esi+0x4]
   1613f:	push   DWORD PTR [eax+0x4]
   16142:	mov    ecx,edi
   16144:	call   0x1322e
   16149:	jmp    0x1619e
   1614b:	mov    ecx,DWORD PTR [ecx]
   1614d:	cmp    DWORD PTR [ecx+0x14],edx
   16150:	jne    0x1616f
   16152:	mov    edx,eax
   16154:	xor    eax,eax
   16156:	inc    eax
   16157:	mov    DWORD PTR [edx+0x14],eax
   1615a:	mov    DWORD PTR [ecx+0x14],eax
   1615d:	mov    eax,DWORD PTR [esi+0x4]
   16160:	mov    eax,DWORD PTR [eax+0x4]
   16163:	and    DWORD PTR [eax+0x14],0x0
   16167:	mov    eax,DWORD PTR [esi+0x4]
   1616a:	mov    esi,DWORD PTR [eax+0x4]
   1616d:	jmp    0x1619e
   1616f:	cmp    esi,DWORD PTR [eax]
   16171:	jne    0x1617d
   16173:	mov    esi,eax
   16175:	push   esi
   16176:	mov    ecx,edi
   16178:	call   0x1322e
   1617d:	mov    eax,DWORD PTR [esi+0x4]
   16180:	mov    DWORD PTR [eax+0x14],0x1
   16187:	mov    eax,DWORD PTR [esi+0x4]
   1618a:	mov    eax,DWORD PTR [eax+0x4]
   1618d:	and    DWORD PTR [eax+0x14],0x0
   16191:	mov    eax,DWORD PTR [esi+0x4]
   16194:	push   DWORD PTR [eax+0x4]
   16197:	mov    ecx,edi
   16199:	call   0x131e0
   1619e:	mov    eax,DWORD PTR [edi+0x4]
   161a1:	cmp    esi,DWORD PTR [eax+0x4]
   161a4:	jne    0x160fc
   161aa:	mov    eax,DWORD PTR [edi+0x4]
   161ad:	mov    eax,DWORD PTR [eax+0x4]
   161b0:	pop    edi
   161b1:	mov    DWORD PTR [eax+0x14],0x1
   161b8:	mov    eax,DWORD PTR [ebp+0x8]
   161bb:	pop    esi
   161bc:	mov    DWORD PTR [eax],ebx
   161be:	pop    ebx
   161bf:	pop    ebp
   161c0:	ret    0x10
   161c3:	int3   
   161c4:	int3   
   161c5:	int3   
   161c6:	int3   
   161c7:	int3   
   161c8:	mov    edi,edi
   161ca:	push   ebp
   161cb:	mov    ebp,esp
   161cd:	push   ebx
   161ce:	push   esi
   161cf:	mov    esi,DWORD PTR [ebp+0x10]
   161d2:	push   edi
   161d3:	push   0x0
   161d5:	push   esi
   161d6:	mov    edi,ecx
   161d8:	call   0x14400
   161dd:	push   DWORD PTR [ebp+0x14]
   161e0:	mov    ebx,eax
   161e2:	mov    eax,ds:0x786cc
   161e7:	mov    DWORD PTR [ebx],eax
   161e9:	mov    eax,ds:0x786cc
   161ee:	mov    DWORD PTR [ebx+0x8],eax
   161f1:	lea    eax,[ebx+0xc]
   161f4:	push   eax
   161f5:	call   0x144f8
   161fa:	inc    DWORD PTR [edi+0xc]
   161fd:	cmp    esi,DWORD PTR [edi+0x4]
   16200:	je     0x1622a
   16202:	mov    eax,DWORD PTR [ebp+0xc]
   16205:	cmp    eax,DWORD PTR ds:0x786cc
   1620b:	jne    0x1622a
   1620d:	lea    eax,[esi+0xc]
   16210:	push   eax
   16211:	push   DWORD PTR [ebp+0x14]
   16214:	call   0x19f1c
   16219:	test   al,al
   1621b:	jne    0x1622a
   1621d:	mov    DWORD PTR [esi+0x8],ebx
   16220:	mov    eax,DWORD PTR [edi+0x4]
   16223:	cmp    esi,DWORD PTR [eax+0x8]
   16226:	jne    0x16244
   16228:	jmp    0x16239
   1622a:	mov    DWORD PTR [esi],ebx
   1622c:	mov    eax,DWORD PTR [edi+0x4]
   1622f:	cmp    esi,eax
   16231:	jne    0x1623e
   16233:	mov    DWORD PTR [eax+0x4],ebx
   16236:	mov    eax,DWORD PTR [edi+0x4]
   16239:	mov    DWORD PTR [eax+0x8],ebx
   1623c:	jmp    0x16244
   1623e:	cmp    esi,DWORD PTR [eax]
   16240:	jne    0x16244
   16242:	mov    DWORD PTR [eax],ebx
   16244:	mov    eax,DWORD PTR [edi+0x4]
   16247:	mov    esi,ebx
   16249:	cmp    ebx,DWORD PTR [eax+0x4]
   1624c:	je     0x16300
   16252:	mov    eax,DWORD PTR [esi+0x4]
   16255:	xor    edx,edx
   16257:	cmp    DWORD PTR [eax+0x1c],edx
   1625a:	jne    0x16300
   16260:	mov    ecx,DWORD PTR [eax+0x4]
   16263:	cmp    eax,DWORD PTR [ecx]
   16265:	jne    0x162a1
   16267:	mov    ecx,DWORD PTR [ecx+0x8]
   1626a:	cmp    DWORD PTR [ecx+0x1c],edx
   1626d:	je     0x162a8
   1626f:	cmp    esi,DWORD PTR [eax+0x8]
   16272:	jne    0x1627e
   16274:	mov    esi,eax
   16276:	push   esi
   16277:	mov    ecx,edi
   16279:	call   0x13366
   1627e:	mov    eax,DWORD PTR [esi+0x4]
   16281:	mov    DWORD PTR [eax+0x1c],0x1
   16288:	mov    eax,DWORD PTR [esi+0x4]
   1628b:	mov    eax,DWORD PTR [eax+0x4]
   1628e:	and    DWORD PTR [eax+0x1c],0x0
   16292:	mov    eax,DWORD PTR [esi+0x4]
   16295:	push   DWORD PTR [eax+0x4]
   16298:	mov    ecx,edi
   1629a:	call   0x133b4
   1629f:	jmp    0x162f4
   162a1:	mov    ecx,DWORD PTR [ecx]
   162a3:	cmp    DWORD PTR [ecx+0x1c],edx
   162a6:	jne    0x162c5
   162a8:	mov    edx,eax
   162aa:	xor    eax,eax
   162ac:	inc    eax
   162ad:	mov    DWORD PTR [edx+0x1c],eax
   162b0:	mov    DWORD PTR [ecx+0x1c],eax
   162b3:	mov    eax,DWORD PTR [esi+0x4]
   162b6:	mov    eax,DWORD PTR [eax+0x4]
   162b9:	and    DWORD PTR [eax+0x1c],0x0
   162bd:	mov    eax,DWORD PTR [esi+0x4]
   162c0:	mov    esi,DWORD PTR [eax+0x4]
   162c3:	jmp    0x162f4
   162c5:	cmp    esi,DWORD PTR [eax]
   162c7:	jne    0x162d3
   162c9:	mov    esi,eax
   162cb:	push   esi
   162cc:	mov    ecx,edi
   162ce:	call   0x133b4
   162d3:	mov    eax,DWORD PTR [esi+0x4]
   162d6:	mov    DWORD PTR [eax+0x1c],0x1
   162dd:	mov    eax,DWORD PTR [esi+0x4]
   162e0:	mov    eax,DWORD PTR [eax+0x4]
   162e3:	and    DWORD PTR [eax+0x1c],0x0
   162e7:	mov    eax,DWORD PTR [esi+0x4]
   162ea:	push   DWORD PTR [eax+0x4]
   162ed:	mov    ecx,edi
   162ef:	call   0x13366
   162f4:	mov    eax,DWORD PTR [edi+0x4]
   162f7:	cmp    esi,DWORD PTR [eax+0x4]
   162fa:	jne    0x16252
   16300:	mov    eax,DWORD PTR [edi+0x4]
   16303:	mov    eax,DWORD PTR [eax+0x4]
   16306:	pop    edi
   16307:	mov    DWORD PTR [eax+0x1c],0x1
   1630e:	mov    eax,DWORD PTR [ebp+0x8]
   16311:	pop    esi
   16312:	mov    DWORD PTR [eax],ebx
   16314:	pop    ebx
   16315:	pop    ebp
   16316:	ret    0x10
   16319:	int3   
   1631a:	int3   
   1631b:	int3   
   1631c:	int3   
   1631d:	int3   
   1631e:	mov    edi,edi
   16320:	push   ebp
   16321:	mov    ebp,esp
   16323:	push   esi
   16324:	push   edi
   16325:	mov    edi,DWORD PTR [ebp+0x8]
   16328:	mov    al,BYTE PTR [edi+0x8]
   1632b:	mov    esi,ecx
   1632d:	mov    BYTE PTR [esi+0x8],al
   16330:	call   0x148e4
   16335:	push   edi
   16336:	mov    ecx,esi
   16338:	call   0x14f78
   1633d:	pop    edi
   1633e:	mov    eax,esi
   16340:	pop    esi
   16341:	pop    ebp
   16342:	ret    0x4
   16345:	int3   
   16346:	int3   
   16347:	int3   
   16348:	int3   
   16349:	int3   
   1634a:	mov    edi,edi
   1634c:	push   ebp
   1634d:	mov    ebp,esp
   1634f:	push   ecx
   16350:	push   esi
   16351:	mov    esi,ecx
   16353:	cmp    esi,DWORD PTR [ebp+0x8]
   16356:	je     0x16374
   16358:	mov    eax,DWORD PTR [esi+0x4]
   1635b:	mov    ecx,DWORD PTR [eax]
   1635d:	push   eax
   1635e:	push   ecx
   1635f:	lea    eax,[ebp-0x4]
   16362:	push   eax
   16363:	mov    ecx,esi
   16365:	call   0x14694
   1636a:	push   DWORD PTR [ebp+0x8]
   1636d:	mov    ecx,esi
   1636f:	call   0x14f78
   16374:	mov    eax,esi
   16376:	pop    esi
   16377:	leave  
   16378:	ret    0x4
   1637b:	int3   
   1637c:	int3   
   1637d:	int3   
   1637e:	int3   
   1637f:	int3   
   16380:	mov    edi,edi
   16382:	push   ebp
   16383:	mov    ebp,esp
   16385:	push   esi
   16386:	push   edi
   16387:	xor    edi,edi
   16389:	push   edi
   1638a:	push   edi
   1638b:	push   edi
   1638c:	mov    esi,ecx
   1638e:	mov    eax,DWORD PTR [esi+0x10]
   16391:	push   edi
   16392:	push   eax
   16393:	call   0x119ea
   16398:	call   eax
   1639a:	test   eax,eax
   1639c:	jl     0x163b5
   1639e:	lea    eax,[ebp+0x8]
   163a1:	push   eax
   163a2:	mov    ecx,esi
   163a4:	call   0x1464a
   163a9:	mov    esi,DWORD PTR [esi+0x10]
   163ac:	push   edi
   163ad:	push   esi
   163ae:	call   0x11a14
   163b3:	call   eax
   163b5:	pop    edi
   163b6:	pop    esi
   163b7:	pop    ebp
   163b8:	ret    0x4
   163bb:	int3   
   163bc:	int3   
   163bd:	int3   
   163be:	int3   
   163bf:	int3   
   163c0:	mov    edi,edi
   163c2:	push   ebp
   163c3:	mov    ebp,esp
   163c5:	sub    esp,0x40
   163c8:	test   BYTE PTR [ebp+0x8],0x20
   163cc:	je     0x16458
   163d2:	push   ebx
   163d3:	lea    ecx,[ebp-0x40]
   163d6:	call   0x13b0e
   163db:	mov    ecx,DWORD PTR ds:0x784e8
   163e1:	lea    eax,[ebp-0x40]
   163e4:	push   eax
   163e5:	push   DWORD PTR [ebp+0xc]
   163e8:	call   0x151fe
   163ed:	test   al,al
   163ef:	je     0x16454
   163f1:	mov    ecx,DWORD PTR [ebp+0x10]
   163f4:	lea    eax,[ebp-0x38]
   163f7:	push   eax
   163f8:	call   0x12a28
   163fd:	mov    ecx,DWORD PTR [ebp+0x14]
   16400:	lea    eax,[ebp-0x30]
   16403:	push   eax
   16404:	call   0x12a28
   16409:	mov    ecx,DWORD PTR [ebp+0x18]
   1640c:	lea    eax,[ebp-0x28]
   1640f:	push   eax
   16410:	call   0x12a28
   16415:	mov    eax,DWORD PTR [ebp+0x20]
   16418:	mov    ecx,DWORD PTR [ebp-0x20]
   1641b:	mov    DWORD PTR [eax],ecx
   1641d:	mov    ecx,DWORD PTR [ebp+0x1c]
   16420:	lea    eax,[ebp-0x8]
   16423:	push   eax
   16424:	call   0x12a28
   16429:	mov    eax,DWORD PTR [ebp+0x24]
   1642c:	mov    ecx,DWORD PTR [ebp-0x18]
   1642f:	mov    DWORD PTR [eax],ecx
   16431:	mov    ecx,DWORD PTR [ebp-0x14]
   16434:	mov    DWORD PTR [eax+0x4],ecx
   16437:	mov    ecx,DWORD PTR [ebp-0x10]
   1643a:	mov    eax,DWORD PTR [ebp+0x28]
   1643d:	mov    DWORD PTR [eax],ecx
   1643f:	mov    ecx,DWORD PTR [ebp-0xc]
   16442:	mov    DWORD PTR [eax+0x4],ecx
   16445:	mov    bl,0x1
   16447:	lea    ecx,[ebp-0x40]
   1644a:	call   0x13534
   1644f:	mov    al,bl
   16451:	pop    ebx
   16452:	jmp    0x164d3
   16454:	xor    bl,bl
   16456:	jmp    0x16447
   16458:	mov    ecx,DWORD PTR ds:0x784e0
   1645e:	push   esi
   1645f:	push   DWORD PTR [ebp+0xc]
   16462:	lea    eax,[ebp+0xc]
   16465:	push   eax
   16466:	call   0x13c40
   1646b:	mov    esi,DWORD PTR [ebp+0xc]
   1646e:	mov    eax,ds:0x784e0
   16473:	cmp    esi,DWORD PTR [eax+0x4]
   16476:	jne    0x1647c
   16478:	xor    al,al
   1647a:	jmp    0x164d2
   1647c:	mov    ecx,DWORD PTR [ebp+0x10]
   1647f:	lea    eax,[esi+0x20]
   16482:	push   eax
   16483:	call   0x12a28
   16488:	mov    ecx,DWORD PTR [ebp+0x14]
   1648b:	lea    eax,[esi+0x28]
   1648e:	push   eax
   1648f:	call   0x12a28
   16494:	mov    ecx,DWORD PTR [ebp+0x18]
   16497:	lea    eax,[esi+0x30]
   1649a:	push   eax
   1649b:	call   0x12a28
   164a0:	mov    ecx,DWORD PTR [ebp+0x1c]
   164a3:	lea    eax,[esi+0x50]
   164a6:	push   eax
   164a7:	call   0x12a28
   164ac:	mov    eax,DWORD PTR [esi+0x38]
   164af:	mov    ecx,DWORD PTR [ebp+0x20]
   164b2:	mov    DWORD PTR [ecx],eax
   164b4:	mov    ecx,DWORD PTR [esi+0x40]
   164b7:	mov    eax,DWORD PTR [ebp+0x24]
   164ba:	mov    DWORD PTR [eax],ecx
   164bc:	mov    ecx,DWORD PTR [esi+0x44]
   164bf:	mov    DWORD PTR [eax+0x4],ecx
   164c2:	mov    ecx,DWORD PTR [esi+0x48]
   164c5:	mov    eax,DWORD PTR [ebp+0x28]
   164c8:	mov    DWORD PTR [eax],ecx
   164ca:	mov    ecx,DWORD PTR [esi+0x4c]
   164cd:	mov    DWORD PTR [eax+0x4],ecx
   164d0:	mov    al,0x1
   164d2:	pop    esi
   164d3:	leave  
   164d4:	ret    0x24
   164d7:	int3   
   164d8:	int3   
   164d9:	int3   
   164da:	int3   
   164db:	int3   
   164dc:	push   0x40
   164de:	push   0x777a8
   164e3:	call   0x1e1dc
   164e8:	xor    esi,esi
   164ea:	push   esi
   164eb:	push   esi
   164ec:	push   esi
   164ed:	push   esi
   164ee:	push   0x77b58
   164f3:	call   0x119ea
   164f8:	call   eax
   164fa:	cmp    eax,esi
   164fc:	jl     0x16675
   16502:	mov    DWORD PTR [ebp-0x4],esi
   16505:	or     edi,0xffffffff
   16508:	push   edi
   16509:	mov    esi,0x1e5e8
   1650e:	push   esi
   1650f:	lea    ecx,[ebp-0x40]
   16512:	call   0x12b6e
   16517:	push   edi
   16518:	push   esi
   16519:	lea    ecx,[ebp-0x38]
   1651c:	call   0x12b6e
   16521:	push   edi
   16522:	push   esi
   16523:	lea    ecx,[ebp-0x30]
   16526:	call   0x12b6e
   1652b:	push   edi
   1652c:	push   esi
   1652d:	lea    ecx,[ebp-0x28]
   16530:	call   0x12b6e
   16535:	lea    eax,[ebp-0x50]
   16538:	push   eax
   16539:	lea    eax,[ebp-0x48]
   1653c:	push   eax
   1653d:	lea    eax,[ebp-0x1c]
   16540:	push   eax
   16541:	lea    eax,[ebp-0x28]
   16544:	push   eax
   16545:	lea    eax,[ebp-0x30]
   16548:	push   eax
   16549:	lea    eax,[ebp-0x38]
   1654c:	push   eax
   1654d:	lea    eax,[ebp-0x40]
   16550:	push   eax
   16551:	mov    edi,DWORD PTR [ebp+0x8]
   16554:	push   edi
   16555:	mov    esi,DWORD PTR [ebp+0xc]
   16558:	push   DWORD PTR [esi+0x4]
   1655b:	call   0x163c0
   16560:	test   al,al
   16562:	jne    0x16570
   16564:	mov    DWORD PTR [esi+0x8],0x1
   1656b:	jmp    0x1662a
   16570:	mov    ecx,DWORD PTR [edi+0x4]
   16573:	mov    eax,DWORD PTR [ebp-0x3c]
   16576:	lea    edx,[eax+ecx*1+0x2]
   1657a:	mov    eax,DWORD PTR [ebp-0x34]
   1657d:	lea    edi,[eax+edx*1+0x1]
   16581:	mov    eax,DWORD PTR [ebp-0x2c]
   16584:	lea    eax,[eax+edi*1+0x1]
   16588:	mov    DWORD PTR [ebp-0x20],eax
   1658b:	mov    ebx,DWORD PTR [ebp-0x24]
   1658e:	lea    eax,[ebx+eax*1+0x1]
   16592:	cmp    eax,DWORD PTR [esi]
   16594:	jbe    0x165a4
   16596:	mov    DWORD PTR [esi],eax
   16598:	mov    DWORD PTR [esi+0x8],0x2
   1659f:	jmp    0x1662a
   165a4:	and    DWORD PTR [esi+0x8],0x0
   165a8:	mov    eax,DWORD PTR [ebp-0x1c]
   165ab:	mov    DWORD PTR [esi+0xc],eax
   165ae:	mov    eax,DWORD PTR [ebp-0x48]
   165b1:	mov    DWORD PTR [esi+0x10],eax
   165b4:	mov    eax,DWORD PTR [ebp-0x44]
   165b7:	mov    DWORD PTR [esi+0x14],eax
   165ba:	mov    eax,DWORD PTR [ebp-0x50]
   165bd:	mov    DWORD PTR [esi+0x18],eax
   165c0:	mov    eax,DWORD PTR [ebp-0x4c]
   165c3:	mov    DWORD PTR [esi+0x1c],eax
   165c6:	mov    eax,DWORD PTR [ebp+0x8]
   165c9:	mov    eax,DWORD PTR [eax]
   165cb:	mov    DWORD PTR [ebp-0x1c],eax
   165ce:	lea    eax,[esi+0x20]
   165d1:	mov    ebx,DWORD PTR [ebp-0x1c]
   165d4:	mov    bl,BYTE PTR [ebx]
   165d6:	mov    BYTE PTR [ebp+0xb],bl
   165d9:	mov    BYTE PTR [eax],bl
   165db:	inc    DWORD PTR [ebp-0x1c]
   165de:	inc    eax
   165df:	test   bl,bl
   165e1:	jne    0x165d1
   165e3:	mov    ebx,DWORD PTR [ebp-0x40]
   165e6:	lea    ecx,[ecx+esi*1+0x21]
   165ea:	mov    al,BYTE PTR [ebx]
   165ec:	mov    BYTE PTR [ecx],al
   165ee:	inc    ebx
   165ef:	inc    ecx
   165f0:	test   al,al
   165f2:	jne    0x165ea
   165f4:	mov    ecx,DWORD PTR [ebp-0x38]
   165f7:	lea    edx,[edx+esi*1+0x20]
   165fb:	mov    al,BYTE PTR [ecx]
   165fd:	mov    BYTE PTR [edx],al
   165ff:	inc    ecx
   16600:	inc    edx
   16601:	test   al,al
   16603:	jne    0x165fb
   16605:	mov    ecx,DWORD PTR [ebp-0x30]
   16608:	lea    edi,[edi+esi*1+0x20]
   1660c:	mov    al,BYTE PTR [ecx]
   1660e:	mov    BYTE PTR [edi],al
   16610:	inc    ecx
   16611:	inc    edi
   16612:	test   al,al
   16614:	jne    0x1660c
   16616:	mov    ecx,DWORD PTR [ebp-0x28]
   16619:	mov    eax,DWORD PTR [ebp-0x20]
   1661c:	lea    esi,[eax+esi*1+0x20]
   16620:	mov    al,BYTE PTR [ecx]
   16622:	mov    BYTE PTR [esi],al
   16624:	inc    ecx
   16625:	inc    esi
   16626:	test   al,al
   16628:	jne    0x16620
   1662a:	push   DWORD PTR [ebp-0x28]
   1662d:	call   0x11d22
   16632:	push   DWORD PTR [ebp-0x30]
   16635:	call   0x11d22
   1663a:	push   DWORD PTR [ebp-0x38]
   1663d:	call   0x11d22
   16642:	push   DWORD PTR [ebp-0x40]
   16645:	call   0x11d22
   1664a:	add    esp,0x10
   1664d:	jmp    0x16660
   1664f:	xor    eax,eax
   16651:	inc    eax
   16652:	ret    
   16653:	mov    esp,DWORD PTR [ebp-0x18]
   16656:	mov    eax,DWORD PTR [ebp+0xc]
   16659:	mov    DWORD PTR [eax+0x8],0x4
   16660:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16667:	push   0x0
   16669:	push   0x77b58
   1666e:	call   0x11a14
   16673:	call   eax
   16675:	call   0x1e221
   1667a:	ret    0x8
   1667d:	int3   
   1667e:	int3   
   1667f:	int3   
   16680:	int3   
   16681:	int3   
   16682:	mov    edi,edi
   16684:	push   ebp
   16685:	mov    ebp,esp
   16687:	push   ecx
   16688:	push   ecx
   16689:	push   DWORD PTR [ebp+0xc]
   1668c:	lea    eax,[ebp-0x8]
   1668f:	push   eax
   16690:	call   0x152c4
   16695:	mov    eax,DWORD PTR [ebp+0x8]
   16698:	mov    ecx,DWORD PTR [ebp-0x8]
   1669b:	mov    DWORD PTR [eax],ecx
   1669d:	mov    cl,BYTE PTR [ebp-0x4]
   166a0:	mov    BYTE PTR [eax+0x4],cl
   166a3:	leave  
   166a4:	ret    0x8
   166a7:	int3   
   166a8:	int3   
   166a9:	int3   
   166aa:	int3   
   166ab:	int3   
   166ac:	mov    edi,edi
   166ae:	push   ebp
   166af:	mov    ebp,esp
   166b1:	push   ecx
   166b2:	push   ecx
   166b3:	push   DWORD PTR [ebp+0xc]
   166b6:	lea    eax,[ebp-0x8]
   166b9:	push   eax
   166ba:	call   0x1535c
   166bf:	mov    eax,DWORD PTR [ebp+0x8]
   166c2:	mov    ecx,DWORD PTR [ebp-0x8]
   166c5:	mov    DWORD PTR [eax],ecx
   166c7:	mov    cl,BYTE PTR [ebp-0x4]
   166ca:	mov    BYTE PTR [eax+0x4],cl
   166cd:	leave  
   166ce:	ret    0x8
   166d1:	int3   
   166d2:	int3   
   166d3:	int3   
   166d4:	int3   
   166d5:	int3   
   166d6:	mov    edi,edi
   166d8:	push   ebp
   166d9:	mov    ebp,esp
   166db:	push   ecx
   166dc:	push   ecx
   166dd:	push   esi
   166de:	push   DWORD PTR [ebp+0x8]
   166e1:	lea    eax,[ebp-0x8]
   166e4:	push   eax
   166e5:	mov    esi,ecx
   166e7:	call   0x1405e
   166ec:	and    DWORD PTR [ebp+0x8],0x0
   166f0:	lea    eax,[ebp+0x8]
   166f3:	push   eax
   166f4:	push   DWORD PTR [ebp-0x4]
   166f7:	push   DWORD PTR [ebp-0x8]
   166fa:	call   0x13942
   166ff:	add    esp,0xc
   16702:	push   DWORD PTR [ebp-0x4]
   16705:	lea    eax,[ebp-0x4]
   16708:	push   DWORD PTR [ebp-0x8]
   1670b:	mov    ecx,esi
   1670d:	push   eax
   1670e:	call   0x153f4
   16713:	mov    eax,DWORD PTR [ebp+0x8]
   16716:	pop    esi
   16717:	leave  
   16718:	ret    0x4
   1671b:	int3   
   1671c:	int3   
   1671d:	int3   
   1671e:	int3   
   1671f:	int3   
   16720:	mov    edi,edi
   16722:	push   ebp
   16723:	mov    ebp,esp
   16725:	push   ecx
   16726:	push   ebx
   16727:	push   esi
   16728:	push   edi
   16729:	mov    edi,ecx
   1672b:	mov    eax,DWORD PTR [edi+0x4]
   1672e:	mov    esi,DWORD PTR [eax+0x4]
   16731:	mov    ebx,eax
   16733:	mov    al,0x1
   16735:	jmp    0x16750
   16737:	lea    eax,[esi+0x10]
   1673a:	push   eax
   1673b:	push   DWORD PTR [ebp+0xc]
   1673e:	mov    ebx,esi
   16740:	call   0x19eec
   16745:	test   al,al
   16747:	je     0x1674d
   16749:	mov    esi,DWORD PTR [esi]
   1674b:	jmp    0x16750
   1674d:	mov    esi,DWORD PTR [esi+0x8]
   16750:	cmp    esi,DWORD PTR ds:0x786b8
   16756:	jne    0x16737
   16758:	cmp    BYTE PTR [edi+0x8],0x0
   1675c:	je     0x16779
   1675e:	push   DWORD PTR [ebp+0xc]
   16761:	lea    eax,[ebp+0xc]
   16764:	push   ebx
   16765:	push   esi
   16766:	push   eax
   16767:	mov    ecx,edi
   16769:	call   0x1571e
   1676e:	mov    ecx,DWORD PTR [eax]
   16770:	mov    eax,DWORD PTR [ebp+0x8]
   16773:	mov    BYTE PTR [eax+0x4],0x1
   16777:	jmp    0x167ac
   16779:	mov    DWORD PTR [ebp-0x4],ebx
   1677c:	test   al,al
   1677e:	je     0x1678f
   16780:	mov    eax,DWORD PTR [edi+0x4]
   16783:	cmp    ebx,DWORD PTR [eax]
   16785:	je     0x1675e
   16787:	lea    ecx,[ebp-0x4]
   1678a:	call   0x11132
   1678f:	push   DWORD PTR [ebp+0xc]
   16792:	mov    eax,DWORD PTR [ebp-0x4]
   16795:	add    eax,0x10
   16798:	push   eax
   16799:	call   0x19eec
   1679e:	test   al,al
   167a0:	jne    0x1675e
   167a2:	mov    eax,DWORD PTR [ebp+0x8]
   167a5:	mov    ecx,DWORD PTR [ebp-0x4]
   167a8:	mov    BYTE PTR [eax+0x4],0x0
   167ac:	pop    edi
   167ad:	pop    esi
   167ae:	mov    DWORD PTR [eax],ecx
   167b0:	pop    ebx
   167b1:	leave  
   167b2:	ret    0x8
   167b5:	int3   
   167b6:	int3   
   167b7:	int3   
   167b8:	int3   
   167b9:	int3   
   167ba:	mov    edi,edi
   167bc:	push   ebp
   167bd:	mov    ebp,esp
   167bf:	push   ecx
   167c0:	push   esi
   167c1:	mov    esi,ecx
   167c3:	cmp    DWORD PTR [esi+0xc],0x0
   167c7:	mov    ecx,DWORD PTR [ebp+0xc]
   167ca:	je     0x16804
   167cc:	mov    eax,DWORD PTR [esi+0x4]
   167cf:	cmp    ecx,DWORD PTR [eax]
   167d1:	jne    0x16804
   167d3:	cmp    DWORD PTR [ebp+0x10],eax
   167d6:	jne    0x16804
   167d8:	push   DWORD PTR [eax+0x4]
   167db:	mov    ecx,esi
   167dd:	call   0x156d4
   167e2:	mov    ecx,DWORD PTR ds:0x786b8
   167e8:	mov    eax,DWORD PTR [esi+0x4]
   167eb:	mov    DWORD PTR [eax+0x4],ecx
   167ee:	mov    eax,DWORD PTR [esi+0x4]
   167f1:	and    DWORD PTR [esi+0xc],0x0
   167f5:	mov    DWORD PTR [eax],eax
   167f7:	mov    eax,DWORD PTR [esi+0x4]
   167fa:	mov    DWORD PTR [eax+0x8],eax
   167fd:	mov    eax,DWORD PTR [esi+0x4]
   16800:	mov    ecx,DWORD PTR [eax]
   16802:	jmp    0x16829
   16804:	cmp    ecx,DWORD PTR [ebp+0x10]
   16807:	je     0x16829
   16809:	push   edi
   1680a:	mov    edi,ecx
   1680c:	lea    ecx,[ebp+0xc]
   1680f:	call   0x12e62
   16814:	push   edi
   16815:	lea    eax,[ebp-0x4]
   16818:	push   eax
   16819:	mov    ecx,esi
   1681b:	call   0x15472
   16820:	mov    ecx,DWORD PTR [ebp+0xc]
   16823:	cmp    ecx,DWORD PTR [ebp+0x10]
   16826:	jne    0x1680a
   16828:	pop    edi
   16829:	mov    eax,DWORD PTR [ebp+0x8]
   1682c:	mov    DWORD PTR [eax],ecx
   1682e:	pop    esi
   1682f:	leave  
   16830:	ret    0xc
   16833:	int3   
   16834:	int3   
   16835:	int3   
   16836:	int3   
   16837:	int3   
   16838:	mov    edi,edi
   1683a:	push   ebp
   1683b:	mov    ebp,esp
   1683d:	push   ecx
   1683e:	push   ebx
   1683f:	push   esi
   16840:	push   edi
   16841:	mov    edi,ecx
   16843:	mov    eax,DWORD PTR [edi+0x4]
   16846:	mov    esi,DWORD PTR [eax+0x4]
   16849:	mov    ebx,eax
   1684b:	mov    al,0x1
   1684d:	jmp    0x16868
   1684f:	lea    eax,[esi+0x10]
   16852:	push   eax
   16853:	push   DWORD PTR [ebp+0xc]
   16856:	mov    ebx,esi
   16858:	call   0x19eec
   1685d:	test   al,al
   1685f:	je     0x16865
   16861:	mov    esi,DWORD PTR [esi]
   16863:	jmp    0x16868
   16865:	mov    esi,DWORD PTR [esi+0x8]
   16868:	cmp    esi,DWORD PTR ds:0x786bc
   1686e:	jne    0x1684f
   16870:	cmp    BYTE PTR [edi+0x8],0x0
   16874:	je     0x16891
   16876:	push   DWORD PTR [ebp+0xc]
   16879:	lea    eax,[ebp+0xc]
   1687c:	push   ebx
   1687d:	push   esi
   1687e:	push   eax
   1687f:	mov    ecx,edi
   16881:	call   0x15b20
   16886:	mov    ecx,DWORD PTR [eax]
   16888:	mov    eax,DWORD PTR [ebp+0x8]
   1688b:	mov    BYTE PTR [eax+0x4],0x1
   1688f:	jmp    0x168c4
   16891:	mov    DWORD PTR [ebp-0x4],ebx
   16894:	test   al,al
   16896:	je     0x168a7
   16898:	mov    eax,DWORD PTR [edi+0x4]
   1689b:	cmp    ebx,DWORD PTR [eax]
   1689d:	je     0x16876
   1689f:	lea    ecx,[ebp-0x4]
   168a2:	call   0x10fea
   168a7:	push   DWORD PTR [ebp+0xc]
   168aa:	mov    eax,DWORD PTR [ebp-0x4]
   168ad:	add    eax,0x10
   168b0:	push   eax
   168b1:	call   0x19eec
   168b6:	test   al,al
   168b8:	jne    0x16876
   168ba:	mov    eax,DWORD PTR [ebp+0x8]
   168bd:	mov    ecx,DWORD PTR [ebp-0x4]
   168c0:	mov    BYTE PTR [eax+0x4],0x0
   168c4:	pop    edi
   168c5:	pop    esi
   168c6:	mov    DWORD PTR [eax],ecx
   168c8:	pop    ebx
   168c9:	leave  
   168ca:	ret    0x8
   168cd:	int3   
   168ce:	int3   
   168cf:	int3   
   168d0:	int3   
   168d1:	int3   
   168d2:	mov    edi,edi
   168d4:	push   ebp
   168d5:	mov    ebp,esp
   168d7:	push   ecx
   168d8:	push   esi
   168d9:	mov    esi,ecx
   168db:	cmp    DWORD PTR [esi+0xc],0x0
   168df:	mov    ecx,DWORD PTR [ebp+0xc]
   168e2:	je     0x1691c
   168e4:	mov    eax,DWORD PTR [esi+0x4]
   168e7:	cmp    ecx,DWORD PTR [eax]
   168e9:	jne    0x1691c
   168eb:	cmp    DWORD PTR [ebp+0x10],eax
   168ee:	jne    0x1691c
   168f0:	push   DWORD PTR [eax+0x4]
   168f3:	mov    ecx,esi
   168f5:	call   0x15ad6
   168fa:	mov    ecx,DWORD PTR ds:0x786bc
   16900:	mov    eax,DWORD PTR [esi+0x4]
   16903:	mov    DWORD PTR [eax+0x4],ecx
   16906:	mov    eax,DWORD PTR [esi+0x4]
   16909:	and    DWORD PTR [esi+0xc],0x0
   1690d:	mov    DWORD PTR [eax],eax
   1690f:	mov    eax,DWORD PTR [esi+0x4]
   16912:	mov    DWORD PTR [eax+0x8],eax
   16915:	mov    eax,DWORD PTR [esi+0x4]
   16918:	mov    ecx,DWORD PTR [eax]
   1691a:	jmp    0x16941
   1691c:	cmp    ecx,DWORD PTR [ebp+0x10]
   1691f:	je     0x16941
   16921:	push   edi
   16922:	mov    edi,ecx
   16924:	lea    ecx,[ebp+0xc]
   16927:	call   0x13786
   1692c:	push   edi
   1692d:	lea    eax,[ebp-0x4]
   16930:	push   eax
   16931:	mov    ecx,esi
   16933:	call   0x15874
   16938:	mov    ecx,DWORD PTR [ebp+0xc]
   1693b:	cmp    ecx,DWORD PTR [ebp+0x10]
   1693e:	jne    0x16922
   16940:	pop    edi
   16941:	mov    eax,DWORD PTR [ebp+0x8]
   16944:	mov    DWORD PTR [eax],ecx
   16946:	pop    esi
   16947:	leave  
   16948:	ret    0xc
   1694b:	int3   
   1694c:	int3   
   1694d:	int3   
   1694e:	int3   
   1694f:	int3   
   16950:	mov    edi,edi
   16952:	push   ebp
   16953:	mov    ebp,esp
   16955:	push   ecx
   16956:	push   ebx
   16957:	push   esi
   16958:	push   edi
   16959:	mov    edi,ecx
   1695b:	mov    eax,DWORD PTR [edi+0x4]
   1695e:	mov    esi,DWORD PTR [eax+0x4]
   16961:	mov    ebx,eax
   16963:	mov    al,0x1
   16965:	jmp    0x16980
   16967:	lea    eax,[esi+0xc]
   1696a:	push   eax
   1696b:	push   DWORD PTR [ebp+0xc]
   1696e:	mov    ebx,esi
   16970:	call   0x19eec
   16975:	test   al,al
   16977:	je     0x1697d
   16979:	mov    esi,DWORD PTR [esi]
   1697b:	jmp    0x16980
   1697d:	mov    esi,DWORD PTR [esi+0x8]
   16980:	cmp    esi,DWORD PTR ds:0x786c0
   16986:	jne    0x16967
   16988:	cmp    BYTE PTR [edi+0x8],0x0
   1698c:	je     0x169a9
   1698e:	push   DWORD PTR [ebp+0xc]
   16991:	lea    eax,[ebp+0xc]
   16994:	push   ebx
   16995:	push   esi
   16996:	push   eax
   16997:	mov    ecx,edi
   16999:	call   0x15c76
   1699e:	mov    ecx,DWORD PTR [eax]
   169a0:	mov    eax,DWORD PTR [ebp+0x8]
   169a3:	mov    BYTE PTR [eax+0x4],0x1
   169a7:	jmp    0x169dc
   169a9:	mov    DWORD PTR [ebp-0x4],ebx
   169ac:	test   al,al
   169ae:	je     0x169bf
   169b0:	mov    eax,DWORD PTR [edi+0x4]
   169b3:	cmp    ebx,DWORD PTR [eax]
   169b5:	je     0x1698e
   169b7:	lea    ecx,[ebp-0x4]
   169ba:	call   0x1106e
   169bf:	push   DWORD PTR [ebp+0xc]
   169c2:	mov    eax,DWORD PTR [ebp-0x4]
   169c5:	add    eax,0xc
   169c8:	push   eax
   169c9:	call   0x19eec
   169ce:	test   al,al
   169d0:	jne    0x1698e
   169d2:	mov    eax,DWORD PTR [ebp+0x8]
   169d5:	mov    ecx,DWORD PTR [ebp-0x4]
   169d8:	mov    BYTE PTR [eax+0x4],0x0
   169dc:	pop    edi
   169dd:	pop    esi
   169de:	mov    DWORD PTR [eax],ecx
   169e0:	pop    ebx
   169e1:	leave  
   169e2:	ret    0x8
   169e5:	int3   
   169e6:	int3   
   169e7:	int3   
   169e8:	int3   
   169e9:	int3   
   169ea:	mov    edi,edi
   169ec:	push   ebp
   169ed:	mov    ebp,esp
   169ef:	push   ecx
   169f0:	push   ebx
   169f1:	push   esi
   169f2:	push   edi
   169f3:	mov    edi,ecx
   169f5:	mov    eax,DWORD PTR [edi+0x4]
   169f8:	mov    esi,DWORD PTR [eax+0x4]
   169fb:	mov    ebx,eax
   169fd:	mov    eax,ds:0x786c4
   16a02:	mov    dl,0x1
   16a04:	cmp    esi,eax
   16a06:	je     0x16a24
   16a08:	mov    ecx,DWORD PTR [ebp+0xc]
   16a0b:	mov    ecx,DWORD PTR [ecx]
   16a0d:	cmp    ecx,DWORD PTR [esi+0xc]
   16a10:	mov    ebx,esi
   16a12:	setl   dl
   16a15:	test   dl,dl
   16a17:	je     0x16a1d
   16a19:	mov    esi,DWORD PTR [esi]
   16a1b:	jmp    0x16a20
   16a1d:	mov    esi,DWORD PTR [esi+0x8]
   16a20:	cmp    esi,eax
   16a22:	jne    0x16a0d
   16a24:	cmp    BYTE PTR [edi+0x8],0x0
   16a28:	je     0x16a45
   16a2a:	push   DWORD PTR [ebp+0xc]
   16a2d:	push   ebx
   16a2e:	push   esi
   16a2f:	lea    eax,[ebp+0xc]
   16a32:	push   eax
   16a33:	mov    ecx,edi
   16a35:	call   0x16078
   16a3a:	mov    ecx,DWORD PTR [eax]
   16a3c:	mov    eax,DWORD PTR [ebp+0x8]
   16a3f:	mov    BYTE PTR [eax+0x4],0x1
   16a43:	jmp    0x16a74
   16a45:	mov    ecx,ebx
   16a47:	mov    DWORD PTR [ebp-0x4],ecx
   16a4a:	test   dl,dl
   16a4c:	je     0x16a60
   16a4e:	mov    eax,DWORD PTR [edi+0x4]
   16a51:	cmp    ebx,DWORD PTR [eax]
   16a53:	je     0x16a2a
   16a55:	lea    ecx,[ebp-0x4]
   16a58:	call   0x110f2
   16a5d:	mov    ecx,DWORD PTR [ebp-0x4]
   16a60:	mov    edx,DWORD PTR [ecx+0xc]
   16a63:	mov    eax,DWORD PTR [ebp+0xc]
   16a66:	cmp    edx,DWORD PTR [eax]
   16a68:	jge    0x16a6d
   16a6a:	push   eax
   16a6b:	jmp    0x16a2d
   16a6d:	mov    eax,DWORD PTR [ebp+0x8]
   16a70:	mov    BYTE PTR [eax+0x4],0x0
   16a74:	pop    edi
   16a75:	pop    esi
   16a76:	mov    DWORD PTR [eax],ecx
   16a78:	pop    ebx
   16a79:	leave  
   16a7a:	ret    0x8
   16a7d:	int3   
   16a7e:	int3   
   16a7f:	int3   
   16a80:	int3   
   16a81:	int3   
   16a82:	mov    edi,edi
   16a84:	push   ebp
   16a85:	mov    ebp,esp
   16a87:	push   ecx
   16a88:	push   esi
   16a89:	mov    esi,ecx
   16a8b:	cmp    DWORD PTR [esi+0xc],0x0
   16a8f:	mov    ecx,DWORD PTR [ebp+0xc]
   16a92:	je     0x16acc
   16a94:	mov    eax,DWORD PTR [esi+0x4]
   16a97:	cmp    ecx,DWORD PTR [eax]
   16a99:	jne    0x16acc
   16a9b:	cmp    DWORD PTR [ebp+0x10],eax
   16a9e:	jne    0x16acc
   16aa0:	push   DWORD PTR [eax+0x4]
   16aa3:	mov    ecx,esi
   16aa5:	call   0x1602e
   16aaa:	mov    ecx,DWORD PTR ds:0x786c4
   16ab0:	mov    eax,DWORD PTR [esi+0x4]
   16ab3:	mov    DWORD PTR [eax+0x4],ecx
   16ab6:	mov    eax,DWORD PTR [esi+0x4]
   16ab9:	and    DWORD PTR [esi+0xc],0x0
   16abd:	mov    DWORD PTR [eax],eax
   16abf:	mov    eax,DWORD PTR [esi+0x4]
   16ac2:	mov    DWORD PTR [eax+0x8],eax
   16ac5:	mov    eax,DWORD PTR [esi+0x4]
   16ac8:	mov    ecx,DWORD PTR [eax]
   16aca:	jmp    0x16af1
   16acc:	cmp    ecx,DWORD PTR [ebp+0x10]
   16acf:	je     0x16af1
   16ad1:	push   edi
   16ad2:	mov    edi,ecx
   16ad4:	lea    ecx,[ebp+0xc]
   16ad7:	call   0x111a8
   16adc:	push   edi
   16add:	lea    eax,[ebp-0x4]
   16ae0:	push   eax
   16ae1:	mov    ecx,esi
   16ae3:	call   0x15dcc
   16ae8:	mov    ecx,DWORD PTR [ebp+0xc]
   16aeb:	cmp    ecx,DWORD PTR [ebp+0x10]
   16aee:	jne    0x16ad2
   16af0:	pop    edi
   16af1:	mov    eax,DWORD PTR [ebp+0x8]
   16af4:	mov    DWORD PTR [eax],ecx
   16af6:	pop    esi
   16af7:	leave  
   16af8:	ret    0xc
   16afb:	int3   
   16afc:	int3   
   16afd:	int3   
   16afe:	int3   
   16aff:	int3   
   16b00:	mov    edi,edi
   16b02:	push   ebp
   16b03:	mov    ebp,esp
   16b05:	push   ecx
   16b06:	push   ebx
   16b07:	push   esi
   16b08:	push   edi
   16b09:	mov    edi,ecx
   16b0b:	mov    eax,DWORD PTR [edi+0x4]
   16b0e:	mov    esi,DWORD PTR [eax+0x4]
   16b11:	mov    ebx,eax
   16b13:	mov    al,0x1
   16b15:	jmp    0x16b30
   16b17:	lea    eax,[esi+0xc]
   16b1a:	push   eax
   16b1b:	push   DWORD PTR [ebp+0xc]
   16b1e:	mov    ebx,esi
   16b20:	call   0x19f1c
   16b25:	test   al,al
   16b27:	je     0x16b2d
   16b29:	mov    esi,DWORD PTR [esi]
   16b2b:	jmp    0x16b30
   16b2d:	mov    esi,DWORD PTR [esi+0x8]
   16b30:	cmp    esi,DWORD PTR ds:0x786cc
   16b36:	jne    0x16b17
   16b38:	cmp    BYTE PTR [edi+0x8],0x0
   16b3c:	je     0x16b59
   16b3e:	push   DWORD PTR [ebp+0xc]
   16b41:	lea    eax,[ebp+0xc]
   16b44:	push   ebx
   16b45:	push   esi
   16b46:	push   eax
   16b47:	mov    ecx,edi
   16b49:	call   0x161c8
   16b4e:	mov    ecx,DWORD PTR [eax]
   16b50:	mov    eax,DWORD PTR [ebp+0x8]
   16b53:	mov    BYTE PTR [eax+0x4],0x1
   16b57:	jmp    0x16b8c
   16b59:	mov    DWORD PTR [ebp-0x4],ebx
   16b5c:	test   al,al
   16b5e:	je     0x16b6f
   16b60:	mov    eax,DWORD PTR [edi+0x4]
   16b63:	cmp    ebx,DWORD PTR [eax]
   16b65:	je     0x16b3e
   16b67:	lea    ecx,[ebp-0x4]
   16b6a:	call   0x13404
   16b6f:	push   DWORD PTR [ebp+0xc]
   16b72:	mov    eax,DWORD PTR [ebp-0x4]
   16b75:	add    eax,0xc
   16b78:	push   eax
   16b79:	call   0x19f1c
   16b7e:	test   al,al
   16b80:	jne    0x16b3e
   16b82:	mov    eax,DWORD PTR [ebp+0x8]
   16b85:	mov    ecx,DWORD PTR [ebp-0x4]
   16b88:	mov    BYTE PTR [eax+0x4],0x0
   16b8c:	pop    edi
   16b8d:	pop    esi
   16b8e:	mov    DWORD PTR [eax],ecx
   16b90:	pop    ebx
   16b91:	leave  
   16b92:	ret    0x8
   16b95:	int3   
   16b96:	int3   
   16b97:	int3   
   16b98:	int3   
   16b99:	int3   
   16b9a:	mov    edi,edi
   16b9c:	push   ebp
   16b9d:	mov    ebp,esp
   16b9f:	sub    esp,0x10
   16ba2:	push   DWORD PTR [ebp+0x8]
   16ba5:	lea    ecx,[ebp-0x10]
   16ba8:	call   0x1631e
   16bad:	push   DWORD PTR [ebp+0xc]
   16bb0:	mov    ecx,DWORD PTR [ebp+0x8]
   16bb3:	call   0x1634a
   16bb8:	mov    ecx,DWORD PTR [ebp+0xc]
   16bbb:	lea    eax,[ebp-0x10]
   16bbe:	push   eax
   16bbf:	call   0x1634a
   16bc4:	lea    ecx,[ebp-0x10]
   16bc7:	call   0x1523c
   16bcc:	leave  
   16bcd:	ret    0x8
   16bd0:	int3   
   16bd1:	int3   
   16bd2:	int3   
   16bd3:	int3   
   16bd4:	int3   
   16bd5:	int3   
   16bd6:	mov    edi,edi
   16bd8:	push   esi
   16bd9:	mov    esi,ecx
   16bdb:	push   edi
   16bdc:	mov    BYTE PTR [esi+0x8],0x0
   16be0:	call   0x1475c
   16be5:	lea    edi,[esi+0x10]
   16be8:	mov    ecx,edi
   16bea:	call   0x12aba
   16bef:	mov    edi,DWORD PTR [edi]
   16bf1:	push   0x0
   16bf3:	push   edi
   16bf4:	call   0x119c0
   16bf9:	call   eax
   16bfb:	pop    edi
   16bfc:	mov    eax,esi
   16bfe:	pop    esi
   16bff:	ret    
   16c00:	int3   
   16c01:	int3   
   16c02:	int3   
   16c03:	int3   
   16c04:	int3   
   16c05:	int3   
   16c06:	mov    edi,edi
   16c08:	push   ebp
   16c09:	mov    ebp,esp
   16c0b:	sub    esp,0x10
   16c0e:	mov    eax,DWORD PTR [ebp+0x8]
   16c11:	mov    eax,DWORD PTR [eax]
   16c13:	and    DWORD PTR [ebp-0x4],0x0
   16c17:	mov    DWORD PTR [ebp-0x8],eax
   16c1a:	lea    eax,[ebp-0x8]
   16c1d:	push   eax
   16c1e:	lea    eax,[ebp-0x10]
   16c21:	push   eax
   16c22:	call   0x166ac
   16c27:	mov    eax,DWORD PTR [eax]
   16c29:	add    eax,0x10
   16c2c:	leave  
   16c2d:	ret    0x4
   16c30:	int3   
   16c31:	int3   
   16c32:	int3   
   16c33:	int3   
   16c34:	int3   
   16c35:	int3   
   16c36:	mov    edi,edi
   16c38:	push   esi
   16c39:	mov    esi,ecx
   16c3b:	mov    BYTE PTR [esi+0x8],0x0
   16c3f:	call   0x14820
   16c44:	mov    eax,esi
   16c46:	pop    esi
   16c47:	ret    0x8
   16c4a:	int3   
   16c4b:	int3   
   16c4c:	int3   
   16c4d:	int3   
   16c4e:	int3   
   16c4f:	int3   
   16c50:	mov    edi,edi
   16c52:	push   ebp
   16c53:	mov    ebp,esp
   16c55:	push   ecx
   16c56:	push   ecx
   16c57:	push   DWORD PTR [ebp+0xc]
   16c5a:	lea    eax,[ebp-0x8]
   16c5d:	push   eax
   16c5e:	call   0x16720
   16c63:	mov    eax,DWORD PTR [ebp+0x8]
   16c66:	mov    ecx,DWORD PTR [ebp-0x8]
   16c69:	mov    DWORD PTR [eax],ecx
   16c6b:	mov    cl,BYTE PTR [ebp-0x4]
   16c6e:	mov    BYTE PTR [eax+0x4],cl
   16c71:	leave  
   16c72:	ret    0x8
   16c75:	int3   
   16c76:	int3   
   16c77:	int3   
   16c78:	int3   
   16c79:	int3   
   16c7a:	mov    edi,edi
   16c7c:	push   ebp
   16c7d:	mov    ebp,esp
   16c7f:	push   ecx
   16c80:	push   esi
   16c81:	mov    esi,ecx
   16c83:	mov    eax,DWORD PTR [esi+0x4]
   16c86:	mov    ecx,DWORD PTR [eax]
   16c88:	push   eax
   16c89:	push   ecx
   16c8a:	lea    eax,[ebp-0x4]
   16c8d:	push   eax
   16c8e:	mov    ecx,esi
   16c90:	call   0x167ba
   16c95:	push   DWORD PTR [esi+0x4]
   16c98:	call   0x11d22
   16c9d:	xor    eax,eax
   16c9f:	mov    DWORD PTR [esi+0x4],eax
   16ca2:	mov    DWORD PTR [esi+0xc],eax
   16ca5:	dec    DWORD PTR ds:0x78874
   16cab:	pop    ecx
   16cac:	pop    esi
   16cad:	jne    0x16cc5
   16caf:	mov    ecx,DWORD PTR ds:0x786b8
   16cb5:	mov    ds:0x786b8,eax
   16cba:	cmp    ecx,eax
   16cbc:	je     0x16cc5
   16cbe:	push   ecx
   16cbf:	call   0x11d22
   16cc4:	pop    ecx
   16cc5:	leave  
   16cc6:	ret    
   16cc7:	int3   
   16cc8:	int3   
   16cc9:	int3   
   16cca:	int3   
   16ccb:	int3   
   16ccc:	mov    edi,edi
   16cce:	push   ebp
   16ccf:	mov    ebp,esp
   16cd1:	push   ecx
   16cd2:	push   ecx
   16cd3:	push   DWORD PTR [ebp+0xc]
   16cd6:	lea    eax,[ebp-0x8]
   16cd9:	push   eax
   16cda:	call   0x16838
   16cdf:	mov    eax,DWORD PTR [ebp+0x8]
   16ce2:	mov    ecx,DWORD PTR [ebp-0x8]
   16ce5:	mov    DWORD PTR [eax],ecx
   16ce7:	mov    cl,BYTE PTR [ebp-0x4]
   16cea:	mov    BYTE PTR [eax+0x4],cl
   16ced:	leave  
   16cee:	ret    0x8
   16cf1:	int3   
   16cf2:	int3   
   16cf3:	int3   
   16cf4:	int3   
   16cf5:	int3   
   16cf6:	mov    edi,edi
   16cf8:	push   ebp
   16cf9:	mov    ebp,esp
   16cfb:	push   ecx
   16cfc:	mov    eax,DWORD PTR [ecx+0x4]
   16cff:	mov    edx,DWORD PTR [eax]
   16d01:	push   eax
   16d02:	push   edx
   16d03:	lea    eax,[ebp-0x4]
   16d06:	push   eax
   16d07:	call   0x168d2
   16d0c:	leave  
   16d0d:	ret    
   16d0e:	int3   
   16d0f:	int3   
   16d10:	int3   
   16d11:	int3   
   16d12:	int3   
   16d13:	int3   
   16d14:	mov    edi,edi
   16d16:	push   ebp
   16d17:	mov    ebp,esp
   16d19:	push   ecx
   16d1a:	push   ecx
   16d1b:	push   DWORD PTR [ebp+0xc]
   16d1e:	lea    eax,[ebp-0x8]
   16d21:	push   eax
   16d22:	call   0x16950
   16d27:	mov    eax,DWORD PTR [ebp+0x8]
   16d2a:	mov    ecx,DWORD PTR [ebp-0x8]
   16d2d:	mov    DWORD PTR [eax],ecx
   16d2f:	mov    cl,BYTE PTR [ebp-0x4]
   16d32:	mov    BYTE PTR [eax+0x4],cl
   16d35:	leave  
   16d36:	ret    0x8
   16d39:	int3   
   16d3a:	int3   
   16d3b:	int3   
   16d3c:	int3   
   16d3d:	int3   
   16d3e:	mov    edi,edi
   16d40:	push   ebp
   16d41:	mov    ebp,esp
   16d43:	push   ecx
   16d44:	push   ecx
   16d45:	push   DWORD PTR [ebp+0xc]
   16d48:	lea    eax,[ebp-0x8]
   16d4b:	push   eax
   16d4c:	call   0x169ea
   16d51:	mov    eax,DWORD PTR [ebp+0x8]
   16d54:	mov    ecx,DWORD PTR [ebp-0x8]
   16d57:	mov    DWORD PTR [eax],ecx
   16d59:	mov    cl,BYTE PTR [ebp-0x4]
   16d5c:	mov    BYTE PTR [eax+0x4],cl
   16d5f:	leave  
   16d60:	ret    0x8
   16d63:	int3   
   16d64:	int3   
   16d65:	int3   
   16d66:	int3   
   16d67:	int3   
   16d68:	mov    edi,edi
   16d6a:	push   ebp
   16d6b:	mov    ebp,esp
   16d6d:	push   ecx
   16d6e:	push   ecx
   16d6f:	push   esi
   16d70:	push   DWORD PTR [ebp+0x8]
   16d73:	lea    eax,[ebp-0x8]
   16d76:	push   eax
   16d77:	mov    esi,ecx
   16d79:	call   0x14090
   16d7e:	and    DWORD PTR [ebp+0x8],0x0
   16d82:	lea    eax,[ebp+0x8]
   16d85:	push   eax
   16d86:	push   DWORD PTR [ebp-0x4]
   16d89:	push   DWORD PTR [ebp-0x8]
   16d8c:	call   0x13964
   16d91:	add    esp,0xc
   16d94:	push   DWORD PTR [ebp-0x4]
   16d97:	lea    eax,[ebp-0x4]
   16d9a:	push   DWORD PTR [ebp-0x8]
   16d9d:	mov    ecx,esi
   16d9f:	push   eax
   16da0:	call   0x16a82
   16da5:	mov    eax,DWORD PTR [ebp+0x8]
   16da8:	pop    esi
   16da9:	leave  
   16daa:	ret    0x4
   16dad:	int3   
   16dae:	int3   
   16daf:	int3   
   16db0:	int3   
   16db1:	int3   
   16db2:	mov    edi,edi
   16db4:	push   ebp
   16db5:	mov    ebp,esp
   16db7:	push   ecx
   16db8:	mov    eax,DWORD PTR [ecx+0x4]
   16dbb:	mov    edx,DWORD PTR [eax]
   16dbd:	push   eax
   16dbe:	push   edx
   16dbf:	lea    eax,[ebp-0x4]
   16dc2:	push   eax
   16dc3:	call   0x16a82
   16dc8:	leave  
   16dc9:	ret    
   16dca:	int3   
   16dcb:	int3   
   16dcc:	int3   
   16dcd:	int3   
   16dce:	int3   
   16dcf:	int3   
   16dd0:	mov    edi,edi
   16dd2:	push   ebp
   16dd3:	mov    ebp,esp
   16dd5:	push   ecx
   16dd6:	push   ecx
   16dd7:	push   DWORD PTR [ebp+0xc]
   16dda:	lea    eax,[ebp-0x8]
   16ddd:	push   eax
   16dde:	call   0x16b00
   16de3:	mov    eax,DWORD PTR [ebp+0x8]
   16de6:	mov    ecx,DWORD PTR [ebp-0x8]
   16de9:	mov    DWORD PTR [eax],ecx
   16deb:	mov    cl,BYTE PTR [ebp-0x4]
   16dee:	mov    BYTE PTR [eax+0x4],cl
   16df1:	leave  
   16df2:	ret    0x8
   16df5:	int3   
   16df6:	int3   
   16df7:	int3   
   16df8:	int3   
   16df9:	int3   
   16dfa:	mov    edi,edi
   16dfc:	push   ebp
   16dfd:	mov    ebp,esp
   16dff:	push   esi
   16e00:	push   edi
   16e01:	xor    edi,edi
   16e03:	push   edi
   16e04:	push   edi
   16e05:	push   edi
   16e06:	mov    esi,ecx
   16e08:	mov    eax,DWORD PTR [esi+0x10]
   16e0b:	push   edi
   16e0c:	push   eax
   16e0d:	call   0x119ea
   16e12:	call   eax
   16e14:	test   eax,eax
   16e16:	jl     0x16e34
   16e18:	lea    eax,[ebp+0x8]
   16e1b:	push   eax
   16e1c:	mov    ecx,esi
   16e1e:	call   0x16c06
   16e23:	mov    ecx,DWORD PTR [ebp+0xc]
   16e26:	mov    DWORD PTR [eax],ecx
   16e28:	mov    esi,DWORD PTR [esi+0x10]
   16e2b:	push   edi
   16e2c:	push   esi
   16e2d:	call   0x11a14
   16e32:	call   eax
   16e34:	pop    edi
   16e35:	pop    esi
   16e36:	pop    ebp
   16e37:	ret    0x8
   16e3a:	int3   
   16e3b:	int3   
   16e3c:	int3   
   16e3d:	int3   
   16e3e:	int3   
   16e3f:	int3   
   16e40:	mov    edi,edi
   16e42:	push   esi
   16e43:	mov    esi,ecx
   16e45:	mov    BYTE PTR [esi+0x8],0x0
   16e49:	call   0x147be
   16e4e:	mov    eax,esi
   16e50:	pop    esi
   16e51:	ret    0x8
   16e54:	int3   
   16e55:	int3   
   16e56:	int3   
   16e57:	int3   
   16e58:	int3   
   16e59:	int3   
   16e5a:	mov    edi,edi
   16e5c:	push   ebp
   16e5d:	mov    ebp,esp
   16e5f:	sub    esp,0x90
   16e65:	push   esi
   16e66:	mov    esi,ecx
   16e68:	lea    ecx,[ebp-0x48]
   16e6b:	call   0x13b0e
   16e70:	push   eax
   16e71:	push   DWORD PTR [ebp+0x8]
   16e74:	lea    ecx,[ebp-0x90]
   16e7a:	call   0x13c88
   16e7f:	push   eax
   16e80:	lea    eax,[ebp-0x8]
   16e83:	push   eax
   16e84:	mov    ecx,esi
   16e86:	call   0x16ccc
   16e8b:	mov    esi,DWORD PTR [eax]
   16e8d:	lea    ecx,[ebp-0x90]
   16e93:	call   0x136a4
   16e98:	lea    ecx,[ebp-0x48]
   16e9b:	call   0x13534
   16ea0:	lea    eax,[esi+0x18]
   16ea3:	pop    esi
   16ea4:	leave  
   16ea5:	ret    0x4
   16ea8:	int3   
   16ea9:	int3   
   16eaa:	int3   
   16eab:	int3   
   16eac:	int3   
   16ead:	int3   
   16eae:	mov    edi,edi
   16eb0:	push   ebp
   16eb1:	mov    ebp,esp
   16eb3:	sub    esp,0x20
   16eb6:	push   esi
   16eb7:	push   0xffffffff
   16eb9:	mov    esi,ecx
   16ebb:	push   0x1e5e8
   16ec0:	lea    ecx,[ebp-0x8]
   16ec3:	call   0x12b6e
   16ec8:	lea    eax,[ebp-0x8]
   16ecb:	push   eax
   16ecc:	push   DWORD PTR [ebp+0x8]
   16ecf:	lea    ecx,[ebp-0x20]
   16ed2:	call   0x137bc
   16ed7:	push   eax
   16ed8:	lea    eax,[ebp-0x10]
   16edb:	push   eax
   16edc:	mov    ecx,esi
   16ede:	call   0x16d14
   16ee3:	mov    esi,DWORD PTR [eax]
   16ee5:	lea    ecx,[ebp-0x20]
   16ee8:	call   0x12c28
   16eed:	push   DWORD PTR [ebp-0x8]
   16ef0:	call   0x11d22
   16ef5:	pop    ecx
   16ef6:	lea    eax,[esi+0x14]
   16ef9:	pop    esi
   16efa:	leave  
   16efb:	ret    0x4
   16efe:	int3   
   16eff:	int3   
   16f00:	int3   
   16f01:	int3   
   16f02:	int3   
   16f03:	int3   
   16f04:	mov    edi,edi
   16f06:	push   esi
   16f07:	mov    esi,ecx
   16f09:	mov    BYTE PTR [esi+0x8],0x0
   16f0d:	call   0x14882
   16f12:	mov    eax,esi
   16f14:	pop    esi
   16f15:	ret    0x8
   16f18:	int3   
   16f19:	int3   
   16f1a:	int3   
   16f1b:	int3   
   16f1c:	int3   
   16f1d:	int3   
   16f1e:	mov    edi,edi
   16f20:	push   ebp
   16f21:	mov    ebp,esp
   16f23:	sub    esp,0x14
   16f26:	and    DWORD PTR [ebp-0x4],0x0
   16f2a:	push   esi
   16f2b:	lea    eax,[ebp-0x4]
   16f2e:	push   eax
   16f2f:	push   DWORD PTR [ebp+0x8]
   16f32:	mov    esi,ecx
   16f34:	lea    ecx,[ebp-0xc]
   16f37:	call   0x137e4
   16f3c:	push   eax
   16f3d:	lea    eax,[ebp-0x14]
   16f40:	push   eax
   16f41:	mov    ecx,esi
   16f43:	call   0x16d3e
   16f48:	mov    ecx,DWORD PTR [ebp-0x8]
   16f4b:	mov    esi,DWORD PTR [eax]
   16f4d:	test   ecx,ecx
   16f4f:	je     0x16f56
   16f51:	call   0x11d64
   16f56:	lea    eax,[esi+0x10]
   16f59:	pop    esi
   16f5a:	leave  
   16f5b:	ret    0x4
   16f5e:	int3   
   16f5f:	int3   
   16f60:	int3   
   16f61:	int3   
   16f62:	int3   
   16f63:	int3   
   16f64:	mov    edi,edi
   16f66:	push   ebp
   16f67:	mov    ebp,esp
   16f69:	sub    esp,0x20
   16f6c:	push   esi
   16f6d:	mov    esi,ecx
   16f6f:	mov    eax,DWORD PTR [esi+0x24]
   16f72:	mov    ecx,DWORD PTR [esi+0x28]
   16f75:	add    ecx,eax
   16f77:	cmp    DWORD PTR [esi+0x10],ecx
   16f7a:	jbe    0x1700d
   16f80:	mov    ecx,DWORD PTR [esi+0x18]
   16f83:	mov    ecx,DWORD PTR [ecx]
   16f85:	push   edi
   16f86:	mov    DWORD PTR [ebp-0x4],ecx
   16f89:	test   eax,eax
   16f8b:	je     0x16f9a
   16f8d:	mov    edi,eax
   16f8f:	lea    ecx,[ebp-0x4]
   16f92:	call   0x12ed8
   16f97:	dec    edi
   16f98:	jne    0x16f8f
   16f9a:	mov    eax,DWORD PTR [ebp-0x4]
   16f9d:	mov    edi,DWORD PTR [eax+0xc]
   16fa0:	lea    ecx,[ebp-0x20]
   16fa3:	mov    BYTE PTR [ebp-0x18],0x0
   16fa7:	call   0x148e4
   16fac:	mov    eax,DWORD PTR [esi+0x8]
   16faf:	mov    ecx,DWORD PTR [eax]
   16fb1:	mov    DWORD PTR [ebp-0x4],ecx
   16fb4:	cmp    ecx,eax
   16fb6:	je     0x16ff7
   16fb8:	lea    edx,[ecx+0x58]
   16fbb:	mov    eax,DWORD PTR [edx]
   16fbd:	cmp    eax,edi
   16fbf:	jae    0x16fd6
   16fc1:	push   ecx
   16fc2:	lea    eax,[ebp-0x8]
   16fc5:	push   eax
   16fc6:	lea    ecx,[esi+0x4]
   16fc9:	call   0x15472
   16fce:	mov    ecx,DWORD PTR [ebp-0x8]
   16fd1:	mov    DWORD PTR [ebp-0x4],ecx
   16fd4:	jmp    0x16ff2
   16fd6:	sub    eax,edi
   16fd8:	mov    DWORD PTR [edx],eax
   16fda:	push   edx
   16fdb:	lea    eax,[ebp-0x10]
   16fde:	push   eax
   16fdf:	lea    ecx,[ebp-0x20]
   16fe2:	call   0x16682
   16fe7:	lea    ecx,[ebp-0x4]
   16fea:	call   0x12e62
   16fef:	mov    ecx,DWORD PTR [ebp-0x4]
   16ff2:	cmp    ecx,DWORD PTR [esi+0x8]
   16ff5:	jne    0x16fb8
   16ff7:	lea    eax,[ebp-0x20]
   16ffa:	push   eax
   16ffb:	add    esi,0x14
   16ffe:	push   esi
   16fff:	call   0x16b9a
   17004:	lea    ecx,[ebp-0x20]
   17007:	call   0x1523c
   1700c:	pop    edi
   1700d:	pop    esi
   1700e:	leave  
   1700f:	ret    
   17010:	int3   
   17011:	int3   
   17012:	int3   
   17013:	int3   
   17014:	int3   
   17015:	int3   
   17016:	mov    edi,edi
   17018:	push   ebp
   17019:	mov    ebp,esp
   1701b:	sub    esp,0x20
   1701e:	push   esi
   1701f:	push   0xffffffff
   17021:	mov    esi,ecx
   17023:	push   0x1e54e
   17028:	lea    ecx,[ebp-0x8]
   1702b:	call   0x12c46
   17030:	lea    eax,[ebp-0x8]
   17033:	push   eax
   17034:	push   DWORD PTR [ebp+0x8]
   17037:	lea    ecx,[ebp-0x20]
   1703a:	call   0x138b8
   1703f:	push   eax
   17040:	lea    eax,[ebp-0x10]
   17043:	push   eax
   17044:	mov    ecx,esi
   17046:	call   0x16dd0
   1704b:	mov    esi,DWORD PTR [eax]
   1704d:	lea    ecx,[ebp-0x20]
   17050:	call   0x12c28
   17055:	push   DWORD PTR [ebp-0x8]
   17058:	call   0x11d22
   1705d:	pop    ecx
   1705e:	lea    eax,[esi+0x14]
   17061:	pop    esi
   17062:	leave  
   17063:	ret    0x4
   17066:	int3   
   17067:	int3   
   17068:	int3   
   17069:	int3   
   1706a:	int3   
   1706b:	int3   
   1706c:	push   0x24
   1706e:	push   0x777c8
   17073:	call   0x1e1dc
   17078:	xor    ebx,ebx
   1707a:	push   ebx
   1707b:	push   ebx
   1707c:	push   ebx
   1707d:	push   ebx
   1707e:	push   0x77b58
   17083:	call   0x119ea
   17088:	call   eax
   1708a:	cmp    eax,ebx
   1708c:	jge    0x1709d
   1708e:	mov    eax,DWORD PTR [ebp+0x8]
   17091:	mov    DWORD PTR [eax+0x8],0x4
   17098:	jmp    0x17156
   1709d:	mov    DWORD PTR [ebp-0x4],ebx
   170a0:	push   0xffffffff
   170a2:	mov    esi,DWORD PTR [ebp+0x8]
   170a5:	lea    eax,[esi+0xc]
   170a8:	push   eax
   170a9:	lea    ecx,[ebp-0x24]
   170ac:	call   0x13662
   170b1:	push   0xffffffff
   170b3:	mov    eax,DWORD PTR [ebp-0x20]
   170b6:	lea    eax,[eax+esi*1+0xd]
   170ba:	push   eax
   170bb:	lea    ecx,[ebp-0x2c]
   170be:	call   0x13662
   170c3:	push   0xffffffff
   170c5:	push   0x1e5e8
   170ca:	lea    ecx,[ebp-0x34]
   170cd:	call   0x12b6e
   170d2:	lea    eax,[ebp-0x34]
   170d5:	push   eax
   170d6:	lea    eax,[ebp-0x2c]
   170d9:	push   eax
   170da:	call   0x19efc
   170df:	mov    BYTE PTR [ebp-0x19],al
   170e2:	push   DWORD PTR [ebp-0x34]
   170e5:	call   0x11d22
   170ea:	pop    ecx
   170eb:	lea    eax,[ebp-0x24]
   170ee:	mov    ecx,DWORD PTR ds:0x77b28
   170f4:	push   eax
   170f5:	cmp    BYTE PTR [ebp-0x19],bl
   170f8:	je     0x17101
   170fa:	call   0x166d6
   170ff:	jmp    0x17111
   17101:	call   0x16eae
   17106:	lea    ecx,[ebp-0x2c]
   17109:	push   ecx
   1710a:	mov    ecx,eax
   1710c:	call   0x12a28
   17111:	mov    DWORD PTR [esi+0x8],ebx
   17114:	push   DWORD PTR [ebp-0x2c]
   17117:	call   0x11d22
   1711c:	push   DWORD PTR [ebp-0x24]
   1711f:	call   0x11d22
   17124:	pop    ecx
   17125:	pop    ecx
   17126:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1712d:	jmp    0x17149
   1712f:	xor    eax,eax
   17131:	inc    eax
   17132:	ret    
   17133:	mov    esp,DWORD PTR [ebp-0x18]
   17136:	mov    eax,DWORD PTR [ebp+0x8]
   17139:	mov    DWORD PTR [eax+0x8],0x4
   17140:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17147:	xor    ebx,ebx
   17149:	push   ebx
   1714a:	push   0x77b58
   1714f:	call   0x11a14
   17154:	call   eax
   17156:	call   0x1e221
   1715b:	ret    0x4
   1715e:	int3   
   1715f:	int3   
   17160:	int3   
   17161:	int3   
   17162:	int3   
   17163:	int3   
   17164:	push   0xc
   17166:	push   0x777e8
   1716b:	call   0x1e1dc
   17170:	xor    edi,edi
   17172:	push   edi
   17173:	push   edi
   17174:	push   edi
   17175:	push   edi
   17176:	push   0x77b58
   1717b:	call   0x119ea
   17180:	call   eax
   17182:	cmp    eax,edi
   17184:	jge    0x17192
   17186:	mov    eax,DWORD PTR [ebp+0x8]
   17189:	mov    DWORD PTR [eax+0x8],0x4
   17190:	jmp    0x17209
   17192:	mov    DWORD PTR [ebp-0x4],edi
   17195:	mov    esi,DWORD PTR [ebp+0x8]
   17198:	lea    eax,[esi+0x4]
   1719b:	mov    ecx,DWORD PTR ds:0x77bb4
   171a1:	push   eax
   171a2:	cmp    DWORD PTR [esi],edi
   171a4:	jbe    0x171d1
   171a6:	call   0x16f1e
   171ab:	mov    ebx,eax
   171ad:	push   DWORD PTR [esi]
   171af:	lea    eax,[esi+0xc]
   171b2:	push   eax
   171b3:	lea    ecx,[ebp-0x1c]
   171b6:	call   0x13bca
   171bb:	push   eax
   171bc:	mov    ecx,ebx
   171be:	call   0x1356a
   171c3:	mov    ecx,DWORD PTR [ebp-0x1c]
   171c6:	cmp    ecx,edi
   171c8:	je     0x171d6
   171ca:	call   0x11d64
   171cf:	jmp    0x171d6
   171d1:	call   0x16d68
   171d6:	mov    DWORD PTR [esi+0x8],edi
   171d9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   171e0:	jmp    0x171fc
   171e2:	xor    eax,eax
   171e4:	inc    eax
   171e5:	ret    
   171e6:	mov    esp,DWORD PTR [ebp-0x18]
   171e9:	mov    eax,DWORD PTR [ebp+0x8]
   171ec:	mov    DWORD PTR [eax+0x8],0x4
   171f3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   171fa:	xor    edi,edi
   171fc:	push   edi
   171fd:	push   0x77b58
   17202:	call   0x11a14
   17207:	call   eax
   17209:	call   0x1e221
   1720e:	ret    0x4
   17211:	int3   
   17212:	int3   
   17213:	int3   
   17214:	int3   
   17215:	int3   
   17216:	mov    edi,edi
   17218:	push   ebp
   17219:	mov    ebp,esp
   1721b:	sub    esp,0x10
   1721e:	and    DWORD PTR [ebp-0xc],0x0
   17222:	xor    ecx,ecx
   17224:	mov    DWORD PTR [ebp-0x10],0x1
   1722b:	xor    eax,eax
   1722d:	mov    dl,BYTE PTR [eax+0x73b40]
   17233:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17237:	inc    ecx
   17238:	inc    eax
   17239:	and    eax,0xf
   1723c:	cmp    ecx,0x8
   1723f:	jne    0x1722d
   17241:	push   ecx
   17242:	lea    eax,[ebp-0x10]
   17245:	push   eax
   17246:	lea    ecx,[ebp-0x8]
   17249:	mov    DWORD PTR [ebp-0x4],0x2
   17250:	call   0x13bca
   17255:	mov    ecx,DWORD PTR ds:0x77bb4
   1725b:	push   eax
   1725c:	lea    eax,[ebp-0x4]
   1725f:	push   eax
   17260:	call   0x16f1e
   17265:	mov    ecx,eax
   17267:	call   0x1356a
   1726c:	mov    ecx,DWORD PTR [ebp-0x8]
   1726f:	test   ecx,ecx
   17271:	je     0x17278
   17273:	call   0x11d64
   17278:	leave  
   17279:	ret    
   1727a:	int3   
   1727b:	int3   
   1727c:	int3   
   1727d:	int3   
   1727e:	int3   
   1727f:	int3   
   17280:	push   0x868
   17285:	push   0x77808
   1728a:	call   0x1e4e0
   1728f:	xor    ebx,ebx
   17291:	mov    DWORD PTR [ebp-0x838],ebx
   17297:	mov    DWORD PTR [ebp-0x4],ebx
   1729a:	mov    DWORD PTR [ebp-0x878],ebx
   172a0:	xor    eax,eax
   172a2:	lea    edi,[ebp-0x874]
   172a8:	stos   DWORD PTR es:[edi],eax
   172a9:	stos   DWORD PTR es:[edi],eax
   172aa:	stos   DWORD PTR es:[edi],eax
   172ab:	stos   DWORD PTR es:[edi],eax
   172ac:	stos   DWORD PTR es:[edi],eax
   172ad:	mov    BYTE PTR [ebp-0x840],bl
   172b3:	mov    DWORD PTR [ebp-0x83c],ebx
   172b9:	xor    eax,eax
   172bb:	mov    WORD PTR [ebp-0x81c],ax
   172c2:	push   0x7fe
   172c7:	push   ebx
   172c8:	lea    eax,[ebp-0x81a]
   172ce:	push   eax
   172cf:	call   0x1e19e
   172d4:	add    esp,0xc
   172d7:	mov    eax,0x77cb8
   172dc:	mov    edx,eax
   172de:	mov    cx,WORD PTR [eax]
   172e1:	inc    eax
   172e2:	inc    eax
   172e3:	cmp    cx,bx
   172e6:	jne    0x172de
   172e8:	sub    eax,edx
   172ea:	lea    edi,[ebp-0x81c]
   172f0:	dec    edi
   172f1:	dec    edi
   172f2:	mov    cx,WORD PTR [edi+0x2]
   172f6:	inc    edi
   172f7:	inc    edi
   172f8:	cmp    cx,bx
   172fb:	jne    0x172f2
   172fd:	mov    ecx,eax
   172ff:	mov    esi,edx
   17301:	shr    ecx,0x2
   17304:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17306:	mov    ecx,eax
   17308:	and    ecx,0x3
   1730b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1730d:	mov    eax,0x77a48
   17312:	mov    edx,eax
   17314:	mov    cx,WORD PTR [eax]
   17317:	inc    eax
   17318:	inc    eax
   17319:	cmp    cx,bx
   1731c:	jne    0x17314
   1731e:	sub    eax,edx
   17320:	lea    edi,[ebp-0x81c]
   17326:	dec    edi
   17327:	dec    edi
   17328:	mov    cx,WORD PTR [edi+0x2]
   1732c:	inc    edi
   1732d:	inc    edi
   1732e:	cmp    cx,bx
   17331:	jne    0x17328
   17333:	mov    ecx,eax
   17335:	mov    esi,edx
   17337:	shr    ecx,0x2
   1733a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1733c:	mov    ecx,eax
   1733e:	and    ecx,0x3
   17341:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17343:	lea    eax,[ebp-0x81c]
   17349:	mov    DWORD PTR [ebp-0x85c],eax
   1734f:	lea    ecx,[eax+0x2]
   17352:	mov    dx,WORD PTR [eax]
   17355:	inc    eax
   17356:	inc    eax
   17357:	cmp    dx,bx
   1735a:	jne    0x17352
   1735c:	sub    eax,ecx
   1735e:	sar    eax,1
   17360:	add    eax,eax
   17362:	mov    WORD PTR [ebp-0x85e],ax
   17369:	mov    WORD PTR [ebp-0x860],ax
   17370:	push   0x18
   17372:	pop    esi
   17373:	mov    DWORD PTR [ebp-0x878],esi
   17379:	mov    DWORD PTR [ebp-0x874],ebx
   1737f:	mov    DWORD PTR [ebp-0x86c],0x40
   17389:	lea    eax,[ebp-0x860]
   1738f:	mov    DWORD PTR [ebp-0x870],eax
   17395:	mov    DWORD PTR [ebp-0x868],ebx
   1739b:	mov    DWORD PTR [ebp-0x864],ebx
   173a1:	lea    eax,[ebp-0x878]
   173a7:	push   eax
   173a8:	push   0x1
   173aa:	lea    eax,[ebp-0x838]
   173b0:	push   eax
   173b1:	call   0x113ae
   173b6:	call   eax
   173b8:	cmp    eax,ebx
   173ba:	je     0x173c6
   173bc:	call   0x17216
   173c1:	jmp    0x174b8
   173c6:	mov    eax,0x1e54e
   173cb:	mov    DWORD PTR [ebp-0x854],eax
   173d1:	lea    edx,[eax+0x2]
   173d4:	mov    cx,WORD PTR [eax]
   173d7:	inc    eax
   173d8:	inc    eax
   173d9:	cmp    cx,bx
   173dc:	jne    0x173d4
   173de:	sub    eax,edx
   173e0:	sar    eax,1
   173e2:	mov    WORD PTR [ebp-0x856],ax
   173e9:	mov    WORD PTR [ebp-0x858],ax
   173f0:	mov    DWORD PTR [ebp-0x844],ebx
   173f6:	lea    eax,[ebp-0x844]
   173fc:	push   eax
   173fd:	push   esi
   173fe:	lea    eax,[ebp-0x834]
   17404:	push   eax
   17405:	push   0x1
   17407:	lea    eax,[ebp-0x858]
   1740d:	push   eax
   1740e:	push   DWORD PTR [ebp-0x838]
   17414:	call   0x117c8
   17419:	call   eax
   1741b:	cmp    eax,0x80000005
   17420:	je     0x17429
   17422:	cmp    eax,0xc0000023
   17427:	jne    0x1749a
   17429:	push   DWORD PTR [ebp-0x844]
   1742f:	call   0x11cec
   17434:	pop    ecx
   17435:	xor    ecx,ecx
   17437:	cmp    eax,ebx
   17439:	setne  cl
   1743c:	mov    BYTE PTR [ebp-0x850],cl
   17442:	mov    DWORD PTR [ebp-0x84c],eax
   17448:	lea    eax,[ebp-0x850]
   1744e:	push   eax
   1744f:	lea    ecx,[ebp-0x840]
   17455:	call   0x12a72
   1745a:	cmp    BYTE PTR [ebp-0x850],bl
   17460:	je     0x1746e
   17462:	push   DWORD PTR [ebp-0x84c]
   17468:	call   0x11d22
   1746d:	pop    ecx
   1746e:	lea    eax,[ebp-0x844]
   17474:	push   eax
   17475:	push   DWORD PTR [ebp-0x844]
   1747b:	mov    edi,DWORD PTR [ebp-0x83c]
   17481:	push   edi
   17482:	push   0x1
   17484:	lea    eax,[ebp-0x858]
   1748a:	push   eax
   1748b:	push   DWORD PTR [ebp-0x838]
   17491:	call   0x117c8
   17496:	call   eax
   17498:	jmp    0x174a0
   1749a:	mov    edi,DWORD PTR [ebp-0x83c]
   174a0:	cmp    eax,ebx
   174a2:	je     0x174ca
   174a4:	call   0x17216
   174a9:	cmp    BYTE PTR [ebp-0x840],bl
   174af:	je     0x174b8
   174b1:	push   edi
   174b2:	call   0x11d22
   174b7:	pop    ecx
   174b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   174bf:	call   0x1753c
   174c4:	call   0x1e528
   174c9:	ret    
   174ca:	cmp    DWORD PTR [edi+0x4],0x3
   174ce:	jne    0x174a4
   174d0:	mov    esi,DWORD PTR [edi+0xc]
   174d3:	cmp    esi,ebx
   174d5:	je     0x174a9
   174d7:	cmp    esi,0xf4240
   174dd:	ja     0x174a9
   174df:	mov    DWORD PTR [ebp-0x848],0x2
   174e9:	lea    eax,[ebp-0x848]
   174ef:	push   eax
   174f0:	mov    ecx,DWORD PTR ds:0x77bb4
   174f6:	call   0x16f1e
   174fb:	mov    edi,eax
   174fd:	push   esi
   174fe:	mov    esi,DWORD PTR [ebp-0x83c]
   17504:	mov    eax,DWORD PTR [esi+0x8]
   17507:	add    eax,esi
   17509:	push   eax
   1750a:	lea    ecx,[ebp-0x848]
   17510:	call   0x13bca
   17515:	push   eax
   17516:	mov    ecx,edi
   17518:	call   0x1356a
   1751d:	mov    ecx,DWORD PTR [ebp-0x848]
   17523:	cmp    ecx,ebx
   17525:	je     0x1752c
   17527:	call   0x11d64
   1752c:	cmp    BYTE PTR [ebp-0x840],bl
   17532:	je     0x174b8
   17534:	push   esi
   17535:	jmp    0x174b2
   1753a:	xor    ebx,ebx
   1753c:	cmp    DWORD PTR [ebp-0x838],ebx
   17542:	je     0x17551
   17544:	push   DWORD PTR [ebp-0x838]
   1754a:	call   0x11552
   1754f:	call   eax
   17551:	ret    
   17552:	int3   
   17553:	int3   
   17554:	int3   
   17555:	int3   
   17556:	int3   
   17557:	int3   
   17558:	push   0x844
   1755d:	push   0x77828
   17562:	call   0x1e4e0
   17567:	xor    esi,esi
   17569:	mov    DWORD PTR [ebp-0x820],esi
   1756f:	mov    DWORD PTR [ebp-0x4],esi
   17572:	mov    DWORD PTR [ebp-0x84c],esi
   17578:	xor    eax,eax
   1757a:	lea    edi,[ebp-0x848]
   17580:	stos   DWORD PTR es:[edi],eax
   17581:	stos   DWORD PTR es:[edi],eax
   17582:	stos   DWORD PTR es:[edi],eax
   17583:	stos   DWORD PTR es:[edi],eax
   17584:	stos   DWORD PTR es:[edi],eax
   17585:	mov    BYTE PTR [ebp-0x854],0x0
   1758c:	mov    DWORD PTR [ebp-0x850],esi
   17592:	xor    eax,eax
   17594:	mov    WORD PTR [ebp-0x81c],ax
   1759b:	push   0x7fe
   175a0:	push   esi
   175a1:	lea    eax,[ebp-0x81a]
   175a7:	push   eax
   175a8:	call   0x1e19e
   175ad:	add    esp,0xc
   175b0:	mov    eax,0x77cb8
   175b5:	mov    edx,eax
   175b7:	push   0x2
   175b9:	pop    ebx
   175ba:	mov    cx,WORD PTR [eax]
   175bd:	add    eax,ebx
   175bf:	cmp    cx,si
   175c2:	jne    0x175ba
   175c4:	sub    eax,edx
   175c6:	lea    edi,[ebp-0x81c]
   175cc:	dec    edi
   175cd:	dec    edi
   175ce:	mov    cx,WORD PTR [edi+0x2]
   175d2:	add    edi,ebx
   175d4:	cmp    cx,si
   175d7:	jne    0x175ce
   175d9:	mov    ecx,eax
   175db:	mov    esi,edx
   175dd:	shr    ecx,0x2
   175e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   175e2:	mov    ecx,eax
   175e4:	and    ecx,0x3
   175e7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   175e9:	mov    eax,0x77a48
   175ee:	mov    edx,eax
   175f0:	mov    cx,WORD PTR [eax]
   175f3:	add    eax,ebx
   175f5:	test   cx,cx
   175f8:	jne    0x175f0
   175fa:	sub    eax,edx
   175fc:	lea    edi,[ebp-0x81c]
   17602:	dec    edi
   17603:	dec    edi
   17604:	mov    cx,WORD PTR [edi+0x2]
   17608:	add    edi,ebx
   1760a:	test   cx,cx
   1760d:	jne    0x17604
   1760f:	mov    ecx,eax
   17611:	mov    esi,edx
   17613:	shr    ecx,0x2
   17616:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17618:	mov    ecx,eax
   1761a:	and    ecx,0x3
   1761d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1761f:	lea    eax,[ebp-0x81c]
   17625:	mov    DWORD PTR [ebp-0x830],eax
   1762b:	lea    ecx,[eax+0x2]
   1762e:	mov    dx,WORD PTR [eax]
   17631:	add    eax,ebx
   17633:	test   dx,dx
   17636:	jne    0x1762e
   17638:	sub    eax,ecx
   1763a:	sar    eax,1
   1763c:	add    eax,eax
   1763e:	mov    WORD PTR [ebp-0x832],ax
   17645:	mov    WORD PTR [ebp-0x834],ax
   1764c:	mov    DWORD PTR [ebp-0x84c],0x18
   17656:	xor    esi,esi
   17658:	mov    DWORD PTR [ebp-0x848],esi
   1765e:	mov    DWORD PTR [ebp-0x840],0x40
   17668:	lea    eax,[ebp-0x834]
   1766e:	mov    DWORD PTR [ebp-0x844],eax
   17674:	mov    DWORD PTR [ebp-0x83c],esi
   1767a:	mov    DWORD PTR [ebp-0x838],esi
   17680:	lea    eax,[ebp-0x84c]
   17686:	push   eax
   17687:	push   0x3
   17689:	lea    eax,[ebp-0x820]
   1768f:	push   eax
   17690:	call   0x113ae
   17695:	call   eax
   17697:	cmp    eax,esi
   17699:	je     0x176b4
   1769b:	push   0xfffffffe
   1769d:	lea    eax,[ebp-0x10]
   176a0:	push   eax
   176a1:	push   0x77b1c
   176a6:	call   0x1e39c
   176ab:	add    esp,0xc
   176ae:	call   0x1e528
   176b3:	ret    
   176b4:	mov    eax,0x1e54e
   176b9:	mov    DWORD PTR [ebp-0x824],eax
   176bf:	lea    edx,[eax+0x2]
   176c2:	mov    cx,WORD PTR [eax]
   176c5:	add    eax,ebx
   176c7:	cmp    cx,si
   176ca:	jne    0x176c2
   176cc:	sub    eax,edx
   176ce:	sar    eax,1
   176d0:	mov    WORD PTR [ebp-0x826],ax
   176d7:	mov    WORD PTR [ebp-0x828],ax
   176de:	mov    DWORD PTR [ebp-0x82c],ebx
   176e4:	lea    eax,[ebp-0x82c]
   176ea:	push   eax
   176eb:	mov    ecx,DWORD PTR ds:0x77bb4
   176f1:	call   0x16f1e
   176f6:	mov    eax,DWORD PTR [eax]
   176f8:	cmp    eax,esi
   176fa:	jne    0x17700
   176fc:	xor    ecx,ecx
   176fe:	jmp    0x17703
   17700:	mov    ecx,DWORD PTR [eax+0x8]
   17703:	cmp    eax,esi
   17705:	jne    0x1770b
   17707:	xor    eax,eax
   17709:	jmp    0x1770d
   1770b:	mov    eax,DWORD PTR [eax]
   1770d:	push   ecx
   1770e:	push   eax
   1770f:	push   0x3
   17711:	push   esi
   17712:	lea    eax,[ebp-0x828]
   17718:	push   eax
   17719:	push   DWORD PTR [ebp-0x820]
   1771f:	call   0x11402
   17724:	call   eax
   17726:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1772d:	call   0x17739
   17732:	jmp    0x176ae
   17737:	xor    esi,esi
   17739:	cmp    DWORD PTR [ebp-0x820],esi
   1773f:	je     0x1774e
   17741:	push   DWORD PTR [ebp-0x820]
   17747:	call   0x11552
   1774c:	call   eax
   1774e:	ret    
   1774f:	int3   
   17750:	int3   
   17751:	int3   
   17752:	int3   
   17753:	int3   
   17754:	mov    edi,edi
   17756:	push   ebp
   17757:	mov    ebp,esp
   17759:	push   esi
   1775a:	mov    esi,ecx
   1775c:	lea    ecx,[esi+0x4]
   1775f:	mov    DWORD PTR [esi],0x73b50
   17765:	mov    BYTE PTR [ecx+0x8],0x0
   17769:	call   0x14a96
   1776e:	lea    ecx,[esi+0x14]
   17771:	mov    BYTE PTR [ecx+0x8],0x0
   17775:	call   0x148e4
   1777a:	mov    eax,DWORD PTR [ebp+0x8]
   1777d:	mov    DWORD PTR [esi+0x24],eax
   17780:	mov    eax,DWORD PTR [ebp+0xc]
   17783:	mov    DWORD PTR [esi+0x28],eax
   17786:	mov    eax,esi
   17788:	pop    esi
   17789:	pop    ebp
   1778a:	ret    0x8
   1778d:	int3   
   1778e:	int3   
   1778f:	int3   
   17790:	int3   
   17791:	int3   
   17792:	mov    edi,edi
   17794:	push   esi
   17795:	mov    esi,ecx
   17797:	lea    ecx,[esi+0x14]
   1779a:	mov    DWORD PTR [esi],0x73b50
   177a0:	call   0x1523c
   177a5:	lea    ecx,[esi+0x4]
   177a8:	pop    esi
   177a9:	jmp    0x16c7a
   177ae:	int3   
   177af:	int3   
   177b0:	int3   
   177b1:	int3   
   177b2:	int3   
   177b3:	int3   
   177b4:	mov    edi,edi
   177b6:	push   ebp
   177b7:	mov    ebp,esp
   177b9:	sub    esp,0xf4
   177bf:	push   ebx
   177c0:	push   esi
   177c1:	push   edi
   177c2:	mov    esi,ecx
   177c4:	call   0x16f64
   177c9:	push   DWORD PTR [ebp+0x8]
   177cc:	lea    eax,[ebp-0x4]
   177cf:	lea    edi,[esi+0x4]
   177d2:	push   eax
   177d3:	mov    ecx,edi
   177d5:	call   0x13d5a
   177da:	mov    ebx,DWORD PTR [ebp-0x4]
   177dd:	cmp    ebx,DWORD PTR [esi+0x8]
   177e0:	je     0x1782b
   177e2:	mov    eax,DWORD PTR [esi+0x18]
   177e5:	lea    ecx,[ebp+0x8]
   177e8:	mov    DWORD PTR [ebp+0x8],eax
   177eb:	call   0x13d3a
   177f0:	mov    edi,DWORD PTR [eax]
   177f2:	lea    eax,[ebx+0x58]
   177f5:	add    esi,0x14
   177f8:	inc    edi
   177f9:	push   eax
   177fa:	mov    ecx,esi
   177fc:	mov    DWORD PTR [ebp+0x8],edi
   177ff:	mov    DWORD PTR [ebp-0x4],eax
   17802:	call   0x14712
   17807:	lea    eax,[ebp+0x8]
   1780a:	push   eax
   1780b:	lea    eax,[ebp-0xc]
   1780e:	push   eax
   1780f:	mov    ecx,esi
   17811:	call   0x16682
   17816:	push   DWORD PTR [ebp+0xc]
   17819:	lea    ecx,[ebx+0x18]
   1781c:	call   0x12b00
   17821:	mov    eax,DWORD PTR [ebp-0x4]
   17824:	mov    DWORD PTR [eax],edi
   17826:	jmp    0x178c0
   1782b:	lea    ecx,[ebp-0x54]
   1782e:	call   0x13b0e
   17833:	xor    eax,eax
   17835:	cmp    DWORD PTR [esi+0x20],eax
   17838:	je     0x1784b
   1783a:	mov    eax,DWORD PTR [esi+0x18]
   1783d:	lea    ecx,[ebp-0x4]
   17840:	mov    DWORD PTR [ebp-0x4],eax
   17843:	call   0x13d3a
   17848:	mov    eax,DWORD PTR [eax]
   1784a:	inc    eax
   1784b:	push   DWORD PTR [ebp+0xc]
   1784e:	lea    ecx,[ebp-0x54]
   17851:	mov    DWORD PTR [ebp-0x4],eax
   17854:	mov    DWORD PTR [ebp-0x14],eax
   17857:	call   0x12b00
   1785c:	lea    eax,[ebp-0x54]
   1785f:	push   eax
   17860:	push   DWORD PTR [ebp+0x8]
   17863:	lea    ecx,[ebp-0xf4]
   17869:	call   0x13ae6
   1786e:	lea    eax,[ebp-0xf4]
   17874:	push   eax
   17875:	lea    ecx,[ebp-0xa4]
   1787b:	call   0x14424
   17880:	lea    eax,[ebp-0xa4]
   17886:	push   eax
   17887:	lea    eax,[ebp-0xc]
   1788a:	push   eax
   1788b:	mov    ecx,edi
   1788d:	call   0x16c50
   17892:	lea    ecx,[ebp-0xa4]
   17898:	call   0x136a4
   1789d:	lea    ecx,[ebp-0xf4]
   178a3:	call   0x136a4
   178a8:	lea    eax,[ebp-0x4]
   178ab:	push   eax
   178ac:	lea    eax,[ebp-0xc]
   178af:	push   eax
   178b0:	lea    ecx,[esi+0x14]
   178b3:	call   0x16682
   178b8:	lea    ecx,[ebp-0x54]
   178bb:	call   0x13534
   178c0:	pop    edi
   178c1:	pop    esi
   178c2:	pop    ebx
   178c3:	leave  
   178c4:	ret    0x8
   178c7:	int3   
   178c8:	int3   
   178c9:	int3   
   178ca:	int3   
   178cb:	int3   
   178cc:	mov    edi,edi
   178ce:	push   ebp
   178cf:	mov    ebp,esp
   178d1:	sub    esp,0x10
   178d4:	call   0x1a8b2
   178d9:	test   al,al
   178db:	jne    0x178e5
   178dd:	mov    eax,DWORD PTR [ebp+0x8]
   178e0:	jmp    0x17979
   178e5:	push   esi
   178e6:	mov    esi,DWORD PTR [ebp+0x8]
   178e9:	push   0xffffffff
   178eb:	push   esi
   178ec:	lea    ecx,[ebp-0x8]
   178ef:	call   0x12c46
   178f4:	mov    ecx,DWORD PTR ds:0x788a0
   178fa:	lea    eax,[ebp-0x8]
   178fd:	push   eax
   178fe:	lea    eax,[ebp+0x8]
   17901:	push   eax
   17902:	call   0x140c2
   17907:	mov    eax,DWORD PTR [ebp+0x8]
   1790a:	mov    ecx,DWORD PTR ds:0x788a0
   17910:	cmp    eax,DWORD PTR [ecx+0x4]
   17913:	jne    0x17944
   17915:	lea    eax,[ebp-0x8]
   17918:	push   eax
   17919:	lea    ecx,[ebp-0x10]
   1791c:	call   0x136e0
   17921:	mov    ecx,DWORD PTR ds:0x788a0
   17927:	lea    eax,[ebp-0x10]
   1792a:	push   eax
   1792b:	lea    eax,[ebp-0x8]
   1792e:	push   eax
   1792f:	call   0x17016
   17934:	mov    ecx,eax
   17936:	call   0x12bcc
   1793b:	push   DWORD PTR [ebp-0x10]
   1793e:	call   0x11d22
   17943:	pop    ecx
   17944:	mov    ecx,DWORD PTR ds:0x788a0
   1794a:	lea    eax,[ebp-0x8]
   1794d:	push   eax
   1794e:	lea    eax,[ebp+0x8]
   17951:	push   eax
   17952:	call   0x140c2
   17957:	mov    eax,DWORD PTR [ebp+0x8]
   1795a:	mov    ecx,DWORD PTR ds:0x788a0
   17960:	cmp    eax,DWORD PTR [ecx+0x4]
   17963:	je     0x17968
   17965:	mov    esi,DWORD PTR [eax+0x14]
   17968:	call   0x1a8ce
   1796d:	push   DWORD PTR [ebp-0x8]
   17970:	call   0x11d22
   17975:	pop    ecx
   17976:	mov    eax,esi
   17978:	pop    esi
   17979:	leave  
   1797a:	ret    0x4
   1797d:	int3   
   1797e:	int3   
   1797f:	int3   
   17980:	int3   
   17981:	int3   
   17982:	mov    edi,edi
   17984:	push   ebp
   17985:	mov    ebp,esp
   17987:	sub    esp,0x10
   1798a:	push   esi
   1798b:	call   0x1a8b2
   17990:	test   al,al
   17992:	jne    0x1799c
   17994:	mov    eax,DWORD PTR [ebp+0x8]
   17997:	jmp    0x17a48
   1799c:	push   DWORD PTR [ebp+0xc]
   1799f:	lea    ecx,[ebp-0x8]
   179a2:	push   DWORD PTR [ebp+0x8]
   179a5:	call   0x136c0
   179aa:	mov    ecx,DWORD PTR ds:0x788a0
   179b0:	lea    eax,[ebp-0x8]
   179b3:	push   eax
   179b4:	lea    eax,[ebp+0xc]
   179b7:	push   eax
   179b8:	call   0x140c2
   179bd:	mov    esi,DWORD PTR [ebp+0xc]
   179c0:	mov    eax,ds:0x788a0
   179c5:	cmp    esi,DWORD PTR [eax+0x4]
   179c8:	jne    0x17a03
   179ca:	push   ecx
   179cb:	push   ecx
   179cc:	lea    eax,[ebp-0x8]
   179cf:	mov    ecx,esp
   179d1:	push   eax
   179d2:	call   0x136e0
   179d7:	lea    eax,[ebp-0x10]
   179da:	push   eax
   179db:	call   0x13702
   179e0:	mov    ecx,DWORD PTR ds:0x788a0
   179e6:	lea    eax,[ebp-0x10]
   179e9:	push   eax
   179ea:	lea    eax,[ebp-0x8]
   179ed:	push   eax
   179ee:	call   0x17016
   179f3:	mov    ecx,eax
   179f5:	call   0x12bcc
   179fa:	push   DWORD PTR [ebp-0x10]
   179fd:	call   0x11d22
   17a02:	pop    ecx
   17a03:	mov    eax,DWORD PTR [ebp+0x10]
   17a06:	movzx  eax,BYTE PTR [eax]
   17a09:	cmp    eax,0x100
   17a0e:	jge    0x17a26
   17a10:	mov    ecx,DWORD PTR ds:0x788a0
   17a16:	lea    eax,[ebp-0x8]
   17a19:	push   eax
   17a1a:	lea    eax,[ebp+0xc]
   17a1d:	push   eax
   17a1e:	call   0x140c2
   17a23:	mov    esi,DWORD PTR [ebp+0xc]
   17a26:	mov    eax,ds:0x788a0
   17a2b:	cmp    esi,DWORD PTR [eax+0x4]
   17a2e:	je     0x17a35
   17a30:	mov    esi,DWORD PTR [esi+0x14]
   17a33:	jmp    0x17a38
   17a35:	mov    esi,DWORD PTR [ebp+0x8]
   17a38:	call   0x1a8ce
   17a3d:	push   DWORD PTR [ebp-0x8]
   17a40:	call   0x11d22
   17a45:	pop    ecx
   17a46:	mov    eax,esi
   17a48:	pop    esi
   17a49:	leave  
   17a4a:	ret    0xc
   17a4d:	int3   
   17a4e:	int3   
   17a4f:	int3   
   17a50:	int3   
   17a51:	int3   
   17a52:	mov    edi,edi
   17a54:	push   ebp
   17a55:	mov    ebp,esp
   17a57:	sub    esp,0x10
   17a5a:	push   esi
   17a5b:	call   0x1a8b2
   17a60:	test   al,al
   17a62:	jne    0x17a6c
   17a64:	mov    eax,DWORD PTR [ebp+0x8]
   17a67:	jmp    0x17b18
   17a6c:	push   DWORD PTR [ebp+0xc]
   17a6f:	lea    ecx,[ebp-0x8]
   17a72:	push   DWORD PTR [ebp+0x8]
   17a75:	call   0x13662
   17a7a:	mov    ecx,DWORD PTR ds:0x788a4
   17a80:	lea    eax,[ebp-0x8]
   17a83:	push   eax
   17a84:	lea    eax,[ebp+0xc]
   17a87:	push   eax
   17a88:	call   0x13cb0
   17a8d:	mov    esi,DWORD PTR [ebp+0xc]
   17a90:	mov    eax,ds:0x788a4
   17a95:	cmp    esi,DWORD PTR [eax+0x4]
   17a98:	jne    0x17ad3
   17a9a:	push   ecx
   17a9b:	push   ecx
   17a9c:	lea    eax,[ebp-0x8]
   17a9f:	mov    ecx,esp
   17aa1:	push   eax
   17aa2:	call   0x13682
   17aa7:	lea    eax,[ebp-0x10]
   17aaa:	push   eax
   17aab:	call   0x13746
   17ab0:	mov    ecx,DWORD PTR ds:0x788a4
   17ab6:	lea    eax,[ebp-0x10]
   17ab9:	push   eax
   17aba:	lea    eax,[ebp-0x8]
   17abd:	push   eax
   17abe:	call   0x16eae
   17ac3:	mov    ecx,eax
   17ac5:	call   0x12a28
   17aca:	push   DWORD PTR [ebp-0x10]
   17acd:	call   0x11d22
   17ad2:	pop    ecx
   17ad3:	mov    eax,DWORD PTR [ebp+0x10]
   17ad6:	movzx  eax,BYTE PTR [eax]
   17ad9:	cmp    eax,0x100
   17ade:	jge    0x17af6
   17ae0:	mov    ecx,DWORD PTR ds:0x788a4
   17ae6:	lea    eax,[ebp-0x8]
   17ae9:	push   eax
   17aea:	lea    eax,[ebp+0xc]
   17aed:	push   eax
   17aee:	call   0x13cb0
   17af3:	mov    esi,DWORD PTR [ebp+0xc]
   17af6:	mov    eax,ds:0x788a4
   17afb:	cmp    esi,DWORD PTR [eax+0x4]
   17afe:	je     0x17b05
   17b00:	mov    esi,DWORD PTR [esi+0x14]
   17b03:	jmp    0x17b08
   17b05:	mov    esi,DWORD PTR [ebp+0x8]
   17b08:	call   0x1a8ce
   17b0d:	push   DWORD PTR [ebp-0x8]
   17b10:	call   0x11d22
   17b15:	pop    ecx
   17b16:	mov    eax,esi
   17b18:	pop    esi
   17b19:	leave  
   17b1a:	ret    0xc
   17b1d:	int3   
   17b1e:	int3   
   17b1f:	int3   
   17b20:	int3   
   17b21:	int3   
   17b22:	mov    edi,edi
   17b24:	push   ebp
   17b25:	mov    ebp,esp
   17b27:	push   esi
   17b28:	mov    esi,ecx
   17b2a:	call   0x17792
   17b2f:	test   BYTE PTR [ebp+0x8],0x1
   17b33:	je     0x17b3c
   17b35:	push   esi
   17b36:	call   0x11d22
   17b3b:	pop    ecx
   17b3c:	mov    eax,esi
   17b3e:	pop    esi
   17b3f:	pop    ebp
   17b40:	ret    0x4
   17b43:	int3   
   17b44:	int3   
   17b45:	int3   
   17b46:	int3   
   17b47:	int3   
   17b48:	mov    edi,edi
   17b4a:	push   ebp
   17b4b:	mov    ebp,esp
   17b4d:	push   esi
   17b4e:	push   DWORD PTR [ebp+0xc]
   17b51:	mov    esi,ecx
   17b53:	push   DWORD PTR [ebp+0x8]
   17b56:	call   0x17754
   17b5b:	mov    eax,esi
   17b5d:	pop    esi
   17b5e:	pop    ebp
   17b5f:	ret    0x8
   17b62:	int3   
   17b63:	int3   
   17b64:	int3   
   17b65:	int3   
   17b66:	int3   
   17b67:	int3   
   17b68:	mov    edi,edi
   17b6a:	push   ebp
   17b6b:	mov    ebp,esp
   17b6d:	sub    esp,0x838
   17b73:	mov    eax,ds:0x77b1c
   17b78:	xor    eax,ebp
   17b7a:	mov    DWORD PTR [ebp-0x4],eax
   17b7d:	mov    eax,DWORD PTR [ebp+0x8]
   17b80:	push   ebx
   17b81:	push   esi
   17b82:	push   edi
   17b83:	mov    DWORD PTR [ebp-0x808],eax
   17b89:	xor    eax,eax
   17b8b:	push   0x7fe
   17b90:	mov    WORD PTR [ebp-0x804],ax
   17b97:	xor    ebx,ebx
   17b99:	lea    eax,[ebp-0x802]
   17b9f:	push   ebx
   17ba0:	push   eax
   17ba1:	call   0x1e19e
   17ba6:	mov    eax,0x77cb8
   17bab:	add    esp,0xc
   17bae:	mov    edx,eax
   17bb0:	mov    cx,WORD PTR [eax]
   17bb3:	inc    eax
   17bb4:	inc    eax
   17bb5:	cmp    cx,bx
   17bb8:	jne    0x17bb0
   17bba:	sub    eax,edx
   17bbc:	lea    edi,[ebp-0x804]
   17bc2:	dec    edi
   17bc3:	dec    edi
   17bc4:	mov    cx,WORD PTR [edi+0x2]
   17bc8:	inc    edi
   17bc9:	inc    edi
   17bca:	cmp    cx,bx
   17bcd:	jne    0x17bc4
   17bcf:	mov    ecx,eax
   17bd1:	shr    ecx,0x2
   17bd4:	mov    esi,edx
   17bd6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17bd8:	mov    ecx,eax
   17bda:	mov    eax,DWORD PTR [ebp-0x808]
   17be0:	and    ecx,0x3
   17be3:	add    eax,0x400
   17be8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17bea:	mov    edx,eax
   17bec:	mov    cx,WORD PTR [eax]
   17bef:	inc    eax
   17bf0:	inc    eax
   17bf1:	cmp    cx,bx
   17bf4:	jne    0x17bec
   17bf6:	sub    eax,edx
   17bf8:	lea    edi,[ebp-0x804]
   17bfe:	dec    edi
   17bff:	dec    edi
   17c00:	mov    cx,WORD PTR [edi+0x2]
   17c04:	inc    edi
   17c05:	inc    edi
   17c06:	cmp    cx,bx
   17c09:	jne    0x17c00
   17c0b:	mov    ecx,eax
   17c0d:	shr    ecx,0x2
   17c10:	mov    esi,edx
   17c12:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17c14:	mov    ecx,eax
   17c16:	and    ecx,0x3
   17c19:	lea    eax,[ebp-0x804]
   17c1f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17c21:	mov    DWORD PTR [ebp-0x818],eax
   17c27:	lea    ecx,[eax+0x2]
   17c2a:	mov    dx,WORD PTR [eax]
   17c2d:	inc    eax
   17c2e:	inc    eax
   17c2f:	cmp    dx,bx
   17c32:	jne    0x17c2a
   17c34:	sub    eax,ecx
   17c36:	sar    eax,1
   17c38:	add    eax,eax
   17c3a:	mov    WORD PTR [ebp-0x81a],ax
   17c41:	mov    WORD PTR [ebp-0x81c],ax
   17c48:	lea    eax,[ebp-0x81c]
   17c4e:	mov    DWORD PTR [ebp-0x82c],eax
   17c54:	lea    eax,[ebp-0x838]
   17c5a:	push   eax
   17c5b:	xor    edi,edi
   17c5d:	inc    edi
   17c5e:	push   edi
   17c5f:	push   ebx
   17c60:	push   ebx
   17c61:	lea    eax,[ebp-0x834]
   17c67:	push   eax
   17c68:	push   0xf003f
   17c6d:	lea    eax,[ebp-0x80c]
   17c73:	push   eax
   17c74:	mov    DWORD PTR [ebp-0x834],0x18
   17c7e:	mov    DWORD PTR [ebp-0x830],ebx
   17c84:	mov    DWORD PTR [ebp-0x828],0x40
   17c8e:	mov    DWORD PTR [ebp-0x824],ebx
   17c94:	mov    DWORD PTR [ebp-0x820],ebx
   17c9a:	call   0x11720
   17c9f:	call   eax
   17ca1:	test   eax,eax
   17ca3:	jl     0x17e33
   17ca9:	push   0x1edf8
   17cae:	push   0x9
   17cb0:	push   0x1ede4
   17cb5:	call   0x17982
   17cba:	mov    DWORD PTR [ebp-0x810],eax
   17cc0:	lea    edx,[eax+0x2]
   17cc3:	mov    cx,WORD PTR [eax]
   17cc6:	inc    eax
   17cc7:	inc    eax
   17cc8:	cmp    cx,bx
   17ccb:	jne    0x17cc3
   17ccd:	sub    eax,edx
   17ccf:	sar    eax,1
   17cd1:	add    eax,eax
   17cd3:	mov    WORD PTR [ebp-0x812],ax
   17cda:	mov    WORD PTR [ebp-0x814],ax
   17ce1:	mov    eax,DWORD PTR [ebp-0x808]
   17ce7:	lea    ecx,[eax+0x2]
   17cea:	mov    dx,WORD PTR [eax]
   17ced:	inc    eax
   17cee:	inc    eax
   17cef:	cmp    dx,bx
   17cf2:	jne    0x17cea
   17cf4:	sub    eax,ecx
   17cf6:	sar    eax,1
   17cf8:	inc    eax
   17cf9:	movzx  eax,ax
   17cfc:	add    eax,eax
   17cfe:	push   eax
   17cff:	push   DWORD PTR [ebp-0x808]
   17d05:	lea    eax,[ebp-0x814]
   17d0b:	push   edi
   17d0c:	push   ebx
   17d0d:	push   eax
   17d0e:	push   DWORD PTR [ebp-0x80c]
   17d14:	call   0x11402
   17d19:	call   eax
   17d1b:	test   eax,eax
   17d1d:	jl     0x17e33
   17d23:	push   0x1edb6
   17d28:	push   0x5
   17d2a:	push   0x1edaa
   17d2f:	mov    DWORD PTR [ebp-0x808],0x3
   17d39:	call   0x17982
   17d3e:	mov    DWORD PTR [ebp-0x810],eax
   17d44:	lea    edx,[eax+0x2]
   17d47:	mov    cx,WORD PTR [eax]
   17d4a:	inc    eax
   17d4b:	inc    eax
   17d4c:	cmp    cx,bx
   17d4f:	jne    0x17d47
   17d51:	sub    eax,edx
   17d53:	push   0x4
   17d55:	sar    eax,1
   17d57:	pop    esi
   17d58:	add    eax,eax
   17d5a:	push   esi
   17d5b:	mov    WORD PTR [ebp-0x812],ax
   17d62:	mov    WORD PTR [ebp-0x814],ax
   17d69:	lea    eax,[ebp-0x808]
   17d6f:	push   eax
   17d70:	push   esi
   17d71:	push   ebx
   17d72:	lea    eax,[ebp-0x814]
   17d78:	push   eax
   17d79:	push   DWORD PTR [ebp-0x80c]
   17d7f:	call   0x11402
   17d84:	call   eax
   17d86:	test   eax,eax
   17d88:	jl     0x17e33
   17d8e:	push   0x1ed80
   17d93:	push   esi
   17d94:	push   0x1ed76
   17d99:	mov    DWORD PTR [ebp-0x808],edi
   17d9f:	call   0x17982
   17da4:	mov    DWORD PTR [ebp-0x810],eax
   17daa:	lea    ecx,[eax+0x2]
   17dad:	mov    dx,WORD PTR [eax]
   17db0:	inc    eax
   17db1:	inc    eax
   17db2:	cmp    dx,bx
   17db5:	jne    0x17dad
   17db7:	sub    eax,ecx
   17db9:	sar    eax,1
   17dbb:	add    eax,eax
   17dbd:	push   esi
   17dbe:	mov    WORD PTR [ebp-0x812],ax
   17dc5:	mov    WORD PTR [ebp-0x814],ax
   17dcc:	lea    eax,[ebp-0x808]
   17dd2:	push   eax
   17dd3:	push   esi
   17dd4:	push   ebx
   17dd5:	lea    eax,[ebp-0x814]
   17ddb:	push   eax
   17ddc:	push   DWORD PTR [ebp-0x80c]
   17de2:	call   0x11402
   17de7:	call   eax
   17de9:	test   eax,eax
   17deb:	jl     0x17e33
   17ded:	lea    eax,[ebp-0x81c]
   17df3:	push   eax
   17df4:	call   0x116f6
   17df9:	call   eax
   17dfb:	test   eax,eax
   17dfd:	jl     0x17e33
   17dff:	lea    eax,[ebp-0x804]
   17e05:	push   eax
   17e06:	push   DWORD PTR [ebp-0x80c]
   17e0c:	call   0x12140
   17e11:	test   al,al
   17e13:	je     0x17e26
   17e15:	push   DWORD PTR [ebp-0x80c]
   17e1b:	call   0x113d8
   17e20:	call   eax
   17e22:	test   eax,eax
   17e24:	jl     0x17e33
   17e26:	push   DWORD PTR [ebp-0x80c]
   17e2c:	call   0x11552
   17e31:	call   eax
   17e33:	mov    ecx,DWORD PTR [ebp-0x4]
   17e36:	pop    edi
   17e37:	pop    esi
   17e38:	xor    ecx,ebp
   17e3a:	pop    ebx
   17e3b:	call   0x1e145
   17e40:	leave  
   17e41:	ret    0x4
   17e44:	int3   
   17e45:	int3   
   17e46:	int3   
   17e47:	int3   
   17e48:	int3   
   17e49:	int3   
   17e4a:	mov    edi,edi
   17e4c:	push   ebp
   17e4d:	mov    ebp,esp
   17e4f:	sub    esp,0x44
   17e52:	mov    eax,DWORD PTR [ebp+0xc]
   17e55:	mov    eax,DWORD PTR [eax]
   17e57:	push   esi
   17e58:	mov    DWORD PTR [ebp-0x2c],eax
   17e5b:	lea    eax,[ebp-0x2c]
   17e5e:	push   eax
   17e5f:	lea    eax,[ebp-0x44]
   17e62:	push   eax
   17e63:	xor    esi,esi
   17e65:	push   0x1f0fff
   17e6a:	lea    eax,[ebp-0x10]
   17e6d:	push   eax
   17e6e:	mov    DWORD PTR [ebp-0x44],0x18
   17e75:	mov    DWORD PTR [ebp-0x40],esi
   17e78:	mov    DWORD PTR [ebp-0x38],0x200
   17e7f:	mov    DWORD PTR [ebp-0x3c],esi
   17e82:	mov    DWORD PTR [ebp-0x34],esi
   17e85:	mov    DWORD PTR [ebp-0x30],esi
   17e88:	mov    DWORD PTR [ebp-0x28],esi
   17e8b:	mov    DWORD PTR [ebp-0x10],esi
   17e8e:	call   0x1125e
   17e93:	call   eax
   17e95:	test   eax,eax
   17e97:	jl     0x1810b
   17e9d:	push   ebx
   17e9e:	push   edi
   17e9f:	push   0x40
   17ea1:	mov    edi,0x1000
   17ea6:	push   edi
   17ea7:	lea    eax,[ebp-0x14]
   17eaa:	push   eax
   17eab:	push   esi
   17eac:	lea    eax,[ebp-0x8]
   17eaf:	push   eax
   17eb0:	push   DWORD PTR [ebp-0x10]
   17eb3:	mov    ebx,0x400
   17eb8:	mov    DWORD PTR [ebp-0x8],esi
   17ebb:	mov    DWORD PTR [ebp-0x14],ebx
   17ebe:	call   0x11288
   17ec3:	call   eax
   17ec5:	test   eax,eax
   17ec7:	jl     0x17ed2
   17ec9:	mov    eax,DWORD PTR [ebp-0x8]
   17ecc:	mov    ecx,DWORD PTR [ebp+0xc]
   17ecf:	mov    DWORD PTR [ecx+0x8],eax
   17ed2:	push   0x4
   17ed4:	push   edi
   17ed5:	lea    eax,[ebp-0x14]
   17ed8:	push   eax
   17ed9:	push   esi
   17eda:	lea    eax,[ebp-0x18]
   17edd:	push   eax
   17ede:	push   DWORD PTR [ebp-0x10]
   17ee1:	mov    DWORD PTR [ebp-0x18],esi
   17ee4:	mov    DWORD PTR [ebp-0x14],ebx
   17ee7:	call   0x11288
   17eec:	call   eax
   17eee:	test   eax,eax
   17ef0:	jl     0x17efb
   17ef2:	mov    eax,DWORD PTR [ebp-0x18]
   17ef5:	mov    ecx,DWORD PTR [ebp+0xc]
   17ef8:	mov    DWORD PTR [ecx+0xc],eax
   17efb:	lea    eax,[ebp-0x1c]
   17efe:	push   eax
   17eff:	push   DWORD PTR [ebp-0x2c]
   17f02:	call   0x11a3e
   17f07:	call   eax
   17f09:	test   eax,eax
   17f0b:	jl     0x18109
   17f11:	push   DWORD PTR [ebp-0x1c]
   17f14:	call   0x1179e
   17f19:	call   eax
   17f1b:	mov    ebx,DWORD PTR [ebp-0x8]
   17f1e:	mov    DWORD PTR [ebp-0x4],esi
   17f21:	cmp    ebx,esi
   17f23:	je     0x180ef
   17f29:	mov    edi,DWORD PTR [ebp-0x18]
   17f2c:	push   0x40
   17f2e:	push   0x77a08
   17f33:	push   edi
   17f34:	mov    DWORD PTR [ebp-0xc],edi
   17f37:	call   0x19f7a
   17f3c:	push   0x1ee42
   17f41:	push   0x4
   17f43:	push   0x1ee38
   17f48:	call   0x17982
   17f4d:	mov    edx,eax
   17f4f:	mov    cx,WORD PTR [eax]
   17f52:	inc    eax
   17f53:	inc    eax
   17f54:	cmp    cx,si
   17f57:	jne    0x17f4f
   17f59:	sub    eax,edx
   17f5b:	dec    edi
   17f5c:	dec    edi
   17f5d:	mov    cx,WORD PTR [edi+0x2]
   17f61:	inc    edi
   17f62:	inc    edi
   17f63:	cmp    cx,si
   17f66:	jne    0x17f5d
   17f68:	mov    ecx,eax
   17f6a:	shr    ecx,0x2
   17f6d:	mov    esi,edx
   17f6f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17f71:	mov    ecx,eax
   17f73:	push   0x60
   17f75:	and    ecx,0x3
   17f78:	push   ebx
   17f79:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17f7b:	mov    DWORD PTR [ebp-0x20],ebx
   17f7e:	call   0x19f2c
   17f83:	push   0x68
   17f85:	push   eax
   17f86:	call   0x19f2c
   17f8b:	push   DWORD PTR [ebp-0xc]
   17f8e:	push   eax
   17f8f:	call   0x19f44
   17f94:	push   0xb8
   17f99:	push   eax
   17f9a:	call   0x19f2c
   17f9f:	push   DWORD PTR ds:0x78568
   17fa5:	push   eax
   17fa6:	call   0x19f44
   17fab:	push   0xc00b
   17fb0:	push   eax
   17fb1:	call   0x19f5e
   17fb6:	push   0x74
   17fb8:	push   eax
   17fb9:	call   0x19f2c
   17fbe:	push   0x2
   17fc0:	push   eax
   17fc1:	call   0x19f2c
   17fc6:	push   0xd0ff
   17fcb:	push   eax
   17fcc:	call   0x19f5e
   17fd1:	push   0x61
   17fd3:	push   eax
   17fd4:	call   0x19f2c
   17fd9:	mov    ebx,DWORD PTR [ebp+0x8]
   17fdc:	mov    edi,eax
   17fde:	mov    esi,ebx
   17fe0:	push   0x0
   17fe2:	push   esi
   17fe3:	push   edi
   17fe4:	call   0x1a6e0
   17fe9:	mov    ecx,eax
   17feb:	sub    ecx,esi
   17fed:	add    DWORD PTR [ebp-0x4],ecx
   17ff0:	add    edi,ecx
   17ff2:	cmp    DWORD PTR [ebp-0x4],0x5
   17ff6:	mov    esi,eax
   17ff8:	jb     0x17fe0
   17ffa:	mov    eax,DWORD PTR [ebp-0x4]
   17ffd:	push   edi
   17ffe:	add    eax,ebx
   18000:	push   eax
   18001:	call   0x19fa2
   18006:	mov    eax,DWORD PTR [ebp-0x8]
   18009:	test   eax,eax
   1800b:	je     0x180ef
   18011:	add    eax,0x400
   18016:	lea    ecx,[eax-0x10]
   18019:	mov    DWORD PTR [ebp-0x24],ecx
   1801c:	mov    ecx,DWORD PTR [ebp-0x4]
   1801f:	lea    esi,[eax-0xc]
   18022:	push   esi
   18023:	lea    edi,[eax-0x4]
   18026:	lea    ebx,[eax-0x8]
   18029:	shr    ecx,0x2
   1802c:	lea    ecx,[ecx*4+0x14]
   18033:	push   0x40
   18035:	sub    eax,ecx
   18037:	push   ebx
   18038:	mov    DWORD PTR [ebp-0xc],eax
   1803b:	mov    eax,DWORD PTR [ebp+0x8]
   1803e:	mov    DWORD PTR [edi],eax
   18040:	push   edi
   18041:	mov    DWORD PTR [ebx],0x5
   18047:	and    DWORD PTR [esi],0x0
   1804a:	push   0xffffffff
   1804c:	call   DWORD PTR ds:0x784e4
   18052:	test   eax,eax
   18054:	jl     0x180b9
   18056:	push   DWORD PTR [ebp-0x4]
   18059:	push   0x90
   1805e:	push   DWORD PTR [ebp-0xc]
   18061:	call   0x1e19e
   18066:	mov    eax,DWORD PTR [ebp-0x20]
   18069:	sub    eax,DWORD PTR [ebp+0x8]
   1806c:	add    esp,0xc
   1806f:	sub    eax,0x5
   18072:	push   eax
   18073:	mov    eax,DWORD PTR [ebp-0xc]
   18076:	inc    eax
   18077:	push   eax
   18078:	call   0x19f44
   1807d:	push   0xe9
   18082:	push   DWORD PTR [ebp-0xc]
   18085:	call   0x19f2c
   1808a:	mov    eax,DWORD PTR [ebp-0x24]
   1808d:	and    DWORD PTR [eax],0x0
   18090:	push   eax
   18091:	push   DWORD PTR [ebp-0x4]
   18094:	push   DWORD PTR [ebp-0xc]
   18097:	push   DWORD PTR [ebp+0x8]
   1809a:	push   0xffffffff
   1809c:	call   DWORD PTR ds:0x784d8
   180a2:	mov    eax,DWORD PTR [ebp+0xc]
   180a5:	mov    BYTE PTR [eax+0x10],0x1
   180a9:	lea    eax,[ebp-0x20]
   180ac:	push   eax
   180ad:	push   DWORD PTR [esi]
   180af:	push   ebx
   180b0:	push   edi
   180b1:	push   0xffffffff
   180b3:	call   DWORD PTR ds:0x784e4
   180b9:	mov    esi,DWORD PTR [ebp-0x8]
   180bc:	test   esi,esi
   180be:	je     0x180ef
   180c0:	lea    eax,[esi+0x400]
   180c6:	lea    ecx,[eax-0x4]
   180c9:	lea    edx,[eax-0x8]
   180cc:	add    eax,0xfffffff4
   180cf:	push   eax
   180d0:	push   0x20
   180d2:	push   edx
   180d3:	mov    DWORD PTR [ecx],esi
   180d5:	push   ecx
   180d6:	mov    DWORD PTR [edx],0x400
   180dc:	and    DWORD PTR [eax],0x0
   180df:	push   0xffffffff
   180e1:	call   DWORD PTR ds:0x784e4
   180e7:	test   eax,eax
   180e9:	jge    0x180ef
   180eb:	and    DWORD PTR [ebp-0x8],0x0
   180ef:	call   0x11774
   180f4:	call   eax
   180f6:	mov    ecx,DWORD PTR [ebp-0x1c]
   180f9:	call   DWORD PTR ds:0x1f850
   180ff:	push   DWORD PTR [ebp-0x10]
   18102:	call   0x11552
   18107:	call   eax
   18109:	pop    edi
   1810a:	pop    ebx
   1810b:	pop    esi
   1810c:	leave  
   1810d:	ret    0x8
   18110:	int3   
   18111:	int3   
   18112:	int3   
   18113:	int3   
   18114:	int3   
   18115:	int3   
   18116:	mov    edi,edi
   18118:	push   ebp
   18119:	mov    ebp,esp
   1811b:	cmp    DWORD PTR ds:0x78568,0x0
   18122:	push   esi
   18123:	mov    esi,DWORD PTR [ebp+0x10]
   18126:	jne    0x181f1
   1812c:	push   0x1f018
   18131:	push   0xc
   18133:	push   0x1effe
   18138:	call   0x17982
   1813d:	push   eax
   1813e:	push   DWORD PTR [ebp+0x8]
   18141:	call   0x11e4a
   18146:	test   al,al
   18148:	je     0x181f1
   1814e:	mov    eax,DWORD PTR [esi+0x4]
   18151:	push   0x1efc2
   18156:	push   0xc
   18158:	push   0x1efb4
   1815d:	mov    ds:0x78560,eax
   18162:	call   0x17a52
   18167:	push   eax
   18168:	push   DWORD PTR [esi+0x4]
   1816b:	call   0x123a4
   18170:	push   0x1ef8c
   18175:	push   0xc
   18177:	push   0x1ef7e
   1817c:	mov    ds:0x78568,eax
   18181:	call   0x17a52
   18186:	push   eax
   18187:	push   DWORD PTR [esi+0x4]
   1818a:	call   0x123a4
   1818f:	push   0x1ef48
   18194:	push   0xc
   18196:	push   0x1ef3a
   1819b:	mov    ds:0x7856c,eax
   181a0:	call   0x17a52
   181a5:	push   eax
   181a6:	push   DWORD PTR [esi+0x4]
   181a9:	call   0x123a4
   181ae:	push   0x1eefc
   181b3:	push   0x5
   181b5:	push   0x1eef6
   181ba:	mov    ds:0x78570,eax
   181bf:	call   0x17a52
   181c4:	push   eax
   181c5:	push   DWORD PTR [esi+0x4]
   181c8:	call   0x123a4
   181cd:	push   0x1eeb6
   181d2:	push   0x4
   181d4:	push   0x1eeb0
   181d9:	mov    ds:0x78574,eax
   181de:	call   0x17a52
   181e3:	push   eax
   181e4:	push   DWORD PTR [esi+0x4]
   181e7:	call   0x123a4
   181ec:	mov    ds:0x78578,eax
   181f1:	cmp    DWORD PTR ds:0x78564,0x0
   181f8:	jne    0x18220
   181fa:	push   0x1ee7e
   181ff:	push   0x9
   18201:	push   0x1ee6a
   18206:	call   0x17982
   1820b:	push   eax
   1820c:	push   DWORD PTR [ebp+0x8]
   1820f:	call   0x11e4a
   18214:	test   al,al
   18216:	je     0x18220
   18218:	mov    eax,DWORD PTR [esi+0x4]
   1821b:	mov    ds:0x78564,eax
   18220:	pop    esi
   18221:	pop    ebp
   18222:	ret    0xc
   18225:	int3   
   18226:	int3   
   18227:	int3   
   18228:	int3   
   18229:	int3   
   1822a:	mov    edi,edi
   1822c:	push   ebp
   1822d:	mov    ebp,esp
   1822f:	sub    esp,0x4c
   18232:	push   ebx
   18233:	push   esi
   18234:	push   edi
   18235:	push   DWORD PTR [ebp+0xc]
   18238:	push   DWORD PTR [ebp+0x8]
   1823b:	call   DWORD PTR ds:0x784f0
   18241:	mov    DWORD PTR [ebp-0x8],eax
   18244:	xor    eax,eax
   18246:	xor    ebx,ebx
   18248:	mov    DWORD PTR [ebp-0x30],ebx
   1824b:	lea    edi,[ebp-0x2c]
   1824e:	stos   DWORD PTR es:[edi],eax
   1824f:	stos   DWORD PTR es:[edi],eax
   18250:	stos   DWORD PTR es:[edi],eax
   18251:	stos   DWORD PTR es:[edi],eax
   18252:	xor    eax,eax
   18254:	mov    DWORD PTR [ebp-0x1c],ebx
   18257:	lea    edi,[ebp-0x18]
   1825a:	stos   DWORD PTR es:[edi],eax
   1825b:	stos   DWORD PTR es:[edi],eax
   1825c:	stos   DWORD PTR es:[edi],eax
   1825d:	stos   DWORD PTR es:[edi],eax
   1825e:	lea    eax,[ebp-0x30]
   18261:	push   eax
   18262:	push   ebx
   18263:	call   0x11ed8
   18268:	mov    BYTE PTR [ebp+0xf],al
   1826b:	lea    eax,[ebp-0x1c]
   1826e:	push   eax
   1826f:	push   0x1
   18271:	call   0x11ed8
   18276:	mov    BYTE PTR [ebp-0x1],al
   18279:	cmp    BYTE PTR [ebp+0xf],bl
   1827c:	je     0x182dd
   1827e:	mov    esi,DWORD PTR [ebp-0x30]
   18281:	cmp    esi,ebx
   18283:	je     0x182dd
   18285:	push   0x6
   18287:	pop    ecx
   18288:	push   ebx
   18289:	xor    eax,eax
   1828b:	mov    DWORD PTR [ebp-0x4c],ebx
   1828e:	lea    edi,[ebp-0x48]
   18291:	push   0x1c
   18293:	rep stos DWORD PTR es:[edi],eax
   18295:	lea    eax,[ebp-0x4c]
   18298:	push   eax
   18299:	push   ebx
   1829a:	push   DWORD PTR [ebp+0x8]
   1829d:	call   0x11528
   182a2:	call   eax
   182a4:	cmp    DWORD PTR [ebp-0x44],esi
   182a7:	jne    0x182dd
   182a9:	push   ebx
   182aa:	push   0x4
   182ac:	lea    eax,[ebp+0xc]
   182af:	push   eax
   182b0:	push   0x9
   182b2:	push   DWORD PTR [ebp+0x8]
   182b5:	mov    DWORD PTR [ebp+0xc],ebx
   182b8:	call   0x11528
   182bd:	call   eax
   182bf:	test   eax,eax
   182c1:	jge    0x182c6
   182c3:	mov    DWORD PTR [ebp+0xc],ebx
   182c6:	cmp    DWORD PTR [ebp+0xc],ebx
   182c9:	je     0x182dd
   182cb:	lea    eax,[ebp-0x30]
   182ce:	push   eax
   182cf:	push   DWORD PTR [ebp+0xc]
   182d2:	call   0x17e4a
   182d7:	push   ebx
   182d8:	call   0x11f72
   182dd:	cmp    BYTE PTR [ebp-0x1],bl
   182e0:	je     0x1834b
   182e2:	mov    esi,DWORD PTR [ebp-0x1c]
   182e5:	cmp    esi,ebx
   182e7:	je     0x1834b
   182e9:	cmp    BYTE PTR [ebp-0xc],bl
   182ec:	jne    0x1834b
   182ee:	push   0x6
   182f0:	pop    ecx
   182f1:	push   ebx
   182f2:	xor    eax,eax
   182f4:	mov    DWORD PTR [ebp-0x4c],ebx
   182f7:	lea    edi,[ebp-0x48]
   182fa:	push   0x1c
   182fc:	rep stos DWORD PTR es:[edi],eax
   182fe:	lea    eax,[ebp-0x4c]
   18301:	push   eax
   18302:	push   ebx
   18303:	push   DWORD PTR [ebp+0x8]
   18306:	call   0x11528
   1830b:	call   eax
   1830d:	cmp    DWORD PTR [ebp-0x44],esi
   18310:	jne    0x1834b
   18312:	push   ebx
   18313:	push   0x4
   18315:	lea    eax,[ebp+0xc]
   18318:	push   eax
   18319:	push   0x9
   1831b:	push   DWORD PTR [ebp+0x8]
   1831e:	mov    DWORD PTR [ebp+0xc],ebx
   18321:	call   0x11528
   18326:	call   eax
   18328:	test   eax,eax
   1832a:	jge    0x1832f
   1832c:	mov    DWORD PTR [ebp+0xc],ebx
   1832f:	cmp    DWORD PTR [ebp+0xc],ebx
   18332:	je     0x1834b
   18334:	lea    eax,[ebp-0x1c]
   18337:	push   eax
   18338:	push   DWORD PTR [ebp+0xc]
   1833b:	call   0x124b0
   18340:	lea    eax,[ebp-0x1c]
   18343:	push   eax
   18344:	push   0x1
   18346:	call   0x11f28
   1834b:	mov    eax,DWORD PTR [ebp-0x8]
   1834e:	pop    edi
   1834f:	pop    esi
   18350:	pop    ebx
   18351:	leave  
   18352:	ret    0x8
   18355:	int3   
   18356:	int3   
   18357:	int3   
   18358:	int3   
   18359:	int3   
   1835a:	mov    edi,edi
   1835c:	push   ebp
   1835d:	mov    ebp,esp
   1835f:	sub    esp,0x40
   18362:	push   ebx
   18363:	mov    ebx,DWORD PTR [ebp+0x8]
   18366:	push   esi
   18367:	test   bl,0x20
   1836a:	je     0x183a4
   1836c:	push   DWORD PTR [ebp+0x24]
   1836f:	mov    esi,DWORD PTR ds:0x784e8
   18375:	push   DWORD PTR [ebp+0x20]
   18378:	lea    ecx,[ebp-0x40]
   1837b:	push   DWORD PTR [ebp+0x1c]
   1837e:	push   DWORD PTR [ebp+0x18]
   18381:	push   DWORD PTR [ebp+0x14]
   18384:	push   DWORD PTR [ebp+0xc]
   18387:	call   0x13b62
   1838c:	push   eax
   1838d:	push   DWORD PTR [ebp+0xc]
   18390:	mov    ecx,esi
   18392:	call   0x177b4
   18397:	lea    ecx,[ebp-0x40]
   1839a:	call   0x13534
   1839f:	jmp    0x184d2
   183a4:	push   DWORD PTR [ebp+0xc]
   183a7:	mov    ecx,DWORD PTR ds:0x784e0
   183ad:	call   0x1528e
   183b2:	test   eax,eax
   183b4:	jne    0x183c2
   183b6:	test   bl,0x1
   183b9:	jne    0x183c2
   183bb:	xor    al,al
   183bd:	jmp    0x184d4
   183c2:	push   DWORD PTR [ebp+0xc]
   183c5:	mov    ecx,DWORD PTR ds:0x784e0
   183cb:	call   0x16e5a
   183d0:	mov    esi,eax
   183d2:	test   bl,0x1
   183d5:	je     0x18408
   183d7:	mov    eax,DWORD PTR [ebp+0x20]
   183da:	push   DWORD PTR [ebp+0xc]
   183dd:	mov    ecx,esi
   183df:	mov    DWORD PTR [esi+0x20],eax
   183e2:	call   0x12a28
   183e7:	push   DWORD PTR [ebp+0x10]
   183ea:	lea    ecx,[esi+0x8]
   183ed:	call   0x12a28
   183f2:	push   DWORD PTR [ebp+0x14]
   183f5:	lea    ecx,[esi+0x10]
   183f8:	call   0x12a28
   183fd:	push   DWORD PTR [ebp+0x18]
   18400:	lea    ecx,[esi+0x18]
   18403:	call   0x12a28
   18408:	mov    DWORD PTR [ebp+0x20],ebx
   1840b:	and    DWORD PTR [ebp+0x20],0x2
   1840f:	je     0x1841f
   18411:	mov    eax,DWORD PTR [ebp+0x24]
   18414:	mov    ecx,DWORD PTR [eax]
   18416:	mov    DWORD PTR [esi+0x28],ecx
   18419:	mov    eax,DWORD PTR [eax+0x4]
   1841c:	mov    DWORD PTR [esi+0x2c],eax
   1841f:	mov    DWORD PTR [ebp+0x14],ebx
   18422:	and    DWORD PTR [ebp+0x14],0x4
   18426:	je     0x18436
   18428:	mov    eax,DWORD PTR [ebp+0x28]
   1842b:	mov    ecx,DWORD PTR [eax]
   1842d:	mov    DWORD PTR [esi+0x30],ecx
   18430:	mov    eax,DWORD PTR [eax+0x4]
   18433:	mov    DWORD PTR [esi+0x34],eax
   18436:	test   bl,0x10
   18439:	je     0x184d2
   1843f:	cmp    DWORD PTR [esi+0xc],0x0
   18443:	jbe    0x184d2
   18449:	mov    eax,ds:0x784e0
   1844e:	mov    eax,DWORD PTR [eax+0x4]
   18451:	push   edi
   18452:	mov    edi,DWORD PTR [eax]
   18454:	mov    DWORD PTR [ebp+0x18],edi
   18457:	cmp    edi,eax
   18459:	je     0x184d1
   1845b:	push   DWORD PTR [ebp+0xc]
   1845e:	lea    ebx,[edi+0x10]
   18461:	push   ebx
   18462:	call   0x19f0c
   18467:	test   al,al
   18469:	je     0x184bc
   1846b:	lea    eax,[esi+0x8]
   1846e:	push   eax
   1846f:	add    edi,0x20
   18472:	push   edi
   18473:	call   0x19efc
   18478:	test   al,al
   1847a:	je     0x184bc
   1847c:	cmp    DWORD PTR [ebp+0x20],0x0
   18480:	je     0x1849c
   18482:	mov    ecx,DWORD PTR ds:0x784e0
   18488:	push   ebx
   18489:	call   0x16e5a
   1848e:	mov    ecx,DWORD PTR [ebp+0x24]
   18491:	mov    edx,DWORD PTR [ecx]
   18493:	mov    DWORD PTR [eax+0x28],edx
   18496:	mov    ecx,DWORD PTR [ecx+0x4]
   18499:	mov    DWORD PTR [eax+0x2c],ecx
   1849c:	cmp    DWORD PTR [ebp+0x14],0x0
   184a0:	je     0x184bc
   184a2:	mov    ecx,DWORD PTR ds:0x784e0
   184a8:	push   ebx
   184a9:	call   0x16e5a
   184ae:	mov    ecx,DWORD PTR [ebp+0x28]
   184b1:	mov    edx,DWORD PTR [ecx]
   184b3:	mov    DWORD PTR [eax+0x30],edx
   184b6:	mov    ecx,DWORD PTR [ecx+0x4]
   184b9:	mov    DWORD PTR [eax+0x34],ecx
   184bc:	lea    ecx,[ebp+0x18]
   184bf:	call   0x13786
   184c4:	mov    edi,DWORD PTR [ebp+0x18]
   184c7:	mov    eax,ds:0x784e0
   184cc:	cmp    edi,DWORD PTR [eax+0x4]
   184cf:	jne    0x1845b
   184d1:	pop    edi
   184d2:	mov    al,0x1
   184d4:	pop    esi
   184d5:	pop    ebx
   184d6:	leave  
   184d7:	ret    0x24
   184da:	int3   
   184db:	int3   
   184dc:	int3   
   184dd:	int3   
   184de:	int3   
   184df:	int3   
   184e0:	push   0x40
   184e2:	push   0x77848
   184e7:	call   0x1e1dc
   184ec:	xor    esi,esi
   184ee:	push   esi
   184ef:	push   esi
   184f0:	push   esi
   184f1:	push   esi
   184f2:	push   0x77b58
   184f7:	call   0x119ea
   184fc:	call   eax
   184fe:	cmp    eax,esi
   18500:	jge    0x18511
   18502:	mov    eax,DWORD PTR [ebp+0x8]
   18505:	mov    DWORD PTR [eax+0x8],0x4
   1850c:	jmp    0x18615
   18511:	mov    DWORD PTR [ebp-0x4],esi
   18514:	or     ebx,0xffffffff
   18517:	push   ebx
   18518:	mov    esi,DWORD PTR [ebp+0x8]
   1851b:	lea    eax,[esi+0x20]
   1851e:	push   eax
   1851f:	lea    ecx,[ebp-0x38]
   18522:	call   0x13662
   18527:	mov    edi,DWORD PTR [ebp-0x34]
   1852a:	inc    edi
   1852b:	push   ebx
   1852c:	lea    eax,[edi+esi*1+0x20]
   18530:	push   eax
   18531:	lea    ecx,[ebp-0x30]
   18534:	call   0x13662
   18539:	mov    eax,DWORD PTR [ebp-0x2c]
   1853c:	lea    edi,[edi+eax*1+0x1]
   18540:	push   ebx
   18541:	lea    eax,[edi+esi*1+0x20]
   18545:	push   eax
   18546:	lea    ecx,[ebp-0x28]
   18549:	call   0x13662
   1854e:	mov    eax,DWORD PTR [ebp-0x24]
   18551:	lea    edi,[edi+eax*1+0x1]
   18555:	push   ebx
   18556:	lea    eax,[edi+esi*1+0x20]
   1855a:	push   eax
   1855b:	lea    ecx,[ebp-0x20]
   1855e:	call   0x13662
   18563:	mov    eax,DWORD PTR [ebp-0x1c]
   18566:	lea    eax,[edi+eax*1+0x1]
   1856a:	push   ebx
   1856b:	lea    eax,[eax+esi*1+0x20]
   1856f:	push   eax
   18570:	lea    ecx,[ebp-0x50]
   18573:	call   0x13662
   18578:	mov    eax,DWORD PTR [esi+0xc]
   1857b:	mov    ecx,DWORD PTR [esi+0x10]
   1857e:	mov    DWORD PTR [ebp-0x48],ecx
   18581:	mov    ecx,DWORD PTR [esi+0x14]
   18584:	mov    DWORD PTR [ebp-0x44],ecx
   18587:	mov    ecx,DWORD PTR [esi+0x18]
   1858a:	mov    DWORD PTR [ebp-0x40],ecx
   1858d:	mov    ecx,DWORD PTR [esi+0x1c]
   18590:	mov    DWORD PTR [ebp-0x3c],ecx
   18593:	lea    ecx,[ebp-0x40]
   18596:	push   ecx
   18597:	lea    ecx,[ebp-0x48]
   1859a:	push   ecx
   1859b:	push   eax
   1859c:	lea    eax,[ebp-0x50]
   1859f:	push   eax
   185a0:	lea    eax,[ebp-0x20]
   185a3:	push   eax
   185a4:	lea    eax,[ebp-0x28]
   185a7:	push   eax
   185a8:	lea    eax,[ebp-0x30]
   185ab:	push   eax
   185ac:	lea    eax,[ebp-0x38]
   185af:	push   eax
   185b0:	push   DWORD PTR [esi+0x4]
   185b3:	call   0x1835a
   185b8:	xor    ecx,ecx
   185ba:	test   al,al
   185bc:	sete   cl
   185bf:	mov    DWORD PTR [esi+0x8],ecx
   185c2:	push   DWORD PTR [ebp-0x50]
   185c5:	call   0x11d22
   185ca:	push   DWORD PTR [ebp-0x20]
   185cd:	call   0x11d22
   185d2:	push   DWORD PTR [ebp-0x28]
   185d5:	call   0x11d22
   185da:	push   DWORD PTR [ebp-0x30]
   185dd:	call   0x11d22
   185e2:	push   DWORD PTR [ebp-0x38]
   185e5:	call   0x11d22
   185ea:	add    esp,0x14
   185ed:	jmp    0x18600
   185ef:	xor    eax,eax
   185f1:	inc    eax
   185f2:	ret    
   185f3:	mov    esp,DWORD PTR [ebp-0x18]
   185f6:	mov    eax,DWORD PTR [ebp+0x8]
   185f9:	mov    DWORD PTR [eax+0x8],0x4
   18600:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18607:	push   0x0
   18609:	push   0x77b58
   1860e:	call   0x11a14
   18613:	call   eax
   18615:	call   0x1e221
   1861a:	ret    0x4
   1861d:	int3   
   1861e:	int3   
   1861f:	int3   
   18620:	int3   
   18621:	int3   
   18622:	push   0x2c
   18624:	push   0x77868
   18629:	call   0x1e1dc
   1862e:	xor    edi,edi
   18630:	mov    DWORD PTR [ebp-0x24],edi
   18633:	mov    ebx,DWORD PTR [ebp+0xc]
   18636:	mov    DWORD PTR [ebx+0x18],edi
   18639:	mov    DWORD PTR [ebx+0x1c],edi
   1863c:	mov    eax,DWORD PTR [ebx+0x60]
   1863f:	cmp    BYTE PTR [eax],0xe
   18642:	jne    0x18af8
   18648:	mov    eax,DWORD PTR [eax+0xc]
   1864b:	mov    DWORD PTR [ebx+0x1c],0x84c
   18652:	mov    ecx,0x22c068
   18657:	cmp    eax,ecx
   18659:	ja     0x189a9
   1865f:	je     0x1899a
   18665:	add    ecx,0xffffffd0
   18668:	cmp    eax,ecx
   1866a:	ja     0x1879b
   18670:	je     0x18782
   18676:	sub    eax,0x22c020
   1867b:	je     0x1874c
   18681:	push   0x4
   18683:	pop    esi
   18684:	sub    eax,esi
   18686:	je     0x18716
   1868c:	sub    eax,esi
   1868e:	je     0x186fb
   18690:	sub    eax,esi
   18692:	je     0x186ee
   18694:	sub    eax,esi
   18696:	je     0x186bd
   18698:	sub    eax,esi
   1869a:	jne    0x18a98
   186a0:	mov    esi,DWORD PTR [ebx+0xc]
   186a3:	push   esi
   186a4:	call   0x17164
   186a9:	cmp    DWORD PTR [esi+0x4],0x2
   186ad:	jne    0x18af5
   186b3:	call   0x17558
   186b8:	jmp    0x18af5
   186bd:	mov    esi,DWORD PTR [ebx+0xc]
   186c0:	mov    eax,DWORD PTR [esi]
   186c2:	add    eax,0x20
   186c5:	mov    DWORD PTR [ebx+0x1c],eax
   186c8:	push   0xffffffff
   186ca:	lea    eax,[esi+0x20]
   186cd:	push   eax
   186ce:	lea    ecx,[ebp-0x34]
   186d1:	call   0x12b6e
   186d6:	push   esi
   186d7:	lea    eax,[ebp-0x34]
   186da:	push   eax
   186db:	call   0x164dc
   186e0:	push   DWORD PTR [ebp-0x34]
   186e3:	call   0x11d22
   186e8:	pop    ecx
   186e9:	jmp    0x18af8
   186ee:	push   DWORD PTR [ebx+0xc]
   186f1:	call   0x184e0
   186f6:	jmp    0x18af5
   186fb:	mov    ecx,DWORD PTR ds:0x784e0
   18701:	call   0x16cf6
   18706:	mov    ecx,DWORD PTR ds:0x77bb4
   1870c:	call   0x16db2
   18711:	jmp    0x18af8
   18716:	mov    eax,DWORD PTR [ebx+0xc]
   18719:	mov    DWORD PTR [ebx+0x1c],0x10
   18720:	mov    ecx,DWORD PTR [eax]
   18722:	cmp    ecx,edi
   18724:	jl     0x18af8
   1872a:	cmp    ecx,0x6
   1872d:	jge    0x18af8
   18733:	mov    edx,DWORD PTR [eax+0x8]
   18736:	mov    DWORD PTR [ecx*8+0x78530],edx
   1873d:	mov    eax,DWORD PTR [eax+0xc]
   18740:	mov    DWORD PTR [ecx*8+0x78534],eax
   18747:	jmp    0x18af8
   1874c:	mov    eax,DWORD PTR [ebx+0xc]
   1874f:	mov    DWORD PTR [ebx+0x1c],0x10
   18756:	mov    ecx,DWORD PTR [eax]
   18758:	cmp    ecx,edi
   1875a:	jl     0x18af8
   18760:	cmp    ecx,0x6
   18763:	jge    0x18af8
   18769:	mov    edx,DWORD PTR [ecx*8+0x78530]
   18770:	mov    DWORD PTR [eax+0x8],edx
   18773:	mov    ecx,DWORD PTR [ecx*8+0x78534]
   1877a:	mov    DWORD PTR [eax+0xc],ecx
   1877d:	jmp    0x18af8
   18782:	mov    eax,DWORD PTR [ebx+0xc]
   18785:	mov    ecx,DWORD PTR [eax]
   18787:	add    ecx,0xc
   1878a:	mov    DWORD PTR [ebx+0x1c],ecx
   1878d:	push   eax
   1878e:	push   DWORD PTR [eax+0x4]
   18791:	call   0x15120
   18796:	jmp    0x18af8
   1879b:	sub    eax,0x22c03c
   187a0:	je     0x18916
   187a6:	sub    eax,0x10
   187a9:	je     0x1890c
   187af:	push   0x4
   187b1:	pop    esi
   187b2:	sub    eax,esi
   187b4:	je     0x1880a
   187b6:	sub    eax,0xc
   187b9:	je     0x187f2
   187bb:	sub    eax,esi
   187bd:	je     0x187d4
   187bf:	sub    eax,esi
   187c1:	jne    0x18a98
   187c7:	push   DWORD PTR [ebx+0xc]
   187ca:	call   0x1285c
   187cf:	jmp    0x18af5
   187d4:	mov    DWORD PTR [ebx+0x1c],0x8
   187db:	mov    ebx,DWORD PTR [ebx+0xc]
   187de:	mov    eax,ds:0x78514
   187e3:	mov    DWORD PTR [ebx],eax
   187e5:	mov    eax,ds:0x78518
   187ea:	mov    DWORD PTR [ebx+0x4],eax
   187ed:	jmp    0x18af8
   187f2:	mov    eax,DWORD PTR [ebx+0xc]
   187f5:	mov    ecx,DWORD PTR [eax]
   187f7:	mov    DWORD PTR ds:0x78514,ecx
   187fd:	mov    eax,DWORD PTR [eax+0x4]
   18800:	mov    ds:0x78518,eax
   18805:	jmp    0x18af5
   1880a:	mov    DWORD PTR [ebx+0x1c],edi
   1880d:	mov    esi,DWORD PTR [ebx+0xc]
   18810:	mov    DWORD PTR [ebp-0x20],esi
   18813:	push   0xffffffff
   18815:	push   0x1e5e8
   1881a:	lea    ecx,[ebp-0x2c]
   1881d:	call   0x12b6e
   18822:	xor    edi,edi
   18824:	inc    edi
   18825:	mov    DWORD PTR [esi+0x8],edi
   18828:	xor    eax,eax
   1882a:	push   eax
   1882b:	push   eax
   1882c:	push   eax
   1882d:	push   eax
   1882e:	push   0x77b58
   18833:	call   0x119ea
   18838:	call   eax
   1883a:	test   eax,eax
   1883c:	jge    0x18846
   1883e:	push   DWORD PTR [ebp-0x2c]
   18841:	jmp    0x186e3
   18846:	and    DWORD PTR [ebp-0x4],0x0
   1884a:	mov    DWORD PTR [ebp-0x4],edi
   1884d:	mov    eax,DWORD PTR [esi]
   1884f:	add    eax,0x20
   18852:	mov    DWORD PTR [ebx+0x1c],eax
   18855:	mov    eax,ds:0x784e0
   1885a:	mov    ebx,DWORD PTR [eax+0x4]
   1885d:	mov    eax,DWORD PTR [ebx]
   1885f:	mov    DWORD PTR [ebp+0xc],eax
   18862:	and    DWORD PTR [ebp-0x1c],0x0
   18866:	mov    edi,DWORD PTR [esi+0x20]
   18869:	cmp    DWORD PTR [ebp-0x1c],edi
   1886c:	jge    0x18880
   1886e:	cmp    DWORD PTR [ebp+0xc],ebx
   18871:	je     0x18880
   18873:	lea    ecx,[ebp+0xc]
   18876:	call   0x13786
   1887b:	inc    DWORD PTR [ebp-0x1c]
   1887e:	jmp    0x18869
   18880:	mov    eax,DWORD PTR [ebp+0xc]
   18883:	cmp    eax,ebx
   18885:	je     0x18899
   18887:	and    DWORD PTR [esi+0x8],0x0
   1888b:	add    eax,0x10
   1888e:	push   eax
   1888f:	lea    ecx,[ebp-0x2c]
   18892:	call   0x12a28
   18897:	jmp    0x188a0
   18899:	mov    DWORD PTR [esi+0x8],0x1
   188a0:	and    DWORD PTR [esi+0x4],0x0
   188a4:	and    DWORD PTR [ebp-0x4],0x0
   188a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   188af:	call   0x188fd
   188b4:	cmp    DWORD PTR [esi+0x8],0x0
   188b8:	jne    0x1883e
   188ba:	push   esi
   188bb:	lea    eax,[ebp-0x2c]
   188be:	push   eax
   188bf:	call   0x164dc
   188c4:	jmp    0x1883e
   188c9:	xor    eax,eax
   188cb:	inc    eax
   188cc:	ret    
   188cd:	mov    esp,DWORD PTR [ebp-0x18]
   188d0:	mov    eax,DWORD PTR [ebp-0x20]
   188d3:	mov    DWORD PTR [eax+0x8],0x4
   188da:	push   DWORD PTR [ebp-0x2c]
   188dd:	call   0x11d22
   188e2:	push   0xfffffffe
   188e4:	lea    eax,[ebp-0x10]
   188e7:	push   eax
   188e8:	push   0x77b1c
   188ed:	call   0x1e39c
   188f2:	add    esp,0x10
   188f5:	jmp    0x18af8
   188fa:	mov    esi,DWORD PTR [ebp-0x20]
   188fd:	push   0x0
   188ff:	push   0x77b58
   18904:	call   0x11a14
   18909:	call   eax
   1890b:	ret    
   1890c:	call   0x12386
   18911:	jmp    0x18af8
   18916:	mov    eax,DWORD PTR [ebx+0xc]
   18919:	mov    ecx,DWORD PTR ds:0x77a04
   1891f:	mov    esi,eax
   18921:	sub    esi,ecx
   18923:	push   0x2
   18925:	pop    edi
   18926:	movzx  edx,WORD PTR [ecx]
   18929:	mov    WORD PTR [esi+ecx*1],dx
   1892d:	add    ecx,edi
   1892f:	test   dx,dx
   18932:	jne    0x18926
   18934:	mov    ecx,0x77a48
   18939:	lea    esi,[eax+0x50]
   1893c:	sub    esi,ecx
   1893e:	movzx  edx,WORD PTR [ecx]
   18941:	mov    WORD PTR [esi+ecx*1],dx
   18945:	add    ecx,edi
   18947:	test   dx,dx
   1894a:	jne    0x1893e
   1894c:	mov    ecx,0x77a08
   18951:	lea    esi,[eax+0x90]
   18957:	sub    esi,ecx
   18959:	movzx  edx,WORD PTR [ecx]
   1895c:	mov    WORD PTR [esi+ecx*1],dx
   18960:	add    ecx,edi
   18962:	test   dx,dx
   18965:	jne    0x18959
   18967:	mov    ecx,0x77a88
   1896c:	lea    esi,[eax+0xd0]
   18972:	sub    esi,ecx
   18974:	movzx  edx,WORD PTR [ecx]
   18977:	mov    WORD PTR [esi+ecx*1],dx
   1897b:	add    ecx,edi
   1897d:	test   dx,dx
   18980:	jne    0x18974
   18982:	lea    edi,[eax+0x40]
   18985:	mov    esi,0x73b40
   1898a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1898b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1898c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1898d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1898e:	mov    DWORD PTR [ebx+0x1c],0x110
   18995:	jmp    0x18af8
   1899a:	mov    eax,DWORD PTR [ebx+0xc]
   1899d:	push   DWORD PTR [eax]
   1899f:	call   0x1296c
   189a4:	jmp    0x18af5
   189a9:	mov    ecx,0x22c088
   189ae:	cmp    eax,ecx
   189b0:	ja     0x18a7a
   189b6:	je     0x18a4f
   189bc:	sub    eax,0x22c06c
   189c1:	je     0x18a37
   189c3:	push   0x4
   189c5:	pop    esi
   189c6:	sub    eax,esi
   189c8:	je     0x18a2a
   189ca:	push   0x8
   189cc:	pop    ecx
   189cd:	sub    eax,ecx
   189cf:	je     0x18a1d
   189d1:	sub    eax,esi
   189d3:	je     0x18a05
   189d5:	sub    eax,esi
   189d7:	je     0x189ee
   189d9:	sub    eax,esi
   189db:	jne    0x18a98
   189e1:	push   DWORD PTR [ebx+0xc]
   189e4:	call   0x1706c
   189e9:	jmp    0x18af5
   189ee:	mov    DWORD PTR [ebx+0x1c],ecx
   189f1:	mov    ebx,DWORD PTR [ebx+0xc]
   189f4:	mov    eax,ds:0x7851c
   189f9:	mov    DWORD PTR [ebx],eax
   189fb:	mov    eax,ds:0x78520
   18a00:	jmp    0x187ea
   18a05:	mov    eax,DWORD PTR [ebx+0xc]
   18a08:	mov    ecx,DWORD PTR [eax]
   18a0a:	mov    DWORD PTR ds:0x7851c,ecx
   18a10:	mov    eax,DWORD PTR [eax+0x4]
   18a13:	mov    ds:0x78520,eax
   18a18:	jmp    0x18af5
   18a1d:	push   DWORD PTR [ebx+0xc]
   18a20:	call   0x17b68
   18a25:	jmp    0x18af5
   18a2a:	push   DWORD PTR [ebx+0xc]
   18a2d:	call   0x120ac
   18a32:	jmp    0x18af5
   18a37:	mov    esi,DWORD PTR [ebx+0xc]
   18a3a:	push   DWORD PTR [esi]
   18a3c:	call   0x129b2
   18a41:	mov    DWORD PTR [esi],eax
   18a43:	mov    DWORD PTR [ebx+0x1c],0x4
   18a4a:	jmp    0x18af8
   18a4f:	mov    esi,DWORD PTR [ebx+0xc]
   18a52:	mov    eax,DWORD PTR [esi]
   18a54:	add    eax,0xc
   18a57:	mov    DWORD PTR [ebx+0x1c],eax
   18a5a:	push   0xffffffff
   18a5c:	lea    eax,[esi+0xc]
   18a5f:	push   eax
   18a60:	lea    ecx,[ebp-0x3c]
   18a63:	call   0x12b6e
   18a68:	push   esi
   18a69:	lea    eax,[ebp-0x3c]
   18a6c:	push   eax
   18a6d:	call   0x15034
   18a72:	push   DWORD PTR [ebp-0x3c]
   18a75:	jmp    0x186e3
   18a7a:	sub    eax,0x22c08c
   18a7f:	je     0x18ae7
   18a81:	push   0x4
   18a83:	pop    esi
   18a84:	sub    eax,esi
   18a86:	je     0x18ad3
   18a88:	sub    eax,esi
   18a8a:	je     0x18acc
   18a8c:	sub    eax,esi
   18a8e:	je     0x18ab8
   18a90:	sub    eax,esi
   18a92:	je     0x18aae
   18a94:	sub    eax,esi
   18a96:	je     0x18aa1
   18a98:	mov    DWORD PTR [ebp-0x24],0xc0000010
   18a9f:	jmp    0x18af5
   18aa1:	push   DWORD PTR [ebx+0xc]
   18aa4:	call   0x1b186
   18aa9:	mov    DWORD PTR [ebx+0x1c],esi
   18aac:	jmp    0x18af8
   18aae:	push   DWORD PTR [ebx+0xc]
   18ab1:	call   0x1bc0c
   18ab6:	jmp    0x18af5
   18ab8:	mov    eax,DWORD PTR [ebx+0xc]
   18abb:	mov    ecx,DWORD PTR [eax+0x4]
   18abe:	add    ecx,0x8
   18ac1:	mov    DWORD PTR [ebx+0x1c],ecx
   18ac4:	push   eax
   18ac5:	call   0x1beda
   18aca:	jmp    0x18af8
   18acc:	call   0x1bb1c
   18ad1:	jmp    0x18af5
   18ad3:	mov    eax,DWORD PTR [ebx+0xc]
   18ad6:	mov    ecx,DWORD PTR [eax+0x4]
   18ad9:	add    ecx,0x8
   18adc:	mov    DWORD PTR [ebx+0x1c],ecx
   18adf:	push   eax
   18ae0:	call   0x1af42
   18ae5:	jmp    0x18af8
   18ae7:	push   DWORD PTR [ebx+0xc]
   18aea:	call   0x129fc
   18aef:	push   eax
   18af0:	call   0x1bd3e
   18af5:	mov    DWORD PTR [ebx+0x1c],edi
   18af8:	mov    eax,DWORD PTR [ebp-0x24]
   18afb:	call   0x1e221
   18b00:	ret    0x8
   18b03:	int3   
   18b04:	int3   
   18b05:	int3   
   18b06:	int3   
   18b07:	int3   
   18b08:	push   0x848
   18b0d:	push   0x77890
   18b12:	call   0x1e4e0
   18b17:	xor    ebx,ebx
   18b19:	mov    BYTE PTR [ebp-0x81d],bl
   18b1f:	xor    eax,eax
   18b21:	mov    WORD PTR [ebp-0x81c],ax
   18b28:	push   0x7fe
   18b2d:	push   ebx
   18b2e:	lea    eax,[ebp-0x81a]
   18b34:	push   eax
   18b35:	call   0x1e19e
   18b3a:	add    esp,0xc
   18b3d:	push   0x1f0c0
   18b42:	push   0x15
   18b44:	push   0x1f094
   18b49:	call   0x17982
   18b4e:	mov    edx,eax
   18b50:	mov    cx,WORD PTR [eax]
   18b53:	inc    eax
   18b54:	inc    eax
   18b55:	cmp    cx,bx
   18b58:	jne    0x18b50
   18b5a:	sub    eax,edx
   18b5c:	lea    edi,[ebp-0x81c]
   18b62:	dec    edi
   18b63:	dec    edi
   18b64:	mov    cx,WORD PTR [edi+0x2]
   18b68:	inc    edi
   18b69:	inc    edi
   18b6a:	cmp    cx,bx
   18b6d:	jne    0x18b64
   18b6f:	mov    ecx,eax
   18b71:	mov    esi,edx
   18b73:	shr    ecx,0x2
   18b76:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b78:	mov    ecx,eax
   18b7a:	and    ecx,0x3
   18b7d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b7f:	mov    eax,0x77a08
   18b84:	mov    edx,eax
   18b86:	mov    cx,WORD PTR [eax]
   18b89:	inc    eax
   18b8a:	inc    eax
   18b8b:	cmp    cx,bx
   18b8e:	jne    0x18b86
   18b90:	sub    eax,edx
   18b92:	lea    edi,[ebp-0x81c]
   18b98:	dec    edi
   18b99:	dec    edi
   18b9a:	mov    cx,WORD PTR [edi+0x2]
   18b9e:	inc    edi
   18b9f:	inc    edi
   18ba0:	cmp    cx,bx
   18ba3:	jne    0x18b9a
   18ba5:	mov    ecx,eax
   18ba7:	mov    esi,edx
   18ba9:	shr    ecx,0x2
   18bac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18bae:	mov    ecx,eax
   18bb0:	and    ecx,0x3
   18bb3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18bb5:	push   0x1f05c
   18bba:	push   0x4
   18bbc:	push   0x1ee38
   18bc1:	call   0x17982
   18bc6:	mov    edx,eax
   18bc8:	mov    cx,WORD PTR [eax]
   18bcb:	inc    eax
   18bcc:	inc    eax
   18bcd:	cmp    cx,bx
   18bd0:	jne    0x18bc8
   18bd2:	sub    eax,edx
   18bd4:	lea    edi,[ebp-0x81c]
   18bda:	dec    edi
   18bdb:	dec    edi
   18bdc:	mov    cx,WORD PTR [edi+0x2]
   18be0:	inc    edi
   18be1:	inc    edi
   18be2:	cmp    cx,bx
   18be5:	jne    0x18bdc
   18be7:	mov    ecx,eax
   18be9:	mov    esi,edx
   18beb:	shr    ecx,0x2
   18bee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18bf0:	mov    ecx,eax
   18bf2:	and    ecx,0x3
   18bf5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18bf7:	lea    eax,[ebp-0x81c]
   18bfd:	push   eax
   18bfe:	lea    eax,[ebp-0x858]
   18c04:	push   eax
   18c05:	call   0x1157c
   18c0a:	call   eax
   18c0c:	mov    DWORD PTR [ebp-0x824],ebx
   18c12:	xor    eax,eax
   18c14:	lea    edi,[ebp-0x84c]
   18c1a:	stos   DWORD PTR es:[edi],eax
   18c1b:	stos   DWORD PTR es:[edi],eax
   18c1c:	stos   DWORD PTR es:[edi],eax
   18c1d:	stos   DWORD PTR es:[edi],eax
   18c1e:	stos   DWORD PTR es:[edi],eax
   18c1f:	mov    DWORD PTR [ebp-0x830],ebx
   18c25:	xor    eax,eax
   18c27:	lea    edi,[ebp-0x82c]
   18c2d:	stos   DWORD PTR es:[edi],eax
   18c2e:	mov    DWORD PTR [ebp-0x850],0x18
   18c38:	mov    DWORD PTR [ebp-0x84c],ebx
   18c3e:	mov    DWORD PTR [ebp-0x844],0x240
   18c48:	lea    eax,[ebp-0x858]
   18c4e:	mov    DWORD PTR [ebp-0x848],eax
   18c54:	mov    DWORD PTR [ebp-0x840],ebx
   18c5a:	mov    DWORD PTR [ebp-0x83c],ebx
   18c60:	push   ebx
   18c61:	push   ebx
   18c62:	push   0x60
   18c64:	push   0x1
   18c66:	push   ebx
   18c67:	push   0x80
   18c6c:	push   ebx
   18c6d:	lea    eax,[ebp-0x830]
   18c73:	push   eax
   18c74:	lea    eax,[ebp-0x850]
   18c7a:	push   eax
   18c7b:	push   0x100001
   18c80:	lea    eax,[ebp-0x824]
   18c86:	push   eax
   18c87:	call   0x11456
   18c8c:	call   eax
   18c8e:	cmp    eax,ebx
   18c90:	jge    0x18c99
   18c92:	xor    al,al
   18c94:	jmp    0x18d2f
   18c99:	mov    DWORD PTR [ebp-0x4],ebx
   18c9c:	mov    esi,DWORD PTR [ebp+0xc]
   18c9f:	mov    eax,0x10000
   18ca4:	cmp    esi,eax
   18ca6:	jbe    0x18caa
   18ca8:	mov    esi,eax
   18caa:	push   esi
   18cab:	call   0x11cec
   18cb0:	pop    ecx
   18cb1:	mov    DWORD PTR [ebp-0x828],eax
   18cb7:	mov    DWORD PTR [ebp-0x838],ebx
   18cbd:	xor    eax,eax
   18cbf:	lea    edi,[ebp-0x834]
   18cc5:	stos   DWORD PTR es:[edi],eax
   18cc6:	push   ebx
   18cc7:	lea    eax,[ebp-0x838]
   18ccd:	push   eax
   18cce:	push   esi
   18ccf:	push   DWORD PTR [ebp-0x828]
   18cd5:	lea    eax,[ebp-0x830]
   18cdb:	push   eax
   18cdc:	push   ebx
   18cdd:	push   ebx
   18cde:	push   ebx
   18cdf:	push   DWORD PTR [ebp-0x824]
   18ce5:	call   0x117f2
   18cea:	call   eax
   18cec:	cmp    eax,ebx
   18cee:	jl     0x18d15
   18cf0:	mov    ecx,DWORD PTR [ebp-0x82c]
   18cf6:	mov    edi,DWORD PTR [ebp+0x8]
   18cf9:	mov    esi,DWORD PTR [ebp-0x828]
   18cff:	xor    eax,eax
   18d01:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   18d03:	sete   al
   18d06:	mov    BYTE PTR [ebp-0x81d],al
   18d0c:	jmp    0x18d15
   18d0e:	xor    eax,eax
   18d10:	inc    eax
   18d11:	ret    
   18d12:	mov    esp,DWORD PTR [ebp-0x18]
   18d15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d1c:	push   DWORD PTR [ebp-0x824]
   18d22:	call   0x11552
   18d27:	call   eax
   18d29:	mov    al,BYTE PTR [ebp-0x81d]
   18d2f:	call   0x1e528
   18d34:	ret    0x8
   18d37:	int3   
   18d38:	int3   
   18d39:	int3   
   18d3a:	int3   
   18d3b:	int3   
   18d3c:	push   0x874
   18d41:	push   0x778b0
   18d46:	call   0x1e4e0
   18d4b:	mov    eax,DWORD PTR [ebp+0x8]
   18d4e:	mov    DWORD PTR [ebp-0x830],eax
   18d54:	xor    ebx,ebx
   18d56:	mov    BYTE PTR [ebp-0x81d],bl
   18d5c:	xor    eax,eax
   18d5e:	mov    WORD PTR [ebp-0x81c],ax
   18d65:	push   0x7fe
   18d6a:	push   ebx
   18d6b:	lea    eax,[ebp-0x81a]
   18d71:	push   eax
   18d72:	call   0x1e19e
   18d77:	add    esp,0xc
   18d7a:	push   0x1f114
   18d7f:	push   0x15
   18d81:	push   0x1f094
   18d86:	call   0x17982
   18d8b:	mov    edx,eax
   18d8d:	mov    cx,WORD PTR [eax]
   18d90:	inc    eax
   18d91:	inc    eax
   18d92:	cmp    cx,bx
   18d95:	jne    0x18d8d
   18d97:	sub    eax,edx
   18d99:	lea    edi,[ebp-0x81c]
   18d9f:	dec    edi
   18da0:	dec    edi
   18da1:	mov    cx,WORD PTR [edi+0x2]
   18da5:	inc    edi
   18da6:	inc    edi
   18da7:	cmp    cx,bx
   18daa:	jne    0x18da1
   18dac:	mov    ecx,eax
   18dae:	mov    esi,edx
   18db0:	shr    ecx,0x2
   18db3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18db5:	mov    ecx,eax
   18db7:	and    ecx,0x3
   18dba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18dbc:	mov    eax,0x77a08
   18dc1:	mov    edx,eax
   18dc3:	mov    cx,WORD PTR [eax]
   18dc6:	inc    eax
   18dc7:	inc    eax
   18dc8:	cmp    cx,bx
   18dcb:	jne    0x18dc3
   18dcd:	sub    eax,edx
   18dcf:	lea    edi,[ebp-0x81c]
   18dd5:	dec    edi
   18dd6:	dec    edi
   18dd7:	mov    cx,WORD PTR [edi+0x2]
   18ddb:	inc    edi
   18ddc:	inc    edi
   18ddd:	cmp    cx,bx
   18de0:	jne    0x18dd7
   18de2:	mov    ecx,eax
   18de4:	mov    esi,edx
   18de6:	shr    ecx,0x2
   18de9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18deb:	mov    ecx,eax
   18ded:	and    ecx,0x3
   18df0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18df2:	push   0x1f0e2
   18df7:	push   0x4
   18df9:	push   0x1ee38
   18dfe:	call   0x17982
   18e03:	mov    edx,eax
   18e05:	mov    cx,WORD PTR [eax]
   18e08:	inc    eax
   18e09:	inc    eax
   18e0a:	cmp    cx,bx
   18e0d:	jne    0x18e05
   18e0f:	sub    eax,edx
   18e11:	lea    edi,[ebp-0x81c]
   18e17:	dec    edi
   18e18:	dec    edi
   18e19:	mov    cx,WORD PTR [edi+0x2]
   18e1d:	inc    edi
   18e1e:	inc    edi
   18e1f:	cmp    cx,bx
   18e22:	jne    0x18e19
   18e24:	mov    ecx,eax
   18e26:	mov    esi,edx
   18e28:	shr    ecx,0x2
   18e2b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e2d:	mov    ecx,eax
   18e2f:	and    ecx,0x3
   18e32:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18e34:	lea    eax,[ebp-0x81c]
   18e3a:	push   eax
   18e3b:	lea    eax,[ebp-0x884]
   18e41:	push   eax
   18e42:	call   0x1157c
   18e47:	call   eax
   18e49:	mov    DWORD PTR [ebp-0x824],ebx
   18e4f:	xor    eax,eax
   18e51:	lea    edi,[ebp-0x850]
   18e57:	stos   DWORD PTR es:[edi],eax
   18e58:	stos   DWORD PTR es:[edi],eax
   18e59:	stos   DWORD PTR es:[edi],eax
   18e5a:	stos   DWORD PTR es:[edi],eax
   18e5b:	stos   DWORD PTR es:[edi],eax
   18e5c:	mov    DWORD PTR [ebp-0x82c],ebx
   18e62:	xor    eax,eax
   18e64:	lea    edi,[ebp-0x828]
   18e6a:	stos   DWORD PTR es:[edi],eax
   18e6b:	mov    DWORD PTR [ebp-0x854],0x18
   18e75:	mov    DWORD PTR [ebp-0x850],ebx
   18e7b:	mov    DWORD PTR [ebp-0x848],0x240
   18e85:	lea    eax,[ebp-0x884]
   18e8b:	mov    DWORD PTR [ebp-0x84c],eax
   18e91:	mov    DWORD PTR [ebp-0x844],ebx
   18e97:	mov    DWORD PTR [ebp-0x840],ebx
   18e9d:	push   ebx
   18e9e:	push   ebx
   18e9f:	push   0x60
   18ea1:	push   ebx
   18ea2:	push   ebx
   18ea3:	push   0x80
   18ea8:	push   ebx
   18ea9:	lea    eax,[ebp-0x82c]
   18eaf:	push   eax
   18eb0:	lea    eax,[ebp-0x854]
   18eb6:	push   eax
   18eb7:	push   0x100002
   18ebc:	lea    eax,[ebp-0x824]
   18ec2:	push   eax
   18ec3:	call   0x11456
   18ec8:	call   eax
   18eca:	cmp    eax,ebx
   18ecc:	jge    0x18ed5
   18ece:	xor    al,al
   18ed0:	jmp    0x18fdb
   18ed5:	mov    DWORD PTR [ebp-0x4],ebx
   18ed8:	xor    eax,eax
   18eda:	lea    edi,[ebp-0x82c]
   18ee0:	stos   DWORD PTR es:[edi],eax
   18ee1:	stos   DWORD PTR es:[edi],eax
   18ee2:	xor    edi,edi
   18ee4:	mov    esi,0x10000
   18ee9:	mov    DWORD PTR [ebp-0x834],edi
   18eef:	mov    eax,DWORD PTR [ebp+0xc]
   18ef2:	cmp    edi,eax
   18ef4:	jae    0x18f3f
   18ef6:	mov    DWORD PTR [ebp-0x83c],ebx
   18efc:	mov    DWORD PTR [ebp-0x83c],edi
   18f02:	mov    DWORD PTR [ebp-0x838],ebx
   18f08:	sub    eax,edi
   18f0a:	cmp    eax,esi
   18f0c:	jb     0x18f10
   18f0e:	mov    eax,esi
   18f10:	push   ebx
   18f11:	push   ebx
   18f12:	push   eax
   18f13:	mov    eax,DWORD PTR [ebp-0x830]
   18f19:	add    eax,edi
   18f1b:	push   eax
   18f1c:	lea    eax,[ebp-0x82c]
   18f22:	push   eax
   18f23:	push   ebx
   18f24:	push   ebx
   18f25:	push   ebx
   18f26:	push   DWORD PTR [ebp-0x824]
   18f2c:	call   0x11846
   18f31:	call   eax
   18f33:	cmp    eax,ebx
   18f35:	jl     0x18fc1
   18f3b:	add    edi,esi
   18f3d:	jmp    0x18ee9
   18f3f:	mov    BYTE PTR [ebp-0x81d],0x1
   18f46:	mov    DWORD PTR [ebp-0x87c],ebx
   18f4c:	push   0x9
   18f4e:	pop    ecx
   18f4f:	xor    eax,eax
   18f51:	lea    edi,[ebp-0x878]
   18f57:	rep stos DWORD PTR es:[edi],eax
   18f59:	mov    eax,DWORD PTR [ebp+0x10]
   18f5c:	mov    DWORD PTR [ebp-0x86c],eax
   18f62:	mov    ecx,DWORD PTR [ebp+0x14]
   18f65:	mov    DWORD PTR [ebp-0x868],ecx
   18f6b:	mov    DWORD PTR [ebp-0x874],eax
   18f71:	mov    DWORD PTR [ebp-0x870],ecx
   18f77:	mov    DWORD PTR [ebp-0x864],eax
   18f7d:	mov    DWORD PTR [ebp-0x860],ecx
   18f83:	mov    DWORD PTR [ebp-0x87c],eax
   18f89:	mov    DWORD PTR [ebp-0x878],ecx
   18f8f:	mov    DWORD PTR [ebp-0x85c],0x80
   18f99:	push   0x4
   18f9b:	push   0x28
   18f9d:	lea    eax,[ebp-0x87c]
   18fa3:	push   eax
   18fa4:	lea    eax,[ebp-0x82c]
   18faa:	push   eax
   18fab:	push   DWORD PTR [ebp-0x824]
   18fb1:	call   0x1181c
   18fb6:	call   eax
   18fb8:	jmp    0x18fc1
   18fba:	xor    eax,eax
   18fbc:	inc    eax
   18fbd:	ret    
   18fbe:	mov    esp,DWORD PTR [ebp-0x18]
   18fc1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18fc8:	push   DWORD PTR [ebp-0x824]
   18fce:	call   0x11552
   18fd3:	call   eax
   18fd5:	mov    al,BYTE PTR [ebp-0x81d]
   18fdb:	call   0x1e528
   18fe0:	ret    0x10
   18fe3:	int3   
   18fe4:	int3   
   18fe5:	int3   
   18fe6:	int3   
   18fe7:	int3   
   18fe8:	push   0x874
   18fed:	push   0x778d0
   18ff2:	call   0x1e4e0
   18ff7:	xor    ebx,ebx
   18ff9:	mov    BYTE PTR [ebp-0x81d],bl
   18fff:	mov    BYTE PTR [ebp-0x81e],bl
   19005:	mov    DWORD PTR [ebp-0x828],ebx
   1900b:	mov    DWORD PTR [ebp-0x824],ebx
   19011:	xor    eax,eax
   19013:	mov    WORD PTR [ebp-0x81c],ax
   1901a:	push   0x7fe
   1901f:	push   ebx
   19020:	lea    eax,[ebp-0x81a]
   19026:	push   eax
   19027:	call   0x1e19e
   1902c:	add    esp,0xc
   1902f:	push   0x1f1b2
   19034:	push   0x1d
   19036:	push   0x1f176
   1903b:	call   0x17982
   19040:	mov    edx,eax
   19042:	mov    cx,WORD PTR [eax]
   19045:	inc    eax
   19046:	inc    eax
   19047:	cmp    cx,bx
   1904a:	jne    0x19042
   1904c:	sub    eax,edx
   1904e:	lea    edi,[ebp-0x81c]
   19054:	dec    edi
   19055:	dec    edi
   19056:	mov    cx,WORD PTR [edi+0x2]
   1905a:	inc    edi
   1905b:	inc    edi
   1905c:	cmp    cx,bx
   1905f:	jne    0x19056
   19061:	mov    ecx,eax
   19063:	mov    esi,edx
   19065:	shr    ecx,0x2
   19068:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1906a:	mov    ecx,eax
   1906c:	and    ecx,0x3
   1906f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   19071:	mov    eax,0x77a48
   19076:	mov    edx,eax
   19078:	mov    cx,WORD PTR [eax]
   1907b:	inc    eax
   1907c:	inc    eax
   1907d:	cmp    cx,bx
   19080:	jne    0x19078
   19082:	sub    eax,edx
   19084:	lea    edi,[ebp-0x81c]
   1908a:	dec    edi
   1908b:	dec    edi
   1908c:	mov    cx,WORD PTR [edi+0x2]
   19090:	inc    edi
   19091:	inc    edi
   19092:	cmp    cx,bx
   19095:	jne    0x1908c
   19097:	mov    ecx,eax
   19099:	mov    esi,edx
   1909b:	shr    ecx,0x2
   1909e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190a0:	mov    ecx,eax
   190a2:	and    ecx,0x3
   190a5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   190a7:	push   0x1f14e
   190ac:	push   0x4
   190ae:	push   0x1f144
   190b3:	call   0x17982
   190b8:	mov    edx,eax
   190ba:	mov    cx,WORD PTR [eax]
   190bd:	inc    eax
   190be:	inc    eax
   190bf:	cmp    cx,bx
   190c2:	jne    0x190ba
   190c4:	sub    eax,edx
   190c6:	lea    edi,[ebp-0x81c]
   190cc:	dec    edi
   190cd:	dec    edi
   190ce:	mov    cx,WORD PTR [edi+0x2]
   190d2:	inc    edi
   190d3:	inc    edi
   190d4:	cmp    cx,bx
   190d7:	jne    0x190ce
   190d9:	mov    ecx,eax
   190db:	mov    esi,edx
   190dd:	shr    ecx,0x2
   190e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190e2:	mov    ecx,eax
   190e4:	and    ecx,0x3
   190e7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   190e9:	lea    eax,[ebp-0x81c]
   190ef:	push   eax
   190f0:	lea    eax,[ebp-0x85c]
   190f6:	push   eax
   190f7:	call   0x1157c
   190fc:	call   eax
   190fe:	xor    eax,eax
   19100:	lea    edi,[ebp-0x850]
   19106:	stos   DWORD PTR es:[edi],eax
   19107:	stos   DWORD PTR es:[edi],eax
   19108:	stos   DWORD PTR es:[edi],eax
   19109:	stos   DWORD PTR es:[edi],eax
   1910a:	stos   DWORD PTR es:[edi],eax
   1910b:	mov    DWORD PTR [ebp-0x834],ebx
   19111:	xor    eax,eax
   19113:	lea    edi,[ebp-0x830]
   19119:	stos   DWORD PTR es:[edi],eax
   1911a:	mov    DWORD PTR [ebp-0x82c],ebx
   19120:	mov    DWORD PTR [ebp-0x854],0x18
   1912a:	mov    DWORD PTR [ebp-0x850],ebx
   19130:	mov    DWORD PTR [ebp-0x848],0x240
   1913a:	lea    eax,[ebp-0x85c]
   19140:	mov    DWORD PTR [ebp-0x84c],eax
   19146:	mov    DWORD PTR [ebp-0x844],ebx
   1914c:	mov    DWORD PTR [ebp-0x840],ebx
   19152:	push   ebx
   19153:	push   ebx
   19154:	push   ebx
   19155:	push   0x1
   19157:	push   0x7
   19159:	push   ebx
   1915a:	push   ebx
   1915b:	lea    eax,[ebp-0x834]
   19161:	push   eax
   19162:	lea    eax,[ebp-0x854]
   19168:	push   eax
   19169:	push   0x89
   1916e:	lea    eax,[ebp-0x82c]
   19174:	push   eax
   19175:	call   0x11456
   1917a:	call   eax
   1917c:	cmp    eax,ebx
   1917e:	jge    0x19187
   19180:	xor    al,al
   19182:	jmp    0x192a7
   19187:	mov    DWORD PTR [ebp-0x884],ebx
   1918d:	push   0x9
   1918f:	pop    ecx
   19190:	xor    eax,eax
   19192:	lea    edi,[ebp-0x880]
   19198:	rep stos DWORD PTR es:[edi],eax
   1919a:	mov    DWORD PTR [ebp-0x4],ebx
   1919d:	push   0x4
   1919f:	push   0x28
   191a1:	lea    eax,[ebp-0x884]
   191a7:	push   eax
   191a8:	lea    eax,[ebp-0x834]
   191ae:	push   eax
   191af:	push   DWORD PTR [ebp-0x82c]
   191b5:	call   0x11870
   191ba:	call   eax
   191bc:	cmp    eax,ebx
   191be:	jl     0x1923c
   191c0:	mov    esi,0x54288
   191c5:	push   esi
   191c6:	call   0x11cec
   191cb:	mov    edi,eax
   191cd:	push   esi
   191ce:	push   0x1f890
   191d3:	push   edi
   191d4:	call   0x1e1b6
   191d9:	add    esp,0x10
   191dc:	push   0x25
   191de:	push   0x73b18
   191e3:	push   esi
   191e4:	push   edi
   191e5:	call   0x10990
   191ea:	lea    eax,[ebp-0x828]
   191f0:	push   eax
   191f1:	push   esi
   191f2:	push   edi
   191f3:	lea    eax,[ebp-0x83c]
   191f9:	push   eax
   191fa:	call   0x1a728
   191ff:	mov    BYTE PTR [ebp-0x83c],bl
   19205:	mov    eax,DWORD PTR [ebp-0x838]
   1920b:	mov    DWORD PTR [ebp-0x824],eax
   19211:	cmp    eax,ebx
   19213:	je     0x1922e
   19215:	push   DWORD PTR [ebp-0x828]
   1921b:	push   eax
   1921c:	call   0x18b08
   19221:	test   al,al
   19223:	je     0x1922e
   19225:	mov    BYTE PTR [ebp-0x81d],0x1
   1922c:	jmp    0x1923c
   1922e:	mov    BYTE PTR [ebp-0x81d],0x1
   19235:	mov    BYTE PTR [ebp-0x81e],0x1
   1923c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19243:	jmp    0x19255
   19245:	xor    eax,eax
   19247:	inc    eax
   19248:	ret    
   19249:	mov    esp,DWORD PTR [ebp-0x18]
   1924c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19253:	xor    ebx,ebx
   19255:	push   DWORD PTR [ebp-0x82c]
   1925b:	call   0x11552
   19260:	call   eax
   19262:	cmp    BYTE PTR [ebp-0x81e],bl
   19268:	je     0x1928d
   1926a:	push   DWORD PTR [ebp-0x880]
   19270:	push   DWORD PTR [ebp-0x884]
   19276:	push   DWORD PTR [ebp-0x828]
   1927c:	push   DWORD PTR [ebp-0x824]
   19282:	call   0x18d3c
   19287:	mov    BYTE PTR [ebp-0x81d],al
   1928d:	cmp    DWORD PTR [ebp-0x824],ebx
   19293:	je     0x192a1
   19295:	push   DWORD PTR [ebp-0x824]
   1929b:	call   0x11d22
   192a0:	pop    ecx
   192a1:	mov    al,BYTE PTR [ebp-0x81d]
   192a7:	call   0x1e528
   192ac:	ret    
   192ad:	int3   
   192ae:	int3   
   192af:	int3   
   192b0:	int3   
   192b1:	int3   
   192b2:	mov    edi,edi
   192b4:	push   ebp
   192b5:	mov    ebp,esp
   192b7:	sub    esp,0xbc
   192bd:	mov    eax,ds:0x77b1c
   192c2:	xor    eax,ebp
   192c4:	mov    DWORD PTR [ebp-0x4],eax
   192c7:	push   ebx
   192c8:	push   edi
   192c9:	push   0x1f208
   192ce:	push   0xb
   192d0:	push   0x1f1f0
   192d5:	call   0x17982
   192da:	push   eax
   192db:	lea    eax,[ebp-0xbc]
   192e1:	push   eax
   192e2:	call   0x1157c
   192e7:	call   eax
   192e9:	xor    eax,eax
   192eb:	lea    edi,[ebp-0xb0]
   192f1:	stos   DWORD PTR es:[edi],eax
   192f2:	stos   DWORD PTR es:[edi],eax
   192f3:	stos   DWORD PTR es:[edi],eax
   192f4:	stos   DWORD PTR es:[edi],eax
   192f5:	xor    ebx,ebx
   192f7:	push   ebx
   192f8:	stos   DWORD PTR es:[edi],eax
   192f9:	push   ebx
   192fa:	push   ebx
   192fb:	push   0x1
   192fd:	xor    eax,eax
   192ff:	push   0x7
   19301:	push   ebx
   19302:	mov    DWORD PTR [ebp-0x94],ebx
   19308:	lea    edi,[ebp-0x90]
   1930e:	stos   DWORD PTR es:[edi],eax
   1930f:	lea    eax,[ebp-0xbc]
   19315:	mov    DWORD PTR [ebp-0xac],eax
   1931b:	push   ebx
   1931c:	lea    eax,[ebp-0x94]
   19322:	push   eax
   19323:	lea    eax,[ebp-0xb4]
   19329:	push   eax
   1932a:	push   0x89
   1932f:	lea    eax,[ebp-0x8c]
   19335:	push   eax
   19336:	mov    DWORD PTR [ebp-0x8c],ebx
   1933c:	mov    DWORD PTR [ebp-0xb4],0x18
   19346:	mov    DWORD PTR [ebp-0xb0],ebx
   1934c:	mov    DWORD PTR [ebp-0xa8],0x240
   19356:	mov    DWORD PTR [ebp-0xa4],ebx
   1935c:	mov    DWORD PTR [ebp-0xa0],ebx
   19362:	call   0x11456
   19367:	call   eax
   19369:	test   eax,eax
   1936b:	jge    0x19374
   1936d:	xor    al,al
   1936f:	jmp    0x19430
   19374:	push   esi
   19375:	mov    esi,0x20c
   1937a:	push   esi
   1937b:	call   0x11cec
   19380:	pop    ecx
   19381:	push   0x1
   19383:	mov    edi,eax
   19385:	push   esi
   19386:	push   edi
   19387:	lea    eax,[ebp-0x94]
   1938d:	push   eax
   1938e:	push   DWORD PTR [ebp-0x8c]
   19394:	cmp    edi,ebx
   19396:	setne  BYTE PTR [ebp-0x9c]
   1939d:	call   0x1142c
   193a2:	call   eax
   193a4:	push   DWORD PTR [ebp-0x8c]
   193aa:	mov    esi,eax
   193ac:	call   0x11552
   193b1:	call   eax
   193b3:	cmp    esi,ebx
   193b5:	pop    esi
   193b6:	jge    0x193c9
   193b8:	cmp    BYTE PTR [ebp-0x9c],bl
   193be:	je     0x1936d
   193c0:	push   edi
   193c1:	call   0x11d22
   193c6:	pop    ecx
   193c7:	jmp    0x1936d
   193c9:	push   0x6
   193cb:	push   0x1
   193cd:	lea    eax,[ebp-0x84]
   193d3:	push   eax
   193d4:	push   DWORD PTR [edi+0x8]
   193d7:	call   0x107b2
   193dc:	mov    ecx,0x77a08
   193e1:	lea    eax,[ebp-0x84]
   193e7:	mov    dx,WORD PTR [eax]
   193ea:	cmp    dx,WORD PTR [ecx]
   193ed:	jne    0x1940d
   193ef:	cmp    dx,bx
   193f2:	je     0x19409
   193f4:	mov    dx,WORD PTR [eax+0x2]
   193f8:	cmp    dx,WORD PTR [ecx+0x2]
   193fc:	jne    0x1940d
   193fe:	add    eax,0x4
   19401:	add    ecx,0x4
   19404:	cmp    dx,bx
   19407:	jne    0x193e7
   19409:	xor    eax,eax
   1940b:	jmp    0x19412
   1940d:	sbb    eax,eax
   1940f:	sbb    eax,0xffffffff
   19412:	cmp    eax,ebx
   19414:	sete   BYTE PTR [ebp-0x85]
   1941b:	cmp    BYTE PTR [ebp-0x9c],bl
   19421:	je     0x1942a
   19423:	push   edi
   19424:	call   0x11d22
   19429:	pop    ecx
   1942a:	mov    al,BYTE PTR [ebp-0x85]
   19430:	mov    ecx,DWORD PTR [ebp-0x4]
   19433:	pop    edi
   19434:	xor    ecx,ebp
   19436:	pop    ebx
   19437:	call   0x1e145
   1943c:	leave  
   1943d:	ret    
   1943e:	int3   
   1943f:	int3   
   19440:	int3   
   19441:	int3   
   19442:	int3   
   19443:	int3   
   19444:	call   0x1a944
   19449:	push   0x1f2a6
   1944e:	push   0x34
   19450:	push   0x1f23c
   19455:	call   0x17982
   1945a:	mov    edx,0x77cb8
   1945f:	movzx  ecx,WORD PTR [eax]
   19462:	inc    eax
   19463:	mov    WORD PTR [edx],cx
   19466:	inc    eax
   19467:	inc    edx
   19468:	inc    edx
   19469:	test   cx,cx
   1946c:	jne    0x1945f
   1946e:	ret    
   1946f:	int3   
   19470:	int3   
   19471:	int3   
   19472:	int3   
   19473:	int3   
   19474:	push   0x33c
   19479:	push   0x778f0
   1947e:	call   0x1e4e0
   19483:	mov    esi,DWORD PTR [ebp+0xc]
   19486:	mov    DWORD PTR [ebp-0x32c],esi
   1948c:	call   DWORD PTR ds:0x1f800
   19492:	xor    ebx,ebx
   19494:	cmp    BYTE PTR [ebp+0x10],bl
   19497:	jne    0x194d5
   19499:	push   esi
   1949a:	mov    ecx,DWORD PTR ds:0x77b50
   194a0:	call   0x14fda
   194a5:	mov    edi,eax
   194a7:	push   esi
   194a8:	mov    ecx,DWORD PTR ds:0x77b50
   194ae:	call   0x16380
   194b3:	mov    eax,edi
   194b5:	dec    eax
   194b6:	je     0x194ca
   194b8:	dec    eax
   194b9:	je     0x194c6
   194bb:	dec    eax
   194bc:	jne    0x196b0
   194c2:	push   0xa
   194c4:	jmp    0x194cb
   194c6:	push   0x2
   194c8:	jmp    0x194cb
   194ca:	push   ebx
   194cb:	call   0x1296c
   194d0:	jmp    0x196b0
   194d5:	mov    DWORD PTR [ebp-0x320],ebx
   194db:	xor    eax,eax
   194dd:	lea    edi,[ebp-0x326]
   194e3:	stos   DWORD PTR es:[edi],eax
   194e4:	stos   WORD PTR es:[edi],ax
   194e6:	xor    eax,eax
   194e8:	mov    WORD PTR [ebp-0x21c],ax
   194ef:	push   0x1fc
   194f4:	push   ebx
   194f5:	lea    eax,[ebp-0x21a]
   194fb:	push   eax
   194fc:	call   0x1e19e
   19501:	add    esp,0xc
   19504:	lea    eax,[ebp-0x21c]
   1950a:	mov    DWORD PTR [ebp-0x324],eax
   19510:	xor    eax,eax
   19512:	mov    WORD PTR [ebp-0x328],ax
   19519:	mov    eax,0x1fe
   1951e:	mov    WORD PTR [ebp-0x326],ax
   19525:	mov    DWORD PTR [ebp-0x34c],0x18
   1952f:	mov    DWORD PTR [ebp-0x348],ebx
   19535:	mov    DWORD PTR [ebp-0x340],0x200
   1953f:	mov    DWORD PTR [ebp-0x344],ebx
   19545:	mov    DWORD PTR [ebp-0x33c],ebx
   1954b:	mov    DWORD PTR [ebp-0x338],ebx
   19551:	mov    DWORD PTR [ebp-0x334],esi
   19557:	mov    DWORD PTR [ebp-0x330],ebx
   1955d:	lea    eax,[ebp-0x334]
   19563:	push   eax
   19564:	lea    eax,[ebp-0x34c]
   1956a:	push   eax
   1956b:	push   0x1f0fff
   19570:	lea    eax,[ebp-0x320]
   19576:	push   eax
   19577:	call   0x1125e
   1957c:	call   eax
   1957e:	test   eax,eax
   19580:	jl     0x196b0
   19586:	lea    eax,[ebp-0x328]
   1958c:	push   eax
   1958d:	push   DWORD PTR [ebp-0x320]
   19593:	call   0x11d84
   19598:	cmp    eax,ebx
   1959a:	jl     0x196a3
   195a0:	movzx  eax,WORD PTR [ebp-0x328]
   195a7:	shr    eax,1
   195a9:	xor    ecx,ecx
   195ab:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   195b3:	push   DWORD PTR [ebp-0x320]
   195b9:	call   0x11e1a
   195be:	lea    eax,[ebp-0x21c]
   195c4:	push   eax
   195c5:	call   0x10d52
   195ca:	cmp    eax,ebx
   195cc:	je     0x195f1
   195ce:	push   eax
   195cf:	push   esi
   195d0:	mov    ecx,DWORD PTR ds:0x77b50
   195d6:	call   0x16dfa
   195db:	push   DWORD PTR [ebp-0x320]
   195e1:	push   DWORD PTR [ebp-0x320]
   195e7:	call   0x11e1a
   195ec:	push   eax
   195ed:	push   esi
   195ee:	push   ebx
   195ef:	jmp    0x1966f
   195f1:	push   0x1f2e6
   195f6:	push   0x9
   195f8:	push   0x1f2d2
   195fd:	call   0x17982
   19602:	push   eax
   19603:	lea    eax,[ebp-0x328]
   19609:	push   eax
   1960a:	call   0x11e4a
   1960f:	test   al,al
   19611:	je     0x19676
   19613:	cmp    DWORD PTR ds:0x7887c,ebx
   19619:	jne    0x1964c
   1961b:	mov    DWORD PTR ds:0x7887c,0x1
   19625:	mov    DWORD PTR [ebp-0x4],ebx
   19628:	call   0x18fe8
   1962d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19634:	jmp    0x1964c
   19636:	xor    eax,eax
   19638:	inc    eax
   19639:	ret    
   1963a:	mov    esp,DWORD PTR [ebp-0x18]
   1963d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19644:	xor    ebx,ebx
   19646:	mov    esi,DWORD PTR [ebp-0x32c]
   1964c:	cmp    DWORD PTR ds:0x785a4,ebx
   19652:	jne    0x1965a
   19654:	mov    DWORD PTR ds:0x785a4,esi
   1965a:	push   DWORD PTR [ebp-0x320]
   19660:	push   DWORD PTR [ebp-0x320]
   19666:	call   0x11e1a
   1966b:	push   eax
   1966c:	push   esi
   1966d:	push   0x1
   1966f:	call   0x135d4
   19674:	jmp    0x196a3
   19676:	lea    eax,[ebp-0x31c]
   1967c:	push   eax
   1967d:	call   0x120ee
   19682:	test   al,al
   19684:	je     0x196a3
   19686:	lea    eax,[ebp-0x31c]
   1968c:	push   eax
   1968d:	lea    eax,[ebp-0x328]
   19693:	push   eax
   19694:	call   0x11e4a
   19699:	test   al,al
   1969b:	je     0x196a3
   1969d:	push   esi
   1969e:	call   0x11f9e
   196a3:	push   DWORD PTR [ebp-0x320]
   196a9:	call   0x11552
   196ae:	call   eax
   196b0:	call   0x1e528
   196b5:	ret    0xc
   196b8:	int3   
   196b9:	int3   
   196ba:	int3   
   196bb:	int3   
   196bc:	int3   
   196bd:	int3   
   196be:	mov    edi,edi
   196c0:	push   ebp
   196c1:	mov    ebp,esp
   196c3:	push   ecx
   196c4:	cli    
   196c5:	mov    eax,cr0
   196c8:	mov    DWORD PTR [ebp-0x4],eax
   196cb:	and    eax,0xfffeffff
   196d0:	mov    cr0,eax
   196d3:	push   0x1822a
   196d8:	push   DWORD PTR ds:0x784ec
   196de:	call   0x19fc4
   196e3:	push   0x0
   196e5:	push   0x19474
   196ea:	mov    ds:0x784f0,eax
   196ef:	call   0x11306
   196f4:	call   eax
   196f6:	push   0x18116
   196fb:	call   0x112b2
   19700:	call   eax
   19702:	mov    eax,DWORD PTR [ebp-0x4]
   19705:	mov    cr0,eax
   19708:	sti    
   19709:	leave  
   1970a:	ret    
   1970b:	int3   
   1970c:	int3   
   1970d:	int3   
   1970e:	int3   
   1970f:	int3   
   19710:	push   0xc
   19712:	push   0x77910
   19717:	call   0x1e1dc
   1971c:	and    DWORD PTR [ebp-0x4],0x0
   19720:	push   DWORD PTR [ebp+0xc]
   19723:	push   DWORD PTR [ebp+0x8]
   19726:	call   0x18622
   1972b:	mov    esi,eax
   1972d:	jmp    0x19742
   1972f:	xor    eax,eax
   19731:	inc    eax
   19732:	ret    
   19733:	mov    esp,DWORD PTR [ebp-0x18]
   19736:	push   0xd
   19738:	call   0x1296c
   1973d:	mov    esi,0xc0000001
   19742:	mov    DWORD PTR [ebp-0x1c],esi
   19745:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1974c:	cmp    esi,0x103
   19752:	je     0x19762
   19754:	mov    ecx,DWORD PTR [ebp+0xc]
   19757:	mov    DWORD PTR [ecx+0x18],esi
   1975a:	xor    dl,dl
   1975c:	call   DWORD PTR ds:0x1f824
   19762:	mov    eax,esi
   19764:	call   0x1e221
   19769:	ret    0x8
   1976c:	int3   
   1976d:	int3   
   1976e:	int3   
   1976f:	int3   
   19770:	int3   
   19771:	int3   
   19772:	mov    edi,edi
   19774:	push   ebp
   19775:	mov    ebp,esp
   19777:	push   esi
   19778:	mov    esi,ecx
   1977a:	mov    BYTE PTR [esi+0x8],0x0
   1977e:	call   0x14ef4
   19783:	lea    ecx,[esi+0x10]
   19786:	mov    BYTE PTR [ecx+0x8],0x0
   1978a:	call   0x148e4
   1978f:	mov    eax,DWORD PTR [ebp+0x8]
   19792:	mov    DWORD PTR [esi+0x20],eax
   19795:	mov    eax,DWORD PTR [ebp+0xc]
   19798:	mov    DWORD PTR [esi+0x24],eax
   1979b:	mov    eax,esi
   1979d:	pop    esi
   1979e:	pop    ebp
   1979f:	ret    0x8
   197a2:	int3   
   197a3:	int3   
   197a4:	int3   
   197a5:	int3   
   197a6:	int3   
   197a7:	int3   
   197a8:	push   0x854
   197ad:	push   0x77930
   197b2:	call   0x1e4e0
   197b7:	mov    esi,DWORD PTR [ebp+0x8]
   197ba:	mov    DWORD PTR [ebp-0x830],esi
   197c0:	mov    edi,DWORD PTR [ebp+0xc]
   197c3:	call   0x19444
   197c8:	call   0x11a92
   197cd:	test   eax,eax
   197cf:	je     0x19dd2
   197d5:	xor    ebx,ebx
   197d7:	mov    DWORD PTR [ebp-0x834],ebx
   197dd:	call   0x192b2
   197e2:	cmp    al,bl
   197e4:	jne    0x19a05
   197ea:	mov    DWORD PTR [ebp-0x4],ebx
   197ed:	push   ebx
   197ee:	push   0x784b8
   197f3:	call   0x119c0
   197f8:	call   eax
   197fa:	push   0x10
   197fc:	call   0x11cec
   19801:	pop    ecx
   19802:	cmp    eax,ebx
   19804:	je     0x1981d
   19806:	lea    ecx,[ebp-0x81d]
   1980c:	push   ecx
   1980d:	lea    ecx,[ebp-0x81d]
   19813:	push   ecx
   19814:	mov    ecx,eax
   19816:	call   0x16e40
   1981b:	jmp    0x1981f
   1981d:	xor    eax,eax
   1981f:	mov    ecx,eax
   19821:	mov    DWORD PTR ds:0x784e0,ecx
   19827:	call   0x16cf6
   1982c:	push   edi
   1982d:	push   0x1f570
   19832:	lea    eax,[ebp-0x41c]
   19838:	push   eax
   19839:	call   0x1e1ce
   1983e:	add    esp,0xc
   19841:	push   0xffffffff
   19843:	lea    eax,[ebp-0x41c]
   19849:	push   eax
   1984a:	lea    ecx,[ebp-0x828]
   19850:	call   0x12b6e
   19855:	lea    eax,[ebp-0x828]
   1985b:	push   eax
   1985c:	mov    ecx,DWORD PTR ds:0x784e0
   19862:	call   0x16e5a
   19867:	mov    edi,eax
   19869:	push   DWORD PTR [ebp-0x828]
   1986f:	call   0x11d22
   19874:	pop    ecx
   19875:	lea    eax,[ebp-0x83c]
   1987b:	push   eax
   1987c:	call   0x11918
   19881:	call   eax
   19883:	push   ebx
   19884:	push   0x989680
   19889:	push   DWORD PTR [ebp-0x838]
   1988f:	push   DWORD PTR [ebp-0x83c]
   19895:	call   0x1e192
   1989a:	inc    eax
   1989b:	mov    DWORD PTR [edi+0x20],eax
   1989e:	cmp    eax,ebx
   198a0:	jge    0x198a9
   198a2:	mov    DWORD PTR [edi+0x20],0x1
   198a9:	push   0xffffffff
   198ab:	push   0x1f542
   198b0:	push   0x4
   198b2:	push   0x1f53c
   198b7:	call   0x17a52
   198bc:	push   eax
   198bd:	lea    ecx,[ebp-0x828]
   198c3:	call   0x13662
   198c8:	lea    eax,[ebp-0x828]
   198ce:	push   eax
   198cf:	mov    ecx,edi
   198d1:	call   0x12a28
   198d6:	push   DWORD PTR [ebp-0x828]
   198dc:	call   0x11d22
   198e1:	mov    DWORD PTR [esp],0x1f502
   198e8:	push   0x4
   198ea:	push   0x1f4f8
   198ef:	call   0x17982
   198f4:	mov    DWORD PTR [ebp-0x824],eax
   198fa:	lea    ecx,[eax+0x2]
   198fd:	mov    dx,WORD PTR [eax]
   19900:	inc    eax
   19901:	inc    eax
   19902:	cmp    dx,bx
   19905:	jne    0x198fd
   19907:	sub    eax,ecx
   19909:	sar    eax,1
   1990b:	add    eax,eax
   1990d:	mov    WORD PTR [ebp-0x826],ax
   19914:	mov    WORD PTR [ebp-0x828],ax
   1991b:	mov    DWORD PTR [ebp-0x854],0x18
   19925:	mov    DWORD PTR [ebp-0x850],ebx
   1992b:	mov    DWORD PTR [ebp-0x848],0x40
   19935:	lea    eax,[ebp-0x828]
   1993b:	mov    DWORD PTR [ebp-0x84c],eax
   19941:	mov    DWORD PTR [ebp-0x844],ebx
   19947:	mov    DWORD PTR [ebp-0x840],ebx
   1994d:	mov    eax,DWORD PTR [ebp-0x824]
   19953:	lea    ecx,[eax+0x2]
   19956:	mov    dx,WORD PTR [eax]
   19959:	inc    eax
   1995a:	inc    eax
   1995b:	cmp    dx,bx
   1995e:	jne    0x19956
   19960:	sub    eax,ecx
   19962:	sar    eax,1
   19964:	mov    DWORD PTR [ebp-0x834],eax
   1996a:	push   0xffffffff
   1996c:	push   0x1f4ba
   19971:	push   0x8
   19973:	push   0x1f4b0
   19978:	call   0x17a52
   1997d:	push   eax
   1997e:	lea    ecx,[ebp-0x828]
   19984:	call   0x13662
   19989:	lea    ecx,[edi+0x8]
   1998c:	lea    eax,[ebp-0x828]
   19992:	push   eax
   19993:	call   0x12a28
   19998:	push   DWORD PTR [ebp-0x828]
   1999e:	call   0x11d22
   199a3:	pop    ecx
   199a4:	push   0xffffffff
   199a6:	push   0x1e5e8
   199ab:	lea    ecx,[ebp-0x828]
   199b1:	call   0x12b6e
   199b6:	lea    eax,[ebp-0x828]
   199bc:	push   eax
   199bd:	lea    ecx,[edi+0x10]
   199c0:	call   0x12a28
   199c5:	push   DWORD PTR [ebp-0x828]
   199cb:	call   0x11d22
   199d0:	pop    ecx
   199d1:	lea    eax,[edi+0x8]
   199d4:	push   eax
   199d5:	lea    ecx,[edi+0x18]
   199d8:	call   0x12a28
   199dd:	mov    eax,DWORD PTR [edi+0x20]
   199e0:	or     DWORD PTR [ebp-0x834],eax
   199e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   199ed:	jmp    0x19a05
   199ef:	xor    eax,eax
   199f1:	inc    eax
   199f2:	ret    
   199f3:	mov    esp,DWORD PTR [ebp-0x18]
   199f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   199fd:	xor    ebx,ebx
   199ff:	mov    esi,DWORD PTR [ebp-0x830]
   19a05:	cmp    DWORD PTR [ebp-0x834],ebx
   19a0b:	jne    0x19dd2
   19a11:	xor    eax,eax
   19a13:	lea    edi,[ebp-0x844]
   19a19:	stos   DWORD PTR es:[edi],eax
   19a1a:	stos   DWORD PTR es:[edi],eax
   19a1b:	mov    DWORD PTR [ebp-0x848],0xc
   19a25:	mov    DWORD PTR [ebp-0x844],0x2
   19a2f:	mov    BYTE PTR [ebp-0x840],bl
   19a35:	mov    BYTE PTR [ebp-0x83f],bl
   19a3b:	push   0x77b78
   19a40:	push   ebx
   19a41:	lea    eax,[ebp-0x848]
   19a47:	push   eax
   19a48:	call   0x11a68
   19a4d:	call   eax
   19a4f:	push   eax
   19a50:	call   0x118ee
   19a55:	call   eax
   19a57:	push   0x10
   19a59:	call   0x11cec
   19a5e:	pop    ecx
   19a5f:	cmp    eax,ebx
   19a61:	je     0x19a7f
   19a63:	lea    ecx,[ebp-0x81d]
   19a69:	push   ecx
   19a6a:	lea    ecx,[ebp-0x81d]
   19a70:	push   ecx
   19a71:	mov    ecx,eax
   19a73:	call   0x16e40
   19a78:	mov    ds:0x784e0,eax
   19a7d:	jmp    0x19a85
   19a7f:	mov    DWORD PTR ds:0x784e0,ebx
   19a85:	push   0x2c
   19a87:	call   0x11cec
   19a8c:	pop    ecx
   19a8d:	cmp    eax,ebx
   19a8f:	je     0x19aa6
   19a91:	push   0x96
   19a96:	push   0x14
   19a98:	mov    ecx,eax
   19a9a:	call   0x17b48
   19a9f:	mov    ds:0x784e8,eax
   19aa4:	jmp    0x19aac
   19aa6:	mov    DWORD PTR ds:0x784e8,ebx
   19aac:	push   0x10
   19aae:	call   0x11cec
   19ab3:	pop    ecx
   19ab4:	cmp    eax,ebx
   19ab6:	je     0x19ad4
   19ab8:	lea    ecx,[ebp-0x81d]
   19abe:	push   ecx
   19abf:	lea    ecx,[ebp-0x81d]
   19ac5:	push   ecx
   19ac6:	mov    ecx,eax
   19ac8:	call   0x16c36
   19acd:	mov    ds:0x77b28,eax
   19ad2:	jmp    0x19ada
   19ad4:	mov    DWORD PTR ds:0x77b28,ebx
   19ada:	push   0x10
   19adc:	call   0x11cec
   19ae1:	pop    ecx
   19ae2:	cmp    eax,ebx
   19ae4:	je     0x19b02
   19ae6:	lea    ecx,[ebp-0x81d]
   19aec:	push   ecx
   19aed:	lea    ecx,[ebp-0x81d]
   19af3:	push   ecx
   19af4:	mov    ecx,eax
   19af6:	call   0x16f04
   19afb:	mov    ds:0x77bb4,eax
   19b00:	jmp    0x19b08
   19b02:	mov    DWORD PTR ds:0x77bb4,ebx
   19b08:	push   0x28
   19b0a:	call   0x11cec
   19b0f:	pop    ecx
   19b10:	cmp    eax,ebx
   19b12:	je     0x19b26
   19b14:	push   0x64
   19b16:	push   0x14
   19b18:	mov    ecx,eax
   19b1a:	call   0x19772
   19b1f:	mov    ds:0x77b54,eax
   19b24:	jmp    0x19b2c
   19b26:	mov    DWORD PTR ds:0x77b54,ebx
   19b2c:	push   0x20
   19b2e:	call   0x11cec
   19b33:	pop    ecx
   19b34:	cmp    eax,ebx
   19b36:	je     0x19b46
   19b38:	mov    ecx,eax
   19b3a:	call   0x16bd6
   19b3f:	mov    ds:0x77b50,eax
   19b44:	jmp    0x19b4c
   19b46:	mov    DWORD PTR ds:0x77b50,ebx
   19b4c:	call   0x12944
   19b51:	call   0x1bca6
   19b56:	call   0x17280
   19b5b:	mov    edi,0x1f4a0
   19b60:	push   edi
   19b61:	call   0x178cc
   19b66:	push   eax
   19b67:	push   0x1f47a
   19b6c:	push   0xa
   19b6e:	push   0x1f464
   19b73:	call   0x17982
   19b78:	push   eax
   19b79:	lea    eax,[ebp-0x41c]
   19b7f:	push   eax
   19b80:	call   0x1e1c2
   19b85:	add    esp,0xc
   19b88:	lea    eax,[ebp-0x41c]
   19b8e:	push   eax
   19b8f:	lea    eax,[ebp-0x85c]
   19b95:	push   eax
   19b96:	call   0x1157c
   19b9b:	call   eax
   19b9d:	push   edi
   19b9e:	call   0x178cc
   19ba3:	push   eax
   19ba4:	push   0x1f426
   19ba9:	push   0xe
   19bab:	push   0x1f408
   19bb0:	call   0x17982
   19bb5:	push   eax
   19bb6:	lea    eax,[ebp-0x81c]
   19bbc:	push   eax
   19bbd:	call   0x1e1c2
   19bc2:	add    esp,0xc
   19bc5:	lea    eax,[ebp-0x81c]
   19bcb:	push   eax
   19bcc:	lea    eax,[ebp-0x864]
   19bd2:	push   eax
   19bd3:	call   0x1157c
   19bd8:	call   eax
   19bda:	push   0x78524
   19bdf:	push   ebx
   19be0:	push   0x100
   19be5:	push   0x22
   19be7:	lea    eax,[ebp-0x85c]
   19bed:	push   eax
   19bee:	push   ebx
   19bef:	push   esi
   19bf0:	call   0x118c4
   19bf5:	call   eax
   19bf7:	cmp    eax,ebx
   19bf9:	jl     0x19dd4
   19bff:	mov    eax,0x19710
   19c04:	mov    DWORD PTR [esi+0x94],eax
   19c0a:	mov    DWORD PTR [esi+0x90],eax
   19c10:	mov    DWORD PTR [esi+0xa4],eax
   19c16:	mov    DWORD PTR [esi+0x70],eax
   19c19:	mov    DWORD PTR [esi+0x48],eax
   19c1c:	mov    DWORD PTR [esi+0x44],eax
   19c1f:	mov    DWORD PTR [esi+0x40],eax
   19c22:	mov    DWORD PTR [esi+0x38],eax
   19c25:	mov    eax,ds:0x78524
   19c2a:	or     DWORD PTR [eax+0x1c],0x4
   19c2e:	lea    eax,[ebp-0x85c]
   19c34:	push   eax
   19c35:	lea    eax,[ebp-0x864]
   19c3b:	push   eax
   19c3c:	call   0x1189a
   19c41:	call   eax
   19c43:	mov    DWORD PTR [ebp-0x830],eax
   19c49:	cmp    eax,ebx
   19c4b:	jge    0x19c62
   19c4d:	push   DWORD PTR [esi+0x4]
   19c50:	call   0x1174a
   19c55:	call   eax
   19c57:	mov    eax,DWORD PTR [ebp-0x830]
   19c5d:	jmp    0x19dd4
   19c62:	push   ebx
   19c63:	push   0x784b8
   19c68:	call   0x119c0
   19c6d:	call   eax
   19c6f:	push   ebx
   19c70:	push   0x77b58
   19c75:	call   0x119c0
   19c7a:	call   eax
   19c7c:	push   ebx
   19c7d:	push   0x77b2c
   19c82:	call   0x119c0
   19c87:	call   eax
   19c89:	push   0x8000000
   19c8e:	push   0x1f3da
   19c93:	push   0x9
   19c95:	push   0x1f052
   19c9a:	call   0x17a52
   19c9f:	push   eax
   19ca0:	lea    eax,[ebp-0x82c]
   19ca6:	push   eax
   19ca7:	call   0x1a20e
   19cac:	push   DWORD PTR [ebp-0x82c]
   19cb2:	call   0x11480
   19cb7:	call   eax
   19cb9:	mov    DWORD PTR [ebp-0x838],eax
   19cbf:	push   ebx
   19cc0:	push   0x1f3b4
   19cc5:	push   0x16
   19cc7:	push   0x1f39c
   19ccc:	call   0x17a52
   19cd1:	push   eax
   19cd2:	push   DWORD PTR [ebp-0x82c]
   19cd8:	call   0x1a0f4
   19cdd:	push   eax
   19cde:	push   DWORD PTR [ebp-0x838]
   19ce4:	call   0x1a09a
   19ce9:	mov    edi,eax
   19ceb:	add    edi,DWORD PTR [ebp-0x82c]
   19cf1:	mov    esi,0x1e5ea
   19cf6:	push   esi
   19cf7:	call   0x11200
   19cfc:	mov    DWORD PTR [ebp-0x824],eax
   19d02:	push   edi
   19d03:	call   0x1a042
   19d08:	mov    ecx,DWORD PTR [ebp-0x824]
   19d0e:	mov    ecx,DWORD PTR [ecx]
   19d10:	mov    eax,DWORD PTR [ecx+eax*4]
   19d13:	mov    ds:0x784e4,eax
   19d18:	push   ebx
   19d19:	push   0x1f376
   19d1e:	push   0x14
   19d20:	push   0x1f360
   19d25:	call   0x17a52
   19d2a:	push   eax
   19d2b:	push   DWORD PTR [ebp-0x82c]
   19d31:	call   0x1a0f4
   19d36:	push   eax
   19d37:	push   DWORD PTR [ebp-0x838]
   19d3d:	call   0x1a09a
   19d42:	mov    edi,eax
   19d44:	add    edi,DWORD PTR [ebp-0x82c]
   19d4a:	push   esi
   19d4b:	call   0x11200
   19d50:	mov    DWORD PTR [ebp-0x824],eax
   19d56:	push   edi
   19d57:	call   0x1a042
   19d5c:	mov    ecx,DWORD PTR [ebp-0x824]
   19d62:	mov    ecx,DWORD PTR [ecx]
   19d64:	mov    eax,DWORD PTR [ecx+eax*4]
   19d67:	mov    ds:0x784d8,eax
   19d6c:	push   ebx
   19d6d:	push   0x1f322
   19d72:	push   0xe
   19d74:	push   0x1f312
   19d79:	call   0x17a52
   19d7e:	push   eax
   19d7f:	push   DWORD PTR [ebp-0x82c]
   19d85:	call   0x1a0f4
   19d8a:	push   eax
   19d8b:	push   DWORD PTR [ebp-0x838]
   19d91:	call   0x1a09a
   19d96:	mov    edi,eax
   19d98:	add    edi,DWORD PTR [ebp-0x82c]
   19d9e:	push   esi
   19d9f:	call   0x11200
   19da4:	mov    esi,eax
   19da6:	push   edi
   19da7:	call   0x1a042
   19dac:	mov    ecx,DWORD PTR [esi]
   19dae:	mov    eax,DWORD PTR [ecx+eax*4]
   19db1:	mov    ds:0x784ec,eax
   19db6:	push   DWORD PTR [ebp-0x82c]
   19dbc:	call   0x1a35e
   19dc1:	call   0x196be
   19dc6:	mov    BYTE PTR ds:0x78528,0x1
   19dcd:	jmp    0x19c57
   19dd2:	xor    eax,eax
   19dd4:	call   0x1e528
   19dd9:	ret    0x8
   19ddc:	int3   
   19ddd:	int3   
   19dde:	int3   
   19ddf:	int3   
   19de0:	int3   
   19de1:	int3   
   19de2:	mov    edi,edi
   19de4:	push   ebp
   19de5:	mov    ebp,esp
   19de7:	push   ecx
   19de8:	mov    ecx,DWORD PTR [ebp+0x8]
   19deb:	mov    eax,DWORD PTR [ecx+0x4]
   19dee:	mov    edx,DWORD PTR [ebp+0xc]
   19df1:	push   ebx
   19df2:	mov    ebx,DWORD PTR [edx+0x4]
   19df5:	push   esi
   19df6:	push   edi
   19df7:	mov    DWORD PTR [ebp-0x4],eax
   19dfa:	mov    DWORD PTR [ebp+0x8],eax
   19dfd:	cmp    eax,ebx
   19dff:	jbe    0x19e04
   19e01:	mov    DWORD PTR [ebp+0x8],ebx
   19e04:	xor    eax,eax
   19e06:	cmp    DWORD PTR [ebp+0x8],eax
   19e09:	jbe    0x19e21
   19e0b:	mov    esi,DWORD PTR [ecx]
   19e0d:	mov    edi,DWORD PTR [edx]
   19e0f:	mov    cl,BYTE PTR [esi+eax*1]
   19e12:	mov    dl,BYTE PTR [edi+eax*1]
   19e15:	cmp    cl,dl
   19e17:	jl     0x19e2e
   19e19:	jg     0x19e32
   19e1b:	inc    eax
   19e1c:	cmp    eax,DWORD PTR [ebp+0x8]
   19e1f:	jb     0x19e0f
   19e21:	cmp    DWORD PTR [ebp-0x4],ebx
   19e24:	setb   al
   19e27:	pop    edi
   19e28:	pop    esi
   19e29:	pop    ebx
   19e2a:	leave  
   19e2b:	ret    0x8
   19e2e:	mov    al,0x1
   19e30:	jmp    0x19e27
   19e32:	xor    al,al
   19e34:	jmp    0x19e27
   19e36:	int3   
   19e37:	int3   
   19e38:	int3   
   19e39:	int3   
   19e3a:	int3   
   19e3b:	int3   
   19e3c:	mov    edi,edi
   19e3e:	push   ebp
   19e3f:	mov    ebp,esp
   19e41:	mov    eax,DWORD PTR [ebp+0x8]
   19e44:	mov    ecx,DWORD PTR [eax+0x4]
   19e47:	mov    edx,DWORD PTR [ebp+0xc]
   19e4a:	cmp    ecx,DWORD PTR [edx+0x4]
   19e4d:	je     0x19e53
   19e4f:	xor    al,al
   19e51:	jmp    0x19e62
   19e53:	push   esi
   19e54:	mov    esi,DWORD PTR [eax]
   19e56:	push   edi
   19e57:	mov    edi,DWORD PTR [edx]
   19e59:	xor    eax,eax
   19e5b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19e5d:	pop    edi
   19e5e:	sete   al
   19e61:	pop    esi
   19e62:	pop    ebp
   19e63:	ret    0x8
   19e66:	int3   
   19e67:	int3   
   19e68:	int3   
   19e69:	int3   
   19e6a:	int3   
   19e6b:	int3   
   19e6c:	mov    edi,edi
   19e6e:	push   ebp
   19e6f:	mov    ebp,esp
   19e71:	push   DWORD PTR [ebp+0xc]
   19e74:	push   DWORD PTR [ebp+0x8]
   19e77:	call   0x19e3c
   19e7c:	xor    ecx,ecx
   19e7e:	test   al,al
   19e80:	sete   cl
   19e83:	mov    al,cl
   19e85:	pop    ebp
   19e86:	ret    0x8
   19e89:	int3   
   19e8a:	int3   
   19e8b:	int3   
   19e8c:	int3   
   19e8d:	int3   
   19e8e:	mov    edi,edi
   19e90:	push   ebp
   19e91:	mov    ebp,esp
   19e93:	push   ecx
   19e94:	mov    ecx,DWORD PTR [ebp+0x8]
   19e97:	mov    eax,DWORD PTR [ebp+0xc]
   19e9a:	push   ebx
   19e9b:	mov    ebx,DWORD PTR [eax+0x4]
   19e9e:	push   esi
   19e9f:	push   edi
   19ea0:	mov    edi,DWORD PTR [ecx+0x4]
   19ea3:	mov    DWORD PTR [ebp-0x4],edi
   19ea6:	cmp    edi,ebx
   19ea8:	jbe    0x19eac
   19eaa:	mov    edi,ebx
   19eac:	and    DWORD PTR [ebp+0x8],0x0
   19eb0:	test   edi,edi
   19eb2:	jbe    0x19ed2
   19eb4:	mov    eax,DWORD PTR [eax]
   19eb6:	mov    ecx,DWORD PTR [ecx]
   19eb8:	sub    ecx,eax
   19eba:	movzx  edx,WORD PTR [ecx+eax*1]
   19ebe:	movzx  esi,WORD PTR [eax]
   19ec1:	cmp    dx,si
   19ec4:	jb     0x19edf
   19ec6:	ja     0x19ee3
   19ec8:	inc    DWORD PTR [ebp+0x8]
   19ecb:	inc    eax
   19ecc:	inc    eax
   19ecd:	cmp    DWORD PTR [ebp+0x8],edi
   19ed0:	jb     0x19eba
   19ed2:	cmp    DWORD PTR [ebp-0x4],ebx
   19ed5:	setb   al
   19ed8:	pop    edi
   19ed9:	pop    esi
   19eda:	pop    ebx
   19edb:	leave  
   19edc:	ret    0x8
   19edf:	mov    al,0x1
   19ee1:	jmp    0x19ed8
   19ee3:	xor    al,al
   19ee5:	jmp    0x19ed8
   19ee7:	int3   
   19ee8:	int3   
   19ee9:	int3   
   19eea:	int3   
   19eeb:	int3   
   19eec:	mov    edi,edi
   19eee:	push   ebp
   19eef:	mov    ebp,esp
   19ef1:	pop    ebp
   19ef2:	jmp    0x19de2
   19ef7:	int3   
   19ef8:	int3   
   19ef9:	int3   
   19efa:	int3   
   19efb:	int3   
   19efc:	mov    edi,edi
   19efe:	push   ebp
   19eff:	mov    ebp,esp
   19f01:	pop    ebp
   19f02:	jmp    0x19e3c
   19f07:	int3   
   19f08:	int3   
   19f09:	int3   
   19f0a:	int3   
   19f0b:	int3   
   19f0c:	mov    edi,edi
   19f0e:	push   ebp
   19f0f:	mov    ebp,esp
   19f11:	pop    ebp
   19f12:	jmp    0x19e6c
   19f17:	int3   
   19f18:	int3   
   19f19:	int3   
   19f1a:	int3   
   19f1b:	int3   
   19f1c:	mov    edi,edi
   19f1e:	push   ebp
   19f1f:	mov    ebp,esp
   19f21:	pop    ebp
   19f22:	jmp    0x19e8e
   19f27:	int3   
   19f28:	int3   
   19f29:	int3   
   19f2a:	int3   
   19f2b:	int3   
   19f2c:	mov    edi,edi
   19f2e:	push   ebp
   19f2f:	mov    ebp,esp
   19f31:	mov    eax,DWORD PTR [ebp+0x8]
   19f34:	mov    cl,BYTE PTR [ebp+0xc]
   19f37:	mov    BYTE PTR [eax],cl
   19f39:	inc    eax
   19f3a:	pop    ebp
   19f3b:	ret    0x8
   19f3e:	int3   
   19f3f:	int3   
   19f40:	int3   
   19f41:	int3   
   19f42:	int3   
   19f43:	int3   
   19f44:	mov    edi,edi
   19f46:	push   ebp
   19f47:	mov    ebp,esp
   19f49:	mov    eax,DWORD PTR [ebp+0x8]
   19f4c:	mov    ecx,DWORD PTR [ebp+0xc]
   19f4f:	mov    DWORD PTR [eax],ecx
   19f51:	add    eax,0x4
   19f54:	pop    ebp
   19f55:	ret    0x8
   19f58:	int3   
   19f59:	int3   
   19f5a:	int3   
   19f5b:	int3   
   19f5c:	int3   
   19f5d:	int3   
   19f5e:	mov    edi,edi
   19f60:	push   ebp
   19f61:	mov    ebp,esp
   19f63:	mov    eax,DWORD PTR [ebp+0x8]
   19f66:	mov    cx,WORD PTR [ebp+0xc]
   19f6a:	mov    WORD PTR [eax],cx
   19f6d:	add    eax,0x2
   19f70:	pop    ebp
   19f71:	ret    0x8
   19f74:	int3   
   19f75:	int3   
   19f76:	int3   
   19f77:	int3   
   19f78:	int3   
   19f79:	int3   
   19f7a:	mov    edi,edi
   19f7c:	push   ebp
   19f7d:	mov    ebp,esp
   19f7f:	push   esi
   19f80:	mov    esi,DWORD PTR [ebp+0x10]
   19f83:	push   edi
   19f84:	mov    edi,DWORD PTR [ebp+0x8]
   19f87:	push   esi
   19f88:	push   DWORD PTR [ebp+0xc]
   19f8b:	push   edi
   19f8c:	call   0x1e1b6
   19f91:	add    esp,0xc
   19f94:	lea    eax,[edi+esi*1]
   19f97:	pop    edi
   19f98:	pop    esi
   19f99:	pop    ebp
   19f9a:	ret    0xc
   19f9d:	int3   
   19f9e:	int3   
   19f9f:	int3   
   19fa0:	int3   
   19fa1:	int3   
   19fa2:	mov    edi,edi
   19fa4:	push   ebp
   19fa5:	mov    ebp,esp
   19fa7:	mov    eax,DWORD PTR [ebp+0xc]
   19faa:	mov    ecx,DWORD PTR [ebp+0x8]
   19fad:	sub    ecx,eax
   19faf:	sub    ecx,0x5
   19fb2:	mov    DWORD PTR [eax+0x1],ecx
   19fb5:	mov    BYTE PTR [eax],0xe9
   19fb8:	add    eax,0x5
   19fbb:	pop    ebp
   19fbc:	ret    0x8
   19fbf:	int3   
   19fc0:	int3   
   19fc1:	int3   
   19fc2:	int3   
   19fc3:	int3   
   19fc4:	mov    edi,edi
   19fc6:	push   ebp
   19fc7:	mov    ebp,esp
   19fc9:	push   ecx
   19fca:	push   ebx
   19fcb:	mov    ebx,DWORD PTR [ebp+0x8]
   19fce:	and    DWORD PTR [ebp+0x8],0x0
   19fd2:	push   edi
   19fd3:	mov    edi,ebx
   19fd5:	test   ebx,ebx
   19fd7:	jne    0x19fdd
   19fd9:	xor    eax,eax
   19fdb:	jmp    0x1a037
   19fdd:	push   esi
   19fde:	push   0x20736649
   19fe3:	push   0x80
   19fe8:	push   0x0
   19fea:	call   DWORD PTR ds:0x1f830
   19ff0:	mov    esi,eax
   19ff2:	mov    DWORD PTR [ebp-0x4],esi
   19ff5:	push   0x0
   19ff7:	push   edi
   19ff8:	push   esi
   19ff9:	call   0x1a6e0
   19ffe:	mov    ecx,eax
   1a000:	sub    ecx,edi
   1a002:	add    DWORD PTR [ebp+0x8],ecx
   1a005:	add    esi,ecx
   1a007:	cmp    DWORD PTR [ebp+0x8],0x5
   1a00b:	mov    edi,eax
   1a00d:	jb     0x19ff5
   1a00f:	push   DWORD PTR [ebp+0x8]
   1a012:	push   0x90
   1a017:	push   ebx
   1a018:	call   0x1e19e
   1a01d:	add    esp,0xc
   1a020:	push   esi
   1a021:	lea    eax,[ebx+0x5]
   1a024:	push   eax
   1a025:	call   0x19fa2
   1a02a:	push   ebx
   1a02b:	push   DWORD PTR [ebp+0xc]
   1a02e:	call   0x19fa2
   1a033:	mov    eax,DWORD PTR [ebp-0x4]
   1a036:	pop    esi
   1a037:	pop    edi
   1a038:	pop    ebx
   1a039:	leave  
   1a03a:	ret    0x8
   1a03d:	int3   
   1a03e:	int3   
   1a03f:	int3   
   1a040:	int3   
   1a041:	int3   
   1a042:	mov    edi,edi
   1a044:	push   ebp
   1a045:	mov    ebp,esp
   1a047:	mov    eax,DWORD PTR [ebp+0x8]
   1a04a:	mov    eax,DWORD PTR [eax+0x1]
   1a04d:	pop    ebp
   1a04e:	ret    0x4
   1a051:	int3   
   1a052:	int3   
   1a053:	int3   
   1a054:	int3   
   1a055:	int3   
   1a056:	mov    edi,edi
   1a058:	push   ebp
   1a059:	mov    ebp,esp
   1a05b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a05e:	movzx  eax,WORD PTR [ecx+0x14]
   1a062:	lea    eax,[eax+ecx*1+0x18]
   1a066:	movzx  ecx,WORD PTR [ecx+0x6]
   1a06a:	push   esi
   1a06b:	xor    esi,esi
   1a06d:	push   edi
   1a06e:	test   ecx,ecx
   1a070:	jbe    0x1a08c
   1a072:	mov    edx,DWORD PTR [eax+0xc]
   1a075:	cmp    DWORD PTR [ebp+0xc],edx
   1a078:	jb     0x1a084
   1a07a:	mov    edi,DWORD PTR [eax+0x8]
   1a07d:	add    edi,edx
   1a07f:	cmp    DWORD PTR [ebp+0xc],edi
   1a082:	jb     0x1a08e
   1a084:	add    eax,0x28
   1a087:	inc    esi
   1a088:	cmp    esi,ecx
   1a08a:	jb     0x1a072
   1a08c:	xor    eax,eax
   1a08e:	pop    edi
   1a08f:	pop    esi
   1a090:	pop    ebp
   1a091:	ret    0x8
   1a094:	int3   
   1a095:	int3   
   1a096:	int3   
   1a097:	int3   
   1a098:	int3   
   1a099:	int3   
   1a09a:	mov    edi,edi
   1a09c:	push   ebp
   1a09d:	mov    ebp,esp
   1a09f:	push   esi
   1a0a0:	push   DWORD PTR [ebp+0xc]
   1a0a3:	mov    esi,DWORD PTR [ebp+0x8]
   1a0a6:	push   esi
   1a0a7:	call   0x1a056
   1a0ac:	mov    ecx,eax
   1a0ae:	test   ecx,ecx
   1a0b0:	je     0x1a0c3
   1a0b2:	mov    eax,DWORD PTR [esi+0x3c]
   1a0b5:	dec    eax
   1a0b6:	not    eax
   1a0b8:	and    eax,DWORD PTR [ecx+0x14]
   1a0bb:	sub    eax,DWORD PTR [ecx+0xc]
   1a0be:	add    eax,DWORD PTR [ebp+0xc]
   1a0c1:	jmp    0x1a0c6
   1a0c3:	mov    eax,DWORD PTR [ebp+0xc]
   1a0c6:	pop    esi
   1a0c7:	pop    ebp
   1a0c8:	ret    0x8
   1a0cb:	int3   
   1a0cc:	int3   
   1a0cd:	int3   
   1a0ce:	int3   
   1a0cf:	int3   
   1a0d0:	mov    edi,edi
   1a0d2:	push   ebp
   1a0d3:	mov    ebp,esp
   1a0d5:	cmp    DWORD PTR [ebp+0x10],0x0
   1a0d9:	je     0x1a0e0
   1a0db:	mov    eax,DWORD PTR [ebp+0xc]
   1a0de:	jmp    0x1a0eb
   1a0e0:	push   DWORD PTR [ebp+0xc]
   1a0e3:	push   DWORD PTR [ebp+0x8]
   1a0e6:	call   0x1a09a
   1a0eb:	pop    ebp
   1a0ec:	ret    0xc
   1a0ef:	int3   
   1a0f0:	int3   
   1a0f1:	int3   
   1a0f2:	int3   
   1a0f3:	int3   
   1a0f4:	mov    edi,edi
   1a0f6:	push   ebp
   1a0f7:	mov    ebp,esp
   1a0f9:	sub    esp,0x1c
   1a0fc:	push   ebx
   1a0fd:	push   esi
   1a0fe:	mov    esi,DWORD PTR [ebp+0x8]
   1a101:	push   edi
   1a102:	push   esi
   1a103:	call   0x11480
   1a108:	call   eax
   1a10a:	mov    ebx,eax
   1a10c:	lea    eax,[ebp-0x14]
   1a10f:	push   eax
   1a110:	push   0x0
   1a112:	push   0x0
   1a114:	push   esi
   1a115:	mov    DWORD PTR [ebp-0x4],ebx
   1a118:	call   0x114aa
   1a11d:	call   eax
   1a11f:	mov    edi,eax
   1a121:	mov    eax,DWORD PTR [ebx+0x50]
   1a124:	mov    ecx,edi
   1a126:	sub    ecx,esi
   1a128:	cmp    eax,ecx
   1a12a:	jb     0x1a17b
   1a12c:	mov    ecx,DWORD PTR [ebp-0x14]
   1a12f:	sub    ecx,esi
   1a131:	add    ecx,edi
   1a133:	cmp    eax,ecx
   1a135:	jb     0x1a17b
   1a137:	push   DWORD PTR [ebp+0x10]
   1a13a:	push   DWORD PTR [edi+0x20]
   1a13d:	push   ebx
   1a13e:	call   0x1a0d0
   1a143:	push   DWORD PTR [ebp+0x10]
   1a146:	mov    ebx,eax
   1a148:	push   DWORD PTR [edi+0x1c]
   1a14b:	add    ebx,esi
   1a14d:	push   DWORD PTR [ebp-0x4]
   1a150:	call   0x1a0d0
   1a155:	push   DWORD PTR [ebp+0x10]
   1a158:	add    eax,esi
   1a15a:	push   DWORD PTR [edi+0x24]
   1a15d:	mov    DWORD PTR [ebp-0x1c],eax
   1a160:	push   DWORD PTR [ebp-0x4]
   1a163:	call   0x1a0d0
   1a168:	and    DWORD PTR [ebp-0xc],0x0
   1a16c:	add    eax,esi
   1a16e:	mov    esi,DWORD PTR [edi+0x18]
   1a171:	mov    DWORD PTR [ebp-0x18],eax
   1a174:	mov    DWORD PTR [ebp-0x8],esi
   1a177:	test   esi,esi
   1a179:	jg     0x1a187
   1a17b:	xor    eax,eax
   1a17d:	pop    edi
   1a17e:	pop    esi
   1a17f:	pop    ebx
   1a180:	leave  
   1a181:	ret    0xc
   1a184:	mov    esi,DWORD PTR [ebp-0x8]
   1a187:	mov    eax,DWORD PTR [ebp-0xc]
   1a18a:	push   DWORD PTR [ebp+0x10]
   1a18d:	add    esi,eax
   1a18f:	mov    eax,DWORD PTR [ebp+0xc]
   1a192:	sar    esi,1
   1a194:	push   DWORD PTR [ebx+esi*4]
   1a197:	mov    DWORD PTR [ebp-0x10],eax
   1a19a:	push   DWORD PTR [ebp-0x4]
   1a19d:	call   0x1a0d0
   1a1a2:	add    eax,DWORD PTR [ebp+0x8]
   1a1a5:	mov    cl,BYTE PTR [eax]
   1a1a7:	mov    edx,DWORD PTR [ebp-0x10]
   1a1aa:	cmp    cl,BYTE PTR [edx]
   1a1ac:	jne    0x1a1c9
   1a1ae:	test   cl,cl
   1a1b0:	je     0x1a1c5
   1a1b2:	mov    cl,BYTE PTR [eax+0x1]
   1a1b5:	cmp    cl,BYTE PTR [edx+0x1]
   1a1b8:	jne    0x1a1c9
   1a1ba:	inc    eax
   1a1bb:	inc    eax
   1a1bc:	inc    edx
   1a1bd:	inc    edx
   1a1be:	mov    DWORD PTR [ebp-0x10],edx
   1a1c1:	test   cl,cl
   1a1c3:	jne    0x1a1a5
   1a1c5:	xor    eax,eax
   1a1c7:	jmp    0x1a1ce
   1a1c9:	sbb    eax,eax
   1a1cb:	sbb    eax,0xffffffff
   1a1ce:	test   eax,eax
   1a1d0:	je     0x1a1e7
   1a1d2:	jge    0x1a1da
   1a1d4:	inc    esi
   1a1d5:	mov    DWORD PTR [ebp-0xc],esi
   1a1d8:	jmp    0x1a1dd
   1a1da:	mov    DWORD PTR [ebp-0x8],esi
   1a1dd:	mov    eax,DWORD PTR [ebp-0x8]
   1a1e0:	cmp    DWORD PTR [ebp-0xc],eax
   1a1e3:	jl     0x1a184
   1a1e5:	jmp    0x1a17b
   1a1e7:	mov    eax,DWORD PTR [ebp-0x18]
   1a1ea:	movzx  eax,WORD PTR [eax+esi*2]
   1a1ee:	mov    ecx,DWORD PTR [ebp-0x1c]
   1a1f1:	mov    ecx,DWORD PTR [ecx+eax*4]
   1a1f4:	mov    eax,ecx
   1a1f6:	sub    eax,edi
   1a1f8:	add    eax,DWORD PTR [ebp+0x8]
   1a1fb:	cmp    eax,DWORD PTR [ebp-0x14]
   1a1fe:	sbb    eax,eax
   1a200:	not    eax
   1a202:	and    eax,ecx
   1a204:	jmp    0x1a17d
   1a209:	int3   
   1a20a:	int3   
   1a20b:	int3   
   1a20c:	int3   
   1a20d:	int3   
   1a20e:	mov    edi,edi
   1a210:	push   ebp
   1a211:	mov    ebp,esp
   1a213:	sub    esp,0x814
   1a219:	mov    eax,ds:0x77b1c
   1a21e:	xor    eax,ebp
   1a220:	mov    DWORD PTR [ebp-0x4],eax
   1a223:	mov    ecx,DWORD PTR [ebp+0xc]
   1a226:	push   ebx
   1a227:	mov    ebx,DWORD PTR [ebp+0x8]
   1a22a:	push   esi
   1a22b:	push   edi
   1a22c:	xor    esi,esi
   1a22e:	xor    eax,eax
   1a230:	push   ecx
   1a231:	mov    DWORD PTR [ebp-0x7ec],esi
   1a237:	lea    edi,[ebp-0x7e8]
   1a23d:	stos   DWORD PTR es:[edi],eax
   1a23e:	lea    eax,[ebp-0x7d4]
   1a244:	push   0x1f574
   1a249:	push   eax
   1a24a:	mov    DWORD PTR [ebp-0x7d8],esi
   1a250:	mov    DWORD PTR [ebp-0x7e4],esi
   1a256:	call   DWORD PTR ds:0x1f828
   1a25c:	add    esp,0xc
   1a25f:	lea    eax,[ebp-0x7d4]
   1a265:	push   eax
   1a266:	lea    eax,[ebp-0x80c]
   1a26c:	push   eax
   1a26d:	call   0x1157c
   1a272:	call   eax
   1a274:	push   0x10
   1a276:	lea    eax,[ebp-0x80c]
   1a27c:	mov    DWORD PTR [ebp-0x7fc],eax
   1a282:	push   0x1
   1a284:	lea    eax,[ebp-0x814]
   1a28a:	push   eax
   1a28b:	lea    eax,[ebp-0x804]
   1a291:	push   eax
   1a292:	push   0x80100000
   1a297:	lea    eax,[ebp-0x7dc]
   1a29d:	push   eax
   1a29e:	mov    DWORD PTR [ebp-0x804],0x18
   1a2a8:	mov    DWORD PTR [ebp-0x800],esi
   1a2ae:	mov    DWORD PTR [ebp-0x7f8],esi
   1a2b4:	mov    DWORD PTR [ebp-0x7f4],esi
   1a2ba:	mov    DWORD PTR [ebp-0x7f0],esi
   1a2c0:	call   0x11330
   1a2c5:	call   eax
   1a2c7:	cmp    eax,esi
   1a2c9:	jl     0x1a347
   1a2cb:	push   DWORD PTR [ebp-0x7dc]
   1a2d1:	lea    eax,[ebp-0x7ec]
   1a2d7:	push   DWORD PTR [ebp+0x10]
   1a2da:	push   0x2
   1a2dc:	push   eax
   1a2dd:	push   esi
   1a2de:	push   0x4
   1a2e0:	lea    eax,[ebp-0x7e0]
   1a2e6:	push   eax
   1a2e7:	call   0x1196c
   1a2ec:	call   eax
   1a2ee:	push   DWORD PTR [ebp-0x7dc]
   1a2f4:	mov    edi,eax
   1a2f6:	call   0x11552
   1a2fb:	call   eax
   1a2fd:	cmp    edi,esi
   1a2ff:	jge    0x1a305
   1a301:	mov    eax,edi
   1a303:	jmp    0x1a347
   1a305:	push   0x2
   1a307:	push   esi
   1a308:	push   0x2
   1a30a:	lea    eax,[ebp-0x7e4]
   1a310:	push   eax
   1a311:	push   esi
   1a312:	push   esi
   1a313:	push   esi
   1a314:	lea    eax,[ebp-0x7d8]
   1a31a:	push   eax
   1a31b:	push   0xffffffff
   1a31d:	push   DWORD PTR [ebp-0x7e0]
   1a323:	call   0x11942
   1a328:	call   eax
   1a32a:	push   DWORD PTR [ebp-0x7e0]
   1a330:	mov    edi,eax
   1a332:	call   0x11552
   1a337:	call   eax
   1a339:	cmp    edi,esi
   1a33b:	jl     0x1a301
   1a33d:	mov    eax,DWORD PTR [ebp-0x7d8]
   1a343:	mov    DWORD PTR [ebx],eax
   1a345:	xor    eax,eax
   1a347:	mov    ecx,DWORD PTR [ebp-0x4]
   1a34a:	pop    edi
   1a34b:	pop    esi
   1a34c:	xor    ecx,ebp
   1a34e:	pop    ebx
   1a34f:	call   0x1e145
   1a354:	leave  
   1a355:	ret    0xc
   1a358:	int3   
   1a359:	int3   
   1a35a:	int3   
   1a35b:	int3   
   1a35c:	int3   
   1a35d:	int3   
   1a35e:	mov    edi,edi
   1a360:	push   ebp
   1a361:	mov    ebp,esp
   1a363:	push   DWORD PTR [ebp+0x8]
   1a366:	push   0xffffffff
   1a368:	call   0x11996
   1a36d:	call   eax
   1a36f:	pop    ebp
   1a370:	ret    0x4
   1a373:	int3   
   1a374:	int3   
   1a375:	int3   
   1a376:	int3   
   1a377:	int3   
   1a378:	mov    edi,edi
   1a37a:	push   ebp
   1a37b:	mov    ebp,esp
   1a37d:	push   esi
   1a37e:	mov    esi,DWORD PTR [ebp+0x8]
   1a381:	test   esi,esi
   1a383:	jne    0x1a388
   1a385:	lea    esi,[ecx+0x18]
   1a388:	mov    edx,DWORD PTR [ebp+0xc]
   1a38b:	test   edx,edx
   1a38d:	jne    0x1a393
   1a38f:	xor    eax,eax
   1a391:	jmp    0x1a3a3
   1a393:	movzx  eax,BYTE PTR [edx]
   1a396:	push   edx
   1a397:	lea    eax,[eax*8+0x73c58]
   1a39e:	push   esi
   1a39f:	push   eax
   1a3a0:	call   DWORD PTR [eax+0x4]
   1a3a3:	pop    esi
   1a3a4:	pop    ebp
   1a3a5:	ret    0x8
   1a3a8:	int3   
   1a3a9:	int3   
   1a3aa:	int3   
   1a3ab:	int3   
   1a3ac:	int3   
   1a3ad:	int3   
   1a3ae:	mov    edi,edi
   1a3b0:	push   ebp
   1a3b1:	mov    ebp,esp
   1a3b3:	mov    eax,DWORD PTR [ebp+0x14]
   1a3b6:	push   ebx
   1a3b7:	mov    ebx,DWORD PTR [ebp+0x8]
   1a3ba:	push   esi
   1a3bb:	mov    esi,DWORD PTR [ebp+0x10]
   1a3be:	sub    esi,eax
   1a3c0:	push   edi
   1a3c1:	lea    edi,[ebx+eax*1]
   1a3c4:	mov    eax,esi
   1a3c6:	xor    edx,edx
   1a3c8:	dec    eax
   1a3c9:	je     0x1a3ea
   1a3cb:	dec    eax
   1a3cc:	je     0x1a3dc
   1a3ce:	dec    eax
   1a3cf:	dec    eax
   1a3d0:	jne    0x1a3f6
   1a3d2:	mov    eax,DWORD PTR [ecx+0xc]
   1a3d5:	mov    edx,DWORD PTR [edi]
   1a3d7:	and    DWORD PTR [eax],0x0
   1a3da:	jmp    0x1a3f6
   1a3dc:	mov    eax,DWORD PTR [ecx+0xc]
   1a3df:	movsx  edx,WORD PTR [edi]
   1a3e2:	mov    DWORD PTR [eax],0x2
   1a3e8:	jmp    0x1a3f6
   1a3ea:	mov    eax,DWORD PTR [ecx+0xc]
   1a3ed:	movsx  edx,BYTE PTR [edi]
   1a3f0:	mov    DWORD PTR [eax],0x3
   1a3f6:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3f9:	lea    eax,[edx+ecx*1]
   1a3fc:	add    eax,DWORD PTR [ebp+0x10]
   1a3ff:	sub    edx,ebx
   1a401:	add    edx,ecx
   1a403:	dec    esi
   1a404:	je     0x1a416
   1a406:	dec    esi
   1a407:	je     0x1a411
   1a409:	dec    esi
   1a40a:	dec    esi
   1a40b:	jne    0x1a418
   1a40d:	mov    DWORD PTR [edi],edx
   1a40f:	jmp    0x1a418
   1a411:	mov    WORD PTR [edi],dx
   1a414:	jmp    0x1a418
   1a416:	mov    BYTE PTR [edi],dl
   1a418:	pop    edi
   1a419:	pop    esi
   1a41a:	pop    ebx
   1a41b:	pop    ebp
   1a41c:	ret    0x10
   1a41f:	int3   
   1a420:	int3   
   1a421:	int3   
   1a422:	int3   
   1a423:	int3   
   1a424:	mov    edi,edi
   1a426:	push   ebp
   1a427:	mov    ebp,esp
   1a429:	mov    eax,DWORD PTR [ebp+0x10]
   1a42c:	inc    eax
   1a42d:	pop    ebp
   1a42e:	ret    0xc
   1a431:	int3   
   1a432:	int3   
   1a433:	int3   
   1a434:	int3   
   1a435:	int3   
   1a436:	mov    edi,edi
   1a438:	push   ebp
   1a439:	mov    ebp,esp
   1a43b:	mov    eax,ecx
   1a43d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a440:	and    DWORD PTR [eax],0x0
   1a443:	and    DWORD PTR [eax+0x4],0x0
   1a447:	test   ecx,ecx
   1a449:	jne    0x1a44e
   1a44b:	lea    ecx,[eax+0x14]
   1a44e:	mov    edx,DWORD PTR [ebp+0xc]
   1a451:	mov    DWORD PTR [eax+0x8],ecx
   1a454:	test   edx,edx
   1a456:	jne    0x1a45b
   1a458:	lea    edx,[eax+0x10]
   1a45b:	mov    DWORD PTR [eax+0xc],edx
   1a45e:	and    DWORD PTR [ecx],0x0
   1a461:	mov    ecx,DWORD PTR [eax+0xc]
   1a464:	and    DWORD PTR [ecx],0x0
   1a467:	pop    ebp
   1a468:	ret    0x8
   1a46b:	int3   
   1a46c:	int3   
   1a46d:	int3   
   1a46e:	int3   
   1a46f:	int3   
   1a470:	mov    edi,edi
   1a472:	push   ebp
   1a473:	mov    ebp,esp
   1a475:	push   ecx
   1a476:	mov    eax,DWORD PTR [ebp+0x8]
   1a479:	mov    eax,DWORD PTR [eax]
   1a47b:	push   ebx
   1a47c:	push   esi
   1a47d:	push   edi
   1a47e:	mov    DWORD PTR [ebp-0x4],ecx
   1a481:	mov    esi,eax
   1a483:	test   eax,0x200000
   1a488:	je     0x1a495
   1a48a:	cmp    DWORD PTR [ecx+0x4],0x0
   1a48e:	je     0x1a49a
   1a490:	shr    esi,0xb
   1a493:	jmp    0x1a49d
   1a495:	cmp    DWORD PTR [ecx],0x0
   1a498:	jmp    0x1a48e
   1a49a:	shr    esi,0x8
   1a49d:	mov    ebx,DWORD PTR [ebp+0x10]
   1a4a0:	and    esi,0x7
   1a4a3:	shr    eax,0xe
   1a4a6:	and    eax,0x7
   1a4a9:	mov    edi,esi
   1a4ab:	jbe    0x1a4e7
   1a4ad:	add    eax,ebx
   1a4af:	mov    cl,BYTE PTR [eax]
   1a4b1:	movzx  edx,cl
   1a4b4:	mov    dl,BYTE PTR [edx+0x73b58]
   1a4ba:	test   dl,0x10
   1a4bd:	je     0x1a4df
   1a4bf:	mov    al,BYTE PTR [eax+0x1]
   1a4c2:	and    al,0x7
   1a4c4:	cmp    al,0x5
   1a4c6:	jne    0x1a4df
   1a4c8:	and    cl,0xc0
   1a4cb:	je     0x1a4dc
   1a4cd:	cmp    cl,0x40
   1a4d0:	jne    0x1a4d7
   1a4d2:	lea    edi,[esi+0x1]
   1a4d5:	jmp    0x1a4df
   1a4d7:	cmp    cl,0x80
   1a4da:	jne    0x1a4df
   1a4dc:	lea    edi,[esi+0x4]
   1a4df:	movzx  eax,dl
   1a4e2:	and    eax,0xf
   1a4e5:	add    edi,eax
   1a4e7:	push   edi
   1a4e8:	push   ebx
   1a4e9:	push   DWORD PTR [ebp+0xc]
   1a4ec:	call   0x1e1b6
   1a4f1:	mov    ecx,DWORD PTR [ebp+0x8]
   1a4f4:	mov    eax,DWORD PTR [ecx]
   1a4f6:	shl    eax,0xc
   1a4f9:	sar    eax,0x1d
   1a4fc:	add    esp,0xc
   1a4ff:	test   eax,eax
   1a501:	je     0x1a51d
   1a503:	push   eax
   1a504:	push   esi
   1a505:	mov    esi,DWORD PTR [ebp-0x4]
   1a508:	push   ebx
   1a509:	push   DWORD PTR [ebp+0xc]
   1a50c:	mov    ecx,esi
   1a50e:	call   0x1a3ae
   1a513:	mov    ecx,DWORD PTR [esi+0x8]
   1a516:	mov    DWORD PTR [ecx],eax
   1a518:	mov    ecx,DWORD PTR [ebp+0x8]
   1a51b:	jmp    0x1a520
   1a51d:	mov    esi,DWORD PTR [ebp-0x4]
   1a520:	test   DWORD PTR [ecx],0x400000
   1a526:	je     0x1a52d
   1a528:	mov    eax,DWORD PTR [esi+0xc]
   1a52b:	neg    DWORD PTR [eax]
   1a52d:	test   DWORD PTR [ecx],0x100000
   1a533:	je     0x1a53b
   1a535:	mov    eax,DWORD PTR [esi+0x8]
   1a538:	or     DWORD PTR [eax],0xffffffff
   1a53b:	lea    eax,[edi+ebx*1]
   1a53e:	pop    edi
   1a53f:	pop    esi
   1a540:	pop    ebx
   1a541:	leave  
   1a542:	ret    0xc
   1a545:	int3   
   1a546:	int3   
   1a547:	int3   
   1a548:	int3   
   1a549:	int3   
   1a54a:	mov    edi,edi
   1a54c:	push   ebp
   1a54d:	mov    ebp,esp
   1a54f:	push   ebx
   1a550:	push   esi
   1a551:	mov    esi,DWORD PTR [ebp+0x10]
   1a554:	push   edi
   1a555:	mov    edi,DWORD PTR [ebp+0xc]
   1a558:	push   esi
   1a559:	push   edi
   1a55a:	push   DWORD PTR [ebp+0x8]
   1a55d:	mov    ebx,ecx
   1a55f:	call   0x1a470
   1a564:	lea    eax,[esi+0x1]
   1a567:	movzx  edx,BYTE PTR [eax]
   1a56a:	push   eax
   1a56b:	inc    edi
   1a56c:	lea    edx,[edx*8+0x73c58]
   1a573:	push   edi
   1a574:	push   edx
   1a575:	mov    ecx,ebx
   1a577:	call   DWORD PTR [edx+0x4]
   1a57a:	pop    edi
   1a57b:	pop    esi
   1a57c:	pop    ebx
   1a57d:	pop    ebp
   1a57e:	ret    0xc
   1a581:	int3   
   1a582:	int3   
   1a583:	int3   
   1a584:	int3   
   1a585:	int3   
   1a586:	mov    edi,edi
   1a588:	push   ebp
   1a589:	mov    ebp,esp
   1a58b:	push   ebx
   1a58c:	push   esi
   1a58d:	mov    esi,DWORD PTR [ebp+0x10]
   1a590:	push   edi
   1a591:	mov    edi,DWORD PTR [ebp+0xc]
   1a594:	push   esi
   1a595:	push   edi
   1a596:	push   DWORD PTR [ebp+0x8]
   1a599:	mov    ebx,ecx
   1a59b:	call   0x1a470
   1a5a0:	lea    eax,[esi+0x1]
   1a5a3:	movzx  edx,BYTE PTR [eax]
   1a5a6:	push   eax
   1a5a7:	inc    edi
   1a5a8:	lea    edx,[edx*8+0x74460]
   1a5af:	push   edi
   1a5b0:	push   edx
   1a5b1:	mov    ecx,ebx
   1a5b3:	call   DWORD PTR [edx+0x4]
   1a5b6:	pop    edi
   1a5b7:	pop    esi
   1a5b8:	pop    ebx
   1a5b9:	pop    ebp
   1a5ba:	ret    0xc
   1a5bd:	int3   
   1a5be:	int3   
   1a5bf:	int3   
   1a5c0:	int3   
   1a5c1:	int3   
   1a5c2:	mov    edi,edi
   1a5c4:	push   ebp
   1a5c5:	mov    ebp,esp
   1a5c7:	mov    DWORD PTR [ecx],0x1
   1a5cd:	pop    ebp
   1a5ce:	jmp    0x1a54a
   1a5d3:	int3   
   1a5d4:	int3   
   1a5d5:	int3   
   1a5d6:	int3   
   1a5d7:	int3   
   1a5d8:	mov    edi,edi
   1a5da:	push   ebp
   1a5db:	mov    ebp,esp
   1a5dd:	mov    DWORD PTR [ecx+0x4],0x1
   1a5e4:	pop    ebp
   1a5e5:	jmp    0x1a54a
   1a5ea:	int3   
   1a5eb:	int3   
   1a5ec:	int3   
   1a5ed:	int3   
   1a5ee:	int3   
   1a5ef:	int3   
   1a5f0:	mov    edi,edi
   1a5f2:	push   ebp
   1a5f3:	mov    ebp,esp
   1a5f5:	mov    eax,DWORD PTR [ebp+0x10]
   1a5f8:	sub    esp,0x10
   1a5fb:	test   BYTE PTR [eax+0x1],0x38
   1a5ff:	push   eax
   1a600:	push   DWORD PTR [ebp+0xc]
   1a603:	jne    0x1a618
   1a605:	mov    DWORD PTR [ebp-0x8],0x5bf6
   1a60c:	mov    DWORD PTR [ebp-0x4],0x1a470
   1a613:	lea    eax,[ebp-0x8]
   1a616:	jmp    0x1a629
   1a618:	mov    DWORD PTR [ebp-0x10],0x52f6
   1a61f:	mov    DWORD PTR [ebp-0xc],0x1a470
   1a626:	lea    eax,[ebp-0x10]
   1a629:	push   eax
   1a62a:	call   0x1a470
   1a62f:	leave  
   1a630:	ret    0xc
   1a633:	int3   
   1a634:	int3   
   1a635:	int3   
   1a636:	int3   
   1a637:	int3   
   1a638:	mov    edi,edi
   1a63a:	push   ebp
   1a63b:	mov    ebp,esp
   1a63d:	mov    eax,DWORD PTR [ebp+0x10]
   1a640:	sub    esp,0x10
   1a643:	test   BYTE PTR [eax+0x1],0x38
   1a647:	push   eax
   1a648:	push   DWORD PTR [ebp+0xc]
   1a64b:	jne    0x1a660
   1a64d:	mov    DWORD PTR [ebp-0x8],0x66f7
   1a654:	mov    DWORD PTR [ebp-0x4],0x1a470
   1a65b:	lea    eax,[ebp-0x8]
   1a65e:	jmp    0x1a671
   1a660:	mov    DWORD PTR [ebp-0x10],0x52f7
   1a667:	mov    DWORD PTR [ebp-0xc],0x1a470
   1a66e:	lea    eax,[ebp-0x10]
   1a671:	push   eax
   1a672:	call   0x1a470
   1a677:	leave  
   1a678:	ret    0xc
   1a67b:	int3   
   1a67c:	int3   
   1a67d:	int3   
   1a67e:	int3   
   1a67f:	int3   
   1a680:	mov    edi,edi
   1a682:	push   ebp
   1a683:	mov    ebp,esp
   1a685:	push   ecx
   1a686:	push   ecx
   1a687:	mov    edx,DWORD PTR [ebp+0x10]
   1a68a:	mov    al,BYTE PTR [edx+0x1]
   1a68d:	cmp    al,0x15
   1a68f:	je     0x1a6af
   1a691:	cmp    al,0x25
   1a693:	je     0x1a6af
   1a695:	and    al,0x38
   1a697:	cmp    al,0x10
   1a699:	je     0x1a6a7
   1a69b:	cmp    al,0x18
   1a69d:	je     0x1a6a7
   1a69f:	cmp    al,0x20
   1a6a1:	je     0x1a6a7
   1a6a3:	cmp    al,0x28
   1a6a5:	jne    0x1a6bb
   1a6a7:	mov    eax,DWORD PTR [ecx+0x8]
   1a6aa:	or     DWORD PTR [eax],0xffffffff
   1a6ad:	jmp    0x1a6bb
   1a6af:	mov    eax,DWORD PTR [edx+0x2]
   1a6b2:	mov    eax,DWORD PTR [eax]
   1a6b4:	push   esi
   1a6b5:	mov    esi,DWORD PTR [ecx+0x8]
   1a6b8:	mov    DWORD PTR [esi],eax
   1a6ba:	pop    esi
   1a6bb:	push   edx
   1a6bc:	push   DWORD PTR [ebp+0xc]
   1a6bf:	lea    eax,[ebp-0x8]
   1a6c2:	push   eax
   1a6c3:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a6ca:	mov    DWORD PTR [ebp-0x4],0x1a470
   1a6d1:	call   0x1a470
   1a6d6:	leave  
   1a6d7:	ret    0xc
   1a6da:	int3   
   1a6db:	int3   
   1a6dc:	int3   
   1a6dd:	int3   
   1a6de:	int3   
   1a6df:	int3   
   1a6e0:	mov    edi,edi
   1a6e2:	push   ebp
   1a6e3:	mov    ebp,esp
   1a6e5:	sub    esp,0x5c
   1a6e8:	mov    eax,ds:0x77b1c
   1a6ed:	xor    eax,ebp
   1a6ef:	mov    DWORD PTR [ebp-0x4],eax
   1a6f2:	mov    eax,DWORD PTR [ebp+0x10]
   1a6f5:	push   esi
   1a6f6:	mov    esi,DWORD PTR [ebp+0x8]
   1a6f9:	push   edi
   1a6fa:	mov    edi,DWORD PTR [ebp+0xc]
   1a6fd:	push   0x0
   1a6ff:	push   eax
   1a700:	lea    ecx,[ebp-0x5c]
   1a703:	call   0x1a436
   1a708:	push   edi
   1a709:	push   esi
   1a70a:	lea    ecx,[ebp-0x5c]
   1a70d:	call   0x1a378
   1a712:	mov    ecx,DWORD PTR [ebp-0x4]
   1a715:	pop    edi
   1a716:	xor    ecx,ebp
   1a718:	pop    esi
   1a719:	call   0x1e145
   1a71e:	leave  
   1a71f:	ret    0xc
   1a722:	int3   
   1a723:	int3   
   1a724:	int3   
   1a725:	int3   
   1a726:	int3   
   1a727:	int3   
   1a728:	mov    edi,edi
   1a72a:	push   ebp
   1a72b:	mov    ebp,esp
   1a72d:	sub    esp,0x50
   1a730:	push   ebx
   1a731:	push   esi
   1a732:	push   edi
   1a733:	mov    edi,0x4000
   1a738:	push   edi
   1a739:	call   0x11cec
   1a73e:	pop    ecx
   1a73f:	xor    ebx,ebx
   1a741:	push   0x38
   1a743:	push   0x1f5a4
   1a748:	cmp    eax,ebx
   1a74a:	mov    DWORD PTR [ebp-0x4],eax
   1a74d:	mov    DWORD PTR [ebp-0xc],eax
   1a750:	push   0x2f
   1a752:	lea    eax,[ebp-0x50]
   1a755:	setne  BYTE PTR [ebp-0x10]
   1a759:	push   eax
   1a75a:	xor    esi,esi
   1a75c:	mov    DWORD PTR [ebp-0x30],ebx
   1a75f:	mov    DWORD PTR [ebp-0x2c],ebx
   1a762:	mov    DWORD PTR [ebp-0x28],ebx
   1a765:	mov    DWORD PTR [ebp-0x4c],ebx
   1a768:	mov    DWORD PTR [ebp-0x50],ebx
   1a76b:	call   0x1c01c
   1a770:	test   eax,eax
   1a772:	je     0x1a791
   1a774:	mov    esi,DWORD PTR [ebp+0x8]
   1a777:	mov    BYTE PTR [esi],bl
   1a779:	mov    DWORD PTR [esi+0x4],ebx
   1a77c:	cmp    BYTE PTR [ebp-0x10],bl
   1a77f:	je     0x1a78a
   1a781:	push   DWORD PTR [ebp-0x4]
   1a784:	call   0x11d22
   1a789:	pop    ecx
   1a78a:	mov    eax,esi
   1a78c:	jmp    0x1a8a6
   1a791:	mov    eax,DWORD PTR [ebp+0x10]
   1a794:	mov    DWORD PTR [ebp-0x4c],eax
   1a797:	mov    eax,DWORD PTR [ebp+0xc]
   1a79a:	mov    DWORD PTR [ebp-0x50],eax
   1a79d:	mov    eax,DWORD PTR [ebp-0xc]
   1a7a0:	add    eax,esi
   1a7a2:	mov    DWORD PTR [ebp-0x44],eax
   1a7a5:	push   0x4
   1a7a7:	lea    eax,[ebp-0x50]
   1a7aa:	push   eax
   1a7ab:	mov    DWORD PTR [ebp-0x40],edi
   1a7ae:	call   0x1c1b0
   1a7b3:	cmp    eax,0xfffffffc
   1a7b6:	mov    DWORD PTR [ebp+0x10],eax
   1a7b9:	jl     0x1a7cd
   1a7bb:	cmp    eax,0xfffffffd
   1a7be:	jle    0x1a856
   1a7c4:	cmp    eax,0x2
   1a7c7:	je     0x1a856
   1a7cd:	mov    eax,edi
   1a7cf:	sub    eax,DWORD PTR [ebp-0x40]
   1a7d2:	add    esi,eax
   1a7d4:	cmp    DWORD PTR [ebp-0x40],ebx
   1a7d7:	jne    0x1a840
   1a7d9:	mov    al,BYTE PTR [ebp-0x10]
   1a7dc:	mov    BYTE PTR [ebp-0x18],al
   1a7df:	mov    eax,DWORD PTR [ebp-0xc]
   1a7e2:	mov    DWORD PTR [ebp-0x14],eax
   1a7e5:	lea    eax,[esi+0x4000]
   1a7eb:	push   eax
   1a7ec:	mov    BYTE PTR [ebp-0x10],bl
   1a7ef:	call   0x11cec
   1a7f4:	pop    ecx
   1a7f5:	cmp    eax,ebx
   1a7f7:	setne  cl
   1a7fa:	mov    DWORD PTR [ebp-0x4],eax
   1a7fd:	lea    eax,[ebp-0x8]
   1a800:	mov    BYTE PTR [ebp-0x8],cl
   1a803:	push   eax
   1a804:	lea    ecx,[ebp-0x10]
   1a807:	call   0x12a72
   1a80c:	cmp    BYTE PTR [ebp-0x8],bl
   1a80f:	je     0x1a81a
   1a811:	push   DWORD PTR [ebp-0x4]
   1a814:	call   0x11d22
   1a819:	pop    ecx
   1a81a:	push   esi
   1a81b:	push   DWORD PTR [ebp-0x14]
   1a81e:	push   DWORD PTR [ebp-0xc]
   1a821:	call   0x1e1b6
   1a826:	add    esp,0xc
   1a829:	cmp    BYTE PTR [ebp-0x18],bl
   1a82c:	je     0x1a837
   1a82e:	push   DWORD PTR [ebp-0x14]
   1a831:	call   0x11d22
   1a836:	pop    ecx
   1a837:	cmp    DWORD PTR [ebp-0x40],ebx
   1a83a:	je     0x1a79d
   1a840:	lea    eax,[ebp-0x50]
   1a843:	push   eax
   1a844:	call   0x1d3ce
   1a849:	cmp    DWORD PTR [ebp+0x10],0x1
   1a84d:	jne    0x1a878
   1a84f:	mov    eax,DWORD PTR [ebp+0x14]
   1a852:	mov    DWORD PTR [eax],esi
   1a854:	jmp    0x1a898
   1a856:	lea    eax,[ebp-0x50]
   1a859:	push   eax
   1a85a:	call   0x1d3ce
   1a85f:	mov    esi,DWORD PTR [ebp+0x8]
   1a862:	mov    BYTE PTR [esi],bl
   1a864:	mov    DWORD PTR [esi+0x4],ebx
   1a867:	cmp    BYTE PTR [ebp-0x10],bl
   1a86a:	je     0x1a78a
   1a870:	push   DWORD PTR [ebp-0xc]
   1a873:	jmp    0x1a784
   1a878:	lea    eax,[ebp-0x18]
   1a87b:	push   eax
   1a87c:	lea    ecx,[ebp-0x10]
   1a87f:	mov    BYTE PTR [ebp-0x18],bl
   1a882:	mov    DWORD PTR [ebp-0x14],ebx
   1a885:	call   0x12a72
   1a88a:	cmp    BYTE PTR [ebp-0x18],bl
   1a88d:	je     0x1a898
   1a88f:	push   DWORD PTR [ebp-0x14]
   1a892:	call   0x11d22
   1a897:	pop    ecx
   1a898:	mov    eax,DWORD PTR [ebp+0x8]
   1a89b:	mov    cl,BYTE PTR [ebp-0x10]
   1a89e:	mov    BYTE PTR [eax],cl
   1a8a0:	mov    ecx,DWORD PTR [ebp-0xc]
   1a8a3:	mov    DWORD PTR [eax+0x4],ecx
   1a8a6:	pop    edi
   1a8a7:	pop    esi
   1a8a8:	pop    ebx
   1a8a9:	leave  
   1a8aa:	ret    0x10
   1a8ad:	int3   
   1a8ae:	int3   
   1a8af:	int3   
   1a8b0:	int3   
   1a8b1:	int3   
   1a8b2:	xor    eax,eax
   1a8b4:	push   eax
   1a8b5:	push   eax
   1a8b6:	push   eax
   1a8b7:	push   eax
   1a8b8:	push   0x78880
   1a8bd:	call   DWORD PTR ds:0x1f834
   1a8c3:	test   eax,eax
   1a8c5:	setge  al
   1a8c8:	ret    
   1a8c9:	int3   
   1a8ca:	int3   
   1a8cb:	int3   
   1a8cc:	int3   
   1a8cd:	int3   
   1a8ce:	push   0x0
   1a8d0:	push   0x78880
   1a8d5:	call   DWORD PTR ds:0x1f838
   1a8db:	ret    
   1a8dc:	int3   
   1a8dd:	int3   
   1a8de:	int3   
   1a8df:	int3   
   1a8e0:	int3   
   1a8e1:	int3   
   1a8e2:	mov    edi,edi
   1a8e4:	push   esi
   1a8e5:	push   edi
   1a8e6:	push   0x1
   1a8e8:	xor    edi,edi
   1a8ea:	push   edi
   1a8eb:	mov    esi,ecx
   1a8ed:	call   0x14400
   1a8f2:	cmp    DWORD PTR ds:0x786cc,edi
   1a8f8:	jne    0x1a90f
   1a8fa:	mov    ecx,eax
   1a8fc:	mov    DWORD PTR ds:0x786cc,ecx
   1a902:	mov    DWORD PTR [ecx],edi
   1a904:	mov    ecx,DWORD PTR ds:0x786cc
   1a90a:	xor    eax,eax
   1a90c:	mov    DWORD PTR [ecx+0x8],edi
   1a90f:	inc    DWORD PTR ds:0x788a8
   1a915:	cmp    eax,edi
   1a917:	je     0x1a920
   1a919:	push   eax
   1a91a:	call   0x11d22
   1a91f:	pop    ecx
   1a920:	push   edi
   1a921:	push   DWORD PTR ds:0x786cc
   1a927:	mov    ecx,esi
   1a929:	call   0x14400
   1a92e:	mov    DWORD PTR [esi+0xc],edi
   1a931:	mov    DWORD PTR [esi+0x4],eax
   1a934:	mov    DWORD PTR [eax],eax
   1a936:	mov    esi,DWORD PTR [esi+0x4]
   1a939:	pop    edi
   1a93a:	mov    DWORD PTR [esi+0x8],esi
   1a93d:	pop    esi
   1a93e:	ret    
   1a93f:	int3   
   1a940:	int3   
   1a941:	int3   
   1a942:	int3   
   1a943:	int3   
   1a944:	mov    edi,edi
   1a946:	push   ebx
   1a947:	push   esi
   1a948:	xor    ebx,ebx
   1a94a:	push   ebx
   1a94b:	push   0x78880
   1a950:	call   DWORD PTR ds:0x1f83c
   1a956:	push   0x10
   1a958:	call   0x11cec
   1a95d:	mov    esi,eax
   1a95f:	pop    ecx
   1a960:	cmp    esi,ebx
   1a962:	je     0x1a976
   1a964:	mov    ecx,esi
   1a966:	mov    BYTE PTR [esi+0x8],bl
   1a969:	call   0x1a8e2
   1a96e:	mov    DWORD PTR ds:0x788a0,esi
   1a974:	jmp    0x1a97c
   1a976:	mov    DWORD PTR ds:0x788a0,ebx
   1a97c:	push   0x10
   1a97e:	call   0x11cec
   1a983:	mov    esi,eax
   1a985:	pop    ecx
   1a986:	cmp    esi,ebx
   1a988:	je     0x1a99c
   1a98a:	mov    ecx,esi
   1a98c:	mov    BYTE PTR [esi+0x8],bl
   1a98f:	call   0x14820
   1a994:	mov    DWORD PTR ds:0x788a4,esi
   1a99a:	jmp    0x1a9a2
   1a99c:	mov    DWORD PTR ds:0x788a4,ebx
   1a9a2:	pop    esi
   1a9a3:	pop    ebx
   1a9a4:	ret    
   1a9a5:	int3   
   1a9a6:	int3   
   1a9a7:	int3   
   1a9a8:	int3   
   1a9a9:	int3   
   1a9aa:	mov    eax,ecx
   1a9ac:	add    DWORD PTR [eax+0x8],0x4
   1a9b0:	mov    ecx,DWORD PTR [eax+0x8]
   1a9b3:	cmp    ecx,DWORD PTR [eax+0x4]
   1a9b6:	jne    0x1a9d1
   1a9b8:	add    DWORD PTR [eax+0xc],0x4
   1a9bc:	mov    ecx,DWORD PTR [eax+0xc]
   1a9bf:	mov    ecx,DWORD PTR [ecx]
   1a9c1:	mov    DWORD PTR [eax],ecx
   1a9c3:	add    ecx,0x1000
   1a9c9:	mov    DWORD PTR [eax+0x4],ecx
   1a9cc:	mov    ecx,DWORD PTR [eax]
   1a9ce:	mov    DWORD PTR [eax+0x8],ecx
   1a9d1:	ret    
   1a9d2:	int3   
   1a9d3:	int3   
   1a9d4:	int3   
   1a9d5:	int3   
   1a9d6:	int3   
   1a9d7:	int3   
   1a9d8:	mov    edi,edi
   1a9da:	push   ebp
   1a9db:	mov    ebp,esp
   1a9dd:	mov    eax,ecx
   1a9df:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9e2:	mov    edx,DWORD PTR [ecx]
   1a9e4:	mov    DWORD PTR [eax],edx
   1a9e6:	mov    edx,DWORD PTR [ecx]
   1a9e8:	add    edx,0x1000
   1a9ee:	mov    DWORD PTR [eax+0x4],edx
   1a9f1:	mov    edx,DWORD PTR [ebp+0x8]
   1a9f4:	mov    DWORD PTR [eax+0x8],edx
   1a9f7:	mov    DWORD PTR [eax+0xc],ecx
   1a9fa:	pop    ebp
   1a9fb:	ret    0x8
   1a9fe:	int3   
   1a9ff:	int3   
   1aa00:	int3   
   1aa01:	int3   
   1aa02:	int3   
   1aa03:	int3   
   1aa04:	mov    edi,edi
   1aa06:	push   ebp
   1aa07:	mov    ebp,esp
   1aa09:	mov    eax,DWORD PTR [ebp+0x8]
   1aa0c:	mov    edx,DWORD PTR ds:0x788dc
   1aa12:	jmp    0x1aa16
   1aa14:	mov    eax,ecx
   1aa16:	mov    ecx,DWORD PTR [eax+0x8]
   1aa19:	cmp    ecx,edx
   1aa1b:	jne    0x1aa14
   1aa1d:	pop    ebp
   1aa1e:	ret    0x4
   1aa21:	int3   
   1aa22:	int3   
   1aa23:	int3   
   1aa24:	int3   
   1aa25:	int3   
   1aa26:	mov    edi,edi
   1aa28:	push   ebp
   1aa29:	mov    ebp,esp
   1aa2b:	mov    eax,DWORD PTR [ebp+0x8]
   1aa2e:	mov    edx,DWORD PTR ds:0x788dc
   1aa34:	jmp    0x1aa38
   1aa36:	mov    eax,ecx
   1aa38:	mov    ecx,DWORD PTR [eax]
   1aa3a:	cmp    ecx,edx
   1aa3c:	jne    0x1aa36
   1aa3e:	pop    ebp
   1aa3f:	ret    0x4
   1aa42:	int3   
   1aa43:	int3   
   1aa44:	int3   
   1aa45:	int3   
   1aa46:	int3   
   1aa47:	int3   
   1aa48:	mov    edi,edi
   1aa4a:	push   esi
   1aa4b:	mov    esi,ecx
   1aa4d:	mov    ecx,DWORD PTR [esi]
   1aa4f:	mov    eax,DWORD PTR [ecx+0x8]
   1aa52:	cmp    eax,DWORD PTR ds:0x788dc
   1aa58:	je     0x1aa66
   1aa5a:	push   eax
   1aa5b:	call   0x1aa26
   1aa60:	jmp    0x1aa75
   1aa62:	mov    DWORD PTR [esi],eax
   1aa64:	mov    ecx,eax
   1aa66:	mov    eax,DWORD PTR [ecx+0x4]
   1aa69:	cmp    ecx,DWORD PTR [eax+0x8]
   1aa6c:	je     0x1aa62
   1aa6e:	mov    ecx,DWORD PTR [esi]
   1aa70:	cmp    DWORD PTR [ecx+0x8],eax
   1aa73:	je     0x1aa77
   1aa75:	mov    DWORD PTR [esi],eax
   1aa77:	pop    esi
   1aa78:	ret    
   1aa79:	int3   
   1aa7a:	int3   
   1aa7b:	int3   
   1aa7c:	int3   
   1aa7d:	int3   
   1aa7e:	mov    edi,edi
   1aa80:	push   ebp
   1aa81:	mov    ebp,esp
   1aa83:	mov    eax,DWORD PTR [ebp+0x8]
   1aa86:	test   eax,eax
   1aa88:	je     0x1aa91
   1aa8a:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa8d:	mov    ecx,DWORD PTR [ecx]
   1aa8f:	mov    DWORD PTR [eax],ecx
   1aa91:	pop    ebp
   1aa92:	ret    0x8
   1aa95:	int3   
   1aa96:	int3   
   1aa97:	int3   
   1aa98:	int3   
   1aa99:	int3   
   1aa9a:	mov    edi,edi
   1aa9c:	push   ebp
   1aa9d:	mov    ebp,esp
   1aa9f:	mov    eax,DWORD PTR [ebp+0x8]
   1aaa2:	jmp    0x1aab2
   1aaa4:	mov    ecx,DWORD PTR [eax]
   1aaa6:	mov    edx,DWORD PTR [ebp+0x10]
   1aaa9:	add    DWORD PTR [ebp+0x10],0x4
   1aaad:	mov    DWORD PTR [edx],ecx
   1aaaf:	add    eax,0x4
   1aab2:	cmp    eax,DWORD PTR [ebp+0xc]
   1aab5:	jne    0x1aaa4
   1aab7:	mov    eax,DWORD PTR [ebp+0x10]
   1aaba:	pop    ebp
   1aabb:	ret    0xc
   1aabe:	int3   
   1aabf:	int3   
   1aac0:	int3   
   1aac1:	int3   
   1aac2:	int3   
   1aac3:	int3   
   1aac4:	mov    edi,edi
   1aac6:	push   ebp
   1aac7:	mov    ebp,esp
   1aac9:	mov    eax,DWORD PTR [ebp+0x8]
   1aacc:	test   eax,eax
   1aace:	jge    0x1aad2
   1aad0:	xor    eax,eax
   1aad2:	shl    eax,0x2
   1aad5:	push   eax
   1aad6:	call   0x11cec
   1aadb:	pop    ecx
   1aadc:	pop    ebp
   1aadd:	ret    0x8
   1aae0:	int3   
   1aae1:	int3   
   1aae2:	int3   
   1aae3:	int3   
   1aae4:	int3   
   1aae5:	int3   
   1aae6:	mov    edi,edi
   1aae8:	push   ebp
   1aae9:	mov    ebp,esp
   1aaeb:	push   esi
   1aaec:	mov    esi,ecx
   1aaee:	push   DWORD PTR [esi]
   1aaf0:	call   0x11d22
   1aaf5:	test   BYTE PTR [ebp+0x8],0x1
   1aaf9:	pop    ecx
   1aafa:	je     0x1ab03
   1aafc:	push   esi
   1aafd:	call   0x11d22
   1ab02:	pop    ecx
   1ab03:	mov    eax,esi
   1ab05:	pop    esi
   1ab06:	pop    ebp
   1ab07:	ret    0x4
   1ab0a:	int3   
   1ab0b:	int3   
   1ab0c:	int3   
   1ab0d:	int3   
   1ab0e:	int3   
   1ab0f:	int3   
   1ab10:	mov    edi,edi
   1ab12:	push   ebp
   1ab13:	mov    ebp,esp
   1ab15:	mov    eax,ds:0x788d4
   1ab1a:	sub    esp,0x20
   1ab1d:	push   ebx
   1ab1e:	push   esi
   1ab1f:	push   edi
   1ab20:	lea    esi,[eax+0x4]
   1ab23:	lea    edi,[ebp-0x10]
   1ab26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab2a:	lea    ebx,[eax+0x14]
   1ab2d:	jmp    0x1ab4b
   1ab2f:	mov    eax,DWORD PTR [eax]
   1ab31:	mov    ecx,DWORD PTR [eax+0x8]
   1ab34:	cmp    ecx,DWORD PTR [ebp+0x8]
   1ab37:	jne    0x1ab43
   1ab39:	cmp    BYTE PTR [eax+0x24],0x0
   1ab3d:	jne    0x1ab5c
   1ab3f:	mov    BYTE PTR [eax+0x24],0x1
   1ab43:	lea    ecx,[ebp-0x10]
   1ab46:	call   0x1a9aa
   1ab4b:	mov    eax,DWORD PTR [ebp-0x8]
   1ab4e:	lea    edi,[ebp-0x20]
   1ab51:	mov    esi,ebx
   1ab53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab57:	cmp    eax,DWORD PTR [ebp-0x18]
   1ab5a:	jne    0x1ab2f
   1ab5c:	pop    edi
   1ab5d:	pop    esi
   1ab5e:	pop    ebx
   1ab5f:	leave  
   1ab60:	ret    0x4
   1ab63:	int3   
   1ab64:	int3   
   1ab65:	int3   
   1ab66:	int3   
   1ab67:	int3   
   1ab68:	mov    eax,ecx
   1ab6a:	xor    ecx,ecx
   1ab6c:	mov    DWORD PTR [eax+0x4],ecx
   1ab6f:	mov    DWORD PTR [eax+0x8],ecx
   1ab72:	mov    DWORD PTR [eax+0xc],ecx
   1ab75:	mov    DWORD PTR [eax+0x10],ecx
   1ab78:	mov    DWORD PTR [eax+0x14],ecx
   1ab7b:	mov    DWORD PTR [eax+0x18],ecx
   1ab7e:	mov    DWORD PTR [eax+0x1c],ecx
   1ab81:	mov    DWORD PTR [eax+0x20],ecx
   1ab84:	mov    DWORD PTR [eax+0x24],ecx
   1ab87:	mov    DWORD PTR [eax+0x28],ecx
   1ab8a:	mov    DWORD PTR [eax+0x2c],ecx
   1ab8d:	ret    0x4
   1ab90:	int3   
   1ab91:	int3   
   1ab92:	int3   
   1ab93:	int3   
   1ab94:	int3   
   1ab95:	int3   
   1ab96:	mov    edi,edi
   1ab98:	push   ebp
   1ab99:	mov    ebp,esp
   1ab9b:	sub    esp,0x10
   1ab9e:	push   esi
   1ab9f:	push   edi
   1aba0:	lea    esi,[ecx+0x4]
   1aba3:	lea    edi,[ebp-0x10]
   1aba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abaa:	mov    eax,DWORD PTR [ebp-0x8]
   1abad:	pop    edi
   1abae:	pop    esi
   1abaf:	leave  
   1abb0:	ret    
   1abb1:	int3   
   1abb2:	int3   
   1abb3:	int3   
   1abb4:	int3   
   1abb5:	int3   
   1abb6:	mov    edi,edi
   1abb8:	push   ebp
   1abb9:	mov    ebp,esp
   1abbb:	mov    edx,DWORD PTR [ebp+0x8]
   1abbe:	mov    eax,DWORD PTR [edx+0x8]
   1abc1:	push   esi
   1abc2:	mov    esi,DWORD PTR [eax]
   1abc4:	mov    DWORD PTR [edx+0x8],esi
   1abc7:	mov    esi,DWORD PTR [eax]
   1abc9:	cmp    esi,DWORD PTR ds:0x788dc
   1abcf:	je     0x1abd4
   1abd1:	mov    DWORD PTR [esi+0x4],edx
   1abd4:	mov    esi,DWORD PTR [edx+0x4]
   1abd7:	mov    DWORD PTR [eax+0x4],esi
   1abda:	mov    ecx,DWORD PTR [ecx+0x4]
   1abdd:	pop    esi
   1abde:	cmp    edx,DWORD PTR [ecx+0x4]
   1abe1:	jne    0x1abe8
   1abe3:	mov    DWORD PTR [ecx+0x4],eax
   1abe6:	jmp    0x1abf6
   1abe8:	mov    ecx,DWORD PTR [edx+0x4]
   1abeb:	cmp    edx,DWORD PTR [ecx]
   1abed:	jne    0x1abf3
   1abef:	mov    DWORD PTR [ecx],eax
   1abf1:	jmp    0x1abf6
   1abf3:	mov    DWORD PTR [ecx+0x8],eax
   1abf6:	mov    DWORD PTR [eax],edx
   1abf8:	mov    DWORD PTR [edx+0x4],eax
   1abfb:	pop    ebp
   1abfc:	ret    0x4
   1abff:	int3   
   1ac00:	int3   
   1ac01:	int3   
   1ac02:	int3   
   1ac03:	int3   
   1ac04:	mov    edi,edi
   1ac06:	push   ebp
   1ac07:	mov    ebp,esp
   1ac09:	mov    edx,DWORD PTR [ebp+0x8]
   1ac0c:	mov    eax,DWORD PTR [edx]
   1ac0e:	push   esi
   1ac0f:	mov    esi,DWORD PTR [eax+0x8]
   1ac12:	mov    DWORD PTR [edx],esi
   1ac14:	mov    esi,DWORD PTR [eax+0x8]
   1ac17:	cmp    esi,DWORD PTR ds:0x788dc
   1ac1d:	je     0x1ac22
   1ac1f:	mov    DWORD PTR [esi+0x4],edx
   1ac22:	mov    esi,DWORD PTR [edx+0x4]
   1ac25:	mov    DWORD PTR [eax+0x4],esi
   1ac28:	mov    ecx,DWORD PTR [ecx+0x4]
   1ac2b:	pop    esi
   1ac2c:	cmp    edx,DWORD PTR [ecx+0x4]
   1ac2f:	jne    0x1ac36
   1ac31:	mov    DWORD PTR [ecx+0x4],eax
   1ac34:	jmp    0x1ac45
   1ac36:	mov    ecx,DWORD PTR [edx+0x4]
   1ac39:	cmp    edx,DWORD PTR [ecx+0x8]
   1ac3c:	jne    0x1ac43
   1ac3e:	mov    DWORD PTR [ecx+0x8],eax
   1ac41:	jmp    0x1ac45
   1ac43:	mov    DWORD PTR [ecx],eax
   1ac45:	mov    DWORD PTR [eax+0x8],edx
   1ac48:	mov    DWORD PTR [edx+0x4],eax
   1ac4b:	pop    ebp
   1ac4c:	ret    0x4
   1ac4f:	int3   
   1ac50:	int3   
   1ac51:	int3   
   1ac52:	int3   
   1ac53:	int3   
   1ac54:	mov    edi,edi
   1ac56:	push   esi
   1ac57:	mov    esi,ecx
   1ac59:	mov    ecx,DWORD PTR [esi]
   1ac5b:	cmp    DWORD PTR [ecx+0x14],0x0
   1ac5f:	jne    0x1ac6e
   1ac61:	mov    eax,DWORD PTR [ecx+0x4]
   1ac64:	cmp    DWORD PTR [eax+0x4],ecx
   1ac67:	jne    0x1ac6e
   1ac69:	mov    eax,DWORD PTR [ecx+0x8]
   1ac6c:	jmp    0x1ac8b
   1ac6e:	mov    eax,DWORD PTR [ecx]
   1ac70:	cmp    eax,DWORD PTR ds:0x788dc
   1ac76:	je     0x1ac84
   1ac78:	push   eax
   1ac79:	call   0x1aa04
   1ac7e:	jmp    0x1ac8b
   1ac80:	mov    DWORD PTR [esi],eax
   1ac82:	mov    ecx,eax
   1ac84:	mov    eax,DWORD PTR [ecx+0x4]
   1ac87:	cmp    ecx,DWORD PTR [eax]
   1ac89:	je     0x1ac80
   1ac8b:	mov    DWORD PTR [esi],eax
   1ac8d:	pop    esi
   1ac8e:	ret    
   1ac8f:	int3   
   1ac90:	int3   
   1ac91:	int3   
   1ac92:	int3   
   1ac93:	int3   
   1ac94:	mov    edi,edi
   1ac96:	push   ebp
   1ac97:	mov    ebp,esp
   1ac99:	mov    eax,DWORD PTR [ecx+0x4]
   1ac9c:	push   esi
   1ac9d:	mov    esi,DWORD PTR [eax+0x4]
   1aca0:	push   edi
   1aca1:	mov    edi,eax
   1aca3:	jmp    0x1acbe
   1aca5:	push   DWORD PTR [ebp+0x8]
   1aca8:	lea    eax,[esi+0xc]
   1acab:	push   eax
   1acac:	call   0x19eec
   1acb1:	test   al,al
   1acb3:	je     0x1acba
   1acb5:	mov    esi,DWORD PTR [esi+0x8]
   1acb8:	jmp    0x1acbe
   1acba:	mov    edi,esi
   1acbc:	mov    esi,DWORD PTR [esi]
   1acbe:	cmp    esi,DWORD PTR ds:0x788dc
   1acc4:	jne    0x1aca5
   1acc6:	mov    eax,edi
   1acc8:	pop    edi
   1acc9:	pop    esi
   1acca:	pop    ebp
   1accb:	ret    0x4
   1acce:	int3   
   1accf:	int3   
   1acd0:	int3   
   1acd1:	int3   
   1acd2:	int3   
   1acd3:	int3   
   1acd4:	mov    edi,edi
   1acd6:	push   ebp
   1acd7:	mov    ebp,esp
   1acd9:	mov    eax,DWORD PTR [ecx+0x4]
   1acdc:	push   esi
   1acdd:	mov    esi,DWORD PTR [eax+0x4]
   1ace0:	push   edi
   1ace1:	mov    edi,eax
   1ace3:	jmp    0x1acfe
   1ace5:	lea    eax,[esi+0xc]
   1ace8:	push   eax
   1ace9:	push   DWORD PTR [ebp+0x8]
   1acec:	call   0x19eec
   1acf1:	test   al,al
   1acf3:	je     0x1acfb
   1acf5:	mov    edi,esi
   1acf7:	mov    esi,DWORD PTR [esi]
   1acf9:	jmp    0x1acfe
   1acfb:	mov    esi,DWORD PTR [esi+0x8]
   1acfe:	cmp    esi,DWORD PTR ds:0x788dc
   1ad04:	jne    0x1ace5
   1ad06:	mov    eax,edi
   1ad08:	pop    edi
   1ad09:	pop    esi
   1ad0a:	pop    ebp
   1ad0b:	ret    0x4
   1ad0e:	int3   
   1ad0f:	int3   
   1ad10:	int3   
   1ad11:	int3   
   1ad12:	int3   
   1ad13:	int3   
   1ad14:	mov    edi,edi
   1ad16:	push   ebp
   1ad17:	mov    ebp,esp
   1ad19:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad1c:	test   ecx,ecx
   1ad1e:	je     0x1ad28
   1ad20:	push   DWORD PTR [ebp+0xc]
   1ad23:	call   0x13682
   1ad28:	pop    ebp
   1ad29:	ret    0x8
   1ad2c:	int3   
   1ad2d:	int3   
   1ad2e:	int3   
   1ad2f:	int3   
   1ad30:	int3   
   1ad31:	int3   
   1ad32:	mov    edi,edi
   1ad34:	push   ebp
   1ad35:	mov    ebp,esp
   1ad37:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad3a:	push   0x0
   1ad3c:	call   0x1aae6
   1ad41:	pop    ebp
   1ad42:	ret    0x4
   1ad45:	int3   
   1ad46:	int3   
   1ad47:	int3   
   1ad48:	int3   
   1ad49:	int3   
   1ad4a:	mov    edi,edi
   1ad4c:	push   ebp
   1ad4d:	mov    ebp,esp
   1ad4f:	push   edi
   1ad50:	mov    edi,DWORD PTR [ebp+0xc]
   1ad53:	cmp    DWORD PTR [ebp+0x8],edi
   1ad56:	je     0x1ad6c
   1ad58:	push   esi
   1ad59:	mov    esi,DWORD PTR [ebp+0x10]
   1ad5c:	inc    DWORD PTR [esi]
   1ad5e:	lea    ecx,[ebp+0x8]
   1ad61:	call   0x1aa48
   1ad66:	cmp    DWORD PTR [ebp+0x8],edi
   1ad69:	jne    0x1ad5c
   1ad6b:	pop    esi
   1ad6c:	pop    edi
   1ad6d:	pop    ebp
   1ad6e:	ret    
   1ad6f:	int3   
   1ad70:	int3   
   1ad71:	int3   
   1ad72:	int3   
   1ad73:	int3   
   1ad74:	mov    edi,edi
   1ad76:	push   ebp
   1ad77:	mov    ebp,esp
   1ad79:	mov    eax,DWORD PTR [ebp+0xc]
   1ad7c:	mov    ecx,DWORD PTR [eax+0x34]
   1ad7f:	lea    eax,[ecx+eax*1+0x40]
   1ad83:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad86:	push   0xffffffff
   1ad88:	push   eax
   1ad89:	call   0x13662
   1ad8e:	mov    eax,DWORD PTR [ebp+0x8]
   1ad91:	pop    ebp
   1ad92:	ret    0x8
   1ad95:	int3   
   1ad96:	int3   
   1ad97:	int3   
   1ad98:	int3   
   1ad99:	int3   
   1ad9a:	mov    edi,edi
   1ad9c:	push   ebp
   1ad9d:	mov    ebp,esp
   1ad9f:	mov    eax,DWORD PTR [ebp+0xc]
   1ada2:	mov    ecx,DWORD PTR [eax+0x38]
   1ada5:	lea    eax,[ecx+eax*1+0x40]
   1ada9:	mov    ecx,DWORD PTR [ebp+0x8]
   1adac:	push   0xffffffff
   1adae:	push   eax
   1adaf:	call   0x13662
   1adb4:	mov    eax,DWORD PTR [ebp+0x8]
   1adb7:	pop    ebp
   1adb8:	ret    0x8
   1adbb:	int3   
   1adbc:	int3   
   1adbd:	int3   
   1adbe:	int3   
   1adbf:	int3   
   1adc0:	mov    edi,edi
   1adc2:	push   ebp
   1adc3:	mov    ebp,esp
   1adc5:	mov    eax,DWORD PTR [ebp+0xc]
   1adc8:	mov    ecx,DWORD PTR [eax+0x3c]
   1adcb:	lea    eax,[ecx+eax*1+0x40]
   1adcf:	mov    ecx,DWORD PTR [ebp+0x8]
   1add2:	push   0xffffffff
   1add4:	push   eax
   1add5:	call   0x13662
   1adda:	mov    eax,DWORD PTR [ebp+0x8]
   1addd:	pop    ebp
   1adde:	ret    0x8
   1ade1:	int3   
   1ade2:	int3   
   1ade3:	int3   
   1ade4:	int3   
   1ade5:	int3   
   1ade6:	mov    edi,edi
   1ade8:	push   ebp
   1ade9:	mov    ebp,esp
   1adeb:	sub    esp,0x1c
   1adee:	mov    eax,ds:0x788d4
   1adf3:	and    DWORD PTR [ebp-0x4],0x0
   1adf7:	push   ebx
   1adf8:	mov    ebx,DWORD PTR [ebp+0x8]
   1adfb:	push   esi
   1adfc:	push   edi
   1adfd:	lea    esi,[eax+0x4]
   1ae00:	mov    edi,ebx
   1ae02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae06:	lea    esi,[eax+0x14]
   1ae09:	jmp    0x1ae66
   1ae0b:	push   DWORD PTR [ebp+0xc]
   1ae0e:	mov    eax,DWORD PTR [ebx+0x8]
   1ae11:	push   DWORD PTR [eax]
   1ae13:	or     DWORD PTR [ebp-0x4],0x1
   1ae17:	lea    eax,[ebp-0xc]
   1ae1a:	push   eax
   1ae1b:	call   0x1adc0
   1ae20:	push   eax
   1ae21:	call   0x19efc
   1ae26:	test   al,al
   1ae28:	je     0x1ae39
   1ae2a:	mov    eax,DWORD PTR [ebx+0x8]
   1ae2d:	mov    eax,DWORD PTR [eax]
   1ae2f:	cmp    BYTE PTR [eax+0x1c],0x0
   1ae33:	mov    BYTE PTR [ebp+0xb],0x1
   1ae37:	jne    0x1ae3d
   1ae39:	mov    BYTE PTR [ebp+0xb],0x0
   1ae3d:	test   BYTE PTR [ebp-0x4],0x1
   1ae41:	je     0x1ae50
   1ae43:	push   DWORD PTR [ebp-0xc]
   1ae46:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1ae4a:	call   0x11d22
   1ae4f:	pop    ecx
   1ae50:	cmp    BYTE PTR [ebp+0xb],0x0
   1ae54:	jne    0x1ae75
   1ae56:	mov    ecx,ebx
   1ae58:	call   0x1a9aa
   1ae5d:	mov    esi,DWORD PTR ds:0x788d4
   1ae63:	add    esi,0x14
   1ae66:	mov    eax,DWORD PTR [ebx+0x8]
   1ae69:	lea    edi,[ebp-0x1c]
   1ae6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae70:	cmp    eax,DWORD PTR [ebp-0x14]
   1ae73:	jne    0x1ae0b
   1ae75:	pop    edi
   1ae76:	pop    esi
   1ae77:	mov    eax,ebx
   1ae79:	pop    ebx
   1ae7a:	leave  
   1ae7b:	ret    0x8
   1ae7e:	int3   
   1ae7f:	int3   
   1ae80:	int3   
   1ae81:	int3   
   1ae82:	int3   
   1ae83:	int3   
   1ae84:	mov    edi,edi
   1ae86:	push   ebp
   1ae87:	mov    ebp,esp
   1ae89:	sub    esp,0x28
   1ae8c:	mov    eax,DWORD PTR [ebp+0x8]
   1ae8f:	push   ebx
   1ae90:	push   esi
   1ae91:	push   edi
   1ae92:	lea    esi,[eax+0x4]
   1ae95:	mov    DWORD PTR [ebp-0x8],esi
   1ae98:	lea    edi,[ebp-0x18]
   1ae9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae9d:	and    DWORD PTR [ebp-0x4],0x0
   1aea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aea3:	lea    ecx,[eax+0x14]
   1aea6:	mov    eax,DWORD PTR [ebp-0x10]
   1aea9:	mov    esi,ecx
   1aeab:	lea    edi,[ebp-0x28]
   1aeae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb1:	push   0x4
   1aeb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb4:	pop    ebx
   1aeb5:	mov    DWORD PTR [ebp+0x8],ecx
   1aeb8:	cmp    eax,DWORD PTR [ebp-0x20]
   1aebb:	je     0x1aedd
   1aebd:	mov    esi,ecx
   1aebf:	lea    edi,[ebp-0x28]
   1aec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec6:	mov    eax,DWORD PTR [eax]
   1aec8:	add    ebx,DWORD PTR [eax]
   1aeca:	inc    DWORD PTR [ebp-0x4]
   1aecd:	lea    ecx,[ebp-0x18]
   1aed0:	call   0x1a9aa
   1aed5:	mov    eax,DWORD PTR [ebp-0x10]
   1aed8:	cmp    eax,DWORD PTR [ebp-0x20]
   1aedb:	jne    0x1aec6
   1aedd:	mov    eax,DWORD PTR [ebp+0xc]
   1aee0:	cmp    ebx,DWORD PTR [eax+0x4]
   1aee3:	mov    DWORD PTR [eax+0x4],ebx
   1aee6:	jbe    0x1aef0
   1aee8:	mov    DWORD PTR [eax],0x1
   1aeee:	jmp    0x1af36
   1aef0:	and    DWORD PTR [eax],0x0
   1aef3:	mov    esi,DWORD PTR [ebp-0x8]
   1aef6:	lea    ebx,[eax+0x8]
   1aef9:	mov    eax,DWORD PTR [ebp-0x4]
   1aefc:	mov    DWORD PTR [ebx],eax
   1aefe:	lea    edi,[ebp-0x28]
   1af01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af04:	add    ebx,0x4
   1af07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af08:	jmp    0x1af24
   1af0a:	mov    eax,DWORD PTR [esi]
   1af0c:	push   DWORD PTR [eax]
   1af0e:	push   eax
   1af0f:	push   ebx
   1af10:	call   0x1e1b6
   1af15:	mov    eax,DWORD PTR [esi]
   1af17:	add    ebx,DWORD PTR [eax]
   1af19:	add    esp,0xc
   1af1c:	lea    ecx,[ebp-0x28]
   1af1f:	call   0x1a9aa
   1af24:	mov    esi,DWORD PTR [ebp+0x8]
   1af27:	lea    edi,[ebp-0x18]
   1af2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2e:	mov    esi,DWORD PTR [ebp-0x20]
   1af31:	cmp    esi,DWORD PTR [ebp-0x10]
   1af34:	jne    0x1af0a
   1af36:	pop    edi
   1af37:	pop    esi
   1af38:	pop    ebx
   1af39:	leave  
   1af3a:	ret    0x8
   1af3d:	int3   
   1af3e:	int3   
   1af3f:	int3   
   1af40:	int3   
   1af41:	int3   
   1af42:	push   0x8
   1af44:	push   0x77950
   1af49:	call   0x1e1dc
   1af4e:	xor    esi,esi
   1af50:	push   esi
   1af51:	push   esi
   1af52:	push   esi
   1af53:	push   esi
   1af54:	push   0x788ac
   1af59:	call   DWORD PTR ds:0x1f834
   1af5f:	cmp    eax,esi
   1af61:	jl     0x1afa2
   1af63:	mov    DWORD PTR [ebp-0x4],esi
   1af66:	push   DWORD PTR [ebp+0x8]
   1af69:	push   DWORD PTR ds:0x788d4
   1af6f:	call   0x1ae84
   1af74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1af7b:	jmp    0x1af96
   1af7d:	xor    eax,eax
   1af7f:	inc    eax
   1af80:	ret    
   1af81:	mov    esp,DWORD PTR [ebp-0x18]
   1af84:	mov    eax,DWORD PTR [ebp+0x8]
   1af87:	mov    DWORD PTR [eax],0x2
   1af8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1af94:	xor    esi,esi
   1af96:	push   esi
   1af97:	push   0x788ac
   1af9c:	call   DWORD PTR ds:0x1f838
   1afa2:	call   0x1e221
   1afa7:	ret    0x4
   1afaa:	int3   
   1afab:	int3   
   1afac:	int3   
   1afad:	int3   
   1afae:	int3   
   1afaf:	int3   
   1afb0:	mov    edi,edi
   1afb2:	push   ebp
   1afb3:	mov    ebp,esp
   1afb5:	sub    esp,0x10
   1afb8:	push   ebx
   1afb9:	mov    ebx,ecx
   1afbb:	mov    eax,DWORD PTR [ebx+0x10]
   1afbe:	push   esi
   1afbf:	lea    ecx,[eax+0x4]
   1afc2:	push   edi
   1afc3:	mov    DWORD PTR [ebx+0x10],ecx
   1afc6:	push   DWORD PTR [eax]
   1afc8:	call   0x11d22
   1afcd:	xor    eax,eax
   1afcf:	pop    ecx
   1afd0:	cmp    DWORD PTR [ebx+0x2c],eax
   1afd3:	jne    0x1b000
   1afd5:	mov    DWORD PTR [ebp-0x10],eax
   1afd8:	mov    DWORD PTR [ebp-0xc],eax
   1afdb:	mov    DWORD PTR [ebp-0x8],eax
   1afde:	mov    DWORD PTR [ebp-0x4],eax
   1afe1:	lea    edi,[ebx+0x4]
   1afe4:	lea    esi,[ebp-0x10]
   1afe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afe9:	push   DWORD PTR [ebx+0x24]
   1afec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afee:	lea    edi,[ebx+0x14]
   1aff1:	lea    esi,[ebp-0x10]
   1aff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff8:	call   0x11d22
   1affd:	pop    ecx
   1affe:	jmp    0x1b017
   1b000:	mov    eax,DWORD PTR [ebx+0x10]
   1b003:	push   eax
   1b004:	push   DWORD PTR [eax]
   1b006:	lea    ecx,[ebp-0x10]
   1b009:	call   0x1a9d8
   1b00e:	lea    edi,[ebx+0x4]
   1b011:	mov    esi,eax
   1b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b017:	pop    edi
   1b018:	pop    esi
   1b019:	pop    ebx
   1b01a:	leave  
   1b01b:	ret    
   1b01c:	int3   
   1b01d:	int3   
   1b01e:	int3   
   1b01f:	int3   
   1b020:	int3   
   1b021:	int3   
   1b022:	mov    edi,edi
   1b024:	push   ebp
   1b025:	mov    ebp,esp
   1b027:	mov    eax,DWORD PTR [ebp+0xc]
   1b02a:	push   esi
   1b02b:	mov    esi,ecx
   1b02d:	mov    ecx,DWORD PTR [eax]
   1b02f:	mov    DWORD PTR [ebp+0xc],ecx
   1b032:	mov    ecx,DWORD PTR [eax+0x4]
   1b035:	mov    edx,DWORD PTR [eax]
   1b037:	mov    DWORD PTR [ecx],edx
   1b039:	mov    ecx,DWORD PTR [eax]
   1b03b:	mov    edx,DWORD PTR [eax+0x4]
   1b03e:	push   eax
   1b03f:	mov    DWORD PTR [ecx+0x4],edx
   1b042:	call   0x11d22
   1b047:	mov    eax,DWORD PTR [ebp+0x8]
   1b04a:	dec    DWORD PTR [esi+0x8]
   1b04d:	pop    ecx
   1b04e:	mov    ecx,DWORD PTR [ebp+0xc]
   1b051:	mov    DWORD PTR [eax],ecx
   1b053:	pop    esi
   1b054:	pop    ebp
   1b055:	ret    0x8
   1b058:	int3   
   1b059:	int3   
   1b05a:	int3   
   1b05b:	int3   
   1b05c:	int3   
   1b05d:	int3   
   1b05e:	mov    edi,edi
   1b060:	push   ebp
   1b061:	mov    ebp,esp
   1b063:	push   ecx
   1b064:	push   esi
   1b065:	mov    esi,ecx
   1b067:	jmp    0x1b07c
   1b069:	mov    eax,ecx
   1b06b:	mov    ecx,DWORD PTR [ecx]
   1b06d:	push   eax
   1b06e:	lea    eax,[ebp-0x4]
   1b071:	mov    DWORD PTR [ebp+0xc],ecx
   1b074:	push   eax
   1b075:	mov    ecx,esi
   1b077:	call   0x1b022
   1b07c:	mov    ecx,DWORD PTR [ebp+0xc]
   1b07f:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b082:	jne    0x1b069
   1b084:	mov    eax,DWORD PTR [ebp+0x8]
   1b087:	mov    DWORD PTR [eax],ecx
   1b089:	pop    esi
   1b08a:	leave  
   1b08b:	ret    0xc
   1b08e:	int3   
   1b08f:	int3   
   1b090:	int3   
   1b091:	int3   
   1b092:	int3   
   1b093:	int3   
   1b094:	mov    edi,edi
   1b096:	push   ebp
   1b097:	mov    ebp,esp
   1b099:	push   0x0
   1b09b:	push   0xc
   1b09d:	call   0x13444
   1b0a2:	mov    ecx,DWORD PTR [ebp+0x8]
   1b0a5:	test   ecx,ecx
   1b0a7:	jne    0x1b0ab
   1b0a9:	mov    ecx,eax
   1b0ab:	mov    DWORD PTR [eax],ecx
   1b0ad:	mov    ecx,DWORD PTR [ebp+0xc]
   1b0b0:	test   ecx,ecx
   1b0b2:	jne    0x1b0b6
   1b0b4:	mov    ecx,eax
   1b0b6:	mov    DWORD PTR [eax+0x4],ecx
   1b0b9:	pop    ebp
   1b0ba:	ret    0x8
   1b0bd:	int3   
   1b0be:	int3   
   1b0bf:	int3   
   1b0c0:	int3   
   1b0c1:	int3   
   1b0c2:	mov    edi,edi
   1b0c4:	push   esi
   1b0c5:	mov    esi,ecx
   1b0c7:	mov    eax,DWORD PTR [esi+0x28]
   1b0ca:	shl    eax,0x2
   1b0cd:	push   0x0
   1b0cf:	push   eax
   1b0d0:	call   0x13444
   1b0d5:	mov    DWORD PTR [esi+0x24],eax
   1b0d8:	pop    esi
   1b0d9:	ret    
   1b0da:	int3   
   1b0db:	int3   
   1b0dc:	int3   
   1b0dd:	int3   
   1b0de:	int3   
   1b0df:	int3   
   1b0e0:	mov    edi,edi
   1b0e2:	push   ebp
   1b0e3:	mov    ebp,esp
   1b0e5:	push   ebx
   1b0e6:	push   esi
   1b0e7:	push   edi
   1b0e8:	mov    edi,DWORD PTR [ebp+0x8]
   1b0eb:	mov    eax,0xfffffff
   1b0f0:	mov    esi,ecx
   1b0f2:	cmp    edi,eax
   1b0f4:	jbe    0x1b0f8
   1b0f6:	mov    edi,eax
   1b0f8:	mov    eax,edi
   1b0fa:	push   0x0
   1b0fc:	shl    eax,0x2
   1b0ff:	push   eax
   1b100:	call   0x13444
   1b105:	mov    ebx,eax
   1b107:	mov    eax,edi
   1b109:	shr    eax,0x2
   1b10c:	lea    eax,[ebx+eax*4]
   1b10f:	push   eax
   1b110:	mov    DWORD PTR [ebp+0x8],eax
   1b113:	mov    eax,DWORD PTR [esi+0x20]
   1b116:	add    eax,0x4
   1b119:	push   eax
   1b11a:	push   DWORD PTR [esi+0x10]
   1b11d:	call   0x1aa9a
   1b122:	push   DWORD PTR [esi+0x24]
   1b125:	call   0x11d22
   1b12a:	mov    eax,DWORD PTR [ebp+0x8]
   1b12d:	pop    ecx
   1b12e:	mov    DWORD PTR [esi+0x28],edi
   1b131:	pop    edi
   1b132:	mov    DWORD PTR [esi+0x24],ebx
   1b135:	pop    esi
   1b136:	pop    ebx
   1b137:	pop    ebp
   1b138:	ret    0x4
   1b13b:	int3   
   1b13c:	int3   
   1b13d:	int3   
   1b13e:	int3   
   1b13f:	int3   
   1b140:	mov    edi,edi
   1b142:	push   ebp
   1b143:	mov    ebp,esp
   1b145:	push   0x0
   1b147:	push   0x18
   1b149:	call   0x13444
   1b14e:	mov    ecx,DWORD PTR [ebp+0x8]
   1b151:	mov    DWORD PTR [eax+0x4],ecx
   1b154:	mov    ecx,DWORD PTR [ebp+0xc]
   1b157:	mov    DWORD PTR [eax+0x14],ecx
   1b15a:	pop    ebp
   1b15b:	ret    0x8
   1b15e:	int3   
   1b15f:	int3   
   1b160:	int3   
   1b161:	int3   
   1b162:	int3   
   1b163:	int3   
   1b164:	mov    edi,edi
   1b166:	push   ebp
   1b167:	mov    ebp,esp
   1b169:	push   ecx
   1b16a:	push   DWORD PTR [ebp-0x4]
   1b16d:	push   DWORD PTR [ebp+0x10]
   1b170:	push   DWORD PTR [ebp+0xc]
   1b173:	push   DWORD PTR [ebp+0x8]
   1b176:	call   0x1ad4a
   1b17b:	add    esp,0x10
   1b17e:	leave  
   1b17f:	ret    
   1b180:	int3   
   1b181:	int3   
   1b182:	int3   
   1b183:	int3   
   1b184:	int3   
   1b185:	int3   
   1b186:	mov    edi,edi
   1b188:	push   ebp
   1b189:	mov    ebp,esp
   1b18b:	sub    esp,0x28
   1b18e:	push   ebx
   1b18f:	mov    ebx,DWORD PTR [ebp+0x8]
   1b192:	push   esi
   1b193:	push   edi
   1b194:	push   0xffffffff
   1b196:	push   ebx
   1b197:	lea    ecx,[ebp-0x8]
   1b19a:	call   0x12b6e
   1b19f:	and    DWORD PTR [ebx],0x0
   1b1a2:	lea    eax,[ebp-0x8]
   1b1a5:	push   eax
   1b1a6:	lea    eax,[ebp-0x18]
   1b1a9:	push   eax
   1b1aa:	call   0x1ade6
   1b1af:	mov    esi,DWORD PTR ds:0x788d4
   1b1b5:	mov    eax,DWORD PTR [ebp-0x10]
   1b1b8:	push   DWORD PTR [ebp-0x8]
   1b1bb:	add    esi,0x14
   1b1be:	lea    edi,[ebp-0x28]
   1b1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c5:	cmp    eax,DWORD PTR [ebp-0x20]
   1b1c8:	je     0x1b1d2
   1b1ca:	mov    eax,DWORD PTR [eax]
   1b1cc:	mov    eax,DWORD PTR [eax+0x20]
   1b1cf:	inc    eax
   1b1d0:	mov    DWORD PTR [ebx],eax
   1b1d2:	call   0x11d22
   1b1d7:	pop    ecx
   1b1d8:	pop    edi
   1b1d9:	pop    esi
   1b1da:	pop    ebx
   1b1db:	leave  
   1b1dc:	ret    0x4
   1b1df:	int3   
   1b1e0:	int3   
   1b1e1:	int3   
   1b1e2:	int3   
   1b1e3:	int3   
   1b1e4:	add    DWORD PTR [ecx+0xc],0x4
   1b1e8:	dec    DWORD PTR [ecx+0x2c]
   1b1eb:	mov    eax,DWORD PTR [ecx+0xc]
   1b1ee:	je     0x1b1f5
   1b1f0:	cmp    eax,DWORD PTR [ecx+0x8]
   1b1f3:	jne    0x1b1fa
   1b1f5:	jmp    0x1afb0
   1b1fa:	ret    
   1b1fb:	int3   
   1b1fc:	int3   
   1b1fd:	int3   
   1b1fe:	int3   
   1b1ff:	int3   
   1b200:	mov    edi,edi
   1b202:	push   esi
   1b203:	push   0x0
   1b205:	push   0xc
   1b207:	mov    esi,ecx
   1b209:	call   0x13444
   1b20e:	mov    DWORD PTR [eax],eax
   1b210:	mov    DWORD PTR [eax+0x4],eax
   1b213:	and    DWORD PTR [esi+0x8],0x0
   1b217:	mov    DWORD PTR [esi+0x4],eax
   1b21a:	mov    eax,esi
   1b21c:	pop    esi
   1b21d:	ret    0x4
   1b220:	int3   
   1b221:	int3   
   1b222:	int3   
   1b223:	int3   
   1b224:	int3   
   1b225:	int3   
   1b226:	mov    edi,edi
   1b228:	push   ebp
   1b229:	mov    ebp,esp
   1b22b:	push   ecx
   1b22c:	push   esi
   1b22d:	mov    esi,ecx
   1b22f:	mov    eax,DWORD PTR [esi+0x4]
   1b232:	mov    ecx,DWORD PTR [eax]
   1b234:	push   eax
   1b235:	push   ecx
   1b236:	lea    eax,[ebp-0x4]
   1b239:	push   eax
   1b23a:	mov    ecx,esi
   1b23c:	call   0x1b05e
   1b241:	push   DWORD PTR [esi+0x4]
   1b244:	call   0x11d22
   1b249:	and    DWORD PTR [esi+0x4],0x0
   1b24d:	and    DWORD PTR [esi+0x8],0x0
   1b251:	pop    ecx
   1b252:	pop    esi
   1b253:	leave  
   1b254:	ret    
   1b255:	int3   
   1b256:	int3   
   1b257:	int3   
   1b258:	int3   
   1b259:	int3   
   1b25a:	mov    edi,edi
   1b25c:	push   ebp
   1b25d:	mov    ebp,esp
   1b25f:	push   ecx
   1b260:	mov    eax,DWORD PTR [ecx+0x4]
   1b263:	push   DWORD PTR [eax]
   1b265:	lea    eax,[ebp-0x4]
   1b268:	push   eax
   1b269:	call   0x1b022
   1b26e:	leave  
   1b26f:	ret    
   1b270:	int3   
   1b271:	int3   
   1b272:	int3   
   1b273:	int3   
   1b274:	int3   
   1b275:	int3   
   1b276:	mov    edi,edi
   1b278:	push   ebp
   1b279:	mov    ebp,esp
   1b27b:	sub    esp,0x18
   1b27e:	push   ebx
   1b27f:	push   esi
   1b280:	push   edi
   1b281:	push   0x0
   1b283:	push   0x400
   1b288:	mov    ebx,ecx
   1b28a:	call   0x1aac4
   1b28f:	cmp    DWORD PTR [ebx+0x2c],0x0
   1b293:	mov    esi,eax
   1b295:	mov    DWORD PTR [ebp-0x8],esi
   1b298:	jne    0x1b2cf
   1b29a:	mov    ecx,ebx
   1b29c:	mov    DWORD PTR [ebx+0x28],0x2
   1b2a3:	call   0x1b0c2
   1b2a8:	mov    eax,DWORD PTR [ebx+0x24]
   1b2ab:	mov    DWORD PTR [eax+0x4],esi
   1b2ae:	mov    eax,DWORD PTR [ebx+0x24]
   1b2b1:	add    eax,0x4
   1b2b4:	push   eax
   1b2b5:	add    esi,0x800
   1b2bb:	push   esi
   1b2bc:	lea    ecx,[ebp-0x18]
   1b2bf:	call   0x1a9d8
   1b2c4:	lea    edi,[ebx+0x4]
   1b2c7:	mov    esi,eax
   1b2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cd:	jmp    0x1b32d
   1b2cf:	mov    ecx,DWORD PTR [ebx+0x28]
   1b2d2:	mov    edx,DWORD PTR [ebx+0x24]
   1b2d5:	mov    eax,DWORD PTR [ebx+0x20]
   1b2d8:	lea    ecx,[edx+ecx*4-0x4]
   1b2dc:	cmp    eax,ecx
   1b2de:	jae    0x1b2ee
   1b2e0:	add    eax,0x4
   1b2e3:	mov    DWORD PTR [ebx+0x20],eax
   1b2e6:	mov    DWORD PTR [eax],esi
   1b2e8:	push   DWORD PTR [ebx+0x20]
   1b2eb:	push   esi
   1b2ec:	jmp    0x1b325
   1b2ee:	sub    eax,DWORD PTR [ebx+0x10]
   1b2f1:	mov    ecx,ebx
   1b2f3:	sar    eax,0x2
   1b2f6:	inc    eax
   1b2f7:	mov    edi,eax
   1b2f9:	lea    eax,[edi+edi*1]
   1b2fc:	push   eax
   1b2fd:	call   0x1b0e0
   1b302:	lea    ecx,[eax+edi*4]
   1b305:	mov    DWORD PTR [ecx],esi
   1b307:	push   eax
   1b308:	push   DWORD PTR [ebx+0xc]
   1b30b:	mov    DWORD PTR [ebp-0x4],ecx
   1b30e:	lea    ecx,[ebp-0x18]
   1b311:	call   0x1a9d8
   1b316:	push   DWORD PTR [ebp-0x4]
   1b319:	lea    edi,[ebx+0x4]
   1b31c:	push   DWORD PTR [ebp-0x8]
   1b31f:	mov    esi,eax
   1b321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b325:	lea    ecx,[ebp-0x18]
   1b328:	call   0x1a9d8
   1b32d:	lea    edi,[ebx+0x14]
   1b330:	mov    esi,eax
   1b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b336:	pop    edi
   1b337:	pop    esi
   1b338:	pop    ebx
   1b339:	leave  
   1b33a:	ret    
   1b33b:	int3   
   1b33c:	int3   
   1b33d:	int3   
   1b33e:	int3   
   1b33f:	int3   
   1b340:	mov    edi,edi
   1b342:	push   ebp
   1b343:	mov    ebp,esp
   1b345:	mov    eax,DWORD PTR [ebp+0xc]
   1b348:	push   ebx
   1b349:	push   esi
   1b34a:	push   edi
   1b34b:	lea    edi,[eax+0x4]
   1b34e:	push   DWORD PTR [edi]
   1b350:	mov    ebx,ecx
   1b352:	push   eax
   1b353:	call   0x1b094
   1b358:	push   DWORD PTR [ebp+0x10]
   1b35b:	mov    esi,eax
   1b35d:	mov    DWORD PTR [edi],esi
   1b35f:	mov    eax,DWORD PTR [esi+0x4]
   1b362:	mov    DWORD PTR [eax],esi
   1b364:	lea    eax,[esi+0x8]
   1b367:	push   eax
   1b368:	call   0x1aa7e
   1b36d:	mov    eax,DWORD PTR [ebp+0x8]
   1b370:	inc    DWORD PTR [ebx+0x8]
   1b373:	pop    edi
   1b374:	mov    DWORD PTR [eax],esi
   1b376:	pop    esi
   1b377:	pop    ebx
   1b378:	pop    ebp
   1b379:	ret    0xc
   1b37c:	int3   
   1b37d:	int3   
   1b37e:	int3   
   1b37f:	int3   
   1b380:	int3   
   1b381:	int3   
   1b382:	mov    edi,edi
   1b384:	push   ebp
   1b385:	mov    ebp,esp
   1b387:	push   ecx
   1b388:	mov    eax,DWORD PTR [ebp+0xc]
   1b38b:	push   esi
   1b38c:	mov    esi,ecx
   1b38e:	jmp    0x1b3aa
   1b390:	add    eax,0x8
   1b393:	push   eax
   1b394:	push   DWORD PTR [ebp+0x8]
   1b397:	lea    eax,[ebp-0x4]
   1b39a:	push   eax
   1b39b:	mov    ecx,esi
   1b39d:	call   0x1b340
   1b3a2:	mov    eax,DWORD PTR [ebp+0xc]
   1b3a5:	mov    eax,DWORD PTR [eax]
   1b3a7:	mov    DWORD PTR [ebp+0xc],eax
   1b3aa:	cmp    eax,DWORD PTR [ebp+0x10]
   1b3ad:	jne    0x1b390
   1b3af:	pop    esi
   1b3b0:	leave  
   1b3b1:	ret    0xc
   1b3b4:	int3   
   1b3b5:	int3   
   1b3b6:	int3   
   1b3b7:	int3   
   1b3b8:	int3   
   1b3b9:	int3   
   1b3ba:	mov    edi,edi
   1b3bc:	push   ebp
   1b3bd:	mov    ebp,esp
   1b3bf:	push   esi
   1b3c0:	push   edi
   1b3c1:	push   DWORD PTR [ebp+0xc]
   1b3c4:	mov    edi,ecx
   1b3c6:	call   0x1acd4
   1b3cb:	push   DWORD PTR [ebp+0xc]
   1b3ce:	mov    ecx,edi
   1b3d0:	mov    esi,eax
   1b3d2:	call   0x1ac94
   1b3d7:	mov    ecx,DWORD PTR [ebp+0x8]
   1b3da:	pop    edi
   1b3db:	mov    DWORD PTR [ecx],eax
   1b3dd:	mov    DWORD PTR [ecx+0x4],esi
   1b3e0:	mov    eax,ecx
   1b3e2:	pop    esi
   1b3e3:	pop    ebp
   1b3e4:	ret    0x8
   1b3e7:	int3   
   1b3e8:	int3   
   1b3e9:	int3   
   1b3ea:	int3   
   1b3eb:	int3   
   1b3ec:	mov    edi,edi
   1b3ee:	push   ebp
   1b3ef:	mov    ebp,esp
   1b3f1:	push   ecx
   1b3f2:	push   ebx
   1b3f3:	push   esi
   1b3f4:	push   edi
   1b3f5:	push   0x1
   1b3f7:	xor    edi,edi
   1b3f9:	push   edi
   1b3fa:	mov    esi,ecx
   1b3fc:	call   0x1b140
   1b401:	lea    ecx,[ebp-0x1]
   1b404:	mov    ebx,eax
   1b406:	call   DWORD PTR ds:0x77734
   1b40c:	cmp    DWORD PTR ds:0x788dc,edi
   1b412:	jne    0x1b427
   1b414:	mov    eax,ebx
   1b416:	mov    ds:0x788dc,eax
   1b41b:	mov    DWORD PTR [eax],edi
   1b41d:	mov    eax,ds:0x788dc
   1b422:	xor    ebx,ebx
   1b424:	mov    DWORD PTR [eax+0x8],edi
   1b427:	inc    DWORD PTR ds:0x788e0
   1b42d:	lea    ecx,[ebp-0x1]
   1b430:	call   DWORD PTR ds:0x77730
   1b436:	cmp    ebx,edi
   1b438:	je     0x1b441
   1b43a:	push   ebx
   1b43b:	call   0x11d22
   1b440:	pop    ecx
   1b441:	push   edi
   1b442:	push   DWORD PTR ds:0x788dc
   1b448:	mov    ecx,esi
   1b44a:	call   0x1b140
   1b44f:	mov    DWORD PTR [esi+0xc],edi
   1b452:	mov    DWORD PTR [esi+0x4],eax
   1b455:	mov    DWORD PTR [eax],eax
   1b457:	mov    esi,DWORD PTR [esi+0x4]
   1b45a:	pop    edi
   1b45b:	mov    DWORD PTR [esi+0x8],esi
   1b45e:	pop    esi
   1b45f:	pop    ebx
   1b460:	leave  
   1b461:	ret    
   1b462:	int3   
   1b463:	int3   
   1b464:	int3   
   1b465:	int3   
   1b466:	int3   
   1b467:	int3   
   1b468:	mov    edi,edi
   1b46a:	push   ebp
   1b46b:	mov    ebp,esp
   1b46d:	push   ebx
   1b46e:	push   esi
   1b46f:	mov    esi,DWORD PTR [ebp+0x10]
   1b472:	push   edi
   1b473:	push   0x0
   1b475:	push   esi
   1b476:	mov    edi,ecx
   1b478:	call   0x1b140
   1b47d:	push   DWORD PTR [ebp+0x14]
   1b480:	mov    ebx,eax
   1b482:	mov    eax,ds:0x788dc
   1b487:	mov    DWORD PTR [ebx],eax
   1b489:	mov    eax,ds:0x788dc
   1b48e:	mov    DWORD PTR [ebx+0x8],eax
   1b491:	lea    eax,[ebx+0xc]
   1b494:	push   eax
   1b495:	call   0x1ad14
   1b49a:	inc    DWORD PTR [edi+0xc]
   1b49d:	cmp    esi,DWORD PTR [edi+0x4]
   1b4a0:	je     0x1b4ca
   1b4a2:	mov    eax,DWORD PTR [ebp+0xc]
   1b4a5:	cmp    eax,DWORD PTR ds:0x788dc
   1b4ab:	jne    0x1b4ca
   1b4ad:	lea    eax,[esi+0xc]
   1b4b0:	push   eax
   1b4b1:	push   DWORD PTR [ebp+0x14]
   1b4b4:	call   0x19eec
   1b4b9:	test   al,al
   1b4bb:	jne    0x1b4ca
   1b4bd:	mov    DWORD PTR [esi+0x8],ebx
   1b4c0:	mov    eax,DWORD PTR [edi+0x4]
   1b4c3:	cmp    esi,DWORD PTR [eax+0x8]
   1b4c6:	jne    0x1b4e4
   1b4c8:	jmp    0x1b4d9
   1b4ca:	mov    DWORD PTR [esi],ebx
   1b4cc:	mov    eax,DWORD PTR [edi+0x4]
   1b4cf:	cmp    esi,eax
   1b4d1:	jne    0x1b4de
   1b4d3:	mov    DWORD PTR [eax+0x4],ebx
   1b4d6:	mov    eax,DWORD PTR [edi+0x4]
   1b4d9:	mov    DWORD PTR [eax+0x8],ebx
   1b4dc:	jmp    0x1b4e4
   1b4de:	cmp    esi,DWORD PTR [eax]
   1b4e0:	jne    0x1b4e4
   1b4e2:	mov    DWORD PTR [eax],ebx
   1b4e4:	mov    eax,DWORD PTR [edi+0x4]
   1b4e7:	mov    esi,ebx
   1b4e9:	cmp    ebx,DWORD PTR [eax+0x4]
   1b4ec:	je     0x1b5a0
   1b4f2:	mov    eax,DWORD PTR [esi+0x4]
   1b4f5:	xor    edx,edx
   1b4f7:	cmp    DWORD PTR [eax+0x14],edx
   1b4fa:	jne    0x1b5a0
   1b500:	mov    ecx,DWORD PTR [eax+0x4]
   1b503:	cmp    eax,DWORD PTR [ecx]
   1b505:	jne    0x1b541
   1b507:	mov    ecx,DWORD PTR [ecx+0x8]
   1b50a:	cmp    DWORD PTR [ecx+0x14],edx
   1b50d:	je     0x1b548
   1b50f:	cmp    esi,DWORD PTR [eax+0x8]
   1b512:	jne    0x1b51e
   1b514:	mov    esi,eax
   1b516:	push   esi
   1b517:	mov    ecx,edi
   1b519:	call   0x1abb6
   1b51e:	mov    eax,DWORD PTR [esi+0x4]
   1b521:	mov    DWORD PTR [eax+0x14],0x1
   1b528:	mov    eax,DWORD PTR [esi+0x4]
   1b52b:	mov    eax,DWORD PTR [eax+0x4]
   1b52e:	and    DWORD PTR [eax+0x14],0x0
   1b532:	mov    eax,DWORD PTR [esi+0x4]
   1b535:	push   DWORD PTR [eax+0x4]
   1b538:	mov    ecx,edi
   1b53a:	call   0x1ac04
   1b53f:	jmp    0x1b594
   1b541:	mov    ecx,DWORD PTR [ecx]
   1b543:	cmp    DWORD PTR [ecx+0x14],edx
   1b546:	jne    0x1b565
   1b548:	mov    edx,eax
   1b54a:	xor    eax,eax
   1b54c:	inc    eax
   1b54d:	mov    DWORD PTR [edx+0x14],eax
   1b550:	mov    DWORD PTR [ecx+0x14],eax
   1b553:	mov    eax,DWORD PTR [esi+0x4]
   1b556:	mov    eax,DWORD PTR [eax+0x4]
   1b559:	and    DWORD PTR [eax+0x14],0x0
   1b55d:	mov    eax,DWORD PTR [esi+0x4]
   1b560:	mov    esi,DWORD PTR [eax+0x4]
   1b563:	jmp    0x1b594
   1b565:	cmp    esi,DWORD PTR [eax]
   1b567:	jne    0x1b573
   1b569:	mov    esi,eax
   1b56b:	push   esi
   1b56c:	mov    ecx,edi
   1b56e:	call   0x1ac04
   1b573:	mov    eax,DWORD PTR [esi+0x4]
   1b576:	mov    DWORD PTR [eax+0x14],0x1
   1b57d:	mov    eax,DWORD PTR [esi+0x4]
   1b580:	mov    eax,DWORD PTR [eax+0x4]
   1b583:	and    DWORD PTR [eax+0x14],0x0
   1b587:	mov    eax,DWORD PTR [esi+0x4]
   1b58a:	push   DWORD PTR [eax+0x4]
   1b58d:	mov    ecx,edi
   1b58f:	call   0x1abb6
   1b594:	mov    eax,DWORD PTR [edi+0x4]
   1b597:	cmp    esi,DWORD PTR [eax+0x4]
   1b59a:	jne    0x1b4f2
   1b5a0:	mov    eax,DWORD PTR [edi+0x4]
   1b5a3:	mov    eax,DWORD PTR [eax+0x4]
   1b5a6:	pop    edi
   1b5a7:	mov    DWORD PTR [eax+0x14],0x1
   1b5ae:	mov    eax,DWORD PTR [ebp+0x8]
   1b5b1:	pop    esi
   1b5b2:	mov    DWORD PTR [eax],ebx
   1b5b4:	pop    ebx
   1b5b5:	pop    ebp
   1b5b6:	ret    0x10
   1b5b9:	int3   
   1b5ba:	int3   
   1b5bb:	int3   
   1b5bc:	int3   
   1b5bd:	int3   
   1b5be:	mov    edi,edi
   1b5c0:	push   ebp
   1b5c1:	mov    ebp,esp
   1b5c3:	sub    esp,0x10
   1b5c6:	push   ebx
   1b5c7:	push   esi
   1b5c8:	mov    DWORD PTR [ebp-0xc],ecx
   1b5cb:	push   edi
   1b5cc:	mov    edi,DWORD PTR [ebp+0xc]
   1b5cf:	lea    ecx,[ebp+0xc]
   1b5d2:	call   0x1aa48
   1b5d7:	mov    esi,DWORD PTR [edi]
   1b5d9:	mov    eax,ds:0x788dc
   1b5de:	lea    ebx,[edi+0x8]
   1b5e1:	mov    DWORD PTR [ebp-0x8],edi
   1b5e4:	mov    DWORD PTR [ebp-0x10],ebx
   1b5e7:	cmp    esi,eax
   1b5e9:	jne    0x1b5ef
   1b5eb:	mov    esi,DWORD PTR [ebx]
   1b5ed:	jmp    0x1b606
   1b5ef:	mov    ecx,DWORD PTR [ebx]
   1b5f1:	cmp    ecx,eax
   1b5f3:	je     0x1b606
   1b5f5:	push   ecx
   1b5f6:	call   0x1aa26
   1b5fb:	mov    DWORD PTR [ebp-0x8],eax
   1b5fe:	add    eax,0x8
   1b601:	mov    esi,DWORD PTR [eax]
   1b603:	mov    DWORD PTR [ebp-0x10],eax
   1b606:	lea    ecx,[ebp-0x1]
   1b609:	call   DWORD PTR ds:0x77734
   1b60f:	mov    eax,DWORD PTR [ebp-0x8]
   1b612:	cmp    eax,edi
   1b614:	je     0x1b676
   1b616:	mov    ecx,DWORD PTR [edi]
   1b618:	mov    DWORD PTR [ecx+0x4],eax
   1b61b:	mov    ecx,DWORD PTR [edi]
   1b61d:	mov    DWORD PTR [eax],ecx
   1b61f:	cmp    eax,DWORD PTR [ebx]
   1b621:	jne    0x1b628
   1b623:	mov    DWORD PTR [esi+0x4],eax
   1b626:	jmp    0x1b63f
   1b628:	mov    ecx,DWORD PTR [eax+0x4]
   1b62b:	mov    edx,DWORD PTR [ebp-0x10]
   1b62e:	mov    DWORD PTR [esi+0x4],ecx
   1b631:	mov    ecx,DWORD PTR [eax+0x4]
   1b634:	mov    DWORD PTR [ecx],esi
   1b636:	mov    ecx,DWORD PTR [ebx]
   1b638:	mov    DWORD PTR [edx],ecx
   1b63a:	mov    ecx,DWORD PTR [ebx]
   1b63c:	mov    DWORD PTR [ecx+0x4],eax
   1b63f:	mov    ebx,DWORD PTR [ebp-0xc]
   1b642:	mov    ecx,DWORD PTR [ebx+0x4]
   1b645:	cmp    DWORD PTR [ecx+0x4],edi
   1b648:	jne    0x1b64f
   1b64a:	mov    DWORD PTR [ecx+0x4],eax
   1b64d:	jmp    0x1b65d
   1b64f:	mov    ecx,DWORD PTR [edi+0x4]
   1b652:	cmp    DWORD PTR [ecx],edi
   1b654:	jne    0x1b65a
   1b656:	mov    DWORD PTR [ecx],eax
   1b658:	jmp    0x1b65d
   1b65a:	mov    DWORD PTR [ecx+0x8],eax
   1b65d:	mov    ecx,DWORD PTR [edi+0x4]
   1b660:	mov    DWORD PTR [eax+0x4],ecx
   1b663:	mov    ecx,DWORD PTR [eax+0x14]
   1b666:	mov    edx,DWORD PTR [edi+0x14]
   1b669:	mov    DWORD PTR [eax+0x14],edx
   1b66c:	mov    DWORD PTR [edi+0x14],ecx
   1b66f:	mov    DWORD PTR [ebp-0x8],edi
   1b672:	mov    eax,edi
   1b674:	jmp    0x1b6ef
   1b676:	mov    ecx,DWORD PTR [eax+0x4]
   1b679:	mov    edx,DWORD PTR [ebp-0xc]
   1b67c:	mov    DWORD PTR [esi+0x4],ecx
   1b67f:	mov    ecx,DWORD PTR [edx+0x4]
   1b682:	cmp    DWORD PTR [ecx+0x4],edi
   1b685:	jne    0x1b68c
   1b687:	mov    DWORD PTR [ecx+0x4],esi
   1b68a:	jmp    0x1b69a
   1b68c:	mov    ecx,DWORD PTR [edi+0x4]
   1b68f:	cmp    DWORD PTR [ecx],edi
   1b691:	jne    0x1b697
   1b693:	mov    DWORD PTR [ecx],esi
   1b695:	jmp    0x1b69a
   1b697:	mov    DWORD PTR [ecx+0x8],esi
   1b69a:	mov    ecx,DWORD PTR [edx+0x4]
   1b69d:	mov    DWORD PTR [ebp-0x10],ecx
   1b6a0:	cmp    DWORD PTR [ecx],edi
   1b6a2:	jne    0x1b6c6
   1b6a4:	mov    ebx,DWORD PTR [ebx]
   1b6a6:	cmp    ebx,DWORD PTR ds:0x788dc
   1b6ac:	jne    0x1b6b5
   1b6ae:	mov    ebx,DWORD PTR [edi+0x4]
   1b6b1:	mov    DWORD PTR [ecx],ebx
   1b6b3:	jmp    0x1b6c6
   1b6b5:	push   esi
   1b6b6:	call   0x1aa26
   1b6bb:	mov    ecx,DWORD PTR [ebp-0x10]
   1b6be:	mov    edx,DWORD PTR [ebp-0xc]
   1b6c1:	mov    DWORD PTR [ecx],eax
   1b6c3:	mov    eax,DWORD PTR [ebp-0x8]
   1b6c6:	mov    ebx,DWORD PTR [edx+0x4]
   1b6c9:	cmp    DWORD PTR [ebx+0x8],edi
   1b6cc:	jne    0x1b6ec
   1b6ce:	mov    ecx,DWORD PTR [edi]
   1b6d0:	cmp    ecx,DWORD PTR ds:0x788dc
   1b6d6:	jne    0x1b6e0
   1b6d8:	mov    ecx,DWORD PTR [edi+0x4]
   1b6db:	mov    DWORD PTR [ebx+0x8],ecx
   1b6de:	jmp    0x1b6ec
   1b6e0:	push   esi
   1b6e1:	call   0x1aa04
   1b6e6:	mov    DWORD PTR [ebx+0x8],eax
   1b6e9:	mov    eax,DWORD PTR [ebp-0x8]
   1b6ec:	mov    ebx,DWORD PTR [ebp-0xc]
   1b6ef:	xor    edi,edi
   1b6f1:	inc    edi
   1b6f2:	cmp    DWORD PTR [eax+0x14],edi
   1b6f5:	jne    0x1b809
   1b6fb:	jmp    0x1b7bc
   1b700:	cmp    DWORD PTR [esi+0x14],edi
   1b703:	jne    0x1b806
   1b709:	mov    eax,DWORD PTR [esi+0x4]
   1b70c:	cmp    esi,DWORD PTR [eax]
   1b70e:	jne    0x1b785
   1b710:	mov    eax,DWORD PTR [eax+0x8]
   1b713:	cmp    DWORD PTR [eax+0x14],0x0
   1b717:	jne    0x1b733
   1b719:	mov    DWORD PTR [eax+0x14],edi
   1b71c:	mov    eax,DWORD PTR [esi+0x4]
   1b71f:	and    DWORD PTR [eax+0x14],0x0
   1b723:	push   DWORD PTR [esi+0x4]
   1b726:	mov    ecx,ebx
   1b728:	call   0x1abb6
   1b72d:	mov    eax,DWORD PTR [esi+0x4]
   1b730:	mov    eax,DWORD PTR [eax+0x8]
   1b733:	mov    ecx,DWORD PTR [eax]
   1b735:	cmp    DWORD PTR [ecx+0x14],edi
   1b738:	jne    0x1b742
   1b73a:	mov    ecx,DWORD PTR [eax+0x8]
   1b73d:	cmp    DWORD PTR [ecx+0x14],edi
   1b740:	je     0x1b7b5
   1b742:	mov    ecx,DWORD PTR [eax+0x8]
   1b745:	cmp    DWORD PTR [ecx+0x14],edi
   1b748:	jne    0x1b761
   1b74a:	mov    ecx,DWORD PTR [eax]
   1b74c:	mov    DWORD PTR [ecx+0x14],edi
   1b74f:	and    DWORD PTR [eax+0x14],0x0
   1b753:	push   eax
   1b754:	mov    ecx,ebx
   1b756:	call   0x1ac04
   1b75b:	mov    eax,DWORD PTR [esi+0x4]
   1b75e:	mov    eax,DWORD PTR [eax+0x8]
   1b761:	mov    ecx,DWORD PTR [esi+0x4]
   1b764:	mov    ecx,DWORD PTR [ecx+0x14]
   1b767:	mov    DWORD PTR [eax+0x14],ecx
   1b76a:	mov    ecx,DWORD PTR [esi+0x4]
   1b76d:	mov    DWORD PTR [ecx+0x14],edi
   1b770:	mov    eax,DWORD PTR [eax+0x8]
   1b773:	mov    DWORD PTR [eax+0x14],edi
   1b776:	push   DWORD PTR [esi+0x4]
   1b779:	mov    ecx,ebx
   1b77b:	call   0x1abb6
   1b780:	jmp    0x1b806
   1b785:	mov    eax,DWORD PTR [eax]
   1b787:	cmp    DWORD PTR [eax+0x14],0x0
   1b78b:	jne    0x1b7a6
   1b78d:	mov    DWORD PTR [eax+0x14],edi
   1b790:	mov    eax,DWORD PTR [esi+0x4]
   1b793:	and    DWORD PTR [eax+0x14],0x0
   1b797:	push   DWORD PTR [esi+0x4]
   1b79a:	mov    ecx,ebx
   1b79c:	call   0x1ac04
   1b7a1:	mov    eax,DWORD PTR [esi+0x4]
   1b7a4:	mov    eax,DWORD PTR [eax]
   1b7a6:	mov    ecx,DWORD PTR [eax+0x8]
   1b7a9:	cmp    DWORD PTR [ecx+0x14],edi
   1b7ac:	jne    0x1b7ca
   1b7ae:	mov    ecx,DWORD PTR [eax]
   1b7b0:	cmp    DWORD PTR [ecx+0x14],edi
   1b7b3:	jne    0x1b7ca
   1b7b5:	and    DWORD PTR [eax+0x14],0x0
   1b7b9:	mov    esi,DWORD PTR [esi+0x4]
   1b7bc:	mov    eax,DWORD PTR [ebx+0x4]
   1b7bf:	cmp    esi,DWORD PTR [eax+0x4]
   1b7c2:	jne    0x1b700
   1b7c8:	jmp    0x1b806
   1b7ca:	mov    ecx,DWORD PTR [eax]
   1b7cc:	cmp    DWORD PTR [ecx+0x14],edi
   1b7cf:	jne    0x1b7e8
   1b7d1:	mov    ecx,DWORD PTR [eax+0x8]
   1b7d4:	mov    DWORD PTR [ecx+0x14],edi
   1b7d7:	and    DWORD PTR [eax+0x14],0x0
   1b7db:	push   eax
   1b7dc:	mov    ecx,ebx
   1b7de:	call   0x1abb6
   1b7e3:	mov    eax,DWORD PTR [esi+0x4]
   1b7e6:	mov    eax,DWORD PTR [eax]
   1b7e8:	mov    ecx,DWORD PTR [esi+0x4]
   1b7eb:	mov    ecx,DWORD PTR [ecx+0x14]
   1b7ee:	mov    DWORD PTR [eax+0x14],ecx
   1b7f1:	mov    ecx,DWORD PTR [esi+0x4]
   1b7f4:	mov    DWORD PTR [ecx+0x14],edi
   1b7f7:	mov    eax,DWORD PTR [eax]
   1b7f9:	mov    DWORD PTR [eax+0x14],edi
   1b7fc:	push   DWORD PTR [esi+0x4]
   1b7ff:	mov    ecx,ebx
   1b801:	call   0x1ac04
   1b806:	mov    DWORD PTR [esi+0x14],edi
   1b809:	lea    ecx,[ebp-0x1]
   1b80c:	call   DWORD PTR ds:0x77730
   1b812:	mov    esi,DWORD PTR [ebp-0x8]
   1b815:	lea    eax,[esi+0xc]
   1b818:	push   eax
   1b819:	call   0x1ad32
   1b81e:	push   esi
   1b81f:	call   0x11d22
   1b824:	mov    eax,DWORD PTR [ebp+0x8]
   1b827:	dec    DWORD PTR [ebx+0xc]
   1b82a:	pop    ecx
   1b82b:	mov    ecx,DWORD PTR [ebp+0xc]
   1b82e:	pop    edi
   1b82f:	pop    esi
   1b830:	mov    DWORD PTR [eax],ecx
   1b832:	pop    ebx
   1b833:	leave  
   1b834:	ret    0x8
   1b837:	int3   
   1b838:	int3   
   1b839:	int3   
   1b83a:	int3   
   1b83b:	int3   
   1b83c:	mov    edi,edi
   1b83e:	push   ebp
   1b83f:	mov    ebp,esp
   1b841:	push   ebx
   1b842:	push   esi
   1b843:	push   edi
   1b844:	mov    edi,DWORD PTR [ebp+0x8]
   1b847:	mov    ebx,ecx
   1b849:	mov    esi,edi
   1b84b:	cmp    edi,DWORD PTR ds:0x788dc
   1b851:	je     0x1b879
   1b853:	push   DWORD PTR [esi+0x8]
   1b856:	mov    ecx,ebx
   1b858:	call   0x1b83c
   1b85d:	mov    esi,DWORD PTR [esi]
   1b85f:	lea    eax,[edi+0xc]
   1b862:	push   eax
   1b863:	call   0x1ad32
   1b868:	push   edi
   1b869:	call   0x11d22
   1b86e:	pop    ecx
   1b86f:	mov    edi,esi
   1b871:	cmp    esi,DWORD PTR ds:0x788dc
   1b877:	jne    0x1b853
   1b879:	pop    edi
   1b87a:	pop    esi
   1b87b:	pop    ebx
   1b87c:	pop    ebp
   1b87d:	ret    0x4
   1b880:	int3   
   1b881:	int3   
   1b882:	int3   
   1b883:	int3   
   1b884:	int3   
   1b885:	int3   
   1b886:	mov    edi,edi
   1b888:	push   esi
   1b889:	mov    esi,ecx
   1b88b:	jmp    0x1b894
   1b88d:	mov    ecx,esi
   1b88f:	call   0x1b1e4
   1b894:	cmp    DWORD PTR [esi+0x2c],0x0
   1b898:	jne    0x1b88d
   1b89a:	pop    esi
   1b89b:	ret    
   1b89c:	int3   
   1b89d:	int3   
   1b89e:	int3   
   1b89f:	int3   
   1b8a0:	int3   
   1b8a1:	int3   
   1b8a2:	mov    edi,edi
   1b8a4:	push   ebp
   1b8a5:	mov    ebp,esp
   1b8a7:	push   esi
   1b8a8:	mov    esi,ecx
   1b8aa:	cmp    DWORD PTR [esi+0x2c],0x0
   1b8ae:	je     0x1b8d6
   1b8b0:	mov    ecx,DWORD PTR [esi+0x1c]
   1b8b3:	mov    edx,DWORD PTR [esi+0x18]
   1b8b6:	cmp    ecx,edx
   1b8b8:	je     0x1b8d6
   1b8ba:	push   DWORD PTR [ebp+0x8]
   1b8bd:	lea    eax,[ecx+0x4]
   1b8c0:	mov    DWORD PTR [esi+0x1c],eax
   1b8c3:	push   ecx
   1b8c4:	cmp    eax,edx
   1b8c6:	jne    0x1b8ea
   1b8c8:	call   0x1aa7e
   1b8cd:	mov    ecx,esi
   1b8cf:	call   0x1b276
   1b8d4:	jmp    0x1b8ef
   1b8d6:	mov    ecx,esi
   1b8d8:	call   0x1b276
   1b8dd:	mov    eax,DWORD PTR [esi+0x1c]
   1b8e0:	push   DWORD PTR [ebp+0x8]
   1b8e3:	lea    ecx,[eax+0x4]
   1b8e6:	mov    DWORD PTR [esi+0x1c],ecx
   1b8e9:	push   eax
   1b8ea:	call   0x1aa7e
   1b8ef:	inc    DWORD PTR [esi+0x2c]
   1b8f2:	pop    esi
   1b8f3:	pop    ebp
   1b8f4:	ret    0x4
   1b8f7:	int3   
   1b8f8:	int3   
   1b8f9:	int3   
   1b8fa:	int3   
   1b8fb:	int3   
   1b8fc:	mov    edi,edi
   1b8fe:	push   ebp
   1b8ff:	mov    ebp,esp
   1b901:	push   esi
   1b902:	push   0x0
   1b904:	push   0xc
   1b906:	mov    esi,ecx
   1b908:	call   0x13444
   1b90d:	mov    ecx,DWORD PTR [ebp+0x8]
   1b910:	mov    DWORD PTR [eax],eax
   1b912:	mov    DWORD PTR [eax+0x4],eax
   1b915:	and    DWORD PTR [esi+0x8],0x0
   1b919:	mov    DWORD PTR [esi+0x4],eax
   1b91c:	mov    ecx,DWORD PTR [ecx+0x4]
   1b91f:	mov    edx,DWORD PTR [ecx]
   1b921:	mov    eax,DWORD PTR [eax]
   1b923:	push   ecx
   1b924:	push   edx
   1b925:	push   eax
   1b926:	mov    ecx,esi
   1b928:	call   0x1b382
   1b92d:	mov    eax,esi
   1b92f:	pop    esi
   1b930:	pop    ebp
   1b931:	ret    0x4
   1b934:	int3   
   1b935:	int3   
   1b936:	int3   
   1b937:	int3   
   1b938:	int3   
   1b939:	int3   
   1b93a:	mov    edi,edi
   1b93c:	push   ebp
   1b93d:	mov    ebp,esp
   1b93f:	push   ecx
   1b940:	mov    edx,DWORD PTR [ebp+0x8]
   1b943:	mov    DWORD PTR [ebp-0x4],ecx
   1b946:	cmp    ecx,edx
   1b948:	je     0x1b987
   1b94a:	push   ebx
   1b94b:	mov    ebx,DWORD PTR [edx+0x4]
   1b94e:	push   esi
   1b94f:	mov    esi,DWORD PTR [ecx+0x4]
   1b952:	mov    eax,DWORD PTR [esi]
   1b954:	push   edi
   1b955:	mov    edi,DWORD PTR [ebx]
   1b957:	jmp    0x1b967
   1b959:	cmp    edi,ebx
   1b95b:	je     0x1b96b
   1b95d:	mov    edx,DWORD PTR [edi+0x8]
   1b960:	mov    DWORD PTR [eax+0x8],edx
   1b963:	mov    eax,DWORD PTR [eax]
   1b965:	mov    edi,DWORD PTR [edi]
   1b967:	cmp    eax,esi
   1b969:	jne    0x1b959
   1b96b:	push   esi
   1b96c:	push   eax
   1b96d:	lea    eax,[ebp+0x8]
   1b970:	push   eax
   1b971:	call   0x1b05e
   1b976:	mov    ecx,DWORD PTR [ebp-0x4]
   1b979:	push   ebx
   1b97a:	push   edi
   1b97b:	push   esi
   1b97c:	call   0x1b382
   1b981:	mov    ecx,DWORD PTR [ebp-0x4]
   1b984:	pop    edi
   1b985:	pop    esi
   1b986:	pop    ebx
   1b987:	mov    eax,ecx
   1b989:	leave  
   1b98a:	ret    0x4
   1b98d:	int3   
   1b98e:	int3   
   1b98f:	int3   
   1b990:	int3   
   1b991:	int3   
   1b992:	mov    edi,edi
   1b994:	push   ebp
   1b995:	mov    ebp,esp
   1b997:	push   DWORD PTR [ebp+0x8]
   1b99a:	mov    eax,DWORD PTR [ecx+0x4]
   1b99d:	push   eax
   1b99e:	lea    eax,[ebp+0x8]
   1b9a1:	push   eax
   1b9a2:	call   0x1b340
   1b9a7:	pop    ebp
   1b9a8:	ret    0x4
   1b9ab:	int3   
   1b9ac:	int3   
   1b9ad:	int3   
   1b9ae:	int3   
   1b9af:	int3   
   1b9b0:	mov    edi,edi
   1b9b2:	push   ebp
   1b9b3:	mov    ebp,esp
   1b9b5:	push   ecx
   1b9b6:	push   ebx
   1b9b7:	push   esi
   1b9b8:	push   edi
   1b9b9:	mov    edi,ecx
   1b9bb:	mov    eax,DWORD PTR [edi+0x4]
   1b9be:	mov    esi,DWORD PTR [eax+0x4]
   1b9c1:	mov    ebx,eax
   1b9c3:	mov    al,0x1
   1b9c5:	jmp    0x1b9e0
   1b9c7:	lea    eax,[esi+0xc]
   1b9ca:	push   eax
   1b9cb:	push   DWORD PTR [ebp+0xc]
   1b9ce:	mov    ebx,esi
   1b9d0:	call   0x19eec
   1b9d5:	test   al,al
   1b9d7:	je     0x1b9dd
   1b9d9:	mov    esi,DWORD PTR [esi]
   1b9db:	jmp    0x1b9e0
   1b9dd:	mov    esi,DWORD PTR [esi+0x8]
   1b9e0:	cmp    esi,DWORD PTR ds:0x788dc
   1b9e6:	jne    0x1b9c7
   1b9e8:	cmp    BYTE PTR [edi+0x8],0x0
   1b9ec:	je     0x1ba09
   1b9ee:	push   DWORD PTR [ebp+0xc]
   1b9f1:	lea    eax,[ebp+0xc]
   1b9f4:	push   ebx
   1b9f5:	push   esi
   1b9f6:	push   eax
   1b9f7:	mov    ecx,edi
   1b9f9:	call   0x1b468
   1b9fe:	mov    ecx,DWORD PTR [eax]
   1ba00:	mov    eax,DWORD PTR [ebp+0x8]
   1ba03:	mov    BYTE PTR [eax+0x4],0x1
   1ba07:	jmp    0x1ba3c
   1ba09:	mov    DWORD PTR [ebp-0x4],ebx
   1ba0c:	test   al,al
   1ba0e:	je     0x1ba1f
   1ba10:	mov    eax,DWORD PTR [edi+0x4]
   1ba13:	cmp    ebx,DWORD PTR [eax]
   1ba15:	je     0x1b9ee
   1ba17:	lea    ecx,[ebp-0x4]
   1ba1a:	call   0x1ac54
   1ba1f:	push   DWORD PTR [ebp+0xc]
   1ba22:	mov    eax,DWORD PTR [ebp-0x4]
   1ba25:	add    eax,0xc
   1ba28:	push   eax
   1ba29:	call   0x19eec
   1ba2e:	test   al,al
   1ba30:	jne    0x1b9ee
   1ba32:	mov    eax,DWORD PTR [ebp+0x8]
   1ba35:	mov    ecx,DWORD PTR [ebp-0x4]
   1ba38:	mov    BYTE PTR [eax+0x4],0x0
   1ba3c:	pop    edi
   1ba3d:	pop    esi
   1ba3e:	mov    DWORD PTR [eax],ecx
   1ba40:	pop    ebx
   1ba41:	leave  
   1ba42:	ret    0x8
   1ba45:	int3   
   1ba46:	int3   
   1ba47:	int3   
   1ba48:	int3   
   1ba49:	int3   
   1ba4a:	mov    edi,edi
   1ba4c:	push   ebp
   1ba4d:	mov    ebp,esp
   1ba4f:	push   ecx
   1ba50:	push   ecx
   1ba51:	push   DWORD PTR [ebp+0x8]
   1ba54:	lea    eax,[ebp-0x8]
   1ba57:	push   eax
   1ba58:	call   0x1b3ba
   1ba5d:	and    DWORD PTR [ebp+0x8],0x0
   1ba61:	lea    eax,[ebp+0x8]
   1ba64:	push   eax
   1ba65:	push   DWORD PTR [ebp-0x4]
   1ba68:	push   DWORD PTR [ebp-0x8]
   1ba6b:	call   0x1b164
   1ba70:	mov    eax,DWORD PTR [ebp+0x8]
   1ba73:	add    esp,0xc
   1ba76:	leave  
   1ba77:	ret    0x4
   1ba7a:	int3   
   1ba7b:	int3   
   1ba7c:	int3   
   1ba7d:	int3   
   1ba7e:	int3   
   1ba7f:	int3   
   1ba80:	mov    edi,edi
   1ba82:	push   ebp
   1ba83:	mov    ebp,esp
   1ba85:	push   ecx
   1ba86:	push   esi
   1ba87:	mov    esi,ecx
   1ba89:	cmp    DWORD PTR [esi+0xc],0x0
   1ba8d:	mov    ecx,DWORD PTR [ebp+0xc]
   1ba90:	je     0x1baca
   1ba92:	mov    eax,DWORD PTR [esi+0x4]
   1ba95:	cmp    ecx,DWORD PTR [eax]
   1ba97:	jne    0x1baca
   1ba99:	cmp    DWORD PTR [ebp+0x10],eax
   1ba9c:	jne    0x1baca
   1ba9e:	push   DWORD PTR [eax+0x4]
   1baa1:	mov    ecx,esi
   1baa3:	call   0x1b83c
   1baa8:	mov    ecx,DWORD PTR ds:0x788dc
   1baae:	mov    eax,DWORD PTR [esi+0x4]
   1bab1:	mov    DWORD PTR [eax+0x4],ecx
   1bab4:	mov    eax,DWORD PTR [esi+0x4]
   1bab7:	and    DWORD PTR [esi+0xc],0x0
   1babb:	mov    DWORD PTR [eax],eax
   1babd:	mov    eax,DWORD PTR [esi+0x4]
   1bac0:	mov    DWORD PTR [eax+0x8],eax
   1bac3:	mov    eax,DWORD PTR [esi+0x4]
   1bac6:	mov    ecx,DWORD PTR [eax]
   1bac8:	jmp    0x1baef
   1baca:	cmp    ecx,DWORD PTR [ebp+0x10]
   1bacd:	je     0x1baef
   1bacf:	push   edi
   1bad0:	mov    edi,ecx
   1bad2:	lea    ecx,[ebp+0xc]
   1bad5:	call   0x1aa48
   1bada:	push   edi
   1badb:	lea    eax,[ebp-0x4]
   1bade:	push   eax
   1badf:	mov    ecx,esi
   1bae1:	call   0x1b5be
   1bae6:	mov    ecx,DWORD PTR [ebp+0xc]
   1bae9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1baec:	jne    0x1bad0
   1baee:	pop    edi
   1baef:	mov    eax,DWORD PTR [ebp+0x8]
   1baf2:	mov    DWORD PTR [eax],ecx
   1baf4:	pop    esi
   1baf5:	leave  
   1baf6:	ret    0xc
   1baf9:	int3   
   1bafa:	int3   
   1bafb:	int3   
   1bafc:	int3   
   1bafd:	int3   
   1bafe:	mov    edi,edi
   1bb00:	push   ebp
   1bb01:	mov    ebp,esp
   1bb03:	push   esi
   1bb04:	push   DWORD PTR [ebp+0x8]
   1bb07:	mov    esi,ecx
   1bb09:	mov    ecx,DWORD PTR [esi]
   1bb0b:	call   0x1b8a2
   1bb10:	mov    eax,esi
   1bb12:	pop    esi
   1bb13:	pop    ebp
   1bb14:	ret    0x4
   1bb17:	int3   
   1bb18:	int3   
   1bb19:	int3   
   1bb1a:	int3   
   1bb1b:	int3   
   1bb1c:	mov    edi,edi
   1bb1e:	push   ebp
   1bb1f:	mov    ebp,esp
   1bb21:	push   ecx
   1bb22:	push   esi
   1bb23:	push   edi
   1bb24:	xor    edi,edi
   1bb26:	push   edi
   1bb27:	push   edi
   1bb28:	push   edi
   1bb29:	push   edi
   1bb2a:	mov    esi,0x788ac
   1bb2f:	push   esi
   1bb30:	call   DWORD PTR ds:0x1f834
   1bb36:	test   eax,eax
   1bb38:	jl     0x1bb5c
   1bb3a:	mov    eax,ds:0x788d8
   1bb3f:	mov    ecx,DWORD PTR ds:0x788d0
   1bb45:	add    eax,0x9
   1bb48:	mov    DWORD PTR [ebp-0x4],eax
   1bb4b:	lea    eax,[ebp-0x4]
   1bb4e:	push   eax
   1bb4f:	call   0x1b992
   1bb54:	push   edi
   1bb55:	push   esi
   1bb56:	call   DWORD PTR ds:0x1f838
   1bb5c:	pop    edi
   1bb5d:	pop    esi
   1bb5e:	leave  
   1bb5f:	ret    
   1bb60:	int3   
   1bb61:	int3   
   1bb62:	int3   
   1bb63:	int3   
   1bb64:	int3   
   1bb65:	int3   
   1bb66:	mov    edi,edi
   1bb68:	push   ebp
   1bb69:	mov    ebp,esp
   1bb6b:	push   ecx
   1bb6c:	push   ecx
   1bb6d:	push   DWORD PTR [ebp+0xc]
   1bb70:	lea    eax,[ebp-0x8]
   1bb73:	push   eax
   1bb74:	call   0x1b9b0
   1bb79:	mov    eax,DWORD PTR [ebp+0x8]
   1bb7c:	mov    ecx,DWORD PTR [ebp-0x8]
   1bb7f:	mov    DWORD PTR [eax],ecx
   1bb81:	mov    cl,BYTE PTR [ebp-0x4]
   1bb84:	mov    BYTE PTR [eax+0x4],cl
   1bb87:	leave  
   1bb88:	ret    0x8
   1bb8b:	int3   
   1bb8c:	int3   
   1bb8d:	int3   
   1bb8e:	int3   
   1bb8f:	int3   
   1bb90:	mov    edi,edi
   1bb92:	push   ebp
   1bb93:	mov    ebp,esp
   1bb95:	push   ecx
   1bb96:	push   ecx
   1bb97:	push   esi
   1bb98:	push   DWORD PTR [ebp+0x8]
   1bb9b:	lea    eax,[ebp-0x8]
   1bb9e:	push   eax
   1bb9f:	mov    esi,ecx
   1bba1:	call   0x1b3ba
   1bba6:	and    DWORD PTR [ebp+0x8],0x0
   1bbaa:	lea    eax,[ebp+0x8]
   1bbad:	push   eax
   1bbae:	push   DWORD PTR [ebp-0x4]
   1bbb1:	push   DWORD PTR [ebp-0x8]
   1bbb4:	call   0x1b164
   1bbb9:	add    esp,0xc
   1bbbc:	push   DWORD PTR [ebp-0x4]
   1bbbf:	lea    eax,[ebp-0x4]
   1bbc2:	push   DWORD PTR [ebp-0x8]
   1bbc5:	mov    ecx,esi
   1bbc7:	push   eax
   1bbc8:	call   0x1ba80
   1bbcd:	mov    eax,DWORD PTR [ebp+0x8]
   1bbd0:	pop    esi
   1bbd1:	leave  
   1bbd2:	ret    0x4
   1bbd5:	int3   
   1bbd6:	int3   
   1bbd7:	int3   
   1bbd8:	int3   
   1bbd9:	int3   
   1bbda:	mov    edi,edi
   1bbdc:	push   ebp
   1bbdd:	mov    ebp,esp
   1bbdf:	jmp    0x1bbf2
   1bbe1:	push   eax
   1bbe2:	lea    ecx,[ebp+0x2c]
   1bbe5:	call   0x1bafe
   1bbea:	lea    ecx,[ebp+0xc]
   1bbed:	call   0x1a9aa
   1bbf2:	mov    eax,DWORD PTR [ebp+0x14]
   1bbf5:	cmp    eax,DWORD PTR [ebp+0x24]
   1bbf8:	jne    0x1bbe1
   1bbfa:	mov    eax,DWORD PTR [ebp+0x8]
   1bbfd:	mov    ecx,DWORD PTR [ebp+0x2c]
   1bc00:	mov    DWORD PTR [eax],ecx
   1bc02:	pop    ebp
   1bc03:	ret    0x28
   1bc06:	int3   
   1bc07:	int3   
   1bc08:	int3   
   1bc09:	int3   
   1bc0a:	int3   
   1bc0b:	int3   
   1bc0c:	mov    edi,edi
   1bc0e:	push   ebp
   1bc0f:	mov    ebp,esp
   1bc11:	sub    esp,0x10
   1bc14:	push   0xffffffff
   1bc16:	push   DWORD PTR [ebp+0x8]
   1bc19:	lea    ecx,[ebp-0x8]
   1bc1c:	call   0x12b6e
   1bc21:	mov    ecx,DWORD PTR ds:0x788cc
   1bc27:	lea    eax,[ebp-0x8]
   1bc2a:	push   eax
   1bc2b:	lea    eax,[ebp-0x10]
   1bc2e:	push   eax
   1bc2f:	call   0x1bb66
   1bc34:	push   DWORD PTR [ebp-0x8]
   1bc37:	call   0x11d22
   1bc3c:	pop    ecx
   1bc3d:	leave  
   1bc3e:	ret    0x4
   1bc41:	int3   
   1bc42:	int3   
   1bc43:	int3   
   1bc44:	int3   
   1bc45:	int3   
   1bc46:	mov    edi,edi
   1bc48:	push   ebp
   1bc49:	mov    ebp,esp
   1bc4b:	xor    eax,eax
   1bc4d:	push   ebx
   1bc4e:	push   esi
   1bc4f:	push   edi
   1bc50:	mov    ebx,ecx
   1bc52:	mov    DWORD PTR [ebx+0x4],eax
   1bc55:	mov    DWORD PTR [ebx+0x8],eax
   1bc58:	mov    DWORD PTR [ebx+0xc],eax
   1bc5b:	mov    DWORD PTR [ebx+0x10],eax
   1bc5e:	mov    DWORD PTR [ebx+0x14],eax
   1bc61:	mov    DWORD PTR [ebx+0x18],eax
   1bc64:	mov    DWORD PTR [ebx+0x1c],eax
   1bc67:	mov    DWORD PTR [ebx+0x20],eax
   1bc6a:	mov    DWORD PTR [ebx+0x24],eax
   1bc6d:	mov    DWORD PTR [ebx+0x28],eax
   1bc70:	mov    DWORD PTR [ebx+0x2c],eax
   1bc73:	mov    eax,DWORD PTR [ebp+0x8]
   1bc76:	push   ebx
   1bc77:	sub    esp,0x10
   1bc7a:	mov    edi,esp
   1bc7c:	lea    esi,[eax+0x14]
   1bc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc83:	sub    esp,0x10
   1bc86:	lea    esi,[eax+0x4]
   1bc89:	mov    edi,esp
   1bc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8e:	lea    eax,[ebp+0x8]
   1bc91:	push   eax
   1bc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc93:	call   0x1bbda
   1bc98:	pop    edi
   1bc99:	pop    esi
   1bc9a:	mov    eax,ebx
   1bc9c:	pop    ebx
   1bc9d:	pop    ebp
   1bc9e:	ret    0x4
   1bca1:	int3   
   1bca2:	int3   
   1bca3:	int3   
   1bca4:	int3   
   1bca5:	int3   
   1bca6:	mov    edi,edi
   1bca8:	push   ebp
   1bca9:	mov    ebp,esp
   1bcab:	push   ecx
   1bcac:	push   ebx
   1bcad:	push   0x30
   1bcaf:	call   0x11cec
   1bcb4:	xor    ebx,ebx
   1bcb6:	pop    ecx
   1bcb7:	cmp    eax,ebx
   1bcb9:	je     0x1bccd
   1bcbb:	lea    ecx,[ebp-0x1]
   1bcbe:	push   ecx
   1bcbf:	mov    ecx,eax
   1bcc1:	call   0x1ab68
   1bcc6:	mov    ds:0x788d4,eax
   1bccb:	jmp    0x1bcd3
   1bccd:	mov    DWORD PTR ds:0x788d4,ebx
   1bcd3:	push   esi
   1bcd4:	push   0x10
   1bcd6:	call   0x11cec
   1bcdb:	mov    esi,eax
   1bcdd:	pop    ecx
   1bcde:	cmp    esi,ebx
   1bce0:	je     0x1bcf4
   1bce2:	mov    ecx,esi
   1bce4:	mov    BYTE PTR [esi+0x8],bl
   1bce7:	call   0x1b3ec
   1bcec:	mov    DWORD PTR ds:0x788cc,esi
   1bcf2:	jmp    0x1bcfa
   1bcf4:	mov    DWORD PTR ds:0x788cc,ebx
   1bcfa:	push   0xc
   1bcfc:	call   0x11cec
   1bd01:	pop    ecx
   1bd02:	pop    esi
   1bd03:	cmp    eax,ebx
   1bd05:	je     0x1bd19
   1bd07:	lea    ecx,[ebp-0x1]
   1bd0a:	push   ecx
   1bd0b:	mov    ecx,eax
   1bd0d:	call   0x1b200
   1bd12:	mov    ds:0x788d0,eax
   1bd17:	jmp    0x1bd1f
   1bd19:	mov    DWORD PTR ds:0x788d0,ebx
   1bd1f:	push   ebx
   1bd20:	push   0x788ac
   1bd25:	call   DWORD PTR ds:0x1f83c
   1bd2b:	mov    DWORD PTR ds:0x788d8,0x1
   1bd35:	pop    ebx
   1bd36:	leave  
   1bd37:	ret    
   1bd38:	int3   
   1bd39:	int3   
   1bd3a:	int3   
   1bd3b:	int3   
   1bd3c:	int3   
   1bd3d:	int3   
   1bd3e:	push   0x3c
   1bd40:	push   0x77970
   1bd45:	call   0x1e1dc
   1bd4a:	xor    esi,esi
   1bd4c:	push   esi
   1bd4d:	push   esi
   1bd4e:	push   esi
   1bd4f:	push   esi
   1bd50:	push   0x788ac
   1bd55:	call   DWORD PTR ds:0x1f834
   1bd5b:	cmp    eax,esi
   1bd5d:	jl     0x1becd
   1bd63:	mov    DWORD PTR [ebp-0x4],esi
   1bd66:	mov    edi,DWORD PTR [ebp+0x8]
   1bd69:	push   edi
   1bd6a:	lea    eax,[ebp-0x24]
   1bd6d:	push   eax
   1bd6e:	call   0x1ad74
   1bd73:	cmp    DWORD PTR [eax+0x4],esi
   1bd76:	setne  BYTE PTR [ebp-0x19]
   1bd7a:	push   DWORD PTR [ebp-0x24]
   1bd7d:	call   0x11d22
   1bd82:	pop    ecx
   1bd83:	push   edi
   1bd84:	lea    eax,[ebp-0x2c]
   1bd87:	push   eax
   1bd88:	call   0x1ad9a
   1bd8d:	xor    al,al
   1bd8f:	cmp    DWORD PTR [edi+0x14],esi
   1bd92:	jne    0x1bda8
   1bd94:	lea    eax,[ebp-0x2c]
   1bd97:	push   eax
   1bd98:	mov    ecx,DWORD PTR ds:0x788cc
   1bd9e:	call   0x1ba4a
   1bda3:	test   eax,eax
   1bda5:	setne  al
   1bda8:	test   al,al
   1bdaa:	je     0x1bdbb
   1bdac:	lea    eax,[ebp-0x2c]
   1bdaf:	push   eax
   1bdb0:	mov    ecx,DWORD PTR ds:0x788cc
   1bdb6:	call   0x1bb90
   1bdbb:	mov    ebx,DWORD PTR ds:0x788d4
   1bdc1:	cmp    DWORD PTR [ebx+0x2c],esi
   1bdc4:	jbe    0x1be24
   1bdc6:	mov    eax,ds:0x7851c
   1bdcb:	mov    DWORD PTR [ebp-0x20],eax
   1bdce:	cmp    eax,esi
   1bdd0:	ja     0x1bdd9
   1bdd2:	mov    DWORD PTR [ebp-0x20],0x1
   1bdd9:	mov    eax,DWORD PTR [ebp-0x20]
   1bddc:	cmp    DWORD PTR [ebx+0x2c],eax
   1bddf:	jb     0x1be24
   1bde1:	lea    esi,[ebx+0x4]
   1bde4:	lea    edi,[ebp-0x3c]
   1bde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bdeb:	mov    eax,DWORD PTR [ebp-0x34]
   1bdee:	mov    eax,DWORD PTR [eax]
   1bdf0:	mov    eax,DWORD PTR [eax+0xc]
   1bdf3:	xor    ecx,ecx
   1bdf5:	add    eax,0x9c40
   1bdfa:	push   ecx
   1bdfb:	pop    esi
   1bdfc:	adc    ecx,esi
   1bdfe:	mov    edx,DWORD PTR [ebp+0x8]
   1be01:	mov    edx,DWORD PTR [edx+0xc]
   1be04:	cmp    ecx,esi
   1be06:	ja     0x1be24
   1be08:	jb     0x1be0e
   1be0a:	cmp    eax,edx
   1be0c:	jae    0x1be24
   1be0e:	mov    ecx,ebx
   1be10:	call   0x1ab96
   1be15:	mov    ecx,ebx
   1be17:	call   0x1b1e4
   1be1c:	mov    ebx,DWORD PTR ds:0x788d4
   1be22:	jmp    0x1bdd9
   1be24:	push   DWORD PTR [ebp+0x8]
   1be27:	lea    eax,[ebp-0x24]
   1be2a:	push   eax
   1be2b:	call   0x1ad9a
   1be30:	push   eax
   1be31:	lea    eax,[ebp-0x3c]
   1be34:	push   eax
   1be35:	call   0x1ade6
   1be3a:	push   DWORD PTR [ebp-0x24]
   1be3d:	call   0x11d22
   1be42:	pop    ecx
   1be43:	mov    ebx,DWORD PTR ds:0x788d4
   1be49:	lea    esi,[ebx+0x14]
   1be4c:	lea    edi,[ebp-0x4c]
   1be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be53:	mov    esi,DWORD PTR [ebp-0x34]
   1be56:	cmp    esi,DWORD PTR [ebp-0x44]
   1be59:	je     0x1be8d
   1be5b:	mov    eax,DWORD PTR [esi]
   1be5d:	mov    BYTE PTR [eax+0x1c],0x0
   1be61:	mov    eax,DWORD PTR [esi]
   1be63:	cmp    BYTE PTR [eax+0x24],0x0
   1be67:	jne    0x1be77
   1be69:	mov    BYTE PTR [eax+0x24],0x1
   1be6d:	mov    eax,DWORD PTR [esi]
   1be6f:	push   DWORD PTR [eax+0x8]
   1be72:	call   0x1ab10
   1be77:	mov    eax,DWORD PTR [esi]
   1be79:	mov    ecx,DWORD PTR [eax+0x8]
   1be7c:	mov    eax,DWORD PTR [ebp+0x8]
   1be7f:	mov    DWORD PTR [eax+0x8],ecx
   1be82:	mov    ecx,DWORD PTR [esi]
   1be84:	mov    ecx,DWORD PTR [ecx+0x20]
   1be87:	inc    ecx
   1be88:	mov    DWORD PTR [eax+0x20],ecx
   1be8b:	jmp    0x1be90
   1be8d:	mov    eax,DWORD PTR [ebp+0x8]
   1be90:	mov    cl,BYTE PTR [ebp-0x19]
   1be93:	mov    BYTE PTR [eax+0x1c],cl
   1be96:	lea    eax,[ebp+0x8]
   1be99:	push   eax
   1be9a:	mov    ecx,ebx
   1be9c:	call   0x1b8a2
   1bea1:	inc    DWORD PTR ds:0x788d8
   1bea7:	push   DWORD PTR [ebp-0x2c]
   1beaa:	call   0x11d22
   1beaf:	pop    ecx
   1beb0:	jmp    0x1beb9
   1beb2:	xor    eax,eax
   1beb4:	inc    eax
   1beb5:	ret    
   1beb6:	mov    esp,DWORD PTR [ebp-0x18]
   1beb9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bec0:	push   0x0
   1bec2:	push   0x788ac
   1bec7:	call   DWORD PTR ds:0x1f838
   1becd:	call   0x1e221
   1bed2:	ret    0x4
   1bed5:	int3   
   1bed6:	int3   
   1bed7:	int3   
   1bed8:	int3   
   1bed9:	int3   
   1beda:	push   0x48
   1bedc:	push   0x77990
   1bee1:	call   0x1e1dc
   1bee6:	xor    ebx,ebx
   1bee8:	push   ebx
   1bee9:	push   ebx
   1beea:	push   ebx
   1beeb:	push   ebx
   1beec:	push   0x788ac
   1bef1:	call   DWORD PTR ds:0x1f834
   1bef7:	cmp    eax,ebx
   1bef9:	jl     0x1bfa7
   1beff:	mov    DWORD PTR [ebp-0x4],ebx
   1bf02:	push   DWORD PTR ds:0x788d0
   1bf08:	lea    ecx,[ebp-0x28]
   1bf0b:	call   0x1b8fc
   1bf10:	mov    BYTE PTR [ebp-0x19],bl
   1bf13:	cmp    DWORD PTR [ebp-0x20],ebx
   1bf16:	je     0x1bf36
   1bf18:	mov    eax,DWORD PTR [ebp-0x24]
   1bf1b:	mov    eax,DWORD PTR [eax]
   1bf1d:	mov    eax,DWORD PTR [eax+0x8]
   1bf20:	cmp    eax,DWORD PTR ds:0x788d8
   1bf26:	ja     0x1bf36
   1bf28:	mov    BYTE PTR [ebp-0x19],0x1
   1bf2c:	lea    ecx,[ebp-0x28]
   1bf2f:	call   0x1b25a
   1bf34:	jmp    0x1bf13
   1bf36:	cmp    BYTE PTR [ebp-0x19],bl
   1bf39:	je     0x1bf71
   1bf3b:	push   DWORD PTR ds:0x788d4
   1bf41:	lea    ecx,[ebp-0x58]
   1bf44:	call   0x1bc46
   1bf49:	mov    esi,DWORD PTR [ebp+0x8]
   1bf4c:	push   esi
   1bf4d:	lea    eax,[ebp-0x58]
   1bf50:	push   eax
   1bf51:	call   0x1ae84
   1bf56:	cmp    DWORD PTR [esi],ebx
   1bf58:	jne    0x1bf69
   1bf5a:	lea    eax,[ebp-0x28]
   1bf5d:	push   eax
   1bf5e:	mov    ecx,DWORD PTR ds:0x788d0
   1bf64:	call   0x1b93a
   1bf69:	lea    ecx,[ebp-0x58]
   1bf6c:	call   0x1b886
   1bf71:	lea    ecx,[ebp-0x28]
   1bf74:	call   0x1b226
   1bf79:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bf80:	jmp    0x1bf9b
   1bf82:	xor    eax,eax
   1bf84:	inc    eax
   1bf85:	ret    
   1bf86:	mov    esp,DWORD PTR [ebp-0x18]
   1bf89:	mov    eax,DWORD PTR [ebp+0x8]
   1bf8c:	mov    DWORD PTR [eax],0x2
   1bf92:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bf99:	xor    ebx,ebx
   1bf9b:	push   ebx
   1bf9c:	push   0x788ac
   1bfa1:	call   DWORD PTR ds:0x1f838
   1bfa7:	call   0x1e221
   1bfac:	ret    0x4
   1bfaf:	int3   
   1bfb0:	int3   
   1bfb1:	int3   
   1bfb2:	int3   
   1bfb3:	int3   
   1bfb4:	mov    edi,edi
   1bfb6:	push   ebp
   1bfb7:	mov    ebp,esp
   1bfb9:	mov    ecx,DWORD PTR [ebp+0x8]
   1bfbc:	xor    edx,edx
   1bfbe:	cmp    ecx,edx
   1bfc0:	je     0x1c010
   1bfc2:	mov    eax,DWORD PTR [ecx+0x1c]
   1bfc5:	cmp    eax,edx
   1bfc7:	je     0x1c010
   1bfc9:	mov    DWORD PTR [eax+0x1c],edx
   1bfcc:	mov    DWORD PTR [ecx+0x14],edx
   1bfcf:	mov    DWORD PTR [ecx+0x8],edx
   1bfd2:	mov    DWORD PTR [ecx+0x18],edx
   1bfd5:	mov    DWORD PTR [ecx+0x30],0x1
   1bfdc:	lea    ecx,[eax+0x530]
   1bfe2:	mov    DWORD PTR [eax],edx
   1bfe4:	mov    DWORD PTR [eax+0x4],edx
   1bfe7:	mov    DWORD PTR [eax+0xc],edx
   1bfea:	mov    DWORD PTR [eax+0x14],0x8000
   1bff1:	mov    DWORD PTR [eax+0x20],edx
   1bff4:	mov    DWORD PTR [eax+0x28],edx
   1bff7:	mov    DWORD PTR [eax+0x2c],edx
   1bffa:	mov    DWORD PTR [eax+0x30],edx
   1bffd:	mov    DWORD PTR [eax+0x38],edx
   1c000:	mov    DWORD PTR [eax+0x3c],edx
   1c003:	mov    DWORD PTR [eax+0x6c],ecx
   1c006:	mov    DWORD PTR [eax+0x50],ecx
   1c009:	mov    DWORD PTR [eax+0x4c],ecx
   1c00c:	xor    eax,eax
   1c00e:	jmp    0x1c013
   1c010:	push   0xfffffffe
   1c012:	pop    eax
   1c013:	pop    ebp
   1c014:	ret    0x4
   1c017:	int3   
   1c018:	int3   
   1c019:	int3   
   1c01a:	int3   
   1c01b:	int3   
   1c01c:	mov    edi,edi
   1c01e:	push   ebp
   1c01f:	mov    ebp,esp
   1c021:	mov    eax,DWORD PTR [ebp+0x10]
   1c024:	push   esi
   1c025:	push   edi
   1c026:	xor    edi,edi
   1c028:	cmp    eax,edi
   1c02a:	je     0x1c0c5
   1c030:	cmp    BYTE PTR [eax],0x31
   1c033:	jne    0x1c0c5
   1c039:	cmp    DWORD PTR [ebp+0x14],0x38
   1c03d:	jne    0x1c0c5
   1c043:	mov    esi,DWORD PTR [ebp+0x8]
   1c046:	cmp    esi,edi
   1c048:	jne    0x1c04e
   1c04a:	push   0xfffffffe
   1c04c:	jmp    0x1c0c7
   1c04e:	mov    DWORD PTR [esi+0x18],edi
   1c051:	cmp    DWORD PTR [esi+0x20],edi
   1c054:	jne    0x1c060
   1c056:	mov    DWORD PTR [esi+0x20],0x1d414
   1c05d:	mov    DWORD PTR [esi+0x28],edi
   1c060:	cmp    DWORD PTR [esi+0x24],edi
   1c063:	jne    0x1c06c
   1c065:	mov    DWORD PTR [esi+0x24],0x1d430
   1c06c:	push   0x2530
   1c071:	push   0x1
   1c073:	push   DWORD PTR [esi+0x28]
   1c076:	call   DWORD PTR [esi+0x20]
   1c079:	cmp    eax,edi
   1c07b:	jne    0x1c081
   1c07d:	push   0xfffffffc
   1c07f:	jmp    0x1c0c7
   1c081:	mov    ecx,DWORD PTR [ebp+0xc]
   1c084:	cmp    ecx,edi
   1c086:	mov    DWORD PTR [esi+0x1c],eax
   1c089:	jge    0x1c092
   1c08b:	mov    DWORD PTR [eax+0x8],edi
   1c08e:	neg    ecx
   1c090:	jmp    0x1c0a3
   1c092:	mov    edx,ecx
   1c094:	sar    edx,0x4
   1c097:	inc    edx
   1c098:	cmp    ecx,0x30
   1c09b:	mov    DWORD PTR [eax+0x8],edx
   1c09e:	jge    0x1c0a3
   1c0a0:	and    ecx,0xf
   1c0a3:	lea    edx,[ecx-0x8]
   1c0a6:	cmp    edx,0x7
   1c0a9:	ja     0x1c0b9
   1c0ab:	push   esi
   1c0ac:	mov    DWORD PTR [eax+0x24],ecx
   1c0af:	mov    DWORD PTR [eax+0x34],edi
   1c0b2:	call   0x1bfb4
   1c0b7:	jmp    0x1c0c8
   1c0b9:	push   eax
   1c0ba:	push   DWORD PTR [esi+0x28]
   1c0bd:	call   DWORD PTR [esi+0x24]
   1c0c0:	mov    DWORD PTR [esi+0x1c],edi
   1c0c3:	jmp    0x1c04a
   1c0c5:	push   0xfffffffa
   1c0c7:	pop    eax
   1c0c8:	pop    edi
   1c0c9:	pop    esi
   1c0ca:	pop    ebp
   1c0cb:	ret    0x10
   1c0ce:	int3   
   1c0cf:	int3   
   1c0d0:	int3   
   1c0d1:	int3   
   1c0d2:	int3   
   1c0d3:	int3   
   1c0d4:	mov    edi,edi
   1c0d6:	push   ebp
   1c0d7:	mov    ebp,esp
   1c0d9:	push   ecx
   1c0da:	push   ebx
   1c0db:	push   esi
   1c0dc:	mov    esi,DWORD PTR [edi+0x1c]
   1c0df:	cmp    DWORD PTR [esi+0x34],0x0
   1c0e3:	mov    ebx,eax
   1c0e5:	jne    0x1c105
   1c0e7:	mov    ecx,DWORD PTR [esi+0x24]
   1c0ea:	xor    eax,eax
   1c0ec:	inc    eax
   1c0ed:	shl    eax,cl
   1c0ef:	push   0x1
   1c0f1:	push   eax
   1c0f2:	push   DWORD PTR [edi+0x28]
   1c0f5:	call   DWORD PTR [edi+0x20]
   1c0f8:	mov    DWORD PTR [esi+0x34],eax
   1c0fb:	test   eax,eax
   1c0fd:	jne    0x1c105
   1c0ff:	inc    eax
   1c100:	jmp    0x1c1a7
   1c105:	xor    eax,eax
   1c107:	cmp    DWORD PTR [esi+0x28],eax
   1c10a:	jne    0x1c11d
   1c10c:	mov    ecx,DWORD PTR [esi+0x24]
   1c10f:	xor    edx,edx
   1c111:	inc    edx
   1c112:	shl    edx,cl
   1c114:	mov    DWORD PTR [esi+0x30],eax
   1c117:	mov    DWORD PTR [esi+0x2c],eax
   1c11a:	mov    DWORD PTR [esi+0x28],edx
   1c11d:	sub    ebx,DWORD PTR [edi+0x10]
   1c120:	mov    eax,DWORD PTR [esi+0x28]
   1c123:	cmp    ebx,eax
   1c125:	jb     0x1c13f
   1c127:	mov    ecx,DWORD PTR [edi+0xc]
   1c12a:	push   eax
   1c12b:	sub    ecx,eax
   1c12d:	push   ecx
   1c12e:	push   DWORD PTR [esi+0x34]
   1c131:	call   0x1e1b6
   1c136:	add    esp,0xc
   1c139:	and    DWORD PTR [esi+0x30],0x0
   1c13d:	jmp    0x1c180
   1c13f:	sub    eax,DWORD PTR [esi+0x30]
   1c142:	mov    DWORD PTR [ebp-0x4],eax
   1c145:	cmp    eax,ebx
   1c147:	jbe    0x1c14c
   1c149:	mov    DWORD PTR [ebp-0x4],ebx
   1c14c:	mov    eax,DWORD PTR [edi+0xc]
   1c14f:	push   DWORD PTR [ebp-0x4]
   1c152:	sub    eax,ebx
   1c154:	push   eax
   1c155:	mov    eax,DWORD PTR [esi+0x34]
   1c158:	add    eax,DWORD PTR [esi+0x30]
   1c15b:	push   eax
   1c15c:	call   0x1e1b6
   1c161:	mov    eax,DWORD PTR [ebp-0x4]
   1c164:	add    esp,0xc
   1c167:	sub    ebx,eax
   1c169:	je     0x1c188
   1c16b:	mov    eax,DWORD PTR [edi+0xc]
   1c16e:	push   ebx
   1c16f:	sub    eax,ebx
   1c171:	push   eax
   1c172:	push   DWORD PTR [esi+0x34]
   1c175:	call   0x1e1b6
   1c17a:	add    esp,0xc
   1c17d:	mov    DWORD PTR [esi+0x30],ebx
   1c180:	mov    eax,DWORD PTR [esi+0x28]
   1c183:	mov    DWORD PTR [esi+0x2c],eax
   1c186:	jmp    0x1c1a5
   1c188:	add    DWORD PTR [esi+0x30],eax
   1c18b:	mov    ecx,DWORD PTR [esi+0x30]
   1c18e:	mov    edx,DWORD PTR [esi+0x28]
   1c191:	cmp    ecx,edx
   1c193:	jne    0x1c199
   1c195:	and    DWORD PTR [esi+0x30],0x0
   1c199:	mov    ecx,DWORD PTR [esi+0x2c]
   1c19c:	cmp    ecx,edx
   1c19e:	jae    0x1c1a5
   1c1a0:	add    ecx,eax
   1c1a2:	mov    DWORD PTR [esi+0x2c],ecx
   1c1a5:	xor    eax,eax
   1c1a7:	pop    esi
   1c1a8:	pop    ebx
   1c1a9:	leave  
   1c1aa:	ret    
   1c1ab:	int3   
   1c1ac:	int3   
   1c1ad:	int3   
   1c1ae:	int3   
   1c1af:	int3   
   1c1b0:	mov    edi,edi
   1c1b2:	push   ebp
   1c1b3:	mov    ebp,esp
   1c1b5:	mov    edx,DWORD PTR [ebp+0x8]
   1c1b8:	sub    esp,0x2c
   1c1bb:	push   ebx
   1c1bc:	xor    eax,eax
   1c1be:	push   esi
   1c1bf:	push   edi
   1c1c0:	cmp    edx,eax
   1c1c2:	je     0x1c212
   1c1c4:	mov    esi,DWORD PTR [edx+0x1c]
   1c1c7:	cmp    esi,eax
   1c1c9:	je     0x1c212
   1c1cb:	cmp    DWORD PTR [edx+0xc],eax
   1c1ce:	je     0x1c212
   1c1d0:	cmp    DWORD PTR [edx],eax
   1c1d2:	jne    0x1c1d9
   1c1d4:	cmp    DWORD PTR [edx+0x4],eax
   1c1d7:	jne    0x1c212
   1c1d9:	cmp    DWORD PTR [esi],0xb
   1c1dc:	jne    0x1c1e4
   1c1de:	mov    DWORD PTR [esi],0xc
   1c1e4:	mov    eax,DWORD PTR [edx+0xc]
   1c1e7:	mov    ecx,DWORD PTR [edx+0x10]
   1c1ea:	and    DWORD PTR [ebp-0x24],0x0
   1c1ee:	mov    ebx,DWORD PTR [esi+0x38]
   1c1f1:	mov    edi,DWORD PTR [esi+0x3c]
   1c1f4:	mov    DWORD PTR [ebp-0x18],eax
   1c1f7:	mov    eax,DWORD PTR [edx]
   1c1f9:	mov    DWORD PTR [ebp-0x4],eax
   1c1fc:	mov    eax,DWORD PTR [edx+0x4]
   1c1ff:	mov    DWORD PTR [ebp-0x8],eax
   1c202:	mov    DWORD PTR [ebp-0x2c],eax
   1c205:	mov    eax,DWORD PTR [esi]
   1c207:	mov    DWORD PTR [ebp-0x10],ecx
   1c20a:	mov    DWORD PTR [ebp-0x1c],ecx
   1c20d:	cmp    eax,0x1c
   1c210:	jbe    0x1c21f
   1c212:	push   0xfffffffe
   1c214:	pop    eax
   1c215:	pop    edi
   1c216:	pop    esi
   1c217:	pop    ebx
   1c218:	leave  
   1c219:	ret    0x8
   1c21c:	mov    edx,DWORD PTR [ebp+0x8]
   1c21f:	jmp    DWORD PTR [eax*4+0x1d354]
   1c226:	mov    eax,DWORD PTR [esi+0x8]
   1c229:	test   eax,eax
   1c22b:	jne    0x1c257
   1c22d:	mov    DWORD PTR [esi],0xc
   1c233:	jmp    0x1d225
   1c238:	cmp    DWORD PTR [ebp-0x8],0x0
   1c23c:	je     0x1d273
   1c242:	mov    ecx,DWORD PTR [ebp-0x4]
   1c245:	movzx  edx,BYTE PTR [ecx]
   1c248:	dec    DWORD PTR [ebp-0x8]
   1c24b:	mov    ecx,edi
   1c24d:	shl    edx,cl
   1c24f:	add    ebx,edx
   1c251:	inc    DWORD PTR [ebp-0x4]
   1c254:	add    edi,0x8
   1c257:	cmp    edi,0x10
   1c25a:	jb     0x1c238
   1c25c:	test   al,0x2
   1c25e:	je     0x1c29b
   1c260:	cmp    ebx,0x8b1f
   1c266:	jne    0x1c29b
   1c268:	xor    edi,edi
   1c26a:	push   edi
   1c26b:	push   edi
   1c26c:	push   edi
   1c26d:	call   0x1e0d6
   1c272:	mov    DWORD PTR [esi+0x18],eax
   1c275:	push   0x2
   1c277:	lea    eax,[ebp-0x14]
   1c27a:	push   eax
   1c27b:	mov    BYTE PTR [ebp-0x14],0x1f
   1c27f:	mov    BYTE PTR [ebp-0x13],0x8b
   1c283:	push   DWORD PTR [esi+0x18]
   1c286:	call   0x1e0d6
   1c28b:	mov    DWORD PTR [esi+0x18],eax
   1c28e:	xor    ebx,ebx
   1c290:	mov    DWORD PTR [esi],0x1
   1c296:	jmp    0x1d225
   1c29b:	mov    eax,DWORD PTR [esi+0x20]
   1c29e:	and    DWORD PTR [esi+0x10],0x0
   1c2a2:	test   eax,eax
   1c2a4:	je     0x1c2aa
   1c2a6:	or     DWORD PTR [eax+0x30],0xffffffff
   1c2aa:	test   BYTE PTR [esi+0x8],0x1
   1c2ae:	je     0x1c334
   1c2b4:	movzx  eax,bl
   1c2b7:	shl    eax,0x8
   1c2ba:	mov    ecx,ebx
   1c2bc:	shr    ecx,0x8
   1c2bf:	add    eax,ecx
   1c2c1:	push   0x1f
   1c2c3:	xor    edx,edx
   1c2c5:	pop    ecx
   1c2c6:	div    ecx
   1c2c8:	test   edx,edx
   1c2ca:	jne    0x1c334
   1c2cc:	mov    eax,ebx
   1c2ce:	and    al,0xf
   1c2d0:	cmp    al,0x8
   1c2d2:	je     0x1c2e3
   1c2d4:	mov    eax,DWORD PTR [ebp+0x8]
   1c2d7:	mov    DWORD PTR [eax+0x18],0x1f73e
   1c2de:	jmp    0x1d21f
   1c2e3:	shr    ebx,0x4
   1c2e6:	mov    ecx,ebx
   1c2e8:	and    ecx,0xf
   1c2eb:	add    ecx,0x8
   1c2ee:	sub    edi,0x4
   1c2f1:	cmp    ecx,DWORD PTR [esi+0x24]
   1c2f4:	jbe    0x1c305
   1c2f6:	mov    eax,DWORD PTR [ebp+0x8]
   1c2f9:	mov    DWORD PTR [eax+0x18],0x1f72a
   1c300:	jmp    0x1d21f
   1c305:	xor    eax,eax
   1c307:	xor    edi,edi
   1c309:	inc    eax
   1c30a:	push   edi
   1c30b:	shl    eax,cl
   1c30d:	push   edi
   1c30e:	push   edi
   1c30f:	mov    DWORD PTR [esi+0x14],eax
   1c312:	call   0x1dc34
   1c317:	mov    ecx,DWORD PTR [ebp+0x8]
   1c31a:	shr    ebx,0x8
   1c31d:	not    ebx
   1c31f:	and    ebx,0x2
   1c322:	or     ebx,0x9
   1c325:	mov    DWORD PTR [esi+0x18],eax
   1c328:	mov    DWORD PTR [ecx+0x30],eax
   1c32b:	mov    DWORD PTR [esi],ebx
   1c32d:	xor    ebx,ebx
   1c32f:	jmp    0x1d225
   1c334:	mov    eax,DWORD PTR [ebp+0x8]
   1c337:	mov    DWORD PTR [eax+0x18],0x1f712
   1c33e:	jmp    0x1d21f
   1c343:	cmp    edi,0x10
   1c346:	jae    0x1c36f
   1c348:	cmp    DWORD PTR [ebp-0x8],0x0
   1c34c:	je     0x1d273
   1c352:	mov    eax,DWORD PTR [ebp-0x4]
   1c355:	movzx  eax,BYTE PTR [eax]
   1c358:	dec    DWORD PTR [ebp-0x8]
   1c35b:	mov    ecx,edi
   1c35d:	shl    eax,cl
   1c35f:	add    edi,0x8
   1c362:	add    ebx,eax
   1c364:	inc    DWORD PTR [ebp-0x4]
   1c367:	cmp    edi,0x10
   1c36a:	jb     0x1c348
   1c36c:	mov    edx,DWORD PTR [ebp+0x8]
   1c36f:	mov    DWORD PTR [esi+0x10],ebx
   1c372:	cmp    bl,0x8
   1c375:	je     0x1c383
   1c377:	mov    DWORD PTR [edx+0x18],0x1f73e
   1c37e:	jmp    0x1d21f
   1c383:	test   ebx,0xe000
   1c389:	je     0x1c397
   1c38b:	mov    DWORD PTR [edx+0x18],0x1f6f8
   1c392:	jmp    0x1d21f
   1c397:	mov    eax,DWORD PTR [esi+0x20]
   1c39a:	test   eax,eax
   1c39c:	je     0x1c3a8
   1c39e:	mov    ecx,ebx
   1c3a0:	shr    ecx,0x8
   1c3a3:	and    ecx,0x1
   1c3a6:	mov    DWORD PTR [eax],ecx
   1c3a8:	test   DWORD PTR [esi+0x10],0x200
   1c3af:	je     0x1c3ce
   1c3b1:	mov    BYTE PTR [ebp-0x14],bl
   1c3b4:	push   0x2
   1c3b6:	lea    eax,[ebp-0x14]
   1c3b9:	shr    ebx,0x8
   1c3bc:	push   eax
   1c3bd:	mov    BYTE PTR [ebp-0x13],bl
   1c3c0:	push   DWORD PTR [esi+0x18]
   1c3c3:	call   0x1e0d6
   1c3c8:	mov    edx,DWORD PTR [ebp+0x8]
   1c3cb:	mov    DWORD PTR [esi+0x18],eax
   1c3ce:	xor    ebx,ebx
   1c3d0:	xor    edi,edi
   1c3d2:	mov    DWORD PTR [esi],0x2
   1c3d8:	cmp    edi,0x20
   1c3db:	jae    0x1c404
   1c3dd:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3e1:	je     0x1d273
   1c3e7:	mov    eax,DWORD PTR [ebp-0x4]
   1c3ea:	movzx  eax,BYTE PTR [eax]
   1c3ed:	dec    DWORD PTR [ebp-0x8]
   1c3f0:	mov    ecx,edi
   1c3f2:	shl    eax,cl
   1c3f4:	add    edi,0x8
   1c3f7:	add    ebx,eax
   1c3f9:	inc    DWORD PTR [ebp-0x4]
   1c3fc:	cmp    edi,0x20
   1c3ff:	jb     0x1c3dd
   1c401:	mov    edx,DWORD PTR [ebp+0x8]
   1c404:	mov    eax,DWORD PTR [esi+0x20]
   1c407:	test   eax,eax
   1c409:	je     0x1c40e
   1c40b:	mov    DWORD PTR [eax+0x4],ebx
   1c40e:	test   DWORD PTR [esi+0x10],0x200
   1c415:	je     0x1c444
   1c417:	mov    eax,ebx
   1c419:	shr    eax,0x8
   1c41c:	mov    BYTE PTR [ebp-0x13],al
   1c41f:	mov    eax,ebx
   1c421:	shr    eax,0x10
   1c424:	mov    BYTE PTR [ebp-0x12],al
   1c427:	mov    BYTE PTR [ebp-0x14],bl
   1c42a:	push   0x4
   1c42c:	lea    eax,[ebp-0x14]
   1c42f:	shr    ebx,0x18
   1c432:	push   eax
   1c433:	mov    BYTE PTR [ebp-0x11],bl
   1c436:	push   DWORD PTR [esi+0x18]
   1c439:	call   0x1e0d6
   1c43e:	mov    edx,DWORD PTR [ebp+0x8]
   1c441:	mov    DWORD PTR [esi+0x18],eax
   1c444:	xor    ebx,ebx
   1c446:	xor    edi,edi
   1c448:	mov    DWORD PTR [esi],0x3
   1c44e:	cmp    edi,0x10
   1c451:	jae    0x1c47a
   1c453:	cmp    DWORD PTR [ebp-0x8],0x0
   1c457:	je     0x1d273
   1c45d:	mov    eax,DWORD PTR [ebp-0x4]
   1c460:	movzx  eax,BYTE PTR [eax]
   1c463:	dec    DWORD PTR [ebp-0x8]
   1c466:	mov    ecx,edi
   1c468:	shl    eax,cl
   1c46a:	add    edi,0x8
   1c46d:	add    ebx,eax
   1c46f:	inc    DWORD PTR [ebp-0x4]
   1c472:	cmp    edi,0x10
   1c475:	jb     0x1c453
   1c477:	mov    edx,DWORD PTR [ebp+0x8]
   1c47a:	mov    eax,DWORD PTR [esi+0x20]
   1c47d:	test   eax,eax
   1c47f:	je     0x1c497
   1c481:	mov    ecx,ebx
   1c483:	and    ecx,0xff
   1c489:	mov    DWORD PTR [eax+0x8],ecx
   1c48c:	mov    ecx,DWORD PTR [esi+0x20]
   1c48f:	mov    eax,ebx
   1c491:	shr    eax,0x8
   1c494:	mov    DWORD PTR [ecx+0xc],eax
   1c497:	test   DWORD PTR [esi+0x10],0x200
   1c49e:	je     0x1c4bd
   1c4a0:	mov    BYTE PTR [ebp-0x14],bl
   1c4a3:	push   0x2
   1c4a5:	lea    eax,[ebp-0x14]
   1c4a8:	shr    ebx,0x8
   1c4ab:	push   eax
   1c4ac:	mov    BYTE PTR [ebp-0x13],bl
   1c4af:	push   DWORD PTR [esi+0x18]
   1c4b2:	call   0x1e0d6
   1c4b7:	mov    edx,DWORD PTR [ebp+0x8]
   1c4ba:	mov    DWORD PTR [esi+0x18],eax
   1c4bd:	xor    ebx,ebx
   1c4bf:	xor    edi,edi
   1c4c1:	mov    DWORD PTR [esi],0x4
   1c4c7:	test   DWORD PTR [esi+0x10],0x400
   1c4ce:	je     0x1c535
   1c4d0:	cmp    edi,0x10
   1c4d3:	jae    0x1c4fc
   1c4d5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4d9:	je     0x1d273
   1c4df:	mov    eax,DWORD PTR [ebp-0x4]
   1c4e2:	movzx  eax,BYTE PTR [eax]
   1c4e5:	dec    DWORD PTR [ebp-0x8]
   1c4e8:	mov    ecx,edi
   1c4ea:	shl    eax,cl
   1c4ec:	add    edi,0x8
   1c4ef:	add    ebx,eax
   1c4f1:	inc    DWORD PTR [ebp-0x4]
   1c4f4:	cmp    edi,0x10
   1c4f7:	jb     0x1c4d5
   1c4f9:	mov    edx,DWORD PTR [ebp+0x8]
   1c4fc:	mov    eax,DWORD PTR [esi+0x20]
   1c4ff:	mov    DWORD PTR [esi+0x40],ebx
   1c502:	test   eax,eax
   1c504:	je     0x1c509
   1c506:	mov    DWORD PTR [eax+0x14],ebx
   1c509:	test   DWORD PTR [esi+0x10],0x200
   1c510:	je     0x1c52f
   1c512:	mov    BYTE PTR [ebp-0x14],bl
   1c515:	push   0x2
   1c517:	lea    eax,[ebp-0x14]
   1c51a:	shr    ebx,0x8
   1c51d:	push   eax
   1c51e:	mov    BYTE PTR [ebp-0x13],bl
   1c521:	push   DWORD PTR [esi+0x18]
   1c524:	call   0x1e0d6
   1c529:	mov    edx,DWORD PTR [ebp+0x8]
   1c52c:	mov    DWORD PTR [esi+0x18],eax
   1c52f:	xor    ebx,ebx
   1c531:	xor    edi,edi
   1c533:	jmp    0x1c540
   1c535:	mov    eax,DWORD PTR [esi+0x20]
   1c538:	test   eax,eax
   1c53a:	je     0x1c540
   1c53c:	and    DWORD PTR [eax+0x10],0x0
   1c540:	mov    DWORD PTR [esi],0x5
   1c546:	test   DWORD PTR [esi+0x10],0x400
   1c54d:	je     0x1c5d7
   1c553:	mov    edx,DWORD PTR [esi+0x40]
   1c556:	mov    eax,DWORD PTR [ebp-0x8]
   1c559:	mov    DWORD PTR [ebp-0xc],edx
   1c55c:	cmp    edx,eax
   1c55e:	jbe    0x1c563
   1c560:	mov    DWORD PTR [ebp-0xc],eax
   1c563:	cmp    DWORD PTR [ebp-0xc],0x0
   1c567:	je     0x1c5ca
   1c569:	mov    ecx,DWORD PTR [esi+0x20]
   1c56c:	test   ecx,ecx
   1c56e:	je     0x1c5a4
   1c570:	mov    eax,DWORD PTR [ecx+0x10]
   1c573:	mov    DWORD PTR [ebp-0x28],eax
   1c576:	test   eax,eax
   1c578:	je     0x1c5a4
   1c57a:	mov    eax,DWORD PTR [ecx+0x14]
   1c57d:	mov    ecx,DWORD PTR [ecx+0x18]
   1c580:	sub    eax,edx
   1c582:	mov    edx,DWORD PTR [ebp-0xc]
   1c585:	add    edx,eax
   1c587:	cmp    edx,ecx
   1c589:	jbe    0x1c58f
   1c58b:	sub    ecx,eax
   1c58d:	jmp    0x1c592
   1c58f:	mov    ecx,DWORD PTR [ebp-0xc]
   1c592:	push   ecx
   1c593:	mov    ecx,DWORD PTR [ebp-0x28]
   1c596:	push   DWORD PTR [ebp-0x4]
   1c599:	add    ecx,eax
   1c59b:	push   ecx
   1c59c:	call   0x1e1b6
   1c5a1:	add    esp,0xc
   1c5a4:	test   DWORD PTR [esi+0x10],0x200
   1c5ab:	je     0x1c5be
   1c5ad:	push   DWORD PTR [ebp-0xc]
   1c5b0:	push   DWORD PTR [ebp-0x4]
   1c5b3:	push   DWORD PTR [esi+0x18]
   1c5b6:	call   0x1e0d6
   1c5bb:	mov    DWORD PTR [esi+0x18],eax
   1c5be:	mov    eax,DWORD PTR [ebp-0xc]
   1c5c1:	sub    DWORD PTR [ebp-0x8],eax
   1c5c4:	add    DWORD PTR [ebp-0x4],eax
   1c5c7:	sub    DWORD PTR [esi+0x40],eax
   1c5ca:	cmp    DWORD PTR [esi+0x40],0x0
   1c5ce:	jne    0x1d273
   1c5d4:	mov    edx,DWORD PTR [ebp+0x8]
   1c5d7:	and    DWORD PTR [esi+0x40],0x0
   1c5db:	mov    DWORD PTR [esi],0x6
   1c5e1:	test   DWORD PTR [esi+0x10],0x800
   1c5e8:	je     0x1c665
   1c5ea:	cmp    DWORD PTR [ebp-0x8],0x0
   1c5ee:	je     0x1d273
   1c5f4:	xor    ecx,ecx
   1c5f6:	mov    eax,DWORD PTR [ebp-0x4]
   1c5f9:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c5fd:	inc    ecx
   1c5fe:	mov    DWORD PTR [ebp-0xc],ecx
   1c601:	mov    ecx,DWORD PTR [esi+0x20]
   1c604:	mov    DWORD PTR [ebp-0x20],eax
   1c607:	test   ecx,ecx
   1c609:	je     0x1c626
   1c60b:	mov    edx,DWORD PTR [ecx+0x1c]
   1c60e:	mov    DWORD PTR [ebp-0x28],edx
   1c611:	test   edx,edx
   1c613:	je     0x1c626
   1c615:	mov    edx,DWORD PTR [esi+0x40]
   1c618:	cmp    edx,DWORD PTR [ecx+0x20]
   1c61b:	jae    0x1c626
   1c61d:	mov    ecx,DWORD PTR [ebp-0x28]
   1c620:	mov    BYTE PTR [ecx+edx*1],al
   1c623:	inc    DWORD PTR [esi+0x40]
   1c626:	test   eax,eax
   1c628:	je     0x1c632
   1c62a:	mov    ecx,DWORD PTR [ebp-0xc]
   1c62d:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c630:	jb     0x1c5f6
   1c632:	test   DWORD PTR [esi+0x10],0x200
   1c639:	je     0x1c64f
   1c63b:	push   DWORD PTR [ebp-0xc]
   1c63e:	push   DWORD PTR [ebp-0x4]
   1c641:	push   DWORD PTR [esi+0x18]
   1c644:	call   0x1e0d6
   1c649:	mov    DWORD PTR [esi+0x18],eax
   1c64c:	mov    eax,DWORD PTR [ebp-0x20]
   1c64f:	mov    ecx,DWORD PTR [ebp-0xc]
   1c652:	sub    DWORD PTR [ebp-0x8],ecx
   1c655:	add    DWORD PTR [ebp-0x4],ecx
   1c658:	test   eax,eax
   1c65a:	jne    0x1d273
   1c660:	mov    edx,DWORD PTR [ebp+0x8]
   1c663:	jmp    0x1c670
   1c665:	mov    eax,DWORD PTR [esi+0x20]
   1c668:	test   eax,eax
   1c66a:	je     0x1c670
   1c66c:	and    DWORD PTR [eax+0x1c],0x0
   1c670:	and    DWORD PTR [esi+0x40],0x0
   1c674:	mov    DWORD PTR [esi],0x7
   1c67a:	test   DWORD PTR [esi+0x10],0x1000
   1c681:	je     0x1c6fe
   1c683:	cmp    DWORD PTR [ebp-0x8],0x0
   1c687:	je     0x1d273
   1c68d:	xor    ecx,ecx
   1c68f:	mov    eax,DWORD PTR [ebp-0x4]
   1c692:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c696:	inc    ecx
   1c697:	mov    DWORD PTR [ebp-0xc],ecx
   1c69a:	mov    ecx,DWORD PTR [esi+0x20]
   1c69d:	mov    DWORD PTR [ebp-0x20],eax
   1c6a0:	test   ecx,ecx
   1c6a2:	je     0x1c6bf
   1c6a4:	mov    edx,DWORD PTR [ecx+0x24]
   1c6a7:	mov    DWORD PTR [ebp-0x28],edx
   1c6aa:	test   edx,edx
   1c6ac:	je     0x1c6bf
   1c6ae:	mov    edx,DWORD PTR [esi+0x40]
   1c6b1:	cmp    edx,DWORD PTR [ecx+0x28]
   1c6b4:	jae    0x1c6bf
   1c6b6:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6b9:	mov    BYTE PTR [ecx+edx*1],al
   1c6bc:	inc    DWORD PTR [esi+0x40]
   1c6bf:	test   eax,eax
   1c6c1:	je     0x1c6cb
   1c6c3:	mov    ecx,DWORD PTR [ebp-0xc]
   1c6c6:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c6c9:	jb     0x1c68f
   1c6cb:	test   DWORD PTR [esi+0x10],0x200
   1c6d2:	je     0x1c6e8
   1c6d4:	push   DWORD PTR [ebp-0xc]
   1c6d7:	push   DWORD PTR [ebp-0x4]
   1c6da:	push   DWORD PTR [esi+0x18]
   1c6dd:	call   0x1e0d6
   1c6e2:	mov    DWORD PTR [esi+0x18],eax
   1c6e5:	mov    eax,DWORD PTR [ebp-0x20]
   1c6e8:	mov    ecx,DWORD PTR [ebp-0xc]
   1c6eb:	sub    DWORD PTR [ebp-0x8],ecx
   1c6ee:	add    DWORD PTR [ebp-0x4],ecx
   1c6f1:	test   eax,eax
   1c6f3:	jne    0x1d273
   1c6f9:	mov    edx,DWORD PTR [ebp+0x8]
   1c6fc:	jmp    0x1c709
   1c6fe:	mov    eax,DWORD PTR [esi+0x20]
   1c701:	test   eax,eax
   1c703:	je     0x1c709
   1c705:	and    DWORD PTR [eax+0x24],0x0
   1c709:	mov    DWORD PTR [esi],0x8
   1c70f:	test   DWORD PTR [esi+0x10],0x200
   1c716:	je     0x1c75c
   1c718:	cmp    edi,0x10
   1c71b:	jae    0x1c744
   1c71d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c721:	je     0x1d273
   1c727:	mov    eax,DWORD PTR [ebp-0x4]
   1c72a:	movzx  eax,BYTE PTR [eax]
   1c72d:	dec    DWORD PTR [ebp-0x8]
   1c730:	mov    ecx,edi
   1c732:	shl    eax,cl
   1c734:	add    edi,0x8
   1c737:	add    ebx,eax
   1c739:	inc    DWORD PTR [ebp-0x4]
   1c73c:	cmp    edi,0x10
   1c73f:	jb     0x1c71d
   1c741:	mov    edx,DWORD PTR [ebp+0x8]
   1c744:	movzx  eax,WORD PTR [esi+0x18]
   1c748:	cmp    ebx,eax
   1c74a:	je     0x1c758
   1c74c:	mov    DWORD PTR [edx+0x18],0x1f6e4
   1c753:	jmp    0x1d21f
   1c758:	xor    ebx,ebx
   1c75a:	xor    edi,edi
   1c75c:	mov    eax,DWORD PTR [esi+0x20]
   1c75f:	test   eax,eax
   1c761:	je     0x1c777
   1c763:	mov    edx,DWORD PTR [esi+0x10]
   1c766:	xor    ecx,ecx
   1c768:	inc    ecx
   1c769:	sar    edx,0x9
   1c76c:	and    edx,ecx
   1c76e:	mov    DWORD PTR [eax+0x2c],edx
   1c771:	mov    eax,DWORD PTR [esi+0x20]
   1c774:	mov    DWORD PTR [eax+0x30],ecx
   1c777:	xor    eax,eax
   1c779:	push   eax
   1c77a:	push   eax
   1c77b:	push   eax
   1c77c:	call   0x1e0d6
   1c781:	mov    ecx,DWORD PTR [ebp+0x8]
   1c784:	mov    DWORD PTR [esi+0x18],eax
   1c787:	mov    DWORD PTR [ecx+0x30],eax
   1c78a:	jmp    0x1ce88
   1c78f:	cmp    edi,0x20
   1c792:	jae    0x1c7bb
   1c794:	cmp    DWORD PTR [ebp-0x8],0x0
   1c798:	je     0x1d273
   1c79e:	mov    eax,DWORD PTR [ebp-0x4]
   1c7a1:	movzx  eax,BYTE PTR [eax]
   1c7a4:	dec    DWORD PTR [ebp-0x8]
   1c7a7:	mov    ecx,edi
   1c7a9:	shl    eax,cl
   1c7ab:	add    edi,0x8
   1c7ae:	add    ebx,eax
   1c7b0:	inc    DWORD PTR [ebp-0x4]
   1c7b3:	cmp    edi,0x20
   1c7b6:	jb     0x1c794
   1c7b8:	mov    edx,DWORD PTR [ebp+0x8]
   1c7bb:	mov    ecx,ebx
   1c7bd:	mov    eax,0xff00
   1c7c2:	and    ecx,eax
   1c7c4:	mov    edi,ebx
   1c7c6:	shl    edi,0x10
   1c7c9:	add    ecx,edi
   1c7cb:	mov    edi,ebx
   1c7cd:	shr    edi,0x8
   1c7d0:	and    edi,eax
   1c7d2:	shl    ecx,0x8
   1c7d5:	shr    ebx,0x18
   1c7d8:	add    ecx,edi
   1c7da:	lea    eax,[ecx+ebx*1]
   1c7dd:	mov    DWORD PTR [esi+0x18],eax
   1c7e0:	mov    DWORD PTR [edx+0x30],eax
   1c7e3:	xor    ebx,ebx
   1c7e5:	xor    edi,edi
   1c7e7:	mov    DWORD PTR [esi],0xa
   1c7ed:	cmp    DWORD PTR [esi+0xc],0x0
   1c7f1:	je     0x1d235
   1c7f7:	xor    eax,eax
   1c7f9:	push   eax
   1c7fa:	push   eax
   1c7fb:	push   eax
   1c7fc:	call   0x1dc34
   1c801:	mov    ecx,DWORD PTR [ebp+0x8]
   1c804:	mov    DWORD PTR [esi+0x18],eax
   1c807:	mov    DWORD PTR [ecx+0x30],eax
   1c80a:	mov    DWORD PTR [esi],0xb
   1c810:	cmp    DWORD PTR [ebp+0xc],0x5
   1c814:	je     0x1d273
   1c81a:	mov    edx,DWORD PTR [ebp+0x8]
   1c81d:	cmp    DWORD PTR [esi+0x4],0x0
   1c821:	je     0x1c837
   1c823:	mov    ecx,edi
   1c825:	and    ecx,0x7
   1c828:	shr    ebx,cl
   1c82a:	sub    edi,ecx
   1c82c:	mov    DWORD PTR [esi],0x18
   1c832:	jmp    0x1d225
   1c837:	cmp    edi,0x3
   1c83a:	jae    0x1c863
   1c83c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c840:	je     0x1d273
   1c846:	mov    eax,DWORD PTR [ebp-0x4]
   1c849:	movzx  eax,BYTE PTR [eax]
   1c84c:	dec    DWORD PTR [ebp-0x8]
   1c84f:	mov    ecx,edi
   1c851:	shl    eax,cl
   1c853:	add    edi,0x8
   1c856:	add    ebx,eax
   1c858:	inc    DWORD PTR [ebp-0x4]
   1c85b:	cmp    edi,0x3
   1c85e:	jb     0x1c83c
   1c860:	mov    edx,DWORD PTR [ebp+0x8]
   1c863:	mov    eax,ebx
   1c865:	and    eax,0x1
   1c868:	shr    ebx,1
   1c86a:	mov    DWORD PTR [esi+0x4],eax
   1c86d:	mov    eax,ebx
   1c86f:	and    eax,0x3
   1c872:	dec    edi
   1c873:	sub    eax,0x0
   1c876:	je     0x1c8bc
   1c878:	dec    eax
   1c879:	je     0x1c898
   1c87b:	dec    eax
   1c87c:	je     0x1c890
   1c87e:	dec    eax
   1c87f:	jne    0x1c8c2
   1c881:	mov    DWORD PTR [edx+0x18],0x1f6d0
   1c888:	mov    DWORD PTR [esi],0x1b
   1c88e:	jmp    0x1c8c2
   1c890:	mov    DWORD PTR [esi],0xf
   1c896:	jmp    0x1c8c2
   1c898:	mov    DWORD PTR [esi+0x4c],0x74c68
   1c89f:	mov    DWORD PTR [esi+0x54],0x9
   1c8a6:	mov    DWORD PTR [esi+0x50],0x75468
   1c8ad:	mov    DWORD PTR [esi+0x58],0x5
   1c8b4:	mov    DWORD PTR [esi],0x12
   1c8ba:	jmp    0x1c8c2
   1c8bc:	mov    DWORD PTR [esi],0xd
   1c8c2:	shr    ebx,0x2
   1c8c5:	dec    edi
   1c8c6:	dec    edi
   1c8c7:	jmp    0x1d225
   1c8cc:	mov    ecx,edi
   1c8ce:	and    ecx,0x7
   1c8d1:	sub    edi,ecx
   1c8d3:	shr    ebx,cl
   1c8d5:	cmp    edi,0x20
   1c8d8:	jae    0x1c901
   1c8da:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8de:	je     0x1d273
   1c8e4:	mov    eax,DWORD PTR [ebp-0x4]
   1c8e7:	movzx  eax,BYTE PTR [eax]
   1c8ea:	dec    DWORD PTR [ebp-0x8]
   1c8ed:	mov    ecx,edi
   1c8ef:	shl    eax,cl
   1c8f1:	add    edi,0x8
   1c8f4:	add    ebx,eax
   1c8f6:	inc    DWORD PTR [ebp-0x4]
   1c8f9:	cmp    edi,0x20
   1c8fc:	jb     0x1c8da
   1c8fe:	mov    edx,DWORD PTR [ebp+0x8]
   1c901:	mov    ecx,ebx
   1c903:	mov    eax,ebx
   1c905:	not    ecx
   1c907:	and    eax,0xffff
   1c90c:	shr    ecx,0x10
   1c90f:	cmp    eax,ecx
   1c911:	je     0x1c91f
   1c913:	mov    DWORD PTR [edx+0x18],0x1f6b2
   1c91a:	jmp    0x1d21f
   1c91f:	xor    ebx,ebx
   1c921:	mov    DWORD PTR [esi+0x40],eax
   1c924:	xor    edi,edi
   1c926:	mov    DWORD PTR [esi],0xe
   1c92c:	mov    eax,DWORD PTR [esi+0x40]
   1c92f:	mov    DWORD PTR [ebp-0xc],eax
   1c932:	test   eax,eax
   1c934:	je     0x1ce88
   1c93a:	mov    eax,DWORD PTR [ebp-0x8]
   1c93d:	cmp    DWORD PTR [ebp-0xc],eax
   1c940:	jbe    0x1c945
   1c942:	mov    DWORD PTR [ebp-0xc],eax
   1c945:	mov    eax,DWORD PTR [ebp-0x10]
   1c948:	cmp    DWORD PTR [ebp-0xc],eax
   1c94b:	jbe    0x1c950
   1c94d:	mov    DWORD PTR [ebp-0xc],eax
   1c950:	cmp    DWORD PTR [ebp-0xc],0x0
   1c954:	je     0x1d273
   1c95a:	push   DWORD PTR [ebp-0xc]
   1c95d:	push   DWORD PTR [ebp-0x4]
   1c960:	push   DWORD PTR [ebp-0x18]
   1c963:	call   0x1e1b6
   1c968:	mov    eax,DWORD PTR [ebp-0xc]
   1c96b:	sub    DWORD PTR [ebp-0x8],eax
   1c96e:	add    DWORD PTR [ebp-0x4],eax
   1c971:	sub    DWORD PTR [ebp-0x10],eax
   1c974:	add    DWORD PTR [ebp-0x18],eax
   1c977:	add    esp,0xc
   1c97a:	sub    DWORD PTR [esi+0x40],eax
   1c97d:	jmp    0x1d225
   1c982:	cmp    edi,0xe
   1c985:	jae    0x1c9ae
   1c987:	cmp    DWORD PTR [ebp-0x8],0x0
   1c98b:	je     0x1d273
   1c991:	mov    eax,DWORD PTR [ebp-0x4]
   1c994:	movzx  eax,BYTE PTR [eax]
   1c997:	dec    DWORD PTR [ebp-0x8]
   1c99a:	mov    ecx,edi
   1c99c:	shl    eax,cl
   1c99e:	add    edi,0x8
   1c9a1:	add    ebx,eax
   1c9a3:	inc    DWORD PTR [ebp-0x4]
   1c9a6:	cmp    edi,0xe
   1c9a9:	jb     0x1c987
   1c9ab:	mov    edx,DWORD PTR [ebp+0x8]
   1c9ae:	mov    eax,ebx
   1c9b0:	and    eax,0x1f
   1c9b3:	add    eax,0x101
   1c9b8:	mov    DWORD PTR [esi+0x60],eax
   1c9bb:	shr    ebx,0x5
   1c9be:	mov    eax,ebx
   1c9c0:	and    eax,0x1f
   1c9c3:	inc    eax
   1c9c4:	shr    ebx,0x5
   1c9c7:	mov    DWORD PTR [esi+0x64],eax
   1c9ca:	mov    eax,ebx
   1c9cc:	and    eax,0xf
   1c9cf:	add    eax,0x4
   1c9d2:	shr    ebx,0x4
   1c9d5:	sub    edi,0xe
   1c9d8:	cmp    DWORD PTR [esi+0x60],0x11e
   1c9df:	mov    DWORD PTR [esi+0x5c],eax
   1c9e2:	ja     0x1c9f6
   1c9e4:	cmp    DWORD PTR [esi+0x64],0x1e
   1c9e8:	ja     0x1c9f6
   1c9ea:	and    DWORD PTR [esi+0x68],0x0
   1c9ee:	mov    DWORD PTR [esi],0x10
   1c9f4:	jmp    0x1ca44
   1c9f6:	mov    DWORD PTR [edx+0x18],0x1f68e
   1c9fd:	jmp    0x1d21f
   1ca02:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca06:	je     0x1d273
   1ca0c:	mov    eax,DWORD PTR [ebp-0x4]
   1ca0f:	movzx  eax,BYTE PTR [eax]
   1ca12:	dec    DWORD PTR [ebp-0x8]
   1ca15:	mov    ecx,edi
   1ca17:	shl    eax,cl
   1ca19:	add    ebx,eax
   1ca1b:	inc    DWORD PTR [ebp-0x4]
   1ca1e:	add    edi,0x8
   1ca21:	cmp    edi,0x3
   1ca24:	jb     0x1ca02
   1ca26:	mov    ecx,DWORD PTR [esi+0x68]
   1ca29:	movzx  ecx,WORD PTR [ecx*2+0x754e8]
   1ca31:	mov    eax,ebx
   1ca33:	and    eax,0x7
   1ca36:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1ca3b:	inc    DWORD PTR [esi+0x68]
   1ca3e:	shr    ebx,0x3
   1ca41:	sub    edi,0x3
   1ca44:	mov    eax,DWORD PTR [esi+0x68]
   1ca47:	cmp    eax,DWORD PTR [esi+0x5c]
   1ca4a:	jb     0x1ca21
   1ca4c:	jmp    0x1ca63
   1ca4e:	mov    eax,DWORD PTR [esi+0x68]
   1ca51:	movzx  eax,WORD PTR [eax*2+0x754e8]
   1ca59:	xor    ecx,ecx
   1ca5b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1ca60:	inc    DWORD PTR [esi+0x68]
   1ca63:	cmp    DWORD PTR [esi+0x68],0x13
   1ca67:	jb     0x1ca4e
   1ca69:	lea    eax,[esi+0x530]
   1ca6f:	lea    ecx,[esi+0x6c]
   1ca72:	mov    DWORD PTR [ecx],eax
   1ca74:	mov    DWORD PTR [esi+0x4c],eax
   1ca77:	lea    edx,[esi+0x2f0]
   1ca7d:	push   edx
   1ca7e:	lea    eax,[esi+0x54]
   1ca81:	push   eax
   1ca82:	push   ecx
   1ca83:	mov    DWORD PTR [eax],0x7
   1ca89:	push   0x13
   1ca8b:	lea    eax,[esi+0x70]
   1ca8e:	push   eax
   1ca8f:	push   0x0
   1ca91:	call   0x1d82e
   1ca96:	mov    DWORD PTR [ebp-0x24],eax
   1ca99:	test   eax,eax
   1ca9b:	je     0x1caac
   1ca9d:	mov    eax,DWORD PTR [ebp+0x8]
   1caa0:	mov    DWORD PTR [eax+0x18],0x1f674
   1caa7:	jmp    0x1d21f
   1caac:	and    DWORD PTR [esi+0x68],0x0
   1cab0:	mov    DWORD PTR [esi],0x11
   1cab6:	jmp    0x1ccb2
   1cabb:	cmp    DWORD PTR [ebp-0x8],0x0
   1cabf:	je     0x1d273
   1cac5:	mov    eax,DWORD PTR [ebp-0x4]
   1cac8:	movzx  eax,BYTE PTR [eax]
   1cacb:	dec    DWORD PTR [ebp-0x8]
   1cace:	mov    ecx,edi
   1cad0:	shl    eax,cl
   1cad2:	add    ebx,eax
   1cad4:	inc    DWORD PTR [ebp-0x4]
   1cad7:	add    edi,0x8
   1cada:	mov    ecx,DWORD PTR [esi+0x54]
   1cadd:	xor    eax,eax
   1cadf:	inc    eax
   1cae0:	shl    eax,cl
   1cae2:	mov    ecx,DWORD PTR [esi+0x4c]
   1cae5:	dec    eax
   1cae6:	and    eax,ebx
   1cae8:	mov    eax,DWORD PTR [ecx+eax*4]
   1caeb:	mov    ecx,eax
   1caed:	shr    ecx,0x8
   1caf0:	movzx  ecx,cl
   1caf3:	mov    DWORD PTR [ebp-0x20],eax
   1caf6:	cmp    ecx,edi
   1caf8:	ja     0x1cabb
   1cafa:	mov    ecx,eax
   1cafc:	shr    ecx,0x10
   1caff:	cmp    cx,0x10
   1cb03:	jae    0x1cb50
   1cb05:	mov    ecx,eax
   1cb07:	shr    ecx,0x8
   1cb0a:	movzx  ecx,cl
   1cb0d:	jmp    0x1cb31
   1cb0f:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb13:	je     0x1d273
   1cb19:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb1c:	movzx  edx,BYTE PTR [ecx]
   1cb1f:	dec    DWORD PTR [ebp-0x8]
   1cb22:	mov    ecx,edi
   1cb24:	shl    edx,cl
   1cb26:	movzx  ecx,ah
   1cb29:	add    ebx,edx
   1cb2b:	inc    DWORD PTR [ebp-0x4]
   1cb2e:	add    edi,0x8
   1cb31:	cmp    edi,ecx
   1cb33:	jb     0x1cb0f
   1cb35:	movzx  ecx,ah
   1cb38:	mov    eax,DWORD PTR [esi+0x68]
   1cb3b:	shr    ebx,cl
   1cb3d:	sub    edi,ecx
   1cb3f:	mov    cx,WORD PTR [ebp-0x1e]
   1cb43:	mov    WORD PTR [esi+eax*2+0x70],cx
   1cb48:	inc    DWORD PTR [esi+0x68]
   1cb4b:	jmp    0x1ccb2
   1cb50:	cmp    WORD PTR [ebp-0x1e],0x10
   1cb55:	jne    0x1cbad
   1cb57:	movzx  eax,ah
   1cb5a:	jmp    0x1cb7b
   1cb5c:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb60:	je     0x1d273
   1cb66:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb69:	movzx  edx,BYTE PTR [ecx]
   1cb6c:	dec    DWORD PTR [ebp-0x8]
   1cb6f:	mov    ecx,edi
   1cb71:	shl    edx,cl
   1cb73:	add    ebx,edx
   1cb75:	inc    DWORD PTR [ebp-0x4]
   1cb78:	add    edi,0x8
   1cb7b:	lea    ecx,[eax+0x2]
   1cb7e:	cmp    edi,ecx
   1cb80:	jb     0x1cb5c
   1cb82:	mov    ecx,eax
   1cb84:	sub    edi,eax
   1cb86:	mov    eax,DWORD PTR [esi+0x68]
   1cb89:	shr    ebx,cl
   1cb8b:	test   eax,eax
   1cb8d:	je     0x1ccc3
   1cb93:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1cb98:	mov    DWORD PTR [ebp-0x20],eax
   1cb9b:	mov    eax,ebx
   1cb9d:	and    eax,0x3
   1cba0:	add    eax,0x3
   1cba3:	shr    ebx,0x2
   1cba6:	dec    edi
   1cba7:	dec    edi
   1cba8:	jmp    0x1cc32
   1cbad:	cmp    WORD PTR [ebp-0x1e],0x11
   1cbb2:	movzx  edx,ah
   1cbb5:	jne    0x1cc11
   1cbb7:	jmp    0x1cbd8
   1cbb9:	cmp    DWORD PTR [ebp-0x8],0x0
   1cbbd:	je     0x1d273
   1cbc3:	mov    eax,DWORD PTR [ebp-0x4]
   1cbc6:	movzx  eax,BYTE PTR [eax]
   1cbc9:	dec    DWORD PTR [ebp-0x8]
   1cbcc:	mov    ecx,edi
   1cbce:	shl    eax,cl
   1cbd0:	add    ebx,eax
   1cbd2:	inc    DWORD PTR [ebp-0x4]
   1cbd5:	add    edi,0x8
   1cbd8:	lea    eax,[edx+0x3]
   1cbdb:	cmp    edi,eax
   1cbdd:	jb     0x1cbb9
   1cbdf:	mov    ecx,edx
   1cbe1:	shr    ebx,cl
   1cbe3:	push   0xfffffffd
   1cbe5:	mov    eax,ebx
   1cbe7:	and    eax,0x7
   1cbea:	add    eax,0x3
   1cbed:	shr    ebx,0x3
   1cbf0:	jmp    0x1cc29
   1cbf2:	cmp    DWORD PTR [ebp-0x8],0x0
   1cbf6:	je     0x1d273
   1cbfc:	mov    eax,DWORD PTR [ebp-0x4]
   1cbff:	movzx  eax,BYTE PTR [eax]
   1cc02:	dec    DWORD PTR [ebp-0x8]
   1cc05:	mov    ecx,edi
   1cc07:	shl    eax,cl
   1cc09:	add    ebx,eax
   1cc0b:	inc    DWORD PTR [ebp-0x4]
   1cc0e:	add    edi,0x8
   1cc11:	lea    eax,[edx+0x7]
   1cc14:	cmp    edi,eax
   1cc16:	jb     0x1cbf2
   1cc18:	mov    ecx,edx
   1cc1a:	shr    ebx,cl
   1cc1c:	push   0xfffffff9
   1cc1e:	mov    eax,ebx
   1cc20:	and    eax,0x7f
   1cc23:	add    eax,0xb
   1cc26:	shr    ebx,0x7
   1cc29:	and    DWORD PTR [ebp-0x20],0x0
   1cc2d:	pop    ecx
   1cc2e:	sub    ecx,edx
   1cc30:	add    edi,ecx
   1cc32:	mov    ecx,DWORD PTR [esi+0x64]
   1cc35:	mov    edx,DWORD PTR [esi+0x68]
   1cc38:	add    ecx,DWORD PTR [esi+0x60]
   1cc3b:	add    edx,eax
   1cc3d:	cmp    edx,ecx
   1cc3f:	jbe    0x1ccae
   1cc41:	mov    eax,DWORD PTR [ebp+0x8]
   1cc44:	mov    DWORD PTR [eax+0x18],0x1f65a
   1cc4b:	mov    DWORD PTR [esi],0x1b
   1cc51:	cmp    DWORD PTR [esi],0x1b
   1cc54:	je     0x1d225
   1cc5a:	lea    eax,[esi+0x530]
   1cc60:	lea    ecx,[esi+0x6c]
   1cc63:	mov    DWORD PTR [ecx],eax
   1cc65:	mov    DWORD PTR [esi+0x4c],eax
   1cc68:	lea    edx,[esi+0x2f0]
   1cc6e:	push   edx
   1cc6f:	lea    eax,[esi+0x54]
   1cc72:	push   eax
   1cc73:	push   ecx
   1cc74:	push   DWORD PTR [esi+0x60]
   1cc77:	mov    DWORD PTR [eax],0x9
   1cc7d:	lea    eax,[esi+0x70]
   1cc80:	push   eax
   1cc81:	push   0x1
   1cc83:	call   0x1d82e
   1cc88:	mov    DWORD PTR [ebp-0x24],eax
   1cc8b:	test   eax,eax
   1cc8d:	je     0x1ccd2
   1cc8f:	mov    eax,DWORD PTR [ebp+0x8]
   1cc92:	mov    DWORD PTR [eax+0x18],0x1f63e
   1cc99:	jmp    0x1d21f
   1cc9e:	mov    ecx,DWORD PTR [esi+0x68]
   1cca1:	mov    dx,WORD PTR [ebp-0x20]
   1cca5:	dec    eax
   1cca6:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1ccab:	inc    DWORD PTR [esi+0x68]
   1ccae:	test   eax,eax
   1ccb0:	jne    0x1cc9e
   1ccb2:	mov    eax,DWORD PTR [esi+0x64]
   1ccb5:	add    eax,DWORD PTR [esi+0x60]
   1ccb8:	cmp    DWORD PTR [esi+0x68],eax
   1ccbb:	jb     0x1cada
   1ccc1:	jmp    0x1cc51
   1ccc3:	mov    eax,DWORD PTR [ebp+0x8]
   1ccc6:	mov    DWORD PTR [eax+0x18],0x1f65a
   1cccd:	jmp    0x1d21f
   1ccd2:	lea    ecx,[esi+0x6c]
   1ccd5:	mov    eax,DWORD PTR [ecx]
   1ccd7:	mov    DWORD PTR [esi+0x50],eax
   1ccda:	lea    edx,[esi+0x2f0]
   1cce0:	push   edx
   1cce1:	lea    eax,[esi+0x58]
   1cce4:	push   eax
   1cce5:	push   ecx
   1cce6:	push   DWORD PTR [esi+0x64]
   1cce9:	mov    DWORD PTR [eax],0x6
   1ccef:	mov    eax,DWORD PTR [esi+0x60]
   1ccf2:	lea    eax,[esi+eax*2+0x70]
   1ccf6:	push   eax
   1ccf7:	push   0x2
   1ccf9:	call   0x1d82e
   1ccfe:	mov    DWORD PTR [ebp-0x24],eax
   1cd01:	test   eax,eax
   1cd03:	je     0x1cd14
   1cd05:	mov    eax,DWORD PTR [ebp+0x8]
   1cd08:	mov    DWORD PTR [eax+0x18],0x1f628
   1cd0f:	jmp    0x1d21f
   1cd14:	mov    DWORD PTR [esi],0x12
   1cd1a:	cmp    DWORD PTR [ebp-0x8],0x6
   1cd1e:	jb     0x1cd77
   1cd20:	cmp    DWORD PTR [ebp-0x10],0x102
   1cd27:	jb     0x1cd77
   1cd29:	mov    eax,DWORD PTR [ebp+0x8]
   1cd2c:	mov    ecx,DWORD PTR [ebp-0x18]
   1cd2f:	push   DWORD PTR [ebp-0x1c]
   1cd32:	mov    DWORD PTR [eax+0xc],ecx
   1cd35:	mov    ecx,DWORD PTR [ebp-0x10]
   1cd38:	mov    DWORD PTR [eax+0x10],ecx
   1cd3b:	mov    ecx,DWORD PTR [ebp-0x4]
   1cd3e:	mov    DWORD PTR [eax],ecx
   1cd40:	mov    ecx,DWORD PTR [ebp-0x8]
   1cd43:	mov    DWORD PTR [eax+0x4],ecx
   1cd46:	push   eax
   1cd47:	mov    DWORD PTR [esi+0x38],ebx
   1cd4a:	mov    DWORD PTR [esi+0x3c],edi
   1cd4d:	call   0x1d448
   1cd52:	mov    eax,DWORD PTR [ebp+0x8]
   1cd55:	mov    ecx,DWORD PTR [eax+0xc]
   1cd58:	mov    ebx,DWORD PTR [esi+0x38]
   1cd5b:	mov    edi,DWORD PTR [esi+0x3c]
   1cd5e:	mov    DWORD PTR [ebp-0x18],ecx
   1cd61:	mov    ecx,DWORD PTR [eax+0x10]
   1cd64:	mov    DWORD PTR [ebp-0x10],ecx
   1cd67:	mov    ecx,DWORD PTR [eax]
   1cd69:	mov    eax,DWORD PTR [eax+0x4]
   1cd6c:	mov    DWORD PTR [ebp-0x4],ecx
   1cd6f:	mov    DWORD PTR [ebp-0x8],eax
   1cd72:	jmp    0x1d225
   1cd77:	mov    ecx,DWORD PTR [esi+0x54]
   1cd7a:	mov    eax,DWORD PTR [esi+0x4c]
   1cd7d:	xor    edx,edx
   1cd7f:	inc    edx
   1cd80:	shl    edx,cl
   1cd82:	dec    edx
   1cd83:	and    edx,ebx
   1cd85:	mov    eax,DWORD PTR [eax+edx*4]
   1cd88:	jmp    0x1cdba
   1cd8a:	cmp    DWORD PTR [ebp-0x8],0x0
   1cd8e:	je     0x1d273
   1cd94:	mov    eax,DWORD PTR [ebp-0x4]
   1cd97:	movzx  eax,BYTE PTR [eax]
   1cd9a:	dec    DWORD PTR [ebp-0x8]
   1cd9d:	mov    ecx,edi
   1cd9f:	shl    eax,cl
   1cda1:	mov    ecx,DWORD PTR [esi+0x54]
   1cda4:	add    edi,0x8
   1cda7:	add    ebx,eax
   1cda9:	inc    DWORD PTR [ebp-0x4]
   1cdac:	xor    eax,eax
   1cdae:	inc    eax
   1cdaf:	shl    eax,cl
   1cdb1:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdb4:	dec    eax
   1cdb5:	and    eax,ebx
   1cdb7:	mov    eax,DWORD PTR [ecx+eax*4]
   1cdba:	mov    ecx,eax
   1cdbc:	shr    ecx,0x8
   1cdbf:	movzx  ecx,cl
   1cdc2:	cmp    ecx,edi
   1cdc4:	ja     0x1cd8a
   1cdc6:	test   al,al
   1cdc8:	je     0x1ce61
   1cdce:	test   al,0xf0
   1cdd0:	jne    0x1ce61
   1cdd6:	mov    DWORD PTR [ebp-0xc],eax
   1cdd9:	shr    DWORD PTR [ebp-0xc],0x8
   1cddd:	movzx  edx,BYTE PTR [ebp-0xc]
   1cde1:	mov    DWORD PTR [ebp-0x28],edx
   1cde4:	movzx  ecx,al
   1cde7:	add    ecx,edx
   1cde9:	xor    edx,edx
   1cdeb:	inc    edx
   1cdec:	shl    edx,cl
   1cdee:	mov    ecx,DWORD PTR [ebp-0x28]
   1cdf1:	mov    DWORD PTR [ebp-0x20],eax
   1cdf4:	shr    eax,0x10
   1cdf7:	dec    edx
   1cdf8:	and    edx,ebx
   1cdfa:	shr    edx,cl
   1cdfc:	add    edx,eax
   1cdfe:	mov    eax,DWORD PTR [esi+0x4c]
   1ce01:	mov    eax,DWORD PTR [eax+edx*4]
   1ce04:	movzx  edx,BYTE PTR [ebp-0xc]
   1ce08:	jmp    0x1ce4b
   1ce0a:	cmp    DWORD PTR [ebp-0x8],0x0
   1ce0e:	je     0x1d273
   1ce14:	mov    eax,DWORD PTR [ebp-0x4]
   1ce17:	movzx  eax,BYTE PTR [eax]
   1ce1a:	movzx  edx,BYTE PTR [ebp-0x1f]
   1ce1e:	dec    DWORD PTR [ebp-0x8]
   1ce21:	mov    ecx,edi
   1ce23:	shl    eax,cl
   1ce25:	movzx  ecx,BYTE PTR [ebp-0x20]
   1ce29:	add    ebx,eax
   1ce2b:	inc    DWORD PTR [ebp-0x4]
   1ce2e:	xor    eax,eax
   1ce30:	add    ecx,edx
   1ce32:	inc    eax
   1ce33:	shl    eax,cl
   1ce35:	add    edi,0x8
   1ce38:	mov    ecx,edx
   1ce3a:	dec    eax
   1ce3b:	and    eax,ebx
   1ce3d:	shr    eax,cl
   1ce3f:	movzx  ecx,WORD PTR [ebp-0x1e]
   1ce43:	add    eax,ecx
   1ce45:	mov    ecx,DWORD PTR [esi+0x4c]
   1ce48:	mov    eax,DWORD PTR [ecx+eax*4]
   1ce4b:	mov    ecx,eax
   1ce4d:	shr    ecx,0x8
   1ce50:	movzx  ecx,cl
   1ce53:	add    ecx,edx
   1ce55:	cmp    ecx,edi
   1ce57:	ja     0x1ce0a
   1ce59:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1ce5d:	shr    ebx,cl
   1ce5f:	sub    edi,ecx
   1ce61:	mov    ecx,eax
   1ce63:	shr    ecx,0x8
   1ce66:	movzx  ecx,cl
   1ce69:	shr    ebx,cl
   1ce6b:	sub    edi,ecx
   1ce6d:	mov    ecx,eax
   1ce6f:	shr    ecx,0x10
   1ce72:	mov    DWORD PTR [esi+0x40],ecx
   1ce75:	test   al,al
   1ce77:	jne    0x1ce84
   1ce79:	mov    DWORD PTR [esi],0x17
   1ce7f:	jmp    0x1d225
   1ce84:	test   al,0x20
   1ce86:	je     0x1ce93
   1ce88:	mov    DWORD PTR [esi],0xb
   1ce8e:	jmp    0x1d225
   1ce93:	test   al,0x40
   1ce95:	je     0x1cea6
   1ce97:	mov    eax,DWORD PTR [ebp+0x8]
   1ce9a:	mov    DWORD PTR [eax+0x18],0x1f60c
   1cea1:	jmp    0x1d21f
   1cea6:	movzx  eax,al
   1cea9:	and    eax,0xf
   1ceac:	mov    DWORD PTR [esi+0x48],eax
   1ceaf:	mov    DWORD PTR [esi],0x13
   1ceb5:	mov    eax,DWORD PTR [esi+0x48]
   1ceb8:	test   eax,eax
   1ceba:	je     0x1cef5
   1cebc:	cmp    edi,eax
   1cebe:	jae    0x1cee4
   1cec0:	cmp    DWORD PTR [ebp-0x8],0x0
   1cec4:	je     0x1d273
   1ceca:	mov    ecx,DWORD PTR [ebp-0x4]
   1cecd:	movzx  edx,BYTE PTR [ecx]
   1ced0:	dec    DWORD PTR [ebp-0x8]
   1ced3:	mov    ecx,edi
   1ced5:	shl    edx,cl
   1ced7:	add    edi,0x8
   1ceda:	add    ebx,edx
   1cedc:	inc    DWORD PTR [ebp-0x4]
   1cedf:	cmp    edi,DWORD PTR [esi+0x48]
   1cee2:	jb     0x1cec0
   1cee4:	xor    edx,edx
   1cee6:	inc    edx
   1cee7:	mov    ecx,eax
   1cee9:	shl    edx,cl
   1ceeb:	dec    edx
   1ceec:	and    edx,ebx
   1ceee:	add    DWORD PTR [esi+0x40],edx
   1cef1:	shr    ebx,cl
   1cef3:	sub    edi,eax
   1cef5:	mov    DWORD PTR [esi],0x14
   1cefb:	mov    ecx,DWORD PTR [esi+0x58]
   1cefe:	mov    eax,DWORD PTR [esi+0x50]
   1cf01:	xor    edx,edx
   1cf03:	inc    edx
   1cf04:	shl    edx,cl
   1cf06:	dec    edx
   1cf07:	and    edx,ebx
   1cf09:	mov    eax,DWORD PTR [eax+edx*4]
   1cf0c:	jmp    0x1cf3e
   1cf0e:	cmp    DWORD PTR [ebp-0x8],0x0
   1cf12:	je     0x1d273
   1cf18:	mov    eax,DWORD PTR [ebp-0x4]
   1cf1b:	movzx  eax,BYTE PTR [eax]
   1cf1e:	dec    DWORD PTR [ebp-0x8]
   1cf21:	mov    ecx,edi
   1cf23:	shl    eax,cl
   1cf25:	mov    ecx,DWORD PTR [esi+0x58]
   1cf28:	add    edi,0x8
   1cf2b:	add    ebx,eax
   1cf2d:	inc    DWORD PTR [ebp-0x4]
   1cf30:	xor    eax,eax
   1cf32:	inc    eax
   1cf33:	shl    eax,cl
   1cf35:	mov    ecx,DWORD PTR [esi+0x50]
   1cf38:	dec    eax
   1cf39:	and    eax,ebx
   1cf3b:	mov    eax,DWORD PTR [ecx+eax*4]
   1cf3e:	mov    ecx,eax
   1cf40:	shr    ecx,0x8
   1cf43:	movzx  ecx,cl
   1cf46:	cmp    ecx,edi
   1cf48:	ja     0x1cf0e
   1cf4a:	test   al,0xf0
   1cf4c:	jne    0x1cfdd
   1cf52:	mov    DWORD PTR [ebp-0xc],eax
   1cf55:	shr    DWORD PTR [ebp-0xc],0x8
   1cf59:	movzx  edx,BYTE PTR [ebp-0xc]
   1cf5d:	mov    DWORD PTR [ebp-0x28],edx
   1cf60:	movzx  ecx,al
   1cf63:	add    ecx,edx
   1cf65:	xor    edx,edx
   1cf67:	inc    edx
   1cf68:	shl    edx,cl
   1cf6a:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf6d:	mov    DWORD PTR [ebp-0x20],eax
   1cf70:	shr    eax,0x10
   1cf73:	dec    edx
   1cf74:	and    edx,ebx
   1cf76:	shr    edx,cl
   1cf78:	add    edx,eax
   1cf7a:	mov    eax,DWORD PTR [esi+0x50]
   1cf7d:	mov    eax,DWORD PTR [eax+edx*4]
   1cf80:	movzx  edx,BYTE PTR [ebp-0xc]
   1cf84:	jmp    0x1cfc7
   1cf86:	cmp    DWORD PTR [ebp-0x8],0x0
   1cf8a:	je     0x1d273
   1cf90:	mov    eax,DWORD PTR [ebp-0x4]
   1cf93:	movzx  eax,BYTE PTR [eax]
   1cf96:	movzx  edx,BYTE PTR [ebp-0x1f]
   1cf9a:	dec    DWORD PTR [ebp-0x8]
   1cf9d:	mov    ecx,edi
   1cf9f:	shl    eax,cl
   1cfa1:	movzx  ecx,BYTE PTR [ebp-0x20]
   1cfa5:	add    ebx,eax
   1cfa7:	inc    DWORD PTR [ebp-0x4]
   1cfaa:	xor    eax,eax
   1cfac:	add    ecx,edx
   1cfae:	inc    eax
   1cfaf:	shl    eax,cl
   1cfb1:	add    edi,0x8
   1cfb4:	mov    ecx,edx
   1cfb6:	dec    eax
   1cfb7:	and    eax,ebx
   1cfb9:	shr    eax,cl
   1cfbb:	movzx  ecx,WORD PTR [ebp-0x1e]
   1cfbf:	add    eax,ecx
   1cfc1:	mov    ecx,DWORD PTR [esi+0x50]
   1cfc4:	mov    eax,DWORD PTR [ecx+eax*4]
   1cfc7:	mov    ecx,eax
   1cfc9:	shr    ecx,0x8
   1cfcc:	movzx  ecx,cl
   1cfcf:	add    ecx,edx
   1cfd1:	cmp    ecx,edi
   1cfd3:	ja     0x1cf86
   1cfd5:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1cfd9:	shr    ebx,cl
   1cfdb:	sub    edi,ecx
   1cfdd:	mov    ecx,eax
   1cfdf:	shr    ecx,0x8
   1cfe2:	movzx  ecx,cl
   1cfe5:	shr    ebx,cl
   1cfe7:	sub    edi,ecx
   1cfe9:	test   al,0x40
   1cfeb:	je     0x1cffc
   1cfed:	mov    eax,DWORD PTR [ebp+0x8]
   1cff0:	mov    DWORD PTR [eax+0x18],0x1f5f6
   1cff7:	jmp    0x1d21f
   1cffc:	mov    edx,DWORD PTR [ebp+0x8]
   1cfff:	mov    ecx,eax
   1d001:	movzx  eax,al
   1d004:	shr    ecx,0x10
   1d007:	and    eax,0xf
   1d00a:	mov    DWORD PTR [esi+0x44],ecx
   1d00d:	mov    DWORD PTR [esi+0x48],eax
   1d010:	mov    DWORD PTR [esi],0x15
   1d016:	mov    eax,DWORD PTR [esi+0x48]
   1d019:	test   eax,eax
   1d01b:	je     0x1d05a
   1d01d:	cmp    edi,eax
   1d01f:	jae    0x1d048
   1d021:	cmp    DWORD PTR [ebp-0x8],0x0
   1d025:	je     0x1d273
   1d02b:	mov    eax,DWORD PTR [ebp-0x4]
   1d02e:	movzx  eax,BYTE PTR [eax]
   1d031:	dec    DWORD PTR [ebp-0x8]
   1d034:	mov    ecx,edi
   1d036:	shl    eax,cl
   1d038:	add    edi,0x8
   1d03b:	add    ebx,eax
   1d03d:	inc    DWORD PTR [ebp-0x4]
   1d040:	cmp    edi,DWORD PTR [esi+0x48]
   1d043:	jb     0x1d021
   1d045:	mov    edx,DWORD PTR [ebp+0x8]
   1d048:	mov    ecx,DWORD PTR [esi+0x48]
   1d04b:	xor    eax,eax
   1d04d:	inc    eax
   1d04e:	shl    eax,cl
   1d050:	dec    eax
   1d051:	and    eax,ebx
   1d053:	add    DWORD PTR [esi+0x44],eax
   1d056:	shr    ebx,cl
   1d058:	sub    edi,ecx
   1d05a:	mov    eax,DWORD PTR [esi+0x2c]
   1d05d:	sub    eax,DWORD PTR [ebp-0x10]
   1d060:	add    eax,DWORD PTR [ebp-0x1c]
   1d063:	cmp    DWORD PTR [esi+0x44],eax
   1d066:	jbe    0x1d074
   1d068:	mov    DWORD PTR [edx+0x18],0x1f5d8
   1d06f:	jmp    0x1d21f
   1d074:	mov    DWORD PTR [esi],0x16
   1d07a:	cmp    DWORD PTR [ebp-0x10],0x0
   1d07e:	je     0x1d273
   1d084:	mov    eax,DWORD PTR [ebp-0x1c]
   1d087:	sub    eax,DWORD PTR [ebp-0x10]
   1d08a:	mov    ecx,DWORD PTR [esi+0x44]
   1d08d:	cmp    ecx,eax
   1d08f:	jbe    0x1d0be
   1d091:	sub    ecx,eax
   1d093:	mov    eax,DWORD PTR [esi+0x34]
   1d096:	mov    DWORD PTR [ebp-0xc],ecx
   1d099:	mov    ecx,DWORD PTR [esi+0x30]
   1d09c:	cmp    DWORD PTR [ebp-0xc],ecx
   1d09f:	jbe    0x1d0ac
   1d0a1:	add    eax,DWORD PTR [esi+0x28]
   1d0a4:	sub    DWORD PTR [ebp-0xc],ecx
   1d0a7:	sub    eax,DWORD PTR [ebp-0xc]
   1d0aa:	jmp    0x1d0b1
   1d0ac:	sub    eax,DWORD PTR [ebp-0xc]
   1d0af:	add    eax,ecx
   1d0b1:	mov    ecx,DWORD PTR [esi+0x40]
   1d0b4:	mov    DWORD PTR [ebp-0x28],ecx
   1d0b7:	cmp    DWORD PTR [ebp-0xc],ecx
   1d0ba:	jbe    0x1d0cc
   1d0bc:	jmp    0x1d0c9
   1d0be:	mov    eax,DWORD PTR [ebp-0x18]
   1d0c1:	sub    eax,ecx
   1d0c3:	mov    ecx,DWORD PTR [esi+0x40]
   1d0c6:	mov    DWORD PTR [ebp-0x28],ecx
   1d0c9:	mov    DWORD PTR [ebp-0xc],ecx
   1d0cc:	mov    ecx,DWORD PTR [ebp-0x10]
   1d0cf:	cmp    DWORD PTR [ebp-0xc],ecx
   1d0d2:	jbe    0x1d0d7
   1d0d4:	mov    DWORD PTR [ebp-0xc],ecx
   1d0d7:	sub    ecx,DWORD PTR [ebp-0xc]
   1d0da:	mov    DWORD PTR [ebp-0x10],ecx
   1d0dd:	mov    ecx,DWORD PTR [ebp-0x28]
   1d0e0:	sub    ecx,DWORD PTR [ebp-0xc]
   1d0e3:	mov    DWORD PTR [esi+0x40],ecx
   1d0e6:	mov    edx,DWORD PTR [ebp-0x18]
   1d0e9:	mov    cl,BYTE PTR [eax]
   1d0eb:	inc    DWORD PTR [ebp-0x18]
   1d0ee:	inc    eax
   1d0ef:	dec    DWORD PTR [ebp-0xc]
   1d0f2:	mov    BYTE PTR [edx],cl
   1d0f4:	jne    0x1d0e6
   1d0f6:	cmp    DWORD PTR [esi+0x40],0x0
   1d0fa:	jne    0x1d225
   1d100:	jmp    0x1d11a
   1d102:	cmp    DWORD PTR [ebp-0x10],0x0
   1d106:	je     0x1d273
   1d10c:	mov    ecx,DWORD PTR [ebp-0x18]
   1d10f:	mov    al,BYTE PTR [esi+0x40]
   1d112:	inc    DWORD PTR [ebp-0x18]
   1d115:	dec    DWORD PTR [ebp-0x10]
   1d118:	mov    BYTE PTR [ecx],al
   1d11a:	mov    DWORD PTR [esi],0x12
   1d120:	jmp    0x1d225
   1d125:	cmp    DWORD PTR [esi+0x8],0x0
   1d129:	je     0x1d1d9
   1d12f:	cmp    edi,0x20
   1d132:	jae    0x1d15b
   1d134:	cmp    DWORD PTR [ebp-0x8],0x0
   1d138:	je     0x1d273
   1d13e:	mov    eax,DWORD PTR [ebp-0x4]
   1d141:	movzx  eax,BYTE PTR [eax]
   1d144:	dec    DWORD PTR [ebp-0x8]
   1d147:	mov    ecx,edi
   1d149:	shl    eax,cl
   1d14b:	add    edi,0x8
   1d14e:	add    ebx,eax
   1d150:	inc    DWORD PTR [ebp-0x4]
   1d153:	cmp    edi,0x20
   1d156:	jb     0x1d134
   1d158:	mov    edx,DWORD PTR [ebp+0x8]
   1d15b:	mov    eax,DWORD PTR [ebp-0x1c]
   1d15e:	sub    eax,DWORD PTR [ebp-0x10]
   1d161:	add    DWORD PTR [edx+0x14],eax
   1d164:	add    DWORD PTR [esi+0x1c],eax
   1d167:	mov    DWORD PTR [ebp-0x1c],eax
   1d16a:	test   eax,eax
   1d16c:	je     0x1d196
   1d16e:	push   eax
   1d16f:	mov    eax,DWORD PTR [ebp-0x18]
   1d172:	sub    eax,DWORD PTR [ebp-0x1c]
   1d175:	cmp    DWORD PTR [esi+0x10],0x0
   1d179:	push   eax
   1d17a:	push   DWORD PTR [esi+0x18]
   1d17d:	je     0x1d186
   1d17f:	call   0x1e0d6
   1d184:	jmp    0x1d18b
   1d186:	call   0x1dc34
   1d18b:	mov    ecx,DWORD PTR [ebp+0x8]
   1d18e:	mov    DWORD PTR [esi+0x18],eax
   1d191:	mov    DWORD PTR [ecx+0x30],eax
   1d194:	mov    edx,ecx
   1d196:	cmp    DWORD PTR [esi+0x10],0x0
   1d19a:	mov    eax,DWORD PTR [ebp-0x10]
   1d19d:	mov    DWORD PTR [ebp-0x1c],eax
   1d1a0:	mov    eax,ebx
   1d1a2:	jne    0x1d1c7
   1d1a4:	and    eax,0xff00
   1d1a9:	mov    ecx,ebx
   1d1ab:	shl    ecx,0x10
   1d1ae:	add    eax,ecx
   1d1b0:	mov    ecx,ebx
   1d1b2:	shr    ecx,0x8
   1d1b5:	and    ecx,0xff00
   1d1bb:	shl    eax,0x8
   1d1be:	add    eax,ecx
   1d1c0:	mov    ecx,ebx
   1d1c2:	shr    ecx,0x18
   1d1c5:	add    eax,ecx
   1d1c7:	cmp    eax,DWORD PTR [esi+0x18]
   1d1ca:	je     0x1d1d5
   1d1cc:	mov    DWORD PTR [edx+0x18],0x1f5c2
   1d1d3:	jmp    0x1d21f
   1d1d5:	xor    ebx,ebx
   1d1d7:	xor    edi,edi
   1d1d9:	mov    DWORD PTR [esi],0x19
   1d1df:	cmp    DWORD PTR [esi+0x8],0x0
   1d1e3:	je     0x1d25d
   1d1e5:	cmp    DWORD PTR [esi+0x10],0x0
   1d1e9:	je     0x1d25d
   1d1eb:	cmp    edi,0x20
   1d1ee:	jae    0x1d213
   1d1f0:	cmp    DWORD PTR [ebp-0x8],0x0
   1d1f4:	je     0x1d273
   1d1f6:	mov    eax,DWORD PTR [ebp-0x4]
   1d1f9:	movzx  eax,BYTE PTR [eax]
   1d1fc:	dec    DWORD PTR [ebp-0x8]
   1d1ff:	mov    ecx,edi
   1d201:	shl    eax,cl
   1d203:	add    edi,0x8
   1d206:	add    ebx,eax
   1d208:	inc    DWORD PTR [ebp-0x4]
   1d20b:	cmp    edi,0x20
   1d20e:	jb     0x1d1f0
   1d210:	mov    edx,DWORD PTR [ebp+0x8]
   1d213:	cmp    ebx,DWORD PTR [esi+0x1c]
   1d216:	je     0x1d259
   1d218:	mov    DWORD PTR [edx+0x18],0x1f5aa
   1d21f:	mov    DWORD PTR [esi],0x1b
   1d225:	mov    eax,DWORD PTR [esi]
   1d227:	cmp    eax,0x1c
   1d22a:	jbe    0x1c21c
   1d230:	jmp    0x1c212
   1d235:	mov    eax,DWORD PTR [ebp-0x18]
   1d238:	mov    DWORD PTR [edx+0xc],eax
   1d23b:	mov    eax,DWORD PTR [ebp-0x10]
   1d23e:	mov    DWORD PTR [edx+0x10],eax
   1d241:	mov    eax,DWORD PTR [ebp-0x4]
   1d244:	mov    DWORD PTR [edx],eax
   1d246:	mov    eax,DWORD PTR [ebp-0x8]
   1d249:	mov    DWORD PTR [edx+0x4],eax
   1d24c:	mov    DWORD PTR [esi+0x38],ebx
   1d24f:	mov    DWORD PTR [esi+0x3c],edi
   1d252:	push   0x2
   1d254:	jmp    0x1c214
   1d259:	xor    ebx,ebx
   1d25b:	xor    edi,edi
   1d25d:	mov    DWORD PTR [esi],0x1a
   1d263:	mov    DWORD PTR [ebp-0x24],0x1
   1d26a:	jmp    0x1d273
   1d26c:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1d273:	mov    eax,DWORD PTR [ebp+0x8]
   1d276:	mov    ecx,DWORD PTR [ebp-0x18]
   1d279:	mov    DWORD PTR [eax+0xc],ecx
   1d27c:	mov    ecx,DWORD PTR [ebp-0x10]
   1d27f:	mov    DWORD PTR [eax+0x10],ecx
   1d282:	mov    ecx,DWORD PTR [ebp-0x4]
   1d285:	mov    DWORD PTR [eax],ecx
   1d287:	mov    ecx,DWORD PTR [ebp-0x8]
   1d28a:	mov    DWORD PTR [eax+0x4],ecx
   1d28d:	cmp    DWORD PTR [esi+0x28],0x0
   1d291:	mov    DWORD PTR [esi+0x38],ebx
   1d294:	mov    DWORD PTR [esi+0x3c],edi
   1d297:	jne    0x1d2a9
   1d299:	cmp    DWORD PTR [esi],0x18
   1d29c:	jge    0x1d2c5
   1d29e:	mov    eax,DWORD PTR [ebp-0x1c]
   1d2a1:	mov    ecx,DWORD PTR [ebp+0x8]
   1d2a4:	cmp    eax,DWORD PTR [ecx+0x10]
   1d2a7:	je     0x1d2c5
   1d2a9:	mov    eax,DWORD PTR [ebp-0x1c]
   1d2ac:	mov    edi,DWORD PTR [ebp+0x8]
   1d2af:	call   0x1c0d4
   1d2b4:	test   eax,eax
   1d2b6:	je     0x1d2c5
   1d2b8:	mov    DWORD PTR [esi],0x1c
   1d2be:	push   0xfffffffc
   1d2c0:	jmp    0x1c214
   1d2c5:	mov    edi,DWORD PTR [ebp+0x8]
   1d2c8:	mov    eax,DWORD PTR [ebp-0x2c]
   1d2cb:	sub    eax,DWORD PTR [edi+0x4]
   1d2ce:	mov    ebx,DWORD PTR [ebp-0x1c]
   1d2d1:	sub    ebx,DWORD PTR [edi+0x10]
   1d2d4:	add    DWORD PTR [edi+0x8],eax
   1d2d7:	add    DWORD PTR [edi+0x14],ebx
   1d2da:	add    DWORD PTR [esi+0x1c],ebx
   1d2dd:	cmp    DWORD PTR [esi+0x8],0x0
   1d2e1:	mov    DWORD PTR [ebp-0x2c],eax
   1d2e4:	je     0x1d30f
   1d2e6:	test   ebx,ebx
   1d2e8:	je     0x1d30f
   1d2ea:	mov    eax,DWORD PTR [edi+0xc]
   1d2ed:	push   ebx
   1d2ee:	sub    eax,ebx
   1d2f0:	cmp    DWORD PTR [esi+0x10],0x0
   1d2f4:	push   eax
   1d2f5:	push   DWORD PTR [esi+0x18]
   1d2f8:	je     0x1d301
   1d2fa:	call   0x1e0d6
   1d2ff:	jmp    0x1d306
   1d301:	call   0x1dc34
   1d306:	mov    DWORD PTR [esi+0x18],eax
   1d309:	mov    DWORD PTR [edi+0x30],eax
   1d30c:	mov    eax,DWORD PTR [ebp-0x2c]
   1d30f:	cmp    DWORD PTR [esi],0xb
   1d312:	jne    0x1d31b
   1d314:	mov    ecx,0x80
   1d319:	jmp    0x1d31d
   1d31b:	xor    ecx,ecx
   1d31d:	mov    edx,DWORD PTR [esi+0x4]
   1d320:	neg    edx
   1d322:	sbb    edx,edx
   1d324:	and    edx,0x40
   1d327:	add    edx,ecx
   1d329:	add    edx,DWORD PTR [esi+0x3c]
   1d32c:	mov    DWORD PTR [edi+0x2c],edx
   1d32f:	test   eax,eax
   1d331:	jne    0x1d337
   1d333:	test   ebx,ebx
   1d335:	je     0x1d33d
   1d337:	cmp    DWORD PTR [ebp+0xc],0x4
   1d33b:	jne    0x1d34a
   1d33d:	cmp    DWORD PTR [ebp-0x24],0x0
   1d341:	jne    0x1d34a
   1d343:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1d34a:	mov    eax,DWORD PTR [ebp-0x24]
   1d34d:	jmp    0x1c215
   1d352:	mov    edi,edi
   1d354:	es ret 0x1
   1d358:	inc    ebx
   1d359:	ret    
   1d35a:	add    DWORD PTR [eax],eax
   1d35c:	fadd   st,st(3)
   1d35e:	add    DWORD PTR [eax],eax
   1d360:	dec    esi
   1d361:	les    eax,FWORD PTR [ecx]
   1d363:	add    bh,al
   1d365:	les    eax,FWORD PTR [ecx]
   1d367:	add    BYTE PTR [esi-0x3b],al
   1d36a:	add    DWORD PTR [eax],eax
   1d36c:	loope  0x1d333
   1d36e:	add    DWORD PTR [eax],eax
   1d370:	jp     0x1d338
   1d372:	add    DWORD PTR [eax],eax
   1d374:	(bad)  
   1d376:	add    DWORD PTR [eax],eax
   1d378:	pop    edi
   1d37a:	add    DWORD PTR [eax],eax
   1d37c:	in     eax,dx
   1d37d:	mov    DWORD PTR [ecx],0x1c81000
   1d383:	add    BYTE PTR ds:0xcc0001c8,bl
   1d389:	enter  0x1,0x2c
   1d38d:	leave  
   1d38e:	add    DWORD PTR [eax],eax
   1d390:	or     cl,0x1
   1d393:	add    BYTE PTR [edx+ecx*8+0x1],al
   1d397:	add    BYTE PTR [edx+0x1a0001cc],dh
   1d39d:	int    0x1
   1d39f:	add    BYTE PTR [ebp-0x4fffe32],dh
   1d3a5:	into   
   1d3a6:	add    DWORD PTR [eax],eax
   1d3a8:	push   ss
   1d3a9:	rol    BYTE PTR [ecx],1
   1d3ab:	add    BYTE PTR [edx-0x30],bh
   1d3ae:	add    DWORD PTR [eax],eax
   1d3b0:	add    dl,cl
   1d3b2:	add    DWORD PTR [eax],eax
   1d3b4:	and    eax,0xdf0001d1
   1d3b9:	rol    DWORD PTR [ecx],1
   1d3bb:	add    BYTE PTR [ebx-0x2e],ah
   1d3be:	add    DWORD PTR [eax],eax
   1d3c0:	ins    BYTE PTR es:[edi],dx
   1d3c1:	rol    BYTE PTR [ecx],cl
   1d3c3:	add    BYTE PTR [esi-0x33fffe2e],bh
   1d3c9:	int3   
   1d3ca:	int3   
   1d3cb:	int3   
   1d3cc:	int3   
   1d3cd:	int3   
   1d3ce:	mov    edi,edi
   1d3d0:	push   ebp
   1d3d1:	mov    ebp,esp
   1d3d3:	push   esi
   1d3d4:	mov    esi,DWORD PTR [ebp+0x8]
   1d3d7:	test   esi,esi
   1d3d9:	je     0x1d407
   1d3db:	mov    eax,DWORD PTR [esi+0x1c]
   1d3de:	test   eax,eax
   1d3e0:	je     0x1d407
   1d3e2:	mov    ecx,DWORD PTR [esi+0x24]
   1d3e5:	test   ecx,ecx
   1d3e7:	je     0x1d407
   1d3e9:	mov    eax,DWORD PTR [eax+0x34]
   1d3ec:	test   eax,eax
   1d3ee:	je     0x1d3f6
   1d3f0:	push   eax
   1d3f1:	push   DWORD PTR [esi+0x28]
   1d3f4:	call   ecx
   1d3f6:	push   DWORD PTR [esi+0x1c]
   1d3f9:	push   DWORD PTR [esi+0x28]
   1d3fc:	call   DWORD PTR [esi+0x24]
   1d3ff:	and    DWORD PTR [esi+0x1c],0x0
   1d403:	xor    eax,eax
   1d405:	jmp    0x1d40a
   1d407:	push   0xfffffffe
   1d409:	pop    eax
   1d40a:	pop    esi
   1d40b:	pop    ebp
   1d40c:	ret    0x4
   1d40f:	int3   
   1d410:	int3   
   1d411:	int3   
   1d412:	int3   
   1d413:	int3   
   1d414:	mov    edi,edi
   1d416:	push   ebp
   1d417:	mov    ebp,esp
   1d419:	mov    eax,DWORD PTR [ebp+0xc]
   1d41c:	imul   eax,DWORD PTR [ebp+0x10]
   1d420:	push   eax
   1d421:	call   0x1e0fa
   1d426:	pop    ecx
   1d427:	pop    ebp
   1d428:	ret    0xc
   1d42b:	int3   
   1d42c:	int3   
   1d42d:	int3   
   1d42e:	int3   
   1d42f:	int3   
   1d430:	mov    edi,edi
   1d432:	push   ebp
   1d433:	mov    ebp,esp
   1d435:	push   DWORD PTR [ebp+0xc]
   1d438:	call   0x1e128
   1d43d:	pop    ecx
   1d43e:	pop    ebp
   1d43f:	ret    0x8
   1d442:	int3   
   1d443:	int3   
   1d444:	int3   
   1d445:	int3   
   1d446:	int3   
   1d447:	int3   
   1d448:	mov    edi,edi
   1d44a:	push   ebp
   1d44b:	mov    ebp,esp
   1d44d:	sub    esp,0x40
   1d450:	mov    eax,DWORD PTR [ebp+0x8]
   1d453:	mov    ecx,DWORD PTR [eax+0x4]
   1d456:	mov    edx,DWORD PTR [eax+0x10]
   1d459:	push   ebx
   1d45a:	mov    ebx,DWORD PTR [eax]
   1d45c:	dec    ebx
   1d45d:	lea    ecx,[ecx+ebx*1-0x5]
   1d461:	mov    DWORD PTR [ebp-0x2c],ecx
   1d464:	mov    ecx,edx
   1d466:	sub    ecx,DWORD PTR [ebp+0xc]
   1d469:	push   esi
   1d46a:	mov    esi,DWORD PTR [eax+0x1c]
   1d46d:	push   edi
   1d46e:	mov    edi,DWORD PTR [eax+0xc]
   1d471:	dec    edi
   1d472:	add    ecx,edi
   1d474:	mov    DWORD PTR [ebp-0x3c],ecx
   1d477:	lea    ecx,[edx+edi*1-0x101]
   1d47e:	mov    DWORD PTR [ebp-0x30],ecx
   1d481:	mov    ecx,DWORD PTR [esi+0x28]
   1d484:	mov    DWORD PTR [ebp-0x24],ecx
   1d487:	mov    ecx,DWORD PTR [esi+0x2c]
   1d48a:	mov    DWORD PTR [ebp-0x40],ecx
   1d48d:	mov    ecx,DWORD PTR [esi+0x30]
   1d490:	mov    DWORD PTR [ebp-0x18],ecx
   1d493:	mov    ecx,DWORD PTR [esi+0x34]
   1d496:	mov    DWORD PTR [ebp-0x28],ecx
   1d499:	mov    ecx,DWORD PTR [esi+0x38]
   1d49c:	mov    DWORD PTR [ebp-0x4],ecx
   1d49f:	mov    ecx,DWORD PTR [esi+0x3c]
   1d4a2:	mov    DWORD PTR [ebp+0xc],ecx
   1d4a5:	mov    ecx,DWORD PTR [esi+0x4c]
   1d4a8:	xor    edx,edx
   1d4aa:	mov    DWORD PTR [ebp-0x1c],ecx
   1d4ad:	mov    ecx,DWORD PTR [esi+0x50]
   1d4b0:	inc    edx
   1d4b1:	mov    DWORD PTR [ebp-0x20],ecx
   1d4b4:	mov    ecx,DWORD PTR [esi+0x54]
   1d4b7:	shl    edx,cl
   1d4b9:	mov    ecx,DWORD PTR [esi+0x58]
   1d4bc:	dec    edx
   1d4bd:	mov    DWORD PTR [ebp-0x34],edx
   1d4c0:	xor    edx,edx
   1d4c2:	inc    edx
   1d4c3:	shl    edx,cl
   1d4c5:	dec    edx
   1d4c6:	mov    DWORD PTR [ebp-0x38],edx
   1d4c9:	mov    ecx,DWORD PTR [ebp+0xc]
   1d4cc:	cmp    ecx,0xf
   1d4cf:	jae    0x1d4ee
   1d4d1:	add    DWORD PTR [ebp+0xc],0x8
   1d4d5:	inc    ebx
   1d4d6:	movzx  edx,BYTE PTR [ebx]
   1d4d9:	shl    edx,cl
   1d4db:	mov    ecx,DWORD PTR [ebp+0xc]
   1d4de:	add    DWORD PTR [ebp-0x4],edx
   1d4e1:	inc    ebx
   1d4e2:	movzx  edx,BYTE PTR [ebx]
   1d4e5:	shl    edx,cl
   1d4e7:	add    DWORD PTR [ebp-0x4],edx
   1d4ea:	add    DWORD PTR [ebp+0xc],0x8
   1d4ee:	mov    ecx,DWORD PTR [ebp-0x34]
   1d4f1:	and    ecx,DWORD PTR [ebp-0x4]
   1d4f4:	mov    edx,DWORD PTR [ebp-0x1c]
   1d4f7:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d4fa:	mov    DWORD PTR [ebp-0x10],ecx
   1d4fd:	mov    edx,DWORD PTR [ebp-0x10]
   1d500:	shr    ecx,0x8
   1d503:	movzx  ecx,cl
   1d506:	shr    DWORD PTR [ebp-0x4],cl
   1d509:	sub    DWORD PTR [ebp+0xc],ecx
   1d50c:	mov    DWORD PTR [ebp-0x8],ecx
   1d50f:	movzx  ecx,dl
   1d512:	mov    DWORD PTR [ebp-0x8],ecx
   1d515:	test   ecx,ecx
   1d517:	je     0x1d560
   1d519:	mov    ecx,DWORD PTR [ebp-0x8]
   1d51c:	test   cl,0x10
   1d51f:	jne    0x1d56b
   1d521:	test   cl,0x40
   1d524:	jne    0x1d7ba
   1d52a:	xor    edx,edx
   1d52c:	inc    edx
   1d52d:	shl    edx,cl
   1d52f:	mov    ecx,DWORD PTR [ebp-0x10]
   1d532:	shr    ecx,0x10
   1d535:	dec    edx
   1d536:	and    edx,DWORD PTR [ebp-0x4]
   1d539:	add    edx,ecx
   1d53b:	mov    ecx,DWORD PTR [ebp-0x1c]
   1d53e:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d541:	mov    DWORD PTR [ebp-0x10],ecx
   1d544:	mov    edx,DWORD PTR [ebp-0x10]
   1d547:	shr    ecx,0x8
   1d54a:	movzx  ecx,cl
   1d54d:	shr    DWORD PTR [ebp-0x4],cl
   1d550:	sub    DWORD PTR [ebp+0xc],ecx
   1d553:	mov    DWORD PTR [ebp-0x8],ecx
   1d556:	movzx  ecx,dl
   1d559:	mov    DWORD PTR [ebp-0x8],ecx
   1d55c:	test   ecx,ecx
   1d55e:	jne    0x1d519
   1d560:	inc    edi
   1d561:	shr    edx,0x10
   1d564:	mov    BYTE PTR [edi],dl
   1d566:	jmp    0x1d798
   1d56b:	shr    edx,0x10
   1d56e:	and    ecx,0xf
   1d571:	mov    DWORD PTR [ebp-0xc],edx
   1d574:	mov    DWORD PTR [ebp-0x8],ecx
   1d577:	je     0x1d5a3
   1d579:	mov    ecx,DWORD PTR [ebp+0xc]
   1d57c:	cmp    ecx,DWORD PTR [ebp-0x8]
   1d57f:	jae    0x1d58e
   1d581:	inc    ebx
   1d582:	movzx  edx,BYTE PTR [ebx]
   1d585:	shl    edx,cl
   1d587:	add    DWORD PTR [ebp-0x4],edx
   1d58a:	add    DWORD PTR [ebp+0xc],0x8
   1d58e:	mov    ecx,DWORD PTR [ebp-0x8]
   1d591:	xor    edx,edx
   1d593:	inc    edx
   1d594:	shl    edx,cl
   1d596:	dec    edx
   1d597:	and    edx,DWORD PTR [ebp-0x4]
   1d59a:	shr    DWORD PTR [ebp-0x4],cl
   1d59d:	add    DWORD PTR [ebp-0xc],edx
   1d5a0:	sub    DWORD PTR [ebp+0xc],ecx
   1d5a3:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5a6:	cmp    ecx,0xf
   1d5a9:	jae    0x1d5c8
   1d5ab:	add    DWORD PTR [ebp+0xc],0x8
   1d5af:	inc    ebx
   1d5b0:	movzx  edx,BYTE PTR [ebx]
   1d5b3:	shl    edx,cl
   1d5b5:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5b8:	add    DWORD PTR [ebp-0x4],edx
   1d5bb:	inc    ebx
   1d5bc:	movzx  edx,BYTE PTR [ebx]
   1d5bf:	shl    edx,cl
   1d5c1:	add    DWORD PTR [ebp-0x4],edx
   1d5c4:	add    DWORD PTR [ebp+0xc],0x8
   1d5c8:	mov    ecx,DWORD PTR [ebp-0x38]
   1d5cb:	and    ecx,DWORD PTR [ebp-0x4]
   1d5ce:	mov    edx,DWORD PTR [ebp-0x20]
   1d5d1:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d5d4:	jmp    0x1d5f4
   1d5d6:	test   cl,0x40
   1d5d9:	jne    0x1d7b1
   1d5df:	xor    edx,edx
   1d5e1:	inc    edx
   1d5e2:	shl    edx,cl
   1d5e4:	movzx  ecx,WORD PTR [ebp-0xe]
   1d5e8:	dec    edx
   1d5e9:	and    edx,DWORD PTR [ebp-0x4]
   1d5ec:	add    edx,ecx
   1d5ee:	mov    ecx,DWORD PTR [ebp-0x20]
   1d5f1:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d5f4:	mov    DWORD PTR [ebp-0x10],ecx
   1d5f7:	mov    edx,DWORD PTR [ebp-0x10]
   1d5fa:	shr    ecx,0x8
   1d5fd:	movzx  ecx,cl
   1d600:	shr    DWORD PTR [ebp-0x4],cl
   1d603:	sub    DWORD PTR [ebp+0xc],ecx
   1d606:	mov    DWORD PTR [ebp-0x8],ecx
   1d609:	movzx  ecx,dl
   1d60c:	test   cl,0x10
   1d60f:	je     0x1d5d6
   1d611:	and    ecx,0xf
   1d614:	shr    edx,0x10
   1d617:	mov    DWORD PTR [ebp-0x14],edx
   1d61a:	mov    DWORD PTR [ebp-0x8],ecx
   1d61d:	cmp    DWORD PTR [ebp+0xc],ecx
   1d620:	jae    0x1d64d
   1d622:	mov    ecx,DWORD PTR [ebp+0xc]
   1d625:	add    DWORD PTR [ebp+0xc],0x8
   1d629:	inc    ebx
   1d62a:	movzx  edx,BYTE PTR [ebx]
   1d62d:	shl    edx,cl
   1d62f:	mov    ecx,DWORD PTR [ebp-0x8]
   1d632:	add    DWORD PTR [ebp-0x4],edx
   1d635:	cmp    DWORD PTR [ebp+0xc],ecx
   1d638:	jae    0x1d64d
   1d63a:	mov    ecx,DWORD PTR [ebp+0xc]
   1d63d:	inc    ebx
   1d63e:	movzx  edx,BYTE PTR [ebx]
   1d641:	shl    edx,cl
   1d643:	mov    ecx,DWORD PTR [ebp-0x8]
   1d646:	add    DWORD PTR [ebp-0x4],edx
   1d649:	add    DWORD PTR [ebp+0xc],0x8
   1d64d:	xor    edx,edx
   1d64f:	inc    edx
   1d650:	shl    edx,cl
   1d652:	mov    ecx,DWORD PTR [ebp-0x8]
   1d655:	sub    DWORD PTR [ebp+0xc],ecx
   1d658:	dec    edx
   1d659:	and    edx,DWORD PTR [ebp-0x4]
   1d65c:	shr    DWORD PTR [ebp-0x4],cl
   1d65f:	add    DWORD PTR [ebp-0x14],edx
   1d662:	mov    edx,DWORD PTR [ebp-0x14]
   1d665:	mov    ecx,edi
   1d667:	sub    ecx,DWORD PTR [ebp-0x3c]
   1d66a:	cmp    edx,ecx
   1d66c:	jbe    0x1d760
   1d672:	sub    edx,ecx
   1d674:	mov    DWORD PTR [ebp-0x8],edx
   1d677:	cmp    edx,DWORD PTR [ebp-0x40]
   1d67a:	ja     0x1d7a8
   1d680:	mov    ecx,DWORD PTR [ebp-0x28]
   1d683:	dec    ecx
   1d684:	mov    DWORD PTR [ebp-0x10],ecx
   1d687:	mov    ecx,DWORD PTR [ebp-0x18]
   1d68a:	test   ecx,ecx
   1d68c:	jne    0x1d6b4
   1d68e:	mov    ecx,DWORD PTR [ebp-0x24]
   1d691:	sub    ecx,edx
   1d693:	add    DWORD PTR [ebp-0x10],ecx
   1d696:	mov    ecx,edx
   1d698:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d69b:	jae    0x1d729
   1d6a1:	sub    DWORD PTR [ebp-0xc],ecx
   1d6a4:	mov    ecx,DWORD PTR [ebp-0x10]
   1d6a7:	inc    ecx
   1d6a8:	mov    dl,BYTE PTR [ecx]
   1d6aa:	inc    edi
   1d6ab:	dec    DWORD PTR [ebp-0x8]
   1d6ae:	mov    BYTE PTR [edi],dl
   1d6b0:	jne    0x1d6a7
   1d6b2:	jmp    0x1d6ff
   1d6b4:	cmp    ecx,edx
   1d6b6:	jae    0x1d709
   1d6b8:	sub    ecx,edx
   1d6ba:	add    ecx,DWORD PTR [ebp-0x24]
   1d6bd:	add    DWORD PTR [ebp-0x10],ecx
   1d6c0:	mov    ecx,DWORD PTR [ebp-0x8]
   1d6c3:	sub    ecx,DWORD PTR [ebp-0x18]
   1d6c6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d6c9:	jae    0x1d729
   1d6cb:	sub    DWORD PTR [ebp-0xc],ecx
   1d6ce:	inc    DWORD PTR [ebp-0x10]
   1d6d1:	mov    edx,DWORD PTR [ebp-0x10]
   1d6d4:	mov    dl,BYTE PTR [edx]
   1d6d6:	inc    edi
   1d6d7:	dec    ecx
   1d6d8:	mov    BYTE PTR [edi],dl
   1d6da:	jne    0x1d6ce
   1d6dc:	mov    ecx,DWORD PTR [ebp-0x28]
   1d6df:	dec    ecx
   1d6e0:	mov    DWORD PTR [ebp-0x10],ecx
   1d6e3:	mov    ecx,DWORD PTR [ebp-0x18]
   1d6e6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d6e9:	jae    0x1d729
   1d6eb:	sub    DWORD PTR [ebp-0xc],ecx
   1d6ee:	mov    DWORD PTR [ebp-0x8],ecx
   1d6f1:	mov    ecx,DWORD PTR [ebp-0x10]
   1d6f4:	inc    ecx
   1d6f5:	mov    dl,BYTE PTR [ecx]
   1d6f7:	inc    edi
   1d6f8:	dec    DWORD PTR [ebp-0x8]
   1d6fb:	mov    BYTE PTR [edi],dl
   1d6fd:	jne    0x1d6f4
   1d6ff:	mov    ecx,edi
   1d701:	sub    ecx,DWORD PTR [ebp-0x14]
   1d704:	mov    DWORD PTR [ebp-0x10],ecx
   1d707:	jmp    0x1d72c
   1d709:	sub    ecx,edx
   1d70b:	add    DWORD PTR [ebp-0x10],ecx
   1d70e:	mov    ecx,DWORD PTR [ebp-0x8]
   1d711:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d714:	jae    0x1d729
   1d716:	sub    DWORD PTR [ebp-0xc],ecx
   1d719:	mov    ecx,DWORD PTR [ebp-0x10]
   1d71c:	inc    ecx
   1d71d:	mov    dl,BYTE PTR [ecx]
   1d71f:	inc    edi
   1d720:	dec    DWORD PTR [ebp-0x8]
   1d723:	mov    BYTE PTR [edi],dl
   1d725:	jne    0x1d71c
   1d727:	jmp    0x1d6ff
   1d729:	mov    ecx,DWORD PTR [ebp-0x10]
   1d72c:	mov    edx,DWORD PTR [ebp-0xc]
   1d72f:	cmp    edx,0x2
   1d732:	jbe    0x1d780
   1d734:	lea    eax,[edx-0x3]
   1d737:	push   0x3
   1d739:	xor    edx,edx
   1d73b:	pop    ecx
   1d73c:	div    ecx
   1d73e:	mov    ecx,DWORD PTR [ebp-0x10]
   1d741:	inc    eax
   1d742:	sub    DWORD PTR [ebp-0xc],0x3
   1d746:	inc    ecx
   1d747:	mov    dl,BYTE PTR [ecx]
   1d749:	inc    edi
   1d74a:	mov    BYTE PTR [edi],dl
   1d74c:	inc    ecx
   1d74d:	mov    dl,BYTE PTR [ecx]
   1d74f:	inc    edi
   1d750:	inc    ecx
   1d751:	mov    BYTE PTR [edi],dl
   1d753:	mov    dl,BYTE PTR [ecx]
   1d755:	inc    edi
   1d756:	dec    eax
   1d757:	mov    BYTE PTR [edi],dl
   1d759:	jne    0x1d742
   1d75b:	mov    eax,DWORD PTR [ebp+0x8]
   1d75e:	jmp    0x1d780
   1d760:	mov    ecx,edi
   1d762:	sub    ecx,edx
   1d764:	sub    DWORD PTR [ebp-0xc],0x3
   1d768:	inc    ecx
   1d769:	mov    dl,BYTE PTR [ecx]
   1d76b:	inc    edi
   1d76c:	mov    BYTE PTR [edi],dl
   1d76e:	inc    ecx
   1d76f:	mov    dl,BYTE PTR [ecx]
   1d771:	inc    edi
   1d772:	inc    ecx
   1d773:	mov    BYTE PTR [edi],dl
   1d775:	mov    dl,BYTE PTR [ecx]
   1d777:	inc    edi
   1d778:	cmp    DWORD PTR [ebp-0xc],0x2
   1d77c:	mov    BYTE PTR [edi],dl
   1d77e:	ja     0x1d764
   1d780:	cmp    DWORD PTR [ebp-0xc],0x0
   1d784:	je     0x1d798
   1d786:	inc    ecx
   1d787:	mov    dl,BYTE PTR [ecx]
   1d789:	inc    edi
   1d78a:	cmp    DWORD PTR [ebp-0xc],0x1
   1d78e:	mov    BYTE PTR [edi],dl
   1d790:	jbe    0x1d798
   1d792:	mov    cl,BYTE PTR [ecx+0x1]
   1d795:	inc    edi
   1d796:	mov    BYTE PTR [edi],cl
   1d798:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d79b:	jae    0x1d7d4
   1d79d:	cmp    edi,DWORD PTR [ebp-0x30]
   1d7a0:	jb     0x1d4c9
   1d7a6:	jmp    0x1d7d4
   1d7a8:	mov    DWORD PTR [eax+0x18],0x1f5d8
   1d7af:	jmp    0x1d7ce
   1d7b1:	mov    DWORD PTR [eax+0x18],0x1f5f6
   1d7b8:	jmp    0x1d7ce
   1d7ba:	test   cl,0x20
   1d7bd:	je     0x1d7c7
   1d7bf:	mov    DWORD PTR [esi],0xb
   1d7c5:	jmp    0x1d7d4
   1d7c7:	mov    DWORD PTR [eax+0x18],0x1f60c
   1d7ce:	mov    DWORD PTR [esi],0x1b
   1d7d4:	mov    ecx,DWORD PTR [ebp+0xc]
   1d7d7:	shr    ecx,0x3
   1d7da:	sub    ebx,ecx
   1d7dc:	shl    ecx,0x3
   1d7df:	sub    DWORD PTR [ebp+0xc],ecx
   1d7e2:	xor    ecx,ecx
   1d7e4:	inc    ecx
   1d7e5:	mov    edx,ecx
   1d7e7:	mov    ecx,DWORD PTR [ebp+0xc]
   1d7ea:	shl    edx,cl
   1d7ec:	dec    edx
   1d7ed:	mov    ecx,edx
   1d7ef:	mov    edx,DWORD PTR [ebp-0x4]
   1d7f2:	and    edx,ecx
   1d7f4:	lea    ecx,[ebx+0x1]
   1d7f7:	mov    DWORD PTR [eax],ecx
   1d7f9:	lea    ecx,[edi+0x1]
   1d7fc:	mov    DWORD PTR [eax+0xc],ecx
   1d7ff:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d802:	sub    ecx,ebx
   1d804:	add    ecx,0x5
   1d807:	mov    DWORD PTR [eax+0x4],ecx
   1d80a:	mov    ecx,DWORD PTR [ebp-0x30]
   1d80d:	sub    ecx,edi
   1d80f:	add    ecx,0x101
   1d815:	mov    DWORD PTR [eax+0x10],ecx
   1d818:	mov    eax,DWORD PTR [ebp+0xc]
   1d81b:	pop    edi
   1d81c:	mov    DWORD PTR [esi+0x38],edx
   1d81f:	mov    DWORD PTR [esi+0x3c],eax
   1d822:	pop    esi
   1d823:	pop    ebx
   1d824:	leave  
   1d825:	ret    0x8
   1d828:	int3   
   1d829:	int3   
   1d82a:	int3   
   1d82b:	int3   
   1d82c:	int3   
   1d82d:	int3   
   1d82e:	mov    edi,edi
   1d830:	push   ebp
   1d831:	mov    ebp,esp
   1d833:	sub    esp,0x90
   1d839:	mov    eax,ds:0x77b1c
   1d83e:	xor    eax,ebp
   1d840:	mov    DWORD PTR [ebp-0x4],eax
   1d843:	mov    eax,DWORD PTR [ebp+0xc]
   1d846:	mov    edx,DWORD PTR [ebp+0x18]
   1d849:	mov    DWORD PTR [ebp-0x7c],eax
   1d84c:	mov    eax,DWORD PTR [ebp+0x1c]
   1d84f:	push   ebx
   1d850:	mov    DWORD PTR [ebp-0x4c],eax
   1d853:	xor    eax,eax
   1d855:	push   esi
   1d856:	mov    esi,DWORD PTR [ebp+0x14]
   1d859:	movzx  ebx,ax
   1d85c:	push   edi
   1d85d:	mov    eax,ebx
   1d85f:	shl    ebx,0x10
   1d862:	push   0x8
   1d864:	or     eax,ebx
   1d866:	pop    ecx
   1d867:	lea    edi,[ebp-0x24]
   1d86a:	rep stos DWORD PTR es:[edi],eax
   1d86c:	xor    edi,edi
   1d86e:	xor    ecx,ecx
   1d870:	mov    DWORD PTR [ebp-0x90],edx
   1d876:	cmp    DWORD PTR [ebp+0x10],edi
   1d879:	jbe    0x1d88f
   1d87b:	mov    eax,DWORD PTR [ebp-0x7c]
   1d87e:	movzx  eax,WORD PTR [eax+ecx*2]
   1d882:	lea    eax,[ebp+eax*2-0x24]
   1d886:	inc    WORD PTR [eax]
   1d889:	inc    ecx
   1d88a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d88d:	jb     0x1d87b
   1d88f:	mov    ecx,DWORD PTR [edx]
   1d891:	push   0xf
   1d893:	pop    eax
   1d894:	mov    DWORD PTR [ebp-0x54],ecx
   1d897:	mov    DWORD PTR [ebp-0x60],eax
   1d89a:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d89f:	jne    0x1d8aa
   1d8a1:	dec    eax
   1d8a2:	mov    DWORD PTR [ebp-0x60],eax
   1d8a5:	cmp    eax,0x1
   1d8a8:	jae    0x1d89a
   1d8aa:	cmp    ecx,eax
   1d8ac:	jbe    0x1d8b1
   1d8ae:	mov    DWORD PTR [ebp-0x54],eax
   1d8b1:	cmp    eax,edi
   1d8b3:	jne    0x1d8df
   1d8b5:	mov    ecx,DWORD PTR [esi]
   1d8b7:	xor    eax,eax
   1d8b9:	mov    BYTE PTR [ebp-0x48],0x40
   1d8bd:	mov    BYTE PTR [ebp-0x47],0x1
   1d8c1:	mov    WORD PTR [ebp-0x46],ax
   1d8c5:	mov    eax,DWORD PTR [ebp-0x48]
   1d8c8:	mov    DWORD PTR [ecx],eax
   1d8ca:	add    DWORD PTR [esi],0x4
   1d8cd:	mov    ecx,DWORD PTR [esi]
   1d8cf:	mov    DWORD PTR [ecx],eax
   1d8d1:	add    DWORD PTR [esi],0x4
   1d8d4:	mov    DWORD PTR [edx],0x1
   1d8da:	jmp    0x1dc1b
   1d8df:	xor    ecx,ecx
   1d8e1:	inc    ecx
   1d8e2:	mov    edx,ecx
   1d8e4:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d8e9:	jne    0x1d8f1
   1d8eb:	inc    edx
   1d8ec:	cmp    edx,0xf
   1d8ef:	jbe    0x1d8e4
   1d8f1:	cmp    DWORD PTR [ebp-0x54],edx
   1d8f4:	jae    0x1d8f9
   1d8f6:	mov    DWORD PTR [ebp-0x54],edx
   1d8f9:	mov    edi,ecx
   1d8fb:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d900:	add    edi,edi
   1d902:	sub    edi,ebx
   1d904:	js     0x1d990
   1d90a:	inc    ecx
   1d90b:	cmp    ecx,0xf
   1d90e:	jbe    0x1d8fb
   1d910:	xor    ebx,ebx
   1d912:	cmp    edi,ebx
   1d914:	jle    0x1d920
   1d916:	cmp    DWORD PTR [ebp+0x8],ebx
   1d919:	je     0x1d990
   1d91b:	cmp    eax,0x1
   1d91e:	jne    0x1d990
   1d920:	xor    eax,eax
   1d922:	push   0x2
   1d924:	mov    WORD PTR [ebp-0x42],ax
   1d928:	pop    ecx
   1d929:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d92e:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d933:	inc    ecx
   1d934:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d939:	inc    ecx
   1d93a:	cmp    ecx,0x1e
   1d93d:	jb     0x1d929
   1d93f:	mov    eax,DWORD PTR [ebp-0x4c]
   1d942:	xor    edi,edi
   1d944:	cmp    DWORD PTR [ebp+0x10],ebx
   1d947:	jbe    0x1d972
   1d949:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d94c:	lea    ecx,[ecx+edi*2]
   1d94f:	cmp    WORD PTR [ecx],bx
   1d952:	je     0x1d96c
   1d954:	movzx  ebx,WORD PTR [ecx]
   1d957:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d95c:	mov    WORD PTR [eax+ebx*2],di
   1d960:	movzx  ecx,WORD PTR [ecx]
   1d963:	lea    ecx,[ebp+ecx*2-0x44]
   1d967:	inc    WORD PTR [ecx]
   1d96a:	xor    ebx,ebx
   1d96c:	inc    edi
   1d96d:	cmp    edi,DWORD PTR [ebp+0x10]
   1d970:	jb     0x1d949
   1d972:	mov    ecx,DWORD PTR [ebp+0x8]
   1d975:	sub    ecx,ebx
   1d977:	je     0x1d9ba
   1d979:	dec    ecx
   1d97a:	je     0x1d998
   1d97c:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d980:	mov    DWORD PTR [ebp-0x6c],0x75668
   1d987:	mov    DWORD PTR [ebp-0x78],0x756a8
   1d98e:	jmp    0x1d9c7
   1d990:	or     eax,0xffffffff
   1d993:	jmp    0x1dc1d
   1d998:	mov    ecx,0x202
   1d99d:	mov    edi,0x755e8
   1d9a2:	sub    edi,ecx
   1d9a4:	mov    DWORD PTR [ebp-0x6c],edi
   1d9a7:	mov    edi,0x75628
   1d9ac:	sub    edi,ecx
   1d9ae:	mov    DWORD PTR [ebp-0x78],edi
   1d9b1:	mov    DWORD PTR [ebp-0x68],0x100
   1d9b8:	jmp    0x1d9c7
   1d9ba:	mov    DWORD PTR [ebp-0x78],eax
   1d9bd:	mov    DWORD PTR [ebp-0x6c],eax
   1d9c0:	mov    DWORD PTR [ebp-0x68],0x13
   1d9c7:	mov    ecx,DWORD PTR [ebp-0x54]
   1d9ca:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d9ce:	mov    edi,DWORD PTR [esi]
   1d9d0:	mov    eax,edx
   1d9d2:	xor    edx,edx
   1d9d4:	inc    edx
   1d9d5:	shl    edx,cl
   1d9d7:	cmp    DWORD PTR [ebp+0x8],0x1
   1d9db:	mov    DWORD PTR [ebp-0x5c],ebx
   1d9de:	mov    DWORD PTR [ebp-0x84],eax
   1d9e4:	lea    ecx,[edx-0x1]
   1d9e7:	mov    DWORD PTR [ebp-0x50],ebx
   1d9ea:	mov    DWORD PTR [ebp-0x80],edx
   1d9ed:	mov    DWORD PTR [ebp-0x64],edx
   1d9f0:	mov    DWORD PTR [ebp-0x88],ecx
   1d9f6:	jne    0x1da08
   1d9f8:	cmp    edx,0x5b0
   1d9fe:	jb     0x1da08
   1da00:	xor    eax,eax
   1da02:	inc    eax
   1da03:	jmp    0x1dc1d
   1da08:	mov    ecx,DWORD PTR [ebp-0x4c]
   1da0b:	mov    DWORD PTR [ebp-0x58],ecx
   1da0e:	mov    cl,al
   1da10:	sub    cl,BYTE PTR [ebp-0x50]
   1da13:	mov    BYTE PTR [ebp-0x47],cl
   1da16:	mov    ecx,DWORD PTR [ebp-0x58]
   1da19:	movzx  edx,WORD PTR [ecx]
   1da1c:	movzx  ecx,dx
   1da1f:	cmp    ecx,DWORD PTR [ebp-0x68]
   1da22:	jge    0x1da2e
   1da24:	mov    BYTE PTR [ebp-0x48],0x0
   1da28:	mov    WORD PTR [ebp-0x46],dx
   1da2c:	jmp    0x1da54
   1da2e:	jle    0x1da4a
   1da30:	mov    ecx,DWORD PTR [ebp-0x58]
   1da33:	movzx  ecx,WORD PTR [ecx]
   1da36:	mov    edx,DWORD PTR [ebp-0x78]
   1da39:	add    ecx,ecx
   1da3b:	mov    dl,BYTE PTR [ecx+edx*1]
   1da3e:	mov    BYTE PTR [ebp-0x48],dl
   1da41:	mov    edx,DWORD PTR [ebp-0x6c]
   1da44:	mov    cx,WORD PTR [ecx+edx*1]
   1da48:	jmp    0x1da50
   1da4a:	mov    BYTE PTR [ebp-0x48],0x60
   1da4e:	xor    ecx,ecx
   1da50:	mov    WORD PTR [ebp-0x46],cx
   1da54:	xor    edx,edx
   1da56:	mov    ecx,eax
   1da58:	sub    ecx,DWORD PTR [ebp-0x50]
   1da5b:	inc    edx
   1da5c:	shl    edx,cl
   1da5e:	mov    ecx,DWORD PTR [ebp-0x80]
   1da61:	mov    DWORD PTR [ebp-0x4c],ecx
   1da64:	mov    DWORD PTR [ebp-0x70],ecx
   1da67:	mov    ecx,DWORD PTR [ebp-0x50]
   1da6a:	shr    ebx,cl
   1da6c:	add    ebx,DWORD PTR [ebp-0x4c]
   1da6f:	lea    ecx,[edi+ebx*4]
   1da72:	sub    DWORD PTR [ebp-0x4c],edx
   1da75:	mov    ebx,edx
   1da77:	shl    ebx,0x2
   1da7a:	sub    ecx,ebx
   1da7c:	cmp    DWORD PTR [ebp-0x4c],0x0
   1da80:	mov    ebx,DWORD PTR [ebp-0x48]
   1da83:	mov    DWORD PTR [ecx],ebx
   1da85:	jne    0x1da72
   1da87:	xor    edx,edx
   1da89:	lea    ecx,[eax-0x1]
   1da8c:	inc    edx
   1da8d:	shl    edx,cl
   1da8f:	mov    ecx,DWORD PTR [ebp-0x5c]
   1da92:	jmp    0x1da96
   1da94:	shr    edx,1
   1da96:	test   ecx,edx
   1da98:	jne    0x1da94
   1da9a:	test   edx,edx
   1da9c:	je     0x1daa7
   1da9e:	lea    ebx,[edx-0x1]
   1daa1:	and    ebx,ecx
   1daa3:	add    ebx,edx
   1daa5:	jmp    0x1daa9
   1daa7:	xor    ebx,ebx
   1daa9:	add    DWORD PTR [ebp-0x58],0x2
   1daad:	lea    ecx,[ebp+eax*2-0x24]
   1dab1:	mov    edx,0xffff
   1dab6:	add    WORD PTR [ecx],dx
   1dab9:	movzx  ecx,WORD PTR [ecx]
   1dabc:	mov    DWORD PTR [ebp-0x5c],ebx
   1dabf:	test   cx,cx
   1dac2:	jne    0x1dae0
   1dac4:	cmp    eax,DWORD PTR [ebp-0x60]
   1dac7:	je     0x1dba3
   1dacd:	mov    eax,DWORD PTR [ebp-0x58]
   1dad0:	movzx  eax,WORD PTR [eax]
   1dad3:	mov    ecx,DWORD PTR [ebp-0x7c]
   1dad6:	movzx  eax,WORD PTR [ecx+eax*2]
   1dada:	mov    DWORD PTR [ebp-0x84],eax
   1dae0:	mov    edx,DWORD PTR [ebp-0x54]
   1dae3:	cmp    eax,edx
   1dae5:	jbe    0x1da0e
   1daeb:	mov    ecx,DWORD PTR [ebp-0x88]
   1daf1:	and    ecx,ebx
   1daf3:	mov    DWORD PTR [ebp-0x8c],ecx
   1daf9:	cmp    ecx,DWORD PTR [ebp-0x74]
   1dafc:	je     0x1da0e
   1db02:	cmp    DWORD PTR [ebp-0x50],0x0
   1db06:	jne    0x1db0b
   1db08:	mov    DWORD PTR [ebp-0x50],edx
   1db0b:	mov    ecx,DWORD PTR [ebp-0x70]
   1db0e:	lea    edi,[edi+ecx*4]
   1db11:	mov    ecx,eax
   1db13:	mov    eax,DWORD PTR [ebp-0x50]
   1db16:	xor    edx,edx
   1db18:	sub    ecx,eax
   1db1a:	inc    edx
   1db1b:	add    eax,ecx
   1db1d:	shl    edx,cl
   1db1f:	cmp    eax,DWORD PTR [ebp-0x60]
   1db22:	jae    0x1db4c
   1db24:	mov    DWORD PTR [ebp-0x4c],eax
   1db27:	lea    eax,[ebp+eax*2-0x24]
   1db2b:	jmp    0x1db30
   1db2d:	mov    eax,DWORD PTR [ebp-0x70]
   1db30:	movzx  ebx,WORD PTR [eax]
   1db33:	sub    edx,ebx
   1db35:	test   edx,edx
   1db37:	jle    0x1db4c
   1db39:	inc    ecx
   1db3a:	inc    DWORD PTR [ebp-0x4c]
   1db3d:	inc    eax
   1db3e:	inc    eax
   1db3f:	mov    DWORD PTR [ebp-0x70],eax
   1db42:	mov    eax,DWORD PTR [ebp-0x4c]
   1db45:	add    edx,edx
   1db47:	cmp    eax,DWORD PTR [ebp-0x60]
   1db4a:	jb     0x1db2d
   1db4c:	xor    eax,eax
   1db4e:	inc    eax
   1db4f:	mov    edx,eax
   1db51:	shl    edx,cl
   1db53:	add    DWORD PTR [ebp-0x64],edx
   1db56:	mov    DWORD PTR [ebp-0x80],edx
   1db59:	cmp    DWORD PTR [ebp+0x8],eax
   1db5c:	jne    0x1db6b
   1db5e:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1db65:	jae    0x1dc1d
   1db6b:	mov    eax,DWORD PTR [ebp-0x8c]
   1db71:	mov    ebx,DWORD PTR [ebp-0x5c]
   1db74:	mov    edx,eax
   1db76:	mov    DWORD PTR [ebp-0x74],eax
   1db79:	mov    eax,DWORD PTR [esi]
   1db7b:	shl    edx,0x2
   1db7e:	mov    BYTE PTR [edx+eax*1],cl
   1db81:	mov    eax,DWORD PTR [esi]
   1db83:	mov    cl,BYTE PTR [ebp-0x54]
   1db86:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1db8a:	mov    eax,DWORD PTR [esi]
   1db8c:	mov    ecx,edi
   1db8e:	sub    ecx,eax
   1db90:	sar    ecx,0x2
   1db93:	mov    WORD PTR [edx+eax*1+0x2],cx
   1db98:	mov    eax,DWORD PTR [ebp-0x84]
   1db9e:	jmp    0x1da0e
   1dba3:	mov    cl,al
   1dba5:	sub    cl,BYTE PTR [ebp-0x50]
   1dba8:	mov    BYTE PTR [ebp-0x48],0x40
   1dbac:	mov    BYTE PTR [ebp-0x47],cl
   1dbaf:	xor    ecx,ecx
   1dbb1:	mov    WORD PTR [ebp-0x46],cx
   1dbb5:	jmp    0x1dc04
   1dbb7:	cmp    DWORD PTR [ebp-0x50],0x0
   1dbbb:	je     0x1dbd6
   1dbbd:	mov    ecx,DWORD PTR [ebp-0x88]
   1dbc3:	and    ecx,ebx
   1dbc5:	cmp    ecx,DWORD PTR [ebp-0x74]
   1dbc8:	je     0x1dbd6
   1dbca:	mov    eax,DWORD PTR [ebp-0x54]
   1dbcd:	and    DWORD PTR [ebp-0x50],0x0
   1dbd1:	mov    edi,DWORD PTR [esi]
   1dbd3:	mov    BYTE PTR [ebp-0x47],al
   1dbd6:	mov    ecx,DWORD PTR [ebp-0x50]
   1dbd9:	mov    edx,ebx
   1dbdb:	shr    edx,cl
   1dbdd:	mov    ecx,DWORD PTR [ebp-0x48]
   1dbe0:	mov    DWORD PTR [edi+edx*4],ecx
   1dbe3:	xor    edx,edx
   1dbe5:	lea    ecx,[eax-0x1]
   1dbe8:	inc    edx
   1dbe9:	shl    edx,cl
   1dbeb:	jmp    0x1dbef
   1dbed:	shr    edx,1
   1dbef:	test   ebx,edx
   1dbf1:	jne    0x1dbed
   1dbf3:	test   edx,edx
   1dbf5:	je     0x1dc02
   1dbf7:	lea    ecx,[edx-0x1]
   1dbfa:	and    ecx,ebx
   1dbfc:	add    ecx,edx
   1dbfe:	mov    ebx,ecx
   1dc00:	jmp    0x1dc04
   1dc02:	xor    ebx,ebx
   1dc04:	test   ebx,ebx
   1dc06:	jne    0x1dbb7
   1dc08:	mov    eax,DWORD PTR [ebp-0x64]
   1dc0b:	mov    ecx,DWORD PTR [ebp-0x54]
   1dc0e:	shl    eax,0x2
   1dc11:	add    DWORD PTR [esi],eax
   1dc13:	mov    eax,DWORD PTR [ebp-0x90]
   1dc19:	mov    DWORD PTR [eax],ecx
   1dc1b:	xor    eax,eax
   1dc1d:	mov    ecx,DWORD PTR [ebp-0x4]
   1dc20:	pop    edi
   1dc21:	pop    esi
   1dc22:	xor    ecx,ebp
   1dc24:	pop    ebx
   1dc25:	call   0x1e145
   1dc2a:	leave  
   1dc2b:	ret    0x18
   1dc2e:	int3   
   1dc2f:	int3   
   1dc30:	int3   
   1dc31:	int3   
   1dc32:	int3   
   1dc33:	int3   
   1dc34:	mov    edi,edi
   1dc36:	push   ebp
   1dc37:	mov    ebp,esp
   1dc39:	push   ebx
   1dc3a:	mov    ebx,DWORD PTR [ebp+0x10]
   1dc3d:	push   esi
   1dc3e:	mov    esi,DWORD PTR [ebp+0x8]
   1dc41:	push   edi
   1dc42:	xor    eax,eax
   1dc44:	mov    edi,esi
   1dc46:	inc    eax
   1dc47:	shr    edi,0x10
   1dc4a:	and    esi,0xffff
   1dc50:	cmp    ebx,eax
   1dc52:	jne    0x1dc78
   1dc54:	mov    eax,DWORD PTR [ebp+0xc]
   1dc57:	movzx  eax,BYTE PTR [eax]
   1dc5a:	add    esi,eax
   1dc5c:	mov    eax,0xfff1
   1dc61:	cmp    esi,eax
   1dc63:	jb     0x1dc67
   1dc65:	sub    esi,eax
   1dc67:	add    edi,esi
   1dc69:	cmp    edi,eax
   1dc6b:	jb     0x1de4a
   1dc71:	sub    edi,eax
   1dc73:	jmp    0x1de4a
   1dc78:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc7b:	test   ecx,ecx
   1dc7d:	je     0x1de51
   1dc83:	cmp    ebx,0x10
   1dc86:	jb     0x1de0d
   1dc8c:	cmp    ebx,0x15b0
   1dc92:	jb     0x1dd60
   1dc98:	mov    eax,ebx
   1dc9a:	mov    ebx,0x15b0
   1dc9f:	xor    edx,edx
   1dca1:	div    ebx
   1dca3:	mov    ebx,DWORD PTR [ebp+0x10]
   1dca6:	mov    DWORD PTR [ebp+0xc],eax
   1dca9:	sub    ebx,0x15b0
   1dcaf:	mov    eax,0x15b
   1dcb4:	movzx  edx,BYTE PTR [ecx]
   1dcb7:	add    esi,edx
   1dcb9:	movzx  edx,BYTE PTR [ecx+0x1]
   1dcbd:	add    edi,esi
   1dcbf:	add    esi,edx
   1dcc1:	movzx  edx,BYTE PTR [ecx+0x2]
   1dcc5:	add    edi,esi
   1dcc7:	add    esi,edx
   1dcc9:	movzx  edx,BYTE PTR [ecx+0x3]
   1dccd:	add    edi,esi
   1dccf:	add    esi,edx
   1dcd1:	movzx  edx,BYTE PTR [ecx+0x4]
   1dcd5:	add    edi,esi
   1dcd7:	add    esi,edx
   1dcd9:	movzx  edx,BYTE PTR [ecx+0x5]
   1dcdd:	add    edi,esi
   1dcdf:	add    esi,edx
   1dce1:	movzx  edx,BYTE PTR [ecx+0x6]
   1dce5:	add    edi,esi
   1dce7:	add    esi,edx
   1dce9:	movzx  edx,BYTE PTR [ecx+0x7]
   1dced:	add    edi,esi
   1dcef:	add    esi,edx
   1dcf1:	movzx  edx,BYTE PTR [ecx+0x8]
   1dcf5:	add    edi,esi
   1dcf7:	add    esi,edx
   1dcf9:	movzx  edx,BYTE PTR [ecx+0x9]
   1dcfd:	add    edi,esi
   1dcff:	add    esi,edx
   1dd01:	movzx  edx,BYTE PTR [ecx+0xa]
   1dd05:	add    edi,esi
   1dd07:	add    esi,edx
   1dd09:	movzx  edx,BYTE PTR [ecx+0xb]
   1dd0d:	add    edi,esi
   1dd0f:	add    esi,edx
   1dd11:	movzx  edx,BYTE PTR [ecx+0xc]
   1dd15:	add    edi,esi
   1dd17:	add    esi,edx
   1dd19:	movzx  edx,BYTE PTR [ecx+0xd]
   1dd1d:	add    edi,esi
   1dd1f:	add    esi,edx
   1dd21:	movzx  edx,BYTE PTR [ecx+0xe]
   1dd25:	add    edi,esi
   1dd27:	add    esi,edx
   1dd29:	movzx  edx,BYTE PTR [ecx+0xf]
   1dd2d:	add    edi,esi
   1dd2f:	add    esi,edx
   1dd31:	add    edi,esi
   1dd33:	add    ecx,0x10
   1dd36:	dec    eax
   1dd37:	jne    0x1dcb4
   1dd3d:	mov    eax,esi
   1dd3f:	xor    edx,edx
   1dd41:	mov    esi,0xfff1
   1dd46:	div    esi
   1dd48:	mov    eax,edi
   1dd4a:	mov    edi,0xfff1
   1dd4f:	mov    esi,edx
   1dd51:	xor    edx,edx
   1dd53:	div    edi
   1dd55:	dec    DWORD PTR [ebp+0xc]
   1dd58:	mov    edi,edx
   1dd5a:	jne    0x1dca9
   1dd60:	test   ebx,ebx
   1dd62:	je     0x1de4a
   1dd68:	cmp    ebx,0x10
   1dd6b:	jb     0x1de2f
   1dd71:	mov    eax,ebx
   1dd73:	shr    eax,0x4
   1dd76:	movzx  edx,BYTE PTR [ecx]
   1dd79:	add    esi,edx
   1dd7b:	movzx  edx,BYTE PTR [ecx+0x1]
   1dd7f:	add    edi,esi
   1dd81:	add    esi,edx
   1dd83:	movzx  edx,BYTE PTR [ecx+0x2]
   1dd87:	add    edi,esi
   1dd89:	add    esi,edx
   1dd8b:	movzx  edx,BYTE PTR [ecx+0x3]
   1dd8f:	add    edi,esi
   1dd91:	add    esi,edx
   1dd93:	movzx  edx,BYTE PTR [ecx+0x4]
   1dd97:	add    edi,esi
   1dd99:	add    esi,edx
   1dd9b:	movzx  edx,BYTE PTR [ecx+0x5]
   1dd9f:	add    edi,esi
   1dda1:	add    esi,edx
   1dda3:	movzx  edx,BYTE PTR [ecx+0x6]
   1dda7:	add    edi,esi
   1dda9:	add    esi,edx
   1ddab:	movzx  edx,BYTE PTR [ecx+0x7]
   1ddaf:	add    edi,esi
   1ddb1:	add    esi,edx
   1ddb3:	movzx  edx,BYTE PTR [ecx+0x8]
   1ddb7:	add    edi,esi
   1ddb9:	add    esi,edx
   1ddbb:	movzx  edx,BYTE PTR [ecx+0x9]
   1ddbf:	add    edi,esi
   1ddc1:	add    esi,edx
   1ddc3:	movzx  edx,BYTE PTR [ecx+0xa]
   1ddc7:	add    edi,esi
   1ddc9:	add    esi,edx
   1ddcb:	movzx  edx,BYTE PTR [ecx+0xb]
   1ddcf:	add    edi,esi
   1ddd1:	add    esi,edx
   1ddd3:	movzx  edx,BYTE PTR [ecx+0xc]
   1ddd7:	add    edi,esi
   1ddd9:	add    esi,edx
   1dddb:	movzx  edx,BYTE PTR [ecx+0xd]
   1dddf:	add    edi,esi
   1dde1:	add    esi,edx
   1dde3:	movzx  edx,BYTE PTR [ecx+0xe]
   1dde7:	add    edi,esi
   1dde9:	add    esi,edx
   1ddeb:	movzx  edx,BYTE PTR [ecx+0xf]
   1ddef:	add    edi,esi
   1ddf1:	add    esi,edx
   1ddf3:	sub    ebx,0x10
   1ddf6:	add    edi,esi
   1ddf8:	add    ecx,0x10
   1ddfb:	dec    eax
   1ddfc:	jne    0x1dd76
   1de02:	jmp    0x1de2f
   1de04:	movzx  eax,BYTE PTR [ecx]
   1de07:	dec    ebx
   1de08:	add    esi,eax
   1de0a:	inc    ecx
   1de0b:	add    edi,esi
   1de0d:	test   ebx,ebx
   1de0f:	jne    0x1de04
   1de11:	mov    ecx,0xfff1
   1de16:	cmp    esi,ecx
   1de18:	jb     0x1de1c
   1de1a:	sub    esi,ecx
   1de1c:	mov    eax,edi
   1de1e:	xor    edx,edx
   1de20:	div    ecx
   1de22:	mov    eax,edx
   1de24:	jmp    0x1de4c
   1de26:	movzx  eax,BYTE PTR [ecx]
   1de29:	dec    ebx
   1de2a:	add    esi,eax
   1de2c:	inc    ecx
   1de2d:	add    edi,esi
   1de2f:	test   ebx,ebx
   1de31:	jne    0x1de26
   1de33:	mov    eax,esi
   1de35:	mov    ecx,0xfff1
   1de3a:	xor    edx,edx
   1de3c:	mov    esi,ecx
   1de3e:	div    esi
   1de40:	mov    eax,edi
   1de42:	mov    esi,edx
   1de44:	xor    edx,edx
   1de46:	div    ecx
   1de48:	mov    edi,edx
   1de4a:	mov    eax,edi
   1de4c:	shl    eax,0x10
   1de4f:	or     eax,esi
   1de51:	pop    edi
   1de52:	pop    esi
   1de53:	pop    ebx
   1de54:	pop    ebp
   1de55:	ret    0xc
   1de58:	int3   
   1de59:	int3   
   1de5a:	int3   
   1de5b:	int3   
   1de5c:	int3   
   1de5d:	int3   
   1de5e:	mov    edi,edi
   1de60:	push   ebp
   1de61:	mov    ebp,esp
   1de63:	push   ecx
   1de64:	cmp    DWORD PTR [ebp+0x8],0x0
   1de68:	push   esi
   1de69:	not    eax
   1de6b:	mov    ecx,0xff
   1de70:	je     0x1de8e
   1de72:	test   dl,0x3
   1de75:	je     0x1de8e
   1de77:	movzx  esi,BYTE PTR [edx]
   1de7a:	xor    esi,eax
   1de7c:	and    esi,ecx
   1de7e:	shr    eax,0x8
   1de81:	xor    eax,DWORD PTR [esi*4+0x756e8]
   1de88:	inc    edx
   1de89:	dec    DWORD PTR [ebp+0x8]
   1de8c:	jne    0x1de72
   1de8e:	cmp    DWORD PTR [ebp+0x8],0x20
   1de92:	push   ebx
   1de93:	push   edi
   1de94:	push   0x4
   1de96:	mov    esi,edx
   1de98:	pop    edi
   1de99:	jb     0x1e05d
   1de9f:	mov    edx,DWORD PTR [ebp+0x8]
   1dea2:	shr    edx,0x5
   1dea5:	mov    DWORD PTR [ebp-0x4],edx
   1dea8:	xor    eax,DWORD PTR [esi]
   1deaa:	add    esi,edi
   1deac:	mov    edx,eax
   1deae:	shr    edx,0x10
   1deb1:	mov    ebx,eax
   1deb3:	shr    ebx,0x8
   1deb6:	and    edx,ecx
   1deb8:	mov    edx,DWORD PTR [edx*4+0x75ae8]
   1debf:	and    ebx,ecx
   1dec1:	xor    edx,DWORD PTR [ebx*4+0x75ee8]
   1dec8:	mov    ebx,eax
   1deca:	shr    ebx,0x18
   1decd:	xor    edx,DWORD PTR [ebx*4+0x756e8]
   1ded4:	and    eax,ecx
   1ded6:	xor    edx,DWORD PTR [eax*4+0x762e8]
   1dedd:	xor    edx,DWORD PTR [esi]
   1dedf:	add    esi,edi
   1dee1:	mov    eax,edx
   1dee3:	shr    eax,0x10
   1dee6:	mov    ebx,edx
   1dee8:	shr    ebx,0x8
   1deeb:	and    eax,ecx
   1deed:	mov    eax,DWORD PTR [eax*4+0x75ae8]
   1def4:	and    ebx,ecx
   1def6:	xor    eax,DWORD PTR [ebx*4+0x75ee8]
   1defd:	mov    ebx,edx
   1deff:	shr    ebx,0x18
   1df02:	xor    eax,DWORD PTR [ebx*4+0x756e8]
   1df09:	and    edx,ecx
   1df0b:	xor    eax,DWORD PTR [edx*4+0x762e8]
   1df12:	xor    eax,DWORD PTR [esi]
   1df14:	add    esi,edi
   1df16:	mov    edx,eax
   1df18:	shr    edx,0x10
   1df1b:	mov    ebx,eax
   1df1d:	and    edx,ecx
   1df1f:	mov    edx,DWORD PTR [edx*4+0x75ae8]
   1df26:	shr    ebx,0x8
   1df29:	and    ebx,ecx
   1df2b:	xor    edx,DWORD PTR [ebx*4+0x75ee8]
   1df32:	mov    ebx,eax
   1df34:	shr    ebx,0x18
   1df37:	xor    edx,DWORD PTR [ebx*4+0x756e8]
   1df3e:	and    eax,ecx
   1df40:	xor    edx,DWORD PTR [eax*4+0x762e8]
   1df47:	xor    edx,DWORD PTR [esi]
   1df49:	add    esi,edi
   1df4b:	mov    eax,edx
   1df4d:	shr    eax,0x10
   1df50:	mov    ebx,edx
   1df52:	shr    ebx,0x8
   1df55:	and    eax,ecx
   1df57:	mov    eax,DWORD PTR [eax*4+0x75ae8]
   1df5e:	and    ebx,ecx
   1df60:	xor    eax,DWORD PTR [ebx*4+0x75ee8]
   1df67:	mov    ebx,edx
   1df69:	shr    ebx,0x18
   1df6c:	xor    eax,DWORD PTR [ebx*4+0x756e8]
   1df73:	and    edx,ecx
   1df75:	xor    eax,DWORD PTR [edx*4+0x762e8]
   1df7c:	xor    eax,DWORD PTR [esi]
   1df7e:	add    esi,edi
   1df80:	mov    edx,eax
   1df82:	shr    edx,0x10
   1df85:	mov    ebx,eax
   1df87:	and    edx,ecx
   1df89:	mov    edx,DWORD PTR [edx*4+0x75ae8]
   1df90:	shr    ebx,0x8
   1df93:	and    ebx,ecx
   1df95:	xor    edx,DWORD PTR [ebx*4+0x75ee8]
   1df9c:	mov    ebx,eax
   1df9e:	shr    ebx,0x18
   1dfa1:	xor    edx,DWORD PTR [ebx*4+0x756e8]
   1dfa8:	and    eax,ecx
   1dfaa:	xor    edx,DWORD PTR [eax*4+0x762e8]
   1dfb1:	xor    edx,DWORD PTR [esi]
   1dfb3:	add    esi,edi
   1dfb5:	mov    eax,edx
   1dfb7:	shr    eax,0x10
   1dfba:	and    eax,ecx
   1dfbc:	mov    ebx,edx
   1dfbe:	mov    eax,DWORD PTR [eax*4+0x75ae8]
   1dfc5:	shr    ebx,0x8
   1dfc8:	and    ebx,ecx
   1dfca:	xor    eax,DWORD PTR [ebx*4+0x75ee8]
   1dfd1:	mov    ebx,edx
   1dfd3:	shr    ebx,0x18
   1dfd6:	xor    eax,DWORD PTR [ebx*4+0x756e8]
   1dfdd:	and    edx,ecx
   1dfdf:	xor    eax,DWORD PTR [edx*4+0x762e8]
   1dfe6:	sub    DWORD PTR [ebp+0x8],0x20
   1dfea:	xor    eax,DWORD PTR [esi]
   1dfec:	add    esi,edi
   1dfee:	mov    edx,eax
   1dff0:	mov    ebx,eax
   1dff2:	shr    edx,0x10
   1dff5:	shr    ebx,0x8
   1dff8:	and    edx,ecx
   1dffa:	mov    edx,DWORD PTR [edx*4+0x75ae8]
   1e001:	and    ebx,ecx
   1e003:	xor    edx,DWORD PTR [ebx*4+0x75ee8]
   1e00a:	mov    ebx,eax
   1e00c:	shr    ebx,0x18
   1e00f:	xor    edx,DWORD PTR [ebx*4+0x756e8]
   1e016:	and    eax,ecx
   1e018:	xor    edx,DWORD PTR [eax*4+0x762e8]
   1e01f:	xor    edx,DWORD PTR [esi]
   1e021:	add    esi,edi
   1e023:	mov    eax,edx
   1e025:	shr    eax,0x10
   1e028:	and    eax,ecx
   1e02a:	mov    eax,DWORD PTR [eax*4+0x75ae8]
   1e031:	mov    ebx,edx
   1e033:	shr    ebx,0x8
   1e036:	and    ebx,ecx
   1e038:	xor    eax,DWORD PTR [ebx*4+0x75ee8]
   1e03f:	mov    ebx,edx
   1e041:	shr    ebx,0x18
   1e044:	xor    eax,DWORD PTR [ebx*4+0x756e8]
   1e04b:	and    edx,ecx
   1e04d:	xor    eax,DWORD PTR [edx*4+0x762e8]
   1e054:	dec    DWORD PTR [ebp-0x4]
   1e057:	jne    0x1dea8
   1e05d:	cmp    DWORD PTR [ebp+0x8],edi
   1e060:	jb     0x1e0aa
   1e062:	mov    edx,DWORD PTR [ebp+0x8]
   1e065:	shr    edx,0x2
   1e068:	mov    DWORD PTR [ebp-0x4],edx
   1e06b:	xor    eax,DWORD PTR [esi]
   1e06d:	sub    DWORD PTR [ebp+0x8],edi
   1e070:	mov    edx,eax
   1e072:	shr    edx,0x10
   1e075:	and    edx,ecx
   1e077:	mov    edx,DWORD PTR [edx*4+0x75ae8]
   1e07e:	mov    ebx,eax
   1e080:	shr    ebx,0x8
   1e083:	and    ebx,ecx
   1e085:	xor    edx,DWORD PTR [ebx*4+0x75ee8]
   1e08c:	mov    ebx,eax
   1e08e:	shr    ebx,0x18
   1e091:	xor    edx,DWORD PTR [ebx*4+0x756e8]
   1e098:	and    eax,ecx
   1e09a:	xor    edx,DWORD PTR [eax*4+0x762e8]
   1e0a1:	add    esi,edi
   1e0a3:	dec    DWORD PTR [ebp-0x4]
   1e0a6:	mov    eax,edx
   1e0a8:	jne    0x1e06b
   1e0aa:	cmp    DWORD PTR [ebp+0x8],0x0
   1e0ae:	pop    edi
   1e0af:	pop    ebx
   1e0b0:	je     0x1e0c9
   1e0b2:	movzx  edx,BYTE PTR [esi]
   1e0b5:	xor    edx,eax
   1e0b7:	and    edx,ecx
   1e0b9:	shr    eax,0x8
   1e0bc:	xor    eax,DWORD PTR [edx*4+0x756e8]
   1e0c3:	inc    esi
   1e0c4:	dec    DWORD PTR [ebp+0x8]
   1e0c7:	jne    0x1e0b2
   1e0c9:	not    eax
   1e0cb:	pop    esi
   1e0cc:	leave  
   1e0cd:	ret    0x4
   1e0d0:	int3   
   1e0d1:	int3   
   1e0d2:	int3   
   1e0d3:	int3   
   1e0d4:	int3   
   1e0d5:	int3   
   1e0d6:	mov    edi,edi
   1e0d8:	push   ebp
   1e0d9:	mov    ebp,esp
   1e0db:	mov    edx,DWORD PTR [ebp+0xc]
   1e0de:	test   edx,edx
   1e0e0:	jne    0x1e0e6
   1e0e2:	xor    eax,eax
   1e0e4:	jmp    0x1e0f1
   1e0e6:	push   DWORD PTR [ebp+0x10]
   1e0e9:	mov    eax,DWORD PTR [ebp+0x8]
   1e0ec:	call   0x1de5e
   1e0f1:	pop    ebp
   1e0f2:	ret    0xc
   1e0f5:	int3   
   1e0f6:	int3   
   1e0f7:	int3   
   1e0f8:	int3   
   1e0f9:	int3   
   1e0fa:	mov    edi,edi
   1e0fc:	push   ebp
   1e0fd:	mov    ebp,esp
   1e0ff:	push   0x20
   1e101:	push   0x61737973
   1e106:	push   DWORD PTR [ebp+0x8]
   1e109:	push   0x1
   1e10b:	call   DWORD PTR ds:0x1f840
   1e111:	test   eax,eax
   1e113:	jne    0x1e120
   1e115:	push   0xc000009a
   1e11a:	call   DWORD PTR ds:0x1f820
   1e120:	pop    ebp
   1e121:	ret    
   1e122:	int3   
   1e123:	int3   
   1e124:	int3   
   1e125:	int3   
   1e126:	int3   
   1e127:	int3   
   1e128:	mov    edi,edi
   1e12a:	push   ebp
   1e12b:	mov    ebp,esp
   1e12d:	cmp    DWORD PTR [ebp+0x8],0x0
   1e131:	je     0x1e13e
   1e133:	push   0x0
   1e135:	push   DWORD PTR [ebp+0x8]
   1e138:	call   DWORD PTR ds:0x1f844
   1e13e:	pop    ebp
   1e13f:	ret    
   1e140:	int3   
   1e141:	int3   
   1e142:	int3   
   1e143:	int3   
   1e144:	int3   
   1e145:	cmp    ecx,DWORD PTR ds:0x77b1c
   1e14b:	jne    0x1e150
   1e14d:	ret    0x0
   1e150:	jmp    0x1e15a
   1e155:	int3   
   1e156:	int3   
   1e157:	int3   
   1e158:	int3   
   1e159:	int3   
   1e15a:	mov    edi,edi
   1e15c:	push   ebp
   1e15d:	mov    ebp,esp
   1e15f:	push   ecx
   1e160:	mov    DWORD PTR [ebp-0x4],ecx
   1e163:	push   0x0
   1e165:	push   DWORD PTR ds:0x77b20
   1e16b:	push   DWORD PTR ds:0x77b1c
   1e171:	push   DWORD PTR [ebp-0x4]
   1e174:	push   0xf7
   1e179:	call   DWORD PTR ds:0x1f84c
   1e17f:	int3   
   1e180:	int3   
   1e181:	int3   
   1e182:	int3   
   1e183:	int3   
   1e184:	int3   
   1e185:	int3   
   1e186:	jmp    DWORD PTR ds:0x1f808
   1e18c:	int3   
   1e18d:	int3   
   1e18e:	int3   
   1e18f:	int3   
   1e190:	int3   
   1e191:	int3   
   1e192:	jmp    DWORD PTR ds:0x1f80c
   1e198:	int3   
   1e199:	int3   
   1e19a:	int3   
   1e19b:	int3   
   1e19c:	int3   
   1e19d:	int3   
   1e19e:	jmp    DWORD PTR ds:0x1f810
   1e1a4:	int3   
   1e1a5:	int3   
   1e1a6:	int3   
   1e1a7:	int3   
   1e1a8:	int3   
   1e1a9:	int3   
   1e1aa:	jmp    DWORD PTR ds:0x1f818
   1e1b0:	int3   
   1e1b1:	int3   
   1e1b2:	int3   
   1e1b3:	int3   
   1e1b4:	int3   
   1e1b5:	int3   
   1e1b6:	jmp    DWORD PTR ds:0x1f81c
   1e1bc:	int3   
   1e1bd:	int3   
   1e1be:	int3   
   1e1bf:	int3   
   1e1c0:	int3   
   1e1c1:	int3   
   1e1c2:	jmp    DWORD PTR ds:0x1f828
   1e1c8:	int3   
   1e1c9:	int3   
   1e1ca:	int3   
   1e1cb:	int3   
   1e1cc:	int3   
   1e1cd:	int3   
   1e1ce:	jmp    DWORD PTR ds:0x1f82c
   1e1d4:	int3   
   1e1d5:	int3   
   1e1d6:	int3   
   1e1d7:	int3   
   1e1d8:	int3   
   1e1d9:	int3   
   1e1da:	int3   
   1e1db:	int3   
   1e1dc:	push   0x1e240
   1e1e1:	push   DWORD PTR fs:0x0
   1e1e8:	mov    eax,DWORD PTR [esp+0x10]
   1e1ec:	mov    DWORD PTR [esp+0x10],ebp
   1e1f0:	lea    ebp,[esp+0x10]
   1e1f4:	sub    esp,eax
   1e1f6:	push   ebx
   1e1f7:	push   esi
   1e1f8:	push   edi
   1e1f9:	mov    eax,ds:0x77b1c
   1e1fe:	xor    DWORD PTR [ebp-0x4],eax
   1e201:	xor    eax,ebp
   1e203:	push   eax
   1e204:	mov    DWORD PTR [ebp-0x18],esp
   1e207:	push   DWORD PTR [ebp-0x8]
   1e20a:	mov    eax,DWORD PTR [ebp-0x4]
   1e20d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e214:	mov    DWORD PTR [ebp-0x8],eax
   1e217:	lea    eax,[ebp-0x10]
   1e21a:	mov    fs:0x0,eax
   1e220:	ret    
   1e221:	mov    ecx,DWORD PTR [ebp-0x10]
   1e224:	mov    DWORD PTR fs:0x0,ecx
   1e22b:	pop    ecx
   1e22c:	pop    edi
   1e22d:	pop    edi
   1e22e:	pop    esi
   1e22f:	pop    ebx
   1e230:	mov    esp,ebp
   1e232:	pop    ebp
   1e233:	push   ecx
   1e234:	ret    
   1e235:	int3   
   1e236:	int3   
   1e237:	int3   
   1e238:	int3   
   1e239:	int3   
   1e23a:	int3   
   1e23b:	int3   
   1e23c:	int3   
   1e23d:	int3   
   1e23e:	int3   
   1e23f:	int3   
   1e240:	mov    edi,edi
   1e242:	push   ebp
   1e243:	mov    ebp,esp
   1e245:	sub    esp,0x14
   1e248:	push   ebx
   1e249:	mov    ebx,DWORD PTR [ebp+0xc]
   1e24c:	push   esi
   1e24d:	mov    esi,DWORD PTR [ebx+0x8]
   1e250:	xor    esi,DWORD PTR ds:0x77b1c
   1e256:	push   edi
   1e257:	mov    eax,DWORD PTR [esi]
   1e259:	mov    BYTE PTR [ebp-0x1],0x0
   1e25d:	mov    DWORD PTR [ebp-0x8],0x1
   1e264:	lea    edi,[ebx+0x10]
   1e267:	cmp    eax,0xfffffffe
   1e26a:	je     0x1e279
   1e26c:	mov    ecx,DWORD PTR [esi+0x4]
   1e26f:	add    ecx,edi
   1e271:	xor    ecx,DWORD PTR [eax+edi*1]
   1e274:	call   0x1e145
   1e279:	mov    ecx,DWORD PTR [esi+0xc]
   1e27c:	mov    eax,DWORD PTR [esi+0x8]
   1e27f:	add    ecx,edi
   1e281:	xor    ecx,DWORD PTR [eax+edi*1]
   1e284:	call   0x1e145
   1e289:	mov    eax,DWORD PTR [ebp+0x8]
   1e28c:	test   BYTE PTR [eax+0x4],0x66
   1e290:	jne    0x1e378
   1e296:	mov    ecx,DWORD PTR [ebp+0x10]
   1e299:	lea    edx,[ebp-0x14]
   1e29c:	mov    DWORD PTR [ebx-0x4],edx
   1e29f:	mov    ebx,DWORD PTR [ebx+0xc]
   1e2a2:	mov    DWORD PTR [ebp-0x14],eax
   1e2a5:	mov    DWORD PTR [ebp-0x10],ecx
   1e2a8:	cmp    ebx,0xfffffffe
   1e2ab:	je     0x1e30c
   1e2ad:	lea    ecx,[ecx+0x0]
   1e2b0:	lea    eax,[ebx+ebx*2]
   1e2b3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1e2b7:	lea    eax,[esi+eax*4+0x10]
   1e2bb:	mov    DWORD PTR [ebp-0xc],eax
   1e2be:	mov    eax,DWORD PTR [eax]
   1e2c0:	mov    DWORD PTR [ebp+0x8],eax
   1e2c3:	test   ecx,ecx
   1e2c5:	je     0x1e2db
   1e2c7:	mov    edx,edi
   1e2c9:	call   0x1e481
   1e2ce:	mov    BYTE PTR [ebp-0x1],0x1
   1e2d2:	test   eax,eax
   1e2d4:	jl     0x1e316
   1e2d6:	jg     0x1e31f
   1e2d8:	mov    eax,DWORD PTR [ebp+0x8]
   1e2db:	mov    ebx,eax
   1e2dd:	cmp    eax,0xfffffffe
   1e2e0:	jne    0x1e2b0
   1e2e2:	cmp    BYTE PTR [ebp-0x1],0x0
   1e2e6:	je     0x1e30c
   1e2e8:	mov    eax,DWORD PTR [esi]
   1e2ea:	cmp    eax,0xfffffffe
   1e2ed:	je     0x1e2fc
   1e2ef:	mov    ecx,DWORD PTR [esi+0x4]
   1e2f2:	add    ecx,edi
   1e2f4:	xor    ecx,DWORD PTR [eax+edi*1]
   1e2f7:	call   0x1e145
   1e2fc:	mov    ecx,DWORD PTR [esi+0xc]
   1e2ff:	mov    edx,DWORD PTR [esi+0x8]
   1e302:	add    ecx,edi
   1e304:	xor    ecx,DWORD PTR [edx+edi*1]
   1e307:	call   0x1e145
   1e30c:	mov    eax,DWORD PTR [ebp-0x8]
   1e30f:	pop    edi
   1e310:	pop    esi
   1e311:	pop    ebx
   1e312:	mov    esp,ebp
   1e314:	pop    ebp
   1e315:	ret    
   1e316:	mov    DWORD PTR [ebp-0x8],0x0
   1e31d:	jmp    0x1e2e8
   1e31f:	mov    ecx,DWORD PTR [ebp+0xc]
   1e322:	call   0x1e4aa
   1e327:	mov    eax,DWORD PTR [ebp+0xc]
   1e32a:	cmp    DWORD PTR [eax+0xc],ebx
   1e32d:	je     0x1e341
   1e32f:	push   0x77b1c
   1e334:	push   edi
   1e335:	mov    edx,ebx
   1e337:	mov    ecx,eax
   1e339:	call   0x1e4c4
   1e33e:	mov    eax,DWORD PTR [ebp+0xc]
   1e341:	mov    ecx,DWORD PTR [ebp+0x8]
   1e344:	mov    DWORD PTR [eax+0xc],ecx
   1e347:	mov    eax,DWORD PTR [esi]
   1e349:	cmp    eax,0xfffffffe
   1e34c:	je     0x1e35b
   1e34e:	mov    ecx,DWORD PTR [esi+0x4]
   1e351:	add    ecx,edi
   1e353:	xor    ecx,DWORD PTR [eax+edi*1]
   1e356:	call   0x1e145
   1e35b:	mov    ecx,DWORD PTR [esi+0xc]
   1e35e:	mov    edx,DWORD PTR [esi+0x8]
   1e361:	add    ecx,edi
   1e363:	xor    ecx,DWORD PTR [edx+edi*1]
   1e366:	call   0x1e145
   1e36b:	mov    eax,DWORD PTR [ebp-0xc]
   1e36e:	mov    ecx,DWORD PTR [eax+0x8]
   1e371:	mov    edx,edi
   1e373:	call   0x1e498
   1e378:	mov    edx,0xfffffffe
   1e37d:	cmp    DWORD PTR [ebx+0xc],edx
   1e380:	je     0x1e30c
   1e382:	push   0x77b1c
   1e387:	push   edi
   1e388:	mov    ecx,ebx
   1e38a:	call   0x1e4c4
   1e38f:	jmp    0x1e2e8
   1e394:	int3   
   1e395:	int3   
   1e396:	int3   
   1e397:	int3   
   1e398:	int3   
   1e399:	int3   
   1e39a:	int3   
   1e39b:	int3   
   1e39c:	push   ebx
   1e39d:	push   esi
   1e39e:	push   edi
   1e39f:	mov    edx,DWORD PTR [esp+0x10]
   1e3a3:	mov    eax,DWORD PTR [esp+0x14]
   1e3a7:	mov    ecx,DWORD PTR [esp+0x18]
   1e3ab:	push   ebp
   1e3ac:	push   edx
   1e3ad:	push   eax
   1e3ae:	push   ecx
   1e3af:	push   ecx
   1e3b0:	push   0x1e41f
   1e3b5:	push   DWORD PTR fs:0x0
   1e3bc:	mov    eax,ds:0x77b1c
   1e3c1:	xor    eax,esp
   1e3c3:	mov    DWORD PTR [esp+0x8],eax
   1e3c7:	mov    DWORD PTR fs:0x0,esp
   1e3ce:	mov    eax,DWORD PTR [esp+0x30]
   1e3d2:	mov    ebx,DWORD PTR [eax+0x8]
   1e3d5:	mov    ecx,DWORD PTR [esp+0x2c]
   1e3d9:	xor    ebx,DWORD PTR [ecx]
   1e3db:	mov    esi,DWORD PTR [eax+0xc]
   1e3de:	cmp    esi,0xfffffffe
   1e3e1:	je     0x1e411
   1e3e3:	mov    edx,DWORD PTR [esp+0x34]
   1e3e7:	cmp    edx,0xfffffffe
   1e3ea:	je     0x1e3f0
   1e3ec:	cmp    esi,edx
   1e3ee:	jbe    0x1e411
   1e3f0:	lea    esi,[esi+esi*2]
   1e3f3:	lea    ebx,[ebx+esi*4+0x10]
   1e3f7:	mov    ecx,DWORD PTR [ebx]
   1e3f9:	mov    DWORD PTR [eax+0xc],ecx
   1e3fc:	cmp    DWORD PTR [ebx+0x4],0x0
   1e400:	jne    0x1e3ce
   1e402:	mov    ecx,0x1
   1e407:	mov    eax,DWORD PTR [ebx+0x8]
   1e40a:	call   0x1e53c
   1e40f:	jmp    0x1e3ce
   1e411:	pop    DWORD PTR fs:0x0
   1e418:	add    esp,0x18
   1e41b:	pop    edi
   1e41c:	pop    esi
   1e41d:	pop    ebx
   1e41e:	ret    
   1e41f:	mov    ecx,DWORD PTR [esp+0x4]
   1e423:	test   DWORD PTR [ecx+0x4],0x6
   1e42a:	mov    eax,0x1
   1e42f:	je     0x1e464
   1e431:	mov    eax,DWORD PTR [esp+0x8]
   1e435:	mov    ecx,DWORD PTR [eax+0x8]
   1e438:	xor    ecx,eax
   1e43a:	call   0x1e145
   1e43f:	push   ebp
   1e440:	mov    ebp,DWORD PTR [eax+0x18]
   1e443:	push   DWORD PTR [eax+0xc]
   1e446:	push   DWORD PTR [eax+0x10]
   1e449:	push   DWORD PTR [eax+0x14]
   1e44c:	call   0x1e39c
   1e451:	add    esp,0xc
   1e454:	pop    ebp
   1e455:	mov    eax,DWORD PTR [esp+0x8]
   1e459:	mov    edx,DWORD PTR [esp+0x10]
   1e45d:	mov    DWORD PTR [edx],eax
   1e45f:	mov    eax,0x3
   1e464:	ret    
   1e465:	push   ebp
   1e466:	mov    ecx,DWORD PTR [esp+0x8]
   1e46a:	mov    ebp,DWORD PTR [ecx]
   1e46c:	push   DWORD PTR [ecx+0x1c]
   1e46f:	push   DWORD PTR [ecx+0x18]
   1e472:	push   DWORD PTR [ecx+0x28]
   1e475:	call   0x1e39c
   1e47a:	add    esp,0xc
   1e47d:	pop    ebp
   1e47e:	ret    0x4
   1e481:	push   ebp
   1e482:	push   esi
   1e483:	push   edi
   1e484:	push   ebx
   1e485:	mov    ebp,edx
   1e487:	xor    eax,eax
   1e489:	xor    ebx,ebx
   1e48b:	xor    edx,edx
   1e48d:	xor    esi,esi
   1e48f:	xor    edi,edi
   1e491:	call   ecx
   1e493:	pop    ebx
   1e494:	pop    edi
   1e495:	pop    esi
   1e496:	pop    ebp
   1e497:	ret    
   1e498:	mov    ebp,edx
   1e49a:	mov    esi,ecx
   1e49c:	mov    eax,ecx
   1e49e:	xor    eax,eax
   1e4a0:	xor    ebx,ebx
   1e4a2:	xor    ecx,ecx
   1e4a4:	xor    edx,edx
   1e4a6:	xor    edi,edi
   1e4a8:	jmp    esi
   1e4aa:	push   ebp
   1e4ab:	mov    ebp,esp
   1e4ad:	push   ebx
   1e4ae:	push   esi
   1e4af:	push   edi
   1e4b0:	push   0x0
   1e4b2:	push   0x0
   1e4b4:	push   0x1e4bf
   1e4b9:	push   ecx
   1e4ba:	call   0x1e544
   1e4bf:	pop    edi
   1e4c0:	pop    esi
   1e4c1:	pop    ebx
   1e4c2:	pop    ebp
   1e4c3:	ret    
   1e4c4:	push   ebp
   1e4c5:	mov    ebp,DWORD PTR [esp+0x8]
   1e4c9:	push   edx
   1e4ca:	push   ecx
   1e4cb:	push   DWORD PTR [esp+0x14]
   1e4cf:	call   0x1e39c
   1e4d4:	add    esp,0xc
   1e4d7:	pop    ebp
   1e4d8:	ret    0x8
   1e4db:	int3   
   1e4dc:	int3   
   1e4dd:	int3   
   1e4de:	int3   
   1e4df:	int3   
   1e4e0:	push   0x1e240
   1e4e5:	push   DWORD PTR fs:0x0
   1e4ec:	mov    eax,DWORD PTR [esp+0x10]
   1e4f0:	mov    DWORD PTR [esp+0x10],ebp
   1e4f4:	lea    ebp,[esp+0x10]
   1e4f8:	sub    esp,eax
   1e4fa:	push   ebx
   1e4fb:	push   esi
   1e4fc:	push   edi
   1e4fd:	mov    eax,ds:0x77b1c
   1e502:	xor    DWORD PTR [ebp-0x4],eax
   1e505:	xor    eax,ebp
   1e507:	mov    DWORD PTR [ebp-0x1c],eax
   1e50a:	push   eax
   1e50b:	mov    DWORD PTR [ebp-0x18],esp
   1e50e:	push   DWORD PTR [ebp-0x8]
   1e511:	mov    eax,DWORD PTR [ebp-0x4]
   1e514:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e51b:	mov    DWORD PTR [ebp-0x8],eax
   1e51e:	lea    eax,[ebp-0x10]
   1e521:	mov    fs:0x0,eax
   1e527:	ret    
   1e528:	mov    ecx,DWORD PTR [ebp-0x1c]
   1e52b:	xor    ecx,ebp
   1e52d:	call   0x1e145
   1e532:	jmp    0x1e221
   1e537:	int3   
   1e538:	int3   
   1e539:	int3   
   1e53a:	int3   
   1e53b:	int3   
   1e53c:	call   eax
   1e53e:	ret    
   1e53f:	int3   
   1e540:	int3   
   1e541:	int3   
   1e542:	int3   
   1e543:	int3   
   1e544:	jmp    DWORD PTR ds:0x1f854
   1e54a:	pop    esp
   1e54b:	add    BYTE PTR [eax],al
   1e54d:	add    BYTE PTR [eax],al
   1e54f:	add    BYTE PTR [ebx+0x0],ch
   1e552:	bound  eax,QWORD PTR [eax]
   1e554:	add    BYTE PTR fs:[ecx+0x0],dh
   1e558:	add    BYTE PTR [eax],al
   1e55a:	add    BYTE PTR fs:[ebx],dh
   1e55d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1e561:	add    BYTE PTR [eax],al
   1e563:	add    BYTE PTR [esi+0x0],ch
   1e566:	je     0x1e568
   1e568:	outs   dx,BYTE PTR ds:[esi]
   1e569:	add    BYTE PTR [eax],al
   1e56b:	add    BYTE PTR [ebx+0x0],dh
   1e56e:	jns    0x1e570
   1e570:	jae    0x1e572
   1e572:	popa   
   1e573:	add    BYTE PTR [eax],al
   1e575:	add    BYTE PTR [edi+0x0],dh
   1e578:	imul   eax,DWORD PTR [eax],0x65006e
   1e57e:	add    BYTE PTR [eax],al
   1e580:	jo     0x1e582
   1e582:	arpl   WORD PTR [eax],ax
   1e584:	imul   eax,DWORD PTR [eax],0x6d0000
   1e58a:	jae    0x1e58c
   1e58c:	jb     0x1e58e
   1e58e:	add    BYTE PTR [eax],al
   1e590:	je     0x1e592
   1e592:	ins    DWORD PTR es:[edi],dx
   1e593:	add    BYTE PTR [eax+0x0],dh
   1e596:	add    BYTE PTR [eax],al
   1e598:	jne    0x1e59a
   1e59a:	jae    0x1e59c
   1e59c:	bound  eax,QWORD PTR [eax]
   1e59e:	add    BYTE PTR [eax],al
   1e5a0:	outs   dx,DWORD PTR ds:[esi]
   1e5a1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1e5a5:	add    BYTE PTR [eax],al
   1e5a7:	add    BYTE PTR [ecx+0x0],ah
   1e5aa:	imul   eax,DWORD PTR [eax],0x70
   1e5b0:	push   0x0
   1e5b2:	popa   
   1e5b3:	add    BYTE PTR [ecx+0x0],bh
   1e5b6:	add    BYTE PTR [eax],al
   1e5b8:	jbe    0x1e5ba
   1e5ba:	add    BYTE PTR gs:[edx+0x0],dh
   1e5be:	add    BYTE PTR [eax],al
   1e5c0:	jae    0x1e5c2
   1e5c2:	popa   
   1e5c3:	add    BYTE PTR [ecx+0x0],ch
   1e5c6:	add    BYTE PTR [eax],al
   1e5c8:	ins    BYTE PTR es:[edi],dx
   1e5c9:	add    BYTE PTR [ecx+0x0],ah
   1e5cc:	arpl   WORD PTR [eax],ax
   1e5ce:	add    BYTE PTR [eax],al
   1e5d0:	push   0x0
   1e5d2:	jo     0x1e5d4
   1e5d4:	add    BYTE PTR [bx+si],al
   1e5d7:	add    BYTE PTR [eax+0x0],ch
   1e5da:	imul   eax,DWORD PTR [eax],0x64
   1e5e0:	jo     0x1e5e2
   1e5e2:	outs   dx,BYTE PTR ds:[esi]
   1e5e3:	add    BYTE PTR [edi+0x0],ah
   1e5e6:	add    BYTE PTR [eax],al
   1e5e8:	add    ah,cl
   1e5ea:	dec    ebx
   1e5eb:	add    BYTE PTR [ebp+0x0],ah
   1e5ee:	push   ebx
   1e5ef:	add    BYTE PTR [ebp+0x0],ah
   1e5f2:	jb     0x1e5f4
   1e5f4:	jbe    0x1e5f6
   1e5f6:	imul   eax,DWORD PTR [eax],0x650063
   1e5fc:	inc    esp
   1e5fd:	add    BYTE PTR [ebp+0x0],ah
   1e600:	jae    0x1e602
   1e602:	arpl   WORD PTR [eax],ax
   1e604:	jb     0x1e606
   1e606:	imul   eax,DWORD PTR [eax],0x740070
   1e60c:	outs   dx,DWORD PTR ds:[esi]
   1e60d:	add    BYTE PTR [edx+0x0],dh
   1e610:	push   esp
   1e611:	add    BYTE PTR [ecx+0x0],ah
   1e614:	bound  eax,QWORD PTR [eax]
   1e616:	ins    BYTE PTR es:[edi],dx
   1e617:	add    BYTE PTR [ebp+0x0],ah
   1e61a:	add    BYTE PTR [eax],al
   1e61c:	pop    edx
   1e61d:	add    BYTE PTR [edi+0x0],dh
   1e620:	dec    edi
   1e621:	add    BYTE PTR [eax+0x0],dh
   1e624:	add    BYTE PTR gs:[esi+0x0],ch
   1e628:	push   eax
   1e629:	add    BYTE PTR [edx+0x0],dh
   1e62c:	outs   dx,DWORD PTR ds:[esi]
   1e62d:	add    BYTE PTR [ebx+0x0],ah
   1e630:	add    BYTE PTR gs:[ebx+0x0],dh
   1e634:	jae    0x1e636
   1e636:	add    BYTE PTR [eax],al
   1e638:	pop    edx
   1e639:	add    BYTE PTR [edi+0x0],dh
   1e63c:	inc    ecx
   1e63d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e641:	add    BYTE PTR [edi+0x0],ch
   1e644:	arpl   WORD PTR [eax],ax
   1e646:	popa   
   1e647:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e64b:	add    BYTE PTR [esi+0x0],dl
   1e64e:	imul   eax,DWORD PTR [eax],0x740072
   1e654:	jne    0x1e656
   1e656:	popa   
   1e657:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1e65b:	add    BYTE PTR [ebp+0x0],ah
   1e65e:	ins    DWORD PTR es:[edi],dx
   1e65f:	add    BYTE PTR [edi+0x0],ch
   1e662:	jb     0x1e664
   1e664:	jns    0x1e666
   1e666:	add    BYTE PTR [eax],al
   1e668:	push   eax
   1e669:	add    BYTE PTR [ebx+0x0],dh
   1e66c:	push   ebx
   1e66d:	add    BYTE PTR [ebp+0x0],ah
   1e670:	je     0x1e672
   1e672:	dec    esp
   1e673:	add    BYTE PTR [edi+0x0],ch
   1e676:	popa   
   1e677:	add    BYTE PTR [eax+eax*1+0x49],ah
   1e67b:	add    BYTE PTR [ebp+0x0],ch
   1e67e:	popa   
   1e67f:	add    BYTE PTR [edi+0x0],ah
   1e682:	add    BYTE PTR gs:[esi+0x0],cl
   1e686:	outs   dx,DWORD PTR ds:[esi]
   1e687:	add    BYTE PTR [eax+eax*1+0x69],dh
   1e68b:	add    BYTE PTR [esi+0x0],ah
   1e68e:	jns    0x1e690
   1e690:	push   edx
   1e691:	add    BYTE PTR [edi+0x0],ch
   1e694:	jne    0x1e696
   1e696:	je     0x1e698
   1e698:	imul   eax,DWORD PTR [eax],0x65006e
   1e69e:	add    BYTE PTR [eax],al
   1e6a0:	pop    edx
   1e6a1:	add    BYTE PTR [edi+0x0],dh
   1e6a4:	inc    esp
   1e6a5:	add    BYTE PTR [ebp+0x0],dh
   1e6a8:	jo     0x1e6aa
   1e6aa:	ins    BYTE PTR es:[edi],dx
   1e6ab:	add    BYTE PTR [ecx+0x0],ch
   1e6ae:	arpl   WORD PTR [eax],ax
   1e6b0:	popa   
   1e6b1:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e6b5:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1e6b9:	add    BYTE PTR [ebx+0x0],ch
   1e6bc:	add    BYTE PTR gs:[esi+0x0],ch
   1e6c0:	add    BYTE PTR [eax],al
   1e6c2:	push   eax
   1e6c3:	add    BYTE PTR [ebx+0x0],dh
   1e6c6:	push   ebx
   1e6c7:	add    BYTE PTR [ebp+0x0],ah
   1e6ca:	je     0x1e6cc
   1e6cc:	inc    ebx
   1e6cd:	add    BYTE PTR [edx+0x0],dh
   1e6d0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e6d4:	je     0x1e6d6
   1e6d6:	add    BYTE PTR gs:[eax+0x0],dl
   1e6da:	jb     0x1e6dc
   1e6dc:	outs   dx,DWORD PTR ds:[esi]
   1e6dd:	add    BYTE PTR [ebx+0x0],ah
   1e6e0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e6e4:	jae    0x1e6e6
   1e6e6:	dec    esi
   1e6e7:	add    BYTE PTR [edi+0x0],ch
   1e6ea:	je     0x1e6ec
   1e6ec:	imul   eax,DWORD PTR [eax],0x790066
   1e6f2:	push   edx
   1e6f3:	add    BYTE PTR [edi+0x0],ch
   1e6f6:	jne    0x1e6f8
   1e6f8:	je     0x1e6fa
   1e6fa:	imul   eax,DWORD PTR [eax],0x65006e
   1e700:	add    BYTE PTR [eax],al
   1e702:	pop    edx
   1e703:	add    BYTE PTR [edi+0x0],dh
   1e706:	dec    edi
   1e707:	add    BYTE PTR [eax+0x0],dh
   1e70a:	add    BYTE PTR gs:[esi+0x0],ch
   1e70e:	inc    esi
   1e70f:	add    BYTE PTR [ecx+0x0],ch
   1e712:	ins    BYTE PTR es:[edi],dx
   1e713:	add    BYTE PTR [ebp+0x0],ah
   1e716:	add    BYTE PTR [eax],al
   1e718:	pop    edx
   1e719:	add    BYTE PTR [edi+0x0],dh
   1e71c:	push   ecx
   1e71d:	add    BYTE PTR [ebp+0x0],dh
   1e720:	add    BYTE PTR gs:[edx+0x0],dh
   1e724:	jns    0x1e726
   1e726:	dec    ecx
   1e727:	add    BYTE PTR [esi+0x0],ch
   1e72a:	data16 add BYTE PTR [edi+0x0],ch
   1e72e:	jb     0x1e730
   1e730:	ins    DWORD PTR es:[edi],dx
   1e731:	add    BYTE PTR [ecx+0x0],ah
   1e734:	je     0x1e736
   1e736:	imul   eax,DWORD PTR [eax],0x6e006f
   1e73c:	push   eax
   1e73d:	add    BYTE PTR [edx+0x0],dh
   1e740:	outs   dx,DWORD PTR ds:[esi]
   1e741:	add    BYTE PTR [ebx+0x0],ah
   1e744:	add    BYTE PTR gs:[ebx+0x0],dh
   1e748:	jae    0x1e74a
   1e74a:	add    BYTE PTR [eax],al
   1e74c:	pop    edx
   1e74d:	add    BYTE PTR [edi+0x0],dh
   1e750:	push   ecx
   1e751:	add    BYTE PTR [ebp+0x0],dh
   1e754:	add    BYTE PTR gs:[edx+0x0],dh
   1e758:	jns    0x1e75a
   1e75a:	push   ebx
   1e75b:	add    BYTE PTR [ecx+0x0],bh
   1e75e:	jae    0x1e760
   1e760:	je     0x1e762
   1e762:	add    BYTE PTR gs:[ebp+0x0],ch
   1e766:	dec    ecx
   1e767:	add    BYTE PTR [esi+0x0],ch
   1e76a:	data16 add BYTE PTR [edi+0x0],ch
   1e76e:	jb     0x1e770
   1e770:	ins    DWORD PTR es:[edi],dx
   1e771:	add    BYTE PTR [ecx+0x0],ah
   1e774:	je     0x1e776
   1e776:	imul   eax,DWORD PTR [eax],0x6e006f
   1e77c:	add    BYTE PTR [eax],al
   1e77e:	pop    edx
   1e77f:	add    BYTE PTR [edi+0x0],dh
   1e782:	dec    edi
   1e783:	add    BYTE PTR [eax+0x0],dh
   1e786:	add    BYTE PTR gs:[esi+0x0],ch
   1e78a:	dec    ebx
   1e78b:	add    BYTE PTR [ebp+0x0],ah
   1e78e:	jns    0x1e790
   1e790:	add    BYTE PTR [eax],al
   1e792:	pop    edx
   1e793:	add    BYTE PTR [edi+0x0],dh
   1e796:	inc    esp
   1e797:	add    BYTE PTR [ebp+0x0],ah
   1e79a:	ins    BYTE PTR es:[edi],dx
   1e79b:	add    BYTE PTR [ebp+0x0],ah
   1e79e:	je     0x1e7a0
   1e7a0:	add    BYTE PTR gs:[ebx+0x0],cl
   1e7a4:	add    BYTE PTR gs:[ecx+0x0],bh
   1e7a8:	add    BYTE PTR [eax],al
   1e7aa:	pop    edx
   1e7ab:	add    BYTE PTR [edi+0x0],dh
   1e7ae:	push   ebx
   1e7af:	add    BYTE PTR [ebp+0x0],ah
   1e7b2:	je     0x1e7b4
   1e7b4:	push   esi
   1e7b5:	add    BYTE PTR [ecx+0x0],ah
   1e7b8:	ins    BYTE PTR es:[edi],dx
   1e7b9:	add    BYTE PTR [ebp+0x0],dh
   1e7bc:	add    BYTE PTR gs:[ebx+0x0],cl
   1e7c0:	add    BYTE PTR gs:[ecx+0x0],bh
   1e7c4:	add    BYTE PTR [eax],al
   1e7c6:	pop    edx
   1e7c7:	add    BYTE PTR [edi+0x0],dh
   1e7ca:	push   ecx
   1e7cb:	add    BYTE PTR [ebp+0x0],dh
   1e7ce:	add    BYTE PTR gs:[edx+0x0],dh
   1e7d2:	jns    0x1e7d4
   1e7d4:	push   esi
   1e7d5:	add    BYTE PTR [edi+0x0],ch
   1e7d8:	ins    BYTE PTR es:[edi],dx
   1e7d9:	add    BYTE PTR [ebp+0x0],dh
   1e7dc:	ins    DWORD PTR es:[edi],dx
   1e7dd:	add    BYTE PTR [ebp+0x0],ah
   1e7e0:	dec    ecx
   1e7e1:	add    BYTE PTR [esi+0x0],ch
   1e7e4:	data16 add BYTE PTR [edi+0x0],ch
   1e7e8:	jb     0x1e7ea
   1e7ea:	ins    DWORD PTR es:[edi],dx
   1e7eb:	add    BYTE PTR [ecx+0x0],ah
   1e7ee:	je     0x1e7f0
   1e7f0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7f6:	inc    esi
   1e7f7:	add    BYTE PTR [ecx+0x0],ch
   1e7fa:	ins    BYTE PTR es:[edi],dx
   1e7fb:	add    BYTE PTR [ebp+0x0],ah
   1e7fe:	add    BYTE PTR [eax],al
   1e800:	pop    edx
   1e801:	add    BYTE PTR [edi+0x0],dh
   1e804:	inc    ebx
   1e805:	add    BYTE PTR [edx+0x0],dh
   1e808:	add    BYTE PTR gs:[ecx+0x0],ah
   1e80c:	je     0x1e80e
   1e80e:	add    BYTE PTR gs:[esi+0x0],al
   1e812:	imul   eax,DWORD PTR [eax],0x65006c
   1e818:	add    BYTE PTR [eax],al
   1e81a:	push   edx
   1e81b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e81f:	add    BYTE PTR [ecx+0x0],cl
   1e822:	ins    DWORD PTR es:[edi],dx
   1e823:	add    BYTE PTR [ecx+0x0],ah
   1e826:	add    BYTE PTR [di+0x0],ah
   1e82a:	dec    esi
   1e82b:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e82f:	add    BYTE PTR [ebp+0x0],ah
   1e832:	popa   
   1e833:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e837:	add    BYTE PTR [edx+0x0],dh
   1e83a:	add    BYTE PTR [eax],al
   1e83c:	push   edx
   1e83d:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e841:	add    BYTE PTR [ecx+0x0],cl
   1e844:	ins    DWORD PTR es:[edi],dx
   1e845:	add    BYTE PTR [ecx+0x0],ah
   1e848:	add    BYTE PTR [di+0x0],ah
   1e84c:	inc    esp
   1e84d:	add    BYTE PTR [ecx+0x0],ch
   1e850:	jb     0x1e852
   1e852:	add    BYTE PTR gs:[ebx+0x0],ah
   1e856:	je     0x1e858
   1e858:	outs   dx,DWORD PTR ds:[esi]
   1e859:	add    BYTE PTR [edx+0x0],dh
   1e85c:	jns    0x1e85e
   1e85e:	inc    ebp
   1e85f:	add    BYTE PTR [esi+0x0],ch
   1e862:	je     0x1e864
   1e864:	jb     0x1e866
   1e866:	jns    0x1e868
   1e868:	push   esp
   1e869:	add    BYTE PTR [edi+0x0],ch
   1e86c:	inc    esp
   1e86d:	add    BYTE PTR [ecx+0x0],ah
   1e870:	je     0x1e872
   1e872:	popa   
   1e873:	add    BYTE PTR [eax],al
   1e875:	add    BYTE PTR [edx+0x0],bl
   1e878:	ja     0x1e87a
   1e87a:	dec    edi
   1e87b:	add    BYTE PTR [eax+0x0],dh
   1e87e:	add    BYTE PTR gs:[esi+0x0],ch
   1e882:	push   eax
   1e883:	add    BYTE PTR [edx+0x0],dh
   1e886:	outs   dx,DWORD PTR ds:[esi]
   1e887:	add    BYTE PTR [ebx+0x0],ah
   1e88a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e88e:	jae    0x1e890
   1e890:	push   esp
   1e891:	add    BYTE PTR [edi+0x0],ch
   1e894:	imul   eax,DWORD PTR [eax],0x65
   1e897:	add    BYTE PTR [esi+0x0],ch
   1e89a:	add    BYTE PTR [eax],al
   1e89c:	pop    edx
   1e89d:	add    BYTE PTR [edi+0x0],dh
   1e8a0:	push   ebx
   1e8a1:	add    BYTE PTR [ebp+0x0],ah
   1e8a4:	je     0x1e8a6
   1e8a6:	dec    ecx
   1e8a7:	add    BYTE PTR [esi+0x0],ch
   1e8aa:	data16 add BYTE PTR [edi+0x0],ch
   1e8ae:	jb     0x1e8b0
   1e8b0:	ins    DWORD PTR es:[edi],dx
   1e8b1:	add    BYTE PTR [ecx+0x0],ah
   1e8b4:	je     0x1e8b6
   1e8b6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e8bc:	push   eax
   1e8bd:	add    BYTE PTR [edx+0x0],dh
   1e8c0:	outs   dx,DWORD PTR ds:[esi]
   1e8c1:	add    BYTE PTR [ebx+0x0],ah
   1e8c4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e8c8:	jae    0x1e8ca
   1e8ca:	add    BYTE PTR [eax],al
   1e8cc:	pop    edx
   1e8cd:	add    BYTE PTR [edi+0x0],dh
   1e8d0:	push   ecx
   1e8d1:	add    BYTE PTR [ebp+0x0],dh
   1e8d4:	add    BYTE PTR gs:[edx+0x0],dh
   1e8d8:	jns    0x1e8da
   1e8da:	dec    ecx
   1e8db:	add    BYTE PTR [esi+0x0],ch
   1e8de:	data16 add BYTE PTR [edi+0x0],ch
   1e8e2:	jb     0x1e8e4
   1e8e4:	ins    DWORD PTR es:[edi],dx
   1e8e5:	add    BYTE PTR [ecx+0x0],ah
   1e8e8:	je     0x1e8ea
   1e8ea:	imul   eax,DWORD PTR [eax],0x6e006f
   1e8f0:	push   esp
   1e8f1:	add    BYTE PTR [eax+0x0],ch
   1e8f4:	jb     0x1e8f6
   1e8f6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e8fa:	add    BYTE PTR fs:[eax],al
   1e8fd:	add    BYTE PTR [edx+0x0],bl
   1e900:	ja     0x1e902
   1e902:	inc    ebx
   1e903:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e907:	add    BYTE PTR [ebx+0x0],dh
   1e90a:	add    BYTE PTR gs:[eax],al
   1e90d:	add    BYTE PTR [edx+0x0],dl
   1e910:	je     0x1e912
   1e912:	ins    BYTE PTR es:[edi],dx
   1e913:	add    BYTE PTR [ecx+0x0],cl
   1e916:	outs   dx,BYTE PTR ds:[esi]
   1e917:	add    BYTE PTR [ecx+0x0],ch
   1e91a:	je     0x1e91c
   1e91c:	push   ebp
   1e91d:	add    BYTE PTR [esi+0x0],ch
   1e920:	imul   eax,DWORD PTR [eax],0x6f0063
   1e926:	add    BYTE PTR fs:[ebp+0x0],ah
   1e92a:	push   ebx
   1e92b:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e92f:	add    BYTE PTR [ecx+0x0],ch
   1e932:	outs   dx,BYTE PTR ds:[esi]
   1e933:	add    BYTE PTR [edi+0x0],ah
   1e936:	add    BYTE PTR [eax],al
   1e938:	inc    ebp
   1e939:	add    BYTE PTR [eax+0x0],bh
   1e93c:	push   edx
   1e93d:	add    BYTE PTR [ecx+0x0],ah
   1e940:	imul   eax,DWORD PTR [eax],0x650073
   1e946:	push   ebx
   1e947:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e94b:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e94f:	add    BYTE PTR [ebx+0x0],dh
   1e952:	add    BYTE PTR [eax],al
   1e954:	inc    ebp
   1e955:	add    BYTE PTR [eax+0x0],bh
   1e958:	inc    ecx
   1e959:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e95d:	add    BYTE PTR [edi+0x0],ch
   1e960:	arpl   WORD PTR [eax],ax
   1e962:	popa   
   1e963:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e967:	add    BYTE PTR [eax+0x0],dl
   1e96a:	outs   dx,DWORD PTR ds:[esi]
   1e96b:	add    BYTE PTR [edi+0x0],ch
   1e96e:	ins    BYTE PTR es:[edi],dx
   1e96f:	add    BYTE PTR [edi+0x0],dl
   1e972:	imul   eax,DWORD PTR [eax],0x680074
   1e978:	push   esp
   1e979:	add    BYTE PTR [ecx+0x0],ah
   1e97c:	add    BYTE PTR [bx+si+0x0],dl
   1e980:	jb     0x1e982
   1e982:	imul   eax,DWORD PTR [eax],0x72006f
   1e988:	imul   eax,DWORD PTR [eax],0x790074
   1e98e:	add    BYTE PTR [eax],al
   1e990:	inc    ebp
   1e991:	add    BYTE PTR [eax+0x0],bh
   1e994:	inc    esi
   1e995:	add    BYTE PTR [edx+0x0],dh
   1e998:	add    BYTE PTR gs:[ebp+0x0],ah
   1e99c:	push   eax
   1e99d:	add    BYTE PTR [edi+0x0],ch
   1e9a0:	outs   dx,DWORD PTR ds:[esi]
   1e9a1:	add    BYTE PTR [eax+eax*1+0x57],ch
   1e9a5:	add    BYTE PTR [ecx+0x0],ch
   1e9a8:	je     0x1e9aa
   1e9aa:	push   0x61005400
   1e9af:	add    BYTE PTR [edi+0x0],ah
   1e9b2:	add    BYTE PTR [eax],al
   1e9b4:	push   edx
   1e9b5:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e9b9:	add    BYTE PTR [ebx+0x0],al
   1e9bc:	outs   dx,DWORD PTR ds:[esi]
   1e9bd:	add    BYTE PTR [eax+0x0],dh
   1e9c0:	jns    0x1e9c2
   1e9c2:	push   ebp
   1e9c3:	add    BYTE PTR [esi+0x0],ch
   1e9c6:	imul   eax,DWORD PTR [eax],0x6f0063
   1e9cc:	add    BYTE PTR fs:[ebp+0x0],ah
   1e9d0:	push   ebx
   1e9d1:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e9d5:	add    BYTE PTR [ecx+0x0],ch
   1e9d8:	outs   dx,BYTE PTR ds:[esi]
   1e9d9:	add    BYTE PTR [edi+0x0],ah
   1e9dc:	add    BYTE PTR [eax],al
   1e9de:	inc    ebp
   1e9df:	add    BYTE PTR [eax+0x0],bh
   1e9e2:	inc    ecx
   1e9e3:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e9e7:	add    BYTE PTR [edi+0x0],ch
   1e9ea:	arpl   WORD PTR [eax],ax
   1e9ec:	popa   
   1e9ed:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e9f1:	add    BYTE PTR [eax+0x0],dl
   1e9f4:	outs   dx,DWORD PTR ds:[esi]
   1e9f5:	add    BYTE PTR [edi+0x0],ch
   1e9f8:	ins    BYTE PTR es:[edi],dx
   1e9f9:	add    BYTE PTR [edi+0x0],dl
   1e9fc:	imul   eax,DWORD PTR [eax],0x680074
   1ea02:	push   esp
   1ea03:	add    BYTE PTR [ecx+0x0],ah
   1ea06:	add    BYTE PTR [bx+si],al
   1ea09:	add    BYTE PTR [edx+0x0],dl
   1ea0c:	je     0x1ea0e
   1ea0e:	ins    BYTE PTR es:[edi],dx
   1ea0f:	add    BYTE PTR [ecx+0x0],al
   1ea12:	jae    0x1ea14
   1ea14:	jae    0x1ea16
   1ea16:	add    BYTE PTR gs:[edx+0x0],dh
   1ea1a:	je     0x1ea1c
   1ea1c:	add    BYTE PTR [eax],al
   1ea1e:	push   edx
   1ea1f:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1ea23:	add    BYTE PTR [ebx+0x0],al
   1ea26:	outs   dx,DWORD PTR ds:[esi]
   1ea27:	add    BYTE PTR [ebp+0x0],ch
   1ea2a:	jo     0x1ea2c
   1ea2c:	popa   
   1ea2d:	add    BYTE PTR [edx+0x0],dh
   1ea30:	add    BYTE PTR gs:[ebp+0x0],dl
   1ea34:	outs   dx,BYTE PTR ds:[esi]
   1ea35:	add    BYTE PTR [ecx+0x0],ch
   1ea38:	arpl   WORD PTR [eax],ax
   1ea3a:	outs   dx,DWORD PTR ds:[esi]
   1ea3b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1ea3f:	add    BYTE PTR [ebx+0x0],dl
   1ea42:	je     0x1ea44
   1ea44:	jb     0x1ea46
   1ea46:	imul   eax,DWORD PTR [eax],0x67006e
   1ea4c:	add    BYTE PTR [eax],al
   1ea4e:	pop    edx
   1ea4f:	add    BYTE PTR [edi+0x0],dh
   1ea52:	inc    ebp
   1ea53:	add    BYTE PTR [esi+0x0],ch
   1ea56:	jne    0x1ea58
   1ea58:	ins    DWORD PTR es:[edi],dx
   1ea59:	add    BYTE PTR [ebp+0x0],ah
   1ea5c:	jb     0x1ea5e
   1ea5e:	popa   
   1ea5f:	add    BYTE PTR [eax+eax*1+0x65],dh
   1ea63:	add    BYTE PTR [ebx+0x0],cl
   1ea66:	add    BYTE PTR gs:[ecx+0x0],bh
   1ea6a:	add    BYTE PTR [eax],al
   1ea6c:	pop    edx
   1ea6d:	add    BYTE PTR [edi+0x0],dh
   1ea70:	dec    esp
   1ea71:	add    BYTE PTR [edi+0x0],ch
   1ea74:	popa   
   1ea75:	add    BYTE PTR [eax+eax*1+0x44],ah
   1ea79:	add    BYTE PTR [edx+0x0],dh
   1ea7c:	imul   eax,DWORD PTR [eax],0x650076
   1ea82:	jb     0x1ea84
   1ea84:	add    BYTE PTR [eax],al
   1ea86:	pop    edx
   1ea87:	add    BYTE PTR [edi+0x0],dh
   1ea8a:	inc    ebx
   1ea8b:	add    BYTE PTR [edx+0x0],dh
   1ea8e:	add    BYTE PTR gs:[ecx+0x0],ah
   1ea92:	je     0x1ea94
   1ea94:	add    BYTE PTR gs:[ebx+0x0],cl
   1ea98:	add    BYTE PTR gs:[ecx+0x0],bh
   1ea9c:	add    BYTE PTR [eax],al
   1ea9e:	dec    ecx
   1ea9f:	add    BYTE PTR [edi+0x0],ch
   1eaa2:	inc    esp
   1eaa3:	add    BYTE PTR [ebp+0x0],ah
   1eaa6:	ins    BYTE PTR es:[edi],dx
   1eaa7:	add    BYTE PTR [ebp+0x0],ah
   1eaaa:	je     0x1eaac
   1eaac:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1eab1:	add    BYTE PTR [esi+0x0],dh
   1eab4:	imul   eax,DWORD PTR [eax],0x650063
   1eaba:	add    BYTE PTR [eax],al
   1eabc:	dec    ebx
   1eabd:	add    BYTE PTR [ebp+0x0],ah
   1eac0:	inc    esp
   1eac1:	add    BYTE PTR [ebp+0x0],ah
   1eac4:	je     0x1eac6
   1eac6:	popa   
   1eac7:	add    BYTE PTR [ebx+0x0],ah
   1eaca:	push   0x72005000
   1eacf:	add    BYTE PTR [edi+0x0],ch
   1ead2:	arpl   WORD PTR [eax],ax
   1ead4:	add    BYTE PTR gs:[ebx+0x0],dh
   1ead8:	jae    0x1eada
   1eada:	add    BYTE PTR [eax],al
   1eadc:	dec    ebx
   1eadd:	add    BYTE PTR [ebp+0x0],ah
   1eae0:	inc    ecx
   1eae1:	add    BYTE PTR [eax+eax*1+0x74],dh
   1eae5:	add    BYTE PTR [ecx+0x0],ah
   1eae8:	arpl   WORD PTR [eax],ax
   1eaea:	push   0x72005000
   1eaef:	add    BYTE PTR [edi+0x0],ch
   1eaf2:	arpl   WORD PTR [eax],ax
   1eaf4:	add    BYTE PTR gs:[ebx+0x0],dh
   1eaf8:	jae    0x1eafa
   1eafa:	add    BYTE PTR [eax],al
   1eafc:	pop    edx
   1eafd:	add    BYTE PTR [edi+0x0],dh
   1eb00:	push   ecx
   1eb01:	add    BYTE PTR [ebp+0x0],dh
   1eb04:	add    BYTE PTR gs:[edx+0x0],dh
   1eb08:	jns    0x1eb0a
   1eb0a:	push   esi
   1eb0b:	add    BYTE PTR [ecx+0x0],ah
   1eb0e:	ins    BYTE PTR es:[edi],dx
   1eb0f:	add    BYTE PTR [ebp+0x0],dh
   1eb12:	add    BYTE PTR gs:[ebx+0x0],cl
   1eb16:	add    BYTE PTR gs:[ecx+0x0],bh
   1eb1a:	add    BYTE PTR [eax],al
   1eb1c:	pop    edx
   1eb1d:	add    BYTE PTR [edi+0x0],dh
   1eb20:	push   edx
   1eb21:	add    BYTE PTR [ebp+0x0],ah
   1eb24:	popa   
   1eb25:	add    BYTE PTR [eax+eax*1+0x46],ah
   1eb29:	add    BYTE PTR [ecx+0x0],ch
   1eb2c:	ins    BYTE PTR es:[edi],dx
   1eb2d:	add    BYTE PTR [ebp+0x0],ah
   1eb30:	add    BYTE PTR [eax],al
   1eb32:	pop    edx
   1eb33:	add    BYTE PTR [edi+0x0],dh
   1eb36:	push   ebx
   1eb37:	add    BYTE PTR [ebp+0x0],ah
   1eb3a:	je     0x1eb3c
   1eb3c:	dec    ecx
   1eb3d:	add    BYTE PTR [esi+0x0],ch
   1eb40:	data16 add BYTE PTR [edi+0x0],ch
   1eb44:	jb     0x1eb46
   1eb46:	ins    DWORD PTR es:[edi],dx
   1eb47:	add    BYTE PTR [ecx+0x0],ah
   1eb4a:	je     0x1eb4c
   1eb4c:	imul   eax,DWORD PTR [eax],0x6e006f
   1eb52:	inc    esi
   1eb53:	add    BYTE PTR [ecx+0x0],ch
   1eb56:	ins    BYTE PTR es:[edi],dx
   1eb57:	add    BYTE PTR [ebp+0x0],ah
   1eb5a:	add    BYTE PTR [eax],al
   1eb5c:	pop    edx
   1eb5d:	add    BYTE PTR [edi+0x0],dh
   1eb60:	push   edi
   1eb61:	add    BYTE PTR [edx+0x0],dh
   1eb64:	imul   eax,DWORD PTR [eax],0x650074
   1eb6a:	inc    esi
   1eb6b:	add    BYTE PTR [ecx+0x0],ch
   1eb6e:	ins    BYTE PTR es:[edi],dx
   1eb6f:	add    BYTE PTR [ebp+0x0],ah
   1eb72:	add    BYTE PTR [eax],al
   1eb74:	pop    edx
   1eb75:	add    BYTE PTR [edi+0x0],dh
   1eb78:	push   ecx
   1eb79:	add    BYTE PTR [ebp+0x0],dh
   1eb7c:	add    BYTE PTR gs:[edx+0x0],dh
   1eb80:	jns    0x1eb82
   1eb82:	dec    ecx
   1eb83:	add    BYTE PTR [esi+0x0],ch
   1eb86:	data16 add BYTE PTR [edi+0x0],ch
   1eb8a:	jb     0x1eb8c
   1eb8c:	ins    DWORD PTR es:[edi],dx
   1eb8d:	add    BYTE PTR [ecx+0x0],ah
   1eb90:	je     0x1eb92
   1eb92:	imul   eax,DWORD PTR [eax],0x6e006f
   1eb98:	inc    esi
   1eb99:	add    BYTE PTR [ecx+0x0],ch
   1eb9c:	ins    BYTE PTR es:[edi],dx
   1eb9d:	add    BYTE PTR [ebp+0x0],ah
   1eba0:	add    BYTE PTR [eax],al
   1eba2:	dec    ecx
   1eba3:	add    BYTE PTR [edi+0x0],ch
   1eba6:	inc    ebx
   1eba7:	add    BYTE PTR [edx+0x0],dh
   1ebaa:	add    BYTE PTR gs:[ecx+0x0],ah
   1ebae:	je     0x1ebb0
   1ebb0:	add    BYTE PTR gs:[ebx+0x0],dl
   1ebb4:	jns    0x1ebb6
   1ebb6:	ins    DWORD PTR es:[edi],dx
   1ebb7:	add    BYTE PTR [edx+0x0],ah
   1ebba:	outs   dx,DWORD PTR ds:[esi]
   1ebbb:	add    BYTE PTR [eax+eax*1+0x69],ch
   1ebbf:	add    BYTE PTR [ebx+0x0],ah
   1ebc2:	dec    esp
   1ebc3:	add    BYTE PTR [ecx+0x0],ch
   1ebc6:	outs   dx,BYTE PTR ds:[esi]
   1ebc7:	add    BYTE PTR [ebx+0x0],ch
   1ebca:	add    BYTE PTR [eax],al
   1ebcc:	dec    ecx
   1ebcd:	add    BYTE PTR [edi+0x0],ch
   1ebd0:	inc    ebx
   1ebd1:	add    BYTE PTR [edx+0x0],dh
   1ebd4:	add    BYTE PTR gs:[ecx+0x0],ah
   1ebd8:	je     0x1ebda
   1ebda:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1ebdf:	add    BYTE PTR [esi+0x0],dh
   1ebe2:	imul   eax,DWORD PTR [eax],0x650063
   1ebe8:	add    BYTE PTR [eax],al
   1ebea:	push   ebx
   1ebeb:	add    BYTE PTR [ebp+0x0],ah
   1ebee:	inc    ebx
   1ebef:	add    BYTE PTR [edx+0x0],dh
   1ebf2:	add    BYTE PTR gs:[ecx+0x0],ah
   1ebf6:	je     0x1ebf8
   1ebf8:	add    BYTE PTR gs:[ebx+0x0],al
   1ebfc:	ins    BYTE PTR es:[edi],dx
   1ebfd:	add    BYTE PTR [ecx+0x0],ch
   1ec00:	add    BYTE PTR gs:[esi+0x0],ch
   1ec04:	je     0x1ec06
   1ec06:	push   ebx
   1ec07:	add    BYTE PTR [ebp+0x0],ah
   1ec0a:	arpl   WORD PTR [eax],ax
   1ec0c:	jne    0x1ec0e
   1ec0e:	jb     0x1ec10
   1ec10:	imul   eax,DWORD PTR [eax],0x790074
   1ec16:	add    BYTE PTR [eax],al
   1ec18:	dec    ebx
   1ec19:	add    BYTE PTR [ebp+0x0],ah
   1ec1c:	push   ecx
   1ec1d:	add    BYTE PTR [ebp+0x0],dh
   1ec20:	add    BYTE PTR gs:[edx+0x0],dh
   1ec24:	jns    0x1ec26
   1ec26:	push   ebx
   1ec27:	add    BYTE PTR [ecx+0x0],bh
   1ec2a:	jae    0x1ec2c
   1ec2c:	je     0x1ec2e
   1ec2e:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec32:	push   esp
   1ec33:	add    BYTE PTR [ecx+0x0],ch
   1ec36:	ins    DWORD PTR es:[edi],dx
   1ec37:	add    BYTE PTR [ebp+0x0],ah
   1ec3a:	add    BYTE PTR [eax],al
   1ec3c:	pop    edx
   1ec3d:	add    BYTE PTR [edi+0x0],dh
   1ec40:	dec    ebp
   1ec41:	add    BYTE PTR [ecx+0x0],ah
   1ec44:	jo     0x1ec46
   1ec46:	push   esi
   1ec47:	add    BYTE PTR [ecx+0x0],ch
   1ec4a:	add    BYTE PTR gs:[edi+0x0],dh
   1ec4e:	dec    edi
   1ec4f:	add    BYTE PTR [esi+0x0],ah
   1ec52:	push   ebx
   1ec53:	add    BYTE PTR [ebp+0x0],ah
   1ec56:	arpl   WORD PTR [eax],ax
   1ec58:	je     0x1ec5a
   1ec5a:	imul   eax,DWORD PTR [eax],0x6e006f
   1ec60:	add    BYTE PTR [eax],al
   1ec62:	pop    edx
   1ec63:	add    BYTE PTR [edi+0x0],dh
   1ec66:	inc    ebx
   1ec67:	add    BYTE PTR [edx+0x0],dh
   1ec6a:	add    BYTE PTR gs:[ecx+0x0],ah
   1ec6e:	je     0x1ec70
   1ec70:	add    BYTE PTR gs:[ebx+0x0],dl
   1ec74:	add    BYTE PTR gs:[ebx+0x0],ah
   1ec78:	je     0x1ec7a
   1ec7a:	imul   eax,DWORD PTR [eax],0x6e006f
   1ec80:	add    BYTE PTR [eax],al
   1ec82:	pop    edx
   1ec83:	add    BYTE PTR [edi+0x0],dh
   1ec86:	push   ebp
   1ec87:	add    BYTE PTR [esi+0x0],ch
   1ec8a:	ins    DWORD PTR es:[edi],dx
   1ec8b:	add    BYTE PTR [ecx+0x0],ah
   1ec8e:	jo     0x1ec90
   1ec90:	push   esi
   1ec91:	add    BYTE PTR [ecx+0x0],ch
   1ec94:	add    BYTE PTR gs:[edi+0x0],dh
   1ec98:	dec    edi
   1ec99:	add    BYTE PTR [esi+0x0],ah
   1ec9c:	push   ebx
   1ec9d:	add    BYTE PTR [ebp+0x0],ah
   1eca0:	arpl   WORD PTR [eax],ax
   1eca2:	je     0x1eca4
   1eca4:	imul   eax,DWORD PTR [eax],0x6e006f
   1ecaa:	add    BYTE PTR [eax],al
   1ecac:	dec    ebx
   1ecad:	add    BYTE PTR [ebp+0x0],ah
   1ecb0:	dec    ecx
   1ecb1:	add    BYTE PTR [esi+0x0],ch
   1ecb4:	imul   eax,DWORD PTR [eax],0x690074
   1ecba:	popa   
   1ecbb:	add    BYTE PTR [eax+eax*1+0x69],ch
   1ecbf:	add    BYTE PTR [edx+0x0],bh
   1ecc2:	add    BYTE PTR gs:[ebp+0x0],cl
   1ecc6:	jne    0x1ecc8
   1ecc8:	je     0x1ecca
   1ecca:	add    BYTE PTR gs:[eax+0x0],bh
   1ecce:	add    BYTE PTR [eax],al
   1ecd0:	dec    ebx
   1ecd1:	add    BYTE PTR [ebp+0x0],ah
   1ecd4:	push   edi
   1ecd5:	add    BYTE PTR [ecx+0x0],ah
   1ecd8:	imul   eax,DWORD PTR [eax],0x460074
   1ecde:	outs   dx,DWORD PTR ds:[esi]
   1ecdf:	add    BYTE PTR [edx+0x0],dh
   1ece2:	push   ebx
   1ece3:	add    BYTE PTR [ecx+0x0],ch
   1ece6:	outs   dx,BYTE PTR ds:[esi]
   1ece7:	add    BYTE PTR [edi+0x0],ah
   1ecea:	ins    BYTE PTR es:[edi],dx
   1eceb:	add    BYTE PTR [ebp+0x0],ah
   1ecee:	dec    edi
   1ecef:	add    BYTE PTR [edx+0x0],ah
   1ecf2:	push   0x0
   1ecf4:	add    BYTE PTR gs:[ebx+0x0],ah
   1ecf8:	je     0x1ecfa
   1ecfa:	add    BYTE PTR [eax],al
   1ecfc:	dec    ebx
   1ecfd:	add    BYTE PTR [ebp+0x0],ah
   1ed00:	push   edx
   1ed01:	add    BYTE PTR [ebp+0x0],ah
   1ed04:	ins    BYTE PTR es:[edi],dx
   1ed05:	add    BYTE PTR [ebp+0x0],ah
   1ed08:	popa   
   1ed09:	add    BYTE PTR [ebx+0x0],dh
   1ed0c:	add    BYTE PTR gs:[ebp+0x0],cl
   1ed10:	jne    0x1ed12
   1ed12:	je     0x1ed14
   1ed14:	add    BYTE PTR gs:[eax+0x0],bh
   1ed18:	add    BYTE PTR [eax],al
   1ed1a:	push   eax
   1ed1b:	add    BYTE PTR [ebx+0x0],dh
   1ed1e:	dec    esp
   1ed1f:	add    BYTE PTR [edi+0x0],ch
   1ed22:	outs   dx,DWORD PTR ds:[esi]
   1ed23:	add    BYTE PTR [ebx+0x0],ch
   1ed26:	jne    0x1ed28
   1ed28:	jo     0x1ed2a
   1ed2a:	push   eax
   1ed2b:	add    BYTE PTR [edx+0x0],dh
   1ed2e:	outs   dx,DWORD PTR ds:[esi]
   1ed2f:	add    BYTE PTR [ebx+0x0],ah
   1ed32:	add    BYTE PTR gs:[ebx+0x0],dh
   1ed36:	jae    0x1ed38
   1ed38:	inc    edx
   1ed39:	add    BYTE PTR [ecx+0x0],bh
   1ed3c:	push   eax
   1ed3d:	add    BYTE PTR [edx+0x0],dh
   1ed40:	outs   dx,DWORD PTR ds:[esi]
   1ed41:	add    BYTE PTR [ebx+0x0],ah
   1ed44:	add    BYTE PTR gs:[ebx+0x0],dh
   1ed48:	jae    0x1ed4a
   1ed4a:	dec    ecx
   1ed4b:	add    BYTE PTR [eax+eax*1+0x0],ah
   1ed4f:	add    BYTE PTR [ebx+0x0],cl
   1ed52:	add    BYTE PTR gs:[edi+0x0],al
   1ed56:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1ed5b:	add    BYTE PTR [ebp+0x0],dh
   1ed5e:	jb     0x1ed60
   1ed60:	jb     0x1ed62
   1ed62:	add    BYTE PTR gs:[esi+0x0],ch
   1ed66:	je     0x1ed68
   1ed68:	push   esp
   1ed69:	add    BYTE PTR [eax+0x0],ch
   1ed6c:	jb     0x1ed6e
   1ed6e:	add    BYTE PTR gs:[ecx+0x0],ah
   1ed72:	add    BYTE PTR fs:[eax],al
   1ed75:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1ed79:	add    BYTE PTR [ecx],cl
   1ed7b:	add    BYTE PTR ds:0xe1000000,dl
   1ed81:	sub    DWORD PTR [edi+0x7f],ebx
   1ed84:	dec    edi
   1ed85:	jle    0x1ed7f
   1ed87:	test   DWORD PTR [esi],0xbc71312c
   1ed8d:	xor    eax,0x616fc0dc
   1ed92:	xor    DWORD PTR [ebx+0x3],0xffffffcd
   1ed96:	out    dx,eax
   1ed97:	imul   edi,DWORD PTR [edi+0x29642e48],0xffffff92
   1ed9e:	std    
   1ed9f:	ss xchg esp,eax
   1eda1:	inc    ebp
   1eda2:	int    0x50
   1eda4:	jae    0x1eda4
   1eda6:	lods   eax,DWORD PTR ds:[esi]
   1eda7:	adc    eax,DWORD PTR [eax]
   1eda9:	int3   
   1edaa:	push   ebx
   1edab:	add    BYTE PTR [edi],ah
   1edad:	add    BYTE PTR ds:0x6001300,dl
   1edb3:	add    BYTE PTR [eax],al
   1edb5:	add    bl,dh
   1edb7:	mov    dh,0x22
   1edb9:	aad    0x10
   1edbb:	jnp    0x1edcf
   1edbd:	popa   
   1edbe:	mov    al,0x10
   1edc0:	pop    ds
   1edc1:	sbb    dh,BYTE PTR ds:0xbf4dbc2f
   1edc7:	sub    al,0x45
   1edc9:	jmp    0xfbfa:0xe38c944a
   1edd0:	out    0x30,al
   1edd2:	jbe    0x1ee28
   1edd4:	cmc    
   1edd5:	push   0xd711f93d
   1edda:	pop    esi
   1eddb:	cmovbe edx,DWORD PTR [edi-0x61]
   1eddf:	rol    DWORD PTR [eax],cl
   1ede1:	xchg   DWORD PTR [edi+0x24004900],eax
   1ede7:	add    BYTE PTR [eax+eax*1],cl
   1edea:	push   es
   1edeb:	add    BYTE PTR [edx],al
   1eded:	add    BYTE PTR ds:0x15003100,dh
   1edf3:	add    BYTE PTR [eax+eax*1],bl
   1edf6:	add    BYTE PTR [eax],al
   1edf8:	xchg   edx,eax
   1edf9:	rep outs dx,DWORD PTR ds:[esi]
   1edfb:	test   eax,0xf1483b86
   1ee00:	push   es
   1ee01:	push   eax
   1ee02:	ret    
   1ee03:	mov    ebx,0xb33e1bd2
   1ee08:	ins    BYTE PTR es:[edi],dx
   1ee09:	out    0xa9,eax
   1ee0b:	xor    al,0xc5
   1ee0d:	lahf   
   1ee0e:	fcmovnb st,st(0)
   1ee10:	mov    ecx,0x91a64ea7
   1ee15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ee16:	nop
   1ee17:	aad    0x4
   1ee19:	sbb    BYTE PTR [ebx+0x60],ch
   1ee1c:	or     al,0xc6
   1ee1e:	pop    eax
   1ee1f:	lds    edx,FWORD PTR ss:[ecx+0x71]
   1ee23:	xor    ebx,DWORD PTR [ebp+0x3af7b086]
   1ee29:	cmp    DWORD PTR [eax],eax
   1ee2b:	mov    bl,0x20
   1ee2d:	arpl   WORD PTR [esi+edx*2],bp
   1ee30:	lods   eax,DWORD PTR ds:[esi]
   1ee31:	lea    eax,[edx]
   1ee33:	ins    DWORD PTR es:[edi],dx
   1ee34:	xchg   edx,eax
   1ee35:	out    0xd2,al
   1ee37:	add    BYTE PTR [esi],ch
   1ee39:	add    BYTE PTR [edx+0x0],cl
   1ee3c:	or     BYTE PTR [eax],al
   1ee3e:	add    BYTE PTR [eax],al
   1ee40:	add    BYTE PTR [eax],al
   1ee42:	fnstcw WORD PTR [edi]
   1ee44:	loop   0x1edf4
   1ee46:	jmp    0xba2:0x4d821af3
   1ee4d:	retf   
   1ee4e:	add    al,0xee
   1ee50:	pop    ecx
   1ee51:	mov    edi,0x88813763
   1ee56:	pop    ds
   1ee57:	xchg   ebp,eax
   1ee58:	rol    BYTE PTR [edx+0x3f],cl
   1ee5b:	mov    al,0xfc
   1ee5d:	push   ecx
   1ee5e:	js     0x1edeb
   1ee60:	in     eax,0xd7
   1ee62:	mov    al,ds:0xde616870
   1ee67:	xchg   ebx,eax
   1ee68:	sub    DWORD PTR [eax],eax
   1ee6a:	outs   dx,BYTE PTR ds:[esi]
   1ee6b:	add    BYTE PTR [edx],bl
   1ee6d:	add    BYTE PTR [eax],dl
   1ee6f:	add    BYTE PTR [eax],cl
   1ee71:	add    BYTE PTR [eax],al
   1ee73:	add    BYTE PTR [edx+0x0],al
   1ee76:	dec    edx
   1ee77:	add    BYTE PTR [eax],cl
   1ee79:	add    BYTE PTR [eax],al
   1ee7b:	add    BYTE PTR [eax],al
   1ee7d:	add    dl,cl
   1ee7f:	fisttp QWORD PTR [esi+0x6065cb1a]
   1ee85:	jb     0x1ee75
   1ee87:	(bad)  
   1ee88:	cs sbb al,0x4b
   1ee8b:	add    bh,BYTE PTR [esi+eax*2]
   1ee8e:	imul   ebx,DWORD PTR [eax],0x695e64f
   1ee94:	dec    ebx
   1ee95:	push   ebx
   1ee96:	pop    ecx
   1ee97:	mov    ds:0xe95128c2,eax
   1ee9c:	in     al,0x8
   1ee9e:	pop    ebx
   1ee9f:	and    BYTE PTR [eax],cl
   1eea1:	sbb    eax,0x7a10d937
   1eea6:	test   eax,0x996e41f3
   1eeab:	cs dec ebp
   1eead:	xor    bh,BYTE PTR [ebp+0x0]
   1eeb0:	inc    edx
   1eeb1:	daa    
   1eeb2:	add    BYTE PTR ds:0xbd62cc00,dl
   1eeb8:	jo     0x1eeaf
   1eeba:	jmp    0x1ee8a
   1eebc:	xchg   ebp,eax
   1eebd:	fs mov bh,0x2
   1eec0:	jo     0x1ee5b
   1eec2:	cmp    eax,0x934a45ef
   1eec7:	dec    ebp
   1eec8:	cli    
   1eec9:	sbb    DWORD PTR [ebp-0x23],0x53ce30a0
   1eed0:	xchg   ebp,eax
   1eed1:	ss pop ecx
   1eed3:	neg    DWORD PTR [edi]
   1eed5:	imul   edx,DWORD PTR [ebp+0x66],0x6b
   1eed9:	daa    
   1eeda:	push   edi
   1eedb:	cli    
   1eedc:	jl     0x1ee7e
   1eede:	mov    dl,0x7e
   1eee0:	(bad)  
   1eee1:	xor    eax,0x4cb64767
   1eee6:	not    DWORD PTR [edx]
   1eee8:	mov    bh,BYTE PTR [ebp-0x32]
   1eeeb:	mov    ecx,0xa2acce1f
   1eef0:	mov    bl,0xa6
   1eef2:	fld    QWORD PTR [eax]
   1eef5:	int3   
   1eef6:	push   ebx
   1eef7:	aas    
   1eef8:	or     DWORD PTR [eax],eax
   1eefa:	adc    eax,0xe46e4800
   1eeff:	dec    esi
   1ef00:	and    eax,0x354944b9
   1ef05:	fidiv  WORD PTR [ecx]
   1ef07:	sub    ch,0xc8
   1ef0a:	sub    al,0x92
   1ef0c:	sbb    eax,0x1d281518
   1ef11:	and    al,0xd8
   1ef13:	or     BYTE PTR [eax],dh
   1ef15:	arpl   WORD PTR [eax-0x456ccf12],sp
   1ef1b:	int    0x64
   1ef1d:	sbb    ebp,DWORD PTR fs:[ecx]
   1ef20:	xor    BYTE PTR [ebp-0x14292bc8],bh
   1ef26:	dec    edx
   1ef27:	jg     0x1ef32
   1ef29:	ucomiss xmm5,DWORD PTR [edx]
   1ef2c:	retf   0x3c61
   1ef2f:	mov    dh,0xd
   1ef31:	into   
   1ef32:	or     bh,bh
   1ef34:	mov    ds:0x6d79b4,al
   1ef39:	int3   
   1ef3a:	inc    ebx
   1ef3b:	xor    DWORD PTR [edi],edx
   1ef3d:	add    al,0x15
   1ef3f:	adc    DWORD PTR [ecx],esi
   1ef41:	cmp    al,0x1a
   1ef43:	pop    ss
   1ef44:	add    al,0x5
   1ef46:	add    ah,cl
   1ef48:	sub    eax,0x74fafa9a
   1ef4d:	sbb    eax,0x351cb6f0
   1ef52:	arpl   WORD PTR [esi],cx
   1ef54:	jmp    0xd88739a7
   1ef59:	sbb    al,0x65
   1ef5b:	mov    al,0x3b
   1ef5d:	ficomp WORD PTR [ebp+ecx*1-0x352e7d0f]
   1ef64:	xor    DWORD PTR [edx+0x52],esp
   1ef67:	pop    ebx
   1ef68:	xor    ah,BYTE PTR [ecx+0x63]
   1ef6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ef6c:	into   
   1ef6d:	pop    ss
   1ef6e:	bound  eax,QWORD PTR [esi+0x19f471ba]
   1ef74:	fst    DWORD PTR [ecx-0x3218a2f9]
   1ef7a:	pop    edi
   1ef7b:	out    dx,eax
   1ef7c:	mov    ah,0x0
   1ef7e:	dec    esp
   1ef7f:	and    ecx,DWORD PTR [esi]
   1ef81:	add    eax,0x100b2528
   1ef86:	adc    edx,DWORD PTR [ebx]
   1ef88:	or     edi,DWORD PTR [eax]
   1ef8a:	add    ah,cl
   1ef8c:	adc    ebp,DWORD PTR [esi]
   1ef8e:	out    0x59,al
   1ef90:	jmp    0x1efd1
   1ef92:	lods   eax,DWORD PTR ds:[esi]
   1ef93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ef94:	xchg   edx,eax
   1ef95:	in     al,0x78
   1ef97:	cmp    bh,bl
   1ef99:	(bad)  
   1ef9a:	dec    ebx
   1ef9b:	test   eax,0xf42fa9a9
   1efa0:	outs   dx,DWORD PTR ds:[esi]
   1efa1:	mov    DWORD PTR [ebx+0x6edda057],esp
   1efa7:	mov    esi,0x94d43e4b
   1efac:	ret    0xf8b9
   1efaf:	or     eax,0xcc007fbd
   1efb4:	dec    esp
   1efb5:	and    ecx,DWORD PTR [esi]
   1efb7:	add    eax,0x100b2528
   1efbc:	adc    edx,DWORD PTR [ebx]
   1efbe:	or     ebp,DWORD PTR [esi]
   1efc0:	add    ah,cl
   1efc2:	xchg   BYTE PTR cs:0xa7a18052,dh
   1efc9:	rol    BYTE PTR [ebx-0x4a2c735f],cl
   1efcf:	test   ch,0x7c
   1efd2:	sbb    al,BYTE PTR [ecx]
   1efd4:	sub    ch,BYTE PTR [ecx+0xa]
   1efd7:	adc    DWORD PTR [ecx+0x59],esi
   1efda:	add    BYTE PTR [edx-0x1f882f05],ah
   1efe0:	jl     0x1ef89
   1efe2:	mov    ebx,0xd1077189
   1efe7:	mov    esp,0x1aa87587
   1efec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1efed:	jge    0x1f05b
   1efef:	aas    
   1eff0:	adc    bl,BYTE PTR [esi-0x51]
   1eff3:	jae    0x1f060
   1eff5:	xchg   ecx,eax
   1eff6:	aad    0xaf
   1eff8:	hlt    
   1eff9:	xor    eax,0xc17f7b
   1effe:	imul   eax,DWORD PTR [eax],0xe
   1f001:	add    BYTE PTR [edi],dl
   1f003:	add    BYTE PTR [eax+eax*1],bl
   1f006:	or     eax,DWORD PTR [eax]
   1f008:	or     DWORD PTR [eax],eax
   1f00a:	pop    edi
   1f00b:	add    BYTE PTR [ecx],al
   1f00d:	add    BYTE PTR [eax+eax*1],bl
   1f010:	dec    edx
   1f011:	add    BYTE PTR [eax],cl
   1f013:	add    BYTE PTR [eax],al
   1f015:	add    BYTE PTR [eax],al
   1f017:	add    BYTE PTR [edi],dl
   1f019:	fsubr  QWORD PTR [esi+edi*8+0x7faa090d]
   1f020:	mov    ebp,0xeed98f4
   1f025:	ret    0x4e7
   1f028:	fwait
   1f029:	adc    ecx,esi
   1f02b:	ins    BYTE PTR es:[edi],dx
   1f02c:	es out 0xe0,al
   1f02f:	pop    esp
   1f031:	xor    esp,esi
   1f033:	popa   
   1f034:	out    dx,al
   1f035:	imul   ebx,DWORD PTR [edi+0x70],0x4358b7c1
   1f03c:	ss inc esp
   1f03e:	pop    esp
   1f03f:	mov    WORD PTR [eax+0x7a],cs
   1f042:	dec    esp
   1f043:	call   0x6c35:0xbf569d7c
   1f04a:	out    dx,al
   1f04b:	jne    0x1f0bb
   1f04d:	or     dl,cl
   1f04f:	pop    DWORD PTR [eax+0x101a6e00]
   1f055:	or     BYTE PTR [eax],al
   1f057:	inc    edx
   1f058:	dec    edx
   1f059:	or     BYTE PTR [eax],al
   1f05b:	add    BYTE PTR [ebx],bl
   1f05d:	add    al,0xa3
   1f05f:	leave  
   1f060:	push   ebx
   1f061:	mov    ah,dl
   1f063:	mov    eax,0x7ea46d08
   1f068:	xor    dl,BYTE PTR [edi]
   1f06a:	xor    ecx,DWORD PTR [ebx+0x6d]
   1f06d:	aad    0x51
   1f06f:	loop   0x1f080
   1f071:	add    ebp,DWORD PTR [esi+edx*2+0x7f9e9c85]
   1f078:	mov    ebp,0x25c9ed04
   1f07d:	sbb    esp,DWORD PTR [ebp+ebx*8-0x5c]
   1f081:	pushf  
   1f082:	ds out dx,eax
   1f084:	leave  
   1f085:	or     DWORD PTR [edx],esp
   1f087:	fild   WORD PTR [ebx]
   1f089:	mov    ebp,0xc90c0f78
   1f08e:	mov    bh,0xe7
   1f090:	dec    edx
   1f091:	dec    esi
   1f092:	cwde   
   1f093:	add    BYTE PTR [eax+eax*1+0xf],bl
   1f097:	add    BYTE PTR [edx],ch
   1f099:	add    BYTE PTR [edx],cl
   1f09b:	add    BYTE PTR [edi],al
   1f09d:	add    BYTE PTR [ecx],dl
   1f09f:	add    BYTE PTR [eax],cl
   1f0a1:	add    BYTE PTR [edi],bh
   1f0a3:	add    BYTE PTR ds:0x1b000000,bh
   1f0a9:	add    BYTE PTR [eax],ch
   1f0ab:	add    BYTE PTR [edi],ch
   1f0ad:	add    BYTE PTR [edx],cl
   1f0af:	add    BYTE PTR [edx],cl
   1f0b1:	add    BYTE PTR [edi],al
   1f0b3:	add    BYTE PTR [ecx],dl
   1f0b5:	add    BYTE PTR [eax],cl
   1f0b7:	add    BYTE PTR [esi+0x0],bl
   1f0ba:	add    DWORD PTR [eax],eax
   1f0bc:	outs   dx,BYTE PTR ds:[esi]
   1f0bd:	add    BYTE PTR [eax],al
   1f0bf:	add    dl,dh
   1f0c1:	retf   0x834
   1f0c4:	js     0x1f046
   1f0c6:	inc    esi
   1f0c7:	cmp    BYTE PTR [ebx-0x7a360d6d],ch
   1f0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1f0ce:	pop    edx
   1f0cf:	das    
   1f0d0:	cmp    dh,bl
   1f0d2:	jno    0x1f09d
   1f0d4:	pusha  
   1f0d5:	mov    esi,0x4eda118
   1f0da:	pop    ebp
   1f0db:	pop    ss
   1f0dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1f0dd:	cmc    
   1f0de:	pop    ecx
   1f0df:	enter  0x89,0xab
   1f0e3:	ins    BYTE PTR es:[edi],dx
   1f0e4:	repz pop eax
   1f0e6:	jl     0x1f10c
   1f0e8:	jns    0x1f07b
   1f0ea:	retf   
   1f0eb:	loope  0x1f096
   1f0ed:	cmp    cl,BYTE PTR [ecx+0x34]
   1f0f0:	push   esi
   1f0f1:	push   esp
   1f0f2:	ror    BYTE PTR [edi],1
   1f0f4:	sbb    BYTE PTR [ebp-0x47],bh
   1f0f7:	xchg   DWORD PTR [ebp-0x22],ebx
   1f0fa:	mov    ds:0xdf2206b4,al
   1f0ff:	rcr    esi,1
   1f101:	pop    ds
   1f102:	mov    edi,0x52ab95b3
   1f107:	fnstsw WORD PTR [edx]
   1f109:	xor    ebp,0x6d
   1f10c:	mov    ch,0xa7
   1f10e:	pop    ds
   1f10f:	cmp    DWORD PTR [esi-0x5bff07e3],esi
   1f115:	adc    al,0x9a
   1f117:	pop    es
   1f118:	mov    dh,0x52
   1f11a:	xor    DWORD PTR [esi+0x5edfbe1b],edx
   1f120:	loope  0x1f0bd
   1f122:	aaa    
   1f123:	sbb    edi,DWORD PTR [edi]
   1f125:	mov    DWORD PTR [eax],ebx
   1f127:	xor    ah,BYTE PTR [edi-0x62469d24]
   1f12d:	mov    esp,0xfcae031e
   1f132:	and    BYTE PTR [esi+0x14],cl
   1f135:	mov    edx,0x3ec6ed58
   1f13a:	hlt    
   1f13b:	in     al,dx
   1f13c:	scas   eax,DWORD PTR es:[edi]
   1f13d:	sub    eax,0x232ce057
   1f142:	jl     0x1f144
   1f144:	add    BYTE PTR cs:[ebp+0x0],bl
   1f148:	or     al,BYTE PTR [eax]
   1f14a:	or     al,BYTE PTR [eax]
   1f14c:	add    BYTE PTR [eax],al
   1f14e:	stos   DWORD PTR es:[edi],eax
   1f14f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1f150:	adc    eax,ecx
   1f152:	and    eax,0x924656ed
   1f157:	lods   al,BYTE PTR ds:[esi]
   1f158:	dec    esp
   1f159:	enter  0xee8f,0x21
   1f15d:	fsubp  st(2),st
   1f15f:	adc    BYTE PTR [edx-0x5],al
   1f162:	ss inc ecx
   1f164:	daa    
   1f165:	sub    DWORD PTR [ecx-0x7d],edi
   1f168:	xchg   esp,eax
   1f169:	inc    ecx
   1f16a:	pushf  
   1f16b:	popf   
   1f16c:	pop    edx
   1f16d:	or     edi,DWORD PTR [esp+eax*8+0x7b6b85d1]
   1f174:	inc    ecx
   1f175:	add    BYTE PTR [eax+eax*1+0xf],bl
   1f179:	add    BYTE PTR [edx],ch
   1f17b:	add    BYTE PTR [edx],cl
   1f17d:	add    BYTE PTR [edi],al
   1f17f:	add    BYTE PTR [ecx],dl
   1f181:	add    BYTE PTR [eax],cl
   1f183:	add    BYTE PTR [edi],bh
   1f185:	add    BYTE PTR ds:0x1b000000,bh
   1f18b:	add    BYTE PTR [eax],ch
   1f18d:	add    BYTE PTR [edi],ch
   1f18f:	add    BYTE PTR [edx],cl
   1f191:	add    BYTE PTR [edx],cl
   1f193:	add    BYTE PTR [edi],al
   1f195:	add    BYTE PTR [ecx],dl
   1f197:	add    BYTE PTR [eax],cl
   1f199:	add    BYTE PTR [esi+0x0],bl
   1f19c:	add    DWORD PTR [eax],eax
   1f19e:	outs   dx,BYTE PTR ds:[esi]
   1f19f:	add    BYTE PTR [eax],bh
   1f1a1:	add    BYTE PTR [esi],dl
   1f1a3:	add    BYTE PTR [ebx],bl
   1f1a5:	add    BYTE PTR [edi],bl
   1f1a7:	add    BYTE PTR [ebx],dl
   1f1a9:	add    BYTE PTR [edi],dl
   1f1ab:	add    BYTE PTR [ecx],al
   1f1ad:	add    BYTE PTR [edi],ch
   1f1af:	add    BYTE PTR [eax],al
   1f1b1:	add    BYTE PTR [edi],bl
   1f1b3:	inc    ecx
   1f1b4:	imul   eax,DWORD PTR [ebx],0x49
   1f1b7:	jne    0x1f1c5
   1f1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1f1ba:	outs   dx,DWORD PTR ds:[esi]
   1f1bb:	dec    ebx
   1f1bc:	es repnz nop
   1f1bf:	dec    ebp
   1f1c0:	fwait
   1f1c1:	(bad)  
   1f1c2:	iret   
   1f1c3:	cmp    al,0x7d
   1f1c5:	inc    DWORD PTR [ebp*2+0x4b29b020]
   1f1cc:	sub    eax,0xb85cd233
   1f1d1:	and    al,0x84
   1f1d3:	jmp    0x6049aa40
   1f1d8:	cs pop edi
   1f1da:	ins    DWORD PTR es:[edi],dx
   1f1db:	(bad)  
   1f1dc:	dec    esp
   1f1dd:	jl     0x1f1a1
   1f1df:	push   es
   1f1e0:	and    ebx,ebp
   1f1e2:	retf   
   1f1e3:	or     DWORD PTR [edx+0x5529057],esp
   1f1e9:	sub    ebx,ecx
   1f1eb:	out    0x35,eax
   1f1ed:	pushf  
   1f1ee:	add    ah,cl
   1f1f0:	pop    esp
   1f1f1:	add    BYTE PTR [edi],cl
   1f1f3:	add    BYTE PTR [edx],ch
   1f1f5:	add    BYTE PTR [edx],cl
   1f1f7:	add    BYTE PTR [edi],al
   1f1f9:	add    BYTE PTR [ecx],dl
   1f1fb:	add    BYTE PTR [eax],cl
   1f1fd:	add    BYTE PTR [edi],bh
   1f1ff:	add    BYTE PTR ds:0x1b000000,bh
   1f205:	add    BYTE PTR [eax],al
   1f207:	add    BYTE PTR [edi],bl
   1f209:	xchg   esp,eax
   1f20a:	ds inc ebp
   1f20c:	mov    edx,?
   1f20e:	cmp    eax,0x8e882366
   1f213:	add    bh,bl
   1f215:	dec    ebp
   1f216:	rol    DWORD PTR [edx],cl
   1f218:	out    0x7b,eax
   1f21a:	out    dx,al
   1f21b:	jmp    0x7d443218
   1f220:	adc    al,0xcd
   1f222:	mov    al,BYTE PTR [esi-0x44]
   1f225:	mov    ds:0x8eb6fe91,al
   1f22a:	xor    al,0x7e
   1f22c:	sbb    edx,DWORD PTR [ecx+0x5809e111]
   1f232:	and    ebp,esi
   1f234:	push   eax
   1f235:	into   
   1f236:	nop
   1f237:	adc    eax,0xcc008a4c
   1f23c:	pop    esp
   1f23d:	add    BYTE PTR [esi],cl
   1f23f:	add    BYTE PTR [edi],dh
   1f241:	add    BYTE PTR [edx],al
   1f243:	add    BYTE PTR [esi],cl
   1f245:	add    BYTE PTR [edx],bl
   1f247:	add    BYTE PTR [edi],al
   1f249:	add    BYTE PTR [esi],al
   1f24b:	add    BYTE PTR [ebx],cl
   1f24d:	add    BYTE PTR ds:0x2c001100,ah
   1f253:	add    BYTE PTR [edx],al
   1f255:	add    BYTE PTR [ebx],cl
   1f257:	add    BYTE PTR [ecx],al
   1f259:	add    BYTE PTR [edi],al
   1f25b:	add    BYTE PTR [ebx],cl
   1f25d:	add    BYTE PTR [ecx],bh
   1f25f:	add    BYTE PTR [edi],cl
   1f261:	add    BYTE PTR [edx],cl
   1f263:	add    BYTE PTR [edx],cl
   1f265:	add    BYTE PTR [edi],al
   1f267:	add    BYTE PTR [ecx],dl
   1f269:	add    BYTE PTR [eax],cl
   1f26b:	add    BYTE PTR [ecx],dl
   1f26d:	add    BYTE PTR [edi],bl
   1f26f:	add    BYTE PTR [esi],dh
   1f271:	add    BYTE PTR [edi],al
   1f273:	add    BYTE PTR [eax],al
   1f275:	add    BYTE PTR [edi],dl
   1f277:	add    BYTE PTR [ebx],cl
   1f279:	add    BYTE PTR [edx],bl
   1f27b:	add    BYTE PTR [edi],dh
   1f27d:	add    BYTE PTR [eax+eax*1],ch
   1f280:	add    DWORD PTR [eax],eax
   1f282:	sbb    al,BYTE PTR [eax]
   1f284:	push   es
   1f285:	add    BYTE PTR ds:0x3f000300,bl
   1f28b:	add    BYTE PTR [esi],dh
   1f28d:	add    BYTE PTR [ecx],dl
   1f28f:	add    BYTE PTR [eax],ch
   1f291:	add    BYTE PTR [edi],cl
   1f293:	add    BYTE PTR [esi],dh
   1f295:	add    BYTE PTR [edi],dl
   1f297:	add    BYTE PTR [eax+eax*1],al
   1f29a:	pop    ds
   1f29b:	add    BYTE PTR [edx],cl
   1f29d:	add    BYTE PTR [esi],al
   1f29f:	add    BYTE PTR [esi],dl
   1f2a1:	add    BYTE PTR [edi],ch
   1f2a3:	add    BYTE PTR [eax],al
   1f2a5:	add    al,dl
   1f2a7:	popa   
   1f2a8:	adc    DWORD PTR [edi+0x6fc45cf9],esp
   1f2ae:	xor    al,0x30
   1f2b0:	sbb    al,0xa9
   1f2b2:	fstp   TBYTE PTR es:[edx+0x777f4103]
   1f2b9:	dec    ecx
   1f2ba:	ja     0x1f2ef
   1f2bc:	jmp    0x1f275
   1f2be:	xchg   esp,eax
   1f2bf:	xor    al,0x66
   1f2c1:	out    dx,al
   1f2c2:	imul   edi,DWORD PTR [esi],0x9e8b24ad
   1f2c8:	sub    al,0x68
   1f2ca:	call   0xd538e583
   1f2cf:	pop    eax
   1f2d0:	add    ah,cl
   1f2d2:	ins    BYTE PTR es:[edi],dx
   1f2d3:	add    BYTE PTR [edi],bl
   1f2d5:	add    BYTE PTR [edx],dl
   1f2d7:	add    BYTE PTR [edx],dl
   1f2d9:	add    BYTE PTR [eax],al
   1f2db:	add    BYTE PTR [ebp+0x0],bl
   1f2de:	dec    ebx
   1f2df:	add    BYTE PTR ds:0x1d00,bl
   1f2e5:	add    BYTE PTR [ecx+0x75],cl
   1f2e8:	or     DWORD PTR [ebp+0x66],0x16
   1f2ec:	xchg   esp,eax
   1f2ed:	leave  
   1f2ee:	jb     0x1f31c
   1f2f0:	fwait
   1f2f1:	sbb    esp,DWORD PTR [ecx-0x28e9e200]
   1f2f7:	addr16 xchg ecx,eax
   1f2f9:	cld    
   1f2fa:	mov    cl,0x8f
   1f2fc:	jp     0x1f2c4
   1f2fe:	or     esi,edi
   1f300:	(bad)  
   1f302:	fstp   DWORD PTR ds:0x8eb6a533
   1f308:	xchg   esi,eax
   1f309:	lods   eax,DWORD PTR ds:[esi]
   1f30a:	push   ebp
   1f30b:	mov    BYTE PTR [ebp-0x36],al
   1f30e:	mov    edi,0x5a00856e
   1f313:	sub    eax,0x6163725
   1f318:	sbb    BYTE PTR [eax],cl
   1f31a:	xor    DWORD PTR [edx+ebx*1],edi
   1f31d:	pop    ss
   1f31e:	add    al,0x5
   1f320:	add    ah,cl
   1f322:	loope  0x1f2b9
   1f324:	xor    esp,ebx
   1f326:	(bad)  
   1f328:	rol    edx,0x5f
   1f32b:	lahf   
   1f32c:	retf   0xf00d
   1f32f:	mov    esp,0xe13af0eb
   1f334:	jle    0x1f3a3
   1f336:	jle    0x1f2cd
   1f338:	adc    eax,0x3f1be3d0
   1f33d:	sbb    ah,0xbf
   1f340:	pop    es
   1f341:	ins    BYTE PTR es:[edi],dx
   1f342:	mov    esp,0xff59a1b2
   1f347:	(bad)  
   1f349:	add    eax,0xa8bb0f13
   1f34e:	and    dl,BYTE PTR [edx]
   1f350:	repnz fs xor al,0x38
   1f354:	push   ebx
   1f355:	adc    BYTE PTR [esi-0xbd9a7a2],dl
   1f35b:	in     eax,dx
   1f35c:	lds    eax,FWORD PTR [ebp+0x3a4e0029]
   1f362:	and    esp,DWORD PTR ds:0x33111d1b
   1f368:	aas    
   1f369:	sbb    eax,DWORD PTR [esi]
   1f36b:	add    DWORD PTR [ecx*1+0x2082821],edx
   1f372:	sbb    eax,0x28cc000b
   1f377:	pop    edi
   1f378:	(bad)  
   1f379:	lock loopne 0x1f3e8
   1f37c:	ror    BYTE PTR [edx+0x3f7b3c1e],cl
   1f382:	jns    0x1f3a6
   1f384:	sbb    ch,BYTE PTR [edx]
   1f386:	and    BYTE PTR [ecx-0x42],ch
   1f389:	push   ebp
   1f38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1f38b:	mov    ?,WORD PTR [eax-0x64]
   1f38e:	outs   dx,BYTE PTR ds:[esi]
   1f38f:	jecxz  0x1f3ee
   1f391:	fnstenv [ebx]
   1f393:	mov    edx,0x31b8b31a
   1f398:	(bad)  
   1f399:	or     BYTE PTR [ecx+0x0],cl
   1f39c:	pop    edx
   1f39d:	sub    eax,0x1b1d2227
   1f3a2:	adc    DWORD PTR [esi],eax
   1f3a4:	pop    ss
   1f3a5:	and    bh,BYTE PTR [edi]
   1f3a7:	sbb    eax,DWORD PTR [esi]
   1f3a9:	add    DWORD PTR [ecx*1+0x2082821],edx
   1f3b0:	sbb    eax,0x9dcc000b
   1f3b5:	shl    esi,1
   1f3b7:	jp     0x1f3b1
   1f3b9:	adc    edi,DWORD PTR [eax+0x4e]
   1f3bc:	mov    ah,0x6a
   1f3be:	adc    BYTE PTR [edi-0x32],ah
   1f3c1:	xor    ecx,DWORD PTR [eax-0x19]
   1f3c4:	add    ebp,esp
   1f3c6:	aaa    
   1f3c7:	loopne 0x1f38c
   1f3c9:	push   ds
   1f3ca:	dec    ecx
   1f3cb:	cmc    
   1f3cc:	pop    ebp
   1f3cd:	out    dx,eax
   1f3ce:	call   0x68b66809
   1f3d3:	push   0xf709dedc
   1f3d8:	inc    BYTE PTR [eax]
   1f3da:	adc    esp,eax
   1f3dc:	lods   al,BYTE PTR ds:[esi]
   1f3dd:	jnp    0x1f423
   1f3df:	fnstenv [esi]
   1f3e1:	or     eax,0x8af58af6
   1f3e6:	and    BYTE PTR es:[eax-0x13],al
   1f3ea:	dec    ebx
   1f3eb:	mov    edx,0xcff69ab6
   1f3f0:	clc    
   1f3f1:	sti    
   1f3f2:	popf   
   1f3f3:	inc    esi
   1f3f4:	leave  
   1f3f5:	leave  
   1f3f6:	xchg   ebp,eax
   1f3f7:	mov    ah,0x5c
   1f3f9:	xor    edx,esp
   1f3fb:	xor    ax,0xb4fd
   1f3ff:	push   edx
   1f400:	das    
   1f401:	ja     0x1f459
   1f403:	imul   BYTE PTR [edx-0x4e]
   1f406:	add    ah,cl
   1f408:	pop    esp
   1f409:	add    BYTE PTR [eax],bl
   1f40b:	add    BYTE PTR [ebx],ch
   1f40d:	add    BYTE PTR [eax+eax*1],bl
   1f410:	aaa    
   1f411:	add    BYTE PTR [ecx],ah
   1f413:	add    BYTE PTR [ebx],dl
   1f415:	add    BYTE PTR [edi],bl
   1f417:	add    BYTE PTR [edx],cl
   1f419:	add    BYTE PTR [esi],al
   1f41b:	add    BYTE PTR [esi],dl
   1f41d:	add    BYTE PTR [edi],ch
   1f41f:	add    BYTE PTR [ecx+0x0],bh
   1f422:	push   esi
   1f423:	add    BYTE PTR [eax],al
   1f425:	add    ah,dh
   1f427:	fnsave [edi+0x2c]
   1f42a:	pop    edi
   1f42b:	rol    eax,1
   1f42d:	nop
   1f42e:	xlat   BYTE PTR ds:[ebx]
   1f42f:	aas    
   1f430:	xor    eax,0xfee455e5
   1f435:	xor    eax,0xa1ee4084
   1f43a:	jg     0x1f3da
   1f43c:	(bad)  
   1f43e:	cmp    eax,0xd39b91cf
   1f443:	adc    al,0x9b
   1f445:	inc    ebp
   1f446:	inc    edi
   1f447:	mov    BYTE PTR [edx],0x1c
   1f44a:	(bad)  
   1f44b:	dec    esi
   1f44c:	test   al,0x13
   1f44e:	sti    
   1f44f:	push   ebx
   1f450:	adc    eax,0x5ef3d478
   1f455:	adc    eax,0xff486ced
   1f45a:	mov    bl,0x8
   1f45c:	xor    al,0x5b
   1f45e:	out    dx,al
   1f45f:	adc    DWORD PTR [eax-0x5e],edi
   1f462:	cmp    al,0x0
   1f464:	pop    esp
   1f465:	add    BYTE PTR [eax],bl
   1f467:	add    BYTE PTR [ecx],ah
   1f469:	add    BYTE PTR [ebx],dl
   1f46b:	add    BYTE PTR [edi],bl
   1f46d:	add    BYTE PTR [edx],cl
   1f46f:	add    BYTE PTR [esi],al
   1f471:	add    BYTE PTR [ecx],bh
   1f473:	add    BYTE PTR [ecx+0x0],bh
   1f476:	push   esi
   1f477:	add    BYTE PTR [eax],al
   1f479:	add    BYTE PTR [ebx-0x33],bh
   1f47c:	jmp    0x1f469
   1f47e:	enter  0xea4d,0x8e
   1f482:	and    ecx,DWORD PTR [eax-0x51]
   1f485:	outs   dx,DWORD PTR ds:[esi]
   1f486:	out    dx,al
   1f487:	sub    eax,0xe3d3d071
   1f48c:	in     eax,dx
   1f48d:	aam    0x2f
   1f48f:	jbe    0x1f4a5
   1f491:	xor    eax,0x7b4c2f98
   1f496:	in     eax,dx
   1f497:	sub    bh,bh
   1f499:	iret   
   1f49a:	mov    WORD PTR [esi+0x75],gs
   1f49d:	pusha  
   1f49e:	add    ah,cl
   1f4a0:	push   ebx
   1f4a1:	add    BYTE PTR [ecx+0x0],bh
   1f4a4:	jae    0x1f4a6
   1f4a6:	inc    ebp
   1f4a7:	add    BYTE PTR [esi+0x0],dh
   1f4aa:	je     0x1f4ac
   1f4ac:	inc    ebx
   1f4ad:	add    BYTE PTR [eax],al
   1f4af:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1f4b3:	adc    ebx,DWORD PTR [edi]
   1f4b5:	or     al,BYTE PTR [esi]
   1f4b7:	cmp    DWORD PTR [eax],eax
   1f4b9:	int3   
   1f4ba:	cs cs mov ebx,0xb74823e8
   1f4c1:	fwait
   1f4c2:	inc    eax
   1f4c3:	std    
   1f4c4:	in     eax,dx
   1f4c5:	xor    dh,BYTE PTR [ebx+0x3b2b7625]
   1f4cb:	inc    edx
   1f4cc:	bound  esi,QWORD PTR [ebx+0x73]
   1f4cf:	or     eax,0xa0e3ef26
   1f4d4:	ds xchg edi,eax
   1f4d6:	cld    
   1f4d7:	sahf   
   1f4d8:	bound  ebp,QWORD PTR [edx]
   1f4da:	push   eax
   1f4db:	popa   
   1f4dc:	arpl   si,sp
   1f4de:	mov    cl,0x13
   1f4e0:	je     0x1f4d4
   1f4e2:	not    DWORD PTR [edx]
   1f4e4:	adc    eax,0xb3e43df0
   1f4e9:	pusha  
   1f4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1f4eb:	mov    esp,DWORD PTR [esi]
   1f4ed:	pop    edi
   1f4ee:	fdivr  DWORD PTR [edx]
   1f4f0:	cmp    DWORD PTR [ebx+0x1742d519],esi
   1f4f6:	mov    al,ds:0x5c00
   1f4fb:	add    BYTE PTR [edx+0x0],dh
   1f4fe:	jb     0x1f500
   1f500:	add    BYTE PTR [eax],al
   1f502:	dec    esi
   1f503:	add    cl,ch
   1f505:	fisub  DWORD PTR [edx-0x2ffb8d52]
   1f50b:	outs   dx,BYTE PTR ds:[esi]
   1f50c:	pop    ecx
   1f50d:	mov    cl,0xc1
   1f50f:	fwait
   1f510:	lea    edx,[edi-0x32]
   1f513:	adc    cl,BYTE PTR [edx+eax*2+0x2a]
   1f517:	pushf  
   1f518:	jmp    0x1f515
   1f51a:	cmp    BYTE PTR [edi-0x21],0x3e
   1f51e:	mov    esp,0x7b387da
   1f523:	or     al,0x86
   1f525:	in     eax,0x75
   1f527:	adc    al,0x11
   1f529:	loop   0x1f580
   1f52b:	fdiv   DWORD PTR [ecx-0x74]
   1f52e:	push   edi
   1f52f:	shl    BYTE PTR [esi],cl
   1f531:	xchg   DWORD PTR [edx+0x9],eax
   1f534:	xor    ch,bl
   1f536:	stos   DWORD PTR es:[edi],eax
   1f537:	sti    
   1f538:	lock cmp eax,0x5ccc00
   1f53e:	arpl   WORD PTR [ebx+0x0],sp
   1f541:	int3   
   1f542:	test   BYTE PTR [ecx],dl
   1f544:	scas   eax,DWORD PTR es:[edi]
   1f545:	das    
   1f546:	mov    cl,0x7d
   1f548:	inc    ebp
   1f549:	xor    BYTE PTR [ecx+0x3cc1fab8],0x47
   1f550:	(bad)  
   1f551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1f552:	mov    ds:0x38f0e7e4,al
   1f557:	repz popf 
   1f559:	js     0x1f537
   1f55b:	fwait
   1f55c:	jo     0x1f5a5
   1f55e:	sub    BYTE PTR [ebp+ebx*2+0x5b544629],dl
   1f565:	in     eax,0x46
   1f567:	mov    edx,0x8b0d7b20
   1f56c:	rcr    BYTE PTR [eax],cl
   1f56e:	add    ah,cl
   1f570:	and    eax,0x5ccc0053
   1f575:	add    BYTE PTR [ebx+0x0],dh
   1f578:	jns    0x1f57a
   1f57a:	jae    0x1f57c
   1f57c:	je     0x1f57e
   1f57e:	add    BYTE PTR gs:[ebp+0x0],ch
   1f582:	jb     0x1f584
   1f584:	outs   dx,DWORD PTR ds:[esi]
   1f585:	add    BYTE PTR [edi+0x0],ch
   1f588:	je     0x1f58a
   1f58a:	pop    esp
   1f58b:	add    BYTE PTR [ebx+0x0],dh
   1f58e:	jns    0x1f590
   1f590:	jae    0x1f592
   1f592:	je     0x1f594
   1f594:	add    BYTE PTR gs:[ebp+0x0],ch
   1f598:	xor    eax,DWORD PTR [eax]
   1f59a:	xor    al,BYTE PTR [eax]
   1f59c:	pop    esp
   1f59d:	add    BYTE PTR ds:0x5300,ah
   1f5a3:	add    BYTE PTR [ecx],dh
   1f5a5:	xor    ch,BYTE PTR cs:[esi]
   1f5a8:	xor    eax,DWORD PTR [eax]
   1f5aa:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f5b1:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1f5b5:	outs   dx,BYTE PTR gs:[esi]
   1f5b7:	addr16 je 0x1f622
   1f5ba:	and    BYTE PTR [ebx+0x68],ah
   1f5bd:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f5c1:	int3   
   1f5c2:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f5c9:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1f5cd:	popa   
   1f5ce:	je     0x1f631
   1f5d0:	and    BYTE PTR [ebx+0x68],ah
   1f5d3:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f5d7:	int3   
   1f5d8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f5df:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f5e3:	je     0x1f646
   1f5e5:	outs   dx,BYTE PTR ds:[esi]
   1f5e6:	arpl   WORD PTR [ebp+0x20],sp
   1f5e9:	je     0x1f65a
   1f5eb:	outs   dx,DWORD PTR ds:[esi]
   1f5ec:	and    BYTE PTR [esi+0x61],ah
   1f5ef:	jb     0x1f611
   1f5f1:	bound  esp,QWORD PTR [ecx+0x63]
   1f5f4:	imul   eax,DWORD PTR [eax],0x69
   1f5f7:	outs   dx,BYTE PTR ds:[esi]
   1f5f8:	jbe    0x1f65b
   1f5fa:	ins    BYTE PTR es:[edi],dx
   1f5fb:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f603:	outs   dx,BYTE PTR ds:[esi]
   1f604:	arpl   WORD PTR [ebp+0x20],sp
   1f607:	arpl   WORD PTR [edi+0x64],bp
   1f60a:	add    BYTE PTR gs:[ecx+0x6e],ch
   1f60e:	jbe    0x1f671
   1f610:	ins    BYTE PTR es:[edi],dx
   1f611:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1f619:	popa   
   1f61a:	ins    BYTE PTR es:[edi],dx
   1f61b:	das    
   1f61c:	ins    BYTE PTR es:[edi],dx
   1f61d:	outs   dx,BYTE PTR gs:[esi]
   1f61f:	addr16 je 0x1f68a
   1f622:	and    BYTE PTR [ebx+0x6f],ah
   1f625:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1f62a:	jbe    0x1f68d
   1f62c:	ins    BYTE PTR es:[edi],dx
   1f62d:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f635:	outs   dx,BYTE PTR ds:[esi]
   1f636:	arpl   WORD PTR [ebp+0x73],sp
   1f639:	and    BYTE PTR [ebx+0x65],dh
   1f63c:	je     0x1f63e
   1f63e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f645:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1f649:	gs jb  0x1f6ad
   1f64c:	ins    BYTE PTR es:[edi],dx
   1f64d:	das    
   1f64e:	ins    BYTE PTR es:[edi],dx
   1f64f:	outs   dx,BYTE PTR gs:[esi]
   1f651:	addr16 je 0x1f6bc
   1f654:	jae    0x1f676
   1f656:	jae    0x1f6bd
   1f658:	je     0x1f65a
   1f65a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f661:	and    BYTE PTR [edx+0x69],ah
   1f664:	je     0x1f686
   1f666:	ins    BYTE PTR es:[edi],dx
   1f667:	outs   dx,BYTE PTR gs:[esi]
   1f669:	addr16 je 0x1f6d4
   1f66c:	and    BYTE PTR [edx+0x65],dh
   1f66f:	jo     0x1f6d6
   1f671:	popa   
   1f672:	je     0x1f674
   1f674:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f67b:	and    BYTE PTR [ebx+0x6f],ah
   1f67e:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1f684:	addr16 je 0x1f6ef
   1f687:	jae    0x1f6a9
   1f689:	jae    0x1f6f0
   1f68b:	je     0x1f68d
   1f68d:	int3   
   1f68e:	je     0x1f6ff
   1f690:	outs   dx,DWORD PTR ds:[esi]
   1f691:	and    BYTE PTR [ebp+0x61],ch
   1f694:	outs   dx,BYTE PTR ds:[esi]
   1f695:	jns    0x1f6b7
   1f697:	ins    BYTE PTR es:[edi],dx
   1f698:	outs   dx,BYTE PTR gs:[esi]
   1f69a:	addr16 je 0x1f705
   1f69d:	and    BYTE PTR [edi+0x72],ch
   1f6a0:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f6a4:	je     0x1f707
   1f6a6:	outs   dx,BYTE PTR ds:[esi]
   1f6a7:	arpl   WORD PTR [ebp+0x20],sp
   1f6aa:	jae    0x1f725
   1f6ac:	ins    DWORD PTR es:[edi],dx
   1f6ad:	bound  ebp,QWORD PTR [edi+0x6c]
   1f6b0:	jae    0x1f6b2
   1f6b2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f6b9:	and    BYTE PTR [ebx+0x74],dh
   1f6bc:	outs   dx,DWORD PTR ds:[esi]
   1f6bd:	jb     0x1f724
   1f6bf:	and    BYTE PTR fs:[edx+0x6c],ah
   1f6c3:	outs   dx,DWORD PTR ds:[esi]
   1f6c4:	arpl   WORD PTR [ebx+0x20],bp
   1f6c7:	ins    BYTE PTR es:[edi],dx
   1f6c8:	outs   dx,BYTE PTR gs:[esi]
   1f6ca:	addr16 je 0x1f735
   1f6cd:	jae    0x1f6cf
   1f6cf:	int3   
   1f6d0:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f6d7:	and    BYTE PTR [edx+0x6c],ah
   1f6da:	outs   dx,DWORD PTR ds:[esi]
   1f6db:	arpl   WORD PTR [ebx+0x20],bp
   1f6de:	je     0x1f759
   1f6e0:	jo     0x1f747
   1f6e2:	add    ah,cl
   1f6e4:	push   0x65646165
   1f6e9:	jb     0x1f70b
   1f6eb:	arpl   WORD PTR [edx+0x63],si
   1f6ee:	and    BYTE PTR [ebp+0x69],ch
   1f6f1:	jae    0x1f760
   1f6f3:	popa   
   1f6f4:	je     0x1f759
   1f6f6:	push   0x6b6e7500
   1f6fb:	outs   dx,BYTE PTR ds:[esi]
   1f6fc:	outs   dx,DWORD PTR ds:[esi]
   1f6fd:	ja     0x1f76d
   1f6ff:	and    BYTE PTR [eax+0x65],ch
   1f702:	popa   
   1f703:	fs gs jb 0x1f727
   1f707:	data16 ins BYTE PTR es:[edi],dx
   1f709:	popa   
   1f70a:	addr16 jae 0x1f72d
   1f70d:	jae    0x1f774
   1f70f:	je     0x1f711
   1f711:	int3   
   1f712:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f719:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1f71d:	gs popa 
   1f71f:	fs gs jb 0x1f743
   1f723:	arpl   WORD PTR [eax+0x65],bp
   1f726:	arpl   WORD PTR [ebx+0x0],bp
   1f729:	int3   
   1f72a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f731:	and    BYTE PTR [edi+0x69],dh
   1f734:	outs   dx,BYTE PTR ds:[esi]
   1f735:	outs   dx,DWORD PTR fs:[esi]
   1f737:	ja     0x1f759
   1f739:	jae    0x1f7a4
   1f73b:	jp     0x1f7a2
   1f73d:	add    BYTE PTR [ebp+0x6e],dh
   1f740:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1f744:	outs   dx,BYTE PTR ds:[esi]
   1f745:	and    BYTE PTR [ebx+0x6f],ah
   1f748:	ins    DWORD PTR es:[edi],dx
   1f749:	jo     0x1f7bd
   1f74b:	gs jae 0x1f7c1
   1f74e:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1f755:	.byte 0x68
   1f756:	outs   dx,DWORD PTR ds:[esi]
   1f757:	fs
	...

Disassembly of section INIT:

00078a00 <INIT>:
   78a00:	add    BYTE PTR [eax],al
   78a02:	add    BYTE PTR [eax],al
   78a04:	add    BYTE PTR [ecx+0x77b1c],ah
   78a0a:	mov    ecx,0xbb40e64e
   78a0f:	test   eax,eax
   78a11:	je     0x78a17
   78a13:	cmp    eax,ecx
   78a15:	jne    0x78a31
   78a17:	mov    eax,ds:0x1f848
   78a1c:	mov    eax,DWORD PTR [eax]
   78a1e:	xor    eax,0x77b1c
   78a23:	mov    ds:0x77b1c,eax
   78a28:	jne    0x78a31
   78a2a:	mov    eax,ecx
   78a2c:	mov    ds:0x77b1c,eax
   78a31:	not    eax
   78a33:	mov    ds:0x77b20,eax
   78a38:	ret    
   78a39:	mov    al,ds:0xec9fd758
   78a3e:	mov    edi,edi
   78a40:	push   ebp
   78a41:	mov    ebp,esp
   78a43:	call   0x78a05
   78a48:	pop    ebp
   78a49:	jmp    0x197a8
   78a4e:	int3   
   78a4f:	int3   
   78a50:	xchg   esp,eax
   78a51:	mov    al,BYTE PTR [esi]
	...
   78a5b:	add    BYTE PTR [edx],dh
   78a5d:	mov    WORD PTR [esi],es
   78a5f:	add    BYTE PTR [eax],cl
   78a61:	clc    
   78a62:	add    BYTE PTR [eax],al
   78a64:	mov    WORD PTR [edx+0x6],cs
   78a6a:	add    BYTE PTR [eax],al
   78a6c:	add    BYTE PTR [eax],al
   78a6e:	add    BYTE PTR [eax],al
   78a70:	push   esp
   78a71:	mov    WORD PTR [esi],es
   78a73:	add    BYTE PTR [eax],al
   78a75:	clc    
	...
   78a8a:	add    BYTE PTR [eax],al
   78a8c:	inc    eax
   78a8d:	mov    WORD PTR [esi],es
   78a8f:	add    BYTE PTR [eax],al
   78a91:	add    BYTE PTR [eax],al
   78a93:	add    BYTE PTR [eax],al
   78a95:	mov    eax,DWORD PTR [esi]
   78a97:	add    BYTE PTR [edx],cl
   78a99:	mov    eax,DWORD PTR [esi]
   78a9b:	add    BYTE PTR [ebx+ecx*4],dl
   78a9e:	push   es
   78a9f:	add    BYTE PTR [esi],bl
   78aa1:	mov    eax,DWORD PTR [esi]
   78aa3:	add    BYTE PTR [edx],bh
   78aa5:	mov    eax,DWORD PTR [esi]
   78aa7:	add    BYTE PTR [ebx+ecx*4+0x6],al
   78aab:	add    BYTE PTR [esi-0x75],cl
   78aae:	push   es
   78aaf:	add    BYTE PTR [esi-0x75],bl
   78ab2:	push   es
   78ab3:	add    BYTE PTR [ebx+ecx*4+0x6],dh
   78ab7:	add    BYTE PTR [eax-0x75fff975],al
   78abd:	mov    eax,DWORD PTR [esi]
   78abf:	add    BYTE PTR [edx-0x45fff975],ah
   78ac5:	mov    eax,DWORD PTR [esi]
   78ac7:	add    ah,cl
   78ac9:	mov    eax,DWORD PTR [esi]
   78acb:	add    al,ah
   78acd:	mov    eax,DWORD PTR [esi]
   78acf:	add    BYTE PTR [eax],al
   78ad1:	mov    WORD PTR [esi],es
   78ad3:	add    BYTE PTR [esp+ecx*4],dl
   78ad6:	push   es
   78ad7:	add    BYTE PTR [edx],ah
   78ad9:	mov    WORD PTR [esi],es
   78adb:	add    al,ch
   78add:	mov    al,BYTE PTR [esi]
   78adf:	add    BYTE PTR [esp+ecx*4+0x6],bl
   78ae3:	add    BYTE PTR [eax],al
   78ae5:	add    BYTE PTR [eax],al
   78ae7:	add    BYTE PTR [eax],dh
   78ae9:	add    ecx,DWORD PTR [edi+0x62]
   78aec:	inc    sp
   78aee:	gs jb  0x78b56
   78af1:	data16 gs jb 0x78b5a
   78af5:	outs   dx,BYTE PTR ds:[esi]
   78af6:	arpl   WORD PTR [ebp+0x4f],sp
   78af9:	bound  ebp,QWORD PTR [edx+0x65]
   78afc:	arpl   WORD PTR [eax+eax*1+0x0],si
   78b00:	jnp    0x78b07
   78b02:	pop    edi
   78b03:	popa   
   78b04:	ins    BYTE PTR es:[edi],dx
   78b05:	ins    BYTE PTR es:[edi],dx
   78b06:	ins    DWORD PTR es:[edi],dx
   78b07:	jne    0x78b75
   78b09:	add    BYTE PTR [ecx+0x5],bh
   78b0c:	pop    edi
   78b0d:	popa   
   78b0e:	ins    BYTE PTR es:[edi],dx
   78b0f:	ins    BYTE PTR es:[edi],dx
   78b10:	imul   esi,DWORD PTR fs:[esi+0x0],0x656d05a9
   78b18:	ins    DWORD PTR es:[edi],dx
   78b19:	jae    0x78b80
   78b1b:	je     0x78b1d
   78b1d:	add    BYTE PTR [ecx+0x476d4d02],ah
   78b23:	gs je  0x78b79
   78b26:	jns    0x78b9b
   78b28:	je     0x78b8f
   78b2a:	ins    DWORD PTR es:[edi],dx
   78b2b:	push   edx
   78b2c:	outs   dx,DWORD PTR ds:[esi]
   78b2d:	jne    0x78ba3
   78b2f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   78b36:	gs jae 0x78bac
   78b39:	add    bh,al
   78b3b:	add    eax,0x6e736377
   78b40:	arpl   WORD PTR [ecx+0x74],sp
   78b43:	add    BYTE PTR [edi+0x6d656d05],ah
   78b49:	arpl   WORD PTR [eax+0x79],si
   78b4c:	add    BYTE PTR [eax],al
   78b4e:	jne    0x78b50
   78b50:	inc    ebp
   78b51:	js     0x78ba5
   78b53:	popa   
   78b54:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78b5b:	jne    0x78bd0
   78b5d:	add    bl,ah
   78b5f:	add    DWORD PTR [ecx+0x6f],ecx
   78b62:	inc    bx
   78b64:	outs   dx,DWORD PTR ds:[esi]
   78b65:	ins    DWORD PTR es:[edi],dx
   78b66:	jo     0x78bd4
   78b68:	gs je  0x78bd0
   78b6b:	push   edx
   78b6c:	gs jno 0x78be4
   78b6f:	gs jae 0x78be6
   78b72:	add    BYTE PTR [eax],al
   78b74:	mov    ecx,0x70777305
   78b79:	jb     0x78be4
   78b7b:	outs   dx,BYTE PTR ds:[esi]
   78b7c:	je     0x78be4
   78b7e:	add    BYTE PTR [eax],al
   78b80:	lods   al,BYTE PTR ds:[esi]
   78b81:	add    eax,0x69727073
   78b86:	outs   dx,BYTE PTR ds:[esi]
   78b87:	je     0x78bef
   78b89:	add    BYTE PTR [ecx+0x0],al
   78b8c:	inc    ebp
   78b8d:	js     0x78bd0
   78b8f:	ins    BYTE PTR es:[edi],dx
   78b90:	ins    BYTE PTR es:[edi],dx
   78b91:	outs   dx,DWORD PTR ds:[esi]
   78b92:	arpl   WORD PTR [ecx+0x74],sp
   78b95:	gs push eax
   78b97:	outs   dx,DWORD PTR ds:[esi]
   78b98:	outs   dx,DWORD PTR ds:[esi]
   78b99:	ins    BYTE PTR es:[edi],dx
   78b9a:	push   edi
   78b9b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x6d006761
   78ba3:	add    cl,BYTE PTR [ebx+0x65]
   78ba6:	push   edi
   78ba7:	popa   
   78ba8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   78bb0:	ins    BYTE PTR es:[di],dx
   78bb2:	gs dec edi
   78bb4:	bound  ebp,QWORD PTR [edx+0x65]
   78bb7:	arpl   WORD PTR [eax+eax*1+0x42],si
   78bbb:	add    cl,BYTE PTR [ebx+0x65]
   78bbe:	push   edx
   78bbf:	gs ins BYTE PTR es:[edi],dx
   78bc1:	gs popa 
   78bc3:	jae    0x78c2a
   78bc5:	dec    ebp
   78bc6:	jne    0x78c3c
   78bc8:	gs js  0x78bcb
   78bcb:	add    BYTE PTR [ebx],bl
   78bcd:	add    cl,BYTE PTR [ebx+0x65]
   78bd0:	dec    ecx
   78bd1:	outs   dx,BYTE PTR ds:[esi]
   78bd2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   78bda:	dec    ebp
   78bdb:	jne    0x78c51
   78bdd:	gs js  0x78be0
   78be0:	inc    edx
   78be1:	add    BYTE PTR [ebp+0x78],al
   78be4:	inc    ecx
   78be5:	ins    BYTE PTR es:[edi],dx
   78be6:	ins    BYTE PTR es:[edi],dx
   78be7:	outs   dx,DWORD PTR ds:[esi]
   78be8:	arpl   WORD PTR [ecx+0x74],sp
   78beb:	gs push eax
   78bed:	outs   dx,DWORD PTR ds:[esi]
   78bee:	outs   dx,DWORD PTR ds:[esi]
   78bef:	ins    BYTE PTR es:[edi],dx
   78bf0:	push   edi
   78bf1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   78bf9:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78c00:	dec    esi
   78c01:	add    BYTE PTR [ebp+0x78],al
   78c04:	inc    esi
   78c05:	jb     0x78c6c
   78c07:	gs push eax
   78c09:	outs   dx,DWORD PTR ds:[esi]
   78c0a:	outs   dx,DWORD PTR ds:[esi]
   78c0b:	ins    BYTE PTR es:[edi],dx
   78c0c:	push   edi
   78c0d:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x66006761
   78c15:	add    cl,BYTE PTR [ebx+0x65]
   78c18:	push   esp
   78c19:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78c20:	je     0x78c22
   78c22:	test   BYTE PTR [ecx],0x4b
   78c25:	gs inc edx
   78c27:	jne    0x78c90
   78c29:	inc    ebx
   78c2a:	push   0x456b6365
   78c2f:	js     0x78c31
   78c31:	add    BYTE PTR [esi+0x74],ch
   78c34:	outs   dx,DWORD PTR ds:[esi]
   78c35:	jae    0x78ca2
   78c37:	jb     0x78ca7
   78c39:	ins    BYTE PTR es:[edi],dx
   78c3a:	cs gs js 0x78ca3
   78c3e:	add    BYTE PTR [eax],al
   78c40:	inc    eax
   78c41:	add    BYTE PTR [ebx+0x65],cl
   78c44:	inc    edi
   78c45:	gs je  0x78c8b
   78c48:	jne    0x78cbc
   78c4a:	jb     0x78cb1
   78c4c:	outs   dx,BYTE PTR ds:[esi]
   78c4d:	je     0x78c98
   78c4f:	jb     0x78cc2
   78c51:	ins    BYTE PTR es:[edi],dx
   78c52:	add    BYTE PTR [eax],al
   78c54:	dec    eax
   78c55:	inc    ecx
   78c56:	dec    esp
   78c57:	cs fs ins BYTE PTR es:[edi],dx
   78c5a:	ins    BYTE PTR es:[edi],dx
   78c5b:	add    BYTE PTR [eax+0x6c745204],ah
   78c61:	push   ebp
   78c62:	outs   dx,BYTE PTR ds:[esi]
   78c63:	ja     0x78cce
   78c65:	outs   dx,BYTE PTR ds:[esi]
   78c66:	fs
	...
