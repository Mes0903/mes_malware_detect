
df121d9573a4a487a5a2ae73a9b10e25c7fa5db7d8f0e7f74d701de7dfe9e9ee.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x1555e01a
  402b89:	sub    DWORD PTR [eax],ecx
  402b8b:	jle    0x402c07
  402b8d:	jp     0x402c09
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi+0x8],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1542f8bf
  402c38:	mov    gs,WORD PTR [ecx]
  402c3a:	dec    eax
  402c3b:	test   eax,0x22696abb
  402c40:	push   edx
  402c41:	jae    0x402c7b
  402c43:	dec    esp
  402c44:	mov    dh,0xdf
  402c46:	dec    ecx
  402c47:	outs   dx,BYTE PTR ds:[esi]
  402c48:	stos   DWORD PTR es:[edi],eax
  402c49:	inc    edx
  402c4a:	push   ebp
  402c4b:	ret    0x6f0
  402c4e:	cmp    bl,ah
  402c50:	xor    esi,DWORD PTR [edi-0x43e28e8e]
  402c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c57:	jnp    0x402c12
  402c59:	xchg   DWORD PTR [ecx+0x52f4379f],ebp
  402c5f:	xchg   esp,eax
  402c60:	fcom   QWORD PTR [ebp+edx*8+0x17]
  402c64:	outs   dx,BYTE PTR ds:[esi]
  402c65:	mov    BYTE PTR [edi],al
  402c67:	mov    ebx,0x52c4d73e
  402c6c:	cmp    al,0x90
  402c6e:	mov    WORD PTR [eax+eiz*1],gs
  402c71:	test   al,0xba
  402c73:	push   cs
  402c74:	sar    DWORD PTR [eax],1
  402c76:	add    ecx,DWORD PTR [eax]
  402c78:	fwait
  402c79:	int    0x1c
  402c7b:	mov    BYTE PTR [esi-0x4db653a],dl
  402c81:	pop    es
  402c82:	sbb    DWORD PTR [ebp+ecx*8-0xfe8d598],eax
  402c89:	sahf   
  402c8a:	out    dx,eax
  402c8b:	pop    edi
  402c8c:	xor    eax,0x9e15c6c8
  402c91:	and    DWORD PTR fs:[di],esi
  402c95:	jmp    0x951aa343
  402c9a:	int    0xd
  402c9c:	popa   
  402c9d:	inc    esp
  402c9e:	push   esp
  402c9f:	push   ds
  402ca0:	shl    edi,0x5b
  402ca3:	sbb    al,BYTE PTR [eax+0x20ced1c9]
  402ca9:	and    al,0x92
  402cab:	clc    
  402cac:	sub    dh,ah
  402cae:	mov    ds:0x4ea1801d,al
  402cb3:	mov    ch,0xf8
  402cb5:	cdq    
  402cb6:	stos   BYTE PTR es:[edi],al
  402cb7:	cmp    eax,0xe7d7a2f7
  402cbc:	fnstsw WORD PTR ds:0x7b788a4d
  402cc2:	xchg   ecx,eax
  402cc3:	repz aad 0x9b
  402cc6:	cmp    DWORD PTR [eax-0x82c8485],ebx
  402ccc:	mov    ds:0xb6ed22b2,al
  402cd1:	xchg   edi,eax
  402cd2:	and    DWORD PTR [esi+0x6d10317d],ebx
  402cd8:	sbb    eax,0x57b04f5f
  402cdd:	int3   
  402cde:	and    DWORD PTR [ebx+0x1065d051],eax
  402ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce5:	inc    ebp
  402ce6:	fwait
  402ce7:	mov    ebx,0x80c72de4
  402cec:	adc    ah,0x87
  402cef:	imul   edx,DWORD PTR [edi-0xa],0xffffffaf
  402cf3:	aas    
  402cf4:	ret    0x325b
  402cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cf8:	xchg   BYTE PTR [eax],bl
  402cfa:	jne    0x402cf3
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	mov    ecx,0x4351706
  402d02:	dec    eax
  402d03:	stos   BYTE PTR es:[edi],al
  402d04:	adc    bh,cl
  402d06:	push   ebp
  402d07:	xchg   ecx,eax
  402d08:	in     al,dx
  402d09:	in     eax,0xff
  402d0b:	cmp    DWORD PTR [edx+ebx*4-0x25a198a6],ebp
  402d12:	sbb    BYTE PTR [edx],ah
  402d14:	dec    esp
  402d15:	jbe    0x402cba
  402d17:	push   cs
  402d18:	sub    BYTE PTR [edi-0x461b4512],0xc8
  402d1f:	pop    ebx
  402d20:	outs   dx,DWORD PTR ds:[esi]
  402d21:	push   esi
  402d22:	xlat   BYTE PTR ds:[ebx]
  402d23:	int    0xef
  402d25:	out    0xc3,eax
  402d27:	mov    ecx,0xf5c30c5b
  402d2c:	in     al,0x19
  402d2e:	mov    ecx,?
  402d30:	enter  0x3e75,0xae
  402d34:	divps  xmm5,xmm5
  402d37:	jge    0x402cd3
  402d39:	ins    BYTE PTR es:[edi],dx
  402d3a:	(bad)
  402d3e:	std    
  402d3f:	repnz mov ah,0xf3
  402d42:	jo     0x402cd2
  402d44:	fisub  WORD PTR [ecx-0x2d]
  402d47:	ret    
  402d48:	pop    edx
  402d49:	out    dx,eax
  402d4a:	pop    es
  402d4b:	xor    eax,0x44740813
  402d50:	int3   
  402d51:	xchg   BYTE PTR [ebp+0x365deaed],al
  402d57:	bound  ebp,QWORD PTR ds:0x8dbceda1
  402d5d:	mov    ds:0x63473477,al
  402d62:	or     al,0xbc
  402d64:	cmp    eax,0x603f6fde
  402d69:	imul   ebx,DWORD PTR [edi],0xc9f06c77
  402d6f:	gs retf 
  402d71:	fisubr WORD PTR [ebp-0x1]
  402d74:	repnz mov bl,0xc2
  402d77:	sbb    DWORD PTR [esp+ebx*4-0x1d],0x24
  402d7c:	fldcw  WORD PTR [edx+0x64]
  402d7f:	test   eax,0xba077faf
  402d84:	sbb    cl,BYTE PTR [esi-0xf4ecefa]
  402d8a:	mov    ah,BYTE PTR [edx+edx*2+0x58585dd9]
  402d91:	out    0xf8,al
  402d93:	loop   0x402d9b
  402d95:	outs   dx,DWORD PTR ds:[esi]
  402d96:	mov    ebp,0x78e7457a
  402d9b:	aaa    
  402d9c:	and    BYTE PTR [esp+edx*2+0x1fcbe640],dh
  402da3:	pop    esi
  402da4:	out    dx,eax
  402da5:	mov    DWORD PTR [eax-0x1a764e05],ebx
  402dab:	mov    ch,ch
  402dad:	jge    0x402d85
  402daf:	xchg   ecx,edx
  402db1:	mov    bl,0xa8
  402db3:	lods   eax,DWORD PTR ds:[esi]
  402db4:	out    0xd3,al
  402db6:	test   eax,0x2e058ef1
  402dbb:	dec    edx
  402dbc:	push   edx
  402dbd:	cdq    
  402dbe:	dec    edx
  402dbf:	xchg   BYTE PTR [ebp+0x79],bl
  402dc2:	clc    
  402dc3:	dec    eax
  402dc4:	pop    esi
  402dc5:	and    al,0x90
  402dc7:	sahf   
  402dc8:	adc    BYTE PTR [ebp-0x76],bl
  402dcb:	push   eax
  402dcc:	add    ebp,0xb67bcbd9
  402dd2:	adc    eax,0xff11c5a5
  402dd7:	pop    eax
  402dd8:	enter  0x6c97,0x6a
  402ddc:	mov    ebp,0x596c8a7a
  402de1:	lock or ebp,DWORD PTR [ebp-0x7e]
  402de5:	mov    ch,0x5d
  402de7:	mov    bl,0xc4
  402de9:	jne    0x402d90
  402deb:	or     eax,0x7facff16
  402df0:	outs   dx,DWORD PTR ds:[esi]
  402df1:	rcr    DWORD PTR [ebx+0x79fef6d0],cl
  402df7:	nop
  402df8:	lahf   
  402df9:	std    
  402dfa:	push   edi
  402dfb:	or     BYTE PTR [edx-0x4f],bh
  402dfe:	fld    TBYTE PTR [ebp-0x4f2b6f8d]
  402e04:	add    bh,bl
  402e06:	push   0x3
  402e08:	push   cs
  402e09:	retf   
  402e0a:	shr    esi,cl
  402e0c:	mov    ?,WORD PTR [edi]
  402e0e:	mov    eax,ds:0x14cc2e56
  402e13:	mov    eax,0xebe86f57
  402e18:	in     eax,dx
  402e19:	(bad)  
  402e1a:	nop
  402e1b:	jns    0x402dca
  402e1d:	js     0x402de5
  402e1f:	jmp    0xee94:0x532c2c8e
  402e26:	jae    0x402e03
  402e28:	push   0x24
  402e2a:	mov    dl,0x6e
  402e2c:	xor    bh,BYTE PTR [eax-0x2a5d085f]
  402e32:	(bad)  
  402e33:	push   ss
  402e34:	retf   0x5abe
  402e37:	test   al,0x56
  402e39:	inc    edx
  402e3a:	cmp    esp,ebx
  402e3c:	mov    dl,0x84
  402e3e:	in     al,0xfc
  402e40:	mov    esp,0xc2771c12
  402e45:	dec    ecx
  402e46:	xchg   esp,eax
  402e47:	pusha  
  402e48:	mov    ds,WORD PTR [ecx+esi*1]
  402e4b:	sub    BYTE PTR [ebx+edx*8+0x33736ab8],dl
  402e52:	fisubr DWORD PTR [ebp-0x643d4dfe]
  402e58:	push   ss
  402e59:	mov    cl,cl
  402e5b:	addr16 push 0x22a5a227
  402e61:	(bad)  
  402e62:	shl    BYTE PTR [edi-0x37],1
  402e65:	aaa    
  402e66:	stos   DWORD PTR es:[edi],eax
  402e67:	pop    ds
  402e68:	inc    esi
  402e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e6a:	cmp    DWORD PTR [edi+esi*2-0x7a],edx
  402e6e:	adc    BYTE PTR [esi+ebx*8+0x37],bl
  402e72:	fs pop eax
  402e74:	or     al,0x10
  402e76:	pop    eax
  402e77:	ins    BYTE PTR es:[edi],dx
  402e78:	popf   
  402e79:	or     eax,0x28960a37
  402e7e:	add    al,0x2c
  402e80:	leave  
  402e81:	mov    ecx,DWORD PTR [ebp-0xb]
  402e84:	xchg   edi,eax
  402e85:	xor    dl,BYTE PTR [esi]
  402e87:	(bad)  
  402e88:	jle    0x402ee1
  402e8a:	dec    edx
  402e8b:	xchg   BYTE PTR [edx+eiz*1],dh
  402e8e:	inc    ecx
  402e8f:	nop
  402e90:	jb     0x402ea9
  402e92:	stos   DWORD PTR es:[edi],eax
  402e93:	and    dl,al
  402e95:	and    eax,0x24b5f751
  402e9a:	loopne 0x402ebc
  402e9c:	xor    BYTE PTR [edx-0x6f],bl
  402e9f:	sar    DWORD PTR [edx+0x68],0x5f
  402ea3:	rcr    BYTE PTR [ecx-0x29],1
  402ea6:	pusha  
  402ea7:	mov    esi,0x7fe0eb9c
  402eac:	stc    
  402ead:	or     eax,0x3a3882b7
  402eb2:	(bad)  
  402eb3:	jbe    0x402f0d
  402eb5:	cwde   
  402eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb7:	popa   
  402eb8:	mov    dh,0xad
  402eba:	inc    ebx
  402ebb:	pop    esi
  402ebc:	js     0x402e5a
  402ebe:	cmp    eax,0x50be880c
  402ec3:	jmp    0x402e60
  402ec5:	dec    edi
  402ec6:	and    eax,0xb5a33939
  402ecb:	jns    0x402f0f
  402ecd:	inc    esi
  402ece:	pop    esp
  402ecf:	aaa    
  402ed0:	(bad)  
  402ed1:	in     al,0x77
  402ed3:	out    dx,eax
  402ed4:	dec    esp
  402ed5:	mov    al,0x97
  402ed7:	pop    edx
  402ed8:	lds    ebp,FWORD PTR [edx+edx*2+0x295ff3c]
  402edf:	ss pop eax
  402ee1:	xchg   BYTE PTR [eax+0x67],cl
  402ee4:	stos   DWORD PTR es:[edi],eax
  402ee5:	fnstcw WORD PTR [ebx+0x4e327e95]
  402eeb:	mov    dl,0xaa
  402eed:	and    al,0x13
  402eef:	js     0x402eca
  402ef1:	enter  0x6522,0x9
  402ef5:	xchg   ebp,eax
  402ef6:	rcl    DWORD PTR [ebx-0x71f41686],1
  402efc:	jae    0x402ed9
  402efe:	cdq    
  402eff:	cmp    al,0x61
  402f01:	mov    edi,0x35361c25
  402f06:	mov    edi,0xd27fe934
  402f0b:	fisttp DWORD PTR ds:[ebx]
  402f0e:	ins    DWORD PTR es:[edi],dx
  402f0f:	sub    DWORD PTR [ebx+0x59125f2c],edi
  402f15:	enter  0x2411,0xfe
  402f19:	out    0xd9,al
  402f1b:	adc    ah,BYTE PTR [esi-0x59]
  402f1e:	xor    DWORD PTR [edx-0x71fec272],esp
  402f24:	pop    ds
  402f25:	inc    edx
  402f26:	mov    ah,0x3f
  402f28:	adc    al,BYTE PTR [esp+edi*8+0x1f]
  402f2c:	outs   dx,BYTE PTR ds:[esi]
  402f2d:	hlt    
  402f2e:	inc    esi
  402f2f:	cmp    dl,ch
  402f31:	gs inc edx
  402f33:	dec    ebp
  402f34:	lds    ebx,FWORD PTR [ebp+0x40923722]
  402f3a:	adc    ch,cl
  402f3c:	xor    BYTE PTR [ebp+esi*1+0x36eda3c1],dh
  402f43:	push   cs
  402f44:	jb     0x402f9d
  402f46:	call   0xd93e7a2c
  402f4b:	xor    edi,DWORD PTR [ebp+0x5d]
  402f4e:	loopne 0x402ef8
  402f50:	loopne 0x402f20
  402f52:	lds    edi,FWORD PTR [ecx]
  402f54:	cmp    BYTE PTR [edx-0x61c679a5],dl
  402f5a:	jl     0x402fa0
  402f5c:	adc    DWORD PTR [ebx-0x4],0xfffffffb
  402f60:	xor    ah,dl
  402f62:	xchg   esi,eax
  402f63:	jg     0x402f12
  402f65:	jmp    0x402fe2
  402f67:	xchg   esp,eax
  402f68:	push   edi
  402f69:	lods   al,BYTE PTR ds:[esi]
  402f6a:	pop    edx
  402f6b:	les    edx,FWORD PTR [edx+0x64]
  402f6e:	xchg   edx,eax
  402f6f:	clc    
  402f70:	mov    gs,WORD PTR [eax]
  402f72:	shr    DWORD PTR [eax],1
  402f74:	arpl   WORD PTR [edx],sp
  402f76:	aaa    
  402f77:	sbb    edx,DWORD PTR [ebx+0x20]
  402f7a:	in     eax,dx
  402f7b:	pushf  
  402f7c:	cld    
  402f7d:	cmp    ebx,DWORD PTR [edx+0x4fcb9477]
  402f83:	cs xchg edi,eax
  402f85:	mov    esi,0x4c2bb604
  402f8a:	cld    
  402f8b:	and    cl,0x67
  402f8e:	test   BYTE PTR [edx],0x3
  402f91:	push   edi
  402f92:	pusha  
  402f93:	adc    BYTE PTR [edi+0xb],0xf6
  402f97:	aas    
  402f98:	sub    eax,0x5032238e
  402f9d:	mov    BYTE PTR [esi-0x3bc05a07],ah
  402fa3:	inc    esi
  402fa4:	ss inc eax
  402fa6:	dec    ebx
  402fa7:	pop    eax
  402fa8:	xchg   edi,eax
  402fa9:	pop    ss
  402faa:	shl    DWORD PTR [edx-0x1b],1
  402fad:	add    DWORD PTR [eax-0x30917ee5],esi
  402fb3:	loop   0x402ff4
  402fb5:	fadd   st(4),st
  402fb7:	add    al,0x5a
  402fb9:	push   cs
  402fba:	cs cmp al,0xe6
  402fbd:	xor    ah,ch
  402fbf:	ds inc eax
  402fc1:	cmp    bh,ah
  402fc3:	(bad)
  402fc7:	popa   
  402fc8:	fcomp  QWORD PTR [edx+0xe1a795a]
  402fce:	xchg   ebp,eax
  402fcf:	push   edi
  402fd0:	mov    ah,0x85
  402fd2:	pop    edx
  402fd3:	ficom  DWORD PTR ds:0x3b10d80d
  402fd9:	push   0xba00c083
  402fde:	add    eax,0x6829f67d
  402fe3:	out    dx,eax
  402fe4:	lea    edi,[esi-0x447367db]
  402fea:	push   es
  402feb:	icebp  
  402fec:	mov    BYTE PTR [esi+0x7934c75],al
  402ff2:	lea    esp,[edi]
  402ff4:	adc    ebx,DWORD PTR [ebx-0x70]
  402ff7:	jle    0x402fc1
  402ff9:	ror    BYTE PTR [esi],cl
  402ffb:	loope  0x402fd3
  402ffd:	cs fwait
  402fff:	lods   eax,DWORD PTR ds:[esi]
  403000:	push   0xd8dc8875
  403005:	(bad)  [edx-0x6a]
  403008:	sub    BYTE PTR [esi-0x12],bh
  40300b:	mov    esp,0xda5d62a7
  403010:	cwde   
  403011:	in     al,0xde
  403013:	pop    ds
  403014:	mov    bl,0xbd
  403016:	inc    ebx
  403017:	pop    esi
  403018:	jbe    0x40305f
  40301a:	dec    ebp
  40301b:	mov    ecx,0xc3a6b06e
  403020:	sub    ax,0xe5bb
  403024:	out    dx,eax
  403025:	mov    ds:0xa256349a,al
  40302a:	xchg   ebp,eax
  40302b:	dec    ecx
  40302c:	es stc 
  40302e:	retf   0x6f1c
  403031:	rol    dl,cl
  403033:	ja     0x40303a
  403035:	test   al,0x6a
  403037:	(bad)  
  403038:	sbb    esp,DWORD PTR [eax]
  40303a:	fmul   DWORD PTR [ebp-0x1c05a77b]
  403040:	jbe    0x4030bd
  403042:	cli    
  403043:	fnsave [edi-0x5076069e]
  403049:	mov    al,ah
  40304b:	and    DWORD PTR [ecx-0x49ddac8c],eax
  403051:	fsub   QWORD PTR [edx-0x6]
  403054:	or     BYTE PTR [ebx+0x8c0b89],dh
  40305a:	cmp    bh,bh
  40305c:	(bad)  
  40305d:	and    ecx,edi
  40305f:	pcmpeqb mm6,QWORD PTR [edi]
  403062:	in     eax,0xc8
  403064:	cs retfw 
  403067:	pop    ecx
  403068:	inc    ecx
  403069:	sub    al,0x49
  40306b:	jo     0x4030af
  40306d:	inc    ebx
  40306e:	pop    es
  40306f:	adc    eax,0xc8857ab
  403074:	stos   BYTE PTR es:[edi],al
  403075:	clc    
  403076:	int    0xb7
  403078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403079:	test   eax,0xa13ce311
  40307e:	std    
  40307f:	mov    gs:0x27867528,eax
  403085:	push   cs
  403086:	pop    ebp
  403087:	mov    esp,0xc2f18973
  40308c:	jecxz  0x403067
  40308e:	in     eax,0x5c
  403090:	imul   ebx,DWORD PTR [edx-0x386793e],0x20
  403097:	fnstsw WORD PTR [edi-0x24ff5cfb]
  40309d:	(bad)  
  40309e:	mov    dl,0xa
  4030a0:	(bad)  
  4030a2:	jmp    FWORD PTR [edi]
  4030a4:	push   cs
  4030a5:	les    edx,FWORD PTR ds:0xfb1e825b
  4030ab:	sbb    edi,DWORD PTR [edx+0x1a]
  4030ae:	fisttp WORD PTR [ecx-0x2f44730]
  4030b5:	jle    0x40306b
  4030b7:	inc    edi
  4030b8:	and    al,0x25
  4030ba:	fild   DWORD PTR [ebx-0x3a639f85]
  4030c0:	push   0xffffffc1
  4030c2:	mov    ecx,0x98487b64
  4030c7:	mov    WORD PTR [esi+0x751ae925],cs
  4030cd:	ins    BYTE PTR es:[edi],dx
  4030ce:	push   0xcbdb9186
  4030d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030d4:	test   BYTE PTR [ecx],ch
  4030d6:	das    
  4030d7:	ror    BYTE PTR [ecx+0x1d],1
  4030da:	jnp    0x403066
  4030dc:	fiadd  DWORD PTR [edi]
  4030de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030df:	or     al,0x5e
  4030e1:	stos   DWORD PTR es:[edi],eax
  4030e2:	cs retf 0xe4a0
  4030e6:	ins    BYTE PTR es:[edi],dx
  4030e7:	pop    edi
  4030e8:	push   cs
  4030e9:	call   0xfa560e94
  4030ee:	mov    ebp,0xfa945f41
  4030f3:	dec    ebx
  4030f4:	jns    0x403101
  4030f6:	ja     0x403167
  4030f8:	ror    dl,1
  4030fa:	(bad)  
  4030fb:	mov    ecx,0xd0bd6f63
  403100:	xor    BYTE PTR [edx*1-0x13aa84af],dl
  403107:	or     eax,0xb19d629f
  40310c:	mov    edx,0x56efa285
  403111:	dec    edi
  403112:	jl     0x403144
  403114:	popa   
  403115:	rol    DWORD PTR [ebx-0x11],cl
  403118:	inc    esi
  403119:	and    edx,0x75669639
  40311f:	lock mov WORD PTR [ebx+0x4aae928b],es
  403126:	out    0x1c,eax
  403128:	out    0x20,al
  40312a:	mov    esp,0x29866b13
  40312f:	enter  0xc00b,0xa0
  403133:	ret    0xf40f
  403136:	ret    
  403137:	repnz loopne 0x4030fd
  40313a:	cmp    eax,0xaeebe33e
  40313f:	jmp    0x403129
  403141:	cmpps  xmm4,XMMWORD PTR [edi-0x47],0x34
  403146:	dec    edi
  403147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403148:	dec    edi
  403149:	mov    ds:0x48ddbc9f,eax
  40314e:	dec    esi
  40314f:	rcl    edx,cl
  403151:	fisttp WORD PTR [eax]
  403153:	adc    ah,BYTE PTR [ecx+0x47]
  403156:	jmp    0x4899b87c
  40315b:	and    ebx,DWORD PTR [esi]
  40315d:	cwde   
  40315e:	lea    ebp,[ecx]
  403160:	mov    ?,WORD PTR [esi-0x3bafb5d8]
  403166:	xchg   BYTE PTR [ebp+0x7c],bl
  403169:	in     eax,0x23
  40316b:	dec    esi
  40316c:	ret    
  40316d:	(bad)  
  40316e:	loope  0x403120
  403170:	std    
  403171:	push   ebp
  403172:	jp     0x403164
  403174:	stos   DWORD PTR es:[edi],eax
  403175:	push   edx
  403176:	and    DWORD PTR [edi+eax*4+0x59],edx
  40317a:	addr16 inc ebp
  40317c:	xchg   ebx,eax
  40317d:	aam    0xde
  40317f:	push   0xb74a1274
  403184:	jne    0x403153
  403186:	(bad)  
  403187:	or     eax,0x935754ba
  40318c:	test   BYTE PTR [ecx-0x650bb7a1],0xb1
  403193:	push   0xb002cec6
  403198:	adc    al,0x28
  40319a:	mov    edx,0xb2250e3f
  40319f:	mov    bh,0xc7
  4031a1:	jmp    0xdfac3ff0
  4031a6:	imul   ecx,DWORD PTR [ebx-0x1a],0x41c134f4
  4031ad:	push   cs
  4031ae:	hlt    
  4031af:	div    esp
  4031b1:	lock and al,0xba
  4031b4:	inc    esi
  4031b5:	xchg   ebp,eax
  4031b6:	inc    edx
  4031b7:	out    dx,al
  4031b8:	mov    BYTE PTR [edx+edx*4],bl
  4031bb:	jnp    0x40323b
  4031bd:	stos   DWORD PTR es:[edi],eax
  4031be:	and    eax,0xf7f673e5
  4031c3:	enter  0x19cc,0xf9
  4031c7:	leave  
  4031c8:	rcl    DWORD PTR [ebx+0x63],cl
  4031cb:	dec    ebp
  4031cc:	mov    al,0x5f
  4031cf:	ret    0x85a5
  4031d2:	mov    ah,0x97
  4031d4:	jnp    0x4031b1
  4031d6:	push   ebx
  4031d7:	loopne 0x40317e
  4031d9:	cmp    DWORD PTR [eax+0x21],ecx
  4031dc:	xchg   ecx,eax
  4031dd:	add    ch,BYTE PTR [esi]
  4031df:	pop    es
  4031e0:	les    esp,FWORD PTR [eax-0x19]
  4031e3:	mov    eax,0xe57d7564
  4031e8:	push   ecx
  4031e9:	mov    al,BYTE PTR [eax-0x58567674]
  4031ef:	pop    ss
  4031f0:	and    BYTE PTR [ecx+0xf],ch
  4031f3:	in     eax,0xba
  4031f5:	pop    es
  4031f6:	sub    al,0xff
  4031f8:	and    eax,0xecfd0696
  4031fd:	adc    eax,0x204a9a61
  403203:	ret    0x96ea
  403206:	jg     0x4031a5
  403208:	inc    eax
  403209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40320a:	lea    eax,[ebx+0x15]
  40320d:	cmp    BYTE PTR [ebp-0x56],dh
  403210:	rcr    DWORD PTR [ecx],0x6d
  403213:	bound  eax,QWORD PTR [edi+0x76]
  403216:	xchg   esp,eax
  403217:	mov    ch,0xb2
  403219:	sbb    BYTE PTR [edi],bh
  40321b:	sbb    eax,0xffb308d6
  403220:	fs xor dh,ch
  403223:	mov    ?,WORD PTR [eax+0x7]
  403226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403227:	out    0x8d,eax
  403229:	repnz or al,0xf
  40322c:	mov    esp,0xb19050c1
  403231:	lds    edx,FWORD PTR [edx+0x67]
  403234:	(bad)  
  403235:	push   ss
  403236:	and    eax,0x914d9ee
  40323b:	out    0x18,eax
  40323d:	fld    QWORD PTR [ecx+ebp*8]
  403240:	rcl    ah,cl
  403242:	pop    ebp
  403243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403244:	dec    ebx
  403245:	adc    BYTE PTR [edi-0x12a672b1],al
  40324b:	sahf   
  40324c:	xchg   ebp,eax
  40324d:	or     al,bl
  40324f:	ffree  st(5)
  403251:	rcr    DWORD PTR es:[ebp+0x15],1
  403255:	xor    bl,BYTE PTR [edi+edi*8-0x6d]
  403259:	shl    BYTE PTR [ecx-0x54fc0109],1
  40325f:	inc    ecx
  403260:	mov    dl,0x54
  403262:	jg     0x403205
  403264:	xchg   esi,eax
  403265:	call   0x33856494
  40326a:	mov    WORD PTR [si+0x67],gs
  40326e:	lods   eax,DWORD PTR ds:[esi]
  40326f:	pop    ss
  403270:	mov    DWORD PTR [esi],esp
  403272:	test   BYTE PTR [ebp+0x16130e18],bh
  403278:	add    ecx,DWORD PTR [edx-0x42]
  40327b:	leave  
  40327c:	xchg   edi,eax
  40327d:	push   ebx
  40327e:	fcomp  DWORD PTR ds:0x882816ac
  403284:	sbb    al,0x2d
  403286:	retf   0xb4d9
  403289:	aad    0x25
  40328b:	and    eax,DWORD PTR [edi+0x18]
  40328e:	jno    0x403235
  403290:	cmp    al,BYTE PTR [eax+0x374f5027]
  403296:	std    
  403297:	aaa    
  403298:	test   DWORD PTR [ebp-0x7a],ebx
  40329b:	fdivr  QWORD PTR [eax+0x64]
  40329e:	fld    st(2)
  4032a0:	nop
  4032a1:	imul   esp,ebx,0xfffffff0
  4032a4:	jge    0x40324b
  4032a6:	(bad)  
  4032a7:	pop    ds
  4032a8:	imul   edi,DWORD PTR [esi+0x70fc1dbe],0xffffffa3
  4032af:	jnp    0x40329f
  4032b1:	and    BYTE PTR [edx-0xa],0xd8
  4032b5:	les    edi,FWORD PTR [eax+0x76]
  4032b8:	jb     0x4032b8
  4032ba:	xchg   ebx,eax
  4032bb:	inc    esi
  4032bc:	fprem  
  4032be:	outs   dx,BYTE PTR ds:[esi]
  4032bf:	loop   0x403325
  4032c1:	or     al,0xbb
  4032c3:	xor    al,0x76
  4032c6:	jmp    0x403255
  4032c8:	inc    ecx
  4032c9:	into   
  4032ca:	jle    0x403302
  4032cc:	mov    bl,0xf4
  4032ce:	pushw  0x5022
  4032d2:	out    0x48,al
  4032d4:	adc    esp,DWORD PTR [eax+0x840063b]
  4032da:	(bad)  [ebx+0x31]
  4032dd:	add    bl,ch
  4032df:	imul   esp,ebp,0x8508c7f
  4032e5:	sar    DWORD PTR [esi-0x79],0x30
  4032e9:	jns    0x4032eb
  4032eb:	imul   edx,DWORD PTR [esi+0x5d],0x6ca25b61
  4032f2:	js     0x4032a5
  4032f4:	pushf  
  4032f5:	pop    edx
  4032f6:	retf   
  4032f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032f8:	aaa    
  4032f9:	inc    eax
  4032fa:	int    0x44
  4032fc:	sar    DWORD PTR [ebx-0x66],cl
  4032ff:	adc    bh,al
  403301:	aam    0x7
  403303:	jns    0x4032d5
  403305:	add    eax,0x92219a03
  40330a:	push   0xffffffa8
  40330c:	out    0xf3,eax
  40330e:	or     BYTE PTR [edx],dh
  403310:	dec    ebx
  403311:	sbb    eax,0x5681d09f
  403316:	or     BYTE PTR [edx],ah
  403318:	ret    0xf0b8
  40331b:	inc    esp
  40331c:	shr    DWORD PTR [ecx],1
  40331e:	inc    ebx
  40331f:	in     eax,0xf1
  403321:	loope  0x4032f4
  403323:	aaa    
  403324:	xchg   esp,eax
  403325:	mov    WORD PTR [edi],ss
  403327:	mov    esi,0x67e0c93f
  40332c:	in     eax,0x93
  40332e:	loopne 0x4032e9
  403330:	clc    
  403331:	pop    ds
  403332:	loopne 0x4032df
  403334:	repz xchg ebx,eax
  403336:	mov    esi,0xf5e6723f
  40333b:	pop    edi
  40333c:	dec    esi
  40333d:	add    ebp,edi
  40333f:	aad    0x67
  403341:	xor    BYTE PTR [edx+eiz*1],dh
  403344:	repz push 0xffffffc3
  403347:	pop    eax
  403348:	push   ds
  403349:	jecxz  0x4033bb
  40334b:	xchg   ebp,eax
  40334c:	cmp    DWORD PTR [edi],0x574655d0
  403352:	push   ds
  403353:	call   0x55454939
  403358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403359:	mov    ss,WORD PTR [esi+0x29]
  40335c:	sub    BYTE PTR [edi+ebp*8],0xf6
  403360:	in     al,0x0
  403362:	push   ebx
  403363:	test   BYTE PTR [ecx],dh
  403365:	or     eax,0x7b6b9a29
  40336a:	ja     0x40332e
  40336c:	dec    eax
  40336d:	daa    
  40336e:	les    edx,FWORD PTR [eax]
  403370:	xchg   edi,eax
  403371:	fstp   DWORD PTR [ebx+ecx*4+0x4f]
  403375:	jecxz  0x403392
  403377:	and    DWORD PTR [ebx+edx*1-0x7a8dc1cf],esp
  40337e:	jb     0x4033e8
  403380:	inc    esp
  403381:	loop   0x4033cd
  403383:	sti    
  403384:	(bad)  
  403385:	pop    esi
  403386:	sub    dl,BYTE PTR [ebp+0x56]
  403389:	fdivr  DWORD PTR [esi-0x14c7698c]
  40338f:	into   
  403390:	aas    
  403391:	(bad)  
  403392:	cmc    
  403393:	push   edi
  403394:	stos   DWORD PTR es:[edi],eax
  403395:	lds    edi,FWORD PTR [esi+ebp*4+0x552c0ffd]
  40339c:	push   esi
  40339d:	call   0xe65d:0xcc9f18a1
  4033a4:	repz mov ds:0x35bc247,al
  4033aa:	dec    ebp
  4033ab:	icebp  
  4033ac:	add    eax,0xaec2b61
  4033b1:	dec    eax
  4033b2:	ffreep st(4)
  4033b4:	mov    cl,BYTE PTR [ebp-0x69]
  4033b7:	fisub  WORD PTR [esi+0xd]
  4033ba:	or     al,0xe
  4033bc:	(bad)  
  4033bd:	jecxz  0x40334c
  4033bf:	ds out 0x5a,eax
  4033c2:	scas   eax,DWORD PTR es:[edi]
  4033c3:	rol    BYTE PTR [edx],cl
  4033c5:	fiadd  DWORD PTR [esp+eiz*2-0x275f909f]
  4033cc:	stc    
  4033cd:	fcmovbe st,st(2)
  4033cf:	xchg   DWORD PTR [ebx],ebx
  4033d1:	cdq    
  4033d2:	(bad)  
  4033d3:	xor    al,0x28
  4033d5:	cs pop ds
  4033d7:	sbb    DWORD PTR [eax-0x132d721e],edx
  4033dd:	cmp    BYTE PTR [edx+ebp*1],dl
  4033e0:	in     eax,0x8
  4033e2:	sti    
  4033e3:	pop    esp
  4033e4:	fldenv [edx+0x56]
  4033e7:	push   edx
  4033e8:	mov    eax,0x8e838284
  4033ed:	add    dl,BYTE PTR [edi]
  4033ef:	and    edi,DWORD PTR [ecx-0x60]
  4033f2:	ror    ebp,1
  4033f4:	ror    al,cl
  4033f6:	leave  
  4033f7:	(bad)  
  4033f8:	loop   0x403394
  4033fa:	dec    ebx
  4033fb:	ja     0x4033ed
  4033fd:	push   DWORD PTR [ecx+0x7d]
  403400:	mov    edx,0x1feda4a4
  403405:	enter  0x5e49,0xca
  403409:	mov    dl,0xcb
  40340b:	or     eax,0x9072edcc
  403410:	cmp    eax,0x699d53b1
  403415:	ss in  eax,dx
  403417:	loop   0x40341e
  403419:	and    BYTE PTR [eax],0x6d
  40341c:	cmp    BYTE PTR ds:[esi],ch
  40341f:	push   esi
  403420:	scas   eax,DWORD PTR es:[edi]
  403421:	dec    ebp
  403422:	mov    bl,0x4a
  403424:	and    BYTE PTR [edx-0x43],0x4e
  403428:	mov    al,ds:0x27dc6c32
  40342d:	pop    ebp
  40342e:	ins    BYTE PTR es:[edi],dx
  40342f:	pop    ebx
  403430:	dec    ebx
  403431:	push   esi
  403432:	jns    0x4033c1
  403434:	push   ebp
  403435:	out    0x65,al
  403437:	inc    esp
  403438:	fnsave [ebx-0x9]
  40343b:	jno    0x4034a8
  40343d:	popa   
  40343e:	std    
  40343f:	data16 xor al,0x13
  403442:	stos   BYTE PTR es:[edi],al
  403443:	pop    ebx
  403444:	leave  
  403445:	fdiv   QWORD PTR [edx+0x18]
  403448:	mov    esp,0xaf478137
  40344d:	das    
  40344e:	adc    DWORD PTR [edi+0x4c940d36],eax
  403454:	iret   
  403455:	push   esi
  403456:	xchg   ebp,eax
  403457:	sbb    eax,0xe7d152f7
  40345c:	sbb    eax,0x1b34cb61
  403461:	js     0x403476
  403463:	mov    al,ah
  403465:	adc    DWORD PTR [esi+esi*8-0x4f],edi
  403469:	push   esi
  40346a:	test   BYTE PTR [ebx],bh
  40346c:	test   DWORD PTR [ecx-0x3a],eax
  40346f:	leave  
  403470:	cmp    eax,0x5dc9bd7a
  403475:	cmp    DWORD PTR [ecx],0x3658609c
  40347b:	dec    edx
  40347c:	cmp    DWORD PTR [edx+0x30],edx
  40347f:	or     al,0x36
  403481:	xchg   edi,eax
  403482:	ret    
  403483:	mov    ebp,ecx
  403485:	std    
  403486:	popf   
  403487:	rcl    BYTE PTR [edi],cl
  403489:	mov    BYTE PTR [eiz*8+0x3af0f2f6],ah
  403490:	and    BYTE PTR [ecx-0x6a],0xd7
  403494:	mov    bl,BYTE PTR [edx+0x62]
  403497:	pop    ss
  403498:	mov    fs:0x48d52550,eax
  40349e:	scas   al,BYTE PTR es:[edi]
  40349f:	mov    ah,dl
  4034a1:	icebp  
  4034a2:	sub    BYTE PTR [esi-0x7d3c446e],dh
  4034a8:	add    ebp,DWORD PTR [edi+0x4bafc353]
  4034ae:	stos   DWORD PTR es:[edi],eax
  4034af:	inc    BYTE PTR [esi+0x54e25edd]
  4034b5:	rol    DWORD PTR [eax],0x6b
  4034b8:	dec    ebp
  4034b9:	sbb    DWORD PTR [ecx+0x40cccf4e],esi
  4034bf:	xor    eax,0x2c5f4a7d
  4034c4:	and    eax,esp
  4034c6:	push   edi
  4034c7:	xchg   edx,eax
  4034c8:	call   0x4c6f:0x2c073d08
  4034cf:	(bad)  
  4034d0:	in     eax,dx
  4034d1:	jmp    DWORD PTR [esp+eiz*2]
  4034d4:	mov    ah,0x2b
  4034d6:	scas   al,BYTE PTR es:[edi]
  4034d7:	jmp    0x4034e5
  4034d9:	push   cs
  4034da:	int3   
  4034db:	mov    BYTE PTR [ecx],al
  4034dd:	push   edx
  4034de:	imul   eax,DWORD PTR fs:[ecx],0x55
  4034e2:	arpl   WORD PTR [ebx+0x6c],ax
  4034e5:	aaa    
  4034e6:	stos   BYTE PTR es:[edi],al
  4034e7:	aad    0x92
  4034e9:	lods   eax,DWORD PTR ds:[esi]
  4034eb:	xor    DWORD PTR [esi],0xffffffe4
  4034ee:	mov    dl,0x61
  4034f0:	pop    ecx
  4034f1:	push   esi
  4034f2:	adc    BYTE PTR [ebp+ebp*2-0x6de49256],dl
  4034f9:	mov    al,0x32
  4034fb:	mov    al,BYTE PTR [edx]
  4034fd:	xchg   esi,eax
  4034fe:	or     al,0x80
  403500:	jne    0x403482
  403502:	test   BYTE PTR [ebx+0x1d],0x93
  403506:	inc    ebp
  403507:	call   0x7e92b9e5
  40350c:	jp     0x40352c
  40350e:	popf   
  40350f:	mov    ebp,0x1e1eba2d
  403514:	jno    0x403558
  403516:	jno    0x40350b
  403518:	push   edx
  403519:	or     bl,BYTE PTR [eax+edx*8-0x7a]
  40351d:	adc    bl,al
  40351f:	jge    0x4034ed
  403521:	and    al,0x57
  403523:	je     0x403517
  403525:	neg    DWORD PTR [edi]
  403527:	(bad)  
  403528:	mov    ebx,0xf7835738
  40352d:	sbb    al,0x72
  40352f:	std    
  403530:	jb     0x40359b
  403532:	adc    eax,0x6a1a7dda
  403537:	mov    ecx,0xf455006b
  40353c:	xchg   edi,eax
  40353d:	hlt    
  40353e:	fwait
  40353f:	dec    ebx
  403540:	lods   al,BYTE PTR ds:[esi]
  403541:	ret    0xe82f
  403544:	mov    esi,DWORD PTR [ebx+0x16]
  403547:	retf   
  403548:	or     BYTE PTR [ebx],dl
  40354a:	ins    DWORD PTR es:[edi],dx
  40354b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354c:	jo     0x403502
  40354e:	jno    0x403559
  403550:	and    ecx,ecx
  403552:	rol    edx,0x3
  403555:	xchg   ebp,eax
  403556:	push   cs
  403557:	dec    ebx
  403558:	push   cs
  403559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355a:	cli    
  40355b:	and    al,0x55
  40355d:	(bad)  
  40355f:	jg     0x403569
  403561:	(bad)  
  403562:	outs   dx,DWORD PTR ds:[esi]
  403563:	(bad)  [edi+edi*4-0x1b3aadb6]
  40356a:	inc    ecx
  40356b:	cmp    ah,BYTE PTR [edi]
  40356d:	ins    DWORD PTR es:[edi],dx
  40356e:	dec    edx
  40356f:	cwde   
  403570:	test   eax,0xcf0e7a89
  403575:	mov    esp,0xa512d9df
  40357a:	(bad)  
  40357c:	mov    al,0x64
  40357e:	idiv   bl
  403580:	dec    esi
  403581:	push   cs
  403582:	adc    dl,BYTE PTR [eax+ecx*4-0x5242e25a]
  403589:	int3   
  40358a:	inc    edi
  40358b:	in     al,dx
  40358c:	mov    ds:0x6e9111b9,eax
  403591:	jp     0x403594
  403593:	xchg   ecx,eax
  403594:	add    DWORD PTR [eax],0x4f4fc022
  40359a:	(bad)  
  40359b:	cld    
  40359c:	jno    0x403593
  40359e:	sub    BYTE PTR [edi-0x1c],0x60
  4035a2:	sub    DWORD PTR [edi],0xd437ca98
  4035a8:	rcl    BYTE PTR [ecx-0x2306de02],0x43
  4035af:	or     BYTE PTR [eax],bh
  4035b1:	jge    0x4035e1
  4035b3:	popa   
  4035b4:	push   ecx
  4035b5:	and    al,0x6
  4035b7:	xchg   ecx,esi
  4035b9:	sti    
  4035ba:	aam    0x49
  4035bc:	fld    DWORD PTR [esi]
  4035be:	sahf   
  4035bf:	jns    0x4035ff
  4035c1:	repz dec esp
  4035c3:	jae    0x4035c0
  4035c5:	in     al,dx
  4035c6:	xchg   ebx,eax
  4035c7:	mov    edx,0xbf42fe75
  4035cc:	jo     0x403618
  4035ce:	mov    al,0x41
  4035d0:	jle    0x403622
  4035d2:	jo     0x4035ac
  4035d4:	adc    ah,BYTE PTR [ebx-0x61]
  4035d7:	aaa    
  4035d8:	imul   BYTE PTR [ebx+0x2c]
  4035db:	jbe    0x403629
  4035dd:	retf   0x63a8
  4035e0:	fld    DWORD PTR [eax]
  4035e2:	pop    ss
  4035e3:	mov    bh,0xa2
  4035e5:	idiv   bh
  4035e7:	sbb    DWORD PTR [edi+0x189bb75b],0x1e59b1ea
  4035f1:	push   0xba85a3eb
  4035f6:	sub    eax,0x6de41a0f
  4035fb:	and    eax,DWORD PTR [ebp+esi*1-0x52]
  4035ff:	xor    BYTE PTR [esi],0x5a
  403602:	je     0x4035c0
  403604:	jae    0x40358c
  403606:	outs   dx,DWORD PTR ds:[esi]
  403607:	dec    eax
  403608:	pop    edx
  403609:	add    ah,dl
  40360b:	call   0xd11961e5
  403610:	mov    ah,0xc9
  403612:	arpl   WORD PTR [edx+edi*4+0x64f044eb],di
  403619:	push   esi
  40361a:	popa   
  40361b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40361d:	fmul   DWORD PTR [ebp-0x2af686ca]
  403623:	sbb    al,0x9e
  403625:	cld    
  403626:	inc    edx
  403627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403628:	push   ebp
  403629:	pop    eax
  40362a:	retf   
  40362b:	mov    WORD PTR [ebp+ebx*8-0x287306a7],ss
  403632:	mov    cl,0xf5
  403634:	imul   edi,DWORD PTR [esi],0xffffffca
  403637:	daa    
  403638:	mov    ebx,0x8ba559f7
  40363d:	aas    
  40363e:	out    dx,al
  40363f:	(bad)  
  403640:	mov    cl,0xc3
  403642:	inc    ebp
  403643:	cwde   
  403644:	aam    0x6e
  403646:	jno    0x2f5c0f14
  40364c:	or     eax,0xf4ca350c
  403651:	or     al,0x10
  403653:	mov    ecx,0xe6f023f3
  403658:	xor    eax,0xbb2055ad
  40365d:	adc    al,0x5f
  40365f:	adc    al,0x52
  403661:	xchg   BYTE PTR [esi],ah
  403663:	mov    bh,BYTE PTR [ebx]
  403665:	aad    0x11
  403667:	add    DWORD PTR [ebx+0x65f8a846],0x2b
  40366e:	or     al,0x96
  403670:	jmp    0x790f:0x27b1f0
  403677:	push   ebx
  403678:	add    al,0x28
  40367a:	dec    edi
  40367b:	call   0xc309:0xe04798e6
  403682:	mov    BYTE PTR [ebp+esi*4-0x24],bl
  403686:	icebp  
  403687:	fwait
  403688:	push   0xfffffff1
  40368a:	mov    ds:0xfc668d2b,eax
  40368f:	mov    bp,0x54e
  403693:	sub    edi,edi
  403695:	xlat   BYTE PTR ds:[ebx]
  403696:	push   ebx
  403697:	sbb    ah,al
  403699:	add    eax,0xa34f4940
  40369e:	ror    DWORD PTR [edi],1
  4036a0:	sti    
  4036a1:	and    eax,0xfe520b6d
  4036a6:	dec    edx
  4036a7:	mov    WORD PTR [eax-0x53],?
  4036aa:	jne    0x4036d0
  4036ac:	inc    edi
  4036ad:	add    bh,BYTE PTR [edx-0x4f]
  4036b0:	sub    DWORD PTR [ecx+eax*8],eax
  4036b3:	push   0x6a
  4036b5:	js     0x40364b
  4036b7:	mov    ch,0xf5
  4036b9:	fnsave [edi+edi*2+0x41]
  4036bd:	ficom  DWORD PTR [esi+ecx*1-0x47ecd270]
  4036c4:	pusha  
  4036c5:	bound  ecx,QWORD PTR [ebx+0x6]
  4036c8:	call   0x251712c2
  4036cd:	in     al,0x9a
  4036cf:	xor    DWORD PTR [esi+0x1e4da83c],edi
  4036d5:	and    BYTE PTR [edi-0x12],al
  4036d8:	mov    bh,0x63
  4036da:	fcom   QWORD PTR [esi]
  4036dc:	push   ebp
  4036dd:	loope  0x4036d1
  4036df:	xchg   esi,eax
  4036e0:	sbb    al,0x91
  4036e2:	dec    esp
  4036e3:	in     al,dx
  4036e4:	daa    
  4036e5:	inc    ebp
  4036e6:	cmc    
  4036e7:	mul    DWORD PTR [eax+eax*4]
  4036ea:	and    DWORD PTR [ebx-0x6449935b],ebx
  4036f0:	add    al,0x0
  4036f2:	(bad)
  4036f5:	mov    edx,0x21b150ae
  4036fa:	je     0x40377b
  4036fc:	xchg   ebx,eax
  4036fd:	push   cs
  4036fe:	cmp    DWORD PTR [ebp+0x4de1ea5b],edi
  403704:	aad    0x98
  403706:	shl    BYTE PTR [edx],cl
  403708:	aam    0x9f
  40370a:	idiv   BYTE PTR [edx+0x32]
  40370d:	and    eax,0xab041586
  403712:	jae    0x40372b
  403714:	adc    eax,0xccdec21c
  403719:	jno    0x40374a
  40371b:	ficom  DWORD PTR [esi]
  40371d:	or     ah,ch
  40371f:	lahf   
  403720:	clc    
  403721:	pop    esp
  403722:	arpl   WORD PTR [ecx+0x273acd18],dx
  403728:	jl     0x403729
  40372a:	or     DWORD PTR [esi],ebx
  40372c:	dec    edi
  40372d:	xor    BYTE PTR [ecx],cl
  40372f:	mov    bl,0x5f
  403731:	dec    ebp
  403732:	inc    ebp
  403733:	sbb    eax,0xed5eb4db
  403738:	and    bl,BYTE PTR ds:0x321ec996
  40373e:	data16 hlt 
  403740:	lods   eax,DWORD PTR ds:[esi]
  403741:	add    cl,dh
  403743:	test   DWORD PTR [edx+0x4b30c855],0x796bc2b9
  40374d:	pop    DWORD PTR ds:0x5f209951
  403753:	jecxz  0x4037b6
  403755:	and    al,0x72
  403757:	mov    bh,0x1e
  403759:	adc    al,0x72
  40375b:	pshufw mm7,QWORD PTR [edi],0x6
  40375f:	push   0xa92dd9d4
  403764:	dec    esi
  403765:	pop    edx
  403766:	or     bl,BYTE PTR [ebx+ebx*4]
  403769:	jnp    0x403796
  40376b:	jp     0x40373f
  40376d:	add    BYTE PTR es:[ebx],ah
  403770:	push   esp
  403771:	dec    edi
  403772:	std    
  403773:	mov    WORD PTR [ecx+0x3b],cs
  403776:	xchg   edi,eax
  403777:	aad    0xcf
  403779:	fidiv  WORD PTR [ecx+0x1fdc6af9]
  40377f:	and    eax,0xffe173ef
  403784:	aaa    
  403785:	ja     0x40376c
  403787:	gs daa 
  403789:	scas   eax,DWORD PTR es:[edi]
  40378a:	jne    0x403719
  40378c:	inc    eax
  40378d:	cwde   
  40378e:	push   eax
  40378f:	mov    ebx,0x2b1297c9
  403794:	sub    al,BYTE PTR [ebx]
  403796:	in     al,0x7f
  403798:	add    ch,BYTE PTR [edi]
  40379a:	dec    edi
  40379b:	and    eax,0x76c2020
  4037a0:	jb     0x4037a6
  4037a2:	enter  0x8a87,0xd2
  4037a6:	rcr    DWORD PTR [esi+0x2236d4e5],0xd9
  4037ad:	test   eax,0x5bcd5cab
  4037b2:	push   ds
  4037b3:	push   0xffffffb7
  4037b5:	pop    ebp
  4037b6:	push   ecx
  4037b7:	(bad)  
  4037b8:	mov    esp,0x39d7267b
  4037bd:	test   DWORD PTR [ebp+0x2bb49dc0],eax
  4037c3:	outs   dx,DWORD PTR ds:[esi]
  4037c4:	jno    0x4037b9
  4037c6:	sbb    esp,DWORD PTR [edx-0x7ca65872]
  4037cc:	fld    DWORD PTR [eax]
  4037ce:	mov    eax,0x3d1621b9
  4037d3:	sar    DWORD PTR [esi+0x5bf02c99],cl
  4037d9:	fisubr DWORD PTR [edx+0x64]
  4037dc:	add    al,cl
  4037de:	(bad)  
  4037e0:	stos   DWORD PTR es:[edi],eax
  4037e1:	scas   al,BYTE PTR es:[edi]
  4037e2:	rcr    DWORD PTR [ecx+0x2c99e199],0xb1
  4037e9:	imul   DWORD PTR [eax]
  4037eb:	pop    esi
  4037ec:	xor    al,0xf1
  4037ee:	in     eax,dx
  4037ef:	mov    edx,0x56ef956c
  4037f4:	adc    ebp,edi
  4037f6:	gs push edi
  4037f8:	repz adc edx,DWORD PTR [esi]
  4037fb:	ficom  DWORD PTR [edx-0x16]
  4037fe:	push   edi
  4037ff:	cmp    dh,al
  403801:	jnp    0x4037a7
  403803:	xchg   BYTE PTR ds:0x783b5f20,bh
  403809:	mov    ch,0xc1
  40380b:	add    DWORD PTR [ecx],eax
  40380d:	mov    esp,0xbaeb57cb
  403812:	(bad)  
  403813:	jge    0x4037a9
  403815:	xchg   ebp,eax
  403816:	mov    ds:0xe1ee402b,al
  40381b:	in     eax,dx
  40381c:	shl    DWORD PTR [ebp+0x0],0x61
  403820:	dec    esp
  403821:	inc    ecx
  403822:	sub    eax,0xfe0c215d
  403827:	in     al,0xe3
  403829:	inc    edi
  40382a:	dec    edx
  40382b:	push   edx
  40382c:	inc    ecx
  40382d:	loopne 0x40387f
  40382f:	es xchg edi,eax
  403831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403832:	inc    esi
  403833:	sbb    DWORD PTR [ebx],edx
  403835:	and    BYTE PTR [esi+0x6e],0xb9
  403839:	xchg   DWORD PTR [edi-0x5644e349],edi
  40383f:	dec    edi
  403840:	jecxz  0x4038a6
  403842:	retf   0x7782
  403845:	inc    ecx
  403846:	out    dx,al
  403847:	sub    BYTE PTR [edi-0x27bbab25],dh
  40384d:	mov    bl,0xd6
  40384f:	out    0x61,al
  403851:	xchg   ebp,eax
  403852:	sar    BYTE PTR [edi+ebx*8-0x76],1
  403856:	lea    edx,[edi+0x63]
  403859:	pop    ebp
  40385a:	jo     0x403853
  40385c:	push   es
  40385d:	fsubr  DWORD PTR [esi]
  40385f:	adc    eax,0xbf6bb562
  403864:	in     al,dx
  403865:	cld    
  403866:	loopne 0x403837
  403868:	mov    dh,0xf6
  40386a:	xor    ecx,DWORD PTR [eax]
  40386c:	adc    eax,0xcc86ce27
  403871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403872:	xchg   esp,eax
  403873:	dec    ebx
  403874:	jbe    0x4038ce
  403876:	rcl    BYTE PTR [ebx],0x8a
  403879:	xchg   ebp,eax
  40387a:	mov    dh,0xde
  40387c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40387d:	addr16 dec eax
  40387f:	popf   
  403880:	ficomp DWORD PTR [edi+0x148d3c4]
  403886:	cli    
  403887:	jne    0x4038cb
  403889:	sbb    esi,esp
  40388b:	xchg   edx,eax
  40388c:	in     eax,0xc8
  40388e:	and    edx,DWORD PTR [esp+ebp*4+0x54152293]
  403895:	xchg   DWORD PTR [ebx],edi
  403897:	imul   esi,DWORD PTR [edx+0x48adab09],0xfffffff2
  40389e:	sar    ch,cl
  4038a0:	retf   0x9542
  4038a3:	mov    DWORD PTR [ecx+0x59d729c1],edx
  4038a9:	mov    cl,0x26
  4038ab:	mov    esp,0xd23b98d0
  4038b0:	aas    
  4038b1:	jno    0x40386d
  4038b3:	sub    BYTE PTR [ecx+edi*1],0x75
  4038b7:	fsubrp st(5),st
  4038b9:	in     al,0x92
  4038bb:	ins    DWORD PTR es:[edi],dx
  4038bc:	hlt    
  4038bd:	dec    ecx
  4038be:	add    BYTE PTR [ecx+0x2f0beb51],ch
  4038c4:	pop    edi
  4038c5:	jo     0x4038ed
  4038c7:	pusha  
  4038c8:	test   eax,0xd037515e
  4038cd:	mov    edi,0x90a5ba26
  4038d2:	in     al,0xc2
  4038d4:	or     eax,0x8cf981f2
  4038d9:	repnz retf 
  4038db:	in     eax,0xd5
  4038dd:	ror    DWORD PTR [edx-0x36],0x35
  4038e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e2:	jecxz  0x403901
  4038e4:	(bad)  
  4038e5:	fadd   DWORD PTR [edi-0x4cd925eb]
  4038eb:	sub    DWORD PTR [eax+0x8966999],ebx
  4038f1:	dec    edi
  4038f2:	push   edi
  4038f3:	cmp    edi,DWORD PTR [ebp+eax*1-0x1b]
  4038f7:	xor    edi,ecx
  4038f9:	or     bh,BYTE PTR [ebp-0x676ceb9f]
  4038ff:	call   0x3557b45e
  403904:	mov    edi,0x303030f5
  403909:	sub    dl,bh
  40390b:	push   eax
  40390c:	sbb    BYTE PTR [ebp+0x3eb38aee],bh
  403912:	(bad)  
  403913:	outs   dx,DWORD PTR cs:[esi]
  403915:	or     eax,0xc719d2b4
  40391a:	add    BYTE PTR [ebx],ah
  40391c:	add    eax,0x3ad65024
  403921:	xchg   esp,eax
  403922:	and    BYTE PTR [ebx],al
  403924:	repnz add BYTE PTR [eax+0x27],dl
  403928:	adc    BYTE PTR [ecx+ebp*8],ah
  40392b:	mov    esp,0x8c78d819
  403930:	xlat   BYTE PTR ds:[ebx]
  403931:	ins    DWORD PTR es:[edi],dx
  403932:	test   BYTE PTR [edi],ch
  403934:	sbb    eax,0x870c0904
  403939:	shr    BYTE PTR ds:0xb3ce70fe,0xae
  403940:	cld    
  403941:	inc    edx
  403942:	mov    al,ds:0x4226fbbf
  403947:	or     al,0xd9
  403949:	imul   esp,DWORD PTR [edi+0x18],0xffffffa5
  40394d:	and    ebx,DWORD PTR [edi+0x635bfd86]
  403953:	loopne 0x40391d
  403955:	addr16 xchg esi,eax
  403957:	cld    
  403958:	leave  
  403959:	lea    ebx,[ecx-0x27]
  40395c:	outs   dx,BYTE PTR ds:[esi]
  40395d:	or     BYTE PTR [ecx+0x44e7eeea],0xc7
  403964:	into   
  403965:	into   
  403966:	cmovo  ebx,edx
  403969:	jno    0x4039c7
  40396b:	mov    bl,BYTE PTR [ebx+0x23]
  40396e:	jnp    0x40390f
  403970:	(bad)  
  403971:	pop    eax
  403972:	push   ecx
  403973:	cwde   
  403974:	xchg   DWORD PTR [ebp+0x51db3f31],ebx
  40397a:	in     al,0x39
  40397c:	(bad)  
  40397d:	jmp    0x403968
  40397f:	gs push ecx
  403981:	aad    0x44
  403983:	xchg   ecx,eax
  403984:	aad    0xd5
  403986:	and    BYTE PTR [ebx-0x1f],dh
  403989:	loope  0x403939
  40398b:	jo     0x4039e8
  40398d:	stos   DWORD PTR es:[edi],eax
  40398e:	jb     0x403990
  403990:	rcl    BYTE PTR [edx+0x4ff1097f],0x1
  403997:	push   esp
  403998:	pop    esi
  403999:	loopne 0x40393d
  40399b:	hlt    
  40399c:	mov    ecx,0x9331db9
  4039a1:	cmp    al,0x3b
  4039a3:	sti    
  4039a4:	mov    DWORD PTR [esi],eax
  4039a6:	xlat   BYTE PTR ds:[ebx]
  4039a7:	mov    bl,BYTE PTR [edi+0x30]
  4039aa:	fsub   st,st(5)
  4039ac:	push   edx
  4039ad:	mov    esi,0xf5c3aa55
  4039b2:	mov    ds:0x1f4606f5,eax
  4039b7:	gs (bad) 
  4039b9:	aaa    
  4039ba:	lea    esi,[ebx+0x4c15dc27]
  4039c0:	jge    0x403961
  4039c2:	mov    dl,0xfc
  4039c4:	push   ebp
  4039c5:	add    al,0x8c
  4039c7:	shr    DWORD PTR [ecx],0xec
  4039ca:	jo     0x403952
  4039cc:	inc    edx
  4039cd:	adc    edx,DWORD PTR [ecx]
  4039cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d0:	sub    eax,0x2da40688
  4039d5:	jb     0x403a42
  4039d7:	jp     0x403a0a
  4039d9:	adc    al,0x2e
  4039db:	sbb    eax,0x6c9f068
  4039e0:	dec    edi
  4039e1:	cwde   
  4039e2:	dec    esi
  4039e3:	jl     0x4039c9
  4039e5:	js     0x4039c9
  4039e7:	xlat   BYTE PTR ds:[ebx]
  4039e8:	add    al,BYTE PTR [esi-0x5aaa111c]
  4039ee:	pop    es
  4039ef:	out    0x69,eax
  4039f1:	jne    0x4039a4
  4039f3:	out    0x42,al
  4039f5:	stos   DWORD PTR es:[edi],eax
  4039f6:	ja     0x4039b1
  4039f8:	neg    BYTE PTR [ebx+0x4b8974d6]
  4039fe:	cdq    
  4039ff:	fs sbb eax,0x33ea027b
  403a05:	jl     0x4039d6
  403a07:	sar    BYTE PTR [edx],cl
  403a09:	adc    eax,0x6287f819
  403a0e:	sub    dl,BYTE PTR [edx+0xe]
  403a11:	outs   dx,BYTE PTR ds:[esi]
  403a12:	jl     0x4039d7
  403a14:	rol    dh,0x4b
  403a17:	and    DWORD PTR [ebx-0x49ac1b53],ecx
  403a1d:	mov    esi,0x85e62902
  403a22:	adc    ah,BYTE PTR [eax-0x4de2dc96]
  403a28:	xchg   BYTE PTR [edx],ah
  403a2a:	std    
  403a2b:	lea    ebp,[ecx]
  403a2d:	cwde   
  403a2e:	call   0xd5e7:0xa748d4ce
  403a35:	sub    BYTE PTR [esi-0x61c6f718],dl
  403a3b:	inc    edi
  403a3c:	mov    al,BYTE PTR [ebp+0x6b9ab422]
  403a42:	test   ebx,ebx
  403a44:	imul   ecx,DWORD PTR [eax],0x2c3453d7
  403a4a:	mov    cl,0xe1
  403a4c:	pushf  
  403a4d:	mov    eax,cs:0x9a09fbed
  403a53:	jecxz  0x403a39
  403a55:	and    BYTE PTR [edi+0x42],0x11
  403a59:	dec    eax
  403a5a:	xor    esi,ecx
  403a5c:	adc    al,0x33
  403a5e:	sbb    eax,0x519cce9b
  403a63:	imul   eax,DWORD PTR [ebp-0x2b45d604],0xbc6b6dc1
  403a6d:	jmp    0x403a9d
  403a6f:	sub    edx,DWORD PTR [ecx]
  403a71:	das    
  403a72:	dec    eax
  403a73:	mov    ebx,0xda1a7ca4
  403a78:	sbb    ecx,DWORD PTR [ecx-0x37]
  403a7b:	and    BYTE PTR [esi],0x5f
  403a7e:	out    0xaf,al
  403a80:	mov    eax,ds:0xc63457cf
  403a85:	jns    0x403a68
  403a87:	je     0x403add
  403a89:	sub    edx,DWORD PTR [edx]
  403a8b:	icebp  
  403a8c:	add    al,0xc1
  403a8e:	and    al,0x6
  403a90:	xor    ah,ch
  403a92:	or     eax,0x62b9f76a
  403a97:	sbb    DWORD PTR [ebx],esp
  403a99:	rcr    cl,cl
  403a9b:	or     BYTE PTR [ebx+ecx*2-0x408e0b3a],0x7f
  403aa3:	or     eax,0x95432f42
  403aa8:	out    dx,al
  403aa9:	mov    fs,WORD PTR [ebx-0x1e9ce192]
  403aaf:	jmp    0x5d73:0x4c1cf4e4
  403ab6:	adc    al,0xa5
  403ab8:	push   ecx
  403ab9:	xchg   esi,eax
  403aba:	scas   al,BYTE PTR es:[edi]
  403abb:	push   cs
  403abc:	add    eax,0x23f1bfc1
  403ac1:	jno    0x403af0
  403ac3:	scas   al,BYTE PTR es:[edi]
  403ac4:	mov    al,ds:0x42c694a
  403ac9:	scas   al,BYTE PTR es:[edi]
  403aca:	sub    eax,DWORD PTR [eax+0x3170b991]
  403ad0:	fisttp QWORD PTR [edi]
  403ad2:	cmp    eax,0x74c5b5ff
  403ad7:	cli    
  403ad8:	ret    
  403ad9:	jbe    0x403ada
  403adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403adc:	lods   al,BYTE PTR ds:[esi]
  403add:	jne    0x403b03
  403adf:	loopne 0x403abd
  403ae1:	xchg   ebx,eax
  403ae2:	pop    ebp
  403ae3:	xor    DWORD PTR [esi+0x3088a6ce],ecx
  403ae9:	or     cl,BYTE PTR [ebp-0x4c869dc0]
  403aef:	mov    bh,0x76
  403af1:	popa   
  403af2:	fild   DWORD PTR [esi+0x60]
  403af5:	out    dx,eax
  403af6:	lods   al,BYTE PTR ds:[esi]
  403af7:	aas    
  403af8:	mov    dl,0xf4
  403afa:	pop    edi
  403afb:	mov    ebp,esi
  403afd:	int    0xaf
  403aff:	and    DWORD PTR [edx+0x6fffda6d],eax
  403b05:	cld    
  403b06:	fld    QWORD PTR [eax]
  403b08:	ret    0xc8d0
  403b0b:	mov    dl,0x77
  403b0d:	nop
  403b0e:	dec    eax
  403b0f:	(bad)  
  403b11:	or     eax,0x89acad97
  403b16:	leave  
  403b17:	and    al,0xec
  403b19:	jbe    0x403b2a
  403b1b:	loope  0x403a9f
  403b1d:	jno    0x403b2c
  403b1f:	dec    edx
  403b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b21:	(bad)  
  403b22:	jmp    0x6660:0xb42bf3e5
  403b29:	dec    ecx
  403b2a:	pop    edi
  403b2b:	bound  eax,QWORD PTR [edx-0x7fdeeaa2]
  403b31:	call   0x4e82:0x12625ded
  403b38:	iret   
  403b39:	cld    
  403b3a:	test   DWORD PTR [eax-0x220d206d],0xcbb87ae4
  403b44:	sub    eax,0xebcee157
  403b49:	sbb    BYTE PTR [ebp-0x1c],bh
  403b4c:	lock lods al,BYTE PTR ds:[esi]
  403b4e:	push   edx
  403b4f:	sti    
  403b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b51:	loopne 0x403b24
  403b53:	lods   al,BYTE PTR ds:[esi]
  403b54:	fwait
  403b55:	retf   0x2e8d
  403b58:	js     0x403aef
  403b5a:	bound  ecx,QWORD PTR [ecx]
  403b5c:	leave  
  403b5d:	dec    eax
  403b5e:	(bad)  
  403b60:	imul   esp,DWORD PTR [eax],0xfffffff8
  403b63:	stos   BYTE PTR es:[edi],al
  403b64:	outs   dx,BYTE PTR ds:[esi]
  403b65:	sub    BYTE PTR [edx+eiz*8+0x2b],al
  403b69:	lahf   
  403b6a:	dec    esi
  403b6b:	stos   BYTE PTR es:[edi],al
  403b6c:	arpl   WORD PTR [edx-0xa],sp
  403b6f:	cs jae 0x403b8b
  403b72:	xchg   DWORD PTR [esi],ecx
  403b74:	or     dh,cl
  403b76:	popf   
  403b77:	sub    eax,0x7cf6e98a
  403b7c:	icebp  
  403b7d:	jae    0x403be5
  403b7f:	mov    al,0xac
  403b81:	inc    esp
  403b82:	repnz lahf 
  403b84:	pop    eax
  403b85:	sub    ecx,ecx
  403b87:	xchg   esi,eax
  403b88:	mov    ebx,DWORD PTR [eax]
  403b8a:	pop    ebp
  403b8b:	adc    ch,bl
  403b8d:	dec    ebx
  403b8e:	mov    al,ah
  403b90:	sti    
  403b91:	mov    dh,0x94
  403b93:	adc    dh,BYTE PTR [ebp+0x2e]
  403b96:	push   ebp
  403b97:	leave  
  403b98:	nop
  403b99:	and    eax,0x7ed3da62
  403b9e:	shl    DWORD PTR [ecx+0xa],cl
  403ba1:	inc    esi
  403ba2:	test   eax,0xa0248895
  403ba7:	lds    ecx,FWORD PTR [edi+ebx*8-0x226728ef]
  403bae:	call   0x8005:0x9befe713
  403bb5:	and    eax,0xffffff80
  403bb8:	aaa    
  403bb9:	pop    ebx
  403bba:	push   ss
  403bbb:	(bad)  
  403bbc:	xchg   esi,eax
  403bbd:	imul   esp,DWORD PTR [ebx+0x3df6e92a],0xaa6b2d17
  403bc7:	dec    ecx
  403bc8:	dec    edi
  403bc9:	sbb    DWORD PTR [ecx+0x3b],0xd
  403bcd:	jnp    0x403bc9
  403bcf:	xchg   edi,eax
  403bd0:	sbb    al,0x3f
  403bd2:	push   esp
  403bd3:	push   ds
  403bd4:	jno    0x403b65
  403bd6:	out    0xd5,eax
  403bd8:	vprotd xmm4,xmm1,0x25
  403bdd:	in     al,0x91
  403bdf:	adc    BYTE PTR [edi-0x15],ah
  403be2:	sbb    al,0x1d
  403be4:	in     al,dx
  403be5:	loope  0x403c26
  403be7:	and    eax,0xbd24d037
  403bec:	lods   al,BYTE PTR gs:[esi]
  403bee:	xor    edx,DWORD PTR [ebp-0x4b601bcd]
  403bf4:	mov    edi,0x4b1d93ee
  403bf9:	push   edi
  403bfa:	ja     0x403bb0
  403bfc:	pop    es
  403bfd:	adc    BYTE PTR [ebx],ch
  403bff:	lea    eax,[edi+0x3126f858]
  403c05:	into   
  403c06:	aad    0xe7
  403c08:	xchg   edx,eax
  403c09:	xchg   DWORD PTR [ebx+edi*4],eax
  403c0c:	inc    esp
  403c0d:	xchg   edi,eax
  403c0e:	shl    DWORD PTR [edi+0x73],cl
  403c11:	pop    ds
  403c12:	mov    esi,0xb0f5dccb
  403c17:	in     al,dx
  403c18:	lea    esp,[edx-0x49]
  403c1b:	fld    DWORD PTR [ebx-0x362bf01e]
  403c21:	inc    ebx
  403c22:	cli    
  403c23:	sbb    BYTE PTR [esi*8+0x51d6c6c7],ah
  403c2a:	aad    0x9b
  403c2c:	mov    dl,0x11
  403c2e:	inc    edi
  403c2f:	rcr    bl,cl
  403c31:	(bad)  
  403c32:	or     BYTE PTR [esp+ebp*1-0x1b33ddef],0x74
  403c3a:	jns    0x403bd1
  403c3c:	xor    edi,DWORD PTR [ebx-0x2214d76d]
  403c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c43:	inc    edx
  403c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c45:	out    dx,eax
  403c46:	test   DWORD PTR [eax],esp
  403c48:	xchg   esp,eax
  403c49:	addr16 test al,0x82
  403c4c:	shr    al,cl
  403c4e:	aam    0x2
  403c50:	push   ss
  403c51:	xor    eax,0xc89c8797
  403c56:	mov    edx,0x5f47a848
  403c5b:	inc    eax
  403c5c:	fistp  DWORD PTR [edi-0x2d]
  403c5f:	repz mov edi,DWORD PTR [esi+0x61]
  403c63:	jmp    0xd2d3:0x8473d1bd
  403c6a:	test   eax,0x559d81bb
  403c6f:	mov    ah,0xdb
  403c71:	dec    edx
  403c72:	inc    edx
  403c73:	stos   DWORD PTR es:[edi],eax
  403c74:	pushf  
  403c75:	dec    edi
  403c76:	jae    0x403cc0
  403c78:	in     al,dx
  403c79:	push   edi
  403c7a:	fimul  DWORD PTR [edi+0x45]
  403c7d:	inc    edx
  403c7e:	push   ebx
  403c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c80:	pop    esi
  403c81:	pop    eax
  403c82:	push   edx
  403c83:	cmp    DWORD PTR [ecx],eax
  403c85:	repz int 0xa6
  403c88:	lahf   
  403c89:	inc    esi
  403c8a:	cmp    bh,BYTE PTR [edi+eiz*2]
  403c8d:	aam    0xe1
  403c8f:	hlt    
  403c90:	mov    bh,0x1a
  403c92:	cld    
  403c93:	out    0xd1,eax
  403c95:	jnp    0x403c20
  403c97:	cmp    eax,0xe82f55b1
  403c9c:	add    edx,DWORD PTR [edi-0x26]
  403c9f:	test   eax,0x64668bbc
  403ca4:	sbb    BYTE PTR [eax],bl
  403ca6:	xchg   ebp,eax
  403ca7:	sti    
  403ca8:	cmp    ah,BYTE PTR [eax-0x7c3e3bfe]
  403cae:	adc    ebx,0xebf32684
  403cb4:	xor    DWORD PTR [esi],0xa81aa502
  403cba:	mov    esi,0x456ba721
  403cbf:	or     eax,0xe77ceb32
  403cc4:	sub    DWORD PTR [eax-0x3a],edx
  403cc7:	mov    dl,bh
  403cc9:	cmp    bh,ch
  403ccb:	and    bl,BYTE PTR [esp+eiz*2-0x8]
  403ccf:	xor    eax,0x61955bdd
  403cd4:	sub    al,0xc8
  403cd6:	mov    ch,0x3e
  403cd8:	push   ebx
  403cd9:	sbb    DWORD PTR [edx-0x46ee144],edi
  403cdf:	aas    
  403ce0:	sahf   
  403ce1:	int3   
  403ce2:	ror    BYTE PTR [eax-0x514da1c6],1
  403ce8:	ds dec ebx
  403cea:	xchg   ebp,eax
  403ceb:	pop    esp
  403cec:	repz xor al,ch
  403cef:	icebp  
  403cf0:	inc    eax
  403cf1:	enter  0x1fce,0xcd
  403cf5:	pop    esp
  403cf6:	(bad)  
  403cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf8:	sub    eax,DWORD PTR [edx]
  403cfa:	repz sub eax,0xa0b6393d
  403d00:	mov    edi,0xde3b30ec
  403d05:	jmp    0x403cc4
  403d07:	rcr    DWORD PTR [edi-0x2a6730f7],cl
  403d0d:	cs jp  0x403cde
  403d10:	xchg   BYTE PTR [ebx],cl
  403d12:	pushf  
  403d13:	ret    0x4641
  403d16:	ficomp DWORD PTR [ebx+ecx*4+0x738493d7]
  403d1d:	xor    eax,0x8fdb9bfc
  403d22:	jbe    0x403d0a
  403d24:	faddp  st(2),st
  403d26:	mov    dl,BYTE PTR [edi]
  403d28:	and    al,0xef
  403d2a:	das    
  403d2b:	mov    DWORD PTR [edx],ecx
  403d2d:	js     0x403d75
  403d2f:	test   eax,0x97ea3a82
  403d34:	pop    ecx
  403d35:	inc    edx
  403d36:	and    BYTE PTR [edx+0xecdfe7c],bh
  403d3c:	push   0xffffffd6
  403d3e:	aad    0xf1
  403d40:	add    DWORD PTR [esi+0x2],edx
  403d43:	loop   0x403cdd
  403d45:	jmpw   0xf92f
  403d49:	inc    ebp
  403d4a:	enter  0xf70,0x9f
  403d4e:	sub    bl,BYTE PTR [esi+0x156de41b]
  403d54:	dec    ebx
  403d55:	(bad)  
  403d56:	xlat   BYTE PTR ds:[ebx]
  403d57:	or     bh,BYTE PTR [esi-0x2ca13890]
  403d5d:	ffreep st(1)
  403d5f:	ja     0x403d38
  403d61:	sub    ebx,DWORD PTR [edi+0x65]
  403d64:	and    ebp,DWORD PTR [edi-0x26a313e6]
  403d6a:	mov    ds:0xecd93b6b,eax
  403d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d70:	jg     0x403d83
  403d72:	dec    si
  403d74:	hlt    
  403d75:	sub    al,0xec
  403d77:	rcr    DWORD PTR [ebx+edi*4],cl
  403d7a:	pop    ebx
  403d7b:	in     eax,dx
  403d7c:	out    0x81,eax
  403d7e:	xor    ebp,DWORD PTR [eax+esi*8+0xe5b4fb9]
  403d85:	push   0xb
  403d87:	pop    edx
  403d88:	pop    esp
  403d89:	mov    ebx,0xe04e522a
  403d8e:	call   0xb7c56f95
  403d93:	push   edx
  403d94:	ss retf 0xd6d7
  403d98:	cld    
  403d99:	mov    bh,0x31
  403d9b:	shl    BYTE PTR [edx],0x3a
  403d9e:	inc    ebp
  403d9f:	lods   al,BYTE PTR ds:[esi]
  403da0:	xor    DWORD PTR [ebx+0x7cfa0297],ebx
  403da6:	loopne 0x403d82
  403da8:	inc    edx
  403da9:	inc    bx
  403dab:	add    edi,DWORD PTR [ecx+0x21]
  403dae:	cmc    
  403daf:	pusha  
  403db0:	test   al,0x31
  403db2:	aas    
  403db3:	push   edx
  403db4:	jb     0x403def
  403db6:	jae    0x403e09
  403db8:	inc    eax
  403db9:	fnstsw WORD PTR [edx+0x6b]
  403dbc:	out    0xdd,eax
  403dbe:	shr    DWORD PTR [edx],cl
  403dc0:	or     esp,edx
  403dc2:	or     BYTE PTR [edi],ch
  403dc4:	or     BYTE PTR [eax],ch
  403dc6:	or     ch,BYTE PTR [edi+eiz*2]
  403dc9:	das    
  403dca:	jge    0x403dfb
  403dcc:	sub    ebp,esi
  403dce:	lds    ebp,FWORD PTR [ecx]
  403dd0:	stc    
  403dd1:	sbb    al,dh
  403dd3:	fs pop esi
  403dd5:	sahf   
  403dd6:	jne    0x403e2d
  403dd8:	(bad)  
  403dd9:	mov    bl,0x88
  403ddb:	hlt    
  403ddc:	pop    edi
  403ddd:	shl    DWORD PTR [ebp+0x9],1
  403de0:	into   
  403de1:	int3   
  403de2:	xor    DWORD PTR [eax],esi
  403de4:	add    DWORD PTR [ecx],esp
  403de6:	mov    edi,0x66a92df9
  403deb:	and    eax,0xcb0f615e
  403df0:	clc    
  403df1:	or     BYTE PTR [esp+eiz*2-0x1d],ah
  403df5:	clc    
  403df6:	in     al,dx
  403df7:	pop    esi
  403df8:	icebp  
  403df9:	add    edi,DWORD PTR [ebx+edi*1-0x280b9f6c]
  403e00:	outs   dx,DWORD PTR ds:[esi]
  403e01:	pop    edx
  403e02:	jg     0x403dd5
  403e04:	sub    bl,0xf4
  403e07:	mov    bh,0x90
  403e09:	cli    
  403e0a:	and    ebx,DWORD PTR [ecx]
  403e0c:	into   
  403e0d:	ins    DWORD PTR es:[edi],dx
  403e0e:	xlat   BYTE PTR ds:[ebx]
  403e0f:	lods   al,BYTE PTR ds:[esi]
  403e10:	adc    ebx,DWORD PTR [ecx-0x6a]
  403e13:	es jl  0x403e59
  403e16:	mov    ds:0x4824e39,al
  403e1b:	outs   dx,BYTE PTR ds:[esi]
  403e1c:	cmp    al,0x5f
  403e1e:	jl     0x403de1
  403e20:	int    0xbe
  403e22:	sub    ch,BYTE PTR [edx]
  403e24:	aam    0x33
  403e26:	jmp    0x4fce046d
  403e2b:	pop    edx
  403e2c:	arpl   bp,bx
  403e2e:	cmp    al,0x75
  403e30:	add    BYTE PTR [ebx],cl
  403e32:	adc    ch,dh
  403e34:	sub    eax,DWORD PTR [ecx-0x25]
  403e37:	inc    esi
  403e38:	sub    DWORD PTR [esi+0x4384120c],ebx
  403e3e:	sbb    al,0xf7
  403e40:	cmp    ebp,DWORD PTR [edi+0x51]
  403e43:	dec    ebp
  403e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e45:	call   FWORD PTR [ebx-0x2a]
  403e48:	fistp  QWORD PTR [edx+eiz*2-0x6e]
  403e4c:	cld    
  403e4d:	js     0x403de1
  403e4f:	push   ds
  403e50:	ds adc edi,ebx
  403e53:	ja     0x403dde
  403e55:	sbb    BYTE PTR [edx-0x2bbf47a7],dl
  403e5b:	add    eax,0xea0805a
  403e60:	mov    ds:0xd5fc6bcf,eax
  403e65:	cmp    eax,0x46066688
  403e6a:	dec    ebp
  403e6b:	setge  BYTE PTR [ecx]
  403e6e:	(bad)  
  403e70:	sbb    edx,ecx
  403e72:	jge    0x403e4a
  403e74:	mov    edi,0x526611c2
  403e79:	pop    esi
  403e7a:	mov    ch,0xa0
  403e7c:	dec    edi
  403e7d:	imul   BYTE PTR cs:[eax+0x3b]
  403e81:	mov    cl,0x6
  403e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e84:	cmp    dh,BYTE PTR [ebp-0x36]
  403e87:	pop    es
  403e88:	or     eax,0xdc06d768
  403e8d:	stos   BYTE PTR es:[edi],al
  403e8e:	lock stos DWORD PTR es:[edi],eax
  403e90:	cwde   
  403e91:	and    esi,0xfffffff8
  403e94:	stc    
  403e95:	cmp    al,0x4c
  403e97:	jg     0x403e6d
  403e99:	cmp    al,0x6f
  403e9b:	test   DWORD PTR [ecx],edx
  403e9d:	repz sbb dh,BYTE PTR [ecx+eiz*2]
  403ea1:	or     ecx,esi
  403ea3:	mov    ecx,0x28df3062
  403ea8:	mov    dh,0x83
  403eaa:	xor    BYTE PTR [eax],bh
  403eac:	popf   
  403ead:	sbb    BYTE PTR [edi+0x7ccfdebd],dh
  403eb3:	inc    ax
  403eb5:	mov    al,ds:0x783325e3
  403eba:	repnz sub dh,cl
  403ebd:	(bad)  
  403ebf:	test   al,0x3
  403ec1:	mov    bh,0xe5
  403ec3:	dec    ecx
  403ec4:	mov    esi,0xf7527bb1
  403ec9:	sti    
  403eca:	popa   
  403ecb:	xor    eax,0x8961b646
  403ed0:	adc    al,0x7b
  403ed2:	clc    
  403ed3:	or     ah,ah
  403ed5:	jp     0x403f4c
  403ed7:	jp     0x403f4f
  403ed9:	add    ah,BYTE PTR [ebp-0x17]
  403edc:	fs sub al,0xbc
  403edf:	sub    BYTE PTR [ecx+edi*1+0x54],0x9d
  403ee4:	sbb    DWORD PTR [ebp+0x1e],ecx
  403ee7:	pushf  
  403ee8:	ja     0x403f37
  403eea:	or     al,0x34
  403eec:	jb     0x403e8d
  403eee:	dec    edx
  403eef:	nop
  403ef0:	mov    esi,0xff854d40
  403ef5:	arpl   WORD PTR [esi+0x43],bp
  403ef8:	pop    es
  403ef9:	jbe    0x403ef5
  403efb:	ror    eax,cl
  403efd:	inc    edx
  403efe:	push   0xffffffee
  403f00:	sbb    ecx,eax
  403f02:	nop
  403f03:	test   al,0xcb
  403f05:	ror    DWORD PTR [ecx],1
  403f07:	adc    DWORD PTR ds:0x31f0f5b2,esp
  403f0d:	push   0x8296b4af
  403f12:	jo     0x403ee2
  403f14:	repnz mov ecx,DWORD PTR [edx+edx*4-0x741b134e]
  403f1c:	mov    esp,0xeb4511e4
  403f21:	shl    BYTE PTR [ebp+0x25],0x2f
  403f25:	rcl    DWORD PTR [ebp-0x218c7923],cl
  403f2b:	inc    esi
  403f2c:	test   DWORD PTR [ecx+0x68],0x624a6cd9
  403f33:	pop    edi
  403f34:	imul   eax,esp,0x5c
  403f37:	mov    esp,esp
  403f39:	dec    ebx
  403f3a:	iret   
  403f3b:	jmp    0xb3772709
  403f40:	lock imul edi,DWORD PTR [ecx-0x2a],0xba252852
  403f48:	ss mov cl,0x93
  403f4b:	xor    DWORD PTR [eax+0x5adecec7],0xccfbc4e6
  403f55:	adc    al,0x9e
  403f57:	fdiv   DWORD PTR [edx-0x16ef9c1f]
  403f5d:	mov    edx,0xc591cbec
  403f62:	popa   
  403f63:	mov    edx,0x7437fd46
  403f68:	pop    ds
  403f69:	dec    ebp
  403f6a:	dec    edx
  403f6b:	pop    ebp
  403f6c:	into   
  403f6d:	push   ecx
  403f6e:	imul   eax,esp,0xffffffae
  403f71:	or     al,bl
  403f73:	imul   eax,DWORD PTR [edx-0x51c1c2d9],0x951af13a
  403f7d:	mov    al,ds:0x385523cc
  403f82:	jmp    0xe7d1:0x59e85380
  403f89:	add    al,0x64
  403f8b:	cmp    DWORD PTR [ebp+0xb],esi
  403f8e:	cmp    cl,BYTE PTR [ecx+eax*2-0x3b]
  403f92:	xor    BYTE PTR [edx-0x397c9e04],bh
  403f98:	jbe    0x403fec
  403f9a:	mov    ch,0xdf
  403f9c:	lock inc edi
  403f9e:	sbb    DWORD PTR ss:0x28011db0,ecx
  403fa5:	cmp    eax,0x8edca6c2
  403faa:	ret    
  403fab:	push   esi
  403fac:	mov    al,0xef
  403fae:	cmp    eax,0x9b10106f
  403fb3:	retf   0x6dea
  403fb6:	lock inc ebp
  403fb8:	test   al,0x57
  403fba:	mov    eax,ds:0x76837205
  403fbf:	ins    DWORD PTR es:[edi],dx
  403fc0:	loop   0x403fe9
  403fc2:	jmp    0x403f72
  403fc4:	adc    edi,edx
  403fc6:	adc    ecx,ecx
  403fc8:	jbe    0x403f4c
  403fca:	mov    eax,ds:0xb7d90a93
  403fcf:	mov    ch,0xd1
  403fd1:	mov    ds:0x59318987,al
  403fd6:	sti    
  403fd7:	inc    edi
  403fd8:	sysexit 
  403fda:	push   edx
  403fdb:	and    DWORD PTR [esi+0x21],ebp
  403fde:	cwde   
  403fdf:	jmp    0x4f821c98
  403fe4:	cld    
  403fe5:	jl     0x403f76
  403fe7:	outs   dx,BYTE PTR ds:[esi]
  403fe8:	(bad)  
  403fe9:	retf   
  403fea:	call   0x4d749d0
  403fef:	fistp  QWORD PTR [edi-0x38a0b927]
  403ff5:	arpl   WORD PTR [edx-0x50],dx
  403ff8:	inc    ebx
  403ff9:	call   0xe5ae3724
  403ffe:	push   ebp
  403fff:	leave  
  404000:	lds    ebx,FWORD PTR [eax-0x49e3ffdd]
  404006:	inc    esp
  404007:	dec    edi
  404008:	jecxz  0x404027
  40400a:	je     0x403f97
  40400c:	sar    BYTE PTR [esi-0x7da6ba80],0xe4
  404013:	addr16 addr16 xchg esp,eax
  404016:	pop    eax
  404017:	ret    0xcc88
  40401a:	stc    
  40401b:	push   ebx
  40401c:	or     al,0x13
  40401e:	xor    esp,DWORD PTR cs:[ecx]
  404021:	or     al,0xd4
  404023:	cmova  esp,DWORD PTR [eax]
  404026:	sbb    ch,al
  404028:	sub    eax,0xc2c380f5
  40402d:	pushf  
  40402e:	repnz push edi
  404030:	mov    al,0xb5
  404032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404033:	push   0xffffff96
  404035:	inc    ebp
  404036:	add    eax,0xb5479898
  40403b:	clc    
  40403c:	mov    eax,0x3fe7d6ea
  404041:	dec    ebx
  404042:	scas   al,BYTE PTR es:[edi]
  404043:	add    bh,cl
  404045:	rcl    BYTE PTR [esi-0x28],1
  404048:	and    al,0xb0
  40404a:	popa   
  40404b:	pop    ecx
  40404c:	push   esi
  40404d:	push   eax
  40404e:	xor    al,0xc7
  404050:	pop    ss
  404051:	jecxz  0x403ffb
  404053:	sbb    al,0xed
  404055:	cmc    
  404056:	pushf  
  404057:	xor    esi,DWORD PTR [esi]
  404059:	fimul  WORD PTR [esp+ebx*1-0x335d68d3]
  404060:	jnp    0x4040aa
  404062:	add    ebx,DWORD PTR [edi+esi*8+0x2b32db43]
  404069:	lock pop edi
  40406b:	sahf   
  40406c:	or     dh,BYTE PTR [ebx+0x33]
  40406f:	sete   dl
  404072:	mov    ss,esi
  404074:	or     esp,eax
  404076:	adc    bh,BYTE PTR [eax+edi*2]
  404079:	iret   
  40407a:	(bad)  
  40407b:	push   ebp
  40407c:	arpl   WORD PTR [edx],si
  40407e:	and    bh,BYTE PTR [ebx]
  404080:	mul    BYTE PTR [ebp-0x5bb8e4]
  404086:	xchg   ebp,eax
  404087:	loop   0x404088
  404089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408a:	and    DWORD PTR [edx],ebp
  40408c:	push   cs
  40408d:	pop    es
  40408e:	xchg   ecx,eax
  40408f:	xlat   BYTE PTR ds:[ebx]
  404090:	ss repz js 0x404090
  404094:	dec    ecx
  404095:	js     0x404069
  404097:	cmp    DWORD PTR [eax],0x41ac2e
  40409d:	(bad)
  4040a0:	pusha  
  4040a1:	sbb    DWORD PTR [ebp-0x1e501caa],0xffffffd6
  4040a8:	lods   al,BYTE PTR ds:[esi]
  4040a9:	ror    BYTE PTR [ecx-0x60],0xca
  4040ad:	xor    DWORD PTR [edi],ecx
  4040af:	rcr    DWORD PTR ds:0x7030359,1
  4040b5:	shr    BYTE PTR [ebp-0x4b],1
  4040b8:	pop    ss
  4040b9:	sar    BYTE PTR [eax],0x16
  4040bc:	pop    edx
  4040bd:	pop    edx
  4040be:	aad    0x15
  4040c0:	nop
  4040c1:	jb     0x4040a8
  4040c3:	jg     0x4040c8
  4040c5:	dec    esp
  4040c6:	ret    
  4040c7:	xchg   ecx,eax
  4040c8:	clc    
  4040c9:	jns    0x404118
  4040cb:	or     ebp,DWORD PTR [ecx+0x15c3b971]
  4040d1:	inc    edx
  4040d2:	adc    al,0x81
  4040d4:	add    DWORD PTR [edi+0x60],esp
  4040d7:	mov    edi,DWORD PTR [ebp+ebp*1+0x560a0ceb]
  4040de:	and    edi,DWORD PTR [edx+eax*4]
  4040e1:	mov    ah,0xbf
  4040e3:	or     al,BYTE PTR [edx+0xc4924ca]
  4040e9:	and    bh,BYTE PTR [ebx+0x53]
  4040ec:	scas   al,BYTE PTR es:[edi]
  4040ed:	xchg   esp,eax
  4040ee:	test   al,0x65
  4040f0:	sbb    BYTE PTR [edi+0x53],0xa6
  4040f4:	pop    es
  4040f5:	int    0x30
  4040f7:	dec    ecx
  4040f8:	add    ah,BYTE PTR [ebp+0x73]
  4040fb:	jnp    0x4040f7
  4040fd:	sub    BYTE PTR ds:0xb2fb8a6f,dh
  404103:	dec    esp
  404104:	and    ah,BYTE PTR [ebx+0x12d5d73a]
  40410a:	scas   al,BYTE PTR es:[edi]
  40410b:	cmp    DWORD PTR [eax+edi*4+0x36],0x7f
  404110:	shr    ah,1
  404112:	sbb    ax,0xebc4
  404116:	and    edx,esi
  404118:	ja     0x40411e
  40411a:	mov    esp,0xba6fbd9a
  404120:	imul   edi,eax,0x72
  404123:	inc    esi
  404124:	sbb    DWORD PTR [ebx],edi
  404126:	arpl   sp,bx
  404128:	lods   eax,DWORD PTR ds:[esi]
  404129:	and    ebx,DWORD PTR [eax]
  40412b:	test   eax,0x612b84d5
  404130:	and    al,0x51
  404132:	and    DWORD PTR [esp+ebx*8-0x74],ecx
  404136:	sub    DWORD PTR [ebp-0x56],edx
  404139:	and    al,0x98
  40413b:	and    DWORD PTR [eax-0x20],edx
  40413e:	out    0xca,eax
  404140:	jle    0x4040f9
  404142:	es ss dec ebx
  404145:	sub    edi,edi
  404147:	imul   ebp,DWORD PTR [esi-0x4a],0xd56af02d
  40414e:	xor    al,0x24
  404150:	gs jbe 0x4041ae
  404153:	rcr    esi,0x14
  404156:	scas   eax,DWORD PTR es:[edi]
  404157:	data16 jo 0x4041c1
  40415a:	fwait
  40415b:	inc    ebp
  40415c:	and    dl,ah
  40415e:	ds loop 0x4041d2
  404161:	in     al,0x4
  404163:	inc    eax
  404164:	push   0x9cd0ad2a
  404169:	aaa    
  40416a:	stc    
  40416b:	and    al,0xb8
  40416d:	out    dx,al
  40416e:	fs mov esi,0xd1dd05cc
  404174:	cmp    eax,0xc47f917
  404179:	sbb    dl,ah
  40417b:	idiv   DWORD PTR [esi-0x5a1aa599]
  404181:	test   al,0xcf
  404183:	add    cl,BYTE PTR [edx]
  404185:	push   eax
  404186:	mov    cl,0xb
  404188:	icebp  
  404189:	loop   0x4041fb
  40418b:	in     eax,dx
  40418c:	icebp  
  40418d:	and    edi,DWORD PTR [edx-0x70]
  404190:	pop    ds
  404191:	fmul   QWORD PTR [esi+0x7311e63]
  404197:	jle    0x4041a4
  404199:	push   edx
  40419a:	inc    edx
  40419b:	dec    ebx
  40419c:	not    DWORD PTR [ecx+0x39]
  40419f:	sbb    esi,DWORD PTR [ecx-0x616abde8]
  4041a5:	push   ds
  4041a6:	out    dx,al
  4041a7:	nop
  4041a8:	cmc    
  4041a9:	es aaa 
  4041ab:	lds    esi,FWORD PTR [edx+edx*2]
  4041ae:	ja     0x4041aa
  4041b0:	cmc    
  4041b1:	scas   eax,DWORD PTR es:[edi]
  4041b2:	mov    ecx,0x4e7c41ae
  4041b7:	retf   
  4041b8:	xchg   edx,eax
  4041b9:	retf   0xc148
  4041bc:	out    dx,al
  4041bd:	or     edi,DWORD PTR [edx]
  4041bf:	jecxz  0x40414e
  4041c1:	ret    
  4041c2:	push   es
  4041c3:	jb     0x404244
  4041c5:	cdq    
  4041c6:	dec    esp
  4041c7:	mov    ebx,0x5961731a
  4041cc:	sbb    DWORD PTR [eax+ecx*1+0x4e],ebx
  4041d0:	call   0x92472f67
  4041d5:	sti    
  4041d6:	push   ecx
  4041d7:	fst    DWORD PTR [edx+0x19]
  4041da:	into   
  4041db:	pop    es
  4041dc:	jle    0x404191
  4041de:	lods   eax,DWORD PTR ds:[esi]
  4041df:	cmp    ecx,DWORD PTR [ecx]
  4041e1:	stos   BYTE PTR es:[edi],al
  4041e2:	es loop 0x4041fc
  4041e5:	inc    ebx
  4041e6:	rol    DWORD PTR [ecx],0x7e
  4041e9:	pop    ebx
  4041ea:	retf   0x3c2d
  4041ed:	inc    esp
  4041ee:	pop    ss
  4041ef:	pop    edi
  4041f0:	adc    al,0xda
  4041f2:	pop    es
  4041f3:	(bad)  [edx+ebx*2]
  4041f6:	std    
  4041f7:	scas   al,BYTE PTR es:[edi]
  4041f8:	push   es
  4041f9:	dec    esp
  4041fa:	and    al,0x93
  4041fc:	push   eax
  4041fd:	fistp  DWORD PTR [edi+0x77]
  404200:	js     0x4041ea
  404202:	std    
  404203:	jae    0x404255
  404205:	scas   al,BYTE PTR es:[edi]
  404206:	addr16 jo 0x4041c1
  404209:	or     ecx,esp
  40420b:	sti    
  40420c:	jge    0x404264
  40420e:	test   BYTE PTR [ebx+edi*1],al
  404211:	lods   al,BYTE PTR ds:[esi]
  404212:	sub    edx,DWORD PTR [ebp+0xa]
  404215:	jns    0x4041a1
  404217:	xlat   BYTE PTR ds:[ebx]
  404218:	and    DWORD PTR [eax],ebp
  40421a:	pop    esi
  40421b:	push   edi
  40421c:	call   0xee56:0x6d62da9
  404223:	and    BYTE PTR [edi+0xcf2cd2f],bh
  404229:	fxch   st(0)
  40422b:	setnp  ch
  40422e:	mov    ebx,cs
  404230:	inc    ecx
  404231:	lds    ecx,FWORD PTR [eax-0x6408d57e]
  404237:	mov    DWORD PTR [ecx],eax
  404239:	mov    ds:0x9ebd561b,eax
  40423e:	or     ecx,edx
  404240:	cmp    BYTE PTR [edx],bl
  404242:	lea    edx,[esi-0x6be31f16]
  404248:	jns    0x404256
  40424a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40424b:	push   esp
  40424c:	dec    ebp
  40424d:	and    dl,0xeb
  404250:	inc    BYTE PTR [edi-0x37]
  404253:	mov    cl,0xd4
  404255:	in     al,0x94
  404257:	and    bh,BYTE PTR [esi+0x7]
  40425a:	mov    ebx,0xdbe6673b
  40425f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404260:	lahf   
  404261:	mov    eax,ds:0x41e393e6
  404266:	jmp    0xf29f:0xaf86be0c
  40426d:	sahf   
  40426e:	jne    0x40429a
  404270:	pop    esp
  404271:	jmp    0x8de9:0x700de8cf
  404278:	and    ch,al
  40427a:	jns    0x4042eb
  40427c:	xor    ebx,DWORD PTR [edx+eax*8-0x3e]
  404280:	push   edx
  404281:	and    eax,0xd1648e2b
  404286:	fistp  QWORD PTR [esi+0x3baaeae0]
  40428c:	dec    esi
  40428d:	push   ss
  40428e:	add    ch,BYTE PTR [ecx]
  404290:	pop    ecx
  404291:	mov    edi,0xa842df46
  404296:	arpl   WORD PTR [eax-0x5262d47d],ax
  40429c:	(bad)  
  40429d:	pusha  
  40429e:	in     al,0xf
  4042a0:	das    
  4042a1:	adc    BYTE PTR [ebp+0x26],ah
  4042a4:	(bad)  
  4042a5:	in     eax,dx
  4042a6:	push   ss
  4042a7:	mov    ah,0x80
  4042a9:	or     ebx,ebp
  4042ab:	dec    ecx
  4042ac:	loope  0x40427c
  4042ae:	xor    esi,ebx
  4042b0:	imul   edi,DWORD PTR [ebx+eax*4+0x1d],0x3f
  4042b5:	dec    edx
  4042b6:	xor    edx,DWORD PTR [ecx+eax*8-0x2288312]
  4042bd:	(bad)  
  4042be:	push   edx
  4042bf:	scas   eax,DWORD PTR es:[edi]
  4042c0:	and    eax,DWORD PTR [edi-0x2f]
  4042c3:	sbb    eax,0xe2a2e550
  4042c8:	fcmovu st,st(4)
  4042ca:	pop    edx
  4042cb:	je     0x40427f
  4042cd:	and    edi,edi
  4042cf:	addr16 in eax,0x35
  4042d2:	rol    edi,cl
  4042d4:	add    al,0xd7
  4042d6:	sub    DWORD PTR ds:0x1764983f,eax
  4042dc:	push   ebx
  4042dd:	push   ecx
  4042de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042df:	lds    ebp,FWORD PTR [edx-0x1]
  4042e2:	dec    ecx
  4042e3:	sbb    eax,0x20a815d8
  4042e8:	pushf  
  4042e9:	mov    ds:0x2c66aa6e,al
  4042ee:	add    ecx,DWORD PTR [edi+0x7d]
  4042f1:	inc    ebp
  4042f2:	push   esi
  4042f3:	daa    
  4042f4:	(bad)
  4042f8:	mov    dl,0x64
  4042fa:	sbb    DWORD PTR [ebp+ecx*1-0x7d],0x73f20063
  404302:	xor    ebp,DWORD PTR [esi]
  404304:	mov    ah,0xc1
  404306:	sbb    ecx,edi
  404308:	jle    0x404349
  40430a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430b:	popf   
  40430c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430d:	sar    ebp,cl
  40430f:	or     BYTE PTR [edx+eax*2+0x457f2c2],0xc
  404317:	xchg   edi,eax
  404318:	retf   0x6bfe
  40431b:	aaa    
  40431c:	adc    eax,0x51b12f86
  404321:	cdq    
  404322:	stos   BYTE PTR es:[edi],al
  404323:	cmp    ebp,DWORD PTR [edx+0x16]
  404326:	(bad)  
  404327:	mov    esp,0xa791e00c
  40432c:	stos   DWORD PTR es:[edi],eax
  40432d:	jo     0x404344
  40432f:	adc    al,0x51
  404331:	icebp  
  404332:	pop    ds
  404333:	mov    edi,DWORD PTR [esp+ebp*1]
  404336:	icebp  
  404337:	mov    edx,0x7e9677ba
  40433c:	xchg   esp,eax
  40433d:	and    ecx,esp
  40433f:	mov    ds:0x8e8d1d6f,al
  404344:	enter  0x1e7b,0x23
  404348:	sub    al,0xc8
  40434a:	sbb    al,0xbf
  40434c:	enter  0x37dc,0x67
  404350:	mov    WORD PTR [ecx+0x6c2f40c6],?
  404356:	push   ebp
  404357:	lock mov eax,ds:0x52eede5b
  40435d:	adc    eax,0xae9e1cca
  404362:	test   al,0xde
  404364:	in     eax,dx
  404365:	addr16 shld edi,esi,cl
  404369:	dec    edx
  40436a:	shr    bh,0x55
  40436d:	dec    edx
  40436e:	dec    edx
  40436f:	pop    es
  404370:	pop    edi
  404371:	and    dl,bl
  404373:	in     eax,0xb0
  404375:	jne    0x40434e
  404377:	add    DWORD PTR [edx+0x296adf3e],0xffffff9a
  40437e:	ror    dl,1
  404380:	dec    edi
  404381:	adc    ch,dl
  404383:	cmp    eax,0xb3b06d09
  404388:	cmp    edx,DWORD PTR [edx]
  40438a:	ror    DWORD PTR [ebx+0x2c],cl
  40438d:	clc    
  40438e:	push   0x6e
  404390:	pop    ebx
  404391:	(bad)  
  404392:	fs int3 
  404394:	and    al,al
  404396:	push   edx
  404397:	push   ebx
  404398:	cmp    BYTE PTR ds:0xe1840894,0xa5
  40439f:	and    al,BYTE PTR [edx]
  4043a1:	jae    0x40433b
  4043a3:	pushf  
  4043a4:	dec    ecx
  4043a5:	stc    
  4043a6:	aas    
  4043a7:	(bad)  
  4043a8:	nop
  4043a9:	icebp  
  4043aa:	cmp    BYTE PTR [eax-0x39],cl
  4043ad:	in     eax,0x5b
  4043af:	pop    es
  4043b0:	push   ecx
  4043b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b2:	jbe    0x404362
  4043b4:	jecxz  0x4043a7
  4043b6:	mov    cl,0x31
  4043b8:	push   ecx
  4043b9:	fdivr  DWORD PTR [edi-0x33e7737]
  4043bf:	jno    0x404408
  4043c1:	add    BYTE PTR [edi-0x29],bh
  4043c4:	inc    edi
  4043c5:	dec    esp
  4043c6:	lahf   
  4043c7:	xchg   ecx,eax
  4043c8:	inc    eax
  4043c9:	jbe    0x404386
  4043cb:	mov    esp,0x357df393
  4043d0:	pop    edx
  4043d1:	jo     0x4043fc
  4043d3:	(bad)  
  4043d4:	mov    ecx,DWORD PTR [esi]
  4043d6:	pop    esi
  4043d7:	mov    ebp,0xf6c40091
  4043dc:	jle    0x404454
  4043de:	and    BYTE PTR [esi-0xa],al
  4043e1:	push   ebx
  4043e2:	fst    DWORD PTR [edi-0x7a123d00]
  4043e8:	es mov edx,0x929093c3
  4043ee:	scas   al,BYTE PTR es:[edi]
  4043ef:	lahf   
  4043f0:	and    DWORD PTR [edi+0x389f6102],esi
  4043f6:	gs cmp eax,0x696393a7
  4043fc:	call   0x5238:0xb2b0d2e0
  404403:	outs   dx,DWORD PTR ds:[esi]
  404404:	dec    ebp
  404405:	lds    ebx,FWORD PTR [eax]
  404407:	test   al,0x62
  404409:	adc    al,BYTE PTR [edi]
  40440b:	dec    ebp
  40440c:	inc    eax
  40440d:	scas   eax,DWORD PTR es:[edi]
  40440e:	or     al,al
  404410:	jmp    0xa1ab:0x2279e95c
  404417:	into   
  404418:	rol    DWORD PTR [esi],1
  40441a:	lods   al,BYTE PTR ds:[si]
  40441c:	test   BYTE PTR [esi+eiz*1+0x984ca73],0x2e
  404424:	xchg   ebp,eax
  404425:	call   FWORD PTR [ebx-0x56160dcb]
  40442b:	push   ecx
  40442c:	aam    0xbd
  40442e:	mov    WORD PTR [esi],es
  404430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404431:	cli    
  404432:	dec    esp
  404433:	and    ebp,DWORD PTR [ebp+0x4fca90fa]
  404439:	dec    edi
  40443a:	jbe    0x4043e2
  40443c:	pop    es
  40443d:	xor    DWORD PTR [ebp-0x7d],esi
  404440:	pop    es
  404441:	and    BYTE PTR [ecx+0x2d],ah
  404444:	sub    esi,edi
  404446:	into   
  404447:	sub    eax,0xb73ce0c0
  40444c:	aam    0x2b
  40444e:	xor    DWORD PTR [esi],0x1e
  404451:	fsubr  QWORD PTR [edx+0x64b92e49]
  404457:	xlat   BYTE PTR ds:[ebx]
  404458:	pop    eax
  404459:	mov    ds:0x8b84eb8c,al
  40445e:	fidiv  WORD PTR [edi+0x4760a6f4]
  404464:	and    esp,DWORD PTR [ecx+0x71fd3f16]
  40446a:	dec    eax
  40446b:	dec    eax
  40446c:	mov    edi,DWORD PTR [edx+ecx*4]
  40446f:	inc    edx
  404470:	cdq    
  404471:	or     DWORD PTR [ecx],edx
  404473:	int3   
  404474:	jge    0x404447
  404476:	(bad)
  404479:	out    0x2d,al
  40447b:	lds    eax,FWORD PTR [edx+ebx*1]
  40447e:	add    BYTE PTR ds:0xa4c13100,dl
  404484:	mov    ch,BYTE PTR [eax+0x722e29a5]
  40448a:	sbb    cl,dl
  40448c:	jo     0x404473
  40448e:	sar    BYTE PTR [edx+0x31],0xf1
  404492:	mov    eax,ds:0xe33e4933
  404497:	sub    esp,DWORD PTR [edi+0x3263f835]
  40449d:	jb     0x4044e1
  40449f:	adc    DWORD PTR [eax+0x5f],0x4f
  4044a3:	(bad)  
  4044a4:	mov    ds:0x563a65bd,eax
  4044a9:	scas   eax,DWORD PTR es:[edi]
  4044aa:	push   ebp
  4044ab:	push   ss
  4044ac:	fwait
  4044ad:	popf   
  4044ae:	daa    
  4044af:	(bad)  
  4044b0:	push   ecx
  4044b1:	aaa    
  4044b2:	out    0x36,al
  4044b4:	js     0x404503
  4044b6:	push   ss
  4044b7:	(bad)  [esi]
  4044b9:	sar    DWORD PTR [esi-0x27],0x55
  4044bd:	mov    edi,0xfff06496
  4044c2:	mov    dh,0xa5
  4044c4:	mov    esi,0xdefdd305
  4044c9:	pusha  
  4044ca:	and    ebx,DWORD PTR [ebx+ecx*1+0xe1612b4]
  4044d1:	adc    BYTE PTR [edi+0x8],cl
  4044d4:	shl    esp,0xc9
  4044d7:	push   0x4e
  4044d9:	dec    ebx
  4044da:	sub    al,BYTE PTR [ebx-0x51]
  4044dd:	imul   eax,DWORD PTR [ebx+0x5],0x4adfd16
  4044e4:	add    eax,0xe2af9bfb
  4044e9:	ret    0x936e
  4044ec:	lea    edx,[esi-0x49c1244c]
  4044f2:	mov    ds:0xc8805243,al
  4044f7:	inc    edi
  4044f8:	sbb    al,0x89
  4044fa:	adc    al,0x4c
  4044fc:	inc    edi
  4044fd:	test   eax,0x96020043
  404502:	add    al,0x15
  404504:	pop    es
  404505:	loope  0x404546
  404507:	dec    esp
  404508:	push   edx
  404509:	pop    edx
  40450a:	push   cs
  40450b:	(bad)  
  40450c:	inc    edx
  40450d:	pop    ebx
  40450e:	jmp    0x40451c
  404510:	sub    eax,0x9bd99da3
  404515:	ja     0x404500
  404517:	sahf   
  404518:	daa    
  404519:	mov    DWORD PTR [edi+0x43],ebp
  40451c:	sub    DWORD PTR [eax],0x5b
  40451f:	adc    eax,0x48f30ef8
  404524:	stos   BYTE PTR es:[edi],al
  404525:	stos   BYTE PTR es:[edi],al
  404526:	clc    
  404527:	mov    edx,0x844be007
  40452c:	repnz jecxz 0x4044f0
  40452f:	push   ss
  404530:	mov    dh,0xc6
  404532:	call   0x1880:0xcb83fa28
  404539:	adc    edx,esp
  40453b:	stos   BYTE PTR es:[edi],al
  40453c:	addr16 jmp 0x2c2c3eb2
  404542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404543:	es aam 0x32
  404546:	(bad)  
  404547:	cmp    cl,BYTE PTR [ecx+0x2]
  40454a:	and    DWORD PTR [eax-0x2452c578],esi
  404550:	retf   0x9ae7
  404553:	(bad)  
  404554:	into   
  404555:	mov    cl,0xfa
  404557:	push   ebp
  404558:	in     eax,0x91
  40455a:	cwde   
  40455b:	aaa    
  40455c:	or     al,0x4e
  40455e:	cmp    ecx,ebx
  404560:	sbb    ecx,edx
  404562:	scas   eax,DWORD PTR es:[edi]
  404563:	xor    eax,0xe5e504fd
  404568:	das    
  404569:	ds jnp 0x404567
  40456c:	fiadd  DWORD PTR [esi+0x51b61644]
  404572:	lahf   
  404573:	jno    0x4044fd
  404575:	jge    0x404539
  404577:	jmp    0x404540
  404579:	je     0x4045cc
  40457b:	jle    0x4045cc
  40457d:	or     ch,BYTE PTR [esi-0x23]
  404580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404581:	xor    bh,BYTE PTR [esi]
  404583:	xchg   ebx,eax
  404584:	int    0x85
  404586:	scas   al,BYTE PTR es:[edi]
  404587:	test   DWORD PTR [esp+ebp*8+0x1e590578],ebp
  40458e:	push   ss
  40458f:	jp     0x40459a
  404591:	pusha  
  404592:	and    ch,BYTE PTR [edi]
  404594:	pushf  
  404595:	fbstp  TBYTE PTR [eax]
  404597:	or     eax,0x2dde348c
  40459c:	fsub   QWORD PTR [ebx]
  40459e:	std    
  40459f:	and    al,0x65
  4045a1:	sbb    BYTE PTR [ebp+0x16af93b4],0xd2
  4045a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a9:	push   ebp
  4045aa:	adc    BYTE PTR [edx+0x18],al
  4045ad:	or     cl,BYTE PTR [edi-0x4bc22f1d]
  4045b3:	out    0xf9,al
  4045b5:	and    cl,bh
  4045b7:	je     0x404583
  4045b9:	call   0x4594:0xa63e0261
  4045c0:	repz test eax,0x396a4626
  4045c6:	fs ret 
  4045c8:	ins    DWORD PTR es:[edi],dx
  4045c9:	pop    ecx
  4045ca:	test   BYTE PTR [eax+0x6e4a9973],ch
  4045d0:	mov    al,ds:0x832be956
  4045d5:	jp     0x40458b
  4045d7:	ins    BYTE PTR es:[edi],dx
  4045d8:	sahf   
  4045d9:	jmp    0x13c94b35
  4045de:	in     eax,0x7f
  4045e0:	stc    
  4045e1:	dec    BYTE PTR [ecx]
  4045e3:	add    al,0xe6
  4045e5:	test   al,0xee
  4045e7:	rcl    BYTE PTR [eax-0x21],0xcf
  4045eb:	mov    ds:0xf310adc5,eax
  4045f0:	dec    ebp
  4045f1:	jmp    0xc24fed92
  4045f6:	lods   eax,DWORD PTR ds:[esi]
  4045f7:	cmp    BYTE PTR [esi+0x75],dh
  4045fa:	mov    esp,0xe313eccf
  4045ff:	fadd   QWORD PTR [eax-0x173662f0]
  404605:	jmp    0x4045e0
  404607:	jl     0x40461b
  404609:	hlt    
  40460a:	(bad)  
  40460b:	(bad)  
  40460c:	mov    edi,0x31931ae2
  404611:	dec    edx
  404612:	gs test al,0xbf
  404615:	add    al,0xc7
  404617:	jl     0x404606
  404619:	test   BYTE PTR [ecx+0x2c],0x11
  40461d:	in     al,dx
  40461e:	loopne 0x40465b
  404620:	mov    edi,DWORD PTR [ebx-0x6e]
  404623:	jae    0x404654
  404625:	mov    dl,0x99
  404627:	outs   dx,BYTE PTR ds:[esi]
  404628:	mov    edx,0xc344d10d
  40462d:	(bad)  
  40462e:	sub    al,bl
  404630:	push   es
  404631:	cmp    BYTE PTR [edi],cl
  404633:	cmp    BYTE PTR [eax-0x70ec20e9],dh
  404639:	sahf   
  40463a:	pop    ds
  40463b:	mov    eax,0xfa4061e8
  404640:	adc    eax,0x734d6f83
  404645:	pop    ecx
  404647:	jg     0x4045d0
  404649:	sahf   
  40464a:	add    BYTE PTR [ecx],cl
  40464c:	inc    edi
  40464d:	mov    eax,ds:0x27f97512
  404652:	mov    bl,0x74
  404654:	jmp    0x4046d2
  404656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404657:	xchg   ebx,eax
  404658:	(bad)  
  404659:	and    DWORD PTR [ecx+0x2b599aa1],edi
  40465f:	in     eax,dx
  404660:	mov    dl,BYTE PTR [eax-0x52bd38c8]
  404666:	out    dx,al
  404667:	inc    esp
  404668:	aas    
  404669:	xor    eax,0xefc864ae
  40466e:	sub    DWORD PTR [ecx+0x24cb455],esp
  404674:	mov    ds:0x7845c01a,eax
  404679:	and    DWORD PTR [eax],esi
  40467b:	and    al,0xf2
  40467d:	xchg   ebx,eax
  40467e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467f:	js     0x4046ba
  404681:	push   cs
  404682:	mov    dh,0xbc
  404684:	push   edi
  404685:	xchg   ebp,eax
  404686:	std    
  404687:	and    al,0x6b
  404689:	popf   
  40468a:	out    dx,eax
  40468b:	pop    ds
  40468c:	mov    dl,0xf5
  40468e:	mov    cl,0xac
  404690:	cwde   
  404691:	push   ecx
  404692:	imul   eax,DWORD PTR [edx+0x26],0xf5c5e40f
  404699:	shl    DWORD PTR [edx],cl
  40469b:	jp     0x40465d
  40469d:	cwde   
  40469e:	adc    ch,dh
  4046a0:	mov    ds:0x2d4e37be,al
  4046a5:	loopne 0x4046dd
  4046a7:	in     eax,dx
  4046a8:	mov    al,0xbf
  4046aa:	sbb    BYTE PTR [esi-0x55],dh
  4046ad:	mov    dh,BYTE PTR [esi-0x3181b2f2]
  4046b3:	jo     0x40469a
  4046b5:	or     eax,0x38420e7f
  4046ba:	and    ebp,edi
  4046bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046bd:	sub    al,0xc
  4046bf:	adc    eax,0x759efe0c
  4046c4:	(bad)  
  4046c5:	sbb    al,0x9d
  4046c7:	adc    eax,0xc164074
  4046cc:	rcr    DWORD PTR [eax-0x13],0x5f
  4046d0:	xchg   ecx,eax
  4046d1:	outs   dx,DWORD PTR ds:[esi]
  4046d2:	push   ax
  4046d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d5:	jns    0x404691
  4046d7:	(bad)  
  4046d8:	dec    esp
  4046d9:	loopne 0x40467f
  4046db:	cs mov ebp,0x22a70761
  4046e1:	test   BYTE PTR [ecx+0x6312e4e7],al
  4046e7:	mov    esi,0xc6b67337
  4046ec:	adc    DWORD PTR [edi-0x2ff89822],esp
  4046f2:	sbb    BYTE PTR [ecx+0x42],dl
  4046f5:	dec    esi
  4046f6:	out    0xe6,al
  4046f8:	ins    DWORD PTR es:[edi],dx
  4046f9:	mov    ebx,DWORD PTR [ebp+0x2c]
  4046fc:	or     ebp,DWORD PTR [edi-0x4e]
  4046ff:	pusha  
  404700:	push   0x7cd99c6
  404705:	mov    ss,WORD PTR [edi-0x58]
  404708:	stos   BYTE PTR es:[edi],al
  404709:	xor    DWORD PTR [ebx-0x7d03a236],esp
  40470f:	not    ebx
  404711:	test   BYTE PTR [ebx-0x735eca2],0xd6
  404718:	inc    esi
  404719:	fmulp  st(5),st
  40471b:	test   DWORD PTR [ecx+eax*8-0x48],0xf822a3ca
  404723:	mov    esp,0x282c7b7f
  404728:	les    esp,FWORD PTR [edi-0x34]
  40472b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472e:	mov    ?,WORD PTR [ecx]
  404730:	jecxz  0x4046f7
  404732:	outs   dx,BYTE PTR ds:[esi]
  404733:	cli    
  404734:	and    ebx,DWORD PTR [eax]
  404736:	pop    es
  404737:	xor    al,0x2e
  404739:	iret   
  40473a:	or     DWORD PTR [ecx+0x3c70c091],eax
  404740:	inc    ecx
  404741:	jl     0x4046e1
  404743:	jecxz  0x404785
  404745:	scas   al,BYTE PTR es:[edi]
  404746:	gs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404749:	sbb    bl,BYTE PTR [edx-0x2b]
  40474c:	xor    dl,BYTE PTR [ecx+0x2fe742ad]
  404752:	dec    ebx
  404753:	jge    0x4047a1
  404755:	mov    edi,0x6a237e72
  40475a:	call   DWORD PTR [eax+ebx*2-0x5498859e]
  404761:	add    ebx,DWORD PTR [esi]
  404763:	and    DWORD PTR [edx+0x45],ebx
  404766:	cli    
  404767:	sahf   
  404768:	imul   ebx,DWORD PTR [edx+0x42],0x4e558948
  40476f:	cmp    ebx,0xffffffe1
  404772:	push   esi
  404773:	ds mov eax,0x89b31908
  404779:	ja     0x4047de
  40477b:	fstp   TBYTE PTR [ebx-0x14c76bf5]
  404781:	xchg   esi,eax
  404782:	or     al,0x7d
  404784:	adc    BYTE PTR [eax],cl
  404786:	xchg   bh,dl
  404788:	cmp    edi,edx
  40478a:	lock mov ah,0x2f
  40478d:	mov    BYTE PTR [ebx+0x51],bl
  404790:	push   ds
  404791:	popf   
  404792:	mov    DWORD PTR [eax],ebx
  404794:	out    dx,eax
  404795:	inc    esi
  404796:	inc    eax
  404797:	imul   esi,esp,0x7ec3354c
  40479d:	pop    ebp
  40479e:	addr16 jne 0x404807
  4047a1:	in     eax,dx
  4047a2:	push   ss
  4047a3:	imul   ebx,DWORD PTR [eax+ebp*2+0x8],0x27
  4047a8:	outs   dx,BYTE PTR ds:[esi]
  4047a9:	in     eax,dx
  4047aa:	imul   BYTE PTR [ebx+edi*4-0x3d510eaa]
  4047b1:	icebp  
  4047b2:	adc    edi,edx
  4047b4:	je     0x404820
  4047b6:	je     0x404748
  4047b8:	mov    ds:0x9e7af92e,eax
  4047bd:	inc    edx
  4047be:	add    eax,0x3ea07f2c
  4047c3:	iret   
  4047c4:	and    bh,BYTE PTR [edx+0x470e2111]
  4047ca:	bound  ecx,QWORD PTR [edx+0x272fcc92]
  4047d0:	aad    0x2f
  4047d2:	test   al,0xc7
  4047d4:	dec    ecx
  4047d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d6:	int3   
  4047d7:	ins    DWORD PTR es:[edi],dx
  4047d8:	sti    
  4047d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047da:	pusha  
  4047db:	sti    
  4047dc:	and    dl,BYTE PTR [ebx+0x386964fc]
  4047e2:	inc    esi
  4047e3:	inc    esp
  4047e4:	mov    ds:0x3a9dcea0,eax
  4047e9:	jp     0x404778
  4047eb:	pop    eax
  4047ec:	(bad)
  4047ef:	mov    ebp,0xc26fb1ad
  4047f4:	push   0xf6693c9f
  4047f9:	cdq    
  4047fa:	je     0x4047a0
  4047fc:	sbb    DWORD PTR [eax+0x19],edi
  4047ff:	dec    esi
  404800:	jo     0x4047be
  404802:	push   0xffffffc5
  404804:	addr16 xchg esi,eax
  404806:	into   
  404807:	addr16 sahf 
  404809:	push   ds
  40480a:	xchg   BYTE PTR [edi+0x74],cl
  40480d:	jno    0x4047e2
  40480f:	pop    eax
  404810:	std    
  404811:	adc    ah,BYTE PTR [edx]
  404813:	fadd   DWORD PTR [esi+0x4566e5a4]
  404819:	jle    0x40480c
  40481b:	fucomip st,st(5)
  40481d:	jnp    0x4047e8
  40481f:	dec    ecx
  404820:	ds dec ebx
  404822:	pop    es
  404823:	stos   BYTE PTR es:[edi],al
  404824:	mov    dh,0x8b
  404826:	retf   
  404827:	mov    gs,WORD PTR [edi]
  404829:	loop   0x40484f
  40482b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482c:	xchg   esi,edx
  40482e:	fdivr  QWORD PTR [ebx]
  404830:	xchg   edx,eax
  404831:	xchg   edx,eax
  404832:	adc    al,0x19
  404834:	outs   dx,BYTE PTR ds:[esi]
  404835:	jae    0x404844
  404837:	push   0x1
  404839:	test   BYTE PTR [eax-0x5e],al
  40483c:	push   esp
  40483d:	inc    edx
  40483e:	xor    dl,BYTE PTR [edx]
  404840:	test   eax,0x5b4c60de
  404845:	adc    al,0x8c
  404847:	neg    DWORD PTR [edi+esi*2]
  40484a:	dec    ebp
  40484b:	cmp    ch,BYTE PTR [ebx-0x64]
  40484e:	ret    
  40484f:	test   bl,dl
  404851:	inc    eax
  404852:	sbb    ch,BYTE PTR [edi-0x4d52a760]
  404858:	xor    DWORD PTR [esi+ebx*8],ecx
  40485b:	bound  edx,QWORD PTR [ebx]
  40485d:	mov    WORD PTR [edx],ss
  40485f:	ror    BYTE PTR [eax+0x74c81d23],cl
  404865:	int3   
  404866:	cdq    
  404867:	fs pop edx
  404869:	add    ah,ch
  40486b:	mov    ebx,DWORD PTR [ebx+0x52]
  40486e:	(bad)  
  40486f:	pop    edx
  404870:	ins    BYTE PTR es:[edi],dx
  404871:	nop
  404872:	dec    esp
  404873:	int    0xef
  404875:	lods   eax,DWORD PTR ds:[esi]
  404876:	mov    al,ds:0x3d3a374
  40487b:	idiv   BYTE PTR [ecx-0x6a337ec7]
  404881:	inc    esi
  404882:	or     bl,BYTE PTR [ebp-0x6a3f2488]
  404888:	push   ebp
  404889:	sbb    BYTE PTR [ebx],al
  40488b:	ss iret 
  40488d:	stos   BYTE PTR es:[edi],al
  40488e:	jecxz  0x4048eb
  404890:	pop    ds
  404891:	mov    cl,0x3e
  404893:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404895:	add    ebx,DWORD PTR [ebp+0x12]
  404898:	inc    ebx
  404899:	(bad)  [eax+0x427d52a]
  40489f:	and    al,0xea
  4048a1:	jp     0x404841
  4048a3:	(bad)  
  4048a4:	push   ebx
  4048a5:	fucom  st(0)
  4048a7:	dec    ecx
  4048a8:	push   es
  4048a9:	sar    DWORD PTR [esp+edi*8-0x45],cl
  4048ad:	sbb    BYTE PTR [edi-0x4c],0x8c
  4048b1:	std    
  4048b2:	popa   
  4048b3:	sub    al,0x33
  4048b5:	or     eax,DWORD PTR [esi-0xff48311]
  4048bb:	das    
  4048bc:	mov    ecx,0xfc4c1cd0
  4048c1:	mov    ?,WORD PTR [edx+0x6a6b67d0]
  4048c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c8:	out    dx,eax
  4048c9:	outs   dx,DWORD PTR ds:[esi]
  4048ca:	test   edx,eax
  4048cc:	outs   dx,BYTE PTR ds:[esi]
  4048cd:	or     BYTE PTR [esi-0xdf3a0b6],al
  4048d3:	and    eax,0x55f7c6b5
  4048d8:	dec    ebx
  4048d9:	jne    0x404888
  4048db:	icebp  
  4048dc:	and    ebp,ecx
  4048de:	push   ebp
  4048df:	lods   eax,DWORD PTR ds:[esi]
  4048e0:	xchg   edi,eax
  4048e1:	jmp    0xecac39d1
  4048e6:	sub    BYTE PTR es:[ebp-0x2f],0x1f
  4048eb:	pop    esp
  4048ec:	mov    eax,ds:0xd4a3a1b7
  4048f1:	imul   ebp,DWORD PTR [esi],0x5c
  4048f4:	in     eax,0xb5
  4048f6:	ret    0x49c6
  4048f9:	sbb    DWORD PTR [ebx+edi*4+0x6f3185ee],eax
  404900:	ret    
  404901:	and    edi,DWORD PTR [esi-0x20b80338]
  404907:	pop    ecx
  404908:	mov    edi,0x5249a04e
  40490d:	mov    ebx,0x31cd5c7d
  404912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404913:	test   al,0x19
  404915:	(bad)  
  404916:	inc    eax
  404917:	(bad)  
  404918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404919:	arpl   WORD PTR [ebx],di
  40491b:	ja     0x404975
  40491d:	sbb    eax,0x73112068
  404922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404923:	test   DWORD PTR [ecx-0x4b],0xcdf476f9
  40492a:	fcomp  QWORD PTR [ebx+edi*4]
  40492d:	addr16 cmc 
  40492f:	jmp    0xbcad9b76
  404934:	addr16 retf 0xcc1b
  404938:	xchg   ebx,eax
  404939:	mov    edi,0x2e9cecbd
  40493e:	jae    0x4049b2
  404940:	fimul  WORD PTR [esi-0x28b66eef]
  404946:	jle    0x40492f
  404948:	sbb    bh,BYTE PTR [ebx+0x634c7d8f]
  40494e:	addr16 adc eax,0x2a2a1834
  404954:	mov    ebp,0x7a7e96c7
  404959:	mov    ah,0x67
  40495b:	or     eax,0x8631d498
  404960:	xchg   edi,eax
  404961:	jp     0x40494f
  404963:	xchg   BYTE PTR [esi],cl
  404965:	icebp  
  404966:	jne    0x4048f8
  404968:	inc    esp
  404969:	aam    0x9f
  40496b:	cdq    
  40496c:	or     al,0xaa
  40496e:	push   ss
  40496f:	gs or  bl,dh
  404972:	aaa    
  404973:	loopne 0x404983
  404975:	mov    BYTE PTR [edi-0xc],al
  404978:	fadd   DWORD PTR [edx+0x34b79a98]
  40497e:	lock dec DWORD PTR [eax+0x7b]
  404982:	xor    bl,bh
  404984:	test   DWORD PTR [edi-0x37],edx
  404987:	mov    esp,0xb7c01d18
  40498c:	or     eax,0xc7c245d8
  404991:	das    
  404992:	mov    edx,0xe3af2ddd
  404997:	stos   DWORD PTR es:[edi],eax
  404998:	xchg   esi,eax
  404999:	jnp    0x404958
  40499b:	push   ecx
  40499c:	mov    ds:0xb00ac29f,al
  4049a1:	adc    eax,0x100cdcd9
  4049a6:	loope  0x404970
  4049a8:	push   ebx
  4049a9:	inc    edi
  4049aa:	hlt    
  4049ab:	xor    ch,BYTE PTR [ebp-0xf]
  4049ae:	mov    esp,0x748a9a1b
  4049b3:	mov    ebp,0xbad28ae1
  4049b8:	push   edx
  4049b9:	or     ebx,ebx
  4049bb:	mov    dh,0xef
  4049bd:	and    ecx,DWORD PTR [eax]
  4049bf:	enter  0x1bed,0xed
  4049c3:	repnz mov edx,0x78d36252
  4049c9:	fwait
  4049ca:	imul   ebp,DWORD PTR [eax+0xa],0x19c4e4ab
  4049d1:	call   0xe5c2:0xdd3b4474
  4049d8:	scas   al,BYTE PTR es:[edi]
  4049d9:	sbb    BYTE PTR [esp+eax*2-0x4b59c581],0xc7
  4049e1:	jns    0x404a02
  4049e3:	xor    al,0xec
  4049e5:	dec    edi
  4049e6:	xchg   esp,eax
  4049e7:	ds test al,0xa3
  4049ea:	sbb    dl,dh
  4049ec:	xor    al,0xb8
  4049ee:	(bad)  
  4049ef:	xchg   esp,eax
  4049f0:	lods   eax,DWORD PTR ds:[esi]
  4049f1:	call   0x7aa6:0xfec23daa
  4049f8:	icebp  
  4049f9:	xchg   edi,eax
  4049fa:	popa   
  4049fb:	or     BYTE PTR [ebp+0x69e69705],0xa9
  404a02:	jmp    0x404a75
  404a04:	in     al,dx
  404a05:	(bad)  
  404a06:	push   0xbb7dad30
  404a0b:	retf   0x5d41
  404a0e:	arpl   dx,bx
  404a10:	fdivr  DWORD PTR [ebx+0x483ab8a2]
  404a16:	shr    BYTE PTR [edi+esi*4-0x4078002],1
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	or     eax,0x5c239739
  404a23:	clc    
  404a24:	dec    ebx
  404a25:	push   ss
  404a26:	icebp  
  404a27:	loopne 0x404a4e
  404a29:	into   
  404a2a:	mov    BYTE PTR [eax],dh
  404a2c:	ja     0x404a53
  404a2e:	iret   
  404a2f:	xchg   ebx,eax
  404a30:	je     0x404a34
  404a32:	lods   al,BYTE PTR ds:[esi]
  404a33:	or     eax,DWORD PTR [edi]
  404a35:	sar    al,cl
  404a37:	icebp  
  404a38:	jmp    DWORD PTR [ebp+0x6a]
  404a3b:	scas   eax,DWORD PTR es:[edi]
  404a3c:	or     BYTE PTR [ebp-0x3a],0xc7
  404a40:	(bad)  
  404a41:	jbe    0x4049ec
  404a43:	jns    0x404a11
  404a45:	sahf   
  404a46:	mov    bh,0x20
  404a48:	ins    BYTE PTR es:[edi],dx
  404a49:	ret    0x93
  404a4c:	aas    
  404a4d:	cmp    BYTE PTR [edx],ch
  404a4f:	adc    DWORD PTR [ebx],0xffffffc9
  404a52:	xchg   BYTE PTR [esi],al
  404a54:	jmp    0xf4a2:0xe18b70c9
  404a5b:	mov    eax,ds:0x23594750
  404a60:	dec    ebp
  404a61:	mov    ds:0xf4a5e7a5,eax
  404a66:	rol    BYTE PTR gs:[edx],1
  404a69:	inc    ebx
  404a6a:	xor    dh,BYTE PTR [ebp+0x30]
  404a6d:	jns    0x404ac1
  404a6f:	je     0x404ad7
  404a71:	mov    eax,ds:0x93b17964
  404a76:	mov    edx,0xaf069c14
  404a7b:	ins    BYTE PTR es:[di],dx
  404a7d:	xchg   esi,eax
  404a7e:	xlat   BYTE PTR ds:[ebx]
  404a7f:	out    0x88,eax
  404a81:	jmp    0x404a4e
  404a83:	fdivp  st(0),st
  404a85:	rcl    DWORD PTR [eax+0x8b54999],cl
  404a8b:	jl     0x404aab
  404a8d:	test   eax,0xa2a49b73
  404a92:	jo     0x404b0d
  404a94:	pop    ds
  404a95:	stos   DWORD PTR es:[edi],eax
  404a96:	in     al,dx
  404a97:	das    
  404a98:	xchg   DWORD PTR [edi+eiz*4-0x53],edi
  404a9c:	pop    es
  404a9d:	ins    DWORD PTR es:[edi],dx
  404a9e:	loope  0x404a9a
  404aa0:	cmp    al,BYTE PTR [ecx-0x37]
  404aa3:	mov    edi,0x52ce5448
  404aa8:	sti    
  404aa9:	rol    ah,0xec
  404aac:	es into 
  404aae:	push   0x75
  404ab0:	inc    eax
  404ab1:	call   0x36c2:0xa0a23d35
  404ab8:	push   ebx
  404ab9:	aaa    
  404aba:	cs dec ebp
  404abc:	in     al,0xb2
  404abe:	adc    DWORD PTR [ecx-0x11],0xffffff8b
  404ac2:	sbb    DWORD PTR [esi+0xd806940],ebx
  404ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac9:	cmp    eax,DWORD PTR [ecx+0x76ebcea]
  404acf:	dec    edx
  404ad0:	mov    esp,0x1fd98f01
  404ad5:	(bad)  
  404ad6:	call   0x9c467e4a
  404adb:	repz jbe 0x404af5
  404ade:	mov    dh,0x50
  404ae0:	or     DWORD PTR [eax],edx
  404ae2:	adc    al,0x7a
  404ae4:	pop    ebx
  404ae5:	and    ebp,DWORD PTR [ecx-0x66]
  404ae8:	push   es
  404ae9:	pop    eax
  404aea:	iret   
  404aeb:	arpl   WORD PTR [edx],ax
  404aed:	cmp    ch,BYTE PTR [esi+0x5ebf027a]
  404af3:	stc    
  404af4:	push   0x21d3d820
  404af9:	fcom   QWORD PTR [ecx]
  404afb:	lds    edi,FWORD PTR [eax+eiz*1]
  404afe:	adc    DWORD PTR [edi],ebp
  404b00:	(bad)  
  404b01:	imul   esp,DWORD PTR [eax+0x6d],0x4443d6eb
  404b08:	add    eax,0x87122f9a
  404b0d:	or     bl,BYTE PTR [esi-0x53]
  404b10:	jbe    0x404b11
  404b12:	or     ecx,esi
  404b14:	xchg   ebp,eax
  404b15:	fsubr  DWORD PTR [ebx-0x3e44640f]
  404b1b:	cdq    
  404b1c:	xchg   dh,cl
  404b1e:	xor    esi,DWORD PTR [edi-0x3e]
  404b21:	out    0x27,eax
  404b23:	int3   
  404b24:	retf   0xc4e6
  404b27:	push   esi
  404b28:	inc    DWORD PTR [ebx+0x10e5a72d]
  404b2e:	add    edi,ecx
  404b30:	xchg   edx,eax
  404b31:	lock (bad) 
  404b33:	fist   WORD PTR [ebp-0x63609775]
  404b39:	out    0x1,eax
  404b3b:	sub    DWORD PTR [ebx-0x69],esp
  404b3e:	fisubr DWORD PTR [eax-0x12]
  404b41:	rol    BYTE PTR [eax+0x44],cl
  404b44:	call   0xa854d3c2
  404b49:	inc    ecx
  404b4a:	mov    al,0x28
  404b4c:	mov    ds:0xf9c9d790,eax
  404b51:	jg     0x404ba4
  404b53:	inc    ecx
  404b54:	sbb    esp,ecx
  404b56:	lahf   
  404b57:	lock jl 0x404b20
  404b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b5b:	push   edx
  404b5c:	push   0xffffffa8
  404b5e:	mov    esp,DWORD PTR [eax-0x332d297]
  404b64:	scas   eax,DWORD PTR es:[edi]
  404b65:	and    bh,al
  404b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b68:	mov    bl,0xd6
  404b6a:	imul   eax,edx,0xffffffbe
  404b6d:	cli    
  404b6e:	and    al,0xec
  404b70:	test   BYTE PTR ds:0xc87d0b82,dl
  404b76:	int    0x93
  404b78:	retf   
  404b79:	test   BYTE PTR [eax-0x17],dl
  404b7c:	mov    ds:0xb349597d,al
  404b81:	stc    
  404b82:	pop    ecx
  404b83:	in     al,0x3a
  404b85:	xchg   edx,eax
  404b86:	sbb    eax,0xc38e3dd
  404b8b:	mov    ds:0xfc84aa7,eax
  404b90:	adc    ebx,DWORD PTR [esi+0x2d22845f]
  404b96:	and    DWORD PTR [esi],ebx
  404b98:	out    0x1f,al
  404b9a:	jo     0x404be1
  404b9c:	pop    edi
  404b9d:	loopne 0x404b90
  404b9f:	jle    0x404b72
  404ba1:	es push edx
  404ba3:	(bad)  
  404ba4:	out    0xe3,eax
  404ba6:	mov    esi,0x6a77387c
  404bab:	test   eax,0x982642f8
  404bb0:	or     dh,BYTE PTR [eax-0x3d03735e]
  404bb6:	inc    esi
  404bb7:	dec    ebp
  404bb8:	xor    esi,DWORD PTR [edi+0x20527484]
  404bbe:	fild   QWORD PTR [esp+eiz*2]
  404bc1:	call   0xde92:0x1034da09
  404bc8:	clc    
  404bc9:	sti    
  404bca:	cs aam 0xf5
  404bcd:	shl    ecx,1
  404bcf:	add    ch,bl
  404bd1:	in     eax,0xa3
  404bd3:	stc    
  404bd4:	add    eax,0x1ca460bb
  404bd9:	push   ebx
  404bda:	push   edi
  404bdb:	hlt    
  404bdc:	fimul  DWORD PTR gs:[eax+0x14f682b7]
  404be3:	jge    0x404b73
  404be5:	in     al,dx
  404be6:	push   esi
  404be7:	std    
  404be8:	cmp    bl,BYTE PTR [ebp+0x6c]
  404beb:	push   ebp
  404bec:	loopne 0x404bcc
  404bee:	stos   DWORD PTR es:[edi],eax
  404bef:	and    eax,0x7f52b118
  404bf4:	rol    ah,0x88
  404bf7:	jb     0x404c77
  404bf9:	rcr    DWORD PTR [ebp+0x44a38349],1
  404bff:	ret    0xd12a
  404c02:	sbb    al,BYTE PTR [ebx-0x79]
  404c05:	(bad)  
  404c06:	ficomp DWORD PTR [ebp-0xd0978de]
  404c0c:	int    0xe4
  404c0e:	ror    DWORD PTR [ebp+0x38ba7a21],0x38
  404c15:	push   edi
  404c16:	gs dec esi
  404c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c19:	in     eax,dx
  404c1a:	jbe    0x404c27
  404c1c:	sbb    al,0xcc
  404c1e:	cdq    
  404c1f:	inc    edi
  404c20:	enter  0x2362,0x96
  404c24:	mov    ebx,0x9e06708c
  404c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2a:	adc    BYTE PTR [esi-0x2f],dl
  404c2d:	or     eax,0xbdb42b31
  404c32:	gs mov dl,0x18
  404c35:	mul    BYTE PTR [edi+0x234b6d64]
  404c3b:	sbb    al,cl
  404c3d:	jo     0x404c1a
  404c3f:	adc    eax,0x2c210c1a
  404c44:	adc    BYTE PTR [edx-0xa],cl
  404c47:	jecxz  0x404c29
  404c49:	jg     0x404bf1
  404c4b:	ds pop edx
  404c4d:	retf   0x4f5
  404c50:	adc    eax,0xe81cee38
  404c55:	dec    esp
  404c56:	(bad)  
  404c57:	aam    0xb4
  404c59:	sbb    esi,0x7acf1d99
  404c5f:	add    bh,BYTE PTR [edx]
  404c61:	sub    al,0x49
  404c63:	mov    DWORD PTR [ebp-0x32],ebp
  404c66:	add    DWORD PTR [ecx],eax
  404c68:	jo     0x404c6d
  404c6a:	hlt    
  404c6b:	cmp    eax,0x5b1ad374
  404c70:	in     eax,0x52
  404c72:	leave  
  404c73:	aad    0xf
  404c75:	cmp    BYTE PTR [edi-0x569b1f0],bl
  404c7b:	clc    
  404c7c:	fcomp  QWORD PTR [esi+0x38]
  404c7f:	into   
  404c80:	jmp    0x404c4f
  404c82:	in     al,0x9
  404c84:	mov    bh,0x4a
  404c86:	mov    ah,0xcf
  404c88:	loopne 0x404c16
  404c8a:	mov    eax,ds:0xb47c7b6f
  404c8f:	in     al,0xd0
  404c91:	xor    al,0x3e
  404c93:	xor    edx,DWORD PTR [ecx]
  404c95:	out    0x31,al
  404c97:	dec    edi
  404c98:	or     al,0x54
  404c9a:	push   cs
  404c9b:	scas   al,BYTE PTR es:[edi]
  404c9c:	jae    0x404c56
  404c9e:	dec    ebp
  404c9f:	shr    DWORD PTR [edx-0x2e],1
  404ca2:	data16 sar BYTE PTR fs:[esi-0x3444a4da],cl
  404caa:	cmp    eax,0xf35715d
  404caf:	lea    edx,[edi]
  404cb1:	sbb    BYTE PTR [eax+0x1e2dc10c],ah
  404cb7:	sahf   
  404cb8:	shr    DWORD PTR [ecx],0xb3
  404cbb:	mov    edi,0xde65c4fe
  404cc0:	mov    ecx,0x4cc0d1f9
  404cc5:	and    DWORD PTR [edi+0x45b65eb9],0xb9dad267
  404ccf:	xchg   DWORD PTR [esi+eiz*1],eax
  404cd2:	dec    ebp
  404cd3:	mov    esp,0xaefc5a98
  404cd8:	ins    DWORD PTR es:[edi],dx
  404cd9:	and    esp,ebx
  404cdb:	ss retf 0xf0b2
  404cdf:	sahf   
  404ce0:	das    
  404ce1:	fs cmc 
  404ce3:	jb     0x404cbe
  404ce5:	shl    BYTE PTR ds:0x729dbbae,0x87
  404cec:	push   ecx
  404ced:	in     eax,dx
  404cee:	add    DWORD PTR [esi+0x29],ebp
  404cf1:	data16 (bad) 
  404cf3:	mov    edx,0xf4055f09
  404cf8:	fisttp DWORD PTR [eax+0x58]
  404cfb:	pop    eax
  404cfc:	stos   DWORD PTR es:[edi],eax
  404cfd:	or     al,0xd5
  404cff:	jle    0x404cd1
  404d01:	loopne 0x404d7c
  404d03:	sbb    edx,DWORD PTR [ebp+0x37]
  404d06:	test   eax,0xa5332565
  404d0b:	lahf   
  404d0c:	xor    esp,DWORD PTR [eax]
  404d0e:	test   BYTE PTR ds:0xfa4e9e03,cl
  404d14:	inc    esp
  404d15:	cmp    BYTE PTR [ecx+0xbf7140f],dh
  404d1b:	adc    esi,DWORD PTR [ebp-0x709329d6]
  404d21:	outs   dx,BYTE PTR ds:[esi]
  404d22:	pop    eax
  404d23:	sbb    eax,0x63946f41
  404d28:	fsub   QWORD PTR [eax+0x11]
  404d2b:	mov    edi,0xeb7677ab
  404d30:	mov    ah,0xca
  404d32:	push   edi
  404d33:	push   0x71
  404d35:	sub    ah,bh
  404d37:	xchg   edx,eax
  404d38:	and    al,0x1a
  404d3a:	dec    ecx
  404d3b:	jmp    0x4089:0x52355eb
  404d42:	push   es
  404d43:	dec    bx
  404d45:	mov    ch,0x22
  404d47:	ins    BYTE PTR es:[edi],dx
  404d48:	mov    cl,0x8a
  404d4a:	mov    ebx,0x5a1131f4
  404d4f:	(bad)  
  404d50:	out    0x9f,al
  404d52:	leave  
  404d53:	and    BYTE PTR [edi+0x63b9a720],dh
  404d59:	loope  0x404d76
  404d5b:	rol    ebp,cl
  404d5d:	aad    0x1f
  404d5f:	cli    
  404d60:	imul   esp,ecx,0xffffff80
  404d63:	clc    
  404d64:	pop    edx
  404d65:	bswap  edi
  404d67:	imul   edx,DWORD PTR [esi-0x5ad4a379],0xffffffc3
  404d6e:	in     al,0xc
  404d70:	push   cs
  404d71:	pusha  
  404d72:	dec    edx
  404d73:	xor    eax,ebx
  404d75:	jecxz  0x404d08
  404d77:	call   0xccf4:0x56d77ad0
  404d7e:	fidiv  WORD PTR [ecx+0x56]
  404d81:	inc    ebp
  404d82:	mov    DWORD PTR [ebp-0x195d4534],ecx
  404d88:	mov    esi,0xeb6f72cf
  404d8d:	ds test edi,esi
  404d90:	mov    fs,WORD PTR [edx]
  404d92:	cmp    eax,0x926b154c
  404d97:	fsub   st(1),st
  404d99:	mov    al,0xb0
  404d9b:	mov    esi,0x81c59502
  404da0:	cld    
  404da1:	add    al,0x6b
  404da3:	jne    0x696101fc
  404da9:	sub    esi,ecx
  404dab:	mov    ah,0xbf
  404dad:	bound  edx,QWORD PTR [ebx-0x6f2d6f97]
  404db3:	ins    DWORD PTR es:[edi],dx
  404db4:	push   es
  404db5:	arpl   ax,cx
  404db7:	push   edx
  404db8:	push   es
  404db9:	in     al,dx
  404dba:	call   0xe99a:0x28395161
  404dc1:	pop    ebx
  404dc2:	dec    ebx
  404dc3:	repnz xlat BYTE PTR ds:[ebx]
  404dc5:	jo     0x404dc3
  404dc7:	pop    ecx
  404dc8:	fcom   QWORD PTR [ebp-0x45157aa9]
  404dce:	adc    edi,ebx
  404dd0:	push   ecx
  404dd1:	retf   0xe964
  404dd4:	add    ebx,DWORD PTR [ebp+0x2bd0aa8]
  404dda:	jl     0x404e2e
  404ddc:	mov    ebx,edi
  404dde:	and    dl,cl
  404de0:	ret    
  404de1:	pop    ecx
  404de2:	xor    eax,DWORD PTR ds:0xc05268fd
  404de8:	jp     0x404e17
  404dea:	pusha  
  404deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dec:	pop    es
  404ded:	lea    esi,[eax+0x40]
  404df0:	fnstcw WORD PTR [eax+0x23a3954d]
  404df6:	pop    edx
  404df7:	out    dx,al
  404df8:	inc    ebp
  404df9:	cdq    
  404dfa:	test   DWORD PTR [edx+0x2432fdb5],esp
  404e00:	dec    edi
  404e01:	adc    ch,BYTE PTR ds:0x1e12db70
  404e07:	in     al,0x6
  404e09:	jecxz  0x404deb
  404e0b:	mov    ds:0xf3d3bce,al
  404e10:	xchg   edx,eax
  404e11:	or     DWORD PTR [ecx-0x25],edx
  404e14:	mov    bh,BYTE PTR [ebx+0x4f419ff0]
  404e1a:	int    0xe1
  404e1c:	nop
  404e1d:	and    ebx,DWORD PTR [esi+ebp*1]
  404e20:	shl    DWORD PTR [ebx-0x7b32dbd1],0x6d
  404e27:	xor    DWORD PTR [ecx-0x41],0x2e
  404e2b:	shl    DWORD PTR es:[eax],cl
  404e2e:	jl     0x404e2e
  404e30:	lahf   
  404e31:	sahf   
  404e32:	pop    ds
  404e33:	push   0x3817c817
  404e38:	jnp    0x404eb0
  404e3a:	test   eax,0xc000ff6e
  404e3f:	jno    0x404e77
  404e41:	xchg   edx,eax
  404e42:	pop    edi
  404e43:	scas   al,BYTE PTR es:[edi]
  404e44:	(bad)  
  404e45:	push   eax
  404e46:	test   ebx,eax
  404e48:	xchg   ecx,eax
  404e49:	pop    edx
  404e4a:	in     al,0xfa
  404e4c:	xchg   esp,eax
  404e4d:	inc    ebx
  404e4e:	cld    
  404e4f:	sti    
  404e50:	add    BYTE PTR [ebx-0x2a083297],0x9e
  404e57:	cmc    
  404e58:	mov    al,0xa5
  404e5a:	in     eax,0x2e
  404e5c:	adc    al,0x6b
  404e5e:	pop    ecx
  404e5f:	pop    edi
  404e60:	loopne 0x404ecd
  404e62:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404e64:	inc    esp
  404e65:	push   0xc50333c1
  404e6a:	stos   BYTE PTR es:[edi],al
  404e6b:	pop    ebp
  404e6c:	add    BYTE PTR [eax-0x3c],bl
  404e6f:	(bad)  
  404e70:	fmul   DWORD PTR [eax]
  404e72:	(bad)  
  404e73:	cs (bad) 
  404e75:	(bad)  
  404e77:	mov    BYTE PTR [ecx],ah
  404e79:	iret   
  404e7a:	fnsave [ebx-0x75]
  404e7d:	mov    ebp,0x220bfdb3
  404e82:	sbb    ebx,edx
  404e84:	push   esp
  404e85:	fimul  WORD PTR [esi-0x9]
  404e88:	xor    edi,0xffffffa7
  404e8b:	mov    bh,0x27
  404e8d:	push   ecx
  404e8e:	xor    ebx,DWORD PTR [eax]
  404e90:	pop    ss
  404e91:	stos   BYTE PTR es:[edi],al
  404e92:	out    0x9c,eax
  404e94:	xchg   ebx,eax
  404e95:	push   0x2c
  404e97:	loop   0x404ebe
  404e99:	inc    edx
  404e9a:	aas    
  404e9b:	fadd   DWORD PTR [esi-0x7d5cc647]
  404ea1:	pop    edx
  404ea2:	bound  esp,QWORD PTR [ecx+0x4]
  404ea5:	mov    bl,0x22
  404ea7:	xchg   edi,eax
  404ea8:	cmp    al,0x24
  404eaa:	push   0x21
  404eac:	lea    ecx,[edi-0x7a]
  404eaf:	shl    DWORD PTR [eax-0x26],0xcf
  404eb3:	xor    al,0xde
  404eb5:	fisubr WORD PTR [ebp-0x17]
  404eb8:	lea    esi,[edi]
  404eba:	dec    ebx
  404ebb:	dec    edi
  404ebc:	lods   eax,DWORD PTR ds:[esi]
  404ebd:	mov    edx,0x12a32d89
  404ec2:	adc    edi,ebx
  404ec4:	test   BYTE PTR [edx],cl
  404ec6:	add    eax,0x6d6055a3
  404ecb:	ds sbb esp,0xffffffb8
  404ecf:	mov    bh,bl
  404ed1:	adc    eax,0xc2b69e9c
  404ed6:	sbb    edx,DWORD PTR [edx+edx*4+0x69719dea]
  404edd:	test   al,0x23
  404edf:	sti    
  404ee0:	scas   eax,DWORD PTR es:[edi]
  404ee1:	jnp    0x404f31
  404ee3:	fcmove st,st(3)
  404ee5:	div    DWORD PTR ds:0x3ec1867
  404eeb:	mov    ch,0x5d
  404eed:	push   0x12
  404eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef0:	inc    esp
  404ef1:	loop   0x404f52
  404ef3:	aam    0xf
  404ef5:	cli    
  404ef6:	(bad)  
  404ef7:	sbb    edi,eax
  404ef9:	xchg   ebp,eax
  404efa:	add    BYTE PTR [ecx],bh
  404efc:	mov    bl,0xff
  404efe:	rcl    eax,0xd3
  404f01:	push   ss
  404f02:	test   BYTE PTR [eax-0x1f],ah
  404f05:	fwait
  404f06:	repnz call 0xc770:0xf46a95c8
  404f0e:	mov    ebx,0x63a5939a
  404f13:	clc    
  404f14:	add    bh,BYTE PTR [ebx+0x35a85c0f]
  404f1a:	or     al,0xf1
  404f1c:	fsubr  DWORD PTR [ebx-0x45]
  404f1f:	retf   0x9121
  404f22:	rcr    BYTE PTR [edx-0x16],1
  404f25:	pusha  
  404f26:	xchg   ebp,eax
  404f27:	push   0xffffffdb
  404f29:	mov    cl,0xa7
  404f2b:	retf   0xbd85
  404f2e:	or     DWORD PTR [ebx+0x7d8bfc45],ecx
  404f34:	clc    
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xe4bcf58a
  405700:	or     al,0xe9
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	mov    ds:0x295a4454,eax
  40570f:	sbb    al,0x7
  405711:	test   eax,0xcc48502d
  405716:	sbb    eax,0x83ec34ed
  40571b:	jns    0x4056c0
  40571d:	push   edx
  40571e:	stos   BYTE PTR es:[edi],al
  40571f:	in     al,dx
  405720:	popa   
  405721:	and    eax,0x43d4fe43
  405726:	jb     0x405711
  405728:	and    bl,BYTE PTR [edi]
  40572a:	dec    esp
  40572b:	js     0x40573a
  40572d:	pop    edi
  40572e:	ror    DWORD PTR [edx+0x53],cl
  405731:	iret   
  405732:	jmp    0x405704
  405734:	(bad)  
  405735:	int3   
  405736:	cmp    eax,0x42b1b86b
  40573b:	xchg   edi,eax
  40573c:	inc    edx
  40573d:	sbb    ebp,DWORD PTR [ecx-0x2404c3ba]
  405743:	lods   eax,DWORD PTR ds:[esi]
  405744:	in     eax,dx
  405745:	add    cl,BYTE PTR [edi]
  405747:	sbb    DWORD PTR [edi-0x30],esi
  40574a:	movlps QWORD PTR [edi],xmm3
  40574d:	int3   
  40574e:	sti    
  40574f:	mov    bh,0x8e
  405751:	adc    eax,0xe682ff4c
  405756:	xchg   edx,eax
  405757:	mov    esi,0x84dc10ad
  40575c:	jp     0x405703
  40575e:	aad    0x5b
  405760:	jae    0x40577e
  405762:	loopne 0x405719
  405764:	xor    al,0x70
  405766:	mov    edx,0xe26931a8
  40576b:	add    DWORD PTR [esp+edi*2],edi
  40576e:	leave  
  40576f:	cwde   
  405770:	push   es
  405771:	loop   0x405712
  405773:	fcomp  DWORD PTR [ebp-0x29]
  405776:	pushf  
  405777:	xor    al,0x70
  405779:	int    0x6c
  40577b:	shr    dh,0x45
  40577e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40577f:	cmp    eax,0x79540424
  405784:	jns    0x40579d
  405786:	xor    al,0x4
  405788:	imul   ecx,esi,0x1f
  40578b:	or     eax,0xe4961eec
  405790:	adc    ecx,DWORD PTR [eax+0x42]
  405793:	mov    ah,0x29
  405795:	retf   
  405796:	add    eax,DWORD PTR [edi-0x1f]
  405799:	out    dx,eax
  40579a:	ins    BYTE PTR es:[edi],dx
  40579b:	xchg   edx,eax
  40579c:	das    
  40579d:	mov    ebp,DWORD PTR ds:0x80e11eb9
  4057a3:	adc    eax,0x13648bdc
  4057a8:	inc    edi
  4057a9:	mov    WORD PTR [edi],ds
  4057ab:	lock (bad) [ecx+0x4e]
  4057af:	stc    
  4057b0:	fstp   TBYTE PTR [ecx-0x2f]
  4057b3:	cmp    BYTE PTR [ecx],bl
  4057b5:	or     DWORD PTR [ebp-0xc],edi
  4057b8:	xchg   ebp,eax
  4057b9:	int3   
  4057ba:	push   0xffffff99
  4057bc:	xor    BYTE PTR [eax+0x10d72e88],cl
  4057c2:	test   BYTE PTR [edi+0x3f],0x4b
  4057c6:	sbb    ah,BYTE PTR [ebp-0x72]
  4057c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ca:	test   dl,ch
  4057cc:	das    
  4057cd:	rcr    DWORD PTR [ecx],1
  4057cf:	(bad)  
  4057d0:	repnz repnz scas al,BYTE PTR es:[edi]
  4057d3:	in     al,dx
  4057d4:	or     dh,bh
  4057d6:	dec    ebx
  4057d7:	into   
  4057d8:	fcom   QWORD PTR [ecx+eax*8]
  4057db:	ret    
  4057dc:	cmp    al,BYTE PTR [edx+0x69]
  4057df:	jmp    0xfc0d:0xb832b68c
  4057e6:	jb     0x4057f0
  4057e8:	out    dx,al
  4057e9:	lods   al,BYTE PTR ds:[esi]
  4057ea:	xor    al,0x80
  4057ec:	push   ebx
  4057ed:	ret    0x1196
  4057f0:	dec    edi
  4057f1:	out    dx,eax
  4057f2:	xor    BYTE PTR [esi+0x47],cl
  4057f5:	lods   eax,DWORD PTR ds:[esi]
  4057f6:	mov    dh,0x35
  4057f8:	out    dx,al
  4057f9:	jb     0x4057be
  4057fb:	imul   edi,ebp,0x1c
  4057fe:	mov    bh,0x36
  405800:	outs   dx,BYTE PTR ds:[esi]
  405801:	inc    eax
  405802:	int    0xda
  405804:	(bad)  [edi-0x5b]
  405807:	sbb    ebx,0xcf436f17
  40580d:	add    al,0xc6
  40580f:	in     al,dx
  405810:	and    al,BYTE PTR ds:0xe84e4578
  405816:	outs   dx,BYTE PTR ds:[esi]
  405817:	xchg   edx,eax
  405818:	mov    edx,?
  40581a:	jmp    0x4057ff
  40581c:	int    0x1a
  40581e:	fstp   DWORD PTR [eax+0x24]
  405821:	inc    esi
  405822:	xchg   ebx,eax
  405823:	call   0x7d7f:0xe68541de
  40582a:	push   ss
  40582b:	mov    ebx,0x4ab57dba
  405830:	xor    DWORD PTR [ebx+0x72],esp
  405833:	adc    ebx,edi
  405835:	icebp  
  405836:	push   ecx
  405837:	jmp    0x4058b5
  405839:	add    bh,BYTE PTR es:[ecx+esi*8]
  40583d:	mov    dl,0x63
  40583f:	or     BYTE PTR ds:0x8e2263bf,0x92
  405846:	sbb    eax,0xdfae86c3
  40584b:	inc    ecx
  40584c:	mov    ds:0x4f7caff1,al
  405851:	imul   ebx,DWORD PTR [ecx-0x22],0xab1550fd
  405858:	out    0xed,eax
  40585a:	dec    esp
  40585b:	out    0xac,eax
  40585d:	and    bx,di
  405860:	loop   0x4058cf
  405862:	xchg   esp,eax
  405863:	or     cl,bl
  405865:	std    
  405866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405867:	in     eax,0xe6
  405869:	and    al,0xd2
  40586b:	aad    0xd3
  40586d:	xlat   BYTE PTR ds:[ebx]
  40586e:	mov    esi,0x8149f957
  405873:	and    BYTE PTR [ebp+0x4eeec0be],bl
  405879:	lahf   
  40587a:	dec    ebx
  40587b:	add    eax,0xb525510f
  405880:	daa    
  405881:	dec    esp
  405882:	push   es
  405883:	mov    bl,0xfb
  405885:	mov    WORD PTR [edi],es
  405887:	push   es
  405888:	ret    0xc5a5
  40588b:	cmp    DWORD PTR [edx+0x22],eax
  40588e:	dec    ebp
  40588f:	pop    esi
  405890:	aad    0x93
  405892:	jne    0x405906
  405894:	sub    eax,0xc773e025
  405899:	sbb    al,0x7b
  40589b:	out    0xd1,eax
  40589d:	jge    0x4058e3
  40589f:	je     0x40590d
  4058a1:	push   ebx
  4058a2:	aas    
  4058a3:	lds    esp,FWORD PTR ds:0xd8cb6aa7
  4058a9:	ins    DWORD PTR es:[edi],dx
  4058aa:	xchg   esi,eax
  4058ab:	mov    ch,0x25
  4058ad:	dec    DWORD PTR [eax-0x6077bddc]
  4058b3:	mov    bh,BYTE PTR [edi]
  4058b5:	inc    ebx
  4058b6:	mov    edi,0x668d49fd
  4058bb:	int3   
  4058bc:	sahf   
  4058bd:	retf   
  4058be:	jo     0x4058cf
  4058c0:	and    ah,0x40
  4058c3:	jle    0x405861
  4058c5:	sbb    DWORD PTR [ebx],ecx
  4058c7:	sahf   
  4058c8:	xor    DWORD PTR [esi+0x27575976],eax
  4058ce:	add    eax,0xf6d8e7cf
  4058d3:	scas   eax,DWORD PTR es:[edi]
  4058d4:	fs cdq 
  4058d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d7:	loopne 0x405914
  4058d9:	scas   eax,DWORD PTR es:[edi]
  4058da:	push   ebp
  4058db:	jle    0x405927
  4058dd:	lds    esp,FWORD PTR [ebp+0x37eef1e8]
  4058e3:	or     eax,0xe1dbe7fa
  4058e8:	mov    ds:0xe6704ab6,al
  4058ed:	mov    edx,DWORD PTR [edx+0x39]
  4058f0:	mov    edi,0xf114cadc
  4058f5:	adc    dh,al
  4058f7:	(bad)  
  4058f8:	cmp    eax,0x1985f9e4
  4058fd:	pusha  
  4058fe:	dec    ecx
  4058ff:	xor    DWORD PTR [eax-0x21],esi
  405902:	xchg   esi,eax
  405903:	(bad)  
  405904:	call   0x11fd:0x535dbcc5
  40590b:	xor    eax,eax
  40590d:	inc    eax
  40590e:	xor    al,0x54
  405910:	std    
  405911:	adc    BYTE PTR [esi],bh
  405913:	leave  
  405914:	ins    DWORD PTR es:[edi],dx
  405915:	mov    cl,0x11
  405917:	push   ecx
  405918:	ss xchg ebx,eax
  40591a:	inc    ecx
  40591b:	pop    edi
  40591c:	pop    ds
  40591d:	push   edx
  40591e:	add    BYTE PTR [edx+0x3e],ah
  405921:	add    eax,0x1c81b380
  405926:	cs ja  0x405975
  405929:	add    al,0x5
  40592b:	inc    esi
  40592c:	dec    ebx
  40592d:	shl    DWORD PTR [esi],0xb7
  405930:	mov    esp,0x47e992e0
  405935:	ins    BYTE PTR es:[edi],dx
  405936:	popa   
  405937:	xchg   DWORD PTR [edi+0x24e6e97d],ebx
  40593d:	jb     0x4058d0
  40593f:	jge    0x4058d0
  405941:	pop    ebx
  405942:	jae    0x405974
  405944:	mov    al,ds:0x43caa340
  405949:	xchg   edi,eax
  40594a:	(bad)  
  40594b:	mov    ah,0x14
  40594d:	or     ecx,DWORD PTR [eax-0x1c]
  405950:	sub    DWORD PTR [ebx-0x5af92f15],edi
  405956:	mov    edi,DWORD PTR [edx+0x66]
  405959:	cmp    bh,cl
  40595b:	shr    dl,1
  40595d:	fs mov dh,0x64
  405960:	(bad)  
  405961:	push   esi
  405962:	mov    eax,ds:0xb16ff588
  405967:	(bad)  
  405968:	imul   ecx,DWORD PTR [edi],0xffffff9d
  40596b:	loopne 0x4059b3
  40596d:	rcl    BYTE PTR [esi-0x5cdade7c],cl
  405973:	push   ecx
  405974:	sbb    esi,0x6b
  405977:	xor    eax,0x1bd0e797
  40597c:	push   es
  40597d:	or     edx,DWORD PTR [ecx-0x4]
  405980:	mov    esi,esp
  405982:	call   0xcfc1fcba
  405987:	jg     0x4059d0
  405989:	js     0x405a02
  40598b:	jmp    0x2dcce415
  405990:	mov    ds:0x46f6a165,al
  405995:	dec    esp
  405996:	out    0xaf,eax
  405998:	adc    BYTE PTR [esi+edi*1+0x2],dh
  40599c:	sub    ah,bh
  40599e:	mov    dl,0xcd
  4059a0:	sub    eax,0x39dbede9
  4059a5:	lods   al,BYTE PTR ds:[esi]
  4059a6:	icebp  
  4059a7:	mul    BYTE PTR [ebx+eax*8-0x11384fd]
  4059ae:	pushf  
  4059af:	push   esi
  4059b0:	into   
  4059b1:	pushf  
  4059b2:	xchg   BYTE PTR [ebp-0x58],dh
  4059b5:	retf   
  4059b6:	push   ebx
  4059b7:	inc    edx
  4059b8:	mov    ebx,0xc51c1c51
  4059bd:	mul    DWORD PTR [esi-0x4c89bc34]
  4059c3:	stos   DWORD PTR es:[edi],eax
  4059c4:	mov    esp,0x43329aa4
  4059c9:	pop    ecx
  4059ca:	fist   WORD PTR fs:[edi]
  4059cd:	pop    eax
  4059ce:	add    eax,0xf7e46bb6
  4059d3:	stc    
  4059d4:	push   0xc2454d13
  4059d9:	xchg   edi,eax
  4059da:	ins    DWORD PTR es:[edi],dx
  4059db:	mov    edx,0xb63baabe
  4059e0:	cli    
  4059e1:	ds aad 0x52
  4059e4:	sub    BYTE PTR [ecx+0x7],0xe4
  4059e8:	leave  
  4059e9:	sbb    eax,DWORD PTR [edx+0x6d]
  4059ec:	in     eax,0xaf
  4059ee:	sbb    DWORD PTR [esi-0x50],0x25e9f7f4
  4059f5:	inc    edx
  4059f6:	dec    ecx
  4059f7:	dec    ecx
  4059f8:	call   0x6936bde4
  4059fd:	int    0x1e
  4059ff:	(bad)  
  405a00:	jle    0x4059e8
  405a02:	cmc    
  405a03:	sbb    esi,DWORD PTR [ecx+esi*2-0x37]
  405a07:	or     ah,bl
  405a09:	adc    BYTE PTR [ebp+0x2f],ah
  405a0c:	cmp    ebp,DWORD PTR [edi]
  405a0e:	jb     0x405a2c
  405a10:	inc    edx
  405a11:	adc    BYTE PTR [ebp-0x78],0x36
  405a15:	mov    DWORD PTR [esi-0x9],edx
  405a18:	pop    edx
  405a19:	xor    eax,DWORD PTR [esp+edx*8]
  405a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1d:	fld    QWORD PTR [edx-0x7]
  405a20:	fwait
  405a21:	(bad)  
  405a22:	fldenv [edi-0x78e376d]
  405a28:	adc    al,0xdd
  405a2a:	and    bl,bh
  405a2c:	(bad)  
  405a2d:	mov    esp,0x5b90fc4
  405a32:	jmp    0x3f01760c
  405a37:	cs sbb bh,ah
  405a3a:	(bad)  
  405a3b:	xor    bl,bl
  405a3d:	mov    ch,0x64
  405a3f:	xchg   ebx,eax
  405a40:	fiadd  WORD PTR [esi+esi*4+0xc8038db]
  405a47:	inc    esi
  405a48:	mov    esi,0x268e38e8
  405a4d:	cmp    al,cl
  405a4f:	adc    ah,BYTE PTR [edx+ebx*1+0x2c]
  405a53:	imul   ecx,esi,0xffffffbe
  405a56:	enter  0xd85a,0xdb
  405a5a:	xchg   edx,eax
  405a5b:	sbb    DWORD PTR [edx+0x764342e4],ecx
  405a61:	cmp    esp,eax
  405a63:	push   esp
  405a64:	in     eax,dx
  405a65:	xchg   ebp,eax
  405a66:	sub    al,0xeb
  405a68:	xchg   ebp,eax
  405a69:	mov    ds:0xe786a53e,eax
  405a6e:	mov    esi,0x75582436
  405a73:	mov    WORD PTR [esi-0x59cbc631],?
  405a79:	fcom   QWORD PTR [edi]
  405a7b:	cmp    BYTE PTR [ebx+0x45516940],bh
  405a81:	mov    cl,0x27
  405a83:	add    DWORD PTR [ebp+0x4a],ebp
  405a86:	mov    esi,0x883db8cb
  405a8b:	xchg   ecx,eax
  405a8c:	data16 arpl WORD PTR [esi],bx
  405a8f:	and    BYTE PTR [di],bl
  405a92:	xchg   ebp,eax
  405a93:	test   BYTE PTR [ecx+0x54f98a50],0x3c
  405a9a:	cmc    
  405a9b:	jecxz  0x405aca
  405a9d:	(bad)  
  405a9e:	loopne 0x405aa5
  405aa0:	test   eax,0xf3b47219
  405aa5:	or     BYTE PTR [edx+edx*2+0x4b],dl
  405aa9:	call   0x33f94bd3
  405aae:	jbe    0x405b1b
  405ab0:	add    eax,0x96abe7f8
  405ab5:	nop
  405ab6:	fmul   QWORD PTR [edi-0x47]
  405ab9:	xchg   edi,eax
  405aba:	fild   QWORD PTR [ebx-0x7a]
  405abd:	fs mov BYTE PTR cs:[ecx],ch
  405ac1:	sti    
  405ac2:	repnz and cl,dh
  405ac5:	xchg   ecx,eax
  405ac6:	mov    BYTE PTR [eax-0x5c981e8e],al
  405acc:	pop    eax
  405acd:	ss icebp 
  405acf:	pop    esi
  405ad0:	or     BYTE PTR [ebx+0x6f8322b5],0xf7
  405ad7:	(bad)  
  405ad9:	cmp    edi,edi
  405adb:	jbe    0x405acc
  405add:	loop   0x405b40
  405adf:	cwde   
  405ae0:	std    
  405ae1:	dec    eax
  405ae2:	and    dl,bl
  405ae4:	imul   ebp,DWORD PTR [edi],0x18
  405ae7:	enter  0xa59d,0x5
  405aeb:	in     al,0x83
  405aed:	ins    BYTE PTR es:[edi],dx
  405aee:	jb     0x405ade
  405af0:	or     ebx,DWORD PTR [ebp+0x66]
  405af3:	popf   
  405af4:	push   edx
  405af5:	mov    edi,0xfd7687a
  405afa:	ins    BYTE PTR es:[edi],dx
  405afb:	lahf   
  405afc:	loope  0x405b3b
  405afe:	push   0xffffffa1
  405b00:	int    0xaf
  405b02:	(bad)  [eax-0x72]
  405b05:	ffreep st(0)
  405b07:	out    0x5a,al
  405b09:	xor    bh,BYTE PTR [edi+0x6c313565]
  405b0f:	dec    ebp
  405b10:	sbb    ebp,0x11ff953b
  405b16:	jbe    0x405ac6
  405b18:	(bad)  
  405b19:	and    DWORD PTR [ebx+0x11],edi
  405b1c:	adc    al,0x65
  405b1e:	call   0x116f:0xf86f473c
  405b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b26:	jnp    0x405b0c
  405b28:	out    0x11,al
  405b2a:	not    DWORD PTR [ebp-0x320c0b5d]
  405b30:	add    eax,0x19d105e6
  405b35:	xor    al,0x7e
  405b37:	imul   ebx,ecx,0x894719ff
  405b3d:	out    0x4a,al
  405b3f:	xor    dl,BYTE PTR [eax]
  405b41:	daa    
  405b42:	js     0x405af8
  405b44:	pop    ss
  405b45:	pop    esp
  405b46:	dec    ebx
  405b47:	and    eax,0x77ffd7a6
  405b4c:	jae    0x405b22
  405b4e:	push   ss
  405b4f:	test   DWORD PTR [ebx],ebx
  405b51:	push   eax
  405b52:	jl     0x405ae9
  405b54:	mov    edi,0x2c3397d4
  405b59:	xor    bl,BYTE PTR [ebx]
  405b5b:	add    al,0x0
  405b5d:	push   ds
  405b5e:	sar    BYTE PTR [esi+0x4d421914],0x44
  405b65:	cmp    al,cl
  405b67:	sub    DWORD PTR [ebx],0x55
  405b6a:	mov    cl,0x69
  405b6c:	(bad)  [eax]
  405b6e:	imul   ebp,ebx,0x3c
  405b71:	jne    0x405b2b
  405b73:	sahf   
  405b74:	add    BYTE PTR [ebx],cl
  405b76:	sar    BYTE PTR [edx],0x28
  405b79:	mov    al,ds:0x70bc196d
  405b7e:	push   ebx
  405b7f:	cwde   
  405b80:	sbb    al,0xa7
  405b82:	jge    0x405bea
  405b84:	out    dx,al
  405b85:	fmul   DWORD PTR [esi-0x361cdc99]
  405b8b:	sbb    eax,0xa12086cd
  405b90:	ins    DWORD PTR es:[edi],dx
  405b91:	inc    eax
  405b92:	ret    
  405b93:	pop    es
  405b94:	xchg   edx,eax
  405b95:	xchg   ecx,eax
  405b96:	jae    0x405bd6
  405b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b99:	js     0x405bc8
  405b9b:	and    al,0xcf
  405b9d:	jl     0x405b93
  405b9f:	jl     0x405b4c
  405ba1:	pop    ebx
  405ba2:	jecxz  0x405b3d
  405ba4:	ret    
  405ba5:	sbb    eax,0xbec4752f
  405baa:	mov    ch,0x21
  405bac:	xor    eax,DWORD PTR [edi+0x14686207]
  405bb2:	jae    0x405bad
  405bb4:	and    edi,ecx
  405bb6:	lahf   
  405bb7:	shl    esp,1
  405bb9:	test   eax,0x727f028
  405bbe:	jp     0x405b9f
  405bc0:	push   esp
  405bc1:	out    dx,al
  405bc2:	sub    DWORD PTR [esi-0x49544768],eax
  405bc8:	xlat   BYTE PTR ds:[ebx]
  405bc9:	inc    ecx
  405bca:	jb     0x405bc5
  405bcc:	loop   0x405c3b
  405bce:	xchg   ebp,eax
  405bcf:	jmp    0x5154:0x7a9a5814
  405bd6:	int3   
  405bd7:	les    eax,FWORD PTR [edi+0x1f]
  405bda:	nop
  405bdb:	mov    ah,0xec
  405bdd:	loopne 0x405b60
  405bdf:	xchg   ecx,eax
  405be0:	xchg   edx,eax
  405be1:	fwait
  405be2:	mov    esi,0xc9ae3e9f
  405be7:	retf   0x5b26
  405bea:	aas    
  405beb:	mov    ah,BYTE PTR [ebx+0x2e]
  405bee:	sbb    ah,BYTE PTR [edi-0x23]
  405bf1:	pop    esi
  405bf2:	cmp    ebp,DWORD PTR [ebx]
  405bf4:	mov    ebx,0xfd78d79c
  405bf9:	sub    al,0xa4
  405bfb:	out    dx,eax
  405bfc:	gs scas al,BYTE PTR es:[edi]
  405bfe:	mov    esi,0x95894882
  405c03:	ja     0x405c1a
  405c05:	mov    ds:0x1aad692f,al
  405c0a:	xor    ch,BYTE PTR ds:0x90258ca1
  405c10:	adc    DWORD PTR [ebp-0x7c5791d5],edi
  405c16:	pop    edi
  405c17:	mov    dh,0xe5
  405c19:	push   ds
  405c1a:	je     0x405c98
  405c1c:	adc    BYTE PTR [ebp+0x78],bh
  405c1f:	jg     0x405c6b
  405c21:	stos   BYTE PTR es:[edi],al
  405c22:	in     al,dx
  405c23:	and    BYTE PTR [ebx+0x66],al
  405c26:	jb     0x405c0a
  405c28:	fs in  al,dx
  405c2a:	mov    ds:0x52ee84e4,al
  405c2f:	imul   esp,DWORD PTR [esi-0x41],0x24081357
  405c36:	mov    edx,0xec033e8
  405c3b:	xchg   ecx,eax
  405c3c:	in     eax,dx
  405c3d:	stos   BYTE PTR es:[edi],al
  405c3e:	jae    0x405c1c
  405c40:	pop    ecx
  405c41:	push   ebp
  405c42:	in     al,dx
  405c43:	pop    esp
  405c44:	lds    edx,FWORD PTR [ebx-0x6c2c4d9e]
  405c4a:	xchg   edx,eax
  405c4b:	cwde   
  405c4c:	sub    BYTE PTR [ecx],bl
  405c4e:	push   ss
  405c4f:	cmp    BYTE PTR [esi+0xc1c5392],0xb8
  405c56:	mov    al,BYTE PTR [ebx+ebx*2+0x15]
  405c5a:	in     al,dx
  405c5b:	jmp    0x405c8a
  405c5d:	pop    ss
  405c5e:	pop    ebp
  405c5f:	inc    ebx
  405c60:	cmp    DWORD PTR [esi-0x25da70b7],edi
  405c66:	enter  0xfb34,0x8b
  405c6a:	sbb    eax,0x4e2c2ae6
  405c6f:	retf   0xb1d6
  405c72:	push   ebp
  405c73:	scas   al,BYTE PTR es:[di]
  405c75:	sbb    bh,ah
  405c77:	out    dx,al
  405c78:	sbb    dl,BYTE PTR [eax+0x36f1f2cd]
  405c7e:	ficomp DWORD PTR [edx+0xe45681b]
  405c84:	es dec edi
  405c86:	jmp    ebx
  405c88:	dec    ebp
  405c89:	shr    DWORD PTR [ecx],cl
  405c8b:	jae    0x405ce9
  405c8d:	fldcw  WORD PTR [ebp-0x5687602]
  405c93:	stc    
  405c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c95:	daa    
  405c96:	push   ecx
  405c97:	adc    BYTE PTR [ebp-0x12c510ce],ah
  405c9d:	dec    esi
  405c9e:	dec    ecx
  405c9f:	mov    eax,ds:0xd82ef27c
  405ca4:	call   0xbe7e:0xc664c4f1
  405cab:	fisttp QWORD PTR cs:[ebx]
  405cae:	sub    eax,0x2931c9ad
  405cb3:	add    eax,0xd93dc887
  405cb8:	mov    bl,0xa8
  405cba:	sub    esp,DWORD PTR [ecx]
  405cbc:	or     dl,BYTE PTR [ebp-0x74f20eef]
  405cc2:	repnz inc ecx
  405cc4:	mov    BYTE PTR [edx],cl
  405cc6:	adc    BYTE PTR [ebp-0xc574db3],ch
  405ccc:	stos   DWORD PTR es:[edi],eax
  405ccd:	lods   eax,DWORD PTR ds:[esi]
  405cce:	mov    dl,0xd
  405cd0:	xchg   esp,eax
  405cd1:	cmc    
  405cd2:	leave  
  405cd3:	and    eax,0x77e80fe8
  405cd8:	and    BYTE PTR [esi-0x18],0xab
  405cdc:	mov    edi,0x7a0ac7ec
  405ce1:	mov    ebp,0x537de3e5
  405ce6:	cld    
  405ce7:	dec    ecx
  405ce8:	aas    
  405ce9:	and    al,0x54
  405ceb:	add    DWORD PTR [edx-0x70bfe105],ecx
  405cf1:	pop    es
  405cf2:	cmp    bh,BYTE PTR fs:[ecx]
  405cf5:	mov    BYTE PTR [esi],bh
  405cf7:	sub    al,0xa4
  405cf9:	in     al,0x16
  405cfb:	dec    edi
  405cfc:	add    al,0xb2
  405cfe:	or     cl,BYTE PTR [eax-0x60aa724e]
  405d04:	ja     0x405c98
  405d06:	xchg   esp,eax
  405d07:	jl     0x405d74
  405d09:	ds retf 0xec70
  405d0d:	test   BYTE PTR [edi-0x4858b665],dl
  405d13:	aaa    
  405d14:	ret    
  405d15:	mov    esi,0x165ae0a4
  405d1a:	add    DWORD PTR [ecx+eiz*1],0x5b
  405d1e:	cs shr eax,0xad
  405d22:	sub    al,0x5f
  405d24:	dec    edx
  405d25:	jmp    0x2f27135a
  405d2a:	push   ecx
  405d2b:	push   edi
  405d2c:	jmp    0x72cf1ef
  405d31:	or     BYTE PTR [esi-0x16],bl
  405d34:	inc    esi
  405d35:	sar    DWORD PTR [eax],cl
  405d37:	fmul   QWORD PTR ds:0x4dcd1c4d
  405d3d:	adc    edi,ebx
  405d3f:	call   0x47af14ef
  405d44:	call   0xdbc63886
  405d49:	mov    esp,0xf22a601d
  405d4e:	dec    ebp
  405d4f:	ins    WORD PTR es:[di],dx
  405d52:	test   DWORD PTR [ebx],edx
  405d54:	aas    
  405d55:	dec    ecx
  405d56:	retf   
  405d57:	ins    DWORD PTR es:[edi],dx
  405d58:	inc    ebp
  405d59:	adc    BYTE PTR [edi+0x2b3c3e38],cl
  405d5f:	mov    ch,0xa0
  405d61:	adc    edx,ebx
  405d63:	sbb    al,BYTE PTR [ebx]
  405d65:	(bad)  
  405d66:	sbb    ecx,ebp
  405d68:	adc    al,0x63
  405d6a:	fimul  DWORD PTR [edi]
  405d6c:	fwait
  405d6d:	adc    BYTE PTR [ebx],dl
  405d6f:	jmp    0xeae7:0x1ea81f93
  405d76:	cmp    dh,BYTE PTR [eax]
  405d78:	fdivrp st(5),st
  405d7a:	xor    ebp,esi
  405d7c:	jns    0x405d9c
  405d7e:	mov    cl,BYTE PTR [ebx-0x48]
  405d81:	rcr    BYTE PTR [edi-0x2d0a2aef],cl
  405d87:	arpl   bp,cx
  405d89:	inc    dl
  405d8b:	out    0xc2,eax
  405d8d:	mov    ds:0x2c756cac,eax
  405d92:	pop    ss
  405d93:	or     eax,0x44240a9d
  405d98:	repnz call 0xe622:0xb671b7b2
  405da0:	pusha  
  405da1:	mov    eax,ds:0xb7c49945
  405da6:	in     eax,0x18
  405da8:	mov    edx,0x55e8e915
  405dad:	push   esp
  405dae:	pop    edx
  405daf:	mov    dl,BYTE PTR ds:0xbcb336cd
  405db5:	repnz scas al,BYTE PTR es:[edi]
  405db7:	in     al,0x3b
  405db9:	add    al,BYTE PTR [eax]
  405dbb:	and    ah,BYTE PTR [esi+0x27]
  405dbe:	mov    ah,0xb3
  405dc0:	sub    BYTE PTR [edi+0x6b1cc731],ah
  405dc6:	mov    edi,0x6ebb8fbc
  405dcb:	int3   
  405dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dcd:	ins    DWORD PTR es:[edi],dx
  405dce:	repnz pop es
  405dd0:	daa    
  405dd1:	inc    ebx
  405dd2:	retf   
  405dd3:	push   cs
  405dd4:	add    esi,edi
  405dd6:	lods   al,BYTE PTR ds:[esi]
  405dd7:	shr    BYTE PTR [edi-0x1a57a47c],cl
  405ddd:	(bad)  
  405dde:	jl     0x405d64
  405de0:	test   DWORD PTR [esi+0x55ce38f5],0x283fdc60
  405dea:	cld    
  405deb:	out    0x2e,al
  405ded:	mov    cl,0x7f
  405def:	pusha  
  405df0:	retf   0x9909
  405df3:	arpl   dx,di
  405df5:	and    eax,0xd619fe9c
  405dfa:	ins    BYTE PTR es:[edi],dx
  405dfb:	jg     0x405d7d
  405dfd:	sbb    eax,DWORD PTR [esi-0x4edb42a1]
  405e03:	push   ecx
  405e04:	call   0x2c89d83d
  405e09:	mov    ss,WORD PTR [ebx+0x54]
  405e0c:	xor    eax,DWORD PTR [ebx]
  405e0e:	fiadd  WORD PTR [edi+0x5e]
  405e12:	xchg   esp,eax
  405e13:	dec    esi
  405e14:	jbe    0x405e44
  405e16:	mov    fs,WORD PTR [eax+0x7e]
  405e19:	add    al,0x7b
  405e1b:	popf   
  405e1c:	imul   edi,DWORD PTR [edx-0x7ce9f53],0x54
  405e23:	push   0xffffffe4
  405e25:	fistp  QWORD PTR [esi+0x48]
  405e28:	inc    ebx
  405e29:	mov    ds:0x4d667e29,al
  405e2e:	dec    ebp
  405e2f:	xchg   edx,eax
  405e30:	ins    BYTE PTR es:[edi],dx
  405e31:	mov    esi,0x8624aea6
  405e36:	adc    al,0xc5
  405e38:	xor    BYTE PTR gs:[edx+ebx*1],al
  405e3c:	inc    ebp
  405e3d:	imul   esi,esp,0x20
  405e40:	jns    0x405e55
  405e42:	idiv   DWORD PTR [edi-0x1e]
  405e45:	and    eax,0xc06d1228
  405e4a:	xchg   ecx,eax
  405e4b:	mov    bh,0x9a
  405e4d:	push   eax
  405e4e:	div    BYTE PTR [ebx]
  405e50:	pop    es
  405e51:	out    0x52,al
  405e53:	or     dl,BYTE PTR [esi+esi*4]
  405e56:	fisub  DWORD PTR [edx+esi*4-0x23782584]
  405e5d:	or     DWORD PTR [eax],ebp
  405e5f:	jp     0x405e91
  405e61:	aam    0x69
  405e63:	in     eax,dx
  405e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e65:	out    0x24,eax
  405e67:	rcr    BYTE PTR [eax-0x4de4ab2e],1
  405e6d:	cs js  0x405e10
  405e70:	jae    0x405ecb
  405e72:	int3   
  405e73:	aaa    
  405e74:	and    edx,DWORD PTR [edx]
  405e76:	mov    eax,0xa6cb6eb1
  405e7b:	xlat   BYTE PTR ds:[ebx]
  405e7c:	or     bh,BYTE PTR [eax+0x2d]
  405e7f:	cmp    al,0xa
  405e81:	push   0x13
  405e83:	add    ah,BYTE PTR [ecx+0x6f6888ab]
  405e89:	shl    ah,cl
  405e8b:	in     al,dx
  405e8c:	sahf   
  405e8d:	jmp    0xa06571a4
  405e92:	fs pop ebx
  405e94:	stos   BYTE PTR es:[edi],al
  405e95:	inc    eax
  405e96:	or     eax,0x64c5bb22
  405e9b:	sti    
  405e9c:	dec    eax
  405e9d:	or     dl,BYTE PTR [ecx]
  405e9f:	mov    bh,0xb7
  405ea1:	and    DWORD PTR [eax],edx
  405ea3:	popf   
  405ea4:	xor    BYTE PTR [ecx+0x40c8d571],al
  405eaa:	adc    eax,DWORD PTR [eax-0x73]
  405ead:	xor    al,0x16
  405eaf:	popf   
  405eb0:	mov    al,0x32
  405eb2:	rcl    eax,1
  405eb4:	in     eax,dx
  405eb5:	sub    eax,0xaf8fd95c
  405eba:	pushf  
  405ebb:	cli    
  405ebc:	retf   
  405ebd:	push   es
  405ebe:	sbb    eax,0xd406037b
  405ec3:	jo     0x405e4a
  405ec5:	xor    eax,0x31cba27
  405eca:	sub    BYTE PTR [esp+ebx*4-0x3f],dh
  405ece:	emms   
  405ed0:	fadd   QWORD PTR [ebp+0x67]
  405ed3:	lods   al,BYTE PTR ds:[esi]
  405ed4:	cmp    al,0xb3
  405ed6:	in     eax,dx
  405ed7:	imul   ecx,DWORD PTR [esi],0xffffffa3
  405eda:	loop   0x405eb3
  405edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405edd:	test   eax,0xa395f35b
  405ee2:	outs   dx,DWORD PTR ds:[esi]
  405ee3:	sbb    eax,0xd564977e
  405ee8:	add    ebp,DWORD PTR [eax+0x56ad3e7a]
  405eee:	inc    esp
  405eef:	aaa    
  405ef0:	xchg   ebx,eax
  405ef1:	or     eax,0xa4cefab6
  405ef6:	xchg   DWORD PTR [ebp-0x567fce86],ebp
  405efc:	int3   
  405efd:	and    bh,BYTE PTR [edx-0x550994a3]
  405f03:	aad    0x87
  405f05:	xor    BYTE PTR [ebx+ecx*8-0x475eba2c],bh
  405f0c:	fistp  WORD PTR [ebx]
  405f0e:	fadd   QWORD PTR [eax]
  405f10:	inc    ebp
  405f11:	ins    DWORD PTR es:[edi],dx
  405f12:	int3   
  405f13:	push   edi
  405f14:	dec    ecx
  405f15:	jecxz  0x405f85
  405f17:	inc    edi
  405f18:	xchg   DWORD PTR [esi-0x16],esp
  405f1b:	out    dx,eax
  405f1c:	int    0xc4
  405f1e:	pushf  
  405f1f:	push   ebp
  405f20:	mov    ebp,0x8712f8f
  405f25:	pop    esi
  405f26:	(bad)  
  405f27:	mov    ch,0xa2
  405f29:	cmp    BYTE PTR ds:[esi+ecx*8],dl
  405f2d:	cmp    dh,al
  405f2f:	adc    esp,DWORD PTR [ecx+edx*2+0x4cf3034b]
  405f36:	push   esp
  405f37:	das    
  405f38:	xor    dh,bl
  405f3a:	sar    DWORD PTR [ebx+edx*2+0x7e],0x6c
  405f3f:	push   es
  405f40:	ror    BYTE PTR [ecx-0x3],0x25
  405f44:	popa   
  405f45:	mov    esp,0x4441b410
  405f4a:	pop    esi
  405f4b:	fs lods al,BYTE PTR ds:[esi]
  405f4e:	sbb    DWORD PTR [esi],ebx
  405f50:	imul   ecx,DWORD PTR [eax],0xffffffe6
  405f53:	pop    edi
  405f54:	arpl   WORD PTR [ebp+0x68],dx
  405f57:	and    BYTE PTR [esi+ebp*1-0x58508459],ch
  405f5e:	sub    esp,DWORD PTR [ecx+0x50bec6eb]
  405f64:	(bad)  
  405f65:	xor    DWORD PTR [eax],edx
  405f67:	mov    ah,0x6c
  405f69:	aam    0xc3
  405f6b:	adc    al,al
  405f6d:	mov    esi,0x7429421a
  405f72:	mov    ah,0x2e
  405f74:	sub    ecx,esi
  405f76:	aas    
  405f77:	xor    cl,BYTE PTR [ebp+0x70]
  405f7a:	jns    0x405f85
  405f7c:	outs   dx,DWORD PTR ds:[esi]
  405f7d:	mov    eax,edx
  405f7f:	xchg   BYTE PTR [ecx],bl
  405f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f82:	je     0x405ff9
  405f84:	fistp  QWORD PTR [ecx]
  405f86:	lock inc ebx
  405f88:	(bad)  
  405f89:	idiv   BYTE PTR [eax+0x59]
  405f8c:	cdq    
  405f8d:	loope  0x405ff0
  405f8f:	adc    DWORD PTR ss:[ecx],0xd82ac23c
  405f96:	call   0x7558:0x7038f94e
  405f9d:	(bad)  
  405f9e:	push   esp
  405f9f:	inc    ebx
  405fa0:	inc    edi
  405fa1:	xor    eax,0xbd5c0f80
  405fa6:	add    BYTE PTR [esi],cl
  405fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa9:	pop    edi
  405faa:	cs jb  0x405fa5
  405fad:	push   edi
  405fae:	iret   
  405faf:	das    
  405fb0:	int3   
  405fb1:	and    bh,BYTE PTR [esi+eiz*4]
  405fb4:	sbb    eax,0xfa1602bf
  405fb9:	loope  0x405f8c
  405fbb:	mov    ebp,0xc50e63e9
  405fc0:	fnstsw WORD PTR [ebp-0x12]
  405fc3:	or     cl,BYTE PTR [esi+ecx*8]
  405fc6:	mov    ebp,0xb20beaf0
  405fcb:	std    
  405fcc:	adc    bh,bh
  405fce:	sub    bl,BYTE PTR [edi-0x2]
  405fd1:	mov    edx,edi
  405fd3:	push   esp
  405fd4:	mov    al,BYTE PTR [ebp+0x413ff051]
  405fda:	aad    0x4
  405fdc:	ret    
  405fdd:	push   esp
  405fde:	scas   eax,DWORD PTR es:[edi]
  405fdf:	push   ebx
  405fe0:	mov    ch,0xda
  405fe2:	sub    ecx,DWORD PTR [esi+eax*4+0x58c5acd2]
  405fe9:	outs   dx,DWORD PTR ds:[esi]
  405fea:	ficom  WORD PTR [edi+0x6a]
  405fed:	push   esi
  405fee:	jb     0x405f8b
  405ff0:	pusha  
  405ff1:	mov    ebp,0xbe1a04b5
  405ff6:	outs   dx,BYTE PTR ds:[esi]
  405ff7:	jnp    0x405fce
  405ff9:	pop    ds
  405ffa:	test   edx,edi
  405ffc:	dec    edx
  405ffd:	jb     0x406040
  405fff:	imul   ecx,DWORD PTR [eax+0x4f],0x27
  406003:	push   edx
  406004:	push   0x72
  406006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406007:	adc    BYTE PTR [ebp-0x1d],dh
  40600a:	(bad)  
  40600b:	call   0x8c2c:0x23cb82a5
  406012:	mov    eax,DWORD PTR [ebx+eiz*2]
  406015:	(bad)  
  406016:	(bad)  
  406017:	out    0x80,eax
  406019:	adc    al,0x9e
  40601b:	cmp    dl,BYTE PTR [eax+0x51]
  40601e:	mov    esp,0x7bace48
  406023:	sahf   
  406024:	dec    ebx
  406025:	in     al,dx
  406026:	cmp    eax,0x85614c77
  40602b:	mov    dl,BYTE PTR [edx]
  40602d:	ins    DWORD PTR es:[edi],dx
  40602e:	cmp    edx,0xffffffcb
  406031:	int    0x65
  406033:	or     bh,dl
  406035:	les    esi,FWORD PTR [ecx-0x2cbefcb0]
  40603b:	mov    esi,0x5d8c12f9
  406040:	mov    al,ds:0xc0438eb8
  406045:	ret    0x8e86
  406048:	or     ebx,DWORD PTR [edi+0x652cf29f]
  40604e:	adc    BYTE PTR [edx+edi*1+0x358ac5ef],dh
  406055:	aad    0xff
  406057:	or     DWORD PTR [esi],eax
  406059:	lock adc bh,ch
  40605c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40605d:	(bad)  
  40605e:	jg     0x406087
  406060:	(bad)  
  406061:	in     eax,0x89
  406063:	pusha  
  406064:	test   DWORD PTR [eax],esp
  406066:	(bad)  
  406067:	push   eax
  406068:	in     eax,0x74
  40606a:	in     al,dx
  40606b:	mov    eax,0xffae0143
  406070:	pop    es
  406071:	mov    dl,0xda
  406073:	cmp    BYTE PTR [ebp-0x547c48e1],ch
  406079:	or     eax,0x237af91c
  40607e:	pop    ebp
  40607f:	mov    esi,0xb06c6c6f
  406084:	cmp    BYTE PTR [esi+0x11],al
  406087:	push   ss
  406088:	dec    ecx
  406089:	and    edi,ebp
  40608b:	pushf  
  40608c:	imul   esp,DWORD PTR [ebx-0x29],0x32e5d53e
  406093:	adc    ah,BYTE PTR [ecx+0x69]
  406096:	test   BYTE PTR [eax+edx*2+0x47192102],cl
  40609d:	xor    dl,BYTE PTR [edx]
  40609f:	xchg   BYTE PTR [eax-0x5d],bh
  4060a2:	adc    ch,BYTE PTR [edi+eiz*1+0x4a]
  4060a6:	daa    
  4060a7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a9:	gs aam 0x9
  4060ac:	cli    
  4060ad:	push   0xffffffb2
  4060af:	add    ebp,DWORD PTR [ebp-0x66]
  4060b2:	xlat   BYTE PTR ds:[ebx]
  4060b3:	dec    ebx
  4060b4:	push   edi
  4060b5:	adc    BYTE PTR [ebx+0x140eae70],al
  4060bb:	outs   dx,DWORD PTR ds:[esi]
  4060bc:	call   0xf53515ff
  4060c1:	retf   0x586d
  4060c4:	pop    ebp
  4060c5:	(bad)  
  4060c7:	cli    
  4060c8:	pusha  
  4060c9:	and    eax,0xead4f5cf
  4060ce:	pop    ss
  4060cf:	std    
  4060d0:	out    dx,al
  4060d1:	or     dl,BYTE PTR [esi+0x4d]
  4060d4:	and    eax,0xb7a16beb
  4060d9:	fmul   DWORD PTR [esi-0x6ffb5dd4]
  4060df:	sbb    bl,ch
  4060e1:	in     al,0x69
  4060e3:	mov    WORD PTR [ecx],cs
  4060e5:	mov    dl,0xdb
  4060e7:	fcomp  DWORD PTR [edx]
  4060e9:	jb     0x40609d
  4060eb:	xchg   esi,esi
  4060ed:	in     eax,0xb0
  4060ef:	stos   BYTE PTR es:[edi],al
  4060f0:	(bad)
  4060f3:	xlat   BYTE PTR ds:[ebx]
  4060f4:	shl    edx,0xd3
  4060f7:	push   esp
  4060f8:	lods   al,BYTE PTR ds:[esi]
  4060f9:	and    ah,BYTE PTR es:[ebx-0x1b]
  4060fd:	mov    edx,0x29cb1ac0
  406102:	mov    bh,0xcf
  406104:	push   eax
  406105:	es jge 0x40613e
  406108:	or     BYTE PTR [esi+0x66e91b2d],ch
  40610e:	call   0x33b3:0x5f91643d
  406115:	dec    ebx
  406116:	xchg   BYTE PTR [esi-0x18],al
  406119:	sub    BYTE PTR [edx],bh
  40611b:	lods   al,BYTE PTR ds:[esi]
  40611c:	xchg   BYTE PTR [edi+0x66dd58a],bl
  406122:	mov    esp,0x45f05297
  406127:	mov    ebx,0x1409ad10
  40612c:	les    ebx,FWORD PTR [edi-0x71bf1336]
  406132:	mov    bl,0xae
  406134:	shl    BYTE PTR [edx],1
  406136:	jle    0x4060f8
  406138:	mov    DWORD PTR [ebx-0x5ff5052e],esp
  40613e:	and    DWORD PTR [ecx+0xe],ebp
  406141:	and    BYTE PTR [edi+eiz*8],ch
  406144:	inc    edx
  406145:	shl    BYTE PTR [edi-0x1c],cl
  406148:	mov    esi,0x99d4633d
  40614d:	test   DWORD PTR [edx-0x13],esi
  406150:	out    0xb,eax
  406152:	pop    es
  406153:	cwde   
  406154:	leave  
  406155:	not    BYTE PTR [edi]
  406157:	pushf  
  406158:	xchg   edi,eax
  406159:	pop    ds
  40615a:	pushf  
  40615b:	clc    
  40615c:	push   0x5a
  40615e:	push   edx
  40615f:	rol    ah,cl
  406161:	xor    BYTE PTR [ebp+0x4b69f2c9],ch
  406167:	pop    ss
  406168:	and    al,0x40
  40616a:	sahf   
  40616b:	mov    edi,0x87a3a7b7
  406170:	cmp    eax,0xb733f2b6
  406175:	sbb    cl,0x91
  406178:	fxch   st(1)
  40617a:	xchg   esi,eax
  40617b:	push   es
  40617c:	sbb    eax,0x55697267
  406181:	mov    al,0x8
  406183:	sub    ch,BYTE PTR [esi-0x214063e6]
  406189:	das    
  40618a:	cld    
  40618b:	or     al,0x62
  40618d:	add    DWORD PTR [edi-0x74],eax
  406190:	outs   dx,DWORD PTR ds:[esi]
  406191:	dec    ebx
  406192:	in     eax,dx
  406193:	inc    ecx
  406194:	cs or  eax,0xb5e7feec
  40619a:	pop    es
  40619b:	fs dec ecx
  40619d:	int    0x80
  40619f:	inc    edx
  4061a0:	sti    
  4061a1:	mov    ds:0xe41a266,eax
  4061a6:	mov    esi,0xd04f9027
  4061ab:	es test al,0x87
  4061ae:	jne    0x4061fd
  4061b0:	test   DWORD PTR [ebx],esp
  4061b2:	or     al,BYTE PTR [edi*8+0x340e2e81]
  4061b9:	push   edx
  4061ba:	push   edi
  4061bb:	inc    esp
  4061bc:	test   DWORD PTR [eax-0x10],0xf6612e72
  4061c3:	hlt    
  4061c4:	shl    DWORD PTR [ebx+0x2572d1a9],1
  4061ca:	(bad)  
  4061cb:	jmp    0xcad8:0xf18244a
  4061d2:	scas   eax,DWORD PTR es:[edi]
  4061d3:	(bad)  
  4061d4:	dec    edx
  4061d5:	mov    ah,0xab
  4061d7:	jecxz  0x406180
  4061d9:	sbb    dh,BYTE PTR [esp+ebp*8+0xe2aa626]
  4061e0:	daa    
  4061e1:	push   0xffffffa9
  4061e3:	dec    esi
  4061e4:	mov    edi,0xcf0974a
  4061e9:	in     al,0x6a
  4061eb:	ins    BYTE PTR es:[edi],dx
  4061ec:	lock mov edi,0x1201343d
  4061f2:	mov    ecx,0x97c0f9f0
  4061f7:	je     0x40622d
  4061f9:	js     0x4061cd
  4061fb:	test   al,0xad
  4061fd:	scas   eax,DWORD PTR es:[edi]
  4061fe:	inc    edx
  4061ff:	mov    ds:0x95e425f5,al
  406204:	pop    edx
  406205:	fadd   DWORD PTR [ebx+0x42]
  406208:	cdq    
  406209:	loopne 0x4061a1
  40620b:	inc    esp
  40620c:	dec    ebp
  40620d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40620e:	loop   0x4061c1
  406210:	inc    esp
  406211:	mov    DWORD PTR [ecx-0x19e8da81],esp
  406217:	or     DWORD PTR [ebx-0x74],edx
  40621a:	mov    DWORD PTR [eax],edi
  40621c:	int3   
  40621d:	or     eax,0x8fd34200
  406222:	stos   BYTE PTR es:[edi],al
  406223:	popa   
  406224:	ret    0x71de
  406227:	xor    BYTE PTR [ecx],dh
  406229:	pusha  
  40622a:	jb     0x4061bf
  40622c:	imul   BYTE PTR [edi+0xa]
  40622f:	outs   dx,BYTE PTR ds:[esi]
  406230:	sub    DWORD PTR [edx+edx*2+0x68460d9f],ebx
  406237:	add    bl,dl
  406239:	cwde   
  40623a:	dec    edx
  40623b:	or     DWORD PTR [ecx-0x15],ecx
  40623e:	mov    esi,DWORD PTR [edx]
  406240:	add    al,0x9e
  406242:	inc    eax
  406243:	or     eax,0xf250531f
  406248:	xlat   BYTE PTR ds:[ebx]
  406249:	popf   
  40624a:	imul   ecx,DWORD PTR [ebp+0x1b850131],0x2f0a8ed3
  406254:	(bad)  
  406255:	scas   al,BYTE PTR es:[edi]
  406256:	cmp    eax,0x1c849eaa
  40625b:	xor    BYTE PTR [esi+0x779ae6d6],bl
  406261:	mov    dh,0xdf
  406263:	fisttp QWORD PTR [ebx-0x75]
  406266:	adc    dl,bl
  406268:	call   0x8caa670b
  40626d:	jecxz  0x40628d
  40626f:	sar    ecx,cl
  406271:	inc    ecx
  406272:	daa    
  406273:	mov    ch,0xad
  406275:	clc    
  406276:	mov    eax,DWORD PTR [eax+ebp*4+0x1a3407f2]
  40627d:	repnz mov bl,0xdb
  406280:	and    ecx,DWORD PTR [esi]
  406282:	loop   0x40620d
  406284:	les    esi,FWORD PTR [edi]
  406286:	mov    bh,0x1
  406288:	xchg   edi,eax
  406289:	mov    ?,WORD PTR [eax+0x534a65ee]
  40628f:	stos   DWORD PTR es:[edi],eax
  406290:	cmp    al,0x3f
  406292:	mov    bh,0xed
  406294:	js     0x406261
  406296:	xchg   ebx,eax
  406297:	mov    BYTE PTR [ebp+0x7b],dh
  40629a:	imul   ebp,DWORD PTR [edi-0x30],0xcc86507
  4062a1:	ins    DWORD PTR es:[edi],dx
  4062a2:	fdivr  QWORD PTR [ebx+0x3e]
  4062a5:	iret   
  4062a6:	inc    esp
  4062a7:	xor    bh,BYTE PTR [ebx]
  4062a9:	int3   
  4062aa:	enter  0xf9de,0x2d
  4062ae:	sub    cl,al
  4062b0:	sub    BYTE PTR [eax+eiz*8-0x4ff2dbef],dh
  4062b7:	call   0x5ab7:0x22287d5a
  4062be:	xchg   ebx,eax
  4062bf:	lahf   
  4062c0:	cmp    DWORD PTR [ecx+0x24ad2ee9],0xcf60b196
  4062ca:	mov    eax,0xed0e7b7e
  4062cf:	xlat   BYTE PTR ds:[ebx]
  4062d0:	clc    
  4062d1:	adc    eax,0x1e09c4e7
  4062d6:	or     esp,DWORD PTR [edi-0x228d37aa]
  4062dc:	sub    eax,0xf961d7ac
  4062e1:	xchg   ecx,eax
  4062e2:	jge    0x4062ec
  4062e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e5:	xor    eax,0x9bd1d602
  4062ea:	push   cs
  4062eb:	mul    esp
  4062ed:	mov    bh,0x72
  4062ef:	cmp    dl,bh
  4062f1:	xor    al,0x91
  4062f3:	dec    edi
  4062f4:	inc    ebp
  4062f5:	xchg   bh,bh
  4062f7:	xor    eax,eax
  4062f9:	xor    BYTE PTR [ecx],cl
  4062fb:	dec    esi
  4062fc:	cmp    DWORD PTR [ebx-0x1a],ebp
  4062ff:	push   eax
  406300:	fdiv   QWORD PTR [edx]
  406302:	add    ecx,DWORD PTR [esi-0x42]
  406305:	and    eax,0xaabba68c
  40630a:	push   ebx
  40630b:	mov    bh,0xc6
  40630d:	fistp  WORD PTR [edx-0x564a3484]
  406313:	add    edx,DWORD PTR [edx-0x4f]
  406316:	mov    esi,0xd0aed1f3
  40631b:	dec    edi
  40631c:	imul   esi,DWORD PTR [eax],0x94e2c58b
  406322:	clc    
  406323:	nop
  406324:	and    eax,0x7dc45fea
  406329:	push   edx
  40632a:	mov    edi,DWORD PTR [edi+ebx*8+0x7f223bd]
  406331:	xchg   si,ax
  406333:	scas   eax,DWORD PTR es:[edi]
  406334:	sub    edx,DWORD PTR [ecx+0x40]
  406337:	sbb    eax,0x9cd214c
  40633c:	js     0x40635f
  40633e:	push   eax
  40633f:	test   al,0xe4
  406341:	sub    ah,BYTE PTR [ebp-0x29754948]
  406347:	fxch   st(4)
  406349:	shl    BYTE PTR [esi],1
  40634b:	inc    ebp
  40634c:	push   ss
  40634d:	mov    WORD PTR [ecx],es
  40634f:	outs   dx,BYTE PTR ds:[esi]
  406350:	aaa    
  406351:	cmp    esi,DWORD PTR [ecx]
  406353:	push   0x1c6d78d4
  406358:	inc    ebp
  406359:	mov    eax,0xa58a6f9c
  40635e:	aam    0x35
  406360:	ins    DWORD PTR es:[edi],dx
  406361:	mov    dl,0x1e
  406363:	sbb    dl,al
  406365:	or     esp,DWORD PTR [edx-0xec0a9a8]
  40636b:	cs dec ebp
  40636d:	push   edx
  40636e:	xor    eax,0x7058f70c
  406373:	cmp    BYTE PTR [ecx],0xe3
  406376:	stc    
  406377:	push   edi
  406378:	scas   eax,DWORD PTR es:[edi]
  406379:	jp     0x406377
  40637b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637c:	xchg   edi,eax
  40637d:	gs sub al,0xb4
  406380:	inc    edi
  406381:	enter  0x61f8,0x9a
  406385:	ss mov esi,0x92f0f13e
  40638b:	data16 fdiv QWORD PTR [ebx+0x4f]
  40638f:	dec    eax
  406390:	in     al,0xc8
  406392:	jmp    0x6992:0xc3314ee2
  406399:	sub    BYTE PTR [eax+0x455412d5],0x62
  4063a0:	push   es
  4063a1:	(bad)  
  4063a2:	adc    ebx,esp
  4063a4:	scas   al,BYTE PTR es:[edi]
  4063a5:	jmp    0x75b2:0x7b9e11ca
  4063ac:	pop    ss
  4063ad:	std    
  4063ae:	mov    dl,0x52
  4063b0:	push   edi
  4063b1:	retf   
  4063b2:	push   0xffffffd5
  4063b4:	mov    esp,0xa56a441b
  4063b9:	inc    esi
  4063ba:	sbb    BYTE PTR [ebx+0xb3875d1],dh
  4063c0:	call   0x36ee:0x12569bf0
  4063c7:	dec    ebp
  4063c8:	and    ah,BYTE PTR [ecx+edx*2]
  4063cb:	xor    edx,DWORD PTR [edx+ebp*4+0x7e]
  4063cf:	adc    DWORD PTR [eax],ebx
  4063d1:	inc    ebx
  4063d2:	mov    al,0x6f
  4063d4:	out    dx,eax
  4063d5:	push   esp
  4063d6:	aaa    
  4063d7:	or     eax,DWORD PTR [eax+0x7c24e887]
  4063dd:	shr    BYTE PTR [ebp+0x564ea9ae],0x66
  4063e4:	jno    0x4063e1
  4063e6:	lahf   
  4063e7:	cmp    bl,BYTE PTR [edx+ebx*1+0x52ebe6fb]
  4063ee:	das    
  4063ef:	sbb    al,0x11
  4063f1:	fld    QWORD PTR [edi-0x4c]
  4063f4:	cmc    
  4063f5:	gs add eax,0x42f5cc4f
  4063fb:	retf   0x21f4
  4063fe:	nop
  4063ff:	rol    BYTE PTR [edx-0x60],0xf6
  406403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406404:	aas    
  406405:	xlat   BYTE PTR ds:[ebx]
  406406:	mov    cs,WORD PTR [eax-0x5e]
  406409:	or     bh,BYTE PTR [ebx-0xb37ea50]
  40640f:	sahf   
  406410:	stos   BYTE PTR es:[edi],al
  406411:	ss sbb al,0xd
  406414:	outs   dx,BYTE PTR ds:[esi]
  406415:	repz pop edi
  406417:	or     ah,0x1e
  40641a:	out    dx,eax
  40641b:	cmp    al,BYTE PTR [eax-0x71573b66]
  406421:	jae    0x4063d3
  406423:	inc    eax
  406424:	pop    esp
  406425:	pop    esp
  406426:	push   edi
  406427:	adc    al,0x23
  406429:	in     eax,dx
  40642a:	test   DWORD PTR [edx+0x3b],esi
  40642d:	in     eax,0x20
  40642f:	jmp    0x9e19:0xab7a493
  406436:	or     al,0x3a
  406438:	mov    cs,WORD PTR [esi+0x7756c0c1]
  40643e:	and    eax,0x5da3ad29
  406443:	fwait
  406444:	mov    WORD PTR [ebp+0x1c],ds
  406447:	hlt    
  406448:	sbb    ebx,DWORD PTR [edi+0x59]
  40644b:	sbb    BYTE PTR [ecx+0x9],ah
  40644e:	pop    ds
  40644f:	ds mov esp,0xc2193dde
  406455:	and    DWORD PTR [esp+ebp*2+0x47ae4076],0xffffffb7
  40645d:	in     eax,0x9a
  40645f:	mov    es,WORD PTR [edi-0x4b]
  406462:	pop    ss
  406463:	xor    edi,DWORD PTR [ebp-0x63a3c630]
  406469:	arpl   WORD PTR [edx+0x5f8ec7eb],dx
  40646f:	jl     0x406465
  406471:	pop    esi
  406472:	fild   DWORD PTR [eax-0x3a]
  406475:	mov    al,0xae
  406477:	xor    BYTE PTR [edi-0x7c],cl
  40647a:	rcl    BYTE PTR [ecx-0x15],0xf1
  40647e:	pop    ecx
  40647f:	jmp    0x4064dd
  406481:	jo     0x406415
  406483:	out    0x5d,eax
  406485:	pop    es
  406486:	ror    DWORD PTR [edi+0x51],cl
  406489:	popa   
  40648a:	or     BYTE PTR [ebx-0x48],al
  40648d:	pop    es
  40648e:	neg    BYTE PTR [ebx+0x33]
  406491:	lods   al,BYTE PTR ds:[esi]
  406492:	add    ebp,DWORD PTR [eax]
  406494:	popa   
  406495:	and    al,0xec
  406497:	gs jp  0x406495
  40649a:	mov    ds:0x56e6ced0,eax
  40649f:	dec    eax
  4064a0:	lods   eax,DWORD PTR ds:[esi]
  4064a1:	dec    ecx
  4064a2:	xor    eax,0xce9d68ba
  4064a7:	test   edi,ebx
  4064a9:	cld    
  4064aa:	lea    edi,[ecx+0x60]
  4064ad:	mov    bh,0x93
  4064af:	sub    DWORD PTR gs:[eax-0x48],eax
  4064b3:	icebp  
  4064b4:	aaa    
  4064b5:	ja     0x40649c
  4064b7:	dec    esi
  4064b8:	jge    0x40648d
  4064ba:	int    0x7f
  4064bc:	mov    al,ds:0x7bbfc0e9
  4064c1:	jp     0x4064b0
  4064c3:	ins    BYTE PTR es:[edi],dx
  4064c4:	pop    edx
  4064c5:	inc    edi
  4064c6:	in     eax,0x54
  4064c8:	adc    DWORD PTR [ecx],eax
  4064ca:	arpl   WORD PTR [ebp+0x19],dx
  4064cd:	jge    0x4064d9
  4064cf:	or     eax,DWORD PTR [esi+0xc46937b]
  4064d5:	push   esi
  4064d6:	and    ebx,DWORD PTR [edx*8+0x37c0b815]
  4064dd:	pop    ebp
  4064de:	sbb    DWORD PTR cs:[edi+ebp*8],eax
  4064e2:	les    ecx,FWORD PTR [eax]
  4064e4:	push   esp
  4064e5:	fcomp  QWORD PTR [eax-0x74]
  4064e8:	sub    BYTE PTR [eax],0xc5
  4064eb:	and    DWORD PTR [ecx],0xe156a74e
  4064f1:	daa    
  4064f2:	sbb    DWORD PTR [edx],edi
  4064f4:	dec    edx
  4064f5:	leave  
  4064f6:	ins    BYTE PTR es:[edi],dx
  4064f7:	fwait
  4064f8:	dec    esi
  4064f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064fa:	inc    esp
  4064fb:	aas    
  4064fc:	retf   
  4064fd:	imul   edx,DWORD PTR [eax],0xe8dfe423
  406503:	imul   edi,ebp,0xfffffff0
  406506:	(bad)  
  406507:	outs   dx,DWORD PTR ds:[esi]
  406508:	adc    BYTE PTR [edx],bl
  40650a:	loope  0x406545
  40650c:	jecxz  0x406576
  40650e:	pop    edx
  40650f:	std    
  406510:	xor    DWORD PTR [esi-0x20],0x58124761
  406517:	sbb    BYTE PTR [ebp+0x3a390234],dl
  40651d:	mov    edi,0x6322ff39
  406522:	mov    eax,ds:0x9919b82
  406527:	mov    WORD PTR [ecx],ds
  406529:	and    ecx,edi
  40652b:	sbb    bl,ch
  40652d:	dec    ebp
  40652e:	sub    dl,bl
  406530:	adc    bh,BYTE PTR ds:0x66cce4bf
  406536:	jecxz  0x4064c8
  406538:	cmc    
  406539:	push   0x886435ca
  40653e:	cwde   
  40653f:	mov    ecx,0x20407393
  406544:	push   ss
  406545:	adc    esp,eax
  406547:	and    DWORD PTR [ecx+0x425357b0],0x98708fa1
  406551:	dec    edx
  406552:	out    0x1a,al
  406554:	cmc    
  406555:	dec    edi
  406556:	inc    edx
  406557:	loop   0x4065ad
  406559:	ficom  WORD PTR [eax-0x56a61e7d]
  40655f:	mov    DWORD PTR [ecx+0x57512b84],ebp
  406565:	je     0x40657f
  406567:	fnstsw WORD PTR [ebx]
  406569:	es sbb al,0xd2
  40656c:	into   
  40656d:	aam    0x8b
  40656f:	xchg   ebx,eax
  406570:	lea    eax,[edi+0xf]
  406573:	or     dl,bh
  406575:	dec    ebp
  406576:	or     al,0xac
  406578:	loop   0x4065a9
  40657a:	adc    ecx,DWORD PTR [eax-0x1afb2e5a]
  406580:	ins    DWORD PTR es:[edi],dx
  406581:	(bad)  
  406582:	test   esi,0x48ad8f1f
  406588:	stos   BYTE PTR es:[edi],al
  406589:	dec    esi
  40658a:	(bad)  
  40658b:	mov    esi,0x23355b00
  406590:	test   eax,0xb03a4e54
  406595:	out    dx,al
  406596:	push   eax
  406597:	or     cl,BYTE PTR [ebx]
  406599:	je     0x4065ff
  40659b:	stc    
  40659c:	sub    DWORD PTR [edx-0x6b36920d],ecx
  4065a2:	clc    
  4065a3:	fdiv   QWORD PTR [esi+0x52c7fc93]
  4065a9:	push   ecx
  4065aa:	cmp    esi,DWORD PTR [ebp-0x33]
  4065ad:	jns    0x4065ad
  4065af:	es lahf 
  4065b1:	aas    
  4065b2:	mov    ch,0x65
  4065b4:	mov    dl,BYTE PTR [ebx-0xb]
  4065b7:	mov    eax,0x8d11150c
  4065bc:	call   0xae9d5033
  4065c1:	test   al,0x0
  4065c3:	and    DWORD PTR [edi+0x4e],edi
  4065c6:	into   
  4065c7:	sbb    al,0x4e
  4065c9:	adc    eax,0xadad0815
  4065ce:	pop    esi
  4065cf:	aad    0x13
  4065d1:	xor    eax,0x85eea4c3
  4065d6:	mov    ebp,0xb799c63c
  4065db:	push   edi
  4065dc:	sahf   
  4065dd:	call   0xfb4c3f24
  4065e2:	sbb    al,0x96
  4065e4:	push   edi
  4065e5:	adc    BYTE PTR [esi],cl
  4065e7:	fist   WORD PTR [edx-0x6adfbeb2]
  4065ed:	out    0x57,al
  4065ef:	scas   al,BYTE PTR es:[edi]
  4065f0:	sbb    ch,BYTE PTR [ebp+0x15fd22ab]
  4065f6:	fidiv  DWORD PTR [ecx+eax*2-0x34]
  4065fa:	mov    DWORD PTR [ebx],esi
  4065fc:	sbb    dl,BYTE PTR [ebx+0x4e]
  4065ff:	mov    cl,0xe4
  406601:	inc    eax
  406602:	imul   esp,esp,0xffffffe1
  406605:	or     eax,0x15bed859
  40660a:	loope  0x4065f7
  40660c:	test   edi,esp
  40660e:	mov    eax,0xc5ceb252
  406613:	das    
  406614:	es je  0x4065b1
  406617:	push   ebp
  406618:	arpl   WORD PTR [edx],si
  40661a:	pop    ebx
  40661b:	mov    dh,0x21
  40661d:	or     ah,BYTE PTR [edi+0x2c]
  406620:	iret   
  406621:	loop   0x406615
  406623:	scas   al,BYTE PTR es:[edi]
  406624:	mov    ecx,DWORD PTR [edi-0x53e00a75]
  40662a:	jmp    0x619ac9f5
  40662f:	xchg   ebp,eax
  406630:	jmp    0x5688:0xddd09cf2
  406637:	cmp    dl,BYTE PTR ss:[ebp-0xd390700]
  40663e:	fisub  DWORD PTR [edx+0x153037fe]
  406644:	mov    WORD PTR [edi+0x3],fs
  406647:	mov    dh,0xb6
  406649:	xchg   ebx,eax
  40664a:	popa   
  40664b:	mov    DWORD PTR [edx-0x1b7dd52a],ebx
  406651:	xlat   BYTE PTR ds:[ebx]
  406652:	daa    
  406653:	or     al,0x63
  406655:	xchg   ah,ch
  406657:	add    DWORD PTR [esi+0x1d],edi
  40665a:	pop    edx
  40665b:	rcr    BYTE PTR [esi-0x6307fb9b],0x18
  406662:	adc    BYTE PTR [ebx-0x3],al
  406665:	mov    ds:0x177e9f88,eax
  40666a:	jl     0x406698
  40666c:	adc    ebx,DWORD PTR ds:[edi]
  40666f:	fidivr DWORD PTR [esi+0x57]
  406672:	add    BYTE PTR [edx+0x57bc8050],ah
  406678:	ror    DWORD PTR [ebp-0x41518ea],0xe4
  40667f:	push   esi
  406680:	mov    esp,0x7140c6d0
  406685:	addr16 aaa 
  406687:	(bad)  
  406688:	jae    0x406647
  40668a:	test   al,0xb1
  40668c:	and    al,0xd7
  40668e:	out    0x75,al
  406690:	aam    0xdc
  406692:	jmp    0xdcb31cfb
  406697:	mov    ecx,DWORD PTR [ebx+0x157b7235]
  40669d:	jecxz  0x406716
  40669f:	mul    al
  4066a1:	fiadd  DWORD PTR [edx+0x7db7a20f]
  4066a7:	lea    ebx,[eax+eiz*2+0x19022c9a]
  4066ae:	adc    DWORD PTR [edx],ebp
  4066b0:	fld    TBYTE PTR [ebx+ecx*8]
  4066b3:	out    0x4,eax
  4066b5:	push   edi
  4066b6:	jg     0x406714
  4066b8:	inc    ecx
  4066b9:	and    eax,0xd2e5f2ad
  4066be:	mov    BYTE PTR [esi-0x7ad040a],bh
  4066c4:	(bad)  
  4066c5:	xchg   DWORD PTR es:[ebp+0x35c28fee],edi
  4066cc:	and    eax,0x582a24d1
  4066d1:	jne    0x4066e0
  4066d3:	stos   DWORD PTR es:[edi],eax
  4066d4:	jo     0x4066a3
  4066d6:	jbe    0x406744
  4066d8:	dec    edi
  4066d9:	dec    esi
  4066da:	xlat   BYTE PTR ds:[ebx]
  4066db:	cmp    al,0x86
  4066dd:	mov    ah,0x32
  4066df:	cmp    BYTE PTR [edx-0x50],bl
  4066e2:	xor    al,BYTE PTR [edx]
  4066e4:	adc    BYTE PTR [eax+edx*4-0x1],bh
  4066e8:	out    0x52,eax
  4066ea:	push   eax
  4066eb:	test   BYTE PTR [esi],cl
  4066ed:	test   DWORD PTR [ebx+edi*8],ecx
  4066f0:	sbb    DWORD PTR [esi+0x7f01d965],edx
  4066f6:	jle    0x406727
  4066f8:	hlt    
  4066f9:	and    edx,ebx
  4066fb:	mov    ah,dl
  4066fd:	sbb    edi,esi
  4066ff:	mov    ch,0x95
  406701:	loop   0x4066f0
  406703:	push   esp
  406704:	rol    esi,1
  406706:	jp     0x4066e5
  406708:	ss fcmovnu st,st(0)
  40670b:	mov    ebx,0x2b4e64fa
  406710:	je     0x406768
  406712:	adc    bh,BYTE PTR [eax+0x6a]
  406715:	push   0xffffff88
  406717:	inc    ebx
  406718:	sub    DWORD PTR [edx-0x21b6cb0a],0xb8f47de6
  406722:	adc    edi,DWORD PTR [eax+0x15484f22]
  406728:	mov    esi,es
  40672a:	xchg   ebp,eax
  40672b:	xlat   BYTE PTR ds:[ebx]
  40672c:	or     BYTE PTR [edx-0x8],ah
  40672f:	pop    ebp
  406730:	sbb    dh,BYTE PTR [edx+0x34a5c428]
  406736:	std    
  406737:	repnz inc eax
  406739:	mov    dh,0x3b
  40673b:	aad    0xee
  40673d:	inc    esi
  40673e:	mov    ecx,0xe65b84f3
  406743:	(bad)  
  406744:	das    
  406745:	pop    ebx
  406746:	(bad)  
  406748:	popa   
  406749:	ins    BYTE PTR es:[edi],dx
  40674a:	aas    
  40674b:	pusha  
  40674c:	std    
  40674d:	sahf   
  40674e:	fdiv   QWORD PTR [edx]
  406750:	mov    cl,0x21
  406752:	xchg   ebx,eax
  406753:	sahf   
  406754:	sub    bh,BYTE PTR [eax+edx*4-0x5a5e092e]
  40675b:	out    0xe,al
  40675d:	cli    
  40675e:	and    al,0x32
  406760:	mov    al,0xe3
  406762:	and    edi,edi
  406764:	pop    edx
  406765:	pop    esp
  406766:	mov    DWORD PTR [edi-0x13b236d],edi
  40676c:	inc    ebx
  40676d:	mov    ebp,0x7eddfcbb
  406772:	sbb    bh,BYTE PTR [ebp+0x23]
  406775:	(bad)  
  406776:	adc    BYTE PTR [ebx-0x5bb280d1],al
  40677c:	push   0x70
  40677e:	sub    al,BYTE PTR [edi-0x50bf5f94]
  406784:	sbb    al,BYTE PTR [edi+0x64881577]
  40678a:	ret    0xbcdf
  40678d:	mov    dl,0xdc
  40678f:	inc    esp
  406790:	push   edx
  406791:	dec    edx
  406792:	jecxz  0x406767
  406794:	loop   0x4067d5
  406796:	sub    BYTE PTR [edx+ebx*4-0x2e2c3ec2],bh
  40679d:	jg     0x4067b6
  40679f:	repnz dec edx
  4067a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a2:	pop    ebp
  4067a3:	add    al,0x5a
  4067a5:	dec    esp
  4067a6:	sahf   
  4067a7:	dec    edi
  4067a8:	inc    ebx
  4067a9:	call   0xa84d:0xfdfc6b89
  4067b0:	int3   
  4067b1:	push   esp
  4067b2:	stos   DWORD PTR es:[edi],eax
  4067b3:	cmp    DWORD PTR [edx+eax*8-0x26],edx
  4067b7:	xchg   ebp,eax
  4067b8:	and    al,0x33
  4067ba:	call   0x95a1:0x85c5a2a
  4067c1:	jbe    0x406794
  4067c3:	pop    ss
  4067c4:	jmp    0x29be:0x1ccab229
  4067cb:	push   ds
  4067cc:	mov    bl,al
  4067ce:	fdivrp st(3),st
  4067d0:	or     al,0x73
  4067d3:	or     al,0xb8
  4067d5:	mov    WORD PTR [edx],es
  4067d7:	push   ebp
  4067d8:	or     cl,BYTE PTR [ebx+eiz*1+0x74]
  4067dc:	mov    ch,0xda
  4067de:	add    DWORD PTR [esi+0x11],esi
  4067e1:	pop    es
  4067e2:	ds adc eax,0x7f4a0167
  4067e8:	mov    WORD PTR [edx-0x7e227b43],fs
  4067ee:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067f0:	jno    0x406863
  4067f2:	(bad)  
  4067f3:	mov    ah,0xab
  4067f5:	mov    ah,0xbb
  4067f7:	fistp  QWORD PTR [ebx+0x5e]
  4067fa:	cld    
  4067fb:	inc    edx
  4067fc:	xchg   esp,eax
  4067fd:	dec    esp
  4067fe:	aas    
  4067ff:	repz ja 0x4067e4
  406802:	push   esp
  406803:	dec    ecx
  406804:	cwde   
  406805:	scas   al,BYTE PTR es:[edi]
  406806:	and    esi,esp
  406808:	ins    BYTE PTR es:[edi],dx
  406809:	mov    esi,0x2687303a
  40680e:	and    edx,ecx
  406810:	inc    ecx
  406811:	aam    0xaf
  406813:	gs and al,0x4c
  406816:	cld    
  406817:	mov    ebx,0x9125c802
  40681c:	leave  
  40681d:	inc    edx
  40681e:	adc    ch,dh
  406820:	aaa    
  406821:	das    
  406822:	fcom   QWORD PTR [edx+0x24a41c5]
  406828:	outs   dx,BYTE PTR ds:[esi]
  406829:	aas    
  40682a:	or     BYTE PTR [ecx-0x42d47032],dl
  406830:	push   0x21eb92e2
  406835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406836:	pusha  
  406837:	xchg   edi,eax
  406838:	cmovg  esp,DWORD PTR [edx+0x2e47f8b6]
  40683f:	add    edx,edi
  406841:	lods   al,BYTE PTR ds:[esi]
  406842:	cmp    bl,ah
  406844:	bound  ecx,QWORD PTR [edx-0xb]
  406847:	repz adc al,0x98
  40684a:	lea    esi,[ecx+0x480b7697]
  406850:	sti    
  406851:	inc    ebx
  406852:	stc    
  406853:	pop    ebp
  406854:	dec    edx
  406855:	dec    edx
  406856:	es int 0x57
  406859:	mov    WORD PTR [edx*1-0x57d46020],ds
  406860:	jecxz  0x4067f9
  406862:	adc    eax,0xb029c9bf
  406867:	mov    edi,0x89e096af
  40686c:	sbb    edx,DWORD PTR [esi]
  40686e:	mov    bh,0xb9
  406871:	out    dx,eax
  406872:	cs (bad) 
  406874:	out    0x9,eax
  406876:	mov    ds:0x2f5193b1,al
  40687b:	dec    edi
  40687c:	adc    eax,esp
  40687e:	popf   
  40687f:	pop    esp
  406880:	retf   
  406881:	loopne 0x40686a
  406883:	or     bl,BYTE PTR [eax]
  406885:	(bad)  
  406886:	enter  0xbb86,0xf9
  40688a:	push   edx
  40688b:	pop    ds
  40688c:	clc    
  40688d:	fs in  al,0x4c
  406890:	dec    edx
  406891:	push   ebp
  406892:	jo     0x4068a6
  406894:	inc    edi
  406895:	test   eax,0x7eaa59a
  40689a:	xor    al,dh
  40689c:	in     eax,dx
  40689d:	pop    ebx
  40689e:	addr16 jns 0x40684f
  4068a1:	xchg   edi,esi
  4068a3:	xchg   si,ax
  4068a5:	aam    0x47
  4068a7:	add    BYTE PTR [edx],0xed
  4068aa:	xor    eax,0xc8da789d
  4068af:	sub    bh,ah
  4068b1:	mov    edi,0xab21a7de
  4068b6:	(bad)  
  4068b7:	dec    edx
  4068b8:	xchg   edi,eax
  4068b9:	cdq    
  4068ba:	xlat   BYTE PTR ds:[ebx]
  4068bb:	hlt    
  4068bc:	in     al,0x9
  4068be:	fistp  QWORD PTR [ecx-0x4c]
  4068c1:	push   ds
  4068c2:	push   ss
  4068c3:	lea    ebp,[ebx+eax*8-0x5e]
  4068c7:	add    al,0x7
  4068c9:	test   al,0xdd
  4068cb:	jbe    0x4068b4
  4068cd:	add    esp,0xffffffe3
  4068d0:	inc    ebx
  4068d1:	or     cl,dh
  4068d3:	in     eax,dx
  4068d4:	add    al,0x72
  4068d6:	dec    BYTE PTR [eax-0x6d2b31f3]
  4068dc:	push   esp
  4068dd:	add    al,bh
  4068df:	ss push ss
  4068e1:	jno    0x4068a7
  4068e3:	pop    edi
  4068e4:	ret    
  4068e5:	daa    
  4068e6:	jo     0x4068a1
  4068e8:	mov    ch,0x80
  4068ea:	push   ecx
  4068eb:	or     eax,0x23476f9b
  4068f0:	inc    edi
  4068f1:	cmp    eax,0xddf82b2c
  4068f6:	pop    ss
  4068f7:	imul   edx,eax,0x3f
  4068fa:	outs   dx,BYTE PTR ds:[esi]
  4068fb:	clc    
  4068fc:	dec    edx
  4068fd:	mov    cl,0xaa
  4068ff:	fldcw  WORD PTR [edi-0x414f82ff]
  406905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406906:	xchg   esi,eax
  406907:	fisttp WORD PTR [esp+ebx*2-0x573ea89a]
  40690e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690f:	jge    0x40689c
  406911:	setle  BYTE PTR [ebx-0x73]
  406915:	std    
  406916:	leave  
  406917:	(bad)  
  406918:	sti    
  406919:	dec    ebp
  40691a:	jmp    0x7b9e98
  40691f:	jns    0x406974
  406921:	jnp    0x4068b4
  406923:	fiadd  WORD PTR [ecx]
  406925:	ins    DWORD PTR es:[edi],dx
  406926:	leave  
  406927:	repnz outs dx,DWORD PTR ds:[esi]
  406929:	and    DWORD PTR [eax+0x408e0513],esp
  40692f:	scas   eax,DWORD PTR es:[edi]
  406930:	cmp    al,0xc1
  406932:	imul   esp,DWORD PTR [esi+0x12],0xe83085d9
  406939:	xchg   esp,eax
  40693a:	sbb    ecx,DWORD PTR [ebx+0x676a0948]
  406940:	fstp   DWORD PTR [ecx]
  406942:	iret   
  406943:	into   
  406944:	sahf   
  406945:	dec    ebx
  406946:	imul   edi,DWORD PTR [ecx-0x27],0x960b6967
  40694d:	mov    ecx,0x3011018d
  406952:	sbb    DWORD PTR [edi-0x41],0xe344da07
  406959:	push   esi
  40695a:	xchg   ebx,eax
  40695b:	xchg   ecx,ebx
  40695d:	nop
  40695e:	mov    cl,0x1d
  406960:	adc    ebx,ebx
  406962:	sub    BYTE PTR ds:0x571955ea,0xa7
  406969:	xor    eax,0xd6bd4a98
  40696e:	push   0xffffffdb
  406970:	lods   al,BYTE PTR ds:[esi]
  406971:	shl    eax,cl
  406973:	adc    eax,0x47cf48cd
  406978:	mov    eax,0x2b5a50f6
  40697d:	adc    bl,al
  40697f:	sbb    BYTE PTR [esp+edx*8+0x5d],0x85
  406984:	aaa    
  406985:	sbb    BYTE PTR [ebp-0x2c016ebf],dl
  40698b:	mul    BYTE PTR [edi+0x34]
  40698e:	adc    eax,0xfbe3bd5c
  406993:	or     eax,DWORD PTR [ebx-0x5c0d775c]
  406999:	and    ah,BYTE PTR [edi-0x5ed6f739]
  40699f:	retf   
  4069a0:	jmp    0xdce1:0x9d4866f2
  4069a7:	cli    
  4069a8:	bound  eax,QWORD PTR [edi-0x216bdca1]
  4069ae:	mov    ds,WORD PTR [edi+0x8]
  4069b1:	dec    edi
  4069b2:	dec    edi
  4069b3:	mov    al,0x92
  4069b5:	lods   eax,DWORD PTR ds:[esi]
  4069b6:	bound  eax,QWORD PTR [esi-0x4da3b24]
  4069bc:	mov    ecx,0x5857bc20
  4069c1:	jecxz  0x40695b
  4069c3:	clc    
  4069c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c5:	xchg   ebp,eax
  4069c6:	iret   
  4069c7:	shl    DWORD PTR [ebx+ebp*2],1
  4069ca:	mov    bh,0x35
  4069cc:	ins    BYTE PTR es:[edi],dx
  4069cd:	mov    ebx,0x4ac97111
  4069d2:	call   DWORD PTR [ebp-0x7a4617f5]
  4069d8:	repz popw ds
  4069db:	iret   
  4069dc:	jg     0x406a55
  4069de:	add    eax,0x2eee2e75
  4069e3:	retf   
  4069e4:	scas   al,BYTE PTR es:[edi]
  4069e5:	and    ch,dh
  4069e7:	aad    0xed
  4069e9:	lods   al,BYTE PTR ds:[esi]
  4069ea:	adc    eax,DWORD PTR [ebx]
  4069ec:	xchg   BYTE PTR [eax],bh
  4069ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ef:	(bad)  
  4069f0:	fdivr  QWORD PTR [ebx+0x28]
  4069f3:	push   ebx
  4069f4:	ret    0xde4
  4069f7:	dec    esi
  4069f8:	adc    edi,DWORD PTR [esi]
  4069fa:	call   edi
  4069fc:	and    BYTE PTR [ecx+0x7ee42176],0xb2
  406a03:	sar    BYTE PTR [ecx+0x6eb5a542],cl
  406a09:	add    edx,DWORD PTR [ecx]
  406a0b:	scas   eax,DWORD PTR es:[edi]
  406a0c:	pop    ecx
  406a0d:	sbb    al,BYTE PTR [ebp-0x251f4b9e]
  406a13:	sbb    BYTE PTR [edx+ebx*2],cl
  406a16:	pop    ebx
  406a17:	out    0xf5,al
  406a19:	sar    DWORD PTR [ebx-0x366268a6],1
  406a1f:	adc    ebx,DWORD PTR [ebp+0x782bcaaf]
  406a25:	adc    eax,0x6aef4f5e
  406a2a:	fsubrp st(4),st
  406a2c:	shl    DWORD PTR [eax],cl
  406a2e:	daa    
  406a2f:	fidiv  WORD PTR [ecx-0x7357299]
  406a35:	inc    ebp
  406a36:	mov    ds:0x6fa3b2ad,eax
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	adc    eax,0x72152990
  406a41:	sub    edx,esp
  406a43:	fistp  DWORD PTR [ebp+eiz*8-0x6b]
  406a47:	in     al,0xf5
  406a49:	rol    BYTE PTR [eax],0x92
  406a4c:	xlat   BYTE PTR ds:[ebx]
  406a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a4e:	aam    0x9c
  406a50:	adc    ecx,DWORD PTR [esi-0x21]
  406a53:	push   edx
  406a54:	(bad)  
  406a55:	mov    ebp,0x347e350f
  406a5a:	lods   eax,DWORD PTR ds:[esi]
  406a5b:	push   ecx
  406a5c:	xchg   edi,eax
  406a5d:	sub    ecx,edx
  406a5f:	and    DWORD PTR [esi-0x37],eax
  406a62:	mov    cl,0x41
  406a64:	mov    ebp,0xac4cbb91
  406a69:	dec    esp
  406a6a:	xor    al,0xac
  406a6c:	sbb    eax,0xc853b6d4
  406a71:	retf   
  406a72:	cmc    
  406a73:	lods   eax,DWORD PTR ds:[esi]
  406a74:	in     eax,dx
  406a75:	push   cs
  406a76:	(bad)  
  406a77:	xchg   ebx,eax
  406a78:	mov    cl,0xbd
  406a7a:	push   0xdbbd54f8
  406a7f:	xchg   BYTE PTR [eax],al
  406a81:	push   ebx
  406a82:	pop    ds
  406a83:	into   
  406a84:	jle    0x406a42
  406a86:	int3   
  406a87:	pusha  
  406a88:	in     eax,0x4b
  406a8a:	enter  0x40dd,0x7a
  406a8e:	push   ebp
  406a8f:	iret   
  406a90:	popf   
  406a91:	xor    eax,0xef404a8e
  406a96:	and    ah,BYTE PTR [eax-0x75]
  406a99:	cmp    eax,0x1c763e6a
  406a9e:	push   ecx
  406a9f:	ror    BYTE PTR [edi],1
  406aa1:	mov    WORD PTR [edx+ebx*1],cs
  406aa4:	icebp  
  406aa5:	fwait
  406aa6:	in     eax,0x3e
  406aa8:	bnd fs jge 0x406ae7
  406aac:	jne    0x406b11
  406aae:	add    eax,0x965f30b9
  406ab3:	popf   
  406ab4:	cmp    DWORD PTR [ebp+0x1c8ee26c],esi
  406aba:	xchg   edi,eax
  406abb:	test   ah,dh
  406abd:	add    eax,ecx
  406abf:	and    BYTE PTR [esi],bl
  406ac1:	popa   
  406ac2:	pop    es
  406ac3:	adc    bh,BYTE PTR [ecx]
  406ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac6:	mov    eax,ds:0x35e33b93
  406acb:	sub    eax,0xab5cff53
  406ad0:	aaa    
  406ad1:	push   esi
  406ad2:	imul   ecx,ebp,0xffffff85
  406ad5:	std    
  406ad6:	repz arpl di,bx
  406ad9:	push   edx
  406ada:	xor    eax,ebx
  406adc:	xor    DWORD PTR [eax-0x42b8bc06],0xffffffca
  406ae3:	mov    dh,0xfd
  406ae5:	div    DWORD PTR [ecx-0xa4c7cd4]
  406aeb:	jb     0x406aa7
  406aed:	cvtps2pi mm6,QWORD PTR [esi]
  406af0:	ret    
  406af1:	sbb    ebx,DWORD PTR [ebp+edi*2-0x48cf820a]
  406af8:	outs   dx,BYTE PTR ds:[esi]
  406af9:	shl    edx,1
  406afb:	fnstsw WORD PTR [esi]
  406afd:	or     al,0xa9
  406aff:	ins    DWORD PTR es:[edi],dx
  406b00:	sub    BYTE PTR [ecx],bl
  406b02:	pop    esp
  406b03:	cmc    
  406b04:	sbb    bl,ch
  406b06:	inc    eax
  406b07:	and    BYTE PTR [ecx],cl
  406b09:	adc    dh,BYTE PTR [edx-0x59092a8d]
  406b0f:	test   BYTE PTR [esi+0x3ff539b0],dl
  406b15:	inc    ecx
  406b16:	mov    al,ds:0xfdfb3de
  406b1b:	and    ebp,DWORD PTR [edi+0x5c2bb6cd]
  406b21:	pop    esp
  406b22:	fs mov edx,0x56f66772
  406b28:	mov    ebp,0x7da67218
  406b2d:	stc    
  406b2e:	push   ds
  406b2f:	mov    al,ds:0xc55c307f
  406b34:	mov    cl,0x64
  406b36:	dec    esp
  406b37:	js     0x406af9
  406b39:	sub    BYTE PTR [esi],ah
  406b3b:	jecxz  0x406ace
  406b3d:	adc    eax,0xb3bcbfba
  406b42:	dec    eax
  406b43:	in     al,dx
  406b44:	dec    ebp
  406b45:	pop    es
  406b46:	fisub  DWORD PTR [ecx]
  406b48:	cmp    DWORD PTR [ebx-0x1a],esp
  406b4b:	arpl   dx,bx
  406b4d:	jno    0x406b32
  406b4f:	lahf   
  406b50:	leave  
  406b51:	jp     0x406bcd
  406b53:	mov    eax,0xc83cc8a6
  406b58:	mov    esi,0x68917b2c
  406b5d:	mov    ebx,0x2d112755
  406b62:	cmp    BYTE PTR [ecx],0x67
  406b65:	repnz (bad) 
  406b67:	into   
  406b68:	fstp   TBYTE PTR [ecx-0x7]
  406b6b:	inc    edx
  406b6c:	std    
  406b6d:	enter  0x208a,0x8e
  406b71:	jg     0x406ba9
  406b73:	mov    dl,0x9c
  406b75:	in     al,dx
  406b76:	adc    al,0x49
  406b78:	ins    BYTE PTR es:[edi],dx
  406b79:	and    DWORD PTR [edi],0x6b
  406b7c:	test   al,0xa9
  406b7e:	scas   eax,DWORD PTR es:[edi]
  406b7f:	xlat   BYTE PTR ds:[ebx]
  406b80:	inc    edx
  406b81:	push   ebx
  406b82:	stc    
  406b83:	adc    ch,dl
  406b85:	pop    esi
  406b86:	or     BYTE PTR [eax],bh
  406b88:	jne    0x406bd2
  406b8a:	jmp    0x5394b42a
  406b8f:	retf   
  406b90:	and    DWORD PTR [ebx+edx*1+0x6a05d548],0x87a5c093
  406b9b:	sub    al,BYTE PTR [eax]
  406b9d:	daa    
  406b9e:	(bad)  
  406b9f:	cld    
  406ba0:	cmp    BYTE PTR [eax],0xd1
  406ba3:	into   
  406ba4:	mov    eax,ds:0x5a282a0a
  406ba9:	fwait
  406baa:	push   esi
  406bab:	dec    edx
  406bac:	sub    al,0x56
  406bae:	pop    ebp
  406baf:	cwde   
  406bb0:	cmp    BYTE PTR [edi],dh
  406bb2:	int3   
  406bb3:	dec    edi
  406bb4:	sbb    BYTE PTR [edx],bl
  406bb6:	in     eax,0x63
  406bb8:	add    DWORD PTR [eax],ebx
  406bba:	stos   DWORD PTR es:[edi],eax
  406bbb:	into   
  406bbc:	xchg   ecx,esi
  406bbe:	mov    edx,0x23cc44b9
  406bc3:	xor    edx,DWORD PTR [edi-0x638d52e5]
  406bc9:	loope  0x406bdf
  406bcb:	adc    BYTE PTR [eax-0x7b901bfc],0x72
  406bd2:	xchg   esi,eax
  406bd3:	pop    esi
  406bd4:	add    ebp,DWORD PTR ds:0x17ee3fc1
  406bda:	(bad)  
  406bdb:	jae    0x406c1c
  406bdd:	mov    bh,0x8a
  406bdf:	out    0x9a,eax
  406be1:	call   0xbae3fdc4
  406be6:	nop
  406be7:	scas   al,BYTE PTR es:[edi]
  406be8:	pusha  
  406be9:	fdivr  DWORD PTR [ebp-0x49acef25]
  406bef:	lds    edi,FWORD PTR cs:[ecx-0x1608752c]
  406bf6:	into   
  406bf7:	push   esi
  406bf8:	mov    ds:0x1cfbce22,eax
  406bfd:	xchg   BYTE PTR [ebp+0x55],bl
  406c00:	mov    bl,0xab
  406c02:	sbb    BYTE PTR [eax],bh
  406c04:	push   ecx
  406c05:	mov    WORD PTR [ebp-0x50],ds
  406c08:	scas   al,BYTE PTR es:[edi]
  406c09:	mov    ds:0x92d5e4c4,eax
  406c0e:	pop    edx
  406c0f:	clc    
  406c10:	cld    
  406c11:	add    BYTE PTR [edx+ebx*4],dl
  406c14:	mov    cl,0xc3
  406c16:	fisttp WORD PTR [ebp-0x1ad98a69]
  406c1c:	fld    QWORD PTR [esp+ecx*4-0x72]
  406c20:	mov    DWORD PTR [ebx+0x28614107],esp
  406c26:	ret    0x8c16
  406c29:	int    0x64
  406c2b:	inc    esp
  406c2c:	lods   al,BYTE PTR ds:[esi]
  406c2d:	push   edi
  406c2e:	pop    esp
  406c2f:	pushf  
  406c30:	push   ecx
  406c31:	pop    esp
  406c32:	rcr    BYTE PTR [esi+eiz*1],cl
  406c35:	mov    ebx,0x79be520
  406c3a:	mov    al,0x65
  406c3c:	rol    BYTE PTR [eax+0x2c],0xb5
  406c40:	adc    edi,DWORD PTR [esi-0x15]
  406c43:	fidivr DWORD PTR [eax-0x2a]
  406c46:	cmc    
  406c47:	ins    DWORD PTR es:[edi],dx
  406c48:	or     esp,DWORD PTR [ecx+0x6b]
  406c4b:	repz cmp eax,0xc8a43ec5
  406c51:	and    edx,esi
  406c53:	outs   dx,DWORD PTR ds:[esi]
  406c54:	adc    BYTE PTR [ebx],bh
  406c56:	aad    0xd1
  406c58:	pop    ecx
  406c59:	adc    al,0xa1
  406c5b:	stos   BYTE PTR es:[edi],al
  406c5c:	pop    es
  406c5d:	jg     0x406c4d
  406c5f:	aas    
  406c60:	rcr    BYTE PTR [ebp*4-0x4082c66],0xdd
  406c68:	cmc    
  406c69:	psubsw mm6,QWORD PTR [ebx+ebp*8-0x42]
  406c6e:	add    al,0xcc
  406c70:	rcr    DWORD PTR [eax-0x54a5fd00],cl
  406c76:	or     bh,BYTE PTR [ebx]
  406c78:	mov    BYTE PTR [edx+0x731e754f],bl
  406c7e:	adc    BYTE PTR [edx+0x37],bl
  406c81:	out    dx,eax
  406c82:	and    DWORD PTR [esi],0x62
  406c85:	push   ss
  406c86:	dec    esp
  406c87:	fdiv   QWORD PTR [ebx+0x7b]
  406c8a:	es jge 0x406c1a
  406c8d:	out    0x4f,eax
  406c8f:	pop    edi
  406c90:	dec    esi
  406c91:	mov    ds:0x40f827cc,eax
  406c96:	inc    ebp
  406c97:	fcom   DWORD PTR [ebp-0x6]
  406c9a:	mov    edi,ebx
  406c9c:	test   cl,0xc9
  406c9f:	(bad)  
  406ca0:	cmp    dh,ah
  406ca2:	adc    al,0xcb
  406ca4:	sub    eax,0x9d39f28f
  406ca9:	mov    bh,BYTE PTR [ebp+0x29]
  406cac:	enter  0x7a57,0xc6
  406cb0:	enter  0x2f71,0x28
  406cb4:	jno    0x406c43
  406cb6:	mov    ecx,0x20ec030
  406cbb:	daa    
  406cbc:	add    DWORD PTR [ecx+0x3d],0xffffff9a
  406cc0:	xor    BYTE PTR [esi-0x29],dh
  406cc3:	xor    al,BYTE PTR [ebx-0x5d]
  406cc6:	leave  
  406cc7:	imul   bl
  406cc9:	arpl   bx,sp
  406ccb:	ins    BYTE PTR es:[edi],dx
  406ccc:	pop    ebx
  406ccd:	mov    BYTE PTR [esi+0x19],ah
  406cd0:	xchg   DWORD PTR [ebx+0x3630c83],edi
  406cd6:	sub    dl,0xa5
  406cd9:	push   0xffffff8f
  406cdb:	sub    edx,DWORD PTR ds:0x2ab084b3
  406ce1:	sub    esi,ecx
  406ce3:	and    ebp,eax
  406ce5:	popf   
  406ce6:	push   esp
  406ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce8:	scas   al,BYTE PTR es:[edi]
  406ce9:	cmp    ch,BYTE PTR [esi-0x5a8318c5]
  406cef:	add    ch,al
  406cf1:	inc    ecx
  406cf2:	jp     0x406d6f
  406cf4:	pushf  
  406cf5:	xor    ebx,edx
  406cf7:	pop    ss
  406cf8:	xor    esp,DWORD PTR [ecx]
  406cfa:	stos   DWORD PTR es:[edi],eax
  406cfb:	sbb    BYTE PTR [esi+eax*1-0x4ad63253],0x90
  406d03:	lock (bad) 
  406d05:	daa    
  406d06:	jmp    0x17c7093
  406d0b:	xchg   ebx,eax
  406d0c:	mov    al,0x30
  406d0e:	lds    edx,FWORD PTR [edi+edi*1-0x75]
  406d12:	mov    al,0xba
  406d14:	rol    dl,cl
  406d16:	xchg   ebx,eax
  406d17:	pop    es
  406d18:	push   ss
  406d19:	retf   0x2106
  406d1c:	lods   al,BYTE PTR ds:[esi]
  406d1d:	mov    ebp,0x72f5b6d8
  406d22:	mov    dh,0x8b
  406d24:	int3   
  406d25:	outs   dx,DWORD PTR ds:[esi]
  406d26:	cmp    ebp,ebp
  406d28:	and    bh,BYTE PTR [eax+0x30]
  406d2b:	in     al,0x4e
  406d2d:	out    dx,eax
  406d2e:	enter  0x5fe2,0x3f
  406d32:	jo     0x406cf0
  406d34:	push   ebp
  406d35:	inc    eax
  406d36:	out    dx,al
  406d37:	or     esp,DWORD PTR [edx+0x6c]
  406d3a:	jnp    0x406d02
  406d3c:	outs   dx,DWORD PTR ds:[esi]
  406d3d:	inc    ebp
  406d3e:	pop    edx
  406d3f:	xchg   ebx,eax
  406d40:	add    eax,0xcb387473
  406d45:	stc    
  406d46:	xchg   DWORD PTR [ebp+0x3c],edx
  406d49:	sbb    ch,ah
  406d4b:	jle    0x406d09
  406d4d:	ins    DWORD PTR es:[edi],dx
  406d4e:	lock imul esi,DWORD PTR [ebx-0x43f56161],0xffffff85
  406d56:	jbe    0x406ce1
  406d58:	nop
  406d59:	ins    BYTE PTR es:[edi],dx
  406d5a:	pop    es
  406d5b:	xchg   DWORD PTR [esi+0x1f],esp
  406d5e:	in     eax,0xf1
  406d60:	or     eax,0xd80307ac
  406d65:	push   ss
  406d66:	and    BYTE PTR [esi],al
  406d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d69:	push   esp
  406d6a:	dec    ebp
  406d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d6c:	js     0x406d51
  406d6e:	pop    esi
  406d6f:	sub    al,bl
  406d71:	retf   
  406d72:	loopne 0x406d4c
  406d74:	add    bl,BYTE PTR [eax-0x2c]
  406d77:	and    al,0xa5
  406d79:	aad    0x9a
  406d7b:	into   
  406d7c:	icebp  
  406d7d:	cmp    al,0x45
  406d7f:	add    al,0x75
  406d81:	mov    edx,0xa7201301
  406d86:	mov    gs,WORD PTR [edi+0x21]
  406d89:	retf   
  406d8a:	out    0xe1,al
  406d8c:	cwde   
  406d8d:	in     al,0xd1
  406d8f:	imul   eax,edx,0xffffffca
  406d92:	dec    ebx
  406d93:	dec    ebp
  406d94:	lds    ecx,FWORD PTR [esi]
  406d96:	cmp    edi,DWORD PTR [esi+0x2601fb2b]
  406d9c:	mov    ds:0xe3e864d7,al
  406da1:	es test ch,cl
  406da4:	jmp    0x5867:0x7b339ba6
  406dab:	ror    BYTE PTR [ebx+0x24],1
  406dae:	mov    ah,0x68
  406db0:	sub    ebx,esp
  406db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db3:	sbb    ch,dh
  406db5:	outs   dx,DWORD PTR ds:[esi]
  406db6:	cmp    al,BYTE PTR [edi]
  406db8:	scas   al,BYTE PTR es:[edi]
  406db9:	into   
  406dba:	push   edx
  406dbb:	js     0x406dc8
  406dbd:	std    
  406dbe:	ja     0x406dfa
  406dc0:	xchg   DWORD PTR [edx+0x79],edi
  406dc3:	xor    edi,ecx
  406dc5:	fmul   DWORD PTR [esp+ebx*8]
  406dc8:	rcl    BYTE PTR [ecx],cl
  406dca:	inc    edi
  406dcb:	dec    esi
  406dcc:	jbe    0x406d98
  406dce:	xchg   ebx,eax
  406dcf:	in     al,0xdf
  406dd1:	sbb    BYTE PTR [esi+0x2b],ch
  406dd4:	test   al,0x3d
  406dd6:	shl    DWORD PTR [esi+0xf],cl
  406dd9:	xor    dh,BYTE PTR [edi]
  406ddb:	fisub  WORD PTR [esi]
  406ddd:	jle    0x406dcc
  406ddf:	gs or  al,0x9d
  406de2:	add    eax,0xc15194e6
  406de7:	sbb    BYTE PTR [edi],ch
  406de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dea:	xchg   edx,eax
  406deb:	jo     0x406e0d
  406ded:	hlt    
  406dee:	inc    esi
  406def:	jbe    0x406df0
  406df1:	xor    al,0xf7
  406df3:	loopne 0x406e3c
  406df5:	lods   al,BYTE PTR ds:[esi]
  406df6:	rol    DWORD PTR [esi+0x4a],1
  406df9:	loop   0x406e16
  406dfb:	jl     0x406e65
  406dfd:	or     esi,DWORD PTR ds:0xf0bf97d4
  406e03:	and    ch,bl
  406e05:	std    
  406e06:	mov    ds:0x570ff786,al
  406e0b:	cwde   
  406e0c:	mov    eax,0x4abae0b8
  406e11:	ret    
  406e12:	xchg   edx,eax
  406e13:	mov    edi,0x27783ac4
  406e18:	jecxz  0x406e29
  406e1a:	lea    ecx,[edi]
  406e1c:	dec    esp
  406e1d:	xor    eax,0xbe455c69
  406e22:	xchg   DWORD PTR [ecx],edx
  406e24:	iret   
  406e25:	push   edx
  406e26:	popf   
  406e27:	jle    0x406e01
  406e29:	jns    0x406dd5
  406e2b:	call   0x1c58:0x4d8dccbc
  406e32:	mov    edx,0x8a44a4d1
  406e37:	stos   BYTE PTR es:[edi],al
  406e38:	jge    0x406e76
  406e3a:	aas    
  406e3b:	daa    
  406e3c:	mov    ecx,0x7d3e947
  406e41:	aas    
  406e42:	dec    edi
  406e43:	jo     0x406e24
  406e45:	bound  esp,QWORD PTR [edx+0x58f95020]
  406e4b:	push   esi
  406e4c:	ins    BYTE PTR es:[edi],dx
  406e4d:	loope  0x406e53
  406e4f:	ins    BYTE PTR es:[edi],dx
  406e50:	and    edx,edx
  406e52:	jmp    0x78192c0b
  406e57:	imul   eax,DWORD PTR [eax+0x51],0xffdc9c76
  406e5e:	push   ecx
  406e5f:	fadd   st,st(2)
  406e61:	cmp    cl,BYTE PTR [edi]
  406e63:	jp     0x406eb2
  406e65:	push   0x2e
  406e67:	push   ebx
  406e68:	rdpmc  
  406e6a:	xor    edi,DWORD PTR [ebp+0x4c]
  406e6d:	push   esp
  406e6e:	fimul  WORD PTR [edi+0x52]
  406e71:	cdq    
  406e72:	cmp    esi,DWORD PTR [edi+0x22]
  406e75:	sub    ch,BYTE PTR [esi+0x51]
  406e78:	or     eax,0xd8e4d0b1
  406e7d:	and    esp,edx
  406e7f:	adc    bh,BYTE PTR [esi]
  406e81:	shl    BYTE PTR [ebx-0x44],1
  406e84:	ret    
  406e85:	push   ebp
  406e86:	out    0x91,eax
  406e88:	int3   
  406e89:	fstp   st(2)
  406e8b:	or     esi,ebp
  406e8d:	rol    DWORD PTR [edx],cl
  406e8f:	lds    ebx,FWORD PTR [eax+0x6]
  406e92:	(bad)  
  406e93:	mul    DWORD PTR [edx+0x16910a9]
  406e99:	inc    ecx
  406e9a:	stos   BYTE PTR es:[edi],al
  406e9b:	jg     0x406ee9
  406e9d:	mov    eax,ds:0x852649c4
  406ea2:	dec    edx
  406ea3:	xor    eax,esi
  406ea5:	ds push ds
  406ea7:	in     al,dx
  406ea8:	test   eax,0xa1651a46
  406ead:	sub    al,0x2c
  406eaf:	arpl   WORD PTR [esi-0x6a],dx
  406eb2:	lods   eax,DWORD PTR ds:[esi]
  406eb3:	adc    DWORD PTR [edx+0x39],ebx
  406eb6:	stc    
  406eb7:	lods   al,BYTE PTR ds:[esi]
  406eb8:	adc    BYTE PTR [esi+ecx*2-0x33ca7f95],0x1e
  406ec0:	jg     0x406e7f
  406ec2:	pop    esi
  406ec3:	(bad)  
  406ec4:	dec    ecx
  406ec5:	dec    edi
  406ec6:	es inc eax
  406ec8:	nop
  406ec9:	sub    eax,0xdd10acc4
  406ece:	dec    edx
  406ecf:	retf   0x4468
  406ed2:	sub    DWORD PTR [edi],ebx
  406ed4:	sbb    al,0x31
  406ed6:	jnp    0x406eb6
  406ed8:	jne    0x406eff
  406eda:	cwde   
  406edb:	jmp    0x66c0cfc3
  406ee0:	and    eax,0x95379f0b
  406ee5:	adc    edx,DWORD PTR [esi-0x3d0bd794]
  406eeb:	mov    esi,0x47df0129
  406ef0:	inc    ecx
  406ef1:	and    BYTE PTR [edi+0x2],al
  406ef4:	push   es
  406ef5:	addr16 dec edi
  406ef7:	dec    edx
  406ef8:	stos   DWORD PTR es:[edi],eax
  406ef9:	out    0x24,eax
  406efb:	jno    0x406ee4
  406efd:	cmp    bl,dl
  406eff:	xchg   ebp,eax
  406f00:	push   es
  406f01:	adc    al,0x74
  406f03:	leave  
  406f04:	mov    ebp,0x15dda5e7
  406f09:	test   BYTE PTR [edi+0x91a3b2b],ah
  406f0f:	sub    ebx,0x9b2adb9b
  406f15:	xchg   ecx,eax
  406f16:	adc    cl,BYTE PTR [esi+0x77d10b24]
  406f1c:	and    al,ah
  406f1e:	(bad)  
  406f1f:	sbb    eax,0xdef85019
  406f24:	sub    eax,0x7b77eb1b
  406f29:	push   esi
  406f2a:	iret   
  406f2b:	pushf  
  406f2c:	jle    0x406f93
  406f2e:	mov    eax,ds:0x676b20ef
  406f33:	bnd ja 0x406f05
  406f36:	fsubr  DWORD PTR [esi-0x73578ea0]
  406f3c:	mov    esi,0xdcf59932
  406f41:	xlat   BYTE PTR ds:[ebx]
  406f42:	push   ecx
  406f43:	push   ebx
  406f44:	inc    eax
  406f45:	loopne 0x406f44
  406f47:	pop    esp
  406f48:	sbb    DWORD PTR [esi+esi*1-0x60],esi
  406f4c:	cmp    BYTE PTR [edi-0x15],dl
  406f4f:	pop    esp
  406f50:	clc    
  406f51:	inc    edi
  406f52:	add    al,0xd4
  406f54:	cmp    DWORD PTR [eax-0x54],esp
  406f57:	stos   DWORD PTR es:[edi],eax
  406f58:	sbb    DWORD PTR [ebx],ebp
  406f5a:	pop    ebp
  406f5b:	inc    eax
  406f5c:	ret    0xc51d
  406f5f:	mov    ds:0x65f5381,al
  406f64:	push   esp
  406f65:	mov    ds:0xac799510,eax
  406f6a:	call   DWORD PTR [edi-0x1b]
  406f6d:	sbb    esi,DWORD PTR [edi-0x39]
  406f70:	adc    al,0x29
  406f72:	dec    edi
  406f73:	push   ss
  406f74:	call   0xdb7b:0x1721a0b0
  406f7b:	pop    ecx
  406f7c:	test   DWORD PTR [ebx],0x81086f5e
  406f82:	retf   
  406f83:	pop    eax
  406f84:	pop    edx
  406f85:	aaa    
  406f86:	test   BYTE PTR [esi-0x30993337],bh
  406f8c:	cwde   
  406f8d:	sbb    ah,BYTE PTR [ecx+0x78e8fb54]
  406f93:	imul   edx,ebp,0x73
  406f96:	sar    DWORD PTR [eax+0x674cb3da],1
  406f9c:	dec    ebx
  406f9d:	jns    0x406fee
  406f9f:	and    ecx,eax
  406fa1:	and    eax,0xb407b4ca
  406fa6:	jbe    0x406fb5
  406fa8:	imul   ebp,ebp,0x72758ed2
  406fae:	gs pop esp
  406fb0:	push   0xaee9cdd2
  406fb5:	dec    ecx
  406fb6:	push   ecx
  406fb7:	and    al,0xd4
  406fb9:	dec    ebx
  406fba:	or     BYTE PTR [esi],0x40
  406fbd:	daa    
  406fbe:	adc    al,0xcc
  406fc0:	fild   QWORD PTR [esp+ecx*2-0x5df5736b]
  406fc7:	ja     0x407048
  406fc9:	sbb    DWORD PTR [ebx],0xffffffc2
  406fcc:	pop    es
  406fcd:	cmp    DWORD PTR [edx-0x3c1af909],0x30
  406fd4:	popf   
  406fd5:	push   ecx
  406fd6:	retf   0x7864
  406fd9:	dec    eax
  406fda:	call   0xcafb:0x9a22ff59
  406fe1:	sbb    dl,BYTE PTR [ecx]
  406fe3:	pop    ecx
  406fe4:	lds    esp,FWORD PTR [ecx+ecx*4+0x4da28ff6]
  406feb:	mov    esi,0xd25b71dc
  406ff0:	mov    bl,0x23
  406ff2:	int    0xa2
  406ff4:	pop    edi
  406ff5:	mov    DWORD PTR [ecx],ebp
  406ff7:	jge    0x406f9f
  406ff9:	popf   
  406ffa:	cmc    
  406ffb:	aas    
  406ffc:	sub    eax,0x7b18b376
  407001:	ret    0x28da
  407004:	(bad)  
  407005:	hlt    
  407006:	inc    ebx
  407007:	sbb    DWORD PTR [esi-0x75f0f372],edx
  40700d:	sbb    bh,BYTE PTR [esi-0x4]
  407010:	dec    ebx
  407011:	push   cs
  407012:	adc    DWORD PTR [ecx],edx
  407014:	sbb    dh,dl
  407016:	int3   
  407017:	retf   0xdf7d
  40701a:	adc    DWORD PTR [ebx+0x1d],esp
  40701d:	sbb    DWORD PTR [ebx+0x43],0xd9998aa
  407024:	cmp    BYTE PTR [edi],dl
  407026:	or     cl,bh
  407028:	retf   0x9225
  40702b:	pop    ebx
  40702c:	ins    DWORD PTR es:[edi],dx
  40702d:	outs   dx,DWORD PTR ds:[esi]
  40702e:	sar    DWORD PTR [ebx-0x579ef5cc],1
  407034:	or     BYTE PTR [eax],dh
  407036:	gs ins BYTE PTR es:[edi],dx
  407038:	out    0x62,al
  40703a:	add    esp,DWORD PTR [edx+0x3391a3c7]
  407040:	fldenv [eax-0x50e1dd08]
  407046:	(bad)  
  407048:	pushf  
  407049:	pop    edx
  40704a:	push   ebx
  40704b:	or     BYTE PTR [ebx-0x645dba2d],ch
  407051:	lods   eax,DWORD PTR ds:[esi]
  407052:	aas    
  407053:	xor    ch,BYTE PTR [esi]
  407055:	out    0x3b,al
  407057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407058:	jno    0x40709d
  40705a:	add    DWORD PTR ds:0xa879f445,edi
  407060:	(bad)  
  407061:	(bad)  
  407062:	mov    eax,0x45c8f167
  407067:	ror    BYTE PTR [ebx+0x5c76aa4],1
  40706d:	push   ebx
  40706e:	stos   BYTE PTR es:[edi],al
  40706f:	pop    edx
  407070:	pcmpgtw mm4,QWORD PTR ss:[ecx]
  407074:	ins    DWORD PTR es:[edi],dx
  407075:	rcr    BYTE PTR [edi+0x23],1
  407078:	popa   
  407079:	daa    
  40707a:	sbb    DWORD PTR [eax+edi*4-0x74a41ecc],ebx
  407081:	xchg   edi,eax
  407082:	mov    DWORD PTR [ebx+0x42],edx
  407085:	sub    esi,esp
  407087:	std    
  407088:	int    0xf4
  40708a:	scas   al,BYTE PTR es:[edi]
  40708b:	(bad)  
  40708c:	sti    
  40708d:	(bad)  
  40708e:	cmp    BYTE PTR [ebx+0xc],0x99
  407092:	jmp    0x40708a
  407094:	cmp    BYTE PTR [esi],dl
  407096:	mov    WORD PTR [ebx+ecx*2],fs
  407099:	(bad)  
  40709a:	dec    ebp
  40709b:	dec    edx
  40709c:	scas   eax,DWORD PTR es:[edi]
  40709d:	ss adc ch,dl
  4070a0:	test   BYTE PTR ds:0xf0c631b,bl
  4070a6:	mov    ecx,0x8c6ff9cd
  4070ab:	dec    edx
  4070ac:	(bad)  
  4070ad:	stc    
  4070ae:	js     0x4070f2
  4070b0:	pusha  
  4070b1:	inc    ebp
  4070b2:	adc    al,0x5f
  4070b4:	cld    
  4070b5:	(bad)  
  4070b6:	fisub  DWORD PTR [ecx-0x2fcf5bd9]
  4070bc:	mov    edi,gs
  4070be:	aam    0x41
  4070c0:	inc    esp
  4070c1:	sti    
  4070c2:	cmp    BYTE PTR [edi],bh
  4070c4:	add    cl,BYTE PTR ds:0x9574c382
  4070ca:	adc    al,0x9f
  4070cc:	jo     0x4070c4
  4070ce:	aam    0xc6
  4070d0:	aam    0x54
  4070d2:	and    DWORD PTR [eax+edx*8-0x6ceada0],0xa3ac615b
  4070dd:	xor    esi,DWORD PTR [eiz*4+0x5297f6e8]
  4070e4:	jbe    0x407110
  4070e6:	out    0x22,al
  4070e8:	sti    
  4070e9:	xchg   BYTE PTR [ecx],dh
  4070eb:	in     al,dx
  4070ec:	inc    ebx
  4070ed:	or     BYTE PTR [edi+0x78],dh
  4070f0:	push   esp
  4070f1:	adc    eax,eax
  4070f3:	das    
  4070f4:	mov    ebx,0xb89ac156
  4070f9:	pusha  
  4070fa:	inc    ecx
  4070fb:	xor    BYTE PTR ds:0x77206846,0x71
  407102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407103:	out    dx,eax
  407104:	fnsave [esi+ebx*4+0x20e3a062]
  40710b:	add    cl,ch
  40710d:	xchg   ecx,eax
  40710e:	adc    al,0x70
  407110:	into   
  407111:	shl    DWORD PTR [eax-0x69],1
  407114:	and    edx,ebp
  407116:	ja     0x40709f
  407118:	mov    eax,ds:0x1e60fc13
  40711d:	lea    ebp,[ebp-0x29]
  407120:	ins    DWORD PTR es:[edi],dx
  407121:	ss out dx,eax
  407123:	push   cs
  407124:	bound  ebx,QWORD PTR [eax-0x7c]
  407127:	arpl   bp,bp
  407129:	sbb    edx,DWORD PTR [eax-0x25]
  40712c:	jno    0x407101
  40712e:	dec    esi
  40712f:	inc    edx
  407130:	adc    al,0x96
  407132:	cwde   
  407133:	gs inc edx
  407135:	push   es
  407136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407137:	pop    eax
  407138:	push   ecx
  407139:	test   DWORD PTR [esp+edx*8+0xee8bc],0x5aa621cd
  407144:	(bad)  
  407145:	push   ds
  407146:	jg     0x407123
  407148:	cdq    
  407149:	into   
  40714a:	adc    DWORD PTR [esi+0x4d],ecx
  40714d:	jbe    0x4070f3
  40714f:	pop    esi
  407150:	mov    ebx,0x4a014760
  407155:	jecxz  0x4070fb
  407157:	outs   dx,DWORD PTR ds:[esi]
  407158:	lods   eax,DWORD PTR ds:[esi]
  407159:	test   DWORD PTR ds:0x5ffbef67,edi
  40715f:	mov    cl,0x63
  407161:	mov    eax,ds:0xeb3bd0d
  407166:	fstp   st(0)
  407168:	dec    ecx
  407169:	cld    
  40716a:	xchg   edx,eax
  40716b:	dec    ebp
  40716c:	ficom  WORD PTR [ebx+0x286d8e36]
  407172:	dec    edx
  407173:	in     eax,dx
  407174:	jmp    0x407180
  407176:	lea    ebp,[esi-0x29e6fafd]
  40717c:	fwait
  40717d:	out    dx,al
  40717e:	pop    ecx
  40717f:	add    BYTE PTR [ecx],bh
  407181:	les    esi,FWORD PTR [ecx+0x62]
  407184:	popa   
  407185:	mov    es,WORD PTR [eax-0x7c]
  407188:	rcr    DWORD PTR [ecx],cl
  40718a:	cwde   
  40718b:	pop    ecx
  40718c:	(bad)  
  40718d:	call   0xa2f1:0xd2d297af
  407194:	gs aam 0x4f
  407197:	mov    ds:0xed278e15,al
  40719c:	fcmovnu st,st(0)
  40719e:	test   ebp,ebx
  4071a0:	mov    ds:0x4c3327ce,eax
  4071a5:	fild   WORD PTR [ebx]
  4071a7:	xchg   ebp,eax
  4071a8:	loopne 0x407218
  4071aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ab:	lods   al,BYTE PTR ds:[esi]
  4071ac:	rcl    cl,0xbf
  4071af:	jl     0x40716b
  4071b1:	pop    ss
  4071b2:	leave  
  4071b3:	leave  
  4071b4:	mov    ds:0x220ea669,al
  4071b9:	xchg   BYTE PTR [esi-0x6ac55cc8],bl
  4071bf:	jb     0x4071d5
  4071c1:	imul   ebx,DWORD PTR [ebx+0x5b17c3a4],0x75
  4071c8:	push   ebp
  4071c9:	lock add esi,edx
  4071cc:	ins    BYTE PTR es:[edi],dx
  4071cd:	mov    dh,0x41
  4071cf:	pop    ss
  4071d0:	sbb    eax,0x4bd4db4d
  4071d5:	bnd jmp 0x407229
  4071d8:	pop    ecx
  4071d9:	gs pop ebp
  4071db:	pop    ss
  4071dc:	and    al,0x44
  4071de:	xchg   ebx,eax
  4071df:	pop    ebp
  4071e0:	or     DWORD PTR [ecx+0x4c2baa0b],esp
  4071e6:	cmp    DWORD PTR [edi+0x13],esi
  4071e9:	push   0x5ce0887b
  4071ee:	or     cl,dh
  4071f0:	rcr    dh,1
  4071f2:	xchg   esi,eax
  4071f3:	jns    0x4071c1
  4071f5:	jne    0x4071bb
  4071f7:	pop    ebx
  4071f8:	mov    WORD PTR [ecx-0x7005a3da],es
  4071fe:	adc    ch,BYTE PTR [ecx+0x58dcf10f]
  407204:	pop    ebp
  407205:	mov    esp,0x923328e5
  40720a:	jle    0x4071bf
  40720c:	iret   
  40720d:	retf   
  40720e:	pop    ebp
  40720f:	xchg   ecx,eax
  407210:	pminsw mm5,QWORD PTR [eax]
  407213:	mov    DWORD PTR [ebp+0x53c5de5],edx
  407219:	mov    ecx,0xe6280442
  40721e:	call   0xf26a011b
  407223:	xlat   BYTE PTR ds:[ebx]
  407224:	pop    eax
  407225:	inc    esp
  407226:	jmp    0x4071f5
  407228:	jo     0x4071e5
  40722a:	sub    al,0xc2
  40722c:	and    BYTE PTR [ebx-0x1d242b47],ch
  407232:	enter  0x2a20,0xb2
  407236:	xor    bl,BYTE PTR [esp+ecx*1+0xe2031ea]
  40723d:	into   
  40723e:	lock dec esi
  407240:	and    DWORD PTR [eax+0x19],edx
  407243:	mov    eax,ds:0x1f912fe
  407248:	cmp    edi,DWORD PTR [ecx-0x4d2d70f0]
  40724e:	pop    es
  40724f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407250:	adc    DWORD PTR ds:0x4e512db9,esp
  407256:	inc    ebp
  407257:	and    eax,0x39c16d68
  40725c:	push   esi
  40725d:	ret    
  40725e:	and    al,0xa1
  407260:	cmc    
  407261:	mov    BYTE PTR es:[ebx+0x71],bl
  407265:	scas   al,BYTE PTR es:[edi]
  407266:	pusha  
  407267:	(bad)  
  407268:	adc    DWORD PTR [ecx+0x680c3f1a],eax
  40726e:	jno    0x407271
  407270:	cmp    eax,0xd252511d
  407275:	or     ah,BYTE PTR [esi-0x4b]
  407278:	jl     0x4072b6
  40727a:	out    dx,eax
  40727b:	ret    
  40727c:	push   esp
  40727d:	sti    
  40727e:	xor    al,0x43
  407280:	mov    eax,ds:0x27ea7166
  407285:	adc    dl,BYTE PTR [edx]
  407287:	test   al,0xe5
  407289:	call   0x946d202b
  40728e:	test   ecx,eax
  407290:	dec    ecx
  407291:	dec    esi
  407292:	ins    BYTE PTR es:[edi],dx
  407293:	jb     0x407253
  407295:	inc    ecx
  407296:	mov    ah,0x0
  407298:	mov    ch,0xf6
  40729a:	aas    
  40729b:	(bad)  
  40729c:	std    
  40729d:	(bad)  
  40729e:	test   eax,0x455dee
  4072a3:	aam    0x46
  4072a5:	xchg   DWORD PTR [esi-0x80],esp
  4072a8:	pop    ebx
  4072a9:	sbb    al,0xdd
  4072ab:	ja     0x407230
  4072ad:	retf   0xc7a8
  4072b0:	repnz (bad) 
  4072b3:	test   BYTE PTR [ecx+0x14e370a0],0xf2
  4072ba:	xchg   ebp,eax
  4072bb:	(bad)  [edx+0x4c9036fe]
  4072c1:	sbb    BYTE PTR [eax+0x17],cl
  4072c4:	xor    eax,0x1df65214
  4072c9:	inc    esi
  4072ca:	mov    ds:0xf1d652a2,eax
  4072cf:	dec    ebp
  4072d0:	cld    
  4072d1:	cmp    al,al
  4072d3:	xchg   edi,eax
  4072d4:	jecxz  0x4072d2
  4072d6:	pusha  
  4072d7:	jno    0x407347
  4072d9:	icebp  
  4072da:	mov    al,ds:0xbfc1c22c
  4072df:	retf   
  4072e0:	icebp  
  4072e1:	sub    al,0xf
  4072e3:	ins    BYTE PTR es:[edi],dx
  4072e4:	mov    bh,0xd2
  4072e6:	loopne 0x407328
  4072e8:	in     eax,dx
  4072e9:	arpl   WORD PTR [edx],ax
  4072eb:	add    BYTE PTR [edi+0x471f4987],bl
  4072f1:	hlt    
  4072f2:	mov    eax,0x2aaf1cf
  4072f7:	mov    dl,0xc4
  4072f9:	out    dx,al
  4072fa:	xchg   ebx,eax
  4072fb:	sub    BYTE PTR [esi*2+0x4f183cdb],al
  407302:	jle    0x4072a7
  407304:	fisub  DWORD PTR [esi+0x63761189]
  40730a:	and    BYTE PTR [esi+0x73cddb0],ch
  407310:	xor    ebx,DWORD PTR [edx-0x54]
  407313:	stc    
  407314:	daa    
  407315:	rol    BYTE PTR [eax+esi*8-0x756ab627],0xdf
  40731d:	imul   eax,DWORD PTR [ecx+esi*1-0x4e],0xffffff9f
  407322:	aad    0xb5
  407324:	pop    eax
  407325:	sbb    ecx,DWORD PTR [esi]
  407327:	fnstsw WORD PTR [eax]
  407329:	aam    0xd1
  40732b:	test   bh,cl
  40732d:	in     eax,0xac
  40732f:	push   edi
  407330:	add    BYTE PTR [esi+0x5a6e34ac],bl
  407336:	aam    0xef
  407338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407339:	mov    edi,esp
  40733b:	fild   DWORD PTR [eax+ebp*4+0xe]
  40733f:	cdq    
  407340:	and    eax,0x36d77c49
  407345:	mov    eax,0xdf961101
  40734a:	pop    ds
  40734b:	sar    BYTE PTR [edx-0x64493843],1
  407351:	stc    
  407352:	pop    ss
  407353:	pop    es
  407354:	cwde   
  407355:	mov    ebx,0x17365337
  40735a:	or     eax,0x84c969a2
  40735f:	sbb    BYTE PTR [ebx+ebx*4+0x24ac2ee9],ah
  407366:	xchg   edi,eax
  407367:	lds    ecx,FWORD PTR [ecx-0x79]
  40736a:	scas   al,BYTE PTR es:[edi]
  40736b:	push   ebx
  40736d:	pushf  
  40736e:	push   esp
  40736f:	adc    eax,0x7f15669d
  407374:	or     ch,BYTE PTR [ebx]
  407376:	push   eax
  407377:	hlt    
  407378:	jp     0x40736e
  40737a:	scas   eax,DWORD PTR es:[edi]
  40737b:	mov    ch,0x40
  40737d:	mov    esp,0xe0d32f95
  407382:	fdivr  DWORD PTR ss:[ebx+edx*4]
  407386:	xor    esi,DWORD PTR [ebp+0x56]
  407389:	mov    ch,0x72
  40738b:	shr    BYTE PTR [esi+edx*1-0x5bf1468a],1
  407392:	mul    DWORD PTR [ebx+0x1a96de0]
  407398:	dec    ecx
  407399:	xor    ecx,ebx
  40739b:	mov    ecx,0xd8e164e7
  4073a0:	mov    edx,0xce3470d3
  4073a5:	jmp    0x4073bf
  4073a7:	jecxz  0x40736e
  4073a9:	jmp    0x748e:0xfcd25d33
  4073b0:	cmp    bh,BYTE PTR [edx+0x33]
  4073b3:	cmp    DWORD PTR [ebx+0x6b0fd7fb],eax
  4073b9:	push   ebp
  4073ba:	xor    al,0x2
  4073bc:	js     0x4073c6
  4073be:	(bad)  
  4073bf:	icebp  
  4073c0:	jle    0x4073ac
  4073c2:	in     al,dx
  4073c3:	repz test eax,0xab3a5e12
  4073ca:	jmp    0x1041baf0
  4073cf:	lea    ecx,[esi]
  4073d1:	adc    bh,BYTE PTR [ecx-0x3c832056]
  4073d7:	in     al,dx
  4073d8:	jge    0x40742f
  4073da:	pop    ebp
  4073db:	retf   0x8b94
  4073de:	and    eax,0xdd0862c
  4073e3:	adc    al,0xf1
  4073e5:	punpckhbw mm1,QWORD PTR [ebx+0x7]
  4073e9:	sub    edi,edx
  4073eb:	cmp    eax,0xea4729f5
  4073f0:	pop    ss
  4073f1:	mov    ebp,0x2d995686
  4073f6:	jg     0x4073ca
  4073f8:	sar    BYTE PTR [edi-0x32],0xaf
  4073fc:	mov    dl,0x92
  4073fe:	clc    
  4073ff:	add    DWORD PTR [edx+0x2a],ebx
  407402:	sub    ebp,DWORD PTR [esi-0x7c]
  407405:	xchg   ebp,eax
  407406:	dec    ebx
  407407:	mov    al,0xf
  407409:	fwait
  40740a:	push   edx
  40740b:	fdiv   QWORD PTR [esi-0x63]
  40740e:	mov    al,ds:0x5de9a339
  407413:	scas   al,BYTE PTR es:[edi]
  407414:	iret   
  407415:	call   0x13b:0x637d5468
  40741c:	cmp    DWORD PTR [eax*2+0x767f4e13],esp
  407423:	(bad)  
  407424:	fcomp  DWORD PTR [eax+0x6adbfb70]
  40742a:	mov    dh,0xfe
  40742c:	std    
  40742d:	pop    ds
  40742e:	dec    eax
  40742f:	cwde   
  407430:	mov    ds:0xf0c66224,al
  407435:	xchg   BYTE PTR [eax+0x57],bh
  407438:	xchg   BYTE PTR [esi-0x68],bl
  40743b:	inc    ecx
  40743c:	jmp    0x16f0:0x55608399
  407443:	dec    ecx
  407444:	ins    BYTE PTR es:[edi],dx
  407445:	ins    DWORD PTR es:[edi],dx
  407446:	and    al,0xe5
  407448:	gs mov cl,0x93
  40744b:	jb     0x4073f7
  40744d:	sbb    BYTE PTR [ebx-0x1c],0xa2
  407451:	sbb    eax,0xd8bf2e52
  407456:	repnz and al,0x4e
  407459:	(bad)  
  40745a:	into   
  40745b:	xor    eax,0xd450bee7
  407460:	popf   
  407461:	dec    ebx
  407462:	das    
  407463:	pop    ds
  407464:	mov    al,ds:0x60129efe
  407469:	popa   
  40746a:	fmul   DWORD PTR [esi+eiz*2-0xf]
  40746e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40746f:	dec    edi
  407470:	or     ch,BYTE PTR [ecx+ecx*2-0x112e49ec]
  407477:	arpl   WORD PTR [ebx],cx
  407479:	test   BYTE PTR [edi-0x1a3d43ca],cl
  40747f:	adc    DWORD PTR [eax+0x3b],esp
  407482:	cmc    
  407483:	js     0x407483
  407485:	mov    cl,0xc3
  407487:	dec    ebx
  407488:	pop    es
  407489:	dec    edi
  40748a:	add    dh,BYTE PTR [ecx-0x1]
  40748d:	adc    ecx,DWORD PTR [esp+esi*2+0x52]
  407491:	cmp    eax,0xa0ce4ce4
  407496:	into   
  407497:	cdq    
  407498:	mov    al,ds:0x5ba56e82
  40749d:	ja     0x4074e2
  40749f:	lods   al,BYTE PTR ds:[esi]
  4074a0:	dec    esp
  4074a1:	jecxz  0x40748a
  4074a3:	aaa    
  4074a4:	sti    
  4074a5:	pop    ss
  4074a6:	bnd js 0x40751c
  4074a9:	(bad)  
  4074aa:	pop    ecx
  4074ab:	movd   mm6,ebp
  4074ae:	and    cl,bh
  4074b0:	outs   dx,DWORD PTR ds:[esi]
  4074b1:	sub    esp,esi
  4074b3:	test   BYTE PTR [ebx-0x27dea69],0x32
  4074ba:	ss es jmp 0xc1b:0xca19f9ae
  4074c3:	sbb    esp,DWORD PTR ds:0xcd19fa49
  4074c9:	jns    0x4074bf
  4074cb:	fstp   TBYTE PTR [esi-0x10]
  4074ce:	leave  
  4074cf:	jecxz  0x407529
  4074d1:	inc    ebx
  4074d2:	jmp    0x40754e
  4074d4:	aaa    
  4074d5:	pop    eax
  4074d6:	sahf   
  4074d7:	lock adc eax,0x6221fc57
  4074dd:	out    0x97,eax
  4074df:	ret    0xca2e
  4074e2:	bound  ebp,QWORD PTR [eax]
  4074e4:	stc    
  4074e5:	mov    bh,0x45
  4074e7:	sbb    eax,0x659d022f
  4074ec:	add    DWORD PTR [ebx-0x38],0x2deea41f
  4074f3:	or     bl,BYTE PTR [edx]
  4074f5:	jg     0x4074bc
  4074f7:	inc    ecx
  4074f8:	dec    ebp
  4074f9:	test   BYTE PTR [ecx],al
  4074fb:	cmp    eax,0xc0044e8a
  407500:	sahf   
  407501:	int3   
  407502:	and    DWORD PTR [ebx+ebx*8-0x58ace297],ebx
  407509:	mov    ebp,0x99b60ac
  40750e:	cld    
  40750f:	out    dx,al
  407510:	loop   0x40749d
  407512:	cmp    ah,BYTE PTR [ecx-0xcd5bbb4]
  407518:	jmp    0x4074db
  40751a:	sbb    bl,cl
  40751c:	adc    ecx,DWORD PTR [ecx+ebp*4+0x6acd0274]
  407523:	cld    
  407524:	push   ebp
  407525:	das    
  407526:	cli    
  407527:	(bad)  [esi]
  407529:	xchg   ebx,eax
  40752a:	test   al,0xe8
  40752c:	xor    DWORD PTR [esi-0x98b38a8],ebp
  407532:	imul   BYTE PTR [eax+0x7]
  407535:	call   0xf504eb14
  40753a:	sahf   
  40753b:	pop    eax
  40753c:	lods   eax,DWORD PTR ds:[esi]
  40753d:	sub    al,0xb4
  40753f:	sub    DWORD PTR [edi+0x77],eax
  407542:	pop    ecx
  407543:	hlt    
  407544:	jmp    0x407564
  407546:	mov    dh,0x38
  407548:	and    ebx,DWORD PTR [ebx+0x5be4d669]
  40754e:	mov    ds:0xe75c4290,eax
  407553:	cmp    ecx,DWORD PTR [eax]
  407555:	push   ds
  407556:	lahf   
  407557:	nop
  407558:	(bad)  
  407559:	in     eax,dx
  40755a:	cmp    ebx,DWORD PTR [edx+ebx*2-0x6a]
  40755e:	(bad)  
  40755f:	jo     0x4075b5
  407561:	mov    DWORD PTR [esi-0x6e425ebd],esp
  407567:	leave  
  407568:	clc    
  407569:	xchg   DWORD PTR [ebp-0x24b8b5d3],esi
  40756f:	inc    ecx
  407570:	xlat   BYTE PTR ds:[ebx]
  407571:	jmp    0x4075a1
  407573:	xchg   esi,eax
  407574:	sar    DWORD PTR [ebp-0x15],1
  407577:	mov    dl,0x97
  407579:	dec    esp
  40757a:	std    
  40757b:	push   es
  40757c:	pop    esp
  40757d:	add    al,0x25
  40757f:	and    al,0xa7
  407581:	push   esi
  407582:	(bad)  
  407583:	fwait
  407584:	outs   dx,DWORD PTR ds:[esi]
  407585:	and    DWORD PTR [esi-0x3f635270],esi
  40758b:	and    bh,bh
  40758d:	ret    
  40758e:	or     BYTE PTR [ecx+0x7eae2457],al
  407594:	inc    ebx
  407595:	arpl   WORD PTR [edx],cx
  407597:	add    al,0x67
  407599:	push   0xad3878f3
  40759e:	ret    0xcd5b
  4075a1:	mov    bl,0x36
  4075a3:	cmp    ebp,DWORD PTR [ebp-0x16]
  4075a6:	xchg   edi,eax
  4075a7:	das    
  4075a8:	out    dx,eax
  4075a9:	test   al,0x2c
  4075ab:	into   
  4075ac:	jne    0x407616
  4075ae:	rol    BYTE PTR [eax+0x5e],1
  4075b1:	mov    ebx,0xeb40612d
  4075b6:	mov    al,ds:0x88733441
  4075bb:	xchg   BYTE PTR [edi],dl
  4075bd:	jg     0x40760b
  4075bf:	xor    eax,0x289573e4
  4075c4:	in     al,0xb
  4075c6:	xchg   esp,eax
  4075c7:	rol    DWORD PTR [ecx],0xb0
  4075ca:	outs   dx,DWORD PTR ds:[esi]
  4075cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075cc:	inc    ecx
  4075cd:	xchg   di,ax
  4075cf:	(bad)  
  4075d1:	fs (bad) 
  4075d4:	pop    eax
  4075d5:	loop   0x407562
  4075d7:	mov    ecx,0x4615e8d7
  4075dc:	xchg   ecx,eax
  4075dd:	inc    esp
  4075de:	sub    al,0x2d
  4075e0:	xchg   ebx,eax
  4075e1:	out    dx,al
  4075e2:	out    dx,al
  4075e3:	push   ebx
  4075e4:	pop    ecx
  4075e5:	popf   
  4075e6:	out    dx,al
  4075e7:	inc    bh
  4075e9:	xchg   DWORD PTR [ebp-0x3],esi
  4075ec:	sbb    BYTE PTR [ebx-0x236f9603],ch
  4075f2:	sbb    bl,BYTE PTR [eax-0x659330b]
  4075f8:	sti    
  4075f9:	mov    WORD PTR [ebx-0x2b],gs
  4075fc:	scas   al,BYTE PTR es:[edi]
  4075fd:	cmp    eax,0xbfd0b49e
  407602:	and    edi,DWORD PTR [eax]
  407604:	aam    0xc7
  407606:	test   BYTE PTR [edi-0x5e],bl
  407609:	test   ebp,ebx
  40760b:	pop    ss
  40760c:	pop    es
  40760d:	and    eax,0x63c5586c
  407612:	je     0x407630
  407614:	or     DWORD PTR [ebx],ecx
  407616:	fnsave [ecx]
  407618:	stc    
  407619:	mov    ds:0xf9b6a111,al
  40761e:	mov    dh,BYTE PTR [esi+0x50]
  407621:	add    DWORD PTR [ebp-0x64],ecx
  407624:	sbb    BYTE PTR [edi+0x72],bl
  407627:	pop    ecx
  407628:	add    bl,BYTE PTR [edi+0xde4efdf]
  40762e:	inc    ebp
  40762f:	mov    dh,0xdb
  407631:	cmp    BYTE PTR [ecx],0x92
  407634:	enter  0x3f45,0xf7
  407638:	test   BYTE PTR [ecx],cl
  40763a:	fbstp  TBYTE PTR [ebx]
  40763c:	push   0x44
  40763e:	scas   eax,DWORD PTR es:[edi]
  40763f:	mul    DWORD PTR [ebx]
  407641:	imul   edi,DWORD PTR [eax],0x3d
  407644:	and    eax,0x9e075353
  407649:	mov    esp,0x527114d1
  40764e:	loopne 0x40764f
  407650:	xor    ebx,DWORD PTR [esi]
  407652:	imul   BYTE PTR [ebp-0x26]
  407655:	push   eax
  407656:	and    DWORD PTR ds:0x8a617b57,esp
  40765c:	push   eax
  40765d:	leave  
  40765e:	push   edx
  40765f:	mov    ebx,0x296fc08b
  407664:	js     0x407614
  407666:	jae    0x407651
  407668:	adc    BYTE PTR [bp+si-0x70],ch
  40766c:	out    0x4b,eax
  40766e:	mov    ds:0x98b56937,al
  407673:	(bad)  
  407674:	sti    
  407675:	mov    ebp,0x135f147f
  40767a:	cmp    DWORD PTR [edi+0x4d],ecx
  40767d:	mul    DWORD PTR [edi-0x47be515]
  407683:	packuswb mm7,QWORD PTR [edx+0x6b28ecc1]
  40768a:	and    eax,0x11274ee5
  40768f:	das    
  407690:	lea    esp,[ebx]
  407692:	xchg   ebx,eax
  407693:	cmp    al,0x2d
  407695:	mov    esi,0xd807cde5
  40769a:	clc    
  40769b:	fdivr  DWORD PTR [ecx]
  40769d:	adc    eax,DWORD PTR [edi+ebp*4+0x6c]
  4076a1:	pusha  
  4076a2:	dec    edi
  4076a3:	jp     0x40766f
  4076a5:	and    bl,0x1a
  4076a8:	scas   al,BYTE PTR es:[edi]
  4076a9:	inc    esp
  4076aa:	sti    
  4076ab:	cmp    bh,BYTE PTR [eax]
  4076ad:	inc    ebp
  4076ae:	mov    esp,0xc14960ee
  4076b3:	cmp    ecx,DWORD PTR [esp+ebp*2+0x62b3c3be]
  4076ba:	jge    0x40772f
  4076bc:	and    bl,BYTE PTR [ebx+0xa3fd950]
  4076c2:	fwait
  4076c3:	jle    0x407663
  4076c5:	popa   
  4076c6:	jg     0x407741
  4076c8:	outs   dx,BYTE PTR ds:[esi]
  4076c9:	pushf  
  4076ca:	or     edi,DWORD PTR [ecx-0x66c28059]
  4076d0:	imul   esp,DWORD PTR [esi],0x41
  4076d3:	hlt    
  4076d4:	ret    
  4076d5:	push   cs
  4076d6:	cmp    esp,DWORD PTR [edx]
  4076d8:	and    ecx,0x7c5dcede
  4076de:	push   ss
  4076df:	mov    ds:0x304cb493,al
  4076e4:	sub    BYTE PTR [eax-0x57aad232],bh
  4076ea:	jle    0x40767f
  4076ec:	bound  esp,QWORD PTR [edi]
  4076ee:	loopne 0x4076b2
  4076f0:	stos   DWORD PTR es:[edi],eax
  4076f1:	arpl   WORD PTR [ecx-0x18],cx
  4076f4:	retf   0xee7a
  4076f7:	pop    edx
  4076f8:	jnp    0x4076aa
  4076fa:	gs pop edx
  4076fc:	sbb    al,BYTE PTR [edi-0x15]
  4076ff:	arpl   WORD PTR [eax-0x3c06d9e2],si
  407705:	das    
  407706:	adc    DWORD PTR [eax-0xe0b1938],eax
  40770c:	and    dh,BYTE PTR ds:[ebx+0x1]
  407710:	cmp    ah,BYTE PTR [ebp+0x7d]
  407713:	sub    al,0x9f
  407715:	xor    eax,0x40d4e86d
  40771a:	adc    al,0xb3
  40771c:	out    0x8b,eax
  40771e:	xlat   BYTE PTR ds:[ebx]
  40771f:	xchg   ebx,eax
  407720:	je     0x407773
  407722:	mov    ds:0x5db278c0,eax
  407727:	rol    DWORD PTR [edi+0x28b13438],1
  40772d:	push   edi
  40772e:	jmp    0xd35d:0x598475bd
  407735:	lods   eax,DWORD PTR ds:[esi]
  407736:	and    dh,BYTE PTR [esi+0x4f]
  407739:	pop    esi
  40773a:	mov    al,0x9a
  40773c:	pushf  
  40773d:	adc    BYTE PTR [edi-0x701415fe],al
  407743:	sbb    esp,0xbfccf7fa
  407749:	xchg   edi,eax
  40774a:	mov    eax,ebx
  40774c:	dec    esp
  40774d:	neg    DWORD PTR [esi]
  40774f:	mov    ah,0xbf
  407751:	pop    ecx
  407752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407753:	lods   al,BYTE PTR ds:[esi]
  407754:	pop    edx
  407755:	cwde   
  407756:	push   ds
  407757:	sub    cl,ah
  407759:	push   ebx
  40775a:	test   BYTE PTR [edx],0xb6
  40775d:	add    BYTE PTR [ecx-0x2a38ea92],0xe8
  407764:	and    eax,0x8ea3f158
  407769:	lods   eax,DWORD PTR ds:[esi]
  40776a:	pop    edx
  40776b:	pop    ecx
  40776c:	ja     0x407743
  40776e:	mov    al,0xf1
  407770:	inc    esi
  407771:	stos   BYTE PTR es:[edi],al
  407772:	mov    WORD PTR [edx],ss
  407774:	mov    cl,0xe4
  407776:	out    dx,eax
  407777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407778:	push   ebp
  407779:	retf   0xba84
  40777c:	test   eax,0x4d50b320
  407781:	push   ss
  407782:	out    dx,al
  407783:	iret   
  407784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407785:	xlat   BYTE PTR ds:[ebx]
  407786:	mov    al,BYTE PTR [eax]
  407788:	xor    DWORD PTR [edi+edi*1],esi
  40778b:	ret    
  40778c:	sbb    eax,0xa803279e
  407791:	adc    bh,BYTE PTR [esi+ecx*4]
  407794:	sub    eax,0xc187200a
  407799:	fidivr WORD PTR [eax-0x3223b935]
  40779f:	(bad)  
  4077a0:	sbb    al,0x58
  4077a2:	bound  ebp,QWORD PTR ds:0x3de55159
  4077a8:	xor    al,0xf0
  4077aa:	ins    DWORD PTR es:[edi],dx
  4077ab:	push   0x19
  4077ad:	adc    al,BYTE PTR [eax+0x72]
  4077b0:	push   0x192a8f01
  4077b5:	mov    ch,0x7d
  4077b7:	pop    esp
  4077b8:	test   DWORD PTR [edx],esp
  4077ba:	scas   eax,DWORD PTR es:[edi]
  4077bb:	in     eax,dx
  4077bc:	xchg   BYTE PTR [edi+0x53],bh
  4077bf:	sub    BYTE PTR [edi+0x4b6a0268],bh
  4077c5:	dec    ebp
  4077c6:	retf   0xb11e
  4077c9:	int3   
  4077ca:	push   ebp
  4077cb:	fs mov ebp,0xc8f4b1c0
  4077d1:	loope  0x407785
  4077d3:	add    edx,DWORD PTR [ebx-0x73]
  4077d6:	popf   
  4077d7:	or     al,0xd6
  4077d9:	dec    eax
  4077da:	js     0x407771
  4077dc:	dec    ebp
  4077dd:	out    dx,eax
  4077de:	and    BYTE PTR [edx+0x1b],ch
  4077e1:	xchg   esi,eax
  4077e2:	bound  ebx,QWORD PTR ds:0x664d6ee5
  4077e8:	es xchg esp,eax
  4077ea:	fsubr  QWORD PTR [ebx-0x7b54e270]
  4077f0:	jecxz  0x40781d
  4077f2:	inc    esp
  4077f3:	xchg   BYTE PTR [edx-0xf6608f7],bl
  4077f9:	push   ebx
  4077fa:	rcr    bh,cl
  4077fc:	(bad)  
  4077fd:	cmp    al,0x59
  4077ff:	sub    BYTE PTR [ecx-0x12287bb4],0xf5
  407806:	aam    0xde
  407808:	sub    ebx,DWORD PTR [eax+eax*4]
  40780b:	sub    al,BYTE PTR [esi+0x6d]
  40780e:	leave  
  40780f:	icebp  
  407810:	mov    DWORD PTR [edx-0x1bb6fd54],edx
  407816:	jo     0x4077f0
  407818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407819:	ret    0xe305
  40781c:	clc    
  40781d:	loope  0x4077ba
  40781f:	in     eax,0x8
  407821:	sbb    ebx,esi
  407823:	and    DWORD PTR ds:0xd76e2a5d,0xf68a5d6
  40782d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40782e:	cmp    eax,DWORD PTR ds:0x135ecc46
  407834:	cmp    eax,0xa22b65d5
  407839:	mov    edx,0x7a3cd5
  40783e:	ret    
  40783f:	mov    al,0x3b
  407841:	cmc    
  407842:	add    edx,DWORD PTR [eax]
  407844:	icebp  
  407845:	push   ebp
  407846:	ds es mov edi,0xd29c8b63
  40784d:	add    eax,0x11f33f5b
  407852:	inc    edx
  407853:	test   DWORD PTR [ecx-0x2e],esi
  407856:	xchg   ebx,eax
  407857:	inc    edx
  407858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407859:	sahf   
  40785a:	push   ecx
  40785b:	sub    BYTE PTR [esp+ebp*4+0x2a3e9b98],bh
  407862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407863:	cmp    BYTE PTR [ebp-0x61],al
  407866:	sbb    eax,0xcf237db7
  40786b:	xor    eax,0x2360d2a7
  407870:	mov    dh,0x25
  407872:	pop    edi
  407873:	cmp    edi,DWORD PTR [edx]
  407875:	xchg   BYTE PTR [ebp+0x7a199ff0],dl
  40787b:	dec    ebp
  40787c:	int3   
  40787d:	inc    eax
  40787e:	enter  0x694f,0x3c
  407882:	out    dx,eax
  407883:	aam    0xc3
  407885:	iret   
  407886:	mov    ebx,0xe0ff8e53
  40788b:	dec    esp
  40788c:	cld    
  40788d:	imul   dl
  40788f:	sti    
  407890:	(bad)  
  407891:	ret    
  407892:	pop    ecx
  407893:	cld    
  407894:	popa   
  407895:	daa    
  407896:	stc    
  407897:	out    dx,al
  407898:	push   edi
  407899:	sub    BYTE PTR [esi+0xd],ch
  40789c:	nop
  40789d:	(bad)  
  40789e:	xchg   edx,eax
  40789f:	or     eax,0xff2b6264
  4078a4:	jg     0x4078b1
  4078a6:	stc    
  4078a7:	pop    eax
  4078a8:	imul   esp,DWORD PTR [eax+0x7a575997],0x21e457c9
  4078b2:	add    ah,BYTE PTR [eax-0x4a]
  4078b5:	mov    ds:0xcf1fa56a,al
  4078ba:	call   0xdf820bb4
  4078bf:	fld    st(3)
  4078c1:	fs sbb al,0x46
  4078c4:	(bad)  
  4078c5:	adc    eax,DWORD PTR [eax-0x16]
  4078c8:	sbb    BYTE PTR [esi+0x62dd1b11],0xfe
  4078cf:	je     0x407925
  4078d1:	push   edi
  4078d2:	sti    
  4078d3:	repnz adc ebp,DWORD PTR [ebx-0x25c78512]
  4078da:	ins    BYTE PTR es:[edi],dx
  4078db:	adc    al,0xb3
  4078dd:	ret    
  4078de:	popf   
  4078df:	push   edx
  4078e0:	inc    ecx
  4078e1:	xor    al,0xa4
  4078e3:	out    dx,al
  4078e4:	gs in  al,dx
  4078e6:	xchg   ah,bh
  4078e8:	push   es
  4078e9:	loope  0x407921
  4078eb:	xchg   esi,eax
  4078ec:	fnstsw WORD PTR [edi+0x27]
  4078ef:	lods   al,BYTE PTR ds:[esi]
  4078f0:	int3   
  4078f1:	dec    ebp
  4078f2:	mov    BYTE PTR [ecx-0x79],bl
  4078f5:	je     0x407974
  4078f7:	mov    es,ebp
  4078f9:	std    
  4078fa:	ins    DWORD PTR es:[edi],dx
  4078fb:	(bad)  
  4078fd:	jecxz  0x407970
  4078ff:	pop    esp
  407900:	inc    edi
  407901:	pop    ebp
  407902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407903:	sbb    eax,0x9f0b0ed9
  407908:	repz pop esp
  40790a:	jl     0x407987
  40790c:	cdq    
  40790d:	aad    0x58
  40790f:	xlat   BYTE PTR ds:[ebx]
  407910:	inc    eax
  407911:	add    esi,DWORD PTR [edx+ecx*4+0x54]
  407915:	xchg   ebx,eax
  407916:	xlat   BYTE PTR ds:[ebx]
  407917:	mov    cs,WORD PTR ds:0x37051ba3
  40791d:	push   esp
  40791e:	lea    ecx,[eax]
  407920:	cld    
  407921:	adc    dl,BYTE PTR [edx-0x55]
  407924:	push   esp
  407925:	sub    eax,0xd404afee
  40792a:	iret   
  40792b:	fmul   QWORD PTR [esi-0x1ca2014a]
  407931:	(bad)  
  407932:	call   0xcf8f:0x9b209285
  407939:	stos   BYTE PTR es:[edi],al
  40793a:	cdq    
  40793b:	lahf   
  40793c:	xor    al,0x4a
  40793e:	inc    edx
  40793f:	mov    esp,0x4d9c7cd9
  407944:	lods   eax,DWORD PTR ds:[si]
  407946:	mov    cl,0x29
  407948:	jb     0x407989
  40794a:	cmp    ecx,ebx
  40794c:	aad    0x21
  40794e:	(bad)  
  40794f:	addr16 xchg esi,eax
  407951:	lahf   
  407952:	sbb    al,0x23
  407954:	lahf   
  407955:	ins    DWORD PTR es:[edi],dx
  407956:	mov    esi,0x72de30ac
  40795b:	aas    
  40795c:	add    eax,0x8924eb5
  407961:	jns    0x407932
  407963:	inc    eax
  407964:	(bad)  
  407965:	jns    0x407934
  407967:	xchg   BYTE PTR [ebp-0xda817a9],al
  40796d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40796f:	scas   eax,DWORD PTR es:[edi]
  407970:	fld    DWORD PTR [esi-0x2c686977]
  407976:	jne    0x407984
  407978:	call   0x8bab01b8
  40797d:	setae  BYTE PTR [esi]
  407980:	mov    WORD PTR [eax+0x61640161],ss
  407986:	push   esi
  407987:	or     dh,ah
  407989:	arpl   WORD PTR [esp+ecx*2],sp
  40798c:	xor    DWORD PTR [ebp+0x10],0x3927804f
  407993:	mul    DWORD PTR [ebx]
  407995:	mov    edx,0xb1570244
  40799a:	retf   0x6ad
  40799d:	ret    0xe769
  4079a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a1:	xchg   edi,eax
  4079a2:	sbb    BYTE PTR [esi-0xc07e382],cl
  4079a8:	jns    0x407960
  4079aa:	jns    0x407971
  4079ac:	lds    eax,FWORD PTR [edi+0x479cb56]
  4079b2:	lds    edx,FWORD PTR ds:0x72a4715d
  4079b8:	jge    0x4079e9
  4079ba:	lds    ecx,FWORD PTR ds:0x4321c288
  4079c0:	imul   ebp,DWORD PTR [ebx],0xffffff97
  4079c3:	jg     0x4079bd
  4079c5:	lahf   
  4079c6:	sbb    eax,DWORD PTR [edi-0x66]
  4079c9:	jnp    0x407969
  4079cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cc:	gs mov cl,0xf4
  4079cf:	ds mov ebx,0xcba47fd1
  4079d5:	cli    
  4079d6:	pushf  
  4079d7:	adc    eax,0x63c13c24
  4079dc:	mov    eax,ds:0xfbc417a6
  4079e1:	or     cl,BYTE PTR [ebp+0x1d98a01e]
  4079e7:	fldenv [esi-0x2ae4de75]
  4079ed:	and    DWORD PTR [ebx+0x7a],ebp
  4079f0:	push   ebp
  4079f1:	pop    esp
  4079f2:	mov    ecx,0x709c1726
  4079f7:	jmp    0x2111:0x3786c4a
  4079fe:	repnz pop edx
  407a00:	push   ecx
  407a01:	ja     0x4079f7
  407a03:	pushf  
  407a04:	nop
  407a05:	rol    DWORD PTR [edi],0x6a
  407a08:	push   ebp
  407a09:	xor    eax,DWORD PTR [ecx-0x15]
  407a0c:	cmp    bl,BYTE PTR [eax]
  407a0e:	mov    dl,0xe
  407a10:	icebp  
  407a11:	push   ss
  407a12:	int    0x79
  407a14:	push   ds
  407a15:	sub    DWORD PTR [eax+0x71c365e],ecx
  407a1b:	sub    ch,BYTE PTR [ebp-0x242187f7]
  407a21:	in     eax,0x59
  407a23:	pop    es
  407a24:	and    eax,0x3543e515
  407a29:	mov    ds:0x21a6b4ed,eax
  407a2e:	js     0x407a11
  407a30:	jbe    0x407a15
  407a32:	sub    bl,dh
  407a34:	xchg   ebx,eax
  407a35:	stos   BYTE PTR es:[edi],al
  407a36:	push   ebx
  407a37:	std    
  407a38:	les    ebx,FWORD PTR [ebp+0x32]
  407a3b:	xchg   ebp,eax
  407a3c:	xchg   edi,eax
  407a3d:	xor    al,0xf4
  407a3f:	add    eax,0x29b85282
  407a44:	clc    
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xf31dde38
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	push   0x63346cde
  407b3a:	cdq    
  407b3b:	icebp  
  407b3c:	std    
  407b3d:	or     BYTE PTR [eax],0x21
  407b40:	push   ecx
  407b41:	jmp    0xa6e7:0xa75e7c02
  407b48:	xchg   ebp,eax
  407b49:	retf   0xdb17
  407b4c:	js     0x407bab
  407b4e:	xor    eax,0x33690d16
  407b53:	jge    0x407ba9
  407b55:	std    
  407b56:	mov    ch,bl
  407b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b59:	call   0x6aa5df7c
  407b5e:	pop    ebx
  407b5f:	sbb    BYTE PTR [edi],bl
  407b61:	cdq    
  407b62:	cmp    al,0xa8
  407b64:	ds pop edi
  407b66:	(bad)  
  407b68:	cmp    cl,BYTE PTR [eax]
  407b6a:	mov    ebp,0x24a561a4
  407b6f:	outs   dx,BYTE PTR ds:[esi]
  407b70:	push   esp
  407b71:	(bad)  
  407b72:	stc    
  407b73:	adc    bh,bh
  407b75:	push   0xdfc697d
  407b7a:	idiv   ebx
  407b7c:	xchg   ebp,eax
  407b7d:	(bad)  
  407b7e:	jbe    0x407b62
  407b80:	jmp    0x407b7f
  407b82:	push   ss
  407b83:	sti    
  407b84:	lods   al,BYTE PTR ds:[esi]
  407b85:	sub    ebp,DWORD PTR [edx]
  407b87:	dec    esi
  407b88:	or     DWORD PTR [eax-0x39],edx
  407b8b:	sar    DWORD PTR [eax],0xa0
  407b8e:	ds loope 0x407ba4
  407b91:	add    ebp,ebx
  407b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b94:	int    0x6b
  407b96:	in     al,dx
  407b97:	mov    ?,WORD PTR ds:0xc1602208
  407b9d:	jl     0x407b40
  407b9f:	xlat   BYTE PTR ds:[ebx]
  407ba0:	push   esp
  407ba1:	pop    ss
  407ba2:	int    0x56
  407ba4:	push   0x73142608
  407ba9:	cmp    al,0x97
  407bab:	popaw  
  407bad:	inc    ecx
  407bae:	fisub  DWORD PTR [eax+ecx*1+0x1f]
  407bb2:	and    BYTE PTR [ebx],dl
  407bb4:	dec    edi
  407bb5:	test   BYTE PTR [esi+0x45d13b47],bl
  407bbb:	push   ecx
  407bbc:	out    dx,al
  407bbd:	sbb    ah,BYTE PTR [ebx+0x1f139d56]
  407bc3:	mov    eax,DWORD PTR ds:0xc7fdc474
  407bc9:	cmp    dh,BYTE PTR [edi]
  407bcb:	pusha  
  407bcc:	ret    
  407bcd:	mov    dl,0xcc
  407bcf:	mov    ds:0xfdb376e0,al
  407bd4:	push   0x6bb87f58
  407bd9:	aam    0x8f
  407bdb:	dec    esi
  407bdc:	ds and ecx,eax
  407bdf:	dec    edx
  407be0:	in     eax,dx
  407be1:	not    BYTE PTR [edx+edx*1]
  407be4:	shl    esp,1
  407be6:	xchg   BYTE PTR [ebp-0x1f],bl
  407be9:	and    DWORD PTR [ecx+0x5b548e8e],ebx
  407bef:	cmp    BYTE PTR [ecx+0x7b],bh
  407bf2:	xchg   ecx,eax
  407bf3:	jno    0x407be0
  407bf5:	(bad)  
  407bf6:	push   ebx
  407bf7:	inc    ebp
  407bf8:	into   
  407bf9:	(bad)  
  407bfa:	call   0x11b5:0xe7f6dde3
  407c01:	push   ebx
  407c02:	pop    edi
  407c03:	mov    bh,0xee
  407c05:	jle    0x407c3f
  407c07:	jmp    0xa4aa:0xd7f37f76
  407c0e:	pop    ss
  407c0f:	(bad)  
  407c10:	cmp    DWORD PTR [edx+0x77cdee91],eax
  407c16:	xchg   ebp,eax
  407c17:	sbb    al,BYTE PTR [ecx+0x43267471]
  407c1d:	dec    ecx
  407c1e:	push   ebx
  407c1f:	push   ebx
  407c20:	jmp    0x4ba:0x786277de
  407c27:	(bad)  
  407c28:	div    BYTE PTR [edx-0x754cf9b3]
  407c2e:	popa   
  407c2f:	pop    ebx
  407c30:	or     al,0xb
  407c32:	fucomi st,st(4)
  407c34:	add    ecx,DWORD PTR [ecx]
  407c36:	adc    DWORD PTR ds:[eax-0x4e],ebp
  407c3a:	mov    cl,0x7c
  407c3c:	jp     0x407c89
  407c3e:	push   edi
  407c3f:	xchg   DWORD PTR [ecx+0xab4aac8],ebp
  407c45:	mov    BYTE PTR [ebp+0x20],dh
  407c48:	mov    al,0xfe
  407c4a:	push   ecx
  407c4b:	fld    TBYTE PTR [ebp+0x6cf19268]
  407c51:	mov    edx,0x9b922536
  407c56:	sub    DWORD PTR [eax+0x2a481090],ebx
  407c5c:	les    ecx,FWORD PTR [edi-0x7a2074da]
  407c62:	jae    0x407be4
  407c64:	cdq    
  407c65:	push   ebp
  407c66:	mov    eax,0xc977db2f
  407c6b:	lds    eax,FWORD PTR [ebp-0x24960916]
  407c71:	push   eax
  407c72:	hlt    
  407c73:	fldenv [esi]
  407c75:	aad    0xdb
  407c77:	cwde   
  407c78:	daa    
  407c79:	or     eax,0x9a1992d7
  407c7e:	mov    bl,0x5e
  407c80:	test   BYTE PTR [ebp-0x69],bl
  407c83:	(bad)  
  407c84:	and    ah,BYTE PTR [ebx-0x4]
  407c87:	and    ch,BYTE PTR [edi+esi*4]
  407c8a:	aad    0x1a
  407c8c:	dec    edx
  407c8d:	nop
  407c8e:	test   eax,0x9b82c7f
  407c93:	gs push 0x164f4d6
  407c99:	mov    ch,BYTE PTR [edi-0x3b48cdf6]
  407c9f:	mov    ecx,0x1a290508
  407ca4:	or     esi,DWORD PTR [edx-0x3f]
  407ca7:	pop    esi
  407ca8:	jle    0x407cc6
  407caa:	test   al,0x44
  407cac:	jno    0x407c40
  407cae:	mov    bh,BYTE PTR [eax]
  407cb0:	cld    
  407cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb2:	inc    eax
  407cb3:	xor    al,0x15
  407cb5:	retf   
  407cb6:	sub    BYTE PTR [edi],ch
  407cb8:	(bad)  
  407cb9:	sbb    al,0x79
  407cbb:	data16 cmc 
  407cbd:	scas   eax,DWORD PTR es:[edi]
  407cbe:	mov    dh,0xaa
  407cc0:	jno    0x407d3d
  407cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc3:	sub    BYTE PTR [ebp-0x66],al
  407cc6:	iret   
  407cc7:	stc    
  407cc8:	or     eax,0x138fb34d
  407ccd:	out    dx,al
  407cce:	push   ecx
  407ccf:	adc    DWORD PTR [esi-0x7f],0xb355fa63
  407cd6:	shl    DWORD PTR [ecx+0x62],0x4a
  407cda:	jmp    0xe79b:0x88da40a
  407ce1:	mov    ss,ebp
  407ce3:	leave  
  407ce4:	adc    ebx,DWORD PTR [edi-0x390e6f53]
  407cea:	div    DWORD PTR [ecx]
  407cec:	outs   dx,BYTE PTR ds:[esi]
  407ced:	mov    al,0x1c
  407cef:	sbb    al,0xb6
  407cf1:	or     edi,DWORD PTR [edi+0x370c0fe0]
  407cf7:	dec    ecx
  407cf8:	test   al,0x17
  407cfa:	std    
  407cfb:	jge    0x407cb9
  407cfd:	call   0x1b2baf5
  407d02:	sbb    eax,0x1010f183
  407d07:	and    ch,BYTE PTR [esi+0x725a2feb]
  407d0d:	fwait
  407d0e:	stos   DWORD PTR es:[edi],eax
  407d0f:	nop
  407d10:	aas    
  407d11:	(bad)  
  407d12:	popa   
  407d13:	dec    eax
  407d14:	aad    0x96
  407d16:	mov    al,ds:0xa9545f5a
  407d1b:	in     al,dx
  407d1c:	(bad)  
  407d1d:	cdq    
  407d1e:	mov    WORD PTR [ebp-0x6a357132],gs
  407d24:	push   esp
  407d25:	out    dx,al
  407d26:	pop    es
  407d27:	inc    ecx
  407d28:	fnstsw WORD PTR [edx+0x3dd5a4b3]
  407d2e:	pop    edi
  407d2f:	xchg   ebx,eax
  407d30:	jmp    0xc5feb17c
  407d35:	xchg   edx,eax
  407d36:	jmp    0x729a8656
  407d3b:	fadd   st(1),st
  407d3d:	inc    ebp
  407d3e:	js     0x407cfd
  407d40:	out    dx,al
  407d41:	add    BYTE PTR [esi+0x21dfddfc],0x55
  407d48:	ds jo  0x407d9c
  407d4b:	hlt    
  407d4c:	mov    eax,0xecad4845
  407d51:	retf   0x3039
  407d54:	cmp    BYTE PTR [ebp-0x60],ch
  407d57:	dec    esp
  407d58:	sub    cl,BYTE PTR [edi]
  407d5a:	es in  al,dx
  407d5c:	repnz xor dl,dh
  407d5f:	inc    eax
  407d60:	sub    al,BYTE PTR [eax+esi*4+0x12]
  407d64:	aam    0x17
  407d66:	rcr    esi,1
  407d68:	or     bl,cl
  407d6a:	imul   eax,DWORD PTR [esi+0x68],0xa4b40b8a
  407d71:	or     edx,DWORD PTR [esi+0x7f386303]
  407d77:	jmp    0x407de7
  407d79:	mov    esp,0xdda4dc2f
  407d7e:	jp     0x407d60
  407d80:	mov    bl,0xd4
  407d82:	or     al,0x80
  407d84:	sahf   
  407d85:	push   eax
  407d86:	in     al,0xc4
  407d88:	inc    eax
  407d89:	xchg   esi,eax
  407d8a:	ins    BYTE PTR es:[edi],dx
  407d8b:	mov    cl,0x80
  407d8d:	adc    ch,bh
  407d8f:	xor    ecx,DWORD PTR [eax+ecx*8+0x9]
  407d93:	mov    dl,0x79
  407d95:	add    edx,DWORD PTR [ebp+0x6f127534]
  407d9b:	imul   esp,esp,0x60
  407d9e:	repz in eax,0xc7
  407da1:	arpl   WORD PTR [ebx+0x4ff5c4e7],di
  407da7:	jp     0x407d2c
  407da9:	mov    ch,0xbe
  407dab:	pop    ebx
  407dac:	in     eax,0x2d
  407dae:	stos   DWORD PTR es:[edi],eax
  407daf:	pushf  
  407db0:	mov    dh,0xd2
  407db2:	cmp    al,0xa
  407db4:	xchg   ecx,eax
  407db5:	icebp  
  407db6:	jnp    0x407e2d
  407db8:	mov    cl,0x65
  407dba:	fadd   st(5),st
  407dbc:	(bad)  
  407dbd:	sbb    al,0xcb
  407dbf:	scas   eax,DWORD PTR es:[edi]
  407dc0:	mov    ah,0xd9
  407dc2:	add    esp,DWORD PTR ss:[ebp+0x74]
  407dc6:	adc    eax,0xc6d4a7ea
  407dcb:	call   0xf13d:0x69faab87
  407dd2:	pop    esp
  407dd3:	out    dx,al
  407dd4:	jecxz  0x407da1
  407dd6:	hlt    
  407dd7:	jo     0x407e47
  407dd9:	lea    eax,[esi-0x1d]
  407ddc:	ret    0x9373
  407ddf:	adc    BYTE PTR [eax+0x79],al
  407de2:	push   ecx
  407de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de4:	mov    ebx,DWORD PTR [ebp+0x7fc2cbbf]
  407dea:	push   esp
  407deb:	out    0xc9,eax
  407ded:	mov    DWORD PTR [edi+ebx*4-0x41d75e04],eax
  407df4:	dec    eax
  407df5:	or     eax,DWORD PTR [edi+0x44e07410]
  407dfb:	xchg   edx,eax
  407dfc:	dec    ebx
  407dfd:	cmp    eax,0xf81ccbbd
  407e02:	jb     0x407e0e
  407e04:	out    dx,al
  407e05:	add    DWORD PTR ds:0xea146421,ebx
  407e0b:	sahf   
  407e0c:	dec    ecx
  407e0d:	lock add dl,dl
  407e10:	or     bh,BYTE PTR [edx+0x1990f62]
  407e16:	(bad)  
  407e17:	and    ecx,ebp
  407e19:	lock jmp 0x94fffa73
  407e1f:	add    BYTE PTR [edi-0x7],ah
  407e22:	aaa    
  407e23:	push   es
  407e24:	jmp    0x2deb:0xfd1d136d
  407e2b:	cmp    ah,bh
  407e2d:	lock lods eax,DWORD PTR ds:[esi]
  407e2f:	jmp    0x3a65f043
  407e34:	div    dh
  407e36:	mov    ecx,0xdffc08b9
  407e3b:	cs ffree st(5)
  407e3e:	lods   al,BYTE PTR ds:[esi]
  407e3f:	js     0x407dfa
  407e41:	or     BYTE PTR [ecx],dl
  407e43:	jl     0x407e36
  407e45:	neg    DWORD PTR [ebx-0x6f]
  407e48:	sub    BYTE PTR [ebx-0x80],0x37
  407e4c:	push   0xffffff9e
  407e4e:	jb     0x407e9e
  407e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e51:	and    al,0x69
  407e53:	sbb    al,0xab
  407e55:	push   ecx
  407e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e57:	aas    
  407e58:	stos   DWORD PTR es:[edi],eax
  407e59:	sub    cl,BYTE PTR [eax+esi*8]
  407e5c:	imul   ebp,ecx,0x11db606a
  407e62:	aad    0x75
  407e64:	pop    ss
  407e65:	add    eax,0x86c4cce0
  407e6a:	push   0x5b
  407e6c:	adc    eax,0xb93b9a65
  407e71:	pushf  
  407e72:	cli    
  407e73:	cmp    eax,0xc709ba8f
  407e78:	fmul   DWORD PTR [ebx+0x10]
  407e7b:	pop    edi
  407e7c:	stos   BYTE PTR es:[edi],al
  407e7d:	xor    eax,0x25e16736
  407e82:	inc    edx
  407e83:	(bad)  
  407e84:	and    eax,DWORD PTR [edi+ebx*4+0x68]
  407e88:	ret    
  407e89:	inc    ebp
  407e8a:	outs   dx,BYTE PTR ds:[esi]
  407e8b:	push   0xfa6f1688
  407e90:	addr16 fs jmp 0x7fb3faee
  407e97:	int    0xba
  407e99:	hlt    
  407e9a:	xchg   ecx,eax
  407e9b:	pop    edi
  407e9c:	pop    edx
  407e9d:	in     al,dx
  407e9e:	les    esi,FWORD PTR [eax]
  407ea0:	lods   eax,DWORD PTR ds:[esi]
  407ea1:	(bad)  
  407ea3:	xor    ebx,esp
  407ea5:	cmp    DWORD PTR [edi+0x1bff8d4a],ecx
  407eab:	jns    0x407eba
  407ead:	dec    esi
  407eae:	aad    0xcf
  407eb0:	xchg   ebp,eax
  407eb1:	in     al,0x24
  407eb3:	adc    ebp,DWORD PTR [ebx]
  407eb5:	mov    ds,WORD PTR [ebp-0x77cdeb9]
  407ebb:	clc    
  407ebc:	sub    al,0xb5
  407ebe:	inc    esi
  407ebf:	std    
  407ec0:	mov    cl,0xb7
  407ec2:	xchg   esp,esi
  407ec4:	mov    dh,0x2
  407ec6:	out    dx,al
  407ec7:	ror    BYTE PTR [ebp-0x7],cl
  407eca:	add    esp,esp
  407ecc:	push   ebp
  407ecd:	cmp    DWORD PTR [edi-0xfb31ea0],ebx
  407ed3:	test   DWORD PTR [ecx-0x73],0x3d9576
  407eda:	dec    ebp
  407edb:	pcmpgtw mm0,QWORD PTR [ebx+eiz*8-0xac758df]
  407ee3:	clc    
  407ee4:	icebp  
  407ee5:	test   BYTE PTR [edi-0x43],bl
  407ee8:	adc    al,0xea
  407eea:	push   ss
  407eeb:	jmp    esi
  407eed:	push   ds
  407eee:	and    DWORD PTR [edi],0x9
  407ef1:	cli    
  407ef2:	pop    ss
  407ef3:	mov    bl,ah
  407ef5:	push   ss
  407ef6:	es add bh,cl
  407ef9:	add    al,0xa7
  407efc:	or     dh,BYTE PTR [ecx-0x5af4c4c1]
  407f02:	or     BYTE PTR [esi+0x35],al
  407f05:	mov    ds,WORD PTR [ecx]
  407f07:	cmp    DWORD PTR [esi],0x9b6655eb
  407f0d:	mov    DWORD PTR [ecx-0x30],ebx
  407f10:	ret    0x386
  407f13:	pop    ds
  407f14:	repnz arpl WORD PTR [ebx],di
  407f17:	jb     0x407ebb
  407f19:	mov    ebx,0x7e34265a
  407f1e:	xchg   ebp,eax
  407f1f:	sbb    esi,DWORD PTR [eax+ebp*2]
  407f22:	or     DWORD PTR [eax+ecx*4],edx
  407f25:	popa   
  407f26:	test   BYTE PTR [edx+edi*8+0xb697966],ah
  407f2d:	js     0x407ef8
  407f2f:	test   al,0xa5
  407f31:	sbb    al,0x5
  407f33:	push   edi
  407f34:	mov    esp,0x6d59e47b
  407f39:	sar    DWORD PTR [eax-0x7],0x31
  407f3d:	fdivp  st(1),st
  407f3f:	rol    cl,1
  407f41:	mov    edi,0xd65e3efe
  407f46:	into   
  407f47:	jno    0x407ed6
  407f49:	imul   eax,DWORD PTR [ebp+ecx*2-0x57c7c0a1],0x430e7a0b
  407f54:	clc    
  407f55:	outs   dx,BYTE PTR ds:[esi]
  407f56:	(bad)  
  407f57:	pop    ds
  407f58:	dec    eax
  407f59:	add    DWORD PTR [ebx-0x70],esp
  407f5c:	pop    esi
  407f5d:	inc    edx
  407f5e:	sbb    DWORD PTR [eax+0x2bb42758],0x3ea37228
  407f68:	out    dx,eax
  407f69:	dec    edx
  407f6a:	cmp    DWORD PTR [edi-0x54b33ca5],edi
  407f70:	es das 
  407f72:	mov    BYTE PTR [eax+0x5c],cl
  407f75:	fwait
  407f76:	repnz stos BYTE PTR es:[edi],al
  407f78:	lahf   
  407f79:	push   es
  407f7a:	push   ds
  407f7b:	jg     0x407f12
  407f7d:	cmp    eax,0xcc1bd9a1
  407f82:	or     dl,BYTE PTR [ecx]
  407f84:	sub    eax,0x35e99b57
  407f89:	popf   
  407f8a:	jle    0x407f16
  407f8c:	mov    bh,0x3d
  407f8e:	pop    esp
  407f8f:	push   ds
  407f90:	xor    al,0x95
  407f92:	ins    BYTE PTR es:[edi],dx
  407f93:	add    eax,0x89fa182d
  407f98:	jmp    0xcc9a8099
  407f9d:	neg    DWORD PTR [edx+eax*4+0x7e]
  407fa1:	cmp    eax,0x187d9875
  407fa6:	dec    eax
  407fa7:	lock jl 0x407f6a
  407faa:	call   0xe4d59812
  407faf:	mov    ds:0x83afa8f5,al
  407fb4:	mov    ebp,ebp
  407fb6:	mov    bh,0x68
  407fb8:	cmp    DWORD PTR [edx-0x30],edi
  407fbb:	mov    eax,0x311908fd
  407fc0:	push   ebx
  407fc1:	cwde   
  407fc2:	ret    0xe84e
  407fc5:	push   cs
  407fc6:	(bad)  
  407fc7:	int3   
  407fc8:	fs inc edx
  407fca:	xor    DWORD PTR [ecx+0xb],ebp
  407fcd:	sbb    ecx,eax
  407fcf:	cmp    eax,0x6fc28578
  407fd4:	scas   al,BYTE PTR es:[edi]
  407fd5:	loopne 0x407f8f
  407fd7:	mov    esi,0xf35556d7
  407fdc:	jg     0x408026
  407fde:	xor    ebx,ebp
  407fe0:	out    0xb2,eax
  407fe2:	cld    
  407fe3:	push   eax
  407fe4:	mov    dl,0x1e
  407fe6:	mov    esp,0x1c9ae69d
  407feb:	jo     0x407fd0
  407fed:	addr16 pop edi
  407fef:	cmp    al,0x7f
  407ff1:	cmp    eax,0x8df21533
  407ff6:	adc    al,0xd3
  407ff8:	neg    BYTE PTR [ebp+0x3f]
  407ffb:	adc    DWORD PTR [ebp+0x31fa6529],esp
  408001:	daa    
  408002:	test   DWORD PTR [edx-0x5465a3de],edi
  408008:	pop    ecx
  408009:	sub    bh,cl
  40800b:	mov    WORD PTR [eax-0x1ffb8c4c],fs
  408011:	in     eax,0x78
  408013:	bound  edx,QWORD PTR [ecx+0x7]
  408016:	sbb    eax,0xb2b69378
  40801b:	fsub   st,st(0)
  40801d:	push   ss
  40801e:	inc    ecx
  40801f:	inc    edx
  408020:	push   es
  408021:	adc    al,0x53
  408023:	adc    al,BYTE PTR [esp+ebp*4+0x312bb3c4]
  40802a:	add    edx,DWORD PTR [eax+0x56]
  40802d:	sbb    dh,ch
  40802f:	lods   eax,DWORD PTR ds:[esi]
  408030:	mov    eax,0x43be26e4
  408035:	cdq    
  408036:	inc    ebp
  408037:	sbb    ebp,eax
  408039:	jmp    0xbba9:0x78937bc8
  408040:	(bad)  
  408041:	push   edx
  408042:	enter  0xff45,0x7b
  408046:	sub    ebx,eax
  408048:	pop    edi
  408049:	dec    ecx
  40804a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40804b:	xchg   edi,eax
  40804c:	mov    ah,ch
  40804e:	(bad)  [edi-0x7d]
  408051:	or     BYTE PTR [esp+ebp*4],dh
  408054:	sbb    bh,dl
  408056:	dec    eax
  408057:	jo     0x4080c0
  408059:	fbld   TBYTE PTR [edx+0x7eaf495a]
  40805f:	pop    eax
  408060:	push   ecx
  408061:	inc    edx
  408062:	mov    ebx,0xee288d3b
  408067:	jg     0x4080b8
  408069:	xor    ebx,edx
  40806b:	xchg   edx,eax
  40806c:	cmp    DWORD PTR ds:0x45b7781f,esi
  408072:	les    esp,FWORD PTR ds:0x1cca4d2a
  408078:	iret   
  408079:	inc    edx
  40807a:	jmp    0x4080b6
  40807c:	sahf   
  40807d:	scas   al,BYTE PTR es:[edi]
  40807e:	fiadd  DWORD PTR [esi+ebp*1+0xa9b054a]
  408085:	sti    
  408086:	test   ch,dl
  408088:	mov    ds:0xc02d0bd6,eax
  40808d:	xchg   edi,eax
  40808e:	(bad)  
  408090:	out    dx,eax
  408091:	mov    bl,0x5c
  408093:	paddsb mm7,QWORD PTR [ecx-0x34]
  408097:	pop    esi
  408098:	xor    eax,0x873ba4e3
  40809d:	mov    eax,ds:0x27003055
  4080a2:	xchg   esp,eax
  4080a3:	pop    ss
  4080a4:	rcl    BYTE PTR [ebx+0x1c],cl
  4080a7:	iret   
  4080a8:	jmp    0x8d76:0xdf3afb7a
  4080af:	mov    eax,0xb5c27146
  4080b4:	push   ss
  4080b5:	aad    0xfa
  4080b7:	js     0x4080c5
  4080b9:	ja     0x408119
  4080bb:	hlt    
  4080bc:	xlat   BYTE PTR ds:[ebx]
  4080bd:	pop    esi
  4080be:	stos   BYTE PTR es:[edi],al
  4080bf:	jmp    0x4804:0xfac96468
  4080c6:	mov    ?,WORD PTR [eax-0x4c78f5a0]
  4080cc:	mov    ecx,gs
  4080ce:	xor    DWORD PTR [edi+0xacd2c29],edi
  4080d4:	(bad)  
  4080d5:	dec    edx
  4080d6:	mov    dl,0xe9
  4080d8:	xor    ecx,DWORD PTR [ecx+0x57]
  4080db:	test   BYTE PTR [ebx+0x5a],bh
  4080de:	jnp    0x4080f7
  4080e0:	jns    0x408066
  4080e2:	pop    ss
  4080e3:	or     bl,BYTE PTR [ebp+eiz*2-0x1f]
  4080e7:	xor    ebx,edx
  4080e9:	xchg   esp,eax
  4080ea:	jp     0x4080e8
  4080ec:	jns    0x40815a
  4080ee:	ficom  WORD PTR ds:0xb5d65f90
  4080f4:	push   0x32921113
  4080f9:	aad    0x74
  4080fb:	jmp    0xf996:0x3704c0f3
  408102:	inc    edx
  408103:	push   es
  408104:	pop    ebx
  408105:	and    DWORD PTR [esi-0x5a21e5cb],eax
  40810b:	xchg   DWORD PTR [esi-0x53],ebp
  40810e:	xor    BYTE PTR [ecx],ah
  408110:	(bad)  
  408111:	jns    0x40811e
  408113:	repz jb 0x4080ad
  408116:	aad    0x82
  408118:	sub    DWORD PTR [edx+edx*4-0x74b447c9],eax
  40811f:	inc    esp
  408120:	pop    ecx
  408121:	lock lea ebx,[ebx]
  408124:	repnz aam 0x94
  408127:	je     0x40819f
  408129:	mov    ds:0x249f1829,eax
  40812e:	jno    0x40816f
  408130:	jg     0x40817a
  408132:	cli    
  408133:	push   ecx
  408134:	dec    edi
  408135:	fadd   QWORD PTR [edi+0x3afbb2ce]
  40813b:	mov    esp,0x2e85cb20
  408140:	jl     0x4080c4
  408142:	(bad)  
  408146:	je     0x40815d
  408148:	out    0x41,al
  40814a:	jns    0x40814f
  40814c:	adc    DWORD PTR [ebx],0x22
  40814f:	(bad)  
  408150:	out    dx,eax
  408151:	inc    ecx
  408152:	xor    DWORD PTR [edx+0x5fd3f231],ebp
  408158:	in     eax,dx
  408159:	jb     0x4080e2
  40815b:	(bad)  
  40815c:	retf   
  40815d:	cmp    DWORD PTR [edx+ebx*4+0x70],esi
  408161:	lock in eax,dx
  408163:	mov    DWORD PTR [si-0x6254],esp
  408168:	sbb    DWORD PTR [esi+eiz*1],edi
  40816b:	adc    DWORD PTR [esi],edi
  40816d:	jnp    0x4081b9
  40816f:	cld    
  408170:	adc    DWORD PTR [eax],0xffffffb9
  408173:	pop    edi
  408174:	aad    0xc1
  408176:	repnz ins BYTE PTR es:[edi],dx
  408178:	clc    
  408179:	das    
  40817a:	push   edx
  40817b:	add    eax,0xce682fd8
  408180:	sub    cl,BYTE PTR [edx+0x4e]
  408183:	inc    ebx
  408184:	call   0xb2d7:0xc1d45bb0
  40818b:	fsubr  DWORD PTR [esi-0x7f3fa90]
  408191:	sbb    BYTE PTR [ecx+ebx*2+0x3a],cl
  408195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408196:	rcl    DWORD PTR [edi],1
  408198:	mov    ah,0xb1
  40819a:	jb     0x408180
  40819c:	loop   0x40817c
  40819e:	mov    ebx,0xfd858f5d
  4081a3:	lods   eax,DWORD PTR ds:[esi]
  4081a4:	adc    DWORD PTR [esi-0x7d],ebx
  4081a7:	add    DWORD PTR [edx-0x42],esp
  4081aa:	in     al,0xe2
  4081ac:	lods   eax,DWORD PTR ds:[esi]
  4081ad:	shl    BYTE PTR [eax+0x41],cl
  4081b0:	xchg   DWORD PTR ds:0x17bbcdc2,edi
  4081b6:	sub    eax,0x8a14ca6a
  4081bb:	test   BYTE PTR [eax+0x19],ch
  4081be:	in     eax,dx
  4081bf:	inc    esp
  4081c0:	aas    
  4081c1:	or     al,ah
  4081c3:	pushf  
  4081c4:	sub    edi,esp
  4081c6:	adc    al,0x37
  4081c8:	add    ebx,esp
  4081ca:	jl     0x4081aa
  4081cc:	test   eax,0x7bc2de72
  4081d1:	push   es
  4081d2:	add    DWORD PTR [edi-0x3b],0x690fee14
  4081d9:	retf   0x808e
  4081dc:	mov    ch,0xcd
  4081de:	pushf  
  4081df:	xor    eax,0xdd796b11
  4081e4:	xchg   edx,eax
  4081e5:	aaa    
  4081e6:	add    eax,0xdd20ffd4
  4081eb:	into   
  4081ec:	adc    bl,BYTE PTR [esi+0x68]
  4081ef:	adc    edi,DWORD PTR [ecx+eax*4+0x3c]
  4081f3:	xor    eax,0xc2b8f4d4
  4081f8:	lahf   
  4081f9:	dec    edx
  4081fa:	shr    BYTE PTR [eax+0x820bb1c],1
  408200:	dec    edi
  408201:	das    
  408202:	and    al,0xd5
  408204:	(bad)  
  408205:	and    eax,0x9eba454a
  40820a:	xchg   ecx,eax
  40820b:	addr16 jle 0x4081eb
  40820e:	mov    ebx,0xce78a2c9
  408213:	shl    BYTE PTR [eax],0x8b
  408216:	test   BYTE PTR [edi+0x60da89e9],dl
  40821c:	adc    DWORD PTR [edx-0x41],0xffffff94
  408220:	enter  0x38ef,0x3d
  408224:	les    edi,FWORD PTR [ebp-0x5a]
  408227:	jnp    0x40825d
  408229:	pop    eax
  40822a:	jmp    0x408237
  40822c:	push   0xa
  40822e:	and    dh,BYTE PTR [ebx-0x7d]
  408231:	das    
  408232:	das    
  408233:	push   edi
  408234:	std    
  408235:	in     eax,dx
  408236:	jne    0x408240
  408238:	stc    
  408239:	inc    esi
  40823a:	jns    0x408235
  40823c:	add    BYTE PTR [eax+0x46033759],ch
  408242:	jle    0x4081dc
  408244:	xor    esi,DWORD PTR [edi+ecx*2]
  408247:	pop    eax
  408248:	lock jne 0x40824f
  40824b:	xchg   edx,eax
  40824c:	push   edi
  40824d:	mov    ch,0x16
  40824f:	sti    
  408250:	xchg   ecx,eax
  408251:	in     eax,dx
  408252:	mov    bl,0x53
  408254:	(bad)  
  408255:	xchg   ebp,eax
  408256:	fs xor al,0xd
  408259:	mov    al,ds:0xba6d9109
  40825e:	mov    ds:0xc851c13f,eax
  408263:	sub    al,ah
  408265:	mov    bh,0x22
  408267:	or     BYTE PTR [ebp-0x5549b5b6],dl
  40826d:	js     0x408232
  40826f:	(bad)  
  408270:	mov    edi,0x4e351cc5
  408275:	sar    DWORD PTR [ecx-0x4cb4ab8],cl
  40827b:	mov    cl,0x9f
  40827d:	mov    ecx,0x84f92477
  408282:	xor    eax,0xe5e3e5c5
  408287:	shr    BYTE PTR [ebp-0x47],1
  40828a:	scas   al,BYTE PTR es:[edi]
  40828b:	imul   ecx,DWORD PTR [eax],0x6
  40828e:	jne    0x4082be
  408290:	dec    ebx
  408291:	call   0x777b8d6a
  408296:	fist   WORD PTR [esi+eiz*2]
  408299:	movzx  esp,cl
  40829c:	cmp    eax,0xa1b832cb
  4082a1:	in     al,0x7
  4082a3:	or     edx,DWORD PTR [edi+0x6945600f]
  4082a9:	mov    edx,0x72257e5d
  4082ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082af:	mov    bl,0x63
  4082b1:	lock xor BYTE PTR [ebp-0x5a],ah
  4082b5:	int3   
  4082b6:	lahf   
  4082b7:	xchg   edi,eax
  4082b8:	jae    0x408327
  4082ba:	pop    es
  4082bb:	push   0xffffffc7
  4082bd:	mov    cl,0x97
  4082bf:	aam    0xfc
  4082c1:	sbb    ch,BYTE PTR [edx-0x638bf4fe]
  4082c7:	jg     0x408261
  4082c9:	xchg   BYTE PTR [ecx],al
  4082cb:	aam    0xa5
  4082cd:	or     al,0x84
  4082cf:	xchg   ecx,eax
  4082d0:	jae    0x408285
  4082d2:	int3   
  4082d3:	outs   dx,DWORD PTR ds:[esi]
  4082d4:	test   eax,0xfc748caa
  4082d9:	xor    eax,0xb7bea6b8
  4082de:	repz pop edx
  4082e0:	add    dl,BYTE PTR [ebp+0x1a46b221]
  4082e6:	mov    dh,0x1c
  4082e8:	adc    dl,BYTE PTR [esi+eax*8]
  4082eb:	inc    edx
  4082ec:	sbb    eax,0x88ea2454
  4082f1:	push   ebx
  4082f2:	sar    DWORD PTR [esi-0x44],0xb3
  4082f6:	lock out 0xda,al
  4082f9:	iret   
  4082fa:	or     eax,0xe7e69f2a
  4082ff:	xor    BYTE PTR [eax+0x61],ah
  408302:	cmp    ecx,edi
  408304:	adc    BYTE PTR [ecx],ah
  408306:	outs   dx,DWORD PTR ds:[esi]
  408307:	jnp    0x4082e0
  408309:	scas   al,BYTE PTR es:[edi]
  40830a:	les    esp,FWORD PTR [edx+0x6e67164a]
  408310:	pop    eax
  408311:	pop    ebp
  408312:	mov    ch,0x3
  408314:	xor    dl,bh
  408316:	or     edi,eax
  408318:	ret    0xf4fa
  40831b:	pop    ds
  40831c:	push   cs
  40831d:	in     al,0xea
  40831f:	fs mov ecx,0x7b112c5
  408325:	jns    0x40833f
  408327:	jb     0x408359
  408329:	and    edx,esp
  40832b:	cmp    DWORD PTR [eax+0x700c0d8],ebx
  408331:	xchg   esi,eax
  408332:	jnp    0x408334
  408334:	adc    DWORD PTR [edi-0xf],ebx
  408337:	inc    eax
  408338:	aad    0x63
  40833a:	inc    esi
  40833b:	in     eax,dx
  40833c:	fld    DWORD PTR [ecx*1-0x7c491af1]
  408343:	out    0x73,al
  408345:	xor    esp,DWORD PTR fs:[ebx]
  408348:	xor    edx,esp
  40834a:	xchg   edx,eax
  40834b:	jnp    0x408324
  40834d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40834e:	xchg   edi,eax
  40834f:	inc    BYTE PTR [ebx-0x68]
  408352:	call   0x7be4:0xd16be577
  408359:	cmc    
  40835a:	scas   eax,DWORD PTR es:[edi]
  40835b:	(bad)  
  40835c:	int    0x22
  40835e:	rcr    BYTE PTR [edi],cl
  408360:	pop    ebx
  408361:	mov    edi,0x6edcd7f9
  408366:	dec    eax
  408367:	cld    
  408368:	daa    
  408369:	iret   
  40836a:	call   0xb6e4c67e
  40836f:	sub    al,0xfd
  408371:	lahf   
  408372:	cld    
  408373:	jnp    0x40831f
  408375:	jl     0x429e0b45
  40837b:	scas   al,BYTE PTR es:[edi]
  40837c:	in     al,dx
  40837d:	add    eax,0x51690a53
  408382:	jnp    0x408360
  408384:	mov    eax,0xc19c54d8
  408389:	aam    0xc9
  40838b:	outs   dx,BYTE PTR ds:[esi]
  40838c:	arpl   WORD PTR [edx+edi*4],bp
  40838f:	dec    ebp
  408390:	push   eax
  408391:	(bad)  
  408392:	in     al,dx
  408393:	jmp    0x4083a1
  408395:	div    DWORD PTR [eax]
  408397:	test   al,0x17
  408399:	mov    BYTE PTR [edx-0x4da4bded],bh
  40839f:	xchg   ebx,eax
  4083a0:	sub    DWORD PTR [esi-0x711ffdf7],ebp
  4083a6:	mov    esi,ds
  4083a8:	aas    
  4083a9:	in     eax,0x30
  4083ab:	push   esp
  4083ac:	jae    0x4083a6
  4083ae:	xor    BYTE PTR [esi],0xf
  4083b1:	outs   dx,BYTE PTR ds:[esi]
  4083b2:	add    al,0x9a
  4083b4:	and    BYTE PTR [eax-0x2cd2ce3a],dl
  4083ba:	jge    0x40840b
  4083bc:	fiadd  WORD PTR [esi]
  4083be:	fcom   DWORD PTR ds:0x3f45eb35
  4083c4:	outs   dx,DWORD PTR ds:[esi]
  4083c5:	push   esi
  4083c6:	sub    edi,ebx
  4083c8:	fcomp  DWORD PTR [ebx]
  4083ca:	xchg   BYTE PTR [eax-0xe0f4d1b],cl
  4083d0:	cmp    cl,BYTE PTR [edx]
  4083d2:	or     dh,BYTE PTR cs:[ebx+ecx*2+0x76]
  4083d7:	int    0xd
  4083d9:	mov    esi,0x96c126e7
  4083de:	sbb    al,0xeb
  4083e0:	dec    ebx
  4083e1:	int    0x36
  4083e3:	or     DWORD PTR [ebp-0x48871df9],0x3c5154ba
  4083ed:	mov    BYTE PTR [eax-0x58],0x3f
  4083f1:	fadd   DWORD PTR [ecx]
  4083f3:	mov    ch,0x83
  4083f5:	out    0x2a,al
  4083f7:	and    eax,esi
  4083f9:	adc    al,0x2c
  4083fb:	gs dec ecx
  4083fd:	loopne 0x40846f
  4083ff:	fs pop ecx
  408401:	and    eax,0xd3b552f1
  408406:	das    
  408407:	dec    DWORD PTR [eax]
  408409:	or     cl,BYTE PTR [eax+0x2a]
  40840c:	pop    ebx
  40840d:	cmp    al,0x63
  40840f:	xchg   esi,eax
  408410:	cli    
  408411:	fs pushf 
  408413:	inc    esp
  408414:	xor    edi,DWORD PTR [ebp+ebx*8-0x34]
  408418:	data16 shl BYTE PTR [ecx+0x2a],1
  40841c:	dec    ebx
  40841d:	dec    esi
  40841e:	cmp    eax,0x85077c81
  408423:	cmp    BYTE PTR [edi-0x29],bh
  408426:	in     al,0xb3
  408428:	sub    edi,edx
  40842a:	push   ebp
  40842b:	sub    BYTE PTR [edx],cl
  40842d:	fidiv  DWORD PTR [ebp+ecx*8-0x66a4854d]
  408434:	sti    
  408435:	xor    eax,0x136f5a76
  40843a:	ja     0x408443
  40843c:	cmp    cl,BYTE PTR [ebx]
  40843e:	or     DWORD PTR [ebx+0x4c6900e7],ebp
  408444:	in     al,dx
  408445:	sti    
  408446:	js     0x408470
  408448:	cmp    ecx,DWORD PTR [esi+0x2ccb6f47]
  40844e:	fadd   st(0),st
  408450:	jmp    0xe537:0x1bbdf396
  408457:	fst    DWORD PTR [esi]
  408459:	in     al,dx
  40845a:	ins    BYTE PTR es:[edi],dx
  40845b:	outs   dx,BYTE PTR ds:[esi]
  40845c:	jp     0x408463
  40845e:	je     0x4083e2
  408460:	(bad)
  408463:	push   ss
  408464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408465:	pop    es
  408466:	mov    cl,0x26
  408468:	mov    esp,0xfc132fc4
  40846d:	loop   0x408432
  40846f:	mov    ds:0x8364b93f,al
  408474:	push   esi
  408475:	shl    DWORD PTR es:[ecx-0xc],cl
  408479:	das    
  40847a:	mov    WORD PTR [ebx-0x35515b46],ds
  408480:	inc    ebp
  408481:	mov    cl,0xb0
  408483:	(bad)  
  408485:	dec    ecx
  408486:	cwde   
  408487:	ror    ebp,cl
  408489:	pop    edx
  40848a:	cld    
  40848b:	(bad)  
  40848d:	stos   BYTE PTR es:[edi],al
  40848e:	imul   edi,eax,0x7064baa2
  408494:	aad    0x64
  408496:	inc    ecx
  408497:	scas   eax,DWORD PTR es:[edi]
  408498:	or     ah,BYTE PTR [edx+ecx*8]
  40849b:	sub    edi,DWORD PTR [ebp+0x7a7a84df]
  4084a1:	pop    esp
  4084a2:	mov    ebx,0x6aad4ba1
  4084a7:	pop    esp
  4084a8:	add    edx,ecx
  4084aa:	pop    es
  4084ab:	push   esp
  4084ac:	mov    ds:0xd864b2d6,eax
  4084b1:	sbb    BYTE PTR [ebp+0x13],al
  4084b4:	sub    BYTE PTR [esp+ebx*4+0x7825878d],0x5b
  4084bc:	jge    0x4084e8
  4084be:	xor    edx,DWORD PTR [ecx+esi*2-0x5e240fb9]
  4084c5:	js     0x408501
  4084c7:	or     DWORD PTR [edi+0xd583e6b],esp
  4084cd:	popa   
  4084ce:	cmp    al,0x48
  4084d0:	or     dl,BYTE PTR [eax+0x24]
  4084d3:	mov    ebp,0xb7f7b941
  4084d8:	test   DWORD PTR [ebx+0x2],0x581d79c9
  4084df:	adc    edx,0x2f
  4084e2:	mov    gs,ebx
  4084e4:	cmp    BYTE PTR [esi+edi*8+0x4],bl
  4084e8:	and    al,0xdf
  4084ea:	jnp    0x4084b0
  4084ec:	push   edx
  4084ed:	lds    ebp,FWORD PTR [ecx-0xa]
  4084f0:	popa   
  4084f1:	jo     0x408565
  4084f3:	xlat   BYTE PTR ds:[ebx]
  4084f4:	mov    bh,0x41
  4084f6:	mov    esp,0x234e1255
  4084fb:	pushf  
  4084fc:	add    al,BYTE PTR [eax-0x1f47f1bc]
  408502:	iret   
  408503:	in     eax,0x25
  408505:	push   0x47086526
  40850a:	scas   eax,DWORD PTR es:[edi]
  40850b:	xor    al,0x5b
  40850d:	mov    ebx,0x81fd1c33
  408512:	sub    cl,BYTE PTR [ebp+0x7955eef9]
  408518:	das    
  408519:	sub    eax,0x8163cc13
  40851e:	sti    
  40851f:	dec    edx
  408520:	jb     0x408582
  408522:	add    DWORD PTR [edi-0x1dde5aec],ecx
  408528:	jecxz  0x40855d
  40852a:	xor    ah,BYTE PTR fs:[ebp-0x75]
  40852e:	scas   al,BYTE PTR es:[edi]
  40852f:	icebp  
  408530:	loopne 0x408583
  408532:	xchg   DWORD PTR [ebp+0x2d],eax
  408535:	sub    bh,0x7e
  408538:	stc    
  408539:	jl     0x40856e
  40853b:	je     0x40853b
  40853d:	(bad)  
  40853e:	jmp    0x40856b
  408540:	aam    0x99
  408542:	push   edi
  408543:	cmp    esi,ebx
  408545:	dec    ebx
  408546:	xor    ecx,DWORD PTR [edx]
  408548:	aaa    
  408549:	push   cs
  40854a:	cmp    BYTE PTR [esi+0x44a7e05b],0x41
  408551:	pop    ds
  408552:	push   ecx
  408553:	dec    esi
  408554:	inc    eax
  408555:	cmp    eax,DWORD PTR fs:[edx]
  408558:	lock xor DWORD PTR [esi+0x76],0x7dd32831
  408560:	call   0xd2287688
  408565:	aaa    
  408566:	adc    eax,0xeeabefd1
  40856b:	push   esp
  40856c:	and    al,0x85
  40856e:	sub    BYTE PTR [ebp+0x46],0x1a
  408572:	lahf   
  408573:	inc    esp
  408574:	lods   al,BYTE PTR ds:[esi]
  408575:	sar    ch,cl
  408577:	dec    ecx
  408578:	aas    
  408579:	aad    0x90
  40857b:	pushf  
  40857c:	xor    edx,esi
  40857e:	or     DWORD PTR [ecx+eiz*4],0xffffffc7
  408582:	pushf  
  408583:	mov    esi,0x9ade7b23
  408588:	test   al,0x26
  40858a:	test   eax,0x5f183e06
  40858f:	mov    ?,WORD PTR [ecx]
  408591:	inc    edx
  408592:	add    al,0x2b
  408594:	cdq    
  408595:	popf   
  408596:	adc    al,0xdb
  408598:	aam    0x1b
  40859a:	xor    BYTE PTR [edx+ebx*2-0x2e6912d6],0xc7
  4085a2:	pushf  
  4085a3:	or     DWORD PTR [edi+0x356bfb69],edi
  4085a9:	(bad)  
  4085aa:	aam    0x6d
  4085ac:	jbe    0x4085a8
  4085ae:	call   0x9cca:0x6c019516
  4085b5:	push   eax
  4085b6:	cs dec ebp
  4085b8:	xchg   ah,al
  4085ba:	out    dx,eax
  4085bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085bc:	repz dec BYTE PTR [edx-0x14]
  4085c0:	mov    cl,0xf0
  4085c2:	sub    al,0x25
  4085c4:	cmp    BYTE PTR [ecx+edx*1],0xda
  4085c8:	inc    ebp
  4085c9:	fld    TBYTE PTR [ebx+0x1b072dad]
  4085cf:	mov    ?,WORD PTR [ecx+0x2f]
  4085d2:	pop    es
  4085d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d4:	outs   dx,DWORD PTR ds:[esi]
  4085d5:	add    ecx,esi
  4085d7:	lds    esi,FWORD PTR [ebx]
  4085d9:	test   eax,0xb29e5d16
  4085de:	clc    
  4085df:	push   cs
  4085e0:	or     eax,0x311ba034
  4085e5:	mov    WORD PTR [edx-0x3],?
  4085e8:	xor    eax,0x5723cdbd
  4085ed:	adc    BYTE PTR [esi-0x55],dl
  4085f0:	mov    al,ds:0xf2e0bfbe
  4085f5:	xor    ecx,esp
  4085f7:	sti    
  4085f8:	int3   
  4085f9:	lods   al,BYTE PTR ds:[esi]
  4085fa:	ficom  WORD PTR ds:0x90c867cf
  408600:	mov    dl,0x14
  408602:	xor    ah,BYTE PTR [ebx+0x38]
  408605:	les    ebx,FWORD PTR [edi+0x4]
  408608:	mov    bl,0x6
  40860a:	cmc    
  40860b:	call   0x1f1e:0x36eb1bd4
  408612:	sub    esp,DWORD PTR [edi]
  408614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408615:	and    ah,BYTE PTR [ebx+0x28]
  408618:	cmp    al,0xbf
  40861a:	(bad)  
  40861c:	in     al,dx
  40861d:	sahf   
  40861e:	dec    ebx
  40861f:	cmc    
  408620:	push   esp
  408621:	jp     0x40867b
  408623:	call   0x3aa8:0xf574b0dd
  40862a:	adc    dh,BYTE PTR [ebp-0x44784b60]
  408630:	adc    al,0xbf
  408632:	repnz in eax,dx
  408634:	push   0x6e0292c7
  408639:	xchg   al,dh
  40863b:	pushf  
  40863c:	test   BYTE PTR [eax],dl
  40863e:	mov    eax,0x6de1ce8f
  408643:	ins    DWORD PTR es:[edi],dx
  408644:	test   eax,0x8b32af82
  408649:	jno    0x40866f
  40864b:	maxps  xmm7,XMMWORD PTR [ecx]
  40864e:	loopne 0x40865c
  408650:	std    
  408651:	jmp    0x408673
  408653:	loopne 0x4086b5
  408655:	jmp    FWORD PTR [ebx-0x7bc554ed]
  40865b:	cmp    DWORD PTR [edx+0x28e77306],esi
  408661:	pop    ss
  408662:	pop    esi
  408663:	sbb    eax,0x97f3f935
  408668:	cmp    BYTE PTR ss:[edx],cl
  40866b:	jl     0x4086ec
  40866d:	fcomp  QWORD PTR [edx+0x48e6299f]
  408673:	rol    DWORD PTR ds:0xb999ed66,1
  408679:	mov    DWORD PTR [ecx+0x56f10a8a],eax
  40867f:	pop    esi
  408680:	fidivr WORD PTR [eax]
  408682:	ds not ebp
  408685:	jae    0x40866c
  408687:	sub    bh,BYTE PTR [eax-0x62]
  40868a:	idiv   ecx
  40868c:	cmp    BYTE PTR [eax],bh
  40868e:	imul   esi,DWORD PTR [ebx],0x340ebd6e
  408694:	jmp    0x40864b
  408696:	sti    
  408697:	or     ah,BYTE PTR [ecx]
  408699:	jne    0x4086a1
  40869b:	push   es
  40869c:	cmp    al,0x52
  40869e:	sub    BYTE PTR [ebp+edx*1+0x488155a7],0x69
  4086a6:	dec    ebp
  4086a7:	mov    DWORD PTR [ecx-0x1b],esi
  4086aa:	in     eax,dx
  4086ab:	rol    BYTE PTR [ebx+0x34],0x8e
  4086af:	les    ecx,FWORD PTR [edi+0x10]
  4086b2:	repnz cs cmp eax,0xbd4b8519
  4086b9:	scas   al,BYTE PTR es:[edi]
  4086ba:	sub    eax,eax
  4086bc:	jnp    0x408734
  4086be:	mov    esi,0xfd2f270
  4086c3:	jno    0x408685
  4086c5:	mov    cl,0xd6
  4086c7:	mov    ch,0x4d
  4086c9:	repnz loop 0x4086b2
  4086cc:	repz dec ecx
  4086ce:	mov    edi,0x5211537b
  4086d3:	sub    BYTE PTR [esi],dh
  4086d5:	adc    BYTE PTR [edi+0xcd4a1b8],bh
  4086db:	lds    eax,FWORD PTR [edi+0x45]
  4086de:	or     BYTE PTR [ecx+esi*1-0x5fd0ad26],dl
  4086e5:	repz jo 0x408709
  4086e8:	ret    
  4086e9:	ret    
  4086ea:	jmp    0xb20362f9
  4086ef:	arpl   sp,cx
  4086f1:	stos   BYTE PTR es:[edi],al
  4086f2:	test   eax,0xd0d3c343
  4086f7:	cmp    al,0x5b
  4086f9:	mov    DWORD PTR [ebp+0x71f74500],0x9f60b711
  408703:	xchg   edi,eax
  408704:	out    0xf8,al
  408706:	push   esp
  408707:	ret    
  408708:	popa   
  408709:	sub    eax,0xe575cc20
  40870e:	mov    eax,0x2eec66c5
  408713:	pop    ss
  408714:	push   0x93e9b787
  408719:	icebp  
  40871a:	mov    cl,BYTE PTR [edx+0x3]
  40871d:	mov    esp,0x5e1cfd8b
  408722:	cmp    ah,ah
  408724:	or     edx,ebx
  408726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408727:	xor    BYTE PTR [ecx-0x3a],0x6e
  40872b:	xor    eax,DWORD PTR [ebx-0x51]
  40872e:	(bad)  
  40872f:	xor    DWORD PTR [ebx],ecx
  408731:	cwde   
  408732:	cli    
  408733:	daa    
  408734:	xor    dh,BYTE PTR [eax+0x3cf2454d]
  40873a:	xor    DWORD PTR [ebp-0x5c],ebp
  40873d:	add    ebp,DWORD PTR ds:0xe39e1848
  408743:	xor    al,0x74
  408745:	cs cmp cl,bh
  408748:	clc    
  408749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40874a:	sub    BYTE PTR [edi-0x32],bl
  40874d:	mov    edi,0x1373831a
  408752:	xchg   edx,eax
  408753:	rcl    BYTE PTR [edi-0x1fcb0fb5],cl
  408759:	sub    BYTE PTR [ecx],ch
  40875b:	iret   
  40875c:	mov    edi,0x9281f3ce
  408761:	xchg   edx,eax
  408762:	inc    esp
  408763:	cmp    esp,DWORD PTR [ebp+0xd06e685]
  408769:	popf   
  40876a:	je     0x408729
  40876c:	stc    
  40876d:	or     bl,BYTE PTR ss:[ecx-0x26]
  408771:	imul   ebx,DWORD PTR [edi-0x4a],0x5a
  408775:	add    al,0x7e
  408777:	or     edx,ebx
  408779:	sub    al,0x7a
  40877b:	mov    esi,0x5ab0fe53
  408780:	leave  
  408781:	push   0xd172276a
  408786:	xor    esi,DWORD PTR [ecx-0x5a]
  408789:	ret    
  40878a:	add    dh,BYTE PTR [eax]
  40878c:	and    BYTE PTR [edx+0x409bb51c],cl
  408792:	fdiv   DWORD PTR [edx]
  408794:	and    DWORD PTR fs:[eax+edx*1],edx
  408798:	sbb    bl,BYTE PTR [ecx+0x20]
  40879b:	shr    DWORD PTR [ecx+0x4a],1
  40879e:	lods   eax,DWORD PTR ds:[esi]
  40879f:	pop    esi
  4087a0:	sub    eax,0xd485da0e
  4087a5:	xchg   ebx,eax
  4087a6:	mov    al,0x65
  4087a8:	push   ecx
  4087a9:	(bad)  
  4087aa:	mov    ds:0x4dd5d2d0,eax
  4087af:	bound  esp,QWORD PTR ss:[esi+0x675f5e64]
  4087b6:	(bad)  
  4087b7:	mov    eax,ds:0x1b22d2b
  4087bc:	ins    DWORD PTR es:[edi],dx
  4087bd:	mov    dh,0x8f
  4087bf:	retf   0xfbc4
  4087c2:	push   0x3c67d7b
  4087c7:	add    BYTE PTR [edx+eax*2+0x64],ah
  4087cb:	mov    ebp,0x89cb19c6
  4087d0:	ja     0x40875b
  4087d2:	sbb    esp,eax
  4087d4:	inc    edx
  4087d5:	push   ss
  4087d6:	adc    BYTE PTR [ebp+0x56],ah
  4087d9:	scas   eax,DWORD PTR es:[edi]
  4087da:	test   eax,0x1c7bea7d
  4087df:	das    
  4087e0:	in     al,0x82
  4087e2:	adc    al,0x43
  4087e4:	fcom   st(3)
  4087e6:	popw   es
  4087e8:	stos   BYTE PTR es:[edi],al
  4087e9:	test   eax,0x8e14bfda
  4087ee:	jg     0x408816
  4087f0:	(bad)  
  4087f1:	and    ch,ch
  4087f3:	push   0x8c719cb4
  4087f8:	xchg   edx,eax
  4087f9:	jns    0x408845
  4087fb:	push   ds
  4087fc:	push   edi
  4087fd:	imul   ebp,ecx,0x7ece8ec3
  408803:	jg     0x4087ce
  408805:	jns    0x408798
  408807:	in     al,dx
  408808:	xchg   ebp,eax
  408809:	mov    bl,0x79
  40880b:	or     dh,BYTE PTR [eax-0x43]
  40880e:	aam    0x1c
  408810:	imul   eax,DWORD PTR ds:0xd6b385ba,0x44
  408817:	(bad)  
  408818:	imul   edx,DWORD PTR [ecx+eiz*1-0x64adf5ae],0xdf5000ae
  408823:	or     eax,ecx
  408825:	fs stos BYTE PTR es:[edi],al
  408827:	cmp    BYTE PTR [ebx-0x62ac6225],0xe9
  40882e:	and    WORD PTR [edi+0x19854edd],di
  408835:	mov    cl,0x98
  408837:	inc    eax
  408838:	jne    0x408888
  40883a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883b:	xor    eax,0x978c2062
  408840:	inc    DWORD PTR [ebx]
  408842:	mov    dh,0x62
  408844:	sub    eax,0x787f04f3
  408849:	xchg   esi,eax
  40884a:	div    ah
  40884c:	sub    DWORD PTR [edx+ebx*8+0x7e],esp
  408850:	in     eax,dx
  408851:	sub    eax,0x65022f85
  408856:	and    eax,0x513edcd0
  40885b:	adc    al,0xc2
  40885d:	in     al,0xc7
  40885f:	xlat   BYTE PTR ds:[ebx]
  408860:	loopne 0x408886
  408862:	fist   DWORD PTR [ebp+0x76]
  408865:	lds    edi,FWORD PTR [ecx+0x4d]
  408868:	test   al,0xc4
  40886a:	nop
  40886b:	lods   al,BYTE PTR ds:[esi]
  40886c:	inc    ecx
  40886d:	and    DWORD PTR [ebx],ecx
  40886f:	sub    ecx,esp
  408871:	xor    eax,0x2d9d45f7
  408876:	out    0xe8,al
  408878:	mov    WORD PTR [eax],gs
  40887a:	loope  0x408859
  40887c:	leave  
  40887d:	push   ds
  40887e:	mov    DWORD PTR ss:[ebx+0x137b3b21],edi
  408885:	aam    0x50
  408887:	jno    0x40885e
  408889:	pop    es
  40888a:	scas   al,BYTE PTR es:[edi]
  40888b:	cmp    esi,ebx
  40888d:	call   0xcf52:0xbf5c4f5
  408894:	lahf   
  408895:	arpl   WORD PTR [eax-0x70],bp
  408898:	ss mov ecx,0xda2ed78c
  40889e:	sbb    eax,0x9c9daf7
  4088a3:	rol    DWORD PTR [ebp+0x12],1
  4088a6:	add    BYTE PTR [esi+ebx*8],dh
  4088a9:	adc    eax,0x98eca494
  4088ae:	adc    al,0xed
  4088b0:	cli    
  4088b1:	jne    0x4088cd
  4088b3:	mov    esi,0xbafe0e05
  4088b8:	sub    al,0x8d
  4088ba:	imul   ecx,DWORD PTR [ecx+0x2cdc4fc],0x9abd3471
  4088c4:	push   0xffffffa9
  4088c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c7:	icebp  
  4088c8:	dec    edx
  4088c9:	les    eax,FWORD PTR ss:[ebx]
  4088cc:	cmp    eax,0x95d59a23
  4088d1:	or     al,BYTE PTR [eax-0x3b50783a]
  4088d7:	jno    0x40889f
  4088d9:	pop    ebx
  4088da:	and    ecx,DWORD PTR [esi+0x63f589fb]
  4088e0:	mov    eax,0x7454a273
  4088e5:	mov    ecx,esi
  4088e7:	sahf   
  4088e8:	adc    DWORD PTR [esi-0x2b26c665],edx
  4088ee:	mov    DWORD PTR [edx-0x3d],edi
  4088f1:	scas   eax,DWORD PTR es:[edi]
  4088f2:	push   ebx
  4088f3:	retf   0x1f0
  4088f6:	sub    BYTE PTR [esp+edx*2-0x7d3ec515],bh
  4088fd:	ror    DWORD PTR [ebp-0x52eb4d0a],0x34
  408904:	int    0xa3
  408906:	pop    esp
  408907:	imul   esp,DWORD PTR [ebx-0x4b86cb90],0xf5ee11ad
  408911:	pop    esi
  408912:	adc    ebx,DWORD PTR [edx]
  408914:	jnp    0x408936
  408916:	cdq    
  408917:	cmp    BYTE PTR [ecx-0x6c],al
  40891a:	retf   0x18cf
  40891d:	pop    ebp
  40891e:	pop    es
  40891f:	xchg   esp,eax
  408920:	daa    
  408921:	pop    esi
  408922:	fldenv [ebx-0x2b]
  408925:	inc    esi
  408926:	xchg   ecx,eax
  408927:	(bad)  
  408928:	por    mm3,QWORD PTR [ebx+0x40b42b08]
  40892f:	outs   dx,BYTE PTR ds:[esi]
  408930:	repz xor WORD PTR [edi],sp
  408934:	aam    0x89
  408936:	push   ecx
  408937:	mov    ds,WORD PTR [ecx]
  408939:	fld    DWORD PTR [edx-0x57]
  40893c:	pushf  
  40893d:	sti    
  40893e:	stos   BYTE PTR es:[edi],al
  40893f:	jno    0x40892f
  408941:	push   eax
  408942:	jnp    0x4089b9
  408944:	test   BYTE PTR [edi+0x45],bh
  408947:	jo     0x408959
  408949:	or     eax,0x1509ac73
  40894e:	sub    DWORD PTR [eax-0x48],esp
  408951:	or     al,0xcc
  408953:	sti    
  408954:	sbb    DWORD PTR [ebp-0x7f8a35da],ebx
  40895a:	cdq    
  40895b:	push   eax
  40895c:	mov    al,ds:0x85eee2ff
  408961:	js     0x408920
  408963:	cmp    BYTE PTR [edx],dh
  408965:	push   es
  408966:	jge    0x408982
  408968:	and    edx,eax
  40896a:	lahf   
  40896b:	scas   eax,DWORD PTR es:[edi]
  40896c:	xor    al,0x1e
  40896e:	and    edx,edi
  408970:	inc    eax
  408971:	xchg   edi,eax
  408972:	push   esi
  408973:	pop    ebx
  408974:	in     al,0xe5
  408976:	rol    DWORD PTR ds:0x52f31433,cl
  40897c:	xor    eax,0x404b2093
  408981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408982:	test   eax,0x1b45955c
  408987:	dec    ebx
  408988:	push   ds
  408989:	adc    DWORD PTR [ecx-0x2b31fca5],eax
  40898f:	js     0x40899d
  408991:	lods   eax,DWORD PTR ds:[esi]
  408992:	mov    BYTE PTR [edx+ebp*1],ch
  408995:	or     eax,0x734d8e6c
  40899a:	mov    dh,0xa
  40899c:	push   ecx
  40899d:	mov    WORD PTR [edx],?
  40899f:	enter  0xff56,0x41
  4089a3:	inc    eax
  4089a4:	outs   dx,BYTE PTR ds:[esi]
  4089a5:	enter  0x414b,0x2e
  4089a9:	mov    DWORD PTR [ebp+0x62bb2082],0xb1628874
  4089b3:	outs   dx,BYTE PTR ds:[esi]
  4089b5:	mov    ch,0x5f
  4089b7:	and    eax,eax
  4089b9:	or     al,0xe6
  4089bb:	test   eax,0x121168ce
  4089c0:	and    edx,DWORD PTR [ecx]
  4089c2:	sub    ebp,edi
  4089c4:	mov    edx,0xc91d1f65
  4089c9:	push   eax
  4089ca:	call   0xacd66e10
  4089cf:	jnp    0x4089b6
  4089d1:	add    al,0x6e
  4089d3:	bound  edi,QWORD PTR [ebx+0x36]
  4089d6:	jl     0x4089b5
  4089d8:	sbb    ebp,DWORD PTR [ebp+0x4d157f9c]
  4089de:	adc    BYTE PTR [ecx-0x63],0x7d
  4089e2:	jae    0x4089ba
  4089e4:	mul    DWORD PTR [edx-0x1b]
  4089e7:	or     eax,0xaaf35695
  4089ec:	adc    DWORD PTR [si-0x4392],ebx
  4089f1:	xor    eax,0xbd2f2cab
  4089f6:	test   esp,ebp
  4089f8:	loopne 0x408a26
  4089fa:	xchg   esi,eax
  4089fb:	xchg   ecx,eax
  4089fc:	xchg   edx,eax
  4089fd:	retf   
  4089fe:	out    0x8b,al
  408a00:	add    cl,al
  408a02:	enter  0xb923,0xb4
  408a06:	sbb    DWORD PTR [eax-0x7d],eax
  408a09:	xor    al,0x1b
  408a0b:	cmp    esp,edi
  408a0d:	xchg   ecx,eax
  408a0e:	jge    0x408a8d
  408a10:	add    eax,0x83b5afb8
  408a15:	xchg   DWORD PTR [eax+0x40005b8d],ebx
  408a1b:	aas    
  408a1c:	cmc    
  408a1d:	mov    ds:0x6d3a3f97,eax
  408a22:	sub    dl,bl
  408a24:	fs cmc 
  408a26:	push   cs
  408a27:	jmp    0x408a1b
  408a29:	loope  0x408a51
  408a2b:	pop    ebp
  408a2c:	add    BYTE PTR [eax],dh
  408a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2f:	mov    BYTE PTR [esi+0x7dd3ece],cl
  408a35:	mov    dh,0x6f
  408a37:	sbb    al,0xff
  408a39:	sub    ch,BYTE PTR [ebx+0x25]
  408a3c:	jl     0x408a3c
  408a3e:	ins    DWORD PTR es:[edi],dx
  408a3f:	cdq    
  408a40:	sahf   
  408a41:	imul   ebp,DWORD PTR [edi-0x78],0x46875ea
  408a48:	(bad)  
  408a49:	jnp    0x408a26
  408a4b:	jnp    0x4089e1
  408a4d:	xchg   ecx,eax
  408a4e:	sbb    al,0x49
  408a50:	adc    bh,BYTE PTR [edi-0x12]
  408a53:	mov    ds:0xd3671994,eax
  408a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a59:	pop    ds
  408a5a:	jmp    FWORD PTR [edi]
  408a5c:	iret   
  408a5d:	dec    ebp
  408a5e:	push   ss
  408a5f:	adc    eax,0x5a4b9130
  408a64:	std    
  408a65:	jae    0x4089ea
  408a67:	scas   al,BYTE PTR es:[edi]
  408a68:	and    al,0xfb
  408a6a:	dec    edi
  408a6b:	leave  
  408a6c:	or     DWORD PTR [ebx-0x21],0x32
  408a70:	in     eax,0x94
  408a72:	add    BYTE PTR [ebx+0x24],0x15
  408a76:	loop   0x408a65
  408a78:	push   edi
  408a79:	ds sub cl,ah
  408a7c:	(bad)
  408a7f:	pop    es
  408a80:	inc    esp
  408a81:	jmp    0x408ada
  408a83:	add    DWORD PTR [edx-0xb],esi
  408a86:	mov    bh,0x1e
  408a88:	adc    BYTE PTR [ebx],dl
  408a8a:	adc    eax,0x14d4bd87
  408a8f:	enter  0x5cde,0x6e
  408a93:	inc    ebx
  408a94:	jmp    0xce6f4329
  408a99:	lods   al,BYTE PTR ds:[esi]
  408a9a:	sar    esp,1
  408a9c:	sbb    BYTE PTR [esi],0x16
  408a9f:	lea    esp,ss:[ebp+0x343ca98f]
  408aa6:	fsubr  QWORD PTR [edi+0x54]
  408aa9:	gs ror dh,0x31
  408aad:	dec    esi
  408aae:	arpl   WORD PTR [ecx],sp
  408ab0:	out    dx,eax
  408ab1:	inc    ebp
  408ab2:	dec    ecx
  408ab3:	test   cl,dh
  408ab5:	xchg   edx,eax
  408ab6:	shl    BYTE PTR [eax+ecx*4-0x15],0x3e
  408abb:	sub    DWORD PTR [esi+0x5c91daf3],edx
  408ac1:	push   edi
  408ac2:	adc    BYTE PTR [esi-0x5b4c59b9],0x1
  408ac9:	dec    ebp
  408aca:	imul   esi,DWORD PTR [ebx+0x31c6f35b],0xffffffce
  408ad1:	cmp    al,0xa5
  408ad3:	adc    al,0xf8
  408ad5:	sub    cl,dl
  408ad7:	dec    edx
  408ad8:	aaa    
  408ad9:	adc    eax,0x1979c374
  408ade:	adc    eax,0x730f2a2e
  408ae3:	xor    esi,edi
  408ae5:	(bad)  
  408ae6:	fdivr  DWORD PTR [edx]
  408ae8:	xor    BYTE PTR [edi+esi*4+0x635edd18],cl
  408aef:	out    0x7e,eax
  408af1:	ins    DWORD PTR es:[edi],dx
  408af2:	and    eax,0xbca8bd2
  408af7:	je     0x408a7a
  408af9:	cmp    DWORD PTR [ebp-0x55],edx
  408afc:	sub    eax,0x571bc2e9
  408b01:	in     eax,0x9d
  408b03:	loop   0x408b2e
  408b05:	js     0x408b1b
  408b07:	add    bh,dh
  408b09:	ret    
  408b0a:	cmp    eax,0xc6a42f1a
  408b0f:	scas   eax,DWORD PTR es:[edi]
  408b10:	(bad)  
  408b11:	jle    0x408b5b
  408b13:	xchg   esp,eax
  408b14:	imul   esp,DWORD PTR [edi+0x33],0xffffff97
  408b18:	leave  
  408b19:	xor    dh,BYTE PTR [edx]
  408b1b:	fs cmp esi,ecx
  408b1e:	pop    ds
  408b1f:	or     eax,0x7d296afa
  408b24:	and    ah,BYTE PTR [edx]
  408b26:	sbb    esi,DWORD PTR [ecx-0x6a]
  408b29:	sbb    DWORD PTR [edi+0x7c],esi
  408b2c:	mov    ebx,DWORD PTR [esi+0x52]
  408b2f:	push   0xe14c3c4f
  408b34:	pop    ecx
  408b35:	add    esp,edi
  408b37:	or     BYTE PTR [esi-0x5c716ae9],dh
  408b3d:	xchg   DWORD PTR [eax-0x1b],esi
  408b40:	sub    BYTE PTR ds:0x65fb325a,bl
  408b46:	pop    es
  408b47:	hlt    
  408b48:	outs   dx,BYTE PTR ds:[esi]
  408b49:	(bad)  
  408b4a:	or     edx,DWORD PTR [edx]
  408b4c:	sub    al,0x4e
  408b4e:	or     DWORD PTR [ebp+0x8],eax
  408b51:	push   cs
  408b52:	mov    esp,0x978f448
  408b57:	sti    
  408b58:	std    
  408b59:	sar    ebp,1
  408b5b:	and    cl,BYTE PTR [ebp+0x7e]
  408b5e:	jae    0x408b54
  408b60:	or     DWORD PTR [ecx-0x1a],esi
  408b63:	mov    dh,0xb7
  408b65:	cmp    BYTE PTR [ebp-0x3],dl
  408b68:	lea    edx,[ecx]
  408b6a:	aaa    
  408b6b:	dec    esi
  408b6c:	pushf  
  408b6d:	clc    
  408b6e:	sbb    edi,eax
  408b70:	dec    esp
  408b71:	retf   
  408b72:	retf   0xd3d3
  408b75:	pop    edx
  408b76:	xchg   edi,eax
  408b77:	jo     0x408b9c
  408b79:	es sub al,dh
  408b7c:	mov    esp,0x591d8a69
  408b81:	mov    bl,0x42
  408b83:	jmp    0x625140b6
  408b88:	mov    esi,0x860390aa
  408b8d:	pop    ecx
  408b8e:	in     al,dx
  408b8f:	mov    ch,0xed
  408b91:	neg    bh
  408b93:	cld    
  408b94:	in     al,dx
  408b95:	xor    bh,BYTE PTR [ebx]
  408b97:	sbb    dh,BYTE PTR [edx]
  408b99:	mov    esp,0x27e8d812
  408b9e:	outs   dx,DWORD PTR ds:[esi]
  408b9f:	xchg   esi,eax
  408ba0:	jl     0x408b7a
  408ba2:	fsubp  st(4),st
  408ba4:	cmp    al,0x5b
  408ba6:	mov    cs,edi
  408ba8:	mov    esp,0x1192c231
  408bad:	cmp    eax,0x8ff5d55a
  408bb2:	lds    edx,FWORD PTR [ebx]
  408bb4:	das    
  408bb5:	sbb    bh,BYTE PTR [eax]
  408bb7:	pop    es
  408bb8:	ins    DWORD PTR es:[edi],dx
  408bb9:	pop    ds
  408bba:	mov    ds:0xc7541ff1,al
  408bbf:	jno    0x408bfd
  408bc1:	cmp    BYTE PTR ss:[edx-0x429237e5],0x97
  408bc9:	into   
  408bca:	rol    DWORD PTR [eax-0x1a2ff553],1
  408bd0:	mov    ch,0xd3
  408bd2:	xchg   esp,eax
  408bd3:	dec    edx
  408bd4:	and    BYTE PTR [ebp-0x79],bl
  408bd7:	ret    0xad64
  408bda:	call   0x567dc92
  408bdf:	icebp  
  408be0:	xor    dl,BYTE PTR [eax]
  408be2:	or     ebp,DWORD PTR [esi-0x73]
  408be5:	out    dx,al
  408be6:	mov    al,cl
  408be8:	mov    eax,ds:0x7eed43fc
  408bed:	jl     0x408c0b
  408bef:	gs mov edx,0x350daa
  408bf5:	push   0xffffffde
  408bf7:	pop    ebx
  408bf8:	xor    eax,0x999d04c0
  408bfd:	loop   0x408c3f
  408bff:	and    eax,0x2afa8083
  408c04:	ret    
  408c05:	sbb    ecx,ebp
  408c07:	xchg   ecx,eax
  408c08:	cld    
  408c09:	adc    DWORD PTR [ebx],esi
  408c0b:	jmp    0xac73561d
  408c10:	mov    esp,0x32368e7a
  408c15:	pushf  
  408c16:	sub    ebp,edi
  408c18:	dec    eax
  408c19:	out    dx,al
  408c1a:	js     0x408c84
  408c1c:	and    ah,BYTE PTR [eax+0x5afdf870]
  408c22:	push   cs
  408c23:	pop    eax
  408c24:	mov    DWORD PTR [ecx+0x7c],esi
  408c27:	popa   
  408c28:	popa   
  408c29:	inc    ebx
  408c2a:	sub    al,BYTE PTR [esi]
  408c2c:	popf   
  408c2d:	cmp    DWORD PTR [ecx+0x43],0x75830025
  408c34:	add    edx,DWORD PTR [ecx-0x1f059ecd]
  408c3a:	xor    BYTE PTR [edi+ecx*4-0x421385cc],dh
  408c41:	ret    
  408c42:	mov    eax,ds:0x51a48970
  408c47:	jge    0x408c4f
  408c49:	mov    cl,0xa8
  408c4b:	push   es
  408c4c:	(bad)
  408c4f:	sti    
  408c50:	es inc ecx
  408c52:	stos   DWORD PTR es:[edi],eax
  408c53:	xchg   BYTE PTR [esp+ecx*4],ch
  408c56:	jle    0x408bfa
  408c58:	jmp    0xe39d:0x43842e2c
  408c5f:	dec    edi
  408c60:	test   al,0x50
  408c62:	and    ebx,ebp
  408c64:	push   edx
  408c65:	enter  0xe01c,0xe4
  408c69:	or     DWORD PTR ds:0xd73a45fd,esi
  408c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c70:	(bad)
  408c73:	push   ebx
  408c74:	xlat   BYTE PTR ds:[ebx]
  408c75:	fnsave [edx]
  408c77:	cmc    
  408c78:	xchg   ecx,eax
  408c79:	xchg   ebx,eax
  408c7a:	xor    al,0x65
  408c7c:	shl    DWORD PTR [eax+0x263d4618],1
  408c82:	xchg   edi,eax
  408c83:	lahf   
  408c84:	(bad)  
  408c85:	push   cs
  408c86:	xor    eax,0xeabb3223
  408c8b:	aaa    
  408c8c:	fs sbb eax,0xdfb732df
  408c92:	inc    ebp
  408c93:	fst    DWORD PTR [edi+0x382605c8]
  408c99:	xor    ebp,DWORD PTR [esi-0xf]
  408c9c:	popf   
  408c9d:	inc    ecx
  408c9e:	mov    ds:0xc3abae5a,eax
  408ca3:	sti    
  408ca4:	sbb    edi,DWORD PTR ds:0xea227df
  408caa:	pop    edx
  408cab:	sub    al,0x5e
  408cad:	call   0x1155da41
  408cb2:	hlt    
  408cb3:	or     ebx,DWORD PTR [ebp-0x49ef648b]
  408cb9:	loop   0x408c96
  408cbb:	cmc    
  408cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cbd:	push   0x12
  408cbf:	pop    esp
  408cc0:	xor    BYTE PTR [esi],0xe4
  408cc3:	jecxz  0x408d16
  408cc5:	push   ecx
  408cc6:	pop    edi
  408cc7:	cmp    cl,ch
  408cc9:	sub    al,0x73
  408ccb:	and    eax,0xcc461e42
  408cd0:	inc    edx
  408cd1:	mov    BYTE PTR [edi+0xe],0xe6
  408cd5:	pop    esi
  408cd6:	fwait
  408cd7:	out    0xed,al
  408cd9:	xchg   ecx,eax
  408cda:	out    dx,eax
  408cdb:	rcr    edx,1
  408cdd:	pop    esi
  408cde:	fimul  WORD PTR [edi-0x76a52f99]
  408ce4:	push   ds
  408ce5:	inc    ebx
  408ce6:	pushf  
  408ce7:	(bad)  
  408ce8:	std    
  408ce9:	inc    ebx
  408cea:	jo     0x408ca8
  408cec:	jno    0x408c7b
  408cee:	popa   
  408cef:	inc    eax
  408cf0:	jnp    0x408cd3
  408cf2:	pop    ds
  408cf3:	test   eax,0xf20b1865
  408cf8:	std    
  408cf9:	adc    al,0x57
  408cfb:	daa    
  408cfc:	shl    DWORD PTR [esi+0x35e36a79],1
  408d02:	in     eax,dx
  408d03:	jmp    0x1770:0xe15951d9
  408d0a:	test   BYTE PTR [esi-0x7c7f7953],al
  408d10:	sbb    DWORD PTR [ebx-0xc6245c2],edx
  408d16:	jge    0x408d78
  408d18:	fst    DWORD PTR [ebx]
  408d1a:	retf   0x3cf7
  408d1d:	retf   
  408d1e:	push   ebx
  408d1f:	fimul  WORD PTR [ebx]
  408d21:	mov    ch,0x6
  408d23:	mov    edi,0x17eff5bb
  408d28:	enter  0x51f3,0xfc
  408d2c:	mov    BYTE PTR [ebx],dl
  408d2e:	and    edi,ebx
  408d30:	mov    eax,ds:0x5c5f47f5
  408d35:	clc    
  408d36:	mov    edx,0x70083b2b
  408d3b:	jg     0x408d35
  408d3d:	jmp    FWORD PTR [ecx-0x5]
  408d40:	loopne 0x408d8b
  408d42:	iret   
  408d43:	aas    
  408d44:	shr    BYTE PTR [ecx+edi*8+0x50],cl
  408d48:	ss scas eax,DWORD PTR es:[edi]
  408d4a:	xor    DWORD PTR [ebp-0x67],esp
  408d4d:	cmp    bl,al
  408d4f:	fisttp QWORD PTR [edx]
  408d51:	and    ch,cl
  408d53:	mov    edi,0x3918d420
  408d58:	test   DWORD PTR [edx+0x115ec4f3],edx
  408d5e:	je     0x408d28
  408d60:	mov    eax,ds:0xcff4bfb4
  408d65:	fs inc ebx
  408d67:	push   0x1fd7ede1
  408d6c:	ja     0x408d4a
  408d6e:	(bad)  
  408d6f:	out    0xb2,al
  408d71:	sbb    al,0x6d
  408d73:	lahf   
  408d74:	pop    ds
  408d75:	and    BYTE PTR [ebx],ch
  408d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d78:	loopne 0x408d7e
  408d7a:	sub    DWORD PTR [edi-0x79b31fd1],edx
  408d80:	lods   eax,DWORD PTR ds:[esi]
  408d81:	inc    esi
  408d82:	sbb    BYTE PTR [ecx],cl
  408d84:	xchg   ebx,eax
  408d85:	mov    esp,0x2ec8fd5f
  408d8a:	pop    eax
  408d8b:	push   ds
  408d8c:	and    eax,DWORD PTR [eax]
  408d8e:	aaa    
  408d8f:	jmp    0x2843:0xf1d4a966
  408d96:	hlt    
  408d97:	inc    edi
  408d98:	scas   eax,DWORD PTR es:[edi]
  408d99:	push   es
  408d9a:	(bad)  
  408d9b:	(bad)  
  408d9c:	mov    dl,0x3d
  408d9e:	je     0x408e0c
  408da0:	push   cs
  408da1:	ror    BYTE PTR [edx+edi*1],1
  408da4:	push   cs
  408da5:	in     al,dx
  408da6:	in     al,dx
  408da7:	das    
  408da8:	cmp    DWORD PTR [edx],ecx
  408daa:	lods   al,BYTE PTR ds:[esi]
  408dab:	btr    DWORD PTR [esi+ebp*8-0x34],0xe
  408db1:	push   cs
  408db2:	mov    ds:0xc83b95e2,al
  408db7:	test   eax,0xbcf7753b
  408dbc:	or     ebp,ebp
  408dbe:	dec    edi
  408dbf:	in     eax,0x93
  408dc1:	je     0x408da7
  408dc3:	adc    ecx,edi
  408dc5:	jnp    0x408e01
  408dc7:	fnsave [ebp-0x48]
  408dca:	or     eax,0xb3493524
  408dcf:	adc    al,0x5f
  408dd1:	or     edx,ecx
  408dd3:	cmc    
  408dd4:	gs push es
  408dd6:	jnp    0x408df9
  408dd8:	rcl    ch,1
  408dda:	jo     0x408dbc
  408ddc:	loope  0x408db5
  408dde:	adc    BYTE PTR [ebx-0x19463585],dh
  408de4:	enter  0xb936,0x4e
  408de8:	pop    ebx
  408de9:	test   eax,eax
  408deb:	inc    esi
  408dec:	add    eax,0xa2365e25
  408df1:	push   ecx
  408df2:	cdq    
  408df3:	popf   
  408df4:	push   ebx
  408df5:	outs   dx,BYTE PTR ds:[esi]
  408df6:	call   0x4958:0x778d4d9d
  408dfd:	xchg   ebp,eax
  408dfe:	adc    al,0xec
  408e00:	enter  0x4d67,0xdd
  408e04:	pop    esp
  408e05:	repz mov WORD PTR [ebp+eiz*8-0x61cc7baa],fs
  408e0d:	jns    0x408df6
  408e0f:	popa   
  408e10:	aas    
  408e11:	call   0x2040ee52
  408e16:	ins    DWORD PTR es:[edi],dx
  408e17:	xor    DWORD PTR [eax],ecx
  408e19:	retf   
  408e1a:	add    al,0xbb
  408e1d:	cli    
  408e1e:	mov    dl,0xe6
  408e20:	into   
  408e21:	pop    eax
  408e22:	sahf   
  408e23:	(bad)  [ecx+0xe]
  408e26:	jecxz  0x408dde
  408e28:	mov    bl,0x85
  408e2a:	mov    eax,ds:0x67720912
  408e2f:	clc    
  408e30:	shl    DWORD PTR [edx+0x508e0782],cl
  408e36:	pop    ds
  408e37:	(bad)  
  408e38:	addr16 into 
  408e3a:	sti    
  408e3b:	and    ecx,DWORD PTR [ebx]
  408e3d:	ds call 0x5f6e4fd6
  408e43:	and    cl,0xab
  408e46:	cwde   
  408e47:	mov    bl,0x10
  408e49:	aas    
  408e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4b:	dec    esp
  408e4c:	stos   DWORD PTR es:[edi],eax
  408e4d:	mov    al,0x80
  408e4f:	(bad)  
  408e51:	sahf   
  408e52:	cdq    
  408e53:	pop    edi
  408e54:	lods   al,BYTE PTR ds:[esi]
  408e55:	mov    bl,0x8e
  408e57:	xor    al,0xe4
  408e59:	bswap  ebx
  408e5b:	ja     0x408df9
  408e5d:	sbb    eax,0x1808de08
  408e62:	pop    edx
  408e63:	mov    esi,0xed2d22a0
  408e68:	pop    ebp
  408e69:	push   ecx
  408e6a:	adc    bl,0xf2
  408e6d:	dec    ebp
  408e6e:	or     ebx,DWORD PTR [ecx+0xc]
  408e71:	inc    ebx
  408e72:	stc    
  408e73:	dec    ecx
  408e74:	xlat   BYTE PTR ds:[ebx]
  408e75:	pop    eax
  408e76:	out    dx,eax
  408e77:	data16 mov ah,0xe8
  408e7a:	pushf  
  408e7b:	lods   al,BYTE PTR ds:[esi]
  408e7c:	cmp    dh,dh
  408e7e:	sbb    BYTE PTR [edi],ch
  408e80:	mov    WORD PTR [bp+si+0x2c3a],ds
  408e85:	cmp    DWORD PTR [eax+0x60],esp
  408e88:	pop    ebp
  408e89:	inc    ebx
  408e8a:	mov    bl,0x9
  408e8c:	test   al,0x8b
  408e8e:	sahf   
  408e8f:	imul   DWORD PTR [eax+0x5a]
  408e92:	sbb    BYTE PTR [ecx],dh
  408e94:	gs jno 0x408e85
  408e97:	cmp    BYTE PTR [edx+0xbe4d3f9],bh
  408e9d:	sbb    DWORD PTR [esi+edx*2-0x563af837],ecx
  408ea4:	jecxz  0x408ee7
  408ea6:	fldcw  WORD PTR [edx+0x52]
  408ea9:	adc    DWORD PTR [esi-0xae8d23c],ecx
  408eaf:	sbb    BYTE PTR [ecx+eax*8],0x66
  408eb3:	sbb    DWORD PTR [eax-0x55],eax
  408eb6:	popf   
  408eb7:	lea    edx,[ebx+0x46cc35e5]
  408ebd:	shl    ecx,cl
  408ebf:	fistp  QWORD PTR [esi+0x45]
  408ec2:	repz sbb al,BYTE PTR [esi]
  408ec5:	rcr    BYTE PTR [edi],cl
  408ec7:	lock sub DWORD PTR [ecx],ebp
  408eca:	popf   
  408ecb:	cwde   
  408ecc:	daa    
  408ecd:	adc    al,0x9a
  408ecf:	(bad)  
  408ed0:	mov    esp,0x86aec2d0
  408ed5:	stos   DWORD PTR es:[edi],eax
  408ed6:	mov    ebp,0xa0127695
  408edb:	test   al,0xa0
  408edd:	inc    eax
  408ede:	(bad)  
  408edf:	(bad)  
  408ee0:	popa   
  408ee1:	xchg   ebx,eax
  408ee2:	xchg   esi,eax
  408ee3:	adc    bh,bh
  408ee5:	hlt    
  408ee6:	push   esp
  408ee7:	cli    
  408ee8:	cwde   
  408ee9:	gs fadd st,st(7)
  408eec:	rol    DWORD PTR [edx-0x4],cl
  408eef:	push   edi
  408ef0:	call   0x22557d78
  408ef5:	pop    esi
  408ef6:	bound  edx,QWORD PTR [eax-0x67]
  408ef9:	adc    eax,0xb7fc851f
  408efe:	cmp    BYTE PTR [edi],cl
  408f00:	jmp    FWORD PTR [esi+0x56]
  408f03:	add    ch,BYTE PTR [eax-0xb]
  408f06:	sub    BYTE PTR [ebp-0x57229506],dh
  408f0c:	cmp    DWORD PTR [esi-0x3e],esp
  408f0f:	xchg   ebp,eax
  408f10:	shr    dh,0x3c
  408f13:	ficomp WORD PTR [ebp+0x4af38b8a]
  408f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1a:	into   
  408f1b:	(bad)  
  408f1c:	push   esi
  408f1d:	cmp    BYTE PTR [esi-0x6328b106],dh
  408f23:	jb     0x408f43
  408f25:	xor    BYTE PTR [eax],0x18
  408f28:	inc    esi
  408f29:	pop    ebx
  408f2a:	jge    0x408f77
  408f2c:	xlat   BYTE PTR ds:[ebx]
  408f2d:	lahf   
  408f2e:	mov    esp,0x1a80a5a1
  408f33:	or     dh,BYTE PTR [ebp-0x11]
  408f36:	sahf   
  408f37:	mov    WORD PTR [edx+0x1bf7fe59],cs
  408f3d:	test   bh,dl
  408f3f:	test   BYTE PTR [edi+0x59f3a831],ch
  408f45:	jns    0x408f41
  408f47:	sub    esi,esi
  408f49:	das    
  408f4a:	or     BYTE PTR [edx+eiz*8-0x1e],dl
  408f4e:	add    ecx,DWORD PTR [eax+0x2e216f2a]
  408f54:	retf   
  408f55:	(bad)  
  408f56:	adc    ch,BYTE PTR [edx-0x2]
  408f59:	popf   
  408f5a:	sub    eax,0xbd7846f6
  408f5f:	sbb    BYTE PTR [ebx],0xc
  408f62:	jbe    0x408f5f
  408f64:	hlt    
  408f65:	cmc    
  408f66:	xchg   ebx,eax
  408f67:	xchg   edx,eax
  408f68:	scas   al,BYTE PTR es:[edi]
  408f69:	int    0x1d
  408f6b:	mov    DWORD PTR [edi],ebp
  408f6d:	clc    
  408f6e:	stos   BYTE PTR es:[edi],al
  408f6f:	xchg   ebp,eax
  408f70:	(bad)  
  408f71:	sbb    bh,dl
  408f73:	or     edi,edi
  408f75:	sbb    DWORD PTR es:[edi],ebx
  408f78:	mov    dh,0x56
  408f7a:	std    
  408f7b:	les    ebx,FWORD PTR [edi+0x4b]
  408f7e:	ffree  st(5)
  408f80:	leave  
  408f81:	xor    ebx,eax
  408f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f84:	retf   0x8b50
  408f87:	pop    edx
  408f88:	cmc    
  408f89:	dec    edx
  408f8a:	les    edi,FWORD PTR [edi+0x50]
  408f8d:	mov    eax,0x86c9c3e6
  408f92:	cmp    edi,DWORD PTR ds:0x75954b9c
  408f98:	sti    
  408f99:	jle    0x408f96
  408f9b:	(bad)  
  408f9c:	and    al,0x35
  408f9e:	retf   
  408f9f:	mov    al,0xd5
  408fa1:	dec    ebx
  408fa2:	pop    ss
  408fa3:	popf   
  408fa4:	push   0x70
  408fa6:	mov    esp,0x87f9edf9
  408fab:	jle    0x408fff
  408fad:	call   0x620b8141
  408fb2:	dec    esi
  408fb3:	lds    eax,FWORD PTR [esi+ebp*2+0x45ae32ad]
  408fba:	ins    BYTE PTR es:[edi],dx
  408fbb:	das    
  408fbc:	sbb    DWORD PTR [edx],ebx
  408fbe:	nop
  408fbf:	inc    edx
  408fc0:	pop    ds
  408fc1:	leave  
  408fc2:	mov    es:0xb5cf3c8b,eax
  408fc8:	mov    cl,0x86
  408fca:	push   es
  408fcb:	or     eax,0xd63ab801
  408fd0:	and    eax,0xe0eae1f7
  408fd5:	retf   
  408fd6:	out    0x1c,eax
  408fd8:	cmp    BYTE PTR [edx],0x7
  408fdb:	xchg   esi,eax
  408fdc:	mov    al,0x62
  408fde:	inc    esi
  408fdf:	mov    edi,0x9e776c35
  408fe4:	bound  esi,QWORD PTR [ebx]
  408fe6:	sub    al,0x63
  408fe8:	mov    esi,0x90dad93e
  408fed:	xor    DWORD PTR [ecx-0x13],edi
  408ff0:	lahf   
  408ff1:	in     al,0xca
  408ff3:	icebp  
  408ff4:	cld    
  408ff5:	add    eax,0x441926e6
  408ffa:	push   edx
  408ffb:	adc    bl,BYTE PTR [eax-0x19]
  408ffe:	cdq    
  408fff:	cmp    dh,dl
  409001:	or     bh,ch
  409003:	(bad)
  409006:	sub    eax,0x38567e86
  40900b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900c:	fst    DWORD PTR [eax+edx*4+0x651648bb]
  409013:	push   0x976bddbd
  409018:	std    
  409019:	fldcw  WORD PTR [edi]
  40901b:	dec    esi
  40901c:	mov    esi,eax
  40901e:	mov    esi,ebp
  409020:	repnz xor eax,DWORD PTR [ebp-0x793868b]
  409027:	idiv   BYTE PTR [ecx+eiz*4]
  40902a:	jecxz  0x40901f
  40902c:	aaa    
  40902d:	leave  
  40902e:	pop    ds
  40902f:	call   0xd351:0x75ce3e2d
  409036:	aas    
  409037:	iret   
  409038:	jmp    0x409019
  40903a:	cmc    
  40903b:	fnsave ds:0xb92cad8c
  409041:	out    0x27,eax
  409043:	loop   0x409090
  409045:	sub    al,0xe0
  409047:	fsub   QWORD PTR [ebp+0x53]
  40904a:	jle    0x4090a8
  40904c:	mov    bh,0xd1
  40904e:	jmp    0x2f1f:0xd3f9b4f2
  409055:	arpl   WORD PTR [ebx+0x62],sp
  409058:	call   0x34dd:0xab0d2984
  40905f:	fcom   QWORD PTR [eax+edi*1]
  409062:	fiadd  WORD PTR [eax+ecx*4-0x20e4c05d]
  409069:	pop    ss
  40906a:	pop    eax
  40906b:	(bad)  
  40906c:	jnp    0x4090d3
  40906e:	sbb    edx,ecx
  409070:	sbb    BYTE PTR [edi-0x26ddec79],bh
  409076:	mov    bl,0xdf
  409078:	jb     0x4090d8
  40907a:	push   ss
  40907b:	jbe    0x409046
  40907d:	mov    ch,0xf7
  40907f:	call   0x4990:0xd505a72
  409086:	push   ebx
  409087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409088:	xor    DWORD PTR [ebx-0x3d],0x6683333b
  40908f:	and    cl,BYTE PTR [edi+0x42]
  409092:	aas    
  409093:	fidivr DWORD PTR fs:[esi-0x63a8e899]
  40909a:	repz jmp 0xf18e:0x27c87440
  4090a2:	sti    
  4090a3:	mov    al,ds:0x99da1021
  4090a8:	or     al,0xb0
  4090aa:	push   edi
  4090ab:	push   ds
  4090ac:	xor    BYTE PTR [ebx+eiz*8],bh
  4090af:	jbe    0x409063
  4090b1:	adc    eax,0x6d0218d5
  4090b6:	or     eax,0xf8a1cc2f
  4090bb:	idiv   BYTE PTR ds:0x70123481
  4090c1:	(bad)  
  4090c2:	hlt    
  4090c3:	xchg   DWORD PTR [esi+edi*8-0x7d80fce0],edx
  4090ca:	shl    dh,1
  4090cc:	jbe    0x4090f5
  4090ce:	adc    eax,ebx
  4090d0:	push   ds
  4090d1:	mov    ebp,0x47b90d8b
  4090d6:	dec    edi
  4090d7:	lds    edi,FWORD PTR [edx+0x57cda5f8]
  4090dd:	add    al,0xcd
  4090df:	punpckhwd mm4,QWORD PTR [eax]
  4090e2:	or     al,0xc5
  4090e4:	das    
  4090e5:	imul   edi,DWORD PTR [eax-0x3b],0xaeedc02c
  4090ec:	jae    0x4090c4
  4090ee:	mov    esp,DWORD PTR [ebp-0x1aa60ace]
  4090f4:	add    dl,BYTE PTR [ebx-0x39f5c5bb]
  4090fa:	cld    
  4090fb:	rol    BYTE PTR ds:0x5ad03d2f,0xd1
  409102:	cdq    
  409103:	stc    
  409104:	mov    eax,ebp
  409106:	and    eax,0xebce4c3a
  40910b:	mov    BYTE PTR [esp+edx*8+0x6f],bh
  40910f:	push   ecx
  409111:	(bad)  
  409112:	sbb    al,0xe
  409114:	push   ebp
  409115:	and    esp,esp
  409117:	dec    eax
  409118:	and    dh,dh
  40911a:	outs   dx,DWORD PTR ds:[esi]
  40911b:	mov    BYTE PTR [esi+0x6a],cl
  40911e:	nop
  40911f:	ds mov al,0x10
  409122:	jae    0x409141
  409124:	cmp    cl,BYTE PTR [ecx]
  409126:	dec    edi
  409127:	cmp    BYTE PTR [edi],bl
  409129:	add    DWORD PTR [edi-0x58],edx
  40912c:	mov    edx,0x9c5f19ab
  409131:	cld    
  409132:	ret    
  409133:	sar    BYTE PTR [ebp+0x54],0xf1
  409137:	lahf   
  409138:	dec    ecx
  409139:	mov    ebx,DWORD PTR [ebx+0x23]
  40913c:	in     eax,0xf
  40913e:	outs   dx,DWORD PTR ds:[esi]
  40913f:	or     DWORD PTR [esi+edx*8+0x6be9cb60],edi
  409146:	icebp  
  409147:	mov    ecx,0xeec3333b
  40914c:	pop    edx
  40914d:	sub    al,0x1c
  40914f:	idiv   BYTE PTR [ebx+ebx*4+0x4a]
  409153:	adc    eax,0x3ac3800e
  409158:	pop    eax
  409159:	mov    WORD PTR [edi+0x1ca6c5af],?
  40915f:	ret    0x8779
  409162:	adc    DWORD PTR ds:0x2b6cc239,0x4c
  409169:	test   al,0x1a
  40916b:	inc    edx
  40916c:	xchg   ecx,eax
  40916d:	and    ah,bl
  40916f:	adc    BYTE PTR [eax],bh
  409171:	xchg   ecx,eax
  409172:	add    edx,DWORD PTR [ebp+ebp*1-0x607b94a6]
  409179:	test   eax,0x6462dc4c
  40917e:	frstor [eax-0x156183c7]
  409184:	sti    
  409185:	scas   eax,DWORD PTR es:[edi]
  409186:	shl    DWORD PTR [eax+edx*8],0x6c
  40918a:	cmp    BYTE PTR [eax-0x23],ch
  40918d:	adc    cl,BYTE PTR [esi]
  40918f:	test   eax,0x77bf443c
  409194:	xor    eax,0xe3285a90
  409199:	out    dx,eax
  40919a:	mov    esi,0x1f72a662
  40919f:	adc    esp,ebp
  4091a1:	stos   BYTE PTR es:[edi],al
  4091a2:	add    ch,BYTE PTR [eax]
  4091a4:	rcl    BYTE PTR [ebx+0x3246c759],0x91
  4091ab:	arpl   WORD PTR [edi],cx
  4091ad:	ds or  al,0x2c
  4091b0:	xchg   edi,eax
  4091b1:	std    
  4091b2:	dec    esp
  4091b3:	dec    ecx
  4091b4:	std    
  4091b5:	out    0x9d,eax
  4091b7:	fistp  QWORD PTR [edi+ecx*2]
  4091ba:	shl    BYTE PTR [ecx-0x36a7fa79],0xe
  4091c1:	push   edi
  4091c2:	or     DWORD PTR [ecx-0x23],edi
  4091c5:	retf   0x35e1
  4091c8:	jmp    0x4091c2
  4091ca:	xchg   ecx,eax
  4091cb:	std    
  4091cc:	mov    ebp,ss
  4091ce:	or     ch,BYTE PTR [ebx-0x57]
  4091d1:	fdiv   DWORD PTR [eax+0x77]
  4091d4:	and    eax,0x1115ff78
  4091d9:	mov    cl,0x43
  4091db:	inc    edi
  4091dc:	adc    al,0xf8
  4091de:	adc    esp,DWORD PTR [ebx-0x69396c07]
  4091e4:	cmp    esi,esi
  4091e6:	rcr    BYTE PTR [ebp-0x79],cl
  4091e9:	test   ebx,edi
  4091eb:	lahf   
  4091ec:	aad    0x48
  4091ee:	pop    ss
  4091ef:	out    0x15,eax
  4091f1:	cdq    
  4091f2:	or     DWORD PTR [ecx],esi
  4091f4:	mov    ds:0xf655c900,al
  4091f9:	or     al,0x4b
  4091fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091fc:	int    0x53
  4091fe:	outs   dx,BYTE PTR ds:[esi]
  4091ff:	push   cs
  409200:	lmsw   WORD PTR [eax-0x79]
  409204:	or     al,0xa7
  409206:	add    BYTE PTR [ebx+0x16],dh
  409209:	aad    0x50
  40920b:	and    eax,0x9054a6bc
  409210:	mov    bh,0xea
  409212:	mov    ah,0xcb
  409214:	inc    edx
  409215:	cmp    al,dl
  409217:	mov    al,bh
  409219:	rol    BYTE PTR [edi],cl
  40921b:	call   0xfb791c7d
  409220:	mov    ecx,0x3ce50a11
  409225:	cmp    dh,BYTE PTR [edx]
  409227:	push   esi
  409228:	mov    esp,0x40bab26b
  40922d:	cmp    BYTE PTR [ebp-0x75],0x9c
  409231:	xchg   edi,eax
  409232:	xchg   esi,esp
  409234:	out    0x3c,al
  409236:	imul   edi,DWORD PTR [esi-0x1d2f1440],0x5865acf0
  409240:	xchg   ebp,eax
  409241:	push   esi
  409242:	jo     0x40927a
  409244:	(bad)  
  409245:	in     al,dx
  409246:	cli    
  409247:	push   ebp
  409248:	(bad)  
  40924a:	jae    0x409218
  40924c:	pushf  
  40924d:	test   DWORD PTR [edx],ecx
  40924f:	pusha  
  409250:	xchg   esi,eax
  409251:	ds sub al,0xb3
  409254:	dec    eax
  409255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409256:	add    ecx,DWORD PTR [ecx]
  409258:	push   0xffffffdd
  40925a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925b:	lods   eax,DWORD PTR ds:[esi]
  40925c:	jbe    0x40922b
  40925e:	and    DWORD PTR [edi+eax*1-0x4c420461],eax
  409265:	or     edx,eax
  409267:	test   DWORD PTR [edx],eax
  409269:	xor    al,0x3a
  40926b:	gs retf 
  40926d:	ds lahf 
  40926f:	mov    eax,0x8f116c65
  409274:	das    
  409275:	dec    eax
  409276:	mov    ?,WORD PTR [edi-0x4ab1bf0e]
  40927c:	sub    al,0x37
  40927e:	frstor cs:[edx-0x3759d62]
  409285:	xlat   BYTE PTR ds:[ebx]
  409286:	ins    DWORD PTR es:[edi],dx
  409287:	sub    DWORD PTR [eax+0x4295e211],0xffffffee
  40928e:	push   eax
  40928f:	push   edi
  409290:	ja     0x40927d
  409292:	ins    DWORD PTR es:[edi],dx
  409293:	mov    al,0x7c
  409295:	retf   
  409296:	mov    bl,0x18
  409298:	sub    al,0x65
  40929a:	cmp    ch,ah
  40929c:	mov    BYTE PTR [eax+0x1f],ch
  40929f:	cmp    dh,ch
  4092a1:	ja     0x4092b7
  4092a3:	loope  0x409280
  4092a5:	popf   
  4092a6:	mov    edi,0xb463642b
  4092ab:	push   es
  4092ac:	nop
  4092ad:	test   al,0x57
  4092af:	mov    eax,ds:0xeff74116
  4092b4:	ret    0x9448
  4092b7:	adc    bh,cl
  4092b9:	ret    
  4092ba:	in     al,dx
  4092bb:	pop    ebp
  4092bc:	shl    DWORD PTR [ecx-0x7b254e11],0xc
  4092c3:	and    edx,DWORD PTR [edx-0x6cb65975]
  4092c9:	out    0x45,al
  4092cb:	imul   sp,si,0x9303
  4092d0:	jg     0x4092ae
  4092d2:	or     dl,ch
  4092d4:	fwait
  4092d5:	sti    
  4092d6:	sahf   
  4092d7:	jle    0x4092fe
  4092d9:	mov    ch,0x2f
  4092db:	mov    ds:0xfc726002,eax
  4092e0:	jmp    0xda73411d
  4092e5:	aaa    
  4092e6:	cmc    
  4092e7:	(bad)  
  4092e8:	ficomp DWORD PTR [esi+0x2d]
  4092eb:	out    0x84,al
  4092ed:	in     eax,dx
  4092ee:	sti    
  4092ef:	adc    eax,0x129e1aa5
  4092f4:	fcmovb st,st(4)
  4092f6:	add    al,0xda
  4092f8:	fld    TBYTE PTR [ebx+0x17]
  4092fb:	pop    ebx
  4092fc:	addr16 retf 
  4092fe:	mov    dl,0xf6
  409300:	sub    esi,0x2
  409303:	pushf  
  409304:	inc    ecx
  409305:	jnp    0x409341
  409307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409308:	ds adc al,0x3b
  40930b:	(bad)  
  40930c:	mov    bh,0x4b
  40930e:	jg     0x4092f4
  409310:	lea    ebx,[edx]
  409312:	mov    edi,0x4f113154
  409317:	xchg   BYTE PTR [edi],ah
  409319:	outs   dx,BYTE PTR ds:[esi]
  40931a:	push   eax
  40931b:	mov    eax,0xa8c81176
  409320:	sub    dl,bl
  409322:	loopne 0x4092d5
  409324:	cld    
  409325:	cwde   
  409326:	sbb    eax,0xcd6f9970
  40932b:	(bad)  
  40932c:	or     eax,0x4c9400c3
  409331:	mov    al,ds:0xe8c60e0a
  409336:	mov    ebp,0x484374d8
  40933b:	vpsrad xmm0,xmm2,XMMWORD PTR [edi]
  40933f:	call   0x5db3:0x473d65d5
  409346:	sub    BYTE PTR [ebx+0x1d034054],dh
  40934c:	or     DWORD PTR [ebp-0x7ff42d24],0xd
  409353:	(bad)  [esi-0x3b7f8d7b]
  409359:	and    DWORD PTR [ebx-0x3a11475a],ebp
  40935f:	push   ebp
  409360:	daa    
  409361:	repz pusha 
  409363:	push   ds
  409364:	mov    BYTE PTR [eax],dl
  409366:	pushf  
  409367:	(bad)  
  40936a:	mov    BYTE PTR [edx+eax*8-0x1c],bh
  40936e:	out    dx,eax
  40936f:	clc    
  409370:	cmc    
  409371:	mov    ecx,0xf5a3e339
  409376:	and    al,0xa1
  409378:	call   0x264a:0x6e6df807
  40937f:	and    eax,edi
  409381:	mov    al,ds:0x75750533
  409386:	cmp    BYTE PTR [esp+eiz*4],dl
  409389:	movups xmm2,XMMWORD PTR [esi]
  40938c:	mov    esp,0x59f6a3f5
  409391:	xor    ebp,DWORD PTR [eax+0xa]
  409394:	mov    bh,cl
  409396:	sbb    eax,0x94419628
  40939b:	add    esp,DWORD PTR [edx+0x69dbe4a6]
  4093a1:	mov    dl,0x3d
  4093a3:	pop    ebx
  4093a4:	repnz repz push 0xb86f2063
  4093ab:	cli    
  4093ac:	adc    edi,ecx
  4093ae:	push   ecx
  4093af:	nop
  4093b0:	mov    ds:0xceb0a609,eax
  4093b5:	sbb    DWORD PTR [ebp-0x6b],ebp
  4093b8:	out    0x5,al
  4093ba:	jne    0x409401
  4093bc:	and    al,BYTE PTR [edi+ebp*8]
  4093bf:	fst    QWORD PTR [esi+0xb07f87]
  4093c5:	stos   DWORD PTR es:[edi],eax
  4093c6:	loopne 0x409388
  4093c8:	mov    ds:0xe20fc503,eax
  4093cd:	pop    esi
  4093ce:	push   cs
  4093cf:	mov    edx,0xef955c6c
  4093d4:	xlat   BYTE PTR ds:[ebx]
  4093d5:	(bad)  
  4093d6:	and    BYTE PTR [ecx],al
  4093d8:	inc    edx
  4093d9:	sbb    DWORD PTR [edx-0x174693ae],ebp
  4093df:	jmp    0x409377
  4093e1:	mov    dl,0x34
  4093e3:	inc    esi
  4093e4:	rcr    BYTE PTR [edx-0x45c9101c],cl
  4093ea:	push   eax
  4093eb:	retf   
  4093ec:	arpl   WORD PTR [ecx+0x210f7f9e],di
  4093f2:	clc    
  4093f3:	sub    al,0xbd
  4093f5:	sahf   
  4093f6:	imul   edx,ecx,0x7f
  4093f9:	sub    BYTE PTR fs:[eax-0x69],bl
  4093fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fe:	push   0xffffff95
  409400:	pop    eax
  409401:	ret    
  409402:	push   0xffffffbb
  409404:	pop    es
  409405:	into   
  409406:	into   
  409407:	sub    BYTE PTR [eax+0x58],al
  40940a:	or     esi,DWORD PTR [esi+0x2d]
  40940d:	lahf   
  40940e:	push   ecx
  40940f:	pop    ebp
  409410:	cld    
  409411:	inc    esp
  409412:	out    dx,al
  409413:	cli    
  409414:	xchg   BYTE PTR [ebx+0x39f9026c],cl
  40941a:	sub    eax,0xf047f335
  40941f:	and    BYTE PTR [ebx+0x6867c9bd],0xfb
  409426:	jno    0x40944e
  409428:	xchg   edx,eax
  409429:	push   esi
  40942a:	push   ecx
  40942b:	aaa    
  40942c:	xchg   edi,eax
  40942d:	sbb    BYTE PTR [ebx+0x2ad7f7e1],dh
  409433:	test   BYTE PTR [esi-0x4f31f13d],ch
  409439:	mov    ebx,0x6a24e069
  40943e:	jge    0x409417
  409440:	push   esi
  409441:	push   0x197b4c1e
  409446:	inc    esp
  409447:	dec    edi
  409448:	xor    BYTE PTR [ebx],bh
  40944a:	in     al,dx
  40944b:	jp     0x40943a
  40944d:	or     DWORD PTR [ebp+0x7090aff9],ebx
  409453:	mov    ebp,0xdf784861
  409458:	imul   ebp,DWORD PTR [edx],0x78e8364f
  40945e:	rcr    BYTE PTR [esi+0x4d],0x18
  409462:	test   cl,cl
  409464:	fidivr DWORD PTR [esi]
  409466:	pop    edx
  409467:	mov    ebx,0xf169d560
  40946c:	jnp    0x40948f
  40946e:	fimul  WORD PTR [esi+ebx*8]
  409471:	sahf   
  409472:	ins    BYTE PTR es:[edi],dx
  409473:	mov    cl,ch
  409475:	cdq    
  409476:	in     al,dx
  409477:	cwde   
  409478:	cmp    ecx,esi
  40947a:	cmp    ch,bl
  40947c:	test   eax,0xf9f6d615
  409481:	enter  0xf198,0x65
  409485:	and    al,0x15
  409487:	dec    esi
  409488:	loope  0x4094f6
  40948a:	inc    esi
  40948b:	shl    DWORD PTR [esi-0x7b03e22d],cl
  409491:	sbb    ah,BYTE PTR [edx]
  409493:	jp     0x409454
  409495:	jns    0x4094e7
  409497:	push   esp
  409498:	leave  
  409499:	mov    ebp,0x526fd0fe
  40949e:	(bad)  
  40949f:	and    esp,DWORD PTR [ecx]
  4094a1:	and    DWORD PTR [eax+0x30a491d4],esp
  4094a7:	into   
  4094a8:	mov    ebx,0x9f93c781
  4094ad:	add    bh,BYTE PTR [eax-0x54]
  4094b0:	addr16 xchg ebp,eax
  4094b2:	call   0xe9da:0x30de862a
  4094b9:	fidivr DWORD PTR [esi-0x12]
  4094bc:	retf   
  4094bd:	or     DWORD PTR [ebx-0x4228c468],ecx
  4094c3:	lock out 0x1,eax
  4094c6:	pop    eax
  4094c7:	mov    BYTE PTR [eax+0x194d2651],ch
  4094cd:	jg     0x4094d3
  4094cf:	dec    ebp
  4094d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d1:	addr16 ss add eax,edi
  4094d5:	ds jb  0x409508
  4094d8:	pop    ebp
  4094d9:	jmp    0xdb99d1e1
  4094de:	ins    BYTE PTR es:[edi],dx
  4094df:	push   ebp
  4094e0:	cdq    
  4094e1:	in     al,dx
  4094e2:	(bad)  
  4094e3:	jbe    0x409524
  4094e5:	jne    0x409516
  4094e7:	js     0x40949e
  4094e9:	leave  
  4094ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094eb:	jp     0x409485
  4094ed:	icebp  
  4094ee:	adc    BYTE PTR [edx-0xa443286],bh
  4094f4:	mov    bl,0xf5
  4094f6:	mov    cl,0xe3
  4094f8:	call   0x5b7ba5b3
  4094fd:	add    eax,0xa541f930
  409502:	mov    al,0x17
  409504:	rcr    BYTE PTR [edi],0xaa
  409507:	pop    ds
  409508:	imul   ecx,DWORD PTR [ecx],0x4
  40950b:	pusha  
  40950c:	sub    eax,0x1c179e62
  409511:	pop    esi
  409512:	in     al,dx
  409513:	(bad)  
  409514:	cwde   
  409515:	jo     0x4094af
  409517:	std    
  409518:	xor    DWORD PTR [ebx-0x25],ebx
  40951b:	jmp    0x40952b
  40951d:	cld    
  40951e:	mov    dl,0xb7
  409520:	mov    edx,0x869bd631
  409525:	sti    
  409526:	add    edi,0x859f898b
  40952c:	or     ebp,edi
  40952e:	jnp    0x4094e6
  409530:	cld    
  409531:	adc    bl,BYTE PTR [esi+edx*8+0x59]
  409535:	fld    DWORD PTR [ecx+0x50]
  409538:	jle    0x409528
  40953a:	push   es
  40953b:	xchg   esp,eax
  40953c:	adc    edx,DWORD PTR [esi+esi*2+0x70]
  409540:	mov    cs,WORD PTR [edi-0xbeb5821]
  409546:	sahf   
  409547:	daa    
  409548:	sub    eax,esp
  40954a:	sti    
  40954b:	cpuid  
  40954d:	sbb    BYTE PTR [ecx-0x33],0x46
  409551:	mov    eax,ds:0x4c780b9c
  409556:	(bad)  [ecx+0x1f]
  409559:	(bad)  
  40955a:	aaa    
  40955b:	cmp    al,0x3a
  40955d:	push   ebp
  40955e:	adc    esi,DWORD PTR [ebx]
  409560:	bound  esp,QWORD PTR [esi+0x4e488688]
  409566:	mov    ?,WORD PTR [edx+0x1]
  409569:	and    al,0xd
  40956b:	jmp    0xe5fa:0xb55082a5
  409572:	arpl   WORD PTR [ebp-0x418fd716],bp
  409578:	stos   DWORD PTR es:[edi],eax
  409579:	lahf   
  40957a:	mov    eax,ds:0x7e8f1e6f
  40957f:	mov    ah,0xbf
  409581:	mov    edi,DWORD PTR [ecx-0x328751d9]
  409587:	fwait
  409588:	cmp    eax,0x8d615cf6
  40958d:	xchg   edi,eax
  40958e:	std    
  40958f:	retf   
  409590:	dec    edx
  409591:	sub    al,BYTE PTR [ebx+ecx*1]
  409594:	mov    esp,0x7fcceec5
  409599:	mov    eax,ds:0x1030f2f6
  40959e:	into   
  40959f:	and    ebp,DWORD PTR [edi+0x704f70e2]
  4095a5:	push   esp
  4095a6:	daa    
  4095a7:	repz jecxz 0x409568
  4095aa:	into   
  4095ab:	pop    esp
  4095ac:	mov    WORD PTR [ebp-0x75eb2d35],ds
  4095b2:	shl    dl,0xf2
  4095b5:	mov    ecx,0x39d74d15
  4095ba:	pop    eax
  4095bb:	or     esi,DWORD PTR [edi+0x7ac66cb4]
  4095c1:	mov    ss,WORD PTR [esi]
  4095c3:	sub    DWORD PTR [edx],edx
  4095c5:	xchg   ebx,eax
  4095c6:	lds    esp,FWORD PTR [ecx+0x8d5b50]
  4095cc:	ins    DWORD PTR es:[edi],dx
  4095cd:	cwde   
  4095ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cf:	jo     0x409620
  4095d1:	dec    esp
  4095d2:	ds iret 
  4095d4:	aad    0x19
  4095d6:	push   es
  4095d7:	out    0x8,al
  4095d9:	xchg   edi,eax
  4095da:	stos   BYTE PTR es:[edi],al
  4095db:	xor    al,BYTE PTR [eax]
  4095dd:	les    esi,FWORD PTR [esi-0x62]
  4095e0:	sbb    edi,DWORD PTR [ebp+0x47b118e3]
  4095e6:	mov    dh,0x72
  4095e8:	je     0x409601
  4095ea:	lods   al,BYTE PTR ds:[esi]
  4095eb:	jns    0x4095b5
  4095ed:	mov    BYTE PTR [esi-0x6b8f023a],0x58
  4095f4:	pop    ebx
  4095f5:	mov    ds:0xa7d56631,al
  4095fa:	ds dec eax
  4095fc:	add    BYTE PTR [edx-0x5bc697fd],al
  409602:	call   0x7117:0x5d1fc40d
  409609:	cmp    bh,bh
  40960b:	cmc    
  40960c:	xchg   ebx,eax
  40960d:	into   
  40960e:	and    ecx,edi
  409610:	sti    
  409611:	jle    0x409637
  409613:	cmc    
  409614:	xchg   DWORD PTR [ecx],eax
  409616:	test   BYTE PTR [ecx+0x2e],ah
  409619:	push   0xf
  40961b:	sub    al,0x9b
  40961d:	mov    edi,0x342715d7
  409622:	pop    edx
  409623:	and    esp,esi
  409625:	fwait
  409626:	mov    ebp,DWORD PTR [edx]
  409628:	xor    ebx,DWORD PTR ds:0x8f0253f0
  40962e:	test   DWORD PTR [eax],ebx
  409630:	je     0x4095c5
  409632:	stos   BYTE PTR es:[edi],al
  409633:	mov    ds,WORD PTR [esi]
  409635:	jle    0x4095ef
  409637:	out    dx,eax
  409638:	push   esi
  409639:	dec    esp
  40963a:	or     esp,ebp
  40963c:	cmp    eax,0xa335e17
  409641:	mov    eax,0x20262901
  409646:	jp     0x40969d
  409648:	aad    0x73
  40964a:	mov    eax,ds:0x6e960195
  40964f:	and    edx,edi
  409651:	arpl   WORD PTR [esi+0x6b],cx
  409654:	sbb    esi,esi
  409656:	stos   DWORD PTR es:[edi],eax
  409657:	adc    al,0x84
  409659:	push   edx
  40965a:	sbb    edi,0x8168b41b
  409660:	repz loop 0x409623
  409663:	loop   0x40967d
  409665:	fst    st(6)
  409667:	jmp    0xa167:0xdb671fd3
  40966e:	je     0x4096ea
  409670:	out    dx,al
  409671:	cmp    bl,BYTE PTR [edx-0x2753b5b9]
  409677:	and    DWORD PTR [edx-0xe47951],eax
  40967d:	jnp    0x4096c4
  40967f:	dec    ebx
  409680:	sar    BYTE PTR [ebx+0x223ea9d5],cl
  409686:	xchg   esi,eax
  409687:	aam    0x8b
  409689:	inc    edx
  40968a:	lods   eax,DWORD PTR ds:[esi]
  40968b:	jns    0x4096bd
  40968d:	shrd   esi,ecx,cl
  409690:	or     esp,ebp
  409692:	cmp    BYTE PTR [ebx],bh
  409694:	addr16 xchg edx,eax
  409696:	or     cl,BYTE PTR [ebx]
  409698:	push   es
  409699:	sbb    DWORD PTR [ebp+ebp*1+0x24],ebx
  40969d:	je     0x4096c0
  40969f:	add    eax,0xb20d13ee
  4096a4:	mov    ebp,0x782c3a57
  4096a9:	jmp    0x409658
  4096ab:	jns    0x4096ee
  4096ad:	and    DWORD PTR [esi+0x49da1771],ecx
  4096b3:	pop    ebx
  4096b4:	loope  0x40964d
  4096b6:	sti    
  4096b7:	jp     0x409724
  4096b9:	pop    ebx
  4096ba:	(bad)  
  4096bc:	jg     0x4096db
  4096be:	mov    ds:0xb6a4831d,al
  4096c3:	shl    DWORD PTR [edi-0x40],0xd5
  4096c7:	push   0x2503f897
  4096cc:	or     al,0x13
  4096ce:	ret    0x2041
  4096d1:	gs mov edi,0x2153076c
  4096d7:	add    ah,BYTE PTR [esi+0x1fd1c46f]
  4096dd:	inc    esi
  4096de:	push   ds
  4096df:	sbb    bh,dl
  4096e1:	add    dl,ch
  4096e3:	inc    esi
  4096e4:	hlt    
  4096e5:	xlat   BYTE PTR ds:[ebx]
  4096e6:	or     al,0xa3
  4096e8:	inc    esi
  4096e9:	fisub  DWORD PTR [eax+0x1]
  4096ec:	in     eax,dx
  4096ed:	cmp    eax,0xbf99d700
  4096f2:	or     DWORD PTR [esi+0x7bdbf0dc],edi
  4096f8:	push   0xffffff8f
  4096fa:	add    DWORD PTR [ebx+0x50],ebx
  4096fd:	mov    ds:0xa1f58eef,eax
  409702:	jne    0x409697
  409704:	pushf  
  409705:	popa   
  409706:	xchg   DWORD PTR [esi+ebp*4],ebx
  409709:	push   ebx
  40970a:	dec    ebx
  40970b:	retf   0x1e05
  40970e:	repz adc al,0xa1
  409711:	ret    
  409712:	aas    
  409713:	add    dh,BYTE PTR [ebx]
  409715:	cmp    ecx,DWORD PTR cs:[edi-0x7d]
  409719:	ror    DWORD PTR [esi+0x34329dd9],0xd0
  409720:	mov    ecx,0x7ff2fdf9
  409725:	add    esp,edi
  409727:	dec    esi
  409728:	sub    edx,DWORD PTR [ecx+0x5f]
  40972b:	pop    edx
  40972c:	cmp    al,0xe6
  40972e:	aam    0x46
  409730:	lods   al,BYTE PTR ds:[esi]
  409731:	sbb    BYTE PTR [esi+0x35b0c1c],ah
  409737:	das    
  409738:	pop    ebx
  409739:	das    
  40973a:	push   ebp
  40973b:	push   0x5b842cd1
  409740:	mov    ds:0x68921601,eax
  409745:	mov    DWORD PTR [esp+eax*8],0x4028e5dc
  40974c:	js     0x4096e6
  40974e:	test   DWORD PTR [edi-0x3fb28900],eax
  409754:	cdq    
  409755:	mov    bl,BYTE PTR [eax]
  409757:	sar    DWORD PTR [ebx],0x97
  40975a:	cmc    
  40975b:	loopne 0x4097cc
  40975d:	lds    edx,FWORD PTR [ecx-0x47]
  409760:	leave  
  409761:	or     edi,esp
  409763:	jp     0x40972f
  409765:	pushf  
  409766:	imul   edi,edi,0xffffff92
  409769:	in     al,0xaf
  40976b:	(bad)  
  40976c:	sbb    bl,al
  40976e:	scas   eax,DWORD PTR es:[edi]
  40976f:	stos   BYTE PTR es:[edi],al
  409770:	and    ebx,esi
  409772:	mov    DWORD PTR [edx],edx
  409774:	adc    eax,0x5ce91d8c
  409779:	fnsave [edx+0x714684f5]
  40977f:	enter  0x37c0,0x91
  409783:	test   eax,0x5f7e5bde
  409788:	push   cs
  409789:	cmp    eax,0xbdd0a1f4
  40978e:	cmp    BYTE PTR [esi-0x60],0x12
  409792:	jle    0x40977a
  409794:	lds    edx,FWORD PTR [edi]
  409796:	int    0x64
  409798:	xchg   DWORD PTR [ecx],edi
  40979a:	in     eax,0x33
  40979c:	sbb    al,0x93
  40979e:	inc    edi
  40979f:	pusha  
  4097a0:	or     al,0x2
  4097a2:	inc    eax
  4097a3:	adc    ecx,DWORD PTR [ecx]
  4097a5:	lock cs addr16 cmc 
  4097a9:	mov    eax,0x834f5f44
  4097ae:	(bad)  [edi]
  4097b0:	dec    ecx
  4097b1:	dec    ebx
  4097b2:	icebp  
  4097b3:	leave  
  4097b4:	and    DWORD PTR [esp+ebx*8+0x19],eax
  4097b8:	xchg   ecx,eax
  4097b9:	mov    WORD PTR [esi-0x78],es
  4097bc:	adc    al,0x9f
  4097be:	(bad)  
  4097bf:	pop    eax
  4097c0:	mov    ecx,0xc80c5997
  4097c5:	push   ebp
  4097c6:	adc    BYTE PTR [ebp+ecx*8-0x51ca15ed],bl
  4097cd:	mov    DWORD PTR [edx+ecx*8-0x19706b25],esi
  4097d4:	stos   BYTE PTR es:[edi],al
  4097d5:	cmp    al,0x9f
  4097d7:	and    DWORD PTR [eax],edi
  4097d9:	lock (bad) 
  4097db:	data16 or BYTE PTR [edx],dh
  4097de:	sub    esp,ebp
  4097e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e1:	ins    BYTE PTR es:[edi],dx
  4097e2:	xor    al,0x2b
  4097e4:	scas   al,BYTE PTR es:[di]
  4097e6:	adc    cl,bl
  4097e8:	call   0x34d7:0x40dd82bc
  4097ef:	ffree  st(2)
  4097f1:	loope  0x40984e
  4097f3:	inc    edx
  4097f4:	xchg   edi,eax
  4097f5:	rcr    eax,1
  4097f7:	push   esp
  4097f8:	cmp    DWORD PTR [ebx+ecx*2+0x18],esp
  4097fc:	scas   al,BYTE PTR es:[edi]
  4097fd:	cs pop edi
  4097ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409800:	push   ss
  409801:	cmp    eax,0x53207064
  409806:	and    bx,WORD PTR [edx-0x215f0b84]
  40980d:	jno    0x40987e
  40980f:	adc    dh,bh
  409811:	add    BYTE PTR [ecx-0x7],al
  409814:	dec    eax
  409815:	ficomp WORD PTR [edx]
  409817:	in     eax,0x8d
  409819:	xchg   esi,eax
  40981a:	(bad)  
  40981b:	test   al,0x75
  40981d:	sbb    ebx,DWORD PTR [esi]
  40981f:	dec    eax
  409820:	cmove  esp,DWORD PTR [eax+0xb]
  409824:	lock mov ebx,0xd438ac28
  40982a:	jl     0x4098a4
  40982c:	lods   al,BYTE PTR ds:[esi]
  40982d:	shl    BYTE PTR [esi],0xe3
  409830:	mov    bl,BYTE PTR [edi+ebx*2]
  409833:	inc    ecx
  409834:	push   eax
  409835:	mov    BYTE PTR [edi-0x4a],dh
  409838:	jmp    0x409864
  40983a:	xor    esp,DWORD PTR [edx+eiz*8-0x3fbb8e15]
  409841:	mov    eax,ds:0xac9f730a
  409846:	sub    cl,BYTE PTR [esi+ecx*4-0x17985e02]
  40984d:	jbe    0x4097f8
  40984f:	pusha  
  409850:	cmp    BYTE PTR [esi+0x34],dl
  409853:	cld    
  409854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409855:	add    eax,0x8cc8cbbe
  40985a:	pop    ecx
  40985b:	in     al,dx
  40985c:	pop    ebp
  40985d:	mov    edx,0x44bba15b
  409862:	push   edi
  409863:	in     al,dx
  409864:	adc    al,BYTE PTR [ecx]
  409866:	and    ecx,DWORD PTR [ecx-0x69]
  409869:	std    
  40986a:	push   eax
  40986b:	fdivr  st,st(3)
  40986d:	rol    dl,cl
  40986f:	cmp    eax,esp
  409871:	outs   dx,DWORD PTR ds:[esi]
  409872:	jmp    0xca25c046
  409877:	or     cl,BYTE PTR es:[esi+0x10248144]
  40987e:	mov    ds:0x1e494a5c,al
  409883:	xchg   ecx,eax
  409884:	jmp    0xbc3d:0xd98bee18
  40988b:	sub    DWORD PTR [eax-0x2ed4dbb2],ecx
  409891:	enter  0xde6,0x76
  409895:	cwde   
  409896:	push   ss
  409897:	push   esp
  409898:	and    al,0x5a
  40989a:	sub    edi,0x6f8d2c1e
  4098a0:	fist   DWORD PTR [edx-0x2bffbc7c]
  4098a6:	xchg   ecx,eax
  4098a7:	xor    BYTE PTR [esi+0x1e],al
  4098aa:	fnstenv [ebx+0x7724755c]
  4098b0:	std    
  4098b1:	arpl   WORD PTR [edi+0x47],cx
  4098b4:	sbb    al,0x4a
  4098b6:	enter  0x9f78,0xb0
  4098ba:	push   ebp
  4098bb:	into   
  4098bc:	sbb    DWORD PTR [eax],ebx
  4098be:	mov    DWORD PTR [ebp+0x527f0ef5],0xd4949b7
  4098c8:	pop    esp
  4098c9:	xor    DWORD PTR ds:0xbf3bdf7d,0x13064db4
  4098d3:	and    cl,bh
  4098d5:	ret    0x1b6f
  4098d8:	fld    st(3)
  4098da:	inc    ebp
  4098db:	inc    ebx
  4098dc:	ja     0x409956
  4098de:	mov    ecx,0xccb2f793
  4098e3:	sbb    edx,esi
  4098e5:	sub    ah,BYTE PTR [ebx-0x18574e90]
  4098eb:	pop    esp
  4098ec:	stos   DWORD PTR es:[edi],eax
  4098ed:	lods   al,BYTE PTR ds:[esi]
  4098ee:	test   dl,dl
  4098f0:	sahf   
  4098f1:	mov    ebx,0x38c64ede
  4098f6:	xchg   edi,eax
  4098f7:	outs   dx,BYTE PTR ds:[esi]
  4098f8:	sahf   
  4098f9:	and    eax,0x115fe980
  4098fe:	pop    ss
  4098ff:	outs   dx,DWORD PTR ds:[esi]
  409900:	and    eax,0xbaad0fb8
  409905:	sahf   
  409906:	cwde   
  409907:	(bad)  
  409908:	cwde   
  409909:	xor    bl,BYTE PTR [edi]
  40990b:	icebp  
  40990c:	mov    BYTE PTR [eax],ch
  40990e:	add    edx,DWORD PTR [edx-0x16]
  409911:	mov    bl,0x9a
  409913:	pop    esp
  409914:	sbb    edx,DWORD PTR [edi-0x6de4e1a2]
  40991a:	add    dh,dh
  40991c:	push   ebp
  40991d:	and    eax,0xcd931b6c
  409922:	or     eax,0x946f4d29
  409927:	xchg   DWORD PTR [edx-0xdef5cbe],esp
  40992d:	cmp    eax,0x7d8aa5e7
  409932:	xor    ebx,ecx
  409934:	dec    edi
  409935:	pop    ebp
  409936:	xor    eax,ebx
  409938:	or     eax,0xcd74fc5c
  40993d:	pop    edx
  40993e:	arpl   cx,di
  409940:	iret   
  409941:	test   DWORD PTR [edi-0x14],esi
  409944:	mov    eax,0x2fa5f35
  409949:	jg     0x4099aa
  40994b:	out    dx,al
  40994c:	imul   edi,DWORD PTR [edx+0x5772c886],0x4
  409953:	add    DWORD PTR [ebp+0x16749289],edx
  409959:	and    eax,0xe686b14c
  40995e:	mov    al,ds:0x7b611da4
  409963:	test   BYTE PTR [edx],bl
  409965:	inc    edi
  409966:	jno    0x4099cd
  409968:	sub    ah,BYTE PTR [ecx-0x91ccc27]
  40996e:	icebp  
  40996f:	dec    edi
  409970:	dec    DWORD PTR [ecx+0x74]
  409973:	lock stc 
  409975:	sub    DWORD PTR [edx+0x4d],ebp
  409978:	add    al,0xfb
  40997a:	jns    0x409963
  40997c:	mov    edx,0x2172ef5f
  409981:	adc    ch,ch
  409983:	jmp    0xf3ca7e87
  409988:	push   cs
  409989:	adc    DWORD PTR [ebx+eax*4-0x57],esi
  40998d:	add    al,0x88
  40998f:	push   es
  409990:	ds dec esi
  409992:	arpl   WORD PTR [ebp-0x6a],sp
  409995:	int3   
  409996:	cli    
  409997:	stos   BYTE PTR es:[edi],al
  409998:	inc    ecx
  409999:	xchg   edx,eax
  40999a:	adc    al,0x55
  40999c:	sbb    ebp,DWORD PTR [eax+0x15a06b7f]
  4099a2:	data16 or BYTE PTR [eax+0x64d342ba],bl
  4099a9:	jp     0x409956
  4099ab:	mov    eax,ds:0x9160fa63
  4099b0:	xchg   DWORD PTR [edi],edx
  4099b2:	jl     0x409997
  4099b4:	fucom  st(2)
  4099b6:	mov    WORD PTR [edi-0x6fbf5201],fs
  4099bc:	jnp    0x409981
  4099be:	enter  0xf64c,0x8f
  4099c2:	pop    esi
  4099c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c4:	aam    0x94
  4099c6:	cmp    al,0x14
  4099c8:	sub    DWORD PTR [ebx],edx
  4099ca:	adc    edx,DWORD PTR [esi-0x5072490a]
  4099d0:	jmp    0x2c9b:0xf59e5f68
  4099d7:	cmc    
  4099d8:	dec    esi
  4099d9:	push   es
  4099da:	test   esi,0x34643faa
  4099e0:	jnp    0x40999c
  4099e2:	jmp    0x5d7e:0x2c32960a
  4099e9:	loope  0x409a36
  4099eb:	popf   
  4099ec:	inc    ebp
  4099ed:	jnp    0x4099ce
  4099ef:	pusha  
  4099f0:	push   cs
  4099f1:	jbe    0x4099f5
  4099f3:	pushf  
  4099f4:	fcom   DWORD PTR [edi-0x26fa3f13]
  4099fa:	ja     0x4099a1
  4099fc:	add    esi,DWORD PTR [eax]
  4099fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ff:	sub    eax,0x8202559b
  409a04:	hlt    
  409a05:	cdq    
  409a06:	ret    
  409a07:	jne    0x409a39
  409a09:	add    al,0x94
  409a0b:	adc    dl,bl
  409a0d:	adc    edx,ecx
  409a0f:	mov    dl,BYTE PTR [edi+0x66539730]
  409a15:	jbe    0x409a7e
  409a17:	repnz inc ebx
  409a19:	jle    0x4099a9
  409a1b:	xor    eax,DWORD PTR [ecx]
  409a1d:	add    eax,0xd74d07f7
  409a22:	mov    DWORD PTR [edi+0x765f2f8f],esp
  409a28:	out    0x58,eax
  409a2a:	mov    bl,0x61
  409a2c:	lahf   
  409a2d:	out    dx,eax
  409a2e:	inc    edi
  409a2f:	mov    edx,0x336b9ac6
  409a34:	mov    eax,ds:0xd9ba2138
  409a39:	(bad)  
  409a3a:	and    dl,BYTE PTR [ebp+0x1a6b0e05]
  409a40:	mov    cl,0x4d
  409a42:	ret    
  409a43:	mov    eax,0x731b3a0f
  409a48:	nop
  409a49:	in     al,0x13
  409a4b:	ret    0xe7dd
  409a4e:	xchg   BYTE PTR [edx-0x5d7b2a02],cl
  409a54:	lahf   
  409a55:	mov    al,0x35
  409a57:	mov    dh,0x77
  409a59:	adc    bh,BYTE PTR [ecx+0x4]
  409a5c:	cmp    eax,0x4623279e
  409a61:	ss pop edi
  409a63:	adc    al,0x3c
  409a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a66:	mov    WORD PTR [edx+0x70446611],fs
  409a6c:	jle    0x409a0a
  409a6e:	out    0x30,eax
  409a70:	js     0x409a5e
  409a72:	xor    al,BYTE PTR [edi+0x61ab4ae]
  409a78:	add    esi,DWORD PTR [edx]
  409a7a:	loopne 0x409a5a
  409a7c:	sub    DWORD PTR [ecx-0x4feb4ebb],0x59
  409a83:	mov    ebp,0x8db5fbcf
  409a88:	jne    0x409a0a
  409a8a:	or     al,0x1b
  409a8c:	bound  esp,QWORD PTR [edx-0xab6d2f4]
  409a92:	inc    ebx
  409a93:	enter  0xe1b7,0xd6
  409a97:	fistp  QWORD PTR [ebp+0x59]
  409a9a:	pop    ebp
  409a9b:	cs jno 0x409a9d
  409a9e:	add    eax,0x895d4a3c
  409aa3:	jns    0x409a96
  409aa5:	and    ebx,ebp
  409aa7:	xchg   esi,eax
  409aa8:	mov    es,WORD PTR [esi]
  409aaa:	mov    bl,0x6a
  409aac:	add    eax,0x222ab2af
  409ab1:	cmp    al,ah
  409ab3:	sub    edx,DWORD PTR es:[edx+edi*1+0x6a]
  409ab8:	or     BYTE PTR ds:0xaad4aebc,bl
  409abe:	sub    DWORD PTR [ebp-0x272e6fe3],edx
  409ac4:	pop    ebx
  409ac5:	add    al,0x12
  409ac7:	cdq    
  409ac8:	jmp    0x409a92
  409aca:	push   edi
  409acb:	pushf  
  409acc:	out    0xe9,al
  409ace:	and    BYTE PTR [esp+ecx*4],dh
  409ad1:	mov    al,0x99
  409ad3:	sbb    ecx,eax
  409ad5:	adc    ah,BYTE PTR [ecx+edi*8]
  409ad8:	jge    0x409b4d
  409ada:	xchg   esi,eax
  409adb:	pop    esi
  409adc:	(bad)  
  409add:	xor    eax,0xa4d1ca00
  409ae2:	pop    ebx
  409ae3:	fcmovb st,st(3)
  409ae5:	stos   BYTE PTR es:[edi],al
  409ae6:	icebp  
  409ae7:	jg     0x409a96
  409ae9:	mov    esi,ds
  409aeb:	jb     0x409aac
  409aed:	inc    edx
  409aee:	cmp    cl,BYTE PTR [esi+ebp*4-0x3c]
  409af2:	retf   0x7c59
  409af5:	sar    BYTE PTR [ebx-0x6508addc],1
  409afb:	push   edi
  409afc:	jmp    0x409b36
  409afe:	jecxz  0x409ab9
  409b00:	rol    DWORD PTR [edx+ebx*1-0x5a5e35fd],1
  409b07:	retf   
  409b08:	xchg   BYTE PTR [edi-0x7cb55742],ah
  409b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0f:	push   eax
  409b10:	cld    
  409b11:	lea    ecx,[edi]
  409b13:	mov    al,0x6d
  409b15:	cli    
  409b16:	das    
  409b17:	loopne 0x409ad6
  409b19:	(bad)  
  409b1a:	repnz iret 
  409b1c:	jb     0x409b28
  409b1e:	leave  
  409b1f:	xchg   ebx,eax
  409b20:	xchg   edx,eax
  409b21:	mov    dh,ah
  409b23:	enter  0x3b85,0x6c
  409b27:	arpl   bx,di
  409b29:	cmp    ebx,DWORD PTR [esp+esi*2+0xb]
  409b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b2e:	(bad)  
  409b2f:	sub    edx,DWORD PTR ds:0xcd5381a6
  409b35:	lea    ebp,[ebx]
  409b37:	cwde   
  409b38:	dec    ebp
  409b39:	and    ecx,esp
  409b3b:	dec    edx
  409b3c:	inc    esp
  409b3d:	jns    0x409b87
  409b3f:	mov    bh,0x16
  409b41:	aas    
  409b42:	aam    0xb2
  409b44:	mov    DWORD PTR es:[esi+0x79],ecx
  409b48:	into   
  409b49:	jp     0x409b42
  409b4b:	lds    esi,FWORD PTR [esi+eax*2]
  409b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4f:	not    BYTE PTR [eax+0x2d]
  409b52:	ins    BYTE PTR es:[edi],dx
  409b53:	jmp    0x5011:0x889a888a
  409b5a:	shr    BYTE PTR [eax-0x4a7cfc25],0xd7
  409b61:	daa    
  409b62:	push   eax
  409b63:	mov    ah,0xec
  409b65:	sti    
  409b66:	in     eax,0x6c
  409b68:	dec    esp
  409b69:	inc    edx
  409b6a:	sbb    ebx,eax
  409b6c:	sub    al,0x2e
  409b6e:	jmp    0x3a2651b6
  409b73:	jbe    0x409b4d
  409b75:	jle    0x409b52
  409b77:	mov    dl,0xb
  409b79:	jns    0x409ba6
  409b7b:	xor    esi,esi
  409b7d:	test   DWORD PTR [ebx],ebx
  409b7f:	ja     0x409b8b
  409b81:	mov    ds:0xd5048941,al
  409b86:	call   0xe02:0xd7893bdc
  409b8d:	push   edx
  409b8e:	mov    bh,ch
  409b90:	xchg   edx,esi
  409b92:	fsubr  QWORD PTR [edx-0x16]
  409b95:	inc    edx
  409b96:	pop    ecx
  409b97:	inc    ebx
  409b98:	and    ah,BYTE PTR [edi-0x20]
  409b9b:	sahf   
  409b9c:	xor    al,0x1b
  409b9e:	or     al,0xe5
  409ba0:	mov    eax,0x6dd179ae
  409ba5:	pusha  
  409ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba7:	fistp  DWORD PTR [edx-0x4f2ddf96]
  409bad:	add    DWORD PTR [ecx-0x3b],ebp
  409bb0:	test   al,0xc8
  409bb2:	jmp    0x409c12
  409bb4:	xchg   edx,eax
  409bb5:	xor    eax,0x4d3fa53d
  409bba:	icebp  
  409bbb:	adc    esp,DWORD PTR [eax+0x74]
  409bbe:	sub    eax,0x9d1cb81e
  409bc3:	and    BYTE PTR [ebp+0x654f63bc],bh
  409bc9:	lods   eax,DWORD PTR ds:[esi]
  409bca:	imul   edx,DWORD PTR [ebx-0x5e],0xf1b7397a
  409bd1:	inc    ebx
  409bd2:	jp     0x409c36
  409bd4:	add    DWORD PTR [ecx+0x146ac3e0],ecx
  409bda:	mov    esp,0x34dfb9ad
  409bdf:	push   esi
  409be0:	jmp    0x55fe3791
  409be5:	sahf   
  409be6:	pop    ecx
  409be7:	mov    ebx,0xdb4cb43c
  409bec:	test   BYTE PTR [ecx-0x1b],dh
  409bef:	xor    eax,0x7c7b70e1
  409bf4:	ins    DWORD PTR es:[edi],dx
  409bf5:	mov    dh,0xd0
  409bf7:	and    edi,DWORD PTR [eax+0x46355ed8]
  409bfd:	cs xchg esi,eax
  409bff:	add    eax,0xcfc5b036
  409c04:	les    edx,FWORD PTR [ecx-0x56df58d5]
  409c0a:	pop    ebp
  409c0b:	mov    ch,BYTE PTR [ebp-0x37d37a2c]
  409c11:	lahf   
  409c12:	jg     0x409bfb
  409c14:	add    ecx,edi
  409c16:	test   eax,0x53bcfecb
  409c1b:	int3   
  409c1c:	mov    DWORD PTR [ebx+0x3093a0b7],esp
  409c22:	ja     0x409c3f
  409c24:	loope  0x409c74
  409c26:	mov    al,0x89
  409c28:	ins    BYTE PTR es:[edi],dx
  409c29:	es mov edi,0xc08f92d
  409c2f:	jns    0x409be4
  409c31:	push   0x77
  409c33:	addr16 push edx
  409c35:	imul   edi,DWORD PTR [esi-0x7b435a89],0x24551d2c
  409c3f:	call   0x6984:0xf41ec1bd
  409c46:	adc    dh,BYTE PTR [edi+0x3e5c9793]
  409c4c:	inc    ebp
  409c4d:	push   ss
  409c4e:	dec    ebx
  409c4f:	aam    0xc6
  409c51:	scas   eax,DWORD PTR es:[edi]
  409c52:	fs mov edx,0x51b026a6
  409c58:	sub    esp,DWORD PTR [edx-0x37b17111]
  409c5e:	(bad)  
  409c5f:	mov    al,ds:0xfa5ebd8e
  409c64:	and    DWORD PTR [esi+0x3b],0xffffffcb
  409c68:	jle    0x409c91
  409c6a:	cmp    ebp,DWORD PTR [esi]
  409c6c:	mov    cl,0x1a
  409c6e:	out    dx,al
  409c6f:	sub    bl,dh
  409c71:	cli    
  409c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c73:	ror    ebp,cl
  409c75:	out    dx,eax
  409c76:	faddp  st(4),st
  409c78:	ins    BYTE PTR es:[edi],dx
  409c79:	xor    BYTE PTR [esi+0xe],0xa1
  409c7d:	fs dec esp
  409c7f:	cmp    DWORD PTR [esi-0x5febc3c4],esi
  409c85:	fdiv   DWORD PTR [ecx+0xa2b5205]
  409c8b:	mov    ch,0x28
  409c8d:	repnz add eax,DWORD PTR [ebx]
  409c90:	inc    eax
  409c91:	test   eax,0x4fddc1fc
  409c96:	fst    QWORD PTR [esi]
  409c98:	adc    BYTE PTR ds:0x588c2aaf,dl
  409c9e:	xor    eax,0xcbdfdc20
  409ca3:	hlt    
  409ca4:	mov    dh,0xd2
  409ca6:	mov    ah,0x39
  409ca8:	out    dx,eax
  409ca9:	xchg   ebx,edx
  409cab:	inc    esp
  409cac:	lea    edx,[edx+0x79]
  409caf:	bound  ebx,QWORD PTR [ecx]
  409cb1:	inc    esi
  409cb2:	dec    esp
  409cb3:	bound  edi,QWORD PTR [esi+0x3f]
  409cb6:	scas   eax,DWORD PTR es:[edi]
  409cb7:	or     al,0x30
  409cb9:	stc    
  409cba:	(bad)  
  409cbb:	fcomi  st,st(7)
  409cbd:	out    0x51,eax
  409cbf:	imul   edi,DWORD PTR [ebx],0xffffff9a
  409cc2:	and    al,0xd3
  409cc4:	(bad)  
  409cc5:	cmp    ebp,DWORD PTR [eax-0x4b4f3964]
  409ccb:	sar    DWORD PTR [ebp-0x314927e1],1
  409cd1:	mov    ah,0x56
  409cd3:	shl    edi,cl
  409cd5:	data16 sar BYTE PTR ds:0x2560240e,cl
  409cdc:	jp     0x409c65
  409cde:	dec    edi
  409cdf:	sub    ch,BYTE PTR [ecx]
  409ce1:	in     al,dx
  409ce2:	ret    
  409ce3:	jl     0x409caf
  409ce5:	fmulp  st(3),st
  409ce7:	imul   esp,DWORD PTR [ebp-0x24],0xed6b0b8d
  409cee:	cld    
  409cef:	lods   al,BYTE PTR ds:[esi]
  409cf0:	jae    0x409d08
  409cf2:	les    ecx,FWORD PTR [esi-0x3cf8cded]
  409cf8:	stos   DWORD PTR es:[edi],eax
  409cf9:	fnsave [ebp+0x23]
  409cfc:	sub    esi,DWORD PTR [eax+esi*8-0xd749148]
  409d03:	lea    edx,ds:0x5791f892
  409d09:	sub    al,0xa1
  409d0b:	dec    ecx
  409d0c:	mov    dh,0xa7
  409d0e:	fwait
  409d0f:	mov    dl,0x32
  409d11:	mov    al,ds:0x9396a569
  409d16:	cli    
  409d17:	loop   0x409d05
  409d19:	mov    ebp,DWORD PTR [ecx]
  409d1b:	xor    eax,0x5bac17e3
  409d20:	jno    0x409d06
  409d22:	jle    0x409cd5
  409d24:	xlat   BYTE PTR ds:[ebx]
  409d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d26:	cwde   
  409d27:	cmp    ecx,DWORD PTR [edi-0x13]
  409d2a:	mov    dl,0x99
  409d2c:	imul   BYTE PTR gs:[eax+ebx*1-0x22]
  409d31:	adc    dh,BYTE PTR ds:0x829bb967
  409d37:	jecxz  0x409cba
  409d39:	dec    esi
  409d3a:	lods   al,BYTE PTR ds:[esi]
  409d3b:	inc    ebp
  409d3c:	or     DWORD PTR [edx],edi
  409d3e:	std    
  409d3f:	mov    esi,0x26f93b77
  409d44:	add    al,dh
  409d46:	pop    es
  409d47:	cmp    al,0x8f
  409d49:	xchg   ebx,eax
  409d4a:	cmp    eax,0xf4e190a5
  409d4f:	popa   
  409d50:	jnp    0x409d26
  409d52:	pop    edi
  409d53:	mov    bh,0xa1
  409d55:	out    0x35,al
  409d57:	fsub   DWORD PTR [ebx+esi*8-0x540ed2cc]
  409d5e:	and    cl,BYTE PTR [esi]
  409d60:	stc    
  409d61:	popf   
  409d62:	jo     0x409dd5
  409d64:	and    ecx,DWORD PTR [ecx+0x57ae6ac1]
  409d6a:	mov    dl,0x52
  409d6c:	mov    ecx,0xc095af23
  409d71:	fnsave [edi-0x3fd458d7]
  409d77:	or     BYTE PTR [esi-0x647f9d0f],0x15
  409d7e:	or     ebp,edx
  409d80:	and    cl,bh
  409d82:	cdq    
  409d83:	fidiv  DWORD PTR [ecx-0x3c06ee7a]
  409d89:	or     eax,0xef99d471
  409d8e:	mov    esi,0x9221a60a
  409d93:	xchg   DWORD PTR [edi-0x40],ecx
  409d96:	adc    dl,BYTE PTR [edx+0x44]
  409d99:	jge    0x409d83
  409d9b:	fs int 0xca
  409d9e:	pusha  
  409d9f:	and    BYTE PTR [esi],dl
  409da1:	mov    esp,0x8fb7354f
  409da6:	jo     0x409e0e
  409da8:	inc    ecx
  409da9:	fneni(8087 only) 
  409dab:	jmp    0xdfc257e2
  409db0:	xchg   ebp,eax
  409db1:	mov    DWORD PTR [ecx-0x57e0c483],edi
  409db7:	mov    ah,0x5d
  409db9:	pop    esi
  409dba:	xchg   ecx,eax
  409dbb:	inc    edi
  409dbc:	loop   0x409d67
  409dbe:	jecxz  0x409dc8
  409dc0:	pop    esp
  409dc1:	sub    esp,edi
  409dc3:	dec    ebp
  409dc4:	dec    edx
  409dc5:	repz mov bh,0xae
  409dc8:	mov    ebp,DWORD PTR [eax+0x5a]
  409dcb:	push   ebp
  409dcc:	push   sp
  409dce:	xchg   esp,eax
  409dcf:	pop    edi
  409dd0:	shr    BYTE PTR [edx+ecx*2-0x660e105a],1
  409dd7:	out    dx,al
  409dd8:	js     0x409da6
  409dda:	jl     0x409e43
  409ddc:	retf   0x3b74
  409ddf:	cdq    
  409de0:	push   esi
  409de1:	or     BYTE PTR [edi],0xa3
  409de4:	fidivr DWORD PTR [ebx+esi*4+0x2d]
  409de8:	leave  
  409de9:	sti    
  409dea:	add    eax,0xa11cf649
  409def:	js     0x409d95
  409df1:	or     al,cl
  409df3:	fsubr  st,st(6)
  409df5:	retf   
  409df6:	sti    
  409df7:	imul   edi,edx,0x58f9f489
  409dfd:	fisttp DWORD PTR [bx+si+0xdfe]
  409e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e03:	out    dx,eax
  409e04:	popa   
  409e05:	imul   ecx,DWORD PTR [esi-0x31d08a13],0x64417486
  409e0f:	adc    ebp,DWORD PTR [ecx+0x33b9c113]
  409e15:	std    
  409e16:	push   0xa
  409e18:	jbe    0x409db6
  409e1a:	push   0xffffffae
  409e1c:	sub    al,0xc2
  409e1e:	mov    ebp,0xc33bd75d
  409e23:	push   0xffffff84
  409e25:	mov    cs,WORD PTR [ebx]
  409e27:	jecxz  0x409daf
  409e29:	sub    esi,DWORD PTR [esi-0xb5599de]
  409e2f:	xchg   edx,eax
  409e30:	out    dx,al
  409e31:	fst    QWORD PTR [eax-0x3a87c01c]
  409e37:	dec    edx
  409e38:	pop    esi
  409e39:	lods   eax,DWORD PTR ds:[esi]
  409e3a:	add    dh,BYTE PTR [esi]
  409e3c:	pop    esi
  409e3d:	add    BYTE PTR [esi+0x6505bea8],0xb2
  409e44:	cs xchg ecx,eax
  409e46:	call   0x96c6:0xc5f9f4ea
  409e4d:	cmp    al,0x90
  409e4f:	jne    0x409e42
  409e51:	sbb    ebx,DWORD PTR [edx+0x131ad21b]
  409e57:	inc    esi
  409e58:	jne    0x409e5c
  409e5a:	fdiv   QWORD PTR [edx+ebp*8]
  409e5d:	xchg   edi,eax
  409e5e:	xor    eax,0x96c3f705
  409e63:	jo     0x409ea7
  409e65:	mov    ch,0x7a
  409e67:	cmp    ebx,ecx
  409e69:	xor    esp,DWORD PTR [ecx+0x37b4ba6b]
  409e6f:	or     DWORD PTR [edi],0x558b02af
  409e75:	cld    
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x6da83f7d],bl
  40a717:	jnp    0x40a6e3
  40a719:	xchg   ebx,eax
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	pop    esi
  40a723:	jle    0x40a742
  40a725:	sbb    bl,BYTE PTR [edi-0x4a8053a9]
  40a72b:	mov    ds:0xe9a365ea,eax
  40a730:	fs sub al,0x85
  40a733:	leave  
  40a734:	sbb    eax,ecx
  40a736:	push   ebp
  40a737:	ss mov esp,0xe84ef57a
  40a73d:	movntq QWORD PTR [edx],mm4
  40a740:	fdivp  st(0),st
  40a742:	ds pop ebx
  40a744:	and    ebx,DWORD PTR [esi-0x797dac0d]
  40a74a:	enter  0x875e,0xe3
  40a74e:	nop
  40a74f:	mov    esp,0x843f236f
  40a754:	dec    esp
  40a755:	rol    edx,1
  40a757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a758:	inc    edx
  40a759:	jns    0x40a6f8
  40a75b:	shl    BYTE PTR [edx+0x1b],0xe4
  40a75f:	loop   0x40a781
  40a761:	cld    
  40a762:	out    0x2b,eax
  40a764:	sbb    DWORD PTR [edx],ebp
  40a766:	mov    edi,0xd090f4b1
  40a76b:	pop    esi
  40a76d:	cmp    cl,BYTE PTR [edi]
  40a76f:	js     0x40a742
  40a771:	outs   dx,BYTE PTR ds:[esi]
  40a772:	xchg   ecx,eax
  40a773:	xor    al,ah
  40a775:	sbb    bl,dl
  40a777:	(bad)  
  40a778:	neg    BYTE PTR [eax]
  40a77a:	shl    dl,1
  40a77c:	xchg   esi,eax
  40a77d:	or     al,0xa7
  40a77f:	aaa    
  40a780:	lods   al,BYTE PTR ds:[esi]
  40a781:	call   0x2a9602f4
  40a786:	cmp    eax,0xe751f114
  40a78b:	fadd   QWORD PTR ds:0x8d42e0b2
  40a791:	or     dl,al
  40a793:	push   0x218622fe
  40a798:	daa    
  40a799:	dec    edi
  40a79a:	sub    DWORD PTR [ebx],ebx
  40a79c:	and    eax,0xbfb25a80
  40a7a1:	cdq    
  40a7a2:	aad    0x7d
  40a7a4:	aad    0x95
  40a7a6:	add    esi,DWORD PTR ds:0x54cb8625
  40a7ac:	cs call 0x4fcde7c8
  40a7b2:	and    eax,0xd1ede6d6
  40a7b7:	xchg   edx,eax
  40a7b8:	popa   
  40a7b9:	loop   0x40a7ce
  40a7bb:	xchg   ebx,eax
  40a7bc:	popa   
  40a7bd:	jnp    0x40a780
  40a7bf:	ja     0x40a7d7
  40a7c1:	loop   0x40a78f
  40a7c3:	dec    eax
  40a7c4:	jge    0x40a7aa
  40a7c6:	shl    BYTE PTR [esi-0x802a957],cl
  40a7cc:	pop    ss
  40a7cd:	sbb    bh,BYTE PTR [edx+0x17]
  40a7d0:	jp     0x40a7ab
  40a7d2:	shl    BYTE PTR [ecx-0x43a69659],0xd4
  40a7d9:	addr16 jle 0x40a814
  40a7dc:	outs   dx,DWORD PTR ds:[esi]
  40a7dd:	push   cs
  40a7de:	ficom  DWORD PTR [ecx-0x3ab4019f]
  40a7e4:	push   edx
  40a7e5:	xchg   ecx,eax
  40a7e6:	add    al,0xe6
  40a7e8:	xchg   esi,eax
  40a7e9:	xchg   ebp,eax
  40a7ea:	jecxz  0x40a7fa
  40a7ec:	out    0x4f,al
  40a7ee:	inc    ebp
  40a7ef:	fdivr  QWORD PTR [ecx+ebp*4+0x5f]
  40a7f3:	xchg   DWORD PTR [edx],esp
  40a7f5:	stos   DWORD PTR es:[edi],eax
  40a7f6:	mov    bl,0x6c
  40a7f8:	xor    BYTE PTR [esi+0x2d188d6c],0xe
  40a7ff:	retf   0xaa69
  40a802:	mov    es,WORD PTR [edi]
  40a804:	jns    0x40a861
  40a806:	dec    ebx
  40a807:	push   eax
  40a808:	xchg   esi,eax
  40a809:	dec    ebp
  40a80a:	dec    DWORD PTR [edx+0x66a54cf9]
  40a810:	push   cs
  40a811:	test   BYTE PTR [ebx+0x30713ac6],bh
  40a817:	push   esi
  40a818:	mov    ds:0x7686d0ad,al
  40a81d:	mov    ebx,DWORD PTR [edx]
  40a81f:	pop    ebp
  40a820:	int3   
  40a821:	add    al,0x38
  40a823:	retf   
  40a824:	inc    ebx
  40a825:	push   ebp
  40a826:	jmp    0x40a806
  40a828:	retf   0xda5d
  40a82b:	loope  0x40a862
  40a82d:	imul   eax,ebx,0xa800ff53
  40a833:	lods   al,BYTE PTR ds:[esi]
  40a834:	fisttp WORD PTR [esp+edx*1-0x1579bfe0]
  40a83b:	pop    ds
  40a83c:	xchg   ebx,eax
  40a83d:	and    BYTE PTR ds:0x85841599,bl
  40a843:	adc    dl,BYTE PTR [eax-0x1a186f64]
  40a849:	int    0x27
  40a84b:	xchg   esp,eax
  40a84c:	ret    0xa118
  40a84f:	fwait
  40a850:	hlt    
  40a851:	mov    ds:0x8b3cfb50,al
  40a856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a857:	xor    ch,BYTE PTR [edi]
  40a859:	jecxz  0x40a7ea
  40a85b:	or     bh,BYTE PTR [eax-0x2ca9f541]
  40a861:	dec    esi
  40a862:	int3   
  40a863:	jmp    0x40a817
  40a865:	retf   0xa6ab
  40a868:	in     eax,0xfa
  40a86a:	cmp    eax,0xffffffd9
  40a86d:	dec    eax
  40a86e:	in     eax,dx
  40a86f:	push   0xb5ba3c6a
  40a874:	mov    edi,0x209fe973
  40a879:	jo     0x40a879
  40a87b:	imul   esp,DWORD PTR ds:0x5b342f0c,0xefc0e171
  40a885:	mov    esi,0x744db080
  40a88a:	scas   eax,DWORD PTR es:[edi]
  40a88b:	adc    BYTE PTR ds:0x300900b4,ah
  40a891:	(bad)  
  40a892:	mov    esi,0x4fc482fb
  40a897:	inc    ecx
  40a898:	sub    bh,bh
  40a89a:	fld    TBYTE PTR [edx+esi*4-0x4b]
  40a89e:	or     edx,DWORD PTR [edi+0x30]
  40a8a1:	add    BYTE PTR [ebx+eax*8],al
  40a8a4:	ret    0xec8f
  40a8a7:	std    
  40a8a8:	neg    BYTE PTR [ebx+0x6d]
  40a8ab:	push   ebx
  40a8ac:	cdq    
  40a8ad:	push   ebx
  40a8ae:	out    dx,al
  40a8af:	push   0x69c54425
  40a8b4:	ror    edx,0xf2
  40a8b7:	xchg   BYTE PTR [edi+0x1f],cl
  40a8ba:	outs   dx,DWORD PTR ds:[esi]
  40a8bb:	jp     0x40a905
  40a8bd:	retf   0xa46c
  40a8c0:	jmp    0x9afd:0x567b192d
  40a8c7:	je     0x40a84f
  40a8c9:	or     al,0xa2
  40a8cb:	inc    ecx
  40a8cc:	les    ebx,FWORD PTR [eax]
  40a8ce:	jae    0x40a939
  40a8d0:	cli    
  40a8d1:	cmp    ebp,esp
  40a8d3:	jle    0x40a8eb
  40a8d5:	and    eax,0xbcd6a66f
  40a8da:	jnp    0x40a925
  40a8dc:	sbb    BYTE PTR [edx-0x231cbcb4],al
  40a8e2:	pop    ebx
  40a8e3:	arpl   WORD PTR [esi+0x778dcfcd],di
  40a8e9:	out    dx,eax
  40a8ea:	pop    ss
  40a8eb:	mov    bh,0xd9
  40a8ed:	scas   al,BYTE PTR es:[edi]
  40a8ee:	stos   DWORD PTR es:[edi],eax
  40a8ef:	loopne 0x40a917
  40a8f1:	mov    dl,0x93
  40a8f3:	cdq    
  40a8f4:	pop    ss
  40a8f5:	mov    esi,0xd0fc6024
  40a8fa:	add    BYTE PTR [ebp-0x2a],bl
  40a8fd:	clc    
  40a8fe:	sar    ah,1
  40a900:	(bad)  
  40a901:	fsubr  st(0),st
  40a903:	rol    BYTE PTR [ebp-0x30],1
  40a906:	jle    0x40a8c5
  40a908:	out    dx,al
  40a909:	or     BYTE PTR [esi-0x2c28ed69],0xc1
  40a910:	fimul  DWORD PTR [edi+ecx*8-0x2a]
  40a914:	iret   
  40a915:	jmp    0x22d786c5
  40a91a:	mov    dh,0x4a
  40a91c:	xlat   BYTE PTR ds:[ebx]
  40a91d:	xchg   BYTE PTR [ecx+0x787c58f4],bh
  40a923:	out    0xab,eax
  40a925:	hlt    
  40a926:	stos   DWORD PTR es:[edi],eax
  40a927:	xchg   ebx,eax
  40a928:	dec    ebx
  40a929:	sbb    bh,dl
  40a92b:	pop    esp
  40a92c:	cdq    
  40a92d:	sar    ecx,1
  40a92f:	in     eax,dx
  40a930:	cs out dx,al
  40a932:	sbb    eax,0x5f41bdf3
  40a937:	ficomp DWORD PTR [ecx]
  40a939:	jp     0x40a8d6
  40a93b:	fwait
  40a93c:	mov    ah,BYTE PTR [edx]
  40a93e:	add    eax,0xa6b37eba
  40a943:	push   ebp
  40a944:	cmp    edi,DWORD PTR ds:0xd6d80660
  40a94a:	or     ch,ch
  40a94c:	dec    esi
  40a94d:	iret   
  40a94e:	es xor dh,bl
  40a951:	pop    ebp
  40a952:	xlat   BYTE PTR ds:[ebx]
  40a953:	push   0xffffffa6
  40a955:	mov    esi,0xc7cd7ac7
  40a95a:	sahf   
  40a95b:	add    ebx,DWORD PTR [edi]
  40a95d:	sbb    DWORD PTR [ebx],eax
  40a95f:	sub    ah,bl
  40a961:	inc    edi
  40a962:	add    al,dl
  40a964:	es push ebp
  40a966:	sub    DWORD PTR [ebp-0x20],edx
  40a969:	popa   
  40a96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a96b:	pop    esp
  40a96c:	mov    ebp,0xa5bd99d5
  40a971:	std    
  40a972:	cmp    eax,0x9de619e2
  40a977:	ret    
  40a978:	push   ds
  40a979:	in     al,dx
  40a97a:	sti    
  40a97b:	pusha  
  40a97c:	push   edx
  40a97d:	mov    al,0xdf
  40a97f:	leave  
  40a980:	daa    
  40a981:	jle    0x40a962
  40a983:	sub    BYTE PTR [edi+0x4a],0x5d
  40a987:	dec    ebp
  40a988:	add    dh,BYTE PTR [ebp+esi*2-0x7df19a5c]
  40a98f:	sahf   
  40a990:	imul   esp,DWORD PTR ds:0x1551c158,0x3e1047f4
  40a99a:	sbb    ch,BYTE PTR ds:0xd519ef98
  40a9a0:	lock xor al,0xe5
  40a9a3:	fisub  WORD PTR [edi]
  40a9a5:	mov    edi,0x244e6057
  40a9aa:	sti    
  40a9ab:	xor    ebp,ebp
  40a9ad:	arpl   WORD PTR [ebx-0x50],si
  40a9b0:	int    0x9e
  40a9b2:	cmp    DWORD PTR [eax+0x67],0x4535b0eb
  40a9b9:	js     0x40aa37
  40a9bb:	retf   0xb9b1
  40a9be:	(bad)  
  40a9bf:	(bad)  
  40a9c0:	shl    DWORD PTR [eax+0x48],cl
  40a9c3:	loopne 0x40aa1e
  40a9c5:	or     cl,BYTE PTR [ecx+0x2d6a588a]
  40a9cb:	and    DWORD PTR [ebp-0x2e],eax
  40a9ce:	aam    0x83
  40a9d0:	(bad)  
  40a9d1:	mov    bl,0x4d
  40a9d3:	push   edx
  40a9d4:	or     DWORD PTR [edi+0x65ed03ae],ebx
  40a9da:	add    DWORD PTR [edx+0x7da2e50],eax
  40a9e0:	ins    BYTE PTR es:[edi],dx
  40a9e1:	inc    edx
  40a9e2:	retf   
  40a9e3:	adc    bl,0xdc
  40a9e6:	stos   BYTE PTR es:[edi],al
  40a9e7:	lock mov dh,0x9f
  40a9ea:	sar    BYTE PTR ds:0xa0778e16,cl
  40a9f0:	jno    0x40a9c9
  40a9f2:	jle    0x40a97a
  40a9f4:	mov    ecx,0x1f62585b
  40a9f9:	mov    bl,0xb8
  40a9fb:	jecxz  0x40aa5b
  40a9fd:	aad    0x97
  40a9ff:	std    
  40aa00:	call   0x7c35:0xc8b69432
  40aa07:	sti    
  40aa08:	mov    bh,0x31
  40aa0a:	imul   ecx,DWORD PTR [eax-0x7f],0xd0eeb571
  40aa11:	(bad)  
  40aa12:	and    eax,DWORD PTR [eax+edi*1]
  40aa15:	sub    eax,0x968b609a
  40aa1a:	mov    al,ds:0xbd8efc7e
  40aa1f:	pop    ecx
  40aa20:	pop    eax
  40aa21:	popa   
  40aa22:	cs dec edi
  40aa24:	inc    esi
  40aa25:	sbb    DWORD PTR [ebx-0x70],ebp
  40aa28:	push   ecx
  40aa29:	ds ja  0x40a9ee
  40aa2c:	inc    ecx
  40aa2d:	dec    ecx
  40aa2e:	idiv   BYTE PTR [ebx-0x54]
  40aa31:	dec    esi
  40aa32:	push   0xffffff8b
  40aa34:	clc    
  40aa35:	dec    eax
  40aa36:	push   ecx
  40aa37:	xchg   edx,eax
  40aa38:	adc    BYTE PTR [eax],bh
  40aa3a:	mov    ebp,0x62f1281
  40aa3f:	adc    ch,BYTE PTR [edi+0x1b]
  40aa42:	nop
  40aa43:	jne    0x40aaa1
  40aa45:	dec    ecx
  40aa46:	stc    
  40aa47:	lods   eax,DWORD PTR ds:[esi]
  40aa48:	add    BYTE PTR [eax],ah
  40aa4a:	mov    esp,0x7a1804c1
  40aa4f:	test   BYTE PTR [ecx+ebx*2+0xe740ed],bh
  40aa56:	inc    ebp
  40aa57:	xchg   ebp,eax
  40aa58:	cld    
  40aa59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa5a:	cmp    eax,0xe4ea148c
  40aa5f:	jle    0x40aa5e
  40aa61:	xchg   DWORD PTR [eax],ebx
  40aa63:	jnp    0x40aa1e
  40aa65:	xchg   esi,eax
  40aa66:	jmp    0xc93e91d9
  40aa6b:	cs das 
  40aa6d:	or     al,0x88
  40aa6f:	push   esp
  40aa70:	inc    esp
  40aa71:	nop
  40aa72:	into   
  40aa73:	fs push ebx
  40aa75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa76:	mov    es:0x9b5657f2,al
  40aa7c:	push   edx
  40aa7d:	xor    BYTE PTR [ebp-0x37],bh
  40aa80:	pop    esi
  40aa81:	and    DWORD PTR [ebx-0x669cfed0],edx
  40aa87:	jne    0x40aa99
  40aa89:	or     eax,0xdada653c
  40aa8e:	cmp    dl,BYTE PTR [ebp-0x1f2e1d56]
  40aa94:	jb     0x40ab13
  40aa96:	lods   eax,DWORD PTR ds:[esi]
  40aa97:	test   al,0xa6
  40aa99:	push   esp
  40aa9a:	push   0x13235bd0
  40aa9f:	mov    esi,0x3e649d1f
  40aaa4:	and    BYTE PTR [ebx-0x3d],cl
  40aaa7:	hlt    
  40aaa8:	adc    ebx,DWORD PTR [ebx-0x3234002e]
  40aaae:	js     0x40ab2e
  40aab0:	inc    esi
  40aab1:	loop   0x40aa91
  40aab3:	adc    BYTE PTR [esi-0x329b5d44],0x5e
  40aaba:	jle    0x40aaec
  40aabc:	sub    DWORD PTR [ecx-0x491d378f],0xcd4f582b
  40aac6:	stos   DWORD PTR es:[edi],eax
  40aac7:	bound  ebx,QWORD PTR [eax-0x73cf0802]
  40aacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aace:	push   edx
  40aacf:	cs popa 
  40aad1:	loop   0x40ab49
  40aad3:	adc    esi,DWORD PTR [edx-0x2bb54c04]
  40aad9:	pop    esp
  40aada:	(bad)  
  40aadb:	mov    ch,BYTE PTR [eax+0x1e]
  40aade:	lds    ecx,FWORD PTR [esi+0x90e6a38]
  40aae4:	sbb    BYTE PTR [edx-0x28],ch
  40aae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae8:	inc    esp
  40aae9:	int3   
  40aaea:	xchg   ebx,eax
  40aaeb:	push   0x60
  40aaed:	push   eax
  40aaee:	sbb    eax,0x43dafa9d
  40aaf3:	or     esp,DWORD PTR [ecx]
  40aaf5:	cs sahf 
  40aaf7:	stos   DWORD PTR es:[edi],eax
  40aaf8:	test   BYTE PTR [esi+ebp*2],bh
  40aafb:	adc    cl,bh
  40aafd:	inc    ebp
  40aafe:	fimul  WORD PTR [ecx]
  40ab00:	xchg   edx,eax
  40ab01:	dec    edx
  40ab02:	bound  ecx,QWORD PTR [ebx]
  40ab04:	inc    BYTE PTR [edx]
  40ab06:	mov    ds:0xa4668e58,al
  40ab0b:	mov    edi,0xe02061d0
  40ab10:	mov    edi,0x8b526a34
  40ab15:	push   cs
  40ab16:	js     0x40aa9a
  40ab18:	je     0x40ab3c
  40ab1a:	sub    DWORD PTR [edx+0x57455288],0xdac186bf
  40ab24:	add    al,0x2f
  40ab26:	gs std 
  40ab28:	and    ebp,DWORD PTR [esi-0x4c]
  40ab2b:	mov    ah,0xab
  40ab2d:	outs   dx,DWORD PTR ds:[esi]
  40ab2e:	sbb    edi,0x3f00e75d
  40ab34:	mov    al,ds:0xaa1e26d6
  40ab39:	daa    
  40ab3a:	sbb    ah,cl
  40ab3c:	inc    ecx
  40ab3d:	push   ebx
  40ab3e:	jo     0x40ab24
  40ab40:	add    DWORD PTR [ecx-0x7],esi
  40ab43:	mov    BYTE PTR [esi-0x4463a0b2],dl
  40ab49:	push   es
  40ab4a:	jle    0x40aada
  40ab4c:	sub    BYTE PTR [ecx+ebp*2],dl
  40ab4f:	mov    ch,BYTE PTR [ebx-0x41]
  40ab52:	ds sbb cl,al
  40ab55:	xchg   DWORD PTR [edx-0x65],edi
  40ab58:	mov    bh,0xb2
  40ab5a:	fist   DWORD PTR [edx]
  40ab5c:	xor    ah,BYTE PTR [ebx]
  40ab5e:	sbb    al,0xfe
  40ab60:	int3   
  40ab61:	dec    edx
  40ab62:	in     eax,0x4f
  40ab64:	pop    ebx
  40ab65:	mov    DWORD PTR [edi],0xe2044916
  40ab6b:	inc    edi
  40ab6c:	ror    BYTE PTR [edx-0x8da59b2],0xc
  40ab73:	out    dx,al
  40ab74:	ja     0x40ab52
  40ab76:	je     0x40ab7e
  40ab78:	pop    ss
  40ab79:	sahf   
  40ab7a:	inc    esi
  40ab7b:	sbb    eax,0xffffff81
  40ab7e:	fist   WORD PTR [edx+esi*8-0x35]
  40ab82:	sbb    BYTE PTR [esi],0x89
  40ab85:	adc    BYTE PTR ds:0xedba9834,0x50
  40ab8c:	test   BYTE PTR [edx-0x5d],bl
  40ab8f:	jle    0x40ab64
  40ab91:	retf   0xe29b
  40ab94:	or     al,0x7c
  40ab96:	cwde   
  40ab97:	add    eax,0xc782ebf5
  40ab9c:	sub    eax,0x196cf038
  40aba1:	in     eax,dx
  40aba2:	inc    ecx
  40aba3:	call   0xc0ae4fd5
  40aba8:	fucomi st,st(2)
  40abaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abab:	add    eax,0xa2696172
  40abb0:	stos   BYTE PTR es:[edi],al
  40abb1:	add    BYTE PTR [ebp-0x1b],ah
  40abb4:	retf   0x2301
  40abb7:	mov    ch,0xd
  40abb9:	jge    0x40abf2
  40abbb:	loop   0x40ab74
  40abbd:	or     esp,ebx
  40abbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc0:	in     eax,dx
  40abc1:	xchg   esi,eax
  40abc2:	loopne 0x40ab80
  40abc4:	push   ds
  40abc5:	ins    DWORD PTR es:[edi],dx
  40abc6:	sbb    al,0x43
  40abc8:	adc    eax,0xed1fd4a6
  40abcd:	dec    ecx
  40abce:	xor    DWORD PTR [edx+edi*2+0x6b],0x14
  40abd3:	mov    ch,0xd7
  40abd5:	sbb    eax,0xdab03c0c
  40abda:	mov    esi,0xa690ac87
  40abdf:	push   edx
  40abe0:	and    DWORD PTR [ebp-0x3c],0x8d094f33
  40abe7:	pop    ebx
  40abe8:	xor    dl,BYTE PTR [ebp-0x200bf128]
  40abee:	xchg   BYTE PTR [ecx-0x4a4fc563],dl
  40abf4:	sahf   
  40abf5:	loope  0x40ac67
  40abf7:	das    
  40abf8:	imul   esp,DWORD PTR [edx+0x2727ce4e],0x16
  40abff:	in     al,0xa3
  40ac01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac02:	push   0x1c
  40ac04:	mov    al,ds:0x8090d8eb
  40ac09:	mov    al,bh
  40ac0b:	or     al,BYTE PTR [ecx+0x34]
  40ac0e:	dec    ebp
  40ac0f:	jbe    0x40abc2
  40ac11:	psubw  mm0,QWORD PTR [edx]
  40ac14:	(bad)  [ecx+0x498394d5]
  40ac1a:	inc    edi
  40ac1b:	cld    
  40ac1c:	outs   dx,DWORD PTR ds:[esi]
  40ac1d:	scas   eax,DWORD PTR es:[edi]
  40ac1e:	(bad)  
  40ac1f:	lea    ebp,[eax]
  40ac21:	iret   
  40ac22:	push   ds
  40ac23:	push   ecx
  40ac24:	mov    al,0xb4
  40ac26:	xor    BYTE PTR [edx],al
  40ac28:	mov    dl,BYTE PTR [edi+0x10]
  40ac2b:	dec    esp
  40ac2c:	adc    dh,cl
  40ac2e:	(bad)  
  40ac2f:	outs   dx,BYTE PTR ds:[esi]
  40ac30:	xchg   esi,eax
  40ac31:	cmp    BYTE PTR [ebp+esi*4-0x3606613b],0xe7
  40ac39:	mov    al,ds:0xb4a108c7
  40ac3e:	jge    0x40ac26
  40ac40:	adc    al,0x2e
  40ac42:	push   es
  40ac43:	pushf  
  40ac44:	push   esi
  40ac45:	repz pop ecx
  40ac47:	and    DWORD PTR [eax],esp
  40ac49:	xchg   DWORD PTR [edx],ecx
  40ac4b:	mov    bl,0x5c
  40ac4d:	or     BYTE PTR [edx-0x58],bh
  40ac50:	dec    edx
  40ac51:	outs   dx,BYTE PTR ds:[esi]
  40ac52:	mov    al,ds:0x70b6cfa6
  40ac57:	not    BYTE PTR [eax-0x3b]
  40ac5a:	popa   
  40ac5b:	bound  esi,QWORD PTR ds:0xe48e9ea9
  40ac61:	xchg   ebx,eax
  40ac62:	stos   DWORD PTR es:[edi],eax
  40ac63:	jmp    0x40ac5d
  40ac65:	icebp  
  40ac66:	das    
  40ac67:	repnz repz mov al,ds:0xb5a5d9df
  40ac6e:	cwde   
  40ac6f:	sahf   
  40ac70:	pop    edi
  40ac71:	shl    DWORD PTR [ebx+eax*2],0x55
  40ac75:	jl     0x40ac32
  40ac77:	mov    al,0xf8
  40ac79:	sbb    bl,BYTE PTR [edi+edi*4-0x1077daba]
  40ac80:	arpl   WORD PTR [eax-0x18],sp
  40ac83:	in     eax,0xae
  40ac85:	cmp    ch,BYTE PTR [ebx+ebx*2+0x705eac5]
  40ac8c:	and    esi,DWORD PTR [ebp+0x44]
  40ac8f:	push   ebp
  40ac90:	add    eax,0x7cf24321
  40ac95:	mov    esi,0x68bb2499
  40ac9a:	xor    eax,0x90f7109b
  40ac9f:	adc    BYTE PTR [ebx],0x77
  40aca2:	les    ebx,FWORD PTR [eax]
  40aca4:	inc    edx
  40aca5:	aad    0x81
  40aca7:	mov    ds:0x3284227a,al
  40acac:	jge    0x40acc8
  40acae:	repnz mov ?,ebp
  40acb1:	and    eax,0x5c48e497
  40acb6:	jne    0x40acf4
  40acb8:	add    al,0x4c
  40acba:	retfw  
  40acbc:	push   edi
  40acbd:	xor    edi,DWORD PTR ds:0x9ae3996a
  40acc3:	xor    al,ch
  40acc5:	fldenv [ebx+0xf451043]
  40accb:	retf   0xdfd6
  40acce:	fmul   QWORD PTR ds:0xc31df4ee
  40acd4:	test   DWORD PTR [ebx+edx*1-0x31451ef0],ebx
  40acdb:	(bad)  
  40acdd:	pop    eax
  40acde:	out    dx,al
  40acdf:	mov    eax,ds:0x30b0c6ad
  40ace4:	xchg   esi,eax
  40ace5:	icebp  
  40ace6:	sti    
  40ace7:	lds    esi,FWORD PTR [eax+0x706e5f1a]
  40aced:	ret    
  40acee:	mov    edi,0x58f25776
  40acf3:	stos   BYTE PTR es:[edi],al
  40acf4:	(bad)  
  40acf5:	in     al,dx
  40acf6:	pusha  
  40acf7:	jmp    0x40acbe
  40acf9:	hlt    
  40acfa:	mov    cl,0xe0
  40acfc:	inc    edi
  40acfd:	inc    ecx
  40acfe:	pop    eax
  40acff:	dec    esi
  40ad00:	lea    esp,[esi]
  40ad02:	sub    BYTE PTR [edi+0x33b46353],ch
  40ad08:	and    dh,BYTE PTR [ebp+0x4b]
  40ad0b:	(bad)  
  40ad0c:	dec    esp
  40ad0d:	push   edi
  40ad0e:	in     eax,dx
  40ad0f:	js     0x40ad68
  40ad11:	sub    edi,ebx
  40ad13:	add    cl,ah
  40ad15:	push   edi
  40ad16:	(bad)  
  40ad17:	cld    
  40ad18:	push   edx
  40ad19:	sub    dl,BYTE PTR [edi-0x7deec8aa]
  40ad1f:	inc    eax
  40ad20:	mov    ebx,0x173f63ba
  40ad25:	ins    DWORD PTR es:[edi],dx
  40ad26:	fwait
  40ad27:	sahf   
  40ad28:	call   0x401d0b75
  40ad2d:	cmp    al,0x4d
  40ad2f:	mov    al,0xac
  40ad31:	push   esi
  40ad32:	sub    eax,0x58c1fa13
  40ad37:	fs (bad) 
  40ad39:	fadd   st(7),st
  40ad3b:	push   ebp
  40ad3c:	into   
  40ad3d:	xchg   esi,eax
  40ad3e:	inc    ebx
  40ad3f:	mov    cl,0xa6
  40ad41:	inc    edi
  40ad42:	and    esi,ecx
  40ad44:	add    DWORD PTR [edi-0x6aa21789],0xf3031125
  40ad4e:	popf   
  40ad4f:	fst    QWORD PTR [ecx+ecx*1-0x506b16d8]
  40ad56:	les    edi,FWORD PTR [ebp-0xcded8e6]
  40ad5c:	sbb    DWORD PTR [edx+0x22],edx
  40ad5f:	xor    ecx,edx
  40ad61:	adc    al,0xd0
  40ad63:	xor    eax,0xf3a94e51
  40ad68:	mov    ds,ecx
  40ad6a:	sub    al,0x82
  40ad6c:	jge    0x40ad72
  40ad6e:	jb     0x40acf0
  40ad70:	push   eax
  40ad71:	xchg   edi,eax
  40ad72:	or     al,0xa3
  40ad74:	push   eax
  40ad75:	sub    bl,BYTE PTR [edi-0x2185d302]
  40ad7b:	sub    al,0xce
  40ad7d:	pop    ecx
  40ad7e:	stc    
  40ad7f:	call   0x50c1a56a
  40ad84:	mov    al,0xc
  40ad86:	daa    
  40ad87:	or     al,0x82
  40ad89:	imul   edx,edi,0x23
  40ad8c:	dec    edx
  40ad8d:	jns    0x40ad89
  40ad8f:	mov    esi,edi
  40ad91:	add    eax,0x94330b77
  40ad96:	lock je 0x40adcb
  40ad99:	and    dh,BYTE PTR [eax-0x564161b4]
  40ad9f:	loope  0x40ae08
  40ada1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada2:	mov    eax,0xa0c466a7
  40ada7:	in     eax,0xf
  40ada9:	adc    DWORD PTR [ecx+0x7],eax
  40adac:	mov    esp,0xe9aa59c3
  40adb1:	sbb    bl,BYTE PTR [eax]
  40adb3:	dec    edx
  40adb4:	jmp    0x40adb1
  40adb6:	out    dx,eax
  40adb7:	(bad)  
  40adb8:	xor    edx,edx
  40adba:	data16 jle 0x40ade9
  40adbd:	ss jb  0x40ad8f
  40adc0:	out    dx,al
  40adc1:	and    al,0x3e
  40adc3:	cld    
  40adc4:	dec    esi
  40adc5:	mov    ebx,0x26815c25
  40adca:	push   cs
  40adcb:	jl     0x40ae40
  40adcd:	je     0x40adef
  40adcf:	cmp    edx,ebp
  40add1:	rcr    bh,cl
  40add3:	bound  edx,QWORD PTR [ecx-0x32cc4ae8]
  40add9:	sbb    eax,0x7ff16393
  40adde:	cmp    al,0x74
  40ade0:	xlat   BYTE PTR ds:[ebx]
  40ade1:	out    dx,al
  40ade2:	xor    ch,ch
  40ade4:	pop    eax
  40ade5:	fwait
  40ade6:	aam    0x3c
  40ade8:	mov    eax,ds:0xba9bdfbd
  40aded:	push   ebp
  40adee:	and    ch,BYTE PTR [eax]
  40adf0:	inc    eax
  40adf1:	pop    ss
  40adf2:	cli    
  40adf3:	mov    ?,WORD PTR gs:[ecx]
  40adf6:	clc    
  40adf7:	jae    0x40adab
  40adf9:	aas    
  40adfa:	push   ebp
  40adfb:	add    dl,bl
  40adfd:	outs   dx,DWORD PTR ds:[esi]
  40adfe:	mov    eax,ds:0xe4251c81
  40ae03:	lds    esi,FWORD PTR [esi]
  40ae05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae06:	out    0x17,eax
  40ae08:	jbe    0x40ae25
  40ae0a:	cmp    DWORD PTR [esi-0x34138795],eax
  40ae10:	sti    
  40ae11:	xchg   DWORD PTR [edi-0x59],edi
  40ae14:	adc    esp,edx
  40ae16:	jns    0x40adf3
  40ae18:	pop    ss
  40ae19:	pop    esp
  40ae1a:	adc    edx,DWORD PTR [ebx+0x78]
  40ae1d:	push   eax
  40ae1e:	lods   al,BYTE PTR ds:[esi]
  40ae1f:	in     al,dx
  40ae20:	sbb    BYTE PTR [eax],bh
  40ae22:	mov    dh,0xc9
  40ae24:	xchg   BYTE PTR [edx+0x2e],bh
  40ae27:	bound  edi,QWORD PTR [edx-0x32]
  40ae2a:	mov    WORD PTR [ebp+0x29],ss
  40ae2d:	aas    
  40ae2e:	fcmovnb st,st(4)
  40ae30:	dec    eax
  40ae31:	sahf   
  40ae32:	shr    BYTE PTR [esi],0xe6
  40ae35:	es je  0x40aeb3
  40ae38:	retf   
  40ae39:	push   edx
  40ae3a:	mov    esp,0x5d0b40f8
  40ae3f:	jns    0x40ae8c
  40ae41:	jae    0x40ae7b
  40ae43:	and    eax,DWORD PTR [esi-0x4e]
  40ae46:	iret   
  40ae47:	mov    al,0xee
  40ae49:	mov    bl,0x79
  40ae4b:	cmp    ch,BYTE PTR cs:[esi]
  40ae4e:	dec    eax
  40ae4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae50:	dec    edi
  40ae51:	dec    ebx
  40ae52:	lods   eax,DWORD PTR ds:[esi]
  40ae53:	int    0x4a
  40ae55:	out    dx,eax
  40ae56:	popa   
  40ae57:	into   
  40ae58:	jl     0x40ae3d
  40ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5b:	jne    0x40ae30
  40ae5d:	test   BYTE PTR ds:0x5e160738,al
  40ae63:	xor    eax,0x3f3f96ce
  40ae68:	add    dh,0xca
  40ae6b:	push   ebx
  40ae6c:	cmc    
  40ae6d:	pushf  
  40ae6e:	ror    al,0x36
  40ae71:	popa   
  40ae72:	ret    
  40ae73:	test   DWORD PTR [ebp+0x54e2d3b4],0xbe925329
  40ae7d:	pmullw mm6,mm1
  40ae80:	out    0x29,eax
  40ae82:	inc    esp
  40ae83:	ins    BYTE PTR es:[edi],dx
  40ae84:	rcl    DWORD PTR [esp+ebp*4-0x57],cl
  40ae88:	gs in  al,dx
  40ae8a:	push   esp
  40ae8b:	jge    0x40ae9e
  40ae8d:	fst    DWORD PTR [esi-0x18]
  40ae90:	mov    ebx,0xe3649034
  40ae95:	add    DWORD PTR [edx-0x742562bf],ebp
  40ae9b:	add    DWORD PTR [ebx],edx
  40ae9d:	fs stos DWORD PTR es:[edi],eax
  40ae9f:	test   edi,esi
  40aea1:	sub    eax,edi
  40aea3:	nop
  40aea4:	xchg   DWORD PTR [ecx+0x4f],ebp
  40aea7:	call   0xac01:0x1f86100b
  40aeae:	mov    esp,0x4cae9d43
  40aeb3:	rcl    ebp,1
  40aeb5:	add    eax,DWORD PTR [edx]
  40aeb7:	popa   
  40aeb8:	ss in  al,dx
  40aeba:	test   DWORD PTR fs:[ebp+0x4bd358fd],ebp
  40aec1:	xchg   BYTE PTR [ecx-0xbe01117],dh
  40aec7:	and    BYTE PTR [edx-0x7e21ec93],cl
  40aecd:	not    edx
  40aecf:	push   0xa3e290d0
  40aed4:	call   0x345c9b61
  40aed9:	out    dx,eax
  40aeda:	(bad)  
  40aedb:	cmp    eax,ecx
  40aedd:	sbb    edx,DWORD PTR [edi]
  40aedf:	cmc    
  40aee0:	jno    0x40ae8c
  40aee2:	sub    esp,eax
  40aee4:	jmp    0x40aea2
  40aee6:	push   0x7d
  40aee8:	aad    0x55
  40aeea:	push   esp
  40aeeb:	clc    
  40aeec:	fld    DWORD PTR [ecx]
  40aeee:	xchg   ebp,eax
  40aeef:	mov    ss,WORD PTR [ecx+eiz*8]
  40aef2:	(bad)  
  40aef4:	or     edi,DWORD PTR [eax]
  40aef6:	daa    
  40aef7:	out    dx,eax
  40aef8:	add    DWORD PTR [ebx-0x19e131ba],edx
  40aefe:	inc    esp
  40aeff:	mov    edx,0xe87cf813
  40af04:	data16 test cl,ch
  40af07:	inc    esp
  40af08:	push   cs
  40af09:	xchg   ebp,eax
  40af0a:	loope  0x40aee5
  40af0c:	and    esi,edi
  40af0e:	xor    dl,BYTE PTR [edi-0x15]
  40af11:	retf   0x29f4
  40af14:	fdiv   DWORD PTR [edi]
  40af16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af17:	pop    edi
  40af18:	loop   0x40af4f
  40af1a:	sub    esi,ebx
  40af1c:	pop    eax
  40af1d:	xor    ebx,eax
  40af1f:	mov    ?,WORD PTR [eax+0x4ef071eb]
  40af25:	aaa    
  40af26:	or     bl,dl
  40af28:	sbb    eax,0x105bbc8b
  40af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2e:	mov    al,0xdd
  40af30:	lea    ecx,[esi+0x49]
  40af33:	cmp    BYTE PTR [edx],0x21
  40af36:	and    DWORD PTR [esp+ebx*2+0x5df46d59],0xf6ae297b
  40af41:	loopne 0x40af42
  40af43:	retf   0xe285
  40af46:	lock jge 0x40af2c
  40af49:	jnp    0x40afc2
  40af4b:	pop    eax
  40af4c:	xchg   esi,eax
  40af4d:	ds xor al,0xab
  40af50:	inc    eax
  40af51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af52:	push   esi
  40af53:	jp     0x40af67
  40af55:	repz jnp 0x40af7e
  40af58:	fucomip st,st(0)
  40af5a:	xor    eax,0xec208688
  40af5f:	pop    ebp
  40af60:	jp     0x40af77
  40af62:	jp     0x40afe0
  40af64:	enter  0xbbe7,0xf
  40af68:	sar    BYTE PTR [eax],cl
  40af6a:	jne    0x40af8b
  40af6c:	or     DWORD PTR es:[edx-0x48392289],0x9d39ea84
  40af77:	outs   dx,BYTE PTR ds:[esi]
  40af78:	inc    edx
  40af79:	bound  edx,QWORD PTR [eax-0xd]
  40af7c:	sti    
  40af7d:	ficomp WORD PTR [eax]
  40af7f:	push   ebp
  40af80:	das    
  40af81:	(bad)
  40af84:	and    ebp,DWORD PTR [esi-0x7c2f823b]
  40af8a:	mov    ah,BYTE PTR [esi]
  40af8c:	mov    eax,ds:0xaedd23fb
  40af91:	shufps xmm6,xmm2,0xa1
  40af95:	imul   esi,ecx,0xd
  40af98:	stos   BYTE PTR es:[edi],al
  40af99:	ret    0x713a
  40af9c:	leave  
  40af9d:	sbb    eax,ebp
  40af9f:	inc    esi
  40afa0:	retf   
  40afa1:	popa   
  40afa2:	sbb    BYTE PTR [ebx-0x66b2df4a],dh
  40afa8:	(bad)  [ebp+0x33]
  40afab:	pop    ss
  40afac:	or     ecx,DWORD PTR [edi+0x429675a4]
  40afb2:	loope  0x40afbd
  40afb4:	and    DWORD PTR [eax-0xb7a27fa],edi
  40afba:	xor    bh,BYTE PTR [edx+ebx*1+0x0]
  40afbe:	enter  0x3277,0x94
  40afc2:	dec    ebx
  40afc3:	sub    BYTE PTR [ebp+eiz*8-0x79061a15],dh
  40afca:	(bad)  
  40afcb:	jo     0x40aff6
  40afcd:	inc    esi
  40afce:	cmp    ebp,DWORD PTR [eax+eiz*4-0x1f]
  40afd2:	mov    bl,0x8
  40afd4:	sub    al,0x6b
  40afd6:	xchg   ebx,eax
  40afd7:	push   ds
  40afd8:	retf   
  40afd9:	(bad)  
  40afda:	sbb    eax,0x22678546
  40afdf:	mov    esi,0x3a7f5189
  40afe4:	jle    0x40b008
  40afe6:	inc    ebp
  40afe7:	lahf   
  40afe8:	out    dx,al
  40afe9:	bound  edx,QWORD PTR [edi+ecx*4-0x25]
  40afed:	mov    al,ds:0x6914b1af
  40aff2:	inc    ecx
  40aff3:	adc    al,bl
  40aff5:	outs   dx,DWORD PTR ds:[esi]
  40aff6:	ds or  eax,0xf8fa68bb
  40affc:	(bad)  
  40affd:	fsubr  QWORD PTR [eax+0x4c]
  40b000:	mov    ds:0x417e81b,al
  40b005:	int3   
  40b006:	jle    0x40b07d
  40b008:	dec    bh
  40b00a:	mov    dl,BYTE PTR [ecx]
  40b00c:	ins    DWORD PTR es:[edi],dx
  40b00d:	int    0xaa
  40b00f:	mov    edi,fs
  40b011:	pusha  
  40b012:	adc    DWORD PTR [ecx-0x79035fb1],ecx
  40b018:	mov    WORD PTR [ebp+eax*1+0x5b],gs
  40b01c:	test   cl,bl
  40b01e:	mov    WORD PTR [ebx+0x3491ea32],fs
  40b024:	loopne 0x40afb3
  40b026:	test   DWORD PTR [esi+0x38d5c3b],edi
  40b02c:	(bad)  
  40b02d:	and    ebx,DWORD PTR [ebx]
  40b02f:	and    eax,0xaa4bf45c
  40b034:	cdq    
  40b035:	outs   dx,DWORD PTR ds:[esi]
  40b036:	sbb    esi,DWORD PTR [edi+0x2872eefb]
  40b03c:	imul   ebp,DWORD PTR [ebx-0x17],0x268b3a17
  40b043:	push   edi
  40b044:	xor    DWORD PTR [ecx],eax
  40b046:	jmp    0x40aff1
  40b048:	xor    ebp,DWORD PTR ds:0xe7f1c082
  40b04e:	into   
  40b04f:	cwde   
  40b050:	adc    BYTE PTR [ebx],al
  40b052:	mov    bh,0x1a
  40b054:	call   0xc1cf:0x6a0f8eb
  40b05b:	pop    es
  40b05c:	mov    edi,es
  40b05e:	sbb    dh,BYTE PTR [ecx]
  40b060:	xor    eax,0x6bb0e1a8
  40b065:	jge    0x40b09a
  40b067:	out    dx,eax
  40b068:	and    DWORD PTR [esi+0x3db6b69f],esp
  40b06e:	dec    edi
  40b06f:	stos   BYTE PTR es:[edi],al
  40b070:	jmp    0xd885551a
  40b075:	frstor [eax]
  40b077:	mov    ch,0x21
  40b079:	imul   eax,edx,0x1a
  40b07c:	inc    esi
  40b07d:	and    BYTE PTR [ebp+0x7a2e1d87],dl
  40b083:	sub    dl,0x87
  40b086:	iret   
  40b087:	das    
  40b088:	pop    ebp
  40b089:	sbb    BYTE PTR [eax],bh
  40b08b:	mov    DWORD PTR [edx],ecx
  40b08d:	mov    esp,0xf1181f4f
  40b092:	out    0x23,al
  40b094:	xchg   ecx,eax
  40b095:	inc    eax
  40b096:	call   0xc4b35668
  40b09b:	add    bh,BYTE PTR [eax+0x7]
  40b09e:	retf   0xbfc2
  40b0a1:	adc    eax,0x2b7026a3
  40b0a6:	mov    esi,0x800462fe
  40b0ab:	sbb    bh,bh
  40b0ad:	and    DWORD PTR [edx+0xd],ebp
  40b0b0:	scas   eax,DWORD PTR es:[edi]
  40b0b1:	mov    ah,0x4b
  40b0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b4:	xor    esp,ebp
  40b0b6:	sbb    dh,al
  40b0b8:	adc    eax,0xfba228ef
  40b0bd:	ret    
  40b0be:	aas    
  40b0bf:	ds fs pop ecx
  40b0c2:	jae    0x40b0d0
  40b0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c5:	loope  0x40b130
  40b0c7:	(bad)  
  40b0c8:	jle    0x40b118
  40b0ca:	gs dec ebx
  40b0cc:	or     al,0xe
  40b0ce:	ret    0x43f7
  40b0d1:	add    ah,0x4b
  40b0d4:	xor    eax,0xe11e0c73
  40b0d9:	pop    esi
  40b0da:	and    al,0x40
  40b0dc:	mov    eax,ds:0x4e12aedc
  40b0e1:	mov    bl,0x6b
  40b0e3:	in     al,0xdc
  40b0e5:	cmp    dl,dh
  40b0e7:	sbb    esp,DWORD PTR [esi-0x7d]
  40b0ea:	retf   
  40b0eb:	leave  
  40b0ec:	popa   
  40b0ed:	adc    dh,BYTE PTR [ebp-0x7d]
  40b0f0:	or     BYTE PTR [edx*2-0xf54c764],bh
  40b0f7:	mov    ecx,0xb156c5a3
  40b0fc:	xchg   ebp,eax
  40b0fd:	xor    BYTE PTR [edx+esi*4],bl
  40b100:	and    al,0x49
  40b102:	dec    ecx
  40b103:	mov    ah,0x72
  40b105:	push   edx
  40b106:	dec    ebp
  40b107:	pop    edi
  40b108:	sub    dl,BYTE PTR [edx+ebx*2]
  40b10b:	inc    esi
  40b10c:	add    al,0x82
  40b10e:	ja     0x40b13f
  40b110:	pop    edx
  40b111:	(bad)  
  40b112:	mov    BYTE PTR [ebx],dl
  40b114:	mov    al,0x92
  40b116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b117:	cmp    DWORD PTR [ebx],ebp
  40b119:	add    al,0x6e
  40b11b:	inc    edx
  40b11c:	adc    eax,0x38337d10
  40b121:	add    esi,DWORD PTR [edx]
  40b123:	out    0x5f,al
  40b125:	daa    
  40b126:	cmp    DWORD PTR [ebx+edi*4],ebp
  40b129:	js     0x40b0e9
  40b12b:	leave  
  40b12c:	popa   
  40b12d:	outs   dx,DWORD PTR ds:[esi]
  40b12e:	mov    ds:0x20518054,al
  40b133:	or     eax,0xef5b9d16
  40b138:	cli    
  40b139:	dec    edx
  40b13a:	mov    bh,0x50
  40b13c:	daa    
  40b13d:	das    
  40b13e:	adc    esp,eax
  40b140:	push   esi
  40b141:	inc    edi
  40b142:	clc    
  40b143:	mov    gs,WORD PTR [edx]
  40b145:	into   
  40b146:	nop
  40b147:	mov    edi,0xd3350d0f
  40b14c:	sub    al,0x89
  40b14e:	sub    cl,BYTE PTR [ebp+0x54e3c7d7]
  40b154:	sbb    DWORD PTR [edx+0x56],eax
  40b157:	out    dx,al
  40b158:	pop    edx
  40b159:	or     DWORD PTR [edx],esp
  40b15b:	scas   eax,DWORD PTR es:[edi]
  40b15c:	xor    edx,0x9302fae5
  40b162:	mov    bl,0x15
  40b164:	pop    DWORD PTR [esi]
  40b166:	adc    eax,0xf33c5080
  40b16b:	sbb    bl,ah
  40b16d:	mov    ds:0x2d6ef962,al
  40b172:	adc    edx,edi
  40b174:	pop    edi
  40b175:	pop    edi
  40b176:	out    dx,eax
  40b177:	add    BYTE PTR [edx],0xa6
  40b17a:	fild   QWORD PTR [ebp-0x39]
  40b17d:	mov    eax,0xe29394f
  40b182:	jecxz  0x40b152
  40b184:	cmp    al,0x87
  40b186:	imul   esi,DWORD PTR [ecx],0xffffff9d
  40b189:	pop    edx
  40b18a:	or     DWORD PTR [ecx],edi
  40b18c:	movsx  eax,WORD PTR [edx]
  40b18f:	ins    BYTE PTR es:[edi],dx
  40b190:	mov    al,0xb2
  40b192:	mov    ?,WORD PTR [esi-0x7392a551]
  40b198:	lahf   
  40b199:	mov    bh,0x5a
  40b19b:	mov    cl,0xe0
  40b19d:	jg     0x40b1f8
  40b19f:	xchg   ebx,eax
  40b1a0:	rol    DWORD PTR [edi+ebx*8+0x7f],0x84
  40b1a5:	mov    ds:0x2702916,al
  40b1aa:	sub    edx,DWORD PTR [edi+0x52]
  40b1ad:	dec    ebp
  40b1ae:	pusha  
  40b1af:	mov    al,ds:0x772324d5
  40b1b4:	xchg   ebx,eax
  40b1b5:	add    esi,esp
  40b1b7:	mov    edx,0xfe93bd28
  40b1bc:	in     eax,0xf2
  40b1be:	pop    ebx
  40b1bf:	push   0x40936cc7
  40b1c4:	push   ebx
  40b1c5:	xor    BYTE PTR [ecx+0x15639fec],ah
  40b1cb:	retf   0x6878
  40b1ce:	jmp    0xadf190fc
  40b1d3:	sar    BYTE PTR [edi+0x4],1
  40b1d6:	stos   DWORD PTR es:[edi],eax
  40b1d7:	dec    edi
  40b1d8:	pop    es
  40b1d9:	xor    DWORD PTR [ebp-0x5e],ebx
  40b1dc:	jmp    0x9d0f1c78
  40b1e1:	neg    BYTE PTR [ebp-0x65afa9d8]
  40b1e7:	jb     0x40b1f8
  40b1e9:	(bad)  
  40b1ea:	xor    DWORD PTR [ebp+0x79eff49],ebp
  40b1f0:	outs   dx,DWORD PTR ds:[esi]
  40b1f1:	inc    esp
  40b1f2:	lods   eax,DWORD PTR ds:[esi]
  40b1f3:	inc    ch
  40b1f5:	dec    esp
  40b1f6:	xchg   esi,eax
  40b1f7:	dec    esp
  40b1f8:	out    0x94,al
  40b1fa:	sbb    eax,0x6fcf4c76
  40b1ff:	rcr    DWORD PTR [ebp+0x2e],cl
  40b202:	mov    eax,ds:0x9564c6f0
  40b207:	out    0xce,al
  40b209:	sti    
  40b20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b20b:	loop   0x40b1c2
  40b20d:	pop    esi
  40b20e:	call   0x58f0:0x5067f67c
  40b215:	jp     0x40b1c8
  40b217:	leave  
  40b218:	pop    edx
  40b219:	mov    esp,0xcd97e635
  40b21e:	stos   DWORD PTR es:[edi],eax
  40b21f:	lahf   
  40b220:	cld    
  40b221:	pop    ebp
  40b222:	mov    ecx,?
  40b224:	aad    0xa7
  40b226:	jge    0x40b290
  40b228:	pop    edi
  40b229:	add    al,0x65
  40b22b:	xchg   ebx,eax
  40b22c:	ins    BYTE PTR es:[edi],dx
  40b22d:	sbb    BYTE PTR [esi],cl
  40b22f:	bound  ebx,QWORD PTR [edi]
  40b231:	pop    esp
  40b232:	and    BYTE PTR [edi-0x3005e6a0],ch
  40b238:	call   0x3832800
  40b23d:	loopne 0x40b1d9
  40b23f:	pop    ecx
  40b240:	mov    ch,0x6a
  40b242:	lock ret 
  40b244:	push   eax
  40b245:	pop    eax
  40b246:	iret   
  40b247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b248:	xor    DWORD PTR [ebx-0x7e],eax
  40b24b:	clc    
  40b24c:	mov    eax,ds:0x83c88d92
  40b251:	sbb    al,0x49
  40b253:	cwde   
  40b254:	mov    edi,0xbb8171f6
  40b259:	xor    BYTE PTR [eax+0x7437cc74],0xcc
  40b260:	adc    BYTE PTR ds:0xd7468ed5,0xce
  40b267:	cdq    
  40b268:	mov    ch,0x64
  40b26a:	mov    cs,WORD PTR [esi-0x48]
  40b26d:	add    BYTE PTR [ebx-0x56e9d7f6],bl
  40b273:	sub    BYTE PTR [esi],dh
  40b275:	push   eax
  40b276:	jl     0x40b27d
  40b278:	mov    DWORD PTR [eax+ebx*2+0x79],esi
  40b27c:	add    ebp,DWORD PTR [edx-0x2bc83ca6]
  40b282:	test   al,0x5f
  40b284:	sub    al,0x56
  40b286:	mov    al,BYTE PTR [ecx-0x7ad8158d]
  40b28c:	retf   0xf7f1
  40b28f:	mov    edi,0xa313f67
  40b294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b295:	push   ebx
  40b296:	mov    ecx,0x75ea7de7
  40b29b:	lea    edx,[edi+edx*1]
  40b29e:	mov    al,0xbf
  40b2a0:	iret   
  40b2a1:	xchg   esp,eax
  40b2a2:	adc    ah,BYTE PTR [ebx-0x35]
  40b2a5:	lods   al,BYTE PTR ds:[esi]
  40b2a6:	jp     0x40b2ca
  40b2a8:	ins    DWORD PTR es:[edi],dx
  40b2a9:	fsub   st,st(4)
  40b2ab:	iret   
  40b2ac:	dec    DWORD PTR [ecx]
  40b2ae:	les    esp,FWORD PTR [ebp+0x29ba5b7]
  40b2b4:	setnp  BYTE PTR [edx]
  40b2b7:	pop    eax
  40b2b8:	mov    edi,0xf3ddb350
  40b2bd:	rcl    BYTE PTR [ebx+eiz*8-0x30d3614a],1
  40b2c4:	inc    esi
  40b2c5:	ins    DWORD PTR es:[edi],dx
  40b2c6:	lods   al,BYTE PTR ds:[esi]
  40b2c7:	lds    ecx,FWORD PTR [edi-0x61bb99e1]
  40b2cd:	add    edi,DWORD PTR [edx+0x37c81ae]
  40b2d3:	aaa    
  40b2d4:	push   eax
  40b2d5:	repz mov esi,edi
  40b2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d9:	inc    ebx
  40b2da:	push   ds
  40b2db:	sub    eax,0x85dd51f8
  40b2e0:	and    bl,BYTE PTR [ecx-0x2d0ee593]
  40b2e6:	retf   
  40b2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2e8:	rdtsc  
  40b2ea:	push   ebx
  40b2eb:	gs sub ch,ch
  40b2ee:	sub    dl,dh
  40b2f0:	inc    ecx
  40b2f1:	push   ss
  40b2f2:	bound  edx,QWORD PTR [esi]
  40b2f4:	pop    ebx
  40b2f5:	jbe    0x40b325
  40b2f7:	xchg   ecx,eax
  40b2f8:	cmp    eax,0x689f9af4
  40b2fd:	fild   WORD PTR [ecx+0x433e058e]
  40b303:	cld    
  40b304:	xlat   BYTE PTR ds:[ebx]
  40b306:	jo     0x40b320
  40b308:	mov    edx,0x38b1ad2e
  40b30d:	jle    0x40b30b
  40b30f:	xor    al,0xaa
  40b311:	mov    esp,0xfd39d67f
  40b316:	dec    ebp
  40b317:	fdivp  st(2),st
  40b319:	arpl   WORD PTR ds:[ebx+edi*1-0x7],bp
  40b31e:	adc    ch,BYTE PTR [edi+ecx*1]
  40b321:	(bad)  
  40b322:	xor    ch,dh
  40b324:	jecxz  0x40b2b4
  40b326:	pop    ds
  40b327:	cmove  esi,esi
  40b32a:	pop    ebx
  40b32b:	and    edi,DWORD PTR [esi+ebp*2]
  40b32e:	mov    WORD PTR [edi+0x2832974c],?
  40b334:	jmp    DWORD PTR [ebp+0x68]
  40b337:	stc    
  40b338:	mov    ds:0xa7a39465,eax
  40b33d:	dec    edi
  40b33e:	cmp    DWORD PTR [eax+0x67],0x39
  40b342:	popf   
  40b343:	pop    ebp
  40b344:	cmovle edi,DWORD PTR [esi+0x6f]
  40b348:	pop    eax
  40b349:	(bad)  
  40b34a:	pop    ebx
  40b34b:	sub    DWORD PTR [ecx],eax
  40b34d:	mov    WORD PTR [esi-0x34],gs
  40b350:	inc    esp
  40b351:	pop    ss
  40b352:	mov    cl,0x51
  40b354:	mov    ebx,0x32606fde
  40b359:	addr16 xor bl,al
  40b35c:	dec    ebp
  40b35d:	inc    ch
  40b35f:	clc    
  40b360:	jle    0x40b2e9
  40b362:	test   DWORD PTR [ecx+0x662f07cf],ebp
  40b368:	inc    ebp
  40b369:	lock or ebp,DWORD PTR [eax-0x74]
  40b36d:	jbe    0x40b3cd
  40b36f:	cmp    al,BYTE PTR [esi-0x64491763]
  40b375:	adc    ch,BYTE PTR [ebp-0x53045232]
  40b37b:	loope  0x40b345
  40b37d:	hlt    
  40b37e:	cmp    al,0xd5
  40b380:	jecxz  0x40b347
  40b382:	mov    eax,0xbcda3ad5
  40b387:	ins    DWORD PTR es:[edi],dx
  40b388:	push   0xbf51e6a4
  40b38d:	sub    esi,edx
  40b38f:	xchg   ebp,eax
  40b390:	push   ebx
  40b391:	mov    ebp,0x701089c0
  40b396:	in     eax,0x61
  40b398:	int    0x3e
  40b39a:	jns    0x40b374
  40b39c:	ret    0x903b
  40b39f:	les    edx,FWORD PTR [esi+0x48]
  40b3a2:	sbb    DWORD PTR [eax+esi*2],eax
  40b3a5:	cmp    BYTE PTR [edi+eiz*1-0x4a],al
  40b3a9:	test   eax,0xd69320c
  40b3ae:	inc    ecx
  40b3af:	xchg   esp,eax
  40b3b0:	mov    DWORD PTR [eax+0x4ebec99],edx
  40b3b6:	aas    
  40b3b7:	daa    
  40b3b8:	jo     0x40b3d2
  40b3ba:	pop    esp
  40b3bb:	mov    al,0x8f
  40b3bd:	or     ch,bh
  40b3bf:	or     ecx,edi
  40b3c1:	mov    ebp,0xb3e022c4
  40b3c6:	and    ah,BYTE PTR [ebx-0x244d5135]
  40b3cc:	push   0xffffffad
  40b3ce:	add    DWORD PTR [edx+0x5e],eax
  40b3d1:	outs   dx,BYTE PTR ds:[esi]
  40b3d2:	pop    edx
  40b3d3:	adc    ebp,edx
  40b3d5:	sub    eax,0xdb986c61
  40b3da:	sub    eax,0xc85e2a1e
  40b3df:	xchg   DWORD PTR [ebx+0x53],esi
  40b3e2:	imul   eax,DWORD PTR [edi],0x40ce45b3
  40b3e8:	pop    edi
  40b3e9:	dec    ah
  40b3eb:	je     0x40b3af
  40b3ed:	sub    esi,DWORD PTR [ecx-0x757843f4]
  40b3f3:	dec    ebp
  40b3f4:	rol    BYTE PTR [ebp+0x1a],1
  40b3f7:	fst    st(7)
  40b3f9:	xor    al,0x71
  40b3fb:	jecxz  0x40b3d4
  40b3fd:	imul   esi,DWORD PTR [eax-0x1e],0x5fba0558
  40b404:	push   eax
  40b405:	jp     0x40b460
  40b407:	add    DWORD PTR [eax+0x5893bd01],edi
  40b40d:	loop   0x40b48e
  40b40f:	rcl    DWORD PTR [eax-0x2d69ff2a],0x28
  40b416:	mov    edx,0x85244378
  40b41b:	jne    0x40b489
  40b41d:	push   0x42f725a1
  40b422:	cmp    eax,0xb557781d
  40b427:	enter  0xad44,0x4e
  40b42b:	jmp    0xb422:0xb3bba50e
  40b432:	pop    ebp
  40b433:	sbb    BYTE PTR [eax-0x2c],dl
  40b436:	in     al,0x1c
  40b438:	and    eax,ebx
  40b43a:	ja     0x40b49b
  40b43c:	xor    DWORD PTR [eax-0x7f],eax
  40b43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b440:	dec    esi
  40b441:	add    eax,0x3370971c
  40b446:	xor    BYTE PTR [ebx+0x2689ee1c],0x4f
  40b44d:	rcr    cl,1
  40b44f:	nop
  40b450:	xor    eax,0xa86fadc0
  40b455:	mov    esi,0xb033f0
  40b45a:	repz jecxz 0x40b448
  40b45d:	test   al,0xee
  40b45f:	push   ecx
  40b460:	dec    edi
  40b461:	pop    edx
  40b462:	push   edi
  40b463:	mov    ebx,0xdf14c74e
  40b468:	cmp    ebx,DWORD PTR [ecx+0x55]
  40b46b:	and    esi,ebp
  40b46d:	xor    eax,0x318e3d04
  40b472:	mov    bl,0x61
  40b474:	push   esp
  40b475:	shl    BYTE PTR [ebx-0x27f16605],cl
  40b47b:	mov    DWORD PTR [ebp+0x2fcedc4e],eax
  40b481:	sbb    eax,0x7f20e300
  40b486:	popa   
  40b487:	lahf   
  40b488:	mov    ebp,0x8b281f4
  40b48d:	repnz dec esp
  40b48f:	add    BYTE PTR [ecx+0x73],ah
  40b492:	add    al,0x63
  40b494:	cs clc 
  40b496:	leave  
  40b497:	jbe    0x40b4f6
  40b499:	shr    BYTE PTR [esi+0x4a],1
  40b49c:	pop    ss
  40b49d:	jmp    0xe1e4079f
  40b4a2:	test   DWORD PTR [eax+0x6bd5252b],edi
  40b4a8:	add    DWORD PTR [ebx-0x9],ecx
  40b4ab:	lds    edi,FWORD PTR [eax+0x75]
  40b4ae:	dec    edi
  40b4af:	cmp    eax,0xce8cc9a7
  40b4b4:	ja     0x40b4f8
  40b4b6:	mov    DWORD PTR [esi],edx
  40b4b8:	aam    0xa6
  40b4ba:	cmp    al,0x97
  40b4bc:	sub    edi,DWORD PTR [ebx]
  40b4be:	imul   esp,edx,0x44
  40b4c1:	cmp    eax,0xe4906dcd
  40b4c6:	adc    al,0xe2
  40b4c8:	xor    BYTE PTR [eax+0x4c77cdd3],bh
  40b4ce:	jge    0x40b470
  40b4d0:	adc    dl,dl
  40b4d2:	add    al,0x17
  40b4d4:	xor    edx,DWORD PTR [esi]
  40b4d6:	loopne 0x40b502
  40b4d8:	mov    edi,0x6865855b
  40b4dd:	aaa    
  40b4de:	or     eax,0xf25e537
  40b4e3:	enter  0x5889,0xbc
  40b4e7:	or     al,0x92
  40b4e9:	fistp  DWORD PTR [ecx+0x32d53336]
  40b4ef:	(bad)  
  40b4f0:	fs mov edx,0xe55b1086
  40b4f6:	xchg   edi,eax
  40b4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4f8:	fcmovnu st,st(5)
  40b4fa:	test   BYTE PTR [edi-0x403fb383],dh
  40b500:	ins    BYTE PTR es:[edi],dx
  40b501:	stc    
  40b502:	mov    esp,0xc5b7c2aa
  40b507:	mov    DWORD PTR [ebx+ecx*1+0x6a],ecx
  40b50b:	and    eax,DWORD PTR [ebp-0x219b4ae6]
  40b511:	pop    ss
  40b512:	inc    ebx
  40b513:	dec    eax
  40b514:	pop    esi
  40b515:	fcmovu st,st(7)
  40b517:	scas   al,BYTE PTR es:[edi]
  40b518:	push   esp
  40b519:	jae    0x40b4a3
  40b51b:	inc    esi
  40b51c:	jno    0x40b578
  40b51e:	loopne 0x40b4ea
  40b520:	mov    ah,0x14
  40b522:	ins    BYTE PTR es:[edi],dx
  40b523:	add    DWORD PTR [eax+0x7],esp
  40b526:	xchg   esp,eax
  40b527:	cdq    
  40b528:	inc    edi
  40b529:	stos   BYTE PTR es:[edi],al
  40b52a:	lock push eax
  40b52c:	push   eax
  40b52d:	xchg   ebx,eax
  40b52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52f:	push   eax
  40b530:	add    dl,0xf1
  40b533:	aaa    
  40b534:	cmc    
  40b535:	cmp    al,0x34
  40b537:	or     al,0x64
  40b539:	mov    ah,0x7c
  40b53b:	nop
  40b53c:	push   cs
  40b53d:	push   eax
  40b53e:	or     al,0xc2
  40b540:	ret    
  40b541:	ret    0xd45e
  40b544:	js     0x40b519
  40b546:	cwde   
  40b547:	sti    
  40b548:	mov    ah,0xa0
  40b54a:	fucomi st,st(2)
  40b54c:	mov    eax,0x475df916
  40b551:	lods   al,BYTE PTR ds:[esi]
  40b552:	imul   eax,DWORD PTR [eax-0x3a],0x63
  40b556:	or     cl,BYTE PTR [edx-0x4d7bccd3]
  40b55c:	or     BYTE PTR [ebp+0x56],ch
  40b55f:	jno    0x40b53f
  40b561:	cdq    
  40b562:	dec    esp
  40b563:	dec    eax
  40b564:	inc    ebx
  40b565:	cmp    esp,DWORD PTR [ebp+ebx*2+0x45]
  40b569:	(bad)  
  40b56a:	and    cl,BYTE PTR [ecx]
  40b56c:	sub    ch,dl
  40b56e:	sub    ah,al
  40b570:	mov    eax,0x9301cdcc
  40b575:	pop    eax
  40b576:	cmp    al,0x5e
  40b578:	xchg   DWORD PTR [eax],ebp
  40b57a:	jbe    0x40b55e
  40b57c:	fsubr  QWORD PTR [eax+0x69ed6cb4]
  40b582:	daa    
  40b583:	cmp    DWORD PTR [eax],edx
  40b585:	xchg   ecx,eax
  40b586:	outs   dx,DWORD PTR ds:[esi]
  40b587:	mov    ds:0xc7a9ae24,al
  40b58c:	xor    eax,0x495bd744
  40b591:	cmc    
  40b592:	push   edi
  40b593:	jae    0x40b521
  40b595:	pushf  
  40b596:	sub    bh,BYTE PTR [ebp-0x563f7145]
  40b59c:	jns    0x40b5ca
  40b59e:	xchg   esi,eax
  40b59f:	call   0xdf9:0x4ef4aae2
  40b5a6:	or     al,0x62
  40b5a8:	mov    ebp,DWORD PTR [ecx+0x4]
  40b5ab:	mov    al,BYTE PTR [esi+eax*4-0x66]
  40b5af:	fld    QWORD PTR [ecx+eax*1+0x4ed8b84e]
  40b5b6:	mov    BYTE PTR [edx+0x1],bl
  40b5b9:	and    al,0x69
  40b5bb:	lock sbb al,0x9e
  40b5be:	leave  
  40b5bf:	imul   edi,DWORD PTR [esi],0xffffffb2
  40b5c2:	out    0xb,eax
  40b5c4:	pop    es
  40b5c5:	mov    ds:0xacfe9cd4,eax
  40b5ca:	add    eax,0xf153583e
  40b5cf:	mov    cl,0x99
  40b5d1:	inc    eax
  40b5d2:	ret    0x65c
  40b5d5:	adc    edi,DWORD PTR [ecx]
  40b5d7:	xchg   edx,eax
  40b5d8:	jb     0x40b569
  40b5da:	inc    esi
  40b5db:	sbb    eax,0xfdbea3a0
  40b5e0:	or     DWORD PTR [esi-0x1],esi
  40b5e3:	pop    edx
  40b5e4:	dec    ebx
  40b5e5:	sbb    DWORD PTR [eax-0x588719a9],0xb5a84bc2
  40b5ef:	pop    esp
  40b5f0:	fisubr WORD PTR [ecx-0x6f242057]
  40b5f6:	mov    ?,esp
  40b5f8:	dec    ebx
  40b5f9:	aas    
  40b5fa:	popf   
  40b5fb:	ficom  WORD PTR [ebx]
  40b5fd:	ret    0x77f9
  40b600:	sar    DWORD PTR [edi],0x7a
  40b603:	adc    DWORD PTR [ecx+0x2d],ebx
  40b606:	pop    esp
  40b607:	push   ebx
  40b608:	xor    eax,DWORD PTR ds:0xf25e04a2
  40b60e:	inc    eax
  40b60f:	mov    edi,0x72e07a4d
  40b614:	scas   al,BYTE PTR es:[edi]
  40b615:	mov    ebp,0x9992e20c
  40b61a:	pop    ss
  40b61b:	adc    eax,0xaf7701cf
  40b620:	scas   al,BYTE PTR es:[edi]
  40b621:	fs test eax,0x34931db6
  40b627:	push   esi
  40b628:	in     al,dx
  40b629:	mov    al,BYTE PTR [ebx]
  40b62b:	sub    eax,0x2d4fd218
  40b630:	dec    edx
  40b631:	xchg   BYTE PTR [edx+0x60],bl
  40b634:	xchg   ecx,eax
  40b635:	pop    ds
  40b636:	push   es
  40b637:	push   ss
  40b638:	mov    cl,bh
  40b63a:	xor    eax,0xb725373
  40b63f:	dec    esp
  40b640:	jb     0x40b6bc
  40b642:	add    al,0xf0
  40b644:	mov    ecx,0x2a55eb34
  40b649:	and    cl,dh
  40b64b:	ins    BYTE PTR es:[edi],dx
  40b64c:	adc    esp,DWORD PTR [ecx-0x3c]
  40b64f:	and    DWORD PTR [edx-0x19d7211f],ecx
  40b655:	sahf   
  40b656:	jmp    0x40b645
  40b658:	jns    0x40b6d3
  40b65a:	jmp    0x4de349fc
  40b65f:	and    al,0x6e
  40b661:	test   al,0x62
  40b663:	mov    ah,0x88
  40b665:	mov    ebp,0x58578ef8
  40b66a:	cld    
  40b66b:	and    DWORD PTR [esp+edi*2],0xfffffffb
  40b66f:	leave  
  40b670:	pop    esp
  40b671:	hlt    
  40b672:	dec    ebx
  40b673:	wbinvd 
  40b675:	push   es
  40b676:	inc    esi
  40b677:	add    eax,0x68c7436b
  40b67c:	inc    esp
  40b67d:	add    DWORD PTR [esi],0x3ffc2160
  40b683:	leave  
  40b684:	jo     0x40b6bc
  40b686:	cmp    eax,0x9119142d
  40b68b:	cdq    
  40b68c:	nop
  40b68d:	pop    ss
  40b68e:	mov    bh,0xe7
  40b690:	(bad)  
  40b691:	aas    
  40b692:	jns    0x40b6a6
  40b694:	fadd   DWORD PTR [esi-0x1f]
  40b697:	sub    bh,ah
  40b699:	xor    eax,0xabfc3b70
  40b69e:	adc    esp,edi
  40b6a0:	xchg   edx,eax
  40b6a1:	xchg   DWORD PTR [ecx+0x68],esp
  40b6a4:	mov    ds:0xb3e439ca,al
  40b6a9:	adc    edx,DWORD PTR [edi-0x3]
  40b6ac:	xchg   edi,eax
  40b6ad:	leave  
  40b6ae:	scas   al,BYTE PTR es:[edi]
  40b6af:	mov    esp,0x481e9c0e
  40b6b4:	sub    esi,ebp
  40b6b6:	push   0x474f582c
  40b6bb:	xchg   esi,ecx
  40b6bd:	xor    al,BYTE PTR [ecx]
  40b6bf:	push   edx
  40b6c0:	add    eax,0x45f68d10
  40b6c5:	jno    0x40b66e
  40b6c7:	add    al,BYTE PTR [eax+0x61]
  40b6ca:	lods   eax,DWORD PTR ds:[esi]
  40b6cb:	lds    edx,FWORD PTR [eax-0x65]
  40b6ce:	jle    0x40b698
  40b6d0:	fucomi st,st(4)
  40b6d2:	ret    0x758b
  40b6d5:	loopne 0x40b6e1
  40b6d7:	(bad)  
  40b6d8:	mov    ebx,0xf1b31c2f
  40b6dd:	or     eax,0xc6be9800
  40b6e2:	ficomp WORD PTR [edi+0x5e8eee49]
  40b6e8:	out    dx,eax
  40b6e9:	sbb    DWORD PTR [ecx+edi*2-0x59],0x42
  40b6ee:	pop    ebp
  40b6ef:	or     DWORD PTR [ebx-0x138db584],esp
  40b6f5:	push   cs
  40b6f6:	lods   al,BYTE PTR ds:[esi]
  40b6f7:	mov    esi,0xb4e0f41b
  40b6fc:	push   0xf9eecbb7
  40b701:	dec    esp
  40b702:	mov    dl,BYTE PTR [eax-0x53]
  40b705:	cmp    al,0xb0
  40b707:	test   al,0x8
  40b709:	fs jge 0x40b705
  40b70c:	adc    ecx,DWORD PTR [edx+0x334fcf5b]
  40b712:	repnz popf 
  40b714:	add    edx,DWORD PTR ds:0xcd66bb67
  40b71a:	loop   0x40b700
  40b71c:	in     al,dx
  40b71d:	sti    
  40b71e:	jo     0x40b703
  40b720:	and    al,0x48
  40b722:	out    0x63,al
  40b724:	sbb    dh,BYTE PTR [esi+ecx*4]
  40b727:	sub    al,0xe4
  40b729:	sub    eax,0xbd503515
  40b72e:	jl     0x40b7ac
  40b730:	push   ecx
  40b731:	or     edi,edx
  40b733:	nop
  40b734:	xchg   esi,eax
  40b735:	gs pop ebx
  40b737:	inc    edx
  40b738:	clc    
  40b739:	sbb    al,0xc1
  40b73b:	mov    al,ds:0x44b468ae
  40b740:	mov    eax,0x7af41891
  40b745:	lods   al,BYTE PTR ds:[esi]
  40b746:	out    dx,al
  40b747:	adc    DWORD PTR [ebx+0x68366cc7],ecx
  40b74d:	xor    al,0x80
  40b74f:	adc    eax,0x4b8ecb40
  40b754:	repz mov esi,0xb739ef82
  40b75a:	call   0x6fb6101f
  40b75f:	inc    ebp
  40b760:	fist   WORD PTR [ecx-0xe]
  40b763:	xor    al,0x28
  40b765:	mov    al,0x24
  40b767:	pop    ds
  40b768:	inc    edi
  40b769:	je     0x40b7d4
  40b76b:	call   0x2113:0xeda79123
  40b772:	stc    
  40b773:	mov    eax,0x84678afe
  40b778:	(bad)  
  40b779:	in     eax,0xb6
  40b77b:	pop    ss
  40b77c:	jmp    0x40b78e
  40b77e:	retf   0xd137
  40b781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b782:	stos   DWORD PTR es:[edi],eax
  40b783:	push   esi
  40b784:	mov    ecx,0x9876667a
  40b789:	ret    0x989c
  40b78c:	dec    eax
  40b78d:	int    0xa
  40b78f:	xor    edx,ebx
  40b791:	aam    0xca
  40b793:	fist   WORD PTR [eax-0x6f]
  40b796:	rcr    BYTE PTR [edx+0x12],0x2e
  40b79a:	xor    BYTE PTR [edx+ebx*1],bl
  40b79d:	lock mov DWORD PTR [eax-0x3f],ebx
  40b7a1:	mov    edi,0xa0aec19a
  40b7a6:	imul   DWORD PTR [esi+0x408dc642]
  40b7ac:	xor    DWORD PTR [ebp+0x1f5e8ca3],esi
  40b7b2:	mov    ebp,DWORD PTR [ecx-0x37]
  40b7b5:	js     0x40b74c
  40b7b7:	and    ebx,DWORD PTR [eax]
  40b7b9:	sbb    al,0x75
  40b7bb:	mov    BYTE PTR [ecx+ebp*1],dl
  40b7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c0:	jmp    0x40b75e
  40b7c2:	jbe    0x40b78c
  40b7c4:	ficom  DWORD PTR [ecx-0x4c]
  40b7c7:	fdiv   QWORD PTR [ecx-0x79]
  40b7ca:	(bad)  
  40b7cc:	push   ebp
  40b7cd:	or     edx,DWORD PTR [edx-0x5a5fafd3]
  40b7d3:	cmp    ch,BYTE PTR [ebx+esi*2-0x19]
  40b7d7:	and    BYTE PTR [eax],al
  40b7d9:	and    DWORD PTR [esi-0x38],esi
  40b7dc:	inc    esi
  40b7dd:	test   BYTE PTR [edx-0x1fbccc02],bl
  40b7e3:	sbb    bl,BYTE PTR [eax-0x73926729]
  40b7e9:	push   cs
  40b7ea:	jg     0x40b76e
  40b7ec:	sti    
  40b7ed:	cmp    ebx,DWORD PTR [ecx+eax*1]
  40b7f0:	int3   
  40b7f1:	sub    eax,0xddd1cf18
  40b7f6:	clc    
  40b7f7:	or     DWORD PTR [edx-0x13d2a4e6],ebx
  40b7fd:	int    0xd9
  40b7ff:	add    eax,DWORD PTR [eax-0x78]
  40b802:	sub    al,0x9d
  40b804:	push   edi
  40b805:	bound  ebp,QWORD PTR [esi]
  40b807:	and    al,0xaa
  40b809:	or     dh,BYTE PTR [eax]
  40b80b:	xor    bl,ch
  40b80d:	xchg   ecx,eax
  40b80e:	jae    0x40b876
  40b810:	cmc    
  40b811:	cwde   
  40b812:	jp     0x40b885
  40b814:	push   ss
  40b815:	inc    ch
  40b817:	repnz cmp ah,ah
  40b81a:	test   BYTE PTR es:[esi],dl
  40b81d:	and    BYTE PTR [eax-0x56],bh
  40b820:	mov    esp,0x3d7b90df
  40b825:	mov    dh,0xb5
  40b827:	mov    al,ds:0x83b9a3ae
  40b82c:	shl    eax,cl
  40b82e:	out    dx,eax
  40b82f:	and    al,0xd5
  40b831:	push   0x74
  40b833:	pusha  
  40b834:	pop    DWORD PTR [edi-0x46]
  40b837:	hlt    
  40b838:	push   ebp
  40b839:	add    eax,edx
  40b83b:	test   al,0x55
  40b83d:	pop    cx
  40b83f:	mov    ch,0x85
  40b841:	xlat   BYTE PTR ds:[ebx]
  40b842:	(bad)  
  40b843:	fcmovbe st,st(3)
  40b845:	retf   
  40b846:	int    0x3d
  40b848:	out    0x22,eax
  40b84a:	mov    esp,0xd91bbb01
  40b84f:	stc    
  40b850:	mov    al,0x72
  40b852:	repz pop ebp
  40b854:	ret    
  40b855:	push   esp
  40b856:	adc    eax,0xcb68786
  40b85b:	ja     0x40b839
  40b85d:	imul   edi,DWORD PTR [eax+0x73],0x8e6a53da
  40b864:	mov    eax,ds:0x6627070f
  40b869:	repz std 
  40b86b:	ja     0x40b87a
  40b86d:	fdiv   DWORD PTR [esi]
  40b86f:	adc    eax,DWORD PTR [esp+eax*2]
  40b872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b873:	js     0x40b7fb
  40b875:	popa   
  40b876:	fdiv   DWORD PTR [edi-0x75827b68]
  40b87c:	inc    eax
  40b87d:	push   es
  40b87e:	jnp    0x40b843
  40b880:	adc    DWORD PTR [edi+0x6e],esi
  40b883:	adc    BYTE PTR [eax],0xf5
  40b886:	and    edi,DWORD PTR [ebp-0x3b]
  40b889:	pop    edi
  40b88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b88b:	inc    esi
  40b88c:	pop    esi
  40b88d:	cmc    
  40b88e:	pop    esi
  40b88f:	push   es
  40b890:	push   ss
  40b891:	dec    edx
  40b892:	sbb    edx,DWORD PTR ds:0x72d16dab
  40b898:	mov    eax,ds:0xee087eae
  40b89d:	int3   
  40b89e:	mov    eax,0x752e1216
  40b8a3:	into   
  40b8a4:	scas   al,BYTE PTR es:[edi]
  40b8a5:	jmp    0x40b8fc
  40b8a7:	dec    ebx
  40b8a8:	enter  0x8a,0x4
  40b8ac:	pop    esp
  40b8ad:	into   
  40b8ae:	mov    edx,0x6aeae8fc
  40b8b3:	inc    edx
  40b8b4:	fld    TBYTE PTR [edi+0x67]
  40b8b7:	js     0x40b91a
  40b8b9:	jle    0x40b8fd
  40b8bb:	stos   BYTE PTR es:[edi],al
  40b8bc:	outs   dx,BYTE PTR ds:[esi]
  40b8bd:	add    ebx,DWORD PTR [edi+0x195adaa8]
  40b8c3:	adc    ah,ch
  40b8c5:	sbb    eax,0x6a293e47
  40b8ca:	lds    edx,FWORD PTR [esi-0x5454f0cd]
  40b8d0:	dec    ebp
  40b8d1:	lods   al,BYTE PTR ds:[esi]
  40b8d2:	aas    
  40b8d3:	retf   0xcf08
  40b8d6:	mov    ss,WORD PTR [edi]
  40b8d8:	xor    ch,bh
  40b8da:	mov    edx,0x5bc48264
  40b8df:	ds daa 
  40b8e1:	mov    dl,dh
  40b8e3:	adc    esp,edx
  40b8e5:	lods   eax,DWORD PTR ds:[esi]
  40b8e6:	cmp    al,0xb5
  40b8e8:	pop    ebx
  40b8e9:	popf   
  40b8ea:	inc    edi
  40b8eb:	into   
  40b8ec:	push   es
  40b8ed:	mov    edx,0x7af10901
  40b8f2:	xchg   edi,eax
  40b8f3:	iret   
  40b8f4:	push   edi
  40b8f5:	hlt    
  40b8f6:	arpl   si,bp
  40b8f8:	dec    DWORD PTR [eax-0x8c174f8]
  40b8fe:	sbb    ebx,esp
  40b900:	xor    bh,ch
  40b902:	frstor [edi-0x46f5682a]
  40b908:	iret   
  40b909:	ficomp WORD PTR [eax+0x698db3fb]
  40b90f:	ins    BYTE PTR es:[edi],dx
  40b910:	xchg   ebx,eax
  40b911:	lods   eax,DWORD PTR ds:[esi]
  40b912:	cmc    
  40b913:	cdq    
  40b914:	adc    dh,bl
  40b916:	add    dl,BYTE PTR [ebp-0x7c42afb5]
  40b91c:	leave  
  40b91d:	getsec 
  40b91f:	fisttp DWORD PTR [edx+0x24e013bb]
  40b925:	lods   al,BYTE PTR ds:[esi]
  40b926:	std    
  40b927:	xchg   ebp,eax
  40b928:	(bad)  
  40b929:	loope  0x40b955
  40b92b:	sbb    ebp,eax
  40b92d:	xor    eax,0x568c3d80
  40b932:	xor    al,0xad
  40b934:	ds adc eax,0x48fab386
  40b93a:	mov    BYTE PTR [edx-0x306630a2],bh
  40b940:	or     ebp,DWORD PTR [ebx+0x7e74085a]
  40b946:	push   edi
  40b947:	hlt    
  40b948:	mov    al,ds:0x228462b5
  40b94d:	(bad)  
  40b94e:	loopne 0x40b964
  40b950:	(bad)  
  40b952:	in     al,0xcd
  40b954:	repnz dec esi
  40b956:	into   
  40b957:	ds jmp 0x40b913
  40b95a:	mov    eax,0xbb5bf3d4
  40b95f:	fsubr  st(7),st
  40b961:	sbb    al,0x3
  40b963:	sub    cl,BYTE PTR [edi+ebx*4+0x5d]
  40b967:	xchg   edx,eax
  40b968:	mov    bh,0x34
  40b96a:	xchg   ebx,eax
  40b96b:	inc    ecx
  40b96c:	fs nop
  40b96e:	ficomp WORD PTR [ebx]
  40b970:	xchg   ecx,eax
  40b971:	xor    ebp,DWORD PTR [ebp-0x3a]
  40b974:	dec    ecx
  40b975:	dec    ebx
  40b976:	inc    eax
  40b977:	push   ebp
  40b978:	adc    eax,0xc28902dc
  40b97d:	jne    0x40b9fa
  40b97f:	fisubr DWORD PTR [esi-0x2]
  40b982:	adc    esp,edx
  40b984:	cmc    
  40b985:	mov    ecx,0xb93379f5
  40b98a:	or     DWORD PTR [edi+0x33276139],edi
  40b990:	ret    
  40b991:	inc    ebp
  40b992:	inc    ebx
  40b993:	lods   eax,DWORD PTR ss:[esi]
  40b995:	xlat   BYTE PTR ds:[ebx]
  40b996:	ror    edi,cl
  40b998:	ins    DWORD PTR es:[edi],dx
  40b999:	idiv   DWORD PTR [esi]
  40b99b:	test   ebx,0xed788eac
  40b9a1:	jl     0x40b994
  40b9a3:	sub    eax,0xc746fba7
  40b9a8:	sub    eax,0xb246863d
  40b9ad:	jecxz  0x40b999
  40b9af:	cli    
  40b9b0:	popa   
  40b9b1:	in     al,0xc
  40b9b3:	push   esp
  40b9b4:	push   ecx
  40b9b5:	ss pop edi
  40b9b7:	sub    al,0x5a
  40b9b9:	in     eax,dx
  40b9ba:	outs   dx,BYTE PTR ds:[esi]
  40b9bb:	in     eax,0xd3
  40b9bd:	fadd   DWORD PTR [ebx+edi*4-0x7fc2ffa]
  40b9c4:	pop    ebx
  40b9c5:	gs jle 0x40b956
  40b9c8:	push   es
  40b9c9:	dec    BYTE PTR [edi-0x24]
  40b9cc:	(bad)  
  40b9cd:	(bad)  
  40b9ce:	jmp    0x40b9fd
  40b9d0:	push   cs
  40b9d1:	lea    ecx,[edi-0x6c92724c]
  40b9d7:	pop    ebp
  40b9d8:	out    0xcf,al
  40b9da:	jl     0x40b9c3
  40b9dc:	sub    eax,DWORD PTR [edx+eiz*1+0x4d]
  40b9e0:	(bad)  
  40b9e1:	push   ss
  40b9e2:	les    ebx,FWORD PTR [eax+0x96a4594]
  40b9e8:	pop    eax
  40b9e9:	adc    DWORD PTR [ecx+ebp*4],edi
  40b9ec:	mov    ?,WORD PTR [ebx-0xfc2abf3]
  40b9f2:	inc    ecx
  40b9f3:	and    esi,DWORD PTR [ebp+eiz*1-0x4a]
  40b9f7:	int3   
  40b9f8:	sub    eax,0x449ff50e
  40b9fd:	stos   BYTE PTR es:[edi],al
  40b9fe:	fcomp  QWORD PTR [ebx+ecx*1-0x64]
  40ba02:	imul   esp,DWORD PTR [eax],0xffffffc8
  40ba05:	imul   ebp,DWORD PTR [ebx+0x7c],0xd9cc6469
  40ba0c:	adc    eax,0x2e48f282
  40ba11:	pusha  
  40ba12:	cmp    ecx,DWORD PTR [edi]
  40ba14:	or     DWORD PTR [edx+edi*4],0xb267af28
  40ba1b:	jno    0x40ba75
  40ba1d:	mov    ch,0x59
  40ba1f:	fnclex 
  40ba21:	sub    BYTE PTR [esp+edx*1],ah
  40ba24:	mov    ebp,DWORD PTR [edi+0x2a]
  40ba27:	int3   
  40ba28:	xchg   esp,eax
  40ba29:	xor    edx,DWORD PTR [ecx+0x370ae024]
  40ba2f:	ret    0x3394
  40ba32:	imul   eax,edi,0x5a1aea33
  40ba38:	loop   0x40b9de
  40ba3a:	push   0xb
  40ba3c:	adc    esi,ecx
  40ba3e:	shr    esi,1
  40ba40:	mov    bl,0xbe
  40ba42:	fst    DWORD PTR [ecx-0x38]
  40ba45:	idiv   DWORD PTR [edi+0x4]
  40ba48:	ret    0xb097
  40ba4b:	pushf  
  40ba4c:	pop    ds
  40ba4d:	in     eax,dx
  40ba4e:	dec    esp
  40ba4f:	push   ebx
  40ba50:	xor    al,0xec
  40ba52:	aad    0x29
  40ba54:	jbe    0x40ba2b
  40ba56:	je     0x40babd
  40ba58:	cld    
  40ba59:	retf   
  40ba5a:	fsubr  st,st(2)
  40ba5c:	or     al,0x2c
  40ba5e:	repnz sub esp,edx
  40ba61:	out    0x5,eax
  40ba63:	fucomp st(7)
  40ba65:	sbb    DWORD PTR [edx+0x45ba9bbf],ecx
  40ba6b:	shr    BYTE PTR [edx+0x40],0x27
  40ba6f:	idiv   DWORD PTR [edi]
  40ba71:	mov    al,ds:0xd5ed3197
  40ba76:	mov    esi,0xbfb8097b
  40ba7b:	(bad)  
  40ba7c:	mov    ds:0xb6b829f0,eax
  40ba81:	test   al,0xc0
  40ba83:	leave  
  40ba84:	lea    esi,[ecx]
  40ba86:	bound  esi,QWORD PTR [ebp-0xc3e4134]
  40ba8c:	loop   0x40ba2d
  40ba8e:	scas   al,BYTE PTR es:[edi]
  40ba8f:	loope  0x40ba7b
  40ba91:	add    bh,dh
  40ba93:	dec    esi
  40ba94:	cdq    
  40ba95:	leave  
  40ba96:	scas   eax,DWORD PTR es:[edi]
  40ba97:	jns    0x40bac3
  40ba99:	inc    esi
  40ba9a:	ret    
  40ba9b:	and    BYTE PTR [ebp-0x57],0xc
  40ba9f:	psrld  mm1,QWORD PTR [ebx+0x719d5d9b]
  40baa6:	les    edi,FWORD PTR [ecx-0x9]
  40baa9:	data16 and BYTE PTR [esi-0x59f126d6],bh
  40bab0:	xchg   esp,eax
  40bab1:	xchg   esi,eax
  40bab2:	pop    edx
  40bab3:	push   ebx
  40bab4:	mov    edx,0x111e658d
  40bab9:	aaa    
  40baba:	std    
  40babb:	sbb    BYTE PTR [edx+0x5a2167c5],ah
  40bac1:	inc    ecx
  40bac2:	xor    ebp,DWORD PTR [eax]
  40bac4:	inc    ebx
  40bac5:	ds test eax,0xbd5539bb
  40bacb:	nop
  40bacc:	pop    esi
  40bacd:	int    0xcf
  40bacf:	add    bh,dl
  40bad1:	or     ebp,ebp
  40bad3:	popa   
  40bad4:	mov    esp,0xa8c09fda
  40bad9:	xor    DWORD PTR es:[edx-0x39],0xffffffa8
  40bade:	(bad)  
  40badf:	iret   
  40bae0:	loop   0x40ba8b
  40bae2:	sub    ah,BYTE PTR [eax]
  40bae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae5:	push   edi
  40bae6:	add    esi,DWORD PTR [eax-0x694c3cc9]
  40baec:	bound  ebx,QWORD PTR [ecx+0x44]
  40baef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf0:	sbb    BYTE PTR ds:0x9d90b9bc,dl
  40baf6:	push   0xbcb8d542
  40bafb:	adc    dh,dh
  40bafd:	ret    0xa135
  40bb00:	xor    edi,0xad8d3cac
  40bb06:	mov    dl,0x8c
  40bb08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb09:	shl    BYTE PTR [edi+0x37],cl
  40bb0c:	and    BYTE PTR [ecx-0x402ae5a0],0x79
  40bb13:	outs   dx,DWORD PTR ds:[esi]
  40bb14:	clc    
  40bb15:	cli    
  40bb16:	mov    edi,0x3cf080b4
  40bb1b:	pop    ds
  40bb1c:	(bad)  
  40bb1d:	int3   
  40bb1e:	js     0x40baa6
  40bb20:	gs lock inc esi
  40bb23:	leave  
  40bb24:	outs   dx,BYTE PTR ds:[esi]
  40bb25:	pop    edx
  40bb26:	xor    eax,0xb17cd0bf
  40bb2b:	xchg   esp,eax
  40bb2c:	mov    eax,0xaee6ddd3
  40bb31:	(bad)  
  40bb32:	test   DWORD PTR [eax+0x5c3dd2f4],0xa2ebbd27
  40bb3c:	jb     0x40baca
  40bb3e:	mov    edi,0x79d3e704
  40bb43:	out    0xf3,al
  40bb45:	rcl    BYTE PTR [eax],1
  40bb47:	xchg   BYTE PTR [eax-0x1a15037],cl
  40bb4d:	add    esi,DWORD PTR [esi]
  40bb4f:	xchg   DWORD PTR [esi-0x43],ebp
  40bb52:	xchg   BYTE PTR gs:[edx],ah
  40bb55:	out    0x71,eax
  40bb57:	xor    esp,DWORD PTR [ebp-0x4c]
  40bb5a:	mov    edx,0x7b674b1f
  40bb5f:	sti    
  40bb60:	pop    esp
  40bb61:	and    DWORD PTR ds:0x958e805a,eax
  40bb67:	cld    
  40bb68:	mov    BYTE PTR [ecx],ch
  40bb6a:	inc    esi
  40bb6b:	das    
  40bb6c:	enter  0x3aae,0x5e
  40bb70:	sub    BYTE PTR [ecx],bl
  40bb72:	aad    0xe6
  40bb74:	push   esi
  40bb75:	pop    edx
  40bb76:	pop    ss
  40bb77:	or     DWORD PTR [eax],esp
  40bb79:	in     al,0x19
  40bb7b:	ss out 0xbe,al
  40bb7e:	sbb    cl,bh
  40bb80:	jge    0x40bb09
  40bb82:	jmp    0xbb88:0x8b2d57d0
  40bb89:	inc    ecx
  40bb8a:	mov    ch,0xf7
  40bb8c:	lock xchg edx,eax
  40bb8f:	jge    0x40bb2e
  40bb91:	add    DWORD PTR [ecx],ebp
  40bb93:	out    0x39,eax
  40bb95:	add    dl,0x1b
  40bb98:	inc    ebx
  40bb99:	push   edi
  40bb9a:	or     al,0xc6
  40bb9c:	idiv   bl
  40bb9e:	mov    al,0x75
  40bba0:	stos   DWORD PTR es:[edi],eax
  40bba1:	std    
  40bba2:	xor    bh,dl
  40bba4:	fwait
  40bba5:	lods   al,BYTE PTR ds:[esi]
  40bba6:	ins    BYTE PTR es:[edi],dx
  40bba7:	jecxz  0x40bb88
  40bba9:	sbb    eax,0x9afab2b3
  40bbae:	sbb    WORD PTR [esi-0x48406eed],ax
  40bbb5:	repnz xchg ebp,eax
  40bbb7:	xchg   esi,eax
  40bbb8:	stos   BYTE PTR es:[edi],al
  40bbb9:	add    DWORD PTR [ecx+0x44],edx
  40bbbc:	push   ebp
  40bbbd:	pop    edx
  40bbbe:	and    al,0x77
  40bbc0:	push   esp
  40bbc1:	dec    ecx
  40bbc2:	pop    esp
  40bbc3:	cwde   
  40bbc4:	dec    ebx
  40bbc5:	mov    ah,0x63
  40bbc7:	test   al,0x53
  40bbc9:	arpl   WORD PTR [ebx],dx
  40bbcb:	sbb    al,0x49
  40bbcd:	cmp    al,BYTE PTR [esi]
  40bbcf:	das    
  40bbd0:	sub    al,0xfe
  40bbd2:	pop    edi
  40bbd3:	pop    ebx
  40bbd4:	pop    es
  40bbd5:	retf   
  40bbd6:	fdiv   DWORD PTR [eax+esi*4]
  40bbd9:	xor    ch,BYTE PTR [edi-0x241d4cd1]
  40bbdf:	sahf   
  40bbe0:	fs dec esi
  40bbe2:	or     eax,0xeef04728
  40bbe7:	push   esp
  40bbe8:	mov    esp,0x345172
  40bbed:	cld    
  40bbee:	or     ebp,edx
  40bbf0:	jno    0x40bbab
  40bbf2:	test   al,0x3b
  40bbf4:	pop    edx
  40bbf5:	push   cs
  40bbf6:	pop    eax
  40bbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf8:	mov    WORD PTR [ecx],gs
  40bbfa:	ins    DWORD PTR es:[edi],dx
  40bbfb:	inc    DWORD PTR [edx-0x8184fda]
  40bc01:	fiadd  DWORD PTR [esp+ecx*1-0x61d572]
  40bc08:	fyl2xp1 
  40bc0a:	in     eax,0xce
  40bc0c:	sar    DWORD PTR [esi+edi*2],0xca
  40bc10:	mov    eax,ds:0x54c99fa1
  40bc15:	retf   
  40bc16:	icebp  
  40bc17:	dec    edi
  40bc18:	rcl    DWORD PTR [esi-0x26],cl
  40bc1b:	retf   0xa428
  40bc1e:	or     bl,BYTE PTR [ecx+0x74411914]
  40bc24:	mov    cl,BYTE PTR [esi-0x56]
  40bc27:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40bc29:	cmc    
  40bc2a:	mov    ebp,0x1d7d4349
  40bc2f:	ins    DWORD PTR es:[edi],dx
  40bc30:	mov    ds:0x4eb67eba,al
  40bc35:	outs   dx,BYTE PTR ds:[esi]
  40bc36:	mov    dh,bh
  40bc38:	inc    ebp
  40bc39:	adc    bl,BYTE PTR ds:0x1664b4a9
  40bc3f:	xchg   DWORD PTR [ebx],esp
  40bc41:	or     cl,ah
  40bc43:	repnz cli 
  40bc45:	ficomp WORD PTR [ecx+edx*2-0x53397dbe]
  40bc4c:	sbb    DWORD PTR [eax-0x33c437f1],eax
  40bc52:	xor    eax,0xee836a3f
  40bc57:	mov    ds:0x2fb8328e,al
  40bc5c:	out    dx,al
  40bc5d:	icebp  
  40bc5e:	leave  
  40bc5f:	(bad)
  40bc62:	(bad)  
  40bc63:	mov    ah,BYTE PTR [ebp-0x1ccc5729]
  40bc69:	test   DWORD PTR [ebp+0x78f12561],0xb44ffab5
  40bc73:	xchg   esp,eax
  40bc74:	lds    ebp,FWORD PTR [edi]
  40bc76:	xor    bl,BYTE PTR [edi-0x7f]
  40bc79:	test   BYTE PTR ds:0xd7e2cfd,cl
  40bc7f:	or     BYTE PTR [edx],0x13
  40bc82:	jns    0x40bc8f
  40bc84:	rcl    DWORD PTR [edx+0x330f87c4],cl
  40bc8a:	pop    edx
  40bc8b:	pop    edi
  40bc8c:	mov    WORD PTR [eax+0xb7a6b37],ss
  40bc92:	ror    bl,cl
  40bc94:	xchg   BYTE PTR ds:0x48c4ea84,ah
  40bc9a:	je     0x40bca3
  40bc9c:	pop    ecx
  40bc9d:	(bad)  
  40bc9f:	and    al,0xa8
  40bca1:	das    
  40bca2:	les    ebp,FWORD PTR [ecx+0x2f]
  40bca5:	jae    0x40bc7d
  40bca7:	cmp    eax,0xad937127
  40bcac:	dec    edi
  40bcad:	aad    0x0
  40bcaf:	push   ebp
  40bcb0:	test   al,0x26
  40bcb2:	mov    ch,0x36
  40bcb4:	retf   0xa67e
  40bcb7:	sub    DWORD PTR [ebx-0x5e6aabac],ebx
  40bcbd:	lods   eax,DWORD PTR ds:[esi]
  40bcbe:	icebp  
  40bcbf:	mov    BYTE PTR [eax],ah
  40bcc1:	or     esi,DWORD PTR [edi+ecx*8+0x32]
  40bcc5:	xor    dl,cl
  40bcc7:	scas   eax,DWORD PTR es:[edi]
  40bcc8:	popf   
  40bcc9:	xchg   ecx,eax
  40bcca:	xor    ebx,edx
  40bccc:	add    ebp,DWORD PTR [eax]
  40bcce:	outs   dx,BYTE PTR ds:[esi]
  40bccf:	push   esi
  40bcd0:	push   es
  40bcd1:	push   ecx
  40bcd2:	pop    edi
  40bcd3:	icebp  
  40bcd4:	out    0xbe,eax
  40bcd6:	add    al,0xe
  40bcd8:	jge    0x40bcf1
  40bcda:	xchg   esi,eax
  40bcdb:	push   es
  40bcdc:	popa   
  40bcdd:	icebp  
  40bcde:	and    BYTE PTR [eax],al
  40bce0:	sub    BYTE PTR [edi+0x111880dd],cl
  40bce6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40bce8:	pop    ds
  40bce9:	ins    DWORD PTR es:[edi],dx
  40bcea:	cmp    DWORD PTR [eax],0x33
  40bced:	mov    edi,0x6d77d1ac
  40bcf2:	mov    ecx,0x842304b8
  40bcf7:	outs   dx,BYTE PTR ds:[esi]
  40bcf8:	bound  ebx,QWORD PTR [ebx+esi*4]
  40bcfb:	fidiv  WORD PTR [ebx+esi*8-0x51db5385]
  40bd02:	out    dx,eax
  40bd03:	mov    edi,eax
  40bd05:	pop    eax
  40bd06:	cmp    DWORD PTR ds:0x16c0e989,ecx
  40bd0c:	mov    eax,0x58c07871
  40bd11:	mov    DWORD PTR [edi],edi
  40bd13:	pop    ecx
  40bd14:	or     ah,al
  40bd16:	clc    
  40bd17:	stc    
  40bd18:	and    ebx,DWORD PTR [edi-0x3032ad97]
  40bd1e:	mov    eax,0xa4ff860a
  40bd23:	jge    0x40bd08
  40bd25:	xchg   edi,eax
  40bd26:	mov    ebx,gs
  40bd28:	aam    0xa4
  40bd2a:	aaa    
  40bd2b:	popf   
  40bd2c:	(bad)  
  40bd2d:	add    ah,bh
  40bd2f:	dec    eax
  40bd30:	and    BYTE PTR [ebx+0x5d93a844],dh
  40bd36:	mov    cl,0xb0
  40bd38:	out    dx,al
  40bd39:	mov    eax,ds:0x994f3ac3
  40bd3e:	shr    BYTE PTR [esi+0x2a24aaf7],1
  40bd44:	lds    esi,FWORD PTR [ecx+eiz*2+0x5fe231e5]
  40bd4b:	jb     0x40bd6e
  40bd4d:	int3   
  40bd4e:	adc    al,BYTE PTR [eax+eax*1-0x73]
  40bd52:	loopne 0x40bda9
  40bd54:	out    dx,al
  40bd55:	jl     0x40bdd4
  40bd57:	(bad)  
  40bd58:	jbe    0x40bcf8
  40bd5a:	mov    ?,WORD PTR [eax+0x4ff0fd52]
  40bd60:	mov    esp,0x378c5784
  40bd65:	add    ah,BYTE PTR [ecx]
  40bd67:	rol    BYTE PTR [esi],0x88
  40bd6a:	shl    edx,0xfa
  40bd6d:	sbb    ecx,DWORD PTR [edx+0xc]
  40bd70:	je     0x40bdad
  40bd72:	test   eax,0x33c2c7bf
  40bd77:	mov    eax,ds:0x9b51067
  40bd7c:	ror    BYTE PTR [eax],1
  40bd7e:	test   BYTE PTR [eax-0x6],bh
  40bd81:	mov    esp,0x34315c5
  40bd86:	push   edi
  40bd87:	sbb    edx,DWORD PTR [eax-0x2c3b9b08]
  40bd8d:	cld    
  40bd8e:	(bad)  [edx+0x419855d7]
  40bd94:	or     DWORD PTR [edx],0x56f8927f
  40bd9a:	cmp    dl,ah
  40bd9c:	mov    ebp,ds
  40bd9e:	fidivr WORD PTR [ebx+0x33]
  40bda1:	aad    0xf5
  40bda3:	ss push ebp
  40bda5:	mov    eax,0x7e72a825
  40bdaa:	mov    edx,0x3260921f
  40bdaf:	mov    esi,0x7216ed1d
  40bdb4:	es sub eax,0x3d7fad9e
  40bdba:	aas    
  40bdbb:	sub    al,0x34
  40bdbd:	push   es
  40bdbe:	les    ebx,FWORD PTR ss:[esi-0x3b5ed039]
  40bdc5:	mov    cl,0x81
  40bdc7:	rcr    DWORD PTR [ebx-0x43922a8e],0x1e
  40bdce:	or     ecx,esp
  40bdd0:	xchg   edx,eax
  40bdd1:	xchg   esp,eax
  40bdd2:	dec    ecx
  40bdd3:	add    eax,0x51a4fdd3
  40bdd8:	std    
  40bdd9:	fidivr DWORD PTR [eax]
  40bddb:	lea    ebx,[edx-0x6ca75764]
  40bde1:	stos   DWORD PTR es:[edi],eax
  40bde2:	push   ds
  40bde3:	pop    eax
  40bde4:	dec    ecx
  40bde5:	lahf   
  40bde6:	add    ebx,edx
  40bde8:	mov    ch,0xd0
  40bdea:	inc    ecx
  40bdeb:	xchg   ebx,eax
  40bdec:	fninit 
  40bdee:	xchg   esi,eax
  40bdef:	(bad)  
  40bdf0:	cmovne ebx,DWORD PTR [ebx+0x10]
  40bdf4:	neg    BYTE PTR [ebx-0x3a]
  40bdf7:	adc    al,0xc3
  40bdf9:	pop    ecx
  40bdfa:	int    0xe4
  40bdfc:	pop    eax
  40bdfd:	jb     0x40bd9d
  40bdff:	jp     0x40bde3
  40be01:	mov    ds:0xb9d84405,al
  40be06:	or     al,0x18
  40be08:	loope  0x40be1c
  40be0a:	and    DWORD PTR [esi+ecx*1-0x43a8fb0a],esi
  40be11:	and    al,0x19
  40be13:	lahf   
  40be14:	pop    ebx
  40be15:	repz xor al,BYTE PTR [edx]
  40be18:	nop
  40be19:	inc    esi
  40be1a:	cmp    al,0x7c
  40be1c:	std    
  40be1d:	pop    ecx
  40be1e:	aad    0xc
  40be20:	lods   eax,DWORD PTR ds:[esi]
  40be21:	bound  eax,QWORD PTR [ebx+0x3c]
  40be24:	pop    esi
  40be25:	cmp    esp,DWORD PTR [edx]
  40be27:	push   0xc7f2c77e
  40be2c:	jmp    0x213:0xfca52a3b
  40be33:	stc    
  40be34:	and    ebp,DWORD PTR [ebp+0x6cf919a1]
  40be3a:	xchg   BYTE PTR [esi],bh
  40be3c:	or     BYTE PTR [edx+0x207cde7f],bl
  40be42:	aas    
  40be43:	test   eax,0x9000323c
  40be48:	pop    ds
  40be49:	push   edi
  40be4a:	sahf   
  40be4b:	rol    DWORD PTR [ebx-0x2c],0x81
  40be4f:	js     0x40be9e
  40be51:	add    BYTE PTR [ebx],0xb
  40be54:	adc    eax,0x551e297f
  40be59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be5a:	sbb    al,0xfc
  40be5c:	lea    esp,[ecx+0x6f]
  40be5f:	mov    ah,0x61
  40be61:	xor    DWORD PTR cs:[eax+0xf],ebp
  40be65:	dec    BYTE PTR ds:0x4db5956c
  40be6b:	rcl    ah,cl
  40be6d:	das    
  40be6e:	out    dx,eax
  40be6f:	sub    esi,eax
  40be71:	imul   ecx,DWORD PTR [ecx-0x68],0x51676567
  40be78:	(bad)  
  40be79:	fwait
  40be7a:	ds jbe 0x40bec3
  40be7d:	mov    al,ds:0x129e2f70
  40be82:	mov    eax,0xc62d5dd8
  40be87:	cmp    eax,DWORD PTR [ebx-0x4c]
  40be8a:	adc    dh,al
  40be8c:	sti    
  40be8d:	popa   
  40be8e:	shr    dl,cl
  40be90:	mov    fs,WORD PTR [ebx+0x7f]
  40be93:	inc    esp
  40be94:	adc    BYTE PTR [esp+edi*8],ch
  40be97:	sub    esp,DWORD PTR [ebp-0x17a14e4b]
  40be9d:	xchg   ebx,esi
  40be9f:	inc    ebx
  40bea0:	std    
  40bea1:	mov    ch,0xf1
  40bea3:	adc    DWORD PTR [ebx-0x45],ecx
  40bea6:	cmc    
  40bea7:	daa    
  40bea8:	sub    DWORD PTR [edi-0x4941bea5],esi
  40beae:	fst    QWORD PTR [eax]
  40beb0:	xor    BYTE PTR [ebx],0x8b
  40beb3:	jp     0x40beed
  40beb5:	mov    eax,ds:0x9fbfbb6c
  40beba:	ins    DWORD PTR es:[edi],dx
  40bebb:	dec    eax
  40bebc:	cli    
  40bebd:	fdivr  DWORD PTR [esi+0x60]
  40bec0:	std    
  40bec1:	int    0xcf
  40bec3:	or     eax,0x2c22c84a
  40bec8:	adc    DWORD PTR [eax-0x70cfc235],0x7e167229
  40bed2:	dec    esi
  40bed3:	dec    eax
  40bed4:	ret    0x9be6
  40bed7:	fistp  DWORD PTR [ecx-0x2f74e723]
  40bedd:	mov    DWORD PTR [edx+esi*2-0x502ea1f5],0x9a82beb9
  40bee8:	sbb    BYTE PTR [edx],dh
  40beea:	in     al,dx
  40beeb:	hlt    
  40beec:	mov    dl,0x5c
  40beee:	pop    esi
  40beef:	adc    DWORD PTR [ecx+0x46],ecx
  40bef2:	mov    al,ds:0xbd88909a
  40bef7:	sbb    al,0x15
  40bef9:	pop    esi
  40befa:	xlat   BYTE PTR ds:[ebx]
  40befb:	adc    eax,0x27cbfd75
  40bf00:	push   esi
  40bf01:	mov    eax,ds:0x8cea062d
  40bf06:	sub    DWORD PTR [esi+eax*1],ecx
  40bf09:	js     0x40bf1e
  40bf0b:	mov    cl,0xf4
  40bf0d:	cmp    dl,BYTE PTR [eax+0x6ec17125]
  40bf13:	popf   
  40bf14:	in     al,0x44
  40bf16:	push   eax
  40bf17:	rcl    DWORD PTR [ecx-0x63e4a9d],0xf0
  40bf1e:	cmp    BYTE PTR [edi+edi*8],bh
  40bf21:	int    0xb3
  40bf23:	or     al,0xc2
  40bf25:	adc    DWORD PTR [ebx+0x46],0xc0323311
  40bf2c:	pop    edx
  40bf2d:	dec    esi
  40bf2e:	push   esp
  40bf2f:	ja     0x40beb9
  40bf31:	icebp  
  40bf32:	adc    al,0xe9
  40bf34:	sub    eax,0xf7742e3a
  40bf39:	popf   
  40bf3a:	inc    ebx
  40bf3b:	(bad)  
  40bf3c:	xchg   ecx,eax
  40bf3d:	into   
  40bf3e:	scas   al,BYTE PTR es:[edi]
  40bf3f:	shr    BYTE PTR [ebx+eiz*4],1
  40bf42:	mov    DWORD PTR [edi-0x58],edx
  40bf45:	call   DWORD PTR [edi+0x5]
  40bf48:	dec    ebp
  40bf49:	lock adc BYTE PTR [ebp-0x4a6223d7],0xc7
  40bf51:	cld    
  40bf52:	sub    BYTE PTR [eax+eiz*2],0x9c
  40bf56:	popa   
  40bf57:	fisttp WORD PTR [eax-0x29f5e250]
  40bf5d:	sti    
  40bf5e:	mov    bh,0x92
  40bf60:	test   BYTE PTR [esi-0x29481d64],0xc7
  40bf67:	call   0x5b07:0x918612d7
  40bf6e:	pop    edx
  40bf6f:	mov    ch,0x1f
  40bf71:	inc    ebp
  40bf72:	mov    ebx,0xc13b12b2
  40bf77:	jbe    0x40bf31
  40bf79:	sub    esp,DWORD PTR [ebx-0x14]
  40bf7c:	lahf   
  40bf7d:	imul   ecx,ecx,0x288198cb
  40bf83:	out    dx,al
  40bf84:	hlt    
  40bf85:	push   edx
  40bf86:	(bad)  
  40bf87:	in     al,dx
  40bf88:	push   0xf
  40bf8a:	dec    ebx
  40bf8b:	in     eax,dx
  40bf8c:	ins    DWORD PTR es:[edi],dx
  40bf8d:	mov    ebp,0xd2ef1073
  40bf92:	sbb    eax,0x7f46165a
  40bf97:	jnp    0x40bfe0
  40bf99:	mov    ch,0x1
  40bf9b:	jecxz  0x40c017
  40bf9d:	push   ebx
  40bf9e:	imul   DWORD PTR [eax+esi*1+0x6c88c4f5]
  40bfa5:	cmp    al,0x83
  40bfa7:	xchg   edi,eax
  40bfa8:	xlat   BYTE PTR ds:[ebx]
  40bfa9:	or     ebp,DWORD PTR [eax+0x78]
  40bfac:	inc    eax
  40bfad:	inc    ecx
  40bfae:	jl     0x40bfe3
  40bfb0:	add    al,0x13
  40bfb2:	fidiv  WORD PTR [ebp-0xab756f2]
  40bfb8:	cwde   
  40bfb9:	fcom   DWORD PTR [edx]
  40bfbb:	cwde   
  40bfbc:	adc    eax,0xde8646a7
  40bfc1:	sub    BYTE PTR [edi+eax*2+0x642d9d31],al
  40bfc8:	xor    esi,ebp
  40bfca:	jecxz  0x40bff8
  40bfcc:	and    esp,DWORD PTR [ecx-0x18640b8e]
  40bfd2:	loopne 0x40bf7d
  40bfd4:	rol    bh,cl
  40bfd6:	push   esi
  40bfd7:	or     esi,DWORD PTR [edi+0x56368660]
  40bfdd:	jo     0x40bf71
  40bfdf:	(bad)  
  40bfe0:	pmaddwd mm2,QWORD PTR [ebx+0x73]
  40bfe4:	out    0x5b,al
  40bfe6:	enter  0x3025,0xf4
  40bfea:	mov    eax,0xde56e23c
  40bfef:	pop    edx
  40bff0:	jp     0x40bf95
  40bff2:	cmp    bl,BYTE PTR [edi+edx*1-0x26ae74ea]
  40bff9:	shl    BYTE PTR [ebx+0x48fe2988],cl
  40bfff:	aas    
  40c000:	xor    BYTE PTR [edx+esi*2-0x1cb339f1],al
  40c007:	das    
  40c008:	cmp    ebx,DWORD PTR [eax-0x43]
  40c00b:	cwde   
  40c00c:	jno    0x40c041
  40c00e:	xchg   ecx,eax
  40c00f:	mov    eax,ds:0x17563291
  40c014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c015:	or     al,0x4b
  40c017:	scas   eax,DWORD PTR es:[edi]
  40c018:	push   0x62
  40c01a:	(bad)  
  40c01b:	(bad)  
  40c01c:	jmp    0x40c083
  40c01e:	outs   dx,DWORD PTR ds:[esi]
  40c01f:	jecxz  0x40c025
  40c021:	(bad)  
  40c022:	dec    esp
  40c023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c024:	pop    ebx
  40c025:	mov    edx,DWORD PTR [eax+ebp*2-0x753d363]
  40c02c:	mov    ch,0xe0
  40c02e:	mov    ebp,DWORD PTR [edi+0x46]
  40c031:	xor    eax,0xfc7840d0
  40c036:	call   0x933d7d30
  40c03b:	ins    BYTE PTR es:[edi],dx
  40c03c:	jle    0x40c0b1
  40c03e:	nop
  40c03f:	and    cl,BYTE PTR [edi+0x6a]
  40c042:	dec    edi
  40c043:	adc    al,BYTE PTR [ebx+0x3a98bce4]
  40c049:	fwait
  40c04a:	cs aad 0xf0
  40c04d:	test   edi,ebx
  40c04f:	adc    dh,BYTE PTR [edx+0x48]
  40c052:	std    
  40c053:	fwait
  40c054:	bound  ebp,QWORD PTR [eax-0x6bbdb834]
  40c05a:	imul   edx,ebx,0xb9cfb0b6
  40c060:	jmp    0xffbc:0x2bc506b5
  40c067:	sahf   
  40c068:	add    esi,DWORD PTR [ecx-0x58851f03]
  40c06e:	call   0x6543:0x46cc6e0d
  40c075:	iret   
  40c076:	mov    WORD PTR [esi-0x70],es
  40c079:	cld    
  40c07a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c07c:	jb     0x40c08b
  40c07e:	icebp  
  40c07f:	mov    edi,0x7cc04c46
  40c084:	shr    DWORD PTR [esi],1
  40c086:	js     0x40c0a7
  40c088:	mov    DWORD PTR [ecx-0x5e],esp
  40c08b:	out    0x2f,eax
  40c08d:	or     BYTE PTR [eax+0x4d703ad1],dh
  40c093:	xchg   ebx,esi
  40c095:	dec    ecx
  40c096:	ret    0x3f11
  40c099:	sbb    bl,BYTE PTR [edi-0x7b]
  40c09c:	inc    edi
  40c09d:	push   cs
  40c09e:	dec    esp
  40c09f:	scas   eax,DWORD PTR es:[edi]
  40c0a0:	jecxz  0x40c0bf
  40c0a2:	aad    0xd5
  40c0a4:	add    al,0x1e
  40c0a6:	lock daa 
  40c0a8:	scas   al,BYTE PTR es:[edi]
  40c0a9:	leave  
  40c0aa:	xor    BYTE PTR gs:[edx+0x10],ch
  40c0ae:	jo     0x40c030
  40c0b0:	cld    
  40c0b1:	push   es
  40c0b2:	cmp    DWORD PTR [ebp+0x13],edi
  40c0b5:	push   esp
  40c0b6:	fdiv   QWORD PTR [ecx+0x4d]
  40c0b9:	inc    eax
  40c0ba:	inc    edx
  40c0bb:	ret    0xc219
  40c0be:	scas   eax,DWORD PTR es:[edi]
  40c0bf:	lds    ebp,FWORD PTR [esi+edx*2]
  40c0c2:	mov    al,ds:0x119751d8
  40c0c7:	xor    BYTE PTR [eax+0x10],0x8
  40c0cb:	mov    DWORD PTR [edi],0xce1002b0
  40c0d1:	ret    0x35f6
  40c0d4:	fcmove st,st(4)
  40c0d6:	push   ebp
  40c0d7:	add    ecx,DWORD PTR [ecx-0x7b]
  40c0da:	cmp    al,0xdd
  40c0dc:	pop    ecx
  40c0dd:	and    al,0x67
  40c0df:	nop
  40c0e0:	clc    
  40c0e1:	and    DWORD PTR [edx],ebx
  40c0e3:	adc    eax,DWORD PTR [ebx+0x24f66365]
  40c0e9:	std    
  40c0ea:	data16 (bad) 
  40c0ed:	push   ecx
  40c0ee:	inc    esi
  40c0ef:	dec    ecx
  40c0f0:	xchg   esi,eax
  40c0f1:	dec    edi
  40c0f2:	pop    edx
  40c0f3:	fimul  WORD PTR [eax+edx*8-0x61]
  40c0f7:	mov    cl,0xae
  40c0f9:	mov    DWORD PTR [esi+0x26],ebp
  40c0fc:	inc    edi
  40c0fd:	retf   
  40c0fe:	popa   
  40c0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c100:	cmc    
  40c101:	xlat   BYTE PTR ds:[ebx]
  40c102:	js     0x40c0db
  40c104:	and    esi,DWORD PTR [esi+eiz*4-0x73]
  40c108:	jp     0x40c10f
  40c10a:	dec    eax
  40c10b:	mov    esp,0xa72d81aa
  40c110:	(bad)  
  40c111:	shl    DWORD PTR [ebp-0x4b0bdc09],1
  40c117:	push   ds
  40c118:	adc    edx,DWORD PTR [ebx-0x5f]
  40c11b:	dec    ebx
  40c11c:	pop    DWORD PTR [esi+0x79b3b8d3]
  40c122:	jmp    0x1ee32a29
  40c127:	popf   
  40c128:	adc    ah,BYTE PTR [edi+0x51c90712]
  40c12e:	add    al,0x86
  40c130:	add    BYTE PTR [ebp+0x1b2b2906],al
  40c136:	inc    eax
  40c137:	xlat   BYTE PTR ds:[ebx]
  40c138:	lahf   
  40c139:	aad    0x51
  40c13b:	adc    DWORD PTR [ebp+0x2e],esi
  40c13e:	stos   DWORD PTR es:[edi],eax
  40c13f:	call   0x90aaa8bc
  40c144:	cmp    edx,ebp
  40c146:	add    al,bl
  40c148:	xchg   esp,eax
  40c149:	nop
  40c14a:	in     al,0xed
  40c14c:	leave  
  40c14d:	sbb    al,0x81
  40c14f:	push   edi
  40c150:	or     ch,BYTE PTR [ebx-0x299c1391]
  40c156:	out    dx,al
  40c157:	dec    ebx
  40c158:	or     eax,0x8e990d0c
  40c15d:	inc    bh
  40c15f:	mov    DWORD PTR [edx-0x27],esi
  40c162:	dec    esp
  40c163:	scas   eax,DWORD PTR es:[edi]
  40c164:	cli    
  40c165:	mov    DWORD PTR [ecx+0x9a3df3e],0xfbfcb66e
  40c16f:	aam    0xc9
  40c171:	in     eax,dx
  40c172:	mov    ebp,0x1a508aa9
  40c177:	inc    esi
  40c178:	shl    eax,cl
  40c17a:	out    0x23,al
  40c17c:	clc    
  40c17d:	xchg   edx,eax
  40c17e:	mov    bh,0x4f
  40c180:	fiadd  WORD PTR [ebx]
  40c182:	aas    
  40c183:	out    dx,al
  40c184:	or     BYTE PTR [edi+0x69],bl
  40c187:	push   ecx
  40c188:	gs or  bl,dl
  40c18b:	fwait
  40c18c:	cmp    ecx,DWORD PTR [edi+ebp*1]
  40c18f:	gs daa 
  40c191:	push   esp
  40c192:	inc    ebp
  40c193:	shl    DWORD PTR [esp+ebp*8],cl
  40c196:	push   ebx
  40c197:	adc    eax,0xed69a8d0
  40c19c:	jg     0x40c179
  40c19e:	mov    eax,0xa6ab8db5
  40c1a3:	sub    DWORD PTR [eax],eax
  40c1a5:	cmp    BYTE PTR [ebx],dh
  40c1a7:	add    BYTE PTR [eax+0x5ba43af4],cl
  40c1ad:	mov    esi,0xf9bd3fd7
  40c1b2:	sbb    eax,DWORD PTR [ecx-0x6e4cb9e6]
  40c1b8:	out    0xce,eax
  40c1ba:	push   esp
  40c1bb:	(bad)  
  40c1bc:	pop    ebp
  40c1bd:	sub    BYTE PTR [ecx],bl
  40c1bf:	sbb    ebx,ebx
  40c1c1:	or     BYTE PTR [esi+0x1],0xb
  40c1c5:	mov    ecx,0x57257f0d
  40c1ca:	(bad)  
  40c1cb:	mov    esp,0x36c945dd
  40c1d0:	sub    ebx,DWORD PTR fs:[eax-0x7a1f2edb]
  40c1d7:	int    0x9
  40c1d9:	pop    esp
  40c1da:	(bad)  
  40c1db:	aad    0x95
  40c1dd:	arpl   WORD PTR [ecx*8+0x3797b68],di
  40c1e4:	push   0x7e6c6bfc
  40c1e9:	mov    DWORD PTR [eax+0xd6cde2c],esi
  40c1ef:	mov    al,ds:0x8bf33773
  40c1f4:	imul   ebx,DWORD PTR [ebx],0x5659e58a
  40c1fa:	aam    0xe4
  40c1fc:	jge    0x40c25a
  40c1fe:	add    eax,0x98a61d20
  40c203:	jecxz  0x40c238
  40c205:	fsubr  QWORD PTR gs:[edi+ebx*8]
  40c209:	pop    eax
  40c20a:	std    
  40c20b:	add    bl,BYTE PTR [ebx-0x15d08da1]
  40c211:	ja     0x40c1f1
  40c213:	adc    al,0xe3
  40c215:	es out 0x1e,eax
  40c218:	and    edi,esp
  40c21a:	push   esp
  40c21b:	in     eax,dx
  40c21c:	fisub  WORD PTR [ecx]
  40c21e:	pop    ebx
  40c21f:	dec    ecx
  40c220:	jl     0x40c1f7
  40c222:	mov    eax,ds:0xa5841e6f
  40c227:	ret    
  40c228:	sti    
  40c229:	icebp  
  40c22a:	lods   al,BYTE PTR ds:[esi]
  40c22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c22c:	fsub   DWORD PTR [esi]
  40c22e:	jecxz  0x40c22a
  40c230:	mov    dl,dl
  40c232:	push   es
  40c233:	sub    eax,0xcb12727d
  40c238:	dec    edx
  40c239:	test   ecx,ebp
  40c23b:	je     0x40c1ee
  40c23d:	mov    ebx,edi
  40c23f:	add    cl,bh
  40c241:	jmp    0x40c1e5
  40c243:	mov    edx,0xa269c81e
  40c248:	not    BYTE PTR [edi+0x7b]
  40c24b:	std    
  40c24c:	fnstenv [eax-0x1ad2cb32]
  40c252:	or     ah,bh
  40c254:	xchg   ecx,eax
  40c255:	ja     0x40c240
  40c257:	adc    ecx,DWORD PTR [eax]
  40c259:	mov    eax,0x6337bc69
  40c25e:	test   DWORD PTR [ecx+0x3f75ed5],ecx
  40c264:	(bad)  
  40c265:	lock imul edi,DWORD PTR [edx],0xd
  40c269:	in     eax,0x6f
  40c26b:	popa   
  40c26c:	push   ebp
  40c26d:	cwde   
  40c26e:	mov    ch,0x98
  40c270:	add    ebp,edi
  40c272:	call   0x6f1a2120
  40c277:	loop   0x40c2c7
  40c279:	fisub  WORD PTR [ecx+esi*2-0x61790a59]
  40c280:	dec    ecx
  40c281:	cmp    edx,ebx
  40c283:	je     0x40c2f2
  40c285:	pop    edi
  40c286:	ja     0x40c24b
  40c288:	dec    edi
  40c289:	sub    DWORD PTR [ecx-0x36],0xffffffec
  40c28d:	hlt    
  40c28e:	mov    ebp,0x516b7f68
  40c293:	ror    BYTE PTR [ebx],0xdd
  40c296:	cmp    al,0x93
  40c298:	add    ah,BYTE PTR [esi-0x49]
  40c29b:	dec    edx
  40c29c:	popf   
  40c29d:	pop    ecx
  40c29e:	sbb    DWORD PTR [eax+edi*1-0x27a73d8b],esp
  40c2a5:	out    0x37,eax
  40c2a7:	in     eax,0xc3
  40c2a9:	retf   
  40c2aa:	fbld   TBYTE PTR [eax]
  40c2ac:	fistp  WORD PTR [esi]
  40c2ae:	xor    DWORD PTR [edx-0x76],ebp
  40c2b1:	fwait
  40c2b2:	sbb    ebp,edx
  40c2b4:	in     eax,dx
  40c2b5:	jmp    0x245f:0x9b0a11db
  40c2bc:	adc    eax,0x5c6bff99
  40c2c1:	je     0x40c248
  40c2c3:	xchg   esp,eax
  40c2c4:	jb     0x40c29c
  40c2c6:	xor    eax,0x2b802f62
  40c2cb:	in     eax,dx
  40c2cc:	rol    DWORD PTR [ecx+ebx*8-0x77f1d8c7],0x3
  40c2d4:	inc    esi
  40c2d5:	mov    edi,0xedc691dd
  40c2da:	add    DWORD PTR [esp+ecx*8],esp
  40c2dd:	in     al,dx
  40c2de:	dec    esp
  40c2df:	pop    eax
  40c2e0:	and    ch,BYTE PTR [edi]
  40c2e2:	outs   dx,BYTE PTR ds:[esi]
  40c2e3:	add    ebp,esi
  40c2e5:	cmp    ch,dh
  40c2e7:	mov    bl,BYTE PTR [edx]
  40c2e9:	xor    BYTE PTR [esi],0xce
  40c2ec:	loope  0x40c308
  40c2ee:	and    al,0xe6
  40c2f0:	mov    al,0x35
  40c2f2:	mov    ds:0x3ee6e65d,al
  40c2f7:	adc    edx,DWORD PTR [eax]
  40c2f9:	(bad)  
  40c2fa:	out    dx,eax
  40c2fb:	aam    0xd4
  40c2fd:	ret    0x678e
  40c300:	sub    BYTE PTR [ecx+0xc066cc9],bl
  40c306:	add    DWORD PTR [edi+edi*4-0x8a59022],ebx
  40c30d:	push   ecx
  40c30e:	mov    al,0x1b
  40c310:	lahf   
  40c311:	scas   eax,DWORD PTR es:[edi]
  40c312:	pop    ss
  40c313:	outs   dx,DWORD PTR ds:[esi]
  40c314:	fs cmp eax,0xba11ac40
  40c31a:	sahf   
  40c31b:	cld    
  40c31c:	or     BYTE PTR [ebp+eax*8-0x79e47170],0xae
  40c324:	jg     0x40c327
  40c326:	mov    dl,0x69
  40c328:	stc    
  40c329:	and    dh,BYTE PTR [edx+0x75]
  40c32c:	mov    ebx,0x80c51684
  40c331:	cmp    ebx,DWORD PTR [edx+eiz*2-0x28]
  40c335:	iret   
  40c336:	add    BYTE PTR [edi],dl
  40c338:	add    bh,cl
  40c33a:	nop
  40c33b:	jo     0x40c3b7
  40c33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c33e:	leave  
  40c33f:	pop    esi
  40c340:	sahf   
  40c341:	adc    eax,0x3a00e8f4
  40c346:	mov    ah,0x3e
  40c348:	dec    edx
  40c349:	std    
  40c34a:	test   bh,al
  40c34c:	out    dx,eax
  40c34d:	cmp    al,0x9b
  40c34f:	adc    ch,bl
  40c351:	jp     0x40c3ca
  40c353:	loop   0x40c3a1
  40c355:	clc    
  40c356:	int    0x6b
  40c358:	or     ebp,DWORD PTR [ebp-0x4b1ea9b6]
  40c35e:	out    dx,al
  40c35f:	js     0x40c309
  40c361:	xor    eax,0xf000a1ba
  40c366:	jne    0x40c3c2
  40c368:	push   eax
  40c369:	fucomp st(1)
  40c36b:	les    eax,FWORD PTR [eax]
  40c36d:	mov    ebp,0x516f4396
  40c372:	ffree  st(1)
  40c374:	stos   BYTE PTR es:[edi],al
  40c375:	xor    DWORD PTR [edi],0x5592a6e7
  40c37b:	addr16 jl 0x40c353
  40c37e:	sbb    DWORD PTR [ecx],edx
  40c380:	jp     0x40c345
  40c382:	imul   eax,DWORD PTR [eax],0x89e85841
  40c388:	ds push ecx
  40c38a:	cmp    al,0x6e
  40c38c:	stos   DWORD PTR es:[edi],eax
  40c38d:	sbb    esi,esi
  40c38f:	nop
  40c390:	dec    esi
  40c391:	outs   dx,DWORD PTR ds:[esi]
  40c392:	cld    
  40c393:	lds    eax,FWORD PTR [edx]
  40c395:	jb     0x40c3ed
  40c397:	cmp    DWORD PTR [edx+0x26367302],edi
  40c39d:	dec    esi
  40c39e:	adc    al,0xb5
  40c3a0:	bound  eax,QWORD PTR [edi]
  40c3a2:	cmp    ecx,DWORD PTR [ebp-0x248b435c]
  40c3a8:	push   ebx
  40c3a9:	jne    0x40c415
  40c3ab:	enter  0xe2ed,0xab
  40c3af:	fldcw  WORD PTR [ebx-0x28754ce3]
  40c3b5:	pop    ebp
  40c3b6:	pop    edx
  40c3b7:	mov    edx,fs
  40c3b9:	add    DWORD PTR [ebp+0x3c866109],eax
  40c3bf:	gs jo  0x40c362
  40c3c2:	add    edi,edx
  40c3c4:	add    eax,0x966d7d20
  40c3c9:	and    al,0xe8
  40c3cb:	lea    esi,[esi+0x7af88920]
  40c3d1:	xor    edx,ecx
  40c3d3:	inc    ebx
  40c3d4:	push   0x2d9d0343
  40c3d9:	mov    ds:0xca7535d2,al
  40c3de:	lock jno 0x40c3d9
  40c3e1:	ror    DWORD PTR [edi],0x69
  40c3e4:	sar    DWORD PTR [edi-0x1d],cl
  40c3e7:	mov    eax,ds:0x7eba0e80
  40c3ec:	pushf  
  40c3ed:	mov    ch,0x87
  40c3ef:	lds    esi,FWORD PTR [edi-0x45]
  40c3f2:	cli    
  40c3f3:	jb     0x40c421
  40c3f5:	fwait
  40c3f6:	in     al,dx
  40c3f7:	inc    ebx
  40c3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f9:	sbb    edx,DWORD PTR [edx+0x97b0bc0]
  40c3ff:	mov    dh,0x34
  40c401:	inc    ebx
  40c402:	je     0x40c45f
  40c404:	cmp    cl,BYTE PTR [esi+0x22c8972e]
  40c40a:	mov    DWORD PTR [esi],edi
  40c40c:	cs mov esp,0xdf276c39
  40c412:	xchg   edi,eax
  40c413:	pop    esi
  40c414:	push   esp
  40c415:	add    al,0x3b
  40c417:	inc    ecx
  40c418:	and    dl,BYTE PTR [eax]
  40c41a:	test   DWORD PTR [esi+0x4ab10a95],ecx
  40c420:	jp     0x40c41a
  40c422:	call   0x6604:0x58605910
  40c429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c42a:	cs inc edx
  40c42c:	in     al,dx
  40c42d:	push   edx
  40c42e:	mov    ah,0x1d
  40c430:	or     dl,BYTE PTR [edx+ebx*2]
  40c433:	sbb    BYTE PTR [edx-0x50],dh
  40c436:	daa    
  40c437:	xlat   BYTE PTR ds:[ebx]
  40c438:	shr    ecx,0x24
  40c43b:	jmp    0xfb49:0x1bcc2541
  40c442:	mov    DWORD PTR [ebp+0x2e],esi
  40c445:	fbstp  TBYTE PTR [ecx]
  40c447:	lods   al,BYTE PTR ds:[esi]
  40c448:	mov    ds:0xe681723c,eax
  40c44d:	jmp    0x40c429
  40c44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c450:	int    0x53
  40c452:	pushf  
  40c453:	xchg   ebp,eax
  40c454:	(bad)  
  40c455:	mov    esi,0xc61427c3
  40c45a:	clc    
  40c45b:	push   eax
  40c45c:	rcr    BYTE PTR [eax-0x5b],0xa2
  40c460:	adc    al,0x8b
  40c462:	jle    0x40c44e
  40c464:	push   edi
  40c465:	mov    al,ds:0xb22f974a
  40c46a:	mov    WORD PTR [ecx+0xc],es
  40c46d:	daa    
  40c46e:	jae    0x40c4bb
  40c470:	test   DWORD PTR [ebp+0x72b2f943],0xd2ba2b5b
  40c47a:	ins    BYTE PTR es:[edi],dx
  40c47b:	enter  0xe845,0x7c
  40c47f:	cmp    ch,al
  40c481:	imul   ebx,DWORD PTR [edi-0x21b33aff],0x6d
  40c488:	mov    esi,0x9bddfdbc
  40c48d:	add    ecx,DWORD PTR [ebx+0x29]
  40c490:	imul   edi,DWORD PTR [eax+0x1e6287be],0x1314193c
  40c49a:	cmp    DWORD PTR [edx],esp
  40c49c:	xchg   ebp,eax
  40c49d:	enter  0x721f,0xa6
  40c4a1:	mov    eax,ds:0xaec91bd7
  40c4a6:	xor    al,0x8
  40c4a8:	push   ds
  40c4a9:	xchg   ebx,eax
  40c4aa:	adc    dh,ch
  40c4ac:	ficomp DWORD PTR [esi-0x7c6fdf13]
  40c4b2:	ror    BYTE PTR [esi-0x404a2ee],cl
  40c4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b9:	shl    DWORD PTR [di],0x73
  40c4bd:	pop    esp
  40c4be:	fld    TBYTE PTR [edi]
  40c4c0:	add    DWORD PTR [edx+0x42],0x49
  40c4c4:	lds    ecx,FWORD PTR [ebp+0x4cc999c2]
  40c4ca:	sahf   
  40c4cb:	xchg   DWORD PTR [esi+0x19],ebp
  40c4ce:	fucomp st(5)
  40c4d0:	cwde   
  40c4d1:	ins    BYTE PTR es:[edi],dx
  40c4d2:	add    ecx,esi
  40c4d4:	add    BYTE PTR [ebx],ah
  40c4d6:	pop    esp
  40c4d7:	dec    edi
  40c4d8:	push   ecx
  40c4d9:	mov    ds:0xe6ca299b,al
  40c4de:	add    al,0x65
  40c4e0:	retf   0xd027
  40c4e3:	or     DWORD PTR [ecx],eax
  40c4e5:	cmp    BYTE PTR [esi+ecx*8-0x6aaed895],ah
  40c4ec:	(bad)  
  40c4ed:	cmp    eax,0x4642bdfa
  40c4f2:	jmp    0x8bb6645
  40c4f7:	lods   eax,DWORD PTR ds:[esi]
  40c4f8:	and    DWORD PTR [ebx-0x1],0x4c
  40c4fc:	popf   
  40c4fd:	sub    edx,ecx
  40c4ff:	out    0xcd,eax
  40c501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c503:	fsubr  st(5),st
  40c505:	fs lock mov cl,0x9a
  40c509:	fst    QWORD PTR [edx-0x28]
  40c50c:	xchg   BYTE PTR [edx+eax*1+0x56],ch
  40c510:	leave  
  40c511:	ss ret 0x3103
  40c515:	(bad)  
  40c516:	pop    edx
  40c517:	mov    ebx,0xa384a5f3
  40c51c:	aas    
  40c51d:	push   ss
  40c51e:	(bad)  
  40c51f:	call   0xf7fcff7b
  40c524:	sbb    al,0xd4
  40c526:	neg    DWORD PTR [ebx+edx*2]
  40c529:	fild   DWORD PTR [edx+0x217ea892]
  40c52f:	jnp    0x40c56d
  40c531:	inc    ecx
  40c532:	sti    
  40c533:	jb     0x40c57b
  40c535:	mov    ebx,0x29467b00
  40c53a:	push   esp
  40c53b:	jne    0x40c5b9
  40c53d:	into   
  40c53e:	dec    esp
  40c53f:	add    eax,0x50a49f56
  40c544:	(bad)  
  40c546:	test   al,0x13
  40c548:	and    BYTE PTR [edi-0x42c0d248],dl
  40c54e:	test   eax,0xc1fb7cd9
  40c553:	out    0xf8,al
  40c555:	cmc    
  40c556:	mov    edi,0x22d320cb
  40c55b:	(bad)  
  40c55c:	(bad)  
  40c55d:	jl     0x40c53b
  40c55f:	push   esi
  40c560:	and    DWORD PTR [ebx-0x55],ebp
  40c563:	adc    DWORD PTR [esi+0x67],eax
  40c566:	mov    ss,WORD PTR [edi-0x6370d1f8]
  40c56c:	outs   dx,BYTE PTR ds:[esi]
  40c56d:	repnz popf 
  40c56f:	sub    eax,0xbf175ca8
  40c574:	add    bh,BYTE PTR [esi+0xe1c56f4]
  40c57a:	jmp    0xb1309b0
  40c57f:	into   
  40c580:	arpl   bx,cx
  40c582:	sub    DWORD PTR [ecx],esp
  40c584:	les    esp,FWORD PTR [edx]
  40c586:	imul   edi,DWORD PTR [ecx-0x3c328735],0xffffffcf
  40c58d:	aad    0x83
  40c58f:	adc    edx,DWORD PTR [ebx+0x737db169]
  40c595:	pop    eax
  40c596:	inc    ebx
  40c597:	icebp  
  40c598:	sbb    al,0xbb
  40c59a:	mov    DWORD PTR [edx-0x33],0xc2cdf36a
  40c5a1:	lock dec ebx
  40c5a3:	test   BYTE PTR [ebx+0x2e102c52],cl
  40c5a9:	dec    ebp
  40c5aa:	imul   eax,DWORD PTR [esi-0x60c10437],0x32
  40c5b1:	(bad)  
  40c5b3:	push   esp
  40c5b4:	push   ss
  40c5b5:	cmc    
  40c5b6:	jg     0x40c53f
  40c5b8:	bound  eax,QWORD PTR [eax+0x3a]
  40c5bb:	inc    ebx
  40c5bc:	popf   
  40c5bd:	xor    ebp,eax
  40c5bf:	mov    ebp,0x7cf77fec
  40c5c4:	dec    ebx
  40c5c5:	and    DWORD PTR [edx],0xcc18b44b
  40c5cb:	fwait
  40c5cc:	enter  0x106e,0x4e
  40c5d0:	pop    ebx
  40c5d1:	mov    ds:0x4f72c7b2,al
  40c5d6:	inc    ebx
  40c5d7:	jg     0x40c62a
  40c5d9:	cmc    
  40c5da:	add    al,0x90
  40c5dc:	fdivr  DWORD PTR [ebp-0x62f6de94]
  40c5e2:	adc    DWORD PTR [esi],ebp
  40c5e4:	in     al,dx
  40c5e5:	call   0xab6b:0xe1636227
  40c5ec:	xchg   ebx,eax
  40c5ed:	hlt    
  40c5ee:	daa    
  40c5ef:	fisubr WORD PTR [esp+ecx*1]
  40c5f2:	mov    dl,0xcc
  40c5f4:	jmp    0x40c62f
  40c5f6:	gs out dx,al
  40c5f8:	cld    
  40c5f9:	sbb    dh,BYTE PTR [edi]
  40c5fb:	push   esp
  40c5fc:	cmp    BYTE PTR [ebx+0x22673a2b],al
  40c602:	and    dl,dh
  40c604:	mov    WORD PTR [edi+edx*8-0x5ab1d69f],ds
  40c60b:	rcr    DWORD PTR [ebx],cl
  40c60d:	push   0x751dd3c3
  40c612:	pushf  
  40c613:	and    eax,ecx
  40c615:	mov    ebp,0xc1fdc66e
  40c61a:	xchg   ebp,eax
  40c61b:	jg     0x40c63a
  40c61d:	mov    bh,0x2
  40c61f:	mov    ebx,0xbb461532
  40c624:	mov    bl,0xcc
  40c627:	pop    ebx
  40c628:	or     dl,BYTE PTR [esi-0x39]
  40c62b:	mov    dl,0xa4
  40c62d:	mov    bh,al
  40c62f:	retf   
  40c630:	loop   0x40c664
  40c632:	mov    DWORD PTR [ecx+eiz*2],edi
  40c635:	pushf  
  40c636:	fidiv  WORD PTR [edi-0x1d858a89]
  40c63c:	in     eax,0x8b
  40c63e:	and    DWORD PTR [edx+ecx*4-0x1a],0xffffffb3
  40c643:	sqrtps xmm4,xmm1
  40c646:	dec    ebp
  40c647:	dec    ebp
  40c648:	adc    DWORD PTR [eax],ecx
  40c64a:	sub    al,0x45
  40c64c:	repnz jmp 0x925e:0x5a1a74c0
  40c654:	push   edx
  40c655:	mov    ecx,0x9a271022
  40c65a:	push   edx
  40c65b:	mov    ds:0xefb89ac6,al
  40c660:	sub    DWORD PTR [edx+0x68],esp
  40c663:	mov    bl,0xdf
  40c665:	sub    BYTE PTR [edi+0x4ded080c],cl
  40c66b:	imul   ecx,DWORD PTR [ecx],0x1d2fff58
  40c671:	xchg   DWORD PTR [edx],esi
  40c673:	int    0xd6
  40c675:	mov    bh,0x9
  40c677:	xor    BYTE PTR [ebp-0x31],cl
  40c67a:	scas   eax,DWORD PTR es:[edi]
  40c67b:	les    esp,FWORD PTR [ecx-0x4b]
  40c67e:	pop    ebx
  40c67f:	inc    esi
  40c680:	mov    eax,0xe7c9f581
  40c685:	outs   dx,BYTE PTR ds:[esi]
  40c686:	(bad)  
  40c687:	and    ch,cl
  40c689:	out    0xd0,eax
  40c68b:	sbb    eax,0x74ba34a6
  40c690:	test   BYTE PTR [eax-0x71],0x16
  40c694:	shl    DWORD PTR [ebx+eiz*2-0x3c],1
  40c698:	xor    DWORD PTR [ecx+0x33],ebx
  40c69b:	mov    ds:0x6f06db82,al
  40c6a0:	and    al,0xa6
  40c6a2:	arpl   WORD PTR [edi+ebx*8-0x7b309f15],si
  40c6a9:	and    al,0x4a
  40c6ab:	std    
  40c6ac:	sbb    al,0x19
  40c6ae:	jae    0x40c700
  40c6b0:	out    0xc,eax
  40c6b2:	cwde   
  40c6b3:	pop    esi
  40c6b4:	mov    ds:0xcb0dcd0a,eax
  40c6b9:	imul   esp,edi,0x4c45451
  40c6bf:	std    
  40c6c0:	inc    eax
  40c6c1:	push   ss
  40c6c2:	push   ebx
  40c6c3:	pop    ds
  40c6c4:	xor    ebx,DWORD PTR [esi]
  40c6c6:	fld    TBYTE PTR [ebp+0x4e828b4a]
  40c6cc:	jmp    0x40c719
  40c6ce:	xchg   DWORD PTR [edi],esp
  40c6d0:	add    eax,eax
  40c6d2:	shr    DWORD PTR [eax+eax*2+0x3d],1
  40c6d6:	or     eax,0xbb3891c4
  40c6db:	cs inc esp
  40c6dd:	icebp  
  40c6de:	add    al,0x7c
  40c6e0:	test   eax,0x304c7b0d
  40c6e5:	xor    BYTE PTR [edx+ebp*4+0x4196c086],bh
  40c6ec:	mov    dh,0xad
  40c6ee:	fstp   TBYTE PTR [eax]
  40c6f0:	xchg   esi,eax
  40c6f1:	adc    ecx,DWORD PTR [ebx+0x50]
  40c6f4:	inc    edx
  40c6f5:	inc    edi
  40c6f6:	mov    dl,0x6c
  40c6f8:	leave  
  40c6f9:	xchg   edx,eax
  40c6fa:	sahf   
  40c6fb:	pop    ss
  40c6fc:	repnz sub al,0xf1
  40c6ff:	inc    ecx
  40c700:	lods   al,BYTE PTR ds:[esi]
  40c701:	ror    DWORD PTR [ecx+0x724d1030],1
  40c707:	dec    eax
  40c708:	mov    al,ds:0xcebcf728
  40c70d:	jae    0x40c69b
  40c70f:	(bad)  
  40c711:	(bad)  
  40c712:	aaa    
  40c713:	xor    bh,ah
  40c715:	clc    
  40c716:	cs mov ecx,0xcf168da9
  40c71c:	fild   DWORD PTR [esp+eiz*8]
  40c71f:	out    dx,eax
  40c720:	leave  
  40c721:	cmp    edx,DWORD PTR [edx]
  40c723:	test   BYTE PTR [ebx+0x1c],dl
  40c726:	imul   edi,DWORD PTR [edi+esi*4+0x798a7d44],0xffffffc4
  40c72e:	mov    bl,0x39
  40c730:	test   al,0xb5
  40c732:	loope  0x40c747
  40c734:	sbb    esi,eax
  40c736:	mov    DWORD PTR [edx+0x3e],ebp
  40c739:	cli    
  40c73a:	xchg   DWORD PTR [edx+0x4a],ebx
  40c73d:	sbb    BYTE PTR [esi-0x1c800a36],ah
  40c743:	add    esi,DWORD PTR [eax+0x1e]
  40c746:	sbb    ah,BYTE PTR [ebx+0xe]
  40c749:	inc    ebx
  40c74a:	hlt    
  40c74b:	pop    esp
  40c74c:	sbb    al,0xe0
  40c74e:	or     bh,bh
  40c750:	xor    eax,0x7bfe5a78
  40c755:	(bad)  
  40c756:	fidivr DWORD PTR [esi]
  40c758:	in     eax,0x8d
  40c75a:	ret    0xb947
  40c75d:	test   BYTE PTR [edi-0x421ae242],dh
  40c763:	pop    es
  40c764:	and    al,0xf6
  40c766:	retf   0x2e15
  40c769:	fcom   QWORD PTR ds:0xe057941c
  40c76f:	sub    eax,0xcf5cb769
  40c774:	inc    edx
  40c775:	bound  esi,QWORD PTR [ebx+0x48]
  40c778:	ret    0x94e8
  40c77b:	nop
  40c77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c77d:	and    dl,dl
  40c77f:	repz xchg esp,eax
  40c781:	test   al,0x7e
  40c783:	push   ss
  40c784:	sbb    eax,0xb2f19c2
  40c789:	sub    esi,DWORD PTR [esi+0x6fb62b43]
  40c78f:	fwait
  40c790:	dec    ebp
  40c791:	dec    DWORD PTR ds:0x3c2b884
  40c797:	lahf   
  40c798:	jne    0x40c722
  40c79a:	xor    eax,0xecf08765
  40c79f:	fisttp DWORD PTR [esi]
  40c7a1:	or     DWORD PTR [ecx],edx
  40c7a3:	fisttp DWORD PTR [edi]
  40c7a5:	fcomp  DWORD PTR [ecx+0x6a955879]
  40c7ab:	imul   ebx,DWORD PTR [ebp+0x17],0x3af7f595
  40c7b2:	push   esp
  40c7b3:	xchg   ebp,eax
  40c7b4:	ds mov ecx,0x3eeddc10
  40c7ba:	sbb    edi,ebx
  40c7bc:	sbb    esp,ecx
  40c7be:	gs push es
  40c7c0:	stos   DWORD PTR es:[edi],eax
  40c7c1:	iret   
  40c7c2:	out    0xa,al
  40c7c4:	push   ds
  40c7c5:	inc    ebp
  40c7c6:	imul   esi,ebx,0xffffffcc
  40c7c9:	rcl    BYTE PTR [eax+0x3a1597d1],cl
  40c7cf:	push   ecx
  40c7d0:	in     al,dx
  40c7d1:	loop   0x40c787
  40c7d3:	and    eax,0x55e0b00f
  40c7d8:	dec    ecx
  40c7d9:	int3   
  40c7da:	scas   eax,DWORD PTR es:[edi]
  40c7db:	mov    eax,0x16ffe8d2
  40c7e0:	cmc    
  40c7e1:	xor    ax,0xdd85
  40c7e5:	aaa    
  40c7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e7:	sbb    dh,dl
  40c7e9:	enter  0x138,0xa
  40c7ed:	inc    eax
  40c7ee:	in     eax,0xa
  40c7f0:	push   es
  40c7f1:	mov    ah,0x55
  40c7f3:	jno    0x40c84f
  40c7f5:	xor    eax,0x30a63fec
  40c7fa:	pop    ebx
  40c7fb:	ins    BYTE PTR es:[edi],dx
  40c7fc:	xlat   BYTE PTR ds:[ebx]
  40c7fd:	adc    bh,bh
  40c7ff:	sbb    edi,DWORD PTR [ebp+0x17449210]
  40c805:	add    bh,BYTE PTR [ebp+edi*8+0x4216857a]
  40c80c:	push   ss
  40c80d:	retf   0x8806
  40c810:	xchg   esp,eax
  40c811:	mov    bl,0x9d
  40c813:	repz pop eax
  40c815:	(bad)  [ebx-0x6f]
  40c818:	jecxz  0x40c7f7
  40c81a:	imul   esi,DWORD PTR [edi+0x48df77d1],0x96f62320
  40c824:	add    eax,0x91847c57
  40c829:	jb     0x40c845
  40c82b:	pusha  
  40c82c:	idiv   BYTE PTR [edx]
  40c82e:	out    0xc9,al
  40c830:	adc    BYTE PTR [eax-0x23bc709a],bh
  40c836:	in     al,0x24
  40c838:	xchg   ebp,eax
  40c839:	je     0x40c8a1
  40c83b:	mov    ?,WORD PTR [eax-0x7e]
  40c83e:	and    DWORD PTR [esi+0x51c71b20],esi
  40c844:	dec    esi
  40c845:	cwde   
  40c846:	push   esi
  40c847:	sbb    al,0xf8
  40c849:	xor    al,0x5d
  40c84b:	mov    eax,ds:0xdde26ba
  40c850:	adc    eax,0xfe316b31
  40c855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c856:	push   0xffffffb5
  40c858:	xchg   ebx,eax
  40c859:	faddp  st(4),st
  40c85b:	xchg   DWORD PTR [esi],edx
  40c85d:	in     eax,0x20
  40c85f:	sub    edx,edx
  40c861:	jo     0x40c7fe
  40c863:	stc    
  40c864:	pop    es
  40c865:	push   esi
  40c866:	xchg   esi,eax
  40c867:	popa   
  40c868:	xor    cl,al
  40c86a:	loop   0x40c84f
  40c86c:	push   cs
  40c86d:	and    al,0x69
  40c86f:	pushf  
  40c870:	aas    
  40c871:	push   es
  40c872:	adc    al,0x64
  40c874:	xor    al,0xe7
  40c876:	mov    bl,0x77
  40c878:	das    
  40c879:	call   0xfc19:0x4eb29fcc
  40c880:	push   ebx
  40c881:	mov    cl,0x10
  40c883:	into   
  40c884:	jo     0x40c8ba
  40c886:	lahf   
  40c887:	out    0xde,al
  40c889:	jne    0x40c855
  40c88b:	cmp    al,0xd3
  40c88d:	mov    ebp,0x771a1b85
  40c892:	rcr    DWORD PTR [edx],0x14
  40c895:	das    
  40c896:	cmp    ecx,DWORD PTR es:[edi-0x5f]
  40c89a:	arpl   WORD PTR [eax+0x19],si
  40c89d:	mov    dl,0x9b
  40c89f:	repz leave 
  40c8a1:	cmp    ah,BYTE PTR [eax]
  40c8a3:	or     eax,0x5f43ed7
  40c8a8:	inc    edi
  40c8a9:	stc    
  40c8aa:	rcr    BYTE PTR [esi],cl
  40c8ac:	mov    esp,0xf53d136a
  40c8b1:	push   ss
  40c8b2:	test   DWORD PTR [eax-0x278f5dac],ebp
  40c8b8:	inc    ebx
  40c8b9:	inc    ebp
  40c8ba:	push   cs
  40c8bb:	pop    ebx
  40c8bc:	sbb    al,0xd7
  40c8be:	push   edx
  40c8bf:	inc    ecx
  40c8c0:	popa   
  40c8c1:	sbb    bh,al
  40c8c3:	ins    BYTE PTR es:[edi],dx
  40c8c4:	clc    
  40c8c5:	cmp    BYTE PTR [edi-0x1f9e9f73],ch
  40c8cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8cc:	inc    edx
  40c8cd:	sub    eax,0x77c3874f
  40c8d2:	test   DWORD PTR [edi],edx
  40c8d4:	das    
  40c8d5:	fidivr WORD PTR [edi-0x581edbed]
  40c8db:	test   al,0x11
  40c8dd:	mov    ecx,0x25604708
  40c8e2:	dec    eax
  40c8e3:	int3   
  40c8e4:	imul   ecx,ecx,0x43
  40c8e7:	aad    0x3f
  40c8e9:	stos   DWORD PTR es:[edi],eax
  40c8ea:	sbb    DWORD PTR [edx+0x61ab9579],esi
  40c8f0:	into   
  40c8f1:	xchg   esi,eax
  40c8f2:	inc    esp
  40c8f3:	scas   al,BYTE PTR es:[edi]
  40c8f4:	jbe    0x40c886
  40c8f6:	icebp  
  40c8f7:	push   0xffffffc5
  40c8f9:	repnz push esp
  40c8fb:	out    0xb6,eax
  40c8fd:	je     0x40c88b
  40c8ff:	sbb    bl,BYTE PTR [eax+ecx*1+0x68]
  40c903:	leave  
  40c904:	inc    esi
  40c905:	icebp  
  40c906:	es aaa 
  40c908:	fisubr DWORD PTR [ebx+eax*4-0x168514ef]
  40c90f:	int    0xc3
  40c911:	scas   al,BYTE PTR es:[edi]
  40c912:	leave  
  40c913:	jo     0x40c92d
  40c915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c916:	in     eax,dx
  40c917:	fist   DWORD PTR [esp+edx*2+0x7426a1f9]
  40c91e:	xor    al,0x93
  40c920:	dec    ebx
  40c921:	sbb    ah,dh
  40c923:	cdq    
  40c924:	idiv   esp
  40c926:	(bad)  
  40c928:	xchg   ebx,eax
  40c929:	cmp    eax,0xacf44f6d
  40c92e:	dec    ebx
  40c92f:	cli    
  40c930:	fdivr  st(5),st
  40c932:	jb     0x40c93e
  40c934:	jb     0x40c997
  40c936:	popa   
  40c937:	sti    
  40c938:	adc    esp,DWORD PTR [esi+0x433f4941]
  40c93e:	pushf  
  40c93f:	repnz inc eax
  40c941:	mov    ah,0x8
  40c943:	aam    0x9b
  40c945:	jns    0x40c987
  40c947:	test   al,0x8a
  40c949:	sub    cl,BYTE PTR [eax+0x66]
  40c94c:	imul   ebx,edx,0x2d906e32
  40c952:	mov    bh,0x28
  40c954:	xchg   edx,eax
  40c955:	xchg   edi,eax
  40c956:	ins    BYTE PTR es:[edi],dx
  40c957:	repnz pop ebx
  40c959:	xchg   edx,eax
  40c95a:	mov    bl,0xa5
  40c95c:	jno    0x40c995
  40c95e:	mov    bh,0x91
  40c960:	cli    
  40c961:	sub    al,cl
  40c963:	jecxz  0x40c95f
  40c965:	ror    ebp,0x48
  40c968:	pusha  
  40c969:	outs   dx,BYTE PTR ds:[esi]
  40c96a:	xchg   esi,eax
  40c96b:	cmp    ebp,DWORD PTR [esp+edi*4+0x5d]
  40c96f:	sar    eax,1
  40c971:	stc    
  40c972:	mov    eax,DWORD PTR [ebx-0x2bf5a954]
  40c978:	dec    edx
  40c979:	dec    eax
  40c97a:	pop    ss
  40c97b:	cmp    eax,0xcb6e4621
  40c980:	loop   0x40c987
  40c982:	iret   
  40c983:	sbb    eax,0xfce92529
  40c988:	int3   
  40c989:	in     eax,0x3e
  40c98b:	sub    ch,BYTE PTR [ecx+0x482e41da]
  40c991:	cmp    ah,cl
  40c993:	push   edx
  40c994:	mov    es,WORD PTR [ebx+0x5f]
  40c997:	(bad)  
  40c999:	push   edi
  40c99a:	jmp    0x83fa:0x93628262
  40c9a1:	jae    0x40c99f
  40c9a3:	cmp    al,0x31
  40c9a5:	pop    ebp
  40c9a6:	repnz jecxz 0x40c994
  40c9a9:	retf   0x41c7
  40c9ac:	pop    es
  40c9ad:	sbb    al,0x3c
  40c9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b0:	mul    DWORD PTR [esi]
  40c9b2:	ss aam 0xba
  40c9b5:	push   cs
  40c9b6:	dec    ecx
  40c9b7:	xchg   al,cl
  40c9b9:	dec    eax
  40c9ba:	sar    BYTE PTR [edi-0xe],0xee
  40c9be:	sbb    al,0x65
  40c9c0:	mov    ecx,0x70709976
  40c9c5:	stc    
  40c9c6:	test   al,0xeb
  40c9c8:	fwait
  40c9c9:	sub    eax,eax
  40c9cb:	jno    0x40c9fa
  40c9cd:	loop   0x40c951
  40c9cf:	(bad)  
  40c9d0:	jbe    0x40c95a
  40c9d2:	push   0x716aa173
  40c9d7:	mov    ds:0xffb32343,al
  40c9dc:	aaa    
  40c9dd:	shr    DWORD PTR [ebx+0x29],1
  40c9e0:	mov    al,ds:0xd21beb48
  40c9e5:	push   esi
  40c9e6:	pop    DWORD PTR [ebx]
  40c9e8:	dec    ebp
  40c9e9:	mov    ebx,eax
  40c9eb:	pop    ecx
  40c9ec:	popf   
  40c9ed:	mov    ah,0x61
  40c9ef:	xlat   BYTE PTR ds:[ebx]
  40c9f0:	add    DWORD PTR [eax+0x5a845165],esp
  40c9f6:	sbb    al,0xd4
  40c9f8:	inc    eax
  40c9f9:	xchg   ebp,eax
  40c9fa:	jno    0x40ca4d
  40c9fc:	adc    al,BYTE PTR [esi]
  40c9fe:	shl    DWORD PTR [edi],1
  40ca00:	adc    esp,DWORD PTR [ebx+ecx*1+0x0]
  40ca04:	xor    al,0xee
  40ca06:	dec    ebx
  40ca07:	add    eax,0x8bef076a
  40ca0c:	inc    edx
  40ca0d:	call   0x12593153
  40ca12:	add    cl,BYTE PTR [esi+0x46967fc1]
  40ca18:	jne    0x40ca7a
  40ca1a:	or     dl,bh
  40ca1c:	fild   WORD PTR [ebp+ecx*1+0x4adfd069]
  40ca23:	in     eax,dx
  40ca24:	dec    eax
  40ca25:	xchg   dl,bl
  40ca27:	fnstcw WORD PTR [ecx]
  40ca29:	jmp    0x1b7ee00d
  40ca2e:	cwde   
  40ca2f:	cmp    BYTE PTR [ecx+ecx*4+0x6a],al
  40ca33:	mov    esp,0xe7e455c8
  40ca38:	cmp    BYTE PTR [eax+0x6fe8a6c9],bl
  40ca3e:	dec    edi
  40ca3f:	pop    DWORD PTR [edi]
  40ca41:	ja     0x40c9c6
  40ca43:	sahf   
  40ca44:	inc    edi
  40ca45:	es inc edx
  40ca47:	pusha  
  40ca48:	pop    ss
  40ca49:	cs aas 
  40ca4b:	daa    
  40ca4c:	(bad)  [ecx+0x674da575]
  40ca52:	nop
  40ca53:	mov    bh,0x2a
  40ca55:	imul   edi,DWORD PTR [ecx+ebx*4+0x63],0x4762c4ab
  40ca5d:	icebp  
  40ca5e:	jge    0x40ca74
  40ca60:	lods   al,BYTE PTR ds:[esi]
  40ca61:	test   esi,0x9e559d0b
  40ca67:	pushf  
  40ca68:	cli    
  40ca69:	jp     0x40c9ec
  40ca6b:	push   ds
  40ca6c:	mov    dl,BYTE PTR [eax]
  40ca6e:	test   eax,0xb35e01d7
  40ca73:	scas   al,BYTE PTR es:[edi]
  40ca74:	out    dx,eax
  40ca75:	ins    DWORD PTR es:[edi],dx
  40ca76:	ror    BYTE PTR [edx+0x6443b414],0x9c
  40ca7d:	push   cs
  40ca7e:	push   ebp
  40ca7f:	jg     0x40ca31
  40ca81:	aaa    
  40ca82:	adc    al,0xbe
  40ca84:	fild   DWORD PTR ds:0xbf449c2a
  40ca8a:	scas   eax,DWORD PTR es:[edi]
  40ca8b:	das    
  40ca8c:	and    esi,DWORD PTR [esi]
  40ca8e:	ds and al,0xe7
  40ca91:	out    dx,al
  40ca92:	(bad)  
  40ca93:	adc    al,0xbb
  40ca95:	in     al,0x8
  40ca97:	inc    esp
  40ca98:	mov    cl,0x6a
  40ca9a:	sbb    cl,bl
  40ca9c:	add    BYTE PTR [esi],dh
  40ca9e:	mov    bh,0x27
  40caa0:	dec    ebp
  40caa1:	imul   ecx,DWORD PTR [edx+0x4ec05f72],0xd371eb0d
  40caab:	repz mov WORD PTR [esi],?
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x26bae196,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40ce36
  40cde1:	ror    DWORD PTR [edx+0x41ed87e7],cl
  40cde7:	jmp    0x40cdbb
  40cde9:	mov    bh,bl
  40cdeb:	test   al,0x94
  40cded:	shl    DWORD PTR [ecx+0x40],0xda
  40cdf1:	mov    cl,0x23
  40cdf3:	cli    
  40cdf4:	jns    0x43d33526
  40cdfa:	sbb    al,BYTE PTR [esi]
  40cdfc:	mov    dh,0xba
  40cdfe:	stc    
  40cdff:	sub    al,0x0
  40ce01:	or     DWORD PTR [edx+eax*2+0x6a0b7679],eax
  40ce08:	retf   
  40ce09:	jp     0x40cddf
  40ce0b:	ds xchg edx,eax
  40ce0d:	mov    bh,0x32
  40ce0f:	push   edx
  40ce10:	mov    al,0x18
  40ce12:	in     eax,0x9e
  40ce14:	sahf   
  40ce15:	xchg   esi,eax
  40ce16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce17:	mov    edi,0x14b8a6ac
  40ce1c:	(bad)  
  40ce1d:	lods   al,BYTE PTR ds:[esi]
  40ce1e:	retf   0x5fe
  40ce21:	fsubr  DWORD PTR [edi]
  40ce23:	dec    eax
  40ce24:	outs   dx,BYTE PTR ds:[esi]
  40ce25:	adc    ch,BYTE PTR [esi+edi*2]
  40ce28:	aas    
  40ce29:	sub    BYTE PTR [eax-0x42de7600],ch
  40ce2f:	daa    
  40ce30:	loop   0x40ce84
  40ce32:	xor    bh,BYTE PTR [edi+0x7e622599]
  40ce38:	xchg   ecx,eax
  40ce39:	in     al,dx
  40ce3a:	ds or  bl,0xb3
  40ce3e:	shr    DWORD PTR [ecx-0x17],cl
  40ce41:	sbb    DWORD PTR [esi+eax*1],0xdb9a791a
  40ce48:	jge    0x40cde5
  40ce4a:	fist   DWORD PTR [esi-0x16595440]
  40ce50:	lods   al,BYTE PTR ds:[esi]
  40ce51:	test   BYTE PTR es:[esi+edx*4+0x1e],bh
  40ce56:	mov    edi,0x60ab3657
  40ce5b:	inc    eax
  40ce5c:	neg    DWORD PTR [esi]
  40ce5e:	and    DWORD PTR [eax+0x3e],edx
  40ce61:	dec    esp
  40ce62:	(bad)  
  40ce63:	lock clc 
  40ce65:	call   0x47ed8a83
  40ce6a:	addr16 repnz cmp al,0x3e
  40ce6e:	mov    ecx,0xb17ffffc
  40ce73:	lock outs dx,BYTE PTR ds:[esi]
  40ce75:	push   edx
  40ce76:	add    eax,DWORD PTR [ebx]
  40ce78:	push   0xffffffaf
  40ce7a:	ss ins DWORD PTR es:[edi],dx
  40ce7c:	xor    eax,0x35011fb1
  40ce81:	loope  0x40ce96
  40ce83:	add    BYTE PTR gs:[esi+0x21],dl
  40ce87:	lock xchg esp,eax
  40ce89:	outs   dx,DWORD PTR es:[esi]
  40ce8b:	push   esp
  40ce8c:	int    0xe4
  40ce8e:	ficomp WORD PTR [edi+0x20236bc4]
  40ce94:	cli    
  40ce95:	stc    
  40ce96:	mov    bl,0x8a
  40ce98:	xchg   ebx,eax
  40ce99:	sti    
  40ce9a:	out    0x1f,eax
  40ce9c:	jne    0x40cee2
  40ce9e:	in     eax,dx
  40ce9f:	xor    BYTE PTR [ecx],cl
  40cea1:	lahf   
  40cea2:	pop    ecx
  40cea3:	pop    eax
  40cea4:	dec    edi
  40cea5:	jmp    0x80bd2181
  40ceaa:	add    edx,ebp
  40ceac:	push   0xdccda8ac
  40ceb1:	mov    dl,0x70
  40ceb3:	jne    0x40ce98
  40ceb5:	jae    0x40cf17
  40ceb7:	xchg   ebp,eax
  40ceb8:	add    al,0x5
  40ceba:	mov    dl,0x87
  40cebc:	sub    eax,0xa670f76a
  40cec1:	sub    DWORD PTR [esp+ebx*2+0x249f6bbd],edi
  40cec8:	mov    ch,0xa6
  40ceca:	cmp    al,0x40
  40cecc:	sahf   
  40cecd:	push   ecx
  40cece:	pop    ebp
  40cecf:	cmp    eax,0xc7ab8c84
  40ced4:	xor    al,BYTE PTR [esi+0x5fe1051d]
  40ceda:	inc    edi
  40cedb:	xlat   BYTE PTR ds:[ebx]
  40cedc:	xchg   ecx,eax
  40cedd:	cmp    BYTE PTR [si],0xeb
  40cee1:	test   BYTE PTR [esi+0x75],bl
  40cee4:	xor    al,0x18
  40cee6:	add    DWORD PTR [ebx+0x309fd90d],edx
  40ceec:	sub    eax,0xf7365846
  40cef1:	addr16 loopne 0x40cf68
  40cef4:	call   0x7899:0x6cff8c54
  40cefb:	sahf   
  40cefc:	sbb    al,0x6d
  40cefe:	call   0xe98e:0x4008db
  40cf05:	mov    edx,eax
  40cf07:	cmp    dl,ah
  40cf09:	pop    esp
  40cf0a:	push   cs
  40cf0b:	cmpps  xmm2,XMMWORD PTR [esp+ebp*8-0x60d4fbb4],0xde
  40cf14:	fsubr  QWORD PTR [ebx-0x77c68415]
  40cf1a:	dec    ebx
  40cf1b:	imul   DWORD PTR [ebx]
  40cf1d:	sbb    cl,BYTE PTR [edx-0x80]
  40cf20:	pop    edx
  40cf21:	mov    eax,ds:0x72c4c439
  40cf26:	mov    ebp,0x17a77af
  40cf2b:	enter  0x38a3,0x28
  40cf2f:	cwde   
  40cf30:	pop    ebp
  40cf31:	jbe    0x40cf01
  40cf33:	add    al,0x80
  40cf35:	mov    DWORD PTR [edi+ecx*2+0x21748027],esp
  40cf3c:	leave  
  40cf3d:	iret   
  40cf3e:	sbb    BYTE PTR [ebx+esi*4+0x5e],ch
  40cf42:	xor    al,BYTE PTR es:[ebp-0x4d]
  40cf46:	pop    esi
  40cf47:	(bad)  
  40cf49:	cdq    
  40cf4a:	jp     0x40cef4
  40cf4c:	xor    ebx,ecx
  40cf4e:	ja     0x40cf4d
  40cf50:	dec    ecx
  40cf51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf52:	xor    ah,0x34
  40cf55:	(bad)  
  40cf56:	retf   
  40cf57:	sub    edx,DWORD PTR [edi-0x7e]
  40cf5a:	xchg   ebp,eax
  40cf5b:	(bad)  
  40cf5d:	mov    ds:0x94b17814,eax
  40cf62:	fstp   DWORD PTR [ebp+0x4b]
  40cf65:	xchg   ecx,eax
  40cf66:	xchg   edx,eax
  40cf67:	clc    
  40cf68:	loope  0x40cf2a
  40cf6a:	jne    0x40cf87
  40cf6c:	push   0xffffffcc
  40cf6e:	adc    edi,DWORD PTR [ecx-0xa]
  40cf71:	outs   dx,DWORD PTR ds:[esi]
  40cf72:	in     al,0x3a
  40cf74:	xchg   ah,ch
  40cf76:	mov    ecx,0x17c66ae6
  40cf7b:	fcom   QWORD PTR [edi]
  40cf7d:	adc    al,dh
  40cf7f:	daa    
  40cf80:	std    
  40cf81:	stc    
  40cf82:	mov    cl,0x66
  40cf84:	xlat   BYTE PTR ds:[ebx]
  40cf85:	or     bh,ah
  40cf87:	add    al,0x1
  40cf89:	xor    ebp,DWORD PTR [ebp-0x4bbdbb24]
  40cf8f:	rcl    edi,1
  40cf91:	or     BYTE PTR ds:0x3d7249a3,ah
  40cf97:	sahf   
  40cf98:	push   ebx
  40cf99:	cmp    al,0x6a
  40cf9b:	stos   BYTE PTR es:[edi],al
  40cf9c:	les    edi,FWORD PTR [eax]
  40cf9e:	iret   
  40cf9f:	dec    ebx
  40cfa0:	sub    eax,0x83e6dd2d
  40cfa5:	mov    ecx,0x5fef3859
  40cfaa:	cmp    eax,0xf95b7c69
  40cfaf:	pop    edi
  40cfb0:	dec    ecx
  40cfb1:	add    DWORD PTR [ecx],ebx
  40cfb3:	mov    al,0x7c
  40cfb5:	sahf   
  40cfb6:	aad    0xc5
  40cfb8:	jg     0x40cf6b
  40cfba:	dec    ebp
  40cfbb:	xor    al,0x3e
  40cfbd:	mov    edx,0x4d9abfc0
  40cfc2:	cmc    
  40cfc3:	jmp    0x40cfbe
  40cfc5:	push   edx
  40cfc6:	adc    eax,0xe65251ef
  40cfcb:	xchg   esp,eax
  40cfcc:	or     dl,BYTE PTR [ebx+0x22]
  40cfcf:	mov    dl,0x49
  40cfd1:	mov    dl,0xe8
  40cfd3:	mov    al,0xad
  40cfd5:	popf   
  40cfd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd7:	add    DWORD PTR [edx],ebp
  40cfd9:	cmp    edi,edx
  40cfdb:	les    ecx,FWORD PTR [esi+edi*2+0x77e463cb]
  40cfe2:	je     0x40cfd0
  40cfe4:	cmp    edx,DWORD PTR [eax]
  40cfe6:	push   0xffffffcc
  40cfe8:	ins    BYTE PTR es:[edi],dx
  40cfe9:	jle    0x40cf6c
  40cfeb:	loopne 0x40d018
  40cfed:	int3   
  40cfee:	pusha  
  40cfef:	pop    ebp
  40cff0:	repnz sub eax,0x435d98f4
  40cff6:	xlat   BYTE PTR ds:[ebx]
  40cff7:	mov    WORD PTR [esi-0x9],?
  40cffa:	or     DWORD PTR [edx],0xeb06145
  40d000:	push   0xf2cd69a4
  40d005:	out    dx,al
  40d006:	push   edi
  40d007:	test   al,0xca
  40d009:	xor    BYTE PTR [esi-0x59c16316],dl
  40d00f:	retf   0x2967
  40d012:	add    ch,0x1d
  40d015:	sub    ebx,ebx
  40d017:	shl    BYTE PTR [edi],cl
  40d019:	mov    dl,0xf2
  40d01b:	test   al,0x9a
  40d01d:	xor    BYTE PTR [eax],0xd9
  40d020:	jl     0x40d066
  40d022:	lea    eax,[eax-0x696c2896]
  40d028:	mov    es,WORD PTR [ebp+0x8]
  40d02b:	mov    eax,ds:0xd11d39b3
  40d030:	rcr    BYTE PTR [edi*1+0x13a466e5],cl
  40d037:	sub    eax,0xb7b90287
  40d03c:	mov    ch,0xde
  40d03e:	mov    ebx,0x21bbf46
  40d043:	dec    eax
  40d044:	shl    BYTE PTR [ecx],1
  40d046:	jmp    0x40d0bc
  40d048:	fmul   DWORD PTR [esi-0x4f102c7]
  40d04e:	xlat   BYTE PTR ds:[ebx]
  40d04f:	sub    BYTE PTR [ebx+0x50bfd32c],al
  40d055:	nop
  40d056:	not    DWORD PTR [edx-0x1a52413b]
  40d05c:	push   ebx
  40d05d:	push   0xe33b58b
  40d062:	pop    ds
  40d063:	or     dh,BYTE PTR [esi]
  40d065:	adc    al,0x76
  40d067:	mov    cl,0x3c
  40d069:	mov    esi,0xc790e5e3
  40d06e:	inc    esp
  40d06f:	and    DWORD PTR [ecx-0x7e919bed],edx
  40d075:	dec    edi
  40d076:	push   ss
  40d077:	pop    edx
  40d078:	push   0xffffffce
  40d07a:	dec    BYTE PTR [esi+edi*8+0x4e]
  40d07e:	shl    DWORD PTR [esi+esi*1],cl
  40d081:	jns    0x40d032
  40d083:	fs popf 
  40d085:	cmp    al,0x90
  40d087:	out    0x84,al
  40d089:	add    al,0xe
  40d08b:	in     eax,0xf
  40d08d:	cmp    eax,0x45a9b19b
  40d092:	cwde   
  40d093:	mov    ah,0x16
  40d095:	nop
  40d096:	push   cs
  40d097:	cmp    eax,0x276e1a81
  40d09c:	mov    al,ds:0x947166ad
  40d0a1:	inc    ebp
  40d0a2:	or     al,0xa3
  40d0a4:	bound  ebx,QWORD PTR [ecx]
  40d0a6:	jne    0x40d0bd
  40d0a8:	imul   ebp,DWORD PTR [ebp-0x24890a68],0x5c4162b2
  40d0b2:	inc    edx
  40d0b3:	and    DWORD PTR [edx-0x76980680],0xdabfb90c
  40d0bd:	xchg   ebp,eax
  40d0be:	lods   al,BYTE PTR ds:[esi]
  40d0bf:	aad    0x9c
  40d0c1:	ins    BYTE PTR es:[edi],dx
  40d0c2:	pop    ecx
  40d0c3:	jmp    0x40d103
  40d0c5:	and    ch,BYTE PTR [eax]
  40d0c7:	jmp    0x40d0be
  40d0c9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d0cb:	push   ecx
  40d0cc:	sti    
  40d0cd:	inc    eax
  40d0ce:	push   ss
  40d0cf:	out    dx,al
  40d0d0:	shr    DWORD PTR [edi],0xba
  40d0d3:	adc    al,0x78
  40d0d5:	mov    al,0x13
  40d0d7:	cmp    BYTE PTR gs:0x690a74c1,ah
  40d0de:	mov    ?,WORD PTR [esi+0x51efb0d]
  40d0e4:	push   si
  40d0e6:	sbb    al,0x58
  40d0e8:	sbb    ebx,DWORD PTR [ecx+0x33]
  40d0eb:	add    DWORD PTR [ebx+edi*4],ecx
  40d0ee:	sbb    BYTE PTR [edi+0x4b],dl
  40d0f1:	aaa    
  40d0f2:	xor    ecx,DWORD PTR [ebx+0x35]
  40d0f5:	dec    ebx
  40d0f7:	rol    BYTE PTR [ecx+0x2b],0xd2
  40d0fb:	jo     0x40d0cb
  40d0fd:	cli    
  40d0fe:	cli    
  40d0ff:	adc    al,0x8f
  40d101:	mov    cl,0xce
  40d103:	fs mov bl,0xf9
  40d106:	jbe    0x40d0b0
  40d108:	mov    ds:0x22c62230,eax
  40d10d:	out    0x83,eax
  40d10f:	inc    esi
  40d110:	loop   0x40d157
  40d112:	and    ah,bh
  40d114:	mov    ebx,0x60c66ed4
  40d119:	in     al,0xbb
  40d11b:	out    dx,eax
  40d11c:	pop    ds
  40d11d:	jle    0x40d18c
  40d11f:	mov    bh,0x3b
  40d121:	icebp  
  40d122:	xor    DWORD PTR [ebx-0x5f],0x27c3f065
  40d129:	scas   eax,DWORD PTR es:[edi]
  40d12a:	adc    dl,BYTE PTR [ecx-0x68]
  40d12d:	inc    eax
  40d12e:	test   BYTE PTR [ebp+0x56a57255],ah
  40d134:	cmp    eax,0x10653a27
  40d139:	mov    ebp,0x5ae3a618
  40d13e:	ret    
  40d13f:	ins    BYTE PTR es:[edi],dx
  40d140:	(bad)  ds:0xd355fca6
  40d146:	sbb    edi,eax
  40d148:	in     al,dx
  40d149:	popa   
  40d14a:	cwde   
  40d14b:	mov    WORD PTR cs:[ebp+ebx*4+0x7a],cs
  40d150:	(bad)
  40d154:	push   0x28
  40d156:	outs   dx,BYTE PTR ds:[esi]
  40d157:	jge    0x40d1a5
  40d159:	sbb    bl,BYTE PTR [ebx+0x71c1a870]
  40d15f:	push   ds
  40d160:	push   esi
  40d161:	fcom   QWORD PTR [ebx]
  40d163:	jg     0x40d14d
  40d165:	cdq    
  40d166:	or     ebp,DWORD PTR [edx+eiz*4+0x3f]
  40d16a:	push   ebp
  40d16b:	es sub al,0xef
  40d16e:	xor    al,0x4b
  40d170:	pushf  
  40d171:	(bad)  
  40d172:	and    al,al
  40d174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d175:	inc    ecx
  40d176:	add    DWORD PTR [esi],ecx
  40d178:	add    ebp,ecx
  40d17a:	fsubr  QWORD PTR [edi-0x7c6cce67]
  40d180:	mov    dh,0xc
  40d182:	leave  
  40d183:	js     0x40d13b
  40d185:	xor    DWORD PTR [edx],ecx
  40d187:	and    eax,DWORD PTR [esi-0x7f3d59d3]
  40d18d:	call   0x3618a1d1
  40d192:	dec    eax
  40d193:	jmp    0x40d1e0
  40d195:	ins    DWORD PTR es:[edi],dx
  40d196:	push   esi
  40d197:	fistp  QWORD PTR [ebx+0x22874c31]
  40d19d:	mov    bl,0xfa
  40d19f:	(bad)  
  40d1a0:	shl    DWORD PTR [edi+0x2de7b79e],cl
  40d1a6:	cmp    ah,BYTE PTR ds:0xfbe9b9cd
  40d1ac:	ss stos DWORD PTR es:[edi],eax
  40d1ae:	sbb    bh,dh
  40d1b0:	loop   0x40d21f
  40d1b2:	xor    al,0x97
  40d1b4:	jae    0x40d187
  40d1b6:	pop    ecx
  40d1b7:	cmp    al,cl
  40d1b9:	into   
  40d1ba:	add    al,0x5d
  40d1bc:	rcl    DWORD PTR [ebx],cl
  40d1be:	sub    ah,BYTE PTR [ebx]
  40d1c0:	mov    eax,ds:0xf31fa5e2
  40d1c5:	arpl   WORD PTR [edx-0x5e],bx
  40d1c8:	dec    edi
  40d1c9:	clc    
  40d1ca:	add    edx,DWORD PTR [esi]
  40d1cc:	push   0x282eb563
  40d1d1:	dec    ebx
  40d1d2:	cmp    BYTE PTR [ecx],dh
  40d1d4:	mov    ebx,0x18cbaeb2
  40d1d9:	xchg   DWORD PTR [eax-0x5d9a863e],esp
  40d1df:	lea    edi,[esi-0x7d]
  40d1e2:	push   edx
  40d1e3:	push   esi
  40d1e4:	sub    DWORD PTR [esp+eax*1],eax
  40d1e7:	es sbb al,0x90
  40d1ea:	in     al,0xcf
  40d1ec:	enter  0x262,0xc4
  40d1f0:	in     eax,dx
  40d1f1:	hlt    
  40d1f2:	pop    eax
  40d1f3:	out    0x39,al
  40d1f5:	jno    0x40d216
  40d1f7:	or     BYTE PTR [ebp-0x38002b1],dh
  40d1fd:	or     DWORD PTR [edx+0x32836d1],eax
  40d203:	retf   0xedcb
  40d206:	mov    al,0xda
  40d208:	ret    0x112f
  40d20b:	adc    DWORD PTR [ecx-0x2b],esp
  40d20e:	dec    esp
  40d20f:	mov    ah,0xca
  40d211:	pusha  
  40d212:	sar    ecx,cl
  40d214:	sub    esi,esp
  40d216:	xlat   BYTE PTR ds:[ebx]
  40d217:	jno    0x40d1be
  40d219:	push   ebx
  40d21a:	cmp    ah,BYTE PTR [ebx-0x60e7c17b]
  40d220:	adc    BYTE PTR [edx],dh
  40d222:	ds js  0x40d1ed
  40d225:	(bad)  
  40d226:	xor    DWORD PTR [esi+0x13],ebp
  40d229:	es mov bl,0x1e
  40d22c:	sub    BYTE PTR [bp+di-0x2aa3],dh
  40d231:	out    dx,eax
  40d232:	(bad)  
  40d233:	or     al,0xfa
  40d235:	pop    eax
  40d236:	lahf   
  40d237:	and    DWORD PTR [esi],0xc83db8b4
  40d23d:	adc    ebp,DWORD PTR [edi+0x19]
  40d240:	pop    edi
  40d241:	int3   
  40d242:	add    eax,0x5aeed354
  40d247:	pop    ss
  40d248:	in     al,0x88
  40d24a:	sbb    DWORD PTR [eax-0x4a15541b],ebx
  40d250:	test   esp,edi
  40d252:	aas    
  40d253:	and    dh,BYTE PTR [edi-0x4964190e]
  40d259:	lock (bad) 
  40d25b:	sub    ebx,esi
  40d25d:	push   edx
  40d25e:	push   esi
  40d25f:	mov    ebx,ebp
  40d261:	mov    ss:0x31f65696,eax
  40d267:	imul   eax,DWORD PTR ds:0x464042f8,0xf52e9f82
  40d271:	mov    ah,0x57
  40d273:	iret   
  40d274:	jo     0x40d2cc
  40d276:	pop    edi
  40d277:	out    dx,eax
  40d278:	(bad)  
  40d279:	mov    cl,0xdd
  40d27b:	in     eax,dx
  40d27c:	lods   al,BYTE PTR ds:[esi]
  40d27d:	jae    0x40d24e
  40d27f:	mov    ds:0x92d0bc9f,eax
  40d284:	loopne 0x40d217
  40d286:	sub    eax,0x7d8af369
  40d28b:	ret    0xd6ea
  40d28e:	imul   edx,DWORD PTR [eax-0x4e05f75f],0x83b3f647
  40d298:	jmp    ecx
  40d29a:	cmp    BYTE PTR [esi-0x714ad51e],dl
  40d2a0:	pop    ecx
  40d2a1:	pop    esi
  40d2a2:	add    al,0x2
  40d2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a5:	shr    DWORD PTR [ecx],1
  40d2a7:	cmp    BYTE PTR [esi+0x53],dh
  40d2aa:	xor    edx,DWORD PTR [eax-0x7]
  40d2ad:	push   esp
  40d2ae:	outs   dx,BYTE PTR ds:[esi]
  40d2af:	js     0x40d31d
  40d2b1:	(bad)  
  40d2b2:	test   DWORD PTR [eax+0x5c96933b],0x121d45dc
  40d2bc:	je     0x40d279
  40d2be:	gs mov al,0x16
  40d2c1:	add    ebx,DWORD PTR [esp+ecx*1]
  40d2c4:	jbe    0x40d2aa
  40d2c6:	cmp    bl,BYTE PTR [ecx+0x76b39089]
  40d2cc:	mov    ch,bl
  40d2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2cf:	outs   dx,DWORD PTR ds:[esi]
  40d2d0:	stos   DWORD PTR es:[edi],eax
  40d2d1:	leave  
  40d2d2:	or     dh,ah
  40d2d4:	dec    esp
  40d2d5:	stos   BYTE PTR es:[edi],al
  40d2d6:	sub    eax,0x5f86d188
  40d2db:	jns    0x40d2c8
  40d2dd:	scas   al,BYTE PTR es:[edi]
  40d2de:	inc    ecx
  40d2df:	sub    dh,bh
  40d2e1:	push   ebx
  40d2e2:	xor    al,0xf1
  40d2e4:	pop    ss
  40d2e5:	mov    esi,0x8a9a31b0
  40d2ea:	pop    esi
  40d2eb:	call   0xb22:0xbe0f3037
  40d2f2:	or     ch,ch
  40d2f4:	sub    edx,DWORD PTR [edx+0x57996043]
  40d2fa:	pop    ds
  40d2fb:	cmp    al,0x18
  40d2fd:	addr16 xor al,0xc0
  40d300:	fsub   DWORD PTR [eax+edi*4+0x22670dcb]
  40d307:	aaa    
  40d308:	nop
  40d309:	xchg   DWORD PTR [eax],ecx
  40d30b:	shl    DWORD PTR [esi],0x99
  40d30e:	data16 mov al,0x1c
  40d311:	(bad)  
  40d312:	loopne 0x40d347
  40d314:	jo     0x40d2ff
  40d316:	mov    eax,ds:0x484f822f
  40d31b:	in     al,dx
  40d31c:	sub    cl,0x16
  40d31f:	push   0xa93c0e24
  40d324:	fs daa 
  40d326:	in     al,dx
  40d327:	sub    dh,BYTE PTR [edi+eax*1-0xba92920]
  40d32e:	sbb    al,0x6b
  40d330:	scas   eax,DWORD PTR es:[edi]
  40d331:	loopne 0x40d2ce
  40d333:	add    ebp,esi
  40d335:	nop
  40d336:	push   esi
  40d337:	test   eax,0x80bb6499
  40d33c:	lods   eax,DWORD PTR ds:[esi]
  40d33d:	pop    ds
  40d33e:	int    0x27
  40d340:	sub    DWORD PTR [ebx+0x13d8957d],esp
  40d346:	sub    eax,0x54894d9b
  40d34b:	popf   
  40d34c:	push   cs
  40d34d:	stos   DWORD PTR es:[edi],eax
  40d34e:	cld    
  40d34f:	push   esp
  40d350:	mov    ecx,0xda71a07f
  40d355:	imul   edi,DWORD PTR [edx+0x28],0x4b
  40d359:	jnp    0x40d345
  40d35b:	retf   
  40d35c:	and    al,0x10
  40d35e:	sub    eax,0xa8d5014a
  40d363:	jb     0x40d3a1
  40d365:	sub    ebx,DWORD PTR [eax-0x5237a695]
  40d36b:	scas   al,BYTE PTR es:[edi]
  40d36c:	hlt    
  40d36d:	cmp    BYTE PTR [edi+0x23995c9],cl
  40d373:	or     ebp,0x41512e5d
  40d379:	icebp  
  40d37a:	and    BYTE PTR [ebx+esi*2-0x26813af4],ch
  40d381:	sbb    eax,0x8c35fd63
  40d386:	push   edx
  40d387:	test   bh,dh
  40d389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38a:	push   ss
  40d38b:	dec    esp
  40d38c:	loopne 0x40d33d
  40d38e:	aad    0x2c
  40d390:	retf   
  40d391:	mov    esi,0xb637e97b
  40d396:	lock adc WORD PTR [ebp-0x1a9696f5],dx
  40d39e:	cwde   
  40d39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a0:	inc    esi
  40d3a1:	mov    bl,0xe6
  40d3a3:	cmp    eax,0x368a0a12
  40d3a8:	or     al,0x64
  40d3aa:	and    ebp,esp
  40d3ac:	jecxz  0x40d3ad
  40d3ae:	or     DWORD PTR [ebp+0x229c328c],edx
  40d3b4:	dec    esi
  40d3b5:	inc    eax
  40d3b6:	cmp    al,0x2b
  40d3b8:	cmp    DWORD PTR es:[ecx+0x79],ecx
  40d3bc:	dec    esi
  40d3bd:	pop    ebp
  40d3be:	outs   dx,BYTE PTR ds:[esi]
  40d3bf:	xchg   ebp,eax
  40d3c0:	push   esp
  40d3c1:	mov    BYTE PTR [eax],dh
  40d3c3:	sub    edi,DWORD PTR [esp+edi*4]
  40d3c6:	fs cld 
  40d3c8:	les    edx,FWORD PTR [eax+0x6ba8f4bd]
  40d3ce:	dec    ebp
  40d3cf:	and    ebx,esi
  40d3d1:	and    ecx,DWORD PTR [ebx-0x28b906b5]
  40d3d7:	push   ebp
  40d3d8:	repz and BYTE PTR [ecx+0x40],ch
  40d3dc:	fld    DWORD PTR [esi]
  40d3de:	jns    0x40d368
  40d3e0:	pop    esi
  40d3e1:	dec    edx
  40d3e2:	fisubr DWORD PTR [ebx-0x5d222acc]
  40d3e8:	and    eax,0x4cdbcb0a
  40d3ed:	jbe    0x40d3bd
  40d3ef:	sub    ebx,ecx
  40d3f1:	dec    ecx
  40d3f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f3:	jns    0x40d42f
  40d3f5:	nop
  40d3f6:	test   DWORD PTR ds:0x877ddce8,eax
  40d3fc:	out    0xac,eax
  40d3fe:	(bad)  
  40d400:	inc    ecx
  40d401:	push   cs
  40d402:	jg     0x40d3fa
  40d404:	mov    ch,0xb6
  40d406:	ja     0x40d450
  40d408:	xchg   edx,eax
  40d409:	mov    eax,ds:0xc5139d8f
  40d40e:	xor    al,0x37
  40d410:	add    eax,0x3044966b
  40d415:	cmp    eax,0x429851a3
  40d41a:	loop   0x40d3fa
  40d41c:	mov    edx,0xdb8b77cc
  40d421:	and    bl,BYTE PTR [ebx+0x74]
  40d424:	std    
  40d425:	lahf   
  40d426:	out    0xd4,eax
  40d428:	push   ebp
  40d429:	sti    
  40d42a:	repnz mov bh,0xec
  40d42d:	dec    ebp
  40d42e:	sub    dh,BYTE PTR [edx-0x4bb95739]
  40d434:	stos   DWORD PTR es:[edi],eax
  40d435:	jecxz  0x40d4a8
  40d437:	sbb    ch,BYTE PTR [edi+0x9af9a40]
  40d43d:	lahf   
  40d43e:	test   dh,dh
  40d440:	mov    ds:0xa7572718,eax
  40d445:	inc    esi
  40d446:	push   ecx
  40d447:	rcr    BYTE PTR [esi+0x4d478c63],cl
  40d44d:	sbb    DWORD PTR [edx-0x79],esi
  40d450:	pop    esp
  40d451:	pop    edx
  40d452:	out    0xf4,eax
  40d454:	mov    al,0x97
  40d456:	mov    ds:0x742f9d61,al
  40d45b:	adc    eax,0xb29b327c
  40d460:	test   BYTE PTR [ebx-0x1b],ch
  40d463:	scas   eax,DWORD PTR es:[edi]
  40d464:	das    
  40d465:	ja     0x40d3e9
  40d467:	cmp    DWORD PTR [edx],esi
  40d469:	addr16 mov ebx,0x176ca5dd
  40d46f:	(bad)  
  40d470:	in     al,0xb7
  40d472:	daa    
  40d473:	adc    edx,DWORD PTR [eax-0x3b]
  40d476:	and    esi,DWORD PTR [edx+0x5f3dd4b9]
  40d47c:	and    al,0x1d
  40d47e:	mov    cl,0x99
  40d480:	imul   edi,DWORD PTR [ecx+edi*4-0x74b02323],0xffffffa6
  40d488:	out    0x72,al
  40d48a:	jl     0x40d454
  40d48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48d:	ficomp DWORD PTR [esi-0x34]
  40d490:	arpl   di,di
  40d492:	out    0x5,eax
  40d494:	call   0x575b:0x8a275b93
  40d49b:	ss call 0xb3308fac
  40d4a1:	mov    ecx,0xbc57918f
  40d4a6:	ins    BYTE PTR es:[edi],dx
  40d4a7:	jg     0x40d4f9
  40d4a9:	call   0x194bde00
  40d4ae:	mov    ecx,0x591fcb63
  40d4b3:	test   DWORD PTR [edx+0x74],eax
  40d4b6:	sub    BYTE PTR ds:0x92b5c985,dl
  40d4bc:	test   al,0x68
  40d4be:	data16 in al,dx
  40d4c0:	adc    al,0x47
  40d4c2:	jecxz  0x40d4fc
  40d4c4:	out    0x8a,al
  40d4c6:	mov    al,0x7
  40d4c8:	clc    
  40d4c9:	fisubr DWORD PTR [ebp+0x639bc650]
  40d4cf:	into   
  40d4d0:	xor    cl,BYTE PTR [eax-0x58deaa9c]
  40d4d6:	mov    ecx,0x18ad9002
  40d4db:	push   edx
  40d4dc:	arpl   WORD PTR [ecx],bx
  40d4de:	dec    ebp
  40d4df:	dec    eax
  40d4e0:	fcom   DWORD PTR [ecx+0x189a1834]
  40d4e6:	jnp    0x40d551
  40d4e8:	shr    esi,1
  40d4ea:	jne    0x40d4c6
  40d4ec:	fcomp  QWORD PTR [esp+eax*8]
  40d4ef:	cmp    edx,DWORD PTR [esi]
  40d4f1:	pushf  
  40d4f2:	push   eax
  40d4f3:	lods   eax,DWORD PTR ds:[esi]
  40d4f4:	xchg   BYTE PTR [eax],dh
  40d4f6:	pop    edx
  40d4f7:	aam    0x2b
  40d4f9:	jmp    0xfd5b:0x35f71bd4
  40d500:	(bad)  
  40d502:	pop    es
  40d503:	pop    DWORD PTR [ebx-0x37b76e18]
  40d509:	mov    bh,0xbc
  40d50b:	inc    edi
  40d50c:	rcr    DWORD PTR [edi+ebp*2-0x14],cl
  40d510:	pop    edi
  40d511:	(bad)  
  40d512:	test   ebp,0x2f4a06ef
  40d518:	loop   0x40d519
  40d51a:	mov    esp,0x7b80bef1
  40d51f:	and    bl,bh
  40d521:	xchg   edx,esi
  40d523:	test   DWORD PTR [eax-0x4f],ebx
  40d526:	int    0x54
  40d528:	pop    edx
  40d529:	jge    0x40d53c
  40d52b:	lds    esp,FWORD PTR [ebp+ebx*1+0x708d34fe]
  40d532:	repnz aas 
  40d534:	test   edi,ebx
  40d536:	aad    0xbf
  40d538:	inc    esp
  40d539:	or     al,BYTE PTR [ebx+0x1b]
  40d53c:	out    0xec,al
  40d53e:	sub    DWORD PTR [ebp+eax*8+0x7e],esi
  40d542:	pop    ss
  40d543:	jb     0x40d5c3
  40d545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d546:	inc    ecx
  40d547:	lods   eax,DWORD PTR ds:[esi]
  40d548:	and    al,BYTE PTR [edi+0x5a07d952]
  40d54e:	jno    0x40d545
  40d550:	cmp    BYTE PTR ds:0x556a6615,dh
  40d556:	test   BYTE PTR [edx],ch
  40d558:	cdq    
  40d559:	inc    esi
  40d55a:	std    
  40d55b:	gs lgs esi,FWORD PTR cs:[esi]
  40d560:	retf   
  40d561:	retf   0xe7f3
  40d564:	adc    al,0x6c
  40d566:	sti    
  40d567:	movq   mm1,mm0
  40d56a:	jnp    0x40d5d4
  40d56c:	adc    esp,ebp
  40d56e:	xchg   bl,dh
  40d570:	or     bh,dl
  40d572:	dec    ecx
  40d573:	or     bh,BYTE PTR [eax]
  40d575:	es jo  0x40d513
  40d578:	and    eax,0xa5c46f1d
  40d57d:	cmp    ebx,DWORD PTR ds:0x2d28897f
  40d583:	loopne 0x40d5a1
  40d585:	addr16 sti 
  40d587:	scas   al,BYTE PTR es:[edi]
  40d588:	scas   al,BYTE PTR es:[edi]
  40d589:	adc    ah,BYTE PTR [ebx-0x78]
  40d58c:	(bad)  
  40d58d:	clc    
  40d58e:	cdq    
  40d58f:	or     ebp,DWORD PTR [ebx-0x53761bcd]
  40d595:	add    DWORD PTR [ecx+0x6f],edx
  40d598:	scas   al,BYTE PTR es:[edi]
  40d599:	jae    0x40d585
  40d59b:	mov    ah,0x99
  40d59d:	inc    edx
  40d59e:	adc    al,0xdf
  40d5a0:	inc    ecx
  40d5a1:	or     eax,0x6c9d5555
  40d5a6:	lods   al,BYTE PTR ds:[esi]
  40d5a7:	mov    ecx,0xfb1096b1
  40d5ac:	xor    edi,DWORD PTR [ebx-0x2168e890]
  40d5b2:	add    bl,dh
  40d5b4:	fwait
  40d5b5:	call   0x7be1:0xa1a5f9de
  40d5bc:	jnp    0x40d5e5
  40d5be:	(bad)  
  40d5bf:	ds mov dh,0x9b
  40d5c2:	add    al,0x45
  40d5c4:	loope  0x40d635
  40d5c6:	and    al,0x9b
  40d5c8:	lea    eax,[edi]
  40d5ca:	stos   DWORD PTR es:[edi],eax
  40d5cb:	xchg   ecx,eax
  40d5cc:	fdiv   QWORD PTR [ecx-0x7ed5c795]
  40d5d2:	test   BYTE PTR [ecx-0x690118f2],dl
  40d5d8:	and    ah,bl
  40d5da:	inc    esi
  40d5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5dc:	fcmovnu st,st(3)
  40d5de:	cwde   
  40d5df:	dec    ebx
  40d5e0:	jbe    0x40d5b9
  40d5e2:	shr    BYTE PTR [ebx],0x34
  40d5e5:	xor    edx,edi
  40d5e7:	shl    BYTE PTR ds:0x34af01fd,1
  40d5ed:	enter  0xafd0,0xed
  40d5f1:	std    
  40d5f2:	aam    0xba
  40d5f4:	mov    BYTE PTR [edx+0x7],0x68
  40d5f8:	jne    0x40d59a
  40d5fa:	or     BYTE PTR [ecx+edi*1],cl
  40d5fd:	mov    dl,0xa
  40d5ff:	pop    ecx
  40d600:	loop   0x40d669
  40d602:	ret    0x2d26
  40d605:	div    esi
  40d607:	inc    ebx
  40d608:	adc    eax,0xf82ad722
  40d60d:	mov    al,ds:0xb48cb397
  40d612:	(bad)  
  40d613:	push   0x8f73ad9a
  40d618:	adc    DWORD PTR [ecx],esi
  40d61a:	cli    
  40d61b:	loop   0x40d5d7
  40d61d:	mov    al,ds:0xb847d171
  40d622:	test   eax,0x12b13f48
  40d627:	je     0x40d681
  40d629:	push   edx
  40d62a:	call   0xb62fdc55
  40d62f:	push   esp
  40d630:	fidiv  DWORD PTR [edx-0x20451cad]
  40d636:	and    BYTE PTR [edx],dl
  40d638:	cmp    eax,0x6c76db6e
  40d63d:	(bad)  
  40d63e:	pop    esp
  40d63f:	fsubp  st(0),st
  40d641:	outs   dx,DWORD PTR ds:[esi]
  40d642:	push   0xecb7ad25
  40d647:	pop    ds
  40d648:	xchg   esp,eax
  40d649:	push   esp
  40d64a:	mov    dl,0x9e
  40d64c:	mov    dh,0x85
  40d64e:	or     eax,0xea227174
  40d653:	aam    0x4c
  40d655:	jo     0x40d646
  40d657:	popf   
  40d658:	or     bh,BYTE PTR [esi+0x1bf5e1d5]
  40d65e:	or     dl,ch
  40d660:	fsubr  QWORD PTR [ebp+0x18fee00c]
  40d666:	pop    eax
  40d667:	popa   
  40d668:	aad    0xc1
  40d66a:	lock jns 0x40d647
  40d66d:	fcom   QWORD PTR [ecx-0x72]
  40d670:	and    al,0x2f
  40d672:	icebp  
  40d673:	fcmovne st,st(7)
  40d675:	hlt    
  40d676:	call   DWORD PTR [eax-0x9]
  40d679:	sub    ebx,DWORD PTR [eax+0x3c]
  40d67c:	push   0x564e324f
  40d681:	shl    esi,0xc8
  40d684:	inc    esp
  40d685:	hlt    
  40d686:	ror    DWORD PTR [esi+ebp*4+0x5417a349],cl
  40d68d:	jne    0x40d64e
  40d68f:	push   ebx
  40d690:	cmp    DWORD PTR [ecx],ebp
  40d692:	shl    edx,0x97
  40d695:	mov    eax,ds:0x2b61eb60
  40d69a:	or     eax,0xf72c2ebc
  40d69f:	and    DWORD PTR [eax+0x4af9003d],0x2f
  40d6a6:	xor    ah,BYTE PTR [ecx+0x73]
  40d6a9:	lahf   
  40d6aa:	call   0xffa5fe35
  40d6af:	mov    esi,0xc3b2dc9f
  40d6b4:	clc    
  40d6b5:	inc    esp
  40d6b6:	out    dx,al
  40d6b7:	(bad)  
  40d6b8:	cmp    eax,0x8b6b4d2d
  40d6bd:	lods   eax,DWORD PTR cs:[esi]
  40d6bf:	mov    bh,0xec
  40d6c1:	cdq    
  40d6c2:	sub    BYTE PTR [esp+ebx*1-0x45],bh
  40d6c6:	mov    dl,0x31
  40d6c8:	xor    eax,0xa8cfaecf
  40d6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ce:	test   BYTE PTR [esp+ecx*1+0x217c2576],bh
  40d6d5:	aas    
  40d6d6:	jno    0x40d66d
  40d6d8:	sbb    BYTE PTR [edx],ch
  40d6da:	dec    edi
  40d6db:	add    BYTE PTR [ebp+esi*1-0x2b49661],ch
  40d6e2:	mov    dh,0xa5
  40d6e4:	fwait
  40d6e5:	mov    ds:0x26f58c3,al
  40d6ea:	dec    ebx
  40d6eb:	mov    esp,0x22c450e1
  40d6f0:	mov    al,ds:0xf2a3945c
  40d6f5:	ret    0xe434
  40d6f8:	adc    eax,0x48b34672
  40d6fd:	lods   eax,DWORD PTR ds:[esi]
  40d6fe:	jp     0x40d75d
  40d700:	shl    BYTE PTR [edi-0x16],cl
  40d703:	add    al,BYTE PTR [esi-0x2c]
  40d706:	in     al,0x6
  40d708:	stos   DWORD PTR es:[edi],eax
  40d709:	icebp  
  40d70a:	fs dec esi
  40d70c:	js     0x40d70f
  40d70e:	mov    bh,0xec
  40d710:	mov    edi,0x9362008e
  40d715:	sub    eax,0x98b21441
  40d71a:	test   eax,0x8ffddf70
  40d71f:	push   esp
  40d720:	or     eax,0xc4ce7e96
  40d725:	das    
  40d726:	jp     0x40d6de
  40d728:	adc    al,0xff
  40d72a:	sti    
  40d72b:	mov    ds:0x9c885268,eax
  40d730:	(bad)  
  40d731:	je     0x40d7a0
  40d733:	fcom   DWORD PTR [esi]
  40d735:	mov    al,0x47
  40d737:	popf   
  40d738:	fld    QWORD PTR [eax+0x6530a3ca]
  40d73e:	inc    ecx
  40d73f:	call   0xa3693861
  40d744:	aas    
  40d745:	mov    ds:0x3e55fed9,eax
  40d74a:	mov    ah,0xcc
  40d74c:	aam    0x89
  40d74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74f:	add    eax,0x24505b87
  40d754:	inc    edi
  40d755:	int    0x6e
  40d757:	adc    DWORD PTR [esi-0x61],esp
  40d75a:	call   0xcb9da56c
  40d75f:	mul    DWORD PTR [ecx]
  40d761:	out    dx,eax
  40d762:	jne    0x40d74a
  40d764:	inc    ebp
  40d765:	add    bh,BYTE PTR [ecx-0x3a]
  40d768:	test   DWORD PTR [ebp-0x6c],0xbc1bb39
  40d76f:	mov    dl,0x2c
  40d771:	sub    DWORD PTR [ecx-0x69],0xffffffcd
  40d775:	stos   BYTE PTR es:[edi],al
  40d776:	dec    esi
  40d777:	xchg   edx,eax
  40d778:	push   esi
  40d779:	mov    esp,0xb7450dc5
  40d77e:	aam    0xf9
  40d780:	dec    edx
  40d781:	adc    dh,BYTE PTR [edx+0x4e]
  40d784:	pop    esi
  40d785:	mov    DWORD PTR [edx-0xb],esi
  40d788:	xor    BYTE PTR [ecx-0x49],ah
  40d78b:	rol    esi,cl
  40d78d:	pushf  
  40d78e:	hlt    
  40d78f:	add    al,0xf2
  40d791:	fdivr  st,st(4)
  40d793:	pop    edi
  40d794:	jmp    0x90b9:0x8c5b81a
  40d79b:	pop    ebx
  40d79c:	mov    BYTE PTR [ecx-0x11],al
  40d79f:	xor    bh,BYTE PTR ds:0xf9ea9187
  40d7a5:	xchg   ebp,eax
  40d7a6:	lea    edx,[ecx]
  40d7a8:	sub    ch,ah
  40d7aa:	jbe    0x40d7ce
  40d7ac:	sbb    esp,DWORD PTR [eax+0x49]
  40d7af:	inc    esp
  40d7b0:	icebp  
  40d7b1:	lods   al,BYTE PTR ds:[esi]
  40d7b2:	scas   eax,DWORD PTR es:[edi]
  40d7b3:	xchg   ebp,eax
  40d7b4:	mov    bh,0x9b
  40d7b6:	pop    eax
  40d7b7:	inc    DWORD PTR [eax-0x6515b658]
  40d7bd:	cmp    al,0x8a
  40d7bf:	addr16 repz mov ebx,0x93ec1d2f
  40d7c6:	fisttp QWORD PTR [ebx]
  40d7c8:	std    
  40d7c9:	pop    ebp
  40d7ca:	xchg   edi,eax
  40d7cb:	push   cs
  40d7cc:	(bad)  
  40d7cd:	in     al,0x88
  40d7cf:	int3   
  40d7d0:	add    BYTE PTR [eax],ch
  40d7d2:	xchg   edi,eax
  40d7d3:	mov    WORD PTR [ebp-0x69],?
  40d7d6:	cmp    dl,BYTE PTR [esi]
  40d7d8:	dec    esp
  40d7d9:	pop    esi
  40d7da:	jno    0x40d84c
  40d7dc:	mov    al,0x9d
  40d7de:	sbb    ebx,edx
  40d7e0:	mov    bh,ch
  40d7e2:	xchg   edx,eax
  40d7e3:	adc    eax,0xdffaea94
  40d7e8:	in     eax,0xb
  40d7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7eb:	dec    ebx
  40d7ec:	fimul  WORD PTR [esi+0x2ed1c3ec]
  40d7f2:	fucom  st(2)
  40d7f4:	add    DWORD PTR [edx+0x17],0xfffffff8
  40d7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f9:	fsubp  st(6),st
  40d7fb:	enter  0x51b7,0x23
  40d7ff:	test   eax,0x7c03db9b
  40d804:	sub    eax,0xed1e11cf
  40d809:	cmp    BYTE PTR [edx+0x321ea4a5],al
  40d80f:	push   0xffffffbf
  40d811:	add    eax,0x3744becb
  40d816:	xor    ah,BYTE PTR [eax-0x3e8a5e80]
  40d81c:	pop    es
  40d81d:	sub    DWORD PTR [eax+0x14],edi
  40d820:	test   DWORD PTR [ecx+0x5e5e07fc],esp
  40d826:	ins    BYTE PTR es:[edi],dx
  40d827:	jmp    0xbe4aa13c
  40d82c:	int    0x12
  40d82e:	das    
  40d82f:	lods   eax,DWORD PTR ds:[esi]
  40d830:	and    edx,0xffffffbd
  40d833:	fwait
  40d834:	dec    BYTE PTR [edi]
  40d836:	cmc    
  40d837:	or     DWORD PTR [eax-0x42],ebp
  40d83a:	xchg   edi,eax
  40d83b:	repz push eax
  40d83d:	xchg   ecx,eax
  40d83e:	es dec esp
  40d840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d841:	xor    eax,0xab26ebfb
  40d846:	(bad)  
  40d847:	call   FWORD PTR [ebp+esi*1-0x6b]
  40d84b:	and    al,cl
  40d84d:	push   ebp
  40d84e:	xchg   ecx,eax
  40d84f:	add    BYTE PTR [esp+edi*2+0x19],bh
  40d853:	push   cs
  40d854:	push   ss
  40d855:	xchg   edx,eax
  40d856:	cli    
  40d857:	mov    al,ds:0xd6e566eb
  40d85c:	ins    DWORD PTR es:[edi],dx
  40d85d:	pop    edx
  40d85e:	jp     0x40d88f
  40d860:	and    al,0xd7
  40d862:	int    0x95
  40d864:	in     eax,dx
  40d865:	(bad)  
  40d866:	retf   0x827b
  40d869:	xchg   ebx,eax
  40d86a:	jb     0x40d845
  40d86c:	push   edx
  40d86d:	out    dx,al
  40d86e:	sub    cl,dl
  40d870:	mov    bl,0xe6
  40d872:	sbb    ah,BYTE PTR [ebx+ecx*2]
  40d875:	fs repz sbb edx,ebp
  40d879:	les    eax,FWORD PTR [ebp+0x25dffbd0]
  40d87f:	xor    ch,BYTE PTR [eax+0x28]
  40d882:	out    0x32,al
  40d884:	push   edx
  40d885:	sahf   
  40d886:	lahf   
  40d887:	ss addr16 pop ecx
  40d88a:	loopne 0x40d85a
  40d88c:	aam    0x64
  40d88e:	add    eax,0xa959e1eb
  40d893:	clc    
  40d894:	xchg   BYTE PTR [ebx-0x117cad52],bh
  40d89a:	aaa    
  40d89b:	(bad)  
  40d89c:	push   ebx
  40d89d:	aam    0x65
  40d89f:	sbb    al,BYTE PTR [eax+eiz*2-0x13e79a59]
  40d8a6:	or     BYTE PTR [ebx+0x4065948d],0x87
  40d8ad:	mov    esi,0x5d43b2ac
  40d8b2:	jbe    0x40d8ea
  40d8b4:	or     eax,0xfcbb90ea
  40d8b9:	sbb    dl,dl
  40d8bb:	(bad)  
  40d8bd:	addr16 dec eax
  40d8bf:	into   
  40d8c0:	loop   0x40d92c
  40d8c2:	daa    
  40d8c3:	jbe    0x40d8d2
  40d8c5:	or     BYTE PTR [edx-0x3e],0x58
  40d8c9:	frstor [edi+0x2a95a230]
  40d8cf:	pop    ecx
  40d8d0:	das    
  40d8d1:	pop    edx
  40d8d2:	mov    ecx,0x996470a8
  40d8d7:	add    ebp,edi
  40d8d9:	stc    
  40d8da:	or     edi,ebx
  40d8dc:	int    0x17
  40d8de:	jl     0x40d91f
  40d8e0:	sub    ebp,DWORD PTR [edi-0x23]
  40d8e3:	mov    DWORD PTR [eax+0x25ea00bb],ebx
  40d8e9:	inc    edx
  40d8ea:	mov    WORD PTR [edi-0x66],es
  40d8ed:	lahf   
  40d8ee:	mov    ecx,0x8cc27364
  40d8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f4:	mov    al,ds:0xd582f26a
  40d8f9:	call   0x4b3d64d5
  40d8fe:	push   eax
  40d8ff:	push   ecx
  40d900:	popf   
  40d901:	sbb    DWORD PTR [eax+0x17aec812],ebp
  40d907:	mov    esp,0x31b72c7d
  40d90c:	pop    ds
  40d90d:	jns    0x40d93b
  40d90f:	(bad)  
  40d910:	ror    DWORD PTR [ecx],1
  40d912:	bnd ret 
  40d914:	outs   dx,DWORD PTR ds:[esi]
  40d915:	dec    edx
  40d916:	sub    BYTE PTR [ebp-0x5],dl
  40d919:	sti    
  40d91a:	mov    WORD PTR es:[ecx+0x20706f11],ss
  40d921:	or     al,0x66
  40d923:	jae    0x40d96f
  40d925:	call   0x46fbe822
  40d92a:	out    0x7b,al
  40d92c:	xchg   eax,ecx
  40d92e:	adc    DWORD PTR ds:0x72d3a35b,edx
  40d934:	in     eax,dx
  40d935:	mov    ch,0x12
  40d937:	loop   0x40d932
  40d939:	xchg   ebx,eax
  40d93a:	(bad)  
  40d93b:	js     0x40d90a
  40d93d:	adc    dh,BYTE PTR [edi]
  40d93f:	or     eax,0xa4d45b38
  40d944:	xor    ebp,ebp
  40d946:	jns    0x40d97a
  40d948:	mov    ds,ebp
  40d94a:	sbb    al,0xad
  40d94c:	mov    edx,edi
  40d94e:	pop    esi
  40d94f:	xor    DWORD PTR [esi+0x5c],edx
  40d952:	pop    esp
  40d953:	sub    BYTE PTR [ebx-0x3eed0682],ah
  40d959:	dec    edi
  40d95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95b:	and    cl,bh
  40d95d:	gs mov ebp,0x8ab5b49c
  40d963:	call   0x9d06:0x5ef1c033
  40d96a:	call   0x1802:0xb86fa1
  40d971:	push   ebp
  40d972:	pop    ebx
  40d973:	arpl   WORD PTR [ebp-0xa],bx
  40d976:	adc    BYTE PTR [ebx+0x28ab1229],bl
  40d97c:	xchg   BYTE PTR [edi+0x7e],bh
  40d97f:	or     esp,eax
  40d981:	out    dx,al
  40d982:	push   ds
  40d983:	inc    edx
  40d984:	gs fadd st(3),st
  40d987:	dec    DWORD PTR [ebx+0x62542dc9]
  40d98d:	hlt    
  40d98e:	clc    
  40d98f:	mov    esp,0xb208f527
  40d994:	mov    bh,0xe3
  40d996:	shl    DWORD PTR [ebp+0x16],0x78
  40d99a:	adc    al,0xc4
  40d99c:	mov    ds:0x6c1f772d,al
  40d9a1:	mul    DWORD PTR [ebx-0xe]
  40d9a4:	lods   eax,DWORD PTR ds:[esi]
  40d9a5:	lods   al,BYTE PTR ds:[esi]
  40d9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9a7:	push   ebx
  40d9a8:	cld    
  40d9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9aa:	pop    es
  40d9ab:	bnd jnp 0x40d947
  40d9ae:	add    BYTE PTR [edi+0x59],bl
  40d9b1:	pop    esp
  40d9b2:	xchg   ebx,edi
  40d9b4:	sub    dl,BYTE PTR [edx+0x5d593b2f]
  40d9ba:	lock scas al,BYTE PTR es:[edi]
  40d9bc:	push   eax
  40d9bd:	mov    dl,0x4a
  40d9bf:	mov    esp,0x308d57ae
  40d9c4:	xchg   dh,al
  40d9c6:	dec    eax
  40d9c7:	inc    ecx
  40d9c8:	or     eax,edi
  40d9ca:	jl     0x40da4a
  40d9cc:	cli    
  40d9cd:	mov    al,0x5
  40d9cf:	cdq    
  40d9d0:	inc    eax
  40d9d1:	xchg   esi,eax
  40d9d2:	push   edx
  40d9d3:	xchg   BYTE PTR [ebx],ah
  40d9d5:	nop
  40d9d6:	sar    BYTE PTR ds:0xcb255208,cl
  40d9dc:	xchg   ecx,eax
  40d9dd:	lea    edi,[edi]
  40d9df:	popf   
  40d9e0:	sub    dl,dh
  40d9e2:	sahf   
  40d9e3:	loope  0x40d9a3
  40d9e5:	jae    0x40da44
  40d9e7:	xor    DWORD PTR [edx+0x5f47f6f1],edi
  40d9ed:	push   esi
  40d9ee:	adc    al,0xb9
  40d9f0:	jmp    0xa899:0xb8d442d4
  40d9f7:	lea    ebp,[ecx-0x35]
  40d9fa:	int3   
  40d9fb:	and    bl,cl
  40d9fd:	ror    DWORD PTR [edi-0x37],cl
  40da00:	fnstenv [edx+eax*4+0x56a4be09]
  40da07:	add    BYTE PTR [ecx],bh
  40da09:	lds    edx,FWORD PTR [ebx]
  40da0b:	cmc    
  40da0c:	or     BYTE PTR [ebx-0x70a5eb37],al
  40da12:	jb     0x40d9fc
  40da14:	and    ah,BYTE PTR [eax+0x5f]
  40da17:	enter  0x3180,0x1e
  40da1b:	mov    WORD PTR [ecx],es
  40da1d:	test   BYTE PTR [edx-0x5a],bh
  40da20:	retf   
  40da21:	and    al,0x89
  40da23:	mov    eax,ds:0x817f47c3
  40da28:	(bad)  
  40da29:	mov    ebx,0xaf7eea82
  40da2e:	push   edx
  40da2f:	or     DWORD PTR [eax+0x66],esi
  40da32:	jmp    0x40da71
  40da34:	stos   DWORD PTR es:[edi],eax
  40da35:	push   edi
  40da36:	mov    bh,BYTE PTR [ecx+0x3e]
  40da39:	fs ins BYTE PTR es:[edi],dx
  40da3b:	ret    
  40da3c:	in     eax,0x94
  40da3e:	lds    ecx,FWORD PTR [edi+edi*4-0x73]
  40da42:	pop    esp
  40da43:	mov    ch,0x99
  40da45:	fldenv [esi+0x3e]
  40da48:	xchg   ecx,eax
  40da49:	and    eax,0x1cc02f47
  40da4e:	jno    0x40da05
  40da50:	push   DWORD PTR [eax-0x27]
  40da53:	rol    BYTE PTR [eax],cl
  40da55:	sbb    al,0xb8
  40da57:	into   
  40da58:	xchg   ebx,eax
  40da59:	mov    ch,0x4c
  40da5b:	mov    ch,0x9f
  40da5d:	sub    ch,BYTE PTR [ebp+0x4e3f4dbd]
  40da63:	icebp  
  40da64:	push   edx
  40da65:	sbb    al,0x81
  40da67:	(bad)  
  40da68:	dec    esp
  40da69:	push   0xffffffc2
  40da6b:	ja     0x40da98
  40da6d:	mov    dh,0x12
  40da6f:	data16 clc 
  40da71:	jno    0x40dad9
  40da73:	mov    edi,0xe2c045c9
  40da78:	fidiv  WORD PTR [ebx-0x4931507b]
  40da7e:	cmp    al,0x5e
  40da80:	call   0x4954a8da
  40da85:	stos   DWORD PTR es:[edi],eax
  40da86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da87:	dec    edi
  40da88:	imul   ecx,ebx,0xffffffd3
  40da8b:	push   0x91cd0913
  40da90:	je     0x40da72
  40da92:	movaps xmm1,xmm6
  40da95:	add    BYTE PTR [eax+0x336f51b0],0xf3
  40da9c:	or     bl,BYTE PTR [ebx]
  40da9e:	addr16 hlt 
  40daa0:	pcmpgtw mm6,QWORD PTR [eax-0x5e5a58d9]
  40daa7:	mov    bl,0x21
  40daa9:	sbb    al,0xeb
  40daab:	xchg   esi,eax
  40daac:	xchg   DWORD PTR [edi-0x6242a8cd],ebx
  40dab2:	loope  0x40da6e
  40dab4:	out    dx,eax
  40dab5:	inc    ecx
  40dab6:	mov    BYTE PTR [edx+ebx*2+0x6a],bl
  40daba:	mov    edx,0xcdced632
  40dabf:	adc    eax,0x3c47bc5a
  40dac4:	xchg   ebx,eax
  40dac5:	add    al,0xcf
  40dac7:	cmp    bl,BYTE PTR [edx+edx*8]
  40daca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dacb:	jmp    0x40da83
  40dacd:	push   ebx
  40dace:	cmc    
  40dacf:	adc    dh,bl
  40dad1:	shl    BYTE PTR [edi+0x36800f04],1
  40dad7:	mov    dl,0x85
  40dad9:	fdiv   DWORD PTR [esi+eiz*4-0x42b05620]
  40dae0:	in     eax,dx
  40dae1:	push   ecx
  40dae2:	(bad)  
  40dae3:	(bad)  
  40dae4:	adc    dh,ah
  40dae6:	stos   DWORD PTR es:[edi],eax
  40dae7:	cld    
  40dae8:	push   0xffffff99
  40daea:	test   BYTE PTR [ecx+0x10],bh
  40daed:	mov    ah,0xbd
  40daef:	xchg   BYTE PTR [ebp-0x665f63f6],cl
  40daf5:	push   dx
  40daf7:	pop    esp
  40daf8:	aaa    
  40daf9:	adc    BYTE PTR [ebp+0x5adb2db8],al
  40daff:	gs in  eax,dx
  40db01:	scas   eax,DWORD PTR es:[edi]
  40db02:	sbb    edi,DWORD PTR [eax+0x12]
  40db05:	xor    dh,BYTE PTR [edx-0x5b789e08]
  40db0b:	mov    ebx,eax
  40db0d:	cmp    BYTE PTR [ecx-0xc],bl
  40db10:	adc    edx,edx
  40db12:	fwait
  40db13:	mov    bh,0xb7
  40db15:	xlat   BYTE PTR ds:[ebx]
  40db16:	inc    edx
  40db17:	adc    al,0xc3
  40db19:	and    DWORD PTR [esi+0x71],ebx
  40db1c:	inc    di
  40db1e:	sbb    dl,BYTE PTR [esi+0x6a]
  40db21:	add    esi,DWORD PTR [esp+ebx*4-0x24]
  40db25:	sbb    al,0xc
  40db27:	fidiv  WORD PTR ds:0xc717d437
  40db2d:	in     eax,dx
  40db2e:	sub    eax,DWORD PTR [edx+0x4f]
  40db31:	bound  esi,QWORD PTR [ecx-0x1b]
  40db34:	fidivr DWORD PTR [ebx+ecx*1+0x6]
  40db38:	mov    dh,0x2
  40db3a:	push   0x892e2480
  40db3f:	mov    DWORD PTR [ebx],eax
  40db41:	scas   al,BYTE PTR es:[edi]
  40db42:	mov    eax,0xf935d130
  40db47:	mov    ah,0xa8
  40db49:	cmp    edi,DWORD PTR [eax+0x6]
  40db4c:	out    dx,al
  40db4d:	xchg   dl,ch
  40db4f:	dec    edx
  40db50:	cmc    
  40db51:	(bad)  
  40db53:	stc    
  40db54:	sub    ch,BYTE PTR [edi+0x4a4ae47b]
  40db5a:	mov    ecx,0xbdf85892
  40db5f:	mov    fs,eax
  40db61:	jge    0x40db05
  40db63:	xchg   esp,eax
  40db64:	sub    al,0xc9
  40db66:	fimul  WORD PTR [edi+0x3d]
  40db69:	sub    dl,BYTE PTR [edx+0x4df96872]
  40db6f:	div    DWORD PTR [edx+0x74955676]
  40db75:	(bad)  
  40db76:	jmp    DWORD PTR ds:0xed397699
  40db7c:	shr    BYTE PTR [ebp+0x7637769],cl
  40db82:	aam    0x52
  40db84:	lahf   
  40db85:	or     BYTE PTR [edx],bh
  40db87:	fimul  WORD PTR [eax-0x15a1739c]
  40db8d:	nop
  40db8e:	pop    ss
  40db8f:	mov    ah,0xa5
  40db91:	mov    dh,0xf
  40db93:	mov    edx,0xe2c2ed49
  40db98:	mov    eax,DWORD PTR [esp+edi*1]
  40db9b:	dec    edi
  40db9c:	fisttp DWORD PTR [ebx-0x63]
  40db9f:	shr    BYTE PTR [ebx+ecx*1-0x513a06b7],0x18
  40dba7:	in     eax,0x98
  40dba9:	or     BYTE PTR [ebp+0x5ae4b1a7],ah
  40dbaf:	in     eax,0x67
  40dbb1:	or     ecx,DWORD PTR cs:[edi+0x7bcae4fa]
  40dbb8:	cmp    ch,bl
  40dbba:	sub    DWORD PTR [ecx-0x717d5f65],esp
  40dbc0:	mov    eax,0x82c984b6
  40dbc5:	ficom  DWORD PTR [edx]
  40dbc7:	or     ebx,0xffffff96
  40dbca:	inc    ebp
  40dbcb:	fisub  DWORD PTR [esi+0x57]
  40dbce:	das    
  40dbcf:	call   0x6402:0xd344c5ae
  40dbd6:	xchg   BYTE PTR [eax],ah
  40dbd8:	pushf  
  40dbd9:	jnp    0x40db9c
  40dbdb:	xor    al,0x50
  40dbdd:	stc    
  40dbde:	jnp    0x40dc4d
  40dbe0:	and    al,dl
  40dbe2:	inc    ecx
  40dbe3:	stos   DWORD PTR es:[edi],eax
  40dbe4:	pop    eax
  40dbe5:	out    0xb2,al
  40dbe7:	jo     0x40db8d
  40dbe9:	inc    ebp
  40dbea:	or     edi,DWORD PTR [esi-0x4ae51023]
  40dbf0:	and    bh,dl
  40dbf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf3:	popf   
  40dbf4:	pusha  
  40dbf5:	in     eax,dx
  40dbf6:	and    ah,BYTE PTR [ecx]
  40dbf8:	jne    0x40dc4a
  40dbfa:	dec    ebp
  40dbfb:	setns  ch
  40dbfe:	adc    ebx,esp
  40dc00:	mov    edi,0x50785d06
  40dc05:	les    esp,FWORD PTR [esi+0x60790aa]
  40dc0b:	aaa    
  40dc0c:	jl     0x40dbb0
  40dc0e:	test   al,0xe
  40dc10:	int3   
  40dc11:	test   bl,cl
  40dc13:	pop    ecx
  40dc14:	xor    eax,0xfea17b66
  40dc19:	jne    0x40dc6e
  40dc1b:	jmp    0x4019:0x3e4aac66
  40dc22:	mov    ch,ah
  40dc24:	pop    ss
  40dc25:	test   BYTE PTR [ebp+0x3f],dh
  40dc28:	stc    
  40dc29:	cmp    edx,DWORD PTR [ebp+0x5928a3db]
  40dc2f:	xchg   esp,eax
  40dc30:	sub    DWORD PTR [eax-0x54317b0e],ebx
  40dc36:	dec    edx
  40dc37:	(bad)  
  40dc38:	and    al,0xa6
  40dc3a:	or     BYTE PTR [ebp+0x772a2c49],dl
  40dc40:	mov    ah,0x2d
  40dc42:	fimul  WORD PTR [edi]
  40dc44:	mov    bh,0xb6
  40dc46:	call   0xc378:0x650cd45a
  40dc4d:	push   ebp
  40dc4e:	mov    esi,0xdf6124b0
  40dc53:	dec    eax
  40dc54:	outs   dx,DWORD PTR ds:[esi]
  40dc55:	in     al,0xe2
  40dc57:	jo     0x40dbe1
  40dc59:	push   edx
  40dc5a:	jnp    0x40dc7e
  40dc5c:	aaa    
  40dc5d:	rcl    DWORD PTR [eax-0x69],cl
  40dc60:	out    0x82,eax
  40dc62:	dec    ecx
  40dc63:	dec    ebx
  40dc64:	pop    ds
  40dc65:	outs   dx,BYTE PTR ds:[esi]
  40dc66:	xchg   esp,eax
  40dc67:	ss inc edi
  40dc69:	or     eax,0xc75d4c48
  40dc6e:	mov    bh,0xc3
  40dc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc71:	adc    edx,ebp
  40dc73:	hlt    
  40dc74:	pop    esi
  40dc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc76:	rol    BYTE PTR [ecx-0x64f7073d],cl
  40dc7c:	adc    al,0xa0
  40dc7e:	imul   esi,DWORD PTR [eax+0x6b8e7eaa],0x1d
  40dc85:	cmp    eax,0x8b338b13
  40dc8a:	push   ebx
  40dc8b:	div    DWORD PTR [esi]
  40dc8d:	xor    eax,0xc982bfbd
  40dc92:	sub    DWORD PTR [edx],esp
  40dc94:	cwde   
  40dc95:	mov    BYTE PTR [edx-0x31],dh
  40dc98:	mov    cl,ch
  40dc9a:	pop    ds
  40dc9b:	sar    BYTE PTR [eax+0x53ffc068],0xe6
  40dca2:	sahf   
  40dca3:	mov    dh,0x87
  40dca5:	aam    0xd0
  40dca7:	pusha  
  40dca8:	(bad)  
  40dca9:	or     eax,0x57639bad
  40dcae:	push   ebp
  40dcaf:	xor    al,0x3d
  40dcb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb2:	jle    0x40dceb
  40dcb4:	idiv   ebx
  40dcb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb7:	mov    esi,0xb5bfba4e
  40dcbc:	mov    ebx,0x93bccb08
  40dcc1:	mov    DWORD PTR [edi-0x41a0eb18],0x8df80d69
  40dccb:	pushf  
  40dccc:	mov    dl,0x6e
  40dcce:	in     eax,dx
  40dccf:	xor    dl,dh
  40dcd1:	pop    ds
  40dcd2:	pop    ecx
  40dcd3:	ins    DWORD PTR es:[edi],dx
  40dcd4:	sbb    edx,0xffffffdc
  40dcd7:	ror    BYTE PTR [ecx+esi*2],0x6b
  40dcdb:	jmp    0x40dce7
  40dcdd:	mov    ebx,ss
  40dcdf:	outs   dx,BYTE PTR ds:[esi]
  40dce0:	add    DWORD PTR cs:[ebx-0x74c90f83],ebp
  40dce7:	mov    al,ds:0xdc4b2882
  40dcec:	push   ecx
  40dced:	or     bl,bh
  40dcef:	jl     0x40dce2
  40dcf1:	xor    bh,ch
  40dcf3:	int3   
  40dcf4:	nop
  40dcf5:	mov    BYTE PTR [edi+0x6e],bh
  40dcf8:	cmc    
  40dcf9:	and    eax,0x748a8205
  40dcfe:	shr    DWORD PTR [edi-0x39],0x2d
  40dd02:	imul   eax,DWORD PTR [esi],0x2dbe4408
  40dd08:	pop    eax
  40dd09:	test   DWORD PTR [eax+0xb],edx
  40dd0c:	add    dl,dh
  40dd0e:	mov    al,0xd4
  40dd10:	(bad)  
  40dd11:	(bad)  [edi+0x6ae43a9f]
  40dd17:	mov    ds:0x4630ca00,eax
  40dd1c:	stos   DWORD PTR es:[edi],eax
  40dd1d:	mov    al,ds:0xfc27f4ef
  40dd22:	icebp  
  40dd23:	push   0xfffffff9
  40dd25:	jg     0x40dd36
  40dd27:	pushf  
  40dd28:	or     DWORD PTR [ebp+ecx*1+0x68],ebp
  40dd2c:	xchg   esi,eax
  40dd2d:	shl    BYTE PTR [edi],1
  40dd2f:	push   edx
  40dd30:	fsubr  QWORD PTR [edi-0x1b3e3939]
  40dd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd37:	mov    eax,0x5209925b
  40dd3c:	push   edi
  40dd3d:	or     edx,edx
  40dd3f:	jne    0x40dd3c
  40dd41:	cwde   
  40dd42:	mov    ebp,0xdcae81b1
  40dd47:	or     al,0xbb
  40dd49:	popa   
  40dd4a:	clc    
  40dd4b:	lock pop ss
  40dd4d:	cdq    
  40dd4e:	push   cs
  40dd4f:	xor    edi,DWORD PTR [ebx+0x2e]
  40dd52:	jmp    DWORD PTR [edi+0x3]
  40dd55:	add    al,0x68
  40dd57:	dec    esi
  40dd58:	js     0x40dd32
  40dd5a:	mov    edi,0x613457fb
  40dd5f:	loopne 0x40dcf2
  40dd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd62:	inc    ecx
  40dd63:	jle    0x40dd92
  40dd65:	call   0xa381d4ca
  40dd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6b:	sub    edi,DWORD PTR [edi]
  40dd6d:	jge    0x40dd85
  40dd6f:	and    al,0xe8
  40dd71:	fsub   st,st(4)
  40dd73:	jbe    0x40dd3a
  40dd75:	xchg   ecx,eax
  40dd76:	cmp    DWORD PTR [edi-0xb9d5592],ecx
  40dd7c:	cs fsubr st,st(6)
  40dd7f:	jl     0x40dd24
  40dd81:	adc    al,al
  40dd83:	call   FWORD PTR [ebx-0x7f]
  40dd86:	(bad)  
  40dd88:	(bad)
  40dd8d:	sar    BYTE PTR [edx],1
  40dd8f:	pop    edi
  40dd90:	cmp    edx,DWORD PTR [esi+0x5]
  40dd93:	xor    BYTE PTR [ecx-0x28],0x4a
  40dd97:	cli    
  40dd98:	dec    esp
  40dd99:	xchg   edx,eax
  40dd9a:	add    edi,esp
  40dd9c:	addr16 xchg ebx,eax
  40dd9e:	dec    esi
  40dd9f:	arpl   WORD PTR [eax+0x3f],dx
  40dda2:	call   0x55aa:0x3cf90c56
  40dda9:	push   cs
  40ddaa:	or     DWORD PTR [ebx],ebp
  40ddac:	xchg   esp,eax
  40ddad:	(bad)  
  40ddae:	(bad)  
  40ddaf:	jb     0x40dd51
  40ddb1:	cmc    
  40ddb2:	lahf   
  40ddb3:	fimul  WORD PTR [ebx]
  40ddb5:	js     0x40dd4b
  40ddb7:	jmp    0x6649:0x734e2413
  40ddbe:	outs   dx,BYTE PTR ds:[esi]
  40ddbf:	inc    ecx
  40ddc0:	sub    ah,ch
  40ddc2:	repz mov ah,0x84
  40ddc5:	and    BYTE PTR [edi+esi*4],0x59
  40ddc9:	jb     0x40dd74
  40ddcb:	retf   
  40ddcc:	mov    ?,WORD PTR [ebx+0x68]
  40ddcf:	mov    ch,0xe3
  40ddd1:	push   ds
  40ddd2:	jo     0x40ddf9
  40ddd4:	cmp    eax,ebp
  40ddd6:	shl    ecx,cl
  40ddd8:	add    ebp,DWORD PTR [esi-0x2b96cdb2]
  40ddde:	repnz inc esi
  40dde0:	sub    dh,cl
  40dde2:	dec    esi
  40dde3:	pop    ebp
  40dde4:	dec    ebx
  40dde5:	test   BYTE PTR [eax],ch
  40dde7:	cmp    dl,0xd5
  40ddea:	cmp    al,0xa1
  40ddec:	push   eax
  40dded:	shl    DWORD PTR [ebx],0x24
  40ddf0:	clc    
  40ddf1:	xor    DWORD PTR [ebx],0x60
  40ddf4:	call   0xd986:0x8f0d1bb0
  40ddfb:	jecxz  0x40de6c
  40ddfd:	in     eax,0xe8
  40ddff:	mov    bl,0x93
  40de01:	jo     0x40de7b
  40de03:	pop    ebx
  40de04:	mov    ds:0x6047ceef,eax
  40de09:	mov    DWORD PTR [ebx+edx*1],edi
  40de0c:	rcr    DWORD PTR gs:[ecx+0x72],0x8f
  40de11:	fnstsw WORD PTR [ebx+0x2ff311e8]
  40de17:	int    0x9a
  40de19:	bnd jne 0x40de92
  40de1c:	push   0xffffffed
  40de1e:	jne    0x40de7a
  40de20:	cs inc eax
  40de22:	mov    edx,0x98b5ffc0
  40de27:	pop    edx
  40de28:	bound  esi,QWORD PTR [esi+0x78]
  40de2b:	aas    
  40de2c:	push   ds
  40de2d:	(bad)  
  40de2e:	jl     0x40ddf7
  40de30:	ins    DWORD PTR es:[edi],dx
  40de31:	mov    esi,0x40fe9f4c
  40de36:	pusha  
  40de37:	loope  0x40de3d
  40de39:	popa   
  40de3a:	inc    edi
  40de3b:	rol    DWORD PTR [esi+0x45f1f079],0x39
  40de42:	or     ecx,edx
  40de44:	dec    esi
  40de45:	sub    eax,0x94d291f4
  40de4a:	test   al,0xba
  40de4c:	push   ds
  40de4d:	pop    ebx
  40de4e:	je     0x40de72
  40de50:	test   BYTE PTR ds:0x935e6be9,0xb4
  40de57:	jecxz  0x40ddf3
  40de59:	in     eax,dx
  40de5a:	mov    ch,0x4a
  40de5c:	rol    BYTE PTR [ebx+0xc59c58d],cl
  40de62:	adc    ch,BYTE PTR ds:0xca43edf2
  40de68:	sar    BYTE PTR [ecx],1
  40de6a:	stos   DWORD PTR es:[edi],eax
  40de6b:	dec    ecx
  40de6c:	leave  
  40de6d:	adc    eax,0xc3089ac9
  40de72:	(bad)  
  40de73:	xchg   ecx,eax
  40de74:	add    bh,BYTE PTR [edi-0x6dbaec4f]
  40de7a:	arpl   WORD PTR [edx+0x41],bx
  40de7d:	xor    BYTE PTR [esi+0x20d59c79],al
  40de83:	ss cmp DWORD PTR ds:[ebp+0xd],esi
  40de88:	stos   DWORD PTR es:[edi],eax
  40de89:	(bad)  
  40de8a:	pop    esi
  40de8b:	addr16 (bad) 
  40de8d:	loopne 0x40de81
  40de8f:	push   ebx
  40de90:	and    DWORD PTR [edi],edi
  40de92:	jmp    0xbc81cca8
  40de97:	hlt    
  40de98:	bound  ecx,QWORD PTR [eax-0x80]
  40de9b:	inc    ecx
  40de9c:	in     al,0x63
  40de9e:	cmp    eax,0xf28eb58c
  40dea3:	dec    edi
  40dea4:	or     BYTE PTR [edi+0x2f8f1a9a],bh
  40deaa:	or     DWORD PTR [ecx+eax*8],eax
  40dead:	mov    al,ds:0xc88e945c
  40deb2:	mov    ebx,0x34f4dca2
  40deb7:	jge    0x40de6d
  40deb9:	pop    edx
  40deba:	icebp  
  40debb:	test   al,0x6f
  40debd:	inc    esi
  40debe:	ror    esp,1
  40dec0:	shl    BYTE PTR [eax],0xb6
  40dec3:	test   eax,0xd3f365c9
  40dec8:	push   edi
  40dec9:	sub    edx,eax
  40decb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40decc:	lods   eax,DWORD PTR ds:[esi]
  40decd:	mov    dh,0x67
  40decf:	lock stos DWORD PTR es:[edi],eax
  40ded1:	xor    BYTE PTR [ecx+0x72],dh
  40ded4:	pop    eax
  40ded5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded6:	loop   0x40df22
  40ded8:	cmp    BYTE PTR [edi],bl
  40deda:	mov    bh,0xab
  40dedc:	adc    dh,dh
  40dede:	xchg   ebp,eax
  40dedf:	fisttp QWORD PTR [edx-0x268a1dfd]
  40dee5:	xchg   ebp,eax
  40dee6:	repz xor dh,BYTE PTR [edi+ebp*1-0x6d]
  40deeb:	push   ebp
  40deec:	inc    eax
  40deed:	enter  0xe223,0x5e
  40def1:	jmp    0x40df2c
  40def3:	outs   dx,DWORD PTR ds:[esi]
  40def4:	jno    0x40de89
  40def6:	push   ebp
  40def7:	or     cl,BYTE PTR [ebp+edi*2-0x86bc47c]
  40defe:	dec    ecx
  40deff:	call   0xd932:0x12b5a1cd
  40df06:	stc    
  40df07:	enter  0x6261,0xff
  40df0b:	dec    esp
  40df0c:	rol    BYTE PTR [esi-0x53],1
  40df0f:	push   edx
  40df10:	sbb    eax,0x58601d60
  40df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df16:	shl    DWORD PTR [ebx+0x46],0xd6
  40df1a:	mov    eax,ds:0x7284f966
  40df1f:	push   eax
  40df20:	imul   ebp,DWORD PTR [ebp-0x404a8173],0xffffffcd
  40df27:	fadd   DWORD PTR [ebp-0x11]
  40df2a:	fidiv  DWORD PTR ss:[edx+0x442ffa4d]
  40df31:	mov    edx,0x87b73315
  40df36:	psllw  mm5,mm1
  40df39:	(bad)  
  40df3a:	dec    edi
  40df3b:	pop    esi
  40df3c:	(bad)  
  40df3d:	jecxz  0x40df40
  40df3f:	and    al,0x55
  40df41:	mov    ebx,0xe07663e
  40df46:	push   ds
  40df47:	mov    bh,0x28
  40df49:	add    bh,dl
  40df4b:	mov    eax,eax
  40df4d:	push   eax
  40df4e:	inc    esi
  40df4f:	cdq    
  40df50:	in     eax,dx
  40df51:	jmp    0xfeb11551
  40df56:	stos   BYTE PTR es:[edi],al
  40df57:	outs   dx,BYTE PTR ds:[esi]
  40df58:	je     0x40dfcc
  40df5a:	pop    eax
  40df5b:	cli    
  40df5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5d:	cdq    
  40df5e:	stos   DWORD PTR es:[edi],eax
  40df5f:	enter  0xac82,0x4d
  40df63:	popa   
  40df64:	jo     0x40df01
  40df66:	adc    dl,BYTE PTR [edx]
  40df68:	repz rcl WORD PTR [edx+ebx*1-0x76],1
  40df6e:	fldcw  WORD PTR ss:[ecx-0x4da90f7f]
  40df75:	inc    edi
  40df76:	and    al,0x46
  40df78:	inc    esp
  40df79:	retf   
  40df7a:	cli    
  40df7b:	or     eax,0xdc5854dd
  40df80:	loope  0x40df28
  40df82:	in     al,dx
  40df83:	push   eax
  40df84:	test   al,0x48
  40df86:	add    ecx,DWORD PTR [esi-0xa99b0d]
  40df8c:	test   esp,eax
  40df8e:	jle    0x40df8d
  40df90:	xlat   BYTE PTR ds:[ebx]
  40df91:	dec    BYTE PTR [edx-0x1e]
  40df94:	test   BYTE PTR [ecx],ah
  40df96:	mov    WORD PTR [esi-0x722c2df0],es
  40df9c:	dec    ecx
  40df9d:	inc    ebx
  40df9e:	mov    ebx,0x2838bbf6
  40dfa3:	mov    edi,0x7f53200b
  40dfa8:	sub    BYTE PTR [ebp-0x66ab8502],0x73
  40dfaf:	or     edx,edi
  40dfb1:	jo     0x40dfe5
  40dfb3:	or     DWORD PTR [ebx],0x62
  40dfb6:	imul   edx,edi,0x79
  40dfb9:	out    dx,eax
  40dfba:	mov    esi,0x86dc7ebc
  40dfbf:	leave  
  40dfc0:	dec    ebp
  40dfc1:	jge    0x40dfdb
  40dfc3:	xchg   ebp,eax
  40dfc4:	fs pop ds
  40dfc6:	lahf   
  40dfc7:	add    bh,bh
  40dfc9:	jmp    0x40df8a
  40dfcb:	icebp  
  40dfcc:	int3   
  40dfcd:	push   ds
  40dfce:	sbb    eax,DWORD PTR [eax+0x1ba86237]
  40dfd4:	jno    0x40e049
  40dfd6:	sbb    al,0x90
  40dfd8:	mov    ecx,0x4855a60e
  40dfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfde:	jne    0x40df85
  40dfe0:	bsf    edx,DWORD PTR [edi+0x49677c83]
  40dfe7:	das    
  40dfe8:	mov    WORD PTR [ecx],es
  40dfea:	jb     0x40dfe7
  40dfec:	ins    BYTE PTR es:[edi],dx
  40dfed:	lods   al,BYTE PTR ds:[esi]
  40dfee:	in     eax,0x74
  40dff0:	shr    edx,1
  40dff2:	push   ds
  40dff3:	popa   
  40dff4:	pop    esi
  40dff5:	jo     0x40dfc8
  40dff7:	adc    DWORD PTR [edi],edi
  40dff9:	std    
  40dffa:	mov    edx,0xf5777b73
  40dfff:	cmp    ah,bh
  40e001:	mov    dh,BYTE PTR [edx+0x503abcfd]
  40e007:	fwait
  40e008:	mov    cl,0x89
  40e00a:	inc    eax
  40e00b:	mov    bh,0x66
  40e00d:	pop    ebx
  40e00e:	mov    bl,0x5d
  40e010:	cmp    cl,BYTE PTR [esi+ebp*8-0x17]
  40e014:	mov    ch,0x53
  40e016:	xchg   esi,eax
  40e017:	fistp  WORD PTR [eax+0x52]
  40e01a:	bound  ecx,QWORD PTR [ebx]
  40e01c:	sub    DWORD PTR [ebp+0x514d0385],ecx
  40e022:	jmp    0xda678592
  40e027:	sbb    eax,ecx
  40e029:	push   esp
  40e02a:	cmc    
  40e02b:	fidiv  WORD PTR [ebp-0x7b]
  40e02e:	push   eax
  40e02f:	cli    
  40e030:	imul   esp,DWORD PTR [edi+eax*2+0x6a],0xfc546393
  40e038:	in     eax,dx
  40e039:	dec    edi
  40e03a:	(bad)  
  40e03b:	ror    BYTE PTR [edi-0x58],1
  40e03e:	scas   eax,DWORD PTR es:[edi]
  40e03f:	jns    0x40e0ba
  40e041:	push   0x214d1e00
  40e046:	adc    dl,BYTE PTR [edx]
  40e048:	les    edi,FWORD PTR [esi-0x33b2b436]
  40e04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e04f:	mov    BYTE PTR [ecx],ch
  40e051:	(bad)  
  40e052:	out    0xac,eax
  40e054:	aas    
  40e055:	or     eax,0xf0ece068
  40e05a:	push   ebp
  40e05b:	push   esp
  40e05c:	(bad)  
  40e05d:	mov    BYTE PTR [ebp+0x4e],ch
  40e060:	xor    DWORD PTR [esi],esi
  40e062:	(bad)  
  40e063:	rol    BYTE PTR [esi],0x9f
  40e066:	and    edi,DWORD PTR [esi+esi*1]
  40e069:	mov    DWORD PTR [edx+edx*8],ebx
  40e06c:	out    0x71,eax
  40e06e:	mov    bh,0x76
  40e070:	jns    0x40dffe
  40e072:	inc    ecx
  40e073:	idiv   ah
  40e075:	mov    ds:0xf18f1caf,al
  40e07a:	jmp    0x634f2bd4
  40e07f:	sub    DWORD PTR [ecx],ecx
  40e081:	or     eax,0x42fc882c
  40e086:	jb     0x40e09c
  40e088:	or     al,0xc7
  40e08a:	mov    ch,0x95
  40e08c:	cld    
  40e08d:	or     DWORD PTR [esi+0x1724d2d9],edx
  40e093:	jne    0x40e0d3
  40e095:	fadd   QWORD PTR [ebp+0x61]
  40e098:	(bad)  
  40e099:	ins    BYTE PTR es:[edi],dx
  40e09a:	or     DWORD PTR [edi+0x742e06cd],esp
  40e0a0:	and    eax,DWORD PTR [eax+0x62]
  40e0a3:	sti    
  40e0a4:	xchg   DWORD PTR [esi+0x1edae5a1],edx
  40e0aa:	add    eax,0xa8050ed5
  40e0af:	xor    ah,BYTE PTR [esi-0x2d31982]
  40e0b5:	add    DWORD PTR [esi+0x6cafb7f1],edx
  40e0bb:	outs   dx,BYTE PTR ds:[esi]
  40e0bc:	test   eax,0x432271ea
  40e0c1:	retf   0xd385
  40e0c4:	adc    DWORD PTR [edi+ebp*2],edi
  40e0c7:	dec    eax
  40e0c8:	fstp   TBYTE PTR [ebx+eax*4-0x2a]
  40e0cc:	xor    ah,al
  40e0ce:	sbb    bl,bl
  40e0d0:	adc    BYTE PTR [esi-0xe],al
  40e0d3:	xor    ah,dl
  40e0d5:	mov    BYTE PTR [esi],dh
  40e0d7:	fdiv   DWORD PTR [ecx]
  40e0d9:	push   ecx
  40e0da:	and    esp,DWORD PTR cs:[esi+0x10]
  40e0de:	call   0xb4e9:0x997751a5
  40e0e5:	jmp    0x40e0dd
  40e0e7:	std    
  40e0e8:	pop    eax
  40e0e9:	push   ds
  40e0ea:	test   al,0xe1
  40e0ec:	out    dx,eax
  40e0ed:	mov    esp,0xf2e520a9
  40e0f2:	ret    0xfab0
  40e0f5:	xchg   ecx,eax
  40e0f6:	xchg   edi,eax
  40e0f7:	dec    esi
  40e0f8:	dec    eax
  40e0f9:	imul   ebp,DWORD PTR [ebp-0x539b5e4e],0x30
  40e100:	or     eax,0xce0e71c3
  40e105:	dec    ebp
  40e106:	ret    0xfa69
  40e109:	mov    bh,0x88
  40e10b:	icebp  
  40e10c:	mul    dh
  40e10e:	push   ds
  40e10f:	xor    ebp,DWORD PTR [ecx]
  40e111:	mov    dl,0x59
  40e114:	loopne 0x40e0b1
  40e116:	pop    ss
  40e117:	repnz retf 0x106
  40e11b:	ins    DWORD PTR es:[edi],dx
  40e11c:	popf   
  40e11d:	int3   
  40e11e:	xlat   BYTE PTR ds:[ebx]
  40e11f:	stos   DWORD PTR es:[edi],eax
  40e120:	rcl    edx,0xd3
  40e123:	js     0x40e0bf
  40e125:	pop    esp
  40e126:	aam    0xc
  40e128:	in     eax,0xa
  40e12a:	es cdq 
  40e12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e12d:	cmc    
  40e12e:	push   esi
  40e12f:	sbb    BYTE PTR [ecx+0x1],dl
  40e132:	cli    
  40e133:	out    dx,eax
  40e134:	adc    eax,0x7d2f98d4
  40e139:	lock out dx,eax
  40e13b:	dec    ecx
  40e13c:	je     0x40e0d0
  40e13e:	pop    esp
  40e13f:	loope  0x40e1ac
  40e141:	push   ebx
  40e142:	sar    bh,0x62
  40e145:	ja     0x40e0d0
  40e147:	test   DWORD PTR [ecx+edx*1-0x4e],0x592155d2
  40e14f:	mov    al,0xa5
  40e151:	inc    ebp
  40e152:	xor    al,0x20
  40e154:	pop    ss
  40e155:	inc    edi
  40e156:	or     al,0xf
  40e158:	push   ds
  40e159:	xchg   ecx,eax
  40e15a:	jnp    0x40e1c6
  40e15c:	adc    edx,DWORD PTR [eax+eax*4]
  40e15f:	mov    bl,0x56
  40e161:	push   ebx
  40e162:	mov    bh,0x57
  40e164:	je     0x40e0f9
  40e166:	mov    ebp,ebp
  40e168:	pop    esi
  40e169:	lods   eax,DWORD PTR ds:[esi]
  40e16a:	into   
  40e16b:	out    dx,eax
  40e16c:	repz rol DWORD PTR [ebx],0xd4
  40e170:	lock push ebp
  40e172:	pop    edi
  40e173:	mov    edi,0x9c0d2b60
  40e178:	std    
  40e179:	push   ds
  40e17a:	push   esp
  40e17b:	jo     0x40e164
  40e17d:	mov    ecx,0xbc1395bf
  40e182:	mov    eax,0xdb91821c
  40e187:	dec    esp
  40e188:	sbb    dh,ch
  40e18a:	xchg   edi,eax
  40e18b:	cwde   
  40e18c:	loopne 0x40e1f9
  40e18e:	xchg   edi,eax
  40e18f:	mov    ah,0x9f
  40e191:	or     ch,BYTE PTR [esi-0x5649aa5c]
  40e197:	or     eax,0xd2685fd3
  40e19c:	adc    al,BYTE PTR [edx-0x4c8e3020]
  40e1a2:	into   
  40e1a3:	popf   
  40e1a4:	jge    0x40e214
  40e1a6:	mov    dh,0xa9
  40e1a8:	mov    ebx,eax
  40e1aa:	cwde   
  40e1ab:	sahf   
  40e1ac:	mov    DWORD PTR [edi+0x6283f7f8],esi
  40e1b2:	(bad)  
  40e1b3:	xor    DWORD PTR [eax+0x53],edx
  40e1b6:	mov    ah,0x7f
  40e1b8:	scas   eax,DWORD PTR es:[edi]
  40e1b9:	xchg   esi,eax
  40e1ba:	jnp    0x40e1c4
  40e1bc:	test   BYTE PTR [ebx-0x49],bh
  40e1bf:	adc    DWORD PTR [edi+0x56f1f4e],edi
  40e1c5:	iret   
  40e1c6:	out    dx,al
  40e1c7:	dec    ecx
  40e1c8:	aad    0x39
  40e1ca:	aaa    
  40e1cb:	(bad)  
  40e1cd:	dec    esi
  40e1ce:	outs   dx,DWORD PTR ds:[esi]
  40e1cf:	pop    esp
  40e1d0:	ins    DWORD PTR es:[edi],dx
  40e1d1:	jbe    0x40e232
  40e1d3:	adc    DWORD PTR [ebx],edi
  40e1d5:	cmp    esp,DWORD PTR [ebx+edx*2]
  40e1d8:	(bad)  
  40e1da:	jne    0x40e15d
  40e1dc:	and    eax,0x53f1c54a
  40e1e1:	xchg   DWORD PTR [edi],ebx
  40e1e3:	or     DWORD PTR [ebx-0x1aa4518e],edi
  40e1e9:	xor    esp,DWORD PTR [ecx+eax*8-0x7b]
  40e1ed:	xchg   ebp,eax
  40e1ee:	mov    ?,WORD PTR [ecx]
  40e1f0:	pop    ebp
  40e1f1:	jnp    0x40e1ca
  40e1f3:	pusha  
  40e1f4:	enter  0x12d9,0xc5
  40e1f8:	loopne 0x40e25f
  40e1fa:	xchg   eax,esp
  40e1fc:	out    dx,al
  40e1fd:	fisubr DWORD PTR [eax-0x73c7c6e2]
  40e203:	and    al,0x1b
  40e205:	call   FWORD PTR [ecx+eiz*8-0x7ab04655]
  40e20c:	dec    edx
  40e20d:	add    DWORD PTR [ebx+eax*1],0x8931a0c3
  40e214:	jo     0x40e1d1
  40e216:	inc    ebx
  40e217:	xchg   DWORD PTR ss:[esi],ebx
  40e21a:	shr    DWORD PTR [edx+eiz*8+0x7c],0x79
  40e21f:	xor    eax,0xc110b8ea
  40e224:	(bad)  [esi+edi*8-0x6335f2ba]
  40e22b:	push   es
  40e22c:	dec    esp
  40e22d:	sub    ah,BYTE PTR [edx-0x67]
  40e230:	inc    eax
  40e231:	cld    
  40e232:	inc    ecx
  40e233:	rcl    DWORD PTR [esi+eax*8+0x40daff8],0x46
  40e23b:	xchg   esi,eax
  40e23c:	mov    al,ss:0xdee4bfba
  40e242:	cld    
  40e243:	cmc    
  40e244:	mov    cs,WORD PTR [edi+esi*2]
  40e247:	jb     0x40e2bb
  40e249:	js     0x40e2c5
  40e24b:	mov    DWORD PTR [eax+0xb],eax
  40e24e:	xchg   esp,eax
  40e24f:	lds    edx,FWORD PTR [edi]
  40e251:	dec    esp
  40e252:	jge    0x40e252
  40e254:	rcl    DWORD PTR [eax],1
  40e256:	inc    al
  40e258:	xchg   DWORD PTR [edi],edi
  40e25a:	or     ebp,ebp
  40e25c:	jnp    0x40e289
  40e25e:	add    DWORD PTR [eax-0x1e],ecx
  40e261:	sbb    cl,bh
  40e263:	pop    edx
  40e264:	mov    ss,WORD PTR [edi]
  40e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e267:	bound  eax,QWORD PTR [eax+0x7da511e9]
  40e26d:	(bad)  
  40e26e:	(bad)  
  40e26f:	inc    ecx
  40e270:	jle    0x40e252
  40e272:	fst    DWORD PTR [edi-0x47]
  40e275:	fs dec esp
  40e277:	fistp  WORD PTR [ecx]
  40e279:	lock sub DWORD PTR [esi+0x75],ecx
  40e27d:	mov    ch,0xc8
  40e27f:	cmp    al,0x23
  40e281:	jmp    0x40e2bd
  40e283:	jl     0x40e211
  40e285:	xor    al,0xc7
  40e287:	retf   
  40e288:	dec    eax
  40e289:	sub    ebp,DWORD PTR [edi+edi*4]
  40e28c:	(bad)  
  40e28d:	jae    0x40e2c6
  40e28f:	jecxz  0x40e310
  40e291:	sub    edi,DWORD PTR [ebp-0x52]
  40e294:	adc    edi,eax
  40e296:	xor    ebx,DWORD PTR [eax-0x19]
  40e299:	jmp    0x4b98759
  40e29e:	adc    DWORD PTR [eax-0x13f16131],esp
  40e2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a5:	pop    eax
  40e2a6:	fldenv [edi+0x3ca27612]
  40e2ac:	mov    eax,ds:0x2a16657f
  40e2b1:	mov    ebp,0xefe08695
  40e2b6:	cdq    
  40e2b7:	lds    esp,FWORD PTR [ecx+0x46]
  40e2ba:	mov    bh,0xbe
  40e2bc:	clc    
  40e2bd:	xchg   ebx,eax
  40e2be:	push   es
  40e2bf:	stos   BYTE PTR es:[edi],al
  40e2c0:	xor    bh,BYTE PTR [ecx-0x76]
  40e2c3:	pop    eax
  40e2c4:	mov    esp,0x2e6ae638
  40e2c9:	ins    DWORD PTR es:[edi],dx
  40e2ca:	das    
  40e2cb:	push   es
  40e2cc:	push   ecx
  40e2cd:	pusha  
  40e2ce:	les    edi,FWORD PTR [edi]
  40e2d0:	outs   dx,DWORD PTR ds:[esi]
  40e2d1:	out    0x50,al
  40e2d3:	ficom  DWORD PTR [ecx+0x1b14a0d2]
  40e2d9:	pop    ebp
  40e2da:	push   esi
  40e2db:	repz xchg ecx,eax
  40e2dd:	mov    esi,0xb018abe0
  40e2e2:	xchg   edi,eax
  40e2e3:	daa    
  40e2e4:	xchg   DWORD PTR [esp+edx*4-0xb],ebx
  40e2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e9:	stos   BYTE PTR es:[edi],al
  40e2ea:	pushf  
  40e2eb:	sbb    DWORD PTR [esi+0x3d],edi
  40e2ee:	jo     0x40e303
  40e2f0:	lds    esi,FWORD PTR [edi+eax*1]
  40e2f3:	ret    0x158c
  40e2f6:	xchg   edi,esp
  40e2f8:	clc    
  40e2f9:	retf   0x8231
  40e2fc:	xor    al,0x83
  40e2fe:	sub    al,0xb4
  40e300:	xchg   esi,eax
  40e301:	mov    dl,0x2c
  40e303:	jb     0x40e34a
  40e305:	dec    ebx
  40e306:	in     eax,0x67
  40e308:	push   ecx
  40e309:	gs lahf 
  40e30b:	(bad)  
  40e30c:	test   al,0x60
  40e30e:	test   DWORD PTR [edi],ecx
  40e310:	fsubr  DWORD PTR [ebp+0x1893e5da]
  40e316:	cwde   
  40e317:	ja     0x40e38c
  40e319:	int3   
  40e31a:	cmp    DWORD PTR [ecx+0x4ae66546],esp
  40e320:	push   esi
  40e321:	(bad)  
  40e322:	mov    dl,0x54
  40e324:	jmp    DWORD PTR [edx+0x7dd859c6]
  40e32a:	cmc    
  40e32b:	push   0x4
  40e32d:	lds    ebp,FWORD PTR [edi+ecx*2+0x4b231c8d]
  40e334:	scas   al,BYTE PTR es:[edi]
  40e335:	in     eax,0xce
  40e337:	arpl   ax,di
  40e339:	(bad)  
  40e33a:	(bad)  
  40e33b:	sub    al,0xf9
  40e33d:	push   es
  40e33e:	cdq    
  40e33f:	push   0x76
  40e341:	mov    ah,0x27
  40e343:	(bad)  
  40e345:	mov    ds,WORD PTR [ebx+ebx*2+0x3e]
  40e349:	sbb    esi,0x33
  40e34c:	imul   DWORD PTR [ecx-0x2c]
  40e34f:	mov    cl,0xe9
  40e351:	mov    eax,0x2eaecc83
  40e356:	scas   al,BYTE PTR es:[edi]
  40e357:	aaa    
  40e358:	jg     0x40e3be
  40e35a:	adc    edx,0xffffffac
  40e35d:	fwait
  40e35e:	imul   ecx,edx,0xc9babdac
  40e364:	mov    DWORD PTR [ebp+ecx*8-0x1315087a],edi
  40e36b:	lods   eax,DWORD PTR ds:[esi]
  40e36c:	mov    edx,0x633a58bf
  40e371:	pop    es
  40e372:	push   ebp
  40e373:	out    dx,al
  40e374:	dec    ebp
  40e375:	mov    eax,0xda11fd6b
  40e37a:	(bad)  
  40e37b:	dec    edx
  40e37c:	inc    ebp
  40e37d:	ret    
  40e37e:	fabs   
  40e380:	rcr    DWORD PTR [esi-0xdfc4ab9],cl
  40e386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e387:	dec    edx
  40e388:	stc    
  40e389:	add    ebp,ebp
  40e38b:	add    DWORD PTR [ecx+esi*4+0x54],ecx
  40e38f:	push   ebp
  40e390:	test   BYTE PTR [esi-0x151f0eea],dh
  40e396:	or     bh,BYTE PTR [eax+ecx*1+0x5cc75949]
  40e39d:	mov    ah,0x70
  40e39f:	and    cl,al
  40e3a1:	out    0xa0,al
  40e3a3:	or     al,BYTE PTR [esi-0x1522ee]
  40e3a9:	and    esp,0xffffff9c
  40e3ac:	sbb    edx,ecx
  40e3ae:	pop    esp
  40e3af:	gs mov dh,0x78
  40e3b2:	mov    edi,0x57cad797
  40e3b7:	outs   dx,DWORD PTR ds:[esi]
  40e3b8:	sub    cl,BYTE PTR [ebx+eax*1+0x66]
  40e3bc:	add    BYTE PTR [ebp-0x566f81bf],dh
  40e3c2:	ret    
  40e3c3:	shl    BYTE PTR [esi],cl
  40e3c5:	fs jmp 0x524b3e63
  40e3cb:	jg     0x40e37c
  40e3cd:	inc    esi
  40e3ce:	mov    ?,ebp
  40e3d0:	mov    ebx,0xbcfa9e31
  40e3d5:	xor    DWORD PTR [edi-0x45],0x71e3cfae
  40e3dc:	out    dx,eax
  40e3dd:	mov    BYTE PTR [ecx-0x19],0x8f
  40e3e1:	shl    BYTE PTR [edx-0x43363688],cl
  40e3e7:	and    al,BYTE PTR [ebx]
  40e3e9:	push   es
  40e3ea:	adc    BYTE PTR [ecx],ah
  40e3ec:	push   ds
  40e3ed:	(bad)  
  40e3ef:	in     eax,dx
  40e3f0:	loope  0x40e3d4
  40e3f2:	in     al,0x40
  40e3f4:	dec    esi
  40e3f5:	dec    esi
  40e3f6:	inc    edi
  40e3f7:	jecxz  0x40e3c0
  40e3f9:	fwait
  40e3fa:	inc    ecx
  40e3fb:	jns    0x40e46c
  40e3fd:	jae    0x40e405
  40e3ff:	jge    0x40e403
  40e401:	ja     0x40e3ed
  40e403:	pop    eax
  40e404:	pop    ebp
  40e405:	dec    edi
  40e406:	cmp    esi,0x6b
  40e409:	fldcw  WORD PTR [ecx-0x7e9aae4]
  40e40f:	nop
  40e410:	jb     0x40e3fd
  40e412:	push   edi
  40e413:	xor    eax,0x97a6ad8c
  40e418:	jecxz  0x40e443
  40e41a:	push   ecx
  40e41b:	sub    cl,BYTE PTR [edi+edx*4]
  40e41e:	sbb    DWORD PTR [edi-0x1371f646],edi
  40e424:	ja     0x40e429
  40e426:	ins    BYTE PTR es:[edi],dx
  40e427:	push   esp
  40e428:	jle    0x40e496
  40e42a:	push   edi
  40e42b:	or     DWORD PTR [eax],edx
  40e42d:	das    
  40e42e:	popa   
  40e42f:	inc    edx
  40e430:	test   al,0xed
  40e432:	push   0x40
  40e434:	mov    ah,0x7c
  40e436:	pop    ebp
  40e437:	imul   ebp,DWORD PTR [esp+ebx*4+0x7a44cfcb],0x7e
  40e43f:	sub    ah,BYTE PTR [eax]
  40e441:	xor    al,0x3d
  40e443:	gs test eax,0xdfa85248
  40e449:	(bad)  
  40e44a:	mov    ah,ah
  40e44c:	and    DWORD PTR [ebx+0x1],0xffffffa9
  40e450:	rol    bh,cl
  40e452:	dec    ebp
  40e453:	xchg   esi,eax
  40e454:	fistp  WORD PTR [esi-0xb]
  40e457:	(bad)  
  40e459:	sbb    BYTE PTR [edx],dh
  40e45b:	and    bh,BYTE PTR [ebp+0x34]
  40e45e:	ins    BYTE PTR es:[edi],dx
  40e45f:	popf   
  40e460:	xchg   ebx,eax
  40e461:	mov    ah,BYTE PTR [ebp-0x5c6728fd]
  40e467:	mov    BYTE PTR [esi],bl
  40e469:	dec    edi
  40e46b:	sti    
  40e46c:	inc    edx
  40e46d:	sbb    al,0xab
  40e46f:	out    0x70,eax
  40e471:	push   ebx
  40e472:	mov    edx,0x883ec192
  40e477:	add    al,0x6
  40e479:	mov    eax,ds:0x889389cc
  40e47e:	add    dh,BYTE PTR [edx]
  40e480:	mov    ds:0xf457f9ea,al
  40e485:	out    0x2c,eax
  40e487:	jae    0x40e44b
  40e489:	or     al,0x7e
  40e48b:	loope  0x40e4ef
  40e48d:	(bad)  
  40e48e:	retf   0xab1f
  40e491:	test   BYTE PTR [eax-0x588c3f2b],cl
  40e497:	push   cs
  40e498:	scas   eax,DWORD PTR es:[edi]
  40e499:	sub    BYTE PTR [esi+0x7f062c8d],cl
  40e49f:	(bad)  
  40e4a0:	in     eax,0xc6
  40e4a2:	call   0x67aa:0x88ef6f09
  40e4a9:	loopne 0x40e43d
  40e4ab:	mov    esi,edx
  40e4ad:	adc    eax,0x5b7d4532
  40e4b2:	jae    0x40e47d
  40e4b4:	es leave 
  40e4b6:	cmp    ecx,ebp
  40e4b8:	aad    0x27
  40e4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4bb:	sbb    al,0xaf
  40e4bd:	les    ebx,FWORD PTR [ebp-0x3d]
  40e4c0:	jne    0x40e4d9
  40e4c2:	push   0x1e
  40e4c4:	mov    edi,0xff32d450
  40e4c9:	ret    0xdf86
  40e4cc:	ret    0xb6b7
  40e4cf:	fdiv   st(2),st
  40e4d1:	pop    eax
  40e4d2:	jle    0x40e47f
  40e4d4:	hlt    
  40e4d5:	adc    edi,DWORD PTR [ecx-0x3955e780]
  40e4db:	jmp    0x3e5d5c9b
  40e4e0:	pop    es
  40e4e1:	mov    DWORD PTR [edi+0x56cd83c7],0xee7ddb2f
  40e4eb:	test   DWORD PTR [ebx],edx
  40e4ed:	ror    BYTE PTR [ebp-0x53],cl
  40e4f0:	test   eax,0x5848668d
  40e4f5:	push   esp
  40e4f6:	iret   
  40e4f7:	add    BYTE PTR [ebp+0x5b18e290],0xd9
  40e4fe:	fwait
  40e4ff:	add    DWORD PTR [edx+esi*4],0x37a9d89
  40e506:	cld    
  40e507:	cmp    al,0x60
  40e509:	jno    0x40e550
  40e50b:	adc    esi,edi
  40e50d:	xor    DWORD PTR [edx],eax
  40e50f:	rcr    BYTE PTR [ebx+ebx*2+0x4e],0xe7
  40e514:	ficomp WORD PTR [edi]
  40e516:	mov    cl,0xf7
  40e518:	sahf   
  40e519:	xor    ecx,DWORD PTR ds:0x122d53c2
  40e51f:	jbe    0x40e576
  40e521:	idiv   BYTE PTR [ebx+0x2ac1d4d5]
  40e527:	pop    es
  40e528:	jmp    0x1fe4:0xd8779290
  40e52f:	jmp    0xf0eb:0xada2f52
  40e536:	es push ds
  40e538:	xchg   edx,eax
  40e539:	ds mov cl,0xff
  40e53c:	xchg   ecx,eax
  40e53d:	inc    eax
  40e53e:	add    ecx,DWORD PTR [ecx]
  40e540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e541:	ds sbb esp,DWORD PTR es:[ebx]
  40e545:	aaa    
  40e546:	push   ss
  40e547:	loope  0x40e544
  40e549:	repz pushf 
  40e54b:	or     eax,0xaeb9a526
  40e550:	div    DWORD PTR [ebp-0x5c]
  40e553:	aas    
  40e554:	xchg   DWORD PTR [eax],edx
  40e556:	mov    al,ds:0x327cd40c
  40e55b:	pop    es
  40e55c:	add    ebx,DWORD PTR [esi-0x2a]
  40e55f:	adc    edx,edx
  40e561:	and    eax,0x440f82d
  40e566:	xchg   edx,eax
  40e567:	inc    edx
  40e568:	xchg   esi,eax
  40e569:	mov    ebp,0x9455071f
  40e56e:	int3   
  40e56f:	je     0x40e541
  40e571:	sub    al,0x6e
  40e573:	cmp    bh,cl
  40e575:	clc    
  40e576:	inc    ebx
  40e577:	jb     0x40e5a1
  40e579:	das    
  40e57a:	jg     0x40e5db
  40e57c:	cwde   
  40e57d:	fwait
  40e57e:	(bad)  
  40e57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e580:	sbb    DWORD PTR [esi-0x584a1b03],edi
  40e586:	adc    BYTE PTR [eax+0x7e],bl
  40e589:	neg    DWORD PTR [eax+esi*2+0x79]
  40e58d:	mov    bl,0x85
  40e58f:	mov    BYTE PTR [edi],0x63
  40e592:	pop    edi
  40e593:	mov    ds:0xdec31252,al
  40e598:	xor    eax,0xa08e734b
  40e59d:	popf   
  40e59e:	call   0x3b1a3516
  40e5a3:	fnsave [edx]
  40e5a5:	int3   
  40e5a6:	rol    DWORD PTR [ebp-0x41],1
  40e5a9:	inc    ebp
  40e5aa:	xor    BYTE PTR ds:0xec40df76,bl
  40e5b0:	or     BYTE PTR [edi-0x7a],dl
  40e5b3:	popa   
  40e5b4:	repnz lea eax,ds:0x88dde147
  40e5bc:	addr16 inc ecx
  40e5bf:	outs   dx,BYTE PTR ds:[esi]
  40e5c0:	mov    ebp,0x28e310fa
  40e5c5:	cmp    al,0x2d
  40e5c7:	xor    dh,BYTE PTR [ebx]
  40e5c9:	ins    DWORD PTR es:[edi],dx
  40e5ca:	push   ecx
  40e5cb:	push   edx
  40e5cc:	int3   
  40e5cd:	or     ecx,DWORD PTR [ecx-0x80]
  40e5d0:	mov    ch,0x85
  40e5d2:	mov    ebp,DWORD PTR [ebx-0x80]
  40e5d5:	cwde   
  40e5d6:	mov    edx,0x9d2d785d
  40e5db:	mov    dh,0xf5
  40e5dd:	pop    edx
  40e5de:	cdq    
  40e5df:	sub    esp,DWORD PTR [ecx-0x1b1a1a60]
  40e5e5:	xor    ecx,0x35
  40e5e8:	fidivr DWORD PTR [ebx]
  40e5ea:	dec    edx
  40e5eb:	and    cl,BYTE PTR [edx+0x2f]
  40e5ee:	mov    al,ds:0x28cefd6b
  40e5f3:	jmp    0xa56662f3
  40e5f8:	nop
  40e5f9:	aas    
  40e5fa:	and    BYTE PTR [edx-0x11],ch
  40e5fd:	arpl   WORD PTR [edx+0x61761055],bp
  40e603:	call   0x93b0dbbf
  40e608:	xor    eax,0xffffffd3
  40e60b:	xor    bl,BYTE PTR [esi+0x31]
  40e60e:	pop    ss
  40e60f:	cwde   
  40e610:	push   ebx
  40e611:	das    
  40e612:	mov    esp,0x13709f1e
  40e617:	ss add eax,0x5cd891ff
  40e61d:	test   esp,ecx
  40e61f:	outs   dx,DWORD PTR ds:[esi]
  40e620:	cmp    DWORD PTR [ebp-0x112d04c0],ebx
  40e626:	cwde   
  40e627:	xchg   ebx,eax
  40e628:	(bad)  
  40e629:	retf   0x54a
  40e62c:	adc    ah,cl
  40e62e:	push   ecx
  40e62f:	fwait
  40e630:	cmp    eax,0x7a60b06d
  40e635:	fsub   DWORD PTR [ecx]
  40e637:	adc    DWORD PTR [ebx+0x1fb4c317],esp
  40e63d:	xor    esp,DWORD PTR [esi+0x7fac0024]
  40e643:	loop   0x40e63d
  40e645:	mov    esi,0x65c7a9cf
  40e64a:	jge    0x40e5f4
  40e64c:	stos   BYTE PTR es:[edi],al
  40e64d:	test   BYTE PTR [ebx],ah
  40e64f:	adc    BYTE PTR [edi],0x60
  40e652:	ficom  WORD PTR [ebp+0x3c2f86b9]
  40e658:	mov    ecx,0xcd834dd
  40e65d:	fsub   DWORD PTR [ecx+edx*2-0x68dffd36]
  40e664:	mov    ah,0x6b
  40e666:	fst    QWORD PTR es:[edx-0x51306023]
  40e66d:	jns    0x40e6d9
  40e66f:	mov    ebp,0x8a34c98d
  40e674:	rol    ch,0x6f
  40e677:	int3   
  40e678:	inc    esi
  40e679:	and    eax,0x16450d05
  40e67e:	cmp    DWORD PTR [edi-0x74ebd8b4],ecx
  40e684:	data16 sbb BYTE PTR [edx-0x4da7883b],0x99
  40e68c:	out    dx,eax
  40e68d:	mov    bl,0x8c
  40e68f:	test   al,0x54
  40e691:	sbb    al,BYTE PTR [ebp+0x163a0c56]
  40e697:	push   ecx
  40e698:	pop    esi
  40e699:	mov    edx,0x9835fcf8
  40e69e:	dec    edi
  40e69f:	inc    edx
  40e6a0:	cmp    DWORD PTR [ebp-0x68731173],eax
  40e6a6:	mov    bh,0xc
  40e6a8:	or     bh,BYTE PTR [esp+esi*2-0x60]
  40e6ac:	sub    al,0x87
  40e6ae:	sub    esi,DWORD PTR [ecx-0x48]
  40e6b1:	pop    ebp
  40e6b2:	xchg   edx,eax
  40e6b3:	hlt    
  40e6b4:	sub    ah,0x1e
  40e6b7:	mov    DWORD PTR [ebp-0x3bb3f380],ebx
  40e6bd:	test   eax,0xdd94f9c2
  40e6c2:	cmp    BYTE PTR [esi+0x33],dh
  40e6c5:	(bad)  
  40e6c6:	or     edi,esi
  40e6c8:	xchg   esp,eax
  40e6c9:	les    edi,FWORD PTR [ebx]
  40e6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6cc:	xor    eax,0xd62c52ac
  40e6d1:	test   BYTE PTR [ebx+0x15],ah
  40e6d4:	dec    edi
  40e6d5:	popf   
  40e6d6:	sbb    dh,BYTE PTR [ecx]
  40e6d8:	push   es
  40e6d9:	stos   BYTE PTR es:[edi],al
  40e6da:	outs   dx,BYTE PTR ds:[esi]
  40e6db:	pop    edx
  40e6dc:	inc    edx
  40e6dd:	mov    ds:0x64cff125,eax
  40e6e2:	pop    edi
  40e6e3:	int    0xdb
  40e6e5:	cmp    al,0x22
  40e6e7:	les    edi,FWORD PTR [edx-0x45c71e57]
  40e6ed:	ins    BYTE PTR es:[edi],dx
  40e6ee:	jno    0x40e71a
  40e6f0:	pop    esp
  40e6f1:	dec    esp
  40e6f2:	fisttp QWORD PTR [esi-0x6117d0a7]
  40e6f8:	int    0xe
  40e6fa:	popa   
  40e6fb:	daa    
  40e6fc:	sbb    esi,DWORD PTR [ebp-0x5f29f67f]
  40e702:	out    0xc6,al
  40e704:	or     BYTE PTR [edx-0x15],0x0
  40e708:	ss xor eax,0x67e296aa
  40e70e:	cli    
  40e70f:	jg     0x40e6be
  40e711:	cmp    BYTE PTR [edi],al
  40e713:	aad    0xa7
  40e715:	sbb    dh,0xd9
  40e718:	xor    ah,0xc8
  40e71b:	pop    ds
  40e71c:	int    0x77
  40e71e:	in     al,dx
  40e71f:	inc    esi
  40e720:	jno    0x40e6cb
  40e722:	sbb    eax,0x341c6392
  40e727:	in     al,dx
  40e728:	iret   
  40e729:	ja     0x40e771
  40e72b:	shl    BYTE PTR [edx],cl
  40e72d:	ds aaa 
  40e72f:	or     BYTE PTR [edx+0x77cf44b8],ch
  40e735:	mov    dh,0x17
  40e737:	cmp    DWORD PTR [esi+0x5960a817],edx
  40e73d:	stc    
  40e73e:	push   ds
  40e73f:	ins    BYTE PTR es:[edi],dx
  40e740:	lods   eax,DWORD PTR ds:[esi]
  40e741:	and    al,0x93
  40e743:	lds    edi,FWORD PTR [ebp+eax*4+0xd]
  40e747:	pusha  
  40e748:	into   
  40e749:	in     eax,dx
  40e74a:	fcompp 
  40e74c:	shl    BYTE PTR [esi-0x22],cl
  40e74f:	mov    ah,0x54
  40e751:	mov    edi,0xcec6e5b0
  40e756:	mov    ecx,0xdadb0d03
  40e75b:	sahf   
  40e75c:	adc    eax,0x2a522d15
  40e761:	inc    ebx
  40e762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e763:	std    
  40e764:	jb     0x40e753
  40e766:	fisttp WORD PTR [ebx+0x7f6a6671]
  40e76c:	out    0x77,al
  40e76e:	or     eax,0x12f44
  40e773:	popf   
  40e774:	dec    ebx
  40e775:	ins    DWORD PTR es:[edi],dx
  40e776:	(bad)  
  40e777:	inc    edx
  40e778:	add    BYTE PTR [eax-0x26],ch
  40e77b:	mov    al,0x8f
  40e77d:	ins    DWORD PTR es:[edi],dx
  40e77e:	xor    BYTE PTR [ecx-0x62],cl
  40e781:	inc    eax
  40e782:	mov    ebp,0xcc096e4c
  40e787:	test   eax,0x6dbdf45c
  40e78c:	push   ecx
  40e78d:	retf   
  40e78e:	pop    ebp
  40e78f:	(bad)  
  40e790:	sti    
  40e791:	mov    ch,bl
  40e793:	and    BYTE PTR [ecx-0x77],dl
  40e796:	cmp    ecx,0xffffffc2
  40e799:	or     eax,0x608447a3
  40e79e:	and    BYTE PTR [edi+eiz*8],ah
  40e7a1:	adc    al,0x13
  40e7a3:	icebp  
  40e7a4:	jp     0x40e81f
  40e7a6:	cwde   
  40e7a7:	jno    0x40e799
  40e7a9:	gs inc eax
  40e7ab:	sbb    dh,0x73
  40e7ae:	mov    es,WORD PTR [ebp+0x3e501d79]
  40e7b4:	(bad)  
  40e7b5:	push   eax
  40e7b6:	sbb    ah,BYTE PTR [ebp-0x51]
  40e7b9:	cs xchg ebx,eax
  40e7bb:	(bad)  
  40e7bd:	sbb    dl,BYTE PTR [esp+eax*8]
  40e7c0:	(bad)
  40e7c4:	fs scas al,BYTE PTR es:[edi]
  40e7c6:	jnp    0x40e805
  40e7c8:	xchg   ebx,eax
  40e7c9:	jne    0x40e83a
  40e7cb:	sahf   
  40e7cc:	push   eax
  40e7cd:	frstor [edi+0x46]
  40e7d0:	test   BYTE PTR [ecx],0x44
  40e7d3:	jge    0x40e7ce
  40e7d5:	sar    BYTE PTR [edi],0x76
  40e7d8:	data16 (bad) 
  40e7da:	sub    eax,0x8da1f2e6
  40e7df:	arpl   bp,sp
  40e7e1:	std    
  40e7e2:	cld    
  40e7e3:	arpl   WORD PTR ds:0x409255ea,bx
  40e7e9:	and    al,BYTE PTR [ecx-0x1d72c7b]
  40e7ef:	pop    ss
  40e7f0:	adc    al,0xef
  40e7f2:	jmp    0x9ada068e
  40e7f7:	scas   eax,DWORD PTR es:[edi]
  40e7f8:	xchg   ecx,eax
  40e7f9:	xchg   edi,eax
  40e7fa:	bnd jbe 0x40e83b
  40e7fd:	pusha  
  40e7fe:	jle    0x40e807
  40e800:	jge    0x40e807
  40e802:	ret    
  40e803:	push   0x564f734
  40e808:	jmp    0x40e80a
  40e80a:	sub    ebp,0x1f05f194
  40e810:	xor    eax,0x770c1725
  40e815:	push   esp
  40e816:	jb     0x40e833
  40e818:	out    0x69,al
  40e81a:	fsubr  QWORD PTR [esi-0x5d]
  40e81d:	mov    esp,0xe9166e7d
  40e822:	fcom   QWORD PTR [eax+0x1a]
  40e825:	test   BYTE PTR [esi],0xcf
  40e828:	push   eax
  40e829:	bsr    ecx,DWORD PTR [eax+ecx*2+0x3d531646]
  40e831:	mov    ds:0x59c7d7e2,eax
  40e836:	inc    esi
  40e837:	add    ebx,DWORD PTR [ebp+0x20]
  40e83a:	call   0x3326c8d3
  40e83f:	mov    eax,0xce1ad590
  40e844:	pop    eax
  40e845:	mov    ebp,0xe94f6ac
  40e84a:	pop    ss
  40e84b:	std    
  40e84c:	in     eax,0xee
  40e84e:	jle    0x40e84a
  40e850:	xor    al,0x27
  40e852:	xchg   ebp,ecx
  40e854:	int    0x2d
  40e856:	aad    0x64
  40e858:	mov    ebp,0x7d4f97f1
  40e85d:	and    al,0xd6
  40e85f:	push   ss
  40e860:	je     0x40e8bd
  40e862:	xchg   esp,eax
  40e863:	dec    esi
  40e864:	sbb    ecx,edx
  40e866:	sahf   
  40e867:	push   esp
  40e868:	or     BYTE PTR [ebx-0x3d14b71],cl
  40e86e:	add    BYTE PTR [edi],0x74
  40e871:	gs inc esp
  40e873:	lahf   
  40e874:	mov    ecx,0x454abac0
  40e879:	(bad)  
  40e87a:	mov    edx,0x6e1a4479
  40e87f:	sbb    eax,0xaff9a223
  40e884:	loop   0x40e89d
  40e886:	(bad)  
  40e887:	bound  ebp,QWORD PTR [ebp-0x12]
  40e88a:	inc    eax
  40e88b:	adc    eax,0x9df9d7fe
  40e890:	fisttp DWORD PTR [eax-0x363eceb8]
  40e896:	addps  xmm3,XMMWORD PTR [edx]
  40e899:	arpl   WORD PTR [esp+esi*8-0x7],ax
  40e89d:	cs scas al,BYTE PTR es:[edi]
  40e89f:	pop    esp
  40e8a0:	push   edx
  40e8a1:	dec    edi
  40e8a2:	adc    dh,BYTE PTR [eax+0x1ea10a9]
  40e8a8:	inc    ebp
  40e8a9:	lsl    ecx,WORD PTR [edx-0xb5cff89]
  40e8b0:	or     bl,dh
  40e8b2:	cmp    ecx,ecx
  40e8b4:	xchg   ecx,eax
  40e8b5:	or     al,0x99
  40e8b7:	mov    esi,DWORD PTR [ebx+0x2fe52d25]
  40e8bd:	jno    0x40e860
  40e8bf:	jecxz  0x40e85a
  40e8c1:	sub    cl,dh
  40e8c3:	add    dh,BYTE PTR [edi-0x50]
  40e8c6:	int    0x8d
  40e8c8:	inc    ebp
  40e8c9:	scas   al,BYTE PTR es:[edi]
  40e8ca:	adc    BYTE PTR [esi-0x6c],0x89
  40e8ce:	fmul   DWORD PTR [edx+0x7]
  40e8d1:	stos   BYTE PTR es:[edi],al
  40e8d2:	add    DWORD PTR [esp+ebp*2],ebp
  40e8d5:	cmp    BYTE PTR ds:0x1337bb0c,0x6d
  40e8dc:	stos   BYTE PTR es:[edi],al
  40e8dd:	mov    dh,0x83
  40e8df:	jno    0x40e8b3
  40e8e1:	dec    ebp
  40e8e2:	dec    esi
  40e8e3:	repnz mov esi,DWORD PTR [ebp+0x75]
  40e8e7:	je     0x40e8eb
  40e8e9:	xor    DWORD PTR [edx],edx
  40e8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ec:	mov    eax,0x506aa1b8
  40e8f1:	xchg   edx,eax
  40e8f2:	add    ah,BYTE PTR [ebp+0x26]
  40e8f5:	push   ebx
  40e8f6:	jg     0x40e91b
  40e8f8:	das    
  40e8f9:	in     al,dx
  40e8fa:	lods   al,BYTE PTR ds:[esi]
  40e8fb:	inc    ebx
  40e8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8fd:	push   edx
  40e8fe:	imul   ah
  40e900:	adc    BYTE PTR [ebx+ebx*2],0x91
  40e904:	sbb    eax,0xf008f691
  40e909:	mov    edi,0xa316e7e4
  40e90e:	cmc    
  40e90f:	outs   dx,BYTE PTR ds:[esi]
  40e910:	push   0xffffff90
  40e912:	dec    esp
  40e913:	push   cs
  40e914:	aas    
  40e915:	push   eax
  40e916:	iret   
  40e917:	outs   dx,DWORD PTR ds:[esi]
  40e918:	cmp    bh,BYTE PTR [edi-0x74221008]
  40e91e:	ret    
  40e91f:	push   ss
  40e920:	add    eax,0x209adfaf
  40e925:	push   es
  40e926:	xchg   BYTE PTR [eax],ah
  40e928:	popa   
  40e929:	xchg   esi,eax
  40e92a:	fstp   QWORD PTR [esi]
  40e92c:	hlt    
  40e92d:	cmc    
  40e92e:	mov    eax,ds:0x32fb9ceb
  40e933:	push   esi
  40e934:	pop    edi
  40e935:	push   ecx
  40e936:	repnz lock xchg edi,eax
  40e939:	lea    esi,[ebx+0xe710143]
  40e93f:	ret    
  40e940:	mov    eax,DWORD PTR [ecx+esi*1]
  40e943:	xor    al,0x8e
  40e945:	sub    BYTE PTR es:[edi-0x6e15ff0e],ch
  40e94c:	push   cs
  40e94d:	enter  0xeee0,0xe4
  40e951:	int3   
  40e952:	imul   ecx,DWORD PTR [eax+0x11],0xbd954bbe
  40e959:	pop    eax
  40e95a:	(bad)  
  40e95b:	call   0x8e07c6ac
  40e960:	fbstp  TBYTE PTR [bp+si+0x7c57]
  40e965:	add    al,0x64
  40e967:	call   0x511c956c
  40e96c:	mov    eax,ds:0x7b20f35f
  40e971:	ror    BYTE PTR [edi-0x59],0xdf
  40e975:	js     0x40e987
  40e977:	push   ebp
  40e978:	ret    0xca1d
  40e97b:	fistp  QWORD PTR [ebp+0x2571e64d]
  40e981:	inc    esi
  40e982:	sbb    eax,0x115d8a7a
  40e987:	out    0x81,al
  40e989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e98a:	(bad)  
  40e98c:	in     al,0x21
  40e98e:	sub    al,0x74
  40e990:	je     0x40e9a5
  40e992:	call   0x3d9c:0xc26fced4
  40e999:	fnstenv [edx-0x5a]
  40e99c:	or     al,0x74
  40e99e:	inc    eax
  40e99f:	daa    
  40e9a0:	dec    ecx
  40e9a1:	cmp    BYTE PTR [esi-0x3c],dl
  40e9a4:	fstp   QWORD PTR [ebp+0x60759eb6]
  40e9aa:	fsub   st,st(5)
  40e9ac:	addr16 mov ecx,0x69f35675
  40e9b2:	dec    esp
  40e9b3:	adc    al,0xe7
  40e9b5:	xchg   BYTE PTR [ebx-0x3f],ah
  40e9b8:	call   0xdec8:0xbe4d91b9
  40e9bf:	sub    BYTE PTR [esi-0x3a],bh
  40e9c2:	cmp    DWORD PTR [edi],ebx
  40e9c4:	in     eax,dx
  40e9c5:	iret   
  40e9c6:	test   ecx,edx
  40e9c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c9:	xchg   esp,eax
  40e9ca:	leave  
  40e9cb:	lods   al,BYTE PTR ds:[esi]
  40e9cc:	lea    eax,[ebx+0xe]
  40e9cf:	pop    edx
  40e9d0:	push   esi
  40e9d1:	sbb    DWORD PTR [esi+0x58],esp
  40e9d4:	sbb    al,0x38
  40e9d6:	in     al,0x16
  40e9d8:	jae    0x40e9c0
  40e9da:	adc    al,0xd1
  40e9dc:	popa   
  40e9dd:	sbb    BYTE PTR [ebp+0x3f],ah
  40e9e0:	bound  ebx,QWORD PTR [ebp+0x6b]
  40e9e3:	dec    edx
  40e9e4:	clc    
  40e9e5:	jnp    0x40ea1b
  40e9e7:	repnz and bh,BYTE PTR [esi+ecx*1-0x61]
  40e9ec:	js     0x40e97a
  40e9ee:	repnz mov ss,WORD PTR [eax]
  40e9f1:	jmp    0x9df542c4
  40e9f6:	fldcw  WORD PTR [esi+0x4acb8b32]
  40e9fc:	ins    DWORD PTR es:[edi],dx
  40e9fd:	cld    
  40e9fe:	pop    es
  40e9ff:	inc    esi
  40ea00:	mov    ds,ebp
  40ea02:	lods   eax,DWORD PTR ds:[esi]
  40ea03:	jl     0x40ea79
  40ea05:	shl    DWORD PTR ds:0x4d22e79a,0xbb
  40ea0c:	inc    BYTE PTR [esi-0x22]
  40ea0f:	xchg   edi,eax
  40ea10:	bound  esi,QWORD PTR [ebp-0x700df085]
  40ea16:	add    al,0xc7
  40ea18:	shl    DWORD PTR [ebp-0x1db922b1],cl
  40ea1e:	repnz arpl WORD PTR [eax+0x39],ax
  40ea22:	shr    BYTE PTR [ecx-0x7d],0x14
  40ea26:	or     al,BYTE PTR [esi+0x1f36977f]
  40ea2c:	rcr    DWORD PTR [ecx-0x61],0xf9
  40ea30:	mov    esi,0x6573e7e4
  40ea35:	cmp    eax,0xf6f0a76c
  40ea3a:	jmp    DWORD PTR [edx+0x6c4a7fe1]
  40ea40:	or     al,BYTE PTR [edi]
  40ea42:	inc    ecx
  40ea43:	adc    ecx,DWORD PTR [esi]
  40ea45:	jge    0x40ea54
  40ea47:	and    cl,BYTE PTR [ecx+0x14]
  40ea4a:	(bad)  [edx+0x3]
  40ea4d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ea4f:	dec    ecx
  40ea50:	enter  0x2ab4,0x74
  40ea54:	pop    eax
  40ea55:	inc    ecx
  40ea56:	fs sbb al,0xf0
  40ea59:	test   eax,0x50b105a3
  40ea5e:	ja     0x40ea1c
  40ea60:	inc    ecx
  40ea61:	jl     0x40ea69
  40ea63:	call   0xd96468b9
  40ea68:	(bad)  
  40ea69:	mov    bl,0x34
  40ea6b:	lahf   
  40ea6c:	mov    ebp,0x24c741bb
  40ea71:	in     al,dx
  40ea72:	out    0x72,al
  40ea74:	xchg   BYTE PTR [ebp+0x39],dh
  40ea77:	iret   
  40ea78:	das    
  40ea79:	xchg   edi,eax
  40ea7a:	xor    DWORD PTR [edi-0x791ab5f0],esp
  40ea80:	inc    esi
  40ea81:	inc    ebp
  40ea82:	or     edx,DWORD PTR [eax+0x54]
  40ea85:	mov    ?,WORD PTR [ebp+0x626f1d9e]
  40ea8b:	mov    bh,0x8
  40ea8d:	xor    DWORD PTR [edx],edx
  40ea8f:	scas   al,BYTE PTR es:[edi]
  40ea90:	or     al,0xa3
  40ea92:	mov    ecx,0xcb69c4a7
  40ea97:	adc    cl,BYTE PTR [edi+0x49fcc6ac]
  40ea9d:	out    dx,eax
  40ea9e:	in     al,dx
  40ea9f:	scas   eax,DWORD PTR es:[edi]
  40eaa0:	push   ss
  40eaa1:	das    
  40eaa2:	sbb    al,0xc2
  40eaa4:	repnz outs dx,DWORD PTR ds:[si]
  40eaa7:	jno    0x40ea57
  40eaa9:	cld    
  40eaaa:	sbb    bl,cl
  40eaac:	stos   BYTE PTR es:[edi],al
  40eaad:	rcr    DWORD PTR [esi-0x63f457b6],0x65
  40eab4:	in     al,0x5b
  40eab6:	das    
  40eab7:	jne    0x40ea62
  40eab9:	mov    ah,0x86
  40eabb:	xor    ebx,DWORD PTR [esi+0x58]
  40eabe:	rol    DWORD PTR [ecx+esi*8+0xf],1
  40eac2:	jge    0x40eb39
  40eac4:	or     DWORD PTR [eax+esi*2],edi
  40eac7:	ror    DWORD PTR [edx-0x5f],1
  40eaca:	xchg   ebp,eax
  40eacb:	(bad)  
  40eacc:	fiadd  WORD PTR [edi+0x3022d295]
  40ead2:	pop    ebx
  40ead3:	int    0x2
  40ead5:	add    eax,0x7f470ffa
  40eada:	imul   eax,esi,0xb7e6256a
  40eae0:	imul   esp,DWORD PTR [eax+0x4c],0x8d3d5927
  40eae7:	sub    BYTE PTR [ecx-0x74],ch
  40eaea:	jbe    0x40eac3
  40eaec:	ret    
  40eaed:	outs   dx,BYTE PTR ds:[esi]
  40eaee:	push   esi
  40eaf0:	push   0xffffffe5
  40eaf2:	in     al,0xc0
  40eaf4:	dec    edi
  40eaf5:	dec    ebx
  40eaf6:	fisttp DWORD PTR [esi+edx*4]
  40eaf9:	sub    dh,BYTE PTR [edx+ecx*1]
  40eafc:	mov    bh,0xb1
  40eafe:	ins    DWORD PTR es:[edi],dx
  40eaff:	sub    ecx,edx
  40eb01:	jo     0x40eb34
  40eb03:	call   0xeccb15a6
  40eb08:	adc    cl,dl
  40eb0a:	inc    ebp
  40eb0b:	jl     0x40eb27
  40eb0d:	inc    eax
  40eb0e:	mov    dh,0x24
  40eb10:	aas    
  40eb11:	test   BYTE PTR [esi+0xc],al
  40eb14:	mov    esp,0x63d6c68d
  40eb19:	shl    DWORD PTR [ebx-0x94b5807],0xd7
  40eb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb21:	sahf   
  40eb22:	mov    eax,0x93a5ed68
  40eb27:	(bad)  
  40eb28:	scas   al,BYTE PTR es:[edi]
  40eb29:	xor    eax,0x2d318f9b
  40eb2e:	hlt    
  40eb2f:	icebp  
  40eb30:	clc    
  40eb31:	aad    0x3
  40eb33:	mov    dl,0xca
  40eb35:	cs stc 
  40eb37:	(bad)  
  40eb38:	call   DWORD PTR [eax]
  40eb3a:	mov    bh,0x26
  40eb3c:	ror    al,cl
  40eb3e:	add    DWORD PTR [edi+0x2c],esp
  40eb41:	or     DWORD PTR [edi+eax*4],0xfb4bc02c
  40eb48:	push   edx
  40eb49:	lods   eax,DWORD PTR ds:[esi]
  40eb4a:	std    
  40eb4b:	bound  esp,QWORD PTR [ebx*8-0x36d3b676]
  40eb52:	aad    0x88
  40eb54:	ja     0x40eb21
  40eb56:	ja     0x40ebd7
  40eb58:	cmp    DWORD PTR [eax],ebx
  40eb5a:	cs jmp 0xf320:0x296a6a8d
  40eb62:	xchg   ebx,eax
  40eb63:	xlat   BYTE PTR ds:[ebx]
  40eb64:	fimul  WORD PTR [ecx-0x60efdb19]
  40eb6a:	int3   
  40eb6b:	xchg   esi,eax
  40eb6c:	push   edx
  40eb6d:	jb     0x40eb61
  40eb6f:	(bad)  
  40eb70:	in     eax,dx
  40eb71:	adc    al,0xbc
  40eb73:	push   ss
  40eb74:	in     al,0xf0
  40eb76:	iret   
  40eb77:	inc    edi
  40eb78:	jnp    0x40eb19
  40eb7a:	sub    eax,0x8d7d909e
  40eb7f:	test   edi,edx
  40eb81:	lea    ecx,[ecx+0x27]
  40eb84:	lods   eax,DWORD PTR ds:[esi]
  40eb85:	jmp    0x40ebbf
  40eb87:	adc    ah,BYTE PTR [eax]
  40eb89:	test   ah,0x33
  40eb8c:	cmp    DWORD PTR [edx-0x70861f3f],ebp
  40eb92:	iret   
  40eb93:	in     al,0x6a
  40eb95:	leave  
  40eb96:	or     BYTE PTR [edi-0x73],al
  40eb99:	loop   0x40eb5c
  40eb9b:	rcr    DWORD PTR [ebp-0xc],1
  40eb9e:	int3   
  40eb9f:	out    dx,eax
  40eba0:	int    0x8f
  40eba2:	dec    esp
  40eba3:	out    0x80,al
  40eba5:	xor    DWORD PTR [edi],ebp
  40eba7:	sbb    BYTE PTR [edx-0x231d6bf9],dh
  40ebad:	call   0x9a3107b1
  40ebb2:	adc    BYTE PTR [ecx-0x24],dh
  40ebb5:	rcr    BYTE PTR [eax],cl
  40ebb7:	xor    DWORD PTR [esi],edx
  40ebb9:	imul   esi,DWORD PTR gs:[esi+esi*2],0xdfb82354
  40ebc1:	rol    DWORD PTR [eax-0x7bb85cd7],1
  40ebc7:	scas   eax,DWORD PTR es:[edi]
  40ebc8:	sub    al,BYTE PTR [esi-0x576d2667]
  40ebce:	jecxz  0x40ec28
  40ebd0:	in     al,dx
  40ebd1:	imul   eax,DWORD PTR [ecx+0x72],0x9e8c05f1
  40ebd8:	std    
  40ebd9:	sbb    al,0xdb
  40ebdb:	(bad)  
  40ebdc:	or     al,dl
  40ebde:	retf   
  40ebdf:	int    0xa2
  40ebe1:	push   esp
  40ebe2:	cmp    eax,0x4d97a2e2
  40ebe7:	xor    BYTE PTR [eax],0x5b
  40ebea:	aaa    
  40ebeb:	mov    esp,?
  40ebed:	jle    0x40ec52
  40ebef:	call   DWORD PTR [esi]
  40ebf1:	add    eax,0x7ebb78ff
  40ebf6:	push   esp
  40ebf7:	add    cl,BYTE PTR [edx]
  40ebf9:	push   edi
  40ebfa:	ror    BYTE PTR [esi-0x46],1
  40ebfd:	retf   
  40ebfe:	dec    ebx
  40ebff:	mov    dl,0xbe
  40ec01:	aam    0x91
  40ec03:	push   ebx
  40ec04:	arpl   ax,bx
  40ec06:	iret   
  40ec07:	jne    0x40ebf8
  40ec09:	nop
  40ec0a:	call   0xc0f1193a
  40ec0f:	pusha  
  40ec10:	rcl    dl,1
  40ec12:	fst    QWORD PTR [edi-0x56]
  40ec15:	xchg   edi,eax
  40ec16:	iret   
  40ec17:	jle    0x40ec36
  40ec19:	cmp    ebx,eax
  40ec1b:	mov    eax,0x3f66397c
  40ec20:	adc    BYTE PTR [ebx+0x18603f05],al
  40ec26:	jle    0x40ec55
  40ec28:	cmp    ch,BYTE PTR [ecx]
  40ec2a:	mov    WORD PTR [edi-0x1f7ac62a],fs
  40ec30:	mov    eax,0xabe3c9c6
  40ec35:	fwait
  40ec36:	sbb    al,0xc7
  40ec38:	gs pop ebx
  40ec3a:	pop    es
  40ec3b:	not    BYTE PTR [ebx-0x1e]
  40ec3e:	add    eax,0xf98bae0d
  40ec43:	cmp    BYTE PTR [edx-0x50d9a4d2],bh
  40ec49:	fcmovu st,st(4)
  40ec4b:	add    BYTE PTR [edx-0x80],dl
  40ec4e:	xor    bh,BYTE PTR [edi+eiz*2+0x5c]
  40ec52:	sbb    DWORD PTR ds:0x9477d767,esi
  40ec58:	mov    al,0x9f
  40ec5a:	push   ss
  40ec5b:	mov    eax,0x7925d019
  40ec60:	jno    0x40ecc5
  40ec62:	fisttp QWORD PTR [ebx+0x33]
  40ec65:	and    BYTE PTR [edi],0xfb
  40ec68:	cmp    BYTE PTR [ebx],cl
  40ec6a:	sbb    eax,0x31c84c10
  40ec6f:	call   0x456f:0x75c11878
  40ec76:	int3   
  40ec77:	pop    ss
  40ec78:	div    edx
  40ec7a:	pop    ebp
  40ec7b:	loopne 0x40ec7b
  40ec7d:	inc    edx
  40ec7e:	xchg   DWORD PTR [eax],ebx
  40ec80:	inc    ebp
  40ec81:	dec    ecx
  40ec82:	(bad)  
  40ec83:	fs xor cl,bh
  40ec86:	lds    esp,FWORD PTR [edi+0x3c]
  40ec89:	xor    al,0xb
  40ec8b:	ror    al,1
  40ec8d:	outs   dx,BYTE PTR ds:[esi]
  40ec8e:	mov    ebp,0xeff5218a
  40ec93:	loope  0x40ecd0
  40ec95:	jl     0x40ecd8
  40ec97:	dec    ebp
  40ec98:	xchg   BYTE PTR [eax+edx*2],al
  40ec9b:	mov    eax,0xe106f34f
  40eca0:	imul   esi,edi,0xa081a4f1
  40eca6:	leave  
  40eca7:	pop    ebp
  40eca8:	(bad)  
  40eca9:	mov    ds:0x332f2522,al
  40ecae:	movlps xmm3,QWORD PTR [ebx-0x1]
  40ecb2:	jae    0x40ec3b
  40ecb4:	(bad)  
  40ecb5:	in     eax,0x76
  40ecb7:	sub    al,0xf2
  40ecb9:	pushf  
  40ecba:	lock mov ebp,0x49669350
  40ecc0:	rcr    DWORD PTR [ecx+edi*1-0x7d7e18da],0x36
  40ecc8:	add    DWORD PTR [esi],ebp
  40ecca:	retf   0xc704
  40eccd:	pop    ss
  40ecce:	jmp    0x9914:0x76428955
  40ecd5:	add    bh,BYTE PTR [edi-0x35]
  40ecd8:	sub    ebx,DWORD PTR [edx-0x2e]
  40ecdb:	or     bl,dh
  40ecdd:	cdq    
  40ecde:	hlt    
  40ecdf:	mov    ebp,0x2ad47d6f
  40ece4:	add    eax,0xa3df8b23
  40ece9:	jle    0x40ed4b
  40eceb:	(bad)  
  40ecec:	mov    dh,0xe
  40ecee:	cld    
  40ecef:	into   
  40ecf0:	ror    DWORD PTR [ebp+0x3f],cl
  40ecf3:	mov    dl,ah
  40ecf5:	mov    ch,0x32
  40ecf7:	add    esi,ebx
  40ecf9:	test   al,0xc8
  40ecfb:	(bad)  
  40ecfc:	enter  0xcd9d,0xcc
  40ed00:	retf   
  40ed01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed02:	jae    0x40ecf6
  40ed04:	add    eax,DWORD PTR [ebp+0x77]
  40ed07:	sub    cl,ah
  40ed09:	mov    al,ds:0xa484a073
  40ed0e:	ret    0xbf46
  40ed11:	stos   DWORD PTR es:[edi],eax
  40ed12:	or     DWORD PTR [esi],0xffffffa2
  40ed15:	xor    dl,BYTE PTR [esi-0x7ec5fd58]
  40ed1b:	call   0x1b59b381
  40ed20:	sub    BYTE PTR [ebp+0x96b6f7],0x3f
  40ed27:	and    al,0x14
  40ed29:	xchg   ebp,eax
  40ed2a:	in     eax,0x33
  40ed2c:	ret    
  40ed2d:	or     ebx,esp
  40ed2f:	lods   eax,DWORD PTR ds:[esi]
  40ed30:	mov    ebp,0xc778464d
  40ed35:	or     ch,ah
  40ed37:	mov    bl,0x3e
  40ed39:	xchg   DWORD PTR [ebx+0x3c],esi
  40ed3c:	and    dh,cl
  40ed3e:	aad    0xd1
  40ed40:	fs test al,0xbe
  40ed43:	(bad)  
  40ed44:	mul    DWORD PTR [eax+eax*2-0xb]
  40ed48:	shr    DWORD PTR [edx+0x45],cl
  40ed4b:	dec    edi
  40ed4c:	xchg   edx,eax
  40ed4d:	into   
  40ed4e:	test   esp,edi
  40ed50:	in     al,dx
  40ed51:	movzx  edi,BYTE PTR [esi-0x26]
  40ed55:	adc    BYTE PTR [ecx],0x79
  40ed58:	loope  0x40ed55
  40ed5a:	ins    BYTE PTR es:[edi],dx
  40ed5b:	shr    BYTE PTR [ebp+ecx*8-0x469eaf5a],0x31
  40ed63:	and    esp,DWORD PTR [eax]
  40ed65:	out    0x8,eax
  40ed67:	mov    DWORD PTR [edi-0x3b],esp
  40ed6a:	mov    eax,0x446a6795
  40ed6f:	dec    ebp
  40ed70:	aam    0xda
  40ed72:	lock xchg edx,eax
  40ed74:	mov    ebx,DWORD PTR [esi]
  40ed76:	inc    ebx
  40ed77:	jb     0x40ede1
  40ed79:	loope  0x40edf0
  40ed7b:	mov    dh,0xb9
  40ed7d:	mov    ds:0x6ab92d85,al
  40ed82:	fnstsw WORD PTR [ebp+0x77]
  40ed85:	cmp    eax,0x504288f6
  40ed8a:	mov    esi,0x878c254e
  40ed8f:	test   al,0x61
  40ed91:	shl    BYTE PTR [esi-0x5d],0x88
  40ed95:	bound  ebp,QWORD PTR [edx]
  40ed97:	dec    ebp
  40ed98:	out    dx,al
  40ed99:	test   BYTE PTR [eax],0x36
  40ed9c:	pusha  
  40ed9d:	imul   esp,DWORD PTR ds:0x3c4c0ad0,0xc118424b
  40eda7:	mov    ebp,0xa0d849a6
  40edac:	mov    esp,0x511a85e6
  40edb1:	push   edx
  40edb2:	push   0xffffffc6
  40edb4:	push   ss
  40edb5:	neg    BYTE PTR [esi+0xb76a3fb]
  40edbb:	sbb    bh,dl
  40edbd:	lods   al,BYTE PTR ds:[esi]
  40edbe:	push   eax
  40edbf:	ror    DWORD PTR [ecx-0x33d3f787],0xb4
  40edc6:	loopne 0x40eda3
  40edc8:	nop
  40edc9:	mov    dl,0x46
  40edcb:	sbb    esp,DWORD PTR [esi-0x2cf7858f]
  40edd1:	(bad)  [ebx+0x34476e79]
  40edd7:	inc    ebx
  40edd8:	or     DWORD PTR [edi+0x57],ebp
  40eddb:	mov    bl,0x3f
  40eddd:	xor    edx,DWORD PTR [edi+0x2b55f3f1]
  40ede3:	cli    
  40ede4:	sub    bh,ch
  40ede6:	jmp    0x3a23cb3d
  40edeb:	loop   0x40edcd
  40eded:	add    DWORD PTR [eax+0x34101401],0x23
  40edf4:	cmp    WORD PTR [ebx],cx
  40edf7:	mov    WORD PTR [esi+ebx*4+0x2],ds
  40edfb:	lods   eax,DWORD PTR ds:[esi]
  40edfc:	mov    eax,ds:0xa5e0ff0f
  40ee01:	jmp    0x2b88e4b8
  40ee06:	xchg   ecx,eax
  40ee07:	push   0x9b9b7f5a
  40ee0c:	jmp    0x40ee5b
  40ee0e:	ror    BYTE PTR [ecx+0x55],cl
  40ee11:	mov    esp,0x4b92d633
  40ee16:	jne    0x40ede5
  40ee18:	gs adc eax,0x54d8f3ef
  40ee1e:	dec    esp
  40ee1f:	data16 outs dx,BYTE PTR ds:[esi]
  40ee21:	pushf  
  40ee22:	inc    esp
  40ee23:	in     al,dx
  40ee24:	fistp  QWORD PTR [eax+0x6e]
  40ee27:	inc    ebp
  40ee28:	add    dl,BYTE PTR [eax-0x7a]
  40ee2b:	mov    bl,0x4b
  40ee2d:	retf   0x620e
  40ee30:	pop    edx
  40ee31:	popa   
  40ee32:	push   cs
  40ee33:	xchg   al,dh
  40ee35:	ret    0x2516
  40ee38:	xor    edx,DWORD PTR [esi-0x5b]
  40ee3b:	or     dl,dl
  40ee3d:	xor    eax,DWORD PTR [edi]
  40ee3f:	loop   0x40ee22
  40ee41:	aaa    
  40ee42:	add    al,0x69
  40ee44:	das    
  40ee45:	jmp    0xa09fd65f
  40ee4a:	or     al,0x8d
  40ee4c:	xchg   esp,eax
  40ee4d:	add    al,0xa0
  40ee4f:	dec    ebx
  40ee50:	mov    ebx,0xb278e30b
  40ee55:	jmp    0x999:0xd3468bbb
  40ee5c:	das    
  40ee5d:	xor    ecx,DWORD PTR [ecx]
  40ee5f:	aad    0x11
  40ee61:	pop    esi
  40ee62:	mov    ss,WORD PTR ds:0x8061b81f
  40ee68:	dec    edi
  40ee69:	(bad)  
  40ee6a:	adc    ecx,ecx
  40ee6c:	lods   al,BYTE PTR ds:[esi]
  40ee6d:	and    ch,BYTE PTR [esi-0x407bc89c]
  40ee73:	sbb    DWORD PTR [ecx+0x3e],0xffffff94
  40ee77:	mov    gs,WORD PTR [ecx]
  40ee79:	xchg   esi,eax
  40ee7a:	mov    es,esi
  40ee7c:	in     eax,dx
  40ee7d:	(bad)  
  40ee7e:	cmc    
  40ee7f:	mov    eax,ds:0x865025e9
  40ee84:	xchg   BYTE PTR [ebx-0x174d9a7a],ah
  40ee8a:	test   DWORD PTR [edx],edx
  40ee8c:	test   eax,0x4c3d9e1f
  40ee91:	push   0x11baba61
  40ee96:	psubsw mm2,QWORD PTR [eax+0x14841f40]
  40ee9d:	adc    DWORD PTR [edx+0x346cec86],edi
  40eea3:	adc    al,0xfc
  40eea5:	pop    ebp
  40eea6:	xor    eax,0x5b6e7651
  40eeab:	and    cl,BYTE PTR [esi]
  40eead:	sub    esp,ebp
  40eeaf:	sbb    bl,BYTE PTR [edx-0x52]
  40eeb2:	adc    eax,0x5b019898
  40eeb7:	es in  al,dx
  40eeb9:	lods   eax,DWORD PTR ds:[esi]
  40eebb:	in     al,dx
  40eebc:	jecxz  0x40ee86
  40eebe:	jecxz  0x40ee55
  40eec0:	push   es
  40eec1:	xchg   ebp,eax
  40eec2:	lods   al,BYTE PTR ds:[esi]
  40eec3:	pop    ebx
  40eec4:	lods   al,BYTE PTR ds:[esi]
  40eec5:	loopne 0x40ee79
  40eec7:	imul   edx,esp,0x6e72c474
  40eecd:	into   
  40eece:	rcr    DWORD PTR [eax-0x1c13949f],1
  40eed4:	pop    edi
  40eed5:	add    DWORD PTR [edi-0x3c],ebx
  40eed8:	mov    eax,ds:0x9a27ddb1
  40eedd:	pop    esi
  40eede:	fdiv   DWORD PTR [edi+0x4e]
  40eee1:	fxch   st(7)
  40eee3:	loop   0x40eefc
  40eee5:	cwde   
  40eee6:	add    ch,BYTE PTR [eax]
  40eee8:	inc    esp
  40eee9:	sbb    DWORD PTR [edi-0x444b4aac],esp
  40eeef:	(bad)  
  40eef0:	jmp    0x6db9:0x6e19df10
  40eef7:	jne    0x40ee98
  40eef9:	in     al,0x7c
  40eefb:	add    esi,DWORD PTR [ebp+0x21]
  40eefe:	jge    0x40eeb0
  40ef00:	mov    edi,0x95ae7afc
  40ef05:	push   edi
  40ef06:	bound  ecx,QWORD PTR [edx]
  40ef08:	jae    0x40eeb7
  40ef0a:	lock and cl,BYTE PTR [ebx+0x4cbd04de]
  40ef11:	lahf   
  40ef12:	inc    esp
  40ef13:	and    bl,BYTE PTR [ebp+0x7f]
  40ef16:	lds    edx,FWORD PTR [ecx]
  40ef18:	out    dx,al
  40ef19:	mov    ecx,0x3e866abb
  40ef1e:	push   ebp
  40ef1f:	cld    
  40ef20:	push   ebp
  40ef21:	mov    ebx,0x8dea9e16
  40ef26:	cwde   
  40ef27:	stos   DWORD PTR es:[edi],eax
  40ef28:	sbb    eax,0xf1aac64c
  40ef2d:	xchg   DWORD PTR [edi+0x5f],esp
  40ef30:	xlat   BYTE PTR ds:[ebx]
  40ef31:	cmp    esp,edx
  40ef33:	ins    DWORD PTR es:[edi],dx
  40ef34:	inc    edi
  40ef35:	add    DWORD PTR [ecx+0x763bc19f],esi
  40ef3b:	dec    esp
  40ef3c:	test   eax,0xe1236e6f
  40ef41:	dec    esi
  40ef42:	ds cdq 
  40ef44:	cmp    edi,DWORD PTR [edx]
  40ef46:	call   0x8fba:0xe9b6ca1a
  40ef4d:	xlat   BYTE PTR ds:[ebx]
  40ef4e:	and    DWORD PTR [esi],eax
  40ef50:	pop    ds
  40ef51:	pop    ebp
  40ef52:	jg     0x40efd1
  40ef54:	inc    ecx
  40ef55:	push   esp
  40ef56:	and    BYTE PTR [ebp+0x42ed0e9c],bl
  40ef5c:	push   0xffffffba
  40ef5e:	test   al,0x6e
  40ef60:	mov    ah,0x34
  40ef62:	mov    bh,0x77
  40ef64:	je     0xdaa3a518
  40ef6a:	mov    dl,0xc2
  40ef6c:	xor    ebx,esi
  40ef6e:	pop    ebx
  40ef6f:	repz pop esp
  40ef71:	montmul (bad)
  40ef72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef73:	(bad)  
  40ef74:	cdq    
  40ef75:	sbb    eax,DWORD PTR [esi+edx*4-0x37]
  40ef79:	jp     0x40efec
  40ef7b:	mov    eax,0x2876520b
  40ef80:	fsubr  QWORD PTR [eax-0x40bd167d]
  40ef86:	xchg   ebp,eax
  40ef87:	inc    edx
  40ef88:	arpl   si,sp
  40ef8a:	sbb    ebp,edx
  40ef8c:	aaa    
  40ef8d:	cmp    dl,0x40
  40ef90:	adc    DWORD PTR [edx-0x15],ecx
  40ef93:	jb     0x40efa9
  40ef95:	inc    edi
  40ef96:	xchg   DWORD PTR [ebx+ebx*2-0x713e038d],edx
  40ef9d:	xchg   ecx,eax
  40ef9e:	popf   
  40ef9f:	sbb    al,BYTE PTR [edx-0x7c]
  40efa2:	push   edx
  40efa3:	mov    DWORD PTR [edx-0xe089ff2],edi
  40efa9:	adc    DWORD PTR [edi+0x2e],esp
  40efac:	int3   
  40efad:	add    BYTE PTR [edi-0x43],0x3
  40efb1:	shl    DWORD PTR [esi+0x36db292b],1
  40efb7:	xor    ebx,DWORD PTR [esi+0x150787c0]
  40efbd:	xor    cl,BYTE PTR [edi]
  40efbf:	sbb    al,0x73
  40efc1:	adc    al,BYTE PTR [esi+0x7b]
  40efc4:	cmp    al,0x28
  40efc6:	aam    0x32
  40efc8:	shr    esi,0x96
  40efcb:	and    al,al
  40efcd:	fcomi  st,st(4)
  40efcf:	pop    esi
  40efd0:	and    dh,BYTE PTR [eax+0x76]
  40efd3:	add    BYTE PTR [eax+0x630baa5f],cl
  40efd9:	xchg   ecx,eax
  40efda:	jl     0x40f041
  40efdc:	pop    ecx
  40efdd:	mov    eax,0x51f140dc
  40efe2:	dec    esp
  40efe3:	test   ah,bl
  40efe5:	jmp    0x40efb9
  40efe7:	jle    0x40f04c
  40efe9:	jb     0x40eff6
  40efeb:	add    esi,DWORD PTR [ecx-0x4c9bbdee]
  40eff1:	pop    edi
  40eff2:	test   DWORD PTR [ebp+0xb],0xff564004
  40eff9:	sub    bh,ch
  40effb:	cdq    
  40effc:	and    eax,0xb1a307ca
  40f001:	inc    ecx
  40f002:	add    edx,edi
  40f004:	pushf  
  40f005:	les    esi,FWORD PTR [edx+0x2c]
  40f008:	clc    
  40f009:	dec    ebp
  40f00a:	je     0x40f087
  40f00c:	les    edx,FWORD PTR [edx]
  40f00e:	sar    BYTE PTR ds:0x56b0fe1e,0x52
  40f015:	test   esi,eax
  40f017:	pop    ebx
  40f018:	jae    0x40eff7
  40f01a:	aam    0xdf
  40f01c:	outs   dx,DWORD PTR ds:[esi]
  40f01d:	shl    BYTE PTR [esi],0xab
  40f020:	js     0x40f005
  40f022:	mov    bl,ah
  40f024:	call   0x9c35:0x3a48a50b
  40f02b:	xor    al,0x72
  40f02d:	mov    al,0x3d
  40f02f:	mov    ch,0x6d
  40f031:	cli    
  40f032:	adc    eax,0x237e3eac
  40f037:	scas   eax,DWORD PTR es:[edi]
  40f038:	sbb    al,0xcf
  40f03a:	sub    ecx,edi
  40f03c:	das    
  40f03d:	adc    BYTE PTR [ebx+0x55ad98ce],al
  40f043:	in     eax,0xd1
  40f045:	neg    edx
  40f047:	imul   esi,DWORD PTR ds:0x5ee4a596,0xb7f3257f
  40f051:	rcr    BYTE PTR [ebx-0xe761b08],cl
  40f057:	mov    ebx,0xa61aa57
  40f05c:	dec    esi
  40f05d:	add    DWORD PTR [edx-0x76],0x5
  40f061:	adc    al,0x86
  40f063:	js     0x40f053
  40f065:	push   ds
  40f066:	or     ebx,DWORD PTR [ebx+0x4a127e28]
  40f06c:	sub    eax,0x6ce51e31
  40f071:	pop    ebp
  40f072:	cwde   
  40f073:	push   ebp
  40f074:	ret    0x377e
  40f077:	fild   WORD PTR [ebx]
  40f079:	ja     0x40f0ca
  40f07b:	scas   al,BYTE PTR es:[edi]
  40f07c:	(bad)  
  40f07e:	sub    dh,BYTE PTR [edx-0x5c]
  40f081:	sub    esp,DWORD PTR [edi]
  40f083:	mov    ebp,edi
  40f085:	ret    0x26b3
  40f088:	sbb    ebp,DWORD PTR [ebp+0xb]
  40f08b:	push   0xfffffff4
  40f08d:	stos   BYTE PTR es:[edi],al
  40f08e:	push   eax
  40f08f:	retf   
  40f090:	push   0xffffffa4
  40f092:	push   0xfffffff8
  40f094:	pop    edx
  40f095:	rol    BYTE PTR [esp+ecx*2],0xa6
  40f099:	jg     0x40f04d
  40f09b:	es popa 
  40f09d:	out    0xba,eax
  40f09f:	fadd   DWORD PTR [ebx]
  40f0a1:	scas   eax,DWORD PTR es:[edi]
  40f0a2:	out    dx,eax
  40f0a3:	mov    esi,0xdd6faf26
  40f0a8:	inc    edx
  40f0a9:	lock push esp
  40f0ab:	xchg   edx,eax
  40f0ac:	inc    edx
  40f0ad:	xor    eax,0xad12b464
  40f0b2:	push   esp
  40f0b3:	add    eax,ebp
  40f0b5:	inc    edx
  40f0b6:	or     BYTE PTR [edi],dl
  40f0b8:	popf   
  40f0b9:	inc    esi
  40f0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0bb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bd:	(bad)  
  40f0be:	jmp    0xfdda:0x393511c7
  40f0c5:	lock push ecx
  40f0c7:	xlat   BYTE PTR ds:[ebx]
  40f0c8:	adc    BYTE PTR cs:[edx-0x33],ch
  40f0cc:	add    ecx,DWORD PTR [ebx]
  40f0ce:	mov    eax,ds:0x6c71ddc1
  40f0d3:	xchg   ebp,eax
  40f0d4:	cmp    al,0x3d
  40f0d6:	dec    edx
  40f0d7:	adc    al,0xd0
  40f0d9:	mov    esi,?
  40f0db:	and    DWORD PTR [edx+0x8f9bf67],esp
  40f0e1:	sub    ebx,esi
  40f0e3:	lahf   
  40f0e4:	jae    0x40f10c
  40f0e6:	scas   eax,DWORD PTR es:[edi]
  40f0e7:	ret    
  40f0e8:	in     eax,0xfc
  40f0ea:	repz add BYTE PTR [esi-0x3c33392e],bl
  40f0f1:	leave  
  40f0f2:	and    DWORD PTR [eax-0x5084abe1],ecx
  40f0f8:	shl    DWORD PTR [ebx-0x450e4074],1
  40f0fe:	xor    eax,0x8eada57c
  40f103:	xor    BYTE PTR [ebx-0x69544800],dl
  40f109:	mov    ah,0x50
  40f10b:	push   ss
  40f10c:	test   al,0x9c
  40f10e:	test   al,0xcd
  40f110:	sbb    ebx,esi
  40f112:	cmp    eax,0x1755b28f
  40f117:	repz test BYTE PTR ds:0xe20a6e1b,al
  40f11e:	push   cs
  40f11f:	leave  
  40f120:	(bad)  
  40f121:	inc    al
  40f123:	loope  0x40f133
  40f125:	gs cmp al,0x2d
  40f128:	int3   
  40f129:	adc    BYTE PTR [esi+0x13],cl
  40f12c:	cmp    al,BYTE PTR [eax*8+0x1eeb0b7b]
  40f133:	fimul  WORD PTR [esi+0x43414bdb]
  40f139:	scas   al,BYTE PTR es:[edi]
  40f13a:	sub    dl,bl
  40f13c:	push   edx
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	pop    edx
  40fa17:	test   dh,bh
  40fa19:	or     al,0x74
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	enter  0x902a,0x51
  40fa26:	cli    
  40fa27:	sbb    esp,ebx
  40fa29:	pop    es
  40fa2a:	add    al,0x78
  40fa2c:	jle    0x40fa94
  40fa2e:	(bad)  
  40fa2f:	hlt    
  40fa30:	sti    
  40fa31:	js     0x40faab
  40fa33:	cmp    DWORD PTR [eax+0x43955f66],ecx
  40fa39:	ja     0x40f9ed
  40fa3b:	mov    ds:0xab8ace0d,al
  40fa40:	sbb    eax,0x84abc855
  40fa45:	lahf   
  40fa46:	xor    esi,ecx
  40fa48:	test   al,0xf7
  40fa4a:	dec    esi
  40fa4b:	mov    esi,0xc3d8fe05
  40fa50:	out    dx,eax
  40fa51:	loop   0x40fa60
  40fa53:	xor    al,0x94
  40fa55:	mov    ah,0x38
  40fa57:	sbb    DWORD PTR [edi+0x73],ecx
  40fa5a:	xor    bh,dh
  40fa5c:	out    dx,eax
  40fa5d:	and    al,0x83
  40fa5f:	dec    ebx
  40fa60:	out    dx,al
  40fa61:	mov    bl,0x38
  40fa63:	fisttp DWORD PTR [edi]
  40fa65:	fbld   TBYTE PTR [eax+0x0]
  40fa68:	cdq    
  40fa69:	add    al,0xc
  40fa6b:	(bad)
  40fa6e:	pop    edi
  40fa6f:	xchg   BYTE PTR ds:[ecx],bl
  40fa72:	sbb    eax,0x99f045a0
  40fa77:	inc    ecx
  40fa78:	xor    BYTE PTR [ebx-0x30],ch
  40fa7b:	popa   
  40fa7c:	inc    ebx
  40fa7d:	mov    WORD PTR [edi-0x61],?
  40fa80:	fmul   DWORD PTR [eax-0x5f]
  40fa83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa84:	pop    ss
  40fa85:	jmp    0x40fa80
  40fa87:	clc    
  40fa88:	test   DWORD PTR [edi-0x59],esp
  40fa8b:	stc    
  40fa8c:	int    0x98
  40fa8e:	ja     0x40faa5
  40fa90:	inc    esp
  40fa91:	sbb    DWORD PTR [ecx+0x68],ebp
  40fa94:	pop    esp
  40fa95:	and    al,0x95
  40fa97:	mov    edx,0x49ba53bd
  40fa9c:	inc    esi
  40fa9d:	adc    ch,dl
  40fa9f:	scas   al,BYTE PTR es:[edi]
  40faa0:	pop    eax
  40faa1:	stc    
  40faa2:	cmp    BYTE PTR ds:0x8793f10e,dl
  40faa8:	or     dh,BYTE PTR [edx*8+0x4fe28a55]
  40faaf:	xchg   edi,eax
  40fab0:	xchg   edi,eax
  40fab1:	xchg   ebx,eax
  40fab2:	and    ecx,DWORD PTR [ebx+esi*8-0x693952c8]
  40fab9:	test   DWORD PTR [edx],ebx
  40fabb:	pop    eax
  40fabc:	mov    edx,0x3ea3cc4f
  40fac1:	addr16 mov edx,0x99ffb9ff
  40fac7:	push   edx
  40fac8:	ror    cl,1
  40faca:	xchg   esi,eax
  40facb:	ja     0x40fb3d
  40facd:	(bad)  
  40face:	mov    esp,eax
  40fad0:	inc    esp
  40fad1:	jo     0x40fb0e
  40fad3:	adc    edi,esp
  40fad5:	in     eax,0xc6
  40fad7:	fchs   
  40fad9:	aaa    
  40fada:	leave  
  40fadb:	and    esi,ebp
  40fadd:	sbb    bh,BYTE PTR [ecx]
  40fadf:	jp     0x40faf5
  40fae1:	xchg   esi,eax
  40fae2:	mov    edx,0x6fec781f
  40fae7:	mov    edi,0xe5b173c5
  40faec:	popa   
  40faed:	test   BYTE PTR [ebp+0x4d],dh
  40faf0:	cwde   
  40faf1:	push   ss
  40faf2:	pop    ebx
  40faf3:	ins    DWORD PTR es:[edi],dx
  40faf4:	iret   
  40faf5:	sub    eax,0x8f56b6b1
  40fafa:	ret    0x875c
  40fafd:	push   esi
  40fafe:	adc    DWORD PTR [eax-0x2],ecx
  40fb01:	rol    DWORD PTR ds:0xcccd7d40,0x83
  40fb08:	inc    edx
  40fb09:	push   0xffffffe4
  40fb0b:	(bad)  
  40fb0c:	mov    ah,0xcb
  40fb0e:	push   ebx
  40fb0f:	or     al,0x9e
  40fb11:	enter  0x92bb,0xc5
  40fb15:	mov    al,ds:0xfa48ddc5
  40fb1a:	sti    
  40fb1b:	cmp    al,0x57
  40fb1d:	inc    eax
  40fb1e:	fstp   DWORD PTR [eax-0x3478eb5a]
  40fb24:	cmc    
  40fb25:	mov    esi,0xd02b2e6d
  40fb2a:	mov    edi,0xc2a4ea13
  40fb2f:	je     0x40fb29
  40fb31:	jb     0x40fab6
  40fb33:	test   al,0xbc
  40fb35:	mov    ecx,0x1e9d933d
  40fb3a:	or     DWORD PTR [edx],esp
  40fb3c:	xor    al,BYTE PTR [edi+0x5d]
  40fb3f:	add    al,0x7c
  40fb41:	jg     0x40fb0c
  40fb43:	add    DWORD PTR [eax],edi
  40fb45:	(bad)
  40fb48:	(bad)  
  40fb49:	mov    edx,0x13dd60fa
  40fb4e:	xchg   ebp,eax
  40fb4f:	repnz inc esi
  40fb51:	push   ds
  40fb52:	pop    es
  40fb53:	je     0x40fb68
  40fb55:	rcr    BYTE PTR [ebp-0x52],0x70
  40fb59:	je     0x40fbc6
  40fb5b:	(bad)  
  40fb5c:	ret    0x1490
  40fb5f:	loope  0x40fbcd
  40fb61:	into   
  40fb62:	pop    esi
  40fb63:	(bad)  
  40fb64:	sbb    al,0xb
  40fb66:	push   cs
  40fb67:	mov    dl,0xc2
  40fb69:	lds    edx,FWORD PTR [esi-0x7d]
  40fb6c:	pop    ss
  40fb6d:	dec    ebx
  40fb6e:	and    eax,0x7aa980e5
  40fb73:	loopne 0x40fb02
  40fb75:	mov    eax,ds:0x7f3c64ef
  40fb7a:	sbb    BYTE PTR [edi],ah
  40fb7c:	push   cs
  40fb7d:	in     eax,0x9b
  40fb7f:	adc    DWORD PTR [eax+edi*2+0x51],edx
  40fb83:	shr    DWORD PTR [eax-0x4de0828],cl
  40fb89:	std    
  40fb8a:	xor    bl,BYTE PTR [edx+0x51]
  40fb8d:	pop    edi
  40fb8e:	nop
  40fb8f:	mov    ds:0x7d5b5fef,al
  40fb94:	sbb    dl,ah
  40fb96:	dec    edx
  40fb97:	lea    ebx,[eax-0x751d9e36]
  40fb9d:	out    dx,al
  40fb9e:	inc    ebx
  40fb9f:	(bad)  
  40fba0:	out    dx,eax
  40fba1:	push   esp
  40fba2:	mov    ss,WORD PTR [esi]
  40fba4:	shr    BYTE PTR [ebp+0x5ccc5c78],cl
  40fbaa:	dec    ebx
  40fbab:	into   
  40fbac:	pop    edi
  40fbad:	mov    eax,ds:0x5c17d121
  40fbb2:	mov    bl,0x24
  40fbb4:	fadd   DWORD PTR [ebp-0x70]
  40fbb7:	xchg   edi,eax
  40fbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb9:	inc    DWORD PTR [ecx-0x6b]
  40fbbc:	cmp    al,0xbb
  40fbbe:	pop    edi
  40fbbf:	imul   eax,DWORD PTR [ecx],0xc87cfc1b
  40fbc5:	les    ebx,FWORD PTR [edi]
  40fbc7:	test   DWORD PTR [eax+0x3580620e],0x4ebb1210
  40fbd1:	mov    bl,0xbf
  40fbd3:	jg     0x40fbac
  40fbd5:	inc    esi
  40fbd6:	mov    eax,ds
  40fbd8:	popa   
  40fbd9:	adc    BYTE PTR [ebx-0x7dfe2711],0xb4
  40fbe0:	add    BYTE PTR [edx+0x35],0x58
  40fbe4:	call   0xfc9b:0x52daba8f
  40fbeb:	ja     0x40fbcc
  40fbed:	ror    DWORD PTR [edi-0x56],cl
  40fbf0:	aam    0x7d
  40fbf2:	lea    ebx,[ebp-0x1d]
  40fbf5:	imul   eax,DWORD PTR [edi],0xe
  40fbf8:	daa    
  40fbf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbfa:	shr    DWORD PTR [esi+0x7c],cl
  40fbfd:	retf   0x728
  40fc00:	aam    0x2
  40fc02:	ja     0x40fbb5
  40fc04:	pop    es
  40fc05:	xor    DWORD PTR [eax],eax
  40fc07:	sbb    dh,al
  40fc09:	push   ecx
  40fc0a:	int    0x8e
  40fc0c:	mov    esi,0xf19f0b6d
  40fc11:	int    0x32
  40fc13:	enter  0xa7f,0x7
  40fc17:	jecxz  0x40fba8
  40fc19:	cli    
  40fc1a:	(bad)  
  40fc1b:	cmp    ch,BYTE PTR [ebp-0xcd29d7b]
  40fc21:	push   edx
  40fc22:	cld    
  40fc23:	jl     0x40fc33
  40fc25:	mov    dh,0x48
  40fc27:	dec    esi
  40fc28:	in     eax,0x7
  40fc2a:	dec    edx
  40fc2b:	add    eax,0xbc0438f6
  40fc30:	push   edx
  40fc31:	jnp    0x40fbf8
  40fc33:	jbe    0x40fc92
  40fc35:	sub    eax,DWORD PTR [edx]
  40fc37:	iret   
  40fc38:	test   eax,0x9a2b0830
  40fc3d:	jmp    0xd39a:0x108d3286
  40fc44:	push   es
  40fc45:	sub    bh,BYTE PTR [edi-0x28]
  40fc48:	xchg   ebp,eax
  40fc49:	sub    ah,BYTE PTR [edi+0x5e]
  40fc4c:	(bad)  
  40fc4e:	bound  ebx,QWORD PTR [ebx+0x2c]
  40fc51:	push   ebp
  40fc52:	xor    DWORD PTR [esp+ebp*8+0x4a],ecx
  40fc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc57:	jno    0x40fc15
  40fc59:	(bad)  
  40fc5a:	popf   
  40fc5b:	and    eax,0xd72c8f03
  40fc60:	add    DWORD PTR [edi-0x1b],eax
  40fc63:	in     al,0xa1
  40fc65:	(bad)  
  40fc66:	mov    ah,0xf3
  40fc68:	jmp    0x6bab:0x24ca4a2e
  40fc6f:	data16 jge 0x40fc76
  40fc72:	xor    ah,BYTE PTR [eax-0x79d40a9f]
  40fc78:	pop    ds
  40fc79:	loopne 0x40fcdd
  40fc7b:	repz adc dl,al
  40fc7e:	xor    BYTE PTR [esi],ch
  40fc80:	fisub  WORD PTR [esi]
  40fc82:	jo     0x40fcf4
  40fc84:	idiv   bh
  40fc86:	and    eax,0xc4db0337
  40fc8b:	mov    dh,0xf8
  40fc8d:	inc    edi
  40fc8e:	into   
  40fc8f:	icebp  
  40fc90:	mov    dl,0x9
  40fc92:	js     0x40fc61
  40fc94:	jg     0x40fc83
  40fc96:	and    eax,0x2cdbafd2
  40fc9b:	jp     0x40fc35
  40fc9d:	jnp    0x40fcd1
  40fc9f:	(bad)  
  40fca1:	cmc    
  40fca2:	cwde   
  40fca3:	addr16 mov ecx,0x50aaca07
  40fca9:	jmp    0x40fc91
  40fcab:	fisubr DWORD PTR [ecx-0x52]
  40fcae:	addr16 push edx
  40fcb1:	mov    dl,0xd5
  40fcb3:	adc    al,0x6f
  40fcb6:	sar    bh,1
  40fcb8:	outs   dx,DWORD PTR ds:[esi]
  40fcb9:	fst    DWORD PTR [ebx]
  40fcbb:	xchg   BYTE PTR [edx-0x47ab36b1],bl
  40fcc1:	mov    ebx,0x5744bac0
  40fcc6:	sbb    edx,DWORD PTR [ebp+edx*1-0x4ac4338f]
  40fccd:	out    dx,al
  40fcce:	fimul  DWORD PTR [ecx+ebx*4-0x34]
  40fcd2:	jb     0x40fca5
  40fcd4:	adc    BYTE PTR ds:[ebx+0x48f65bf4],ah
  40fcdb:	daa    
  40fcdc:	push   ecx
  40fcdd:	jns    0x40fcf6
  40fcdf:	sub    DWORD PTR [ebx-0x71],0x821a4996
  40fce6:	retf   
  40fce7:	jmp    edi
  40fce9:	fimul  DWORD PTR [edi+0x60]
  40fcec:	sbb    DWORD PTR [esi+eiz*2],esi
  40fcef:	jns    0x40fcc4
  40fcf1:	xlat   BYTE PTR ds:[ebx]
  40fcf2:	xor    eax,0xa4244f0c
  40fcf7:	dec    eax
  40fcf8:	xor    eax,edi
  40fcfa:	pop    ebp
  40fcfb:	stos   BYTE PTR es:[edi],al
  40fcfc:	arpl   WORD PTR [eax-0x9],cx
  40fcff:	aaa    
  40fd00:	ins    DWORD PTR es:[edi],dx
  40fd01:	adc    esp,DWORD PTR [edi+0xd51b051]
  40fd07:	and    al,0xf1
  40fd09:	mov    edi,0x129aad08
  40fd0e:	sahf   
  40fd0f:	into   
  40fd10:	rcr    DWORD PTR [ebx],cl
  40fd12:	(bad)  
  40fd13:	push   esi
  40fd14:	lods   al,BYTE PTR ds:[esi]
  40fd15:	adc    esi,edx
  40fd17:	or     al,0x9
  40fd19:	lea    eax,[eax+0x5c3f4a2b]
  40fd1f:	add    eax,0xe318b86d
  40fd24:	push   eax
  40fd25:	ficom  WORD PTR [esi+0x36]
  40fd28:	dec    ebp
  40fd29:	pop    eax
  40fd2a:	and    al,0xc3
  40fd2c:	sbb    BYTE PTR [edx-0x225abb46],bl
  40fd32:	dec    esp
  40fd33:	mov    dh,0xa3
  40fd35:	and    edx,DWORD PTR [esi+0x3c248250]
  40fd3b:	dec    DWORD PTR ds:0x9f3fd3a7
  40fd41:	sbb    eax,0x68a3164
  40fd46:	and    BYTE PTR [esp+ebp*4-0x5b],bl
  40fd4a:	xchg   esp,eax
  40fd4b:	es inc esp
  40fd4d:	clc    
  40fd4e:	adc    DWORD PTR [ecx+0x1a],0xffffffc5
  40fd52:	ret    0xc72b
  40fd55:	xor    eax,0x8d9388d8
  40fd5a:	inc    eax
  40fd5b:	aas    
  40fd5c:	inc    eax
  40fd5d:	imul   esi,DWORD PTR [ebx+0x3a],0x3654bd43
  40fd64:	or     ah,BYTE PTR [ebp+0xc]
  40fd67:	or     ch,BYTE PTR [esi]
  40fd69:	mov    eax,0x57b70017
  40fd6e:	xchg   esi,eax
  40fd6f:	test   BYTE PTR [edx+0xa4cff53],al
  40fd75:	je     0x40fd55
  40fd77:	jmp    0x40fd4c
  40fd79:	cmc    
  40fd7a:	rcl    edx,cl
  40fd7c:	lahf   
  40fd7d:	add    al,0xa9
  40fd7f:	dec    esp
  40fd80:	and    DWORD PTR [edi+0x6f9399f9],edx
  40fd86:	call   FWORD PTR [esi-0xb]
  40fd89:	push   0x4f
  40fd8b:	lock push esp
  40fd8d:	cwde   
  40fd8e:	mov    ecx,0xfbe43606
  40fd93:	xor    eax,0x4240469e
  40fd98:	push   0x51dfba95
  40fd9d:	cmp    eax,0xe83c1d50
  40fda2:	sbb    eax,0xf78a5d9d
  40fda7:	dec    eax
  40fda8:	mov    eax,ds:0x769caacf
  40fdad:	fs cmp al,0x52
  40fdb0:	mov    edi,0xd9d59bf0
  40fdb5:	enter  0xb908,0x86
  40fdb9:	mov    bh,0x17
  40fdbb:	or     al,0xf9
  40fdbd:	mov    eax,0x6c249602
  40fdc2:	aaa    
  40fdc3:	lds    ebx,FWORD PTR [ebx-0x63a62bb5]
  40fdc9:	or     eax,0xadec908f
  40fdce:	lds    ebx,FWORD PTR [esp+edx*4+0xd]
  40fdd2:	repnz (bad) 
  40fdd5:	mov    ds:0xb0609e3e,eax
  40fdda:	sbb    ebx,DWORD PTR [ecx+0x3096780b]
  40fde0:	lods   eax,DWORD PTR ds:[esi]
  40fde1:	int3   
  40fde2:	inc    eax
  40fde3:	fsub   QWORD PTR [edx+0x214280d]
  40fde9:	push   eax
  40fdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdeb:	lock fisub DWORD PTR [edx-0x60f10ab0]
  40fdf2:	into   
  40fdf3:	dec    eax
  40fdf4:	xchg   esi,eax
  40fdf5:	fld    TBYTE PTR [ebx+0x3d]
  40fdf8:	or     eax,0xff783225
  40fdfd:	pop    ds
  40fdfe:	mov    al,0x88
  40fe00:	jp     0x40fdc0
  40fe02:	sbb    edi,0xffffffbd
  40fe05:	mov    al,ds:0xbc04e1a6
  40fe0a:	mov    al,0x42
  40fe0c:	lods   eax,DWORD PTR ds:[esi]
  40fe0d:	adc    eax,0xc8a0390f
  40fe12:	and    esp,DWORD PTR ds:0x8ad290f3
  40fe18:	in     eax,0xd7
  40fe1a:	add    DWORD PTR [eax+0x20ac95b2],0x885e62c0
  40fe24:	mov    esi,0xb296144
  40fe29:	adc    dh,BYTE PTR ds:0xa180cadb
  40fe2f:	or     eax,0x1f1969d4
  40fe34:	outs   dx,DWORD PTR ds:[esi]
  40fe35:	(bad)  
  40fe36:	adc    BYTE PTR [edx+0x5b02a853],cl
  40fe3c:	test   DWORD PTR [ebp+0x28363f2],edi
  40fe42:	push   ebp
  40fe43:	outs   dx,BYTE PTR ds:[esi]
  40fe44:	aam    0xd7
  40fe46:	sti    
  40fe47:	cmp    eax,0x4403aad5
  40fe4c:	adc    al,0xf
  40fe4e:	dec    ebp
  40fe4f:	icebp  
  40fe50:	int3   
  40fe51:	pop    edi
  40fe52:	or     edx,DWORD PTR [ebx+0x65]
  40fe55:	popf   
  40fe56:	jae    0x40fe77
  40fe58:	adc    dl,BYTE PTR [ebp+ebx*1+0x40e3f000]
  40fe5f:	fidivr DWORD PTR [edi+0x3b11d987]
  40fe65:	dec    esp
  40fe66:	loope  0x40fe8f
  40fe68:	xchg   edx,eax
  40fe69:	mov    dh,0x1c
  40fe6b:	cli    
  40fe6c:	jecxz  0x40fe47
  40fe6e:	jbe    0x40fee9
  40fe70:	icebp  
  40fe71:	sbb    BYTE PTR [eax+esi*1-0x27],ah
  40fe75:	and    al,BYTE PTR [edi+0x70bdd6f5]
  40fe7b:	idiv   dh
  40fe7d:	outs   dx,DWORD PTR ds:[esi]
  40fe7e:	sub    BYTE PTR [edx-0x342c1ed0],bh
  40fe84:	lds    ecx,FWORD PTR [edi+esi*4+0x8]
  40fe88:	mov    al,ds:0x349eac3
  40fe8d:	mov    al,0xf8
  40fe8f:	push   ebp
  40fe90:	pop    es
  40fe91:	arpl   WORD PTR [ecx+0x28059604],sp
  40fe97:	stos   DWORD PTR es:[edi],eax
  40fe98:	push   cs
  40fe99:	fistp  DWORD PTR [ebx]
  40fe9b:	stos   BYTE PTR es:[edi],al
  40fe9c:	inc    ecx
  40fe9d:	and    DWORD PTR [edi],0xffffffd5
  40fea0:	pushf  
  40fea1:	xlat   BYTE PTR ds:[ebx]
  40fea2:	dec    esp
  40fea3:	cli    
  40fea4:	repnz push eax
  40fea6:	mov    ebp,0xf851e5e2
  40feab:	xchg   edi,eax
  40feac:	test   al,0x63
  40feae:	addr16 out dx,al
  40feb0:	pop    eax
  40feb1:	(bad)  
  40feb3:	xor    eax,0x1fb92988
  40feb8:	ins    DWORD PTR es:[edi],dx
  40feb9:	cli    
  40feba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40febb:	arpl   WORD PTR [ebp+0x4a],cx
  40febe:	jne    0x40fee6
  40fec0:	push   ds
  40fec1:	xor    edi,ecx
  40fec3:	adc    DWORD PTR [ecx+ebx*4],ebp
  40fec6:	mov    ds:0x526be9b7,eax
  40fecb:	sahf   
  40fecc:	cld    
  40fecd:	imul   ebp,DWORD PTR [edi+0x24],0xffffffdb
  40fed1:	cwde   
  40fed2:	lahf   
  40fed3:	or     edi,DWORD PTR [esi]
  40fed5:	fidiv  WORD PTR [eax+0xd]
  40fed8:	test   al,0x15
  40feda:	ret    0x152a
  40fedd:	dec    esp
  40fede:	jp     0x40fe9e
  40fee0:	pop    esp
  40fee1:	push   esp
  40fee2:	dec    edx
  40fee3:	mov    cl,0x46
  40fee5:	(bad)  
  40fee6:	lock jae 0x40fe87
  40fee9:	jnp    0x40fefd
  40feeb:	fucomi st,st(0)
  40feed:	sbb    DWORD PTR [ecx+0x69],0x1c860bd4
  40fef4:	lea    edx,[edx+0x5f00b4d9]
  40fefa:	std    
  40fefb:	ret    
  40fefc:	sub    ebx,esi
  40fefe:	mov    ds:0xb1c94d59,al
  40ff03:	inc    eax
  40ff04:	sti    
  40ff05:	mov    ds:0x4756a02b,al
  40ff0a:	shl    BYTE PTR [ebx+0x54],cl
  40ff0d:	stos   BYTE PTR es:[edi],al
  40ff0e:	imul   ecx,DWORD PTR [ebx+0x6faac7f2],0x50e7ee35
  40ff18:	in     eax,dx
  40ff19:	ds clc 
  40ff1b:	inc    ebp
  40ff1c:	(bad)  
  40ff1e:	add    esp,DWORD PTR [eax]
  40ff20:	mov    ebx,0x502635b7
  40ff25:	sbb    DWORD PTR es:[ecx+ebp*1+0x61],0x25b0ad4b
  40ff2e:	fstp   DWORD PTR [ebp-0x49]
  40ff31:	add    BYTE PTR [edi-0x39],ch
  40ff34:	in     eax,dx
  40ff35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff36:	out    0x1c,eax
  40ff38:	xchg   BYTE PTR [ebx+0x15578a37],cl
  40ff3e:	jecxz  0x40ff73
  40ff40:	or     BYTE PTR [ebp+0x135c419a],ah
  40ff46:	stos   DWORD PTR es:[edi],eax
  40ff47:	sub    ch,bl
  40ff49:	inc    esi
  40ff4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4b:	repz and DWORD PTR es:[esi-0x295679a2],esi
  40ff53:	cmp    ebp,esp
  40ff55:	dec    edi
  40ff56:	imul   eax,DWORD PTR [ebp-0x2],0xffffffed
  40ff5a:	xchg   DWORD PTR [ebx],esp
  40ff5c:	mov    esi,0x5e3b8cbc
  40ff61:	dec    BYTE PTR [eax-0x6510961c]
  40ff67:	xor    dl,0x2e
  40ff6a:	mov    al,0x87
  40ff6c:	cmp    DWORD PTR [edx-0x3b],ecx
  40ff6f:	or     DWORD PTR [esi],ecx
  40ff71:	dec    ecx
  40ff72:	pop    esi
  40ff73:	mov    esi,0x271fae5b
  40ff78:	mov    BYTE PTR [edx-0x2b36a3b4],al
  40ff7e:	scas   al,BYTE PTR es:[edi]
  40ff7f:	fimul  WORD PTR [esi+ecx*1-0x55b773da]
  40ff86:	xchg   ecx,eax
  40ff87:	mul    DWORD PTR [ebx]
  40ff89:	fist   WORD PTR [ebx]
  40ff8b:	mov    edi,0xe48b8c3e
  40ff90:	pop    eax
  40ff91:	sbb    ebx,edx
  40ff93:	mov    cl,0x35
  40ff95:	aaa    
  40ff96:	out    dx,al
  40ff97:	clc    
  40ff98:	inc    eax
  40ff99:	iret   
  40ff9a:	mov    edx,0x86951726
  40ff9f:	ret    0x2172
  40ffa2:	inc    ebx
  40ffa3:	ret    
  40ffa4:	cmp    DWORD PTR [edi+0x58],esp
  40ffa7:	loopne 0x40ff4e
  40ffa9:	cs mov dl,0x90
  40ffac:	pop    ecx
  40ffad:	dec    eax
  40ffae:	fisubr WORD PTR [ebp-0x3dfb5257]
  40ffb4:	inc    edx
  40ffb5:	pop    ebp
  40ffb6:	aam    0xed
  40ffb8:	or     BYTE PTR [edx-0x57],al
  40ffbb:	mov    cl,0x7d
  40ffbd:	add    DWORD PTR [edx*1-0x36e6cbbc],edx
  40ffc4:	xor    bh,BYTE PTR [ecx+esi*4-0x46]
  40ffc8:	push   edx
  40ffc9:	shr    BYTE PTR [esi],0xd8
  40ffcc:	pop    ebp
  40ffcd:	add    BYTE PTR [edx+0x55e522ca],ah
  40ffd3:	cmp    DWORD PTR [ebx-0x3e],esp
  40ffd6:	fdiv   QWORD PTR [esi]
  40ffd8:	inc    ecx
  40ffd9:	in     eax,0xa1
  40ffdb:	(bad)  
  40ffdc:	cs add esp,0xd56d012
  40ffe3:	mov    ebx,0x98873660
  40ffe8:	cld    
  40ffe9:	std    
  40ffea:	inc    esi
  40ffeb:	pop    esp
  40ffec:	repnz xor esi,DWORD PTR [eax+edi*2]
  40fff0:	push   cs
  40fff1:	or     edx,esi
  40fff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff4:	xchg   ebx,eax
  40fff5:	mov    edi,0xe5f6c926
  40fffa:	push   edi
  40fffb:	jl     0x40ffbc
  40fffd:	ret    0x26e6
  410000:	inc    BYTE PTR [eax]
  410002:	lods   eax,DWORD PTR ds:[esi]
  410003:	push   0xfde69dcb
  410008:	cmp    al,0x11
  41000a:	push   es
  41000b:	mov    al,0xbc
  41000d:	scas   eax,DWORD PTR es:[edi]
  41000e:	in     eax,dx
  41000f:	fnstsw WORD PTR [edi+0x6a4eecea]
  410015:	cs xchg ebx,eax
  410017:	dec    esi
  410018:	adc    bh,BYTE PTR [esi]
  41001a:	mov    BYTE PTR [esi-0x3a],dh
  41001d:	xchg   ecx,eax
  41001e:	add    edx,DWORD PTR [ecx+0x17777bd2]
  410024:	js     0x410014
  410026:	cmp    BYTE PTR [ebx+edx*1-0x7cc8b86e],dh
  41002d:	mov    ebx,0x918e24ab
  410032:	call   0xc5d2a912
  410037:	push   ss
  410038:	mov    bl,0x99
  41003a:	out    dx,al
  41003b:	outs   dx,DWORD PTR ds:[esi]
  41003c:	sub    al,0x5b
  41003e:	test   eax,0x53a2fcdd
  410043:	clc    
  410044:	push   es
  410045:	sub    ecx,DWORD PTR [eax]
  410047:	mov    eax,ds:0x7385d8d0
  41004c:	out    dx,eax
  41004d:	mov    esp,0x952aa6fe
  410052:	fist   WORD PTR [ecx+0xe12dbb5]
  410058:	sub    bh,0x8c
  41005b:	arpl   WORD PTR [ecx+eax*1],dx
  41005e:	jmp    0xb203691a
  410063:	out    0xb,eax
  410065:	in     al,dx
  410066:	mov    gs,edx
  410068:	in     eax,dx
  410069:	cmp    cl,BYTE PTR [edi+0xf4213f8]
  41006f:	(bad)  [esi+0x4d08c351]
  410075:	(bad)  
  410078:	je     0x41007f
  41007a:	out    0xd,eax
  41007c:	clc    
  41007d:	dec    esi
  41007e:	sti    
  41007f:	mov    WORD PTR [eax+0x67],?
  410082:	jb     0x410075
  410084:	jmp    0x4100b9
  410086:	xchg   edx,eax
  410087:	cmc    
  410088:	and    al,0x79
  41008a:	pusha  
  41008b:	jo     0x41007b
  41008d:	add    BYTE PTR [ecx],ah
  41008f:	jmp    0xcbedf7af
  410094:	aad    0xc
  410096:	cmp    dl,ch
  410098:	ret    
  410099:	push   esi
  41009a:	pop    ecx
  41009b:	push   esi
  41009c:	bound  eax,QWORD PTR [ebp-0x51ddd5e]
  4100a2:	adc    al,0xdd
  4100a4:	xor    DWORD PTR [edx-0x2c5f5ff1],ecx
  4100aa:	pop    ds
  4100ab:	dec    ebx
  4100ac:	jne    0x410118
  4100ae:	push   ebx
  4100af:	inc    edx
  4100b0:	cmp    BYTE PTR [ebx],al
  4100b2:	in     al,0xb0
  4100b4:	or     ecx,ebx
  4100b6:	sbb    al,0xb5
  4100b8:	out    0x98,eax
  4100ba:	add    BYTE PTR [edx],ch
  4100bc:	(bad)
  4100bf:	mov    edx,0xec8b0869
  4100c4:	inc    esp
  4100c5:	je     0x4100a6
  4100c7:	jmp    0x4100e7
  4100c9:	pop    esp
  4100ca:	xor    al,dh
  4100cc:	inc    esp
  4100cd:	outs   dx,BYTE PTR ds:[esi]
  4100ce:	xlat   BYTE PTR ds:[ebx]
  4100cf:	sti    
  4100d0:	ror    BYTE PTR [edi-0xe],0x1c
  4100d4:	sub    al,0x8f
  4100d6:	ins    DWORD PTR es:[edi],dx
  4100d7:	mov    bh,0xe5
  4100d9:	cmp    esi,DWORD PTR [ebp+0x2f]
  4100dc:	add    al,0x84
  4100de:	inc    ebp
  4100df:	adc    BYTE PTR ds:[eax-0x22867e4e],bh
  4100e6:	out    dx,al
  4100e7:	aad    0x86
  4100e9:	pop    ebx
  4100ea:	add    BYTE PTR [edx],dh
  4100ec:	push   ds
  4100ed:	pop    ds
  4100ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ef:	ds mov bh,0x96
  4100f2:	dec    edx
  4100f3:	lock loope 0x4100f0
  4100f6:	pop    ss
  4100f7:	repnz adc al,BYTE PTR [esi*4+0x709e8ca7]
  4100ff:	scas   eax,DWORD PTR es:[edi]
  410100:	ja     0x410111
  410102:	push   ds
  410103:	dec    edi
  410104:	aaa    
  410105:	repnz in eax,dx
  410107:	bnd ret 
  410109:	pop    edx
  41010a:	iret   
  41010b:	push   ecx
  41010c:	test   al,0x2d
  41010e:	mov    bl,0x8d
  410110:	retf   
  410111:	sbb    BYTE PTR [edi-0x3b6715a9],dl
  410117:	pop    ebx
  410118:	fiadd  DWORD PTR [eax]
  41011a:	das    
  41011b:	ss xchg edi,eax
  41011d:	int3   
  41011e:	adc    edi,DWORD PTR [ebx]
  410120:	test   BYTE PTR [ecx],ah
  410122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410123:	xchg   ebx,eax
  410124:	scas   al,BYTE PTR es:[edi]
  410125:	or     bl,BYTE PTR [edi+0x324f291f]
  41012b:	inc    ebp
  41012c:	call   0x61449acd
  410131:	data16 js 0x41018a
  410134:	mov    ah,0xaa
  410136:	and    al,0xa5
  410138:	test   DWORD PTR [esi+0xf5abb78],esp
  41013e:	mov    al,ds:0x741c5f90
  410143:	mov    edi,0xe15e6e3c
  410148:	adc    DWORD PTR [edx-0xc],esp
  41014b:	sub    dl,bh
  41014d:	or     cl,cl
  41014f:	in     eax,0x4
  410151:	paddusb mm1,QWORD PTR [edi-0x620ccdad]
  410158:	lods   eax,DWORD PTR ds:[esi]
  410159:	mov    esp,0xf7f2cdc0
  41015e:	jns    0xd9b6b58d
  410164:	fdivp  st(5),st
  410166:	imul   ecx,ebx,0xaa7d8d3b
  41016c:	xlat   BYTE PTR ds:[ebx]
  41016d:	adc    eax,0x94f2b5fd
  410172:	xor    eax,DWORD PTR [eax+0x5b07a8ba]
  410178:	inc    esi
  410179:	pop    ebp
  41017a:	push   esi
  41017b:	cmp    ecx,edx
  41017d:	fmul   DWORD PTR [esi-0x7a3e7623]
  410183:	jmp    0x4101d1
  410185:	xor    BYTE PTR [edx-0xd],0x3
  410189:	adc    al,0x53
  41018b:	dec    edx
  41018c:	aas    
  41018d:	test   DWORD PTR [ebp-0x1d3e905c],esp
  410193:	cld    
  410194:	mov    esp,0x59acf35a
  410199:	es pop es
  41019b:	in     al,0x6f
  41019d:	sbb    dh,BYTE PTR [edi+0x8a3d82d]
  4101a3:	leave  
  4101a4:	push   ebp
  4101a5:	push   ebx
  4101a6:	xchg   DWORD PTR [ecx+0x38],esp
  4101a9:	ins    BYTE PTR es:[edi],dx
  4101aa:	pop    ss
  4101ab:	pop    ss
  4101ac:	out    0x22,eax
  4101ae:	js     0x4101fc
  4101b0:	mov    edx,0xeeb1accb
  4101b5:	(bad)  
  4101b6:	lods   al,BYTE PTR ds:[esi]
  4101b7:	gs arpl bx,sp
  4101ba:	(bad)  
  4101bb:	inc    esp
  4101bc:	lahf   
  4101bd:	fs push esp
  4101bf:	call   0x8c39:0x75fd5dc1
  4101c6:	fstp   QWORD PTR [eax-0x40cbad6]
  4101cc:	and    eax,0xa89ab414
  4101d1:	pop    edx
  4101d3:	sbb    BYTE PTR [ebx],cl
  4101d5:	imul   ebx,DWORD PTR [edi+eiz*8+0x68],0x1a
  4101da:	dec    edi
  4101db:	and    ch,cl
  4101dd:	push   0x758cb131
  4101e2:	xchg   esp,eax
  4101e3:	hlt    
  4101e4:	sti    
  4101e5:	call   DWORD PTR [ecx+0x4b]
  4101e8:	inc    esp
  4101e9:	rol    BYTE PTR [edi+ecx*1],1
  4101ec:	pop    ebx
  4101ed:	js     0x4101cd
  4101ef:	xor    DWORD PTR ds:0xd4238f7a,eax
  4101f5:	inc    ecx
  4101f6:	add    edi,DWORD PTR [ebx]
  4101f8:	unpcklps xmm3,xmm7
  4101fb:	fst    QWORD PTR [edx+edx*1-0x71]
  4101ff:	push   es
  410200:	xchg   edx,eax
  410201:	mov    dh,0xaa
  410203:	sbb    BYTE PTR [ebp+0x46],0xb6
  410207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410208:	mov    cl,BYTE PTR [edi-0x7f]
  41020b:	mov    eax,0x39c8352f
  410210:	dec    edi
  410211:	and    eax,0xd4db98e1
  410216:	sbb    DWORD PTR [ebx+eax*4-0x55],ebp
  41021a:	es in  eax,dx
  41021c:	int    0xde
  41021e:	xor    ebx,edx
  410220:	je     0x410203
  410222:	pop    es
  410223:	mov    ebp,0xc2f75c58
  410228:	push   ebp
  410229:	inc    ebp
  41022a:	xlat   BYTE PTR ds:[ebx]
  41022b:	or     al,0x9d
  41022d:	push   ds
  41022e:	int3   
  41022f:	fcomp  QWORD PTR [ebp+0x13]
  410232:	sahf   
  410233:	pop    ss
  410234:	std    
  410235:	(bad)  
  410236:	jns    0x410259
  410238:	mov    al,0x57
  41023a:	and    al,0x6f
  41023c:	add    ah,cl
  41023e:	(bad)
  410242:	jmp    0x40b8:0xb1b54dc2
  410249:	mov    ch,0x3c
  41024b:	mov    dl,0x98
  41024d:	jmp    0x6f031807
  410252:	pop    edx
  410253:	add    bl,BYTE PTR [edi]
  410255:	loop   0x410286
  410257:	mov    al,ds:0x71e27d5
  41025c:	ins    BYTE PTR es:[edi],dx
  41025d:	cmp    eax,0xd2e117f8
  410262:	xor    DWORD PTR [edx+0x2d],esp
  410265:	(bad)  [eax+edx*2-0x4c]
  410269:	mov    dh,0xc0
  41026b:	ror    DWORD PTR [ebx+0x6c8839d7],1
  410271:	popf   
  410272:	rcl    DWORD PTR [eax],cl
  410274:	imul   edi,DWORD PTR [ecx],0xae6b302e
  41027a:	mov    ebp,0x29cca0e7
  41027f:	or     BYTE PTR ds:0x2f7ea67e,ah
  410285:	or     ebx,eax
  410287:	mov    ch,0x3b
  410289:	or     DWORD PTR [eax-0xe],esi
  41028c:	in     al,dx
  41028d:	fdivr  QWORD PTR [ebx+ecx*1]
  410290:	mov    ah,BYTE PTR [edx+eax*2]
  410293:	das    
  410294:	test   DWORD PTR [esi+0x39deabc7],0x48abccd
  41029e:	or     BYTE PTR [edi+0x67],0x89
  4102a2:	adc    eax,eax
  4102a4:	mov    dh,BYTE PTR [ebx+eiz*8]
  4102a7:	(bad)  
  4102a8:	mov    eax,ds:0xa3f6921e
  4102ad:	fcomip st,st(6)
  4102af:	dec    edx
  4102b0:	xchg   ebx,eax
  4102b1:	(bad)  
  4102b2:	mov    ecx,0x406e8638
  4102b7:	xor    eax,0x32caa6d3
  4102bc:	inc    eax
  4102bd:	add    BYTE PTR [ebp+edi*2-0x51665732],cl
  4102c4:	dec    ebx
  4102c5:	cmp    bl,bh
  4102c7:	adc    eax,0x82c028c8
  4102cc:	les    esi,FWORD PTR [eax+0x21]
  4102cf:	mov    es:0x2ef53473,eax
  4102d5:	cdq    
  4102d6:	push   ecx
  4102d7:	push   edx
  4102d8:	lods   eax,DWORD PTR ds:[esi]
  4102d9:	ret    0xfa2c
  4102dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102dd:	(bad)  
  4102de:	ins    BYTE PTR es:[edi],dx
  4102df:	xchg   esi,eax
  4102e0:	sahf   
  4102e1:	pushf  
  4102e2:	pop    edi
  4102e3:	stos   BYTE PTR es:[edi],al
  4102e4:	and    bl,BYTE PTR [esi-0x1e4322f3]
  4102ea:	fadd   DWORD PTR [ebx+0x541a0ad]
  4102f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f1:	add    ch,BYTE PTR [ebp-0xe]
  4102f4:	xchg   ebp,eax
  4102f5:	iret   
  4102f6:	cld    
  4102f7:	mov    ecx,DWORD PTR [ebp-0x2]
  4102fa:	dec    ebx
  4102fb:	push   es
  4102fc:	(bad)  
  4102fd:	aaa    
  4102fe:	and    ebp,DWORD PTR [edi-0x2870204a]
  410304:	inc    edi
  410305:	out    0x5d,eax
  410307:	retf   
  410308:	cmp    edi,DWORD PTR [edi-0x1]
  41030b:	in     eax,0x87
  41030d:	imul   esi,ecx,0x52
  410310:	and    esi,DWORD PTR [edx+0x3]
  410313:	fsubr  DWORD PTR [edx+0x6193aaaf]
  410319:	ss push ds
  41031b:	les    eax,FWORD PTR [ebx+0x33dfe2eb]
  410321:	pop    esp
  410322:	call   0x7030:0x90fde05d
  410329:	pop    ss
  41032a:	aad    0x47
  41032c:	hlt    
  41032d:	int    0xda
  41032f:	fld    TBYTE PTR [edx]
  410331:	retf   0x74c6
  410334:	pop    ss
  410335:	jno    0x4102ed
  410337:	test   al,0x67
  410339:	mov    eax,edi
  41033b:	jbe    0x41038d
  41033d:	aas    
  41033e:	sar    DWORD PTR [ebx+0x1f5bb00c],1
  410344:	xchg   edi,eax
  410345:	aam    0xb5
  410347:	bound  esi,QWORD PTR [eax-0x2290788b]
  41034d:	ins    BYTE PTR es:[edi],dx
  41034e:	adc    eax,0xa5058bd5
  410353:	cli    
  410354:	loop   0x4103b7
  410356:	mov    bh,0xa4
  410358:	and    BYTE PTR [esp],bl
  41035b:	mov    ch,0x90
  41035d:	and    BYTE PTR [eax],dl
  41035f:	fisttp WORD PTR [ebx+0x66]
  410362:	repnz pop esp
  410364:	stos   BYTE PTR es:[edi],al
  410365:	push   esp
  410366:	xor    bh,bl
  410368:	lods   al,BYTE PTR ds:[esi]
  410369:	cmp    ebp,esi
  41036b:	dec    ebx
  41036c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41036e:	shl    BYTE PTR [edi],1
  410370:	pop    ss
  410371:	aad    0x4
  410373:	mov    ebx,DWORD PTR [edi+0x2e7a59db]
  410379:	fcomp  DWORD PTR [eax-0x7f]
  41037c:	nop
  41037d:	dec    ebx
  41037e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037f:	pop    ebp
  410380:	or     ch,bh
  410382:	mov    WORD PTR [eax+0x40],fs
  410385:	inc    edx
  410386:	jle    0x410322
  410388:	mov    al,0x31
  41038a:	outs   dx,BYTE PTR ds:[esi]
  41038b:	in     eax,0xf4
  41038d:	scas   eax,DWORD PTR es:[edi]
  41038e:	arpl   WORD PTR [edx-0x40],ax
  410391:	loope  0x4103a8
  410393:	scas   eax,DWORD PTR es:[edi]
  410394:	ins    DWORD PTR es:[edi],dx
  410395:	ds dec ebp
  410397:	jge    0x41031c
  410399:	jle    0x410410
  41039b:	push   0xa82e805
  4103a0:	push   0xd08b748c
  4103a5:	xadd   edx,ebx
  4103a8:	jns    0x4103ce
  4103aa:	fidiv  DWORD PTR [eax-0x7f2e4b45]
  4103b0:	jnp    0x41040a
  4103b2:	or     BYTE PTR [ecx+esi*2+0x6],ch
  4103b6:	(bad)  
  4103b7:	mov    eax,ds:0x4b1150aa
  4103bc:	lods   al,BYTE PTR ds:[esi]
  4103bd:	and    edx,edx
  4103bf:	enter  0x9345,0x86
  4103c3:	lods   al,BYTE PTR ds:[esi]
  4103c4:	ins    BYTE PTR es:[edi],dx
  4103c5:	mov    al,ds:0xc1279be4
  4103ca:	dec    esp
  4103cb:	in     eax,dx
  4103cc:	pop    esi
  4103cd:	shr    bh,1
  4103cf:	fimul  WORD PTR [ecx+0x1c]
  4103d2:	aad    0x17
  4103d4:	lods   eax,DWORD PTR ds:[esi]
  4103d5:	dec    esi
  4103d6:	pop    esp
  4103d7:	jge    0x4103b4
  4103d9:	scas   al,BYTE PTR es:[edi]
  4103da:	rol    DWORD PTR ss:[ebp-0x7c],cl
  4103de:	adc    al,0x44
  4103e0:	add    DWORD PTR [ebp+0x61743abc],0xffffffbd
  4103e7:	inc    esp
  4103e8:	out    dx,al
  4103e9:	sub    BYTE PTR gs:[ebp+0x7e],bl
  4103ed:	pop    ebp
  4103ee:	inc    esi
  4103ef:	mov    WORD PTR [eax],ds
  4103f1:	push   esp
  4103f2:	sbb    eax,0x30a63422
  4103f7:	xor    DWORD PTR [eax+0x6d],ecx
  4103fa:	test   BYTE PTR [edx+0x3866c02e],bl
  410400:	pop    esp
  410401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410402:	jo     0x4103fb
  410404:	rcl    ebp,1
  410406:	dec    ebx
  410407:	xor    eax,0x379bedf7
  41040c:	mov    bh,0x88
  41040e:	xor    dh,bl
  410410:	clc    
  410411:	data16 test BYTE PTR [edx-0x15],ch
  410415:	mov    eax,ds:0x357c34ea
  41041a:	add    ebx,DWORD PTR [ecx+0x21453fef]
  410420:	mov    eax,0xaf4253f6
  410425:	push   edx
  410426:	scas   al,BYTE PTR es:[edi]
  410427:	push   ds
  410428:	add    al,0xa0
  41042a:	fadd   QWORD PTR [ebp+ebp*8-0x63aa93b9]
  410431:	arpl   WORD PTR [ecx-0x11],bp
  410434:	mov    ds:0xba09295f,eax
  410439:	and    ebx,eax
  41043b:	ds pop ecx
  41043d:	rcl    BYTE PTR [ecx+0x25],1
  410440:	cli    
  410441:	sbb    eax,0xe9028d91
  410446:	push   ecx
  410447:	rol    BYTE PTR [edi+edi*2+0x65],1
  41044b:	sar    BYTE PTR [esi-0x544150c0],0x12
  410452:	xchg   edi,eax
  410453:	jb     0x410444
  410455:	ss jbe 0x410487
  410458:	cmp    eax,0xf23b08fd
  41045d:	cmp    DWORD PTR [edi],esp
  41045f:	shl    BYTE PTR [ebp-0x58],cl
  410462:	xor    DWORD PTR [esi-0x2a],eax
  410465:	sub    esi,DWORD PTR [ecx]
  410467:	jmp    0x31f5:0xdf71acda
  41046e:	aaa    
  41046f:	xchg   dl,bl
  410471:	dec    ecx
  410472:	pusha  
  410473:	ficom  DWORD PTR [eax-0x5a24d917]
  410479:	outs   dx,BYTE PTR ds:[esi]
  41047a:	mov    dh,0xd8
  41047c:	mov    al,ds:0x5b1d8c57
  410481:	add    ecx,esp
  410483:	outs   dx,BYTE PTR ds:[esi]
  410484:	pop    ebp
  410485:	inc    esp
  410486:	jmp    0xe3a7:0x56d02a2d
  41048d:	pusha  
  41048e:	adc    esp,DWORD PTR [esi]
  410490:	mov    ds:0x3cf5c768,al
  410495:	mul    ebx
  410497:	adc    dl,cl
  410499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049a:	mov    DWORD PTR [edi],esi
  41049c:	pop    ds
  41049d:	xchg   ebx,eax
  41049e:	mov    dh,0x9b
  4104a0:	es mov edi,0xedff7537
  4104a6:	xor    ebp,DWORD PTR [ebx]
  4104a8:	cmp    ebx,edi
  4104aa:	inc    eax
  4104ab:	cmp    DWORD PTR ds:0x7e445704,ebx
  4104b1:	jmp    0x2b44:0xb84e91d8
  4104b8:	stos   BYTE PTR es:[edi],al
  4104b9:	ja     0x41043e
  4104bb:	push   ss
  4104bc:	and    BYTE PTR [ebp+0x435d777c],0x53
  4104c3:	mov    ah,0x8b
  4104c5:	aas    
  4104c6:	xchg   edi,eax
  4104c7:	dec    esi
  4104c8:	xchg   esp,eax
  4104c9:	fild   WORD PTR [eax+0x10663145]
  4104cf:	sbb    dl,BYTE PTR [esp+ecx*2]
  4104d2:	imul   edi,DWORD PTR [edi+0x5b28f118],0x18
  4104d9:	je     0x410496
  4104db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104dc:	fwait
  4104dd:	xchg   BYTE PTR [ebp+0x2e04c6b7],ch
  4104e3:	(bad)  
  4104e4:	push   ebp
  4104e5:	xlat   BYTE PTR ds:[ebx]
  4104e6:	sub    eax,0x97547da2
  4104eb:	dec    edi
  4104ec:	(bad)  
  4104ed:	pop    edx
  4104ee:	mov    edx,0x8d76e9d
  4104f3:	sub    BYTE PTR [ebx+0x58],ch
  4104f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104f7:	and    eax,0xb14c682
  4104fc:	cmp    ch,BYTE PTR ds:0x8c9a22d2
  410502:	cmp    al,BYTE PTR [edx]
  410504:	jg     0x410542
  410506:	sub    edi,edi
  410508:	add    ecx,DWORD PTR [ebx+0x797fc6b5]
  41050e:	ss scas al,BYTE PTR es:[edi]
  410510:	fisub  DWORD PTR [ebx-0x35]
  410513:	inc    ecx
  410514:	pop    eax
  410515:	idiv   BYTE PTR [esi-0x2140c1c5]
  41051b:	mov    esp,0x5a1f210
  410520:	outs   dx,BYTE PTR ds:[esi]
  410521:	pop    es
  410522:	xlat   BYTE PTR ds:[ebx]
  410523:	adc    ebp,DWORD PTR [esi]
  410525:	cmp    ecx,esi
  410527:	push   edx
  410528:	out    0xbe,eax
  41052a:	cmp    esi,esp
  41052c:	push   cs
  41052d:	adc    ah,dh
  41052f:	pop    ebx
  410530:	fnstenv [ebx]
  410532:	mov    es:0x9c88217f,al
  410538:	std    
  410539:	popa   
  41053a:	int3   
  41053b:	les    ebx,FWORD PTR [edi+0x9]
  41053e:	ss jno 0x410554
  410541:	retf   
  410542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410543:	inc    ebp
  410544:	cmp    al,0xc6
  410546:	inc    esi
  410547:	scas   al,BYTE PTR es:[edi]
  410548:	leave  
  410549:	jns    0x410518
  41054b:	std    
  41054c:	mov    eax,ds:0xba8f0bf
  410551:	sub    al,0x82
  410553:	pop    esi
  410554:	std    
  410555:	sahf   
  410556:	and    ch,al
  410558:	call   FWORD PTR [eax-0x65821802]
  41055e:	shl    BYTE PTR [edx+0x206e23e3],cl
  410564:	sti    
  410565:	xor    esp,DWORD PTR [edi+eax*1-0x1b]
  410569:	cld    
  41056a:	lock mov BYTE PTR [ebx+0x47e399a],al
  410571:	push   ds
  410572:	neg    DWORD PTR [edi]
  410574:	and    DWORD PTR [ebp+0x6266201f],ebp
  41057a:	xchg   ecx,eax
  41057b:	loop   0x4105b6
  41057d:	xor    al,0x18
  41057f:	dec    esp
  410580:	scas   al,BYTE PTR es:[edi]
  410581:	dec    edx
  410582:	mov    al,ds:0xa031e687
  410587:	outs   dx,BYTE PTR ds:[esi]
  410588:	std    
  410589:	adc    ebx,DWORD PTR [esi-0x6c]
  41058c:	and    eax,0x2a20cf2b
  410591:	xchg   BYTE PTR [edx+ecx*4-0x3e1cdc30],al
  410598:	or     DWORD PTR [eax-0x27],esi
  41059b:	fimul  DWORD PTR [esi]
  41059d:	clc    
  41059e:	adc    BYTE PTR [ebx+0x7f],0x61
  4105a2:	cmp    DWORD PTR ds:0x2be9ffd0,esp
  4105a8:	mov    DWORD PTR [esi-0x5a7fd777],esp
  4105ae:	sbb    al,BYTE PTR [ecx]
  4105b0:	lock or ah,BYTE PTR [edx+0x287c4666]
  4105b7:	sahf   
  4105b8:	pop    ds
  4105b9:	inc    edi
  4105ba:	ja     0x4105b6
  4105bc:	loop   0x4105a3
  4105be:	inc    ecx
  4105bf:	out    0x66,al
  4105c1:	push   edx
  4105c2:	adc    bh,BYTE PTR [esi+0x17]
  4105c5:	inc    edx
  4105c6:	bound  edx,QWORD PTR ss:0x567c9f6d
  4105cd:	mov    ch,0xd2
  4105cf:	call   0xd8b72cd6
  4105d4:	cli    
  4105d5:	pop    esi
  4105d6:	and    eax,0x516f1b0a
  4105db:	in     al,dx
  4105dc:	ficomp DWORD PTR [ebx]
  4105de:	jns    0x4105f1
  4105e0:	xor    edx,DWORD PTR [ebx+edi*1]
  4105e3:	cmp    DWORD PTR [esi+0x2a],ebp
  4105e6:	dec    eax
  4105e7:	add    bl,0xf8
  4105ea:	cs mov cs,ebx
  4105ed:	push   0x808f20ba
  4105f2:	adc    eax,0x23426243
  4105f7:	leave  
  4105f8:	lods   eax,DWORD PTR ds:[esi]
  4105f9:	add    DWORD PTR [eax],esp
  4105fb:	pop    ss
  4105fc:	mov    ds:0x2a48c745,eax
  410601:	bound  eax,QWORD PTR [edx-0x63]
  410604:	stos   DWORD PTR es:[edi],eax
  410605:	call   eax
  410607:	sbb    BYTE PTR [esp+eax*2-0x51b8236e],dl
  41060e:	aas    
  41060f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410610:	test   eax,0xe78c6896
  410615:	or     BYTE PTR [ebx],bh
  410617:	(bad)  
  410618:	mov    ds:0x68bf1cce,eax
  41061d:	lods   eax,DWORD PTR ds:[esi]
  41061e:	inc    esi
  410620:	cdq    
  410621:	cmp    dh,dl
  410623:	sbb    DWORD PTR [ecx],esi
  410625:	sbb    bh,BYTE PTR [eax-0x672b4f88]
  41062b:	cmp    ah,ah
  41062d:	lahf   
  41062e:	mov    DWORD PTR [edx],edx
  410630:	dec    edx
  410631:	mov    ds:0x473c37af,eax
  410636:	scas   al,BYTE PTR es:[edi]
  410637:	sub    BYTE PTR [eax],0x24
  41063a:	scas   al,BYTE PTR es:[edi]
  41063b:	dec    edi
  41063c:	or     DWORD PTR [ebx+eax*4],eax
  41063f:	cwde   
  410640:	stos   DWORD PTR es:[edi],eax
  410641:	mov    fs,WORD PTR [ecx-0x1145f4ab]
  410647:	nop
  410648:	adc    al,BYTE PTR [ecx-0x3175af8a]
  41064e:	(bad)  
  41064f:	into   
  410650:	dec    ebx
  410651:	push   es
  410652:	and    DWORD PTR [edx-0x50dabc71],ebp
  410658:	popf   
  410659:	shr    esp,1
  41065b:	adc    BYTE PTR [edi],bh
  41065d:	leave  
  41065e:	xchg   ebp,eax
  41065f:	push   0x3e
  410661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410662:	mov    es,WORD PTR [esi]
  410664:	fdivr  st,st(3)
  410666:	cwde   
  410667:	mov    WORD PTR [edx+0x4b],?
  41066a:	das    
  41066b:	and    al,0xb6
  41066d:	jmp    0x4106e0
  41066f:	pop    edx
  410670:	jl     0x410678
  410672:	stos   BYTE PTR es:[edi],al
  410673:	in     al,0x78
  410675:	loop   0x41063a
  410677:	xchg   ebx,eax
  410678:	mov    dl,cl
  41067a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41067b:	push   0xffffffce
  41067d:	int    0xde
  41067f:	ins    BYTE PTR es:[edi],dx
  410680:	test   eax,0x5e78e3b3
  410685:	shr    DWORD PTR [esi+0x4d],0x37
  410689:	sub    DWORD PTR [ecx+0x452a435b],ebx
  41068f:	leave  
  410690:	inc    edx
  410691:	add    al,0xd4
  410693:	and    DWORD PTR [edi],ecx
  410695:	mov    ch,0xba
  410697:	pop    ebp
  410698:	mov    dh,0x14
  41069a:	fidivr DWORD PTR [ebp+0x510ed4a1]
  4106a0:	mov    esi,0x5352594e
  4106a5:	jp     0x41062b
  4106a7:	fcom   QWORD PTR [ebx+0x14]
  4106aa:	pop    ecx
  4106ab:	popa   
  4106ac:	int3   
  4106ad:	mov    dl,0x96
  4106af:	(bad)  
  4106b0:	loop   0x41072d
  4106b2:	sahf   
  4106b3:	xchg   ecx,eax
  4106b4:	nop
  4106b5:	test   eax,0x50e28de9
  4106ba:	test   DWORD PTR [edx+0x70],edx
  4106bd:	pop    ss
  4106be:	jg     0x41065b
  4106c0:	sti    
  4106c1:	add    DWORD PTR [esi],0xffffffac
  4106c4:	inc    ecx
  4106c5:	das    
  4106c6:	fsubr  QWORD PTR ds:0xbf6c3bf6
  4106cc:	mov    ch,BYTE PTR [edx+0x1b]
  4106cf:	shl    DWORD PTR [esi-0x65],1
  4106d2:	push   cs
  4106d3:	jle    0x41073b
  4106d5:	fxch   st(6)
  4106d7:	mov    ebp,0x7947268a
  4106dc:	jecxz  0x41070e
  4106de:	cmp    ebp,0x5deaf6b8
  4106e4:	or     BYTE PTR [eax-0x39e4f5f4],al
  4106ea:	sub    al,0x7a
  4106ec:	inc    esp
  4106ed:	adc    al,0xfd
  4106ef:	jl     0x4106dd
  4106f1:	cs jmp 0x4106d2
  4106f4:	inc    eax
  4106f5:	iret   
  4106f6:	das    
  4106f7:	fst    QWORD PTR [ebx+0x70]
  4106fa:	je     0x4106b4
  4106fc:	jbe    0x410697
  4106fe:	sbb    ebx,DWORD PTR [ebx+0xa872324]
  410704:	mov    BYTE PTR [esi-0xb15414f],al
  41070a:	call   0xd391:0xf809cd42
  410711:	iret   
  410712:	or     bl,ah
  410714:	push   ebp
  410715:	adc    al,BYTE PTR [edx]
  410717:	jecxz  0x410748
  410719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41071a:	cmp    DWORD PTR [ebx+0x3f],0x57
  41071e:	ins    BYTE PTR es:[edi],dx
  41071f:	jb     0x41072a
  410721:	and    ah,dh
  410723:	cmp    ecx,esi
  410725:	in     al,dx
  410726:	add    DWORD PTR [esi],edi
  410728:	sub    eax,0x3b2f0f93
  41072d:	loope  0x410747
  41072f:	addr16 in eax,dx
  410731:	jbe    0x41078b
  410733:	outs   dx,DWORD PTR ds:[esi]
  410734:	xchg   edx,eax
  410735:	cmc    
  410736:	fsubr  DWORD PTR [ebp+0x50]
  410739:	cmc    
  41073a:	pop    edi
  41073b:	jns    0x4107af
  41073d:	xor    ah,bh
  41073f:	mov    al,0x22
  410741:	and    eax,ebx
  410743:	mov    bl,0xe8
  410745:	jb     0x410778
  410747:	mov    WORD PTR [esp+eax*8],es
  41074a:	push   esp
  41074b:	in     al,0x25
  41074d:	inc    ebx
  41074e:	iret   
  41074f:	push   ebx
  410750:	(bad)  
  410751:	loop   0x4107ba
  410753:	xchg   edi,eax
  410754:	adc    al,ch
  410756:	jle    0x410753
  410758:	(bad)  
  410759:	loopne 0x410798
  41075b:	aas    
  41075c:	dec    ebp
  41075d:	retf   
  41075e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075f:	ds enter 0xb989,0xcc
  410764:	dec    edi
  410765:	cmp    al,0xf4
  410767:	and    eax,0xda7504e7
  41076c:	sub    esp,eax
  41076e:	xor    ebp,DWORD PTR [edx-0x62a5b5ff]
  410774:	stos   DWORD PTR es:[edi],eax
  410775:	pop    ebx
  410776:	fdivr  st(5),st
  410778:	lock fs pop eax
  41077b:	or     al,0x63
  41077d:	or     esp,DWORD PTR [edi]
  41077f:	jbe    0x4107e4
  410781:	mov    bl,0xac
  410783:	pushf  
  410784:	dec    esp
  410785:	mov    edx,0x38611661
  41078a:	xchg   ebx,eax
  41078b:	inc    edx
  41078c:	adc    al,0xbe
  41078e:	xor    DWORD PTR [ebp-0x6e],esi
  410791:	stos   DWORD PTR es:[edi],eax
  410792:	mov    eax,0xff26c5bb
  410797:	dec    edx
  410798:	and    DWORD PTR [edi-0x6c24d234],ebp
  41079e:	and    al,0xe3
  4107a0:	cld    
  4107a1:	mov    cl,0xee
  4107a3:	pop    esp
  4107a4:	xchg   ebx,eax
  4107a5:	mov    eax,ds:0xd1b58dca
  4107aa:	popf   
  4107ab:	or     esp,edx
  4107ad:	pop    esp
  4107ae:	jns    0x41073d
  4107b0:	jg     0x41079e
  4107b2:	pop    ss
  4107b3:	adc    BYTE PTR [ebp-0x454277ef],0x9d
  4107ba:	inc    esp
  4107bb:	dec    ebp
  4107bc:	pop    esp
  4107bd:	sub    al,0x17
  4107bf:	enter  0x264d,0xab
  4107c3:	test   BYTE PTR [ebp-0x73199170],dl
  4107c9:	add    eax,0xddbece0e
  4107ce:	xchg   BYTE PTR [esi-0x71cba943],ch
  4107d4:	popf   
  4107d5:	pop    eax
  4107d6:	imul   esp,DWORD PTR [edi],0xffffffe3
  4107d9:	sti    
  4107da:	rcr    DWORD PTR [ebp-0x5b1fba42],1
  4107e0:	cld    
  4107e1:	jl     0x410763
  4107e3:	stos   DWORD PTR es:[edi],eax
  4107e4:	add    al,0x3f
  4107e6:	das    
  4107e7:	jp     0x410821
  4107e9:	fmul   st(7),st
  4107eb:	and    DWORD PTR [edi+esi*8+0x1a1f414],0x14b71d82
  4107f6:	and    BYTE PTR [edx],0x53
  4107f9:	cmp    cl,0x29
  4107fc:	cdq    
  4107fd:	xchg   ecx,eax
  4107fe:	jb     0x410851
  410800:	sbb    eax,0xe9e4999f
  410805:	jp     0x410874
  410807:	mov    ?,WORD PTR [edi+0x419a5a8]
  41080d:	popa   
  41080e:	mov    WORD PTR [eax],fs
  410810:	(bad)  
  410811:	popf   
  410812:	fdiv   DWORD PTR [edi]
  410814:	sar    edi,cl
  410816:	(bad)  
  410817:	popf   
  410818:	cli    
  410819:	dec    eax
  41081a:	mov    ebp,0x89f440d7
  41081f:	test   BYTE PTR [eax],dh
  410821:	aad    0xaa
  410823:	adc    esi,0xf95982b5
  410829:	retf   
  41082a:	jge    0x4107b8
  41082c:	sub    ebp,ebx
  41082e:	int    0xd3
  410830:	jl     0x410873
  410832:	test   DWORD PTR [edx],edi
  410834:	aam    0xe0
  410836:	outs   dx,BYTE PTR ds:[esi]
  410837:	mov    ds:0xb0e74b4e,eax
  41083c:	js     0x410829
  41083e:	mov    ebx,0x9f2c9ee1
  410843:	icebp  
  410844:	in     eax,0xa4
  410846:	sbb    ecx,DWORD PTR [eax+0x68cea048]
  41084c:	push   edx
  41084d:	retf   
  41084e:	push   ss
  41084f:	mov    esi,0x686f0369
  410854:	or     esp,ebp
  410856:	stos   DWORD PTR es:[edi],eax
  410857:	scas   eax,DWORD PTR es:[edi]
  410858:	addr16 push ebx
  41085a:	lahf   
  41085b:	outs   dx,DWORD PTR ds:[esi]
  41085c:	push   esp
  41085d:	add    ebp,edi
  41085f:	mov    esp,0xfd69d75b
  410864:	add    eax,0xc25d4078
  410869:	or     eax,0xaf25f6f8
  41086e:	lea    ecx,[esi-0x75d05c31]
  410874:	out    dx,al
  410875:	mov    al,ds:0x1c3d6241
  41087a:	pop    eax
  41087b:	push   ecx
  41087c:	jb     0x4108e5
  41087e:	xor    BYTE PTR [edx],dh
  410880:	inc    esi
  410881:	andps  xmm3,XMMWORD PTR [ebp+0xa]
  410885:	cmp    cl,dl
  410887:	pop    edi
  410888:	sti    
  410889:	dec    esi
  41088a:	and    BYTE PTR [ecx],dh
  41088c:	dec    ebp
  41088d:	pop    esp
  41088e:	xchg   ebp,eax
  41088f:	fmul   QWORD PTR [ecx]
  410891:	jns    0x4108d3
  410893:	xchg   ecx,eax
  410894:	aam    0x82
  410896:	and    eax,0x87f8816a
  41089b:	jnp    0x410841
  41089d:	sar    al,cl
  41089f:	das    
  4108a0:	push   edi
  4108a1:	repz aad 0x5e
  4108a4:	lods   al,BYTE PTR ds:[esi]
  4108a5:	or     al,0xc8
  4108a7:	pushw  ss
  4108a9:	dec    ebx
  4108aa:	mov    dl,0x17
  4108ac:	repnz mov ebx,0xb811ef6c
  4108b2:	mov    esp,ecx
  4108b4:	add    esp,DWORD PTR [edx+0x5b]
  4108b7:	xchg   ebp,eax
  4108b8:	sbb    DWORD PTR [edx],ecx
  4108ba:	daa    
  4108bb:	push   ebx
  4108bc:	xor    al,0xf0
  4108be:	pusha  
  4108bf:	test   DWORD PTR [ecx+ebp*1],0x6e7127f4
  4108c6:	aam    0x80
  4108c8:	retf   
  4108c9:	push   esi
  4108ca:	adc    al,0x78
  4108cc:	push   ebp
  4108cd:	inc    ebp
  4108ce:	pushf  
  4108cf:	and    cl,al
  4108d1:	jp     0x4108c9
  4108d3:	fwait
  4108d4:	jne    0x410939
  4108d6:	test   al,0x68
  4108d8:	mov    eax,0xfc26245c
  4108dd:	fs aam 0x13
  4108e0:	push   0x8e1b268d
  4108e5:	in     eax,dx
  4108e6:	loopne 0x4108b0
  4108e8:	inc    eax
  4108e9:	mov    cl,0x4f
  4108eb:	pushf  
  4108ec:	and    al,0x36
  4108ee:	lea    ebp,ds:0x15bb1bed
  4108f4:	pushf  
  4108f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f6:	pushf  
  4108f7:	jecxz  0x41090c
  4108f9:	mov    ch,0xc4
  4108fb:	pop    ebp
  4108fc:	xchg   edx,eax
  4108fd:	sub    al,0x11
  4108ff:	adc    al,0x24
  410901:	scas   al,BYTE PTR es:[edi]
  410902:	mov    WORD PTR [edx+0x789af3d7],sp
  410909:	pop    ebp
  41090a:	push   ss
  41090b:	cmp    BYTE PTR [esi+0x7d],bh
  41090e:	push   eax
  41090f:	repz pop esp
  410911:	dec    edx
  410912:	mov    ecx,0xb56fe95a
  410917:	jns    0x410945
  410919:	or     ebx,edi
  41091b:	(bad)  
  41091c:	dec    ebx
  41091d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41091e:	push   cs
  41091f:	pop    edi
  410920:	cmc    
  410921:	push   ecx
  410922:	mov    dl,0xa0
  410925:	cmp    al,0x5a
  410927:	or     al,0x5
  410929:	pop    edx
  41092a:	pop    ebp
  41092b:	push   0x8d88efc2
  410930:	loopne 0x41092e
  410932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410933:	stos   BYTE PTR es:[edi],al
  410934:	cmp    eax,0xb1c4d7bf
  410939:	jns    0x410938
  41093b:	int    0xd4
  41093d:	cmp    eax,0x2bbbb37e
  410942:	aaa    
  410943:	push   esi
  410944:	mov    dh,BYTE PTR [edi+0x1743aa4d]
  41094a:	push   ss
  41094b:	pop    edi
  41094c:	pusha  
  41094d:	pop    ecx
  41094e:	clc    
  41094f:	enter  0x24fc,0xea
  410953:	data16 lock loopne 0x4108fd
  410957:	call   0xd239601a
  41095c:	dec    edx
  41095d:	(bad)  
  41095e:	ins    BYTE PTR es:[edi],dx
  41095f:	retf   
  410960:	icebp  
  410961:	jmp    0xa05a:0x181a5c48
  410968:	lahf   
  410969:	and    bl,dl
  41096b:	xchg   ebp,eax
  41096c:	mov    eax,ds:0x97635ebc
  410971:	dec    esp
  410972:	xor    al,0x27
  410974:	cli    
  410975:	jl     0x41095c
  410977:	mov    BYTE PTR [ecx],cl
  410979:	out    0x77,eax
  41097b:	or     esp,DWORD PTR [edx+0x4a5a33bc]
  410981:	jmp    0x41092a
  410983:	inc    ebx
  410984:	push   ecx
  410985:	mov    ch,0x5e
  410987:	test   cl,0xe
  41098a:	jne    0x410967
  41098c:	or     DWORD PTR [edx+0x32],eax
  41098f:	dec    esp
  410990:	ins    DWORD PTR es:[edi],dx
  410991:	add    al,BYTE PTR [edx+ebp*4]
  410994:	lahf   
  410995:	retf   
  410996:	jb     0x4109ea
  410998:	clc    
  410999:	and    esi,DWORD PTR ds:0x78c30ad4
  41099f:	and    ebp,DWORD PTR [ecx-0x6d94ac1f]
  4109a5:	repnz push 0xffffffda
  4109a8:	dec    edx
  4109a9:	pop    ss
  4109aa:	jecxz  0x410958
  4109ac:	adc    al,0x86
  4109ae:	inc    DWORD PTR [ebp-0x1504821e]
  4109b4:	dec    edi
  4109b5:	int3   
  4109b6:	and    BYTE PTR [edx+eiz*2+0x30],al
  4109ba:	outs   dx,DWORD PTR ds:[esi]
  4109bb:	hlt    
  4109bc:	fimul  DWORD PTR [ebx-0x396616bf]
  4109c2:	ds and bl,0xae
  4109c6:	pop    ss
  4109c7:	or     ah,bh
  4109c9:	xchg   esi,eax
  4109ca:	loope  0x4109e2
  4109cc:	mov    ch,0xd
  4109ce:	jno    0x410a40
  4109d0:	dec    edi
  4109d1:	xor    DWORD PTR [ebx+0x18],0xffffffeb
  4109d5:	out    0xe9,al
  4109d7:	and    ebx,DWORD PTR [ebp+0x39]
  4109da:	jmp    0xf04f:0xeabe53e5
  4109e1:	xor    DWORD PTR [esi-0x57c8ddbd],esi
  4109e7:	cs pop eax
  4109e9:	adc    DWORD PTR [eax+0x678373fc],0x12
  4109f0:	repnz imul edi,DWORD PTR [edx],0x1f
  4109f4:	test   BYTE PTR [eax+0x2e3da73f],bh
  4109fa:	xor    eax,0x8babfae
  4109ff:	clc    
  410a00:	sub    bl,ch
  410a02:	adc    eax,0x4eb4b88
  410a07:	fwait
  410a08:	mov    ch,0x7f
  410a0a:	bswap  edi
  410a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a0d:	das    
  410a0e:	cli    
  410a0f:	jns    0x410a33
  410a11:	pop    esi
  410a12:	xor    eax,DWORD PTR [edx+0x68dd8ffb]
  410a18:	mov    al,ds:0x2e803ff0
  410a1d:	daa    
  410a1e:	sti    
  410a1f:	fs push cs
  410a21:	xchg   esi,eax
  410a22:	adc    al,0xff
  410a24:	int    0x56
  410a26:	push   cs
  410a27:	jbe    0x410a08
  410a29:	ds es xchg ebx,eax
  410a2c:	addr16 jl 0x410a0c
  410a2f:	mov    WORD PTR [edx],cs
  410a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a32:	out    0xdd,eax
  410a34:	xchg   BYTE PTR [ebx+ebp*1+0x56e9006f],bl
  410a3b:	aam    0xdf
  410a3d:	cdq    
  410a3e:	leave  
  410a3f:	imul   ebx,edx,0xffffffb2
  410a42:	mov    ds:0x83da3cf3,al
  410a47:	out    0xff,eax
  410a49:	cmp    eax,0xe6a1b0f0
  410a4e:	ins    DWORD PTR es:[edi],dx
  410a4f:	xchg   edx,eax
  410a50:	lods   eax,DWORD PTR ds:[esi]
  410a51:	retf   0x3bf2
  410a54:	add    BYTE PTR [esi],bl
  410a56:	aas    
  410a57:	test   al,0x8c
  410a59:	retf   0xb1d1
  410a5c:	mov    esi,0xdfb9209b
  410a61:	mov    esi,ss
  410a63:	lods   eax,DWORD PTR ds:[esi]
  410a64:	mov    WORD PTR [ecx-0x15d8b5cf],ds
  410a6a:	out    dx,al
  410a6b:	sti    
  410a6c:	rcl    DWORD PTR [ebx+eax*4+0x5],1
  410a70:	inc    esi
  410a71:	mov    ecx,0xcf789b7d
  410a76:	rcl    eax,1
  410a78:	(bad)  
  410a79:	jnp    0x410a25
  410a7b:	fnstenv [esi+0xa905636]
  410a81:	adc    DWORD PTR [edx+0x48],eax
  410a84:	xchg   ecx,eax
  410a85:	pop    ds
  410a86:	adc    eax,0xafbe70e5
  410a8b:	push   ds
  410a8c:	jle    0x410a35
  410a8e:	inc    esi
  410a8f:	adc    edx,DWORD PTR [ebp-0x62]
  410a92:	push   es
  410a93:	aas    
  410a94:	iret   
  410a95:	xchg   ebp,eax
  410a96:	jno    0x410ab1
  410a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a99:	in     eax,0x6e
  410a9b:	mov    WORD PTR [eax-0x6],es
  410a9e:	fsubr  st(7),st
  410aa0:	push   es
  410aa1:	mov    bh,BYTE PTR [ebp-0x72]
  410aa4:	icebp  
  410aa5:	call   0x59610ba7
  410aaa:	mov    dl,0xca
  410aac:	adc    BYTE PTR [edi+0x72b2038e],0xfe
  410ab3:	leave  
  410ab4:	add    BYTE PTR [edx],cl
  410ab6:	das    
  410ab7:	xchg   esp,eax
  410ab8:	adc    dl,bl
  410aba:	aad    0x9e
  410abc:	stc    
  410abd:	ja     0x410aa7
  410abf:	pop    edx
  410ac0:	mov    edi,0x7d4f57dc
  410ac5:	adc    BYTE PTR [edi],ch
  410ac7:	mov    esi,0xeed568bf
  410acc:	sub    al,0xfa
  410ace:	push   ebx
  410acf:	es inc esp
  410ad1:	test   al,0x9b
  410ad3:	adc    BYTE PTR [edi],ch
  410ad5:	stos   DWORD PTR es:[edi],eax
  410ad6:	mov    edi,0x5f9b936c
  410adb:	es gs aad 0xcd
  410adf:	scas   al,BYTE PTR es:[edi]
  410ae0:	xchg   edx,eax
  410ae1:	imul   esi,ebx,0xffffffcd
  410ae4:	inc    ebp
  410ae5:	mov    bl,0x2
  410ae7:	push   eax
  410ae8:	inc    eax
  410ae9:	(bad)  
  410aea:	mov    esi,0x1af64c11
  410aef:	outs   dx,DWORD PTR ds:[esi]
  410af0:	or     al,0x4e
  410af2:	mov    ah,0x3c
  410af4:	add    al,0x24
  410af6:	mov    ds:0x28bfe01c,al
  410afb:	push   es
  410afc:	dec    ebx
  410afd:	adc    eax,DWORD PTR [edi]
  410aff:	repnz es xor eax,0x76f97dfe
  410b06:	ins    DWORD PTR es:[edi],dx
  410b07:	stc    
  410b08:	pop    esp
  410b09:	jp     0x410b8a
  410b0b:	inc    esp
  410b0c:	cwde   
  410b0d:	inc    esi
  410b0e:	aas    
  410b0f:	dec    ebp
  410b10:	dec    esp
  410b11:	and    DWORD PTR [esi+edi*1],0x29cce45c
  410b18:	dec    eax
  410b19:	pop    esp
  410b1a:	fadd   st,st(5)
  410b1c:	call   0xdb44:0x12683d4f
  410b23:	mov    WORD PTR [edx+0x306130bc],fs
  410b29:	adc    esi,DWORD PTR [edx-0x4a]
  410b2c:	add    DWORD PTR [esi-0x51],edx
  410b2f:	adc    eax,0x4197b1fc
  410b34:	xchg   ebx,eax
  410b35:	(bad)  
  410b36:	(bad)  
  410b37:	adc    DWORD PTR [edx-0x5ed4ca74],edi
  410b3d:	les    esi,FWORD PTR [ebx+0x22]
  410b40:	jecxz  0x410b1b
  410b42:	dec    eax
  410b43:	jne    0x410ad9
  410b45:	pop    ecx
  410b46:	dec    ecx
  410b47:	(bad)  
  410b48:	out    0x79,eax
  410b4a:	das    
  410b4b:	popf   
  410b4c:	dec    edx
  410b4d:	lgdtd  [eax]
  410b50:	mov    WORD PTR [eax-0x4c],ds
  410b53:	jmp    0x2c62:0x5bd716
  410b5a:	mov    al,0x1f
  410b5c:	mov    edi,0x73c8153a
  410b61:	cmp    dh,BYTE PTR [ebp+0x56]
  410b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b65:	mov    edi,DWORD PTR [eax-0x7362e383]
  410b6b:	cwde   
  410b6c:	lods   al,BYTE PTR ds:[esi]
  410b6d:	aad    0xa2
  410b6f:	outs   dx,BYTE PTR ds:[esi]
  410b70:	and    al,0xcf
  410b72:	(bad)  [ebp+0x63cc72a1]
  410b78:	xor    bh,al
  410b7a:	add    esp,DWORD PTR [ebp+0x21]
  410b7d:	dec    BYTE PTR [edi+eiz*8]
  410b80:	shl    bh,0x3f
  410b83:	fidivr WORD PTR [ecx-0x4d]
  410b86:	mov    al,BYTE PTR [edx]
  410b88:	cmp    BYTE PTR cs:[esi-0x331d652c],dh
  410b8f:	fdivr  DWORD PTR [esi-0x777a9e90]
  410b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b96:	dec    ebx
  410b97:	je     0x410bd2
  410b99:	not    ch
  410b9b:	outs   dx,DWORD PTR ds:[esi]
  410b9c:	fdiv   DWORD PTR [esi-0x59]
  410b9f:	dec    esi
  410ba0:	data16 or BYTE PTR [ebx+0x7ce54294],bh
  410ba7:	inc    esi
  410ba8:	int    0xfe
  410baa:	dec    ebx
  410bab:	adc    DWORD PTR [esi],esi
  410bad:	inc    eax
  410bae:	aaa    
  410baf:	aas    
  410bb0:	iret   
  410bb1:	test   BYTE PTR [edx-0x5b],al
  410bb4:	or     eax,0xf1c57782
  410bb9:	pop    ebp
  410bba:	cwde   
  410bbb:	add    eax,0xbe40a619
  410bc0:	hlt    
  410bc1:	xor    DWORD PTR [edi],edx
  410bc3:	cmp    eax,0xe16d790
  410bc8:	mov    DWORD PTR [eax],esp
  410bca:	pop    ebx
  410bcb:	jmp    FWORD PTR [ebx+0x1663c442]
  410bd1:	pop    esp
  410bd2:	cwde   
  410bd3:	add    eax,0xbe5bf75a
  410bd8:	test   eax,0xbb9dac15
  410bdd:	test   eax,0x232a6d7a
  410be2:	sub    BYTE PTR [edx-0x566f0e85],bh
  410be8:	outs   dx,BYTE PTR ds:[esi]
  410be9:	or     ecx,edi
  410beb:	in     al,0x19
  410bed:	inc    edx
  410bee:	(bad)  
  410bef:	loopne 0x410c51
  410bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bf2:	jb     0x410c4d
  410bf4:	ficom  WORD PTR [ebp+0x4c80012a]
  410bfa:	pop    edx
  410bfb:	adc    bl,BYTE PTR [esi+esi*8-0x7ea62d83]
  410c02:	and    al,0x6c
  410c04:	sub    BYTE PTR [ecx+0x23],dl
  410c07:	mov    eax,ds:0x1ffc31df
  410c0c:	xchg   esp,eax
  410c0d:	icebp  
  410c0e:	mov    eax,ds:0xace30c70
  410c13:	pop    ebx
  410c14:	enter  0x522f,0x48
  410c18:	adc    DWORD PTR [edx-0x57d74de3],esp
  410c1e:	(bad)  
  410c20:	int    0x6b
  410c22:	out    dx,al
  410c23:	cdq    
  410c24:	xor    BYTE PTR [edi-0x5b715c6d],0x75
  410c2b:	(bad)  
  410c2c:	xchg   edi,eax
  410c2d:	fisub  WORD PTR [ecx]
  410c2f:	push   edi
  410c30:	and    BYTE PTR [edx],cl
  410c32:	enter  0x776d,0x4f
  410c36:	(bad)  
  410c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c38:	leave  
  410c39:	inc    ebp
  410c3a:	and    DWORD PTR [eax+0x6f557f4c],edi
  410c40:	sbb    BYTE PTR [ebx-0x4b],bh
  410c43:	stc    
  410c44:	dec    ebp
  410c45:	aas    
  410c46:	sub    ah,ch
  410c48:	retf   0x9f16
  410c4b:	data16 lock fld QWORD PTR [edx+0x6438101d]
  410c53:	and    al,0xf2
  410c55:	sbb    DWORD PTR [edi+eiz*4],edx
  410c58:	lock mov esp,0x56ba2266
  410c5e:	or     ebp,0x2b
  410c61:	cdq    
  410c62:	mov    eax,0x3e7e991d
  410c67:	scas   eax,DWORD PTR es:[edi]
  410c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c69:	jl     0x410c3d
  410c6b:	xchg   BYTE PTR [edi+0x14],bl
  410c6e:	out    0x64,al
  410c70:	hlt    
  410c71:	daa    
  410c72:	je     0x410c45
  410c74:	sub    eax,0x4b08aa0
  410c79:	pop    ebp
  410c7a:	dec    esi
  410c7b:	adc    edx,0xffffffb8
  410c7e:	mov    fs,edx
  410c80:	ss cld 
  410c82:	ss jmp 0xb057889b
  410c88:	add    DWORD PTR [esi+0xcc62178],0xffffffd4
  410c8f:	cmc    
  410c90:	cdq    
  410c91:	jle    0x410c79
  410c93:	inc    esp
  410c94:	adc    al,0x6e
  410c96:	or     BYTE PTR [ebp+0x604ab3a7],bl
  410c9c:	or     eax,0xc8be3589
  410ca1:	mov    es,WORD PTR [ebp+0x62c94ab]
  410ca7:	scas   eax,DWORD PTR es:[edi]
  410ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca9:	int    0x6a
  410cab:	(bad)  
  410cac:	and    eax,0xd59c478
  410cb1:	repnz and al,0x3b
  410cb4:	retf   0xb48
  410cb7:	ds mov eax,0xe89c9441
  410cbd:	inc    edx
  410cbe:	test   DWORD PTR [ebp+0x5bcd4680],ebp
  410cc4:	lock xchg ecx,eax
  410cc6:	outs   dx,DWORD PTR ds:[esi]
  410cc7:	xor    BYTE PTR [edi],0xf6
  410cca:	mov    ecx,esp
  410ccc:	and    ah,BYTE PTR [edi-0x29]
  410ccf:	dec    esp
  410cd0:	sub    BYTE PTR [edi+0x2ad00226],0xa1
  410cd7:	sub    eax,0xe806f645
  410cdc:	out    0x10,al
  410cde:	fdivr  DWORD PTR [eax-0x3dbc89fd]
  410ce4:	(bad)  
  410ce5:	sub    eax,0xd13fb59f
  410cea:	sub    ebx,DWORD PTR [ebx-0x42]
  410ced:	je     0x410d5b
  410cef:	adc    al,0x7a
  410cf1:	cmc    
  410cf2:	dec    edi
  410cf3:	jae    0x410cea
  410cf5:	push   es
  410cf6:	add    al,0xab
  410cf8:	mov    ebx,0xac5ce263
  410cfd:	xchg   edi,eax
  410cfe:	xor    eax,0xcda8847a
  410d03:	stos   BYTE PTR es:[edi],al
  410d04:	mov    al,0x84
  410d06:	and    ebp,DWORD PTR [edx+0x28]
  410d09:	and    DWORD PTR [edi+eax*4+0x726b6969],esi
  410d10:	mov    ch,BYTE PTR [edi+0x31]
  410d13:	les    edi,FWORD PTR [esi-0x1]
  410d16:	pop    es
  410d17:	adc    DWORD PTR [edx],esp
  410d19:	sbb    al,0x9e
  410d1b:	push   edi
  410d1c:	pop    es
  410d1d:	imul   DWORD PTR [esi+ecx*8+0x51]
  410d21:	mov    eax,0xba6c9912
  410d26:	mov    ecx,0xaf1de247
  410d2b:	lahf   
  410d2c:	jle    0x410d11
  410d2e:	jae    0x410d37
  410d30:	jecxz  0x410d1d
  410d32:	sub    eax,0xc811f9ce
  410d37:	adc    eax,0x8d6ce30b
  410d3c:	aas    
  410d3d:	cmp    BYTE PTR [edi-0x25],ah
  410d40:	shr    BYTE PTR [ebp+esi*4-0x3f],1
  410d44:	pop    ebx
  410d45:	in     al,0x3b
  410d47:	mov    edi,0xc3b6cd9
  410d4c:	or     BYTE PTR [edx+0x1],ch
  410d4f:	lods   eax,DWORD PTR ds:[esi]
  410d50:	add    al,0x47
  410d52:	cwde   
  410d53:	fnstcw WORD PTR [edx]
  410d55:	idiv   BYTE PTR [edx]
  410d57:	push   ds
  410d58:	or     BYTE PTR [eax+ebx*2-0x33],cl
  410d5c:	jns    0x410d3b
  410d5e:	push   ds
  410d5f:	lods   al,BYTE PTR ds:[esi]
  410d60:	push   ss
  410d61:	outs   dx,BYTE PTR ds:[esi]
  410d62:	js     0x410d3d
  410d64:	outs   dx,BYTE PTR ds:[esi]
  410d65:	push   esp
  410d66:	test   DWORD PTR [edx],edi
  410d68:	pop    eax
  410d69:	sbb    bh,bh
  410d6b:	call   0x3b941826
  410d70:	mov    ch,0x5a
  410d72:	jnp    0x410d3a
  410d74:	xchg   ah,ch
  410d76:	mov    edx,gs
  410d78:	btc    DWORD PTR [esi+edx*8-0x54],edx
  410d7d:	push   eax
  410d7e:	and    edx,esi
  410d80:	adc    BYTE PTR [eax],0xb0
  410d83:	mov    ch,0x61
  410d85:	push   esi
  410d86:	xchg   ebp,eax
  410d87:	inc    esp
  410d88:	fmul   QWORD PTR [eax]
  410d8a:	ins    BYTE PTR es:[edi],dx
  410d8b:	punpcklbw mm6,DWORD PTR [ecx+0x52]
  410d8f:	or     BYTE PTR [edi+0x5b64164d],0x6e
  410d96:	loopne 0x410d9e
  410d98:	push   ds
  410d99:	mov    edi,cs
  410d9b:	or     eax,0xc5cfbe41
  410da0:	inc    ebx
  410da1:	xchg   esi,eax
  410da2:	mov    ecx,0xb6a06d25
  410da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da8:	dec    esi
  410da9:	mov    bh,0x68
  410dab:	or     bl,BYTE PTR [edx]
  410dad:	xchg   ecx,eax
  410dae:	adc    DWORD PTR [ebp+esi*1+0x29558f9b],0x25
  410db6:	xchg   BYTE PTR [ecx+0x782ac71b],bh
  410dbc:	leave  
  410dbd:	adc    DWORD PTR [ecx-0x7b9ed0dc],edi
  410dc3:	ins    DWORD PTR es:[edi],dx
  410dc4:	(bad)  
  410dc5:	mov    fs,WORD PTR [edi]
  410dc7:	push   0xffffff8f
  410dc9:	mov    al,0x3c
  410dcb:	dec    eax
  410dcc:	mov    ?,WORD PTR [ecx+0x4c]
  410dcf:	mov    es:0xca99eac9,al
  410dd5:	sbb    bl,BYTE PTR ds:[esi+eax*8-0x496fc4ed]
  410ddd:	aam    0x94
  410ddf:	push   ss
  410de0:	out    dx,eax
  410de1:	push   cs
  410de2:	rol    DWORD PTR [ecx+0x1166c3ff],0x5c
  410de9:	xchg   esp,eax
  410dea:	inc    esi
  410deb:	sar    BYTE PTR [eax-0x151d9607],cl
  410df1:	or     ebx,DWORD PTR [ebx+0x44734dd7]
  410df7:	sub    ebp,ecx
  410df9:	xchg   esi,eax
  410dfa:	leave  
  410dfb:	repz adc esp,esi
  410dfe:	mov    ds:0x2bbf7630,eax
  410e03:	call   0x6076af84
  410e08:	iret   
  410e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e0a:	cmp    DWORD PTR [esp+esi*2+0x477df453],edx
  410e11:	in     eax,0x70
  410e13:	mov    cl,dl
  410e15:	(bad)  
  410e16:	call   0x6c20d426
  410e1b:	call   0x25f86c8
  410e20:	stc    
  410e21:	dec    ebp
  410e22:	loop   0x410ded
  410e24:	inc    ebx
  410e25:	mov    ch,0xd
  410e27:	mov    esi,0x371f838
  410e2c:	adc    al,BYTE PTR [ecx*2+0x1259150e]
  410e33:	mov    WORD PTR [ebx],gs
  410e35:	push   0xf81aa5c5
  410e3a:	loopne 0x410e57
  410e3c:	push   cs
  410e3d:	inc    edx
  410e3e:	aaa    
  410e3f:	mov    eax,ds:0x901dc08b
  410e44:	into   
  410e45:	hlt    
  410e46:	in     al,dx
  410e47:	(bad)  
  410e48:	push   eax
  410e49:	mov    bl,0x47
  410e4b:	jb     0x410e02
  410e4d:	loopne 0x410e50
  410e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e50:	(bad)  
  410e51:	cld    
  410e52:	(bad)  
  410e53:	adc    al,BYTE PTR [eax+0x54f7e91b]
  410e59:	mov    ch,0x1
  410e5b:	fwait
  410e5c:	ins    DWORD PTR es:[edi],dx
  410e5d:	test   al,0xdf
  410e5f:	fild   WORD PTR [esi]
  410e61:	mov    edi,0xad2bdfcb
  410e66:	push   ds
  410e67:	repz cmp al,0xe1
  410e6a:	imul   ecx,ebx,0x96554bfe
  410e70:	jne    0x410e7d
  410e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e73:	jmp    0x410e2b
  410e75:	mov    esp,0xb6f1d025
  410e7a:	out    0x11,al
  410e7c:	test   DWORD PTR [eax-0x238e7240],ebx
  410e82:	in     eax,dx
  410e83:	out    0x84,al
  410e85:	sub    BYTE PTR [edx+0x68],0xb
  410e89:	mov    dl,0xc
  410e8b:	fs (bad) 
  410e8d:	fild   DWORD PTR [edi+0x4e]
  410e90:	mov    eax,0x9fa7e3e4
  410e95:	mov    cl,BYTE PTR [esp+ebp*4+0x6afa989]
  410e9c:	push   eax
  410e9d:	pop    ss
  410e9e:	sbb    dl,al
  410ea0:	jbe    0x410eed
  410ea2:	add    ebp,eax
  410ea4:	push   ebx
  410ea5:	cmc    
  410ea6:	sbb    al,0x2a
  410ea8:	enter  0x55f1,0xdc
  410eac:	cmp    bl,BYTE PTR [edi+0x67ebf0a6]
  410eb2:	push   esi
  410eb3:	cli    
  410eb4:	test   dl,al
  410eb6:	shl    DWORD PTR [ebp+0x55],0x55
  410eba:	pop    ss
  410ebb:	ret    
  410ebc:	pop    esi
  410ebd:	xchg   DWORD PTR [esi+ebp*4-0x44],edx
  410ec1:	shl    bl,1
  410ec3:	cs sub eax,0xc9b2ec86
  410ec9:	in     eax,0x47
  410ecb:	dec    ecx
  410ecc:	dec    ebx
  410ecd:	dec    esp
  410ece:	xchg   edx,eax
  410ecf:	push   esi
  410ed0:	sub    al,0xf3
  410ed2:	cwde   
  410ed3:	xchg   edi,eax
  410ed4:	mov    al,ah
  410ed6:	int    0x88
  410ed8:	jmp    0x6c2d:0xa8263ec3
  410edf:	inc    ebp
  410ee0:	jmp    0x410f1c
  410ee2:	xor    DWORD PTR [ecx],0xffffffe2
  410ee5:	test   eax,0xefb3885c
  410eea:	adc    BYTE PTR [ebx+0x79],0x70
  410eee:	pop    edx
  410eef:	retf   
  410ef0:	popa   
  410ef1:	jl     0x410e74
  410ef3:	sbb    al,0x13
  410ef5:	jmp    0x2cd71325
  410efa:	call   0x84c4:0x851a04ac
  410f01:	mov    al,0xba
  410f03:	into   
  410f04:	rcr    BYTE PTR [esi+0xc],1
  410f07:	push   edi
  410f08:	inc    ebp
  410f09:	repz loopne 0x410f18
  410f0c:	jle    0x410e96
  410f0e:	repnz push ebx
  410f10:	ret    
  410f11:	(bad)  
  410f12:	or     bh,BYTE PTR [esi]
  410f14:	or     BYTE PTR [eax-0x7bd0e2f0],ch
  410f1a:	fcomp  DWORD PTR [edi-0xb]
  410f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f1e:	adc    DWORD PTR [esi-0x6],esp
  410f21:	or     BYTE PTR [ecx],bl
  410f23:	loop   0x410efb
  410f25:	push   cs
  410f26:	cmp    al,BYTE PTR [eax+0x22]
  410f29:	out    dx,eax
  410f2a:	jmp    0xb1b6:0x2b021a88
  410f31:	adc    DWORD PTR [edi+0x23],0x9aee5b79
  410f38:	push   esp
  410f39:	outs   dx,BYTE PTR ds:[esi]
  410f3a:	pusha  
  410f3b:	sub    ebx,edi
  410f3d:	add    al,0xaa
  410f3f:	pop    ebx
  410f40:	inc    ebp
  410f41:	dec    ebx
  410f42:	ret    
  410f43:	ins    DWORD PTR es:[edi],dx
  410f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f45:	out    dx,al
  410f46:	push   ss
  410f47:	cmc    
  410f48:	jb     0x410f1f
  410f4a:	mov    al,ds:0x8e7f2f58
  410f4f:	lds    edi,FWORD PTR [ebx+0x42]
  410f52:	in     al,dx
  410f53:	inc    edx
  410f54:	int3   
  410f55:	(bad)  
  410f56:	pop    esi
  410f57:	or     DWORD PTR ds:0x4b34d09,eax
  410f5d:	icebp  
  410f5e:	add    al,0x6e
  410f60:	cmp    dl,dl
  410f62:	or     DWORD PTR [ebx+eiz*4-0x6c776b21],ebx
  410f69:	(bad)  
  410f6b:	mov    ebx,0xc823ff60
  410f70:	jns    0x410fa9
  410f72:	test   DWORD PTR [eax+0x25081b9],edx
  410f78:	(bad)  [eax-0x31]
  410f7b:	rol    BYTE PTR ds:0xa5c8f013,cl
  410f81:	mov    gs,ebx
  410f83:	and    eax,0xb12ac283
  410f88:	mov    DWORD PTR [ebp+0xecb03b4],ebp
  410f8e:	(bad)  
  410f8f:	mov    ds:0x2c6c7959,eax
  410f94:	jl     0x410fcf
  410f96:	(bad)  
  410f97:	jbe    0x410f91
  410f99:	aaa    
  410f9a:	add    BYTE PTR [eax+0x3675f435],bl
  410fa0:	mov    dh,0xe7
  410fa2:	js     0x410f9c
  410fa4:	repnz xchg edi,eax
  410fa6:	mov    edx,0xdf216fb3
  410fab:	jp     0x411021
  410fad:	xchg   edx,eax
  410fae:	xchg   edx,eax
  410faf:	call   0xc0fda00f
  410fb4:	in     eax,dx
  410fb5:	add    al,0x32
  410fb7:	add    DWORD PTR [ebp-0x2f2c391b],0x984a470e
  410fc1:	push   esi
  410fc2:	adc    al,0x3b
  410fc4:	mov    edx,0xa209482e
  410fc9:	cmp    eax,DWORD PTR [eax-0x55]
  410fcc:	lods   eax,DWORD PTR ds:[esi]
  410fcd:	or     eax,0xb636310d
  410fd2:	jnp    0x410f5d
  410fd4:	loop   0x411039
  410fd6:	(bad)  
  410fd8:	test   DWORD PTR ds:0xf56364a6,ecx
  410fde:	jmp    DWORD PTR [ebx+0x2f]
  410fe1:	mov    esi,0xda459ae3
  410fe6:	mov    ch,BYTE PTR [ebp+0x68a3c11b]
  410fec:	outs   dx,DWORD PTR fs:[esi]
  410fee:	mov    ch,BYTE PTR [edx]
  410ff0:	fs pop eax
  410ff2:	mov    eax,ds:0x7dd28598
  410ff7:	push   edi
  410ff8:	add    al,0x16
  410ffa:	(bad)  
  410ffb:	mov    al,ds:0xac84cb05
  411000:	addr16 push es
  411002:	pushf  
  411003:	imul   edi,DWORD PTR [edx],0x42d1fad9
  411009:	(bad)  
  41100a:	rcl    BYTE PTR [edi-0xf87b622],cl
  411010:	and    ebx,DWORD PTR [edx-0x896c6eb]
  411016:	sub    esp,eax
  411018:	out    0xe0,al
  41101a:	loopne 0x410f9c
  41101c:	cmp    al,0x11
  41101e:	fwait
  41101f:	sti    
  411020:	cmpps  xmm6,XMMWORD PTR ds:0x12e4aa32,0x23
  411028:	push   ss
  411029:	xor    dh,BYTE PTR [edi+0x182844a8]
  41102f:	mov    esp,0x444db52e
  411034:	arpl   WORD PTR [eax+0x6a],dx
  411037:	jg     0x410ff6
  411039:	ins    DWORD PTR es:[edi],dx
  41103a:	xchg   edi,eax
  41103b:	pop    es
  41103c:	mov    dh,0xdb
  41103e:	aad    0xb2
  411040:	daa    
  411041:	sbb    BYTE PTR [edx-0x72108b28],ch
  411047:	pop    ebp
  411048:	cmp    dl,BYTE PTR [eax+ebp*2+0x6c]
  41104c:	loope  0x41101b
  41104e:	retf   0x26bf
  411051:	dec    eax
  411052:	ret    
  411053:	or     al,0x8b
  411055:	ss fwait
  411057:	push   0x90527100
  41105c:	xor    al,0x3
  41105e:	in     al,dx
  41105f:	ins    DWORD PTR es:[edi],dx
  411060:	push   cs
  411061:	xchg   edi,eax
  411062:	or     edi,DWORD PTR [ebp+0x3d658e23]
  411068:	pop    eax
  411069:	sbb    bh,BYTE PTR [esi+0x7]
  41106c:	ss hlt 
  41106e:	lods   eax,DWORD PTR ds:[esi]
  41106f:	mov    dl,0xa8
  411071:	js     0x411039
  411073:	aam    0x43
  411075:	inc    edi
  411076:	loope  0x411022
  411078:	mov    esp,0xd0fc7353
  41107d:	das    
  41107e:	jle    0x4110fd
  411080:	mov    DWORD PTR [edx-0x70],edi
  411083:	add    eax,esp
  411085:	sub    DWORD PTR [ebp+0x4d9f4942],ebp
  41108b:	mov    ch,0x90
  41108d:	pusha  
  41108e:	clc    
  41108f:	mov    WORD PTR [esi],?
  411091:	mov    bh,0xd4
  411093:	fwait
  411094:	inc    ebx
  411095:	ja     0x4110d6
  411097:	enter  0x6c8,0x5d
  41109b:	fldcw  WORD PTR [esi]
  41109d:	xchg   DWORD PTR [eax],ebx
  41109f:	int    0x8
  4110a1:	hlt    
  4110a2:	xlat   BYTE PTR ds:[ebx]
  4110a3:	and    DWORD PTR [esi+ebx*8+0x17],0x6d
  4110a8:	(bad)  
  4110a9:	(bad)  
  4110aa:	adc    edx,esp
  4110ac:	xor    BYTE PTR [eax],dl
  4110ae:	lods   eax,DWORD PTR ds:[esi]
  4110af:	das    
  4110b0:	aas    
  4110b1:	je     0x411115
  4110b3:	or     dh,BYTE PTR [ecx-0x23]
  4110b6:	push   cs
  4110b7:	and    BYTE PTR [ebp+0x52],cl
  4110ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bb:	loopne 0x4110c3
  4110bd:	xchg   DWORD PTR [esi+0x41],edi
  4110c0:	inc    esi
  4110c1:	mov    ebp,0x5cc40b04
  4110c6:	(bad)  
  4110c7:	lahf   
  4110c8:	mov    dh,0x9
  4110ca:	aad    0x1b
  4110cc:	rol    BYTE PTR [edi+0x573eeaa6],0x19
  4110d3:	jbe    0x411142
  4110d5:	out    0xcd,eax
  4110d7:	xor    ebx,DWORD PTR [edx]
  4110d9:	sar    edi,1
  4110db:	aaa    
  4110dc:	imul   ch
  4110de:	add    al,0xf9
  4110e0:	jbe    0x41113d
  4110e2:	ror    DWORD PTR [ecx-0x1ba18fda],0x4
  4110e9:	icebp  
  4110ea:	sub    edi,ebx
  4110ec:	clc    
  4110ed:	xchg   edi,eax
  4110ee:	sbb    BYTE PTR [edi+0x7b67f74e],ch
  4110f4:	inc    edx
  4110f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f6:	mov    DWORD PTR [eax+ecx*1],edx
  4110f9:	adc    DWORD PTR [eax-0x6064d5bf],esi
  4110ff:	add    al,0xb2
  411101:	inc    edi
  411102:	popf   
  411103:	test   BYTE PTR [esi],bl
  411105:	cmc    
  411106:	in     eax,dx
  411107:	mov    eax,0xc05dacb8
  41110c:	jp     0x4110a9
  41110e:	jns    0x411090
  411110:	fisub  WORD PTR gs:[esi-0x5d]
  411114:	jns    0x41109a
  411116:	retf   
  411117:	ror    esp,1
  411119:	push   ebx
  41111a:	xchg   edi,eax
  41111b:	xchg   ebp,eax
  41111c:	lock fwait
  41111e:	mov    eax,ds:0xe0e08dbd
  411123:	push   0xf694a011
  411128:	lods   al,BYTE PTR ds:[esi]
  411129:	pusha  
  41112a:	sbb    DWORD PTR [esi],edx
  41112c:	and    bl,dh
  41112e:	xor    al,0x91
  411130:	xor    edx,ecx
  411132:	or     al,0x5e
  411134:	adc    al,0x1b
  411136:	jbe    0x4110bb
  411138:	adc    bl,BYTE PTR [edx-0x2e]
  41113b:	sbb    eax,edx
  41113d:	mov    ds:0x73509d8a,eax
  411142:	cdq    
  411143:	into   
  411144:	sbb    ah,BYTE PTR ds:0x72b01853
  41114a:	js     0x411177
  41114c:	inc    ebx
  41114d:	stos   BYTE PTR es:[edi],al
  41114e:	je     0x411104
  411150:	xchg   esi,eax
  411151:	sbb    eax,0x5f
  411154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411155:	retf   0xc3ad
  411158:	(bad)  
  411159:	pop    esi
  41115a:	and    esp,DWORD PTR [ebx]
  41115c:	jp     0x411169
  41115e:	inc    esi
  41115f:	pop    ds
  411160:	retf   
  411161:	repz jg 0x411104
  411164:	cmp    ebx,esi
  411166:	xchg   ebx,eax
  411167:	stos   DWORD PTR es:[edi],eax
  411168:	jle    0x4111af
  41116a:	and    eax,0x17b290b5
  41116f:	mov    edx,0xe70f5321
  411174:	jmp    0x411135
  411176:	xchg   DWORD PTR [esi+0x2047c4e3],edx
  41117c:	push   ebp
  41117d:	in     al,0x51
  41117f:	popa   
  411180:	inc    esi
  411181:	fisub  WORD PTR [eax+0x5f605d4b]
  411187:	mov    ah,0xff
  411189:	fnstenv [esi]
  41118b:	ret    
  41118c:	clc    
  41118d:	das    
  41118e:	test   al,0x13
  411190:	ror    edi,0xc0
  411193:	out    dx,eax
  411194:	adc    eax,0xa2218c06
  411199:	jb     0x411164
  41119b:	in     eax,dx
  41119c:	sbb    edx,ecx
  41119e:	push   edx
  41119f:	(bad)  
  4111a0:	pop    ebp
  4111a1:	add    al,0x85
  4111a3:	inc    eax
  4111a4:	add    BYTE PTR [ecx-0x347e513c],al
  4111aa:	push   cs
  4111ab:	push   ecx
  4111ac:	das    
  4111ad:	mov    WORD PTR [edx-0x3ae799ce],?
  4111b3:	(bad)  
  4111b4:	xchg   edx,eax
  4111b5:	nop
  4111b6:	push   edx
  4111b7:	mov    WORD PTR ds:0x91dcdf61,?
  4111bd:	and    esi,ebx
  4111bf:	sbb    DWORD PTR [esi-0x25],0x22edc7f9
  4111c6:	rol    BYTE PTR [edi+0x24],0xe
  4111ca:	das    
  4111cb:	cmpxchg BYTE PTR [ecx+0x330a5a31],dh
  4111d2:	dec    esi
  4111d3:	pop    ebp
  4111d4:	cmp    bl,ch
  4111d6:	fld    DWORD PTR [edx+0x1d546b4c]
  4111dc:	arpl   WORD PTR [ebx+0x4aa25604],di
  4111e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e3:	sbb    BYTE PTR ds:[edi],dl
  4111e6:	jp     0x4111e5
  4111e8:	es aaa 
  4111ea:	rcl    DWORD PTR [ecx-0x8],0x75
  4111ee:	mov    bl,0xb4
  4111f0:	cdq    
  4111f1:	adc    ah,bl
  4111f3:	(bad)  
  4111f4:	xchg   ecx,eax
  4111f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f6:	inc    esi
  4111f7:	stos   DWORD PTR es:[edi],eax
  4111f8:	ja     0x41126e
  4111fa:	fld    st(4)
  4111fc:	pop    esp
  4111fd:	jmp    0x4111f4
  4111ff:	stos   DWORD PTR es:[edi],eax
  411200:	ds mov dl,0x4b
  411203:	pop    ebx
  411204:	mov    ecx,0x55617c34
  411209:	(bad)  
  41120b:	cli    
  41120c:	or     DWORD PTR [ebx],edi
  41120e:	das    
  41120f:	shl    BYTE PTR [ecx-0x85fa0d8],1
  411215:	sbb    DWORD PTR [esi+0x2a215514],ebp
  41121b:	pop    ebp
  41121c:	nop
  41121d:	xor    bh,cl
  41121f:	pop    ds
  411220:	pop    edx
  411221:	pop    ss
  411222:	repnz test al,0xd1
  411225:	outs   dx,DWORD PTR ds:[esi]
  411226:	lods   eax,DWORD PTR ds:[esi]
  411227:	enter  0x1552,0x6e
  41122b:	aaa    
  41122c:	adc    esp,ecx
  41122e:	xchg   DWORD PTR [ecx],ebx
  411230:	and    DWORD PTR [ebp+0x5c],0xd
  411234:	push   ebp
  411235:	jl     0x4111ee
  411237:	cli    
  411238:	jo     0x4112a0
  41123a:	(bad)  
  41123b:	jae    0x411259
  41123d:	mov    eax,ds:0x7094555a
  411242:	ins    BYTE PTR es:[edi],dx
  411243:	(bad)  
  411244:	les    esp,FWORD PTR ds:0x73a241fc
  41124a:	add    edi,DWORD PTR [ebp-0x14994b1]
  411250:	stos   DWORD PTR es:[edi],eax
  411251:	daa    
  411252:	inc    esi
  411253:	sbb    DWORD PTR [ebx],esi
  411255:	pop    ds
  411256:	enter  0x37f8,0xd1
  41125a:	fst    DWORD PTR [ecx-0x600223fe]
  411260:	loopne 0x411235
  411262:	mov    eax,0xaacb7e3d
  411267:	out    0xc8,al
  411269:	pop    esi
  41126a:	mov    DWORD PTR ds:0xbffc,0xe41d74a1
  411273:	push   edi
  411274:	push   edx
  411275:	and    ebx,esp
  411277:	mov    WORD PTR [edi-0x57eebc46],?
  41127d:	add    BYTE PTR [edx],bh
  41127f:	pushf  
  411280:	pusha  
  411281:	es sub eax,0x5bc45b8d
  411287:	imul   ecx,DWORD PTR [eax-0x22f112d5],0xd1655e4b
  411291:	add    DWORD PTR [edx],0x27ddaf6e
  411297:	lea    edi,[ebx-0x70216082]
  41129d:	int    0x4d
  41129f:	jl     0x41131d
  4112a1:	push   cs
  4112a2:	xlat   BYTE PTR ds:[ebx]
  4112a3:	push   0x128c91c7
  4112a8:	fistp  DWORD PTR [ebx]
  4112aa:	dec    ebx
  4112ab:	xchg   ebp,edi
  4112ad:	push   esp
  4112ae:	bound  edi,QWORD PTR [ecx]
  4112b0:	data16 aad 0x8e
  4112b3:	into   
  4112b4:	add    BYTE PTR [ecx-0x64fbf3f5],ch
  4112ba:	push   esp
  4112bb:	xchg   edx,eax
  4112bc:	sbb    DWORD PTR [ebp+eiz*1+0x76],ecx
  4112c0:	push   edx
  4112c1:	or     ebx,eax
  4112c3:	xchg   esi,eax
  4112c4:	mov    WORD PTR [esp+ebp*1-0x1f],fs
  4112c8:	imul   ebx,DWORD PTR [edi-0x1baf2e54],0x6b37704a
  4112d2:	mov    ebp,0x43e9410a
  4112d7:	push   eax
  4112d8:	xchg   esi,eax
  4112d9:	sbb    ah,BYTE PTR [edx-0x16]
  4112dc:	jg     0x4112ed
  4112de:	jbe    0x411264
  4112e0:	sub    eax,0xfce0b9ee
  4112e5:	daa    
  4112e6:	or     BYTE PTR [esi-0x41ed22c1],bl
  4112ec:	or     ebx,ebx
  4112ee:	mov    ?,edx
  4112f0:	cs push ss
  4112f2:	push   cs
  4112f3:	call   0x3ab9:0xf4ee3533
  4112fa:	xlat   BYTE PTR ds:[ebx]
  4112fb:	scas   eax,DWORD PTR es:[edi]
  4112fc:	in     al,dx
  4112fd:	xor    DWORD PTR [eax+0x85f8d30],0xe90c2fa5
  411307:	mov    bh,0x1b
  411309:	cmp    bh,bl
  41130b:	mov    ?,ebx
  41130d:	jge    0x411322
  41130f:	shl    DWORD PTR [ebx+esi*4+0x33],cl
  411313:	mov    ecx,0x3da9c6a2
  411318:	inc    ebp
  411319:	cmp    ah,BYTE PTR [ebx-0x7c4efb20]
  41131f:	or     al,0xac
  411321:	ret    0xe72c
  411324:	enter  0x62b8,0x5
  411328:	push   ebp
  411329:	lds    ecx,FWORD PTR [eax+0x5f2b2030]
  41132f:	nop
  411330:	in     eax,dx
  411331:	jmp    0x522e24fe
  411336:	bound  edx,QWORD PTR [ecx+ebp*8-0x5fd40244]
  41133d:	push   ebp
  41133e:	fs jecxz 0x41135a
  411341:	stos   BYTE PTR es:[edi],al
  411342:	fadd   DWORD PTR [eax]
  411344:	xor    al,0x2d
  411346:	inc    esi
  411347:	rcr    BYTE PTR [eax+0x4f14db96],0x7f
  41134e:	lea    ecx,[edx+0x20]
  411351:	dec    ebp
  411352:	repz or cl,BYTE PTR [esi+0x18]
  411356:	mov    ds:0xb1c09b93,al
  41135b:	sbb    esi,DWORD PTR [ebx]
  41135d:	inc    edi
  41135e:	xchg   BYTE PTR [ebp+0x8],al
  411361:	loop   0x411399
  411363:	inc    esi
  411364:	mov    ebx,0x6d0eec12
  411369:	jge    0x4113e6
  41136b:	add    DWORD PTR [ebp-0x3aa50321],ebx
  411371:	xchg   ebp,eax
  411372:	jo     0x4113c4
  411374:	mov    eax,ds:0xc1d76ef5
  411379:	mov    esp,DWORD PTR [edx-0x2dcb70f1]
  41137f:	cmp    DWORD PTR [eax-0x7579763],ebx
  411385:	test   eax,0x3cbf9399
  41138a:	mov    dh,0x47
  41138c:	dec    ecx
  41138d:	sbb    ebx,DWORD PTR [edi+0x58]
  411390:	lods   eax,DWORD PTR ds:[esi]
  411391:	pop    es
  411392:	mov    ds:0x97af218a,al
  411397:	adc    DWORD PTR [edx-0x37e9f2ef],ebx
  41139d:	lds    edi,FWORD PTR ss:[ebp+eax*1-0x31fe3216]
  4113a5:	push   ss
  4113a6:	imul   ebp,eax,0xffffff9b
  4113a9:	ret    0xfcfa
  4113ac:	addr16 mov ebp,0xcfb9c737
  4113b2:	inc    ebx
  4113b3:	add    bh,dl
  4113b5:	stc    
  4113b6:	fsubp  st(1),st
  4113b8:	fwait
  4113b9:	(bad)  
  4113ba:	hlt    
  4113bb:	jp     0x411384
  4113bd:	jae    0x4113b1
  4113bf:	jle    0x411364
  4113c1:	inc    ecx
  4113c2:	(bad)  
  4113c3:	mov    eax,0x2a1b3546
  4113c8:	or     DWORD PTR [eax+0x2a],0xe69e2750
  4113cf:	arpl   ax,si
  4113d1:	cld    
  4113d2:	stos   DWORD PTR es:[edi],eax
  4113d3:	add    BYTE PTR [esi+esi*2+0x3a],dl
  4113d7:	sbb    BYTE PTR [edi+0x64],al
  4113da:	cwde   
  4113db:	adc    al,0xd
  4113dd:	xor    ecx,DWORD PTR [ebp-0x7526403b]
  4113e3:	jnp    0x411455
  4113e5:	sbb    al,0xb5
  4113e7:	ins    DWORD PTR es:[edi],dx
  4113e8:	iret   
  4113e9:	ret    0x960f
  4113ec:	lock retw 0xf3a6
  4113f1:	xor    DWORD PTR [ecx-0x42],0x8c39d9ae
  4113f8:	les    edx,FWORD PTR [ecx+edi*8]
  4113fb:	sbb    cl,BYTE PTR [esi+0x7]
  4113fe:	cmp    eax,0x758bb41b
  411403:	out    dx,eax
  411404:	sub    ch,BYTE PTR [ebp+0xdf1e90c]
  41140a:	xchg   edx,eax
  41140b:	add    bh,BYTE PTR [esi]
  41140d:	lods   al,BYTE PTR ds:[esi]
  41140e:	ins    BYTE PTR es:[edi],dx
  41140f:	aas    
  411410:	test   DWORD PTR [ecx-0x71617739],esi
  411416:	adc    al,BYTE PTR [esi+0x16864778]
  41141c:	pop    esi
  41141d:	ja     0x411411
  41141f:	pop    eax
  411420:	xlat   BYTE PTR ds:[ebx]
  411421:	cld    
  411422:	data16 scas al,BYTE PTR es:[edi]
  411424:	(bad)  
  411425:	sbb    eax,0xed6bc6ff
  41142a:	dec    edi
  41142b:	hlt    
  41142c:	mov    bl,0x99
  41142e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41142f:	mov    ds:0x396d30a7,al
  411434:	repnz mov DWORD PTR [edx+ebx*2],eax
  411438:	push   fs
  41143a:	fcomp  QWORD PTR [esi]
  41143c:	leave  
  41143d:	aaa    
  41143e:	push   eax
  41143f:	into   
  411440:	into   
  411441:	cmp    al,cl
  411443:	gs into 
  411445:	adc    BYTE PTR [ebp-0x60c2a267],ch
  41144b:	into   
  41144c:	adc    ebx,DWORD PTR [ebp+0x6c]
  41144f:	fdivr  st,st(3)
  411451:	inc    ebx
  411452:	daa    
  411453:	and    eax,0xba069866
  411458:	icebp  
  411459:	mov    cl,BYTE PTR [ebx+eax*4+0x2d1faf68]
  411460:	fiadd  WORD PTR [eax-0x19]
  411463:	into   
  411464:	loop   0x411439
  411466:	and    ebp,DWORD PTR [edi+0x4d]
  411469:	jbe    0x41147a
  41146b:	xor    al,0xf
  41146d:	ror    BYTE PTR [esp+ebx*2],0x3f
  411471:	aaa    
  411472:	jae    0x4114ba
  411474:	cmp    eax,DWORD PTR [esi+ebx*4]
  411477:	mov    esp,0xb61b12ef
  41147c:	rcl    DWORD PTR [edx-0x40],0x8f
  411480:	pop    ecx
  411481:	pop    edx
  411482:	xchg   BYTE PTR [ecx+ebp*4+0x596179a3],dh
  411489:	scas   al,BYTE PTR es:[edi]
  41148a:	icebp  
  41148b:	out    dx,al
  41148c:	jb     0x411490
  41148e:	inc    edx
  41148f:	(bad)  
  411490:	jnp    0x411479
  411492:	enter  0x4dcc,0x4b
  411496:	dec    esi
  411497:	cld    
  411498:	enter  0xa82d,0x99
  41149c:	(bad)  
  41149d:	pop    edx
  41149e:	push   ebp
  41149f:	or     ebx,edx
  4114a1:	cmp    BYTE PTR [ebx-0x63a3144c],bh
  4114a7:	out    0x84,al
  4114a9:	mov    dl,0x55
  4114ab:	jb     0x4114e9
  4114ad:	dec    ecx
  4114ae:	pop    edi
  4114b0:	sbb    DWORD PTR [eax-0x133e4e5],eax
  4114b6:	add    eax,0x926e2259
  4114bb:	(bad)  
  4114bc:	fmul   DWORD PTR [ecx-0xfac6b2e]
  4114c2:	or     DWORD PTR [ebx],esp
  4114c4:	dec    esi
  4114c5:	rcl    ch,1
  4114c7:	and    al,0x5f
  4114c9:	jo     0x41149a
  4114cb:	cdq    
  4114cc:	pop    ss
  4114cd:	bound  ax,DWORD PTR [di]
  4114d1:	test   DWORD PTR [edi+0x41],esp
  4114d4:	aam    0xa9
  4114d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d7:	(bad)  
  4114d8:	sbb    DWORD PTR [eax+esi*8-0x49362013],ebp
  4114df:	arpl   bx,sp
  4114e1:	cmp    DWORD PTR [ebx],edi
  4114e3:	outs   dx,DWORD PTR ds:[esi]
  4114e4:	sbb    BYTE PTR [ecx],bl
  4114e6:	ret    
  4114e7:	shr    BYTE PTR gs:[ecx+edx*2+0x3c46b10],1
  4114ef:	(bad)  
  4114f0:	pop    ebp
  4114f1:	sub    al,0x86
  4114f3:	in     al,dx
  4114f4:	fcom   QWORD PTR [ecx]
  4114f6:	(bad)  
  4114f7:	mov    cs,WORD PTR [ebp+0x28]
  4114fa:	fs jns 0x4114d4
  4114fd:	adc    al,0xa7
  4114ff:	pop    ecx
  411500:	sbb    bl,ah
  411502:	push   esi
  411503:	cmp    eax,0x9b60b783
  411508:	test   eax,0xf588758a
  41150d:	data16 xchg BYTE PTR [eax],ah
  411510:	dec    ebp
  411511:	cmp    dl,BYTE PTR [eax]
  411513:	adc    al,0xa0
  411515:	push   edi
  411516:	sub    esp,DWORD PTR [eax]
  411518:	stc    
  411519:	arpl   WORD PTR [ebx+0x26d5032a],di
  41151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411520:	in     al,dx
  411521:	cmp    eax,ebp
  411523:	mov    WORD PTR [eax+0x2f],cs
  411526:	icebp  
  411527:	mov    WORD PTR [ebx-0x64bb5d48],ds
  41152d:	in     al,0xfa
  41152f:	(bad)  [esi]
  411531:	xor    BYTE PTR [bx-0x399a],ch
  411536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411537:	jle    0x4114eb
  411539:	cli    
  41153a:	stos   DWORD PTR es:[edi],eax
  41153b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153c:	fldz   
  41153e:	dec    eax
  41153f:	add    al,0xad
  411541:	out    0xc,al
  411543:	sar    BYTE PTR [edi-0x2491652d],1
  411549:	in     al,dx
  41154a:	jne    0x41151f
  41154c:	adc    DWORD PTR [edx+0x6e],edx
  41154f:	pop    ss
  411550:	lock mov eax,0x106027f8
  411556:	push   ebp
  411557:	adc    BYTE PTR [eax+eax*8-0x7d],dh
  41155b:	call   FWORD PTR [ecx+edi*1]
  41155e:	(bad)  
  411560:	cwde   
  411561:	mov    ch,0x23
  411563:	jle    0x4115a3
  411565:	imul   eax,edi,0xffffff99
  411568:	out    dx,al
  411569:	cs mov esp,0x6831784a
  41156f:	retf   
  411570:	push   edi
  411571:	inc    esp
  411572:	pop    ss
  411573:	add    DWORD PTR [edi],0x6e
  411576:	jo     0x411508
  411578:	daa    
  411579:	ret    0x6633
  41157c:	xchg   BYTE PTR [ebp+0x6d069b10],dl
  411582:	mov    DWORD PTR [eax+0x24],0xf7997794
  411589:	dec    eax
  41158a:	je     0x411609
  41158c:	xchg   edi,eax
  41158d:	popa   
  41158e:	dec    esp
  41158f:	(bad)  
  411590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411591:	sbb    DWORD PTR [ebx-0x5b04a9c9],0xb17f0c52
  41159b:	sub    ebp,eax
  41159d:	xor    eax,0xfe7f26bd
  4115a2:	mov    bh,BYTE PTR [ecx+0x6c84d46]
  4115a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a9:	pop    es
  4115aa:	pop    ebx
  4115ab:	mov    DWORD PTR [ecx-0x2a35b548],edx
  4115b1:	sub    eax,0x19fe5efd
  4115b6:	(bad)  
  4115b8:	and    eax,0x96d14b27
  4115bd:	xchg   ebp,eax
  4115be:	retf   
  4115bf:	xchg   edx,eax
  4115c0:	rol    BYTE PTR [edi+0x5599616a],0x7b
  4115c7:	nop
  4115c8:	rcr    DWORD PTR [ebp-0x25243b30],1
  4115ce:	jbe    0x411570
  4115d0:	aad    0x4e
  4115d2:	std    
  4115d3:	outs   dx,DWORD PTR ds:[esi]
  4115d4:	mov    bl,BYTE PTR [ebx]
  4115d6:	fnstenv [ebx+0x6bc37ef9]
  4115dc:	pop    edi
  4115dd:	fld    DWORD PTR [ebp+0x32]
  4115e0:	mov    edi,DWORD PTR [esi+ebx*2]
  4115e3:	cmc    
  4115e4:	sub    eax,0x8a7e4e19
  4115e9:	arpl   WORD PTR [ecx],sp
  4115eb:	or     BYTE PTR [edi+0x85dd7ec],bl
  4115f1:	jmp    0x41161b
  4115f3:	cs cmp al,0x8f
  4115f6:	add    eax,0xcb89da6f
  4115fb:	enter  0x373,0xb6
  4115ff:	xchg   edi,eax
  411600:	sub    edi,ebx
  411602:	mov    edx,0x8f308b36
  411607:	or     DWORD PTR [esi],edi
  411609:	mov    ds:0x83b589d3,eax
  41160e:	(bad)  
  41160f:	jnp    0x4115ad
  411611:	sbb    bl,dl
  411613:	mov    ecx,0xf01cde83
  411618:	xchg   BYTE PTR [esi+0x79],bl
  41161b:	mov    al,ds:0x29031a59
  411620:	pop    ds
  411621:	pushf  
  411622:	aad    0x1d
  411624:	loopne 0x411635
  411626:	xor    BYTE PTR [edi-0x6a8aedcb],cl
  41162c:	test   esi,ebp
  41162e:	int3   
  41162f:	add    edx,DWORD PTR [ecx]
  411631:	call   0x33e2:0x509a8c9a
  411638:	mov    ?,ebx
  41163a:	call   0x2d4ced57
  41163f:	int3   
  411640:	pop    ebp
  411641:	mov    ds:0xbf4cb9ca,eax
  411646:	stos   BYTE PTR es:[edi],al
  411647:	push   esp
  411648:	jbe    0x411669
  41164a:	jmp    0xbadb:0x72da7d1b
  411651:	shl    BYTE PTR [edi],1
  411653:	push   0xffffffa9
  411655:	icebp  
  411656:	mov    ebx,DWORD PTR [eax+eiz*1-0x386a78ed]
  41165d:	icebp  
  41165e:	in     eax,dx
  41165f:	jnp    0x4115ff
  411661:	jmp    0xae95502
  411666:	popa   
  411667:	mov    edi,0xd242d271
  41166c:	pushf  
  41166d:	pop    edx
  41166e:	inc    esi
  41166f:	outs   dx,DWORD PTR ds:[esi]
  411670:	and    esp,DWORD PTR [edx]
  411672:	push   ebx
  411673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411674:	ror    DWORD PTR [esi-0x34],0xe2
  411678:	dec    eax
  411679:	add    eax,0x66792ff5
  41167e:	mov    al,0x82
  411680:	aad    0x7d
  411682:	popf   
  411683:	pop    ebx
  411684:	xchg   esp,eax
  411685:	and    cl,ah
  411687:	aas    
  411688:	adc    eax,0xa08ff77b
  41168d:	test   al,0xbd
  41168f:	inc    ebp
  411690:	imul   eax,edx,0x246f8d0c
  411696:	in     eax,0xc6
  411698:	adc    ah,BYTE PTR [ebx+0x52]
  41169b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169c:	adc    ebx,DWORD PTR [esi-0x17]
  41169f:	jg     0x41162c
  4116a1:	lea    esi,[edx+0x470e27f4]
  4116a7:	dec    edx
  4116a8:	inc    esp
  4116a9:	jle    0x41171b
  4116ab:	cwde   
  4116ac:	mov    esi,0x2f76941c
  4116b1:	adc    ch,ah
  4116b3:	push   ss
  4116b4:	dec    ecx
  4116b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b6:	ja     0x411643
  4116b8:	push   ecx
  4116b9:	add    eax,0x9004cd9d
  4116be:	dec    esp
  4116bf:	imul   ebx,DWORD PTR [edx-0xce193f0],0x4f
  4116c6:	outs   dx,DWORD PTR ds:[esi]
  4116c7:	std    
  4116c8:	out    0xff,eax
  4116ca:	data16 adc ch,BYTE PTR [ebx]
  4116cd:	xor    BYTE PTR [esp+edi*8-0x3d],ah
  4116d1:	push   es
  4116d2:	std    
  4116d3:	add    DWORD PTR [eax-0x41f0b5],edi
  4116d9:	pushf  
  4116da:	pop    es
  4116db:	ja     0x4116bf
  4116dd:	(bad)  
  4116de:	js     0x41168b
  4116e0:	in     eax,0xdf
  4116e2:	loop   0x411740
  4116e4:	int3   
  4116e5:	(bad)  
  4116e6:	in     al,0xe5
  4116e8:	jmp    0x4116d8
  4116ea:	cmp    DWORD PTR [edi+0x42],0x223994e6
  4116f1:	mov    ch,0x25
  4116f3:	jl     0x4116ac
  4116f5:	mov    ebx,0x13d2538d
  4116fa:	adc    eax,0xd4ed1900
  4116ff:	inc    ebp
  411700:	xor    ebx,DWORD PTR [eax]
  411702:	and    DWORD PTR [eax+edx*8],edi
  411705:	xor    ah,BYTE PTR [edx+0x201c97f1]
  41170b:	int    0x9
  41170d:	rcr    cl,1
  41170f:	stos   BYTE PTR es:[edi],al
  411710:	sub    al,0xc6
  411712:	or     cl,ah
  411714:	fist   DWORD PTR [edi+edi*4+0xc]
  411718:	add    ch,BYTE PTR [esi-0x512b8854]
  41171e:	ss inc esp
  411720:	retf   
  411721:	(bad)  
  411722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411723:	les    edi,FWORD PTR [ecx-0x72150de2]
  411729:	out    dx,eax
  41172a:	mov    edi,0xcb5097e4
  41172f:	loop   0x411788
  411731:	jge    0x41175e
  411733:	repnz lock lock mov eax,0xe4dfc898
  41173b:	je     0x411749
  41173d:	cmp    BYTE PTR [ecx+0x4d58b9b6],dh
  411743:	sub    esi,DWORD PTR ss:[edi-0x5449f2c4]
  41174a:	ror    DWORD PTR [eax+esi*1],0xd3
  41174e:	push   esp
  41174f:	and    DWORD PTR [ecx],edx
  411751:	test   esp,ebp
  411753:	test   eax,0xfe381718
  411758:	or     al,0xc7
  41175a:	jae    0x411748
  41175c:	jle    0x4117b8
  41175e:	inc    edi
  41175f:	mov    ebx,0xb0e3e37f
  411764:	shl    DWORD PTR [ebx],cl
  411766:	sbb    BYTE PTR cs:[edi],dl
  411769:	push   ebx
  41176a:	rcl    ebx,cl
  41176c:	pop    esp
  41176d:	cmc    
  41176e:	or     ah,BYTE PTR [eax+0x6a]
  411771:	ja     0x4117cd
  411773:	std    
  411774:	inc    ecx
  411775:	push   ds
  411776:	(bad)  
  411777:	fsubr  st,st(1)
  411779:	sbb    al,0x9b
  41177b:	mov    cl,0xa6
  41177d:	jne    0x41177d
  41177f:	push   ds
  411780:	push   cs
  411781:	mov    ds:0x853e719,eax
  411786:	sar    BYTE PTR [ecx+0x1f],cl
  411789:	push   ecx
  41178a:	cmp    al,0xac
  41178c:	mov    ds:0x744e5398,eax
  411791:	(bad)  
  411792:	jge    0x411813
  411794:	sub    bl,al
  411796:	mov    BYTE PTR [ebx-0x3e],bh
  411799:	adc    DWORD PTR [ecx+edx*2],ebx
  41179c:	outs   dx,BYTE PTR ds:[esi]
  41179d:	sbb    al,BYTE PTR [eax-0x7f]
  4117a0:	adc    ch,dh
  4117a2:	xor    DWORD PTR [edx],0xffffffb7
  4117a5:	dec    esp
  4117a6:	mov    cl,0xb1
  4117a8:	icebp  
  4117a9:	jb     0x411798
  4117ab:	mov    ebx,0xa7de68c9
  4117b0:	jmp    0x4117eb
  4117b2:	cli    
  4117b3:	adc    dl,BYTE PTR [eax+0x38]
  4117b6:	retf   
  4117b7:	dec    esp
  4117b8:	mov    ds:0x3c301434,al
  4117bd:	xor    BYTE PTR [edx+0x5c50880b],al
  4117c3:	fwait
  4117c4:	cwde   
  4117c5:	outs   dx,DWORD PTR ds:[esi]
  4117c6:	mov    edi,0x1a95096e
  4117cb:	xor    esi,DWORD PTR [ebp+0x7b]
  4117ce:	inc    edi
  4117cf:	push   0x6e9ba4a3
  4117d4:	scas   al,BYTE PTR es:[edi]
  4117d5:	je     0x411853
  4117d7:	cs mov ah,0x9b
  4117da:	clc    
  4117db:	fist   DWORD PTR [ebx-0xf8451b2]
  4117e1:	add    BYTE PTR ss:[eax+eax*4-0x6915cd1e],ch
  4117e9:	call   0xf32f9bd7
  4117ee:	cmp    ebx,DWORD PTR [esi]
  4117f0:	nop
  4117f1:	loopne 0x411857
  4117f3:	mov    bh,0x8
  4117f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f6:	lahf   
  4117f7:	js     0x411863
  4117f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117fa:	dec    ecx
  4117fb:	stos   DWORD PTR es:[edi],eax
  4117fc:	or     al,0x80
  4117fe:	pmulhw mm4,mm5
  411801:	shr    DWORD PTR [eax-0xf3c0af2],0x5c
  411808:	inc    ebx
  411809:	sub    al,cl
  41180b:	sbb    bh,BYTE PTR [eax-0x16]
  41180e:	stos   BYTE PTR es:[edi],al
  41180f:	aas    
  411810:	mov    bh,0x1
  411812:	push   esi
  411813:	shl    bh,cl
  411815:	ds jle 0x41180a
  411818:	jp     0x41182d
  41181a:	sbb    al,0x2f
  41181c:	clc    
  41181d:	outs   dx,BYTE PTR ds:[esi]
  41181e:	out    0x7f,al
  411820:	dec    ecx
  411821:	imul   ecx,DWORD PTR [edx],0xd853686d
  411827:	xchg   ecx,eax
  411828:	test   DWORD PTR [ebx],0x39731d77
  41182e:	ja     0x4117d8
  411830:	jbe    0x411813
  411832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411833:	imul   edi,DWORD PTR [esi-0xfa3b64c],0xffffffb6
  41183a:	mov    eax,ds:0x93686ba6
  41183f:	repz (bad) 
  411841:	mov    ebp,0xd4a7f446
  411846:	icebp  
  411847:	adc    edi,eax
  411849:	(bad)
  41184c:	mov    ebp,0xda248162
  411851:	loope  0x4117db
  411853:	jmp    0xb9f298d7
  411858:	mov    esp,0x2f4e8636
  41185d:	jp     0x41180a
  41185f:	cmp    DWORD PTR [ecx],esi
  411861:	enter  0x71c5,0x59
  411865:	cwde   
  411866:	lods   al,BYTE PTR ds:[esi]
  411867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411868:	push   edx
  411869:	(bad)  
  41186b:	push   ecx
  41186c:	push   dx
  41186e:	stc    
  41186f:	xchg   esp,eax
  411870:	jae    0x41187e
  411872:	mov    ah,0x59
  411874:	inc    edx
  411875:	test   DWORD PTR [esi+0x15a6f8b8],edi
  41187b:	xor    ah,BYTE PTR [edx+0x68]
  41187e:	cmp    esi,DWORD PTR [ebx-0x39]
  411881:	adc    al,0x2e
  411883:	imul   ecx,esi,0x7190a6a4
  411889:	ja     0x4118c7
  41188b:	xchg   esi,eax
  41188c:	xor    DWORD PTR [ebp-0x2522a6b0],ebp
  411892:	jge    0x41183f
  411894:	not    DWORD PTR [eax-0x1b604659]
  41189a:	fcomp  QWORD PTR [esp+ebp*2-0x1488c138]
  4118a1:	push   esp
  4118a2:	hlt    
  4118a3:	xor    cl,BYTE PTR [edi]
  4118a5:	lods   eax,DWORD PTR ds:[esi]
  4118a6:	daa    
  4118a7:	jmp    0x411837
  4118a9:	push   edi
  4118aa:	xchg   edi,eax
  4118ab:	dec    ebp
  4118ac:	imul   ebp,DWORD PTR [ecx+ecx*8-0x489c3c0f],0xffffffc4
  4118b4:	loope  0x4118df
  4118b6:	sti    
  4118b7:	lods   eax,DWORD PTR ds:[esi]
  4118b8:	xchg   edi,eax
  4118b9:	mov    cl,bl
  4118bb:	lahf   
  4118bc:	mul    BYTE PTR [edx+0x2248d439]
  4118c2:	mov    gs,WORD PTR [eax+0xe890c1f]
  4118c8:	mov    eax,DWORD PTR [edx]
  4118ca:	pop    esi
  4118cb:	pop    ds
  4118cc:	inc    esi
  4118cd:	loope  0x4118e0
  4118cf:	push   esi
  4118d0:	repnz test DWORD PTR [esi],esp
  4118d3:	retf   
  4118d4:	mov    dh,0x1f
  4118d6:	jge    0x41185f
  4118d8:	add    eax,edi
  4118da:	test   eax,0x618c5b62
  4118df:	data16 jge 0x411926
  4118e2:	mov    BYTE PTR [esi+0x254e744d],bl
  4118e8:	mov    WORD PTR [edi],ss
  4118ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ec:	dec    eax
  4118ed:	and    DWORD PTR [ebp+0x33],esi
  4118f0:	wbinvd 
  4118f2:	dec    edx
  4118f3:	mov    edi,DWORD PTR [ecx+ebp*2-0x69c739c8]
  4118fa:	bound  edx,QWORD PTR [ebx+0x5d]
  4118fd:	je     0x411881
  4118ff:	daa    
  411900:	mov    cl,0x4b
  411902:	xchg   ebx,eax
  411903:	dec    ecx
  411904:	xchg   ebp,eax
  411905:	call   0x79ae9b83
  41190a:	stos   BYTE PTR es:[edi],al
  41190b:	jp     0x411905
  41190d:	jbe    0x411978
  41190f:	lea    esp,ds:0xc3ffb13b
  411915:	mov    esi,0x23135242
  41191a:	mov    esp,0x13b9beb9
  41191f:	test   al,0x20
  411921:	jecxz  0x4119a1
  411923:	xchg   esi,eax
  411924:	mov    ds:0x8873a641,al
  411929:	je     0x411926
  41192b:	mov    cl,0x6
  41192d:	pop    edi
  41192e:	mov    ecx,0x50dfd66e
  411933:	pop    ebp
  411934:	popf   
  411935:	mov    ebx,DWORD PTR [ebx-0x1b27b6c7]
  41193b:	mov    esi,0xf621ae48
  411940:	out    dx,al
  411941:	xor    al,0x6d
  411943:	push   DWORD PTR [edi+0x26]
  411946:	adc    BYTE PTR [ebx],0x8
  411949:	(bad)  
  41194b:	fisttp QWORD PTR [esi-0x247808b4]
  411951:	jae    0x4119d0
  411953:	inc    esp
  411954:	addr16 aaa 
  411956:	dec    ecx
  411957:	dec    ecx
  411958:	test   DWORD PTR [ebp-0x72],esp
  41195b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195c:	and    edi,edx
  41195e:	cmp    eax,0xc88284c2
  411964:	jo     0x411996
  411966:	mov    edi,0xa95db94b
  41196b:	cs test al,0xe3
  41196e:	rol    dl,0xb9
  411971:	(bad)
  411974:	or     dl,bh
  411976:	out    dx,al
  411977:	in     eax,0x10
  411979:	aad    0x4a
  41197b:	inc    esp
  41197c:	out    dx,al
  41197d:	xchg   ebx,eax
  41197e:	or     al,0x8d
  411980:	pop    edx
  411981:	aad    0x38
  411983:	jmp    0x4119e8
  411985:	stos   DWORD PTR es:[edi],eax
  411986:	or     DWORD PTR [ecx],0x5f26ae5d
  41198c:	mov    BYTE PTR [eax-0x7],dh
  41198f:	push   esi
  411990:	ret    
  411991:	cmc    
  411992:	pop    ebp
  411993:	fsubr  st(4),st
  411995:	push   ebp
  411996:	lock xor al,0x6e
  411999:	enter  0xbbdb,0xa6
  41199d:	sub    dx,cx
  4119a0:	repz aam 0xad
  4119a3:	pop    edi
  4119a4:	les    edi,FWORD PTR [ecx+0xf]
  4119a7:	or     al,0xd
  4119a9:	(bad)  
  4119aa:	mov    edi,0xcfc01f5c
  4119af:	daa    
  4119b0:	pop    eax
  4119b1:	aam    0xf5
  4119b3:	jne    0x411993
  4119b5:	jp     0x4119ef
  4119b7:	jmp    0xe392ead1
  4119bc:	adc    eax,0xf1437f2e
  4119c1:	mov    dh,0xe3
  4119c3:	test   BYTE PTR [esi+0x33],ch
  4119c6:	mov    ecx,0x285d1cdb
  4119cb:	pop    eax
  4119cc:	add    DWORD PTR [eax+0x7a],0xadc122b8
  4119d3:	in     eax,dx
  4119d4:	add    DWORD PTR [edx-0x4a],eax
  4119d7:	adc    BYTE PTR [ebp+0x29],dh
  4119da:	loop   0x411a55
  4119dc:	mov    edx,0xc687ea9d
  4119e1:	ret    0x5ae
  4119e4:	inc    esi
  4119e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e6:	mov    dh,0xac
  4119e8:	dec    esi
  4119e9:	les    edi,FWORD PTR [ecx]
  4119eb:	adc    eax,0x5f857bc0
  4119f0:	sbb    eax,0x210b74e2
  4119f5:	shl    DWORD PTR [esi-0x4b95de66],0x1b
  4119fc:	xchg   ecx,eax
  4119fd:	add    BYTE PTR [ecx+0x32daf02c],bl
  411a03:	cmp    dh,BYTE PTR [ebx-0x4d]
  411a06:	or     ecx,edi
  411a08:	pop    esp
  411a09:	(bad)  
  411a0a:	jge    0x411999
  411a0c:	jmp    FWORD PTR [esp+edi*2-0x7f6a0210]
  411a13:	adc    dl,BYTE PTR [esi-0x62]
  411a16:	lock std 
  411a18:	sub    al,0x6f
  411a1a:	xor    eax,0x700abc3e
  411a1f:	jnp    0x411a47
  411a21:	aam    0xc
  411a23:	(bad)  
  411a24:	pop    esi
  411a25:	repz (bad) 
  411a27:	shl    edx,1
  411a29:	in     eax,0x45
  411a2b:	mov    esi,0x7691f2c3
  411a30:	ins    DWORD PTR es:[edi],dx
  411a31:	pop    edx
  411a32:	dec    eax
  411a33:	add    esi,DWORD PTR [edx-0x76]
  411a36:	pop    ebp
  411a37:	hlt    
  411a38:	dec    ecx
  411a39:	js     0x411a65
  411a3b:	push   ebp
  411a3c:	sub    edx,DWORD PTR ds:0x9f2327ec
  411a42:	sub    al,0x5e
  411a44:	mov    edi,0x9899daa7
  411a49:	inc    esp
  411a4a:	jno    0x4119e0
  411a4c:	jb     0x411a1f
  411a4e:	add    eax,0xe9e5dad0
  411a53:	jge    0x411a0d
  411a55:	jecxz  0x4119fc
  411a57:	ret    
  411a58:	cmp    eax,0x2b8976f6
  411a5d:	dec    esp
  411a5e:	stos   DWORD PTR es:[edi],eax
  411a5f:	fistp  WORD PTR [esi+0x2b]
  411a62:	call   0x8bb7:0x8bc5928a
  411a69:	adc    bl,BYTE PTR [ebx]
  411a6b:	loop   0x411ad1
  411a6d:	daa    
  411a6e:	jbe    0x411a8e
  411a70:	push   esi
  411a71:	inc    eax
  411a72:	call   0xc2668526
  411a77:	cmp    al,0x4f
  411a79:	pop    edi
  411a7a:	inc    edi
  411a7b:	adc    ebx,0x8395cb39
  411a81:	dec    ebp
  411a82:	sti    
  411a83:	out    dx,eax
  411a84:	jecxz  0x411a1e
  411a86:	retf   0xbfec
  411a89:	pop    ds
  411a8a:	inc    eax
  411a8b:	xlat   BYTE PTR ds:[ebx]
  411a8c:	cld    
  411a8d:	inc    esp
  411a8e:	or     al,0x41
  411a90:	and    bl,BYTE PTR ds:0xcbedd007
  411a96:	cmp    eax,0x1e465466
  411a9b:	les    edi,FWORD PTR [ecx+eiz*4+0x4db56c27]
  411aa2:	dec    ebp
  411aa3:	les    ebx,FWORD PTR [ecx]
  411aa5:	fwait
  411aa6:	xor    cl,BYTE PTR [esi]
  411aa8:	adc    eax,0x5c713627
  411aad:	mov    esi,DWORD PTR [esi+edx*4]
  411ab0:	fs inc ecx
  411ab2:	dec    esi
  411ab3:	jle    0x411a40
  411ab5:	jns    0x411a7c
  411ab7:	shl    DWORD PTR [ecx-0x55],0x17
  411abb:	push   eax
  411abc:	mov    ebx,0xc6f8f54e
  411ac1:	ficomp DWORD PTR [ebx+0x25]
  411ac4:	aam    0xe5
  411ac6:	xchg   ebx,eax
  411ac7:	rcr    DWORD PTR [eax-0x365895fa],cl
  411acd:	sub    al,0xd8
  411acf:	cld    
  411ad0:	xchg   ebp,eax
  411ad1:	lods   eax,DWORD PTR ds:[esi]
  411ad2:	push   0x4c
  411ad4:	mov    ebx,0x81aef5c0
  411ad9:	aaa    
  411ada:	inc    edx
  411adb:	lods   eax,DWORD PTR ds:[esi]
  411adc:	mov    WORD PTR [ebx-0x7fcfee4c],gs
  411ae2:	add    ebx,ebx
  411ae4:	adc    BYTE PTR [ecx+0x159ac1f1],cl
  411aea:	cwde   
  411aeb:	sbb    ch,BYTE PTR [eax+edx*4]
  411aee:	sbb    eax,ebp
  411af0:	fidiv  WORD PTR [ebx-0x38]
  411af3:	int3   
  411af4:	mov    ah,0x8a
  411af6:	out    dx,eax
  411af7:	icebp  
  411af8:	jno    0x411b2f
  411afa:	xor    DWORD PTR [edx-0x34],esi
  411afd:	xchg   DWORD PTR [ebx+ebx*1-0x12],ecx
  411b01:	into   
  411b02:	imul   eax,ebx,0x604806e4
  411b08:	aam    0x7b
  411b0a:	xor    bl,0x33
  411b0d:	cs inc edx
  411b0f:	retf   0xabff
  411b12:	lods   eax,DWORD PTR ds:[esi]
  411b13:	xor    BYTE PTR [edi-0xd4fb4cc],bh
  411b19:	jp     0x411b04
  411b1b:	dec    ebx
  411b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b1d:	sar    BYTE PTR [ebp+0x6739c893],1
  411b23:	lock shr DWORD PTR [esi+ecx*8-0x6e0a9d12],cl
  411b2b:	nop
  411b2c:	test   eax,0x3fe0eb45
  411b31:	and    DWORD PTR [edx+0x1e],ebx
  411b34:	in     eax,dx
  411b35:	dec    ecx
  411b36:	pop    ebx
  411b37:	ds push 0xffffffa7
  411b3a:	mov    ds:0xf6c2251c,al
  411b3f:	sti    
  411b40:	push   0x56
  411b42:	push   esi
  411b43:	test   DWORD PTR [ebp-0x49],esp
  411b46:	pop    esi
  411b47:	push   es
  411b48:	mov    eax,ds:0xbecee0b3
  411b4d:	pop    es
  411b4e:	rol    BYTE PTR [eax+0x28fe883],cl
  411b54:	mov    ds:0xd0e129b3,eax
  411b59:	inc    eax
  411b5a:	mov    edi,0xc701402b
  411b5f:	retf   0x67c5
  411b62:	js     0x411aed
  411b64:	push   cs
  411b65:	pop    ebx
  411b66:	shr    BYTE PTR [ecx+0x3d054f27],cl
  411b6c:	scas   eax,DWORD PTR es:[edi]
  411b6d:	sub    eax,0x156d2bed
  411b72:	sub    al,0x96
  411b74:	es in  eax,dx
  411b76:	cli    
  411b77:	push   edi
  411b78:	add    DWORD PTR [ecx-0x7db08f14],edx
  411b7e:	repz push ds
  411b80:	jns    0x411b2a
  411b82:	mov    al,0xf0
  411b84:	scas   al,BYTE PTR es:[edi]
  411b85:	in     al,0xd6
  411b87:	pop    edi
  411b88:	sub    bl,BYTE PTR [ebp+0xa6fbf0d]
  411b8e:	(bad)  
  411b8f:	(bad)  
  411b90:	inc    ebp
  411b92:	clc    
  411b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b94:	xor    dl,BYTE PTR [eax-0x62]
  411b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b99:	aas    
  411b9a:	push   ds
  411b9b:	lahf   
  411b9c:	cld    
  411b9d:	sub    edi,ebp
  411b9f:	scas   eax,DWORD PTR es:[edi]
  411ba0:	jge    0x411c0a
  411ba2:	add    BYTE PTR ds:0xa66cff86,0x56
  411baa:	xor    BYTE PTR [ebp+ecx*1+0x9],al
  411bae:	mov    eax,0x45506e7e
  411bb3:	mov    cl,0x91
  411bb5:	xchg   ebp,eax
  411bb6:	popa   
  411bb7:	pop    ebx
  411bb8:	out    0x5d,al
  411bba:	je     0x411c33
  411bbc:	sub    eax,0x2303e65
  411bc1:	fist   WORD PTR [ecx+ebx*2-0x14]
  411bc5:	jno    0x411c22
  411bc7:	xor    eax,ecx
  411bc9:	sub    al,0xbc
  411bcb:	inc    esi
  411bcc:	icebp  
  411bcd:	fisub  WORD PTR [eax+0x65]
  411bd0:	xchg   BYTE PTR [ebp-0xf5a313b],ch
  411bd6:	and    bl,ch
  411bd8:	aaa    
  411bd9:	jbe    0x411c51
  411bdb:	out    dx,eax
  411bdc:	mov    al,ds:0x5f2f6d7
  411be1:	pushf  
  411be2:	adc    ebx,DWORD PTR [ebp-0x4]
  411be5:	dec    ecx
  411be6:	rol    BYTE PTR [edx],1
  411be8:	mov    ebx,0xdfbde779
  411bed:	ficom  DWORD PTR [eax]
  411bef:	inc    ebx
  411bf0:	faddp  st(7),st
  411bf2:	pop    es
  411bf3:	(bad)  
  411bf4:	das    
  411bf5:	nop
  411bf6:	mov    ah,0xaf
  411bf8:	mov    al,0x25
  411bfa:	and    BYTE PTR [edx],dl
  411bfc:	ss clc 
  411bfe:	in     al,0xaa
  411c00:	xchg   BYTE PTR [ecx+0x5dfa4817],bh
  411c06:	sbb    eax,DWORD PTR [ebp+0x43]
  411c09:	(bad)  
  411c0a:	pop    ebp
  411c0b:	push   ss
  411c0c:	inc    ebp
  411c0d:	mov    eax,ds:0xd9501b4c
  411c12:	mov    dl,BYTE PTR [ebp+ecx*2+0x14]
  411c16:	push   edx
  411c17:	sub    al,0xc
  411c19:	or     edi,DWORD PTR [eax-0x25]
  411c1c:	dec    ebx
  411c1d:	dec    ebp
  411c1e:	jnp    0x411c19
  411c20:	pop    eax
  411c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c22:	xchg   esp,eax
  411c23:	push   cs
  411c24:	xor    ecx,esi
  411c26:	sub    eax,0x1e68aa19
  411c2b:	xchg   edx,eax
  411c2c:	scas   eax,DWORD PTR es:[edi]
  411c2d:	xor    ebp,0xffffffc2
  411c30:	mov    dh,0xbc
  411c32:	fbstp  TBYTE PTR [ecx+ecx*4-0x773af4fd]
  411c39:	add    al,al
  411c3b:	inc    ecx
  411c3c:	jb     0x411beb
  411c3e:	loopne 0x411be9
  411c40:	js     0x411c5d
  411c42:	sub    edi,DWORD PTR [ebx+0x7e077d0f]
  411c48:	or     DWORD PTR [esi+esi*8],ebp
  411c4b:	scas   al,BYTE PTR es:[edi]
  411c4c:	psubq  mm4,QWORD PTR [ecx+0x30446063]
  411c53:	es retf 
  411c55:	inc    esi
  411c56:	rcl    DWORD PTR [edx+0xa585574],1
  411c5c:	xchg   esi,eax
  411c5d:	push   ds
  411c5e:	leave  
  411c5f:	cmp    esp,0xce733144
  411c65:	mov    al,ds:0x2056f375
  411c6a:	add    DWORD PTR [esi],esp
  411c6c:	jno    0x411c58
  411c6e:	cmp    eax,0x8116a9df
  411c73:	imul   esp,eax,0xfffffffc
  411c76:	jecxz  0x411ce9
  411c78:	sbb    edx,DWORD PTR [esp+edi*8-0x3170a5af]
  411c7f:	xor    dh,al
  411c81:	and    eax,edx
  411c83:	bound  eax,QWORD PTR [ebp-0x58]
  411c86:	fld    TBYTE PTR [ebp-0x61]
  411c89:	fs popa 
  411c8b:	mov    eax,ds:0x4fa108bb
  411c90:	mov    cl,0x4e
  411c92:	sub    esp,ebp
  411c94:	outs   dx,DWORD PTR ds:[esi]
  411c95:	jnp    0x411d14
  411c97:	mov    ebp,0xbf47b8f
  411c9c:	cli    
  411c9d:	push   edi
  411c9e:	pop    es
  411c9f:	cmp    esp,DWORD PTR [ebx-0x2e]
  411ca2:	ss jle 0x411c56
  411ca5:	xor    eax,0x7777cddb
  411caa:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411cac:	nop
  411cad:	inc    BYTE PTR [ecx+eiz*8-0x22aeba77]
  411cb4:	aaa    
  411cb5:	sub    bh,bh
  411cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb8:	cmp    bh,BYTE PTR cs:[eax-0x67]
  411cbc:	sub    ebx,esi
  411cbe:	sbb    BYTE PTR [edx-0x491aa1b],bh
  411cc4:	retf   0x9eb3
  411cc7:	ret    0xbe5e
  411cca:	andnps xmm2,XMMWORD PTR [eax]
  411ccd:	adc    BYTE PTR [ecx-0x56],cl
  411cd0:	and    DWORD PTR [ecx],0xfe5e18e9
  411cd6:	jmp    FWORD PTR [edx-0x1b8653ad]
  411cdc:	and    DWORD PTR [eax+ecx*4],0x3f
  411ce0:	out    dx,eax
  411ce1:	pop    ecx
  411ce2:	sub    cl,BYTE PTR [edx+ecx*1-0x4bc5b7d1]
  411ce9:	jle    0x411cbf
  411ceb:	imul   ebx,DWORD PTR [edx],0xffffffdd
  411cee:	jmp    edx
  411cf0:	xchg   edx,eax
  411cf1:	xor    bl,BYTE PTR [ebx+0xb]
  411cf4:	fstp   DWORD PTR [edi]
  411cf6:	fnstsw WORD PTR [edi+0x4e]
  411cf9:	inc    ebp
  411cfa:	jecxz  0x411d0e
  411cfc:	pusha  
  411cfd:	scas   al,BYTE PTR es:[edi]
  411cfe:	mov    BYTE PTR [eax+0x5819a687],dl
  411d04:	jnp    0x411cf2
  411d06:	and    ch,dh
  411d08:	mov    ah,0x64
  411d0a:	mov    ecx,0x2d17170c
  411d0f:	cwde   
  411d10:	ror    DWORD PTR [ebp-0x35b944d8],0x71
  411d17:	push   edx
  411d18:	mov    esp,0x6dae0e7e
  411d1d:	mov    ch,0x12
  411d1f:	cdq    
  411d20:	mov    ch,0x1a
  411d22:	fild   QWORD PTR [ebx+0x1cc5377c]
  411d28:	es loop 0x411cbf
  411d2b:	(bad)  
  411d2c:	idiv   DWORD PTR [ecx]
  411d2e:	pop    esp
  411d2f:	outs   dx,DWORD PTR ds:[esi]
  411d30:	mov    esp,0x1932f57d
  411d35:	retf   
  411d36:	jp     0x411cd8
  411d38:	aas    
  411d39:	sub    BYTE PTR [ebp+edi*1-0x5b72424c],dh
  411d40:	inc    eax
  411d41:	sub    al,0x33
  411d43:	mov    edi,0xfd773785
  411d48:	fidivr DWORD PTR [eax+0x11]
  411d4b:	nop
  411d4c:	adc    ebx,DWORD PTR [edi-0x3483cb4f]
  411d52:	(bad)  
  411d54:	sbb    ecx,edi
  411d56:	sbb    al,0x4a
  411d58:	pop    ebx
  411d59:	in     eax,dx
  411d5a:	gs or  ch,bl
  411d5d:	xor    al,0x8d
  411d5f:	stos   DWORD PTR es:[edi],eax
  411d60:	nop
  411d61:	retf   0x77b5
  411d64:	ja     0x411dd8
  411d66:	outs   dx,DWORD PTR ds:[esi]
  411d67:	mov    esp,0x1986a533
  411d6c:	and    eax,0x57daa680
  411d71:	ror    ch,1
  411d73:	xchg   ebx,eax
  411d74:	ins    DWORD PTR es:[edi],dx
  411d75:	div    BYTE PTR ds:0x2c683b7b
  411d7b:	jbe    0x411d4a
  411d7d:	jmp    0x69f78213
  411d82:	mov    esp,0xf75e0bc6
  411d87:	hlt    
  411d88:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411d8a:	sbb    eax,0x16d4dff3
  411d8f:	movsx  eax,BYTE PTR [ecx+0x7a]
  411d93:	stos   DWORD PTR es:[edi],eax
  411d94:	jmp    0x1715b7c3
  411d99:	sbb    dl,al
  411d9b:	leave  
  411d9c:	and    ebp,ecx
  411d9e:	retf   
  411d9f:	add    BYTE PTR [ebp-0x7df035c5],bh
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	xchg   BYTE PTR [eax+0x18c864cb],al
  41203a:	add    BYTE PTR [ecx-0x6a],0x50
  41203e:	mov    cl,0x86
  412040:	daa    
  412041:	dec    esi
  412042:	adc    BYTE PTR [ecx+eax*1+0x43000000],ch
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	fbld   TBYTE PTR [edx-0x2b86f5bf]
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    BYTE PTR [esi+0x216678c9],bl
  41564f:	call   0x39db:0xbbd3395c
  415656:	sbb    al,0xc7
  415658:	push   cs
  415659:	fisttp WORD PTR ds:0x98bb9b94
  41565f:	xor    DWORD PTR [ebp+0x61e9dfa],0xf49b8064
  415669:	leave  
  41566a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566b:	dec    esp
  41566c:	(bad)  
  41566d:	mov    WORD PTR [esi+0x45],cs
  415670:	fcom   QWORD PTR [edi+0x75]
  415673:	stos   DWORD PTR es:[edi],eax
  415674:	cmp    DWORD PTR [edi+0x65],ecx
  415677:	ror    al,1
  415679:	adc    DWORD PTR [edx],esp
  41567b:	sbb    DWORD PTR [ebp-0x7f269610],edx
  415681:	arpl   WORD PTR [edx+esi*4],di
  415684:	add    eax,0xe0b91d6d
  415689:	dec    eax
  41568a:	pop    ss
  41568b:	lods   al,BYTE PTR ds:[esi]
  41568c:	push   es
  41568d:	sar    BYTE PTR ds:0xf77aea74,cl
  415693:	test   eax,0x91bab9b4
  415698:	ja     0x415658
  41569a:	dec    eax
  41569b:	xor    eax,0x32bed72f
  4156a0:	dec    edi
  4156a1:	mov    esi,esi
  4156a3:	dec    ebx
  4156a4:	stc    
  4156a5:	or     esi,DWORD PTR [ecx-0x57]
  4156a8:	xchg   DWORD PTR [ebp+0x4d],edi
  4156ab:	(bad)  
  4156ac:	cmp    bh,dh
  4156ae:	or     al,0xa9
  4156b0:	sbb    ebp,DWORD PTR [eax]
  4156b2:	mov    WORD PTR [edx],fs
  4156b4:	mov    ecx,0x930b6469
  4156b9:	sub    BYTE PTR [esi],0x6c
  4156bc:	pop    esp
  4156bd:	sub    BYTE PTR [ebp+0xff97b15],dh
  4156c3:	mov    bl,0x26
  4156c5:	sub    al,0xa8
  4156c7:	dec    ecx
  4156c8:	aas    
  4156c9:	aam    0xcb
  4156cb:	xchg   ecx,eax
  4156cc:	mov    dl,0x77
  4156ce:	mov    esp,0xdc0f52e5
  4156d3:	lea    ebp,[esi-0x13]
  4156d6:	cdq    
  4156d7:	int3   
  4156d8:	fst    QWORD PTR ds:0x1daaa49c
  4156de:	mov    eax,0x540a310e
  4156e3:	inc    esi
  4156e4:	pop    ecx
  4156e5:	jns    0x415762
  4156e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e8:	sbb    esp,ecx
  4156ea:	pop    esp
  4156eb:	scas   al,BYTE PTR es:[edi]
  4156ec:	xor    eax,ecx
  4156ee:	pushf  
  4156ef:	xchg   DWORD PTR [ebp-0x784462c3],ebx
  4156f5:	(bad)  
  4156f6:	das    
  4156f7:	dec    ecx
  4156f8:	xlat   BYTE PTR ds:[ebx]
  4156f9:	and    eax,0x3d361bef
  4156fe:	fidiv  DWORD PTR [edx-0x41]
  415701:	inc    ebx
  415702:	xchg   esi,eax
  415703:	xchg   DWORD PTR [ecx],esp
  415705:	frstor [ebx]
  415707:	add    eax,0xe2381574
  41570c:	xchg   ecx,eax
  41570d:	and    dh,BYTE PTR [edx+ebp*1-0x1ff20d06]
  415714:	outs   dx,DWORD PTR ds:[esi]
  415715:	or     esp,edi
  415717:	xor    eax,0xc92ff0c1
  41571c:	jge    0x4156e6
  41571e:	dec    eax
  41571f:	cmp    eax,0xc15fe0e7
  415724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415725:	es loope 0x41575c
  415728:	jmp    0x681f7c47
  41572d:	push   esi
  41572e:	gs hlt 
  415730:	loope  0x415750
  415732:	xor    esp,DWORD PTR [ebx-0x74]
  415735:	cli    
  415736:	arpl   WORD PTR [ecx+ebx*8],bp
  415739:	mov    edi,0xa87d15df
  41573e:	test   DWORD PTR [esi+0x48],edi
  415741:	fsub   st(2),st
  415743:	int3   
  415744:	dec    ebx
  415745:	jno    0x4156e7
  415747:	std    
  415748:	std    
  415749:	or     ch,BYTE PTR [eax+0x4a]
  41574c:	inc    edi
  41574d:	aad    0x46
  41574f:	add    DWORD PTR [edi],ebp
  415751:	jle    0x41575f
  415753:	ror    DWORD PTR [esi-0x7d],cl
  415756:	mov    esp,0x1694c857
  41575b:	bound  ebp,QWORD PTR [esi+ebp*8]
  41575e:	jno    0x4157be
  415760:	dec    esp
  415761:	clc    
  415762:	jge    0x41571b
  415764:	leave  
  415765:	and    al,0x91
  415767:	popf   
  415768:	iret   
  415769:	cmp    esi,DWORD PTR [edx+0x66]
  41576c:	jg     0x415738
  41576e:	fdivr  QWORD PTR [eax]
  415770:	stc    
  415771:	out    0x3a,al
  415773:	popf   
  415774:	push   0xffffffbf
  415776:	xor    esi,esi
  415778:	sbb    dl,BYTE PTR [ebx+0x45]
  41577b:	and    eax,0x87778501
  415780:	xor    DWORD PTR [edx],ebx
  415782:	test   eax,0x4a1c280f
  415787:	xchg   esp,eax
  415788:	ja     0x4157c3
  41578a:	xchg   ecx,eax
  41578b:	jbe    0x415733
  41578d:	hlt    
  41578e:	stc    
  41578f:	mov    WORD PTR [eax],fs
  415791:	xchg   edi,eax
  415792:	(bad)  
  415793:	xlat   BYTE PTR ds:[ebx]
  415794:	fldcw  WORD PTR [eax+ecx*4]
  415797:	cmp    al,0xdf
  415799:	(bad)  
  41579a:	xchg   ebp,eax
  41579b:	sub    eax,0xb38ca6bd
  4157a0:	(bad)  
  4157a1:	es adc edx,ebx
  4157a4:	into   
  4157a5:	cwde   
  4157a6:	and    al,0xdc
  4157a8:	jmp    0x415802
  4157aa:	add    DWORD PTR [esi],esi
  4157ac:	mov    ebx,0x66058afa
  4157b1:	ret    
  4157b2:	into   
  4157b3:	add    dh,BYTE PTR [eax+eax*4+0x64eea341]
  4157ba:	addr16 enter 0x91a2,0x64
  4157bf:	lahf   
  4157c0:	loopne 0x41579e
  4157c2:	add    edx,DWORD PTR [esi]
  4157c4:	nop
  4157c5:	add    eax,0x2c345028
  4157ca:	std    
  4157cb:	inc    esp
  4157cc:	xchg   DWORD PTR [edi+0x0],esp
  4157cf:	loop   0x41578e
  4157d1:	jge    0x4157b9
  4157d3:	inc    edx
  4157d4:	xor    eax,0xd31ff07f
  4157d9:	repnz mov WORD PTR [ebx],ss
  4157dc:	jns    0x41577e
  4157de:	xor    eax,0x15591739
  4157e3:	push   es
  4157e4:	(bad)  
  4157e5:	ja     0x4157a0
  4157e7:	imul   edi,DWORD PTR [esi-0x51],0x5f
  4157eb:	jmp    0x415855
  4157ed:	jmp    0x596:0xd9aa13b1
  4157f4:	push   0xfffffffe
  4157f6:	and    eax,0x3ac134dd
  4157fb:	mov    ecx,0x5df345fe
  415800:	mov    cl,0x8e
  415802:	inc    ebp
  415803:	cmp    BYTE PTR [edi],al
  415805:	(bad)  
  415806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415807:	push   ss
  415808:	add    eax,0x7302cb8e
  41580d:	pusha  
  41580e:	ss mov cl,0x88
  415811:	push   0x4b
  415813:	add    BYTE PTR [edx],dh
  415815:	enter  0xaee8,0x9f
  415819:	xor    al,0x1a
  41581b:	ja     0x4157d4
  41581d:	adc    BYTE PTR [ebx-0x1264b5f6],0xd7
  415824:	ds daa 
  415826:	pop    edi
  415827:	xchg   ebx,eax
  415828:	xchg   edx,eax
  415829:	aaa    
  41582a:	fnstenv [ebp+0x12f5e0c8]
  415830:	ins    DWORD PTR es:[edi],dx
  415831:	and    al,BYTE PTR [ebx+0xb]
  415834:	sub    esi,0x2
  415837:	mov    ds:0x458bc31,al
  41583c:	mov    ds:0xc7e8ce67,al
  415841:	rol    BYTE PTR [esi+eiz*4-0xa],1
  415845:	jmp    0x41581d
  415847:	jmp    0x41581d
  415849:	imul   esp,edx,0xa841965c
  41584f:	mov    dh,0xb5
  415851:	jg     0x415844
  415853:	pop    ss
  415854:	cmc    
  415855:	mov    bh,0xbc
  415857:	fild   DWORD PTR ds:0xc3cc2e21
  41585d:	int    0x1e
  41585f:	push   edi
  415860:	iret   
  415861:	ins    DWORD PTR es:[edi],dx
  415862:	mov    eax,ds:0x13aca67
  415867:	in     al,0x75
  415869:	mov    DWORD PTR [ebx],edi
  41586b:	fiadd  DWORD PTR [edi+0x2c]
  41586e:	mov    ds:0xb4a8fe6f,eax
  415873:	jmp    0x2ea6:0xd546
  415879:	sub    eax,0xe0bec466
  41587e:	test   al,0x9e
  415880:	aad    0x3f
  415882:	adc    al,ah
  415884:	(bad)  
  415885:	out    dx,al
  415886:	xchg   esp,eax
  415887:	cld    
  415888:	cli    
  415889:	leave  
  41588a:	mov    bh,0x22
  41588c:	fadd   DWORD PTR ds:0x27aca418
  415892:	scas   eax,DWORD PTR es:[edi]
  415893:	mov    ah,0x98
  415895:	xchg   ebp,esp
  415897:	sub    dh,BYTE PTR [esp+ecx*1-0x10]
  41589b:	stc    
  41589c:	push   0xffffffae
  41589e:	rol    DWORD PTR [ebx-0x13c7a9ef],cl
  4158a4:	fucom  st(4)
  4158a6:	dec    edi
  4158a7:	lds    ecx,FWORD PTR [edi-0x1]
  4158aa:	or     eax,0xa1dd1978
  4158af:	xor    BYTE PTR [esi+0xaac6e3d],bl
  4158b5:	jo     0x415916
  4158b7:	ret    0x7201
  4158ba:	clc    
  4158bb:	pop    edx
  4158bc:	int    0xf0
  4158be:	mov    eax,ds:0xf27dcf39
  4158c3:	or     ebp,esi
  4158c5:	inc    ebp
  4158c7:	xchg   BYTE PTR [eax+0x6b],bl
  4158ca:	and    DWORD PTR [eax-0x3],ebx
  4158cd:	nop
  4158ce:	add    BYTE PTR [ecx],0xe0
  4158d1:	icebp  
  4158d2:	sub    al,0x79
  4158d4:	cmp    BYTE PTR [ecx-0x2a],ah
  4158d7:	dec    eax
  4158d8:	adc    al,0x58
  4158da:	fs pop ebp
  4158dc:	(bad)  
  4158de:	test   ebp,0x70837291
  4158e4:	out    0xb8,al
  4158e6:	cmp    ecx,0x75
  4158e9:	sub    dh,ah
  4158eb:	mov    cl,0x83
  4158ed:	jno    0x4158d9
  4158ef:	in     al,dx
  4158f0:	scas   al,BYTE PTR es:[edi]
  4158f1:	pop    ecx
  4158f2:	lahf   
  4158f3:	pop    esi
  4158f4:	in     eax,0xb6
  4158f6:	in     eax,0x11
  4158f8:	pop    ebx
  4158f9:	mov    al,ds:0xdd12c771
  4158fe:	pop    esp
  4158ff:	jle    0x415929
  415901:	push   ebp
  415902:	push   edi
  415903:	or     al,0xe
  415905:	dec    edi
  415906:	stc    
  415907:	cmp    DWORD PTR [edi],ebp
  415909:	xchg   ebx,eax
  41590a:	adc    edx,DWORD PTR [esi]
  41590c:	pop    edx
  41590d:	es jge 0x4158d8
  415910:	mov    DWORD PTR [ebp+0x482e89ac],eax
  415916:	or     al,bh
  415918:	out    0xf9,al
  41591a:	not    BYTE PTR [ebp+0x69162db7]
  415920:	mov    edi,0xd7a9a5e3
  415925:	cwde   
  415926:	jmp    0x2b49a980
  41592b:	bound  esp,QWORD PTR [edx+0x39]
  41592e:	idiv   bh
  415930:	inc    ebp
  415931:	fidivr DWORD PTR [ecx]
  415933:	(bad)  
  415934:	jmp    0x415955
  415936:	scas   al,BYTE PTR es:[edi]
  415937:	mov    dl,0xd5
  415939:	fldenv [esi]
  41593b:	ja     0x415952
  41593d:	pop    ebp
  41593e:	das    
  41593f:	stc    
  415940:	jp     0x415909
  415942:	pop    eax
  415943:	add    al,0x4e
  415945:	sub    BYTE PTR [ecx+0x24923c5a],dh
  41594b:	cli    
  41594c:	icebp  
  41594d:	ds mov dh,0xc
  415950:	sub    al,0xc4
  415952:	adc    ebp,ecx
  415954:	pop    es
  415955:	mov    edi,0xd7acd5db
  41595a:	mov    esi,0x9a8f1498
  41595f:	jno    0x4158e7
  415961:	ds dec eax
  415963:	push   edi
  415964:	add    al,0xf9
  415966:	loopne 0x41596a
  415968:	xor    ah,BYTE PTR [eax]
  41596a:	test   eax,0xdbf492f7
  41596f:	int3   
  415970:	hlt    
  415971:	ret    
  415972:	imul   edi,DWORD PTR [eax],0xe6b77b24
  415978:	cwde   
  415979:	mov    bh,0xd2
  41597b:	pop    esp
  41597c:	mov    bh,0x7
  41597e:	arpl   ax,bp
  415980:	out    dx,eax
  415981:	in     eax,dx
  415982:	test   eax,0x7c68626
  415987:	sti    
  415988:	jl     0x415961
  41598a:	mov    ch,0x34
  41598c:	jnp    0x4159e6
  41598e:	pop    ss
  41598f:	push   ds
  415990:	daa    
  415991:	pusha  
  415992:	xchg   esi,eax
  415993:	xlat   BYTE PTR ds:[ebx]
  415994:	inc    esi
  415995:	push   ebp
  415996:	mov    eax,0x560ec322
  41599b:	xor    esp,DWORD PTR [edi]
  41599d:	pushf  
  41599e:	fdivr  DWORD PTR [ebx+0x4d]
  4159a1:	adc    DWORD PTR [ecx-0x4a4a6c61],esp
  4159a7:	mov    ch,BYTE PTR [edx]
  4159a9:	imul   esi,DWORD PTR [esi-0x42],0xbbf750ba
  4159b0:	mov    esp,0xb25fbf10
  4159b5:	add    al,0x34
  4159b7:	jns    0x4159b1
  4159b9:	pop    esp
  4159ba:	lahf   
  4159bb:	call   0xef23:0xeb248e45
  4159c2:	inc    esi
  4159c3:	mov    edx,edx
  4159c5:	sub    DWORD PTR [ebx+0x45],esp
  4159c8:	dec    ebp
  4159c9:	inc    edx
  4159ca:	test   eax,0x5c43f5c7
  4159cf:	jb     0x415968
  4159d1:	aaa    
  4159d2:	or     DWORD PTR [ecx+0x4a],esp
  4159d5:	stc    
  4159d6:	inc    edi
  4159d7:	cwde   
  4159d8:	mov    edx,0xe557490c
  4159dd:	sbb    eax,0xc4415bbb
  4159e2:	cmp    al,0x8
  4159e4:	(bad)  
  4159e5:	fidivr WORD PTR ds:0x8ffac33a
  4159eb:	xlat   BYTE PTR ds:[ebx]
  4159ec:	xchg   esp,ebp
  4159ee:	jno    0x415a6c
  4159f0:	loope  0x415a16
  4159f2:	scas   eax,DWORD PTR es:[edi]
  4159f3:	hlt    
  4159f4:	pushf  
  4159f5:	cld    
  4159f6:	sub    eax,0x29368d41
  4159fb:	push   cs
  4159fc:	xchg   esp,eax
  4159fd:	pop    eax
  4159fe:	ds xchg edi,eax
  415a00:	in     eax,0x4f
  415a02:	pusha  
  415a03:	(bad)  
  415a04:	fst    QWORD PTR [eax+0x3bdf9347]
  415a0a:	mov    ds:0x34d698e1,al
  415a0f:	aas    
  415a10:	cwde   
  415a11:	add    eax,esi
  415a13:	push   ss
  415a14:	call   0xdc1d:0xb8560400
  415a1b:	sbb    bh,ch
  415a1d:	jbe    0x4159f2
  415a1f:	adc    BYTE PTR [eax],ah
  415a21:	cwde   
  415a22:	add    eax,0xe07e91b0
  415a27:	mov    bl,0x58
  415a29:	arpl   WORD PTR ss:[eax-0x26],bx
  415a2d:	icebp  
  415a2e:	or     eax,0x5e100ed1
  415a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a34:	jle    0x415ab5
  415a36:	lea    edx,[ecx]
  415a38:	dec    esp
  415a39:	repz std 
  415a3b:	retf   
  415a3c:	imul   esi,DWORD PTR [esi+0x31b5e052],0x650e791
  415a46:	pop    DWORD PTR [edi-0x2178dfc9]
  415a4c:	les    esi,FWORD PTR [ebx-0x3b]
  415a4f:	shl    DWORD PTR [edi],cl
  415a51:	rcl    DWORD PTR [edx+edx*4+0x1ee28fe6],1
  415a58:	out    dx,al
  415a59:	gs pop edi
  415a5b:	cmovs  eax,DWORD PTR [ecx+0x24]
  415a5f:	push   ss
  415a60:	in     eax,dx
  415a61:	repnz ins BYTE PTR es:[edi],dx
  415a63:	sbb    eax,0xe81c2edc
  415a68:	xor    BYTE PTR [edx+ebp*1-0x80],bl
  415a6c:	xchg   bh,cl
  415a6e:	repnz fst QWORD PTR [edi+0x71]
  415a72:	sbb    ebx,DWORD PTR [edi]
  415a74:	aaa    
  415a75:	lods   eax,DWORD PTR ds:[esi]
  415a76:	push   ebx
  415a77:	mov    ebp,0x6181c8f4
  415a7c:	add    edx,DWORD PTR [ebx-0x57]
  415a7f:	dec    ebx
  415a80:	xchg   esp,eax
  415a81:	mov    BYTE PTR [ecx+eax*4+0x58edc7b7],cl
  415a88:	mov    ds:0xdb324074,al
  415a8d:	xchg   ebx,eax
  415a8e:	adc    DWORD PTR [eax-0x9],edx
  415a91:	lock popa 
  415a93:	mov    ah,cl
  415a95:	cmp    ch,BYTE PTR [edx]
  415a97:	(bad)  
  415a98:	aam    0xec
  415a9a:	aaa    
  415a9b:	xchg   ecx,eax
  415a9c:	js     0x415acf
  415a9e:	jns    0x415aac
  415aa0:	data16 es (bad) 
  415aa3:	cld    
  415aa4:	fbstp  TBYTE PTR [ebx+0x3f]
  415aa7:	pop    ss
  415aa8:	jmp    0x92508b31
  415aad:	dec    ebp
  415aae:	pop    esi
  415aaf:	xchg   esi,eax
  415ab0:	fs in  eax,0x74
  415ab3:	inc    ebp
  415ab4:	push   ecx
  415ab5:	mov    esp,0xaf8a1e4d
  415aba:	push   ebp
  415abb:	test   al,0x59
  415abd:	adc    edi,esp
  415abf:	jns    0x415b2d
  415ac1:	sbb    edx,ebp
  415ac3:	sbb    ebp,DWORD PTR [edi+edx*1+0x20]
  415ac7:	adc    cl,dh
  415ac9:	mov    ecx,0xe3dec987
  415ace:	pop    ebp
  415acf:	push   edi
  415ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad1:	sub    eax,0x754858de
  415ad6:	inc    ebp
  415ad7:	sub    al,0x1a
  415ad9:	popa   
  415ada:	cmp    BYTE PTR [esi],ah
  415adc:	aaa    
  415add:	xor    BYTE PTR [ebp-0x4d2348b7],bh
  415ae3:	xchg   BYTE PTR [ecx-0x32],bl
  415ae6:	inc    edi
  415ae7:	dec    ebp
  415ae8:	mov    dh,0x4d
  415aea:	cli    
  415aeb:	pop    ds
  415aec:	scas   eax,DWORD PTR es:[edi]
  415aed:	cmp    al,0x2c
  415aef:	mov    ebp,0xc975f25f
  415af4:	mov    esp,0x80a52cec
  415af9:	adc    eax,0xcadb98f5
  415afe:	adc    ah,BYTE PTR [ebp-0x5b]
  415b01:	sbb    DWORD PTR [edx+0x5],ecx
  415b04:	jns    0x415b06
  415b06:	or     BYTE PTR [ebx],bl
  415b08:	dec    edi
  415b09:	dec    ebx
  415b0a:	mov    bh,0xd1
  415b0c:	jns    0x415a95
  415b0e:	cmp    eax,0xd1de197b
  415b13:	ret    
  415b14:	stos   BYTE PTR es:[edi],al
  415b15:	sub    dl,ch
  415b17:	stc    
  415b18:	lahf   
  415b19:	out    dx,eax
  415b1a:	sbb    esp,DWORD PTR [esi]
  415b1c:	mov    ebx,0xa4fc0210
  415b21:	xchg   esi,eax
  415b22:	jb     0x415b35
  415b24:	lock jl 0x415b07
  415b27:	push   edi
  415b28:	fisubr DWORD PTR [ebx-0x1c687ff1]
  415b2e:	mov    ebx,0x2d6a3fab
  415b33:	std    
  415b34:	push   edi
  415b35:	mov    ebx,0x63128349
  415b3a:	adc    eax,0xb39a
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	sbb    BYTE PTR [esi-0x26937e70],dh
  415b54:	add    BYTE PTR [eax],al
  415b56:	repz add al,0x0
  415b59:	add    BYTE PTR [esi+ebx*2-0x75],bh
  415b5d:	sub    eax,DWORD PTR [esi]
  415b5f:	dec    ebx
  415b60:	and    ch,BYTE PTR [eax-0x77681ad7]
  415b66:	pop    ebx
  415b67:	push   eax
  415b68:	retf   0x6782
  415b6b:	mov    ds:0xcf147d15,al
  415b70:	lods   eax,DWORD PTR ds:[esi]
  415b71:	and    edx,eax
  415b73:	mov    ds:0x834cbee0,eax
  415b78:	outs   dx,DWORD PTR ds:[esi]
  415b79:	add    ebx,DWORD PTR [ebp-0x1f]
  415b7c:	scas   eax,DWORD PTR es:[edi]
  415b7d:	aad    0x24
  415b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b80:	dec    ecx
  415b81:	sbb    DWORD PTR [edi-0x6fc7f06d],esi
  415b87:	cmp    edx,DWORD PTR [ebx-0x5db66484]
  415b8d:	lea    esi,[edi-0x6]
  415b90:	frstor [eax-0x26]
  415b93:	mov    dh,0x18
  415b95:	mov    ebp,0xbae6c529
  415b9a:	jbe    0x415b7f
  415b9c:	mov    ebp,0x8c54b2ac
  415ba1:	xor    eax,eax
  415ba3:	lds    edx,FWORD PTR [esi+ecx*2]
  415ba6:	sub    al,0x3e
  415ba8:	xor    eax,0x7cf46ee0
  415bad:	or     ecx,edx
  415baf:	call   FWORD PTR [eax+ecx*4-0x4]
  415bb3:	adc    al,0x5f
  415bb5:	sub    al,0xb9
  415bb7:	ror    ebp,0x3e
  415bba:	iret   
  415bbb:	dec    ebx
  415bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bbd:	push   ecx
  415bbe:	fisttp DWORD PTR [edi+0x59]
  415bc1:	fistp  DWORD PTR [edi+ebx*2-0x2ff458c2]
  415bc8:	cmc    
  415bc9:	jmp    0x415b5f
  415bcb:	mov    ch,0x7e
  415bcd:	scas   al,BYTE PTR es:[edi]
  415bce:	jl     0x415bb5
  415bd0:	add    esp,edx
  415bd2:	or     al,0x9f
  415bd4:	or     eax,0xaf050a40
  415bd9:	mov    ah,0xf2
  415bdb:	pop    eax
  415bdc:	ret    
  415bdd:	lods   al,BYTE PTR ds:[esi]
  415bde:	test   al,0x26
  415be0:	cld    
  415be1:	mov    dl,0x45
  415be3:	pop    edx
  415be4:	pop    ecx
  415be5:	adc    ebx,DWORD PTR [edx]
  415be7:	ja     0x415c05
  415be9:	xchg   edi,eax
  415bea:	push   edx
  415beb:	xor    eax,0xa8ad9400
  415bf0:	push   edx
  415bf1:	dec    BYTE PTR [esi]
  415bf3:	aas    
  415bf4:	and    BYTE PTR [ebp+0x68d42959],0x72
  415bfb:	xchg   edi,eax
  415bfc:	aam    0xb8
  415bfe:	jns    0x415c1d
  415c00:	mov    dl,0x95
  415c02:	push   ecx
  415c03:	test   eax,0xb550cb03
  415c08:	test   eax,0xb14b8e15
  415c0d:	inc    esp
  415c0e:	lods   al,BYTE PTR ds:[esi]
  415c0f:	popf   
  415c10:	sub    eax,DWORD PTR [edx+eiz*1+0x24]
  415c14:	dec    ecx
  415c15:	jns    0x415c71
  415c17:	test   DWORD PTR [ecx-0x7d248eff],esi
  415c1d:	jno    0x415c24
  415c1f:	mov    ch,0x31
  415c21:	inc    eax
  415c22:	icebp  
  415c23:	mov    ah,0x88
  415c25:	dec    ecx
  415c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c27:	mov    dl,al
  415c29:	cmp    DWORD PTR [edx-0x7cf7ed0d],0x6971fee
  415c33:	jmp    0x415c72
  415c35:	stos   BYTE PTR es:[edi],al
  415c36:	in     al,dx
  415c37:	inc    edi
  415c38:	mov    ds:0xe1091f2c,al
  415c3d:	dec    ecx
  415c3e:	push   edx
  415c3f:	aaa    
  415c40:	stos   DWORD PTR es:[edi],eax
  415c41:	or     bl,BYTE PTR [esi-0x27]
  415c44:	or     al,dl
  415c46:	pop    edx
  415c47:	mov    dh,0xfe
  415c49:	in     eax,0x77
  415c4b:	cmp    edx,DWORD PTR [ebx-0x3f74561c]
  415c51:	daa    
  415c52:	push   cs
  415c53:	je     0x415c57
  415c55:	jle    0x415be4
  415c57:	add    ah,BYTE PTR [ecx-0x61ae20c6]
  415c5d:	mov    eax,0x6f2dc975
  415c62:	cmp    ecx,edx
  415c64:	outs   dx,BYTE PTR ds:[esi]
  415c65:	lods   eax,DWORD PTR ds:[esi]
  415c66:	pop    esi
  415c67:	out    dx,eax
  415c68:	fadd   DWORD PTR [eax-0x16f85ee6]
  415c6e:	jo     0x415ce9
  415c70:	mov    esi,0x18c4783b
  415c75:	and    DWORD PTR [edx-0x5e],esi
  415c78:	ds fdivrp st(6),st
  415c7b:	or     bh,BYTE PTR [edi-0x79f60ae8]
  415c81:	in     al,0xcf
  415c83:	shl    DWORD PTR [esi+ebx*2+0x63],0xe8
  415c88:	add    ch,cl
  415c8a:	ret    0xb065
  415c8d:	mov    edx,0xf8c25ec0
  415c92:	inc    DWORD PTR [ebp+0x11]
  415c95:	wrmsr  
  415c97:	add    ecx,ecx
  415c99:	(bad)  
  415c9b:	clc    
  415c9c:	and    DWORD PTR [edi-0x3],ebx
  415c9f:	push   esi
  415ca0:	mov    ch,ch
  415ca2:	pop    esi
  415ca3:	xor    bh,BYTE PTR [ebx]
  415ca5:	out    dx,eax
  415ca6:	and    BYTE PTR ds:0x3c127c87,cl
  415cac:	loope  0x415c70
  415cae:	pop    edi
  415caf:	add    al,0xe4
  415cb1:	lods   eax,DWORD PTR ds:[esi]
  415cb2:	mov    ah,0x4b
  415cb4:	jmp    0x415d2c
  415cb6:	jecxz  0x415cf2
  415cb8:	and    al,0xed
  415cba:	shl    BYTE PTR [ecx],0x78
  415cbd:	mov    dl,0x4f
  415cbf:	mov    edi,0x3f5a6c9c
  415cc4:	mov    DWORD PTR [ebx+0x619c19],edi
  415cca:	sub    ebp,DWORD PTR [ebx]
  415ccc:	mov    esp,0xe2d0d408
  415cd1:	mov    al,ds:0xd1a9adcc
  415cd6:	in     eax,0xd8
  415cd8:	mov    esp,DWORD PTR [edx+ebx*2-0x3c]
  415cdc:	xchg   esp,eax
  415cdd:	repz push ds
  415cdf:	inc    ebp
  415ce0:	in     al,dx
  415ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce2:	pusha  
  415ce3:	dec    ecx
  415ce4:	sub    BYTE PTR [ecx-0x5f25028b],cl
  415cea:	and    dl,BYTE PTR [esi+0x62]
  415ced:	mov    bl,0xc9
  415cef:	sub    BYTE PTR [edx-0x67],bh
  415cf2:	mov    ah,0x3b
  415cf4:	xlat   BYTE PTR ds:[ebx]
  415cf5:	mov    dh,0x86
  415cf7:	in     eax,dx
  415cf8:	sub    BYTE PTR [edx+0x22e82875],dh
  415cfe:	pop    ebp
  415cff:	repnz data16 mov ah,0xf0
  415d03:	add    eax,0x915ac8f5
  415d08:	test   BYTE PTR [edx+0xb2ab3bd],ch
  415d0e:	push   ds
  415d0f:	mov    ebp,0xf34c7ca3
  415d14:	scas   al,BYTE PTR es:[edi]
  415d15:	loope  0x415cee
  415d17:	push   edx
  415d18:	add    al,0xb4
  415d1a:	xchg   BYTE PTR [edx-0xa62195d],bh
  415d20:	jmp    0x415d2f
  415d22:	mov    ch,0x77
  415d24:	pop    esi
  415d25:	sti    
  415d26:	inc    eax
  415d27:	xlat   BYTE PTR ds:[ebx]
  415d28:	dec    ebx
  415d29:	inc    edi
  415d2a:	outs   dx,DWORD PTR ds:[esi]
  415d2b:	add    al,0x22
  415d2d:	push   es
  415d2e:	xchg   edi,eax
  415d2f:	or     ch,BYTE PTR [edi-0x7e1b9f78]
  415d35:	sbb    DWORD PTR [eax+0xc83acfa],eax
  415d3b:	lods   al,BYTE PTR ds:[esi]
  415d3c:	clc    
  415d3d:	scas   al,BYTE PTR es:[edi]
  415d3e:	fwait
  415d3f:	mov    ds,WORD PTR [ebx-0x4e21f151]
  415d45:	xor    eax,0x2cec209f
  415d4a:	xchg   BYTE PTR [edi-0x27],dh
  415d4d:	adc    ch,BYTE PTR [edi-0x7]
  415d50:	(bad)  
  415d51:	imul   ebx,edx,0x3db16d98
  415d57:	sub    BYTE PTR [ebx-0x55d1354e],al
  415d5d:	push   ecx
  415d5e:	test   BYTE PTR [ebx-0x49],cl
  415d61:	loope  0x415ddd
  415d63:	push   edx
  415d64:	or     ebp,edx
  415d66:	leave  
  415d67:	ja     0x415db8
  415d69:	xchg   BYTE PTR [eax+0x92e11a9],al
  415d6f:	mov    ch,dh
  415d71:	sbb    al,0xac
  415d73:	sbb    DWORD PTR [edx],ebx
  415d75:	inc    ecx
  415d76:	fldz   
  415d78:	aam    0x9f
  415d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d7b:	push   es
  415d7c:	ss fwait
  415d7e:	mov    ds:0x7a6b8f73,eax
  415d83:	std    
  415d84:	fistp  DWORD PTR [ebp-0x6a]
  415d87:	inc    eax
  415d88:	pusha  
  415d89:	pop    ecx
  415d8a:	and    esi,esi
  415d8c:	add    BYTE PTR [ecx+0x7],cl
  415d8f:	cmp    al,0xdb
  415d91:	push   ebp
  415d92:	jl     0x415d79
  415d94:	seto   BYTE PTR [edx*1+0x4a9cc08e]
  415d9c:	xchg   ebp,eax
  415d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d9e:	inc    edx
  415d9f:	xchg   edi,eax
  415da0:	and    ebx,0xffffffda
  415da3:	aam    0xe5
  415da5:	int    0x99
  415da7:	sahf   
  415da8:	cld    
  415da9:	adc    BYTE PTR [edi+0x64],ch
  415dac:	xchg   ebp,eax
  415dad:	data16 in al,0x37
  415db0:	pop    esi
  415db1:	adc    dl,BYTE PTR [edx+eiz*1-0x38]
  415db5:	xchg   esi,eax
  415db6:	inc    ebx
  415db7:	pushf  
  415db8:	enter  0x14f3,0xa3
  415dbc:	or     eax,0xe74b7b37
  415dc1:	rcl    DWORD PTR [esi+0x43],1
  415dc4:	in     eax,dx
  415dc5:	and    esi,esp
  415dc7:	shl    DWORD PTR [esi-0x32],cl
  415dca:	adc    esp,DWORD PTR [eax]
  415dcc:	iret   
  415dcd:	xchg   DWORD PTR [ecx-0x68],ecx
  415dd0:	jb     0x415dd6
  415dd2:	sub    BYTE PTR [ebx+0x1c],ch
  415dd5:	add    eax,0xacc2ec3f
  415dda:	repz loopne 0x415d7f
  415ddd:	adc    BYTE PTR [eax+0x4ff2e46f],cl
  415de3:	pop    esp
  415de4:	adc    dl,BYTE PTR [ebp+0x3d1385ce]
  415dea:	loopne 0x415dbb
  415dec:	cli    
  415ded:	(bad)  
  415dee:	mov    edi,0x9ebabcd3
  415df3:	nop
  415df4:	pop    es
  415df5:	pop    edi
  415df6:	adc    al,0x58
  415df8:	mov    ebx,0x96009b6
  415dfd:	lds    esi,FWORD PTR [esi-0x4aa2c77e]
  415e03:	and    edx,esi
  415e05:	test   eax,0x44687430
  415e0a:	xchg   esi,eax
  415e0b:	cli    
  415e0c:	mov    DWORD PTR [eax-0x6f256655],esp
  415e12:	mov    edi,0x795e659
  415e17:	and    ecx,DWORD PTR [eax+0x6caba3db]
  415e1d:	xor    al,0x3b
  415e1f:	xchg   esp,eax
  415e20:	dec    eax
  415e21:	add    edx,DWORD PTR [eax+0x157bee3]
  415e27:	sbb    ebp,edx
  415e29:	aad    0xa7
  415e2b:	xchg   esp,eax
  415e2c:	ja     0x415ea5
  415e2e:	mov    ds:0xaaefb37e,eax
  415e33:	pop    edx
  415e34:	mov    ebx,ss
  415e36:	pop    esp
  415e37:	test   DWORD PTR [edi-0xe],edx
  415e3a:	xlat   BYTE PTR ds:[ebx]
  415e3b:	mov    dl,0xd1
  415e3d:	mov    ?,edi
  415e3f:	or     BYTE PTR [esi+0x4c],ch
  415e42:	sub    al,0x3f
  415e44:	sub    eax,0x92db1425
  415e49:	or     al,0xc6
  415e4b:	pop    ss
  415e4c:	loop   0x415e62
  415e4e:	minps  xmm7,XMMWORD PTR [edi]
  415e51:	pop    ebp
  415e52:	xor    BYTE PTR [edx+0x3b],dh
  415e55:	loopne 0x415e17
  415e57:	cmp    DWORD PTR [ecx],ecx
  415e59:	sub    ebp,ebx
  415e5b:	pop    esi
  415e5c:	neg    DWORD PTR [ebp+0x67]
  415e5f:	xchg   esp,eax
  415e60:	pop    ebx
  415e61:	out    0xd3,eax
  415e63:	enter  0xc49f,0x60
  415e67:	not    BYTE PTR [edx]
  415e69:	adc    BYTE PTR [ecx+0x16188d9e],bl
  415e6f:	je     0x415e89
  415e71:	jp     0x415eac
  415e73:	ret    
  415e74:	scas   eax,DWORD PTR es:[edi]
  415e75:	iret   
  415e76:	dec    esi
  415e77:	repnz mov ebx,0x8f847caf
  415e7d:	enter  0x388e,0x86
  415e81:	mov    cl,0xb9
  415e83:	adc    BYTE PTR [eax],cl
  415e85:	(bad)  
  415e86:	ja     0x415ef8
  415e88:	or     al,0x6b
  415e8a:	pop    ss
  415e8b:	lahf   
  415e8c:	mov    ss,edx
  415e8e:	dec    ebp
  415e8f:	sub    edx,0x55
  415e92:	dec    eax
  415e93:	or     bh,cl
  415e95:	sub    bl,cl
  415e97:	loopne 0x415e45
  415e99:	xor    BYTE PTR [ebp-0x77],ah
  415e9c:	adc    BYTE PTR [eax-0xf],cl
  415e9f:	fwait
  415ea0:	lock shl ecx,0x58
  415ea4:	mov    BYTE PTR [esi-0x28],al
  415ea7:	int3   
  415ea8:	sub    eax,0x7a99b485
  415ead:	repnz rcr DWORD PTR [edi+0xb],cl
  415eb1:	cmp    DWORD PTR [edi],edx
  415eb3:	call   0x21ad:0xe204616c
  415eba:	into   
  415ebb:	mov    DWORD PTR [esi-0x58],eax
  415ebe:	aas    
  415ebf:	lock (bad) 
  415ec1:	and    al,0xdf
  415ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec4:	lock imul ecx,DWORD PTR [ecx],0x59d09f5b
  415ecb:	mov    edx,0x4786b4e4
  415ed0:	xchg   edi,eax
  415ed1:	lods   al,BYTE PTR ds:[esi]
  415ed2:	in     eax,dx
  415ed3:	lods   al,BYTE PTR ds:[esi]
  415ed4:	daa    
  415ed5:	clc    
  415ed6:	mov    ecx,0x4522f208
  415edb:	repnz scas eax,DWORD PTR es:[edi]
  415edd:	in     eax,dx
  415ede:	push   ebx
  415edf:	pop    edx
  415ee0:	mov    edx,0x40bf51db
  415ee5:	ret    0xb78a
  415ee8:	or     DWORD PTR [ebx+0x16],0x65
  415eec:	in     eax,0xc2
  415eee:	sub    eax,ebx
  415ef0:	jbe    0x415f2f
  415ef2:	call   FWORD PTR [edx-0x4b374265]
  415ef8:	inc    ebp
  415ef9:	das    
  415efa:	aad    0xa1
  415efc:	rcr    edi,cl
  415efe:	(bad)  
  415eff:	sbb    DWORD PTR [eax],esp
  415f01:	loope  0x415ec3
  415f03:	mov    ds:0x44d2c465,al
  415f08:	lods   al,BYTE PTR ds:[esi]
  415f09:	popa   
  415f0a:	rol    BYTE PTR [ebx-0x58288485],cl
  415f10:	mov    cl,0x44
  415f12:	ja     0x415e96
  415f14:	mov    dl,0x75
  415f16:	pop    es
  415f17:	lahf   
  415f18:	loop   0x415f20
  415f1a:	add    ch,al
  415f1c:	fincstp 
  415f1e:	add    DWORD PTR [edi+0x6e],ecx
  415f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f22:	rcr    BYTE PTR [esi+0x134013e5],0x11
  415f29:	cmp    BYTE PTR [ecx+0x84ab17e],0x74
  415f30:	adc    al,0x12
  415f32:	sbb    eax,0xd6f9269a
  415f37:	popa   
  415f38:	sti    
  415f39:	aaa    
  415f3a:	inc    edi
  415f3b:	mov    edx,0x5df76c8b
  415f40:	(bad)  
  415f41:	daa    
  415f42:	sub    eax,0x430de991
  415f47:	imul   esi,DWORD PTR [ebx+0x4e5f17c4],0x9211515a
  415f51:	(bad)  
  415f52:	ds ja  0x415f74
  415f55:	je     0x415f08
  415f57:	mov    ch,0x1d
  415f59:	ins    BYTE PTR es:[edi],dx
  415f5a:	jno    0x415fac
  415f5c:	sbb    al,0x47
  415f5e:	inc    esi
  415f5f:	sbb    BYTE PTR [eax+edi*8-0x31],dl
  415f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f64:	loop   0x415fb6
  415f66:	clc    
  415f67:	arpl   cx,di
  415f69:	inc    eax
  415f6a:	push   edi
  415f6b:	ins    BYTE PTR es:[edi],dx
  415f6c:	mov    ch,0x86
  415f6e:	js     0x415f84
  415f70:	push   esi
  415f71:	push   0xfffffff6
  415f73:	mov    ah,0xa9
  415f75:	bound  eax,QWORD PTR [edi]
  415f77:	test   al,0x64
  415f79:	and    BYTE PTR [esi],bl
  415f7b:	mov    ebx,0xc15043d1
  415f80:	pop    edi
  415f81:	aad    0xde
  415f83:	aas    
  415f84:	mov    ds:0xb20caeab,al
  415f89:	daa    
  415f8a:	pop    ebp
  415f8b:	push   ebp
  415f8c:	mov    esp,0x588d13ed
  415f91:	mov    dh,0x39
  415f93:	stos   DWORD PTR es:[edi],eax
  415f94:	or     DWORD PTR [esi],ebp
  415f96:	cli    
  415f97:	push   cs
  415f98:	jbe    0x415f40
  415f9a:	mov    ecx,0x996dcded
  415f9f:	push   eax
  415fa0:	xor    eax,0xe0a75df0
  415fa5:	push   eax
  415fa6:	pop    eax
  415fa7:	add    bh,ah
  415fa9:	mov    WORD PTR [edx-0x590ed506],cs
  415faf:	js     0x415f34
  415fb1:	xchg   ebp,eax
  415fb2:	mov    ebx,0xe8f7f479
  415fb7:	inc    esp
  415fb8:	and    bl,BYTE PTR [eax-0x69]
  415fbb:	int    0xd3
  415fbd:	add    eax,0x656e5529
  415fc2:	(bad)  
  415fc3:	or     al,0x42
  415fc5:	mov    bl,0x24
  415fc7:	xchg   BYTE PTR [ecx+0x133b831],cl
  415fcd:	jmp    0x8c5d2d8b
  415fd2:	and    eax,0x426ff2b6
  415fd7:	pop    es
  415fd8:	push   eax
  415fd9:	sub    BYTE PTR [esi-0x50],bh
  415fdc:	mov    al,0xf0
  415fde:	or     edx,DWORD PTR [eax]
  415fe0:	inc    edi
  415fe1:	sbb    eax,0xad1b2e9a
  415fe6:	mov    eax,0x89cbb680
  415feb:	in     al,0x31
  415fed:	imul   edi,DWORD PTR [ebp-0x68],0xe5282a2
  415ff4:	out    dx,al
  415ff5:	jmp    0x415ffa
  415ff7:	xchg   esp,eax
  415ff8:	xor    DWORD PTR ds:0xfc94a0c0,ebp
  415ffe:	(bad)  
  415fff:	xchg   ecx,eax
  416000:	jae    0x41601b
  416002:	ror    BYTE PTR [edx],1
  416004:	mov    cl,0xb0
  416006:	xchg   edi,eax
  416007:	mov    ebp,0x3389733f
  41600c:	(bad)  
  41600d:	cli    
  41600e:	ss push eax
  416010:	xor    al,dh
  416012:	sbb    eax,0x448cd614
  416017:	mov    edi,0x337cf1f9
  41601c:	add    DWORD PTR ds:0x4afbc58b,0x119f1628
  416026:	dec    edx
  416027:	pop    ss
  416028:	popf   
  416029:	add    al,0xa1
  41602b:	jo     0x415fc0
  41602d:	xor    DWORD PTR [edx+0x6a3f60bc],0xffffffb4
  416034:	inc    edi
  416035:	sub    DWORD PTR [eax],edi
  416037:	xchg   esi,ecx
  416039:	add    bl,BYTE PTR [edi]
  41603b:	std    
  41603c:	push   ds
  41603d:	in     al,dx
  41603e:	gs jns 0x416080
  416041:	cdq    
  416042:	test   al,0xfc
  416044:	test   al,0x54
  416046:	mov    esi,0x9f88d41b
  41604b:	inc    ebp
  41604c:	dec    edx
  41604d:	add    BYTE PTR [eax],al
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x415fe3
  41605f:	repnz das 
  416061:	rcr    BYTE PTR [edi-0x22],1
  416064:	add    BYTE PTR [eax],al
  416066:	repz add al,0x0
  416069:	add    BYTE PTR [ebx-0x8],dh
  41606c:	jge    0x415ff6
  41606e:	jbe    0x4160c1
  416070:	xor    ah,al
  416072:	cmp    eax,0x3eee1e46
  416077:	mov    ebp,0x208c3230
  41607c:	mov    bl,0x12
  41607e:	xchg   ecx,eax
  41607f:	das    
  416080:	(bad)  
  416082:	repz sub DWORD PTR ds:0x5620556e,edx
  416089:	xchg   DWORD PTR [esp+esi*2],eax
  41608c:	(bad)  
  41608d:	ds ins DWORD PTR es:[edi],dx
  41608f:	ins    DWORD PTR es:[edi],dx
  416090:	push   cs
  416091:	cdq    
  416092:	sbb    al,0xcb
  416094:	xchg   edi,eax
  416095:	mov    ecx,DWORD PTR [edi-0x22]
  416098:	sbb    ebp,eax
  41609a:	ds out 0x4d,eax
  41609d:	sbb    al,0x3d
  41609f:	xchg   esi,esi
  4160a1:	or     ecx,0x66
  4160a4:	adc    al,0x9d
  4160a6:	xchg   DWORD PTR [ebp+0x1fd9312b],edx
  4160ac:	shl    DWORD PTR [eax+0x6c8261e4],cl
  4160b2:	shl    DWORD PTR [ebx+0x43b5223e],0x13
  4160b9:	or     edi,DWORD PTR [eax]
  4160bb:	pop    ebx
  4160bc:	cmp    eax,0x8b59c952
  4160c1:	iret   
  4160c2:	mov    DWORD PTR [ecx-0x7d],ebx
  4160c5:	pop    ecx
  4160c6:	sar    BYTE PTR [ebp+0x512e8bc],cl
  4160cc:	in     eax,0x3d
  4160ce:	mov    BYTE PTR [esi],dh
  4160d0:	ins    DWORD PTR es:[edi],dx
  4160d1:	(bad)  
  4160d2:	rol    DWORD PTR [esi],cl
  4160d4:	xchg   esp,eax
  4160d5:	fsub   st,st(4)
  4160d7:	sbb    esi,DWORD PTR [edi-0x5a]
  4160da:	retf   0xbb0f
  4160dd:	out    0x41,eax
  4160df:	cli    
  4160e0:	or     DWORD PTR [edi-0x16],ebp
  4160e3:	test   al,0x8c
  4160e5:	hlt    
  4160e6:	sbb    esp,DWORD PTR [ebp-0x4d]
  4160e9:	sbb    eax,esi
  4160eb:	jnp    0x4160a4
  4160ed:	ficomp WORD PTR [esi+0x796128b0]
  4160f3:	int    0xa9
  4160f5:	push   ebx
  4160f6:	arpl   di,cx
  4160f8:	ds inc ebx
  4160fa:	out    0xa2,eax
  4160fc:	in     eax,0xaa
  4160fe:	inc    ecx
  4160ff:	sub    al,0x8a
  416101:	add    DWORD PTR [ebx+0xc],0xffffffbd
  416105:	mov    esp,esi
  416107:	xor    DWORD PTR [ebx+ebx*4-0x5d3ba2e7],esi
  41610e:	adc    cl,BYTE PTR [edi]
  416110:	cwde   
  416111:	mov    dh,0x4
  416113:	sub    bh,bh
  416115:	adc    dh,BYTE PTR [edi-0x65b38ab9]
  41611b:	mov    bl,0xa8
  41611d:	pop    ds
  41611e:	inc    esi
  41611f:	ins    DWORD PTR es:[edi],dx
  416120:	(bad)  
  416121:	mov    al,0xb8
  416123:	pop    edi
  416124:	push   eax
  416125:	frstor [edi]
  416127:	xor    al,0xb9
  416129:	mov    bh,0x6a
  41612b:	and    dh,BYTE PTR [esi+0x62]
  41612e:	mov    edi,0x492385e7
  416133:	outs   dx,DWORD PTR ds:[esi]
  416134:	loope  0x4160c3
  416136:	xor    DWORD PTR [eax+0x5d],esp
  416139:	scas   eax,DWORD PTR es:[edi]
  41613a:	dec    esi
  41613b:	into   
  41613c:	jg     0x4161bd
  41613e:	xor    dl,BYTE PTR [ebx+0x28]
  416141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416142:	jb     0x41619f
  416144:	je     0x416100
  416146:	repnz lahf 
  416148:	dec    edx
  416149:	push   edi
  41614a:	jne    0x416134
  41614c:	jp     0x4160d4
  41614e:	fst    DWORD PTR [ecx]
  416150:	call   0xdf31bbaa
  416155:	mov    cl,dh
  416157:	push   ebp
  416158:	test   BYTE PTR [eax-0x245a84c4],ah
  41615e:	hlt    
  41615f:	push   0x4f
  416161:	sub    eax,0x80ab7e1
  416166:	push   0xfffffffb
  416168:	jne    0x4161c3
  41616a:	pop    eax
  41616b:	mov    dh,0xc9
  41616d:	iret   
  41616e:	cmp    al,0x60
  416170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416171:	dec    ebp
  416172:	inc    ecx
  416173:	jns    0x416163
  416175:	mov    ds:0x493ddf5d,eax
  41617a:	in     eax,dx
  41617b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41617c:	into   
  41617d:	jno    0x4161e9
  41617f:	adc    cl,BYTE PTR [edx+0x77664db]
  416185:	or     BYTE PTR [esi-0x64],al
  416188:	ficom  WORD PTR ds:0x87fad61b
  41618e:	xor    BYTE PTR [eax-0x38],ah
  416191:	les    esp,FWORD PTR [ebx+edi*4-0x717cbac7]
  416198:	in     al,dx
  416199:	aas    
  41619a:	shr    dl,cl
  41619c:	(bad)  
  41619d:	fwait
  41619e:	(bad)  
  41619f:	pop    eax
  4161a0:	das    
  4161a1:	or     ch,cl
  4161a3:	and    eax,0xd62f4dd4
  4161a8:	push   eax
  4161a9:	xor    DWORD PTR [ebx-0x5e],ebx
  4161ac:	out    dx,al
  4161ad:	xchg   esp,eax
  4161ae:	mov    eax,ds:0x21841677
  4161b3:	call   0x6bf0:0x8d685edb
  4161ba:	test   al,0xe4
  4161bc:	jecxz  0x41618a
  4161be:	or     eax,0xb8ae10ba
  4161c3:	push   eax
  4161c4:	ins    DWORD PTR es:[edi],dx
  4161c5:	pop    ecx
  4161c6:	retf   
  4161c7:	dec    edx
  4161c8:	into   
  4161c9:	scas   eax,DWORD PTR es:[edi]
  4161ca:	sub    al,0xb6
  4161cc:	inc    edx
  4161cd:	sahf   
  4161ce:	mov    bh,0x6b
  4161d0:	(bad)  
  4161d1:	adc    al,BYTE PTR [ebp-0x1e]
  4161d4:	stos   BYTE PTR es:[edi],al
  4161d5:	imul   eax,DWORD PTR [edi+ebx*8-0x2c806550],0xfffffff3
  4161dd:	or     ch,BYTE PTR [ecx-0x692730d4]
  4161e3:	pop    eax
  4161e4:	sub    bl,BYTE PTR [eax-0x6d]
  4161e7:	je     0x416193
  4161e9:	les    ecx,FWORD PTR [edx+ecx*8+0x22]
  4161ed:	jo     0x4161a9
  4161ef:	icebp  
  4161f0:	(bad)  
  4161f1:	jmp    DWORD PTR [edx+0x75]
  4161f4:	cmp    al,0x96
  4161f6:	jle    0x41626a
  4161f8:	xchg   ecx,eax
  4161f9:	pop    edi
  4161fa:	test   eax,0xc9c6e8b4
  4161ff:	out    0xeb,eax
  416201:	mov    ebx,0x44e735d8
  416206:	mov    eax,ds:0x96bb0161
  41620b:	call   0xc726:0x2cd65276
  416212:	jmp    0xdc63b9b7
  416217:	icebp  
  416218:	bound  ebx,QWORD PTR [eax+0x2123b68c]
  41621e:	push   cs
  41621f:	retf   
  416220:	mov    ch,BYTE PTR [eax-0x7d]
  416223:	in     eax,dx
  416224:	outs   dx,DWORD PTR ds:[esi]
  416225:	pop    esp
  416226:	pop    es
  416227:	imul   ebp,DWORD PTR [eax+0x42b5e60a],0x43ea426d
  416231:	pmulhuw mm3,QWORD PTR [edi-0x775df80b]
  416238:	sahf   
  416239:	and    BYTE PTR [edx-0x2e462037],dl
  41623f:	jbe    0x416279
  416241:	or     bh,dh
  416243:	jno    0x4161da
  416245:	jmp    0xe57ba137
  41624a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624b:	popf   
  41624c:	mov    bh,0x72
  41624e:	inc    eax
  41624f:	std    
  416250:	repz inc edx
  416252:	sti    
  416253:	jno    0x41625b
  416255:	call   0xa518163c
  41625a:	clc    
  41625b:	lahf   
  41625c:	ins    DWORD PTR es:[edi],dx
  41625d:	out    dx,al
  41625e:	dec    edi
  41625f:	enter  0xa61c,0x83
  416263:	stc    
  416264:	cmp    al,0xfd
  416266:	add    bh,al
  416268:	retf   
  416269:	sbb    edx,DWORD PTR [edi]
  41626b:	enter  0x44fb,0x8c
  41626f:	dec    ebx
  416270:	shr    BYTE PTR [ebx-0x4c],0x72
  416274:	retf   0x3de6
  416277:	(bad)  [ebx+edi*1+0x6f]
  41627b:	sbb    DWORD PTR [ebx],edx
  41627d:	fwait
  41627e:	xor    BYTE PTR ds:0xc324a7ed,bh
  416284:	cli    
  416285:	stos   BYTE PTR es:[edi],al
  416286:	lock jl 0x416219
  416289:	mov    ah,0x1
  41628b:	aam    0xa9
  41628d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628e:	(bad)  
  41628f:	mov    ?,WORD PTR [ebx+ebx*1]
  416292:	jb     0x4162fc
  416294:	sbb    al,0x39
  416296:	std    
  416297:	aas    
  416298:	pop    ecx
  416299:	mov    edx,?
  41629b:	jne    0x41622c
  41629d:	idiv   dh
  41629f:	in     eax,dx
  4162a0:	sar    DWORD PTR [ebx+0x5f],1
  4162a3:	push   ss
  4162a4:	icebp  
  4162a5:	mov    edx,DWORD PTR [edx]
  4162a7:	mov    esi,0xb914fa57
  4162ac:	mov    ch,0x84
  4162ae:	add    dh,BYTE PTR [ebp+0xbec06ea]
  4162b4:	cmp    eax,0x133604bd
  4162b9:	inc    ebp
  4162ba:	lods   al,BYTE PTR ds:[esi]
  4162bb:	sbb    DWORD PTR [ebx+0x4],ecx
  4162be:	sahf   
  4162bf:	xor    BYTE PTR [ebx-0x14072acb],dh
  4162c5:	mov    bl,0xce
  4162c7:	mov    ebp,0xc81ea830
  4162cc:	cdq    
  4162cd:	out    dx,eax
  4162ce:	loopne 0x416261
  4162d0:	cmc    
  4162d1:	mov    ah,0x53
  4162d3:	mov    ah,0x7f
  4162d5:	xchg   ecx,eax
  4162d6:	scas   eax,DWORD PTR es:[edi]
  4162d7:	and    al,0x6e
  4162d9:	lods   al,BYTE PTR ds:[esi]
  4162da:	mov    dh,BYTE PTR [ebx+0x5c0c4a68]
  4162e0:	and    ecx,DWORD PTR [ebx]
  4162e2:	add    edx,ebx
  4162e4:	sbb    al,0xf6
  4162e6:	sbb    al,0x50
  4162e8:	addr16 pushf 
  4162ea:	dec    eax
  4162eb:	jns    0x416336
  4162ed:	inc    ecx
  4162ee:	stc    
  4162ef:	adc    DWORD PTR [edi+0x4a],edx
  4162f2:	test   al,0x9f
  4162f4:	jne    0x416328
  4162f6:	pop    esp
  4162f7:	sahf   
  4162f8:	iret   
  4162f9:	sahf   
  4162fa:	nop
  4162fb:	sub    eax,0x223444b2
  416300:	mov    ebx,0xa286fc
  416305:	inc    ebx
  416306:	(bad)  
  416307:	rcr    BYTE PTR [ebp+0x12],cl
  41630a:	shl    BYTE PTR [esi-0x9],cl
  41630d:	sar    BYTE PTR [eax+0x7c99bc06],cl
  416313:	sbb    ebx,DWORD PTR [edi]
  416315:	into   
  416316:	dec    ebx
  416317:	adc    al,0x1f
  416319:	or     DWORD PTR [ebp-0x6a],0x7f
  41631d:	jbe    0x416340
  41631f:	(bad)  
  416320:	in     al,dx
  416321:	aaa    
  416322:	div    al
  416324:	or     ebx,DWORD PTR [ecx]
  416326:	or     al,0xc8
  416328:	mov    ah,0xbe
  41632a:	or     BYTE PTR [eax],dl
  41632c:	jno    0x4163ab
  41632e:	push   ebx
  41632f:	ret    
  416330:	lods   al,BYTE PTR ds:[esi]
  416331:	jns    0x416398
  416333:	sbb    DWORD PTR [edi-0x531c133d],ebp
  416339:	out    0x10,al
  41633b:	in     eax,0xc9
  41633d:	mov    ebp,0xa1c223d0
  416342:	std    
  416343:	xor    eax,0xe47330d1
  416348:	xor    eax,esi
  41634a:	inc    eax
  41634b:	hlt    
  41634c:	call   0x53f0:0x4e91f3a3
  416353:	and    al,0x74
  416355:	int    0x35
  416357:	pop    ebx
  416358:	sti    
  416359:	cld    
  41635a:	mov    ebx,0xd129a54d
  41635f:	xchg   DWORD PTR [ecx+0x76b22c01],eax
  416365:	js     0x4163b8
  416367:	fwait
  416368:	and    bh,BYTE PTR [esi-0x42]
  41636b:	popf   
  41636c:	xchg   ebp,ebp
  41636e:	retfw  0x4b4c
  416372:	fst    DWORD PTR [esi-0xa284e76]
  416378:	cmp    BYTE PTR [edi+0x29],dl
  41637b:	(bad)  
  41637c:	xlat   BYTE PTR ds:[ebx]
  41637d:	mov    ah,0x18
  41637f:	push   0xffffffe9
  416381:	sub    edx,eax
  416383:	dec    esp
  416384:	cmp    al,0xa7
  416386:	pop    esp
  416387:	pop    ecx
  416388:	add    ch,0x58
  41638b:	sahf   
  41638c:	and    DWORD PTR [esi+0x66],esp
  41638f:	aam    0xb2
  416391:	lock iret 
  416393:	jg     0x4163c4
  416395:	repz test DWORD PTR [esi],edx
  416398:	cbw    
  41639a:	mov    ds:0xe25e07b6,eax
  41639f:	adc    DWORD PTR [ebx-0xf],edx
  4163a2:	es call 0xa836:0x39b4cb6b
  4163aa:	call   0x2268:0x540e3eba
  4163b1:	push   ecx
  4163b2:	push   ds
  4163b3:	pop    ebx
  4163b4:	sbb    al,0x10
  4163b6:	adc    BYTE PTR [esi],dh
  4163b8:	daa    
  4163b9:	add    ebx,eax
  4163bb:	jmp    0x98ef:0x30894b6c
  4163c2:	out    0x15,eax
  4163c4:	setg   BYTE PTR [ebx+0x13]
  4163c8:	push   edx
  4163c9:	mov    eax,0x5c896709
  4163ce:	adc    dl,ah
  4163d0:	jne    0x416424
  4163d2:	jne    0x4163bd
  4163d4:	test   eax,0xf90a4994
  4163d9:	or     eax,0xb58ebb3e
  4163de:	cmc    
  4163df:	mov    al,ds:0x92d56937
  4163e4:	cmp    BYTE PTR ds:0x1bec94c7,al
  4163ea:	fbld   TBYTE PTR [edi+ecx*8]
  4163ed:	jno    0x4163c6
  4163ef:	add    eax,0xa2423213
  4163f4:	dec    edx
  4163f5:	fist   WORD PTR [ebx+ecx*4+0xb6a291f]
  4163fc:	mov    cx,0x6436
  416400:	cmp    eax,0x5f7f6aff
  416405:	cmp    BYTE PTR [ecx+0x13],al
  416408:	adc    al,0xc1
  41640a:	dec    DWORD PTR ds:0x9ff8de38
  416410:	sbb    eax,0xfb97e5cc
  416415:	ret    
  416416:	adc    bh,BYTE PTR [edx]
  416418:	or     al,0xb5
  41641a:	leave  
  41641b:	shr    BYTE PTR [edi],0xc
  41641e:	int    0xb5
  416420:	xchg   esp,eax
  416421:	nop
  416422:	(bad)  
  416423:	push   ebx
  416424:	icebp  
  416425:	loope  0x4163d0
  416427:	fisub  DWORD PTR [edi]
  416429:	xchg   edx,eax
  41642a:	push   0x9ae47e47
  41642f:	xchg   esp,eax
  416430:	and    DWORD PTR [ebx],esi
  416432:	push   eax
  416433:	pusha  
  416434:	xchg   BYTE PTR [eax-0x35aadead],al
  41643a:	stos   DWORD PTR es:[edi],eax
  41643b:	push   0x1b5e03c7
  416440:	push   es
  416441:	popf   
  416442:	stos   BYTE PTR es:[edi],al
  416443:	xchg   ecx,eax
  416444:	lahf   
  416445:	div    bh
  416447:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416449:	mov    DWORD PTR [eax+eax*8-0x7],ebp
  41644d:	and    al,0xc
  41644f:	xchg   edx,eax
  416450:	dec    esp
  416451:	leave  
  416452:	cli    
  416453:	daa    
  416454:	or     eax,0x5967139
  416459:	push   ebp
  41645a:	sub    DWORD PTR [ebp-0x79],esp
  41645d:	lea    edx,[ecx+0x45]
  416460:	(bad)  
  416461:	ret    
  416462:	xchg   ebp,eax
  416463:	xor    ch,BYTE PTR [eax-0x2]
  416466:	stc    
  416467:	dec    edi
  416468:	or     al,0x93
  41646a:	adc    eax,0x2e530694
  41646f:	sbb    BYTE PTR [ecx+0x0],ah
  416472:	mov    esp,0x579fac6e
  416477:	xchg   edx,eax
  416478:	(bad)  
  416479:	or     eax,0x8b608fd3
  41647e:	sub    ch,BYTE PTR [ecx+eiz*2-0x51]
  416482:	push   ds
  416483:	and    eax,0x3c681796
  416488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416489:	bound  esp,QWORD PTR [edx]
  41648b:	(bad)  
  41648c:	ffreep st(0)
  41648e:	xchg   esi,eax
  41648f:	hlt    
  416490:	xchg   BYTE PTR [eax-0x50a666d1],bl
  416496:	and    al,0xad
  416498:	jne    0x4164d7
  41649a:	push   ss
  41649b:	pop    edx
  41649c:	jbe    0x416441
  41649e:	jb     0x4164e2
  4164a0:	hlt    
  4164a1:	lods   eax,DWORD PTR ds:[esi]
  4164a2:	sbb    bh,dh
  4164a4:	sbb    ecx,0xe0a51e95
  4164aa:	xchg   edx,eax
  4164ab:	add    ch,BYTE PTR gs:[ebx+0x5e]
  4164af:	push   ds
  4164b0:	shr    DWORD PTR [esi-0x6f7543b0],cl
  4164b6:	mov    ecx,0x329d1fa4
  4164bb:	retf   0x4db8
  4164be:	aam    0x84
  4164c0:	fwait
  4164c1:	mov    al,ds:0x173b448a
  4164c6:	rcl    DWORD PTR [ebp+0x65],0xe9
  4164ca:	pop    ebp
  4164cb:	xchg   ebp,eax
  4164cc:	xor    dh,bh
  4164ce:	jmp    0x2cd0a40e
  4164d3:	push   ecx
  4164d4:	push   edx
  4164d5:	or     ebp,DWORD PTR ds:0xa3c4bed
  4164db:	cmp    ch,BYTE PTR [eax+0x59]
  4164de:	xor    al,BYTE PTR [edx]
  4164e0:	icebp  
  4164e1:	in     eax,0x7f
  4164e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e4:	pop    ecx
  4164e5:	inc    ebx
  4164e6:	mul    DWORD PTR [ebx+0x6ec1472c]
  4164ec:	lds    eax,FWORD PTR [edi-0x4c]
  4164ef:	pop    edi
  4164f0:	inc    ebp
  4164f1:	retf   0x29b1
  4164f4:	mov    ebx,0x7a599f2a
  4164f9:	lods   eax,DWORD PTR ds:[esi]
  4164fa:	cmp    ah,dh
  4164fc:	sbb    ebx,eax
  4164fe:	mov    edi,0xde8bfcb1
  416503:	mov    WORD PTR [eax+eax*1],es
  416506:	(bad)  
  416507:	repz jno 0x416490
  41650a:	mov    dh,0x93
  41650c:	or     BYTE PTR [esi],dl
  41650e:	mov    ds:0xbcfa4586,al
  416513:	pop    ebp
  416514:	mov    dl,0xf6
  416516:	fild   WORD PTR [eax-0x13]
  416519:	inc    esi
  41651a:	hlt    
  41651b:	xlat   BYTE PTR ds:[ebx]
  41651c:	test   BYTE PTR [esi+ebx*2+0x1617e606],0x50
  416524:	pop    eax
  416525:	shr    DWORD PTR [esi],1
  416527:	dec    ebp
  416528:	adc    eax,0x5282c953
  41652d:	add    al,0xd2
  41652f:	jg     0x4164d4
  416531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416532:	call   0x17b5:0x97cb8587
  416539:	mov    ds:0xdeaedc8,al
  41653e:	into   
  41653f:	(bad)  
  416540:	int    0xa5
  416542:	test   DWORD PTR [esi+0x15e0aa76],eax
  416548:	mov    BYTE PTR [ebx],al
  41654a:	mov    ebp,0x2a8842ad
  41654f:	xchg   ecx,eax
  416550:	adc    DWORD PTR [edi],0x14
  416553:	xchg   dl,cl
  416555:	shl    DWORD PTR [edi+0x38457370],1
  41655b:	and    bl,BYTE PTR [esi+0x0]
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x2bf1
  41656f:	imul   esi,DWORD PTR [ebx],0xe352a9
  416575:	add    bl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [edx],dl
  41657b:	add    al,BYTE PTR [edi]
  41657d:	retf   
  41657e:	cmp    ch,al
  416580:	mov    esi,0xdbd4fe72
  416585:	push   0xffffff97
  416587:	sub    bh,0x86
  41658a:	jno    0x4165c3
  41658c:	jb     0x41659f
  41658e:	test   BYTE PTR [ecx+0x0],al
  416591:	ret    0x5caf
  416594:	xchg   edx,eax
  416595:	sub    ecx,esi
  416597:	and    eax,0xc57baaa8
  41659c:	jno    0x416581
  41659e:	xchg   bh,cl
  4165a0:	inc    ebx
  4165a1:	fimul  DWORD PTR [eax+0x1303f017]
  4165a7:	jg     0x41655f
  4165a9:	or     dh,cl
  4165ab:	lods   eax,DWORD PTR ds:[esi]
  4165ac:	jp     0x4165f3
  4165ae:	jo     0x41655a
  4165b0:	and    eax,0xaefb7c5a
  4165b5:	add    al,ah
  4165b7:	add    al,0x37
  4165b9:	ficomp WORD PTR [esi+edx*2]
  4165bc:	mov    ebp,0x43bd9281
  4165c1:	test   eax,0x998ba5ef
  4165c6:	and    DWORD PTR [ebp+eax*4-0x392e5faf],ebx
  4165cd:	gs xchg ecx,eax
  4165cf:	stos   BYTE PTR es:[edi],al
  4165d0:	dec    esi
  4165d1:	xor    eax,0x1717cc7c
  4165d6:	leave  
  4165d7:	iret   
  4165d8:	mov    bh,0xf4
  4165da:	fcomp  DWORD PTR [edi-0x72def5bf]
  4165e0:	push   ebx
  4165e1:	sub    ah,BYTE PTR [ecx]
  4165e3:	mov    DWORD PTR [edi+0x168b0ee2],eax
  4165e9:	gs in  eax,0x3b
  4165ec:	fdivr  DWORD PTR [ebp+0x93ba710]
  4165f2:	mov    dl,0xe1
  4165f4:	jmp    0xf6aaf749
  4165f9:	jle    0x416593
  4165fb:	jb     0x41658b
  4165fd:	add    BYTE PTR [esi-0x5de836e1],bh
  416603:	pushf  
  416604:	cld    
  416605:	retf   0x764e
  416608:	arpl   WORD PTR [edx],cx
  41660a:	push   edx
  41660b:	mov    edx,0x2c9ae3bf
  416610:	mov    bl,0x43
  416612:	ins    DWORD PTR es:[edi],dx
  416613:	or     eax,ebp
  416615:	fldcw  WORD PTR [ebp+esi*2-0x2765f106]
  41661c:	mov    dh,0xe4
  41661e:	int3   
  41661f:	xchg   ebp,eax
  416620:	sahf   
  416621:	call   0x6:0xb8e680bc
  416628:	pop    es
  416629:	dec    esi
  41662a:	cdq    
  41662b:	in     al,0xe2
  41662d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41662e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41662f:	sub    bl,BYTE PTR [ecx+0x24df367d]
  416635:	adc    DWORD PTR [edx],0x8a0b8180
  41663b:	leave  
  41663c:	in     eax,0x75
  41663e:	xor    al,0x89
  416640:	pop    ebp
  416641:	push   ebp
  416642:	or     DWORD PTR [eax+edi*4-0x2f34eba2],ebp
  416649:	mov    ebx,0xfb370e54
  41664e:	pop    ds
  41664f:	jecxz  0x416680
  416651:	add    dl,bh
  416653:	aas    
  416654:	cld    
  416655:	retf   
  416656:	xchg   esp,eax
  416657:	cmp    BYTE PTR [ebx-0x47],cl
  41665a:	inc    ecx
  41665b:	mov    ebp,0x54e47fc9
  416660:	xor    DWORD PTR [ebx+eax*1-0x67],ebp
  416664:	push   edi
  416665:	adc    bl,BYTE PTR fs:[esp+ebx*8]
  416669:	xchg   edx,eax
  41666a:	ret    0x9392
  41666d:	mov    cl,0x2a
  41666f:	sahf   
  416670:	ja     0x41667e
  416672:	mov    ch,0x75
  416674:	and    eax,0x36136e88
  416679:	pop    esi
  41667a:	cli    
  41667b:	mov    ebp,0x7d39f76
  416680:	add    dl,ah
  416682:	add    BYTE PTR [edx],dh
  416684:	mov    cl,0x3f
  416686:	aaa    
  416687:	dec    esp
  416688:	mov    WORD PTR [edx+edx*1-0x30],gs
  41668c:	mov    esi,?
  41668e:	(bad)  
  41668f:	lea    esp,[esp+ecx*1]
  416692:	adc    eax,0x2468a4ce
  416697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416698:	mov    esp,DWORD PTR [ebx-0x52]
  41669b:	or     ecx,DWORD PTR [ecx]
  41669d:	in     al,dx
  41669e:	xchg   ecx,ebx
  4166a0:	dec    eax
  4166a1:	enter  0xd43e,0xfa
  4166a5:	xchg   ebp,eax
  4166a6:	lea    edx,[edx]
  4166a8:	jmp    0xef74375e
  4166ad:	dec    ecx
  4166ae:	and    edx,esp
  4166b0:	inc    ecx
  4166b1:	(bad)  [edi+eax*1]
  4166b4:	push   edx
  4166b5:	inc    edi
  4166b6:	xor    DWORD PTR [ecx+0x1a3d7a12],ebx
  4166bc:	xor    eax,0x83a5b8c1
  4166c1:	int3   
  4166c2:	imul   BYTE PTR [edi-0x77d639b6]
  4166c8:	jg     0x416711
  4166ca:	arpl   bp,sp
  4166cc:	mov    dh,0xf8
  4166ce:	dec    esi
  4166cf:	aas    
  4166d0:	mov    al,ds:0x6d5158b6
  4166d5:	fs push es
  4166d7:	hlt    
  4166d8:	mov    al,0xd5
  4166da:	pop    edx
  4166db:	sbb    DWORD PTR [edi+0x5604c398],ebp
  4166e1:	fwait
  4166e2:	repnz imul ebx,DWORD PTR [esi],0xffffffca
  4166e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e7:	es jne 0x4166b1
  4166ea:	or     eax,0xdb8a5f27
  4166ef:	idiv   BYTE PTR [eax+0x32]
  4166f2:	mov    ?,WORD PTR [ebp-0x6d188c8c]
  4166f8:	arpl   WORD PTR [edi],cx
  4166fa:	shl    BYTE PTR [esp+edi*1],cl
  4166fd:	mov    ah,0x1b
  4166ff:	sbb    ch,BYTE PTR [esp+edx*4-0x4]
  416703:	inc    edx
  416704:	fadd   st(0),st
  416706:	shl    DWORD PTR [eax-0x5cad7eeb],cl
  41670c:	sbb    al,0xc2
  41670e:	mov    cl,0x53
  416710:	adc    BYTE PTR [ebx],bh
  416712:	dec    esi
  416713:	mov    ds:0x11334181,al
  416718:	adc    al,0x35
  41671a:	arpl   WORD PTR [eax*8+0x7c8a0471],bx
  416721:	push   esi
  416722:	ret    0x88e4
  416725:	jbe    0x4166c9
  416727:	sub    al,0x52
  416729:	and    al,0xca
  41672b:	xchg   dh,bl
  41672d:	xor    BYTE PTR [ebx-0x7ce6cfeb],dh
  416733:	jecxz  0x4166e1
  416735:	adc    DWORD PTR [ebp+0x10bdd58],eax
  41673b:	xor    DWORD PTR [edx+ebp*8+0x73ddda22],ebx
  416742:	test   eax,0xabce5493
  416747:	div    BYTE PTR [ebx]
  416749:	cmp    BYTE PTR [ebx-0x13fc8d2d],0xe8
  416750:	mov    al,ds:0xb13a8402
  416755:	jle    0x4166e2
  416757:	pop    ebx
  416758:	lea    ebx,[edi+ecx*2-0x48]
  41675c:	inc    ecx
  41675d:	stc    
  41675e:	mov    bl,0xcc
  416760:	push   ebp
  416761:	jno    0x4167d6
  416763:	adc    DWORD PTR [ebx+edx*8],0x92611801
  41676a:	cmp    BYTE PTR [edi+0x5c],ah
  41676d:	pop    edi
  41676e:	push   edx
  41676f:	adc    dl,ch
  416771:	inc    edx
  416772:	sub    DWORD PTR [eax],edx
  416774:	mov    BYTE PTR [ebx],al
  416776:	dec    edx
  416777:	cli    
  416778:	sbb    bh,dh
  41677a:	push   0xffffffc8
  41677c:	popf   
  41677d:	or     edx,DWORD PTR [ecx]
  41677f:	call   0x5f51dae3
  416784:	jmp    0x1a5d:0x5fad2438
  41678b:	gs jl  0x4167df
  41678e:	jne    0x41673a
  416790:	rcr    DWORD PTR [esp+eax*4+0x3a2f8712],cl
  416797:	outs   dx,BYTE PTR ds:[esi]
  416798:	mov    al,ds:0xbab8d4b7
  41679d:	imul   ecx,ecx,0xffffffa8
  4167a0:	jmp    0x4167f6
  4167a2:	lds    edx,FWORD PTR [esi]
  4167a4:	out    0x75,al
  4167a6:	sub    ebp,esi
  4167a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a9:	push   ebx
  4167aa:	jns    0x41674f
  4167ac:	mov    bh,BYTE PTR [esi+0x40]
  4167af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b0:	sub    DWORD PTR [ebx],0x6b
  4167b3:	mov    esp,0x80ecf941
  4167b8:	std    
  4167b9:	mov    ecx,0xc1ed3420
  4167be:	fs jle 0x4167d7
  4167c1:	or     ecx,DWORD PTR [ebx+0x5b]
  4167c4:	pop    esi
  4167c5:	jmp    0x3922fa70
  4167ca:	and    dh,dl
  4167cc:	sub    ebp,DWORD PTR ss:[edi-0x44]
  4167d0:	inc    ebx
  4167d1:	cld    
  4167d2:	mov    gs,esp
  4167d4:	std    
  4167d5:	test   DWORD PTR [eax+0x15],0xec66d5d2
  4167dc:	hlt    
  4167dd:	push   ecx
  4167de:	inc    edx
  4167df:	jl     0x4167b0
  4167e1:	jg     0x41680e
  4167e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e4:	mov    ah,0x7b
  4167e6:	xor    ecx,ebx
  4167e8:	shl    ecx,cl
  4167ea:	fsubr  st(6),st
  4167ec:	mov    al,ds:0xb729add4
  4167f1:	vsubss xmm2,xmm7,xmm2
  4167f5:	into   
  4167f6:	xchg   ebp,eax
  4167f7:	lea    ecx,[edi]
  4167f9:	dec    edx
  4167fa:	repz sti 
  4167fc:	fdiv   st,st(1)
  4167fe:	imul   ebp,ecx,0xffffffff
  416801:	xchg   ecx,eax
  416802:	push   edi
  416803:	addr16 retf 
  416805:	lock cmp DWORD PTR [eax+0x4eddea44],esi
  41680c:	jnp    0x4167cb
  41680e:	inc    edx
  41680f:	scas   eax,DWORD PTR es:[edi]
  416810:	mov    ds:0x7917da6d,al
  416815:	shl    BYTE PTR [esi],0xea
  416818:	add    al,0xb1
  41681a:	dec    esp
  41681b:	pop    ss
  41681c:	push   0xffffff8a
  41681e:	xor    al,0x4f
  416820:	stc    
  416821:	cmp    ch,BYTE PTR ds:[ebx]
  416824:	retf   0x17f0
  416827:	mov    ecx,0xe3fe4160
  41682c:	push   ss
  41682d:	xor    BYTE PTR [ecx+0x17],0x9f
  416831:	int    0x3a
  416833:	arpl   cx,di
  416835:	mov    bl,0xb8
  416837:	outs   dx,BYTE PTR ds:[esi]
  416838:	mov    al,ds:0xcfe7800a
  41683d:	cli    
  41683e:	test   BYTE PTR [ecx-0x6e],bh
  416841:	(bad)  
  416842:	lock xchg ebp,eax
  416844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416845:	mov    ch,0x0
  416847:	or     eax,0x3d9ee7ec
  41684c:	loope  0x41687b
  41684e:	stos   BYTE PTR es:[edi],al
  41684f:	popf   
  416850:	sbb    ecx,DWORD PTR [esi-0x409bedfa]
  416856:	pop    es
  416857:	or     al,bl
  416859:	dec    ebx
  41685a:	inc    esp
  41685b:	sbb    ebp,edx
  41685d:	push   edi
  41685e:	in     al,dx
  41685f:	inc    ebp
  416860:	xor    al,0x28
  416862:	iret   
  416863:	pop    eax
  416864:	dec    ebx
  416865:	adc    ch,ch
  416867:	xchg   esi,eax
  416868:	cmp    al,0x34
  41686a:	das    
  41686b:	xchg   BYTE PTR [edx],cl
  41686d:	imul   ebx,DWORD PTR [eax+ebx*1+0x45a0405b],0xffffff95
  416875:	jne    0x4168e5
  416877:	cs hlt 
  416879:	and    ebp,DWORD PTR [ebx]
  41687b:	lea    esp,[ecx]
  41687d:	test   al,0xc2
  41687f:	xor    eax,0x27dc8292
  416884:	or     al,0xc
  416886:	adc    DWORD PTR [edx+0x44],edx
  416889:	ror    DWORD PTR [esi+edx*1+0x36253a18],1
  416890:	into   
  416891:	push   edi
  416892:	jmp    0xd4ee:0x50f1a1d2
  416899:	std    
  41689a:	pop    ebx
  41689b:	xchg   edi,eax
  41689c:	iret   
  41689d:	in     eax,0x47
  41689f:	jecxz  0x4168fe
  4168a1:	xor    cl,ch
  4168a3:	dec    ebp
  4168a4:	loope  0x416837
  4168a6:	out    dx,al
  4168a7:	sub    eax,0x6c12b0b1
  4168ac:	inc    ebx
  4168ad:	or     BYTE PTR [ecx-0x650beeb5],ah
  4168b3:	inc    edi
  4168b4:	ror    al,cl
  4168b6:	ret    0xd6c5
  4168b9:	push   eax
  4168ba:	js     0x4168c1
  4168bc:	inc    edi
  4168bd:	imul   ebp,edi,0x625c390b
  4168c3:	test   eax,0x62766e2d
  4168c8:	add    BYTE PTR [ebp-0x3b],0x75
  4168cc:	aaa    
  4168cd:	mov    ebp,DWORD PTR [edi-0x35]
  4168d0:	pop    ebp
  4168d1:	pop    ds
  4168d2:	pop    ecx
  4168d3:	mov    bh,0x4f
  4168d5:	pop    edx
  4168d6:	jecxz  0x41691c
  4168d8:	pop    ebp
  4168d9:	adc    DWORD PTR [eax+0x6f416d3c],ebp
  4168df:	lods   al,BYTE PTR ds:[esi]
  4168e0:	cmp    BYTE PTR [eax],bh
  4168e2:	sub    dh,ch
  4168e4:	fwait
  4168e5:	push   ss
  4168e6:	adc    eax,0x33afc463
  4168eb:	dec    esp
  4168ec:	ss es clc 
  4168ef:	leave  
  4168f0:	test   DWORD PTR [ebx-0x35],0x35a6e64a
  4168f7:	repz cld 
  4168f9:	mov    ah,0x5e
  4168fb:	mov    ebp,0x5b9af5a2
  416900:	loop   0x416909
  416902:	and    al,0x45
  416904:	in     eax,dx
  416905:	xchg   edi,eax
  416906:	imul   esp,edx,0xc96fd512
  41690c:	jmp    0xd0ff:0xa5027640
  416913:	pop    ds
  416914:	adc    dh,BYTE PTR [edi-0x7caf043f]
  41691a:	dec    ecx
  41691b:	xchg   esp,eax
  41691c:	mov    al,ds:0xc5587236
  416921:	imul   BYTE PTR [ebx]
  416923:	outs   dx,BYTE PTR ds:[esi]
  416924:	pop    esi
  416925:	call   0xdc346dc6
  41692a:	ror    DWORD PTR [ebp-0x21],0x1a
  41692e:	sub    eax,0x80fd423a
  416933:	push   edi
  416934:	mov    cl,0xf3
  416936:	xor    BYTE PTR [ebx-0x53],cl
  416939:	mov    edx,0x87f877e0
  41693e:	xor    al,0x1b
  416941:	jmp    0x678f:0x69c03f6f
  416948:	cmc    
  416949:	test   BYTE PTR [ecx+0x517460cb],bh
  41694f:	gs push esp
  416951:	pop    ecx
  416952:	gs loopne 0x41692a
  416955:	xor    edi,esp
  416957:	dec    ecx
  416958:	addr16 pop ebp
  41695a:	jno    0x416955
  41695c:	(bad)  
  41695d:	(bad)  
  41695e:	jge    0x4169b1
  416960:	jb     0x416991
  416962:	fnstsw WORD PTR [edi+0x4dfe0574]
  416968:	mov    eax,0x25d8a84
  41696d:	pop    edx
  41696e:	inc    ebp
  41696f:	add    al,0x71
  416971:	pop    ebp
  416972:	test   DWORD PTR [edx+0x477cbb85],ecx
  416978:	mov    bl,0xec
  41697a:	jge    0x416925
  41697c:	and    eax,0xecf6224d
  416981:	loopne 0x416968
  416983:	pminub mm1,QWORD PTR [ebx-0x50ec4bb2]
  41698a:	rol    DWORD PTR [edx],1
  41698c:	sbb    ebx,DWORD PTR [esi-0x5c]
  41698f:	dec    edx
  416990:	adc    dh,BYTE PTR [edx+0x549fd0de]
  416996:	fist   WORD PTR [eax-0x58685959]
  41699c:	mov    edx,0x1abf474c
  4169a1:	adc    dh,BYTE PTR [edx+eax*1]
  4169a4:	xchg   esi,eax
  4169a5:	lock outs dx,BYTE PTR ds:[esi]
  4169a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a8:	add    eax,0xf515f392
  4169ad:	addr16 inc ebx
  4169af:	repnz inc ecx
  4169b1:	mov    WORD PTR [edi+0x36],?
  4169b4:	imul   esp,DWORD PTR [edx],0x2f
  4169b7:	dec    edx
  4169b8:	out    dx,al
  4169b9:	mov    ecx,0xa54748f2
  4169be:	ins    BYTE PTR es:[edi],dx
  4169bf:	mov    ebx,0xa77bda17
  4169c4:	or     BYTE PTR [edx-0x4b],cl
  4169c7:	aaa    
  4169c8:	(bad)  
  4169c9:	dec    eax
  4169ca:	sub    eax,0x19937be8
  4169cf:	shl    eax,0xa4
  4169d2:	mov    eax,DWORD PTR [edi+0x4198312b]
  4169d8:	lds    ebp,FWORD PTR ds:[ecx-0x4a]
  4169dc:	ss leave 
  4169de:	cwde   
  4169df:	xchg   ebx,eax
  4169e0:	cmp    al,0x7d
  4169e2:	xor    ch,BYTE PTR [edi+0x3900d9d7]
  4169e8:	add    esp,DWORD PTR [ebx]
  4169ea:	fadd   QWORD PTR [edi-0x3961ddcf]
  4169f0:	nop
  4169f1:	adc    al,0x76
  4169f3:	fistp  QWORD PTR [esi]
  4169f5:	mov    fs,WORD PTR [esi+eax*1-0x10398220]
  4169fc:	jge    0x4169d8
  4169fe:	cdq    
  4169ff:	sbb    al,0x3f
  416a01:	(bad)  
  416a02:	fistp  DWORD PTR [esi]
  416a04:	lods   al,BYTE PTR ds:[esi]
  416a05:	(bad)  
  416a06:	leave  
  416a07:	push   edi
  416a08:	mov    bl,0x63
  416a0a:	imul   ebx,DWORD PTR [ebx-0x40],0xffffff95
  416a0e:	int3   
  416a0f:	pop    edi
  416a10:	jp     0x416a8e
  416a12:	bound  eax,QWORD PTR [esi-0x5261ee15]
  416a18:	pop    es
  416a19:	xor    ebp,ecx
  416a1b:	push   ss
  416a1c:	mov    es:0x68fdcf74,al
  416a22:	arpl   dx,sp
  416a24:	mov    bl,0xe3
  416a26:	mul    BYTE PTR [ebx]
  416a28:	stos   BYTE PTR es:[edi],al
  416a29:	(bad)  
  416a2a:	mov    bl,0x84
  416a2c:	jne    0x4169f0
  416a2e:	in     al,0x42
  416a30:	retf   0x85ad
  416a33:	mov    esi,0x686763d3
  416a38:	and    DWORD PTR [esi+0x2414d1b0],edx
  416a3e:	pop    ebp
  416a3f:	repz or BYTE PTR cs:[ecx],dh
  416a43:	retf   0x6afd
  416a46:	dec    ebp
  416a47:	shl    BYTE PTR [edi+0x4d4bf8d7],0x7c
  416a4e:	jmp    0x1bb1:0x81532a2f
  416a55:	xchg   esi,eax
  416a56:	ror    BYTE PTR [eax-0x3b],0x1b
  416a5a:	data16 das 
  416a5c:	lock mov edi,0xf0b4ae8
  416a62:	aad    0xa8
  416a64:	ss jmp 0x42e9a872
  416a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6b:	pop    ecx
  416a6c:	fld    DWORD PTR [eax]
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0xf0c478b],cl
  416a7f:	push   es
  416a80:	test   BYTE PTR [ebp+eax*2-0xcffff18],ah
  416a87:	add    al,0x0
  416a89:	add    BYTE PTR [esi-0x75],ah
  416a8c:	sub    BYTE PTR [eax],0x13
  416a8f:	call   0xb305c13b
  416a94:	shl    ch,1
  416a96:	retf   0xd88d
  416a99:	in     eax,0x87
  416a9b:	popf   
  416a9c:	ficom  WORD PTR [esp+edi*2]
  416a9f:	loop   0x416af2
  416aa1:	inc    edx
  416aa2:	ror    BYTE PTR [eax],1
  416aa4:	xchg   esp,eax
  416aa5:	jae    0x416a7e
  416aa7:	(bad)  
  416aa9:	out    0xef,al
  416aab:	push   ebp
  416aac:	push   ebx
  416aad:	jl     0x416b26
  416aaf:	shl    edx,0xf
  416ab2:	sub    bh,dh
  416ab4:	mov    eax,ds:0x90a96e2d
  416ab9:	add    al,0xf2
  416abb:	cmp    al,0xfe
  416abd:	cmp    eax,0x25bdaaea
  416ac2:	ds inc ebp
  416ac4:	repz sub DWORD PTR [eax+0x6c9bded2],edi
  416acb:	cmp    BYTE PTR [ebx],cl
  416acd:	add    al,0x55
  416acf:	pop    eax
  416ad0:	outs   dx,BYTE PTR ds:[esi]
  416ad1:	push   edx
  416ad2:	mov    eax,0xf5382271
  416ad7:	lock mov eax,0x218edcf
  416add:	test   ah,dl
  416adf:	inc    ecx
  416ae0:	xor    edi,esp
  416ae2:	in     al,dx
  416ae3:	in     eax,0xd3
  416ae5:	adc    DWORD PTR [ecx+0x16],edx
  416ae8:	push   ds
  416ae9:	clc    
  416aea:	lods   eax,DWORD PTR ds:[esi]
  416aeb:	push   ss
  416aec:	adc    al,0x50
  416aee:	mov    ebp,0xa293d40d
  416af3:	sahf   
  416af4:	mov    ebx,0x1ea6cb27
  416af9:	jmp    0xd229468d
  416afe:	out    0x7c,eax
  416b00:	loopne 0x416ac8
  416b02:	into   
  416b03:	push   cs
  416b04:	inc    edx
  416b05:	scas   eax,DWORD PTR es:[edi]
  416b06:	adc    al,0x64
  416b08:	push   ecx
  416b09:	cmp    al,al
  416b0b:	mov    ch,0x4c
  416b0d:	and    cl,BYTE PTR [edx]
  416b0f:	mov    WORD PTR [edx],?
  416b11:	or     BYTE PTR [eax+ebx*4],0xd
  416b15:	add    BYTE PTR [edi-0x6ded38c1],0xf2
  416b1c:	pop    ebp
  416b1d:	repz inc esp
  416b1f:	mov    edi,0x99bd6807
  416b24:	jp     0x416ad0
  416b26:	stos   BYTE PTR es:[edi],al
  416b27:	fwait
  416b28:	(bad)  
  416b29:	ins    BYTE PTR es:[edi],dx
  416b2a:	mov    ds:0xaa40ee78,al
  416b2f:	(bad)  [ebx+0x5fef714e]
  416b35:	cmp    al,0x82
  416b37:	test   eax,0x3a10ae9e
  416b3c:	out    dx,al
  416b3d:	test   BYTE PTR [edi],dh
  416b3f:	out    0x1f,al
  416b41:	pop    edx
  416b42:	popa   
  416b43:	enter  0x74,0x80
  416b47:	in     eax,dx
  416b48:	fbld   TBYTE PTR [edx+0x68040575]
  416b4e:	test   edx,ebp
  416b50:	xor    DWORD PTR [edx],eax
  416b52:	ficomp DWORD PTR [ebp+0x780d4759]
  416b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b59:	xchg   ecx,eax
  416b5a:	push   ecx
  416b5b:	imul   edx,DWORD PTR [ecx],0xffffffc3
  416b5e:	push   0x78
  416b60:	sbb    bh,BYTE PTR [ebx+ecx*1]
  416b63:	outs   dx,BYTE PTR ds:[esi]
  416b64:	arpl   WORD PTR [esi-0x7649d1fb],cx
  416b6a:	js     0x416bcd
  416b6c:	mov    ch,0xf3
  416b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b6f:	(bad)  
  416b70:	lods   eax,DWORD PTR ds:[esi]
  416b71:	jb     0x416b6e
  416b73:	popf   
  416b74:	test   al,0xd1
  416b76:	dec    ebx
  416b77:	jbe    0x416b7b
  416b79:	fidivr DWORD PTR [ecx-0x7e]
  416b7c:	mov    bh,0xc7
  416b7e:	mov    al,0x57
  416b80:	mov    edx,eax
  416b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b83:	cs loopne 0x416bc9
  416b86:	mov    edi,0x8dabb6b1
  416b8b:	loope  0x416b96
  416b8d:	xor    eax,DWORD PTR [edx-0x21]
  416b90:	push   esi
  416b91:	repz jp 0x416b6f
  416b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b95:	inc    esp
  416b96:	ss stos BYTE PTR es:[edi],al
  416b98:	push   ebx
  416b99:	out    0x69,al
  416b9b:	in     eax,0x1f
  416b9d:	(bad)  
  416b9e:	push   ss
  416b9f:	(bad)  
  416ba0:	xor    eax,0xe32419e3
  416ba5:	push   cs
  416ba6:	sub    DWORD PTR [ebx],0xffffff86
  416ba9:	pop    esi
  416baa:	lahf   
  416bab:	mov    edx,0x83296b90
  416bb0:	xchg   esp,eax
  416bb1:	push   edx
  416bb2:	repz jle 0x416bda
  416bb5:	pop    es
  416bb6:	mov    esi,0x56ca9a65
  416bbb:	scas   eax,DWORD PTR es:[edi]
  416bbc:	sti    
  416bbd:	and    BYTE PTR [edi],0x64
  416bc0:	pop    edi
  416bc1:	push   edx
  416bc2:	push   eax
  416bc3:	ds pop es
  416bc5:	std    
  416bc6:	sbb    edi,0xdd2cd746
  416bcc:	(bad)  
  416bcd:	not    bh
  416bcf:	clc    
  416bd0:	push   eax
  416bd1:	and    al,0x25
  416bd3:	adc    BYTE PTR [esi],ah
  416bd5:	xchg   DWORD PTR [ecx+ebx*1+0x2d71320d],edi
  416bdc:	loop   0x416bd6
  416bde:	mov    ds:0x81c1a555,al
  416be3:	pushf  
  416be4:	daa    
  416be5:	retf   0x676a
  416be8:	mov    ah,0xe6
  416bea:	push   0xa
  416bec:	mov    bh,0xed
  416bee:	push   ds
  416bef:	sub    eax,0x5245faaf
  416bf4:	mov    ds,edi
  416bf6:	lahf   
  416bf7:	vpunpcklwd xmm5,xmm4,XMMWORD PTR ds:0x37f0c12b
  416bff:	aam    0x72
  416c01:	jl     0x416c7f
  416c03:	sub    BYTE PTR [ebp+eiz*8-0x4e],0x54
  416c08:	ins    BYTE PTR es:[edi],dx
  416c09:	adc    eax,0x5124d19e
  416c0e:	push   ecx
  416c0f:	mov    ecx,0x6ecc7e4c
  416c14:	mov    ah,0xb
  416c16:	push   0x4f
  416c18:	mov    dh,0xa3
  416c1a:	es jl  0x416bcd
  416c1d:	cmc    
  416c1e:	mov    esi,0x15669f3e
  416c23:	jno    0x416c47
  416c25:	les    esp,FWORD PTR [esi-0x2c]
  416c28:	mov    BYTE PTR [esi-0x447e1220],0x60
  416c2f:	mov    eax,0x795d857c
  416c34:	push   cs
  416c35:	loope  0x416bde
  416c37:	jle    0x416cac
  416c39:	fld    DWORD PTR [ebx+0x64]
  416c3c:	aad    0x10
  416c3e:	sbb    BYTE PTR [edx+ebx*4+0x42],bh
  416c42:	mov    esi,0x56425136
  416c47:	mov    bl,0xac
  416c49:	cmc    
  416c4a:	push   0x30
  416c4c:	xchg   esi,eax
  416c4d:	mov    bh,0x55
  416c4f:	nop
  416c50:	out    0x3,eax
  416c52:	xlat   BYTE PTR ds:[ebx]
  416c53:	inc    edx
  416c54:	sub    al,0x16
  416c56:	inc    eax
  416c57:	ret    
  416c58:	and    bh,BYTE PTR [ebx-0x6a]
  416c5b:	sti    
  416c5c:	adc    al,0x9c
  416c5e:	inc    DWORD PTR [edx+0x3]
  416c61:	and    ebp,DWORD PTR [ecx+0x6888d7e7]
  416c67:	mov    ebx,0xb408ade1
  416c6c:	retf   
  416c6d:	dec    edx
  416c6e:	(bad)  [ebx-0x10]
  416c71:	(bad)  
  416c72:	xor    ebp,DWORD PTR fs:[edx-0x63c64787]
  416c79:	(bad)  
  416c7a:	adc    esi,DWORD PTR [edx+ecx*4+0x531177b6]
  416c81:	sub    edi,DWORD PTR [edx]
  416c83:	scas   al,BYTE PTR es:[edi]
  416c84:	rol    BYTE PTR [eax+eax*1],1
  416c87:	pushf  
  416c88:	xchg   edx,eax
  416c89:	lods   al,BYTE PTR ds:[esi]
  416c8a:	and    al,0x35
  416c8c:	das    
  416c8d:	pop    edx
  416c8e:	mov    ch,0xba
  416c90:	in     al,dx
  416c91:	sbb    eax,0xf8232304
  416c96:	mov    ebp,0xbc501555
  416c9b:	push   cs
  416c9c:	repz or bh,al
  416c9f:	aam    0xda
  416ca1:	jo     0x416cbc
  416ca3:	sbb    esi,ebp
  416ca5:	les    eax,FWORD PTR [eax]
  416ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca8:	push   cs
  416ca9:	iret   
  416caa:	fisubr WORD PTR [esi+0x6d]
  416cad:	(bad)  
  416cae:	xlat   BYTE PTR ds:[ebx]
  416caf:	fcomp  QWORD PTR [eax]
  416cb1:	mov    edx,0x665ece0a
  416cb6:	call   0x3161:0x289e277f
  416cbd:	fisubr DWORD PTR [ebp-0x7b906a75]
  416cc3:	ror    edx,1
  416cc5:	enter  0xd15f,0xa1
  416cc9:	sub    eax,0x89740f67
  416cce:	lods   al,BYTE PTR ds:[esi]
  416ccf:	inc    esp
  416cd0:	ss pushf 
  416cd2:	sbb    DWORD PTR [edx+0x32],0xffffffbf
  416cd6:	xchg   ebp,eax
  416cd7:	lods   al,BYTE PTR ds:[esi]
  416cd8:	mov    ah,0xcc
  416cda:	pop    eax
  416cdb:	mov    ds:0x573b3b6c,eax
  416ce0:	xchg   ebp,eax
  416ce1:	daa    
  416ce2:	pusha  
  416ce3:	rcl    DWORD PTR [edi],cl
  416ce5:	add    DWORD PTR [edx+ebp*1-0x62],0xd08a6ae5
  416ced:	test   DWORD PTR [edi+ebp*8],ecx
  416cf0:	jno    0x416c85
  416cf2:	add    ebx,eax
  416cf4:	mov    eax,ds:0x4e1354a3
  416cf9:	test   al,0xb2
  416cfb:	dec    ebp
  416cfc:	ins    DWORD PTR es:[edi],dx
  416cfd:	mov    ds:0x31f5b30d,eax
  416d02:	add    edi,DWORD PTR [edx]
  416d04:	mov    edi,0x41dab53c
  416d09:	cmp    eax,0xea543b6a
  416d0e:	(bad)  
  416d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d11:	or     eax,0x544920b5
  416d16:	ds push 0x38
  416d19:	dec    ebx
  416d1a:	or     ebp,ecx
  416d1c:	data16 or al,0x2d
  416d1f:	mov    eax,ds:0xdf8cb519
  416d24:	mov    dh,0x69
  416d26:	(bad)  
  416d27:	ins    BYTE PTR es:[edi],dx
  416d28:	add    al,0x8e
  416d2a:	test   al,0x13
  416d2c:	mov    DWORD PTR [ebx],0x2bd369ac
  416d32:	mov    bh,0x93
  416d34:	cmp    ah,ch
  416d36:	lahf   
  416d37:	push   cs
  416d38:	sti    
  416d39:	xor    al,0xca
  416d3b:	push   ecx
  416d3c:	inc    ebx
  416d3d:	pop    ss
  416d3e:	hlt    
  416d3f:	mov    DWORD PTR [ebx-0x57ccc6d5],ebp
  416d45:	inc    esi
  416d46:	div    bh
  416d48:	enter  0xbc8e,0xae
  416d4c:	fst    DWORD PTR [ebx]
  416d4e:	arpl   WORD PTR [edi+esi*1+0x4a],sp
  416d52:	es and edi,0x2f
  416d56:	xor    ch,BYTE PTR [edx-0xb295a7b]
  416d5c:	arpl   WORD PTR [eax],si
  416d5e:	outs   dx,DWORD PTR ds:[esi]
  416d5f:	pop    ebx
  416d60:	dec    edx
  416d61:	jae    0x416d4d
  416d63:	scas   eax,DWORD PTR es:[edi]
  416d64:	xor    esp,DWORD PTR [edi+0x47c96b2f]
  416d6a:	imul   sp,WORD PTR [eax],0xccdc
  416d6f:	push   esi
  416d70:	jno    0x416d6f
  416d72:	push   0x24a19dec
  416d77:	test   bl,bh
  416d79:	add    DWORD PTR [ebp+0x650527c0],esp
  416d7f:	retf   0xd512
  416d82:	outs   dx,BYTE PTR ds:[esi]
  416d83:	outs   dx,BYTE PTR ds:[esi]
  416d84:	xor    ecx,esp
  416d86:	adc    DWORD PTR [esi],esp
  416d88:	cmp    eax,DWORD PTR [ecx-0x65752a89]
  416d8e:	sbb    ebp,DWORD PTR [esi-0xe2a71ba]
  416d94:	and    esp,ebp
  416d96:	xchg   ebp,eax
  416d97:	add    ecx,ebx
  416d99:	xor    BYTE PTR [ecx-0x42],bl
  416d9c:	push   esp
  416d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d9e:	jle    0x416d33
  416da0:	inc    ecx
  416da1:	inc    ebx
  416da2:	movsx  ebx,WORD PTR [esi]
  416da5:	test   al,0x60
  416da8:	xchg   edi,eax
  416da9:	shl    ch,1
  416dab:	loope  0x416dd4
  416dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dae:	icebp  
  416daf:	push   ss
  416db0:	sbb    eax,0xce3e9792
  416db5:	arpl   WORD PTR [esi],bp
  416db7:	push   esp
  416db8:	popa   
  416db9:	push   0x8551a1e0
  416dbe:	sub    DWORD PTR [ebx],esp
  416dc0:	mov    ah,0xb8
  416dc2:	xor    BYTE PTR [eax],dl
  416dc4:	mov    esp,ebp
  416dc6:	xchg   ebp,eax
  416dc7:	mov    edx,DWORD PTR [edi-0x8]
  416dca:	add    eax,0x3197ce33
  416dcf:	aaa    
  416dd0:	dec    edx
  416dd1:	pusha  
  416dd2:	dec    edx
  416dd3:	pop    edi
  416dd4:	mov    DWORD PTR [esi+0x122baf7a],edx
  416dda:	xor    BYTE PTR [esi+0x44a226b1],dl
  416de0:	sub    bh,al
  416de2:	xor    DWORD PTR [edx-0x67],0x610e2244
  416de9:	jmp    0xa936deea
  416dee:	dec    DWORD PTR [ecx+0x29]
  416df1:	adc    esp,DWORD PTR [edx-0x35]
  416df4:	or     eax,0xc0cdb166
  416df9:	xor    DWORD PTR [eax],esp
  416dfb:	jle    0x416e18
  416dfd:	in     eax,0x8d
  416dff:	jecxz  0x416e63
  416e01:	cmp    bh,BYTE PTR [edx]
  416e03:	mov    al,0x54
  416e05:	mov    ?,WORD PTR [eax-0x17afde65]
  416e0b:	push   cs
  416e0c:	es push ecx
  416e0e:	xchg   edx,eax
  416e0f:	xchg   esi,eax
  416e10:	adc    esi,eax
  416e12:	inc    eax
  416e13:	pop    es
  416e14:	out    dx,eax
  416e15:	push   esp
  416e16:	jnp    0x416db4
  416e18:	pmaxub mm1,mm4
  416e1b:	and    ebx,esp
  416e1d:	mov    edi,DWORD PTR [ebp+0x5a]
  416e20:	(bad)  
  416e21:	lods   eax,DWORD PTR ds:[esi]
  416e22:	clc    
  416e23:	or     BYTE PTR [ecx],cl
  416e25:	repnz mov bl,0xb8
  416e28:	fwait
  416e29:	test   ah,ch
  416e2b:	mov    bh,0x83
  416e2d:	sub    BYTE PTR [edi],al
  416e2f:	and    BYTE PTR [eax],dh
  416e31:	or     ecx,DWORD PTR [ebx]
  416e33:	xchg   ebp,eax
  416e34:	ins    BYTE PTR es:[edi],dx
  416e35:	sub    al,0x58
  416e37:	invlpg BYTE PTR [ecx-0x28]
  416e3b:	data16 test al,0xf2
  416e3e:	into   
  416e3f:	cli    
  416e40:	or     ch,BYTE PTR [eax]
  416e42:	outs   dx,DWORD PTR ds:[esi]
  416e43:	mov    ebp,0x26c247fa
  416e48:	out    dx,eax
  416e49:	cmp    BYTE PTR [ecx],cl
  416e4b:	pop    ebx
  416e4c:	test   eax,0x96318601
  416e51:	mov    dh,0x58
  416e53:	clc    
  416e54:	iret   
  416e55:	(bad)  
  416e56:	inc    esp
  416e57:	cmovo  edi,DWORD PTR [esi+eax*1+0x4c]
  416e5c:	pop    esi
  416e5d:	call   0x3d837d2d
  416e62:	pop    esi
  416e63:	xchg   edi,eax
  416e64:	pusha  
  416e65:	mov    bl,0xf3
  416e67:	dec    esp
  416e68:	faddp  st(6),st
  416e6a:	(bad)  
  416e6b:	and    DWORD PTR [edx-0xb12a4d],ebp
  416e71:	pusha  
  416e72:	inc    edx
  416e73:	cdq    
  416e74:	ja     0x416eaf
  416e76:	bound  esi,QWORD PTR [edi+0x1230534a]
  416e7c:	cmp    al,0x59
  416e7f:	int    0xa2
  416e81:	retf   
  416e82:	neg    BYTE PTR [eax-0x30a78028]
  416e88:	arpl   WORD PTR [esp+eax*1],si
  416e8b:	aam    0x38
  416e8d:	pushw  cs
  416e8f:	lea    edi,[edi-0x5a]
  416e92:	xor    bh,ah
  416e94:	jnp    0x416e80
  416e96:	frstor [edi+0x635b6cf3]
  416e9c:	cmp    eax,0x2728afa5
  416ea1:	push   eax
  416ea2:	mov    bh,BYTE PTR [ebx+ebp*8+0x5458b4b5]
  416ea9:	in     al,0x6c
  416eab:	cmp    al,0xfd
  416ead:	push   ecx
  416eae:	stos   BYTE PTR es:[edi],al
  416eaf:	xor    cl,BYTE PTR [edi]
  416eb1:	repnz sbb al,0x79
  416eb4:	(bad)  
  416eb5:	cld    
  416eb6:	pop    DWORD PTR [ecx-0x2a]
  416eb9:	das    
  416eba:	jnp    0x416eb3
  416ebc:	sub    ebp,edi
  416ebe:	fs in  al,0x43
  416ec1:	test   ah,dl
  416ec3:	pop    edi
  416ec4:	adc    eax,0xe90b83c2
  416ec9:	inc    edx
  416eca:	pop    esi
  416ecb:	retf   
  416ecc:	mov    ebx,0xcf2d35fd
  416ed1:	xchg   ebp,eax
  416ed2:	jo     0x416e98
  416ed4:	adc    eax,ecx
  416ed6:	sbb    ebx,DWORD PTR [edi]
  416ed8:	in     al,dx
  416ed9:	retf   
  416eda:	div    BYTE PTR [edx+0x6fbdf06]
  416ee0:	push   edi
  416ee1:	mov    BYTE PTR [esi-0x6c],dl
  416ee4:	sub    eax,0xd21dbe7b
  416ee9:	jge    0x416f13
  416eeb:	xor    eax,esp
  416eed:	cmp    DWORD PTR [eax+0x1b],0xc
  416ef1:	cmp    eax,0xcf54d74a
  416ef6:	scas   eax,DWORD PTR es:[edi]
  416ef7:	push   0xffffffc7
  416ef9:	fisubr DWORD PTR [edi+0x39f17482]
  416eff:	jns    0x416f21
  416f01:	popf   
  416f02:	or     DWORD PTR [ebp+0x773acc6f],ebx
  416f08:	test   eax,0x2bf98708
  416f0d:	repz and BYTE PTR [edi+eiz*1-0x1b79c6bd],bh
  416f15:	cmp    DWORD PTR [esi-0x9],ecx
  416f18:	pop    ebp
  416f19:	fist   DWORD PTR [eax]
  416f1b:	jmp    0x617c:0xc36b4cfc
  416f22:	in     al,0xf0
  416f24:	scas   al,BYTE PTR es:[edi]
  416f25:	mov    eax,ds:0x4b7fb5b9
  416f2a:	mov    al,0x46
  416f2c:	retf   0x49b2
  416f2f:	mov    bl,dl
  416f31:	pop    eax
  416f32:	icebp  
  416f33:	hlt    
  416f34:	xchg   ebx,eax
  416f35:	xchg   BYTE PTR [ecx-0x5b],cl
  416f38:	xchg   esi,eax
  416f39:	mov    al,ds:0xed117a0f
  416f3e:	into   
  416f3f:	inc    ebp
  416f40:	retf   0xe57a
  416f43:	and    ecx,esi
  416f45:	mov    edi,0x2e36d5d4
  416f4a:	dec    edi
  416f4b:	in     al,dx
  416f4c:	add    dl,cl
  416f4e:	pop    esp
  416f4f:	xchg   DWORD PTR [esi],eax
  416f51:	mov    dl,0x62
  416f53:	lock mul DWORD PTR es:[ebx+0x52]
  416f58:	outs   dx,BYTE PTR ds:[esi]
  416f59:	push   0x500ee572
  416f5e:	jecxz  0x416f9f
  416f60:	jns    0x416fcd
  416f62:	push   cs
  416f63:	mov    ds:0x318b871b,al
  416f68:	into   
  416f69:	or     al,0x5e
  416f6b:	(bad)  
  416f6c:	fdivrp st(2),st
  416f6e:	ror    BYTE PTR [ebp-0x777ba42a],1
  416f74:	xor    esp,0x66
  416f77:	mov    esp,0x2671e6f2
  416f7c:	iret   
  416f7d:	add    BYTE PTR [eax],al
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x1dcdf626]
  416f90:	cwde   
  416f91:	pop    edi
  416f92:	cmp    ch,ch
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    al,al
  416f9b:	jns    0x417008
  416f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9e:	gs dec ebp
  416fa0:	mov    esp,0xb9150fcf
  416fa5:	ds aam 0xcb
  416fa8:	retf   0xebe2
  416fab:	adc    BYTE PTR [edx+0x7f],dl
  416fae:	lods   al,BYTE PTR ds:[esi]
  416faf:	les    ebx,FWORD PTR [eax+0x77]
  416fb2:	or     ch,ch
  416fb4:	sub    BYTE PTR gs:[eax],bh
  416fb7:	clc    
  416fb8:	jne    0x416f84
  416fba:	jmp    FWORD PTR [ebp-0x4a3472ee]
  416fc0:	clc    
  416fc1:	les    edx,FWORD PTR [eax-0x2aaf5c1d]
  416fc7:	enter  0x5b8,0x77
  416fcb:	loop   0x416ff6
  416fcd:	(bad)  
  416fce:	lahf   
  416fcf:	jnp    0x416f55
  416fd1:	cdq    
  416fd2:	mov    esi,0x261d5465
  416fd7:	imul   DWORD PTR [edi+0x2b]
  416fda:	xchg   edi,eax
  416fdb:	inc    edx
  416fdc:	add    bh,al
  416fde:	into   
  416fdf:	lahf   
  416fe0:	test   al,0x32
  416fe2:	test   al,0xd8
  416fe4:	dec    ebp
  416fe5:	leave  
  416fe6:	jecxz  0x416f9e
  416fe8:	lds    edx,FWORD PTR [esi+0x62]
  416feb:	inc    edx
  416fec:	mov    eax,0x6441cf7a
  416ff1:	psubsb mm7,QWORD PTR [ebx]
  416ff4:	cmp    BYTE PTR [ecx-0x39dd191e],0x61
  416ffb:	sbb    dl,dl
  416ffd:	data16 test BYTE PTR [ebp+0x5d],0x36
  417002:	xchg   ecx,eax
  417003:	retfw  
  417005:	aas    
  417006:	out    dx,al
  417007:	iret   
  417008:	mov    ds:0x8da4ab2,eax
  41700d:	mov    dl,0xb7
  41700f:	add    al,0x6
  417011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417012:	into   
  417013:	out    0xad,al
  417015:	and    BYTE PTR [ebx-0x11451799],dl
  41701b:	or     BYTE PTR [edi+0x6d],dl
  41701e:	mov    ss:0xec6c4313,al
  417024:	xchg   esi,eax
  417025:	jne    0x417074
  417027:	dec    esp
  417028:	mov    al,ds:0x7511bcb2
  41702d:	imul   eax,DWORD PTR [edi-0x48],0xffffffd1
  417031:	das    
  417032:	nop
  417033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417034:	pop    ebx
  417035:	sbb    al,0x42
  417037:	jno    0x417089
  417039:	stos   DWORD PTR es:[edi],eax
  41703a:	add    BYTE PTR [ebx],cl
  41703c:	cmp    cl,bl
  41703e:	pop    edx
  41703f:	cld    
  417040:	jne    0x41700d
  417042:	dec    ebp
  417043:	sub    DWORD PTR [esi+0x35f49aac],esi
  417049:	lds    edx,FWORD PTR [esi]
  41704b:	pop    es
  41704c:	or     al,BYTE PTR [edi+0x62]
  41704f:	mov    ah,BYTE PTR [ebx+0x54]
  417052:	push   eax
  417053:	mov    ebx,0x1cc0d898
  417058:	add    al,0xe4
  41705a:	dec    esp
  41705b:	and    DWORD PTR [ecx-0x11218282],esp
  417061:	mov    ebx,0xf491c9a2
  417066:	or     eax,0x5f8ab6b4
  41706b:	ror    esi,1
  41706d:	cmc    
  41706e:	out    dx,eax
  41706f:	daa    
  417070:	fbld   TBYTE PTR [edi-0xcc0f16d]
  417076:	push   eax
  417077:	fs js  0x417053
  41707a:	gs or  al,0xa
  41707d:	push   ecx
  41707e:	adc    BYTE PTR [esi+0x4d325371],0x8f
  417085:	in     eax,0xb5
  417087:	hlt    
  417088:	nop
  417089:	pop    ecx
  41708a:	pop    esi
  41708b:	jno    0x417032
  41708d:	pop    ebp
  41708e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41708f:	xor    BYTE PTR [esi+edi*2-0x127e5ba2],ch
  417096:	(bad)  
  417098:	nop
  417099:	push   ebx
  41709a:	and    eax,ebx
  41709c:	(bad)  
  41709d:	mov    bh,0x8d
  41709f:	sti    
  4170a0:	or     al,0x64
  4170a2:	add    al,0x70
  4170a4:	into   
  4170a5:	xor    eax,0x5bbe4d8e
  4170aa:	jb     0x4170f1
  4170ac:	fisttp QWORD PTR [ebx]
  4170ae:	aaa    
  4170af:	lods   eax,DWORD PTR ds:[esi]
  4170b0:	imul   esp,DWORD PTR [ecx-0x20],0x6bf969e6
  4170b7:	cmp    BYTE PTR [ecx+0x153efe77],al
  4170bd:	inc    ebx
  4170be:	xor    al,0x2a
  4170c0:	dec    esp
  4170c1:	ror    edx,0x37
  4170c4:	bound  edi,QWORD PTR [ecx-0x13]
  4170c7:	sub    BYTE PTR [edi],0x48
  4170ca:	cwde   
  4170cb:	and    dh,cl
  4170cd:	mov    edi,0x2857dd6b
  4170d2:	mov    ds:0x6142d0db,al
  4170d7:	into   
  4170d8:	outs   dx,BYTE PTR ds:[esi]
  4170d9:	icebp  
  4170da:	(bad)  
  4170db:	stos   DWORD PTR es:[edi],eax
  4170dc:	mov    ds:0xe9707965,eax
  4170e1:	inc    eax
  4170e2:	icebp  
  4170e3:	dec    eax
  4170e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e5:	hlt    
  4170e6:	popf   
  4170e7:	bound  ebp,QWORD PTR gs:[ebx-0x5e1f7964]
  4170ee:	mov    al,0xdb
  4170f0:	jb     0x4170a4
  4170f2:	xchg   edi,eax
  4170f3:	gs xchg esi,eax
  4170f5:	xor    bh,BYTE PTR [esi-0x6ce48ba5]
  4170fb:	pusha  
  4170fc:	push   ebx
  4170fd:	fiadd  DWORD PTR [ecx-0x7f]
  417100:	xchg   ebp,eax
  417101:	jmp    0x347a3a33
  417106:	(bad)  
  417107:	(bad)  
  417108:	jp     0x417173
  41710a:	popf   
  41710b:	ret    
  41710c:	mov    DWORD PTR [ecx+0x77fa5e24],0x212c66dd
  417116:	mov    WORD PTR [ebx-0x75],cs
  417119:	(bad)  
  41711b:	push   eax
  41711c:	xchg   edi,eax
  41711d:	xor    ch,al
  41711f:	jmp    0xb4ce:0x8c60c4e1
  417126:	sub    eax,0x5621814e
  41712b:	cmp    DWORD PTR [edi+0x7074fbaa],edi
  417131:	dec    edx
  417132:	xchg   ebx,eax
  417133:	and    esi,esp
  417135:	inc    edi
  417136:	outs   dx,BYTE PTR ds:[esi]
  417137:	lock and al,0x27
  41713a:	mov    al,0x59
  41713c:	pop    ecx
  41713d:	lds    ecx,FWORD PTR ds:0x75ae275
  417143:	cmp    eax,0x39502d12
  417148:	imul   ebx,DWORD PTR [ebx+0x5f],0xc
  41714c:	jno    0x4170e5
  41714e:	(bad)  
  41714f:	mov    eax,0x23494e94
  417154:	mov    eax,0x69f82cef
  417159:	(bad)  
  41715b:	or     ebx,DWORD PTR [ecx-0x1d]
  41715e:	arpl   WORD PTR [ecx-0x1a],bx
  417161:	dec    esp
  417162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417163:	inc    ebp
  417164:	cli    
  417165:	mov    ebx,0x7d08ae2d
  41716a:	push   ebp
  41716b:	jnp    0x4170ed
  41716d:	test   al,0x19
  41716f:	psllw  mm1,QWORD PTR [edx+edi*4+0x1f631195]
  417177:	pushf  
  417178:	jecxz  0x4171b2
  41717a:	cmp    eax,0xdd85250b
  41717f:	inc    edi
  417180:	xor    al,0xdb
  417182:	xchg   esp,eax
  417183:	jle    0x41718e
  417185:	add    al,0x53
  417187:	in     eax,dx
  417188:	fucomp st(0)
  41718a:	stos   DWORD PTR es:[edi],eax
  41718b:	pop    ebp
  41718c:	out    0xcc,eax
  41718e:	setp   BYTE PTR [eax]
  417191:	je     0x417198
  417193:	ss sbb al,al
  417196:	xchg   ebx,eax
  417197:	sbb    ebx,esp
  417199:	call   0x60593e07
  41719e:	jbe    0x4171f5
  4171a0:	add    eax,0xc79e411e
  4171a5:	xchg   ecx,eax
  4171a6:	mov    ds:0x2d5046dd,eax
  4171ab:	jg     0x417221
  4171ad:	int3   
  4171ae:	es jae 0x41717f
  4171b1:	inc    edi
  4171b2:	jae    0x41721b
  4171b4:	add    ecx,DWORD PTR [ecx-0x15]
  4171b7:	jmp    0xba9b6ee1
  4171bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bd:	push   eax
  4171be:	iret   
  4171bf:	mov    cl,0x62
  4171c1:	pushf  
  4171c2:	sub    BYTE PTR [ebx-0x2],0xcc
  4171c6:	hlt    
  4171c7:	lds    edx,FWORD PTR [ebp-0x5]
  4171ca:	rcl    BYTE PTR [esi-0x2f0135e2],1
  4171d0:	mov    DWORD PTR [edx-0x59],edx
  4171d3:	xchg   esp,eax
  4171d4:	mov    esi,0xe72c4dda
  4171d9:	adc    edi,0xffffffbf
  4171dc:	add    edi,ecx
  4171de:	push   ebp
  4171df:	ret    
  4171e0:	cwde   
  4171e1:	sbb    BYTE PTR ds:0xcb370d8b,dl
  4171e7:	scas   al,BYTE PTR es:[edi]
  4171e8:	dec    edx
  4171e9:	repnz leave 
  4171eb:	out    0xf6,al
  4171ed:	or     al,0x4c
  4171ef:	sbb    bh,cl
  4171f1:	bound  ebp,QWORD PTR [ecx+0x25]
  4171f4:	arpl   ax,di
  4171f6:	mov    ebp,0x2a51674f
  4171fb:	ins    BYTE PTR es:[edi],dx
  4171fc:	cs xchg esi,eax
  4171fe:	and    DWORD PTR [ebx-0x67],ebp
  417201:	dec    edi
  417202:	push   ebp
  417203:	mov    cl,0xc2
  417205:	loopne 0x417203
  417207:	and    ebp,esi
  417209:	inc    ebx
  41720a:	pop    ebp
  41720b:	push   esp
  41720c:	jg     0x41727f
  41720e:	fild   QWORD PTR [ecx-0x14]
  417211:	mov    ch,0x19
  417213:	mov    bl,BYTE PTR [edx]
  417215:	mov    esp,0x889e9e5e
  41721a:	adc    esp,esi
  41721c:	jge    0x417290
  41721e:	add    DWORD PTR [esi+0x42],edi
  417221:	jo     0x417264
  417223:	add    eax,0xe978d431
  417228:	int    0x67
  41722a:	mov    DWORD PTR [edi],ebp
  41722c:	jge    0x4172aa
  41722e:	(bad)  
  41722f:	mov    al,ds:0xa9620165
  417234:	adc    ecx,DWORD PTR [ecx+ebx*8-0x24df07b2]
  41723b:	and    al,BYTE PTR [esi-0x50]
  41723e:	jnp    0x4171c4
  417240:	add    al,BYTE PTR [esi+0x19]
  417243:	dec    ebp
  417244:	enter  0xc6ad,0xd1
  417248:	lods   al,BYTE PTR ds:[esi]
  417249:	hlt    
  41724a:	sub    BYTE PTR [edx],ah
  41724c:	outs   dx,DWORD PTR ds:[esi]
  41724d:	loope  0x417241
  41724f:	je     0x4172ad
  417251:	mov    eax,0x593d4846
  417256:	jbe    0x4171fc
  417258:	pushf  
  417259:	lods   eax,DWORD PTR ds:[esi]
  41725a:	dec    esi
  41725b:	rol    BYTE PTR [eax-0x6a],0x48
  41725f:	lods   eax,DWORD PTR ds:[esi]
  417260:	xchg   ebx,eax
  417261:	sahf   
  417262:	mov    cl,0x4e
  417264:	lods   eax,DWORD PTR ds:[esi]
  417265:	dec    eax
  417266:	and    al,0xdb
  417268:	out    0x3f,al
  41726a:	and    DWORD PTR [esi],esi
  41726c:	cmp    ebp,ebp
  41726e:	dec    eax
  41726f:	adc    al,BYTE PTR [ebx+0x4f]
  417272:	das    
  417273:	mov    ?,WORD PTR [di]
  417276:	lahf   
  417277:	jnp    0x4172c8
  417279:	push   ds
  41727a:	loop   0x41726e
  41727c:	jns    0x417216
  41727e:	adc    BYTE PTR [ecx-0x5b4ea6ce],dh
  417284:	or     esp,DWORD PTR [eax]
  417286:	xchg   edi,eax
  417287:	fldenv [edi]
  417289:	outs   dx,BYTE PTR ds:[esi]
  41728a:	enter  0x973f,0xb1
  41728e:	cmc    
  41728f:	push   edi
  417290:	scas   eax,DWORD PTR es:[edi]
  417291:	outs   dx,DWORD PTR ds:[esi]
  417292:	sbb    ch,ah
  417294:	out    0xd0,al
  417296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417297:	pop    ds
  417298:	scas   al,BYTE PTR es:[edi]
  417299:	push   DWORD PTR [ecx+0x51020aa9]
  41729f:	pop    edi
  4172a0:	xlat   BYTE PTR ds:[ebx]
  4172a1:	mov    eax,ds:0xb85141a9
  4172a6:	mov    dl,0x49
  4172a8:	lahf   
  4172a9:	pusha  
  4172aa:	sbb    dh,cl
  4172ac:	mov    edx,0xabecdfb4
  4172b1:	sub    ch,bl
  4172b3:	fs mov dl,0xb4
  4172b6:	sar    BYTE PTR [eax],1
  4172b8:	xchg   edx,eax
  4172b9:	inc    ecx
  4172ba:	push   esp
  4172bb:	jle    0x4172b6
  4172bd:	out    0x31,eax
  4172bf:	rol    DWORD PTR [esi],cl
  4172c1:	fild   DWORD PTR [ebx]
  4172c3:	and    esp,0xffffff95
  4172c6:	xchg   DWORD PTR [eax],esi
  4172c8:	mov    ds:0x2fc9878a,eax
  4172cd:	dec    edx
  4172ce:	add    ah,BYTE PTR [ecx-0x672bc630]
  4172d4:	jmp    0x417266
  4172d6:	push   cs
  4172d7:	pop    ebp
  4172d8:	mov    bh,bh
  4172da:	xchg   BYTE PTR ds:0x7dd8b2ff,dl
  4172e0:	stos   BYTE PTR es:[edi],al
  4172e1:	push   DWORD PTR [edx]
  4172e3:	dec    ebp
  4172e4:	stos   DWORD PTR es:[edi],eax
  4172e5:	adc    cl,ch
  4172e7:	push   esi
  4172e8:	lahf   
  4172e9:	add    DWORD PTR [eax-0x11f01b12],ecx
  4172ef:	xchg   ebx,eax
  4172f0:	jae    0x417335
  4172f2:	xor    eax,0x304b1182
  4172f7:	cmp    DWORD PTR [esi+0x69],ebx
  4172fa:	je     0x41733a
  4172fc:	xchg   BYTE PTR [eax],bl
  4172fe:	call   0xd154:0xa359742f
  417305:	inc    edx
  417306:	mov    dh,0x75
  417308:	pop    esi
  417309:	push   esp
  41730a:	mov    al,ds:0x7338c05a
  41730f:	jbe    0x417362
  417311:	data16 cmp al,0x78
  417314:	or     DWORD PTR [esi+0x6],0xffffffa1
  417318:	nop
  417319:	fsub   DWORD PTR [edi-0x501b6743]
  41731f:	pop    eax
  417320:	add    edi,esp
  417322:	test   DWORD PTR [eax+0x477552a0],ebx
  417328:	test   DWORD PTR [esi-0x72],0x779291c9
  41732f:	(bad)  
  417330:	fdiv   QWORD PTR [edx+ecx*4+0x72ed0863]
  417337:	fld    DWORD PTR [edi+0x316fce42]
  41733d:	mov    bh,0x91
  41733f:	cmp    esp,DWORD PTR [edx]
  417341:	add    DWORD PTR [edi+ecx*1-0x39af9370],edi
  417348:	enter  0xdfca,0x1e
  41734c:	jbe    0x4172d0
  41734e:	cmp    al,0xf3
  417350:	mov    BYTE PTR [ebp+0x1b],0xc8
  417354:	jnp    0x4173ad
  417356:	or     BYTE PTR ds:0xf4c18469,cl
  41735c:	call   0x5eba:0xc5274743
  417363:	pop    ebp
  417364:	mov    dh,0x79
  417366:	test   BYTE PTR [ebp+0x77],ah
  417369:	jecxz  0x41732c
  41736b:	les    esp,FWORD PTR [edi+0x12810df5]
  417371:	std    
  417372:	and    BYTE PTR [edx+eax*8-0x49],bl
  417376:	push   edi
  417377:	cmp    eax,edi
  417379:	push   0x5f3f117f
  41737e:	cdq    
  41737f:	aad    0xe1
  417381:	sub    ebx,DWORD PTR ds:0x11bb85af
  417387:	jl     0x4173fe
  417389:	pop    ds
  41738a:	fiadd  DWORD PTR [ebx+0x23121088]
  417390:	push   cs
  417391:	test   eax,0x14392d0d
  417396:	into   
  417397:	xchg   DWORD PTR [edx-0x3f],eax
  41739a:	imul   esi,DWORD PTR [eax+0x73],0xffffffcb
  41739e:	sub    BYTE PTR [edx+0x53],ah
  4173a1:	mov    bl,0x14
  4173a3:	pop    eax
  4173a4:	int    0x2
  4173a6:	pop    ds
  4173a7:	cmc    
  4173a8:	in     eax,dx
  4173a9:	loopne 0x417415
  4173ab:	in     al,dx
  4173ac:	fbld   TBYTE PTR [edx+0x3]
  4173af:	mov    WORD PTR [edx],?
  4173b1:	adc    eax,0xa52d3cfe
  4173b6:	ins    BYTE PTR es:[edi],dx
  4173b7:	inc    edx
  4173b8:	gs mov cl,0x15
  4173bb:	pop    ecx
  4173bc:	imul   BYTE PTR [edx-0x11367b55]
  4173c2:	repz push eax
  4173c4:	idiv   BYTE PTR [esi+0x44]
  4173c7:	add    DWORD PTR [esi-0x1a],edi
  4173ca:	xlat   BYTE PTR ds:[ebx]
  4173cb:	out    0xe,eax
  4173cd:	push   edi
  4173ce:	(bad)  [edx]
  4173d0:	repnz mov ah,BYTE PTR [edi+0x500c5680]
  4173d7:	mov    eax,ds:0x1229b89b
  4173dc:	dec    esp
  4173dd:	xchg   ebx,eax
  4173de:	repnz add bh,BYTE PTR [ecx-0x1f]
  4173e2:	jno    0x4173e9
  4173e4:	pop    ecx
  4173e5:	jne    0x4173a9
  4173e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e8:	sar    BYTE PTR [ecx],cl
  4173ea:	jl     0x417437
  4173ec:	dec    esp
  4173ed:	dec    ebp
  4173ee:	pop    esp
  4173ef:	pop    ecx
  4173f0:	mov    al,0x15
  4173f2:	mov    ss,WORD PTR [ebx]
  4173f4:	mov    edx,0x608fe1e7
  4173f9:	popf   
  4173fa:	mov    bh,0x97
  4173fc:	mov    esi,DWORD PTR [ebx+0x3e4adc03]
  417402:	aas    
  417403:	fld    QWORD PTR [edx-0x3a]
  417406:	mov    esi,0x5a78945b
  41740b:	sbb    al,0x6f
  41740d:	das    
  41740e:	mov    BYTE PTR [eax],ch
  417410:	or     eax,DWORD PTR [edx]
  417412:	nop
  417413:	fwait
  417414:	jae    0x417475
  417416:	xor    edi,DWORD PTR [edi]
  417418:	or     dh,dh
  41741a:	sbb    BYTE PTR [edx],ch
  41741c:	or     ebp,edx
  41741e:	ds pop ebx
  417420:	jp     0x41746d
  417422:	rcl    BYTE PTR [esi-0x68bca6a8],0x10
  417429:	test   al,0x44
  41742b:	ds (bad) 
  41742d:	out    0xb1,eax
  41742f:	jbe    0x417470
  417431:	cmp    dh,BYTE PTR [edi+ebp*2]
  417434:	fdiv   DWORD PTR [ebp+0x48838775]
  41743a:	xor    edi,esp
  41743c:	stos   BYTE PTR es:[edi],al
  41743d:	mov    ecx,0x16443935
  417442:	xchg   edx,eax
  417443:	adc    eax,0x92f1aa74
  417448:	repnz loopne 0x4174a1
  41744b:	inc    esi
  41744c:	retf   0x257d
  41744f:	cmp    ebx,DWORD PTR [esi]
  417451:	pop    eax
  417452:	add    ebx,DWORD PTR [esi-0x32fe200b]
  417458:	movd   DWORD PTR [ebp-0xb],mm5
  41745c:	mov    esp,0x57d75eee
  417461:	cmp    eax,0xfcbf3859
  417466:	(bad)  
  417467:	enter  0x6fc2,0xfd
  41746b:	sub    eax,ebp
  41746d:	imul   eax,DWORD PTR [eax+eiz*1-0x1c8593b4],0x4e
  417475:	xchg   ebx,eax
  417476:	inc    esi
  417477:	pop    ebp
  417478:	adc    edx,DWORD PTR [edx-0x74]
  41747b:	mov    esi,0x28fe193
  417480:	or     BYTE PTR ds:0xcc85379e,bl
  417486:	cmp    DWORD PTR [ebx],0x2a
  417489:	aam    0xd2
  41748b:	sbb    ah,BYTE PTR [edi+0x0]
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0xc3f4
  4174a0:	sbb    BYTE PTR [ebx],bl
  4174a2:	sub    esi,edx
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	repz add al,0x0
  4174a9:	add    BYTE PTR [ecx+0x39],ah
  4174ac:	adc    al,0x25
  4174ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174af:	loope  0x4174d4
  4174b1:	and    DWORD PTR [esi+0x430599d1],esp
  4174b7:	clc    
  4174b8:	adc    eax,0xeedaf2b4
  4174bd:	(bad)  
  4174be:	and    ebx,DWORD PTR [ecx]
  4174c0:	jecxz  0x4174c4
  4174c2:	into   
  4174c3:	or     eax,DWORD PTR [eax]
  4174c5:	mov    ah,BYTE PTR [ebx-0x61]
  4174c8:	data16 jb 0x4174b3
  4174cb:	imul   edi,edi,0xffffffe4
  4174ce:	push   cs
  4174cf:	jge    0x4174d6
  4174d1:	pop    es
  4174d2:	sti    
  4174d3:	or     ecx,ebx
  4174d5:	das    
  4174d6:	and    BYTE PTR [ebx+0x1993951f],0x11
  4174dd:	arpl   WORD PTR [ebp+ecx*4-0x2d9fb11b],dx
  4174e4:	std    
  4174e5:	sub    ah,cl
  4174e7:	bound  ebp,QWORD PTR [eax+0x15]
  4174ea:	and    DWORD PTR [ebx],ecx
  4174ec:	stos   DWORD PTR es:[edi],eax
  4174ed:	je     0x4174c4
  4174ef:	fidiv  WORD PTR [eax-0x29]
  4174f2:	mov    edi,0xe2822291
  4174f7:	mov    edx,0xf9c72f2
  4174fc:	push   ecx
  4174fd:	xor    bh,dl
  4174ff:	inc    ebx
  417500:	adc    DWORD PTR [ebp+0x43285c8b],esi
  417506:	dec    esi
  417507:	mov    ebx,0x81b4fdec
  41750c:	adc    al,BYTE PTR [edx-0x445b83f1]
  417512:	push   ecx
  417513:	mov    edx,0x399f4aec
  417518:	mov    esi,edx
  41751a:	rcr    BYTE PTR [ebp-0x1],1
  41751d:	outs   dx,BYTE PTR ds:[esi]
  41751e:	cdq    
  41751f:	in     eax,dx
  417520:	sti    
  417521:	addr16 jge 0x417548
  417524:	xlat   BYTE PTR ds:[ebx]
  417525:	push   es
  417526:	mov    ch,0xc8
  417528:	add    BYTE PTR [ecx-0x80],al
  41752b:	bound  edi,QWORD PTR [eax+0x2052b782]
  417531:	push   eax
  417532:	fcmovnbe st,st(5)
  417534:	xor    BYTE PTR [ebp-0x7d2d362f],bh
  41753a:	xchg   ebp,eax
  41753b:	and    al,0xb5
  41753d:	ret    
  41753e:	jnp    0x41759f
  417540:	jae    0x41758e
  417542:	pop    es
  417543:	in     eax,dx
  417544:	leave  
  417545:	neg    DWORD PTR [edx+0x4b]
  417548:	cmp    ecx,DWORD PTR [edi*1+0x4395d136]
  41754f:	jb     0x41758e
  417551:	sbb    BYTE PTR [ebp+0x2981888e],0x93
  417558:	mov    cl,0xcd
  41755a:	neg    DWORD PTR [eax]
  41755c:	mov    dl,0x8
  41755e:	arpl   dx,bp
  417560:	clc    
  417561:	cmp    BYTE PTR [eax-0x6a],cl
  417564:	xor    al,0x91
  417566:	jo     0x4174ee
  417568:	ds push esi
  41756a:	loop   0x4175e9
  41756c:	cdq    
  41756d:	adc    eax,0xfd56d4e4
  417572:	push   esp
  417573:	mov    edi,0x5dc4771e
  417578:	data16 arpl WORD PTR [edi+0x106d5c26],sp
  41757f:	out    dx,al
  417580:	pop    esp
  417581:	scas   al,BYTE PTR es:[edi]
  417582:	test   al,0x99
  417584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417585:	test   BYTE PTR ds:0xfe31585c,al
  41758b:	outs   dx,BYTE PTR ds:[esi]
  41758c:	(bad)  
  41758d:	stos   DWORD PTR es:[edi],eax
  41758e:	pop    esi
  41758f:	ss retf 
  417591:	jmp    0x417521
  417593:	mov    BYTE PTR [esi-0xc1c4247],dh
  417599:	or     BYTE PTR [edi+0x4f970b07],al
  41759f:	push   0xc3b4e80b
  4175a4:	ret    0xb38c
  4175a7:	jns    0x417628
  4175a9:	xchg   ebp,eax
  4175aa:	fld    DWORD PTR [esi+0x16b0d66b]
  4175b0:	scas   eax,DWORD PTR es:[edi]
  4175b1:	ret    
  4175b2:	sbb    ebp,ebp
  4175b4:	clc    
  4175b5:	and    eax,0xaed4ff2f
  4175ba:	jge    0x4175d8
  4175bc:	out    0x69,eax
  4175be:	bound  edi,QWORD PTR [esi+0x4a3e569d]
  4175c4:	cmp    DWORD PTR [ecx+0x2dc53ae1],ecx
  4175ca:	jnp    0x4175cd
  4175cc:	jp     0x417590
  4175ce:	pop    esp
  4175cf:	sahf   
  4175d0:	adc    ebp,DWORD PTR [ebx+0x2b]
  4175d3:	repnz mul ecx
  4175d6:	adc    al,0x39
  4175d8:	rcl    ecx,cl
  4175da:	leave  
  4175db:	cmp    ebp,DWORD PTR ss:[edi]
  4175de:	push   edx
  4175df:	pop    esp
  4175e0:	test   eax,0x892e02f9
  4175e5:	popf   
  4175e6:	lods   al,BYTE PTR ds:[esi]
  4175e7:	ror    BYTE PTR [ebx+0x253de596],1
  4175ed:	lock and DWORD PTR [ecx+edx*2],0xa
  4175f2:	sub    DWORD PTR [ebx],ebp
  4175f4:	fidiv  WORD PTR [edx-0x7c491743]
  4175fb:	cmc    
  4175fc:	sub    eax,0xd6f3020e
  417601:	mov    ch,0xe8
  417603:	xor    dh,BYTE PTR [eax+0x3f44a38d]
  417609:	fdecstp 
  41760b:	sbb    al,BYTE PTR [esi+ebp*2]
  41760e:	out    dx,eax
  41760f:	pop    edx
  417610:	daa    
  417611:	and    DWORD PTR ds:0x28765ddb,ebx
  417617:	repnz and DWORD PTR [edi-0x3f8a3137],eax
  41761e:	rcr    BYTE PTR [ecx+0x69],1
  417621:	pushf  
  417622:	lea    eax,[esi+0x1f]
  417625:	jmp    0x34ba57a8
  41762a:	xchg   esi,eax
  41762b:	idiv   DWORD PTR [eax+eiz*8+0x3b7c8451]
  417632:	int3   
  417633:	neg    DWORD PTR [edx+0x5a]
  417636:	retf   0x285c
  417639:	mov    ah,0xf0
  41763b:	in     eax,0x9c
  41763d:	push   ebx
  41763e:	mov    ebx,0xc2330e55
  417643:	add    eax,0xea905943
  417648:	pmuludq mm1,QWORD PTR [ecx+0x4f73973d]
  41764f:	mov    ch,0x76
  417651:	and    al,0x21
  417653:	sti    
  417654:	data16 add al,0xa2
  417657:	imul   ebp,DWORD PTR [eax],0x33
  41765a:	daa    
  41765b:	add    esi,esi
  41765d:	repnz dec edx
  41765f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417660:	cli    
  417661:	sub    BYTE PTR [edx],dh
  417663:	push   ebx
  417664:	jmp    0x3c11:0xebb94ad2
  41766b:	jae    0x417629
  41766d:	dec    esi
  41766e:	xor    eax,0xf547abed
  417673:	jmp    0xd4fc5fa0
  417678:	sub    BYTE PTR [ebx+edx*8+0x14],bh
  41767c:	sub    DWORD PTR [edi+edx*1],esp
  41767f:	div    DWORD PTR [esi]
  417681:	inc    ecx
  417682:	test   BYTE PTR ds:0xce8d8032,bl
  417688:	stos   BYTE PTR es:[edi],al
  417689:	mov    cl,0xd9
  41768b:	outs   dx,BYTE PTR ds:[esi]
  41768c:	outs   dx,DWORD PTR ds:[esi]
  41768d:	call   FWORD PTR [edx+0x3eb92fa]
  417693:	jns    0x41770a
  417695:	or     eax,DWORD PTR [eax]
  417697:	pop    ecx
  417698:	mov    eax,0xb6552a49
  41769d:	mov    eax,ds:0xa75a6238
  4176a2:	push   0x49
  4176a4:	push   0xeee409a3
  4176a9:	mov    bl,0x20
  4176ab:	repnz xor ecx,DWORD PTR [ebp+0x55c3c444]
  4176b2:	pop    esi
  4176b3:	jg     0x417655
  4176b5:	mov    ebx,0x5650baf6
  4176ba:	enter  0xf454,0x3a
  4176be:	push   ebp
  4176bf:	sub    al,0x7f
  4176c1:	scas   eax,DWORD PTR es:[edi]
  4176c2:	cld    
  4176c3:	in     eax,0x2c
  4176c5:	mov    BYTE PTR [edx],ah
  4176c7:	fwait
  4176c8:	pop    ebp
  4176c9:	das    
  4176ca:	cs add eax,0xfcddd8c8
  4176d0:	cli    
  4176d1:	xchg   esi,eax
  4176d2:	add    bh,BYTE PTR [esi+0x41c5a735]
  4176d8:	cmp    BYTE PTR [eax-0xb76b8eb],ah
  4176de:	mov    ds,WORD PTR [edx+0x52]
  4176e1:	jmp    0x4d0d:0xa1fb9502
  4176e8:	ja     0x41775b
  4176ea:	adc    ebp,ecx
  4176ec:	loopne 0x4176bc
  4176ee:	add    BYTE PTR [edi-0xe],cl
  4176f1:	inc    eax
  4176f2:	ja     0x417770
  4176f4:	in     al,dx
  4176f5:	jnp    0x4176f4
  4176f7:	inc    ebx
  4176f8:	(bad)  
  4176f9:	pusha  
  4176fa:	lods   eax,DWORD PTR ds:[esi]
  4176fb:	fsubp  st(3),st
  4176fd:	pop    ecx
  4176fe:	leave  
  4176ff:	jl     0x417734
  417701:	add    cl,BYTE PTR [eax+0x6033673a]
  417707:	int    0x32
  417709:	sub    ch,BYTE PTR [ebx]
  41770b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770c:	sub    BYTE PTR [eax-0x7b],0x3b
  417710:	mov    cl,0x56
  417712:	and    BYTE PTR [ebp-0x3b249018],dh
  417718:	sbb    DWORD PTR [edi],ecx
  41771a:	mov    esi,0x3fda7643
  41771f:	or     DWORD PTR [ebx],0xffffffd8
  417722:	mov    edi,0x9e61b9dc
  417727:	cmp    bh,BYTE PTR [ebx]
  417729:	rcr    BYTE PTR [eax-0x41],0x7b
  41772d:	jmp    0x5fcac0ce
  417732:	jbe    0x4176e1
  417734:	sub    BYTE PTR [edx+0x27],0xb2
  417738:	xor    ebp,DWORD PTR [edx-0x18]
  41773b:	sbb    BYTE PTR [eax-0x2e],0xa7
  41773f:	mov    dh,0x8c
  417741:	into   
  417742:	sub    ebp,DWORD PTR ds:0x1a5da0b2
  417748:	ficomp WORD PTR [edi-0x5e4b4f8a]
  41774e:	xchg   ecx,eax
  41774f:	pop    ebx
  417750:	cmp    al,0x38
  417752:	aaa    
  417753:	ins    DWORD PTR es:[edi],dx
  417754:	sbb    al,0x5f
  417756:	outs   dx,BYTE PTR ds:[esi]
  417757:	pop    ecx
  417758:	mov    al,BYTE PTR [ebx+esi*1]
  41775b:	pop    ebx
  41775c:	lahf   
  41775d:	jmp    0xda17:0x62b7fd49
  417764:	(bad)  
  417766:	in     al,0x54
  417768:	shl    ebx,cl
  41776a:	dec    esi
  41776b:	inc    ebx
  41776c:	hlt    
  41776d:	retf   0x6058
  417770:	ret    0x7df8
  417773:	xchg   BYTE PTR [ebx-0x38089537],bl
  417779:	and    DWORD PTR [esi+0x61],ebp
  41777c:	mov    esp,0x17aef8e3
  417781:	jmp    0x4177bf
  417783:	mov    BYTE PTR [ebp-0x7c6ec071],ah
  417789:	sub    BYTE PTR [ebp+0x6a],0x23
  41778d:	fdivrp st(1),st
  41778f:	dec    edx
  417790:	or     al,0x3d
  417792:	sub    al,0x92
  417794:	pop    ecx
  417795:	popa   
  417796:	mov    eax,ds:0xbaec8e33
  41779b:	add    eax,0x67f5017b
  4177a0:	sbb    eax,0x48a40001
  4177a5:	fs push edi
  4177a7:	sub    esp,DWORD PTR [esi+eax*4]
  4177aa:	dec    ecx
  4177ab:	adc    BYTE PTR [ecx+ebp*1-0x67],ah
  4177af:	stos   DWORD PTR es:[edi],eax
  4177b0:	call   esi
  4177b2:	adc    edi,eax
  4177b4:	pushf  
  4177b5:	(bad)  
  4177b6:	mov    ebx,0xebc2534b
  4177bb:	stos   DWORD PTR es:[edi],eax
  4177bc:	add    eax,0xd7247a4f
  4177c1:	add    BYTE PTR [ebx+ebx*1-0x179b8a2f],dh
  4177c8:	jle    0x417817
  4177ca:	xlat   BYTE PTR ds:[ebx]
  4177cb:	stos   DWORD PTR es:[edi],eax
  4177cc:	cmp    ecx,esi
  4177ce:	das    
  4177cf:	cmp    BYTE PTR [eax+edi*2+0x69],0x42
  4177d4:	hlt    
  4177d5:	test   al,0xbf
  4177d7:	test   eax,0x4a5d333b
  4177dc:	mov    ebp,0x699bcf2c
  4177e1:	jmp    0x417827
  4177e3:	cli    
  4177e4:	push   esp
  4177e5:	call   0x89a795b3
  4177ea:	push   edx
  4177eb:	push   ecx
  4177ec:	ins    BYTE PTR es:[edi],dx
  4177ed:	and    eax,0x6a304f2d
  4177f2:	retf   0x5bd1
  4177f5:	ret    0xd2b9
  4177f8:	jo     0x4177e7
  4177fa:	cwde   
  4177fb:	mov    bl,0xfe
  4177fd:	xbegin 0xd09fd013
  417803:	mov    ds:0x26ca423f,al
  417808:	jmp    FWORD PTR [ebx+0x2aa371a4]
  41780e:	dec    esi
  41780f:	dec    ebx
  417810:	(bad)  
  417811:	jno    0x41779e
  417813:	mov    al,bl
  417815:	push   0x2b
  417817:	es gs in al,dx
  41781a:	js     0x41782f
  41781c:	retf   
  41781d:	data16 out 0x2c,al
  417820:	mov    esi,ds
  417822:	xchg   esi,eax
  417823:	in     eax,dx
  417824:	inc    edi
  417825:	cdq    
  417826:	cmp    ebp,esi
  417828:	add    BYTE PTR [ebp+0x38],bh
  41782b:	test   BYTE PTR [ebx+0x2f948c41],bh
  417831:	(bad)  
  417832:	popa   
  417833:	pop    ss
  417834:	aad    0xef
  417836:	nop    ebp
  417839:	xor    DWORD PTR [ebx+0x281bc14c],esp
  41783f:	shl    DWORD PTR [ebx-0x5],0x4
  417843:	dec    eax
  417844:	ins    BYTE PTR es:[edi],dx
  417845:	fild   QWORD PTR [edx]
  417847:	fxch   st(0)
  417849:	aam    0x55
  41784b:	push   ecx
  41784c:	mov    ds:0xe521494d,eax
  417851:	xor    eax,0x829ba0c6
  417856:	clc    
  417857:	xchg   ebx,eax
  417858:	iret   
  417859:	pop    edi
  41785a:	les    ebp,FWORD PTR [ebx+ebx*2-0x56]
  41785e:	push   edx
  41785f:	sar    DWORD PTR ds:0x1e422b55,1
  417865:	stc    
  417866:	(bad)  
  417867:	hlt    
  417868:	dec    edx
  417869:	fisubr WORD PTR [ecx]
  41786b:	xchg   BYTE PTR [esi+0x31],ah
  41786e:	cmp    bl,BYTE PTR ds:0x85e2d01
  417874:	cdq    
  417875:	ss jne 0x4178c3
  417878:	inc    eax
  417879:	outs   dx,DWORD PTR ds:[esi]
  41787a:	add    ah,BYTE PTR [eax]
  41787c:	lds    ebp,FWORD PTR [ecx-0x2c]
  41787f:	call   FWORD PTR [edi-0x1a5aeee7]
  417885:	dec    edi
  417886:	dec    edi
  417887:	mov    ecx,0x90d519c9
  41788c:	mov    eax,ds:0x3237d03c
  417891:	retf   
  417892:	or     bh,BYTE PTR [edi-0x65dcd9fa]
  417898:	push   ebp
  417899:	fcom   QWORD PTR [esi]
  41789b:	xchg   ecx,eax
  41789c:	test   eax,0x859a3a5
  4178a1:	xchg   esp,eax
  4178a2:	mov    ah,bh
  4178a4:	out    dx,al
  4178a5:	fiadd  DWORD PTR [ecx+0x55]
  4178a8:	sub    BYTE PTR [eax-0x18],bh
  4178ab:	jle    0x4178ff
  4178ad:	mov    ebp,0x4a19df10
  4178b2:	adc    ch,BYTE PTR ss:[eax]
  4178b5:	cmp    eax,0x25cfb942
  4178ba:	loopne 0x41793b
  4178bc:	mov    cl,0x1f
  4178be:	sbb    bh,dl
  4178c0:	push   0x349e8115
  4178c5:	dec    esp
  4178c6:	mov    bh,0x58
  4178c8:	inc    ecx
  4178c9:	and    BYTE PTR [ebp+edi*8-0x5],ah
  4178cd:	push   cs
  4178ce:	shl    DWORD PTR [edi-0x29],1
  4178d1:	or     cl,BYTE PTR [ecx]
  4178d3:	pop    ebp
  4178d4:	les    esp,FWORD PTR [eax+0x262bb3be]
  4178da:	(bad)  
  4178db:	enter  0x9d08,0x14
  4178df:	stos   DWORD PTR es:[edi],eax
  4178e0:	adc    eax,0xee08fe68
  4178e5:	outs   dx,BYTE PTR ds:[esi]
  4178e6:	icebp  
  4178e7:	test   eax,0xc73d4a89
  4178ec:	and    esi,DWORD PTR [esi+esi*8]
  4178ef:	cmp    DWORD PTR [ecx+0x675d6dab],edx
  4178f5:	or     eax,0x82eaf8ba
  4178fa:	inc    ebp
  4178fb:	inc    ecx
  4178fc:	mov    dh,0xe5
  4178fe:	iret   
  4178ff:	cs mov bh,0x3b
  417902:	jl     0x417903
  417904:	mov    dh,BYTE PTR [edx]
  417906:	cmc    
  417907:	icebp  
  417908:	mov    eax,0x97d62929
  41790d:	shl    dl,cl
  41790f:	jecxz  0x41789e
  417911:	xchg   edi,eax
  417912:	push   DWORD PTR [eax-0xc844bb5]
  417918:	fld    DWORD PTR [eax]
  41791a:	int3   
  41791b:	cdq    
  41791c:	jne    0x417988
  41791e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41791f:	add    al,0x0
  417921:	mov    bh,0x55
  417923:	int3   
  417924:	gs cmp bl,al
  417927:	dec    ebp
  417928:	pop    ebp
  417929:	jbe    0x4178c8
  41792b:	ins    BYTE PTR es:[edi],dx
  41792c:	and    dh,BYTE PTR [ebp-0x44]
  41792f:	mov    edx,0xab133ff5
  417934:	mov    cl,0xf8
  417936:	xchg   BYTE PTR [ebx-0x80],bl
  417939:	(bad)  
  41793a:	fsub   DWORD PTR [ebp-0x6b033ee4]
  417940:	add    cl,BYTE PTR [ebx]
  417942:	hlt    
  417943:	push   DWORD PTR [esi-0x1e]
  417946:	aad    0x90
  417948:	icebp  
  417949:	icebp  
  41794a:	ins    DWORD PTR es:[edi],dx
  41794b:	jg     0x4178e9
  41794d:	pop    ebx
  41794e:	mov    al,ds:0xf994b562
  417953:	sbb    eax,0xb2c1b6f6
  417958:	xchg   esp,eax
  417959:	in     eax,dx
  41795a:	lds    esi,FWORD PTR [esi+0x48]
  41795d:	shr    BYTE PTR [edi],1
  41795f:	lea    esi,[esi]
  417961:	div    BYTE PTR [esi-0x7c]
  417964:	xor    BYTE PTR ds:0x9b766f0a,cl
  41796a:	inc    ecx
  41796b:	or     eax,0xc8df55b6
  417970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417971:	imul   ecx,DWORD PTR [edi],0x4c3f7446
  417977:	pop    ss
  417978:	(bad)  
  41797a:	or     al,0x16
  41797c:	lods   eax,DWORD PTR ds:[esi]
  41797d:	ficomp DWORD PTR [edi+0x67]
  417980:	pop    edi
  417981:	mov    dh,0x9c
  417983:	test   eax,esi
  417985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417986:	in     al,0x98
  417988:	pop    esp
  417989:	(bad)  
  41798b:	and    eax,0xa32176b5
  417990:	hlt    
  417991:	add    ebp,edi
  417993:	push   eax
  417994:	clc    
  417995:	pop    esp
  417996:	or     DWORD PTR [ebx-0x180561ce],edx
  41799c:	mov    DWORD PTR [eax],eax
  41799e:	add    BYTE PTR [eax],al
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x1dac4e75
  4179b1:	jg     0x4179d1
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [ebx],ch
  4179bb:	sub    eax,0xcb613c9e
  4179c0:	in     al,dx
  4179c1:	punpcklwd mm7,DWORD PTR [edx+0x14]
  4179c5:	bound  esi,QWORD PTR [edx+0x21761c50]
  4179cb:	adc    ebx,ebx
  4179cd:	sub    al,0x81
  4179cf:	cmp    bl,BYTE PTR [esi+0x6c9c8d48]
  4179d5:	ins    DWORD PTR es:[edi],dx
  4179d6:	(bad)  
  4179d7:	xchg   ebx,eax
  4179d8:	jmp    0x5b31b856
  4179dd:	rcl    bh,0x79
  4179e0:	dec    ebx
  4179e1:	mov    al,0xf
  4179e3:	ds gs out 0xa3,al
  4179e7:	sub    BYTE PTR ds:0xf9b02236,bl
  4179ed:	xchg   edi,eax
  4179ee:	jp     0x417979
  4179f0:	pop    es
  4179f1:	add    ebx,DWORD PTR [esi+eiz*1]
  4179f4:	mov    ah,0x58
  4179f6:	fcomp  QWORD PTR [eax]
  4179f8:	iret   
  4179f9:	sbb    BYTE PTR [ebx-0x608c979e],ah
  4179ff:	dec    edx
  417a00:	bound  esi,QWORD PTR [ecx+ebp*2]
  417a03:	imul   esp,DWORD PTR cs:[ecx+0x55],0xfe1bf957
  417a0b:	retf   0xd8ab
  417a0e:	sbb    ebp,0x60
  417a11:	mov    ebp,0xc1c654a5
  417a16:	imul   edx,DWORD PTR [ebp+0x64],0xb485d8c3
  417a1d:	xchg   edx,eax
  417a1e:	or     eax,0x99b47bc0
  417a23:	push   0x4b37e31
  417a28:	in     al,dx
  417a29:	pop    ebp
  417a2a:	in     eax,0x4f
  417a2c:	fwait
  417a2d:	popf   
  417a2e:	jle    0x417a1e
  417a30:	xchg   ebx,eax
  417a31:	daa    
  417a32:	jmp    0xac0:0xa0d61784
  417a39:	cmp    eax,0x8837966a
  417a3e:	(bad)  [ebp-0x3]
  417a41:	outs   dx,DWORD PTR ds:[esi]
  417a42:	pushf  
  417a43:	andps  xmm2,XMMWORD PTR [eax-0x78]
  417a47:	test   BYTE PTR [ebx],ah
  417a49:	mov    eax,0x5eeb7181
  417a4e:	stos   DWORD PTR es:[edi],eax
  417a4f:	mov    ch,0x6c
  417a51:	popf   
  417a52:	aaa    
  417a53:	aas    
  417a54:	or     ch,ah
  417a56:	xor    eax,0x2f432e3a
  417a5b:	add    eax,0x993f382f
  417a60:	nop
  417a61:	cdq    
  417a62:	jo     0x417a78
  417a64:	jne    0x417a33
  417a66:	or     ebp,DWORD PTR [esi]
  417a68:	mov    ebp,0x596d704c
  417a6d:	outs   dx,BYTE PTR ds:[esi]
  417a6e:	hlt    
  417a6f:	dec    ecx
  417a70:	mov    eax,0x9e3b871c
  417a75:	imul   ebp,DWORD PTR [ecx-0x6014b123],0x15
  417a7c:	mov    eax,ds:0x228764c4
  417a81:	add    al,ch
  417a83:	shr    BYTE PTR [ebp+0x23],0x17
  417a87:	enter  0x9a6d,0xf6
  417a8b:	push   ecx
  417a8c:	xchg   ebp,ebp
  417a8e:	mov    ebx,edx
  417a90:	popf   
  417a91:	rcr    DWORD PTR [edi-0x2a8b5628],0x8e
  417a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a99:	fwait
  417a9a:	sbb    ecx,esp
  417a9c:	mov    ds:0xe64fc39a,eax
  417aa1:	pop    es
  417aa2:	cli    
  417aa3:	call   0x4071:0x6aa690e1
  417aaa:	push   esp
  417aab:	and    ebp,DWORD PTR ds:0x2e184932
  417ab1:	xchg   esp,eax
  417ab2:	shl    edx,1
  417ab4:	int3   
  417ab5:	inc    edx
  417ab6:	add    BYTE PTR [edx+0x4cc02178],ah
  417abc:	xor    dh,BYTE PTR [ebp-0x72]
  417abf:	xchg   esp,eax
  417ac0:	(bad)  
  417ac1:	repnz xor eax,0x7c749b24
  417ac7:	iret   
  417ac8:	into   
  417ac9:	mov    al,0xb6
  417acb:	push   ebp
  417acc:	sbb    eax,esp
  417ace:	outs   dx,DWORD PTR ds:[esi]
  417acf:	sub    eax,0x23bf070b
  417ad4:	jo     0x417ab9
  417ad6:	ror    BYTE PTR [edx],0xa0
  417ad9:	outs   dx,DWORD PTR ds:[esi]
  417ada:	sub    BYTE PTR [eax],ch
  417adc:	sub    dh,BYTE PTR [edi-0x40]
  417adf:	frstor [eax]
  417ae1:	fmul   QWORD PTR ds:0x8b7bf277
  417ae7:	fadd   DWORD PTR ss:[edi-0x23b13612]
  417aee:	mov    ds:0x9c741b3c,eax
  417af3:	mov    ecx,0xb31f65be
  417af8:	ret    
  417af9:	push   esp
  417afa:	fmul   QWORD PTR [ecx]
  417afc:	stos   BYTE PTR es:[edi],al
  417afd:	mov    ah,0x24
  417aff:	sub    ecx,0xb9fbdef8
  417b05:	mov    bl,0x26
  417b07:	xor    al,0xaa
  417b09:	inc    ebp
  417b0a:	xchg   edi,eax
  417b0b:	dec    edi
  417b0c:	aaa    
  417b0d:	pop    ebp
  417b0e:	pop    ecx
  417b0f:	pop    es
  417b10:	mov    ebx,0x69a4caf6
  417b15:	dec    ecx
  417b16:	in     al,dx
  417b17:	jnp    0x417b2b
  417b19:	mov    bh,0x90
  417b1b:	xchg   esi,eax
  417b1c:	hlt    
  417b1d:	or     ah,BYTE PTR [edx+0x58226de0]
  417b23:	and    cl,dh
  417b25:	or     eax,0x8a64f551
  417b2a:	mov    edi,0x1147a638
  417b2f:	xor    ah,BYTE PTR [edi+esi*4-0x15]
  417b33:	push   esp
  417b34:	loopne 0x417b12
  417b36:	cmc    
  417b37:	fisubr DWORD PTR [eax]
  417b39:	out    0xc1,eax
  417b3b:	aad    0xf9
  417b3d:	jge    0x417b80
  417b3f:	lahf   
  417b40:	in     al,0x7
  417b42:	xchg   edi,eax
  417b43:	cmp    DWORD PTR [ebx+0x6deeedf1],esp
  417b49:	call   0x4968eab
  417b4e:	aas    
  417b4f:	jnp    0x417b27
  417b51:	mov    ebp,0xdd667a07
  417b56:	(bad)  
  417b57:	mov    eax,ds:0x53460814
  417b5c:	pop    edi
  417b5d:	cmc    
  417b5e:	add    al,ch
  417b60:	sub    ebx,DWORD PTR [ebx]
  417b62:	inc    edi
  417b63:	mov    dl,0x22
  417b65:	xchg   ecx,eax
  417b66:	cmp    ecx,0x11642251
  417b6c:	cmp    ebp,edi
  417b6e:	pop    ebp
  417b6f:	hlt    
  417b70:	push   edx
  417b71:	jb     0x417b88
  417b73:	and    bh,BYTE PTR [edi]
  417b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b76:	int3   
  417b77:	ins    BYTE PTR es:[edi],dx
  417b78:	sbb    al,0x66
  417b7a:	addr16 dec ebx
  417b7c:	ins    BYTE PTR es:[edi],dx
  417b7d:	jmp    0x9899:0xd1c0d09a
  417b84:	bound  ecx,QWORD PTR [ebx-0x75]
  417b87:	scas   al,BYTE PTR es:[edi]
  417b88:	scas   al,BYTE PTR es:[edi]
  417b89:	mov    ebp,0x4ca5b2cd
  417b8e:	or     al,0xf9
  417b90:	out    0xb3,al
  417b92:	xor    BYTE PTR [eax-0x40],dl
  417b95:	pop    ds
  417b96:	sbb    DWORD PTR [ebx-0x5b],eax
  417b99:	test   eax,edx
  417b9b:	call   0x30745674
  417ba0:	dec    edi
  417ba1:	push   eax
  417ba2:	and    esi,DWORD PTR [esp+edx*4+0x93af7e3]
  417ba9:	mov    BYTE PTR [edi-0x3c],al
  417bac:	(bad)  
  417bad:	cmc    
  417bae:	retf   0xe247
  417bb1:	ja     0x417bb7
  417bb3:	or     ah,bh
  417bb5:	inc    ebx
  417bb6:	fld    DWORD PTR ss:[esi]
  417bb9:	mov    ebp,0xa75d11e2
  417bbe:	aad    0x66
  417bc0:	and    dl,BYTE PTR [ebp+0x3a0c3576]
  417bc6:	aad    0x92
  417bc8:	mov    ebx,0xbff14245
  417bcd:	test   BYTE PTR [esi+ebp*1+0x60],0xa7
  417bd2:	test   edx,ebx
  417bd4:	jmp    0x5f20:0x1d5a06fa
  417bdb:	lea    edi,[edi+ebp*1+0x2ff0d5f5]
  417be2:	adc    ecx,0xffffffae
  417be5:	lods   al,BYTE PTR ds:[esi]
  417be6:	xchg   dx,ax
  417be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be9:	add    dl,BYTE PTR [edx+0x1264c516]
  417bef:	xchg   esp,eax
  417bf0:	lahf   
  417bf1:	push   cs
  417bf2:	push   esp
  417bf3:	mov    dx,0x52a6
  417bf7:	sub    al,cl
  417bf9:	and    BYTE PTR [edi],ah
  417bfb:	sub    BYTE PTR [edx+0x0],al
  417bfe:	fdiv   QWORD PTR [ebx+esi*4+0x1]
  417c02:	inc    BYTE PTR [esi+0x1422ecc6]
  417c08:	add    dl,BYTE PTR [esi-0x17]
  417c0b:	(bad)  
  417c0c:	jmp    0x18826f9
  417c11:	inc    esi
  417c12:	sar    esi,0x30
  417c15:	adc    dh,BYTE PTR [ebx-0x74]
  417c18:	popa   
  417c19:	(bad)  [eax-0x65]
  417c1c:	fwait
  417c1d:	stos   DWORD PTR es:[edi],eax
  417c1e:	std    
  417c1f:	jp     0x417c35
  417c21:	cli    
  417c22:	xor    esp,DWORD PTR [esi+0x1a3367b9]
  417c28:	ja     0x417bca
  417c2a:	mov    al,0xae
  417c2c:	jb     0x417c63
  417c2e:	xor    al,0xe6
  417c30:	mov    es,WORD PTR [edi+0x3d]
  417c33:	push   esi
  417c34:	imul   edx,DWORD PTR [ecx-0x5543e742],0x4a
  417c3b:	fcomp  DWORD PTR [eax]
  417c3d:	jns    0x417bd9
  417c3f:	push   edx
  417c40:	add    WORD PTR [edx+0x2e0ee4eb],0xff9b
  417c48:	stos   DWORD PTR es:[edi],eax
  417c49:	mov    ecx,0x50ed2218
  417c4e:	leave  
  417c4f:	in     al,0xa9
  417c51:	stos   DWORD PTR es:[edi],eax
  417c52:	test   al,0x6c
  417c54:	add    ecx,esp
  417c56:	test   BYTE PTR [edi-0x40ad34e4],dl
  417c5c:	neg    DWORD PTR [ecx+0x6caa0980]
  417c62:	add    al,0x3a
  417c64:	scas   eax,DWORD PTR es:[edi]
  417c65:	and    dl,BYTE PTR [eax]
  417c67:	test   BYTE PTR [ebx+0x1f8f5f5],cl
  417c6d:	dec    esi
  417c6e:	lods   eax,DWORD PTR ds:[esi]
  417c6f:	pop    ds
  417c70:	jo     0x417c80
  417c72:	mov    edi,0x1f4cf325
  417c77:	pushf  
  417c78:	daa    
  417c79:	nop
  417c7a:	sbb    DWORD PTR [edx+0x49de62a8],esp
  417c80:	cmp    dl,bh
  417c82:	sub    BYTE PTR [ebp+0x3f],bl
  417c85:	mov    ebx,esi
  417c87:	repz dec edi
  417c89:	cmp    ah,BYTE PTR [esi-0x77bf4e3f]
  417c8f:	popa   
  417c90:	fldenv [edi-0x4d]
  417c93:	neg    dh
  417c95:	pop    ecx
  417c96:	(bad)  
  417c97:	data16 cs jo 0x417d00
  417c9b:	dec    ecx
  417c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c9d:	shl    edi,cl
  417c9f:	in     al,0x8a
  417ca1:	icebp  
  417ca2:	imul   esi,DWORD PTR ds:0x54e8966b,0xffffff8d
  417ca9:	nop
  417caa:	sub    ebp,ebx
  417cac:	push   ecx
  417cad:	dec    ebp
  417cae:	jo     0x417ccd
  417cb0:	xchg   esi,eax
  417cb1:	pusha  
  417cb2:	cs scas eax,DWORD PTR es:[edi]
  417cb4:	fs pop esp
  417cb6:	mov    esi,0xd3bb8b73
  417cbb:	jns    0x417ccd
  417cbd:	xchg   ecx,eax
  417cbe:	sub    ch,BYTE PTR [edx+0x60423fd9]
  417cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc5:	pop    es
  417cc6:	jecxz  0x417c6f
  417cc8:	cmp    DWORD PTR [ebx],eax
  417cca:	pop    ecx
  417ccb:	jnp    0x417c79
  417ccd:	mov    bh,0x9d
  417ccf:	(bad)  
  417cd0:	push   0x1a57e093
  417cd5:	cli    
  417cd6:	pop    ebx
  417cd7:	push   eax
  417cd8:	repz shl BYTE PTR [edx],cl
  417cdb:	push   edx
  417cdc:	popa   
  417cdd:	pushf  
  417cde:	jmp    0x589a:0x8ed1b6a9
  417ce5:	jecxz  0x417d1a
  417ce7:	jmp    0x8d3e:0xed750037
  417cee:	jl     0x417c79
  417cf0:	xor    edi,DWORD PTR [eax]
  417cf2:	sub    edi,0x15
  417cf5:	std    
  417cf6:	test   bh,dh
  417cf8:	or     bh,BYTE PTR [ecx]
  417cfa:	int    0x45
  417cfc:	push   ebx
  417cfd:	ret    
  417cfe:	xor    DWORD PTR [ecx+0x3fe5834f],eax
  417d04:	cmp    dh,BYTE PTR [eax]
  417d06:	sbb    edx,DWORD PTR [ecx]
  417d08:	cs es adc al,0xf7
  417d0c:	sbb    ebp,DWORD PTR [esi]
  417d0e:	dec    edi
  417d0f:	es jnp 0x417cf0
  417d12:	call   0x3a659eab
  417d17:	adc    DWORD PTR [eax-0x4e],esi
  417d1a:	call   0x557d:0x753015e3
  417d21:	test   eax,0x6ade35d2
  417d26:	jo     0x417d2c
  417d28:	xchg   esi,eax
  417d29:	or     ah,BYTE PTR [ecx+ecx*4-0x40]
  417d2d:	in     eax,0xe5
  417d2f:	(bad)  [esi]
  417d31:	push   edx
  417d32:	pop    esi
  417d33:	add    ch,BYTE PTR [ecx]
  417d35:	push   ss
  417d36:	sar    BYTE PTR [esi-0x4f6233b1],0xe2
  417d3d:	xor    edi,DWORD PTR [edi]
  417d3f:	adc    BYTE PTR [ebx],al
  417d41:	jge    0x417d25
  417d43:	xor    eax,0x49a7fc64
  417d48:	(bad)  
  417d49:	pop    ds
  417d4a:	sbb    ch,BYTE PTR [esi-0x2a]
  417d4d:	nop
  417d4e:	xchg   BYTE PTR ds:0x5e9076ae,bl
  417d54:	loop   0x417d36
  417d56:	pop    esp
  417d57:	inc    ecx
  417d58:	ficom  WORD PTR [ecx-0x386898bb]
  417d5e:	std    
  417d5f:	cld    
  417d60:	mov    ebp,0x6d189904
  417d65:	jnp    0x417cfd
  417d67:	stos   BYTE PTR es:[edi],al
  417d68:	cmp    BYTE PTR [ebx-0xdd82864],0xeb
  417d6f:	neg    DWORD PTR [esi+edx*2]
  417d72:	in     eax,dx
  417d73:	shl    dl,cl
  417d75:	fisttp DWORD PTR [ecx+0x6f54f233]
  417d7b:	gs clc 
  417d7d:	lahf   
  417d7e:	mov    esi,0x11af5ee4
  417d83:	aam    0xd6
  417d85:	pop    es
  417d86:	test   BYTE PTR [ebx],0x69
  417d89:	cmp    esi,DWORD PTR [edi+ecx*2]
  417d8c:	cs push 0xffffffe7
  417d8f:	jnp    0x417dfe
  417d91:	scas   al,BYTE PTR es:[edi]
  417d92:	and    eax,0xfbcce8b6
  417d97:	mov    edi,0x5a8a0439
  417d9c:	mov    esi,0xaeb3c9cc
  417da1:	int    0xfc
  417da3:	test   BYTE PTR [ecx],bh
  417da5:	mov    DWORD PTR ds:0x8464023e,ebx
  417dab:	pop    ecx
  417dac:	sti    
  417dad:	add    al,0x68
  417daf:	or     eax,esp
  417db1:	mov    eax,ds:0xcf8b9ea7
  417db6:	inc    esi
  417db7:	es (bad) 
  417db9:	in     eax,dx
  417dba:	imul   ebx,DWORD PTR [edx],0xfffffff1
  417dbd:	movnti DWORD PTR [ebx],edi
  417dc0:	pushf  
  417dc1:	retf   
  417dc2:	enter  0x3e7b,0xaa
  417dc6:	inc    ebx
  417dc7:	(bad)  [esi+0x7fbdc981]
  417dcd:	push   ebx
  417dce:	daa    
  417dcf:	idiv   BYTE PTR [edx]
  417dd1:	push   esp
  417dd2:	test   DWORD PTR ss:[ebp-0x1b],esi
  417dd6:	test   BYTE PTR [ebp-0x497aea2d],0xc7
  417ddd:	cli    
  417dde:	mov    ds:0x7655c8ab,al
  417de3:	sbb    bh,BYTE PTR [ecx]
  417de5:	sub    BYTE PTR [edx+ecx*2+0x33],cl
  417de9:	pop    eax
  417dea:	jbe    0x417e62
  417dec:	cli    
  417ded:	adc    ah,BYTE PTR [esi-0x4a]
  417df0:	sbb    BYTE PTR [esp+ebp*2-0x4358db41],0x6f
  417df8:	mov    edx,0x6e03ad97
  417dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dfe:	mov    ebx,DWORD PTR [ebx+0x9]
  417e01:	stc    
  417e02:	ret    
  417e03:	lock adc ecx,DWORD PTR [esi]
  417e06:	ret    0xa352
  417e09:	xor    eax,0x42350dc7
  417e0e:	mul    BYTE PTR [edx]
  417e10:	aaa    
  417e11:	jnp    0x417e6f
  417e13:	cmp    al,0xd5
  417e15:	adc    DWORD PTR [ebx-0x39100d99],edx
  417e1b:	mov    dl,0x33
  417e1d:	cmp    BYTE PTR [edi-0x5],dh
  417e20:	cmp    BYTE PTR [edi+0xc46c767],bl
  417e26:	cmp    al,0x81
  417e28:	lods   al,BYTE PTR ds:[esi]
  417e29:	mov    BYTE PTR [ebx],0x2b
  417e2c:	mov    WORD PTR [ebx-0x3c],?
  417e2f:	in     eax,dx
  417e30:	jge    0x417e29
  417e32:	sti    
  417e33:	mov    eax,0x544cd33e
  417e38:	dec    edx
  417e39:	mov    esp,0x24960f84
  417e3e:	loopne 0x417e7d
  417e40:	retf   
  417e41:	aam    0x74
  417e43:	push   es
  417e44:	jmp    0x417eb5
  417e46:	js     0x417e22
  417e48:	add    eax,0x98705489
  417e4d:	pop    esp
  417e4e:	lds    ebx,FWORD PTR [edi]
  417e50:	xchg   ecx,eax
  417e51:	jno    0x417ddb
  417e53:	ja     0x417e39
  417e55:	retf   
  417e56:	inc    ebx
  417e57:	loope  0x417e0d
  417e59:	loopne 0x417e45
  417e5b:	xor    esi,ebp
  417e5d:	dec    edi
  417e5e:	aaa    
  417e5f:	int    0xeb
  417e61:	cli    
  417e62:	sbb    al,0xe1
  417e64:	sub    eax,0x2a
  417e67:	pop    es
  417e68:	mov    eax,ds:0xdb1e796c
  417e6d:	push   esp
  417e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e6f:	xchg   ebp,eax
  417e70:	and    eax,0x3d5f4768
  417e75:	pop    edi
  417e76:	punpcklbw mm5,DWORD PTR [esp+ecx*2-0x63e23e55]
  417e7e:	dec    edx
  417e7f:	mov    ecx,0xd258dde2
  417e84:	inc    ebx
  417e85:	add    bh,ah
  417e87:	sahf   
  417e88:	inc    eax
  417e89:	mov    ebp,0x5c0568f6
  417e8e:	addr16 pop esp
  417e90:	cli    
  417e91:	pop    ebx
  417e92:	push   es
  417e93:	cwde   
  417e94:	lods   al,BYTE PTR ds:[esi]
  417e95:	push   0xffffffd2
  417e97:	jb     0x417e76
  417e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9a:	lods   al,BYTE PTR ds:[esi]
  417e9b:	mov    bh,0x5c
  417e9d:	push   es
  417e9e:	cmp    esi,DWORD PTR [eax]
  417ea0:	inc    DWORD PTR [eax-0x54]
  417ea3:	xchg   DWORD PTR [ecx-0x3394acb6],ecx
  417ea9:	pop    esi
  417eaa:	push   0x344b
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	psrad  mm7,QWORD PTR [eax]
  417ec0:	jno    0x417e99
  417ec2:	adc    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repz add al,0x0
  417ec9:	add    cl,al
  417ecb:	les    esp,FWORD PTR [ebp-0x45]
  417ece:	jmp    0x6475:0x5931ded0
  417ed5:	sbb    eax,0xdb319580
  417eda:	adc    BYTE PTR [ebp-0x3cb2c28a],dl
  417ee0:	push   ss
  417ee1:	scas   al,BYTE PTR es:[edi]
  417ee2:	cli    
  417ee3:	push   esp
  417ee4:	jno    0x417e7b
  417ee6:	jmp    0xb3d21bb5
  417eeb:	popa   
  417eec:	outs   dx,BYTE PTR ds:[esi]
  417eed:	stos   BYTE PTR es:[edi],al
  417eee:	icebp  
  417eef:	pop    eax
  417ef0:	push   ds
  417ef1:	ror    DWORD PTR [edi-0x2077fb17],0xd0
  417ef8:	push   ebx
  417ef9:	push   ebx
  417efa:	fs mov dl,0x13
  417efd:	or     DWORD PTR [ebx+0x34],edx
  417f00:	inc    eax
  417f01:	(bad)  
  417f03:	test   DWORD PTR [eax+0x205d1235],edi
  417f09:	mov    ebp,0x45601a00
  417f0e:	xor    eax,0x300569f6
  417f13:	jmp    0x5a70:0x19823199
  417f1a:	fsubrp st(7),st
  417f1c:	or     al,0x9d
  417f1e:	xchg   BYTE PTR [ecx+0x706d3826],dh
  417f24:	sub    bl,0x64
  417f27:	in     al,0x77
  417f29:	fdivrp st(4),st
  417f2b:	psrld  mm2,QWORD PTR [ebx+ebp*8]
  417f2f:	stos   BYTE PTR es:[edi],al
  417f30:	retf   0xa6f1
  417f33:	mov    esi,0x32a01492
  417f38:	outs   dx,DWORD PTR ds:[esi]
  417f39:	mov    ch,0x1a
  417f3b:	fs loopne 0x417fae
  417f3e:	loope  0x417fb3
  417f40:	add    BYTE PTR [ebx-0x2381cb07],bh
  417f46:	ret    0x8859
  417f49:	adc    eax,0x449a7c11
  417f4e:	pop    ebp
  417f4f:	gs out dx,eax
  417f51:	icebp  
  417f52:	jmp    0x417fbc
  417f54:	call   0x89171ff9
  417f59:	add    dl,BYTE PTR [ebp+0x2eab1d01]
  417f5f:	and    BYTE PTR [ebp-0x45],bh
  417f62:	out    dx,eax
  417f63:	sbb    ebp,DWORD PTR [eax+eiz*8]
  417f66:	mov    ebp,0x9e01ca8b
  417f6b:	sti    
  417f6c:	ins    BYTE PTR es:[edi],dx
  417f6d:	call   DWORD PTR [edi+0x4e]
  417f70:	xor    al,0x3a
  417f72:	add    BYTE PTR [ebx+0x3b34ef60],al
  417f78:	mov    DWORD PTR [ecx-0x2af0f2dc],edx
  417f7e:	aad    0xf6
  417f80:	stos   DWORD PTR es:[edi],eax
  417f81:	out    0x40,al
  417f83:	pop    edx
  417f84:	sub    cl,ah
  417f86:	loope  0x417f14
  417f88:	retf   0xfe56
  417f8b:	cmp    al,0x32
  417f8d:	mov    ah,0x5a
  417f8f:	pushf  
  417f90:	xor    cl,BYTE PTR [edi+0x14]
  417f93:	sbb    ah,BYTE PTR [edx-0x79]
  417f96:	int3   
  417f97:	xor    dl,BYTE PTR [ebp-0x6d2b5f58]
  417f9d:	enter  0x4a31,0x96
  417fa1:	lock jl 0x417f9c
  417fa4:	ret    
  417fa5:	ins    BYTE PTR es:[edi],dx
  417fa6:	out    0x2e,al
  417fa8:	rcl    DWORD PTR [ebx+0x63],0x8
  417fac:	mov    bh,0x26
  417fae:	in     al,0x47
  417fb0:	shr    BYTE PTR [edi+edx*2],cl
  417fb3:	sbb    ecx,ebx
  417fb5:	cmc    
  417fb6:	cmp    DWORD PTR [edi+0x1bf7189c],ecx
  417fbc:	push   ds
  417fbd:	call   0xd237:0x7d929ee7
  417fc4:	dec    ecx
  417fc5:	cmp    al,0xb7
  417fc7:	iret   
  417fc8:	mov    edi,DWORD PTR [ebp-0x38]
  417fcb:	lds    edi,FWORD PTR [esp+ebp*8]
  417fce:	js     0x417fce
  417fd0:	leave  
  417fd1:	int3   
  417fd2:	pop    edi
  417fd3:	cmp    al,0x68
  417fd5:	dec    edx
  417fd6:	cld    
  417fd7:	jns    0x418056
  417fd9:	ss xchg esi,eax
  417fdb:	(bad)  
  417fdc:	mov    dl,0x1f
  417fde:	cdq    
  417fdf:	jns    0x418004
  417fe1:	mov    BYTE PTR [ecx+0x17],ch
  417fe4:	jno    0x41802b
  417fe6:	jg     0x417f6e
  417fe8:	addr16 pusha 
  417fea:	test   al,0xa3
  417fec:	dec    ecx
  417fed:	jo     0x418058
  417fef:	stc    
  417ff0:	cld    
  417ff1:	sahf   
  417ff2:	push   0x25
  417ff4:	sahf   
  417ff5:	mov    al,0x48
  417ff7:	sahf   
  417ff8:	jecxz  0x418063
  417ffa:	push   cs
  417ffb:	aam    0xb3
  417ffd:	sbb    eax,0xe1b192d4
  418002:	fwait
  418003:	jmp    0x27c0:0x21b3e5c9
  41800a:	mov    dh,0xe9
  41800c:	xchg   DWORD PTR [ebp+0xad459bb],ebp
  418012:	cmp    dl,BYTE PTR [ebx-0x7f7e0c50]
  418018:	pop    edx
  418019:	ret    
  41801a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801b:	data16 adc al,0x92
  41801e:	adc    al,0xeb
  418020:	xchg   edi,eax
  418021:	jecxz  0x417fac
  418023:	gs mov edx,0xaac346c
  418029:	jge    0x418020
  41802b:	fldenv [ecx-0x1d]
  41802e:	inc    edx
  41802f:	mov    esp,0xf34b689e
  418034:	xor    eax,0x1b765bd4
  418039:	cs aaa 
  41803b:	dec    esi
  41803c:	cwde   
  41803d:	add    ebx,DWORD PTR [eax]
  41803f:	(bad)  
  418042:	(bad)  
  418043:	mov    eax,0x23b7087d
  418048:	jecxz  0x418067
  41804a:	in     al,dx
  41804b:	fwait
  41804c:	xchg   DWORD PTR [esp+esi*1+0x74],esp
  418050:	jbe    0x417fdf
  418052:	pusha  
  418053:	pop    ecx
  418054:	xor    al,0x7a
  418056:	mov    edi,esp
  418058:	cdq    
  418059:	jns    0x4180c8
  41805b:	mov    cl,0xd0
  41805d:	pop    es
  41805e:	loop   0x418051
  418060:	jmp    0x4180aa
  418062:	jae    0x417ffe
  418064:	push   eax
  418065:	cld    
  418066:	mov    ebp,0x7ba4e89
  41806b:	std    
  41806c:	imul   esi,edx,0xaa528792
  418072:	sbb    cl,BYTE PTR [ebp+0x50cd3e15]
  418078:	mov    edx,0x6b2f0ab3
  41807d:	pop    ebx
  41807e:	cs iret 
  418080:	push   esp
  418081:	push   0xe
  418083:	or     bh,BYTE PTR [ebx+edx*8]
  418086:	xor    al,0x49
  418088:	retf   
  418089:	aas    
  41808a:	cdq    
  41808b:	sbb    edx,ebp
  41808d:	xor    edi,DWORD PTR [ebp+0xfe3b9df]
  418093:	xchg   DWORD PTR [ebx+0x1],ecx
  418096:	loope  0x418093
  418098:	pop    edx
  418099:	into   
  41809a:	xchg   DWORD PTR [esi],esp
  41809c:	aad    0xf0
  41809e:	pop    ds
  41809f:	stos   DWORD PTR es:[edi],eax
  4180a0:	mov    ecx,0x4b14d411
  4180a5:	fdivp  st(7),st
  4180a7:	test   al,0x4b
  4180a9:	call   0xf6ea72cc
  4180ae:	xchg   ebp,eax
  4180af:	dec    esp
  4180b0:	inc    ebx
  4180b1:	adc    ecx,edx
  4180b3:	xchg   ebp,eax
  4180b4:	push   ebp
  4180b5:	out    dx,al
  4180b6:	scas   eax,DWORD PTR es:[edi]
  4180b7:	data16 cmp al,0x51
  4180ba:	dec    esp
  4180bb:	mov    esi,0x3f2df7dc
  4180c0:	outs   dx,BYTE PTR ds:[esi]
  4180c1:	sahf   
  4180c2:	push   cs
  4180c3:	mov    ebp,0xf05ac179
  4180c8:	test   BYTE PTR [eax],0x61
  4180cb:	xor    dh,BYTE PTR [ebp-0x28]
  4180ce:	add    ah,0x84
  4180d1:	daa    
  4180d2:	inc    ebp
  4180d3:	pop    eax
  4180d4:	outs   dx,BYTE PTR ds:[esi]
  4180d5:	std    
  4180d6:	jg     0x41812a
  4180d8:	call   DWORD PTR [eax]
  4180da:	fwait
  4180db:	js     0x4180f5
  4180dd:	sub    BYTE PTR [esi],bh
  4180df:	leave  
  4180e0:	popa   
  4180e1:	mov    eax,0x2b150e9d
  4180e6:	pop    edi
  4180e7:	sub    DWORD PTR [eax],ebp
  4180e9:	stc    
  4180ea:	adc    BYTE PTR [ebx],al
  4180ec:	xchg   ebp,eax
  4180ed:	(bad)  
  4180ee:	mov    cl,0x2a
  4180f0:	es sahf 
  4180f2:	je     0x418135
  4180f4:	sahf   
  4180f5:	(bad)  
  4180f6:	sub    BYTE PTR [eax-0x1cb93fdb],al
  4180fc:	push   esi
  4180fd:	jp     0x4180f0
  4180ff:	repz std 
  418101:	mov    WORD PTR [ebx],es
  418103:	push   ds
  418104:	sahf   
  418105:	sbb    al,0xe5
  418107:	lock pop ebx
  418109:	add    eax,0x1c4d031c
  41810e:	sub    BYTE PTR ds:[edi+ecx*2],0x13
  418113:	cmp    al,BYTE PTR [ecx-0x40664d0d]
  418119:	mov    esp,0xa0a40c40
  41811e:	inc    ebx
  41811f:	test   DWORD PTR [edi],0x56956175
  418125:	xor    eax,0xc0568e71
  41812a:	mov    esp,0x8d6bd36a
  41812f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418130:	xchg   esi,eax
  418131:	data16 fisub WORD PTR [edi-0x77cf1ff1]
  418138:	cli    
  418139:	adc    al,0x3e
  41813b:	xchg   ebx,eax
  41813c:	lods   eax,DWORD PTR ds:[esi]
  41813d:	gs jmp 0x4181b3
  418140:	cmp    bl,BYTE PTR [edx]
  418142:	in     al,dx
  418143:	ja     0x41816e
  418145:	mov    dh,0x67
  418147:	sbb    DWORD PTR [ecx+esi*4+0x185ee14],ebp
  41814e:	push   ecx
  41814f:	mov    DWORD PTR [edx+0x71],esi
  418152:	add    eax,0x318c1c8b
  418157:	ret    
  418158:	imul   ecx,ebp,0x3b
  41815b:	cmp    eax,DWORD PTR [eax]
  41815d:	sub    dl,0xbf
  418160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418161:	or     al,0x3b
  418163:	repz sub al,0x95
  418166:	inc    edi
  418167:	inc    esp
  418168:	call   0x1a53:0x201e9584
  41816f:	pop    es
  418170:	xor    al,0x6
  418172:	mov    ebx,0xdb8a78a8
  418177:	jne    0x418154
  418179:	jae    0x41818f
  41817b:	stos   DWORD PTR es:[edi],eax
  41817c:	or     edx,eax
  41817e:	xchg   DWORD PTR [eax+eiz*1+0x5968106a],ebx
  418185:	xor    BYTE PTR [ebp+esi*2-0x50],ch
  418189:	adc    eax,0xf0ef3d1b
  41818e:	in     eax,dx
  41818f:	xchg   ebx,eax
  418190:	or     al,0x7
  418192:	add    eax,DWORD PTR [eax+esi*4]
  418195:	xor    BYTE PTR [ecx-0x2a],cl
  418198:	int    0x79
  41819a:	jns    0x4181ab
  41819c:	jp     0x4181e3
  41819e:	jae    0x418195
  4181a0:	bound  edi,QWORD PTR [ecx-0x1d36826c]
  4181a6:	cmc    
  4181a7:	push   ds
  4181a8:	sub    ch,ch
  4181aa:	pop    ebp
  4181ab:	cmp    DWORD PTR [ebp+0x2f],ecx
  4181ae:	adc    BYTE PTR [ebx+edx*4+0x4d44d7f2],0xce
  4181b6:	out    0x3,eax
  4181b8:	pop    edi
  4181b9:	jbe    0x418186
  4181bb:	jecxz  0x4181c5
  4181bd:	(bad)  [ecx]
  4181bf:	cmp    DWORD PTR [edi],ebp
  4181c1:	xor    BYTE PTR fs:[esi-0x180ffe95],ah
  4181c8:	push   ecx
  4181c9:	cmp    BYTE PTR [ecx-0xc0dbbf9],dh
  4181cf:	clc    
  4181d0:	imul   BYTE PTR [eax+0xf]
  4181d3:	sahf   
  4181d4:	out    0xea,eax
  4181d6:	push   ebx
  4181d7:	pushf  
  4181d8:	xchg   BYTE PTR [ebp-0x7ed74853],dh
  4181de:	pushf  
  4181df:	sub    DWORD PTR [edi-0x1b],0x9950ad45
  4181e6:	in     al,dx
  4181e7:	(bad)
  4181eb:	mov    ah,0x4c
  4181ed:	arpl   WORD PTR [ebx],si
  4181ef:	imul   ebp,DWORD PTR [ebp+0x66c8524a],0x78
  4181f6:	fbld   TBYTE PTR [ebx]
  4181f8:	les    edx,FWORD PTR [ebx+0x21]
  4181fb:	je     0x418191
  4181fd:	add    eax,0x2f320496
  418202:	daa    
  418203:	iret   
  418204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418205:	dec    esp
  418206:	(bad)  
  418207:	ins    DWORD PTR es:[edi],dx
  418208:	mov    es,WORD PTR [ebx-0x27]
  41820b:	or     bh,0xdf
  41820e:	mov    edx,0xef1c2143
  418213:	fbld   TBYTE PTR [edx-0x57]
  418216:	retf   0x1873
  418219:	dec    esp
  41821a:	dec    ebp
  41821b:	adc    bh,dh
  41821d:	inc    ebp
  41821e:	jl     0x418220
  418220:	mov    ds:0x9193ea4c,al
  418225:	inc    esp
  418226:	aas    
  418227:	pop    esi
  418228:	mov    al,0xfe
  41822a:	cmp    ebp,DWORD PTR ds:0xa092de92
  418230:	mov    bl,dh
  418232:	or     BYTE PTR [edx-0x70],dh
  418235:	pop    edx
  418236:	and    eax,0xc16388f7
  41823b:	icebp  
  41823c:	sbb    al,0x2
  41823e:	xchg   DWORD PTR [edi+0x458e9796],ecx
  418244:	and    esp,DWORD PTR ds:0xee9657e1
  41824a:	enter  0xcb7d,0x3d
  41824e:	xor    edx,DWORD PTR [edi]
  418250:	sbb    DWORD PTR [edi],edx
  418252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418253:	jmp    0x5e9b:0xeee4ad9
  41825a:	sub    bl,dl
  41825c:	xchg   BYTE PTR [eax],al
  41825e:	ja     0x4182b9
  418260:	dec    edi
  418261:	and    BYTE PTR [edi+0x3a5b72d7],bl
  418267:	std    
  418268:	test   BYTE PTR [eax],dl
  41826a:	out    dx,al
  41826b:	mov    ebx,0x8d3aae0a
  418270:	adc    al,0x3
  418272:	cmp    BYTE PTR [edx],0x17
  418275:	leave  
  418276:	fdiv   QWORD PTR fs:[ebx+ebx*1-0x45]
  41827b:	mul    DWORD PTR [ebx-0x742afb02]
  418281:	pop    edx
  418282:	sbb    BYTE PTR [edx],dl
  418284:	test   DWORD PTR [ebp-0x6d],esi
  418287:	pop    ds
  418288:	xor    esi,edx
  41828a:	(bad)  
  41828b:	dec    ebp
  41828c:	hlt    
  41828d:	stc    
  41828e:	sub    ah,dl
  418290:	(bad)  
  418291:	fwait
  418292:	push   esp
  418293:	push   cs
  418294:	(bad)  
  418295:	mov    bl,0x87
  418297:	sahf   
  418298:	bound  edi,QWORD PTR [ebx+0x388d9cea]
  41829e:	sub    esp,edx
  4182a0:	inc    esp
  4182a1:	xchg   edx,eax
  4182a2:	mov    eax,0x9c60a272
  4182a7:	fbld   TBYTE PTR [eax+0x1f]
  4182aa:	stos   DWORD PTR es:[edi],eax
  4182ab:	mov    ch,0x13
  4182ad:	mov    ?,eax
  4182af:	sbb    bh,al
  4182b1:	jmp    0xcb6b4d63
  4182b6:	sbb    eax,0x7d90ef74
  4182bb:	or     DWORD PTR [edi],0x44
  4182be:	xchg   esi,eax
  4182bf:	xchg   ecx,eax
  4182c0:	jge    0x4182ba
  4182c2:	loope  0x4182b1
  4182c4:	ficom  DWORD PTR [ecx-0x73]
  4182c7:	sub    cl,BYTE PTR [edx+0x48]
  4182ca:	je     0x418344
  4182cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182cd:	rcl    BYTE PTR ds:0x5c8b2b36,cl
  4182d3:	cdq    
  4182d4:	mov    ch,0x45
  4182d6:	mov    ebx,0x2a6a5ce6
  4182db:	pop    ds
  4182dc:	les    ebp,FWORD PTR [eax]
  4182de:	xor    ah,dl
  4182e0:	ror    DWORD PTR [ecx],1
  4182e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e3:	enter  0x68fe,0x74
  4182e7:	add    DWORD PTR ds:0x6fbce752,esp
  4182ed:	xchg   DWORD PTR [ebx],ebp
  4182ef:	std    
  4182f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f1:	push   cs
  4182f2:	rcl    DWORD PTR [ebx],1
  4182f4:	shl    edx,1
  4182f6:	cs in  al,0xea
  4182f9:	popa   
  4182fa:	xor    eax,0xb91ea10f
  4182ff:	dec    edx
  418300:	in     eax,dx
  418301:	jae    0x4182bd
  418303:	or     eax,0xc7a6aa1f
  418308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418309:	pop    ebp
  41830b:	(bad)  
  41830c:	test   eax,0x964192a9
  418311:	jne    0x4182e2
  418313:	sbb    eax,0x93bae238
  418318:	pop    es
  418319:	add    bh,BYTE PTR [eax]
  41831b:	rol    eax,cl
  41831d:	adc    ch,ch
  41831f:	jge    0x418316
  418321:	jbe    0x41831a
  418323:	outs   dx,DWORD PTR ds:[esi]
  418324:	in     eax,0xbc
  418326:	call   0x1627:0x12a1f71e
  41832d:	or     cl,BYTE PTR [ebp-0x47]
  418330:	in     al,dx
  418331:	aam    0xdd
  418333:	xchg   BYTE PTR [ebx-0x41],al
  418336:	loope  0x4182e7
  418338:	mov    esp,0xd4e18809
  41833d:	ror    ch,1
  41833f:	(bad)  
  418340:	pop    ecx
  418341:	inc    ebp
  418342:	test   DWORD PTR [eax+0x3b],esi
  418345:	push   edx
  418346:	jmp    0x818b:0xdb5c4930
  41834d:	add    eax,0x36fbf4d4
  418352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418353:	repz scas al,BYTE PTR es:[edi]
  418355:	add    bh,BYTE PTR [edx]
  418357:	test   bl,dl
  418359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41835a:	clc    
  41835b:	fidivr DWORD PTR [eax-0x1f375468]
  418361:	mov    ah,0x82
  418363:	and    al,BYTE PTR [ebp-0x24]
  418366:	jmp    0xcb45d90e
  41836b:	in     eax,dx
  41836c:	jg     0x4183a0
  41836e:	cmp    BYTE PTR [eax-0x664a3d87],bl
  418374:	in     al,0x47
  418376:	popf   
  418377:	mov    cl,0xe1
  418379:	mov    ds:0x48805b54,eax
  41837e:	ror    BYTE PTR [ecx+ebx*2+0x30],0x96
  418383:	(bad)  
  418384:	mov    al,BYTE PTR [esi]
  418386:	and    cl,BYTE PTR ds:0x7a00967
  41838c:	xor    ch,BYTE PTR [ebx]
  41838e:	sub    BYTE PTR [ebx-0x71f57890],al
  418394:	mov    edx,0x2c4a4044
  418399:	dec    edi
  41839a:	mov    BYTE PTR [edx],0xf9
  41839d:	rcl    dh,0xd3
  4183a0:	aas    
  4183a1:	dec    ecx
  4183a2:	icebp  
  4183a3:	xlat   BYTE PTR ds:[ebx]
  4183a4:	repnz sub DWORD PTR [esi-0x41e18e91],esp
  4183ab:	bound  edi,QWORD PTR [esi+0x61]
  4183ae:	mov    gs,WORD PTR [ecx-0x1662e101]
  4183b4:	pop    ss
  4183b5:	adc    al,0x33
  4183b7:	dec    esp
  4183b8:	test   eax,esp
  4183ba:	add    eax,0x805e
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	add    DWORD PTR [edx],0xffffff9e
  4183d0:	out    0x9d,eax
  4183d2:	add    al,0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	repz add al,0x0
  4183d9:	add    cl,al
  4183db:	sbb    al,0x46
  4183dd:	ins    DWORD PTR es:[edi],dx
  4183de:	(bad)  
  4183df:	shl    dl,1
  4183e1:	dec    edx
  4183e2:	stos   BYTE PTR es:[edi],al
  4183e3:	loope  0x418427
  4183e5:	bound  esp,QWORD PTR [esi]
  4183e7:	add    BYTE PTR [ecx-0x2],dh
  4183ea:	mov    DWORD PTR [ecx+ecx*8-0x4f4c3ad],ecx
  4183f1:	enter  0xf885,0xfb
  4183f5:	jmp    0x4183c7
  4183f7:	pop    ebx
  4183f8:	scas   al,BYTE PTR es:[edi]
  4183f9:	(bad)  
  4183fa:	mov    ecx,0x4718eaab
  4183ff:	jl     0x4183d7
  418401:	xlat   BYTE PTR ds:[ebx]
  418402:	xchg   DWORD PTR [ebx],esp
  418404:	test   DWORD PTR [eax],ebx
  418406:	jo     0x418473
  418408:	mov    bl,BYTE PTR [edx]
  41840a:	int    0x83
  41840c:	cs pop ebx
  41840e:	mov    DWORD PTR [eax-0x4c88ce12],esp
  418414:	in     eax,0x70
  418416:	outs   dx,DWORD PTR ds:[esi]
  418417:	ret    
  418418:	push   esp
  418419:	ds pop edx
  41841b:	test   dh,al
  41841d:	rcl    DWORD PTR [ecx-0x1ad3399],1
  418423:	out    dx,eax
  418424:	or     bh,0x74
  418427:	in     eax,0x91
  418429:	sti    
  41842a:	fistp  WORD PTR [edx-0xf]
  41842d:	outs   dx,BYTE PTR ds:[esi]
  41842e:	popa   
  41842f:	push   0x6c
  418431:	mov    ss,WORD PTR [edi+0x72]
  418434:	fidiv  DWORD PTR [ebx+0x2e27e663]
  41843a:	mov    DWORD PTR [esi-0x41],ebx
  41843d:	aas    
  41843e:	cli    
  41843f:	cwde   
  418440:	(bad)  
  418441:	sbb    DWORD PTR [ecx+0x2c],esi
  418444:	out    0xe1,al
  418446:	mov    edi,0x3e78394
  41844b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844c:	mov    edx,0x6bf248ae
  418451:	call   0xd5a45b8c
  418456:	xchg   edi,eax
  418457:	mov    esp,0xf5552a10
  41845c:	(bad)  
  41845d:	(bad)  
  41845e:	adc    al,0x8c
  418460:	test   BYTE PTR [edx],ah
  418462:	sbb    edi,edx
  418464:	add    dh,BYTE PTR [eax]
  418466:	dec    edx
  418467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418468:	push   ecx
  418469:	add    eax,0xf6b9c426
  41846e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41846f:	sbb    eax,0x358dcae5
  418474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418475:	mov    edx,0xd6e35e
  41847a:	cld    
  41847b:	ret    
  41847c:	aaa    
  41847d:	jmp    0x41849c
  41847f:	xchg   ebp,eax
  418480:	adc    DWORD PTR [edi-0x5f],esp
  418483:	inc    edx
  418484:	or     edi,DWORD PTR [esi-0x1f475f89]
  41848a:	cld    
  41848b:	or     BYTE PTR [edi+eax*2+0x47],0xc9
  418490:	popf   
  418491:	cmp    ecx,ecx
  418493:	int3   
  418494:	mov    bl,0xf2
  418496:	inc    edi
  418497:	loop   0x418422
  418499:	xor    al,0xf7
  41849b:	imul   ecx,esi,0xffffffa4
  41849e:	jbe    0x4184a1
  4184a0:	addr16 mov ch,0x58
  4184a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a4:	mov    esp,0x348b3d0a
  4184a9:	cld    
  4184aa:	mov    bl,0xb2
  4184ac:	mov    esi,0x9ff60d5
  4184b1:	push   DWORD PTR [ebx+edx*2-0x6120c83c]
  4184b8:	imul   ebx,DWORD PTR [eax-0x4c356b1e],0x211a8ecc
  4184c2:	sub    DWORD PTR [edx+0x55],0x11a00b05
  4184c9:	push   0xffffffbf
  4184cb:	sub    dh,BYTE PTR [esi-0x3b76a1e]
  4184d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d2:	ins    BYTE PTR es:[edi],dx
  4184d3:	push   edx
  4184d4:	lahf   
  4184d5:	cli    
  4184d6:	ins    DWORD PTR es:[edi],dx
  4184d7:	jo     0x418549
  4184d9:	jno    0x4184a2
  4184db:	outs   dx,BYTE PTR ds:[esi]
  4184dc:	loope  0x4184e3
  4184de:	jmp    0xf48e9a50
  4184e3:	mov    dh,BYTE PTR [eax-0x69]
  4184e6:	pop    eax
  4184e7:	jae    0x418566
  4184e9:	fnstenv [ebx-0x7d]
  4184ec:	mov    eax,ds:0x4d9e3f6a
  4184f1:	cs adc ebx,esi
  4184f4:	mov    ?,WORD PTR [ebx+0x22215331]
  4184fa:	adc    al,0x19
  4184fc:	and    BYTE PTR [ecx+0x3b957458],ah
  418502:	pop    es
  418503:	iret   
  418504:	enter  0x4890,0x66
  418508:	retf   0xa849
  41850b:	sbb    al,0x90
  41850d:	vmovlhps xmm4,xmm4,xmm1
  418511:	mov    esi,0x5fba6663
  418516:	sub    DWORD PTR [ebp-0x3f5ac37],esi
  41851c:	xchg   DWORD PTR ds:0x6c746fc8,esi
  418522:	pusha  
  418523:	push   ebx
  418524:	xchg   ebx,eax
  418525:	jp     0x418522
  418527:	xor    BYTE PTR [edx-0x67],dl
  41852a:	leave  
  41852b:	add    BYTE PTR [ebx],bh
  41852d:	mov    esp,0xf559084c
  418532:	ret    0x1ad1
  418535:	mov    bh,0x17
  418537:	(bad)  
  418538:	mov    eax,ds:0xb8f6d1a6
  41853d:	fisttp WORD PTR [ebx+0x2788727c]
  418543:	in     eax,0x99
  418545:	push   edx
  418546:	or     eax,0x1ff4286c
  41854b:	pop    eax
  41854c:	cwde   
  41854d:	aad    0x74
  41854f:	cmp    al,bl
  418551:	pop    ebp
  418552:	aas    
  418553:	mov    ds:0x7245dbc6,al
  418558:	dec    eax
  418559:	shl    BYTE PTR [ecx+0x5e702ac],cl
  41855f:	pop    DWORD PTR [eax]
  418561:	pop    ss
  418562:	stos   DWORD PTR es:[edi],eax
  418563:	add    eax,0xfffd1c1d
  418568:	test   dh,dh
  41856a:	xor    ebp,ebp
  41856c:	stos   DWORD PTR es:[edi],eax
  41856d:	mov    ch,BYTE PTR [ecx]
  41856f:	or     ah,BYTE PTR [ebx+0x7e]
  418572:	int    0x24
  418574:	xchg   ebx,eax
  418575:	and    eax,0x1b4ca62d
  41857a:	in     eax,0xf2
  41857c:	push   cs
  41857d:	dec    edx
  41857e:	div    ebx
  418580:	sbb    BYTE PTR [ebx],bh
  418582:	sbb    esi,DWORD PTR [esi-0x73]
  418585:	outs   dx,DWORD PTR ds:[esi]
  418586:	adc    eax,0x4a2895a3
  41858b:	mov    edx,0x92a1be3d
  418590:	pop    ebp
  418591:	jmp    0xb22e:0xe2f3f4f8
  418598:	test   al,0x77
  41859a:	or     eax,eax
  41859c:	mov    bl,0x1c
  41859e:	xchg   DWORD PTR [ebp+edx*4+0x25e5aaab],ebp
  4185a5:	jne    0x4185f1
  4185a7:	jle    0x41857d
  4185a9:	push   eax
  4185aa:	fist   DWORD PTR [esi-0x12f6c47d]
  4185b0:	xchg   edx,eax
  4185b1:	mov    ebx,0x31d800a1
  4185b6:	(bad)  
  4185b7:	adc    BYTE PTR [esi+0x22da5a41],ch
  4185bd:	imul   ebx,DWORD PTR [edi+0x3c],0xffffffc5
  4185c1:	add    BYTE PTR [ecx],ah
  4185c3:	aaa    
  4185c4:	sub    dh,dl
  4185c6:	push   eax
  4185c7:	mov    al,0x4f
  4185c9:	out    0xee,al
  4185cb:	adc    eax,0xb324aea0
  4185d0:	out    dx,al
  4185d1:	in     eax,dx
  4185d2:	and    DWORD PTR [eax],ebp
  4185d4:	stos   BYTE PTR es:[edi],al
  4185d5:	pusha  
  4185d6:	and    DWORD PTR [eax+edi*4],ecx
  4185d9:	ret    
  4185da:	pop    ebx
  4185db:	and    al,0xa
  4185dd:	and    cl,al
  4185df:	mov    edi,0xf4e8d589
  4185e4:	inc    esp
  4185e5:	jbe    0x418628
  4185e7:	loop   0x41858c
  4185e9:	jae    0x4185e2
  4185eb:	mov    ds:0x22ded842,eax
  4185f0:	lods   al,BYTE PTR ds:[esi]
  4185f1:	jl     0x41858d
  4185f3:	out    dx,eax
  4185f4:	mov    eax,ds:0x12eff2af
  4185f9:	icebp  
  4185fa:	mov    dh,0x8b
  4185fc:	add    eax,0xe125117b
  418601:	sbb    al,0x9f
  418603:	clc    
  418604:	lods   eax,DWORD PTR ds:[esi]
  418605:	pop    edx
  418606:	les    edi,FWORD PTR [ebp-0x51376c2b]
  41860c:	lods   al,BYTE PTR ds:[esi]
  41860d:	sub    al,0x45
  41860f:	sub    DWORD PTR [esi+0x19],ebx
  418612:	stc    
  418613:	push   edx
  418614:	daa    
  418615:	fist   DWORD PTR [ebx+ecx*8+0x1bd2919a]
  41861c:	jl     0x418666
  41861e:	ret    0x4ce7
  418621:	mov    DWORD PTR [ecx],esp
  418623:	cmp    al,ah
  418625:	loop   0x418617
  418627:	sbb    eax,0x1dc7779
  41862c:	cwde   
  41862d:	addr16 and al,0x83
  418630:	jp     0x41867d
  418632:	inc    eax
  418633:	sub    bl,BYTE PTR [eax-0x5d]
  418636:	or     eax,DWORD PTR [eax+edi*1-0x31]
  41863a:	sub    dl,BYTE PTR [ebx+0x75]
  41863d:	or     al,0xf8
  41863f:	mov    dl,0xf7
  418641:	test   cl,al
  418643:	adc    ah,cl
  418645:	push   edi
  418646:	imul   ebx,DWORD PTR [edi+eiz*1+0x12],0x7bba5825
  41864e:	pop    ss
  41864f:	jbe    0x418684
  418651:	mov    ds:0x9644bcc6,eax
  418657:	sahf   
  418658:	dec    ecx
  418659:	out    dx,eax
  41865a:	sbb    BYTE PTR ds:0x50906add,cl
  418660:	ret    0x652b
  418663:	scas   al,BYTE PTR es:[edi]
  418664:	dec    ebx
  418665:	mov    cs,WORD PTR [edi-0x6956306a]
  41866b:	into   
  41866c:	out    0xeb,eax
  41866e:	popa   
  41866f:	adc    esi,DWORD PTR [ecx-0x62]
  418672:	xchg   edi,eax
  418673:	pop    DWORD PTR [edx+ebx*4-0x216a00c6]
  41867a:	mov    bl,0x6d
  41867c:	and    BYTE PTR [ebx-0x77],dh
  41867f:	inc    esp
  418680:	fidivr WORD PTR [esi-0x29]
  418683:	pop    eax
  418684:	pop    ebx
  418685:	and    bl,BYTE PTR [ecx+0x1]
  418688:	inc    esp
  418689:	dec    esi
  41868a:	stos   DWORD PTR es:[edi],eax
  41868b:	push   esi
  41868c:	mov    eax,ds:0xb37b5b33
  418691:	loope  0x418642
  418693:	(bad)  
  418694:	inc    ebp
  418695:	lahf   
  418696:	repnz sbb BYTE PTR [esi],dl
  418699:	and    dh,BYTE PTR [esi]
  41869b:	add    DWORD PTR [edx+eax*2-0x65],esp
  41869f:	ins    DWORD PTR es:[edi],dx
  4186a0:	pop    ecx
  4186a1:	ss inc esi
  4186a3:	rcl    DWORD PTR [edi-0x69],1
  4186a6:	(bad)  
  4186a7:	aam    0x5f
  4186a9:	push   edx
  4186aa:	push   cs
  4186ab:	lea    ebp,[ebx-0x42]
  4186ae:	xchg   ecx,eax
  4186af:	xchg   ecx,eax
  4186b0:	mov    edi,0xf4863cbe
  4186b5:	ret    0x907d
  4186b8:	or     esi,ebx
  4186ba:	jnp    0x418719
  4186bc:	popa   
  4186bd:	loopne 0x4186af
  4186bf:	cmc    
  4186c0:	sbb    al,0x8f
  4186c2:	push   cs
  4186c3:	das    
  4186c4:	(bad)  
  4186c5:	fisub  WORD PTR [ebp-0x4]
  4186c8:	fdiv   DWORD PTR [ebx+eiz*8]
  4186cb:	jne    0x4186d7
  4186cd:	test   edx,esp
  4186cf:	js     0x418729
  4186d1:	jecxz  0x4186d4
  4186d3:	fwait
  4186d4:	or     ecx,0x300477c9
  4186da:	push   ds
  4186db:	inc    ebp
  4186dc:	sbb    eax,edx
  4186de:	or     al,0x5f
  4186e0:	test   DWORD PTR [eax-0x248eddf2],ebp
  4186e6:	dec    ebx
  4186e7:	in     eax,dx
  4186e8:	mov    dl,0x52
  4186ea:	adc    edi,ebx
  4186ec:	mov    esi,0x5dd4585a
  4186f1:	mul    esi
  4186f3:	mov    ebp,0x633f078
  4186f8:	and    DWORD PTR [esi+0x3fa942ba],edi
  4186fe:	push   ecx
  4186ff:	gs add al,0x24
  418702:	arpl   WORD PTR fs:[edx+edx*2-0x172838cc],si
  41870a:	add    eax,0x5917bde9
  41870f:	add    esi,DWORD PTR [edi]
  418711:	daa    
  418712:	or     al,0xff
  418714:	sbb    al,0x5d
  418716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418717:	sub    dl,bl
  418719:	fs pop eax
  41871b:	mov    ch,0x14
  41871d:	loope  0x4186bf
  41871f:	call   0x6c5c:0x5a721d7e
  418726:	js     0x418799
  418728:	sbb    al,0x85
  41872a:	in     al,0xce
  41872c:	or     bh,BYTE PTR [ecx-0x6b86d4d1]
  418732:	pop    ebp
  418733:	jnp    0x4186e2
  418735:	jmp    0x9030:0x1664a87a
  41873c:	sar    DWORD PTR [esi],1
  41873e:	dec    edx
  41873f:	dec    ebp
  418740:	fiadd  DWORD PTR [ebp+esi*1+0x1ed3d932]
  418747:	jne    0x418702
  418749:	hlt    
  41874a:	in     eax,0xb2
  41874c:	stos   DWORD PTR es:[edi],eax
  41874d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874e:	mov    DWORD PTR [esi],edx
  418750:	pop    edi
  418751:	ffree  st(0)
  418753:	jge    0x4187bc
  418755:	cmp    eax,0x9a861043
  41875a:	ror    DWORD PTR [edi-0x54],0xb0
  41875e:	mov    ebp,0x8f8e42bb
  418763:	aas    
  418764:	mov    edx,0xabbeb0f0
  418769:	in     al,0xda
  41876b:	out    0xf0,eax
  41876d:	lock je 0x418760
  418770:	add    DWORD PTR [ecx+eax*4+0x60104e28],ebp
  418777:	frstor [ebx]
  418779:	addr16 mov eax,0x57f1f1cb
  41877f:	scas   eax,DWORD PTR es:[edi]
  418780:	aam    0xe2
  418782:	mov    edi,0x5e9d4d56
  418787:	mov    edi,0xa2ae3945
  41878c:	aaa    
  41878d:	jns    0x418744
  41878f:	jo     0x41875b
  418791:	clc    
  418792:	(bad)  
  418793:	push   0x1
  418795:	loopne 0x41873b
  418797:	div    DWORD PTR ds:0xd3f7e589
  41879d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41879e:	loope  0x418745
  4187a0:	add    eax,0x4ff47ef4
  4187a5:	test   BYTE PTR ds:0xb4b76dbb,bl
  4187ab:	dec    ebp
  4187ac:	popa   
  4187ad:	mov    eax,0x7d89b96c
  4187b2:	inc    esp
  4187b3:	lds    esi,FWORD PTR [edi-0x657a166c]
  4187b9:	mov    dh,0x21
  4187bb:	or     cl,bl
  4187bd:	and    DWORD PTR [esi-0x1f],ecx
  4187c0:	mov    edi,DWORD PTR cs:[esi+0x739be10]
  4187c7:	mov    bl,0x41
  4187c9:	lahf   
  4187ca:	leave  
  4187cb:	pop    esi
  4187cc:	repnz test BYTE PTR [edi-0x1b],bl
  4187d0:	jle    0x418781
  4187d2:	ja     0x4187c9
  4187d4:	in     al,0x9a
  4187d6:	pop    edi
  4187d7:	les    ebx,FWORD PTR [ebx+0x28e0ec89]
  4187dd:	es loop 0x4187d6
  4187e0:	sub    bl,bh
  4187e2:	push   edx
  4187e3:	mov    BYTE PTR ds:0x22032777,dh
  4187e9:	test   BYTE PTR [eax],0xe9
  4187ec:	jmp    0x418846
  4187ee:	call   0xe29aec3
  4187f3:	jno    0x418797
  4187f5:	jle    0x418798
  4187f7:	call   0xec7f4104
  4187fc:	leave  
  4187fd:	ja     0x418826
  4187ff:	sub    bl,BYTE PTR [ebx+0x16]
  418802:	loop   0x418876
  418804:	and    ebx,DWORD PTR [ebp+0x1f5ea7c4]
  41880a:	and    DWORD PTR [eax],ecx
  41880c:	jo     0x4187a3
  41880e:	(bad)
  418811:	imul   ebx,DWORD PTR [edx-0x47],0xffffffb1
  418815:	jno    0x41881b
  418817:	jno    0x41888a
  418819:	cmp    al,0xc
  41881b:	cmp    al,cl
  41881d:	loop   0x4187a5
  41881f:	sub    BYTE PTR ds:0xbab563ae,cl
  418825:	in     al,dx
  418826:	ficom  WORD PTR [edi]
  418828:	gs jae 0x4187e4
  41882b:	adc    al,0xc
  41882d:	mov    ds:0xfe3dc1d7,eax
  418832:	enter  0x2ec3,0x6a
  418836:	jns    0x4187c9
  418838:	mov    bl,ch
  41883a:	push   cs
  41883b:	shl    ebx,1
  41883d:	das    
  41883e:	int    0x26
  418840:	and    BYTE PTR [edi],ah
  418842:	adc    ebp,DWORD PTR [ebp+ebx*2-0x5b542b8d]
  418849:	mov    cl,0x12
  41884b:	test   eax,0x1102bb9
  418850:	mov    bh,0x21
  418852:	lock in eax,0x31
  418855:	scas   eax,DWORD PTR es:[edi]
  418856:	and    ecx,esp
  418858:	inc    ecx
  418859:	aad    0xd4
  41885b:	jl     0x4187de
  41885d:	push   es
  41885e:	sbb    dh,BYTE PTR [esi+0x6eaa9e42]
  418864:	jg     0x4188bb
  418866:	dec    eax
  418867:	dec    ebx
  418868:	pop    eax
  418869:	mov    cl,dh
  41886b:	in     al,dx
  41886c:	cld    
  41886d:	push   ecx
  41886e:	jbe    0x418856
  418870:	scas   eax,DWORD PTR es:[edi]
  418871:	jnp    0x4188d7
  418873:	sti    
  418874:	test   al,0x46
  418876:	popf   
  418877:	mov    esp,DWORD PTR [edi+0x76]
  41887a:	xchg   ecx,eax
  41887b:	xchg   BYTE PTR [ecx+0x1db8a671],ch
  418881:	test   eax,0xa43a7de3
  418886:	das    
  418887:	mov    dh,0xf8
  418889:	or     bh,BYTE PTR [ecx]
  41888b:	icebp  
  41888c:	xor    BYTE PTR [ecx],bl
  41888e:	imul   cl
  418890:	sub    cl,BYTE PTR [esp+edi*4+0x3a]
  418894:	dec    edi
  418895:	and    edi,DWORD PTR [ebx]
  418897:	loopne 0x418849
  418899:	jp     0x4188b9
  41889b:	imul   esp,DWORD PTR [edx],0x59d7273f
  4188a1:	cmp    BYTE PTR ds:0x1aaaeaac,0x2b
  4188a8:	test   eax,0xdf3cdd8d
  4188ad:	jae    0x4188ed
  4188af:	sub    DWORD PTR [edi],eax
  4188b1:	mov    fs,edi
  4188b3:	shl    eax,cl
  4188b5:	xchg   dh,dl
  4188b7:	loop   0x418886
  4188b9:	jb     0x4188ef
  4188bb:	rcl    BYTE PTR [esi],cl
  4188bd:	call   0xd5f49173
  4188c2:	pusha  
  4188c3:	inc    edx
  4188c4:	mov    ebx,0x6713ba63
  4188c9:	or     bl,BYTE PTR [edi+0xf482]
  4188cf:	add    BYTE PTR [eax],al
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0x1b
  4188df:	out    dx,eax
  4188e0:	fiadd  DWORD PTR [edi]
  4188e2:	test   DWORD PTR ds:0x4f30001,0xa4a90000
  4188ec:	lea    edx,[eax-0x613ed296]
  4188f2:	mov    esp,0x2ec36e89
  4188f7:	jae    0x418975
  4188f9:	dec    si
  4188fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188fc:	jo     0x41893f
  4188fe:	int    0xba
  418900:	es or  eax,0xa6dfc598
  418906:	xchg   esi,eax
  418907:	out    0xc7,al
  418909:	jmp    DWORD PTR [esi-0x5b514c20]
  41890f:	(bad)  
  418910:	sub    esi,DWORD PTR [eax+eiz*2]
  418913:	jp     0x4188c7
  418915:	cmp    eax,0x958f0888
  41891a:	adc    DWORD PTR [eax+0x5c8736bb],ebp
  418920:	cmp    al,0xed
  418922:	xor    BYTE PTR [ebx+0x15],ch
  418925:	out    dx,eax
  418926:	xchg   ebx,eax
  418927:	xchg   edx,eax
  418928:	test   eax,0x80f622ec
  41892d:	dec    ebx
  41892e:	pop    ds
  41892f:	inc    edi
  418930:	retf   0x3ab0
  418933:	scas   al,BYTE PTR es:[edi]
  418934:	cmp    ebp,eax
  418936:	dec    ecx
  418937:	addr16 cmp eax,0x6f58f2b6
  41893d:	test   DWORD PTR [esp+esi*1],eax
  418940:	pop    ecx
  418941:	adc    edx,DWORD PTR [ebp+0x5c742ea0]
  418947:	aam    0xa7
  418949:	in     al,dx
  41894a:	pop    edi
  41894b:	or     al,0x1
  41894d:	stos   DWORD PTR es:[edi],eax
  41894e:	jg     0x418984
  418950:	fist   DWORD PTR [esi]
  418952:	xor    bl,BYTE PTR [ebx+0x790555ce]
  418958:	lods   al,BYTE PTR ds:[esi]
  418959:	push   0xffffff8f
  41895b:	mov    eax,0x1318240d
  418960:	das    
  418961:	sahf   
  418962:	xchg   esi,eax
  418963:	hlt    
  418964:	int    0x73
  418966:	xor    BYTE PTR [eax-0x17b6963],0xba
  41896d:	or     eax,0xa0733010
  418972:	mov    bl,0x2c
  418974:	out    0x4b,al
  418976:	dec    ecx
  418977:	jnp    0x4189f6
  418979:	addr16 (bad) 
  41897b:	data16 xor ch,BYTE PTR [edi+0x42]
  41897f:	and    DWORD PTR [ebp+0x1e],ebp
  418982:	cmp    BYTE PTR [edi+0x4a],dl
  418985:	jnp    0x4189b3
  418987:	les    edi,FWORD PTR [edx+0x5c7b1432]
  41898d:	pop    ebx
  41898e:	stos   BYTE PTR es:[edi],al
  41898f:	nop
  418990:	sub    DWORD PTR [esp+eax*4],edi
  418993:	in     al,dx
  418994:	sbb    edx,DWORD PTR [edi-0x3f]
  418997:	fidiv  DWORD PTR [edi-0x1c]
  41899a:	les    edi,FWORD PTR [ecx+ebx*1]
  41899d:	jns    0x4189c9
  41899f:	(bad)  
  4189a1:	jmp    0xd288e5a0
  4189a6:	add    dl,0x3
  4189a9:	std    
  4189aa:	imul   edi,DWORD PTR [ecx+0x43],0xbfc129b7
  4189b1:	rol    BYTE PTR [ecx],1
  4189b3:	inc    ecx
  4189b4:	and    edi,DWORD PTR [edi]
  4189b6:	call   0x411a:0x1aa9a26c
  4189bd:	rol    BYTE PTR ds:0x8ac78c8f,cl
  4189c3:	push   0xffffffe4
  4189c5:	(bad)  
  4189c7:	inc    edi
  4189c8:	jo     0x418a2f
  4189ca:	lock test ecx,ecx
  4189cd:	push   ebp
  4189ce:	pop    edi
  4189cf:	or     al,0x64
  4189d1:	push   esi
  4189d2:	pop    ebp
  4189d3:	jb     0x418988
  4189d5:	or     dl,ah
  4189d7:	adc    al,BYTE PTR [edi-0x1d]
  4189da:	daa    
  4189db:	loopne 0x4189ed
  4189dd:	mov    esi,0x97cc28a6
  4189e2:	stos   DWORD PTR es:[edi],eax
  4189e3:	dec    edx
  4189e4:	outs   dx,DWORD PTR ds:[esi]
  4189e5:	iret   
  4189e6:	push   esi
  4189e7:	sbb    al,0xc9
  4189e9:	or     ebp,DWORD PTR [esi-0x6a]
  4189ec:	jmp    0xa007:0xfeaf1a4
  4189f3:	jo     0x418a5a
  4189f5:	inc    edx
  4189f6:	out    dx,eax
  4189f7:	jb     0x418a5b
  4189f9:	sbb    eax,0x48d4a30d
  4189fe:	and    eax,0xecee3c4d
  418a03:	and    esp,DWORD PTR [ebx+0x281fa738]
  418a09:	mov    al,ds:0x23aad8e9
  418a0e:	push   cs
  418a0f:	jle    0x418a6a
  418a11:	mov    al,0xad
  418a13:	cdq    
  418a14:	lock in al,dx
  418a16:	xchg   edi,eax
  418a17:	in     al,0x69
  418a19:	dec    eax
  418a1a:	push   cs
  418a1b:	hlt    
  418a1c:	xor    DWORD PTR ds:0x199f9821,ecx
  418a22:	jl     0x418a47
  418a24:	test   BYTE PTR [edi-0x6a5ef7fa],0xf
  418a2b:	sahf   
  418a2c:	lods   al,BYTE PTR ds:[esi]
  418a2d:	and    DWORD PTR [ecx],edx
  418a2f:	(bad)  
  418a30:	xor    eax,0x2f1c70a8
  418a35:	xor    cl,BYTE PTR [edi+ebp*8-0x58cd036c]
  418a3c:	push   ss
  418a3d:	shl    DWORD PTR [ecx],0xa2
  418a40:	sti    
  418a41:	das    
  418a42:	pop    ds
  418a43:	sbb    BYTE PTR [ecx+0x6220e911],ch
  418a49:	or     eax,0xf104f73d
  418a4e:	data16 add al,al
  418a51:	(bad)  
  418a52:	sti    
  418a53:	add    al,0x37
  418a55:	fs stc 
  418a57:	push   ebp
  418a58:	cmp    ebp,DWORD PTR [edi]
  418a5a:	jb     0x418aa0
  418a5c:	retf   
  418a5d:	ficom  DWORD PTR [eax+0x5f58e30e]
  418a63:	jns    0x418ad1
  418a65:	call   0xcc7340ff
  418a6a:	push   edx
  418a6b:	jns    0x418a40
  418a6d:	adc    al,BYTE PTR [ebx+eiz*8]
  418a70:	loopne 0x4189fe
  418a72:	(bad)  
  418a74:	cli    
  418a75:	add    edx,edi
  418a77:	or     ecx,esi
  418a79:	(bad)  
  418a7a:	enter  0x523a,0xad
  418a7e:	or     al,0xb6
  418a80:	mov    BYTE PTR [edi],ah
  418a82:	out    0xfb,eax
  418a84:	push   es
  418a85:	jmp    0x418ad0
  418a87:	push   0x15
  418a89:	js     0x418a64
  418a8b:	xchg   BYTE PTR [edi+0x77],al
  418a8e:	out    dx,al
  418a8f:	pop    esp
  418a90:	test   eax,0xbabbd516
  418a95:	aaa    
  418a96:	cmp    DWORD PTR [ecx-0x2c],edx
  418a99:	pop    esp
  418a9a:	jmp    0x7b5e:0xac010559
  418aa1:	push   ds
  418aa2:	mov    bl,0xa9
  418aa4:	mov    esi,0xd977a2eb
  418aa9:	dec    edx
  418aaa:	sbb    al,0x3d
  418aac:	popa   
  418aad:	mov    dl,0xa7
  418aaf:	aaa    
  418ab0:	aad    0xd6
  418ab2:	jne    0x418a7a
  418ab4:	test   eax,0x89c4852
  418ab9:	pushf  
  418aba:	dec    esp
  418abb:	xor    cl,0x78
  418abe:	imul   edx,DWORD PTR [esi-0x7e9020b6],0x10
  418ac5:	sahf   
  418ac6:	shr    cl,cl
  418ac8:	adc    eax,0x220aa10e
  418acd:	mov    esi,0xe4a2cf2c
  418ad2:	jnp    0x418ace
  418ad4:	pop    es
  418ad5:	fidivr WORD PTR [edi-0x629f6a2e]
  418adb:	and    ch,BYTE PTR [eax]
  418add:	sub    cl,dl
  418adf:	push   ebx
  418ae0:	dec    edi
  418ae1:	mov    al,0xb5
  418ae3:	or     DWORD PTR [esi],0xffffffb6
  418ae6:	out    dx,al
  418ae7:	pop    edi
  418ae8:	sub    dh,BYTE PTR [eax]
  418aea:	xor    BYTE PTR [ebp+edi*4+0xd],bl
  418aee:	push   edi
  418aef:	cmp    al,0xca
  418af1:	loopne 0x418b1a
  418af3:	ret    0xc20c
  418af6:	push   ss
  418af7:	add    eax,0xbc035c0d
  418afc:	addr16 xchg ebp,eax
  418afe:	es repz pop esp
  418b01:	jmp    0x418abc
  418b03:	out    dx,al
  418b04:	cmp    eax,0xa1d61828
  418b09:	jo     0x418b6b
  418b0b:	loope  0x418b23
  418b0d:	hlt    
  418b0e:	and    esi,DWORD PTR [eax+ebx*4]
  418b11:	imul   esp,DWORD PTR [ebx],0x27c06042
  418b17:	pop    esp
  418b18:	jle    0x418b66
  418b1a:	xchg   edx,eax
  418b1b:	pusha  
  418b1c:	rdmsr  
  418b1e:	and    DWORD PTR ds:0xcd63057d,esp
  418b24:	ret    
  418b25:	loopne 0x418b3c
  418b27:	jo     0x418b52
  418b29:	jae    0x418ba5
  418b2b:	push   eax
  418b2c:	dec    esp
  418b2d:	mov    esp,0xbb04daab
  418b32:	xor    eax,0xd8936cba
  418b37:	mov    ecx,0x5d045886
  418b3c:	jg     0x418b8c
  418b3e:	stc    
  418b3f:	dec    esp
  418b40:	(bad)  
  418b41:	sbb    bh,BYTE PTR [ecx+edi*8+0x4db9562f]
  418b48:	shr    BYTE PTR [eax+0x32164d67],cl
  418b4e:	jb     0x418b14
  418b50:	dec    ebx
  418b51:	sar    DWORD PTR cs:[ebx+0x5],0x48
  418b56:	push   ecx
  418b57:	jle    0x418aea
  418b59:	fs inc esi
  418b5b:	outs   dx,DWORD PTR ds:[esi]
  418b5c:	das    
  418b5d:	mov    eax,0xe4c904e4
  418b62:	(bad)  
  418b63:	arpl   bp,dx
  418b65:	aam    0x76
  418b67:	dec    ebp
  418b68:	and    eax,0x4d106f7
  418b6d:	or     bl,cl
  418b6f:	dec    esi
  418b70:	push   eax
  418b71:	adc    DWORD PTR [edx+0x71],edi
  418b74:	repnz inc ebp
  418b76:	cmc    
  418b77:	lahf   
  418b78:	mov    ds:0x403db00b,eax
  418b7d:	push   ecx
  418b7e:	ror    BYTE PTR [ebp+0x33],cl
  418b81:	(bad)  
  418b82:	daa    
  418b83:	(bad)  
  418b84:	jg     0x418b98
  418b86:	sbb    al,0xd6
  418b88:	dec    eax
  418b89:	inc    ebp
  418b8a:	push   0x48902e8a
  418b8f:	mov    ebp,cs
  418b91:	xchg   ebx,eax
  418b92:	mov    eax,ds:0x1f7b6507
  418b97:	daa    
  418b98:	dec    ecx
  418b99:	fsubp  st(2),st
  418b9b:	pop    ebx
  418b9c:	adc    eax,0xfcf4bb6
  418ba1:	xchg   edx,eax
  418ba2:	push   ebx
  418ba3:	cli    
  418ba4:	in     eax,dx
  418ba5:	mov    al,0x15
  418ba7:	mov    eax,0x470c95b2
  418bac:	inc    edi
  418bad:	push   ebp
  418bae:	(bad)  
  418baf:	out    dx,al
  418bb0:	and    ecx,ecx
  418bb2:	or     BYTE PTR [ebp+eiz*8+0x41],0xa
  418bb7:	test   al,0x48
  418bb9:	retf   0x4f8c
  418bbc:	pop    eax
  418bbd:	xor    BYTE PTR [eax+0x74fe4ff9],cl
  418bc3:	xchg   ebp,eax
  418bc4:	adc    al,0xbc
  418bc6:	outs   dx,DWORD PTR ds:[esi]
  418bc7:	pop    ss
  418bc8:	pop    esp
  418bc9:	inc    edi
  418bca:	adc    al,BYTE PTR [eax+esi*8-0x4a28cc76]
  418bd1:	xor    BYTE PTR [eax-0x6],0xdc
  418bd5:	sti    
  418bd6:	out    0x5a,al
  418bd8:	cdq    
  418bd9:	call   0x47e6fb22
  418bde:	fst    st(0)
  418be0:	nop
  418be1:	xor    dh,BYTE PTR [ebx-0x7ec8eae2]
  418be7:	(bad)  
  418be8:	xor    eax,0xc353dc95
  418bed:	mov    edi,0x65ff3bb5
  418bf2:	xor    DWORD PTR [esi],ebp
  418bf4:	add    al,0x52
  418bf6:	pop    ds
  418bf7:	push   ebx
  418bf8:	sahf   
  418bf9:	adc    cl,BYTE PTR [edi-0x5667271]
  418bff:	arpl   WORD PTR [edi-0x6a],si
  418c02:	pop    edx
  418c03:	jmp    0x2847:0x3807eedf
  418c0a:	shr    BYTE PTR [eax+0x4248546a],1
  418c10:	pop    ss
  418c11:	neg    DWORD PTR [ecx-0x1bda4b9b]
  418c17:	nop
  418c18:	out    0xac,al
  418c1a:	push   edx
  418c1b:	jb     0x418c6f
  418c1d:	or     BYTE PTR [edi+0x19],0x86
  418c21:	sbb    eax,0xd08ea173
  418c26:	jle    0x418be9
  418c28:	xlat   BYTE PTR ds:[ebx]
  418c29:	fwait
  418c2a:	arpl   ax,sp
  418c2c:	pop    edx
  418c2d:	adc    ch,BYTE PTR [ebx]
  418c2f:	adc    al,0x30
  418c31:	pushf  
  418c32:	cwde   
  418c33:	mov    ?,esi
  418c35:	cdq    
  418c36:	int3   
  418c37:	xchg   ecx,eax
  418c38:	xor    DWORD PTR [ebx-0x4551a56f],edx
  418c3e:	push   ds
  418c3f:	int    0xa
  418c41:	mov    BYTE PTR [eax],al
  418c43:	in     al,0xdf
  418c45:	into   
  418c46:	jmp    FWORD PTR [eax+0x7165ba89]
  418c4c:	sbb    ecx,esp
  418c4e:	aad    0x35
  418c50:	ret    
  418c51:	std    
  418c52:	cld    
  418c53:	xor    DWORD PTR [eax+0x4],0xffffffc1
  418c57:	cmp    eax,DWORD PTR [eax+0x362b1712]
  418c5d:	or     DWORD PTR [edx+0x438945cd],esp
  418c63:	xlat   BYTE PTR ds:[ebx]
  418c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c66:	into   
  418c67:	cmp    eax,0x19fdba2b
  418c6c:	xlat   BYTE PTR es:[ebx]
  418c6e:	nop
  418c6f:	mov    eax,ds:0xeed30b43
  418c74:	dec    ebp
  418c75:	loope  0x418c9f
  418c77:	imul   esi,ebp,0xfffffffd
  418c7a:	and    bh,BYTE PTR [edx+0x41]
  418c7d:	pusha  
  418c7e:	pusha  
  418c7f:	or     BYTE PTR [ebp-0x48],dh
  418c82:	pop    eax
  418c83:	outs   dx,DWORD PTR ds:[esi]
  418c84:	push   ebp
  418c85:	mov    esi,0x82c346e4
  418c8a:	mov    ebx,DWORD PTR [ebp+0x625e9ce9]
  418c90:	jo     0x418c36
  418c92:	ret    0x6336
  418c95:	addr16 addr16 in al,dx
  418c98:	dec    edx
  418c99:	popf   
  418c9a:	lahf   
  418c9b:	adc    al,0xe3
  418c9d:	out    dx,al
  418c9e:	dec    esp
  418c9f:	dec    ebp
  418ca0:	data16 outs dx,BYTE PTR ds:[esi]
  418ca2:	fidivr WORD PTR [ebp+0x66a5e0fa]
  418ca8:	(bad)
  418cab:	push   ss
  418cac:	add    eax,0xf329c0c9
  418cb1:	xchg   ebp,eax
  418cb2:	dec    esp
  418cb3:	cs lock sti 
  418cb6:	repz mov ah,0xd2
  418cb9:	inc    ecx
  418cba:	stos   DWORD PTR es:[edi],eax
  418cbb:	mov    al,ds:0x2eb2ca49
  418cc0:	push   ecx
  418cc1:	in     al,0xd9
  418cc3:	mov    DWORD PTR [ebx],eax
  418cc5:	jmp    0xf4e6:0xfe32f76
  418ccc:	in     al,dx
  418ccd:	mov    esp,0xcd70db9
  418cd2:	jmp    0x418c88
  418cd4:	and    ebx,eax
  418cd6:	test   DWORD PTR [ebx],ebx
  418cd8:	jo     0x418cba
  418cda:	mov    ebp,0x358e8337
  418cdf:	mov    DWORD PTR es:[edi],ebp
  418ce2:	out    dx,al
  418ce3:	add    eax,0x5d374de
  418ce8:	sbb    BYTE PTR [edi],dl
  418cea:	pop    ecx
  418ceb:	jmp    0xd024:0xf9f5fc16
  418cf2:	sbb    DWORD PTR [esi-0xc],ecx
  418cf5:	cmp    cl,ah
  418cf7:	pushf  
  418cf8:	sub    eax,0x262b810d
  418cfd:	add    esi,DWORD PTR ss:[ecx-0x44]
  418d01:	call   0x6f165321
  418d06:	ret    0x8352
  418d09:	inc    esp
  418d0a:	shl    dl,cl
  418d0c:	cmp    esi,DWORD PTR [ecx-0x6]
  418d0f:	int3   
  418d10:	push   eax
  418d11:	loopne 0x418d5c
  418d13:	out    dx,al
  418d14:	jp     0x418d34
  418d16:	dec    esi
  418d17:	xchg   ebx,eax
  418d18:	add    bl,bl
  418d1a:	hlt    
  418d1b:	or     cl,cl
  418d1d:	fsubr  DWORD PTR [edi+0x3d]
  418d20:	xchg   DWORD PTR [ecx-0x5fc8a17e],edi
  418d26:	mov    BYTE PTR [ebx+ebp*4+0x31],bl
  418d2a:	out    dx,al
  418d2b:	gs das 
  418d2d:	retf   0x1456
  418d30:	jne    0x418cd9
  418d32:	sub    ebp,DWORD PTR [edx-0x2448d134]
  418d38:	jg     0x418d8d
  418d3a:	in     eax,0xe6
  418d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3d:	stos   DWORD PTR es:[edi],eax
  418d3e:	jb     0x418d88
  418d40:	test   al,0x41
  418d42:	mov    bl,0x7e
  418d44:	xlat   BYTE PTR ds:[ebx]
  418d45:	imul   ebp,DWORD PTR cs:[eax-0xe],0x258147af
  418d4d:	mov    bl,0x3f
  418d4f:	ret    0x8d71
  418d52:	repz sbb dl,dl
  418d55:	shr    DWORD PTR [ebp-0x4e2da864],cl
  418d5b:	add    edx,DWORD PTR [edi+ebp*2+0x74]
  418d5f:	test   al,0x45
  418d61:	hlt    
  418d62:	pop    es
  418d63:	in     eax,dx
  418d64:	sbb    DWORD PTR [edx],0x8aac0a5
  418d6a:	xchg   edx,eax
  418d6b:	cli    
  418d6c:	rcr    eax,0x19
  418d6f:	je     0x418cf4
  418d71:	xor    bl,bl
  418d73:	mov    ecx,DWORD PTR ds:0xaca72cd2
  418d79:	xchg   esp,eax
  418d7a:	add    edi,DWORD PTR [ebp-0x5d30bb58]
  418d80:	shr    DWORD PTR [eax-0xc],0xee
  418d84:	xor    cl,dl
  418d86:	dec    esp
  418d87:	fist   DWORD PTR [ecx+edx*1+0x54f80e21]
  418d8e:	icebp  
  418d8f:	dec    eax
  418d90:	mov    dh,0x1c
  418d92:	jns    0x418db9
  418d94:	push   ebx
  418d95:	js     0xc854a408
  418d9b:	mov    dh,0x5d
  418d9d:	pop    ebx
  418d9e:	fst    DWORD PTR [ebp+0x51]
  418da1:	addr16 jl 0x418d59
  418da4:	fnstcw WORD PTR [eax]
  418da6:	sbb    DWORD PTR [esi+0x7a467c96],esp
  418dac:	ret    
  418dad:	(bad)  
  418dae:	pop    eax
  418daf:	and    cl,BYTE PTR [edx+0x606840d]
  418db5:	(bad)  
  418db6:	dec    edi
  418db7:	ins    DWORD PTR es:[edi],dx
  418db8:	xor    BYTE PTR [edi-0x58377e62],al
  418dbe:	cmp    al,0xa2
  418dc0:	(bad)  
  418dc1:	lds    edi,FWORD PTR [ecx-0x4487a2e8]
  418dc7:	mov    esi,0x444d2c93
  418dcc:	jp     0x418e24
  418dce:	mov    bl,0xda
  418dd0:	fs cli 
  418dd2:	pop    es
  418dd3:	fld    QWORD PTR [edx+0x5feaafcb]
  418dd9:	and    DWORD PTR [eax+ebx*2],edi
  418ddc:	cwde   
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0xcab32833
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    BYTE PTR [ebx-0xf],dh
  418dfc:	jns    0x418e78
  418dfe:	fwait
  418dff:	pop    eax
  418e00:	and    al,0xa0
  418e02:	cmp    BYTE PTR [esi],dl
  418e04:	pop    esi
  418e05:	in     eax,0x48
  418e07:	inc    ebp
  418e08:	lds    ebp,FWORD PTR [ebp-0x67]
  418e0b:	cdq    
  418e0c:	outs   dx,BYTE PTR ds:[esi]
  418e0d:	push   0xf06c51b1
  418e12:	cmp    ebx,DWORD PTR [esi]
  418e14:	lods   eax,DWORD PTR ds:[esi]
  418e15:	xchg   esi,eax
  418e16:	and    DWORD PTR [esp+edx*4-0x1f],ebp
  418e1a:	rcr    bh,1
  418e1c:	xchg   DWORD PTR [ebp+0x49],edi
  418e1f:	jmp    0x6ab9:0xb0d6e019
  418e26:	jmp    0xb042:0x398f0fc2
  418e2d:	test   DWORD PTR [ecx-0x20298288],ebp
  418e33:	jl     0x418e72
  418e35:	add    eax,0x820618f5
  418e3a:	cli    
  418e3b:	or     edx,edx
  418e3d:	gs rol dl,0x46
  418e41:	pop    ds
  418e42:	cmovo  ecx,edi
  418e45:	sbb    eax,0xcd7bba24
  418e4a:	pop    ecx
  418e4b:	adc    eax,0x3bb9fbea
  418e50:	inc    esp
  418e51:	sbb    al,0x4a
  418e53:	jbe    0x418de2
  418e55:	push   esi
  418e56:	mov    ch,0x73
  418e58:	iret   
  418e59:	cmp    dl,cl
  418e5b:	push   es
  418e5c:	xor    eax,0x47cddf37
  418e61:	(bad)  
  418e62:	aaa    
  418e63:	pop    ebx
  418e64:	xchg   esp,eax
  418e65:	add    BYTE PTR [ebx-0x21],0xca
  418e69:	sbb    DWORD PTR [esi+0x1d3f4a6f],esi
  418e6f:	cwde   
  418e70:	cli    
  418e71:	out    dx,eax
  418e72:	bound  edi,QWORD PTR [esi-0x445317f9]
  418e78:	das    
  418e79:	sti    
  418e7a:	imul   eax,ebx,0xffffffca
  418e7d:	stos   BYTE PTR es:[edi],al
  418e7e:	les    ecx,FWORD PTR ds:0x489075ba
  418e84:	mov    al,0xbf
  418e86:	xchg   ebp,eax
  418e87:	and    eax,0x66cb5586
  418e8c:	jge    0x418e3c
  418e8e:	hlt    
  418e8f:	add    al,0xe8
  418e91:	inc    ebp
  418e92:	call   0xcd3267d4
  418e97:	leave  
  418e98:	cmp    eax,0xa3b47a29
  418e9d:	dec    ecx
  418e9e:	and    eax,0xd32affaf
  418ea3:	popf   
  418ea4:	jg     0x418eac
  418ea6:	popf   
  418ea7:	sahf   
  418ea8:	xchg   esp,eax
  418ea9:	sub    eax,0xb7835e09
  418eae:	mov    ds:0x8b44c115,al
  418eb3:	fsubr  DWORD PTR [edi-0x79]
  418eb6:	adc    eax,0xaec25b
  418ebb:	and    esp,DWORD PTR [esp+ebp*2]
  418ebe:	push   edx
  418ebf:	jne    0x418e4f
  418ec1:	mov    dl,0xa3
  418ec3:	pop    ecx
  418ec4:	test   al,0x3c
  418ec6:	mov    BYTE PTR [edi+0x22],bl
  418ec9:	cmp    al,0x79
  418ecb:	stc    
  418ecc:	fmul   DWORD PTR [esi]
  418ece:	ret    0x84f9
  418ed1:	gs mov ecx,0x6398a60d
  418ed7:	dec    ebx
  418ed8:	xor    bh,BYTE PTR [ebx+0x5d]
  418edb:	jge    0x418f4d
  418edd:	pop    ds
  418ede:	das    
  418edf:	jno    0x418f18
  418ee1:	stc    
  418ee2:	jo     0x418ee1
  418ee4:	xor    ebx,DWORD PTR cs:[ecx-0x7c]
  418ee8:	pusha  
  418ee9:	sbb    BYTE PTR [edx],al
  418eeb:	pusha  
  418eec:	cmp    ch,al
  418eee:	mov    esp,0x8e51cf11
  418ef3:	aas    
  418ef4:	cmc    
  418ef5:	ins    BYTE PTR es:[edi],dx
  418ef6:	adc    DWORD PTR [eax-0x5c],0x30c8acc0
  418efd:	test   eax,0x51af3993
  418f02:	(bad)  [edi-0x3]
  418f05:	jns    0x418ee7
  418f07:	popa   
  418f08:	and    DWORD PTR [edx-0x15c6daa1],esp
  418f0e:	stc    
  418f0f:	cdq    
  418f10:	imul   edi,DWORD PTR [edx],0xda01298
  418f16:	pop    es
  418f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f18:	lods   al,BYTE PTR ds:[esi]
  418f19:	sbb    ecx,ebx
  418f1b:	mov    ch,0xcc
  418f1d:	mov    bh,BYTE PTR [edi]
  418f1f:	push   esi
  418f20:	ins    BYTE PTR es:[edi],dx
  418f21:	push   edi
  418f22:	fcmovnb st,st(3)
  418f24:	(bad)  
  418f26:	imul   edx,DWORD PTR [ebx+0x9f94f82],0x74
  418f2d:	cmp    esp,esp
  418f2f:	fs jbe 0x418eba
  418f32:	xchg   DWORD PTR [edx-0x3e],ebp
  418f35:	cmp    eax,0xe34ce0b4
  418f3a:	xchg   esi,eax
  418f3b:	jg     0x418f18
  418f3d:	mov    ecx,0xfbb084b3
  418f42:	sub    cl,BYTE PTR [ecx]
  418f44:	push   0x3305149e
  418f49:	mov    ds:0x2cfe67f8,eax
  418f4e:	mov    al,0x20
  418f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f51:	pop    ss
  418f52:	icebp  
  418f53:	jecxz  0x418fba
  418f55:	test   al,0x74
  418f57:	dec    ecx
  418f58:	lods   al,BYTE PTR ds:[esi]
  418f59:	and    BYTE PTR [ebp-0x311a2d6c],cl
  418f5f:	push   ecx
  418f60:	pop    ebx
  418f61:	inc    edi
  418f62:	dec    ebx
  418f63:	push   esp
  418f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f65:	adc    al,0x4e
  418f67:	xchg   esi,eax
  418f68:	jg     0x418f57
  418f6a:	shl    BYTE PTR [edx-0x2c],0x90
  418f6e:	inc    ecx
  418f6f:	ss popa 
  418f71:	jno    0x418f49
  418f73:	mov    esp,0x666b5c83
  418f78:	(bad)  
  418f79:	retf   
  418f7a:	or     DWORD PTR [ecx],esi
  418f7c:	ss scas al,BYTE PTR es:[edi]
  418f7e:	repnz adc al,0x6d
  418f81:	or     BYTE PTR [ecx],ah
  418f83:	push   es
  418f84:	fdivr  DWORD PTR [ebx+0x71777730]
  418f8a:	cli    
  418f8b:	inc    ebp
  418f8c:	std    
  418f8d:	stos   BYTE PTR es:[edi],al
  418f8e:	cmp    al,0x6b
  418f90:	pop    ss
  418f91:	mov    dh,0xde
  418f93:	ins    BYTE PTR es:[edi],dx
  418f94:	add    ch,dh
  418f96:	xchg   esi,eax
  418f97:	call   0xb383:0x4d4e599c
  418f9e:	je     0x418f64
  418fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa1:	jno    0x418f62
  418fa3:	fldl2e 
  418fa5:	push   0x31
  418fa7:	xchg   edx,eax
  418fa8:	jo     0x418ffa
  418faa:	mov    ebx,ds
  418fac:	fldenv [ecx+0x3aaaf76]
  418fb2:	xchg   esi,eax
  418fb3:	push   0xaa9142f8
  418fb8:	adc    BYTE PTR [eax-0x40],al
  418fbb:	adc    ah,BYTE PTR [edi+edx*1]
  418fbe:	stos   DWORD PTR es:[edi],eax
  418fbf:	test   eax,0x8f684d5b
  418fc4:	pop    esi
  418fc5:	mov    BYTE PTR [eax-0x3f],bh
  418fc8:	inc    ebp
  418fc9:	add    al,0xe2
  418fcb:	das    
  418fcc:	sub    eax,0xa71e2da1
  418fd1:	add    al,0x1b
  418fd3:	jge    0x418f81
  418fd5:	bound  esp,QWORD PTR [ecx-0x5e]
  418fd8:	int3   
  418fd9:	sub    esp,DWORD PTR [edx+0x572e089e]
  418fdf:	and    BYTE PTR [ebx+0x7],ah
  418fe2:	pushf  
  418fe3:	fstp   QWORD PTR [ebx]
  418fe5:	lahf   
  418fe6:	shl    DWORD PTR [ebx],0x37
  418fe9:	mov    dh,0x2
  418feb:	jnp    0x41902b
  418fed:	sub    BYTE PTR [eax+0x71],dh
  418ff0:	out    dx,eax
  418ff1:	mov    esi,0x356af72a
  418ff6:	fwait
  418ff7:	xor    ebp,DWORD PTR [edi+0x39e72659]
  418ffd:	nop
  418ffe:	sub    DWORD PTR [eax+0x646abd41],esp
  419004:	pop    ecx
  419005:	mov    al,0x77
  419007:	xor    dh,BYTE PTR [edx+0x5983d662]
  41900d:	mov    al,0x14
  41900f:	test   eax,0x23e8094e
  419014:	xchg   esi,eax
  419015:	sbb    ch,BYTE PTR [esi]
  419017:	sub    edi,DWORD PTR ds:0xb6a24038
  41901d:	rcr    DWORD PTR [ecx+0x7344cbf7],1
  419023:	dec    esp
  419024:	lods   eax,DWORD PTR ds:[esi]
  419025:	sub    ebx,DWORD PTR [ebx]
  419027:	mov    esi,0x88391668
  41902c:	lea    ecx,[edi+eax*1]
  41902f:	icebp  
  419030:	cmp    al,0xcc
  419032:	data16 fistp WORD PTR [ebx]
  419035:	ins    DWORD PTR es:[edi],dx
  419036:	ins    DWORD PTR es:[edi],dx
  419037:	mov    ah,0xd3
  419039:	out    dx,al
  41903a:	jns    0x419016
  41903c:	xchg   ebx,eax
  41903d:	xchg   ebp,eax
  41903e:	ret    
  41903f:	rcl    BYTE PTR ss:[esi+esi*8-0x2],0x26
  419045:	lahf   
  419046:	test   ebx,0xbddff12b
  41904c:	xchg   edx,eax
  41904d:	sbb    ecx,edi
  41904f:	rcr    DWORD PTR [bp+si-0x7f],0xeb
  419054:	lds    ecx,FWORD PTR [edi-0x19bf629a]
  41905a:	push   ss
  41905b:	inc    ebp
  41905c:	clc    
  41905d:	adc    BYTE PTR [ecx+0x2d],bl
  419060:	sbb    eax,0x9e1dbf9d
  419065:	enter  0x3ce8,0xbd
  419069:	or     al,0x9a
  41906b:	adc    ch,dl
  41906d:	iret   
  41906e:	sbb    esp,esp
  419070:	push   ecx
  419071:	add    edi,edx
  419073:	jae    0x4190a7
  419075:	mov    edx,ecx
  419077:	xor    edi,DWORD PTR [edx+0x74]
  41907a:	inc    esi
  41907b:	push   ecx
  41907c:	pop    ebx
  41907d:	xor    al,0x5f
  41907f:	mov    ecx,0xd7a04fef
  419084:	jne    0x41909f
  419086:	jmp    0x4190c8
  419088:	add    BYTE PTR [ebx+0x6],cl
  41908b:	mov    esi,0xdf53688c
  419090:	adc    ebx,esp
  419092:	xor    eax,DWORD PTR [eax]
  419094:	fisub  DWORD PTR [edi-0x17]
  419097:	mov    ah,0x3b
  419099:	push   ebp
  41909a:	repz hlt 
  41909c:	dec    esp
  41909d:	imul   edx,DWORD PTR [eax-0x6eea0dd9],0xeb1fb6d4
  4190a7:	data16 hlt 
  4190a9:	xchg   edi,eax
  4190aa:	addr16 mov esp,0x8f040ee2
  4190b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b1:	mov    eax,0xec0aaa35
  4190b6:	xchg   BYTE PTR ds:0x3f1d820a,ah
  4190bc:	sbb    al,0x0
  4190be:	ins    BYTE PTR es:[edi],dx
  4190bf:	popa   
  4190c0:	adc    BYTE PTR [ebx-0x4df00f60],cl
  4190c6:	jnp    0x4190d7
  4190c8:	xchg   BYTE PTR [eax-0x147b5644],bl
  4190ce:	out    0x5d,al
  4190d0:	jo     0x41913f
  4190d2:	imul   esi,DWORD PTR [edi],0xffffffc9
  4190d5:	adc    BYTE PTR [ecx],dl
  4190d7:	push   es
  4190d8:	inc    eax
  4190d9:	fmulp  st(1),st
  4190db:	mov    edi,0x265eb37f
  4190e0:	adc    DWORD PTR [eax+0x1e],edx
  4190e3:	sbb    ebx,edx
  4190e5:	out    dx,al
  4190e6:	sub    BYTE PTR [edx+0x508dae80],bh
  4190ec:	retf   
  4190ed:	lock rcr DWORD PTR [edi+0x78],1
  4190f1:	pop    ebp
  4190f2:	and    DWORD PTR [esi],edx
  4190f4:	mov    cs,WORD PTR [edx]
  4190f6:	cld    
  4190f7:	out    0x92,eax
  4190f9:	mov    WORD PTR ds:0x3eea97,ss
  4190ff:	jecxz  0x4190e1
  419101:	ja     0x4190ee
  419103:	cli    
  419104:	dec    esp
  419105:	aas    
  419106:	retf   0xfe06
  419109:	dec    ebp
  41910a:	ins    DWORD PTR es:[edi],dx
  41910b:	pop    ebp
  41910c:	mov    eax,ds:0x9efcae38
  419111:	sbb    dl,ch
  419113:	jmp    0x60c7b22b
  419118:	repnz cmp al,0xf4
  41911b:	ins    BYTE PTR es:[edi],dx
  41911c:	leave  
  41911d:	out    dx,eax
  41911e:	jp     0x419109
  419120:	(bad)  
  419121:	outs   dx,BYTE PTR ds:[esi]
  419122:	cmp    eax,0xfc3c2271
  419127:	in     eax,0x16
  419129:	mov    dh,0x99
  41912b:	scas   al,BYTE PTR es:[edi]
  41912c:	mov    ah,0x7
  41912e:	push   ss
  41912f:	imul   edx,edx,0x46
  419132:	icebp  
  419133:	(bad)
  419137:	pop    esp
  419138:	ss jnp 0x419131
  41913b:	fadd   QWORD PTR [ecx+0x107aa65d]
  419141:	xchg   esi,eax
  419142:	push   0x1fba87b3
  419147:	inc    esp
  419148:	stos   BYTE PTR es:[edi],al
  419149:	fcom   QWORD PTR [edi]
  41914b:	sub    BYTE PTR [edx],0xc7
  41914e:	pop    ecx
  41914f:	adc    edx,DWORD PTR [eax+esi*8+0x9]
  419153:	or     bh,bh
  419155:	bound  edi,QWORD PTR [edx-0x44452175]
  41915b:	cwde   
  41915c:	call   0x3840:0xed127875
  419163:	adc    eax,DWORD PTR [edi+0x4e32b4f7]
  419169:	fnstsw WORD PTR [edx+0xf112fbe]
  41916f:	mov    eax,0x33735c3d
  419174:	xchg   edx,eax
  419175:	xchg   edi,eax
  419176:	aad    0x70
  419178:	loop   0x4191c8
  41917a:	stc    
  41917b:	imul   ebp
  41917d:	add    al,0xa6
  41917f:	sbb    al,0x21
  419181:	inc    ebx
  419182:	mov    ch,0xc9
  419184:	xor    DWORD PTR [edi],eax
  419186:	sahf   
  419187:	mov    ah,0x56
  419189:	add    BYTE PTR ds:0x9bb00b61,dl
  41918f:	jbe    0x4191e6
  419191:	xor    DWORD PTR [edi*4+0x69328e8],ebp
  419198:	shl    ebp,0x69
  41919b:	add    DWORD PTR [ebx+0x21e11a2a],edi
  4191a1:	xchg   edx,eax
  4191a2:	repz out dx,eax
  4191a4:	int3   
  4191a5:	sub    esp,DWORD PTR [ecx]
  4191a7:	jle    0x4191a3
  4191a9:	mov    ecx,0x6cfc7685
  4191ae:	mov    edi,0x7042eb05
  4191b3:	push   edi
  4191b4:	mov    ebx,0xcaba349f
  4191b9:	in     eax,dx
  4191ba:	cmp    DWORD PTR [esi+0x30],0xf
  4191be:	adc    al,0x9f
  4191c0:	sbb    BYTE PTR [ebx+0x22e18ac5],0x61
  4191c7:	and    eax,0x221b06a9
  4191cc:	dec    esp
  4191cd:	jne    0x4191fe
  4191cf:	mov    BYTE PTR [edi+0x40521131],ah
  4191d5:	out    dx,al
  4191d6:	add    al,0x7
  4191d8:	je     0x419160
  4191da:	xor    al,ch
  4191dc:	dec    DWORD PTR [esi+0x6773de56]
  4191e2:	daa    
  4191e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191e4:	xchg   ebp,eax
  4191e5:	(bad)  
  4191e6:	stos   DWORD PTR es:[edi],eax
  4191e7:	paddsb mm1,QWORD PTR [ebp-0x65]
  4191eb:	mov    eax,ds:0x34bcd8b9
  4191f0:	xchg   ecx,eax
  4191f1:	dec    ecx
  4191f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f3:	mov    ebp,esi
  4191f5:	xchg   esi,eax
  4191f6:	ret    
  4191f7:	add    al,0xea
  4191f9:	out    0x84,eax
  4191fb:	outs   dx,BYTE PTR ds:[esi]
  4191fc:	and    bh,BYTE PTR [esp+ecx*2-0x25]
  419200:	inc    esp
  419201:	mov    eax,ds:0xf229dab5
  419206:	sar    DWORD PTR [edi-0x79788ae6],1
  41920c:	rol    DWORD PTR [esi-0x6e],1
  41920f:	xchg   ecx,eax
  419210:	add    dh,BYTE PTR [eax-0x76444dee]
  419216:	shr    BYTE PTR [ebx],cl
  419218:	je     0x419227
  41921a:	jl     0x419250
  41921c:	cmp    al,0x51
  41921e:	xchg   ebx,eax
  41921f:	(bad)  
  419220:	sbb    DWORD PTR gs:[edi-0x14],edi
  419224:	push   es
  419225:	addr16 push esp
  419227:	jae    0x41921c
  419229:	inc    esi
  41922a:	cld    
  41922b:	dec    edx
  41922c:	jecxz  0x41921d
  41922e:	clc    
  41922f:	mov    esi,0xe7b6d
  419234:	dec    ebx
  419235:	jmp    0xeed9b8db
  41923a:	pop    ds
  41923b:	or     ch,BYTE PTR [ecx+0x60]
  41923e:	pop    ds
  41923f:	nop
  419240:	adc    DWORD PTR [eax+0x5c],esi
  419243:	cwde   
  419244:	and    cl,cl
  419246:	or     dh,BYTE PTR ds:0x2c5aab0b
  41924c:	enter  0x8609,0x92
  419250:	or     BYTE PTR [ecx+ecx*4],0xc5
  419254:	xchg   edx,eax
  419255:	iret   
  419256:	ret    
  419257:	js     0x4192c1
  419259:	ins    DWORD PTR es:[edi],dx
  41925a:	jno    0x419228
  41925c:	xor    BYTE PTR [eax-0x10d82fed],ah
  419262:	push   cs
  419263:	add    DWORD PTR [esi-0x4e42e7ba],ebx
  419269:	jno    0x41923a
  41926b:	cmp    al,0xe9
  41926d:	in     eax,0x77
  41926f:	xchg   esi,eax
  419270:	dec    ecx
  419271:	mov    DWORD PTR [eax-0xb],ebx
  419274:	xlat   BYTE PTR ds:[ebx]
  419275:	addr16 ss or dl,al
  419279:	mov    bl,0x1b
  41927b:	add    bl,al
  41927d:	cmp    edx,DWORD PTR [eax]
  41927f:	test   DWORD PTR [ecx-0x58],edx
  419282:	mov    al,0xc9
  419284:	(bad)  
  419285:	stos   BYTE PTR es:[edi],al
  419286:	jmp    0xa6776e73
  41928b:	ins    DWORD PTR es:[edi],dx
  41928c:	inc    edi
  41928d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41928e:	adc    eax,0x2734372c
  419293:	push   eax
  419294:	loopne 0x4192e5
  419296:	push   ss
  419297:	jmp    0x41928a
  419299:	mov    eax,0xd9919336
  41929e:	sub    ebp,esi
  4192a0:	repnz adc BYTE PTR [esi],al
  4192a3:	arpl   bx,bp
  4192a5:	rcl    ecx,1
  4192a7:	sar    DWORD PTR [ecx-0x31],cl
  4192aa:	or     DWORD PTR [esi+0x2],edx
  4192ad:	pop    esp
  4192ae:	pop    edi
  4192af:	mov    bh,BYTE PTR [esi]
  4192b1:	and    esp,DWORD PTR [esi+0x5d3d8838]
  4192b7:	jb     0x41927e
  4192b9:	les    edx,FWORD PTR [eax+0x72796bf9]
  4192bf:	mov    ch,0x2c
  4192c1:	jp     0x4192be
  4192c3:	adc    eax,0xe560948b
  4192c8:	jb     0x419262
  4192ca:	xchg   edx,eax
  4192cb:	imul   edx,DWORD PTR [eax+esi*1+0x79099949],0x1d
  4192d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d5:	mov    edx,0x96234e09
  4192da:	inc    ecx
  4192db:	(bad)  
  4192dc:	cli    
  4192dd:	dec    eax
  4192de:	inc    ebp
  4192df:	add    edx,0x241d45b2
  4192e5:	out    0xfa,eax
  4192e7:	xchg   edi,eax
  4192e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192e9:	sub    al,0x87
  4192eb:	sub    esi,DWORD PTR [edx+0x0]
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x3d1e5d81
  419300:	dec    esi
  419301:	das    
  419302:	fisttp QWORD PTR [edi]
  419304:	add    DWORD PTR [eax],eax
  419306:	repz add al,0x0
  419309:	add    BYTE PTR [esi+0x72],bl
  41930c:	or     eax,0x12472d68
  419311:	jecxz  0x41932e
  419313:	mov    DWORD PTR [eax-0x7781d88e],ecx
  419319:	inc    ebp
  41931a:	(bad)  
  41931b:	and    edx,DWORD PTR [edi+0x145eaafe]
  419321:	aad    0xd7
  419323:	xchg   edi,eax
  419324:	out    dx,al
  419325:	adc    al,0x1
  419327:	sahf   
  419328:	aaa    
  419329:	adc    al,0x4b
  41932b:	scas   al,BYTE PTR es:[edi]
  41932c:	in     al,0x55
  41932e:	ins    BYTE PTR es:[edi],dx
  41932f:	pop    ebx
  419330:	xor    BYTE PTR [eax+0x65],dh
  419333:	lods   al,BYTE PTR ds:[esi]
  419334:	xchg   edi,eax
  419335:	cdq    
  419336:	(bad)  [eax]
  419338:	cmp    BYTE PTR ds:0x3e110387,cl
  41933e:	jg     0x419360
  419340:	adc    al,0xe7
  419342:	imul   edx,esp,0x18
  419345:	add    al,0xe2
  419347:	gs or  eax,0x2c71850c
  41934d:	push   ds
  41934e:	jns    0x41938b
  419350:	jmp    0x3e16d42a
  419355:	or     ecx,ebp
  419357:	es popw es
  41935a:	mov    cl,0x5
  41935c:	pop    esp
  41935d:	push   ecx
  41935e:	into   
  41935f:	mov    al,ds:0x31f4056b
  419364:	sub    esi,DWORD PTR [edx]
  419366:	mov    cl,bl
  419368:	(bad)  
  419369:	retf   0xafdb
  41936c:	push   0xffffffd9
  41936e:	and    DWORD PTR [di+0x3139],edi
  419373:	es mov dh,0xa8
  419376:	mov    al,ds:0xe8e96da2
  41937b:	cdq    
  41937c:	mov    ds:0x41681744,al
  419381:	out    0xd4,eax
  419383:	push   DWORD PTR [edx]
  419385:	gs cdq 
  419387:	mov    esp,0x86dd86b9
  41938c:	int    0xf1
  41938e:	out    0xe,eax
  419390:	xor    esp,DWORD PTR [ecx+0x63]
  419393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419394:	fadd   st(5),st
  419396:	(bad)  
  419397:	mov    edx,0xc8d4bdf0
  41939c:	pop    esi
  41939d:	xchg   ebp,eax
  41939e:	inc    esp
  41939f:	jecxz  0x4193b3
  4193a1:	aad    0x1f
  4193a3:	loopne 0x4193d1
  4193a5:	mov    al,ds:0x2603c069
  4193aa:	sub    DWORD PTR [ecx-0x14],edx
  4193ad:	ret    0x8b
  4193b0:	jbe    0x4193cc
  4193b2:	push   cs
  4193b3:	daa    
  4193b4:	and    al,0xf6
  4193b6:	ret    
  4193b7:	scas   eax,DWORD PTR es:[edi]
  4193b8:	(bad)  
  4193b9:	aam    0xb6
  4193bb:	fwait
  4193bc:	or     eax,0x2e2f5b14
  4193c1:	in     al,0x4
  4193c3:	adc    BYTE PTR [ebp+ebp*8+0x6c],cl
  4193c7:	pop    ecx
  4193c8:	mov    ebx,fs
  4193ca:	retf   
  4193cb:	outs   dx,BYTE PTR ds:[esi]
  4193cc:	fild   WORD PTR [eax+0x28]
  4193cf:	adc    DWORD PTR [ebp+0x1ccb4a6a],ebp
  4193d5:	ret    0xd75e
  4193d8:	ret    0x497d
  4193db:	test   BYTE PTR [esi-0x7b15c835],0xf
  4193e2:	push   ecx
  4193e3:	adc    esi,DWORD PTR [esi+0x18]
  4193e6:	jmp    0x6eb29fd0
  4193eb:	add    bh,BYTE PTR [edi]
  4193ed:	jae    0x41942f
  4193ef:	add    ebp,ebp
  4193f1:	mov    dl,0xb6
  4193f3:	enter  0x33fa,0xbc
  4193f7:	popa   
  4193f8:	inc    ebp
  4193f9:	mov    ds:0xeb1e48d8,al
  4193fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ff:	push   edi
  419400:	(bad)  
  419401:	fidiv  DWORD PTR [edi+0x78ad3b51]
  419407:	cmp    edx,DWORD PTR [eax]
  419409:	shl    BYTE PTR [esp+eiz*4+0x64],1
  41940d:	test   BYTE PTR [edx-0x28],bh
  419410:	jp     0x4193f7
  419412:	adc    DWORD PTR [ecx+edx*4+0x61],esi
  419416:	dec    esp
  419417:	mov    ebp,0x35312cd0
  41941c:	or     al,0xee
  41941e:	sbb    al,0xc4
  419420:	or     al,0xa
  419422:	ret    
  419423:	cmp    eax,0xba197a03
  419428:	and    DWORD PTR [ecx],eax
  41942a:	sub    edi,ebp
  41942c:	cld    
  41942d:	imul   ecx,edi,0x3ff6be74
  419433:	adc    esi,DWORD PTR [ecx]
  419435:	or     esp,edx
  419437:	push   esi
  419438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419439:	mov    dl,0x42
  41943b:	mov    WORD PTR [eax],ss
  41943d:	jae    0x419439
  41943f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419440:	repnz and ebx,ebx
  419443:	xchg   ebp,eax
  419444:	sbb    edi,edx
  419446:	or     DWORD PTR [ebx+0x50],ecx
  419449:	push   cs
  41944a:	in     al,dx
  41944b:	lods   al,BYTE PTR ds:[esi]
  41944c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944d:	les    edi,FWORD PTR [edi-0x5b]
  419450:	and    DWORD PTR [ecx-0x59420244],ebp
  419456:	pop    ds
  419457:	fisubr WORD PTR [edi]
  419459:	out    0x91,eax
  41945b:	jb     0x4194dc
  41945d:	in     al,dx
  41945e:	jnp    0x41947f
  419460:	or     DWORD PTR [eax+eax*8+0x14320fee],ebp
  419467:	mov    esp,0x7e711580
  41946c:	sub    esp,ebp
  41946e:	(bad)  [esi]
  419470:	xor    esi,DWORD PTR [edx]
  419472:	and    esi,eax
  419474:	jne    0x419438
  419476:	pop    ecx
  419477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419478:	fidiv  DWORD PTR [edx+0x2d7957d5]
  41947e:	mov    edi,0x176ea1e
  419483:	enter  0xd9c6,0x91
  419487:	xchg   edx,eax
  419488:	sub    dl,BYTE PTR ds:0xb6f6e2e7
  41948e:	in     al,0x2c
  419490:	mov    ch,0x8e
  419492:	pop    edx
  419493:	dec    edx
  419494:	cdq    
  419495:	arpl   WORD PTR [ecx-0x53],di
  419498:	pop    ebp
  419499:	mov    cl,BYTE PTR [ebx]
  41949b:	out    dx,eax
  41949c:	cmp    DWORD PTR [ebx+edi*1],edx
  41949f:	sub    esi,edx
  4194a1:	sub    ecx,ebp
  4194a3:	outs   dx,BYTE PTR ds:[esi]
  4194a4:	in     al,dx
  4194a5:	add    ebx,DWORD PTR [esi]
  4194a7:	mov    esi,0xbb60657f
  4194ac:	jo     0x4194d7
  4194ae:	cmp    BYTE PTR es:[edi],0x54
  4194b2:	cmp    BYTE PTR [ebx+0x43],0xd1
  4194b6:	xchg   esi,eax
  4194b7:	daa    
  4194b8:	in     eax,dx
  4194b9:	call   FWORD PTR ds:0x1fc035dd
  4194bf:	scas   al,BYTE PTR es:[edi]
  4194c0:	data16 sub al,0x54
  4194c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c4:	xor    ebx,DWORD PTR [ebp-0xb6188a8]
  4194ca:	jns    0x4194ef
  4194cc:	xchg   ecx,eax
  4194cd:	push   ss
  4194ce:	jmp    0xa8da:0x47cd4b59
  4194d5:	jbe    0x41945d
  4194d7:	add    cl,dl
  4194d9:	push   esi
  4194da:	cmp    eax,0x40b86dd5
  4194df:	xchg   cl,ch
  4194e1:	cwde   
  4194e2:	push   esi
  4194e3:	xchg   edi,eax
  4194e4:	xchg   ecx,eax
  4194e5:	outs   dx,DWORD PTR ds:[esi]
  4194e6:	mov    dh,0x38
  4194e8:	dec    esi
  4194e9:	imul   edx,DWORD PTR [esi+0x355685df],0x7d8b4fae
  4194f3:	out    dx,al
  4194f4:	dec    edx
  4194f6:	or     eax,0x6a16b6ce
  4194fb:	mov    ah,al
  4194fd:	add    DWORD PTR [ecx],0x238bcbba
  419503:	mov    al,ds:0xbeea0bcb
  419508:	lea    ebp,[ebp-0x1b08eed4]
  41950e:	pop    esi
  41950f:	aaa    
  419510:	mov    ecx,0x16e66362
  419515:	repnz xor edx,edx
  419518:	pusha  
  419519:	jbe    0x419590
  41951b:	repz jp 0x419570
  41951e:	inc    edx
  41951f:	xchg   ebp,eax
  419520:	dec    esp
  419521:	ror    ah,cl
  419523:	shl    dl,cl
  419525:	(bad)
  419528:	adc    al,0x49
  41952a:	mov    cl,0x5d
  41952c:	jg     0x4194e8
  41952e:	ins    BYTE PTR es:[edi],dx
  41952f:	sub    esi,DWORD PTR [esi+0x3a9274bf]
  419535:	(bad)  
  419536:	arpl   WORD PTR ds:0x341c5ef3,cx
  41953c:	sub    DWORD PTR [edi],edx
  41953e:	sbb    edi,esp
  419540:	pop    edx
  419541:	push   0xffffffe5
  419543:	repz retf 0x7ca9
  419547:	jge    0x4195c5
  419549:	sub    edi,edx
  41954b:	xor    DWORD PTR es:[esi+0x56303d2d],edi
  419552:	mov    cl,0x13
  419554:	int3   
  419555:	xchg   ecx,eax
  419556:	xor    eax,0xf03c4075
  41955b:	cld    
  41955c:	inc    edx
  41955d:	adc    eax,0x190d8090
  419562:	test   eax,0xedd456d5
  419567:	je     0x41956f
  419569:	inc    ebp
  41956a:	mov    eax,ds:0x8ba3f9dc
  41956f:	popf   
  419570:	in     eax,0x17
  419572:	sbb    eax,0xdf8e1686
  419577:	push   ebx
  419578:	jl     0x4195e2
  41957a:	inc    ecx
  41957b:	gs (bad) 
  41957e:	cmp    di,WORD PTR [esi+0x13]
  419582:	mov    edi,0x76a86e6c
  419587:	dec    ebx
  419588:	sbb    BYTE PTR [edx+0x27],bl
  41958b:	in     eax,0xa1
  41958d:	mov    edx,0x8699b8ab
  419592:	stos   BYTE PTR es:[edi],al
  419593:	ret    0xea86
  419596:	inc    eax
  419597:	and    BYTE PTR [ecx-0x41],bl
  41959a:	xchg   edx,eax
  41959b:	pop    si
  41959d:	das    
  41959e:	shl    BYTE PTR [ebx+esi*4+0x1b2e2cfa],cl
  4195a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a6:	mov    ebx,0x83d7348
  4195ab:	jl     0x41954f
  4195ad:	ins    DWORD PTR es:[edi],dx
  4195ae:	inc    ebx
  4195af:	jge    0x41953f
  4195b1:	cmp    DWORD PTR [ebp-0x2f],0xffffffc3
  4195b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b6:	jno    0x419599
  4195b8:	ds scas al,BYTE PTR es:[edi]
  4195ba:	inc    edi
  4195bb:	sti    
  4195bc:	nop
  4195bd:	mov    edx,0x79b8250b
  4195c2:	lea    ebx,[ecx+0x21]
  4195c5:	test   ebp,0x9338a5a7
  4195cb:	icebp  
  4195cc:	mov    al,ds:0x8aa8ec5b
  4195d1:	mov    al,ds:0x718c801d
  4195d6:	enter  0x3bfd,0x39
  4195da:	scas   al,BYTE PTR es:[edi]
  4195db:	jns    0x4195bc
  4195dd:	das    
  4195de:	add    bh,BYTE PTR [ebx+edx*1-0x63]
  4195e2:	scas   al,BYTE PTR es:[edi]
  4195e3:	adc    al,BYTE PTR [edi-0x533e6c95]
  4195e9:	imul   edi,ebp,0x18416ec8
  4195ef:	pop    ss
  4195f0:	leave  
  4195f1:	mov    al,0x6d
  4195f3:	jae    0x41964c
  4195f5:	add    ecx,DWORD PTR [esi-0x1def5d5f]
  4195fb:	jmp    DWORD PTR [esi]
  4195fd:	jge    0x419655
  4195ff:	push   edi
  419600:	sub    al,0x81
  419602:	jl     0x419605
  419604:	fsub   st(0),st
  419606:	(bad)  
  419607:	mov    al,ds:0x10f1a1d0
  41960c:	je     0x419612
  41960e:	jo     0x4195ab
  419610:	add    al,0x2e
  419612:	push   eax
  419613:	into   
  419614:	cs pop edx
  419616:	push   0x24
  419618:	add    dh,dh
  41961a:	out    0x85,eax
  41961c:	cmp    al,0x69
  41961e:	daa    
  41961f:	lahf   
  419620:	call   0xc707c379
  419625:	pop    eax
  419626:	test   DWORD PTR [edi],0xd37d2ace
  41962c:	adc    ebx,0x31deb761
  419632:	inc    esp
  419633:	jl     0x4196af
  419635:	adc    eax,0xad2a970f
  41963a:	fld    QWORD PTR [ebx+0x76]
  41963d:	shr    DWORD PTR [ecx-0x74cfac8f],cl
  419643:	(bad)  
  419644:	iret   
  419645:	mov    ch,0x4
  419647:	(bad)  
  419648:	xchg   esp,eax
  419649:	ins    DWORD PTR es:[edi],dx
  41964a:	dec    edi
  41964b:	sub    eax,0xa7e4a640
  419650:	pushf  
  419651:	mov    ds:0xc192de54,eax
  419656:	icebp  
  419657:	ret    0x81cc
  41965a:	fadd   DWORD PTR [ebx]
  41965c:	arpl   si,sp
  41965e:	fstp   TBYTE PTR [edi-0x22]
  419661:	jge    0x419698
  419663:	popf   
  419664:	jbe    0x41961c
  419666:	ret    
  419667:	add    esp,DWORD PTR [esi]
  419669:	out    0x73,al
  41966b:	inc    esp
  41966c:	mov    DWORD PTR [edi+edx*8+0x6490af36],eax
  419673:	mov    ds:0x261b9bdd,al
  419678:	mov    bl,0x56
  41967a:	ds cmp eax,0x5b68de69
  419680:	mov    esp,0x8f20aa3
  419685:	les    edi,FWORD PTR ss:[edx+ecx*2]
  419689:	or     edx,ecx
  41968b:	sub    al,0x31
  41968d:	xlat   BYTE PTR ds:[ebx]
  41968e:	adc    al,0x57
  419690:	fcmovne st,st(4)
  419692:	cmp    dh,BYTE PTR [ebp-0x61]
  419695:	(bad)  
  419696:	mov    dl,0x1
  419698:	mov    al,0x83
  41969a:	jle    0x4196d6
  41969c:	div    edx
  41969e:	push   ds
  41969f:	stos   DWORD PTR es:[edi],eax
  4196a0:	and    edx,ecx
  4196a2:	jmp    0x41962b
  4196a4:	jle    0x4196e4
  4196a6:	jno    0x419678
  4196a8:	push   eax
  4196a9:	test   ebx,0x44fc797c
  4196af:	mov    es,WORD PTR [edi-0x4f]
  4196b2:	add    ebx,esi
  4196b4:	(bad)  
  4196b5:	mov    bh,0xb2
  4196b7:	jl     0x4196d3
  4196b9:	ret    0x92b0
  4196bc:	push   esp
  4196bd:	sbb    edx,DWORD PTR [esi+0x64]
  4196c0:	call   FWORD PTR [ebp*1+0x3480f080]
  4196c7:	dec    esp
  4196c8:	bound  edi,QWORD PTR ds:0x6a7f2cf5
  4196ce:	ret    
  4196cf:	mov    eax,0x5fe0bf39
  4196d4:	jge    0x4196af
  4196d6:	mov    al,0x4f
  4196d8:	adc    ecx,DWORD PTR [ecx+0x136a9273]
  4196de:	push   es
  4196df:	sar    DWORD PTR [ebp+ecx*8+0x5f500c2d],cl
  4196e6:	bound  edi,QWORD PTR [ebp-0x24]
  4196e9:	out    dx,al
  4196ea:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ec:	cli    
  4196ed:	out    0xbf,al
  4196ef:	sbb    bh,BYTE PTR [ebx-0x3b]
  4196f2:	scas   eax,DWORD PTR es:[edi]
  4196f3:	jecxz  0x419751
  4196f5:	inc    ebx
  4196f6:	inc    eax
  4196f7:	jge    0x41968a
  4196f9:	dec    eax
  4196fa:	ins    DWORD PTR es:[edi],dx
  4196fb:	int    0x71
  4196fd:	ret    
  4196fe:	sahf   
  4196ff:	call   0x30c3:0x8520a764
  419706:	mov    ebx,0xeff698d1
  41970b:	and    dl,BYTE PTR [esi]
  41970d:	repz test DWORD PTR [edi+eiz*8-0x50],0xef84d102
  419716:	test   DWORD PTR [edx+edx*4-0x23],ebx
  41971a:	sub    ah,ch
  41971c:	hlt    
  41971d:	jne    0x4196bb
  41971f:	outs   dx,DWORD PTR ds:[esi]
  419720:	jmp    0x4196d7
  419722:	xor    BYTE PTR [edx+0x25d6fb3e],bl
  419728:	and    al,0x36
  41972a:	clc    
  41972b:	sbb    cl,BYTE PTR [ebp-0x5cd52a38]
  419731:	ret    0x5d24
  419734:	stos   BYTE PTR es:[edi],al
  419735:	xor    dl,0xbb
  419738:	ins    DWORD PTR es:[edi],dx
  419739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973a:	xchg   ecx,eax
  41973b:	fist   WORD PTR [ebx+eax*8+0x28]
  41973f:	pop    ebx
  419740:	jecxz  0x419752
  419742:	xchg   ecx,edi
  419744:	or     esp,DWORD PTR [edx-0x3eb0bf32]
  41974a:	push   es
  41974b:	sub    ah,BYTE PTR [edx-0x5b4cf7e5]
  419751:	inc    edi
  419752:	mov    eax,ds:0xadb9c608
  419757:	adc    eax,DWORD PTR [ebp+eiz*8-0x2b3ba4e9]
  41975e:	push   0xffffffd1
  419760:	xchg   DWORD PTR [esi+0x6b0db7b7],ebx
  419766:	jb     0x41978d
  419768:	out    dx,al
  419769:	cli    
  41976a:	and    cl,BYTE PTR [edi]
  41976c:	ror    edi,cl
  41976e:	je     0x419753
  419770:	jbe    0x4197bb
  419772:	or     eax,0xce25854
  419777:	xor    eax,0x510427e6
  41977c:	lods   al,BYTE PTR ds:[esi]
  41977d:	xor    eax,0xbaedf9f6
  419782:	and    esp,esi
  419784:	repnz xchg esi,eax
  419786:	mov    esp,0xfdfbf437
  41978b:	ins    BYTE PTR es:[edi],dx
  41978c:	xchg   esi,eax
  41978d:	mov    al,0xe0
  41978f:	test   al,0x8e
  419791:	pop    edi
  419792:	inc    esi
  419793:	mov    eax,cr4
  419796:	sbb    al,0x36
  419798:	test   BYTE PTR [edi],dh
  41979a:	outs   dx,BYTE PTR ds:[esi]
  41979b:	out    0x56,eax
  41979d:	ret    0x197e
  4197a0:	iret   
  4197a1:	scas   al,BYTE PTR es:[edi]
  4197a2:	sbb    al,0x1e
  4197a4:	cli    
  4197a5:	gs jmp 0x419747
  4197a8:	fadd   DWORD PTR [ecx+0x6e]
  4197ab:	mov    ds:0x6dfe14a1,al
  4197b0:	stos   DWORD PTR es:[edi],eax
  4197b1:	adc    ecx,DWORD PTR [eax+edi*2+0x42]
  4197b5:	iret   
  4197b6:	adc    DWORD PTR [ecx+0x13],esp
  4197b9:	(bad)  [eax-0x47]
  4197bc:	je     0x419785
  4197be:	jbe    0x4197c1
  4197c0:	jp     0x4197b4
  4197c2:	mov    BYTE PTR [ecx],0x3b
  4197c5:	mov    ebp,0x34dad685
  4197ca:	sub    edi,DWORD PTR ds:0xbf7f1748
  4197d0:	(bad)  
  4197d1:	xlat   BYTE PTR ds:[ebx]
  4197d2:	outs   dx,DWORD PTR ds:[esi]
  4197d3:	pop    edi
  4197d4:	sub    DWORD PTR [ecx+ebx*4-0x3d1b2c7b],esi
  4197db:	jmp    0x419815
  4197dd:	push   esp
  4197de:	mov    eax,0xaa3fc776
  4197e3:	stc    
  4197e4:	int    0x87
  4197e6:	je     0x4197b3
  4197e8:	fstp   QWORD PTR [ebp-0x19]
  4197eb:	inc    ebx
  4197ec:	pop    edi
  4197ed:	mov    ebp,0x49b3eb69
  4197f2:	jmp    0x7092:0x561a5713
  4197f9:	mov    ecx,0x8cf99
  4197fe:	add    BYTE PTR [eax],al
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	ror    bh,1
  41980f:	and    edx,ebx
  419811:	aas    
  419812:	rcl    BYTE PTR [ecx+eax*1],1
  419815:	add    bl,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [ecx-0x2b27c9a2],cl
  41981f:	(bad)  
  419820:	adc    ebp,eax
  419822:	or     ah,ah
  419824:	lods   eax,DWORD PTR ds:[esi]
  419825:	or     al,0xb4
  419827:	add    BYTE PTR [eax-0x49f9c9ba],0x4f
  41982e:	jb     0x419814
  419830:	xor    al,0xf8
  419832:	cs dec eax
  419834:	mov    DWORD PTR [ecx-0x6a445663],ecx
  41983a:	jp     0x419872
  41983c:	xor    BYTE PTR [edi-0x5a],cl
  41983f:	mov    BYTE PTR [ebx+0x4a469fdb],bh
  419845:	and    BYTE PTR ds:0xadf63297,0x94
  41984c:	mov    edx,DWORD PTR [eax+0x26ae832d]
  419852:	addr16 (bad) 
  419854:	ins    DWORD PTR es:[edi],dx
  419855:	dec    ecx
  419856:	(bad)  
  419857:	out    dx,eax
  419858:	add    eax,0xd1529878
  41985d:	clc    
  41985e:	scas   al,BYTE PTR es:[edi]
  41985f:	test   eax,0x8fdd9acb
  419864:	dec    eax
  419865:	mov    esi,0x88c819ff
  41986a:	mov    BYTE PTR [edx-0x49],dl
  41986d:	jmp    0x4197f6
  41986f:	jecxz  0x419888
  419871:	mov    bh,0x3b
  419873:	or     ah,BYTE PTR [ebx]
  419875:	out    0xa2,al
  419877:	test   DWORD PTR [esi],edx
  419879:	(bad)  
  41987b:	adc    al,0xce
  41987e:	jmp    0xae28855d
  419883:	mov    gs,WORD PTR [edi+esi*2-0x414727d7]
  41988a:	call   0xebd43600
  41988f:	fxam   
  419891:	pop    ds
  419892:	js     0x4198f0
  419894:	pop    esi
  419895:	jnp    0x419817
  419897:	pop    ebx
  419898:	add    ebp,esp
  41989a:	mov    esi,0xc9e12aa3
  41989f:	inc    ebp
  4198a0:	sub    DWORD PTR [edx+ebp*2],0xffffffb0
  4198a4:	xchg   ebx,eax
  4198a5:	nop
  4198a6:	push   esp
  4198a7:	dec    ebx
  4198a8:	lods   eax,DWORD PTR ds:[esi]
  4198a9:	aam    0x78
  4198ab:	sar    DWORD PTR [ebx],0x10
  4198ae:	fwait
  4198af:	lock add ebx,DWORD PTR [eax-0x53]
  4198b3:	add    BYTE PTR [edx+edx*1],al
  4198b6:	jl     0x419873
  4198b8:	scas   al,BYTE PTR es:[edi]
  4198b9:	ffree  st(1)
  4198bb:	or     ebp,DWORD PTR [edi]
  4198bd:	aad    0x4d
  4198bf:	sub    BYTE PTR [ecx+0x54004d22],cl
  4198c5:	les    esi,FWORD PTR [edi]
  4198c7:	dec    esp
  4198c8:	in     eax,dx
  4198c9:	jb     0x419861
  4198cb:	out    0xa5,al
  4198cd:	shr    BYTE PTR [ebp-0x21],1
  4198d0:	add    DWORD PTR [edi],0x7
  4198d3:	adc    dl,al
  4198d5:	mov    dh,0x6b
  4198d7:	shl    DWORD PTR ds:[esi+0x670fb742],0xc9
  4198df:	adc    al,0x1c
  4198e1:	iret   
  4198e2:	sbb    al,0x82
  4198e4:	outs   dx,DWORD PTR ds:[esi]
  4198e5:	sti    
  4198e6:	push   eax
  4198e7:	adc    edx,edi
  4198e9:	or     BYTE PTR [ebx-0x7d5c4697],cl
  4198ef:	rol    bl,0xb8
  4198f2:	stos   DWORD PTR es:[edi],eax
  4198f3:	adc    DWORD PTR [edi-0x3ed803d0],ebp
  4198f9:	(bad)  
  4198fa:	push   esi
  4198fb:	test   al,0xd0
  4198fd:	push   ebx
  4198fe:	mov    dl,0x10
  419900:	retf   
  419901:	cmp    BYTE PTR [edx-0x55088765],bh
  419907:	out    0xb3,eax
  419909:	test   BYTE PTR [ebp-0x79],bl
  41990c:	lds    edi,FWORD PTR [ecx]
  41990e:	xor    bh,ch
  419910:	or     eax,0xa747ded4
  419915:	adc    eax,0x58ac284e
  41991a:	rcl    DWORD PTR [ecx-0x38a7ef56],cl
  419920:	jl     0x419983
  419922:	cmp    ebx,esi
  419924:	fcomp  DWORD PTR [edi+0x32]
  419927:	and    al,0x2e
  419929:	ror    BYTE PTR [esi+0x33],1
  41992c:	int    0x1f
  41992e:	xor    al,0x1d
  419930:	xchg   BYTE PTR [ebp+0x54e33db5],bh
  419936:	fwait
  419937:	mov    edi,0x8905603d
  41993c:	gs push edi
  41993e:	cld    
  41993f:	cld    
  419940:	or     al,0xcd
  419942:	jbe    0x419947
  419944:	or     al,0xe8
  419946:	out    dx,al
  419947:	fstp   QWORD PTR [esi]
  419949:	mov    esi,ebx
  41994b:	xchg   edi,eax
  41994c:	pop    es
  41994d:	cmp    DWORD PTR [edi-0x5c],ecx
  419950:	out    dx,al
  419951:	cmp    esp,DWORD PTR [ebx+0x40]
  419954:	stos   BYTE PTR es:[edi],al
  419955:	fisubr DWORD PTR [edi-0x6cb4223c]
  41995b:	sub    al,0x92
  41995d:	or     edx,DWORD PTR [ebx]
  41995f:	lock aaa 
  419961:	push   edi
  419962:	sti    
  419963:	mov    BYTE PTR [eax-0x2d],bl
  419966:	jl     0x419904
  419968:	test   al,0x94
  41996a:	(bad)  
  41996b:	cmp    eax,0xf558ec43
  419970:	inc    edx
  419971:	pop    edx
  419972:	jbe    0x4199cf
  419974:	inc    ebx
  419975:	lahf   
  419976:	push   esi
  419977:	mov    esi,0xd22be09
  41997c:	and    cl,BYTE PTR [edi+ebp*8+0x7323cd62]
  419983:	sbb    DWORD PTR [eax+eiz*4],ebp
  419986:	push   esi
  419987:	inc    edi
  419988:	dec    ebx
  419989:	(bad)  
  41998a:	jmp    0x3cd:0x47a005e8
  419991:	pop    edi
  419992:	int3   
  419993:	out    0x14,al
  419995:	int3   
  419996:	dec    eax
  419997:	adc    eax,0x870ddca2
  41999c:	lods   eax,DWORD PTR ds:[esi]
  41999d:	mov    ah,0xfb
  41999f:	dec    edx
  4199a0:	fistp  WORD PTR [eax]
  4199a2:	aaa    
  4199a3:	xor    DWORD PTR [ecx],ebx
  4199a5:	adc    DWORD PTR [eax-0x6a247dce],esp
  4199ab:	rcl    DWORD PTR [esi-0x209799a4],0xcb
  4199b2:	sbb    ah,BYTE PTR [ebp-0x7d]
  4199b5:	pop    edx
  4199b6:	ficom  DWORD PTR [edi-0x37de8f73]
  4199bc:	add    dh,BYTE PTR [edi]
  4199be:	ins    BYTE PTR es:[edi],dx
  4199bf:	scas   eax,DWORD PTR es:[edi]
  4199c0:	out    0xd4,eax
  4199c2:	ret    
  4199c3:	or     ch,bh
  4199c5:	inc    edx
  4199c6:	loopne 0x41998c
  4199c8:	xor    al,0xd0
  4199ca:	inc    ebp
  4199cb:	inc    esi
  4199cc:	or     eax,0xb23e0398
  4199d1:	jmp    0x5e1:0x2ec3038d
  4199d8:	xlat   BYTE PTR ds:[ebx]
  4199d9:	mov    esi,0x8c595b82
  4199de:	ins    DWORD PTR es:[edi],dx
  4199df:	pop    eax
  4199e0:	stos   BYTE PTR es:[edi],al
  4199e1:	adc    ebp,edi
  4199e3:	daa    
  4199e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e5:	sbb    DWORD PTR [eax+0x3f34e750],0x33e6bf10
  4199ef:	pop    esp
  4199f0:	pop    eax
  4199f1:	rol    dh,1
  4199f3:	scas   eax,DWORD PTR es:[edi]
  4199f4:	loop   0x419a55
  4199f6:	out    dx,eax
  4199f7:	mov    fs,edi
  4199f9:	mov    cl,0x1d
  4199fb:	out    0xe0,al
  4199fd:	mov    ds:0x42e98fa0,eax
  419a02:	sar    BYTE PTR [edx-0x38dd8864],cl
  419a08:	push   ebp
  419a09:	pop    edi
  419a0a:	or     cl,BYTE PTR [ecx]
  419a0c:	mov    esp,DWORD PTR [eax+0xc]
  419a0f:	fdiv   st(4),st
  419a11:	mov    al,ds:0x6199f1bd
  419a16:	pop    ss
  419a17:	jae    0x419a7b
  419a19:	and    ch,BYTE PTR [edi]
  419a1b:	push   esi
  419a1c:	repnz push ecx
  419a1e:	add    al,0xd
  419a20:	sbb    DWORD PTR [ecx+0x10],ecx
  419a23:	repnz fld QWORD PTR [edi]
  419a26:	xor    ecx,DWORD PTR [esi-0x7f7c08c6]
  419a2c:	enter  0xef4f,0xed
  419a30:	dec    ebp
  419a31:	mov    eax,ds:0xe0c9b370
  419a36:	das    
  419a37:	sub    eax,0x41085661
  419a3c:	xchg   ebp,eax
  419a3d:	push   eax
  419a3e:	add    BYTE PTR [edi-0x64ff25e3],ch
  419a44:	pop    edx
  419a45:	xor    BYTE PTR [esi+0x74],dl
  419a48:	xchg   ebx,eax
  419a49:	xor    al,0xaf
  419a4b:	sbb    eax,0x990877f0
  419a50:	xor    BYTE PTR [ebx-0x65a6dc54],0xa4
  419a57:	sub    al,0xb2
  419a59:	or     bh,bh
  419a5b:	xchg   BYTE PTR [edx],cl
  419a5d:	(bad)  [ecx]
  419a5f:	(bad)  
  419a60:	cmp    BYTE PTR ds:0x6e1f5acf,dh
  419a66:	inc    edx
  419a67:	test   eax,0x621b0579
  419a6c:	shl    BYTE PTR [ebx],1
  419a6e:	repz leave 
  419a70:	cmc    
  419a71:	addr16 out dx,eax
  419a73:	and    BYTE PTR [edi],ah
  419a75:	mov    al,ds:0x6f941fe7
  419a7a:	xor    cl,BYTE PTR [esi+0x27]
  419a7d:	retf   0x43ab
  419a80:	mov    cl,0xa
  419a82:	ror    BYTE PTR [edi],1
  419a84:	dec    edi
  419a85:	cmc    
  419a86:	clc    
  419a87:	jns    0x419acc
  419a89:	jle    0x419ac1
  419a8b:	retf   
  419a8c:	aas    
  419a8d:	outs   dx,DWORD PTR ds:[esi]
  419a8e:	xor    edx,DWORD PTR [ebp+0x6d92de8b]
  419a94:	cmp    bl,bl
  419a96:	cwde   
  419a97:	stos   BYTE PTR es:[edi],al
  419a98:	pop    es
  419a99:	push   es
  419a9a:	neg    DWORD PTR [ecx-0x16a2ce5a]
  419aa0:	ins    BYTE PTR es:[edi],dx
  419aa1:	or     eax,0xb7820b98
  419aa6:	je     0x419a79
  419aa8:	dec    esi
  419aa9:	sbb    BYTE PTR [ecx],bh
  419aab:	push   cs
  419aac:	xchg   esp,eax
  419aad:	imul   ebp,DWORD PTR [edi],0x3d
  419ab0:	dec    esi
  419ab1:	adc    bh,BYTE PTR [edi+0xc]
  419ab4:	push   eax
  419ab5:	lea    ebx,[edi+0x55]
  419ab8:	push   sp
  419aba:	xchg   edx,eax
  419abb:	cmp    bh,BYTE PTR [eax+ebx*1+0x75]
  419abf:	stc    
  419ac0:	in     eax,0xae
  419ac2:	inc    ecx
  419ac3:	and    ecx,esi
  419ac5:	stos   DWORD PTR es:[edi],eax
  419ac6:	jbe    0x419a76
  419ac8:	adc    bl,bh
  419aca:	sbb    eax,ebx
  419acc:	mov    eax,ds:0x623361ec
  419ad1:	js     0x419a6b
  419ad3:	push   ebp
  419ad4:	dec    edx
  419ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad6:	popa   
  419ad7:	or     edi,DWORD PTR [eax-0x7f]
  419ada:	(bad)  
  419adb:	jl     0x419a5f
  419add:	fnstenv [ebx-0x54]
  419ae0:	sub    eax,0xe324ca26
  419ae5:	and    BYTE PTR [edx],dl
  419ae7:	adc    eax,0x632eab9f
  419aec:	scas   eax,DWORD PTR es:[edi]
  419aed:	shr    edx,0x58
  419af0:	adc    DWORD PTR [edx+0x1],ecx
  419af3:	add    al,0x37
  419af5:	mov    eax,edi
  419af7:	loopne 0x419b6b
  419af9:	mov    al,0x0
  419afb:	jle    0x419ac7
  419afd:	test   al,0x8e
  419aff:	push   ebx
  419b00:	dec    esp
  419b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b02:	cwde   
  419b03:	repnz push ebp
  419b05:	in     eax,0x86
  419b07:	xchg   edx,eax
  419b08:	jb     0x419abc
  419b0a:	sysret 
  419b0c:	pop    ss
  419b0d:	hlt    
  419b0e:	jmp    0x419aa3
  419b10:	loopne 0x419adb
  419b12:	adc    al,0xec
  419b14:	retf   
  419b15:	adc    DWORD PTR [ebp-0x5e],edx
  419b18:	xchg   edi,eax
  419b19:	push   edx
  419b1a:	(bad)  
  419b1b:	sbb    dl,BYTE PTR [edi+esi*4]
  419b1e:	sub    dh,BYTE PTR [ebp+0x6d134165]
  419b24:	mov    cl,0xab
  419b26:	cld    
  419b27:	add    BYTE PTR [esp+esi*8+0x66],ah
  419b2b:	out    0xac,eax
  419b2d:	pop    es
  419b2e:	pop    es
  419b2f:	sbb    DWORD PTR [esi+0x65],esi
  419b32:	ins    DWORD PTR es:[edi],dx
  419b33:	and    dh,cl
  419b35:	mov    esp,0x37815437
  419b3a:	stc    
  419b3b:	(bad)  
  419b3c:	and    DWORD PTR [edx+ebp*1-0xf97a94b],edx
  419b43:	sahf   
  419b44:	xor    ch,dh
  419b46:	call   0xb062:0x758bfe09
  419b4d:	or     BYTE PTR [esi+0x4f1ee6b9],cl
  419b53:	or     edi,DWORD PTR [edx-0x523b6ef5]
  419b59:	pop    edx
  419b5a:	das    
  419b5b:	inc    esi
  419b5c:	dec    edx
  419b5d:	mov    cl,0x55
  419b5f:	cmp    al,0xea
  419b61:	and    eax,0x756cf14b
  419b66:	pop    es
  419b67:	inc    edi
  419b68:	or     BYTE PTR [bx+0x76ee],dl
  419b6d:	pop    ecx
  419b6e:	or     ecx,ebx
  419b70:	(bad)  
  419b71:	rcr    BYTE PTR [edi],0x6e
  419b74:	lea    edx,[ecx]
  419b76:	push   edx
  419b77:	jb     0x419b8c
  419b79:	les    esi,FWORD PTR [ecx-0x242b408c]
  419b7f:	fdivr  QWORD PTR [ebx]
  419b81:	(bad)  
  419b83:	jmp    0x9712:0xa0ae2628
  419b8a:	push   cs
  419b8b:	inc    ecx
  419b8c:	das    
  419b8d:	retf   0xc4cd
  419b90:	call   0x78802772
  419b95:	add    eax,0x2a6ea3a4
  419b9a:	imul   edx,edx,0xe6a52cad
  419ba0:	mov    ch,0x59
  419ba2:	cmp    ch,al
  419ba4:	inc    esp
  419ba5:	pop    ebp
  419ba6:	xsaves [edi]
  419ba9:	sub    DWORD PTR [esi-0x654de77e],esi
  419baf:	rol    bl,0xe8
  419bb2:	cmp    BYTE PTR [ecx+0x26],dl
  419bb5:	int3   
  419bb6:	ins    BYTE PTR es:[edi],dx
  419bb7:	and    DWORD PTR [esi],ebp
  419bb9:	lods   al,BYTE PTR ds:[esi]
  419bba:	div    ah
  419bbc:	sub    esi,DWORD PTR cs:[eax+ecx*8]
  419bc0:	mov    esp,0xa4eec2e8
  419bc5:	xor    ebp,edx
  419bc7:	sub    al,0x1
  419bc9:	pop    ss
  419bca:	aaa    
  419bcb:	jecxz  0x419be8
  419bcd:	bound  edi,QWORD PTR [eax]
  419bcf:	xchg   esi,eax
  419bd0:	fwait
  419bd1:	sbb    al,0xe1
  419bd3:	dec    esp
  419bd4:	(bad)  
  419bd5:	int    0x78
  419bd7:	ss xchg ebp,eax
  419bd9:	cmp    eax,0x9a069812
  419bde:	adc    DWORD PTR [edx+0x78fc4365],edi
  419be4:	mov    cl,0xe8
  419be6:	pushf  
  419be7:	pushf  
  419be8:	arpl   WORD PTR [ecx+0x10],si
  419beb:	inc    edx
  419bec:	cmp    bl,BYTE PTR [edx+0x15]
  419bef:	stos   DWORD PTR es:[edi],eax
  419bf0:	mov    WORD PTR [edi],ds
  419bf2:	push   ecx
  419bf3:	outs   dx,DWORD PTR ds:[esi]
  419bf4:	mov    ecx,0x3f8842c3
  419bf9:	dec    ebx
  419bfa:	in     al,0x75
  419bfc:	jg     0x419c18
  419bfe:	and    DWORD PTR [esi+0x1a],0x6137b510
  419c05:	iret   
  419c06:	add    al,0xf7
  419c08:	ins    DWORD PTR es:[edi],dx
  419c09:	stos   BYTE PTR es:[edi],al
  419c0a:	mov    cl,0x11
  419c0c:	pop    ecx
  419c0d:	(bad)
  419c11:	cli    
  419c12:	imul   ebp,DWORD PTR [eax+edx*8],0x43
  419c16:	stos   DWORD PTR es:[edi],eax
  419c17:	lds    edx,FWORD PTR [edx-0x8d77da]
  419c1d:	cmp    ebp,DWORD PTR [edx]
  419c1f:	fwait
  419c20:	dec    ecx
  419c21:	repz add dh,0x47
  419c25:	in     al,dx
  419c26:	xor    esp,DWORD PTR [ebp+0x2c]
  419c29:	add    BYTE PTR [ecx-0x2217045c],bh
  419c2f:	ins    DWORD PTR es:[edi],dx
  419c30:	xchg   ebp,eax
  419c31:	bound  eax,QWORD PTR [ebp+0x29]
  419c34:	sti    
  419c35:	ret    
  419c36:	or     ch,BYTE PTR [edx]
  419c38:	popw   ss
  419c3a:	pop    es
  419c3b:	rcl    BYTE PTR [ebp+0x30],cl
  419c3e:	push   esp
  419c3f:	mov    ah,BYTE PTR [eax-0x66]
  419c42:	mov    ?,WORD PTR fs:[eax-0x652e706a]
  419c49:	bswap  esp
  419c4b:	gs push esi
  419c4d:	push   ebx
  419c4e:	sbb    ecx,ecx
  419c50:	mov    bh,0x7f
  419c52:	sti    
  419c53:	lods   eax,DWORD PTR ds:[esi]
  419c54:	cmp    BYTE PTR [ebp-0x466b83b4],dh
  419c5a:	dec    ecx
  419c5b:	sti    
  419c5c:	ror    DWORD PTR [edi-0x6924f8c4],0x71
  419c63:	in     eax,0xf9
  419c65:	sub    DWORD PTR [ebx+0x3a],ecx
  419c68:	test   DWORD PTR [ecx-0x5a],edi
  419c6b:	jmp    0xd1d8568
  419c70:	scas   al,BYTE PTR es:[edi]
  419c71:	mov    bh,0x4
  419c73:	mov    WORD PTR [edi],es
  419c75:	push   ss
  419c76:	test   BYTE PTR [ebp+0x3acb498d],0xf1
  419c7d:	pop    esi
  419c7e:	push   ds
  419c7f:	jnp    0x419cbc
  419c81:	popa   
  419c82:	cli    
  419c83:	outs   dx,BYTE PTR ds:[esi]
  419c84:	push   ebp
  419c85:	xchg   DWORD PTR [esi+0x3c],ecx
  419c88:	popa   
  419c89:	cmp    DWORD PTR [esi+ecx*8+0x7a9648f1],esi
  419c90:	push   esp
  419c91:	push   ebp
  419c92:	aaa    
  419c93:	sbb    eax,0xc6b59c55
  419c98:	cld    
  419c99:	adc    edi,DWORD PTR [edi]
  419c9b:	push   edi
  419c9c:	fistp  WORD PTR [ecx-0x5641f53]
  419ca2:	inc    esp
  419ca3:	es in  eax,dx
  419ca5:	ror    BYTE PTR [esi-0x571f587a],0x4c
  419cac:	out    dx,eax
  419cad:	pop    esi
  419cae:	jp     0x419d26
  419cb0:	xlat   BYTE PTR ds:[ebx]
  419cb1:	ja     0x419cc7
  419cb3:	ja     0x419caf
  419cb5:	sahf   
  419cb6:	iret   
  419cb7:	xchg   esp,eax
  419cb8:	mov    ecx,0x9c73813a
  419cbd:	dec    ecx
  419cbe:	test   BYTE PTR [ebx+0x4d],bl
  419cc1:	mov    ?,WORD PTR [esi-0x1971fb68]
  419cc7:	mov    dl,0x2e
  419cc9:	dec    esp
  419cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccb:	test   cl,cl
  419ccd:	stos   BYTE PTR es:[edi],al
  419cce:	into   
  419ccf:	inc    edi
  419cd0:	pop    ss
  419cd1:	and    BYTE PTR [edx],dh
  419cd3:	sub    dh,0x93
  419cd6:	pop    edx
  419cd7:	mov    al,0x29
  419cd9:	jg     0x419c80
  419cdb:	stos   DWORD PTR es:[edi],eax
  419cdc:	sub    al,0x19
  419cde:	mov    ds:0xdca8cf3d,al
  419ce3:	adc    eax,0xd12e9936
  419ce8:	mov    ss,WORD PTR [edi]
  419cea:	xchg   esi,eax
  419ceb:	neg    DWORD PTR [edx]
  419ced:	push   eax
  419cee:	push   eax
  419cef:	inc    ebp
  419cf0:	or     BYTE PTR [ecx],ch
  419cf2:	popf   
  419cf3:	cmp    al,0xdb
  419cf5:	std    
  419cf6:	or     BYTE PTR [ecx+esi*2],dl
  419cf9:	sub    edi,DWORD PTR [esi]
  419cfb:	mov    bl,0xe1
  419cfd:	pusha  
  419cfe:	retf   
  419cff:	test   al,0xd1
  419d01:	and    DWORD PTR [esi],ecx
  419d03:	mov    dh,0xec
  419d05:	fdiv   DWORD PTR [edi+edx*1]
  419d08:	adc    bl,bl
  419d0a:	xchg   ecx,eax
  419d0b:	push   esi
  419d0c:	add    BYTE PTR ss:[eax],al
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x17bcf884]
  419d20:	aad    0xb4
  419d22:	ret    
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [ebx+0x62],ah
  419d2c:	fistp  QWORD PTR [edx]
  419d2e:	dec    esi
  419d2f:	inc    ecx
  419d30:	push   es
  419d31:	mov    ds:0x6c87e25c,eax
  419d36:	dec    eax
  419d37:	xchg   edx,eax
  419d38:	cmp    DWORD PTR [edi-0x11],esp
  419d3b:	inc    edi
  419d3c:	cli    
  419d3d:	(bad)  [edx]
  419d3f:	dec    esp
  419d40:	mov    ebx,0xd47b8aa9
  419d45:	std    
  419d46:	mov    bh,0x39
  419d48:	outs   dx,BYTE PTR ds:[esi]
  419d49:	rol    edi,0xdd
  419d4c:	int3   
  419d4d:	add    eax,0xd52fb346
  419d52:	mov    ebp,0x5fdd1551
  419d57:	(bad)  
  419d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d59:	ins    DWORD PTR es:[edi],dx
  419d5a:	xchg   ebx,eax
  419d5b:	icebp  
  419d5c:	mov    DWORD PTR [eax-0x3d687be8],edx
  419d62:	add    al,0x3f
  419d64:	xchg   edi,eax
  419d65:	mov    bl,0xe7
  419d67:	or     eax,0xbf7b4724
  419d6c:	dec    ebp
  419d6d:	cmp    bl,al
  419d6f:	ds (bad) 
  419d71:	call   0xbf01afc2
  419d76:	fst    DWORD PTR [ecx]
  419d78:	and    bh,BYTE PTR [esi]
  419d7a:	mov    ebp,0xa5192966
  419d7f:	add    eax,0x3ca91d0a
  419d84:	repnz dec DWORD PTR [esp+ebp*8-0x5]
  419d89:	pop    esp
  419d8a:	adc    DWORD PTR [esi+0xce698dc],0xffffffcf
  419d91:	adc    eax,DWORD PTR [edx-0x5e45ec9]
  419d97:	dec    ebx
  419d98:	mov    ch,0xce
  419d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9b:	jmp    0x16ef:0x95aae788
  419da2:	pop    esp
  419da3:	cmp    eax,0x47d3e066
  419da8:	sub    edi,esp
  419daa:	mov    gs:0x9f73e065,eax
  419db0:	sbb    DWORD PTR [ecx],ecx
  419db2:	std    
  419db3:	in     eax,0xc9
  419db5:	adc    al,0xa
  419db7:	lahf   
  419db8:	jge    0x419e36
  419dba:	(bad)  
  419dbb:	mov    esi,0x3b257441
  419dc0:	cmp    DWORD PTR ds:0xc37056d7,ebx
  419dc6:	pop    ss
  419dc7:	ficomp WORD PTR [edi+0xe]
  419dca:	mov    ecx,0x1a053a3d
  419dcf:	stc    
  419dd0:	cdq    
  419dd1:	cmp    BYTE PTR [edx-0x6d55da04],bh
  419dd7:	out    0x57,eax
  419dd9:	sub    al,0x11
  419ddb:	pushf  
  419ddc:	(bad)
  419de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de1:	fsubr  DWORD PTR [esi-0x2566d6c6]
  419de7:	fadd   QWORD PTR [eax+0x44]
  419dea:	jns    0x419db4
  419dec:	jnp    0x419e59
  419dee:	add    DWORD PTR [ecx],ebp
  419df0:	jg     0x419e5a
  419df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df3:	leave  
  419df4:	sbb    bh,BYTE PTR [esi+0x68fa4c8a]
  419dfa:	jp     0x419e5f
  419dfc:	xor    cl,BYTE PTR [esi+esi*8+0x1c6b9bdb]
  419e03:	cs jge 0x419d98
  419e06:	cmp    ah,0x56
  419e09:	fild   WORD PTR [ebp-0x4c]
  419e0c:	mov    bh,ch
  419e0e:	adc    DWORD PTR [eax-0x23c9c331],ebx
  419e14:	mov    ds:0x80321981,al
  419e19:	(bad)  
  419e1a:	mov    ch,0xb0
  419e1c:	leave  
  419e1d:	add    eax,0x1dada7c3
  419e22:	fld    DWORD PTR [edx-0x28]
  419e25:	jb     0x419e52
  419e27:	pop    esi
  419e28:	push   0xffffffaf
  419e2a:	cmp    DWORD PTR [ebx-0x65],esp
  419e2d:	jecxz  0x419e47
  419e2f:	jno    0x419e0b
  419e31:	and    cl,dh
  419e33:	mov    ds:0x6fe2b299,eax
  419e38:	jne    0x419e4d
  419e3a:	shl    BYTE PTR [esp+edx*8-0x33e9a56a],0xf0
  419e42:	sti    
  419e43:	out    0x0,al
  419e45:	xchg   DWORD PTR ds:0xc21fa1e7,edx
  419e4b:	dec    ecx
  419e4c:	inc    esp
  419e4d:	mov    eax,0xe11eebba
  419e52:	sub    eax,DWORD PTR [edx+edx*8]
  419e55:	shl    DWORD PTR [ecx+0x4f],cl
  419e58:	push   edx
  419e59:	imul   ecx,DWORD PTR [eax],0x1849dd87
  419e5f:	jo     0x419e24
  419e61:	cmp    BYTE PTR [edx-0xfe5202c],dl
  419e67:	cmc    
  419e68:	add    al,0xbb
  419e6a:	and    BYTE PTR [eax+edx*8],bl
  419e6d:	int    0xa1
  419e6f:	fsub   QWORD PTR [esp+esi*8+0x7d4abcd1]
  419e76:	loopne 0x419e4b
  419e78:	fstp   TBYTE PTR [esi]
  419e7a:	dec    esi
  419e7b:	xchg   esp,eax
  419e7c:	jmp    0x31ca:0x575cfc3c
  419e83:	or     DWORD PTR [ebx+0x36],0x9cc4d54b
  419e8a:	jmp    0x1daf32d9
  419e8f:	mov    ?,WORD PTR [ebp+ebp*1+0xd]
  419e93:	xor    ah,dl
  419e95:	mov    ecx,0x7c934de1
  419e9a:	push   esp
  419e9b:	pop    esp
  419e9c:	sti    
  419e9d:	leave  
  419e9e:	pop    ebx
  419e9f:	call   0x83a6:0x397d2ea4
  419ea6:	push   esi
  419ea7:	outs   dx,BYTE PTR ds:[esi]
  419ea8:	or     eax,0xe5aff91d
  419ead:	sahf   
  419eae:	jae    0x419efc
  419eb0:	test   BYTE PTR [edx+ebx*4+0x2d],ah
  419eb4:	cmp    dl,BYTE PTR [eax+edx*4+0x5e]
  419eb8:	pop    eax
  419eb9:	pop    edx
  419eba:	jecxz  0x419e40
  419ebc:	sub    edi,ebx
  419ebe:	in     al,0x8
  419ec0:	in     eax,0xfb
  419ec2:	out    0xcd,al
  419ec4:	xor    DWORD PTR [ebx-0x2502dd8],esi
  419eca:	xor    al,0xff
  419ecc:	repnz mov esp,edx
  419ecf:	sti    
  419ed0:	lock or al,0x9
  419ed3:	push   ebx
  419ed4:	and    DWORD PTR [esi+0x4e4674ea],edx
  419eda:	jge    0x419f4a
  419edc:	dec    edi
  419edd:	xchg   ecx,eax
  419ede:	out    dx,eax
  419edf:	sahf   
  419ee0:	xchg   edx,eax
  419ee1:	mov    eax,ds:0x47ffd936
  419ee6:	mov    ds:0xb459acae,al
  419eeb:	sub    al,bh
  419eed:	clc    
  419eee:	pop    ecx
  419eef:	pusha  
  419ef0:	jge    0x419e74
  419ef2:	arpl   bp,bp
  419ef4:	rcr    DWORD PTR [ebp+0x1e1a42dc],0xb3
  419efb:	repnz cmp eax,0x1bd7e206
  419f01:	sub    al,BYTE PTR [ebx+0x5eee6540]
  419f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f08:	test   al,al
  419f0a:	sbb    esi,DWORD PTR [ecx]
  419f0c:	jmp    0xd35b:0x879bdeb7
  419f13:	jae    0x419f7d
  419f15:	jmp    0x426b07f9
  419f1a:	mov    cl,0x44
  419f1c:	ds add al,0xa9
  419f1f:	dec    esi
  419f20:	mov    ds:0x14f5b577,al
  419f25:	lods   eax,DWORD PTR ds:[esi]
  419f26:	mov    ds:0xc2ceb921,al
  419f2b:	(bad)  
  419f2c:	mul    DWORD PTR [ecx+0x32466c81]
  419f32:	nop
  419f33:	push   ds
  419f34:	fwait
  419f35:	xor    bh,bh
  419f37:	dec    esi
  419f38:	lahf   
  419f39:	jle    0x419ec2
  419f3b:	aaa    
  419f3c:	inc    DWORD PTR [esi]
  419f3e:	or     DWORD PTR [esi-0x7b223ba4],eax
  419f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f45:	iret   
  419f46:	nop
  419f47:	ins    BYTE PTR es:[edi],dx
  419f48:	or     al,BYTE PTR [ecx+0x6e]
  419f4b:	jecxz  0x419fa2
  419f4d:	xchg   ecx,eax
  419f4e:	inc    edx
  419f4f:	xchg   esp,ebx
  419f51:	dec    edi
  419f52:	dec    ecx
  419f53:	test   al,0x6
  419f55:	and    BYTE PTR [ecx-0x237cbdf2],ch
  419f5b:	mov    ebp,0x462048a7
  419f60:	jl     0x419ef2
  419f62:	clc    
  419f63:	in     eax,dx
  419f64:	psraw  mm6,QWORD PTR [ebp-0x2a]
  419f68:	inc    esp
  419f69:	pop    ebx
  419f6a:	ror    DWORD PTR [edi-0x399e4a05],cl
  419f70:	and    al,0xbf
  419f72:	pop    ds
  419f73:	aam    0x30
  419f75:	jnp    0x419f02
  419f77:	mov    ds:0xeabc5671,eax
  419f7c:	mov    al,ds:0x5ccae5e3
  419f81:	test   DWORD PTR [ebx+0x47bb6b6c],ebp
  419f87:	loope  0x419fed
  419f89:	nop
  419f8a:	jne    0x419fc3
  419f8c:	out    0xe8,al
  419f8e:	scas   eax,DWORD PTR es:[edi]
  419f8f:	cdq    
  419f90:	mov    dl,0xe4
  419f92:	inc    esp
  419f93:	dec    eax
  419f94:	adc    DWORD PTR [ecx-0x3d],esp
  419f97:	fnstcw WORD PTR [ebx]
  419f99:	imul   BYTE PTR [edx+0x1d]
  419f9c:	adc    al,0x3f
  419f9e:	add    DWORD PTR [edx-0x1c281fa4],ebx
  419fa4:	jo     0x419f5c
  419fa6:	cdq    
  419fa7:	mov    ds:0x86c57fe1,al
  419fac:	cmc    
  419fad:	mov    ds:0x72a40026,eax
  419fb2:	mov    DWORD PTR [edx+0x3b3617ec],ebx
  419fb8:	push   es
  419fb9:	xchg   esp,eax
  419fba:	xchg   DWORD PTR [eax-0x57],ebx
  419fbd:	push   ebp
  419fbe:	mov    di,es
  419fc1:	pop    edx
  419fc2:	int3   
  419fc3:	imul   esi,esp,0xffffff92
  419fc6:	and    dh,dh
  419fc8:	mov    ebx,0xc2fd1abf
  419fcd:	lea    edx,[eax-0x6e]
  419fd0:	inc    edx
  419fd1:	mov    edi,0xa5aca7c4
  419fd6:	inc    ecx
  419fd7:	jmp    0xd62e:0x7ed02507
  419fde:	sbb    DWORD PTR [eax*8-0x2824d667],esp
  419fe5:	or     al,0x9a
  419fe7:	mov    cl,0x6c
  419fe9:	ja     0x419fd4
  419feb:	(bad)  
  419fec:	jo     0x41a016
  419fee:	jnp    0x419f80
  419ff0:	mov    DWORD PTR [ebp+0x19],ebp
  419ff3:	loop   0x419fd9
  419ff5:	dec    esp
  419ff6:	jne    0x41a05b
  419ff8:	push   0xafd4319b
  419ffd:	cdq    
  419ffe:	les    eax,FWORD PTR [edx+0x1c]
  41a001:	ficomp WORD PTR [ebx]
  41a003:	ret    
  41a004:	mov    dl,ah
  41a006:	outs   dx,BYTE PTR ds:[esi]
  41a007:	push   es
  41a008:	shl    DWORD PTR [eax+ecx*2-0x62e9cc96],0x94
  41a010:	in     eax,0x52
  41a012:	(bad)  
  41a013:	loopne 0x419fab
  41a015:	aam    0x63
  41a017:	push   eax
  41a018:	fcmovnb st,st(1)
  41a01a:	div    cl
  41a01c:	leave  
  41a01d:	aam    0xef
  41a01f:	push   es
  41a020:	cs dec esp
  41a022:	in     al,dx
  41a023:	jb     0x41a017
  41a025:	bound  ecx,QWORD PTR [esi+0x2c4498ef]
  41a02b:	sbb    edi,0x3360c50b
  41a031:	scas   al,BYTE PTR es:[edi]
  41a032:	cmp    DWORD PTR [ecx-0x57],esp
  41a035:	fsubr  st(7),st
  41a037:	(bad)  
  41a038:	and    eax,0x562b1291
  41a03d:	or     DWORD PTR [ebx],ecx
  41a03f:	or     eax,0xcb89bc57
  41a044:	daa    
  41a045:	jbe    0x41a006
  41a047:	sub    BYTE PTR [ebx+0x48],ah
  41a04a:	adc    dl,BYTE PTR [ebx+0x32]
  41a04d:	mov    ch,0x89
  41a04f:	mov    WORD PTR [esp+edi*1],?
  41a052:	adc    ebx,DWORD PTR [esi]
  41a054:	aaa    
  41a055:	shl    DWORD PTR [ecx],1
  41a057:	and    al,0x63
  41a059:	fadd   st(1),st
  41a05b:	cmp    eax,0xe344d48c
  41a060:	push   ebp
  41a061:	mov    esi,ecx
  41a063:	lock out 0xa0,eax
  41a066:	fmul   DWORD PTR [ebx+0x3a3261af]
  41a06c:	jecxz  0x41a057
  41a06e:	xor    DWORD PTR [edi],0xffffff9b
  41a071:	jg     0x41a003
  41a073:	pop    edi
  41a074:	push   edi
  41a075:	dec    ebp
  41a076:	pop    esi
  41a077:	jmp    0xc19e:0x2253549e
  41a07e:	mov    ah,0x23
  41a080:	or     al,0x23
  41a082:	xchg   ebx,eax
  41a083:	dec    eax
  41a084:	imul   ebx,DWORD PTR cs:[edi+0x48],0x9e9abaf2
  41a08c:	and    ecx,DWORD PTR [edi+0x54]
  41a08f:	int3   
  41a090:	mov    cl,BYTE PTR [eax-0x5a]
  41a093:	mov    ah,0xa1
  41a095:	jle    0x41a083
  41a097:	mov    eax,ds:0x3cc667ef
  41a09c:	xchg   cl,cl
  41a09e:	cld    
  41a09f:	sub    edi,ebx
  41a0a1:	pop    eax
  41a0a2:	push   esp
  41a0a3:	(bad)  
  41a0a4:	mov    bh,0xd4
  41a0a6:	push   edx
  41a0a7:	aam    0x1a
  41a0a9:	dec    ebx
  41a0aa:	call   FWORD PTR [esi-0x139364ab]
  41a0b0:	mov    dl,BYTE PTR [esi-0x358b4bf4]
  41a0b6:	rcr    DWORD PTR [edx+0x88cef14],cl
  41a0bc:	std    
  41a0bd:	inc    edi
  41a0be:	sbb    BYTE PTR [ecx],bl
  41a0c0:	cmp    ebp,DWORD PTR [eax+0x6c]
  41a0c3:	out    0xf2,al
  41a0c5:	fadd   QWORD PTR [ecx]
  41a0c7:	pop    esp
  41a0c8:	or     BYTE PTR [edx-0x6a],bl
  41a0cb:	rcl    DWORD PTR [esi+0x28],0x55
  41a0cf:	out    0x78,al
  41a0d1:	push   esi
  41a0d2:	mov    al,ds:0x547f1cb1
  41a0d7:	cs mov esp,0xcb2f2441
  41a0dd:	dec    esp
  41a0de:	pop    edi
  41a0df:	das    
  41a0e0:	cs sbb ch,dh
  41a0e3:	pop    esi
  41a0e4:	sub    eax,DWORD PTR [ecx-0x54]
  41a0e7:	das    
  41a0e8:	test   al,0xf0
  41a0ea:	mov    ds:0xca04fedd,al
  41a0ef:	jno    0x41a150
  41a0f1:	rcr    DWORD PTR [ecx-0x13],1
  41a0f4:	mov    WORD PTR [esi-0x1d66cee7],?
  41a0fa:	sbb    BYTE PTR [ebp-0x28198ef1],cl
  41a100:	add    dl,al
  41a102:	loope  0x41a0cc
  41a104:	mov    ds:0xe74247d5,eax
  41a109:	xor    BYTE PTR [edx],ah
  41a10b:	sub    BYTE PTR [esi+0x7a8045c0],dl
  41a111:	sbb    eax,0xfa658035
  41a116:	cmc    
  41a117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a118:	outs   dx,DWORD PTR ds:[esi]
  41a119:	cli    
  41a11a:	cli    
  41a11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11c:	rcr    DWORD PTR [ebx],1
  41a11e:	sub    eax,0xd7cab60a
  41a123:	adc    bh,BYTE PTR [ebp+0x62f6377c]
  41a129:	ja     0x41a0bd
  41a12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a12c:	cli    
  41a12d:	xchg   DWORD PTR [ebp-0xf],ecx
  41a130:	dec    ecx
  41a131:	or     al,0x97
  41a133:	add    DWORD PTR [ebx],eax
  41a135:	mov    al,0x2a
  41a137:	(bad)  
  41a138:	adc    eax,0xb81b8562
  41a13d:	mov    eax,ds:0xeaf79a63
  41a142:	cmp    bh,dl
  41a144:	outs   dx,DWORD PTR ds:[esi]
  41a145:	and    BYTE PTR [ebx],ch
  41a147:	or     cl,BYTE PTR [esi+edx*4]
  41a14a:	mov    BYTE PTR [edi-0x79],dl
  41a14d:	add    dh,ah
  41a14f:	imul   edx,DWORD PTR [esi],0x452c7dc1
  41a155:	into   
  41a156:	jmp    0x41a1ac
  41a158:	mov    bh,0x71
  41a15a:	mov    ebx,0x83a6be48
  41a15f:	or     ebx,eax
  41a161:	jbe    0x41a1be
  41a163:	(bad)  
  41a164:	xchg   ebx,eax
  41a165:	test   al,0x81
  41a167:	mov    bl,0x8a
  41a169:	xor    ebx,eax
  41a16b:	(bad)  [esi+0x14]
  41a16e:	loopne 0x41a19f
  41a170:	dec    edi
  41a171:	arpl   sp,si
  41a173:	sbb    al,0x39
  41a175:	lahf   
  41a176:	enter  0x6990,0x52
  41a17a:	and    dl,cl
  41a17c:	sub    eax,0xab54e6bf
  41a181:	inc    edx
  41a182:	cmp    al,0x8f
  41a184:	inc    edi
  41a185:	mov    eax,0xbf0a8f2d
  41a18a:	push   ss
  41a18b:	loope  0x41a1d3
  41a18d:	or     al,0x30
  41a18f:	mul    DWORD PTR [ebx-0x21]
  41a192:	pop    es
  41a193:	xchg   ebp,eax
  41a194:	stos   BYTE PTR es:[edi],al
  41a195:	inc    ebx
  41a196:	push   ebx
  41a197:	das    
  41a198:	in     al,0xc6
  41a19a:	fs mov dh,ah
  41a19d:	mov    al,0x99
  41a19f:	out    dx,eax
  41a1a0:	xchg   esp,eax
  41a1a1:	pop    ss
  41a1a2:	fcmovnu st,st(1)
  41a1a4:	inc    ecx
  41a1a5:	aaa    
  41a1a6:	jl     0x41a21e
  41a1a8:	sti    
  41a1a9:	(bad)
  41a1ac:	pop    ss
  41a1ad:	js     0x41a1d4
  41a1af:	jmp    0xac77:0xbb111848
  41a1b6:	sbb    eax,0x2d8a89ec
  41a1bb:	aam    0xec
  41a1bd:	mov    ds:0x43792320,al
  41a1c2:	pop    esi
  41a1c3:	scas   eax,DWORD PTR es:[edi]
  41a1c4:	daa    
  41a1c5:	jecxz  0x41a1e8
  41a1c7:	mov    bl,al
  41a1c9:	stos   BYTE PTR es:[edi],al
  41a1ca:	add    BYTE PTR [edi-0x7c],cl
  41a1cd:	add    edx,DWORD PTR [esi]
  41a1cf:	xlat   BYTE PTR ds:[ebx]
  41a1d0:	dec    esi
  41a1d1:	add    bl,ch
  41a1d3:	cmp    edi,edx
  41a1d5:	add    DWORD PTR [ebp+0x1fb3f648],edi
  41a1db:	sbb    esp,esi
  41a1dd:	jmp    0xa421a8b9
  41a1e2:	mov    cl,0xe9
  41a1e4:	neg    DWORD PTR [edi]
  41a1e6:	jnp    0x41a17c
  41a1e8:	cli    
  41a1e9:	xor    eax,0x9fadba30
  41a1ee:	arpl   WORD PTR [ebx+0x18555e43],dx
  41a1f4:	xchg   esp,eax
  41a1f5:	sbb    BYTE PTR [edx-0x580bbdb7],bl
  41a1fb:	clc    
  41a1fc:	xchg   edi,eax
  41a1fd:	out    dx,al
  41a1fe:	jmp    0x41a1e0
  41a200:	shr    DWORD PTR [ebp-0x53],0x65
  41a204:	push   ds
  41a205:	scas   eax,DWORD PTR es:[edi]
  41a206:	cmc    
  41a207:	jb     0x41a1f0
  41a209:	dec    edx
  41a20a:	push   ds
  41a20b:	pop    ecx
  41a20c:	ja     0x41a237
  41a20e:	ss jbe 0x41a209
  41a211:	adc    DWORD PTR [edx-0x2337f5],edx
  41a217:	cmp    DWORD PTR [ebp-0x75],eax
  41a21a:	lods   al,BYTE PTR ds:[esi]
  41a21b:	imul   esi,ebx,0x0
  41a21e:	add    BYTE PTR [eax],al
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs mov eax,0xb6162548
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    ch,al
  41a23b:	aas    
  41a23c:	jbe    0x41a262
  41a23e:	xchg   edi,eax
  41a23f:	add    eax,0xef9f286e
  41a244:	push   edx
  41a245:	frstor ds:0x67b1275e
  41a24b:	inc    eax
  41a24c:	dec    edi
  41a24d:	cs inc ebx
  41a24f:	test   edi,ecx
  41a251:	mov    al,0x3c
  41a253:	test   eax,0x3336977d
  41a258:	into   
  41a259:	scas   al,BYTE PTR es:[edi]
  41a25a:	and    DWORD PTR [edi+0x38723a2c],0xd3f7194
  41a264:	push   es
  41a265:	test   DWORD PTR [edx+0x7e185b45],0xfd93ddb0
  41a26f:	fcom   QWORD PTR [eax*2-0x2ddac44a]
  41a276:	adc    esp,ebp
  41a278:	dec    edx
  41a279:	pop    edi
  41a27a:	cwde   
  41a27b:	sub    dh,ch
  41a27d:	mov    bh,0x1a
  41a27f:	stos   DWORD PTR es:[edi],eax
  41a280:	push   ecx
  41a281:	pop    ebx
  41a282:	scas   al,BYTE PTR es:[edi]
  41a283:	scas   eax,DWORD PTR es:[edi]
  41a284:	ror    BYTE PTR [eax-0x4f1b4612],cl
  41a28a:	out    dx,eax
  41a28b:	fild   QWORD PTR [edi+0x62]
  41a28e:	gs cdq 
  41a290:	arpl   WORD PTR [ecx+0x29],cx
  41a293:	das    
  41a294:	shl    BYTE PTR [ecx-0x23],1
  41a297:	bound  ecx,QWORD PTR ds:0x73f4a32b
  41a29d:	nop
  41a29e:	pop    ebp
  41a29f:	mov    ds:0x9a2488a4,eax
  41a2a4:	fcmovnu st,st(5)
  41a2a6:	mov    bl,0x52
  41a2a8:	mov    al,0x2e
  41a2aa:	fild   QWORD PTR [esi-0x23]
  41a2ad:	cli    
  41a2ae:	arpl   WORD PTR [esi-0x4574f4d7],di
  41a2b4:	out    0xfa,al
  41a2b6:	(bad)  
  41a2b7:	rcl    DWORD PTR [ebp-0x1173ce3a],cl
  41a2bd:	neg    BYTE PTR [ecx+0x44]
  41a2c0:	aas    
  41a2c1:	mov    eax,0xb4129c7a
  41a2c6:	rcr    DWORD PTR [eax+0x5e58fb37],0x9a
  41a2cd:	jp     0x41a26d
  41a2cf:	cmp    DWORD PTR [edx],ebx
  41a2d1:	cld    
  41a2d2:	nop
  41a2d3:	out    dx,al
  41a2d4:	sub    al,0x30
  41a2d6:	sbb    DWORD PTR [edx],esi
  41a2d8:	ret    
  41a2d9:	xchg   esp,eax
  41a2da:	test   DWORD PTR [esi],edi
  41a2dc:	push   edx
  41a2dd:	inc    ebp
  41a2de:	mov    edi,?
  41a2e0:	test   BYTE PTR [edx+0x44],bh
  41a2e3:	in     eax,dx
  41a2e4:	inc    ecx
  41a2e5:	and    al,0xb
  41a2e7:	aam    0xc2
  41a2e9:	inc    ebx
  41a2ea:	jae    0x41a33a
  41a2ec:	imul   edi,DWORD PTR [edx+0x3e],0xffffffa2
  41a2f0:	popf   
  41a2f1:	in     eax,dx
  41a2f2:	ins    DWORD PTR es:[edi],dx
  41a2f3:	inc    eax
  41a2f4:	sbb    BYTE PTR [ecx],0xca
  41a2f7:	out    dx,eax
  41a2f8:	jne    0x41a296
  41a2fa:	xchg   edx,eax
  41a2fb:	and    DWORD PTR [ebx-0x52c91861],ecx
  41a301:	cmp    eax,DWORD PTR [edx+ecx*1-0x74]
  41a305:	dec    edi
  41a306:	cmp    esi,ebx
  41a308:	or     al,0x71
  41a30a:	adc    DWORD PTR [edx-0x17],esp
  41a30d:	sub    edi,ebx
  41a30f:	popa   
  41a310:	fsub   QWORD PTR [ebp+0x5c37119b]
  41a316:	xchg   esp,eax
  41a317:	xchg   edi,eax
  41a318:	dec    esi
  41a319:	adc    eax,0x4d75bc5c
  41a31e:	stos   BYTE PTR es:[edi],al
  41a31f:	ins    DWORD PTR es:[edi],dx
  41a320:	stc    
  41a321:	xchg   ecx,eax
  41a322:	mov    ah,0x4
  41a324:	push   esi
  41a325:	fdiv   st,st(0)
  41a327:	adc    al,0x4
  41a329:	outs   dx,DWORD PTR ds:[esi]
  41a32a:	popf   
  41a32b:	mov    WORD PTR [ebx],ss
  41a32d:	mov    ebp,0xe848785e
  41a332:	(bad)  
  41a333:	scas   eax,DWORD PTR es:[edi]
  41a334:	jno    0x41a342
  41a336:	jmp    0x41a2c0
  41a338:	js     0x41a30e
  41a33a:	push   edx
  41a33b:	add    eax,0xe8094814
  41a340:	push   ss
  41a341:	fsub   DWORD PTR [eax-0x67]
  41a344:	mov    edi,0x65943ad
  41a349:	sub    eax,0x11c0b1bf
  41a34e:	sub    al,0x77
  41a350:	xor    edi,DWORD PTR [ebx+0xa1b509c]
  41a356:	jb     0x41a395
  41a358:	adc    DWORD PTR [ecx],esp
  41a35a:	or     edx,DWORD PTR [eax+0x55fdb229]
  41a360:	aad    0xa8
  41a362:	mov    al,0xb0
  41a364:	add    ebx,edi
  41a366:	pop    edx
  41a367:	mov    BYTE PTR [edx-0x68],dh
  41a36a:	jb     0x41a3c9
  41a36c:	sbb    al,0x5b
  41a36e:	cmc    
  41a36f:	dec    ecx
  41a370:	push   ecx
  41a371:	sub    BYTE PTR [edx],0xe1
  41a374:	and    BYTE PTR [edx+0x3c],al
  41a377:	xchg   ecx,eax
  41a378:	lods   al,BYTE PTR ds:[esi]
  41a379:	rcr    BYTE PTR [esi-0x3f],0x25
  41a37d:	jne    0x41a37d
  41a37f:	inc    edi
  41a380:	(bad)  
  41a381:	(bad)  [eax+ebp*2]
  41a384:	out    0x74,eax
  41a386:	mov    ch,0xdd
  41a388:	inc    ecx
  41a389:	adc    ch,BYTE PTR [ecx-0x3b]
  41a38c:	mov    ebx,0x40bd56df
  41a391:	xor    al,0x28
  41a394:	jg     0x66b14e8a
  41a39a:	and    eax,esi
  41a39c:	ret    0x3833
  41a39f:	inc    ecx
  41a3a0:	lea    eax,[eax-0x61]
  41a3a3:	mov    bl,0xc3
  41a3a5:	sbb    ebx,eax
  41a3a7:	nop
  41a3a8:	xchg   ecx,eax
  41a3a9:	in     al,dx
  41a3aa:	xchg   BYTE PTR [edx],dh
  41a3ac:	mov    dl,0xc4
  41a3ae:	add    eax,0xe9541a29
  41a3b3:	out    0xb9,al
  41a3b5:	xchg   esp,eax
  41a3b6:	loopne 0x41a42e
  41a3b8:	pushaw 
  41a3ba:	jecxz  0x41a40c
  41a3bc:	mov    eax,0xc1024ee4
  41a3c1:	push   cs
  41a3c2:	mov    cl,0xa6
  41a3c4:	xor    eax,0x22189033
  41a3c9:	inc    edi
  41a3ca:	out    dx,eax
  41a3cb:	and    eax,0x7b0ea046
  41a3d0:	out    0x6c,eax
  41a3d2:	gs jmp 0x9b77:0x3682a142
  41a3da:	mov    eax,ds:0x4ef6246d
  41a3df:	add    ah,ch
  41a3e1:	xor    al,0x10
  41a3e3:	jmp    0x3da8:0x6f972597
  41a3ea:	inc    ebp
  41a3eb:	inc    esp
  41a3ec:	enter  0x19fe,0x9e
  41a3f0:	add    eax,0xdc1a1d00
  41a3f5:	jb     0x41a3a7
  41a3f7:	lahf   
  41a3f8:	retf   
  41a3f9:	test   BYTE PTR ds:0x8d93833b,ch
  41a3ff:	shr    bh,cl
  41a401:	(bad)  
  41a402:	mov    ecx,0x1ff4a586
  41a407:	push   ds
  41a408:	and    eax,0x95a74f9b
  41a40d:	jne    0x41a43a
  41a40f:	pop    ebp
  41a410:	and    DWORD PTR [ecx+edi*8],0x81b88094
  41a417:	xor    eax,0x408f9093
  41a41c:	lock mov bh,0x30
  41a41f:	xor    al,0x8
  41a421:	jnp    0x41a457
  41a423:	pop    eax
  41a424:	hlt    
  41a425:	sub    al,0x94
  41a427:	add    ch,al
  41a429:	mov    eax,DWORD PTR [edi+0x5f]
  41a42c:	int    0xb7
  41a42e:	lods   al,BYTE PTR ds:[esi]
  41a42f:	jl     0x41a46b
  41a431:	ins    DWORD PTR es:[edi],dx
  41a432:	jmp    0x58cb:0xd7543e89
  41a439:	lahf   
  41a43a:	test   esp,ebx
  41a43c:	inc    edi
  41a43d:	cmc    
  41a43e:	or     ebx,DWORD PTR [edx-0x41]
  41a441:	js     0x41a43c
  41a443:	cmc    
  41a444:	loopne 0x41a43d
  41a446:	xchg   ebp,eax
  41a447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a448:	iret   
  41a449:	nop
  41a44a:	fidivr DWORD PTR [esi]
  41a44c:	(bad)  
  41a44d:	rcl    ah,1
  41a44f:	pop    esi
  41a450:	add    DWORD PTR [edx],ecx
  41a452:	and    edi,DWORD PTR [ecx+0x6c]
  41a455:	add    BYTE PTR [esi-0x2b1ec19a],dl
  41a45b:	push   ecx
  41a45c:	xchg   ecx,eax
  41a45d:	in     eax,dx
  41a45e:	stc    
  41a45f:	mov    ds:0x5ac7c8b,al
  41a464:	ret    0x564c
  41a467:	ja     0x41a496
  41a469:	ds mov ebp,0x5882fb0c
  41a46f:	les    esi,FWORD PTR [edi-0x5e]
  41a472:	jb     0x41a485
  41a474:	or     esi,DWORD PTR [ebx-0x21]
  41a477:	dec    ecx
  41a478:	jmp    DWORD PTR [esi-0x199e1e83]
  41a47e:	cmp    BYTE PTR [ecx],ch
  41a480:	pop    ds
  41a481:	pop    edi
  41a482:	push   ebx
  41a483:	cmp    ah,ch
  41a485:	push   esi
  41a486:	inc    edi
  41a487:	imul   edi,DWORD PTR [edi],0xe6d38f6c
  41a48d:	xchg   edx,eax
  41a48e:	xchg   edi,eax
  41a48f:	dec    ecx
  41a490:	xchg   edi,eax
  41a491:	dec    esi
  41a492:	sub    BYTE PTR [ebx-0x62],dh
  41a495:	pop    ss
  41a496:	jecxz  0x41a4e3
  41a498:	mov    ?,WORD PTR [edx-0x79da542c]
  41a49e:	fiadd  WORD PTR [ebx]
  41a4a0:	imul   ecx,eax,0x86d64a69
  41a4a6:	mov    ah,0x2d
  41a4a8:	and    al,0x9
  41a4aa:	test   al,0xb0
  41a4ac:	or     al,0x1c
  41a4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4af:	loopne 0x41a523
  41a4b1:	gs jmp 0xff0cf019
  41a4b7:	cmp    al,0x93
  41a4b9:	xchg   al,cl
  41a4bb:	outs   dx,DWORD PTR ds:[esi]
  41a4bc:	mov    ebx,0x81353dc4
  41a4c1:	and    bl,cl
  41a4c3:	fdiv   QWORD PTR [eax-0x77db8ff9]
  41a4c9:	mov    eax,ds:0x97b950cd
  41a4ce:	ret    0x9613
  41a4d1:	fwait
  41a4d2:	or     BYTE PTR [ebx-0x7a],dh
  41a4d5:	pop    edx
  41a4d6:	and    BYTE PTR ss:[ecx-0x1a],dh
  41a4da:	mov    edx,0x15cd620b
  41a4df:	push   ebp
  41a4e0:	daa    
  41a4e1:	cld    
  41a4e2:	jmp    0xcbfd:0x4e64847f
  41a4e9:	adc    dh,dl
  41a4eb:	cmp    eax,DWORD PTR [esi+ebx*8-0x43b8b5e4]
  41a4f2:	lods   eax,DWORD PTR ds:[esi]
  41a4f3:	mov    fs,WORD PTR [ebx-0x52]
  41a4f6:	lahf   
  41a4f7:	xor    eax,ebx
  41a4f9:	icebp  
  41a4fa:	mov    esi,0x323d457a
  41a4ff:	pop    ecx
  41a500:	lahf   
  41a501:	out    0x2b,al
  41a503:	out    0x89,al
  41a505:	loop   0x41a48d
  41a507:	mov    DWORD PTR [ecx-0x2f716868],esi
  41a50d:	sub    DWORD PTR [edi+0x694115db],ebx
  41a513:	jns    0x41a4ea
  41a515:	hlt    
  41a516:	inc    esi
  41a517:	push   edx
  41a518:	and    BYTE PTR [ecx-0x55],bh
  41a51b:	not    DWORD PTR [edx-0x4be51f4e]
  41a521:	xor    al,BYTE PTR [edx-0x10]
  41a524:	and    DWORD PTR [edi],0xffffffb2
  41a527:	mov    ch,0x2e
  41a529:	popa   
  41a52a:	push   eax
  41a52b:	mov    eax,0xc1c0ad01
  41a530:	out    0xae,al
  41a532:	add    DWORD PTR [eax-0x3c],ebp
  41a535:	mov    esi,0xad6b34b0
  41a53a:	lahf   
  41a53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a53c:	out    dx,al
  41a53d:	jmp    0x3ac36185
  41a542:	jle    0x41a5c2
  41a544:	mov    ebx,0x5333e8bc
  41a549:	cdq    
  41a54a:	pop    ebp
  41a54b:	repz jae 0x41a58f
  41a54e:	or     ebx,ecx
  41a550:	call   0x41bd47a5
  41a555:	bswap  eax
  41a557:	dec    esp
  41a558:	arpl   WORD PTR [eax],cx
  41a55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a55b:	mov    esp,0x899699e2
  41a560:	pushf  
  41a561:	ja     0x41a517
  41a563:	sub    DWORD PTR [edi+0x7c],0x22
  41a567:	call   0x909d:0x54ac8565
  41a56e:	and    ebp,DWORD PTR [edi+0x41d9b631]
  41a574:	pop    ebp
  41a575:	mov    al,ds:0x8d247258
  41a57a:	jge    0x41a54c
  41a57c:	jno    0x41a55d
  41a57e:	inc    ebp
  41a57f:	jno    0x41a5eb
  41a581:	pop    edi
  41a582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a583:	push   cs
  41a584:	mov    al,0xdc
  41a586:	mov    dl,0x11
  41a588:	push   edi
  41a589:	pusha  
  41a58a:	jl     0x41a5c2
  41a58c:	les    edi,FWORD PTR [ebp-0x36f4e9c8]
  41a592:	pop    eax
  41a593:	cwde   
  41a594:	daa    
  41a595:	scas   eax,DWORD PTR es:[edi]
  41a596:	out    0x9e,al
  41a598:	hlt    
  41a599:	xchg   edi,eax
  41a59a:	mov    ?,WORD PTR [ebp+0x56cf2b5]
  41a5a0:	mov    bh,0x62
  41a5a2:	lods   al,BYTE PTR ds:[esi]
  41a5a3:	sub    BYTE PTR [edi],cl
  41a5a5:	rol    ebx,0xa8
  41a5a8:	fwait
  41a5a9:	retf   0x307
  41a5ac:	adc    al,0xd5
  41a5ae:	push   ds
  41a5af:	mov    edx,0x2eea476f
  41a5b4:	test   eax,0x557b0e49
  41a5b9:	(bad)  
  41a5ba:	jp     0x41a5c2
  41a5bc:	hlt    
  41a5bd:	aas    
  41a5be:	aad    0xd8
  41a5c0:	mov    DWORD PTR [edx+0x70],esi
  41a5c3:	leave  
  41a5c4:	jns    0x41a628
  41a5c6:	leave  
  41a5c7:	arpl   WORD PTR [edi-0x10],cx
  41a5ca:	aas    
  41a5cb:	pop    ebx
  41a5cc:	addr16 push esi
  41a5cf:	xchg   BYTE PTR gs:[esi+0x4a],al
  41a5d3:	test   DWORD PTR [esi+0x24],ebx
  41a5d6:	dec    ebp
  41a5d7:	xor    al,bl
  41a5d9:	and    ch,al
  41a5db:	or     eax,0x61750e50
  41a5e0:	sbb    eax,0x1282869c
  41a5e5:	lock fs aas 
  41a5e8:	pop    edi
  41a5e9:	jecxz  0x41a5d1
  41a5eb:	lea    esi,[ecx]
  41a5ed:	inc    ebp
  41a5ee:	test   WORD PTR [edi],0x261e
  41a5f3:	push   ebp
  41a5f4:	add    cl,BYTE PTR [ecx-0x2ceeb8bb]
  41a5fa:	cmc    
  41a5fb:	nop
  41a5fc:	(bad)
  41a601:	out    0x53,al
  41a603:	mov    edx,0x91859a50
  41a608:	adc    cl,BYTE PTR [eax-0x796fe3b2]
  41a60e:	fsubrp st(6),st
  41a610:	add    al,0x89
  41a612:	inc    esi
  41a613:	pop    es
  41a614:	fs gs inc esi
  41a617:	hlt    
  41a618:	loop   0x41a5c4
  41a61a:	inc    edx
  41a61b:	sub    al,BYTE PTR [ebp+ebp*1+0x59955bdf]
  41a622:	jmp    0x9d34:0x46ad0045
  41a629:	or     BYTE PTR [eax*2+0x490f18f8],bh
  41a630:	mov    bh,0xbd
  41a632:	cdq    
  41a633:	cld    
  41a634:	sbb    BYTE PTR [ebx-0x54d85a2b],cl
  41a63a:	pop    esi
  41a63b:	push   edx
  41a63c:	and    eax,esi
  41a63e:	xor    BYTE PTR [ecx-0x27a93731],cl
  41a644:	call   0xada4:0xa3c7775e
  41a64b:	mov    esp,?
  41a64d:	or     al,0xf9
  41a64f:	popf   
  41a650:	jae    0x41a634
  41a652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a653:	int3   
  41a654:	push   eax
  41a655:	pop    esi
  41a656:	(bad)  
  41a657:	mov    cl,0xbe
  41a659:	jl     0x41a6b0
  41a65b:	and    eax,0xc924c59a
  41a660:	dec    edi
  41a661:	fiadd  WORD PTR [edi+0x4b9e81c7]
  41a667:	jge    0x41a6e7
  41a669:	js     0x41a699
  41a66b:	adc    eax,0xb9f25075
  41a670:	cld    
  41a671:	sub    DWORD PTR [eax-0xd],edi
  41a674:	inc    esp
  41a675:	mov    ebx,0x4354a1b9
  41a67a:	call   0xd44e:0xd54718cd
  41a681:	scas   eax,DWORD PTR es:[edi]
  41a682:	aam    0x24
  41a684:	xchg   edx,eax
  41a685:	or     al,0x5d
  41a687:	int3   
  41a688:	repnz or al,0x72
  41a68b:	or     DWORD PTR [edx],esp
  41a68d:	mov    al,0xcf
  41a68f:	out    0x6c,al
  41a691:	outs   dx,DWORD PTR ds:[esi]
  41a692:	cdq    
  41a693:	pop    ss
  41a694:	(bad)  
  41a695:	cmc    
  41a696:	dec    ebx
  41a697:	lock mov ecx,0xd45cda0d
  41a69d:	sbb    eax,0xb227e965
  41a6a2:	mov    DWORD PTR [eax],esi
  41a6a4:	sbb    DWORD PTR [edi+0x1f2171be],esi
  41a6aa:	adc    al,0xb5
  41a6ac:	addr16 cdq 
  41a6ae:	shl    DWORD PTR [edx+0x63],1
  41a6b1:	popa   
  41a6b2:	imul   ebx,DWORD PTR [ebx],0xfd333a1d
  41a6b8:	icebp  
  41a6b9:	in     eax,0x3a
  41a6bb:	cdq    
  41a6bc:	cwde   
  41a6bd:	test   DWORD PTR [edi],edi
  41a6bf:	rol    DWORD PTR [ebx+ebp*1],0x8f
  41a6c3:	not    ecx
  41a6c5:	stos   DWORD PTR es:[edi],eax
  41a6c6:	push   edi
  41a6c7:	dec    edi
  41a6c8:	sahf   
  41a6c9:	ds pop ebx
  41a6cb:	out    dx,al
  41a6cc:	fsub   st(5),st
  41a6ce:	mov    eax,esi
  41a6d0:	sbb    DWORD PTR [ebp+0xab5b381],esi
  41a6d6:	outs   dx,DWORD PTR ds:[esi]
  41a6d7:	push   ebp
  41a6d8:	sbb    edx,esp
  41a6da:	push   0x8815a2e7
  41a6df:	sub    cl,BYTE PTR [edi+0x49]
  41a6e2:	ret    
  41a6e3:	out    dx,al
  41a6e4:	outs   dx,DWORD PTR ds:[esi]
  41a6e5:	dec    edx
  41a6e6:	mov    bh,0xd0
  41a6e8:	add    DWORD PTR [ebx],ecx
  41a6ea:	mov    ah,0x91
  41a6ec:	xor    edx,DWORD PTR [edi+ebp*1]
  41a6ef:	inc    ebp
  41a6f0:	or     al,0xdc
  41a6f2:	je     0x41a6d9
  41a6f4:	outs   dx,DWORD PTR ds:[esi]
  41a6f5:	sbb    al,0x75
  41a6f7:	enter  0xf0ee,0xe7
  41a6fb:	xchg   edi,eax
  41a6fc:	in     al,0xec
  41a6fe:	cs sub al,0xf9
  41a701:	adc    ch,0x27
  41a704:	iret   
  41a705:	pop    ecx
  41a706:	mov    ds:0x6f6194db,eax
  41a70b:	aaa    
  41a70c:	and    cl,BYTE PTR [eax+0x53e33d49]
  41a712:	jmp    0x41a69b
  41a714:	popa   
  41a715:	dec    ebx
  41a716:	cs dec bp
  41a719:	(bad)  
  41a71a:	or     al,0x16
  41a71c:	out    dx,al
  41a71d:	dec    esi
  41a71e:	xchg   ebp,eax
  41a71f:	push   esp
  41a720:	imul   edx,ebp,0x78
  41a723:	mov    BYTE PTR [ebp+0x15bf3cec],al
  41a729:	call   FWORD PTR [eax]
  41a72b:	(bad)  
  41a72c:	mov    es,WORD PTR [eax]
  41a72e:	add    BYTE PTR [eax],al
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	add    BYTE PTR [edi+0x23a9b030],al
  41a744:	add    DWORD PTR [eax],eax
  41a746:	repz add al,0x0
  41a749:	add    BYTE PTR [edi],bh
  41a74b:	out    dx,al
  41a74c:	ret    0x55e
  41a74f:	or     al,0x92
  41a751:	dec    ecx
  41a752:	sub    ebp,DWORD PTR [ebx-0x211abad6]
  41a758:	arpl   WORD PTR gs:[ecx+0x10],bp
  41a75c:	outs   dx,DWORD PTR ds:[esi]
  41a75d:	sbb    eax,0xcafcffe
  41a762:	aam    0xc1
  41a764:	sbb    edx,DWORD PTR [eax+0x79eb7509]
  41a76a:	cmp    al,0x8d
  41a76c:	hlt    
  41a76d:	or     eax,0x241166ba
  41a772:	(bad)  
  41a773:	repnz push cs
  41a775:	es pushf 
  41a777:	jno    0x41a743
  41a779:	outs   dx,DWORD PTR ds:[esi]
  41a77a:	pop    eax
  41a77b:	push   ds
  41a77c:	mov    DWORD PTR [ebx],ebx
  41a77e:	in     eax,dx
  41a77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a780:	sub    al,bh
  41a782:	scas   al,BYTE PTR es:[edi]
  41a783:	rcr    DWORD PTR [ebp-0x2a],cl
  41a786:	stos   BYTE PTR es:[edi],al
  41a787:	ret    0xacc0
  41a78a:	and    al,0xef
  41a78c:	pop    ebx
  41a78d:	mov    eax,ds:0xcdadf05d
  41a792:	jge    0x41a79b
  41a794:	or     eax,0x5e0f2acb
  41a799:	mov    edi,0x416293f8
  41a79e:	mov    ss,WORD PTR [ecx-0x6c]
  41a7a1:	add    dh,bh
  41a7a3:	push   ss
  41a7a4:	test   eax,0x10798ed3
  41a7a9:	push   ebx
  41a7aa:	loop   0x41a7f1
  41a7ac:	das    
  41a7ad:	imul   edi,DWORD PTR [edx],0xffffffa5
  41a7b0:	pusha  
  41a7b1:	rcr    DWORD PTR [edx+0x1b],cl
  41a7b4:	lock adc edi,DWORD PTR [esi-0x6caf54cb]
  41a7bb:	xor    ch,cl
  41a7bd:	mov    ebx,0x3e5c1245
  41a7c2:	mov    BYTE PTR [esi],al
  41a7c4:	in     eax,dx
  41a7c5:	and    al,0x7a
  41a7c7:	mov    eax,0x749b438f
  41a7cc:	add    eax,0x66482661
  41a7d1:	pusha  
  41a7d2:	js     0x41a776
  41a7d4:	stos   DWORD PTR es:[edi],eax
  41a7d5:	sbb    al,0x64
  41a7d7:	inc    ecx
  41a7d8:	ins    DWORD PTR es:[edi],dx
  41a7d9:	adc    al,0x8
  41a7db:	sbb    ch,BYTE PTR [edx+0x6a]
  41a7de:	push   esi
  41a7df:	adc    DWORD PTR ds:0xd0fb1f71,eax
  41a7e5:	push   ecx
  41a7e6:	mov    al,ds:0x97254d60
  41a7eb:	aas    
  41a7ec:	or     eax,0xdaea6d5c
  41a7f1:	call   0x751c8c49
  41a7f6:	inc    esp
  41a7f7:	aad    0xf6
  41a7f9:	sub    al,0xe
  41a7fb:	add    eax,0xcfbcb73c
  41a800:	imul   ecx,edx,0x5d9c9630
  41a806:	out    0x9b,eax
  41a808:	mov    ebx,0xbd6d952c
  41a80d:	push   0xca92ef16
  41a812:	dec    ecx
  41a813:	cmp    BYTE PTR [eax-0x5c36a850],ch
  41a819:	ins    BYTE PTR es:[edi],dx
  41a81a:	inc    BYTE PTR [ebp+0x1af5c223]
  41a820:	sbb    al,0x4c
  41a822:	sub    al,0xa7
  41a824:	and    eax,0xfbe917fe
  41a829:	xor    al,0x8f
  41a82b:	xchg   ebp,eax
  41a82c:	outs   dx,DWORD PTR ds:[esi]
  41a82d:	mov    ah,0xaa
  41a82f:	cli    
  41a830:	dec    ebp
  41a831:	dec    esi
  41a832:	out    0xb7,eax
  41a834:	push   ebp
  41a835:	imul   ecx,esp,0xffffff97
  41a838:	jmp    0x5a8:0xb2762a2f
  41a83f:	stos   BYTE PTR es:[edi],al
  41a840:	out    dx,eax
  41a841:	or     edi,ecx
  41a843:	dec    esi
  41a844:	es es mov dh,0xdf
  41a848:	adc    ch,BYTE PTR [ecx-0x6a]
  41a84b:	call   0x43ad:0x276758ba
  41a852:	push   edi
  41a853:	jbe    0x41a801
  41a855:	and    cl,BYTE PTR ds:0x73c791a2
  41a85b:	cdq    
  41a85c:	(bad)  
  41a85d:	jg     0x41a8d8
  41a85f:	je     0x41a847
  41a861:	pop    esi
  41a862:	and    ebx,DWORD PTR [edi+esi*8-0x585efda7]
  41a869:	imul   esi,DWORD PTR [ebx+0x4b621cba],0xffffffe1
  41a870:	add    DWORD PTR [esi],0xfffffffe
  41a873:	loope  0x41a8ec
  41a875:	rol    DWORD PTR [edi],cl
  41a877:	mov    eax,0x496b2acc
  41a87c:	and    DWORD PTR [esi],0x5e599b92
  41a882:	popa   
  41a883:	sub    ah,bl
  41a885:	xor    ah,bh
  41a887:	xor    ah,BYTE PTR [esi]
  41a889:	xor    DWORD PTR [ebp+0x5a],edx
  41a88c:	xchg   ebx,eax
  41a88d:	cwde   
  41a88e:	test   al,0x89
  41a890:	pop    DWORD PTR [edi+0x42]
  41a893:	sbb    al,BYTE PTR [ecx+0x65]
  41a896:	fisttp WORD PTR [ebp+0x29]
  41a899:	pop    ss
  41a89a:	loop   0x41a880
  41a89c:	out    dx,al
  41a89d:	out    0x73,eax
  41a89f:	repz add cl,ch
  41a8a2:	inc    esp
  41a8a3:	sub    eax,0xbbb03d59
  41a8a8:	bound  edi,QWORD PTR [ebx]
  41a8aa:	loope  0x41a917
  41a8ac:	dec    ebp
  41a8ad:	sub    cl,BYTE PTR fs:[esi+0x27]
  41a8b1:	add    al,BYTE PTR [edi]
  41a8b3:	not    DWORD PTR [esi+0x8]
  41a8b6:	mov    cl,0x68
  41a8b8:	les    edi,FWORD PTR [edx-0x14]
  41a8bb:	mov    dl,0xea
  41a8bd:	stos   DWORD PTR es:[edi],eax
  41a8be:	add    dl,BYTE PTR [ebx-0x6a89527c]
  41a8c4:	bound  edi,QWORD PTR [ebx]
  41a8c6:	aam    0xa9
  41a8c8:	cmp    al,0x26
  41a8ca:	sti    
  41a8cb:	or     dh,al
  41a8cd:	push   edx
  41a8ce:	add    esi,DWORD PTR [esi+0x46]
  41a8d1:	sub    BYTE PTR [eax-0x3c9f030f],0x28
  41a8d8:	pop    ebp
  41a8d9:	push   ss
  41a8da:	lock xchg edx,eax
  41a8dc:	addr16 mov al,0xa8
  41a8df:	jae    0x41a95b
  41a8e1:	push   cs
  41a8e2:	(bad)  
  41a8e3:	push   0x63
  41a8e5:	rcl    dh,1
  41a8e7:	mov    dl,0x3c
  41a8e9:	jmp    0x20b5ddb3
  41a8ee:	pusha  
  41a8ef:	mov    edi,DWORD PTR [ebx-0x494250f4]
  41a8f5:	adc    al,0x63
  41a8f7:	retf   
  41a8f8:	inc    edx
  41a8f9:	fimul  WORD PTR [edx-0x5a225802]
  41a8ff:	and    ebx,eax
  41a901:	mov    al,0x4b
  41a903:	ja     0x41a8d8
  41a905:	cmp    eax,0x8c6c9d47
  41a90a:	in     eax,dx
  41a90b:	loope  0x41a94d
  41a90d:	mov    esp,0x6d1b9630
  41a912:	sub    al,0xf9
  41a914:	sbb    al,0x6c
  41a916:	fisubr DWORD PTR [eax+0x79]
  41a919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a91a:	test   BYTE PTR [ebx],0x2b
  41a91d:	cdq    
  41a91e:	into   
  41a91f:	xchg   esi,eax
  41a920:	out    0x48,al
  41a922:	mov    ds:0x688e5e0a,al
  41a927:	jmp    0x4530a1d4
  41a92c:	mov    WORD PTR [ebx],es
  41a92e:	dec    edi
  41a92f:	xor    DWORD PTR [ecx+0x5eb761e4],ebx
  41a935:	mov    edi,0xa87630b0
  41a93a:	out    dx,eax
  41a93b:	mov    ebx,0x76adee10
  41a940:	mov    ah,0xc3
  41a942:	lods   al,BYTE PTR ds:[esi]
  41a943:	ins    BYTE PTR es:[edi],dx
  41a944:	xchg   edi,eax
  41a945:	mov    ds:0xb5fedca2,al
  41a94a:	sbb    eax,0xa35930bc
  41a94f:	iret   
  41a950:	jg     0x41a97f
  41a952:	pop    ebx
  41a953:	add    ah,BYTE PTR [ebp-0x21]
  41a956:	imul   edx,DWORD PTR [eax+0x14eb63f2],0xffffffd2
  41a95d:	mov    bh,0x8e
  41a95f:	fcom   QWORD PTR [edx+edx*8]
  41a962:	mov    edi,0x9947d2ac
  41a967:	pop    ds
  41a968:	sub    ch,bl
  41a96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96b:	mov    edx,0xa3017d25
  41a970:	jne    0x41a936
  41a972:	outs   dx,DWORD PTR ds:[esi]
  41a973:	std    
  41a974:	xor    ch,bh
  41a976:	inc    ebx
  41a977:	add    edx,0x52
  41a97a:	rcr    ch,0xb8
  41a97d:	cs sub al,0xe0
  41a980:	cwde   
  41a981:	jb     0x41a930
  41a983:	and    esp,ebx
  41a985:	jl     0x41a954
  41a987:	loop   0x41a9ce
  41a989:	ss cld 
  41a98b:	inc    esi
  41a98c:	addr16 mov dh,0xd3
  41a98f:	jl     0x41a93f
  41a991:	xchg   esi,eax
  41a992:	mov    BYTE PTR [ebp-0x75],cl
  41a995:	test   al,0x4d
  41a997:	push   cs
  41a998:	sbb    eax,0x7e83b647
  41a99d:	lahf   
  41a99e:	cs (bad) 
  41a9a0:	push   eax
  41a9a1:	loope  0x41a962
  41a9a3:	xor    BYTE PTR [ebp-0x6f9a91a4],cl
  41a9a9:	xchg   edx,eax
  41a9aa:	sub    DWORD PTR [esi+0x42],ebp
  41a9ad:	add    eax,0xdf700766
  41a9b2:	add    ah,al
  41a9b4:	dec    DWORD PTR [ecx]
  41a9b6:	cli    
  41a9b7:	clc    
  41a9b8:	xor    DWORD PTR [ecx+0x6b],esi
  41a9bb:	xor    BYTE PTR [eax-0x496d80d3],al
  41a9c1:	gs dec ecx
  41a9c3:	gs xor dh,cl
  41a9c6:	ss xchg edx,eax
  41a9c8:	scas   al,BYTE PTR es:[edi]
  41a9c9:	push   0xee40d783
  41a9ce:	sahf   
  41a9cf:	fwait
  41a9d0:	mov    cl,0xf4
  41a9d2:	(bad)  
  41a9d3:	out    dx,al
  41a9d4:	push   eax
  41a9d5:	add    eax,0xdeea2295
  41a9da:	mov    cs,WORD PTR [ebx]
  41a9dc:	inc    esi
  41a9dd:	lahf   
  41a9de:	jl     0x41aa13
  41a9e0:	out    0x59,al
  41a9e2:	mov    ds:0xbc901244,al
  41a9e7:	test   DWORD PTR [edi],0x75db05c6
  41a9ed:	cmp    esp,DWORD PTR [edx+0x79f66e4a]
  41a9f3:	jbe    0x41aa69
  41a9f5:	mov    dl,0xdf
  41a9f7:	je     0x41aa30
  41a9f9:	cmp    eax,0xac86225e
  41a9fe:	cmp    al,0x3
  41aa00:	mov    eax,ds:0x7e7e4b7f
  41aa05:	lds    ebp,FWORD PTR [ebx-0x68fcf0b2]
  41aa0b:	ins    BYTE PTR es:[edi],dx
  41aa0c:	jp     0x41aa4a
  41aa0e:	cmp    dh,BYTE PTR [edx-0x416e02ce]
  41aa14:	xor    DWORD PTR [edx+edx*8],ebp
  41aa17:	aaa    
  41aa18:	imul   ebx,DWORD PTR [edi],0xb071a62a
  41aa1e:	sahf   
  41aa1f:	sahf   
  41aa20:	stos   BYTE PTR es:[edi],al
  41aa21:	mov    esp,0x2204f401
  41aa26:	pop    eax
  41aa27:	cmp    BYTE PTR [edi-0x59d4efbc],dl
  41aa2d:	jbe    0x41aa2b
  41aa2f:	add    al,0x9c
  41aa31:	test   al,0xe8
  41aa33:	fs cmc 
  41aa35:	ficomp WORD PTR [eax+0x70]
  41aa38:	repnz cmp esi,ebp
  41aa3b:	in     al,dx
  41aa3c:	stos   DWORD PTR es:[edi],eax
  41aa3d:	arpl   WORD PTR [eax+ebx*1-0x27ece69b],ax
  41aa44:	int3   
  41aa45:	xchg   ebp,eax
  41aa46:	mov    edx,0xaa1006a8
  41aa4b:	out    0xf2,eax
  41aa4d:	xchg   ebx,eax
  41aa4e:	jb     0x41aac0
  41aa50:	(bad)  [esi+0x78ac989b]
  41aa56:	aam    0x78
  41aa58:	adc    BYTE PTR [edi+0x68],0x6b
  41aa5c:	ret    0x8181
  41aa5f:	in     eax,dx
  41aa60:	adc    DWORD PTR [ecx+0x51],ebp
  41aa63:	push   ecx
  41aa64:	(bad)  
  41aa65:	lods   al,BYTE PTR ds:[esi]
  41aa66:	pop    edx
  41aa67:	nop
  41aa68:	sbb    al,0xf1
  41aa6a:	retf   0xa862
  41aa6d:	mov    ah,0x63
  41aa6f:	js     0x41aab9
  41aa71:	stos   DWORD PTR es:[edi],eax
  41aa72:	jns    0x41aa6f
  41aa74:	mov    ebp,0xaeae2234
  41aa79:	pop    ecx
  41aa7a:	mov    ds:0xa53b7f62,al
  41aa7f:	mov    ecx,DWORD PTR [edi+0x11]
  41aa82:	xchg   BYTE PTR [edx],cl
  41aa84:	push   ebp
  41aa85:	gs pop esp
  41aa87:	cmp    edi,0xd62dfdf5
  41aa8d:	(bad)  
  41aa8e:	xlat   BYTE PTR ds:[ebx]
  41aa8f:	push   edx
  41aa90:	mov    ds:0x569171b6,eax
  41aa95:	gs stos BYTE PTR es:[edi],al
  41aa97:	iret   
  41aa98:	xchg   edi,eax
  41aa99:	add    DWORD PTR [edx+edx*8-0x2c53767c],0xffffffb1
  41aaa1:	xor    DWORD PTR [eax+0x75],eax
  41aaa4:	loop   0x41aa65
  41aaa6:	enter  0xad55,0x57
  41aaaa:	mov    eax,0x9ae244b2
  41aaaf:	jae    0x41aa42
  41aab1:	stos   DWORD PTR es:[edi],eax
  41aab2:	push   ds
  41aab3:	add    eax,0xc0ba4e0a
  41aab8:	fnstenv [ebx]
  41aaba:	jbe    0x41aa5b
  41aabc:	test   DWORD PTR [ebx+0x21],esi
  41aabf:	mov    eax,ds:0xfe4c66dd
  41aac4:	sahf   
  41aac5:	jmp    0x8d31:0x8e1e0ef7
  41aacc:	fs test al,0x1c
  41aacf:	push   ebx
  41aad0:	or     ebp,ebp
  41aad2:	mov    cl,BYTE PTR [edx+0x77]
  41aad5:	jle    0x41ab24
  41aad7:	xor    al,0x84
  41aad9:	jae    0x41aa6a
  41aadb:	dec    ecx
  41aadc:	mov    ebp,0x66d5e486
  41aae1:	push   ecx
  41aae2:	and    al,0xc1
  41aae4:	imul   esp,DWORD PTR [esi+0x3],0xffffff95
  41aae8:	jns    0x41aa9b
  41aaea:	lahf   
  41aaeb:	add    BYTE PTR [esi+0x56],cl
  41aaee:	outs   dx,BYTE PTR ds:[esi]
  41aaef:	sbb    DWORD PTR [ecx-0x69],eax
  41aaf2:	retf   
  41aaf3:	pop    ecx
  41aaf4:	or     al,0x51
  41aaf6:	fwait
  41aaf7:	pop    esi
  41aaf8:	es rcr DWORD PTR gs:[edi],1
  41aafc:	mov    al,ds:0xed70ead9
  41ab01:	jge    0x41ab7c
  41ab03:	jecxz  0x41ab2c
  41ab05:	sbb    BYTE PTR [esp+esi*8+0xfe14fae],bl
  41ab0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0d:	dec    esi
  41ab0e:	push   0xe2456509
  41ab13:	cmp    al,0xa5
  41ab15:	out    0x10,al
  41ab17:	mov    dl,0x8b
  41ab19:	cmp    eax,0x812eeaa
  41ab1e:	into   
  41ab1f:	pop    ecx
  41ab20:	fidiv  DWORD PTR [edi-0x3a19ba54]
  41ab26:	popf   
  41ab27:	jp     0x41ab3e
  41ab29:	aaa    
  41ab2a:	repz retf 
  41ab2c:	sub    ecx,DWORD PTR [edi+edi*4-0x31]
  41ab30:	fldcw  WORD PTR [esi+ecx*2+0x4c290975]
  41ab37:	icebp  
  41ab38:	or     DWORD PTR [esi],0x716b3269
  41ab3e:	push   ss
  41ab3f:	inc    eax
  41ab40:	pop    edx
  41ab41:	shl    BYTE PTR [ebp-0xe6453ef],cl
  41ab47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab48:	cwde   
  41ab49:	push   0x23
  41ab4b:	push   ebp
  41ab4c:	cmp    DWORD PTR [ecx+0x7cb3bacd],ebx
  41ab52:	das    
  41ab53:	test   BYTE PTR [edi+0x1d36e8cf],cl
  41ab59:	push   ss
  41ab5a:	js     0x41abbc
  41ab5c:	or     DWORD PTR [edx],edi
  41ab5e:	dec    esp
  41ab5f:	jecxz  0x41ab68
  41ab61:	sub    esi,DWORD PTR [ecx-0x7c521e09]
  41ab67:	and    al,0x2b
  41ab69:	push   ecx
  41ab6a:	cdq    
  41ab6b:	and    DWORD PTR [ecx],0x343c2f92
  41ab71:	call   0xc264c839
  41ab76:	lods   al,BYTE PTR ds:[esi]
  41ab77:	jl     0x41ab09
  41ab79:	retf   0xc2fb
  41ab7c:	jb     0x41abb0
  41ab7e:	in     al,0xf6
  41ab80:	mov    edx,0xc1a6b148
  41ab85:	mov    ebx,0x2e890dff
  41ab8a:	sbb    BYTE PTR [esi+0x23],0x42
  41ab8e:	mov    ah,0xaa
  41ab90:	jnp    0x41ab66
  41ab92:	mov    ecx,0x5406b40e
  41ab97:	mov    esi,0xe2e632e9
  41ab9c:	popf   
  41ab9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab9e:	pop    ds
  41ab9f:	add    ecx,DWORD PTR [ecx+0x2ef7aa10]
  41aba5:	jle    0x41ab44
  41aba7:	mov    esi,0x463e0221
  41abac:	pop    edx
  41abad:	pop    eax
  41abae:	(bad)  
  41abaf:	nop
  41abb0:	mov    edi,es
  41abb2:	push   edi
  41abb3:	int3   
  41abb4:	jns    0x41abab
  41abb6:	xlat   BYTE PTR ds:[ebx]
  41abb7:	jbe    0x41aba6
  41abb9:	test   BYTE PTR [eax-0x4965b276],ah
  41abbf:	cld    
  41abc0:	sub    eax,0xeb7803e0
  41abc6:	push   es
  41abc7:	add    al,0xb1
  41abc9:	jae    0x41ab61
  41abcb:	pop    ss
  41abcc:	leave  
  41abcd:	out    0x47,eax
  41abcf:	cld    
  41abd0:	mov    dl,0xc5
  41abd2:	outs   dx,DWORD PTR ds:[esi]
  41abd3:	repz in al,dx
  41abd5:	mov    esp,0x6b7afe11
  41abda:	hlt    
  41abdb:	leave  
  41abdc:	inc    esi
  41abdd:	ja     0x41abff
  41abdf:	xsavec [edx]
  41abe2:	jns    0x41abbb
  41abe4:	jmp    0xaefe:0x2cf5505c
  41abeb:	cmp    eax,0x94026c7b
  41abf0:	fcomi  st,st(3)
  41abf2:	pop    eax
  41abf3:	fsub   DWORD PTR [esi-0x4ba00543]
  41abf9:	mov    ds:0xf5a76c09,eax
  41abfe:	cmc    
  41abff:	test   BYTE PTR [edx+0x61aa62b],al
  41ac05:	or     eax,0xf286cdda
  41ac0a:	sbb    BYTE PTR [eax+0x5],0xb
  41ac0e:	inc    edi
  41ac0f:	in     eax,0x7d
  41ac11:	adc    DWORD PTR [esi],ecx
  41ac13:	mov    ebx,0x6db53ab0
  41ac18:	jnp    0x41abe4
  41ac1a:	add    edi,edi
  41ac1c:	mov    ds,edx
  41ac1e:	out    dx,eax
  41ac1f:	and    ecx,DWORD PTR [edi]
  41ac21:	cmp    al,0x78
  41ac23:	cdq    
  41ac24:	dec    edx
  41ac25:	jns    0x41abd6
  41ac27:	or     al,0x89
  41ac29:	xchg   DWORD PTR [ebx-0x52],ecx
  41ac2c:	scas   al,BYTE PTR es:[edi]
  41ac2d:	or     al,0x3b
  41ac2f:	mov    cl,0x8c
  41ac31:	addr16 push ss
  41ac33:	ret    0xfd61
  41ac36:	jecxz  0x41ac09
  41ac38:	add    eax,0x57e75db3
  41ac3d:	add    BYTE PTR [eax],al
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	dec    eax
  41ac4f:	sti    
  41ac50:	sub    BYTE PTR [ecx],ch
  41ac52:	pushf  
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    cl,bl
  41ac5b:	arpl   si,cx
  41ac5d:	add    esi,DWORD PTR [esi-0x2c]
  41ac60:	push   ebp
  41ac61:	mov    BYTE PTR [eax],0xf6
  41ac64:	pop    eax
  41ac65:	push   es
  41ac66:	dec    eax
  41ac67:	adc    al,0x96
  41ac69:	sub    edi,ecx
  41ac6b:	mov    ds:0x432242cb,al
  41ac70:	jnp    0x41acf0
  41ac72:	xchg   ebx,eax
  41ac73:	neg    BYTE PTR [edx]
  41ac75:	pusha  
  41ac76:	add    BYTE PTR [esi],bh
  41ac78:	pop    edi
  41ac79:	in     eax,dx
  41ac7a:	(bad)  
  41ac7b:	sti    
  41ac7c:	inc    ebp
  41ac7d:	imul   esi,DWORD PTR [edx+eax*8+0x4],0x11
  41ac82:	add    DWORD PTR [esp+ecx*4-0x4e23808f],ebp
  41ac89:	ret    0x681a
  41ac8c:	mov    edx,DWORD PTR [edi+0x61485618]
  41ac92:	inc    ecx
  41ac93:	sar    DWORD PTR [edi+0x70],1
  41ac96:	adc    eax,0x33b5c3b5
  41ac9b:	popa   
  41ac9c:	clc    
  41ac9d:	idiv   ah
  41ac9f:	and    ecx,ebx
  41aca1:	imul   esp,DWORD PTR [ebp-0x6],0x3e
  41aca5:	mov    edx,0x16cfba3c
  41acaa:	cwde   
  41acab:	retf   
  41acac:	inc    eax
  41acad:	mov    dl,al
  41acaf:	xor    ah,al
  41acb1:	sar    esp,0xca
  41acb4:	xchg   esp,esi
  41acb6:	out    dx,eax
  41acb7:	xor    al,0x6
  41acb9:	or     ebx,DWORD PTR ds:0x6243cc9e
  41acbf:	inc    edi
  41acc0:	scas   eax,DWORD PTR es:[edi]
  41acc1:	outs   dx,DWORD PTR ds:[esi]
  41acc2:	call   0x41f8dc40
  41acc7:	xchg   ecx,eax
  41acc8:	push   cs
  41acc9:	retf   
  41acca:	mov    ds:0x4dcdd091,al
  41accf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd0:	cwde   
  41acd1:	(bad)  
  41acd2:	out    0xca,al
  41acd4:	and    DWORD PTR [edx],ebx
  41acd6:	or     ah,ah
  41acd8:	sbb    ecx,DWORD PTR [edx+eax*1-0x401df08d]
  41acdf:	inc    ebp
  41ace0:	in     al,0xe
  41ace2:	test   DWORD PTR [ebp+ebp*4-0x65dd0fc0],esp
  41ace9:	mov    ebx,0x4f9b999f
  41acee:	push   es
  41acef:	inc    ecx
  41acf0:	mov    ebp,0x1ccf5000
  41acf5:	xchg   edi,eax
  41acf6:	nop
  41acf7:	in     eax,dx
  41acf8:	adc    eax,DWORD PTR [ecx]
  41acfa:	loop   0x41acc1
  41acfc:	xchg   ecx,eax
  41acfd:	outs   dx,DWORD PTR ds:[esi]
  41acfe:	mov    WORD PTR [esp+ecx*8],ds
  41ad01:	push   es
  41ad02:	dec    ebp
  41ad03:	add    DWORD PTR [edi+0x6f8a6a91],eax
  41ad09:	aaa    
  41ad0a:	mov    ecx,0xbedde9aa
  41ad0f:	xchg   ebp,eax
  41ad10:	inc    ecx
  41ad11:	aas    
  41ad12:	out    dx,al
  41ad13:	jb     0x41acfd
  41ad15:	lock shl BYTE PTR [ebx],1
  41ad18:	sbb    bh,BYTE PTR [ebx-0x762a94f7]
  41ad1e:	add    al,0xe7
  41ad20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad21:	xchg   ebp,eax
  41ad22:	mov    eax,0x5c8feebf
  41ad27:	xchg   edx,eax
  41ad28:	xor    al,0xdc
  41ad2a:	push   bx
  41ad2c:	in     eax,0x13
  41ad2e:	neg    DWORD PTR [ebx+0x46]
  41ad31:	add    eax,ecx
  41ad33:	icebp  
  41ad34:	fidivr WORD PTR [ebx]
  41ad36:	les    ecx,FWORD PTR [edx+eiz*8+0x32]
  41ad3a:	or     eax,0x52f0c77
  41ad3f:	cli    
  41ad40:	out    dx,al
  41ad41:	(bad)  
  41ad43:	push   cs
  41ad44:	push   DWORD PTR [edi+0x3db84192]
  41ad4a:	xor    esp,edx
  41ad4c:	loop   0x41ad2b
  41ad4e:	cmp    al,BYTE PTR [edi-0x36a408bf]
  41ad54:	dec    ecx
  41ad55:	lods   eax,DWORD PTR ds:[esi]
  41ad56:	jmp    0x41ada5
  41ad58:	enter  0x5602,0x67
  41ad5c:	fwait
  41ad5d:	imul   ebx,esp,0xffffffba
  41ad60:	push   esi
  41ad61:	ret    0x9de9
  41ad64:	aas    
  41ad65:	addr16 loop 0x41ad38
  41ad68:	xlat   BYTE PTR ds:[ebx]
  41ad69:	or     bl,BYTE PTR [ebp+0x50bb1837]
  41ad6f:	inc    eax
  41ad70:	popf   
  41ad71:	xor    edi,0xd14bfc3b
  41ad77:	(bad)  
  41ad78:	sub    cl,BYTE PTR ds:0x3a943952
  41ad7e:	dec    ebp
  41ad7f:	imul   dl
  41ad81:	sbb    BYTE PTR [edi+0x4d016ceb],al
  41ad87:	imul   esp,DWORD PTR [ebp-0x4da56a13],0xb47106d8
  41ad91:	loopne 0x41ad1a
  41ad93:	dec    ecx
  41ad94:	jle    0x41add6
  41ad96:	mov    dl,0x8a
  41ad98:	mov    dl,0x10
  41ad9a:	adc    ch,cl
  41ad9c:	adc    eax,0x234e985d
  41ada1:	sub    edi,DWORD PTR [edi-0x23]
  41ada4:	cs sub cl,BYTE PTR fs:[ecx-0x67a32c66]
  41adac:	lea    ebp,[edi-0x37dd8561]
  41adb2:	xlat   BYTE PTR ds:[ebx]
  41adb3:	push   ecx
  41adb4:	outs   dx,DWORD PTR ds:[esi]
  41adb5:	into   
  41adb6:	ja     0x2dae877d
  41adbc:	xor    ebp,DWORD PTR [esi-0x3b]
  41adbf:	test   ebp,ecx
  41adc1:	shl    al,cl
  41adc3:	or     DWORD PTR [ecx+0x2],esi
  41adc6:	fstp   DWORD PTR [ecx-0x9c880f7]
  41adcc:	setb   BYTE PTR [edi+0x1809142d]
  41add3:	lock cmp eax,0x448cb10f
  41add9:	call   0x8229:0x62ca7569
  41ade0:	and    al,0x3b
  41ade2:	inc    esi
  41ade3:	mov    ds,WORD PTR [esi]
  41ade5:	cs pop eax
  41ade7:	sub    al,0xf0
  41ade9:	push   edi
  41adea:	mov    edi,0xd6e1cb9a
  41adef:	push   0x8cae632e
  41adf4:	sub    edx,ebp
  41adf6:	add    al,0x51
  41adf8:	add    DWORD PTR [ebx-0x3a],ebx
  41adfb:	sti    
  41adfc:	int    0xad
  41adfe:	ret    
  41adff:	or     BYTE PTR [edi],bl
  41ae01:	es cs push edx
  41ae04:	cs or  al,0x26
  41ae07:	icebp  
  41ae08:	xor    eax,0xac3f4283
  41ae0d:	sub    DWORD PTR [eax],0x6d1e200b
  41ae13:	or     eax,0xc37a0d1d
  41ae18:	and    esp,DWORD PTR [eax-0x79]
  41ae1b:	mov    al,0xf2
  41ae1d:	scas   al,BYTE PTR es:[edi]
  41ae1e:	out    0x3e,eax
  41ae20:	shr    DWORD PTR [eax-0x762c4ea6],0x2e
  41ae27:	test   eax,0xc3c95712
  41ae2c:	out    dx,eax
  41ae2d:	mov    ch,0x4a
  41ae2f:	lods   al,BYTE PTR ds:[esi]
  41ae30:	repz push es
  41ae32:	pushw  0x58
  41ae35:	lahf   
  41ae36:	fimul  WORD PTR [edx+0x48d83d33]
  41ae3c:	fcomp  QWORD PTR ds:0x746bb4c4
  41ae42:	jl     0x41ae7f
  41ae44:	inc    ecx
  41ae45:	jo     0x41ae51
  41ae47:	jo     0x41ae23
  41ae49:	cdq    
  41ae4a:	in     al,0x5e
  41ae4c:	test   BYTE PTR [ebp-0x6d],cl
  41ae4f:	icebp  
  41ae50:	test   dl,cl
  41ae52:	and    ebp,DWORD PTR [ebp-0x2319a8d]
  41ae58:	jbe    0x41ae6a
  41ae5a:	push   esp
  41ae5b:	xor    BYTE PTR ds:0x7352c804,al
  41ae61:	leave  
  41ae62:	xchg   DWORD PTR [eax],edi
  41ae64:	sar    DWORD PTR [esi+0x6d],cl
  41ae67:	ret    0x614
  41ae6a:	jb     0x41ae8e
  41ae6c:	or     cl,BYTE PTR [esi-0x74]
  41ae6f:	jne    0x41aebc
  41ae71:	mov    ch,0xe
  41ae73:	pop    eax
  41ae74:	mov    WORD PTR [ecx+0x74],gs
  41ae77:	push   ds
  41ae78:	jp     0x41aec1
  41ae7a:	jle    0x41ae4a
  41ae7c:	push   eax
  41ae7d:	out    dx,eax
  41ae7e:	mov    ah,0xd8
  41ae80:	lahf   
  41ae81:	push   ebx
  41ae82:	arpl   WORD PTR [edx],si
  41ae84:	(bad)  [edi]
  41ae86:	and    esi,DWORD PTR [eax+eiz*8+0x54]
  41ae8a:	mov    cl,0xf7
  41ae8c:	loopne 0x41aeef
  41ae8e:	in     eax,dx
  41ae8f:	mov    ds:0xc213227f,al
  41ae94:	(bad)  
  41ae95:	mov    ah,0x12
  41ae97:	pop    ds
  41ae98:	mov    gs,esp
  41ae9a:	stos   BYTE PTR es:[edi],al
  41ae9b:	sbb    eax,0x89f1f8f7
  41aea0:	call   0x5def1ee4
  41aea5:	pop    esp
  41aea6:	retf   0x4248
  41aea9:	or     BYTE PTR [edx+0x42],dh
  41aeac:	add    al,0xf5
  41aeae:	mov    ebx,0xf4c37816
  41aeb3:	les    esp,FWORD PTR [esi-0x3c5be6ea]
  41aeb9:	es pop ecx
  41aebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebc:	inc    ebp
  41aebd:	push   ecx
  41aebe:	enter  0xf9b4,0x94
  41aec2:	nop
  41aec3:	gs push 0x73
  41aec6:	repz or eax,0xc41ad73a
  41aecc:	push   0x8bfb396d
  41aed1:	xor    DWORD PTR [ebx],eax
  41aed3:	jl     0x41af14
  41aed5:	ins    BYTE PTR es:[edi],dx
  41aed6:	sbb    BYTE PTR [edx],dl
  41aed8:	add    al,0xb7
  41aedb:	pop    ss
  41aedc:	inc    edx
  41aedd:	pop    edx
  41aede:	push   ds
  41aedf:	hlt    
  41aee0:	es cmc 
  41aee2:	ds (bad) 
  41aee4:	leave  
  41aee5:	cld    
  41aee6:	jo     0x41aee1
  41aee8:	scas   eax,DWORD PTR es:[edi]
  41aee9:	lea    esi,[edi-0x27d2ebd8]
  41aeef:	mov    esp,0xa5ae6da6
  41aef4:	arpl   WORD PTR [edx],si
  41aef6:	scas   eax,DWORD PTR es:[edi]
  41aef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef9:	stos   BYTE PTR es:[edi],al
  41aefa:	call   0xc45676c3
  41aeff:	scas   al,BYTE PTR es:[edi]
  41af00:	xor    eax,0x77fae45b
  41af05:	push   edx
  41af06:	imul   edi,DWORD PTR [edx+0x3e],0x8e5a64d4
  41af0d:	inc    eax
  41af0e:	xchg   ecx,eax
  41af0f:	hlt    
  41af10:	cmove  ecx,DWORD PTR [ebx-0x416ece1d]
  41af17:	and    cl,BYTE PTR [ecx]
  41af19:	mov    edi,0x8d244c2
  41af1e:	(bad)  
  41af1f:	icebp  
  41af20:	(bad)  
  41af21:	hlt    
  41af22:	in     al,0x7a
  41af24:	leave  
  41af25:	jg     0x41af35
  41af27:	dec    ebp
  41af28:	rcr    DWORD PTR [edi-0x36b38892],1
  41af2e:	push   ebp
  41af2f:	or     esp,esi
  41af31:	lea    ecx,[eax+0x725a16fa]
  41af37:	push   0xffffffdf
  41af39:	pop    edi
  41af3a:	ror    DWORD PTR ds:0x1fff9205,1
  41af40:	loop   0x41af9f
  41af42:	add    eax,0x3bae6c00
  41af47:	sub    ecx,DWORD PTR [eax+0x4d989aef]
  41af4d:	or     dh,dl
  41af4f:	or     eax,0x4876c804
  41af54:	dec    edx
  41af55:	in     eax,dx
  41af56:	cmovne esi,DWORD PTR [ebx+edi*4]
  41af5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af5b:	(bad)  [esi+0x31]
  41af5e:	das    
  41af5f:	stos   DWORD PTR es:[edi],eax
  41af60:	sbb    bh,BYTE PTR [esi-0x46]
  41af63:	int3   
  41af64:	jbe    0x41af1d
  41af66:	dec    esp
  41af67:	jne    0x41af63
  41af69:	or     al,0x88
  41af6b:	mov    ch,0xff
  41af6d:	push   edi
  41af6e:	test   esp,eax
  41af70:	cmp    BYTE PTR [esi+eax*8],0xc0
  41af74:	mov    eax,0x73b73ca6
  41af79:	data16 jb 0x41afa6
  41af7c:	mov    bh,0xae
  41af7e:	or     ecx,eax
  41af80:	repz mov ah,0x9c
  41af83:	lods   eax,DWORD PTR ds:[esi]
  41af84:	dec    ebx
  41af85:	pop    edi
  41af86:	add    BYTE PTR [edi],bl
  41af88:	or     ecx,DWORD PTR [edi+eiz*4]
  41af8b:	and    eax,0x534e6a41
  41af90:	jmp    0x9ff09442
  41af95:	push   edi
  41af96:	add    bh,bl
  41af98:	mov    al,ds:0x9675557b
  41af9d:	mov    esi,0xc2d50b41
  41afa2:	xchg   BYTE PTR [ecx+edi*2+0x36],dh
  41afa6:	jle    0x41af7a
  41afa8:	jae    0x41af74
  41afaa:	mov    edx,0xb5773344
  41afaf:	sub    DWORD PTR [edx-0x3b893428],edi
  41afb5:	push   edi
  41afb6:	call   0x666823ab
  41afbb:	out    dx,al
  41afbc:	jbe    0x41af49
  41afbe:	mov    ecx,0x4fae3719
  41afc3:	jecxz  0x41af4e
  41afc5:	and    eax,0x28a9217b
  41afca:	mov    dh,0xec
  41afcc:	repnz dec ecx
  41afce:	cmp    ebp,DWORD PTR ds:0x62c42b99
  41afd4:	arpl   WORD PTR [eax-0x6],sp
  41afd7:	sbb    cl,BYTE PTR [eax]
  41afd9:	cmp    BYTE PTR [ecx],0x90
  41afdc:	ror    BYTE PTR [edi+0x77],1
  41afdf:	or     al,0xf6
  41afe1:	add    al,0x29
  41afe3:	push   cs
  41afe4:	xchg   edx,eax
  41afe5:	fisttp WORD PTR [edi+ebp*1-0x12381e5e]
  41afec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afed:	add    al,0x73
  41afef:	je     0x41b00c
  41aff1:	xor    bl,0xb1
  41aff4:	call   0xf814:0x594c9ce2
  41affb:	in     al,0xf6
  41affd:	sahf   
  41affe:	cs mov al,0x37
  41b001:	clc    
  41b002:	xlat   BYTE PTR ds:[ebx]
  41b003:	push   ecx
  41b004:	mov    ah,BYTE PTR [eax+0x7cb56945]
  41b00a:	(bad)  
  41b00b:	mov    ch,0xd1
  41b00d:	mov    ds:0x65e002f2,al
  41b012:	pop    esp
  41b013:	rcl    DWORD PTR [edx-0x59],cl
  41b016:	pushf  
  41b017:	sub    BYTE PTR ds:0x6859f9ce,0x8a
  41b01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01f:	test   eax,0x7c05db27
  41b024:	fst    QWORD PTR [esi+0x15c1b439]
  41b02a:	aaa    
  41b02b:	sti    
  41b02c:	inc    edi
  41b02d:	jae    0x41aff2
  41b02f:	ins    BYTE PTR es:[edi],dx
  41b030:	or     eax,0x314e7109
  41b035:	imul   BYTE PTR [eax]
  41b037:	mov    dl,0xe4
  41b039:	cmp    DWORD PTR [ebp+0x0],ebx
  41b03c:	pop    edi
  41b03d:	sub    BYTE PTR [eax+esi*4+0x40],al
  41b041:	jae    0x41b00f
  41b043:	sbb    BYTE PTR [ecx+0x23],al
  41b046:	push   esp
  41b047:	test   al,0xc2
  41b049:	pop    esi
  41b04a:	rol    BYTE PTR [esi-0x53],1
  41b04d:	shl    BYTE PTR [ebp-0x25],cl
  41b050:	xor    ebx,DWORD PTR [ebp-0x2b58d0c5]
  41b056:	cmp    BYTE PTR [esp+eax*1-0x1796fb08],al
  41b05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05e:	sbb    ebp,DWORD PTR [ebx+0x49]
  41b061:	sub    ch,BYTE PTR [edi]
  41b063:	pop    ebx
  41b064:	mov    BYTE PTR [ecx+0x6cd5e4fe],0x7a
  41b06b:	popa   
  41b06c:	or     eax,0x3137860d
  41b071:	pop    esp
  41b072:	inc    edi
  41b073:	cmp    DWORD PTR [esi-0x54],esp
  41b076:	cmp    DWORD PTR [ebx-0x5],eax
  41b079:	mov    dh,0x25
  41b07b:	jae    0x41b03f
  41b07d:	outs   dx,BYTE PTR ds:[esi]
  41b07e:	xchg   ecx,eax
  41b07f:	mov    dl,0xf
  41b081:	inc    ebx
  41b082:	fmul   DWORD PTR [ecx-0x6cf3228d]
  41b088:	out    0xcb,eax
  41b08a:	push   ds
  41b08b:	(bad)  
  41b08c:	lods   eax,DWORD PTR ds:[esi]
  41b08d:	leave  
  41b08e:	adc    DWORD PTR [eax],eax
  41b090:	sti    
  41b091:	or     ebx,ecx
  41b093:	or     edi,DWORD PTR [edi]
  41b095:	xor    esp,DWORD PTR [edi+0x5592325f]
  41b09b:	stc    
  41b09c:	xchg   ecx,eax
  41b09d:	in     eax,dx
  41b09e:	mov    bl,0xd6
  41b0a0:	sub    BYTE PTR [edx+0x6ff98aa],bh
  41b0a6:	in     al,0xdf
  41b0a8:	call   0xa5071475
  41b0ad:	ret    0x2230
  41b0b0:	push   edi
  41b0b1:	mov    ds:0x66dbd051,eax
  41b0b6:	inc    eax
  41b0b7:	out    0xce,eax
  41b0b9:	mov    ah,0xf5
  41b0bb:	addr16 pop es
  41b0bd:	std    
  41b0be:	push   DWORD PTR [eax+0x2a]
  41b0c1:	out    dx,eax
  41b0c2:	fdivr  DWORD PTR [ebp-0x7706e6ad]
  41b0c8:	mov    cl,0xc0
  41b0ca:	pop    ds
  41b0cb:	pop    DWORD PTR [ebp-0x53]
  41b0ce:	loopne 0x41b142
  41b0d0:	pop    es
  41b0d1:	and    al,0x75
  41b0d3:	ror    bh,1
  41b0d5:	jge    0x41b0f1
  41b0d7:	inc    ecx
  41b0d8:	scas   al,BYTE PTR es:[edi]
  41b0d9:	es cs ins BYTE PTR es:[edi],dx
  41b0dc:	ds xchg edi,eax
  41b0de:	mov    edx,0xa9552a01
  41b0e3:	cld    
  41b0e4:	push   0xb8aeec04
  41b0e9:	sub    DWORD PTR [edx+0x2c006e30],edi
  41b0ef:	call   0x44e4cd27
  41b0f4:	sub    ecx,DWORD PTR [eax]
  41b0f6:	ds jno 0x41b0fa
  41b0f9:	xchg   ebx,eax
  41b0fa:	jne    0x41b10a
  41b0fc:	mov    edi,0x8e91f5d1
  41b101:	xchg   DWORD PTR [edx-0x64],ebp
  41b104:	fadd   st(4),st
  41b106:	iret   
  41b107:	cmp    al,0x4d
  41b109:	mov    WORD PTR [edx],gs
  41b10b:	pushf  
  41b10c:	xchg   esi,eax
  41b10d:	test   BYTE PTR [ecx*1+0x3a26edaf],dl
  41b114:	(bad)  
  41b115:	js     0x41b13a
  41b117:	or     ch,BYTE PTR [esi]
  41b119:	adc    dl,BYTE PTR [edi+0x50]
  41b11c:	mov    eax,ds:0x3cdc3fba
  41b121:	cmp    eax,0xdf05b48e
  41b126:	(bad)  
  41b127:	pcmpeqw mm1,mm5
  41b12a:	and    BYTE PTR [ecx],ah
  41b12c:	sub    eax,0xa5769391
  41b131:	aad    0xc5
  41b133:	lods   al,BYTE PTR ds:[esi]
  41b134:	sub    ebx,esi
  41b136:	inc    esi
  41b137:	adc    esi,DWORD PTR [ebp-0x40]
  41b13a:	div    ecx
  41b13c:	test   BYTE PTR [edi+0x3a],0x18
  41b140:	jmp    0x41b138
  41b142:	inc    ecx
  41b143:	ja     0x41b149
  41b145:	or     ah,BYTE PTR [esi-0x35dc9c05]
  41b14b:	fwait
  41b14c:	push   ecx
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	sbb    eax,0x8f731851
  41b163:	sub    eax,0x4f30001
  41b168:	add    BYTE PTR [eax],al
  41b16a:	test   eax,0x712934e9
  41b16f:	jg     0x41b142
  41b171:	cmp    DWORD PTR [edi+0x27eaf73e],ebp
  41b177:	fwait
  41b178:	(bad)  
  41b179:	fnsave [ebx+esi*8-0x2a98eddf]
  41b180:	sar    BYTE PTR [edx+ebp*2-0x1becf10],cl
  41b187:	mov    eax,ds:0x99ea094b
  41b18c:	pop    esi
  41b18d:	mov    edx,0xe9667a2b
  41b192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b193:	or     eax,0x52542951
  41b198:	cmc    
  41b199:	call   0x67c9:0x81361442
  41b1a0:	xchg   BYTE PTR [edi-0x175ac248],bl
  41b1a6:	gs mov edi,0x8ed0b371
  41b1ac:	mov    eax,0xb83ae3df
  41b1b1:	dec    ebx
  41b1b2:	pop    ss
  41b1b3:	aaa    
  41b1b4:	jbe    0x41b14f
  41b1b6:	xchg   ch,ch
  41b1b8:	push   es
  41b1b9:	cmc    
  41b1ba:	daa    
  41b1bb:	cs push ds
  41b1bd:	enter  0xbad0,0x50
  41b1c1:	mov    cl,0x23
  41b1c3:	not    al
  41b1c5:	xlat   BYTE PTR ds:[ebx]
  41b1c6:	retf   0x4013
  41b1c9:	cmp    edx,DWORD PTR [edx]
  41b1cb:	mov    eax,ds:0x13fd984f
  41b1d0:	jmp    0x518a:0x91aa10dd
  41b1d7:	(bad)  
  41b1d8:	lea    edx,ds:0xebb2e7de
  41b1de:	je     0x41b246
  41b1e0:	aad    0x91
  41b1e2:	out    0xb0,al
  41b1e4:	(bad)  
  41b1e5:	jns    0x41b1cc
  41b1e7:	aaa    
  41b1e8:	rcr    DWORD PTR [esi+0x62],0x1
  41b1ec:	sub    eax,0x2325793f
  41b1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f2:	dec    edx
  41b1f3:	imul   edi,edi,0x6b42dbfc
  41b1f9:	in     eax,dx
  41b1fa:	cmp    eax,0x4022a9ae
  41b1ff:	or     edi,DWORD PTR [edx-0x1d]
  41b202:	adc    eax,0xba54c7ae
  41b207:	hlt    
  41b208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b209:	sti    
  41b20a:	and    DWORD PTR [esi-0x6b],edi
  41b20d:	inc    esi
  41b20e:	push   ds
  41b20f:	mov    eax,ds:0xbcfc85fc
  41b214:	test   eax,0x760af851
  41b219:	popa   
  41b21a:	mov    ebp,0x5798eab1
  41b21f:	adc    al,0x57
  41b221:	or     DWORD PTR [ecx],eax
  41b223:	xchg   ebx,eax
  41b224:	out    dx,eax
  41b225:	mov    esp,0x70c2de19
  41b22a:	cwde   
  41b22b:	js     0x41b276
  41b22d:	mov    ds:0xfe9ecbd4,al
  41b232:	mov    ds,WORD PTR [eax-0x3c]
  41b235:	mov    esp,0xa70d5a49
  41b23a:	sub    ebp,esp
  41b23c:	lods   eax,DWORD PTR ds:[esi]
  41b23d:	lods   al,BYTE PTR ds:[esi]
  41b23e:	int3   
  41b23f:	adc    al,0xc4
  41b241:	jmp    0x8c35:0x1c5216ee
  41b248:	add    BYTE PTR [esi+0x75],0x60
  41b24c:	cmovo  edx,DWORD PTR [ecx]
  41b24f:	(bad)  
  41b250:	jle    0x41b247
  41b252:	shr    BYTE PTR [esi+0x5d],0xd3
  41b256:	dec    eax
  41b257:	test   DWORD PTR [ebp+0x3a27d9a7],esp
  41b25d:	scas   al,BYTE PTR es:[edi]
  41b25e:	inc    ebp
  41b25f:	pcmpgtb mm1,QWORD PTR [esi+edx*8-0x5d]
  41b264:	cdq    
  41b265:	pop    edx
  41b266:	scas   eax,DWORD PTR es:[edi]
  41b267:	call   0x85192674
  41b26c:	pop    esp
  41b26d:	icebp  
  41b26e:	mov    ds:0x40e31795,al
  41b273:	adc    ebx,ecx
  41b275:	inc    esp
  41b276:	xchg   esi,eax
  41b277:	nop
  41b278:	lock mov cs,WORD PTR [esi+edx*4+0x66]
  41b27d:	aas    
  41b27e:	sbb    DWORD PTR [ebp-0x70],0xffffffe4
  41b282:	jle    0x41b25d
  41b284:	push   ebx
  41b285:	sar    BYTE PTR [edi+edi*1],cl
  41b288:	cld    
  41b289:	jl     0x41b28a
  41b28b:	or     eax,0xd8558a8b
  41b290:	(bad)  
  41b291:	or     eax,0xdb916f43
  41b296:	jae    0x41b251
  41b298:	sub    edx,ebp
  41b29a:	and    dl,BYTE PTR [eax-0x644b4191]
  41b2a0:	mov    edx,0x71ebe8e3
  41b2a5:	dec    esp
  41b2a6:	test   eax,0x96d55c83
  41b2ab:	and    eax,0xd9bf83bd
  41b2b0:	std    
  41b2b1:	jl     0x41b2e9
  41b2b3:	fs cmp al,0xd
  41b2b6:	cmp    esi,DWORD PTR [edi]
  41b2b8:	or     DWORD PTR [esi+0x26],ecx
  41b2bb:	aad    0x30
  41b2bd:	pop    edx
  41b2be:	(bad)  
  41b2bf:	mov    al,bh
  41b2c1:	inc    esi
  41b2c2:	inc    ebp
  41b2c3:	push   ecx
  41b2c4:	and    cl,bl
  41b2c6:	(bad)  
  41b2c7:	adc    DWORD PTR [ebp-0x71ebefd6],ecx
  41b2cd:	sar    dh,1
  41b2cf:	icebp  
  41b2d0:	ror    DWORD PTR [edx],cl
  41b2d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d3:	imul   bh
  41b2d5:	iret   
  41b2d6:	jne    0x41b34c
  41b2d8:	test   eax,0xdeb436
  41b2dd:	push   es
  41b2de:	jnp    0x41b2ad
  41b2e0:	cmp    BYTE PTR [edx+0x1a],al
  41b2e3:	sub    DWORD PTR [ebp+0x36f92187],0xffffffbb
  41b2ea:	cwde   
  41b2eb:	jl     0x41b2d2
  41b2ed:	jmp    0x41b2ac
  41b2ef:	pop    es
  41b2f0:	xchg   edx,eax
  41b2f1:	or     al,cl
  41b2f3:	enter  0xe2ca,0x4
  41b2f7:	push   0x6d
  41b2f9:	pop    eax
  41b2fa:	jge    0x41b328
  41b2fc:	inc    ebx
  41b2fd:	cld    
  41b2fe:	and    DWORD PTR [edi],ebp
  41b300:	lock push ss
  41b302:	inc    esp
  41b303:	ins    DWORD PTR es:[edi],dx
  41b304:	jnp    0x41b2a1
  41b306:	xchg   esi,eax
  41b307:	bound  esi,QWORD PTR [edi+0x234eb173]
  41b30d:	adc    esp,ebx
  41b30f:	add    DWORD PTR [edi+0x4c7e5724],edi
  41b315:	mov    al,ds:0x5485422
  41b31a:	add    BYTE PTR [edx],0x83
  41b31d:	jno    0x41b37e
  41b31f:	out    0xb7,eax
  41b321:	ficomp WORD PTR [ebx]
  41b323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b324:	adc    esp,eax
  41b326:	cmp    DWORD PTR [ecx-0x2f],0x56fea1c6
  41b32d:	out    dx,al
  41b32e:	add    ecx,ebx
  41b330:	rcr    esi,cl
  41b332:	or     al,0x42
  41b334:	pop    edx
  41b335:	mov    esi,0xd6b3931a
  41b33a:	jb     0x41b2da
  41b33c:	bound  ebx,QWORD PTR [ebx]
  41b33e:	adc    ch,BYTE PTR ss:[eax+0x6f]
  41b342:	pop    es
  41b343:	sti    
  41b344:	adc    al,0x4d
  41b346:	cmp    ebp,DWORD PTR [ecx-0x374438f7]
  41b34c:	mov    ch,0x60
  41b34e:	sar    ah,cl
  41b350:	and    esp,esp
  41b352:	dec    eax
  41b353:	cmc    
  41b354:	stos   DWORD PTR es:[edi],eax
  41b355:	aad    0x1c
  41b357:	sub    DWORD PTR cs:[edx+0x59],esi
  41b35b:	call   FWORD PTR [esi+eiz*1]
  41b35e:	pushf  
  41b35f:	xchg   BYTE PTR [edi+0x3ad065ea],al
  41b365:	sbb    ebp,DWORD PTR [edi-0x59]
  41b368:	mov    ah,0x6
  41b36a:	arpl   WORD PTR [esi],bp
  41b36c:	shr    DWORD PTR [eax],0x5f
  41b36f:	repz xchg edx,eax
  41b371:	or     esi,DWORD PTR [ebp+ebp*4-0x207ea31b]
  41b378:	sahf   
  41b379:	and    eax,0x103008d7
  41b37e:	lea    ebx,[esi+0x2bd84986]
  41b384:	test   al,0xde
  41b386:	inc    ebx
  41b387:	(bad)  
  41b388:	jg     0x41b382
  41b38a:	retf   
  41b38b:	and    edx,esp
  41b38d:	xor    bh,BYTE PTR [edx-0x5c]
  41b390:	jmp    0x41b3b1
  41b392:	ror    eax,1
  41b394:	add    ebx,DWORD PTR [eax+0x1e2b829]
  41b39a:	cmc    
  41b39b:	cmp    al,0xcc
  41b39d:	(bad)  
  41b39e:	fiadd  WORD PTR [esi+0x34788f02]
  41b3a4:	add    BYTE PTR [edx],bh
  41b3a6:	fild   WORD PTR [edx-0x58]
  41b3a9:	inc    edi
  41b3aa:	addr16 in eax,0xa
  41b3ad:	xor    al,0xfd
  41b3af:	mov    bl,0xdc
  41b3b1:	sub    bl,dl
  41b3b3:	pop    ds
  41b3b4:	test   eax,0x56ecdeb0
  41b3b9:	dec    esi
  41b3ba:	shl    ebp,1
  41b3bc:	lods   al,BYTE PTR ds:[esi]
  41b3bd:	dec    ebp
  41b3be:	xchg   esp,eax
  41b3bf:	outs   dx,DWORD PTR ds:[esi]
  41b3c0:	xchg   ebx,eax
  41b3c1:	mov    eax,?
  41b3c3:	ficomp DWORD PTR [edx]
  41b3c5:	jecxz  0x41b360
  41b3c7:	inc    ebx
  41b3c8:	pop    eax
  41b3c9:	ins    DWORD PTR es:[edi],dx
  41b3ca:	pop    esp
  41b3cb:	xor    al,0xe7
  41b3cd:	sub    eax,0x302549a0
  41b3d2:	das    
  41b3d3:	xchg   ecx,eax
  41b3d4:	lods   al,BYTE PTR ds:[esi]
  41b3d5:	sbb    al,0x73
  41b3d7:	cmp    al,0x48
  41b3d9:	mov    ecx,0xe987a1d2
  41b3de:	adc    esp,ecx
  41b3e0:	cmp    DWORD PTR [ebx+ecx*8-0x789c86b2],edx
  41b3e7:	fcmove st,st(1)
  41b3e9:	jmp    0x41b3b6
  41b3eb:	das    
  41b3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ed:	sahf   
  41b3ee:	lds    ecx,FWORD PTR [ebx+edi*1]
  41b3f1:	scas   eax,DWORD PTR es:[edi]
  41b3f2:	pusha  
  41b3f3:	adc    eax,DWORD PTR [edx]
  41b3f5:	scas   eax,DWORD PTR es:[edi]
  41b3f6:	out    0x8c,eax
  41b3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3f9:	dec    ebx
  41b3fa:	iret   
  41b3fb:	aaa    
  41b3fc:	test   DWORD PTR [edx],0x8788d64d
  41b402:	sub    BYTE PTR [esi+0x30],al
  41b405:	fbld   TBYTE PTR [esp+eiz*2-0x59]
  41b409:	sub    DWORD PTR ds:0x61db1a59,0x898d5ac4
  41b413:	pop    ecx
  41b414:	dec    esp
  41b415:	mov    WORD PTR [ecx],cs
  41b417:	jmp    0xed1b:0x4a7f2baa
  41b41e:	or     BYTE PTR [edx+0x3fb1d9c2],ch
  41b424:	rcl    DWORD PTR [eax+0x15],1
  41b427:	xchg   DWORD PTR [eax-0x127b2470],eax
  41b42d:	xor    eax,DWORD PTR [edx+0x5e]
  41b430:	xor    ch,BYTE PTR ds:[eax-0x8a64b37]
  41b437:	push   ds
  41b438:	mov    esp,ecx
  41b43a:	fbstp  TBYTE PTR [ebx+ebx*1]
  41b43d:	scas   al,BYTE PTR es:[edi]
  41b43e:	ss pop edi
  41b440:	pop    esp
  41b441:	xor    ch,BYTE PTR [eax-0x2736bbef]
  41b447:	stc    
  41b448:	pop    esp
  41b449:	mov    dh,BYTE PTR [esi]
  41b44b:	mov    cl,0xce
  41b44d:	push   esp
  41b44e:	push   0x7b5d1791
  41b453:	sub    bh,BYTE PTR [edx]
  41b455:	push   ebx
  41b456:	xchg   ch,ah
  41b458:	mov    eax,0xcda4636d
  41b45d:	pop    ecx
  41b45e:	mov    esi,0xb30bb15b
  41b463:	push   cs
  41b464:	cmp    ebx,DWORD PTR [edi]
  41b466:	(bad)  
  41b467:	int3   
  41b468:	push   cs
  41b469:	mov    dl,0x73
  41b46b:	xchg   BYTE PTR [edi+0x32369658],ah
  41b471:	sub    dl,al
  41b473:	add    al,0x9f
  41b475:	inc    ebx
  41b476:	inc    esp
  41b477:	iret   
  41b478:	iret   
  41b479:	test   edx,0x701b0a97
  41b47f:	adc    ch,dh
  41b481:	aaa    
  41b482:	outs   dx,BYTE PTR ds:[esi]
  41b483:	outs   dx,BYTE PTR ds:[esi]
  41b484:	(bad)  
  41b485:	stos   DWORD PTR es:[edi],eax
  41b486:	mov    edi,0xa636bec2
  41b48b:	mov    eax,0x8d0e37db
  41b490:	ins    DWORD PTR es:[edi],dx
  41b491:	xchg   ecx,eax
  41b492:	inc    esi
  41b493:	add    cl,0x5f
  41b496:	shl    BYTE PTR [ebp+0x3c9dab77],cl
  41b49c:	imul   DWORD PTR [esi-0x7f]
  41b49f:	les    ebx,FWORD PTR [ebx]
  41b4a1:	repnz and al,0x6
  41b4a4:	sahf   
  41b4a5:	in     al,0x23
  41b4a7:	cmp    al,0xc7
  41b4a9:	cmp    al,0x63
  41b4ab:	adc    eax,esi
  41b4ad:	repz push edx
  41b4af:	jmp    0x41b500
  41b4b1:	in     al,dx
  41b4b2:	shr    DWORD PTR fs:[edi-0x56],1
  41b4b6:	mov    esi,0x31965b44
  41b4bb:	in     eax,dx
  41b4bc:	(bad)  
  41b4bd:	jmp    FWORD PTR [edx]
  41b4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c0:	and    BYTE PTR [esi+0x3],al
  41b4c3:	retf   0x973c
  41b4c6:	adc    DWORD PTR [ecx-0xb],esi
  41b4c9:	jbe    0x41b48c
  41b4cb:	inc    eax
  41b4cc:	and    eax,0xbc2e3b17
  41b4d1:	adc    edx,edx
  41b4d3:	push   ds
  41b4d4:	loop   0x41b468
  41b4d6:	and    DWORD PTR [ebx],edi
  41b4d8:	adc    ecx,DWORD PTR [ebx]
  41b4da:	xlat   BYTE PTR ds:[ebx]
  41b4db:	stc    
  41b4dc:	jp     0x41b4c6
  41b4de:	adc    BYTE PTR [ebp+0x72bb5a08],bl
  41b4e4:	jmp    0x99c5:0xed7820d0
  41b4eb:	or     al,0x1d
  41b4ed:	or     al,0x24
  41b4ef:	je     0x41b4d4
  41b4f1:	sbb    dh,bl
  41b4f3:	leave  
  41b4f4:	into   
  41b4f5:	movsx  edi,al
  41b4f8:	and    eax,0xfc0bbe71
  41b4fd:	and    DWORD PTR [esi-0x3e],eax
  41b500:	dec    edx
  41b501:	jbe    0x41b48f
  41b503:	push   ss
  41b504:	xchg   ebp,eax
  41b505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b506:	(bad)  
  41b507:	fist   DWORD PTR [edx+0x441dc3bb]
  41b50d:	sbb    BYTE PTR [ecx+0x5020a9ec],dh
  41b513:	hlt    
  41b514:	pop    ebx
  41b515:	dec    edx
  41b516:	push   ss
  41b517:	sub    al,0x87
  41b519:	mov    ah,0xe4
  41b51b:	add    bl,BYTE PTR [ecx+0x11]
  41b51e:	dec    BYTE PTR [ebx]
  41b520:	adc    al,BYTE PTR [eax+0x440c2868]
  41b526:	xor    DWORD PTR [eax+0x33],eax
  41b529:	adc    ah,dl
  41b52b:	test   BYTE PTR [ebx],cl
  41b52d:	in     eax,0xd6
  41b52f:	cdq    
  41b530:	addr16 mov ah,0x21
  41b533:	hlt    
  41b534:	push   ds
  41b535:	pop    edx
  41b536:	push   ebx
  41b537:	xor    BYTE PTR ds:0x31c4e675,al
  41b53d:	fistp  WORD PTR [edi-0x68]
  41b540:	mov    eax,0x6ffb0bac
  41b545:	pop    esi
  41b546:	pushf  
  41b547:	push   es
  41b548:	in     eax,0x80
  41b54a:	mov    dh,0x54
  41b54c:	out    dx,eax
  41b54d:	cld    
  41b54e:	push   ebx
  41b54f:	paddsw mm7,mm6
  41b552:	cmp    DWORD PTR [edx+0x33],eax
  41b555:	dec    ebx
  41b556:	mov    ds,WORD PTR ds:0xf7e0d905
  41b55c:	xor    edx,DWORD PTR [edx+0x70]
  41b55f:	sub    edx,ebx
  41b561:	popf   
  41b562:	push   ds
  41b563:	loop   0x41b52d
  41b565:	push   0xffffffd9
  41b567:	sbb    BYTE PTR [ebx],bh
  41b569:	mov    dh,0xd
  41b56b:	mov    ch,0xfe
  41b56d:	jl     0x41b5d0
  41b56f:	mov    edi,0x20d9167b
  41b575:	in     eax,0x14
  41b577:	mov    ecx,ebx
  41b579:	add    al,0x87
  41b57b:	adc    BYTE PTR [esi],ch
  41b57d:	xor    DWORD PTR [eax],edx
  41b57f:	shl    DWORD PTR [eax-0x7],1
  41b582:	jp     0x41b544
  41b584:	lock and esp,0x2d993fc
  41b58b:	pop    ecx
  41b58c:	xchg   ebx,eax
  41b58d:	mov    ah,0xda
  41b58f:	xchg   BYTE PTR [edi+0x78aa94a5],dh
  41b595:	aam    0x11
  41b597:	adc    al,0x4c
  41b599:	test   al,0x1c
  41b59b:	push   esp
  41b59c:	sub    eax,0xf41336d4
  41b5a1:	ins    BYTE PTR es:[edi],dx
  41b5a2:	pop    esp
  41b5a3:	bound  edx,QWORD PTR [edi+edx*2]
  41b5a6:	(bad)  
  41b5a7:	jle    0x41b551
  41b5a9:	jecxz  0x41b60f
  41b5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ac:	dec    edx
  41b5ad:	and    BYTE PTR [eax-0x11447194],0xdf
  41b5b4:	pop    es
  41b5b5:	pop    esi
  41b5b6:	or     DWORD PTR [ebx+0x7bed347d],esi
  41b5bc:	push   edi
  41b5bd:	(bad)  
  41b5be:	mov    edi,0xab5b0671
  41b5c3:	stc    
  41b5c4:	xchg   edx,eax
  41b5c5:	cmc    
  41b5c6:	jmp    0x41b5d4
  41b5c8:	or     al,BYTE PTR [ebp-0x6eff6f82]
  41b5ce:	(bad)  [esi-0x4bbab441]
  41b5d4:	imul   ebp,DWORD PTR [edi],0xd6326a26
  41b5da:	outs   dx,DWORD PTR ds:[esi]
  41b5db:	fistp  DWORD PTR [ebx+0x19]
  41b5de:	sbb    BYTE PTR [ecx-0x54],dh
  41b5e1:	sbb    bl,ch
  41b5e3:	popf   
  41b5e4:	inc    edx
  41b5e5:	daa    
  41b5e6:	out    dx,al
  41b5e7:	xchg   ebx,eax
  41b5e8:	retf   0xc8
  41b5eb:	adc    eax,ebp
  41b5ed:	jno    0x41b5b9
  41b5ef:	push   ss
  41b5f0:	arpl   WORD PTR [esp+eax*2+0x1b],si
  41b5f4:	jmp    0xbb03:0xcb70fdde
  41b5fb:	mov    esi,DWORD PTR [ebx+0x7ad8b5b5]
  41b601:	pop    esi
  41b602:	repnz imul ebp,DWORD PTR [ecx],0x8ec9ba36
  41b609:	bnd jg 0x41b5d7
  41b60c:	test   dh,0xfc
  41b60f:	aaa    
  41b610:	cmp    ecx,DWORD PTR [ecx-0x3e]
  41b613:	sub    edx,DWORD PTR [esi+0x5651d2d5]
  41b619:	shl    DWORD PTR [edx+0x525a354],cl
  41b61f:	fldenv [edi+0x46]
  41b622:	xor    cl,ah
  41b624:	jns    0x41b5e9
  41b626:	int3   
  41b627:	rcl    DWORD PTR [edx],0x9
  41b62a:	xor    edx,ebp
  41b62c:	sub    DWORD PTR [ecx-0x4661378e],ebp
  41b632:	inc    esp
  41b633:	sub    eax,0x6005d8d8
  41b638:	mov    DWORD PTR [edi-0x50ee1675],ebp
  41b63e:	jmp    0x5b925798
  41b643:	adc    ah,BYTE PTR [eax-0x5e]
  41b646:	into   
  41b647:	or     al,0xa8
  41b649:	jne    0x41b6c5
  41b64b:	test   eax,0x5251266
  41b650:	dec    ebx
  41b651:	inc    esp
  41b652:	shl    bl,1
  41b654:	mov    edx,0xff98245f
  41b659:	and    eax,ebx
  41b65b:	mov    fs,WORD PTR [ecx+0x0]
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	int    0x7d
  41b670:	pop    esi
  41b671:	pop    ebp
  41b672:	xor    BYTE PTR [edx],0x1
  41b675:	add    bl,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [ebx-0x2f],ah
  41b67c:	or     dh,dh
  41b67e:	cli    
  41b67f:	aas    
  41b680:	popa   
  41b681:	mov    ebx,0x4ea71f26
  41b686:	cld    
  41b687:	xor    BYTE PTR [ecx-0x611f70d2],cl
  41b68d:	xchg   ebx,esp
  41b68f:	jle    0x41b649
  41b691:	int3   
  41b692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b693:	(bad)  [eax+0x44d2295f]
  41b699:	pop    edx
  41b69a:	in     al,0xf6
  41b69c:	lods   al,BYTE PTR ds:[esi]
  41b69d:	or     eax,DWORD PTR [eax-0x6d]
  41b6a0:	mov    edi,0x1de0765c
  41b6a5:	mov    ds:0x9b61647,eax
  41b6aa:	mov    ds:0x1fadbf0e,al
  41b6af:	mov    ch,0xba
  41b6b1:	test   eax,0x78a35c7a
  41b6b6:	add    DWORD PTR [ecx],0xfffffffb
  41b6b9:	mov    ebx,0x9145e3a8
  41b6be:	mov    edx,0xbe6bdbb4
  41b6c3:	inc    BYTE PTR [esi]
  41b6c5:	les    ecx,FWORD PTR [ebp+esi*1+0x12]
  41b6c9:	mov    ch,ah
  41b6cb:	scas   al,BYTE PTR es:[edi]
  41b6cc:	push   esi
  41b6cd:	rcl    BYTE PTR [edi-0x37],1
  41b6d0:	mov    esi,0x1ca6b1a7
  41b6d5:	inc    edi
  41b6d6:	(bad)
  41b6da:	stos   BYTE PTR es:[edi],al
  41b6db:	aam    0x30
  41b6dd:	jns    0x41b756
  41b6df:	pop    ss
  41b6e0:	xor    ah,bl
  41b6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e3:	imul   ebp,DWORD PTR [edx],0xffffffb5
  41b6e6:	xor    BYTE PTR ds:0x5a67c7e6,dh
  41b6ec:	shl    dl,0xb0
  41b6ef:	push   ds
  41b6f0:	adc    edx,eax
  41b6f2:	(bad)  
  41b6f3:	mov    esp,0x8f7d2a95
  41b6f8:	sbb    al,BYTE PTR [edi+0x52]
  41b6fb:	mul    BYTE PTR [edx]
  41b6fd:	je     0x41b6f9
  41b6ff:	test   al,0x28
  41b701:	xchg   edx,eax
  41b702:	mov    ds:0xdc807f47,eax
  41b707:	jbe    0x41b6d2
  41b709:	mov    al,ds:0x9dfcccc1
  41b70e:	pusha  
  41b70f:	jl     0x41b784
  41b711:	xlat   BYTE PTR ds:[ebx]
  41b712:	fwait
  41b713:	dec    edx
  41b714:	mov    cl,0x4b
  41b716:	pop    edx
  41b717:	sub    dl,BYTE PTR [edi-0xb]
  41b71a:	das    
  41b71b:	add    al,0x81
  41b71d:	sti    
  41b71e:	xchg   ebp,eax
  41b71f:	pop    ebx
  41b720:	sub    eax,0x11ca7452
  41b725:	push   0xffffffcd
  41b727:	stc    
  41b728:	scas   al,BYTE PTR es:[edi]
  41b729:	pop    ecx
  41b72a:	pop    esi
  41b72b:	stos   DWORD PTR es:[edi],eax
  41b72c:	ror    ecx,0xb0
  41b72f:	push   esp
  41b730:	pop    esp
  41b731:	outs   dx,DWORD PTR ds:[esi]
  41b732:	pop    esi
  41b733:	sbb    BYTE PTR [ecx],al
  41b735:	call   0xa3b5afe2
  41b73a:	retf   0x78e6
  41b73d:	jle    0x41b741
  41b73f:	(bad)  
  41b740:	mov    bl,0x84
  41b742:	test   esp,edi
  41b744:	add    cl,BYTE PTR [esi]
  41b746:	test   eax,0xbb46c6f2
  41b74b:	shl    cl,1
  41b74d:	jae    0x41b733
  41b74f:	pusha  
  41b750:	jae    0x41b7cf
  41b752:	mov    ebp,0xf756bcaf
  41b757:	mov    dl,0x13
  41b759:	enter  0xd975,0xf7
  41b75d:	mov    ah,BYTE PTR [edx-0x26]
  41b760:	shl    DWORD PTR [edi-0x7c],0xe4
  41b764:	push   eax
  41b765:	hlt    
  41b766:	and    edi,edx
  41b768:	xor    eax,0xdaa9e70c
  41b76d:	iret   
  41b76e:	xchg   BYTE PTR [eax],ah
  41b770:	mov    esi,0x8b39fd8b
  41b775:	and    edi,DWORD PTR [edx+edi*4]
  41b778:	sub    ah,BYTE PTR [edx+ecx*1+0x65]
  41b77c:	jl     0x41b704
  41b77e:	ds cmp eax,0x6b6a0ec7
  41b784:	gs std 
  41b786:	popa   
  41b787:	push   0x45
  41b789:	in     al,0x35
  41b78b:	jecxz  0x41b7f0
  41b78d:	jns    0x41b77f
  41b78f:	test   BYTE PTR [edx-0x3a],al
  41b792:	(bad)  [ebx]
  41b794:	enter  0xb15f,0xe0
  41b798:	mov    eax,ds:0x5999d7fa
  41b79d:	imul   eax,DWORD PTR [ebx],0xffffffa5
  41b7a0:	and    esp,DWORD PTR [edx+0x2c]
  41b7a3:	add    esi,DWORD PTR [edi-0x50]
  41b7a6:	and    esi,DWORD PTR [edi]
  41b7a8:	shr    BYTE PTR [edx-0x7d],0xe8
  41b7ac:	mov    eax,0xc1baeafc
  41b7b1:	retf   0x5641
  41b7b4:	mov    DWORD PTR [edx],edi
  41b7b6:	in     eax,dx
  41b7b7:	mov    eax,0x1004f92c
  41b7bc:	rol    DWORD PTR [edx],1
  41b7be:	pushf  
  41b7bf:	sbb    DWORD PTR [edi+0x42],esi
  41b7c2:	into   
  41b7c3:	inc    esp
  41b7c4:	shl    ch,0xaa
  41b7c7:	and    DWORD PTR [ebp+0x58ff7caf],ecx
  41b7cd:	stos   DWORD PTR es:[edi],eax
  41b7ce:	ss sti 
  41b7d0:	jne    0x41b833
  41b7d2:	pushf  
  41b7d3:	into   
  41b7d4:	(bad)
  41b7d7:	inc    ebx
  41b7d8:	lea    edx,[esi]
  41b7da:	rdmsr  
  41b7dc:	cld    
  41b7dd:	stos   BYTE PTR es:[edi],al
  41b7de:	ins    BYTE PTR es:[edi],dx
  41b7df:	xchg   esp,eax
  41b7e0:	mov    ds:0x15693635,al
  41b7e5:	stos   BYTE PTR es:[edi],al
  41b7e6:	mov    edi,0x15ed04de
  41b7eb:	leave  
  41b7ec:	stc    
  41b7ed:	mov    al,0x9f
  41b7ef:	mov    ds:0x9089bb6c,eax
  41b7f4:	jae    0x41b847
  41b7f6:	mov    al,0x3e
  41b7f8:	aam    0xa4
  41b7fa:	push   0x890f2c74
  41b7ff:	xchg   ebp,eax
  41b800:	adc    ch,BYTE PTR [ecx+0x6a194cae]
  41b806:	dec    eax
  41b807:	xor    eax,0x7b4601a9
  41b80c:	icebp  
  41b80d:	inc    eax
  41b80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80f:	fsubr  DWORD PTR [edx]
  41b811:	ds ja  0x41b7fc
  41b814:	add    al,0xf2
  41b816:	mov    ch,0xe5
  41b818:	cwde   
  41b819:	jnp    0x41b894
  41b81b:	je     0x41b82d
  41b81d:	xchg   ecx,eax
  41b81e:	sub    BYTE PTR [esi+0x3c],cl
  41b821:	mov    ch,BYTE PTR [edi]
  41b823:	xor    edi,DWORD PTR [ebp+0x42]
  41b826:	mov    BYTE PTR [eax+0x115cb447],ah
  41b82c:	mov    al,0x35
  41b82e:	addr16 pop edi
  41b830:	xchg   DWORD PTR [eax-0x18b3a73b],esp
  41b836:	xchg   esp,eax
  41b837:	push   esi
  41b838:	dec    DWORD PTR [ecx]
  41b83a:	pop    ds
  41b83b:	adc    DWORD PTR [ebx+0x29d971e3],ecx
  41b841:	in     al,0xb
  41b843:	test   ecx,ebp
  41b845:	cli    
  41b846:	mov    dh,0x63
  41b848:	add    ch,bh
  41b84a:	cmp    ebx,DWORD PTR [esi+0x34]
  41b84d:	imul   eax,DWORD PTR [esi+0x18c7156e],0xb366f105
  41b857:	ret    0x498d
  41b85a:	or     ch,BYTE PTR [ecx]
  41b85c:	lods   eax,DWORD PTR ds:[esi]
  41b85d:	das    
  41b85e:	jmp    0x41b844
  41b860:	xchg   bh,ch
  41b862:	shl    BYTE PTR [eax-0x6cf46bbd],cl
  41b868:	stos   DWORD PTR es:[edi],eax
  41b869:	and    al,0xce
  41b86b:	rcl    BYTE PTR [ecx],cl
  41b86d:	mov    al,gs:0xa15991bc
  41b873:	mov    eax,0x340ef9d1
  41b878:	inc    DWORD PTR [eax-0x771e3970]
  41b87e:	das    
  41b87f:	push   eax
  41b880:	push   0x1c
  41b882:	(bad)  
  41b883:	mov    al,0x69
  41b885:	mov    DWORD PTR [ecx+0x60],edi
  41b888:	cmc    
  41b889:	mov    bl,0x4a
  41b88b:	out    dx,eax
  41b88c:	leave  
  41b88d:	pop    ds
  41b88e:	mov    bl,0x88
  41b890:	jo     0x41b90c
  41b892:	pop    es
  41b893:	shr    dh,cl
  41b895:	push   edi
  41b896:	mov    edx,0x73ad7e95
  41b89b:	in     eax,dx
  41b89c:	jbe    0x41b864
  41b89e:	pop    esi
  41b89f:	stc    
  41b8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a1:	mov    WORD PTR [ecx],gs
  41b8a3:	jl     0x41b84d
  41b8a5:	or     ah,BYTE PTR [esi-0x224d7ff6]
  41b8ab:	retf   0xdb28
  41b8ae:	sbb    DWORD PTR [esi+0xd692fa1],eax
  41b8b4:	xlat   BYTE PTR ds:[ebx]
  41b8b5:	xlat   BYTE PTR ds:[ebx]
  41b8b6:	push   esi
  41b8b7:	xchg   edx,eax
  41b8b8:	pop    es
  41b8b9:	pop    ecx
  41b8ba:	(bad)  
  41b8bb:	jbe    0x41b8fe
  41b8bd:	bound  esi,QWORD PTR [edx]
  41b8bf:	sbb    DWORD PTR [ebp-0x62],ecx
  41b8c2:	cs jge 0x41b921
  41b8c5:	push   ss
  41b8c6:	dec    esi
  41b8c7:	addr16 fmul st,st(1)
  41b8ca:	cmp    ecx,ebp
  41b8cc:	adc    al,0x29
  41b8ce:	sub    al,0x99
  41b8d0:	cmp    esi,DWORD PTR [edx+0x45]
  41b8d3:	pop    es
  41b8d4:	enter  0xa45c,0xbe
  41b8d8:	cmp    al,0x5b
  41b8da:	jle    0x41b8fb
  41b8dc:	mov    ah,0x2
  41b8de:	ins    BYTE PTR es:[edi],dx
  41b8df:	add    ch,ch
  41b8e1:	cwde   
  41b8e2:	(bad)  
  41b8e3:	not    BYTE PTR [esi+0x31]
  41b8e6:	push   ss
  41b8e7:	mov    ss,WORD PTR [eax+0x5b]
  41b8ea:	adc    al,0x5e
  41b8ec:	push   edx
  41b8ed:	adc    eax,0xcb0404d7
  41b8f2:	push   ebp
  41b8f3:	cli    
  41b8f4:	aas    
  41b8f5:	mov    dh,0x6b
  41b8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f8:	ja     0x41b8f2
  41b8fa:	aam    0x96
  41b8fc:	or     dh,bl
  41b8fe:	aam    0xa9
  41b900:	retf   0x234e
  41b903:	push   0xea835619
  41b908:	dec    edx
  41b909:	xchg   ecx,eax
  41b90a:	test   esi,esi
  41b90c:	icebp  
  41b90d:	pop    ds
  41b90e:	and    eax,0x1427a56f
  41b913:	les    ebp,FWORD PTR [edx-0x1e386d34]
  41b919:	push   0xea6ffa2
  41b91e:	add    eax,0xff6abe82
  41b923:	fcom   QWORD PTR [esi+0x18ced52b]
  41b929:	push   edx
  41b92a:	xlat   BYTE PTR ds:[ebx]
  41b92b:	and    DWORD PTR [edx-0x16],0x42
  41b92f:	clc    
  41b930:	in     al,dx
  41b931:	cli    
  41b932:	sub    DWORD PTR [edx+eax*1],0x3e
  41b936:	push   0x2d
  41b938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b939:	in     eax,dx
  41b93a:	dec    eax
  41b93b:	sahf   
  41b93c:	in     al,0xad
  41b93e:	push   esp
  41b93f:	cmp    al,0x2a
  41b941:	int3   
  41b942:	aad    0xa9
  41b944:	inc    esi
  41b945:	jno    0x41b9b7
  41b947:	into   
  41b948:	mov    ch,0x86
  41b94a:	inc    ebx
  41b94b:	xlat   BYTE PTR ds:[ebx]
  41b94c:	jmp    0x41b954
  41b94e:	ficomp WORD PTR [ecx+ecx*2+0x55]
  41b952:	test   al,0xaa
  41b954:	cs cmc 
  41b956:	mov    ds:0xe79e22cd,al
  41b95b:	mov    edx,0xfd06d4f
  41b960:	mov    cl,0x85
  41b962:	pusha  
  41b963:	inc    edi
  41b964:	mov    ch,0xa8
  41b966:	mov    ah,0x8
  41b968:	(bad)
  41b96b:	push   ss
  41b96c:	jnp    0x41b970
  41b96e:	loop   0x41b94f
  41b970:	ret    
  41b971:	dec    esp
  41b972:	cwde   
  41b973:	xchg   edi,eax
  41b974:	retf   
  41b975:	jnp    0x41b97e
  41b977:	jecxz  0x41b940
  41b979:	jnp    0x41b9b9
  41b97b:	(bad)  
  41b97c:	pop    edi
  41b97d:	mov    ah,BYTE PTR [esi-0xe67db9d]
  41b983:	and    esp,esi
  41b985:	push   edx
  41b986:	mov    al,ds:0xe3db7449
  41b98b:	test   al,0xe0
  41b98d:	push   eax
  41b98e:	inc    esi
  41b98f:	int    0x98
  41b991:	mov    ecx,0x72e78512
  41b996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b997:	aad    0x99
  41b999:	loope  0x41b9b3
  41b99b:	inc    esp
  41b99c:	icebp  
  41b99d:	ret    0x5609
  41b9a0:	pop    ecx
  41b9a1:	popf   
  41b9a2:	cdq    
  41b9a3:	(bad)  
  41b9a4:	popa   
  41b9a5:	mov    bl,0x38
  41b9a7:	into   
  41b9a8:	and    ebp,edi
  41b9aa:	or     al,0xe9
  41b9ac:	pop    ds
  41b9ad:	(bad)  
  41b9ae:	dec    DWORD PTR [esi-0xe]
  41b9b1:	pop    DWORD PTR [ebp+0x46]
  41b9b4:	fdivr  DWORD PTR [eax]
  41b9b6:	gs xchg edi,eax
  41b9b8:	adc    al,ch
  41b9ba:	stos   BYTE PTR es:[edi],al
  41b9bb:	test   BYTE PTR [edi-0x26],bh
  41b9be:	jg     0x41b9e1
  41b9c0:	lock loope 0x41b985
  41b9c3:	jbe    0x41b9d7
  41b9c5:	inc    edx
  41b9c6:	xchg   ebx,eax
  41b9c7:	test   ebp,eax
  41b9c9:	pop    edx
  41b9ca:	dec    esi
  41b9cb:	mov    edi,0x89f3f924
  41b9d0:	xchg   esi,eax
  41b9d1:	and    BYTE PTR [esi+0x3021a710],dl
  41b9d7:	pop    edi
  41b9d8:	fdiv   DWORD PTR [eax-0x5c]
  41b9db:	cmc    
  41b9dc:	ss push ds
  41b9de:	mov    bl,0xbe
  41b9e0:	mov    BYTE PTR [edi],bl
  41b9e2:	and    eax,0x964547a9
  41b9e8:	adc    BYTE PTR [esi],cl
  41b9ea:	dec    esi
  41b9eb:	sub    dl,0xc0
  41b9ee:	(bad)  
  41b9ef:	lsl    ebp,WORD PTR [ecx-0x28ab5ce]
  41b9f6:	dec    edi
  41b9f7:	mov    dh,0xad
  41b9f9:	stc    
  41b9fa:	pop    edi
  41b9fb:	sti    
  41b9fc:	adc    cl,BYTE PTR [ecx+0x59]
  41b9ff:	stc    
  41ba00:	push   eax
  41ba01:	xor    al,0x98
  41ba03:	mov    BYTE PTR [ebx+0x52e67e6d],bh
  41ba09:	stos   DWORD PTR es:[edi],eax
  41ba0a:	add    ch,cl
  41ba0c:	jle    0x41ba23
  41ba0e:	inc    edi
  41ba0f:	push   esi
  41ba10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba11:	mov    eax,0x6b13091a
  41ba16:	jb     0x41ba88
  41ba18:	aaa    
  41ba19:	cmp    al,0x17
  41ba1b:	fs in  eax,dx
  41ba1d:	pusha  
  41ba1e:	mov    bh,0xf9
  41ba20:	cmp    edx,esp
  41ba22:	pop    es
  41ba23:	push   edi
  41ba24:	in     eax,dx
  41ba25:	inc    eax
  41ba26:	imul   ebx,DWORD PTR [edx],0xffffffbc
  41ba29:	jecxz  0x41ba97
  41ba2b:	fidivr DWORD PTR [ecx+0x5e]
  41ba2e:	mov    ch,0x3f
  41ba30:	ror    esi,1
  41ba32:	(bad)  
  41ba33:	out    dx,eax
  41ba34:	stos   BYTE PTR es:[edi],al
  41ba35:	xchg   edi,eax
  41ba36:	mov    edi,0x58eeb9c0
  41ba3b:	xchg   edi,eax
  41ba3c:	outs   dx,BYTE PTR ds:[esi]
  41ba3d:	adc    eax,0xbd42edba
  41ba42:	pop    edi
  41ba43:	fsubp  st(7),st
  41ba45:	mov    ah,0x6
  41ba47:	lea    eax,[edx+0x4065d243]
  41ba4d:	sub    esi,esi
  41ba4f:	in     eax,0x3c
  41ba51:	mov    bh,0x26
  41ba53:	clc    
  41ba54:	push   es
  41ba55:	enter  0xb330,0x19
  41ba59:	stos   BYTE PTR es:[edi],al
  41ba5a:	sahf   
  41ba5b:	jmp    0x31d637a4
  41ba60:	cmp    DWORD PTR [eax+0xf6c37cc],ebp
  41ba66:	hlt    
  41ba67:	fs pop esi
  41ba69:	fwait
  41ba6a:	push   edx
  41ba6b:	rol    esp,1
  41ba6d:	cld    
  41ba6e:	cmp    eax,0x897fce0e
  41ba73:	adc    DWORD PTR [esi-0xcbe3ef4],ebp
  41ba79:	int    0x13
  41ba7b:	adc    dl,BYTE PTR [ecx+0x35]
  41ba7e:	jg     0x41bada
  41ba80:	push   esp
  41ba81:	in     al,0x27
  41ba83:	mov    edx,edi
  41ba85:	call   0x595c714c
  41ba8a:	fisub  WORD PTR [edi-0x4da76c28]
  41ba90:	add    cl,ah
  41ba92:	pop    ecx
  41ba93:	xor    al,0x93
  41ba95:	xchg   edi,eax
  41ba96:	mov    esi,0xc4dcb714
  41ba9b:	xchg   edx,eax
  41ba9c:	lds    eax,FWORD PTR [edx]
  41ba9e:	pop    edi
  41ba9f:	mov    esi,0x2c97c1d1
  41baa4:	push   0xffffffcc
  41baa6:	mov    bl,0x97
  41baa8:	fcmove st,st(6)
  41baaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baab:	shl    BYTE PTR [esi],1
  41baad:	sti    
  41baae:	fadd   DWORD PTR [ecx]
  41bab0:	jmp    0x41ba6f
  41bab2:	mov    ds:0x20f4a28e,al
  41bab7:	xor    eax,0x7e574c03
  41babc:	inc    esp
  41babd:	push   cs
  41babe:	fdiv   DWORD PTR [ecx]
  41bac0:	fucomip st,st(5)
  41bac2:	jae    0x41bb05
  41bac4:	addr16 call 0x6d82:0x6524b54d
  41bacc:	mov    eax,0x61a33975
  41bad1:	call   0xd8cd:0x383ada2d
  41bad8:	or     eax,0xaf525f4
  41bade:	out    dx,al
  41badf:	jns    0x41bada
  41bae1:	sub    eax,0xbc6053c3
  41bae6:	repz pop eax
  41bae8:	inc    ebx
  41bae9:	mov    ecx,DWORD PTR [ebp-0x1b4c6988]
  41baef:	ret    
  41baf0:	sub    BYTE PTR [ecx],bl
  41baf2:	popf   
  41baf3:	mov    edi,esp
  41baf5:	cmc    
  41baf6:	add    al,0x2d
  41baf8:	push   eax
  41baf9:	sbb    al,0x2c
  41bafb:	adc    BYTE PTR ds:0xc282f9b6,dl
  41bb01:	cmp    al,0x46
  41bb03:	pop    ecx
  41bb04:	idiv   DWORD PTR [ebp-0x577b5ba7]
  41bb0a:	cmp    al,0x68
  41bb0c:	jmp    0xacae98f6
  41bb11:	mov    bl,0x6b
  41bb13:	adc    ecx,ecx
  41bb15:	xchg   ebx,eax
  41bb16:	loope  0x41bb84
  41bb18:	jae    0x41bb8e
  41bb1a:	enter  0x2321,0x65
  41bb1e:	ret    0xd8ea
  41bb21:	sbb    eax,0x2bc46e3c
  41bb26:	pop    edi
  41bb27:	in     eax,0x28
  41bb29:	adc    al,0xe8
  41bb2b:	(bad)  
  41bb2d:	fwait
  41bb2e:	es sub eax,0x530068de
  41bb34:	test   al,0x89
  41bb36:	js     0x41bb07
  41bb38:	mov    cl,BYTE PTR [ecx+0x5690884d]
  41bb3e:	call   FWORD PTR [ecx+0x1d]
  41bb41:	push   es
  41bb42:	xlat   BYTE PTR ds:[ebx]
  41bb43:	pushf  
  41bb44:	jle    0x41bb0c
  41bb46:	enter  0xa62f,0x3f
  41bb4a:	cli    
  41bb4b:	clc    
  41bb4c:	lock mov ecx,0xbcffe39f
  41bb52:	arpl   WORD PTR [edi-0x29],bp
  41bb55:	push   ebx
  41bb56:	inc    esp
  41bb57:	mov    ds:0xc2cf5c05,al
  41bb5c:	rcr    edx,cl
  41bb5e:	or     BYTE PTR [ebp-0x9],cl
  41bb61:	jb     0x41bbd3
  41bb63:	jae    0x41bbb6
  41bb65:	cwde   
  41bb66:	scas   eax,DWORD PTR es:[edi]
  41bb67:	push   eax
  41bb68:	push   ds
  41bb69:	outs   dx,BYTE PTR ds:[esi]
  41bb6a:	out    dx,eax
  41bb6b:	jo     0x41bb55
  41bb6d:	add    BYTE PTR [eax],al
  41bb6f:	add    BYTE PTR [eax],al
  41bb71:	add    dh,ah
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x30442583
  41bb7f:	push   0x3775d086
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repz add al,0x0
  41bb89:	add    al,dh
  41bb8b:	mov    al,ds:0xc717d92e
  41bb90:	inc    esi
  41bb91:	outs   dx,DWORD PTR ds:[esi]
  41bb92:	sbb    bl,cl
  41bb94:	inc    edi
  41bb95:	push   eax
  41bb96:	xlat   BYTE PTR ds:[ebx]
  41bb97:	lods   eax,DWORD PTR ds:[esi]
  41bb98:	dec    edx
  41bb99:	popf   
  41bb9a:	punpcklbw mm6,DWORD PTR [eax]
  41bb9d:	mov    bl,0xee
  41bb9f:	das    
  41bba0:	(bad)  
  41bba1:	ds ds mov bh,0xb9
  41bba5:	ret    
  41bba6:	and    al,0x98
  41bba8:	push   edx
  41bba9:	xor    BYTE PTR [edi+0x2f],ah
  41bbac:	xchg   edx,eax
  41bbad:	enter  0x8489,0x58
  41bbb1:	xlat   BYTE PTR ds:[ebx]
  41bbb2:	mov    ebx,0x2b218972
  41bbb7:	sbb    edi,DWORD PTR [edx+0x2204cfae]
  41bbbd:	sbb    esi,0xffffff93
  41bbc0:	mov    esi,0x6794f499
  41bbc5:	or     ah,BYTE PTR [edx]
  41bbc7:	je     0x41bc24
  41bbc9:	xchg   ebp,eax
  41bbca:	inc    ebp
  41bbcb:	(bad)  
  41bbcc:	mov    esp,0xdea46b80
  41bbd1:	pop    edx
  41bbd2:	inc    dl
  41bbd4:	or     edx,DWORD PTR [ebx]
  41bbd6:	or     al,0xbe
  41bbd8:	add    edi,DWORD PTR [ecx]
  41bbda:	lock push edx
  41bbdc:	loopne 0x41bb6b
  41bbde:	mov    al,0x98
  41bbe0:	dec    esp
  41bbe1:	xchg   edi,eax
  41bbe2:	xor    DWORD PTR [esi+edx*4],0xffffffc8
  41bbe6:	jne    0x41bc0b
  41bbe8:	cwde   
  41bbe9:	fdivr  QWORD PTR [esi]
  41bbeb:	aad    0x4a
  41bbed:	cmp    BYTE PTR [edx],cl
  41bbef:	mov    edx,0x7277b557
  41bbf4:	pushf  
  41bbf5:	sbb    BYTE PTR [edx],dl
  41bbf7:	(bad)  
  41bbf9:	fimul  WORD PTR [esi]
  41bbfb:	test   BYTE PTR [edi+0x23fd287a],ch
  41bc01:	and    esi,ebx
  41bc03:	push   0x32
  41bc05:	mov    bh,0x71
  41bc07:	stos   DWORD PTR es:[edi],eax
  41bc08:	bound  ebx,QWORD PTR [ecx]
  41bc0a:	sti    
  41bc0b:	enter  0x2fff,0xf9
  41bc0f:	int3   
  41bc10:	pop    ss
  41bc11:	push   esi
  41bc12:	(bad)  
  41bc13:	jmp    0x6de5f7d5
  41bc18:	mov    BYTE PTR [esi-0x53],al
  41bc1b:	xchg   ecx,eax
  41bc1c:	out    0xee,al
  41bc1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1f:	jbe    0x41bbca
  41bc21:	ins    BYTE PTR es:[edi],dx
  41bc22:	inc    eax
  41bc23:	push   eax
  41bc24:	scas   eax,DWORD PTR es:[edi]
  41bc25:	sub    bl,cl
  41bc27:	add    eax,0xb4a3c6c2
  41bc2c:	mov    bl,0xbe
  41bc2e:	(bad)  
  41bc2f:	pop    edi
  41bc30:	cmp    DWORD PTR [eax-0x5],eax
  41bc33:	push   ds
  41bc34:	xchg   edx,eax
  41bc35:	daa    
  41bc36:	cdq    
  41bc37:	fidivr WORD PTR [ebx+0x69]
  41bc3a:	in     al,0x92
  41bc3c:	inc    ebx
  41bc3d:	jne    0x41bc32
  41bc3f:	in     eax,0xf7
  41bc41:	lock sti 
  41bc43:	xor    esi,DWORD PTR [eax+0x582ece4c]
  41bc49:	aas    
  41bc4a:	xchg   esi,eax
  41bc4b:	jge    0x41bc1f
  41bc4d:	and    eax,0x9a4b6834
  41bc52:	lds    eax,FWORD PTR ds:0x1d18ced9
  41bc58:	bound  ecx,QWORD PTR [eax+0x78]
  41bc5b:	mov    esi,DWORD PTR [eax-0xeb3b012]
  41bc61:	xor    esi,ebx
  41bc63:	icebp  
  41bc64:	jb     0x41bc4f
  41bc66:	mov    ebp,0xbb55010e
  41bc6b:	and    esi,eax
  41bc6d:	loop   0x41bc21
  41bc6f:	repz out 0x6,eax
  41bc72:	sbb    eax,0xd01e4ce8
  41bc77:	xchg   esp,eax
  41bc78:	adc    al,0x4
  41bc7a:	stos   BYTE PTR es:[edi],al
  41bc7b:	jae    0x41bc29
  41bc7d:	xor    BYTE PTR [ebp+0x22],dh
  41bc80:	cmp    eax,0x45446c77
  41bc85:	arpl   WORD PTR [ebx+0x6e],bp
  41bc88:	xchg   esp,eax
  41bc89:	cld    
  41bc8a:	sbb    ah,ch
  41bc8c:	push   ds
  41bc8d:	mov    esi,ecx
  41bc8f:	jae    0x41bcf0
  41bc91:	imul   ebp,DWORD PTR [edx],0x0
  41bc94:	pop    edi
  41bc95:	or     BYTE PTR [esi+0x3b],ah
  41bc98:	sti    
  41bc99:	std    
  41bc9a:	push   esp
  41bc9b:	inc    esp
  41bc9c:	fistp  QWORD PTR [eax]
  41bc9e:	sub    al,0x3
  41bca0:	dec    eax
  41bca1:	adc    eax,0xa2bb7134
  41bca6:	sub    ch,al
  41bca8:	mov    ebp,0xb937d971
  41bcad:	cli    
  41bcae:	cmp    ch,BYTE PTR es:[esi]
  41bcb1:	dec    esi
  41bcb2:	retf   
  41bcb3:	push   esi
  41bcb4:	jbe    0x41bcc9
  41bcb6:	pop    edi
  41bcb7:	adc    edx,DWORD PTR [edi]
  41bcb9:	pop    eax
  41bcba:	add    al,BYTE PTR [ebp*4+0xdeb226d]
  41bcc1:	cmc    
  41bcc2:	sub    DWORD PTR [edx+eiz*1+0x412bbd1b],esi
  41bcc9:	les    esi,FWORD PTR [edx+eax*4-0x246c7300]
  41bcd0:	popf   
  41bcd1:	xchg   esp,eax
  41bcd3:	pop    ecx
  41bcd4:	push   edx
  41bcd5:	push   es
  41bcd6:	sbb    BYTE PTR [edx],bl
  41bcd8:	test   DWORD PTR [ecx+0x48],esi
  41bcdb:	push   ebx
  41bcdc:	sbb    eax,0x65a49ec3
  41bce1:	mov    cl,0xf8
  41bce3:	imul   edi,DWORD PTR [edx+0x426402ef],0x39
  41bcea:	imul   edi,DWORD PTR [edx-0x51],0xffffffa9
  41bcee:	aam    0x56
  41bcf0:	fldcw  WORD PTR [ebx-0x98158a5]
  41bcf6:	call   0xeaf8:0x9d852117
  41bcfd:	lahf   
  41bcfe:	adc    bh,BYTE PTR [edx]
  41bd00:	jns    0x41bcfb
  41bd02:	push   edi
  41bd03:	ret    
  41bd04:	xor    al,ch
  41bd06:	sub    esi,DWORD PTR ss:[esi]
  41bd09:	(bad)  
  41bd0a:	(bad)  
  41bd0c:	ss fwait
  41bd0e:	push   ds
  41bd0f:	cmp    eax,0x396a55c6
  41bd14:	xchg   ecx,eax
  41bd15:	and    eax,DWORD PTR [ebp+edx*2-0x27]
  41bd19:	jmp    0x3d90ac87
  41bd1e:	sub    al,0x2c
  41bd20:	leave  
  41bd21:	lock int 0x4f
  41bd24:	mov    al,0xe8
  41bd26:	cmc    
  41bd27:	pop    edx
  41bd28:	push   0xfcd0883a
  41bd2d:	ret    
  41bd2e:	xor    ch,BYTE PTR [ebx]
  41bd30:	in     eax,0xae
  41bd32:	jb     0x41bcce
  41bd34:	js     0x41bd4e
  41bd36:	xor    DWORD PTR [edi+ebp*4-0x15],ecx
  41bd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3b:	bound  eax,QWORD PTR [esi+0x38]
  41bd3e:	xlat   BYTE PTR ds:[ebx]
  41bd3f:	sbb    dl,0xd2
  41bd42:	leave  
  41bd43:	xchg   ecx,eax
  41bd44:	jge    0x41bd7c
  41bd46:	repnz mov eax,ds:0x65a3c39d
  41bd4c:	cmp    eax,0x39cf051b
  41bd51:	jne    0x41bd45
  41bd53:	pop    esi
  41bd54:	cmp    BYTE PTR [ecx],cl
  41bd56:	jae    0x41bd31
  41bd58:	in     eax,dx
  41bd59:	(bad)  
  41bd5b:	mov    ah,bh
  41bd5d:	inc    ebp
  41bd5e:	cs push 0x8010d736
  41bd64:	dec    eax
  41bd65:	and    al,0x81
  41bd67:	add    DWORD PTR [ebx+0x551c0b11],eax
  41bd6d:	push   ebx
  41bd6e:	mov    ds:0x6f6111,eax
  41bd73:	ins    DWORD PTR es:[edi],dx
  41bd74:	inc    ebx
  41bd75:	dec    ebp
  41bd76:	cmp    ecx,ebx
  41bd78:	add    eax,0x69ff9b40
  41bd7d:	cmp    al,0x34
  41bd7f:	sbb    al,0xee
  41bd81:	int    0xdd
  41bd83:	xor    BYTE PTR [ebx],ah
  41bd85:	xor    eax,0x167aa600
  41bd8a:	jle    0x41bd52
  41bd8c:	daa    
  41bd8d:	add    DWORD PTR ds:0xdf8fbb63,ebp
  41bd93:	mov    al,0x4e
  41bd95:	js     0x41bd86
  41bd97:	xchg   ebp,eax
  41bd98:	jae    0x41bda7
  41bd9a:	in     eax,dx
  41bd9b:	xchg   ebp,eax
  41bd9c:	test   al,0xce
  41bd9e:	(bad)  
  41bd9f:	sbb    al,0x2c
  41bda1:	mov    edi,0x5e3338d3
  41bda6:	pop    esp
  41bda7:	pop    ds
  41bda8:	sub    ebx,DWORD PTR [ecx+ecx*1]
  41bdab:	add    ebp,DWORD PTR [ecx-0x3a]
  41bdae:	xor    DWORD PTR [edi],0x35
  41bdb1:	push   edi
  41bdb2:	(bad)  
  41bdb3:	ins    BYTE PTR es:[edi],dx
  41bdb4:	mov    bl,0x54
  41bdb6:	mov    bh,cl
  41bdb8:	es pop ss
  41bdba:	cmp    eax,0x7728bb94
  41bdbf:	frstor [edi-0x38]
  41bdc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdc4:	ja     0x41bdbf
  41bdc6:	sbb    BYTE PTR [eax],0xaa
  41bdc9:	mov    ah,ch
  41bdcb:	(bad)  
  41bdcc:	cmc    
  41bdcd:	and    al,0x28
  41bdcf:	cli    
  41bdd0:	gs fcmovnu st,st(4)
  41bdd3:	jb     0x41be3e
  41bdd5:	xchg   ebp,eax
  41bdd6:	push   ebx
  41bdd7:	push   0x4457b41
  41bddc:	add    DWORD PTR gs:[edx+ebx*2+0x3f2ef82],edi
  41bde4:	sbb    edx,ecx
  41bde6:	ins    DWORD PTR es:[edi],dx
  41bde7:	mov    ebp,0x70f22e7c
  41bdec:	push   esp
  41bded:	mov    esp,0x42f36feb
  41bdf2:	dec    BYTE PTR [ecx+0x6b]
  41bdf5:	enter  0xd17e,0x94
  41bdf9:	lea    esi,[ebp+0x61]
  41bdfc:	and    esi,DWORD PTR [edx+0x46288bec]
  41be02:	stos   BYTE PTR es:[edi],al
  41be03:	dec    ebx
  41be04:	je     0x41bdef
  41be06:	pop    es
  41be07:	aam    0x1e
  41be09:	mov    ?,eax
  41be0b:	sbb    ecx,DWORD PTR [ebp+0x18]
  41be0e:	xor    bh,ah
  41be10:	daa    
  41be11:	ins    BYTE PTR es:[edi],dx
  41be12:	aad    0x42
  41be14:	dec    ebp
  41be15:	cmp    ah,dl
  41be17:	cmp    eax,0xcdca74ed
  41be1c:	stc    
  41be1d:	push   0xffffffc3
  41be1f:	push   cs
  41be20:	gs jmp 0xb1086315
  41be26:	icebp  
  41be27:	fcmovbe st,st(3)
  41be29:	repnz push ebp
  41be2b:	mov    eax,ds:0x403f7094
  41be30:	jbe    0x41be00
  41be32:	fwait
  41be33:	jg     0x41be52
  41be35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be36:	pop    esp
  41be37:	mov    WORD PTR [esi-0x7a],cs
  41be3a:	add    ecx,eax
  41be3c:	add    ebp,DWORD PTR [edi+0x70acdf78]
  41be42:	mov    al,dl
  41be44:	fisttp WORD PTR [edi+0x53477f86]
  41be4a:	popf   
  41be4b:	mov    ah,0x3b
  41be4d:	popf   
  41be4e:	popa   
  41be4f:	icebp  
  41be50:	out    0x83,eax
  41be52:	jno    0x41bed2
  41be54:	add    al,BYTE PTR [edx-0x28950b6]
  41be5a:	pop    edx
  41be5b:	jmp    0x372e:0xeb6635b2
  41be62:	mov    WORD PTR [esi],ds
  41be64:	mov    ah,0x44
  41be66:	add    ch,BYTE PTR [ebp+0x19]
  41be69:	je     0x41be40
  41be6b:	jmp    0x41beab
  41be6d:	push   ecx
  41be6e:	lods   al,BYTE PTR ds:[esi]
  41be6f:	cld    
  41be70:	or     eax,0x9080b662
  41be75:	add    al,0xdd
  41be77:	sahf   
  41be78:	mov    cl,0xbf
  41be7a:	mov    BYTE PTR [edi],ch
  41be7c:	stc    
  41be7d:	stos   DWORD PTR es:[edi],eax
  41be7e:	xor    al,0xd4
  41be80:	mov    bh,al
  41be82:	retf   
  41be83:	das    
  41be84:	ss std 
  41be86:	add    ebp,DWORD PTR [eax-0x53]
  41be89:	mov    edi,DWORD PTR [ecx+edi*2+0x70f1c8ae]
  41be90:	mov    al,0x6d
  41be92:	adc    al,0xcd
  41be94:	(bad)  
  41be95:	jl     0x41be24
  41be97:	mov    WORD PTR [eax+0x7e617941],?
  41be9d:	rsqrtps xmm3,XMMWORD PTR [edi-0x1c2df339]
  41bea4:	add    eax,0xf2e5d05a
  41bea9:	adc    eax,DWORD PTR [edx+0x54]
  41beac:	fadd   DWORD PTR [edi]
  41beae:	jmp    0x41be7f
  41beb0:	es sbb eax,esp
  41beb3:	jb     0x41beaf
  41beb5:	pop    eax
  41beb6:	lds    ebx,FWORD PTR [esi+0x3c]
  41beb9:	iret   
  41beba:	pop    ecx
  41bebb:	sbb    eax,0x9c4ab935
  41bec0:	sar    DWORD PTR [edx+0x7f5752f7],cl
  41bec6:	scas   eax,DWORD PTR es:[edi]
  41bec7:	stc    
  41bec8:	sub    al,0x6
  41beca:	jl     0x41bf2f
  41becc:	xor    al,0x2e
  41bece:	mov    bh,0x5a
  41bed0:	adc    esi,edi
  41bed2:	out    dx,eax
  41bed3:	test   eax,0x75a964cd
  41bed8:	dec    esi
  41bed9:	fmul   DWORD PTR [edi-0x38]
  41bedc:	mov    esp,0x310f519e
  41bee1:	add    eax,0x50f544f7
  41bee6:	add    DWORD PTR ds:0x2175e2c9,ebp
  41beec:	aam    0x2b
  41beee:	push   edx
  41beef:	bound  esp,QWORD PTR [ebx-0x3]
  41bef2:	in     al,dx
  41bef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef4:	repnz push eax
  41bef6:	adc    al,dl
  41bef8:	sbb    DWORD PTR [edi-0x38bee1a9],ebp
  41befe:	xor    BYTE PTR [eax],ah
  41bf00:	fwait
  41bf01:	stos   BYTE PTR es:[edi],al
  41bf02:	lods   eax,DWORD PTR ds:[esi]
  41bf03:	xor    BYTE PTR [ebx],ah
  41bf05:	ficom  DWORD PTR [ecx*1+0x2c4b3403]
  41bf0c:	jbe    0x41bf7c
  41bf0e:	into   
  41bf0f:	cmp    ecx,DWORD PTR [edx]
  41bf11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf12:	mov    bh,0x35
  41bf14:	cmp    cl,cl
  41bf16:	shl    DWORD PTR [edx+0x1],cl
  41bf19:	js     0x41bef3
  41bf1b:	and    eax,0xc7c24351
  41bf20:	in     al,dx
  41bf21:	out    dx,eax
  41bf22:	ret    0xaf84
  41bf25:	inc    esp
  41bf26:	mov    dl,0x11
  41bf28:	mov    DWORD PTR [ebx],esp
  41bf2a:	jno    0x41bef7
  41bf2c:	cmp    DWORD PTR [esi+eiz*1+0x6f],ebp
  41bf30:	jle    0x41bef1
  41bf32:	jge    0x41bf14
  41bf34:	adc    ch,BYTE PTR [ebx+0x49]
  41bf37:	stos   DWORD PTR es:[edi],eax
  41bf38:	mov    al,0xbe
  41bf3a:	jns    0x41bedb
  41bf3c:	mov    ecx,0xf04e4fc8
  41bf41:	jge    0x41bf1c
  41bf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf44:	int3   
  41bf45:	adc    esi,edx
  41bf47:	xchg   esi,eax
  41bf48:	cs ret 
  41bf4a:	push   ebx
  41bf4b:	adc    DWORD PTR [eax+0x43],ebp
  41bf4e:	jle    0x41bf5e
  41bf50:	xchg   DWORD PTR [esp+edx*1],ebx
  41bf53:	mov    ebx,0xf6b11e8e
  41bf58:	jne    0x41bfa5
  41bf5a:	or     ecx,ebx
  41bf5c:	retf   
  41bf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf5e:	sar    dh,1
  41bf60:	test   al,0x11
  41bf62:	xchg   ecx,eax
  41bf63:	push   es
  41bf64:	pop    ds
  41bf65:	xchg   ebp,eax
  41bf66:	aad    0x8e
  41bf68:	stc    
  41bf69:	cdq    
  41bf6a:	pop    esi
  41bf6b:	inc    esi
  41bf6c:	test   DWORD PTR cs:[eax-0x693395f5],ebx
  41bf73:	mov    ecx,0xb364983a
  41bf78:	es jns 0x41bf13
  41bf7b:	jb     0x41bfaa
  41bf7d:	push   ds
  41bf7e:	lods   al,BYTE PTR ds:[esi]
  41bf7f:	push   edi
  41bf80:	mov    bl,0x9d
  41bf82:	ss mov ebp,0x38da387d
  41bf88:	ss loop 0x41bfd2
  41bf8b:	(bad)  
  41bf8c:	mov    edx,0xfb74be27
  41bf91:	fidivr DWORD PTR [edi]
  41bf93:	and    ah,BYTE PTR [edi+0x5d]
  41bf96:	pop    ebx
  41bf97:	or     DWORD PTR [eax+0x405b7de5],0xdda509f9
  41bfa1:	pop    es
  41bfa2:	(bad)  
  41bfa3:	ror    BYTE PTR [edx-0x6a],cl
  41bfa6:	mov    esp,?
  41bfa8:	pushf  
  41bfa9:	xchg   esi,eax
  41bfaa:	call   0xd26bffbb
  41bfaf:	imul   edi,DWORD PTR [eax+ecx*8+0x77],0xffffff8e
  41bfb4:	jmp    0x41c026
  41bfb6:	out    0xcc,eax
  41bfb8:	xchg   edx,eax
  41bfb9:	call   0x552e:0xb11f9335
  41bfc0:	in     eax,0xc3
  41bfc2:	mov    eax,0x8e0a4890
  41bfc7:	aas    
  41bfc8:	(bad)  
  41bfca:	call   0xbef:0x21fe1713
  41bfd1:	xchg   ebp,eax
  41bfd2:	int    0xe
  41bfd4:	dec    edi
  41bfd5:	cmovns esi,DWORD PTR [ecx+0x1e2fded6]
  41bfdc:	ins    BYTE PTR es:[edi],dx
  41bfdd:	(bad)  
  41bfde:	xor    esp,esi
  41bfe0:	mov    eax,ds:0xb7b361f2
  41bfe5:	push   esp
  41bfe6:	pop    ebp
  41bfe7:	xor    edi,0xa639e03
  41bfed:	cmp    DWORD PTR [esi+0x435b712],edi
  41bff3:	sub    edx,DWORD PTR [edx+0x740511a7]
  41bff9:	jmp    0x41bf83
  41bffb:	jno    0x41c003
  41bffd:	push   ebp
  41bffe:	jbe    0x41bfa2
  41c000:	xchg   esp,eax
  41c001:	sub    eax,0xe139bdb9
  41c006:	cdq    
  41c007:	imul   esi,DWORD PTR [ebp+0x69],0xe
  41c00b:	(bad)  
  41c00c:	sub    DWORD PTR [esp+ecx*2+0x5e],esp
  41c010:	ins    DWORD PTR es:[edi],dx
  41c011:	sub    eax,0x64507cff
  41c016:	push   es
  41c017:	adc    eax,0x72630d87
  41c01c:	cdq    
  41c01d:	cli    
  41c01e:	icebp  
  41c01f:	shl    DWORD PTR [edi],cl
  41c021:	hlt    
  41c022:	jae    0x41c04d
  41c024:	outs   dx,BYTE PTR ds:[esi]
  41c025:	loope  0x41bfc7
  41c027:	or     al,0x9b
  41c029:	aam    0xce
  41c02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c02c:	or     BYTE PTR [ecx+0x9],0xc6
  41c030:	fisubr WORD PTR [eax-0x6f8811af]
  41c036:	cmp    eax,0x2dbc8c4e
  41c03b:	sbb    al,0x7f
  41c03d:	fcomi  st,st(2)
  41c03f:	cmp    al,0x4b
  41c041:	mov    ?,WORD PTR [eax+0x3c]
  41c044:	out    dx,al
  41c045:	inc    ebx
  41c046:	pop    ss
  41c047:	sub    BYTE PTR [ebx-0x50805762],dh
  41c04d:	mov    ds:0x801b2ef3,eax
  41c052:	jo     0x41bffa
  41c054:	icebp  
  41c055:	mov    bl,0xd0
  41c057:	mov    bl,0xe7
  41c059:	mov    ds:0x202fa9f,al
  41c05e:	scas   al,BYTE PTR es:[edi]
  41c05f:	jle    0x41c03b
  41c061:	test   al,0xaa
  41c063:	xor    ebx,DWORD PTR [ebp+ecx*1-0x6d48701e]
  41c06a:	cmp    eax,0x59ac091e
  41c06f:	adc    eax,0x29abae73
  41c074:	call   0x8adf005
  41c079:	bound  edx,QWORD PTR [edi+edi*4+0x2c]
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	fwait
  41c08f:	es jl  0x41c069
  41c092:	push   0xf300013c
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edx+0x6a30b05e],ch
  41c09f:	pop    edx
  41c0a0:	push   ss
  41c0a1:	ins    BYTE PTR es:[edi],dx
  41c0a2:	fldenv [edx]
  41c0a4:	iret   
  41c0a5:	leave  
  41c0a6:	sbb    al,0xe7
  41c0a8:	push   cs
  41c0a9:	shl    dh,0xad
  41c0ac:	test   DWORD PTR [ebx-0x63],eax
  41c0af:	push   0xba73f2d3
  41c0b4:	stc    
  41c0b5:	or     ebx,edx
  41c0b7:	inc    edi
  41c0b8:	xchg   ebx,edx
  41c0ba:	adc    bl,BYTE PTR [edi-0x71b18668]
  41c0c0:	ins    BYTE PTR es:[edi],dx
  41c0c1:	sbb    eax,0x3c4a5278
  41c0c6:	mov    WORD PTR [ebp-0x1d],cs
  41c0c9:	dec    edx
  41c0ca:	neg    ch
  41c0cc:	ror    BYTE PTR [esi],0xe8
  41c0cf:	scas   al,BYTE PTR es:[edi]
  41c0d0:	mov    cl,0xcd
  41c0d2:	cld    
  41c0d3:	inc    ebx
  41c0d4:	mov    edi,0xa1e50b9d
  41c0d9:	test   al,0xea
  41c0db:	repnz sub dl,BYTE PTR [esi+0x21]
  41c0df:	and    DWORD PTR [ecx-0x6c525e7],0xffffffcf
  41c0e6:	imul   ecx,DWORD PTR [ecx],0x64813281
  41c0ec:	push   ss
  41c0ed:	sbb    dl,cl
  41c0ef:	adc    ebp,DWORD PTR [edi-0x3aa60704]
  41c0f5:	and    dh,BYTE PTR [ecx-0x4e9dc65b]
  41c0fb:	add    BYTE PTR [ecx-0x19],ah
  41c0fe:	pop    edi
  41c0ff:	jo     0x41c109
  41c101:	je     0x41c14a
  41c103:	or     bh,bh
  41c105:	push   edx
  41c106:	rcr    DWORD PTR fs:[ebx],1
  41c109:	lods   eax,DWORD PTR ds:[esi]
  41c10a:	or     al,0xa8
  41c10c:	popa   
  41c10d:	in     al,0x23
  41c10f:	sub    BYTE PTR [eax+0x72],0x10
  41c113:	lock test al,0xd8
  41c116:	rol    DWORD PTR [esi],cl
  41c118:	out    0x6e,al
  41c11a:	add    bh,BYTE PTR [ecx-0x4b]
  41c11d:	dec    ebp
  41c11e:	arpl   WORD PTR [edi-0x73bf8444],bp
  41c124:	sub    al,0x95
  41c126:	test   BYTE PTR [ebx-0x68a9d00b],al
  41c12c:	mov    ds:0x38654b0f,eax
  41c131:	and    DWORD PTR [ebp+ebx*4+0x40],ebx
  41c135:	sar    BYTE PTR [esi],cl
  41c137:	cmp    DWORD PTR [ecx-0x1a],esi
  41c13a:	enter  0x7950,0x71
  41c13e:	push   0xffffffd5
  41c140:	mov    eax,ds:0x806f4e52
  41c145:	loope  0x41c11d
  41c147:	in     al,dx
  41c148:	cmp    BYTE PTR [esi-0x74],cl
  41c14b:	dec    ecx
  41c14c:	in     eax,dx
  41c14d:	repz repz fnsave [eax]
  41c151:	stos   DWORD PTR es:[edi],eax
  41c152:	sub    DWORD PTR [edx],0x3b
  41c155:	fsub   QWORD PTR [esi-0x7e]
  41c158:	inc    eax
  41c159:	rcl    BYTE PTR [ebx+0x6],cl
  41c15c:	popa   
  41c15d:	jnp    0x41c120
  41c15f:	cmp    eax,0x2a29ff92
  41c164:	mov    edx,DWORD PTR [ebx-0x12]
  41c167:	loope  0x41c1b2
  41c169:	icebp  
  41c16a:	xchg   edi,eax
  41c16b:	push   0x82eb7ea2
  41c170:	div    BYTE PTR [esi+0x247068a]
  41c176:	inc    esi
  41c177:	pop    edi
  41c178:	out    dx,eax
  41c179:	add    al,0x5f
  41c17b:	xor    BYTE PTR ds:0x8eb28728,dl
  41c181:	(bad)  
  41c182:	int3   
  41c183:	push   ebx
  41c184:	jmp    0x41c109
  41c186:	cmp    DWORD PTR [ecx-0x45],edi
  41c189:	xor    al,0x83
  41c18b:	fwait
  41c18c:	adc    eax,DWORD PTR [edi]
  41c18e:	pop    edi
  41c18f:	dec    esp
  41c190:	push   ebx
  41c191:	lea    edi,[esp+edi*2+0x67d298a0]
  41c198:	cmp    eax,0xbffef327
  41c19d:	scas   al,BYTE PTR es:[edi]
  41c19e:	iret   
  41c19f:	adc    eax,0x56fcaba
  41c1a4:	je     0x41c1c8
  41c1a6:	mov    cl,0x26
  41c1a8:	xchg   esi,eax
  41c1a9:	fidiv  DWORD PTR [ecx-0x24]
  41c1ac:	mov    esi,0x1eb67c3d
  41c1b1:	jae    0x41c1e8
  41c1b3:	lods   al,BYTE PTR ds:[esi]
  41c1b4:	pusha  
  41c1b5:	mov    edx,0x27be8530
  41c1ba:	adc    eax,0xfb11d37
  41c1bf:	repz sub DWORD PTR [ecx-0x780503f6],0xffffffca
  41c1c7:	mov    edi,0xa00d15b1
  41c1cc:	mov    ebp,DWORD PTR [edx*1-0x10739f6]
  41c1d3:	(bad)  
  41c1d4:	cmp    ch,BYTE PTR [edx-0x14]
  41c1d7:	inc    esi
  41c1d8:	cmp    al,bl
  41c1da:	mov    dl,0x42
  41c1dc:	mov    al,0x22
  41c1de:	in     eax,0xa6
  41c1e0:	(bad)  
  41c1e2:	ds inc ebx
  41c1e4:	xor    DWORD PTR [edi],esp
  41c1e6:	mov    esi,0x587af6b5
  41c1eb:	mov    ch,0x49
  41c1ed:	retf   
  41c1ee:	fiadd  WORD PTR [edx-0x36]
  41c1f1:	retf   0x8d4a
  41c1f4:	xor    al,0x4b
  41c1f6:	cmp    DWORD PTR [edi+eax*4-0x80],edx
  41c1fa:	rcr    BYTE PTR [eax+ebx*2],0x6
  41c1fe:	ret    
  41c1ff:	in     al,dx
  41c200:	jbe    0x41c19e
  41c202:	mov    dl,0x27
  41c204:	and    al,bl
  41c206:	jns    0x41c236
  41c208:	inc    edx
  41c209:	cmp    ebp,ecx
  41c20b:	call   0x1f65:0x201b29c3
  41c212:	sub    dl,BYTE PTR [ecx]
  41c214:	xlat   BYTE PTR ds:[ebx]
  41c215:	xor    eax,DWORD PTR [ebp-0x56b5b72]
  41c21b:	lods   eax,DWORD PTR ds:[esi]
  41c21c:	add    BYTE PTR [esi],ah
  41c21e:	mov    ds:0xf9b3658e,al
  41c223:	popf   
  41c224:	dec    ecx
  41c225:	mov    cl,al
  41c227:	mov    ds:0x7092bc32,al
  41c22c:	int3   
  41c22d:	inc    eax
  41c22e:	mov    al,ds:0x83161a49
  41c233:	addr16 test al,0xc9
  41c236:	sub    ch,BYTE PTR [edi+0x7e556090]
  41c23c:	mov    ds:0xe352a15f,al
  41c241:	fdivr  QWORD PTR [esi+eax*2-0x789c38fb]
  41c248:	addr16 sbb dh,0x84
  41c24c:	ss mov dl,0x7b
  41c24f:	push   ds
  41c250:	popf   
  41c251:	pop    ebp
  41c252:	pop    ecx
  41c253:	jno    0x41c1e2
  41c255:	imul   esp,edi,0xffffff8e
  41c258:	xor    al,0x9f
  41c25a:	sbb    ch,BYTE PTR fs:[esi+0x5]
  41c25e:	stos   BYTE PTR es:[edi],al
  41c25f:	retf   0x9ecc
  41c262:	iret   
  41c263:	jmp    0x9645:0x898289ba
  41c26a:	sar    DWORD PTR [edx-0xf],1
  41c26d:	retf   
  41c26e:	into   
  41c26f:	pop    edi
  41c270:	stc    
  41c271:	lods   al,BYTE PTR ds:[esi]
  41c272:	fbstp  TBYTE PTR [eax-0x499208d5]
  41c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c279:	and    DWORD PTR [eax+eax*8-0x1350130d],eax
  41c280:	jnp    0x41c261
  41c282:	xchg   DWORD PTR ds:[edi],ebp
  41c285:	or     BYTE PTR [esi-0x73],dh
  41c288:	gs ja  0x41c2c0
  41c28b:	pop    ebp
  41c28c:	loopne 0x41c239
  41c28e:	push   ebx
  41c28f:	add    BYTE PTR [edi],dl
  41c291:	pop    ebp
  41c292:	pop    ss
  41c293:	retf   0xb1f3
  41c296:	enter  0xc3a1,0x64
  41c29a:	es (bad) 
  41c29c:	jnp    0x41c28f
  41c29e:	call   0xe10e6645
  41c2a3:	ret    0x2e06
  41c2a6:	shl    DWORD PTR [edi+0x47],cl
  41c2a9:	mov    edx,0xc6ce054d
  41c2ae:	cdq    
  41c2af:	loope  0x41c2cc
  41c2b1:	int3   
  41c2b2:	inc    ecx
  41c2b3:	int3   
  41c2b4:	mov    al,0xc5
  41c2b6:	add    eax,DWORD PTR [edx-0x6249d1d5]
  41c2bc:	into   
  41c2bd:	ins    BYTE PTR es:[edi],dx
  41c2be:	jmp    0x41c2d3
  41c2c0:	mov    dl,0x40
  41c2c2:	pop    ss
  41c2c3:	pop    ss
  41c2c4:	call   0xd025:0xa532630c
  41c2cb:	iret   
  41c2cc:	inc    DWORD PTR [ebx+0x11]
  41c2cf:	enter  0x55b3,0x8d
  41c2d3:	clc    
  41c2d4:	pop    edx
  41c2d5:	push   eax
  41c2d6:	in     al,dx
  41c2d7:	jne    0x41c267
  41c2d9:	mov    ds:0xb5df2a8,eax
  41c2de:	jp     0x41c2b4
  41c2e0:	cmp    esi,edx
  41c2e2:	cli    
  41c2e3:	fmul   DWORD PTR [ebx+esi*2-0x5c]
  41c2e7:	mov    ah,0x1d
  41c2e9:	aaa    
  41c2ea:	mov    dl,cl
  41c2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ed:	sahf   
  41c2ee:	xchg   esi,eax
  41c2ef:	mov    dh,BYTE PTR [ebx-0x4f]
  41c2f2:	retf   0x90e7
  41c2f5:	lahf   
  41c2f6:	fcmovnb st,st(3)
  41c2f8:	fcomp  QWORD PTR [edx]
  41c2fa:	xchg   ebx,eax
  41c2fb:	test   DWORD PTR [edx-0x18d4f58e],0xb85f092c
  41c305:	mov    al,ds:0xf95a6d1
  41c30a:	pop    ss
  41c30b:	push   edi
  41c30c:	sbb    BYTE PTR [eax+0x7e],al
  41c30f:	out    dx,al
  41c310:	outs   dx,DWORD PTR ds:[esi]
  41c311:	pop    edi
  41c312:	jns    0x41c2f5
  41c314:	and    edi,DWORD PTR ss:[edi]
  41c317:	rol    DWORD PTR [eax+eiz*1],cl
  41c31a:	lods   al,BYTE PTR ds:[esi]
  41c31b:	icebp  
  41c31c:	push   esi
  41c31d:	retf   
  41c31e:	adc    eax,0xf42c799
  41c323:	mov    ds:0x5ef6cfb6,al
  41c328:	in     al,0x2a
  41c32a:	mov    ecx,DWORD PTR [edx-0x499eae8c]
  41c330:	das    
  41c331:	push   esi
  41c332:	(bad)  
  41c333:	rol    edi,1
  41c335:	jg     0x41c2e4
  41c337:	retf   
  41c338:	rcl    ecx,1
  41c33a:	loop   0x41c33b
  41c33c:	jno    0x41c306
  41c33e:	adc    BYTE PTR [esi+eiz*8-0x27],ch
  41c342:	iret   
  41c343:	and    DWORD PTR [ebp-0x6e],esp
  41c346:	adc    BYTE PTR [si-0x4c31],bh
  41c34b:	popa   
  41c34c:	gs jg  0x41c2ea
  41c34f:	fld    QWORD PTR [esi-0x22]
  41c352:	pop    esp
  41c353:	cs into 
  41c355:	pop    ds
  41c356:	in     eax,dx
  41c357:	sub    bl,BYTE PTR [ebx+ebx*2+0x15]
  41c35b:	jnp    0x41c37c
  41c35d:	out    dx,al
  41c35e:	pop    ds
  41c35f:	int    0x42
  41c361:	push   es
  41c362:	icebp  
  41c363:	aam    0x8d
  41c365:	leave  
  41c366:	push   edx
  41c367:	inc    ebp
  41c368:	loopne 0x41c2ec
  41c36a:	cdq    
  41c36b:	sub    eax,0xc856bccf
  41c370:	shl    BYTE PTR cs:[edx-0x231a21d2],0xd2
  41c378:	(bad)  
  41c379:	ret    
  41c37a:	test   eax,0x3bdf6676
  41c37f:	rol    DWORD PTR [ebx+0x43],0x6
  41c383:	and    ah,BYTE PTR [esi]
  41c385:	cwde   
  41c386:	fisttp DWORD PTR [edi]
  41c388:	ins    DWORD PTR es:[edi],dx
  41c389:	add    al,0xbb
  41c38b:	xor    dl,0x1e
  41c38e:	sub    BYTE PTR [ebp+0x535074dd],0xf2
  41c395:	mov    ?,WORD PTR [ebp+0x4]
  41c398:	inc    edi
  41c399:	call   0x11bd:0xb484755c
  41c3a0:	inc    ebx
  41c3a1:	fld    TBYTE PTR [esi]
  41c3a3:	pop    ebx
  41c3a4:	aam    0x7f
  41c3a6:	js     0x41c381
  41c3a8:	loop   0x41c32c
  41c3aa:	mov    ch,BYTE PTR [eax+0x73]
  41c3ad:	or     al,BYTE PTR [ebx+0x60]
  41c3b0:	in     al,0xa2
  41c3b2:	inc    esp
  41c3b3:	fs daa 
  41c3b5:	cmp    ah,al
  41c3b7:	sbb    al,0x45
  41c3b9:	(bad)  
  41c3bb:	imul   ebx,DWORD PTR [esi],0xffffffed
  41c3be:	repnz add DWORD PTR [ecx],esi
  41c3c1:	cmp    BYTE PTR [ebx+edi*4+0x1d],0x2b
  41c3c6:	bound  edx,QWORD PTR [edx-0x18]
  41c3c9:	out    0x10,eax
  41c3cb:	xchg   ebp,eax
  41c3cc:	scas   al,BYTE PTR es:[edi]
  41c3cd:	enter  0xa6b6,0xb0
  41c3d1:	dec    ebx
  41c3d2:	std    
  41c3d3:	int    0xbc
  41c3d5:	push   ss
  41c3d6:	xor    ecx,DWORD PTR [ebx]
  41c3d8:	clc    
  41c3d9:	fsubr  QWORD PTR [edi+0x78f4066d]
  41c3df:	(bad)  
  41c3e0:	ds cmp al,0x8f
  41c3e3:	pushf  
  41c3e4:	jo     0x41c3f9
  41c3e6:	xchg   DWORD PTR [edx+0x5c],eax
  41c3e9:	mov    esi,0x962ed5ac
  41c3ee:	xor    ebp,ecx
  41c3f0:	mov    ebp,0x15c6a198
  41c3f5:	fsubr  QWORD PTR [eax+0x2b]
  41c3f8:	dec    esi
  41c3f9:	adc    eax,0x1158a6b2
  41c3fe:	dec    esi
  41c3ff:	daa    
  41c400:	mov    dh,0x31
  41c402:	scas   al,BYTE PTR es:[edi]
  41c403:	add    eax,0x171d00e3
  41c408:	sub    DWORD PTR [esi+edi*2],eax
  41c40b:	sbb    eax,DWORD PTR [edx]
  41c40d:	pop    ecx
  41c40e:	mov    ds:0x1d3e7a02,eax
  41c413:	fs mov edx,0x3f39b7bc
  41c419:	iret   
  41c41a:	ja     0x41c457
  41c41c:	std    
  41c41d:	out    dx,eax
  41c41e:	adc    ah,dl
  41c420:	sbb    edx,ecx
  41c422:	dec    ebx
  41c423:	sbb    DWORD PTR [esi+0x544d1906],esp
  41c429:	pop    esp
  41c42a:	rol    BYTE PTR [ebx+0x7c],cl
  41c42d:	push   0x2e
  41c42f:	jmp    0x11bf:0x1bd3ada
  41c436:	out    0xda,al
  41c438:	xor    dl,al
  41c43a:	push   0x25
  41c43c:	scas   eax,DWORD PTR es:[edi]
  41c43d:	in     eax,0x5d
  41c43f:	nop
  41c440:	cli    
  41c441:	cdq    
  41c442:	pop    es
  41c443:	push   edi
  41c444:	div    BYTE PTR [edi+esi*8]
  41c447:	sbb    DWORD PTR [eax-0x10c2a68],eax
  41c44d:	and    al,0xe8
  41c44f:	ins    DWORD PTR es:[edi],dx
  41c450:	adc    DWORD PTR [eax+0x5d4d7f34],edi
  41c456:	out    dx,al
  41c457:	(bad)  
  41c458:	push   ebx
  41c459:	fidivr DWORD PTR [eax]
  41c45b:	test   ecx,ecx
  41c45d:	mov    dl,0x63
  41c45f:	jns    0x41c48c
  41c461:	pop    esi
  41c462:	pop    edx
  41c463:	pop    eax
  41c464:	dec    edx
  41c465:	mov    eax,0x26500603
  41c46a:	xchg   edi,eax
  41c46b:	sub    BYTE PTR [ebx+0x1fca06cf],cl
  41c471:	xlat   BYTE PTR ds:[ebx]
  41c472:	mov    ds:0x66dd4fdb,al
  41c477:	push   ss
  41c478:	xchg   ecx,eax
  41c479:	outs   dx,BYTE PTR ds:[esi]
  41c47a:	or     eax,0x90c1c147
  41c47f:	xor    ebx,DWORD PTR [esp+eiz*4-0xf8f88d]
  41c486:	pop    es
  41c487:	cld    
  41c488:	xchg   ebp,eax
  41c489:	sbb    DWORD PTR [eax-0x9516d8d],esp
  41c48f:	cmp    BYTE PTR [ecx-0x28aaa5d3],0x7
  41c496:	sbb    BYTE PTR [esi],dh
  41c498:	fchs   
  41c49a:	mov    ch,0x2b
  41c49c:	aam    0x56
  41c49e:	pop    esp
  41c49f:	jg     0x41c48a
  41c4a1:	cmp    eax,esp
  41c4a3:	cli    
  41c4a4:	test   DWORD PTR [ecx-0x50d80e50],ebp
  41c4aa:	cdq    
  41c4ab:	lock (bad) 
  41c4ad:	daa    
  41c4ae:	std    
  41c4af:	ret    0xd9f0
  41c4b2:	and    bh,cl
  41c4b4:	cli    
  41c4b5:	dec    ecx
  41c4b6:	cmp    ch,ch
  41c4b8:	lea    ebx,[ecx]
  41c4ba:	pop    edx
  41c4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4bc:	ins    DWORD PTR es:[edi],dx
  41c4bd:	(bad)  
  41c4be:	xchg   ebx,eax
  41c4bf:	mov    BYTE PTR [ecx-0x50e81b5b],dl
  41c4c5:	fwait
  41c4c6:	add    DWORD PTR [edi],0xcade78d5
  41c4cc:	and    bl,ch
  41c4ce:	(bad)  
  41c4cf:	jbe    0x41c4df
  41c4d1:	(bad)  
  41c4d2:	(bad)  
  41c4d3:	rcl    BYTE PTR [ebp+0x35d36713],1
  41c4d9:	jmp    0xcb2:0x3b1c2edb
  41c4e0:	push   esi
  41c4e1:	imul   eax,DWORD PTR [ebx+0x718d174f],0xc9988656
  41c4eb:	dec    esi
  41c4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ed:	je     0x41c543
  41c4ef:	mov    ecx,0x2c24ac06
  41c4f4:	adc    ebx,DWORD PTR [ecx]
  41c4f6:	lods   eax,DWORD PTR ds:[esi]
  41c4f7:	pushf  
  41c4f8:	jo     0x41c4ee
  41c4fa:	aaa    
  41c4fb:	jge    0x41c4f6
  41c4fd:	ins    BYTE PTR es:[edi],dx
  41c4fe:	test   eax,edi
  41c500:	cli    
  41c501:	out    dx,al
  41c502:	mov    BYTE PTR [edi-0x7e79eef2],ch
  41c508:	imul   edx,eax,0x6a30b6e5
  41c50e:	ins    BYTE PTR es:[edi],dx
  41c50f:	mov    esi,0xc6bffb7c
  41c514:	cmp    al,bl
  41c516:	or     ebx,ebp
  41c518:	mov    ch,0x3e
  41c51a:	xchg   esp,eax
  41c51b:	clc    
  41c51c:	jne    0x41c576
  41c51e:	inc    edi
  41c51f:	inc    edi
  41c520:	add    cl,ch
  41c522:	inc    edi
  41c523:	sub    al,0x36
  41c525:	cmp    DWORD PTR [edi+0x33],ebp
  41c528:	fwait
  41c529:	adc    esp,esi
  41c52b:	mov    ss,WORD PTR [edx+ebp*4+0x15a51aef]
  41c532:	inc    esp
  41c533:	rol    ch,cl
  41c535:	ja     0x41c513
  41c537:	or     BYTE PTR [ebp-0x6d9db5e3],ah
  41c53d:	push   cs
  41c53e:	call   0xedc7:0xaf0cf0f8
  41c545:	and    al,BYTE PTR [edi+0x61553e46]
  41c54b:	jge    0x41c5bb
  41c54d:	repnz sub esi,DWORD PTR [ecx+0x28fbeac2]
  41c554:	arpl   WORD PTR [ebp-0x599ae1dc],bx
  41c55a:	mov    DWORD PTR [ecx],0x25d00cca
  41c560:	push   0xa16816a0
  41c565:	and    eax,0x2e049187
  41c56a:	mov    BYTE PTR [ebx-0x65],al
  41c56d:	adc    bl,BYTE PTR [edi+eax*4-0x78d2ed82]
  41c574:	dec    ecx
  41c575:	aad    0x4b
  41c577:	sbb    al,0x6d
  41c579:	lods   al,BYTE PTR ds:[esi]
  41c57a:	rol    DWORD PTR [ebp-0x7ca294ee],0x93
  41c581:	aam    0x53
  41c583:	and    cl,BYTE PTR [ebp-0x2e]
  41c586:	icebp  
  41c587:	sahf   
  41c588:	cs leave 
  41c58a:	iret   
  41c58b:	fsub   st,st(1)
  41c58d:	add    BYTE PTR [eax],al
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	inc    ebp
  41c59f:	or     eax,0x415b1123
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	repz add al,0x0
  41c5a9:	add    BYTE PTR [ebp-0x721b0b87],dh
  41c5af:	inc    esi
  41c5b0:	retf   
  41c5b1:	jnp    0x41c5f4
  41c5b3:	mov    cl,0xda
  41c5b5:	mov    dh,0x8
  41c5b7:	dec    ecx
  41c5b8:	out    dx,eax
  41c5b9:	adc    DWORD PTR [esi],ebx
  41c5bb:	dec    ebp
  41c5bc:	scas   eax,DWORD PTR es:[edi]
  41c5bd:	(bad)  
  41c5bf:	dec    eax
  41c5c0:	lods   al,BYTE PTR ds:[esi]
  41c5c1:	outs   dx,BYTE PTR ds:[esi]
  41c5c2:	iret   
  41c5c3:	xor    dh,dl
  41c5c5:	popa   
  41c5c6:	inc    ebx
  41c5c7:	ret    
  41c5c8:	cwde   
  41c5c9:	mov    ebp,0xc9e15c8a
  41c5ce:	(bad)  
  41c5d0:	xchg   ebp,eax
  41c5d1:	cmp    esp,DWORD PTR [edx+0x7254dedb]
  41c5d7:	jno    0x41c613
  41c5d9:	(bad)  
  41c5da:	xchg   edi,eax
  41c5db:	adc    edx,DWORD PTR [ebp+edi*1+0x7819cf21]
  41c5e2:	inc    esi
  41c5e3:	adc    al,bl
  41c5e5:	popf   
  41c5e6:	cmp    eax,0x3c27cc7a
  41c5eb:	jns    0x41c5b3
  41c5ed:	fmul   QWORD PTR [ebx+eiz*4]
  41c5f0:	loopne 0x41c655
  41c5f2:	cld    
  41c5f3:	jl     0x41c667
  41c5f5:	rcl    bh,1
  41c5f7:	xor    ah,ah
  41c5f9:	not    BYTE PTR [ebp-0x5b]
  41c5fc:	bnd je 0x41c662
  41c5ff:	leave  
  41c600:	adc    BYTE PTR [ebx],ch
  41c602:	pop    ecx
  41c603:	test   DWORD PTR [edi],esp
  41c605:	mov    eax,0x467aadf4
  41c60a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60b:	mov    eax,ds:0x629dde96
  41c610:	daa    
  41c611:	aad    0x78
  41c613:	mov    dh,0x9
  41c615:	in     al,0x74
  41c617:	out    dx,al
  41c618:	bt     DWORD PTR [ebx],edi
  41c61b:	sbb    eax,0xfa8a6163
  41c620:	pop    edx
  41c621:	xor    eax,0x1ce1baea
  41c626:	(bad)  
  41c627:	push   ss
  41c628:	pop    sp
  41c62a:	sbb    dh,dl
  41c62c:	loopne 0x41c679
  41c62e:	clc    
  41c62f:	or     bh,BYTE PTR [ebx+eax*8]
  41c632:	cs cmp al,0xb4
  41c635:	mov    ebx,0x8daeedd
  41c63a:	dec    ebx
  41c63b:	test   DWORD PTR [edx-0x3594ece7],edi
  41c641:	outs   dx,BYTE PTR ds:[esi]
  41c642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c643:	outs   dx,BYTE PTR ds:[esi]
  41c644:	push   esi
  41c645:	sub    eax,0x252b71da
  41c64a:	sbb    al,0x4b
  41c64c:	int    0x78
  41c64e:	push   esp
  41c64f:	rcr    DWORD PTR [ebx-0xf],1
  41c652:	add    al,0xfd
  41c654:	or     DWORD PTR [esi-0x66],ebp
  41c657:	pop    sp
  41c659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65a:	mov    BYTE PTR [eax-0x636a4fc6],ch
  41c660:	mov    cl,0xb4
  41c662:	bound  ecx,QWORD PTR [edi]
  41c664:	cmc    
  41c665:	adc    al,BYTE PTR [eax-0x3]
  41c668:	cs jg  0x41c671
  41c66b:	(bad)  
  41c66c:	lods   al,BYTE PTR ds:[esi]
  41c66d:	into   
  41c66e:	(bad)  
  41c66f:	mov    ch,0x54
  41c671:	jge    0x41c6da
  41c673:	adc    al,bh
  41c675:	imul   DWORD PTR [ecx-0x60]
  41c678:	adc    al,0xca
  41c67a:	les    ecx,FWORD PTR [esi-0x3e3d3e56]
  41c680:	xchg   edi,eax
  41c681:	pop    es
  41c682:	sbb    edx,DWORD PTR [edi-0x7]
  41c685:	sbb    ebp,ebp
  41c687:	std    
  41c688:	ror    BYTE PTR [ecx+0x3d26ea5f],cl
  41c68e:	cmp    eax,DWORD PTR [eax+eax*2-0x4c]
  41c692:	cld    
  41c693:	mov    ecx,0x2d76b1ce
  41c698:	xor    eax,0x3540f83f
  41c69d:	inc    ebp
  41c69e:	dec    esi
  41c69f:	xor    BYTE PTR [esi],ah
  41c6a1:	shl    BYTE PTR [ebx+0x5b],1
  41c6a4:	lods   al,BYTE PTR ds:[esi]
  41c6a5:	jo     0x41c706
  41c6a7:	push   0xb1bbff77
  41c6ac:	pop    ss
  41c6ad:	frstor [eax-0x43]
  41c6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b1:	das    
  41c6b2:	sbb    al,0xff
  41c6b4:	mov    dh,0xe3
  41c6b6:	adc    al,0x4b
  41c6b8:	xchg   edx,eax
  41c6b9:	jbe    0x41c64e
  41c6bb:	aas    
  41c6bc:	hlt    
  41c6bd:	push   esp
  41c6be:	hlt    
  41c6bf:	jg     0x41c6ec
  41c6c1:	into   
  41c6c2:	arpl   si,bx
  41c6c4:	push   0x20
  41c6c6:	xor    dh,BYTE PTR [edi-0x1e04a10b]
  41c6cc:	fstp   st(5)
  41c6ce:	icebp  
  41c6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d0:	mov    bl,ah
  41c6d2:	shl    ebx,1
  41c6d4:	test   al,0x5c
  41c6d6:	cmp    DWORD PTR [edx+0x77],ecx
  41c6d9:	lock dec esp
  41c6db:	call   DWORD PTR [esi+0x66]
  41c6de:	cld    
  41c6df:	ror    BYTE PTR [ebx-0x36],cl
  41c6e2:	into   
  41c6e3:	pop    ss
  41c6e4:	test   al,0x40
  41c6e6:	sti    
  41c6e7:	dec    ebp
  41c6e8:	mov    ch,BYTE PTR [ecx-0x148191cd]
  41c6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ef:	sub    cl,BYTE PTR [edi-0x65]
  41c6f2:	sub    al,0x52
  41c6f4:	mov    ecx,0xfb505ef1
  41c6f9:	pop    ds
  41c6fa:	leave  
  41c6fb:	addr16 ds xchg ebp,eax
  41c6fe:	add    al,bl
  41c700:	icebp  
  41c701:	jmp    0x41c6b9
  41c703:	sbb    ecx,DWORD PTR [edi]
  41c705:	xchg   edx,eax
  41c706:	adc    edx,DWORD PTR [esi+0x0]
  41c709:	stc    
  41c70a:	lods   al,BYTE PTR ds:[esi]
  41c70b:	mov    ebp,?
  41c70d:	jmp    0x48fc:0x3bdea881
  41c714:	mov    ch,0x73
  41c716:	ins    BYTE PTR es:[edi],dx
  41c717:	pop    ss
  41c718:	stos   DWORD PTR es:[edi],eax
  41c719:	pushf  
  41c71a:	pop    esi
  41c71b:	imul   ebp,DWORD PTR [ebx],0xffffff9d
  41c71e:	retf   
  41c71f:	out    0xe7,eax
  41c721:	stc    
  41c722:	jge    0x41c775
  41c724:	sub    al,0xa
  41c726:	call   0x1542986c
  41c72b:	add    cl,ah
  41c72d:	stos   BYTE PTR es:[edi],al
  41c72e:	popa   
  41c72f:	sub    BYTE PTR [ebx+0x920473c],ah
  41c735:	out    0x3f,eax
  41c737:	mov    dl,dh
  41c739:	jle    0x41c7b0
  41c73b:	jne    0x41c7b6
  41c73d:	inc    esp
  41c73e:	dec    ecx
  41c73f:	push   es
  41c740:	push   0xffffffb6
  41c742:	ins    DWORD PTR es:[edi],dx
  41c743:	dec    edx
  41c744:	push   0xd0687c87
  41c749:	cdq    
  41c74a:	(bad)  
  41c74b:	cmp    DWORD PTR [edx],edx
  41c74d:	xchg   ecx,eax
  41c74e:	mov    ch,0xb
  41c750:	test   al,0x6e
  41c752:	popa   
  41c753:	shl    BYTE PTR [ecx],0xab
  41c756:	jmp    0x62b4:0x4621f02d
  41c75d:	jmp    0x41c782
  41c75f:	imul   DWORD PTR ds:0xe318a664
  41c765:	lahf   
  41c766:	or     eax,DWORD PTR [esi+0x5cd6628a]
  41c76c:	cmp    al,0x3d
  41c76e:	mov    dl,0xcd
  41c770:	xor    al,0x24
  41c772:	mov    cl,0x22
  41c774:	or     ebx,ecx
  41c776:	inc    ebp
  41c777:	or     al,0xbf
  41c779:	xor    eax,0xc760475a
  41c77e:	push   cs
  41c77f:	stc    
  41c780:	sbb    al,0x2f
  41c782:	dec    esi
  41c783:	rcr    DWORD PTR [edx],1
  41c785:	sbb    ebx,DWORD PTR [eax-0x5f]
  41c788:	imul   esp,DWORD PTR [eax+0x48],0xa534862e
  41c78f:	adc    ebx,ebp
  41c791:	shl    dh,0x7f
  41c794:	inc    esi
  41c795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c796:	pop    edi
  41c797:	mov    ecx,0xf2bce95d
  41c79c:	jp     0x41c761
  41c79e:	out    dx,al
  41c79f:	(bad)  
  41c7a0:	jnp    0x41c748
  41c7a2:	sbb    DWORD PTR [edi+0x652486bc],esi
  41c7a8:	bswap  ebx
  41c7aa:	retf   0xfc2a
  41c7ad:	je     0x41c7d4
  41c7af:	jmp    0xcbed:0xd9ba505d
  41c7b6:	mov    DWORD PTR [ebp-0x4c19d2a2],ebp
  41c7bc:	mov    ds:0x2c4227c6,eax
  41c7c1:	lods   al,BYTE PTR ds:[esi]
  41c7c2:	inc    esp
  41c7c3:	lods   al,BYTE PTR ds:[esi]
  41c7c4:	ror    BYTE PTR [ebx],1
  41c7c6:	mov    bl,0x50
  41c7c8:	cmp    esp,DWORD PTR [eax-0x5abd3618]
  41c7ce:	push   ecx
  41c7cf:	add    DWORD PTR [ecx],ebx
  41c7d1:	fisttp QWORD PTR ds:0x6abb9d3d
  41c7d7:	cli    
  41c7d8:	or     al,0x8d
  41c7da:	or     esi,edx
  41c7dc:	xchg   edx,edx
  41c7de:	jns    0x41c7e2
  41c7e0:	xchg   esp,eax
  41c7e1:	cmp    eax,0x890e44d8
  41c7e6:	xor    al,0x61
  41c7e8:	ss out 0x1b,eax
  41c7eb:	sbb    ebx,0xffffffea
  41c7ee:	or     edi,0x6a
  41c7f1:	xchg   esi,eax
  41c7f2:	pop    DWORD PTR [esp+esi*8]
  41c7f5:	xor    eax,0xb69715dc
  41c7fa:	aad    0xc1
  41c7fc:	test   al,0xf0
  41c7ff:	fistp  QWORD PTR [eax]
  41c801:	(bad)  
  41c803:	fs loopne 0x41c7bb
  41c806:	aad    0xc4
  41c808:	loope  0x41c842
  41c80a:	pop    ds
  41c80b:	and    al,0xf0
  41c80d:	neg    DWORD PTR [esi]
  41c80f:	cmp    esp,ecx
  41c811:	js     0x41c7ba
  41c813:	mov    ch,BYTE PTR [esi]
  41c815:	(bad)  
  41c816:	out    0xdd,eax
  41c818:	push   edx
  41c819:	clc    
  41c81a:	mov    esp,0x3c01a412
  41c81f:	fsub   st,st(2)
  41c821:	lds    edi,FWORD PTR [ebp-0x10a8d689]
  41c827:	mov    bh,0xb5
  41c829:	xor    BYTE PTR [edi],ah
  41c82b:	push   ebx
  41c82c:	out    0xaf,al
  41c82e:	pop    eax
  41c82f:	repz std 
  41c831:	shl    DWORD PTR [ecx-0x78b84f77],0x2e
  41c838:	lahf   
  41c839:	push   ebp
  41c83a:	mov    eax,0x26d465dd
  41c83f:	jle    0x41c8ad
  41c841:	mov    esp,0x79d6902f
  41c846:	imul   edi,DWORD PTR [edx+0x7b],0x865a21db
  41c84d:	daa    
  41c84e:	push   cs
  41c84f:	push   ebp
  41c850:	std    
  41c851:	loop   0x41c80f
  41c853:	add    eax,DWORD PTR [esi-0x45437e68]
  41c859:	or     eax,0x27c5880c
  41c85e:	dec    edi
  41c85f:	xchg   esi,eax
  41c860:	out    dx,al
  41c861:	clc    
  41c862:	cmp    eax,0xe453d0a1
  41c867:	rcl    BYTE PTR [esi],0xd6
  41c86a:	shr    bl,1
  41c86c:	or     al,0x2d
  41c86e:	rcr    DWORD PTR [ebx-0x347a4dda],1
  41c874:	jecxz  0x41c81f
  41c876:	pop    ecx
  41c877:	xor    eax,0x45089740
  41c87c:	xor    BYTE PTR [eax],cl
  41c87e:	addr16 jnp 0x41c81b
  41c881:	clc    
  41c882:	pop    ecx
  41c883:	jnp    0x41c8c6
  41c885:	inc    ebp
  41c886:	retf   0xd071
  41c889:	stos   DWORD PTR es:[edi],eax
  41c88a:	fild   DWORD PTR [esi+0x3d]
  41c88d:	cmp    eax,0xbe885c1d
  41c892:	xor    eax,0x7f39a448
  41c897:	(bad)  [eax+0x57]
  41c89a:	rcl    BYTE PTR [ebp-0x14],cl
  41c89d:	stos   BYTE PTR es:[edi],al
  41c89e:	push   cs
  41c89f:	push   0x1d051576
  41c8a4:	add    esp,esi
  41c8a6:	cwde   
  41c8a7:	inc    ecx
  41c8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8a9:	cmp    DWORD PTR [esi+0x69],esp
  41c8ac:	pop    eax
  41c8ad:	out    dx,eax
  41c8ae:	jno    0x41c91c
  41c8b0:	xchg   edx,eax
  41c8b1:	sub    esi,ebp
  41c8b3:	out    dx,al
  41c8b4:	xor    ch,BYTE PTR [edx]
  41c8b6:	push   es
  41c8b7:	mov    ecx,0xc1e019ea
  41c8bc:	adc    dl,BYTE PTR [ecx]
  41c8be:	or     DWORD PTR [eax+0xa96d388],eax
  41c8c4:	leave  
  41c8c5:	inc    esp
  41c8c6:	inc    ebx
  41c8c7:	mov    ds:0xd514a17,al
  41c8cc:	lods   eax,DWORD PTR ds:[esi]
  41c8cd:	jo     0x41c8b0
  41c8cf:	xor    eax,0xbdc61b83
  41c8d4:	xchg   edi,eax
  41c8d5:	call   0xe8c0cb56
  41c8da:	dec    esp
  41c8db:	cmp    eax,0x9b054a29
  41c8e0:	xchg   ebp,eax
  41c8e1:	pop    esp
  41c8e2:	sbb    al,0x54
  41c8e4:	bound  edx,QWORD PTR [ebp-0x27]
  41c8e7:	gs cmp ebx,ecx
  41c8ea:	sbb    esi,DWORD PTR [ecx+0x5dcb1f7]
  41c8f0:	push   edi
  41c8f1:	jg     0x41c8ed
  41c8f3:	xchg   edi,eax
  41c8f4:	pop    ss
  41c8f5:	jo     0x41c8c6
  41c8f7:	cmp    edx,DWORD PTR [ecx]
  41c8f9:	jmp    0x822e4980
  41c8fe:	jo     0x41c88d
  41c900:	popa   
  41c901:	aas    
  41c902:	and    ah,dl
  41c904:	fnsave [esp+edi*1+0x7ba1f0f7]
  41c90b:	push   ss
  41c90c:	fadd   QWORD PTR [ebp+0x7133ff42]
  41c912:	ret    0xa64e
  41c915:	shl    DWORD PTR [ebx-0x1e438801],1
  41c91b:	pusha  
  41c91c:	scas   al,BYTE PTR es:[edi]
  41c91d:	bound  ebx,QWORD PTR [eax]
  41c91f:	stc    
  41c920:	jns    0x41c95a
  41c922:	xor    DWORD PTR [eax],esi
  41c924:	in     al,dx
  41c925:	test   DWORD PTR [ecx+edx*4],esp
  41c928:	clc    
  41c929:	jb     0x41c8b8
  41c92b:	jmp    0x96a3:0x13f9a98f
  41c932:	mov    eax,0xfad4ab9a
  41c937:	xchg   edi,eax
  41c938:	enter  0x358d,0xc3
  41c93c:	imul   eax,DWORD PTR [esi+0x5f0b6f76],0x8a91ae95
  41c946:	adc    BYTE PTR [edx-0x34],dh
  41c949:	(bad)  
  41c94a:	(bad)  
  41c94b:	sti    
  41c94c:	xchg   esi,eax
  41c94d:	pop    edx
  41c94e:	push   cs
  41c94f:	jp     0x41c8d2
  41c951:	pusha  
  41c952:	daa    
  41c953:	or     BYTE PTR [ebx],dh
  41c955:	retf   0x5cf9
  41c958:	dec    ebx
  41c959:	cdq    
  41c95a:	add    al,BYTE PTR [ebx+0x45]
  41c95d:	(bad)  
  41c95e:	jnp    0x41c9be
  41c960:	xchg   BYTE PTR [esi],al
  41c962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c963:	mov    eax,0x7730ff37
  41c968:	xor    bl,ch
  41c96a:	jo     0x41c9c7
  41c96c:	jae    0x41c8fb
  41c96e:	xchg   ebx,eax
  41c96f:	and    BYTE PTR [ebx],al
  41c971:	frstor [ebx+0x5d]
  41c974:	(bad)  
  41c975:	(bad)  
  41c976:	shl    bl,1
  41c978:	mov    BYTE PTR [ecx-0x45],dh
  41c97b:	scas   eax,DWORD PTR es:[edi]
  41c97c:	push   edx
  41c97d:	ret    
  41c97e:	inc    esi
  41c97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c980:	outs   dx,BYTE PTR ds:[esi]
  41c981:	(bad)  
  41c982:	fisttp QWORD PTR [edx]
  41c984:	jmp    0xdf20:0x5527aa2b
  41c98b:	cdq    
  41c98c:	mov    dh,0x89
  41c98e:	lods   eax,DWORD PTR ds:[esi]
  41c98f:	sub    edi,edi
  41c991:	jbe    0x41c9b4
  41c993:	cli    
  41c994:	das    
  41c995:	loopne 0x41c989
  41c997:	sbb    al,0x16
  41c999:	pop    eax
  41c99a:	add    BYTE PTR [edi-0x24],dh
  41c99d:	inc    ecx
  41c99e:	fisttp DWORD PTR [edi+0x7dec8843]
  41c9a4:	pop    DWORD PTR [edi-0x1b]
  41c9a7:	sbb    al,al
  41c9a9:	lahf   
  41c9aa:	add    DWORD PTR [ebx+0x4e4046b6],ebp
  41c9b0:	cmp    DWORD PTR [edx],ecx
  41c9b2:	mov    dl,0xf3
  41c9b4:	dec    ebx
  41c9b5:	pop    eax
  41c9b6:	repz xchg ecx,eax
  41c9b8:	push   edi
  41c9b9:	daa    
  41c9ba:	(bad)  
  41c9bb:	cli    
  41c9bc:	dec    esi
  41c9bd:	xchg   ebp,eax
  41c9be:	and    eax,0x12681940
  41c9c3:	or     edx,DWORD PTR [ebx+0x31e6497c]
  41c9c9:	lock sbb dl,0xd
  41c9cd:	inc    edi
  41c9ce:	aas    
  41c9cf:	dec    eax
  41c9d0:	cmp    al,BYTE PTR [ecx+0x6a]
  41c9d3:	lea    edi,[ecx+0x1d]
  41c9d6:	dec    esp
  41c9d7:	jge    0x41ca27
  41c9d9:	mov    ds:0x1d5b2e4a,al
  41c9de:	std    
  41c9df:	add    al,BYTE PTR [ebx-0x231fc6dd]
  41c9e5:	push   cs
  41c9e6:	sbb    esp,DWORD PTR [ecx]
  41c9e8:	lods   eax,DWORD PTR ds:[esi]
  41c9e9:	or     bh,BYTE PTR [ecx-0x17]
  41c9ec:	xchg   edx,eax
  41c9ed:	mov    esp,0x99306f1b
  41c9f2:	out    dx,eax
  41c9f3:	add    dl,0x59
  41c9f6:	mov    al,ds:0xa3597ae6
  41c9fb:	shl    ebp,0xb4
  41c9fe:	aam    0x1e
  41ca00:	enter  0x387a,0xe8
  41ca04:	mov    edi,0x2d8efdef
  41ca09:	in     al,0x8f
  41ca0b:	cmp    DWORD PTR [ebx-0x73],ebp
  41ca0e:	ret    
  41ca0f:	dec    BYTE PTR [eax+edi*1-0x5a]
  41ca13:	call   ebx
  41ca15:	inc    ebp
  41ca16:	jne    0x41ca26
  41ca18:	adc    BYTE PTR [edx-0x3f],0x96
  41ca1c:	and    al,0x74
  41ca1e:	and    si,WORD PTR [ebx]
  41ca21:	stc    
  41ca22:	add    al,0xa2
  41ca24:	dec    ebp
  41ca25:	push   eax
  41ca26:	xor    BYTE PTR [edx-0x32],al
  41ca29:	pop    eax
  41ca2a:	cli    
  41ca2b:	mov    al,0xb8
  41ca2d:	sub    eax,0x4ba2bfe
  41ca32:	jo     0x41c9ee
  41ca34:	add    DWORD PTR [ecx],ebp
  41ca36:	idiv   DWORD PTR [ecx]
  41ca38:	dec    esp
  41ca39:	sar    DWORD PTR [eax+0x34be893e],cl
  41ca3f:	xor    edx,DWORD PTR [ebp-0x1626635]
  41ca45:	in     eax,dx
  41ca46:	je     0x41cab0
  41ca48:	mov    edx,0x71d85a87
  41ca4d:	retf   
  41ca4e:	stos   BYTE PTR es:[edi],al
  41ca4f:	loope  0x41c9f8
  41ca51:	adc    BYTE PTR [edi+0x53],cl
  41ca54:	mov    ds:0x54c06924,al
  41ca59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5b:	in     al,dx
  41ca5c:	lahf   
  41ca5d:	sub    al,0x3
  41ca5f:	clc    
  41ca60:	mov    edi,0x32d1310e
  41ca65:	mov    al,0x86
  41ca67:	in     eax,0xb5
  41ca69:	xchg   BYTE PTR [ecx+0x6d],cl
  41ca6c:	shl    BYTE PTR [eax],0x1e
  41ca6f:	in     ax,dx
  41ca71:	ret    0xcbaa
  41ca74:	add    BYTE PTR [edx+0x3f7a7a8f],0x16
  41ca7b:	in     eax,0xd6
  41ca7d:	sub    al,0x79
  41ca7f:	sbb    dh,dl
  41ca81:	mov    ch,0x1f
  41ca83:	ret    0xef5f
  41ca86:	mov    bl,0x8a
  41ca88:	in     al,dx
  41ca89:	pop    edx
  41ca8a:	cmc    
  41ca8b:	push   0xffffff82
  41ca8d:	clc    
  41ca8e:	lock ret 
  41ca90:	(bad)  
  41ca92:	in     eax,0xbd
  41ca94:	or     eax,0x380c70ae
  41ca99:	cmp    DWORD PTR [edi+0x8253],ebp
  41ca9f:	add    BYTE PTR [eax],al
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x6b]
  41caaf:	js     0x41cb20
  41cab1:	stc    
  41cab2:	dec    esi
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [esi+0xf7afe5b],ch
  41cabf:	or     al,0x3b
  41cac1:	int3   
  41cac2:	cmp    al,BYTE PTR [ebx]
  41cac4:	test   al,0x64
  41cac6:	and    dl,bh
  41cac8:	das    
  41cac9:	pop    ds
  41caca:	scas   al,BYTE PTR es:[edi]
  41cacb:	sub    eax,0x5132f2e9
  41cad0:	std    
  41cad1:	xor    esp,edx
  41cad3:	xchg   ebp,eax
  41cad4:	lods   eax,DWORD PTR ds:[esi]
  41cad5:	test   al,0x31
  41cad7:	loopne 0x41cab5
  41cad9:	push   edi
  41cada:	repz pop ds
  41cadc:	retf   0x2f1e
  41cadf:	jnp    0x41cb24
  41cae1:	push   ds
  41cae2:	in     al,0x76
  41cae4:	sub    edx,DWORD PTR [ebp-0x26bba507]
  41caea:	std    
  41caeb:	sub    dl,BYTE PTR [ecx]
  41caed:	pop    ds
  41caee:	in     eax,0xd3
  41caf0:	das    
  41caf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf2:	repz pop ebx
  41caf4:	repnz inc ebp
  41caf6:	imul   BYTE PTR [ebp-0x5c36bfbf]
  41cafc:	jmp    0xf941:0xd9fd6359
  41cb03:	mov    al,ds:0x79b7a4fe
  41cb08:	stos   DWORD PTR es:[edi],eax
  41cb09:	cs sti 
  41cb0b:	in     eax,0x79
  41cb0d:	rol    eax,0xcf
  41cb10:	jp     0x41cad8
  41cb12:	stos   DWORD PTR es:[edi],eax
  41cb13:	jl     0x41cb44
  41cb15:	repz imul esi,DWORD PTR [esp+edi*8],0xffffff86
  41cb1a:	ins    BYTE PTR es:[edi],dx
  41cb1b:	in     eax,dx
  41cb1c:	rcr    dh,cl
  41cb1e:	aam    0x47
  41cb20:	xor    edx,DWORD PTR [ebp+0x62217522]
  41cb26:	xor    ebx,DWORD PTR [eax+0x7a8a46de]
  41cb2c:	iret   
  41cb2d:	cwde   
  41cb2e:	aas    
  41cb2f:	push   es
  41cb30:	test   BYTE PTR [esi+0xaab13e6],0x53
  41cb37:	pop    ebx
  41cb38:	ins    BYTE PTR es:[edi],dx
  41cb39:	out    dx,eax
  41cb3a:	lods   al,BYTE PTR ds:[esi]
  41cb3b:	ds inc ebx
  41cb3d:	jne    0x41cb47
  41cb3f:	sbb    BYTE PTR ds:0x5bd00829,0x3
  41cb46:	sbb    eax,0xd2f6f391
  41cb4b:	mov    edx,DWORD PTR [ebx+edi*2-0x50]
  41cb4f:	sti    
  41cb50:	out    0xc2,al
  41cb52:	adc    esp,edi
  41cb54:	ja     0x41cb11
  41cb56:	pop    ecx
  41cb57:	in     eax,dx
  41cb58:	mov    WORD PTR [edx+0x28],ds
  41cb5b:	popf   
  41cb5c:	add    DWORD PTR [esi+0x1e],0x52
  41cb60:	jmp    0x41cbbd
  41cb62:	(bad)  
  41cb64:	(bad)
  41cb67:	in     eax,0xa4
  41cb69:	push   ds
  41cb6a:	test   edx,esi
  41cb6c:	inc    ecx
  41cb6d:	dec    DWORD PTR [ebx-0x50]
  41cb70:	xchg   edi,eax
  41cb71:	sbb    BYTE PTR [ebp-0x7e],cl
  41cb74:	mov    bl,0x43
  41cb76:	mov    bl,0xee
  41cb78:	add    BYTE PTR [eax+0x2d],ch
  41cb7b:	xor    edx,0x5134a80d
  41cb81:	xor    DWORD PTR [ebx],0xe0a2abd2
  41cb87:	push   ds
  41cb88:	push   0x79
  41cb8a:	push   ebp
  41cb8b:	enter  0xb74e,0xc9
  41cb8f:	mov    edi,0x80b0a6ba
  41cb94:	mov    al,ds:0xcee1b924
  41cb99:	add    DWORD PTR [ebx],edx
  41cb9b:	pop    esp
  41cb9c:	fnstsw WORD PTR [eax]
  41cb9e:	ss add eax,0xa78ecc5f
  41cba4:	jnp    0x41cc05
  41cba6:	scas   eax,DWORD PTR es:[edi]
  41cba7:	xchg   ecx,eax
  41cba8:	mov    ebp,0x9b65dc8b
  41cbad:	int    0x26
  41cbaf:	xchg   esp,eax
  41cbb0:	pop    ebp
  41cbb1:	mov    edi,0xd805b431
  41cbb6:	mov    ss,WORD PTR es:[eax+esi*2]
  41cbba:	xor    dl,bl
  41cbbc:	mov    eax,ds:0x581f9345
  41cbc1:	push   eax
  41cbc2:	mov    BYTE PTR [edi+0xc],cl
  41cbc5:	and    ah,dh
  41cbc7:	jbe    0x41cbb9
  41cbc9:	sub    DWORD PTR [ecx-0x76cd109],ebp
  41cbcf:	test   eax,0x64997c4c
  41cbd4:	jno    0x41cbff
  41cbd6:	push   ebp
  41cbd7:	loop   0x41cb6f
  41cbd9:	enter  0xebaa,0xa8
  41cbdd:	cld    
  41cbde:	inc    ebx
  41cbdf:	mov    eax,0xcaa70a28
  41cbe4:	jle    0x41cc03
  41cbe6:	dec    BYTE PTR [esi+edi*1]
  41cbe9:	rcr    DWORD PTR [edx-0x7ab8d066],1
  41cbef:	not    ebp
  41cbf1:	shr    ecx,1
  41cbf3:	in     al,dx
  41cbf4:	dec    edx
  41cbf5:	add    esp,DWORD PTR [edx]
  41cbf7:	push   cs
  41cbf8:	pusha  
  41cbf9:	pop    edx
  41cbfa:	shl    BYTE PTR [esi+0xdf72084],1
  41cc00:	sbb    al,0xd
  41cc02:	pushf  
  41cc03:	out    0xd6,al
  41cc05:	pushf  
  41cc06:	imul   ch
  41cc08:	iret   
  41cc09:	int    0x1
  41cc0b:	or     al,0x57
  41cc0d:	sub    DWORD PTR [edx+0x1e521eab],ecx
  41cc13:	sub    ecx,DWORD PTR [edi]
  41cc15:	xor    eax,0x58ff3f51
  41cc1a:	pop    es
  41cc1b:	(bad)  [ebx]
  41cc1d:	adc    BYTE PTR [eax+esi*4],dh
  41cc20:	jbe    0x41cbc3
  41cc22:	clc    
  41cc23:	sbb    ebp,ecx
  41cc25:	lock lea ecx,[edx+0x11875fcc]
  41cc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc2d:	jecxz  0x41cc06
  41cc2f:	pop    ebx
  41cc30:	xchg   ecx,eax
  41cc31:	cmp    BYTE PTR [ebx+eiz*4],dh
  41cc34:	jnp    0x41cc91
  41cc36:	cmp    eax,0x2c43b051
  41cc3b:	mov    al,ds:0xd8bc27e2
  41cc40:	stos   DWORD PTR es:[edi],eax
  41cc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc42:	xor    edi,DWORD PTR [eax+0x19fe772e]
  41cc48:	out    0x8b,eax
  41cc4a:	add    DWORD PTR [edx],ecx
  41cc4c:	jecxz  0x41cc23
  41cc4e:	sub    al,0xeb
  41cc50:	push   ebp
  41cc51:	sub    bh,cl
  41cc53:	repz cmp bl,BYTE PTR [edx+eax*1+0x7d]
  41cc58:	mov    ebx,0xf216cde4
  41cc5d:	test   al,0xee
  41cc5f:	test   al,0xa9
  41cc61:	jl     0x41cc14
  41cc63:	jp     0x41cc85
  41cc65:	mov    al,ds:0xa0c11704
  41cc6a:	and    BYTE PTR [edi],dl
  41cc6c:	mov    edx,0xf0d2116c
  41cc71:	popa   
  41cc72:	push   0xffffff80
  41cc74:	lahf   
  41cc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc76:	push   edx
  41cc77:	jp     0x41cca0
  41cc79:	jnp    0x41cc9f
  41cc7b:	xchg   edx,eax
  41cc7c:	jns    0x41cc4d
  41cc7e:	cmp    eax,0xa684e430
  41cc83:	fs mov eax,0x6685c9b6
  41cc89:	mov    al,0x5f
  41cc8b:	push   eax
  41cc8c:	pop    eax
  41cc8d:	rcr    BYTE PTR [edx+0x11],0x39
  41cc91:	push   ebx
  41cc92:	mov    dl,0x76
  41cc94:	inc    esi
  41cc95:	inc    esp
  41cc96:	loop   0x41cc2f
  41cc98:	xchg   ecx,eax
  41cc99:	popf   
  41cc9a:	fs xchg esp,eax
  41cc9c:	push   edi
  41cc9d:	xlat   BYTE PTR ds:[ebx]
  41cc9e:	cdq    
  41cc9f:	mov    DWORD PTR [eax],esi
  41cca1:	mov    al,0xf8
  41cca3:	add    eax,0xd4c06699
  41cca8:	dec    ecx
  41cca9:	leave  
  41ccaa:	fld    TBYTE PTR [edx-0x9]
  41ccad:	push   cs
  41ccae:	push   ecx
  41ccaf:	daa    
  41ccb0:	push   edi
  41ccb1:	and    dl,bh
  41ccb3:	outs   dx,DWORD PTR ds:[esi]
  41ccb4:	pop    esi
  41ccb5:	neg    BYTE PTR [eax]
  41ccb7:	sub    esp,edx
  41ccb9:	fcom   DWORD PTR [edx]
  41ccbb:	leave  
  41ccbc:	or     eax,edi
  41ccbe:	mov    ds:0x19fcca0b,eax
  41ccc3:	lahf   
  41ccc4:	adc    ah,BYTE PTR [ebx]
  41ccc6:	xchg   esp,eax
  41ccc7:	mov    ebp,0xd882db96
  41cccc:	lock test eax,0xf6b5ac95
  41ccd2:	(bad)  
  41ccd3:	(bad)  
  41ccd4:	not    ah
  41ccd6:	ret    
  41ccd7:	adc    BYTE PTR [edx-0x484a14a3],dl
  41ccdd:	jmp    0x80e86599
  41cce2:	pop    ss
  41cce3:	add    al,0x47
  41cce5:	stos   DWORD PTR es:[edi],eax
  41cce6:	inc    esp
  41cce7:	mov    WORD PTR [ebx+0x1a],cs
  41ccea:	mov    al,ds:0xf2d0b14f
  41ccef:	into   
  41ccf0:	xor    al,0x41
  41ccf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf3:	in     eax,dx
  41ccf4:	popf   
  41ccf5:	loopne 0x41cc9c
  41ccf7:	loopne 0x41cc79
  41ccf9:	xchg   esi,eax
  41ccfa:	pop    esi
  41ccfb:	retf   0xf08d
  41ccfe:	mov    bh,al
  41cd00:	xchg   al,dl
  41cd02:	bound  esp,QWORD PTR [edx]
  41cd04:	dec    edi
  41cd05:	xchg   DWORD PTR [ebx],edx
  41cd07:	and    bl,BYTE PTR [eax]
  41cd09:	add    BYTE PTR [edx-0xf],cl
  41cd0c:	fwait
  41cd0d:	push   ss
  41cd0e:	mov    ebp,0x7e8299c8
  41cd13:	pop    eax
  41cd14:	enter  0xe6e3,0xa4
  41cd18:	dec    esi
  41cd19:	retf   0xa176
  41cd1c:	les    esp,FWORD PTR [eax+0x71]
  41cd1f:	cmp    DWORD PTR [esp+ebx*8+0x1c884a58],0xffffffef
  41cd27:	xchg   ecx,eax
  41cd28:	shl    BYTE PTR [edi],cl
  41cd2a:	xor    ecx,DWORD PTR [edi+0x32db1f76]
  41cd30:	xlat   BYTE PTR ds:[ebx]
  41cd31:	popa   
  41cd32:	addr16 cdq 
  41cd34:	push   0xdd781bda
  41cd39:	mov    DWORD PTR [eax+esi*8-0x4e],0xd9164d3b
  41cd41:	retf   
  41cd42:	adc    al,0x5b
  41cd44:	jbe    0x41cd0a
  41cd46:	push   esp
  41cd47:	iret   
  41cd48:	add    DWORD PTR ds:0x9dc4d3c3,eax
  41cd4e:	adc    eax,0x12a9d0bb
  41cd53:	sub    al,0xe6
  41cd55:	outs   dx,DWORD PTR ds:[esi]
  41cd56:	jge    0x41cd8c
  41cd58:	inc    esp
  41cd59:	mov    dl,BYTE PTR [ebp+ecx*2+0x34]
  41cd5d:	xchg   ebp,eax
  41cd5e:	and    BYTE PTR [edx+0x1b],dl
  41cd61:	(bad)
  41cd64:	mov    edx,0x96bd381f
  41cd69:	mov    ch,0x3f
  41cd6b:	call   0x53986033
  41cd70:	sahf   
  41cd71:	add    ecx,edi
  41cd73:	mov    al,0x92
  41cd75:	sub    DWORD PTR [esi+0x7a],0xffffff9b
  41cd79:	data16 mov bh,0xb5
  41cd7c:	pop    ebx
  41cd7d:	sbb    DWORD PTR [ebp+0x29],0xfffffff5
  41cd81:	ja     0x41cd4a
  41cd83:	fadd   QWORD PTR [ecx-0x32]
  41cd86:	push   edi
  41cd87:	and    eax,0x830f2581
  41cd8c:	or     ah,BYTE PTR [ebx+eiz*1-0x46b01a66]
  41cd93:	mov    edx,0xec11cc88
  41cd98:	dec    esp
  41cd99:	(bad)  
  41cd9a:	cmp    al,0x5d
  41cd9c:	push   edi
  41cd9d:	hlt    
  41cd9e:	inc    ebx
  41cd9f:	scas   eax,DWORD PTR es:[edi]
  41cda0:	sub    BYTE PTR [edi-0x26be8024],al
  41cda6:	outs   dx,DWORD PTR ds:[esi]
  41cda7:	(bad)  
  41cda9:	rol    DWORD PTR [esi-0x55],cl
  41cdac:	xchg   DWORD PTR [eax+0x72],eax
  41cdaf:	(bad)  
  41cdb0:	mov    esi,DWORD PTR [ebx-0x63]
  41cdb3:	inc    eax
  41cdb4:	fdiv   st,st(6)
  41cdb6:	mov    DWORD PTR [edx+0x7646dfb5],eax
  41cdbc:	lods   eax,DWORD PTR ds:[esi]
  41cdbd:	aaa    
  41cdbe:	out    dx,eax
  41cdbf:	fsub   QWORD PTR [eax-0x4378f8fe]
  41cdc5:	test   al,0x2b
  41cdc7:	sub    BYTE PTR [ebx-0xb3ccd37],ch
  41cdcd:	jmp    0xc9bfcd6
  41cdd2:	(bad)  
  41cdd3:	mov    bh,0x71
  41cdd5:	loopne 0x41cdb1
  41cdd7:	cdq    
  41cdd8:	(bad)  
  41cdd9:	out    dx,al
  41cdda:	mov    bh,0x35
  41cddc:	pushf  
  41cddd:	(bad)
  41cde0:	cwde   
  41cde1:	cmp    al,0xbe
  41cde3:	bsr    edi,DWORD PTR [ebp+ebp*2-0x4bc75b1d]
  41cdeb:	mov    bl,0xf4
  41cded:	out    0xdb,eax
  41cdef:	or     BYTE PTR [bp+si+0xf],bl
  41cdf3:	test   al,0x17
  41cdf5:	frstor [ebp-0x56c158e3]
  41cdfb:	pop    ds
  41cdfc:	mov    ebx,0x3ff6b119
  41ce01:	mov    ds:0xc500c262,al
  41ce06:	loope  0x41ce36
  41ce08:	mov    DWORD PTR [edi+0x2fac29de],edx
  41ce0e:	es (bad) 
  41ce10:	or     al,0xec
  41ce12:	push   ebx
  41ce13:	mov    ds:0x65992f4,eax
  41ce18:	xchg   esp,eax
  41ce19:	mov    WORD PTR [esi-0x1aeac3ac],cs
  41ce1f:	mov    WORD PTR [ebp+0x1d49f8fb],es
  41ce25:	push   cs
  41ce26:	xor    al,ah
  41ce28:	add    al,0x4e
  41ce2a:	ror    esi,1
  41ce2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2d:	(bad)  
  41ce2e:	(bad)  
  41ce2f:	xor    bl,BYTE PTR [ebx-0x403b70f7]
  41ce35:	cld    
  41ce36:	mov    ds:0x7e22268a,al
  41ce3b:	jnp    0x41cdbe
  41ce3d:	and    ah,cl
  41ce3f:	mov    eax,0x39d9ddf1
  41ce44:	icebp  
  41ce45:	mov    WORD PTR [edi+ecx*1-0x12],ds
  41ce49:	and    dh,BYTE PTR [ebp+0x23a5cd8f]
  41ce4f:	std    
  41ce50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce51:	iret   
  41ce52:	cli    
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	xor    DWORD PTR [esi-0x28d3caec],ecx
  41ce5a:	mov    dl,0x3f
  41ce5c:	lods   al,BYTE PTR ds:[esi]
  41ce5d:	inc    esi
  41ce5e:	jns    0x41ce14
  41ce60:	lea    esi,[ecx+0x24]
  41ce63:	cmp    BYTE PTR [eax],ch
  41ce65:	call   DWORD PTR [edi-0x240eb82f]
  41ce6b:	mov    al,0xd7
  41ce6d:	pop    eax
  41ce6e:	push   edi
  41ce6f:	psllq  mm2,mm7
  41ce72:	mov    dh,0x11
  41ce74:	popf   
  41ce75:	fistp  DWORD PTR [ebp+0x7c]
  41ce78:	ins    DWORD PTR es:[edi],dx
  41ce79:	js     0x41cea1
  41ce7b:	xchg   edx,eax
  41ce7c:	loope  0x41ce8b
  41ce7e:	ss mov edi,0xcab14c97
  41ce84:	add    BYTE PTR [edi-0x26a2eab9],ch
  41ce8a:	(bad)  
  41ce8b:	dec    DWORD PTR [edx+edi*2-0x7b]
  41ce8f:	out    0xc9,eax
  41ce91:	fdiv   QWORD PTR [ecx+edx*2-0x54]
  41ce95:	aad    0x16
  41ce97:	cmp    eax,0xf912a73a
  41ce9c:	imul   ebp,edx,0x4e62845c
  41cea2:	jns    0x41ce25
  41cea4:	or     DWORD PTR [esi],edx
  41cea6:	rcl    DWORD PTR [eax+0x16],1
  41cea9:	cmp    al,0x9f
  41ceab:	add    al,0xaa
  41cead:	pop    edi
  41ceae:	inc    ebx
  41ceaf:	popf   
  41ceb0:	nop
  41ceb1:	imul   esp,DWORD PTR [ebp+0x1df095a5],0xffffffe6
  41ceb8:	and    eax,ebx
  41ceba:	mov    edx,DWORD PTR [eax+edi*8+0x3a2cef9f]
  41cec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec2:	ds mov bh,0x12
  41cec5:	push   esp
  41cec6:	sbb    eax,0x1936b5b8
  41cecb:	mov    cl,0xc3
  41cecd:	test   BYTE PTR ds:0x623af307,0x2b
  41ced4:	gs mov ebp,0x184f0e2e
  41ceda:	repz dec esi
  41cedc:	sub    edi,ebp
  41cede:	inc    esp
  41cedf:	and    BYTE PTR [ecx+0x23da8509],dl
  41cee5:	nop
  41cee6:	repnz inc ebp
  41cee8:	popa   
  41cee9:	mov    ?,eax
  41ceeb:	push   DWORD PTR [edi+0x5d]
  41ceee:	sar    BYTE PTR [edi-0x5d7b5d28],1
  41cef4:	hlt    
  41cef5:	push   edx
  41cef6:	xchg   esp,eax
  41cef7:	jae    0x41ced6
  41cef9:	xchg   DWORD PTR [ebx-0x18],ecx
  41cefc:	and    al,0x7b
  41ceff:	popf   
  41cf00:	jns    0x41ceaa
  41cf02:	es xchg esi,eax
  41cf04:	ins    DWORD PTR es:[edi],dx
  41cf05:	or     al,0xe2
  41cf07:	inc    ebp
  41cf08:	cmp    DWORD PTR [esi],edx
  41cf0a:	dec    esp
  41cf0b:	addr16 pop ebx
  41cf0d:	xchg   BYTE PTR [ecx+edx*2+0xf],cl
  41cf11:	jecxz  0x41cf62
  41cf13:	inc    edi
  41cf14:	push   esp
  41cf15:	je     0x41cedf
  41cf17:	push   eax
  41cf18:	jp     0x41cf13
  41cf1a:	aas    
  41cf1b:	or     dh,BYTE PTR [ecx]
  41cf1d:	push   ebx
  41cf1e:	jno    0x41cf48
  41cf20:	jnp    0x41cf95
  41cf22:	mov    ebx,0x62d70f35
  41cf27:	sub    bl,BYTE PTR [ebx+0x6e]
  41cf2a:	sub    esi,ebp
  41cf2c:	cli    
  41cf2d:	xchg   ecx,eax
  41cf2e:	xchg   esp,eax
  41cf2f:	mov    eax,0x305f1000
  41cf34:	ds jmp 0x41cf13
  41cf37:	push   0xb6c1a492
  41cf3c:	in     eax,0x10
  41cf3e:	in     eax,dx
  41cf3f:	sbb    eax,0xe6dbc264
  41cf44:	cmp    al,0x91
  41cf46:	aaa    
  41cf47:	retf   
  41cf48:	retf   0x69b5
  41cf4b:	not    BYTE PTR [eax]
  41cf4d:	rcl    al,cl
  41cf4f:	mov    WORD PTR [esi+edx*1+0x14487183],ds
  41cf56:	push   ebp
  41cf57:	xor    ecx,DWORD PTR [eax+eax*1]
  41cf5a:	call   0x1055d6cf
  41cf5f:	cdq    
  41cf60:	jnp    0x41ceea
  41cf62:	xchg   ch,ah
  41cf64:	add    ah,BYTE PTR fs:[esi-0x714b76ba]
  41cf6b:	mov    ds:0x8b3dfdba,al
  41cf70:	stc    
  41cf71:	test   al,0x44
  41cf73:	mov    eax,0x86315413
  41cf78:	xor    dl,BYTE PTR [edi+0x3082a297]
  41cf7e:	loope  0x41cf76
  41cf80:	xor    bl,BYTE PTR [eax+0x77d3e6f3]
  41cf86:	pop    ds
  41cf87:	out    dx,al
  41cf88:	adc    al,0xe7
  41cf8a:	xor    bl,BYTE PTR ss:[eax]
  41cf8d:	js     0x41cf29
  41cf8f:	shl    BYTE PTR [esi],cl
  41cf91:	push   ds
  41cf92:	std    
  41cf93:	sbb    eax,0x7b07c4cb
  41cf98:	dec    esp
  41cf99:	out    0x62,al
  41cf9b:	push   ss
  41cf9c:	scas   al,BYTE PTR es:[edi]
  41cf9d:	inc    esp
  41cf9e:	out    dx,eax
  41cf9f:	sbb    DWORD PTR cs:[edx+0xbe65384],edi
  41cfa6:	pushf  
  41cfa7:	rep outs dx,BYTE PTR ds:[esi]
  41cfa9:	cmp    BYTE PTR [eax],ah
  41cfab:	push   edx
  41cfac:	jge    0x41cfae
  41cfae:	add    BYTE PTR [eax],al
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0xb6b5d6dd
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    cl,cl
  41cfcb:	jg     0x41cfff
  41cfcd:	xchg   edx,eax
  41cfce:	repnz pop esp
  41cfd0:	cmp    eax,eax
  41cfd2:	div    DWORD PTR [ebx-0x4c9c8a1e]
  41cfd8:	sbb    al,BYTE PTR [ebp-0xda8b697]
  41cfde:	cmp    esi,DWORD PTR ds:0xcd42087b
  41cfe4:	out    0x23,eax
  41cfe6:	add    al,0xe2
  41cfe8:	push   edx
  41cfe9:	push   0x6a9acf8e
  41cfee:	and    DWORD PTR ds:0xfbe6e1b8,esi
  41cff4:	xchg   esp,eax
  41cff5:	clc    
  41cff6:	ss jno 0x41d06f
  41cff9:	mov    al,0x59
  41cffb:	sar    BYTE PTR [eax+edx*4],1
  41cffe:	aam    0x93
  41d000:	jmp    FWORD PTR [ebp-0x34]
  41d003:	inc    edx
  41d004:	(bad)  
  41d006:	xor    ch,BYTE PTR [eax]
  41d008:	ret    
  41d009:	into   
  41d00a:	jp     0x41d02a
  41d00c:	pop    ds
  41d00d:	push   ecx
  41d00e:	adc    DWORD PTR [eax],0x628d20b2
  41d014:	and    DWORD PTR [eax+eiz*1+0x6b],edi
  41d018:	mov    BYTE PTR [esi+0x44a3f8ec],al
  41d01e:	(bad)  
  41d01f:	jl     0x41d04b
  41d021:	retf   
  41d022:	lds    edx,FWORD PTR ds:0x23c8ee38
  41d028:	inc    eax
  41d029:	sub    ebp,DWORD PTR [eax+0x14c40a48]
  41d02f:	push   cs
  41d030:	int3   
  41d031:	ins    DWORD PTR es:[edi],dx
  41d032:	retf   
  41d033:	dec    edi
  41d034:	mov    ch,BYTE PTR [eax+0x619c1a9c]
  41d03a:	mov    eax,ds:0x984c1b15
  41d03f:	pop    ss
  41d040:	ins    DWORD PTR es:[edi],dx
  41d041:	(bad)  
  41d042:	in     al,dx
  41d043:	mov    edi,0x7182ca8b
  41d048:	add    eax,0x99f9d821
  41d04d:	jns    0x41d045
  41d04f:	sbb    ch,BYTE PTR [eax+0x6b5fe5d2]
  41d055:	and    eax,esi
  41d057:	and    al,0x6b
  41d059:	dec    ebx
  41d05a:	jne    0x41d00a
  41d05c:	push   esi
  41d05d:	out    0x13,eax
  41d05f:	jmp    0x6853:0xc3151cab
  41d066:	or     ebx,esi
  41d068:	pop    edx
  41d069:	loop   0x41d047
  41d06b:	sti    
  41d06c:	popf   
  41d06d:	cdq    
  41d06e:	clc    
  41d06f:	xor    ah,BYTE PTR [ebp+0x68]
  41d072:	push   ds
  41d073:	sbb    dl,al
  41d075:	sahf   
  41d076:	jb     0x41d01e
  41d078:	arpl   WORD PTR [edi-0x4daf6f15],bx
  41d07e:	pushw  0xa53d
  41d082:	in     al,dx
  41d083:	mov    ebx,0x5fe10555
  41d088:	loope  0x41d0d7
  41d08a:	xchg   edi,eax
  41d08b:	xabort 0x5a
  41d08e:	or     BYTE PTR [ebx-0x13ff5caa],dl
  41d094:	ror    DWORD PTR [ebx+edx*8-0x4],1
  41d098:	pop    ecx
  41d099:	mov    ds:0x4b2e91f5,eax
  41d09e:	out    0xa1,eax
  41d0a0:	jnp    0x41d02e
  41d0a2:	outs   dx,DWORD PTR ds:[esi]
  41d0a3:	xchg   ebp,eax
  41d0a4:	sbb    dh,BYTE PTR [edx+0x15cb206c]
  41d0aa:	mov    dl,0x34
  41d0ac:	rcr    ebp,1
  41d0ae:	dec    ecx
  41d0af:	or     ebp,esp
  41d0b1:	xchg   DWORD PTR ds:0xf8185a42,ebx
  41d0b7:	out    dx,eax
  41d0b8:	sti    
  41d0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ba:	sbb    al,0x2f
  41d0bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0bd:	mov    dl,0x5
  41d0bf:	inc    ebx
  41d0c0:	fnstcw WORD PTR [ecx+edi*8-0x46009a6]
  41d0c7:	mov    WORD PTR fs:0x43a26281,fs
  41d0ce:	mov    esp,0x5944641c
  41d0d3:	(bad)  
  41d0d4:	adc    eax,0xdc5365
  41d0d9:	nop
  41d0da:	hlt    
  41d0db:	mov    esi,0xea49c0e3
  41d0e0:	push   ss
  41d0e1:	aaa    
  41d0e2:	mov    cl,cl
  41d0e4:	out    0x7c,eax
  41d0e6:	and    al,0xd6
  41d0e8:	clc    
  41d0e9:	dec    ebx
  41d0ea:	adc    ah,BYTE PTR [eax-0x6a0e3dfc]
  41d0f0:	cmp    eax,0xe6cc241d
  41d0f5:	jnp    0x41d07f
  41d0f7:	dec    edi
  41d0f8:	shl    DWORD PTR [ebx+0x2f],0xa3
  41d0fc:	in     al,0x21
  41d0fe:	fcmovb st,st(3)
  41d100:	pushf  
  41d101:	mov    edi,0x5504df4b
  41d106:	mov    dl,0x7d
  41d108:	das    
  41d109:	rcr    BYTE PTR [esi+ecx*8-0x19],cl
  41d10d:	sub    al,0xa8
  41d10f:	icebp  
  41d110:	loop   0x41d15e
  41d112:	push   cs
  41d113:	fld    DWORD PTR [ebx+0x3a]
  41d116:	dec    ecx
  41d117:	cmp    eax,DWORD PTR es:[eax+0x2e7b1db9]
  41d11e:	xchg   esi,eax
  41d11f:	aad    0xb1
  41d121:	mov    ds:0xe399f3bb,eax
  41d126:	adc    al,0x67
  41d128:	jecxz  0x41d0f3
  41d12a:	xchg   ebp,eax
  41d12b:	jae    0x41d169
  41d12d:	lods   al,BYTE PTR ds:[esi]
  41d12e:	loope  0x41d15c
  41d130:	jns    0x41d141
  41d132:	or     eax,0xb92555a7
  41d137:	cmp    ebx,DWORD PTR [edx+ecx*1+0x1dc7fc69]
  41d13e:	fistp  DWORD PTR [esi]
  41d140:	neg    cl
  41d142:	cmp    ebp,ecx
  41d144:	jb     0x41d152
  41d146:	addr16 jmp 0x5cbc:0xfaf7c4f6
  41d14e:	cmp    al,BYTE PTR [esi+0x494aa519]
  41d154:	mov    dh,0xd5
  41d156:	mov    bl,0x56
  41d158:	jecxz  0x41d13c
  41d15a:	jno    0x41d170
  41d15c:	xor    ecx,DWORD PTR [edx+0x5a987a45]
  41d162:	sub    esi,edx
  41d164:	imul   edi,DWORD PTR [ebx+0x63f468c7],0xffffffd4
  41d16b:	cs rcl eax,1
  41d16e:	pop    edi
  41d16f:	adc    ch,BYTE PTR [edx]
  41d171:	dec    edi
  41d172:	frstor [di]
  41d175:	(bad)  
  41d176:	fdivr  DWORD PTR [esi+edx*1]
  41d179:	mov    al,BYTE PTR [eax+0x48269ea8]
  41d17f:	mov    ds:0xdd1fa3a4,eax
  41d184:	out    0x3,eax
  41d186:	xor    al,0x6
  41d188:	mov    cl,0x62
  41d18a:	fsub   QWORD PTR [esi+0xbe1706c]
  41d190:	sbb    esp,DWORD PTR [ecx]
  41d192:	jae    0x41d13b
  41d194:	xor    ch,BYTE PTR [eax-0x3fab58e0]
  41d19a:	out    dx,eax
  41d19b:	stos   DWORD PTR es:[edi],eax
  41d19c:	in     al,dx
  41d19d:	call   0xdb06:0x22b2cc36
  41d1a4:	inc    edx
  41d1a5:	outs   dx,BYTE PTR ds:[esi]
  41d1a6:	(bad)  
  41d1a7:	stos   WORD PTR es:[edi],ax
  41d1a9:	and    al,0x8c
  41d1ab:	xchg   ebx,eax
  41d1ac:	lahf   
  41d1ad:	sub    al,BYTE PTR [ebx+0xd]
  41d1b0:	mov    bl,0x92
  41d1b2:	add    esp,DWORD PTR [ebp+0x20]
  41d1b5:	mov    ebp,0xc5c219c0
  41d1ba:	(bad)  
  41d1bb:	fnstsw WORD PTR [ebx+0x59]
  41d1be:	cmp    al,0xa9
  41d1c0:	lds    esi,FWORD PTR [esi+0xf43ad40]
  41d1c6:	pop    edi
  41d1c7:	pusha  
  41d1c8:	jle    0x41d198
  41d1ca:	jmp    0x41d1c0
  41d1cc:	sbb    al,0x5d
  41d1ce:	and    DWORD PTR [esi+ebp*4+0x1c443a76],esp
  41d1d5:	pop    ss
  41d1d6:	call   edx
  41d1d8:	test   eax,0xe46da2c6
  41d1dd:	call   0x1602:0xacb8ce8
  41d1e4:	cmp    DWORD PTR [ecx+0x375a24fd],eax
  41d1ea:	not    al
  41d1ec:	lds    ebx,FWORD PTR [esi-0x38]
  41d1ef:	jl     0x41d1c1
  41d1f1:	shl    BYTE PTR [eax-0x3e],cl
  41d1f4:	xor    eax,0x6756e873
  41d1f9:	cmp    dl,BYTE PTR ss:[edx+0x8]
  41d1fd:	aas    
  41d1fe:	cwde   
  41d1ff:	jle    0x41d1da
  41d201:	mov    dl,0x6a
  41d203:	add    edi,esp
  41d205:	pop    esi
  41d206:	xor    esi,DWORD PTR [ebx+0x64490119]
  41d20c:	lods   eax,DWORD PTR ds:[esi]
  41d20d:	aad    0x17
  41d20f:	push   es
  41d210:	in     al,dx
  41d211:	sbb    al,0x19
  41d213:	adc    edx,DWORD PTR [edi+ecx*2]
  41d216:	out    0xca,eax
  41d218:	repz xor esp,DWORD PTR [ecx+edi*4]
  41d21c:	cdq    
  41d21d:	cli    
  41d21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d21f:	inc    ebx
  41d220:	hlt    
  41d221:	push   0x38
  41d223:	ds sahf 
  41d225:	pushf  
  41d226:	mov    edx,0x9ce64d24
  41d22b:	sbb    eax,0x31eb6b2f
  41d230:	(bad)  
  41d231:	mov    dl,0xad
  41d233:	push   ss
  41d234:	jae    0x41d2a1
  41d236:	jne    0x41d26f
  41d238:	mov    al,0xec
  41d23a:	mov    ah,0x2c
  41d23c:	aas    
  41d23d:	add    ah,BYTE PTR ds:0xe813a180
  41d244:	outs   dx,BYTE PTR ds:[esi]
  41d245:	or     al,0xc0
  41d247:	xchg   BYTE PTR [ebx-0x389ec331],cl
  41d24d:	in     eax,0xb1
  41d24f:	mov    esp,0xd40bee56
  41d254:	call   0xc5f2de21
  41d259:	pop    DWORD PTR [esi]
  41d25b:	pop    edx
  41d25c:	sbb    al,0x85
  41d25e:	ret    
  41d25f:	xchg   edx,eax
  41d260:	mov    edi,0xee2fbb6d
  41d265:	pop    esi
  41d266:	call   0xcfe327da
  41d26b:	ins    DWORD PTR es:[edi],dx
  41d26c:	cwde   
  41d26d:	sti    
  41d26e:	adc    BYTE PTR [ecx-0xb],dl
  41d271:	and    al,BYTE PTR [ebp+eiz*1+0x2eed4635]
  41d278:	sub    DWORD PTR [edi],ebx
  41d27a:	ins    DWORD PTR es:[edi],dx
  41d27b:	xchg   edi,eax
  41d27c:	int3   
  41d27d:	adc    al,BYTE PTR [edi+0xf]
  41d280:	popa   
  41d281:	or     eax,0xd6c814b2
  41d286:	and    eax,0x1c327ce0
  41d28b:	je     0x41d22f
  41d28d:	mov    edx,0x4a121879
  41d292:	mov    esi,0xd219ecfe
  41d297:	jle    0x41d2ff
  41d299:	adc    al,0xcc
  41d29b:	loope  0x41d223
  41d29d:	(bad)  
  41d29e:	push   ds
  41d29f:	mov    dh,BYTE PTR [ebx]
  41d2a1:	in     al,dx
  41d2a2:	sahf   
  41d2a3:	pop    ebp
  41d2a4:	retf   0xb3be
  41d2a7:	mov    ebp,0x21d15149
  41d2ac:	stc    
  41d2ad:	or     DWORD PTR [eax],0xffffff9c
  41d2b0:	in     eax,0x2b
  41d2b2:	mov    ds:0x4ffd6ef2,eax
  41d2b7:	pop    es
  41d2b8:	(bad)
  41d2bb:	or     bh,BYTE PTR [ebx+0x9]
  41d2be:	jmp    0xf601:0xb21924bf
  41d2c5:	ds cwde 
  41d2c7:	fisubr WORD PTR [edi]
  41d2c9:	cmc    
  41d2ca:	rol    ecx,0x80
  41d2cd:	shl    DWORD PTR [esi-0x29],1
  41d2d0:	es or  al,0x57
  41d2d3:	fmul   QWORD PTR [eax+0x2f]
  41d2d6:	lahf   
  41d2d7:	pusha  
  41d2d8:	cmp    ecx,edx
  41d2da:	fadd   DWORD PTR [edx-0x43]
  41d2dd:	adc    eax,0x1188f116
  41d2e2:	jp     0x41d2f4
  41d2e4:	push   esp
  41d2e5:	inc    ecx
  41d2e6:	rol    DWORD PTR [edx-0x59],0x6d
  41d2ea:	mov    bh,0x5c
  41d2ec:	fidiv  WORD PTR [ebp+esi*8+0x7dab4f04]
  41d2f3:	leave  
  41d2f4:	fisub  WORD PTR [esi+0x23]
  41d2f7:	loop   0x41d2c9
  41d2f9:	inc    esp
  41d2fa:	repnz cmp ch,ah
  41d2fd:	mov    dh,0x3c
  41d2ff:	push   es
  41d300:	pop    ecx
  41d301:	xchg   ebx,eax
  41d302:	jns    0x41d2cb
  41d304:	pop    ecx
  41d305:	and    ecx,edi
  41d307:	push   ebx
  41d308:	out    dx,al
  41d309:	fidivr WORD PTR [ebp-0x62]
  41d30c:	add    eax,0x4c791b1e
  41d311:	or     eax,DWORD PTR ds:0xcfc58e51
  41d317:	add    edi,DWORD PTR [ebp+0xfa52117]
  41d31d:	sub    al,0xe0
  41d31f:	inc    DWORD PTR [esp+esi*4+0x11006e52]
  41d326:	call   0x32dd:0x44d5e625
  41d32d:	ds fs sub bh,0xfc
  41d332:	mov    al,ds:0xb5ba3a92
  41d337:	jecxz  0x41d31f
  41d339:	mov    al,0x2f
  41d33b:	pushf  
  41d33c:	(bad)  
  41d33d:	xor    dl,bh
  41d33f:	mov    ch,0xbf
  41d341:	sub    ebx,DWORD PTR [edx]
  41d343:	ret    0xdb23
  41d346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d347:	dec    edi
  41d348:	test   eax,0xe99c7430
  41d34d:	dec    esp
  41d34e:	and    BYTE PTR [ecx-0x2676ddf1],bl
  41d354:	jl     0x41d30c
  41d356:	adc    BYTE PTR [edi+0x27],al
  41d359:	rcl    DWORD PTR [ebx+0x9],0xb0
  41d35d:	push   0x5965ff5f
  41d362:	mov    BYTE PTR [ebp+0x79],ch
  41d365:	sub    DWORD PTR [edx-0x6afb9ce5],esi
  41d36b:	mov    ecx,DWORD PTR [ebx]
  41d36d:	xor    BYTE PTR [esi-0x2a],0xdd
  41d371:	mov    ebx,eax
  41d373:	hlt    
  41d374:	push   0xffffff81
  41d376:	push   edi
  41d377:	sub    ebp,DWORD PTR [edx-0x7c0119a1]
  41d37d:	sub    dh,BYTE PTR [ebx+0x46735270]
  41d383:	inc    esi
  41d384:	pop    esi
  41d385:	or     eax,ebp
  41d387:	mov    eax,ds:0x654d42db
  41d38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d38d:	dec    eax
  41d38e:	add    BYTE PTR [ebp+0x49a34164],dh
  41d394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d395:	test   DWORD PTR [eax-0x43],ebp
  41d398:	add    eax,0xc5b5c538
  41d39d:	xor    DWORD PTR [edx+0x5489aed9],0xffffff92
  41d3a4:	into   
  41d3a5:	lods   eax,DWORD PTR ds:[esi]
  41d3a6:	scas   al,BYTE PTR es:[edi]
  41d3a7:	fwait
  41d3a8:	pop    esp
  41d3a9:	les    esi,FWORD PTR [eax-0x1ec696c7]
  41d3af:	cs mov edi,0xef4b40f7
  41d3b5:	and    dl,BYTE PTR [ebx]
  41d3b7:	mov    al,0x30
  41d3b9:	imul   ebp,DWORD PTR [ebp-0x89c1409],0x8077a57
  41d3c3:	push   esp
  41d3c4:	out    dx,eax
  41d3c5:	int    0x3c
  41d3c7:	fmul   QWORD PTR [esi+ebp*4]
  41d3ca:	jo     0x41d3a9
  41d3cc:	add    al,bh
  41d3ce:	inc    eax
  41d3cf:	adc    al,0x82
  41d3d1:	icebp  
  41d3d2:	jno    0x41d41f
  41d3d4:	por    mm2,QWORD PTR [edi+ebp*4+0x33b1e84d]
  41d3dc:	jbe    0x41d3e7
  41d3de:	out    dx,al
  41d3df:	mov    ebp,0x5be7adc9
  41d3e4:	mov    eax,ds:0xc7aaabcb
  41d3e9:	lahf   
  41d3ea:	mov    esp,0x4111d78e
  41d3ef:	push   ds
  41d3f0:	and    edx,DWORD PTR [ecx+0x4c]
  41d3f3:	scas   al,BYTE PTR es:[edi]
  41d3f4:	mov    DWORD PTR [eax+0x311d80b2],ebx
  41d3fa:	cmp    eax,0x1674d5ea
  41d3ff:	outs   dx,BYTE PTR ds:[esi]
  41d400:	jnp    0x41d3e3
  41d402:	in     al,dx
  41d403:	push   edi
  41d404:	jbe    0x41d3fd
  41d406:	fsub   st(7),st
  41d408:	push   esp
  41d409:	fstp   TBYTE PTR [edi]
  41d40b:	adc    al,0xf6
  41d40d:	adc    DWORD PTR [esi+0x11],0xdc5a1adb
  41d414:	dec    esp
  41d415:	sti    
  41d416:	or     al,BYTE PTR [edi+0x38ad8e20]
  41d41c:	out    0xbf,eax
  41d41e:	fimul  DWORD PTR [edx]
  41d420:	jne    0x41d434
  41d422:	jbe    0x41d3d7
  41d424:	mov    BYTE PTR [edi+0x20],ah
  41d427:	enter  0x5a41,0xd7
  41d42b:	push   edx
  41d42c:	adc    eax,0x41fb4f1
  41d431:	pop    esi
  41d432:	dec    ebp
  41d433:	jl     0x41d429
  41d435:	movnti DWORD PTR [edi],edi
  41d438:	aaa    
  41d439:	fnstsw WORD PTR [ecx]
  41d43b:	in     al,0x58
  41d43d:	lock sub al,0x97
  41d440:	pop    edi
  41d441:	mov    esi,0x86b3ba5
  41d446:	xor    al,0x7a
  41d448:	sti    
  41d449:	xchg   DWORD PTR [edi-0x33cc9b13],edx
  41d44f:	stos   BYTE PTR es:[edi],al
  41d450:	test   DWORD PTR [ecx],ebx
  41d452:	xchg   BYTE PTR [esi-0x69a153f7],ah
  41d458:	pop    es
  41d459:	inc    edi
  41d45a:	jmp    0xc61f:0xae26cdb8
  41d461:	sbb    BYTE PTR [esi-0x1f],0x32
  41d465:	in     eax,dx
  41d466:	aaa    
  41d467:	bound  edx,QWORD PTR [edi-0x302ae6f2]
  41d46d:	and    edx,eax
  41d46f:	test   al,0x1b
  41d471:	cmp    eax,DWORD PTR [ecx+eiz*2-0x33f64c9b]
  41d478:	mov    dh,0xbf
  41d47a:	cli    
  41d47b:	popa   
  41d47c:	pop    ds
  41d47d:	mov    esi,0x180f6e02
  41d483:	sub    eax,0x6f0bcab9
  41d488:	ins    BYTE PTR es:[edi],dx
  41d489:	shl    BYTE PTR [ecx+0x4a],0xc2
  41d48d:	int    0x5
  41d48f:	adc    al,0x35
  41d491:	imul   ebx,DWORD PTR [ebx],0x6ec23948
  41d497:	and    eax,0x7e422817
  41d49c:	add    al,0xd3
  41d49e:	inc    ecx
  41d49f:	xchg   ebx,eax
  41d4a0:	and    edx,DWORD PTR [ebp-0x7d]
  41d4a3:	(bad)  
  41d4a4:	mov    ?,ebp
  41d4a6:	pop    ss
  41d4a7:	(bad)  
  41d4a9:	adc    esi,DWORD PTR [edx]
  41d4ab:	ds adc al,0x43
  41d4ae:	aaa    
  41d4af:	inc    edx
  41d4b0:	xor    esp,DWORD PTR [ecx-0x2dbe3ade]
  41d4b6:	sbb    al,0xcc
  41d4b8:	mov    edi,0xd72c8131
  41d4bd:	add    BYTE PTR [eax],al
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	dec    edx
  41d4cf:	xchg   ebx,eax
  41d4d0:	sub    BYTE PTR [ebx+0x34],dh
  41d4d3:	push   eax
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	repz add al,0x0
  41d4d9:	add    BYTE PTR [eax+0x4c7f6887],cl
  41d4df:	je     0x41d49b
  41d4e1:	push   eax
  41d4e2:	pop    ds
  41d4e3:	dec    edi
  41d4e4:	lods   al,BYTE PTR ds:[esi]
  41d4e5:	test   BYTE PTR [edi+0x66],ch
  41d4e8:	and    esp,edx
  41d4ea:	xor    eax,0x1c7adbbd
  41d4ef:	popf   
  41d4f0:	adc    al,0xdd
  41d4f2:	dec    edi
  41d4f3:	cmp    BYTE PTR [eax-0x6e7d0666],ah
  41d4f9:	xor    eax,0xb87a52f
  41d4fe:	inc    esi
  41d4ff:	fild   QWORD PTR [edi+edx*1+0x21]
  41d503:	fidivr WORD PTR es:[esi-0x4a1e53f3]
  41d50a:	or     DWORD PTR [ebx+0x456b645],edx
  41d510:	push   0xffffffa1
  41d512:	repz push es
  41d514:	daa    
  41d515:	test   BYTE PTR [ecx-0x49],bh
  41d518:	push   cs
  41d519:	push   edi
  41d51a:	je     0x41d4a6
  41d51c:	pushw  es
  41d51e:	popf   
  41d51f:	in     al,dx
  41d520:	nop
  41d521:	test   eax,0xfd585cd3
  41d526:	mov    dl,dh
  41d528:	and    ch,BYTE PTR [ebx-0x5b]
  41d52b:	loop   0x41d4ce
  41d52d:	add    BYTE PTR [edi],cl
  41d52f:	sbb    BYTE PTR [eax+ebx*4+0x45ccd22c],0x44
  41d537:	ins    BYTE PTR es:[edi],dx
  41d538:	pop    edx
  41d53a:	cmp    DWORD PTR [ecx+0x24538e0f],eax
  41d540:	jle    0x41d594
  41d542:	shl    DWORD PTR [edx+eiz*2],0x6c
  41d546:	and    al,0x48
  41d548:	push   edx
  41d549:	xchg   DWORD PTR gs:[esi],ecx
  41d54c:	arpl   WORD PTR [esi+0x3],bp
  41d54f:	xchg   ebp,eax
  41d550:	or     BYTE PTR ds:0x65d13d9f,0x8b
  41d557:	mov    ah,0xd2
  41d559:	sbb    esi,DWORD PTR [eax-0x651e4d08]
  41d55f:	out    0x3e,al
  41d561:	leave  
  41d562:	outs   dx,DWORD PTR ds:[esi]
  41d563:	stos   DWORD PTR es:[edi],eax
  41d564:	(bad)  
  41d566:	mov    dh,0x3f
  41d568:	pop    esp
  41d569:	(bad)  
  41d56a:	ficom  WORD PTR [ebx+0x692eec77]
  41d570:	or     esp,0x2a
  41d573:	lds    eax,FWORD PTR [ebx-0x2]
  41d576:	pop    esi
  41d577:	ss cmp eax,0x78a71088
  41d57d:	fist   DWORD PTR [edx-0x61]
  41d580:	ficomp WORD PTR [esi]
  41d582:	xchg   edi,eax
  41d583:	ins    DWORD PTR es:[edi],dx
  41d584:	(bad)  
  41d585:	cmc    
  41d586:	popf   
  41d587:	cmc    
  41d588:	outs   dx,BYTE PTR ds:[esi]
  41d589:	jb     0x41d5da
  41d58b:	or     eax,0xa730ec48
  41d590:	xchg   ecx,eax
  41d591:	push   0x910b6e1d
  41d596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d597:	sbb    BYTE PTR [edi],ah
  41d599:	add    eax,0x4a097220
  41d59e:	and    esi,DWORD PTR [edi-0x4f]
  41d5a1:	sub    DWORD PTR ds:0x664aab7c,eax
  41d5a7:	push   esp
  41d5a8:	mov    ch,0xdf
  41d5aa:	xchg   edx,eax
  41d5ab:	pop    esi
  41d5ac:	dec    edi
  41d5ad:	fild   DWORD PTR [eax]
  41d5af:	ds or  ebp,ecx
  41d5b2:	push   ss
  41d5b3:	adc    DWORD PTR [eax-0x80],esi
  41d5b6:	lods   eax,DWORD PTR ds:[esi]
  41d5b7:	(bad)  
  41d5b8:	sbb    BYTE PTR [ebp+0x5c],ah
  41d5bb:	xor    BYTE PTR [eax],dh
  41d5bd:	pop    ecx
  41d5be:	or     BYTE PTR [ebx+esi*1],0xcb
  41d5c2:	cmp    BYTE PTR [edi],0xbe
  41d5c5:	push   edx
  41d5c6:	push   0xe4091316
  41d5cb:	lea    esp,[ebp+0x2ec1b62d]
  41d5d1:	jbe    0x41d5c3
  41d5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d4:	add    al,bh
  41d5d6:	data16 (bad) 
  41d5d9:	imul   BYTE PTR [ebp+0x30]
  41d5dc:	retf   0xdf6c
  41d5df:	mov    al,ds:0x32642f18
  41d5e4:	sub    ah,BYTE PTR [ebx-0x11f52168]
  41d5ea:	dec    ebp
  41d5eb:	sub    DWORD PTR [edi+edi*4+0x1a],edi
  41d5ef:	idiv   cl
  41d5f1:	test   BYTE PTR [esi-0x15],0xf8
  41d5f5:	imul   ebp,DWORD PTR [ebx],0xffffffd6
  41d5f8:	push   ds
  41d5f9:	push   ebp
  41d5fa:	lock xlat BYTE PTR ds:[ebx]
  41d5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fd:	lods   eax,DWORD PTR ds:[esi]
  41d5fe:	dec    esi
  41d5ff:	xchg   edx,eax
  41d600:	fld    DWORD PTR [esi+esi*2]
  41d603:	adc    BYTE PTR [ebx],al
  41d605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d606:	inc    ebx
  41d607:	inc    BYTE PTR [edx-0x429f56ef]
  41d60d:	pop    ebp
  41d60e:	mov    cl,0x3b
  41d610:	repz scas eax,DWORD PTR es:[edi]
  41d612:	in     al,0x7b
  41d614:	stos   DWORD PTR es:[edi],eax
  41d615:	out    0xf9,al
  41d617:	sar    BYTE PTR [eax-0x7c],0x11
  41d61b:	ja     0x41d660
  41d61d:	xchg   ecx,eax
  41d61e:	sbb    ebp,DWORD PTR [edi+ebx*1+0x70]
  41d622:	jmp    0x8756cc7d
  41d627:	cli    
  41d628:	xchg   ebp,eax
  41d629:	addr16 or al,0xd9
  41d62c:	pop    ebp
  41d62d:	out    0xdf,al
  41d62f:	adc    eax,0xa15553f1
  41d634:	addr16 (bad) 
  41d636:	out    dx,eax
  41d637:	pop    eax
  41d638:	iret   
  41d639:	cmp    BYTE PTR [ebp-0x57d232f9],dh
  41d63f:	aad    0x5
  41d641:	jle    0x41d645
  41d643:	adc    al,0x12
  41d645:	mov    ch,0x3f
  41d647:	ins    DWORD PTR es:[edi],dx
  41d648:	xchg   bh,al
  41d64a:	cmp    DWORD PTR [eax+0x42],edi
  41d64d:	out    dx,al
  41d64e:	fadd   QWORD PTR [ebx+edi*8-0x73e5eec5]
  41d655:	mov    ecx,0x9ae32d9
  41d65a:	or     esp,DWORD PTR [eax+0x68]
  41d65d:	and    al,0xf
  41d65f:	sbb    ah,al
  41d661:	mov    dl,0x50
  41d663:	add    cl,BYTE PTR [edi-0x61]
  41d666:	and    bh,al
  41d668:	push   ecx
  41d669:	gs add eax,0x7d9c91e8
  41d66f:	scas   eax,DWORD PTR es:[edi]
  41d670:	cmc    
  41d671:	hlt    
  41d672:	xchg   esi,eax
  41d673:	test   DWORD PTR [eax-0x1f2e1e90],edx
  41d679:	mov    dl,0x28
  41d67b:	pushf  
  41d67c:	jns    0x41d647
  41d67e:	pop    ecx
  41d67f:	add    edx,DWORD PTR [edi+0x6689a7ed]
  41d685:	in     eax,dx
  41d686:	shr    DWORD PTR [ecx],0x85
  41d689:	neg    BYTE PTR fs:[edx]
  41d68c:	fs push ss
  41d68e:	outs   dx,DWORD PTR ds:[esi]
  41d68f:	mov    edx,0x6790c385
  41d694:	mov    ch,al
  41d696:	pushf  
  41d697:	test   BYTE PTR [eax-0x4e515d3b],ch
  41d69d:	js     0x41d63e
  41d69f:	icebp  
  41d6a0:	dec    esi
  41d6a1:	mov    bl,0x81
  41d6a3:	int3   
  41d6a4:	jg     0x41d6ca
  41d6a6:	and    eax,DWORD PTR [eax]
  41d6a8:	iret   
  41d6a9:	mov    WORD PTR [ebx-0x6cbacc49],fs
  41d6af:	dec    ebx
  41d6b0:	leave  
  41d6b1:	jno    0x41d67c
  41d6b3:	jne    0x41d6f2
  41d6b5:	lds    ebp,FWORD PTR [eax]
  41d6b7:	pop    es
  41d6b8:	rol    DWORD PTR [ebp-0x2],1
  41d6bb:	loope  0x41d6a8
  41d6bd:	aaa    
  41d6be:	and    edi,ecx
  41d6c0:	fwait
  41d6c1:	sub    DWORD PTR [esi+0x6a],edx
  41d6c4:	mov    al,ds:0x7b7665a2
  41d6c9:	or     al,0xc1
  41d6cb:	aad    0x5c
  41d6cd:	adc    al,0xbc
  41d6cf:	cmp    DWORD PTR [edi],ebp
  41d6d1:	pushf  
  41d6d2:	dec    eax
  41d6d3:	nop
  41d6d4:	not    BYTE PTR [ecx]
  41d6d6:	xor    eax,0xb2b1c8f1
  41d6db:	imul   ebx,ecx,0x141a9d2d
  41d6e1:	shl    DWORD PTR [edi],0xfc
  41d6e4:	cmp    DWORD PTR [ebp+0x2c08cf29],edi
  41d6ea:	out    0x59,al
  41d6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ed:	jb     0x41d701
  41d6ef:	add    ebx,ebx
  41d6f1:	cmp    al,0x47
  41d6f3:	out    dx,eax
  41d6f4:	or     DWORD PTR ds:0x1d8a05e,esp
  41d6fa:	add    dl,ch
  41d6fc:	ud1    esi,DWORD PTR [esi]
  41d6ff:	lods   eax,DWORD PTR ds:[esi]
  41d700:	inc    ecx
  41d701:	xor    DWORD PTR [ebx+0x739f1d26],ecx
  41d707:	retf   0xe48
  41d70a:	outs   dx,BYTE PTR ds:[esi]
  41d70b:	pop    esi
  41d70c:	adc    eax,0x19a48034
  41d711:	inc    esi
  41d712:	add    esp,DWORD PTR [ebx-0x402c8591]
  41d718:	cs out 0xa3,eax
  41d71b:	sbb    DWORD PTR [eax-0x6318dd80],esp
  41d721:	int    0xcd
  41d723:	shr    cl,0xea
  41d726:	stos   DWORD PTR es:[edi],eax
  41d727:	dec    esi
  41d728:	call   0xea3892dc
  41d72d:	push   0xba5cd4e9
  41d732:	sub    bl,BYTE PTR [eax-0x1de021de]
  41d738:	and    esi,esp
  41d73a:	mov    dh,0x9b
  41d73c:	mov    ebp,0xf45e17fa
  41d741:	(bad)  
  41d742:	pop    ecx
  41d743:	push   ecx
  41d744:	shr    cl,0xb8
  41d747:	call   0x9544a386
  41d74c:	cmc    
  41d74d:	sahf   
  41d74e:	jo     0x41d75f
  41d750:	aad    0x4f
  41d752:	outs   dx,BYTE PTR ds:[esi]
  41d753:	cmp    eax,0xa38f796c
  41d758:	cmp    BYTE PTR [edi-0x357f91a0],dl
  41d75e:	arpl   WORD PTR [esi+0x16],cx
  41d761:	pop    edx
  41d762:	ins    DWORD PTR es:[edi],dx
  41d763:	out    0x2d,al
  41d765:	stos   BYTE PTR es:[edi],al
  41d766:	cli    
  41d767:	out    0xd1,eax
  41d769:	xor    al,al
  41d76b:	loop   0x41d73a
  41d76d:	pop    es
  41d76e:	nop
  41d76f:	mov    dl,BYTE PTR [edx-0x78cf6fcf]
  41d775:	dec    esp
  41d776:	xor    BYTE PTR [esi],bh
  41d778:	cld    
  41d779:	ror    DWORD PTR [edx-0x2a2910f7],0xed
  41d780:	mov    BYTE PTR [eax+0x22],ah
  41d783:	shl    eax,1
  41d785:	addr16 cs retf 0xa85d
  41d78a:	mov    dh,0x8f
  41d78c:	sbb    dh,BYTE PTR [edx+0x59bde81d]
  41d792:	in     eax,0x2a
  41d794:	pop    edx
  41d795:	sub    BYTE PTR [ebx+ebp*1],bl
  41d798:	(bad)  
  41d799:	rcr    DWORD PTR [esi-0x4c],1
  41d79c:	mov    BYTE PTR [edi+0x152f8bab],bl
  41d7a2:	jne    0x41d7db
  41d7a4:	sbb    al,0xeb
  41d7a6:	call   0xf3ed4b1f
  41d7ab:	cmp    al,0xda
  41d7ad:	aas    
  41d7ae:	cmp    bh,BYTE PTR [ebp+eiz*8+0x11744dc3]
  41d7b5:	ins    BYTE PTR es:[edi],dx
  41d7b6:	push   ecx
  41d7b7:	xchg   edx,eax
  41d7b8:	pop    ebp
  41d7b9:	pop    edi
  41d7ba:	sbb    al,0xb1
  41d7bc:	push   es
  41d7bd:	loopne 0x41d7ac
  41d7bf:	bswap  edx
  41d7c1:	pop    edi
  41d7c2:	outs   dx,BYTE PTR ds:[esi]
  41d7c3:	ja     0x41d822
  41d7c5:	xor    BYTE PTR [esi+0x7fd7eb94],al
  41d7cb:	dec    edi
  41d7cc:	les    edi,FWORD PTR [eax+0x78]
  41d7cf:	or     eax,0x44fd61e5
  41d7d4:	(bad)  
  41d7d5:	cmc    
  41d7d6:	jno    0x41d7b4
  41d7d8:	lds    edi,FWORD PTR [ebx]
  41d7da:	frstor [esi]
  41d7dc:	stc    
  41d7dd:	mov    esi,0x720c256b
  41d7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e3:	loop   0x41d7b5
  41d7e5:	and    dl,cl
  41d7e7:	mov    ch,0xf9
  41d7e9:	sbb    eax,DWORD PTR [eax-0x6eab7351]
  41d7ef:	or     DWORD PTR [esi+0x63],edi
  41d7f2:	sbb    ch,al
  41d7f4:	xor    dh,BYTE PTR [esi-0x58]
  41d7f7:	or     dl,BYTE PTR [edx]
  41d7f9:	sbb    BYTE PTR ds:0x8066c8d1,ch
  41d7ff:	sub    al,0x8e
  41d801:	lods   al,BYTE PTR ds:[esi]
  41d802:	and    DWORD PTR [esi+0x6727639c],eax
  41d808:	mov    cl,0x1e
  41d80a:	xchg   edx,eax
  41d80b:	and    BYTE PTR [ebx-0x2c276c6f],ch
  41d811:	cmp    DWORD PTR [eax+0x1b06d443],0x9e145214
  41d81b:	push   edi
  41d81c:	jne    0x41d7e9
  41d81e:	sub    BYTE PTR [ebp-0x4a511e09],bh
  41d824:	pop    esi
  41d825:	inc    bl
  41d827:	pop    edi
  41d828:	push   ss
  41d829:	or     DWORD PTR [ebp+ecx*1+0x672a8791],esi
  41d830:	(bad)  
  41d831:	cmova  ecx,DWORD PTR [edi]
  41d834:	push   0xffffffaa
  41d836:	jge    0x41d887
  41d838:	daa    
  41d839:	push   es
  41d83a:	jne    0x41d7c2
  41d83c:	in     al,dx
  41d83d:	mov    ds:0x11d57981,al
  41d842:	lock call 0x117b0af7
  41d848:	and    al,BYTE PTR [ecx-0x6debd231]
  41d84e:	sahf   
  41d84f:	push   0xffffffe6
  41d851:	adc    esi,DWORD PTR [ebx-0x326fcc07]
  41d857:	in     al,dx
  41d858:	and    cl,ah
  41d85a:	shl    ah,1
  41d85c:	(bad)  
  41d85d:	cmp    BYTE PTR [esi-0x53481643],dh
  41d863:	enter  0x1030,0x9f
  41d867:	dec    esp
  41d868:	mov    edx,0xdcc94ad4
  41d86d:	fwait
  41d86e:	outs   dx,DWORD PTR ds:[esi]
  41d86f:	dec    edx
  41d870:	mov    eax,0x6b91ecda
  41d875:	pop    esp
  41d876:	jl     0x41d880
  41d878:	sub    bl,BYTE PTR [ebx-0x190f0fcc]
  41d87e:	sbb    al,0x8e
  41d880:	jbe    0x41d875
  41d882:	ficom  DWORD PTR [edi-0x48f2778f]
  41d888:	pop    edi
  41d889:	pusha  
  41d88a:	adc    DWORD PTR [ecx+0x39142b0e],ebp
  41d890:	loop   0x41d8fb
  41d892:	into   
  41d893:	sbb    ecx,DWORD PTR [esi+edx*4-0x452ae572]
  41d89a:	inc    esp
  41d89b:	push   ebx
  41d89c:	push   0x3c
  41d89e:	fmul   QWORD PTR ds:0x4beda08a
  41d8a4:	lahf   
  41d8a5:	das    
  41d8a6:	mov    ebx,0xc31855d6
  41d8ab:	cmpxchg DWORD PTR ds:0x83eba279,esp
  41d8b2:	out    0xdd,al
  41d8b4:	push   es
  41d8b5:	mov    fs,WORD PTR [ebx]
  41d8b7:	std    
  41d8b8:	sub    al,0xa5
  41d8ba:	fld    DWORD PTR [ecx+0x5e]
  41d8bd:	xchg   esp,eax
  41d8be:	add    BYTE PTR [edi],dh
  41d8c0:	ret    
  41d8c1:	shl    BYTE PTR [ebp-0x472b7ca2],1
  41d8c7:	xchg   ecx,eax
  41d8c8:	lods   eax,DWORD PTR ds:[esi]
  41d8c9:	jae    0x41d8bf
  41d8cb:	pop    ebp
  41d8cc:	je     0x41d8dc
  41d8ce:	int3   
  41d8cf:	mov    eax,ds:0x60027f68
  41d8d4:	je     0x41d937
  41d8d6:	pop    esi
  41d8d7:	psubusw mm2,QWORD PTR [edi]
  41d8da:	jno    0x41d92d
  41d8dc:	jmp    0x45d8524f
  41d8e1:	mov    eax,DWORD PTR [ecx]
  41d8e3:	push   edi
  41d8e4:	ror    eax,0x49
  41d8e7:	cmp    cl,BYTE PTR [eax]
  41d8e9:	dec    ecx
  41d8ea:	into   
  41d8eb:	adc    edx,0x2cc3a1d7
  41d8f1:	popf   
  41d8f2:	imul   eax,DWORD PTR [ecx],0xffffffa7
  41d8f5:	inc    ecx
  41d8f6:	cdq    
  41d8f7:	cdq    
  41d8f8:	inc    ebp
  41d8f9:	(bad)  
  41d8fa:	ds jecxz 0x41d928
  41d8fd:	scas   eax,DWORD PTR es:[edi]
  41d8fe:	fist   DWORD PTR [esp+esi*2]
  41d901:	adc    bh,dh
  41d903:	mov    dl,0x93
  41d905:	mov    bl,0xeb
  41d907:	retf   
  41d908:	cmp    DWORD PTR [edi+0x334ff332],esp
  41d90e:	hlt    
  41d90f:	inc    esi
  41d910:	lods   eax,DWORD PTR ds:[esi]
  41d911:	fs push ebx
  41d913:	icebp  
  41d914:	push   esp
  41d915:	stos   BYTE PTR es:[edi],al
  41d916:	(bad)  
  41d917:	adc    al,0x88
  41d919:	xor    BYTE PTR gs:[eax-0x5c],bl
  41d91d:	pusha  
  41d91e:	test   bh,0x80
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	enter  0xca89,0x88
  41d926:	pusha  
  41d927:	jb     0x41d8e6
  41d929:	xchg   esi,eax
  41d92a:	rol    DWORD PTR [ecx-0x4d],0x45
  41d92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d930:	test   BYTE PTR [edx-0x37],ah
  41d933:	xor    eax,0x96f4bd50
  41d938:	dec    esi
  41d939:	(bad)  
  41d93a:	scas   eax,DWORD PTR es:[edi]
  41d93b:	mov    ch,0x3d
  41d93d:	xor    eax,eax
  41d93f:	inc    esi
  41d940:	retf   
  41d941:	mov    ebp,0x928c44ee
  41d946:	jne    0x41d8d9
  41d948:	or     bl,BYTE PTR [esi+0x3ec8e149]
  41d94e:	xchg   edi,eax
  41d94f:	out    dx,al
  41d950:	pushf  
  41d951:	aam    0xb2
  41d953:	and    al,0xa3
  41d955:	xor    BYTE PTR [ebp+0x7ebb73c2],ah
  41d95b:	stos   BYTE PTR es:[edi],al
  41d95c:	xchg   DWORD PTR [edx+0x63d21c1],edi
  41d962:	ins    DWORD PTR es:[edi],dx
  41d963:	add    eax,0x51d9d7e9
  41d968:	stc    
  41d969:	push   edx
  41d96a:	out    0xf2,al
  41d96c:	jb     0x41d8f0
  41d96e:	out    0x71,al
  41d970:	test   DWORD PTR [eax-0x395423ae],ebp
  41d976:	cli    
  41d977:	sbb    al,0x6f
  41d979:	in     al,dx
  41d97a:	std    
  41d97b:	stos   DWORD PTR es:[edi],eax
  41d97c:	test   DWORD PTR cs:[ebp-0x7a],0xdfe92ced
  41d984:	jle    0x41d920
  41d986:	dec    esp
  41d987:	pop    ds
  41d988:	sbb    al,ch
  41d98a:	adc    bl,BYTE PTR [edi+0x5cc28192]
  41d990:	and    DWORD PTR [eax-0x7a8ed49a],ebx
  41d996:	jl     0x41d9e4
  41d998:	aam    0xb9
  41d99a:	push   esp
  41d99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d99c:	jb     0x41d976
  41d99e:	sbb    BYTE PTR [ebp-0x34],dl
  41d9a1:	ret    0x7721
  41d9a4:	cld    
  41d9a5:	sahf   
  41d9a6:	cmp    bh,0xf1
  41d9a9:	adc    DWORD PTR [esi],edi
  41d9ab:	mov    ecx,0x28d1f39e
  41d9b0:	jne    0x41d9c0
  41d9b2:	test   al,0xac
  41d9b4:	sub    edx,DWORD PTR [edx-0x3c03a538]
  41d9ba:	xchg   dh,ch
  41d9bc:	(bad)  
  41d9bd:	js     0x41d9ed
  41d9bf:	and    edi,ebx
  41d9c1:	scas   al,BYTE PTR es:[edi]
  41d9c2:	mov    esp,DWORD PTR [ebx]
  41d9c4:	dec    esi
  41d9c5:	leave  
  41d9c6:	jo     0x41d98e
  41d9c8:	pop    ebp
  41d9c9:	lods   eax,DWORD PTR ds:[esi]
  41d9ca:	pop    esi
  41d9cb:	fs xchg esi,eax
  41d9cd:	add    BYTE PTR [eax],al
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	fs ja  0x41d9bd
  41d9e1:	test   eax,0x15527
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [ebx+0x7e],bh
  41d9ec:	test   eax,0x2e4f06ae
  41d9f1:	in     al,dx
  41d9f2:	jno    0x41d97e
  41d9f4:	mov    WORD PTR [eax+edi*2],gs
  41d9f7:	or     esi,edi
  41d9f9:	xlat   BYTE PTR ds:[ebx]
  41d9fa:	push   ebx
  41d9fb:	loopne 0x41da5e
  41d9fd:	cmp    ecx,DWORD PTR [eax-0x7]
  41da00:	stc    
  41da01:	fisttp WORD PTR [ebx+0x4db8dbc8]
  41da07:	jg     0x41da1e
  41da09:	mov    eax,0xc82771f2
  41da0e:	out    0x18,al
  41da10:	popa   
  41da11:	fs out 0x8a,eax
  41da14:	xor    edi,DWORD PTR [edx+ebp*2+0xf]
  41da18:	retf   0x8b28
  41da1b:	mov    esp,0x73ef8ab1
  41da20:	fadd   QWORD PTR [edx]
  41da22:	out    dx,eax
  41da23:	xor    DWORD PTR [esi+0x1e],ebx
  41da26:	iret   
  41da27:	mov    WORD PTR [edi+0xa],?
  41da2a:	fcomp  QWORD PTR [eax]
  41da2c:	bound  esp,QWORD PTR [ebx-0xb93504b]
  41da32:	(bad)  
  41da33:	inc    edx
  41da34:	and    eax,0x6308864c
  41da39:	jno    0x41da41
  41da3b:	jmp    0x6d52011e
  41da40:	xchg   DWORD PTR [ebp+0x1d52bd87],ebp
  41da46:	js     0x41da8f
  41da48:	adc    BYTE PTR [ebx-0xd],0x97
  41da4c:	push   eax
  41da4d:	not    ah
  41da4f:	mov    bl,0xc4
  41da51:	cld    
  41da52:	test   eax,0x48f117b1
  41da57:	mov    eax,ds:0x248f3ba8
  41da5c:	xchg   ebp,eax
  41da5d:	imul   esp,DWORD PTR ds:0xbb615aa3,0x8cbe0e2f
  41da67:	jecxz  0x41da4f
  41da69:	jle    0x41da98
  41da6b:	push   cs
  41da6c:	pop    ebx
  41da6d:	mov    eax,0xb317d0df
  41da72:	rcr    DWORD PTR [edx],0x61
  41da75:	(bad)  
  41da76:	je     0x41da8f
  41da78:	dec    ebx
  41da79:	sub    eax,DWORD PTR [edi]
  41da7b:	cmp    DWORD PTR [ebx],esp
  41da7d:	add    bl,BYTE PTR [edx-0x31]
  41da80:	outs   dx,DWORD PTR ds:[esi]
  41da81:	clc    
  41da82:	sbb    eax,0xfecf4d80
  41da87:	cli    
  41da88:	inc    esp
  41da89:	cmovns esp,DWORD PTR [ebp+ecx*8-0x5c]
  41da8e:	retf   0xd0a1
  41da91:	outs   dx,BYTE PTR ds:[esi]
  41da92:	pusha  
  41da93:	enter  0x829d,0x8b
  41da97:	lahf   
  41da98:	inc    eax
  41da99:	inc    edi
  41da9a:	fnstcw WORD PTR [ebp-0x6c]
  41da9d:	dec    ecx
  41da9e:	and    eax,0x703fbefc
  41daa3:	test   BYTE PTR [esi+ebp*1+0x16],ch
  41daa7:	or     al,BYTE PTR [ebx]
  41daa9:	addr16 int 0x2e
  41daac:	es add esp,eax
  41daaf:	jl     0x41db07
  41dab1:	(bad)  
  41dab2:	je     0x41dae3
  41dab4:	std    
  41dab5:	dec    edx
  41dab6:	sub    bh,al
  41dab8:	loopne 0x41dabd
  41daba:	push   ecx
  41dabb:	mov    bl,0x47
  41dabd:	xchg   ecx,eax
  41dabe:	pop    ss
  41dabf:	fstp   DWORD PTR [edx]
  41dac1:	ror    bl,0xc4
  41dac4:	or     al,cl
  41dac6:	mov    WORD PTR [edi],cs
  41dac8:	jmp    0x120ec419
  41dacd:	adc    ebx,DWORD PTR [edi]
  41dacf:	not    BYTE PTR [esi-0x6bfba4a8]
  41dad5:	add    edx,esp
  41dad7:	mov    eax,ds:0x9122f961
  41dadc:	add    dl,al
  41dade:	cs stc 
  41dae0:	pusha  
  41dae1:	retf   0x27bd
  41dae4:	(bad)  
  41dae5:	out    0x91,eax
  41dae7:	jecxz  0x41dae1
  41dae9:	not    DWORD PTR [edi]
  41daeb:	out    dx,al
  41daec:	es call 0xc014:0xf41b9028
  41daf4:	and    ebx,DWORD PTR [edi]
  41daf6:	inc    esp
  41daf7:	je     0x41daf3
  41daf9:	gs das 
  41dafb:	rol    BYTE PTR [ecx],1
  41dafd:	dec    ecx
  41dafe:	fist   DWORD PTR [ebx]
  41db00:	in     eax,dx
  41db01:	sbb    dh,BYTE PTR [esi-0x4e]
  41db04:	jecxz  0x41db67
  41db06:	pop    ebp
  41db07:	or     edi,DWORD PTR [ebp-0x3a]
  41db0a:	mov    BYTE PTR [esi-0x6e54b6dd],al
  41db10:	jecxz  0x41daa8
  41db12:	mov    esi,0x17c22af4
  41db17:	outs   dx,BYTE PTR ds:[esi]
  41db18:	mov    DWORD PTR [ebp+0x17],edx
  41db1b:	popf   
  41db1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1d:	push   eax
  41db1e:	add    BYTE PTR [ebx],0x6
  41db21:	mov    ebx,0xd7742937
  41db26:	jp     0x41db70
  41db28:	stos   DWORD PTR es:[edi],eax
  41db29:	fwait
  41db2a:	in     al,dx
  41db2b:	sub    BYTE PTR [edx],0x9b
  41db2e:	in     al,dx
  41db2f:	mov    ch,0x6f
  41db31:	mov    al,ds:0x9ac92e88
  41db36:	sub    edi,DWORD PTR [ebp+0x775069a3]
  41db3c:	pop    ebx
  41db3d:	mov    ecx,0xd89719f3
  41db42:	jp     0x41daf6
  41db44:	mov    al,0x34
  41db46:	sbb    dh,ah
  41db48:	or     eax,0x8fa7afd7
  41db4d:	and    eax,0x194dced2
  41db52:	or     DWORD PTR [ebx],edi
  41db54:	xchg   ebx,eax
  41db55:	arpl   WORD PTR [edx+0x55],cx
  41db58:	dec    esp
  41db59:	rcl    DWORD PTR [edi-0x42fa0eb6],cl
  41db5f:	xor    al,dl
  41db61:	and    esi,eax
  41db63:	lds    edi,FWORD PTR [eax+ebx*4+0x3de6618d]
  41db6a:	ja     0x41db68
  41db6c:	fisttp QWORD PTR [eax-0x43426c4b]
  41db72:	sti    
  41db73:	sub    DWORD PTR [esi-0x4d5646c8],eax
  41db79:	lds    edx,FWORD PTR [ebp-0x4c]
  41db7c:	popa   
  41db7d:	cli    
  41db7e:	fwait
  41db7f:	jmp    0x20f29a48
  41db84:	xor    al,0x79
  41db86:	push   ecx
  41db87:	stos   BYTE PTR es:[edi],al
  41db88:	ret    0xabfe
  41db8b:	mov    ch,0xe9
  41db8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db8e:	xor    ch,BYTE PTR [ecx-0x30333a3d]
  41db94:	lock in al,0xc3
  41db97:	push   0xfffffff6
  41db99:	jnp    0x41db26
  41db9b:	push   0x74
  41db9d:	mov    dl,0xc0
  41db9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba0:	arpl   WORD PTR [ebx],cx
  41dba2:	sbb    ch,dl
  41dba4:	aam    0xe3
  41dba6:	cmp    edx,0x508d0166
  41dbac:	xchg   edx,eax
  41dbad:	(bad)  
  41dbae:	fisubr DWORD PTR [ecx+0x70ea3adb]
  41dbb4:	les    ebx,FWORD PTR [edx+0x7a757231]
  41dbba:	scas   eax,DWORD PTR es:[edi]
  41dbbb:	es in  eax,0x33
  41dbbe:	sbb    ah,bh
  41dbc0:	shl    ebx,0xce
  41dbc3:	mov    al,0x7c
  41dbc5:	xchg   edi,eax
  41dbc6:	xor    DWORD PTR [eax-0x66],eax
  41dbc9:	mov    eax,ds:0xd75edbe6
  41dbce:	sub    esp,0x1a804ff9
  41dbd4:	pop    es
  41dbd5:	and    DWORD PTR [edi-0x5c],edx
  41dbd8:	je     0x41dbb1
  41dbda:	add    eax,DWORD PTR [eax+0x26]
  41dbdd:	les    ebx,FWORD PTR [ecx-0x118e04ef]
  41dbe3:	cmc    
  41dbe4:	imul   edi,DWORD PTR [edi],0x3a
  41dbe7:	stos   DWORD PTR es:[edi],eax
  41dbe8:	xor    ebx,DWORD PTR [esi]
  41dbea:	sysret 
  41dbec:	cdq    
  41dbed:	mov    cl,0xc2
  41dbef:	das    
  41dbf0:	adc    edx,DWORD PTR [ebx]
  41dbf2:	push   ebx
  41dbf3:	adc    WORD PTR [edx+0x4fecd7ea],bx
  41dbfa:	dec    edi
  41dbfb:	sub    bl,BYTE PTR [edx-0x6d]
  41dbfe:	popa   
  41dbff:	sub    edi,DWORD PTR [ecx]
  41dc01:	mov    eax,ds:0xa8ca9355
  41dc06:	bound  esi,QWORD PTR [edx]
  41dc08:	das    
  41dc09:	out    0x9,eax
  41dc0b:	into   
  41dc0c:	lds    esp,FWORD PTR [ebx+0x56d9cc3a]
  41dc12:	pop    edx
  41dc13:	ja     0x41dc68
  41dc15:	jbe    0x41dbcd
  41dc17:	sbb    dl,BYTE PTR [eax]
  41dc19:	mov    es,WORD PTR [edi+edi*2-0x43]
  41dc1d:	lods   al,BYTE PTR ds:[esi]
  41dc1e:	mov    edx,0x6f5f6063
  41dc23:	mov    ch,0x4d
  41dc25:	jge    0x41dc9b
  41dc27:	push   edi
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	fadd   st(3),st
  41dc2b:	daa    
  41dc2c:	sub    edi,DWORD PTR [edi+0x41]
  41dc2f:	data16 shr BYTE PTR [edx],cl
  41dc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc33:	jg     0x41dc2e
  41dc35:	stos   DWORD PTR es:[edi],eax
  41dc36:	(bad)  
  41dc37:	or     ebx,DWORD PTR [ecx]
  41dc39:	cmp    eax,DWORD PTR [edx+0x7715fe99]
  41dc3f:	scas   al,BYTE PTR es:[edi]
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	add    DWORD PTR [ebx+0x47286d88],ecx
  41dc47:	jle    0x41dc36
  41dc49:	loope  0x41dc27
  41dc4b:	inc    esi
  41dc4c:	sti    
  41dc4d:	stos   DWORD PTR es:[edi],eax
  41dc4e:	es std 
  41dc50:	or     al,0x32
  41dc52:	loope  0x41dcb7
  41dc54:	and    DWORD PTR ds:0x8fb9ab5f,edi
  41dc5a:	push   esi
  41dc5b:	clc    
  41dc5c:	sbb    DWORD PTR [ebp+0x6a4b2a68],ebp
  41dc62:	xchg   ebx,eax
  41dc63:	and    DWORD PTR ds:0x854b87f4,0xfffffffa
  41dc6a:	mov    ebx,0x6e618423
  41dc6f:	shl    BYTE PTR [ecx],1
  41dc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc72:	int3   
  41dc73:	sbb    al,0xd4
  41dc75:	mov    DWORD PTR [ecx-0x65],edi
  41dc78:	cmp    DWORD PTR [ebx],edi
  41dc7a:	div    dl
  41dc7c:	cld    
  41dc7d:	xor    bh,cl
  41dc7f:	icebp  
  41dc80:	sbb    DWORD PTR [esi],esp
  41dc82:	cmp    al,0xe8
  41dc84:	aas    
  41dc85:	outs   dx,BYTE PTR ds:[esi]
  41dc86:	adc    ch,bh
  41dc88:	pushf  
  41dc89:	popa   
  41dc8a:	retf   0x5d98
  41dc8d:	fidiv  DWORD PTR [eax]
  41dc8f:	or     al,0x3f
  41dc91:	pop    eax
  41dc92:	xchg   ebx,eax
  41dc93:	push   0xffffffd3
  41dc95:	cmp    dh,dh
  41dc97:	enter  0x42bb,0xa8
  41dc9b:	in     eax,dx
  41dc9c:	push   esi
  41dc9d:	xchg   edi,eax
  41dc9e:	or     al,0x9e
  41dca0:	pusha  
  41dca1:	xchg   edi,eax
  41dca2:	outs   dx,BYTE PTR ds:[esi]
  41dca3:	xchg   esi,eax
  41dca4:	mov    dl,0x63
  41dca6:	fcmovbe st,st(5)
  41dca8:	into   
  41dca9:	pop    ds
  41dcaa:	or     eax,DWORD PTR [edx]
  41dcac:	jecxz  0x41dd02
  41dcae:	fs fcmovne st,st(5)
  41dcb1:	mov    al,cl
  41dcb3:	mov    edx,0x70dddd3b
  41dcb8:	fs push edi
  41dcba:	push   es
  41dcbb:	jmp    0x41dd0e
  41dcbd:	test   eax,0x49dc5daa
  41dcc2:	jle    0x41dc54
  41dcc4:	inc    edx
  41dcc5:	sti    
  41dcc6:	loop   0x41dd34
  41dcc8:	fcomp  DWORD PTR [eax+0x2a]
  41dccb:	shl    BYTE PTR [edi],0x1c
  41dcce:	mov    DWORD PTR [edi+0x648848d7],eax
  41dcd4:	pop    ecx
  41dcd5:	(bad)  
  41dcd6:	pusha  
  41dcd7:	retf   
  41dcd8:	ins    DWORD PTR es:[edi],dx
  41dcd9:	(bad)  
  41dcda:	mov    dh,0x3b
  41dcdc:	lock inc edx
  41dcde:	fisub  WORD PTR [edx+0x4635607]
  41dce4:	test   eax,0xdf7cd22f
  41dce9:	stos   BYTE PTR es:[edi],al
  41dcea:	or     eax,0xb012880b
  41dcef:	mov    ch,0xb7
  41dcf1:	adc    edi,esi
  41dcf3:	dec    edi
  41dcf4:	icebp  
  41dcf5:	scas   al,BYTE PTR es:[edi]
  41dcf6:	int    0x81
  41dcf8:	out    0x67,eax
  41dcfa:	push   esi
  41dcfb:	pop    esp
  41dcfc:	stos   DWORD PTR es:[edi],eax
  41dcfd:	inc    eax
  41dcfe:	or     ah,BYTE PTR [esi-0x6d]
  41dd01:	jo     0x41dc8d
  41dd03:	lea    ebp,[edx-0x32]
  41dd06:	sbb    ah,BYTE PTR [eax+0x5d]
  41dd09:	pusha  
  41dd0a:	dec    esi
  41dd0b:	xchg   edi,eax
  41dd0c:	test   DWORD PTR [edx+0x19],esi
  41dd0f:	add    ebp,DWORD PTR [eax-0x29]
  41dd12:	fdivr  QWORD PTR [ebp+0x6e272fef]
  41dd18:	test   eax,0x779b2a39
  41dd1d:	(bad)  
  41dd1e:	dec    edx
  41dd1f:	out    0x51,al
  41dd21:	fisttp DWORD PTR [ebp+0x63]
  41dd24:	push   edi
  41dd25:	xor    bh,ch
  41dd27:	xor    BYTE PTR [ebx],bl
  41dd29:	mov    esi,ecx
  41dd2b:	scas   al,BYTE PTR es:[edi]
  41dd2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2d:	or     esi,DWORD PTR [esi]
  41dd2f:	jp     0x41dd4c
  41dd31:	repnz cmp ch,dl
  41dd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd35:	stos   DWORD PTR es:[edi],eax
  41dd36:	push   eax
  41dd37:	jae    0x41dd23
  41dd39:	jg     0x41dda0
  41dd3b:	lods   eax,DWORD PTR ds:[esi]
  41dd3c:	out    0xdf,eax
  41dd3e:	and    DWORD PTR [edx-0x65],esp
  41dd41:	pop    eax
  41dd42:	jmp    0xa7f78f05
  41dd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd48:	jmp    0x99ab:0x6478e6d4
  41dd4f:	pop    ds
  41dd50:	mov    eax,0xdb5a880b
  41dd55:	jno    0x41dce8
  41dd57:	add    esi,DWORD PTR [ebp-0xfe5df21]
  41dd5d:	xchg   ecx,eax
  41dd5e:	repz test eax,0x8818fc98
  41dd64:	push   edx
  41dd65:	loopne 0x41dd4c
  41dd67:	sbb    al,0xf3
  41dd69:	jo     0x41dd68
  41dd6b:	or     eax,0xe0ac2e0
  41dd70:	(bad)  
  41dd72:	ds jmp 0xa296b4c3
  41dd78:	fstp   QWORD PTR ds:0xac570d55
  41dd7e:	sbb    DWORD PTR [edx-0x6fc01f38],ebx
  41dd84:	das    
  41dd85:	xchg   ebx,eax
  41dd86:	and    eax,0x27e46275
  41dd8b:	push   edx
  41dd8c:	jns    0x41dd82
  41dd8e:	mov    dl,0xcb
  41dd90:	mov    bl,0x26
  41dd92:	add    bh,ch
  41dd94:	mov    ebp,0x5d303017
  41dd99:	add    BYTE PTR [eax],al
  41dd9b:	and    ebp,ebp
  41dd9d:	inc    edx
  41dd9e:	xchg   DWORD PTR [ebx+0x64f244d0],edx
  41dda4:	test   BYTE PTR [esi],ah
  41dda6:	adc    BYTE PTR [ecx],dh
  41dda8:	sbb    eax,0xf325b1e0
  41ddad:	int    0x89
  41ddaf:	fmul   QWORD PTR [ecx+0x7812394]
  41ddb5:	cmp    eax,0xaef2b38f
  41ddba:	mov    ebp,0x84f0c5ef
  41ddbf:	mov    ebp,DWORD PTR [eax-0x6e]
  41ddc2:	dec    esp
  41ddc3:	sbb    ebx,DWORD PTR ds:0x8feecc80
  41ddc9:	mov    eax,ds:0xd9bd70a2
  41ddce:	pop    ecx
  41ddcf:	test   DWORD PTR [esi+0x32d617ff],esp
  41ddd5:	mov    al,ds:0x137021fa
  41ddda:	aam    0xbc
  41dddc:	pusha  
  41dddd:	(bad)  
  41ddde:	cmp    ch,BYTE PTR [esi-0x1a]
  41dde1:	cld    
  41dde2:	ss jl  0x41dde6
  41dde5:	mov    ch,0xdc
  41dde7:	ret    0x16e2
  41ddea:	(bad)  
  41ddeb:	mov    edi,0xd7f62210
  41ddf0:	mov    BYTE PTR [edx],cl
  41ddf2:	jge    0x41ddd3
  41ddf4:	in     eax,dx
  41ddf5:	add    esi,ebx
  41ddf7:	(bad)
  41ddfb:	in     eax,0x31
  41ddfd:	sahf   
  41ddfe:	add    eax,0xa7393c28
  41de03:	cli    
  41de04:	in     al,dx
  41de05:	and    ch,BYTE PTR [edi+0x7d150470]
  41de0b:	jecxz  0x41de63
  41de0d:	rcr    bl,1
  41de0f:	dec    ebp
  41de10:	into   
  41de11:	out    dx,eax
  41de12:	push   edi
  41de13:	rcl    DWORD PTR [ebx+ecx*8+0x5f],0x6c
  41de18:	mov    dl,0x5
  41de1a:	std    
  41de1b:	int    0x7
  41de1d:	mov    DWORD PTR [ebx-0x5b917e4],0x1a0af45a
  41de27:	lods   eax,DWORD PTR ds:[esi]
  41de28:	test   edx,ebp
  41de2a:	sub    esi,DWORD PTR [eax+edx*2+0x21]
  41de2e:	push   es
  41de2f:	mov    esi,0x6d29b6c1
  41de34:	mov    ds:0x73c68100,eax
  41de39:	icebp  
  41de3a:	and    DWORD PTR [ecx+edi*2],ebp
  41de3d:	out    0x23,eax
  41de3f:	nop
  41de40:	loope  0x41de8a
  41de42:	inc    eax
  41de43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de44:	pop    es
  41de45:	inc    edi
  41de46:	test   BYTE PTR [ecx],ah
  41de48:	add    DWORD PTR [esi+ebx*8],esp
  41de4b:	sub    eax,0x31b98333
  41de50:	push   edi
  41de51:	mov    cl,0xf9
  41de53:	mov    esi,0x73d28494
  41de58:	int3   
  41de59:	out    dx,eax
  41de5a:	icebp  
  41de5b:	push   es
  41de5c:	pop    edx
  41de5d:	jo     0x41de68
  41de5f:	dec    BYTE PTR [edx+0x2f]
  41de62:	shl    BYTE PTR [edx-0x57],0xea
  41de66:	inc    edi
  41de67:	test   dl,ch
  41de69:	test   DWORD PTR ds:0xb0f49fc0,eax
  41de6f:	ret    
  41de70:	dec    esi
  41de71:	jle    0x41de22
  41de73:	out    dx,eax
  41de74:	(bad)  
  41de75:	outs   dx,DWORD PTR ss:[esi]
  41de77:	ss add al,ch
  41de7a:	mov    ebx,0xee971d53
  41de7f:	push   edx
  41de80:	push   es
  41de81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de82:	fbld   TBYTE PTR [edx]
  41de84:	cmp    bl,BYTE PTR [ebx]
  41de86:	cmp    DWORD PTR [esi],eax
  41de88:	inc    ebx
  41de89:	cld    
  41de8a:	push   ss
  41de8b:	fidivr WORD PTR [eax]
  41de8d:	jae    0x41decb
  41de8f:	and    BYTE PTR [ebp+0x5d9287e5],ah
  41de95:	cmp    ebp,DWORD PTR [eax-0x23]
  41de98:	mov    edx,0x13cc91a9
  41de9d:	aam    0x9a
  41de9f:	dec    esp
  41dea0:	call   0x64dc9ebf
  41dea5:	sub    ch,BYTE PTR [ebx+0x59]
  41dea8:	mov    eax,ds:0xa416f33d
  41dead:	push   eax
  41deae:	fdiv   st,st(4)
  41deb0:	or     ebp,ebx
  41deb2:	das    
  41deb3:	sub    eax,0xfc56e25c
  41deb8:	fist   WORD PTR [edx]
  41deba:	test   al,0xe0
  41debc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41debd:	fcomp  QWORD PTR gs:[esi]
  41dec0:	mov    dh,0x1b
  41dec2:	cmp    al,0xc5
  41dec4:	into   
  41dec5:	int3   
  41dec6:	repz inc edi
  41dec8:	add    eax,0x64a9354b
  41decd:	dec    ebp
  41dece:	sub    dl,cl
  41ded0:	mov    DWORD PTR ds:0x5684fdf0,esp
  41ded6:	aas    
  41ded7:	cdq    
  41ded8:	sub    al,0x16
  41deda:	and    eax,0x4062
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	sub    eax,0x1af1d81e
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR ds:0xa9d0c4fe,bh
  41deff:	repz xchg edi,eax
  41df01:	adc    eax,0x7f1eb671
  41df06:	mov    cl,0xd
  41df08:	in     eax,dx
  41df09:	pushf  
  41df0a:	cmp    al,0x95
  41df0c:	pop    ss
  41df0d:	retf   
  41df0e:	lahf   
  41df0f:	iret   
  41df10:	cs dec ebp
  41df12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df13:	sbb    al,0x3c
  41df15:	pop    es
  41df16:	mov    ebx,0xfa705ac9
  41df1b:	idiv   BYTE PTR gs:[esi+0x12]
  41df1f:	pop    edx
  41df20:	push   cs
  41df21:	add    eax,0xcfac76d9
  41df26:	enter  0x1f31,0x34
  41df2a:	dec    ecx
  41df2b:	iret   
  41df2c:	test   eax,0xf5dc5662
  41df32:	mov    ah,0xfe
  41df34:	push   edi
  41df35:	jmp    0x41df7a
  41df37:	sbb    bl,BYTE PTR [ebx-0xe]
  41df3a:	loop   0x41df24
  41df3c:	fnsave [ebx-0x722555f]
  41df42:	sti    
  41df43:	jge    0x41df21
  41df45:	retf   0x260a
  41df48:	pop    esi
  41df49:	out    dx,eax
  41df4a:	add    ch,BYTE PTR [edi-0x540f0849]
  41df50:	xchg   dh,bh
  41df52:	cmp    DWORD PTR [ecx-0x3ebd60d6],ebp
  41df58:	out    0xbc,eax
  41df5a:	add    eax,0x84a26e8f
  41df5f:	imul   edx,DWORD PTR [esi-0x56],0xffffffbf
  41df63:	sbb    BYTE PTR [ecx-0x6407ba9f],bl
  41df69:	inc    DWORD PTR [esi+0x5e92d318]
  41df6f:	int    0x17
  41df71:	mov    bh,0x62
  41df73:	rcl    DWORD PTR [esi-0x5233390b],1
  41df79:	jbe    0x41df99
  41df7b:	push   edi
  41df7c:	and    ah,dl
  41df7e:	hlt    
  41df7f:	rcl    DWORD PTR [edi-0x50],0x41
  41df83:	fsubr  st,st(6)
  41df85:	jbe    0x41df72
  41df87:	in     eax,dx
  41df88:	stc    
  41df89:	imul   edx,DWORD PTR [eax+0x3f],0x76db33a8
  41df90:	or     al,al
  41df92:	add    ebp,DWORD PTR [esi+0x512bbf0]
  41df98:	jmp    0xd637e000
  41df9d:	pop    edi
  41df9e:	scas   al,BYTE PTR es:[edi]
  41df9f:	hlt    
  41dfa0:	jge    0x41df40
  41dfa2:	sub    dl,BYTE PTR [edi-0xebb454f]
  41dfa8:	fldenv [edi]
  41dfaa:	neg    dl
  41dfac:	sbb    al,0x9c
  41dfae:	shr    DWORD PTR [edi],0x78
  41dfb1:	(bad)  
  41dfb2:	(bad)  
  41dfb3:	lock xchg edi,edi
  41dfb6:	outs   dx,BYTE PTR ds:[esi]
  41dfb7:	and    al,0xd7
  41dfb9:	ss push ss
  41dfbb:	mov    dl,0x91
  41dfbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbe:	mov    DWORD PTR [ebx+0x67dc43eb],eax
  41dfc4:	mov    ds:0x49f8de3f,eax
  41dfc9:	addr16 xchg esp,eax
  41dfcb:	jne    0x41df5e
  41dfcd:	shl    DWORD PTR [eax-0x9b5a09b],0x80
  41dfd4:	push   0xbcfe23e
  41dfd9:	inc    ecx
  41dfda:	and    ebx,DWORD PTR [esi+0x7c]
  41dfdd:	fld    DWORD PTR [ebp-0x32]
  41dfe0:	jnp    0x41e046
  41dfe2:	inc    ecx
  41dfe3:	bound  ecx,QWORD PTR [edi+0x60196335]
  41dfe9:	mov    eax,0x7245da7f
  41dfee:	mov    ds:0x15ba7c4e,eax
  41dff3:	call   0x5d377d5a
  41dff8:	cmp    cl,BYTE PTR [ebx-0x4cb5670e]
  41dffe:	add    esp,DWORD PTR [ecx-0x7efda127]
  41e004:	inc    edx
  41e005:	inc    BYTE PTR [edx-0x3d2a2884]
  41e00b:	ss adc eax,0x2438802d
  41e011:	shr    BYTE PTR [esi-0x149a2dbf],0xcb
  41e018:	fmul   DWORD PTR [ebx]
  41e01a:	aas    
  41e01b:	retf   0xb157
  41e01e:	jmp    0x41e053
  41e020:	call   0x5544da99
  41e025:	add    bh,ah
  41e027:	lds    edx,FWORD PTR [ebx-0x7f]
  41e02a:	jb     0x41e011
  41e02c:	jnp    0x41dfea
  41e02e:	xchg   ebp,eax
  41e02f:	leave  
  41e030:	jmp    0x41e025
  41e032:	(bad)  [eax-0x14]
  41e035:	cmp    cl,0x85
  41e038:	stc    
  41e039:	stos   BYTE PTR es:[edi],al
  41e03a:	int3   
  41e03b:	ss jp  0x41dff9
  41e03e:	mov    eax,ds:0x2de7287
  41e044:	mov    cl,0x31
  41e046:	imul   esp,DWORD PTR [ebx+0x26adcda9],0x9d128a2f
  41e050:	jo     0x41dfdc
  41e052:	loop   0x41e094
  41e054:	das    
  41e055:	(bad)  
  41e056:	fist   WORD PTR [ebx-0x1b]
  41e059:	pop    ecx
  41e05a:	mov    al,ds:0x7ac0c92e
  41e05f:	or     esi,DWORD PTR [edx+0x22]
  41e062:	sub    BYTE PTR [ebx+0x31],al
  41e065:	xchg   esp,eax
  41e066:	enter  0x517f,0x77
  41e06a:	fistp  DWORD PTR [ecx+0x144d9454]
  41e070:	xor    esp,DWORD PTR [ebx-0x369bce3]
  41e076:	inc    ecx
  41e077:	adc    ch,BYTE PTR [ebp-0x31]
  41e07a:	sbb    eax,DWORD PTR [ebp+0x4b2d56f1]
  41e080:	rol    BYTE PTR [edi-0x3ceeb233],cl
  41e086:	xor    ah,BYTE PTR [esi]
  41e088:	lea    edx,[esi+0x646db090]
  41e08e:	mov    edx,0x138d98db
  41e093:	js     0x41e0c0
  41e095:	sahf   
  41e096:	mov    ebp,0xb49b118
  41e09b:	icebp  
  41e09c:	ins    DWORD PTR es:[edi],dx
  41e09d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e09e:	or     esi,DWORD PTR [eax+0x6e]
  41e0a1:	or     esi,ebx
  41e0a3:	add    bl,BYTE PTR [eax-0x7ba36471]
  41e0a9:	sub    eax,0x31e9cc2
  41e0ae:	mov    ebx,0xca13f66e
  41e0b3:	xchg   esp,eax
  41e0b4:	jo     0x41e082
  41e0b6:	xor    edi,DWORD PTR [esp+esi*8+0x1ae7d66a]
  41e0bd:	mov    ch,0x31
  41e0bf:	sub    BYTE PTR [esi-0x18efce18],dh
  41e0c5:	lock int 0xf8
  41e0c8:	and    al,0x59
  41e0ca:	inc    ebx
  41e0cb:	inc    ebx
  41e0cc:	jp     0x41e12a
  41e0ce:	pushf  
  41e0cf:	mov    esi,0xb5128ed7
  41e0d4:	or     dh,cl
  41e0d6:	and    BYTE PTR [ecx],bl
  41e0d8:	pop    esi
  41e0d9:	jp     0x41e0d7
  41e0db:	lock mov ch,0xb8
  41e0de:	sbb    BYTE PTR [esi],dh
  41e0e0:	(bad)  
  41e0e2:	fidiv  WORD PTR [edx+edi*2+0x68]
  41e0e6:	add    DWORD PTR [esi+0x3d],eax
  41e0e9:	dec    ebx
  41e0ea:	xchg   ebp,eax
  41e0eb:	adc    al,0x17
  41e0ed:	and    DWORD PTR [ecx+edi*1-0x5d],ebp
  41e0f1:	aad    0xdb
  41e0f3:	les    edi,FWORD PTR [eax+0xb2583d1]
  41e0f9:	sbb    al,0x2a
  41e0fb:	imul   eax,DWORD PTR [ebx],0x68
  41e0fe:	out    dx,eax
  41e0ff:	cmp    BYTE PTR [edi-0x4f],dh
  41e102:	je     0x41e103
  41e104:	icebp  
  41e105:	out    0x6d,eax
  41e107:	dec    esi
  41e108:	pop    esp
  41e109:	inc    ebp
  41e10a:	push   ebx
  41e10b:	sub    cl,dh
  41e10d:	test   BYTE PTR [edx],al
  41e10f:	call   0x2ef3:0xa97f5985
  41e116:	pusha  
  41e117:	jmp    0xe0d1f2fd
  41e11c:	inc    esi
  41e11d:	call   FWORD PTR [edi-0x3de39d39]
  41e123:	cmp    ebp,edx
  41e125:	xchg   ebx,eax
  41e126:	gs or  eax,0xf735993d
  41e12c:	das    
  41e12d:	aam    0x50
  41e12f:	(bad)  
  41e130:	lea    edi,[ebx+ebx*2]
  41e133:	sub    al,0x0
  41e135:	mov    dh,0x8d
  41e137:	jge    0x41e164
  41e139:	ficomp DWORD PTR ds:0x4c4ee096
  41e13f:	imul   esi,DWORD PTR [ebx],0x62
  41e142:	ja     0x41e148
  41e144:	dec    esp
  41e145:	call   0x8900a4be
  41e14a:	mov    ebp,0x1a19363
  41e14f:	out    dx,al
  41e150:	icebp  
  41e151:	mov    ah,0xe8
  41e153:	jp     0x41e1bd
  41e155:	mov    ds:0x34388b91,eax
  41e15a:	sub    al,0x64
  41e15c:	outs   dx,BYTE PTR ds:[esi]
  41e15d:	je     0x41e1dd
  41e15f:	inc    esp
  41e160:	loope  0x41e128
  41e162:	jge    0x41e122
  41e164:	mov    esp,DWORD PTR [eax-0x2caf7abe]
  41e16a:	add    edx,eax
  41e16c:	cli    
  41e16d:	std    
  41e16e:	loope  0x41e140
  41e170:	popf   
  41e171:	and    edi,DWORD PTR cs:[ebx+0x51]
  41e175:	mov    ebx,0x7b297a99
  41e17a:	jae    0x41e1a5
  41e17c:	std    
  41e17d:	cmp    bl,bl
  41e17f:	mov    ch,0xb0
  41e181:	loope  0x41e18d
  41e183:	jnp    0x41e156
  41e185:	mov    cl,BYTE PTR [ecx]
  41e187:	iret   
  41e188:	pop    ebp
  41e189:	inc    ecx
  41e18a:	xor    eax,0x859021c2
  41e18f:	retf   0xd7fb
  41e192:	sbb    al,0xf0
  41e194:	lods   eax,DWORD PTR ds:[esi]
  41e195:	inc    eax
  41e196:	das    
  41e197:	sbb    al,0xb3
  41e199:	je     0x41e1d4
  41e19b:	and    bh,bh
  41e19d:	inc    edx
  41e19e:	nop
  41e19f:	popa   
  41e1a0:	enter  0xb1f6,0xb7
  41e1a4:	adc    eax,0xcef4b135
  41e1a9:	jo     0x41e142
  41e1ab:	adc    DWORD PTR [ecx+0x12acc1e6],edi
  41e1b1:	jb     0x41e1c8
  41e1b3:	(bad)  
  41e1b4:	test   al,0x7e
  41e1b6:	dec    ebp
  41e1b7:	adc    dl,BYTE PTR [edx+0x5c7b4aaa]
  41e1bd:	stos   BYTE PTR es:[edi],al
  41e1be:	aas    
  41e1bf:	clc    
  41e1c0:	jne    0x41e17e
  41e1c2:	mov    al,0xb4
  41e1c4:	push   ds
  41e1c5:	ret    0x6874
  41e1c8:	lahf   
  41e1c9:	jmp    DWORD PTR [edi]
  41e1cb:	add    al,0x80
  41e1cd:	int3   
  41e1ce:	jg     0x41e17d
  41e1d0:	dec    esi
  41e1d1:	push   ecx
  41e1d2:	(bad)  
  41e1d3:	sub    ebp,DWORD PTR ds:0x2ac3e2e1
  41e1d9:	rol    BYTE PTR ds:0xdca454da,0xe8
  41e1e0:	rcl    DWORD PTR [esi-0x2599787f],0x13
  41e1e7:	sbb    dl,BYTE PTR [eax]
  41e1e9:	add    BYTE PTR [edx-0x592512ac],bh
  41e1ef:	or     BYTE PTR [ecx+0x42cfe47b],ch
  41e1f5:	dec    ebp
  41e1f6:	cld    
  41e1f7:	mov    edi,0x51cd49a8
  41e1fc:	nop
  41e1fd:	xor    eax,DWORD PTR [eax+0x79]
  41e200:	test   DWORD PTR [ecx],edx
  41e202:	add    BYTE PTR [ecx-0xd661519],bl
  41e208:	jno    0x41e1d8
  41e20a:	pop    es
  41e20b:	dec    edi
  41e20c:	pop    esi
  41e20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20e:	mov    ebx,0x1f7f6d5
  41e213:	mov    eax,0x308c8eaf
  41e218:	ds popf 
  41e21a:	arpl   WORD PTR ds:0x5643c51c,sp
  41e220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e221:	dec    ebp
  41e222:	dec    esp
  41e223:	stos   BYTE PTR es:[edi],al
  41e224:	outs   dx,BYTE PTR ds:[esi]
  41e225:	dec    edi
  41e226:	fs pop esi
  41e228:	inc    eax
  41e229:	dec    ebx
  41e22a:	pop    edi
  41e22b:	mov    ecx,edi
  41e22d:	jb     0x41e2a9
  41e22f:	sbb    al,0xea
  41e231:	jns    0x41e287
  41e233:	mov    cl,0x34
  41e235:	mov    ebx,0x9b5c790a
  41e23a:	sub    BYTE PTR [edi-0x69],dh
  41e23d:	or     eax,0xc059041a
  41e242:	or     eax,0x64b0b66f
  41e247:	pop    edx
  41e248:	push   esi
  41e249:	inc    edx
  41e24a:	cs call 0x899c:0xd8cb559d
  41e252:	fs js  0x41e29d
  41e255:	pop    eax
  41e256:	fisubr WORD PTR [esi-0x7ec9fee2]
  41e25c:	shr    BYTE PTR [eax+0x4e900500],cl
  41e262:	loopne 0x41e2c4
  41e264:	rcl    BYTE PTR [eax],1
  41e266:	btr    DWORD PTR [esi],0x8a
  41e26a:	jmp    0x2548:0x7ddb8e7a
  41e271:	mov    ebp,ecx
  41e273:	pushaw 
  41e275:	ds jo  0x41e20b
  41e278:	imul   ecx,DWORD PTR [edx-0x4400cfe9],0xfffffff4
  41e27f:	add    DWORD PTR [ebx+ebx*4+0x16c7f29e],esi
  41e286:	stos   BYTE PTR es:[edi],al
  41e287:	(bad)  
  41e288:	nop
  41e289:	in     al,0xfa
  41e28b:	inc    esp
  41e28c:	inc    ecx
  41e28d:	push   0xffffffc3
  41e28f:	pop    ebx
  41e290:	mov    eax,ds:0x5bc461a7
  41e295:	jns    0x41e21e
  41e297:	loope  0x41e30c
  41e299:	sbb    eax,ebx
  41e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29c:	in     eax,0x4d
  41e29e:	sub    cl,BYTE PTR [ebx+0x3cd1c298]
  41e2a4:	push   edi
  41e2a5:	jmp    0xc4db680
  41e2aa:	ss pop ss
  41e2ac:	xchg   edx,eax
  41e2ad:	push   ss
  41e2ae:	jmp    0x41e325
  41e2b0:	stc    
  41e2b1:	data16 sub al,0x3f
  41e2b4:	test   BYTE PTR [edi],dl
  41e2b6:	mov    cl,0x21
  41e2b8:	jl     0x41e258
  41e2ba:	xchg   edx,eax
  41e2bb:	fmul   DWORD PTR [esi]
  41e2bd:	aam    0x9
  41e2bf:	add    ch,BYTE PTR [ecx]
  41e2c1:	dec    esp
  41e2c2:	loope  0x41e32f
  41e2c4:	cmp    bl,BYTE PTR [edx+eiz*2+0x13]
  41e2c8:	fwait
  41e2c9:	cmp    DWORD PTR [ecx+0x48],0x19a266c9
  41e2d0:	rcr    BYTE PTR [ebx],1
  41e2d2:	lods   al,BYTE PTR ds:[esi]
  41e2d3:	xor    BYTE PTR [edi-0x7a],0xd2
  41e2d7:	push   esp
  41e2d8:	inc    ebp
  41e2d9:	loopne 0x41e30c
  41e2db:	loopne 0x41e275
  41e2dd:	fisub  WORD PTR [edx+ebp*2+0x2e480c7a]
  41e2e4:	xchg   edx,eax
  41e2e5:	cmp    bl,BYTE PTR [edi]
  41e2e7:	cld    
  41e2e8:	sbb    ebp,edx
  41e2ea:	ror    DWORD PTR [esi],0x54
  41e2ed:	xchg   edi,eax
  41e2ee:	pushf  
  41e2ef:	sbb    bh,BYTE PTR [esi+0x17]
  41e2f2:	out    dx,eax
  41e2f3:	jne    0x41e297
  41e2f5:	in     eax,dx
  41e2f6:	jno    0x41e28f
  41e2f8:	xchg   esp,eax
  41e2f9:	aam    0xb1
  41e2fb:	in     eax,0x51
  41e2fd:	dec    edi
  41e2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ff:	pop    ecx
  41e300:	retf   
  41e301:	ss in  eax,dx
  41e303:	mov    BYTE PTR [eax+0x2211dfa7],dh
  41e309:	dec    ebp
  41e30a:	jmp    0xb3b4:0x7c7b7b97
  41e311:	enter  0x51e1,0x3a
  41e315:	push   esp
  41e316:	ror    BYTE PTR [ecx],0xab
  41e319:	push   0xc840a572
  41e31e:	sbb    bl,BYTE PTR [ebp+edi*8-0x25608f94]
  41e325:	popf   
  41e326:	jle    0x41e389
  41e328:	jnp    0x41e2c8
  41e32a:	bound  ecx,QWORD PTR ds:0x2a05ec80
  41e330:	push   eax
  41e331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e332:	xor    ah,BYTE PTR [esi]
  41e334:	mov    ah,0x49
  41e336:	jb     0x41e2bd
  41e338:	cwde   
  41e339:	outs   dx,DWORD PTR ds:[esi]
  41e33a:	out    dx,al
  41e33b:	inc    esp
  41e33c:	(bad)  
  41e33d:	aam    0x10
  41e33f:	aas    
  41e340:	dec    eax
  41e341:	ins    BYTE PTR es:[edi],dx
  41e342:	mov    ecx,0x8c64b09b
  41e347:	pop    ebp
  41e348:	adc    ebx,DWORD PTR [ebp-0x69a4d15c]
  41e34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e350:	test   al,0x38
  41e352:	push   0xa978e7ab
  41e357:	fiadd  DWORD PTR [ebp+0x4]
  41e35a:	add    eax,0xf3ec5d7
  41e35f:	push   cs
  41e360:	dec    esp
  41e361:	mov    ecx,0x5f45af48
  41e366:	aas    
  41e367:	or     eax,ebp
  41e369:	mov    ebx,0x305b426d
  41e36e:	xor    ecx,DWORD PTR [esi+0x6e6288dd]
  41e374:	sub    edx,ebp
  41e376:	fwait
  41e377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e378:	int    0x90
  41e37a:	sub    eax,0xf762c85d
  41e37f:	stos   DWORD PTR es:[edi],eax
  41e380:	jp     0x41e3d6
  41e382:	and    al,0x64
  41e384:	jge    0x41e369
  41e386:	imul   BYTE PTR [edx-0x11f488eb]
  41e38c:	cli    
  41e38d:	xor    BYTE PTR [esi],al
  41e38f:	in     al,dx
  41e390:	adc    ebx,DWORD PTR [esi]
  41e392:	xor    al,0xcd
  41e394:	xor    eax,0x4c0a1934
  41e399:	xor    eax,0x26668137
  41e39e:	dec    edx
  41e39f:	inc    edi
  41e3a0:	sti    
  41e3a1:	sbb    DWORD PTR [esi-0x29],0xf7f297ce
  41e3a8:	fcom   st(4)
  41e3aa:	shl    esp,0xac
  41e3ad:	retf   
  41e3ae:	pop    eax
  41e3af:	xchg   edi,eax
  41e3b0:	add    BYTE PTR [esp+esi*8],ch
  41e3b3:	mov    ch,0xd8
  41e3b5:	adc    BYTE PTR [edi],bh
  41e3b7:	push   ebp
  41e3b8:	loop   0x41e3b6
  41e3ba:	jmp    0x8c47:0x8dd5ca33
  41e3c1:	(bad)  
  41e3c2:	and    al,0xbe
  41e3c4:	retf   0x32aa
  41e3c7:	in     al,0xe
  41e3c9:	jne    0x41e3f2
  41e3cb:	fs xor BYTE PTR fs:[ebx-0x66436079],0xec
  41e3d4:	sub    DWORD PTR [edx+esi*1],0x5d
  41e3d8:	call   0x9ad:0xdb39bd44
  41e3df:	cmp    al,0xfa
  41e3e1:	pushf  
  41e3e2:	daa    
  41e3e3:	outs   dx,BYTE PTR ds:[esi]
  41e3e4:	test   BYTE PTR [esi],0x4
  41e3e7:	in     eax,dx
  41e3e8:	cld    
  41e3e9:	dec    edi
  41e3ea:	jbe    0x41e426
  41e3ec:	inc    eax
  41e3ed:	add    BYTE PTR [eax],al
  41e3ef:	add    BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xf049fc94
  41e400:	dec    eax
  41e401:	cwde   
  41e402:	or     eax,0xf300015f
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [esi],dh
  41e40b:	aaa    
  41e40c:	adc    ebp,0x40179368
  41e412:	mov    ds:0x3238975c,al
  41e417:	(bad)  
  41e418:	cli    
  41e419:	xchg   si,ax
  41e41b:	and    eax,0xdfcf9728
  41e420:	loop   0x41e40e
  41e422:	lds    esi,FWORD PTR [ecx]
  41e424:	push   cs
  41e425:	nop
  41e426:	icebp  
  41e427:	lds    edi,FWORD PTR [ebp-0x3ff19c5e]
  41e42d:	or     eax,0x4fbd44f6
  41e432:	outs   dx,DWORD PTR ds:[esi]
  41e433:	lods   eax,DWORD PTR ds:[esi]
  41e434:	and    esi,DWORD PTR [esi]
  41e436:	adc    bh,al
  41e438:	cli    
  41e439:	dec    ecx
  41e43a:	popf   
  41e43b:	imul   edi,DWORD PTR [ecx-0x1d],0x44a6ce53
  41e442:	outs   dx,DWORD PTR ds:[esi]
  41e443:	xlat   BYTE PTR ds:[ebx]
  41e444:	fld    QWORD PTR [ebp+0x12b76dda]
  41e44a:	push   edi
  41e44b:	pop    ebx
  41e44c:	in     eax,dx
  41e44d:	jne    0x41e422
  41e44f:	out    0xe2,al
  41e451:	jnp    0x41e3d9
  41e453:	imul   esp,DWORD PTR [edx+0x23e4dd9],0xfffffff5
  41e45a:	cmp    edi,edx
  41e45c:	pop    esi
  41e45d:	xchg   ebp,eax
  41e45e:	ins    BYTE PTR es:[edi],dx
  41e45f:	jns    0x41e4b1
  41e461:	rol    BYTE PTR [ebx+0x74a32a55],cl
  41e467:	mov    al,ds:0x84ebe6eb
  41e46c:	sbb    al,0x5f
  41e46e:	and    eax,0x88bbe9ce
  41e473:	dec    ebp
  41e474:	stc    
  41e475:	dec    esp
  41e476:	imul   edx,DWORD PTR [esi],0xacd5fdfa
  41e47c:	mov    bh,0x1e
  41e47e:	push   0x77
  41e480:	enter  0xf825,0x28
  41e484:	xchg   DWORD PTR [esi],ebx
  41e486:	fdivr  DWORD PTR [esi+0x4df92e45]
  41e48c:	or     DWORD PTR [ecx-0x4a],edx
  41e48f:	mov    eax,eax
  41e491:	push   ebp
  41e492:	hlt    
  41e493:	scas   al,BYTE PTR es:[edi]
  41e494:	adc    cl,cl
  41e496:	and    eax,0x113e8746
  41e49b:	pop    ebx
  41e49c:	(bad)  
  41e49d:	int3   
  41e49e:	pop    ds
  41e49f:	xchg   ecx,eax
  41e4a0:	or     al,0x63
  41e4a2:	je     0x41e433
  41e4a4:	xor    esp,DWORD PTR [esi+0x57]
  41e4a7:	inc    ecx
  41e4a8:	dec    esp
  41e4a9:	sahf   
  41e4aa:	scas   al,BYTE PTR es:[edi]
  41e4ab:	jo     0x41e500
  41e4ad:	ja     0x41e482
  41e4af:	xlat   BYTE PTR ds:[ebx]
  41e4b0:	retf   
  41e4b1:	ins    DWORD PTR es:[edi],dx
  41e4b2:	mov    ebx,0xd1862482
  41e4b7:	or     ecx,esi
  41e4b9:	dec    eax
  41e4ba:	rcr    DWORD PTR [edx],cl
  41e4bc:	xchg   ecx,eax
  41e4bd:	inc    dx
  41e4bf:	jmp    0x41e539
  41e4c1:	xchg   edi,eax
  41e4c2:	jns    0x41e453
  41e4c4:	data16 scas al,BYTE PTR es:[edi]
  41e4c6:	daa    
  41e4c7:	push   ds
  41e4c8:	and    al,0xed
  41e4ca:	or     BYTE PTR [ecx-0x3c0a8850],dl
  41e4d0:	xchg   ebx,eax
  41e4d1:	inc    edx
  41e4d2:	and    dh,dh
  41e4d4:	scas   al,BYTE PTR es:[edi]
  41e4d5:	cwde   
  41e4d6:	inc    edx
  41e4d7:	icebp  
  41e4d8:	push   ds
  41e4d9:	or     al,0x78
  41e4db:	jnp    0x41e4d4
  41e4dd:	in     eax,0x40
  41e4df:	es (bad) 
  41e4e1:	adc    eax,0x438ac693
  41e4e6:	mov    edi,0x137e8362
  41e4eb:	dec    ecx
  41e4ec:	fcom   st(4)
  41e4ee:	jo     0x41e47c
  41e4f0:	jge    0x41e4c7
  41e4f2:	xor    ebp,DWORD PTR [ebx]
  41e4f4:	mov    ch,0x1b
  41e4f6:	bound  edx,QWORD PTR [edx]
  41e4f8:	jle    0x41e56c
  41e4fa:	fdivr  QWORD PTR cs:[edx]
  41e4fd:	loopne 0x41e555
  41e4ff:	nop
  41e500:	lods   al,BYTE PTR ds:[esi]
  41e501:	mov    BYTE PTR [edx-0x4dd325],dl
  41e507:	punpckhwd mm6,QWORD PTR [ecx+0x24]
  41e50b:	(bad)  
  41e50c:	add    BYTE PTR [esi-0x469c2c3e],al
  41e512:	sbb    eax,0x337830dd
  41e517:	shl    BYTE PTR [ecx-0x12],cl
  41e51a:	in     eax,0x4
  41e51c:	fwait
  41e51d:	sub    DWORD PTR [edi-0x47],edi
  41e520:	int    0xe3
  41e522:	push   es
  41e523:	retf   0x9540
  41e526:	xor    bh,bl
  41e528:	inc    edx
  41e529:	ss ja  0x41e5a1
  41e52c:	(bad)  
  41e52d:	push   esi
  41e52e:	cmp    al,0xf3
  41e530:	rol    DWORD PTR [ebp+0x46],0xe
  41e534:	xchg   esi,eax
  41e535:	jecxz  0x41e511
  41e537:	dec    ebp
  41e538:	cmp    BYTE PTR [ebx+eiz*1],0xd
  41e53c:	dec    eax
  41e53d:	xchg   esi,eax
  41e53e:	lahf   
  41e53f:	imul   ecx,DWORD PTR [edi+0x1becfc53],0x1a0e32fe
  41e549:	sbb    eax,0xabef7a1c
  41e54e:	inc    eax
  41e54f:	out    0x17,al
  41e551:	pusha  
  41e552:	or     bl,BYTE PTR [edi+0x7f1b47c3]
  41e558:	cli    
  41e559:	icebp  
  41e55a:	test   eax,0xbbe71f65
  41e55f:	stc    
  41e560:	ds inc eax
  41e562:	inc    edx
  41e563:	test   BYTE PTR [ebx-0x6da6b08],al
  41e569:	dec    edx
  41e56a:	pop    esi
  41e56b:	inc    esi
  41e56c:	fadd   DWORD PTR [edx-0x726ec4c2]
  41e572:	mov    bh,0xe2
  41e574:	ret    0xe56f
  41e577:	or     DWORD PTR [edi],0x37899705
  41e57d:	mov    BYTE PTR [ebx+0x6f],0x8
  41e581:	jnp    0x41e5e5
  41e583:	add    eax,DWORD PTR ds:0x5a1078ef
  41e589:	xchg   BYTE PTR [eax-0x57],dh
  41e58c:	mov    ds:0xfbcf51c5,al
  41e591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e592:	pop    ss
  41e593:	test   DWORD PTR ds:0xe762385d,esp
  41e599:	add    eax,ebp
  41e59b:	popf   
  41e59c:	cmp    dh,BYTE PTR [ecx+esi*1+0x58]
  41e5a0:	addr16 (bad) 
  41e5a2:	clc    
  41e5a3:	out    0x5a,eax
  41e5a5:	ror    BYTE PTR [eax],cl
  41e5a7:	in     eax,dx
  41e5a8:	push   ebp
  41e5a9:	jno    0x41e5c3
  41e5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ac:	jmp    0x469c:0xeefe4aa5
  41e5b3:	and    BYTE PTR [edx-0x72],0x9f
  41e5b7:	push   cs
  41e5b8:	int3   
  41e5b9:	xlat   BYTE PTR ss:[ebx]
  41e5bb:	mov    DWORD PTR [ebx-0x4f119d6d],edi
  41e5c1:	in     al,0x84
  41e5c3:	popf   
  41e5c4:	rcl    DWORD PTR [eax+0x58],1
  41e5c7:	enter  0xd4ba,0x1f
  41e5cb:	add    esp,eax
  41e5cd:	loope  0x41e57d
  41e5cf:	and    al,BYTE PTR [eax+0xd555fbe]
  41e5d5:	jnp    0x41e652
  41e5d7:	loopne 0x41e5b6
  41e5d9:	pusha  
  41e5da:	mov    ch,0xc
  41e5dc:	add    cl,BYTE PTR [edx]
  41e5de:	mov    eax,ds:0x93297dc2
  41e5e3:	popf   
  41e5e4:	cdq    
  41e5e5:	jns    0x41e60d
  41e5e7:	imul   esi,DWORD PTR [eax-0x2c],0x3
  41e5eb:	pop    edx
  41e5ec:	fdivr  QWORD PTR [edi+0x6000664a]
  41e5f2:	sub    BYTE PTR [ebx+edx*4-0x30],bl
  41e5f6:	int    0xd1
  41e5f8:	ffree  st(7)
  41e5fa:	or     al,0x95
  41e5fc:	js     0x41e5fc
  41e5fe:	mov    esi,0x81d97506
  41e603:	pushf  
  41e604:	pop    edi
  41e605:	shr    BYTE PTR [eax+0x1e],cl
  41e608:	std    
  41e609:	out    dx,al
  41e60a:	dec    eax
  41e60b:	dec    edx
  41e60c:	fistp  DWORD PTR [eax-0x6d0bacda]
  41e612:	adc    edi,DWORD PTR [esi+ecx*8]
  41e615:	jo     0x41e61f
  41e617:	mov    esp,DWORD PTR [ebx+0x58d21da2]
  41e61d:	jmp    0x221e0ff7
  41e622:	int    0x79
  41e624:	ror    BYTE PTR [ebx-0x1bee06f],1
  41e62a:	and    al,0xb9
  41e62c:	xchg   edx,eax
  41e62d:	cs xchg ebx,eax
  41e62f:	pop    esi
  41e630:	dec    ebx
  41e631:	shl    al,cl
  41e633:	inc    edi
  41e634:	push   es
  41e635:	out    dx,eax
  41e636:	push   ss
  41e637:	push   0xffffffd9
  41e639:	and    dl,BYTE PTR [esi+0x16832cae]
  41e63f:	xor    bh,ch
  41e641:	adc    bl,BYTE PTR [edi+ebp*4-0x48c4f05e]
  41e648:	mov    DWORD PTR [eax+0x14],ebp
  41e64b:	pop    ss
  41e64c:	(bad)  
  41e64d:	adc    ch,ch
  41e64f:	inc    edx
  41e650:	not    BYTE PTR [esi]
  41e652:	hlt    
  41e653:	xchg   edx,eax
  41e654:	pop    ebx
  41e655:	push   ecx
  41e656:	not    al
  41e658:	mov    ebp,0x4e2a05b1
  41e65d:	add    dh,BYTE PTR [esi+0x5f]
  41e660:	jmp    0x41e6c9
  41e662:	push   eax
  41e663:	je     0x41e62b
  41e665:	or     edx,eax
  41e667:	pushf  
  41e668:	mov    edx,0xa5fbb2f5
  41e66d:	lds    edi,FWORD PTR [ebp-0x639783a0]
  41e673:	(bad)  
  41e674:	bnd jmp 0xe1bbe4df
  41e67a:	add    esi,eax
  41e67c:	iret   
  41e67d:	shrd   DWORD PTR [eax-0x51],esp,0xce
  41e682:	addr16 js 0x41e64c
  41e685:	sbb    DWORD PTR [ecx+esi*8],edx
  41e688:	sbb    eax,0x52ae4951
  41e68d:	push   DWORD PTR [ebp-0x44cbb3fd]
  41e693:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e695:	call   0x4b78:0x6a2a94d7
  41e69c:	icebp  
  41e69d:	in     al,dx
  41e69e:	mov    DWORD PTR [eax-0x7a],0x41593724
  41e6a5:	test   BYTE PTR [ecx-0x5],ah
  41e6a8:	fs mov ecx,0xf1062db3
  41e6ae:	retf   0x2e61
  41e6b1:	aaa    
  41e6b2:	stos   DWORD PTR es:[edi],eax
  41e6b3:	mov    ebx,0x80ba46ed
  41e6b8:	dec    ebx
  41e6b9:	(bad)  
  41e6ba:	xor    DWORD PTR [ecx+eax*1],ecx
  41e6bd:	test   DWORD PTR [ecx-0x68],0xe275bae5
  41e6c4:	sub    al,BYTE PTR [edi-0xd]
  41e6c7:	adc    ch,al
  41e6c9:	inc    eax
  41e6ca:	fwait
  41e6cb:	scas   eax,DWORD PTR es:[edi]
  41e6cc:	arpl   WORD PTR [ebp+ecx*4+0xff0233f],bx
  41e6d3:	cld    
  41e6d4:	add    ebp,DWORD PTR [edi+0x4]
  41e6d7:	ret    
  41e6d8:	popa   
  41e6d9:	add    dl,bh
  41e6db:	mov    DWORD PTR [ecx],ebx
  41e6dd:	or     ecx,DWORD PTR [edx+eax*8]
  41e6e0:	sub    DWORD PTR [eax],eax
  41e6e2:	cmp    BYTE PTR [ecx+0x286270c2],bh
  41e6e8:	jae    0x41e6b6
  41e6ea:	fmul   st(6),st
  41e6ec:	icebp  
  41e6ed:	sar    BYTE PTR [edi],cl
  41e6ef:	std    
  41e6f0:	lods   al,BYTE PTR ds:[esi]
  41e6f1:	mov    dh,0x41
  41e6f3:	enter  0x892f,0xe2
  41e6f7:	(bad)  
  41e6f8:	dec    ebx
  41e6f9:	js     0x41e741
  41e6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6fc:	inc    esi
  41e6fd:	and    BYTE PTR [ecx+0x32a96e00],0x46
  41e704:	dec    esi
  41e705:	sub    BYTE PTR [ecx+0x43f11269],ah
  41e70b:	imul   bh
  41e70d:	add    edi,DWORD PTR [ebx-0x76cf761c]
  41e713:	lock lock ds fcomi st,st(7)
  41e718:	mov    bl,0x61
  41e71a:	cmp    BYTE PTR [eax+0x2eb12559],ch
  41e720:	stc    
  41e721:	cli    
  41e722:	dec    esp
  41e723:	push   ds
  41e724:	clc    
  41e725:	or     bl,ah
  41e727:	cld    
  41e728:	push   ebp
  41e729:	loope  0x41e6ad
  41e72b:	add    cl,BYTE PTR ds:0xbc4f6622
  41e731:	cld    
  41e732:	lea    ecx,[ecx-0xa5553ef]
  41e738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e739:	in     eax,0x54
  41e73b:	retf   
  41e73c:	outs   dx,BYTE PTR ds:[esi]
  41e73d:	jb     0x41e761
  41e73f:	loope  0x41e731
  41e741:	xlat   BYTE PTR ds:[ebx]
  41e742:	scas   al,BYTE PTR es:[edi]
  41e743:	test   eax,0x193d5984
  41e749:	pop    ss
  41e74a:	daa    
  41e74b:	push   0xe4d6fb00
  41e750:	pop    es
  41e751:	js     0x41e76e
  41e753:	sbb    eax,0xa3dca281
  41e758:	sahf   
  41e759:	sti    
  41e75a:	retf   
  41e75b:	shr    BYTE PTR [ecx-0x1674bb36],0x81
  41e762:	je     0x41e6f4
  41e764:	xor    al,0x81
  41e766:	lds    dx,DWORD PTR [esp-0x66]
  41e76b:	mov    esi,0x110041be
  41e770:	das    
  41e771:	ds scas al,BYTE PTR es:[edi]
  41e773:	jmp    0x52b610ce
  41e778:	lahf   
  41e779:	mov    esi,0xffcda4b2
  41e77e:	or     eax,DWORD PTR [ebx]
  41e780:	call   0x4e9a:0x79869663
  41e787:	push   eax
  41e788:	xor    al,0x46
  41e78a:	aam    0xe6
  41e78c:	jae    0x41e803
  41e78e:	inc    esp
  41e78f:	add    DWORD PTR [ebx-0x40f160da],edi
  41e795:	xor    al,0x97
  41e797:	es mov ebx,0xf2a1a6c0
  41e79d:	hlt    
  41e79e:	int    0x93
  41e7a0:	xor    eax,DWORD PTR [edi+esi*1-0x6e]
  41e7a4:	(bad)  
  41e7a6:	stc    
  41e7a7:	fldenv [edx]
  41e7a9:	scas   eax,DWORD PTR es:[edi]
  41e7aa:	sub    dl,bh
  41e7ac:	arpl   WORD PTR [ebx+0x72608b01],bp
  41e7b2:	fs jp  0x41e761
  41e7b5:	addr16 xchg ebx,eax
  41e7b7:	(bad)
  41e7bb:	int3   
  41e7bc:	popa   
  41e7bd:	lods   al,BYTE PTR ds:[esi]
  41e7be:	jp     0x41e830
  41e7c0:	ins    DWORD PTR es:[edi],dx
  41e7c1:	cmp    eax,0x4ba7208f
  41e7c6:	shr    BYTE PTR [edi],0x2e
  41e7c9:	jnp    0x41e78e
  41e7cb:	jne    0x41e7d6
  41e7cd:	mov    WORD PTR cs:[eax-0x2201ca3f],?
  41e7d4:	mov    ebx,0xc25628ec
  41e7d9:	dec    eax
  41e7da:	mov    esi,DWORD PTR [edx-0x3]
  41e7dd:	inc    DWORD PTR [ebx+0x25]
  41e7e0:	mov    eax,ds:0x360bd98d
  41e7e5:	sbb    eax,0x61c9510a
  41e7ea:	test   al,0xb8
  41e7ec:	push   edi
  41e7ed:	in     al,dx
  41e7ee:	mov    al,ds:0x11b31ba4
  41e7f3:	cmp    esp,DWORD PTR [eax]
  41e7f5:	sub    dl,BYTE PTR [ebx-0x1]
  41e7f8:	cwde   
  41e7f9:	add    cl,BYTE PTR [ecx-0x5eb13423]
  41e7ff:	pop    ss
  41e800:	int3   
  41e801:	add    BYTE PTR [eax-0x68151888],bl
  41e807:	and    bh,BYTE PTR [edi]
  41e809:	sub    eax,0x3ceed00f
  41e80e:	clc    
  41e80f:	jno    0x41e7f5
  41e811:	aam    0x60
  41e813:	or     eax,0x2173dc9a
  41e818:	mov    esp,0x3ec0a6a7
  41e81d:	dec    ebx
  41e81e:	mov    al,ds:0xf6452280
  41e823:	fidivr WORD PTR [edi-0x64]
  41e826:	scas   al,BYTE PTR es:[edi]
  41e827:	pop    esi
  41e828:	mov    esp,0x7b06e1c6
  41e82d:	dec    ebx
  41e82e:	(bad)
  41e832:	inc    edx
  41e833:	cmc    
  41e834:	pop    ds
  41e835:	fmul   QWORD PTR fs:[esi+0x1b6f54f2]
  41e83c:	scas   al,BYTE PTR es:[edi]
  41e83d:	xchg   edx,eax
  41e83e:	in     eax,0x6b
  41e840:	mov    edi,0x47bc67aa
  41e845:	data16 xor al,0x8b
  41e848:	imul   ebp,DWORD PTR [ecx],0xffffffed
  41e84b:	and    ch,BYTE PTR [ebp+0x67669819]
  41e851:	retf   0xccbe
  41e854:	data16 jnp 0x41e873
  41e857:	cmc    
  41e858:	fbstp  TBYTE PTR [edi+0x51]
  41e85b:	ins    DWORD PTR es:[edi],dx
  41e85c:	or     cl,BYTE PTR [edi+0x59]
  41e85f:	rcr    BYTE PTR [ecx-0x5fa83432],cl
  41e865:	ss int 0xb1
  41e868:	jae    0x41e8e8
  41e86a:	mov    al,ds:0xf7f30bd2
  41e86f:	fidiv  DWORD PTR [ecx-0x5ab70cdc]
  41e875:	ret    0x2d37
  41e878:	jb     0x41e88f
  41e87a:	(bad)  
  41e87b:	mov    ah,0xd2
  41e87d:	aam    0xad
  41e87f:	pop    ds
  41e880:	std    
  41e881:	mov    ecx,0x52da6a40
  41e886:	(bad)  [ecx-0x6ad79f2d]
  41e88c:	and    dh,BYTE PTR [ecx]
  41e88e:	rcr    DWORD PTR [eax-0x1a],1
  41e891:	loop   0x41e8a9
  41e893:	inc    ecx
  41e894:	mov    eax,0x55c7a2cc
  41e899:	fcomp  QWORD PTR [edi]
  41e89b:	add    eax,DWORD PTR [esi-0x465ec3b5]
  41e8a1:	sub    ch,cl
  41e8a3:	out    dx,eax
  41e8a4:	es (bad) 
  41e8a6:	arpl   WORD PTR [esi],sp
  41e8a8:	xchg   ecx,eax
  41e8a9:	les    eax,FWORD PTR [ecx]
  41e8ab:	in     al,dx
  41e8ac:	xchg   ebx,eax
  41e8ad:	mov    eax,ds:0x9d12b593
  41e8b2:	mov    ebp,0x79982b3c
  41e8b7:	int3   
  41e8b8:	pop    ecx
  41e8b9:	push   0xffffff89
  41e8bb:	mov    eax,0x34f4f36a
  41e8c0:	test   DWORD PTR [esi],esi
  41e8c2:	mov    esp,0x61e2ce2f
  41e8c7:	jecxz  0x41e877
  41e8c9:	sahf   
  41e8ca:	jbe    0x41e8d5
  41e8cc:	cmp    eax,0x7d7367ba
  41e8d1:	or     al,0x6d
  41e8d3:	dec    ecx
  41e8d4:	dec    ebp
  41e8d5:	rcr    ah,0x93
  41e8d8:	retf   0x522f
  41e8db:	lahf   
  41e8dc:	rcr    bh,cl
  41e8de:	ins    BYTE PTR es:[edi],dx
  41e8df:	xchg   edx,eax
  41e8e0:	out    dx,eax
  41e8e1:	aas    
  41e8e2:	push   edx
  41e8e3:	ret    
  41e8e4:	inc    edx
  41e8e5:	jecxz  0x41e93f
  41e8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e8:	fs xchg ebx,eax
  41e8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8eb:	fistp  QWORD PTR [ebx+0x2]
  41e8ee:	pop    ecx
  41e8ef:	cs inc esi
  41e8f1:	dec    ebx
  41e8f2:	mov    BYTE PTR ds:[edi+0x9970d13],ch
  41e8f9:	ss xchg esi,eax
  41e8fb:	test   ch,ah
  41e8fd:	add    BYTE PTR [eax],al
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	hlt    
  41e90f:	jbe    0x41e990
  41e911:	mov    eax,ds:0x16400
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [esi+eiz*1+0x27],dl
  41e91d:	xchg   BYTE PTR ds:0xed597111,ah
  41e923:	test   al,0x94
  41e925:	xor    ah,BYTE PTR [eax+0x4d]
  41e928:	jl     0x41e8d8
  41e92a:	mov    cl,0xd8
  41e92c:	mov    ebx,0xbf784a89
  41e931:	push   ecx
  41e932:	sub    edx,DWORD PTR [ebx-0x46f181cd]
  41e938:	dec    bx
  41e93a:	and    bh,bh
  41e93c:	call   0x10b:0xb2f19aa4
  41e943:	inc    ecx
  41e944:	sub    al,0xf4
  41e946:	out    dx,eax
  41e947:	test   esp,ecx
  41e949:	leave  
  41e94a:	xchg   esi,eax
  41e94b:	adc    eax,0xfc1d664a
  41e950:	pop    ecx
  41e951:	or     cl,cl
  41e953:	sbb    esi,DWORD PTR [ebp-0x54]
  41e956:	sbb    eax,0xe49b630a
  41e95b:	mov    ds:0xef29e64d,al
  41e960:	sub    BYTE PTR [ebx],dl
  41e962:	add    ebp,esi
  41e964:	adc    DWORD PTR [eax-0x3ec14269],0x17
  41e96b:	in     al,dx
  41e96c:	pop    ebp
  41e96d:	cmp    DWORD PTR [esi],eax
  41e96f:	fs jge 0x41e97e
  41e972:	push   esp
  41e973:	call   DWORD PTR [ebx]
  41e975:	or     dh,BYTE PTR [eax-0x69]
  41e978:	mov    bl,0x50
  41e97a:	push   eax
  41e97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97c:	push   eax
  41e97d:	inc    esp
  41e97e:	out    dx,eax
  41e97f:	ret    
  41e980:	pop    eax
  41e981:	shl    BYTE PTR [ecx+eax*8-0x567f6f84],1
  41e988:	pop    ss
  41e989:	cmp    DWORD PTR [ebp-0x45],0x12
  41e98d:	inc    eax
  41e98e:	aad    0xb1
  41e990:	lods   al,BYTE PTR ds:[esi]
  41e991:	or     bh,BYTE PTR [edi]
  41e993:	iret   
  41e994:	int3   
  41e995:	add    al,BYTE PTR [ebx]
  41e997:	push   ecx
  41e998:	dec    ebp
  41e999:	push   ecx
  41e99a:	(bad)  
  41e99b:	faddp  st(5),st
  41e99d:	shl    BYTE PTR [edi-0x366157c4],1
  41e9a3:	rol    dl,0xde
  41e9a6:	jno    0x41e9e2
  41e9a8:	push   ebx
  41e9a9:	out    0xb0,al
  41e9ab:	in     al,0x17
  41e9ad:	sub    al,0xbd
  41e9af:	pusha  
  41e9b0:	jne    0x41e9a0
  41e9b2:	cmp    eax,0x71bc32bc
  41e9b7:	cmp    BYTE PTR [ecx-0x7611db2],bl
  41e9bd:	cli    
  41e9be:	sbb    bl,dh
  41e9c0:	(bad)  
  41e9c2:	and    bl,BYTE PTR [ecx]
  41e9c4:	adc    BYTE PTR [edx-0x3c],ch
  41e9c7:	lods   al,BYTE PTR ds:[esi]
  41e9c8:	fst    st(5)
  41e9ca:	loope  0x41ea12
  41e9cc:	(bad)  [esp+ebx*2]
  41e9cf:	cmc    
  41e9d0:	xchg   DWORD PTR [edx+ebp*2],eax
  41e9d3:	addr16 xor eax,0x1886709d
  41e9d9:	fsubr  DWORD PTR [ebx]
  41e9db:	add    bp,sp
  41e9de:	mov    cl,0xc4
  41e9e0:	gs or  al,0xc4
  41e9e3:	mov    dh,0x1
  41e9e5:	in     al,dx
  41e9e6:	rol    BYTE PTR [ecx+0x34],1
  41e9e9:	or     ecx,DWORD PTR [ecx+0x68]
  41e9ec:	fcomp  QWORD PTR [edx+0xd0e3fd6]
  41e9f2:	mov    eax,ds:0x5a9b60b5
  41e9f7:	rcl    BYTE PTR [ebx+ebp*2-0x2dba1f25],1
  41e9fe:	inc    edi
  41e9ff:	or     al,0xbe
  41ea01:	imul   ecx,edx,0xbcc6a82a
  41ea07:	icebp  
  41ea08:	dec    ecx
  41ea09:	push   esi
  41ea0a:	jge    0x41e9af
  41ea0c:	xchg   BYTE PTR [esi-0x7e51ff6],cl
  41ea12:	test   BYTE PTR [ebx-0x57],ch
  41ea15:	faddp  st(3),st
  41ea17:	cmova  eax,DWORD PTR [ebp-0xb]
  41ea1b:	dec    eax
  41ea1c:	jp     0x41ea56
  41ea1e:	mov    edi,0xcd3d31b4
  41ea24:	dec    edi
  41ea25:	push   edi
  41ea26:	inc    eax
  41ea27:	pop    ebx
  41ea28:	das    
  41ea29:	mov    ch,0x9b
  41ea2b:	mov    dh,0x14
  41ea2d:	adc    eax,0xe333e13f
  41ea32:	inc    esp
  41ea33:	sbb    al,0x50
  41ea35:	push   edi
  41ea36:	into   
  41ea37:	test   eax,0x7e8ae8a8
  41ea3c:	jge    0x41ea77
  41ea3e:	outs   dx,DWORD PTR ds:[esi]
  41ea3f:	sbb    DWORD PTR fs:[edi+0x418631ce],ebx
  41ea46:	arpl   dx,bp
  41ea48:	pop    ds
  41ea49:	outs   dx,DWORD PTR ds:[esi]
  41ea4a:	cmp    esi,DWORD PTR [esi-0x47]
  41ea4d:	adc    ebp,edi
  41ea4f:	pop    ebp
  41ea50:	dec    ecx
  41ea51:	int    0xe4
  41ea53:	sub    edx,DWORD PTR [edx+0x75]
  41ea56:	ret    
  41ea57:	(bad)  
  41ea58:	repz sbb eax,0x7bcee401
  41ea5e:	jns    0x41ea2d
  41ea60:	mov    dh,0xd7
  41ea62:	add    esi,edx
  41ea64:	es es push 0x69465ccc
  41ea6b:	fwait
  41ea6c:	dec    ebp
  41ea6d:	add    eax,DWORD PTR [eax-0x68]
  41ea70:	pop    ss
  41ea71:	inc    DWORD PTR gs:[edi+edx*1]
  41ea75:	mov    ecx,DWORD PTR [ebx+0x6f04a123]
  41ea7b:	add    DWORD PTR [ecx-0x1f53331b],edi
  41ea81:	inc    esi
  41ea82:	mov    esi,0xccd16b6
  41ea87:	aam    0xdd
  41ea89:	sbb    al,0x85
  41ea8b:	mov    esi,0x375dedc8
  41ea90:	(bad)
  41ea93:	sub    BYTE PTR [ebx-0x748c8def],dl
  41ea99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea9a:	data16 sub bh,dh
  41ea9d:	jns    0x41ea65
  41ea9f:	icebp  
  41eaa0:	out    dx,al
  41eaa1:	retf   0x18a1
  41eaa4:	gs jge 0x41eacb
  41eaa7:	and    eax,ebx
  41eaa9:	pushf  
  41eaaa:	dec    esp
  41eaab:	dec    ebp
  41eaac:	sub    eax,0xe9b37442
  41eab1:	mov    ?,WORD PTR [esp+eiz*8-0x3f15a9b9]
  41eab8:	jmp    0x41ea49
  41eaba:	lods   al,BYTE PTR ds:[esi]
  41eabb:	pop    ss
  41eabc:	out    dx,eax
  41eabd:	(bad)  
  41eabe:	(bad)  [esp+ecx*4+0x7c]
  41eac2:	push   esp
  41eac3:	bound  eax,QWORD PTR [eax+0x59]
  41eac6:	cmp    eax,DWORD PTR [esp+eiz*4]
  41eac9:	jmp    0x3588:0xbe3a8b70
  41ead0:	dec    ebp
  41ead1:	cmp    DWORD PTR [eax],0xffffff9b
  41ead4:	int    0xe8
  41ead6:	sbb    DWORD PTR [esp+eax*4],esi
  41ead9:	pop    ss
  41eada:	cwde   
  41eadb:	pop    edi
  41eadc:	add    eax,0xd1c38804
  41eae1:	fild   DWORD PTR [esi]
  41eae3:	arpl   WORD PTR [esi+0x4b37e8ee],bp
  41eae9:	hlt    
  41eaea:	push   DWORD PTR [edx+0x1c]
  41eaed:	mov    ds:0xf31a1e81,al
  41eaf2:	inc    eax
  41eaf3:	sti    
  41eaf4:	lea    ebp,[edx-0x40]
  41eaf7:	jns    0x41eb07
  41eaf9:	xor    esi,edx
  41eafb:	mov    cl,0x89
  41eafd:	cwde   
  41eafe:	add    DWORD PTR [esi+eiz*4],esp
  41eb01:	jle    0x41eae1
  41eb03:	mov    ebp,0x2c62ea78
  41eb08:	fabs   
  41eb0a:	jp     0x41eb39
  41eb0c:	push   0x5b064d08
  41eb11:	jmp    0xc6ef:0x4e11d0aa
  41eb18:	lock addr16 enter 0x3daa,0x9f
  41eb1e:	arpl   ax,sp
  41eb20:	push   es
  41eb21:	cmp    ebp,DWORD PTR [esi+0x21]
  41eb24:	test   eax,0x18bd2823
  41eb29:	sbb    al,0xe6
  41eb2b:	cdq    
  41eb2c:	and    DWORD PTR [edx+eiz*1+0x1],esi
  41eb30:	jmp    0xd2c7:0x954cc7d7
  41eb37:	or     edi,DWORD PTR [ebp+0x7d0332cf]
  41eb3d:	cmp    BYTE PTR [esi+0x52],bl
  41eb40:	mov    ds:0x53cb27fd,al
  41eb45:	xchg   DWORD PTR [ebx],eax
  41eb47:	adc    DWORD PTR [edx+ebp*8-0xad19ad2],esi
  41eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4f:	aad    0x8c
  41eb51:	mov    ds:0xc2a25bd3,eax
  41eb56:	leave  
  41eb57:	out    dx,al
  41eb58:	ins    DWORD PTR es:[edi],dx
  41eb59:	cs dec ebx
  41eb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb5c:	mov    dl,0x95
  41eb5e:	sbb    bh,BYTE PTR [edx+ebx*2]
  41eb61:	xchg   ebp,eax
  41eb62:	mov    dl,0xec
  41eb64:	nop
  41eb65:	pusha  
  41eb66:	loopne 0x41eb31
  41eb68:	repz daa 
  41eb6a:	mov    edx,0x9c31faf4
  41eb6f:	pop    ecx
  41eb70:	pop    esp
  41eb71:	call   0x9de9:0xc5f8d772
  41eb78:	ror    BYTE PTR [esi],1
  41eb7a:	lea    edx,[eax+eax*4]
  41eb7d:	daa    
  41eb7e:	sub    esp,ebp
  41eb80:	mov    esp,0xd90691e9
  41eb85:	xlat   BYTE PTR ds:[ebx]
  41eb86:	sbb    eax,0x472a1b38
  41eb8b:	idiv   DWORD PTR ds:0xe7cd5949
  41eb91:	inc    ebp
  41eb92:	xor    bh,BYTE PTR [edx+0x53]
  41eb95:	pop    ss
  41eb96:	and    eax,0xb6994ff2
  41eb9b:	bnd data16 jg 0x41eb88
  41eb9f:	xchg   ebp,eax
  41eba0:	aas    
  41eba1:	sub    DWORD PTR [eax-0x336b4b9a],edi
  41eba7:	or     ebp,esi
  41eba9:	dec    ebx
  41ebaa:	popf   
  41ebab:	les    esp,FWORD PTR [edx+0x53]
  41ebae:	xor    DWORD PTR [eax],edx
  41ebb0:	aam    0x9
  41ebb2:	retf   
  41ebb3:	cwde   
  41ebb4:	pop    edx
  41ebb5:	pop    esi
  41ebb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb7:	inc    ecx
  41ebb8:	xchg   esp,eax
  41ebb9:	in     al,dx
  41ebba:	test   BYTE PTR [esi-0x10],ah
  41ebbd:	test   eax,0x641ca60d
  41ebc2:	loop   0x41ebfe
  41ebc4:	dec    eax
  41ebc5:	push   es
  41ebc6:	pop    ebp
  41ebc7:	and    ebx,edi
  41ebc9:	add    edi,DWORD PTR [eax-0x58]
  41ebcc:	fld    QWORD PTR [edx]
  41ebce:	icebp  
  41ebcf:	ror    edi,cl
  41ebd1:	xchg   edx,eax
  41ebd2:	mov    ah,0x26
  41ebd4:	call   0x8dd:0x2cb15608
  41ebdb:	or     dh,BYTE PTR [edx]
  41ebdd:	outs   dx,BYTE PTR ds:[esi]
  41ebde:	repnz aad 0xd2
  41ebe1:	loope  0x41ebdd
  41ebe3:	push   esp
  41ebe4:	js     0x41ec06
  41ebe6:	jo     0x41ec12
  41ebe8:	js     0x41ec0b
  41ebea:	sub    BYTE PTR [ecx-0x1185616],dh
  41ebf0:	push   edx
  41ebf1:	test   al,0x50
  41ebf3:	push   es
  41ebf4:	sbb    dh,dh
  41ebf6:	sar    BYTE PTR [edi-0x1a],1
  41ebf9:	push   ds
  41ebfa:	sbb    DWORD PTR [ebx],0xffffffac
  41ebfd:	ror    al,cl
  41ebff:	clc    
  41ec00:	into   
  41ec01:	lock imul ebp,DWORD PTR [edi],0xffffffea
  41ec05:	or     dh,BYTE PTR [eax-0x13]
  41ec08:	push   ecx
  41ec09:	in     al,0xeb
  41ec0b:	and    DWORD PTR [esi],ebx
  41ec0d:	iret   
  41ec0e:	aaa    
  41ec0f:	lods   eax,DWORD PTR ds:[esi]
  41ec10:	in     eax,0xfa
  41ec12:	test   eax,0xe6c1fb9b
  41ec17:	es mov edi,0xb172ccb3
  41ec1d:	mov    eax,ds:0x3d7ea2fe
  41ec22:	jge    0x41ec6e
  41ec24:	js     0x41ebc1
  41ec26:	mov    ds:0x198518b,al
  41ec2b:	add    al,BYTE PTR [ebx]
  41ec2d:	xor    bl,BYTE PTR [ecx+0x6c]
  41ec30:	aad    0x1
  41ec32:	test   al,0x73
  41ec34:	push   cs
  41ec35:	fwait
  41ec36:	add    al,0xe9
  41ec38:	js     0x41ec29
  41ec3a:	mov    ebx,0x9557dd9c
  41ec3f:	fidiv  DWORD PTR [edi+0x1f8ab49a]
  41ec45:	xchg   ebx,eax
  41ec46:	add    al,0x4c
  41ec48:	mov    ebx,DWORD PTR [eax]
  41ec4a:	dec    edi
  41ec4b:	sbb    esp,esp
  41ec4d:	jg     0x41ec6a
  41ec4f:	sbb    ebp,DWORD PTR [esi+esi*8-0x64b3a4f5]
  41ec56:	test   al,0x35
  41ec58:	test   al,0x1e
  41ec5a:	and    al,0xd8
  41ec5c:	and    esi,DWORD PTR [ecx+0x4b1292f6]
  41ec62:	sbb    al,BYTE PTR ds:0xcd54f733
  41ec68:	out    0x16,eax
  41ec6a:	jge    0x41ec58
  41ec6c:	(bad)  
  41ec6e:	add    eax,eax
  41ec70:	sub    ebx,DWORD PTR [esi]
  41ec72:	shl    BYTE PTR [eax+eiz*2+0x2b74a581],0x72
  41ec7a:	inc    edi
  41ec7b:	push   es
  41ec7c:	push   edi
  41ec7d:	and    DWORD PTR [eax],edi
  41ec7f:	aad    0x86
  41ec81:	cld    
  41ec82:	mov    dl,0x91
  41ec84:	(bad)  
  41ec85:	(bad)  
  41ec86:	sahf   
  41ec87:	mov    al,ds:0x722b0cb7
  41ec8c:	lahf   
  41ec8d:	and    bl,BYTE PTR [edi+0x7378b311]
  41ec93:	loope  0x41ecfb
  41ec95:	dec    ebx
  41ec96:	adc    BYTE PTR [ebp+eiz*4-0x7b],dh
  41ec9a:	sbb    bh,BYTE PTR [ebx-0x587181f9]
  41eca0:	fnstsw WORD PTR [ebx-0x4857ed20]
  41eca6:	(bad)  
  41eca7:	sti    
  41eca8:	fimul  WORD PTR [esi+0x69]
  41ecab:	jl     0x41ec54
  41ecad:	pop    ebx
  41ecae:	cmp    DWORD PTR [edi],edx
  41ecb0:	leave  
  41ecb1:	adc    ebp,esi
  41ecb3:	mov    WORD PTR [ebx],ss
  41ecb5:	sti    
  41ecb6:	mov    esp,0xfbf396b6
  41ecbb:	dec    esi
  41ecbc:	jnp    0x41ecde
  41ecbe:	adc    al,0xcf
  41ecc0:	lahf   
  41ecc1:	mov    edi,0x3532d191
  41ecc6:	jge    0x41ec66
  41ecc8:	test   BYTE PTR [esi],ch
  41ecca:	out    0xb0,eax
  41eccc:	leave  
  41eccd:	ds dec ecx
  41eccf:	outs   dx,BYTE PTR ds:[esi]
  41ecd0:	jb     0x41ed1c
  41ecd2:	cmp    BYTE PTR [eax-0x31ba14],ah
  41ecd8:	mov    ebx,0x66913bc1
  41ecdd:	and    esp,ebx
  41ecdf:	ror    cl,cl
  41ece1:	addr16 dec esi
  41ece3:	clc    
  41ece4:	fwait
  41ece5:	ret    
  41ece6:	jne    0x41ecd4
  41ece8:	jmp    0x41ecd8
  41ecea:	test   DWORD PTR [esi-0xa],esi
  41eced:	hlt    
  41ecee:	pavgw  mm5,mm7
  41ecf1:	aas    
  41ecf2:	xor    bl,BYTE PTR [ebp+0x39]
  41ecf5:	mov    ds:0xe8f2c620,eax
  41ecfa:	dec    ecx
  41ecfb:	adc    eax,0x43108a94
  41ed00:	adc    cl,0x14
  41ed03:	mov    al,0x84
  41ed05:	or     ah,BYTE PTR [edi+0x48c7b9a9]
  41ed0b:	mov    ebx,DWORD PTR es:0xcdec9a0d
  41ed12:	test   al,0xd8
  41ed14:	sbb    dl,BYTE PTR [edx+0x233a9001]
  41ed1a:	(bad)
  41ed1d:	pop    ebx
  41ed1e:	stos   BYTE PTR es:[edi],al
  41ed1f:	les    ebx,FWORD PTR [ebp-0x209130bf]
  41ed25:	shr    edx,1
  41ed27:	inc    ebx
  41ed28:	fwait
  41ed29:	call   0x7f54:0x8409c232
  41ed30:	xchg   DWORD PTR ss:[ecx+edx*8+0x78],ebx
  41ed35:	xlat   BYTE PTR ds:[ebx]
  41ed36:	mov    BYTE PTR [edx],dh
  41ed38:	sub    al,0x8d
  41ed3a:	bound  eax,QWORD PTR [ecx]
  41ed3c:	es jp  0x41ed96
  41ed3f:	pop    esp
  41ed40:	fimul  WORD PTR [eax+0x4a]
  41ed43:	sub    eax,0x5b697772
  41ed48:	enter  0xc08c,0x4e
  41ed4c:	push   ecx
  41ed4d:	adc    edi,DWORD PTR [edi+0x61]
  41ed50:	ret    
  41ed51:	mov    eax,0x2e70d7a5
  41ed56:	push   ebx
  41ed57:	push   esi
  41ed58:	xchg   ebp,eax
  41ed59:	popa   
  41ed5a:	shl    BYTE PTR [ebx],1
  41ed5c:	test   al,0x8f
  41ed5e:	fmul   st(5),st
  41ed60:	mov    al,ds:0x77ae4c19
  41ed65:	adc    DWORD PTR [ebx+0x57eee353],ebp
  41ed6b:	pop    esi
  41ed6c:	cmp    eax,0xa6b36f8c
  41ed71:	icebp  
  41ed72:	inc    esi
  41ed73:	dec    edi
  41ed74:	aaa    
  41ed75:	mov    ds:0x90a36023,eax
  41ed7a:	pop    ecx
  41ed7b:	jecxz  0x41ed95
  41ed7d:	(bad)  
  41ed7e:	jp     0x41ed01
  41ed80:	jp     0x41ed70
  41ed82:	int    0xdc
  41ed84:	lods   al,BYTE PTR ds:[esi]
  41ed85:	lea    edi,[esi-0x20]
  41ed88:	lea    ebp,cs:[esp+eax*2-0x1e3fc510]
  41ed90:	pop    edi
  41ed91:	ficom  DWORD PTR [edi]
  41ed93:	dec    edi
  41ed94:	out    0xdf,al
  41ed96:	ds jl  0xd2968dc8
  41ed9d:	jae    0x41edd4
  41ed9f:	in     al,dx
  41eda0:	xor    eax,DWORD PTR [esi-0x9866266]
  41eda6:	mov    al,ds:0x7d65af37
  41edab:	fbstp  TBYTE PTR [ebx-0x40]
  41edae:	sub    eax,edi
  41edb0:	cs push ebp
  41edb2:	ss push 0x4cff0504
  41edb8:	jbe    0x41ee39
  41edba:	(bad)  
  41edbb:	mov    esi,0x1a43fb85
  41edc0:	retf   
  41edc1:	sbb    ebp,esp
  41edc3:	xor    al,0x80
  41edc5:	mov    ch,0x86
  41edc7:	adc    edx,esi
  41edc9:	cmp    al,0x30
  41edcb:	leave  
  41edcc:	nop
  41edcd:	aad    0x6c
  41edcf:	lock jmp 0xca94:0xda54bb89
  41edd7:	cdq    
  41edd8:	nop
  41edd9:	jae    0x41edeb
  41eddb:	jmp    0x41ee53
  41eddd:	das    
  41edde:	call   0x88ce:0xa2a15379
  41ede5:	inc    esi
  41ede6:	xchg   edx,eax
  41ede7:	ss ins BYTE PTR es:[edi],dx
  41ede9:	mov    ebp,ecx
  41edeb:	push   cs
  41edec:	(bad)  
  41eded:	cli    
  41edee:	or     DWORD PTR [edi+0x5f],ecx
  41edf1:	push   edx
  41edf2:	push   0x1de32f15
  41edf7:	stc    
  41edf8:	xchg   esi,eax
  41edf9:	mov    bh,0x83
  41edfb:	cdq    
  41edfc:	dec    edi
  41edfd:	scas   al,BYTE PTR es:[edi]
  41edfe:	mov    BYTE PTR [esi-0x184f452b],dh
  41ee04:	ret    
  41ee05:	xor    BYTE PTR [ebx+0x4a],bh
  41ee08:	fiadd  DWORD PTR [eax]
  41ee0a:	sahf   
  41ee0b:	repnz push eax
  41ee0d:	add    BYTE PTR [eax],al
  41ee0f:	add    BYTE PTR [eax],al
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	add    ecx,DWORD PTR [edi]
  41ee20:	mov    al,0xea
  41ee22:	repz push 0x4f30001
  41ee28:	add    BYTE PTR [eax],al
  41ee2a:	in     al,dx
  41ee2b:	es mov esi,0xe5a1cedd
  41ee31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee32:	(bad)  
  41ee33:	je     0x41ee15
  41ee35:	add    ebx,DWORD PTR [ebx+edi*1+0x4beb2d9e]
  41ee3c:	sbb    al,BYTE PTR [ecx-0x75]
  41ee3f:	in     al,0xdc
  41ee41:	cmp    DWORD PTR [eax-0x1ae3671e],0x4a
  41ee48:	in     eax,0xc2
  41ee4a:	rcr    DWORD PTR [eax],cl
  41ee4c:	sub    DWORD PTR [ecx-0x9988dbb],ebp
  41ee52:	pop    edi
  41ee53:	jmp    0x41ee30
  41ee55:	sbb    al,0xed
  41ee57:	sbb    eax,0x1414896e
  41ee5c:	inc    edi
  41ee5d:	int3   
  41ee5e:	(bad)  
  41ee5f:	retf   0x42ed
  41ee62:	sbb    edi,DWORD PTR [ebp+eax*2+0x55]
  41ee66:	pop    edx
  41ee67:	push   esi
  41ee68:	cmp    BYTE PTR [eax-0x479df64a],ch
  41ee6e:	xchg   esi,eax
  41ee6f:	mov    ah,0x2f
  41ee71:	or     dl,BYTE PTR [ebx-0x36]
  41ee74:	cmp    bh,BYTE PTR [ebx]
  41ee76:	dec    esi
  41ee77:	inc    edx
  41ee78:	out    0x5a,eax
  41ee7a:	inc    esp
  41ee7b:	int    0xab
  41ee7d:	push   esi
  41ee7e:	stos   BYTE PTR es:[edi],al
  41ee7f:	pop    ss
  41ee80:	rol    DWORD PTR [ecx+0x48],0x5f
  41ee84:	pop    edx
  41ee85:	mov    esp,edi
  41ee87:	call   0x7e05:0xb7143ce
  41ee8e:	fdivr  DWORD PTR [edi-0x2612291e]
  41ee94:	mov    ah,0x60
  41ee96:	in     eax,dx
  41ee97:	jns    0x41eede
  41ee99:	mov    ch,0x9d
  41ee9b:	sar    DWORD PTR [ecx-0x30],0xe
  41ee9f:	out    dx,al
  41eea0:	push   eax
  41eea1:	mov    al,ds:0xeb7bab00
  41eea6:	repnz sbb esp,ecx
  41eea9:	(bad)  
  41eeaa:	(bad)  
  41eeab:	xchg   ebp,eax
  41eeac:	cmp    eax,0x7b80ea21
  41eeb1:	inc    esi
  41eeb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb3:	sbb    BYTE PTR [edi-0x7c],ch
  41eeb6:	ret    0xe80a
  41eeb9:	xchg   esi,eax
  41eeba:	sti    
  41eebb:	xlat   BYTE PTR ds:[ebx]
  41eebc:	test   eax,0x4db945
  41eec1:	dec    edx
  41eec2:	inc    ebx
  41eec3:	push   0x64d1ec3
  41eec8:	shl    DWORD PTR [ebx-0x16dc9217],1
  41eece:	stos   DWORD PTR es:[edi],eax
  41eecf:	test   BYTE PTR [edi+0x61],bh
  41eed2:	frstor [edx+0x6d4bae1c]
  41eed8:	imul   esi,DWORD PTR [edi+eiz*4+0x61],0x774568ce
  41eee0:	rol    BYTE PTR [edx+0x77],1
  41eee3:	add    eax,0x3b8b11b3
  41eee8:	or     al,0xd6
  41eeea:	pop    eax
  41eeeb:	or     eax,0x49880cec
  41eef0:	and    al,0x73
  41eef2:	je     0x41ef0c
  41eef4:	dec    esi
  41eef5:	inc    eax
  41eef6:	div    dl
  41eef8:	cmc    
  41eef9:	int    0x14
  41eefb:	mov    edi,DWORD PTR [ebx-0x44]
  41eefe:	pop    esi
  41eeff:	inc    ecx
  41ef00:	mov    BYTE PTR [esi],ah
  41ef02:	jg     0x41eea2
  41ef04:	mov    eax,0x539a17bc
  41ef09:	dec    esp
  41ef0a:	pushf  
  41ef0b:	stos   DWORD PTR es:[edi],eax
  41ef0c:	or     edx,esi
  41ef0e:	adc    dl,BYTE PTR [eax-0x7b73203]
  41ef14:	xchg   BYTE PTR [esi+0x2bfa7619],bh
  41ef1a:	call   0x9045cf25
  41ef1f:	mov    BYTE PTR [eax+0x1e],dl
  41ef22:	test   al,0x2
  41ef24:	add    bl,0x25
  41ef27:	mov    ds:0x6e5edee1,al
  41ef2c:	bound  edi,QWORD PTR ds:0x6e683124
  41ef32:	jbe    0x41eecd
  41ef34:	leave  
  41ef35:	pushf  
  41ef36:	and    edx,DWORD PTR [ecx+0x166a7316]
  41ef3c:	(bad)  
  41ef3d:	and    eax,0x70a01e82
  41ef42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef43:	and    dl,bh
  41ef45:	inc    ebx
  41ef46:	(bad)  
  41ef47:	push   ds
  41ef48:	dec    edi
  41ef49:	nop
  41ef4a:	adc    al,0x3
  41ef4c:	sar    edi,0x13
  41ef4f:	clc    
  41ef50:	shl    BYTE PTR [edi+0x47],cl
  41ef53:	(bad)  
  41ef54:	cwde   
  41ef55:	dec    DWORD PTR [ecx]
  41ef57:	cmp    al,0xfb
  41ef59:	inc    esp
  41ef5a:	push   ebx
  41ef5b:	les    edx,FWORD PTR [edx+0x2d]
  41ef5e:	mov    ebx,0x47f97bf8
  41ef63:	imul   esi,DWORD PTR [eax+0x2e],0x7f
  41ef67:	out    dx,al
  41ef68:	outs   dx,DWORD PTR ds:[esi]
  41ef69:	lods   eax,DWORD PTR ds:[esi]
  41ef6a:	push   es
  41ef6b:	imul   BYTE PTR [edx-0x675e8e2c]
  41ef71:	mov    ds:0x58d2484,eax
  41ef76:	xchg   edi,eax
  41ef77:	mov    eax,ds:0xe7854bc4
  41ef7c:	in     al,0x9a
  41ef7e:	repnz cs pop esp
  41ef81:	cmc    
  41ef82:	mov    eax,0x72c60fe7
  41ef87:	or     dh,dh
  41ef89:	dec    edi
  41ef8a:	shl    ch,0x5a
  41ef8d:	ins    BYTE PTR es:[edi],dx
  41ef8e:	add    DWORD PTR [eax+0x6b],eax
  41ef91:	add    bh,BYTE PTR [edx-0x4b9b60b9]
  41ef97:	xchg   BYTE PTR [edi+0x7b],ah
  41ef9a:	adc    eax,0x8254f157
  41ef9f:	inc    ebp
  41efa0:	sar    BYTE PTR [edi],1
  41efa2:	les    ecx,FWORD PTR [ebx]
  41efa4:	dec    ecx
  41efa5:	xchg   ebp,eax
  41efa6:	ins    DWORD PTR es:[edi],dx
  41efa7:	ficom  DWORD PTR ds:0x6e11c3eb
  41efad:	cmp    bh,dh
  41efaf:	cmp    dh,ch
  41efb1:	daa    
  41efb2:	enter  0x9b31,0x8c
  41efb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb7:	adc    BYTE PTR [ebp-0x7e],dh
  41efba:	dec    al
  41efbc:	adc    ah,dh
  41efbe:	nop
  41efbf:	push   edx
  41efc0:	sbb    al,0xb8
  41efc2:	pop    eax
  41efc3:	call   0xe288f2f0
  41efc8:	push   0x415f7b5d
  41efcd:	mov    cl,0x75
  41efcf:	dec    ebp
  41efd0:	xlat   BYTE PTR ds:[ebx]
  41efd1:	dec    eax
  41efd2:	(bad)  
  41efd3:	jne    0x41eff3
  41efd5:	sub    DWORD PTR [eax],edx
  41efd7:	dec    ebx
  41efd8:	jbe    0x41efac
  41efda:	push   edi
  41efdb:	ss xchg ebx,eax
  41efdd:	cmp    DWORD PTR [ecx-0xc],eax
  41efe0:	sub    eax,0x808bd128
  41efe5:	push   esp
  41efe6:	jno    0x41f003
  41efe8:	popf   
  41efe9:	call   0xa095:0xc4669d39
  41eff0:	push   0x61cb6b4
  41eff5:	push   edx
  41eff6:	les    edi,FWORD PTR [edx+edi*4]
  41eff9:	cmp    al,0x50
  41effb:	jecxz  0x41f042
  41effd:	je     0x41f032
  41efff:	mov    ds:0xcdd16fab,eax
  41f004:	gs sti 
  41f006:	mov    ds,WORD PTR [ecx]
  41f008:	sub    eax,DWORD PTR [edx]
  41f00a:	popa   
  41f00b:	sbb    BYTE PTR [ebx-0x70],ch
  41f00e:	push   es
  41f00f:	push   es
  41f010:	ret    
  41f011:	movd   DWORD PTR [edx],mm7
  41f014:	pop    ds
  41f015:	and    BYTE PTR [edx],0x31
  41f018:	mov    al,ch
  41f01a:	mov    ecx,0x6a51dfd6
  41f01f:	sub    edx,DWORD PTR [edx-0x56c8821f]
  41f025:	pop    esi
  41f026:	stc    
  41f027:	mov    ds:0xc0541e7d,al
  41f02c:	xor    ah,0xc
  41f02f:	enter  0x3a0d,0xd7
  41f033:	clc    
  41f034:	stc    
  41f035:	popa   
  41f036:	jno    0x41f00b
  41f038:	cdq    
  41f039:	mov    ds:0xa6c6738a,eax
  41f03e:	(bad)  
  41f03f:	push   ebp
  41f040:	xor    eax,0xfc1f4a78
  41f045:	sti    
  41f046:	xchg   esp,eax
  41f047:	jne    0x41f082
  41f049:	sti    
  41f04a:	mov    ebp,DWORD PTR [ebx+0x7a]
  41f04d:	xchg   ecx,eax
  41f04e:	sbb    esi,DWORD PTR [ecx-0x40c84a52]
  41f054:	into   
  41f055:	push   ecx
  41f056:	popf   
  41f057:	mov    fs,ebp
  41f059:	jp     0x41f018
  41f05b:	cmp    DWORD PTR [ebp+0x9],edi
  41f05e:	jp     0x41efec
  41f060:	ins    DWORD PTR es:[edi],dx
  41f061:	out    dx,al
  41f062:	jno    0x41f078
  41f064:	imul   edx,DWORD PTR [edx],0x25ca1025
  41f06a:	into   
  41f06b:	sar    BYTE PTR gs:[ebx-0xadd4df9],cl
  41f072:	ds xor dh,0xb2
  41f076:	jg     0x41f043
  41f078:	mov    cl,0x1f
  41f07a:	add    BYTE PTR [edi-0x5300b713],bl
  41f080:	dec    edx
  41f081:	pop    esi
  41f082:	xchg   esp,eax
  41f083:	daa    
  41f084:	sub    dl,ah
  41f086:	pop    ebx
  41f087:	push   edi
  41f088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f089:	div    DWORD PTR [edx+0x2d]
  41f08c:	out    dx,al
  41f08d:	mov    edx,0xbe7c2f5d
  41f092:	jns    0x41f0e8
  41f094:	add    bh,BYTE PTR [ebx-0x7]
  41f097:	mov    ebp,0x2f60dc43
  41f09c:	adc    al,BYTE PTR [ecx+0xd897505]
  41f0a2:	jnp    0x41f0dc
  41f0a4:	inc    ebp
  41f0a5:	fcom   DWORD PTR [ecx-0x2f]
  41f0a8:	jb     0x41f0a1
  41f0aa:	ja     0x41f0fc
  41f0ac:	imul   esi,ebp,0xd5f2f067
  41f0b2:	xor    edi,DWORD PTR [ebx]
  41f0b4:	and    BYTE PTR [edi-0x37],0x3
  41f0b8:	jae    0x41f0c8
  41f0ba:	adc    esp,esi
  41f0bc:	cmp    al,0x12
  41f0be:	rcl    DWORD PTR [esi-0x2e],0x59
  41f0c2:	pop    ds
  41f0c3:	push   ss
  41f0c4:	mov    bh,0x0
  41f0c6:	cwde   
  41f0c7:	add    BYTE PTR [ecx],cl
  41f0c9:	and    ebx,DWORD PTR [edi]
  41f0cb:	div    eax
  41f0cd:	and    esi,edi
  41f0cf:	loopne 0x41f078
  41f0d1:	sbb    DWORD PTR [ecx-0x5d],0xffffffc9
  41f0d5:	dec    esi
  41f0d6:	or     ch,BYTE PTR [edi]
  41f0d8:	(bad)  
  41f0d9:	loope  0x41f140
  41f0db:	ret    0xb38a
  41f0de:	dec    esi
  41f0df:	and    bl,BYTE PTR [ebx]
  41f0e1:	icebp  
  41f0e2:	outs   dx,BYTE PTR ds:[esi]
  41f0e3:	cmc    
  41f0e4:	dec    ebp
  41f0e5:	leave  
  41f0e6:	out    0x6c,al
  41f0e8:	cmp    BYTE PTR [esi+0x22],dl
  41f0eb:	xlat   BYTE PTR ds:[ebx]
  41f0ec:	pop    ss
  41f0ed:	sbb    eax,0xd4f5717f
  41f0f2:	sti    
  41f0f3:	popf   
  41f0f4:	inc    ecx
  41f0f5:	in     al,dx
  41f0f6:	xchg   esi,eax
  41f0f7:	ret    0x3c98
  41f0fa:	cli    
  41f0fb:	push   edx
  41f0fc:	call   0x3ffd:0xedc917ac
  41f103:	push   esi
  41f104:	and    eax,0x14fc80c
  41f109:	and    dh,BYTE PTR [ecx+esi*1+0x4f247f7c]
  41f110:	sbb    al,BYTE PTR ds:0x2b53ccb7
  41f116:	lahf   
  41f117:	(bad)  
  41f118:	jmp    0x41f12f
  41f11a:	sbb    dh,BYTE PTR [edi-0x17]
  41f11d:	aas    
  41f11e:	dec    edx
  41f11f:	dec    edi
  41f120:	sbb    ecx,eax
  41f122:	imul   DWORD PTR [esi]
  41f124:	in     al,0xbe
  41f126:	fadd   DWORD PTR [ebx-0x6c68c763]
  41f12c:	shl    DWORD PTR [edx-0x4e],cl
  41f12f:	int    0xe3
  41f131:	dec    ebx
  41f132:	adc    BYTE PTR [esi-0x7d2656de],bh
  41f138:	in     al,0x3f
  41f13a:	int3   
  41f13b:	pop    ebx
  41f13c:	pop    edi
  41f13d:	adc    al,0xa3
  41f13f:	outs   dx,DWORD PTR ds:[esi]
  41f140:	cmp    edx,esp
  41f142:	xchg   edi,eax
  41f143:	mov    al,0x6a
  41f145:	ins    BYTE PTR es:[edi],dx
  41f146:	pop    ebx
  41f147:	inc    ebx
  41f148:	sub    DWORD PTR [ebx-0x2e6406ad],0x19
  41f14f:	clc    
  41f150:	push   edi
  41f151:	(bad)  [eax+0x6f]
  41f154:	cwde   
  41f155:	jp     0x41f1c0
  41f157:	pop    ebp
  41f158:	add    DWORD PTR [eax-0x62],ecx
  41f15b:	fsub   QWORD PTR [esi]
  41f15d:	std    
  41f15e:	lea    ecx,[edx+0x7d233c44]
  41f164:	sbb    al,0x60
  41f166:	test   DWORD PTR [ecx-0x22],edx
  41f169:	cmp    bh,cl
  41f16b:	ret    0x7cd3
  41f16e:	adc    edi,DWORD PTR [esi]
  41f170:	fwait
  41f171:	std    
  41f172:	fadd   QWORD PTR [ebp-0x23]
  41f175:	cmp    ah,BYTE PTR fs:[edi+esi*4+0x5a0f6f9b]
  41f17d:	ficom  DWORD PTR [edx]
  41f17f:	loope  0x41f119
  41f181:	(bad)  
  41f182:	stc    
  41f183:	and    dh,BYTE PTR [ecx]
  41f185:	dec    esi
  41f186:	jmp    0x3f24ee94
  41f18b:	pop    ecx
  41f18c:	xor    BYTE PTR [ebx-0x19525745],0xf3
  41f193:	sbb    ah,BYTE PTR [esi]
  41f195:	mov    cl,0x26
  41f197:	loopne 0x41f1d6
  41f199:	adc    al,0xe3
  41f19b:	mov    ch,0xa1
  41f19d:	jbe    0x41f143
  41f19f:	sub    esi,DWORD PTR [edx+0x6b2ce8b2]
  41f1a5:	push   edx
  41f1a6:	add    eax,0xe8d0b164
  41f1ab:	pop    ss
  41f1ac:	xor    eax,0xf3c5676a
  41f1b1:	cmp    edx,DWORD PTR [edx]
  41f1b3:	ja     0x41f1ac
  41f1b5:	ss (bad) 
  41f1b7:	lods   al,BYTE PTR ds:[esi]
  41f1b8:	int3   
  41f1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ba:	dec    ebp
  41f1bb:	mov    bh,0xd
  41f1bd:	push   esi
  41f1be:	adc    BYTE PTR [ebx],dh
  41f1c0:	jae    0x41f1b9
  41f1c2:	dec    esi
  41f1c3:	icebp  
  41f1c4:	xor    BYTE PTR ds:0x9ea938b6,bh
  41f1ca:	call   edx
  41f1cc:	cdq    
  41f1cd:	xchg   edi,eax
  41f1ce:	sbb    al,0x25
  41f1d0:	push   ebx
  41f1d1:	sub    DWORD PTR [esi],ebx
  41f1d3:	test   DWORD PTR [ebp-0x3422a2b0],ebx
  41f1d9:	dec    edx
  41f1da:	push   esi
  41f1db:	pop    esp
  41f1dc:	and    ah,BYTE PTR [esi-0x635295d4]
  41f1e2:	stos   DWORD PTR es:[edi],eax
  41f1e3:	cmp    BYTE PTR ds:0x97b38976,ah
  41f1e9:	movq   mm7,mm0
  41f1ec:	sub    ch,BYTE PTR [edi-0x2c]
  41f1ef:	fldl2t 
  41f1f1:	inc    ebp
  41f1f2:	pop    ds
  41f1f3:	mov    eax,0xe6c70eb2
  41f1f8:	outs   dx,DWORD PTR ds:[esi]
  41f1f9:	loope  0x41f1ca
  41f1fb:	or     al,0x1f
  41f1fd:	dec    ebp
  41f1fe:	and    al,0x7c
  41f200:	cmp    dh,BYTE PTR [edx-0x6be7c73e]
  41f206:	iret   
  41f207:	mov    dl,BYTE PTR [esi-0x6]
  41f20a:	(bad)  
  41f20b:	xchg   ecx,eax
  41f20c:	xchg   esp,eax
  41f20d:	into   
  41f20e:	push   esp
  41f20f:	inc    ecx
  41f210:	xchg   edx,eax
  41f211:	pushf  
  41f212:	push   edi
  41f213:	xchg   cl,bh
  41f215:	inc    ecx
  41f216:	es hlt 
  41f218:	sahf   
  41f219:	ret    
  41f21a:	pop    edx
  41f21b:	imul   DWORD PTR [ebx+0x4dafea7c]
  41f221:	push   edi
  41f222:	fisub  DWORD PTR [esp+eiz*4+0xc4c6355]
  41f229:	inc    edx
  41f22a:	enter  0xd925,0x6f
  41f22e:	imul   eax,DWORD PTR [eax-0x2c04b530],0x55
  41f235:	dec    esp
  41f236:	cs loope 0x41f278
  41f239:	mov    ecx,0x235731a2
  41f23e:	loop   0x41f273
  41f240:	fldenv [edi+ecx*8+0x2a]
  41f244:	mov    esi,DWORD PTR [esi+0xbcc307c]
  41f24a:	mov    ebx,0x1bd346a6
  41f24f:	test   DWORD PTR ds:0x4c90578b,ecx
  41f255:	fs mov bh,0xc1
  41f258:	mov    cs,WORD PTR [esi+0x2f6e5cb1]
  41f25e:	fwait
  41f25f:	cmp    ah,BYTE PTR [esi]
  41f261:	outs   dx,BYTE PTR ds:[esi]
  41f262:	mov    esp,0x5f119d0
  41f267:	(bad)
  41f26a:	push   0x7f
  41f26c:	mov    ah,0xec
  41f26e:	stc    
  41f26f:	loop   0x41f2e0
  41f271:	xor    eax,0x1fbd8aa
  41f276:	and    al,0x3c
  41f278:	push   edi
  41f279:	sar    BYTE PTR [ebx],1
  41f27b:	test   eax,0x17c1ac10
  41f280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f281:	fimul  WORD PTR [esp+eax*8+0x196597da]
  41f288:	pusha  
  41f289:	aad    0x60
  41f28b:	sahf   
  41f28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28d:	and    esp,DWORD PTR [eax-0x7c3522da]
  41f293:	push   0x78
  41f295:	sbb    edx,esi
  41f297:	ds push ecx
  41f299:	in     eax,dx
  41f29a:	or     al,0xb6
  41f29c:	je     0x41f27f
  41f29e:	sub    ch,0xe1
  41f2a1:	push   ss
  41f2a2:	pop    ecx
  41f2a3:	stc    
  41f2a4:	(bad)  
  41f2a5:	fs sbb esp,0x8896d1f9
  41f2ac:	xlat   BYTE PTR ds:[ebx]
  41f2ad:	mov    bl,0x8
  41f2af:	add    esi,ebp
  41f2b1:	mov    ds:0x4c8f154a,al
  41f2b6:	inc    si
  41f2b8:	mov    ch,BYTE PTR [ecx]
  41f2ba:	mov    dh,0xd7
  41f2bc:	cmp    eax,0x6bdb4273
  41f2c1:	fsub   DWORD PTR [ebx-0x3e79d876]
  41f2c7:	mov    ds:0xf4714c2b,eax
  41f2cc:	enter  0xcbae,0xe2
  41f2d0:	cmp    DWORD PTR [ebx+0x7b1b6af4],edx
  41f2d6:	stos   BYTE PTR es:[edi],al
  41f2d7:	and    ebx,DWORD PTR [ebx+ebp*4]
  41f2da:	mov    edi,0x96b22884
  41f2df:	sub    BYTE PTR [ecx-0x66234532],0xf3
  41f2e6:	sub    DWORD PTR [eax],0xffffffd4
  41f2e9:	std    
  41f2ea:	push   edi
  41f2eb:	jbe    0x41f2ea
  41f2ed:	jae    0x41f348
  41f2ef:	arpl   WORD PTR [ecx],cx
  41f2f1:	xor    BYTE PTR [edi-0xc939900],dl
  41f2f7:	lods   al,BYTE PTR ds:[esi]
  41f2f8:	xchg   esi,eax
  41f2f9:	aaa    
  41f2fa:	sbb    eax,0x4cd34946
  41f2ff:	(bad)  
  41f300:	mov    ds:0x84afb961,al
  41f305:	fcmovnb st,st(3)
  41f307:	pop    ebp
  41f308:	jl     0x41f2c9
  41f30a:	cmp    eax,0xba3230bc
  41f30f:	ret    
  41f310:	sbb    eax,0xd4850956
  41f315:	cmp    eax,0x76433022
  41f31a:	jbe    0x41f2ee
  41f31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f31d:	add    BYTE PTR [eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	and    BYTE PTR [esi-0x19be8ea5],0x6d
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    cl,bh
  41f33b:	add    DWORD PTR [edi-0xf],edx
  41f33e:	xor    edi,esi
  41f340:	mov    ah,0xe3
  41f342:	mov    bh,0x5b
  41f344:	and    eax,0x12e72ec3
  41f349:	fwait
  41f34a:	mov    ds:0xdd5a140,al
  41f34f:	aas    
  41f350:	mov    dh,0xac
  41f352:	popf   
  41f353:	jae    0x41f2ff
  41f355:	out    dx,al
  41f356:	mov    edi,0xca7ab174
  41f35b:	cmp    ebx,DWORD PTR [edx+0x37]
  41f35e:	aas    
  41f35f:	aad    0xb6
  41f361:	cs clc 
  41f363:	xchg   ebp,eax
  41f364:	dec    edx
  41f365:	xlat   BYTE PTR ds:[ebx]
  41f366:	lahf   
  41f367:	fimul  WORD PTR [esi+0x39]
  41f36a:	push   0x35
  41f36c:	sahf   
  41f36d:	or     DWORD PTR [edx+0x5a],ebx
  41f370:	add    ebx,ebx
  41f372:	dec    ecx
  41f373:	push   esp
  41f374:	fcomp  DWORD PTR [esi+0x536c3a61]
  41f37a:	in     al,0x13
  41f37c:	inc    edi
  41f37d:	iret   
  41f37e:	fndisi(8087 only) 
  41f380:	xor    BYTE PTR [ebx*2-0x6a6f9702],ah
  41f387:	xor    al,0x82
  41f389:	dec    ebp
  41f38a:	test   al,0x4d
  41f38c:	add    ah,BYTE PTR [edi]
  41f38e:	popf   
  41f38f:	scas   al,BYTE PTR es:[edi]
  41f390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f391:	mov    eax,ds:0x9a09ac99
  41f396:	wbinvd 
  41f398:	sbb    ebp,ecx
  41f39a:	xchg   edi,eax
  41f39b:	(bad)  
  41f39c:	nop
  41f39d:	call   0xf3a6:0x65dfd122
  41f3a4:	daa    
  41f3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a6:	adc    al,0xc1
  41f3a8:	mov    esp,0x6286d63e
  41f3ad:	int3   
  41f3ae:	ds mov ecx,0xa5b2fb3d
  41f3b4:	test   BYTE PTR [edx+0x3f],bh
  41f3b7:	inc    edi
  41f3b8:	pop    ss
  41f3b9:	mov    DWORD PTR [edx],eax
  41f3bb:	into   
  41f3bc:	xor    edi,ebx
  41f3be:	lods   eax,DWORD PTR ds:[esi]
  41f3bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c0:	sahf   
  41f3c1:	bts    DWORD PTR [edx],edi
  41f3c4:	das    
  41f3c5:	lds    ebp,FWORD PTR [ebx-0x1b]
  41f3c8:	sahf   
  41f3c9:	xlat   BYTE PTR ds:[ebx]
  41f3ca:	pop    ss
  41f3cb:	push   ebx
  41f3cc:	dec    esp
  41f3cd:	cdq    
  41f3ce:	jl     0x41f3f2
  41f3d0:	or     eax,0xee64639b
  41f3d5:	mov    eax,ds:0xd07b4786
  41f3da:	pop    ds
  41f3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3dc:	nop
  41f3dd:	(bad)  
  41f3df:	sbb    BYTE PTR [ebx+0x6f],bh
  41f3e2:	push   cs
  41f3e3:	cmp    BYTE PTR [eax+0x2b],bl
  41f3e6:	dec    ebp
  41f3e7:	mov    al,ds:0x6184dfbd
  41f3ec:	loopne 0x41f3ad
  41f3ee:	lock xlat BYTE PTR ds:[ebx]
  41f3f0:	xchg   edx,eax
  41f3f1:	clc    
  41f3f2:	sti    
  41f3f3:	pop    ds
  41f3f4:	fdivr  QWORD PTR [eax+edi*2+0x7b]
  41f3f8:	adc    al,0x16
  41f3fa:	sbb    cl,BYTE PTR [eax-0x40]
  41f3fd:	xchg   esp,eax
  41f3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ff:	loopne 0x41f47d
  41f401:	jmp    0x9dd5:0x230cd44e
  41f408:	out    dx,al
  41f409:	and    eax,0xb7eb0805
  41f40e:	es sti 
  41f410:	jb     0x41f39a
  41f412:	push   esi
  41f413:	repnz ds mov ecx,0xb2a407ed
  41f41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f41b:	jge    0x41f481
  41f41d:	dec    ebx
  41f41e:	pop    eax
  41f41f:	push   edx
  41f420:	fwait
  41f421:	shl    BYTE PTR [ebp-0x6b58847e],0x79
  41f428:	inc    eax
  41f429:	or     DWORD PTR [eax-0x6],0xffffff83
  41f42d:	lods   al,BYTE PTR ds:[esi]
  41f42e:	pushf  
  41f42f:	cdq    
  41f430:	fnstenv [ebp+0x6ac3bd7d]
  41f436:	dec    ebx
  41f437:	call   0x1218:0x35c620c6
  41f43e:	les    ebp,FWORD PTR ds:0xbab28c86
  41f444:	mov    ebp,0x80b2d3d7
  41f449:	outs   dx,DWORD PTR ds:[esi]
  41f44a:	enter  0xc403,0xf6
  41f44e:	mov    al,0x91
  41f450:	inc    ebx
  41f451:	xlat   BYTE PTR ds:[ebx]
  41f452:	inc    edi
  41f453:	mov    ch,0xfd
  41f455:	repz sar DWORD PTR [eax],cl
  41f458:	push   esi
  41f459:	jo     0x41f469
  41f45b:	test   al,0xeb
  41f45d:	adc    al,0xd0
  41f45f:	adc    DWORD PTR [ebx+0x2f2365e3],0x68
  41f466:	lea    ecx,[ecx]
  41f468:	stos   BYTE PTR es:[edi],al
  41f469:	add    BYTE PTR [edx-0x6887ce2a],cl
  41f46f:	xor    ah,ah
  41f471:	xor    ebp,DWORD PTR [ebx-0x2a]
  41f474:	(bad)  
  41f475:	outs   dx,DWORD PTR ds:[esi]
  41f476:	fscale 
  41f478:	sbb    al,0xcf
  41f47a:	cmp    BYTE PTR [eax+edi*4-0x5e309890],ch
  41f481:	fcomp  DWORD PTR [edx]
  41f483:	inc    esi
  41f484:	push   ds
  41f485:	mov    eax,ds:0xe951596e
  41f48a:	push   esp
  41f48b:	dec    ebp
  41f48c:	stos   DWORD PTR es:[edi],eax
  41f48d:	aaa    
  41f48e:	or     esp,0x40
  41f491:	lahf   
  41f492:	dec    esi
  41f493:	iret   
  41f494:	jge    0x41f4fa
  41f496:	and    al,ch
  41f498:	adc    eax,0x3cc5e64a
  41f49d:	aad    0x47
  41f49f:	mov    eax,0xa6623c34
  41f4a4:	jnp    0x41f4b1
  41f4a6:	xor    DWORD PTR [edi+0xf],esi
  41f4a9:	jb     0x41f4f4
  41f4ab:	mov    ds:0xb05af516,al
  41f4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b1:	rol    DWORD PTR [edi-0x6d],1
  41f4b4:	add    eax,0x9eedf582
  41f4b9:	xor    BYTE PTR [ecx-0x5c],0x7b
  41f4bd:	dec    eax
  41f4be:	xchg   ebp,eax
  41f4bf:	push   0xa015490c
  41f4c4:	ja     0x41f4bc
  41f4c6:	das    
  41f4c7:	dec    esi
  41f4c8:	(bad)  
  41f4c9:	cmp    al,al
  41f4cb:	add    esp,edi
  41f4cd:	shl    DWORD PTR [ebp-0x33d51374],cl
  41f4d3:	in     eax,0x65
  41f4d5:	sub    edx,ebx
  41f4d7:	cli    
  41f4d8:	call   0x43e5:0x549f1611
  41f4df:	out    dx,al
  41f4e0:	push   ecx
  41f4e1:	or     al,BYTE PTR [eax]
  41f4e3:	fs mov bl,0xf6
  41f4e6:	ins    BYTE PTR es:[edi],dx
  41f4e7:	or     DWORD PTR [esi],esp
  41f4e9:	fwait
  41f4ea:	xor    DWORD PTR [esi+0x46b1b207],edi
  41f4f0:	shr    cl,cl
  41f4f2:	test   DWORD PTR [ecx+0x59987aa4],ebp
  41f4f8:	test   eax,0xb3dcbf43
  41f4fd:	push   eax
  41f4fe:	adc    DWORD PTR [esp+ebp*2],eax
  41f501:	test   DWORD PTR [ecx],eax
  41f503:	js     0x41f48b
  41f505:	mov    edi,0x9e122ee1
  41f50a:	sar    DWORD PTR [ebx-0x717f4262],cl
  41f510:	or     eax,0xac179707
  41f515:	int    0xc1
  41f517:	mov    bl,cl
  41f519:	push   esi
  41f51a:	pop    edx
  41f51b:	dec    esp
  41f51c:	call   0x4ccaf8ed
  41f521:	xchg   edx,eax
  41f522:	xchg   edi,eax
  41f523:	ret    0xa55e
  41f526:	out    0xfc,al
  41f528:	mov    dl,0x4e
  41f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52b:	mov    bp,0x20a0
  41f52f:	mov    ds:0x2404873e,al
  41f534:	int    0x30
  41f536:	addr16 mov ecx,0x7c13d38e
  41f53c:	cwde   
  41f53d:	jno    0x41f510
  41f53f:	inc    ebx
  41f540:	mov    esi,0xbaa5da8d
  41f545:	rcl    DWORD PTR [edx+0x6c],0xc
  41f549:	dec    esp
  41f54a:	test   al,0x9b
  41f54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f54d:	ins    BYTE PTR es:[edi],dx
  41f54e:	xchg   BYTE PTR [ebx+0x8],bh
  41f551:	or     bl,bl
  41f553:	ins    BYTE PTR es:[edi],dx
  41f554:	xchg   ecx,eax
  41f555:	jb     0x41f4fa
  41f557:	cld    
  41f558:	xchg   esi,eax
  41f559:	enter  0x967a,0xdd
  41f55d:	div    DWORD PTR [ebx+0x7fd7558b]
  41f563:	sbb    al,0x55
  41f565:	mov    esp,0x39c58c21
  41f56a:	idiv   bl
  41f56c:	push   ebp
  41f56d:	out    dx,eax
  41f56e:	fucomip st,st(2)
  41f570:	ins    BYTE PTR es:[edi],dx
  41f571:	mov    ebx,DWORD PTR [edi+edx*8+0x4e60eb73]
  41f578:	push   0x50
  41f57a:	dec    edi
  41f57b:	mov    al,0x37
  41f57d:	sub    al,0xc1
  41f57f:	dec    eax
  41f580:	outs   dx,BYTE PTR ds:[esi]
  41f581:	test   al,0xe7
  41f583:	xchg   ecx,edx
  41f585:	out    0xb3,eax
  41f587:	or     al,0xc7
  41f589:	jmp    0x41f5f2
  41f58b:	xchg   esp,eax
  41f58c:	jne    0x41f54f
  41f58e:	scas   al,BYTE PTR es:[edi]
  41f58f:	jne    0x41f585
  41f591:	jbe    0x41f5ea
  41f593:	pop    ebp
  41f594:	(bad)
  41f599:	imul   ecx,DWORD PTR [eax+0x486d6b3e],0x99d0aa6e
  41f5a3:	ret    0xc3fe
  41f5a6:	pop    edi
  41f5a7:	data16 and BYTE PTR [ecx+0x2acdf30],dh
  41f5ae:	dec    esp
  41f5af:	(bad)  
  41f5b0:	out    0xbf,al
  41f5b2:	jl     0x41f59e
  41f5b4:	xor    edx,DWORD PTR [ebp+0x28d23f18]
  41f5ba:	out    dx,eax
  41f5bb:	pop    ebx
  41f5bc:	ret    
  41f5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5be:	sub    BYTE PTR [eax],bl
  41f5c0:	dec    ebp
  41f5c1:	sub    eax,0x525d8d36
  41f5c6:	jp     0x41f56b
  41f5c8:	jle    0x41f626
  41f5ca:	sti    
  41f5cb:	xchg   edi,eax
  41f5cc:	lock sti 
  41f5ce:	jnp    0x41f5f2
  41f5d0:	(bad)  
  41f5d1:	pop    eax
  41f5d2:	pop    eax
  41f5d3:	div    DWORD PTR [ecx+0x32cbdb76]
  41f5d9:	je     0x41f55f
  41f5db:	cmp    al,0xcb
  41f5dd:	sbb    eax,0x3a28e89e
  41f5e2:	lahf   
  41f5e3:	mov    bl,0x44
  41f5e5:	pop    edi
  41f5e6:	(bad)  
  41f5e7:	jl     0x41f60f
  41f5e9:	mov    bh,0x6
  41f5eb:	xchg   BYTE PTR [ebp+0x5f],bh
  41f5ee:	push   ebp
  41f5ef:	xchg   esp,eax
  41f5f0:	fstp   QWORD PTR [esi]
  41f5f2:	dec    edi
  41f5f3:	adc    DWORD PTR [ebp+0x1ddd0084],ecx
  41f5f9:	iret   
  41f5fa:	into   
  41f5fb:	cmp    dh,BYTE PTR [edi+eiz*1+0x5e569e7a]
  41f602:	mov    bp,0x2c04
  41f606:	loopne 0x41f645
  41f608:	fs push es
  41f60a:	adc    eax,0xf1708e9d
  41f60f:	inc    edx
  41f610:	int3   
  41f611:	pop    ebp
  41f612:	test   DWORD PTR ds:0x2dd89843,ebp
  41f618:	leave  
  41f619:	pop    ebp
  41f61a:	popa   
  41f61b:	xor    edx,edx
  41f61d:	retf   
  41f61e:	mov    dl,0x72
  41f620:	push   edi
  41f621:	loope  0x41f66a
  41f623:	arpl   WORD PTR [eax],bp
  41f625:	dec    eax
  41f626:	outs   dx,BYTE PTR ds:[esi]
  41f627:	jae    0x41f66a
  41f629:	adc    bl,ch
  41f62b:	push   edi
  41f62c:	fisub  WORD PTR [edi]
  41f62e:	pop    ds
  41f62f:	mov    dh,0xf9
  41f631:	ret    
  41f632:	enter  0x7616,0x72
  41f636:	cld    
  41f637:	add    dl,BYTE PTR [ebp+ecx*1+0x33]
  41f63b:	out    0xc1,eax
  41f63d:	loope  0x41f60f
  41f63f:	xchg   esi,eax
  41f640:	push   es
  41f641:	pop    eax
  41f642:	pusha  
  41f643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f644:	fcomp  QWORD PTR [ebx+0x6e]
  41f647:	adc    cl,BYTE PTR [eax]
  41f649:	pop    ebx
  41f64a:	or     BYTE PTR [eax+0x6c6f8db7],ah
  41f650:	(bad)  
  41f651:	jecxz  0x41f6b4
  41f653:	lods   al,BYTE PTR ds:[esi]
  41f654:	gs ja  0x41f637
  41f657:	mov    ebx,0xd52fc280
  41f65c:	mov    eax,0x8664f0a3
  41f661:	xor    al,0x9a
  41f663:	ret    0x580c
  41f666:	and    eax,0xeb98bcf9
  41f66b:	das    
  41f66c:	inc    edi
  41f66d:	popa   
  41f66e:	(bad)  
  41f66f:	pop    ebx
  41f670:	sub    DWORD PTR [ebx-0x40],ecx
  41f673:	ins    BYTE PTR es:[edi],dx
  41f674:	icebp  
  41f675:	sti    
  41f676:	xlat   BYTE PTR es:[ebx]
  41f678:	cmp    BYTE PTR [edx],bh
  41f67a:	aad    0xdf
  41f67c:	pop    es
  41f67d:	(bad)  
  41f67e:	xor    bh,ch
  41f680:	lds    ebp,FWORD PTR [ebx-0x6]
  41f683:	test   al,0x2e
  41f685:	jmp    0x804d4cbf
  41f68a:	cwde   
  41f68b:	sbb    ebp,DWORD PTR [eax-0x1ca9a4c0]
  41f691:	(bad)  
  41f692:	and    eax,0xd962fb9b
  41f697:	mov    al,ds:0x13031423
  41f69c:	pushf  
  41f69d:	push   ebp
  41f69e:	mov    edx,ebp
  41f6a0:	aas    
  41f6a1:	cwde   
  41f6a2:	xchg   ebx,eax
  41f6a3:	shl    DWORD PTR ds:0x3c286918,cl
  41f6a9:	(bad)  
  41f6ab:	xchg   BYTE PTR [ecx],cl
  41f6ad:	mov    bl,0x95
  41f6af:	scas   al,BYTE PTR es:[edi]
  41f6b0:	scas   al,BYTE PTR es:[edi]
  41f6b1:	push   ecx
  41f6b2:	pop    edi
  41f6b3:	pop    eax
  41f6b4:	test   eax,0x91376b38
  41f6b9:	int3   
  41f6ba:	pop    edx
  41f6bb:	enter  0xc962,0xd0
  41f6bf:	lea    ebp,[ecx-0x27]
  41f6c2:	fsubrp st(4),st
  41f6c4:	jne    0x41f719
  41f6c6:	repnz or cl,ch
  41f6c9:	or     DWORD PTR [ecx],0x95cc2dc6
  41f6cf:	adc    al,0xe4
  41f6d1:	fs sub al,0x54
  41f6d4:	in     al,0x9a
  41f6d6:	mov    ds:0x5009a7b3,al
  41f6db:	mov    ebp,0xc5b02002
  41f6e0:	repnz xchg edx,eax
  41f6e2:	bound  ebx,QWORD PTR [ebp-0x53f8adb3]
  41f6e8:	push   0xf6e10d85
  41f6ed:	cs sub edx,esi
  41f6f0:	into   
  41f6f1:	adc    eax,0x51919e00
  41f6f6:	loopne 0x41f6a2
  41f6f8:	in     al,0x6a
  41f6fa:	fisub  WORD PTR [eax+0x17]
  41f6fd:	push   ecx
  41f6fe:	push   edx
  41f6ff:	mov    ds:0x6e39bdfd,al
  41f704:	dec    DWORD PTR [ebx+eiz*8+0x37]
  41f708:	dec    esp
  41f709:	cmp    BYTE PTR [esi+0x75],0xc3
  41f70d:	rcl    DWORD PTR [eax+0x39efc064],cl
  41f713:	or     al,ch
  41f715:	addr16 test eax,0x8b6244d0
  41f71b:	dec    edi
  41f71c:	aas    
  41f71d:	popf   
  41f71e:	push   ss
  41f71f:	add    DWORD PTR [ebp-0x50],0x111d0a72
  41f726:	mov    edi,0x2bc34ed7
  41f72b:	sbb    dh,BYTE PTR [edi+ebx*4-0x33]
  41f72f:	int3   
  41f730:	jmp    0x41f70a
  41f732:	imul   esi,edi,0x4d2ca1e
  41f738:	mov    edi,0x237dd623
  41f73d:	fadd   DWORD PTR [eax]
  41f73f:	add    al,0xda
  41f741:	sti    
  41f742:	or     eax,0xf385b927
  41f747:	cmp    dl,ah
  41f749:	add    ah,BYTE PTR [ebx]
  41f74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74c:	mov    dh,0x2c
  41f74e:	dec    esi
  41f74f:	sbb    esp,edi
  41f751:	(bad)  
  41f752:	loopne 0x41f787
  41f754:	mov    cl,0xf
  41f756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f757:	bnd jmp 0xaa76f857
  41f75d:	(bad)  
  41f75e:	mov    ecx,0xa01a1ddf
  41f763:	pusha  
  41f764:	sbb    DWORD PTR [ecx-0x72],0xffffffcd
  41f768:	ja     0x41f70a
  41f76a:	mov    dx,di
  41f76d:	outs   dx,BYTE PTR ds:[esi]
  41f76e:	jne    0x41f7e9
  41f770:	mov    cl,0x1a
  41f772:	dec    edi
  41f773:	mov    DWORD PTR [ebp-0x4],edx
  41f776:	push   ecx
  41f777:	ins    BYTE PTR es:[edi],dx
  41f778:	push   esp
  41f779:	sahf   
  41f77a:	jae    0x41f7f2
  41f77c:	or     BYTE PTR [eax],ah
  41f77e:	add    BYTE PTR [ebp+0x1a],al
  41f781:	mov    ecx,0x4e49ce6e
  41f786:	fstp   st(2)
  41f788:	mov    edx,0x3bdbe1bc
  41f78d:	ror    DWORD PTR ds:0x86e9708e,1
  41f793:	pushf  
  41f794:	loopne 0x41f7fd
  41f796:	aaa    
  41f797:	jno    0x41f7b1
  41f799:	gs push esi
  41f79b:	and    ch,BYTE PTR [ecx+edx*8]
  41f79e:	mov    bh,0x2c
  41f7a0:	cmp    bl,BYTE PTR [esi-0x55]
  41f7a3:	out    dx,al
  41f7a4:	mov    WORD PTR [eax-0x67],ss
  41f7a7:	cmp    ebx,edx
  41f7a9:	and    ebp,edi
  41f7ab:	cmp    edi,DWORD PTR [edi+0x70889b11]
  41f7b1:	ds iret 
  41f7b3:	cmp    DWORD PTR [edx-0x1586a7ed],edx
  41f7b9:	outs   dx,DWORD PTR ds:[esi]
  41f7ba:	mov    ebx,0x8f06f8fa
  41f7bf:	test   eax,0x19924c94
  41f7c4:	aad    0xff
  41f7c6:	dec    esi
  41f7c7:	pop    eax
  41f7c8:	push   cs
  41f7c9:	(bad)  
  41f7ca:	sbb    al,0xc3
  41f7cc:	ret    0xa6c2
  41f7cf:	xchg   edi,eax
  41f7d0:	mov    edi,DWORD PTR [ebx]
  41f7d2:	add    DWORD PTR [ebx-0xb],ecx
  41f7d5:	fld    QWORD PTR [eax+edi*1]
  41f7d8:	push   edx
  41f7d9:	out    0xad,eax
  41f7db:	mov    ds:0xd2562e6e,al
  41f7e0:	xchg   edi,eax
  41f7e1:	jb     0x41f770
  41f7e3:	inc    ebx
  41f7e4:	mov    ds:0xd3407d1e,eax
  41f7e9:	sbb    cl,BYTE PTR ds:0x229c325e
  41f7ef:	aad    0x8a
  41f7f1:	xchg   edx,eax
  41f7f2:	jg     0x41f84e
  41f7f4:	xlat   BYTE PTR ds:[ebx]
  41f7f5:	jmp    0xe761:0xabc86426
  41f7fc:	jae    0x41f86e
  41f7fe:	push   ds
  41f7ff:	in     al,dx
  41f800:	arpl   WORD PTR [ebp-0x7],sp
  41f803:	push   cs
  41f804:	div    ah
  41f806:	mov    edx,0xd3f4828b
  41f80b:	leave  
  41f80c:	out    dx,eax
  41f80d:	jecxz  0x41f815
  41f80f:	popf   
  41f810:	xchg   ebp,eax
  41f811:	ror    DWORD PTR [ecx-0x1d],cl
  41f814:	sub    ebp,DWORD PTR [esi]
  41f816:	push   eax
  41f817:	pop    eax
  41f818:	push   0xd252c057
  41f81d:	sub    DWORD PTR [esi],esp
  41f81f:	and    eax,esp
  41f821:	leave  
  41f822:	sub    al,0x72
  41f824:	jnp    0x41f845
  41f826:	loope  0x41f82d
  41f828:	inc    esp
  41f829:	add    dl,bl
  41f82b:	xchg   ecx,eax
  41f82c:	pop    edx
  41f82d:	add    BYTE PTR [eax],al
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	call   0xd97d3a2f
  41f843:	jb     0x41f846
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [ebx+esi*2],cl
  41f84c:	fld    QWORD PTR [ecx+ebp*8-0xa]
  41f850:	pop    ebx
  41f851:	movnti DWORD PTR [edi+eax*4],ebx
  41f855:	jle    0x41f815
  41f857:	inc    ecx
  41f858:	js     0xa95704aa
  41f85e:	test   al,0xa5
  41f860:	clc    
  41f861:	rol    BYTE PTR [ecx],1
  41f863:	ret    
  41f864:	cs push cx
  41f867:	outs   dx,BYTE PTR ds:[esi]
  41f868:	and    al,0x24
  41f86a:	retf   0x9f75
  41f86d:	and    eax,0x68b1cc36
  41f872:	jmp    0xbade7391
  41f877:	sbb    eax,0x65ae78e1
  41f87c:	jne    0x9e533816
  41f882:	add    al,0xaa
  41f884:	add    bh,BYTE PTR [ebx+0x4]
  41f887:	addr16 icebp 
  41f889:	scas   eax,DWORD PTR es:[edi]
  41f88a:	lods   eax,DWORD PTR ds:[esi]
  41f88b:	leave  
  41f88c:	aas    
  41f88d:	ret    
  41f88e:	aam    0xe3
  41f890:	lock (bad) [ebp-0x28]
  41f894:	in     eax,0x2c
  41f896:	xchg   esp,eax
  41f897:	fucomip st,st(2)
  41f899:	push   0xffffffbc
  41f89b:	xor    DWORD PTR [ecx],0x39
  41f89e:	fwait
  41f89f:	scas   eax,DWORD PTR es:[edi]
  41f8a0:	sub    BYTE PTR [eax],0x6e
  41f8a3:	push   ebp
  41f8a4:	es ret 0x4ce8
  41f8a8:	dec    esi
  41f8a9:	int    0x55
  41f8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ac:	xchg   ecx,eax
  41f8ad:	fdivr  DWORD PTR [ebx+0x5243430c]
  41f8b3:	and    DWORD PTR [edi-0x221430bd],esi
  41f8b9:	adc    ebp,DWORD PTR fs:[edi+0x71]
  41f8bd:	fstp   st(3)
  41f8bf:	mov    edi,0xd89a94ae
  41f8c4:	xchg   DWORD PTR [ebp-0x4],ecx
  41f8c7:	push   eax
  41f8c8:	jp     0x41f8fb
  41f8ca:	adc    DWORD PTR [edi-0x5e],esi
  41f8cd:	mov    esp,0x620ec723
  41f8d2:	xor    bh,BYTE PTR [edi+edi*2+0x7f88bcfb]
  41f8d9:	ret    0xf3d1
  41f8dc:	ror    BYTE PTR [ecx+0x4c],1
  41f8df:	cmp    al,0x70
  41f8e1:	jle    0x41f864
  41f8e3:	jmp    0x5c6f:0xfc8bdc25
  41f8ea:	in     al,dx
  41f8eb:	les    ebp,FWORD PTR [edi+0x4af7e643]
  41f8f1:	(bad)  
  41f8f2:	fnstsw WORD PTR [edi+eax*8-0x413aebb0]
  41f8f9:	cmp    BYTE PTR [edi],bl
  41f8fb:	inc    eax
  41f8fc:	mov    eax,ds:0x32c06175
  41f901:	xor    ebp,DWORD PTR [esi+0x40da359e]
  41f907:	int3   
  41f908:	out    dx,al
  41f909:	dec    edi
  41f90a:	push   ss
  41f90b:	fs pop es
  41f90d:	cli    
  41f90e:	push   cs
  41f90f:	xor    BYTE PTR [edx],ah
  41f911:	es arpl cx,ax
  41f914:	(bad)  
  41f915:	pushf  
  41f916:	ret    0x1e6d
  41f919:	neg    BYTE PTR [ecx-0x5d]
  41f91c:	aad    0xb6
  41f91e:	mov    al,ds:0x1619e7e3
  41f923:	mov    ds:0x61d51e2,eax
  41f928:	inc    ecx
  41f929:	shl    BYTE PTR [ecx+0x66],1
  41f92c:	adc    esi,eax
  41f92e:	pop    edi
  41f92f:	nop
  41f930:	rcr    BYTE PTR [edi],1
  41f932:	xchg   edx,eax
  41f933:	adc    eax,0x52c68d5c
  41f938:	(bad)  
  41f939:	ds ins DWORD PTR es:[edi],dx
  41f93b:	dec    edi
  41f93c:	pushw  es
  41f93e:	and    esp,ebp
  41f940:	call   FWORD PTR [ebx]
  41f942:	mov    esi,0x1964ee0f
  41f947:	popf   
  41f948:	and    bl,BYTE PTR [ecx]
  41f94a:	fincstp 
  41f94c:	fisttp QWORD PTR ds:0x38dd58c8
  41f952:	pop    ebp
  41f953:	push   0x3f4ba52
  41f958:	jp     0x41f951
  41f95a:	push   esi
  41f95b:	iret   
  41f95c:	xchg   edi,eax
  41f95d:	jl     0x41f914
  41f95f:	(bad)  
  41f960:	in     al,0x20
  41f962:	cli    
  41f963:	push   eax
  41f964:	mov    esi,cs
  41f966:	push   ss
  41f967:	push   eax
  41f968:	xchg   ebp,eax
  41f969:	inc    edi
  41f96a:	ins    DWORD PTR es:[edi],dx
  41f96b:	je     0x41f93f
  41f96d:	cs xor eax,eax
  41f970:	inc    ebp
  41f971:	sti    
  41f972:	jg     0x41f94e
  41f974:	jae    0x41f90b
  41f976:	sbb    eax,0xc435c0e7
  41f97b:	shl    ebx,1
  41f97d:	shr    BYTE PTR [edx+eiz*8],cl
  41f980:	xor    esi,esp
  41f982:	sbb    ecx,DWORD PTR [ebp-0x447fbde4]
  41f988:	add    esp,edx
  41f98a:	out    dx,eax
  41f98b:	xor    dh,0xb9
  41f98e:	pop    edi
  41f98f:	pop    ecx
  41f990:	out    0x85,al
  41f992:	loope  0x41f990
  41f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f995:	retf   0xd8df
  41f998:	out    dx,eax
  41f999:	sub    esp,DWORD PTR [eax+edi*8+0x4f2aa715]
  41f9a0:	jp     0x41f961
  41f9a2:	sbb    dl,BYTE PTR [eax+0x36]
  41f9a5:	jnp    0x41f95b
  41f9a7:	or     DWORD PTR [esi-0x41],esp
  41f9aa:	cwde   
  41f9ab:	in     al,0xc4
  41f9ad:	int    0xcf
  41f9af:	add    ch,ah
  41f9b1:	mov    ebp,0xf5f13f0f
  41f9b6:	dec    edx
  41f9b7:	mov    eax,0x65873603
  41f9bc:	stos   DWORD PTR es:[edi],eax
  41f9bd:	mov    eax,ds:0xf32ce4f8
  41f9c2:	pop    edi
  41f9c3:	inc    eax
  41f9c4:	imul   esi,DWORD PTR [ebp+0x653a9ed1],0x969a9391
  41f9ce:	add    eax,0x7d924a62
  41f9d3:	cmp    dh,BYTE PTR [edi]
  41f9d5:	stos   DWORD PTR es:[edi],eax
  41f9d6:	and    BYTE PTR [edx-0x29d57319],dh
  41f9dc:	add    esi,DWORD PTR [eax-0x3e]
  41f9df:	pop    eax
  41f9e0:	out    dx,eax
  41f9e1:	sub    edx,DWORD PTR [edx]
  41f9e3:	jb     0x41f992
  41f9e5:	add    eax,0x4b78df48
  41f9ea:	mov    BYTE PTR [ebx-0x6c],cl
  41f9ed:	add    DWORD PTR [eax],ecx
  41f9ef:	sub    esi,DWORD PTR [eax-0x62]
  41f9f2:	in     eax,0x8f
  41f9f4:	and    DWORD PTR [eax+0x614f8c0c],0x2
  41f9fb:	inc    edi
  41f9fc:	pop    ebp
  41f9fd:	xor    BYTE PTR [ebx],cl
  41f9ff:	jl     0x41fa27
  41fa01:	ss enter 0xa015,0x8d
  41fa06:	daa    
  41fa07:	pop    ss
  41fa08:	jno    0x41f9b9
  41fa0a:	cwde   
  41fa0b:	and    al,0x0
  41fa0d:	and    dh,dl
  41fa0f:	xor    BYTE PTR [esi-0x71],0xc3
  41fa13:	out    dx,eax
  41fa14:	pop    ss
  41fa15:	sub    al,0x22
  41fa17:	or     eax,DWORD PTR [ebp*1+0x49ca541f]
  41fa1e:	add    esi,DWORD PTR [ecx]
  41fa20:	in     eax,0xb5
  41fa22:	jbe    0x41fa06
  41fa24:	stos   BYTE PTR es:[edi],al
  41fa25:	sbb    esp,DWORD PTR [esi+eax*1+0x19]
  41fa29:	inc    edi
  41fa2a:	pop    ebp
  41fa2b:	mov    DWORD PTR [ecx+0x6600dbdf],ebx
  41fa31:	or     al,0x40
  41fa33:	push   cs
  41fa34:	adc    BYTE PTR [ebp-0x52244b57],dl
  41fa3a:	adc    ebx,DWORD PTR [ebp-0x77]
  41fa3d:	popf   
  41fa3e:	aad    0xb9
  41fa40:	pop    ebp
  41fa41:	ss clc 
  41fa43:	ret    0x7522
  41fa46:	ret    
  41fa47:	xchg   esp,eax
  41fa48:	retf   
  41fa49:	push   ebp
  41fa4a:	mov    eax,?
  41fa4c:	hlt    
  41fa4d:	and    esp,DWORD PTR [ebx+eax*4]
  41fa50:	jmp    0x41f9ef
  41fa52:	jnp    0x41fa14
  41fa54:	sub    BYTE PTR [ecx+ecx*2-0x35],dl
  41fa58:	jo     0x41fa5f
  41fa5a:	mov    esp,esp
  41fa5c:	mov    ds:0x98fcef40,al
  41fa61:	lods   eax,DWORD PTR ds:[esi]
  41fa62:	loopne 0x41fa85
  41fa64:	imul   edi,DWORD PTR [edx+eiz*2+0x3243bcd5],0xb9c2e43b
  41fa6f:	push   eax
  41fa70:	pop    ds
  41fa71:	sub    DWORD PTR fs:[esi+0x43],eax
  41fa75:	out    0x18,eax
  41fa77:	ins    DWORD PTR es:[edi],dx
  41fa78:	sbb    BYTE PTR [eax+0x5ced6696],ch
  41fa7e:	add    ch,ch
  41fa80:	arpl   WORD PTR [eax-0x52],si
  41fa83:	out    dx,eax
  41fa84:	sti    
  41fa85:	int    0xa5
  41fa87:	shl    BYTE PTR [edi-0x6a8a9171],cl
  41fa8d:	and    al,0x5f
  41fa8f:	loope  0x41fa80
  41fa91:	mov    ecx,0x1e5e4fe9
  41fa96:	into   
  41fa97:	pop    edx
  41fa98:	cmp    DWORD PTR [ebx-0x34506c7e],edi
  41fa9e:	aaa    
  41fa9f:	cmp    dh,BYTE PTR [esp+ecx*8]
  41faa2:	push   ebp
  41faa3:	fstp   DWORD PTR [edi+0x15354702]
  41faa9:	xor    bl,BYTE PTR [edi]
  41faab:	in     al,dx
  41faac:	pop    es
  41faad:	jecxz  0x41faa6
  41faaf:	dec    esi
  41fab0:	popf   
  41fab1:	and    bl,bh
  41fab3:	rcl    DWORD PTR [esi+0x5],0x6f
  41fab7:	imul   esi,DWORD PTR [ecx],0x2
  41faba:	aam    0x5e
  41fabc:	mov    DWORD PTR [esi+0x1b96c484],edx
  41fac2:	inc    ecx
  41fac3:	aaa    
  41fac4:	xor    ah,BYTE PTR [esi+0x272910d5]
  41faca:	pop    ds
  41facb:	pop    edi
  41facc:	pusha  
  41facd:	or     al,0x3f
  41facf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad0:	test   DWORD PTR [edx],ecx
  41fad2:	push   cs
  41fad3:	mov    cl,0xdd
  41fad5:	je     0x41faa7
  41fad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad8:	or     ebp,DWORD PTR [ebp-0x5aa16a4e]
  41fade:	sbb    DWORD PTR [edi+edx*2],ecx
  41fae1:	mov    ch,0x4c
  41fae3:	cmp    al,0x8d
  41fae5:	or     dl,dh
  41fae7:	repnz mov ebp,0xdb34e22c
  41faed:	pop    ecx
  41faee:	jmp    0xdbe6:0x128033ec
  41faf5:	lock jae 0x41fb17
  41faf8:	mov    ebx,DWORD PTR [edi]
  41fafa:	pop    ecx
  41fafb:	ds retf 0xe541
  41faff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb00:	(bad)  
  41fb01:	jg     0x41fb14
  41fb03:	test   al,0xe8
  41fb05:	cmp    dl,bl
  41fb07:	xor    eax,0xdc92281c
  41fb0c:	sar    DWORD PTR [ecx-0x43],1
  41fb0f:	push   eax
  41fb10:	call   FWORD PTR [eax+0xb]
  41fb13:	stos   DWORD PTR es:[edi],eax
  41fb14:	jne    0x41fb03
  41fb16:	sub    DWORD PTR [ebx],esp
  41fb18:	ins    DWORD PTR es:[edi],dx
  41fb19:	push   esp
  41fb1a:	mov    BYTE PTR [edi+eiz*4+0x28391092],al
  41fb21:	call   0xb2fed65a
  41fb26:	dec    ebp
  41fb27:	adc    BYTE PTR [ecx-0x3d],0x94
  41fb2b:	or     al,0x2a
  41fb2d:	pop    edx
  41fb2e:	mov    ecx,0xce5e23b5
  41fb33:	sbb    DWORD PTR [eax+0x4f],edx
  41fb36:	test   eax,0x4c5fec44
  41fb3b:	aad    0xc9
  41fb3d:	in     al,dx
  41fb3e:	add    al,0x64
  41fb40:	xchg   esi,eax
  41fb41:	imul   edx,ecx,0x4
  41fb44:	sbb    BYTE PTR [esi-0x220bf2ba],dl
  41fb4a:	ja     0x41fba7
  41fb4c:	hlt    
  41fb4d:	fisttp QWORD PTR [esi-0x199fa909]
  41fb53:	dec    edx
  41fb54:	pop    ebp
  41fb55:	fdivr  DWORD PTR [esi+0x48c4c1a7]
  41fb5b:	jge    0x41fbd5
  41fb5d:	jo     0x41fb2a
  41fb5f:	pop    ecx
  41fb60:	sbb    edi,DWORD PTR [edi+esi*2]
  41fb63:	lods   eax,DWORD PTR ds:[esi]
  41fb64:	push   0xd
  41fb66:	adc    DWORD PTR [ebp+0x7e8612e1],edx
  41fb6c:	not    dl
  41fb6e:	sub    BYTE PTR [eax+0x53],ch
  41fb71:	mov    edx,0x488827fc
  41fb76:	inc    ebx
  41fb77:	jnp    0x41fb63
  41fb79:	cmp    esp,DWORD PTR [ecx+0x7c]
  41fb7c:	mov    edx,fs
  41fb7e:	push   0x7e8f07cc
  41fb83:	dec    edx
  41fb84:	mov    ah,0xfe
  41fb86:	hlt    
  41fb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb88:	push   esp
  41fb89:	aas    
  41fb8a:	dec    ebp
  41fb8b:	dec    ebp
  41fb8c:	xchg   BYTE PTR [edx-0x5e],ch
  41fb8f:	mov    ch,0x2c
  41fb91:	xor    bl,BYTE PTR [ecx+0x31]
  41fb94:	sbb    edx,ecx
  41fb96:	pop    esp
  41fb98:	or     esi,DWORD PTR [esi+0x41cb022c]
  41fb9e:	icebp  
  41fb9f:	mov    ch,0x6c
  41fba1:	call   0xd054:0x65c73b6a
  41fba8:	jmp    0x41fc07
  41fbaa:	mov    edi,ebp
  41fbac:	fild   DWORD PTR [ecx-0x7c47e3a2]
  41fbb2:	dec    esp
  41fbb3:	sbb    ch,0x45
  41fbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb7:	xor    DWORD PTR [ecx],edi
  41fbb9:	ror    DWORD PTR [edi],0x18
  41fbbc:	inc    edi
  41fbbd:	xor    al,0x1e
  41fbbf:	pop    ebp
  41fbc0:	mov    ebx,0xb945c8df
  41fbc5:	sub    ebp,edx
  41fbc7:	pop    esp
  41fbc8:	mov    ebx,?
  41fbca:	mov    BYTE PTR [esi],cl
  41fbcc:	and    al,0xea
  41fbce:	inc    ecx
  41fbcf:	adc    eax,0xb9385563
  41fbd4:	push   es
  41fbd5:	fs mov edi,0xe22cde96
  41fbdb:	fptan  
  41fbdd:	dec    edi
  41fbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbdf:	sti    
  41fbe0:	jbe    0x41fbce
  41fbe2:	cmp    ch,bh
  41fbe4:	jp     0x41fb92
  41fbe6:	ins    DWORD PTR es:[edi],dx
  41fbe7:	fisubr WORD PTR [eax+0x19]
  41fbea:	in     eax,dx
  41fbeb:	mov    ds:0x1996da81,eax
  41fbf0:	test   DWORD PTR [ebp+0x3c59d1a],ecx
  41fbf6:	sub    ebx,DWORD PTR [ebx-0x53]
  41fbf9:	std    
  41fbfa:	std    
  41fbfb:	fs pusha 
  41fbfd:	push   esp
  41fbfe:	add    eax,eax
  41fc00:	repnz test BYTE PTR [ecx+0x1ae7dd00],cl
  41fc07:	bound  edx,QWORD PTR [ebp+0x4f]
  41fc0a:	std    
  41fc0b:	inc    esp
  41fc0c:	test   DWORD PTR [edi+esi*4],0xa1224929
  41fc13:	xor    BYTE PTR [esi],0xa1
  41fc16:	lock test BYTE PTR [ebx-0x7d10cb09],cl
  41fc1d:	sbb    DWORD PTR [ecx],ecx
  41fc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc20:	push   esp
  41fc21:	(bad)  
  41fc22:	out    dx,eax
  41fc23:	jge    0x41fc0b
  41fc25:	jg     0x41fc62
  41fc27:	rcl    BYTE PTR [eax-0x339fa415],cl
  41fc2d:	enter  0x5a1e,0x4c
  41fc31:	jnp    0x41fbd8
  41fc33:	repz mov ebp,cs
  41fc36:	imul   ebp,DWORD PTR [eax],0xffffff80
  41fc39:	repnz cmp edx,edx
  41fc3c:	mov    ah,0x23
  41fc3e:	inc    edx
  41fc3f:	xchg   esp,eax
  41fc40:	popa   
  41fc41:	xor    edx,DWORD PTR [ecx-0x2f842814]
  41fc47:	stc    
  41fc48:	test   DWORD PTR [ebx-0x53],edx
  41fc4b:	xor    eax,0xb5f4ec33
  41fc50:	cmc    
  41fc51:	sbb    DWORD PTR [edx+0x15619f4d],edx
  41fc57:	stc    
  41fc58:	push   ebp
  41fc59:	pop    esi
  41fc5a:	sahf   
  41fc5b:	out    dx,al
  41fc5c:	enter  0xe06a,0x44
  41fc60:	sub    edi,ebp
  41fc62:	ret    
  41fc63:	arpl   WORD PTR [edx],bx
  41fc65:	cdq    
  41fc66:	mov    bl,0x7a
  41fc68:	fwait
  41fc69:	mov    al,0xdd
  41fc6b:	or     al,0xc5
  41fc6d:	imul   edx,eax,0xffffffc6
  41fc70:	popa   
  41fc71:	xor    al,0xb
  41fc73:	jns    0x41fbff
  41fc75:	in     eax,dx
  41fc76:	mov    ds:0xd397a3c1,eax
  41fc7b:	out    0x4,eax
  41fc7d:	xlat   BYTE PTR ds:[ebx]
  41fc7e:	(bad)  
  41fc7f:	ds xchg edx,eax
  41fc81:	repz leave 
  41fc83:	ror    DWORD PTR [ebx-0x52abd228],cl
  41fc89:	jmp    0x41fc4a
  41fc8b:	mov    di,0x740a
  41fc8f:	push   0x3b1b3fce
  41fc94:	cmc    
  41fc95:	dec    ebp
  41fc96:	bound  esi,QWORD PTR [edx-0x1b91bab8]
  41fc9c:	xchg   BYTE PTR [ebx-0x56],bh
  41fc9f:	fist   WORD PTR [esi-0x120e698a]
  41fca5:	jne    0x41fc2a
  41fca7:	jo     0x41fcd1
  41fca9:	sar    BYTE PTR [edi+0x7e],1
  41fcac:	fld    TBYTE PTR [esp+ecx*4]
  41fcaf:	enter  0xa458,0x23
  41fcb3:	push   esi
  41fcb4:	nop
  41fcb5:	fstp   QWORD PTR [edx+0x37]
  41fcb8:	cmp    DWORD PTR [esi-0x11b4aa0f],edi
  41fcbe:	int3   
  41fcbf:	mov    dh,0x8e
  41fcc1:	in     al,dx
  41fcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc3:	sbb    al,0xb1
  41fcc5:	ja     0x41fc6f
  41fcc7:	fs jnp 0x41fc9d
  41fcca:	cmp    BYTE PTR ds:[edx+0x2b73d84b],dh
  41fcd1:	mov    ah,0xae
  41fcd3:	repnz push 0xdedd0f80
  41fcd9:	sbb    al,0xaf
  41fcdb:	mov    ecx,0x2bf38710
  41fce0:	bound  edx,QWORD PTR [edx+0x231ea198]
  41fce6:	xchg   ebx,eax
  41fce7:	mov    esi,ebp
  41fce9:	jl     0x41fcd0
  41fceb:	pop    eax
  41fcec:	sahf   
  41fced:	mov    fs,WORD PTR [ecx]
  41fcef:	repz sahf 
  41fcf1:	das    
  41fcf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf3:	add    al,0x74
  41fcf5:	out    0xc5,al
  41fcf7:	jg     0x41fce5
  41fcf9:	xchg   ebx,eax
  41fcfa:	nop
  41fcfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcfc:	and    al,0x6c
  41fcfe:	add    al,0x72
  41fd00:	push   cs
  41fd01:	aam    0x41
  41fd03:	shl    dh,0xc3
  41fd06:	arpl   WORD PTR [edx+ebp*1+0x78],dx
  41fd0a:	mov    dh,0x85
  41fd0c:	popf   
  41fd0d:	pop    es
  41fd0e:	dec    ebx
  41fd0f:	std    
  41fd10:	rol    bh,cl
  41fd12:	push   ss
  41fd13:	nop
  41fd14:	and    eax,DWORD PTR [ebp-0x7b9cf0af]
  41fd1a:	sbb    al,0xf6
  41fd1c:	arpl   WORD PTR [eax],bx
  41fd1e:	adc    eax,0x9cfcd93e
  41fd23:	ss cmp dl,0xf9
  41fd27:	mov    ds:0x65ce6537,eax
  41fd2c:	sub    DWORD PTR [esi],esp
  41fd2e:	fadd   QWORD PTR [esi+0x8]
  41fd31:	rcl    dl,0xbf
  41fd34:	scas   al,BYTE PTR es:[edi]
  41fd35:	mov    eax,ds:0xabe6e443
  41fd3a:	push   esp
  41fd3b:	xchg   ebx,eax
  41fd3c:	inc    eax
  41fd3d:	add    BYTE PTR [eax],al
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x751c2524],dh
  41fd51:	jg     0x41fd1f
  41fd53:	ja     0x41fd56
  41fd55:	add    bl,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [eax-0x2e],ch
  41fd5c:	ret    
  41fd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5f:	inc    BYTE PTR [ebp-0x7089d540]
  41fd65:	pushf  
  41fd66:	dec    esi
  41fd67:	in     eax,0x6d
  41fd69:	cmp    al,0x7e
  41fd6b:	aas    
  41fd6c:	repz aam 0x29
  41fd6f:	sbb    al,0x3
  41fd71:	xlat   BYTE PTR ds:[ebx]
  41fd72:	or     BYTE PTR ds:0x10264031,dl
  41fd78:	inc    esp
  41fd79:	inc    ebx
  41fd7a:	rcl    eax,1
  41fd7c:	inc    ebp
  41fd7d:	retf   0x1e1a
  41fd80:	push   edx
  41fd81:	xor    dh,BYTE PTR [edi-0x2f]
  41fd84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd85:	rcl    BYTE PTR fs:0x5d8dfcc6,1
  41fd8c:	in     al,0x40
  41fd8e:	sti    
  41fd8f:	xchg   DWORD PTR [ebx+eiz*2+0x6d624512],esp
  41fd96:	ins    DWORD PTR es:[edi],dx
  41fd97:	aaa    
  41fd98:	loope  0x41fdc0
  41fd9a:	jb     0x41fd37
  41fd9c:	neg    DWORD PTR [esi+0x74c9ce2e]
  41fda2:	mov    edx,0x5e4cd2c7
  41fda7:	xor    bl,BYTE PTR [eax-0x36]
  41fdaa:	pop    ebp
  41fdab:	mov    BYTE PTR [ecx+eiz*4-0x7fd298a0],bl
  41fdb2:	xor    BYTE PTR [edi+0x3f],dh
  41fdb5:	scas   al,BYTE PTR es:[edi]
  41fdb6:	stos   BYTE PTR es:[edi],al
  41fdb7:	inc    ebx
  41fdb8:	repz xor ebp,DWORD PTR [ecx+ebp*8-0x200b6498]
  41fdc0:	in     eax,dx
  41fdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc2:	repnz pop ds
  41fdc4:	sbb    ch,BYTE PTR [edx]
  41fdc6:	inc    ecx
  41fdc7:	fs push 0x4a
  41fdca:	nop
  41fdcb:	in     eax,0xe2
  41fdcd:	mov    fs,WORD PTR [edx+0x435ac1f1]
  41fdd3:	jecxz  0x41fd8a
  41fdd5:	xchg   BYTE PTR [ebx+0x19c575c6],al
  41fddb:	sbb    BYTE PTR [edx],al
  41fddd:	mov    ch,0x96
  41fddf:	pop    es
  41fde0:	fcom   QWORD PTR [edx-0x29]
  41fde3:	push   es
  41fde4:	push   es
  41fde5:	(bad)  
  41fde6:	cdq    
  41fde7:	push   ecx
  41fde8:	int3   
  41fde9:	retf   
  41fdea:	out    0x27,al
  41fdec:	mov    cl,0x4
  41fdee:	pop    esi
  41fdef:	pushf  
  41fdf0:	xor    DWORD PTR [edi+0x2d53abbc],ecx
  41fdf6:	mov    eax,0xb4df5430
  41fdfb:	ins    BYTE PTR es:[edi],dx
  41fdfc:	mov    bl,0xa6
  41fdfe:	dec    ecx
  41fdff:	or     al,0x70
  41fe01:	pop    edx
  41fe02:	mov    bl,0x48
  41fe04:	mov    dl,0xdf
  41fe06:	pop    es
  41fe07:	xchg   edx,eax
  41fe08:	cmc    
  41fe09:	idiv   edx
  41fe0b:	in     al,dx
  41fe0c:	adc    al,0x8b
  41fe0e:	cmp    BYTE PTR [edx],0xfb
  41fe11:	call   0x8722:0x4353fa06
  41fe18:	retf   
  41fe19:	aam    0x36
  41fe1b:	(bad)  
  41fe1c:	sbb    dh,BYTE PTR [ebx-0x3cf90aad]
  41fe22:	outs   dx,BYTE PTR ds:[esi]
  41fe23:	cmp    DWORD PTR [ebp-0x662579b3],edi
  41fe29:	out    0x47,al
  41fe2b:	add    eax,0x9c3733f5
  41fe30:	push   edx
  41fe31:	xchg   edx,eax
  41fe32:	stos   DWORD PTR es:[edi],eax
  41fe33:	je     0x41fe85
  41fe35:	retf   0x7034
  41fe38:	stos   WORD PTR es:[edi],ax
  41fe3a:	xor    eax,0xf8d5bc87
  41fe3f:	xor    edx,edi
  41fe41:	jl     0x41fe5b
  41fe43:	aas    
  41fe44:	(bad)  
  41fe45:	sbb    al,0xf0
  41fe47:	scas   al,BYTE PTR es:[edi]
  41fe48:	jo     0x41feb3
  41fe4a:	out    dx,al
  41fe4b:	es push ecx
  41fe4d:	inc    edx
  41fe4e:	adc    eax,0xa8bf41bb
  41fe53:	(bad)  
  41fe54:	test   ch,0xe3
  41fe57:	(bad)  
  41fe58:	pusha  
  41fe59:	leave  
  41fe5a:	sbb    DWORD PTR [ecx+0x5416562d],ebp
  41fe60:	jne    0x41fe2b
  41fe62:	int    0xf0
  41fe64:	sti    
  41fe65:	es pushf 
  41fe67:	retf   0xe4ac
  41fe6a:	retf   
  41fe6b:	jo     0x41fe8d
  41fe6d:	push   ebp
  41fe6e:	pop    ds
  41fe6f:	sbb    dh,cl
  41fe71:	mov    bl,0x40
  41fe73:	dec    esp
  41fe74:	jg     0x41fe6d
  41fe76:	pop    ecx
  41fe77:	jle    0x41fece
  41fe79:	jb     0x41fe2a
  41fe7b:	and    al,0x12
  41fe7d:	(bad)  
  41fe7e:	retf   0x625e
  41fe81:	pusha  
  41fe82:	ds test eax,0x6bd62a91
  41fe88:	in     eax,0x51
  41fe8a:	dec    ecx
  41fe8b:	stc    
  41fe8c:	cwde   
  41fe8d:	sbb    al,0x45
  41fe8f:	cdq    
  41fe90:	or     BYTE PTR [edx+0x6f],bh
  41fe93:	adc    ah,BYTE PTR [edx-0x46]
  41fe96:	mov    eax,0xa643f603
  41fe9b:	mov    al,ds:0x4547ac58
  41fea0:	dec    ecx
  41fea1:	jmp    0x41fee0
  41fea3:	out    dx,eax
  41fea4:	pop    es
  41fea5:	je     0x41ff15
  41fea7:	push   0x58
  41fea9:	xchg   esp,eax
  41feaa:	inc    esi
  41feab:	mov    edx,0xcfd653f7
  41feb0:	shr    BYTE PTR [ebp+0x49],1
  41feb3:	lods   eax,DWORD PTR ds:[esi]
  41feb4:	out    dx,al
  41feb5:	xchg   edi,eax
  41feb6:	jecxz  0x41fe8d
  41feb8:	leave  
  41feb9:	sub    al,0x8f
  41febb:	faddp  st(5),st
  41febd:	mov    BYTE PTR [edx-0x3eea3e89],al
  41fec3:	popa   
  41fec4:	mov    bl,0x50
  41fec6:	(bad)  
  41fec8:	das    
  41fec9:	add    eax,0xf6920049
  41fece:	sar    DWORD PTR [esi+edx*4-0x4dc171ff],cl
  41fed5:	add    al,BYTE PTR [edx+0x59167a14]
  41fedb:	sub    ebx,DWORD PTR [ecx-0x3d]
  41fede:	jb     0x41ff2b
  41fee0:	imul   ebx,DWORD PTR [edx-0x66319f52],0xba567383
  41feea:	rcr    DWORD PTR [esp+edi*4+0x36],1
  41feee:	scas   eax,DWORD PTR es:[edi]
  41feef:	in     al,0xde
  41fef1:	in     al,0x72
  41fef3:	cld    
  41fef4:	das    
  41fef5:	rcl    DWORD PTR [ecx+0x2a],cl
  41fef8:	retf   
  41fef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefa:	fbstp  TBYTE PTR [edi]
  41fefc:	in     eax,0x80
  41fefe:	clc    
  41feff:	cmp    edx,edx
  41ff01:	call   0x418:0xfa9473c1
  41ff08:	fdivr  QWORD PTR [esi-0x3e]
  41ff0b:	lock call 0xeef8a1ce
  41ff11:	cld    
  41ff12:	xchg   edi,eax
  41ff13:	mov    cl,0x41
  41ff15:	pop    eax
  41ff16:	add    eax,0xa9e84db1
  41ff1b:	mov    ebx,0x88e00d47
  41ff20:	test   edi,0xffce237b
  41ff26:	jbe    0x41fed9
  41ff28:	pop    eax
  41ff29:	xchg   ebp,eax
  41ff2a:	mov    eax,ds:0x9431dab5
  41ff2f:	jae    0x41ff9b
  41ff31:	inc    ebp
  41ff32:	or     edx,ebx
  41ff34:	inc    esp
  41ff35:	jle    0x41fec1
  41ff37:	push   esi
  41ff38:	es jno 0x41ffaa
  41ff3b:	xor    DWORD PTR [edx+0x7b1a6424],eax
  41ff41:	push   eax
  41ff42:	jecxz  0x41ffb2
  41ff44:	shl    DWORD PTR [ebx+ebp*4-0x1a],cl
  41ff48:	jne    0x41fed1
  41ff4a:	int3   
  41ff4b:	icebp  
  41ff4c:	(bad)  
  41ff4e:	push   ebp
  41ff4f:	ins    DWORD PTR es:[edi],dx
  41ff50:	pop    eax
  41ff51:	xchg   ebx,eax
  41ff52:	rol    BYTE PTR [ebx+0x3],cl
  41ff55:	(bad)  
  41ff56:	sbb    DWORD PTR [esp+ebp*1],ebx
  41ff59:	add    al,0x7d
  41ff5b:	ins    BYTE PTR es:[edi],dx
  41ff5c:	sbb    BYTE PTR [esi-0x2a],ah
  41ff5f:	push   cs
  41ff60:	jmp    0xfbed:0xd35a162a
  41ff67:	inc    edi
  41ff68:	sbb    DWORD PTR [ebx+0x2001c1ad],esi
  41ff6e:	popa   
  41ff6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff70:	xchg   ecx,eax
  41ff71:	popf   
  41ff72:	xchg   ebx,eax
  41ff73:	xchg   edi,eax
  41ff74:	in     eax,dx
  41ff75:	in     eax,dx
  41ff76:	call   0x2acb:0x4b2774ae
  41ff7d:	pop    esi
  41ff7e:	or     esi,DWORD PTR [eax+0x21b1cb0b]
  41ff84:	out    0x9b,eax
  41ff86:	(bad)  
  41ff88:	xor    BYTE PTR [eax+ebp*4],dl
  41ff8b:	imul   eax,DWORD PTR gs:[esi+0x54],0xdc3dbde8
  41ff93:	mov    dl,0x26
  41ff95:	repnz push ebp
  41ff97:	les    ebx,FWORD PTR [edx]
  41ff99:	int3   
  41ff9a:	js     0x420007
  41ff9c:	dec    esi
  41ff9d:	popf   
  41ff9e:	inc    ecx
  41ff9f:	sti    
  41ffa0:	mov    ds:0xe36d7cfb,eax
  41ffa5:	pop    ss
  41ffa6:	and    BYTE PTR [ebp-0x88a922c],0xd0
  41ffad:	shl    DWORD PTR [eax+0x21316129],1
  41ffb3:	fcmovnb st,st(4)
  41ffb5:	add    eax,0xb8773855
  41ffba:	pop    edi
  41ffbb:	in     eax,dx
  41ffbc:	es jl  0x41ffa9
  41ffbf:	pop    ds
  41ffc0:	and    dh,dl
  41ffc2:	cwde   
  41ffc3:	mov    ebx,0xbb8206bb
  41ffc8:	dec    eax
  41ffc9:	add    eax,0x55881ff6
  41ffce:	outs   dx,BYTE PTR ds:[esi]
  41ffcf:	gs cld 
  41ffd1:	adc    ecx,ecx
  41ffd3:	mov    al,0x88
  41ffd5:	cmp    edi,esp
  41ffd7:	sub    eax,0x551dc2d1
  41ffdc:	imul   esp,DWORD PTR [esi],0xffffffe1
  41ffdf:	cdq    
  41ffe0:	sub    DWORD PTR [ebp+ebp*2+0x71e93e5a],eax
  41ffe7:	pop    edx
  41ffe8:	mov    ch,0x27
  41ffea:	sahf   
  41ffeb:	loope  0x41ffe0
  41ffed:	mov    WORD PTR [edi-0x6c],es
  41fff0:	pop    esi
  41fff1:	rcr    cl,0xf5
  41fff4:	aad    0x94
  41fff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff7:	or     bl,BYTE PTR [ebx+0x11]
  41fffa:	mov    dh,0xa4
  41fffc:	push   es
  41fffd:	test   eax,0x79366a66
  420002:	cmp    al,ah
  420004:	pop    ebx
  420005:	fs jle 0x41ffb6
  420008:	leave  
  420009:	pop    edx
  42000a:	rcl    BYTE PTR [edi-0x3562eacf],0xda
  420011:	imul   DWORD PTR [esi+0x755c2a57]
  420017:	pop    edi
  420018:	popf   
  420019:	and    eax,0x145d0235
  42001e:	inc    ecx
  42001f:	jecxz  0x41fff6
  420021:	pushf  
  420022:	inc    ecx
  420023:	sub    dl,BYTE PTR [esi]
  420025:	out    dx,al
  420026:	lods   al,BYTE PTR ds:[esi]
  420027:	jae    0x41ffc6
  420029:	or     eax,0x58adc487
  42002e:	mov    dl,0x6c
  420030:	dec    ebp
  420031:	mov    ds:0x8abe5ac5,al
  420036:	push   ebp
  420037:	sub    bl,BYTE PTR [edx*1-0x17885bec]
  42003e:	(bad)  
  42003f:	fldcw  WORD PTR [ebp-0x27f0f994]
  420045:	lock aad 0x21
  420048:	(bad)  
  42004a:	push   ds
  42004b:	imul   ecx,DWORD PTR [edx],0xffffffd8
  42004e:	jno    0x4200cd
  420050:	xor    esp,0x8524eec6
  420056:	ja     0x42009b
  420058:	cld    
  420059:	inc    eax
  42005a:	xor    ch,bh
  42005c:	ss jmp 0x6c2eb834
  420062:	sub    bh,cl
  420064:	nop
  420065:	mov    edi,DWORD PTR [esi+0x5d]
  420068:	cmp    al,0x4e
  42006a:	pusha  
  42006b:	cmp    ah,BYTE PTR [ecx+ebp*4-0xa]
  42006f:	sbb    al,0x59
  420071:	mov    BYTE PTR [edx-0xda81553],dh
  420077:	push   ecx
  420078:	jg     0x420015
  42007a:	imul   ebp,DWORD PTR [edx+0x2c7e0de],0x2d
  420081:	std    
  420082:	push   ebx
  420083:	pop    esi
  420084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420085:	test   BYTE PTR [edx+edi*4-0x38b51a4a],dl
  42008c:	jae    0x42005f
  42008e:	test   al,0xb6
  420090:	aad    0x4a
  420092:	fs jne 0x420105
  420095:	int3   
  420096:	xor    esp,DWORD PTR [ebx+0x46]
  420099:	aas    
  42009a:	ret    0x856d
  42009d:	mov    dh,0x56
  42009f:	sub    eax,0x7d835df2
  4200a4:	jge    0x420118
  4200a6:	nop
  4200a7:	xchg   edi,eax
  4200a8:	and    al,BYTE PTR [eax-0x4c]
  4200ab:	sbb    esi,DWORD PTR [eax+0x16]
  4200ae:	(bad)  
  4200af:	mov    eax,0x34e971b0
  4200b4:	dec    ecx
  4200b5:	pop    ecx
  4200b6:	ret    0x9ace
  4200b9:	push   0xffffffb6
  4200bb:	push   0x1e062bec
  4200c0:	lods   eax,DWORD PTR ds:[esi]
  4200c1:	retf   
  4200c2:	ss sbb eax,0x13e1310f
  4200c8:	mov    ecx,0xe246997
  4200cd:	jmp    0x42004f
  4200cf:	repnz pop ds
  4200d1:	pop    ebx
  4200d2:	inc    ebp
  4200d3:	cwde   
  4200d4:	(bad)  
  4200d5:	mov    ch,0xc2
  4200d7:	call   0xf45683d7
  4200dc:	push   0xffffffee
  4200de:	aas    
  4200df:	or     DWORD PTR [ecx+0x43],0xdce92620
  4200e6:	das    
  4200e7:	(bad)  
  4200e8:	or     al,0x67
  4200ea:	inc    ax
  4200ec:	ja     0x4200bf
  4200ee:	enter  0x2e52,0x1
  4200f2:	xchg   ecx,eax
  4200f3:	cmp    bh,al
  4200f5:	mov    cr1,eax
  4200f8:	(bad)  
  4200f9:	sub    al,0x27
  4200fb:	sti    
  4200fc:	xchg   ecx,eax
  4200fd:	mov    esi,0x96409716
  420102:	shr    DWORD PTR [esi-0x7d],cl
  420105:	push   es
  420106:	sub    cl,ch
  420108:	xor    BYTE PTR [ebx+esi*8+0x41776c9b],al
  42010f:	jae    0x4200e4
  420111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420112:	dec    edx
  420113:	out    dx,eax
  420114:	and    BYTE PTR [ebx-0x70],dh
  420117:	fidiv  WORD PTR [esi+0x24]
  42011a:	push   ss
  42011b:	push   cs
  42011c:	xchg   BYTE PTR [ecx+0x26],cl
  42011f:	in     eax,0xfb
  420121:	pop    eax
  420122:	mov    al,ds:0x46b8f560
  420127:	adc    eax,0xb32fc8c2
  42012c:	jnp    0x420157
  42012e:	or     ebx,DWORD PTR [ebp+0x46]
  420131:	adc    eax,DWORD PTR [edx]
  420133:	pop    eax
  420134:	mov    ?,esi
  420136:	ja     0x4200cc
  420138:	dec    ebx
  420139:	cdq    
  42013a:	adc    al,BYTE PTR [ebp+0x52e83ec5]
  420140:	ror    BYTE PTR [ebp+esi*4-0x65500983],cl
  420147:	sbb    al,0x74
  420149:	imul   ecx,DWORD PTR [edx-0x34e4892a],0x11
  420150:	jb     0x420169
  420152:	add    BYTE PTR [edx],dl
  420154:	repnz mov DWORD PTR [edx-0x5b],edi
  420158:	mov    ss,WORD PTR [esi+ebp*8-0x76]
  42015c:	js     0x42012f
  42015e:	adc    al,0x4
  420160:	mov    eax,ds:0x870a45cc
  420165:	fisub  WORD PTR [ecx]
  420167:	mov    eax,0x36a250e
  42016c:	clc    
  42016d:	loop   0x4201dd
  42016f:	mov    bl,0xb2
  420171:	push   esp
  420172:	jbe    0x4201e9
  420174:	jae    0x420119
  420176:	aad    0x1c
  420178:	cmp    al,0xc8
  42017a:	js     0x42012a
  42017c:	and    DWORD PTR ds:[ebx],esp
  42017f:	jno    0x420120
  420181:	push   es
  420182:	pop    ebp
  420183:	push   ecx
  420184:	adc    eax,0x395be25e
  420189:	es ror dh,0x0
  42018d:	out    dx,al
  42018e:	push   edx
  42018f:	mov    ss,edi
  420191:	ds and dh,bl
  420194:	ret    0xcd39
  420197:	dec    esi
  420198:	jg     0x420194
  42019a:	adc    eax,0xcf3a3987
  42019f:	lock out dx,eax
  4201a1:	fistp  DWORD PTR [esi]
  4201a3:	test   BYTE PTR [edx],cl
  4201a5:	cmp    BYTE PTR [eax-0x379054ac],dh
  4201ab:	std    
  4201ac:	xor    eax,ecx
  4201ae:	pop    edx
  4201af:	je     0x420162
  4201b1:	and    al,0xdc
  4201b3:	scas   al,BYTE PTR es:[edi]
  4201b4:	mov    fs,WORD PTR [ecx+0x16e0f13f]
  4201ba:	out    dx,al
  4201bb:	outs   dx,BYTE PTR ds:[esi]
  4201bc:	frstor [eax+edi*8-0x5b]
  4201c0:	ins    DWORD PTR es:[edi],dx
  4201c1:	(bad)
  4201c4:	mov    eax,0x93e09469
  4201c9:	mov    ecx,0xed859ce3
  4201ce:	xchg   esi,eax
  4201cf:	xchg   edx,esi
  4201d1:	inc    ecx
  4201d2:	add    bl,BYTE PTR [ebx]
  4201d4:	add    al,0x73
  4201d6:	rcr    DWORD PTR [esi],0x53
  4201d9:	jmp    0x420193
  4201db:	int    0x55
  4201dd:	cmp    esp,eax
  4201df:	shr    esi,0xe8
  4201e2:	and    al,0xf
  4201e4:	jmp    0x26cc3d83
  4201e9:	jmp    0x42025f
  4201eb:	pop    ss
  4201ec:	(bad)  
  4201ed:	cmp    BYTE PTR [edx+0x4035af3b],ah
  4201f3:	popf   
  4201f4:	nop
  4201f5:	fisubr DWORD PTR [ecx-0x1b]
  4201f8:	(bad)  
  4201f9:	jle    0x42019f
  4201fb:	sar    ah,1
  4201fd:	fwait
  4201fe:	sbb    eax,0xd638bbe4
  420203:	mov    dl,0x52
  420205:	mov    al,0x45
  420207:	or     edi,ebp
  420209:	cmp    al,0xa6
  42020b:	and    edx,DWORD PTR [esi-0x7c8e9ea4]
  420211:	stos   DWORD PTR es:[edi],eax
  420212:	stos   DWORD PTR es:[edi],eax
  420213:	sbb    al,0x9
  420215:	js     0x42019c
  420217:	jmp    FWORD PTR [edi]
  420219:	inc    ebp
  42021a:	mov    dh,0xac
  42021c:	ficomp DWORD PTR [edi+0x57]
  42021f:	mov    BYTE PTR [ebx+0x71],bh
  420222:	inc    esi
  420223:	neg    BYTE PTR [ebx-0x35f52715]
  420229:	pop    ds
  42022a:	xor    al,0x50
  42022c:	(bad)  [edx+0x28]
  42022f:	inc    edx
  420230:	into   
  420231:	pop    DWORD PTR [ecx+0x4b]
  420234:	push   0xffffff88
  420236:	jbe    0x4201eb
  420238:	sub    DWORD PTR [eax-0x5e],ecx
  42023b:	mov    al,ds:0xd9aa0129
  420240:	fs sub dh,ch
  420243:	sahf   
  420244:	push   esp
  420245:	hlt    
  420246:	or     BYTE PTR [ecx+0x25f3402e],ah
  42024c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42024d:	add    BYTE PTR [eax],al
  42024f:	add    BYTE PTR [eax],al
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [esi-0x402a4bfa],bl
  420263:	jl     0x420266
  420265:	add    bl,dh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [ebx],bh
  42026b:	inc    eax
  42026c:	mov    al,0x3c
  42026e:	mov    ah,0x54
  420270:	mov    ds:0xc9236b04,eax
  420275:	inc    ecx
  420276:	enter  0xe6a6,0xb3
  42027a:	pop    ebx
  42027b:	xor    dh,dh
  42027d:	adc    BYTE PTR [ebp+0x61],al
  420280:	inc    ebp
  420281:	inc    ebp
  420282:	push   esp
  420283:	shr    BYTE PTR [ebx-0x52a12fd5],1
  420289:	(bad)  
  42028a:	sub    esp,DWORD PTR [ecx]
  42028c:	(bad)  
  42028d:	cmp    BYTE PTR [eax+0x7c],dh
  420290:	and    eax,0x86acbbdf
  420295:	mul    ebp
  420297:	lock jge 0x4202b1
  42029a:	jmp    DWORD PTR [ebx]
  42029c:	push   esp
  42029d:	xchg   ecx,eax
  42029e:	adc    edx,edi
  4202a0:	push   cs
  4202a1:	pop    ebp
  4202a2:	jle    0x420224
  4202a4:	mov    ah,0x8b
  4202a6:	fistp  QWORD PTR [eax+esi*1-0x6f]
  4202aa:	loope  0x420318
  4202ac:	push   edx
  4202ad:	push   ds
  4202ae:	(bad)  
  4202af:	push   ebp
  4202b0:	std    
  4202b1:	in     eax,0x8d
  4202b3:	sti    
  4202b4:	je     0x420309
  4202b6:	(bad)  
  4202b7:	adc    ch,dh
  4202b9:	scas   al,BYTE PTR es:[edi]
  4202ba:	(bad)  
  4202bb:	add    bl,BYTE PTR ds:[eax]
  4202be:	inc    ecx
  4202bf:	js     0x42032d
  4202c1:	lahf   
  4202c2:	loopne 0x42030a
  4202c4:	jo     0x420306
  4202c6:	mov    BYTE PTR [esp+edi*4],ch
  4202c9:	sub    BYTE PTR [edi+0x59bd99c7],cl
  4202cf:	add    eax,0x14d25480
  4202d4:	or     esi,ecx
  4202d6:	jg     0x4202fc
  4202d8:	push   eax
  4202d9:	mov    ds:0x35ed6aac,al
  4202de:	repz sti 
  4202e0:	cmp    BYTE PTR [edi+ecx*2-0x5a213608],0xcd
  4202e8:	leave  
  4202e9:	imul   DWORD PTR [ebp-0x2d59c0a4]
  4202ef:	pop    ebx
  4202f0:	call   0x8ed66fa0
  4202f5:	sbb    eax,0x6cd439bd
  4202fa:	mov    esp,?
  4202fc:	pop    esi
  4202fd:	popf   
  4202fe:	cld    
  4202ff:	push   esi
  420300:	mov    ebx,0x2259b43a
  420305:	jnp    0x420349
  420307:	dec    ecx
  420308:	pop    es
  420309:	out    dx,al
  42030a:	pop    ds
  42030b:	mov    bl,0x85
  42030d:	push   eax
  42030e:	mov    ds:0x98c86c4,eax
  420313:	and    DWORD PTR [edx+ebp*1+0x6da8d6ea],esp
  42031a:	sub    ah,ch
  42031c:	shl    eax,1
  42031e:	xor    edi,0xe19dff9
  420324:	mov    dl,0x4f
  420326:	jl     0x4202df
  420328:	daa    
  420329:	pop    esp
  42032a:	jno    0x4203a3
  42032c:	sbb    BYTE PTR [ebp-0x68b06e1],bh
  420332:	or     eax,0x4c5459a4
  420337:	push   0xf74b82b2
  42033c:	and    al,0x49
  42033e:	xor    ebx,DWORD PTR [ecx-0x5d23bf9c]
  420344:	dec    DWORD PTR [esi-0x25]
  420347:	xchg   DWORD PTR [edi+0x5eb28fa6],esi
  42034d:	push   cs
  42034e:	aas    
  42034f:	outs   dx,DWORD PTR ds:[esi]
  420350:	ret    0x88fd
  420353:	popf   
  420354:	and    al,0xce
  420356:	ja     0x42031b
  420358:	add    al,0xda
  42035a:	pop    eax
  42035b:	mov    bh,0xfb
  42035d:	cld    
  42035e:	and    DWORD PTR [esi],0xb079935f
  420364:	sbb    BYTE PTR [ecx-0x12],al
  420367:	jg     0x420378
  420369:	sbb    al,0xaa
  42036b:	mov    bl,0x2f
  42036d:	sbb    ah,BYTE PTR [eax+0x70]
  420370:	repz xor BYTE PTR [edx-0x23],cl
  420374:	stos   BYTE PTR es:[edi],al
  420375:	ins    BYTE PTR es:[edi],dx
  420376:	mov    eax,ds:0x54f749c5
  42037b:	xchg   BYTE PTR [edi],cl
  42037d:	jbe    0x420356
  42037f:	lock imul edx,DWORD PTR [ebx+0x59020d38],0x24464e78
  42038a:	pop    ds
  42038b:	rol    BYTE PTR [ebx-0x31d3f625],cl
  420391:	or     BYTE PTR [edx],dh
  420393:	scas   eax,DWORD PTR es:[edi]
  420394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420395:	pop    ebx
  420396:	fprem  
  420398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420399:	adc    bl,BYTE PTR [esi-0x75]
  42039c:	mov    ds:0xf3e271af,al
  4203a1:	inc    eax
  4203a2:	sbb    bp,WORD PTR [ecx]
  4203a5:	add    DWORD PTR [ebx],edx
  4203a7:	pop    ebp
  4203a8:	push   edi
  4203a9:	(bad)  
  4203aa:	adc    dl,BYTE PTR [edi+0x4b]
  4203ad:	sub    DWORD PTR [eax],eax
  4203af:	mov    dl,0x92
  4203b1:	dec    ebp
  4203b2:	imul   edi,DWORD PTR [edi],0x69e5b810
  4203b8:	mov    ecx,DWORD PTR ds:0xc18b4435
  4203be:	pusha  
  4203bf:	out    dx,al
  4203c0:	(bad)  
  4203c1:	mov    dl,0x38
  4203c3:	xor    eax,0x58d0396c
  4203c8:	mov    al,0x3e
  4203ca:	cmp    ebx,eax
  4203cc:	cmc    
  4203cd:	and    ah,ah
  4203cf:	ret    0x8f96
  4203d2:	or     BYTE PTR [esi-0x195f6797],dh
  4203d8:	mov    ds:0x9c3773ba,eax
  4203dd:	ret    
  4203de:	pop    ecx
  4203df:	clc    
  4203e0:	pop    ebx
  4203e1:	loope  0x420420
  4203e3:	push   esp
  4203e4:	mov    es,edx
  4203e6:	mov    esp,0xc57749c4
  4203eb:	and    ecx,DWORD PTR [ebx+ebx*1]
  4203ee:	pushf  
  4203ef:	cmp    esp,eax
  4203f1:	pusha  
  4203f2:	push   esp
  4203f3:	mov    al,0x39
  4203f5:	mov    ds:0x10700aa,al
  4203fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fb:	inc    DWORD PTR [ecx+0x561f0210]
  420401:	and    BYTE PTR [ecx+eiz*4+0x7fc9ec05],bh
  420408:	xchg   ebp,eax
  420409:	enter  0x63f0,0x51
  42040d:	js     0x420447
  42040f:	inc    ebp
  420410:	xchg   edi,eax
  420411:	rol    cl,cl
  420413:	ror    DWORD PTR [eax-0x7f],0xd3
  420417:	cmp    ecx,edx
  420419:	ja     0x4203d6
  42041b:	sub    cl,BYTE PTR [esi+0x2b]
  42041e:	ficomp WORD PTR [esi+edi*4+0x60bf5a34]
  420425:	push   esp
  420426:	xor    cl,bh
  420428:	mov    edi,0xbfb90570
  42042d:	and    BYTE PTR [ecx+0x76431c5e],0x86
  420434:	sbb    eax,0xf90f6e77
  420439:	loop   0x4203df
  42043b:	out    0x3c,al
  42043d:	jno    0x420420
  42043f:	sbb    dl,al
  420441:	test   eax,0x52fd0515
  420446:	je     0x4203fd
  420448:	std    
  420449:	and    esi,DWORD PTR [ecx-0x235d9dd]
  42044f:	test   eax,0xc8189eed
  420454:	es mov dh,0x6a
  420457:	and    esi,ebp
  420459:	xchg   ecx,eax
  42045a:	into   
  42045b:	cmp    eax,0x70ed6fd6
  420460:	iret   
  420461:	stos   BYTE PTR es:[edi],al
  420462:	and    eax,0x59f156fb
  420467:	js     0x42041c
  420469:	cmc    
  42046a:	push   ecx
  42046b:	pop    ecx
  42046c:	mov    esp,0x7f7583d6
  420471:	adc    BYTE PTR [edi+0x2c],ah
  420474:	inc    ebx
  420475:	addr16 call 0xa8f301e0
  42047b:	cmp    eax,0x3c3c1ec4
  420480:	push   edi
  420481:	push   ebp
  420482:	call   0x113f:0x2c85760e
  420489:	sbb    BYTE PTR [edx-0x317003c0],dh
  42048f:	jo     0x420467
  420491:	fsub   QWORD PTR [edx+0x304f1bc2]
  420497:	mov    al,0x79
  420499:	dec    DWORD PTR [ecx-0x2e]
  42049c:	xlat   BYTE PTR ds:[ebx]
  42049d:	cwde   
  42049e:	retf   
  42049f:	push   ecx
  4204a0:	test   BYTE PTR [esi-0x5b],0x67
  4204a4:	leave  
  4204a5:	sti    
  4204a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a7:	mov    dl,0x75
  4204a9:	test   eax,0x84624d09
  4204ae:	stos   BYTE PTR es:[edi],al
  4204af:	cs push cs
  4204b1:	dec    ebx
  4204b2:	outs   dx,BYTE PTR ds:[esi]
  4204b3:	mov    ds:0x7b58691d,eax
  4204b8:	outs   dx,DWORD PTR ds:[esi]
  4204b9:	popf   
  4204ba:	inc    ebx
  4204bb:	mov    edi,0x920920cb
  4204c1:	pop    edi
  4204c2:	push   edi
  4204c3:	mov    dl,0xb7
  4204c5:	sar    esi,cl
  4204c7:	mov    al,0x7e
  4204c9:	in     al,dx
  4204ca:	cld    
  4204cb:	inc    esp
  4204cc:	jg     0x4204d0
  4204ce:	jbe    0x420501
  4204d0:	arpl   WORD PTR [esi+0x705d55a],cx
  4204d6:	xchg   esi,eax
  4204d7:	ror    ecx,1
  4204d9:	fst    DWORD PTR [edx+0x7d37d6e0]
  4204df:	mov    al,ds:0xf74e1458
  4204e4:	test   eax,0xa3248bd9
  4204e9:	jmp    0xebce09f3
  4204ee:	sbb    DWORD PTR [ebx],ebp
  4204f0:	sbb    esp,DWORD PTR [ecx]
  4204f2:	or     BYTE PTR [ebx],ch
  4204f4:	hlt    
  4204f5:	or     al,0x92
  4204f7:	call   0x4988:0xb6f064e4
  4204fe:	mov    ds:0xd08651b4,al
  420503:	inc    ebx
  420504:	mov    ch,BYTE PTR [esi+0x45]
  420507:	dec    ecx
  420508:	out    0x7a,al
  42050a:	cmp    al,0x8e
  42050c:	mov    ch,0x3b
  42050e:	sub    esi,DWORD PTR [edx]
  420510:	(bad)  
  420511:	fld    TBYTE PTR [ebx-0x66ff147f]
  420517:	mov    cs,WORD PTR [ebx]
  420519:	ss pushf 
  42051b:	icebp  
  42051c:	lea    ebx,[edi+0x37]
  42051f:	and    BYTE PTR [ecx+0x35],0xe4
  420523:	in     eax,0x35
  420525:	icebp  
  420526:	ret    0xabed
  420529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42052a:	iret   
  42052b:	mov    ebp,DWORD PTR [eax]
  42052d:	push   ebp
  42052e:	ret    
  42052f:	jg     0x4204e4
  420531:	outs   dx,DWORD PTR ds:[esi]
  420532:	xlat   BYTE PTR ds:[ebx]
  420533:	sti    
  420534:	mov    esi,0x81c96fa8
  420539:	retf   
  42053a:	iret   
  42053b:	push   esp
  42053c:	xor    BYTE PTR [eax],al
  42053e:	stos   DWORD PTR es:[edi],eax
  42053f:	adc    dl,BYTE PTR [ebp-0x16486434]
  420545:	mov    bh,0x15
  420547:	test   BYTE PTR [edx*4-0x269ccf2b],dh
  42054e:	into   
  42054f:	aas    
  420550:	les    ecx,FWORD PTR [edx]
  420552:	push   ebp
  420553:	aam    0x32
  420555:	adc    al,0x8b
  420557:	xor    bl,BYTE PTR [edi]
  420559:	arpl   si,sp
  42055b:	stc    
  42055c:	sbb    edx,DWORD PTR [edi+0x1692fadf]
  420562:	mov    dh,0xd5
  420564:	inc    esp
  420565:	xchg   esi,eax
  420566:	cmp    al,ch
  420568:	cmc    
  420569:	pop    es
  42056a:	pusha  
  42056b:	leave  
  42056c:	jmp    0x42055c
  42056e:	in     al,dx
  42056f:	cdq    
  420570:	ret    
  420571:	jne    0x420566
  420573:	popa   
  420574:	fcom   DWORD PTR [edx]
  420576:	ins    DWORD PTR es:[edi],dx
  420577:	in     al,dx
  420578:	clc    
  420579:	inc    esp
  42057a:	fild   WORD PTR [ecx]
  42057c:	loope  0x42057d
  42057e:	lock adc DWORD PTR [ecx+0x241a00d7],0x673f4232
  420589:	gs das 
  42058b:	ror    DWORD PTR [esi-0x2e],cl
  42058e:	fwait
  42058f:	pusha  
  420590:	sahf   
  420591:	movsx  ebx,WORD PTR [edx-0x30]
  420595:	jmp    0x795cbd9c
  42059a:	xor    edx,0xffffffda
  42059d:	ss jne 0x420567
  4205a0:	out    0x3d,eax
  4205a2:	pushf  
  4205a3:	or     BYTE PTR [ebp+eax*8-0x34],al
  4205a7:	repz push es
  4205a9:	dec    ebp
  4205aa:	and    eax,0xef14e76e
  4205af:	push   es
  4205b0:	aam    0x92
  4205b2:	dec    ecx
  4205b3:	stos   BYTE PTR es:[edi],al
  4205b4:	mov    bh,0x7d
  4205b6:	(bad)  
  4205b7:	xchg   ebp,eax
  4205b8:	call   0x9471efa1
  4205bd:	(bad)  
  4205be:	adc    BYTE PTR [esi+0x4230425c],dh
  4205c4:	dec    ebx
  4205c5:	and    ebx,DWORD PTR [ecx]
  4205c7:	mov    esp,0xe24121c6
  4205cc:	sub    DWORD PTR [ebp+0x1b],esp
  4205cf:	or     DWORD PTR [ecx-0x1973fd1],esi
  4205d5:	daa    
  4205d6:	mov    ds:0x283b882b,al
  4205db:	nop
  4205dc:	sbb    BYTE PTR [edi+0x39bff019],ch
  4205e2:	inc    ecx
  4205e3:	shl    DWORD PTR [edi],1
  4205e5:	(bad)  
  4205e6:	jns    0x4205ad
  4205e8:	add    bh,BYTE PTR [eax]
  4205ea:	add    edi,ebp
  4205ec:	mov    ch,BYTE PTR [ebp+0x6504a334]
  4205f2:	and    ch,bh
  4205f4:	lds    eax,FWORD PTR [esp+ecx*4-0x53]
  4205f8:	mov    ebp,0x639d6ffe
  4205fd:	push   ds
  4205fe:	scas   eax,DWORD PTR es:[edi]
  4205ff:	push   es
  420600:	sahf   
  420601:	neg    DWORD PTR [ecx+0x6f0369da]
  420607:	and    ah,BYTE PTR ds:0xe85e9630
  42060d:	xor    DWORD PTR [esi+0x564d1782],ecx
  420613:	loop   0x4205a4
  420615:	scas   eax,DWORD PTR es:[edi]
  420616:	lds    esp,FWORD PTR [edi-0x33]
  420619:	sar    BYTE PTR [edi+0x15c16fa6],cl
  42061f:	out    0x5b,al
  420621:	push   ebp
  420622:	pushf  
  420623:	mov    cl,0xf7
  420625:	push   cs
  420626:	push   es
  420627:	and    ebx,DWORD PTR [edi-0x2cf9485e]
  42062d:	out    0x39,eax
  42062f:	cmp    al,0x46
  420631:	mov    esp,0x26ce5861
  420636:	dec    ecx
  420637:	add    bh,bh
  420639:	mov    eax,ds:0x4cae1b8e
  42063e:	inc    ebx
  42063f:	pop    ebx
  420640:	sub    eax,0x48c77751
  420645:	fcomip st,st(7)
  420647:	sbb    eax,0xf0b609cd
  42064c:	mov    bh,0x9a
  42064e:	mov    bl,0xd7
  420650:	pop    es
  420651:	clc    
  420652:	test   BYTE PTR [edi-0x7d],dl
  420655:	cli    
  420656:	out    dx,eax
  420657:	inc    dl
  420659:	xor    DWORD PTR [eax],ebx
  42065b:	arpl   WORD PTR [esi],sp
  42065d:	sub    BYTE PTR [esi+ecx*1],ch
  420660:	dec    edx
  420661:	in     eax,dx
  420662:	std    
  420663:	jg     0x4205ed
  420665:	jno    0x4206b9
  420667:	scas   eax,DWORD PTR es:[edi]
  420668:	in     al,dx
  420669:	mov    ds:0xf2217fa5,al
  42066e:	fcmovu st,st(7)
  420670:	aaa    
  420671:	mov    al,ds:0xf798be4a
  420676:	das    
  420677:	fimul  WORD PTR [esi]
  420679:	adc    BYTE PTR [ebx-0x3d3a6a63],dl
  42067f:	cmp    eax,0x576fc845
  420684:	(bad)  
  420685:	pop    esp
  420686:	push   edi
  420687:	jne    0x42065d
  420689:	and    edx,DWORD PTR [esi]
  42068b:	sub    al,0x6b
  42068d:	sbb    edi,DWORD PTR [esi]
  42068f:	xchg   ebp,eax
  420690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420691:	in     al,0x56
  420693:	jb     0x42064d
  420695:	add    eax,0xee70e5b7
  42069a:	pop    esp
  42069b:	push   ebp
  42069c:	push   edi
  42069d:	and    DWORD PTR [esi+0x3ad964c7],edi
  4206a3:	fisttp QWORD PTR [ebp+edi*1-0x18]
  4206a7:	push   0x40
  4206a9:	adc    eax,0xe09616e2
  4206ae:	mov    esi,0xbf686097
  4206b3:	mov    edx,0xb1c14273
  4206b8:	sub    BYTE PTR [edx],ch
  4206ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bb:	push   ss
  4206bc:	neg    ecx
  4206be:	int3   
  4206bf:	(bad)  
  4206c0:	xchg   DWORD PTR [esi+0x77],esi
  4206c3:	jle    0x42067e
  4206c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c6:	imul   eax,DWORD PTR [eax+0x5e9f114d],0x3045a02e
  4206d0:	xchg   BYTE PTR [ecx+0x25eb2dc2],cl
  4206d6:	mov    al,0xe4
  4206d8:	callw  0xaa14
  4206dc:	loope  0x42065f
  4206de:	mov    ecx,0xd4eb3f41
  4206e3:	popf   
  4206e4:	pop    ebx
  4206e5:	or     al,0x3c
  4206e7:	push   esp
  4206e8:	cmp    DWORD PTR [eax+0x33a412c4],esp
  4206ee:	les    esi,FWORD PTR [edi]
  4206f0:	push   ecx
  4206f1:	push   cs
  4206f2:	inc    ebx
  4206f3:	mov    bh,0x7f
  4206f5:	(bad)  
  4206f6:	jle    0x420680
  4206f8:	(bad)  
  4206f9:	rol    BYTE PTR [esi+0x3e75515],1
  4206ff:	push   eax
  420700:	xor    DWORD PTR [eax-0x65],0xae6a3eab
  420707:	jns    0x4206d1
  420709:	sar    BYTE PTR [eax-0x56],0xde
  42070d:	shr    cl,cl
  42070f:	mov    ecx,0xe2aa53c9
  420714:	je     0x420755
  420716:	mov    ah,0x12
  420718:	sbb    al,0xbe
  42071a:	push   edi
  42071b:	push   0xffffffe6
  42071d:	push   esp
  42071e:	mov    DWORD PTR [ecx+edi*1+0x52],eax
  420722:	cdq    
  420723:	cdq    
  420724:	outs   dx,BYTE PTR ds:[esi]
  420725:	cmp    DWORD PTR [edi-0x4ae26a3b],ebp
  42072b:	and    ebx,esi
  42072d:	fld    TBYTE PTR fs:[edi+0x2e7c32fa]
  420734:	ins    DWORD PTR es:[edi],dx
  420735:	xchg   edx,eax
  420736:	call   0xfe7d088b
  42073b:	jge    0x4206d5
  42073d:	xchg   edx,eax
  42073e:	xor    eax,0xd6fd1043
  420743:	jle    0x420709
  420745:	fdivp  st(6),st
  420747:	sub    DWORD PTR [ecx-0x39237514],0xffffff84
  42074e:	jbe    0x42076f
  420750:	inc    esi
  420751:	xor    al,0x3a
  420753:	sbb    eax,0xd266b15e
  420758:	or     al,0x71
  42075a:	data16 ficom DWORD PTR [ecx]
  42075d:	add    BYTE PTR [eax],al
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	std    
  42076f:	pop    ss
  420770:	aad    0x5d
  420772:	mov    dl,0x81
  420774:	add    DWORD PTR [eax],eax
  420776:	repz add al,0x0
  420779:	add    BYTE PTR [esi+eax*8+0x71e74465],ah
  420780:	jg     0x420784
  420782:	in     al,0xff
  420784:	ret    
  420785:	in     eax,0xc3
  420787:	jmp    FWORD PTR [esi-0x4e]
  42078a:	std    
  42078b:	push   eax
  42078c:	aad    0x62
  42078e:	mov    cl,0x45
  420790:	mov    ebp,0x811dfbf6
  420795:	dec    esp
  420796:	mov    esi,0x4b65eb35
  42079b:	pop    bx
  42079d:	push   es
  42079e:	jl     0x4207d7
  4207a0:	leave  
  4207a1:	out    dx,eax
  4207a2:	xor    ebx,DWORD PTR [edi+0x3d]
  4207a5:	jmp    0x6d8c2024
  4207aa:	push   ds
  4207ab:	paddd  mm5,QWORD PTR ds:0x4a5c93e7
  4207b2:	icebp  
  4207b3:	push   edx
  4207b4:	push   ebp
  4207b5:	mov    dh,0xf7
  4207b7:	add    ecx,DWORD PTR [ecx-0x2dc03296]
  4207bd:	mov    eax,0x21778e43
  4207c2:	mov    ebp,0xf9553be3
  4207c7:	cwde   
  4207c8:	stos   DWORD PTR es:[edi],eax
  4207c9:	or     bl,cl
  4207cb:	mov    al,ds:0xe7b3fa6f
  4207d0:	or     ecx,ebp
  4207d2:	fcomp  st(1)
  4207d4:	inc    eax
  4207d5:	or     DWORD PTR [esi+0x66],0x6f
  4207d9:	xchg   edx,eax
  4207da:	mov    edi,edx
  4207dc:	jns    0x42078c
  4207de:	xor    BYTE PTR [eax+edx*1],dh
  4207e1:	and    DWORD PTR [ebp+eiz*2-0x16002db0],ebp
  4207e8:	sub    ebx,DWORD PTR [edx-0x36]
  4207eb:	aaa    
  4207ec:	int3   
  4207ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207ee:	popf   
  4207ef:	mov    ecx,0x4472af08
  4207f4:	call   0xb491fbe8
  4207f9:	xchg   ebx,eax
  4207fa:	pmulhuw mm5,QWORD PTR [esi]
  4207fd:	push   edi
  4207fe:	int3   
  4207ff:	mov    esp,0xf7adef80
  420804:	or     al,ah
  420806:	inc    eax
  420807:	inc    edi
  420808:	jns    0x420802
  42080a:	cmp    edi,DWORD PTR ds:0xbfac172f
  420810:	mov    ebp,0xd810a34d
  420815:	outs   dx,DWORD PTR ds:[esi]
  420816:	stos   BYTE PTR es:[edi],al
  420817:	pop    esp
  420818:	(bad)  
  420819:	pop    esi
  42081a:	cs ja  0x420862
  42081d:	jbe    0x42083a
  42081f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420820:	loopne 0x420859
  420822:	mov    al,0x8b
  420824:	fst    st(1)
  420826:	and    al,0xc
  420828:	mov    dh,0xd5
  42082a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42082b:	and    eax,0x8a37da74
  420830:	jne    0x4207c1
  420832:	pusha  
  420833:	and    dl,0xf5
  420836:	jnp    0x42089f
  420838:	std    
  420839:	call   0x6a38:0x7a4783ef
  420840:	aad    0x96
  420842:	imul   esi,ebp,0xb790bce6
  420848:	cdq    
  420849:	mov    cl,0x6
  42084b:	ja     0x4208b9
  42084d:	xchg   esi,eax
  42084e:	push   ds
  42084f:	sub    eax,0x66510ba3
  420854:	xor    eax,DWORD PTR ds:0x1de8d270
  42085a:	jns    0x42080b
  42085c:	mov    WORD PTR [edi+0x64],fs
  42085f:	jmp    0xf8086da5
  420864:	(bad)  
  420866:	cmp    eax,DWORD PTR [ebx]
  420868:	mov    cl,0xcf
  42086a:	push   edi
  42086b:	push   cs
  42086c:	(bad)  
  42086d:	imul   edi,ebx,0x76
  420870:	mov    edi,0xda6a0223
  420875:	das    
  420876:	pop    ds
  420877:	cmp    eax,0xf7f16835
  42087c:	add    edx,DWORD PTR [ecx+0x8deb96b]
  420882:	les    ebp,FWORD PTR [edi-0x2a]
  420885:	adc    esp,esp
  420887:	lea    esp,[eax+0x5138fba3]
  42088d:	mov    bh,0xe3
  42088f:	loop   0x42084e
  420891:	repnz xchg edx,eax
  420893:	jl     0x4208ac
  420895:	pop    ebp
  420896:	out    0x47,eax
  420898:	push   ebp
  420899:	scas   al,BYTE PTR es:[edi]
  42089a:	(bad)  
  42089b:	inc    ecx
  42089c:	pop    esp
  42089d:	pop    edx
  42089e:	stos   BYTE PTR es:[edi],al
  42089f:	sbb    BYTE PTR [edi+0x2f],dh
  4208a2:	pop    ds
  4208a3:	mov    WORD PTR [edx-0x5f3aa921],es
  4208a9:	mov    ebp,0x465eea94
  4208ae:	lahf   
  4208af:	fcomi  st,st(2)
  4208b1:	push   eax
  4208b2:	pop    esi
  4208b3:	gs mov al,0xbf
  4208b6:	jmp    0x420886
  4208b8:	xchg   edx,eax
  4208b9:	shl    BYTE PTR [esi-0x21],cl
  4208bc:	out    dx,al
  4208bd:	push   eax
  4208be:	iret   
  4208bf:	sar    BYTE PTR [ecx-0x29],cl
  4208c2:	fidivr WORD PTR [ebp-0x2f]
  4208c5:	enter  0x8f84,0xd3
  4208c9:	or     dh,ah
  4208cb:	clc    
  4208cc:	stos   BYTE PTR es:[edi],al
  4208cd:	leave  
  4208ce:	aas    
  4208cf:	mov    al,0xd9
  4208d1:	and    eax,0x6eb271f6
  4208d6:	xchg   ecx,eax
  4208d7:	mov    ebx,0x4fed8f0e
  4208dc:	addr16 push ss
  4208de:	jnp    0x42094d
  4208e0:	add    dl,bl
  4208e2:	add    esi,DWORD PTR [eax]
  4208e4:	inc    ebp
  4208e5:	outs   dx,BYTE PTR ds:[esi]
  4208e6:	(bad)  
  4208e7:	aam    0xf9
  4208e9:	inc    ebp
  4208ea:	inc    esp
  4208eb:	jmp    0x2662bcf4
  4208f0:	push   cs
  4208f1:	add    DWORD PTR [ebp-0x6f8a5997],ecx
  4208f7:	cmp    BYTE PTR [esi-0x7a],dl
  4208fa:	adc    DWORD PTR [esi],edx
  4208fc:	int    0xf8
  4208fe:	out    dx,eax
  4208ff:	lds    edx,FWORD PTR [edi-0x5c953598]
  420905:	jmp    0x4208be
  420907:	mov    esi,0x44bd3539
  42090c:	push   esi
  42090d:	dec    esi
  42090e:	sub    ecx,DWORD PTR [ebx-0x64]
  420911:	and    DWORD PTR [esi],0x3123ac1d
  420917:	loope  0x420900
  420919:	in     eax,0x20
  42091b:	fdivr  st,st(4)
  42091d:	adc    esi,DWORD PTR ds:0x1512d102
  420923:	adc    ah,BYTE PTR [ecx]
  420925:	lds    ecx,FWORD PTR [ebx+0x15]
  420928:	bnd js 0x4208b0
  42092b:	retf   
  42092c:	inc    esp
  42092d:	cmp    al,0x6
  42092f:	cmp    DWORD PTR ss:[ecx-0x61790d2a],edi
  420936:	adc    ebx,DWORD PTR [ecx]
  420938:	mov    esp,0x38991b26
  42093d:	int    0x8b
  42093f:	sub    BYTE PTR [ebp+esi*2-0x4a],dh
  420943:	inc    ebx
  420944:	outs   dx,DWORD PTR ds:[esi]
  420945:	mov    BYTE PTR [edx],ah
  420947:	xchg   esp,eax
  420948:	mov    bl,0x74
  42094a:	add    eax,0x879df2b9
  42094f:	shl    DWORD PTR [eax+0x7e],1
  420952:	call   0xade10bb8
  420957:	pop    ebp
  420958:	push   edi
  420959:	jl     0x4209a5
  42095b:	sar    BYTE PTR [ecx],1
  42095d:	std    
  42095e:	sbb    eax,0x1effd357
  420963:	out    dx,eax
  420964:	mov    esp,0x1df3e1d2
  420969:	xchg   ecx,eax
  42096a:	pop    eax
  42096b:	cwde   
  42096c:	xor    eax,0x9db20b6f
  420971:	(bad)  
  420972:	(bad)  
  420973:	stos   DWORD PTR es:[edi],eax
  420974:	dec    eax
  420975:	and    BYTE PTR ds:0x817d9ffa,ch
  42097b:	cmp    DWORD PTR [edx+0x2e],ebx
  42097e:	int3   
  42097f:	mov    dh,0xa3
  420981:	dec    ebp
  420982:	push   esp
  420983:	ror    DWORD PTR [eax+0x54],1
  420986:	retf   0x9ee0
  420989:	dec    eax
  42098a:	dec    ebp
  42098b:	pop    ss
  42098c:	in     al,0xf1
  42098e:	mov    DWORD PTR [edx+0x7db1895c],edi
  420994:	lahf   
  420995:	cdq    
  420996:	in     eax,dx
  420997:	mov    ecx,0x7cbf2579
  42099c:	cli    
  42099d:	mov    esi,0xe07f6dd
  4209a2:	mov    dh,0x28
  4209a4:	into   
  4209a5:	mov    bl,0x73
  4209a7:	add    DWORD PTR [edx-0x121f30a2],esp
  4209ad:	mov    ds,eax
  4209af:	mov    dh,0xc4
  4209b1:	sbb    eax,0x5bfcf8a
  4209b6:	jne    0x420968
  4209b8:	in     eax,dx
  4209b9:	inc    ecx
  4209ba:	cmp    ah,BYTE PTR [ecx+0x5356dd87]
  4209c0:	out    dx,eax
  4209c1:	scas   al,BYTE PTR es:[edi]
  4209c2:	pop    ebp
  4209c3:	mov    ebp,0x4eb7aab5
  4209c8:	add    ebp,esp
  4209ca:	je     0x420a0c
  4209cc:	stos   BYTE PTR es:[edi],al
  4209cd:	cmp    ecx,DWORD PTR [eax]
  4209cf:	dec    ecx
  4209d0:	(bad)
  4209d4:	add    WORD PTR [ebx-0x62],sp
  4209d8:	xchg   ebp,eax
  4209d9:	fwait
  4209da:	ins    DWORD PTR es:[edi],dx
  4209db:	mov    bl,dl
  4209dd:	xchg   ecx,eax
  4209de:	push   ecx
  4209df:	cmp    al,0x6a
  4209e1:	mov    ah,0xdf
  4209e3:	dec    esi
  4209e4:	xchg   ebx,eax
  4209e5:	xor    dl,bl
  4209e7:	nop
  4209e8:	lods   al,BYTE PTR ds:[esi]
  4209e9:	ins    DWORD PTR es:[edi],dx
  4209ea:	sub    ebp,DWORD PTR [ecx+0x21]
  4209ed:	push   ds
  4209ee:	pop    edx
  4209ef:	and    ch,BYTE PTR [ecx-0x46]
  4209f2:	jmp    0x4209f7
  4209f4:	cmp    bh,BYTE PTR [ecx]
  4209f6:	stos   BYTE PTR es:[edi],al
  4209f7:	enter  0x5a17,0x50
  4209fb:	push   0xffffffd3
  4209fd:	jno    0x420a2f
  4209ff:	inc    esp
  420a00:	shr    esp,1
  420a02:	rcr    DWORD PTR [edx+0x70],1
  420a05:	jge    0x420a63
  420a07:	cmp    al,0x69
  420a09:	push   ebp
  420a0a:	test   eax,0x2cdec450
  420a0f:	pop    DWORD PTR fs:[ebx+0x27]
  420a13:	lods   al,BYTE PTR ds:[esi]
  420a14:	xor    BYTE PTR [edx-0x37d6d5a5],dl
  420a1a:	les    esp,FWORD PTR gs:[esi]
  420a1d:	dec    ebx
  420a1e:	jmp    0x4209b6
  420a20:	(bad)  
  420a21:	jle    0x4209ea
  420a23:	and    BYTE PTR [edx],dl
  420a25:	dec    esp
  420a26:	or     BYTE PTR [ecx+0x33],al
  420a29:	test   BYTE PTR [edx],bh
  420a2b:	test   DWORD PTR [edi+ebp*8],eax
  420a2e:	sub    edi,ebx
  420a30:	int3   
  420a31:	lds    esi,FWORD PTR [edi-0x7b1802f5]
  420a37:	cmp    bl,ah
  420a39:	mov    al,ds:0x3733e617
  420a3e:	(bad)  
  420a3f:	clc    
  420a40:	call   edx
  420a42:	lods   eax,DWORD PTR ds:[esi]
  420a43:	mov    dl,0x3c
  420a45:	pop    edi
  420a46:	fild   DWORD PTR [ebx+0x56]
  420a49:	into   
  420a4a:	mov    eax,ds:0x8d110a5
  420a4f:	jg     0x420a22
  420a51:	or     DWORD PTR [eax+0x758b9933],0x34
  420a58:	ret    0xef55
  420a5b:	outs   dx,BYTE PTR ds:[esi]
  420a5c:	and    al,0xc7
  420a5e:	inc    ebx
  420a5f:	mov    DWORD PTR ds:0xf0cf865c,edi
  420a65:	(bad)  
  420a67:	cmc    
  420a68:	dec    eax
  420a69:	stc    
  420a6a:	je     0x420a7a
  420a6c:	pop    esi
  420a6d:	ja     0x420a18
  420a6f:	inc    edi
  420a70:	clc    
  420a71:	mov    ds:0xa638e66c,al
  420a76:	push   edi
  420a77:	pop    eax
  420a78:	push   ss
  420a79:	scas   al,BYTE PTR es:[edi]
  420a7a:	or     al,0xd6
  420a7c:	fwait
  420a7d:	xor    al,bh
  420a7f:	xor    eax,0x813c724d
  420a84:	push   edi
  420a85:	(bad)  [edx]
  420a87:	jb     0x420a7b
  420a89:	loope  0x420b08
  420a8b:	mov    ebp,0xa068cbc3
  420a90:	in     al,dx
  420a91:	je     0x420a8e
  420a93:	cmc    
  420a94:	sbb    BYTE PTR [esi],dh
  420a96:	retf   
  420a97:	and    eax,edx
  420a99:	and    ecx,DWORD PTR [ecx-0x2]
  420a9c:	out    dx,eax
  420a9d:	leave  
  420a9e:	pop    ds
  420a9f:	retf   
  420aa0:	xchg   DWORD PTR [ecx],eax
  420aa2:	mov    al,BYTE PTR [edx+0x41]
  420aa5:	xor    ah,BYTE PTR [ebx-0x22]
  420aa8:	sbb    BYTE PTR [esi-0x6d],al
  420aab:	dec    ebp
  420aac:	jg     0x420ae8
  420aae:	xchg   ebp,eax
  420aaf:	js     0x420abe
  420ab1:	ds fxch st(5)
  420ab4:	mov    ds:0x529689e0,eax
  420ab9:	popa   
  420aba:	leave  
  420abb:	mov    ecx,0x7f8c6637
  420ac0:	bswap  eax
  420ac2:	test   DWORD PTR [ecx],ecx
  420ac4:	xchg   edi,eax
  420ac5:	pop    ebp
  420ac6:	push   0xffffffb4
  420ac8:	int3   
  420ac9:	cmp    BYTE PTR [ecx+eiz*1],al
  420acc:	or     DWORD PTR [esi-0x69],edx
  420acf:	dec    ebp
  420ad0:	pop    edi
  420ad1:	fstp   st(7)
  420ad3:	std    
  420ad4:	inc    ecx
  420ad5:	stc    
  420ad6:	stc    
  420ad7:	pop    eax
  420ad8:	ds dec edx
  420ada:	push   eax
  420adb:	clc    
  420adc:	sbb    eax,0xf199a03e
  420ae1:	mov    ds:0x374b48a9,eax
  420ae6:	ins    BYTE PTR es:[edi],dx
  420ae7:	fadd   QWORD PTR [eax]
  420ae9:	dec    edx
  420aea:	push   ecx
  420aeb:	das    
  420aec:	hlt    
  420aed:	(bad)  
  420aef:	jmp    0x420adc
  420af1:	dec    ebx
  420af2:	mov    DWORD PTR [esi],ecx
  420af4:	retf   0xa842
  420af7:	push   ds
  420af8:	scas   al,BYTE PTR es:[edi]
  420af9:	shl    BYTE PTR [ecx],1
  420afb:	jmp    0x825b:0x15f0ab64
  420b02:	lods   eax,DWORD PTR ds:[esi]
  420b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b04:	call   0x34a0:0x8c1212c
  420b0b:	xchg   ecx,eax
  420b0c:	stos   BYTE PTR es:[edi],al
  420b0d:	jle    0x420b73
  420b0f:	jecxz  0x420ab4
  420b11:	jne    0x420b56
  420b13:	mov    edx,0xa91a2b87
  420b18:	rcl    DWORD PTR [eax],cl
  420b1a:	mov    dh,0x8e
  420b1c:	jb     0x420ae2
  420b1e:	aaa    
  420b1f:	dec    esi
  420b20:	push   esi
  420b21:	sub    cl,ch
  420b23:	in     al,dx
  420b24:	pusha  
  420b25:	xlat   BYTE PTR ds:[ebx]
  420b26:	out    0xb7,al
  420b28:	sub    cl,BYTE PTR [edx-0x11]
  420b2b:	ror    DWORD PTR [eax+0x45],0x67
  420b2f:	jmp    0x420baa
  420b31:	into   
  420b32:	mov    ebp,?
  420b34:	add    ebx,DWORD PTR [edi+0x1fb0a3a2]
  420b3a:	pop    eax
  420b3b:	outs   dx,DWORD PTR ds:[esi]
  420b3c:	aaa    
  420b3d:	lds    esi,FWORD PTR [ebp+0x6a427c69]
  420b43:	fld    DWORD PTR [esi-0x4a41e233]
  420b49:	pop    edx
  420b4a:	retf   
  420b4b:	add    ah,ch
  420b4d:	jl     0x420b17
  420b4f:	xchg   esp,eax
  420b50:	pop    ecx
  420b51:	inc    BYTE PTR [esi+0x35]
  420b54:	adc    ah,dl
  420b56:	push   ds
  420b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b58:	scas   eax,DWORD PTR es:[edi]
  420b59:	out    0xc4,al
  420b5b:	retw   
  420b5d:	rcr    BYTE PTR [ebx+0x42cd8f4c],0x4f
  420b64:	xor    edx,DWORD PTR [esi]
  420b66:	mov    ds:0x1416cd0a,eax
  420b6b:	icebp  
  420b6c:	xchg   ebp,eax
  420b6d:	in     eax,0x43
  420b6f:	cdq    
  420b70:	dec    BYTE PTR [ecx-0x5cde7666]
  420b76:	xchg   ebp,eax
  420b77:	pop    ss
  420b78:	mov    edi,0x6dbb7ed1
  420b7d:	mov    DWORD PTR [ebx+0x24a3e48c],ecx
  420b83:	das    
  420b84:	push   ecx
  420b85:	fdiv   DWORD PTR [ebx+edx*8+0x48b68549]
  420b8c:	test   DWORD PTR [eax+0x3],esi
  420b8f:	dec    edi
  420b90:	cmp    al,0x13
  420b92:	push   ebp
  420b93:	xchg   ecx,eax
  420b94:	int    0x9a
  420b96:	jbe    0x420c06
  420b98:	pop    ecx
  420b99:	inc    edi
  420b9a:	xchg   DWORD PTR [ebx],ebp
  420b9c:	lds    edx,FWORD PTR [eax+0x0]
  420b9f:	cmp    dl,BYTE PTR [ecx]
  420ba1:	stc    
  420ba2:	xchg   edx,eax
  420ba3:	dec    eax
  420ba4:	out    dx,eax
  420ba5:	fidivr WORD PTR [ecx]
  420ba7:	mov    dh,0xcc
  420ba9:	add    ch,al
  420bab:	sbb    dl,dl
  420bad:	adc    dh,BYTE PTR [esi+0x5ca956bf]
  420bb3:	hlt    
  420bb4:	bound  edx,QWORD PTR [edx+0x64]
  420bb7:	jns    0x420bee
  420bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bba:	add    BYTE PTR [eax+edx*4+0x43ceb600],bh
  420bc1:	fisttp QWORD PTR [ecx+0x71]
  420bc4:	pusha  
  420bc5:	and    DWORD PTR [ebx+0xd012a63],esi
  420bcb:	scas   eax,DWORD PTR es:[edi]
  420bcc:	ins    BYTE PTR es:[edi],dx
  420bcd:	mov    ah,0x86
  420bcf:	loop   0x420bec
  420bd1:	or     eax,0x47306751
  420bd6:	inc    ebp
  420bd7:	ins    DWORD PTR es:[edi],dx
  420bd8:	push   cs
  420bd9:	xor    esp,DWORD PTR [eax+edi*8]
  420bdc:	ins    BYTE PTR es:[edi],dx
  420bdd:	push   edx
  420bde:	xor    DWORD PTR [ebx-0x15],edx
  420be1:	cmp    eax,0x4aad04d5
  420be6:	xchg   ebp,eax
  420be7:	sbb    eax,0x7c8d471b
  420bec:	dec    ecx
  420bed:	div    DWORD PTR [ebp+0x47cf8a73]
  420bf3:	push   ebp
  420bf4:	int3   
  420bf5:	jne    0x420c66
  420bf7:	popf   
  420bf8:	xor    eax,0x9b6bc1e1
  420bfd:	jb     0x420be6
  420bff:	jnp    0x420ba6
  420c01:	frstor [edx+0x1a]
  420c04:	clc    
  420c05:	inc    esi
  420c06:	cmp    al,0x18
  420c08:	mov    ecx,0xf1d9d22c
  420c0d:	stc    
  420c0e:	fiadd  DWORD PTR [edx-0x2a]
  420c11:	mov    edi,DWORD PTR ds:0x9a0f0e32
  420c17:	test   eax,0xe7b89c7b
  420c1c:	ret    
  420c1d:	clc    
  420c1e:	cmp    al,0xcb
  420c20:	push   esi
  420c21:	add    eax,0x948af9f2
  420c26:	inc    esi
  420c27:	(bad)  
  420c28:	not    BYTE PTR [esi+0x4c]
  420c2b:	cmp    BYTE PTR [esi+0x29],bh
  420c2e:	sbb    DWORD PTR [bp+si],eax
  420c31:	in     al,dx
  420c32:	into   
  420c33:	dec    edx
  420c34:	sub    BYTE PTR [esi+0x978774f],bh
  420c3a:	clc    
  420c3b:	xor    dl,BYTE PTR [eax+0x5e24d177]
  420c41:	ds sub al,0x6c
  420c44:	iret   
  420c45:	fdiv   DWORD PTR [edi+0x48]
  420c48:	test   BYTE PTR [ebx+0x3],ah
  420c4b:	adc    BYTE PTR [ebp+0x7cac0e51],ch
  420c51:	cdq    
  420c52:	ins    BYTE PTR es:[edi],dx
  420c53:	icebp  
  420c54:	es rcr edx,1
  420c57:	mov    al,ds:0x85cd74b8
  420c5c:	repz pop esi
  420c5e:	xor    BYTE PTR [eax-0x34],bh
  420c61:	add    ebp,edi
  420c63:	fs cdq 
  420c65:	jne    0x420c53
  420c67:	jns    0x420c09
  420c69:	int    0x54
  420c6b:	pop    ds
  420c6c:	out    dx,eax
  420c6d:	add    BYTE PTR [eax],al
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x281a47a9]
  420c80:	xchg   DWORD PTR [edi+0x186a5],ebp
  420c86:	repz add al,0x0
  420c89:	add    BYTE PTR [ebx+eiz*8],al
  420c8c:	adc    BYTE PTR [edi],bl
  420c8e:	mov    ch,0x84
  420c90:	jnp    0x420c72
  420c92:	sbb    DWORD PTR [ecx],esp
  420c94:	aas    
  420c95:	and    BYTE PTR [edx-0x1a],cl
  420c98:	jno    0x420cc7
  420c9a:	rcr    BYTE PTR [ebp-0x5b30642b],cl
  420ca0:	rcr    BYTE PTR ds:0x2c9d5a78,0xec
  420ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ca8:	mov    ds:0x10419b7c,al
  420cad:	rol    DWORD PTR [di-0x32],0x80
  420cb2:	lds    edx,FWORD PTR [ebp+edx*4+0x2908d591]
  420cb9:	mov    bh,0x3b
  420cbb:	sub    esp,DWORD PTR [eax-0x5f]
  420cbe:	out    dx,eax
  420cbf:	cdq    
  420cc0:	lds    ebp,FWORD PTR [ebp+0x60ef5f11]
  420cc6:	xchg   ecx,eax
  420cc7:	xor    dh,BYTE PTR [edi]
  420cc9:	mov    BYTE PTR [ecx+0x58],0x7a
  420ccd:	push   esp
  420cce:	ins    DWORD PTR es:[edi],dx
  420ccf:	dec    ecx
  420cd0:	bound  esi,QWORD PTR [esi]
  420cd2:	std    
  420cd3:	adc    al,0xd9
  420cd5:	fucom  st(2)
  420cd7:	pop    eax
  420cd8:	dec    ebx
  420cd9:	bound  edi,QWORD PTR [edx+0x6cf31f92]
  420cdf:	sti    
  420ce0:	xchg   esp,eax
  420ce1:	pop    ss
  420ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ce3:	mov    bh,0xc5
  420ce5:	(bad)  
  420ce6:	xor    eax,0x2c14226e
  420ceb:	in     al,0x5b
  420ced:	ins    DWORD PTR es:[edi],dx
  420cee:	adc    al,0x3c
  420cf0:	aad    0x95
  420cf2:	in     eax,0xab
  420cf4:	loope  0x420cf1
  420cf6:	push   cs
  420cf7:	shr    BYTE PTR [eax],1
  420cf9:	and    DWORD PTR [edi-0x4a2b6d33],esp
  420cff:	ss out 0xb4,eax
  420d02:	push   0xf048ee06
  420d07:	mov    bl,0x57
  420d09:	dec    eax
  420d0a:	sbb    esi,edx
  420d0c:	mov    dh,0x20
  420d0e:	jg     0x420d7c
  420d10:	ror    bh,0x44
  420d13:	pop    ebp
  420d14:	pusha  
  420d15:	pop    edx
  420d16:	sbb    eax,0x210c9992
  420d1b:	inc    ebp
  420d1c:	sub    al,0x37
  420d1e:	mov    eax,ds:0x1841b9f0
  420d23:	push   eax
  420d24:	push   0xffffffe5
  420d26:	push   cs
  420d27:	mov    esp,0xe32c6c71
  420d2c:	je     0x420d5c
  420d2e:	xchg   ebp,eax
  420d2f:	aaa    
  420d30:	add    eax,0xfe4d5bd2
  420d35:	aad    0x36
  420d37:	dec    edi
  420d38:	inc    esi
  420d39:	add    BYTE PTR [edi-0x4457afd1],0x26
  420d40:	ret    
  420d41:	mov    ds:0x7a198725,eax
  420d46:	ja     0x420cc9
  420d48:	aad    0x1e
  420d4a:	out    0x2c,eax
  420d4c:	cmp    eax,DWORD PTR [edi]
  420d4e:	pop    esi
  420d4f:	popa   
  420d50:	imul   edx,DWORD PTR [ebp+0x578b16a3],0x65
  420d57:	jmp    0xb66cda05
  420d5c:	ss js  0x420dca
  420d5f:	pop    ecx
  420d60:	out    dx,eax
  420d61:	jb     0x420ce6
  420d63:	jecxz  0x420cfc
  420d65:	out    dx,al
  420d66:	xchg   edx,eax
  420d67:	mov    BYTE PTR [edx-0x74],0xdb
  420d6b:	sub    BYTE PTR [ebx+0x16a5d8e7],dh
  420d71:	je     0x420dbf
  420d73:	(bad)  
  420d74:	jecxz  0x420da5
  420d76:	push   esp
  420d77:	(bad)  
  420d78:	inc    esi
  420d79:	mov    al,0xe2
  420d7b:	addr16 jnp 0x420d17
  420d7e:	and    DWORD PTR [eax+eax*4-0x57e82036],0x2f
  420d86:	pop    ss
  420d87:	fs retf 0x44ba
  420d8b:	pop    ebp
  420d8c:	sbb    bl,BYTE PTR [ecx]
  420d8e:	pop    eax
  420d8f:	sub    ecx,DWORD PTR [esi-0x12]
  420d92:	faddp  st(2),st
  420d94:	int3   
  420d95:	pusha  
  420d96:	jge    0x420d40
  420d98:	mov    bh,0x9e
  420d9a:	nop
  420d9b:	mov    ebx,0xc6cce552
  420da0:	push   edi
  420da1:	test   ebp,0xfb504da5
  420da7:	stc    
  420da8:	stc    
  420da9:	sub    DWORD PTR [edx+0x64],0xfffffffa
  420dad:	cld    
  420dae:	cmp    al,0x51
  420db0:	aas    
  420db1:	shr    DWORD PTR [eax],0x87
  420db4:	adc    eax,0x2bcedef3
  420db9:	je     0x420d5d
  420dbb:	test   al,0x2
  420dbd:	adc    esp,DWORD PTR [eax]
  420dbf:	out    dx,eax
  420dc0:	(bad)  
  420dc1:	cmp    DWORD PTR [edx-0x32],esp
  420dc4:	sub    esi,DWORD PTR [esi]
  420dc6:	daa    
  420dc7:	stos   DWORD PTR es:[edi],eax
  420dc8:	mov    bl,0xe3
  420dca:	call   0x19d4db7b
  420dcf:	lahf   
  420dd0:	call   0xd2e0:0xb471c1d8
  420dd7:	jle    0x420def
  420dd9:	int    0x5c
  420ddb:	dec    ecx
  420ddc:	jns    0x420d82
  420dde:	pop    edx
  420ddf:	pusha  
  420de0:	dec    ecx
  420de1:	shr    DWORD PTR [edx],cl
  420de3:	xchg   ebp,eax
  420de4:	jge    0x420d8e
  420de6:	dec    edi
  420de7:	xor    bl,BYTE PTR [ecx+0x58]
  420dea:	and    esi,esp
  420dec:	cmp    esp,ebp
  420dee:	aam    0xb2
  420df0:	inc    ecx
  420df1:	test   DWORD PTR [esi],0xb2b1771d
  420df7:	stos   DWORD PTR es:[edi],eax
  420df8:	cmp    BYTE PTR [edi+0x2a81f0b0],0x83
  420dff:	jns    0x420d9e
  420e01:	mov    edx,0x19a822ec
  420e06:	cli    
  420e07:	inc    ecx
  420e08:	inc    DWORD PTR [edx-0x75b1fd6c]
  420e0e:	sub    edx,DWORD PTR [edi+0x2c]
  420e11:	(bad)  
  420e12:	(bad)  
  420e14:	fs stos DWORD PTR es:[edi],eax
  420e16:	pop    ds
  420e17:	add    ebp,DWORD PTR [eax+0x76]
  420e1a:	adc    ah,0xa8
  420e1d:	mov    al,0x2d
  420e1f:	dec    edx
  420e20:	add    ecx,DWORD PTR [eax-0x35aba566]
  420e26:	push   esi
  420e27:	aad    0x2d
  420e29:	mov    ebp,0x59b3fb74
  420e2e:	sbb    eax,0x776e1725
  420e33:	mov    dl,0xd3
  420e35:	imul   esi,esi,0x994ce73c
  420e3b:	stc    
  420e3c:	add    esp,ebx
  420e3e:	inc    esi
  420e3f:	lds    edx,FWORD PTR [ebx]
  420e41:	or     ecx,esp
  420e43:	and    al,0x4a
  420e45:	xlat   BYTE PTR ds:[ebx]
  420e46:	adc    al,0x3
  420e48:	or     DWORD PTR [ecx+ecx*8+0x6d95005f],esp
  420e4f:	mov    esp,ebp
  420e51:	push   ds
  420e52:	push   0x96255b15
  420e57:	and    al,ch
  420e59:	inc    eax
  420e5a:	xor    bh,BYTE PTR [ebp+0x185ede5e]
  420e60:	clc    
  420e61:	push   0x91008802
  420e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e67:	shl    BYTE PTR [ebx+0x4342f2d5],0xf0
  420e6e:	retf   0xf2b0
  420e71:	xchg   edx,eax
  420e72:	enter  0x3fd3,0xa6
  420e76:	push   ebp
  420e77:	test   eax,0x62d0ba60
  420e7c:	inc    ecx
  420e7d:	dec    ecx
  420e7e:	push   0xffffffd4
  420e80:	xchg   ecx,eax
  420e81:	xchg   edi,eax
  420e82:	dec    DWORD PTR [ecx+0x28]
  420e85:	mov    esi,0xc8f9dedb
  420e8a:	repnz arpl WORD PTR [esi+0x44],cx
  420e8e:	imul   edi,DWORD PTR [ebp-0x272386e],0x6d
  420e95:	xor    BYTE PTR [edi-0x16],cl
  420e98:	mul    BYTE PTR [ebx]
  420e9a:	sar    BYTE PTR [edi+esi*8-0x6b3b11f3],0x4a
  420ea2:	sub    eax,0x61a7ca71
  420ea7:	pop    ebp
  420ea8:	xor    al,0x55
  420eaa:	cmp    BYTE PTR [ebp+0x7e],cl
  420ead:	test   DWORD PTR [esi+0x19],ecx
  420eb0:	jb     0x420e56
  420eb2:	cdq    
  420eb3:	dec    esp
  420eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb5:	les    edi,FWORD PTR [eax]
  420eb7:	dec    esi
  420eb8:	lahf   
  420eb9:	adc    al,0xa
  420ebb:	and    BYTE PTR [ebx+0x60aafab1],ch
  420ec1:	dec    esp
  420ec2:	dec    edx
  420ec3:	imul   ebp,DWORD PTR [ebp+0x12],0xe6ccded2
  420eca:	sub    al,0x15
  420ecc:	adc    BYTE PTR [esi],al
  420ece:	or     al,0xf2
  420ed0:	mov    ah,0xfc
  420ed2:	lds    esi,FWORD PTR ds:0xef428882
  420ed8:	test   edx,edx
  420eda:	cmp    cl,ah
  420edc:	jne    0x420eec
  420ede:	retf   
  420edf:	or     ebp,DWORD PTR [esi-0x5f]
  420ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee3:	sub    al,dh
  420ee5:	and    bh,BYTE PTR [edx+esi*2]
  420ee8:	cmp    DWORD PTR [ecx],edi
  420eea:	pop    ss
  420eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eec:	push   0x77
  420eee:	sar    DWORD PTR [ecx+0x66125759],1
  420ef4:	sar    BYTE PTR [ecx+0x3c1f7370],1
  420efa:	push   ebp
  420efb:	gs dec ebp
  420efd:	test   eax,0xae5a202b
  420f02:	gs out 0x29,al
  420f05:	inc    ebp
  420f06:	in     eax,0xf0
  420f08:	jp     0x420ecb
  420f0a:	lahf   
  420f0b:	push   esi
  420f0c:	dec    esp
  420f0d:	aad    0x4b
  420f0f:	clc    
  420f10:	adc    eax,0xe35de7e
  420f15:	fcos   
  420f17:	xchg   DWORD PTR [ebx-0x4b],ecx
  420f1a:	mov    edi,0x3a9a549b
  420f1f:	mov    ecx,fs
  420f21:	mov    bl,0xd
  420f23:	in     eax,dx
  420f24:	mov    ebp,0x4fac2cff
  420f29:	cmp    al,0xd4
  420f2b:	pop    eax
  420f2c:	adc    al,0xe8
  420f2e:	sahf   
  420f2f:	aas    
  420f30:	cmp    al,0x19
  420f32:	stos   BYTE PTR es:[edi],al
  420f33:	mov    bh,dl
  420f35:	imul   ebx,DWORD PTR [edx],0xffffff8c
  420f38:	es push edi
  420f3a:	sub    BYTE PTR [edi],dl
  420f3c:	sub    eax,0xabeae7a1
  420f41:	push   0xe9799c24
  420f46:	inc    edi
  420f47:	call   0x2e34:0xc6344639
  420f4e:	bound  esp,QWORD PTR [eax-0x31]
  420f51:	cmp    al,0x3a
  420f53:	gs (bad) 
  420f56:	icebp  
  420f57:	adc    bl,bl
  420f59:	cmp    DWORD PTR [ecx],esi
  420f5b:	stos   DWORD PTR es:[edi],eax
  420f5c:	cwde   
  420f5d:	push   esp
  420f5e:	ss inc ebp
  420f60:	jae    0x420f80
  420f62:	add    eax,0x94082707
  420f67:	add    dh,bl
  420f69:	(bad)  
  420f6a:	(bad)  [eax-0x2c2c9714]
  420f70:	add    ecx,DWORD PTR ds:0x8b67521c
  420f76:	int    0xd2
  420f78:	out    0x9f,eax
  420f7a:	inc    edi
  420f7b:	inc    esp
  420f7c:	in     al,dx
  420f7d:	rcl    BYTE PTR [ebx+0x72ba27c0],cl
  420f83:	mov    edi,0xe1f952
  420f88:	ror    DWORD PTR [ebx+0x1f3b82dd],0x96
  420f8f:	bound  esp,QWORD PTR [esi-0x6]
  420f92:	mov    ds:0xde47794e,al
  420f97:	mov    ch,ah
  420f99:	call   0x480bbb44
  420f9e:	jne    0x420f75
  420fa0:	sbb    eax,0x6efb16ad
  420fa5:	or     DWORD PTR [esi-0xabddaf0],eax
  420fab:	test   DWORD PTR [edi],esi
  420fad:	cdq    
  420fae:	add    al,BYTE PTR [esi]
  420fb0:	in     eax,dx
  420fb1:	mov    DWORD PTR [edi-0xb],esi
  420fb4:	ror    BYTE PTR [esi-0x20],0x2c
  420fb8:	cmp    eax,0x3098a81a
  420fbd:	pop    es
  420fbe:	pop    ds
  420fbf:	xchg   ecx,eax
  420fc0:	sahf   
  420fc1:	out    0x3c,eax
  420fc3:	ret    
  420fc4:	dec    edi
  420fc5:	clc    
  420fc6:	xchg   edx,eax
  420fc7:	fisub  DWORD PTR [ebx+eiz*4]
  420fca:	xchg   dl,bl
  420fcc:	loopne 0x420fc9
  420fce:	mov    DWORD PTR [edi-0x5a093574],eax
  420fd4:	div    DWORD PTR [ecx-0x3a]
  420fd7:	push   0xca4c692e
  420fdc:	xchg   ecx,eax
  420fdd:	mov    ds,WORD PTR [esi+ebp*1-0x35]
  420fe1:	dec    edi
  420fe2:	pop    esp
  420fe3:	push   ecx
  420fe4:	aad    0x61
  420fe6:	rcr    bl,0x69
  420fe9:	inc    eax
  420fea:	ret    0xedc7
  420fed:	pop    ds
  420fee:	shl    BYTE PTR [ebx-0x6f],0x6a
  420ff2:	push   ecx
  420ff3:	or     DWORD PTR [edx+0x3f],esi
  420ff6:	push   0xd
  420ff8:	or     esi,0xe092daed
  420ffe:	sub    al,BYTE PTR [ebx]
  421000:	mov    WORD PTR [edx*1+0x1e913e2c],gs
  421007:	jmp    0xea2:0xc53083
  42100e:	pop    ss
  42100f:	sti    
  421010:	add    eax,0xbcee0e2
  421015:	lea    eax,[edx-0x80]
  421018:	dec    esi
  421019:	and    dh,BYTE PTR cs:[eax-0x76]
  42101d:	fdivr  DWORD PTR [esi]
  42101f:	ret    
  421020:	test   DWORD PTR [edx-0x12],ecx
  421023:	adc    edx,DWORD PTR [edx]
  421025:	test   DWORD PTR [edi],0xa60c38f8
  42102b:	cmp    edi,esi
  42102d:	ins    BYTE PTR es:[edi],dx
  42102e:	ja     0x42103e
  421030:	loop   0x421043
  421032:	pop    ebp
  421033:	or     eax,0x51703823
  421038:	jno    0x42106f
  42103a:	dec    ecx
  42103b:	dec    ebx
  42103c:	dec    ebp
  42103d:	repz mul BYTE PTR [ecx]
  421040:	adc    ecx,DWORD PTR [ecx]
  421042:	xchg   BYTE PTR [edi+0x2bff4a48],dh
  421048:	mov    ss,WORD PTR [eax-0x2a076f9a]
  42104e:	icebp  
  42104f:	jnp    0x421068
  421051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421052:	dec    edx
  421053:	xor    edi,eax
  421055:	mov    al,ds:0xe778f2ef
  42105a:	xchg   ebx,eax
  42105b:	in     al,0xb9
  42105d:	cmp    edi,DWORD PTR [esi]
  42105f:	mov    cl,0x97
  421061:	pop    ecx
  421062:	(bad)  
  421063:	cdq    
  421064:	in     al,dx
  421065:	aam    0x32
  421067:	arpl   WORD PTR [edi-0x1753f9f0],bp
  42106d:	inc    eax
  42106e:	push   edx
  42106f:	je     0x4210c6
  421071:	inc    edx
  421072:	ja     0x4210ca
  421074:	jne    0x4210ae
  421076:	ss mov bl,0xf0
  421079:	pushf  
  42107a:	push   ds
  42107b:	rcl    DWORD PTR ds:0x754f6698,0x4e
  421082:	mov    ds:0x6b445e64,al
  421087:	pop    edi
  421088:	jnp    0x421091
  42108a:	mov    eax,0x36a5c9d4
  42108f:	cmp    BYTE PTR [ebp+0x4570a982],dh
  421095:	js     0x421113
  421097:	(bad)  
  421098:	(bad)  
  42109a:	call   0x433f:0xeaa0296c
  4210a1:	push   DWORD PTR [edx+ebx*1]
  4210a4:	adc    al,dl
  4210a6:	and    bh,cl
  4210a8:	cwde   
  4210a9:	sbb    DWORD PTR [ecx+0x3],ebx
  4210ac:	or     BYTE PTR [edi],dh
  4210ae:	ins    DWORD PTR es:[edi],dx
  4210af:	loope  0x42111f
  4210b1:	adc    BYTE PTR [ebp+ebx*2+0x37],bl
  4210b5:	adc    cl,BYTE PTR [esi]
  4210b7:	add    eax,ecx
  4210b9:	pop    esp
  4210ba:	adc    BYTE PTR [ebp+0x44850f70],cl
  4210c0:	std    
  4210c1:	inc    ebx
  4210c2:	cld    
  4210c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c4:	iret   
  4210c5:	add    eax,0x55f216e8
  4210ca:	ret    
  4210cb:	inc    ebx
  4210cc:	shl    cl,1
  4210ce:	dec    edx
  4210cf:	frstor [edx+edx*2-0x5a45f78d]
  4210d6:	or     BYTE PTR ds:0xab9010a8,dh
  4210dc:	sub    DWORD PTR [di+0x741c],edi
  4210e1:	cmp    eax,0x71462dd5
  4210e6:	fwait
  4210e7:	push   ebp
  4210e8:	int3   
  4210e9:	fcomp  QWORD PTR [edi+edi*1+0x60]
  4210ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210ee:	and    BYTE PTR [edx],al
  4210f0:	push   edi
  4210f1:	call   DWORD PTR [edx+0x4c]
  4210f4:	into   
  4210f5:	scas   al,BYTE PTR es:[edi]
  4210f6:	loope  0x42112b
  4210f8:	mov    ds:0xe51cf6ae,al
  4210fd:	mov    ecx,0x3b16cb07
  421102:	pop    edi
  421103:	das    
  421104:	inc    edi
  421105:	mov    cl,0x1c
  421107:	fwait
  421108:	outs   dx,DWORD PTR ds:[esi]
  421109:	in     al,0x89
  42110b:	fmul   DWORD PTR [ebp-0x589a4632]
  421111:	push   esp
  421112:	fwait
  421113:	(bad)  
  421114:	mov    BYTE PTR [eax+0x2624c598],al
  42111a:	test   DWORD PTR [eax+ebp*8],ebp
  42111d:	test   eax,0x687fb25f
  421122:	stos   DWORD PTR es:[edi],eax
  421123:	jne    0x421144
  421125:	lds    esi,FWORD PTR [ecx+0x44976833]
  42112b:	cdq    
  42112c:	pop    eax
  42112d:	mov    ds:0xaf260f8e,al
  421132:	adc    eax,0xd5fb9e9e
  421137:	fnstsw WORD PTR [edi+0x4e]
  42113a:	pop    es
  42113b:	mov    ds:0x941f7372,eax
  421140:	push   0xffffffe2
  421142:	mov    edi,0xd26f2f90
  421147:	sub    cl,BYTE PTR [ebx]
  421149:	sti    
  42114a:	xor    esp,DWORD PTR ds:0x8a651b3a
  421150:	mov    BYTE PTR [edx],bl
  421152:	rol    BYTE PTR [esi],cl
  421154:	cmp    esi,DWORD PTR [ebx+0x1d8195ec]
  42115a:	mov    bl,0x1e
  42115c:	dec    esp
  42115d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42115e:	(bad)  
  42115f:	push   eax
  421160:	scas   al,BYTE PTR es:[edi]
  421161:	in     eax,dx
  421162:	enter  0x204f,0xe
  421166:	sar    DWORD PTR [ebp+0x1d379185],cl
  42116c:	add    BYTE PTR [edx-0x3a45566],dl
  421172:	or     dl,BYTE PTR [esp+ecx*1-0x2c]
  421176:	adc    DWORD PTR ds:0xbdc0fc2a,ebx
  42117c:	mov    bl,0x0
  42117e:	add    BYTE PTR [eax],al
  421180:	add    BYTE PTR [eax],al
  421182:	xchg   edi,ecx
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    dh,bl
  42118f:	xchg   dh,bh
  421191:	enter  0x8b98,0x1
  421195:	add    bl,dh
  421197:	add    al,0x0
  421199:	add    ch,ch
  42119b:	repz (bad) 
  42119d:	xchg   esp,eax
  42119e:	inc    ebp
  42119f:	outs   dx,BYTE PTR ds:[esi]
  4211a0:	stc    
  4211a1:	fwait
  4211a2:	jbe    0x42119a
  4211a4:	call   0xa4653cf1
  4211a9:	ins    DWORD PTR es:[edi],dx
  4211aa:	or     bh,BYTE PTR [ebx]
  4211ac:	cmp    ecx,DWORD PTR [eax-0x42]
  4211af:	mov    BYTE PTR [esi-0x2],ch
  4211b2:	xchg   BYTE PTR [ebx+0x68e4c274],cl
  4211b8:	mov    cl,0x20
  4211ba:	clc    
  4211bb:	sbb    edi,DWORD PTR [esi+0x28]
  4211be:	rcr    DWORD PTR [edi+0x6cad1057],cl
  4211c4:	sbb    al,BYTE PTR [esi]
  4211c6:	push   ebx
  4211c7:	mov    dl,BYTE PTR [esi+eiz*8]
  4211ca:	fwait
  4211cb:	int3   
  4211cc:	pop    ebp
  4211cd:	push   ebx
  4211ce:	into   
  4211cf:	sahf   
  4211d0:	call   0x1682:0xc2bb0f46
  4211d7:	mov    ebp,0xd61701ce
  4211dc:	mov    ebp,0x1fafa436
  4211e1:	ficomp DWORD PTR [eax+0x544a7c91]
  4211e7:	xchg   ebp,eax
  4211e8:	pop    ds
  4211e9:	xlat   BYTE PTR ds:[ebx]
  4211ea:	mov    dh,0x92
  4211ec:	cwde   
  4211ed:	sub    eax,0xc7305993
  4211f2:	retf   0x5805
  4211f5:	in     al,dx
  4211f6:	sbb    cl,cl
  4211f8:	xchg   ebx,eax
  4211f9:	xor    al,0x6e
  4211fb:	cmp    al,0x21
  4211fd:	sbb    al,BYTE PTR [edx+0x52979bd3]
  421203:	sbb    ax,0x389d
  421207:	xor    ecx,edx
  421209:	push   ebp
  42120a:	stos   BYTE PTR es:[edi],al
  42120b:	pusha  
  42120c:	sub    DWORD PTR [edx-0x48],0x44
  421210:	enter  0x5e34,0xf8
  421214:	ret    0x6e5b
  421217:	(bad)  
  421218:	in     al,0x80
  42121a:	imul   esp,DWORD PTR [ebx-0x26d71d6d],0xffffffcb
  421221:	add    eax,0xb8badf3f
  421226:	push   0xffffffea
  421228:	cmp    eax,0xfa881d05
  42122d:	sub    BYTE PTR [ebp-0x75397324],bl
  421233:	(bad)  
  421235:	inc    esi
  421236:	push   ecx
  421237:	cwde   
  421238:	jns    0x421241
  42123a:	jp     0x4212b3
  42123c:	outs   dx,DWORD PTR ds:[esi]
  42123d:	mov    bl,0xc9
  42123f:	xor    BYTE PTR [ecx],bl
  421241:	fisttp QWORD PTR [ebx+0xa]
  421244:	sbb    eax,0xbe621462
  421249:	dec    ebx
  42124a:	aaa    
  42124b:	xor    DWORD PTR [edx-0x68685ea0],ecx
  421251:	sbb    dl,0x30
  421254:	pop    esp
  421255:	retf   0xc54b
  421258:	sbb    ebx,esp
  42125a:	test   DWORD PTR ds:0xe667327a,0x60e022d
  421264:	fsub   DWORD PTR [eax-0x83b0c6c]
  42126a:	xor    cl,BYTE PTR [ecx-0x708319b9]
  421270:	sbb    BYTE PTR [ecx-0x4777ac8f],cl
  421276:	test   dh,bh
  421278:	das    
  421279:	call   DWORD PTR [eax]
  42127b:	cld    
  42127c:	xor    DWORD PTR [esi],edx
  42127e:	js     0x421253
  421280:	xchg   ebx,eax
  421281:	mov    eax,0xe09a22a5
  421286:	fiadd  WORD PTR [edi-0x1f95f31a]
  42128c:	mov    bl,0xed
  42128e:	in     eax,0x21
  421290:	jge    0x4212aa
  421292:	inc    esp
  421293:	sbb    al,0xa4
  421295:	int3   
  421296:	sahf   
  421297:	cld    
  421298:	xlat   BYTE PTR ds:[ebx]
  421299:	xor    al,0x70
  42129b:	arpl   WORD PTR [edx+0x19],dx
  42129e:	fimul  DWORD PTR [eax+0x7c]
  4212a1:	test   DWORD PTR [esi],esp
  4212a3:	aaa    
  4212a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a5:	jmp    0xd955:0xed2aaf9d
  4212ac:	xor    al,0x66
  4212ae:	and    DWORD PTR [edx-0x742ae713],0xa0d5a578
  4212b8:	xchg   edx,eax
  4212b9:	sbb    DWORD PTR [ecx+0x5ac1d17],eax
  4212bf:	dec    ebx
  4212c0:	mov    al,ds:0xd2923841
  4212c5:	sub    eax,0x9a2ca7ca
  4212ca:	icebp  
  4212cb:	dec    ebx
  4212cc:	inc    ebp
  4212cd:	xor    edi,DWORD PTR ds:0x3ad3dea
  4212d3:	stc    
  4212d4:	cdq    
  4212d5:	repz xchg ecx,eax
  4212d7:	push   ebx
  4212d8:	mov    eax,ds:0x1133be8b
  4212dd:	push   edx
  4212de:	je     0x42126f
  4212e0:	addr16 add edx,ebx
  4212e3:	add    ecx,eax
  4212e5:	add    ecx,eax
  4212e7:	(bad)  [ebp-0x74]
  4212ea:	adc    al,0xae
  4212ec:	lahf   
  4212ed:	jg     0x42133a
  4212ef:	int3   
  4212f0:	jle    0x4212bf
  4212f2:	add    cl,BYTE PTR [ebx+edi*8]
  4212f5:	outs   dx,DWORD PTR ds:[esi]
  4212f6:	push   cs
  4212f7:	xchg   ebp,eax
  4212f8:	rcl    BYTE PTR [eax],1
  4212fa:	jl     0x42130a
  4212fc:	push   esp
  4212fd:	sahf   
  4212fe:	inc    edx
  4212ff:	pop    edx
  421300:	shl    BYTE PTR [edi],1
  421302:	lahf   
  421303:	outs   dx,BYTE PTR gs:[esi]
  421305:	jnp    0x42136d
  421307:	mov    bl,0x75
  421309:	sbb    cl,BYTE PTR [ebx-0x63]
  42130c:	add    ebp,DWORD PTR [edi-0x37]
  42130f:	fistp  WORD PTR [ecx]
  421311:	jmp    0x3b41:0x37347403
  421318:	into   
  421319:	mov    edx,0xf87aa1e1
  42131e:	rol    ecx,1
  421320:	push   ss
  421321:	mov    edi,0xd0f44185
  421326:	or     DWORD PTR [ecx+edx*8-0x5a],esi
  42132a:	jns    0x4212b0
  42132c:	pop    edi
  42132d:	pop    ebx
  42132e:	stc    
  42132f:	test   eax,0x29ca268d
  421334:	mov    edx,0x9e0af475
  421339:	and    al,0xea
  42133b:	lahf   
  42133c:	mov    ebp,0x1aa720ca
  421341:	push   esp
  421342:	jecxz  0x42139c
  421344:	pop    ds
  421345:	and    BYTE PTR [edx+0x22d2082e],bh
  42134b:	pushf  
  42134c:	inc    esp
  42134d:	push   cs
  42134e:	add    al,0x80
  421350:	popa   
  421351:	add    dl,dl
  421353:	loopne 0x4213b1
  421355:	xor    eax,0x6462bdc1
  42135a:	jmp    0x42136e
  42135c:	sar    DWORD PTR [ecx+0x23],cl
  42135f:	fidiv  WORD PTR [edi+esi*4+0xf]
  421363:	cmp    esp,DWORD PTR ss:[edx+ecx*2+0x7a00d8da]
  42136b:	sbb    esp,edi
  42136d:	mov    ecx,0x1dde287b
  421372:	or     dh,BYTE PTR [ecx]
  421374:	leave  
  421375:	pop    ds
  421376:	sub    edx,DWORD PTR [esi]
  421378:	(bad)  
  421379:	mov    bh,0x99
  42137b:	sbb    ecx,DWORD PTR [ebp-0x4e]
  42137e:	test   eax,0x590ffb69
  421383:	imul   esp,DWORD PTR ds:0xfab27355,0xffffffb6
  42138a:	(bad)  
  42138b:	pushf  
  42138c:	and    al,0xbe
  42138e:	xor    dl,BYTE PTR [ebx-0x409a09be]
  421394:	sub    dh,0xd5
  421397:	sbb    eax,DWORD PTR [ecx-0x6304a123]
  42139d:	outs   dx,BYTE PTR ds:[esi]
  42139e:	aam    0x56
  4213a0:	call   0xbce2aded
  4213a5:	ja     0x4213a0
  4213a7:	ret    
  4213a8:	jns    0x421361
  4213aa:	sti    
  4213ab:	out    0x3b,eax
  4213ad:	or     BYTE PTR [ecx-0x28d1f9e2],ch
  4213b3:	call   0xae16:0x2ed9d1df
  4213ba:	fstp   DWORD PTR [eax-0x2ea292ed]
  4213c0:	(bad)  
  4213c1:	mov    eax,0x199444ee
  4213c6:	repnz and al,0xa2
  4213c9:	jecxz  0x4213a3
  4213cb:	clc    
  4213cc:	mov    bh,0x70
  4213ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213cf:	xor    BYTE PTR [ebx-0x726af864],dl
  4213d5:	and    BYTE PTR [ecx+0x1d],cl
  4213d8:	scas   eax,DWORD PTR es:[edi]
  4213d9:	cs jp  0x421399
  4213dc:	scas   eax,DWORD PTR es:[edi]
  4213dd:	xchg   esp,eax
  4213de:	addr16 dec edx
  4213e0:	xor    al,0x25
  4213e2:	imul   edx,DWORD PTR [ebp+0xd45ffba],0x8e969083
  4213ec:	dec    ecx
  4213ed:	inc    edi
  4213ee:	icebp  
  4213ef:	mov    bl,0xe5
  4213f1:	in     eax,0x18
  4213f3:	push   ebx
  4213f4:	fs into 
  4213f6:	(bad)  
  4213f7:	cmp    bl,BYTE PTR [edi+edx*2+0x776743f7]
  4213fe:	nop
  4213ff:	jbe    0x421427
  421401:	ins    DWORD PTR es:[edi],dx
  421402:	ins    BYTE PTR es:[edi],dx
  421403:	loopne 0x42145a
  421405:	stos   DWORD PTR es:[edi],eax
  421406:	aad    0xaf
  421408:	das    
  421409:	inc    ecx
  42140a:	inc    esp
  42140b:	das    
  42140c:	pop    esi
  42140d:	test   cl,cl
  42140f:	mov    al,0x56
  421411:	ins    DWORD PTR es:[edi],dx
  421412:	stos   BYTE PTR es:[edi],al
  421413:	jg     0x4213a4
  421415:	add    esi,0xe0673000
  42141b:	mov    edx,0xf9245c42
  421420:	mov    gs,WORD PTR [edx+0xd]
  421423:	lock xor DWORD PTR [ecx],0xffffffa6
  421427:	adc    ebx,edi
  421429:	(bad)  
  42142a:	fdiv   QWORD PTR [eax-0x16]
  42142d:	fchs   
  42142f:	in     eax,0x64
  421431:	jb     0x421467
  421433:	out    dx,eax
  421434:	push   ebp
  421435:	mov    esi,esp
  421437:	push   0xd3a4155b
  42143c:	xchg   DWORD PTR [ecx-0x57],esi
  42143f:	sbb    al,0x9c
  421441:	in     eax,0x6e
  421443:	or     BYTE PTR [esi+esi*8],0x97
  421447:	imul   edi,DWORD PTR [ebx],0xfffffff0
  42144a:	inc    eax
  42144b:	cdq    
  42144c:	repnz hlt 
  42144e:	imul   esi,DWORD PTR [ebp+0x60774038],0xffffffba
  421455:	(bad)  
  421456:	mov    ch,0xb
  421458:	adc    eax,0x5d40ce6b
  42145d:	push   edi
  42145e:	mov    al,0xb7
  421460:	adc    al,0x2d
  421462:	sar    DWORD PTR [edi+eiz*2-0x159bad67],0x98
  42146a:	push   cs
  42146b:	pop    eax
  42146c:	push   edi
  42146d:	mov    dl,0xe7
  42146f:	ret    
  421470:	aas    
  421471:	daa    
  421472:	jg     0x421470
  421474:	add    edx,DWORD PTR [ebp-0x453d33ac]
  42147a:	ss inc edi
  42147c:	and    dh,BYTE PTR [ebp+0x6909d08e]
  421482:	xchg   bp,ax
  421484:	sar    BYTE PTR [esi+0x78b85e90],0xdf
  42148b:	dec    ebx
  42148c:	jl     0x42145a
  42148e:	dec    edi
  42148f:	sbb    DWORD PTR [ebx],eax
  421491:	mov    ecx,0x355b31e7
  421496:	inc    ebp
  421497:	jns    0x42149b
  421499:	rcr    DWORD PTR [edx],1
  42149b:	sub    eax,0x3065c63a
  4214a0:	dec    ecx
  4214a1:	adc    al,0xca
  4214a3:	cmc    
  4214a4:	push   ds
  4214a5:	dec    esi
  4214a6:	xchg   ebx,eax
  4214a7:	or     eax,DWORD PTR cs:[ecx+0x4bd89373]
  4214ae:	sbb    eax,0xa81a1bd7
  4214b3:	lea    ebx,[ecx]
  4214b5:	mov    eax,0x98285500
  4214ba:	push   0x71
  4214bc:	add    ch,BYTE PTR [ebp+0x449090ab]
  4214c2:	pop    esi
  4214c3:	es out 0x99,al
  4214c6:	mov    bh,0x22
  4214c8:	repnz dec ebx
  4214ca:	in     eax,dx
  4214cb:	xchg   ebx,esp
  4214cd:	dec    ebx
  4214ce:	pushf  
  4214cf:	inc    ebp
  4214d0:	mov    esi,0x96f418d1
  4214d5:	jbe    0x421471
  4214d7:	pop    ds
  4214d8:	add    esp,DWORD PTR [eax-0x4e]
  4214db:	pop    ds
  4214dc:	inc    eax
  4214dd:	(bad)  
  4214de:	sbb    esp,DWORD PTR fs:0x3439f7a5
  4214e5:	dec    edx
  4214e6:	fnsave [ecx+edi*8]
  4214e9:	push   0xa874b578
  4214ee:	dec    bp
  4214f0:	xchg   ebp,eax
  4214f1:	ret    
  4214f2:	out    0xf3,al
  4214f4:	cmp    BYTE PTR [edx],bh
  4214f6:	xor    al,0x69
  4214f8:	(bad)  
  4214f9:	and    BYTE PTR [edi],cl
  4214fb:	leave  
  4214fc:	add    BYTE PTR [esi-0x89e206e],dh
  421502:	dec    esi
  421503:	imul   edi,DWORD PTR es:[esi],0x38c390e1
  42150a:	cmp    BYTE PTR ss:[ebp+0x76],ah
  42150e:	sub    ecx,DWORD PTR [ecx]
  421510:	xor    BYTE PTR [eax],0x49
  421513:	push   edx
  421514:	outs   dx,BYTE PTR ds:[esi]
  421515:	pop    ecx
  421516:	jmp    0x54db:0xcd4cdfa1
  42151d:	push   esi
  42151e:	xor    al,0x8
  421520:	jecxz  0x42157d
  421522:	sub    BYTE PTR [esp-0x1c],bh
  421526:	mov    dl,0xee
  421528:	add    al,0x4d
  42152a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42152b:	aaa    
  42152c:	in     al,0xec
  42152e:	mov    eax,0xe2ba35f8
  421533:	push   es
  421534:	shl    BYTE PTR [esi+0x3c],0x12
  421538:	pop    ebx
  421539:	aas    
  42153a:	mov    esi,0x8c8cbf94
  42153f:	arpl   WORD PTR [eax+0x56],dx
  421542:	jmp    0xf7f40c25
  421547:	data16 std 
  421549:	fwait
  42154a:	jns    0x42151e
  42154c:	sub    bh,dl
  42154e:	sar    esp,0xfc
  421551:	mov    al,0x4d
  421553:	or     al,0xf7
  421555:	nop
  421556:	dec    ecx
  421557:	bound  esi,QWORD PTR [ecx+0x6d9e26c4]
  42155d:	(bad)  
  42155e:	out    0x2a,eax
  421560:	mov    eax,0xed87fbdb
  421565:	iret   
  421566:	ret    0x8336
  421569:	mov    edx,0x366ddbcc
  42156e:	(bad)  [esp+edx*4+0x3075a1aa]
  421575:	mov    DWORD PTR [ecx-0x67fdda89],edi
  42157b:	icebp  
  42157c:	mov    ebp,0x10f1c184
  421581:	shl    DWORD PTR [ebx-0x4b21b595],cl
  421587:	bound  eax,QWORD PTR [ebx+eiz*8]
  42158a:	(bad)  
  42158b:	cmp    edx,DWORD PTR [esi-0x46b35ae6]
  421591:	inc    edx
  421592:	sar    DWORD PTR [ecx+0x54],1
  421595:	out    0x23,eax
  421597:	lods   eax,DWORD PTR ds:[esi]
  421598:	mov    edx,0xa2e8e3c7
  42159d:	mov    al,0xee
  42159f:	test   al,0xea
  4215a1:	sti    
  4215a2:	ret    0x1d67
  4215a5:	stos   BYTE PTR es:[edi],al
  4215a6:	sub    eax,0x2c846441
  4215ab:	adc    dl,BYTE PTR [edi]
  4215ad:	pop    ecx
  4215ae:	(bad)  es:[edi+0x13301a3a]
  4215b5:	mov    cl,0x90
  4215b7:	mov    al,0x95
  4215b9:	mov    bh,BYTE PTR [eax-0x15]
  4215bc:	out    0xcd,eax
  4215be:	jle    0x4215ff
  4215c0:	(bad)  
  4215c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c2:	push   es
  4215c3:	in     eax,dx
  4215c4:	dec    edi
  4215c5:	je     0x4215ee
  4215c7:	popa   
  4215c8:	mov    ebx,0x31a5e006
  4215cd:	aaa    
  4215ce:	inc    eax
  4215cf:	jg     0x4215df
  4215d1:	cwde   
  4215d2:	add    edx,0x27
  4215d5:	fst    QWORD PTR [edx+eiz*8]
  4215d8:	sbb    BYTE PTR [ebp+eiz*4+0x3ade050b],dh
  4215df:	pop    ds
  4215e0:	sub    eax,0x15ee84c
  4215e5:	loopne 0x42165e
  4215e7:	ret    0xff5d
  4215ea:	mov    cl,0xbb
  4215ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ed:	leave  
  4215ee:	or     DWORD PTR [eax+0x5fa59b9d],esi
  4215f4:	rcr    BYTE PTR [edi+0x5d],0x51
  4215f8:	pop    eax
  4215f9:	aam    0x4
  4215fb:	xor    al,0x87
  4215fd:	stos   DWORD PTR es:[edi],eax
  4215fe:	inc    ebp
  4215ff:	lahf   
  421600:	push   cs
  421601:	out    0x3e,eax
  421603:	int    0xa1
  421605:	and    cl,BYTE PTR [esi-0x3035a47b]
  42160b:	fist   DWORD PTR [eax]
  42160d:	or     DWORD PTR [ebp+0x6a],esi
  421610:	lahf   
  421611:	add    DWORD PTR [edi],edi
  421613:	stos   BYTE PTR es:[edi],al
  421614:	rcl    BYTE PTR [edi+0xf8a8b2a],1
  42161a:	jmp    0x9a30a379
  42161f:	adc    ch,dh
  421621:	mov    dl,0x1a
  421623:	ss jmp 0xea4f:0xee4d117
  42162b:	add    esp,eax
  42162d:	call   0xee81:0xf8c01ca4
  421634:	dec    esi
  421635:	mov    esp,0x686efaae
  42163a:	call   FWORD PTR [eax]
  42163c:	jp     0x4215ea
  42163e:	pop    ss
  42163f:	retf   0x4520
  421642:	mov    al,0x45
  421644:	push   0x40478b53
  421649:	(bad)  
  42164a:	lea    eax,[edx-0x7a80c212]
  421650:	jns    0x4215d8
  421652:	pop    eax
  421653:	mov    al,ds:0xf9e90873
  421658:	ins    BYTE PTR es:[edi],dx
  421659:	adc    eax,0xb3f52c86
  42165e:	test   eax,0x63ba7d2b
  421663:	retf   0x5299
  421666:	stos   DWORD PTR es:[edi],eax
  421667:	icebp  
  421668:	scas   eax,DWORD PTR es:[edi]
  421669:	lock add edx,edx
  42166c:	sbb    bl,BYTE PTR [esi]
  42166e:	inc    ecx
  42166f:	les    ebx,FWORD PTR [edi-0x11]
  421672:	or     cl,ch
  421674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421675:	daa    
  421676:	scas   eax,DWORD PTR es:[edi]
  421677:	fcom   st(5)
  421679:	pop    ebp
  42167a:	jnp    0x421606
  42167c:	lds    esi,FWORD PTR [ebx-0x69]
  42167f:	mov    eax,edx
  421681:	outs   dx,BYTE PTR ds:[esi]
  421682:	rol    DWORD PTR [eax],1
  421684:	mul    DWORD PTR [edi]
  421686:	jno    0x421655
  421688:	cs in  al,0xd3
  42168b:	jbe    0x421709
  42168d:	add    BYTE PTR [eax],al
  42168f:	add    BYTE PTR [eax],al
  421691:	add    bl,bh
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0xa21a4bc6
  4216a1:	push   edi
  4216a2:	mov    edx,DWORD PTR [eax+0x4f30001]
  4216a8:	add    BYTE PTR [eax],al
  4216aa:	jge    0x421670
  4216ac:	sbb    DWORD PTR [esi-0x3],ecx
  4216af:	dec    ebp
  4216b0:	cmp    eax,0x700c16c0
  4216b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b7:	push   ebx
  4216b8:	jns    0x4216bd
  4216ba:	push   edi
  4216bb:	in     eax,dx
  4216bc:	out    dx,al
  4216bd:	ficomp WORD PTR [edi]
  4216bf:	cmp    edx,eax
  4216c1:	lods   eax,DWORD PTR ds:[esi]
  4216c2:	push   cs
  4216c3:	stos   DWORD PTR es:[edi],eax
  4216c4:	mov    ah,0xab
  4216c6:	dec    BYTE PTR [ecx-0x6f]
  4216c9:	fist   WORD PTR [edx*1+0x1c1a9e9f]
  4216d0:	std    
  4216d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216d2:	loopne 0x421666
  4216d4:	sti    
  4216d5:	adc    al,0xe9
  4216d7:	sbb    al,0x40
  4216d9:	aas    
  4216da:	stos   BYTE PTR es:[edi],al
  4216db:	(bad)  [edi]
  4216dd:	xchg   ecx,eax
  4216de:	xchg   DWORD PTR ds:0xbf726f86,eax
  4216e4:	xchg   esp,eax
  4216e5:	sub    al,0xc3
  4216e7:	iret   
  4216e8:	pop    es
  4216e9:	xchg   edx,eax
  4216ea:	adc    DWORD PTR [esp+eiz*2-0x7e],ecx
  4216ee:	push   ss
  4216ef:	xchg   ecx,eax
  4216f0:	je     0x4216d4
  4216f2:	push   esi
  4216f3:	fsubr  st(7),st
  4216f5:	aas    
  4216f6:	outs   dx,DWORD PTR ds:[esi]
  4216f7:	cmp    ebp,DWORD PTR [ecx+0x4b]
  4216fa:	push   ss
  4216fb:	cmp    DWORD PTR [eax-0x7d],edi
  4216fe:	shr    esp,cl
  421700:	mov    edi,0x75ced9e3
  421705:	dec    eax
  421706:	icebp  
  421707:	imul   eax,DWORD PTR [esi+0x63],0x4e
  42170b:	adc    DWORD PTR es:[ebp+0x17],ebx
  42170f:	ds std 
  421711:	call   0x26381a04
  421716:	jmp    0xb8e9:0xf0954d7a
  42171d:	pop    edi
  42171e:	sahf   
  42171f:	icebp  
  421720:	adc    eax,0xc3def4de
  421725:	(bad)  
  421726:	pop    ds
  421727:	jno    0x421793
  421729:	mov    cl,0xfd
  42172b:	dec    ecx
  42172c:	std    
  42172d:	icebp  
  42172e:	clc    
  42172f:	shl    esp,cl
  421731:	dec    esi
  421732:	push   0xffffffd6
  421734:	nop
  421735:	test   eax,0x731b4349
  42173a:	xor    eax,0x818ba1a5
  42173f:	push   eax
  421740:	(bad)  
  421741:	das    
  421742:	push   ecx
  421743:	xor    al,0xe5
  421745:	cli    
  421746:	cmp    DWORD PTR [ebx],ebx
  421748:	aad    0xb1
  42174a:	mov    bl,0x53
  42174c:	pop    edx
  42174d:	pop    ss
  42174e:	ficomp DWORD PTR [ebp-0x9a0bdf9]
  421754:	cmp    ah,BYTE PTR [eax+0x33]
  421757:	mov    cl,0x4a
  421759:	push   0x32
  42175b:	pop    ss
  42175c:	add    DWORD PTR [eax+ecx*2-0x76],esp
  421760:	inc    edi
  421761:	mov    WORD PTR [ebx],?
  421763:	(bad)  
  421764:	and    DWORD PTR [ebx-0x60],ecx
  421767:	cdq    
  421768:	push   ebx
  421769:	jge    0x421707
  42176b:	and    eax,0x166d90fc
  421770:	xor    al,0xc9
  421772:	fnop   
  421774:	mov    edi,0xccbb6a8f
  421779:	jae    0x421706
  42177b:	add    al,0x33
  42177d:	or     DWORD PTR [edi-0x4d],eax
  421780:	hlt    
  421781:	stos   BYTE PTR es:[edi],al
  421782:	sbb    eax,0x1b5a2d96
  421787:	leave  
  421788:	stos   BYTE PTR es:[edi],al
  421789:	sub    DWORD PTR [edi+0x526a3fd2],esp
  42178f:	jecxz  0x42173c
  421791:	xor    DWORD PTR [ebx+0x52],ebx
  421794:	cwde   
  421795:	xor    al,0x31
  421797:	mov    edi,0x4048e1fb
  42179c:	push   0xd24b4d25
  4217a1:	cmp    eax,ebx
  4217a3:	push   cs
  4217a4:	sti    
  4217a5:	or     al,0x30
  4217a7:	ret    
  4217a8:	pop    edx
  4217a9:	icebp  
  4217aa:	cld    
  4217ab:	mov    dh,ah
  4217ad:	mov    bh,0xe0
  4217af:	dec    edi
  4217b0:	scas   al,BYTE PTR es:[edi]
  4217b1:	fstp   QWORD PTR ds:0xbcc64289
  4217b7:	dec    esi
  4217b8:	nop
  4217b9:	leave  
  4217ba:	jp     0x421752
  4217bc:	sub    ecx,DWORD PTR [bx+si]
  4217bf:	loopne 0x42178a
  4217c1:	jl     0x421814
  4217c3:	sbb    cl,BYTE PTR [edi-0x6e]
  4217c6:	push   0x64
  4217c8:	mov    ecx,0xd9a02b7c
  4217cd:	(bad)  
  4217ce:	stos   BYTE PTR es:[edi],al
  4217cf:	xor    al,0xca
  4217d1:	jae    0x421777
  4217d3:	int3   
  4217d4:	dec    ebx
  4217d5:	add    dl,BYTE PTR [ecx-0x5c]
  4217d8:	out    0xbd,eax
  4217da:	jb     0x421811
  4217dc:	jg     0x4217fb
  4217de:	lock mov ebp,gs
  4217e1:	loope  0x4217a9
  4217e3:	cmp    dl,dh
  4217e5:	fnsave [esi+0xb8694fb]
  4217eb:	dec    ebx
  4217ec:	pushf  
  4217ed:	sub    eax,0x85742ce8
  4217f2:	mov    DWORD PTR [edi+0x28],ebp
  4217f5:	jge    0x421864
  4217f7:	addr16 clc 
  4217f9:	pop    ebp
  4217fa:	and    al,0x3b
  4217fc:	mov    eax,0x33afd4c1
  421801:	stc    
  421802:	stos   DWORD PTR es:[edi],eax
  421803:	call   0x6717:0x7fd50be9
  42180a:	hlt    
  42180b:	jmp    0x421818
  42180d:	push   es
  42180e:	(bad)  
  42180f:	cmc    
  421810:	xchg   ebp,eax
  421811:	xor    esp,DWORD PTR [eax]
  421813:	(bad)  
  421814:	xchg   esp,eax
  421815:	or     DWORD PTR [esi],esi
  421817:	or     eax,0x2671dda1
  42181c:	adc    eax,0x77ffe14f
  421821:	js     0x421816
  421823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421824:	xor    BYTE PTR [eax*4-0x6b6d75c7],ah
  42182b:	(bad)  
  42182c:	pop    esi
  42182d:	mov    ebp,0x6832bf3e
  421832:	in     al,dx
  421833:	fsubr  QWORD PTR [ebx+esi*1-0x75]
  421837:	xor    ebp,DWORD PTR [edx-0x57c5c4ea]
  42183d:	fidivr DWORD PTR [edi*2-0x17f428ca]
  421844:	jns    0x4218b3
  421846:	test   DWORD PTR [edx-0x24bf4182],esp
  42184c:	inc    ecx
  42184d:	fldenv [edi+0x62ea2193]
  421853:	mov    al,ds:0x7e9603a7
  421858:	mov    dh,0x6e
  42185a:	or     al,BYTE PTR [ebx]
  42185c:	xor    DWORD PTR [ebx+0x5c9056e5],eax
  421862:	adc    eax,0x386d4193
  421867:	xchg   edx,eax
  421868:	xor    edx,ebp
  42186a:	jg     0x4218c3
  42186c:	inc    edi
  42186d:	fidivr WORD PTR [ebp-0x33]
  421870:	out    dx,eax
  421871:	daa    
  421872:	xor    DWORD PTR es:[edx-0x4b54d4b4],ebx
  421879:	add    eax,0x99ffb216
  42187e:	cmc    
  42187f:	fcomi  st,st(3)
  421881:	inc    eax
  421882:	out    0x7d,eax
  421884:	cmp    al,0x4e
  421886:	dec    ebp
  421887:	outs   dx,BYTE PTR ds:[esi]
  421888:	jno    0x4218b9
  42188a:	pop    esi
  42188b:	aas    
  42188c:	dec    edi
  42188d:	loope  0x421902
  42188f:	cmc    
  421890:	mov    ah,0x35
  421892:	sub    BYTE PTR [edx-0x60],bl
  421895:	push   cs
  421896:	and    edx,eax
  421898:	js     0x421912
  42189a:	dec    ecx
  42189b:	jmp    0x421882
  42189d:	ja     0x4218c0
  42189f:	xor    BYTE PTR [edx-0x5e93919],0x73
  4218a6:	xor    al,0x41
  4218a8:	retf   0xeb85
  4218ab:	pushf  
  4218ac:	jge    0x4218d0
  4218ae:	jno    0x421920
  4218b0:	in     eax,0x32
  4218b2:	adc    esi,0x2a
  4218b5:	mov    bh,bl
  4218b7:	and    eax,DWORD PTR [ebx-0x16]
  4218ba:	in     al,dx
  4218bb:	sbb    dh,BYTE PTR [ecx]
  4218bd:	enter  0xdbd6,0x83
  4218c1:	neg    DWORD PTR [edx-0x1f]
  4218c4:	lods   al,BYTE PTR ds:[esi]
  4218c5:	gs dec ebp
  4218c7:	mov    esp,0x6f84b038
  4218cc:	cmp    edx,DWORD PTR [edx+0x2be528da]
  4218d2:	mov    DWORD PTR [esi+0x47d2d653],edx
  4218d8:	pop    ds
  4218d9:	mov    dl,0x15
  4218db:	imul   esi,ebx,0xffffffbc
  4218de:	(bad)  
  4218e0:	lds    edi,FWORD PTR [esi-0x20cf8f26]
  4218e6:	add    ebx,ecx
  4218e8:	ja     0x421870
  4218ea:	add    ebx,DWORD PTR [edx-0x37051bf6]
  4218f0:	aad    0xc5
  4218f2:	cmp    eax,0x16c0c076
  4218f7:	pop    ebp
  4218f8:	in     eax,0x1a
  4218fa:	push   edi
  4218fb:	nop
  4218fc:	push   esi
  4218fd:	sub    al,0xff
  4218ff:	mov    dl,0x68
  421901:	ror    BYTE PTR [esi],1
  421903:	pop    ebx
  421904:	mov    ds:0x935d0071,al
  421909:	int    0xfd
  42190b:	mov    ecx,0xdbe4962c
  421910:	fcomi  st,st(1)
  421912:	lods   al,BYTE PTR ds:[esi]
  421913:	or     bl,BYTE PTR [esi-0x49369722]
  421919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42191a:	push   ss
  42191b:	add    BYTE PTR [esi-0x52],bh
  42191e:	pop    esi
  42191f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421920:	mov    dl,0x3e
  421922:	xchg   esp,eax
  421923:	sub    ah,BYTE PTR [edi-0x9be0c58]
  421929:	jno    0x4218ff
  42192b:	pop    eax
  42192c:	push   edi
  42192e:	fldenv [ebp+0x3f8b905d]
  421934:	mov    ds:0xed69706,eax
  421939:	dec    eax
  42193a:	inc    esi
  42193b:	pop    ds
  42193c:	nop
  42193d:	retf   
  42193e:	xchg   ecx,eax
  42193f:	test   eax,0x90ae178e
  421944:	mov    al,0xb
  421946:	adc    ah,BYTE PTR [eax-0x4f]
  421949:	sub    BYTE PTR [eax-0x6cdffebe],0xb4
  421950:	and    bh,dl
  421952:	xchg   ebp,eax
  421953:	mov    ds:0xf1000053,al
  421958:	pusha  
  421959:	inc    esi
  42195a:	push   cs
  42195b:	es mov ?,ecx
  42195e:	and    BYTE PTR [ecx+0x1a],bh
  421961:	dec    BYTE PTR [ebp+0x7b9b4eb0]
  421967:	mov    ebx,0xbc088593
  42196c:	cwde   
  42196d:	or     ecx,eax
  42196f:	sub    BYTE PTR [ebp+0x3cfb943d],ah
  421975:	stos   DWORD PTR es:[edi],eax
  421976:	adc    bh,ah
  421978:	aas    
  421979:	imul   esi,DWORD PTR [edx],0xba4597d9
  42197f:	mov    ds:0x96c85050,al
  421984:	xor    al,0x4b
  421986:	fwait
  421987:	mov    WORD PTR [ebx+0x6f],ds
  42198a:	pop    ebx
  42198b:	aas    
  42198c:	sahf   
  42198d:	(bad)  
  42198e:	pusha  
  42198f:	xor    edi,DWORD PTR [ebp+0x51]
  421992:	inc    edx
  421993:	add    BYTE PTR [ebx+0x59],0xb8
  421997:	into   
  421998:	xor    al,0x61
  42199a:	int3   
  42199b:	shl    DWORD PTR [edi-0x1126d100],cl
  4219a1:	or     ebx,0x739eec0d
  4219a7:	xor    eax,0x378e1f9
  4219ac:	ins    DWORD PTR es:[edi],dx
  4219ad:	jl     0x42193c
  4219af:	xchg   ebx,eax
  4219b0:	mov    al,ds:0x7b308625
  4219b5:	test   al,0x1b
  4219b7:	jns    0x42194f
  4219b9:	fisttp QWORD PTR [edi+esi*8+0x4184a5ac]
  4219c0:	lock pop esi
  4219c2:	adc    al,0x32
  4219c4:	pop    ss
  4219c5:	repz dec ecx
  4219c7:	dec    ebx
  4219c8:	out    0xe,al
  4219ca:	cs mov ah,0x9
  4219cd:	loopne 0x421995
  4219cf:	xor    cl,BYTE PTR [ecx]
  4219d1:	inc    edx
  4219d2:	mov    al,BYTE PTR [edx+0x54d7787e]
  4219d8:	das    
  4219d9:	sahf   
  4219da:	mov    edx,0xf9a06bc5
  4219df:	(bad)  
  4219e0:	sbb    BYTE PTR [ebx],ch
  4219e2:	and    al,BYTE PTR [esi-0x1e3272a5]
  4219e8:	sti    
  4219e9:	push   0x1c
  4219eb:	loop   0x421a03
  4219ed:	pop    edi
  4219ee:	loope  0x4219d8
  4219f0:	and    DWORD PTR [edx+0x69],edi
  4219f3:	loope  0x4219f3
  4219f5:	mov    cl,0xb0
  4219f7:	into   
  4219f8:	ds or  bl,al
  4219fb:	mov    bh,cl
  4219fd:	pop    ss
  4219fe:	jl     0x421a31
  421a00:	icebp  
  421a01:	dec    esi
  421a02:	cld    
  421a03:	sbb    dl,0xc2
  421a06:	jmp    DWORD PTR [eax]
  421a08:	sar    ah,1
  421a0a:	push   0x4e55136d
  421a0f:	lods   al,BYTE PTR ds:[esi]
  421a10:	jmp    0x4a4b6327
  421a15:	xchg   ebx,eax
  421a16:	sar    DWORD PTR [ebx+0x3e335442],1
  421a1c:	and    dl,BYTE PTR [edx-0x41e6ea31]
  421a22:	enter  0x7e14,0x43
  421a26:	sahf   
  421a27:	jo     0x4219b4
  421a29:	sbb    edi,DWORD PTR [ebx-0x79]
  421a2c:	adc    ch,al
  421a2e:	in     eax,0x35
  421a30:	loopne 0x4219dd
  421a32:	es cli 
  421a34:	pop    ecx
  421a35:	jb     0x421a9b
  421a37:	fs sub eax,0x390abb86
  421a3d:	or     BYTE PTR [ebp+0x7a],0x57
  421a41:	jle    0x421a87
  421a43:	lods   eax,DWORD PTR ds:[esi]
  421a44:	add    BYTE PTR [ebx],bh
  421a46:	adc    ch,cl
  421a48:	loope  0x421a6c
  421a4a:	icebp  
  421a4b:	ret    0x89d
  421a4e:	loop   0x421a05
  421a50:	in     eax,0xcb
  421a52:	inc    ebp
  421a53:	pop    edi
  421a54:	rol    DWORD PTR ss:[edx+0x6a],0xde
  421a59:	aam    0x3d
  421a5b:	(bad)  
  421a5c:	cmp    esi,eax
  421a5e:	adc    ebp,DWORD PTR [edi]
  421a60:	fadd   QWORD PTR [ebp+0x5aa6b1fa]
  421a66:	xlat   BYTE PTR ds:[ebx]
  421a67:	xor    al,0xab
  421a69:	add    BYTE PTR [ebx],dh
  421a6b:	popf   
  421a6c:	dec    eax
  421a6d:	inc    ebx
  421a6e:	rcr    BYTE PTR [esi+ecx*8+0x18],cl
  421a72:	dec    ecx
  421a73:	test   eax,0x2f392061
  421a78:	ja     0x421ad4
  421a7a:	push   edx
  421a7b:	ficom  DWORD PTR [edi]
  421a7d:	in     al,0x0
  421a7f:	hlt    
  421a80:	and    al,BYTE PTR [eax+edx*2+0x46]
  421a84:	sub    esi,DWORD PTR [edi]
  421a86:	pop    esi
  421a87:	xlat   BYTE PTR ds:[ebx]
  421a88:	test   al,0x91
  421a8a:	add    ebx,DWORD PTR [ebx-0x50]
  421a8d:	into   
  421a8e:	test   BYTE PTR [eax-0x76],ch
  421a91:	ins    DWORD PTR es:[edi],dx
  421a92:	xchg   edi,eax
  421a93:	add    BYTE PTR [edx-0x58f3fe52],cl
  421a99:	inc    esi
  421a9a:	adc    BYTE PTR [eax],ah
  421a9c:	aas    
  421a9d:	dec    esi
  421a9e:	jecxz  0x421a49
  421aa0:	ss xchg esp,eax
  421aa2:	dec    ebp
  421aa3:	pop    ebp
  421aa4:	inc    ebx
  421aa5:	push   esi
  421aa6:	inc    ebx
  421aa7:	or     DWORD PTR [ebx+0x46],esi
  421aaa:	das    
  421aab:	jl     0x421abb
  421aad:	pusha  
  421aae:	das    
  421aaf:	mov    al,ds:0xdf9b9d05
  421ab4:	xlat   BYTE PTR ds:[ebx]
  421ab5:	or     bl,BYTE PTR [ebx-0x26f7a87d]
  421abb:	mov    cl,0xcf
  421abd:	fs scas al,BYTE PTR es:[edi]
  421abf:	inc    ecx
  421ac0:	outs   dx,DWORD PTR ds:[esi]
  421ac1:	jb     0x421a4d
  421ac3:	mov    ebx,0x505c6502
  421ac8:	cli    
  421ac9:	sbb    BYTE PTR [ecx+0x76125f53],bh
  421acf:	dec    esp
  421ad0:	and    al,0xbd
  421ad2:	xlat   BYTE PTR ds:[ebx]
  421ad3:	add    BYTE PTR [eax-0x3f],al
  421ad6:	sbb    ebx,DWORD PTR [esi+0x52359078]
  421adc:	xchg   ebp,eax
  421add:	mov    ch,0x83
  421adf:	pop    es
  421ae0:	add    eax,0xb5a483b6
  421ae5:	arpl   ax,cx
  421ae7:	loope  0x421b07
  421ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aea:	retf   0xbb72
  421aed:	js     0x421ab8
  421aef:	sar    eax,0x13
  421af2:	ret    
  421af3:	cli    
  421af4:	in     eax,0x7d
  421af6:	mov    bh,0xc0
  421af8:	sub    DWORD PTR [eax+esi*4],ebp
  421afb:	test   DWORD PTR [esi-0x2a],ecx
  421afe:	ds jnp 0x421ab7
  421b01:	inc    ecx
  421b02:	aas    
  421b03:	inc    eax
  421b04:	ins    DWORD PTR es:[edi],dx
  421b05:	fwait
  421b06:	(bad)  
  421b07:	fs sbb DWORD PTR gs:[edi+edx*2-0x715323ae],ebx
  421b10:	fptan  
  421b12:	int    0xc
  421b14:	jmp    0x421afa
  421b16:	popa   
  421b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b18:	and    ch,BYTE PTR [esi-0x73]
  421b1b:	pop    ecx
  421b1c:	stos   DWORD PTR es:[edi],eax
  421b1d:	daa    
  421b1e:	xchg   DWORD PTR [ebx],edx
  421b20:	jmp    0x421ab4
  421b22:	push   edi
  421b23:	scas   al,BYTE PTR es:[edi]
  421b24:	jo     0x421b55
  421b26:	pop    eax
  421b27:	xor    BYTE PTR [edi],dh
  421b29:	jbe    0x421ab0
  421b2b:	jg     0x421afc
  421b2d:	xchg   edx,eax
  421b2e:	imul   esp,DWORD PTR [esi-0xa83030a],0xffffffad
  421b35:	jl     0xe9111cd0
  421b3b:	pop    es
  421b3c:	push   eax
  421b3d:	dec    eax
  421b3e:	ret    0x9ee9
  421b41:	jecxz  0x421b79
  421b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b44:	mov    ecx,0xb24bbe77
  421b49:	jae    0x421ad5
  421b4b:	jmp    0x102e:0x1a069681
  421b52:	enter  0x7287,0xa7
  421b56:	mov    bl,0x6
  421b58:	fs out dx,eax
  421b5a:	adc    BYTE PTR [ebx+edi*8],ah
  421b5d:	fs imul edi,esi,0x54
  421b61:	dec    esp
  421b62:	fst    QWORD PTR [ebx+0x4ccb9afb]
  421b68:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421b6a:	push   0x7ff644e1
  421b6f:	pop    eax
  421b70:	pop    ss
  421b71:	stos   DWORD PTR es:[edi],eax
  421b72:	mov    al,0x31
  421b74:	jne    0x421bbe
  421b76:	dec    ebp
  421b77:	dec    esi
  421b78:	lods   al,BYTE PTR ds:[esi]
  421b79:	adc    edi,DWORD PTR [edx-0x74]
  421b7c:	xchg   edx,eax
  421b7d:	gs aad 0x6f
  421b80:	ror    bl,1
  421b82:	dec    ecx
  421b83:	or     cl,bl
  421b85:	lea    eax,[ebx+ebp*8-0xb]
  421b89:	add    bl,cl
  421b8b:	inc    edx
  421b8c:	pop    edx
  421b8d:	add    bh,BYTE PTR ds:0x71beada8
  421b93:	push   ebp
  421b94:	je     0x421bbe
  421b96:	mov    ebp,DWORD PTR [esi]
  421b98:	sub    al,0xaf
  421b9a:	imul   eax,DWORD PTR [edi+0xd],0x0
  421ba1:	add    BYTE PTR [ebx],bl
  421ba3:	mov    esi,0xdaef9aee
  421ba8:	jg     0x421b69
  421baa:	call   0xe25b:0x6c770da0
  421bb1:	popf   
  421bb2:	jle    0x421b49
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	repz add al,0x0
  421bb9:	add    BYTE PTR [edi-0x4fd0a7eb],ah
  421bbf:	lahf   
  421bc0:	xor    DWORD PTR [ebx+0xb444cc4],ecx
  421bc6:	jb     0x421b73
  421bc8:	mov    bh,0xe7
  421bca:	or     BYTE PTR [edx+ebx*1-0x27153baf],cl
  421bd1:	nop
  421bd2:	fidivr DWORD PTR [edx-0x45]
  421bd5:	ss jl  0x421c3b
  421bd8:	mov    edi,0x91cbddd5
  421bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bde:	fabs   
  421be0:	(bad)  
  421be1:	inc    ebx
  421be2:	dec    eax
  421be3:	xor    ebp,DWORD PTR gs:[ebp-0x18]
  421be7:	(bad)  
  421be8:	and    cl,BYTE PTR ds:0x982bb13a
  421bee:	xor    edx,DWORD PTR [esi+0x1e466a5a]
  421bf4:	cmp    eax,0x675891e2
  421bf9:	(bad)  
  421bfa:	cli    
  421bfb:	ins    DWORD PTR es:[edi],dx
  421bfc:	retf   0xf093
  421bff:	push   esp
  421c00:	lock xchg ebx,esp
  421c03:	(bad)  
  421c04:	test   eax,0x8c56c6df
  421c09:	sbb    al,0xee
  421c0b:	aam    0x57
  421c0d:	fwait
  421c0e:	sar    edi,1
  421c10:	test   BYTE PTR [edi+0x5338a6bb],bl
  421c16:	mov    edi,0x1969ed1
  421c1b:	repnz mov WORD PTR [ebx],ss
  421c1e:	jl     0x421bc6
  421c20:	push   0xb23d249d
  421c25:	sbb    DWORD PTR [edi-0xedbad33],ecx
  421c2b:	cmp    ah,dl
  421c2d:	lock lods eax,DWORD PTR ds:[esi]
  421c2f:	xchg   esi,eax
  421c30:	ins    BYTE PTR es:[edi],dx
  421c31:	mov    ch,0xf2
  421c33:	xor    DWORD PTR cs:[eax-0x1c],edi
  421c37:	push   esi
  421c38:	lahf   
  421c39:	das    
  421c3a:	sbb    BYTE PTR [ebp+edi*2+0x39abe3b6],cl
  421c41:	jecxz  0x421c2c
  421c43:	in     al,dx
  421c44:	xchg   ecx,eax
  421c45:	mov    edx,0x8bc1df4a
  421c4a:	or     eax,0x225bd24e
  421c4f:	repnz push ebp
  421c51:	or     BYTE PTR [edx+0x75],cl
  421c54:	or     al,cl
  421c56:	jbe    0x421c58
  421c58:	mov    edi,0xb1c5d7f0
  421c5d:	mov    ds,WORD PTR [eax-0x28f49e87]
  421c63:	pop    esp
  421c64:	push   esp
  421c65:	fcom   DWORD PTR [ebp+0x2b]
  421c68:	sub    al,0x57
  421c6a:	dec    ecx
  421c6b:	fisttp WORD PTR [edi-0x119c8e03]
  421c71:	dec    ebx
  421c72:	adc    eax,0x49633aef
  421c77:	sub    DWORD PTR [ecx],0x28599810
  421c7d:	ins    DWORD PTR es:[edi],dx
  421c7e:	in     eax,dx
  421c7f:	inc    eax
  421c80:	inc    edx
  421c81:	add    al,BYTE PTR [ebp+eiz*8+0x4b1200fd]
  421c88:	mov    dh,0xa6
  421c8a:	jb     0x421cca
  421c8c:	fcmovbe st,st(4)
  421c8e:	in     eax,dx
  421c8f:	xor    eax,0xcbea7a8b
  421c94:	jge    0x421c36
  421c96:	dec    esi
  421c97:	add    al,0x2c
  421c99:	mov    esp,0xc908879e
  421c9e:	mov    al,ds:0x39cadc76
  421ca3:	sub    eax,0xd25ed7b1
  421ca8:	mov    esi,0x91e4a11b
  421cad:	es pop es
  421caf:	pop    ebx
  421cb0:	add    BYTE PTR [eax-0x11477f24],dl
  421cb6:	add    BYTE PTR ds:0x6e6f75d9,bl
  421cbc:	stos   BYTE PTR es:[edi],al
  421cbd:	push   eax
  421cbe:	loopne 0x421cb4
  421cc0:	mov    ds:0xfb135aab,al
  421cc5:	inc    esp
  421cc6:	or     eax,0xa37ee52d
  421ccb:	in     al,dx
  421ccc:	jl     0x421c9e
  421cce:	dec    ecx
  421ccf:	and    ebp,DWORD PTR [ecx]
  421cd1:	inc    eax
  421cd2:	fst    st(3)
  421cd4:	mov    ds:0x56070e44,al
  421cd9:	outs   dx,BYTE PTR ds:[esi]
  421cda:	xor    bh,BYTE PTR [edi+ebx*4]
  421cdd:	xlat   BYTE PTR ds:[ebx]
  421cde:	repz into 
  421ce0:	gs (bad) 
  421ce2:	push   edx
  421ce3:	inc    edx
  421ce4:	enter  0xf67c,0xee
  421ce8:	pop    eax
  421ce9:	fild   QWORD PTR ss:[edi-0x293329a0]
  421cf0:	mov    al,ds:0xddcb7b36
  421cf5:	push   es
  421cf6:	or     DWORD PTR [ebx-0x48493bdf],esi
  421cfc:	jnp    0x421cf5
  421cfe:	xchg   BYTE PTR ds:0x56c890c9,bh
  421d04:	bound  esp,QWORD PTR [ebx+0x7703e7b3]
  421d0a:	adc    eax,0x2a451977
  421d0f:	std    
  421d10:	shr    DWORD PTR [bx-0x2d88],cl
  421d15:	cmc    
  421d16:	and    eax,0x8ce1c6f7
  421d1b:	mov    dl,0xc0
  421d1d:	push   0xffffffdb
  421d1f:	shl    BYTE PTR [eax+0x328ef259],1
  421d25:	sub    DWORD PTR [edi+0x5b],ebx
  421d28:	mov    ch,0xdf
  421d2a:	js     0x421d28
  421d2c:	sub    al,0xe8
  421d2e:	daa    
  421d2f:	mov    bl,0x32
  421d31:	repz call 0xf5f57dbf
  421d37:	sahf   
  421d38:	add    eax,0xda358038
  421d3d:	ss std 
  421d3f:	pop    esp
  421d40:	add    edi,DWORD PTR [eax+0x2d55891c]
  421d46:	pop    eax
  421d47:	adc    DWORD PTR [esi+eax*8],0xd82d153
  421d4e:	inc    ecx
  421d4f:	push   ds
  421d50:	xor    eax,DWORD PTR [edx+0x85adb3]
  421d56:	dec    eax
  421d57:	mov    al,ds:0x1463d759
  421d5c:	cld    
  421d5d:	cmp    BYTE PTR [ecx+ecx*2],0x19
  421d61:	cmp    eax,DWORD PTR [edx-0x7c]
  421d64:	mov    DWORD PTR [edx],ebp
  421d66:	xor    dh,ch
  421d68:	mov    esp,0xdf59e4a4
  421d6d:	mov    dl,0x3f
  421d6f:	jp     0x421cf7
  421d71:	xor    esp,DWORD PTR [eax+0x21]
  421d74:	jle    0x421dd4
  421d76:	iret   
  421d77:	adc    DWORD PTR [eax],0xffffff89
  421d7a:	scas   eax,DWORD PTR es:[edi]
  421d7b:	pop    es
  421d7c:	repz adc BYTE PTR [edx-0x475045fb],dh
  421d83:	dec    ecx
  421d84:	lods   eax,DWORD PTR ds:[esi]
  421d85:	in     al,0x70
  421d87:	pop    ebp
  421d88:	mov    dh,0xc6
  421d8a:	popa   
  421d8b:	out    dx,eax
  421d8c:	gs pop esp
  421d8e:	jnp    0x421d61
  421d90:	lods   al,BYTE PTR ds:[esi]
  421d91:	dec    edx
  421d92:	adc    dh,ch
  421d94:	daa    
  421d95:	retf   0x6af5
  421d98:	add    BYTE PTR [ebp+0x2f8df183],ch
  421d9e:	iret   
  421d9f:	pop    eax
  421da0:	xchg   dl,dh
  421da2:	test   eax,0xad7e02f8
  421da7:	neg    BYTE PTR [ebp+0x78]
  421daa:	shl    DWORD PTR [ecx+ecx*8],0xe
  421dae:	fild   QWORD PTR gs:[esi-0x3eedfc98]
  421db5:	or     DWORD PTR [edx-0x5684688d],0xd10c81c7
  421dbf:	pop    esi
  421dc0:	leave  
  421dc1:	mov    esp,0xbbe6b10d
  421dc6:	and    al,0xda
  421dc8:	ins    DWORD PTR es:[edi],dx
  421dc9:	loope  0x421dd6
  421dcb:	rcr    BYTE PTR [edx],cl
  421dcd:	pop    eax
  421dce:	cwde   
  421dcf:	or     eax,0x938e17b3
  421dd4:	clc    
  421dd5:	xlat   BYTE PTR ds:[ebx]
  421dd6:	adc    eax,0xea1c8575
  421ddb:	cdq    
  421ddc:	pop    ss
  421ddd:	adc    eax,0x7a686eaa
  421de2:	sub    eax,0x2a1075a1
  421de7:	div    BYTE PTR [esi+0x5e8a5773]
  421ded:	mov    es,WORD PTR [edi+0x16]
  421df0:	mov    ecx,0xf206579e
  421df5:	inc    eax
  421df6:	imul   edx,eax,0xb538c1a7
  421dfc:	xchg   esi,eax
  421dfd:	add    BYTE PTR [ebp+0x66a074a6],bl
  421e03:	mov    edi,0xb72bf699
  421e08:	dec    ebx
  421e09:	ror    DWORD PTR [esi-0x54],cl
  421e0c:	add    ecx,DWORD PTR [edi+0x5c7a842c]
  421e12:	in     eax,dx
  421e13:	sbb    bl,bl
  421e15:	fisttp QWORD PTR [esi]
  421e17:	loopne 0x421de7
  421e19:	lock mov edi,0xc19718e3
  421e1f:	jns    0x421e1f
  421e21:	arpl   WORD PTR [ebx],dx
  421e23:	inc    dh
  421e25:	(bad)  
  421e26:	das    
  421e27:	and    esp,DWORD PTR [edi+eax*8-0x47]
  421e2b:	sti    
  421e2c:	rcr    BYTE PTR [ebx],cl
  421e2e:	(bad)  
  421e2f:	(bad)  
  421e30:	in     al,dx
  421e31:	inc    ecx
  421e32:	popa   
  421e33:	int    0xec
  421e35:	aam    0x20
  421e37:	aas    
  421e38:	mov    ds:0x4a5010b3,al
  421e3d:	xor    BYTE PTR ds:0x60eee264,bl
  421e43:	outs   dx,BYTE PTR ds:[esi]
  421e44:	or     BYTE PTR [eax],ch
  421e46:	adc    BYTE PTR [esp+ecx*2-0x65],ah
  421e4a:	mov    ds:0x5ecee45,al
  421e4f:	inc    edx
  421e50:	nop
  421e51:	aam    0x66
  421e53:	dec    eax
  421e54:	xchg   esp,eax
  421e55:	sbb    bh,al
  421e57:	int3   
  421e58:	stos   BYTE PTR es:[edi],al
  421e59:	call   0x2d29:0x322a0b5
  421e60:	sbb    DWORD PTR [ecx+0x1db53f69],0x370bbc49
  421e6a:	adc    DWORD PTR [ecx],0x2
  421e6d:	cdq    
  421e6e:	cdq    
  421e6f:	push   es
  421e70:	loope  0x421ea7
  421e72:	jl     0x421e1c
  421e74:	mov    edx,0x5ee46f3
  421e79:	daa    
  421e7a:	cs jecxz 0x421e00
  421e7d:	rcr    BYTE PTR [edx],1
  421e7f:	or     eax,0xfad23aa6
  421e84:	test   eax,0xcd3bce67
  421e89:	prefetchw BYTE PTR [ecx+eax*1]
  421e8d:	push   es
  421e8e:	pop    ss
  421e8f:	retf   0x7c2b
  421e92:	inc    edi
  421e93:	je     0x421e1d
  421e95:	pop    esi
  421e96:	stc    
  421e97:	adc    al,0x23
  421e99:	in     al,dx
  421e9a:	fdiv   DWORD PTR [esi-0x667b6ca0]
  421ea0:	sahf   
  421ea1:	(bad)  
  421ea2:	sti    
  421ea3:	pop    ebp
  421ea4:	inc    esp
  421ea5:	stos   BYTE PTR es:[edi],al
  421ea6:	xor    ecx,eax
  421ea8:	jge    0x421f02
  421eaa:	jmp    0x421f1e
  421eac:	sub    ah,BYTE PTR [ebx+0x18051992]
  421eb2:	ins    DWORD PTR es:[edi],dx
  421eb3:	cdq    
  421eb4:	mov    bh,BYTE PTR [esi]
  421eb6:	std    
  421eb7:	out    0xfa,al
  421eb9:	sbb    eax,0xd026406
  421ebe:	je     0x421e75
  421ec0:	xchg   ebx,eax
  421ec1:	and    BYTE PTR [ebx+0x7a11db44],al
  421ec7:	xchg   DWORD PTR [edi-0x61],esp
  421eca:	(bad)  
  421ecb:	and    eax,0x6e5e5fdf
  421ed0:	push   ecx
  421ed1:	stos   DWORD PTR es:[edi],eax
  421ed2:	lahf   
  421ed3:	ret    
  421ed4:	loopne 0x421e7f
  421ed6:	ins    DWORD PTR es:[edi],dx
  421ed7:	(bad)  
  421ed8:	loopne 0x421f4e
  421eda:	mov    ds:0x48f9f0fb,eax
  421edf:	(bad)  
  421ee0:	adc    ecx,edi
  421ee2:	add    eax,0x316daef
  421ee7:	shl    DWORD PTR [eax+0x3a3f92],cl
  421eed:	add    BYTE PTR [ebp+0x219a83ae],al
  421ef3:	fdivr  QWORD PTR [edx-0x6954095d]
  421ef9:	int3   
  421efa:	ret    0x492c
  421efd:	sar    DWORD PTR [ebp-0x37],cl
  421f00:	or     BYTE PTR [ecx-0x49337158],bh
  421f06:	or     BYTE PTR [esi],dl
  421f08:	add    eax,0x246ee60d
  421f0d:	sahf   
  421f0e:	call   0xa496:0x91d5871c
  421f15:	pop    edx
  421f16:	sbb    cl,BYTE PTR [ebp-0x51]
  421f19:	inc    edi
  421f1a:	push   esi
  421f1b:	popf   
  421f1c:	mov    ch,0x80
  421f1e:	aas    
  421f1f:	xor    esi,DWORD PTR [edi]
  421f21:	imul   ebx,ebx,0x64
  421f24:	inc    eax
  421f25:	xor    BYTE PTR [edx+0x13f332eb],cl
  421f2b:	popf   
  421f2c:	popf   
  421f2d:	or     al,0xa1
  421f2f:	int3   
  421f30:	out    0x2,al
  421f32:	scas   al,BYTE PTR es:[edi]
  421f33:	xchg   BYTE PTR [edx],al
  421f35:	int    0x9e
  421f37:	hlt    
  421f38:	adc    BYTE PTR [eax],0xb9
  421f3b:	push   eax
  421f3c:	push   esp
  421f3d:	rcl    DWORD PTR [edi+0x3e],0x5f
  421f41:	cld    
  421f42:	push   es
  421f43:	sbb    BYTE PTR ds:0x8116b590,0x5
  421f4a:	sbb    dh,bl
  421f4c:	fldenv [edi+0x50]
  421f4f:	jmp    0xb64f:0x1d0e0c1
  421f56:	loop   0x421f0a
  421f58:	pop    esp
  421f59:	add    ch,bh
  421f5b:	and    DWORD PTR ds:0x3c0eca1c,esp
  421f61:	mov    ebp,0xb545485c
  421f66:	ins    BYTE PTR es:[edi],dx
  421f67:	add    eax,0xd70a0166
  421f6c:	inc    eax
  421f6d:	les    esp,FWORD PTR [ecx+0x3f]
  421f70:	cmp    DWORD PTR [eax-0x5c],edi
  421f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f74:	hlt    
  421f75:	dec    edx
  421f76:	adc    BYTE PTR [edx],ch
  421f78:	dec    esp
  421f79:	dec    ebx
  421f7a:	dec    ebx
  421f7b:	push   ebx
  421f7c:	mov    edx,es
  421f7e:	xor    bl,BYTE PTR [edx]
  421f80:	pop    esi
  421f81:	push   0xc
  421f83:	mov    eax,ds:0x216f3491
  421f88:	ins    BYTE PTR es:[edi],dx
  421f89:	dec    esi
  421f8a:	lahf   
  421f8b:	ret    
  421f8c:	test   eax,0xea6020e2
  421f91:	pop    edx
  421f92:	fdivr  DWORD PTR [ecx+0x4f4aa23c]
  421f98:	mov    dh,0x37
  421f9a:	cmp    DWORD PTR [ebp+ecx*1+0x78d6f9e1],esi
  421fa1:	test   BYTE PTR [esi+0x29],bl
  421fa4:	inc    BYTE PTR [ecx-0x2099a690]
  421faa:	stos   BYTE PTR es:[edi],al
  421fab:	jbe    0x42201d
  421fad:	and    esp,DWORD PTR [eax+0x47ebabd9]
  421fb3:	mov    bh,0x9f
  421fb5:	adc    eax,0x47160de9
  421fba:	xchg   edi,eax
  421fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbc:	rol    BYTE PTR [ecx+0x6148619],1
  421fc2:	js     0x421fc5
  421fc4:	xchg   DWORD PTR [ebx+ecx*2-0x58],esp
  421fc8:	shl    DWORD PTR [eax+0x5660ac25],0x23
  421fcf:	and    al,0x22
  421fd1:	mov    al,0x6b
  421fd3:	mov    bh,0x8d
  421fd5:	mov    ah,0xb3
  421fd7:	arpl   WORD PTR [ebx],sp
  421fd9:	fmul   QWORD PTR [ecx]
  421fdb:	adc    esp,DWORD PTR ds:0x3228bed7
  421fe1:	shl    al,cl
  421fe3:	jbe    0x422042
  421fe5:	sti    
  421fe6:	repnz jmp 0xd012:0x88c1782c
  421fee:	mov    WORD PTR [esi+0x43],cs
  421ff1:	pop    es
  421ff2:	mov    BYTE PTR [edx-0x19],bh
  421ff5:	in     eax,0xe6
  421ff7:	jo     0x421fae
  421ff9:	pop    ebp
  421ffa:	xchg   edx,eax
  421ffb:	outs   dx,DWORD PTR ds:[esi]
  421ffc:	pop    ebp
  421ffd:	not    BYTE PTR [eax-0x5036c299]
  422003:	std    
  422004:	pop    ebp
  422005:	xchg   esi,eax
  422006:	push   esp
  422007:	mov    DWORD PTR [esi-0x54],eax
  42200a:	push   esi
  42200b:	sbb    eax,0xdcb36b4f
  422010:	mov    ch,0x56
  422013:	push   eax
  422014:	popa   
  422015:	pop    ss
  422016:	pop    esp
  422017:	mov    al,0xfe
  422019:	fwait
  42201a:	repz cli 
  42201c:	push   0x2358f699
  422021:	mov    eax,ds:0xcba3b9ad
  422026:	imul   edi,DWORD PTR [edi+0xa],0xffffffb0
  42202a:	adc    DWORD PTR [esi],0xffffffcc
  42202d:	xchg   ecx,eax
  42202e:	mov    esp,0xac3a3a49
  422033:	sti    
  422034:	es repz test eax,0x60893ed0
  42203b:	stc    
  42203c:	or     cl,ch
  42203e:	jmp    0xd954:0xa9995f73
  422045:	pop    esi
  422046:	xchg   edi,eax
  422047:	ins    DWORD PTR es:[edi],dx
  422048:	xor    BYTE PTR [ecx+eiz*1],0xa0
  42204c:	cmc    
  42204d:	push   ebx
  42204e:	gs mov DWORD PTR cs:[edi],eax
  422052:	mov    al,ds:0xcb64e9d6
  422057:	inc    esi
  422058:	sbb    ah,bl
  42205a:	rcr    DWORD PTR [edx+0x192187c8],1
  422060:	adc    DWORD PTR [edi],esi
  422062:	jae    0x4220a4
  422064:	das    
  422065:	inc    eax
  422066:	repz jmp 0xed6ba3bf
  42206c:	mov    gs,WORD PTR ds:0x96a23b24
  422072:	cmp    eax,DWORD PTR [ebx+edi*4-0x70a2b11f]
  422079:	cld    
  42207a:	test   DWORD PTR ds:0xb4b1189b,edi
  422080:	arpl   WORD PTR [esp+ecx*1+0x72],bx
  422084:	test   ebp,edi
  422086:	out    0x9d,al
  422088:	les    ecx,FWORD PTR [esi+0x4dc86a62]
  42208e:	sar    BYTE PTR [eax-0x15],0x3d
  422092:	outs   dx,BYTE PTR ds:[esi]
  422093:	push   es
  422094:	cmp    al,al
  422096:	mov    ds:0x4ee77108,eax
  42209b:	inc    ebx
  42209c:	retf   
  42209d:	mov    WORD PTR [esi],?
  42209f:	pop    eax
  4220a0:	ins    BYTE PTR es:[edi],dx
  4220a1:	dec    esi
  4220a2:	adc    BYTE PTR [ebx+0x28],0x82
  4220a6:	jnp    0x4220d0
  4220a8:	sbb    al,0x82
  4220aa:	test   DWORD PTR [ebx],ebp
  4220ac:	rol    BYTE PTR [eax],cl
  4220ae:	add    BYTE PTR [eax],al
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	cs jmp 0x9ab34bfd
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	repz add al,0x0
  4220c9:	add    al,ch
  4220cb:	mov    BYTE PTR ds:0x33c4b39b,dl
  4220d1:	sub    DWORD PTR [edi-0x518e975a],ecx
  4220d7:	jnp    0x4220df
  4220d9:	addr16 cmp al,0x54
  4220dc:	adc    DWORD PTR [ecx+0x7f],edi
  4220df:	sub    cl,BYTE PTR [ecx+eiz*8]
  4220e2:	push   edi
  4220e3:	dec    esi
  4220e4:	in     eax,dx
  4220e5:	adc    ecx,DWORD PTR [eax+esi*2+0x460f98bc]
  4220ec:	dec    ebp
  4220ed:	pop    eax
  4220ee:	shr    DWORD PTR [ecx],cl
  4220f0:	xor    BYTE PTR [eax],ch
  4220f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f3:	mov    eax,ds:0xbba91989
  4220f8:	ret    
  4220f9:	nop
  4220fa:	add    DWORD PTR [edx+0x730dd01d],ebp
  422100:	(bad)  
  422101:	js     0x422100
  422103:	pop    edi
  422104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422105:	mov    ah,0x44
  422107:	dec    BYTE PTR [ecx+0x21]
  42210a:	mov    eax,0x265a52c6
  42210f:	dec    esp
  422110:	gs in  al,dx
  422112:	sbb    bl,bl
  422114:	clflush BYTE PTR ds:[ecx+0x57]
  422119:	jns    0x4220ca
  42211b:	cmp    esp,DWORD PTR [edi-0x291ddd1a]
  422121:	sahf   
  422122:	mov    cl,0xf
  422124:	int3   
  422125:	mov    ch,0x45
  422127:	in     eax,dx
  422128:	and    ebp,DWORD PTR [eax+ebp*8+0x38]
  42212c:	jmp    0xa3f4:0x1adbde5c
  422133:	mov    edi,DWORD PTR [eax+0x67505ab2]
  422139:	ss jle 0x4220db
  42213c:	inc    esp
  42213d:	retf   
  42213e:	sti    
  42213f:	loopne 0x422128
  422141:	pop    esp
  422142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422143:	jns    0x422173
  422145:	xchg   al,cl
  422147:	xchg   ebp,eax
  422148:	sbb    eax,0xec00ac62
  42214d:	xchg   edi,eax
  42214e:	iret   
  42214f:	xchg   ecx,eax
  422150:	or     esi,DWORD PTR [eax+0x76]
  422153:	push   edi
  422154:	rcl    BYTE PTR [ebp+0x3a],1
  422157:	dec    edi
  422158:	xchg   ebp,eax
  422159:	pop    es
  42215a:	ror    DWORD PTR [edi+0xdf87e17],cl
  422160:	(bad)
  422163:	and    eax,0x226a0081
  422168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422169:	or     ebp,DWORD PTR [esi]
  42216b:	cdq    
  42216c:	inc    esi
  42216d:	pop    esp
  42216e:	adc    DWORD PTR [ebp+0x739e516b],ecx
  422174:	jl     0x4221f4
  422176:	inc    edi
  422177:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422179:	mov    dl,0xb9
  42217b:	js     0x422113
  42217d:	push   ebx
  42217e:	arpl   cx,ax
  422180:	in     al,0xc6
  422182:	sbb    bl,BYTE PTR [esi+eax*1-0x7]
  422186:	mov    bh,0x14
  422188:	push   ebx
  422189:	adc    al,0x73
  42218b:	xor    edx,DWORD PTR [ebp-0x35]
  42218e:	sub    eax,0xd04f141
  422193:	xchg   ebx,eax
  422194:	outs   dx,BYTE PTR ds:[esi]
  422195:	push   0x141120ef
  42219a:	sbb    ah,BYTE PTR [edi-0x9]
  42219d:	rcr    BYTE PTR [ecx+0x773f3258],cl
  4221a3:	(bad)  
  4221a5:	mov    bl,0xb8
  4221a7:	mov    dl,0xdb
  4221a9:	xchg   esi,eax
  4221aa:	jns    0x422185
  4221ac:	aaa    
  4221ad:	mov    esp,0x573d34af
  4221b2:	or     al,0x9b
  4221b4:	leave  
  4221b5:	fidivr WORD PTR [ebx-0x44]
  4221b8:	enter  0xab4,0x9b
  4221bc:	imul   ecx,DWORD PTR [edx+0x20],0xad8712da
  4221c3:	mov    edx,0x30ec868a
  4221c8:	pop    ss
  4221c9:	scas   al,BYTE PTR es:[edi]
  4221ca:	jg     0x422210
  4221cc:	call   0xa3898618
  4221d1:	xchg   ebp,eax
  4221d2:	mul    dl
  4221d4:	pop    ss
  4221d5:	dec    ebp
  4221d6:	or     al,0xff
  4221d8:	inc    esp
  4221d9:	pop    ecx
  4221da:	out    dx,eax
  4221db:	fimul  DWORD PTR [esi-0x3c1ba3b0]
  4221e1:	adc    BYTE PTR [esi+0xbccd2b8],0x18
  4221e8:	mov    ds:0x85b27dd,eax
  4221ed:	and    DWORD PTR [edi-0x2a],ecx
  4221f0:	jge    0x422208
  4221f2:	es mov edi,ecx
  4221f5:	(bad)  
  4221f6:	xor    al,0x43
  4221f8:	inc    esp
  4221f9:	outs   dx,DWORD PTR ds:[esi]
  4221fa:	jns    0x42224e
  4221fc:	sub    eax,edx
  4221fe:	mov    ecx,0xac69ecba
  422203:	or     cl,BYTE PTR [edi]
  422205:	hlt    
  422206:	and    al,0xeb
  422208:	shr    ebx,0x31
  42220b:	lahf   
  42220c:	leave  
  42220d:	jle    0x4221d0
  42220f:	adc    DWORD PTR [esi+0x4],ecx
  422212:	imul   edx,DWORD PTR [esi-0x39],0xa650632
  422219:	inc    ecx
  42221a:	cmp    ebp,0x17
  42221d:	lock and eax,0x2ec69841
  422223:	loopne 0x422224
  422225:	xor    eax,esi
  422227:	sub    edx,esi
  422229:	sub    eax,0x5d624577
  42222e:	add    DWORD PTR [ebp+edx*8+0x7646ec2b],ebp
  422235:	in     al,0xf8
  422237:	mov    WORD PTR [ecx],?
  422239:	lods   al,BYTE PTR ds:[esi]
  42223a:	sub    ebp,esi
  42223c:	jb     0x42225e
  42223e:	jbe    0x422228
  422240:	sbb    DWORD PTR [ebx-0x257a9988],esp
  422246:	cmp    BYTE PTR [ecx-0x64],bl
  422249:	mov    ah,0x2d
  42224b:	push   ebx
  42224c:	lea    ecx,[esi]
  42224e:	sti    
  42224f:	or     BYTE PTR [eax+0x65c6cccc],0xdf
  422256:	mov    al,0x7f
  422258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422259:	loop   0x4222b4
  42225b:	add    edi,ecx
  42225d:	outs   dx,BYTE PTR ds:[esi]
  42225e:	not    BYTE PTR [ebp-0x53]
  422261:	sbb    BYTE PTR ds:0x3cbcefbe,dh
  422267:	loop   0x4221f8
  422269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42226a:	rcl    edx,cl
  42226c:	xchg   BYTE PTR [ebx],bl
  42226e:	and    al,0x9f
  422270:	inc    ebp
  422271:	std    
  422272:	sbb    al,0x69
  422274:	and    esi,edi
  422276:	fwait
  422277:	cli    
  422278:	mov    dh,0xfe
  42227a:	xchg   ecx,eax
  42227b:	sbb    eax,0xcfff5240
  422280:	cmp    BYTE PTR [eax+0x61],al
  422283:	ret    
  422284:	cmp    eax,0x118a8739
  422289:	ss inc edx
  42228b:	push   edx
  42228c:	mov    ?,WORD PTR [ebp-0x95c8d]
  422292:	out    dx,al
  422293:	test   bl,bl
  422295:	xchg   DWORD PTR [ebx],esp
  422297:	test   eax,0xc236549e
  42229c:	js     0x42228b
  42229e:	popf   
  42229f:	(bad)  
  4222a1:	repnz out 0x24,al
  4222a4:	jbe    0x4222ed
  4222a6:	jecxz  0x4222d7
  4222a8:	xchg   ebx,eax
  4222a9:	cmp    al,0xa0
  4222ab:	jne    0x42229a
  4222ad:	cmp    BYTE PTR [ecx+edx*8-0x79a3fa9b],al
  4222b4:	test   al,0xc3
  4222b6:	out    dx,al
  4222b7:	loope  0x422314
  4222b9:	xchg   esp,eax
  4222ba:	mov    BYTE PTR [eax-0x32],ah
  4222bd:	fnstenv [ebp+0x25636635]
  4222c3:	idiv   BYTE PTR [edi-0x52e465d8]
  4222c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ca:	add    DWORD PTR [edx+ebp*8],ebp
  4222cd:	inc    ebx
  4222ce:	repz fld QWORD PTR [ebx]
  4222d1:	sub    eax,0xffaee0ec
  4222d6:	shr    BYTE PTR [ebx+0x7f],cl
  4222d9:	rcr    DWORD PTR [edi+edi*2+0x7b],cl
  4222dd:	lea    ebp,[ecx+0x61]
  4222e0:	and    BYTE PTR [ebx+0x1c],dl
  4222e3:	adc    eax,0x3099e5fa
  4222e8:	inc    ebp
  4222e9:	rcl    DWORD PTR [esi],1
  4222eb:	iret   
  4222ec:	jmp    0x422344
  4222ee:	xchg   ebp,eax
  4222ef:	add    BYTE PTR [ebp-0x58f65cb4],0x25
  4222f6:	test   DWORD PTR [ecx],ecx
  4222f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f9:	mov    edx,0x70002dba
  4222fe:	bound  ebp,QWORD PTR [esi+0x15]
  422301:	fdivr  QWORD PTR [eax]
  422303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422304:	fsub   QWORD PTR [ecx-0x3f]
  422307:	out    dx,eax
  422308:	cmc    
  422309:	aas    
  42230a:	fsubr  DWORD PTR [esi+0x71]
  42230d:	int3   
  42230e:	mov    ebx,0x37bb04b3
  422313:	mov    ah,0x6a
  422315:	shld   edx,esp,cl
  422318:	test   BYTE PTR [edi-0x75f903e1],cl
  42231e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42231f:	push   edx
  422320:	mov    ecx,0x3bd60bde
  422325:	in     eax,0x16
  422327:	dec    edi
  422328:	je     0x4222bf
  42232a:	mov    eax,ds:0x202d27e5
  42232f:	jp     0x422380
  422331:	sbb    WORD PTR [edx-0x4217c5e2],si
  422338:	add    DWORD PTR [ebx+ecx*1],0x7088b0d2
  42233f:	sub    eax,0x14d5d51f
  422344:	push   esi
  422345:	sub    al,0x55
  422347:	dec    ebp
  422348:	daa    
  422349:	leave  
  42234a:	pop    es
  42234b:	cmp    eax,0x35326117
  422350:	dec    ecx
  422351:	test   al,0x56
  422353:	and    eax,0xdaf1e74e
  422358:	lahf   
  422359:	adc    eax,edx
  42235b:	ins    DWORD PTR es:[edi],dx
  42235c:	retf   
  42235d:	int    0x1c
  42235f:	mov    ebp,0x87456718
  422364:	cdq    
  422365:	pop    esp
  422366:	add    edx,DWORD PTR [ecx+0x54]
  422369:	mov    ds:0x9c245b47,eax
  42236e:	inc    esp
  42236f:	adc    DWORD PTR [esi-0x3f],edx
  422372:	mov    ah,0x63
  422374:	inc    ebp
  422375:	int3   
  422376:	fisubr DWORD PTR [esi]
  422378:	inc    esp
  422379:	int3   
  42237a:	call   0x32c6:0xe01a0e92
  422381:	lods   al,BYTE PTR ds:[esi]
  422382:	call   0xe010ca6a
  422387:	mov    eax,0xe92a2eb3
  42238c:	jle    0x4223f6
  42238e:	sti    
  42238f:	mov    dl,0x1c
  422391:	sub    BYTE PTR [esi+0x3c8c3dac],ah
  422397:	xor    BYTE PTR [eax+0x76],cl
  42239a:	or     DWORD PTR [eax-0x6c],0xd81fd85b
  4223a1:	mov    ch,0xb7
  4223a3:	hlt    
  4223a4:	sbb    eax,0x3cd57c2
  4223a9:	js     0x422330
  4223ab:	lock je 0x42239c
  4223ae:	(bad)  
  4223af:	ss push es
  4223b1:	mov    ecx,0x174332f0
  4223b6:	lahf   
  4223b7:	sub    eax,0xfb07f8b
  4223bc:	cwde   
  4223bd:	mov    ebp,0xce3bbc2f
  4223c2:	jne    0x42241f
  4223c4:	adc    al,0x16
  4223c6:	dec    eax
  4223c7:	out    0x8f,eax
  4223c9:	sbb    DWORD PTR [eax+0x3eb3eee4],0x74
  4223d0:	jnp    0x422367
  4223d2:	dec    ecx
  4223d3:	div    BYTE PTR [ebp+0x78ff5de]
  4223d9:	xchg   DWORD PTR [ebx+0x4fa03b85],eax
  4223df:	dec    esi
  4223e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223e1:	cmovnp ebp,DWORD PTR [eax+0x20]
  4223e5:	jne    0x4223fc
  4223e7:	adc    esp,DWORD PTR [edi-0xd]
  4223ea:	add    eax,0x4152f5ce
  4223ef:	mov    esp,0xf55fb771
  4223f4:	jne    0x4223e9
  4223f6:	cmp    eax,edi
  4223f8:	pusha  
  4223f9:	ja     0x4223d9
  4223fb:	xchg   esp,eax
  4223fc:	lea    eax,[edi-0x5d4c8a74]
  422402:	fisub  DWORD PTR [ebx+0x6bf1c5b]
  422408:	mov    ch,0xf3
  42240a:	adc    al,0x20
  42240c:	popa   
  42240d:	repz scas al,BYTE PTR es:[edi]
  42240f:	outs   dx,BYTE PTR ds:[esi]
  422410:	dec    edx
  422411:	ds inc esp
  422413:	(bad)  
  422414:	adc    ebp,DWORD PTR [eax-0x42]
  422417:	pop    eax
  422418:	push   ss
  422419:	xchg   ecx,eax
  42241a:	add    edi,DWORD PTR [ecx-0x133d7274]
  422420:	call   0x2dc8044d
  422425:	mov    bl,bh
  422427:	in     al,0x22
  422429:	clc    
  42242a:	dec    edx
  42242b:	cs test al,0x56
  42242e:	push   esp
  42242f:	pop    edx
  422430:	shl    DWORD PTR [esi-0x41],cl
  422433:	call   0xfd016c35
  422438:	mov    WORD PTR [ebp+0x41],ds
  42243b:	mov    ds:0x1eec10d8,eax
  422440:	jb     0x4224a5
  422442:	aam    0x72
  422444:	xchg   ebp,eax
  422445:	mov    bh,0x9
  422447:	adc    bh,BYTE PTR [ebx-0x7b]
  42244a:	cmp    DWORD PTR [esi],0xffffffee
  42244d:	call   0x1397:0x2a131b
  422454:	push   eax
  422455:	adc    al,0xd3
  422457:	pop    ecx
  422458:	sbb    dl,cl
  42245a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245b:	es mov esi,0x83e7acfe
  422461:	(bad)  
  422462:	and    ah,BYTE PTR [esp+eiz*4]
  422465:	fs out dx,eax
  422467:	jb     0x422495
  422469:	fst    DWORD PTR [ebx]
  42246b:	or     DWORD PTR [eax],eax
  42246d:	loope  0x422431
  42246f:	add    dl,BYTE PTR [esp+ecx*2+0x51]
  422473:	lods   al,BYTE PTR es:[esi]
  422475:	pop    edx
  422476:	xchg   ebx,eax
  422477:	imul   esp,DWORD PTR [ebx-0x53],0x10
  42247b:	fstp   QWORD PTR [esp+eiz*4]
  42247e:	jo     0x422483
  422480:	in     al,dx
  422481:	jmp    0xd4545952
  422486:	fs jmp 0x8716:0xfcbf1599
  42248e:	fist   WORD PTR [eax-0x4110b58c]
  422494:	(bad)  
  422495:	mov    esi,0x21995cf7
  42249a:	xchg   esp,eax
  42249b:	adc    eax,0x28887b8a
  4224a0:	sub    DWORD PTR [edi+eiz*2],esi
  4224a3:	cli    
  4224a4:	sub    al,0x5
  4224a6:	inc    ebp
  4224a7:	in     eax,0x46
  4224a9:	(bad)  
  4224aa:	mov    bl,0x23
  4224ac:	xor    al,0x1d
  4224ae:	js     0x4224c8
  4224b0:	xchg   BYTE PTR [esi],bl
  4224b2:	adc    al,0x57
  4224b4:	test   al,0x76
  4224b6:	dec    edx
  4224b7:	clc    
  4224b8:	scas   eax,DWORD PTR es:[edi]
  4224b9:	lds    esi,FWORD PTR [ecx+0x209dca11]
  4224bf:	jno    0x4224cd
  4224c1:	in     eax,0x28
  4224c3:	aas    
  4224c4:	pop    edx
  4224c5:	cwde   
  4224c6:	in     al,dx
  4224c7:	shl    BYTE PTR [eax+0x39],1
  4224ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224cb:	jbe    0x42250c
  4224cd:	fsubr  st,st(3)
  4224cf:	and    al,0x52
  4224d1:	rcl    bl,cl
  4224d3:	push   esp
  4224d4:	push   eax
  4224d5:	ret    
  4224d6:	les    edx,FWORD PTR [ebx]
  4224d8:	retf   0xc411
  4224db:	outs   dx,DWORD PTR ds:[esi]
  4224dc:	mov    eax,ds:0xbd75f72e
  4224e1:	mov    dl,0x28
  4224e3:	int3   
  4224e4:	js     0x4224a7
  4224e6:	xchg   esp,eax
  4224e7:	jae    0x422557
  4224e9:	inc    edx
  4224ea:	add    DWORD PTR [ebx+edx*2-0x8],0x442c91bf
  4224f2:	imul   DWORD PTR [ecx-0x4c]
  4224f5:	ror    BYTE PTR [ebp+0x610f919],cl
  4224fb:	inc    ebx
  4224fc:	sbb    edi,DWORD PTR [ecx]
  4224fe:	test   eax,0xeae36d4e
  422503:	jb     0x422520
  422505:	loopne 0x4224f9
  422507:	test   DWORD PTR [edx],esp
  422509:	and    ebp,eax
  42250b:	mov    esp,0x9a72c248
  422510:	mov    eax,ds:0xc68236d7
  422515:	push   esp
  422516:	and    esp,DWORD PTR [edi-0x3fa1e765]
  42251c:	imul   DWORD PTR [edi]
  42251e:	clc    
  42251f:	add    cl,BYTE PTR [ebx-0x51]
  422522:	enter  0x624d,0x8a
  422526:	imul   esi,DWORD PTR [ecx+ecx*1-0x5ae41bcc],0x900a5210
  422531:	dec    ebx
  422532:	mov    ch,0x8f
  422534:	sbb    BYTE PTR [edx+0xa],ah
  422537:	enter  0x8983,0xf0
  42253b:	lahf   
  42253c:	daa    
  42253d:	mov    ds:0x4fa6bc06,eax
  422542:	outs   dx,BYTE PTR ds:[esi]
  422543:	(bad)  
  422545:	add    eax,0x596f12e9
  42254a:	test   al,0x3f
  42254c:	cmp    DWORD PTR [esi-0x11],esp
  42254f:	or     al,0xa9
  422551:	imul   edx,esp,0x2c
  422554:	adc    DWORD PTR [edx],0xf03bf774
  42255a:	dec    ebp
  42255b:	(bad)  
  42255d:	cmp    bl,ch
  42255f:	mov    al,ds:0xc186d762
  422564:	xor    eax,0xa76aed02
  422569:	xlat   BYTE PTR ds:[ebx]
  42256a:	enter  0xa3ac,0xeb
  42256e:	push   edx
  42256f:	mov    ch,0xa7
  422571:	jg     0x4225eb
  422573:	cmp    eax,0x62088583
  422578:	js     0x42258d
  42257a:	mov    ecx,DWORD PTR [edi]
  42257c:	mov    ah,0x9e
  42257e:	add    eax,DWORD PTR [eax+0x49904607]
  422584:	mov    al,0xd7
  422586:	pop    esp
  422587:	outs   dx,DWORD PTR ds:[esi]
  422588:	jecxz  0x42258f
  42258a:	xor    eax,0xad451e46
  42258f:	mov    ch,0x7a
  422591:	jmp    0x42257f
  422593:	idiv   BYTE PTR [ebx]
  422595:	int3   
  422596:	psllq  mm6,mm7
  422599:	mov    ah,0x32
  42259b:	lea    esi,ss:[esi+0x6a]
  42259f:	mov    ah,0xf8
  4225a1:	inc    ebx
  4225a2:	in     al,dx
  4225a3:	fild   DWORD PTR [ecx]
  4225a5:	ins    DWORD PTR es:[edi],dx
  4225a6:	ins    BYTE PTR es:[edi],dx
  4225a7:	dec    ebp
  4225a8:	sbb    BYTE PTR [eax-0x46d27009],cl
  4225ae:	xor    ch,al
  4225b0:	arpl   WORD PTR [esi],dx
  4225b2:	(bad)  
  4225b3:	push   ecx
  4225b4:	or     ebp,DWORD PTR [ebx]
  4225b6:	xlat   BYTE PTR ds:[ebx]
  4225b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b8:	cs in  eax,0x74
  4225bb:	inc    ebp
  4225bc:	jbe    0x4225be
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0xbee3772c
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [ebp+eax*2-0x59be6132],ah
  4225e0:	sub    dl,BYTE PTR [ebx+0x35b11df3]
  4225e6:	fist   WORD PTR [eax-0x65]
  4225e9:	js     0x422638
  4225eb:	sub    edx,DWORD PTR [edi-0x69]
  4225ee:	or     BYTE PTR [edx-0x47c23162],cl
  4225f4:	xchg   esp,eax
  4225f5:	lahf   
  4225f6:	pop    esi
  4225f7:	aam    0x9c
  4225f9:	retf   
  4225fa:	jp     0x4225f0
  4225fc:	dec    ebp
  4225fd:	mov    eax,ds:0xa10b4c3b
  422602:	stos   BYTE PTR es:[edi],al
  422603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422604:	or     eax,ebx
  422606:	sub    DWORD PTR [ecx-0x27c966af],ecx
  42260c:	jb     0x4225a2
  42260e:	push   ss
  42260f:	sub    edx,DWORD PTR [eax+eax*8]
  422612:	or     eax,0x6cb50fe3
  422617:	scas   eax,DWORD PTR es:[edi]
  422618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422619:	adc    DWORD PTR ss:[esi],0x42
  42261d:	stos   DWORD PTR es:[edi],eax
  42261e:	xchg   ebx,eax
  42261f:	xor    ecx,DWORD PTR [ebp+0x7a]
  422622:	push   es
  422623:	jecxz  0x42262a
  422625:	mov    cl,0xeb
  422627:	xor    BYTE PTR [edx+edi*1+0x25bfde7],al
  42262e:	jo     0x422674
  422630:	in     al,0xad
  422632:	pushf  
  422633:	data16 ins BYTE PTR es:[edi],dx
  422635:	test   al,0x57
  422637:	aaa    
  422638:	jo     0x4226ab
  42263a:	aas    
  42263b:	fmul   QWORD PTR [esp+esi*2-0x61381a88]
  422642:	call   0xc320:0xe1ed91a8
  422649:	in     eax,dx
  42264a:	mov    cl,0x9c
  42264c:	pusha  
  42264d:	push   esp
  42264e:	dec    ecx
  42264f:	in     al,0x3b
  422651:	xchg   ebp,eax
  422652:	inc    eax
  422653:	(bad)  
  422654:	out    dx,eax
  422655:	dec    esi
  422656:	dec    ecx
  422657:	mov    esp,0x8e9cb0e
  42265c:	in     eax,dx
  42265d:	push   eax
  42265e:	dec    edi
  42265f:	les    eax,FWORD PTR [ecx]
  422661:	cmp    al,0xea
  422663:	pop    DWORD PTR [esi+ebx*4]
  422666:	je     0x4225e8
  422668:	pop    ecx
  422669:	outs   dx,BYTE PTR ds:[esi]
  42266a:	or     BYTE PTR [edi+0x4e],dh
  42266d:	mov    ebx,0xee9e7e87
  422672:	outs   dx,BYTE PTR ds:[esi]
  422673:	int    0xc0
  422675:	adc    eax,eax
  422677:	mov    ds:0x43d3ad88,al
  42267c:	xchg   ebx,eax
  42267d:	inc    edx
  42267e:	test   eax,0x706edb06
  422683:	shl    BYTE PTR [ebx+0x1ac0df82],1
  422689:	xchg   ebx,eax
  42268a:	popa   
  42268b:	mov    ch,0x71
  42268d:	jbe    0x422708
  42268f:	mov    dl,0xe0
  422691:	xor    dh,BYTE PTR [eax+0x28]
  422694:	sar    DWORD PTR [ebx],cl
  422696:	mov    eax,0x93ed9a00
  42269b:	inc    esi
  42269c:	neg    BYTE PTR [ecx]
  42269e:	hlt    
  42269f:	mov    eax,ds:0x32b06bc2
  4226a4:	popf   
  4226a5:	jnp    0x42271e
  4226a7:	fistp  DWORD PTR [edi+ecx*8+0x6aa7f80f]
  4226af:	pop    edx
  4226b0:	lahf   
  4226b1:	jnp    0x422657
  4226b3:	cmc    
  4226b4:	pop    ss
  4226b5:	fwait
  4226b6:	adc    BYTE PTR [edx],bl
  4226b8:	loope  0x422710
  4226ba:	inc    esi
  4226bb:	pop    ebp
  4226bc:	dec    ecx
  4226bd:	fcom   DWORD PTR [ecx]
  4226bf:	mov    ecx,DWORD PTR [edx+0x7c]
  4226c2:	add    cl,BYTE PTR [edi+0x78]
  4226c5:	and    BYTE PTR [edi+0x45],0x68
  4226c9:	pop    edx
  4226ca:	out    dx,eax
  4226cb:	inc    edx
  4226cc:	and    al,BYTE PTR [eax+0x1602b42b]
  4226d2:	or     DWORD PTR [ebx+0x4c4c07a6],ebx
  4226d8:	scas   eax,DWORD PTR es:[edi]
  4226d9:	stc    
  4226da:	mov    al,ds:0x1547d9d3
  4226df:	cli    
  4226e0:	pop    ss
  4226e1:	xchg   ebp,eax
  4226e2:	stos   BYTE PTR es:[edi],al
  4226e3:	mov    eax,0x6bdec4fc
  4226e8:	stos   BYTE PTR es:[edi],al
  4226e9:	and    al,BYTE PTR [ebp+0x11]
  4226ec:	jns    0x422733
  4226ee:	adc    ecx,DWORD PTR [ebx+0x8]
  4226f1:	outs   dx,DWORD PTR ds:[esi]
  4226f2:	dec    esp
  4226f3:	and    BYTE PTR [ebx-0x489478e8],al
  4226f9:	fstp   QWORD PTR [ebp+0x6d425ec5]
  4226ff:	data16 hlt 
  422701:	sub    eax,0x7240ad98
  422706:	xchg   ebx,eax
  422707:	adc    BYTE PTR [ebx+0x7e0b4838],dl
  42270d:	imul   ebx,edi,0x7a3af927
  422713:	out    0xb1,eax
  422715:	inc    ecx
  422716:	lea    eax,[ebp-0xe25b545]
  42271c:	mov    ds:0x8cafe9ab,eax
  422721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422722:	pop    edi
  422723:	jnp    0x42270b
  422725:	out    0x14,eax
  422727:	inc    esp
  422728:	cmp    eax,0x47870f1f
  42272d:	sar    BYTE PTR [edx-0x574fed76],1
  422733:	int    0x5c
  422735:	mov    ch,0xeb
  422737:	xchg   edi,eax
  422738:	push   es
  422739:	jg     0x4226ff
  42273b:	inc    ecx
  42273c:	retf   0x2410
  42273f:	dec    ebx
  422740:	jmp    0x54e528f4
  422745:	mov    edi,0x1ee9b5ce
  42274a:	inc    ebx
  42274b:	mov    ecx,DWORD PTR [edx+ebp*2]
  42274e:	setnp  BYTE PTR [eax+0x6b]
  422752:	ds in  al,dx
  422754:	or     BYTE PTR [eax+0x35761960],bl
  42275a:	xlat   BYTE PTR ds:[ebx]
  42275b:	add    eax,0xe36437f6
  422760:	sbb    eax,DWORD PTR [edx-0x28527103]
  422766:	push   0x69072188
  42276b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276c:	mov    eax,ds:0x71de5d4
  422771:	loope  0x42279e
  422773:	loopne 0x42273c
  422775:	mov    WORD PTR [ebp-0x28],ds
  422778:	ret    
  422779:	mov    bl,0xf9
  42277b:	popa   
  42277c:	hlt    
  42277d:	or     edx,esp
  42277f:	cmp    esp,ecx
  422781:	retf   
  422782:	mov    dl,0x4e
  422784:	ss jg  0x422768
  422787:	and    BYTE PTR [ebx+0x2d],dl
  42278a:	fbld   TBYTE PTR [ebp-0x5a]
  42278d:	mov    bh,0x82
  42278f:	and    BYTE PTR [esp+edi*4-0x5],0x24
  422794:	enter  0xe780,0x9b
  422798:	sti    
  422799:	push   cs
  42279a:	jno    0x422807
  42279c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42279d:	inc    edx
  42279e:	cmc    
  42279f:	sub    DWORD PTR [ebx-0x57f3fc85],ebp
  4227a5:	outs   dx,DWORD PTR ds:[esi]
  4227a6:	int3   
  4227a7:	pop    ss
  4227a8:	add    eax,0x12630c6a
  4227ad:	sub    DWORD PTR [esi*8-0x2dd9acd7],ebp
  4227b4:	es cdq 
  4227b6:	imul   ebp,DWORD PTR [ecx-0x11],0xffffff82
  4227ba:	inc    DWORD PTR [eax+0x3a3d359f]
  4227c0:	sahf   
  4227c1:	daa    
  4227c2:	stc    
  4227c3:	pusha  
  4227c4:	int    0x9c
  4227c6:	fwait
  4227c7:	push   edx
  4227c8:	(bad)  
  4227c9:	clc    
  4227ca:	ins    BYTE PTR es:[edi],dx
  4227cb:	xchg   ecx,eax
  4227cc:	jno    0x422835
  4227ce:	sbb    BYTE PTR [ebx-0x795ee74c],bl
  4227d4:	ror    BYTE PTR [esi+0x1a],cl
  4227d7:	xor    al,0x56
  4227d9:	mov    eax,ds:0x9b1a800d
  4227de:	out    0x46,al
  4227e0:	add    al,0x96
  4227e2:	popf   
  4227e3:	mov    al,ds:0x42effe0a
  4227e8:	wrmsr  
  4227ea:	mov    esp,0x780e89ff
  4227ef:	pop    ebx
  4227f0:	test   BYTE PTR ds:0x30edf2c6,0x1b
  4227f7:	add    al,0x5d
  4227f9:	cmp    esi,0x73
  4227fc:	jne    0x422783
  4227fe:	jmp    0x42282f
  422800:	jecxz  0x4227b8
  422802:	fisttp QWORD PTR [ebp+0x635c2e1c]
  422808:	xlat   BYTE PTR ds:[ebx]
  422809:	push   eax
  42280a:	sbb    bl,0xa2
  42280d:	jmp    FWORD PTR [ecx-0x7f723012]
  422813:	retf   
  422814:	(bad)  
  422816:	mov    esp,0xbe4d56d
  42281b:	lahf   
  42281c:	mov    ecx,0xea4f8a70
  422821:	and    ebx,DWORD PTR [edi]
  422823:	cdq    
  422824:	mov    ebx,0x79b8f359
  422829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42282a:	aam    0xbf
  42282c:	repnz out dx,al
  42282e:	or     eax,0xfc2fb458
  422833:	dec    ebx
  422834:	hlt    
  422835:	cli    
  422836:	jnp    0x4227eb
  422838:	adc    eax,0xb3a810e0
  42283d:	in     eax,0x9d
  42283f:	sti    
  422840:	push   edx
  422841:	sub    eax,0x9c9edc65
  422846:	cdq    
  422847:	clc    
  422848:	aam    0xfe
  42284a:	jl     0x42288f
  42284c:	sub    BYTE PTR [edi-0x64],bh
  42284f:	and    eax,DWORD PTR [eax+0x7a162663]
  422855:	xchg   BYTE PTR [ecx-0x5a1525da],bl
  42285b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42285d:	adc    DWORD PTR [eax],esp
  42285f:	lods   eax,DWORD PTR ds:[esi]
  422860:	retf   0xd8cc
  422863:	xchg   ecx,eax
  422864:	ja     0x4228a6
  422866:	daa    
  422867:	test   BYTE PTR [ebx-0x60a56b7b],dh
  42286d:	mov    ah,0x45
  42286f:	lock push 0x29
  422872:	cmc    
  422873:	daa    
  422874:	xor    BYTE PTR [edi+0x66a63a4d],dl
  42287a:	push   esp
  42287b:	and    DWORD PTR [esi+0x6e4c6e44],ecx
  422881:	add    al,0xd2
  422883:	(bad)  
  422884:	in     al,0x45
  422886:	cmp    BYTE PTR [ebx],bh
  422888:	neg    DWORD PTR [edi]
  42288a:	xor    eax,0x5868b804
  42288f:	arpl   cx,si
  422891:	inc    BYTE PTR [ebx-0xa058401]
  422897:	jae    0x42289e
  422899:	shl    BYTE PTR [ebx+0x45],1
  42289c:	mul    bh
  42289e:	sahf   
  42289f:	clc    
  4228a0:	data16 data16 into 
  4228a3:	aaa    
  4228a4:	(bad)  
  4228a5:	loopne 0x422835
  4228a7:	push   ss
  4228a8:	lds    ecx,FWORD PTR [eax+ecx*1+0x48]
  4228ac:	cli    
  4228ad:	shl    DWORD PTR [ebx-0x65],1
  4228b0:	cdq    
  4228b1:	out    0xaa,al
  4228b3:	int    0xfe
  4228b5:	mov    cl,0x58
  4228b7:	ins    DWORD PTR es:[edi],dx
  4228b8:	inc    ebx
  4228b9:	enter  0x5f1d,0xda
  4228bd:	js     0x4228db
  4228bf:	sub    ah,ah
  4228c1:	lods   eax,DWORD PTR ds:[esi]
  4228c2:	fldenv [edx-0x4]
  4228c5:	sbb    BYTE PTR [ecx],0x7c
  4228c8:	pushf  
  4228c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ca:	call   DWORD PTR [eax-0x1e3c92e]
  4228d0:	fisttp DWORD PTR [edi-0x5e]
  4228d3:	repz xor al,0x45
  4228d6:	into   
  4228d7:	mov    ss:0x9d653f23,al
  4228dd:	fisubr WORD PTR [edi-0xd6df7fa]
  4228e3:	xor    eax,0x532cba09
  4228e8:	mov    edx,0x87e1e209
  4228ed:	dec    esp
  4228ee:	fst    DWORD PTR [edx+0x64]
  4228f1:	ret    0xac85
  4228f4:	popf   
  4228f5:	jle    0x4228e4
  4228f7:	push   ecx
  4228f8:	gs aas 
  4228fa:	imul   eax,DWORD PTR [ecx+0x14dbd7cf],0x33b0367b
  422904:	inc    ecx
  422905:	mov    bh,ch
  422907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422908:	into   
  422909:	mov    dl,0x19
  42290b:	(bad)  
  42290c:	sti    
  42290d:	sub    DWORD PTR [edx+eax*1],0x7e8c04b4
  422914:	xor    dh,BYTE PTR [edi]
  422916:	mov    edi,0xe971c660
  42291b:	nop
  42291c:	mov    ch,0x4a
  42291e:	imul   ebp,ebx,0xaf92128b
  422924:	mov    ah,0xb3
  422926:	aas    
  422927:	xchg   esp,eax
  422928:	test   DWORD PTR gs:[ebp-0x37],eax
  42292c:	inc    edi
  42292d:	pop    eax
  42292e:	fmul   DWORD PTR [edi+0x30]
  422931:	adc    DWORD PTR [eax+0xa],ebp
  422934:	cmc    
  422935:	pop    edi
  422936:	mov    BYTE PTR [edx],bl
  422938:	int    0xb6
  42293a:	inc    esi
  42293b:	pop    eax
  42293c:	test   BYTE PTR [ebp+esi*8-0x20],dl
  422940:	dec    edx
  422941:	scas   eax,DWORD PTR es:[edi]
  422942:	les    esp,FWORD PTR [esi+0x70]
  422945:	test   al,0x37
  422947:	mov    dl,0x1e
  422949:	mov    ds:0x3e886692,eax
  42294e:	push   0x899daf90
  422953:	sub    edi,DWORD PTR [ebp-0x3b]
  422956:	es jno 0x422975
  422959:	or     BYTE PTR [edx+0x416e4f9],al
  42295f:	mov    WORD PTR [edx],gs
  422961:	test   dl,bl
  422963:	adc    BYTE PTR ds:0x5fe62617,dh
  422969:	push   es
  42296a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42296b:	or     ebp,DWORD PTR [esi+ebp*2-0x6c]
  42296f:	push   ebx
  422970:	aad    0x9c
  422972:	pusha  
  422973:	xor    BYTE PTR [ebx-0x7f],al
  422976:	adc    esi,0x7f
  422979:	es or  eax,0x66a9f4c7
  42297f:	adc    al,0x8a
  422981:	sbb    ch,ch
  422983:	add    ch,al
  422985:	pop    ecx
  422986:	scas   eax,DWORD PTR es:[edi]
  422987:	lea    eax,[ebx+0x55]
  42298a:	add    dh,bh
  42298c:	cmp    edx,eax
  42298e:	or     ebx,DWORD PTR [ecx-0x2e82a0b9]
  422994:	aam    0xf6
  422996:	retf   0x5d29
  422999:	and    ch,BYTE PTR [ebx]
  42299b:	bnd jge 0x422927
  42299e:	rcl    DWORD PTR [eax+0x3],cl
  4229a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229a2:	cmc    
  4229a3:	sbb    al,0xe2
  4229a5:	je     0x422a18
  4229a7:	and    ebp,DWORD PTR ds:0x1bf99fc3
  4229ad:	ror    cl,0x62
  4229b0:	inc    esp
  4229b1:	dec    edi
  4229b2:	jge    0x422958
  4229b4:	cmp    bh,BYTE PTR [ebx-0x2f]
  4229b7:	push   esp
  4229b8:	mov    edx,0x2845d17e
  4229bd:	add    bh,BYTE PTR [edx-0x7a]
  4229c0:	sbb    ebp,DWORD PTR ds:0x99a57ad8
  4229c6:	cs jno 0x4229ea
  4229c9:	lods   eax,DWORD PTR ds:[esi]
  4229ca:	sub    ah,BYTE PTR [edx+edx*8+0xca1d022]
  4229d1:	dec    ecx
  4229d2:	stos   DWORD PTR es:[edi],eax
  4229d3:	inc    eax
  4229d4:	inc    esp
  4229d5:	mov    edi,ds
  4229d7:	add    esi,eax
  4229d9:	imul   edx,ecx,0xffffffa1
  4229dc:	imul   eax,DWORD PTR [edi+0x65047b0c],0x96b25f15
  4229e6:	out    0x43,al
  4229e8:	jno    0x4229fe
  4229ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229eb:	or     dh,BYTE PTR [ecx]
  4229ed:	lods   eax,DWORD PTR ds:[esi]
  4229ee:	jp     0x422a16
  4229f0:	data16 mov ah,BYTE PTR [esi+0x2c]
  4229f4:	adc    BYTE PTR [ebp+0x69],cl
  4229f7:	sub    cl,BYTE PTR [ebp+0x68]
  4229fa:	pop    ss
  4229fb:	je     0x422993
  4229fd:	call   0x51d4:0xe0abef66
  422a04:	pop    esp
  422a05:	test   DWORD PTR [ebp-0x75e58752],0xe68843b8
  422a0f:	cmp    al,0x0
  422a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a12:	into   
  422a13:	xchg   ebp,eax
  422a14:	add    eax,0xd6d7ddb0
  422a19:	(bad)  
  422a1a:	lock xchg edx,eax
  422a1c:	ficom  DWORD PTR [eax+0x20]
  422a1f:	push   edi
  422a20:	adc    BYTE PTR [edi+0x329e841f],bh
  422a26:	pop    edx
  422a27:	iret   
  422a28:	dec    edx
  422a29:	clc    
  422a2a:	xor    BYTE PTR [ecx],bh
  422a2c:	pop    esi
  422a2d:	cmp    ah,BYTE PTR [edi-0x7c1243ee]
  422a33:	xor    dh,BYTE PTR [ecx-0x7aee3573]
  422a39:	dec    ebp
  422a3a:	add    DWORD PTR [edi],edx
  422a3c:	test   eax,0xbacaaafb
  422a41:	enter  0x7622,0x89
  422a45:	xor    esi,ebx
  422a47:	in     al,0xf0
  422a49:	push   eax
  422a4a:	mov    BYTE PTR [ecx+0x4a],ch
  422a4d:	loope  0x4229d5
  422a4f:	pop    esi
  422a50:	shl    BYTE PTR [esi],1
  422a52:	jb     0x422a3d
  422a54:	pop    ebx
  422a55:	and    eax,DWORD PTR [edx]
  422a57:	ja     0x422a07
  422a59:	imul   esp,DWORD PTR [ecx+0x67c7b678],0x32
  422a60:	jae    0x422a91
  422a62:	sub    BYTE PTR es:[ebp-0x69],bh
  422a66:	pop    ss
  422a67:	mov    al,0xe7
  422a69:	out    0xe0,al
  422a6b:	leave  
  422a6c:	mov    edx,0xefb076f0
  422a71:	fs jecxz 0x422a78
  422a74:	aaa    
  422a75:	add    BYTE PTR [eax+0x7a],cl
  422a78:	fwait
  422a79:	aas    
  422a7a:	inc    esp
  422a7b:	repnz lods eax,DWORD PTR ds:[esi]
  422a7d:	sub    eax,0xd68c5fc9
  422a82:	and    al,0x42
  422a84:	pop    eax
  422a85:	sub    al,0xf1
  422a87:	sub    BYTE PTR [eax+0x530f84d6],bl
  422a8d:	rcl    BYTE PTR [ebx+0x193e16c0],0x98
  422a94:	lds    esp,FWORD PTR [ecx+esi*2-0x2d]
  422a98:	(bad)  
  422a99:	out    dx,al
  422a9a:	(bad)  
  422a9b:	iret   
  422a9c:	test   eax,0x472329c8
  422aa1:	arpl   WORD PTR [edi-0x60],bp
  422aa4:	sbb    eax,0x75163d1e
  422aa9:	jg     0x422ab9
  422aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aac:	cmc    
  422aad:	gs push esi
  422aaf:	inc    esi
  422ab0:	test   al,0xea
  422ab2:	pop    ecx
  422ab3:	into   
  422ab4:	jbe    0x422aab
  422ab6:	push   edi
  422ab7:	fldcw  WORD PTR [edx-0x5c960f47]
  422abd:	add    ch,BYTE PTR [esi+edx*1+0x4d91be5b]
  422ac4:	xor    BYTE PTR ds:0x27ca2cce,cl
  422aca:	stc    
  422acb:	dec    eax
  422acc:	push   eax
  422acd:	add    BYTE PTR [eax],al
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edx-0x29],ah
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x65b598c9],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    al,bh
  422aeb:	push   esp
  422aec:	cmp    ebp,DWORD PTR [edi+edi*4-0x69409b80]
  422af3:	mov    ecx,0x30a78e8b
  422af8:	or     DWORD PTR ds:0xb28111f3,eax
  422afe:	sub    al,0x98
  422b00:	inc    esp
  422b01:	xchg   ebp,eax
  422b02:	(bad)  
  422b03:	pop    ds
  422b04:	ins    DWORD PTR es:[edi],dx
  422b05:	pop    ebp
  422b06:	sbb    al,BYTE PTR [ebp+0x71c18f67]
  422b0c:	add    bp,bp
  422b0f:	jecxz  0x422ac9
  422b11:	cli    
  422b12:	jmp    0x422afd
  422b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b15:	adc    edx,edx
  422b17:	clc    
  422b18:	sbb    DWORD PTR [ebp-0x2b],0x61
  422b1c:	mov    ds:0x294c2961,al
  422b21:	add    al,0x6e
  422b23:	(bad)  
  422b25:	ror    BYTE PTR ds:0x17598589,cl
  422b2b:	ret    
  422b2c:	dec    esi
  422b2d:	lods   eax,DWORD PTR ds:[esi]
  422b2e:	cmc    
  422b2f:	mov    eax,0x4d6bb234
  422b34:	fldenv [edi+0x35bb72c1]
  422b3b:	sahf   
  422b3c:	mov    dl,0xd9
  422b3e:	push   es
  422b3f:	cdq    
  422b40:	mov    al,0xff
  422b42:	mov    ebx,0x58ca5f15
  422b47:	pop    esi
  422b48:	sub    DWORD PTR [edi],0xffffffd1
  422b4b:	xchg   ebp,eax
  422b4c:	outs   dx,DWORD PTR ds:[esi]
  422b4d:	mov    eax,?
  422b4f:	xchg   DWORD PTR [ecx+0x54d44cd6],ecx
  422b55:	mov    al,ds:0x8ddc275f
  422b5a:	mov    ecx,0xec912c8d
  422b5f:	jmp    0x13fdbf
  422b64:	adc    eax,0xb5102744
  422b69:	(bad)  
  422b6a:	das    
  422b6b:	and    al,0x2d
  422b6d:	leave  
  422b6e:	retf   0x868b
  422b71:	or     esi,edi
  422b73:	dec    esp
  422b74:	jns    0x422bc2
  422b76:	hlt    
  422b77:	popf   
  422b78:	jno    0x422b43
  422b7a:	out    0xac,eax
  422b7c:	mov    ch,bh
  422b7e:	add    esi,DWORD PTR [esi-0x452ab9b1]
  422b84:	push   es
  422b85:	or     ebx,DWORD PTR [edi+0x1b4f2fb1]
  422b8b:	ret    0x1c94
  422b8e:	stc    
  422b8f:	sbb    edi,DWORD PTR [ecx-0x205f2049]
  422b95:	fsub   DWORD PTR [esi+0x26af5863]
  422b9b:	test   eax,0x50fc7d32
  422ba0:	jne    0x422b72
  422ba2:	jecxz  0x422bb0
  422ba4:	popf   
  422ba5:	add    ah,ah
  422ba7:	push   0x3f
  422ba9:	scas   al,BYTE PTR es:[edi]
  422baa:	dec    esi
  422bab:	int    0xd8
  422bad:	jp     0x422c1e
  422baf:	popa   
  422bb0:	out    dx,eax
  422bb1:	enter  0xacbe,0xa5
  422bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb6:	xor    BYTE PTR [esp+edi*8],dh
  422bb9:	(bad)  
  422bba:	xor    DWORD PTR [edx-0x41d004bd],edx
  422bc0:	sub    ecx,DWORD PTR [eax]
  422bc2:	jmp    0x422c07
  422bc4:	xchg   ecx,eax
  422bc5:	mov    esi,eax
  422bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc8:	mov    BYTE PTR [esp+ecx*1],al
  422bcb:	pop    es
  422bcc:	cwde   
  422bcd:	shl    BYTE PTR [ecx+0x3d1fce66],cl
  422bd3:	aam    0xf2
  422bd5:	sahf   
  422bd6:	dec    ecx
  422bd7:	or     ch,BYTE PTR [edx+0x9d0ed6f]
  422bdd:	jnp    0x422c4e
  422bdf:	fcomip st,st(7)
  422be1:	and    cl,cl
  422be3:	les    ebx,FWORD PTR [edx+0x15]
  422be6:	push   cs
  422be7:	dec    ebp
  422be8:	dec    edx
  422be9:	mov    al,0xb4
  422beb:	jp     0x422c01
  422bed:	(bad)  
  422bee:	pop    edi
  422bef:	nop
  422bf0:	lods   al,BYTE PTR ds:[esi]
  422bf1:	test   BYTE PTR [esi-0x3a21b70a],dl
  422bf7:	jge    0x422bbd
  422bf9:	mov    ds:0x7a03b005,eax
  422bfe:	lahf   
  422bff:	aas    
  422c00:	or     al,BYTE PTR [edi+0x24]
  422c03:	xchg   edi,eax
  422c04:	les    ebp,FWORD PTR ds:0xd2568182
  422c0a:	in     al,dx
  422c0b:	mov    edi,0x7aa04692
  422c10:	xlat   BYTE PTR ds:[ebx]
  422c11:	cld    
  422c12:	dec    edi
  422c13:	std    
  422c14:	stc    
  422c15:	icebp  
  422c16:	push   ebp
  422c17:	xor    al,0xa2
  422c19:	cmp    DWORD PTR [edx+0x66ec26a7],0x6de3e176
  422c23:	clc    
  422c24:	arpl   WORD PTR [esi+0x6],sp
  422c27:	push   cs
  422c28:	lods   al,BYTE PTR ds:[esi]
  422c29:	jnp    0x422c5e
  422c2b:	cld    
  422c2c:	mul    dl
  422c2e:	xchg   ebp,eax
  422c2f:	add    ecx,DWORD PTR [eax+0x67]
  422c32:	cmp    ah,0x2
  422c35:	adc    BYTE PTR [ecx],al
  422c37:	fwait
  422c38:	jmp    0x9f226649
  422c3d:	in     al,dx
  422c3e:	xchg   DWORD PTR [esi+0x50],eax
  422c41:	or     eax,0x219a3869
  422c46:	push   esp
  422c47:	neg    BYTE PTR [ebx+0x28]
  422c4a:	cmp    ch,BYTE PTR [ecx]
  422c4c:	jbe    0x422c3f
  422c4e:	pop    es
  422c4f:	loopne 0x422c64
  422c51:	adc    DWORD PTR [eax+ebx*2],esi
  422c54:	dec    edx
  422c55:	sub    dl,0x16
  422c58:	cmp    DWORD PTR [ebx],esi
  422c5a:	push   es
  422c5b:	add    cl,BYTE PTR [edx]
  422c5d:	adc    bl,BYTE PTR gs:[edi-0x2987169f]
  422c64:	pop    ebp
  422c65:	or     esp,ebp
  422c67:	std    
  422c68:	sti    
  422c69:	xchg   ebp,eax
  422c6a:	push   edx
  422c6b:	sub    eax,0x270e1383
  422c70:	dec    edx
  422c71:	or     ch,dh
  422c73:	daa    
  422c74:	sub    ch,BYTE PTR [ebx]
  422c76:	jmp    0xff7e4cfe
  422c7b:	pop    ebp
  422c7c:	cs repnz add eax,0x911e8b02
  422c83:	js     0x422cc3
  422c85:	sbb    DWORD PTR [ebp-0x4a],0xfffffff0
  422c89:	push   ss
  422c8a:	dec    ebx
  422c8b:	scas   eax,DWORD PTR es:[edi]
  422c8c:	mov    ch,0xa7
  422c8e:	popf   
  422c8f:	arpl   WORD PTR [ebx+esi*8],sp
  422c92:	jns    0x422c76
  422c94:	pop    esi
  422c95:	mov    ah,0xdd
  422c97:	out    0xea,al
  422c99:	daa    
  422c9a:	ins    DWORD PTR es:[edi],dx
  422c9b:	mov    cl,0xd0
  422c9d:	jno    0x422ce0
  422c9f:	xor    cl,BYTE PTR [ecx+0x46]
  422ca2:	mov    BYTE PTR [eax-0x1],ah
  422ca5:	(bad)  
  422ca6:	mov    eax,?
  422ca8:	jnp    0x422c71
  422caa:	ja     0x422c57
  422cac:	lea    esp,[edx-0x23]
  422caf:	cmp    ebp,edx
  422cb1:	sub    esi,esp
  422cb3:	cdq    
  422cb4:	mov    edi,0x52be1af
  422cb9:	mov    DWORD PTR [ecx+0x41a4fc9d],ebx
  422cbf:	adc    al,0x89
  422cc1:	dec    edi
  422cc2:	loopne 0x422d2d
  422cc4:	adc    BYTE PTR [ebx+ebx*2],bl
  422cc7:	bound  ebp,QWORD PTR [edi]
  422cc9:	fsubr  st(4),st
  422ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ccd:	clc    
  422cce:	rcr    BYTE PTR [ecx+ebx*2],cl
  422cd1:	and    eax,0x48f5dee1
  422cd6:	out    0xcb,eax
  422cd8:	xchg   eax,edx
  422cda:	dec    esp
  422cdb:	fs int 0x3e
  422cde:	pop    dx
  422ce0:	jae    0x422d44
  422ce2:	mov    esi,0x936074c5
  422ce7:	cli    
  422ce8:	adc    eax,0xdc15a311
  422ced:	inc    ebp
  422cee:	jno    0x422cf1
  422cf0:	adc    al,0xb4
  422cf2:	outs   dx,BYTE PTR ds:[esi]
  422cf3:	xor    edi,0xffffffec
  422cf6:	lods   al,BYTE PTR ds:[esi]
  422cf7:	inc    eax
  422cf8:	jecxz  0x422d01
  422cfa:	or     eax,0x94bc231d
  422cff:	mov    bl,0x41
  422d01:	jae    0x422d6e
  422d03:	dec    esp
  422d04:	pusha  
  422d05:	xchg   BYTE PTR [eax+0x4e],al
  422d08:	jbe    0x422d50
  422d0a:	js     0x422cc0
  422d0c:	and    eax,0x3fca2865
  422d11:	fbstp  TBYTE PTR [ebp-0x7ca7142e]
  422d17:	das    
  422d18:	jecxz  0x422cf4
  422d1a:	xchg   esp,eax
  422d1b:	call   0x2c5c:0x678a9d68
  422d22:	add    esi,DWORD PTR [eax-0x7c]
  422d25:	mov    edx,0x256fc7f3
  422d2a:	pop    ebx
  422d2b:	and    BYTE PTR [edi-0x2cca259],0x4e
  422d32:	pusha  
  422d33:	cmp    ebp,edi
  422d35:	call   0xa1eab846
  422d3a:	mov    al,0xf9
  422d3c:	push   ebp
  422d3d:	pop    ebp
  422d3e:	dec    esi
  422d3f:	popf   
  422d40:	push   0xffffffca
  422d42:	xor    al,0x39
  422d44:	in     al,0x6e
  422d46:	jp     0x422d6d
  422d48:	icebp  
  422d49:	and    al,bh
  422d4b:	hlt    
  422d4c:	xor    al,0x37
  422d4e:	push   ecx
  422d4f:	pop    es
  422d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d51:	dec    eax
  422d52:	push   esi
  422d53:	jp     0x422da2
  422d55:	push   esp
  422d56:	mov    eax,ds:0xb54a98a1
  422d5b:	call   0xc774:0xc13f31c1
  422d62:	aad    0x16
  422d64:	sbb    eax,0x919cf0dc
  422d69:	rcr    DWORD PTR [ebx-0x68],1
  422d6c:	ret    
  422d6d:	mov    ch,0x96
  422d6f:	jecxz  0x422d48
  422d71:	aad    0xc6
  422d73:	xchg   ebp,eax
  422d74:	into   
  422d75:	mov    es,eax
  422d77:	out    0x7b,al
  422d79:	mov    esi,0x782a143
  422d7e:	ja     0x422d71
  422d80:	dec    edx
  422d81:	inc    ecx
  422d82:	and    esi,ecx
  422d84:	mov    BYTE PTR [eax-0x5f],ah
  422d87:	or     DWORD PTR [eax+0x7c50d3b7],esp
  422d8d:	stos   DWORD PTR es:[edi],eax
  422d8e:	cmp    eax,DWORD PTR [esi]
  422d90:	retf   
  422d91:	mov    ds,WORD PTR [ecx]
  422d93:	adc    eax,0xf44fed0c
  422d98:	adc    ecx,0xf3b258a9
  422d9e:	(bad)  
  422d9f:	pop    ds
  422da0:	pusha  
  422da1:	aas    
  422da2:	push   edx
  422da3:	dec    edx
  422da4:	ins    DWORD PTR es:[edi],dx
  422da5:	vmulps ymm2,ymm3,YMMWORD PTR [ebp+0x3b]
  422daa:	add    edi,DWORD PTR [edx]
  422dac:	mov    eax,ds:0x5fe6e02d
  422db1:	dec    edi
  422db2:	call   0x5381c6d6
  422db7:	dec    eax
  422db8:	adc    eax,0x53b71124
  422dbd:	inc    esp
  422dbe:	jae    0x422d67
  422dc0:	pop    es
  422dc1:	div    DWORD PTR [edi-0x4615cf46]
  422dc7:	mov    WORD PTR [edx-0x4b53e91f],?
  422dcd:	fsubr  QWORD PTR [edi+0x103e7383]
  422dd3:	(bad)  
  422dd4:	mov    edx,0x69ee0624
  422dd9:	div    DWORD PTR [ecx-0x35]
  422ddc:	xor    BYTE PTR [ebx],0x6
  422ddf:	scas   al,BYTE PTR es:[edi]
  422de0:	push   0x9
  422de2:	pop    eax
  422de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422de4:	xor    BYTE PTR [ebp+0x1a2e3c27],0x6e
  422deb:	sub    al,0xfa
  422ded:	fsubr  DWORD PTR [eax+edx*4-0x2382ee8c]
  422df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422df5:	pop    esi
  422df6:	add    esi,DWORD PTR [eax]
  422df8:	jp     0x422e5d
  422dfa:	or     eax,0x2514f0de
  422dff:	lock (bad) 
  422e02:	daa    
  422e03:	jae    0x422e5f
  422e05:	mov    ds:0xa5c5e33,eax
  422e0a:	and    edx,0x55
  422e0d:	out    dx,al
  422e0e:	daa    
  422e0f:	jnp    0x422e15
  422e11:	retf   
  422e12:	js     0x422e2e
  422e14:	xchg   ah,bl
  422e16:	test   DWORD PTR [eax-0x68bafb8a],ecx
  422e1c:	xor    BYTE PTR [esi],bh
  422e1e:	std    
  422e1f:	and    esi,DWORD PTR [edi+0x44]
  422e22:	hlt    
  422e23:	sbb    dl,BYTE PTR [ecx]
  422e25:	ret    0xc5c9
  422e28:	out    dx,eax
  422e29:	and    al,0x6b
  422e2b:	or     DWORD PTR [ecx-0x759072dd],ebx
  422e31:	push   ebp
  422e32:	pop    ds
  422e33:	add    DWORD PTR [esi-0x228481ef],0xffffffb0
  422e3a:	dec    esi
  422e3b:	add    eax,0x7267de4e
  422e40:	(bad)  
  422e42:	push   edi
  422e43:	fdiv   DWORD PTR [esi-0x2b]
  422e46:	jb     0x422dce
  422e48:	rcr    DWORD PTR [ebp+0x357a5088],0xf9
  422e4f:	mov    BYTE PTR [esi],ch
  422e51:	and    al,0xa5
  422e53:	jbe    0x422e96
  422e55:	test   eax,0xb102c76c
  422e5a:	fs and al,0x61
  422e5d:	gs fs js 0x422e84
  422e61:	stc    
  422e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e63:	mov    WORD PTR [ebp-0x3dd5dba6],?
  422e69:	inc    edi
  422e6a:	aam    0xb3
  422e6c:	ror    DWORD PTR [eax],1
  422e6e:	icebp  
  422e6f:	xchg   edi,eax
  422e70:	minps  xmm4,XMMWORD PTR [esi+ebp*4+0x7]
  422e75:	in     eax,0x41
  422e77:	inc    ebx
  422e78:	or     DWORD PTR [ebx-0x18],0xe996e3ae
  422e7f:	add    eax,DWORD PTR [eax+0x45]
  422e82:	push   ebp
  422e83:	mov    ch,0x47
  422e85:	lods   eax,DWORD PTR ds:[esi]
  422e86:	std    
  422e87:	pop    ebx
  422e88:	mov    ecx,0x215264d6
  422e8d:	push   ecx
  422e8e:	add    dl,0x48
  422e91:	xchg   edi,eax
  422e92:	mov    edi,0x5ea168f7
  422e97:	icebp  
  422e98:	mov    ch,0x2c
  422e9a:	and    ecx,DWORD PTR [esi-0x1c]
  422e9d:	mov    cl,0x9f
  422e9f:	or     bl,bh
  422ea1:	dec    esi
  422ea2:	adc    esi,DWORD PTR [esi+0x6e]
  422ea5:	inc    edx
  422ea6:	(bad)  
  422ea7:	pop    eax
  422ea8:	mov    esi,0xb645edf9
  422ead:	dec    ebp
  422eae:	out    0xd2,al
  422eb0:	popf   
  422eb1:	popa   
  422eb2:	dec    ecx
  422eb3:	shl    BYTE PTR [esi+0x1e],1
  422eb6:	test   eax,0x877913ce
  422ebb:	lods   eax,DWORD PTR ds:[esi]
  422ebc:	int3   
  422ebd:	rcl    eax,1
  422ebf:	and    eax,0x7fbca712
  422ec4:	fstp   QWORD PTR [ebx]
  422ec6:	retf   0xae40
  422ec9:	cmp    dh,BYTE PTR [ecx]
  422ecb:	(bad)  [esi-0x25838ad1]
  422ed1:	xor    eax,0xfc24e616
  422ed6:	ss popf 
  422ed8:	pop    edx
  422ed9:	or     ebx,DWORD PTR [esi]
  422edb:	scas   eax,DWORD PTR es:[edi]
  422edc:	adc    eax,DWORD PTR [ecx]
  422ede:	je     0x422e87
  422ee0:	xchg   esp,eax
  422ee1:	inc    esp
  422ee2:	lock xacquire xor DWORD PTR [eax+0x2b1cb846],edx
  422eea:	dec    ebp
  422eeb:	lahf   
  422eec:	out    dx,al
  422eed:	xchg   esi,eax
  422eee:	cmc    
  422eef:	push   ebp
  422ef0:	dec    edx
  422ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ef2:	lea    edx,[esi+0x53a93f92]
  422ef8:	mov    edi,0xb9a52ac5
  422efd:	inc    edi
  422efe:	xlat   BYTE PTR ds:[ebx]
  422eff:	lahf   
  422f00:	dec    edx
  422f01:	inc    edi
  422f02:	aas    
  422f03:	push   cs
  422f04:	push   eax
  422f05:	add    DWORD PTR [edi+0xff799dd],ebx
  422f0b:	in     al,0x11
  422f0d:	aaa    
  422f0e:	xchg   ebp,eax
  422f0f:	popa   
  422f10:	(bad)  [edx+0x2f308287]
  422f16:	imul   eax,DWORD PTR [edi-0x70],0xe
  422f1a:	or     bh,dh
  422f1c:	mov    WORD PTR [esi-0x52],ds
  422f1f:	mov    al,ds:0xad3dc240
  422f24:	fdivr  QWORD PTR [eax]
  422f26:	dec    ebx
  422f27:	or     bl,ch
  422f29:	push   ecx
  422f2a:	sbb    eax,0xaa282295
  422f2f:	retf   
  422f30:	stos   DWORD PTR es:[edi],eax
  422f31:	aam    0xc7
  422f33:	inc    edi
  422f34:	mov    WORD PTR [edi-0x38],ss
  422f37:	ror    DWORD PTR [ebp-0x2b53f576],cl
  422f3d:	and    al,BYTE PTR [esp+eiz*4+0x40ec5002]
  422f44:	add    al,0xee
  422f46:	rep lods eax,DWORD PTR ds:[esi]
  422f48:	ret    0x6e7e
  422f4b:	stos   BYTE PTR es:[edi],al
  422f4c:	dec    ebx
  422f4d:	jbe    0x422f3b
  422f4f:	pop    es
  422f50:	mov    dh,dh
  422f52:	cmp    DWORD PTR [esi+ecx*1+0x23],ecx
  422f56:	push   eax
  422f57:	jl     0x422ee4
  422f59:	scas   eax,DWORD PTR es:[edi]
  422f5a:	arpl   WORD PTR [eax],sp
  422f5c:	inc    esi
  422f5d:	mov    ebx,ecx
  422f5f:	add    al,0xa4
  422f61:	loop   0x422f0e
  422f63:	inc    eax
  422f64:	mov    edx,0xab3cbe
  422f69:	ror    DWORD PTR [esi+ebp*2-0x3d],0xff
  422f6e:	fsubr  QWORD PTR [ebp-0x25573770]
  422f74:	test   al,cl
  422f76:	sahf   
  422f77:	add    eax,0x5ed80d48
  422f7d:	xor    bl,BYTE PTR [eax+0x6f157f71]
  422f83:	pop    esp
  422f84:	or     al,dl
  422f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f87:	mov    fs,WORD PTR [ecx-0x5de27b0d]
  422f8d:	ror    ch,0x8b
  422f90:	mov    eax,0xbc050077
  422f95:	lods   eax,DWORD PTR ds:[esi]
  422f96:	(bad)  
  422f97:	jmp    0xc161:0x184421b0
  422f9e:	xor    ecx,DWORD PTR [ecx-0x820ec0d]
  422fa4:	sbb    eax,0xc269d4a
  422fa9:	ffreep st(3)
  422fab:	push   ebp
  422fac:	sti    
  422fad:	mov    DWORD PTR [ebx-0x3bae4407],edx
  422fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb4:	jl     0x422f5e
  422fb6:	pusha  
  422fb7:	mov    ah,0x69
  422fba:	outs   dx,BYTE PTR ds:[esi]
  422fbb:	inc    edx
  422fbc:	out    dx,eax
  422fbd:	iret   
  422fbe:	mov    edx,0xcac929d2
  422fc3:	xchg   ecx,eax
  422fc4:	lds    ebx,FWORD PTR [edx-0x38]
  422fc7:	add    al,0x6f
  422fc9:	inc    edx
  422fca:	mov    dh,0xb
  422fcc:	ins    BYTE PTR es:[edi],dx
  422fcd:	shr    BYTE PTR [ebx],1
  422fcf:	stos   BYTE PTR es:[edi],al
  422fd0:	fisub  DWORD PTR [edi-0x61]
  422fd3:	icebp  
  422fd4:	sub    bh,BYTE PTR [esi-0x233f5422]
  422fda:	mov    cl,BYTE PTR ds:0xe6
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    esi,eax
  422fef:	adc    BYTE PTR [eax+0x1a94a53],dl
  422ff5:	add    bl,dh
  422ff7:	add    al,0x0
  422ff9:	add    ah,cl
  422ffb:	push   ecx
  422ffc:	mov    bh,0x25
  422ffe:	xchg   ebx,eax
  422fff:	aad    0x67
  423001:	cmp    ebp,edi
  423003:	add    bl,BYTE PTR [esi-0x5d3da8f0]
  423009:	sbb    esi,DWORD PTR [esp+eax*4]
  42300c:	int3   
  42300d:	xor    al,0xd8
  42300f:	mov    edx,0xe0411f7
  423014:	xchg   DWORD PTR [ecx+ecx*2-0x247ee329],esi
  42301b:	lds    esp,FWORD PTR [esi+0x124354c2]
  423021:	fiadd  WORD PTR [edi]
  423023:	mov    ecx,0x30435c9f
  423028:	lods   al,BYTE PTR ds:[esi]
  423029:	ret    0xeecf
  42302c:	jb     0x423087
  42302e:	and    BYTE PTR [edx-0x6f03e2d7],0x36
  423035:	retw   0x9b7d
  423039:	inc    esi
  42303a:	or     al,0xb2
  42303c:	jecxz  0x422fd5
  42303e:	cli    
  42303f:	or     al,0x62
  423041:	mov    ds,WORD PTR [esp+edi*4]
  423044:	repnz xchg edi,eax
  423046:	in     al,0xb0
  423048:	sub    BYTE PTR [ecx+0x68],bl
  42304b:	or     DWORD PTR [ebx+0x728d34cf],ebp
  423051:	sub    bh,BYTE PTR [ebp+eiz*2+0x12]
  423055:	xor    al,0x34
  423057:	inc    edi
  423058:	mov    ah,ch
  42305a:	data16 jp 0x42301b
  42305d:	pop    edx
  42305e:	add    esp,DWORD PTR ds:0xb06ec5e3
  423064:	xchg   ebp,eax
  423065:	or     al,0x62
  423067:	push   es
  423068:	mov    BYTE PTR [edi+0x16d6172e],ah
  42306e:	inc    esi
  42306f:	xchg   edx,eax
  423070:	push   edx
  423071:	pop    edx
  423072:	pop    edi
  423073:	mov    ebx,0x770b50c1
  423078:	(bad)  
  423079:	mov    ebp,0x16ec536
  42307e:	ja     0x423063
  423080:	mov    ch,0xc1
  423082:	jge    0x42309d
  423084:	or     BYTE PTR [edi],dl
  423086:	pop    ecx
  423087:	or     al,0x6e
  423089:	add    al,0x6f
  42308b:	es mov ebp,0x529cff4c
  423091:	push   ebp
  423092:	jl     0x4230f3
  423094:	push   esi
  423095:	mov    ebx,0x54671926
  42309a:	loope  0x423067
  42309c:	jns    0x42302b
  42309e:	xchg   DWORD PTR [esi+eiz*8],ebp
  4230a1:	leave  
  4230a2:	adc    ecx,esi
  4230a4:	cmp    DWORD PTR [eax],edx
  4230a6:	xchg   ecx,eax
  4230a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230a9:	les    edx,FWORD PTR [edx+0x71]
  4230ac:	pop    ds
  4230ad:	aam    0xd2
  4230af:	stc    
  4230b0:	mov    cl,BYTE PTR [ecx*8+0x570e1714]
  4230b7:	inc    edi
  4230b8:	adc    BYTE PTR [ebp+0x70],bl
  4230bb:	or     edi,edi
  4230bd:	pop    es
  4230be:	xchg   dl,al
  4230c0:	pop    esi
  4230c1:	inc    eax
  4230c2:	call   0x3869d10a
  4230c7:	mov    ?,WORD PTR [ebx+0x39668d08]
  4230cd:	nop
  4230ce:	ins    BYTE PTR es:[edi],dx
  4230cf:	pop    ds
  4230d0:	imul   ebx,DWORD PTR [edx],0x958c10b3
  4230d6:	cli    
  4230d7:	adc    DWORD PTR ds:0x97dff90b,ebx
  4230dd:	xor    BYTE PTR [ecx],0xea
  4230e0:	mov    dh,0x97
  4230e2:	fs and eax,0xb3035b00
  4230e8:	leave  
  4230e9:	inc    ebp
  4230ea:	push   esp
  4230eb:	fistp  QWORD PTR [eax]
  4230ed:	mov    ds:0xa48e5192,al
  4230f2:	std    
  4230f3:	(bad)  
  4230f4:	and    BYTE PTR [eax+0x3b61f6b7],bh
  4230fa:	adc    dl,bl
  4230fc:	cmc    
  4230fd:	jg     0x423127
  4230ff:	mov    eax,0x417000c2
  423104:	mov    dh,0x31
  423106:	loopne 0x4230d8
  423108:	mov    edi,0xd36d95a2
  42310d:	cwde   
  42310e:	outs   dx,BYTE PTR ds:[esi]
  42310f:	fidiv  DWORD PTR [eax]
  423111:	inc    esi
  423112:	push   DWORD PTR [edi+0x5b]
  423115:	xor    BYTE PTR [eax],bh
  423117:	aas    
  423118:	jmp    0x243578c8
  42311d:	xlat   BYTE PTR ds:[ebx]
  42311e:	pop    ds
  42311f:	push   ds
  423120:	inc    eax
  423121:	cmc    
  423122:	xchg   ebp,eax
  423123:	mov    bh,0xe6
  423125:	xchg   esp,eax
  423126:	ds jl  0x423114
  423129:	push   ds
  42312a:	add    BYTE PTR [esi+0x1afdf92c],ah
  423130:	div    BYTE PTR [edx]
  423132:	pop    ebx
  423133:	pop    ebx
  423134:	push   ds
  423135:	sub    edx,DWORD PTR [ebx]
  423137:	sbb    al,0x51
  423139:	jno    0x4231a8
  42313b:	mov    ch,0x6f
  42313d:	sbb    BYTE PTR [edx-0x75],bl
  423140:	mov    ebp,0xb904ad9a
  423145:	adc    edi,DWORD PTR [edi-0x52]
  423148:	outs   dx,BYTE PTR ds:[esi]
  423149:	or     DWORD PTR [ebp+0x3db8a3fc],esi
  42314f:	loope  0x42310c
  423151:	adc    BYTE PTR [ebp-0x7c316476],0xf5
  423158:	and    DWORD PTR [ebx+0x1f],ebp
  42315b:	jne    0x423134
  42315d:	or     DWORD PTR [ecx],esp
  42315f:	xchg   esp,eax
  423160:	fnsave [ecx]
  423162:	gs call 0x12d901e0
  423168:	mov    edx,0x5d906cab
  42316d:	mov    es,WORD PTR [edx+0x290ad4ea]
  423173:	mov    ebx,0xd27777c0
  423178:	dec    ecx
  423179:	xor    BYTE PTR [eax],al
  42317b:	pop    es
  42317c:	cmp    bl,BYTE PTR [edi-0x1a]
  42317f:	int3   
  423180:	xchg   edi,eax
  423181:	add    DWORD PTR [eax-0x22a7d720],esp
  423187:	ss int3 
  423189:	scas   al,BYTE PTR es:[edi]
  42318a:	mov    dh,0x2f
  42318c:	sbb    eax,0x8df32bf7
  423191:	ret    
  423192:	mov    dl,0x58
  423194:	jle    0x4231bd
  423196:	and    BYTE PTR [ecx-0x4800199f],ch
  42319c:	xlat   BYTE PTR ds:[ebx]
  42319d:	leave  
  42319e:	dec    edi
  42319f:	adc    eax,0xb5f54d0a
  4231a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a5:	call   0x4ca1:0x61b24404
  4231ac:	popf   
  4231ad:	ss test al,0xb9
  4231b0:	mov    ds:0x16b6c0f7,al
  4231b5:	mov    bl,0xd5
  4231b7:	push   es
  4231b8:	jecxz  0x42319a
  4231ba:	scas   eax,DWORD PTR es:[edi]
  4231bb:	iret   
  4231bc:	dec    esp
  4231bd:	sub    BYTE PTR [ecx-0x1d],bl
  4231c0:	or     DWORD PTR [eax+0x6658d682],0xe64d3261
  4231ca:	and    eax,0x4031217
  4231cf:	gs (bad) 
  4231d1:	(bad)  
  4231d2:	sub    DWORD PTR [eax+ebx*2-0x6426254d],ebp
  4231d9:	inc    ebx
  4231da:	out    0xb4,al
  4231dc:	push   es
  4231dd:	into   
  4231de:	jns    0x423229
  4231e0:	adc    al,0x75
  4231e2:	aad    0xe1
  4231e4:	in     eax,dx
  4231e5:	enter  0x841e,0x1a
  4231e9:	test   eax,0x7d16ce62
  4231ee:	mov    bl,0x14
  4231f0:	sub    eax,0x7aeaf66f
  4231f5:	fist   WORD PTR [edx+0x3deddaa2]
  4231fb:	std    
  4231fc:	popf   
  4231fd:	std    
  4231fe:	sbb    BYTE PTR [eax+ebx*2-0x55],dh
  423202:	mov    dl,0x2b
  423204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423205:	jnp    0x4231e2
  423207:	(bad)  
  423208:	int    0xb0
  42320a:	outs   dx,DWORD PTR ds:[esi]
  42320b:	dec    edx
  42320c:	jmp    0x78966128
  423211:	add    BYTE PTR [ecx+eiz*1-0x22b7bc86],ch
  423218:	aad    0xbc
  42321a:	aas    
  42321b:	hlt    
  42321c:	ss push esi
  42321e:	gs test ch,cl
  423221:	and    al,0x4b
  423223:	rcl    DWORD PTR [ebp+0x30bd7135],0x57
  42322a:	cdq    
  42322b:	outs   dx,BYTE PTR ds:[esi]
  42322c:	js     0x4231ce
  42322e:	adc    al,0x9
  423230:	scas   al,BYTE PTR es:[edi]
  423231:	mov    ah,0x84
  423233:	enter  0x853b,0xcb
  423237:	push   ss
  423238:	mov    esp,0xcee2e9bf
  42323d:	cs dec edx
  42323f:	inc    ebx
  423240:	gs xchg edi,eax
  423242:	add    eax,0xe1df47e5
  423247:	stos   DWORD PTR es:[edi],eax
  423248:	mov    dl,0x1a
  42324a:	xchg   esi,eax
  42324c:	jge    0x423231
  42324e:	(bad)  
  42324f:	jbe    0x42321c
  423251:	cmp    DWORD PTR ds:0xd8ab5df3,esi
  423257:	pop    ecx
  423258:	(bad)  
  423259:	in     eax,dx
  42325a:	mov    dl,BYTE PTR [ebx+ecx*8]
  42325d:	inc    edi
  42325e:	xchg   ebp,eax
  42325f:	mov    eax,ecx
  423261:	or     BYTE PTR [esi-0x307b254e],al
  423267:	mov    ds:0x87da1558,al
  42326c:	(bad)  
  42326d:	aas    
  42326e:	hlt    
  42326f:	aaa    
  423270:	or     bl,BYTE PTR [edi+0x5673fb55]
  423276:	rol    BYTE PTR [edx+0x36],cl
  423279:	inc    ecx
  42327a:	push   edx
  42327b:	enter  0x1499,0x7d
  42327f:	retf   
  423280:	push   edi
  423281:	push   ss
  423282:	jecxz  0x423257
  423284:	test   DWORD PTR ds:0x7545da87,0xff580ee5
  42328e:	mov    eax,0xa1382da3
  423293:	adc    DWORD PTR [edi+0x738048e4],0x58a56bfb
  42329d:	scas   eax,DWORD PTR es:[edi]
  42329e:	push   edx
  42329f:	setns  BYTE PTR [eax-0x68]
  4232a3:	leave  
  4232a4:	push   ss
  4232a5:	or     esp,0xf070d1c8
  4232ab:	sbb    eax,0x11574f32
  4232b0:	jns    0x4232c7
  4232b2:	arpl   WORD PTR [edx-0x77a5198e],bp
  4232b8:	ja     0x4232a2
  4232ba:	jle    0x4232d5
  4232bc:	mov    ds:0xeed551b9,eax
  4232c1:	xchg   edx,eax
  4232c2:	add    DWORD PTR [edx],esi
  4232c4:	pop    esi
  4232c5:	mov    ebp,0x1858f414
  4232ca:	cmp    BYTE PTR [esi],dl
  4232cc:	mov    edx,0xe441b73
  4232d1:	push   es
  4232d2:	lds    esp,FWORD PTR [ebx+edx*1+0x3f984d8c]
  4232d9:	xlat   BYTE PTR ds:[ebx]
  4232da:	out    0x21,eax
  4232dc:	lock add bh,bh
  4232df:	xor    eax,0x872574ba
  4232e4:	ins    BYTE PTR es:[edi],dx
  4232e5:	das    
  4232e6:	pop    edi
  4232e7:	pop    ds
  4232e8:	add    ch,BYTE PTR [esi+0x6e]
  4232eb:	in     eax,0xc1
  4232ed:	sbb    edx,0x7cae3cf9
  4232f3:	shl    DWORD PTR [edx+edi*2-0x3a],1
  4232f7:	jge    0x423375
  4232f9:	sbb    edi,DWORD PTR [ebp-0x2b]
  4232fc:	jbe    0x423316
  4232fe:	push   ecx
  4232ff:	mov    ah,0x27
  423301:	dec    ecx
  423302:	pop    esp
  423303:	rol    ecx,0x8f
  423306:	and    eax,0x14c39bea
  42330b:	test   DWORD PTR [edx],esp
  42330d:	icebp  
  42330e:	imul   edi,DWORD PTR ds:0xd6966e2e,0x59
  423315:	lahf   
  423316:	jecxz  0x4232d9
  423318:	cmp    ebp,DWORD PTR [ebp-0x28eef77f]
  42331e:	js     0x4232bb
  423320:	out    dx,eax
  423321:	mov    esi,0xeeba0168
  423326:	pop    esi
  423327:	jg     0x4232bd
  423329:	scas   al,BYTE PTR es:[edi]
  42332a:	add    ecx,eax
  42332c:	mov    DWORD PTR [esi+0xf],ebx
  42332f:	mov    ch,0x4e
  423331:	and    al,ah
  423333:	pop    ds
  423334:	(bad)  
  423335:	cmp    esi,ebp
  423337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423338:	inc    esi
  423339:	pop    esi
  42333a:	jmp    0x54ce19fd
  42333f:	add    BYTE PTR [ecx+0x66af8b15],bh
  423345:	xchg   ebp,eax
  423346:	pop    edx
  423347:	or     edi,DWORD PTR [ecx]
  423349:	adc    ah,al
  42334b:	retf   0x6051
  42334e:	fld    DWORD PTR [esi-0x42]
  423351:	icebp  
  423352:	sub    dl,BYTE PTR [edi+edx*8-0x20]
  423356:	mov    bh,0x15
  423358:	add    DWORD PTR [ecx+0x27],0x867cdc04
  42335f:	and    eax,0x6e010b79
  423364:	shl    BYTE PTR [edi+ecx*4-0x77],cl
  423368:	and    dl,BYTE PTR [esi+eiz*1+0x53]
  42336c:	jmp    0x4233d6
  42336e:	loope  0x4233bd
  423370:	icebp  
  423371:	stos   BYTE PTR es:[edi],al
  423372:	repz adc DWORD PTR [ebp+0x61027701],0xffffff89
  42337a:	jb     0x4233b2
  42337c:	int    0xad
  42337e:	(bad)  [esi-0x3fb62af8]
  423384:	xor    DWORD PTR [edx],esp
  423386:	mov    dl,0x79
  423388:	xor    bh,cl
  42338a:	lods   eax,DWORD PTR ds:[esi]
  42338b:	jl     0x42336a
  42338d:	jo     0x42334d
  42338f:	nop
  423390:	mov    esi,0xc4fbd4bf
  423395:	push   esp
  423396:	adc    DWORD PTR [esi],eax
  423398:	inc    esi
  423399:	jmp    0x4233da
  42339b:	mov    ds:0x1a0aa070,al
  4233a0:	add    BYTE PTR [ebx+0x55],dh
  4233a3:	sub    edx,DWORD PTR [edi]
  4233a5:	pop    esi
  4233a6:	add    BYTE PTR [ebp+0x2093f4ef],0xaa
  4233ad:	sbb    ebx,DWORD PTR [eax]
  4233af:	pusha  
  4233b0:	mov    eax,0x16e3af2e
  4233b5:	(bad)  
  4233b6:	stos   DWORD PTR es:[edi],eax
  4233b7:	call   0x936f:0x5adda0e3
  4233be:	jo     0x4233a8
  4233c0:	rcl    esp,0xac
  4233c3:	imul   esp,edx,0xffffffd0
  4233c6:	adc    DWORD PTR [edi-0x6b],0x45
  4233ca:	in     al,0x57
  4233cc:	test   BYTE PTR [edi+0x38],ah
  4233cf:	xchg   ebp,eax
  4233d0:	and    al,0x24
  4233d2:	iret   
  4233d3:	(bad)  
  4233d4:	aas    
  4233d5:	dec    esp
  4233d6:	mov    esp,0x7b490037
  4233db:	dec    ecx
  4233dc:	sub    dl,BYTE PTR [esp+esi*1+0x34]
  4233e0:	jb     0x423455
  4233e2:	cmp    bh,BYTE PTR [edi]
  4233e4:	add    eax,0x1e3e75a4
  4233e9:	test   al,0x85
  4233eb:	test   DWORD PTR [eax-0x261d3f03],esp
  4233f1:	xor    al,0x41
  4233f3:	jo     0x423461
  4233f5:	pop    esi
  4233f6:	call   0xa3c1b350
  4233fb:	mov    ecx,0x7f452c02
  423400:	mov    WORD PTR [edx],gs
  423402:	mov    edx,0x94f2c15a
  423407:	imul   esp,ecx,0xfffffffa
  42340a:	inc    edx
  42340b:	int    0x49
  42340d:	ds dec ebp
  42340f:	jne    0x4233c8
  423411:	pop    edi
  423412:	inc    edx
  423413:	jecxz  0x42347c
  423415:	or     BYTE PTR [esi+eiz*8],ch
  423418:	or     eax,0x6463b989
  42341d:	add    dl,BYTE PTR [ebp+0x1f09e6da]
  423423:	bound  ebx,QWORD PTR [ebp+0x3c38b91d]
  423429:	push   ebx
  42342a:	adc    cl,bh
  42342c:	mov    cl,0x15
  42342e:	div    dh
  423430:	mov    ?,WORD PTR [esi-0x2a]
  423433:	jecxz  0x4233d6
  423435:	ss add esp,ebx
  423438:	sahf   
  423439:	stos   DWORD PTR es:[edi],eax
  42343a:	leave  
  42343b:	push   eax
  42343c:	push   ds
  42343d:	(bad)  
  42343e:	push   edx
  42343f:	xor    edi,DWORD PTR [ecx*1+0x5c02c941]
  423446:	rol    BYTE PTR [ecx],0x49
  423449:	xor    BYTE PTR ds:0x88cb00fb,dl
  42344f:	add    DWORD PTR ds:0x2eb29131,esp
  423455:	cli    
  423456:	mov    esi,0xf5ede696
  42345b:	mov    esi,0xd59e083d
  423460:	sub    eax,0x643738b1
  423465:	enter  0x89e5,0x56
  423469:	jmp    0xe99b12fa
  42346e:	das    
  42346f:	repnz mov ebp,0xc61e7a7a
  423475:	loop   0x4234f4
  423477:	int3   
  423478:	ds mov ecx,0x70528097
  42347e:	lods   al,BYTE PTR ds:[esi]
  42347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423480:	iret   
  423481:	jp     0x423409
  423483:	mov    ah,0x8f
  423485:	sti    
  423486:	mul    DWORD PTR ds:0x46e01832
  42348c:	sub    al,0x43
  42348e:	lahf   
  42348f:	mov    al,0x8e
  423491:	and    bh,BYTE PTR [ebp-0x30]
  423494:	imul   esp,DWORD PTR [edi],0x73
  423497:	and    dh,BYTE PTR [edi+0x0]
  42349a:	adc    ah,BYTE PTR ds:0xdd46b9f8
  4234a0:	scas   al,BYTE PTR es:[edi]
  4234a1:	fdivr  QWORD PTR ds:0x9c2095b9
  4234a7:	mov    al,0x50
  4234a9:	rol    eax,cl
  4234ab:	rol    DWORD PTR [edi-0x345b3f5c],1
  4234b1:	inc    edi
  4234b2:	add    eax,0xe568b5b2
  4234b7:	mov    ss:0x7541d598,eax
  4234bd:	sahf   
  4234be:	arpl   WORD PTR [esi+ecx*4-0x64865ba5],bp
  4234c5:	mov    ebp,0xc8ee5890
  4234ca:	in     al,0xbc
  4234cc:	cmp    ebp,DWORD PTR [ecx+0x64]
  4234cf:	jecxz  0x423491
  4234d1:	aam    0x5f
  4234d3:	in     eax,dx
  4234d4:	test   eax,0xf2053b12
  4234d9:	sti    
  4234da:	pop    ss
  4234db:	mov    ebx,0x4489ab4b
  4234e0:	add    edi,ecx
  4234e2:	push   ebx
  4234e3:	xchg   edi,eax
  4234e4:	dec    esp
  4234e5:	pop    edi
  4234e6:	and    al,0xc9
  4234e8:	inc    eax
  4234e9:	test   eax,0xef2def
  4234ee:	add    BYTE PTR [eax],al
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	inc    eax
  4234ff:	nop
  423500:	adc    DWORD PTR [edi+0x1ae3d],eax
  423506:	repz add al,0x0
  423509:	add    BYTE PTR [ecx-0x714911b0],dl
  42350f:	and    cl,BYTE PTR [edi+0x22cbbf06]
  423515:	mov    bh,0xe8
  423517:	test   BYTE PTR ds:0x66b3cfd6,ah
  42351d:	xchg   esi,eax
  42351e:	in     al,0x8d
  423520:	jp     0x42352e
  423522:	mov    eax,0xc2696769
  423527:	mov    cl,0x71
  423529:	sbb    ch,BYTE PTR [esi-0x6b9f2fef]
  42352f:	shl    BYTE PTR [ecx-0x167479ed],1
  423535:	dec    eax
  423536:	inc    ebp
  423537:	jbe    0x4234e1
  423539:	mov    ds:0xe4e4bc02,al
  42353e:	pop    esp
  42353f:	popa   
  423540:	arpl   WORD PTR [edi-0xf],cx
  423543:	retf   
  423544:	xor    ebp,DWORD PTR [esi]
  423546:	push   edi
  423547:	pop    ds
  423548:	xchg   ecx,eax
  423549:	nop
  42354a:	sub    esp,ebx
  42354c:	and    dl,bh
  42354e:	(bad)  
  42354f:	push   es
  423550:	sbb    ebx,ebx
  423552:	leave  
  423553:	pusha  
  423554:	add    esp,edi
  423556:	xchg   ecx,eax
  423557:	inc    esp
  423558:	adc    al,BYTE PTR [eax]
  42355a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42355b:	inc    esi
  42355c:	in     eax,0xf7
  42355e:	(bad)  
  42355f:	jmp    0xc98:0x79ba2b94
  423566:	sahf   
  423567:	cmp    bh,BYTE PTR [edi]
  423569:	xchg   edx,eax
  42356a:	or     eax,0xf8fcaab0
  42356f:	add    DWORD PTR [ebx-0x3f5e825c],0xffffffc6
  423576:	nop
  423577:	add    eax,0xda862b99
  42357c:	imul   edx,DWORD PTR [esi],0x4a
  42357f:	mov    bl,0xf6
  423581:	jle    0x423542
  423583:	lds    ebx,FWORD PTR [edx+edi*2-0x584c35cd]
  42358a:	jae    0x4235ca
  42358c:	arpl   WORD PTR [ebx-0x700f5937],bp
  423592:	(bad)  
  423593:	or     ebx,DWORD PTR [edx+0x7c3c482]
  423599:	adc    eax,0x5d8ce8e0
  42359e:	sbb    esp,DWORD PTR [esi+0x7be40079]
  4235a4:	jge    0x423618
  4235a6:	icebp  
  4235a7:	loope  0x4235b7
  4235a9:	inc    edi
  4235aa:	cld    
  4235ab:	dec    ebp
  4235ac:	mov    cl,0xd8
  4235ae:	pop    eax
  4235af:	jge    0x4235d3
  4235b1:	in     al,0x37
  4235b3:	leave  
  4235b4:	xchg   edi,eax
  4235b5:	test   eax,0x6236d808
  4235ba:	int3   
  4235bb:	sub    ebp,DWORD PTR [esi+0x56ab54be]
  4235c1:	dec    esp
  4235c2:	add    al,0x86
  4235c4:	in     eax,dx
  4235c5:	inc    esp
  4235c6:	pop    ecx
  4235c7:	mov    al,ds:0x5fa3b641
  4235cc:	xchg   edi,eax
  4235cd:	frstor [ecx+0x8]
  4235d0:	les    ecx,FWORD PTR [ecx]
  4235d2:	or     ah,ch
  4235d4:	shr    DWORD PTR [eax-0x30],0xac
  4235d8:	mov    cs:0x3d20bb9f,al
  4235de:	mov    edx,0xd5c90a65
  4235e3:	adc    ch,BYTE PTR [esi+0x6c]
  4235e6:	push   ds
  4235e7:	loopne 0x423665
  4235e9:	jmp    0xe102:0x89503fdd
  4235f0:	jmp    0x423665
  4235f2:	jg     0x4235c2
  4235f4:	mov    dh,0x63
  4235f6:	test   eax,0xf546cdd2
  4235fb:	cs pop ebp
  4235fd:	mov    ebx,0x5512df29
  423602:	daa    
  423603:	and    eax,0x1633994
  423608:	imul   edi,DWORD PTR [esi+0x3d],0x4925fb3
  42360f:	(bad)  
  423610:	adc    ah,BYTE PTR [edi-0x73]
  423613:	sub    eax,0xd29f8a7b
  423618:	jno    0x42368d
  42361a:	sub    edi,esi
  42361c:	(bad)  
  42361d:	pop    ebx
  42361e:	and    DWORD PTR [esi-0x7b2321a4],ebx
  423624:	xor    al,0xf0
  423626:	and    al,0xfd
  423628:	mov    edi,0xb7e422a8
  42362d:	pop    edi
  42362e:	xchg   DWORD PTR [ecx],esi
  423630:	sub    ah,BYTE PTR [esp+esi*8]
  423633:	xor    edx,ecx
  423635:	rdtsc  
  423637:	in     al,dx
  423638:	push   ecx
  423639:	mov    bh,0x41
  42363b:	daa    
  42363c:	sti    
  42363d:	sub    eax,0xdacf660
  423642:	lock jae 0x423688
  423645:	inc    edi
  423646:	hlt    
  423647:	cmp    BYTE PTR [eax-0x51],ah
  42364a:	(bad)  
  42364c:	daa    
  42364d:	jns    0x423665
  42364f:	xor    BYTE PTR gs:[esi+0x7181ac2d],ah
  423656:	pop    ss
  423657:	scas   al,BYTE PTR es:[edi]
  423658:	xor    BYTE PTR [ebp+0x110515b8],bh
  42365e:	adc    DWORD PTR [esi+ecx*4+0xb],0x1ccd534d
  423666:	cmp    ch,dl
  423668:	dec    esp
  423669:	mov    bh,0x39
  42366b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366c:	gs daa 
  42366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42366f:	icebp  
  423670:	rcl    DWORD PTR [ebx+0x10],0xe
  423674:	cdq    
  423675:	inc    edi
  423676:	in     eax,0xe7
  423678:	jmp    0x4236c0
  42367a:	outs   dx,DWORD PTR ds:[esi]
  42367b:	push   cs
  42367c:	fdivr  QWORD PTR [ebx+edi*4+0x24]
  423680:	cs jbe 0x42360d
  423683:	sahf   
  423684:	push   ds
  423685:	(bad)  
  423687:	mov    bh,BYTE PTR [esi-0x292aff23]
  42368d:	call   0x1dc82c6e
  423692:	scas   al,BYTE PTR es:[edi]
  423693:	inc    edx
  423694:	aas    
  423695:	and    esp,DWORD PTR [edx+0x33]
  423698:	adc    al,0x9f
  42369a:	dec    esp
  42369b:	ja     0x423648
  42369d:	lea    ebp,[eax+0x37484247]
  4236a3:	push   es
  4236a4:	add    ah,BYTE PTR [ecx+ecx*8-0x10]
  4236a8:	sbb    DWORD PTR [ebx],esi
  4236aa:	jne    0x423709
  4236ac:	jae    0x423680
  4236ae:	aas    
  4236af:	push   ecx
  4236b0:	(bad)  
  4236b1:	push   0x5fdd34d5
  4236b6:	mov    ss,WORD PTR [ebp-0x57]
  4236b9:	inc    ebp
  4236ba:	jno    0x423651
  4236bc:	or     BYTE PTR ds:0xbde9f6a3,ch
  4236c2:	bound  ecx,QWORD PTR [esi]
  4236c4:	in     al,dx
  4236c5:	outs   dx,BYTE PTR ds:[esi]
  4236c6:	cmp    al,0xa1
  4236c8:	stos   BYTE PTR es:[edi],al
  4236c9:	(bad)  
  4236ca:	(bad)  
  4236cb:	cmp    ecx,DWORD PTR [edx]
  4236cd:	mov    ecx,DWORD PTR [edx+edi*8+0x5d41fd26]
  4236d4:	xchg   ebp,eax
  4236d5:	dec    esp
  4236d6:	pop    edi
  4236d7:	inc    ebx
  4236d8:	in     eax,0xe3
  4236da:	xchg   DWORD PTR [ebp-0x29],edi
  4236dd:	call   0xe37c:0xc7ee002b
  4236e4:	retf   0xca55
  4236e7:	scas   al,BYTE PTR es:[edi]
  4236e8:	or     al,0x46
  4236ea:	loope  0x42373d
  4236ec:	add    dl,BYTE PTR [ebx+0x70124c24]
  4236f2:	pushf  
  4236f3:	cdq    
  4236f4:	jns    0x4236e7
  4236f6:	(bad)  
  4236f7:	jo     0x423737
  4236f9:	sbb    ecx,eax
  4236fb:	cmp    dl,BYTE PTR [edi-0x5c]
  4236fe:	mov    BYTE PTR [edx+0x66],bl
  423701:	and    al,0x75
  423703:	setne  BYTE PTR [eax+0x2c]
  423707:	inc    edi
  423708:	pop    ebx
  423709:	sbb    sp,WORD PTR [esi-0x646d0734]
  423710:	jecxz  0x423790
  423712:	sar    eax,1
  423714:	sub    BYTE PTR [edi-0x68dbba3f],bl
  42371a:	movups XMMWORD PTR [eax],xmm3
  42371d:	xchg   ebx,eax
  42371e:	test   DWORD PTR [esi-0x59],ebx
  423721:	repnz sbb ebp,ebx
  423724:	retf   
  423725:	fdivr  DWORD PTR [eax+0x15]
  423728:	fdiv   DWORD PTR [ebx+eax*2]
  42372b:	es sbb edx,esp
  42372e:	dec    edx
  42372f:	scas   al,BYTE PTR es:[edi]
  423730:	repz adc edi,DWORD PTR [edx-0x5b]
  423734:	stos   DWORD PTR es:[edi],eax
  423735:	dec    edi
  423736:	inc    edx
  423737:	inc    ebp
  423738:	leave  
  423739:	jg     0x423703
  42373b:	outs   dx,DWORD PTR ds:[esi]
  42373c:	lahf   
  42373d:	mov    dh,0x23
  42373f:	fdivr  DWORD PTR [edi+0x43]
  423742:	data16 mov dl,0xfe
  423745:	cmp    bh,bh
  423747:	or     bh,BYTE PTR [edi]
  423749:	stos   DWORD PTR es:[edi],eax
  42374a:	mov    ch,0xae
  42374c:	sti    
  42374d:	cmp    al,cl
  42374f:	add    BYTE PTR [ebp-0x4f],0x21
  423753:	xor    BYTE PTR [eax],0x65
  423756:	int    0xe
  423758:	icebp  
  423759:	fs test al,0x7d
  42375c:	sbb    edx,0xa71ca7f8
  423762:	pop    edi
  423763:	daa    
  423764:	or     al,0x8
  423766:	jge    0x42374f
  423768:	hlt    
  423769:	loopne 0x42372b
  42376b:	cmp    eax,0x25751a76
  423770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423771:	in     al,0xc8
  423773:	mov    al,0xd4
  423775:	ds std 
  423777:	inc    ecx
  423778:	push   eax
  423779:	mov    edx,esp
  42377b:	in     al,dx
  42377c:	ror    esp,1
  42377e:	es or  eax,edx
  423781:	js     0x4237bb
  423783:	ret    0xaac8
  423786:	lods   al,BYTE PTR ds:[esi]
  423787:	repz xlat BYTE PTR ds:[ebx]
  423789:	stos   BYTE PTR es:[edi],al
  42378a:	pushf  
  42378b:	ss in  eax,0xad
  42378e:	dec    ebx
  42378f:	add    DWORD PTR [edx],edx
  423791:	inc    ebp
  423792:	cmp    edi,DWORD PTR [eax]
  423794:	rcl    BYTE PTR [ebx+edi*2+0x22],cl
  423798:	dec    ebp
  423799:	add    edi,0xedf7188a
  42379f:	sbb    DWORD PTR [eax-0x4c],0xffffffcb
  4237a3:	adc    bh,BYTE PTR [edx+0x17c8408f]
  4237a9:	ja     0x4237b3
  4237ab:	loopne 0x423734
  4237ad:	adc    BYTE PTR [eax-0xa],dh
  4237b0:	jb     0x4237a1
  4237b2:	(bad)  
  4237b3:	push   cs
  4237b4:	add    edx,DWORD PTR [esi+0x23]
  4237b7:	and    bh,BYTE PTR [edi]
  4237b9:	jno    0x42374e
  4237bb:	adc    dh,ah
  4237bd:	or     al,0xc2
  4237bf:	jl     0x4237c2
  4237c1:	pop    eax
  4237c2:	push   cs
  4237c3:	inc    ebx
  4237c4:	jb     0x423786
  4237c6:	fidivr WORD PTR [edx+0x49]
  4237c9:	dec    ebp
  4237ca:	cs test ecx,0x13a23f8b
  4237d1:	mov    esi,DWORD PTR [eax]
  4237d3:	cdq    
  4237d4:	xchg   ebx,eax
  4237d5:	jmp    0x127f020
  4237da:	aas    
  4237db:	xor    BYTE PTR ds:0xbcca5e81,ch
  4237e1:	push   esp
  4237e2:	aaa    
  4237e3:	div    BYTE PTR [ecx-0x57]
  4237e6:	sbb    eax,0x45bbce66
  4237eb:	fsub   DWORD PTR [esi+0x5795d3ce]
  4237f1:	xchg   DWORD PTR [ecx],ebp
  4237f3:	lock aas 
  4237f5:	mov    ebp,0x6116baad
  4237fa:	and    DWORD PTR [ebp+0x7a],edx
  4237fd:	das    
  4237fe:	adc    al,0x97
  423800:	pop    ecx
  423801:	jle    0x4237aa
  423803:	and    bl,ch
  423805:	retf   0x5828
  423808:	sbb    al,0x4a
  42380a:	aad    0x18
  42380c:	pop    eax
  42380e:	gs stc 
  423810:	sbb    dh,BYTE PTR [ebx-0x51b40b03]
  423816:	repz popa 
  423818:	mov    esi,0x27af8df0
  42381d:	aaa    
  42381e:	aam    0xfc
  423820:	mov    ch,0xa6
  423822:	sub    al,0xae
  423824:	pop    ebp
  423825:	cld    
  423826:	je     0x423803
  423828:	out    0x77,al
  42382a:	stos   DWORD PTR es:[edi],eax
  42382b:	nop
  42382c:	aaa    
  42382d:	dec    eax
  42382e:	mov    dh,0xcb
  423830:	call   0x36c6:0x834316f2
  423837:	push   ebx
  423838:	add    BYTE PTR [edx],dl
  42383a:	lock or dh,BYTE PTR [ecx-0xb]
  42383e:	lock add esi,edi
  423841:	or     BYTE PTR [edx-0x7ceb1e9],dh
  423847:	jne    0x423856
  423849:	sub    eax,0x260cd17a
  42384e:	jge    0x423898
  423850:	retf   
  423851:	stc    
  423852:	or     al,0x17
  423854:	aaa    
  423855:	(bad)  
  423856:	and    ch,BYTE PTR [edx]
  423858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423859:	push   ds
  42385a:	mov    ebx,0x3c1eaeb9
  42385f:	jb     0x42385e
  423861:	sub    BYTE PTR [ebp+0x18],al
  423864:	pop    ebx
  423865:	lods   eax,DWORD PTR ds:[esi]
  423866:	sub    dl,BYTE PTR [edi-0x711cc404]
  42386c:	nop
  42386d:	xchg   esi,eax
  42386e:	mov    eax,0xaf29da4b
  423873:	dec    esi
  423874:	inc    esp
  423875:	daa    
  423876:	out    0x8,eax
  423878:	rcr    BYTE PTR [esi-0x54376d86],0x7f
  42387f:	jne    0x42387f
  423881:	pop    ds
  423882:	dec    ecx
  423883:	test   DWORD PTR ds:0xe99376f0,ecx
  423889:	(bad)  
  42388a:	popa   
  42388b:	and    ah,BYTE PTR [ebx+0x37]
  42388e:	mov    ebp,0xcc58c13
  423893:	mov    eax,0x5794645a
  423898:	mov    al,ds:0xa74ce322
  42389d:	sub    cl,cl
  42389f:	cmc    
  4238a0:	mov    DWORD PTR [ebp-0x58],ecx
  4238a3:	sub    cl,BYTE PTR [ecx]
  4238a5:	sahf   
  4238a6:	and    eax,0x4290d819
  4238ab:	xor    eax,DWORD PTR [ebx-0x1abd954a]
  4238b1:	inc    ecx
  4238b2:	mov    bh,0x56
  4238b4:	pop    ecx
  4238b5:	sbb    al,0xc5
  4238b7:	sbb    DWORD PTR [ebx+0x56],ebx
  4238ba:	(bad)
  4238be:	xlat   BYTE PTR ds:[ebx]
  4238bf:	add    DWORD PTR [ecx-0x4589a3c3],ecx
  4238c5:	dec    esp
  4238c6:	sbb    DWORD PTR ds:0x5648da52,ebx
  4238cc:	dec    ecx
  4238cd:	add    cl,BYTE PTR [edx]
  4238cf:	push   edi
  4238d0:	inc    eax
  4238d1:	repnz jecxz 0x423918
  4238d4:	test   DWORD PTR [ebx],0xadffdbbd
  4238da:	bswap  ecx
  4238dc:	fld    st(6)
  4238de:	push   eax
  4238df:	mov    ds:0x954688af,eax
  4238e4:	adc    ebx,DWORD PTR [eax]
  4238e6:	lock mov al,0xe7
  4238e9:	outs   dx,BYTE PTR ds:[esi]
  4238ea:	xchg   esi,eax
  4238eb:	push   ebp
  4238ec:	add    esp,ebx
  4238ee:	and    cl,BYTE PTR [ebp-0x23b7baca]
  4238f4:	cmp    BYTE PTR [ecx+0x42],dl
  4238f7:	je     0x423906
  4238f9:	and    BYTE PTR [ebx],bh
  4238fb:	ds sub eax,0x5e492b97
  423901:	mov    esp,?
  423903:	pop    ecx
  423904:	retf   
  423905:	jmp    0x88d:0x675c618b
  42390c:	cld    
  42390d:	ds jb  0x4238d6
  423910:	repnz gs sbb al,0x54
  423914:	jmp    0x63134a3e
  423919:	(bad)  
  42391b:	popf   
  42391c:	push   eax
  42391d:	shl    DWORD PTR [edi],0xf9
  423920:	cmp    eax,0xdcb7f74d
  423925:	call   DWORD PTR [ecx+0x2d]
  423928:	fistp  DWORD PTR [bx+si]
  42392b:	push   ebx
  42392c:	adc    edx,edx
  42392e:	in     al,dx
  42392f:	mov    BYTE PTR [bp+si+0x55],dl
  423933:	mov    bl,dl
  423935:	mov    ecx,DWORD PTR [ebx+0x1]
  423938:	inc    ecx
  423939:	xlat   BYTE PTR ds:[ebx]
  42393a:	int    0xd8
  42393c:	addr16 dec esi
  42393e:	sti    
  42393f:	dec    bl
  423941:	or     BYTE PTR [edx],dl
  423943:	cli    
  423944:	arpl   WORD PTR [ebx-0x3174ab3b],dx
  42394a:	ret    
  42394b:	test   DWORD PTR [ebp-0x5b],esi
  42394e:	jbe    0x42390f
  423950:	push   cs
  423951:	add    edx,DWORD PTR [ebx-0x75]
  423954:	jne    0x423971
  423956:	jmp    0x42394e
  423958:	sar    DWORD PTR [eax+edx*1],1
  42395b:	(bad)  
  42395c:	scas   eax,DWORD PTR es:[edi]
  42395d:	dec    edi
  42395e:	lds    edx,FWORD PTR [edi+0x38]
  423961:	push   ds
  423962:	int    0xa8
  423964:	int3   
  423965:	lahf   
  423966:	cmp    eax,0x697b5292
  42396b:	xor    esi,DWORD PTR [edi]
  42396d:	aad    0xb4
  42396f:	test   eax,0x2aa4db78
  423974:	aas    
  423975:	test   BYTE PTR [ecx],cl
  423977:	adc    al,0x3d
  423979:	mov    ?,ecx
  42397b:	loop   0x42391b
  42397d:	rcr    DWORD PTR ds:0x9b70c2c2,cl
  423983:	adc    bl,BYTE PTR [edi]
  423985:	push   edx
  423986:	leave  
  423987:	mov    ebp,0xbbf719dc
  42398c:	xor    BYTE PTR [ecx-0x185b0ecd],cl
  423992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423993:	pop    eax
  423994:	mov    ebx,0x803dafa6
  423999:	(bad)  
  42399a:	xchg   esi,eax
  42399b:	or     eax,0xd031b857
  4239a0:	xlat   BYTE PTR ds:[ebx]
  4239a1:	mov    edi,DWORD PTR [ebp-0x32]
  4239a4:	lods   eax,DWORD PTR ds:[esi]
  4239a5:	inc    ecx
  4239a6:	(bad)  [ebx+0x6deaa688]
  4239ac:	test   eax,0xbf297e5e
  4239b1:	nop
  4239b2:	xor    DWORD PTR [edi-0x35],edi
  4239b5:	ror    DWORD PTR [ecx+0x30],1
  4239b8:	fdiv   DWORD PTR [ebx]
  4239ba:	jbe    0x4239e4
  4239bc:	sbb    eax,0xbcc207f2
  4239c1:	mov    edx,0xf49af71
  4239c6:	adc    dh,bl
  4239c8:	je     0x423a0d
  4239ca:	xor    dl,BYTE PTR [edi]
  4239cc:	dec    ebx
  4239cd:	int    0x57
  4239cf:	mov    esp,0xae89afbb
  4239d4:	add    edi,DWORD PTR [edi*4+0x4a71bf91]
  4239db:	add    eax,0xa8e20802
  4239e0:	scas   eax,DWORD PTR es:[edi]
  4239e1:	inc    ebx
  4239e2:	push   esi
  4239e3:	pop    eax
  4239e4:	sbb    ebp,esp
  4239e6:	cs popf 
  4239e8:	lea    ebp,[edx+0x2af40165]
  4239ee:	mov    ch,BYTE PTR [ebx]
  4239f0:	jmp    0x25078a5
  4239f5:	inc    edx
  4239f6:	inc    ebp
  4239f7:	daa    
  4239f8:	and    al,0x8c
  4239fa:	dec    esp
  4239fb:	cld    
  4239fc:	xchg   esp,eax
  4239fd:	add    BYTE PTR [eax],al
  4239ff:	add    BYTE PTR [eax],al
  423a01:	add    BYTE PTR [esi-0x69],al
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x2740d12b]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	aas    
  423a1b:	mov    bl,0x23
  423a1d:	sbb    BYTE PTR [esi],0x66
  423a20:	jo     0x4239b6
  423a22:	loope  0x423a6e
  423a24:	out    dx,eax
  423a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a26:	in     eax,dx
  423a27:	shl    DWORD PTR [edi-0x2f],1
  423a2a:	push   esp
  423a2b:	adc    ecx,0x34
  423a2e:	inc    ebp
  423a2f:	sbb    dh,BYTE PTR [esi-0x4a]
  423a32:	in     al,dx
  423a33:	dec    eax
  423a34:	cmp    dh,BYTE PTR [edi-0x3a]
  423a37:	sbb    al,0xac
  423a39:	cs inc edi
  423a3b:	outs   dx,BYTE PTR ds:[esi]
  423a3c:	push   cs
  423a3d:	xchg   ebx,eax
  423a3e:	lahf   
  423a3f:	js     0x423ac0
  423a41:	inc    edi
  423a42:	mov    al,ds:0x67fd0618
  423a47:	xor    BYTE PTR [esi+edx*8-0x694e3bf1],dh
  423a4e:	cdq    
  423a4f:	jmp    0x423aa1
  423a51:	aam    0x97
  423a53:	clc    
  423a54:	push   cs
  423a55:	or     al,0xa1
  423a57:	cmp    al,0xa7
  423a59:	fist   DWORD PTR [ebx]
  423a5b:	push   esp
  423a5c:	fidivr DWORD PTR [ebx+0x4]
  423a5f:	mov    ebp,0xc39dab2b
  423a64:	out    0xdc,eax
  423a66:	cmp    eax,0x7907b198
  423a6b:	adc    ebx,0x14
  423a6e:	stos   BYTE PTR es:[edi],al
  423a6f:	pushf  
  423a70:	xor    al,0x30
  423a72:	push   eax
  423a73:	ins    DWORD PTR es:[edi],dx
  423a74:	int3   
  423a75:	jmp    0x4bb4db0c
  423a7a:	jp     0x423a59
  423a7c:	int    0x17
  423a7e:	bound  esi,QWORD PTR [esi-0x3a]
  423a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a82:	addr16 in al,dx
  423a84:	push   ds
  423a85:	sbb    al,0x87
  423a87:	int    0x9d
  423a89:	aas    
  423a8a:	sbb    esp,edi
  423a8c:	dec    esp
  423a8d:	xchg   ebp,eax
  423a8e:	mov    ecx,0x6b428931
  423a93:	test   DWORD PTR [edi+0x7],edx
  423a96:	dec    esi
  423a97:	mov    ecx,0x1e58fbad
  423a9c:	adc    eax,DWORD PTR [edx+0x638a5741]
  423aa2:	popa   
  423aa3:	dec    edx
  423aa4:	pop    ebp
  423aa5:	(bad)  
  423aa6:	mov    esi,0x501ef005
  423aab:	rcl    DWORD PTR [ebx-0x5a3c34ac],0x23
  423ab2:	dec    ecx
  423ab3:	cmp    bh,0x36
  423ab6:	jp     0x423ad1
  423ab8:	xchg   edx,eax
  423ab9:	dec    eax
  423aba:	test   eax,0xedd3585e
  423abf:	data16 cld 
  423ac1:	in     al,0xe1
  423ac3:	mov    bl,0x4c
  423ac5:	push   ds
  423ac6:	inc    esp
  423ac7:	inc    edi
  423ac8:	nop
  423ac9:	mov    dl,BYTE PTR [edi]
  423acb:	dec    ebx
  423acc:	or     BYTE PTR [eax],ah
  423ace:	adc    DWORD PTR [eax+0x34],0x93f04c72
  423ad5:	dec    eax
  423ad6:	(bad)  
  423ad7:	stos   DWORD PTR es:[edi],eax
  423ad8:	add    al,0x10
  423ada:	dec    ebx
  423adb:	inc    edi
  423adc:	fisub  WORD PTR [ebp-0x6e]
  423adf:	xchg   esi,eax
  423ae0:	adc    DWORD PTR [edi+ecx*8],esi
  423ae3:	test   BYTE PTR [ebp-0x64c9ed48],bl
  423ae9:	rcl    DWORD PTR [edx+0x6ebd59cf],0x34
  423af0:	mov    WORD PTR [esi-0xd],?
  423af3:	xchg   edi,eax
  423af4:	test   al,0x10
  423af6:	jle    0x423a78
  423af8:	inc    edx
  423af9:	xchg   ebx,eax
  423afa:	je     0x423ae3
  423afc:	push   edi
  423afd:	(bad)  
  423afe:	das    
  423aff:	int    0xcb
  423b01:	mov    ebp,DWORD PTR [eax]
  423b03:	adc    BYTE PTR [edx],dl
  423b05:	push   edi
  423b06:	xor    al,0x24
  423b08:	test   esi,edi
  423b0a:	cmp    dl,bl
  423b0c:	fiadd  WORD PTR [ebp+ebx*4+0x6]
  423b10:	pop    esi
  423b11:	lds    esp,FWORD PTR [edx]
  423b13:	cmp    al,BYTE PTR [esi]
  423b15:	jo     0x423acf
  423b17:	repnz and BYTE PTR [ebx-0x16],bh
  423b1b:	dec    edi
  423b1c:	sahf   
  423b1d:	iret   
  423b1e:	aas    
  423b1f:	scas   al,BYTE PTR es:[edi]
  423b20:	cdq    
  423b21:	int    0x3c
  423b23:	icebp  
  423b24:	or     BYTE PTR [eax],al
  423b26:	mov    eax,ds:0xc3dfc9a5
  423b2b:	and    esp,DWORD PTR ds:0xb2869ecd
  423b31:	pop    ss
  423b32:	mov    eax,ds:0x60f1b491
  423b37:	dec    ecx
  423b38:	jbe    0x423afd
  423b3a:	push   ebp
  423b3b:	sbb    ebp,DWORD PTR [edx]
  423b3d:	cmp    DWORD PTR [edx],esi
  423b3f:	pop    esi
  423b40:	test   eax,0x681a51f4
  423b45:	mov    al,ds:0xbd2aaa4f
  423b4a:	in     eax,dx
  423b4b:	cmp    eax,0x62471b57
  423b50:	mov    dh,0xc0
  423b52:	data16 jb 0x423bc1
  423b55:	or     dh,BYTE PTR [eax+0x20db4be9]
  423b5b:	add    al,0x62
  423b5d:	jne    0x423b86
  423b5f:	rcl    BYTE PTR [ecx+ebp*4],1
  423b62:	int3   
  423b63:	je     0x423b6e
  423b65:	mov    esi,0x2150e00d
  423b6a:	push   0x7dd10881
  423b6f:	cs icebp 
  423b71:	ss sar dl,cl
  423b74:	in     eax,dx
  423b75:	or     ch,BYTE PTR [ebp+0x4d278de6]
  423b7b:	fadd   st,st(5)
  423b7d:	push   DWORD PTR [ebp+0x23]
  423b80:	mov    ecx,ebp
  423b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b83:	addr16 push esi
  423b85:	aad    0x2f
  423b87:	push   eax
  423b88:	addr16 (bad) 
  423b8a:	fs jmp 0x1fb642af
  423b90:	cmp    eax,0xe234da19
  423b95:	jmp    DWORD PTR [ebx]
  423b97:	push   esi
  423b98:	and    eax,0x9787674f
  423b9d:	add    esi,edx
  423b9f:	mov    ebp,0x696c09ba
  423ba4:	jno    0x423bd3
  423ba6:	adc    al,0xbe
  423ba8:	hlt    
  423ba9:	xchg   ecx,eax
  423baa:	lahf   
  423bab:	ficom  WORD PTR [esi+0x7c]
  423bae:	popf   
  423baf:	lds    esp,FWORD PTR [ebp-0x1cde8a6e]
  423bb5:	mov    edi,0x32598641
  423bba:	(bad)  
  423bbb:	xor    DWORD PTR [edx-0x6d],esi
  423bbe:	push   cs
  423bbf:	fsub   st(5),st
  423bc1:	ds je  0x423b4c
  423bc4:	or     eax,0xfdad7994
  423bc9:	mov    dh,0xdf
  423bcb:	fistp  QWORD PTR [ecx-0xb]
  423bce:	xchg   ecx,eax
  423bcf:	push   eax
  423bd0:	jmp    0x700376c2
  423bd5:	imul   esp,DWORD PTR [eax],0xfbe598cd
  423bdb:	lods   ax,WORD PTR ds:[esi]
  423bdd:	inc    esp
  423bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bdf:	jnp    0x423be4
  423be1:	push   edi
  423be2:	inc    esi
  423be3:	ret    0x3c8f
  423be6:	call   0xaa51:0x24ca7a5e
  423bed:	call   0xd0e2:0x6c8c3fff
  423bf4:	lahf   
  423bf5:	into   
  423bf6:	mov    eax,0x4c5fa66b
  423bfb:	pop    edi
  423bfc:	in     al,0x4e
  423bfe:	je     0x423c14
  423c00:	adc    eax,0x7b0a4093
  423c05:	inc    edi
  423c06:	cmp    eax,0xc9318bc
  423c0b:	std    
  423c0c:	std    
  423c0d:	arpl   si,sp
  423c0f:	(bad)  
  423c10:	mov    al,0x2
  423c12:	imul   esp,DWORD PTR [ebx-0x501da7e],0x72
  423c19:	mov    ch,BYTE PTR [edi+0x2d]
  423c1c:	icebp  
  423c1d:	adc    al,0x88
  423c1f:	push   edi
  423c20:	push   es
  423c21:	sub    ch,BYTE PTR [edx-0x67]
  423c24:	loop   0x423bb6
  423c26:	add    BYTE PTR [eax+0x4f511320],ah
  423c2c:	leave  
  423c2d:	stc    
  423c2e:	mov    edi,0x553ed056
  423c33:	add    eax,0x2678c5c6
  423c38:	cwde   
  423c39:	inc    esi
  423c3a:	fcom   DWORD PTR [ecx-0x5f]
  423c3d:	pop    ss
  423c3e:	(bad)  
  423c3f:	lods   eax,DWORD PTR ds:[esi]
  423c40:	mov    WORD PTR [edx+0x4f1af825],es
  423c46:	cld    
  423c47:	jg     0x423bda
  423c49:	dec    edx
  423c4a:	xchg   ecx,eax
  423c4b:	dec    esi
  423c4c:	loope  0x423c25
  423c4e:	cmovo  ecx,ebp
  423c51:	ins    DWORD PTR es:[edi],dx
  423c52:	repz inc eax
  423c54:	jmp    0x423c0c
  423c56:	inc    BYTE PTR [ebx+0x12d00ab8]
  423c5c:	pop    es
  423c5d:	ds ret 0xc544
  423c61:	xchg   esi,eax
  423c62:	addr16 icebp 
  423c64:	mov    bh,dh
  423c66:	xor    ch,BYTE PTR [eax+0x32]
  423c69:	cmc    
  423c6a:	mov    ds:0x93d21914,al
  423c6f:	mov    ch,0xdc
  423c71:	mov    eax,0xdddefa66
  423c76:	shl    DWORD PTR [ebx+ebx*2-0x2c],cl
  423c7a:	mov    dh,0x79
  423c7c:	jo     0x423cdf
  423c7e:	cmp    al,0xf
  423c80:	mov    di,0x5e87
  423c84:	xor    ebx,ecx
  423c86:	in     al,dx
  423c87:	jmp    0x59ce:0x76b156a9
  423c8e:	jecxz  0x423c3d
  423c90:	adc    DWORD PTR [edi+0x7a257585],edi
  423c96:	xchg   ebx,eax
  423c97:	sbb    DWORD PTR [eax-0x15],edi
  423c9a:	dec    ecx
  423c9b:	add    dl,al
  423c9d:	clc    
  423c9e:	jae    0x423c5d
  423ca0:	xlat   BYTE PTR ds:[ebx]
  423ca1:	cmp    esp,esi
  423ca3:	or     eax,0x5d0b2331
  423ca8:	ss loop 0x423ca9
  423cab:	test   al,0x31
  423cad:	lds    esi,FWORD PTR [ebx-0x44]
  423cb0:	idiv   DWORD PTR ds:0x5144fe5f
  423cb6:	call   0x849:0xe0c4e435
  423cbd:	jge    0x423c41
  423cbf:	inc    edx
  423cc0:	out    0x3a,al
  423cc2:	jbe    0x423c48
  423cc4:	imul   ebx,DWORD PTR [edx+0x2c],0xfe607888
  423ccb:	dec    ebp
  423ccc:	push   esp
  423ccd:	(bad)  
  423cce:	ror    al,cl
  423cd0:	dec    ebp
  423cd1:	jg     0x423c75
  423cd3:	call   0xa54e3f60
  423cd8:	jns    0x423cb4
  423cda:	leave  
  423cdb:	ss nop
  423cdd:	(bad)  
  423cde:	cmp    edx,DWORD PTR [ebp-0x58b8a48c]
  423ce4:	imul   esi,ecx,0xab7ad1f
  423cea:	dec    eax
  423ceb:	and    eax,0x7ef41b4d
  423cf0:	call   0xaf07fac8
  423cf5:	pop    ecx
  423cf6:	popf   
  423cf7:	loopne 0x423c8d
  423cf9:	xor    edx,DWORD PTR [esi+0x495c24d4]
  423cff:	out    0x32,eax
  423d01:	push   esi
  423d02:	sub    cl,BYTE PTR [eax-0x30]
  423d05:	cld    
  423d06:	scas   eax,DWORD PTR es:[edi]
  423d07:	(bad)  
  423d08:	mov    edi,0xc276dc38
  423d0d:	jb     0x423cf5
  423d0f:	cmp    ebx,0xffffffb3
  423d12:	rol    BYTE PTR [esi],cl
  423d14:	xchg   esp,eax
  423d15:	pop    edi
  423d16:	jp     0x423d01
  423d18:	cmp    ch,BYTE PTR [edx-0x21]
  423d1b:	mov    ebx,0xddf1f57b
  423d20:	ins    BYTE PTR es:[edi],dx
  423d21:	inc    eax
  423d22:	sti    
  423d23:	repnz out 0xee,al
  423d26:	(bad)  
  423d27:	xchg   esi,eax
  423d28:	sub    edx,esp
  423d2a:	mov    bh,0xc2
  423d2c:	mov    eax,0x6525cc08
  423d31:	push   es
  423d32:	add    bh,dh
  423d34:	inc    edi
  423d35:	sub    edx,DWORD PTR [edx]
  423d37:	or     DWORD PTR [edx-0xb],0x9699bb7d
  423d3e:	or     DWORD PTR [ecx+0x76f2839b],ebp
  423d44:	dec    al
  423d46:	jbe    0x423d8e
  423d48:	push   es
  423d49:	cmp    bl,cl
  423d4b:	jbe    0x423d31
  423d4d:	dec    ebp
  423d4e:	into   
  423d4f:	nop
  423d50:	call   0x5c28:0xd979bd02
  423d57:	mov    edi,0xc9a7864b
  423d5c:	push   cs
  423d5d:	leave  
  423d5e:	jnp    0x423d89
  423d60:	cmp    eax,0xd9d76c43
  423d65:	dec    edx
  423d66:	aaa    
  423d67:	in     al,dx
  423d68:	mov    ecx,0x5342dca5
  423d6d:	jmp    FWORD PTR [ebp+0x18861bcb]
  423d73:	stos   BYTE PTR es:[edi],al
  423d74:	inc    DWORD PTR [eax-0x2e385064]
  423d7a:	jge    0x423d98
  423d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d7d:	and    ah,dh
  423d7f:	pop    eax
  423d80:	cmp    ebp,eax
  423d82:	xchg   edi,eax
  423d83:	fisttp WORD PTR [ecx-0x34cebbde]
  423d89:	pop    ebp
  423d8a:	push   edx
  423d8b:	jle    0x423df7
  423d8d:	test   dh,ch
  423d8f:	mov    ebp,0xd4f5bb2f
  423d94:	push   es
  423d95:	mov    cl,0x55
  423d97:	mov    ecx,0x391f22cb
  423d9c:	call   0xe9885ce5
  423da1:	push   cs
  423da2:	push   ebx
  423da3:	sar    DWORD PTR [ebx+0x3f08ce47],cl
  423da9:	xchg   edx,eax
  423daa:	jo     0x423e07
  423dac:	les    esp,FWORD PTR ds:0xbddb2c23
  423db2:	mov    ebx,0xab1854e0
  423db7:	or     BYTE PTR [edi-0x1bac6a17],al
  423dbd:	stos   BYTE PTR es:[edi],al
  423dbe:	iret   
  423dbf:	sahf   
  423dc0:	shr    BYTE PTR [edi-0x77],0x5b
  423dc4:	push   eax
  423dc6:	cmp    al,BYTE PTR ds:0x278838fd
  423dcc:	or     edi,ecx
  423dce:	mov    esi,0x7adc4ec5
  423dd3:	aaa    
  423dd4:	mov    edi,0xebab249c
  423dd9:	sbb    esi,DWORD PTR [edi-0x6]
  423ddc:	mov    BYTE PTR ds:0x28558b3e,ch
  423de2:	push   edx
  423de3:	iret   
  423de4:	cs call 0x3dd9091e
  423dea:	out    dx,al
  423deb:	arpl   WORD PTR ds:0x3aefcf7d,di
  423df1:	jl     0x423e38
  423df3:	add    eax,0x6afd6087
  423df8:	test   al,0xb4
  423dfa:	test   dl,0xf1
  423dfd:	mov    dh,0x7
  423dff:	scas   eax,DWORD PTR es:[edi]
  423e00:	pop    es
  423e01:	clc    
  423e02:	and    al,0x96
  423e04:	push   edi
  423e05:	jecxz  0x423e2a
  423e07:	(bad)  
  423e08:	cdq    
  423e09:	scas   eax,DWORD PTR es:[edi]
  423e0a:	add    dh,0x54
  423e0d:	in     al,0xb9
  423e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e10:	or     eax,0x877c3c23
  423e15:	jne    0x423dfb
  423e17:	ficom  DWORD PTR [eax]
  423e19:	inc    esp
  423e1a:	dec    esp
  423e1b:	mov    ebp,0x4449c9ef
  423e20:	(bad)  
  423e21:	dec    edx
  423e22:	cmp    eax,0x1c4cec85
  423e27:	rol    DWORD PTR [ebx+0x327d85f3],0x71
  423e2e:	jbe    0x423e5b
  423e30:	dec    ebp
  423e31:	pop    esi
  423e32:	scas   al,BYTE PTR es:[edi]
  423e33:	jle    0x423e12
  423e35:	fild   QWORD PTR [edx-0x7a]
  423e38:	xor    eax,0xc79d19ee
  423e3d:	mov    ecx,0x96312e9a
  423e42:	(bad)  
  423e44:	ja     0x423ebb
  423e46:	jae    0x423e8c
  423e48:	es ret 0x323f
  423e4c:	mov    ah,0xc7
  423e4e:	int3   
  423e4f:	xchg   esi,eax
  423e50:	cmp    bl,BYTE PTR es:[ebx+0x6cf50431]
  423e57:	sub    ebp,ebx
  423e59:	and    edx,0x6c
  423e5c:	mov    dl,0xf6
  423e5e:	xor    eax,ebx
  423e60:	adc    ecx,DWORD PTR [edx]
  423e62:	cs or  eax,0xa85219c
  423e68:	mov    eax,ds:0x1e8cfe0c
  423e6d:	nop
  423e6e:	push   ecx
  423e6f:	(bad)  
  423e70:	pop    ecx
  423e71:	dec    edx
  423e72:	or     DWORD PTR [ecx+0x324d63c4],ebp
  423e78:	mov    eax,0x6cd2ecc1
  423e7d:	fmul   st,st(4)
  423e7f:	aad    0x47
  423e81:	push   esi
  423e82:	sahf   
  423e83:	push   ecx
  423e84:	sbb    ebp,DWORD PTR [ecx+0x1537bce1]
  423e8a:	ret    
  423e8b:	rcl    DWORD PTR [ebx-0x26],1
  423e8e:	iret   
  423e8f:	leave  
  423e90:	push   esi
  423e91:	xchg   ebx,eax
  423e92:	push   ecx
  423e93:	pop    es
  423e94:	ins    BYTE PTR es:[edi],dx
  423e95:	das    
  423e96:	xor    eax,0xa2182909
  423e9b:	xchg   edi,eax
  423e9c:	sub    DWORD PTR [edi+0x6449cbd],edi
  423ea2:	mov    DWORD PTR [esi-0x9027fc9],esi
  423ea8:	call   0xcdcf:0x7ba06fc3
  423eaf:	pop    esp
  423eb0:	jo     0x423f06
  423eb2:	mov    cl,BYTE PTR [di]
  423eb5:	add    al,0x58
  423eb7:	outs   dx,BYTE PTR ds:[esi]
  423eb8:	jge    0x423e7b
  423eba:	inc    ecx
  423ebb:	(bad)  
  423ebc:	out    dx,eax
  423ebd:	(bad)  
  423ebe:	test   al,0x7e
  423ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ec1:	dec    eax
  423ec2:	cld    
  423ec3:	(bad)  
  423ec5:	or     al,BYTE PTR [esi]
  423ec7:	sbb    bh,al
  423ec9:	jne    0x423e61
  423ecb:	sub    ebp,esp
  423ecd:	out    dx,al
  423ece:	repz xor BYTE PTR ss:[ebx+0x1e8c2597],0xa2
  423ed7:	cmp    ecx,DWORD PTR [ebx+0x762b625f]
  423edd:	sub    ah,ch
  423edf:	mov    ds,WORD PTR [ecx-0x74]
  423ee2:	in     al,dx
  423ee3:	cmp    cl,BYTE PTR [eax-0x46]
  423ee6:	imul   ecx,eax,0xffffff80
  423ee9:	push   ebp
  423eea:	stc    
  423eeb:	aas    
  423eec:	ja     0x423eba
  423eee:	mov    gs,WORD PTR [esi+edi*4-0xf]
  423ef2:	mov    ds:0xf1f79d21,al
  423ef7:	jge    0x423f2d
  423ef9:	stos   BYTE PTR es:[edi],al
  423efa:	jno    0x423e9a
  423efc:	xor    al,0x7e
  423efe:	push   edx
  423eff:	shl    ebp,cl
  423f01:	in     al,dx
  423f02:	mov    al,ds:0x49b22b7
  423f07:	mov    dh,0xed
  423f09:	push   esp
  423f0a:	shr    BYTE PTR [ebp+0x25],cl
  423f0d:	add    BYTE PTR [eax],al
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fidivr DWORD PTR [edi+0x2304051d]
  423f23:	mov    eax,0x4f30001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	in     al,dx
  423f2b:	push   edi
  423f2c:	dec    esi
  423f2d:	jp     0x423ef4
  423f2f:	test   al,0xe3
  423f31:	std    
  423f32:	xchg   ebx,eax
  423f33:	pop    es
  423f34:	dec    esi
  423f35:	(bad)  
  423f36:	adc    al,0x76
  423f38:	cmp    al,0xc6
  423f3a:	cmp    al,0x6f
  423f3c:	pop    edi
  423f3d:	jo     0x423f3d
  423f3f:	push   0x62592feb
  423f44:	call   0xf5c4:0x6c264ec1
  423f4b:	inc    edx
  423f4c:	enter  0xfb1d,0xd7
  423f50:	mov    bh,dh
  423f52:	mov    dh,0xdb
  423f54:	out    dx,al
  423f55:	mov    dh,bl
  423f57:	sbb    bh,BYTE PTR [edi+esi*8-0x29]
  423f5b:	jns    0x423eed
  423f5d:	fild   WORD PTR [ecx-0x6f]
  423f60:	outs   dx,DWORD PTR ds:[esi]
  423f61:	mov    DWORD PTR [esi],edi
  423f63:	aad    0x20
  423f65:	outs   dx,BYTE PTR ds:[esi]
  423f66:	jle    0x423fde
  423f68:	int3   
  423f69:	or     DWORD PTR [eax+0x4554e081],esi
  423f6f:	mov    ds:0x9c36d1a9,eax
  423f74:	inc    edx
  423f75:	(bad)  
  423f76:	clc    
  423f77:	xlat   BYTE PTR cs:[ebx]
  423f79:	xor    dh,BYTE PTR [edx+0x135fbc68]
  423f7f:	ret    0x94f
  423f82:	xchg   edx,eax
  423f83:	and    eax,0x17ddb00b
  423f88:	xchg   edx,eax
  423f89:	sahf   
  423f8a:	stc    
  423f8b:	fwait
  423f8c:	cdq    
  423f8d:	clc    
  423f8e:	mov    al,ds:0x504ee2d9
  423f93:	mov    ch,0xb9
  423f95:	fnsave [edi-0x24]
  423f98:	sbb    al,0xb3
  423f9a:	jo     0x423f60
  423f9c:	add    al,0x1b
  423f9e:	push   es
  423f9f:	sar    DWORD PTR [edx],0x5
  423fa2:	test   ebx,0xf8f5a6ab
  423fa8:	lahf   
  423fa9:	out    dx,ax
  423fab:	push   ebx
  423fac:	js     0x423fdf
  423fae:	or     DWORD PTR [edx+0x1],esp
  423fb1:	sar    BYTE PTR [ecx],cl
  423fb3:	rcr    dh,0xb7
  423fb6:	adc    DWORD PTR [esi+0x2aaec0df],0x6e
  423fbd:	vpsubusw ymm3,ymm3,YMMWORD PTR fs:[esi-0x5]
  423fc3:	cdq    
  423fc4:	mov    bl,0xdf
  423fc6:	pop    edx
  423fc7:	pop    ebx
  423fc8:	pop    edi
  423fc9:	test   BYTE PTR [ebx-0x5cd028d7],bh
  423fcf:	jg     0x424031
  423fd1:	ins    BYTE PTR es:[edi],dx
  423fd2:	aas    
  423fd3:	es cmp BYTE PTR gs:[edi-0x1f0fdb0e],0xf6
  423fdc:	jno    0x423fe1
  423fde:	mov    al,ds:0x8470d790
  423fe3:	ds fdiv st(5),st
  423fe6:	or     esi,DWORD PTR [edx]
  423fe8:	hlt    
  423fe9:	ins    DWORD PTR es:[edi],dx
  423fea:	cmc    
  423feb:	add    cl,al
  423fed:	test   eax,0xb8f1e113
  423ff2:	dec    ebp
  423ff3:	popa   
  423ff4:	repnz inc edi
  423ff6:	cmp    eax,0x626192f4
  423ffb:	scas   eax,DWORD PTR es:[edi]
  423ffc:	inc    BYTE PTR [ecx]
  423ffe:	mov    ecx,0x76e95607
  424003:	sbb    eax,0xbac62605
  424008:	and    edi,DWORD PTR [ebx+0x12]
  42400b:	xor    bl,BYTE PTR [edx+0x589e999e]
  424011:	xchg   DWORD PTR [edx],esp
  424013:	fidiv  DWORD PTR [edx+0x426a8f0d]
  424019:	sbb    DWORD PTR [edi],0x236f57eb
  42401f:	xchg   DWORD PTR [ebp-0x5e587079],edi
  424025:	cld    
  424026:	xor    ecx,ebp
  424028:	cmp    al,0xf5
  42402a:	sti    
  42402b:	shr    DWORD PTR es:[edx+0x77],cl
  42402f:	jae    0x42400a
  424031:	mov    ds:0xeb39b8a0,al
  424036:	and    esp,DWORD PTR [eax]
  424038:	test   dl,ch
  42403a:	push   ebx
  42403b:	mov    ebp,0xb99f674e
  424040:	in     al,dx
  424041:	xchg   ebp,eax
  424042:	das    
  424043:	test   bl,bh
  424045:	pop    eax
  424046:	fisubr WORD PTR [edx+0x23]
  424049:	sub    eax,0xdc7ef52f
  42404e:	jmp    0xb645438f
  424053:	xchg   esp,eax
  424054:	setl   BYTE PTR [edi-0x9dc0871]
  42405b:	enter  0x6bcf,0x5e
  42405f:	addr16 xchg esi,eax
  424061:	outs   dx,DWORD PTR ds:[esi]
  424062:	call   0xc833:0x94400952
  424069:	mov    eax,ds:0x6b2d28a9
  42406e:	xchg   edx,eax
  42406f:	sub    eax,0x4defaa41
  424074:	pop    edi
  424075:	cmp    ebp,ebp
  424077:	dec    esp
  424078:	ror    BYTE PTR [ebp+0x48],1
  42407b:	jo     0x4240c0
  42407d:	aam    0xc4
  42407f:	fnstsw WORD PTR [ebx-0x155cfe03]
  424085:	lahf   
  424086:	push   0xfffffff6
  424088:	loopne 0x424087
  42408a:	push   ebp
  42408b:	lahf   
  42408c:	adc    al,0x9b
  42408e:	out    dx,al
  42408f:	enter  0x3797,0x6e
  424093:	inc    ebx
  424094:	dec    eax
  424095:	push   es
  424096:	fcomp  QWORD PTR [esi+0x60]
  424099:	cwde   
  42409a:	mov    dl,0x40
  42409c:	and    eax,0x429b018
  4240a1:	mov    dl,ah
  4240a3:	test   dl,dl
  4240a5:	iret   
  4240a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240a7:	retf   
  4240a8:	jne    0x424046
  4240aa:	lods   eax,DWORD PTR ds:[esi]
  4240ab:	xor    al,0xe9
  4240ad:	adc    eax,0x8bc542c0
  4240b2:	sub    eax,DWORD PTR [edi-0x57]
  4240b5:	mov    BYTE PTR [ebp+0x2a066d5],ah
  4240bb:	jl     0x424112
  4240bd:	jmp    0x186e:0x166b2e33
  4240c4:	push   0xe1ee7761
  4240c9:	dec    ebx
  4240ca:	fwait
  4240cb:	sbb    ebp,DWORD PTR [esi-0x4d]
  4240ce:	xor    DWORD PTR [ecx-0x5baba33c],ebx
  4240d4:	jb     0x42406f
  4240d6:	repz fidiv WORD PTR [esi]
  4240d9:	sub    eax,0x8f0e201e
  4240de:	(bad)  
  4240df:	mov    al,BYTE PTR [esp+edx*8-0x1b817595]
  4240e6:	std    
  4240e7:	mov    ebp,0x7c67483a
  4240ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ed:	dec    eax
  4240ee:	jo     0x424075
  4240f0:	xchg   ebp,eax
  4240f1:	outs   dx,DWORD PTR ds:[esi]
  4240f2:	and    edx,DWORD PTR [esi]
  4240f4:	push   edi
  4240f5:	lahf   
  4240f6:	sbb    DWORD PTR [edi+0x2c],ebx
  4240f9:	mov    ebx,0x45bec032
  4240fe:	cmc    
  4240ff:	xlat   BYTE PTR ds:[ebx]
  424100:	push   ss
  424101:	imul   ebx
  424103:	pop    ebp
  424104:	mov    ecx,0x60535264
  424109:	add    al,0xd2
  42410b:	xchg   ecx,eax
  42410c:	cmp    bh,BYTE PTR [si+0x3863]
  424111:	and    ebx,DWORD PTR [ecx+0x25]
  424114:	push   esp
  424115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424116:	sbb    esi,esp
  424118:	jg     0x4240d2
  42411a:	scas   eax,DWORD PTR es:[edi]
  42411b:	mov    ebx,0xec3fca0
  424120:	or     DWORD PTR [edx-0x40],eax
  424123:	xchg   edx,eax
  424124:	and    bh,BYTE PTR [esi-0xc4b3eee]
  42412a:	cmp    bh,BYTE PTR [edi+0x46]
  42412d:	or     DWORD PTR [eax+esi*2-0x50],0xffffff8c
  424132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424133:	ss js  0x424190
  424136:	lock pop edi
  424138:	or     BYTE PTR [edx-0x32],cl
  42413b:	in     eax,0x9b
  42413d:	jbe    0x42410e
  42413f:	into   
  424140:	lods   al,BYTE PTR ds:[esi]
  424141:	xchg   edx,eax
  424142:	lea    ebp,[eax]
  424144:	push   ebp
  424145:	inc    eax
  424146:	sub    al,0x66
  424148:	fnstcw WORD PTR [ebx-0x3c]
  42414b:	mov    edi,0x4c62ca6b
  424150:	adc    esi,DWORD PTR [edx-0x6b9cec71]
  424156:	(bad)  [edi+0x7f316b05]
  42415c:	jl     0x424188
  42415e:	ss aaa 
  424160:	cmp    dh,bh
  424162:	clc    
  424163:	mov    ch,BYTE PTR [edi]
  424165:	dec    edi
  424166:	xor    BYTE PTR [eax+0x33e0e7],0x6f
  42416d:	cmc    
  42416e:	dec    ebx
  42416f:	and    BYTE PTR ds:0x2da4f244,dl
  424175:	imul   esi,DWORD PTR [edx],0x6b
  424178:	xor    bl,BYTE PTR [ebx-0x594c2d4c]
  42417e:	(bad)  
  42417f:	xchg   ebp,eax
  424180:	rol    BYTE PTR [ebx],0x3a
  424183:	jns    0x424158
  424185:	sbb    cl,dl
  424187:	xor    edi,DWORD PTR [esi-0x57]
  42418a:	push   ds
  42418b:	jmp    0x84c3:0xe8e56b35
  424192:	xchg   ebx,eax
  424193:	test   DWORD PTR [edi-0x3a],ebx
  424196:	mov    dh,0x7e
  424198:	ins    DWORD PTR es:[edi],dx
  424199:	xchg   esi,eax
  42419a:	pop    esi
  42419b:	mov    al,ds:0x76b52da3
  4241a0:	xlat   BYTE PTR ds:[ebx]
  4241a1:	cmp    al,0x62
  4241a3:	leave  
  4241a4:	xor    ecx,DWORD PTR [esi-0x54]
  4241a7:	shl    DWORD PTR [esi-0x7d98d0d],0x1a
  4241ae:	mov    ebp,DWORD PTR ds:0x31e6c0f
  4241b4:	popf   
  4241b5:	jnp    0x42420a
  4241b7:	sub    ebx,eax
  4241b9:	aas    
  4241ba:	dec    eax
  4241bb:	ja     0x424209
  4241bd:	mov    al,ds:0x4570ecb6
  4241c2:	mov    ebp,0x70fa30e5
  4241c7:	or     eax,0xaf62c462
  4241cc:	sbb    BYTE PTR [edi],0x42
  4241cf:	adc    eax,0x12e6ef4f
  4241d4:	xor    al,0xa3
  4241d6:	loop   0x42416c
  4241d8:	push   es
  4241d9:	imul   ebp,ecx
  4241dc:	dec    esp
  4241dd:	add    ebp,ecx
  4241df:	mov    bh,dh
  4241e1:	jns    0x42416e
  4241e3:	fisubr WORD PTR [ecx]
  4241e5:	outs   dx,DWORD PTR ds:[esi]
  4241e6:	into   
  4241e7:	out    0x38,al
  4241e9:	icebp  
  4241ea:	push   esi
  4241eb:	adc    DWORD PTR [edx-0x62a0788d],ebp
  4241f1:	mov    eax,0xa3d2f4ce
  4241f6:	mov    ebp,0x322ca206
  4241fb:	push   ecx
  4241fc:	adc    eax,0xc03ef635
  424201:	das    
  424202:	rol    DWORD PTR [ecx-0x20],1
  424205:	jne    0x4241df
  424207:	sbb    al,BYTE PTR [ecx]
  424209:	xchg   ebx,eax
  42420a:	and    al,0x2c
  42420c:	mov    edi,0xda584ca9
  424211:	cmp    dh,BYTE PTR [eax+0x4b]
  424214:	fmul   st,st(3)
  424216:	in     al,0x90
  424218:	pop    eax
  424219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42421a:	(bad)  
  42421b:	neg    BYTE PTR [eax+ecx*8-0x6c]
  42421f:	xor    BYTE PTR [esi],al
  424221:	outs   dx,DWORD PTR ds:[esi]
  424222:	int3   
  424223:	scas   eax,DWORD PTR es:[edi]
  424224:	sub    ecx,DWORD PTR [eax-0x2b]
  424227:	cld    
  424228:	cmp    BYTE PTR [ebx],0xca
  42422b:	fcomp  DWORD PTR [edi-0x54fe992c]
  424231:	jmp    0x4241b8
  424233:	mov    ebp,0x9511686
  424238:	mov    DWORD PTR [ebx+0x5d49c3e4],edx
  42423e:	adc    al,0x1e
  424240:	shl    al,cl
  424242:	cli    
  424243:	cld    
  424244:	jb     0x4242c1
  424246:	neg    DWORD PTR [ecx+0x2d18ff0b]
  42424c:	dec    esp
  42424d:	cmc    
  42424e:	push   edx
  42424f:	(bad)  
  424250:	iret   
  424251:	push   edx
  424252:	fstp   TBYTE PTR [ebp+0x55]
  424255:	icebp  
  424256:	adc    edx,DWORD PTR [ecx+0x1f]
  424259:	jns    0x42427e
  42425b:	fstp   QWORD PTR [ecx]
  42425d:	ret    0x229e
  424260:	out    dx,al
  424261:	xchg   esp,eax
  424262:	add    edi,esp
  424264:	cmp    DWORD PTR [ecx-0x5c0e5810],ecx
  42426a:	mov    esi,0x3f0a6199
  42426f:	jbe    0x4241f5
  424271:	enter  0x812e,0x11
  424275:	dec    esp
  424276:	push   eax
  424277:	lods   al,BYTE PTR ds:[esi]
  424278:	or     edx,edx
  42427a:	loop   0x4242e0
  42427c:	xchg   BYTE PTR [eax+0x3453dd0a],bl
  424282:	out    0xb4,al
  424284:	pushf  
  424285:	push   0x4e8392fa
  42428a:	ja     0x4242af
  42428c:	es fwait
  42428e:	jbe    0x424250
  424290:	adc    BYTE PTR [ecx-0x50a52d60],dl
  424296:	inc    edi
  424297:	and    DWORD PTR [ebp-0x39],esp
  42429a:	add    eax,DWORD PTR [eax-0x1678c642]
  4242a0:	repnz test al,0xc4
  4242a3:	rcr    DWORD PTR [edx+eax*4-0x25],1
  4242a7:	mov    cl,0xec
  4242a9:	jnp    0x4242a0
  4242ab:	xchg   ebp,eax
  4242ac:	mov    dl,cl
  4242ae:	pushf  
  4242af:	mov    ds:0xcc12ad03,eax
  4242b4:	cmp    ebx,DWORD PTR [ebx+esi*4]
  4242b7:	sbb    esp,ecx
  4242b9:	and    BYTE PTR [edi],bh
  4242bb:	sub    eax,0x62261ff0
  4242c0:	loopne 0x4242b7
  4242c2:	aam    0xa7
  4242c4:	or     ebx,0xe
  4242c7:	sub    BYTE PTR [ebx-0x37899f9b],0x6b
  4242ce:	adc    edx,DWORD PTR [esi]
  4242d0:	rcl    edi,1
  4242d2:	pop    esp
  4242d3:	fistp  WORD PTR [eax-0x2d46db00]
  4242d9:	add    BYTE PTR [ecx+0xd],0x6c
  4242dd:	into   
  4242de:	daa    
  4242df:	jle    0x4242f4
  4242e1:	or     ch,BYTE PTR [ecx+0x61]
  4242e4:	inc    eax
  4242e5:	sti    
  4242e6:	cmp    eax,0x339481d8
  4242eb:	xchg   ecx,eax
  4242ec:	pop    esi
  4242ed:	jecxz  0x4242a6
  4242ef:	(bad)  
  4242f0:	in     eax,dx
  4242f1:	dec    ecx
  4242f2:	out    0x6e,al
  4242f4:	cdq    
  4242f5:	btc    DWORD PTR [ebx+0x65],ebx
  4242f9:	std    
  4242fa:	xchg   edi,eax
  4242fb:	cmp    al,0xc8
  4242fd:	das    
  4242fe:	stc    
  4242ff:	sti    
  424300:	popa   
  424301:	mov    DWORD PTR [edi],ebx
  424303:	push   ds
  424304:	inc    ecx
  424305:	js     0x424352
  424307:	ins    BYTE PTR es:[edi],dx
  424308:	mov    eax,ds:0xb6601315
  42430d:	adc    al,0xa
  42430f:	leave  
  424310:	imul   ebx,ecx,0xa2750931
  424316:	popf   
  424317:	hlt    
  424318:	fstp   DWORD PTR ds:0x190c6edc
  42431e:	inc    esp
  42431f:	shl    dh,cl
  424321:	mov    eax,ds:0x23bff2d5
  424326:	mov    WORD PTR [edi-0x53],ss
  424329:	lahf   
  42432a:	outs   dx,BYTE PTR ds:[esi]
  42432b:	fldenv [eax]
  42432d:	fucom  st(1)
  42432f:	imul   ebx,DWORD PTR [ebp+0x13],0x49f0c07e
  424336:	ss sahf 
  424338:	xor    DWORD PTR [esp+eax*8+0xf],ecx
  42433c:	cld    
  42433d:	lds    edi,FWORD PTR [edi+ebx*2+0x21]
  424341:	xor    BYTE PTR [eax-0x28],bh
  424344:	xor    eax,0x2a242e2f
  424349:	call   0x505cbaa2
  42434e:	out    dx,eax
  42434f:	fs enter 0x1290,0x98
  424354:	mov    dl,0x6
  424356:	ror    eax,1
  424358:	add    ebx,DWORD PTR [eax]
  42435a:	ror    BYTE PTR [edx+0xd],cl
  42435d:	repnz xor DWORD PTR [ebp+0x33eaf12],ebx
  424364:	mov    ch,BYTE PTR [eax+0x35bbe995]
  42436a:	mov    al,0x96
  42436c:	and    BYTE PTR [ecx],dl
  42436e:	and    ch,bh
  424370:	mov    BYTE PTR [ebx],ch
  424372:	mov    WORD PTR [eax],ds
  424374:	push   es
  424375:	jne    0x42439a
  424377:	cmp    eax,0x90469e95
  42437c:	push   ebx
  42437d:	or     BYTE PTR [bp+di],al
  424380:	imul   edx,DWORD PTR [ebx+ecx*2-0x3],0x67
  424385:	add    edi,DWORD PTR [ebx-0x4a]
  424388:	cmc    
  424389:	cmp    DWORD PTR [edx+0x33],0x45
  42438d:	call   0xa11b:0x2ce3db32
  424394:	mov    bh,0x49
  424396:	(bad)  
  424397:	xchg   ecx,eax
  424398:	(bad)  
  424399:	jmp    0x4243ef
  42439b:	xor    ebp,eax
  42439d:	arpl   cx,si
  42439f:	sub    BYTE PTR [ebp-0x6e387b8d],dl
  4243a5:	jl     0x4243f3
  4243a7:	data16 fnstsw WORD PTR [edx]
  4243aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ab:	push   ds
  4243ac:	out    0x98,eax
  4243ae:	cmp    eax,0xf96258a3
  4243b3:	push   cs
  4243b4:	mov    bl,0xcf
  4243b6:	sti    
  4243b7:	aaa    
  4243b8:	add    eax,0x59243750
  4243bd:	mov    bl,0x9b
  4243bf:	push   0x5011b8d
  4243c4:	out    dx,al
  4243c5:	leave  
  4243c6:	jge    0x4243ca
  4243c8:	sub    eax,0x34dc33a8
  4243cd:	jmp    0x6fc4039
  4243d2:	xor    DWORD PTR [ecx],ebx
  4243d4:	push   ebp
  4243d5:	sub    esp,DWORD PTR [ecx-0x3d746cc4]
  4243db:	repnz popfw 
  4243de:	jge    0x4243d8
  4243e0:	out    dx,al
  4243e1:	jno    0x424371
  4243e3:	retf   
  4243e4:	jp     0x42442f
  4243e6:	add    DWORD PTR [esi-0x4b2acd67],edx
  4243ec:	js     0x4243ad
  4243ee:	imul   eax,edx,0xc97ba6f5
  4243f4:	fs out dx,al
  4243f6:	cmp    bh,bh
  4243f8:	mov    ?,eax
  4243fa:	pop    ebx
  4243fb:	scas   al,BYTE PTR es:[edi]
  4243fc:	xor    al,0x2e
  4243fe:	retf   0x46eb
  424401:	xor    BYTE PTR [ecx+0x1],ah
  424404:	cs jno 0x424451
  424407:	test   BYTE PTR [ecx],bh
  424409:	pop    esp
  42440a:	out    dx,al
  42440b:	inc    edi
  42440c:	fdiv   st,st(0)
  42440e:	jne    0x4243f1
  424410:	xor    DWORD PTR [esi],edx
  424412:	xchg   BYTE PTR [eax+0x613f2e9],dh
  424418:	mov    WORD PTR [edi+0x76],es
  42441b:	(bad)  
  42441c:	xchg   ebp,eax
  42441d:	add    BYTE PTR [eax],al
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	xlat   BYTE PTR ds:[ebx]
  42442f:	int    0x12
  424431:	adc    al,0x16
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	jge    0x4243ea
  42443c:	imul   ecx,DWORD PTR [ebx+esi*2-0x74a1c462],0xffffffd0
  424444:	inc    ebx
  424445:	(bad)  
  424446:	push   edi
  424447:	xor    cl,bl
  424449:	out    dx,eax
  42444a:	ret    0xa914
  42444d:	in     al,0x94
  42444f:	jmp    0x4244ad
  424451:	push   ebp
  424452:	into   
  424453:	pusha  
  424454:	cmp    edi,eax
  424456:	std    
  424457:	int3   
  424458:	sub    BYTE PTR [ebp+0x76],dl
  42445b:	inc    esp
  42445c:	rcr    BYTE PTR [eax-0x6f],1
  42445f:	test   BYTE PTR [edi-0x6bdad6a3],0x23
  424466:	pop    esp
  424467:	out    0x20,eax
  424469:	inc    esp
  42446a:	into   
  42446b:	cld    
  42446c:	pop    es
  42446d:	cmp    eax,0xf4e555b3
  424472:	or     eax,0xfe440fd
  424477:	arpl   cx,cx
  424479:	mov    cl,0x2d
  42447b:	or     al,0x3b
  42447d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42447e:	sbb    edi,esp
  424480:	push   esi
  424481:	out    0x57,eax
  424483:	xlat   BYTE PTR ds:[ebx]
  424484:	mov    dl,0x1
  424486:	cmp    bh,BYTE PTR [edi+0x44]
  424489:	jbe    0x42444e
  42448b:	lods   al,BYTE PTR ds:[esi]
  42448c:	jne    0x424466
  42448e:	inc    dx
  424490:	add    al,0x5a
  424492:	or     eax,0xf2a40f6e
  424497:	or     ebp,DWORD PTR [edi]
  424499:	dec    esi
  42449a:	mov    ebp,gs
  42449c:	push   esp
  42449d:	gs call 0x679edfe8
  4244a3:	fld    TBYTE PTR ds:0xbfef58fa
  4244a9:	leave  
  4244aa:	(bad)  
  4244ab:	pop    esp
  4244ac:	cmp    ah,BYTE PTR [ebp+0x15]
  4244af:	out    dx,eax
  4244b0:	sar    BYTE PTR [eax+0x63f2778a],cl
  4244b6:	sub    al,0x4b
  4244b8:	popa   
  4244b9:	pop    es
  4244ba:	(bad)  
  4244bb:	fst    DWORD PTR [edx-0x67]
  4244be:	pop    ds
  4244bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244c0:	test   eax,0x116c23bd
  4244c5:	lods   al,BYTE PTR ds:[esi]
  4244c6:	ds dec ebx
  4244c8:	mov    al,0x96
  4244ca:	jge    0x42448f
  4244cc:	and    ecx,DWORD PTR [ecx+ebp*8]
  4244cf:	scas   al,BYTE PTR es:[edi]
  4244d0:	outs   dx,DWORD PTR ds:[esi]
  4244d1:	and    al,0xe
  4244d3:	push   ebp
  4244d4:	adc    BYTE PTR [ecx-0x45],0xbc
  4244d8:	retf   
  4244d9:	jbe    0x424513
  4244db:	rcl    BYTE PTR cs:[ecx-0x60],cl
  4244df:	lahf   
  4244e0:	(bad)  
  4244e1:	mov    dh,0x6d
  4244e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e4:	fwait
  4244e5:	sbb    ecx,DWORD PTR es:[esi]
  4244e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e9:	lahf   
  4244ea:	cmp    bh,BYTE PTR [ebx+eiz*4]
  4244ed:	cli    
  4244ee:	sub    DWORD PTR [ecx-0x43],ecx
  4244f1:	mov    dl,BYTE PTR [eax-0x6efa08a7]
  4244f7:	mov    esi,0x4067f98a
  4244fc:	pop    ebx
  4244fd:	jecxz  0x4244d6
  4244ff:	inc    ebp
  424500:	pop    es
  424501:	xchg   ebp,eax
  424502:	fwait
  424503:	aam    0xb1
  424505:	inc    ecx
  424506:	jnp    0x4244dc
  424508:	push   ebp
  424509:	sub    DWORD PTR [ebx],0x2abc6ce5
  42450f:	mov    dl,0x70
  424511:	xchg   edi,eax
  424512:	aaa    
  424513:	mov    ds:0xe2891e8d,eax
  424518:	inc    eax
  424519:	pop    ecx
  42451a:	pop    ds
  42451b:	add    BYTE PTR [esi],dh
  42451d:	inc    ecx
  42451e:	repz or DWORD PTR [eax-0x2c50ddbb],ebp
  424525:	cmp    DWORD PTR [edi],ebp
  424527:	inc    eax
  424528:	out    dx,al
  424529:	imul   ebp,DWORD PTR [ebp-0x14],0xffffffcd
  42452d:	xchg   esp,eax
  42452e:	cmp    eax,0x6c39969f
  424533:	fnstsw WORD PTR [esi-0x4f5b37a1]
  424539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42453a:	xor    DWORD PTR [eax+0x27],esi
  42453d:	adc    eax,0x9d9f7756
  424542:	xchg   ebx,eax
  424543:	mov    bl,0x81
  424545:	cmp    DWORD PTR [edi-0x20e445ff],ebx
  42454b:	add    eax,DWORD PTR [ebx+0x42ef78a2]
  424551:	jo     0x42451e
  424553:	and    al,BYTE PTR [eax+0x62]
  424556:	pop    esi
  424557:	fs and esi,esp
  42455a:	out    dx,eax
  42455b:	push   edx
  42455c:	lock test DWORD PTR [ebx-0x7d],edi
  424560:	lods   al,BYTE PTR ds:[esi]
  424561:	hlt    
  424562:	or     dh,0x65
  424565:	call   0x9abf:0x1d51c50d
  42456c:	inc    edi
  42456d:	(bad)  
  42456f:	fimul  WORD PTR [ebp+0x1af0e8ca]
  424575:	or     dh,al
  424577:	jb     0x4245ae
  424579:	sub    BYTE PTR [edx],bl
  42457b:	test   DWORD PTR es:[edi-0x7c],0x1e7f9ef0
  424583:	out    0xb7,al
  424585:	into   
  424586:	sbb    BYTE PTR [edi],bh
  424588:	mov    ecx,DWORD PTR [esi+0x29]
  42458b:	mov    BYTE PTR [edx-0x57],al
  42458e:	dec    ecx
  42458f:	stos   BYTE PTR es:[edi],al
  424590:	cdq    
  424591:	gs pop esi
  424593:	push   0xd9928032
  424598:	int    0x71
  42459a:	adc    DWORD PTR [edi-0x4031340],ebx
  4245a0:	sub    DWORD PTR [edi+0x7b],ebp
  4245a3:	jle    0x4245dc
  4245a5:	int3   
  4245a6:	lea    ebp,[esi]
  4245a8:	push   eax
  4245a9:	jmp    0x3ed9a15a
  4245ae:	outs   dx,BYTE PTR ds:[esi]
  4245af:	inc    edx
  4245b0:	jbe    0x424588
  4245b2:	xchg   ebp,eax
  4245b3:	fst    QWORD PTR [eax-0x68]
  4245b6:	xor    al,0x38
  4245b8:	mov    ecx,DWORD PTR [eax]
  4245ba:	sub    eax,0x78564cda
  4245bf:	xchg   ecx,esp
  4245c1:	pmulhw mm5,QWORD PTR [esi-0x33]
  4245c5:	jl     0x42454c
  4245c7:	test   al,0x49
  4245c9:	test   BYTE PTR [esi],0x64
  4245cc:	jne    0x4245d2
  4245ce:	inc    edi
  4245cf:	cmp    DWORD PTR [esi+0xdff5ea1],esi
  4245d5:	fisttp QWORD PTR [ebp-0x17]
  4245d8:	mov    al,0x28
  4245da:	jmp    0xb830:0x94206ebe
  4245e1:	enter  0xd983,0x9e
  4245e5:	jmp    0x1fedbdbb
  4245ea:	cdq    
  4245eb:	pop    edx
  4245ec:	daa    
  4245ed:	sbb    BYTE PTR [edx],ah
  4245ef:	call   0xef14:0x3683cee
  4245f6:	mov    dh,BYTE PTR [ebx-0x17]
  4245f9:	je     0x4245d6
  4245fb:	mov    ebp,0xcdf5dfee
  424600:	xor    bl,cl
  424602:	not    BYTE PTR [edx+0x18981c7d]
  424608:	dec    eax
  424609:	adc    edx,DWORD PTR [ebx+0x7153ad68]
  42460f:	xlat   BYTE PTR ds:[ebx]
  424610:	xor    BYTE PTR [ebp-0x25ac187d],ah
  424616:	dec    eax
  424617:	call   0x5969:0x8db4dd27
  42461e:	add    BYTE PTR [edx-0x7d75ef45],ch
  424624:	aam    0xd
  424626:	dec    esp
  424627:	out    0x89,al
  424629:	mov    cl,0x8d
  42462b:	lds    edx,FWORD PTR es:[ecx]
  42462e:	sar    DWORD PTR [ecx-0x2a],0x5e
  424632:	xor    eax,0xe6de46cb
  424637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424638:	pop    ecx
  424639:	call   0xc0b7ee99
  42463e:	je     0x42460c
  424640:	out    0x18,eax
  424642:	imul   eax,DWORD PTR [ebx+0x521daf5c],0x13f802f3
  42464c:	mov    dh,0x2
  42464e:	repnz std 
  424650:	sub    eax,0xe9892d13
  424655:	pop    edi
  424656:	jecxz  0x4245d8
  424658:	(bad)
  42465b:	xchg   ebp,eax
  42465c:	(bad)  [edx]
  42465e:	push   0x7104cf27
  424663:	cmp    BYTE PTR [ebp+0x703e09a7],bl
  424669:	sub    dl,BYTE PTR [ebx-0x4]
  42466c:	gs push ebp
  42466e:	mov    al,0xc1
  424670:	retf   0xae4d
  424673:	add    al,0xea
  424675:	xchg   ecx,eax
  424676:	inc    edi
  424677:	sub    al,0xc2
  424679:	outs   dx,DWORD PTR ss:[esi]
  42467b:	(bad)  
  42467c:	xor    cl,dh
  42467e:	fisubr DWORD PTR [eax]
  424680:	jmp    0x5ae2f869
  424685:	call   0xc399e39f
  42468a:	jle    0x424616
  42468c:	jne    0x42465b
  42468e:	pop    esi
  42468f:	xchg   edi,eax
  424690:	add    al,0xee
  424692:	fwait
  424693:	leave  
  424694:	adc    eax,0x3dabcd0b
  424699:	std    
  42469a:	loopne 0x424653
  42469c:	sbb    BYTE PTR [ebx+0x45],dl
  42469f:	es dec ebp
  4246a1:	mov    al,0x16
  4246a3:	leave  
  4246a4:	cwde   
  4246a5:	retf   0x9f21
  4246a8:	xor    al,0x45
  4246aa:	mov    ah,0xe3
  4246ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246ad:	lea    ebp,[ecx+0x53]
  4246b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246b1:	xchg   DWORD PTR [ebx+0x44],esi
  4246b4:	mov    ebx,0x8a30e722
  4246b9:	or     dl,BYTE PTR [eax-0x14432974]
  4246bf:	inc    esi
  4246c0:	xor    ecx,DWORD PTR [edx]
  4246c2:	xchg   DWORD PTR [eax-0x5e],esi
  4246c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246c6:	and    bl,dl
  4246c8:	pextrw esp,mm2,0x81
  4246cc:	les    edi,FWORD PTR [esi]
  4246ce:	adc    eax,0x925ccdd
  4246d4:	into   
  4246d5:	cld    
  4246d6:	or     BYTE PTR [edi+ebx*1-0x7c],0x74
  4246db:	inc    edi
  4246dc:	cmp    dl,BYTE PTR [ebp+edi*2+0x62]
  4246e0:	sbb    ch,BYTE PTR [esp+edx*8-0x63]
  4246e4:	loope  0x424676
  4246e6:	jbe    0x424699
  4246e8:	mov    BYTE PTR [edi+0x2891ad05],bh
  4246ee:	and    al,0xd1
  4246f0:	inc    ecx
  4246f1:	cli    
  4246f2:	mov    esp,0x47044d7a
  4246f7:	shl    DWORD PTR [ecx+0x59],0xd6
  4246fb:	xchg   edi,eax
  4246fc:	sbb    cl,BYTE PTR [esp+esi*8-0x18]
  424700:	jecxz  0x42476d
  424702:	je     0x424709
  424704:	or     esi,DWORD PTR [ebx-0x4a12642d]
  42470a:	dec    BYTE PTR [edx+0x5f]
  42470d:	sbb    al,0x49
  42470f:	jg     0x4246df
  424711:	setp   BYTE PTR [esi-0x4d7ea2ae]
  424718:	fidivr WORD PTR [ebx-0x7853bc50]
  42471e:	push   es
  42471f:	iret   
  424720:	pmulhuw mm7,QWORD PTR [eax+0x64]
  424724:	pop    DWORD PTR ds:0x214922c3
  42472a:	cmp    al,BYTE PTR [edi+eax*4+0x37b13c8e]
  424731:	out    0xe2,eax
  424733:	mov    al,ds:0x2dd35e90
  424738:	pop    edx
  424739:	leave  
  42473a:	mov    ebx,esi
  42473c:	inc    edx
  42473d:	push   edi
  42473e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42473f:	sbb    DWORD PTR [edi],0xdb4e217a
  424745:	outs   dx,DWORD PTR ds:[esi]
  424746:	dec    ecx
  424747:	ins    BYTE PTR es:[edi],dx
  424748:	mov    bl,0xc0
  42474a:	inc    edx
  42474b:	es lahf 
  42474d:	in     al,0x78
  42474f:	sahf   
  424750:	mov    esi,0x86c6e3c0
  424755:	fs xchg edx,eax
  424757:	jo     0x4247d0
  424759:	xchg   ebp,eax
  42475a:	fmul   st(3),st
  42475c:	daa    
  42475d:	xchg   esp,eax
  42475e:	fst    QWORD PTR [ebp-0x2d]
  424761:	ins    DWORD PTR es:[edi],dx
  424762:	cmp    DWORD PTR [ebp+0xcd6972e],ebx
  424768:	xchg   ecx,eax
  424769:	outs   dx,BYTE PTR ds:[esi]
  42476a:	pop    eax
  42476b:	mov    cl,0x7e
  42476d:	mov    esi,0xb464b253
  424772:	jne    0x4247c5
  424774:	mov    al,ds:0xae18e1e6
  424779:	jno    0x4247e5
  42477b:	dec    ecx
  42477c:	jp     0x424756
  42477e:	out    0x98,eax
  424780:	mov    ecx,DWORD PTR [eax]
  424782:	(bad)
  424785:	dec    esp
  424786:	out    0xdf,al
  424788:	fisttp DWORD PTR [edx]
  42478a:	and    edi,ebp
  42478c:	ja     0x4247b4
  42478e:	jae    0x4247b1
  424790:	sbb    al,0x3b
  424792:	icebp  
  424793:	dec    edx
  424794:	cmp    BYTE PTR [ebx-0x51e04ed8],ah
  42479a:	aas    
  42479b:	fcmovne st,st(5)
  42479d:	popa   
  42479e:	rcl    ebp,0xcd
  4247a1:	add    BYTE PTR [ecx],dh
  4247a3:	(bad)  
  4247a5:	sbb    BYTE PTR [edx-0x3e],0x7d
  4247a9:	mov    esi,eax
  4247ab:	push   ss
  4247ac:	sub    al,0x6d
  4247ae:	adc    al,0x64
  4247b0:	push   ds
  4247b1:	scas   eax,DWORD PTR es:[edi]
  4247b2:	cmp    ebp,edx
  4247b4:	je     0x42475c
  4247b6:	push   eax
  4247b7:	test   al,0x54
  4247b9:	ror    BYTE PTR [ebx+0xe3236c6],0x80
  4247c0:	jge    0xeef9dd4b
  4247c6:	lods   eax,DWORD PTR ds:[esi]
  4247c7:	inc    eax
  4247c8:	mov    BYTE PTR [eax-0x69],cl
  4247cb:	inc    esi
  4247cc:	bound  esp,QWORD PTR [ebx]
  4247ce:	inc    esi
  4247cf:	arpl   di,bp
  4247d1:	outs   dx,DWORD PTR ds:[esi]
  4247d2:	dec    eax
  4247d3:	fstp   DWORD PTR [eax+0xce8d58]
  4247d9:	and    ebp,DWORD PTR [esi+0x21bbe19e]
  4247df:	mov    ah,0x3
  4247e1:	iret   
  4247e2:	xor    edi,0x3b
  4247e5:	retf   
  4247e6:	pop    ebp
  4247e7:	jae    0x4247e4
  4247e9:	xor    DWORD PTR ds:[ecx+0xabf2e99],edi
  4247f0:	add    DWORD PTR [esi-0xfb2917d],esp
  4247f6:	pop    ebp
  4247f7:	inc    ecx
  4247f8:	lea    eax,[ebx+0x73]
  4247fb:	addr16 pop ebx
  4247fd:	or     DWORD PTR [ecx+0x46],esp
  424800:	mov    eax,ds:0xa4d67807
  424805:	hlt    
  424806:	dec    eax
  424807:	inc    ebp
  424808:	or     BYTE PTR [edi+0x51cb9ff5],dh
  42480e:	(bad)  
  424810:	mov    bh,0x2f
  424812:	iret   
  424813:	add    DWORD PTR [ebx],edx
  424815:	sbb    cl,0x38
  424818:	outs   dx,BYTE PTR ds:[esi]
  424819:	add    DWORD PTR [esi+ecx*8-0x44c9b689],0x76
  424821:	dec    edx
  424822:	jg     0x4247bd
  424824:	outs   dx,BYTE PTR ds:[esi]
  424825:	push   esi
  424826:	daa    
  424827:	inc    ebp
  424828:	mov    ebp,0x49d2c9a
  42482d:	inc    edi
  42482e:	sbb    edi,DWORD PTR [ebp+0x0]
  424831:	out    0x4f,eax
  424833:	cmp    eax,0x8e47e30c
  424838:	sbb    eax,ecx
  42483a:	aaa    
  42483b:	ins    DWORD PTR es:[edi],dx
  42483c:	push   0x8f65c9d
  424841:	push   esp
  424842:	push   cs
  424843:	in     al,dx
  424844:	adc    bh,BYTE PTR [ecx-0x8]
  424847:	mov    eax,ds:0x852e254c
  42484c:	je     0x424849
  42484e:	dec    esp
  42484f:	fild   DWORD PTR [edi]
  424851:	aad    0x56
  424853:	mov    esi,0x5e44fab8
  424858:	fs and edi,ecx
  42485b:	push   0x548eb54c
  424860:	adc    eax,0xe16f0ec1
  424865:	cdq    
  424866:	inc    edx
  424867:	and    al,0xa6
  424869:	sub    ebx,DWORD PTR [esi-0x15]
  42486c:	adc    BYTE PTR [edi-0x9],0x8d
  424870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424871:	outs   dx,DWORD PTR ds:[esi]
  424872:	pop    edx
  424873:	pop    ds
  424874:	mov    eax,0xb2beef76
  424879:	mov    ah,ah
  42487b:	xor    edi,DWORD PTR [edx+0x5b]
  42487e:	dec    dl
  424880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424881:	ja     0x4248e5
  424883:	push   ebx
  424884:	cli    
  424885:	xchg   BYTE PTR [edx+ebp*4+0x19ca6f89],bh
  42488c:	sahf   
  42488d:	stos   BYTE PTR es:[edi],al
  42488e:	sar    esi,0x46
  424891:	(bad)  
  424892:	sbb    esi,DWORD PTR [eax-0x5959e3a]
  424898:	pop    esi
  424899:	div    DWORD PTR [eax]
  42489b:	ds xchg edx,eax
  42489d:	dec    ecx
  42489e:	sub    DWORD PTR [esi-0x3cca2b2c],edi
  4248a4:	mov    ah,0xfe
  4248a6:	ror    DWORD PTR [ebp-0x35],cl
  4248a9:	pop    ebx
  4248aa:	xchg   ebx,eax
  4248ab:	add    esp,ebx
  4248ad:	cmp    esp,ecx
  4248af:	adc    eax,0x90160f37
  4248b4:	dec    esp
  4248b5:	or     al,0xef
  4248b7:	lea    esi,[edi-0x2f04001a]
  4248bd:	sbb    cl,BYTE PTR [edx+esi*8]
  4248c0:	mov    edi,DWORD PTR [eax+0x2cb35a70]
  4248c6:	cld    
  4248c7:	and    ebp,DWORD PTR [eax]
  4248c9:	xor    al,0x92
  4248cb:	mov    bh,dl
  4248cd:	sahf   
  4248ce:	xchg   ecx,eax
  4248cf:	xlat   BYTE PTR ds:[ebx]
  4248d0:	stos   DWORD PTR es:[edi],eax
  4248d1:	aam    0x0
  4248d3:	popa   
  4248d4:	lock adc DWORD PTR [edi-0x2adc18bd],eax
  4248db:	leave  
  4248dc:	stc    
  4248dd:	inc    ebp
  4248de:	adc    esi,0xfffffff7
  4248e1:	jns    0x424890
  4248e3:	jmp    0x424963
  4248e5:	ss jae 0x424917
  4248e8:	jmp    0x4248e3
  4248ea:	in     eax,dx
  4248eb:	je     0x4248fa
  4248ed:	adc    al,0xa2
  4248ef:	push   0xffffffb9
  4248f1:	rcl    DWORD PTR [edi+0x1d],cl
  4248f4:	add    eax,0x1999135
  4248f9:	mov    ah,0xb7
  4248fb:	sub    eax,0x1bbba596
  424900:	fnstenv [esi-0x64]
  424903:	loope  0x42491a
  424905:	shl    BYTE PTR [ebx+0x3c],0x11
  424909:	lock cs or ebx,esp
  42490d:	scas   eax,DWORD PTR es:[edi]
  42490e:	push   esi
  42490f:	jb     0x4248c5
  424911:	push   esp
  424912:	add    cl,dl
  424914:	ja     0x424925
  424916:	cmp    DWORD PTR [edi+0xb],0x367c0516
  42491d:	cmp    dl,al
  42491f:	mov    edx,0xf447f1cb
  424924:	ins    BYTE PTR es:[edi],dx
  424925:	das    
  424926:	or     cl,0x95
  424929:	inc    edx
  42492a:	cli    
  42492b:	pop    ecx
  42492c:	repnz add BYTE PTR [eax],al
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	or     ah,BYTE PTR [esi-0x3df66103]
  424944:	add    DWORD PTR [eax],eax
  424946:	repz add al,0x0
  424949:	add    BYTE PTR [eax+0xa],dl
  42494c:	and    BYTE PTR [ebx+0x66d4adac],ch
  424952:	xchg   edi,eax
  424953:	aaa    
  424954:	fs cdq 
  424956:	jg     0x42492b
  424958:	jbe    0x424902
  42495a:	fwait
  42495b:	xchg   ebx,eax
  42495c:	mov    al,0xb2
  42495e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42495f:	lock or eax,0xa11334cf
  424965:	in     eax,dx
  424966:	lea    esp,[edx+0x28]
  424969:	fmul   st(7),st
  42496b:	mov    ds:0xe9e64528,al
  424970:	repnz push esp
  424972:	fdiv   DWORD PTR [ebp+0x53668b86]
  424978:	push   ss
  424979:	loopne 0x4249bc
  42497b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42497c:	ret    0x2815
  42497f:	or     cl,BYTE PTR [edx]
  424981:	adc    eax,0xddd91713
  424986:	push   ds
  424987:	jne    0x424920
  424989:	adc    cl,BYTE PTR [ecx]
  42498b:	ficom  WORD PTR [ecx+0x3d]
  42498e:	std    
  42498f:	loopne 0x424937
  424991:	fld    DWORD PTR [esi]
  424993:	das    
  424994:	imul   eax,DWORD PTR [ecx-0x71370a65],0x49707427
  42499e:	jle    0x424a12
  4249a0:	or     dh,cl
  4249a2:	in     al,dx
  4249a3:	hlt    
  4249a4:	mov    ebx,0xe5e6894d
  4249a9:	ror    BYTE PTR [esi],0x74
  4249ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249ad:	mov    edx,0x38c4ba65
  4249b2:	cmovns eax,DWORD PTR ds:[bx+si]
  4249b7:	jecxz  0x4249d1
  4249b9:	jl     0x4249ec
  4249bb:	or     al,0x5a
  4249bd:	lahf   
  4249be:	(bad)  
  4249bf:	data16 fdivr QWORD PTR [eax-0x2c]
  4249c3:	ret    
  4249c4:	pop    edx
  4249c5:	(bad)  
  4249c6:	fs (bad) 
  4249c8:	xor    esi,DWORD PTR [eax+0x1e]
  4249cb:	pushf  
  4249cc:	ins    BYTE PTR es:[edi],dx
  4249cd:	ja     0x424965
  4249cf:	push   0xffffff9c
  4249d1:	dec    edx
  4249d2:	and    esp,DWORD PTR [edx]
  4249d4:	mov    ds:0x8043b482,eax
  4249d9:	push   cs
  4249da:	pop    ebp
  4249db:	and    BYTE PTR ds:0x1e37f6bf,bh
  4249e1:	add    DWORD PTR ds:0x4efc4bd7,edx
  4249e7:	shr    DWORD PTR [ebp+0x18cd1e27],cl
  4249ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249ee:	fistp  DWORD PTR [ebx+0x5216fa32]
  4249f4:	inc    edx
  4249f5:	mov    dh,0xff
  4249f8:	dec    ebx
  4249f9:	je     0x424a6e
  4249fb:	lods   eax,DWORD PTR ds:[esi]
  4249fc:	adc    edi,DWORD PTR [edx-0x66751f8]
  424a02:	call   0xfe73:0x16b0a4d9
  424a09:	and    esp,DWORD PTR [esi-0x31cb1f2f]
  424a0f:	jno    0x424a79
  424a11:	jo     0x4249c2
  424a13:	in     eax,0xc8
  424a15:	fstp   st(2)
  424a17:	lahf   
  424a18:	or     cl,bh
  424a1a:	nop
  424a1b:	(bad)  [ebx+0x14f00902]
  424a21:	ror    DWORD PTR [edi-0x34d4c70e],0x94
  424a28:	jecxz  0x424aa6
  424a2a:	mov    bh,BYTE PTR [ebx-0x34c7203d]
  424a30:	xor    al,0xa9
  424a32:	outs   dx,BYTE PTR ds:[esi]
  424a33:	(bad)  
  424a34:	jmp    0xe5a79554
  424a39:	(bad)  
  424a3a:	retf   0x5656
  424a3d:	or     DWORD PTR [ebx+0x61df9829],0xffffff82
  424a44:	xor    BYTE PTR [edx+0x468dd852],0x59
  424a4b:	and    eax,0x3b9cbe3e
  424a50:	sbb    DWORD PTR [edi-0x79190a32],ebp
  424a56:	arpl   WORD PTR [ebx],si
  424a58:	in     al,dx
  424a59:	xchg   edx,eax
  424a5a:	add    al,0x6
  424a5c:	popa   
  424a5d:	xchg   ecx,eax
  424a5e:	(bad)  
  424a5f:	cmp    BYTE PTR [eax-0xef86486],dh
  424a65:	popa   
  424a66:	sub    eax,0x5dc892c9
  424a6b:	ret    
  424a6c:	sbb    BYTE PTR [ecx+ecx*1+0x670d9edf],cl
  424a73:	(bad)  [edx+0x598011b1]
  424a79:	push   edi
  424a7a:	mov    cl,BYTE PTR [ecx+0x304b7c00]
  424a80:	fcom   DWORD PTR [eax]
  424a82:	lea    edx,[edx-0x24]
  424a85:	lahf   
  424a86:	or     bl,dl
  424a88:	lds    ecx,FWORD PTR [ecx+esi*2]
  424a8b:	dec    esi
  424a8c:	inc    esp
  424a8d:	jnp    0x424aba
  424a8f:	pop    eax
  424a90:	fmul   QWORD PTR [edx]
  424a92:	imul   cl
  424a94:	push   ds
  424a95:	sbb    ah,bh
  424a97:	xlat   BYTE PTR ds:[ebx]
  424a98:	dec    esi
  424a99:	jmp    0x1f71:0x4e8ec32a
  424aa0:	cmp    eax,0xcaeb7a2e
  424aa5:	test   DWORD PTR [edx],ebx
  424aa7:	xor    BYTE PTR [ebp+edx*2+0x10],al
  424aab:	dec    esi
  424aac:	cmp    al,0x33
  424aae:	out    0x9f,al
  424ab0:	out    0xb8,al
  424ab2:	mov    ds:0x147fbb32,eax
  424ab7:	add    eax,0x6f7fbd28
  424abc:	lahf   
  424abd:	jo     0x424adf
  424abf:	push   eax
  424ac0:	pop    esi
  424ac1:	xor    DWORD PTR [ebp-0x32],edx
  424ac4:	and    dl,dl
  424ac6:	pop    edi
  424ac7:	push   ecx
  424ac8:	gs inc ebx
  424aca:	popf   
  424acb:	fmul   DWORD PTR [eax]
  424acd:	pop    eax
  424ace:	inc    ebx
  424acf:	or     cl,BYTE PTR [bx+di]
  424ad2:	fwait
  424ad3:	cmp    edx,0x21a70a4c
  424ad9:	mov    eax,ds:0x48e9293a
  424ade:	add    al,0x3
  424ae0:	mov    edx,0x2980cd50
  424ae5:	mov    cl,0xc
  424ae7:	sbb    DWORD PTR [ebp-0x44dd5b56],ebp
  424aed:	jnp    0x424a7f
  424aef:	sub    al,0x37
  424af1:	jne    0x424ada
  424af3:	cmp    ebp,edi
  424af5:	pushf  
  424af6:	mov    edi,0xb95db86c
  424afb:	int3   
  424afc:	int3   
  424afd:	dec    edx
  424afe:	pop    ebx
  424aff:	sbb    BYTE PTR [ecx-0x4d54004e],dh
  424b05:	mov    eax,0xb99e23c0
  424b0a:	out    0xe5,eax
  424b0c:	inc    eax
  424b0d:	and    edi,DWORD PTR [edx]
  424b0f:	xlat   BYTE PTR ds:[ebx]
  424b10:	jge    0x424abd
  424b12:	add    ebx,DWORD PTR [eax-0x7e]
  424b15:	adc    eax,0x8c7c716b
  424b1a:	test   BYTE PTR [ebp+0x44],ah
  424b1d:	(bad)  
  424b1f:	into   
  424b20:	jbe    0x424ae4
  424b22:	dec    edi
  424b23:	or     eax,0x43f0ae9d
  424b28:	out    0xd3,al
  424b2a:	clc    
  424b2b:	or     cl,bh
  424b2d:	cmp    eax,0x57f31b9b
  424b32:	push   ebp
  424b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b34:	fcmovu st,st(5)
  424b36:	mov    esi,esi
  424b38:	sbb    edi,ebx
  424b3a:	jle    0x424b71
  424b3c:	in     eax,dx
  424b3d:	jno    0x424abf
  424b3f:	pop    eax
  424b40:	xor    eax,0x2c05eb15
  424b45:	xchg   esp,eax
  424b46:	scas   eax,DWORD PTR es:[edi]
  424b47:	dec    ebp
  424b48:	inc    eax
  424b49:	pop    esi
  424b4a:	fsub   QWORD PTR [esi+0x73171127]
  424b50:	jecxz  0x424b1e
  424b52:	mov    al,ds:0x940cc256
  424b57:	dec    edx
  424b58:	jbe    0x424bd7
  424b5a:	mov    al,ds:0xa2ffd773
  424b5f:	ins    BYTE PTR es:[edi],dx
  424b60:	add    al,0x65
  424b62:	add    esp,DWORD PTR [ecx-0x1a8f6fc2]
  424b68:	jmp    0x5c21:0xe7b60ec7
  424b6f:	mov    cl,0x63
  424b71:	pop    edi
  424b72:	test   al,0x85
  424b74:	test   al,0xd7
  424b76:	inc    bx
  424b78:	mov    bx,0xe693
  424b7c:	je     0x424b29
  424b7e:	push   ecx
  424b7f:	int3   
  424b80:	push   ebp
  424b81:	sbb    DWORD PTR [ecx],ebx
  424b83:	add    BYTE PTR [ebp+0x6f57b6],dl
  424b89:	jmp    0xb1ca0898
  424b8e:	repnz adc BYTE PTR [ebp-0xe3b73cd],cl
  424b95:	and    DWORD PTR [edi],esi
  424b97:	fstp   TBYTE PTR [edi+0x60b05a32]
  424b9d:	cmp    esi,DWORD PTR [bx]
  424ba0:	mov    esi,0x41c0e132
  424ba5:	jg     0x424c21
  424ba7:	fdivrp st(5),st
  424ba9:	xchg   esp,eax
  424baa:	sbb    edx,DWORD PTR [edi-0x7e]
  424bad:	push   eax
  424bae:	jl     0x424b98
  424bb0:	ret    0xacc3
  424bb3:	jmp    0x276cdf87
  424bb8:	cwde   
  424bb9:	jle    0x424c24
  424bbb:	sbb    edx,DWORD PTR [edx-0x33bc214d]
  424bc1:	pop    ebp
  424bc2:	xchg   ecx,eax
  424bc3:	and    eax,DWORD PTR [ebp-0x72f6c0fa]
  424bc9:	dec    edx
  424bca:	or     DWORD PTR [ecx-0x45],edx
  424bcd:	aad    0x9e
  424bcf:	adc    DWORD PTR [ecx],0x13ddb65e
  424bd5:	nop
  424bd6:	jle    0x424c1d
  424bd8:	or     esp,esi
  424bda:	test   eax,0xbd03421f
  424bdf:	imul   ebp,ebp,0xfffffffe
  424be2:	out    0x91,eax
  424be4:	fwait
  424be5:	and    al,BYTE PTR [eax]
  424be7:	stos   DWORD PTR es:[edi],eax
  424be8:	jp     0x424c5d
  424bea:	inc    eax
  424beb:	or     esp,DWORD PTR [eax+esi*2+0x43]
  424bef:	or     edi,DWORD PTR [ebx]
  424bf1:	sub    DWORD PTR [eax],ebx
  424bf3:	mov    ch,BYTE PTR [eax]
  424bf5:	test   DWORD PTR [ebx-0xb487472],edi
  424bfb:	mov    ebx,0xcb51569c
  424c00:	sbb    BYTE PTR [ebx-0x49],al
  424c03:	inc    esi
  424c04:	retf   0x9e7e
  424c07:	sbb    BYTE PTR [edi-0x32091093],ah
  424c0d:	enter  0x9ecf,0x45
  424c11:	hlt    
  424c12:	out    dx,eax
  424c13:	mov    dl,BYTE PTR [ebp+0x1aadc436]
  424c19:	and    al,0xd6
  424c1b:	add    ebp,DWORD PTR [eax-0x24]
  424c1e:	dec    eax
  424c1f:	xchg   ebx,eax
  424c20:	mov    esi,0xe81c5f1f
  424c25:	out    0x26,al
  424c27:	push   esp
  424c28:	lock pop esi
  424c2a:	mov    ah,0xb6
  424c2c:	jle    0x424c84
  424c2e:	pop    es
  424c2f:	mov    bl,0x81
  424c31:	cli    
  424c32:	mov    dl,BYTE PTR [ecx+0x16]
  424c35:	dec    ecx
  424c36:	sbb    ebx,esp
  424c38:	loope  0x424c20
  424c3a:	lods   al,BYTE PTR fs:[esi]
  424c3c:	mov    ss,edx
  424c3e:	inc    esp
  424c3f:	xor    al,al
  424c41:	adc    BYTE PTR [esi+0x41071b31],ch
  424c47:	xchg   ebx,eax
  424c48:	mov    edi,0xfa6f2edb
  424c4d:	cdq    
  424c4e:	pop    esp
  424c4f:	mov    BYTE PTR cs:[edx],dh
  424c52:	leave  
  424c53:	pop    es
  424c54:	jno    0x424c41
  424c56:	cmc    
  424c57:	pop    ebx
  424c58:	push   es
  424c59:	ins    DWORD PTR es:[edi],dx
  424c5a:	push   esp
  424c5b:	outs   dx,BYTE PTR ds:[esi]
  424c5c:	jle    0x424c19
  424c5e:	or     eax,DWORD PTR [edi-0x4653d31a]
  424c64:	xor    BYTE PTR [edi-0x36e99239],0xca
  424c6b:	or     DWORD PTR [edx+0x3f076235],ecx
  424c71:	mov    ds:0x34c899e3,al
  424c76:	fldcw  WORD PTR [ecx+0x34770844]
  424c7c:	lahf   
  424c7d:	jbe    0x424c1c
  424c7f:	jbe    0x424ce1
  424c81:	jg     0x424c69
  424c83:	cmp    DWORD PTR [esi],esp
  424c85:	mov    cl,0xa3
  424c87:	mov    eax,esp
  424c89:	or     DWORD PTR [edi+0x5f5e3998],edx
  424c8f:	stos   BYTE PTR es:[edi],al
  424c90:	xchg   DWORD PTR [edx+0x31570b8c],esp
  424c96:	aad    0x3f
  424c98:	sub    al,BYTE PTR [ecx]
  424c9a:	out    dx,al
  424c9b:	mov    dl,0x55
  424c9d:	cmp    edi,DWORD PTR [edi-0x74]
  424ca0:	out    dx,al
  424ca1:	and    DWORD PTR [ebp-0x5f],esp
  424ca4:	pop    ecx
  424ca5:	jne    0x424c97
  424ca7:	fidivr DWORD PTR [esp+ebx*2+0x1d]
  424cab:	call   0x89034f03
  424cb0:	setg   bh
  424cb3:	mov    WORD PTR [edi],ss
  424cb5:	add    eax,0xa4fe806e
  424cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cbb:	pop    esp
  424cbc:	pop    eax
  424cbd:	mov    dl,0xff
  424cbf:	das    
  424cc0:	cli    
  424cc1:	sar    DWORD PTR [edi-0x37],0x8c
  424cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cc6:	fnstenv [edi-0x195ea910]
  424ccc:	int3   
  424ccd:	and    DWORD PTR [ecx+eiz*8],edx
  424cd0:	and    al,0x34
  424cd2:	sbb    bh,dl
  424cd4:	push   esi
  424cd5:	mov    ch,0x78
  424cd7:	lea    edi,[eax-0x42]
  424cda:	dec    ebx
  424cdb:	out    dx,eax
  424cdc:	sub    edi,esp
  424cde:	mov    ecx,0x2a5898bb
  424ce3:	pop    edx
  424ce4:	in     eax,dx
  424ce5:	mov    dh,0xd1
  424ce7:	icebp  
  424ce8:	popf   
  424ce9:	sbb    ebx,eax
  424ceb:	mov    WORD PTR [eax+edx*1+0x49],?
  424cef:	das    
  424cf0:	inc    ebx
  424cf1:	call   0x32014b5
  424cf6:	add    al,0x83
  424cf8:	jno    0x424cc9
  424cfa:	mov    DWORD PTR [ebx+0x5a],ebp
  424cfd:	push   0xd26a0d81
  424d02:	jae    0x424cf7
  424d04:	sbb    eax,0x78991245
  424d09:	add    al,0xe7
  424d0b:	sub    bh,BYTE PTR [esi+eiz*4]
  424d0e:	dec    ebp
  424d0f:	mov    eax,ds:0xc5e2906c
  424d14:	ins    DWORD PTR es:[edi],dx
  424d15:	ja     0x424cd0
  424d17:	push   edx
  424d18:	sbb    DWORD PTR [esp+ebx*8],ecx
  424d1b:	dec    esp
  424d1c:	shl    DWORD PTR [ecx],1
  424d1e:	test   BYTE PTR [ecx+0x17],ch
  424d21:	mov    bh,bh
  424d23:	fwait
  424d24:	aas    
  424d25:	cmp    eax,0x3123fc7
  424d2a:	aam    0x60
  424d2c:	jmp    0xd325:0xd429ffb2
  424d33:	in     eax,0x39
  424d35:	push   eax
  424d36:	sti    
  424d37:	lods   al,BYTE PTR ds:[esi]
  424d38:	jecxz  0x424d5d
  424d3a:	ret    
  424d3b:	xchg   ebx,eax
  424d3c:	rcl    DWORD PTR [edi+0x14],0x39
  424d40:	mov    al,ds:0xe7bc0492
  424d45:	push   ecx
  424d46:	xchg   esi,eax
  424d47:	adc    ch,0x2
  424d4a:	shl    BYTE PTR [esi],0x79
  424d4d:	dec    ebx
  424d4e:	inc    ebx
  424d4f:	ja     0x424d48
  424d51:	inc    edi
  424d52:	pop    edx
  424d53:	jo     0x424d7e
  424d55:	(bad)  
  424d57:	mov    al,ds:0xddb4906a
  424d5c:	jb     0x424da0
  424d5e:	cs aam 0xe6
  424d61:	mov    eax,0x68bff86f
  424d66:	jno    0x424d31
  424d68:	add    BYTE PTR [eax],al
  424d6a:	(bad)  
  424d6c:	jb     0x424dbe
  424d6e:	mov    WORD PTR [edi-0x1d],?
  424d71:	sub    DWORD PTR [edx-0x2a072446],esp
  424d77:	mov    ebx,0xa1883f81
  424d7c:	jne    0x424d12
  424d7e:	mov    eax,cs
  424d80:	(bad)  
  424d81:	fmulp  st(1),st
  424d83:	cmp    DWORD PTR [ecx-0x41],ebp
  424d86:	in     al,0x80
  424d88:	sbb    al,0x6d
  424d8a:	mov    dl,0xd1
  424d8c:	call   0xbf3e:0xbfeb75e0
  424d93:	add    esp,esi
  424d95:	push   cs
  424d96:	pop    ds
  424d97:	push   edx
  424d98:	pusha  
  424d99:	push   cs
  424d9a:	cmp    DWORD PTR [esi+ecx*8-0x57],ebx
  424d9e:	mov    cl,0x24
  424da0:	lods   al,BYTE PTR ds:[esi]
  424da1:	lods   al,BYTE PTR ds:[esi]
  424da2:	rcr    DWORD PTR [edi-0x5b],1
  424da5:	test   eax,0xb62b48f0
  424daa:	mov    cl,0xf0
  424dac:	inc    esp
  424dad:	mov    edx,0xcf566126
  424db2:	loop   0x424db9
  424db4:	push   0x2aead09d
  424db9:	call   0x38d55a8a
  424dbe:	ret    0x1b81
  424dc1:	mov    ebp,0x885e1eb
  424dc6:	sub    BYTE PTR [eax+eiz*4+0x64],bh
  424dca:	mov    esi,0xb7de5343
  424dcf:	push   esp
  424dd0:	sbb    eax,0x7275f153
  424dd5:	inc    esi
  424dd6:	jae    0x424e12
  424dd8:	push   0xb4ec7a9c
  424ddd:	std    
  424dde:	ror    DWORD PTR [edi],cl
  424de0:	sub    eax,edx
  424de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424de3:	jmp    0xe5e:0xf5930e7a
  424dea:	ret    
  424deb:	rcl    BYTE PTR [edx+eiz*2],0x79
  424def:	xchg   edx,eax
  424df0:	sbb    eax,0xad39b8e2
  424df5:	bound  ecx,QWORD PTR [eax-0x5ba3512f]
  424dfb:	jecxz  0x424e3b
  424dfd:	das    
  424dfe:	jno    0x424df3
  424e00:	popa   
  424e01:	xlat   BYTE PTR ds:[ebx]
  424e02:	(bad)  
  424e03:	jge    0x424e7b
  424e05:	adc    DWORD PTR [edx-0x2a],eax
  424e08:	icebp  
  424e09:	push   es
  424e0a:	jle    0x424e0c
  424e0c:	es jnp 0x424dbf
  424e0f:	push   edi
  424e10:	inc    ebx
  424e11:	loopne 0x424de7
  424e13:	pushf  
  424e14:	jl     0x424e85
  424e16:	inc    ebx
  424e17:	imul   esp,DWORD PTR [esi+0x6496a9de],0x41
  424e1e:	ror    BYTE PTR [ebx],cl
  424e20:	(bad)  
  424e21:	(bad)  
  424e22:	mov    ah,0xe2
  424e24:	inc    ecx
  424e25:	cs stc 
  424e27:	daa    
  424e28:	cwde   
  424e29:	dec    bl
  424e2b:	fcmovnu st,st(7)
  424e2d:	out    0x75,al
  424e2f:	sub    BYTE PTR [edx-0x71b11d7d],0x1
  424e36:	outs   dx,BYTE PTR ds:[esi]
  424e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e38:	adc    eax,0xbddccc46
  424e3d:	add    BYTE PTR [eax],al
  424e3f:	add    BYTE PTR [eax],al
  424e41:	add    BYTE PTR [eax-0x30f8b0bc],al
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ebp,esi
  424e4f:	sar    ch,0x13
  424e52:	cld    
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [ebp+0x4],cl
  424e5c:	loopne 0x424e5f
  424e5e:	mov    esi,0x56b766c3
  424e63:	loopne 0x424e68
  424e65:	inc    esp
  424e66:	fdivr  QWORD PTR [ebx]
  424e68:	jmp    0x4190:0xb41d901c
  424e6f:	push   edi
  424e70:	cs ss xchg ebp,eax
  424e73:	xchg   esp,eax
  424e74:	pop    esp
  424e75:	pop    edx
  424e76:	xor    eax,edx
  424e78:	push   edi
  424e79:	imul   ebx,eax,0xc7120019
  424e7f:	xchg   edi,eax
  424e80:	dec    edx
  424e81:	(bad)
  424e85:	pop    ds
  424e86:	pop    ebp
  424e87:	inc    edx
  424e88:	pop    DWORD PTR [esp+ecx*8+0x45]
  424e8c:	mov    dh,0x52
  424e8e:	dec    ebp
  424e8f:	inc    esp
  424e90:	mov    ds:0x894b812d,eax
  424e95:	arpl   WORD PTR [edx],ax
  424e97:	stos   DWORD PTR es:[edi],eax
  424e98:	jnp    0x424ea6
  424e9a:	test   DWORD PTR [edi-0x3e],edi
  424e9d:	dec    ebx
  424e9e:	out    0x8,eax
  424ea0:	mov    ds:0xfae6ef6,al
  424ea5:	mov    ch,0x49
  424ea7:	xchg   DWORD PTR [ecx+0x50c07ac3],ecx
  424ead:	arpl   WORD PTR [esi],ax
  424eaf:	addr16 inc edi
  424eb1:	popa   
  424eb2:	call   0x3187:0x93e31b3b
  424eb9:	test   al,0xef
  424ebb:	sbb    edi,DWORD PTR [ecx+0x2db189f2]
  424ec1:	add    esi,eax
  424ec3:	in     eax,dx
  424ec4:	lods   al,BYTE PTR ds:[esi]
  424ec5:	pop    ds
  424ec6:	xchg   ebx,eax
  424ec7:	sbb    al,0x4d
  424ec9:	retf   0x2f8f
  424ecc:	jg     0x424f3e
  424ece:	jmp    0x424ef0
  424ed0:	ds icebp 
  424ed2:	mov    edi,DWORD PTR [ebx+0x1e]
  424ed5:	lods   al,BYTE PTR ds:[esi]
  424ed6:	das    
  424ed7:	cmp    al,0x2d
  424ed9:	adc    DWORD PTR ds:[edx+edi*1-0x1ba286ba],0xc913a755
  424ee5:	in     eax,dx
  424ee6:	in     eax,0xdd
  424ee8:	mov    ah,0xd5
  424eea:	retf   
  424eeb:	int    0x49
  424eed:	fwait
  424eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eef:	shl    esi,cl
  424ef1:	push   esi
  424ef2:	lds    edx,FWORD PTR [esi-0x72]
  424ef5:	inc    ebp
  424ef6:	pop    edi
  424ef7:	out    dx,eax
  424ef8:	sub    BYTE PTR [edx+0x19abd2c7],bl
  424efe:	mov    edi,0x700ace0c
  424f03:	fsubr  QWORD PTR [edx]
  424f05:	stc    
  424f06:	push   es
  424f07:	icebp  
  424f08:	jmp    DWORD PTR [esi]
  424f0a:	mov    cl,0x9d
  424f0c:	jns    0x424eb1
  424f0e:	mov    ecx,0xb6019a59
  424f14:	(bad)  
  424f15:	imul   edi,DWORD PTR [ecx],0xffffff86
  424f18:	repnz xor DWORD PTR [edi+0x175c00bf],ebx
  424f1f:	rcl    BYTE PTR [ebp-0x73c1dc18],0x87
  424f26:	mov    esp,0x3374f29e
  424f2b:	inc    edx
  424f2c:	das    
  424f2d:	xor    eax,0x40cf7a5a
  424f32:	cmp    dl,BYTE PTR gs:[eax+0x6a1e0a9b]
  424f39:	sub    DWORD PTR [eax-0x6a1abc35],0xd775c5a5
  424f43:	pop    edx
  424f44:	sub    DWORD PTR [eax],edx
  424f46:	cld    
  424f47:	(bad)  
  424f48:	add    DWORD PTR [eax],esp
  424f4a:	je     0x424f38
  424f4c:	pusha  
  424f4d:	loop   0x424fac
  424f4f:	leave  
  424f50:	std    
  424f51:	popf   
  424f52:	lock cs enter 0x1760,0xd7
  424f58:	sbb    DWORD PTR [ebp-0x66],eax
  424f5b:	add    al,0xab
  424f5d:	shl    DWORD PTR [ebx-0x77],0x6e
  424f61:	jmp    0xf8dee20
  424f66:	mov    ds:0x7dbfd5ef,al
  424f6b:	add    DWORD PTR [esi-0x4c],edi
  424f6e:	push   ds
  424f6f:	cmp    eax,0x845d9d95
  424f74:	pop    esi
  424f75:	push   ebx
  424f76:	dec    esp
  424f77:	add    eax,0x9960caad
  424f7c:	push   ecx
  424f7d:	gs mov bh,0x55
  424f80:	and    BYTE PTR [edx+0x47c88b1],bl
  424f86:	xor    al,0x72
  424f88:	test   eax,0x42ef150b
  424f8d:	out    dx,eax
  424f8e:	inc    esp
  424f8f:	das    
  424f90:	out    dx,eax
  424f91:	lds    ebp,FWORD PTR [eax]
  424f93:	outs   dx,DWORD PTR ds:[esi]
  424f94:	clc    
  424f95:	push   DWORD PTR [ebp-0x55]
  424f98:	call   0xe6294045
  424f9d:	idiv   BYTE PTR [ebp+0x66]
  424fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fa1:	out    0x9c,eax
  424fa3:	push   ss
  424fa4:	xchg   edx,eax
  424fa5:	fistp  WORD PTR ds:0x140e5f8a
  424fab:	fwait
  424fac:	addr16 push es
  424fae:	scas   al,BYTE PTR es:[edi]
  424faf:	sti    
  424fb0:	mov    eax,DWORD PTR ds:0x8cb674f2
  424fb6:	fwait
  424fb7:	pop    es
  424fb8:	sbb    ebp,DWORD PTR ds:0x9cff4f66
  424fbe:	clc    
  424fbf:	rcr    BYTE PTR [edi-0x5c],0x36
  424fc3:	add    eax,DWORD PTR [edi-0x5b]
  424fc6:	int    0x3f
  424fc8:	push   ds
  424fc9:	add    ch,ch
  424fcb:	mov    ah,0x0
  424fcd:	frstor [ecx+0x3e]
  424fd0:	inc    edi
  424fd1:	jno    0x424f9a
  424fd3:	xchg   esi,eax
  424fd4:	xor    esi,DWORD PTR [ebp-0x1f]
  424fd7:	fst    QWORD PTR [ecx-0x58854fdf]
  424fdd:	push   eax
  424fde:	push   ebp
  424fdf:	xor    BYTE PTR [esi-0x3e20224d],0x3d
  424fe6:	lods   eax,DWORD PTR ds:[esi]
  424fe7:	lods   eax,DWORD PTR ds:[esi]
  424fe8:	jb     0x425019
  424fea:	(bad)  
  424feb:	cli    
  424fec:	adc    al,0x26
  424fee:	xor    eax,0x40898352
  424ff3:	mov    ds:0x9ede863a,eax
  424ff8:	daa    
  424ff9:	mov    edx,0x9030339f
  424ffe:	mov    ch,BYTE PTR [esi+0x7408ae73]
  425004:	jg     0x425085
  425006:	into   
  425007:	and    esp,eax
  425009:	sbb    al,0x9b
  42500b:	dec    ecx
  42500c:	inc    edi
  42500d:	imul   ecx,DWORD PTR [ecx+0x57ca844d],0xffffffe7
  425014:	dec    ebp
  425015:	sub    BYTE PTR [ecx-0x76],cl
  425018:	mov    al,ds:0xfba0268a
  42501d:	xchg   ebp,eax
  42501e:	shl    eax,1
  425020:	jbe    0x425008
  425022:	inc    ecx
  425023:	test   al,0xf3
  425025:	in     eax,dx
  425026:	jne    0x424fe7
  425028:	sbb    eax,0x50becc9c
  42502d:	clc    
  42502e:	arpl   WORD PTR [esi+eiz*8-0xc],cx
  425032:	push   ebp
  425033:	mov    ecx,0x62b33221
  425038:	ins    BYTE PTR es:[edi],dx
  425039:	out    0xec,eax
  42503b:	inc    esp
  42503c:	cmc    
  42503d:	aaa    
  42503e:	cmp    DWORD PTR [esi+ecx*8+0x370ac07b],esi
  425045:	mov    al,0xb5
  425047:	das    
  425048:	mov    al,ds:0x942f606d
  42504d:	aas    
  42504e:	outs   dx,DWORD PTR ds:[esi]
  42504f:	push   es
  425050:	adc    dh,BYTE PTR [ecx+0x65]
  425053:	fucomp st(6)
  425055:	dec    eax
  425056:	mov    ch,0x1a
  425058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425059:	std    
  42505a:	xchg   edx,eax
  42505b:	cmp    eax,0x4b7aca59
  425060:	lds    esi,FWORD PTR [ecx+0x78]
  425063:	mov    ebx,0x16de31f
  425068:	cmp    BYTE PTR [ebx],ch
  42506a:	adc    al,0x1f
  42506c:	sar    DWORD PTR [ebx],cl
  42506e:	or     al,0x2b
  425070:	sub    DWORD PTR [edi],edx
  425072:	repz lahf 
  425074:	jmp    0xcc7a:0xdef54bcc
  42507b:	mov    ebx,0x39bb6a8c
  425080:	xlat   BYTE PTR ds:[ebx]
  425081:	sub    ecx,ecx
  425083:	push   ss
  425084:	xor    DWORD PTR [eax],0xffffff85
  425087:	arpl   di,di
  425089:	xchg   ecx,eax
  42508a:	jmp    0x33d:0xac7cceb1
  425091:	xor    eax,0x1d2d848a
  425096:	out    0xe9,eax
  425098:	loopne 0x425039
  42509a:	add    al,0xa6
  42509c:	mov    bh,0xcb
  42509e:	push   eax
  42509f:	inc    ebp
  4250a0:	nop
  4250a1:	aaa    
  4250a2:	cmp    eax,0xc011fbe
  4250a7:	aaa    
  4250a8:	push   cs
  4250a9:	dec    ebx
  4250aa:	sub    edx,DWORD PTR [edi]
  4250ac:	adc    eax,0x8553c579
  4250b1:	or     al,BYTE PTR [esi-0x6ffda117]
  4250b7:	adc    eax,0x58668200
  4250bc:	daa    
  4250bd:	jnp    0x425125
  4250bf:	arpl   WORD PTR [esi+0x1ddd376c],si
  4250c5:	fcom   QWORD PTR [esi+0x24]
  4250c8:	adc    BYTE PTR [ecx+eiz*8+0x455d58e5],bl
  4250cf:	repz mov edx,0x4d026069
  4250d5:	js     0x425141
  4250d7:	fcompp 
  4250d9:	popa   
  4250da:	jb     0x4250f4
  4250dc:	adc    eax,0xda1e33c1
  4250e1:	mov    ebx,?
  4250e3:	pushf  
  4250e4:	or     edi,DWORD PTR [ebp+0x4944e427]
  4250ea:	in     al,dx
  4250eb:	jle    0x425110
  4250ed:	sbb    edi,DWORD PTR [ebx+0x7b84e928]
  4250f3:	fistp  WORD PTR [esi+0x7e]
  4250f6:	sbb    dl,BYTE PTR [esi-0x4f025c72]
  4250fc:	add    DWORD PTR [edi+0x1a],0xdc272142
  425103:	pop    ss
  425104:	test   BYTE PTR [eax-0x8134051],dl
  42510a:	in     al,dx
  42510b:	adc    eax,0xc4913e94
  425110:	(bad)  
  425111:	pop    ss
  425112:	call   0xf45ab05e
  425117:	int    0x4f
  425119:	ret    
  42511a:	dec    ebx
  42511b:	push   0xffffffcc
  42511d:	(bad)  
  42511e:	mov    bh,0x44
  425120:	stos   DWORD PTR es:[edi],eax
  425121:	imul   eax,ebx,0xffffffb5
  425124:	call   0x67f7:0x2590fd19
  42512b:	clc    
  42512c:	xchg   edi,eax
  42512d:	mov    cl,0x49
  42512f:	dec    edx
  425130:	sub    al,0xe5
  425132:	les    ecx,FWORD PTR [edi-0x59fde66e]
  425138:	xchg   ebx,eax
  425139:	sahf   
  42513a:	rol    edi,cl
  42513c:	push   cs
  42513d:	outs   dx,BYTE PTR ds:[esi]
  42513e:	push   esp
  42513f:	addr16 xor eax,ebp
  425142:	fadd   QWORD PTR [esp+ecx*2+0x79dc2be0]
  425149:	repz mov ah,0xab
  42514c:	jno    0x42513b
  42514e:	pop    esi
  42514f:	dec    ecx
  425150:	cmp    DWORD PTR [eax+esi*1+0x4c],0xfffffff0
  425155:	stc    
  425156:	xchg   esi,eax
  425157:	pop    eax
  425158:	popa   
  425159:	cmovne ebp,esi
  42515c:	mov    ebp,DWORD PTR [ecx+edx*8]
  42515f:	pop    ecx
  425160:	xor    eax,0xca8f66c4
  425165:	mov    eax,DWORD PTR [ecx-0x1e]
  425168:	dec    edi
  425169:	arpl   sp,di
  42516b:	cmp    BYTE PTR [edx-0x53170c24],ch
  425171:	xor    eax,0x64280c70
  425176:	mov    edx,0x2fcde288
  42517b:	pop    ecx
  42517c:	xor    BYTE PTR [ebx],bh
  42517e:	sub    eax,eax
  425180:	pop    ebx
  425181:	mov    BYTE PTR [eax],ch
  425183:	adc    DWORD PTR [ebx+0x4],ecx
  425186:	mov    esi,DWORD PTR [eax]
  425188:	inc    ebx
  425189:	fist   WORD PTR [edi-0x3310a299]
  42518f:	addr16 cmp al,0xb0
  425192:	pop    ecx
  425193:	adc    BYTE PTR [si],bh
  425196:	jb     0x4251d1
  425198:	arpl   WORD PTR [ebx],dx
  42519a:	cmp    ah,cl
  42519c:	inc    eax
  42519d:	pusha  
  42519e:	(bad)  
  42519f:	mov    edi,0x9506c88c
  4251a4:	push   esp
  4251a5:	cmp    ebp,esi
  4251a7:	mov    DWORD PTR [eax+ecx*4-0x78],edx
  4251ab:	mov    ss,WORD PTR [ecx-0x24]
  4251ae:	push   esi
  4251af:	xchg   esp,eax
  4251b0:	xchg   edx,eax
  4251b1:	and    dl,0xa6
  4251b4:	mov    edx,0xd7ae7d01
  4251b9:	pop    ecx
  4251ba:	pop    esi
  4251bb:	inc    edi
  4251bc:	fiadd  WORD PTR [esi]
  4251be:	sub    eax,0x8e7b3f67
  4251c3:	cmp    al,0x98
  4251c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251c6:	and    DWORD PTR [esi],ecx
  4251c8:	cli    
  4251c9:	or     esp,DWORD PTR [ecx+0x71]
  4251cc:	lock sbb eax,0xbe5d881a
  4251d2:	mov    ebx,DWORD PTR [edx+0x1f]
  4251d5:	dec    ebp
  4251d6:	sar    BYTE PTR [edx+0x34],0xac
  4251da:	out    0x4c,eax
  4251dc:	mov    eax,ds:0x3f063699
  4251e1:	and    esp,ecx
  4251e3:	shr    DWORD PTR [esi-0x44],1
  4251e6:	fcomp  DWORD PTR [ebx]
  4251e8:	mov    esi,0xf2109063
  4251ed:	mov    DWORD PTR [edi],edx
  4251ef:	imul   ebx,DWORD PTR [esi],0xfffffff6
  4251f2:	sbb    cl,BYTE PTR [eax+ecx*4-0x17]
  4251f6:	jecxz  0x425221
  4251f8:	or     BYTE PTR [ebx],al
  4251fa:	pop    ds
  4251fb:	ja     0x42527b
  4251fd:	push   ss
  4251fe:	inc    ebx
  4251ff:	retf   
  425200:	clc    
  425201:	daa    
  425202:	lods   al,BYTE PTR ds:[esi]
  425203:	enter  0xc40a,0xb9
  425207:	pusha  
  425208:	popa   
  425209:	jge    0x4251e7
  42520b:	xchg   ebp,eax
  42520c:	pop    edi
  42520d:	ret    0xc87c
  425210:	out    0xe4,eax
  425212:	std    
  425213:	shl    BYTE PTR [edi+0x15],cl
  425216:	jne    0x42528b
  425218:	call   0x1b381ace
  42521d:	cmp    eax,0x993eff72
  425222:	shl    cl,1
  425224:	cmp    al,0x46
  425226:	push   ss
  425227:	ins    DWORD PTR es:[edi],dx
  425228:	mov    DWORD PTR [ecx-0x75],edx
  42522b:	or     cl,BYTE PTR [ecx+0x5f]
  42522e:	mov    al,bl
  425230:	xchg   ebp,eax
  425231:	aam    0xbb
  425233:	mov    edx,0x3bcccceb
  425238:	push   cs
  425239:	xchg   ebx,eax
  42523a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42523b:	fadd   QWORD PTR [esi]
  42523d:	inc    edi
  42523e:	and    dl,BYTE PTR [edi]
  425240:	dec    ebx
  425241:	rol    BYTE PTR [edx+0x28ddba05],0xcd
  425248:	mov    dl,0x82
  42524a:	nop
  42524b:	clc    
  42524c:	leave  
  42524d:	fnstcw WORD PTR [edi]
  42524f:	(bad)  
  425250:	push   edx
  425251:	enter  0xc470,0x39
  425255:	dec    eax
  425256:	push   edi
  425257:	mov    ecx,0x14691e32
  42525c:	loope  0x42529d
  42525e:	cmp    bl,BYTE PTR [ebp+eiz*1-0x2738333f]
  425265:	mov    ds:0xb74e8d93,al
  42526a:	mov    edx,0xf201c69f
  42526f:	xchg   WORD PTR [esi],dx
  425272:	jnp    0x42523f
  425274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425275:	push   ecx
  425276:	xor    al,0x20
  425278:	mov    cl,0xaf
  42527a:	sub    eax,0x97ef9ad
  42527f:	enter  0x41d2,0x59
  425283:	not    DWORD PTR [edi]
  425285:	jp     0x425291
  425287:	lock inc edi
  425289:	add    DWORD PTR [edi+0x39],esp
  42528c:	and    BYTE PTR [edx],ch
  42528e:	shl    BYTE PTR [ecx-0xd3c4f69],cl
  425294:	fidivr WORD PTR [eax-0x5c5893c8]
  42529a:	cmp    dl,BYTE PTR [edx]
  42529c:	lods   al,BYTE PTR fs:[esi]
  42529e:	div    DWORD PTR [eax-0x37]
  4252a1:	mov    esi,0x6c34cd80
  4252a6:	aam    0xdc
  4252a8:	test   eax,0x6ac81f0f
  4252ad:	aaa    
  4252ae:	xchg   DWORD PTR [esi+edi*8-0x5c7b3ed1],eax
  4252b5:	and    ebp,DWORD PTR [edi+eiz*8]
  4252b8:	lods   al,BYTE PTR ds:[esi]
  4252b9:	mov    edx,0xa4ce03d
  4252be:	pop    esp
  4252bf:	xchg   edi,eax
  4252c0:	stos   DWORD PTR es:[edi],eax
  4252c1:	stc    
  4252c2:	js     0x42528b
  4252c4:	adc    ebx,DWORD PTR [edx]
  4252c6:	mov    ebx,0xd3789f38
  4252cb:	dec    edi
  4252cc:	addr16 pop edx
  4252ce:	mov    edx,0x5ca46174
  4252d3:	xlat   BYTE PTR ds:[ebx]
  4252d4:	test   al,0x53
  4252d6:	jb     0x4252dc
  4252d8:	pop    ecx
  4252d9:	xchg   edi,eax
  4252da:	js     0x4252df
  4252dc:	mov    eax,0x9b7888db
  4252e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252e2:	push   es
  4252e3:	enter  0xfce0,0x1a
  4252e7:	push   es
  4252e8:	sbb    BYTE PTR [edi+edx*8],bl
  4252eb:	es ins DWORD PTR es:[edi],dx
  4252ed:	retf   
  4252ee:	or     al,BYTE PTR [edi+0x583081ee]
  4252f4:	jne    0x4252d8
  4252f6:	out    dx,eax
  4252f7:	shl    DWORD PTR [edi+0x40],1
  4252fa:	loopne 0x425297
  4252fc:	scas   al,BYTE PTR es:[edi]
  4252fd:	add    dl,0x57
  425300:	ret    0x4959
  425303:	sbb    cl,bl
  425305:	sbb    BYTE PTR [ecx],dl
  425307:	test   bh,al
  425309:	dec    ebp
  42530a:	int    0xd3
  42530c:	xchg   edx,eax
  42530d:	cmp    eax,ebx
  42530f:	and    DWORD PTR [edx],eax
  425311:	mov    ebp,DWORD PTR [ebx]
  425313:	sbb    ebx,DWORD PTR [edx-0x178ca601]
  425319:	stc    
  42531a:	push   0xfd33690
  42531f:	test   BYTE PTR [esi-0x299d1b44],0x19
  425326:	jecxz  0x4252e4
  425328:	in     al,0x84
  42532a:	jge    0x42538f
  42532c:	call   0x50f52774
  425331:	or     eax,0xac848eb5
  425336:	ins    BYTE PTR es:[edi],dx
  425337:	fcom   DWORD PTR [eax+0x1b]
  42533a:	inc    edi
  42533b:	(bad)
  42533f:	push   eax
  425340:	sahf   
  425341:	ds adc dh,bh
  425344:	mov    al,0x3a
  425346:	jg     0x4253ad
  425348:	or     DWORD PTR [eax-0x4],esp
  42534b:	sbb    edx,esp
  42534d:	add    BYTE PTR [eax],al
  42534f:	add    BYTE PTR [eax],al
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	sub    dh,0x73
  425361:	sbb    edi,ebp
  425363:	retf   
  425364:	add    DWORD PTR [eax],eax
  425366:	repz add al,0x0
  425369:	add    bl,al
  42536b:	das    
  42536c:	pop    esi
  42536d:	mov    edx,0x8e1436ad
  425372:	sbb    al,0x97
  425374:	leave  
  425375:	ficomp WORD PTR [ebx+ebp*1]
  425378:	push   ebx
  425379:	cmc    
  42537a:	pop    ebx
  42537b:	add    edi,DWORD PTR [ecx-0xa]
  42537e:	mov    ebx,0xfd9d3061
  425383:	lods   eax,DWORD PTR ds:[esi]
  425384:	mov    ebx,0xf0f0fa3f
  425389:	xor    BYTE PTR [esp+edi*1],cl
  42538c:	scas   al,BYTE PTR es:[edi]
  42538d:	xchg   esi,eax
  42538e:	push   edi
  42538f:	test   al,0xa3
  425391:	push   eax
  425392:	push   edi
  425393:	test   eax,0x31bfc900
  425398:	stos   DWORD PTR es:[edi],eax
  425399:	lds    ecx,FWORD PTR [ebp-0x60657c91]
  42539f:	mov    ch,0xfc
  4253a1:	jns    0x425369
  4253a3:	or     ah,bl
  4253a5:	sbb    DWORD PTR [esi-0x1a],edx
  4253a8:	add    eax,esi
  4253aa:	jnp    0x425359
  4253ac:	ficomp WORD PTR [ecx+0x50209a86]
  4253b2:	shl    DWORD PTR [eax+0x5e],cl
  4253b5:	aas    
  4253b6:	fwait
  4253b7:	in     al,0xa3
  4253b9:	call   0x7f9d:0x49ab93e4
  4253c0:	popf   
  4253c1:	jo     0x42541e
  4253c3:	sub    ebx,esi
  4253c5:	or     dh,BYTE PTR [ebx]
  4253c7:	xchg   DWORD PTR [edx],ebx
  4253c9:	cmp    DWORD PTR [edi],0x12cf9df8
  4253cf:	mov    BYTE PTR [ebx+ebp*2],dl
  4253d2:	aas    
  4253d3:	arpl   WORD PTR [ebp-0x4c],cx
  4253d6:	push   ds
  4253d7:	fist   WORD PTR ds:0xa92204c4
  4253dd:	xchg   ebx,eax
  4253de:	ror    dh,cl
  4253e0:	jne    0x425397
  4253e2:	xchg   ebp,eax
  4253e3:	cwde   
  4253e4:	imul   DWORD PTR [edx+0x5294aee4]
  4253ea:	sbb    edx,edi
  4253ec:	adc    eax,DWORD PTR [ebx]
  4253ee:	nop
  4253ef:	push   edi
  4253f0:	xchg   DWORD PTR [eax-0x634b278c],edi
  4253f6:	push   ebp
  4253f7:	sub    eax,0xc7a653d9
  4253fc:	sub    DWORD PTR [eax+edi*4+0x1d6d8e4b],ebp
  425403:	pop    esi
  425404:	add    cl,bl
  425406:	lea    edx,[edx+esi*1-0xe]
  42540a:	inc    esi
  42540b:	arpl   WORD PTR [ebp+0x54],cx
  42540e:	mov    ebx,0xa0e6d0e2
  425413:	sahf   
  425414:	or     DWORD PTR [ebx],esi
  425416:	add    DWORD PTR [ebx],eax
  425418:	cmp    DWORD PTR [eax-0x309ac184],edi
  42541e:	gs aam 0x38
  425421:	and    al,0x83
  425423:	test   al,0x3a
  425425:	ret    0x55f4
  425428:	add    eax,0x3a9fa69
  42542d:	je     0x4253b6
  42542f:	pusha  
  425430:	sahf   
  425431:	jg     0x42544b
  425433:	scas   eax,DWORD PTR es:[edi]
  425434:	adc    eax,0xc54839b
  425439:	(bad)  
  42543a:	mov    ch,0x84
  42543c:	mov    eax,ds:0xaabde088
  425441:	mov    dh,ch
  425443:	pusha  
  425444:	xor    BYTE PTR [ebx+0x1492127c],0xe0
  42544b:	xor    ch,BYTE PTR [edx+0x57]
  42544e:	inc    ebp
  42544f:	inc    edi
  425450:	or     al,0x18
  425452:	data16 sbb dl,BYTE PTR [eax+0x63]
  425456:	push   ecx
  425457:	pushf  
  425458:	push   esp
  425459:	sbb    al,0x89
  42545b:	test   dh,0xd5
  42545e:	or     ebx,esp
  425460:	shl    bh,0xe7
  425463:	stos   DWORD PTR es:[edi],eax
  425464:	and    ch,BYTE PTR [ecx]
  425466:	mov    DWORD PTR [esi],edx
  425468:	xlat   BYTE PTR ds:[ebx]
  425469:	popf   
  42546a:	dec    ecx
  42546b:	mov    ch,0xcc
  42546d:	jnp    0x4254b4
  42546f:	fwait
  425470:	mov    ch,0xb4
  425472:	in     eax,dx
  425473:	shl    BYTE PTR [ebp+edx*2+0xe],0x20
  425478:	fld    DWORD PTR [ebp+ebp*4+0x20d9abc]
  42547f:	shl    BYTE PTR [esi],cl
  425481:	push   ebx
  425482:	mov    esp,0x1f0ae16b
  425487:	adc    eax,0xb186034
  42548c:	mov    eax,0x955ad7e2
  425491:	nop
  425492:	dec    esp
  425493:	in     eax,dx
  425494:	sbb    DWORD PTR [edi],ebx
  425496:	xor    al,0x29
  425498:	retf   
  425499:	lock loopne 0x42547d
  42549c:	adc    al,0xb0
  42549e:	jne    0x4254e6
  4254a0:	xchg   DWORD PTR [esi],edi
  4254a2:	icebp  
  4254a3:	mov    BYTE PTR [esi],dl
  4254a5:	ret    0x29de
  4254a8:	scas   al,BYTE PTR es:[edi]
  4254a9:	cld    
  4254aa:	adc    DWORD PTR [edx],0xffffffa9
  4254ad:	dec    BYTE PTR [edi+edi*1-0x5e]
  4254b1:	cmp    ebp,esi
  4254b3:	out    dx,al
  4254b4:	and    al,0x8f
  4254b6:	lock xor DWORD PTR [esi],0x6c
  4254ba:	dec    ecx
  4254bb:	ss jmp 0x42548b
  4254be:	adc    eax,0x8da51a25
  4254c3:	or     al,0x2e
  4254c5:	(bad)  
  4254c6:	iret   
  4254c7:	push   DWORD PTR ds:0x8d49aafb
  4254cd:	imul   edi,DWORD PTR [edi+ebp*2+0xb],0xe1eed88b
  4254d5:	in     al,dx
  4254d6:	fs dec esp
  4254d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d9:	push   cs
  4254da:	lods   eax,DWORD PTR ds:[esi]
  4254db:	pop    esi
  4254dc:	add    BYTE PTR ds:0x89d9699a,dh
  4254e2:	adc    DWORD PTR [ecx],ecx
  4254e4:	nop
  4254e5:	sub    al,0xc1
  4254e7:	fisub  WORD PTR ds:0x720e31db
  4254ed:	pop    eax
  4254ee:	pushf  
  4254ef:	jge    0x425510
  4254f1:	xchg   edi,eax
  4254f2:	sub    edi,DWORD PTR [ecx-0x35a3eaa6]
  4254f8:	pop    ebp
  4254f9:	(bad)  
  4254fa:	mov    eax,ds:0x2eb1a797
  4254ff:	xchg   ecx,eax
  425500:	xchg   edi,eax
  425501:	push   ebx
  425502:	popf   
  425503:	stos   BYTE PTR es:[edi],al
  425504:	adc    ebx,edx
  425506:	outs   dx,DWORD PTR ds:[esi]
  425507:	adc    ecx,edx
  425509:	push   0x52
  42550b:	ss std 
  42550d:	je     0x42550f
  42550f:	pop    ebp
  425510:	je     0x4254be
  425512:	outs   dx,BYTE PTR ds:[esi]
  425513:	adc    al,0x45
  425515:	or     BYTE PTR [esi-0x45],0xe9
  425519:	fcmovu st,st(7)
  42551b:	xor    BYTE PTR [eax+edi*2-0x3c],al
  42551f:	cmp    BYTE PTR [edx+ebp*8],dl
  425522:	call   eax
  425524:	scas   eax,DWORD PTR es:[edi]
  425525:	adc    al,0xec
  425527:	leave  
  425528:	cmp    eax,0xee4702ca
  42552d:	xor    ebx,eax
  42552f:	scas   al,BYTE PTR es:[edi]
  425530:	inc    ebx
  425531:	push   cs
  425532:	jmp    0x781d5ab4
  425537:	mov    al,ds:0xe8239299
  42553c:	and    eax,0x10b275b2
  425541:	test   eax,0x964831a1
  425546:	loop   0x425506
  425548:	retf   0x78e0
  42554b:	les    esi,FWORD PTR [edi]
  42554d:	pop    edi
  42554e:	lea    esp,[edx+0x26]
  425551:	ja     0x425513
  425553:	(bad)  
  425554:	in     al,dx
  425555:	cmc    
  425556:	dec    ebx
  425557:	sar    BYTE PTR ds:0x96fc753,cl
  42555d:	or     BYTE PTR [ecx],dl
  42555f:	pop    es
  425560:	push   esp
  425561:	dec    edi
  425562:	jle    0x42551f
  425564:	jmp    0x77b6:0xc064da19
  42556b:	ror    DWORD PTR [esi+0x66],1
  42556e:	aaa    
  42556f:	stc    
  425570:	loop   0x425549
  425572:	dec    eax
  425573:	and    ecx,DWORD PTR [edx+0x74]
  425576:	repnz mov edx,0xf9337ea6
  42557c:	jae    0x42557a
  42557e:	or     ebp,DWORD PTR [ebx+eax*2]
  425581:	inc    edi
  425582:	(bad)  
  425584:	rcl    DWORD PTR ds:0xbf1b219d,0x5
  42558b:	fcmovnbe st,st(0)
  42558d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42558e:	and    DWORD PTR ds:0x1e5ab0d4,edx
  425594:	shl    DWORD PTR [eax+0x69],cl
  425597:	popf   
  425598:	dec    ebx
  425599:	jmp    0x42560f
  42559b:	push   cs
  42559c:	inc    ecx
  42559d:	jns    0x425582
  42559f:	adc    ah,BYTE PTR [esi]
  4255a1:	clc    
  4255a2:	add    BYTE PTR [ebp+0x52581824],dl
  4255a8:	push   es
  4255a9:	jmp    0x55ed:0x6045a7b4
  4255b0:	or     DWORD PTR [edi+0x2d51dd9],0xb5a3b974
  4255ba:	push   0xffffffbd
  4255bc:	scas   al,BYTE PTR es:[edi]
  4255bd:	std    
  4255be:	sar    BYTE PTR ds:0xab8caf2f,cl
  4255c4:	cmp    ebx,esi
  4255c6:	out    dx,eax
  4255c7:	xor    dh,ah
  4255c9:	repz mov ebx,ecx
  4255cc:	scas   al,BYTE PTR es:[edi]
  4255cd:	cmp    dl,ah
  4255cf:	mov    ah,0x51
  4255d1:	in     eax,dx
  4255d2:	in     al,0x4d
  4255d4:	mov    al,0xfa
  4255d6:	fisttp QWORD PTR [edx+0x3679817c]
  4255dc:	popa   
  4255dd:	test   eax,0x8f97302
  4255e2:	xchg   esi,eax
  4255e3:	sub    bh,ch
  4255e5:	aaa    
  4255e6:	(bad)  
  4255e7:	scas   eax,DWORD PTR es:[edi]
  4255e8:	push   edi
  4255e9:	(bad)  
  4255ea:	sti    
  4255eb:	das    
  4255ec:	xchg   ebx,eax
  4255ed:	test   BYTE PTR [edx],cl
  4255ef:	push   edi
  4255f0:	jmp    DWORD PTR [edi+0x7c]
  4255f3:	xchg   edx,eax
  4255f4:	repnz add eax,0x255f6312
  4255fa:	aam    0xee
  4255fc:	rcr    BYTE PTR [esi],1
  4255fe:	rcl    BYTE PTR [edi-0x22],cl
  425601:	or     al,0x35
  425603:	nop
  425604:	xadd   ebx,esi
  425607:	outs   dx,DWORD PTR ds:[esi]
  425608:	mov    ebx,0x8b1fdbc5
  42560d:	sub    al,0xd0
  42560f:	sub    al,0xb6
  425611:	xor    DWORD PTR [eax],edx
  425613:	push   cs
  425614:	push   edx
  425615:	out    dx,eax
  425616:	add    dl,BYTE PTR [ebx]
  425618:	mov    ds:0x60ab88e3,eax
  42561d:	mov    ebx,0x1f17d247
  425622:	lds    ebp,FWORD PTR [ebx+0x6d]
  425625:	or     bl,BYTE PTR [esi]
  425627:	into   
  425628:	inc    edx
  425629:	xor    ch,dl
  42562b:	mov    dh,0xca
  42562d:	dec    ebx
  42562e:	mov    edx,DWORD PTR [esi]
  425630:	enter  0xba68,0xc0
  425634:	jne    0x42569c
  425636:	jmp    0x4255e4
  425638:	daa    
  425639:	sub    bl,BYTE PTR [esp+ebp*2+0x1d13bd8c]
  425640:	xor    ch,dh
  425642:	sbb    edi,esi
  425644:	lea    eax,[esi+0x6f]
  425647:	push   eax
  425648:	mov    cl,0x88
  42564a:	aam    0xc1
  42564c:	xchg   edx,eax
  42564d:	push   ebx
  42564e:	pusha  
  42564f:	or     dl,dl
  425651:	mov    fs,WORD PTR [ecx+ebp*1]
  425654:	add    BYTE PTR [ebp-0x4584cd4c],cl
  42565a:	rcr    ebx,1
  42565c:	pop    edi
  42565d:	xchg   DWORD PTR [ecx+0x1],eax
  425660:	(bad)  
  425661:	jae    0x42569d
  425663:	imul   esi,DWORD PTR [esi-0xed6169f],0xffffffaa
  42566a:	push   edx
  42566b:	mov    DWORD PTR [edi+0x1a405735],ebx
  425671:	push   0x8e2f7973
  425676:	push   ecx
  425677:	(bad)  
  425678:	das    
  425679:	jmp    0xd4bdf77a
  42567e:	xor    esi,eax
  425680:	inc    esi
  425681:	and    al,0xe7
  425683:	cmp    ah,al
  425685:	test   eax,0x4d77eba8
  42568a:	cmp    bl,BYTE PTR [esi+0x62]
  42568d:	jnp    0x425678
  42568f:	cmc    
  425690:	icebp  
  425691:	mov    DWORD PTR [edx],edx
  425693:	(bad)  
  425694:	xor    bh,dh
  425696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425697:	rcl    DWORD PTR [esi-0x2c5df4af],0xfe
  42569e:	enter  0xbf88,0xc8
  4256a2:	cmp    al,0xec
  4256a4:	mov    ebp,0xc2cb8ce3
  4256a9:	pop    ss
  4256aa:	verr   WORD PTR [ebx+0x6293b6f2]
  4256b1:	push   ebx
  4256b2:	test   al,0x96
  4256b4:	pushf  
  4256b5:	clc    
  4256b6:	cld    
  4256b7:	xchg   ebx,eax
  4256b8:	int3   
  4256b9:	fistp  DWORD PTR [ebx+0x31]
  4256bc:	nop
  4256bd:	ficomp WORD PTR [edi+0x42e0426a]
  4256c3:	mov    dl,0xa4
  4256c5:	pop    esi
  4256c6:	dec    eax
  4256c7:	inc    ebx
  4256c8:	sub    al,0x64
  4256ca:	shl    BYTE PTR [ecx],cl
  4256cc:	cmp    BYTE PTR [esi+0x105b1f71],bl
  4256d2:	data16 jne 0x425683
  4256d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256d6:	and    al,0xbe
  4256d8:	pop    es
  4256d9:	fwait
  4256da:	push   DWORD PTR [eax-0x251bb8ce]
  4256e0:	pop    es
  4256e1:	and    al,0x58
  4256e3:	pop    ecx
  4256e4:	imul   eax,DWORD PTR [ebp-0x3e],0x46
  4256e8:	into   
  4256e9:	pop    ds
  4256ea:	mov    ebp,0xf2fcac6d
  4256ef:	retf   
  4256f0:	mov    esp,0x395071e0
  4256f5:	jns    0x425723
  4256f7:	inc    esi
  4256f8:	ja     0x425693
  4256fa:	xchg   ebp,eax
  4256fb:	rcl    esp,1
  4256fd:	js     0x4256b5
  4256ff:	sub    BYTE PTR [eax-0x60818098],0x2d
  425706:	mov    esp,fs
  425708:	jmp    0x2fdd3291
  42570d:	test   cl,0xc0
  425710:	mov    esp,0xd8c1c8d
  425715:	enter  0x3a0d,0x39
  425719:	xchg   esi,eax
  42571a:	add    esi,edx
  42571c:	ins    BYTE PTR es:[edi],dx
  42571d:	sub    al,0x83
  42571f:	shl    DWORD PTR [esi-0x1f],cl
  425722:	adc    al,0x3c
  425724:	xchg   ecx,eax
  425725:	icebp  
  425726:	mov    BYTE PTR [ebx+0x65db3d58],bl
  42572c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42572d:	fcmove st,st(4)
  42572f:	scas   eax,DWORD PTR es:[edi]
  425730:	std    
  425731:	clc    
  425732:	push   edx
  425733:	add    BYTE PTR [edx],0xe9
  425736:	adc    al,0xbe
  425738:	test   DWORD PTR [esi+0x3b],esi
  42573b:	clc    
  42573c:	je     0x42572c
  42573e:	into   
  42573f:	repnz les ecx,FWORD PTR [ebx+0x783067c3]
  425746:	psubusw mm1,mm3
  425749:	daa    
  42574a:	data16 xlat BYTE PTR ds:[ebx]
  42574c:	outs   dx,DWORD PTR ds:[esi]
  42574d:	icebp  
  42574e:	mov    WORD PTR [esi+edi*2+0x36ac068b],ds
  425755:	mov    ebx,esi
  425757:	pop    ds
  425758:	scas   eax,DWORD PTR es:[edi]
  425759:	xchg   cl,cl
  42575b:	fs gs push ds
  42575e:	sub    al,0x9d
  425760:	pop    edi
  425761:	dec    ecx
  425762:	sbb    DWORD PTR [edx+0x60],esp
  425765:	pop    esp
  425766:	sub    bh,ah
  425768:	fist   DWORD PTR [edi+0x1c]
  42576b:	pop    ebx
  42576c:	mov    ebx,0x51be1abd
  425771:	bnd jnp 0x4257a2
  425774:	clc    
  425775:	cmp    DWORD PTR [edx-0x8],eax
  425778:	add    edx,DWORD PTR [esp+ecx*8+0x29]
  42577c:	xlat   BYTE PTR ds:[ebx]
  42577d:	sub    BYTE PTR [ebp+0x6dc55d9e],0x8b
  425784:	es jns 0x4257de
  425787:	xor    BYTE PTR [ebx+0x4120bd4f],0x5c
  42578e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42578f:	pop    es
  425790:	ja     0x425792
  425792:	mov    DWORD PTR [edi+eiz*8],ebx
  425795:	or     ah,al
  425797:	cli    
  425798:	pushf  
  425799:	push   edi
  42579a:	bound  esp,QWORD PTR [edi-0x7f]
  42579d:	int3   
  42579e:	inc    eax
  42579f:	inc    edi
  4257a0:	(bad)  
  4257a1:	mov    edx,0xeb1889b
  4257a6:	and    bl,ah
  4257a8:	sbb    BYTE PTR [ecx-0x2e],ah
  4257ab:	(bad)  
  4257ac:	aas    
  4257ad:	nop
  4257ae:	pop    edi
  4257af:	pop    edx
  4257b0:	retf   0x3961
  4257b3:	push   0xf3b88889
  4257b8:	frstor [ebx+0x6b]
  4257bb:	cs inc esp
  4257bd:	lds    eax,FWORD PTR [edx-0xa]
  4257c0:	jns    0x42575a
  4257c2:	cdq    
  4257c3:	push   esp
  4257c4:	push   es
  4257c5:	xchg   esi,eax
  4257c6:	shr    BYTE PTR [esi+0x52],cl
  4257c9:	or     BYTE PTR [esi+0x47],0x2a
  4257cd:	pop    ds
  4257ce:	or     BYTE PTR fs:[esi],0x5b
  4257d2:	jg     0x4257f9
  4257d4:	mov    DWORD PTR [edi],ecx
  4257d6:	xor    bh,BYTE PTR [esi]
  4257d8:	stc    
  4257d9:	(bad)  
  4257da:	fsubr  DWORD PTR [esi+0x5604c0a1]
  4257e0:	inc    ebx
  4257e1:	hlt    
  4257e2:	push   ebx
  4257e3:	jp     0x42577e
  4257e5:	push   0xfffffff5
  4257e7:	jns    0x4257c5
  4257e9:	add    al,bh
  4257eb:	jbe    0x42577b
  4257ed:	sub    al,0x48
  4257ef:	shr    BYTE PTR [esi-0x199d9a63],0xfa
  4257f6:	mov    cl,0x9f
  4257f8:	push   0x4862d9fc
  4257fd:	ss out 0x62,eax
  425800:	stc    
  425801:	pop    ebx
  425802:	int3   
  425803:	sbb    DWORD PTR [ebx+0x22],edx
  425806:	mov    ds:0x4b4be49,al
  42580b:	aam    0x57
  42580d:	stos   DWORD PTR es:[edi],eax
  42580e:	jns    0x4257b3
  425810:	inc    edi
  425811:	cdq    
  425812:	pop    edx
  425813:	mov    ecx,0x4bac9c37
  425818:	xlat   BYTE PTR ds:[ebx]
  425819:	(bad)  
  42581a:	fucomi st,st(1)
  42581c:	je     0x4257b5
  42581e:	or     al,0x10
  425820:	mov    ds:0xa30bd68b,al
  425825:	(bad)  
  425827:	jns    0x4258a5
  425829:	adc    DWORD PTR [eax-0x3b],ebp
  42582c:	sti    
  42582d:	shl    DWORD PTR [edx],0xae
  425830:	inc    ebx
  425831:	xchg   edx,eax
  425832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425833:	sub    esi,ebp
  425835:	cmp    esi,edi
  425837:	sbb    BYTE PTR [edx+0x56],bl
  42583a:	test   DWORD PTR [ecx-0x608deba7],ecx
  425840:	rol    BYTE PTR [esi-0x3c02839f],0x4e
  425847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425848:	sbb    ah,al
  42584a:	mov    ecx,0x8b84f1f5
  42584f:	mov    DWORD PTR [eax+0x39e7b164],eax
  425855:	jno    0x42580c
  425857:	(bad)  
  425858:	sbb    ch,BYTE PTR es:[edi+0x2e62]
  42585f:	add    BYTE PTR [eax],al
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x345d36f8]
  42586f:	add    esi,DWORD PTR [eax+eax*1]
  425872:	loop   0x425844
  425874:	add    DWORD PTR [eax],eax
  425876:	repz add al,0x0
  425879:	add    BYTE PTR [esp-0x3998be4f],ah
  425880:	sbb    ch,ch
  425882:	mov    al,0xa
  425884:	cmp    DWORD PTR ds:0x949c2611,esp
  42588a:	sar    DWORD PTR ss:[ebx-0x255a2561],1
  425891:	push   0x4d
  425893:	lahf   
  425894:	je     0x4258f2
  425896:	pop    ecx
  425897:	pop    ds
  425898:	gs cmp eax,0x493dc99f
  42589e:	out    0x5,eax
  4258a0:	add    bh,BYTE PTR [eax-0xa7d4bd5]
  4258a6:	std    
  4258a7:	sbb    ebp,ebx
  4258a9:	pop    ebx
  4258aa:	and    DWORD PTR [ebx-0x7d124d17],esp
  4258b0:	pop    es
  4258b1:	pop    edi
  4258b2:	xchg   esi,eax
  4258b3:	mov    ds:0xdcb5e459,al
  4258b8:	mov    es,WORD PTR [ebx]
  4258ba:	mov    ecx,0xbe59f9a6
  4258bf:	ds pop ecx
  4258c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258c2:	(bad)  
  4258c3:	push   ss
  4258c4:	fwait
  4258c5:	(bad)  
  4258c7:	fsubr  DWORD PTR [esi+0x6d203f4]
  4258cd:	adc    al,0x5d
  4258cf:	mov    al,0x6c
  4258d1:	sbb    eax,0x2257a434
  4258d6:	sbb    cl,BYTE PTR [eax-0x59]
  4258d9:	mov    ds,ecx
  4258db:	das    
  4258dc:	pop    edi
  4258dd:	mov    cl,0x97
  4258df:	lods   eax,DWORD PTR ds:[esi]
  4258e0:	in     al,dx
  4258e1:	push   ds
  4258e2:	arpl   WORD PTR [ebp-0x639f8723],sp
  4258e8:	div    ecx
  4258ea:	retf   
  4258eb:	adc    ch,BYTE PTR [ecx-0x4c]
  4258ee:	xor    DWORD PTR [eax-0x2b],esp
  4258f1:	rcl    DWORD PTR [ecx*2+0x2b213e],1
  4258f8:	adc    BYTE PTR [ebp+ebx*8-0x4092759d],al
  4258ff:	imul   ebx,DWORD PTR [ebx],0xffffffc5
  425902:	cmp    BYTE PTR [eax+edi*4-0x748819b9],0x1d
  42590a:	nop
  42590b:	xchg   ecx,eax
  42590c:	cmp    eax,0x55ebd828
  425911:	jbe    0x425924
  425913:	repnz mov ch,0xa8
  425916:	xchg   ebp,eax
  425917:	js     0x42590d
  425919:	rcr    BYTE PTR [edx+eiz*4+0x7f],cl
  42591d:	mov    ebx,0x195a7a4c
  425922:	push   es
  425923:	and    BYTE PTR [ebx-0x1c],ah
  425926:	push   ds
  425927:	adc    esp,DWORD PTR ds:0xea589bd7
  42592d:	in     al,0x90
  42592f:	mov    al,ds:0xb4ae803c
  425934:	jmp    0xd9dfd8f3
  425939:	add    cl,BYTE PTR [ebp-0x19c8595b]
  42593f:	sub    edx,ecx
  425941:	mov    ecx,gs
  425943:	cmp    eax,0x23634503
  425948:	dec    ebp
  425949:	cmp    al,0x21
  42594b:	mov    ch,0x5f
  42594d:	hlt    
  42594e:	cld    
  42594f:	fild   DWORD PTR [ebx-0x62f9e3d0]
  425955:	dec    esp
  425956:	sbb    al,0x6c
  425958:	lock pushf 
  42595a:	ret    0x9569
  42595d:	in     eax,dx
  42595e:	bound  esi,QWORD PTR [ebp+0x27442f26]
  425964:	stc    
  425965:	push   edi
  425966:	and    cl,BYTE PTR [edx-0x36]
  425969:	gs mov cl,0x1e
  42596c:	mov    edi,0x4377cfa1
  425971:	sub    BYTE PTR [ecx-0x42],0xe5
  425975:	mov    dh,0x0
  425977:	in     al,dx
  425978:	unpckhps xmm5,xmm4
  42597b:	inc    ebx
  42597c:	cmc    
  42597d:	mov    ds,WORD PTR gs:[edx+0xd]
  425981:	cmp    esp,DWORD PTR [edx+0x65]
  425984:	lea    eax,[ebp+0x37dd84e0]
  42598a:	loope  0x425950
  42598c:	dec    esp
  42598d:	mov    esi,DWORD PTR ds:0xca17c67b
  425993:	sahf   
  425994:	mov    esp,0x9b163814
  425999:	scas   al,BYTE PTR es:[edi]
  42599a:	inc    ebp
  42599b:	out    dx,al
  42599c:	test   DWORD PTR [esi-0x63565be2],edx
  4259a2:	mov    ds:0x4ad025c8,al
  4259a7:	fs xchg edi,esp
  4259aa:	stos   BYTE PTR es:[edi],al
  4259ab:	cmp    eax,0xcbf0ab3f
  4259b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259b1:	sti    
  4259b2:	mov    esi,0x2fc95bc6
  4259b7:	rol    ebp,0x1
  4259ba:	mov    ebp,0x2c7c044b
  4259bf:	mov    bh,0x2e
  4259c1:	add    al,0x96
  4259c3:	sar    BYTE PTR [esi],1
  4259c5:	js     0x4259c6
  4259c7:	popf   
  4259c8:	and    eax,0x8cc683cc
  4259cd:	sbb    al,0xa
  4259cf:	mov    cl,0x26
  4259d1:	mov    ebx,0x2e304364
  4259d6:	out    0x2b,al
  4259d8:	sbb    DWORD PTR [ecx],ecx
  4259da:	add    ebx,edx
  4259dc:	in     al,dx
  4259dd:	xchg   BYTE PTR [edx+ebx*8],cl
  4259e0:	sbb    esp,DWORD PTR [edi-0x63]
  4259e3:	(bad)  
  4259e4:	call   0x89d5:0x8fa828ba
  4259eb:	push   esp
  4259ec:	repz dec esi
  4259ee:	call   FWORD PTR [ecx]
  4259f0:	es arpl bx,bx
  4259f3:	out    0xb1,eax
  4259f5:	fld    QWORD PTR [ecx]
  4259f7:	std    
  4259f8:	jne    0x425a00
  4259fa:	mov    al,0x86
  4259fc:	add    BYTE PTR [edx+eiz*8-0xf],al
  425a00:	sub    BYTE PTR [ebx-0x384b64cf],0x13
  425a07:	jmp    0x3cb8:0x665a348
  425a0e:	sbb    eax,0xf87d15b6
  425a13:	jae    0x4259a1
  425a15:	imul   edi,DWORD PTR [ebx+0x51],0xffffffef
  425a19:	outs   dx,DWORD PTR ds:[esi]
  425a1a:	nop
  425a1b:	add    bh,BYTE PTR [eax-0x57a3d8a3]
  425a21:	and    eax,0xbedf1b03
  425a26:	add    BYTE PTR [eax],dh
  425a28:	ret    
  425a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a2a:	enter  0x5eff,0x7b
  425a2e:	test   BYTE PTR [edx-0x1a7c60e6],dh
  425a34:	sub    ah,BYTE PTR [edi+0x2e]
  425a37:	ds jo  0x425a06
  425a3a:	push   0xed17144e
  425a3f:	sub    dh,BYTE PTR [edi+0x688305e3]
  425a45:	mov    eax,ds:0x748089fe
  425a4a:	push   es
  425a4b:	mov    cl,0xe4
  425a4d:	mov    edi,0x563d9719
  425a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a53:	fwait
  425a54:	ret    
  425a55:	sub    al,0xfd
  425a57:	test   BYTE PTR [edx-0x2ac86a63],al
  425a5d:	or     al,0x54
  425a5f:	dec    esp
  425a60:	ins    BYTE PTR es:[edi],dx
  425a61:	inc    ecx
  425a62:	or     eax,DWORD PTR [edi+edx*1]
  425a65:	sbb    bh,BYTE PTR [esi+0x4d]
  425a68:	jmp    FWORD PTR [ecx]
  425a6a:	inc    ecx
  425a6b:	push   edi
  425a6c:	jb     0x425a35
  425a6e:	jmp    0x425a86
  425a70:	out    0x7f,al
  425a72:	mov    ebx,0x729baf75
  425a77:	scas   eax,DWORD PTR es:[edi]
  425a78:	jmp    0x1f00:0x818c
  425a7e:	retf   
  425a7f:	mov    tr4,edi
  425a82:	xchg   BYTE PTR [esi+0x3ae1362f],ah
  425a88:	ds cmp ah,ch
  425a8b:	push   ebx
  425a8c:	pop    esp
  425a8d:	scas   eax,DWORD PTR es:[edi]
  425a8e:	inc    ebp
  425a8f:	pop    ecx
  425a90:	sbb    esi,edx
  425a92:	(bad)
  425a96:	aam    0xd5
  425a98:	pop    ss
  425a99:	add    BYTE PTR [edx],dh
  425a9b:	xchg   esp,eax
  425a9c:	arpl   WORD PTR [eax-0x18bfb3f6],si
  425aa2:	rol    cl,cl
  425aa4:	xor    al,0x1f
  425aa6:	fnstsw WORD PTR [eax+edi*4+0x5e]
  425aaa:	leave  
  425aab:	aam    0x3b
  425aad:	xor    DWORD PTR [ebx],edi
  425aaf:	fsub   QWORD PTR [edx-0x2a291fc8]
  425ab5:	adc    DWORD PTR [eax-0x71f9994],esp
  425abb:	jb     0x425aa0
  425abd:	cmp    BYTE PTR [ebx],ch
  425abf:	(bad)  
  425ac0:	mov    ah,BYTE PTR [ebp-0x14]
  425ac3:	(bad)  
  425ac5:	jmp    0x425a4e
  425ac7:	xchg   BYTE PTR [ebx+0x5abf0d32],dl
  425acd:	pop    ebx
  425ace:	fldenv [edx-0xd]
  425ad1:	pop    edi
  425ad2:	mov    ebx,0xbc7b4a9b
  425ad7:	nop
  425ad8:	imul   eax,DWORD PTR [eax-0x4d],0xa0462e8d
  425adf:	or     al,0x16
  425ae1:	shl    ecx,cl
  425ae3:	dec    ebp
  425ae4:	in     al,dx
  425ae5:	loope  0x425b3e
  425ae7:	mov    al,ds:0x2449a31b
  425aec:	mov    DWORD PTR [eax+esi*1+0x1420a8e3],ebp
  425af3:	in     eax,dx
  425af4:	ror    DWORD PTR [edx],cl
  425af6:	mov    esp,0x8f3ac9c2
  425afb:	or     bl,BYTE PTR [edi-0x36]
  425afe:	cmc    
  425aff:	and    eax,0x2d40263c
  425b04:	xor    eax,0x8816a247
  425b09:	jge    0x425b6f
  425b0b:	sub    al,0x15
  425b0d:	mov    esp,0xa42b7659
  425b12:	rcl    DWORD PTR [ebx+ebx*2+0xc],1
  425b16:	mov    dh,0x60
  425b18:	mov    ebp,0xe1f755c2
  425b1d:	rol    esi,cl
  425b1f:	in     eax,dx
  425b20:	test   al,0x11
  425b22:	stos   BYTE PTR es:[edi],al
  425b23:	dec    esp
  425b24:	dec    esp
  425b25:	ins    BYTE PTR es:[edi],dx
  425b26:	int3   
  425b27:	cdq    
  425b28:	fcomi  st,st(6)
  425b2a:	jne    0x425b1b
  425b2c:	mov    eax,fs:0xe144fa2d
  425b32:	push   es
  425b33:	cwde   
  425b34:	loop   0x425ad4
  425b36:	out    0x4a,eax
  425b38:	xchg   ebp,eax
  425b39:	shl    BYTE PTR [ecx+0x3fc95215],1
  425b3f:	icebp  
  425b40:	repz mov bh,0x5d
  425b43:	sub    al,0xf4
  425b45:	add    BYTE PTR [ebx+0x80b8c90],al
  425b4b:	mov    ecx,0xa933ebc7
  425b50:	cmp    eax,0x2546fc13
  425b55:	or     ah,BYTE PTR [ecx-0x1dfff25]
  425b5b:	push   edi
  425b5c:	add    al,0xcb
  425b5e:	shl    DWORD PTR [edi+0x67],0x13
  425b62:	mov    cl,0xde
  425b64:	das    
  425b65:	push   ebx
  425b66:	jp     0x425bc6
  425b68:	pop    ss
  425b69:	aas    
  425b6a:	cmc    
  425b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b6c:	adc    BYTE PTR [edx-0x166179d5],cl
  425b72:	cmp    BYTE PTR [edx],al
  425b74:	cmp    DWORD PTR [eax+0x54],0x57
  425b78:	out    dx,eax
  425b79:	in     eax,dx
  425b7a:	fwait
  425b7b:	lea    ebp,[ebx]
  425b7d:	adc    edi,edx
  425b7f:	ret    
  425b80:	cs leave 
  425b82:	xor    ah,BYTE PTR [edx-0x27]
  425b85:	lahf   
  425b86:	test   al,0x75
  425b88:	scas   eax,DWORD PTR es:[edi]
  425b89:	mov    DWORD PTR [eax-0x4a],esi
  425b8c:	stos   DWORD PTR es:[edi],eax
  425b8d:	add    dl,BYTE PTR [ebx+0x7db9ad5b]
  425b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b94:	mov    cl,0xd6
  425b96:	das    
  425b97:	pop    esp
  425b98:	retf   0x1f80
  425b9b:	mov    dh,0xb8
  425b9d:	mov    cl,0x48
  425b9f:	push   cs
  425ba0:	pop    esp
  425ba1:	push   esi
  425ba2:	dec    esi
  425ba3:	shl    DWORD PTR [esi],1
  425ba5:	xor    ah,dh
  425ba7:	arpl   WORD PTR [ebp-0x25884f3d],bx
  425bad:	js     0x425b70
  425baf:	stos   BYTE PTR es:[edi],al
  425bb0:	inc    ebx
  425bb1:	mov    dl,ch
  425bb3:	(bad)  
  425bb4:	jl     0x425b3a
  425bb6:	out    0x82,eax
  425bb8:	leave  
  425bb9:	loope  0x425c23
  425bbb:	pop    esp
  425bbc:	jne    0x425c08
  425bbe:	in     al,0xd9
  425bc0:	in     al,dx
  425bc1:	arpl   di,sp
  425bc3:	(bad)
  425bc6:	stos   DWORD PTR es:[edi],eax
  425bc7:	ficom  WORD PTR [ecx+0x4f66292c]
  425bcd:	or     DWORD PTR [edx],0x28
  425bd0:	inc    edx
  425bd1:	push   es
  425bd2:	pop    edi
  425bd3:	aam    0xc6
  425bd5:	mov    bh,0x46
  425bd7:	mov    ds:0xe847596e,eax
  425bdc:	adc    BYTE PTR ds:0x2b0db43c,bl
  425be2:	cmp    BYTE PTR [edx-0x12],cl
  425be5:	(bad)  
  425be6:	repz loop 0x425bb3
  425be9:	pop    ecx
  425bea:	test   DWORD PTR [esi+eax*8+0x4],esi
  425bee:	dec    edx
  425bef:	(bad)  
  425bf0:	aad    0x95
  425bf2:	jmp    0x425b87
  425bf4:	add    eax,0xe09086b8
  425bf9:	icebp  
  425bfa:	test   DWORD PTR [ecx+0x3c],ebp
  425bfd:	and    ah,bl
  425bff:	(bad)  
  425c00:	ins    DWORD PTR es:[edi],dx
  425c01:	push   esp
  425c02:	fucomip st,st(0)
  425c04:	hlt    
  425c05:	inc    ebp
  425c06:	inc    ch
  425c08:	push   eax
  425c09:	mov    esp,0xe92f2144
  425c0e:	(bad)  
  425c0f:	mov    ch,0xd3
  425c11:	xlat   BYTE PTR ds:[ebx]
  425c12:	enter  0x1c0b,0xce
  425c16:	jmp    0x6ee3:0xa0997292
  425c1d:	cmp    ah,BYTE PTR [edi-0x399599da]
  425c23:	outs   dx,BYTE PTR ds:[esi]
  425c24:	or     dl,bl
  425c26:	and    DWORD PTR [edi+0x71b3aa38],0x24
  425c2d:	lds    ebx,FWORD PTR [edi]
  425c2f:	dec    ecx
  425c30:	push   ds
  425c31:	(bad)  
  425c32:	enter  0xb81d,0x72
  425c36:	in     al,0x23
  425c38:	sub    eax,DWORD PTR [ebp-0x3aafa3a1]
  425c3e:	in     eax,dx
  425c3f:	add    bl,cl
  425c41:	xlat   BYTE PTR ds:[ebx]
  425c42:	jbe    0x425bed
  425c44:	inc    ecx
  425c45:	idiv   esp
  425c47:	dec    edx
  425c48:	aaa    
  425c49:	jmp    0xbc2ac511
  425c4e:	xchg   esp,eax
  425c4f:	lds    eax,FWORD PTR [ecx+esi*1-0x56d83c22]
  425c56:	inc    ecx
  425c57:	lock mov eax,ds:0x3a51c901
  425c5d:	xor    al,0x34
  425c5f:	call   0x4a33:0x8a5a8fa7
  425c66:	jno    0x425c1c
  425c68:	ss in  al,0x8e
  425c6b:	ja     0x425c15
  425c6d:	test   BYTE PTR [ebx-0x67],al
  425c70:	xor    DWORD PTR [edx+0x2],0xffffffb6
  425c74:	aaa    
  425c75:	sar    BYTE PTR [ecx],cl
  425c77:	jae    0x425cbf
  425c79:	adc    BYTE PTR [eax-0x32],bl
  425c7c:	mov    esi,DWORD PTR [eax]
  425c7e:	(bad)  [esi-0x49]
  425c81:	inc    esi
  425c82:	icebp  
  425c83:	ds loop 0x425c5d
  425c86:	mov    ebx,esp
  425c88:	in     al,dx
  425c89:	jp     0x425c9f
  425c8b:	jge    0x425ced
  425c8d:	imul   ebp,DWORD PTR [ecx-0x2a85c29],0xffffff9c
  425c94:	cmc    
  425c95:	push   eax
  425c96:	inc    ebx
  425c97:	xor    al,0xf9
  425c99:	out    0x41,al
  425c9b:	push   edx
  425c9c:	inc    ebp
  425c9d:	lahf   
  425c9e:	adc    DWORD PTR [esi],edi
  425ca0:	stc    
  425ca1:	cmp    DWORD PTR [ecx+0x46],ecx
  425ca4:	push   edx
  425ca5:	call   0x98792af6
  425caa:	xchg   ebx,eax
  425cab:	test   eax,0x7b9c4517
  425cb0:	das    
  425cb1:	xlat   BYTE PTR ds:[ebx]
  425cb2:	and    BYTE PTR [ecx+0x6c8ee81],dl
  425cb8:	int3   
  425cb9:	jo     0x425d33
  425cbb:	pop    edi
  425cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cbd:	fs jle 0x425c7a
  425cc0:	xchg   ecx,eax
  425cc1:	sbb    ebp,DWORD PTR [ecx+0x5e3b838f]
  425cc7:	pop    esp
  425cc8:	aas    
  425cc9:	cs jge 0x425cc8
  425ccc:	add    ebx,eax
  425cce:	ud2    
  425cd0:	mov    bl,BYTE PTR [eax+0x5dbfa470]
  425cd6:	push   es
  425cd7:	rol    DWORD PTR [ebx],cl
  425cd9:	mov    ebx,0x4ed5f0b6
  425cde:	sbb    eax,0xc51671b6
  425ce3:	enter  0xdab5,0x1a
  425ce7:	(bad)  
  425ce9:	icebp  
  425cea:	adc    al,0x37
  425cec:	dec    eax
  425ced:	or     BYTE PTR [edx],dh
  425cef:	std    
  425cf0:	rol    edx,cl
  425cf2:	cmp    ecx,ebx
  425cf4:	inc    edi
  425cf5:	mov    ecx,0xf2ad76c5
  425cfa:	call   0x4a003690
  425cff:	push   esp
  425d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d01:	ret    0x2713
  425d04:	jbe    0x425d15
  425d06:	dec    ebx
  425d07:	jmp    0x425cfe
  425d09:	jecxz  0x425cfc
  425d0b:	cmp    al,0xe2
  425d0d:	xchg   ecx,eax
  425d0e:	xchg   ebx,eax
  425d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d10:	aas    
  425d11:	stos   DWORD PTR es:[edi],eax
  425d12:	dec    ebx
  425d13:	dec    ebx
  425d14:	scas   al,BYTE PTR es:[edi]
  425d15:	rcr    BYTE PTR [esi+esi*8+0x29b9b265],1
  425d1c:	inc    eax
  425d1d:	xor    eax,0xe6dd6760
  425d22:	mov    dl,ah
  425d24:	pslld  mm3,mm1
  425d27:	sub    eax,0xb097e7dd
  425d2c:	outs   dx,DWORD PTR ds:[esi]
  425d2d:	dec    edx
  425d2e:	inc    esp
  425d2f:	or     dh,0xd0
  425d32:	add    eax,ecx
  425d34:	sub    al,0xaa
  425d36:	mov    dl,0xa8
  425d38:	mov    bl,0x43
  425d3a:	fcmovnu st,st(2)
  425d3c:	dec    esi
  425d3d:	shr    ecx,0x92
  425d40:	mov    bl,0x79
  425d42:	into   
  425d43:	pop    ds
  425d44:	cmc    
  425d45:	fimul  WORD PTR [eax]
  425d47:	lahf   
  425d48:	mov    dl,0x3c
  425d4a:	stos   BYTE PTR es:[edi],al
  425d4b:	mov    ?,WORD PTR [edx+0x9d5be1c]
  425d51:	mov    eax,ds:0x8c5a61f4
  425d56:	inc    esp
  425d57:	and    ah,dl
  425d59:	dec    ebx
  425d5a:	xor    al,0x62
  425d5c:	addr16 push ecx
  425d5e:	jle    0x425dde
  425d60:	mov    cl,0x19
  425d62:	loopne 0x425ce4
  425d64:	mov    ch,0x7c
  425d66:	repz push ebx
  425d68:	leave  
  425d69:	outs   dx,BYTE PTR ds:[esi]
  425d6a:	cdq    
  425d6b:	inc    ebx
  425d6c:	mov    dh,0x0
  425d6e:	add    BYTE PTR [eax],al
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [eax+eiz*1-0x34]
  425d80:	leave  
  425d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d82:	aad    0xd5
  425d84:	add    DWORD PTR [eax],eax
  425d86:	repz add al,0x0
  425d89:	add    BYTE PTR [esi],al
  425d8b:	sub    dh,BYTE PTR [ebp-0x54da2b5f]
  425d91:	daa    
  425d92:	xor    DWORD PTR [esi+0x2989ea7f],0xffffffad
  425d99:	sub    al,BYTE PTR [edx]
  425d9b:	mov    esi,0x52ef801e
  425da0:	cli    
  425da1:	sbb    bl,BYTE PTR [eax]
  425da3:	pop    esp
  425da4:	call   0xcb17afe4
  425da9:	cmp    eax,0x3dbbad02
  425dae:	mov    eax,0x6adc28d
  425db3:	sar    DWORD PTR [esi-0x1d],0xca
  425db7:	scas   al,BYTE PTR es:[edi]
  425db8:	or     BYTE PTR [ebx],cl
  425dba:	adc    BYTE PTR [ecx],0x2
  425dbd:	(bad)  
  425dbe:	mov    ecx,DWORD PTR [ebx]
  425dc0:	cdq    
  425dc1:	adc    al,0x76
  425dc3:	ret    0x1439
  425dc6:	fldenv [edx+0x65]
  425dc9:	mov    eax,ds:0x6bb58c3
  425dce:	pop    esi
  425dcf:	mov    dh,0x44
  425dd1:	jg     0x425e4b
  425dd3:	xchg   ebp,eax
  425dd4:	inc    edx
  425dd5:	add    eax,0x517df41c
  425dda:	mov    esi,0x69a5b1a0
  425ddf:	add    edx,0x1cb6ec02
  425de5:	add    al,0x91
  425de7:	(bad)  
  425de8:	mov    edi,ebx
  425dea:	jg     0x425da4
  425dec:	ins    BYTE PTR es:[edi],dx
  425ded:	ss pop ebp
  425def:	add    al,0xba
  425df1:	fisttp QWORD PTR [esi+0x555a0ada]
  425df7:	sbb    eax,DWORD PTR [edx-0x4e098aaf]
  425dfd:	es imul ebp,esi,0xf2af901b
  425e04:	mov    gs,WORD PTR [eax]
  425e06:	repz sub eax,0x5a0e3df7
  425e0c:	bound  edi,QWORD PTR [edi]
  425e0e:	jecxz  0x425e46
  425e10:	stos   DWORD PTR es:[edi],eax
  425e11:	mov    eax,ds:0x1bd65bd8
  425e16:	pop    eax
  425e17:	aad    0x30
  425e19:	xchg   esi,eax
  425e1a:	(bad)  
  425e1b:	mov    WORD PTR [eax+eiz*2-0x68230a60],?
  425e22:	dec    ebx
  425e23:	daa    
  425e24:	xchg   ebp,eax
  425e25:	aaa    
  425e26:	jae    0x425dc7
  425e28:	loope  0x425e48
  425e2a:	fprem1 
  425e2c:	scas   eax,DWORD PTR es:[edi]
  425e2d:	add    dl,bh
  425e2f:	inc    ecx
  425e30:	mov    cl,0xf
  425e32:	inc    edx
  425e33:	mov    edi,0x473b8f1b
  425e38:	mov    bh,0xdf
  425e3a:	xor    al,0x1d
  425e3c:	mov    ds:0x3ff70ddf,eax
  425e41:	in     al,dx
  425e42:	sub    bh,BYTE PTR [ebx+0x6ff15f5b]
  425e48:	stc    
  425e49:	sbb    al,0x59
  425e4b:	xchg   ecx,eax
  425e4c:	mul    esi
  425e4e:	scas   al,BYTE PTR es:[edi]
  425e4f:	xlat   BYTE PTR ds:[ebx]
  425e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e51:	mov    ecx,0x5db2fb90
  425e56:	call   DWORD PTR [bx+si+0x10b3]
  425e5b:	mov    ecx,0xfbd8f789
  425e60:	pop    eax
  425e61:	mov    eax,ebp
  425e63:	pop    ds
  425e64:	jnp    0x425e6a
  425e66:	push   0x2f
  425e68:	dec    ebx
  425e69:	dec    edx
  425e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e6b:	sar    DWORD PTR [ebx-0x3da62025],0x8b
  425e72:	out    0x16,al
  425e74:	fist   DWORD PTR [ebp-0x7b]
  425e77:	(bad)  
  425e78:	ds mov ch,0x3b
  425e7b:	mov    ebp,0x50a2ae52
  425e80:	xchg   esp,eax
  425e81:	jge    0x425e0a
  425e83:	cdq    
  425e84:	into   
  425e85:	sti    
  425e86:	ds in  ax,0x37
  425e8a:	mov    ebp,0xe59c73ba
  425e8f:	xor    eax,0xdaac21a9
  425e94:	pop    eax
  425e95:	cmp    edx,DWORD PTR [edi-0x73]
  425e98:	into   
  425e99:	mov    edx,0x123f1305
  425e9e:	in     al,dx
  425e9f:	call   0xf901fff6
  425ea4:	push   ebp
  425ea5:	sub    al,0x7c
  425ea7:	push   ecx
  425ea8:	push   ebp
  425ea9:	or     al,0x5b
  425eab:	jl     0x425e81
  425ead:	js     0x425ecc
  425eaf:	call   0xc3de2e4e
  425eb4:	cmc    
  425eb5:	adc    DWORD PTR [edi],eax
  425eb7:	jl     0x425eba
  425eb9:	and    DWORD PTR [eax+0x5c],ebp
  425ebc:	scas   eax,DWORD PTR es:[edi]
  425ebd:	outs   dx,DWORD PTR ds:[esi]
  425ebe:	jl     0x425f37
  425ec0:	cli    
  425ec1:	shl    BYTE PTR [esi],0x48
  425ec4:	and    eax,0x69883102
  425ec9:	xor    al,0xfc
  425ecb:	bound  edi,QWORD PTR [edi-0x769e4c08]
  425ed1:	stos   DWORD PTR es:[edi],eax
  425ed2:	idiv   DWORD PTR [eax+0xe]
  425ed5:	scas   al,BYTE PTR es:[edi]
  425ed6:	ins    DWORD PTR es:[edi],dx
  425ed7:	mov    eax,ds:0x7dc4bf94
  425edc:	mov    DWORD PTR [esi],edi
  425ede:	or     al,0x31
  425ee0:	in     eax,0x20
  425ee2:	xchg   ebx,eax
  425ee3:	add    BYTE PTR [edi+0x36],bh
  425ee6:	jle    0x425ea2
  425ee8:	adc    BYTE PTR [eax-0x6],al
  425eeb:	mov    bl,0xb3
  425eed:	cmp    eax,0xaa320b09
  425ef2:	jno    0x425ec4
  425ef4:	inc    edx
  425ef5:	mov    ebp,0xc8ead139
  425efa:	and    ah,cl
  425efc:	add    eax,0x1b26d7b3
  425f01:	sbb    al,0xa2
  425f03:	add    al,0xef
  425f05:	jg     0x425f78
  425f07:	sub    eax,ebp
  425f09:	add    eax,0x47231c85
  425f0e:	adc    DWORD PTR [eax],esp
  425f10:	and    esi,ebp
  425f12:	inc    edx
  425f13:	rcr    bh,cl
  425f15:	push   ecx
  425f16:	dec    ebp
  425f17:	xor    BYTE PTR [edi-0x1c],ch
  425f1a:	pop    ebx
  425f1b:	sbb    al,BYTE PTR [ebx+0x6220cfd8]
  425f21:	jae    0x425ea3
  425f23:	ins    DWORD PTR es:[edi],dx
  425f24:	xchg   edi,eax
  425f25:	pop    es
  425f26:	mov    bl,0x6c
  425f28:	sub    BYTE PTR [eax-0x47aca298],bl
  425f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f2f:	pop    edi
  425f30:	dec    edx
  425f31:	sub    ebx,edi
  425f33:	dec    edx
  425f34:	test   BYTE PTR [edx+0x62],0x27
  425f38:	iret   
  425f39:	add    eax,0xeeed7ab9
  425f3e:	mov    esp,0xba1c9b66
  425f43:	jb     0x425f7e
  425f45:	xchg   BYTE PTR [edx-0xa],bl
  425f48:	scas   eax,DWORD PTR es:[edi]
  425f49:	setl   bl
  425f4c:	push   0xa2d61aa7
  425f51:	lods   al,BYTE PTR ds:[esi]
  425f52:	in     al,dx
  425f53:	dec    esi
  425f54:	ror    BYTE PTR [edx+0x6f],1
  425f57:	je     0x425f2c
  425f59:	xchg   ebx,eax
  425f5a:	icebp  
  425f5b:	loope  0x425fd4
  425f5d:	jae    0x425fa9
  425f5f:	xchg   ebx,eax
  425f60:	bound  esi,QWORD PTR [esi-0x64]
  425f63:	xor    ch,BYTE PTR [esp+edx*4-0x26]
  425f67:	inc    esi
  425f68:	sbb    eax,0x29a03dc2
  425f6d:	sbb    DWORD PTR [eax-0x46c20a49],ebp
  425f73:	mov    DWORD PTR [esi],esp
  425f75:	add    dh,0xd5
  425f78:	xchg   esi,eax
  425f79:	movzx  esp,WORD PTR [ebp-0x24]
  425f7d:	imul   ecx,DWORD PTR [ebx+ebx*4],0xffffff9a
  425f81:	dec    eax
  425f82:	dec    ecx
  425f83:	in     al,dx
  425f84:	jmp    edi
  425f86:	shl    BYTE PTR [esi+0xb],1
  425f89:	neg    BYTE PTR cs:[ebx-0x2cad5ac7]
  425f90:	or     dl,ah
  425f92:	cmp    dl,BYTE PTR [edx-0x4048c646]
  425f98:	mov    eax,ds:0xac455fe6
  425f9d:	mov    esp,0xa4ecfb9f
  425fa2:	push   es
  425fa3:	mov    ds:0x98668ffd,al
  425fa8:	addr16 mov al,ds:0xf314
  425fac:	pop    esp
  425fad:	add    eax,0x98df803d
  425fb2:	dec    eax
  425fb3:	add    eax,0xb4fe4aa8
  425fb8:	push   ds
  425fb9:	addr16 cs fucomip st,st(7)
  425fbd:	lods   al,BYTE PTR ds:[esi]
  425fbe:	test   DWORD PTR [esi+0x23],esi
  425fc1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  425fc3:	sub    esi,DWORD PTR [edx-0x18]
  425fc6:	pop    ebx
  425fc7:	or     al,0x49
  425fc9:	std    
  425fca:	sub    al,0x32
  425fcc:	add    al,0xa4
  425fce:	cmp    edx,DWORD PTR [esi-0x6fb5678b]
  425fd4:	ficomp WORD PTR [esi]
  425fd6:	mov    dh,0xc1
  425fd8:	out    dx,eax
  425fd9:	dec    ecx
  425fda:	ret    
  425fdb:	inc    esi
  425fdc:	jecxz  0x426055
  425fde:	pop    es
  425fdf:	push   0x43b47ee8
  425fe4:	loope  0x42602d
  425fe6:	lods   al,BYTE PTR ds:[esi]
  425fe7:	fisub  DWORD PTR [ebx+0x14372263]
  425fed:	mov    ch,0xc5
  425fef:	clc    
  425ff0:	inc    ebp
  425ff1:	inc    edx
  425ff2:	push   cs
  425ff3:	aad    0x5
  425ff5:	mov    DWORD PTR [edx],eax
  425ff7:	in     eax,0x22
  425ff9:	mov    edx,0x96a0e6aa
  425ffe:	ss mov ebp,0xabd0f9f2
  426004:	jg     0x425fa8
  426006:	add    ch,al
  426008:	lods   eax,DWORD PTR ds:[esi]
  426009:	mov    ah,0xc7
  42600b:	sar    DWORD PTR [eax+0x2a],1
  42600e:	lahf   
  42600f:	popf   
  426010:	xor    al,BYTE PTR [ebp+0x22]
  426013:	ficom  DWORD PTR [ecx-0x204e00d5]
  426019:	imul   ecx,DWORD PTR [edx+ecx*2+0x1a9c410b],0x1278725c
  426024:	or     al,BYTE PTR [ebx-0x2e]
  426027:	xor    BYTE PTR [edi],dh
  426029:	inc    esi
  42602a:	int3   
  42602b:	mov    esp,0x894f1690
  426030:	enter  0xe3ab,0x48
  426034:	jmp    0x42601e
  426036:	mov    ecx,0xdde25863
  42603b:	add    al,0x8a
  42603d:	cmp    al,0x8e
  42603f:	shl    BYTE PTR [ecx+0x2e],0x8
  426043:	(bad)  
  426044:	and    edi,DWORD PTR [esi+0x6a]
  426047:	lea    ebp,[eax+0x4e]
  42604a:	into   
  42604b:	pop    ss
  42604c:	push   eax
  42604d:	mov    edx,0x3aa12ff5
  426052:	mov    al,ds:0xeeed1658
  426057:	adc    ebp,DWORD PTR [ebp-0x5c]
  42605a:	fidiv  DWORD PTR [ebx-0x75]
  42605d:	shr    DWORD PTR [edx-0x18dcca22],0x5e
  426064:	and    dl,0x42
  426067:	enter  0xa7f6,0x94
  42606b:	xor    al,0x52
  42606d:	test   DWORD PTR [esi+ebx*8+0x7265e272],esi
  426074:	xor    BYTE PTR [eax-0x262bdb4b],bl
  42607a:	test   DWORD PTR gs:[ebx],0x9895a154
  426081:	in     al,0x8e
  426083:	and    DWORD PTR [eax],0x7
  426086:	iret   
  426087:	in     al,dx
  426088:	add    edx,DWORD PTR [esi-0x14]
  42608b:	test   eax,0x14711876
  426090:	lea    edi,[esi-0x3ce92445]
  426096:	jne    0x4260ff
  426098:	lods   al,BYTE PTR ds:[esi]
  426099:	add    eax,0xbf0023d1
  42609e:	int3   
  42609f:	iret   
  4260a0:	test   DWORD PTR [ebp+esi*4+0x2e7949e2],esi
  4260a7:	dec    ebp
  4260a8:	retf   0x648d
  4260ab:	call   0xad69:0x1f9398a
  4260b2:	or     eax,0x2ff6f302
  4260b7:	es enter 0x6960,0xbd
  4260bc:	dec    ebp
  4260bd:	fdiv   DWORD PTR [edi+edx*8-0x40]
  4260c1:	inc    esp
  4260c2:	hlt    
  4260c3:	dec    edx
  4260c4:	loop   0x4260bb
  4260c6:	inc    edx
  4260c7:	dec    ecx
  4260c8:	scas   eax,DWORD PTR es:[edi]
  4260c9:	das    
  4260ca:	adc    ah,ch
  4260cc:	push   esp
  4260cd:	and    ch,al
  4260cf:	sti    
  4260d0:	adc    al,0xc5
  4260d2:	mov    ebp,0x66305542
  4260d7:	sbb    al,0x7e
  4260d9:	inc    ebp
  4260da:	jae    0x426072
  4260dc:	jns    0x4260ca
  4260de:	(bad)  
  4260df:	cmp    eax,0x83ec2942
  4260e4:	or     eax,0xf61a8f49
  4260e9:	lea    esp,[esi+0x4133a83b]
  4260ef:	sub    BYTE PTR [eax-0x784f0c6e],0x75
  4260f6:	mov    edx,0xe8607014
  4260fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260fc:	and    dh,cl
  4260fe:	and    al,0xdb
  426100:	lods   eax,DWORD PTR ds:[esi]
  426101:	or     ecx,DWORD PTR [edi-0x20]
  426104:	jmp    0xc7d4:0x7ed9355a
  42610b:	stos   DWORD PTR es:[edi],eax
  42610c:	push   ebx
  42610d:	xor    al,0x8d
  42610f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426110:	(bad)  
  426112:	dec    esi
  426113:	cdq    
  426114:	and    bh,BYTE PTR [ebp-0x2ad4c90c]
  42611a:	sbb    eax,0x9beaa56
  42611f:	adc    DWORD PTR [edx+0x4b9a4397],0xe818466b
  426129:	popa   
  42612a:	sahf   
  42612b:	lahf   
  42612c:	stc    
  42612d:	pop    ebp
  42612e:	pusha  
  42612f:	xchg   DWORD PTR [edx-0x3342a370],ecx
  426135:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  426137:	push   ebp
  426138:	stos   BYTE PTR es:[edi],al
  426139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42613a:	and    BYTE PTR [ebp-0x75ca40dc],cl
  426140:	pop    esi
  426141:	mov    ch,BYTE PTR [eax]
  426143:	xor    al,0x15
  426145:	out    dx,al
  426146:	pop    esp
  426147:	std    
  426148:	inc    esi
  426149:	test   cl,ah
  42614b:	and    eax,0x30771256
  426150:	cs mov ebx,0xaa8c78a9
  426156:	cmp    ebp,DWORD PTR [edi]
  426158:	sti    
  426159:	and    eax,0x86333fa
  42615e:	xor    DWORD PTR [eax+0x120baa74],edi
  426164:	add    ebp,DWORD PTR [eax]
  426166:	daa    
  426167:	stos   DWORD PTR es:[edi],eax
  426168:	test   eax,0x8008da39
  42616d:	ja     0x42612c
  42616f:	iret   
  426170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426171:	cdq    
  426172:	aaa    
  426173:	dec    esi
  426174:	mov    ds:0xddb7b17,eax
  426179:	retf   
  42617a:	jecxz  0x4261f0
  42617c:	push   cs
  42617d:	int3   
  42617e:	es or  eax,0x1d86d6a9
  426184:	xchg   DWORD PTR [esi-0x2],esp
  426187:	and    al,0xcb
  426189:	in     al,0x9d
  42618b:	cmp    ah,bh
  42618d:	pop    ds
  42618e:	fwait
  42618f:	dec    ebx
  426190:	mov    cl,0x6
  426192:	leave  
  426193:	inc    edx
  426194:	lods   al,BYTE PTR ds:[esi]
  426195:	test   eax,0xe3e8151c
  42619a:	iret   
  42619b:	sti    
  42619c:	xchg   esp,eax
  42619d:	dec    edx
  42619e:	sbb    eax,0xae315bfa
  4261a3:	scas   eax,DWORD PTR es:[edi]
  4261a4:	leave  
  4261a5:	dec    ecx
  4261a6:	mov    esp,0x4474f03f
  4261ab:	and    al,0x39
  4261ad:	pop    esi
  4261ae:	and    DWORD PTR [ecx-0x73],eax
  4261b1:	sub    DWORD PTR [edi-0x12],ecx
  4261b4:	retf   
  4261b5:	cmp    bl,bl
  4261b7:	xlat   BYTE PTR ds:[ebx]
  4261b8:	out    0x54,al
  4261ba:	sub    al,0x3f
  4261bc:	pop    ecx
  4261bd:	mul    DWORD PTR [ebx]
  4261bf:	pop    edx
  4261c0:	iret   
  4261c1:	sbb    BYTE PTR [esp+ebx*8],0x96
  4261c5:	int3   
  4261c6:	enter  0x9c,0x43
  4261ca:	inc    edi
  4261cb:	jae    0x426188
  4261cd:	xchg   ecx,eax
  4261ce:	and    DWORD PTR [edx+0x5d],esi
  4261d1:	cmp    DWORD PTR [ecx+esi*4],esi
  4261d4:	xor    BYTE PTR [edx+0x65],dh
  4261d7:	shl    BYTE PTR [ecx-0x77],0x36
  4261db:	ins    BYTE PTR es:[edi],dx
  4261dc:	mov    ebx,0xccf6226c
  4261e1:	jp     0x426165
  4261e3:	rol    edi,1
  4261e5:	hlt    
  4261e6:	rcl    dl,1
  4261e8:	mov    ebp,eax
  4261ea:	jmp    0x105f9d6b
  4261ef:	into   
  4261f0:	mov    ch,0x6f
  4261f2:	push   eax
  4261f3:	ja     0x42626e
  4261f5:	fwait
  4261f6:	ins    DWORD PTR es:[edi],dx
  4261f7:	mov    bl,0x52
  4261f9:	inc    ebx
  4261fa:	mov    esp,0x2d1c21aa
  4261ff:	daa    
  426200:	lock test eax,0x4ff5bc7a
  426206:	popf   
  426207:	gs cld 
  426209:	push   edi
  42620a:	pop    eax
  42620b:	stc    
  42620c:	or     BYTE PTR ds:0xbb2cbc3e,0x22
  426213:	(bad)  
  426214:	sar    ah,cl
  426216:	loope  0x4261c8
  426218:	cmp    dl,dl
  42621a:	in     al,dx
  42621b:	xchg   DWORD PTR [edi-0x29],esp
  42621e:	sbb    eax,0x1864cfec
  426223:	fmul   QWORD PTR [ecx]
  426225:	icebp  
  426226:	stos   DWORD PTR es:[edi],eax
  426227:	xor    BYTE PTR [edx+0x7f],bl
  42622a:	jae    0x42629f
  42622c:	sbb    DWORD PTR [esi+0x4fc888c],ebp
  426232:	pop    ss
  426233:	push   es
  426234:	push   0x2ab38f92
  426239:	inc    eax
  42623a:	mov    eax,0x38776c29
  42623f:	daa    
  426240:	pop    ebx
  426241:	daa    
  426242:	fs imul esp
  426245:	les    edx,FWORD PTR [eax-0x1ff41e84]
  42624b:	sbb    al,0x19
  42624d:	aas    
  42624e:	jo     0x426267
  426250:	rcr    DWORD PTR ds:0x2a2a7342,0xb7
  426257:	fwait
  426258:	icebp  
  426259:	lahf   
  42625a:	sahf   
  42625b:	mov    ecx,0xea580880
  426260:	retf   
  426261:	sub    eax,0x1a6a1fe
  426266:	pop    ecx
  426267:	jnp    0x4262e1
  426269:	mov    edx,0xc692cc18
  42626e:	stc    
  42626f:	or     BYTE PTR [esp+esi*1+0x74b727b],0x62
  426277:	jnp    0x4262d3
  426279:	test   al,0x2f
  42627b:	pop    esi
  42627c:	dec    edx
  42627d:	add    BYTE PTR [eax],al
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	adc    al,0xc9
  426290:	push   ebp
  426291:	in     eax,dx
  426292:	enter  0x1da,0x0
  426296:	repz add al,0x0
  426299:	add    BYTE PTR [edi+0x33],dl
  42629c:	jb     0x4262e3
  42629e:	sbb    al,0x9b
  4262a0:	adc    BYTE PTR [ecx],ah
  4262a2:	push   edi
  4262a3:	xor    eax,0xd721dfa4
  4262a8:	call   0x759f:0xd26919a3
  4262af:	mov    DWORD PTR [edi],ebx
  4262b1:	inc    esp
  4262b2:	imul   DWORD PTR [eax+0x12]
  4262b5:	xchg   DWORD PTR [ecx+0x77],esp
  4262b8:	(bad)  
  4262b9:	xchg   edi,eax
  4262ba:	or     DWORD PTR [edx-0x49a3a26b],0xffffffde
  4262c1:	test   DWORD PTR [ebp+edx*4+0x6e17012e],edx
  4262c8:	jge    0x426303
  4262ca:	sbb    eax,DWORD PTR [edi+ecx*8+0x75c1c2da]
  4262d1:	sbb    ebx,eax
  4262d3:	retf   0xe1cc
  4262d6:	addr16 aam 0xb
  4262d9:	js     0x426289
  4262db:	push   ebx
  4262dc:	rcr    DWORD PTR [ebx-0x31637cba],1
  4262e2:	loope  0x426354
  4262e4:	mov    edi,0x432b03d
  4262e9:	scas   eax,DWORD PTR es:[edi]
  4262ea:	mov    dl,0x4b
  4262ec:	sub    ah,BYTE PTR [edx]
  4262ee:	clc    
  4262ef:	dec    ebp
  4262f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cmc    
  4262f2:	mov    bh,0x7f
  4262f4:	or     cl,bh
  4262f6:	out    dx,al
  4262f7:	pushw  es
  4262f9:	and    ecx,eax
  4262fb:	mov    esi,0x6a81b370
  426300:	dec    ebp
  426301:	popf   
  426302:	xlat   BYTE PTR ds:[ebx]
  426303:	arpl   si,si
  426305:	and    ch,BYTE PTR [esi+0x2a340587]
  42630b:	adc    bl,bl
  42630d:	cmp    al,0xc3
  42630f:	xor    DWORD PTR [ebp-0x79],esp
  426312:	call   0xe70ff371
  426317:	pop    ebp
  426318:	test   al,0xd4
  42631a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42631b:	repz fstenv gs:[edx]
  426320:	icebp  
  426321:	jl     0x42638d
  426323:	je     0x4262fa
  426325:	sbb    eax,0x2d37edec
  42632a:	(bad)  
  42632b:	cdq    
  42632c:	dec    edx
  42632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632e:	sub    ebp,DWORD PTR fs:[edi-0x542f0b67]
  426335:	cdq    
  426336:	push   edx
  426337:	data16 in al,0x6
  42633a:	mov    edx,0x3ba4674b
  42633f:	add    eax,0xdacf0b8c
  426344:	mov    BYTE PTR [ebp-0x42b8e062],al
  42634a:	fimul  WORD PTR [ebx+0x79]
  42634d:	and    DWORD PTR [edx],0xd6c3f83e
  426353:	test   eax,0x1f39efd7
  426358:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635a:	pop    ebx
  42635b:	in     eax,0xa6
  42635d:	mul    ecx
  42635f:	mov    ebx,0x7ded9f41
  426364:	aam    0x31
  426366:	jne    0x4262fa
  426368:	ins    DWORD PTR es:[edi],dx
  426369:	add    eax,0xc85f31c4
  42636e:	bts    DWORD PTR [edi+0x613310bc],esp
  426375:	outs   dx,DWORD PTR ds:[esi]
  426376:	sub    esp,edi
  426378:	or     bl,bl
  42637a:	and    edx,DWORD PTR [esi]
  42637c:	aaa    
  42637d:	push   ebp
  42637e:	imul   esi,DWORD PTR [edx-0x164a3c6e],0xffffffaf
  426385:	xchg   edi,eax
  426386:	das    
  426387:	push   edx
  426388:	out    0x5,eax
  42638a:	test   BYTE PTR [edi-0x2f],bl
  42638d:	stos   BYTE PTR es:[edi],al
  42638e:	mov    DWORD PTR [edi+ebp*4-0x58],esi
  426392:	cld    
  426393:	adc    al,0xe8
  426395:	(bad)  
  426396:	cli    
  426397:	sbb    DWORD PTR [ebp-0x24],ecx
  42639a:	pop    esp
  42639b:	arpl   cx,cx
  42639d:	dec    ebx
  42639e:	inc    eax
  42639f:	and    ebx,DWORD PTR [ebp+0x6e7c7184]
  4263a5:	sti    
  4263a6:	(bad)  
  4263a7:	xor    eax,DWORD PTR [edx+edi*1]
  4263aa:	mov    al,0x3f
  4263ac:	(bad)  
  4263ae:	lods   eax,DWORD PTR ds:[esi]
  4263af:	jmp    FWORD PTR [ecx-0x4a32b322]
  4263b5:	cs dec edx
  4263b7:	cmp    DWORD PTR [eax-0x3c3541c5],esi
  4263bd:	sti    
  4263be:	int3   
  4263bf:	rcr    ecx,0x21
  4263c2:	fnstsw WORD PTR [esi]
  4263c4:	and    BYTE PTR [ecx-0x6c],dh
  4263c7:	hlt    
  4263c8:	les    ebx,FWORD PTR [ebx+0x5a]
  4263cb:	daa    
  4263cc:	scas   eax,DWORD PTR es:[edi]
  4263cd:	test   DWORD PTR es:[ebx*2-0x553677],eax
  4263d5:	push   esi
  4263d6:	sub    eax,0x5db87fdb
  4263db:	and    ebp,edx
  4263dd:	ds add esp,ecx
  4263e0:	or     BYTE PTR [ecx],0xf2
  4263e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e4:	lods   al,BYTE PTR ds:[esi]
  4263e5:	mov    dl,0xf8
  4263e7:	sub    esp,DWORD PTR [eax]
  4263e9:	cmp    al,0x0
  4263eb:	mov    edi,0xfb9dcf8b
  4263f0:	inc    ebx
  4263f1:	mov    ah,0xee
  4263f3:	pop    edi
  4263f4:	or     ch,dl
  4263f6:	mov    es,WORD PTR [edi]
  4263f8:	inc    edi
  4263f9:	adc    eax,0x9c014704
  4263fe:	add    al,0x9b
  426400:	out    dx,al
  426401:	mov    eax,ds:0xbc93c80f
  426406:	jnp    0x426453
  426408:	inc    esp
  426409:	inc    edx
  42640a:	xor    al,0x35
  42640c:	fwait
  42640d:	sub    esi,DWORD PTR ds:0x2c9a1d64
  426413:	cmp    DWORD PTR [eax],edx
  426415:	in     al,dx
  426416:	lds    edi,FWORD PTR [esi]
  426418:	inc    edx
  426419:	ficomp DWORD PTR [ecx]
  42641b:	jo     0x4263c7
  42641d:	mov    ds:0x12cbe22,eax
  426422:	shr    BYTE PTR [ecx],cl
  426424:	push   esi
  426425:	(bad)  
  426426:	adc    eax,0x49731634
  42642b:	loop   0x4264a0
  42642d:	cmp    al,0x4f
  42642f:	adc    DWORD PTR [eax],esi
  426431:	sub    al,0xa7
  426433:	stos   BYTE PTR es:[edi],al
  426434:	mov    al,BYTE PTR [esi]
  426436:	add    edi,DWORD PTR [edx-0x12]
  426439:	jmp    0xaa281cc5
  42643e:	sub    eax,0xf29883f6
  426443:	mov    ebp,es
  426445:	cmp    al,0x3
  426447:	jmp    0x9590:0xac04c4a4
  42644e:	in     al,0xdd
  426450:	sub    esi,DWORD PTR [ebp+0x35]
  426453:	sbb    edi,DWORD PTR [edx-0x3a]
  426456:	out    dx,eax
  426457:	neg    eax
  426459:	adc    esp,DWORD PTR [eax+0x2da0cb6a]
  42645f:	icebp  
  426460:	or     DWORD PTR [eax+0x68],ebx
  426463:	test   bh,0x30
  426466:	jne    0x4264b1
  426468:	int    0x11
  42646a:	cmp    dl,cl
  42646c:	scas   al,BYTE PTR es:[edi]
  42646d:	fnstcw WORD PTR [eax+0x1bb6f5d8]
  426473:	pop    ss
  426474:	popf   
  426475:	les    edi,FWORD PTR [ebx]
  426477:	inc    eax
  426478:	sbb    eax,0x8a2f0d45
  42647d:	mov    edx,0x3640ad4f
  426482:	fisubr DWORD PTR [esi+0x60405655]
  426488:	call   0x6a4a9c2b
  42648d:	repz std 
  42648f:	iret   
  426490:	mov    WORD PTR [esi],gs
  426492:	neg    BYTE PTR [edx+0x20]
  426495:	outs   dx,BYTE PTR ds:[esi]
  426496:	mov    cl,0x4
  426498:	stos   BYTE PTR es:[edi],al
  426499:	jns    0x426461
  42649b:	inc    esi
  42649c:	shl    DWORD PTR [ecx-0x4e],1
  42649f:	aad    0x5
  4264a1:	leave  
  4264a2:	pop    ebx
  4264a3:	out    dx,eax
  4264a4:	push   ebp
  4264a5:	lds    esi,FWORD PTR [esi+0x69]
  4264a8:	push   edx
  4264a9:	fnstenv [ebx]
  4264ab:	test   ebx,ecx
  4264ad:	mov    ecx,0xd060b415
  4264b2:	retf   
  4264b3:	aad    0x5
  4264b5:	cwde   
  4264b6:	mov    esp,0x6cc1fcd3
  4264bb:	xlat   BYTE PTR ds:[ebx]
  4264bc:	xchg   ebx,eax
  4264bd:	xor    al,0x8b
  4264bf:	test   eax,0x9ea3ebfe
  4264c4:	fisttp WORD PTR [ecx+eiz*4]
  4264c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264c8:	pop    edi
  4264c9:	lds    eax,FWORD PTR [eax-0x2d]
  4264cc:	cmp    ecx,DWORD PTR [ebx]
  4264ce:	scas   eax,DWORD PTR es:[edi]
  4264cf:	sbb    eax,0x1a3c3569
  4264d4:	jle    0x426481
  4264d6:	int    0x85
  4264d8:	cmp    dh,BYTE PTR [ecx]
  4264da:	ss stc 
  4264dc:	das    
  4264dd:	mov    bh,BYTE PTR [edx-0x3227695e]
  4264e3:	aad    0x76
  4264e5:	rcl    edx,0x26
  4264e8:	mov    BYTE PTR [edi+0x1c],ch
  4264eb:	sub    cl,BYTE PTR [edx+0xc]
  4264ee:	sub    eax,0xb2a10c39
  4264f3:	int3   
  4264f4:	xchg   ecx,eax
  4264f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264f6:	jbe    0x426550
  4264f8:	push   ds
  4264f9:	sub    DWORD PTR ss:[esi],ebx
  4264fc:	push   ds
  4264fd:	setae  BYTE PTR [ecx-0xc]
  426501:	xchg   esi,eax
  426502:	mov    bl,0x80
  426504:	out    dx,al
  426505:	outs   dx,DWORD PTR ds:[esi]
  426506:	add    BYTE PTR [edx+0x15],0x18
  42650a:	and    DWORD PTR [ebx+ebp*1-0x70],esi
  42650e:	jb     0x426537
  426510:	pushf  
  426511:	inc    ebx
  426512:	and    ebx,DWORD PTR [edx-0x330b41a6]
  426518:	mov    DWORD PTR [esi],ebx
  42651a:	cli    
  42651b:	and    eax,0x84b228a7
  426520:	pop    edi
  426521:	aam    0x9
  426523:	fs loope 0x4264c4
  426526:	cmp    DWORD PTR [eax-0x40e71bda],0x5fc2632
  426530:	(bad)  
  426531:	cli    
  426532:	loope  0x426512
  426534:	fnop   
  426536:	sbb    al,0x63
  426538:	dec    edx
  426539:	loope  0x426570
  42653b:	cdq    
  42653c:	xchg   BYTE PTR [edi+0x7c4f5abf],bh
  426542:	xor    ebx,esp
  426544:	or     al,0x38
  426546:	mov    ds:0x4496aab7,al
  42654b:	stc    
  42654c:	xor    BYTE PTR ds:0x7005a417,0xf5
  426553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426554:	or     al,0xd8
  426556:	(bad)  
  426557:	mov    sp,0xc839
  42655b:	xchg   esp,eax
  42655c:	mov    al,0xde
  42655e:	outs   dx,DWORD PTR ds:[esi]
  42655f:	dec    edi
  426560:	mov    ebp,0xb5aa47c8
  426565:	test   DWORD PTR [esi+ebx*4-0x4f],0x45dc2a11
  42656d:	mov    esp,0xa904a7b6
  426572:	push   ebp
  426573:	sub    dl,BYTE PTR [ebp+0x74]
  426576:	(bad)  
  426577:	lods   al,BYTE PTR ds:[esi]
  426578:	jne    0x4265aa
  42657a:	dec    edx
  42657b:	sub    BYTE PTR [edx+0x47],bl
  42657e:	add    ecx,DWORD PTR [esp+eax*2+0xb86e833]
  426585:	int3   
  426586:	arpl   WORD PTR [esi+eax*4+0x184b9103],si
  42658d:	test   DWORD PTR [edi],ecx
  42658f:	add    DWORD PTR [edx-0x11],eax
  426592:	aas    
  426593:	data16 out 0xd1,al
  426596:	inc    esp
  426597:	mov    dl,0x89
  426599:	dec    ebp
  42659a:	call   0x6fc0788b
  42659f:	push   esp
  4265a0:	jb     0x426539
  4265a2:	dec    eax
  4265a3:	sub    DWORD PTR [edi],esi
  4265a5:	mov    esi,0x500ab2b9
  4265aa:	mov    eax,0x3a7fa82f
  4265af:	sahf   
  4265b0:	cmp    ah,BYTE PTR [ebx]
  4265b2:	mov    DWORD PTR [esi],esi
  4265b4:	xchg   ebx,eax
  4265b5:	outs   dx,DWORD PTR fs:[esi]
  4265b7:	shl    BYTE PTR [ecx],cl
  4265b9:	pushf  
  4265ba:	aad    0x35
  4265bc:	lock push ecx
  4265be:	in     eax,dx
  4265bf:	dec    ecx
  4265c0:	repnz invd 
  4265c3:	imul   edi,DWORD PTR [eax+0x58df15a9],0xb14ba3f4
  4265cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265ce:	aas    
  4265cf:	test   DWORD PTR [edi],0x9ea005a
  4265d5:	sbb    al,0x7
  4265d7:	sub    DWORD PTR [ebx-0x36],ebp
  4265da:	pop    esi
  4265db:	lea    esp,[ebx]
  4265dd:	cmp    DWORD PTR [edi],esp
  4265df:	jle    0x426573
  4265e1:	jo     0x426595
  4265e3:	int    0x76
  4265e5:	xor    al,BYTE PTR [edx+0x31]
  4265e8:	inc    esi
  4265e9:	imul   edx,DWORD PTR [edx-0x3318f8ec],0xc991fa2f
  4265f3:	lock sub edx,DWORD PTR [edx-0x3bd19b5c]
  4265fa:	jae    0x4265ad
  4265fc:	xchg   edi,eax
  4265fd:	jmp    0x44a5a8d5
  426602:	ins    BYTE PTR es:[edi],dx
  426603:	add    ecx,DWORD PTR [ecx]
  426605:	mov    dh,dh
  426607:	push   0x657e0e9d
  42660c:	seto   BYTE PTR [ebx+0x6b]
  426610:	jge    0x426638
  426612:	xchg   edx,eax
  426613:	pop    esp
  426614:	xchg   edx,eax
  426615:	and    al,0x2
  426617:	out    0x68,eax
  426619:	add    DWORD PTR [ebp-0x6ec41783],esi
  42661f:	lahf   
  426620:	or     al,0x1
  426622:	adc    al,BYTE PTR [edx+0x251ad292]
  426628:	mov    al,0x0
  42662a:	data16 scas al,BYTE PTR es:[edi]
  42662c:	xchg   ebx,eax
  42662d:	mov    edi,0x306a5ed3
  426632:	jmp    0x426658
  426634:	bound  eax,QWORD PTR [ebp+0x16]
  426637:	ret    
  426638:	idiv   BYTE PTR [esi+0x3043b1b3]
  42663e:	bound  edi,QWORD PTR [edi+0x22]
  426641:	test   eax,0x56e0c3f9
  426646:	out    0x4b,eax
  426648:	addr16 call 0xa56bcc3b
  42664e:	jmp    0x192e:0xe72f738b
  426655:	push   es
  426656:	mov    ebp,0x207a83e6
  42665b:	sbb    al,0x38
  42665d:	and    eax,0xbe9f22ec
  426662:	xor    BYTE PTR [eax],cl
  426664:	jp     0x4266c7
  426666:	mov    al,0xa1
  426668:	mov    ds:0x84de4f25,eax
  42666d:	jp     0x42660c
  42666f:	lock add dh,cl
  426672:	(bad)  
  426673:	jno    0x426609
  426675:	mov    al,ds:0x4178ce8a
  42667a:	mov    eax,ds:0x5a5cbb0d
  42667f:	jg     0x4266fa
  426681:	clc    
  426682:	shl    ah,1
  426684:	xchg   esp,eax
  426685:	dec    ecx
  426686:	fwait
  426687:	sub    bh,BYTE PTR [ebp+0x5f020a5b]
  42668d:	ror    BYTE PTR [eax],1
  42668f:	(bad)  
  426690:	(bad)  
  426692:	es aam 0xcb
  426695:	push   0x2f
  426697:	fisubr WORD PTR [edx+eax*8-0x70b22ca2]
  42669e:	mov    DWORD PTR [ebp-0x79],edx
  4266a1:	adc    DWORD PTR [ecx],esi
  4266a3:	ins    BYTE PTR es:[edi],dx
  4266a4:	inc    dh
  4266a6:	into   
  4266a7:	retf   
  4266a8:	inc    edx
  4266a9:	ds push es
  4266ab:	sbb    ah,BYTE PTR [eax+esi*1-0x1]
  4266af:	xchg   esp,eax
  4266b0:	cwde   
  4266b1:	xchg   esp,eax
  4266b2:	test   eax,0x4e5a17c2
  4266b7:	dec    eax
  4266b8:	dec    ecx
  4266b9:	xchg   esi,eax
  4266ba:	push   eax
  4266bb:	or     cl,BYTE PTR [ebp+0x70]
  4266be:	mov    WORD PTR [ecx],cs
  4266c0:	mov    DWORD PTR [ebx+0xc],0x446d930b
  4266c7:	daa    
  4266c8:	sbb    DWORD PTR [edi],eax
  4266ca:	mov    al,ds:0x33a94f40
  4266cf:	add    al,0x69
  4266d1:	outs   dx,DWORD PTR ds:[esi]
  4266d2:	mov    ds:0xe81ddbc0,al
  4266d7:	ficom  WORD PTR [eax+0x1a]
  4266da:	cld    
  4266db:	or     esi,DWORD PTR [eax-0xa]
  4266de:	jp     0x426679
  4266e0:	outs   dx,DWORD PTR ds:[esi]
  4266e1:	sbb    ebx,eax
  4266e3:	dec    ecx
  4266e4:	stc    
  4266e5:	and    eax,0x80412a94
  4266ea:	pop    ebx
  4266eb:	and    al,BYTE PTR [esi]
  4266ed:	sbb    BYTE PTR [eax-0x2f],ch
  4266f0:	clc    
  4266f1:	jmp    0xbbf38cb2
  4266f6:	sbb    DWORD PTR [edx-0x75],0xffffff8b
  4266fa:	inc    ecx
  4266fb:	(bad)  
  4266fd:	sub    eax,0x378690c6
  426702:	(bad)  
  426703:	mov    eax,0xf5934dc1
  426708:	mov    ds:0x85d07e59,al
  42670d:	or     al,0xfc
  42670f:	push   edx
  426710:	loop   0x4266c7
  426712:	in     al,dx
  426713:	add    eax,0x85a7851c
  426718:	mov    ds:0xb0eacb78,al
  42671d:	or     cl,0x96
  426720:	sbb    BYTE PTR [edx],bh
  426722:	stc    
  426723:	(bad)  
  426724:	idiv   BYTE PTR [esi-0x61b3ce9e]
  42672a:	xchg   ecx,eax
  42672b:	sub    al,0x12
  42672d:	aam    0x7a
  42672f:	and    BYTE PTR ds:0x6bbec665,ah
  426735:	ss je  0x4266db
  426738:	ror    BYTE PTR ds:0x66b62d4e,0x98
  42673f:	and    al,0x9e
  426741:	das    
  426742:	cmc    
  426743:	(bad)  
  426744:	jo     0x426781
  426746:	rol    DWORD PTR [edi+0x50],cl
  426749:	hlt    
  42674a:	sahf   
  42674b:	jmp    0x4266f6
  42674d:	test   eax,0x2ec49413
  426752:	test   eax,0x9d69b653
  426757:	pushf  
  426758:	jecxz  0x42674f
  42675a:	mov    esp,0xe27123d7
  42675f:	lds    ebx,FWORD PTR ds:0x93430117
  426765:	adc    BYTE PTR es:[edx+ebx*2-0xf],cl
  42676a:	repz push ds
  42676c:	ins    BYTE PTR es:[edi],dx
  42676d:	push   DWORD PTR [ebp+0x6b]
  426770:	bound  edi,QWORD PTR [ebx]
  426772:	push   0x220eb94e
  426777:	cli    
  426778:	jmp    0xce024df1
  42677d:	inc    ebp
  42677e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426780:	and    bl,bl
  426782:	outs   dx,BYTE PTR ds:[esi]
  426783:	xor    DWORD PTR ds:0xdb6bf4f5,edi
  426789:	scas   eax,DWORD PTR es:[edi]
  42678a:	mov    ecx,0x794c
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	dec    eax
  42679f:	mov    bh,0xcf
  4267a1:	dec    eax
  4267a2:	mov    ebx,0xf30001df
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [ebx],dh
  4267ab:	sub    bh,ch
  4267ad:	fnstsw WORD PTR [edi+0x3e591a4f]
  4267b3:	jo     0x4267d7
  4267b5:	fcomp  QWORD PTR [eax+0xd]
  4267b8:	jb     0x42677a
  4267ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267bb:	xchg   DWORD PTR [ecx+esi*1],ebp
  4267be:	(bad)  
  4267bf:	pop    ss
  4267c0:	inc    ecx
  4267c1:	test   esp,ecx
  4267c3:	fcmovnb st,st(1)
  4267c5:	sub    eax,0x3e3fec11
  4267ca:	cmp    DWORD PTR [eax],0xffffff92
  4267cd:	scas   al,BYTE PTR es:[edi]
  4267ce:	sbb    bl,cl
  4267d0:	mov    ebp,0x7c2da532
  4267d5:	mov    ecx,0x919a662d
  4267da:	outs   dx,DWORD PTR ds:[esi]
  4267db:	shl    DWORD PTR [ecx],1
  4267dd:	(bad)  
  4267df:	inc    edx
  4267e0:	dec    ebx
  4267e1:	fcomp  DWORD PTR [ecx+0x179d3635]
  4267e7:	sub    eax,DWORD PTR [edx-0x9a1b01b]
  4267ed:	out    dx,al
  4267ee:	inc    eax
  4267ef:	mov    dl,0xc8
  4267f1:	sub    esi,DWORD PTR [ebp+edi*8+0x7462d0d9]
  4267f8:	imul   esp,DWORD PTR ds:0x21b9dae,0xce051229
  426802:	dec    edi
  426803:	mov    bh,0xf5
  426805:	inc    esi
  426806:	and    ecx,esi
  426808:	cmp    ch,BYTE PTR [ebx+0x11a248b8]
  42680e:	or     al,0xe2
  426810:	int    0xb2
  426812:	sbb    edx,DWORD PTR ds:0x114f7a18
  426818:	pushf  
  426819:	mov    ebx,0x8fc35948
  42681e:	mov    cl,0x6e
  426820:	popa   
  426821:	stos   WORD PTR es:[edi],ax
  426823:	cwde   
  426824:	jb     0x426813
  426826:	sub    al,0x71
  426828:	popf   
  426829:	mov    ah,ah
  42682b:	shr    esi,cl
  42682d:	lahf   
  42682e:	lock dec eax
  426830:	dec    eax
  426831:	cmp    dl,BYTE PTR [edi+0x31]
  426834:	adc    DWORD PTR [ecx+ebp*8],0x4e
  426838:	call   0x8c36:0xf09c05ea
  42683f:	sbb    eax,0x96b9e658
  426844:	fisub  DWORD PTR [edi-0x25085903]
  42684a:	repz in eax,dx
  42684c:	call   0x4f0c:0xb7c371e1
  426853:	push   ecx
  426854:	ret    0x535b
  426857:	call   0xc052d017
  42685c:	mov    cs,edi
  42685e:	push   ecx
  42685f:	mov    bh,0xa3
  426861:	jae    0x4268cc
  426863:	loopne 0x4268bf
  426865:	inc    edi
  426866:	outs   dx,BYTE PTR ds:[esi]
  426867:	lea    edi,[ecx-0x6798b70f]
  42686d:	mov    ah,0xb7
  42686f:	mov    al,ds:0x278bc920
  426874:	sub    ecx,ebx
  426876:	jno    0x426866
  426878:	aam    0xcf
  42687a:	xchg   dh,ch
  42687c:	pop    ecx
  42687d:	dec    ecx
  42687e:	daa    
  42687f:	repz fimul WORD PTR [esi+0x77]
  426883:	push   esp
  426884:	fsubr  QWORD PTR [esi+0xa]
  426887:	fnsave [ecx-0x5d]
  42688a:	sbb    eax,0x8addc5e0
  42688f:	test   DWORD PTR [edx+ebp*4],ecx
  426892:	push   esi
  426893:	dec    esp
  426894:	add    al,0x23
  426896:	cmp    bl,bl
  426898:	bsf    edi,DWORD PTR [eax+0x6ef722ea]
  42689f:	outs   dx,DWORD PTR ds:[esi]
  4268a0:	lods   al,BYTE PTR ds:[esi]
  4268a1:	mov    dh,0x90
  4268a3:	cdq    
  4268a4:	fs rep stos BYTE PTR es:[edi],al
  4268a7:	test   BYTE PTR [ecx+edi*2],cl
  4268aa:	test   al,0x17
  4268ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268ad:	sub    eax,0x5e75d8b
  4268b2:	rcr    dh,cl
  4268b4:	test   ebp,edx
  4268b6:	leave  
  4268b7:	pop    edx
  4268b8:	lea    edx,[edi]
  4268ba:	cli    
  4268bb:	mov    ds:0x91514400,eax
  4268c0:	xchg   edx,eax
  4268c1:	mov    ch,0x2d
  4268c3:	dec    esi
  4268c4:	fsubr  DWORD PTR [eax+0x143c18]
  4268ca:	xor    eax,esi
  4268cc:	(bad)  
  4268cd:	jge    0x4268f8
  4268cf:	inc    DWORD PTR [edi+0x46]
  4268d2:	imul   edx,DWORD PTR [esi],0x1ecb6ac8
  4268d8:	lods   al,BYTE PTR ds:[esi]
  4268d9:	cmp    eax,0x52cf94e
  4268de:	mov    ecx,0x5c592efd
  4268e3:	or     DWORD PTR [eax],esp
  4268e5:	mov    ds:0xe668a3e5,eax
  4268ea:	xchg   edx,eax
  4268eb:	lods   eax,DWORD PTR ds:[esi]
  4268ec:	pusha  
  4268ed:	je     0x4268dc
  4268ef:	mov    cl,0x96
  4268f1:	sbb    al,BYTE PTR [ebx]
  4268f3:	and    BYTE PTR [ecx+0x10274119],0x7
  4268fa:	pop    ss
  4268fb:	iret   
  4268fc:	jne    0x4268ab
  4268fe:	or     DWORD PTR [ebx],esi
  426900:	jle    0x4268b3
  426902:	pop    edx
  426903:	inc    DWORD PTR [eax]
  426905:	std    
  426906:	jbe    0x4268b6
  426908:	rol    DWORD PTR [edi-0x3c],0xcb
  42690c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42690d:	mov    BYTE PTR ss:[esi+0x52cb331b],al
  426914:	fcomip st,st(0)
  426916:	mov    dl,0xdb
  426918:	aaa    
  426919:	loop   0x4268ef
  42691b:	mov    WORD PTR [edi-0x599ff614],ss
  426921:	sbb    al,0xe8
  426923:	mov    ebp,0x23de830c
  426928:	add    BYTE PTR [eax-0x10],ah
  42692b:	cmp    BYTE PTR [ecx],0x9
  42692e:	clc    
  42692f:	repz mov ch,dh
  426932:	or     DWORD PTR es:[edx],edi
  426935:	sbb    edi,DWORD PTR [edx+0x5701ed10]
  42693b:	mov    ds:0x7c6c7de1,al
  426940:	test   DWORD PTR [edx],0x910f18ac
  426946:	or     eax,0xb6f0f84e
  42694b:	outs   dx,BYTE PTR ds:[esi]
  42694c:	dec    esp
  42694d:	mov    esp,edx
  42694f:	ds pop ds
  426951:	lods   eax,DWORD PTR ds:[esi]
  426952:	mov    edx,0xaaa9fc22
  426957:	shl    DWORD PTR [esi+0x5c],0x2f
  42695b:	adc    al,0xbd
  42695d:	scas   al,BYTE PTR es:[edi]
  42695e:	and    ch,ch
  426960:	adc    DWORD PTR [eax],ebp
  426962:	push   ds
  426963:	and    eax,0xbd1e0e08
  426968:	aaa    
  426969:	cdq    
  42696a:	inc    esi
  42696b:	sbb    DWORD PTR [ecx+ebp*2-0x49a7ab27],esi
  426972:	retf   0x814a
  426975:	aam    0x3b
  426977:	imul   edi,esi,0xffffffe5
  42697a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42697b:	jae    0x426904
  42697d:	xchg   esi,eax
  42697e:	fsubr  QWORD PTR [ebx]
  426980:	inc    esi
  426981:	pop    ecx
  426982:	dec    ebp
  426983:	lahf   
  426984:	pop    ebx
  426985:	jmp    0x16207fa7
  42698a:	sahf   
  42698b:	cmp    BYTE PTR [ecx-0xfa90e21],0xd8
  426992:	imul   BYTE PTR [ebp+0x13]
  426995:	pop    ebp
  426996:	ds icebp 
  426998:	je     0x426a0e
  42699a:	push   eax
  42699b:	mov    bl,BYTE PTR [eax-0x7a]
  42699e:	pop    eax
  42699f:	(bad)  
  4269a0:	add    eax,0xc29dbb59
  4269a5:	lea    ebx,[edi+0x2f6f4c0c]
  4269ab:	out    dx,eax
  4269ac:	rcl    ebx,cl
  4269ae:	adc    edx,esp
  4269b0:	pop    eax
  4269b1:	xor    eax,0xe87278d3
  4269b6:	push   0x74948b8b
  4269bb:	sbb    BYTE PTR [ecx+ebp*2],al
  4269be:	mov    ds:0xe967c91,al
  4269c3:	cmp    al,0x30
  4269c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269c6:	lds    ebx,FWORD PTR [eax+ebp*4]
  4269c9:	add    bh,BYTE PTR [eax-0x7914e704]
  4269cf:	pop    esi
  4269d0:	call   0x9f29b3c1
  4269d5:	add    BYTE PTR [esi+ecx*4],dh
  4269d8:	outs   dx,DWORD PTR ds:[esi]
  4269d9:	in     eax,0x91
  4269db:	(bad)  
  4269dc:	sar    DWORD PTR [ecx-0x7e],1
  4269df:	adc    ah,dl
  4269e1:	inc    cl
  4269e3:	dec    edx
  4269e4:	jmp    0xad39:0x6f5c89dc
  4269eb:	inc    edi
  4269ec:	jno    0x4269eb
  4269ee:	mov    al,ds:0x3d331917
  4269f3:	imul   eax,DWORD PTR [ebx-0x6c0740d3],0xffffffb3
  4269fa:	lahf   
  4269fb:	or     eax,0x64b866c3
  426a00:	push   cs
  426a01:	and    eax,0x6600c86f
  426a06:	or     BYTE PTR [eax],0xec
  426a09:	into   
  426a0a:	or     DWORD PTR [edi-0x4c0c3ee1],eax
  426a10:	pop    ebp
  426a11:	mov    bl,0x96
  426a13:	dec    ebp
  426a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a15:	dec    edi
  426a16:	sti    
  426a17:	and    bl,BYTE PTR [ebx+0x15]
  426a1a:	sub    al,0x5b
  426a1c:	sbb    bh,ah
  426a1e:	push   ebp
  426a1f:	test   eax,0x8b6bc772
  426a24:	popf   
  426a25:	mov    dh,0x3f
  426a27:	dec    ebp
  426a28:	dec    esp
  426a29:	mov    al,0x4a
  426a2b:	adc    BYTE PTR [edi],ch
  426a2d:	xchg   edx,eax
  426a2e:	or     DWORD PTR [ebp-0x63],ebp
  426a31:	push   ds
  426a32:	aad    0xce
  426a34:	ss adc dh,bh
  426a37:	add    ecx,DWORD PTR [edx+0x5d1c2358]
  426a3d:	clc    
  426a3e:	cmp    BYTE PTR [ecx+ecx*4],bh
  426a41:	or     BYTE PTR [ecx+0x7e],dl
  426a44:	dec    edi
  426a45:	fist   WORD PTR [esi]
  426a47:	jl     0x426a9b
  426a49:	or     al,0x31
  426a4b:	sub    al,0xaf
  426a4d:	push   eax
  426a4e:	fist   DWORD PTR [ebp+0x5b4b43c1]
  426a54:	and    dh,0xe8
  426a57:	mov    dl,0xdb
  426a59:	dec    edi
  426a5a:	mov    eax,0x11b1eea8
  426a5f:	xchg   ebx,eax
  426a60:	push   ds
  426a61:	xlat   BYTE PTR ds:[ebx]
  426a62:	inc    edi
  426a63:	and    edx,DWORD PTR [ebx-0x12a70daf]
  426a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a6a:	fcmovu st,st(2)
  426a6c:	stos   DWORD PTR es:[edi],eax
  426a6d:	mov    ds:0x58aea31,eax
  426a72:	cmc    
  426a73:	cwde   
  426a74:	repnz add esp,DWORD PTR [edx+ecx*8]
  426a78:	dec    esi
  426a79:	cmc    
  426a7a:	sub    al,BYTE PTR [edx+0x68f000e3]
  426a80:	(bad)  ds:[ebx]
  426a83:	(bad)  
  426a84:	push   ebp
  426a85:	or     bl,BYTE PTR [esi-0x33c570cd]
  426a8b:	cmp    esi,DWORD PTR [eax]
  426a8d:	out    0x26,eax
  426a8f:	das    
  426a90:	push   ebp
  426a91:	ret    
  426a92:	push   0x2a
  426a94:	jnp    0x426a62
  426a96:	jl     0x426aae
  426a98:	ja     0x426a57
  426a9a:	shl    edx,cl
  426a9c:	pop    ss
  426a9d:	call   0x73c37f40
  426aa2:	ror    esp,0xdf
  426aa5:	cdq    
  426aa6:	xor    al,0x42
  426aa8:	pop    eax
  426aa9:	push   esi
  426aaa:	adc    bl,BYTE PTR [eax+0x37ff7d07]
  426ab0:	sub    eax,0x178e5e5c
  426ab5:	and    BYTE PTR ds:0xce47d3ae,cl
  426abb:	mov    edi,ebx
  426abd:	dec    edx
  426abe:	iret   
  426abf:	imul   esp,DWORD PTR [edi+0x24dbc6d2],0x7b
  426ac6:	xor    eax,0xaabb6ef5
  426acb:	je     0x426ae1
  426acd:	xchg   ebp,eax
  426ace:	fcomip st,st(0)
  426ad0:	cli    
  426ad1:	pop    esi
  426ad2:	sahf   
  426ad3:	lock call 0xafcfd127
  426ad9:	cmp    bh,dl
  426adb:	and    BYTE PTR [ebx],ah
  426add:	and    BYTE PTR [ecx],cl
  426adf:	jp     0x426b01
  426ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ae2:	mov    esi,0x469d1de2
  426ae7:	push   edi
  426ae8:	adc    eax,0x5d2c8945
  426aed:	xchg   ecx,eax
  426aee:	xor    ah,BYTE PTR [ecx+0x21592410]
  426af4:	ficomp WORD PTR [edx+0x39258a46]
  426afa:	push   esp
  426afb:	adc    DWORD PTR [edx+0x79],ebx
  426afe:	mov    cl,BYTE PTR [esi+0x6e]
  426b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b02:	lods   al,BYTE PTR ds:[esi]
  426b03:	push   0xffffffc2
  426b05:	(bad)  
  426b06:	cwde   
  426b07:	jae    0x426ab0
  426b09:	push   edx
  426b0a:	sbb    eax,0x5a67e5e1
  426b0f:	push   0x2a2e6bf7
  426b14:	je     0x426b89
  426b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b17:	mov    esp,0x75e3d043
  426b1c:	and    eax,DWORD PTR [edi+eax*8]
  426b1f:	mov    ?,WORD PTR [edx+0xc5c2e82]
  426b25:	ret    0xcbdc
  426b28:	xor    BYTE PTR [eax+0x71],ch
  426b2b:	out    0x65,al
  426b2d:	or     BYTE PTR [ebp+0x59],0xb2
  426b31:	mov    dh,0xc2
  426b33:	adc    al,0xd2
  426b35:	mov    dh,0xec
  426b37:	cmp    ebx,DWORD PTR [esi]
  426b39:	xor    BYTE PTR [eax+eax*2+0x6d],ah
  426b3d:	jp     0x426b6f
  426b3f:	xchg   al,bh
  426b41:	push   bp
  426b43:	cli    
  426b44:	(bad)  
  426b45:	push   esi
  426b46:	addr16 cwde 
  426b48:	dec    eax
  426b49:	inc    edx
  426b4a:	xlat   BYTE PTR ds:[ebx]
  426b4b:	jmp    DWORD PTR [eax-0x4d]
  426b4e:	in     al,0x68
  426b50:	fimul  WORD PTR [ebx]
  426b52:	mov    bl,0x5e
  426b54:	jl     0x426b31
  426b56:	cli    
  426b57:	aam    0x75
  426b59:	aad    0xee
  426b5b:	in     eax,0xa5
  426b5d:	or     ebp,DWORD PTR [esi]
  426b5f:	sbb    eax,0xb7396460
  426b64:	outs   dx,DWORD PTR ds:[esi]
  426b65:	dec    ebx
  426b66:	adc    BYTE PTR [esi],bl
  426b68:	int3   
  426b69:	push   ds
  426b6a:	jge    0x426b67
  426b6c:	aam    0xa
  426b6e:	cwde   
  426b6f:	ficom  WORD PTR [ecx-0x5ad016d8]
  426b75:	retf   
  426b76:	sbb    edx,DWORD PTR ds:0xfd0550e2
  426b7c:	fcom   DWORD PTR [edx-0x3a542b86]
  426b82:	(bad)  
  426b83:	aas    
  426b84:	rol    bl,1
  426b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b87:	mov    esp,0x9db0703e
  426b8c:	or     bl,BYTE PTR [esi]
  426b8e:	bound  edi,QWORD PTR [esp+edx*2+0x16]
  426b92:	add    al,0xff
  426b94:	lea    edi,[ecx+esi*2-0xf56b31a]
  426b9b:	adc    ch,al
  426b9d:	adc    DWORD PTR [edi],eax
  426b9f:	outs   dx,DWORD PTR ds:[esi]
  426ba0:	and    eax,DWORD PTR [esi+0xf5ee40e]
  426ba6:	inc    esp
  426ba7:	xchg   esi,eax
  426ba8:	mov    eax,ds:0x35962a9d
  426bad:	sub    ch,BYTE PTR [ecx-0x36ad3dfd]
  426bb3:	lock or DWORD PTR [ecx+0x1a443cdc],0xfffffff4
  426bbb:	pusha  
  426bbc:	test   BYTE PTR [ebx-0x7c04f271],dh
  426bc2:	sahf   
  426bc3:	repz sahf 
  426bc5:	mov    DWORD PTR [ecx+ebp*1-0x4d434a20],ebx
  426bcc:	dec    ebp
  426bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bcf:	xchg   edi,eax
  426bd0:	lods   al,BYTE PTR ds:[esi]
  426bd1:	pop    es
  426bd2:	pop    ss
  426bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bd4:	ret    0x4d22
  426bd7:	imul   esp,ebp,0x9501f89f
  426bdd:	jg     0x426ba9
  426bdf:	retf   0xb99c
  426be2:	in     eax,dx
  426be3:	inc    edx
  426be4:	int    0x4a
  426be6:	out    dx,al
  426be7:	mov    edi,0x1313816b
  426bec:	stos   BYTE PTR es:[edi],al
  426bed:	xlat   BYTE PTR ds:[ebx]
  426bee:	xchg   DWORD PTR [eax],ecx
  426bf0:	cmp    ch,BYTE PTR [esi]
  426bf2:	jl     0x426bae
  426bf4:	xchg   esi,eax
  426bf5:	lock into 
  426bf7:	cdq    
  426bf8:	inc    edx
  426bf9:	sbb    BYTE PTR [ecx],bl
  426bfb:	bound  ebp,QWORD PTR [ebp-0x55]
  426bfe:	push   es
  426bff:	mov    DWORD PTR [edi-0x44cb9e26],eax
  426c05:	jae    0x426c7f
  426c07:	in     al,dx
  426c08:	pop    ebp
  426c09:	outs   dx,BYTE PTR ds:[esi]
  426c0a:	pop    ebx
  426c0b:	xor    eax,0x894f50b9
  426c10:	inc    ecx
  426c11:	fisubr WORD PTR [edi+0x75]
  426c14:	add    DWORD PTR [edi-0x50],ecx
  426c17:	add    al,BYTE PTR [eax+eax*2-0x67]
  426c1b:	cmp    dh,dh
  426c1d:	stc    
  426c1e:	mov    esp,0xd079e08f
  426c23:	sub    ch,cl
  426c25:	sbb    DWORD PTR [ebp+0x4cddca2b],eax
  426c2b:	into   
  426c2c:	mov    ah,ch
  426c2e:	enter  0x546c,0xdf
  426c32:	scas   eax,DWORD PTR es:[edi]
  426c33:	arpl   WORD PTR [edx-0x3741815f],cx
  426c39:	and    eax,0x7f6abf8d
  426c3e:	cmp    ebp,DWORD PTR [edx-0x6adbfd6a]
  426c44:	and    eax,ebx
  426c46:	or     BYTE PTR [edi-0x676dca3c],al
  426c4c:	daa    
  426c4d:	ret    0x8880
  426c50:	mov    ds:0x2573fdb7,eax
  426c55:	or     DWORD PTR [esp],eax
  426c58:	rcr    BYTE PTR [ecx-0x56],1
  426c5b:	push   cs
  426c5c:	xchg   esi,eax
  426c5d:	mov    ecx,0xbdda21eb
  426c62:	mov    WORD PTR [ebp-0x77],ss
  426c65:	mov    edi,0xb88be506
  426c6a:	bound  edi,QWORD PTR [esi]
  426c6c:	pop    edi
  426c6d:	clc    
  426c6e:	aaa    
  426c6f:	int    0xa0
  426c71:	sbb    BYTE PTR [ecx-0x40],ch
  426c74:	lea    ecx,[ecx+0x4c67640f]
  426c7a:	and    ebp,ebx
  426c7c:	inc    edi
  426c7d:	mov    edi,0xf9c3d907
  426c82:	mov    al,0xf0
  426c84:	push   eax
  426c85:	or     eax,0x3d6eabae
  426c8a:	jno    0x426c1f
  426c8c:	jg     0x426c70
  426c8e:	repz xor DWORD PTR [eax-0x65d6433f],esp
  426c95:	adc    DWORD PTR [edx+0x754b5b15],eax
  426c9b:	mov    eax,ds:0x63
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x671771f0],cl
  426caf:	and    eax,0xe4ae3542
  426cb4:	add    DWORD PTR [eax],eax
  426cb6:	repz add al,0x0
  426cb9:	add    BYTE PTR [ebx+esi*1],ah
  426cbc:	popa   
  426cbd:	cmp    al,0x1e
  426cbf:	cmp    al,ch
  426cc1:	jae    0x426c54
  426cc3:	hlt    
  426cc4:	fnstcw WORD PTR [edi+0x71]
  426cc7:	mov    dh,0x69
  426cc9:	fcomp  QWORD PTR [edi+ebx*2+0xf]
  426ccd:	or     eax,0xbc8868f0
  426cd2:	mov    bh,0x53
  426cd4:	imul   ebp,DWORD PTR [edi-0x2bb6eb7c],0x38
  426cdb:	jo     0x426d51
  426cdd:	jno    0x426d32
  426cdf:	add    al,bl
  426ce1:	cwde   
  426ce2:	mov    edx,0xec75570c
  426ce7:	mov    al,0x45
  426ce9:	mov    ebx,0x4265ca0b
  426cee:	push   esp
  426cef:	(bad)  
  426cf0:	pop    esp
  426cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cf2:	mov    bh,dl
  426cf4:	loope  0x426d39
  426cf6:	sahf   
  426cf7:	outs   dx,BYTE PTR ds:[esi]
  426cf8:	addr16 sub eax,0xb840ed7b
  426cfe:	and    BYTE PTR [ecx-0x4b],ch
  426d01:	jo     0x426d22
  426d03:	sti    
  426d04:	aam    0xc7
  426d06:	(bad)  
  426d08:	lods   eax,DWORD PTR ds:[esi]
  426d09:	jo     0x426d3e
  426d0b:	ss jmp 0x426cb8
  426d0e:	stos   DWORD PTR es:[edi],eax
  426d0f:	cli    
  426d10:	(bad)  
  426d12:	js     0x426cff
  426d14:	fwait
  426d15:	pop    esp
  426d16:	mov    al,ds:0xaaf9806a
  426d1b:	addr16 jns 0xc80ca8f2
  426d22:	cmp    DWORD PTR [edx+edx*4-0x177c3a59],ebp
  426d29:	sar    BYTE PTR [eax+edi*8],1
  426d2c:	add    eax,0xd20329c8
  426d31:	fwait
  426d32:	or     ah,BYTE PTR [esi+0x70]
  426d35:	sar    BYTE PTR [edx-0x4f0e94a2],cl
  426d3b:	iret   
  426d3c:	outs   dx,DWORD PTR ds:[esi]
  426d3d:	popf   
  426d3e:	xchg   edx,eax
  426d3f:	xlat   BYTE PTR ds:[ebx]
  426d40:	sub    eax,0x8a1c0e47
  426d45:	call   0x39a6:0x6f44ae0e
  426d4c:	repz das 
  426d4e:	sahf   
  426d4f:	push   0xaf2f0d27
  426d54:	cli    
  426d55:	jmp    0x1251:0x7d28e82c
  426d5c:	and    dh,cl
  426d5e:	in     eax,0x60
  426d60:	ja     0x426d72
  426d62:	and    al,0x7e
  426d64:	int3   
  426d65:	adc    eax,0xc23c1871
  426d6a:	jns    0x426d13
  426d6c:	adc    al,BYTE PTR [ebp+0x46]
  426d6f:	adc    al,0xa4
  426d71:	pop    eax
  426d72:	pusha  
  426d73:	jb     0x426d8c
  426d75:	or     dl,al
  426d77:	cld    
  426d78:	pusha  
  426d79:	add    DWORD PTR [ebx+ebx*4+0x35],0x64
  426d7e:	xor    al,BYTE PTR [ebx+0x3087ec68]
  426d84:	cmp    al,0x3a
  426d86:	xchg   edi,eax
  426d87:	jmp    0x426d37
  426d89:	jo     0x426dd3
  426d8b:	stos   DWORD PTR es:[edi],eax
  426d8c:	jg     0x426dcb
  426d8e:	out    dx,al
  426d8f:	lahf   
  426d90:	mov    edi,0x39efa6fa
  426d95:	neg    BYTE PTR [eax+0xe286140]
  426d9b:	ins    BYTE PTR es:[edi],dx
  426d9c:	dec    edi
  426d9d:	xchg   ebx,eax
  426d9e:	pop    esi
  426d9f:	mov    eax,cs
  426da1:	int    0xf
  426da3:	loop   0x426d6b
  426da5:	jne    0x426d75
  426da7:	cmc    
  426da8:	data16 sti 
  426daa:	dec    edx
  426dab:	dec    ebx
  426dac:	retf   0x1cd5
  426daf:	xor    DWORD PTR [ebp+0x11f4c575],ecx
  426db5:	scas   eax,DWORD PTR es:[edi]
  426db6:	lahf   
  426db7:	pop    ds
  426db8:	cs or  eax,0x42c5981a
  426dbe:	inc    eax
  426dbf:	and    ch,BYTE PTR [ecx+0x36f5b556]
  426dc5:	in     al,dx
  426dc6:	jns    0x426e1c
  426dc8:	or     cl,bl
  426dca:	pop    edx
  426dcb:	mov    ecx,0xac488f8c
  426dd0:	mov    ebp,0x5cd86dff
  426dd5:	fld    QWORD PTR [ebx]
  426dd7:	sub    edi,eax
  426dd9:	pop    eax
  426dda:	jae    0x426e02
  426ddc:	je     0x426e45
  426dde:	aad    0xfe
  426de0:	jle    0x426e28
  426de2:	fs push ecx
  426de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426de5:	mov    esi,0x13abe578
  426dea:	cdq    
  426deb:	ror    DWORD PTR [ebx-0x68],cl
  426dee:	or     DWORD PTR [ebp-0x2ce26d10],0x51
  426df5:	mov    WORD PTR [ecx],?
  426df7:	xor    edx,DWORD PTR [ebx-0x23b9e5d]
  426dfd:	ja     0x426e7d
  426dff:	pop    ds
  426e00:	test   al,0x1f
  426e02:	and    BYTE PTR [ebx-0x63735942],ah
  426e08:	retf   0xa578
  426e0b:	aaa    
  426e0c:	sar    DWORD PTR [esi+edx*4],cl
  426e0f:	mov    edi,0xd9a433e3
  426e14:	mov    ebx,0xb6c95d00
  426e19:	and    eax,0x85d7498a
  426e1e:	push   0x9a6ac03b
  426e23:	jle    0x426e2f
  426e25:	psubsw mm0,QWORD PTR [ecx+0x27]
  426e29:	neg    ebx
  426e2b:	mov    ebp,edi
  426e2d:	xchg   BYTE PTR [edi+0x3c057d6f],dh
  426e33:	mov    ecx,ebp
  426e35:	mov    ds:0x846c2391,al
  426e3a:	cld    
  426e3b:	and    DWORD PTR [esi+0x4d],0xffffff8c
  426e3f:	(bad)  
  426e40:	outs   dx,DWORD PTR ds:[esi]
  426e41:	mov    dl,0xa3
  426e43:	push   ebp
  426e44:	add    eax,0xc9e7c45d
  426e49:	pop    edi
  426e4a:	xchg   ecx,eax
  426e4b:	mov    bl,0x65
  426e4d:	nop
  426e4e:	stos   BYTE PTR es:[edi],al
  426e4f:	cmp    eax,0x77d30994
  426e54:	arpl   si,bp
  426e56:	xlat   BYTE PTR ds:[ebx]
  426e57:	aad    0x19
  426e59:	jae    0x426e28
  426e5b:	out    dx,al
  426e5c:	ins    DWORD PTR es:[edi],dx
  426e5d:	div    BYTE PTR [eax-0x6c848e09]
  426e63:	cmp    BYTE PTR [eax],ch
  426e65:	mov    ebp,0xb788ddde
  426e6a:	jmp    0xd8ff:0x11b9c9bc
  426e71:	sbb    esp,esi
  426e73:	pop    esp
  426e74:	mov    bh,0x3e
  426e76:	out    dx,al
  426e77:	jno    0x426edf
  426e79:	xchg   edx,eax
  426e7a:	add    BYTE PTR [edx-0x4b2baab],0x3b
  426e81:	xor    BYTE PTR [eax],dl
  426e83:	dec    esi
  426e84:	cmp    DWORD PTR [edx+0x54842653],ebx
  426e8a:	addr16 mov bx,0x6bde
  426e8f:	mov    ah,0xaa
  426e91:	cmp    ebx,0xffffffbb
  426e94:	int    0x4f
  426e96:	cmp    eax,0x936552a0
  426e9b:	adc    BYTE PTR [eax],bl
  426e9d:	pop    edi
  426e9e:	cmc    
  426e9f:	and    al,0x74
  426ea1:	sbb    BYTE PTR [esi-0x25],bh
  426ea4:	jl     0x426ecd
  426ea6:	icebp  
  426ea7:	rcl    BYTE PTR [ecx+0x75edb45c],0xf4
  426eae:	dec    ecx
  426eaf:	sub    al,0xf5
  426eb1:	dec    esi
  426eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eb3:	lods   al,BYTE PTR ds:[esi]
  426eb4:	push   ds
  426eb5:	fs out 0x1e,eax
  426eb8:	inc    esp
  426eb9:	or     eax,0x55bb18b2
  426ebe:	aaa    
  426ebf:	sahf   
  426ec0:	inc    esi
  426ec1:	sbb    ah,BYTE PTR [esi-0xea78228]
  426ec7:	sub    ecx,ebp
  426ec9:	sbb    eax,0xe3337646
  426ece:	sub    eax,0x84377b49
  426ed3:	push   0x2090ed32
  426ed8:	test   ch,cl
  426eda:	cmc    
  426edb:	lods   eax,DWORD PTR ds:[esi]
  426edc:	and    BYTE PTR [ecx+esi*4],dh
  426edf:	push   eax
  426ee0:	adc    BYTE PTR [esi+0x5f46eaee],ah
  426ee6:	cli    
  426ee7:	xchg   esp,eax
  426ee8:	cmp    eax,0x55b0ad1d
  426eed:	add    eax,0xf58b7d49
  426ef2:	cmc    
  426ef3:	pop    ebp
  426ef4:	lock aad 0x9
  426ef7:	dec    edx
  426ef8:	pop    es
  426ef9:	or     al,0xa6
  426efb:	mov    WORD PTR [ebx-0x68e10614],ds
  426f01:	ds push eax
  426f03:	mov    cl,0xef
  426f05:	hlt    
  426f06:	rcl    DWORD PTR [esi+0x19a8d8e4],cl
  426f0c:	pop    esp
  426f0d:	add    ebp,DWORD PTR [ecx]
  426f0f:	test   BYTE PTR [eax+0x58],bl
  426f12:	fbld   TBYTE PTR [ebp+0x22]
  426f15:	mov    edi,0x2e4aa63b
  426f1a:	sbb    al,0x99
  426f1c:	iret   
  426f1d:	fisub  DWORD PTR [ebx]
  426f1f:	inc    DWORD PTR [edi+0x1c67781]
  426f25:	test   eax,0x8c8a1883
  426f2a:	lods   al,BYTE PTR ds:[esi]
  426f2b:	fnsave [edi+edx*8]
  426f2e:	bound  ecx,QWORD PTR [ebx]
  426f30:	mov    ecx,0x3017dfe4
  426f35:	(bad)  
  426f36:	shl    DWORD PTR [eax-0x70930f49],0xc3
  426f3d:	or     al,BYTE PTR [ecx+0x5407fdae]
  426f43:	mov    cl,0xd9
  426f45:	fcomp  DWORD PTR [ebx+0x5bd17345]
  426f4b:	push   ecx
  426f4c:	mov    ebp,0x71978d21
  426f51:	aas    
  426f52:	sbb    ebp,DWORD PTR [esi-0xa]
  426f55:	xor    ch,cl
  426f57:	hlt    
  426f58:	fmulp  st(1),st
  426f5a:	inc    BYTE PTR ds:0xcad60cbb
  426f60:	add    ch,BYTE PTR [esi]
  426f62:	lods   eax,DWORD PTR ds:[esi]
  426f63:	cld    
  426f64:	lds    ebx,FWORD PTR [esp+ebx*4]
  426f67:	in     eax,0x8f
  426f69:	std    
  426f6a:	mov    dh,dl
  426f6c:	push   es
  426f6d:	call   0x57f3b4bc
  426f72:	stos   BYTE PTR es:[edi],al
  426f73:	lea    ecx,[eax]
  426f75:	inc    ecx
  426f76:	and    al,al
  426f78:	mov    ebx,0x9213aa5c
  426f7d:	and    BYTE PTR [ecx-0x5cb93a13],cl
  426f83:	pop    es
  426f84:	mov    ebx,0xe4e9312
  426f89:	jb     0x426f80
  426f8b:	fs nop
  426f8d:	cdq    
  426f8e:	push   0xa84801c5
  426f93:	js     0x426f93
  426f95:	es push es
  426f97:	mov    cl,0x62
  426f99:	lods   eax,DWORD PTR ds:[esi]
  426f9a:	push   ebp
  426f9b:	in     al,0x17
  426f9d:	pop    ds
  426f9e:	cmp    DWORD PTR [esi+0x40],eax
  426fa1:	xor    bl,cl
  426fa3:	gs in  eax,dx
  426fa5:	sar    BYTE PTR [ebx+ebp*2-0x63a8d802],0xb0
  426fad:	and    ebp,DWORD PTR [ecx]
  426faf:	mov    ?,WORD PTR [ecx]
  426fb1:	test   BYTE PTR [eax-0x5f],dl
  426fb4:	sbb    esi,DWORD PTR [edi-0x31]
  426fb7:	and    BYTE PTR [edx+0x38],bl
  426fba:	repz sub DWORD PTR [edi-0x5a],edx
  426fbe:	rol    DWORD PTR [ebx],0xdb
  426fc1:	(bad)  
  426fc2:	int3   
  426fc3:	mov    DWORD PTR ds:[esi+0x35],edx
  426fc7:	and    esi,DWORD PTR [esi]
  426fc9:	jmp    0xcf02983f
  426fce:	outs   dx,DWORD PTR ds:[esi]
  426fcf:	and    eax,0xf87a3310
  426fd4:	push   ds
  426fd5:	test   eax,0x7ec27447
  426fda:	(bad)  
  426fdb:	rcpps  xmm5,XMMWORD PTR [edx+eax*8-0x54d5e1d8]
  426fe3:	sub    dl,BYTE PTR [ebx]
  426fe5:	retf   
  426fe6:	dec    ebx
  426fe7:	adc    eax,0x509db27d
  426fec:	adc    eax,DWORD PTR [esi]
  426fee:	mov    cs:0x3cccc554,al
  426ff4:	inc    esp
  426ff5:	std    
  426ff6:	pop    es
  426ff7:	mov    bl,0x19
  426ff9:	(bad)  
  426ffa:	mov    ds:0xa6559f34,eax
  426fff:	repz mov eax,ds:0x7d82ad4
  427005:	out    0xcb,al
  427007:	sbb    eax,0xb91c61
  42700c:	mov    edx,DWORD PTR [edi-0x359bf65d]
  427012:	pop    esp
  427013:	sub    dh,BYTE PTR [ebx+0x7124b376]
  427019:	mov    ds:0x154dfa18,al
  42701e:	out    0x5c,eax
  427020:	fisttp WORD PTR [ebp+0x1c6ed6ab]
  427026:	sbb    cl,BYTE PTR [eax-0x699793bc]
  42702c:	sti    
  42702d:	call   DWORD PTR [ebx]
  42702f:	dec    esi
  427030:	out    0xb,al
  427032:	ja     0x426fdb
  427034:	sti    
  427035:	out    dx,eax
  427036:	add    BYTE PTR [eax+edx*1],ah
  427039:	jns    0x427002
  42703b:	shr    DWORD PTR [ebx+0xd],0x2c
  42703f:	dec    esi
  427040:	mov    ch,0xfe
  427042:	dec    edi
  427043:	mov    al,ds:0x5fc72bd0
  427048:	push   ds
  427049:	daa    
  42704a:	adc    DWORD PTR [ebp+0x642a49c6],ebp
  427050:	cmp    esi,DWORD PTR [ebx]
  427052:	inc    esp
  427053:	je     0x427033
  427055:	push   ebp
  427056:	sub    eax,0x38c690aa
  42705b:	mov    eax,ds:0x3b5dafcc
  427060:	pop    edi
  427061:	inc    ebx
  427062:	ja     0x427021
  427064:	shl    BYTE PTR [ecx+0x18627cb3],cl
  42706a:	jmp    0xb49c3589
  42706f:	adc    al,ah
  427071:	stos   BYTE PTR es:[edi],al
  427072:	and    al,0xd5
  427074:	out    dx,eax
  427075:	add    al,ch
  427077:	imul   ecx,ebp,0xde691a6a
  42707d:	imul   eax,DWORD PTR [ebp+0x7f],0x40
  427081:	icebp  
  427082:	push   esp
  427083:	stos   BYTE PTR es:[edi],al
  427084:	push   es
  427085:	ja     0x4270da
  427087:	xchg   ebx,eax
  427088:	cmp    ebx,DWORD PTR [ebx+edx*4-0x2d]
  42708c:	and    cl,BYTE PTR ds:0xa2410147
  427092:	inc    eax
  427093:	jno    0x427113
  427095:	or     al,0x24
  427097:	pop    eax
  427098:	push   esp
  427099:	aaa    
  42709a:	cmc    
  42709b:	sub    BYTE PTR [esi-0x4e],ah
  42709e:	add    eax,DWORD PTR [edx-0x7b6a1314]
  4270a4:	push   esp
  4270a5:	pop    ebx
  4270a6:	mov    esi,0x49bdf7fc
  4270ab:	xchg   edx,eax
  4270ac:	and    eax,0x49bcdc67
  4270b1:	cmp    al,0xae
  4270b3:	push   esp
  4270b4:	fdiv   st,st(7)
  4270b6:	call   0xf73f:0xf73f2246
  4270bd:	jmp    0xa699:0x3dc0eb24
  4270c4:	(bad)  
  4270c5:	mov    edx,0x4a52b52e
  4270ca:	adc    BYTE PTR [ecx+esi*4+0xb496380],ah
  4270d1:	call   0x242b74da
  4270d6:	sub    eax,0x1828b326
  4270db:	jno    0x42708a
  4270dd:	mov    ds:0x3857f6f8,eax
  4270e2:	aaa    
  4270e3:	jo     0x4270f2
  4270e5:	repnz test eax,0x1ed79e24
  4270eb:	jnp    0x427143
  4270ed:	stos   DWORD PTR es:[edi],eax
  4270ee:	add    al,0xc4
  4270f0:	lods   eax,DWORD PTR ds:[esi]
  4270f1:	pop    esp
  4270f2:	hlt    
  4270f3:	sar    BYTE PTR [ecx],1
  4270f5:	pop    edx
  4270f6:	and    al,0xe6
  4270f8:	fdivr  st(6),st
  4270fa:	jp     0x4270eb
  4270fc:	mov    cl,0xbc
  4270fe:	lds    esp,FWORD PTR [edi+0x59]
  427101:	jae    0x42710e
  427103:	push   ebx
  427104:	push   0x37134ec4
  427109:	ret    0xe23a
  42710c:	push   ebx
  42710d:	aaa    
  42710e:	xor    edx,eax
  427110:	dec    ebp
  427111:	jne    0x427160
  427113:	cmp    ebx,esp
  427115:	jmp    0x427124
  427117:	jb     0x427120
  427119:	imul   ebp,DWORD PTR [edi+0x3d],0x39
  42711d:	xchg   edi,eax
  42711e:	xor    BYTE PTR [edx+0x48239ab6],0xea
  427125:	cmp    al,ah
  427127:	imul   ecx,DWORD PTR [eax-0x74],0xffffffa0
  42712b:	mov    al,gs:0x3fa539d8
  427131:	js     0x4270b8
  427133:	jns    0x427116
  427135:	dec    edi
  427136:	xor    bh,BYTE PTR [eax]
  427138:	pop    ebp
  427139:	das    
  42713a:	(bad)  
  42713b:	push   edx
  42713c:	div    BYTE PTR [edx-0x239a1b5d]
  427142:	(bad)  
  427143:	push   ebx
  427144:	jg     0x4271c2
  427146:	rol    DWORD PTR [esi-0x2ec2bfa2],cl
  42714c:	xchg   esi,eax
  42714d:	dec    edi
  42714e:	adc    al,0x2
  427150:	push   esi
  427151:	loopne 0x427148
  427153:	into   
  427154:	lea    esp,[esi-0x2464d04]
  42715a:	and    edi,ebx
  42715c:	arpl   WORD PTR [esi*2+0x100045],ax
  427163:	pop    esi
  427164:	pop    esi
  427165:	jne    0x4270f6
  427167:	lock mov eax,0xc835f1a4
  42716d:	push   ecx
  42716e:	xor    BYTE PTR [esi-0x233e5135],ch
  427174:	loope  0x42719f
  427176:	pop    eax
  427177:	in     al,dx
  427178:	mov    al,bh
  42717a:	lea    edi,[edi+0x71]
  42717d:	inc    edi
  42717e:	jle    0x427199
  427180:	popa   
  427181:	loope  0x427173
  427183:	jo     0x42713f
  427185:	les    edi,FWORD PTR [ebx-0x2c]
  427188:	push   cs
  427189:	mov    BYTE PTR fs:[ebp+0xb40ed67],ch
  427190:	popa   
  427191:	mov    BYTE PTR [ecx-0x57],cl
  427194:	xchg   edi,eax
  427195:	test   eax,0x5ad74a9c
  42719a:	xlat   BYTE PTR ds:[ebx]
  42719b:	cmp    al,0x3c
  42719d:	jmp    0xae6e:0x97f3616c
  4271a4:	jge    0x427174
  4271a6:	push   ebx
  4271a7:	je     0x4271b8
  4271a9:	mov    edx,0xfa2a3f
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	pop    eax
  4271bf:	and    DWORD PTR [edx],esi
  4271c1:	xchg   ecx,eax
  4271c2:	mov    eax,ds:0xf30001e9
  4271c7:	add    al,0x0
  4271c9:	add    cl,ah
  4271cb:	sar    BYTE PTR [ecx],0xed
  4271ce:	mov    DWORD PTR [edi-0x5f0478f0],esi
  4271d4:	or     ch,BYTE PTR [edi-0x69b2e320]
  4271da:	and    al,0x99
  4271dc:	in     eax,dx
  4271dd:	cld    
  4271de:	ds out 0xf6,eax
  4271e1:	in     eax,dx
  4271e2:	adc    DWORD PTR [eax+0x6047beaa],esi
  4271e8:	in     eax,0x55
  4271ea:	scas   eax,DWORD PTR es:[edi]
  4271eb:	clc    
  4271ec:	inc    ebx
  4271ed:	xor    eax,0x4abda278
  4271f2:	jle    0x427250
  4271f4:	mov    edi,0x301bc457
  4271f9:	pop    ebp
  4271fa:	add    BYTE PTR [edx],0xb5
  4271fd:	retf   
  4271fe:	js     0x4271df
  427200:	sbb    dh,BYTE PTR [edi-0x32fb8ae2]
  427206:	pop    es
  427207:	or     al,0xa0
  427209:	mov    ecx,0xe48f522
  42720e:	imul   esp,DWORD PTR [ebx+0x4686f4a9],0xe021c25a
  427218:	cli    
  427219:	sub    DWORD PTR [edx+0xba2ad4d],ebp
  42721f:	push   eax
  427220:	mov    cl,0xe3
  427222:	fmul   DWORD PTR [edi+0x57]
  427225:	and    ebx,ebx
  427227:	icebp  
  427228:	mov    cl,dl
  42722a:	pop    ds
  42722b:	outs   dx,DWORD PTR ds:[esi]
  42722c:	imul   ecx,DWORD PTR [eax+edi*2-0x137e9b28],0xc14f335d
  427237:	sub    BYTE PTR [edx],0xff
  42723a:	aas    
  42723b:	mov    ebp,0x256932b2
  427240:	(bad)  
  427242:	and    BYTE PTR [ecx],ch
  427244:	rol    BYTE PTR [esi+0x7f],cl
  427247:	push   es
  427248:	jg     0x4272bb
  42724a:	push   0x81783dc2
  42724f:	repnz out 0xb3,al
  427252:	jbe    0x427232
  427254:	aam    0xf8
  427256:	shr    DWORD PTR [ebx-0x3ab849f8],0xa8
  42725d:	cli    
  42725e:	test   eax,0xc01e65da
  427263:	imul   esi,DWORD PTR [esi-0x430609ae],0xd
  42726a:	sub    DWORD PTR [ecx-0x39],edx
  42726d:	imul   eax,edx,0x91778c95
  427273:	push   ebx
  427274:	rcr    BYTE PTR [eax],0xc
  427277:	lods   al,BYTE PTR ds:[esi]
  427278:	dec    DWORD PTR [eax]
  42727a:	mov    edx,0x8f60176b
  42727f:	(bad)  
  427280:	jg     0x427252
  427282:	mov    ebp,0xd4532a5a
  427287:	fincstp 
  427289:	retf   0x47b0
  42728c:	mov    esi,0x56207581
  427291:	inc    ecx
  427292:	mov    WORD PTR [esi-0x2f],fs
  427295:	push   edx
  427296:	xor    DWORD PTR [ebp+0x5cbe38f0],eax
  42729c:	pop    ds
  42729d:	aam    0xc7
  42729f:	mov    fs,WORD PTR [esp+eiz*4-0x10]
  4272a3:	in     al,0x5b
  4272a5:	jae    0x427247
  4272a7:	pop    esi
  4272a8:	cli    
  4272a9:	loop   0x427324
  4272ab:	cmp    dl,0xb5
  4272ae:	imul   edx,edi,0x20
  4272b1:	mov    db6,edi
  4272b4:	into   
  4272b5:	loope  0x42726c
  4272b7:	pop    ebx
  4272b8:	cmc    
  4272b9:	imul   ecx,DWORD PTR [ebp-0x7a],0x91fbdd4c
  4272c0:	sbb    al,0x71
  4272c2:	sub    al,0x65
  4272c4:	jmp    0xd285:0xf7ec124b
  4272cb:	popa   
  4272cc:	jns    0x427308
  4272ce:	push   0x76c1486f
  4272d3:	lock out dx,al
  4272d5:	jmp    0x4272e7
  4272d7:	repnz cdq 
  4272d9:	mov    ecx,0x2f4ccd7b
  4272de:	pop    ecx
  4272df:	xor    ah,bh
  4272e1:	fisub  DWORD PTR [eax-0xb765ae8]
  4272e7:	push   ebp
  4272e8:	dec    esp
  4272e9:	xlat   BYTE PTR ds:[ebx]
  4272ea:	loopne 0x4272b8
  4272ec:	cmp    cl,dl
  4272ee:	push   edi
  4272ef:	div    BYTE PTR [esi+0x6d62a425]
  4272f5:	mov    esp,0xde48db5d
  4272fa:	inc    esi
  4272fb:	in     eax,0x14
  4272fd:	xchg   esp,eax
  4272fe:	and    esp,ebp
  427300:	popf   
  427301:	push   es
  427302:	xor    eax,0x5e1be603
  427307:	push   edx
  427308:	xchg   edx,eax
  427309:	or     DWORD PTR [ebp+0x3d],ebx
  42730c:	cmp    esp,edx
  42730e:	dec    esp
  42730f:	jecxz  0x42733e
  427311:	xchg   ebp,eax
  427312:	inc    esi
  427313:	jle    0x42733b
  427315:	inc    esi
  427316:	add    ch,BYTE PTR [eax-0x35bd92b2]
  42731c:	cmp    bl,BYTE PTR [eax+0x7e]
  42731f:	sub    esi,DWORD PTR [eax-0x65]
  427322:	cmc    
  427323:	sub    DWORD PTR [ebp+0x1],ebp
  427326:	or     BYTE PTR [edi-0x12559827],bh
  42732c:	popa   
  42732d:	xchg   esi,eax
  42732e:	push   ss
  42732f:	fsubr  QWORD PTR [edi-0x45ce75fa]
  427335:	repz cmp al,0x32
  427338:	inc    esp
  427339:	sbb    BYTE PTR [ecx],dl
  42733b:	scas   eax,DWORD PTR es:[edi]
  42733c:	xchg   ebx,eax
  42733d:	popf   
  42733e:	add    al,0xf8
  427340:	adc    bl,BYTE PTR [edi-0x5c]
  427343:	push   cs
  427344:	popf   
  427345:	sbb    eax,0xe44e7015
  42734a:	or     al,0x56
  42734c:	dec    eax
  42734d:	mov    al,0x55
  42734f:	out    dx,al
  427350:	arpl   cx,sp
  427352:	repnz sub BYTE PTR [edx+0x12],dl
  427356:	pusha  
  427357:	dec    edi
  427358:	xor    edi,eax
  42735a:	adc    ch,BYTE PTR [ebx-0x6f394b78]
  427360:	mov    ah,0x1d
  427362:	mov    ah,0x53
  427364:	add    ecx,ebp
  427366:	iret   
  427367:	ins    BYTE PTR es:[edi],dx
  427368:	pop    ebx
  427369:	add    BYTE PTR [eax+0x6],cl
  42736c:	retf   
  42736d:	sub    ah,BYTE PTR [eax+0x28ed37f3]
  427373:	and    eax,0xd04ed73e
  427378:	pop    es
  427379:	aam    0x41
  42737b:	(bad)  
  42737d:	sbb    BYTE PTR [ebp-0x6b9e247b],0x5f
  427384:	ins    DWORD PTR es:[edi],dx
  427385:	mov    bh,0x53
  427387:	in     al,dx
  427388:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42738a:	dec    edi
  42738b:	push   esi
  42738c:	mov    ds:0xe9e11576,eax
  427391:	dec    esi
  427392:	out    0x56,eax
  427394:	idiv   BYTE PTR [ebp+0x19]
  427397:	popa   
  427398:	pop    esp
  427399:	sbb    eax,0x674935b3
  42739e:	call   0x9773:0xd5883407
  4273a5:	dec    edi
  4273a6:	push   ebp
  4273a7:	sysret 
  4273a9:	bound  ecx,QWORD PTR [ebx+0x5b]
  4273ac:	xchg   ebx,eax
  4273ad:	xor    DWORD PTR [ebp*8-0x6cddd51f],edi
  4273b4:	adc    eax,0x6216dee8
  4273b9:	popa   
  4273ba:	add    eax,0xa8aff442
  4273bf:	mov    ebp,0xbb160b49
  4273c4:	pop    ebx
  4273c5:	pop    esi
  4273c6:	aaa    
  4273c7:	or     BYTE PTR [esi],ah
  4273c9:	xchg   ebx,eax
  4273ca:	pop    eax
  4273cb:	dec    ecx
  4273cc:	sub    DWORD PTR [esi-0x59],edi
  4273cf:	inc    eax
  4273d0:	mov    cl,0x65
  4273d2:	leave  
  4273d3:	jp     0x4273fe
  4273d5:	clc    
  4273d6:	xchg   ecx,eax
  4273d7:	push   edi
  4273d8:	mov    esp,0x754341d0
  4273dd:	ret    0x69d7
  4273e0:	push   cs
  4273e1:	xchg   esi,eax
  4273e2:	std    
  4273e3:	xchg   ecx,eax
  4273e4:	xlat   BYTE PTR ds:[ebx]
  4273e5:	out    0x7f,eax
  4273e7:	xchg   DWORD PTR ds:0xd632725b,edx
  4273ed:	pop    ebp
  4273ee:	aaa    
  4273ef:	std    
  4273f0:	adc    eax,0xc33ee83
  4273f5:	lods   al,BYTE PTR ds:[esi]
  4273f6:	lock jg 0x427389
  4273f9:	dec    eax
  4273fa:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273fc:	and    bl,dh
  4273fe:	dec    eax
  4273ff:	and    ch,BYTE PTR [ecx]
  427401:	loopne 0x42740e
  427403:	mov    ds:0x857e6f4,eax
  427408:	leave  
  427409:	scas   al,BYTE PTR es:[edi]
  42740a:	mov    cs,WORD PTR ds:0x309f6759
  427410:	xchg   DWORD PTR [ebx-0x258a27e5],ecx
  427416:	xchg   al,bh
  427418:	pop    edi
  427419:	jnp    0x427451
  42741b:	pop    ds
  42741c:	inc    esp
  42741d:	push   cs
  42741e:	test   al,0x9b
  427420:	retf   0x9fa2
  427423:	mov    eax,eax
  427425:	mov    bh,0x6a
  427427:	cmc    
  427428:	pop    ecx
  427429:	ja     0x4273fe
  42742b:	xor    eax,0x2130182c
  427430:	ret    
  427431:	add    esi,ebp
  427433:	push   edx
  427434:	rcr    BYTE PTR [ebp-0x70],0xb
  427438:	push   eax
  427439:	js     0x427476
  42743b:	sub    BYTE PTR [ecx+0x26],dh
  42743e:	or     edx,DWORD PTR [ebp+0x662927eb]
  427444:	or     ebp,DWORD PTR [edi-0x40913355]
  42744a:	jmp    0x9c30:0x31ea8ef2
  427451:	jno    0x4274c3
  427453:	jp     0x427419
  427455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427456:	ins    BYTE PTR es:[edi],dx
  427457:	outs   dx,BYTE PTR ds:[esi]
  427458:	cdq    
  427459:	loope  0x4273ec
  42745b:	dec    esi
  42745c:	ret    
  42745d:	jmp    0x427460
  42745f:	(bad)  
  427460:	mov    edi,0x8844a9ca
  427465:	jge    0x42744f
  427467:	loop   0x427441
  427469:	test   al,0x78
  42746b:	mov    esi,0x8c8d416
  427470:	push   0x6b
  427472:	dec    esi
  427473:	pop    ebp
  427474:	cmp    eax,0xfb6e72ec
  427479:	ja     0x427417
  42747b:	mov    ds:0x2d315361,al
  427480:	cdq    
  427481:	xor    al,BYTE PTR [ecx+0x7f]
  427484:	and    DWORD PTR [edx],eax
  427486:	popa   
  427487:	inc    edi
  427489:	sbb    BYTE PTR fs:[esi+0x55],dh
  42748d:	pop    edx
  42748e:	fwait
  42748f:	mov    ?,WORD PTR [edx+0x61b3bcd9]
  427495:	mov    cl,0xef
  427497:	xor    dl,BYTE PTR [ecx+0x2b]
  42749a:	mov    BYTE PTR [ebx-0x24519fef],ch
  4274a0:	pop    eax
  4274a1:	loopne 0x4274b8
  4274a3:	pusha  
  4274a4:	inc    esp
  4274a5:	sti    
  4274a6:	shl    DWORD PTR [ebx+0x5ebee2a6],1
  4274ac:	xor    al,0xfb
  4274ae:	aad    0x5a
  4274b0:	inc    edx
  4274b1:	(bad)  
  4274b2:	pop    ebx
  4274b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274b4:	aaa    
  4274b5:	ins    BYTE PTR es:[edi],dx
  4274b6:	inc    ebx
  4274b7:	push   esi
  4274b8:	das    
  4274b9:	out    0xce,al
  4274bb:	dec    ecx
  4274bc:	shl    BYTE PTR [ebx-0x53],1
  4274bf:	pop    ecx
  4274c0:	cli    
  4274c1:	sbb    BYTE PTR [esp+esi*2+0x519e9525],0x7f
  4274c9:	or     al,0x5e
  4274cb:	outs   dx,DWORD PTR ds:[esi]
  4274cc:	rcl    edx,1
  4274ce:	lds    ebp,FWORD PTR [esi]
  4274d0:	mov    ah,0x3e
  4274d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274d3:	xchg   edi,eax
  4274d4:	pop    ds
  4274d5:	xchg   ecx,eax
  4274d6:	cmc    
  4274d7:	or     dl,BYTE PTR ds:0x70595497
  4274dd:	pop    es
  4274de:	lds    esi,FWORD PTR [ecx-0x73]
  4274e1:	cmc    
  4274e2:	push   ebp
  4274e3:	rcl    al,cl
  4274e5:	and    ebp,DWORD PTR [edi-0x26546d22]
  4274eb:	out    0x8f,al
  4274ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274ee:	enter  0x326d,0xa3
  4274f2:	push   ebx
  4274f3:	pushf  
  4274f4:	xor    al,0x6a
  4274f6:	ror    DWORD PTR [ecx+0x14b98c20],1
  4274fc:	pop    eax
  4274fd:	mov    edx,0xe0e27d2a
  427502:	imul   DWORD PTR [ebp+0x2d0ecaee]
  427508:	sbb    eax,DWORD PTR [ecx-0x5bc6870c]
  42750e:	ret    
  42750f:	dec    edi
  427510:	adc    BYTE PTR [eax],cl
  427512:	and    esp,edi
  427514:	bound  esp,QWORD PTR [edi+0x37]
  427517:	cmp    al,0x45
  427519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42751a:	sub    ebp,DWORD PTR [edi-0x3a]
  42751d:	pop    esi
  42751e:	fwait
  42751f:	mov    ebp,0x544cd989
  427524:	sahf   
  427525:	mov    eax,0x57881931
  42752a:	das    
  42752b:	sub    cl,BYTE PTR [ebx-0x2d]
  42752e:	lahf   
  42752f:	or     DWORD PTR [esi],eax
  427531:	inc    ebx
  427532:	push   eax
  427533:	outs   dx,BYTE PTR gs:[esi]
  427535:	daa    
  427536:	call   0x94d0:0x7aca9416
  42753d:	xor    ebx,edi
  42753f:	fs js  0x427548
  427542:	mov    ds:0xe1a8dc8c,al
  427547:	scas   eax,DWORD PTR es:[edi]
  427548:	stos   BYTE PTR es:[edi],al
  427549:	mov    ch,0xd8
  42754b:	bound  eax,QWORD PTR [ecx-0x62868239]
  427551:	cld    
  427552:	iret   
  427553:	or     dh,ch
  427555:	push   ebp
  427556:	add    DWORD PTR [eax+0x4e],eax
  427559:	xchg   ebp,eax
  42755a:	xor    BYTE PTR [ebp+0x20],ch
  42755d:	pop    ebx
  42755e:	jns    0x42757c
  427560:	xor    DWORD PTR [edi+0x422a21c],esi
  427566:	ins    DWORD PTR es:[edi],dx
  427567:	retf   0x703
  42756a:	ror    DWORD PTR [ebx+0x4d8a0fbd],1
  427570:	inc    esp
  427571:	jbe    0x42750e
  427573:	stc    
  427574:	fcom   DWORD PTR [edi-0x12]
  427577:	add    ah,BYTE PTR [ebx]
  427579:	push   0x64729049
  42757e:	out    dx,eax
  42757f:	aad    0x32
  427581:	add    DWORD PTR [ecx+0x12],eax
  427584:	fucomp st(0)
  427586:	ds scas eax,DWORD PTR es:[edi]
  427588:	inc    esp
  427589:	outs   dx,DWORD PTR ds:[esi]
  42758a:	int3   
  42758b:	ror    DWORD PTR [ebp+edx*8+0x6ccdd9a8],cl
  427592:	mov    edx,0xd1a98a67
  427597:	cwde   
  427598:	pop    eax
  427599:	out    dx,eax
  42759a:	mov    dh,0x43
  42759c:	aas    
  42759d:	shl    ebx,0xaa
  4275a0:	stos   BYTE PTR es:[edi],al
  4275a1:	sahf   
  4275a2:	popf   
  4275a3:	sbb    eax,ebp
  4275a5:	data16 cmc 
  4275a7:	ficomp DWORD PTR [eax]
  4275a9:	fnsave [edi+0x5ec8ae5f]
  4275af:	enter  0x400e,0xda
  4275b3:	lods   eax,DWORD PTR ds:[esi]
  4275b4:	xchg   edx,eax
  4275b5:	add    BYTE PTR [ecx+0x658c25b],cl
  4275bb:	sub    BYTE PTR [esi-0x3],0xc6
  4275bf:	stc    
  4275c0:	(bad)  
  4275c1:	fld    QWORD PTR [ebp-0x3c]
  4275c4:	hlt    
  4275c5:	test   al,0xbd
  4275c7:	sbb    al,0xc
  4275c9:	cmp    ecx,DWORD PTR [eax]
  4275cb:	mov    dl,0x6d
  4275cd:	dec    ebp
  4275ce:	push   ecx
  4275cf:	mov    eax,DWORD PTR [edi+ebp*8]
  4275d2:	mov    edx,0xd1c61472
  4275d7:	neg    BYTE PTR [esi+0x6b]
  4275da:	rol    DWORD PTR [ebp+0x16],0x3b
  4275de:	test   ebx,edi
  4275e0:	mov    ah,0x79
  4275e2:	xchg   DWORD PTR [edi-0xd],esp
  4275e5:	push   ebp
  4275e6:	outs   dx,DWORD PTR fs:[esi]
  4275e8:	inc    ebp
  4275e9:	fcom   st(7)
  4275eb:	jmp    0x427655
  4275ed:	or     al,BYTE PTR [esi]
  4275ef:	rcr    BYTE PTR [ecx+0x37],1
  4275f2:	loop   0x427628
  4275f4:	(bad)  
  4275f6:	add    eax,0xa0fb15df
  4275fb:	ficom  DWORD PTR [ecx]
  4275fd:	fwait
  4275fe:	add    DWORD PTR [ebp-0x55],ebx
  427601:	mov    eax,0x1fb76902
  427606:	inc    ecx
  427607:	rol    BYTE PTR [ebp-0x1c9e33d1],cl
  42760d:	test   DWORD PTR [esi-0x40e60b30],ebx
  427613:	call   0x7075:0x9f66435f
  42761a:	bound  esi,QWORD PTR [edi+0x1f1caf55]
  427620:	lds    edx,FWORD PTR [eax-0x48ee523]
  427626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427627:	cmp    al,ah
  427629:	adc    BYTE PTR [ecx-0x24],0x48
  42762d:	cmp    BYTE PTR [ebp-0x18],bl
  427630:	clc    
  427631:	and    BYTE PTR [edi],dl
  427633:	push   cs
  427634:	mov    ebp,0x5b4648bb
  427639:	dec    esi
  42763a:	loope  0x427637
  42763c:	adc    BYTE PTR [ecx],dl
  42763e:	xor    al,0xdc
  427640:	lods   al,BYTE PTR ds:[esi]
  427641:	sbb    BYTE PTR fs:[ebx],dl
  427644:	stos   DWORD PTR es:[edi],eax
  427645:	xor    DWORD PTR [edi+0x8],edi
  427648:	dec    esi
  427649:	mov    ds:0x3e8206c,al
  42764e:	mov    dh,0x84
  427650:	adc    al,BYTE PTR [ecx]
  427652:	fld    TBYTE PTR [ebx]
  427654:	adc    ah,BYTE PTR [ecx+eax*4+0x17]
  427658:	sub    ebp,eax
  42765a:	(bad)  
  42765b:	cmp    eax,DWORD PTR [ecx+edi*4+0x6a3c956a]
  427662:	sub    bl,dh
  427664:	or     al,0xbd
  427666:	call   0x2c96d6e0
  42766b:	ins    BYTE PTR es:[edi],dx
  42766c:	mov    eax,ds:0xc334845f
  427671:	sub    DWORD PTR [eax+eiz*1+0x60],edi
  427675:	xlat   BYTE PTR ds:[ebx]
  427676:	push   eax
  427677:	retf   
  427678:	outs   dx,BYTE PTR ds:[esi]
  427679:	popf   
  42767a:	pop    ebx
  42767b:	jp     0x42762e
  42767d:	mov    esp,0x6dcaa3ff
  427682:	inc    ebp
  427683:	sbb    BYTE PTR [esi],dh
  427685:	jae    0x4276dd
  427687:	rcr    BYTE PTR [edi],1
  427689:	xor    cl,BYTE PTR [eax-0x490d6e62]
  42768f:	daa    
  427690:	iret   
  427691:	mov    dh,0x1b
  427693:	adc    dh,BYTE PTR ss:[ebp+0x23]
  427697:	fwait
  427698:	(bad)  
  427699:	fsub   DWORD PTR [esi-0x2b]
  42769c:	mov    cl,0x1c
  42769e:	push   ebx
  42769f:	call   0x6eade2b1
  4276a4:	xor    BYTE PTR [eax-0x1a],ah
  4276a7:	mov    ebp,0x683c27c
  4276ac:	jb     0x42765e
  4276ae:	mov    gs,WORD PTR [ecx+0x5f]
  4276b1:	loope  0x427663
  4276b3:	ds push cs
  4276b5:	sub    bl,BYTE PTR ds:0x803407a1
  4276bb:	fucomi st,st(5)
  4276bd:	add    BYTE PTR [eax],al
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0x72f91c3b
  4276cf:	outs   dx,BYTE PTR ds:[esi]
  4276d0:	adc    DWORD PTR [esi],0x1ee94
  4276d6:	repz add al,0x0
  4276d9:	add    BYTE PTR [ebx+0x3a069fe0],ah
  4276df:	ret    
  4276e0:	dec    esi
  4276e1:	aam    0xe7
  4276e3:	imul   ecx,DWORD PTR [edx+0x13da8d94],0xffffff92
  4276ea:	out    dx,eax
  4276eb:	not    edx
  4276ed:	ins    BYTE PTR es:[edi],dx
  4276ee:	push   ebx
  4276ef:	lock rcr BYTE PTR [edi+edx*4+0x105b774e],1
  4276f7:	mov    dh,0x5a
  4276f9:	xchg   edx,eax
  4276fa:	icebp  
  4276fb:	sub    DWORD PTR [ecx+0x41d321af],edx
  427701:	into   
  427702:	mov    esi,0xae61b176
  427707:	das    
  427708:	adc    BYTE PTR [eax+0x5ef09d54],ch
  42770e:	sahf   
  42770f:	js     0x4276df
  427711:	ret    
  427712:	ss dec ebx
  427714:	ss in  eax,dx
  427716:	imul   eax,DWORD PTR [ebp-0x1c],0x4b24542b
  42771d:	cmp    al,0x56
  42771f:	shl    esi,0xf
  427722:	or     eax,0xb8ca49b3
  427727:	push   edi
  427728:	mov    ecx,0xbd1d8be5
  42772d:	mov    ah,BYTE PTR [edx+0x32]
  427730:	loopne 0x427781
  427732:	or     ah,ah
  427734:	addr16 mov edi,0x30cefa88
  42773a:	repz loop 0x427788
  42773d:	rcl    DWORD PTR [eax+0x40a6b7d0],cl
  427743:	mov    ds:0x44bf0aa1,al
  427748:	adc    eax,0xc3b1a4fd
  42774d:	cmp    eax,0xdff366c2
  427752:	lods   al,BYTE PTR ds:[esi]
  427753:	fnstcw WORD PTR [edi+0x56]
  427756:	pusha  
  427757:	bound  edx,QWORD PTR [edi+0x32]
  42775a:	(bad)  
  42775b:	(bad)  
  42775c:	mov    dh,0xc0
  42775e:	scas   al,BYTE PTR es:[edi]
  42775f:	mov    ebx,0xa86b98a3
  427764:	popa   
  427765:	stc    
  427766:	sahf   
  427767:	dec    edx
  427768:	inc    edi
  427769:	push   ds
  42776a:	xor    al,0xf1
  42776c:	inc    ecx
  42776d:	or     eax,0x32706c9a
  427772:	ud2    
  427774:	cmp    BYTE PTR [ecx+0x6e],al
  427777:	ret    0x8ae0
  42777a:	add    al,0x64
  42777c:	inc    esi
  42777d:	lods   al,BYTE PTR ds:[esi]
  42777e:	cmp    al,0x1f
  427780:	pushf  
  427781:	dec    ecx
  427782:	dec    esp
  427783:	mov    ds:0x1efef939,al
  427788:	jae    0x4277aa
  42778a:	in     eax,dx
  42778b:	mov    esi,eax
  42778d:	test   eax,0x3337970a
  427792:	cs retf 0xca9
  427796:	xor    esi,DWORD PTR [ecx+0x72bb32f6]
  42779c:	mov    ebp,0x2496400c
  4277a1:	sbb    BYTE PTR [eax],0x7c
  4277a4:	imul   esi,edx,0xfffffffc
  4277a7:	rcr    BYTE PTR [ebp-0x67071653],0x23
  4277ae:	sub    eax,0x366ea6f1
  4277b3:	out    dx,al
  4277b4:	ret    
  4277b5:	sbb    DWORD PTR [edx+0x20d17aa7],ebx
  4277bb:	or     al,0x75
  4277bd:	xchg   esp,eax
  4277be:	std    
  4277bf:	jp     0x427790
  4277c1:	adc    DWORD PTR [ebx+0x2467f78d],edi
  4277c7:	aas    
  4277c8:	jecxz  0x42775f
  4277ca:	dec    edi
  4277cb:	xchg   ecx,eax
  4277cc:	jb     0x4277b2
  4277ce:	dec    ebp
  4277cf:	scas   al,BYTE PTR es:[edi]
  4277d0:	fcomp  QWORD PTR [eax+0x75]
  4277d3:	xchg   esi,eax
  4277d4:	cmp    BYTE PTR ds:0x3c421727,bl
  4277da:	scas   eax,DWORD PTR es:[edi]
  4277db:	and    eax,0xffc0bc02
  4277e0:	and    ah,bl
  4277e2:	cmp    al,0x5c
  4277e4:	and    BYTE PTR [ebx],dh
  4277e6:	jbe    0x427850
  4277e8:	aas    
  4277e9:	rcr    DWORD PTR [ebx],0xc6
  4277ec:	in     eax,dx
  4277ed:	ja     0x42784c
  4277ef:	ins    DWORD PTR es:[edi],dx
  4277f0:	or     eax,0x996bd600
  4277f5:	mov    bl,0x6c
  4277f7:	mov    cl,0xc0
  4277f9:	loopne 0x4277e2
  4277fb:	scas   al,BYTE PTR es:[edi]
  4277fc:	xor    ecx,DWORD PTR [ebx-0x22]
  4277ff:	sbb    al,0xd3
  427801:	mov    cl,0xbf
  427803:	jno    0x4277b1
  427805:	sub    cl,dh
  427807:	call   0x655:0x30a8e8b8
  42780e:	sar    BYTE PTR [edi],cl
  427810:	sbb    ebp,DWORD PTR [esi+ecx*1]
  427813:	push   cs
  427814:	mov    edx,0x431ca004
  427819:	cwde   
  42781a:	in     al,dx
  42781b:	pop    ebx
  42781c:	sub    al,0xb7
  42781e:	lds    esp,FWORD PTR [ebx+esi*4]
  427821:	or     DWORD PTR [esi-0xf],0x3262f960
  427828:	shl    DWORD PTR [ebx],cl
  42782a:	mov    ebx,0x144e2883
  42782f:	bound  ecx,QWORD PTR [esi]
  427831:	add    ebp,ebp
  427833:	mov    si,0xfa94
  427837:	dec    ebp
  427838:	add    al,0x7e
  42783a:	out    0x33,al
  42783c:	jle    0x4277d0
  42783e:	pop    ebx
  42783f:	iret   
  427840:	mov    bh,0xa8
  427842:	stos   DWORD PTR es:[edi],eax
  427843:	add    eax,0x6799d0b
  427848:	fwait
  427849:	cld    
  42784a:	xchg   esi,eax
  42784b:	(bad)  
  42784c:	dec    ebp
  42784d:	pop    ecx
  42784e:	shr    DWORD PTR [edx],1
  427850:	xchg   ebx,eax
  427851:	mov    ebx,0x194f8e78
  427856:	enter  0x64e2,0x5b
  42785a:	fild   DWORD PTR [eax]
  42785c:	mov    al,0x87
  42785e:	aam    0x42
  427860:	setg   BYTE PTR [ebp+eax*1-0x38e11fed]
  427868:	jl     0x4278cb
  42786a:	(bad)  
  42786b:	ret    0xc406
  42786e:	repnz (bad) 
  427870:	fimul  DWORD PTR [edx+0x66]
  427873:	xor    eax,0x7fa766e5
  427878:	jecxz  0x427822
  42787a:	rol    ch,cl
  42787c:	dec    esi
  42787d:	ins    BYTE PTR es:[edi],dx
  42787e:	or     esi,esi
  427880:	pop    ecx
  427881:	mov    ds:0x695c2627,al
  427886:	adc    al,0x82
  427888:	ret    
  427889:	lods   al,BYTE PTR ds:[esi]
  42788a:	sbb    cl,al
  42788c:	cli    
  42788d:	cmc    
  42788e:	in     eax,dx
  42788f:	iret   
  427890:	mov    eax,ds:0xd5536127
  427895:	int3   
  427896:	out    0xcf,al
  427898:	cli    
  427899:	xor    BYTE PTR [ecx],bh
  42789b:	push   0x922c7ae8
  4278a0:	push   0xffffffc9
  4278a2:	imul   edx,DWORD PTR [edx+ebp*8-0x41],0x4b
  4278a7:	fsubr  QWORD PTR [esp+eax*1]
  4278aa:	stos   DWORD PTR es:[edi],eax
  4278ab:	push   edi
  4278ac:	imul   esp,edx,0x4a
  4278af:	adc    esp,DWORD PTR [ebp-0x3ca7081b]
  4278b5:	gs xchg esp,eax
  4278b7:	popf   
  4278b8:	mov    dl,0xe6
  4278ba:	jo     0x42784a
  4278bc:	gs mov ebp,0xd0dbcd79
  4278c2:	es sti 
  4278c4:	dec    ebp
  4278c5:	sar    edi,0x39
  4278c8:	jno    0x4278c4
  4278ca:	cmp    DWORD PTR [eax+edi*8+0x2e034163],esp
  4278d1:	(bad)  
  4278d2:	fwait
  4278d3:	or     bl,BYTE PTR [esi+0x14bfa00b]
  4278d9:	or     DWORD PTR [ecx+0x127a9878],ebx
  4278df:	scas   al,BYTE PTR es:[edi]
  4278e0:	rcr    ch,cl
  4278e2:	adc    al,0x39
  4278e4:	std    
  4278e5:	sar    DWORD PTR [edi+edi*4-0x2e3d0e3e],cl
  4278ec:	stos   BYTE PTR es:[edi],al
  4278ed:	in     al,0xaf
  4278ef:	xor    BYTE PTR fs:[ebp-0x52],0x1b
  4278f4:	sbb    esi,DWORD PTR [ecx-0x14]
  4278f7:	pop    esi
  4278f8:	and    eax,0xf0ce010e
  4278fd:	adc    BYTE PTR [esp+edi*4+0x2e],al
  427901:	out    0x64,al
  427903:	or     edx,DWORD PTR [edx+edi*4]
  427906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427907:	sbb    al,0xad
  427909:	mov    DWORD PTR [ebx+0xf],eax
  42790c:	add    dl,BYTE PTR [esi*1-0x287f88c8]
  427913:	push   ebp
  427914:	sub    al,0xfc
  427916:	adc    al,0xb8
  427918:	ja     0x42791c
  42791a:	(bad)  [eax+0x4f]
  42791d:	or     edx,DWORD PTR [eax-0x47405236]
  427923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427924:	js     0x4278c1
  427926:	xchg   DWORD PTR [edx+esi*8-0x7de7cca9],eax
  42792d:	(bad)  
  42792e:	adc    al,0x29
  427930:	lods   eax,DWORD PTR ds:[esi]
  427931:	fst    QWORD PTR [eax]
  427933:	out    0xe2,al
  427935:	push   0x45
  427937:	enter  0x138e,0x53
  42793b:	in     al,0x5a
  42793d:	shl    DWORD PTR [edx-0x58],1
  427940:	test   BYTE PTR [ebp-0x55],0x77
  427944:	push   ss
  427945:	and    ebp,DWORD PTR [ebx-0x27]
  427948:	(bad)
  42794b:	jmp    0xfb50ef03
  427950:	jg     0x4278e1
  427952:	inc    eax
  427953:	shr    DWORD PTR [eax-0x1d5b7130],0x9f
  42795a:	or     dl,ah
  42795c:	(bad)  
  42795d:	mov    ebp,DWORD PTR [edi+0xacd3c27]
  427963:	and    al,0x4
  427965:	fbld   TBYTE PTR [edi-0x1a]
  427968:	retf   0xc38
  42796b:	xor    bh,BYTE PTR [eax]
  42796d:	adc    BYTE PTR [ecx],ch
  42796f:	adc    al,0x8d
  427971:	bound  edi,QWORD PTR [edx-0x1d5fef44]
  427977:	jno    0x42798e
  427979:	mov    edi,0xfb0da2b3
  42797e:	popf   
  42797f:	out    dx,al
  427980:	fwait
  427981:	sub    ebx,eax
  427983:	xor    eax,0xf672a2c1
  427988:	dec    esp
  427989:	imul   esp
  42798b:	loop   0x4279c9
  42798d:	icebp  
  42798e:	jnp    0x427988
  427990:	jge    0x4279dd
  427992:	and    al,0x65
  427994:	cmp    ah,BYTE PTR [edx]
  427996:	adc    BYTE PTR [ecx+0x10],dh
  427999:	fld    QWORD PTR [ebx]
  42799b:	sub    al,BYTE PTR [edx-0x4503fded]
  4279a1:	call   0x3127:0x9c3744d3
  4279a8:	mov    fs,WORD PTR [eax-0x7e]
  4279ab:	scas   eax,DWORD PTR es:[edi]
  4279ac:	iret   
  4279ad:	adc    ch,cl
  4279af:	adc    al,0x57
  4279b1:	and    al,0x23
  4279b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279b4:	xchg   ebp,eax
  4279b5:	add    DWORD PTR [ecx+0x74],edi
  4279b8:	push   ss
  4279b9:	aas    
  4279ba:	inc    ecx
  4279bb:	aas    
  4279bc:	dec    esp
  4279bd:	(bad)  
  4279be:	(bad)  
  4279bf:	cli    
  4279c0:	jle    0x427990
  4279c2:	je     0x42794c
  4279c4:	push   ds
  4279c5:	and    BYTE PTR [ebx+0xd7cb2b8],cl
  4279cb:	push   cs
  4279cc:	jns    0x4279ec
  4279ce:	adc    ah,BYTE PTR [edx+0x4e5743c]
  4279d4:	lods   al,BYTE PTR ds:[esi]
  4279d5:	hlt    
  4279d6:	out    0x88,eax
  4279d8:	bound  ebx,QWORD PTR [ebx-0x3f]
  4279db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279dc:	and    al,0x6e
  4279de:	add    al,0xb3
  4279e0:	jp     0x42796a
  4279e2:	jg     0x427990
  4279e4:	dec    edx
  4279e5:	or     DWORD PTR [ebp-0x3f],esp
  4279e8:	pusha  
  4279e9:	jo     0x427a3b
  4279eb:	test   BYTE PTR [edi-0x1ed51c1],bl
  4279f1:	out    dx,eax
  4279f2:	push   ss
  4279f3:	sbb    DWORD PTR [edx-0x25cbaac0],ecx
  4279f9:	cmc    
  4279fa:	cwde   
  4279fb:	mov    al,0x8d
  4279fd:	jecxz  0x4279ce
  4279ff:	xchg   esp,eax
  427a00:	cld    
  427a01:	sbb    bl,BYTE PTR [eax+0x67]
  427a04:	dec    DWORD PTR [edx+0x5be459a7]
  427a0a:	mov    ds:0x62b93da9,al
  427a0f:	cmp    eax,0x741c7781
  427a14:	jle    0x4279be
  427a16:	fwait
  427a17:	into   
  427a18:	mov    al,0x77
  427a1a:	xchg   DWORD PTR [eax-0x4a49009],ebp
  427a20:	(bad)  
  427a22:	jnp    0x4279e6
  427a24:	push   ds
  427a25:	out    0xf0,al
  427a27:	and    bl,0x85
  427a2a:	cdq    
  427a2b:	ins    BYTE PTR es:[edi],dx
  427a2c:	add    bh,al
  427a2e:	mov    ecx,0x135adff
  427a33:	cld    
  427a34:	lods   al,BYTE PTR ds:[esi]
  427a35:	out    0xa7,al
  427a37:	aad    0x66
  427a39:	outs   dx,BYTE PTR ds:[esi]
  427a3a:	sub    ebp,DWORD PTR ds:0xa82c364f
  427a40:	arpl   WORD PTR [ecx-0x4c],bx
  427a43:	jns    0x4279cc
  427a45:	(bad)  
  427a46:	imul   BYTE PTR [ecx]
  427a48:	jno    0x427a4e
  427a4a:	test   edx,esp
  427a4c:	jne    0x427a34
  427a4e:	dec    esi
  427a4f:	pop    ds
  427a50:	cmp    ch,BYTE PTR [esi+0x28]
  427a53:	and    eax,0xb5d935a7
  427a58:	cmp    ecx,DWORD PTR [eax]
  427a5a:	popf   
  427a5b:	mov    dl,0xc5
  427a5d:	mov    al,ds:0x21107b5e
  427a62:	call   0x6f8e:0x716505ee
  427a69:	fild   WORD PTR [ecx+0x41a94879]
  427a6f:	xor    ebx,DWORD PTR [ebp+0x15]
  427a72:	scas   al,BYTE PTR es:[edi]
  427a73:	(bad)  
  427a74:	jl     0x427ab9
  427a76:	mov    esi,0xf0e88462
  427a7b:	int3   
  427a7c:	in     eax,0xfb
  427a7e:	cmp    DWORD PTR [ebp-0x4e],0x19
  427a82:	or     eax,0x274782cf
  427a87:	jecxz  0x427a11
  427a89:	mov    cs,WORD PTR [esi+0x1d2c6976]
  427a8f:	lock ret 
  427a91:	mov    ds:0x1c075744,al
  427a96:	cdq    
  427a97:	rcl    DWORD PTR [ebx],0xb7
  427a9a:	cmp    al,0x79
  427a9c:	pushf  
  427a9d:	daa    
  427a9e:	fild   QWORD PTR [ecx]
  427aa0:	push   edi
  427aa1:	cmc    
  427aa2:	dec    ebx
  427aa3:	daa    
  427aa4:	daa    
  427aa5:	sub    BYTE PTR [edx-0x4c407c99],ah
  427aab:	push   es
  427aac:	add    al,0xe6
  427aae:	cdq    
  427aaf:	stc    
  427ab0:	ins    DWORD PTR es:[edi],dx
  427ab1:	(bad)  
  427ab2:	out    dx,al
  427ab3:	les    esp,FWORD PTR [ebp-0x3]
  427ab6:	pop    ebx
  427ab7:	push   esp
  427ab8:	xchg   edx,eax
  427ab9:	bound  ebp,QWORD PTR [eax+0x1f1e8f99]
  427abf:	jl     0x427adf
  427ac1:	das    
  427ac2:	inc    esi
  427ac3:	jbe    0x427ae0
  427ac5:	outs   dx,BYTE PTR ds:[esi]
  427ac6:	mov    ebp,0x663f2225
  427acb:	mov    cl,0x95
  427acd:	mov    ebx,0x883f0bd0
  427ad2:	scas   al,BYTE PTR es:[edi]
  427ad3:	push   0x5c7a8b52
  427ad8:	jp     0x427aa2
  427ada:	mov    ah,BYTE PTR [eax+0x20]
  427add:	stos   DWORD PTR es:[edi],eax
  427ade:	in     eax,dx
  427adf:	push   edi
  427ae0:	add    ebx,DWORD PTR [ebp+0x355fe862]
  427ae6:	push   0x75812df4
  427aeb:	lods   eax,DWORD PTR ds:[esi]
  427aec:	test   edx,0xccc66142
  427af2:	mov    bh,0xde
  427af4:	add    BYTE PTR [edx+0x115fa13a],bl
  427afa:	(bad)  
  427afb:	fcom   QWORD PTR [eax-0x719fb080]
  427b01:	add    DWORD PTR [eax],0xab3ab0
  427b07:	xchg   BYTE PTR [ebx+0x2e],bl
  427b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b0b:	iret   
  427b0c:	fmul   st(6),st
  427b0e:	js     0x427afc
  427b10:	hlt    
  427b11:	xlat   BYTE PTR ds:[ebx]
  427b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b13:	mov    ds,esp
  427b15:	push   0x260a5ea5
  427b1a:	adc    BYTE PTR [ecx],al
  427b1c:	jns    0x427b66
  427b1e:	ffree  st(6)
  427b20:	mov    al,0xcd
  427b22:	pop    esp
  427b23:	push   edi
  427b24:	pop    edx
  427b25:	xchg   al,dl
  427b27:	jl     0x427b57
  427b29:	and    al,0x1
  427b2b:	sbb    dl,bl
  427b2d:	daa    
  427b2e:	and    ebx,DWORD PTR [ecx]
  427b30:	fdiv   DWORD PTR ds:0x43ac7ed1
  427b36:	mov    ebp,0x5c0a6d68
  427b3b:	and    al,0xbf
  427b3d:	dec    esi
  427b3e:	test   eax,0x62bd893c
  427b43:	adc    ebx,DWORD PTR [edx-0x6506a82d]
  427b49:	pushf  
  427b4a:	test   BYTE PTR [ecx+0x1a],ch
  427b4d:	adc    eax,0x87e7fe70
  427b52:	xor    al,0x92
  427b54:	pop    ebx
  427b55:	xor    BYTE PTR [ebp-0x36],ah
  427b58:	xor    cl,bl
  427b5a:	js     0x427add
  427b5c:	adc    DWORD PTR [edi-0x42285121],esp
  427b62:	ins    DWORD PTR es:[edi],dx
  427b63:	or     ch,BYTE PTR [ebp-0x2808194b]
  427b69:	loope  0x427b34
  427b6b:	cdq    
  427b6c:	ret    
  427b6d:	inc    esp
  427b6e:	mov    al,0xc2
  427b70:	(bad)  
  427b71:	js     0x427b5d
  427b73:	rol    bl,cl
  427b75:	adc    eax,0xe086ff06
  427b7a:	iret   
  427b7b:	lods   eax,DWORD PTR ds:[esi]
  427b7c:	mov    ah,0x82
  427b7e:	push   ds
  427b7f:	jge    0x427bb1
  427b81:	sub    eax,0x79bff688
  427b86:	test   BYTE PTR [edi-0x561fb6e0],ch
  427b8c:	mul    al
  427b8e:	jg     0x427b4f
  427b90:	xor    esp,DWORD PTR [edx+0x70de2d6]
  427b96:	punpckhwd mm0,QWORD PTR [ebx+0x38]
  427b9a:	fadd   DWORD PTR [edx-0xa]
  427b9d:	jno    0x427b51
  427b9f:	(bad)  
  427ba0:	mov    bl,0x28
  427ba2:	fsub   QWORD PTR [edi+0x17692e66]
  427ba8:	fisttp WORD PTR [ecx-0x6439aa60]
  427bae:	dec    edi
  427baf:	(bad)  
  427bb1:	dec    ecx
  427bb2:	cs loopne 0x427ba4
  427bb5:	inc    ebx
  427bb6:	pop    ebx
  427bb7:	nop
  427bb8:	adc    DWORD PTR [edi-0xa],ebp
  427bbb:	xchg   ecx,eax
  427bbc:	pop    ebx
  427bbd:	mov    bl,0x6d
  427bbf:	mov    ebp,DWORD PTR [edi-0x188ec1e5]
  427bc5:	leave  
  427bc6:	push   ss
  427bc7:	sub    eax,edx
  427bc9:	cmp    ebp,DWORD PTR [ebx]
  427bcb:	les    edi,FWORD PTR ds:0x0
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x9d77e2d0
  427be0:	cmp    cl,BYTE PTR [ebx]
  427be2:	xchg   ebx,esi
  427be4:	add    DWORD PTR [eax],eax
  427be6:	repz add al,0x0
  427be9:	add    ch,bl
  427beb:	les    esi,FWORD PTR ds:0x216f9970
  427bf1:	mov    eax,ds:0x3e3be801
  427bf6:	ret    0xe727
  427bf9:	add    bh,BYTE PTR ds:0xdc3e
  427bfe:	ret    
  427bff:	lahf   
  427c00:	pop    ds
  427c01:	enter  0x9aea,0x45
  427c05:	arpl   WORD PTR [edx],di
  427c07:	into   
  427c08:	cmp    al,0xa9
  427c0a:	stc    
  427c0b:	jns    0x427c6a
  427c0d:	pushf  
  427c0e:	add    cl,BYTE PTR [esi+0x67]
  427c11:	push   ebx
  427c12:	pop    ebp
  427c13:	loop   0x427c73
  427c15:	imul   edi,DWORD PTR [edx+0xb],0xffffff91
  427c19:	jns    0x427c4b
  427c1b:	lods   al,BYTE PTR ds:[esi]
  427c1c:	jmp    0x81372057
  427c21:	adc    edx,DWORD PTR [ebx+0x20]
  427c24:	ds jp  0x427c71
  427c27:	mov    ds:0x348e71af,eax
  427c2c:	out    0x31,al
  427c2e:	sbb    DWORD PTR [eax+edi*8-0x10],edx
  427c32:	in     al,dx
  427c33:	xchg   ebp,eax
  427c34:	loop   0x427bc4
  427c36:	jne    0x427c79
  427c38:	dec    ebx
  427c39:	adc    DWORD PTR [eax-0x6e],0xffffff83
  427c3d:	push   ss
  427c3e:	inc    esp
  427c40:	sub    eax,0x3fd43457
  427c45:	pop    ecx
  427c46:	enter  0x464d,0x3a
  427c4a:	dec    edx
  427c4b:	push   esi
  427c4c:	mov    ds:0xe589454c,eax
  427c51:	adc    esi,DWORD PTR [eax-0x3a242977]
  427c57:	adc    DWORD PTR [ebp+0xb47644e],edx
  427c5d:	jmp    0x427c8d
  427c5f:	dec    ebp
  427c60:	add    DWORD PTR [ebx],ebp
  427c62:	jecxz  0x427c07
  427c64:	adc    esp,DWORD PTR [edi-0x28f9dbe3]
  427c6a:	sub    al,BYTE PTR [esi+0x3545c1ba]
  427c70:	cli    
  427c71:	test   DWORD PTR [edx+0x78],ebx
  427c74:	xor    DWORD PTR [edi],ebx
  427c76:	pop    edx
  427c77:	fcomip st,st(2)
  427c79:	(bad)  
  427c7a:	in     al,dx
  427c7b:	repnz add BYTE PTR [edx+0x30],ch
  427c7f:	or     esi,DWORD PTR [ecx]
  427c81:	cdq    
  427c82:	dec    esp
  427c83:	adc    BYTE PTR [esi+0x587135a4],ah
  427c89:	push   edx
  427c8a:	xchg   esi,eax
  427c8b:	das    
  427c8c:	stos   DWORD PTR es:[edi],eax
  427c8d:	test   al,0x62
  427c8f:	inc    ebx
  427c90:	loopne 0x427cc0
  427c92:	jecxz  0x427c9f
  427c94:	sub    dl,BYTE PTR [edx]
  427c96:	sti    
  427c97:	(bad)  
  427c98:	psllq  mm6,QWORD PTR [edi+0x13]
  427c9c:	add    DWORD PTR [esi+0xe],edx
  427c9f:	mov    ch,0x1c
  427ca1:	dec    esi
  427ca2:	pop    ebp
  427ca3:	bound  ebp,QWORD PTR [eax]
  427ca5:	test   al,0xe8
  427ca7:	sbb    ch,dl
  427ca9:	cmp    edi,edi
  427cab:	push   ebp
  427cac:	sbb    eax,0x20334f99
  427cb1:	arpl   WORD PTR [edi],si
  427cb3:	imul   ebp,DWORD PTR es:[edx],0xffffffb8
  427cb7:	push   0xffffff97
  427cb9:	mov    esp,0xf4f2696c
  427cbe:	xlat   BYTE PTR ds:[ebx]
  427cbf:	jp     0x427c9f
  427cc1:	mov    edi,0x6bcf460f
  427cc6:	fs pop ebx
  427cc8:	imul   BYTE PTR [ecx+0x607c3a68]
  427cce:	xchg   edi,eax
  427ccf:	xchg   ecx,eax
  427cd0:	and    edi,DWORD PTR [ebx+0x5b]
  427cd3:	jne    0x427c88
  427cd5:	sub    DWORD PTR [ebx-0x9],edi
  427cd8:	xor    dl,BYTE PTR [ecx]
  427cda:	dec    edx
  427cdb:	repz jle 0x427c96
  427cde:	pusha  
  427cdf:	loope  0x427c72
  427ce1:	sub    al,0x4d
  427ce3:	cmp    ebx,DWORD PTR [esp+ecx*2+0x6738f47b]
  427cea:	xor    eax,0x976346c4
  427cef:	jg     0x427ce8
  427cf1:	push   ebp
  427cf2:	stos   DWORD PTR es:[edi],eax
  427cf3:	xchg   edx,eax
  427cf4:	pop    edi
  427cf5:	fs inc eax
  427cf7:	pop    ds
  427cf8:	repnz fbstp TBYTE PTR [eax+0x5cb036c2]
  427cff:	call   DWORD PTR [ebx+0x18]
  427d02:	call   0xa44b58ce
  427d07:	xchg   DWORD PTR [ecx-0x8],ebx
  427d0a:	and    dh,BYTE PTR [edi]
  427d0c:	sub    dl,dh
  427d0e:	(bad)  
  427d0f:	(bad)  
  427d10:	lahf   
  427d11:	or     DWORD PTR [edi+0x18],0xfffffff2
  427d15:	mov    ebx,0x4e304ad8
  427d1a:	loop   0x427d5d
  427d1c:	fbld   TBYTE PTR [ecx-0x274d83ba]
  427d22:	enter  0x2ab4,0xdd
  427d26:	sbb    BYTE PTR [edx],0xee
  427d29:	(bad)  
  427d2a:	xlat   BYTE PTR ds:[ebx]
  427d2b:	ret    0x5c7
  427d2e:	push   ecx
  427d2f:	loop   0x427d3d
  427d31:	mov    eax,0x79a1e14
  427d36:	sub    eax,0xd2e6557c
  427d3b:	daa    
  427d3c:	mov    al,ds:0xb347ec0f
  427d41:	je     0x427cd8
  427d43:	fidiv  WORD PTR [edx]
  427d45:	fadd   st(4),st
  427d47:	into   
  427d48:	popa   
  427d49:	cmc    
  427d4a:	je     0x427d46
  427d4c:	cmp    al,ah
  427d4e:	and    bl,BYTE PTR [edi+ebx*8-0x51]
  427d52:	push   eax
  427d53:	sti    
  427d54:	retf   0xdd55
  427d57:	cmp    eax,0x89eecbde
  427d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d5d:	xor    ebx,DWORD PTR [edx+0x21f83463]
  427d63:	dec    edi
  427d64:	jmp    0x6b742f95
  427d69:	push   0x5564dc03
  427d6e:	dec    esp
  427d6f:	pop    esi
  427d70:	repz xlat BYTE PTR ds:[ebx]
  427d72:	sub    BYTE PTR [edx-0x4d],ch
  427d75:	dec    esp
  427d76:	stc    
  427d77:	dec    ebx
  427d78:	mov    WORD PTR [ebx+0x4fd9b8ae],?
  427d7e:	call   0xe084:0xcee866bf
  427d85:	mov    ds:0xb61a20bb,eax
  427d8a:	pop    es
  427d8b:	xchg   edx,eax
  427d8c:	cdq    
  427d8d:	fisub  DWORD PTR [eax+0x1ecb6c65]
  427d93:	xlat   BYTE PTR ds:[ebx]
  427d94:	aam    0xcd
  427d96:	xor    ebp,esi
  427d98:	cwde   
  427d99:	and    edx,esp
  427d9b:	jb     0x427d33
  427d9d:	jg     0x427d47
  427d9f:	mov    edi,0xcafdcf53
  427da4:	frstor [ebx-0x79bceba1]
  427daa:	loope  0x427da1
  427dac:	fsub   QWORD PTR [ecx]
  427dae:	adc    al,0x96
  427db0:	mov    ebx,0x6e0f5456
  427db5:	xchg   ebx,ebp
  427db7:	and    DWORD PTR [esi],0x1d
  427dba:	push   ecx
  427dbb:	leave  
  427dbc:	popa   
  427dbd:	pop    ecx
  427dbe:	ret    0xa4ab
  427dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dc2:	cmp    bl,BYTE PTR [eax]
  427dc4:	mov    edx,0xa63495ab
  427dc9:	dec    edi
  427dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dcb:	imul   esi,DWORD PTR [ebp+0x509fdb97],0xe81c66fd
  427dd5:	pop    ecx
  427dd6:	aaa    
  427dd7:	fld    QWORD PTR [eax+0xe915d15]
  427ddd:	cmp    BYTE PTR [eax],cl
  427ddf:	cmp    al,0x15
  427de1:	cmp    al,0xa9
  427de3:	sub    ecx,edx
  427de5:	mov    eax,0x6355baf8
  427dea:	xchg   ebx,eax
  427deb:	adc    al,0xb7
  427ded:	dec    esi
  427dee:	push   ds
  427def:	add    al,0xbc
  427df1:	fistp  DWORD PTR [eax]
  427df3:	push   ds
  427df4:	icebp  
  427df5:	loopne 0x427db8
  427df7:	inc    esi
  427df8:	add    eax,0xf7cd7e3a
  427dfd:	xor    dh,BYTE PTR cs:[eax*1-0x3f249d62]
  427e05:	stos   DWORD PTR es:[edi],eax
  427e06:	or     eax,0x85f64121
  427e0b:	mov    bl,BYTE PTR [eax+0x23]
  427e0e:	adc    al,0x7f
  427e10:	mov    WORD PTR [edi-0x248c6c70],fs
  427e16:	mov    edx,0xd90b785d
  427e1b:	xor    BYTE PTR [ebx],0xe0
  427e1e:	lods   eax,DWORD PTR ds:[esi]
  427e1f:	ror    al,cl
  427e21:	mov    edi,0x4d7f8ea5
  427e26:	adc    al,0x17
  427e28:	cdq    
  427e29:	jae    0x427e8a
  427e2b:	pop    esi
  427e2c:	je     0x427ddb
  427e2e:	out    0x80,eax
  427e30:	and    esi,0x69
  427e33:	jo     0x427eac
  427e35:	sbb    bl,BYTE PTR [ecx-0x2e]
  427e38:	clc    
  427e39:	xor    eax,0xced0882b
  427e3e:	pop    ebx
  427e3f:	mov    ds:0x62c5d203,eax
  427e44:	int3   
  427e45:	lods   al,BYTE PTR ds:[esi]
  427e46:	xor    DWORD PTR [ecx-0x6e],esp
  427e49:	mov    dh,dl
  427e4b:	lds    ecx,FWORD PTR [ecx-0x5ecd5fef]
  427e51:	addr16 pop ebp
  427e53:	test   DWORD PTR [ebx],edi
  427e55:	cmp    eax,0x6a0be85
  427e5a:	xchg   esi,eax
  427e5b:	pop    esp
  427e5c:	ja     0x427e1b
  427e5e:	mov    eax,0x657d54a7
  427e63:	pop    edi
  427e64:	retf   0xcff9
  427e67:	shl    DWORD PTR [edi],0x40
  427e6a:	test   eax,0x4bb5795b
  427e6f:	out    dx,eax
  427e70:	(bad)  
  427e72:	or     BYTE PTR [edx],dl
  427e74:	in     eax,dx
  427e75:	xchg   edx,eax
  427e76:	pop    ebx
  427e77:	jb     0x427ee8
  427e79:	or     eax,0xb0aa02d3
  427e7e:	out    dx,eax
  427e7f:	jb     0x427e96
  427e81:	dec    ebp
  427e82:	sbb    eax,0x37162302
  427e87:	fisubr DWORD PTR [eax-0x8]
  427e8a:	bound  esp,QWORD PTR ds:0x6b73ac42
  427e90:	(bad)  
  427e91:	aad    0xc6
  427e93:	inc    ah
  427e95:	sti    
  427e96:	mov    ecx,0xa7250e0
  427e9b:	sbb    DWORD PTR [edi],esi
  427e9d:	pop    edi
  427e9e:	dec    edi
  427e9f:	sub    al,0xeb
  427ea1:	repz cdq 
  427ea3:	mov    eax,0x692cb7e3
  427ea8:	shl    edx,cl
  427eaa:	mov    ebp,DWORD PTR [edi+0x16]
  427ead:	sbb    ebx,DWORD PTR [edi+0x776410ad]
  427eb3:	popf   
  427eb4:	jmp    0x427e70
  427eb6:	mov    eax,0x3a0fcdb4
  427ebb:	lods   al,BYTE PTR gs:[esi]
  427ebd:	sub    dh,ah
  427ebf:	or     dl,dh
  427ec1:	cmp    eax,DWORD PTR [ecx+0x6ab85df]
  427ec7:	or     ebx,DWORD PTR [ebx+esi*4-0x28]
  427ecb:	adc    al,0xe0
  427ecd:	div    DWORD PTR [eax]
  427ecf:	(bad)  
  427ed0:	fwait
  427ed1:	repnz xor esp,DWORD PTR es:[ebp-0x77]
  427ed6:	mov    cl,BYTE PTR [edx-0xa]
  427ed9:	push   ss
  427eda:	cmp    cl,BYTE PTR [ebx+0x7893bc19]
  427ee0:	mov    ss,WORD PTR ds:0xab24bd81
  427ee6:	push   edx
  427ee7:	loop   0x427ef3
  427ee9:	lock shl ecx,1
  427eec:	inc    edx
  427eed:	outs   dx,DWORD PTR ds:[esi]
  427eee:	sub    edi,esi
  427ef0:	fidiv  DWORD PTR [edx+0x28]
  427ef3:	xchg   esi,eax
  427ef4:	int3   
  427ef5:	mov    edi,0xac12880f
  427efa:	int    0x28
  427efc:	adc    BYTE PTR [ecx-0x5c],bh
  427eff:	mov    esi,0x9d86645d
  427f04:	cmp    ebp,DWORD PTR [ebp+0xc6b85a2]
  427f0a:	push   ebp
  427f0b:	xchg   edi,eax
  427f0c:	xor    eax,0x20180093
  427f11:	retf   
  427f12:	test   al,0x4b
  427f14:	push   edi
  427f15:	push   edi
  427f16:	xchg   BYTE PTR [esi+0xe],cl
  427f19:	rcl    BYTE PTR [eax],cl
  427f1b:	xlat   BYTE PTR ds:[ebx]
  427f1c:	or     BYTE PTR [ebp+0x31bd2cb4],dl
  427f22:	and    BYTE PTR [esi-0x391ec7cf],cl
  427f28:	adc    edx,ecx
  427f2a:	daa    
  427f2b:	sar    BYTE PTR [edx+0x5c208335],1
  427f31:	jae    0x427efc
  427f33:	bound  ebp,QWORD PTR [eax]
  427f35:	iret   
  427f36:	add    al,0xc0
  427f38:	push   ebp
  427f39:	add    eax,0xcc89335
  427f3e:	rcr    ecx,cl
  427f40:	mov    ds:0xeb48ac2a,al
  427f45:	push   ebx
  427f46:	xor    BYTE PTR [eax+0x433d6044],cl
  427f4c:	push   edx
  427f4d:	xchg   BYTE PTR [esi],ch
  427f4f:	push   ecx
  427f50:	clc    
  427f51:	jecxz  0x427f1a
  427f53:	adc    esi,DWORD PTR [edx-0x201b1609]
  427f59:	mov    esi,0x7a4ff659
  427f5e:	pop    ecx
  427f5f:	sbb    al,BYTE PTR [edi-0x5a]
  427f62:	cmp    ecx,DWORD PTR [edx-0x1bd4a1d2]
  427f68:	(bad)  
  427f69:	fisub  DWORD PTR [edx+0x47]
  427f6c:	cli    
  427f6d:	pop    ebx
  427f6e:	push   esp
  427f6f:	jmp    0xb88b:0xb516122
  427f76:	and    ecx,esi
  427f78:	mov    edx,0xed1af560
  427f7d:	mov    WORD PTR ds:0xe262e3ab,cs
  427f83:	ins    BYTE PTR es:[edi],dx
  427f84:	jmp    0x34e3:0x7782d84e
  427f8b:	jnp    0x427fee
  427f8d:	mov    eax,0xaf465a3e
  427f92:	lods   ax,WORD PTR ds:[esi]
  427f94:	adc    DWORD PTR [ecx-0x16],edx
  427f97:	arpl   WORD PTR [ecx],di
  427f99:	ficomp DWORD PTR [ebx]
  427f9b:	pushf  
  427f9c:	jl     0x427f62
  427f9e:	pop    es
  427f9f:	mov    esp,0xb073a2ba
  427fa4:	sbb    al,0xa0
  427fa6:	and    esi,DWORD PTR [ecx]
  427fa8:	or     dh,BYTE PTR [ecx+eax*8-0x4c]
  427fac:	push   es
  427fad:	cmp    DWORD PTR [ebx+0x4b99afb7],eax
  427fb3:	hlt    
  427fb4:	and    DWORD PTR [edi],edi
  427fb6:	scas   al,BYTE PTR es:[edi]
  427fb7:	(bad)  
  427fb9:	jnp    0x427fea
  427fbb:	mov    ecx,DWORD PTR [edx-0x32c17db8]
  427fc1:	xchg   edi,eax
  427fc2:	rol    DWORD PTR [eax+0x30],1
  427fc5:	test   DWORD PTR [edx+ebp*2-0x74],eax
  427fc9:	jo     0x427f63
  427fcb:	arpl   WORD PTR [eax-0x7],ax
  427fce:	lahf   
  427fcf:	mov    ah,0x63
  427fd1:	inc    ebp
  427fd2:	retf   0x230c
  427fd5:	out    0xa,eax
  427fd7:	jmp    0xd352:0x79ab298
  427fde:	cmc    
  427fdf:	lock mov WORD PTR [edi-0x7b],ds
  427fe3:	dec    eax
  427fe4:	inc    ebp
  427fe5:	fidivr WORD PTR [esi+0x9f9da00]
  427feb:	das    
  427fec:	jge    0x427fb7
  427fee:	mov    edi,DWORD PTR [ebx]
  427ff0:	rol    BYTE PTR [edx+0x3c852078],0x57
  427ff7:	popa   
  427ff8:	push   es
  427ff9:	sbb    al,0x12
  427ffb:	out    0x97,al
  427ffd:	hlt    
  427ffe:	fild   DWORD PTR [ecx]
  428000:	in     eax,dx
  428001:	imul   edi,ebp,0x24
  428004:	jo     0x428073
  428006:	out    0xb7,eax
  428008:	xchg   ecx,eax
  428009:	adc    DWORD PTR [ebp+0x0],edi
  42800c:	mov    al,ds:0x6cc2fa6c
  428011:	cwde   
  428012:	mov    edx,DWORD PTR [esi+0x50]
  428015:	dec    edx
  428016:	mov    WORD PTR [ebx-0x1c],ss
  428019:	fild   WORD PTR [edx-0x46baf027]
  42801f:	imul   esi,edx,0xe284f1ee
  428025:	sbb    eax,0x6c75da3a
  42802a:	jl     0x428012
  42802c:	xor    ebp,eax
  42802e:	sahf   
  42802f:	mov    dh,0x27
  428031:	pusha  
  428032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428033:	cmp    DWORD PTR ds:0x81000d28,esi
  428039:	pop    es
  42803a:	cmp    al,cl
  42803c:	scas   al,BYTE PTR es:[edi]
  42803d:	cmp    al,0xee
  42803f:	mov    ?,esi
  428041:	mov    bh,0xba
  428043:	and    eax,0x568de6f5
  428048:	push   0x26
  42804a:	je     0x427feb
  42804c:	js     0x42802b
  42804e:	sub    al,0x0
  428050:	ror    cl,0x87
  428053:	xchg   edx,eax
  428054:	pop    ebx
  428055:	aad    0x59
  428057:	jg     0x427fe7
  428059:	aaa    
  42805a:	sub    al,0x4a
  42805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42805d:	mov    ds:0x5cdf173b,eax
  428062:	ss int 0xc9
  428065:	cmp    al,BYTE PTR [ebx]
  428067:	nop
  428068:	dec    ebx
  428069:	adc    eax,0x827db397
  42806e:	ret    0xab57
  428071:	cmp    ah,dh
  428073:	pushf  
  428074:	pop    ebp
  428075:	jecxz  0x428098
  428077:	cmp    BYTE PTR [eax+0x66],bh
  42807a:	cmp    cl,dh
  42807c:	(bad)  
  42807d:	bound  ecx,QWORD PTR [edx]
  42807f:	cmp    DWORD PTR [ecx+0x57],eax
  428082:	ret    0xbc4d
  428085:	imul   eax,DWORD PTR [ecx-0x4214e706],0xffffff90
  42808c:	test   esi,eax
  42808e:	jmp    0xc92a:0x8c340921
  428095:	and    eax,0xef8c5251
  42809a:	sub    eax,0x851959c9
  42809f:	mov    dh,dh
  4280a1:	adc    BYTE PTR [ecx-0x23],ch
  4280a4:	ja     0x4280dd
  4280a6:	and    al,0x3a
  4280a8:	jmp    0xb8d48a99
  4280ad:	push   ss
  4280ae:	or     eax,0x14def0dd
  4280b3:	sahf   
  4280b4:	add    BYTE PTR [ebx],cl
  4280b6:	hlt    
  4280b7:	sbb    DWORD PTR [eax+0x5905a7a5],eax
  4280bd:	push   ss
  4280be:	xor    eax,0x569b5931
  4280c3:	in     eax,dx
  4280c4:	mov    esi,0x3cb241ac
  4280c9:	mov    dl,0x95
  4280cb:	push   ds
  4280cc:	lahf   
  4280cd:	xor    ebx,ebx
  4280cf:	jmp    0x4280fd
  4280d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280d2:	and    ah,ch
  4280d4:	inc    ebp
  4280d5:	pop    ecx
  4280d6:	pop    es
  4280d7:	xchg   edi,eax
  4280d8:	loopne 0x428064
  4280da:	popf   
  4280db:	cld    
  4280dc:	sub    eax,0x0
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x1cd89742]
  4280ef:	inc    edx
  4280f0:	xor    eax,0x1f87af4
  4280f5:	add    bl,dh
  4280f7:	add    al,0x0
  4280f9:	add    BYTE PTR [eax-0x2],dh
  4280fc:	sub    DWORD PTR [ebx+0x8],ebx
  4280ff:	inc    esi
  428100:	pop    edi
  428101:	jecxz  0x428085
  428103:	mov    eax,0x8ab86b25
  428108:	pop    ss
  428109:	rcr    BYTE PTR [ecx+0x13],cl
  42810c:	fwait
  42810d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42810e:	cmp    eax,0x164afb25
  428113:	aam    0x62
  428115:	nop
  428116:	loope  0x4280eb
  428118:	xor    al,0x13
  42811a:	adc    ch,BYTE PTR [esi+eiz*8-0x39]
  42811e:	ds dec eax
  428120:	and    ebp,esi
  428122:	jge    0x4280bf
  428124:	call   0x61b765b1
  428129:	push   0x6f
  42812b:	adc    BYTE PTR gs:[eax+0x2e84715c],0xa7
  428133:	sar    BYTE PTR [ebx-0x11],1
  428136:	xchg   esi,eax
  428137:	xlat   BYTE PTR ds:[ebx]
  428138:	sbb    eax,0x76170702
  42813d:	jbe    0x42818d
  42813f:	jb     0x428138
  428141:	and    BYTE PTR [ebx],0xb2
  428144:	hlt    
  428145:	daa    
  428146:	jp     0x42813a
  428148:	push   ss
  428149:	xor    dl,BYTE PTR [edi+0x31]
  42814c:	les    eax,FWORD PTR [esi]
  42814e:	retf   0x857d
  428151:	and    DWORD PTR [ebx],edi
  428153:	shr    esp,cl
  428155:	rcl    BYTE PTR [ecx-0x6a],1
  428158:	xchg   ecx,eax
  428159:	test   al,0x21
  42815b:	js     0x42814d
  42815d:	xor    edx,ecx
  42815f:	cmp    cl,ah
  428161:	sti    
  428162:	sbb    edx,ebx
  428164:	pop    ecx
  428165:	mov    eax,0xc0ae6d53
  42816a:	adc    dh,cl
  42816c:	aas    
  42816d:	mov    al,ds:0x67f21e53
  428172:	mov    al,ds:0x4fd0bad4
  428177:	sub    al,0xa
  428179:	cmp    al,0x96
  42817b:	neg    BYTE PTR [ebx+ecx*4]
  42817e:	dec    ecx
  42817f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  428181:	xchg   DWORD PTR [edi-0x58c45b5b],esi
  428187:	xor    ch,dh
  428189:	and    bl,BYTE PTR [esi]
  42818b:	sub    dl,BYTE PTR [ebp+0x7ad0beaf]
  428191:	xchg   edi,eax
  428192:	sub    DWORD PTR ds:0xf6f4f5d6,esp
  428198:	scas   al,BYTE PTR es:[edi]
  428199:	icebp  
  42819a:	mov    bh,0xe6
  42819c:	outs   dx,DWORD PTR ds:[esi]
  42819d:	cld    
  42819e:	(bad)
  4281a1:	clc    
  4281a2:	jbe    0x428183
  4281a4:	push   esi
  4281a5:	call   0x43af:0x332a4ba5
  4281ac:	into   
  4281ad:	lahf   
  4281ae:	sti    
  4281af:	dec    edx
  4281b0:	dec    ecx
  4281b1:	xchg   ecx,eax
  4281b2:	rol    cl,1
  4281b4:	mov    fs,WORD PTR ds:0x63dced86
  4281ba:	repnz xchg ecx,eax
  4281bc:	push   0xd32df283
  4281c1:	and    bh,BYTE PTR [eax]
  4281c3:	mov    esp,0x52d8023c
  4281c8:	bnd addr16 jmp 0x9d3dc069
  4281cf:	jle    0x4281ff
  4281d1:	or     DWORD PTR [ebx-0x39],ecx
  4281d4:	cmp    eax,0xc49868d0
  4281d9:	hlt    
  4281da:	lahf   
  4281db:	pop    ebx
  4281dc:	and    DWORD PTR [ecx+0x33ce33ab],edi
  4281e2:	mov    edx,0x763e87ee
  4281e7:	xor    al,0xfc
  4281e9:	lahf   
  4281ea:	(bad)  
  4281eb:	jae    0x42822d
  4281ed:	jg     0x4281d4
  4281ef:	pop    es
  4281f0:	adc    BYTE PTR [ebx+ebx*8+0x403cefef],cl
  4281f7:	dec    edx
  4281f8:	jle    0x428227
  4281fa:	fisttp WORD PTR [edx]
  4281fc:	ins    BYTE PTR es:[edi],dx
  4281fd:	(bad)  
  4281fe:	test   DWORD PTR ds:0xac91b506,0x60ea49b0
  428208:	add    al,0x49
  42820a:	cli    
  42820b:	sti    
  42820c:	stos   DWORD PTR es:[edi],eax
  42820d:	push   0xffffffb7
  42820f:	sbb    esi,edx
  428211:	(bad)  
  428213:	mov    eax,edi
  428215:	jg     0x428200
  428217:	jns    0x428254
  428219:	jnp    0x4281bc
  42821b:	xchg   ecx,eax
  42821c:	pop    eax
  42821d:	cmp    ch,BYTE PTR [ebx-0x44]
  428220:	push   ss
  428221:	mov    al,0xbf
  428223:	fmulp  st(3),st
  428225:	cmc    
  428226:	sub    DWORD PTR [ebp+ebx*8+0x46],ecx
  42822a:	out    0xc5,eax
  42822c:	(bad)
  42822f:	ret    
  428230:	imul   ecx,esp,0xc7bcfe64
  428236:	jbe    0x428219
  428238:	mov    al,0x30
  42823a:	pusha  
  42823b:	lea    edx,[edi-0x2d]
  42823e:	jae    0x4282b7
  428240:	mov    edx,DWORD PTR [edi]
  428242:	sbb    eax,0x34368d29
  428247:	imul   eax,esi,0x35
  42824a:	lahf   
  42824b:	push   eax
  42824c:	inc    ecx
  42824d:	fsub   QWORD PTR [ebp-0x6d287020]
  428253:	jecxz  0x42822a
  428255:	ret    
  428256:	cdq    
  428257:	add    BYTE PTR [esi+0x48],ah
  42825a:	mov    ds:0xd62288b0,al
  42825f:	mov    ch,0xda
  428261:	lahf   
  428262:	ret    0x11e2
  428265:	push   ecx
  428266:	(bad)  
  428267:	inc    edx
  428268:	fsub   QWORD PTR [ecx-0x28f606b0]
  42826e:	add    al,0x60
  428270:	outs   dx,BYTE PTR ds:[esi]
  428271:	scas   eax,DWORD PTR es:[edi]
  428272:	ret    
  428273:	ss lock test eax,0x920cf5ec
  42827a:	sbb    al,0x45
  42827c:	add    al,0xce
  42827e:	repnz push esp
  428280:	das    
  428281:	add    DWORD PTR [ecx+ebp*1],0x3f
  428285:	sub    bh,dl
  428287:	shl    DWORD PTR [ebx-0x78],0x3c
  42828b:	scas   al,BYTE PTR es:[edi]
  42828c:	loopne 0x428218
  42828e:	out    dx,al
  42828f:	aaa    
  428290:	mov    ebx,0x7a0ce1c0
  428295:	rol    eax,0x76
  428298:	ret    0x8116
  42829b:	ds pop esp
  42829d:	mov    ecx,0xce1d3007
  4282a2:	mov    ebp,0xb8b93ba0
  4282a7:	hlt    
  4282a8:	mov    al,ds:0xf6207dba
  4282ad:	inc    esi
  4282ae:	lea    esi,[eax+0x6d]
  4282b1:	mov    ecx,0x46d1029a
  4282b6:	adc    esp,DWORD PTR [ebx-0x5c]
  4282b9:	adc    al,BYTE PTR [ebx+0x79]
  4282bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282bd:	inc    ecx
  4282be:	je     0x4282db
  4282c0:	enter  0x3550,0x49
  4282c4:	in     al,dx
  4282c5:	mov    ds:0x7102a3a9,al
  4282ca:	jno    0x4282e1
  4282cc:	pop    edx
  4282cd:	leave  
  4282ce:	pusha  
  4282cf:	inc    ebx
  4282d0:	push   edx
  4282d1:	ins    DWORD PTR es:[edi],dx
  4282d2:	jmp    0x428271
  4282d4:	out    dx,al
  4282d5:	pop    esp
  4282d6:	or     al,0x83
  4282d8:	xor    al,0x4c
  4282da:	retf   
  4282db:	jmp    0xb1c72b8
  4282e0:	js     0x428283
  4282e2:	aas    
  4282e3:	outs   dx,BYTE PTR ds:[esi]
  4282e4:	sar    BYTE PTR [ecx-0x77],cl
  4282e7:	test   al,0x8
  4282e9:	in     eax,0xb4
  4282eb:	daa    
  4282ec:	push   edx
  4282ed:	pusha  
  4282ee:	fisttp QWORD PTR [esi+0x7cc8327e]
  4282f4:	(bad)  [eax-0x1d]
  4282f7:	xchg   DWORD PTR [ebx],esi
  4282f9:	push   0xf10e5d77
  4282fe:	das    
  4282ff:	lea    edi,[edi+0x50]
  428302:	ja     0x42836a
  428304:	push   edx
  428305:	push   edx
  428306:	sbb    cl,BYTE PTR [ecx+0x1f]
  428309:	pop    ss
  42830a:	pop    ds
  42830b:	and    eax,0xb5763b78
  428310:	xchg   edx,eax
  428311:	(bad)  
  428312:	push   edx
  428313:	sbb    ebx,DWORD PTR [eax-0x63]
  428316:	or     al,0x27
  428318:	adc    eax,0x4c63911
  42831d:	add    esp,0xa38b6a16
  428323:	mov    edi,0x8bbebc09
  428328:	ror    BYTE PTR [eax-0x36e57f0c],1
  42832e:	or     dh,al
  428330:	cmp    eax,DWORD PTR [ebx+ebp*1]
  428333:	pop    ss
  428334:	imul   esi,DWORD PTR [edx-0x6e],0x5b7320e5
  42833b:	(bad)  
  42833d:	es jb  0x4282c6
  428340:	add    BYTE PTR [eax-0x648f368c],bl
  428346:	test   DWORD PTR [esi+0x4],ebx
  428349:	or     bh,BYTE PTR [ebp+0x5dc4c729]
  42834f:	xor    BYTE PTR [ebx-0xe],dl
  428352:	jae    0x4283c5
  428354:	sbb    DWORD PTR [edi+esi*8-0x4d],0xa491325d
  42835c:	rcr    BYTE PTR [edx+0x2c],0x73
  428360:	std    
  428361:	cmp    eax,0xc9ad89e0
  428366:	add    dl,BYTE PTR [ebp-0x27]
  428369:	mov    BYTE PTR [ebp-0x6e],dh
  42836c:	push   esi
  42836d:	sub    eax,0x8f9afcd4
  428372:	fcomp  QWORD PTR [ecx-0x75]
  428375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428376:	test   al,0x7b
  428378:	jbe    0x428360
  42837a:	dec    ecx
  42837b:	ss dec edi
  42837d:	push   esp
  42837e:	sbb    eax,DWORD PTR [eax+0x55c2aab]
  428384:	(bad)  
  428386:	add    eax,0x9ea9c85
  42838b:	ror    DWORD PTR [esi],0x36
  42838e:	stos   DWORD PTR es:[edi],eax
  42838f:	and    al,0x48
  428391:	pop    ebx
  428392:	jmp    0x6011:0x8ae65f5e
  428399:	cmp    dh,al
  42839b:	(bad)  
  42839c:	repnz mov cl,0xc
  42839f:	xchg   DWORD PTR [eax+0x6a0ebc56],esp
  4283a5:	add    al,0xbd
  4283a7:	loop   0x42836d
  4283a9:	jbe    0x4283d7
  4283ab:	add    DWORD PTR [ebp+0x258edb48],ebx
  4283b1:	dec    edx
  4283b2:	lods   al,BYTE PTR ds:[esi]
  4283b3:	push   esp
  4283b4:	sub    ch,al
  4283b6:	jmp    0x2ef8:0x57231101
  4283bd:	dec    ebx
  4283be:	mov    ah,BYTE PTR [ebp-0x5e]
  4283c1:	cld    
  4283c2:	sub    ch,bh
  4283c4:	add    al,0xc8
  4283c6:	adc    DWORD PTR [ebx+edx*2+0x10],edi
  4283ca:	cli    
  4283cb:	lods   eax,DWORD PTR ds:[esi]
  4283cc:	push   es
  4283cd:	dec    esp
  4283ce:	sti    
  4283cf:	test   eax,0xb4559496
  4283d4:	jecxz  0x4283e3
  4283d6:	je     0x4283e9
  4283d8:	ret    0x4508
  4283db:	pop    ecx
  4283dc:	les    esi,FWORD PTR [ebx+0x72cb555e]
  4283e2:	push   0x1f
  4283e4:	mov    ds:0xc26b6b49,eax
  4283e9:	test   DWORD PTR [edi+esi*8+0x3a],edx
  4283ed:	cmp    eax,0x1c1c06a1
  4283f2:	mov    ecx,0x4c27d98b
  4283f7:	lods   eax,DWORD PTR ds:[esi]
  4283f8:	stos   DWORD PTR es:[edi],eax
  4283f9:	xchg   edi,eax
  4283fa:	shr    ah,cl
  4283fc:	fidivr WORD PTR [edx-0x3a]
  4283ff:	xor    al,0x25
  428401:	je     0x428444
  428403:	hlt    
  428404:	and    eax,0x7065e88c
  428409:	push   edi
  42840a:	adc    dh,0xa
  42840d:	push   eax
  42840e:	pop    ebx
  42840f:	in     al,dx
  428410:	jmp    0x428431
  428412:	push   ecx
  428413:	dec    eax
  428414:	out    0x20,eax
  428416:	jl     0x4283f5
  428418:	ror    DWORD PTR [esi],1
  42841a:	call   0xd156:0x935e691b
  428421:	cmp    BYTE PTR [ebx],bh
  428423:	pushf  
  428424:	mov    cl,0xa
  428426:	jmp    0x4f2aaa05
  42842b:	loope  0x4283bc
  42842d:	int    0x62
  42842f:	mov    WORD PTR [ecx-0x4d5305c2],gs
  428435:	hlt    
  428436:	jb     0x428453
  428438:	inc    esp
  428439:	ss aas 
  42843b:	pop    es
  42843c:	pop    ebp
  42843d:	mov    ebp,0x74684939
  428442:	jg     0x428430
  428444:	mov    al,ds:0x8e0bd08d
  428449:	shl    DWORD PTR ds:[edi+0x404203e7],cl
  428450:	adc    eax,0x5d940b7f
  428455:	lea    edx,[edi-0x7]
  428458:	push   ecx
  428459:	mov    ebx,0x459de7c1
  42845e:	sub    BYTE PTR [ecx],al
  428460:	push   0x5cbad7bc
  428465:	mov    BYTE PTR [edi],0xa9
  428468:	adc    bl,BYTE PTR [ecx-0x696f9473]
  42846e:	xor    eax,0x4afde222
  428473:	sub    al,0xd0
  428475:	fs es dec ebp
  428478:	test   esp,edi
  42847a:	dec    DWORD PTR [edi+0x5cc2a61f]
  428480:	xchg   DWORD PTR [edx-0x74],esi
  428483:	sub    BYTE PTR [esi],dh
  428485:	sbb    DWORD PTR [ebx],esp
  428487:	dec    eax
  428488:	push   es
  428489:	test   BYTE PTR [esp+ebx*2+0x4fe5a3fc],bh
  428490:	mov    WORD PTR [edi-0x50],ss
  428493:	and    ecx,esp
  428495:	aas    
  428496:	clc    
  428497:	mov    dl,0xbe
  428499:	mov    ds,WORD PTR [ecx-0x38605589]
  42849f:	mov    DWORD PTR [edi],0x8926810d
  4284a5:	mov    al,0xe8
  4284a7:	ror    ecx,cl
  4284a9:	jne    0x428470
  4284ab:	jge    0x428480
  4284ad:	jl     0x42851b
  4284af:	xchg   esp,eax
  4284b0:	aas    
  4284b1:	push   ss
  4284b2:	adc    esi,DWORD PTR [ebx+0x13]
  4284b5:	cmp    cl,BYTE PTR [eax-0x5e06daab]
  4284bb:	(bad)  
  4284bc:	nop
  4284bd:	mov    cl,0x3e
  4284bf:	call   0x48a2712
  4284c4:	enter  0x6441,0x78
  4284c8:	iret   
  4284c9:	xchg   edi,eax
  4284ca:	ror    dh,cl
  4284cc:	test   DWORD PTR es:0x2beba85c,ebp
  4284d3:	ins    DWORD PTR es:[edi],dx
  4284d4:	and    al,0xf0
  4284d6:	or     al,0x55
  4284d8:	outs   dx,BYTE PTR ds:[esi]
  4284d9:	xchg   ebx,eax
  4284da:	call   0xaa068392
  4284df:	jnp    0x42854c
  4284e1:	jo     0x428529
  4284e3:	fimul  WORD PTR ds:0x9eb9e8ae
  4284e9:	xor    cl,ch
  4284eb:	mov    edi,fs
  4284ed:	and    al,0x10
  4284ef:	xchg   edx,eax
  4284f0:	xchg   ebp,eax
  4284f1:	clc    
  4284f2:	lds    edx,FWORD PTR [ebp+0x10d733a8]
  4284f8:	pop    ds
  4284f9:	arpl   WORD PTR [esi+0x5855cfe4],di
  4284ff:	sub    ebx,ebx
  428501:	mov    ch,0x51
  428503:	and    al,0xc7
  428505:	scas   eax,DWORD PTR es:[edi]
  428506:	jbe    0x4284a9
  428508:	mov    edx,0x12042e3d
  42850d:	loopne 0x4284ca
  42850f:	pop    eax
  428511:	lahf   
  428512:	inc    eax
  428513:	mov    ch,0x86
  428515:	sbb    al,0x32
  428517:	mov    ds:0xfd5e0778,eax
  42851c:	xchg   BYTE PTR [ecx-0x66],al
  42851f:	icebp  
  428520:	mov    edi,0xe62b81d3
  428525:	cwde   
  428526:	lahf   
  428527:	sbb    esp,DWORD PTR [esi+0x4d657460]
  42852d:	popa   
  42852e:	inc    eax
  42852f:	add    ebx,ecx
  428531:	push   cs
  428532:	mov    bl,0xad
  428534:	xor    BYTE PTR [edx],ah
  428536:	lods   al,BYTE PTR ds:[esi]
  428537:	lods   al,BYTE PTR ds:[esi]
  428538:	gs jle 0x428577
  42853b:	and    eax,0xe06224a4
  428540:	adc    al,0xb7
  428542:	xor    DWORD PTR [esi-0x68257478],edi
  428548:	xor    eax,0x3343b9eb
  42854d:	(bad)  
  42854f:	loop   0x4285d0
  428551:	repz aam 0x9c
  428554:	adc    edi,edx
  428556:	or     al,ch
  428558:	mov    ds,WORD PTR [ebp-0x1d]
  42855b:	(bad)  
  42855c:	hlt    
  42855d:	xchg   edi,eax
  42855e:	jne    0x42854d
  428560:	sub    eax,ebx
  428562:	ins    DWORD PTR es:[edi],dx
  428563:	mov    ch,0xeb
  428565:	scas   eax,DWORD PTR es:[edi]
  428566:	and    esp,eax
  428568:	sbb    eax,0xc2a33f3e
  42856d:	push   ebx
  42856e:	arpl   WORD PTR [edi+0x60],si
  428571:	stos   DWORD PTR es:[edi],eax
  428572:	jae    0x4285d4
  428574:	retf   0x1992
  428577:	pop    edx
  428578:	loope  0x42852a
  42857a:	jbe    0x428525
  42857c:	enter  0xe1c1,0x8b
  428580:	in     eax,dx
  428581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428582:	sahf   
  428583:	mov    eax,ds:0xc62f680c
  428588:	pop    esi
  428589:	cwde   
  42858a:	inc    edi
  42858b:	mov    ah,BYTE PTR [esi]
  42858d:	mov    WORD PTR [edi+0x38],es
  428590:	aam    0xb2
  428592:	cmp    BYTE PTR [ebp-0x1e],dl
  428595:	fdivp  st(6),st
  428597:	ss adc al,0xda
  42859a:	xchg   ebp,eax
  42859b:	sbb    DWORD PTR [ebx+0x6209c396],0xd1d8bdb0
  4285a5:	xchg   esp,eax
  4285a6:	loopne 0x4285e9
  4285a8:	push   ds
  4285a9:	outs   dx,BYTE PTR ds:[esi]
  4285aa:	retf   0xfaa1
  4285ad:	ficomp DWORD PTR ds:0x6bf5fb1d
  4285b3:	jae    0x428600
  4285b5:	shl    DWORD PTR ds:0xd1172908,1
  4285bb:	mov    ebx,0x533e3f94
  4285c0:	call   FWORD PTR [esi]
  4285c2:	pop    ebp
  4285c3:	sbb    eax,0xd52902b6
  4285c8:	sub    BYTE PTR [edx],bh
  4285ca:	(bad)  
  4285cb:	dec    edx
  4285cc:	jne    0x42856d
  4285ce:	sub    eax,DWORD PTR [eax+0x5c7e3117]
  4285d4:	mov    esi,0x5f6de4a9
  4285d9:	dec    esp
  4285da:	aas    
  4285db:	pop    esp
  4285dc:	sbb    al,0xe0
  4285de:	aaa    
  4285df:	push   ds
  4285e0:	push   ecx
  4285e1:	jae    0x428648
  4285e3:	xor    DWORD PTR [esi],esp
  4285e5:	test   DWORD PTR [ebx-0x7],ecx
  4285e8:	mov    bh,0x6d
  4285ea:	jmp    0x428610
  4285ec:	add    DWORD PTR [eax],eax
  4285ee:	add    BYTE PTR [eax],al
  4285f0:	add    BYTE PTR [eax],al
  4285f2:	adc    al,BYTE PTR [eax+0x3e923e90]
  4285f8:	mov    esi,0x4cd7caac
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	nop
  4285ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428600:	gs inc ecx
  428602:	ins    DWORD PTR es:[edi],dx
  428603:	std    
  428604:	add    DWORD PTR [eax],eax
  428606:	add    al,0x0
  428608:	add    BYTE PTR [eax],al
  42860a:	cdq    
  42860b:	xor    eax,0x1152
	...
